(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTLIA)
(declare-datatypes ((x1336 0)) (((x1307 (x141 x1336) (x1091 Int)) (x1228 (x1412 Int)) (x441 (x560 x1336) (x969 x1336) (x1317 Int)))))
(declare-fun x364 () Bool)
(declare-fun x956 () Bool)
(declare-fun x380 () Bool)
(declare-fun x544 () Int)
(declare-fun x477 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x1319 () Int)
(declare-fun x729 () Bool)
(declare-fun x1106 (x1336) Int)
(declare-fun x1378 () Bool)
(declare-fun x1752 () Int)
(declare-fun x200 () Int)
(declare-fun x653 () Int)
(declare-fun x95 () Int)
(declare-fun x85 () Int)
(declare-fun x1320 () Int)
(declare-fun x804 (Int) x1336)
(declare-fun x1085 () Int)
(declare-fun x834 () Int)
(declare-fun x298 () Bool)
(declare-fun x228 () Int)
(declare-fun x1382 () Int)
(declare-fun x509 () Int)
(declare-fun x203 () Int)
(declare-fun x1769 () Int)
(declare-fun x1087 () Bool)
(declare-fun x854 () Int)
(declare-fun x609 () Bool)
(declare-fun x1486 () x1336)
(declare-fun x677 () Bool)
(declare-fun x507 () Bool)
(declare-fun x1456 () Int)
(declare-fun x990 () Int)
(declare-fun x660 () Int)
(declare-fun x1023 () Int)
(declare-fun x1315 () Int)
(declare-fun x1501 () Int)
(declare-fun x1057 () Int)
(declare-fun x270 () Int)
(declare-fun x216 () Bool)
(declare-fun x976 () Int)
(declare-fun x606 () Int)
(declare-fun x930 () Int)
(declare-fun x398 () Int)
(declare-fun x254 () Int)
(declare-fun x1196 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x1135 () Int)
(declare-fun x989 () Int)
(declare-fun x932 () Int)
(declare-fun x523 () Int)
(declare-fun x1144 () Int)
(declare-fun x339 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x689 () Bool)
(declare-fun x1379 () Int)
(declare-fun x1024 () Int)
(declare-fun x1735 (Int) Int)
(declare-fun x586 () Int)
(declare-fun x1108 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x1136 () Int)
(declare-fun x401 () Int)
(declare-fun x599 () Int)
(declare-fun x29 () Int)
(declare-fun x316 () Int)
(declare-fun x662 () Int)
(declare-fun x1626 () Bool)
(declare-fun x319 () Bool)
(declare-fun x1719 () Int)
(declare-fun x591 () Int)
(declare-fun x935 () Bool)
(declare-fun x23 (Int) Int)
(declare-fun x925 () Bool)
(declare-fun x7 () Int)
(declare-fun x165 () Int)
(declare-fun x14 () Int)
(declare-fun x324 () Int)
(declare-fun x1646 () Bool)
(declare-fun x1602 () Int)
(declare-fun x1527 () Int)
(declare-fun x1574 () Bool)
(declare-fun x699 () Bool)
(declare-fun x774 () Int)
(declare-fun x1533 () Int)
(declare-fun x963 () Int)
(declare-fun x1070 () Int)
(declare-fun x457 () Bool)
(declare-fun x529 () Int)
(declare-fun x412 () Int)
(declare-fun x1153 () Bool)
(declare-fun x1756 () Int)
(declare-fun x998 () Bool)
(declare-fun x726 (x1336) Int)
(declare-fun x537 () Int)
(declare-fun x20 () Int)
(declare-fun x1656 () Bool)
(declare-fun x2 () Int)
(declare-fun x1105 () Bool)
(declare-fun x279 () Bool)
(declare-fun x296 () Int)
(declare-fun x613 () Int)
(declare-fun x299 () Int)
(declare-fun x642 () Int)
(declare-fun x166 () Bool)
(declare-fun x940 () Bool)
(declare-fun x309 () Int)
(declare-fun x670 () Bool)
(declare-fun x1425 () Int)
(declare-fun x704 () Bool)
(declare-fun x91 () Int)
(declare-fun x1621 () Int)
(declare-fun x882 () Int)
(declare-fun x1362 () Int)
(declare-fun x1330 () Int)
(declare-fun x1487 () x1336)
(declare-fun x1218 () Bool)
(declare-fun x1710 () Int)
(declare-fun x370 () Bool)
(declare-fun x1259 () Int)
(declare-fun x1514 () Int)
(declare-fun x1073 () Int)
(declare-fun x397 () Int)
(declare-fun x516 () Bool)
(declare-fun x1676 () Int)
(declare-fun x673 () x1336)
(declare-fun x510 () Int)
(declare-fun x284 () Bool)
(declare-fun x583 () Int)
(declare-fun x272 () Int)
(declare-fun x1586 () Int)
(declare-fun x330 () Int)
(declare-fun x1518 () Bool)
(declare-fun x647 () x1336)
(declare-fun x823 () Int)
(declare-fun x77 () Bool)
(declare-fun x838 () Bool)
(declare-fun x1062 () Int)
(declare-fun x1565 () Int)
(declare-fun x835 () Int)
(declare-fun x275 () Int)
(declare-fun x1076 () Int)
(declare-fun x207 () Int)
(declare-fun x488 () Bool)
(declare-fun x137 () Int)
(declare-fun x1107 () Int)
(declare-fun x1746 () Int)
(declare-fun x1495 () Int)
(declare-fun x1704 () Bool)
(declare-fun x995 () Int)
(declare-fun x500 () Bool)
(declare-fun x1727 (Int) Int)
(declare-fun x1326 () Int)
(declare-fun x1614 () Int)
(declare-fun x64 () Int)
(declare-fun x1110 () Int)
(declare-fun x1598 () Int)
(declare-fun x1767 () Bool)
(declare-fun x336 (Int Int) Int)
(declare-fun x1318 () Bool)
(declare-fun x333 () Int)
(declare-fun x248 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x868 () Bool)
(declare-fun x1300 () Int)
(declare-fun x1281 () Int)
(declare-fun x305 () Int)
(declare-fun x518 (Int) Int)
(declare-fun x56 () Int)
(declare-fun x1016 () Int)
(declare-fun x4 () Bool)
(declare-fun x1707 () x1336)
(declare-fun x210 () Int)
(declare-fun x349 () x1336)
(declare-fun x30 (x1336) Int)
(declare-fun x1262 () Int)
(declare-fun x342 () Int)
(declare-fun x15 () Int)
(declare-fun x757 () Int)
(declare-fun x1632 () Int)
(declare-fun x485 () Bool)
(declare-fun x1090 () Int)
(declare-fun x975 () Int)
(declare-fun x1562 () Bool)
(declare-fun x996 () Bool)
(declare-fun x1119 () Int)
(declare-fun x1420 () Int)
(declare-fun x179 () Int)
(declare-fun x1113 () Int)
(declare-fun x1095 () Int)
(declare-fun x1009 () Int)
(declare-fun x1064 () x1336)
(declare-fun x870 () Int)
(declare-fun x265 () Bool)
(declare-fun x1796 () Int)
(declare-fun x636 () Int)
(declare-fun x1757 () Int)
(declare-fun x1093 () Int)
(declare-fun x1140 () Int)
(declare-fun x528 () Int)
(declare-fun x633 () Bool)
(declare-fun x1763 () Int)
(declare-fun x894 () x1336)
(declare-fun x1679 () x1336)
(declare-fun x1519 () Bool)
(declare-fun x107 () Int)
(declare-fun x1732 () x1336)
(declare-fun x345 () Int)
(declare-fun x967 () Int)
(declare-fun x785 () Bool)
(declare-fun x919 () Int)
(declare-fun x142 () x1336)
(declare-fun x1331 () Int)
(declare-fun x1635 () Int)
(declare-fun x765 () Int)
(declare-fun x691 () Int)
(declare-fun x1302 () Bool)
(declare-fun x1071 () Int)
(declare-fun x41 () Int)
(declare-fun x1736 () Int)
(declare-fun x140 () Int)
(declare-fun x562 () Int)
(declare-fun x1130 () Int)
(declare-fun x864 () Int)
(declare-fun x574 () Bool)
(declare-fun x734 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x89 () Int)
(declare-fun x880 () Int)
(declare-fun x532 () Int)
(declare-fun x874 () Int)
(declare-fun x1423 () Bool)
(declare-fun x596 () x1336)
(declare-fun x1015 () Bool)
(declare-fun x605 (x1336) Int)
(declare-fun x1526 () Bool)
(declare-fun x392 () Int)
(declare-fun x43 () Int)
(declare-fun x949 () Int)
(declare-fun x94 () Int)
(declare-fun x581 () Int)
(declare-fun x1285 (Int) Int)
(declare-fun x322 () x1336)
(declare-fun x1178 () Int)
(declare-fun x525 (x1336) Int)
(declare-fun x1589 () Int)
(declare-fun x250 () Int)
(declare-fun x1039 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x1759 () Int)
(declare-fun x833 () Bool)
(declare-fun x128 () Bool)
(declare-fun x218 () Int)
(declare-fun x1797 () Int)
(declare-fun x1569 () Int)
(declare-fun x1328 () Bool)
(declare-fun x1649 () Int)
(declare-fun x230 () Int)
(declare-fun x168 () x1336)
(declare-fun x853 () Bool)
(declare-fun x470 (Int) Int)
(declare-fun x1494 () Int)
(declare-fun x1033 () Bool)
(declare-fun x1675 () Int)
(declare-fun x1781 () Bool)
(declare-fun x526 () Int)
(declare-fun x1485 () Int)
(declare-fun x951 () Bool)
(declare-fun x790 () Int)
(declare-fun x255 () Int)
(declare-fun x589 () Int)
(declare-fun x1358 () Int)
(declare-fun x1308 () Int)
(declare-fun x271 () x1336)
(declare-fun x1334 () Bool)
(declare-fun x153 (Int) Int)
(declare-fun x1658 () Bool)
(declare-fun x724 (x1336) Int)
(declare-fun x61 () Bool)
(declare-fun x1749 () Int)
(declare-fun x1121 () x1336)
(declare-fun x481 () Int)
(declare-fun x1471 (x1336) Int)
(declare-fun x1417 () Int)
(declare-fun x1151 () Int)
(declare-fun x1762 () Int)
(declare-fun x1690 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x1660 () Int)
(declare-fun x1630 () Int)
(declare-fun x1138 () Bool)
(declare-fun x1342 () Int)
(declare-fun x1669 () Int)
(declare-fun x678 () x1336)
(declare-fun x815 () Int)
(declare-fun x634 () Int)
(declare-fun x1339 () Int)
(declare-fun x895 () Bool)
(declare-fun x749 () Int)
(declare-fun x346 (x1336) Int)
(declare-fun x690 () Int)
(declare-fun x213 () Int)
(declare-fun x1192 () Int)
(declare-fun x101 () Int)
(declare-fun x712 () Bool)
(declare-fun x927 () Bool)
(declare-fun x1351 () Int)
(declare-fun x1731 () Int)
(declare-fun x1227 () x1336)
(declare-fun x492 () Int)
(declare-fun x1214 () Int)
(declare-fun x1202 () Int)
(declare-fun x80 () Int)
(declare-fun x1779 () Int)
(declare-fun x1051 () Int)
(declare-fun x1248 () Int)
(declare-fun x72 () Bool)
(declare-fun x388 () Int)
(declare-fun x902 () Int)
(declare-fun x1638 () Int)
(declare-fun x167 () x1336)
(declare-fun x130 () Int)
(declare-fun x672 () Int)
(declare-fun x1299 () Bool)
(declare-fun x236 () Int)
(declare-fun x1446 () Int)
(declare-fun x916 () Int)
(declare-fun x74 () Int)
(declare-fun x6 () Int)
(declare-fun x1185 () Bool)
(declare-fun x459 () Int)
(declare-fun x55 () Int)
(declare-fun x1670 () Bool)
(declare-fun x656 () Int)
(declare-fun x1114 () Int)
(declare-fun x312 () Bool)
(declare-fun x1392 () Int)
(declare-fun x888 () Int)
(declare-fun x1774 () x1336)
(declare-fun x82 () Int)
(declare-fun x981 () Int)
(declare-fun x436 () Int)
(declare-fun x685 () Int)
(declare-fun x359 () Int)
(declare-fun x1764 () Int)
(declare-fun x1384 () Int)
(declare-fun x806 () Int)
(declare-fun x1369 () Bool)
(declare-fun x498 () Int)
(declare-fun x1611 () Int)
(declare-fun x1157 () Bool)
(declare-fun x1603 () Int)
(declare-fun x1220 () Int)
(declare-fun x1117 () Int)
(declare-fun x266 () Int)
(declare-fun x1274 () Bool)
(declare-fun x423 () Bool)
(declare-fun x1745 () Int)
(declare-fun x409 () Int)
(declare-fun x382 () x1336)
(declare-fun x831 () Int)
(declare-fun x1361 () Int)
(declare-fun x928 () Bool)
(declare-fun x735 () Int)
(declare-fun x9 () Int)
(declare-fun x1652 () Int)
(declare-fun x1478 () Int)
(declare-fun x549 () Int)
(declare-fun x1022 () Int)
(declare-fun x1783 (Int) Int)
(declare-fun x694 () Bool)
(declare-fun x614 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x386 () Bool)
(declare-fun x1648 () Int)
(declare-fun x16 () Int)
(declare-fun x112 () Int)
(declare-fun x1344 () Bool)
(declare-fun x303 () x1336)
(declare-fun x983 () Int)
(declare-fun x306 () Int)
(declare-fun x46 (Int) Int)
(declare-fun x431 (Int) Int)
(declare-fun x18 () Bool)
(declare-fun x890 (x1336) Int)
(declare-fun x155 () x1336)
(declare-fun x1264 () Int)
(declare-fun x1741 () Int)
(declare-fun x1198 () Int)
(declare-fun x104 () Bool)
(declare-fun x1235 () Int)
(declare-fun x42 () Bool)
(declare-fun x84 () Int)
(declare-fun x1201 () Int)
(declare-fun x1503 () Int)
(declare-fun x124 () Int)
(declare-fun x772 () Bool)
(declare-fun x1464 () Int)
(declare-fun x1247 (Int) Int)
(declare-fun x1636 () Int)
(declare-fun x1430 () Int)
(declare-fun x1692 () Bool)
(declare-fun x884 () Int)
(declare-fun x172 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x425 () Bool)
(declare-fun x1374 () Int)
(declare-fun x493 () Int)
(declare-fun x857 (Int) Int)
(declare-fun x675 () Int)
(declare-fun x1288 () Bool)
(declare-fun x824 () Bool)
(declare-fun x78 () Bool)
(declare-fun x1256 (Int) Int)
(declare-fun x1677 () Int)
(declare-fun x1190 () Bool)
(declare-fun x1170 () x1336)
(declare-fun x1313 () Bool)
(declare-fun x1689 (Int) Int)
(declare-fun x542 () Int)
(declare-fun x1347 () Bool)
(declare-fun x1273 () x1336)
(declare-fun x1474 () Int)
(declare-fun x183 () Int)
(declare-fun x644 () Int)
(declare-fun x1450 () Bool)
(declare-fun x1506 () Int)
(declare-fun x1184 () Int)
(declare-fun x1620 () Int)
(declare-fun x620 () Int)
(declare-fun x1265 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x1074 () Int)
(declare-fun x739 () Int)
(declare-fun x1089 () Bool)
(declare-fun x984 () Int)
(declare-fun x1413 () Int)
(declare-fun x667 () Bool)
(declare-fun x1754 (Int) Int)
(declare-fun x1172 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x972 () Int)
(declare-fun x54 () Int)
(declare-fun x99 () Bool)
(declare-fun x169 () Int)
(declare-fun x1488 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x837 () Int)
(declare-fun x1455 () Int)
(declare-fun x659 () Int)
(declare-fun x245 () Bool)
(declare-fun x1293 () Bool)
(declare-fun x1584 () Bool)
(declare-fun x70 (Int) Int)
(declare-fun x722 () Bool)
(declare-fun x1564 () Int)
(declare-fun x59 () Int)
(declare-fun x886 () x1336)
(declare-fun x262 () x1336)
(declare-fun x214 () Int)
(declare-fun x904 () Int)
(declare-fun x361 () Bool)
(declare-fun x377 () x1336)
(declare-fun x1244 () Int)
(declare-fun x873 () Bool)
(declare-fun x1280 () Int)
(declare-fun x801 () Int)
(declare-fun x282 () Int)
(declare-fun x1713 () Int)
(declare-fun x1171 () Int)
(declare-fun x1067 () Int)
(declare-fun x615 () Bool)
(declare-fun x353 () Int)
(declare-fun x533 () Int)
(declare-fun x764 () Int)
(declare-fun x504 () Int)
(declare-fun x1517 () Bool)
(declare-fun x665 () Int)
(declare-fun x1001 () Bool)
(declare-fun x999 () Int)
(declare-fun x763 () Bool)
(declare-fun x321 () x1336)
(declare-fun x1541 () Int)
(declare-fun x1311 () Bool)
(declare-fun x1048 () x1336)
(declare-fun x1664 () Bool)
(declare-fun x344 () Int)
(declare-fun x502 () Bool)
(declare-fun x146 () Int)
(declare-fun x564 () Bool)
(declare-fun x1131 () Int)
(declare-fun x908 () Int)
(declare-fun x1305 () Int)
(declare-fun x195 () Bool)
(declare-fun x697 () Int)
(declare-fun x737 () Int)
(declare-fun x110 () Int)
(declare-fun x1653 () Bool)
(declare-fun x1249 (Int) Int)
(declare-fun x706 () Int)
(declare-fun x1213 () Int)
(declare-fun x1298 () Int)
(declare-fun x682 () Bool)
(declare-fun x701 () Bool)
(declare-fun x784 () Int)
(declare-fun x1271 () Int)
(declare-fun x1147 () Int)
(declare-fun x1770 () Int)
(declare-fun x452 () Bool)
(declare-fun x454 () Int)
(declare-fun x551 () Int)
(declare-fun x1390 () Bool)
(declare-fun x1657 () Int)
(declare-fun x196 () Int)
(declare-fun x1525 () x1336)
(declare-fun x850 () x1336)
(declare-fun x201 () Int)
(declare-fun x910 () Bool)
(declare-fun x648 () Int)
(declare-fun x742 () Int)
(declare-fun x97 () Int)
(declare-fun x462 () Int)
(declare-fun x563 () Bool)
(declare-fun x1284 () Int)
(declare-fun x1645 () x1336)
(declare-fun x1292 () Int)
(declare-fun x1640 () Bool)
(declare-fun x334 (x1336) Int)
(declare-fun x1800 () Bool)
(declare-fun x408 () Bool)
(declare-fun x826 () Int)
(declare-fun x1545 () Bool)
(declare-fun x637 () Int)
(declare-fun x171 () Int)
(declare-fun x86 () Int)
(declare-fun x184 () Int)
(declare-fun x1193 (x1336) Int)
(declare-fun x1600 () Bool)
(declare-fun x1029 () Int)
(declare-fun x62 () Int)
(declare-fun x1427 () Bool)
(declare-fun x762 () Int)
(declare-fun x1343 () Int)
(declare-fun x645 () Int)
(declare-fun x1395 (Int) Int)
(declare-fun x572 () Bool)
(declare-fun x1354 () Int)
(declare-fun x527 () Int)
(declare-fun x501 () Int)
(declare-fun x273 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x595 () Int)
(declare-fun x499 () Bool)
(declare-fun x26 (x1336) Int)
(declare-fun x1755 () Int)
(declare-fun x307 () Int)
(declare-fun x540 () Int)
(declare-fun x1579 () Int)
(declare-fun x1709 () Int)
(declare-fun x1737 () Bool)
(declare-fun x161 () Int)
(declare-fun x777 () Int)
(declare-fun x122 () Int)
(declare-fun x1156 () Int)
(declare-fun x1791 () Bool)
(declare-fun x756 () Int)
(declare-fun x325 () Bool)
(declare-fun x885 (Int) Int)
(declare-fun x1338 () Int)
(declare-fun x5 (Int) Int)
(declare-fun x703 () Int)
(declare-fun x1789 () Int)
(declare-fun x1444 () Int)
(declare-fun x1655 () Int)
(declare-fun x1447 () Int)
(declare-fun x187 () Int)
(declare-fun x1350 () Bool)
(declare-fun x295 () Int)
(declare-fun x1566 () Bool)
(declare-fun x471 () Int)
(declare-fun x578 () Int)
(declare-fun x48 () Int)
(declare-fun x702 () Int)
(declare-fun x538 () Bool)
(declare-fun x561 () Int)
(declare-fun x1333 () Int)
(declare-fun x794 () Int)
(declare-fun x1084 () Int)
(declare-fun x343 () Int)
(declare-fun x311 () Int)
(declare-fun x1668 () Int)
(declare-fun x600 () Int)
(declare-fun x817 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x740 (x1336) Int)
(declare-fun x1290 () Int)
(declare-fun x1060 () Int)
(declare-fun x657 () Int)
(declare-fun x1159 () Int)
(declare-fun x327 () Int)
(declare-fun x1230 () Int)
(declare-fun x405 () Int)
(declare-fun x861 () Bool)
(declare-fun x1588 () Int)
(declare-fun x285 () Int)
(declare-fun x1165 () Int)
(declare-fun x1371 () Int)
(declare-fun x432 () Int)
(declare-fun x252 () Int)
(declare-fun x283 () Int)
(declare-fun x1718 () Int)
(declare-fun x1551 () Int)
(declare-fun x1234 () Bool)
(declare-fun x520 () Int)
(declare-fun x683 () Bool)
(declare-fun x129 () Int)
(declare-fun x1548 () Bool)
(declare-fun x1661 () Int)
(declare-fun x1207 () Int)
(declare-fun x399 () Int)
(declare-fun x909 () Int)
(declare-fun x1406 () Int)
(declare-fun x1433 () Int)
(declare-fun x1465 () Bool)
(declare-fun x1615 () Int)
(declare-fun x684 () x1336)
(declare-fun x24 () Bool)
(declare-fun x1787 () Int)
(declare-fun x1061 () x1336)
(declare-fun x1659 () Int)
(declare-fun x1229 () Int)
(declare-fun x220 () Bool)
(declare-fun x1801 () Int)
(declare-fun x229 () Int)
(declare-fun x100 () Bool)
(declare-fun x988 () Int)
(declare-fun x556 () Bool)
(declare-fun x164 () x1336)
(declare-fun x1674 () Int)
(declare-fun x58 () Bool)
(declare-fun x1346 () Int)
(declare-fun x199 (x1336) Int)
(declare-fun x484 () Int)
(declare-fun x1142 () Int)
(declare-fun x241 () Int)
(declare-fun x1477 () Int)
(declare-fun x514 () Int)
(declare-fun x851 () Int)
(declare-fun x1266 () Bool)
(declare-fun x428 () Bool)
(declare-fun x828 () Int)
(declare-fun x624 () Int)
(declare-fun x116 () x1336)
(declare-fun x1613 () Int)
(declare-fun x238 () Int)
(declare-fun x1453 () Int)
(declare-fun x1536 () Int)
(declare-fun x402 () Int)
(declare-fun x796 () Int)
(declare-fun x979 () Int)
(declare-fun x3 () Int)
(declare-fun x1036 () Int)
(declare-fun x571 () Bool)
(declare-fun x293 () Int)
(declare-fun x1578 () Bool)
(declare-fun x435 () Int)
(declare-fun x911 () Int)
(declare-fun x1069 () Int)
(declare-fun x680 () Int)
(declare-fun x687 (x1336) Int)
(declare-fun x1528 () Int)
(declare-fun x1714 () Int)
(declare-fun x1608 () Bool)
(declare-fun x422 () Int)
(declare-fun x149 () Int)
(declare-fun x1698 () Int)
(declare-fun x290 () Int)
(declare-fun x79 () Int)
(declare-fun x881 () Int)
(declare-fun x237 () Int)
(declare-fun x1137 () Int)
(declare-fun x1442 () Int)
(declare-fun x358 () Int)
(declare-fun x318 () Bool)
(declare-fun x1558 () Bool)
(declare-fun x281 () x1336)
(declare-fun x278 () Int)
(declare-fun x1161 () Bool)
(declare-fun x1475 () Int)
(declare-fun x475 () Int)
(declare-fun x151 () Int)
(declare-fun x646 (Int) Int)
(declare-fun x1164 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x915 () x1336)
(declare-fun x1179 () Int)
(declare-fun x966 () Int)
(declare-fun x1219 () Bool)
(declare-fun x205 () Int)
(declare-fun x460 () Int)
(declare-fun x1502 () Int)
(declare-fun x1312 () Int)
(declare-fun x421 () Int)
(declare-fun x786 () Int)
(declare-fun x1539 () Int)
(declare-fun x476 () Int)
(declare-fun x1414 () Bool)
(declare-fun x1405 () Int)
(declare-fun x463 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x1349 () Int)
(declare-fun x1168 () Int)
(declare-fun x954 (Int) Int)
(declare-fun x1166 () Int)
(declare-fun x727 () Int)
(declare-fun x472 () Int)
(declare-fun x649 () Bool)
(declare-fun x1685 () Int)
(declare-fun x1111 () x1336)
(declare-fun x1691 () Int)
(declare-fun x76 () Bool)
(declare-fun x249 () Int)
(declare-fun x1054 () Int)
(declare-fun x1008 () Int)
(declare-fun x439 () Bool)
(declare-fun x994 () Int)
(declare-fun x1007 () Int)
(declare-fun x461 () Int)
(declare-fun x819 () Bool)
(declare-fun x40 () Int)
(declare-fun x753 () Int)
(declare-fun x778 () x1336)
(declare-fun x1096 () Int)
(declare-fun x585 () Int)
(declare-fun x1263 () Int)
(declare-fun x1375 () x1336)
(declare-fun x96 () Int)
(declare-fun x291 () x1336)
(declare-fun x601 () Int)
(declare-fun x1792 () Int)
(declare-fun x389 () Int)
(declare-fun x872 (Int Int) Int)
(declare-fun x193 () Int)
(declare-fun x1627 () Int)
(declare-fun x755 () Int)
(declare-fun x1199 () Int)
(declare-fun x939 () Int)
(declare-fun x1286 () Int)
(declare-fun x381 () Int)
(declare-fun x942 () Int)
(declare-fun x393 () Int)
(declare-fun x948 () Int)
(declare-fun x632 () Int)
(declare-fun x131 () Int)
(declare-fun x338 () Int)
(declare-fun x1158 () Int)
(declare-fun x1666 () Int)
(declare-fun x269 () Int)
(declare-fun x468 () Bool)
(declare-fun x71 () Int)
(declare-fun x1341 () Bool)
(declare-fun x190 () Int)
(declare-fun x901 () x1336)
(declare-fun x1282 () x1336)
(declare-fun x576 () Int)
(declare-fun x467 () Bool)
(declare-fun x1463 () Int)
(declare-fun x1538 (Int) Int)
(declare-fun x157 () Bool)
(declare-fun x1699 () x1336)
(declare-fun x1542 () Int)
(declare-fun x376 () Int)
(declare-fun x118 () Bool)
(declare-fun x301 () Int)
(declare-fun x575 () Int)
(declare-fun x1468 () Int)
(declare-fun x746 () Int)
(declare-fun x396 () Bool)
(declare-fun x580 () Int)
(declare-fun x1778 () Int)
(declare-fun x743 () Int)
(declare-fun x1534 () Int)
(declare-fun x1197 () Int)
(declare-fun x1500 () Int)
(declare-fun x1421 () Bool)
(declare-fun x1058 () Int)
(declare-fun x1524 () Int)
(declare-fun x1377 () Bool)
(declare-fun x1720 () Int)
(declare-fun x1072 () Bool)
(declare-fun x889 () Int)
(declare-fun x357 () Int)
(declare-fun x1232 () Int)
(declare-fun x1030 () Int)
(declare-fun x1461 () Int)
(declare-fun x1401 () Bool)
(declare-fun x628 () Int)
(declare-fun x847 () Bool)
(declare-fun x211 () Int)
(declare-fun x626 () Int)
(declare-fun x929 () Int)
(declare-fun x1094 () Int)
(declare-fun x1567 () Int)
(declare-fun x736 () Int)
(declare-fun x328 () x1336)
(declare-fun x1200 () Int)
(declare-fun x766 () Int)
(declare-fun x1068 () Int)
(declare-fun x1595 () Int)
(declare-fun x276 () Bool)
(declare-fun x1686 () Int)
(declare-fun x767 () Int)
(declare-fun x68 () Int)
(declare-fun x108 () Bool)
(declare-fun x126 () Int)
(declare-fun x1174 () Int)
(declare-fun x1537 () Bool)
(declare-fun x331 () Bool)
(declare-fun x1458 () Int)
(declare-fun x326 () Bool)
(declare-fun x820 () Bool)
(declare-fun x1370 () Int)
(declare-fun x587 () Bool)
(declare-fun x1496 () Int)
(declare-fun x912 () Int)
(declare-fun x1435 () Int)
(declare-fun x1476 () Int)
(declare-fun x1152 () Bool)
(declare-fun x1622 () Int)
(declare-fun x944 () Int)
(declare-fun x197 () Int)
(declare-fun x1012 () Bool)
(declare-fun x486 () x1336)
(declare-fun x898 () Bool)
(declare-fun x1191 (Int) Int)
(declare-fun x1701 () Int)
(declare-fun x612 () Bool)
(declare-fun x437 () Int)
(declare-fun x547 () Bool)
(declare-fun x1332 (Int Int) Int)
(declare-fun x635 () Int)
(declare-fun x469 () Bool)
(declare-fun x289 (Int Int) Int)
(declare-fun x1592 () Bool)
(declare-fun x418 () Bool)
(declare-fun x204 () Int)
(declare-fun x866 () Bool)
(declare-fun x1195 () Int)
(declare-fun x1269 () Int)
(declare-fun x1394 () Bool)
(declare-fun x253 () Int)
(declare-fun x839 () Bool)
(declare-fun x1634 () x1336)
(declare-fun x198 () Int)
(declare-fun x1522 () Bool)
(declare-fun x1543 (Int) Int)
(declare-fun x723 (x1336) Int)
(declare-fun x611 () Bool)
(declare-fun x378 (Int) Int)
(declare-fun x332 () Int)
(declare-fun x1025 () Int)
(declare-fun x1277 () Int)
(declare-fun x1508 () Bool)
(declare-fun x234 () Int)
(declare-fun x127 (Int) Int)
(declare-fun x174 () Bool)
(declare-fun x406 (Int Int Int Int Int Int Int Int Int) Int)
(declare-fun x1226 () Int)
(declare-fun x426 () Int)
(declare-fun x474 () Bool)
(declare-fun x878 () Int)
(declare-fun x354 () Int)
(declare-fun x1415 () Int)
(declare-fun x1082 () Int)
(declare-fun x1721 () Int)
(declare-fun x1776 (Int Int Int Int) Int)
(declare-fun x1786 () Int)
(declare-fun x215 () Int)
(declare-fun x519 () Int)
(declare-fun x1662 () Bool)
(declare-fun x1026 () Int)
(declare-fun x1740 () Int)
(declare-fun x329 () x1336)
(declare-fun x260 () Int)
(declare-fun x114 () Int)
(declare-fun x1044 (Int) Int)
(declare-fun x725 () Int)
(declare-fun x559 () Int)
(declare-fun x232 () Bool)
(declare-fun x623 () Int)
(declare-fun x943 () Int)
(declare-fun x415 () Int)
(declare-fun x465 () Bool)
(declare-fun x1507 () Int)
(declare-fun x1079 () Bool)
(declare-fun x188 () Int)
(declare-fun x1133 () Int)
(declare-fun x227 (Int) Int)
(declare-fun x314 () Int)
(declare-fun x1083 () Bool)
(declare-fun x1065 () Int)
(declare-fun x10 () x1336)
(declare-fun x891 () Int)
(declare-fun x830 () Int)
(declare-fun x1532 () Int)
(declare-fun x105 () x1336)
(declare-fun x818 () Int)
(declare-fun x1515 () Int)
(declare-fun x1473 () Int)
(declare-fun x1251 () Int)
(declare-fun x1483 () Int)
(declare-fun x627 () Int)
(declare-fun x639 (Int) Int)
(declare-fun x177 () Bool)
(declare-fun x807 () Bool)
(declare-fun x185 () Int)
(declare-fun x1472 () Int)
(declare-fun x1291 () Bool)
(declare-fun x1580 () Int)
(declare-fun x1037 () Int)
(declare-fun x1484 () Int)
(declare-fun x483 () Bool)
(declare-fun x792 () Bool)
(declare-fun x810 () Int)
(declare-fun x1729 () Bool)
(declare-fun x455 () Int)
(declare-fun x535 () Int)
(declare-fun x1224 () Int)
(declare-fun x1092 () Int)
(declare-fun x1717 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x698 () Int)
(declare-fun x666 () Int)
(declare-fun x1575 () Int)
(declare-fun x1194 () Int)
(declare-fun x1322 () Int)
(declare-fun x1231 () Int)
(declare-fun x182 () Bool)
(declare-fun x1132 () Int)
(declare-fun x1457 () Int)
(declare-fun x1728 () Int)
(declare-fun x808 () Bool)
(declare-fun x81 () Bool)
(declare-fun x770 () Int)
(declare-fun x1329 () Int)
(declare-fun x980 () x1336)
(declare-fun x1031 () Int)
(declare-fun x473 () Int)
(declare-fun x608 (x1336) Int)
(declare-fun x93 () x1336)
(declare-fun x1386 () Int)
(declare-fun x621 () Int)
(declare-fun x957 () Int)
(declare-fun x1261 () Bool)
(declare-fun x414 () Bool)
(declare-fun x986 () Int)
(declare-fun x754 () Bool)
(declare-fun x893 () Int)
(declare-fun x539 () Int)
(declare-fun x679 () Bool)
(declare-fun x658 () Bool)
(declare-fun x841 () Int)
(declare-fun x158 (Int) Int)
(declare-fun x1272 () Int)
(declare-fun x1182 () Int)
(declare-fun x1049 () Int)
(declare-fun x277 () Bool)
(declare-fun x98 () Bool)
(declare-fun x233 (x1336) Int)
(declare-fun x789 () Int)
(declare-fun x758 () Int)
(declare-fun x717 () Int)
(declare-fun x416 (Int) Int)
(declare-fun x907 () Int)
(declare-fun x433 () Int)
(declare-fun x1716 () Int)
(declare-fun x121 () Int)
(declare-fun x1052 () Int)
(declare-fun x39 () Bool)
(declare-fun x650 () Bool)
(declare-fun x1667 () Int)
(declare-fun x256 () Bool)
(declare-fun x45 () Int)
(declare-fun x1512 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x496 (x1336) Int)
(declare-fun x162 () Int)
(declare-fun x243 () Int)
(declare-fun x1221 () Int)
(declare-fun x447 () Int)
(declare-fun x1309 () Int)
(declare-fun x1128 () Int)
(declare-fun x1641 () Bool)
(declare-fun x1702 () Int)
(declare-fun x622 () Int)
(declare-fun x1380 () Int)
(declare-fun x771 () Int)
(declare-fun x464 () Int)
(declare-fun x1568 () Int)
(declare-fun x926 () Int)
(declare-fun x1205 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x992 () Bool)
(declare-fun x867 () Int)
(declare-fun x668 () Int)
(declare-fun x548 () Int)
(declare-fun x590 () Int)
(declare-fun x1777 () Bool)
(declare-fun x31 () Int)
(declare-fun x1490 () x1336)
(declare-fun x264 () Bool)
(declare-fun x143 () Bool)
(declare-fun x610 () Int)
(declare-fun x379 () x1336)
(declare-fun x1572 () Bool)
(declare-fun x1353 () Bool)
(declare-fun x38 () Int)
(declare-fun x1738 (Int) Int)
(declare-fun x442 () Int)
(declare-fun x730 () Bool)
(declare-fun x721 () Int)
(declare-fun x543 () Bool)
(declare-fun x106 () Int)
(declare-fun x1454 () Int)
(declare-fun x1730 () Int)
(declare-fun x625 () Bool)
(declare-fun x35 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x67 () Int)
(declare-fun x982 () Int)
(declare-fun x1403 () Int)
(declare-fun x914 () x1336)
(declare-fun x506 () Int)
(declare-fun x541 () Int)
(declare-fun x1416 () Int)
(declare-fun x1697 () Int)
(declare-fun x849 () Int)
(declare-fun x1116 () x1336)
(declare-fun x297 () Int)
(declare-fun x953 () Int)
(declare-fun x1238 () Int)
(declare-fun x22 () Bool)
(declare-fun x17 () Bool)
(declare-fun x1482 () Int)
(declare-fun x1097 () Int)
(declare-fun x812 () Int)
(declare-fun x1601 () Int)
(declare-fun x176 () Int)
(declare-fun x1535 () Int)
(declare-fun x629 () Int)
(declare-fun x495 () Int)
(declare-fun x1372 (x1336) Int)
(declare-fun x1204 () x1336)
(declare-fun x593 () x1336)
(declare-fun x419 () Bool)
(declare-fun x148 () Int)
(declare-fun x681 () x1336)
(declare-fun x750 () x1336)
(declare-fun x987 () Bool)
(declare-fun x952 () Int)
(declare-fun x231 () Int)
(declare-fun x1509 () Bool)
(declare-fun x374 () Int)
(declare-fun x1671 () Bool)
(declare-fun x741 () x1336)
(declare-fun x1385 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x710 () Int)
(declare-fun x1570 () Bool)
(declare-fun x73 () Bool)
(declare-fun x103 () Bool)
(declare-fun x1321 () Int)
(declare-fun x1388 () Int)
(declare-fun x1367 () Int)
(declare-fun x1599 () Int)
(declare-fun x1053 () Int)
(declare-fun x1209 (Int) Int)
(declare-fun x607 () Int)
(declare-fun x1253 () Int)
(declare-fun x1399 () Int)
(declare-fun x1549 () Int)
(declare-fun x8 (Int Int) Int)
(declare-fun x489 () Int)
(declare-fun x947 () Bool)
(declare-fun x1120 () Int)
(declare-fun x1260 () Bool)
(declare-fun x1217 () Int)
(declare-fun x1555 () Int)
(declare-fun x517 () Int)
(declare-fun x1554 (Int) Int)
(declare-fun x152 () x1336)
(declare-fun x832 () Int)
(declare-fun x1712 () Int)
(declare-fun x1242 () Int)
(declare-fun x287 () Int)
(declare-fun x728 () Bool)
(declare-fun x1440 () Int)
(declare-fun x705 () Int)
(declare-fun x1665 () Int)
(declare-fun x1236 () Bool)
(declare-fun x34 () Int)
(declare-fun x1348 () x1336)
(declare-fun x1109 () Int)
(declare-fun x1301 () Int)
(declare-fun x738 () Int)
(declare-fun x973 () x1336)
(declare-fun x1511 (x1336) Int)
(declare-fun x1183 () Int)
(declare-fun x417 () Int)
(declare-fun x448 () Int)
(declare-fun x858 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x44 () Bool)
(declare-fun x531 () Int)
(declare-fun x797 () Bool)
(declare-fun x1043 () Int)
(declare-fun x1560 () Int)
(declare-fun x651 () Int)
(declare-fun x875 () Bool)
(declare-fun x1441 () Int)
(declare-fun x225 () Int)
(declare-fun x1270 () Int)
(declare-fun x363 () Int)
(declare-fun x961 () Bool)
(declare-fun x302 () Int)
(declare-fun x373 () Bool)
(declare-fun x1287 (x1336) Int)
(declare-fun x843 () Bool)
(declare-fun x239 () Int)
(declare-fun x1597 () Int)
(declare-fun x1134 () Int)
(declare-fun x1780 () Bool)
(declare-fun x1747 () Int)
(declare-fun x294 () Int)
(declare-fun x862 () Int)
(declare-fun x1032 () Bool)
(declare-fun x411 () Int)
(declare-fun x1006 () x1336)
(declare-fun x1233 () Int)
(declare-fun x387 () Bool)
(declare-fun x247 () Int)
(declare-fun x1663 () Bool)
(declare-fun x860 () Int)
(declare-fun x720 () Int)
(declare-fun x1239 () Bool)
(declare-fun x1760 (x1336) Int)
(declare-fun x1373 () Int)
(declare-fun x557 (Int Int) Int)
(declare-fun x487 (Int) Int)
(declare-fun x50 () Bool)
(declare-fun x1556 () Int)
(declare-fun x1306 () Int)
(declare-fun x1279 () Bool)
(declare-fun x654 () Int)
(declare-fun x970 () x1336)
(declare-fun x445 () Bool)
(declare-fun x1559 () Int)
(declare-fun x317 () x1336)
(declare-fun x1240 () Int)
(declare-fun x450 () Int)
(declare-fun x1019 () Int)
(declare-fun x1605 () Int)
(declare-fun x1041 () Bool)
(declare-fun x776 () Bool)
(declare-fun x150 () Int)
(declare-fun x341 () Int)
(declare-fun x1278 () Int)
(declare-fun x194 () Int)
(declare-fun x700 () Int)
(declare-fun x51 () Int)
(declare-fun x1255 () Int)
(declare-fun x674 () Int)
(declare-fun x1081 () Int)
(declare-fun x102 () Int)
(declare-fun x1173 () Int)
(declare-fun x671 () Int)
(declare-fun x1180 () Int)
(declare-fun x714 () Bool)
(declare-fun x1434 () Int)
(declare-fun x788 () x1336)
(declare-fun x856 () Bool)
(declare-fun x1149 () Int)
(declare-fun x941 () Int)
(declare-fun x1396 () Bool)
(declare-fun x440 () Int)
(declare-fun x1557 () Int)
(declare-fun x1722 () Int)
(declare-fun x1324 () Int)
(declare-fun x1340 () Int)
(declare-fun x869 () Int)
(declare-fun x430 () Int)
(declare-fun x117 () Bool)
(declare-fun x1497 () x1336)
(declare-fun x47 () Int)
(declare-fun x1647 () Bool)
(declare-fun x945 () Bool)
(declare-fun x310 () Bool)
(declare-fun x1245 () Int)
(declare-fun x181 () Int)
(declare-fun x1513 () Int)
(declare-fun x1798 () Int)
(declare-fun x242 () Int)
(declare-fun x1623 (Int) Int)
(declare-fun x132 () Bool)
(declare-fun x1398 () Int)
(declare-fun x69 () Int)
(declare-fun x1694 () Int)
(declare-fun x1327 () x1336)
(declare-fun x300 () Bool)
(declare-fun x641 () Int)
(declare-fun x235 () Int)
(declare-fun x813 () Int)
(declare-fun x773 () Bool)
(declare-fun x372 () Int)
(declare-fun x534 () Bool)
(declare-fun x57 () Bool)
(declare-fun x811 () Int)
(declare-fun x315 () Int)
(declare-fun x109 () Int)
(declare-fun x206 () Bool)
(declare-fun x1143 () Int)
(declare-fun x805 () Int)
(declare-fun x1297 () Int)
(declare-fun x733 () Int)
(declare-fun x1505 () Int)
(declare-fun x1576 () Int)
(declare-fun x553 () Int)
(declare-fun x803 () Int)
(declare-fun x503 () Int)
(declare-fun x934 () Int)
(declare-fun x1742 () Int)
(declare-fun x251 () Int)
(declare-fun x769 () Int)
(declare-fun x936 () Int)
(declare-fun x1744 (Int) Int)
(declare-fun x453 () Bool)
(declare-fun x173 () Int)
(declare-fun x1391 () Int)
(declare-fun x1115 () Int)
(declare-fun x1101 () Int)
(declare-fun x451 () Int)
(declare-fun x897 () Int)
(declare-fun x66 () Int)
(declare-fun x1470 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x1011 () Int)
(declare-fun x1443 () Bool)
(declare-fun x1211 (Int) Int)
(declare-fun x163 () Int)
(declare-fun x1162 () Bool)
(declare-fun x257 () Int)
(declare-fun x458 () Bool)
(declare-fun x240 () Int)
(declare-fun x793 () Int)
(declare-fun x1352 () x1336)
(declare-fun x991 (x1336) Int)
(declare-fun x917 () Bool)
(declare-fun x1363 () Int)
(declare-fun x12 () Int)
(declare-fun x863 () Int)
(declare-fun x618 () Bool)
(declare-fun x978 () Int)
(declare-fun x1357 () x1336)
(declare-fun x1793 (Int) Int)
(declare-fun x883 () Int)
(declare-fun x567 () Int)
(declare-fun x1296 () Bool)
(declare-fun x1 () Int)
(declare-fun x1650 () Int)
(declare-fun x75 () Int)
(declare-fun x1624 () Int)
(declare-fun x791 () Bool)
(declare-fun x1768 () x1336)
(declare-fun x638 () Int)
(declare-fun x1018 () x1336)
(declare-fun x1289 () Bool)
(declare-fun x383 () Bool)
(declare-fun x1725 () Bool)
(declare-fun x139 () Int)
(declare-fun x449 (x1336) Int)
(declare-fun x1684 () Bool)
(declare-fun x1428 () Int)
(declare-fun x570 () Int)
(declare-fun x959 () Int)
(declare-fun x1176 () Int)
(declare-fun x1222 () Bool)
(declare-fun x985 () x1336)
(declare-fun x144 () Bool)
(declare-fun x1099 () Int)
(declare-fun x877 () Bool)
(declare-fun x212 () Int)
(declare-fun x403 () x1336)
(declare-fun x1364 () Bool)
(declare-fun x920 () Int)
(declare-fun x1521 () Int)
(declare-fun x1397 () Bool)
(declare-fun x1005 () Int)
(declare-fun x1531 () Bool)
(declare-fun x905 () Bool)
(declare-fun x222 () Int)
(declare-fun x1616 () Bool)
(declare-fun x1499 () Int)
(declare-fun x160 () Bool)
(declare-fun x1254 () Int)
(declare-fun x1077 () Bool)
(declare-fun x1590 () Int)
(declare-fun x1112 () Bool)
(declare-fun x63 () Int)
(declare-fun x27 () Int)
(declare-fun x135 () Int)
(declare-fun x505 () Int)
(declare-fun x822 (Int Int) Int)
(declare-fun x692 () Int)
(declare-fun x1148 () Int)
(declare-fun x1612 () Bool)
(declare-fun x1225 () Int)
(declare-fun x759 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x892 () Int)
(declare-fun x202 () x1336)
(declare-fun x1706 (Int) Int)
(declare-fun x480 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x1208 () Int)
(declare-fun x120 () Int)
(declare-fun x65 () Int)
(declare-fun x1593 () Bool)
(declare-fun x1583 () Int)
(declare-fun x288 () Int)
(declare-fun x1504 () Int)
(declare-fun x752 () Int)
(declare-fun x19 () Int)
(declare-fun x565 () Bool)
(declare-fun x512 () Int)
(declare-fun x1678 () Bool)
(declare-fun x1407 () Int)
(declare-fun x715 () Bool)
(declare-fun x1250 () Int)
(declare-fun x787 () Int)
(declare-fun x1438 () Int)
(declare-fun x1325 () Bool)
(declare-fun x922 (Int) Int)
(declare-fun x1400 () Bool)
(declare-fun x924 () x1336)
(declare-fun x1283 () Int)
(declare-fun x1682 () Int)
(declare-fun x748 () Bool)
(declare-fun x1751 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x913 () Bool)
(declare-fun x434 () Bool)
(declare-fun x1419 () Int)
(declare-fun x178 () Int)
(declare-fun x900 () Bool)
(declare-fun x390 () Int)
(declare-fun x191 () Int)
(declare-fun x1063 () Bool)
(declare-fun x366 () Bool)
(declare-fun x1799 () Int)
(declare-fun x655 () Int)
(declare-fun x420 () Int)
(declare-fun x1154 () Int)
(declare-fun x1366 () Int)
(declare-fun x604 () Int)
(declare-fun x1625 () Bool)
(declare-fun x1734 () Bool)
(declare-fun x566 () Int)
(declare-fun x208 () Int)
(declare-fun x1429 () Bool)
(declare-fun x938 () Bool)
(declare-fun x1587 () Bool)
(declare-fun x268 (x1336) Int)
(declare-fun x937 () Int)
(declare-fun x1356 () Int)
(declare-fun x1118 () Bool)
(declare-fun x209 () Int)
(declare-fun x478 () Bool)
(declare-fun x1123 () Int)
(declare-fun x1335 () Int)
(declare-fun x1594 () Int)
(declare-fun x192 () Int)
(declare-fun x1126 () Int)
(declare-fun x340 () Int)
(declare-fun x261 (x1336) Int)
(declare-fun x1050 () Int)
(declare-fun x221 (Int) Int)
(declare-fun x1788 () Bool)
(declare-fun x1389 (x1336) Int)
(declare-fun x134 () Int)
(declare-fun x1243 () x1336)
(declare-fun x313 () Bool)
(declare-fun x351 () Bool)
(declare-fun x1241 () Int)
(declare-fun x1552 () Bool)
(declare-fun x968 () Int)
(declare-fun x1711 (Int) Int)
(declare-fun x965 () Int)
(declare-fun x1177 () Int)
(declare-fun x1654 () Int)
(declare-fun x1687 () Int)
(declare-fun x799 () x1336)
(declare-fun x918 () Int)
(declare-fun x521 () Int)
(declare-fun x652 () x1336)
(declare-fun x508 () Int)
(declare-fun x1546 (Int Int) Int)
(declare-fun x1639 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x731 () Int)
(declare-fun x931 () Int)
(declare-fun x356 () Int)
(declare-fun x1216 () Bool)
(declare-fun x1402 (Int) Int)
(declare-fun x83 () Bool)
(declare-fun x1055 () Int)
(declare-fun x1100 () Int)
(declare-fun x1696 () Bool)
(declare-fun x555 () Int)
(declare-fun x494 () Bool)
(declare-fun x780 () Int)
(declare-fun x1295 () Bool)
(declare-fun x429 () Int)
(declare-fun x1027 () Int)
(declare-fun x661 () Bool)
(declare-fun x444 () Bool)
(declare-fun x360 () Int)
(declare-fun x669 () Int)
(declare-fun x1181 () Int)
(declare-fun x568 () Int)
(declare-fun x1086 () Int)
(declare-fun x795 () Int)
(declare-fun x1606 () Bool)
(declare-fun x1784 () Int)
(declare-fun x1186 () Int)
(declare-fun x1004 () Int)
(declare-fun x1102 () Bool)
(declare-fun x1088 () Int)
(declare-fun x1187 () Int)
(declare-fun x1609 () Int)
(declare-fun x617 () Int)
(declare-fun x443 () Int)
(declare-fun x1237 () Int)
(declare-fun x903 () Int)
(declare-fun x367 () Int)
(declare-fun x588 () Int)
(declare-fun x350 (Int) Int)
(declare-fun x223 () Int)
(declare-fun x1765 () Bool)
(define-fun x1451 ((x1336 x1336) (x1723 Int)) x1336 (ite ((_ is x1307) x1336) (x1307 (x141 x1336) (+ (x1091 x1336) x1723)) (ite ((_ is x441) x1336) (x441 (x560 x1336) (x969 x1336) (+ (x1317 x1336) x1723)) (x1228 (+ x1723 (x1412 x1336))))))
(define-fun x859 ((x90 Int)) Int (ite (and (<= 0 x90) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x90)) x90 (- x90 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1724 ((x90 Int)) Int (ite (and (>= x90 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x90 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x90) x90))
(define-fun x1644 ((x90 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x90) (>= x90 0)) x90 (ite (and (< x90 231584178474632390847141970017375815706539969331281128078915168015826259279872) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x90)) (- x90 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (> 0 x90) (>= x90 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x90 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x289 x90 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1492 ((x1480 Int)) Bool (and (>= x1480 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1480)))
(define-fun x1393 ((x1480 Int)) Bool (and (= x1480 (x336 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1480)) (= x1480 (x336 x1480 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1629 ((x1480 Int)) Bool (and (= 0 (x336 x1480 0)) (= 0 (x336 0 x1480))))
(define-fun x133 ((x1480 Int)) Bool (= (x336 x1480 x1480) x1480))
(define-fun x355 ((x1480 Int)) Bool (and (x1393 x1480) (x133 x1480) (x1629 x1480)))
(define-fun x1547 ((x1480 Int)) Bool (= (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1480)) (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1480)))
(define-fun x362 ((x1480 Int)) Bool (=> (and (>= x1480 0) (< x1480 32)) (= (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1480) 0)))
(define-fun x1045 ((x1480 Int) (x304 Int) (x385 Int) (x1066 Int)) Bool (and (> 1 x1066) (> 32 x304) (>= x1066 0) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x385) (= (+ (* x1066 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* x385 32) x304) x1480) (= (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1480) (* 32 x385)) (<= 0 x385) (>= x304 0)))
(define-fun x1782 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x362 x1480) (x1045 x1480 x1688 x800 x1432) (x1547 x1480)))
(define-fun x865 ((x1480 Int) (x304 Int)) Bool (= (x336 x1480 x304) (x336 x304 x1480)))
(define-fun x410 ((x1480 Int) (x304 Int)) Bool (and (=> (>= x304 0) (<= (x336 x1480 x304) x304)) (<= 0 (x336 x1480 x304)) (=> (>= x1480 0) (<= (x336 x1480 x304) x1480))))
(define-fun x933 ((x1480 Int) (x304 Int)) Bool (and (x410 x1480 x304) (x865 x1480 x304)))
(define-fun x964 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x1782 x1480 x1688 x800 x1432) (x933 x1480 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x145 ((x1480 Int)) Bool (= (x336 255 x1480) (x336 255 (x336 255 x1480))))
(define-fun x1078 ((x1480 Int)) Bool (=> (and (<= 0 x1480) (> 256 x1480)) (= (x336 255 x1480) x1480)))
(define-fun x1155 ((x1480 Int)) Bool (=> (= (x336 255 x1480) x1480) (and (<= 0 x1480) (> 256 x1480))))
(define-fun x1267 ((x1480 Int)) Bool (=> (and (< x1480 512) (>= x1480 256)) (= (- x1480 256) (x336 255 x1480))))
(define-fun x1628 ((x1480 Int) (x304 Int)) Bool (and (= x1480 (+ (* x304 256) (x336 255 x1480))) (<= 0 x304)))
(define-fun x1080 ((x1480 Int) (x852 Int)) Bool (and (x1628 x1480 x852) (x1155 x1480) (x1267 x1480) (x1078 x1480) (x145 x1480)))
(define-fun x1436 ((x1480 Int) (x852 Int)) Bool (and (x1080 x1480 x852) (x933 x1480 255)))
(define-fun x603 ((x1480 Int) (x304 Int)) Bool (= (x872 x1480 x304) (x872 x304 x1480)))
(define-fun x1604 ((x1480 Int) (x304 Int)) Bool (and (=> (and (> 0 x1480) (< 0 x304)) (< (x872 x1480 x304) 0)) (=> (and (< 0 x1480) (> x304 0)) (> (x872 x1480 x304) 0)) (=> (and (< x304 0) (> 0 x1480)) (> (x872 x1480 x304) 0)) (=> (and (> x1480 0) (> 0 x304)) (> 0 (x872 x1480 x304)))))
(define-fun x522 ((x1480 Int) (x304 Int)) Bool (=> (and (> x304 0) (< 0 x1480)) (and (>= (x872 x1480 x304) x1480) (<= x304 (x872 x1480 x304)))))
(define-fun x1766 ((x1480 Int) (x304 Int)) Bool (=> (not (= 0 x1480)) (= (and (< (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x872 x1480 x304)) (< (x872 x1480 x304) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x304 (x1332 (x1644 (x872 x1480 x304)) x1480)))))
(define-fun x802 ((x1480 Int) (x304 Int)) Bool (=> (and (= (x1332 (x872 x1480 x304) x1480) x304) (not (= x1480 0)) (not (= x304 0))) (= x1480 (x1332 (x872 x1480 x304) x304))))
(define-fun x466 ((x1480 Int) (x304 Int)) Bool (= (> (x872 x1480 x304) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (x1332 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1480) x304)))
(define-fun x1771 ((x1480 Int) (x304 Int)) Bool (and (x603 x1480 x304) (x1766 x1480 x304) (x1604 x1480 x304) (x802 x1480 x304) (x522 x1480 x304) (x466 x1480 x304)))
(define-fun x337 ((x1480 Int)) Bool (and (= (x872 x1480 0) 0) (= 0 (x872 0 x1480))))
(define-fun x663 ((x1480 Int)) Bool (and (= (x872 x1480 1) x1480) (= (x872 1 x1480) x1480)))
(define-fun x1000 ((x1480 Int)) Bool (and (x337 x1480) (x663 x1480)))
(define-fun x1553 ((x1480 Int)) Bool (= (x336 5192296858534827628530496329220095 (x336 5192296858534827628530496329220095 x1480)) (x336 5192296858534827628530496329220095 x1480)))
(define-fun x395 ((x1480 Int)) Bool (=> (and (>= x1480 0) (> 5192296858534827628530496329220096 x1480)) (= (x336 5192296858534827628530496329220095 x1480) x1480)))
(define-fun x716 ((x1480 Int)) Bool (=> (= (x336 5192296858534827628530496329220095 x1480) x1480) (and (>= x1480 0) (< x1480 5192296858534827628530496329220096))))
(define-fun x798 ((x1480 Int)) Bool (=> (and (< x1480 10384593717069655257060992658440192) (<= 5192296858534827628530496329220096 x1480)) (= (- x1480 5192296858534827628530496329220096) (x336 5192296858534827628530496329220095 x1480))))
(define-fun x413 ((x1480 Int) (x304 Int)) Bool (and (<= 0 x304) (= (+ (x336 5192296858534827628530496329220095 x1480) (* 5192296858534827628530496329220096 x304)) x1480)))
(define-fun x616 ((x1480 Int) (x852 Int)) Bool (and (x413 x1480 x852) (x798 x1480) (x1553 x1480) (x716 x1480) (x395 x1480)))
(define-fun x871 ((x1480 Int) (x852 Int)) Bool (and (x616 x1480 x852) (x933 x1480 5192296858534827628530496329220095)))
(define-fun x446 ((x1480 Int) (x304 Int)) Bool (=> (and (> x1480 0) (> x304 0)) (and (>= (x1332 x1480 x304) 0) (>= x1480 (x1332 x1480 x304)))))
(define-fun x286 ((x1480 Int) (x304 Int)) Bool (=> (and (>= x1480 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1480) (<= 1 x304) (< x304 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (<= 0 (x1332 x1480 x304)) (< (x1332 x1480 x304) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x1452 ((x1480 Int) (x304 Int)) Bool (=> (and (< x304 x1480) (> x304 1)) (> x1480 (x1332 x1480 x304))))
(define-fun x384 ((x1480 Int) (x304 Int)) Bool (=> (and (> x304 0) (< 0 x1480)) (= (= (x1332 x1480 x304) 0) (> x304 x1480))))
(define-fun x1167 ((x1480 Int) (x304 Int)) Bool (=> (and (< 0 x304) (> x1480 0)) (and (< (- x1480 x304) (* (x1332 x1480 x304) x304)) (>= x1480 (* (x1332 x1480 x304) x304)))))
(define-fun x138 ((x1480 Int) (x304 Int)) Bool (= (- x1480 (x336 (- x304 1) x1480)) (* (x1332 x1480 x304) x304)))
(define-fun x438 ((x1480 Int) (x304 Int)) Bool (and (x1167 x1480 x304) (x384 x1480 x304) (x138 x1480 x304) (x286 x1480 x304) (x446 x1480 x304) (x1452 x1480 x304)))
(define-fun x1481 ((x1480 Int)) Bool (= (x1332 0 x1480) 0))
(define-fun x1013 ((x1480 Int)) Bool (= x1480 (x1332 x1480 1)))
(define-fun x88 ((x1480 Int)) Bool (=> (not (= x1480 0)) (= 1 (x1332 x1480 x1480))))
(define-fun x695 ((x1480 Int)) Bool (and (x1013 x1480) (x1481 x1480) (x88 x1480)))
(define-fun x1127 ((x1480 Int) (x304 Int)) Bool (=> (and (< 0 x1480) (> x304 0)) (and (>= x1480 (x872 (x1332 x1480 x304) x304)) (< (- x1480 x304) (x872 (x1332 x1480 x304) x304)))))
(define-fun x25 ((x1480 Int) (x304 Int)) Bool (and (x286 x1480 x304) (x446 x1480 x304) (x384 x1480 x304) (x1127 x1480 x304) (x1452 x1480 x304)))
(define-fun x825 ((x1480 Int) (x304 Int)) Bool (and (x1167 x1480 x304) (x384 x1480 x304) (x446 x1480 x304) (x1452 x1480 x304) (x286 x1480 x304)))
(define-fun x545 ((x1480 Int)) Bool (= (x336 18446744073709551615 x1480) (x336 18446744073709551615 (x336 18446744073709551615 x1480))))
(define-fun x579 ((x1480 Int)) Bool (=> (and (>= x1480 0) (< x1480 18446744073709551616)) (= x1480 (x336 18446744073709551615 x1480))))
(define-fun x1206 ((x1480 Int)) Bool (=> (= x1480 (x336 18446744073709551615 x1480)) (and (> 18446744073709551616 x1480) (<= 0 x1480))))
(define-fun x1617 ((x1480 Int)) Bool (=> (and (>= x1480 18446744073709551616) (< x1480 36893488147419103232)) (= (- x1480 18446744073709551616) (x336 18446744073709551615 x1480))))
(define-fun x1733 ((x1480 Int) (x304 Int)) Bool (and (= (+ (* x304 18446744073709551616) (x336 18446744073709551615 x1480)) x1480) (>= x304 0)))
(define-fun x921 ((x1480 Int) (x852 Int)) Bool (and (x579 x1480) (x1733 x1480 x852) (x545 x1480) (x1617 x1480) (x1206 x1480)))
(define-fun x1355 ((x1480 Int) (x852 Int)) Bool (and (x933 x1480 18446744073709551615) (x921 x1480 x852)))
(define-fun x1530 ((x1480 Int)) Bool (= (x336 4294967295 x1480) (x336 4294967295 (x336 4294967295 x1480))))
(define-fun x1637 ((x1480 Int)) Bool (=> (and (<= 0 x1480) (> 4294967296 x1480)) (= x1480 (x336 4294967295 x1480))))
(define-fun x21 ((x1480 Int)) Bool (=> (= x1480 (x336 4294967295 x1480)) (and (>= x1480 0) (< x1480 4294967296))))
(define-fun x686 ((x1480 Int)) Bool (=> (and (> 8589934592 x1480) (<= 4294967296 x1480)) (= (x336 4294967295 x1480) (- x1480 4294967296))))
(define-fun x582 ((x1480 Int) (x304 Int)) Bool (and (>= x304 0) (= x1480 (+ (* 4294967296 x304) (x336 4294967295 x1480)))))
(define-fun x827 ((x1480 Int) (x852 Int)) Bool (and (x21 x1480) (x686 x1480) (x1637 x1480) (x1530 x1480) (x582 x1480 x852)))
(define-fun x1038 ((x1480 Int) (x852 Int)) Bool (and (x933 x1480 4294967295) (x827 x1480 x852)))
(define-fun x1257 ((x1480 Int)) Bool (= (x336 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1480) (x336 115792089237316195423570985008687907853269984665640564039457584007913129639680 (x336 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1480))))
(define-fun x407 ((x1480 Int)) Bool (=> (and (< x1480 256) (>= x1480 0)) (= (x336 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1480) 0)))
(define-fun x28 ((x1480 Int) (x304 Int) (x385 Int) (x1066 Int)) Bool (and (= (* 256 x385) (x336 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1480)) (<= 0 x304) (<= 0 x385) (= x1480 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1066) (* x385 256) x304)) (>= x1066 0) (< x1066 1) (< x304 256) (< x385 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(define-fun x971 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x28 x1480 x1688 x800 x1432) (x407 x1480) (x1257 x1480)))
(define-fun x1028 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x933 x1480 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x971 x1480 x1688 x800 x1432)))
(define-fun x745 ((x1480 Int) (x304 Int)) Bool (= (x872 x1480 x304) (* x1480 x304)))
(define-fun x427 ((x1480 Int) (x304 Int)) Bool (=> (not (= x1480 0)) (= (and (> (* x1480 x304) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1480 x304))) (= x304 (x1332 (x1644 (* x1480 x304)) x1480)))))
(define-fun x147 ((x1480 Int) (x304 Int)) Bool (= (> x304 (x1332 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1480)) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (* x1480 x304))))
(define-fun x1462 ((x1480 Int) (x304 Int)) Bool (and (x147 x1480 x304) (x745 x1480 x304) (x427 x1480 x304)))
(define-fun x1772 ((x1480 Int) (x304 Int)) Bool (and (>= (x289 x1480 x304) 0) (> x304 (x289 x1480 x304))))
(define-fun x1573 ((x1480 Int) (x304 Int)) Bool (=> (< 0 x304) (= (= x1480 (* (x1332 x1480 x304) x304)) (= (x289 x1480 x304) 0))))
(define-fun x962 ((x1480 Int) (x304 Int)) Bool (=> (> x304 0) (= x1480 (+ (* (x1332 x1480 x304) x304) (x289 x1480 x304)))))
(define-fun x592 ((x1480 Int) (x304 Int)) Bool (and (x1573 x1480 x304) (x1772 x1480 x304) (x962 x1480 x304)))
(define-fun x950 ((x1480 Int)) Bool (= (x289 0 x1480) 0))
(define-fun x1303 ((x1480 Int)) Bool (= (x289 x1480 1) 0))
(define-fun x732 ((x1480 Int)) Bool (= 0 (x289 x1480 x1480)))
(define-fun x1498 ((x1480 Int)) Bool (and (x732 x1480) (x950 x1480) (x1303 x1480)))
(define-fun x713 ((x1480 Int)) Bool (= (x336 452312848583266388373324160190187140051835877600158453279131187530910662655 (x336 452312848583266388373324160190187140051835877600158453279131187530910662655 x1480)) (x336 452312848583266388373324160190187140051835877600158453279131187530910662655 x1480)))
(define-fun x1743 ((x1480 Int)) Bool (=> (and (>= x1480 0) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 x1480)) (= x1480 (x336 452312848583266388373324160190187140051835877600158453279131187530910662655 x1480))))
(define-fun x977 ((x1480 Int)) Bool (=> (= x1480 (x336 452312848583266388373324160190187140051835877600158453279131187530910662655 x1480)) (and (> 452312848583266388373324160190187140051835877600158453279131187530910662656 x1480) (>= x1480 0))))
(define-fun x515 ((x1480 Int)) Bool (=> (and (<= 452312848583266388373324160190187140051835877600158453279131187530910662656 x1480) (< x1480 904625697166532776746648320380374280103671755200316906558262375061821325312)) (= (- x1480 452312848583266388373324160190187140051835877600158453279131187530910662656) (x336 452312848583266388373324160190187140051835877600158453279131187530910662655 x1480))))
(define-fun x1489 ((x1480 Int) (x304 Int)) Bool (and (>= x304 0) (= (+ (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x304) (x336 452312848583266388373324160190187140051835877600158453279131187530910662655 x1480)) x1480)))
(define-fun x1103 ((x1480 Int) (x852 Int)) Bool (and (x515 x1480) (x1489 x1480 x852) (x977 x1480) (x1743 x1480) (x713 x1480)))
(define-fun x369 ((x1480 Int) (x852 Int)) Bool (and (x933 x1480 452312848583266388373324160190187140051835877600158453279131187530910662655) (x1103 x1480 x852)))
(define-fun x958 ((x1480 Int)) Bool (= (x336 1461501637330902918203684832716283019655932542975 (x336 1461501637330902918203684832716283019655932542975 x1480)) (x336 1461501637330902918203684832716283019655932542975 x1480)))
(define-fun x1794 ((x1480 Int)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x1480) (<= 0 x1480)) (= x1480 (x336 1461501637330902918203684832716283019655932542975 x1480))))
(define-fun x816 ((x1480 Int)) Bool (=> (= (x336 1461501637330902918203684832716283019655932542975 x1480) x1480) (and (< x1480 1461501637330902918203684832716283019655932542976) (>= x1480 0))))
(define-fun x308 ((x1480 Int)) Bool (=> (and (< x1480 2923003274661805836407369665432566039311865085952) (<= 1461501637330902918203684832716283019655932542976 x1480)) (= (- x1480 1461501637330902918203684832716283019655932542976) (x336 1461501637330902918203684832716283019655932542975 x1480))))
(define-fun x263 ((x1480 Int) (x304 Int)) Bool (and (>= x304 0) (= x1480 (+ (* 1461501637330902918203684832716283019655932542976 x304) (x336 1461501637330902918203684832716283019655932542975 x1480)))))
(define-fun x1426 ((x1480 Int) (x852 Int)) Bool (and (x816 x1480) (x308 x1480) (x1794 x1480) (x263 x1480 x852) (x958 x1480)))
(define-fun x111 ((x1480 Int) (x852 Int)) Bool (and (x1426 x1480 x852) (x933 x1480 1461501637330902918203684832716283019655932542975)))
(define-fun x352 ((x1480 Int)) Bool (= (x336 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x336 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1480)) (x336 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1480)))
(define-fun x1294 ((x1480 Int)) Bool (=> (and (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1480) (<= 0 x1480)) (= (x336 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1480) x1480)))
(define-fun x550 ((x1480 Int)) Bool (=> (= (x336 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1480) x1480) (and (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1480) (>= x1480 0))))
(define-fun x1753 ((x1480 Int)) Bool (=> (and (< x1480 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1480 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (x336 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1480) (- x1480 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(define-fun x1448 ((x1480 Int) (x304 Int)) Bool (and (<= 0 x304) (= (+ (x336 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1480) (* 57896044618658097711785492504343953926634992332820282019728792003956564819968 x304)) x1480)))
(define-fun x693 ((x1480 Int) (x852 Int)) Bool (and (x1294 x1480) (x1753 x1480) (x550 x1480) (x352 x1480) (x1448 x1480 x852)))
(define-fun x718 ((x1480 Int) (x852 Int)) Bool (and (x933 x1480 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x693 x1480 x852)))
(define-fun x491 ((x1480 Int)) Bool (= (x336 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1480) (x336 115792089237316195423570985007226406215939081747436879206741300988257197096960 (x336 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1480))))
(define-fun x1469 ((x1480 Int)) Bool (=> (and (<= 0 x1480) (> 1461501637330902918203684832716283019655932542976 x1480)) (= 0 (x336 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1480))))
(define-fun x1529 ((x1480 Int) (x304 Int) (x385 Int) (x1066 Int)) Bool (and (< x385 79228162514264337593543950336) (= (* x385 1461501637330902918203684832716283019655932542976) (x336 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1480)) (>= x385 0) (= x1480 (+ x304 (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1066) (* x385 1461501637330902918203684832716283019655932542976))) (< x304 1461501637330902918203684832716283019655932542976) (<= 0 x304) (>= x1066 0) (< x1066 1)))
(define-fun x1618 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x1469 x1480) (x1529 x1480 x1688 x800 x1432) (x491 x1480)))
(define-fun x154 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x1618 x1480 x1688 x800 x1432) (x933 x1480 115792089237316195423570985007226406215939081747436879206741300988257197096960)))
(define-fun x1673 ((x1480 Int)) Bool (= (x336 115792089210356248756420345215482394403581256910207104449633294546465451933695 (x336 115792089210356248756420345215482394403581256910207104449633294546465451933695 x1480)) (x336 115792089210356248756420345215482394403581256910207104449633294546465451933695 x1480)))
(define-fun x1439 ((x1480 Int)) Bool (=> (and (<= 0 x1480) (> 1461501637330902918203684832716283019655932542976 x1480)) (= (x336 115792089210356248756420345215482394403581256910207104449633294546465451933695 x1480) x1480)))
(define-fun x1189 ((x1480 Int) (x304 Int) (x385 Int) (x1066 Int)) Bool (and (<= 0 x1066) (<= 0 x304) (< x1066 4294967296) (= (+ x304 (* 26959946667150639794667015087019630673637144422540572481103610249216 x1066)) (x336 115792089210356248756420345215482394403581256910207104449633294546465451933695 x1480)) (= (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x1066) x304 (* 1461501637330902918203684832716283019655932542976 x385)) x1480) (< x304 1461501637330902918203684832716283019655932542976) (>= x385 0) (> 18446744073709551616 x385)))
(define-fun x708 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x1189 x1480 x1688 x800 x1432) (x1673 x1480) (x1439 x1480)))
(define-fun x676 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x933 x1480 115792089210356248756420345215482394403581256910207104449633294546465451933695) (x708 x1480 x1688 x800 x1432)))
(define-fun x1449 ((x1480 Int)) Bool (= (x336 26959946667150639793205513449688727755433459589824289461447677706240 (x336 26959946667150639793205513449688727755433459589824289461447677706240 x1480)) (x336 26959946667150639793205513449688727755433459589824289461447677706240 x1480)))
(define-fun x1122 ((x1480 Int)) Bool (=> (and (<= 0 x1480) (< x1480 1461501637330902918203684832716283019655932542976)) (= (x336 26959946667150639793205513449688727755433459589824289461447677706240 x1480) 0)))
(define-fun x974 ((x1480 Int) (x304 Int) (x385 Int) (x1066 Int)) Bool (and (< x304 1461501637330902918203684832716283019655932542976) (> 18446744073709551616 x385) (<= 0 x1066) (>= x385 0) (> 4294967296 x1066) (>= x304 0) (= (* 1461501637330902918203684832716283019655932542976 x385) (x336 26959946667150639793205513449688727755433459589824289461447677706240 x1480)) (= x1480 (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x1066) (* x385 1461501637330902918203684832716283019655932542976) x304))))
(define-fun x747 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x974 x1480 x1688 x800 x1432) (x1122 x1480) (x1449 x1480)))
(define-fun x274 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x933 x1480 26959946667150639793205513449688727755433459589824289461447677706240) (x747 x1480 x1688 x800 x1432)))
(define-fun x619 ((x1480 Int)) Bool (= (x336 26959946667150639794667015087019630673637144422540572481103610249215 x1480) (x336 26959946667150639794667015087019630673637144422540572481103610249215 (x336 26959946667150639794667015087019630673637144422540572481103610249215 x1480))))
(define-fun x33 ((x1480 Int)) Bool (=> (and (<= 0 x1480) (< x1480 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x336 26959946667150639794667015087019630673637144422540572481103610249215 x1480) x1480)))
(define-fun x844 ((x1480 Int)) Bool (=> (= (x336 26959946667150639794667015087019630673637144422540572481103610249215 x1480) x1480) (and (<= 0 x1480) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1480))))
(define-fun x1141 ((x1480 Int)) Bool (=> (and (<= 26959946667150639794667015087019630673637144422540572481103610249216 x1480) (< x1480 53919893334301279589334030174039261347274288845081144962207220498432)) (= (- x1480 26959946667150639794667015087019630673637144422540572481103610249216) (x336 26959946667150639794667015087019630673637144422540572481103610249215 x1480))))
(define-fun x1275 ((x1480 Int) (x304 Int)) Bool (and (= x1480 (+ (x336 26959946667150639794667015087019630673637144422540572481103610249215 x1480) (* 26959946667150639794667015087019630673637144422540572481103610249216 x304))) (<= 0 x304)))
(define-fun x1047 ((x1480 Int) (x852 Int)) Bool (and (x844 x1480) (x1141 x1480) (x619 x1480) (x1275 x1480 x852) (x33 x1480)))
(define-fun x554 ((x1480 Int) (x852 Int)) Bool (and (x1047 x1480 x852) (x933 x1480 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x814 ((x1480 Int)) Bool (= (x336 115792089237316195423570984636004990333889740523700931696805413995650331181055 x1480) (x336 115792089237316195423570984636004990333889740523700931696805413995650331181055 (x336 115792089237316195423570984636004990333889740523700931696805413995650331181055 x1480))))
(define-fun x840 ((x1480 Int)) Bool (=> (and (< x1480 1461501637330902918203684832716283019655932542976) (<= 0 x1480)) (= (x336 115792089237316195423570984636004990333889740523700931696805413995650331181055 x1480) x1480)))
(define-fun x1056 ((x1480 Int) (x304 Int) (x385 Int) (x1066 Int)) Bool (and (= x1480 (+ (* x1066 374144419156711147060143317175368453031918731001856) (* x385 1461501637330902918203684832716283019655932542976) x304)) (> 256 x385) (>= x1066 0) (>= x304 0) (>= x385 0) (> 309485009821345068724781056 x1066) (> 1461501637330902918203684832716283019655932542976 x304) (= (+ x304 (* 374144419156711147060143317175368453031918731001856 x1066)) (x336 115792089237316195423570984636004990333889740523700931696805413995650331181055 x1480))))
(define-fun x36 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x814 x1480) (x840 x1480) (x1056 x1480 x1688 x800 x1432)))
(define-fun x761 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x933 x1480 115792089237316195423570984636004990333889740523700931696805413995650331181055) (x36 x1480 x1688 x800 x1432)))
(define-fun x13 ((x1480 Int)) Bool (= (x336 372682917519380244141939632342652170012262798458880 x1480) (x336 372682917519380244141939632342652170012262798458880 (x336 372682917519380244141939632342652170012262798458880 x1480))))
(define-fun x744 ((x1480 Int)) Bool (=> (and (<= 0 x1480) (> 1461501637330902918203684832716283019655932542976 x1480)) (= (x336 372682917519380244141939632342652170012262798458880 x1480) 0)))
(define-fun x1316 ((x1480 Int) (x304 Int) (x385 Int) (x1066 Int)) Bool (and (= x1480 (+ x304 (* x385 1461501637330902918203684832716283019655932542976) (* x1066 374144419156711147060143317175368453031918731001856))) (<= 0 x385) (> 1461501637330902918203684832716283019655932542976 x304) (>= x304 0) (>= x1066 0) (> 309485009821345068724781056 x1066) (> 256 x385) (= (x336 372682917519380244141939632342652170012262798458880 x1480) (* x385 1461501637330902918203684832716283019655932542976))))
(define-fun x1258 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x1316 x1480 x1688 x800 x1432) (x744 x1480) (x13 x1480)))
(define-fun x960 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x1258 x1480 x1688 x800 x1432) (x933 x1480 372682917519380244141939632342652170012262798458880)))
(define-fun x536 ((x1480 Int)) Bool (= (x336 115792089210356248756420345214020892766250353992003419616917011526809519390720 (x336 115792089210356248756420345214020892766250353992003419616917011526809519390720 x1480)) (x336 115792089210356248756420345214020892766250353992003419616917011526809519390720 x1480)))
(define-fun x1411 ((x1480 Int)) Bool (=> (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x1480) (>= x1480 0)) (= (x336 115792089210356248756420345214020892766250353992003419616917011526809519390720 x1480) 0)))
(define-fun x292 ((x1480 Int) (x304 Int) (x385 Int) (x1066 Int)) Bool (and (= (x336 115792089210356248756420345214020892766250353992003419616917011526809519390720 x1480) (* 26959946667150639794667015087019630673637144422540572481103610249216 x385)) (>= x304 0) (<= 0 x385) (= (+ (* x385 26959946667150639794667015087019630673637144422540572481103610249216) x304 (* x1066 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1480) (>= x1066 0) (< x385 4294967296) (> 26959946667150639794667015087019630673637144422540572481103610249216 x304) (> 1 x1066)))
(define-fun x1700 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x292 x1480 x1688 x800 x1432) (x536 x1480) (x1411 x1480)))
(define-fun x365 ((x1480 Int) (x1688 Int) (x800 Int) (x1432 Int)) Bool (and (x1700 x1480 x1688 x800 x1432) (x933 x1480 115792089210356248756420345214020892766250353992003419616917011526809519390720)))
(define-fun x997 ((x1021 Int)) Int (x5 x1021))
(define-fun x32 ((x1021 x1336)) Int (ite (= x1021 (x804 x1716)) x1434 (x199 x1021)))
(define-fun x1775 ((x1021 x1336)) Int (ite (= (x804 274184521717934524641157099916833587240) x1021) x1778 (x32 x1021)))
(define-fun x49 ((x1021 Int)) Int (ite (= 128 x1021) x528 (x221 x1021)))
(define-fun x779 ((x1021 Int)) Int (ite (and (<= 160 x1021) (< x1021 (+ x528 160))) (x5 (+ x225 (- x1021 160))) (x49 x1021)))
(define-fun x456 ((x1021 Int)) Int (ite (= x1148 x1021) 0 (x779 x1021)))
(define-fun x709 ((x1021 Int)) Int (ite (= x1021 x1559) x620 (x456 x1021)))
(define-fun x946 ((x1021 Int)) Int (ite (= x1024 x1021) x493 (x709 x1021)))
(define-fun x1145 ((x1021 Int)) Int (ite (= x1349 x1021) x161 (x946 x1021)))
(define-fun x775 ((x1021 Int)) Int (ite (= x1192 x1021) x34 (x1145 x1021)))
(define-fun x1365 ((x1021 Int)) Int (ite (= x1576 x1021) x637 (x775 x1021)))
(define-fun x1381 ((x1021 Int)) Int (ite (= x828 x1021) x290 (x1365 x1021)))
(define-fun x391 ((x1021 Int)) Int (ite (= x272 x1021) x1416 (x1381 x1021)))
(define-fun x1633 ((x1021 Int)) Int (ite (= x537 x1021) x1611 (x391 x1021)))
(define-fun x497 ((x1021 Int)) Int (ite (= x932 x1021) x1601 (x1633 x1021)))
(define-fun x156 ((x1021 Int)) Int (ite (= x1021 x476) x6 (x497 x1021)))
(define-fun x597 ((x1021 Int)) Int (ite (= x1346 x1021) (ite true 1 0) (x156 x1021)))
(define-fun x1203 ((x1021 x1336)) Int (ite (= x1490 x1021) x124 (x1511 x1021)))
(define-fun x1314 ((x1021 Int)) Int (ite (= x1021 x743) x620 (x597 x1021)))
(define-fun x848 ((x1021 Int)) Int (ite (= x1021 x721) x493 (x1314 x1021)))
(define-fun x180 ((x1021 Int)) Int (ite (= x134 x1021) x59 (x848 x1021)))
(define-fun x1125 ((x1021 Int)) Int (ite (= x1070 x1021) x176 (x180 x1021)))
(define-fun x267 ((x1021 Int)) Int (ite (= x343 x1021) x82 (x1125 x1021)))
(define-fun x482 ((x1021 Int)) Int (ite (= x1021 x1406) x95 (x267 x1021)))
(define-fun x751 ((x1021 Int)) Int (ite (= x623 x1021) x332 (x482 x1021)))
(define-fun x368 ((x1021 Int)) Int (ite (= x1184 x1021) x1088 (x751 x1021)))
(define-fun x511 ((x1021 Int)) Int (ite (= x1329 x1021) x994 (x368 x1021)))
(define-fun x530 ((x1021 Int)) Int (ite (= x1021 x736) x540 (x511 x1021)))
(define-fun x876 ((x1021 Int)) Int (ite (= x1021 x354) 11430537079145650693387304458692941425836787954612963690241153482819318579200 (x530 x1021)))
(define-fun x186 ((x1021 Int)) Int (ite (= x995 x1021) x989 (x876 x1021)))
(define-fun x1014 ((x1021 Int)) Int (ite (= x1021 x591) 0 (x46 x1021)))
(define-fun x1610 ((x1021 Int)) Int (ite (= x1226 x1021) x1181 (x1014 x1021)))
(define-fun x887 ((x1021 Int)) Int (ite (= x1021 x1250) x786 (x1610 x1021)))
(define-fun x1785 ((x1021 Int)) Int (ite (= x813 x1021) x1615 (x887 x1021)))
(define-fun x1210 ((x1021 Int)) Int (ite (= x878 x1021) x140 (x1785 x1021)))
(define-fun x115 ((x1021 Int)) Int (ite (= x1021 0) x1799 (x470 x1021)))
(define-fun x1150 ((x1021 Int)) Int (ite (= x1021 x1455) x1799 (x1210 x1021)))
(define-fun x1540 ((x1021 Int)) Int (ite (= x591 x1021) 0 (x46 x1021)))
(define-fun x1035 ((x1021 Int)) Int (ite (= x1021 x517) x1181 (x1540 x1021)))
(define-fun x226 ((x1021 Int)) Int (ite (= x1021 x1697) x1730 (x1035 x1021)))
(define-fun x1376 ((x1021 Int)) Int (ite (= x1021 x583) x765 (x226 x1021)))
(define-fun x1163 ((x1021 Int)) Int (ite (= x1021 x106) x1447 (x1376 x1021)))
(define-fun x577 ((x1021 Int)) Int (ite (= x1021 0) x806 (x378 x1021)))
(define-fun x1577 ((x1021 Int)) Int (ite (= x102 x1021) x806 (x1163 x1021)))
(define-fun x371 ((x1021 Int)) Int (ite (and (not x1236) x1647 x1012) (ite (and (not x313) x1647 (not x467) (not x1236) (not x1780) x1012) (x1150 x1021) (ite (and x1780 x1012 (not x467) (not x313) (not x1236) x1647) (x1150 x1021) (x46 x1021))) (ite (and x1344 (not x1236) x1647 (not x1012)) (ite (and x1344 (not x128) (not x1545) (not x1012) x1647 (not x1236) (not x1548)) (x1577 x1021) (ite (and x1647 (not x1548) (not x1012) (not x1236) (not x1545) x1344 x128) (x1577 x1021) (x46 x1021))) (x46 x1021))))
(define-fun x424 ((x1021 x1336)) Int (ite (= x281 x1021) x1594 (x1203 x1021)))
(define-fun x1748 ((x1021 x1336)) Int (ite (= x1021 x684) x580 (x424 x1021)))
(define-fun x640 ((x1021 x1336)) Int (ite (= x741 x1021) x63 (x1748 x1021)))
(define-fun x760 ((x1021 x1336)) Int (ite (= x973 x1021) x197 (x640 x1021)))
(define-fun x320 ((x1021 x1336)) Int (ite (= x1021 x678) x74 (x760 x1021)))
(define-fun x479 ((x1021 x1336)) Int (ite (= x1021 x678) x1749 (x320 x1021)))
(define-fun x1387 ((x1021 x1336)) Int (ite (= x799 x1021) x1496 (x479 x1021)))
(define-fun x1215 ((x1021 x1336)) Int (ite (= x799 x1021) x979 (x1387 x1021)))
(define-fun x394 ((x1021 x1336)) Int (ite (= x799 x1021) x555 (x1215 x1021)))
(define-fun x1790 ((x1021 x1336)) Int (ite (= x1021 x262) x1100 (x394 x1021)))
(define-fun x1715 ((x1021 x1336)) Int (ite (= x1021 x262) x333 (x1790 x1021)))
(define-fun x1139 ((x1021 Int)) Int (ite (= x604 x1021) 904250603428552709895185118199468575982109441609966099573332780532423983104 (x371 x1021)))
(define-fun x768 ((x1021 Int)) Int (ite (and (>= x1021 x604) (> (+ 32 x604) x1021)) (x487 (+ 0 (- x1021 x604))) (x1249 x1021)))
(define-fun x524 ((x1021 x1336)) Int (ite (= x155 x1021) x912 (x233 x1021)))
(define-fun x1017 ((x1021 x1336)) Int (ite (= x1487 x1021) x1264 (x524 x1021)))
(define-fun x1695 ((x1021 x1336)) Int (ite (= x1021 x1707) x1200 (x1017 x1021)))
(define-fun x1571 ((x1021 x1336)) Int (ite (= x1021 x10) x968 (x1695 x1021)))
(define-fun x569 ((x1021 x1336)) Int (ite x1304 (ite (and x661 x807) (x1571 x1021) (x233 x1021)) (x233 x1021)))
(define-fun x244 ((x1021 x1336)) Int (ite (= x1170 x1021) x462 (x569 x1021)))
(define-fun x842 ((x1021 x1336)) Int (ite (= x1768 x1021) x1081 (x268 x1021)))
(define-fun x1591 ((x1021 x1336)) Int (ite (= x778 x1021) x1366 (x842 x1021)))
(define-fun x400 ((x1021 x1336)) Int (ite (= x1327 x1021) x392 (x1591 x1021)))
(define-fun x906 ((x1021 x1336)) Int (ite (= x1282 x1021) x62 (x400 x1021)))
(define-fun x688 ((x1021 x1336)) Int (ite (and x172 x1313) (x906 x1021) (x268 x1021)))
(define-fun x258 ((x1021 x1336)) Int (ite x682 (ite x547 (x688 x1021) (x268 x1021)) (x268 x1021)))
(define-fun x53 ((x1021 x1336)) Int (ite x1033 (x258 x1021) (x1511 x1021)))
(define-fun x37 ((x1021 Int)) Int (ite (= x617 x1021) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1538 x1021)))
(define-fun x224 ((x1021 Int)) Int (ite (= x1524 x1021) x795 (x37 x1021)))
(define-fun x630 ((x1021 Int)) Int (ite (= x1021 x1230) 274184521717934524641157099916833587240 (x224 x1021)))
(define-fun x335 ((x1021 Int)) Int (ite (= x617 x1021) x1343 (x646 x1021)))
(define-fun x1042 ((x1021 Int)) Int (ite (= x1021 x617) x874 (x646 x1021)))
(define-fun x1368 ((x1021 Int)) Int (ite (= x1021 x617) 109576784812748834340197573905731726730118698833493337707389013487240318287872 (x1538 x1021)))
(define-fun x1175 ((x1021 Int)) Int (ite (= x1021 x1564) x815 (x1368 x1021)))
(define-fun x60 ((x1021 Int)) Int (ite (= x1197 x1021) 274184521717934524641157099916833587240 (x1175 x1021)))
(define-fun x1493 ((x1021 Int)) Int (ite (= x1021 x1338) x1382 (x60 x1021)))
(define-fun x246 ((x1021 Int)) Int (ite (= x1021 x1762) x311 (x1493 x1021)))
(define-fun x855 ((x1021 Int)) Int (ite (= x1187 x1021) 160 (x246 x1021)))
(define-fun x1040 ((x1021 Int)) Int (ite (and (>= x1021 x617) (< x1021 (+ x617 0))) (x922 (+ (- x1021 x617) 0)) (x1689 x1021)))
(define-fun x1360 ((x1021 Int)) Int (ite x1304 (ite (and x661 x807) (x646 x1021) (ite (and x730 x667) (x335 x1021) (x1042 x1021))) (ite (and x1157 (not x1566) x1596) (x1040 x1021) (x1689 x1021))))
(define-fun x217 ((x1021 x1336)) Int (ite (= x593 x1021) x1457 (x525 x1021)))
(define-fun x375 ((x1021 x1336)) Int (ite (= x1525 x1021) x1420 (x217 x1021)))
(define-fun x219 ((x1021 x1336)) Int (ite x1304 (ite (and x807 x661) (x525 x1021) (ite (and x730 x667) (x525 x1021) (x375 x1021))) (ite (and x1157 (not x1566) x1596) (x723 x1021) (x525 x1021))))
(define-fun x1582 ((x1021 x1336)) Int (ite (= x1021 x914) x624 (x890 x1021)))
(define-fun x1726 ((x1021 x1336)) Int (ite x1304 (ite (and x807 x661) (x890 x1021) (ite (and x667 x730) (x890 x1021) (x1582 x1021))) (ite (and x1596 (not x1566) x1157) (x726 x1021) (x890 x1021))))
(define-fun x781 ((x1021 x1336)) Int (ite (= x1021 x1064) x698 (x724 x1021)))
(define-fun x1059 ((x1021 x1336)) Int (ite (= x271 x1021) x200 (x781 x1021)))
(define-fun x1034 ((x1021 x1336)) Int (ite x1304 (ite (and x661 x807) (x724 x1021) (ite (and x730 x667) (x1059 x1021) (x724 x1021))) (ite (and x1157 (not x1566) x1596) (x449 x1021) (x724 x1021))))
(define-fun x707 ((x1021 x1336)) Int (ite (= x750 x1021) x86 (x1106 x1021)))
(define-fun x323 ((x1021 x1336)) Int (ite x1304 (ite (and x807 x661) (x1106 x1021) (ite (and x730 x667) (x707 x1021) (x1106 x1021))) (ite (and x1157 x1596 (not x1566)) (x740 x1021) (x1106 x1021))))
(define-fun x1467 ((x1021 x1336)) Int (ite x1304 (x1775 x1021) (ite (and x1157 x1596 (not x1566)) (x346 x1021) (x1775 x1021))))
(define-fun x1693 ((x1021 Int)) Int (ite (= x1021 x1154) 9518847204935358166548570266051330015907116135037852959641967396525866745856 (x1783 x1021)))
(define-fun x1124 ((x1021 Int)) Int (ite (= x567 x1021) x223 (x1693 x1021)))
(define-fun x1146 ((x1021 Int)) Int (ite (= x1021 x130) 0 (x1124 x1021)))
(define-fun x845 ((x1021 Int)) Int (ite (= x1659 x1021) x662 (x1146 x1021)))
(define-fun x1563 ((x1021 Int)) Int (ite (= x287 x1021) 128 (x845 x1021)))
(define-fun x552 ((x1021 Int)) Int (ite (= x988 x1021) x892 (x23 x1021)))
(define-fun x189 ((x1021 Int)) Int (ite (= x1021 x1244) 0 (x1247 x1021)))
(define-fun x1359 ((x1021 Int)) Int (ite (and (> (+ x1154 32) x1021) (>= x1021 x1154)) (x1211 (+ 0 (- x1021 x1154))) (x639 x1021)))
(define-fun x836 ((x1021 Int)) Int (ite (and x298 x1558 x445) (x1359 x1021) (x639 x1021)))
(define-fun x809 ((x1021 Int)) Int (ite (= x1021 x523) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1256 x1021)))
(define-fun x1212 ((x1021 Int)) Int (ite (= 0 x1021) x451 (x416 x1021)))
(define-fun x1761 ((x1021 Int)) Int (ite (= x523 x1021) x451 (x1727 x1021)))
(define-fun x1631 ((x1021 Int)) Int (ite (= x1021 x523) x1527 (x1727 x1021)))
(define-fun x1246 ((x1021 Int)) Int (ite (= x1021 x523) x919 (x1727 x1021)))
(define-fun x1160 ((x1021 Int)) Int (ite (and x1466 x1323) (x1761 x1021) (ite (and x182 x1001) (x1631 x1021) (x1246 x1021))))
(define-fun x1409 ((x1021 Int)) Int (ite x1318 (x1160 x1021) (x1256 x1021)))
(define-fun x1268 ((x1021 Int)) Int (ite (= x1021 x1605) 34167655436598589418538772692774877509225721125679165766806516059628562808832 (x1409 x1021)))
(define-fun x113 ((x1021 Int)) Int (ite (= x909 x1021) x918 (x1268 x1021)))
(define-fun x558 ((x1021 Int)) Int (ite (and (< x1021 (+ 0 x1605)) (>= x1021 x1605)) (x431 (+ 0 (- x1021 x1605))) (x1402 x1021)))
(define-fun x821 ((x1021 Int)) Int (ite (= x1605 x1021) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1706 x1021)))
(define-fun x1002 ((x1021 Int)) Int (ite (= 0 x1021) x1011 (x153 x1021)))
(define-fun x92 ((x1021 Int)) Int (ite (= x1021 x1605) x1011 (x1395 x1021)))
(define-fun x1607 ((x1021 Int)) Int (ite (= x1021 x521) x746 (x1256 x1021)))
(define-fun x829 ((x1021 Int)) Int (ite (= x986 x1021) 274184521717934524641157099916833587240 (x1607 x1021)))
(define-fun x1585 ((x1021 Int)) Int (ite (= x1021 x203) x668 (x829 x1021)))
(define-fun x594 ((x1021 Int)) Int (ite (= x523 x1021) x1128 (x1585 x1021)))
(define-fun x1418 ((x1021 Int)) Int (ite (= x1021 x409) x1251 (x594 x1021)))
(define-fun x1581 ((x1021 Int)) Int (ite (= x243 x1021) 32 (x1418 x1021)))
(define-fun x923 ((x1021 Int)) Int (ite (= x257 x1021) x237 (x158 x1021)))
(define-fun x1523 ((x1021 Int)) Int (ite (= x749 x1021) 0 (x1191 x1021)))
(define-fun x1705 ((x1021 x1336)) Int (ite (= (x804 274184521717934524641157099916833587240) x1021) x1095 (x991 x1021)))
(define-fun x696 ((x1021 x1336)) Int (ite (= (x804 x1380) x1021) x415 (x1705 x1021)))
(define-fun x404 ((x1021 x1336)) Int (ite (= (x804 x1380) x1021) x163 (x696 x1021)))
(define-fun x87 ((x1021 x1336)) Int (ite (= (x804 274184521717934524641157099916833587240) x1021) x1114 (x404 x1021)))
(define-fun x1276 ((x1021 x1336)) Int (ite (and x1261 x1664) (x1471 x1021) (x991 x1021)))
(define-fun x119 ((x1021 Int)) Int (ite (= x398 x1021) x737 (x350 x1021)))
(define-fun x125 ((x1021 Int)) Int (ite (= x1021 x398) x1495 (x350 x1021)))
(define-fun x719 ((x1021 Int)) Int (ite (= 0 x1021) 1 (x1543 x1021)))
(define-fun x1188 ((x1021 Int)) Int (ite (= x1021 0) 1 (x1543 x1021)))
(define-fun x1651 ((x1021 Int)) Int (ite (and x1313 x172) (x1543 x1021) (ite (and x1781 x900) (x719 x1021) (x1188 x1021))))
(define-fun x170 ((x1021 Int)) Int (ite (= x398 x1021) x1713 (x1738 x1021)))
(define-fun x896 ((x1021 Int)) Int (ite (and (> (+ x705 x1713) x1021) (<= x705 x1021)) (x1651 (+ 0 (- x1021 x705))) (x170 x1021)))
(define-fun x1424 ((x1021 Int)) Int (ite (and x1161 x547) (x1738 x1021) (x896 x1021)))
(define-fun x598 ((x1021 Int)) Int (ite (= x1021 x1605) x184 (x1395 x1021)))
(define-fun x1703 ((x1021 Int)) Int (ite (= x1605 x1021) x607 (x1395 x1021)))
(define-fun x1010 ((x1021 Int)) Int (ite (and x1345 x704) (x92 x1021) (ite (and x1737 x1185) (x598 x1021) (x1703 x1021))))
(define-fun x1098 ((x1021 Int)) Int (ite x682 (ite x547 (x1424 x1021) (x1256 x1021)) (ite x1252 (x1010 x1021) (x1706 x1021))))
(define-fun x602 ((x1021 x1336)) Int (ite (= x1021 x322) x1513 (x1287 x1021)))
(define-fun x1510 ((x1021 x1336)) Int (ite (= x681 x1021) x1454 (x602 x1021)))
(define-fun x136 ((x1021 x1336)) Int (ite (and x1313 x172) (x1287 x1021) (ite (and x1781 x900) (x1287 x1021) (x1510 x1021))))
(define-fun x584 ((x1021 x1336)) Int (ite (and x1261 x1664) (x1389 x1021) (x1287 x1021)))
(define-fun x1169 ((x1021 x1336)) Int (ite x682 (ite x547 (x136 x1021) (x1287 x1021)) (x584 x1021)))
(define-fun x711 ((x1021 x1336)) Int (ite (= x1021 x1243) x911 (x1372 x1021)))
(define-fun x1773 ((x1021 x1336)) Int (ite (= x1021 x377) x674 (x711 x1021)))
(define-fun x899 ((x1021 x1336)) Int (ite (and x172 x1313) (x1372 x1021) (ite (and x1781 x900) (x1773 x1021) (x1372 x1021))))
(define-fun x280 ((x1021 x1336)) Int (ite (and x1664 x1261) (x334 x1021) (x1372 x1021)))
(define-fun x490 ((x1021 x1336)) Int (ite x682 (ite x547 (x899 x1021) (x1372 x1021)) (x280 x1021)))
(define-fun x631 ((x1021 x1336)) Int (ite (= x1021 (x804 274184521717934524641157099916833587240)) x212 (x26 x1021)))
(define-fun x1003 ((x1021 x1336)) Int (ite (= x1021 (x804 x1058)) x1710 (x631 x1021)))
(define-fun x993 ((x1021 x1336)) Int (ite (and (not x469) x1296 x143 x1153) (x608 x1021) (x1003 x1021)))
(define-fun x11 ((x1021 x1336)) Int (ite (= (x804 x1058) x1021) x31 (x993 x1021)))
(define-fun x573 ((x1021 Int)) Int (ite (= x1021 x67) x345 (x1098 x1021)))
(define-fun x348 ((x1021 Int)) Int (ite (= x1675 x1021) x1430 (x573 x1021)))
(define-fun x1129 ((x1021 Int)) Int (ite (= x1021 x1009) x1514 (x348 x1021)))
(define-fun x1803 ((x1021 Int)) Int (ite (= x1021 x884) x1565 (x1129 x1021)))
(define-fun x159 ((x1021 Int)) Int (ite (= x1143 x1021) 32 (x1803 x1021)))
(define-fun x955 ((x1021 Int)) Int (ite (= x1021 x1599) x860 (x1623 x1021)))
(define-fun x1431 ((x1021 Int)) Int (ite (= x94 x1021) 0 (x1285 x1021)))
(define-fun x1104 ((x1021 x1336)) Int (ite (and x298 x445) (ite (and x445 x298 x1558) (x687 x1021) (x323 x1021)) (x323 x1021)))
(define-fun x782 ((x1021 x1336)) Int (ite (and x298 x445) (ite (and x445 x1558 x298) (x605 x1021) (x1726 x1021)) (x1726 x1021)))
(define-fun x123 ((x1021 x1336)) Int (ite (= (x804 274184521717934524641157099916833587240) x1021) x1674 (x26 x1021)))
(define-fun x1680 ((x1021 x1336)) Int (ite (= (x804 x210) x1021) x622 (x123 x1021)))
(define-fun x643 ((x1021 x1336)) Int (ite (= x901 x1021) x1113 (x490 x1021)))
(define-fun x1795 ((x1021 Int)) Int (ite (= 0 x1021) 1 (x518 x1021)))
(define-fun x513 ((x1021 Int)) Int (ite (= x359 x1021) x549 (x70 x1021)))
(define-fun x664 ((x1021 Int)) Int (ite (= 0 x1021) 1 (x1554 x1021)))
(define-fun x1479 ((x1021 Int)) Int (ite (= x1021 0) 1 (x1554 x1021)))
(define-fun x783 ((x1021 Int)) Int (ite (= x1021 0) x919 (x416 x1021)))
(define-fun x1046 ((x1021 Int)) Int (ite (= x1021 0) x1527 (x416 x1021)))
(define-fun x52 ((x1021 Int)) Int (ite (= 0 x1021) x607 (x153 x1021)))
(define-fun x546 ((x1021 Int)) Int (ite (= x1021 0) x184 (x153 x1021)))
(define-fun x347 ((x1021 x1336)) Int (ite (= x1021 x1375) x75 (x1169 x1021)))
(define-fun x175 ((x1021 Int)) Int (ite (= x1021 0) 1 (x518 x1021)))
(define-fun x1750 ((x1021 Int)) Int (ite (= x1021 x359) x162 (x70 x1021)))
(define-fun x1643 ((x1021 Int)) Int (ite (and x174 x1765) (x1795 x1021) (x175 x1021)))
(define-fun x1422 ((x1021 x1336)) Int (ite (= x1021 (x804 x210)) x473 (x1680 x1021)))
(define-fun x879 ((x1021 Int)) Int (ite (= x1021 x359) x680 (x885 x1021)))
(define-fun x1491 ((x1021 Int)) Int (ite (and (> (+ x1476 x680) x1021) (<= x1476 x1021)) (x1643 (+ 0 (- x1021 x1476))) (x879 x1021)))
(define-fun x846 ((x1021 Int)) Int (ite (and x458 x866) (x885 x1021) (x1491 x1021)))
(define-fun x1410 ((x1480 Int) (x304 Int) (x385 Int) (x1066 Int)) Bool (=> (and (<= x1480 x385) (>= x304 0) (<= x304 x1066) (>= x1480 0)) (>= (x872 x385 x1066) (x872 x1480 x304))))
(define-fun x1708 ((x1480 Int) (x304 Int) (x385 Int) (x1066 Int)) Bool (=> (= x1480 x385) (= (x872 x1480 (- x304 x1066)) (- (x872 x1480 x304) (x872 x385 x1066)))))
(define-fun x259 ((x1480 Int)) Bool (=> (and (not (= 274184521717934524641157099916833587206 x1480)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1480)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1480)) (not (= 2835717307 x1480)) (not (= x1480 157198259)) (not (= x1480 115792089237316195423570984636004990333889740523700931696805413995650331181055)) (not (= x1480 904250603428552709895185118199468575982109441609966099573332780532423983104)) (not (= 1858285468 x1480)) (not (= 455944412 x1480)) (not (= 4294967296 x1480)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x1480)) (not (= 9518847204935358166548570266051330015907116135037852959641967396525866745856 x1480)) (not (= x1480 404098525)) (not (= 826074471 x1480)) (not (= x1480 2311529814)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1480)) (not (= x1480 115792089237316195423570985007226406215939081747436879206741300988257197096960)) (not (= 3155786881 x1480)) (not (= x1480 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1480)) (not (= x1480 599290589)) (not (= 511946350 x1480)) (not (= x1480 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= 2335792882 x1480)) (not (= 34167655436598589418538772692774877509225721125679165766806516059628562808832 x1480)) (not (= x1480 274184521717934524641157099916833587202)) (not (= x1480 2514000705)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639908 x1480)) (not (= x1480 1722255204)) (not (= x1480 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 4294967295 x1480)) (not (= x1480 115792089210356248756420345214020892766250353992003419616917011526809519390720)) (not (= 26959946667150639794667015087019630673637144422540572481103610249216 x1480)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x1480)) (not (= 98474297345890754025501882143967591664980152141971839855651084132735363579904 x1480)) (not (= 18446744073709551615 x1480)) (not (= x1480 57896044618658097711785492504343953926418782139537452191302581570759080747168)) (not (= x1480 1845821197)) (not (= 5192296858534827628530496329220096 x1480)) (not (= 1889567281 x1480)) (not (= 109576784812748834340197573905731726730118698833493337707389013487240318287872 x1480)) (not (= 1461501637330902918203684832716283019655932542976 x1480)) (not (= x1480 115792089210356248756420345215482394403581256910207104449633294546465451933695)) (not (= x1480 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= 1461501637330902918203684832716283019655932542975 x1480)) (not (= 1166402363 x1480)) (> x1480 10000) (not (= x1480 18446744073709551616)) (not (= 2650021976 x1480)) (not (= 117300739 x1480)) (not (= x1480 11430537079145650693387304458692941425836787954612963690241153482819318579200)) (not (= 274184521717934524641157099916833587240 x1480))) (not ((_ is x1228) (x804 x1480)))))
(assert (x695 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x1492 x1255))
(assert (= (ite (= x1213 x1312) x660 (x1711 x1213)) (x1209 x1213)))
(assert (x1492 x1093))
(assert (x1492 x1253))
(assert (x1492 x893))
(assert (= (ite (= x535 x1542) x659 (x857 x1542)) (x227 x1542)))
(assert (= x1261 x940))
(assert (= (ite (= x1702 x1030) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1702)) (x1249 x1702)))
(assert (= (x1228 1722255204) (x804 1722255204)))
(assert (x1492 x341))
(assert (x1492 x537))
(assert (= x298 (or x1304 (and (not x1566) x1596))))
(assert (x1708 x493 x59 x228 x311))
(assert (= (and x1323 (not x1466)) x182))
(assert (x1000 (- x228 x165)))
(assert (x1492 x109))
(assert (x1492 x1475))
(assert (= (ite (= x1126 x617) 0 (x1360 x1126)) (x1783 x1126)))
(assert (= (ite (= (x859 (+ x731 32)) x411) x402 (x186 (x859 (+ 32 x731)))) (x46 (x859 (+ 32 x731)))))
(assert (= (x1760 (x1228 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (=> (<= x460 10000) (= (x1228 x460) (x804 x460))))
(assert (x592 (* x637 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1249 x1126) (ite (= x1030 x1126) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1126))))
(assert (= (x1754 x1702) (ite (= x1702 x1779) x401 (x1793 x1702))))
(assert (x154 x811 x1505 x1801 x137))
(assert (x1492 x1076))
(assert (= (x1247 x15) (ite (and x298 x351 x452 x1670 (not x1105) x445) (x23 x15) (ite (and x445 x298 (not x452) x351 x1670) (x227 x15) (ite (and x445 x1670 x298 (not x351)) (x857 x15) (ite (and (not x1670) x445 x298) (x127 x15) (x552 x15)))))))
(assert (x355 x982))
(assert (= (x804 904250603428552709895185118199468575982109441609966099573332780532423983104) (x1228 904250603428552709895185118199468575982109441609966099573332780532423983104)))
(assert (= (x1760 (x1228 904250603428552709895185118199468575982109441609966099573332780532423983104)) 904250603428552709895185118199468575982109441609966099573332780532423983104))
(assert (x355 x637))
(assert (x355 x1391))
(assert (= (or (and x807 x661) (and x1465 x1401) (and x730 x667)) x1304))
(assert (x1492 x1722))
(assert (x1492 x967))
(assert (x1492 x1029))
(assert (x1492 x736))
(assert (= (=> (= x1465 (= x1622 274184521717934524641157099916833587202)) (and (=> (and (= (x441 (x804 x455) (x1228 2) 0) x1111) (<= 0 x247) (<= x247 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x247 x1308) x1162) (= x455 x795) (not (= x1714 117300739)) (= (x441 (x804 x455) (x1228 1) 0) x105) (= (x441 (x804 274184521717934524641157099916833587240) x1111 0) x788) (= x1292 x1062) (= (x1193 (x804 274184521717934524641157099916833587202)) x288) (= 599290589 x1714) (= x1292 x1308) (= x131 x1004) (= (x525 x105) x247) (not (= x1714 404098525)) (= (< x725 x1292) x1653) (= (or (> x551 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x551 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x551 96))) x898) (<= x455 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x725) (= (x441 (x804 x455) (x1228 2) 0) x168) (not x898) (= x767 274184521717934524641157099916833587240) (<= 0 x725) (= (x217 x1634) x758) (= x107 274184521717934524641157099916833587240) (not x1162) x1465 (= (x890 x788) x725) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x758 x1292)) (= x1472 x874) (= x1241 x1308) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x758) (= x1662 (< x725 x1292)) (= 274184521717934524641157099916833587240 x948) (< x1714 826074471) (< 0 x288) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1292 x758)) x951) (= (x1724 (- x247 x1308)) x1457) (= (x441 (x804 x455) (x1228 1) 0) x593) (= (x1724 (- x1004 4)) x551) (= x195 (> x1292 x247)) (not x1662) (not x1653) (= x624 (x1724 (- x725 x1308))) (= x455 x252) (= x1764 1) (not (= x1714 157198259)) (= x1525 (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0)) (= x1117 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not x195) (= x1634 (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0)) (not (< x1004 4)) (= 100 x1004) (<= 0 x758) (not x951) (= (x441 (x804 274184521717934524641157099916833587240) x168 0) x914) (= x1798 274184521717934524641157099916833587240) (= x758 x1092) (= x1420 (+ x1062 x1092))) x1216) (=> (not x1465) x57))) x1612))
(assert (x1492 x1638))
(assert (x154 x12 x432 x965 x1342))
(assert (x1492 x1226))
(assert (x1708 x59 x493 x165 x654))
(assert (= (x1760 (x1228 109576784812748834340197573905731726730118698833493337707389013487240318287872)) 109576784812748834340197573905731726730118698833493337707389013487240318287872))
(assert (x1492 x1755))
(assert (= (ite (= x411 x1109) x402 (x186 x1109)) (x46 x1109)))
(assert (x259 x315))
(assert (= (ite (= x235 x1655) x1382 (x630 x235)) (x646 x235)))
(assert (= (ite (= x15 x1030) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x15)) (x1249 x15)))
(assert (= (x1209 x1702) (ite (= x1312 x1702) x660 (x1711 x1702))))
(assert (= (ite (and x445 x298 (not x773)) (x1247 x409) (x189 x409)) (x639 x409)))
(assert (x1492 x815))
(assert (= (x268 x1116) (ite (= x1116 x985) x1747 (x244 x1116))))
(assert (= (x1538 x15) (ite (and x1205 (not x1236) x1647) (x768 x15) (x1249 x15))))
(assert (x1492 x1391))
(assert (= (x1689 x1213) (ite (= x1213 x621) 0 (x855 x1213))))
(assert (x1492 x1630))
(assert (x1492 x1712))
(assert (x1038 x1665 x1718))
(assert (x1492 x131))
(assert (x1492 x1263))
(assert (= 0 (x221 (x859 (+ x1657 32)))))
(assert (= (x158 x327) (ite (= x327 x1483) x251 (x1209 x327))))
(assert (x1492 x911))
(assert (x1492 x989))
(assert (= (ite (= x1192 x135) x208 (x127 x1192)) (x857 x1192)))
(assert (= (ite (= x510 x621) 0 (x855 x510)) (x1689 x510)))
(assert (x1492 x1240))
(assert (x1492 x691))
(assert (x1492 x1472))
(assert (= x298 x1032))
(assert (= (x1760 (x1228 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= (x885 x1702) (ite (and x174 x1765) (x513 x1702) (x1750 x1702))))
(assert (x1708 x228 x311 x59 x493))
(assert (= (x1689 x884) (ite (= x621 x884) 0 (x855 x884))))
(assert (x1492 x95))
(assert (x1492 x541))
(assert (= (ite (and x1261 x1664) (x558 x1213) (x1402 x1213)) (x1706 x1213)))
(assert (= (x46 x1475) (ite (= x411 x1475) x402 (x186 x1475))))
(assert (= x143 (or x682 x772)))
(assert (= (ite (= x1475 x1202) x1174 (x227 x1475)) (x23 x1475)))
(assert (= (x221 (x859 (+ 64 x731))) 0))
(assert (= (x158 x1666) (ite (= x1666 x1483) x251 (x1209 x1666))))
(assert (x1492 x1168))
(assert (x1492 x309))
(assert (= (x1760 (x804 x1090)) x1090))
(assert (= (x1228 1166402363) (x804 1166402363)))
(assert (x1492 x512))
(assert (= x1640 (and (not x900) x1781)))
(assert (= (ite (and x1205 (not x1236) x1647) (x768 x1557) (x1249 x1557)) (x1538 x1557)))
(assert (x1492 x426))
(assert (x1492 x1016))
(assert (= (x227 x1702) (ite (= x1702 x535) x659 (x857 x1702))))
(assert (= (x1228 98474297345890754025501882143967591664980152141971839855651084132735363579904) (x804 98474297345890754025501882143967591664980152141971839855651084132735363579904)))
(assert (x1492 x1446))
(assert (x1492 x583))
(assert (= (x1538 x1349) (ite (and x1647 (not x1236) x1205) (x768 x1349) (x1249 x1349))))
(assert (x1492 x495))
(assert (= (x1760 (x804 x1456)) x1456))
(assert (x1492 x1363))
(assert (= (x646 x1192) (ite (= x1655 x1192) x1382 (x630 x1192))))
(assert (x1492 x1278))
(assert (= (x1538 x327) (ite (and x1205 (not x1236) x1647) (x768 x327) (x1249 x327))))
(assert (x259 x920))
(assert (x1492 x680))
(assert (x1492 x1049))
(assert (x154 x1442 x1224 x1632 x89))
(assert (= (=> (and (= (< (+ x222 (x1422 (x804 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1572) (= x1777 (< 0 x45)) (or (and x866 (= 96 x651)) (and (= x359 x651) (not x866) (= x1476 (x859 (+ x1143 96))))) (= x222 0) (or (not x1777) (and (= (x846 x1702) x588) (= (x846 x651) x14) (= x790 (ite x791 1 0)) (= x1383 (= x588 0)) (not (or (and (< x14 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x14) true)) (> x14 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (not x1383) x791) x1777 (= x1702 (x859 (+ 32 x651))) (< 0 x588) (= x588 x790))) (not (= x1119 0)) (= x866 (= 0 x680)) x1572 (= (x846 x651) x45) (= (- (x1680 (x804 x210)) x222) x473)) x574) x325))
(assert (x1492 x1086))
(assert (= (x1228 455944412) (x804 455944412)))
(assert (= x80 (x1760 (x804 x80))))
(assert (x1492 x968))
(assert (x1492 x399))
(assert (= (x1228 511946350) (x804 511946350)))
(assert (x1492 x1747))
(assert (x1492 x311))
(assert (= (x1395 x884) (ite (= x794 x884) 274184521717934524641157099916833587240 (x821 x884))))
(assert (x1492 x983))
(assert (= (=> (not (= x1764 0)) x216) x1216))
(assert (x1492 x430))
(assert (x695 x1391))
(assert (= 0 (x221 x1109)))
(assert (= (x1754 x510) (ite (= x1779 x510) x401 (x1793 x510))))
(assert (x1492 x1392))
(assert (= (x1783 x1349) (ite (= x1349 x617) 0 (x1360 x1349))))
(assert (= (ite (= x1645 x985) x1747 (x244 x1645)) (x268 x1645)))
(assert (= (ite (= (x1228 0) x1497) x442 (x1715 x1497)) (x233 x1497)))
(assert (= (x1783 x710) (ite (= x710 x617) 0 (x1360 x710))))
(assert (x1492 x644))
(assert (= (ite (= x651 x1779) x401 (x1793 x651)) (x1754 x651)))
(assert (x1492 x63))
(assert (x1492 x1110))
(assert (= (x1256 x1213) (ite (and x298 x445) (x836 x1213) (x1783 x1213))))
(assert (x1492 x450))
(assert (= (ite (= x1655 x43) x1382 (x630 x43)) (x646 x43)))
(assert (x1000 x230))
(assert (= (ite (= x1702 x621) 0 (x855 x1702)) (x1689 x1702)))
(assert (= (ite (and x445 x298 (not x773)) (x1247 x651) (x189 x651)) (x639 x651)))
(assert (= (x1689 x1192) (ite (= x1192 x621) 0 (x855 x1192))))
(assert (=> (<= x315 10000) (= (x1228 x315) (x804 x315))))
(assert (= (ite (= x985 x1348) x1747 (x244 x1348)) (x268 x1348)))
(assert (= (x233 x142) (ite (= x142 (x1228 0)) x442 (x1715 x142))))
(assert (x355 x436))
(assert (x1000 (- x311 x165)))
(assert (= (ite (= x651 x1312) x660 (x1711 x651)) (x1209 x651)))
(assert (= (ite (= x1349 x621) 0 (x855 x1349)) (x1689 x1349)))
(assert (= (ite (and x1205 x1647 (not x1236)) (x768 x510) (x1249 x510)) (x1538 x510)))
(assert (x1492 x376))
(assert (x1410 x59 x493 x654 x165))
(assert (x1492 x1156))
(assert (= 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1760 (x1228 98474297345890754025501882143967591664980152141971839855651084132735363579904))))
(assert (= (ite (= x1567 x1503) x1528 (x1563 x1567)) (x127 x1567)))
(assert (= (x1228 274184521717934524641157099916833587206) (x804 274184521717934524641157099916833587206)))
(assert (x964 x436 x803 x3 x1057))
(assert (x1492 x929))
(assert (= (x1228 4294967295) (x804 4294967295)))
(assert (x1492 x562))
(assert (x111 x1069 x1485))
(assert (x1492 x1494))
(assert (x1492 x943))
(assert (= (ite (= x476 x411) x402 (x186 x476)) (x46 x476)))
(assert (x355 18446744073709551615))
(assert (x1492 x139))
(assert (x355 x1194))
(assert (x1492 x287))
(assert (= (x1760 (x804 x888)) x888))
(assert (= 0 (x221 x1049)))
(assert (x1492 x806))
(assert (x1492 x1324))
(assert (= (ite (= x985 x1768) x1747 (x244 x1768)) (x268 x1768)))
(assert true)
(assert (= x502 (and x1640 (not x1429))))
(assert (= (x1287 x164) (ite (and x298 x445) (ite (and x445 x298 x1558) (x261 x164) (x219 x164)) (x219 x164))))
(assert (x1771 x493 (- x59 x654)))
(assert (= (x1256 x1567) (ite (and x445 x298) (x836 x1567) (x1783 x1567))))
(assert (x1492 x1022))
(assert (x1492 x1284))
(assert (= 0 (x221 x1567)))
(assert (x1492 x1503))
(assert (x259 x210))
(assert (= (ite (= x1312 x1109) x660 (x1711 x1109)) (x1209 x1109)))
(assert (= (ite (= x617 x1666) 0 (x1360 x1666)) (x1783 x1666)))
(assert (x355 1461501637330902918203684832716283019655932542975))
(assert (x1492 x1433))
(assert (= x1020 (=> (= x1009 x1290) x1310)))
(assert (x1492 x1192))
(assert (x1492 x1399))
(assert (x1492 x1362))
(assert (= (x268 (x1228 0)) (ite (= (x1228 0) x985) x1747 (x244 (x1228 0)))))
(assert (x1492 x1213))
(assert (x355 x7))
(assert (= 0 (x221 x1126)))
(assert (x355 x1008))
(assert (x695 5192296858534827628530496329220096))
(assert (x1492 x659))
(assert (= x772 (or x1252 (and (not x1625) x940))))
(assert (x1492 x1011))
(assert (= (x1727 x1475) (ite (= x1475 x330) 274184521717934524641157099916833587240 (x809 x1475))))
(assert (x1492 x810))
(assert (x1492 x1668))
(assert (= (=> (and (not x279) (= x1473 x393) (not x117)) x838) x1584))
(assert (= (ite (and (not x1105) x445 x298 x452 x351 x1670) (x23 x510) (ite (and (not x452) x351 x1670 x298 x445) (x227 x510) (ite (and (not x351) x298 x1670 x445) (x857 x510) (ite (and x298 x445 (not x1670)) (x127 x510) (x552 x510))))) (x1247 x510)))
(assert (= (and x1596 x1566) x807))
(assert (x1492 x624))
(assert (x1492 x283))
(assert (= (x804 26959946667150639794667015087019630673637144422540572481103610249215) (x1228 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1492 x124))
(assert (=> (<= x1716 10000) (= (x804 x1716) (x1228 x1716))))
(assert (= (x804 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1492 x1070))
(assert (= (ite (= x972 x1009) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x159 x1009)) (x1735 x1009)))
(assert (x1492 x1148))
(assert (x1492 x610))
(assert (x1492 x765))
(assert (= (x1247 x327) (ite (and x445 (not x1105) x1670 x298 x351 x452) (x23 x327) (ite (and x351 (not x452) x1670 x445 x298) (x227 x327) (ite (and x1670 (not x351) x298 x445) (x857 x327) (ite (and (not x1670) x445 x298) (x127 x327) (x552 x327)))))))
(assert (x1492 x437))
(assert (= (x1256 x1126) (ite (and x445 x298) (x836 x1126) (x1783 x1126))))
(assert (= (x227 x1666) (ite (= x1666 x535) x659 (x857 x1666))))
(assert (x1492 x15))
(assert (x355 x904))
(assert (= (ite (and x172 x1313) (x350 x510) (ite (and x900 x1781) (x119 x510) (x125 x510))) (x1738 x510)))
(assert (= (x1247 x1542) (ite (and (not x1105) x452 x298 x445 x1670 x351) (x23 x1542) (ite (and x298 x1670 x445 (not x452) x351) (x227 x1542) (ite (and x445 (not x351) x298 x1670) (x857 x1542) (ite (and x445 x298 (not x1670)) (x127 x1542) (x552 x1542)))))))
(assert (= (ite (and x298 x445 (not x773)) (x1247 x1666) (x189 x1666)) (x639 x1666)))
(assert (x1492 x1229))
(assert (= (x1760 (x1228 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (x1402 x1475) (ite (= x1179 x1475) x668 (x113 x1475))))
(assert (= (=> (and (= x1065 x1335) (= x1132 x675) (= x245 (= x1065 x1132))) x245) x380))
(assert (= 1858285468 (x1760 (x1228 1858285468))))
(assert (= (ite (= x1126 x621) 0 (x855 x1126)) (x1689 x1126)))
(assert (= (x350 x1694) (ite (and (not x1526) x383 x1089) (x1191 x1694) (x1523 x1694))))
(assert (= (x23 x1192) (ite (= x1192 x1202) x1174 (x227 x1192))))
(assert (= (ite (and x351 (not x1105) x445 x452 x1670 x298) (x23 x1213) (ite (and x351 x445 x1670 (not x452) x298) (x227 x1213) (ite (and x445 x298 (not x351) x1670) (x857 x1213) (ite (and x298 x445 (not x1670)) (x127 x1213) (x552 x1213))))) (x1247 x1213)))
(assert (x1492 x1454))
(assert (x1492 x1237))
(assert (= (ite (= x535 x327) x659 (x857 x327)) (x227 x327)))
(assert (x1492 x1233))
(assert (= (x233 x317) (ite (= x317 (x1228 0)) x442 (x1715 x317))))
(assert (= (x1287 x596) (ite (and x445 x298) (ite (and x445 x298 x1558) (x261 x596) (x219 x596)) (x219 x596))))
(assert (x355 x1484))
(assert (x1492 x251))
(assert (x1492 x1495))
(assert (= (ite (= x621 x1567) 0 (x855 x1567)) (x1689 x1567)))
(assert (=> (>= 10000 x1135) (= (x804 x1135) (x1228 x1135))))
(assert (= (x1228 9518847204935358166548570266051330015907116135037852959641967396525866745856) (x804 9518847204935358166548570266051330015907116135037852959641967396525866745856)))
(assert (x1492 x1026))
(assert (x1492 x604))
(assert (= 0 (x221 x1666)))
(assert (x964 x1221 x1055 x669 x253))
(assert (x154 x1648 x421 x606 x97))
(assert (x1492 x789))
(assert (x1492 x1198))
(assert (= x650 (=> (= x730 (= x1622 274184521717934524641157099916833587206)) (and (=> (not x730) x1612) (=> (and (= (> x297 x187) x824) (= (< x717 x297) x318) (= x326 (or (and (> 96 x278) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x278))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x278))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x599) (= x750 (x441 (x804 274184521717934524641157099916833587240) x403 0)) (= x297 x241) (= x717 (x724 x382)) (not x100) (>= x187 0) (= (x781 x894) x1786) (= (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0) x271) (not x910) (not (= 157198259 x1019)) (= x519 x1343) (not x423) (= x1085 x131) (= x382 (x441 (x804 x459) (x1228 1) 0)) (not x824) (= 274184521717934524641157099916833587240 x1180) (= 274184521717934524641157099916833587240 x1319) (< (+ x1786 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x187 (x1106 x486)) (not (= x1019 117300739)) (>= x1786 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1786) (= 599290589 x1019) (< x1019 826074471) x730 (= x531 274184521717934524641157099916833587240) (= x1371 x297) (= (x1724 (- x717 x241)) x698) (= 100 x1085) (= (> x297 x187) x100) (= x423 (> x241 x717)) (<= x459 1461501637330902918203684832716283019655932542975) (= (x441 (x804 274184521717934524641157099916833587240) x1679 0) x486) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x187) (= x96 x459) (>= x717 0) (not x318) (= x1679 (x441 (x804 x459) (x1228 2) 0)) (= x542 (x1193 (x804 274184521717934524641157099916833587206))) (= (>= (+ x297 x1786) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x910) (= x1133 x1786) (= (x441 (x804 x459) (x1228 1) 0) x1064) (= (x1724 (- x187 x241)) x86) (= (x1724 (- x1085 4)) x278) (< 0 x542) (not (= x1019 404098525)) (= x795 x459) (not x326) (not (> 4 x1085)) (= 1 x1764) (= (x441 (x804 x459) (x1228 2) 0) x403) (= x435 274184521717934524641157099916833587240) (= x241 x1241) (= (+ x1133 x1371) x200) (= (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0) x894) (<= x717 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1216)))))
(assert (= (x646 x710) (ite (= x710 x1655) x1382 (x630 x710))))
(assert (= (x46 x1306) (ite (= x1306 x411) x402 (x186 x1306))))
(assert (x355 x1123))
(assert (= (x1760 (x804 x920)) x920))
(assert (x259 x1214))
(assert (= x1574 (or x1033 (and x1236 x1647))))
(assert (= (x23 x1349) (ite (= x1349 x1202) x1174 (x227 x1349))))
(assert (= (x70 x1702) (ite (and (not x1353) x143 x469) (x1285 x1702) (x1431 x1702))))
(assert (x1492 x257))
(assert (= (ite (= x1655 x1475) x1382 (x630 x1475)) (x646 x1475)))
(assert (= x210 (x1760 (x804 x210))))
(assert (x355 x559))
(assert (x355 x492))
(assert (x1771 x228 (- x311 x165)))
(assert (= (ite (and x298 x445 (not x773)) (x1247 x1694) (x189 x1694)) (x639 x1694)))
(assert (x1492 x1682))
(assert (= (x268 x647) (ite (= x985 x647) x1747 (x244 x647))))
(assert (x1492 x242))
(assert (= (x1228 26959946667150639794667015087019630673637144422540572481103610249216) (x804 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (x46 x1576) (ite (= x411 x1576) x402 (x186 x1576))))
(assert (x1492 x405))
(assert (x1492 x340))
(assert (x1492 x161))
(assert (x259 x637))
(assert (x1498 (* x6 79228162514264337593543950336)))
(assert (= (x158 x1702) (ite (= x1483 x1702) x251 (x1209 x1702))))
(assert (x1492 x1024))
(assert (x1492 x1195))
(assert (x1492 x330))
(assert (x1492 x1757))
(assert (x1410 x228 x311 x493 x59))
(assert (x1492 x1367))
(assert (= (ite (= x535 x1213) x659 (x857 x1213)) (x227 x1213)))
(assert (x1000 (- x654 x228)))
(assert (x1492 x941))
(assert (= (ite (= x1030 x1567) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1567)) (x1249 x1567)))
(assert (= 0 (x221 x884)))
(assert (x1492 x1128))
(assert (x111 x6 x629))
(assert (= (x1711 x1567) (ite (= x1589 x1567) x666 (x954 x1567))))
(assert (x1000 x6))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249216 (x1760 (x1228 26959946667150639794667015087019630673637144422540572481103610249216))))
(assert (x1492 x436))
(assert (x1000 (- x493 x654)))
(assert (x1492 x1698))
(assert (= (ite (= x651 x1655) x1382 (x630 x651)) (x646 x651)))
(assert (x1000 (- x165 x59)))
(assert (= 115792089210356248756420345215482394403581256910207104449633294546465451933695 (x1760 (x1228 115792089210356248756420345215482394403581256910207104449633294546465451933695))))
(assert (= (ite (and x298 x445) (x836 x1542) (x1783 x1542)) (x1256 x1542)))
(assert (x1492 x1113))
(assert (x1708 x228 x311 x165 x654))
(assert (= (ite (= x1483 x1109) x251 (x1209 x1109)) (x158 x1109)))
(assert (= x472 (x1760 (x804 x472))))
(assert (x1492 x576))
(assert (x1492 x1438))
(assert (= (ite (= x1346 x411) x402 (x186 x1346)) (x46 x1346)))
(assert (= (x1191 x1192) (ite (and x383 x1218 x24 x1337 x1089 (not x928)) (x158 x1192) (ite (and (not x1337) x1218 x24 x383 x1089) (x1209 x1192) (ite (and x383 x1218 x1089 (not x24)) (x1711 x1192) (ite (and x383 x1089 (not x1218)) (x954 x1192) (x923 x1192)))))))
(assert (x1492 x1338))
(assert (x1492 x521))
(assert (= (x639 x15) (ite (and x298 x445 (not x773)) (x1247 x15) (x189 x15))))
(assert (x1492 x883))
(assert (x1492 x1502))
(assert (= (=> (and (not (< x929 1722255204)) (>= 1461501637330902918203684832716283019655932542975 x959) (>= x236 0) (= (x1193 (x804 274184521717934524641157099916833587240)) x1195) (> x1195 0) (= x302 0) (= (x441 (x804 x393) (x1228 209) 0) x1006) (= x959 x1722) (>= 1461501637330902918203684832716283019655932542975 x236) (not (= x929 1722255204)) (= x236 x1595) (not (> 1166402363 x929)) (= x949 (x53 x1006)) (<= 0 x959) (> 2311529814 x929) (<= 0 x685) (= x675 x949) (= x929 1889567281) (>= 1461501637330902918203684832716283019655932542975 x685) (not (= 0 x393)) (>= 1461501637330902918203684832716283019655932542975 x393) (not (= x929 1858285468)) (= x1722 x544) (not (= 1845821197 x929)) (= x302 x1667)) x380) x838))
(assert (x259 x733))
(assert (x1492 x675))
(assert (x111 x830 x71))
(assert (= (ite (= x1179 x1694) x668 (x113 x1694)) (x1402 x1694)))
(assert (x871 x1123 x1403))
(assert (= (ite (and x172 x1313) (x350 x327) (ite (and x900 x1781) (x119 x327) (x125 x327))) (x1738 x327)))
(assert (x1492 x209))
(assert (x1492 x790))
(assert (= (ite (and x1218 (not x928) x1089 x1337 x383 x24) (x158 x327) (ite (and x383 x24 (not x1337) x1089 x1218) (x1209 x327) (ite (and x383 x1089 x1218 (not x24)) (x1711 x327) (ite (and (not x1218) x383 x1089) (x954 x327) (x923 x327))))) (x1191 x327)))
(assert (= (x1783 x1475) (ite (= x1475 x617) 0 (x1360 x1475))))
(assert (= x450 (x1760 (x804 x450))))
(assert (x1492 x932))
(assert (x1492 x1636))
(assert (= (and (not x1152) x1164) x1311))
(assert (= (x227 x1306) (ite (= x535 x1306) x659 (x857 x1306))))
(assert (= (x268 x1732) (ite (= x1732 x985) x1747 (x244 x1732))))
(assert (x1771 x493 (- x59 x311)))
(assert (x1492 x766))
(assert (x1492 x1559))
(assert (x1492 x1333))
(assert (x1492 x210))
(assert (x1492 x173))
(assert (= true x57))
(assert (x1492 x764))
(assert (x1492 x1425))
(assert (x1436 x422 x581))
(assert (= (ite (and (not x773) x445 x298) (x1247 x1126) (x189 x1126)) (x639 x1126)))
(assert (x355 x1269))
(assert (x1492 x1441))
(assert (x592 (* x1416 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x221 x1694)))
(assert (= (ite (= x1694 x1202) x1174 (x227 x1694)) (x23 x1694)))
(assert (= (x1228 115792089237316195423570985007226406215939081747436879206741300988257197096960) (x804 115792089237316195423570985007226406215939081747436879206741300988257197096960)))
(assert (= x1318 (or (and x1164 x1152) (and x1323 x1466) (and x182 x1001))))
(assert (= 0 (x221 x1306)))
(assert (x355 x1635))
(assert (= (ite (and (not x1105) x298 x351 x445 x1670 x452) (x23 x1349) (ite (and (not x452) x351 x445 x298 x1670) (x227 x1349) (ite (and x1670 (not x351) x445 x298) (x857 x1349) (ite (and x445 (not x1670) x298) (x127 x1349) (x552 x1349))))) (x1247 x1349)))
(assert (x1492 x241))
(assert (= (ite (and x1670 x298 x452 x351 (not x1105) x445) (x23 x1109) (ite (and (not x452) x351 x298 x1670 x445) (x227 x1109) (ite (and x1670 x445 x298 (not x351)) (x857 x1109) (ite (and x298 x445 (not x1670)) (x127 x1109) (x552 x1109))))) (x1247 x1109)))
(assert (= (x1727 x1702) (ite (= x1702 x330) 274184521717934524641157099916833587240 (x809 x1702))))
(assert (= (x804 1889567281) (x1228 1889567281)))
(assert (= (x646 x1567) (ite (= x1655 x1567) x1382 (x630 x1567))))
(assert (x1492 x851))
(assert (= (ite (and x1647 x1205 (not x1236)) (x768 x1477) (x1249 x1477)) (x1538 x1477)))
(assert (= (ite (= x1049 x1030) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1049)) (x1249 x1049)))
(assert (x1492 x720))
(assert (x1492 x710))
(assert (= 0 (x221 x43)))
(assert (= (x127 x1349) (ite (= x1349 x1503) x1528 (x1563 x1349))))
(assert (x259 x472))
(assert (= (ite (= x409 x1030) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x409)) (x1249 x409)))
(assert (x1492 x919))
(assert (x1000 79228162514264337593543950336))
(assert (= (x1783 x235) (ite (= x617 x235) 0 (x1360 x235))))
(assert (x1492 x484))
(assert (x1492 x415))
(assert (x1492 x1187))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1760 (x1228 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (= (x23 x1213) (ite (= x1213 x1202) x1174 (x227 x1213))))
(assert (x1492 x1532))
(assert (x1492 x236))
(assert (x1492 x1312))
(assert (x1492 x1567))
(assert (x1000 (- x493 x228)))
(assert (x1492 x864))
(assert (x1492 x1686))
(assert (x1492 x926))
(assert (x154 x1597 x1137 x1182 x1598))
(assert (x1708 x654 x165 x493 x59))
(assert (x1708 x493 x59 x311 x228))
(assert (= x1394 (=> (and (= x381 x566) (= x353 (x1010 x1475)) (= x566 (x859 (+ x1605 x756))) (= x1475 x1605) (not (= x1142 0)) (= x883 x353) (= x85 (x859 (+ x849 31))) (not (or (and (> 32 x849) (= (<= x849 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x849))) (= (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904 x85) x756)) x1767)))
(assert (= (ite (= 160 x411) x402 (x186 160)) (x46 160)))
(assert (= (x23 x651) (ite (= x1202 x651) x1174 (x227 x651))))
(assert (= x1027 (x1760 (x804 x1027))))
(assert (x1492 x645))
(assert (x1410 x228 x311 x654 x165))
(assert (x1492 x767))
(assert (= (x1760 (x1228 157198259)) 157198259))
(assert (= (x857 x1557) (ite (= x1557 x135) x208 (x127 x1557))))
(assert (x1492 x192))
(assert (x1492 x260))
(assert (x1492 x1575))
(assert (= (ite (= x409 x617) 0 (x1360 x409)) (x1783 x409)))
(assert (= (ite (= x972 x1694) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x159 x1694)) (x1735 x1694)))
(assert (= x1252 (or (and x1345 x704) (and x1185 x1737) (and x658 x444))))
(assert (x1492 x1068))
(assert (x1492 x65))
(assert (x1355 x644 x188))
(assert (= (ite (= (x1228 0) x1487) x442 (x1715 x1487)) (x233 x1487)))
(assert (x1492 x520))
(assert (x355 26959946667150639793205513449688727755433459589824289461447677706240))
(assert (x259 x460))
(assert (x1492 x1165))
(assert (x1492 x1602))
(assert (= (x158 x651) (ite (= x1483 x651) x251 (x1209 x651))))
(assert (x1492 x402))
(assert (= (ite (and x298 x445) (ite (and x445 x298 x1558) (x261 x321) (x219 x321)) (x219 x321)) (x1287 x321)))
(assert (x1708 x165 x654 x311 x228))
(assert (x1462 1461501637330902918203684832716283019655932542976 x209))
(assert (=> (<= x450 10000) (= (x804 x450) (x1228 x450))))
(assert (x1492 x981))
(assert (x274 x1759 x532 x1096 x780))
(assert (= (ite (= x15 x617) 0 (x1360 x15)) (x1783 x15)))
(assert (x1492 x653))
(assert (= (and x667 (not x730)) x1401))
(assert (x1708 x311 x228 x59 x493))
(assert (x1492 x888))
(assert (= (ite (= x617 x1542) 0 (x1360 x1542)) (x1783 x1542)))
(assert (x355 x306))
(assert (x1492 x1589))
(assert (x1492 x1271))
(assert (x1436 x437 x801))
(assert (= (x1711 x651) (ite (= x1589 x651) x666 (x954 x651))))
(assert (x1492 x651))
(assert (x695 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (= (x646 x1694) (ite (= x1694 x1655) x1382 (x630 x1694))))
(assert (x1492 x1720))
(assert (x259 x1621))
(assert (x1492 x660))
(assert (= x637 (x1760 (x804 x637))))
(assert (= 115792089210356248756420345214020892766250353992003419616917011526809519390720 (x1760 (x1228 115792089210356248756420345214020892766250353992003419616917011526809519390720))))
(assert (x1492 x381))
(assert (= (x1711 x327) (ite (= x1589 x327) x666 (x954 x327))))
(assert (x1492 x620))
(assert (x1492 x1090))
(assert (x355 x1173))
(assert (and (<= (x406 x1382 x311 x228 x1255 x733 x95 x332 x1088 x994) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= (x406 x1382 x311 x228 x1255 x733 x95 x332 x1088 x994) 10000)))
(assert (x1492 x7))
(assert (= (ite (= x411 x731) x402 (x186 x731)) (x46 x731)))
(assert (x1771 x311 (- x228 x59)))
(assert (= (x158 x710) (ite (= x1483 x710) x251 (x1209 x710))))
(assert (= (ite (= x510 x794) 274184521717934524641157099916833587240 (x821 x510)) (x1395 x510)))
(assert (= (x804 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x1760 (x1228 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x259 x1058))
(assert (x355 x1208))
(assert (x1492 x1603))
(assert (x438 x1391 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (x1492 x293))
(assert (x1492 x648))
(assert (= (x1689 x43) (ite (= x43 x621) 0 (x855 x43))))
(assert (= (ite (= x1179 x1213) x668 (x113 x1213)) (x1402 x1213)))
(assert (x1000 (- x228 x654)))
(assert (x1492 x295))
(assert (x1492 x509))
(assert (x1492 x1259))
(assert (x259 x568))
(assert (= (x1395 x1475) (ite (= x1475 x794) 274184521717934524641157099916833587240 (x821 x1475))))
(assert (x111 x306 x702))
(assert (x1492 x878))
(assert (= (ite (= x1029 x1702) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x1702)) (x954 x1702)))
(assert (= (x804 2514000705) (x1228 2514000705)))
(assert (x1492 x1789))
(assert (x1492 x862))
(assert (x1492 x508))
(assert (x1492 x288))
(assert (x1492 x316))
(assert (= (x1247 x884) (ite (and x1670 (not x1105) x452 x445 x351 x298) (x23 x884) (ite (and x1670 x298 x445 x351 (not x452)) (x227 x884) (ite (and x445 x1670 x298 (not x351)) (x857 x884) (ite (and x298 (not x1670) x445) (x127 x884) (x552 x884)))))))
(assert (= (ite (= x411 x1657) x402 (x186 x1657)) (x46 x1657)))
(assert (= (ite (and x1313 x172) (x350 x884) (ite (and x900 x1781) (x119 x884) (x125 x884))) (x1738 x884)))
(assert (x1492 x96))
(assert (= (ite (= x1192 x1029) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x1192)) (x954 x1192)))
(assert (= (x23 x1567) (ite (= x1202 x1567) x1174 (x227 x1567))))
(assert (x355 x1784))
(assert (x1492 x59))
(assert (= (ite (and (not x1236) x1205 x1647) (x768 x1049) (x1249 x1049)) (x1538 x1049)))
(assert (x1492 x1054))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1760 (x1228 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (= (x46 x1213) (ite (= x1213 x411) x402 (x186 x1213))))
(assert (x1492 x459))
(assert (= (ite (= x621 x409) 0 (x855 x409)) (x1689 x409)))
(assert (= (ite (= x411 x1567) x402 (x186 x1567)) (x46 x1567)))
(assert (=> (<= x1280 10000) (= (x804 x1280) (x1228 x1280))))
(assert (x1492 x1120))
(assert (x1462 26959946667150639794667015087019630673637144422540572481103610249216 x230))
(assert (x1492 x568))
(assert (x1708 x59 x493 x311 x228))
(assert (= (ite (= x1542 x135) x208 (x127 x1542)) (x857 x1542)))
(assert (= (x804 34167655436598589418538772692774877509225721125679165766806516059628562808832) (x1228 34167655436598589418538772692774877509225721125679165766806516059628562808832)))
(assert (= (ite (= x1109 x135) x208 (x127 x1109)) (x857 x1109)))
(assert (= (x1760 (x804 x1135)) x1135))
(assert (x1492 x198))
(assert (x1492 x1097))
(assert (x1492 x544))
(assert (= (x1760 (x1228 1845821197)) 1845821197))
(assert (= x459 (x1760 (x804 x459))))
(assert (x1000 (- x228 x493)))
(assert (x1492 x725))
(assert (x1492 x1635))
(assert (= (ite (and x445 x298) (ite (and x445 x1558 x298) (x496 (x804 x1058)) (x1467 (x804 x1058))) (x1467 (x804 x1058))) (x991 (x804 x1058))))
(assert (x274 x1082 x1245 x739 x930))
(assert (x1492 x995))
(assert (x355 x1361))
(assert (x1492 x1659))
(assert (= (x1689 x1477) (ite (= x1477 x621) 0 (x855 x1477))))
(assert (x1000 (- x654 x311)))
(assert (= (x46 224) (ite (= x411 224) x402 (x186 224))))
(assert (= (x46 x43) (ite (= x43 x411) x402 (x186 x43))))
(assert (= (x350 x1702) (ite (and x383 (not x1526) x1089) (x1191 x1702) (x1523 x1702))))
(assert (= (ite (and x1218 x383 (not x928) x24 x1337 x1089) (x158 x651) (ite (and x383 (not x1337) x1089 x24 x1218) (x1209 x651) (ite (and (not x24) x1089 x1218 x383) (x1711 x651) (ite (and x383 (not x1218) x1089) (x954 x651) (x923 x651))))) (x1191 x651)))
(assert (x1492 x290))
(assert (= (x1191 x1666) (ite (and x1337 (not x928) x1089 x383 x24 x1218) (x158 x1666) (ite (and (not x1337) x1218 x24 x383 x1089) (x1209 x1666) (ite (and x1089 x1218 x383 (not x24)) (x1711 x1666) (ite (and x1089 x383 (not x1218)) (x954 x1666) (x923 x1666)))))))
(assert (= x22 (and (not x658) x444)))
(assert (x1492 x812))
(assert (x1492 x1622))
(assert (x1771 x165 (- x654 x228)))
(assert (x1492 x94))
(assert (= (x639 x1349) (ite (and (not x773) x298 x445) (x1247 x1349) (x189 x1349))))
(assert (x1492 x16))
(assert (= (x1247 x1126) (ite (and x445 x1670 x351 x452 (not x1105) x298) (x23 x1126) (ite (and x351 x445 x1670 x298 (not x452)) (x227 x1126) (ite (and x445 x298 (not x351) x1670) (x857 x1126) (ite (and (not x1670) x298 x445) (x127 x1126) (x552 x1126)))))))
(assert (= (ite (= x1213 x1655) x1382 (x630 x1213)) (x646 x1213)))
(assert (x1492 x657))
(assert (= (x1402 x510) (ite (= x510 x1179) x668 (x113 x510))))
(assert (x1492 x1461))
(assert (x1708 x311 x228 x165 x654))
(assert (= (x46 (x859 (+ x1657 32))) (ite (= x411 (x859 (+ 32 x1657))) x402 (x186 (x859 (+ 32 x1657))))))
(assert (x1492 x1614))
(assert (= (ite (= x411 x710) x402 (x186 x710)) (x46 x710)))
(assert (= (x1228 2650021976) (x804 2650021976)))
(assert (= (x804 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x1228 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= (x221 x510) 0))
(assert (x1492 x733))
(assert (= (x127 x1109) (ite (= x1109 x1503) x1528 (x1563 x1109))))
(assert (= (ite (= x535 x651) x659 (x857 x651)) (x227 x651)))
(assert (x1492 x1306))
(assert (= (ite (and x383 x1337 (not x928) x24 x1218 x1089) (x158 x510) (ite (and (not x1337) x383 x24 x1089 x1218) (x1209 x510) (ite (and (not x24) x1089 x383 x1218) (x1711 x510) (ite (and x383 x1089 (not x1218)) (x954 x510) (x923 x510))))) (x1191 x510)))
(assert (x1492 x1119))
(assert (x1492 x867))
(assert (x1492 x952))
(assert (x1492 x342))
(assert (x1492 x501))
(assert (x1492 x1180))
(assert (x1492 x471))
(assert (= (ite (= x510 x1030) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x510)) (x1249 x510)))
(assert (x1492 x231))
(assert (x355 115792089210356248756420345215482394403581256910207104449633294546465451933695))
(assert (= x1587 (=> (and (> 2311529814 x527) (= (x1193 (x804 274184521717934524641157099916833587240)) x198) (= x1595 x1668) (<= 0 x1668) (< 0 x198) (= (x441 (x804 x1621) (x1228 209) 0) x652) (>= 1461501637330902918203684832716283019655932542975 x1668) (not (= 1845821197 x527)) (not (= x527 1722255204)) (= 1889567281 x527) (not (> 1166402363 x527)) (>= 1461501637330902918203684832716283019655932542975 x1330) (not (= x527 1858285468)) (= x234 x294) (= x1330 x1712) (= x1569 0) (>= x943 0) (= x1569 x1667) (>= 1461501637330902918203684832716283019655932542975 x1621) (= x234 (x1511 x652)) (= x544 x1712) (>= x1330 0) (not (= 0 x1621)) (<= x943 1461501637330902918203684832716283019655932542975) (not (< x527 1722255204))) x72)))
(assert (= (ite (= x510 x1136) x1392 (x1754 x510)) (x1623 x510)))
(assert (= (ite (= x409 x1655) x1382 (x630 x409)) (x646 x409)))
(assert (= (ite (= x327 x617) 0 (x1360 x327)) (x1783 x327)))
(assert (= (x46 x503) (ite (= x411 x503) x402 (x186 x503))))
(assert (x1492 x1241))
(assert (x1492 x672))
(assert (x1436 x982 x1413))
(assert (x1492 x1742))
(assert (x1492 x1200))
(assert (= x927 true))
(assert (x355 x1131))
(assert (= (ite (= x1666 x330) 274184521717934524641157099916833587240 (x809 x1666)) (x1727 x1666)))
(assert (= (ite (= x617 x1557) 0 (x1360 x1557)) (x1783 x1557)))
(assert (= (x1760 (x804 x196)) x196))
(assert (x355 x830))
(assert (x1492 x353))
(assert (= (x1249 x1349) (ite (= x1030 x1349) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1349))))
(assert (x1492 x84))
(assert (x1355 x1535 x178))
(assert (= (x646 x1109) (ite (= x1655 x1109) x1382 (x630 x1109))))
(assert (= (ite (= x135 x1702) x208 (x127 x1702)) (x857 x1702)))
(assert (= (ite (= x884 x535) x659 (x857 x884)) (x227 x884)))
(assert (= (x1623 x1702) (ite (= x1136 x1702) x1392 (x1754 x1702))))
(assert (=> (<= x210 10000) (= (x804 x210) (x1228 x210))))
(assert (x1492 x1007))
(assert (x1492 x1290))
(assert (= (x1228 2335792882) (x804 2335792882)))
(assert (= (x1538 x710) (ite (and x1205 x1647 (not x1236)) (x768 x710) (x1249 x710))))
(assert (= (=> (and (not (= x1140 0)) (= x1456 (x336 1461501637330902918203684832716283019655932542975 x637)) (= (x1193 (x804 x1456)) x1130) (= (> x1130 0) x1625)) (and (=> (and (not x1625) (= x589 (x1276 (x804 274184521717934524641157099916833587240))) (= x1605 x381) (= x883 x589)) x1767) (=> x1625 x715))) x483))
(assert (x1492 x169))
(assert (= (ite (= x1503 x1192) x1528 (x1563 x1192)) (x127 x1192)))
(assert (= (x1783 x43) (ite (= x617 x43) 0 (x1360 x43))))
(assert (x1492 x475))
(assert (x1492 x832))
(assert (x355 115792089237316195423570984636004990333889740523700931696805413995650331181055))
(assert (x1492 x307))
(assert (x1492 x1597))
(assert (x1492 x818))
(assert (= (and x1765 (not x174)) x319))
(assert (x1492 x1627))
(assert (x1492 x666))
(assert (= (ite (and x298 x445) (ite (and x445 x1558 x298) (x30 x152) (x1034 x152)) (x1034 x152)) (x1372 x152)))
(assert (x1492 x1308))
(assert (= (x1402 x651) (ite (= x651 x1179) x668 (x113 x651))))
(assert (x259 x1380))
(assert (x1492 x85))
(assert (x355 115792089210356248756420345214020892766250353992003419616917011526809519390720))
(assert (= (x1538 x1109) (ite (and x1205 (not x1236) x1647) (x768 x1109) (x1249 x1109))))
(assert (x1492 x1238))
(assert (= (=> (and (= (x336 1461501637330902918203684832716283019655932542975 x637) x920) (= (x1193 (x804 x920)) x1051) (= (x1098 x1192) x1430) (= x469 (> x1051 0))) (and (=> (and (or (and (= x1613 x1441) (= x881 x301) x1153 (= x212 (- (x26 (x804 274184521717934524641157099916833587240)) x1430)) (or (not x1296) (and x276 (= x276 (>= (x608 (x804 274184521717934524641157099916833587240)) x29)) (= x29 (x1003 (x804 274184521717934524641157099916833587240))) (> 4294967296 x1441) (= (x1003 (x804 x1058)) x963) x494 x1296 (= x494 (= (x608 (x804 x1058)) x963)))) (= x571 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x11 (x804 274184521717934524641157099916833587240)) x399))) (= x1296 (> x301 0)) (= x1658 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x631 (x804 x1058)) x1430))) (= x1710 (x859 (+ x1430 (x1644 (x631 (x804 x1058)))))) x571 x1658 (= x399 (ite (= x301 0) x1430 0)) (= x31 (- (x993 (x804 x1058)) x399))) (and (= 0 x1613) (= x881 0) (not x1153))) (not (> x1430 x595)) (= (x336 1461501637330902918203684832716283019655932542975 x6) x1058) (= (x26 (x804 274184521717934524641157099916833587240)) x79) (not x469) (> x881 0) (= (= x1613 0) x1518) (= (x26 (x804 274184521717934524641157099916833587240)) x595) (= x1153 (and (>= x79 x1430) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1430 x1685)))) (= x1685 (x26 (x804 x1058)))) x574) (=> (and (= (x859 (+ 96 x691)) x972) (= (x1193 (x804 x210)) x1741) (= (x336 1461501637330902918203684832716283019655932542975 x6) x345) (= (x859 (+ x1009 32)) x884) (= (> x433 x1201) x1353) (= (x1129 x884) x1484) (= x1514 (x1724 (- x1676 32))) (= x1565 (x859 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x834))) (= x691 (x859 (+ 36 x1009))) (= 0 x897) (= (x336 26959946667150639794667015087019630673637144422540572481103610249215 x1484) x834) (= x1488 (< 0 x1201)) (= x67 x691) (or (not x1353) (and (= (x859 (+ x1201 x359)) x94) x1353)) (= (x859 (+ 32 x67)) x1675) (= (x1735 x1009) x1201) x1378 (= x210 (x336 1461501637330902918203684832716283019655932542975 x637)) (or (and (= 0 x433) (not x1488)) (and (= x514 (x1735 x1213)) (= x884 x1213) (= x1229 x359) (= (< 32 x1201) x572) (or (and (= x433 32) (not x572)) (and (= x1779 (x859 (+ x1143 96))) x572 (= x1570 (> x1201 64)) (= (x859 (+ x1009 64)) x1666) (= x401 (x1793 x1666)) (or (and (= x433 64) (not x1570)) (and (or (and (not x166) (= 96 x433)) (and (= (> x1201 128) x1470) (= 128 x433) (= x510 (x859 (+ 128 x1009))) (not x1470) x166 (= x1599 (x859 (+ 160 x1143))) (= x860 (x1623 x510)))) (= (x859 (+ x1143 128)) x1136) (= (> x1201 96) x166) x1570 (= x1694 (x859 (+ x1009 96))) (= (x1754 x1694) x1392))))) x1488)) x469 (= (x859 (+ 100 x1009)) x1143) (= x1676 (x1724 (- x1143 x1009))) (= x359 (x859 (+ 128 x691))) (= x1378 (> x1741 0))) x50))) x1310))
(assert (x1492 x455))
(assert (= (x1760 (x804 x1716)) x1716))
(assert (x1492 x786))
(assert (x1492 x892))
(assert (= (x1760 (x1451 x116 1)) (+ 1 (x1760 x116))))
(assert (x1492 x529))
(assert (x676 x1759 x240 x561 x1536))
(assert (x1492 x1569))
(assert (x1492 x338))
(assert (x111 x443 x1756))
(assert (x355 x1575))
(assert (x355 x653))
(assert (= (x1249 x327) (ite (= x327 x1030) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x327))))
(assert (= (ite (= x93 (x1228 0)) x442 (x1715 x93)) (x233 x93)))
(assert (= (x1644 (* 79228162514264337593543950336 x637)) (x557 x637 96)))
(assert (= (x127 x1475) (ite (= x1475 x1503) x1528 (x1563 x1475))))
(assert (= (x221 x1657) 0))
(assert (x1492 x823))
(assert (= (ite (= x330 x510) 274184521717934524641157099916833587240 (x809 x510)) (x1727 x510)))
(assert (x1492 x1599))
(assert (x1492 x1008))
(assert (x1492 x1514))
(assert (x111 x1240 x372))
(assert (= (ite (= x235 x411) x402 (x186 x235)) (x46 x235)))
(assert (= (x1256 x651) (ite (and x298 x445) (x836 x651) (x1783 x651))))
(assert (x1492 x1177))
(assert (x1492 x1762))
(assert (= (x1760 (x804 x1740)) x1740))
(assert (x1708 x165 x654 x59 x493))
(assert (x1492 x69))
(assert (= (x221 x710) 0))
(assert (x960 x207 x1094 x769 x735))
(assert (x1492 x1484))
(assert (= 599290589 (x1760 (x1228 599290589))))
(assert (x1492 x1147))
(assert (= (ite (= x1312 x1694) x660 (x1711 x1694)) (x1209 x1694)))
(assert (= (x1711 x510) (ite (= x1589 x510) x666 (x954 x510))))
(assert (= (ite (and x1205 x1647 (not x1236)) (x768 x1192) (x1249 x1192)) (x1538 x1192)))
(assert (= (x1760 (x1228 3155786881)) 3155786881))
(assert (= 18446744073709551615 (x1760 (x1228 18446744073709551615))))
(assert (x1492 x1648))
(assert (= 1166402363 (x1760 (x1228 1166402363))))
(assert (x1492 x448))
(assert (x1492 x165))
(assert (x1492 x1541))
(assert (x933 x1023 x1638))
(assert (x1492 x1251))
(assert (= (x26 (x804 x1058)) (ite x682 (ite x547 (x87 (x804 x1058)) (x991 (x804 x1058))) (x1276 (x804 x1058)))))
(assert (x1492 x1590))
(assert (x1492 x269))
(assert (= 9518847204935358166548570266051330015907116135037852959641967396525866745856 (x1760 (x1228 9518847204935358166548570266051330015907116135037852959641967396525866745856))))
(assert (x259 x196))
(assert (= (ite (= x1666 x972) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x159 x1666)) (x1735 x1666)))
(assert (= (ite (= x621 x651) 0 (x855 x651)) (x1689 x651)))
(assert (x1492 x107))
(assert (= (x233 x1116) (ite (= x1116 (x1228 0)) x442 (x1715 x1116))))
(assert (x1492 x553))
(assert (x1492 x447))
(assert (= 2335792882 (x1760 (x1228 2335792882))))
(assert (= (=> (and (= x1230 (x859 (+ 32 x1524))) (= (x859 (+ x617 4)) x1259) (not (= 0 x151)) (= (x336 1461501637330902918203684832716283019655932542975 x1416) x1622) (= (x859 (+ x617 100)) x19) (= x1655 (x859 (+ x1524 64))) (= (x1193 (x804 x1622)) x151) (= (= 274184521717934524641157099916833587240 x1622) x661) (= (x336 1461501637330902918203684832716283019655932542975 x6) x795) (= x975 274184521717934524641157099916833587240) (= (x1724 (- x19 x617)) x131) (= x1524 x1259)) (and (=> (not x661) x650) (=> (and (= (x233 x1227) x1069) (= x300 (= x1609 0)) (>= 1461501637330902918203684832716283019655932542975 x568) (= x1459 (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1388)) (= x80 (x336 1461501637330902918203684832716283019655932542975 x443)) (not x1459) (= (> 1 x84) x998) (= x291 (x441 (x804 x472) (x1228 208) 0)) (= x1208 (x233 x291)) (not (= 511946350 x122)) (= x795 x568) (= (x441 (x804 x472) (x1228 208) 0) x93) (not x1087) (= x84 (x524 x1487)) (= (x441 (x804 x472) (x1228 210) 0) x155) (= x1200 (x859 (+ 1 x1388))) (= x1707 (x441 (x804 274184521717934524641157099916833587240) (x1228 209) 0)) (< 0 x475) (> x360 0) (= x1487 (x441 (x804 x568) (x1228 209) 0)) x118 (= x1388 (x1017 x1707)) (= x360 (x1193 (x804 274184521717934524641157099916833587240))) (= x983 (x336 1461501637330902918203684832716283019655932542975 x1069)) (or (and (= x837 (x233 x317)) (= (x441 (x804 x472) (x1228 208) 0) x317) (or (and x220 (= x475 (ite x220 1 0))) (and (= x475 x1207) (= x1357 (x441 (x804 274184521717934524641157099916833587240) x379 0)) (= (x441 (x804 x80) (x1228 211) 0) x379) (= x1269 (x233 x1357)) (= x1207 (x336 255 x1269)) (not x220))) (= (x233 x980) x830) (= x191 (x336 1461501637330902918203684832716283019655932542975 x837)) (= x220 (= 274184521717934524641157099916833587240 x266)) (= (x336 1461501637330902918203684832716283019655932542975 x830) x266) (= (x441 (x804 x472) (x1228 210) 0) x980) (= x839 (not (= x191 0))) x839 (not x1421)) (and (= (ite x1421 1 0) x475) x1421)) (= 274184521717934524641157099916833587240 x505) (= x122 599290589) (= x1421 (= x80 274184521717934524641157099916833587240)) (= x1264 (x1724 (- x84 1))) (not (< x122 455944412)) (= 100 x1277) (= x1165 0) (not x998) (= x1609 x978) (= x978 x568) (= x10 (x441 (x804 x472) (x1228 208) 0)) (= x1764 1) (= (x233 x155) x12) (not x868) (= (x336 1461501637330902918203684832716283019655932542975 x1208) x1609) (not (< x1277 4)) (not x300) x661 (= x118 (not (= x983 0))) (= x1614 (x524 x1204)) (= x443 (x233 x93)) (= x868 (or (> x766 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x766) (= (<= x766 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1787 x472) (= x305 (x336 1461501637330902918203684832716283019655932542975 x1614)) (= x282 (x1695 x10)) (> 2311529814 x122) (not x1626) (= (x1724 (- x1277 4)) x766) (= (= 0 x80) x1626) (= x131 x1277) (= x968 (x859 (+ 274184521717934524641157099916833587240 x578))) (= (= x305 0) x1087) (= x912 x114) (= x397 274184521717934524641157099916833587240) (= (x336 115792089237316195423570985007226406215939081747436879206741300988257197096960 x12) x114) (= x1241 x472) (= (x441 (x804 x472) (x1228 208) 0) x1227) (= x1073 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< x122 1166402363) (= x578 (x336 115792089237316195423570985007226406215939081747436879206741300988257197096960 x282)) (= x1204 (x441 (x804 x472) (x1228 208) 0)) (not (= x122 455944412))) x1216))) x160))
(assert (=> (>= 10000 x80) (= (x804 x80) (x1228 x80))))
(assert (x1492 x548))
(assert (x1492 x1435))
(assert (= (x23 x1557) (ite (= x1557 x1202) x1174 (x227 x1557))))
(assert (x1708 x654 x165 x228 x311))
(assert (x1492 x360))
(assert (x111 x637 x835))
(assert (= (x1711 x1666) (ite (= x1589 x1666) x666 (x954 x1666))))
(assert (= (x1706 x651) (ite (and x1664 x1261) (x558 x651) (x1402 x651))))
(assert (= (ite (= x1694 x1029) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x1694)) (x954 x1694)))
(assert (x1492 x698))
(assert (x964 x1721 x757 x613 x357))
(assert (x1492 x1473))
(assert (= (x804 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x1228 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x1492 x101))
(assert (= (ite (and x298 x445) (ite (and x1558 x445 x298) (x496 (x804 x1380)) (x1467 (x804 x1380))) (x1467 (x804 x1380))) (x991 (x804 x1380))))
(assert (x1492 x1084))
(assert (x1492 x106))
(assert (x355 x1023))
(assert (= (x46 x932) (ite (= x411 x932) x402 (x186 x932))))
(assert (= (=> (= (= x1380 274184521717934524641157099916833587202) x1429) (and (=> (not x1429) x434) (=> (and (= x324 x150) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x324 x1461)) x694) (< x1468 826074471) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1461) (= (> x324 x285) x961) (<= x285 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x447 274184521717934524641157099916833587240) (= x324 x314) (not x1347) (not x73) (not (= x1468 404098525)) (<= 0 x285) (not x1077) (not (= 117300739 x1468)) (= (< x1068 x324) x1347) x1429 (<= x1027 1461501637330902918203684832716283019655932542975) (not x797) (= x1454 (+ x314 x1746)) (= x797 (< x285 x324)) (= x681 (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1461 x324)) (<= x1068 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x668 x150) (= 100 x201) (= x1461 (x602 x164)) (= x1513 (x1724 (- x1068 x150))) (= x562 274184521717934524641157099916833587240) (= x1077 (< x1068 x150)) (= x255 x201) (= x1036 (x1724 (- x285 x150))) (not (= 157198259 x1468)) (<= 0 x1461) (= x1746 x1461) (= (x441 (x804 x1027) (x1228 1) 0) x1699) (= x1719 (x1193 (x804 274184521717934524641157099916833587202))) (< 0 x1719) (not (< x201 4)) (= (x782 x1121) x285) (>= x1068 0) (= x417 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x1287 x1699) x1068) (= x1121 (x441 (x804 274184521717934524641157099916833587240) x1018 0)) (= x648 1) (= x448 274184521717934524641157099916833587240) (= (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0) x164) (= 274184521717934524641157099916833587240 x471) (= (x1724 (- x201 4)) x1272) (= 32 x1713) (not x961) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1272)) (< x1272 96)) (> x1272 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x73) (= x454 x1027) (not x694) (= x1018 (x441 (x804 x1027) (x1228 2) 0)) (= 599290589 x1468) (= x753 x1495) (= (x441 (x804 x1027) (x1228 1) 0) x322) (= x1027 x746)) x1592))) x817))
(assert (= (x1249 x1306) (ite (= x1306 x1030) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1306))))
(assert (x111 x559 x358))
(assert (x365 x1654 x1071 x1405 x953))
(assert (= (ite (= x1282 (x1228 0)) x442 (x1715 x1282)) (x233 x1282)))
(assert (= (ite (and x298 (not x773) x445) (x1247 x1109) (x189 x1109)) (x639 x1109)))
(assert (x355 x811))
(assert (= (ite (= x1312 x510) x660 (x1711 x510)) (x1209 x510)))
(assert (x1492 x234))
(assert (= (x639 x1567) (ite (and (not x773) x298 x445) (x1247 x1567) (x189 x1567))))
(assert (= (x70 x651) (ite (and (not x1353) x143 x469) (x1285 x651) (x1431 x651))))
(assert (= x1313 (and x383 x1089)))
(assert (= (ite (= x1030 x1666) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1666)) (x1249 x1666)))
(assert (x111 x837 x585))
(assert (= (x1395 x1213) (ite (= x1213 x794) 274184521717934524641157099916833587240 (x821 x1213))))
(assert (x355 x1535))
(assert (= (ite (= x1213 x1503) x1528 (x1563 x1213)) (x127 x1213)))
(assert (x1492 x146))
(assert (= (x1228 404098525) (x804 404098525)))
(assert (= (ite (= x980 (x1228 0)) x442 (x1715 x980)) (x233 x980)))
(assert (x1492 x1568))
(assert (= 0 (x221 x503)))
(assert (x1492 x1652))
(assert (=> (<= x1090 10000) (= (x1228 x1090) (x804 x1090))))
(assert (x259 x393))
(assert (= (ite (= x327 x1655) x1382 (x630 x327)) (x646 x327)))
(assert (x1492 x333))
(assert (= (x1228 57896044618658097711785492504343953926418782139537452191302581570759080747168) (x804 57896044618658097711785492504343953926418782139537452191302581570759080747168)))
(assert (x1492 x795))
(assert (x1492 x1669))
(assert (x1492 x1535))
(assert (x1492 x327))
(assert (x355 x12))
(assert (= (ite (= (x859 (+ 64 x1657)) x411) x402 (x186 (x859 (+ 64 x1657)))) (x46 (x859 (+ x1657 64)))))
(assert (x1492 x999))
(assert (x964 x934 x1736 x916 x1340))
(assert (x1492 x655))
(assert (x964 x1635 x1515 x1731 x149))
(assert (x1492 x1050))
(assert (= x614 (=> (and (= (x1256 x1349) x668) (= x808 (< 0 x1586)) (= x349 (x441 (x804 x1478) (x1228 208) 0)) (not (< x1324 1)) (< 0 x907) (= x1324 (x268 (x1228 0))) (= (x1724 (- x1324 1)) x1478) (not (= x746 0)) (= (x336 1461501637330902918203684832716283019655932542975 x559) x746) (= (x1193 (x804 x746)) x1586) (= x559 (x268 x349))) (and (=> x808 x277) (=> (not x808) x1266)))))
(assert (x355 x1597))
(assert (= (x221 x1213) 0))
(assert (= (x127 x409) (ite (= x1503 x409) x1528 (x1563 x409))))
(assert (x1492 x367))
(assert (x1492 x230))
(assert (x355 x1442))
(assert (x1492 x590))
(assert (x1492 x912))
(assert (= (x639 x1306) (ite (and x445 (not x773) x298) (x1247 x1306) (x189 x1306))))
(assert (= (ite (and (not x1526) x1089 x383) (x1191 x1666) (x1523 x1666)) (x350 x1666)))
(assert (= (x233 (x1228 0)) x442))
(assert (= (ite (= x535 x1694) x659 (x857 x1694)) (x227 x1694)))
(assert (x1492 x752))
(assert (= (x1395 x1694) (ite (= x794 x1694) 274184521717934524641157099916833587240 (x821 x1694))))
(assert (x1492 x599))
(assert (x259 x506))
(assert (x355 4294967295))
(assert (x1492 x67))
(assert (x695 x493))
(assert (x1492 x1549))
(assert (x259 x1090))
(assert (x1492 x207))
(assert (x1410 x654 x165 x311 x228))
(assert (= (x804 115792089237316195423570985008687907853269984665640564039457584007913129639934) (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (= (or (and x319 x1512) (and x174 x1765)) x458))
(assert (x1492 x184))
(assert (= (x233 x1006) (ite (= (x1228 0) x1006) x442 (x1715 x1006))))
(assert (x1492 x1343))
(assert (x1000 x59))
(assert (x1492 x753))
(assert (x111 x1060 x110))
(assert (= (ite (= x411 x1542) x402 (x186 x1542)) (x46 x1542)))
(assert (x1492 x784))
(assert (x1492 x1714))
(assert (x1492 x1745))
(assert (= (ite (= x510 x1483) x251 (x1209 x510)) (x158 x510)))
(assert (x1492 x1496))
(assert (x1492 x420))
(assert (x259 x459))
(assert (x1492 x891))
(assert (= (and x319 (not x1512)) x987))
(assert (x1492 x1716))
(assert (x1492 x1786))
(assert (x1708 x493 x59 x654 x165))
(assert (= (x221 (x859 (+ 96 x1657))) 0))
(assert (x1000 x493))
(assert (x1492 x1676))
(assert (x1492 x662))
(assert (x1492 x939))
(assert (x1492 x831))
(assert (x1771 x59 (- x493 x311)))
(assert (= (ite (and x445 x298) (x836 x884) (x1783 x884)) (x1256 x884)))
(assert (x1492 x122))
(assert (= (x227 x710) (ite (= x710 x535) x659 (x857 x710))))
(assert (x1492 x1719))
(assert (= (x804 2835717307) (x1228 2835717307)))
(assert (= (ite (= x985 x142) x1747 (x244 x142)) (x268 x142)))
(assert (x1492 x770))
(assert (=> (>= 10000 x920) (= (x804 x920) (x1228 x920))))
(assert (= (ite (and x1337 x1089 x1218 x383 x24 (not x928)) (x158 x1694) (ite (and x24 x1218 x383 (not x1337) x1089) (x1209 x1694) (ite (and (not x24) x1089 x1218 x383) (x1711 x1694) (ite (and (not x1218) x1089 x383) (x954 x1694) (x923 x1694))))) (x1191 x1694)))
(assert (= (x804 117300739) (x1228 117300739)))
(assert (= (x158 x884) (ite (= x884 x1483) x251 (x1209 x884))))
(assert (x1492 x74))
(assert (x1492 x796))
(assert (= (x885 x651) (ite (and x1765 x174) (x513 x651) (x1750 x651))))
(assert (x1492 x359))
(assert (x1492 x874))
(assert (= (=> (and (= (< x1283 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1063) (= x174 (= 274184521717934524641157099916833587206 x210)) (= x1283 (x26 (x804 x210))) (= (< (x123 (x804 x210)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1758) x1639 (= x1674 (x26 (x804 274184521717934524641157099916833587240))) (= x211 x1201) (= x622 (x123 (x804 x210))) x1758 x1063 (= (x26 (x804 274184521717934524641157099916833587240)) x54) (= x1639 (>= x54 0))) (and (=> (not x174) x1646) (=> (and (= x1356 274184521717934524641157099916833587240) (= x426 76450787359836037641860180984291677749980919077056822294353438043884394381312) (<= x242 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x902 x242) (= 68 x854) (= x345 x869) x174 (not x465) (= x1677 (x1724 (- x854 4))) (= (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0) x901) (>= 1461501637330902918203684832716283019655932542975 x869) (= (> x91 x430) x1364) (= x1568 x1752) (not x364) (= (x1724 (- x430 x91)) x1113) (<= 0 x242) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x242 x1568)) x465) (= 2835717307 x1464) (not x1364) (= x1119 1) (<= x430 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 32 x680) (= x1568 x91) (< (+ x242 x1568) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x430 0) (not (< x854 4)) (= x91 x1430) (= (+ x902 x1752) x501) (> x1321 0) (= x1061 (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0)) (not (> 826074471 x1464)) (= (x643 x850) x242) (not x1616) (= x549 x541) (= x364 (> x1568 x430)) (= x1616 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1677) true) (> 64 x1677)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1677))) (not (= 2514000705 x1464)) (= x869 x509) (= x211 x854) (not (= 826074471 x1464)) (= 274184521717934524641157099916833587240 x190) (= (x490 x1061) x430) (not (= 1889567281 x1464)) (= x850 (x441 (x804 x869) (x1228 1) 0)) (= (x1193 (x804 274184521717934524641157099916833587206)) x1321)) x325))) x50))
(assert (x1492 x904))
(assert (x355 x316))
(assert (x1708 x59 x493 x228 x311))
(assert (= (x46 x409) (ite (= x411 x409) x402 (x186 x409))))
(assert (= (ite (= x510 x1202) x1174 (x227 x510)) (x23 x510)))
(assert (x1492 x222))
(assert (x1492 x505))
(assert (x1492 x1579))
(assert (x1492 x299))
(assert (= (ite (= x15 x1202) x1174 (x227 x15)) (x23 x15)))
(assert (x259 274184521717934524641157099916833587206))
(assert (x1492 x1792))
(assert (x1708 x59 x493 x654 x165))
(assert (x1492 x294))
(assert (= (=> (and (= x1516 (< 0 x139)) (= (x1193 (x804 x1280)) x139) (= (x336 1461501637330902918203684832716283019655932542975 x637) x1280)) (and (=> (and (= x1435 x703) (= x1605 x523) (= (x991 (x804 274184521717934524641157099916833587240)) x703) (not x1516)) x1396) (=> x1516 x370))) x277))
(assert (= (x1738 x1702) (ite (and x172 x1313) (x350 x1702) (ite (and x1781 x900) (x119 x1702) (x125 x1702)))))
(assert (x1492 x1088))
(assert (x695 18446744073709551616))
(assert (x1492 x580))
(assert (x1492 x982))
(assert (x355 x1560))
(assert (x355 x1648))
(assert (x1492 x731))
(assert (= (ite (= x135 x1477) x208 (x127 x1477)) (x857 x1477)))
(assert (= (ite (= x985 x1282) x1747 (x244 x1282)) (x268 x1282)))
(assert (= (ite (and x445 (not x773) x298) (x1247 x710) (x189 x710)) (x639 x710)))
(assert (= (x804 11430537079145650693387304458692941425836787954612963690241153482819318579200) (x1228 11430537079145650693387304458692941425836787954612963690241153482819318579200)))
(assert (x1492 x297))
(assert (x1492 x315))
(assert (= (x23 x1126) (ite (= x1126 x1202) x1174 (x227 x1126))))
(assert (= (x1228 18446744073709551615) (x804 18446744073709551615)))
(assert (= (x46 x1702) (ite (= x411 x1702) x402 (x186 x1702))))
(assert (x1492 x908))
(assert (x1492 x1135))
(assert (x1492 x1297))
(assert (x1492 x228))
(assert (x1492 x1183))
(assert (= (ite (= x1694 x1229) x514 (x1735 x1694)) (x1793 x1694)))
(assert (= (x227 x409) (ite (= x535 x409) x659 (x857 x409))))
(assert (= (x221 x1542) 0))
(assert (= (ite (= x651 x617) 0 (x1360 x651)) (x1783 x651)))
(assert (= (x991 (x804 x746)) (ite (and x445 x298) (ite (and x298 x445 x1558) (x496 (x804 x746)) (x1467 (x804 x746))) (x1467 (x804 x746)))))
(assert (= (x221 x1557) 0))
(assert (= (ite (= x1179 x1192) x668 (x113 x1192)) (x1402 x1192)))
(assert (x1492 x1382))
(assert (x1492 x1201))
(assert (x1492 x957))
(assert (= (ite (= (x859 (+ x731 64)) x411) x402 (x186 (x859 (+ 64 x731)))) (x46 (x859 (+ 64 x731)))))
(assert (x1492 x1555))
(assert (= (=> (and (= x1635 (x859 (+ x1186 31))) (not (= 0 x553)) (= (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1635) x1399) (not (or (and (< x1186 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1186))) (> x1186 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1538 x1049) x755) (= x604 x1049) (= (= x755 0) x1566) (= (x859 (+ x604 x1399)) x617)) (and (=> x1566 x160) (=> (and (= (x336 1461501637330902918203684832716283019655932542975 x6) x815) (or (and x1325 x1157 x39 (= (x1775 (x804 274184521717934524641157099916833587240)) x1178) (= (>= (x346 (x804 274184521717934524641157099916833587240)) x1178) x39) (= (= (x346 (x804 x460)) x1590) x1325) (= (x1775 (x804 x460)) x1590) (< x356 4294967296)) (not x1157)) (= x249 x1564) (= x1338 (x859 (+ x1564 64))) (= (x859 (+ 64 x1338)) x1187) (= (x1193 (x804 x460)) x1235) (= (> x1309 0) x1157) (not (= 0 x1309)) (= x1762 (x859 (+ 64 x1197))) (= x460 (x336 1461501637330902918203684832716283019655932542975 x1416)) (= (x859 (+ x617 164)) x621) (not x1566) (= x249 (x859 (+ 4 x617))) (not (= 0 x1235)) (= x1197 (x859 (+ x1564 32)))) x216))) x1404))
(assert (= (x1256 x1192) (ite (and x298 x445) (x836 x1192) (x1783 x1192))))
(assert (= (x1402 x1702) (ite (= x1179 x1702) x668 (x113 x1702))))
(assert (= (and x940 x1625) x1345))
(assert (x1492 x54))
(assert (= (x1793 x510) (ite (= x1229 x510) x514 (x1735 x510))))
(assert (x259 x1494))
(assert (x1771 x165 (- x654 x493)))
(assert (x259 x746))
(assert (x355 x85))
(assert (x1492 x540))
(assert (= x1596 (and x1647 (not x1236))))
(assert (x1000 (- x59 x311)))
(assert (x1000 (- x59 x228)))
(assert (x1492 x1542))
(assert (x695 x1194))
(assert (= (ite (and (not x1236) x1647 x1205) (x768 x651) (x1249 x651)) (x1538 x651)))
(assert (x1492 x986))
(assert (= (ite (= x330 x1213) 274184521717934524641157099916833587240 (x809 x1213)) (x1727 x1213)))
(assert (x1410 x493 x59 x311 x228))
(assert (x355 x282))
(assert (x1492 x758))
(assert (= (ite (= x651 x1029) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x651)) (x954 x651)))
(assert (= (x1249 x43) (ite (= x43 x1030) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x43))))
(assert (x1708 x228 x311 x654 x165))
(assert (x1492 x1667))
(assert (x1492 x1455))
(assert (x1492 x591))
(assert (x1492 x841))
(assert (x1492 x849))
(assert (= (x221 x409) 0))
(assert (x1492 x771))
(assert (= (ite (= x1589 x884) x666 (x954 x884)) (x1711 x884)))
(assert (x1492 x1463))
(assert (x355 x1654))
(assert (x1492 x1143))
(assert (x1492 x1178))
(assert (x1492 x1764))
(assert (x1492 x19))
(assert (x355 255))
(assert (= x1190 (=> (= (= 274184521717934524641157099916833587206 x586) x1001) (and (=> (not x1001) x273) (=> (and (= x981 274184521717934524641157099916833587240) (not (> 826074471 x1502)) (< 0 x952) (<= x1527 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1502 1889567281) (not (> 4 x1362)) (= x1362 x126) (= x1407 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x269 32) (= x1362 36) x1001 (= x952 (x1193 (x804 274184521717934524641157099916833587206))) (= (or (> x1682 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1682) true) (> 32 x1682))) x565) (= x1649 1) (= x1682 (x1724 (- x1362 4))) (= x1774 (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0)) (>= x1527 0) (not x565) (= (x1372 x1774) x1527) (not (= x1502 826074471))) x1083)))))
(assert (x355 x1060))
(assert (x1492 x1444))
(assert (x1462 x637 79228162514264337593543950336))
(assert (= (x268 x349) (ite (= x349 x985) x1747 (x244 x349))))
(assert (= (x1249 x1213) (ite (= x1030 x1213) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1213))))
(assert (= (and x1032 (not x808)) x1089))
(assert (x1492 x498))
(assert (= x1621 (x1760 (x804 x1621))))
(assert (=> (>= 10000 x1622) (= (x804 x1622) (x1228 x1622))))
(assert (x1355 x1176 x1428))
(assert (x355 x1176))
(assert (x1492 x1675))
(assert (= (x1760 (x804 x460)) x460))
(assert (= (x46 x1049) (ite (= x1049 x411) x402 (x186 x1049))))
(assert (x1492 x756))
(assert (x1492 x1292))
(assert (=> (>= 10000 x472) (= (x804 x472) (x1228 x472))))
(assert (= (x804 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (x259 x586))
(assert (= (x1754 x1694) (ite (= x1694 x1779) x401 (x1793 x1694))))
(assert (= (ite (= x411 192) x402 (x186 192)) (x46 192)))
(assert (x1492 x793))
(assert (x259 x662))
(assert (= (x639 x1213) (ite (and x445 (not x773) x298) (x1247 x1213) (x189 x1213))))
(assert (= (and (not x1185) x1737) x444))
(assert (x1492 x703))
(assert (x1355 x440 x1351))
(assert (x1492 x1685))
(assert (x1492 x1799))
(assert (x1492 x542))
(assert (x1492 x461))
(assert (x1492 x1687))
(assert (= (ite (= (x1228 0) x1732) x442 (x1715 x1732)) (x233 x1732)))
(assert (= (ite (and x1337 x24 (not x928) x1218 x383 x1089) (x158 x884) (ite (and x383 x1218 (not x1337) x24 x1089) (x1209 x884) (ite (and x383 (not x24) x1218 x1089) (x1711 x884) (ite (and x1089 (not x1218) x383) (x954 x884) (x923 x884))))) (x1191 x884)))
(assert (= (ite (= x1306 x1503) x1528 (x1563 x1306)) (x127 x1306)))
(assert (x1492 x1379))
(assert (x1492 x984))
(assert (x355 x1669))
(assert (= (ite (= x1542 x1503) x1528 (x1563 x1542)) (x127 x1542)))
(assert (x1492 x68))
(assert (x1492 x1609))
(assert (x1492 x656))
(assert (x1492 x805))
(assert (x1492 x140))
(assert (= (x1783 x1306) (ite (= x617 x1306) 0 (x1360 x1306))))
(assert (= (ite (= x1666 x1179) x668 (x113 x1666)) (x1402 x1666)))
(assert (x438 x1123 5192296858534827628530496329220096))
(assert (x111 x1173 x40))
(assert (x1492 x211))
(assert (=> (<= x1456 10000) (= (x804 x1456) (x1228 x1456))))
(assert (x1492 x1580))
(assert (x1492 x208))
(assert (= (x1783 x1694) (ite (= x617 x1694) 0 (x1360 x1694))))
(assert (x1492 x527))
(assert (x1492 x959))
(assert (x1492 x1564))
(assert (x1492 x641))
(assert (x1492 x151))
(assert (x1492 x409))
(assert (x259 x1478))
(assert (x1492 x238))
(assert (= x1574 x722))
(assert (=> (>= 10000 x1478) (= (x1228 x1478) (x804 x1478))))
(assert (x1492 x920))
(assert (= (x1209 x710) (ite (= x710 x1312) x660 (x1711 x710))))
(assert (= x1083 (=> (and (= x793 (x859 (+ x893 x523))) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x269) (and (< x269 32) (= (<= x269 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1131 (x859 (+ x269 31))) (= x523 x1126) (= x893 (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1131)) (not (= 0 x1649)) (= x185 x1435) (= x185 (x1160 x1126)) (= x793 x1605)) x1396)))
(assert (x1492 x1171))
(assert (x1492 x978))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1760 (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x1708 x228 x311 x493 x59))
(assert (x1492 x586))
(assert (= (ite (= x1694 x1503) x1528 (x1563 x1694)) (x127 x1694)))
(assert (x1492 x979))
(assert (= (ite (and x1218 x1337 (not x928) x1089 x383 x24) (x158 x710) (ite (and x383 x1089 x24 (not x1337) x1218) (x1209 x710) (ite (and x1218 x1089 x383 (not x24)) (x1711 x710) (ite (and (not x1218) x383 x1089) (x954 x710) (x923 x710))))) (x1191 x710)))
(assert (x1492 x674))
(assert (= (x1256 x510) (ite (and x445 x298) (x836 x510) (x1783 x510))))
(assert (x1492 x539))
(assert (x1436 x1669 x1144))
(assert (x1492 x150))
(assert (= (ite (= x1694 x330) 274184521717934524641157099916833587240 (x809 x1694)) (x1727 x1694)))
(assert (= (x127 x1557) (ite (= x1503 x1557) x1528 (x1563 x1557))))
(assert (x355 x1620))
(assert (x1492 x392))
(assert (= (ite (and x1261 x1664) (x558 x1475) (x1402 x1475)) (x1706 x1475)))
(assert (x1492 x706))
(assert (= (x1249 x1475) (ite (= x1475 x1030) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1475))))
(assert (x1492 x907))
(assert (x1492 x567))
(assert (x1492 x627))
(assert (x1492 x1763))
(assert (= (ite (= x47 x411) x402 (x186 x47)) (x46 x47)))
(assert (x355 x1240))
(assert (= (x1738 x651) (ite (and x172 x1313) (x350 x651) (ite (and x1781 x900) (x119 x651) (x125 x651)))))
(assert (x1771 x228 (- x311 x493)))
(assert (x1492 x528))
(assert (x1492 x1697))
(assert (x1492 x1329))
(assert (= (x1228 1845821197) (x804 1845821197)))
(assert (= (and x469 x143) x1765))
(assert (= (x1760 (x1228 511946350)) 511946350))
(assert (= (x233 x202) (ite (= (x1228 0) x202) x442 (x1715 x202))))
(assert (x1492 x476))
(assert (= (ite (= x1029 x1109) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x1109)) (x954 x1109)))
(assert (x1492 x727))
(assert (x1492 x249))
(assert (= (ite (and x1205 (not x1236) x1647) (x768 x1475) (x1249 x1475)) (x1538 x1475)))
(assert (x1000 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x111 x1416 x626))
(assert (x1492 x285))
(assert (= x1755 (x1760 (x804 x1755))))
(assert (x1492 x1335))
(assert (x1492 x1117))
(assert (= (x1256 x409) (ite (and x298 x445) (x836 x409) (x1783 x409))))
(assert (= (x1689 x1109) (ite (= x1109 x621) 0 (x855 x1109))))
(assert (= (x221 160) 0))
(assert (x1492 x1759))
(assert (x1492 x223))
(assert (x1492 x949))
(assert (x355 5192296858534827628530496329220095))
(assert (= 1889567281 (x1760 (x1228 1889567281))))
(assert (= (ite (= x884 x411) x402 (x186 x884)) (x46 x884)))
(assert (x1492 x1202))
(assert (x1492 x20))
(assert (= (x1228 1461501637330902918203684832716283019655932542976) (x804 1461501637330902918203684832716283019655932542976)))
(assert (x1492 x266))
(assert (= (x1783 x1702) (ite (= x617 x1702) 0 (x1360 x1702))))
(assert (x1492 x1244))
(assert (= (ite (= x411 x272) x402 (x186 x272)) (x46 x272)))
(assert (x1492 x1283))
(assert (x1000 (- x654 x59)))
(assert (x1492 x1741))
(assert (x1492 x869))
(assert (= x679 (=> (= (= x1380 274184521717934524641157099916833587206) x900) (and (=> (and (= x146 x634) (> 826074471 x645) (<= x196 1461501637330902918203684832716283019655932542975) (not x925) (not x1414) (= x254 x1084) (= x539 (x1724 (- x1053 x146))) x900 (= 274184521717934524641157099916833587240 x1549) (= x196 x1367) (= x408 (or (> x101 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x101 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x101)))) (= (x1372 x328) x1444) (= x925 (< x1053 x634)) (= x152 (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0)) (= (< x1053 x634) x609) (= x1054 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x303 (x441 (x804 x196) (x1228 2) 0)) (= 274184521717934524641157099916833587240 x1797) (= 599290589 x645) (= 100 x810) (= x377 (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0)) (not x853) (= x1713 32) (<= 0 x1053) (= (+ x254 x1298) x674) (<= 0 x1444) (not (= 117300739 x645)) (not (= x645 157198259)) (= (x1193 (x804 274184521717934524641157099916833587206)) x941) (not (< x810 4)) (= 1 x648) (= (x1724 (- x1444 x146)) x911) (>= x1084 0) (<= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x941) (not x1739) (= x668 x146) (= x1739 (> x634 x1444)) (= x255 x810) (= x101 (x1724 (- x810 4))) (= x770 274184521717934524641157099916833587240) (not (= x645 404098525)) (= x746 x196) (not x609) (= x853 (> x146 x1444)) (= 274184521717934524641157099916833587240 x1043) (= x1243 (x441 (x804 x196) (x1228 1) 0)) (= x1414 (>= (+ x1084 x634) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x408) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1084) (= (x441 (x804 x196) (x1228 1) 0) x328) (= x737 x655) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x634 x1084)) (= (x711 x152) x1084) (= x1053 (x1104 x329)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1444) (= (x441 (x804 274184521717934524641157099916833587240) x303 0) x329) (= x1298 x634)) x1592) (=> (not x900) x817)))))
(assert (= (ite (= x1702 x1229) x514 (x1735 x1702)) (x1793 x1702)))
(assert (= (x1760 (x804 x1058)) x1058))
(assert (= x434 true))
(assert (= (ite (= x1029 x510) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x510)) (x954 x510)))
(assert (x1492 x1588))
(assert (= (x268 x1273) (ite (= x1273 x985) x1747 (x244 x1273))))
(assert (= (ite (= x535 x510) x659 (x857 x510)) (x227 x510)))
(assert (= (x350 x1213) (ite (and x1089 (not x1526) x383) (x1191 x1213) (x1523 x1213))))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1760 (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= (x1783 x1567) (ite (= x617 x1567) 0 (x1360 x1567))))
(assert (x1492 x1611))
(assert (= (ite (= x1655 x884) x1382 (x630 x884)) (x646 x884)))
(assert (x1492 x1197))
(assert (x1492 x595))
(assert (x1708 x654 x165 x59 x493))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1760 (x1228 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (x592 (* 79228162514264337593543950336 x6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1492 x492))
(assert (x1492 x1615))
(assert (= (=> (and (= x785 (> (x1193 (x804 274184521717934524641157099916833587240)) 0)) (<= 0 x1473) x35 (= (x199 (x804 274184521717934524641157099916833587240)) x657) (= x169 x1716) (= x847 (< 0 (x1193 (x804 274184521717934524641157099916833587202)))) (>= 1461501637330902918203684832716283019655932542975 x169) x847 (<= x642 1461501637330902918203684832716283019655932542975) (<= x1278 1461501637330902918203684832716283019655932542975) (= x1172 false) (= true x310) (<= 0 x642) (= x1621 x1473) (<= x1253 1461501637330902918203684832716283019655932542975) (>= x495 0) (= (x199 (x804 274184521717934524641157099916833587206)) x495) (= false x453) (>= x1278 0) (>= x657 0) (= x35 (> (x1193 (x804 274184521717934524641157099916833587206)) 0)) x785 (<= x1473 1461501637330902918203684832716283019655932542975) (= 2335792882 x526) (>= x169 0) (<= 0 x832) (>= x1253 0) (= x1627 9) (= (x199 (x804 274184521717934524641157099916833587202)) x832) (= x1595 x642) (= x1278 x1661) (= x1520 false) (= x1253 x1636)) x1587) x1552))
(assert (x1492 x130))
(assert (= (=> (and (= x794 x891) (= 274184521717934524641157099916833587240 x193) (= x275 (x1193 (x804 x506))) (= x690 (x859 (+ x1605 36))) (not (= x275 0)) (= x891 (x859 (+ 4 x1605))) (= (x1724 (- x690 x1605)) x903) (= x506 (x336 1461501637330902918203684832716283019655932542975 x637)) (= x704 (= x506 274184521717934524641157099916833587240))) (and (=> (and (not (< x628 4)) (= x903 x628) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1284) (and (< x1284 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1284) true))) x478) (= x849 32) (not (< x1384 1722255204)) (not x478) (not (= 1722255204 x1384)) (= x1005 274184521717934524641157099916833587240) (= 36 x628) (> 2311529814 x1384) (= x1384 1889567281) (= 1 x1142) (= (x1724 (- x628 4)) x1284) x704 (= (x268 x647) x1011) (not (< x1384 1166402363)) (= x1789 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (= x1384 1845821197)) (not (= x1384 1858285468)) (> x260 0) (= (x441 (x804 274184521717934524641157099916833587240) (x1228 209) 0) x647) (= x260 (x1193 (x804 274184521717934524641157099916833587240)))) x1394) (=> (not x704) x386))) x715))
(assert (= (x127 x710) (ite (= x710 x1503) x1528 (x1563 x710))))
(assert (x1436 x1269 x1254))
(assert (x1492 x721))
(assert (x1492 x1601))
(assert (x1492 x638))
(assert (x1492 x190))
(assert (x1492 x1051))
(assert (= (ite (and x383 x1089 (not x1526)) (x1191 x1192) (x1523 x1192)) (x350 x1192)))
(assert (x825 x213 100))
(assert (=> (<= x459 10000) (= (x1228 x459) (x804 x459))))
(assert (x355 x1792))
(assert (= x1592 (=> (and (= (x859 (+ (x1644 (x404 (x804 274184521717934524641157099916833587240))) x229)) x1114) (or (and (= x283 x398) (= x327 96) x1161) (and (= x327 x398) (not x1161) (= x705 (x859 (+ 96 x243))) (= x218 x283) (= (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1221) x1217) (= x1221 (x859 (+ 63 x1713))) (= x218 (x859 (+ x1217 x398))))) (= x1290 x283) (= x1274 (< 0 x1037)) (or (not x1274) (and (not (or (> x926 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x926 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x926)))) x1274 (= x538 (not x1544)) (= (ite x538 1 0) x720) (> x1320 0) (= (x1424 x327) x926) (= x720 x1320) (= x710 (x859 (+ x327 32))) (= x1320 (x1424 x710)) (= x1544 (= x1320 0)))) (= x1509 (< (+ (x404 (x804 274184521717934524641157099916833587240)) x229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1509 (not (= 0 x648)) (= (- (x696 (x804 x1380)) x229) x163) (= 0 x229) (= x1037 (x1424 x327)) (= (= 0 x1713) x1161)) x1020)))
(assert (x1492 x1130))
(assert (= (=> (and (= x38 x668) (< (+ x1435 x668) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x789 x787) (= x1354 x1435) (= x381 x1009) (not (> x789 x883)) (= (+ x38 x1354) x787)) x1310) x1767))
(assert (x1492 x86))
(assert (x355 x1716))
(assert (= (x23 x884) (ite (= x884 x1202) x1174 (x227 x884))))
(assert (x1492 x1430))
(assert (= (ite (= x1655 x1126) x1382 (x630 x1126)) (x646 x1126)))
(assert (x1492 x909))
(assert (x1492 x435))
(assert (= (x804 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x1228 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x1492 x1624))
(assert (x1492 x2))
(assert (x1492 x1232))
(assert (x259 x1755))
(assert (= (ite (and (not x1236) x1647 x1205) (x768 x1694) (x1249 x1694)) (x1538 x1694)))
(assert (x1462 1461501637330902918203684832716283019655932542976 x1501))
(assert (x1492 x1166))
(assert (= (x1760 (x1228 115792089237316195423570985007226406215939081747436879206741300988257197096960)) 115792089237316195423570985007226406215939081747436879206741300988257197096960))
(assert (= (ite (= x1213 x1029) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x1213)) (x954 x1213)))
(assert (x259 x1740))
(assert (x1492 x948))
(assert (= (ite (and x445 x298) (x836 x1694) (x1783 x1694)) (x1256 x1694)))
(assert (= (and x1032 x808) x1550))
(assert (x1492 x1380))
(assert (= (x127 x1477) (ite (= x1503 x1477) x1528 (x1563 x1477))))
(assert (x355 x1721))
(assert (x1492 x1081))
(assert (x1492 x1521))
(assert (x1492 x6))
(assert (x1492 x881))
(assert (= (ite (= x651 x972) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x159 x651)) (x1735 x651)))
(assert (= (ite (= (x859 (+ 96 x1657)) x411) x402 (x186 (x859 (+ 96 x1657)))) (x46 (x859 (+ 96 x1657)))))
(assert (x1355 x1008 x181))
(assert (= (x8 x1194 255) (x1332 x1194 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x1492 x401))
(assert (= (ite (= x794 x1702) 274184521717934524641157099916833587240 (x821 x1702)) (x1395 x1702)))
(assert (= 2650021976 (x1760 (x1228 2650021976))))
(assert (= x1266 (=> (and (= (x336 1461501637330902918203684832716283019655932542975 x637) x1755) (= (x1193 (x804 x1755)) x967) (= (< 0 x967) x383)) (and (=> (and (or (and x1218 (or (and (not x24) (= 32 x1300)) (and (= (x1711 x1306) x660) (or (and (= x1300 64) (not x1337)) (and (= x928 (> x700 96)) x1337 (= (x1209 x1567) x251) (= x1483 (x859 (+ x243 128))) (= x1567 (x859 (+ 96 x523))) (or (and (not x928) (= 96 x1300)) (and (= x468 (> x700 128)) (= 128 x1300) (= x237 (x158 x1109)) x928 (= (x859 (+ 128 x523)) x1109) (not x468) (= (x859 (+ x243 160)) x257))))) (= (> x700 64) x1337) x24 (= x1306 (x859 (+ 64 x523))) (= (x859 (+ x243 96)) x1312))) (= (x954 x1542) x666) (= (< 32 x700) x24) (= x1589 x398) (= x1542 x409)) (and (= x1300 0) (not x1218))) (= (x859 (+ 132 x523)) x243) (= x529 0) (= (> x1300 x700) x1526) (= (x859 (+ 32 x521)) x986) x383 (= x727 (x859 (+ 36 x523))) (or (not x1526) (and (= x749 (x859 (+ x700 x398))) x1526)) (= x316 (x594 x409)) (= 274184521717934524641157099916833587240 x999) (= (x859 (+ x523 32)) x409) (= x1029 (x859 (+ x727 128))) (= x398 (x859 (+ 160 x727))) (= (> x700 0) x1218) (= x700 (x954 x523)) (= x1128 (x1724 (- x984 32))) (= (x859 (+ 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1110)) x1251) (= (x1724 (- x243 x523)) x984) x1427 (= x1380 (x336 1461501637330902918203684832716283019655932542975 x637)) (= x1427 (> x1232 0)) (= (x336 26959946667150639794667015087019630673637144422540572481103610249215 x316) x1110) (= (x859 (+ 64 x521)) x203) (= x727 x521) (= (x1193 (x804 x1380)) x1232) (= x1687 274184521717934524641157099916833587240)) x992) (=> (and (= x1290 x523) (not (< x908 x668)) (not x383)) x1020)))))
(assert (x1492 x1506))
(assert (x111 x548 x671))
(assert (x1000 (- x311 x654)))
(assert (= x1380 (x1760 (x804 x1380))))
(assert (x1492 x1797))
(assert (= (ite (= x135 x510) x208 (x127 x510)) (x857 x510)))
(assert (= (ite (and x1205 x1647 (not x1236)) (x768 x1306) (x1249 x1306)) (x1538 x1306)))
(assert (x1492 x1677))
(assert (= (x127 x15) (ite (= x1503 x15) x1528 (x1563 x15))))
(assert (= (x1711 x710) (ite (= x1589 x710) x666 (x954 x710))))
(assert (x1492 x570))
(assert (x1492 x1586))
(assert (= (x1760 (x1228 57896044618658097711785492504343953926418782139537452191302581570759080747168)) 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (= (x1249 x1694) (ite (= x1694 x1030) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1694))))
(assert (x1492 x1264))
(assert (= 404098525 (x1760 (x1228 404098525))))
(assert (x259 x1622))
(assert (x1492 x1456))
(assert (x1492 x1384))
(assert (x1492 x200))
(assert (= (+ 2 (x1760 x678)) (x1760 (x1451 x678 2))))
(assert (= (x1735 x1702) (ite (= x972 x1702) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x159 x1702))))
(assert (= (x1783 x1213) (ite (= x1213 x617) 0 (x1360 x1213))))
(assert (x1492 x506))
(assert (x1492 x493))
(assert (= x315 (x1760 (x804 x315))))
(assert (= x667 (and x807 (not x661))))
(assert (x1492 x1702))
(assert (x1492 x690))
(assert (= x1323 (and x1550 x1516)))
(assert (= (x1228 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x804 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (ite (= (x1228 0) x1645) x442 (x1715 x1645)) (x233 x1645)))
(assert (x1492 x14))
(assert (x111 x1716 x1248))
(assert (= x682 (or x547 (and (not x383) x1089))))
(assert (x1492 x1665))
(assert (x1492 x278))
(assert (x1492 x191))
(assert (x1492 x462))
(assert (x111 x1031 x1415))
(assert (= (x1395 x1666) (ite (= x1666 x794) 274184521717934524641157099916833587240 (x821 x1666))))
(assert (= (ite (= x411 128) x402 (x186 128)) (x46 128)))
(assert (= (x1760 (x804 x662)) x662))
(assert (x1771 x654 (- x165 x59)))
(assert (x1492 x433))
(assert (= (ite (= x43 x135) x208 (x127 x43)) (x857 x43)))
(assert (x1492 x489))
(assert (=> (>= 10000 x1214) (= (x1228 x1214) (x804 x1214))))
(assert (x1492 x1770))
(assert (x355 x422))
(assert (x1492 x443))
(assert (= (x857 x884) (ite (= x135 x884) x208 (x127 x884))))
(assert (x355 x1082))
(assert (x1492 x988))
(assert (x1492 x204))
(assert (x355 x1638))
(assert (= (ite (= x1192 x1483) x251 (x1209 x1192)) (x158 x1192)))
(assert (x1492 x623))
(assert (x1492 x1027))
(assert (= x1494 (x1760 (x804 x1494))))
(assert (= (x646 x15) (ite (= x15 x1655) x1382 (x630 x15))))
(assert (x1492 x1557))
(assert (x1492 x1728))
(assert (x1492 x976))
(assert (x1492 x1701))
(assert (x1492 x1595))
(assert (x1492 x1513))
(assert (= (x1191 x1213) (ite (and x1218 x383 x24 x1337 (not x928) x1089) (x158 x1213) (ite (and x383 x1218 x1089 x24 (not x1337)) (x1209 x1213) (ite (and x1089 x1218 (not x24) x383) (x1711 x1213) (ite (and x383 (not x1218) x1089) (x954 x1213) (x923 x1213)))))))
(assert (= (x1711 x1213) (ite (= x1213 x1589) x666 (x954 x1213))))
(assert (x1492 x936))
(assert (x25 115792089237316195423570985008687907853269984665640564039457584007913129639935 x493))
(assert (x1492 x975))
(assert (x1492 x194))
(assert (x1492 x1500))
(assert (x1492 x185))
(assert (x1492 x12))
(assert (x1492 x1524))
(assert (= (x1256 x1702) (ite (and x298 x445) (x836 x1702) (x1783 x1702))))
(assert (x1410 x311 x228 x493 x59))
(assert (x259 x455))
(assert (= (ite (and x1313 x172) (x350 x1192) (ite (and x1781 x900) (x119 x1192) (x125 x1192))) (x1738 x1192)))
(assert (x1492 x1501))
(assert (= (+ (x1760 x741) 2) (x1760 (x1451 x741 2))))
(assert (x1492 x1660))
(assert (x1771 x311 (- x228 x493)))
(assert (= (x804 115792089237316195423570985008687907853269984665640564039457584007913129639908) (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639908)))
(assert (x355 x837))
(assert (x1492 x1142))
(assert (= 0 (x221 x47)))
(assert (= 2514000705 (x1760 (x1228 2514000705))))
(assert (= (x233 x1170) (ite (= (x1228 0) x1170) x442 (x1715 x1170))))
(assert (x1492 x628))
(assert (= (x1247 x710) (ite (and x298 x1670 x445 x452 (not x1105) x351) (x23 x710) (ite (and x351 (not x452) x298 x445 x1670) (x227 x710) (ite (and x1670 x445 x298 (not x351)) (x857 x710) (ite (and (not x1670) x445 x298) (x127 x710) (x552 x710)))))))
(assert (x1492 x302))
(assert (=> (>= 10000 x1058) (= (x1228 x1058) (x804 x1058))))
(assert (= (x1760 (x804 x568)) x568))
(assert (x1492 x193))
(assert (x1492 x813))
(assert (= (x1538 x1702) (ite (and x1205 x1647 (not x1236)) (x768 x1702) (x1249 x1702))))
(assert (x1492 x1060))
(assert (x111 x1792 x363))
(assert (= (x1209 x1567) (ite (= x1567 x1312) x660 (x1711 x1567))))
(assert (x1492 x1073))
(assert (= (ite (= x1557 x1030) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1557)) (x1249 x1557)))
(assert (= (ite (= x235 x1503) x1528 (x1563 x235)) (x127 x235)))
(assert (= (x1689 x15) (ite (= x621 x15) 0 (x855 x15))))
(assert (x1492 x1179))
(assert (x1492 x196))
(assert (x1492 x1373))
(assert (= (ite (= x135 x1666) x208 (x127 x1666)) (x857 x1666)))
(assert (x1492 x1149))
(assert (= (x268 x1327) (ite (= x1327 x985) x1747 (x244 x1327))))
(assert (= (ite (= x1312 x327) x660 (x1711 x327)) (x1209 x327)))
(assert (x1492 x75))
(assert (x1492 x66))
(assert (x438 x644 18446744073709551616))
(assert (x1492 x460))
(assert (x1492 x942))
(assert (= (x227 x1349) (ite (= x535 x1349) x659 (x857 x1349))))
(assert (= (ite x682 (ite x547 (x87 (x804 x210)) (x991 (x804 x210))) (x1276 (x804 x210))) (x26 (x804 x210))))
(assert (x1028 x1583 x863 x937 x296))
(assert (= (x1044 (x822 11430537079145650693387304458692941425836787954612963690241153482819318579200 x989)) 1))
(assert (x111 x638 x1151))
(assert (= (ite (= x710 x1030) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x710)) (x1249 x710)))
(assert (x1492 x1230))
(assert (x1492 x55))
(assert (x1492 x1417))
(assert (= (ite (= x1192 x411) x402 (x186 x1192)) (x46 x1192)))
(assert (x1492 x1504))
(assert (= 0 (x221 (x859 (+ 32 x731)))))
(assert (= x701 x927))
(assert (x1492 x176))
(assert (x1410 x311 x228 x654 x165))
(assert (x259 x1456))
(assert (x676 x1082 x636 x1067 x390))
(assert (= (ite (= x1213 x972) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x159 x1213)) (x1735 x1213)))
(assert (= (x1760 (x804 274184521717934524641157099916833587240)) 274184521717934524641157099916833587240))
(assert (x1492 x1085))
(assert (x1492 x417))
(assert (x1492 x510))
(assert (x1410 x165 x654 x493 x59))
(assert (= (and x1345 (not x704)) x1737))
(assert (x1492 x275))
(assert (x1492 x533))
(assert (x1771 x311 (- x228 x165)))
(assert (= (ite (= x235 x1030) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x235)) (x1249 x235)))
(assert (x1492 x1560))
(assert (= (x227 x1109) (ite (= x1109 x535) x659 (x857 x1109))))
(assert (x1492 x1709))
(assert (= 4294967296 (x1760 (x1228 4294967296))))
(assert (= (ite (= x327 x411) x402 (x186 x327)) (x46 x327)))
(assert (= (x1256 x1109) (ite (and x298 x445) (x836 x1109) (x1783 x1109))))
(assert (= (ite (= x1006 x985) x1747 (x244 x1006)) (x268 x1006)))
(assert (x1492 x203))
(assert (= (ite (= x617 x1477) 0 (x1360 x1477)) (x1783 x1477)))
(assert (x1492 x555))
(assert (= (x804 4294967296) (x1228 4294967296)))
(assert (x1492 x1281))
(assert (= (ite (and x1664 x1261) (x558 x510) (x1402 x510)) (x1706 x510)))
(assert (= x722 x1234))
(assert (x554 x944 x1386))
(assert (= (x1760 (x804 x586)) x586))
(assert (and (= (x872 9 3) 27) (= 9 (x872 3 3)) (= (x872 27 3) 81) (= (x872 9 9) 81)))
(assert (= (ite (and x1089 x383 (not x1526)) (x1191 x327) (x1523 x327)) (x350 x327)))
(assert (x1000 (- x59 x654)))
(assert (= (=> (and (= false x117) (= x376 (x258 (x1228 0))) (= x279 false) (not (< x376 1))) x1584) x574))
(assert (x1771 x493 x59))
(assert (x1436 x904 x1242))
(assert (=> (>= 10000 x637) (= (x804 x637) (x1228 x637))))
(assert (x259 x56))
(assert (= (x1249 x1477) (ite (= x1030 x1477) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1477))))
(assert (x1771 x165 (- x654 x311)))
(assert (x1492 x1004))
(assert (= (x1228 2311529814) (x804 2311529814)))
(assert (= (ite (= x1109 x1202) x1174 (x227 x1109)) (x23 x1109)))
(assert (x1492 x1321))
(assert (x1492 x668))
(assert (= (x557 x1416 96) (x1644 (* x1416 79228162514264337593543950336))))
(assert (x1492 x148))
(assert (x1492 x422))
(assert (= 274184521717934524641157099916833587202 (x1760 (x1228 274184521717934524641157099916833587202))))
(assert (= (x1228 115792089237316195423570984636004990333889740523700931696805413995650331181055) (x804 115792089237316195423570984636004990333889740523700931696805413995650331181055)))
(assert (= (ite (and x1647 x1205 (not x1236)) (x768 x1567) (x1249 x1567)) (x1538 x1567)))
(assert (x1492 x1721))
(assert (x1492 x1320))
(assert (= (ite (= x794 x651) 274184521717934524641157099916833587240 (x821 x651)) (x1395 x651)))
(assert (= (x1209 x1192) (ite (= x1192 x1312) x660 (x1711 x1192))))
(assert (= (x46 x1557) (ite (= x411 x1557) x402 (x186 x1557))))
(assert (=> (>= 10000 x506) (= (x804 x506) (x1228 x506))))
(assert (x1492 x535))
(assert (x355 x1031))
(assert (= (ite (= x1475 x135) x208 (x127 x1475)) (x857 x1475)))
(assert (= (ite (= x1273 (x1228 0)) x442 (x1715 x1273)) (x233 x1273)))
(assert (x1000 x209))
(assert (= (x1538 x409) (ite (and (not x1236) x1647 x1205) (x768 x409) (x1249 x409))))
(assert (x761 x207 x762 x1331 x1101))
(assert (x1000 (- x165 x493)))
(assert (= (ite (= x1030 x1542) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1542)) (x1249 x1542)))
(assert (= (ite (= x884 x1179) x668 (x113 x884)) (x1402 x884)))
(assert (x1492 x1796))
(assert (x1492 x80))
(assert (x355 x1220))
(assert (= (ite (and x1664 x1261) (x558 x1702) (x1402 x1702)) (x1706 x1702)))
(assert (x1708 x654 x165 x311 x228))
(assert (= x1261 (or x1318 (and (not x1516) x1550))))
(assert (not x1552))
(assert (= (ite (= x330 x651) 274184521717934524641157099916833587240 (x809 x651)) (x1727 x651)))
(assert (= (x1372 x1061) (ite (and x445 x298) (ite (and x298 x1558 x445) (x30 x1061) (x1034 x1061)) (x1034 x1061))))
(assert (= (x1285 x1702) (ite (and x143 x1570 x572 x1488 x469 (not x166)) (x1623 x1702) (ite (and (not x1570) x469 x143 x1488 x572) (x1754 x1702) (ite (and x469 x1488 x143 (not x572)) (x1793 x1702) (ite (and x469 (not x1488) x143) (x1735 x1702) (x955 x1702)))))))
(assert (= (x227 x1557) (ite (= x535 x1557) x659 (x857 x1557))))
(assert (x355 x548))
(assert (x1492 x1235))
(assert (x1492 x635))
(assert (= (ite (= x135 x15) x208 (x127 x15)) (x857 x15)))
(assert (x1492 x79))
(assert (= (x857 x1567) (ite (= x135 x1567) x208 (x127 x1567))))
(assert (= (ite (= x1030 x1192) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1192)) (x1249 x1192)))
(assert (x1492 x897))
(assert (x1492 x589))
(assert (x1492 x1420))
(assert (= (ite (= x1503 x510) x1528 (x1563 x510)) (x127 x510)))
(assert (x438 x1194 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x1462 x6 79228162514264337593543950336))
(assert (= (=> (= (= x506 274184521717934524641157099916833587206) x1185) (and (=> (and (not (= 826074471 x1533)) (> x533 0) (= 274184521717934524641157099916833587240 x1315) (= (x280 x673) x184) (<= 0 x184) (= (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0) x673) (= (x1193 (x804 274184521717934524641157099916833587206)) x533) (= x849 32) (= 1 x1142) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x184) (not (> 4 x796)) x1185 (= x796 x903) (= x1328 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1281) true) (< x1281 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1281))) (= x1281 (x1724 (- x796 4))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1742) (= 36 x796) (= x1533 1889567281) (not (< x1533 826074471)) (not x1328)) x1394) (=> (not x1185) x1299))) x386))
(assert (= (x1760 (x804 x869)) x869))
(assert (x1492 x519))
(assert (= (ite (= x523 x1029) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x523)) (x954 x523)))
(assert (= (ite (= x1126 x330) 274184521717934524641157099916833587240 (x809 x1126)) (x1727 x1126)))
(assert (x1492 x743))
(assert (= (ite (and x445 x298) (ite (and x298 x1558 x445) (x30 x328) (x1034 x328)) (x1034 x328)) (x1372 x328)))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1760 (x1228 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (x1771 x654 (- x165 x228)))
(assert (= (x1760 (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639908)) 115792089237316195423570985008687907853269984665640564039457584007913129639908))
(assert (x1000 x654))
(assert (x1492 x1507))
(assert (= (ite (= x1204 (x1228 0)) x442 (x1715 x1204)) (x233 x1204)))
(assert (= (x804 274184521717934524641157099916833587202) (x1228 274184521717934524641157099916833587202)))
(assert (= (ite (and x1647 x1205 (not x1236)) (x768 x1213) (x1249 x1213)) (x1538 x1213)))
(assert (= (x23 x710) (ite (= x710 x1202) x1174 (x227 x710))))
(assert (= (x1247 x409) (ite (and x452 x298 x351 x445 x1670 (not x1105)) (x23 x409) (ite (and x445 x1670 x298 (not x452) x351) (x227 x409) (ite (and x298 (not x351) x445 x1670) (x857 x409) (ite (and (not x1670) x445 x298) (x127 x409) (x552 x409)))))))
(assert (= (x1538 x1666) (ite (and x1647 (not x1236) x1205) (x768 x1666) (x1249 x1666))))
(assert (x1000 (- x311 x59)))
(assert (= (x127 x651) (ite (= x1503 x651) x1528 (x1563 x651))))
(assert (x1492 x1277))
(assert (x355 x1069))
(assert (x1492 x1319))
(assert (x111 x653 x1358))
(assert (x964 x85 x1440 x1534 x9))
(assert (x1492 x282))
(assert (x1492 x343))
(assert (x1492 x1779))
(assert (x1492 x637))
(assert (=> (<= x733 10000) (= (x1228 x733) (x804 x733))))
(assert (x1492 x994))
(assert (x1492 x777))
(assert (x1492 x1749))
(assert (= (ite (= x1666 x1229) x514 (x1735 x1666)) (x1793 x1666)))
(assert (= (x1760 (x804 x746)) x746))
(assert (x1410 x654 x165 x493 x59))
(assert (= (x804 599290589) (x1228 599290589)))
(assert (x1492 x187))
(assert (x1492 x272))
(assert (= (ite (and x1647 x1205 (not x1236)) (x768 x884) (x1249 x884)) (x1538 x884)))
(assert (= (ite (= x1029 x1306) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x1306)) (x954 x1306)))
(assert (= (x1760 (x804 x1622)) x1622))
(assert (x1492 x1176))
(assert (= (x857 x1349) (ite (= x1349 x135) x208 (x127 x1349))))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x210) x1512) (and (=> (not x1512) x856) (=> (and (= (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0) x596) (= 1 x1119) (not x1734) (= x1437 (> x1463 x990)) (= x665 x1463) (= x1198 274184521717934524641157099916833587240) (= 68 x192) (= x1379 274184521717934524641157099916833587240) (= x1219 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x109 x1463))) (= x931 x888) (not x819) (= x990 (x1169 x596)) (= (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0) x1375) (= (x1724 (- x990 x1650)) x75) (= x345 x888) (= x1650 x1463) (= x192 x211) (= x819 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x27) (and (= (<= x27 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x27)))) (> x295 0) (not (= 1889567281 x69)) (not x1219) (= x215 (+ x665 x121)) (= x121 x109) (= 32 x680) (<= x990 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x109 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x1463 x109) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= x69 2514000705)) (= x1650 x1430) x1512 (<= 0 x990) (= 2835717307 x69) (not x1437) (= (> x1650 x990) x1734) (not (= x69 826074471)) (= x250 x162) (<= x888 1461501637330902918203684832716283019655932542975) (not (> 826074471 x69)) (= (x347 x1352) x109) (= (x1724 (- x192 4)) x27) (= x1099 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 4 x192)) (= x1352 (x441 (x804 x888) (x1228 1) 0)) (>= x109 0) (= x295 (x1193 (x804 274184521717934524641157099916833587202)))) x325))) x1646))
(assert (x1000 x165))
(assert (= (x804 115792089210356248756420345215482394403581256910207104449633294546465451933695) (x1228 115792089210356248756420345215482394403581256910207104449633294546465451933695)))
(assert (x1000 (- x165 x311)))
(assert (x1492 x229))
(assert (x154 x282 x481 x697 x1115))
(assert (= (x233 x778) (ite (= x778 (x1228 0)) x442 (x1715 x778))))
(assert (= (ite (and x298 x445) (ite (and x298 x1558 x445) (x261 x1699) (x219 x1699)) (x219 x1699)) (x1287 x1699)))
(assert (= (x954 x1542) (ite (= x1029 x1542) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x1542))))
(assert (x1492 x1053))
(assert (x1000 x311))
(assert (= true x856))
(assert (x1492 x1661))
(assert (x1492 x197))
(assert (x1492 x1270))
(assert (x1492 x634))
(assert (x1771 x654 (- x165 x493)))
(assert (x1492 x575))
(assert (x355 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x259 274184521717934524641157099916833587240))
(assert (x1492 x966))
(assert (= 115792089237316195423570984636004990333889740523700931696805413995650331181055 (x1760 (x1228 115792089237316195423570984636004990333889740523700931696805413995650331181055))))
(assert (=> (>= 10000 x869) (= (x1228 x869) (x804 x869))))
(assert (= 0 (x221 x235)))
(assert (x111 x1614 x601))
(assert (=> (>= 10000 x56) (= (x1228 x56) (x804 x56))))
(assert (x111 x1208 x48))
(assert (x355 x461))
(assert (x1492 x1594))
(assert (x1492 x1037))
(assert (x1492 x1123))
(assert (x1492 x1099))
(assert (x1000 (- x228 x59)))
(assert (x1492 x218))
(assert (x1492 x1406))
(assert (= 0 (x221 x651)))
(assert (= (x221 x15) 0))
(assert (x355 x1221))
(assert (x1492 x1225))
(assert (x259 x1027))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1760 (x1228 57896044618658097711785492504343953926634992332820282019728792003956564819967))))
(assert (x1492 x700))
(assert (x1492 x931))
(assert (x1492 x1457))
(assert (x1000 x1416))
(assert (x1492 x255))
(assert (x1492 x1158))
(assert (x1492 x1074))
(assert (= (x639 x327) (ite (and x298 x445 (not x773)) (x1247 x327) (x189 x327))))
(assert (x1492 x243))
(assert (x1492 x440))
(assert (x1492 x654))
(assert (= (ite (= x135 x409) x208 (x127 x409)) (x857 x409)))
(assert (x1492 x705))
(assert (= (ite (and (not x1105) x298 x445 x1670 x452 x351) (x23 x1666) (ite (and (not x452) x351 x298 x1670 x445) (x227 x1666) (ite (and x445 x298 (not x351) x1670) (x857 x1666) (ite (and x445 x298 (not x1670)) (x127 x1666) (x552 x1666))))) (x1247 x1666)))
(assert (= (x1689 x1666) (ite (= x621 x1666) 0 (x855 x1666))))
(assert (x1708 x311 x228 x654 x165))
(assert (x355 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= (+ 2 (x1760 x684)) (x1760 (x1451 x684 2))))
(assert (x355 115792089237316195423570985007226406215939081747436879206741300988257197096960))
(assert (x1492 x1654))
(assert (x1436 x7 x171))
(assert (= true x265))
(assert (= (x1727 x884) (ite (= x330 x884) 274184521717934524641157099916833587240 (x809 x884))))
(assert (x1492 x1477))
(assert (=> (<= x6 10000) (= (x1228 x6) (x804 x6))))
(assert (= (x1228 826074471) (x804 826074471)))
(assert (x1492 x1220))
(assert (= (x1256 x1349) (ite (and x445 x298) (x836 x1349) (x1783 x1349))))
(assert (x1492 x1069))
(assert (x1492 x834))
(assert (x259 x1135))
(assert (x1492 x398))
(assert (x1492 x34))
(assert (x1492 x963))
(assert (= (ite (= x617 x510) 0 (x1360 x510)) (x1783 x510)))
(assert (x1492 x1476))
(assert (= (x1760 (x1228 274184521717934524641157099916833587240)) 274184521717934524641157099916833587240))
(assert (=> (>= 10000 x568) (= (x1228 x568) (x804 x568))))
(assert (x1771 x59 (- x493 x654)))
(assert (x1492 x826))
(assert (= (x1783 x1192) (ite (= x1192 x617) 0 (x1360 x1192))))
(assert (= (ite (= x1567 x535) x659 (x857 x1567)) (x227 x1567)))
(assert (x1000 (- x493 x165)))
(assert (= (ite (and x298 (not x773) x445) (x1247 x510) (x189 x510)) (x639 x510)))
(assert (x1492 x135))
(assert (x1492 x306))
(assert (=> (<= x586 10000) (= (x1228 x586) (x804 x586))))
(assert (x1492 x1533))
(assert (= (ite (= x794 x1192) 274184521717934524641157099916833587240 (x821 x1192)) (x1395 x1192)))
(assert (x695 x213))
(assert (x1492 x1005))
(assert (x1492 x523))
(assert (= (ite (and (not x773) x445 x298) (x1247 x1542) (x189 x1542)) (x639 x1542)))
(assert (= (ite (= x510 x972) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x159 x510)) (x1735 x510)))
(assert (x1492 x1730))
(assert (x1492 x201))
(assert (x1410 x59 x493 x311 x228))
(assert (x1492 x1208))
(assert (x1492 x1346))
(assert (= (x857 x651) (ite (= x651 x135) x208 (x127 x651))))
(assert (= (ite (and x445 (not x773) x298) (x1247 x1702) (x189 x1702)) (x639 x1702)))
(assert (= (x233 x1707) (ite (= x1707 (x1228 0)) x442 (x1715 x1707))))
(assert (=> (>= 10000 x1494) (= (x1228 x1494) (x804 x1494))))
(assert (x1492 x1691))
(assert (= (ite (= x710 x135) x208 (x127 x710)) (x857 x710)))
(assert (x1492 x1576))
(assert (x1492 x1140))
(assert (x259 x80))
(assert (x1492 x47))
(assert (x1410 x493 x59 x654 x165))
(assert (x1771 x654 (- x165 x311)))
(assert (= (x1228 109576784812748834340197573905731726730118698833493337707389013487240318287872) (x804 109576784812748834340197573905731726730118698833493337707389013487240318287872)))
(assert (x1492 x134))
(assert (x1492 x215))
(assert (x154 x1575 x429 x1556 x129))
(assert (= (ite (= x330 x1192) 274184521717934524641157099916833587240 (x809 x1192)) (x1727 x1192)))
(assert (= (x1372 x673) (ite (and x445 x298) (ite (and x445 x298 x1558) (x30 x673) (x1034 x673)) (x1034 x673))))
(assert (= (x1256 x1666) (ite (and x445 x298) (x836 x1666) (x1783 x1666))))
(assert (=> (>= 10000 x393) (= (x804 x393) (x1228 x393))))
(assert (x259 x6))
(assert (x111 x1560 x504))
(assert (= (x233 x155) (ite (= x155 (x1228 0)) x442 (x1715 x155))))
(assert (= (ite (= x327 x1029) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x327)) (x954 x327)))
(assert (x1492 x1231))
(assert (= (x646 x1702) (ite (= x1702 x1655) x1382 (x630 x1702))))
(assert (x1492 x1407))
(assert (= (ite (= x135 x1126) x208 (x127 x1126)) (x857 x1126)))
(assert (= 0 (x221 x327)))
(assert (=> (>= 10000 x888) (= (x1228 x888) (x804 x888))))
(assert (x1771 x228 (- x311 x59)))
(assert (x1492 x990))
(assert (= (x221 x508) 0))
(assert (= (x1044 (x406 x1382 x311 x228 x1255 x733 x95 x332 x1088 x994)) 0))
(assert (= (ite (= x985 x202) x1747 (x244 x202)) (x268 x202)))
(assert (= (ite (= x884 x617) 0 (x1360 x884)) (x1783 x884)))
(assert (= (ite (= x1030 x884) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x884)) (x1249 x884)))
(assert (x111 x1620 x120))
(assert (= (x1738 x1666) (ite (and x1313 x172) (x350 x1666) (ite (and x900 x1781) (x119 x1666) (x125 x1666)))))
(assert (x1492 x1326))
(assert (x1492 x56))
(assert (x1771 x493 (- x59 x228)))
(assert (= (ite (= x411 x1349) x402 (x186 x1349)) (x46 x1349)))
(assert (= (x1247 x1475) (ite (and x445 x351 x298 (not x1105) x452 x1670) (x23 x1475) (ite (and x1670 x445 (not x452) x298 x351) (x227 x1475) (ite (and x298 x445 x1670 (not x351)) (x857 x1475) (ite (and x298 x445 (not x1670)) (x127 x1475) (x552 x1475)))))))
(assert (x1492 x1309))
(assert (x1492 x237))
(assert (x1492 x1136))
(assert (= x547 (or (and x1313 x172) (and x1781 x900) (and x1429 x1640))))
(assert (= x72 (=> (and (> 1461501637330902918203684832716283019655932542976 x1716) (= x957 (x199 (x804 x1716))) (= x1335 x294) (= (< x957 x388) x1236) (or x1423 x331) (= x331 (< 0 x1716)) (= x1423 (= x1716 0))) (and (=> (and (= false x279) x1236 (= x117 true)) x1584) (=> (and (= (x336 1461501637330902918203684832716283019655932542975 x1031) x1720) (= x20 x1177) (= (x371 x1349) x63) (= x1008 (x371 x828)) (= (x859 (+ x1559 64)) x1349) (= true (<= x738 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (>= x1770 0) (= x82 x733) (= x1442 (x760 x678)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x764) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x738)) (< x764 x738)) (and (<= x738 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x764))) (= (x336 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1442) x1271) (= x638 (x371 x476)) (= (x336 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1597) x774) (= (x859 (+ x743 64)) x134) (= x678 (x1451 x741 2)) (= x1757 (x336 x1023 x1638)) (= x1763 (x1724 (- x411 x736))) (or (and (> 4294967296 x1186) (= x553 1) x1205) (and (= x1007 x553) (not x1205))) (= x1100 (x859 (+ x2 x1177))) (= x1624 (x336 1461501637330902918203684832716283019655932542975 x1220)) (= (x859 (+ x55 1)) x442) (= x1382 x1241) (= x6 x520) (= (x859 (+ x1406 40)) x1184) (= (x371 x1346) x1158) (= x1416 x1532) (= (x1451 x116 2) x741) (= (x336 18446744073709551615 x440) x1611) (= x1070 (x859 (+ 64 x721))) (= x654 (x1644 (x872 x493 x59))) (> x738 291) (<= 0 x239) (= (x859 (+ x1024 64)) x1192) (= x966 (x336 26959946667150639794667015087019630673637144422540572481103610249215 x944)) (= x924 (x441 (x804 x6) (x1228 3) 0)) (= x590 x1171) (= x996 (or x1522 x956)) (>= 1461501637330902918203684832716283019655932542975 x1770) (= (x859 (+ x1329 64)) x354) (= (x859 (+ x939 480)) x736) (not (> x1541 x738)) (= x1176 x214) (= (x859 (+ 64 x537)) x476) (= x752 x637) (> x600 0) (= x332 (x557 x637 96)) (not x1236) (= x867 x826) (= x1597 (x479 x799)) (= (x441 (x804 x450) (x1228 2) 0) x116) (= (x1511 (x1228 1)) x1123) (= x1579 (x336 115792089210356248756420345215482394403581256910207104449633294546465451933695 x1759)) (= 0 x1745) (= x1329 (x859 (+ 40 x623))) (= x1686 x1030) (not (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x55)) (= (x1511 x1486) x904) (= x228 x59) (< x1093 3155786881) (= (x371 x272) x1220) (= x743 (x859 (+ x1559 384))) (= (x859 (+ 64 x736)) x721) (= x1446 (x336 18446744073709551615 x1535)) (= (x859 (+ x1576 64)) x272) (= (x1724 (- x405 32)) x402) (= (x371 x537) x1361) (= (x336 255 x982) x165) (= (x5 x1691) x528) (= x1238 (x1644 (* 26959946667150639794667015087019630673637144422540572481103610249216 x230))) (= x590 (x336 1461501637330902918203684832716283019655932542975 x1240)) (= x944 (x1215 x799)) (= x1716 x239) (= (x406 x1382 x311 x228 x1255 x733 x95 x332 x1088 x994) x989) (= x225 (x859 (+ 36 x1603))) (= (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904 x934) x641) (= (x336 18446744073709551615 x1008) x209) (= x1159 (x1724 (- x738 4))) (= x1093 2335792882) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x872 x654 x165)) (>= x692 0) (= x1665 (x371 x932)) (= (x557 x1416 96) x95) (= (x859 (+ 60 x411)) x995) (= x1691 (x859 (+ x1603 4))) (= x411 (x859 (+ 52 x1184))) (= x1326 (x1644 (* x209 1461501637330902918203684832716283019655932542976))) (= x759 true) (= x1496 (x859 (+ x942 x774))) (= (x859 (+ 52 x343)) x623) (= x2 (x336 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1648)) (= (x441 (x804 x637) (x1228 4) 0) x1486) (= x1346 (x859 (+ x932 64))) (= (x859 (+ x1097 60)) x591) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1446 x214)) (= (x1332 115792089237316195423570985008687907853269984665640564039457584007913129639935 x493) x1796) (= x262 (x1451 x678 2)) (= (x1332 x1123 5192296858534827628530496329220096) x982) (= (x859 (+ (x1644 (x32 (x804 274184521717934524641157099916833587240))) x388)) x1778) (= x498 (x46 128)) (= (x336 18446744073709551615 x1361) x1501) (= x1107 x161) (= x818 (x336 255 x1669)) (= (x859 (+ 35 x1603)) x764) (= x213 (x872 x654 x165)) (= x1406 (x859 (+ x1070 64))) (= x1107 (x872 x311 x228)) (= x1559 x503) (= x1255 x176) (= x728 (not x1642)) (= x784 0) (= x197 (x371 x1192)) (= x6 x1025) (= (x336 4294967295 x1784) x1601) (= x436 (x859 (+ x641 63))) (= x1382 x620) (= x311 x1297) (= (> x1007 0) x1205) (not (> x528 18446744073709551615)) (= x450 (x1203 (x1228 0))) (= x281 x116) (= (x371 x1024) x580) (= x1181 (x822 11430537079145650693387304458692941425836787954612963690241153482819318579200 x989)) (= x1031 (x371 x1576)) (= (x371 x503) x1594) (= x537 (x859 (+ x828 64))) (= (= x498 65) x1012) (= (x859 (+ x528 x225)) x1541) (or (and (or (and (= (x8 x1194 255) x672) (or (and (or (and (= x731 x517) (= (x1724 (- x731 32)) x102) (= (x1776 x635 x841 x1147 x194) x806) (>= 1461501637330902918203684832716283019655932542975 x806) (= x1697 (x859 (+ 64 x591))) (= x635 (x1163 x731)) (not x1548) (or (and (= x1363 x731) (= x1630 1) x128 (= x742 0)) (and (= x731 x1363) (= x1630 0) (not x128) (= x742 x1173))) (= (x1577 x47) x1173) (= (x859 (+ x995 64)) x731) (= (x859 (+ 64 x1697)) x106) (= 128 x656) (= (= x889 0) x128) (= (x859 (+ x731 64)) x583) (= x47 (x1724 (- x731 32))) (= x1147 (x1163 (x859 (+ 64 x731)))) (= (x1163 (x859 (+ 96 x731))) x194) (= (x336 255 x437) x1730) (= x889 (x336 1461501637330902918203684832716283019655932542975 x1173)) (= x841 (x1163 (x859 (+ 32 x731))))) (and (= x742 0) (= x1630 4) x1548 (= x1363 x591))) (not x1545) (= x1039 (= 27 x389)) (= x1548 (ite (not x1039) (not (= 28 (x336 255 x437))) (not x1039))) (= x389 (x336 255 x437))) (and (= 0 x742) (= x1630 3) (= x1363 x591) x1545)) (= x1240 x742) (= x437 (x859 (+ 27 x672))) (= x1194 (x46 192)) (= x1363 x604) x1344 (not (> x672 115792089237316195423570985008687907853269984665640564039457584007913129639908)) (= x1545 (> x1447 57896044618658097711785492504343953926418782139537452191302581570759080747168)) (= x765 (x46 160)) (= x1630 x784) (= x1447 (x336 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1194))) (and (not x1344) (= x591 x604) (= x784 2) (= x1240 0))) (= x1344 (= x777 64)) (not x1012) (= x777 (x46 128))) (and (= x786 (x336 255 x461)) (= x140 (x46 192)) (= (x46 160) x1615) (= x604 x862) (= (x46 224) x1391) (or (and (= x1168 0) (= 3 x1521) (= x591 x862) x467) (and (or (and (= x1521 4) x313 (= x1168 0) (= x591 x862)) (and (= x1060 (x1150 x508)) (= x1226 x1657) (not x313) (= (x1210 (x859 (+ 32 x1657))) x1183) (= x878 (x859 (+ x1250 64))) (= x813 (x859 (+ 64 x1657))) (= x1438 (x336 1461501637330902918203684832716283019655932542975 x1060)) (= x1657 (x859 (+ 64 x995))) (= x1799 (x1776 x1339 x1183 x484 x231)) (= (x1724 (- x1657 32)) x508) (= (= x1438 0) x1780) (= x344 128) (= x484 (x1210 (x859 (+ 64 x1657)))) (= (x1210 x1657) x1339) (= x1455 (x1724 (- x1657 32))) (<= x1799 1461501637330902918203684832716283019655932542975) (or (and (= x1168 x1060) (= x862 x1657) (= 0 x1521) (not x1780)) (and (= 1 x1521) x1780 (= 0 x1168) (= x1657 x862))) (= (x859 (+ 64 x591)) x1250) (= (x1210 (x859 (+ 96 x1657))) x231))) (not x467) (= x313 (ite (not x1608) (not (= 28 x786)) (not x1608))) (= x1608 (= 27 x786)))) (= x467 (< 57896044618658097711785492504343953926418782139537452191302581570759080747168 x140)) (= x1521 x784) x1012 (= x1168 x1240) (= x461 (x8 x1391 248)))) (= x74 (x859 (+ x1271 x307))) (= 0 x309) (= x388 x908) (= 0 x818) (= (- (x199 (x804 x1716)) x388) x1434) (= x1522 (> x1559 18446744073709551615)) (= x1171 x6) (= (x441 (x804 x733) x924 0) x1490) (not (= 2311529814 x1093)) (= x934 (x859 (+ x528 31))) (= x1088 (x557 x6 96)) (= 0 x1757) (= x205 274184521717934524641157099916833587240) (= x976 (x336 255 x904)) (= (x859 (+ x299 x1326)) x1749) (= x1759 (x1387 x799)) (= (x336 4294967295 x1665) x230) (= x939 (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904 x436)) (= x124 (x859 (+ x512 (x1644 (ite x759 1 0))))) (= x1090 (x336 1461501637330902918203684832716283019655932542975 x1416)) (= (x859 (+ 160 x528)) x1148) (= x290 (x336 18446744073709551615 x1176)) (= (x1511 (x1228 106)) x1669) (= (x1451 x684 2) x973) x17 (= x1559 (x859 (+ 128 x939))) (= (x1511 x915) x422) (= x570 (x1193 (x804 x1090))) (not (or (> x1159 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1159 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1159 288)))) (= x1082 (x320 x678)) (= (x859 (+ 64 x272)) x932) (= x1686 (x859 (+ 4 x604))) (not (> 2311529814 x1093)) (= (ite (not x256) 1 0) x1023) (= x886 (x441 (x804 x6) (x1228 3) 0)) (= x1638 (ite (> x228 x1796) 1 0)) (not (> 4 x738)) (>= 1461501637330902918203684832716283019655932542975 x6) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x388 (x32 (x804 274184521717934524641157099916833587240)))) x17) (= (x336 255 x422) x309) (not (< 18446744073709551615 x1709)) (= x1642 (= 0 x1158)) (= x799 (x1451 x973 2)) (= x828 (x859 (+ x1192 64))) (> x976 0) (= x1024 (x859 (+ x939 160))) (= (x859 (+ x342 x1579)) x979) (= x55 (x1715 (x1228 0))) (= (x1332 x644 18446744073709551616) x1784) (= x1709 x1603) (= (x394 x262) x1648) (= (x859 (+ 64 x1329)) x1097) (not (= 0 x570)) (= x299 (x336 115792089210356248756420345215482394403581256910207104449633294546465451933695 x1082)) (= (x1511 (x1228 1)) x644) (= x1373 x1416) (= (x1644 (* 1461501637330902918203684832716283019655932542976 x1501)) x342) (= x1576 (x859 (+ 64 x1349))) (= x256 (= 0 x311)) (= x1370 x1446) (= (x336 115792089237316195423570984636004990333889740523700931696805413995650331181055 x207) x1499) (= x1535 (x1511 (x1228 1))) (= x1745 (ite x996 1 0)) (<= x637 1461501637330902918203684832716283019655932542975) (= x405 (x1724 (- x591 x411))) (<= x1416 1461501637330902918203684832716283019655932542975) (= x20 (x336 1461501637330902918203684832716283019655932542975 x638)) (= x343 (x859 (+ 64 x134))) (= x341 x637) (= (< x1559 128) x956) (<= x692 1461501637330902918203684832716283019655932542975) (= (x1724 (- x1763 32)) x540) (= x1720 x307) (< x1093 2650021976) (= x214 x1769) (= x942 x1624) (= (x1511 x1490) x1583) (= x555 (x859 (+ x966 x1238))) (= (x859 (+ (x1644 (ite x728 1461501637330902918203684832716283019655932542976 0)) x1499)) x333) (< (x872 x311 x228) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1193 (x804 274184521717934524641157099916833587240)) x600) (= x311 x493) (= (x1790 x262) x207) (= 128 x1) (= x440 (+ x1769 x1370)) (= (x1451 x116 1) x684) (<= x239 1461501637330902918203684832716283019655932542975) (= x1255 x1231) (= x512 (x336 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1583)) (= x1770 x867) (not (< x1231 x214)) (= (x1332 x213 100) x34) (= x915 (x441 (x804 x733) x886 0))) x1404)))))
(assert (x1492 x588))
(assert (x1492 x1694))
(assert (x1492 x214))
(assert (= (x1706 x884) (ite (and x1664 x1261) (x558 x884) (x1402 x884))))
(assert (= (x804 18446744073709551616) (x1228 18446744073709551616)))
(assert (x1492 x183))
(assert (= (x1191 x1702) (ite (and (not x928) x1337 x1089 x383 x24 x1218) (x158 x1702) (ite (and (not x1337) x24 x1218 x383 x1089) (x1209 x1702) (ite (and x1218 x1089 (not x24) x383) (x1711 x1702) (ite (and (not x1218) x383 x1089) (x954 x1702) (x923 x1702)))))))
(assert (x1000 (- x493 x311)))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x506) x658) (and (=> (and (= 36 x1050) (= (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0) x321) (= (x1724 (- x1050 4)) x1270) (>= x607 0) (not (= 826074471 x464)) (= x204 274184521717934524641157099916833587240) (= x849 32) (<= x607 115792089237316195423570985008687907853269984665640564039457584007913129639935) x658 (= x1142 1) (= (x584 x321) x607) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1270) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1270) true) (< x1270 32))) x677) (< 0 x1156) (= x1050 x903) (not x677) (not (> 4 x1050)) (not (> 826074471 x464)) (= x293 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (x1193 (x804 274184521717934524641157099916833587202)) x1156) (= 1889567281 x464)) x1394) (=> (not x658) x76))) x1299))
(assert (= (ite (and (not x1526) x1089 x383) (x1191 x710) (x1523 x710)) (x350 x710)))
(assert (x1492 x411))
(assert (= (ite (= x1029 x1666) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x1666)) (x954 x1666)))
(assert (x1492 x1551))
(assert (= (ite (and x172 x1313) (x350 x710) (ite (and x1781 x900) (x119 x710) (x125 x710))) (x1738 x710)))
(assert (x355 452312848583266388373324160190187140051835877600158453279131187530910662655))
(assert (=> (>= 10000 x455) (= (x804 x455) (x1228 x455))))
(assert (x355 x1614))
(assert (x1492 x162))
(assert (= (ite (= x647 (x1228 0)) x442 (x1715 x647)) (x233 x647)))
(assert (x1492 x1030))
(assert (x1492 x345))
(assert (x1492 x1366))
(assert (= (x1711 x1694) (ite (= x1589 x1694) x666 (x954 x1694))))
(assert (= (x46 x828) (ite (= x411 x828) x402 (x186 x828))))
(assert (= (x127 x884) (ite (= x1503 x884) x1528 (x1563 x884))))
(assert (= (and (not x1001) x182) x1164))
(assert (x1492 x717))
(assert (x1492 x944))
(assert (= (x1287 x1352) (ite (and x298 x445) (ite (and x1558 x298 x445) (x261 x1352) (x219 x1352)) (x219 x1352))))
(assert (x154 x492 x1374 x1474 x1301))
(assert (x1492 x1613))
(assert (= (x857 x1694) (ite (= x1694 x135) x208 (x127 x1694))))
(assert (x1492 x1740))
(assert (x355 x638))
(assert (x355 x1583))
(assert (= (ite (= x1589 x1306) x666 (x954 x1306)) (x1711 x1306)))
(assert (x1492 x1058))
(assert (x1492 x1528))
(assert (x1492 x126))
(assert (= (ite (= x1557 x1655) x1382 (x630 x1557)) (x646 x1557)))
(assert (x1771 x311 (- x228 x654)))
(assert (= (x1247 x1192) (ite (and x452 x298 x1670 x351 x445 (not x1105)) (x23 x1192) (ite (and x351 x1670 x445 x298 (not x452)) (x227 x1192) (ite (and x298 x445 x1670 (not x351)) (x857 x1192) (ite (and x445 x298 (not x1670)) (x127 x1192) (x552 x1192)))))))
(assert (x1492 x1134))
(assert (x1492 x1221))
(assert (= (x1760 (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639680)) 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x1492 x1339))
(assert (x1492 x918))
(assert (= (x227 x1126) (ite (= x1126 x535) x659 (x857 x1126))))
(assert (x1492 x64))
(assert (= (ite (= x1694 x411) x402 (x186 x1694)) (x46 x1694)))
(assert (x1492 x1043))
(assert (= (ite (= x510 x411) x402 (x186 x510)) (x46 x510)))
(assert (x1492 x1126))
(assert (x1492 x737))
(assert (= (x1689 x1306) (ite (= x621 x1306) 0 (x855 x1306))))
(assert (= (ite (= x621 x1557) 0 (x855 x1557)) (x1689 x1557)))
(assert (=> (<= x662 10000) (= (x1228 x662) (x804 x662))))
(assert (= (ite (and x1670 x452 x298 (not x1105) x445 x351) (x23 x651) (ite (and x298 (not x452) x351 x1670 x445) (x227 x651) (ite (and x1670 x445 (not x351) x298) (x857 x651) (ite (and x445 (not x1670) x298) (x127 x651) (x552 x651))))) (x1247 x651)))
(assert (= (ite (and (not x1236) x1647 x1205) (x768 x235) (x1249 x235)) (x1538 x235)))
(assert (x1771 x59 (- x493 x165)))
(assert (= (ite (and x445 (not x773) x298) (x1247 x1475) (x189 x1475)) (x639 x1475)))
(assert (x1492 x179))
(assert (x554 x316 x1453))
(assert (x1492 x1657))
(assert (= (ite (and (not x1105) x445 x452 x351 x1670 x298) (x23 x1567) (ite (and x1670 x445 x351 (not x452) x298) (x227 x1567) (ite (and x298 x445 x1670 (not x351)) (x857 x1567) (ite (and (not x1670) x445 x298) (x127 x1567) (x552 x1567))))) (x1247 x1567)))
(assert (x1410 x165 x654 x311 x228))
(assert (x1492 x600))
(assert (x1771 x654 x165))
(assert (x1498 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1492 x903))
(assert (x355 x443))
(assert (x1492 x1305))
(assert (x1498 (* x1416 79228162514264337593543950336)))
(assert (= (x46 x15) (ite (= x411 x15) x402 (x186 x15))))
(assert (= (ite (and x1089 (not x1526) x383) (x1191 x651) (x1523 x651)) (x350 x651)))
(assert (=> (<= x1027 10000) (= (x804 x1027) (x1228 x1027))))
(assert (= (x804 5192296858534827628530496329220096) (x1228 5192296858534827628530496329220096)))
(assert (x1771 x228 (- x311 x654)))
(assert (x1771 x311 x228))
(assert (x1492 x1621))
(assert (x1492 x755))
(assert (x1492 x551))
(assert (=> (>= 10000 x1740) (= (x804 x1740) (x1228 x1740))))
(assert (= (x1760 (x804 x506)) x506))
(assert (x1708 x165 x654 x228 x311))
(assert (= (x1256 x1306) (ite (and x445 x298) (x836 x1306) (x1783 x1306))))
(assert (= (x1689 x1475) (ite (= x1475 x621) 0 (x855 x1475))))
(assert (= x1478 (x1760 (x804 x1478))))
(assert (= (ite (and (not x1526) x1089 x383) (x1191 x884) (x1523 x884)) (x350 x884)))
(assert (= (ite (= x1475 x535) x659 (x857 x1475)) (x227 x1475)))
(assert (x259 x450))
(assert (x1492 x742))
(assert (x1492 x1349))
(assert (x1000 (- x654 x493)))
(assert (x1492 x566))
(assert (x1771 x165 (- x654 x59)))
(assert (= (ite (= x1192 x1589) x666 (x954 x1192)) (x1711 x1192)))
(assert (x1492 x301))
(assert (x1355 x1361 x270))
(assert (x259 x888))
(assert (= (ite (= x1327 (x1228 0)) x442 (x1715 x1327)) (x233 x1327)))
(assert (x1038 x1784 x1419))
(assert (x1492 x811))
(assert (x1492 x29))
(assert (x355 x1262))
(assert (= (ite (= x411 x1666) x402 (x186 x1666)) (x46 x1666)))
(assert (= (ite (= x135 x1213) x208 (x127 x1213)) (x857 x1213)))
(assert (x1492 x837))
(assert (x1000 (- x311 x493)))
(assert (= (ite (= x985 (x1228 0)) x442 (x1715 x985)) (x233 x985)))
(assert (x1492 x1468))
(assert (= (x227 x15) (ite (= x535 x15) x659 (x857 x15))))
(assert (= 0 (x221 224)))
(assert (x355 x644))
(assert (x1492 x1184))
(assert (x1492 x1186))
(assert (x1492 x531))
(assert (= (x1760 (x804 x393)) x393))
(assert (= (x268 x970) (ite (= x985 x970) x1747 (x244 x970))))
(assert (= (ite (= x1029 x884) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x884)) (x954 x884)))
(assert (= (x646 x1477) (ite (= x1477 x1655) x1382 (x630 x1477))))
(assert (= (ite (= x1702 x1589) x666 (x954 x1702)) (x1711 x1702)))
(assert (= (x804 1858285468) (x1228 1858285468)))
(assert (= (x227 x1192) (ite (= x535 x1192) x659 (x857 x1192))))
(assert (x1492 x91))
(assert (x1492 x1207))
(assert (x1492 x738))
(assert (x1492 x1330))
(assert (= x370 (=> (and (= x330 x148) (= x1588 (x1193 (x804 x586))) (= x1507 274184521717934524641157099916833587240) (= (x859 (+ x523 4)) x148) (not (= x1588 0)) (= x1322 (x859 (+ x523 36))) (= x586 (x336 1461501637330902918203684832716283019655932542975 x637)) (= (= x586 274184521717934524641157099916833587240) x1466) (= x126 (x1724 (- x1322 x523)))) (and (=> (and (= x126 x1458) (not (> 1166402363 x1433)) (= x1458 36) (= (x1724 (- x1458 4)) x1425) x1466 (not x284) (< 0 x627) (= x1433 1889567281) (= x269 32) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x183) (not (< x1433 1722255204)) (= 274184521717934524641157099916833587240 x1555) (not (= x1433 1858285468)) (= x627 (x1193 (x804 274184521717934524641157099916833587240))) (not (= 1722255204 x1433)) (= x451 (x268 x1348)) (= x1649 1) (not (= 1845821197 x1433)) (= x284 (or (> x1425 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1425)) (> 32 x1425)))) (= x1348 (x441 (x804 274184521717934524641157099916833587240) (x1228 209) 0)) (> 2311529814 x1433) (not (< x1458 4))) x1083) (=> (not x1466) x1190)))))
(assert (x1492 x344))
(assert (= (x1760 (x1228 2835717307)) 2835717307))
(assert (= (ite (= (x1228 0) x1768) x442 (x1715 x1768)) (x233 x1768)))
(assert (= (ite (= x510 x1655) x1382 (x630 x510)) (x646 x510)))
(assert (x1492 x1778))
(assert (= (ite (= x411 x1024) x402 (x186 x1024)) (x46 x1024)))
(assert (x1771 x493 (- x59 x165)))
(assert (x1492 x1250))
(assert (= (ite (= x1666 x1655) x1382 (x630 x1666)) (x646 x1666)))
(assert (x1462 x1416 79228162514264337593543950336))
(assert (= (x804 157198259) (x1228 157198259)))
(assert (x1492 x250))
(assert (= (x1228 3155786881) (x804 3155786881)))
(assert (= (x1760 (x1451 x116 2)) (+ 2 (x1760 x116))))
(assert (x1492 x1583))
(assert (= (ite (= x411 x508) x402 (x186 x508)) (x46 x508)))
(assert (= (x233 x349) (ite (= x349 (x1228 0)) x442 (x1715 x349))))
(assert (= (ite (= x1503 x327) x1528 (x1563 x327)) (x127 x327)))
(assert (x1492 x1713))
(assert (= (x1760 (x804 x733)) x733))
(assert (= (ite (= (x1228 0) x291) x442 (x1715 x291)) (x233 x291)))
(assert (= 0 (x221 x1475)))
(assert (= (ite (= x1306 x1202) x1174 (x227 x1306)) (x23 x1306)))
(assert (x1492 x934))
(assert (x1492 x389))
(assert (= x1033 (or (and x143 (not x469)) x458)))
(assert (= (ite (and x298 x445) (ite (and x1558 x298 x445) (x30 x1774) (x1034 x1774)) (x1034 x1774)) (x1372 x1774)))
(assert (x1492 x870))
(assert (x1492 x1442))
(assert (x1492 x1280))
(assert (x1492 x1539))
(assert (x355 x944))
(assert (x1492 x1082))
(assert (x1492 x1710))
(assert (x1492 x774))
(assert (x1000 (- x165 x228)))
(assert (= 2311529814 (x1760 (x1228 2311529814))))
(assert (x1492 x1416))
(assert (x1000 x228))
(assert (= 5192296858534827628530496329220096 (x1760 (x1228 5192296858534827628530496329220096))))
(assert (= (x1760 (x1228 11430537079145650693387304458692941425836787954612963690241153482819318579200)) 11430537079145650693387304458692941425836787954612963690241153482819318579200))
(assert (x1492 x388))
(assert (= (ite (and x1670 x452 x445 x351 x298 (not x1105)) (x23 x1306) (ite (and x298 x1670 (not x452) x445 x351) (x227 x1306) (ite (and x445 x298 x1670 (not x351)) (x857 x1306) (ite (and x298 (not x1670) x445) (x127 x1306) (x552 x1306))))) (x1247 x1306)))
(assert (x1492 x1194))
(assert (= 0 (x221 (x859 (+ 64 x1657)))))
(assert (= (ite (and x1261 x1664) (x558 x1192) (x1402 x1192)) (x1706 x1192)))
(assert (= (ite (= x1567 x1029) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x1567)) (x954 x1567)))
(assert (x1492 x1109))
(assert (= (x804 1461501637330902918203684832716283019655932542975) (x1228 1461501637330902918203684832716283019655932542975)))
(assert (= (ite (= x621 x1694) 0 (x855 x1694)) (x1689 x1694)))
(assert (= (x127 x43) (ite (= x1503 x43) x1528 (x1563 x43))))
(assert (x964 x1131 x632 x412 x41))
(assert (x1492 x1398))
(assert (x1492 x472))
(assert (x1492 x972))
(assert (x1492 x1159))
(assert (x1492 x503))
(assert (= (ite (= x1312 x884) x660 (x1711 x884)) (x1209 x884)))
(assert (= (x1793 x651) (ite (= x1229 x651) x514 (x1735 x651))))
(assert (= (x1783 x1109) (ite (= x1109 x617) 0 (x1360 x1109))))
(assert (= (x46 (x859 (+ 96 x731))) (ite (= (x859 (+ 96 x731)) x411) x402 (x186 (x859 (+ 96 x731))))))
(assert (x1492 x1199))
(assert (= (x26 (x804 274184521717934524641157099916833587240)) (ite x682 (ite x547 (x87 (x804 274184521717934524641157099916833587240)) (x991 (x804 274184521717934524641157099916833587240))) (x1276 (x804 274184521717934524641157099916833587240)))))
(assert (x718 x1194 x374))
(assert (x1492 x794))
(assert (x1492 x1447))
(assert (= (and (not x1465) x1401) x649))
(assert (x1492 x1))
(assert (x1708 x493 x59 x165 x654))
(assert (= (ite (and x298 x445) (ite (and x445 x298 x1558) (x496 (x804 x210)) (x1467 (x804 x210))) (x1467 (x804 x210))) (x991 (x804 x210))))
(assert (= (ite (= x1030 x651) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x651)) (x1249 x651)))
(assert (x1492 x749))
(assert (x1492 x1181))
(assert (x1492 x252))
(assert (= (x23 x1666) (ite (= x1666 x1202) x1174 (x227 x1666))))
(assert (= 1722255204 (x1760 (x1228 1722255204))))
(assert (x1492 x1217))
(assert (= (x639 x884) (ite (and x445 x298 (not x773)) (x1247 x884) (x189 x884))))
(assert (= (x804 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x1228 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x1492 x1388))
(assert (= 0 (x221 x731)))
(assert (= (x1209 x1666) (ite (= x1666 x1312) x660 (x1711 x1666))))
(assert (x1000 (- x59 x165)))
(assert (x1492 x464))
(assert (x1492 x1464))
(assert (= (x8 x1391 248) (x1332 x1391 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x1492 x393))
(assert (x1492 x1019))
(assert (x1492 x1361))
(assert (x1492 x1114))
(assert (= (x350 x510) (ite (and (not x1526) x1089 x383) (x1191 x510) (x1523 x510))))
(assert (= (ite (and x572 x1488 x469 x1570 x143 (not x166)) (x1623 x651) (ite (and (not x1570) x1488 x143 x572 x469) (x1754 x651) (ite (and (not x572) x1488 x469 x143) (x1793 x651) (ite (and (not x1488) x469 x143) (x1735 x651) (x955 x651))))) (x1285 x651)))
(assert (x1708 x311 x228 x493 x59))
(assert (x1492 x1565))
(assert (= (x1287 x167) (ite (and x298 x445) (ite (and x298 x1558 x445) (x261 x167) (x219 x167)) (x219 x167))))
(assert (x1492 x397))
(assert (x1492 x549))
(assert (x1492 x1605))
(assert (x1492 x1798))
(assert (x1492 x1173))
(assert (= (ite (= x409 x1202) x1174 (x227 x409)) (x23 x409)))
(assert (=> (>= 10000 x1755) (= (x1228 x1755) (x804 x1755))))
(assert (= (x233 x1227) (ite (= (x1228 0) x1227) x442 (x1715 x1227))))
(assert (= x76 true))
(assert (= (x1760 (x1228 18446744073709551616)) 18446744073709551616))
(assert (x1492 x356))
(assert (x355 x1416))
(assert (x355 x437))
(assert (=> (>= 10000 x1380) (= (x1228 x1380) (x804 x1380))))
(assert (x1492 x622))
(assert (= (x1760 (x1228 826074471)) 826074471))
(assert (x1492 x1023))
(assert (x1492 x442))
(assert (= (x646 x1542) (ite (= x1542 x1655) x1382 (x630 x1542))))
(assert (= (ite (= x1503 x1666) x1528 (x1563 x1666)) (x127 x1666)))
(assert (x695 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (= (x221 x1702) 0))
(assert (x1492 x247))
(assert (= x6 (x1760 (x804 x6))))
(assert (x1492 x1478))
(assert (x1492 x235))
(assert (x1492 x1787))
(assert (x1492 x854))
(assert (= (+ 2 (x1760 x973)) (x1760 (x1451 x973 2))))
(assert (x1000 1461501637330902918203684832716283019655932542976))
(assert (= (x158 x1694) (ite (= x1694 x1483) x251 (x1209 x1694))))
(assert (x1492 x692))
(assert (x1492 x1269))
(assert (x355 x207))
(assert (x1492 x1483))
(assert (= (x1760 (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639934)) 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= (ite (= x1126 x411) x402 (x186 x1126)) (x46 x1126)))
(assert (x1492 x305))
(assert (x1492 x225))
(assert (x1492 x1527))
(assert (x111 x1220 x1286))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x586) x1152) (and (=> (and (<= 0 x919) (= x919 (x1287 x167)) (= x805 (x1724 (- x68 4))) (= (x441 (x804 274184521717934524641157099916833587240) (x1228 1) 0) x167) (= x1649 1) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1305) (< 0 x1698) (= 274184521717934524641157099916833587240 x576) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x919) (= x1199 1889567281) (= x68 36) (not (= x1199 826074471)) (not x480) (= (x1193 (x804 274184521717934524641157099916833587202)) x1698) (not (> 4 x68)) (not (> 826074471 x1199)) (= x269 32) x1152 (= x480 (or (and (< x805 32) (= (<= x805 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x805 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x126 x68)) x1083) (=> (not x1152) x265))) x273))
(assert (= (x954 x710) (ite (= x710 x1029) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1581 x710))))
(assert (x1492 x860))
(assert (x1492 x559))
(assert (= (x639 x1192) (ite (and (not x773) x445 x298) (x1247 x1192) (x189 x1192))))
(assert (= (ite (= x651 x411) x402 (x186 x651)) (x46 x651)))
(assert (x1492 x1100))
(assert (x1492 x1655))
(assert (x1492 x205))
(assert (x259 274184521717934524641157099916833587202))
(assert (x1492 x62))
(assert (x1492 x1499))
(assert (= (ite (= x621 x710) 0 (x855 x710)) (x1689 x710)))
(assert (x1492 x82))
(assert (x355 x934))
(assert (= (x857 x327) (ite (= x135 x327) x208 (x127 x327))))
(assert (x1492 x1025))
(assert (= (x221 192) 0))
(assert (= (ite (and x1313 x172) (x350 x1694) (ite (and x1781 x900) (x119 x1694) (x125 x1694))) (x1738 x1694)))
(assert (x1492 x1174))
(assert (x1492 x1154))
(assert (x1492 x884))
(assert (= (x127 x1702) (ite (= x1702 x1503) x1528 (x1563 x1702))))
(assert (x259 x1716))
(assert (= (x1760 (x1228 34167655436598589418538772692774877509225721125679165766806516059628562808832)) 34167655436598589418538772692774877509225721125679165766806516059628562808832))
(assert (x1492 x1315))
(assert (x1492 x112))
(assert (x1492 x1300))
(assert (x1492 x617))
(assert (x1492 x114))
(assert (x369 x1391 x1482))
(assert (x1492 x517))
(assert (= (ite (= x1202 x327) x1174 (x227 x327)) (x23 x327)))
(assert (= (x23 x1542) (ite (= x1542 x1202) x1174 (x227 x1542))))
(assert (x554 x1484 x880))
(assert (x355 x1759))
(assert (x695 100))
(assert (= (x233 x970) (ite (= x970 (x1228 0)) x442 (x1715 x970))))
(assert (x1492 x1272))
(assert (= (x646 x1349) (ite (= x1349 x1655) x1382 (x630 x1349))))
(assert (= 4294967295 (x1760 (x1228 4294967295))))
(assert (x695 x644))
(assert (x1492 x828))
(assert (x1492 x642))
(assert (x1492 x621))
(assert (= (and x1313 (not x172)) x1781))
(assert (= (ite (= x1483 x1213) x251 (x1209 x1213)) (x158 x1213)))
(assert (x1492 x332))
(assert (x1492 x1262))
(assert (x1000 x637))
(assert (= (x23 x1702) (ite (= x1202 x1702) x1174 (x227 x1702))))
(assert (= (x1623 x651) (ite (= x1136 x651) x1392 (x1754 x651))))
(assert (= (ite (and (not x1236) x1647 x1205) (x768 x43) (x1249 x43)) (x1538 x43)))
(assert (= (x233 x10) (ite (= x10 (x1228 0)) x442 (x1715 x10))))
(assert (x1492 x685))
(assert (= (ite (and x1313 x172) (x350 x1213) (ite (and x900 x1781) (x119 x1213) (x125 x1213))) (x1738 x1213)))
(assert (= 0 (x221 x1477)))
(assert (x355 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x1492 x239))
(assert (x1492 x354))
(assert (= (ite (and x298 x445) (ite (and x298 x445 x1558) (x496 (x804 274184521717934524641157099916833587240)) (x1467 (x804 274184521717934524641157099916833587240))) (x1467 (x804 274184521717934524641157099916833587240))) (x991 (x804 274184521717934524641157099916833587240))))
(assert (x1492 x1214))
(assert (x1492 x1458))
(assert (x1492 x746))
(assert (x1492 x43))
(assert (= (x1783 x617) 0))
(assert (= (ite (and x445 x298) (x836 x1475) (x1783 x1475)) (x1256 x1475)))
(assert (x1492 x1031))
(assert (x1498 (* x637 79228162514264337593543950336)))
(assert (x1492 x1620))
(assert (= (ite (and x445 x351 x452 x298 x1670 (not x1105)) (x23 x1702) (ite (and (not x452) x298 x1670 x351 x445) (x227 x1702) (ite (and x1670 x298 x445 (not x351)) (x857 x1702) (ite (and x298 (not x1670) x445) (x127 x1702) (x552 x1702))))) (x1247 x1702)))
(assert (x1492 x1052))
(assert (x1492 x1131))
(assert (= (=> (and (= x653 (x569 x1497)) (= x445 (> x771 0)) (= (x1724 (- x610 1)) x662) (= (x1193 (x804 x1740)) x771) (= x1747 (x859 (+ x1602 x864))) (not x1508) (= (x569 (x1228 0)) x610) (= x1508 (not (= x66 0))) (= x1076 (x336 1461501637330902918203684832716283019655932542975 x1716)) (not (< x610 1)) (= x1333 (x569 x1170)) (= x1497 (x441 (x804 x662) (x1228 208) 0)) (= x864 (x336 115792089237316195423570985007226406215939081747436879206741300988257197096960 x492)) (= x492 (x244 x985)) (not (> x1333 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (= x1022 0) (= 0 x706) (= (x441 (x804 x56) (x1228 209) 0) x1170) (= (x441 (x804 x662) (x1228 208) 0) x985) (or (and (= x523 x1154) (not x445) (= 1 x907)) (and (= x340 (x859 (+ x1660 160))) (= x223 (x336 1461501637330902918203684832716283019655932542975 x1716)) (or (and x773 (= (x859 (+ x340 x1528)) x1244)) (not x773)) (= (x859 (+ 64 x130)) x287) (= x1506 x523) (not (= 0 x1398)) (= (> x64 x1528) x773) (= x1528 (x1563 x617)) (= x1652 x1654) (= (x859 (+ 32 x617)) x936) (= x1660 (x859 (+ x617 36))) (= x1721 (x859 (+ x831 31))) (or (not x1558) (and (= x1263 (x1467 (x804 274184521717934524641157099916833587240))) x1683 (= x1075 (= x112 (x496 (x804 x1214)))) x1075 (> 4294967296 x831) (= x112 (x1467 (x804 x1214))) x1558 (= (<= x1263 (x496 (x804 274184521717934524641157099916833587240))) x1683))) (not (= 0 x851)) (= x1670 (< 0 x1528)) (= x1506 (x859 (+ x1500 x1154))) (= (x859 (+ 32 x567)) x130) (= x1500 (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1721)) (= (x836 x15) x1654) (= (< 0 x1398) x1558) (= x1659 (x859 (+ x567 64))) (= (= x1654 9518847204935358166548570266051330015907116135037852959641967396525866745856) x1460) (= x15 x1154) (= x1660 x567) (= (x336 1461501637330902918203684832716283019655932542975 x1716) x1214) x445 (= (x859 (+ 132 x1154)) x1503) (= x851 (x1193 (x804 x1214))) (not (or (and (< x831 32) (= true (<= x831 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x831))) (or (and (= x64 0) (not x1670)) (and (or (and (not x351) (= 32 x64)) (and x351 (= x452 (> x1528 64)) (= (x859 (+ 64 x1503)) x535) (= x43 (x859 (+ 64 x617))) (or (and (= x1174 (x227 x1477)) x452 (= (< 96 x1528) x1105) (or (and (= x892 (x23 x1557)) x1105 (= (x859 (+ x617 128)) x1557) (not x670) (= (< 128 x1528) x670) (= (x859 (+ x1503 128)) x988) (= x64 128)) (and (not x1105) (= 96 x64))) (= x1477 (x859 (+ 96 x617))) (= x1202 (x859 (+ x1503 96)))) (and (not x452) (= x64 64))) (= x659 (x857 x43)))) (= x936 x235) (= x208 (x127 x235)) (= x340 x135) (= (> x1528 32) x351) x1670)) (= x1652 (x336 115792089210356248756420345214020892766250353992003419616917011526809519390720 x1654)) (= x907 (ite x1460 1 0)))) (not (= x1076 0)) (= x1504 (x336 1461501637330902918203684832716283019655932542975 x1716)) (= (x336 1461501637330902918203684832716283019655932542975 x653) x66) (= x1504 x1602) (= (x859 (+ x1333 1)) x462) (= x1154 (x859 (+ x617 32))) (= 0 x1086) (= x1740 (x336 1461501637330902918203684832716283019655932542975 x1716)) (= x56 (x336 1461501637330902918203684832716283019655932542975 x1716))) x614) x216))
(assert (= (ite (and x298 x445) (x836 x327) (x1783 x327)) (x1256 x327)))
(assert (= (ite (and x1205 (not x1236) x1647) (x768 x1542) (x1249 x1542)) (x1538 x1542)))
(assert (= (x1689 x327) (ite (= x327 x621) 0 (x855 x327))))
(assert (=> (<= x746 10000) (= (x804 x746) (x1228 x746))))
(assert (= (x557 x6 96) (x1644 (* x6 79228162514264337593543950336))))
(assert (= (x1706 x1666) (ite (and x1664 x1261) (x558 x1666) (x1402 x1666))))
(assert (x1492 x45))
(assert (= (x857 x1306) (ite (= x135 x1306) x208 (x127 x1306))))
(assert (x1492 x1650))
(assert (x1492 x1065))
(assert (x259 x1280))
(assert (x1492 x27))
(assert (and (<= (x822 11430537079145650693387304458692941425836787954612963690241153482819318579200 x989) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= (x822 11430537079145650693387304458692941425836787954612963690241153482819318579200 x989) 10000)))
(assert (= x1647 x701))
(assert (= (x127 x1126) (ite (= x1126 x1503) x1528 (x1563 x1126))))
(assert (x1492 x514))
(assert (x1492 x324))
(assert (x1492 x578))
(assert (x1708 x165 x654 x493 x59))
(assert (= x455 (x1760 (x804 x455))))
(assert (x355 x1665))
(assert (= (ite (and x445 x298) (x836 x710) (x1783 x710)) (x1256 x710)))
(assert (x1492 x1666))
(assert (= x992 (=> (and (= x1681 (<= 0 x1701)) (= x1517 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1705 (x804 x1380)))) (= (x991 (x804 x1380)) x420) (= x255 x700) (= x418 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x420)) x1681 x1517 x418 (= (x991 (x804 274184521717934524641157099916833587240)) x1701) (= x172 (= x1380 274184521717934524641157099916833587240)) (= x1095 (x991 (x804 274184521717934524641157099916833587240))) (= x415 (x1705 (x804 x1380)))) (and (=> (not x172) x679) (=> (and (= (x336 1461501637330902918203684832716283019655932542975 x306) x1417) (= x58 (not (= x1417 0))) (= (x441 (x804 x1135) (x1228 208) 0) x1282) (= (x441 (x804 274184521717934524641157099916833587240) (x1228 209) 0) x1327) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x870) (not x935) (= 599290589 x1728) (= x1134 (x336 1461501637330902918203684832716283019655932542975 x1262)) (= x367 274184521717934524641157099916833587240) (not x463) (= x1768 (x441 (x804 x1135) (x1228 210) 0)) (= x1560 (x268 x1732)) (not x543) (= x668 x1135) (= x1262 (x842 x142)) (= x1575 (x400 x1282)) (or (and (= x1026 (x336 1461501637330902918203684832716283019655932542975 x1792)) (not x873) (= (x268 x970) x1792) (= (= x1026 274184521717934524641157099916833587240) x361) (= x1645 (x441 (x804 x1135) (x1228 208) 0)) (= (not (= 0 x1225)) x905) (or (and (= x1048 (x441 (x804 x1494) (x1228 211) 0)) (= (x336 255 x7) x489) (= x489 x1016) (= (x441 (x804 274184521717934524641157099916833587240) x1048 0) x1116) (= (x268 x1116) x7) (not x361)) (and x361 (= (ite x361 1 0) x1016))) (= (x441 (x804 x1135) (x1228 210) 0) x970) (= x548 (x268 x1645)) (= (x336 1461501637330902918203684832716283019655932542975 x548) x1225) x905) (and (= x1016 (ite x873 1 0)) x873)) (= x812 (x1193 (x804 274184521717934524641157099916833587240))) (= x873 (= 274184521717934524641157099916833587240 x1494)) (not (> 455944412 x1728)) (= (< x338 1) x4) (= x1732 (x441 (x804 x1135) (x1228 208) 0)) (not x4) (= x1494 (x336 1461501637330902918203684832716283019655932542975 x1620)) (= x62 (x859 (+ 274184521717934524641157099916833587240 x1149))) (= (x336 1461501637330902918203684832716283019655932542975 x1560) x179) (= x1149 (x336 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1575)) (= x1580 (x336 115792089237316195423570985007226406215939081747436879206741300988257197096960 x811)) (= x1366 (x1724 (- x338 1))) (= 1 x648) (not x507) (not (= x1728 455944412)) (= x843 (= x179 0)) (> x812 0) (not (= 511946350 x1728)) (= x392 (x859 (+ 1 x1052))) (= x315 x746) (= (x268 x202) x1620) (= x463 (= 0 x1134)) (< x1728 2311529814) (= (= 0 x1494) x935) (= x255 x173) (not (> 4 x173)) (= x811 (x268 x1768)) (= x338 (x842 x778)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1052) x543) (= x778 (x441 (x804 x315) (x1228 209) 0)) (= (x268 x1273) x306) (= x202 (x441 (x804 x1135) (x1228 208) 0)) (= 100 x173) (= 0 x1713) (not x843) (= x1135 x575) (= x1580 x1081) (< x1728 1166402363) (= x16 274184521717934524641157099916833587240) (= x1120 x315) (= x1273 (x441 (x804 x1135) (x1228 208) 0)) (= (or (> x823 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x823 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x823))) x507) x172 (= (x1724 (- x173 4)) x823) x58 (= (x1591 x1327) x1052) (>= 1461501637330902918203684832716283019655932542975 x315) (= x142 (x441 (x804 x1135) (x1228 208) 0)) (= x1120 x179) (= x1233 0) (< 0 x1016)) x1592)))))
(assert (x1492 x102))
(assert (= 455944412 (x1760 (x1228 455944412))))
(assert (= (ite (= x1542 x621) 0 (x855 x1542)) (x1689 x1542)))
(assert (x1492 x889))
(assert (= (ite (= x535 x1477) x659 (x857 x1477)) (x227 x1477)))
(assert (= (ite (and x445 (not x1105) x1670 x298 x452 x351) (x23 x1694) (ite (and x298 x1670 (not x452) x445 x351) (x227 x1694) (ite (and (not x351) x298 x1670 x445) (x857 x1694) (ite (and (not x1670) x298 x445) (x127 x1694) (x552 x1694))))) (x1247 x1694)))
(assert (= (ite (and x1664 x1261) (x558 x1694) (x1402 x1694)) (x1706 x1694)))
(assert (x1492 x1322))
(assert (x695 x1123))
(assert (x1492 x1649))
(assert (=> (>= 10000 x1621) (= (x1228 x1621) (x804 x1621))))
(assert (= x1214 (x1760 (x804 x1214))))
(assert (x1492 x1132))
(assert (= (x221 (x859 (+ x731 96))) 0))
(assert (x111 x1262 x882))
(assert (= 117300739 (x1760 (x1228 117300739))))
(assert (= (x804 115792089210356248756420345214020892766250353992003419616917011526809519390720) (x1228 115792089210356248756420345214020892766250353992003419616917011526809519390720)))
(assert (x355 372682917519380244141939632342652170012262798458880))
(assert (x1492 x1009))
(assert (= (ite (= x411 x1477) x402 (x186 x1477)) (x46 x1477)))
(assert (= (ite (= x778 x985) x1747 (x244 x778)) (x268 x778)))
(assert (= (x46 x537) (ite (= x411 x537) x402 (x186 x537))))
(assert (x355 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1492 x1036))
(assert (= (ite (and x298 x445) (ite (and x298 x445 x1558) (x30 x850) (x1034 x850)) (x1034 x850)) (x1372 x850)))
(assert (x1436 x461 x51))
(assert (x355 x440))
(assert (= (x1689 x235) (ite (= x235 x621) 0 (x855 x235))))
(assert (x1492 x1356))
(assert (x1492 x607))
(assert (= 274184521717934524641157099916833587206 (x1760 (x804 274184521717934524641157099916833587206))))
(assert (= (ite (= x1589 x1109) x666 (x954 x1109)) (x1711 x1109)))
(assert (= (x1760 (x804 274184521717934524641157099916833587202)) 274184521717934524641157099916833587202))
(assert (= (x233 x1357) (ite (= x1357 (x1228 0)) x442 (x1715 x1357))))
(assert (x355 x6))
(assert (= (ite (= x1348 (x1228 0)) x442 (x1715 x1348)) (x233 x1348)))
(assert (= x56 (x1760 (x804 x56))))
(assert (= (=> (and (not (= x238 0)) (= x238 (x1193 (x804 x746))) (= x1179 (x859 (+ 32 x909))) (= (< 0 x1140) x1664) (= (x859 (+ x1605 4)) x1539) (= (x336 1461501637330902918203684832716283019655932542975 x637) x918) (= x909 x1539) (or (not x1664) (and (= (x991 (x804 x746)) x1551) (= (= (x1471 (x804 x746)) x1551) x564) (= (x991 (x804 274184521717934524641157099916833587240)) x1166) x1664 (= x618 (>= (x1471 (x804 274184521717934524641157099916833587240)) x1166)) (< x1237 4294967296) x618 x564))) x483) x1396))
(assert (x1492 x451))
(assert (= (x1760 (x804 x1280)) x1280))
(assert (x1492 x1784))
(assert (x1771 x59 (- x493 x228)))
(assert (x1000 x1501))
(assert (= (x1538 x1126) (ite (and x1647 x1205 (not x1236)) (x768 x1126) (x1249 x1126))))
(assert (= (x1249 x1109) (ite (= x1030 x1109) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1139 x1109))))
(assert (= (x646 x1306) (ite (= x1655 x1306) x1382 (x630 x1306))))
(assert (x259 x869))
(assert (= (x1228 274184521717934524641157099916833587240) (x804 274184521717934524641157099916833587240)))
(assert (x1492 x830))
(assert (x1492 x454))
(assert (x1492 x526))
(assert (=> (<= x196 10000) (= (x1228 x196) (x804 x196))))
(check-sat)
