(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTLIA)
(declare-datatypes ((x1435 0)) (((x1299 (x109 Int)) (x722 (x1676 x1435) (x1268 Int)) (x338 (x613 x1435) (x393 x1435) (x626 Int)))))
(declare-fun x2144 () x1435)
(declare-fun x1425 () Int)
(declare-fun x780 () Int)
(declare-fun x1935 () Bool)
(declare-fun x2065 () Int)
(declare-fun x695 () Int)
(declare-fun x1054 () Int)
(declare-fun x1593 () x1435)
(declare-fun x446 () Int)
(declare-fun x2329 () x1435)
(declare-fun x2122 () Int)
(declare-fun x1723 () Bool)
(declare-fun x823 () Int)
(declare-fun x2021 () Int)
(declare-fun x1453 () Int)
(declare-fun x1430 () x1435)
(declare-fun x1724 () Int)
(declare-fun x1153 () Bool)
(declare-fun x2182 () Bool)
(declare-fun x1860 () Int)
(declare-fun x950 () Int)
(declare-fun x1646 () Int)
(declare-fun x308 () x1435)
(declare-fun x1566 () Int)
(declare-fun x767 () Int)
(declare-fun x1539 () Bool)
(declare-fun x454 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x1499 () Int)
(declare-fun x774 () Bool)
(declare-fun x1995 (Int) Int)
(declare-fun x1628 () Bool)
(declare-fun x1031 () x1435)
(declare-fun x915 () Bool)
(declare-fun x2151 () x1435)
(declare-fun x2183 () Int)
(declare-fun x321 () x1435)
(declare-fun x2072 () Bool)
(declare-fun x2103 () x1435)
(declare-fun x1525 () Int)
(declare-fun x1787 () Bool)
(declare-fun x1506 () Int)
(declare-fun x1077 () Int)
(declare-fun x904 (Int) Int)
(declare-fun x724 () Bool)
(declare-fun x1799 () Int)
(declare-fun x1617 () Bool)
(declare-fun x711 () Bool)
(declare-fun x575 () Bool)
(declare-fun x526 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x1288 () Int)
(declare-fun x797 () Bool)
(declare-fun x413 () Bool)
(declare-fun x2223 () Bool)
(declare-fun x1370 () Int)
(declare-fun x1231 () Int)
(declare-fun x1437 () x1435)
(declare-fun x720 () Int)
(declare-fun x156 () Int)
(declare-fun x2047 () x1435)
(declare-fun x978 () Bool)
(declare-fun x937 () Int)
(declare-fun x1161 () Int)
(declare-fun x2013 () Int)
(declare-fun x2050 () Int)
(declare-fun x374 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x2132 () x1435)
(declare-fun x560 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x970 () Int)
(declare-fun x2053 () Int)
(declare-fun x262 () Int)
(declare-fun x1480 () Int)
(declare-fun x145 (Int Int) Int)
(declare-fun x693 () Int)
(declare-fun x2191 (Int) Int)
(declare-fun x1055 () Int)
(declare-fun x2093 () Bool)
(declare-fun x1309 () Bool)
(declare-fun x1901 () Bool)
(declare-fun x65 () Int)
(declare-fun x385 () Int)
(declare-fun x1567 () x1435)
(declare-fun x1373 (x1435) Int)
(declare-fun x1987 () Int)
(declare-fun x2052 () Int)
(declare-fun x2130 () Int)
(declare-fun x2296 () Bool)
(declare-fun x1713 () Int)
(declare-fun x1337 (Int) Int)
(declare-fun x912 () Int)
(declare-fun x2037 () Bool)
(declare-fun x1728 () Bool)
(declare-fun x1191 () Int)
(declare-fun x1350 () x1435)
(declare-fun x755 () Int)
(declare-fun x1662 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x2090 () Int)
(declare-fun x2294 () Int)
(declare-fun x1642 () Int)
(declare-fun x1427 () Int)
(declare-fun x85 () Int)
(declare-fun x688 () Int)
(declare-fun x1815 () Int)
(declare-fun x471 () x1435)
(declare-fun x376 () Int)
(declare-fun x1501 () x1435)
(declare-fun x972 () Int)
(declare-fun x588 () x1435)
(declare-fun x415 () Int)
(declare-fun x301 () Int)
(declare-fun x1556 () Bool)
(declare-fun x1879 () x1435)
(declare-fun x798 () Bool)
(declare-fun x2180 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x611 () x1435)
(declare-fun x1392 () Bool)
(declare-fun x1193 () x1435)
(declare-fun x1349 () Int)
(declare-fun x188 () x1435)
(declare-fun x568 () Bool)
(declare-fun x927 () x1435)
(declare-fun x2076 () Bool)
(declare-fun x893 () Int)
(declare-fun x2177 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x2338 () x1435)
(declare-fun x1081 () Int)
(declare-fun x1838 () x1435)
(declare-fun x1475 () Int)
(declare-fun x132 () Int)
(declare-fun x1868 () Int)
(declare-fun x1239 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x1632 () x1435)
(declare-fun x890 () Int)
(declare-fun x1156 () Int)
(declare-fun x1534 () Int)
(declare-fun x1509 () x1435)
(declare-fun x138 () Bool)
(declare-fun x1709 () x1435)
(declare-fun x1333 () Bool)
(declare-fun x748 () Int)
(declare-fun x909 () Bool)
(declare-fun x1772 () x1435)
(declare-fun x1683 () Int)
(declare-fun x2226 () Int)
(declare-fun x1083 () Bool)
(declare-fun x1017 () Int)
(declare-fun x10 () Int)
(declare-fun x32 () Bool)
(declare-fun x2389 () Int)
(declare-fun x2038 () Bool)
(declare-fun x90 () Bool)
(declare-fun x540 () Bool)
(declare-fun x2178 () Int)
(declare-fun x183 () Bool)
(declare-fun x469 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x2214 () Bool)
(declare-fun x1801 () Int)
(declare-fun x840 () Bool)
(declare-fun x1451 () Int)
(declare-fun x1033 () Int)
(declare-fun x498 () Int)
(declare-fun x2164 () Int)
(declare-fun x521 () Int)
(declare-fun x256 () Bool)
(declare-fun x2269 () Int)
(declare-fun x558 () x1435)
(declare-fun x590 () Int)
(declare-fun x669 () Int)
(declare-fun x901 () Int)
(declare-fun x1487 () Bool)
(declare-fun x451 () Int)
(declare-fun x223 () x1435)
(declare-fun x1252 () Int)
(declare-fun x1656 (Int) Int)
(declare-fun x1808 () Bool)
(declare-fun x1954 () Int)
(declare-fun x1694 () x1435)
(declare-fun x33 () Int)
(declare-fun x506 () Int)
(declare-fun x1381 () x1435)
(declare-fun x64 () Bool)
(declare-fun x342 () Bool)
(declare-fun x1538 () Int)
(declare-fun x1611 () Int)
(declare-fun x1562 () x1435)
(declare-fun x1393 () Int)
(declare-fun x126 () Int)
(declare-fun x667 () Bool)
(declare-fun x1836 () Int)
(declare-fun x475 () Int)
(declare-fun x1615 () x1435)
(declare-fun x1181 (Int) Int)
(declare-fun x792 () Int)
(declare-fun x1385 () Int)
(declare-fun x2335 () Bool)
(declare-fun x1215 () Int)
(declare-fun x633 () Int)
(declare-fun x2105 (x1435) Int)
(declare-fun x2205 () Int)
(declare-fun x70 () x1435)
(declare-fun x352 () Bool)
(declare-fun x884 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x666 () Bool)
(declare-fun x839 () Int)
(declare-fun x870 () Int)
(declare-fun x2387 () Int)
(declare-fun x203 () Int)
(declare-fun x1986 () Int)
(declare-fun x617 () Int)
(declare-fun x982 () Bool)
(declare-fun x2192 () Int)
(declare-fun x942 () Bool)
(declare-fun x283 () Bool)
(declare-fun x2370 () Bool)
(declare-fun x547 () Bool)
(declare-fun x2333 () Int)
(declare-fun x1883 () Int)
(declare-fun x1834 (x1435) Int)
(declare-fun x882 () x1435)
(declare-fun x815 () x1435)
(declare-fun x1219 () Int)
(declare-fun x723 () Int)
(declare-fun x364 () Bool)
(declare-fun x536 () Int)
(declare-fun x1554 () Int)
(declare-fun x2119 () Bool)
(declare-fun x2131 () x1435)
(declare-fun x362 () Bool)
(declare-fun x1279 () Int)
(declare-fun x2292 () Bool)
(declare-fun x886 () Bool)
(declare-fun x2101 () Bool)
(declare-fun x1544 () x1435)
(declare-fun x2102 (Int) Int)
(declare-fun x1871 () Bool)
(declare-fun x1558 () Int)
(declare-fun x179 () Int)
(declare-fun x787 () x1435)
(declare-fun x2382 () Bool)
(declare-fun x1891 () Int)
(declare-fun x2321 () Int)
(declare-fun x1959 () Bool)
(declare-fun x17 () Bool)
(declare-fun x49 () Int)
(declare-fun x2019 () Bool)
(declare-fun x680 () Int)
(declare-fun x438 () Int)
(declare-fun x665 () Bool)
(declare-fun x98 () Int)
(declare-fun x1422 () Int)
(declare-fun x318 () Int)
(declare-fun x704 () x1435)
(declare-fun x1046 () Int)
(declare-fun x1368 () x1435)
(declare-fun x1171 () Bool)
(declare-fun x689 () x1435)
(declare-fun x1434 () Int)
(declare-fun x48 () Bool)
(declare-fun x300 () Int)
(declare-fun x2385 () Bool)
(declare-fun x1485 () Int)
(declare-fun x973 () Int)
(declare-fun x1297 () Int)
(declare-fun x1645 () Int)
(declare-fun x1533 () x1435)
(declare-fun x151 () Int)
(declare-fun x773 () Int)
(declare-fun x375 () x1435)
(declare-fun x1975 () Bool)
(declare-fun x1927 () Int)
(declare-fun x1896 () Bool)
(declare-fun x742 () Bool)
(declare-fun x1673 () Int)
(declare-fun x398 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x682 () Int)
(declare-fun x1925 () Int)
(declare-fun x2373 () Bool)
(declare-fun x92 () Int)
(declare-fun x753 () Int)
(declare-fun x1775 () Int)
(declare-fun x1307 () Int)
(declare-fun x489 (Int) Int)
(declare-fun x2067 () Int)
(declare-fun x2189 () Int)
(declare-fun x618 () Int)
(declare-fun x1315 () x1435)
(declare-fun x1016 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x1942 () Int)
(declare-fun x1807 () Int)
(declare-fun x2034 () Int)
(declare-fun x178 () Int)
(declare-fun x2104 () Int)
(declare-fun x2233 () Int)
(declare-fun x2311 () Int)
(declare-fun x445 () Bool)
(declare-fun x2266 () Int)
(declare-fun x137 () Bool)
(declare-fun x1419 () Int)
(declare-fun x1136 () Bool)
(declare-fun x420 () Int)
(declare-fun x990 () Int)
(declare-fun x1162 () Int)
(declare-fun x1213 () Int)
(declare-fun x2220 () Int)
(declare-fun x2106 () Int)
(declare-fun x1280 () Int)
(declare-fun x1372 () x1435)
(declare-fun x182 () Bool)
(declare-fun x1356 () Int)
(declare-fun x1705 () Bool)
(declare-fun x905 () Int)
(declare-fun x1811 () Int)
(declare-fun x754 () Bool)
(declare-fun x2255 () x1435)
(declare-fun x1367 () Int)
(declare-fun x259 () x1435)
(declare-fun x2031 () Bool)
(declare-fun x531 () x1435)
(declare-fun x295 () Bool)
(declare-fun x553 () x1435)
(declare-fun x2000 () Bool)
(declare-fun x73 (x1435) Int)
(declare-fun x1764 () Int)
(declare-fun x1660 () x1435)
(declare-fun x2386 () x1435)
(declare-fun x997 () Bool)
(declare-fun x254 () Bool)
(declare-fun x315 () Bool)
(declare-fun x589 () Int)
(declare-fun x2133 () Bool)
(declare-fun x41 () Bool)
(declare-fun x2036 () Bool)
(declare-fun x638 () Bool)
(declare-fun x2320 () Int)
(declare-fun x1399 () Int)
(declare-fun x911 () Bool)
(declare-fun x75 () Bool)
(declare-fun x1763 () x1435)
(declare-fun x1845 () Int)
(declare-fun x1776 () Int)
(declare-fun x2289 () x1435)
(declare-fun x775 () Bool)
(declare-fun x1756 () Int)
(declare-fun x314 () Int)
(declare-fun x1344 () Int)
(declare-fun x821 () Int)
(declare-fun x1844 () Int)
(declare-fun x2228 () Int)
(declare-fun x1338 () Bool)
(declare-fun x574 () x1435)
(declare-fun x196 () Int)
(declare-fun x1973 () Int)
(declare-fun x965 () x1435)
(declare-fun x1205 () Int)
(declare-fun x1450 (Int) Int)
(declare-fun x486 () Bool)
(declare-fun x1080 () x1435)
(declare-fun x1073 () Bool)
(declare-fun x880 () Int)
(declare-fun x1121 () Int)
(declare-fun x1640 () Int)
(declare-fun x350 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x403 () Int)
(declare-fun x796 () Bool)
(declare-fun x1442 () Int)
(declare-fun x1327 () Int)
(declare-fun x1630 () Int)
(declare-fun x776 () Int)
(declare-fun x1318 () Bool)
(declare-fun x455 () Int)
(declare-fun x570 () Int)
(declare-fun x1823 () Int)
(declare-fun x2221 () x1435)
(declare-fun x1595 () Int)
(declare-fun x341 () Bool)
(declare-fun x779 () Int)
(declare-fun x1658 () Bool)
(declare-fun x1599 () Int)
(declare-fun x1260 () Bool)
(declare-fun x1192 () Bool)
(declare-fun x2377 () Bool)
(declare-fun x994 () x1435)
(declare-fun x1652 () Int)
(declare-fun x2207 () Int)
(declare-fun x2272 () Int)
(declare-fun x1244 () Bool)
(declare-fun x635 () Int)
(declare-fun x2020 () Int)
(declare-fun x1409 () x1435)
(declare-fun x210 () Int)
(declare-fun x1736 () x1435)
(declare-fun x1216 () Bool)
(declare-fun x408 () Bool)
(declare-fun x270 () Bool)
(declare-fun x365 () Int)
(declare-fun x1140 () Int)
(declare-fun x1680 () Int)
(declare-fun x442 () Bool)
(declare-fun x2248 () Bool)
(declare-fun x243 () Int)
(declare-fun x443 () Int)
(declare-fun x87 () Int)
(declare-fun x418 () Bool)
(declare-fun x1965 () x1435)
(declare-fun x608 () Int)
(declare-fun x1555 () x1435)
(declare-fun x1631 () Int)
(declare-fun x672 () Int)
(declare-fun x948 (Int) Int)
(declare-fun x1388 () Int)
(declare-fun x1079 () Int)
(declare-fun x906 () Int)
(declare-fun x709 () Int)
(declare-fun x980 () Int)
(declare-fun x793 () Int)
(declare-fun x1 () Int)
(declare-fun x1588 () Bool)
(declare-fun x1733 () Bool)
(declare-fun x524 () Bool)
(declare-fun x1291 () Int)
(declare-fun x1817 () x1435)
(declare-fun x2046 () Int)
(declare-fun x36 () x1435)
(declare-fun x747 () Bool)
(declare-fun x335 () Int)
(declare-fun x731 () Int)
(declare-fun x400 () Bool)
(declare-fun x2114 () Bool)
(declare-fun x501 () Int)
(declare-fun x2095 () Int)
(declare-fun x1518 (Int) Int)
(declare-fun x516 () Int)
(declare-fun x500 () x1435)
(declare-fun x2009 () Int)
(declare-fun x2179 () Int)
(declare-fun x381 () Bool)
(declare-fun x336 () x1435)
(declare-fun x1060 () x1435)
(declare-fun x940 () x1435)
(declare-fun x1304 () Bool)
(declare-fun x58 () Bool)
(declare-fun x149 () Bool)
(declare-fun x409 () Bool)
(declare-fun x2157 () Int)
(declare-fun x2075 () x1435)
(declare-fun x1666 () Int)
(declare-fun x1582 () Int)
(declare-fun x2032 () Bool)
(declare-fun x1183 () Int)
(declare-fun x2365 () x1435)
(declare-fun x681 () Int)
(declare-fun x1498 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x106 () Bool)
(declare-fun x1461 () x1435)
(declare-fun x1149 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x1770 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x1226 () x1435)
(declare-fun x161 () x1435)
(declare-fun x1821 () Int)
(declare-fun x108 () Int)
(declare-fun x130 () Bool)
(declare-fun x112 () Int)
(declare-fun x2080 () Bool)
(declare-fun x1526 () Bool)
(declare-fun x1945 () Int)
(declare-fun x272 () Bool)
(declare-fun x389 () Int)
(declare-fun x1492 () x1435)
(declare-fun x712 () Bool)
(declare-fun x2391 () Bool)
(declare-fun x193 () Bool)
(declare-fun x1752 () Bool)
(declare-fun x2111 () Int)
(declare-fun x347 () Bool)
(declare-fun x935 () x1435)
(declare-fun x2258 () Bool)
(declare-fun x758 () x1435)
(declare-fun x614 () x1435)
(declare-fun x1769 () x1435)
(declare-fun x726 () x1435)
(declare-fun x1172 () Int)
(declare-fun x1343 () Bool)
(declare-fun x327 () Bool)
(declare-fun x1963 () Int)
(declare-fun x1978 () x1435)
(declare-fun x657 (Int) Int)
(declare-fun x1009 () Bool)
(declare-fun x671 (Int) Int)
(declare-fun x253 () Int)
(declare-fun x171 () Int)
(declare-fun x914 () Int)
(declare-fun x603 () Int)
(declare-fun x1242 () x1435)
(declare-fun x1524 () Bool)
(declare-fun x1855 () Int)
(declare-fun x1623 () Int)
(declare-fun x29 () Int)
(declare-fun x1051 () x1435)
(declare-fun x863 () Int)
(declare-fun x1663 () x1435)
(declare-fun x2025 () Int)
(declare-fun x107 () Bool)
(declare-fun x1708 () Bool)
(declare-fun x2367 (Int) Int)
(declare-fun x534 () x1435)
(declare-fun x426 () Bool)
(declare-fun x271 () Bool)
(declare-fun x1199 () Int)
(declare-fun x1032 () Bool)
(declare-fun x493 () Bool)
(declare-fun x1669 () Int)
(declare-fun x164 () Int)
(declare-fun x1458 () Bool)
(declare-fun x1893 () x1435)
(declare-fun x125 () Bool)
(declare-fun x931 () Int)
(declare-fun x1464 () Bool)
(declare-fun x691 () Bool)
(declare-fun x1265 () Int)
(declare-fun x621 () x1435)
(declare-fun x656 () Bool)
(declare-fun x1899 () Int)
(declare-fun x2198 () Int)
(declare-fun x1324 () Int)
(declare-fun x1797 () Bool)
(declare-fun x595 () Int)
(declare-fun x2317 () Int)
(declare-fun x2341 (Int) Int)
(declare-fun x2336 (x1435) Int)
(declare-fun x170 () Int)
(declare-fun x929 () Int)
(declare-fun x284 () x1435)
(declare-fun x1112 () Int)
(declare-fun x1258 () Int)
(declare-fun x1306 () Bool)
(declare-fun x651 () Int)
(declare-fun x257 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x483 () Bool)
(declare-fun x856 () Int)
(declare-fun x598 () x1435)
(declare-fun x1235 () Bool)
(declare-fun x518 () Int)
(declare-fun x814 (Int) Int)
(declare-fun x1269 () Int)
(declare-fun x1298 () Int)
(declare-fun x646 () x1435)
(declare-fun x1000 () Int)
(declare-fun x1777 () Bool)
(declare-fun x2004 () Int)
(declare-fun x2203 () x1435)
(declare-fun x958 () Bool)
(declare-fun x313 () Int)
(declare-fun x1863 () Int)
(declare-fun x1056 () Bool)
(declare-fun x2280 () x1435)
(declare-fun x1671 () Int)
(declare-fun x1441 () Bool)
(declare-fun x1462 () Int)
(declare-fun x1677 () Bool)
(declare-fun x1648 () Bool)
(declare-fun x1685 () Int)
(declare-fun x2040 () Int)
(declare-fun x24 () Int)
(declare-fun x1940 () Int)
(declare-fun x1928 () Int)
(declare-fun x1197 () Int)
(declare-fun x1877 () x1435)
(declare-fun x957 () Int)
(declare-fun x852 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x740 () Int)
(declare-fun x1308 () Int)
(declare-fun x849 () Int)
(declare-fun x639 () x1435)
(declare-fun x252 () Int)
(declare-fun x134 () Bool)
(declare-fun x189 () Int)
(declare-fun x801 () Bool)
(declare-fun x1278 () Int)
(declare-fun x954 (x1435) Int)
(declare-fun x2055 (Int) Int)
(declare-fun x1825 () Int)
(declare-fun x1254 () Int)
(declare-fun x292 () Bool)
(declare-fun x684 () Int)
(declare-fun x1906 () Bool)
(declare-fun x1988 () Int)
(declare-fun x1743 () Int)
(declare-fun x1141 () Int)
(declare-fun x2137 (Int) Int)
(declare-fun x410 () x1435)
(declare-fun x1947 () Int)
(declare-fun x1966 () Bool)
(declare-fun x1647 () Bool)
(declare-fun x228 () Int)
(declare-fun x1886 () Int)
(declare-fun x1892 () x1435)
(declare-fun x2323 () Int)
(declare-fun x2152 () Bool)
(declare-fun x872 () Int)
(declare-fun x1305 (Int) Int)
(declare-fun x146 () Int)
(declare-fun x919 () Bool)
(declare-fun x1990 () Bool)
(declare-fun x854 () Int)
(declare-fun x578 (x1435) Int)
(declare-fun x2173 () Int)
(declare-fun x730 () Int)
(declare-fun x2051 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x1262 () Int)
(declare-fun x1301 () Int)
(declare-fun x2360 () Bool)
(declare-fun x2001 () Int)
(declare-fun x1342 () Bool)
(declare-fun x186 () Bool)
(declare-fun x895 () Int)
(declare-fun x2293 () x1435)
(declare-fun x372 () Int)
(declare-fun x1063 () Bool)
(declare-fun x209 () Bool)
(declare-fun x499 () Int)
(declare-fun x388 () Int)
(declare-fun x285 () Int)
(declare-fun x1814 () Bool)
(declare-fun x1829 () Bool)
(declare-fun x2332 () Bool)
(declare-fun x1971 () Int)
(declare-fun x778 () Int)
(declare-fun x1974 () x1435)
(declare-fun x1245 () Int)
(declare-fun x784 () Int)
(declare-fun x2245 () Int)
(declare-fun x1846 () Int)
(declare-fun x1302 () Bool)
(declare-fun x276 () Int)
(declare-fun x273 () x1435)
(declare-fun x2390 () Int)
(declare-fun x673 () Int)
(declare-fun x1146 () Int)
(declare-fun x2071 () Int)
(declare-fun x11 () Bool)
(declare-fun x1469 () x1435)
(declare-fun x1416 () Int)
(declare-fun x703 () Bool)
(declare-fun x1800 () Int)
(declare-fun x2213 () Bool)
(declare-fun x95 () Bool)
(declare-fun x845 () Bool)
(declare-fun x865 () Int)
(declare-fun x248 () Bool)
(declare-fun x2058 () Int)
(declare-fun x552 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x15 () Bool)
(declare-fun x549 () Bool)
(declare-fun x2048 (Int) Int)
(declare-fun x2084 () Int)
(declare-fun x1102 (Int) Int)
(declare-fun x1788 () Int)
(declare-fun x2334 () x1435)
(declare-fun x260 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x507 () Bool)
(declare-fun x120 () Int)
(declare-fun x1195 () Bool)
(declare-fun x1088 () x1435)
(declare-fun x261 () Int)
(declare-fun x836 (Int Int) Int)
(declare-fun x1053 () Int)
(declare-fun x1106 () Int)
(declare-fun x2219 () Int)
(declare-fun x737 () Int)
(declare-fun x1790 () Bool)
(declare-fun x766 () x1435)
(declare-fun x368 () Int)
(declare-fun x2274 (Int) Int)
(declare-fun x585 () x1435)
(declare-fun x1137 () Int)
(declare-fun x194 () Int)
(declare-fun x325 () Int)
(declare-fun x2388 () Int)
(declare-fun x2359 () Int)
(declare-fun x1203 () Int)
(declare-fun x674 () Int)
(declare-fun x2092 () Int)
(declare-fun x1672 () Bool)
(declare-fun x2330 () Int)
(declare-fun x888 () Bool)
(declare-fun x1275 () Int)
(declare-fun x18 () Bool)
(declare-fun x683 () Int)
(declare-fun x290 () x1435)
(declare-fun x696 () Int)
(declare-fun x2008 () Int)
(declare-fun x816 () Bool)
(declare-fun x529 () x1435)
(declare-fun x231 () Int)
(declare-fun x2342 (x1435) Int)
(declare-fun x38 () x1435)
(declare-fun x654 () Int)
(declare-fun x355 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x1025 (Int) Int)
(declare-fun x45 () Int)
(declare-fun x390 () Int)
(declare-fun x1849 () Int)
(declare-fun x817 () Bool)
(declare-fun x1323 () x1435)
(declare-fun x1682 () Bool)
(declare-fun x1707 () Bool)
(declare-fun x582 () x1435)
(declare-fun x2159 () Int)
(declare-fun x1748 () Bool)
(declare-fun x894 () Int)
(declare-fun x1182 () Bool)
(declare-fun x2246 () x1435)
(declare-fun x1332 () Bool)
(declare-fun x1742 (x1435) Int)
(declare-fun x1211 () Int)
(declare-fun x686 () Bool)
(declare-fun x2376 () Int)
(declare-fun x1489 () Int)
(declare-fun x53 () Bool)
(declare-fun x557 () Bool)
(declare-fun x191 () Int)
(declare-fun x1341 () Bool)
(declare-fun x1178 () Int)
(declare-fun x74 () Bool)
(declare-fun x1738 () x1435)
(declare-fun x1875 () Int)
(declare-fun x458 () Int)
(declare-fun x217 () Int)
(declare-fun x6 () Int)
(declare-fun x266 () Int)
(declare-fun x1174 () Int)
(declare-fun x1607 () Bool)
(declare-fun x117 () Bool)
(declare-fun x473 () Int)
(declare-fun x2066 () Bool)
(declare-fun x1864 () Int)
(declare-fun x1576 () Int)
(declare-fun x333 () Int)
(declare-fun x1116 () x1435)
(declare-fun x2291 () x1435)
(declare-fun x1839 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x2295 () Int)
(declare-fun x173 () Int)
(declare-fun x1779 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x960 () Bool)
(declare-fun x677 () Bool)
(declare-fun x1795 () Int)
(declare-fun x169 () Int)
(declare-fun x736 () Int)
(declare-fun x581 () Bool)
(declare-fun x1933 () Int)
(declare-fun x2005 () x1435)
(declare-fun x1135 () x1435)
(declare-fun x205 () Int)
(declare-fun x799 () Int)
(declare-fun x1914 () Int)
(declare-fun x30 () Int)
(declare-fun x2129 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x1639 () Int)
(declare-fun x1741 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x938 () x1435)
(declare-fun x14 () Int)
(declare-fun x358 (Int) Int)
(declare-fun x1351 () Int)
(declare-fun x1394 () Int)
(declare-fun x1890 () Bool)
(declare-fun x367 () Bool)
(declare-fun x1758 () Int)
(declare-fun x652 () x1435)
(declare-fun x180 () Bool)
(declare-fun x811 () Int)
(declare-fun x235 (x1435) Int)
(declare-fun x1263 () Int)
(declare-fun x2074 () Bool)
(declare-fun x2082 () Int)
(declare-fun x1142 () Int)
(declare-fun x653 () Int)
(declare-fun x867 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x1884 () Int)
(declare-fun x163 () Int)
(declare-fun x805 () Int)
(declare-fun x2307 () Int)
(declare-fun x745 () Int)
(declare-fun x1592 () x1435)
(declare-fun x1494 () Int)
(declare-fun x172 () Int)
(declare-fun x387 () Int)
(declare-fun x820 () Int)
(declare-fun x2260 () Int)
(declare-fun x1015 () Int)
(declare-fun x1512 () x1435)
(declare-fun x2302 (Int) Int)
(declare-fun x198 () Int)
(declare-fun x1218 () Int)
(declare-fun x269 () x1435)
(declare-fun x1602 () x1435)
(declare-fun x480 () Bool)
(declare-fun x572 () Bool)
(declare-fun x599 () Bool)
(declare-fun x632 (Int) Int)
(declare-fun x371 () Bool)
(declare-fun x993 () x1435)
(declare-fun x214 () Int)
(declare-fun x1100 () Int)
(declare-fun x1287 () Bool)
(declare-fun x2140 () Int)
(declare-fun x1837 () Bool)
(declare-fun x791 (x1435) Int)
(declare-fun x82 () Int)
(declare-fun x2054 () x1435)
(declare-fun x949 () Int)
(declare-fun x2150 () Int)
(declare-fun x855 () Int)
(declare-fun x864 () Int)
(declare-fun x947 () Bool)
(declare-fun x2007 () x1435)
(declare-fun x1358 () Int)
(declare-fun x1264 () Int)
(declare-fun x1698 () x1435)
(declare-fun x952 () Bool)
(declare-fun x263 () Bool)
(declare-fun x363 () Bool)
(declare-fun x562 () Int)
(declare-fun x25 () Bool)
(declare-fun x1066 () Int)
(declare-fun x1898 () Bool)
(declare-fun x908 () Int)
(declare-fun x2288 () Bool)
(declare-fun x291 () Bool)
(declare-fun x1403 () Int)
(declare-fun x630 () Bool)
(declare-fun x862 () Int)
(declare-fun x2201 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x2012 () Int)
(declare-fun x1125 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x1303 () Int)
(declare-fun x813 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x1633 () Bool)
(declare-fun x1230 () Int)
(declare-fun x2372 () Int)
(declare-fun x604 () Int)
(declare-fun x543 () Int)
(declare-fun x1024 () x1435)
(declare-fun x411 () Int)
(declare-fun x2369 () Bool)
(declare-fun x1765 () Int)
(declare-fun x697 () Bool)
(declare-fun x2166 () Int)
(declare-fun x1196 () Bool)
(declare-fun x2158 () Int)
(declare-fun x1757 () Int)
(declare-fun x1716 () Int)
(declare-fun x818 () Bool)
(declare-fun x2263 () x1435)
(declare-fun x1296 () Int)
(declare-fun x225 () Bool)
(declare-fun x1519 () x1435)
(declare-fun x1248 () Bool)
(declare-fun x474 () Int)
(declare-fun x378 () Int)
(declare-fun x496 () Bool)
(declare-fun x1378 () Int)
(declare-fun x1312 () Int)
(declare-fun x2145 () Bool)
(declare-fun x1870 () x1435)
(declare-fun x1154 (Int) Int)
(declare-fun x554 () Int)
(declare-fun x1780 () Bool)
(declare-fun x926 () Int)
(declare-fun x115 (Int) Int)
(declare-fun x377 () Int)
(declare-fun x357 () Bool)
(declare-fun x1531 () x1435)
(declare-fun x1229 () Int)
(declare-fun x1951 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x1085 () Int)
(declare-fun x268 () Bool)
(declare-fun x1078 () x1435)
(declare-fun x1553 () Int)
(declare-fun x945 () Int)
(declare-fun x1573 () Int)
(declare-fun x676 () Int)
(declare-fun x47 () Bool)
(declare-fun x616 () Bool)
(declare-fun x544 () x1435)
(declare-fun x2188 () Bool)
(declare-fun x800 () Bool)
(declare-fun x326 () Int)
(declare-fun x1057 () Bool)
(declare-fun x1190 () Int)
(declare-fun x463 () Bool)
(declare-fun x2024 () Int)
(declare-fun x428 () x1435)
(declare-fun x432 () Int)
(declare-fun x397 () Bool)
(declare-fun x887 (x1435) Int)
(declare-fun x848 (Int) Int)
(declare-fun x2014 () Int)
(declare-fun x1069 () Bool)
(declare-fun x1854 () Int)
(declare-fun x440 () Int)
(declare-fun x1097 () Int)
(declare-fun x869 () Bool)
(declare-fun x1092 () Int)
(declare-fun x627 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x1904 () x1435)
(declare-fun x996 () x1435)
(declare-fun x2209 () Int)
(declare-fun x240 () Int)
(declare-fun x1710 () Bool)
(declare-fun x1548 () Int)
(declare-fun x1286 () Bool)
(declare-fun x986 () x1435)
(declare-fun x136 () Int)
(declare-fun x1459 () Int)
(declare-fun x2045 () Int)
(declare-fun x1813 () Int)
(declare-fun x2352 () Bool)
(declare-fun x2110 () x1435)
(declare-fun x1575 () Bool)
(declare-fun x42 () Int)
(declare-fun x2298 () x1435)
(declare-fun x1160 () Bool)
(declare-fun x579 () Int)
(declare-fun x459 () x1435)
(declare-fun x1491 () Int)
(declare-fun x710 (Int) Int)
(declare-fun x2195 () Int)
(declare-fun x1991 () Bool)
(declare-fun x224 () Bool)
(declare-fun x719 () Bool)
(declare-fun x1067 () Int)
(declare-fun x511 () Bool)
(declare-fun x2172 () Int)
(declare-fun x1774 () Int)
(declare-fun x819 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x1948 () x1435)
(declare-fun x1352 () Int)
(declare-fun x197 () x1435)
(declare-fun x2088 () Int)
(declare-fun x2316 () Int)
(declare-fun x1706 () x1435)
(declare-fun x1039 () Int)
(declare-fun x131 () Int)
(declare-fun x1678 () Int)
(declare-fun x2010 () Bool)
(declare-fun x468 () Int)
(declare-fun x1759 () Int)
(declare-fun x828 () x1435)
(declare-fun x249 () Int)
(declare-fun x946 () x1435)
(declare-fun x744 () Bool)
(declare-fun x2194 () Bool)
(declare-fun x1897 () Bool)
(declare-fun x2044 () Bool)
(declare-fun x1042 () Int)
(declare-fun x234 () Int)
(declare-fun x69 () Bool)
(declare-fun x2231 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x68 () Int)
(declare-fun x1932 () x1435)
(declare-fun x244 () Int)
(declare-fun x78 () Bool)
(declare-fun x1018 () x1435)
(declare-fun x514 () Int)
(declare-fun x1449 () Int)
(declare-fun x2285 () Int)
(declare-fun x1550 () Int)
(declare-fun x1432 () Int)
(declare-fun x133 () Bool)
(declare-fun x433 () Bool)
(declare-fun x2041 () Bool)
(declare-fun x508 (Int) Int)
(declare-fun x2107 () Int)
(declare-fun x366 () Bool)
(declare-fun x913 () Int)
(declare-fun x61 () Bool)
(declare-fun x1029 () Int)
(declare-fun x423 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x1783 () Int)
(declare-fun x907 () Int)
(declare-fun x609 () Int)
(declare-fun x340 () Int)
(declare-fun x1261 () Int)
(declare-fun x571 () Bool)
(declare-fun x2148 () Bool)
(declare-fun x2160 () Bool)
(declare-fun x2097 () Bool)
(declare-fun x567 () Bool)
(declare-fun x1404 () Int)
(declare-fun x843 () Int)
(declare-fun x985 () Int)
(declare-fun x2163 () Int)
(declare-fun x1824 () Bool)
(declare-fun x1027 () Int)
(declare-fun x482 () Int)
(declare-fun x2216 () Int)
(declare-fun x1256 () Bool)
(declare-fun x1968 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x1719 () Int)
(declare-fun x1720 () Bool)
(declare-fun x700 () Int)
(declare-fun x1401 () Int)
(declare-fun x2134 () Int)
(declare-fun x1179 (x1435) Int)
(declare-fun x569 () Int)
(declare-fun x1363 () x1435)
(declare-fun x2253 () Int)
(declare-fun x56 () Int)
(declare-fun x826 () x1435)
(declare-fun x1037 () Int)
(declare-fun x1001 () Int)
(declare-fun x968 () Bool)
(declare-fun x215 () Int)
(declare-fun x868 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x139 () Int)
(declare-fun x841 () Int)
(declare-fun x51 () Int)
(declare-fun x636 () Int)
(declare-fun x1619 () Bool)
(declare-fun x1699 () Int)
(declare-fun x701 () Bool)
(declare-fun x1513 () Int)
(declare-fun x1515 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x1379 () Int)
(declare-fun x464 () Bool)
(declare-fun x4 () Int)
(declare-fun x1021 () Int)
(declare-fun x1530 () Int)
(declare-fun x515 () Bool)
(declare-fun x2100 () Int)
(declare-fun x2346 () Bool)
(declare-fun x878 () Int)
(declare-fun x220 () Int)
(declare-fun x1028 () Int)
(declare-fun x2176 () Int)
(declare-fun x1038 () Bool)
(declare-fun x751 () Int)
(declare-fun x661 () Int)
(declare-fun x1294 () Int)
(declare-fun x1187 () Int)
(declare-fun x596 () Int)
(declare-fun x2309 () Bool)
(declare-fun x995 () Int)
(declare-fun x1536 () Bool)
(declare-fun x1746 () Int)
(declare-fun x267 () Bool)
(declare-fun x1876 () Int)
(declare-fun x925 () Int)
(declare-fun x1006 () x1435)
(declare-fun x612 () Int)
(declare-fun x192 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x121 () Bool)
(declare-fun x2167 () Int)
(declare-fun x1578 () Int)
(declare-fun x2118 () x1435)
(declare-fun x50 () Bool)
(declare-fun x2251 () Bool)
(declare-fun x114 () Int)
(declare-fun x1830 () Int)
(declare-fun x732 () Bool)
(declare-fun x1996 () Int)
(declare-fun x1755 () Bool)
(declare-fun x504 () Bool)
(declare-fun x1407 () x1435)
(declare-fun x1805 () Bool)
(declare-fun x850 (x1435) Int)
(declare-fun x1335 () Int)
(declare-fun x477 () Bool)
(declare-fun x1251 () Int)
(declare-fun x166 () Int)
(declare-fun x1521 () Int)
(declare-fun x541 () Int)
(declare-fun x2193 () Bool)
(declare-fun x1321 () x1435)
(declare-fun x492 () Int)
(declare-fun x1977 () Int)
(declare-fun x721 () Int)
(declare-fun x452 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x573 () Int)
(declare-fun x2383 () Int)
(declare-fun x1625 () Int)
(declare-fun x881 () Bool)
(declare-fun x153 () Bool)
(declare-fun x412 () Int)
(declare-fun x2115 () Bool)
(declare-fun x794 () Int)
(declare-fun x495 () Int)
(declare-fun x128 () Bool)
(declare-fun x2247 () Int)
(declare-fun x1853 () Bool)
(declare-fun x212 () x1435)
(declare-fun x399 () x1435)
(declare-fun x1173 () Int)
(declare-fun x619 () Bool)
(declare-fun x1850 () Bool)
(declare-fun x902 () Int)
(declare-fun x34 () Int)
(declare-fun x606 () Bool)
(declare-fun x1693 () Bool)
(declare-fun x1477 (Int) Int)
(declare-fun x1697 () Int)
(declare-fun x1527 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x1858 () Bool)
(declare-fun x135 () Int)
(declare-fun x1831 () Int)
(declare-fun x891 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x1111 () Int)
(declare-fun x987 () Int)
(declare-fun x297 () Bool)
(declare-fun x1284 () Int)
(declare-fun x2303 () Int)
(declare-fun x2261 () Bool)
(declare-fun x2086 () x1435)
(declare-fun x1751 () x1435)
(declare-fun x2299 () x1435)
(declare-fun x624 () x1435)
(declare-fun x1483 () x1435)
(declare-fun x2049 () Bool)
(declare-fun x1644 () x1435)
(declare-fun x187 () Int)
(declare-fun x470 () x1435)
(declare-fun x2392 () x1435)
(declare-fun x1745 () Int)
(declare-fun x2349 () Bool)
(declare-fun x1120 () Int)
(declare-fun x2240 () x1435)
(declare-fun x1614 () Bool)
(declare-fun x1690 () Int)
(declare-fun x835 () Int)
(declare-fun x251 () x1435)
(declare-fun x2222 () Int)
(declare-fun x2306 () Bool)
(declare-fun x77 () Int)
(declare-fun x1052 () Int)
(declare-fun x282 () Bool)
(declare-fun x2091 (Int) Int)
(declare-fun x1202 () Int)
(declare-fun x265 () x1435)
(declare-fun x1310 () Int)
(declare-fun x1909 () x1435)
(declare-fun x1180 () Int)
(declare-fun x60 () Int)
(declare-fun x623 () Bool)
(declare-fun x1711 () x1435)
(declare-fun x920 () Int)
(declare-fun x46 (Int) Int)
(declare-fun x2139 () Bool)
(declare-fun x1380 () Int)
(declare-fun x2381 () Bool)
(declare-fun x2208 () x1435)
(declare-fun x539 () Int)
(declare-fun x1208 () Int)
(declare-fun x1979 () Int)
(declare-fun x1186 () Int)
(declare-fun x1319 () Int)
(declare-fun x1043 () Bool)
(declare-fun x2343 () Bool)
(declare-fun x1317 () Int)
(declare-fun x510 () Int)
(declare-fun x1070 () Bool)
(declare-fun x1457 () Int)
(declare-fun x644 () Int)
(declare-fun x349 (Int) x1435)
(declare-fun x289 (Int) Int)
(declare-fun x2227 () Int)
(declare-fun x1767 () x1435)
(declare-fun x923 () x1435)
(declare-fun x716 () Int)
(declare-fun x1454 () Bool)
(declare-fun x892 () Bool)
(declare-fun x2161 () Bool)
(declare-fun x634 () Int)
(declare-fun x1605 () Int)
(declare-fun x204 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x405 () Int)
(declare-fun x417 () Bool)
(declare-fun x587 () Int)
(declare-fun x213 () Bool)
(declare-fun x988 () Bool)
(declare-fun x1688 () Int)
(declare-fun x323 () Int)
(declare-fun x1386 () Bool)
(declare-fun x1497 () Int)
(declare-fun x1068 () Int)
(declare-fun x462 () Bool)
(declare-fun x1622 () Bool)
(declare-fun x1232 () Int)
(declare-fun x1331 () Int)
(declare-fun x1257 () Int)
(declare-fun x702 () Int)
(declare-fun x1522 () Int)
(declare-fun x1516 () Int)
(declare-fun x1820 () Bool)
(declare-fun x1465 () Int)
(declare-fun x692 () x1435)
(declare-fun x1072 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x2073 () Int)
(declare-fun x593 () Int)
(declare-fun x1048 () Bool)
(declare-fun x1934 () x1435)
(declare-fun x2339 () Int)
(declare-fun x1091 () Int)
(declare-fun x97 () Int)
(declare-fun x1796 () x1435)
(declare-fun x1035 () Bool)
(declare-fun x1956 () Int)
(declare-fun x1803 () Bool)
(declare-fun x2029 () Bool)
(declare-fun x715 () Bool)
(declare-fun x258 () Int)
(declare-fun x277 () Bool)
(declare-fun x1104 () Int)
(declare-fun x2277 () Int)
(declare-fun x1967 () Int)
(declare-fun x917 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x2185 () x1435)
(declare-fun x1413 () Bool)
(declare-fun x72 () Int)
(declare-fun x1912 () Bool)
(declare-fun x1391 () Bool)
(declare-fun x2070 () Int)
(declare-fun x1589 () Int)
(declare-fun x379 () Int)
(declare-fun x2215 () Int)
(declare-fun x1938 () Bool)
(declare-fun x1233 () Int)
(declare-fun x977 () Int)
(declare-fun x66 () Int)
(declare-fun x1423 () Bool)
(declare-fun x1760 (Int) Int)
(declare-fun x1348 () Int)
(declare-fun x2023 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x54 () x1435)
(declare-fun x679 () Bool)
(declare-fun x559 () Int)
(declare-fun x1282 () Bool)
(declare-fun x1325 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x80 () Bool)
(declare-fun x2060 () x1435)
(declare-fun x847 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x1919 () Int)
(declare-fun x1062 () Int)
(declare-fun x2239 () x1435)
(declare-fun x678 () x1435)
(declare-fun x1139 () Int)
(declare-fun x230 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x457 () Bool)
(declare-fun x2375 (x1435) Int)
(declare-fun x353 () Bool)
(declare-fun x873 () x1435)
(declare-fun x184 () Bool)
(declare-fun x103 () Int)
(declare-fun x519 () Int)
(declare-fun x2146 () x1435)
(declare-fun x2206 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x1212 () Int)
(declare-fun x2017 () Bool)
(declare-fun x1740 () Int)
(declare-fun x1869 () Int)
(declare-fun x1329 () Int)
(declare-fun x2290 (Int) Int)
(declare-fun x1687 () Bool)
(declare-fun x976 () Bool)
(declare-fun x343 () x1435)
(declare-fun x177 () Bool)
(declare-fun x312 () Bool)
(declare-fun x1612 () x1435)
(declare-fun x2265 (Int Int) Int)
(declare-fun x434 () Int)
(declare-fun x481 () Int)
(declare-fun x1086 () Bool)
(declare-fun x1546 () Bool)
(declare-fun x2243 () Bool)
(declare-fun x1375 () Int)
(declare-fun x1881 () x1435)
(declare-fun x953 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x2125 () Bool)
(declare-fun x1537 () x1435)
(declare-fun x2224 () Int)
(declare-fun x1655 () Int)
(declare-fun x1557 () Bool)
(declare-fun x1440 () Int)
(declare-fun x1486 () Int)
(declare-fun x2162 () Int)
(declare-fun x93 () Int)
(declare-fun x255 () Bool)
(declare-fun x1583 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x414 () Bool)
(declare-fun x1400 () Int)
(declare-fun x1734 () Bool)
(declare-fun x1691 () Int)
(declare-fun x2250 () Int)
(declare-fun x165 () Bool)
(declare-fun x2284 () Int)
(declare-fun x825 () Int)
(declare-fun x67 () Int)
(declare-fun x1601 () Int)
(declare-fun x23 () Bool)
(declare-fun x346 () Int)
(declare-fun x402 () Int)
(declare-fun x1355 () Int)
(declare-fun x2237 () Bool)
(declare-fun x105 () Int)
(declare-fun x1962 () Bool)
(declare-fun x1313 () Int)
(declare-fun x1915 (Int) Int)
(declare-fun x538 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x789 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x129 () Bool)
(declare-fun x84 () Int)
(declare-fun x2108 () Bool)
(declare-fun x2126 () Bool)
(declare-fun x533 () x1435)
(declare-fun x824 () Int)
(declare-fun x1200 () Int)
(declare-fun x2196 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x2190 () Bool)
(declare-fun x1011 () Int)
(declare-fun x1950 () x1435)
(declare-fun x12 () Int)
(declare-fun x1847 () Bool)
(declare-fun x752 () Bool)
(declare-fun x597 () x1435)
(declare-fun x1520 () Bool)
(declare-fun x834 () Int)
(declare-fun x714 () Int)
(declare-fun x1168 () Int)
(declare-fun x1503 (Int) Int)
(declare-fun x1664 () Int)
(declare-fun x877 () x1435)
(declare-fun x422 () Bool)
(declare-fun x39 () x1435)
(declare-fun x2039 () Bool)
(declare-fun x199 () Bool)
(declare-fun x479 () Int)
(declare-fun x615 () Bool)
(declare-fun x1510 () Int)
(declare-fun x866 () Int)
(declare-fun x1627 () Int)
(declare-fun x1727 () Bool)
(declare-fun x1826 () Int)
(declare-fun x933 () Int)
(declare-fun x2083 () Int)
(declare-fun x955 (x1435) Int)
(declare-fun x983 () Int)
(declare-fun x1563 () x1435)
(declare-fun x690 () Bool)
(declare-fun x1481 () Int)
(declare-fun x795 () Bool)
(declare-fun x1065 (x1435) Int)
(declare-fun x450 () x1435)
(declare-fun x532 () x1435)
(declare-fun x2121 () Int)
(declare-fun x705 () Bool)
(declare-fun x743 () x1435)
(declare-fun x436 () Bool)
(declare-fun x1144 () Int)
(declare-fun x201 () Bool)
(declare-fun x2187 () Int)
(declare-fun x435 (x1435) Int)
(declare-fun x392 () Bool)
(declare-fun x441 () Int)
(declare-fun x2379 () Bool)
(declare-fun x424 () Int)
(declare-fun x2016 () Bool)
(declare-fun x1147 () Int)
(declare-fun x425 (Int) Int)
(declare-fun x1541 () Bool)
(declare-fun x1994 (x1435) Int)
(declare-fun x2242 () Bool)
(declare-fun x802 () Bool)
(declare-fun x761 () Int)
(declare-fun x1223 () Bool)
(declare-fun x79 () Bool)
(declare-fun x140 () Bool)
(declare-fun x502 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x345 () Bool)
(declare-fun x777 () Bool)
(declare-fun x2063 () Int)
(declare-fun x2238 () Int)
(declare-fun x9 () Int)
(declare-fun x1695 () Int)
(declare-fun x21 () Int)
(declare-fun x1517 () Int)
(declare-fun x757 () x1435)
(declare-fun x1972 () Int)
(declare-fun x1833 () Bool)
(declare-fun x883 () Int)
(declare-fun x7 () Int)
(declare-fun x762 () Int)
(declare-fun x416 () Int)
(declare-fun x294 () Int)
(declare-fun x964 () x1435)
(declare-fun x241 () Int)
(declare-fun x232 () Int)
(declare-fun x1577 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x1653 () Int)
(declare-fun x2015 () Int)
(declare-fun x298 () Int)
(declare-fun x1750 (Int) Int)
(declare-fun x831 () Bool)
(declare-fun x94 () Bool)
(declare-fun x1618 () Int)
(declare-fun x1874 () Int)
(declare-fun x1020 () Int)
(declare-fun x2325 () Bool)
(declare-fun x832 () Bool)
(declare-fun x1955 (Int) Int)
(declare-fun x2312 () Int)
(declare-fun x1206 () Int)
(declare-fun x2351 () Bool)
(declare-fun x876 () Bool)
(declare-fun x2236 () Int)
(declare-fun x1472 () Int)
(declare-fun x2308 () Bool)
(declare-fun x13 () Int)
(declare-fun x2123 () Int)
(declare-fun x1217 () Int)
(declare-fun x1721 () x1435)
(declare-fun x1771 () Bool)
(declare-fun x1443 () x1435)
(declare-fun x472 () Int)
(declare-fun x383 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x756 () Int)
(declare-fun x1812 () Int)
(declare-fun x2156 () Int)
(declare-fun x1059 () Bool)
(declare-fun x2393 (Int Int) Int)
(declare-fun x903 () Bool)
(declare-fun x1679 () Int)
(declare-fun x1143 () Bool)
(declare-fun x2181 () Int)
(declare-fun x785 () Int)
(declare-fun x530 () x1435)
(declare-fun x520 () x1435)
(declare-fun x278 () Int)
(declare-fun x1383 () Int)
(declare-fun x55 () Bool)
(declare-fun x101 () Int)
(declare-fun x2087 () Int)
(declare-fun x176 () x1435)
(declare-fun x337 () Int)
(declare-fun x734 () Int)
(declare-fun x1474 () Bool)
(declare-fun x1411 () Bool)
(declare-fun x162 () Int)
(declare-fun x859 () Int)
(declare-fun x1382 () Int)
(declare-fun x28 () Bool)
(declare-fun x1266 () Bool)
(declare-fun x934 () Int)
(declare-fun x2368 () Bool)
(declare-fun x1007 () Int)
(declare-fun x44 () Int)
(declare-fun x1463 () Bool)
(declare-fun x2062 () Int)
(declare-fun x8 () x1435)
(declare-fun x2022 () Int)
(declare-fun x2089 () Bool)
(declare-fun x1119 (Int) Int)
(declare-fun x1493 () Int)
(declare-fun x401 () Int)
(declare-fun x2033 () Bool)
(declare-fun x2374 () Bool)
(declare-fun x339 () Bool)
(declare-fun x1753 () Int)
(declare-fun x2262 () Bool)
(declare-fun x1322 () x1435)
(declare-fun x1634 () Bool)
(declare-fun x2278 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x605 () x1435)
(declare-fun x160 () Int)
(declare-fun x1428 () Int)
(declare-fun x2340 () Int)
(declare-fun x2197 () Int)
(declare-fun x1045 () Bool)
(declare-fun x1905 () Int)
(declare-fun x1064 () Int)
(declare-fun x1019 () Bool)
(declare-fun x2249 () Bool)
(declare-fun x431 () Int)
(declare-fun x299 () Bool)
(declare-fun x509 () Int)
(declare-fun x2175 () Bool)
(declare-fun x1761 () Int)
(declare-fun x1014 () Bool)
(declare-fun x1581 () x1435)
(declare-fun x310 () x1435)
(declare-fun x2147 () Int)
(declare-fun x523 () x1435)
(declare-fun x2043 () x1435)
(declare-fun x118 () Int)
(declare-fun x1034 () Int)
(declare-fun x580 () Int)
(declare-fun x943 () Int)
(declare-fun x2232 () Bool)
(declare-fun x2094 () x1435)
(declare-fun x1882 () Int)
(declare-fun x527 () Int)
(declare-fun x932 () Int)
(declare-fun x1293 () Int)
(declare-fun x1843 () Int)
(declare-fun x620 () Int)
(declare-fun x1003 () Bool)
(declare-fun x1816 () Bool)
(declare-fun x1096 () Int)
(declare-fun x1992 () Int)
(declare-fun x738 () Int)
(declare-fun x1712 () x1435)
(declare-fun x1188 () Bool)
(declare-fun x1747 () x1435)
(declare-fun x238 (Int) Int)
(declare-fun x2267 () Int)
(declare-fun x725 () Bool)
(declare-fun x497 () Int)
(declare-fun x1074 () Bool)
(declare-fun x1395 () x1435)
(declare-fun x586 () Bool)
(declare-fun x190 () Int)
(declare-fun x2358 () x1435)
(declare-fun x1071 () Bool)
(declare-fun x99 (Int) Int)
(declare-fun x226 () Bool)
(declare-fun x1931 () Int)
(declare-fun x670 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x735 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x1502 () Int)
(declare-fun x1507 () Int)
(declare-fun x2056 () Int)
(declare-fun x1241 () Bool)
(declare-fun x2252 () Int)
(declare-fun x999 () Bool)
(declare-fun x1828 (Int) Int)
(declare-fun x2136 () Bool)
(declare-fun x1696 () Int)
(declare-fun x380 () x1435)
(declare-fun x517 () Int)
(declare-fun x1668 () Bool)
(declare-fun x1523 () x1435)
(declare-fun x1926 (Int) Int)
(declare-fun x236 () Int)
(declare-fun x1047 () x1435)
(declare-fun x1911 () Int)
(declare-fun x1670 () Bool)
(declare-fun x1961 () Int)
(declare-fun x1151 () Int)
(declare-fun x2202 () Int)
(declare-fun x2283 () Int)
(declare-fun x2184 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x370 () Int)
(declare-fun x329 () Int)
(declare-fun x967 () Bool)
(declare-fun x1201 (x1435) Int)
(declare-fun x395 () Int)
(declare-fun x1667 () Int)
(declare-fun x430 () Int)
(declare-fun x439 () Bool)
(declare-fun x1895 () Bool)
(declare-fun x332 () Int)
(declare-fun x1222 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x961 () Int)
(declare-fun x1439 () Int)
(declare-fun x810 () Int)
(declare-fun x1273 () Bool)
(declare-fun x2271 () Bool)
(declare-fun x113 () Int)
(declare-fun x2354 () x1435)
(declare-fun x1606 () Int)
(declare-fun x150 () x1435)
(declare-fun x2210 () x1435)
(declare-fun x1138 () Int)
(declare-fun x35 () Int)
(declare-fun x650 () Int)
(declare-fun x2212 () Bool)
(declare-fun x1328 () Int)
(declare-fun x2127 () Int)
(declare-fun x1649 () Int)
(declare-fun x1228 () Int)
(declare-fun x1885 () Int)
(declare-fun x2085 () Int)
(declare-fun x1862 () Int)
(declare-fun x916 () Int)
(declare-fun x1920 () Int)
(declare-fun x1170 () Bool)
(declare-fun x287 () Int)
(declare-fun x860 () x1435)
(declare-fun x456 (x1435) Int)
(declare-fun x1488 () Bool)
(declare-fun x555 () Int)
(declare-fun x550 () Int)
(declare-fun x2069 () Int)
(declare-fun x63 () Int)
(declare-fun x1861 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x142 () Int)
(declare-fun x1410 () Int)
(declare-fun x1255 () Bool)
(declare-fun x2204 () Int)
(declare-fun x1568 () Bool)
(declare-fun x1989 () Bool)
(declare-fun x2254 () x1435)
(declare-fun x804 () Int)
(declare-fun x484 () Int)
(declare-fun x664 () Int)
(declare-fun x1105 () Int)
(declare-fun x2273 () Int)
(declare-fun x1103 () Int)
(declare-fun x1880 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x1791 () Int)
(declare-fun x102 () x1435)
(declare-fun x1984 () x1435)
(declare-fun x1311 () Int)
(declare-fun x2310 () Int)
(declare-fun x279 () Int)
(declare-fun x969 () Bool)
(declare-fun x858 () Bool)
(declare-fun x788 () Bool)
(declare-fun x1528 () Int)
(declare-fun x1939 () x1435)
(declare-fun x897 () Int)
(declare-fun x1980 (Int) Int)
(declare-fun x1109 () Int)
(declare-fun x2116 () Int)
(declare-fun x2276 () Int)
(declare-fun x875 () Int)
(declare-fun x1123 () Bool)
(declare-fun x1964 () Int)
(declare-fun x1929 () x1435)
(declare-fun x1778 () Bool)
(declare-fun x1754 () Int)
(declare-fun x122 () Bool)
(declare-fun x246 () Int)
(declare-fun x1549 () Bool)
(declare-fun x594 () Int)
(declare-fun x769 () Int)
(declare-fun x1221 () Int)
(declare-fun x119 () Int)
(declare-fun x211 () Bool)
(declare-fun x2305 () Int)
(declare-fun x1789 () Int)
(declare-fun x26 () Int)
(declare-fun x154 () Bool)
(declare-fun x1049 (Int) Int)
(declare-fun x2300 () Int)
(declare-fun x648 () Int)
(declare-fun x306 () x1435)
(declare-fun x1570 () Int)
(declare-fun x2117 () Int)
(declare-fun x427 () Bool)
(declare-fun x1431 () Int)
(declare-fun x1703 () Int)
(declare-fun x1320 () Bool)
(declare-fun x1848 () x1435)
(declare-fun x144 () Int)
(declare-fun x487 () Bool)
(declare-fun x2165 () x1435)
(declare-fun x2064 () Bool)
(declare-fun x600 (Int) Int)
(declare-fun x546 () x1435)
(declare-fun x1701 () Int)
(declare-fun x663 () Int)
(declare-fun x167 () Int)
(declare-fun x1637 () x1435)
(declare-fun x837 () Int)
(declare-fun x899 () Int)
(declare-fun x610 (Int) Int)
(declare-fun x790 () x1435)
(declare-fun x1852 (Int) Int)
(declare-fun x989 () Int)
(declare-fun x729 () Int)
(declare-fun x1616 () x1435)
(declare-fun x419 () Int)
(declare-fun x1692 () Bool)
(declare-fun x2364 () Int)
(declare-fun x202 () x1435)
(declare-fun x2315 () Bool)
(declare-fun x1076 () Int)
(declare-fun x827 () Bool)
(declare-fun x348 () x1435)
(declare-fun x685 () x1435)
(declare-fun x2322 () Bool)
(declare-fun x40 () Bool)
(declare-fun x1921 () Bool)
(declare-fun x369 () Int)
(declare-fun x1158 () x1435)
(declare-fun x706 () Bool)
(declare-fun x1624 () x1435)
(declare-fun x1169 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x812 (Int) Int)
(declare-fun x2077 () Int)
(declare-fun x429 () Int)
(declare-fun x1917 () x1435)
(declare-fun x770 () Int)
(declare-fun x304 () Int)
(declare-fun x1433 () Bool)
(declare-fun x1859 () Int)
(declare-fun x936 () Int)
(declare-fun x1456 () Int)
(declare-fun x1571 (Int) Int)
(declare-fun x1609 () Int)
(declare-fun x1194 () Int)
(declare-fun x1364 () Int)
(declare-fun x2059 () Bool)
(declare-fun x2042 () Int)
(declare-fun x421 () Int)
(declare-fun x1023 () Int)
(declare-fun x147 () Int)
(declare-fun x1209 () Bool)
(declare-fun x1354 () Int)
(declare-fun x1585 () Bool)
(declare-fun x1295 () x1435)
(declare-fun x1569 () Int)
(declare-fun x1374 () Int)
(declare-fun x491 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x1508 () x1435)
(declare-fun x2304 () Bool)
(declare-fun x1729 (Int) Int)
(declare-fun x57 () Int)
(declare-fun x1446 () x1435)
(declare-fun x1377 () Int)
(declare-fun x2002 () Bool)
(declare-fun x577 () Bool)
(declare-fun x485 (Int) Int)
(declare-fun x1681 () Int)
(declare-fun x2327 () Int)
(declare-fun x998 () x1435)
(declare-fun x1888 (Int) Int)
(declare-fun x141 () Int)
(declare-fun x1082 () Bool)
(declare-fun x1412 () x1435)
(declare-fun x2235 () Bool)
(declare-fun x1941 () Bool)
(declare-fun x838 () Int)
(declare-fun x1957 () Bool)
(declare-fun x467 () Bool)
(declare-fun x1448 () x1435)
(declare-fun x1185 () x1435)
(declare-fun x1424 () Int)
(declare-fun x1090 () Int)
(declare-fun x1253 () Int)
(declare-fun x2347 () Int)
(declare-fun x1236 () Bool)
(declare-fun x2135 () Int)
(declare-fun x1819 (Int) Int)
(declare-fun x1008 () Int)
(declare-fun x1184 () Int)
(declare-fun x59 () Int)
(declare-fun x316 () Bool)
(declare-fun x803 (Int) Int)
(declare-fun x602 () Bool)
(declare-fun x551 () Int)
(declare-fun x1842 () x1435)
(declare-fun x2326 () x1435)
(declare-fun x1452 () Int)
(declare-fun x245 () Int)
(declare-fun x607 (Int) Int)
(declare-fun x2241 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x1908 () Int)
(declare-fun x2319 () Bool)
(declare-fun x1856 () Bool)
(declare-fun x218 () x1435)
(declare-fun x1314 () x1435)
(declare-fun x1093 (Int) Int)
(declare-fun x1005 () x1435)
(declare-fun x281 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x478 () Int)
(declare-fun x185 () x1435)
(declare-fun x668 () Int)
(declare-fun x1271 () x1435)
(declare-fun x1334 () x1435)
(declare-fun x200 () Bool)
(declare-fun x857 () x1435)
(declare-fun x556 () x1435)
(declare-fun x2026 () Bool)
(declare-fun x159 () Int)
(declare-fun x1504 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x391 () Bool)
(declare-fun x1421 () Int)
(declare-fun x2287 () Bool)
(declare-fun x494 (Int) Int)
(declare-fun x2268 () Bool)
(declare-fun x319 () Bool)
(declare-fun x466 () x1435)
(declare-fun x227 () Bool)
(declare-fun x1089 () x1435)
(declare-fun x2003 () Bool)
(declare-fun x1390 () Int)
(declare-fun x707 () Int)
(declare-fun x2331 () Int)
(declare-fun x1012 () Int)
(declare-fun x2078 () Int)
(declare-fun x2353 () Bool)
(declare-fun x181 () Bool)
(declare-fun x694 () Int)
(declare-fun x718 () x1435)
(declare-fun x1946 () Bool)
(declare-fun x910 () Int)
(declare-fun x1749 () Int)
(declare-fun x158 () x1435)
(declare-fun x763 () Int)
(declare-fun x1894 () Bool)
(declare-fun x505 () x1435)
(declare-fun x116 () Bool)
(declare-fun x1565 () Int)
(declare-fun x86 () Int)
(declare-fun x922 () Int)
(declare-fun x157 () Int)
(declare-fun x966 () Bool)
(declare-fun x1417 () Int)
(declare-fun x3 () x1435)
(declare-fun x1714 () Int)
(declare-fun x1552 () Bool)
(declare-fun x739 () x1435)
(declare-fun x1784 () Int)
(declare-fun x81 () Bool)
(declare-fun x1762 () Int)
(declare-fun x984 () Int)
(declare-fun x1587 () x1435)
(declare-fun x444 () Bool)
(declare-fun x222 () Int)
(declare-fun x2171 () Int)
(declare-fun x2218 () x1435)
(declare-fun x628 () Bool)
(declare-fun x1384 () Int)
(declare-fun x592 () Bool)
(declare-fun x981 () Bool)
(declare-fun x576 () Int)
(declare-fun x1482 () Bool)
(declare-fun x1773 () x1435)
(declare-fun x1840 () Int)
(declare-fun x229 () Bool)
(declare-fun x1436 () Int)
(declare-fun x317 () Int)
(declare-fun x354 (Int Int) Int)
(declare-fun x1806 () x1435)
(declare-fun x293 () x1435)
(declare-fun x1689 () Bool)
(declare-fun x2384 () Bool)
(declare-fun x324 () x1435)
(declare-fun x749 () Bool)
(declare-fun x971 () Int)
(declare-fun x488 () Bool)
(declare-fun x296 () Int)
(declare-fun x643 () Bool)
(declare-fun x382 () Bool)
(declare-fun x861 () Int)
(declare-fun x1594 () x1435)
(declare-fun x406 () Bool)
(declare-fun x2057 () Bool)
(declare-fun x771 () Bool)
(declare-fun x1641 () Int)
(declare-fun x1851 () x1435)
(declare-fun x1406 () Int)
(declare-fun x1835 () Bool)
(declare-fun x1584 () Bool)
(declare-fun x1798 () Int)
(declare-fun x1357 () Bool)
(declare-fun x351 () Int)
(declare-fun x1420 () Int)
(declare-fun x1810 () Int)
(declare-fun x2286 () Bool)
(declare-fun x2149 () x1435)
(declare-fun x490 () Bool)
(declare-fun x1923 () x1435)
(declare-fun x1613 () Int)
(declare-fun x687 () Int)
(declare-fun x1444 () x1435)
(declare-fun x2168 () Int)
(declare-fun x1041 () Int)
(declare-fun x1087 () Int)
(declare-fun x2027 () Bool)
(declare-fun x2186 () Int)
(declare-fun x127 () Int)
(declare-fun x1365 () Int)
(declare-fun x1389 () Int)
(declare-fun x851 () Int)
(declare-fun x535 () x1435)
(declare-fun x2314 () Int)
(declare-fun x31 () Bool)
(declare-fun x1564 () Int)
(declare-fun x43 () Bool)
(declare-fun x1259 () x1435)
(declare-fun x898 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x1900 () Int)
(declare-fun x1958 () Int)
(declare-fun x2350 () Int)
(declare-fun x924 () Int)
(declare-fun x124 () Bool)
(declare-fun x1013 () Int)
(declare-fun x1686 () Int)
(declare-fun x280 () Int)
(declare-fun x1913 () Int)
(declare-fun x2281 () Bool)
(declare-fun x123 () x1435)
(declare-fun x622 () Int)
(declare-fun x1496 () Int)
(declare-fun x1004 () Int)
(declare-fun x662 () x1435)
(declare-fun x1061 () Int)
(declare-fun x2225 () x1435)
(declare-fun x2282 () Bool)
(declare-fun x2275 () Bool)
(declare-fun x829 () Int)
(declare-fun x174 () x1435)
(declare-fun x216 () x1435)
(declare-fun x522 () Int)
(declare-fun x274 () x1435)
(declare-fun x1960 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x1418 () x1435)
(declare-fun x1732 () Int)
(declare-fun x62 () Int)
(declare-fun x1283 () Int)
(declare-fun x1722 () Bool)
(declare-fun x833 (Int) Int)
(declare-fun x207 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x1744 () Int)
(declare-fun x1717 () Bool)
(declare-fun x1369 (Int) Int)
(declare-fun x1289 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x286 () Int)
(declare-fun x962 () Bool)
(declare-fun x168 () Int)
(declare-fun x37 () Bool)
(declare-fun x396 () Int)
(declare-fun x1163 () Int)
(declare-fun x2355 () Int)
(declare-fun x1359 () x1435)
(declare-fun x1131 () Int)
(declare-fun x2 () Bool)
(declare-fun x1726 () Int)
(declare-fun x1128 () Bool)
(declare-fun x148 () Int)
(declare-fun x1134 () Int)
(declare-fun x104 () Int)
(declare-fun x2061 () Int)
(declare-fun x1792 () Int)
(declare-fun x2230 () x1435)
(declare-fun x991 () Int)
(declare-fun x52 () Bool)
(declare-fun x629 () Int)
(declare-fun x394 () Bool)
(declare-fun x642 () Int)
(declare-fun x1447 () Int)
(declare-fun x1889 () Bool)
(declare-fun x760 () Int)
(declare-fun x1857 () Int)
(declare-fun x1360 () Bool)
(declare-fun x781 () Int)
(declare-fun x974 () Int)
(declare-fun x2098 () Int)
(declare-fun x1036 () Int)
(declare-fun x1455 () Int)
(declare-fun x783 () Bool)
(declare-fun x1924 () Bool)
(declare-fun x542 () Bool)
(declare-fun x453 () Bool)
(declare-fun x2356 () Int)
(declare-fun x465 () x1435)
(declare-fun x2244 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x22 () Bool)
(declare-fun x1674 () x1435)
(declare-fun x1603 () x1435)
(declare-fun x2081 () Bool)
(declare-fun x979 () x1435)
(declare-fun x601 () Int)
(declare-fun x195 () Int)
(declare-fun x208 () Int)
(declare-fun x1176 () Int)
(declare-fun x384 (Int) Int)
(declare-fun x808 (Int) Int)
(declare-fun x386 () x1435)
(declare-fun x311 () Int)
(declare-fun x1127 () Int)
(declare-fun x512 () Int)
(declare-fun x2357 () Int)
(declare-fun x1580 () Int)
(declare-fun x247 () Bool)
(declare-fun x830 () Int)
(declare-fun x2344 () Bool)
(declare-fun x806 () Bool)
(declare-fun x2199 () Bool)
(declare-fun x1910 () x1435)
(declare-fun x1930 (x1435) Int)
(declare-fun x2096 () Bool)
(declare-fun x885 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x1700 (x1435) Int)
(declare-fun x1511 () Bool)
(declare-fun x2142 (Int) Int)
(declare-fun x640 () Int)
(declare-fun x975 () x1435)
(declare-fun x921 () Bool)
(declare-fun x100 () Bool)
(declare-fun x1878 () Int)
(declare-fun x1468 () Int)
(declare-fun x1101 () Int)
(declare-fun x16 () Bool)
(declare-fun x782 () x1435)
(declare-fun x1362 () Int)
(declare-fun x1704 () x1435)
(declare-fun x2141 () Int)
(declare-fun x2211 () Int)
(declare-fun x460 () Int)
(declare-fun x110 () Int)
(declare-fun x1702 () Int)
(declare-fun x328 () Bool)
(declare-fun x305 () Int)
(declare-fun x963 () x1435)
(declare-fun x728 () Bool)
(declare-fun x786 () Bool)
(declare-fun x874 () Int)
(declare-fun x746 () Bool)
(declare-fun x449 () Int)
(declare-fun x1490 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x637 () Bool)
(declare-fun x1415 () Int)
(declare-fun x219 () Int)
(declare-fun x1610 () Int)
(declare-fun x2138 () x1435)
(declare-fun x513 () Int)
(declare-fun x2120 () Int)
(declare-fun x1665 () Bool)
(declare-fun x71 () x1435)
(declare-fun x1943 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x1330 () Int)
(declare-fun x1165 () Int)
(declare-fun x1983 () Bool)
(declare-fun x1396 () Int)
(declare-fun x19 () x1435)
(define-fun x2112 ((x1435 x1435) (x96 Int)) x1435 (ite ((_ is x722) x1435) (x722 (x1676 x1435) (+ (x1268 x1435) x96)) (ite ((_ is x338) x1435) (x338 (x613 x1435) (x393 x1435) (+ (x626 x1435) x96)) (x1299 (+ x96 (x109 x1435))))))
(define-fun x2363 ((x1249 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1249) (>= x1249 0)) x1249 (- x1249 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1353 ((x1249 Int)) Int (ite (and (>= x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1249 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1249) x1249))
(define-fun x759 ((x1249 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1249) (<= 0 x1249)) x1249 (ite (and (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x1249) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1249)) (- x1249 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1249) (> 0 x1249)) (+ x1249 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x145 x1249 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x846 ((x1467 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1467) (<= 0 x1467)))
(define-fun x1621 ((x1467 Int)) Bool (and (< x1467 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1467)))
(define-fun x1274 ((x1467 Int) (x525 Int)) Bool (= (x836 x1467 x525) (* x525 x1467)))
(define-fun x1247 ((x1467 Int) (x525 Int)) Bool (=> (not (= 0 x1467)) (= (= x525 (x2393 (x759 (* x1467 x525)) x1467)) (and (< (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* x525 x1467)) (< (* x525 x1467) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x675 ((x1467 Int) (x525 Int)) Bool (= (> x525 (x2393 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1467)) (> (* x525 x1467) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x1547 ((x1467 Int) (x525 Int)) Bool (and (x1247 x1467 x525) (x675 x1467 x525) (x1274 x1467 x525)))
(define-fun x1827 ((x1467 Int)) Bool (and (= 0 (x836 0 x1467)) (= 0 (x836 x1467 0))))
(define-fun x155 ((x1467 Int)) Bool (and (= x1467 (x836 1 x1467)) (= (x836 x1467 1) x1467)))
(define-fun x2257 ((x1467 Int)) Bool (and (x1827 x1467) (x155 x1467)))
(define-fun x548 ((x1467 Int)) Bool (and (= x1467 (x2265 x1467 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x2265 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1467) x1467)))
(define-fun x1561 ((x1467 Int)) Bool (and (= (x2265 x1467 0) 0) (= (x2265 0 x1467) 0)))
(define-fun x1292 ((x1467 Int)) Bool (= x1467 (x2265 x1467 x1467)))
(define-fun x1098 ((x1467 Int)) Bool (and (x1561 x1467) (x548 x1467) (x1292 x1467)))
(define-fun x1781 ((x1467 Int)) Bool (= (x2265 1461501637330902918203684832716283019655932542975 x1467) (x2265 1461501637330902918203684832716283019655932542975 (x2265 1461501637330902918203684832716283019655932542975 x1467))))
(define-fun x2128 ((x1467 Int)) Bool (=> (and (< x1467 1461501637330902918203684832716283019655932542976) (<= 0 x1467)) (= (x2265 1461501637330902918203684832716283019655932542975 x1467) x1467)))
(define-fun x288 ((x1467 Int)) Bool (=> (= (x2265 1461501637330902918203684832716283019655932542975 x1467) x1467) (and (< x1467 1461501637330902918203684832716283019655932542976) (<= 0 x1467))))
(define-fun x871 ((x1467 Int)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x1467) (< x1467 2923003274661805836407369665432566039311865085952)) (= (x2265 1461501637330902918203684832716283019655932542975 x1467) (- x1467 1461501637330902918203684832716283019655932542976))))
(define-fun x1237 ((x1467 Int) (x525 Int)) Bool (and (>= x525 0) (= x1467 (+ (* 1461501637330902918203684832716283019655932542976 x525) (x2265 1461501637330902918203684832716283019655932542975 x1467)))))
(define-fun x631 ((x1467 Int) (x461 Int)) Bool (and (x2128 x1467) (x871 x1467) (x1781 x1467) (x1237 x1467 x461) (x288 x1467)))
(define-fun x2113 ((x1467 Int) (x525 Int)) Bool (= (x2265 x525 x1467) (x2265 x1467 x525)))
(define-fun x2217 ((x1467 Int) (x525 Int)) Bool (and (<= 0 (x2265 x1467 x525)) (=> (<= 0 x525) (>= x525 (x2265 x1467 x525))) (=> (>= x1467 0) (>= x1467 (x2265 x1467 x525)))))
(define-fun x956 ((x1467 Int) (x525 Int)) Bool (and (x2113 x1467 x525) (x2217 x1467 x525)))
(define-fun x1361 ((x1467 Int) (x461 Int)) Bool (and (x956 x1467 1461501637330902918203684832716283019655932542975) (x631 x1467 x461)))
(define-fun x2371 ((x1467 Int) (x525 Int)) Bool (=> (and (> x1467 0) (< 0 x525)) (and (>= x1467 (x2393 x1467 x525)) (>= (x2393 x1467 x525) 0))))
(define-fun x2313 ((x1467 Int) (x525 Int)) Bool (=> (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1467) (>= x1467 0) (< x525 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x525)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2393 x1467 x525)) (<= 0 (x2393 x1467 x525)))))
(define-fun x879 ((x1467 Int) (x525 Int)) Bool (=> (and (< x525 x1467) (> x525 1)) (< (x2393 x1467 x525) x1467)))
(define-fun x5 ((x1467 Int) (x525 Int)) Bool (=> (and (< 0 x1467) (> x525 0)) (= (> x525 x1467) (= (x2393 x1467 x525) 0))))
(define-fun x1366 ((x1467 Int) (x525 Int)) Bool (=> (and (< 0 x1467) (< 0 x525)) (and (<= (x836 (x2393 x1467 x525) x525) x1467) (> (x836 (x2393 x1467 x525) x525) (- x1467 x525)))))
(define-fun x152 ((x1467 Int) (x525 Int)) Bool (and (x5 x1467 x525) (x879 x1467 x525) (x2313 x1467 x525) (x1366 x1467 x525) (x2371 x1467 x525)))
(define-fun x1936 ((x1467 Int)) Bool (= (x2393 0 x1467) 0))
(define-fun x448 ((x1467 Int)) Bool (= x1467 (x2393 x1467 1)))
(define-fun x727 ((x1467 Int)) Bool (=> (not (= x1467 0)) (= (x2393 x1467 x1467) 1)))
(define-fun x1902 ((x1467 Int)) Bool (and (x1936 x1467) (x448 x1467) (x727 x1467)))
(define-fun x1398 ((x1467 Int) (x525 Int)) Bool (= (x836 x1467 x525) (x836 x525 x1467)))
(define-fun x264 ((x1467 Int) (x525 Int)) Bool (and (=> (and (< x525 0) (> 0 x1467)) (> (x836 x1467 x525) 0)) (=> (and (> 0 x525) (> x1467 0)) (< (x836 x1467 x525) 0)) (=> (and (> x1467 0) (> x525 0)) (> (x836 x1467 x525) 0)) (=> (and (> x525 0) (< x1467 0)) (< (x836 x1467 x525) 0))))
(define-fun x2143 ((x1467 Int) (x525 Int)) Bool (=> (and (< 0 x525) (> x1467 0)) (and (<= x1467 (x836 x1467 x525)) (>= (x836 x1467 x525) x525))))
(define-fun x2035 ((x1467 Int) (x525 Int)) Bool (=> (not (= x1467 0)) (= (and (< (x836 x1467 x525) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x836 x1467 x525))) (= (x2393 (x759 (x836 x1467 x525)) x1467) x525))))
(define-fun x750 ((x1467 Int) (x525 Int)) Bool (=> (and (not (= 0 x525)) (= (x2393 (x836 x1467 x525) x1467) x525) (not (= x1467 0))) (= (x2393 (x836 x1467 x525) x525) x1467)))
(define-fun x76 ((x1467 Int) (x525 Int)) Bool (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x836 x1467 x525)) (< (x2393 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1467) x525)))
(define-fun x1084 ((x1467 Int) (x525 Int)) Bool (and (x2035 x1467 x525) (x750 x1467 x525) (x1398 x1467 x525) (x264 x1467 x525) (x2143 x1467 x525) (x76 x1467 x525)))
(define-fun x175 ((x1467 Int) (x525 Int)) Bool (=> (and (> x1467 0) (> x525 0)) (and (< (- x1467 x525) (* (x2393 x1467 x525) x525)) (>= x1467 (* x525 (x2393 x1467 x525))))))
(define-fun x303 ((x1467 Int) (x525 Int)) Bool (and (x5 x1467 x525) (x175 x1467 x525) (x2371 x1467 x525) (x879 x1467 x525) (x2313 x1467 x525)))
(define-fun x111 ((x1467 Int)) Bool (= (x2265 26959946667150639794667015087019630673637144422540572481103610249215 (x2265 26959946667150639794667015087019630673637144422540572481103610249215 x1467)) (x2265 26959946667150639794667015087019630673637144422540572481103610249215 x1467)))
(define-fun x447 ((x1467 Int)) Bool (=> (and (<= 0 x1467) (< x1467 26959946667150639794667015087019630673637144422540572481103610249216)) (= x1467 (x2265 26959946667150639794667015087019630673637144422540572481103610249215 x1467))))
(define-fun x1657 ((x1467 Int)) Bool (=> (= x1467 (x2265 26959946667150639794667015087019630673637144422540572481103610249215 x1467)) (and (<= 0 x1467) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1467))))
(define-fun x1155 ((x1467 Int)) Bool (=> (and (> 53919893334301279589334030174039261347274288845081144962207220498432 x1467) (>= x1467 26959946667150639794667015087019630673637144422540572481103610249216)) (= (- x1467 26959946667150639794667015087019630673637144422540572481103610249216) (x2265 26959946667150639794667015087019630673637144422540572481103610249215 x1467))))
(define-fun x404 ((x1467 Int) (x525 Int)) Bool (and (= x1467 (+ (* x525 26959946667150639794667015087019630673637144422540572481103610249216) (x2265 26959946667150639794667015087019630673637144422540572481103610249215 x1467))) (<= 0 x525)))
(define-fun x1246 ((x1467 Int) (x461 Int)) Bool (and (x1155 x1467) (x404 x1467 x461) (x111 x1467) (x447 x1467) (x1657 x1467)))
(define-fun x2153 ((x1467 Int) (x461 Int)) Bool (and (x1246 x1467 x461) (x956 x1467 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x2337 ((x1467 Int)) Bool (= (x2265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1467) (x2265 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1467))))
(define-fun x221 ((x1467 Int)) Bool (=> (and (> 32 x1467) (<= 0 x1467)) (= (x2265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1467) 0)))
(define-fun x1152 ((x1467 Int) (x525 Int) (x275 Int) (x1113 Int)) Bool (and (> 32 x525) (>= x275 0) (>= x525 0) (> 1 x1113) (= (+ x525 (* x1113 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 32 x275)) x1467) (< x275 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= (* 32 x275) (x2265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1467)) (>= x1113 0)))
(define-fun x1030 ((x1467 Int) (x807 Int) (x1495 Int) (x649 Int)) Bool (and (x221 x1467) (x2337 x1467) (x1152 x1467 x807 x1495 x649)))
(define-fun x1598 ((x1467 Int) (x807 Int) (x1495 Int) (x649 Int)) Bool (and (x956 x1467 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1030 x1467 x807 x1495 x649)))
(define-fun x584 ((x1272 Int)) Int (ite (> x1097 x1272) (x1760 x1272) 0))
(define-fun x503 ((x1272 Int)) Int (x2048 x1272))
(define-fun x206 ((x1272 Int)) Int (x2048 x1272))
(define-fun x959 ((x1272 Int)) Int (x1888 x1272))
(define-fun x733 ((x1272 Int)) Int (x1888 x1272))
(define-fun x1661 ((x1272 Int)) Int (x494 x1272))
(define-fun x1339 ((x1272 Int)) Int (x494 x1272))
(define-fun x307 ((x1272 Int)) Int (x1337 x1272))
(define-fun x844 ((x1272 Int)) Int (x1337 x1272))
(define-fun x1471 ((x1272 x1435)) Int (ite (= x1272 (x349 274184521717934524641157099916833587206)) x604 (x2105 x1272)))
(define-fun x1591 ((x1272 x1435)) Int (ite (= x1272 (x349 x734)) x252 (x1471 x1272)))
(define-fun x1429 ((x1272 x1435)) Int (ite (= (x349 x734) x1272) x42 (x1591 x1272)))
(define-fun x1115 ((x1272 x1435)) Int (ite (= x1272 (x349 274184521717934524641157099916833587206)) x473 (x1429 x1272)))
(define-fun x1809 ((x1272 x1435)) Int (ite x670 (x1115 x1272) (x2105 x1272)))
(define-fun x20 ((x1272 x1435)) Int (ite (= x1272 x2103) x878 (x456 x1272)))
(define-fun x1970 ((x1272 x1435)) Int (ite (= x202 x1272) x431 (x20 x1272)))
(define-fun x1725 ((x1272 x1435)) Int (ite (= x1272 x685) x1046 (x850 x1272)))
(define-fun x698 ((x1272 x1435)) Int (ite (= x1272 x965) x455 (x1725 x1272)))
(define-fun x1402 ((x1272 x1435)) Int (ite (= x2138 x1272) x2092 (x1201 x1272)))
(define-fun x1620 ((x1272 x1435)) Int (ite x670 (x1402 x1272) (x1201 x1272)))
(define-fun x330 ((x1272 x1435)) Int (ite (= x1773 x1272) x1146 (x435 x1272)))
(define-fun x1002 ((x1272 x1435)) Int (ite (= x1272 x2365) x1146 (x435 x1272)))
(define-fun x2011 ((x1272 x1435)) Int (ite (and (not x149) x2152) (x330 x1272) (x1002 x1272)))
(define-fun x768 ((x1272 x1435)) Int (ite (= x2165 x1272) x509 (x791 x1272)))
(define-fun x1175 ((x1272 x1435)) Int (ite (= x1272 x2263) x776 (x1994 x1272)))
(define-fun x2259 ((x1272 Int)) Int (ite (= x1272 x1954) x1416 (x238 x1272)))
(define-fun x437 ((x1272 Int)) Int (ite (= x1272 x127) x215 (x2259 x1272)))
(define-fun x1118 ((x1272 Int)) Int (ite (= x1272 x169) x1599 (x833 x1272)))
(define-fun x2155 ((x1272 Int)) Int (ite (= x1061 x1272) x1823 (x437 x1272)))
(define-fun x1476 ((x1272 Int)) Int (ite (= x1272 x1627) x205 (x425 x1272)))
(define-fun x655 ((x1272 Int)) Int (ite (= x1272 x1746) 0 (x1980 x1272)))
(define-fun x476 ((x1272 x1435)) Int (ite (= x1272 x1368) x1146 (x2342 x1272)))
(define-fun x361 ((x1272 x1435)) Int (ite (= x1272 x2043) x1146 (x2342 x1272)))
(define-fun x1560 ((x1272 x1435)) Int (ite (= x1272 x216) x1146 (x2342 x1272)))
(define-fun x1786 ((x1272 x1435)) Int (ite (and x263 (not x1342) (not x1921)) (x476 x1272) (ite (and (not x1921) x263 x1342) (x361 x1272) (x1560 x1272))))
(define-fun x941 ((x1272 x1435)) Int (ite (= x1272 x1817) x171 (x1930 x1272)))
(define-fun x89 ((x1272 x1435)) Int (ite (and x263 x1890) (x1930 x1272) (x941 x1272)))
(define-fun x565 ((x1272 Int)) Int (ite (= 128 x1272) x33 (x2055 x1272)))
(define-fun x1730 ((x1272 Int)) Int (ite (= 160 x1272) x1174 (x1102 x1272)))
(define-fun x2328 ((x1272 x1435)) Int (ite (= x1363 x1272) x44 (x578 x1272)))
(define-fun x1225 ((x1272 x1435)) Int (ite (and x1717 x2152) (x578 x1272) (x2328 x1272)))
(define-fun x1150 ((x1272 Int)) Int (ite (= x126 x1272) x912 (x485 x1272)))
(define-fun x1903 ((x1272 Int)) Int (ite (= x1272 x1801) x2013 (x1049 x1272)))
(define-fun x331 ((x1272 Int)) Int (ite (and x1556 (not x1058) (not x942)) (x1980 x1272) (x655 x1272)))
(define-fun x1267 ((x1272 Int)) Int (ite (= x1272 0) 1 (x1181 x1272)))
(define-fun x1470 ((x1272 x1435)) Int (ite (= x1272 x2293) x1297 (x1742 x1272)))
(define-fun x27 ((x1272 x1435)) Int (ite (= x1272 x938) x920 (x1470 x1272)))
(define-fun x1290 ((x1272 x1435)) Int (ite x1083 (ite (and x813 x1003) (x1742 x1272) (x27 x1272)) (x1742 x1272)))
(define-fun x2270 ((x1272 x1435)) Int (ite (= x1272 x1430) x2053 (x2336 x1272)))
(define-fun x1865 ((x1272 x1435)) Int (ite (= x1272 x1323) x1317 (x2270 x1272)))
(define-fun x322 ((x1272 x1435)) Int (ite x1083 (ite (and x813 x1003) (x1865 x1272) (x2336 x1272)) (x2336 x1272)))
(define-fun x1802 ((x1272 x1435)) Int (ite (= x2392 x1272) x550 (x1700 x1272)))
(define-fun x591 ((x1272 x1435)) Int (ite (and (not x353) x581) (x1802 x1272) (x1700 x1272)))
(define-fun x1579 ((x1272 x1435)) Int (ite (= x1005 x1272) x415 (x954 x1272)))
(define-fun x1145 ((x1272 x1435)) Int (ite (and (not x1038) x2016 (not x1035)) (x1579 x1272) (x954 x1272)))
(define-fun x2279 ((x1272 Int)) Int (ite (= x1272 x142) x249 (x2142 x1272)))
(define-fun x1804 ((x1272 Int)) Int (ite (= x843 x1272) x370 (x2279 x1272)))
(define-fun x1281 ((x1272 Int)) Int (ite (= x855 x1272) x2062 (x2137 x1272)))
(define-fun x566 ((x1272 Int)) Int (ite (= x1272 x82) x1379 (x1804 x1272)))
(define-fun x1782 ((x1272 Int)) Int (ite (= x1956 x1272) x1228 (x1025 x1272)))
(define-fun x900 ((x1272 Int)) Int (ite (= x1272 x2052) 0 (x2290 x1272)))
(define-fun x2030 ((x1272 Int)) Int (ite (= 128 x1272) x579 (x2341 x1272)))
(define-fun x1022 ((x1272 Int)) Int (ite (= x1272 160) x178 (x2191 x1272)))
(define-fun x359 ((x1272 Int)) Int (ite (= x1197 x1272) x669 (x2274 x1272)))
(define-fun x545 ((x1272 Int)) Int (ite (= x1272 x1389) x1566 (x1503 x1272)))
(define-fun x1887 ((x1272 Int)) Int (ite (and (not x2129) (not x122) x1557) (x2290 x1272) (x900 x1272)))
(define-fun x772 ((x1272 x1435)) Int (ite (= x1272 (x349 274184521717934524641157099916833587206)) x663 (x1809 x1272)))
(define-fun x625 ((x1272 x1435)) Int (ite (= (x349 x1331) x1272) x793 (x772 x1272)))
(define-fun x939 ((x1272 Int)) Int (ite (= x1272 0) 1 (x814 x1272)))
(define-fun x2169 ((x1272 Int)) Int (ite (= x1272 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1750 x1272)))
(define-fun x1715 ((x1272 Int)) Int (ite (= 0 x1272) x1798 (x1915 x1272)))
(define-fun x2324 ((x1272 Int)) Int (ite (= x1272 128) x1798 (x1477 x1272)))
(define-fun x2366 ((x1272 Int)) Int (ite (= 4 x1272) 128 (x584 x1272)))
(define-fun x1937 ((x1272 Int)) Int (ite (= x1272 36) x1384 (x2366 x1272)))
(define-fun x1130 ((x1272 Int)) Int (ite (= 68 x1272) x688 (x1937 x1272)))
(define-fun x1684 ((x1272 Int)) Int (ite (= 100 x1272) x601 (x1130 x1272)))
(define-fun x1766 ((x1272 Int)) Int (ite (= 132 x1272) x1472 (x1684 x1272)))
(define-fun x1982 ((x1272 Int)) Int (ite (and (>= x1272 164) (< x1272 (+ 164 x495))) (x99 (+ 0 (- x1272 164))) (x1766 x1272)))
(define-fun x1285 ((x1272 Int)) Int (ite (= x1272 x1821) x536 (x1982 x1272)))
(define-fun x741 ((x1272 Int)) Int (ite (and (<= x1836 x1272) (< x1272 (+ x1836 x156))) (x2091 (+ (- x1272 x1836) 0)) (x1285 x1272)))
(define-fun x1997 ((x1272 Int)) Int (ite (= x1272 x1351) x1298 (x741 x1272)))
(define-fun x2018 ((x1272 Int)) Int (ite (and (<= x2067 x1272) (> (+ x2067 x687) x1272)) (x657 (+ 0 (- x1272 x2067))) (x1997 x1272)))
(define-fun x764 ((x1272 Int)) Int (ite (= x1272 x2195) x1434 (x2018 x1272)))
(define-fun x1270 ((x1272 Int)) Int (ite (and (> (+ x86 x403) x1272) (>= x1272 x86)) (x2302 (+ (- x1272 x86) 0)) (x764 x1272)))
(define-fun x1793 ((x1272 x1435)) Int (ite (= x1272 x36) x1146 (x2342 x1272)))
(define-fun x2234 ((x1272 x1435)) Int (ite (= x2185 x1272) x1146 (x2342 x1272)))
(define-fun x1976 ((x1272 x1435)) Int (ite (= x1272 x1271) x1146 (x2342 x1272)))
(define-fun x647 ((x1272 x1435)) Int (ite (and x2033 x345) (x1793 x1272) (ite (and x345 x1357 (not x2033)) (x2234 x1272) (x1976 x1272))))
(define-fun x1234 ((x1272 x1435)) Int (ite (= x1870 x1272) x1140 (x1930 x1272)))
(define-fun x853 ((x1272 x1435)) Int (ite (and x345 x2010) (x1930 x1272) (x1234 x1272)))
(define-fun x708 ((x1272 x1435)) Int (ite (= x1272 x2230) x984 (x456 x1272)))
(define-fun x537 ((x1272 x1435)) Int (ite (= x1272 x597) x240 (x708 x1272)))
(define-fun x1918 ((x1272 x1435)) Int (ite (= x1272 x321) x1400 (x1834 x1272)))
(define-fun x583 ((x1272 x1435)) Int (ite (= x1078 x1272) x2383 (x1918 x1272)))
(define-fun x88 ((x1272 x1435)) Int (ite (and x575 x1896) (x1834 x1272) (x583 x1272)))
(define-fun x2229 ((x1272 x1435)) Int (ite (and x1959 (not x1059)) (x1834 x1272) (ite (and x1924 (not x725)) (x456 x1272) (ite x138 (x88 x1272) (x1834 x1272)))))
(define-fun x1110 ((x1272 x1435)) Int (ite (= x1272 x873) x110 (x850 x1272)))
(define-fun x713 ((x1272 x1435)) Int (ite (= x1272 x1116) x1103 (x1110 x1272)))
(define-fun x2394 ((x1272 x1435)) Int (ite (= x19 x1272) x875 (x1373 x1272)))
(define-fun x992 ((x1272 x1435)) Int (ite (= x1272 x2298) x333 (x2394 x1272)))
(define-fun x407 ((x1272 x1435)) Int (ite (and x575 x1896) (x992 x1272) (x1373 x1272)))
(define-fun x1198 ((x1272 x1435)) Int (ite (and (not x1059) x1959) (x1373 x1272) (ite (and x1924 (not x725)) (x850 x1272) (ite x138 (x407 x1272) (x1373 x1272)))))
(define-fun x1095 ((x1272 x1435)) Int (ite (= x1593 x1272) x1606 (x791 x1272)))
(define-fun x2174 ((x1272 x1435)) Int (ite (= x1272 x1395) x894 (x1065 x1272)))
(define-fun x2348 ((x1272 x1435)) Int (ite (and x414 (not x418)) (x2174 x1272) (x1065 x1272)))
(define-fun x2200 ((x1272 x1435)) Int (ite (= x1272 x176) x1513 (x1994 x1272)))
(define-fun x1916 ((x1272 x1435)) Int (ite (= x2239 x1272) x1569 (x887 x1272)))
(define-fun x660 ((x1272 x1435)) Int (ite (and (not x502) x981 (not x771)) (x1916 x1272) (x887 x1272)))
(define-fun x658 ((x1272 x1435)) Int (ite (= x1272 x174) x945 (x1201 x1272)))
(define-fun x344 ((x1272 x1435)) Int (ite (and x1837 x1670) (x1201 x1272) (x658 x1272)))
(define-fun x1240 ((x1272 Int)) Int (ite (= x1652 x1272) x2025 (x1305 x1272)))
(define-fun x2297 ((x1272 Int)) Int (ite (= x2228 x1272) x1609 (x1240 x1272)))
(define-fun x1985 ((x1272 Int)) Int (ite (= x1213 x1272) x1229 (x2297 x1272)))
(define-fun x2362 ((x1272 Int)) Int (ite (and x1670 x1837) (x1305 x1272) (x1985 x1272)))
(define-fun x1094 ((x1272 Int)) Int (ite (= x1272 x2314) x377 (x2362 x1272)))
(define-fun x918 ((x1272 Int)) Int (ite (= x838 x1272) x97 (x1094 x1272)))
(define-fun x1659 ((x1272 Int)) Int (ite (= x1272 x30) x9 (x1729 x1272)))
(define-fun x1478 ((x1272 Int)) Int (ite (and x1837 x1670) (x1729 x1272) (x1659 x1272)))
(define-fun x896 ((x1272 Int)) Int (ite (= x1390 x1272) x2163 (x1478 x1272)))
(define-fun x356 ((x1272 Int)) Int (ite (= x1272 x1517) x1039 (x918 x1272)))
(define-fun x320 ((x1272 Int)) Int (ite (= x1199 x1272) x2034 (x948 x1272)))
(define-fun x239 ((x1272 Int)) Int (ite (= x1348 x1272) 0 (x671 x1272)))
(define-fun x242 ((x1272 Int)) Int (ite (= x1272 x1724) x103 (x1656 x1272)))
(define-fun x1505 ((x1272 Int)) Int (ite (= x1724 x1272) x458 (x1656 x1272)))
(define-fun x83 ((x1272 Int)) Int (ite (= x1272 x1743) x1465 (x1119 x1272)))
(define-fun x1768 ((x1272 Int)) Int (ite (= x1272 x1442) 0 (x632 x1272)))
(define-fun x889 ((x1272 x1435)) Int (ite (= x1632 x1272) x1146 (x435 x1272)))
(define-fun x2256 ((x1272 x1435)) Int (ite (= x877 x1272) x1146 (x435 x1272)))
(define-fun x1608 ((x1272 x1435)) Int (ite (and x184 x1260) (x889 x1272) (x2256 x1272)))
(define-fun x563 ((x1272 x1435)) Int (ite (= x726 x1272) x300 (x578 x1272)))
(define-fun x2361 ((x1272 x1435)) Int (ite (and x1741 x184) (x578 x1272) (x563 x1272)))
(define-fun x143 ((x1272 Int)) Int (ite (= 128 x1272) x517 (x812 x1272)))
(define-fun x659 ((x1272 Int)) Int (ite (and x345 x2033) (x812 x1272) (x143 x1272)))
(define-fun x302 ((x1272 Int)) Int (ite (= x1272 x1813) x236 (x659 x1272)))
(define-fun x1818 ((x1272 Int)) Int (ite (= 160 x1272) x769 (x1369 x1272)))
(define-fun x930 ((x1272 Int)) Int (ite (and x2033 x345) (x1369 x1272) (x1818 x1272)))
(define-fun x699 ((x1272 Int)) Int (ite (= x2178 x1272) x1173 (x930 x1272)))
(define-fun x233 ((x1272 Int)) Int (ite (= x1272 x1753) x6 (x803 x1272)))
(define-fun x1466 ((x1272 Int)) Int (ite (= x1272 x1864) x905 (x233 x1272)))
(define-fun x1650 ((x1272 Int)) Int (ite (= x1105 x1272) x1719 (x2102 x1272)))
(define-fun x1922 ((x1272 Int)) Int (ite (= x2024 x1272) x219 (x1650 x1272)))
(define-fun x1075 ((x1272 Int)) Int (ite (and (not x1148) x1333 (not x1867)) (x632 x1272) (x1768 x1272)))
(define-fun x1969 ((x1272 x1435)) Int (ite (= (x349 274184521717934524641157099916833587206) x1272) x2183 (x2105 x1272)))
(define-fun x91 ((x1272 x1435)) Int (ite (= (x349 x285) x1272) x1799 (x1969 x1272)))
(define-fun x1460 ((x1272 x1435)) Int (ite (= x1272 (x349 x285)) x14 (x91 x1272)))
(define-fun x641 ((x1272 x1435)) Int (ite (= x1272 (x349 274184521717934524641157099916833587206)) x2321 (x1460 x1272)))
(define-fun x2301 ((x1272 x1435)) Int (ite (and x1670 x1837) (x2105 x1272) (x641 x1272)))
(define-fun x1718 ((x1272 x1435)) Int (ite (= (x349 274184521717934524641157099916833587206) x1272) x1109 (x2301 x1272)))
(define-fun x373 ((x1272 x1435)) Int (ite (= (x349 x1205) x1272) x829 (x1718 x1272)))
(define-fun x1117 ((x1272 Int)) Int (ite (= 0 x1272) 1 (x1518 x1272)))
(define-fun x1347 ((x1272 Int)) Int (ite (= x1724 x1272) x1882 (x46 x1272)))
(define-fun x1276 ((x1272 Int)) Int (ite (and x1966 (not x1189)) (x1347 x1272) (x46 x1272)))
(define-fun x2345 ((x1272 Int)) Int (ite (= x1272 0) 1 (x1828 x1272)))
(define-fun x2318 ((x1272 Int)) Int (ite (= x1272 0) 1 (x1828 x1272)))
(define-fun x842 ((x1272 Int)) Int (ite (and x2343 x852) (x2345 x1272) (x2318 x1272)))
(define-fun x765 ((x1272 Int)) Int (ite (and (< x1272 (+ x839 x1882)) (<= x839 x1272)) (x842 (+ (- x1272 x839) 0)) (x289 x1272)))
(define-fun x250 ((x1272 Int)) Int (ite (and (not x1189) x1966) (x765 x1272) (x289 x1272)))
(define-fun x528 ((x1272 Int)) Int (ite (= 128 x1272) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x904 x1272)))
(define-fun x237 ((x1272 Int)) Int (ite (= 0 x1272) x1919 (x1819 x1272)))
(define-fun x2124 ((x1272 Int)) Int (ite (= x1272 128) x1919 (x2367 x1272)))
(define-fun x1210 ((x1272 Int)) Int (ite (= 0 x1272) 1 (x1181 x1272)))
(define-fun x951 ((x1272 Int)) Int (ite (= 0 x1272) 1 (x814 x1272)))
(define-fun x2378 ((x1272 Int)) Int (ite (= 0 x1272) x421 (x1915 x1272)))
(define-fun x1675 ((x1272 Int)) Int (ite (= 128 x1272) x421 (x1477 x1272)))
(define-fun x944 ((x1272 Int)) Int (ite (= x1272 0) 1 (x1518 x1272)))
(define-fun x1050 ((x1272 Int)) Int (ite (= x1272 0) x1203 (x1819 x1272)))
(define-fun x360 ((x1272 Int)) Int (ite (= 128 x1272) x1203 (x2367 x1272)))
(define-fun x1785 ((x1272 Int)) Int (ite (and x542 x1643) (x1267 x1272) (x1210 x1272)))
(define-fun x2028 ((x1272 Int)) Int (ite (= x1977 x1272) x190 (x1926 x1272)))
(define-fun x1998 ((x1272 Int)) Int (ite (and (>= x1272 x332) (< x1272 (+ x332 x190))) (x1785 (+ 0 (- x1272 x332))) (x607 x1272)))
(define-fun x1866 ((x1272 Int)) Int (ite (and x670 x1797) (x1926 x1272) (x2028 x1272)))
(define-fun x645 ((x1272 Int)) Int (ite (and x1797 x670) (x607 x1272) (x1998 x1272)))
(define-fun x564 ((x1272 Int)) Int (ite (and x813 x1003) (x939 x1272) (x951 x1272)))
(define-fun x2079 ((x1272 x1435)) Int (ite (= x1272 (x349 x1331)) x194 (x625 x1272)))
(define-fun x1586 ((x1272 Int)) Int (ite (= x1068 x1272) x2181 (x489 x1272)))
(define-fun x309 ((x1272 Int)) Int (ite (and (>= x1272 x2134) (< x1272 (+ x2134 x2181))) (x564 (+ 0 (- x1272 x2134))) (x610 x1272)))
(define-fun x2170 ((x1272 Int)) Int (ite (and x1083 x291) (x489 x1272) (x1586 x1272)))
(define-fun x1600 ((x1272 Int)) Int (ite (and x1083 x291) (x610 x1272) (x309 x1272)))
(define-fun x1124 ((x1272 Int)) Int (ite (and x1596 x192) (x2324 x1272) (x1675 x1272)))
(define-fun x1010 ((x1272 Int)) Int (x99 x1272))
(define-fun x1873 ((x1272 Int)) Int (x2091 x1272))
(define-fun x2154 ((x1272 Int)) Int (x657 x1272))
(define-fun x822 ((x1272 Int)) Int (x2302 x1272))
(define-fun x2380 ((x1272 Int)) Int (ite (and x575 x1896) (x1117 x1272) (x944 x1272)))
(define-fun x2099 ((x1272 x1435)) Int (ite (= (x349 x1205) x1272) x1327 (x373 x1272)))
(define-fun x561 ((x1272 Int)) Int (ite (= x390 x1272) x1489 (x1995 x1272)))
(define-fun x334 ((x1272 Int)) Int (ite (and (< x1272 (+ x1489 x779)) (>= x1272 x779)) (x2380 (+ (- x1272 x779) 0)) (x1955 x1272)))
(define-fun x717 ((x1272 Int)) Int (ite (and x602 x138) (x1955 x1272) (x334 x1272)))
(define-fun x1590 ((x1272 Int)) Int (ite (and x602 x138) (x1995 x1272) (x561 x1272)))
(define-fun x1238 ((x1272 Int)) Int (ite (and x1157 x2068) (x2124 x1272) (x360 x1272)))
(define-fun x809 ((x1467 Int) (x525 Int) (x275 Int) (x1113 Int)) Bool (=> (and (>= x1467 0) (>= x1113 x525) (>= x275 x1467) (>= x525 0)) (>= (x836 x275 x1113) (x836 x1467 x525))))
(define-fun x928 ((x1467 Int) (x525 Int) (x275 Int) (x1113 Int)) Bool (=> (= x1467 x275) (= (x836 x1467 (- x525 x1113)) (- (x836 x1467 x525) (x836 x275 x1113)))))
(define-fun x1794 ((x1467 Int)) Bool (=> (and (not (= x1467 2835717307)) (not (= x1467 759532456)) (not (= x1467 2293535753)) (not (= 2211524764 x1467)) (not (= 2061678023 x1467)) (> x1467 10000) (not (= 468353030 x1467)) (not (= x1467 1968616202)) (not (= x1467 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x1467 87118632)) (not (= 1986467848 x1467)) (not (= 274184521717934524641157099916833587218 x1467)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x1467)) (not (= x1467 911411945)) (not (= 635128645 x1467)) (not (= 2514000705 x1467)) (not (= 1461501637330902918203684832716283019655932542975 x1467)) (not (= 826074471 x1467)) (not (= 649617121 x1467)) (not (= 2258409472 x1467)) (not (= x1467 243137395)) (not (= x1467 142201243)) (not (= 1461501637330902918203684832716283019655932542976 x1467)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1467)) (not (= 274184521717934524641157099916833587214 x1467)) (not (= x1467 1000000000000000000)) (not (= 115792089237316195423570985008687907853269984665640564039457 x1467)) (not (= x1467 274184521717934524641157099916833587206)) (not (= 1889567281 x1467)) (not (= x1467 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1467 604800)) (not (= x1467 69947311)) (not (= x1467 842085797)) (not (= 18446744073709551615 x1467)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1467))) (not ((_ is x1299) (x349 x1467)))))
(assert (x928 x171 x1208 x1355 x60))
(assert (= (x73 (x349 x1681)) x1681))
(assert (x1084 x136 (- x44 x171)))
(assert (= 0 (x238 x499)))
(assert (x846 x1688))
(assert (x2257 (- x482 x2216)))
(assert (x809 x482 x1162 x595 x1830))
(assert (= (=> (and (= (= x1913 x1695) x1392) (= x85 x1695) (= x1913 x1335) (= x1377 x85)) x1392) x1026))
(assert (x928 x136 x44 x1293 x1221))
(assert (x846 x695))
(assert (x1084 x1355 (- x60 x482)))
(assert (x846 x387))
(assert (x1084 x2090 (- x861 x482)))
(assert (x2257 (- x861 x1140)))
(assert (= (=> (and (= (x1353 (- x2123 1)) x245) (= (> x245 0) x1376)) (and (=> x1376 x408) (=> (not x1376) x567))) x903))
(assert (x846 x721))
(assert (x1084 x1208 (- x171 x861)))
(assert (x846 x720))
(assert (x928 x1355 x60 x1252 x1365))
(assert (= x2182 x383))
(assert (x1084 x60 (- x1355 x1221)))
(assert (x846 x1609))
(assert (x809 x1208 x171 x1355 x60))
(assert (x2257 x2267))
(assert (x2257 (- x2236 x136)))
(assert (x846 x438))
(assert (x846 x811))
(assert (x928 x2236 x2095 x171 x1208))
(assert (x1084 x1252 (- x1365 x654)))
(assert (= x395 (x73 (x349 x395))))
(assert (x928 x901 x2216 x1293 x1221))
(assert (x1084 x44 (- x136 x1252)))
(assert (x2257 (- x2216 x1221)))
(assert (= (x2091 (- x2219 x1836)) (x1888 (- x2219 x1836))))
(assert (= (x2336 x2326) (ite x670 (ite (and x1643 x542) (x698 x2326) (x850 x2326)) (x850 x2326))))
(assert (x1084 x2236 (- x2095 x2216)))
(assert (x846 x926))
(assert (x1084 x2095 (- x2236 x44)))
(assert (x846 x995))
(assert (x928 x2095 x2236 x2216 x901))
(assert (x928 x300 x763 x595 x1830))
(assert (x846 x737))
(assert (=> (<= x1456 10000) (= (x349 x1456) (x1299 x1456))))
(assert (x2257 (- x2090 x1365)))
(assert (x846 x612))
(assert (x1794 x1127))
(assert (x846 x2121))
(assert (x2257 (- x763 x654)))
(assert (x809 x1252 x1365 x2090 x861))
(assert (x2257 (- x901 x300)))
(assert (x928 x171 x1208 x861 x2090))
(assert (x846 x1202))
(assert (x809 x44 x136 x2095 x2236))
(assert (x1084 x1293 (- x1221 x171)))
(assert (x846 x1404))
(assert (x846 x899))
(assert (x1794 x908))
(assert (x846 x785))
(assert (x928 x1208 x171 x136 x44))
(assert (x2257 (- x1355 x1140)))
(assert (x846 x2330))
(assert (x928 x654 x1140 x2236 x2095))
(assert (x846 x2070))
(assert (x846 x961))
(assert (=> (<= x1184 10000) (= (x349 x1184) (x1299 x1184))))
(assert (x1084 x763 (- x300 x136)))
(assert (x846 x1528))
(assert (x1084 x171 (- x1208 x1293)))
(assert (x928 x60 x1355 x1208 x171))
(assert (x1084 x300 (- x763 x901)))
(assert (= x988 (or (and (not x1376) x357) (and x1983 x2237) (and x958 (not x1520)))))
(assert (x846 x1499))
(assert (x846 x141))
(assert (x928 x901 x2216 x1208 x171))
(assert (x928 x482 x1162 x2095 x2236))
(assert (x1547 32 x1183))
(assert (x1084 x1252 (- x1365 x2216)))
(assert (x846 x1507))
(assert (x846 x1931))
(assert (x2153 x1147 x642))
(assert (x928 x763 x300 x1355 x60))
(assert (x809 x1830 x595 x136 x44))
(assert (x2257 (- x1208 x861)))
(assert (x1084 x1293 (- x1221 x901)))
(assert (x846 x51))
(assert (x1084 x60 (- x1355 x2216)))
(assert (x1084 x1365 (- x1252 x2236)))
(assert (x928 x1162 x482 x44 x136))
(assert (= (x2142 x82) 0))
(assert (x846 x2310))
(assert (= (x73 (x349 x1455)) x1455))
(assert (x809 x1365 x1252 x1293 x1221))
(assert (x928 x60 x1355 x1140 x654))
(assert (x846 x1696))
(assert (x846 x30))
(assert (= 1461501637330902918203684832716283019655932542975 (x73 (x1299 1461501637330902918203684832716283019655932542975))))
(assert (= x1574 (and x1282 x2296)))
(assert (x1084 x1208 (- x171 x1221)))
(assert (x2257 (- x1365 x60)))
(assert (x1084 x136 (- x44 x1162)))
(assert (x2257 (- x2236 x482)))
(assert (x1084 x482 (- x1162 x763)))
(assert (x2257 (- x1355 x1365)))
(assert (x928 x1293 x1221 x901 x2216))
(assert (x1794 274184521717934524641157099916833587214))
(assert (x1084 x2090 (- x861 x1221)))
(assert (x928 x2095 x2236 x1830 x595))
(assert (x928 x1365 x1252 x595 x1830))
(assert (x809 x763 x300 x136 x44))
(assert (x928 x2095 x2236 x60 x1355))
(assert (x1084 x1221 (- x1293 x1252)))
(assert (= x2355 (x73 (x349 x2355))))
(assert (x809 x44 x136 x1293 x1221))
(assert (x928 x482 x1162 x595 x1830))
(assert (x846 x1753))
(assert (x1084 x901 (- x2216 x1162)))
(assert (x846 x851))
(assert (x1084 x1221 (- x1293 x1208)))
(assert (x928 x1293 x1221 x2236 x2095))
(assert (= (x73 (x349 x590)) x590))
(assert (x2257 (- x1221 x300)))
(assert (x1084 x1162 (- x482 x171)))
(assert (x809 x1830 x595 x1355 x60))
(assert (x846 x521))
(assert (= (x99 (- x2008 164)) (x2048 (- x2008 164))))
(assert (x2257 (- x44 x763)))
(assert (x1084 x861 (- x2090 x1221)))
(assert (x1098 x1329))
(assert (x928 x482 x1162 x2236 x2095))
(assert (x846 x1496))
(assert (x1084 x654 (- x1140 x482)))
(assert (x846 x451))
(assert (x846 x1269))
(assert (x2257 x1855))
(assert (x846 x253))
(assert (x928 x1221 x1293 x1830 x595))
(assert (x846 x440))
(assert (x2257 (- x136 x1140)))
(assert (x846 x908))
(assert (x846 x2058))
(assert (x846 x1307))
(assert (x1084 x136 (- x44 x482)))
(assert (x1084 x861 (- x2090 x1252)))
(assert (x1084 x595 (- x1830 x763)))
(assert (x2257 (- x2236 x1365)))
(assert (x846 x674))
(assert (x928 x1221 x1293 x654 x1140))
(assert (x1084 x1355 (- x60 x1293)))
(assert (x846 x1491))
(assert (x809 x654 x1140 x136 x44))
(assert (x928 x1140 x654 x861 x2090))
(assert (x928 x60 x1355 x2216 x901))
(assert (= (x349 911411945) (x1299 911411945)))
(assert (x1084 x136 (- x44 x654)))
(assert (x928 x1162 x482 x2095 x2236))
(assert (x928 x595 x1830 x1221 x1293))
(assert (=> (<= x1961 10000) (= (x349 x1961) (x1299 x1961))))
(assert (x928 x2090 x861 x1293 x1221))
(assert (= (x349 2258409472) (x1299 2258409472)))
(assert (x846 x2390))
(assert (x1084 x1830 (- x595 x482)))
(assert (x928 x2216 x901 x861 x2090))
(assert (x809 x861 x2090 x136 x44))
(assert (x928 x2090 x861 x44 x136))
(assert (x809 x1140 x654 x2090 x861))
(assert (x1084 x861 (- x2090 x1208)))
(assert (x928 x1140 x654 x1293 x1221))
(assert (x928 x1365 x1252 x1293 x1221))
(assert (= x436 (=> (and (<= x168 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x168 0) x1633) (= (x2342 x743) x168) (>= x168 0) (= (x338 (x349 x1253) x2291 0) x2208) (= x743 (x338 (x349 x2025) x2208 0)) (= (x338 (x349 x745) (x1299 7) 0) x2291)) (and (=> (and (= x745 x2098) (not x1633)) x125) (=> x1633 x439)))))
(assert (x1084 x2236 (- x2095 x60)))
(assert (x2257 (- x44 x1252)))
(assert (x928 x171 x1208 x2236 x2095))
(assert (x846 x1468))
(assert (x846 x1486))
(assert (= (x73 (x349 x1253)) x1253))
(assert (x2257 (- x1221 x1162)))
(assert (x2257 (- x1221 x2236)))
(assert (x928 x861 x2090 x595 x1830))
(assert (x2257 (- x1293 x1830)))
(assert (x2257 (- x60 x1365)))
(assert (=> (<= x377 10000) (= (x1299 x377) (x349 x377))))
(assert (x928 x482 x1162 x1830 x595))
(assert (= (ite (and x184 x1260) (x791 x1395) (x1095 x1395)) (x1065 x1395)))
(assert (x928 x300 x763 x1293 x1221))
(assert (x846 x1697))
(assert (x1084 x60 (- x1355 x1208)))
(assert (x2257 (- x300 x60)))
(assert (x928 x44 x136 x1140 x654))
(assert (x846 x220))
(assert (x1794 x1388))
(assert (= (or (and x1405 (not x1167)) (and (not x2080) x818)) x227))
(assert (x1084 x171 (- x1208 x2090)))
(assert (x846 x159))
(assert (x2257 (- x1293 x901)))
(assert (x1084 x1162 (- x482 x654)))
(assert (x2257 (- x1355 x1208)))
(assert (x809 x136 x44 x1162 x482))
(assert (x846 x989))
(assert (x928 x1252 x1365 x2236 x2095))
(assert (x809 x482 x1162 x1252 x1365))
(assert (x1084 x1252 (- x1365 x171)))
(assert (= x1161 (x73 (x349 x1161))))
(assert (x846 x1876))
(assert (x846 x1714))
(assert (x846 x2266))
(assert (= (=> (and (not (= 0 x195)) (= (x1238 128) x1669) (= x1377 x1669) (not (or (and (= (<= x430 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x430 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x430)))) x1026) x797))
(assert (x846 x1883))
(assert (x1084 x2236 (- x2095 x482)))
(assert (x846 x1284))
(assert (x846 x516))
(assert (x846 x2050))
(assert (= (x73 (x1299 243137395)) 243137395))
(assert (x1084 x595 (- x1830 x2216)))
(assert (x846 x1456))
(assert (x846 x246))
(assert (x846 x1161))
(assert (x846 x1475))
(assert (x1084 x901 (- x2216 x654)))
(assert (x809 x1140 x654 x171 x1208))
(assert (x2257 x429))
(assert (x809 x1293 x1221 x763 x300))
(assert (=> (>= 10000 x1251) (= (x349 x1251) (x1299 x1251))))
(assert (x928 x763 x300 x2090 x861))
(assert (x846 x1291))
(assert (x1084 x1221 (- x1293 x2090)))
(assert (x846 x498))
(assert (x1084 x595 (- x1830 x1252)))
(assert (x846 x332))
(assert (x1794 x914))
(assert (x846 x856))
(assert (x928 x1365 x1252 x300 x763))
(assert (x928 x1365 x1252 x44 x136))
(assert (= (=> (= (> x1307 0) x2) (and (=> (not x2) x53) (=> x2 x1672))) x2308))
(assert (x846 x2092))
(assert (x1084 x2095 (- x2236 x1221)))
(assert (x1084 x2095 (- x2236 x136)))
(assert (x1084 x2236 (- x2095 x44)))
(assert (=> (<= x1589 10000) (= (x1299 x1589) (x349 x1589))))
(assert (x1084 x654 (- x1140 x1252)))
(assert (x846 x1743))
(assert (x846 x1355))
(assert (x846 x1252))
(assert (x1084 x654 (- x1140 x763)))
(assert (x928 x44 x136 x1830 x595))
(assert (x2257 (- x1140 x1355)))
(assert (= (x73 (x349 x1811)) x1811))
(assert (x928 x763 x300 x2216 x901))
(assert (x928 x300 x763 x1208 x171))
(assert (= (=> (= x1761 0) x898) x1638))
(assert (x1794 x497))
(assert (x846 x1776))
(assert (x2257 (- x44 x60)))
(assert (x1598 x118 x863 x1449 x1564))
(assert (x1098 x144))
(assert (x809 x2095 x2236 x1140 x654))
(assert (= (x73 (x349 x834)) x834))
(assert (x2257 (- x1830 x901)))
(assert (x846 x661))
(assert (x1084 x654 (- x1140 x1208)))
(assert (x928 x763 x300 x595 x1830))
(assert (x1084 x2216 (- x901 x1221)))
(assert (x1084 x763 (- x300 x44)))
(assert (x1084 x763 (- x300 x2095)))
(assert (x928 x60 x1355 x482 x1162))
(assert (x1084 x1140 (- x654 x1252)))
(assert (= (x73 (x349 x784)) x784))
(assert (x2257 (- x300 x1140)))
(assert (x809 x1221 x1293 x2090 x861))
(assert (x846 x1390))
(assert (x928 x861 x2090 x44 x136))
(assert (x846 x609))
(assert (x1084 x1221 (- x1293 x1162)))
(assert (x1084 x1365 (- x1252 x1140)))
(assert (x846 x191))
(assert (x2257 (- x1140 x901)))
(assert (x846 x1313))
(assert (x2257 (- x2216 x44)))
(assert (x928 x1252 x1365 x861 x2090))
(assert (= x79 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2340) (= (= 0 x2340) x2206) (= (x338 (x349 x2123) (x1299 7) 0) x556) (>= x2340 0) (= (x2265 1461501637330902918203684832716283019655932542975 x280) x716) (= x376 (x2265 1461501637330902918203684832716283019655932542975 x1961)) (= (x338 (x349 x716) x556 0) x1709) (= (x1786 x558) x2340) (= x558 (x338 (x349 x376) x1709 0))) (and (=> x2206 x315) (=> (and (= x2123 x294) (not x2206)) x1628)))))
(assert (x846 x905))
(assert (=> (<= x203 10000) (= (x349 x203) (x1299 x203))))
(assert (x846 x1996))
(assert (x809 x2090 x861 x1162 x482))
(assert (x2153 x2070 x820))
(assert (x2257 (- x901 x654)))
(assert (x846 x497))
(assert (x928 x300 x763 x2216 x901))
(assert (x846 x1229))
(assert (x2257 (- x2216 x654)))
(assert (x1084 x1252 (- x1365 x1355)))
(assert (x928 x482 x1162 x171 x1208))
(assert (x928 x1355 x60 x482 x1162))
(assert (x1084 x136 (- x44 x1830)))
(assert (= x883 (x73 (x349 x883))))
(assert (= (x2302 (- 132 x86)) (x1337 (- 132 x86))))
(assert (x809 x300 x763 x595 x1830))
(assert (x846 x101))
(assert (x809 x1355 x60 x171 x1208))
(assert (x928 x654 x1140 x2095 x2236))
(assert (x1084 x861 (- x2090 x44)))
(assert (x846 x1719))
(assert (x846 x280))
(assert (=> (<= x1436 10000) (= (x349 x1436) (x1299 x1436))))
(assert (x2257 (- x2236 x1830)))
(assert (x809 x2216 x901 x2090 x861))
(assert (x846 x56))
(assert (x1084 x763 (- x300 x2090)))
(assert (= (x73 (x349 x1184)) x1184))
(assert (x846 x1986))
(assert (= (and x2214 x374) x1287))
(assert (x928 x482 x1162 x60 x1355))
(assert (x928 x1355 x60 x595 x1830))
(assert (x2257 (- x861 x2236)))
(assert (x1084 x2090 (- x861 x901)))
(assert (= x1665 (and x1204 x2125)))
(assert true)
(assert (= (x73 (x349 x108)) x108))
(assert (x928 x901 x2216 x44 x136))
(assert (x928 x595 x1830 x2216 x901))
(assert (x846 x1396))
(assert (x928 x1221 x1293 x2090 x861))
(assert (x2257 (- x482 x901)))
(assert (x1098 x830))
(assert (x2257 x1293))
(assert (x1084 x1162 (- x482 x2236)))
(assert (=> (<= x1232 10000) (= (x349 x1232) (x1299 x1232))))
(assert (x846 x1184))
(assert (x928 x1830 x595 x654 x1140))
(assert (x846 x1103))
(assert (x809 x2236 x2095 x1355 x60))
(assert (= x907 (x73 (x349 x907))))
(assert (x846 x1280))
(assert (=> (<= x590 10000) (= (x1299 x590) (x349 x590))))
(assert (x928 x482 x1162 x136 x44))
(assert (x846 x1459))
(assert (x1084 x861 (- x2090 x1365)))
(assert (x928 x763 x300 x1140 x654))
(assert (= x1626 (=> (and (= (x338 (x349 x2050) x1694 0) x923) (= (= x761 0) x2080) (= (x435 x923) x761) (= (x2265 1461501637330902918203684832716283019655932542975 x883) x2050) (<= 0 x761) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x761) (= (x338 (x349 x1007) (x1299 6) 0) x1694)) (and (=> (and (= x1007 x1424) (not x2080)) x204) (=> x2080 x2072)))))
(assert (= (x2091 (- x378 x1836)) (x1888 (- x378 x1836))))
(assert (x846 x2123))
(assert (x846 x934))
(assert (x2257 (- x1293 x1208)))
(assert (= x1680 (x73 (x349 x1680))))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1826) (= x348 (x338 (x349 x1307) (x1299 6) 0)) (= (= x1826 0) x1304) (<= 0 x1826) (= (x338 (x349 x497) x348 0) x1483) (= (x1608 x1483) x1826)) (and (=> (and (not x1304) (= x1307 x1076)) x1814) (=> x1304 x1256))) x1672))
(assert (x1794 x1565))
(assert (x1098 x609))
(assert (= (x349 468353030) (x1299 468353030)))
(assert (x846 x1434))
(assert (x1084 x595 (- x1830 x861)))
(assert (x1902 x87))
(assert (=> (<= x2123 10000) (= (x1299 x2123) (x349 x2123))))
(assert (x1084 x1293 (- x1221 x300)))
(assert (= 1889567281 (x73 (x1299 1889567281))))
(assert (x928 x1365 x1252 x901 x2216))
(assert (x2257 (- x136 x1252)))
(assert (x809 x2216 x901 x763 x300))
(assert (x846 x932))
(assert (x846 x1964))
(assert (x1084 x1162 (- x482 x1140)))
(assert (x2257 (- x1830 x482)))
(assert (x1084 x44 (- x136 x1830)))
(assert (x928 x60 x1355 x2236 x2095))
(assert (x846 x21))
(assert (= (x887 x2239) (ite (and x2033 x345) (x1994 x2239) (ite (and x1357 x345 (not x2033)) (x1994 x2239) (x2200 x2239)))))
(assert (x846 x514))
(assert (x2257 (- x654 x901)))
(assert (x846 x2314))
(assert (x1084 x482 (- x1162 x300)))
(assert (x1084 x1162 (- x482 x1355)))
(assert (x956 x830 x1874))
(assert (x846 x1749))
(assert (x809 x901 x2216 x763 x300))
(assert (x928 x595 x1830 x2095 x2236))
(assert (= (x2302 (- x1843 x86)) (x1337 (- x1843 x86))))
(assert (x928 x136 x44 x2090 x861))
(assert (x846 x731))
(assert (x846 x1919))
(assert (x2257 x460))
(assert (x846 x1000))
(assert (x846 x1869))
(assert (x928 x44 x136 x482 x1162))
(assert (x2257 (- x654 x2216)))
(assert (x928 x2216 x901 x2090 x861))
(assert (x846 x1792))
(assert (x846 x769))
(assert (= x2115 (or (and (not x2237) x1983) (and x1032 (not x1192)))))
(assert (=> (>= 10000 x68) (= (x349 x68) (x1299 x68))))
(assert (x928 x171 x1208 x901 x2216))
(assert (= x1171 (=> (= x1027 x2063) x201)))
(assert (x846 x1120))
(assert (x2257 (- x901 x1355)))
(assert (x846 x1631))
(assert (x1084 x1293 (- x1221 x2236)))
(assert (= x2016 x697))
(assert (x928 x2090 x861 x1208 x171))
(assert (x846 x113))
(assert (x846 x110))
(assert (x809 x171 x1208 x595 x1830))
(assert (x1084 x1221 (- x1293 x763)))
(assert (=> (>= 10000 x716) (= (x1299 x716) (x349 x716))))
(assert (x1084 x901 (- x2216 x595)))
(assert (x1084 x482 (- x1162 x60)))
(assert (x928 x136 x44 x2216 x901))
(assert (x1084 x654 (- x1140 x300)))
(assert (x846 x1061))
(assert (x846 x2250))
(assert (x846 x834))
(assert (x928 x2216 x901 x1355 x60))
(assert (x809 x901 x2216 x136 x44))
(assert (x928 x136 x44 x2236 x2095))
(assert (x846 x2157))
(assert (x846 x2215))
(assert (x928 x300 x763 x1221 x1293))
(assert (x2257 (- x171 x2236)))
(assert (x846 x1100))
(assert (x956 x554 x794))
(assert (x846 x396))
(assert (x928 x595 x1830 x171 x1208))
(assert (= (=> (= x313 0) x1099) x1536))
(assert (x928 x861 x2090 x482 x1162))
(assert (x2257 (- x171 x2095)))
(assert (x928 x861 x2090 x300 x763))
(assert (= (or (and (not x1108) x367) (and (not x1304) x165)) x1128))
(assert (x2257 (- x300 x2236)))
(assert (x1084 x1252 x1365))
(assert (x1084 x1365 (- x1252 x300)))
(assert (x846 x1254))
(assert (x1084 x2216 (- x901 x300)))
(assert (= (x99 0) (x2048 0)))
(assert (x2257 (- x1252 x136)))
(assert (=> (>= 10000 x1417) (= (x1299 x1417) (x349 x1417))))
(assert (x928 x1252 x1365 x1221 x1293))
(assert (x846 x1187))
(assert (= (x2048 (- x2219 164)) (x99 (- x2219 164))))
(assert (x928 x171 x1208 x1221 x1293))
(assert (x2257 (- x482 x1365)))
(assert (x928 x595 x1830 x1293 x1221))
(assert (x846 x1330))
(assert (x846 x67))
(assert (= (x73 (x349 x2266)) x2266))
(assert (x809 x2236 x2095 x1140 x654))
(assert (= (x2142 x1311) 0))
(assert (x2257 (- x1140 x60)))
(assert (x2257 (- x2090 x1208)))
(assert (= 274184521717934524641157099916833587206 (x73 (x349 274184521717934524641157099916833587206))))
(assert (x846 x1611))
(assert (x846 x991))
(assert (x809 x2236 x2095 x901 x2216))
(assert (x846 x329))
(assert (x2257 (- x482 x1830)))
(assert (x1084 x171 (- x1208 x861)))
(assert (x846 x2024))
(assert (=> (>= 10000 x1761) (= (x349 x1761) (x1299 x1761))))
(assert (x928 x763 x300 x44 x136))
(assert (x1084 x2236 (- x2095 x1365)))
(assert (x846 x2130))
(assert (x1084 x2095 (- x2236 x1162)))
(assert (x846 x2166))
(assert (x928 x2236 x2095 x1355 x60))
(assert (x2257 (- x482 x654)))
(assert (= (x73 (x1299 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (x928 x1208 x171 x44 x136))
(assert (x846 x1410))
(assert (x846 x234))
(assert (x928 x595 x1830 x654 x1140))
(assert (x2257 (- x654 x1365)))
(assert (=> (<= x449 10000) (= (x349 x449) (x1299 x449))))
(assert (x2257 (- x595 x136)))
(assert (x809 x2095 x2236 x171 x1208))
(assert (=> (<= x2339 10000) (= (x1299 x2339) (x349 x2339))))
(assert (x2257 (- x1162 x654)))
(assert (x1084 x1162 x482))
(assert (x846 x1681))
(assert (x846 x45))
(assert (x846 x1761))
(assert (x1084 x1140 (- x654 x2216)))
(assert (x928 x1162 x482 x1830 x595))
(assert (x928 x1162 x482 x171 x1208))
(assert (x2257 (- x300 x1252)))
(assert (x1084 x1365 (- x1252 x763)))
(assert (x2257 (- x1355 x901)))
(assert (x846 x1510))
(assert (x846 x1041))
(assert (x2257 (- x1252 x901)))
(assert (x846 x1740))
(assert (=> (<= x1127 10000) (= (x1299 x1127) (x349 x1127))))
(assert (x846 x688))
(assert (x1098 x1382))
(assert (= (x1888 (- x1375 x1836)) (x2091 (- x1375 x1836))))
(assert (= x230 (=> (and (= x1890 (= 0 x1194)) (or (and (>= x33 0) (= (x2265 1461501637330902918203684832716283019655932542975 x883) x1714) (= x1251 (x2265 1461501637330902918203684832716283019655932542975 x416)) (= x1174 (x955 x71)) (= x2225 (x338 (x349 x1251) x310 0)) (= (= x1208 0) x1342) (= (x338 (x349 x1714) x2354 0) x310) (or (and (= (x1730 160) x1701) (or (and (= x1208 x1942) (= x760 (x565 128)) (= x1942 (x1353 (- x519 x760))) (not (> x760 x519)) x524) (and (= x1208 x326) (= x1138 604800) (not x524) (not (< x519 x1646)) (= (ite (< x693 604800) x693 604800) x326) (= x693 (x1353 (- x519 x1646))))) (= x524 (= 0 x1646)) x1535 (= x2384 (< x1701 x1146)) (or (and (not x2384) (= x1146 x519)) (and (= x519 x1554) (= (x1730 160) x1554) x2384))) (and (= x1208 0) (not x1535))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x33) (= x1508 (x338 (x349 x1007) (x1299 1) 0)) (>= x1646 0) (not x1921) (= x33 (x1179 x1508)) (= (x1730 160) x1530) (or (and (= x964 (x338 (x349 x1007) (x1299 7) 0)) (= x776 (+ x1186 x2140)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x973 x405)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x405) (= x2263 (x338 (x349 x1862) x940 0)) (= (x338 (x349 x1007) (x1299 3) 0) x269) (= x1891 (x2265 1461501637330902918203684832716283019655932542975 x883)) (= (x2265 1461501637330902918203684832716283019655932542975 x416) x977) (= (x836 x171 x1208) x1033) (= (x1994 x2263) x405) (= x1368 (x338 (x349 x977) x535 0)) (>= x405 0) (= x2140 x405) (= (x338 (x349 x1891) x269 0) x940) (= x1033 x973) (= x1726 (x2265 1461501637330902918203684832716283019655932542975 x883)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x836 x171 x1208)) (= (x338 (x349 x1726) x964 0) x535) (= 192 x126) (= x1862 (x2265 1461501637330902918203684832716283019655932542975 x416)) (not x1342) (= x1186 x973)) (and (= (x338 (x349 x1007) (x1299 7) 0) x1321) (= (x2265 1461501637330902918203684832716283019655932542975 x883) x2305) (= x2043 (x338 (x349 x1211) x782 0)) (= x782 (x338 (x349 x2305) x1321 0)) x1342 (= x1211 (x2265 1461501637330902918203684832716283019655932542975 x416)) (= 192 x126))) (= x1646 (x2342 x2225)) (= x1535 (> x1530 x1646)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1174) (= x71 (x2112 x1508 1)) (>= x1174 0) (= (x338 (x349 x1007) (x1299 7) 0) x2354) (<= x1646 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (= x216 (x338 (x349 x914) x1444 0)) (= x1444 (x338 (x349 x2266) x1929 0)) (= (x2265 1461501637330902918203684832716283019655932542975 x416) x914) (= x2266 (x2265 1461501637330902918203684832716283019655932542975 x883)) (= 128 x126) (= (x338 (x349 x1007) (x1299 7) 0) x1929) x1921)) (or x1890 (and (= (x338 (x349 x1007) (x1299 9) 0) x1923) (= x166 (x2265 1461501637330902918203684832716283019655932542975 x883)) (= x1594 (x338 (x349 x166) x1923 0)) (= (x338 (x349 x1388) x1594 0) x1817) (not x1890) (= x1388 (x2265 1461501637330902918203684832716283019655932542975 x416)))) (= (= 0 x171) x1921)) x1441)))
(assert (x846 x761))
(assert (x928 x2090 x861 x1162 x482))
(assert (x1084 x1293 (- x1221 x654)))
(assert (x1098 x1151))
(assert (= (x1888 (- x1497 x1836)) (x2091 (- x1497 x1836))))
(assert (x846 x2305))
(assert (x846 x1151))
(assert (x2257 (- x763 x1162)))
(assert (x1084 x300 (- x763 x1208)))
(assert (x1084 x1162 (- x482 x1293)))
(assert (x809 x60 x1355 x136 x44))
(assert (x928 x861 x2090 x2095 x2236))
(assert (x846 x1091))
(assert (x1084 x1365 (- x1252 x1355)))
(assert (x1084 x861 (- x2090 x654)))
(assert (x809 x300 x763 x1355 x60))
(assert (= (x494 (- x1375 x2067)) (x657 (- x1375 x2067))))
(assert (x846 x753))
(assert (x928 x595 x1830 x1355 x60))
(assert (x1084 x654 (- x1140 x1830)))
(assert (x2257 x1365))
(assert (x846 x1436))
(assert (x846 x781))
(assert (x1084 x482 (- x1162 x44)))
(assert (x809 x1365 x1252 x595 x1830))
(assert (x2257 (- x1365 x1355)))
(assert (=> (<= x1825 10000) (= (x349 x1825) (x1299 x1825))))
(assert (x2257 x1176))
(assert (= (or (and x75 x327) x703) x345))
(assert (x928 x2216 x901 x44 x136))
(assert (x809 x136 x44 x2095 x2236))
(assert (x1084 x44 (- x136 x482)))
(assert (x2257 (- x482 x44)))
(assert (x1084 x44 (- x136 x901)))
(assert (x928 x1140 x654 x1830 x595))
(assert (= x1428 (x73 (x349 x1428))))
(assert (x846 x2022))
(assert (x1084 x171 (- x1208 x2095)))
(assert (x846 x1199))
(assert (= x549 (=> (and (= x520 (x338 (x349 x377) x1509 0)) (= (x338 (x349 x497) x1637 0) x1509) (<= 0 x1172) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1172) (= (x647 x520) x1172) (= x1341 (= 0 x1172)) (= x1637 (x338 (x349 x1645) (x1299 7) 0))) (and (=> (and (not x1341) (= x1645 x810)) x1170) (=> (and (not x469) x1341 (= x469 (> x2220 0)) (= (x1353 (- x1645 1)) x2220)) x732)))))
(assert (x1084 x136 (- x44 x60)))
(assert (= 0 (x1305 x989)))
(assert (= (ite x670 (ite (and x1643 x542) (x456 x251) (x1970 x251)) (x456 x251)) (x1742 x251)))
(assert (= 0 (x1926 x387)))
(assert (x928 x2236 x2095 x44 x136))
(assert (x846 x700))
(assert (x809 x2216 x901 x1293 x1221))
(assert (x1794 x1831))
(assert (x928 x1162 x482 x1140 x654))
(assert (x1084 x1252 (- x1365 x1140)))
(assert (= x229 (=> (and (= (= x695 0) x1898) (= (x338 (x349 x1765) (x1299 7) 0) x815) (>= x695 0) (= (x2265 1461501637330902918203684832716283019655932542975 x416) x907) (= (x338 (x349 x907) x1602 0) x1334) (= x228 (x2265 1461501637330902918203684832716283019655932542975 x883)) (<= x695 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x695 (x2342 x1334)) (= (x338 (x349 x228) x815 0) x1602)) (and (=> (and (= x1617 (< 0 x2065)) x1898 (= x2065 (x1353 (- x1765 1))) (not x1617)) x2133) (=> (and (not x1898) (= x1027 x1765)) x1171)))))
(assert (x846 x501))
(assert (x846 x2164))
(assert (x2257 (- x171 x136)))
(assert (x809 x1355 x60 x763 x300))
(assert (x846 x1037))
(assert (x846 x1642))
(assert (x846 x1097))
(assert (= (+ 1 (x73 x1909)) (x73 (x2112 x1909 1))))
(assert (x1084 x482 (- x1162 x1221)))
(assert (x928 x60 x1355 x654 x1140))
(assert (x928 x44 x136 x1365 x1252))
(assert (x928 x901 x2216 x861 x2090))
(assert (=> (<= x1021 10000) (= (x349 x1021) (x1299 x1021))))
(assert (x809 x1293 x1221 x1140 x654))
(assert (x1794 x1765))
(assert (x928 x1830 x595 x2095 x2236))
(assert (x846 x1174))
(assert (x846 x680))
(assert (= x1129 (and (not x1643) x542)))
(assert (x846 x716))
(assert (x846 x2168))
(assert (x1084 x1221 (- x1293 x2216)))
(assert (x928 x44 x136 x2095 x2236))
(assert (x928 x1830 x595 x1208 x171))
(assert (x1794 x1428))
(assert (x928 x1830 x595 x1221 x1293))
(assert (x846 x1522))
(assert (x846 x170))
(assert (= x1099 (=> (and (or (and (= x974 0) (= x300 0) x496) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x922) (= (x578 x546) x922) (= x463 (= x922 0)) (<= 0 x922) (not x496) (or (and x463 (= x974 0) (= x300 0)) (and (= x922 x300) (= x974 1) (not x463))) (= x2255 (x338 (x349 x313) (x1299 10) 0)) (= x546 (x338 (x349 x1253) x2255 0)))) (= x496 (= x313 0))) x2097)))
(assert (x928 x901 x2216 x2090 x861))
(assert (x809 x44 x136 x595 x1830))
(assert (x928 x1365 x1252 x2216 x901))
(assert (x2257 (- x1293 x1252)))
(assert (x2257 (- x300 x1355)))
(assert (x1084 x2095 (- x2236 x1293)))
(assert (x846 x1139))
(assert (x809 x654 x1140 x2095 x2236))
(assert (x2257 (- x763 x1140)))
(assert (x1084 x1252 (- x1365 x1830)))
(assert (x1084 x44 (- x136 x300)))
(assert (x809 x1162 x482 x901 x2216))
(assert (x846 x236))
(assert (x1098 x883))
(assert (x928 x136 x44 x654 x1140))
(assert (x1084 x136 (- x44 x1355)))
(assert (x2257 (- x171 x861)))
(assert (x846 x2009))
(assert (x846 x1857))
(assert (x846 x864))
(assert (x846 x2347))
(assert (= 0 (x489 x93)))
(assert (x2257 (- x1208 x1162)))
(assert (x1084 x1221 (- x1293 x1140)))
(assert (x1084 x1293 (- x1221 x136)))
(assert (x846 x1329))
(assert (x2257 x44))
(assert (=> (<= x745 10000) (= (x349 x745) (x1299 x745))))
(assert (x928 x136 x44 x1252 x1365))
(assert (x928 x1355 x60 x654 x1140))
(assert (x846 x2272))
(assert (x928 x2095 x2236 x300 x763))
(assert (x2257 (- x763 x1252)))
(assert (x928 x2216 x901 x1208 x171))
(assert (x809 x44 x136 x2090 x861))
(assert (x1084 x300 (- x763 x60)))
(assert (x846 x1933))
(assert (x1084 x60 (- x1355 x482)))
(assert (x928 x1365 x1252 x861 x2090))
(assert (x846 x2013))
(assert (x928 x654 x1140 x861 x2090))
(assert (x2257 (- x1140 x1208)))
(assert (x846 x636))
(assert (x1794 x673))
(assert (x2257 (- x1293 x1162)))
(assert (x2257 x482))
(assert (x928 x44 x136 x654 x1140))
(assert (x2257 (- x1830 x300)))
(assert (= x745 (x73 (x349 x745))))
(assert (= x867 (and x423 (not x1125))))
(assert (x846 x2276))
(assert (=> (>= 10000 x29) (= (x1299 x29) (x349 x29))))
(assert (x2257 (- x1208 x60)))
(assert (x1084 x1252 (- x1365 x2090)))
(assert (x2257 (- x482 x1208)))
(assert (x928 x1830 x595 x1293 x1221))
(assert (x2257 (- x60 x1252)))
(assert (x2257 (- x1208 x1140)))
(assert (x1084 x171 (- x1208 x2216)))
(assert (x846 x215))
(assert (= x1765 (x73 (x349 x1765))))
(assert (x928 x2216 x901 x1221 x1293))
(assert (x1084 x2236 (- x2095 x1208)))
(assert (= x319 (or (and x798 (not x2382)) (and x1341 x1907) (and (not x1063) x867))))
(assert (x2257 (- x901 x2090)))
(assert (x928 x2095 x2236 x136 x44))
(assert (x928 x1140 x654 x1355 x60))
(assert (x1794 x1251))
(assert (x1084 x1252 (- x1365 x2236)))
(assert (x2257 (- x901 x136)))
(assert (x2257 (- x2095 x861)))
(assert (x1084 x1221 (- x1293 x901)))
(assert (x1084 x595 (- x1830 x2090)))
(assert (x846 x972))
(assert (x846 x1815))
(assert (= (x1299 18446744073709551615) (x349 18446744073709551615)))
(assert (x809 x2095 x2236 x1162 x482))
(assert (x809 x1252 x1365 x1355 x60))
(assert (x846 x519))
(assert (=> (<= x2025 10000) (= (x1299 x2025) (x349 x2025))))
(assert (= (and x2319 x328) x798))
(assert (x2257 x1355))
(assert (x1794 x228))
(assert (x2257 (- x2216 x482)))
(assert (x928 x763 x300 x2095 x2236))
(assert (x846 x1860))
(assert (x1794 274184521717934524641157099916833587218))
(assert (x846 x1855))
(assert (x2257 (- x901 x595)))
(assert (x846 x326))
(assert (x2257 (- x1140 x595)))
(assert (= (or x1289 x213) x2264))
(assert (x1084 x1221 (- x1293 x136)))
(assert (x2257 (- x482 x2236)))
(assert (= x1307 (x73 (x349 x1307))))
(assert (= x1083 (or (and x1216 x1458) (and x1003 x813))))
(assert (x2257 x300))
(assert (x928 x482 x1162 x2090 x861))
(assert (x846 x178))
(assert (x2257 (- x654 x1293)))
(assert (= (=> (and (<= 0 x2285) (= x532 (x338 (x349 x245) (x1299 6) 0)) (= (= x2285 0) x2237) (= x2285 (x2011 x739)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2285) (= x1308 (x2265 1461501637330902918203684832716283019655932542975 x280)) (= x739 (x338 (x349 x1308) x532 0))) (and (=> (and (= x1677 (> x937 0)) x2237 (not x1677) (= (x1353 (- x245 1)) x937)) x567) (=> (and (not x2237) (= x245 x1324)) x177))) x408))
(assert (x1084 x2216 (- x901 x1252)))
(assert (x1084 x136 (- x44 x2236)))
(assert (x846 x1947))
(assert (x2257 (- x1252 x861)))
(assert (x928 x1365 x1252 x482 x1162))
(assert (= (x349 649617121) (x1299 649617121)))
(assert (x846 x370))
(assert (x2257 x1252))
(assert (x928 x1252 x1365 x1355 x60))
(assert (x846 x893))
(assert (x1084 x1162 (- x482 x2090)))
(assert (x1084 x1140 (- x654 x901)))
(assert (x1794 x2025))
(assert (x846 x479))
(assert (x928 x1293 x1221 x171 x1208))
(assert (= (x1995 x1678) (ite (and x1670 x1837) (x46 x1678) (x1276 x1678))))
(assert (x846 x346))
(assert (x809 x1221 x1293 x595 x1830))
(assert (= x2292 (=> (and (= (= 0 x379) x328) (= (x338 (x349 x497) x1769 0) x2144) (= x379 (x647 x857)) (<= 0 x379) (= (x338 (x349 x377) x2144 0) x857) (<= x379 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x338 (x349 x1307) (x1299 7) 0) x1769)) (and (=> (and (= x810 x1307) (not x328)) x1170) (=> x328 x847)))))
(assert (x1084 x1208 (- x171 x2216)))
(assert (x809 x136 x44 x2090 x861))
(assert (= (x73 (x349 x1664)) x1664))
(assert (= (x1834 x1523) (ite (and x1670 x1837) (x456 x1523) (ite (and x852 x2343) (x456 x1523) (x537 x1523)))))
(assert (x846 x1146))
(assert (x846 x2219))
(assert (= (x73 (x1299 87118632)) 87118632))
(assert (x846 x1424))
(assert (x2257 (- x2216 x1293)))
(assert (x928 x2236 x2095 x595 x1830))
(assert (x2257 (- x861 x60)))
(assert (= (=> (and (= (x1353 (- x510 x2162)) x2267) (= (x954 x3) x510) (= x68 (x2265 1461501637330902918203684832716283019655932542975 x883)) (= (x338 (x349 x1811) x1877 0) x3) (= x1448 (x338 (x349 x784) x1674 0)) (= (x338 (x349 x1021) x1747 0) x1088) (= (x338 (x349 x68) x1080 0) x1877) (<= 0 x2272) (= (x1700 x1448) x2272) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2272) (= (x338 (x349 x1007) (x1299 3) 0) x1080) (not (> x2162 x510)) (= x1811 (x2265 1461501637330902918203684832716283019655932542975 x416)) (= (x2265 1461501637330902918203684832716283019655932542975 x883) x784) (= x1892 (x338 (x349 x1007) (x1299 4) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x510) (= (x338 (x349 x1264) x1892 0) x1879) (= x942 (= 0 x2267)) (= x1674 (x338 (x349 x1007) (x1299 5) 0)) (= (x338 (x349 x1900) x1879 0) x1747) (<= 0 x510) (= (x2265 1461501637330902918203684832716283019655932542975 x416) x1900) (= x2162 (x1201 x1088)) (<= 0 x2162) (= x1264 (x2265 1461501637330902918203684832716283019655932542975 x883)) (<= x2162 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1021 (x2265 1461501637330902918203684832716283019655932542975 x1548))) (and (=> (and (or (and (= x1144 x1977) (= x113 (x2155 x2209)) (= (< 32 x1691) x876) x2002 (or (and (= x629 32) (not x876)) (and (= (x2363 (+ x1945 96)) x1697) x876 (or (and x2287 (= x499 (x2363 (+ x169 96))) (or (and x81 (= x1623 (x2363 (+ 128 x169))) (= x701 (< 128 x1691)) (= x629 128) (not x701) (= (x2363 (+ x1945 160)) x1627) (= (x2155 x1623) x205)) (and (= 96 x629) (not x81))) (= x1630 (x2363 (+ 128 x1945))) (= (x2155 x499) x1745) (= x81 (> x1691 96))) (and (not x2287) (= 64 x629))) (= x2287 (< 64 x1691)) (= x67 (x2155 x2357)) (= (x2363 (+ x169 64)) x2357))) (= x1061 x2209)) (and (not x2002) (= x629 0))) (= (x338 (x349 x1963) x336 0) x2138) (= x1127 (x2265 1461501637330902918203684832716283019655932542975 x416)) (= x734 (x2265 1461501637330902918203684832716283019655932542975 x1548)) (= (x235 (x349 x734)) x2127) (= x215 (x2393 x1570 1000000000000000000)) (or (not x1058) (and (= x1746 (x2363 (+ x1691 x1977))) x1058)) (= x1058 (< x1691 x629)) x1143 (= (x338 (x349 x1007) (x1299 4) 0) x158) (= x482 (x2393 x1671 x2272)) (= x1436 (x2265 1461501637330902918203684832716283019655932542975 x883)) (= x1671 (x759 (* 1000000000000000000 x2267))) (= x1691 (x1118 x169)) (= (x338 (x349 x1079) x54 0) x1612) (= x1823 (x2363 (+ x1104 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= x1162 (x2375 x1612)) (= (x2265 26959946667150639794667015087019630673637144422540572481103610249215 x1329) x1104) (>= x1162 0) (>= x596 0) (= x1278 0) (= x2267 x931) (= x65 (x1353 (- x1945 x169))) (= 1 x1328) (= x1416 (x2265 1461501637330902918203684832716283019655932542975 x416)) (= (> x1691 0) x2002) (< 0 x2272) (= x1079 (x2265 1461501637330902918203684832716283019655932542975 x1548)) (= x1447 x596) (< (+ x596 x2267) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1061 (x2363 (+ x126 96))) (= x2092 (+ x931 x1447)) (= (x2363 (+ 128 x1954)) x1977) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x836 x1162 x482)) (= 0 x2295) (= (x437 x1061) x1329) (= (x2363 (+ x126 100)) x1954) (= (x2265 x1328 x144) x1278) (= x1143 (< 0 x2127)) (= x336 (x338 (x349 x1127) x1359 0)) (= (ite (> x2267 115792089237316195423570985008687907853269984665640564039457) 1 0) x144) (= (x338 (x349 x1436) x1712 0) x54) (= (x2265 1461501637330902918203684832716283019655932542975 x883) x673) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1162) (= (x338 (x349 x1007) (x1299 11) 0) x1712) (= x1359 (x338 (x349 x673) x158 0)) (= x1570 (x836 x1162 x482)) (= x1963 (x2265 1461501637330902918203684832716283019655932542975 x1548)) (= (x1353 (- x65 32)) x1599) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x596) (= x1945 (x2363 (+ x169 100))) (= (x1201 x2138) x596) (not x942) (= x127 (x2363 (+ 68 x169)))) x507) (=> x942 x1019))) x1488))
(assert (x1084 x1355 (- x60 x2095)))
(assert (x846 x1525))
(assert (x846 x2100))
(assert (x2257 (- x1830 x136)))
(assert (x2257 (- x1140 x2216)))
(assert (= (=> (and (or (and x1445 (= x2215 0) (= 0 x861)) (and (or (and (= x861 0) x1196 (= 0 x2215)) (and (= x861 x2310) (not x1196) (= x2215 1))) (= x375 (x338 (x349 x497) x1706 0)) (<= 0 x2310) (= (= 0 x2310) x1196) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2310) (not x1445) (= x1706 (x338 (x349 x2021) (x1299 10) 0)) (= x2310 (x2361 x375)))) (= x1445 (= x2021 0))) x283) x1731))
(assert (x809 x595 x1830 x171 x1208))
(assert (x1084 x300 (- x763 x1140)))
(assert (= x1433 (and x852 (not x2343))))
(assert (x928 x595 x1830 x60 x1355))
(assert (x846 x1308))
(assert (x846 x1165))
(assert (x846 x1064))
(assert (x928 x654 x1140 x482 x1162))
(assert (x928 x171 x1208 x654 x1140))
(assert (x928 x300 x763 x2090 x861))
(assert (x2257 (- x654 x1162)))
(assert (x809 x1365 x1252 x1162 x482))
(assert (= x1157 x391))
(assert (= (x349 274184521717934524641157099916833587214) (x1299 274184521717934524641157099916833587214)))
(assert (x928 x1293 x1221 x44 x136))
(assert (x1794 x2305))
(assert (x928 x1252 x1365 x901 x2216))
(assert (x2257 (- x2095 x1293)))
(assert (x846 x1163))
(assert (x846 x368))
(assert (x1794 x2266))
(assert (x846 x1971))
(assert (x1084 x861 (- x2090 x2095)))
(assert (x846 x1079))
(assert (x846 x2098))
(assert (x1084 x1293 (- x1221 x1365)))
(assert (x1794 x325))
(assert (x846 x196))
(assert (x846 x294))
(assert (x1084 x1208 (- x171 x2090)))
(assert (x1794 x716))
(assert (x846 x603))
(assert (x1084 x171 (- x1208 x136)))
(assert (x1084 x1140 (- x654 x44)))
(assert (x1084 x1355 (- x60 x861)))
(assert (= x1689 (=> (and (not x2373) (= (> x1699 2) x2373)) x2074)))
(assert (x1084 x1830 (- x595 x1252)))
(assert (x2257 (- x2090 x2236)))
(assert (x2257 (- x1365 x300)))
(assert (=> (>= 10000 x1815) (= (x1299 x1815) (x349 x1815))))
(assert (= x439 (=> (and (= (< 0 x317) x1949) (= (x1353 (- x745 1)) x317)) (and (=> (not x1949) x1584) (=> x1949 x715)))))
(assert (x1084 x1830 (- x595 x300)))
(assert (x2257 (- x2090 x2216)))
(assert (x1547 1000000000000000000 x2267))
(assert (x809 x300 x763 x901 x2216))
(assert (x2257 (- x300 x136)))
(assert (=> (>= 10000 x2376) (= (x349 x2376) (x1299 x2376))))
(assert (x2257 (- x1365 x1293)))
(assert (x1361 x416 x1762))
(assert (= (x1700 x1448) (ite (and x2152 (not x149)) (x768 x1448) (x791 x1448))))
(assert (x928 x654 x1140 x1162 x482))
(assert (x2257 (- x901 x2095)))
(assert (x2257 (- x1355 x2236)))
(assert (x846 x1601))
(assert (x846 x2202))
(assert (x809 x1140 x654 x136 x44))
(assert (x846 x1716))
(assert (x2257 (- x2216 x1365)))
(assert (x928 x763 x300 x654 x1140))
(assert (x846 x379))
(assert (x809 x482 x1162 x901 x2216))
(assert (x928 x1293 x1221 x595 x1830))
(assert (x846 x93))
(assert (x846 x890))
(assert (x2257 (- x2090 x2095)))
(assert (x809 x861 x2090 x1140 x654))
(assert (x928 x1140 x654 x901 x2216))
(assert (x846 x1679))
(assert (=> (<= x1396 10000) (= (x1299 x1396) (x349 x1396))))
(assert (x846 x2224))
(assert (x2257 (- x1140 x482)))
(assert (x1794 x589))
(assert (x846 x1754))
(assert (x928 x1221 x1293 x2216 x901))
(assert (= (or (and x1333 x1148) x138) x1540))
(assert (=> (>= 10000 x734) (= (x1299 x734) (x349 x734))))
(assert (x846 x434))
(assert (x1084 x2236 (- x2095 x1221)))
(assert (x846 x2014))
(assert (x846 x1765))
(assert (x846 x551))
(assert (= x982 (and x2177 x1981)))
(assert (x1794 x1664))
(assert (x846 x1699))
(assert (=> (<= x908 10000) (= (x349 x908) (x1299 x908))))
(assert (= (x1299 274184521717934524641157099916833587206) (x349 274184521717934524641157099916833587206)))
(assert (x2257 (- x1830 x654)))
(assert (x809 x595 x1830 x136 x44))
(assert (x1084 x482 (- x1162 x1365)))
(assert (x846 x1825))
(assert (= (x1742 x410) (ite x670 (ite (and x1643 x542) (x456 x410) (x1970 x410)) (x456 x410))))
(assert (x2257 1000000000000000000))
(assert (= (x73 (x349 x2227)) x2227))
(assert (x846 x1176))
(assert (x1794 x2376))
(assert (x928 x1365 x1252 x1162 x482))
(assert (x928 x654 x1140 x44 x136))
(assert (x1084 x861 (- x2090 x60)))
(assert (x1794 x157))
(assert (x846 x767))
(assert (= x821 (x73 (x349 x821))))
(assert (x1084 x1365 (- x1252 x901)))
(assert (x1084 x2090 (- x861 x136)))
(assert (x846 x1548))
(assert (x846 x1462))
(assert (x2257 (- x595 x1252)))
(assert (x2257 (- x1221 x654)))
(assert (x928 x654 x1140 x2216 x901))
(assert (x1098 x1961))
(assert (x846 x748))
(assert (= (=> (= x267 (= 274184521717934524641157099916833587214 x1205)) (and (=> (not x267) x483) (=> (and (= (x1918 x1523) x2071) (= x97 x1212) (not (= 2514000705 x1313)) (= x2197 x865) (= x377 x34) (= (x235 (x349 274184521717934524641157099916833587214)) x191) (= x1778 (or (and (> 64 x1754) (= (<= x1754 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1754))) (= (>= (+ x2071 x2197) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x960) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2071) (= x1212 x2197) (= x1313 2835717307) (= x160 274184521717934524641157099916833587206) (= 274184521717934524641157099916833587206 x2171) (< (+ x2197 x2071) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x305 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x960) (not x1707) (= 32 x1489) (not (= x1313 649617121)) (= x1078 (x338 (x349 x377) (x1299 1) 0)) (= 68 x2045) (= (x1834 x1932) x305) (not x1778) (= x1400 (x1353 (- x305 x1212))) (not (= x1313 826074471)) (= x1523 (x338 (x349 x377) (x1299 1) 0)) x267 (not (< x1313 649617121)) (= (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0) x1932) (<= 0 x2071) (<= x34 1461501637330902918203684832716283019655932542975) (= x321 (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0)) (= 1 x961) (<= 0 x305) (> x191 0) (not x23) (= (x1353 (- x2045 4)) x1754) (= (< x305 x1212) x23) (= x866 x2071) (= x1707 (> x2197 x305)) (= (+ x866 x865) x2383) (not (= 1889567281 x1313)) (= x856 x2045) (not (> 4 x2045)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1393)) x1946))) x1114))
(assert (=> (>= 10000 x1007) (= (x349 x1007) (x1299 x1007))))
(assert (x2257 (- x1140 x1365)))
(assert (x2257 (- x2095 x1252)))
(assert (x809 x1162 x482 x763 x300))
(assert (x2257 (- x1293 x763)))
(assert (x1084 x2216 (- x901 x60)))
(assert (x928 x1208 x171 x300 x763))
(assert (x809 x901 x2216 x2095 x2236))
(assert (x809 x60 x1355 x171 x1208))
(assert (x846 x973))
(assert (x846 x66))
(assert (= (or (and (not x442) x697) x1529) x581))
(assert (x846 x740))
(assert (x2257 (- x1293 x300)))
(assert (x846 x4))
(assert (= (x73 (x349 x285)) x285))
(assert (x928 x654 x1140 x136 x44))
(assert (= (x73 (x1299 50942633119752846454219349998365661925608737367104304655302372697894809501696)) 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (x928 x1208 x171 x1355 x60))
(assert (x1794 x2355))
(assert (x1084 x2095 (- x2236 x300)))
(assert (x956 x1151 x2390))
(assert (x846 x539))
(assert (= x1885 (x73 (x349 x1885))))
(assert (x2257 (- x136 x1355)))
(assert (x846 x2045))
(assert (x2257 x1434))
(assert (x928 x1221 x1293 x136 x44))
(assert (x846 x2067))
(assert (x1084 x1221 (- x1293 x1365)))
(assert (x1084 x60 (- x1355 x136)))
(assert (x846 x1573))
(assert (x1084 x1140 (- x654 x1162)))
(assert (x928 x60 x1355 x763 x300))
(assert (x1084 x300 (- x763 x136)))
(assert (x928 x901 x2216 x171 x1208))
(assert (x809 x2236 x2095 x1162 x482))
(assert (x2257 (- x763 x2095)))
(assert (x2257 (- x901 x763)))
(assert (x1084 x2236 (- x2095 x1162)))
(assert (x809 x60 x1355 x1162 x482))
(assert (x846 x162))
(assert (x928 x1208 x171 x1252 x1365))
(assert (x2257 (- x2216 x171)))
(assert (x846 x2277))
(assert (x2257 (- x901 x171)))
(assert (x928 x44 x136 x60 x1355))
(assert (x2257 (- x1252 x1208)))
(assert (x846 x1506))
(assert (x928 x482 x1162 x1140 x654))
(assert (x1084 x1140 (- x654 x1208)))
(assert (x846 x60))
(assert (= (x1373 x826) (ite (and x1837 x1670) (x850 x826) (ite (and x2343 x852) (x713 x826) (x850 x826)))))
(assert (x809 x44 x136 x1355 x60))
(assert (x809 x2095 x2236 x595 x1830))
(assert (x2257 (- x861 x1208)))
(assert (x1084 x1162 (- x482 x1252)))
(assert (= x192 x1727))
(assert (x846 x829))
(assert (x809 x1355 x60 x1252 x1365))
(assert (= (x73 (x349 x673)) x673))
(assert (x2257 (- x2095 x482)))
(assert (= (x1305 x1139) 0))
(assert (x846 x1138))
(assert (x1098 x280))
(assert (x809 x654 x1140 x1293 x1221))
(assert (x928 x1162 x482 x2236 x2095))
(assert (x928 x1208 x171 x1830 x595))
(assert (x2257 (- x171 x1252)))
(assert (x928 x136 x44 x1208 x171))
(assert (x1084 x136 (- x44 x2216)))
(assert (x1084 x1208 (- x171 x60)))
(assert (x2257 (- x1830 x763)))
(assert (x928 x901 x2216 x2236 x2095))
(assert (x928 x1208 x171 x482 x1162))
(assert (= (x494 (- 164 x2067)) (x657 (- 164 x2067))))
(assert (x809 x300 x763 x2095 x2236))
(assert (= x1924 x2057))
(assert (= x281 (=> (= x1059 (< 1 x1699)) (and (=> (not x1059) x2074) (=> x1059 x1526)))))
(assert (x846 x2216))
(assert (x928 x2216 x901 x2236 x2095))
(assert (x2257 (- x1252 x595)))
(assert (x2257 (- x60 x1293)))
(assert (x928 x1140 x654 x1208 x171))
(assert (x928 x901 x2216 x1140 x654))
(assert (x846 x1232))
(assert (x809 x1208 x171 x1162 x482))
(assert (x928 x901 x2216 x1162 x482))
(assert (x1361 x1548 x835))
(assert (= x670 (or (and x1643 x542) (and x453 x1129))))
(assert (x846 x431))
(assert (x846 x266))
(assert (x846 x2331))
(assert (x809 x1162 x482 x595 x1830))
(assert (x928 x1355 x60 x1221 x1293))
(assert (x809 x482 x1162 x1355 x60))
(assert (= x414 (or (and (not x2081) x783) x493)))
(assert (= (=> (and (= x377 (x1270 x2219)) (< 1 x1605) (= x1375 (x2363 (+ x648 64))) (< 1 x1420) (= (x1270 196) x1307) (>= 1461501637330902918203684832716283019655932542975 x1205) (= (x2363 (+ 64 x1507)) x2219) (>= x1168 0) (>= 1461501637330902918203684832716283019655932542975 x497) (= (x338 (x349 x377) x790 0) x534) (<= 0 x2260) (not (> x1307 x2260)) (<= x2260 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1699 1) (<= 0 x2260) (= (x1270 x378) x1205) (<= x2260 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x377 1461501637330902918203684832716283019655932542975) (< 1 x1176) (= (x1270 x1375) x497) (= x465 (x338 (x349 x1307) (x1299 7) 0)) (<= x1168 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x338 (x349 x497) x465 0) x790) (= (< 0 x1168) x1125) (= x1168 (x647 x534)) (= x378 (x2363 (+ x1854 64))) (not (> x1307 x2260))) (and (=> (and x1125 (= x804 (x853 x585)) (>= x804 0) (= 0 x232) (= x290 (x338 (x349 x497) x1469 0)) (= x585 (x338 (x349 x377) x290 0)) (= (x338 (x349 x1307) (x1299 9) 0) x1469) (= x804 x1293) (<= x804 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x64) (=> (not x1125) x627))) x1526))
(assert (x928 x861 x2090 x2236 x2095))
(assert (x928 x2216 x901 x136 x44))
(assert (x2257 (- x654 x60)))
(assert (x2257 x60))
(assert (x928 x654 x1140 x1830 x595))
(assert (=> (>= 10000 x970) (= (x1299 x970) (x349 x970))))
(assert (x928 x1293 x1221 x136 x44))
(assert (x2257 (- x171 x44)))
(assert (x846 x1685))
(assert (x928 x2236 x2095 x482 x1162))
(assert (x928 x1252 x1365 x2095 x2236))
(assert (x928 x861 x2090 x60 x1355))
(assert (x1794 x203))
(assert (x928 x1140 x654 x2236 x2095))
(assert (x1794 x1331))
(assert (= (x349 69947311) (x1299 69947311)))
(assert (x1084 x1830 (- x595 x2236)))
(assert (x1084 x861 (- x2090 x595)))
(assert (x1084 x901 (- x2216 x1293)))
(assert (x2257 (- x44 x1365)))
(assert (x928 x1293 x1221 x763 x300))
(assert (=> (<= x166 10000) (= (x1299 x166) (x349 x166))))
(assert (x846 x1678))
(assert (x1794 x1961))
(assert (x1084 x44 (- x136 x2216)))
(assert (x809 x1208 x171 x136 x44))
(assert (= (or (and (not x1239) x41) (and x2391 (not x1633))) x1309))
(assert (x846 x854))
(assert (x846 x970))
(assert (x928 x1140 x654 x300 x763))
(assert (x2257 (- x2236 x1355)))
(assert (x2257 (- x1140 x1830)))
(assert (= x362 (and (not x267) x260)))
(assert (x1084 x44 (- x136 x1293)))
(assert (x846 x945))
(assert (x846 x108))
(assert (x1084 x1365 (- x1252 x1208)))
(assert (x2257 (- x2095 x1140)))
(assert (x1084 x1365 (- x1252 x44)))
(assert (x809 x1252 x1365 x595 x1830))
(assert (x846 x171))
(assert (x2257 (- x861 x482)))
(assert (x2257 (- x901 x482)))
(assert (x846 x1206))
(assert (x846 x1576))
(assert (x809 x654 x1140 x763 x300))
(assert (x846 x1821))
(assert (x1084 x1365 (- x1252 x2216)))
(assert (x846 x114))
(assert (x2257 (- x1162 x1365)))
(assert (x809 x861 x2090 x1293 x1221))
(assert (= x881 (=> (and (or (and (= 96 x93) x291) (and (not x291) (= (x2363 (+ x731 96)) x2134) (= x93 x1068))) (= (x625 (x349 x1331)) x194) (not (= x196 0)) (= (= x2181 0) x291) (= (x2170 x93) x2245) (= x795 (> x2245 0)) (or (not x795) (and (= x1538 (x2170 x93)) (= x1575 (= x1502 0)) (< 0 x1502) (not (or (and (> 32 x1538) (= (<= x1538 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1538))) (= (not x1575) x2036) (= (ite x2036 1 0) x318) (= x1502 x318) (= (x1600 x2323) x1502) (= (x2363 (+ 32 x93)) x2323) x795)) x557 (= x557 (< (x2079 (x349 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x801)))
(assert (x1084 x300 (- x763 x1365)))
(assert (x1794 x1184))
(assert (x809 x1221 x1293 x136 x44))
(assert (= x580 (x73 (x349 x580))))
(assert (x928 x1252 x1365 x300 x763))
(assert (x809 x300 x763 x2090 x861))
(assert (x2257 (- x2090 x595)))
(assert (=> (>= 10000 x1664) (= (x1299 x1664) (x349 x1664))))
(assert (x846 x1377))
(assert (x2257 (- x595 x2216)))
(assert (x809 x1830 x595 x901 x2216))
(assert (x1084 x2095 (- x2236 x763)))
(assert (x846 x85))
(assert (= (ite x670 (ite (and x542 x1643) (x698 x1567) (x850 x1567)) (x850 x1567)) (x2336 x1567)))
(assert (x846 x1954))
(assert (x928 x763 x300 x1293 x1221))
(assert (x1084 x300 (- x763 x44)))
(assert (x1084 x901 x2216))
(assert (x2257 (- x1293 x171)))
(assert (x2257 (- x171 x1140)))
(assert (x809 x1365 x1252 x763 x300))
(assert (x846 x2008))
(assert (x1084 x2216 (- x901 x1355)))
(assert (x1084 x136 (- x44 x1221)))
(assert (x928 x2090 x861 x1365 x1252))
(assert (x2257 (- x60 x136)))
(assert (= x1900 (x73 (x349 x1900))))
(assert (= (x73 (x349 x1565)) x1565))
(assert (x809 x1293 x1221 x901 x2216))
(assert (x846 x1067))
(assert (x2257 (- x1162 x1208)))
(assert (x809 x1140 x654 x1162 x482))
(assert (x1084 x1293 (- x1221 x44)))
(assert (x928 x44 x136 x1162 x482))
(assert (x846 x276))
(assert (= x1232 (x73 (x349 x1232))))
(assert (x1084 x1140 (- x654 x2236)))
(assert (x846 x1354))
(assert (x1084 x1252 (- x1365 x1293)))
(assert (x152 x854 x513))
(assert (= x1556 x2152))
(assert (= x1896 (and (not x1148) x1333)))
(assert (= (x73 (x2112 x70 1)) (+ (x73 x70) 1)))
(assert (x1084 x1140 (- x654 x861)))
(assert (x809 x2095 x2236 x1293 x1221))
(assert (x846 x156))
(assert (x928 x1140 x654 x763 x300))
(assert (=> (>= 10000 x2227) (= (x349 x2227) (x1299 x2227))))
(assert (=> (>= 10000 x1161) (= (x1299 x1161) (x349 x1161))))
(assert (x1084 x1208 (- x171 x1355)))
(assert (x2257 (- x1208 x901)))
(assert (x928 x2095 x2236 x861 x2090))
(assert (=> (<= x313 10000) (= (x349 x313) (x1299 x313))))
(assert (x1084 x1208 (- x171 x1140)))
(assert (= (x2091 (- x648 x1836)) (x1888 (- x648 x1836))))
(assert (x846 x1988))
(assert (x928 x1365 x1252 x1140 x654))
(assert (x1084 x2090 (- x861 x60)))
(assert (x846 x2065))
(assert (x1084 x861 (- x2090 x1293)))
(assert (x2257 (- x595 x1140)))
(assert (x2257 (- x60 x1221)))
(assert (x928 x1830 x595 x171 x1208))
(assert (x1084 x1830 (- x595 x763)))
(assert (x846 x1112))
(assert (= x165 (and x2 x1527)))
(assert (= x755 (x73 (x349 x755))))
(assert (x1794 x970))
(assert (x2257 x861))
(assert (x1084 x1252 (- x1365 x901)))
(assert (x846 x693))
(assert (x846 x1481))
(assert (= (=> (and (<= x6 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1650 x1105) x396) (<= 0 x1719) (= x707 (x435 x1698)) (or (and (not x1832) (= x763 0)) (and (= (= x707 0) x124) (or (and (= (x1650 x1105) x916) (= x780 x916) x1847) (and (= x1146 x780) (not x1847))) (= (x1650 x1105) x57) (or (and (not (< x780 x971)) (= x301 x763) (= (x1353 (- x780 x971)) x301) (= (x233 x1753) x971) x124) (and (not (> x707 x780)) (= (x1353 (- x780 x707)) x1284) (= 604800 x244) (= x763 x296) (= (ite (> 604800 x1284) x1284 604800) x296) (not x124))) (= x1847 (> x1146 x57)) x1832)) (= x1741 (= x974 0)) (or (and (= x2150 x729) (= x935 (x338 (x349 x745) (x1299 6) 0)) (= x1319 (x836 x763 x300)) (= x63 x148) (not x1260) (< (x836 x763 x300) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x63) (< (+ x729 x63) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1593 (x338 (x349 x1253) x529 0)) (= (x338 (x349 x745) (x1299 5) 0) x529) (= (x791 x1593) x63) (= x1319 x729) (= x877 (x338 (x349 x1253) x935 0)) (>= x63 0) (= (+ x2150 x148) x1606)) (and x1260 (= (x338 (x349 x1253) x1461 0) x1632) (= x1461 (x338 (x349 x745) (x1299 6) 0)))) (<= 0 x6) (= x1105 (x2363 (+ x1753 32))) (= x1719 (x955 x605)) (>= x707 0) (<= x1719 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2151 (x338 (x349 x745) (x1299 6) 0)) (= (x338 (x349 x745) (x1299 1) 0) x1909) (or (and (= x726 (x338 (x349 x1253) x1446 0)) (not x1741) (= (x338 (x349 x745) (x1299 10) 0) x1446)) x1741) (= (x2112 x1909 1) x605) (= (x1179 x1909) x6) (= (< x707 x396) x1832) (= x1260 (= x763 0)) (= (x2363 (+ x1753 64)) x30) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x707) (= (x338 (x349 x1253) x2151 0) x1698)) x1953) x2097))
(assert (= x981 (or x382 (and x423 x1125))))
(assert (=> (>= 10000 x1963) (= (x349 x1963) (x1299 x1963))))
(assert (x1084 x2216 (- x901 x1140)))
(assert (x928 x1140 x654 x136 x44))
(assert (x846 x1940))
(assert (x928 x2236 x2095 x60 x1355))
(assert (= (and x2391 x1633) x1614))
(assert (x1084 x1830 (- x595 x1355)))
(assert (x2257 x2095))
(assert (x809 x654 x1140 x595 x1830))
(assert (= x134 true))
(assert (x809 x654 x1140 x1355 x60))
(assert (x928 x136 x44 x482 x1162))
(assert (x2257 (- x595 x1221)))
(assert (x1084 x2236 (- x2095 x2090)))
(assert (x928 x1252 x1365 x482 x1162))
(assert (x1084 x2095 (- x2236 x1140)))
(assert (= (=> (= x2021 x1076) x1731) x1814))
(assert (x1084 x1221 (- x1293 x654)))
(assert (= x1705 (=> (and (= (x338 (x349 x745) (x1299 6) 0) x1934) (= x62 (x435 x2386)) (<= 0 x62) (= (x338 (x349 x1253) x1934 0) x2386) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x62) (= (= 0 x62) x978)) (and (=> (and (not x978) (= x745 x1582)) x18) (=> x978 x2223)))))
(assert (x809 x901 x2216 x595 x1830))
(assert (= (=> (and (= x553 (x338 (x349 x1885) x2149 0)) (= x353 (= x2095 0)) (or (and (not x775) (= x279 (x2265 1461501637330902918203684832716283019655932542975 x280))) x775) (<= x1566 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1257) (= x1885 (x2265 1461501637330902918203684832716283019655932542975 x280)) (<= 0 x669) (or (and (= (x2265 1461501637330902918203684832716283019655932542975 x280) x2327) x353) (and (= x1001 x475) (= x2075 (x338 (x349 x2123) (x1299 5) 0)) (= (+ x1034 x1810) x550) (= x2392 (x338 (x349 x590) x2075 0)) (= x1810 x1001) (= x475 (x836 x2095 x2236)) (= x590 (x2265 1461501637330902918203684832716283019655932542975 x280)) (<= 0 x369) (= (x2265 1461501637330902918203684832716283019655932542975 x280) x943) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1001 x369)) (= x369 (x1700 x2392)) (= x369 x1034) (not x353) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x369) (< (x836 x2095 x2236) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= x775 (= x132 0)) (<= x669 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1566 (x955 x766)) (= x259 (x338 (x349 x2123) (x1299 1) 0)) (= (< x1257 x681) x1728) (or (and (= (= x1257 0) x868) (= (x545 x1389) x1774) x1728 (or (and (= x2058 x653) (= (x545 x1389) x2058) x1658) (and (not x1658) (= x653 x1146))) (or (and (not (< x653 x1101)) (= x4 x2095) (= (x359 x1197) x1101) (= x4 (x1353 (- x653 x1101))) x868) (and (= x1100 x2095) (= x569 604800) (not x868) (= x1091 (x1353 (- x653 x1257))) (not (< x653 x1257)) (= (ite (> 604800 x1091) x1091 604800) x1100))) (= x1658 (< x1774 x1146))) (and (not x1728) (= 0 x2095))) (= (x2011 x553) x1257) (= (x2112 x259 1) x766) (= x855 (x2363 (+ x1197 64))) (= (x545 x1389) x681) (= (x338 (x349 x2123) (x1299 6) 0) x2149) (<= 0 x1566) (<= 0 x1257) (= (x2363 (+ x1197 32)) x1389) (= x669 (x1179 x259))) x1993) x2315))
(assert (x2257 (- x1365 x44)))
(assert (x2257 (- x136 x2090)))
(assert (x846 x2095))
(assert (x846 x763))
(assert (x846 x62))
(assert (x928 x1355 x60 x1140 x654))
(assert (x1084 x2216 (- x901 x1293)))
(assert (x846 x151))
(assert (x928 x1293 x1221 x482 x1162))
(assert (x1084 x2090 (- x861 x763)))
(assert (x2257 (- x1365 x1208)))
(assert (x846 x1421))
(assert (x846 x378))
(assert (x928 x1830 x595 x300 x763))
(assert (x1084 x901 (- x2216 x1355)))
(assert (x1084 x2216 (- x901 x482)))
(assert (x809 x300 x763 x1162 x482))
(assert (x846 x2181))
(assert (= 635128645 (x73 (x1299 635128645))))
(assert (x928 x2216 x901 x1365 x1252))
(assert (x1794 x1680))
(assert (x1084 x1830 (- x595 x171)))
(assert (x1084 x1355 (- x60 x1221)))
(assert (x846 x1328))
(assert (x928 x1252 x1365 x654 x1140))
(assert (x809 x482 x1162 x2090 x861))
(assert (x1084 x654 (- x1140 x2216)))
(assert (x928 x1252 x1365 x763 x300))
(assert (= x1021 (x73 (x349 x1021))))
(assert (x846 x1553))
(assert (x809 x763 x300 x595 x1830))
(assert (x846 x2209))
(assert (x809 x1365 x1252 x1140 x654))
(assert (x1794 x672))
(assert (x2257 (- x901 x1365)))
(assert (x2257 (- x1162 x763)))
(assert (x2257 (- x2236 x1140)))
(assert (=> (<= x933 10000) (= (x349 x933) (x1299 x933))))
(assert (= x1052 (x73 (x349 x1052))))
(assert (x846 x1127))
(assert (x928 x171 x1208 x1830 x595))
(assert (x846 x651))
(assert (x1794 x1120))
(assert (x303 x1570 1000000000000000000))
(assert (x846 x1215))
(assert (x846 x1389))
(assert (x1084 x482 (- x1162 x1355)))
(assert (x1794 x784))
(assert (x846 x1845))
(assert (= (x73 (x349 x2339)) x2339))
(assert (x1794 x2004))
(assert (x2257 (- x2236 x763)))
(assert (x846 x1538))
(assert (x846 x2078))
(assert (x2257 (- x2090 x763)))
(assert (x809 x1293 x1221 x595 x1830))
(assert (x928 x1221 x1293 x1140 x654))
(assert (x809 x2090 x861 x595 x1830))
(assert (x1084 x1162 (- x482 x1208)))
(assert (x2257 (- x136 x482)))
(assert (x2257 (- x763 x2090)))
(assert (x2257 (- x60 x1162)))
(assert (x809 x1221 x1293 x171 x1208))
(assert (x846 x980))
(assert (x846 x1811))
(assert (x846 x1317))
(assert (x2257 (- x171 x60)))
(assert (x928 x300 x763 x2095 x2236))
(assert (x846 x1076))
(assert (x1902 x897))
(assert (x846 x1428))
(assert (x809 x2216 x901 x136 x44))
(assert (x846 x1859))
(assert (x1084 x2236 (- x2095 x300)))
(assert (x2257 (- x136 x763)))
(assert (x1084 x763 (- x300 x171)))
(assert (x2257 (- x60 x2216)))
(assert (x809 x2095 x2236 x2090 x861))
(assert (= x677 (and x2064 x619)))
(assert (x1084 x300 (- x763 x1830)))
(assert (x846 x1348))
(assert (x1084 x171 (- x1208 x654)))
(assert (x2257 (- x763 x1293)))
(assert (x1084 x901 (- x2216 x171)))
(assert (x846 x901))
(assert (x846 x2034))
(assert (x846 x1036))
(assert (x1794 x280))
(assert (= x468 (x73 (x349 x468))))
(assert (x809 x482 x1162 x763 x300))
(assert (= x1714 (x73 (x349 x1714))))
(assert (x846 x1370))
(assert (x1084 x901 (- x2216 x300)))
(assert (= (ite (and x263 (not x1342) (not x1921)) (x1175 x1158) (x1994 x1158)) (x954 x1158)))
(assert (x928 x861 x2090 x1162 x482))
(assert (x846 x601))
(assert (x2257 (- x1293 x482)))
(assert (x2257 (- x2095 x136)))
(assert (x846 x2355))
(assert (x1084 x171 (- x1208 x1221)))
(assert (= x1654 (or x1912 x227)))
(assert (= (=> (and (= (x2265 1461501637330902918203684832716283019655932542975 x416) x2359) (= (x338 (x349 x1007) (x1299 7) 0) x102) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1131) (= x1752 (= 0 x1131)) (= x646 (x338 (x349 x1825) x102 0)) (= (x2265 1461501637330902918203684832716283019655932542975 x883) x1825) (= (x338 (x349 x2359) x646 0) x380) (<= 0 x1131) (= (x2342 x380) x1131)) (and (=> (and (not x1752) (= x1027 x1007)) x1171) (=> x1752 x746))) x1136))
(assert (x928 x44 x136 x171 x1208))
(assert (and (= (x836 27 3) 81) (= (x836 3 3) 9) (= (x836 9 9) 81) (= (x836 9 3) 27)))
(assert (x928 x1252 x1365 x1293 x1221))
(assert (x846 x1455))
(assert (x2257 (- x2090 x1162)))
(assert (x1794 x2339))
(assert (x1084 x1830 (- x595 x861)))
(assert (x1084 x1252 (- x1365 x763)))
(assert (x2257 (- x60 x1208)))
(assert (x928 x300 x763 x171 x1208))
(assert (x1084 x1208 (- x171 x1252)))
(assert (=> (<= x2004 10000) (= (x1299 x2004) (x349 x2004))))
(assert (x928 x2236 x2095 x861 x2090))
(assert (x2257 (- x44 x1208)))
(assert (=> (>= 10000 x468) (= (x1299 x468) (x349 x468))))
(assert (= (or x1309 x2193) x703))
(assert (x2257 (- x1252 x2095)))
(assert (=> (<= x755 10000) (= (x349 x755) (x1299 x755))))
(assert (x1084 x2216 (- x901 x1830)))
(assert (x846 x1849))
(assert (x846 x2111))
(assert (= (x1065 x946) (ite (and x1260 x184) (x791 x946) (x1095 x946))))
(assert (= (x1337 (- x378 x86)) (x2302 (- x378 x86))))
(assert (x1084 x1162 (- x482 x861)))
(assert (x1084 x60 (- x1355 x1830)))
(assert (x846 x169))
(assert (x846 x2053))
(assert (x1794 x734))
(assert (x846 x622))
(assert (= x656 (=> (and (= (x338 (x349 x164) (x1299 6) 0) x2289) (= x621 (x338 (x349 x1253) x2289 0)) (= (= x1686 0) x1132) (>= x1686 0) (= x1686 (x435 x621)) (<= x1686 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and x1132 (= (< 0 x1908) x180) (= x1908 (x1353 (- x164 1))) (not x180)) x1536) (=> (and (not x1132) (= x1582 x164)) x18)))))
(assert (x846 x594))
(assert (x846 x1415))
(assert (x809 x1293 x1221 x1162 x482))
(assert (= 468353030 (x73 (x1299 468353030))))
(assert (x2257 (- x136 x1208)))
(assert (= (x1305 x1165) 0))
(assert (x2257 (- x1221 x2090)))
(assert (x2257 (- x300 x1221)))
(assert (x1084 x1293 x1221))
(assert (x809 x1208 x171 x1140 x654))
(assert (x2257 (- x861 x171)))
(assert (x809 x1355 x60 x1140 x654))
(assert (= (x289 x1740) 0))
(assert (x846 x103))
(assert (x2257 (- x1830 x2216)))
(assert (x1084 x595 (- x1830 x60)))
(assert (x2257 (- x1365 x901)))
(assert (x2257 (- x1140 x2236)))
(assert (x846 x1530))
(assert (x846 x146))
(assert (x2257 (- x763 x1208)))
(assert (= (x2302 (- x648 x86)) (x1337 (- x648 x86))))
(assert (= (and x295 x2360) x2136))
(assert (x846 x1686))
(assert (x928 x654 x1140 x1208 x171))
(assert (x846 x203))
(assert (x2257 (- x44 x1293)))
(assert (x2257 (- x60 x300)))
(assert (x846 x902))
(assert (= x1912 (or (and (not x1236) x1856) (and x1405 x1167) (and x677 (not x94)))))
(assert (x1084 x654 (- x1140 x595)))
(assert (x2257 (- x44 x300)))
(assert (x2257 (- x2095 x300)))
(assert (x846 x1472))
(assert (= (and x2325 (not x487)) x1989))
(assert (x928 x1830 x595 x136 x44))
(assert (= x997 (=> (= (< 0 x2123) x2360) (and (=> x2360 x79) (=> (not x2360) x1638)))))
(assert (x1794 x1860))
(assert (x2257 (- x1140 x861)))
(assert (x846 x1432))
(assert (= x627 (=> (= (> x1307 0) x1063) (and (=> x1063 x2292) (=> (not x1063) x732)))))
(assert (= 1986467848 (x73 (x1299 1986467848))))
(assert (= (x73 (x349 x166)) x166))
(assert (x846 x1703))
(assert (x928 x595 x1830 x2090 x861))
(assert (= (and x1043 x78) x2391))
(assert (= x228 (x73 (x349 x228))))
(assert (x2257 (- x300 x44)))
(assert (= (x73 (x1299 649617121)) 649617121))
(assert (x928 x861 x2090 x1293 x1221))
(assert (x846 x2122))
(assert (=> (<= x228 10000) (= (x349 x228) (x1299 x228))))
(assert (x1084 x136 (- x44 x1140)))
(assert (= (x99 (- x1497 164)) (x2048 (- x1497 164))))
(assert (x1098 x2070))
(assert (x809 x2236 x2095 x2090 x861))
(assert (x809 x44 x136 x171 x1208))
(assert (= (x73 (x349 x2063)) x2063))
(assert (x2257 (- x2216 x2236)))
(assert (= x1255 (and (not x1541) x1433)))
(assert (x928 x1830 x595 x2216 x901))
(assert (x846 x2176))
(assert (= (or x915 x1128) x493))
(assert (x846 x1807))
(assert (=> (>= 10000 x1331) (= (x349 x1331) (x1299 x1331))))
(assert (x2257 (- x1208 x44)))
(assert (x1084 x1293 (- x1221 x2095)))
(assert (x928 x1365 x1252 x136 x44))
(assert (= (or x1074 x319) x382))
(assert (x1084 x1365 (- x1252 x1293)))
(assert (x2257 (- x595 x44)))
(assert (x2257 (- x60 x2095)))
(assert (x846 x2339))
(assert (= (+ 1 (x73 x1508)) (x73 (x2112 x1508 1))))
(assert (x846 x142))
(assert (x809 x1365 x1252 x1355 x60))
(assert (x928 x1830 x595 x44 x136))
(assert (x1794 x821))
(assert (= true x1340))
(assert (x928 x654 x1140 x171 x1208))
(assert (=> (<= x821 10000) (= (x349 x821) (x1299 x821))))
(assert (= (x73 (x349 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x928 x901 x2216 x300 x763))
(assert (= (x73 (x349 x416)) x416))
(assert (x846 x1403))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x73 (x1299 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x928 x1140 x654 x595 x1830))
(assert (x2257 (- x1208 x136)))
(assert (= (and x1192 x1032) x357))
(assert (x809 x2090 x861 x136 x44))
(assert (x928 x1830 x595 x763 x300))
(assert (= 274184521717934524641157099916833587218 (x73 (x1299 274184521717934524641157099916833587218))))
(assert (x1794 x377))
(assert (x928 x2236 x2095 x763 x300))
(assert (x956 x1328 x144))
(assert (x846 x745))
(assert (x846 x1606))
(assert (x1084 x2216 (- x901 x44)))
(assert (x1794 x2227))
(assert (x1084 x861 (- x2090 x171)))
(assert (x2257 (- x1365 x654)))
(assert (x2257 (- x2216 x1208)))
(assert (x928 x1355 x60 x2216 x901))
(assert (x846 x2388))
(assert (= x1963 (x73 (x349 x1963))))
(assert (x846 x2147))
(assert (x2257 (- x171 x300)))
(assert (x928 x654 x1140 x1355 x60))
(assert (x928 x1208 x171 x60 x1355))
(assert (x1084 x1221 (- x1293 x1830)))
(assert (x809 x1208 x171 x1252 x1365))
(assert (x2257 (- x60 x2090)))
(assert (x809 x654 x1140 x171 x1208))
(assert (x846 x1823))
(assert (x809 x1221 x1293 x2095 x2236))
(assert (x846 x554))
(assert (x2257 (- x300 x2216)))
(assert (x846 x2069))
(assert (x2257 (- x901 x1208)))
(assert (x2257 (- x171 x1355)))
(assert (= (or (and x1223 x1651) (and x2068 x1157)) x615))
(assert (= x1456 (x73 (x349 x1456))))
(assert (= (x73 (x349 x1860)) x1860))
(assert (x2257 (- x1365 x595)))
(assert (x846 x388))
(assert (x2257 (- x763 x2216)))
(assert (= (x73 (x349 x266)) x266))
(assert (x846 x1081))
(assert (x1084 x1355 (- x60 x1140)))
(assert (x846 x1639))
(assert (x928 x136 x44 x1355 x60))
(assert (x1547 32 x1434))
(assert (= (x349 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1299 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (=> (and (or (and (= x779 (x2363 (+ x1215 96))) (= x390 x1678) (not x602)) (and (= 96 x1678) x602)) (= x2286 (> x1330 0)) x2076 (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2099 (x349 274184521717934524641157099916833587206))) x2076) (or (not x2286) (and (= x1845 (ite x43 1 0)) (= (not x921) x43) (= x1845 x2061) (= x921 (= x2061 0)) (< 0 x2061) x2286 (= (x1590 x1678) x1868) (not (or (> x1868 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1868) (= (<= x1868 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x717 x1740) x2061) (= (x2363 (+ 32 x1678)) x1740))) (= (= x1489 0) x602) (= (x1590 x1678) x1330) (not (= 0 x961)) (= (x373 (x349 x1205)) x1327)) x1689) x1946))
(assert (=> (<= x1493 10000) (= (x1299 x1493) (x349 x1493))))
(assert (x846 x1190))
(assert (x928 x2090 x861 x901 x2216))
(assert (x809 x1162 x482 x136 x44))
(assert (x846 x217))
(assert (x1084 x2236 (- x2095 x1830)))
(assert (x1084 x2090 (- x861 x1293)))
(assert (= (x73 (x349 x1759)) x1759))
(assert (x928 x2095 x2236 x1252 x1365))
(assert (x928 x901 x2216 x595 x1830))
(assert (x1084 x60 (- x1355 x1162)))
(assert (x846 x458))
(assert (= (or (and x192 x1596) (and x2325 x487)) x2057))
(assert (x846 x1294))
(assert (x928 x2090 x861 x595 x1830))
(assert (x846 x596))
(assert (x846 x862))
(assert (x846 x562))
(assert (=> (<= x108 10000) (= (x1299 x108) (x349 x108))))
(assert (x928 x2095 x2236 x763 x300))
(assert (x2257 (- x482 x1140)))
(assert (x1084 x1221 (- x1293 x2236)))
(assert (x1794 x1759))
(assert (x928 x136 x44 x300 x763))
(assert (x928 x1365 x1252 x1830 x595))
(assert (x928 x2095 x2236 x171 x1208))
(assert (x846 x2134))
(assert (= x1493 (x73 (x349 x1493))))
(assert (x928 x44 x136 x1208 x171))
(assert (x2257 (- x2095 x595)))
(assert (x846 x421))
(assert (x2257 (- x1293 x1365)))
(assert (x928 x60 x1355 x2095 x2236))
(assert (x1794 x883))
(assert (x2257 x654))
(assert (x928 x300 x763 x1355 x60))
(assert (x846 x219))
(assert (x303 x683 1000000000000000000))
(assert (x2257 (- x482 x763)))
(assert (x928 x136 x44 x901 x2216))
(assert (x1794 x1645))
(assert (x1084 x1208 (- x171 x1830)))
(assert (x2257 (- x1162 x1252)))
(assert (x1084 x1140 (- x654 x60)))
(assert (x928 x1365 x1252 x1208 x171))
(assert (x2257 (- x2090 x1221)))
(assert (x2257 (- x1830 x2095)))
(assert (x1084 x1162 (- x482 x1365)))
(assert (x2257 (- x2236 x1162)))
(assert (x2257 (- x44 x2090)))
(assert (x1084 x901 (- x2216 x2090)))
(assert (x1084 x482 (- x1162 x1252)))
(assert (x2257 (- x44 x901)))
(assert (x809 x60 x1355 x1252 x1365))
(assert (x1084 x60 (- x1355 x2236)))
(assert (x2257 (- x861 x654)))
(assert (x1084 x2216 (- x901 x2090)))
(assert (x928 x2090 x861 x1221 x1293))
(assert (x846 x971))
(assert (= (or (and x2182 x2268) x342) x263))
(assert (x1794 x590))
(assert (x928 x44 x136 x1293 x1221))
(assert (x809 x1355 x60 x2090 x861))
(assert (x1794 x120))
(assert (= (and (not x2068) x1157) x1651))
(assert (x846 x1987))
(assert (= (or (and (not x725) x1924) (and (not x1059) x1959) x1540) x391))
(assert (x809 x300 x763 x136 x44))
(assert (x1084 x1140 (- x654 x1293)))
(assert (x2257 (- x901 x861)))
(assert (x1084 x763 (- x300 x1252)))
(assert (x1794 x449))
(assert (x1794 x1161))
(assert (x2257 (- x1221 x861)))
(assert (x152 x87 x862))
(assert (x846 x2062))
(assert (x1084 x763 (- x300 x595)))
(assert (x846 x1630))
(assert (= x1019 (=> (and (= x2123 x518) (= x2088 x280) (= x2205 x1961) (= x1382 x799)) x17)))
(assert (x928 x1252 x1365 x44 x136))
(assert (x846 x2135))
(assert (x2257 (- x861 x901)))
(assert (x1084 x300 (- x763 x2095)))
(assert (= (x1337 (- x1497 x86)) (x2302 (- x1497 x86))))
(assert (x846 x1144))
(assert (= x1436 (x73 (x349 x1436))))
(assert (x846 x377))
(assert (=> (>= 10000 x164) (= (x1299 x164) (x349 x164))))
(assert (= (and x1557 (not x122)) x1003))
(assert (x846 x1111))
(assert (= 18446744073709551615 (x73 (x1299 18446744073709551615))))
(assert (x2257 (- x2236 x2090)))
(assert (x846 x2236))
(assert (x928 x2090 x861 x654 x1140))
(assert (x846 x792))
(assert (= 2514000705 (x73 (x1299 2514000705))))
(assert (x1084 x60 (- x1355 x763)))
(assert (x846 x402))
(assert (x2257 (- x2090 x1355)))
(assert (x1084 x136 (- x44 x901)))
(assert (x928 x171 x1208 x1140 x654))
(assert (x846 x2156))
(assert (x1084 x44 (- x136 x1355)))
(assert (x846 x1691))
(assert (x1794 x1493))
(assert (x2257 (- x1140 x1162)))
(assert (x928 x763 x300 x1365 x1252))
(assert (x928 x1830 x595 x901 x2216))
(assert (x846 x1831))
(assert (x846 x1425))
(assert (x2257 (- x2216 x595)))
(assert (= (and (not x1596) x192) x2325))
(assert (x928 x861 x2090 x1221 x1293))
(assert (x1084 x763 x300))
(assert (x1084 x2090 (- x861 x44)))
(assert (x2257 (- x1252 x2216)))
(assert (x1084 x1140 (- x654 x1355)))
(assert (x2257 (- x1830 x1140)))
(assert (x846 x1168))
(assert (x2257 (- x1162 x2216)))
(assert (= (x73 (x1299 759532456)) 759532456))
(assert (x846 x1066))
(assert (x1084 x1355 (- x60 x2216)))
(assert (x846 x1517))
(assert (x928 x482 x1162 x861 x2090))
(assert (= (or x628 (and (not x2125) x1204)) x184))
(assert (x928 x60 x1355 x1830 x595))
(assert (x2257 (- x1355 x2090)))
(assert (x846 x1521))
(assert (= (x1299 26959946667150639794667015087019630673637144422540572481103610249215) (x349 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x809 x1252 x1365 x171 x1208))
(assert (x846 x210))
(assert (x1084 x136 (- x44 x595)))
(assert (x846 x160))
(assert (x846 x1795))
(assert (x1084 x1355 (- x60 x1252)))
(assert (x846 x261))
(assert (x846 x587))
(assert (x2257 (- x1208 x482)))
(assert (= (x657 (- x1507 x2067)) (x494 (- x1507 x2067))))
(assert (x846 x1554))
(assert (x809 x595 x1830 x901 x2216))
(assert (x846 x1013))
(assert (x1084 x2236 (- x2095 x595)))
(assert (x846 x1465))
(assert (= (x349 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1299 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x1084 x60 (- x1355 x1365)))
(assert (x809 x171 x1208 x2095 x2236))
(assert (x846 x634))
(assert (x1084 x901 (- x2216 x763)))
(assert (x1547 32 x1605))
(assert (x1084 x136 (- x44 x300)))
(assert (=> (>= 10000 x2266) (= (x349 x2266) (x1299 x2266))))
(assert (= (x1299 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x349 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x1084 x171 (- x1208 x1252)))
(assert (= x969 (=> (= (= 274184521717934524641157099916833587214 x1042) x1223) (and (=> (and (not (> 4 x1054)) (= x1054 36) (= x39 (x338 (x349 x1565) (x1299 1) 0)) (not x1957) (not (> 649617121 x2130)) (= x430 32) (= 1889567281 x2130) (<= 0 x1203) (>= 1461501637330902918203684832716283019655932542975 x443) (not (= x2130 826074471)) (not (= 649617121 x2130)) (= x443 x1565) (= (x235 (x349 274184521717934524641157099916833587214)) x762) (= x1096 (x1353 (- x1054 4))) (< 0 x762) (= 36 x1054) (= 1 x195) (= x1957 (or (> x1096 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1096) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1096))))) (= (x2229 x39) x1203) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1203) (= x368 50942633119752846454219349998365661925608737367104304655302372697894809501696) x1223) x797) (=> (not x1223) x2032)))))
(assert (= (or (and (not x978) x2379) (and (not x1132) x1287)) x467))
(assert (= (and x1236 x1856) x1405))
(assert (x846 x2226))
(assert (= 274184521717934524641157099916833587206 (x73 (x1299 274184521717934524641157099916833587206))))
(assert (x809 x2216 x901 x171 x1208))
(assert (x1084 x763 (- x300 x60)))
(assert (x1084 x1293 (- x1221 x763)))
(assert (= (x1299 2061678023) (x349 2061678023)))
(assert (x1084 x901 (- x2216 x44)))
(assert (x1794 x285))
(assert (x846 x208))
(assert (x846 x1882))
(assert (x846 x296))
(assert (x846 x2233))
(assert (x846 x1744))
(assert (x1084 x2090 (- x861 x300)))
(assert (= (x73 (x2112 x2218 1)) (+ (x73 x2218) 1)))
(assert (x2257 x1420))
(assert (x1084 x2095 (- x2236 x654)))
(assert (= (=> (= x1589 x810) x1414) x1170))
(assert (x846 x830))
(assert (x1084 x1208 (- x171 x2236)))
(assert (= (x73 (x349 x313)) x313))
(assert (x2257 (- x1355 x171)))
(assert (= (or (and x1541 x1433) (and x2343 x852)) x1966))
(assert (x928 x2090 x861 x171 x1208))
(assert (x1084 x2095 (- x2236 x2216)))
(assert (x1621 x1097))
(assert (x2257 (- x1365 x2095)))
(assert (= x68 (x73 (x349 x68))))
(assert (=> (<= x1862 10000) (= (x349 x1862) (x1299 x1862))))
(assert (x928 x300 x763 x861 x2090))
(assert (x846 x164))
(assert (x809 x861 x2090 x763 x300))
(assert (x1794 x1761))
(assert (x809 x595 x1830 x1355 x60))
(assert (= 0 (x607 x1789)))
(assert (x809 x901 x2216 x1252 x1365))
(assert (=> (>= 10000 x2252) (= (x349 x2252) (x1299 x2252))))
(assert (x928 x1208 x171 x654 x1140))
(assert (x2257 (- x1830 x44)))
(assert (x846 x518))
(assert (x1084 x1140 (- x654 x136)))
(assert (x846 x821))
(assert (x846 x1029))
(assert (x2257 (- x2095 x171)))
(assert (x2257 (- x1252 x1830)))
(assert (x846 x403))
(assert (x846 x920))
(assert (x1084 x1365 (- x1252 x861)))
(assert (x846 x1233))
(assert (x1084 x763 (- x300 x1140)))
(assert (x2257 (- x2236 x901)))
(assert (x1794 x317))
(assert (x1794 x1891))
(assert (x846 x1961))
(assert (= x1211 (x73 (x349 x1211))))
(assert (x846 x1393))
(assert (x846 x2321))
(assert (x1794 x2063))
(assert (x928 x1162 x482 x1293 x1221))
(assert (x2257 (- x1140 x763)))
(assert (x809 x1252 x1365 x901 x2216))
(assert (x1794 x1205))
(assert (x846 x420))
(assert (= x490 (=> (= (= 274184521717934524641157099916833587214 x1331) x1216) (and (=> (and (= x1839 (> x1979 x1090)) (= 1 x196) (= (x1470 x410) x2147) (not x754) (= x754 (>= (+ x298 x2147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 2835717307 x1792) (= x298 x1979) (= x1431 274184521717934524641157099916833587206) (= x370 x1979) (= x1394 (x1353 (- x1178 4))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2147) (= (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0) x2293) (<= 0 x2147) (<= 0 x1090) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1090) (not x796) (= x633 x589) (>= 1461501637330902918203684832716283019655932542975 x589) (not (= x1792 2514000705)) (= x1314 (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0)) (not (= 1889567281 x1792)) (= (x235 (x349 274184521717934524641157099916833587214)) x1534) (not x1607) x1216 (= x311 x2147) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2330) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x298 x2147)) (= x1141 x1178) (> x1534 0) (= 274184521717934524641157099916833587206 x1245) (= x920 (+ x222 x311)) (= x222 x298) (= (x1742 x1314) x1090) (= 32 x2181) (= 68 x1178) (= (> x298 x1090) x1607) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1394)) (> 64 x1394)) (> x1394 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x796) (not (= x1792 649617121)) (not (< x1792 649617121)) (= (x338 (x349 x589) (x1299 1) 0) x410) (not (> 4 x1178)) (not x1839) (= x249 x589) (= (x338 (x349 x589) (x1299 1) 0) x938) (= (x1353 (- x1090 x1979)) x1297) (not (= x1792 826074471))) x881) (=> (not x1216) x134)))))
(assert (x846 x1211))
(assert (x1084 x1162 (- x482 x2216)))
(assert (x809 x171 x1208 x2090 x861))
(assert (= (x1700 x1492) (ite (and x2152 (not x149)) (x768 x1492) (x791 x1492))))
(assert (x809 x2216 x901 x1252 x1365))
(assert (x846 x1261))
(assert (x2257 (- x1140 x171)))
(assert (x928 x482 x1162 x1355 x60))
(assert (x928 x136 x44 x861 x2090))
(assert (x1084 x2216 (- x901 x1162)))
(assert (x809 x1355 x60 x1293 x1221))
(assert (x846 x669))
(assert (x928 x1252 x1365 x1162 x482))
(assert (x846 x1666))
(assert (x846 x262))
(assert (= x1856 (and x2080 x818)))
(assert (x1794 x1589))
(assert (x846 x1580))
(assert (x846 x172))
(assert (x1084 x1208 (- x171 x136)))
(assert (x928 x654 x1140 x60 x1355))
(assert (= (x349 1968616202) (x1299 1968616202)))
(assert (x846 x1595))
(assert (x846 x684))
(assert (x1084 x2090 (- x861 x1365)))
(assert (x809 x1365 x1252 x901 x2216))
(assert (x2257 (- x2090 x171)))
(assert (x846 x244))
(assert (x846 x144))
(assert (=> (>= 10000 x1428) (= (x349 x1428) (x1299 x1428))))
(assert (x2257 (- x1140 x136)))
(assert (x1084 x861 (- x2090 x763)))
(assert (x1084 x2236 (- x2095 x861)))
(assert (=> (>= 10000 x1288) (= (x1299 x1288) (x349 x1288))))
(assert (x809 x171 x1208 x1293 x1221))
(assert (= (x2142 x1403) 0))
(assert (= (=> (= x821 0) x735) x2262))
(assert (x846 x730))
(assert (x846 x527))
(assert (x2257 (- x2216 x60)))
(assert (x1084 x1293 (- x1221 x2216)))
(assert (=> (<= x317 10000) (= (x349 x317) (x1299 x317))))
(assert (x1794 x29))
(assert (x846 x1840))
(assert (x2257 (- x60 x1140)))
(assert (x846 x1493))
(assert (x846 x1173))
(assert (x809 x2090 x861 x763 x300))
(assert (x809 x2095 x2236 x901 x2216))
(assert (x846 x430))
(assert (x928 x60 x1355 x1293 x1221))
(assert (= x711 (=> (and (not (= 0 x2238)) (= x811 x2046) (= x2046 (x1124 128)) (not (or (and (= true (<= x287 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x287 32)) (> x287 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (=> (and (= x1480 x1298) (= x1434 x1183) (= x1920 x536) (= x1335 x811) (= x1472 x1855) (= x1427 x1499) (= x1776 x770) (= x246 x1696) (= x593 x346)) x477))))
(assert (x928 x2216 x901 x654 x1140))
(assert (x809 x2095 x2236 x1252 x1365))
(assert (x846 x569))
(assert (x2257 (- x1221 x763)))
(assert (x809 x1140 x654 x763 x300))
(assert (x846 x861))
(assert (x846 x1311))
(assert (x1084 x1355 (- x60 x44)))
(assert (x2257 (- x1355 x1252)))
(assert (x928 x60 x1355 x136 x44))
(assert (x2257 (- x2095 x44)))
(assert (x1084 x60 (- x1355 x861)))
(assert (= 0 (x1305 x1213)))
(assert (= x1891 (x73 (x349 x1891))))
(assert (x1084 x482 (- x1162 x2216)))
(assert (x846 x249))
(assert (x2257 x1298))
(assert (= (and x442 x697) x958))
(assert (x846 x198))
(assert (x1084 x763 (- x300 x1293)))
(assert (= (x73 (x349 x1079)) x1079))
(assert (x846 x1301))
(assert (x846 x1278))
(assert (x1084 x1140 (- x654 x1221)))
(assert (x846 x1884))
(assert (x2257 (- x654 x1252)))
(assert (x2257 x1221))
(assert (x1084 x1221 (- x1293 x595)))
(assert (x2257 (- x1140 x2095)))
(assert (= (x73 (x349 x1383)) x1383))
(assert (x846 x424))
(assert (x809 x1293 x1221 x1355 x60))
(assert (x2257 (- x595 x171)))
(assert (x1084 x1140 (- x654 x1365)))
(assert (x1084 x2216 (- x901 x763)))
(assert (x846 x943))
(assert (x809 x1221 x1293 x1162 x482))
(assert (= x1732 (x73 (x349 x1732))))
(assert (x846 x512))
(assert (x846 x1680))
(assert (x809 x861 x2090 x1252 x1365))
(assert (x809 x595 x1830 x763 x300))
(assert (x846 x2357))
(assert (x2257 x763))
(assert (x846 x1911))
(assert (x846 x1134))
(assert (x1084 x1162 (- x482 x901)))
(assert (x846 x1868))
(assert (x928 x1162 x482 x1365 x1252))
(assert (x1098 x2390))
(assert (x2257 (- x763 x44)))
(assert (= (or (and (not x2) x1527) (and x1108 x367) (and (not x366) x1549)) x915))
(assert (= (x73 (x349 x1815)) x1815))
(assert (x928 x2095 x2236 x1140 x654))
(assert (x928 x861 x2090 x763 x300))
(assert (x2257 (- x60 x763)))
(assert (x846 x843))
(assert (= x504 (=> (and (= (> (x235 (x349 274184521717934524641157099916833587214)) 0) x909) (= x2088 x203) (>= x799 0) (= x1044 (< 0 (x235 (x349 274184521717934524641157099916833587206)))) (<= 0 x351) (= (x2105 (x349 274184521717934524641157099916833587206)) x1713) (<= 0 x1202) (= (x2105 (x349 274184521717934524641157099916833587214)) x2224) (>= 1461501637330902918203684832716283019655932542975 x799) (= x1759 x518) (= (< 0 (x235 (x349 274184521717934524641157099916833587218))) x1990) (<= 0 x2088) (= (x2105 (x349 274184521717934524641157099916833587218)) x1202) (>= x2205 0) (= x173 x351) (<= 0 x2224) (<= 0 x925) (<= x925 1461501637330902918203684832716283019655932542975) (= x220 x925) x1044 (<= x2205 1461501637330902918203684832716283019655932542975) x909 (<= x2088 1461501637330902918203684832716283019655932542975) x1990 (>= 1461501637330902918203684832716283019655932542975 x351) (<= 0 x1713)) x1524)))
(assert (x846 x1885))
(assert (x2257 (- x2236 x654)))
(assert (x846 x372))
(assert (x846 x1011))
(assert (=> (>= 10000 x594) (= (x349 x594) (x1299 x594))))
(assert (x809 x1252 x1365 x2095 x2236))
(assert (x1084 x901 (- x2216 x1830)))
(assert (= (x1299 2211524764) (x349 2211524764)))
(assert (x928 x1221 x1293 x1208 x171))
(assert (x809 x300 x763 x1140 x654))
(assert (x928 x1140 x654 x2216 x901))
(assert (x928 x1830 x595 x1365 x1252))
(assert (x1084 x300 (- x763 x2090)))
(assert (x1084 x1365 (- x1252 x60)))
(assert (x2257 (- x1221 x60)))
(assert (= x1204 x345))
(assert (x928 x654 x1140 x300 x763))
(assert (x846 x794))
(assert (x2257 x2236))
(assert (x2257 (- x763 x482)))
(assert (x2257 (- x1355 x136)))
(assert (x846 x916))
(assert (x846 x1640))
(assert (x1084 x861 (- x2090 x1355)))
(assert (= (=> (and (<= 0 x1432) (= (x591 x1492) x862) (= x580 (x2265 1461501637330902918203684832716283019655932542975 x280)) (= (x338 (x349 x449) x223 0) x1563) (not (< x241 x1432)) (= (x338 (x349 x1641) x2203 0) x757) (<= 0 x862) (= x1158 (x338 (x349 x1428) x614 0)) (= (x338 (x349 x1383) x1721 0) x1492) (= (x338 (x349 x970) x757 0) x223) (= (x338 (x349 x2123) (x1299 5) 0) x1721) (= (x2265 1461501637330902918203684832716283019655932542975 x1382) x449) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1432) (= (x338 (x349 x2123) (x1299 4) 0) x2203) (= (x338 (x349 x580) x828 0) x614) (= x1383 (x2265 1461501637330902918203684832716283019655932542975 x280)) (= (x2265 1461501637330902918203684832716283019655932542975 x280) x1641) (<= x241 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x241) (= x970 (x2265 1461501637330902918203684832716283019655932542975 x1961)) (= x122 (= 0 x2012)) (= (x2265 1461501637330902918203684832716283019655932542975 x1961) x1428) (= x241 (x1145 x1158)) (= (x1353 (- x241 x1432)) x2012) (<= x862 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1620 x1563) x1432) (= (x338 (x349 x2123) (x1299 3) 0) x828)) (and (=> x122 x801) (=> (and (= x574 (x338 (x349 x2123) (x1299 4) 0)) (= x823 (+ x1344 x1899)) (= x249 (x2265 1461501637330902918203684832716283019655932542975 x1961)) (not x122) (= x1558 x1344) (= (x1281 x855) x895) (= (x338 (x349 x325) x1917 0) x2054) (= (x1353 (- x731 x855)) x1275) (or (not x2129) (and (= x2052 (x2363 (+ x1068 x895))) x2129)) (= x2051 (< 0 x895)) (= (x338 (x349 x1681) x1322 0) x975) (= (x759 (* 1000000000000000000 x2012)) x87) (>= x1252 0) (= x1068 (x2363 (+ x142 128))) (= x2114 (> x329 0)) (= (x2375 x975) x1252) (= x1681 (x2265 1461501637330902918203684832716283019655932542975 x1382)) (= x2129 (< x895 x864)) (= x731 (x2363 (+ 100 x855))) (= (x2363 (+ x1410 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x1379) (= x2390 (ite (< 115792089237316195423570985008687907853269984665640564039457 x2012) 1 0)) (= x82 (x2363 (+ 96 x1197))) (= (x1804 x82) x2070) (< (+ x2012 x1558) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1558 0) (or (and (= x82 x1311) (= x114 (x566 x1311)) (= x1068 x2117) (= (> x895 32) x2049) (or (and (= (> x895 64) x571) (= x479 (x2363 (+ 96 x731))) x2049 (= (x2363 (+ 64 x855)) x1940) (= (x566 x1940) x1576) (or (and (= x864 64) (not x571)) (and (or (and (not x1850) (= x864 96)) (and (= 128 x864) x1850 (not x1504) (= (> x895 128) x1504) (= x1403 (x2363 (+ x855 128))) (= x1956 (x2363 (+ x731 160))) (= (x566 x1403) x1228))) (= (x566 x1374) x1085) (= (x2363 (+ 128 x731)) x603) (= (< 96 x895) x1850) x571 (= (x2363 (+ 96 x855)) x1374)))) (and (= 32 x864) (not x2049))) x2051) (and (= x864 0) (not x2051))) (= (x338 (x349 x1664) x1711 0) x1322) (= (x235 (x349 x1331)) x329) (= x370 (x2393 x231 1000000000000000000)) (= x231 (x836 x1252 x1365)) (= (x1620 x2118) x1558) (= x608 (x2265 x1151 x2390)) (<= x1252 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1331 (x2265 1461501637330902918203684832716283019655932542975 x1382)) (= (x338 (x349 x1288) x574 0) x1917) (= (x2265 1461501637330902918203684832716283019655932542975 x1382) x2156) (= x1365 (x2393 x87 x862)) (= 1 x1151) (= x325 (x2265 1461501637330902918203684832716283019655932542975 x1961)) x2114 (= (x2265 1461501637330902918203684832716283019655932542975 x280) x1664) (= x2012 x1899) (= x1410 (x2265 26959946667150639794667015087019630673637144422540572481103610249215 x2070)) (= (x2265 1461501637330902918203684832716283019655932542975 x280) x1288) (= x2062 (x1353 (- x1275 32))) (< 0 x862) (= 0 x198) (< (x836 x1252 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1558 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1711 (x338 (x349 x2123) (x1299 11) 0)) (= x2118 (x338 (x349 x2156) x2054 0)) (= x843 (x2363 (+ 68 x855))) (= x608 0) (= x142 (x2363 (+ x1197 100)))) x2066))) x1993))
(assert (x2257 (- x1252 x2236)))
(assert (= (x657 (- x2008 x2067)) (x494 (- x2008 x2067))))
(assert (x846 x1784))
(assert (= (x73 (x349 x389)) x389))
(assert (x928 x1252 x1365 x60 x1355))
(assert (x846 x1942))
(assert (x928 x861 x2090 x901 x2216))
(assert (x846 x2071))
(assert (x809 x861 x2090 x1162 x482))
(assert (= x581 x1557))
(assert (x2257 (- x171 x1221)))
(assert (x2257 (- x861 x2216)))
(assert (= x2296 (and x982 x1752)))
(assert (x2257 (- x2236 x300)))
(assert (x2257 (- x861 x595)))
(assert (x809 x763 x300 x1140 x654))
(assert (= x1589 (x73 (x349 x1589))))
(assert (x2257 (- x1162 x136)))
(assert (x846 x1440))
(assert (= (x73 (x349 x29)) x29))
(assert (x846 x1172))
(assert (x1084 x763 (- x300 x861)))
(assert (x846 x987))
(assert (x1794 x2123))
(assert (x846 x880))
(assert (x1084 x60 (- x1355 x1252)))
(assert (x846 x1826))
(assert (x2257 (- x2095 x60)))
(assert (x809 x44 x136 x1252 x1365))
(assert (x2257 (- x2095 x2216)))
(assert (x809 x1293 x1221 x2095 x2236))
(assert (= (=> (and (= x1018 (x338 (x349 x1161) (x1299 7) 0)) (= (x235 (x349 274184521717934524641157099916833587206)) x1062) (<= 0 x1775) (<= x1775 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x753 x1775) (= x2094 (x338 (x349 x1456) x1018 0)) (< x702 911411945) (< x702 2293535753) (= x1848 (x338 (x349 x468) x2094 0)) (not (< x702 468353030)) (= x1775 (x2342 x1848)) (not (= x702 635128645)) (<= x468 1461501637330902918203684832716283019655932542975) (< 0 x1062) (not (= 468353030 x702)) (>= 1461501637330902918203684832716283019655932542975 x1456) (= x702 759532456)) (=> (and (= x1548 x799) (= (= 2 x1971) x577) (= x1733 (= 2 x1425)) (= x1920 x478) (= x593 x1163) (= x851 0) (= 0 x1358) (= x1925 x799) (= x1370 x1183) (= x2059 (= x1522 x1378)) (= (= x936 x1688) x1968) (= x1971 x1480) (= x1000 2) (= x2168 32) (= x1914 x246) (= x1378 x2088) (= x480 (= x2104 x1925)) (= 0 x541) x665 (= x802 (= x1370 2)) (= (x733 32) x1522) (= x883 x2088) (= x1568 (= x2120 x2111)) (= (x307 0) x2120) (= x1688 x518) (= x987 x1183) x1159 x480 (= x1380 32) (= x1064 x2088) (< x1279 1461501637330902918203684832716283019655932542976) (= x1427 x1653) x1473 (= x521 x799) x789 x2369 (= (= x521 274184521717934524641157099916833587214) x547) (= x593 x340) (= (= x1427 (x759 (* x1855 32))) x2093) (= x365 x2205) (= x665 (= x634 x1279)) (= (x503 0) x1521) x1733 (= x1855 x1928) (= (x1339 32) x1279) (= x518 x1007) (= x841 x1480) (= x936 (x206 32)) (< x1310 1461501637330902918203684832716283019655932542976) (= (x844 32) x1310) x1968 (= x2247 x1183) (= x1425 x1855) (= x902 274184521717934524641157099916833587214) (= (= x246 (x759 (* 32 x1183))) x1473) (= x1106 x1427) (= x2022 x518) x1597 (= x1159 (> x1452 0)) (= 0 x924) (= x799 x634) (< x2120 1461501637330902918203684832716283019655932542976) x577 (= x59 32) (= x1920 x674) (> 1461501637330902918203684832716283019655932542976 x1522) (= 2 x2347) (= x1219 (x959 0)) (= x1776 x730) (= (= x1219 x1064) x2026) (= x1480 x1028) x1568 (= (x1661 0) x2104) x547 (= x2205 x2111) x2248 (> 1461501637330902918203684832716283019655932542976 x2104) (= x246 x1844) x2059 (= x1408 (= x1310 x365)) (= 0 x2226) (= x1597 (= 2 x478)) x802 x2026 (= x1855 x1055) (= 2 x66) (= x416 x2205) (= 32 x737) (= x1452 x753) (= x1280 x1920) x1408 x2093 (= x789 (= x593 (x759 (* 32 x1920)))) (= (= (x759 (* x1480 32)) x1776) x2248) (= x1385 2) (= (= x1521 x2022) x2369) (< x1219 1461501637330902918203684832716283019655932542976) (= x1776 x2312)) x254)) x637))
(assert (x2257 (- x654 x136)))
(assert (x928 x861 x2090 x136 x44))
(assert (x846 x906))
(assert (x809 x1830 x595 x171 x1208))
(assert (x928 x136 x44 x1221 x1293))
(assert (x809 x482 x1162 x1293 x1221))
(assert (x809 x44 x136 x1140 x654))
(assert (x1084 x595 (- x1830 x1355)))
(assert (= x78 (and (not x327) x75)))
(assert (x1084 x60 (- x1355 x171)))
(assert (x928 x1293 x1221 x1355 x60))
(assert (x1794 x745))
(assert (x1084 x1355 (- x60 x2236)))
(assert (x809 x171 x1208 x901 x2216))
(assert (x2257 (- x300 x901)))
(assert (x2257 (- x1162 x2236)))
(assert (= x2072 (=> (and (= (x1353 (- x1007 1)) x29) (= (> x29 0) x1236)) (and (=> x1236 x1901) (=> (not x1236) x2262)))))
(assert (x846 x468))
(assert (x846 x1101))
(assert (x2257 (- x1252 x1140)))
(assert (= (and x1549 x366) x367))
(assert (= (ite (and x1670 x1837) (x456 x39) (ite (and x852 x2343) (x456 x39) (x537 x39))) (x1834 x39)))
(assert (x846 x1605))
(assert (x928 x1355 x60 x901 x2216))
(assert (x846 x1367))
(assert (x928 x2236 x2095 x1293 x1221))
(assert (x1084 x1208 (- x171 x2095)))
(assert (x1794 x1456))
(assert (x2257 (- x1252 x1221)))
(assert (x846 x1862))
(assert (x2257 (- x44 x595)))
(assert (= (ite (and x263 (not x1921) (not x1342)) (x1175 x3) (x1994 x3)) (x954 x3)))
(assert (= x981 x783))
(assert (x1084 x171 (- x1208 x482)))
(assert (x1084 x60 (- x1355 x1140)))
(assert (= (=> (and (= 2258409472 x1291) (>= 1461501637330902918203684832716283019655932542975 x203) (not (= 2061678023 x1291)) (= (x338 (x349 x1759) (x1299 6) 0) x1409) (< 0 x1931) (not (= x1291 2211524764)) (not (< x1291 911411945)) (= (x235 (x349 274184521717934524641157099916833587206)) x1931) (>= x314 0) (<= x314 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1978 (x338 (x349 x203) x1409 0)) (= x314 (x435 x1978)) (> 2293535753 x1291) (= x314 x910) (not (> 1968616202 x1291)) (not (= 1986467848 x1291)) (not (= x1291 1968616202))) (=> (and (= x159 x910) (= x1161 x518) (= x468 x2205) (= x189 0) (= (> x159 0) x2306) (= x2088 x1456) x2306) x637)) x1524))
(assert (x1084 x1830 (- x595 x1162)))
(assert (= x1549 (and x165 x1304)))
(assert (x846 x849))
(assert (x1084 x654 (- x1140 x861)))
(assert (x1084 x1162 (- x482 x44)))
(assert (x928 x901 x2216 x1252 x1365))
(assert (x928 x901 x2216 x60 x1355))
(assert (x1084 x763 (- x300 x1365)))
(assert (x928 x44 x136 x901 x2216))
(assert (x809 x1252 x1365 x136 x44))
(assert (x1084 x595 (- x1830 x300)))
(assert (x846 x1566))
(assert (x846 x2171))
(assert (x2257 (- x2095 x1221)))
(assert (x846 x1589))
(assert (= (=> (and (= x1042 x799) (= x1565 x2205)) x1360) x2074))
(assert (x846 x1979))
(assert (x1084 x595 (- x1830 x136)))
(assert (x928 x1140 x654 x1365 x1252))
(assert (x2257 (- x1162 x1140)))
(assert (x2257 (- x1252 x1293)))
(assert (x928 x1140 x654 x44 x136))
(assert (x846 x1027))
(assert (x846 x1759))
(assert (x928 x1830 x595 x2236 x2095))
(assert (= x423 (and x1059 x1959)))
(assert (x928 x654 x1140 x1365 x1252))
(assert (x2257 (- x1162 x861)))
(assert (x809 x1162 x482 x1140 x654))
(assert (x2257 (- x2216 x1355)))
(assert (x2257 (- x2216 x861)))
(assert (x1084 x595 (- x1830 x482)))
(assert (x846 x411))
(assert (x2257 (- x1162 x44)))
(assert (x2257 (- x1293 x2216)))
(assert (x809 x763 x300 x1355 x60))
(assert (x1084 x171 x1208))
(assert (x2257 (- x1365 x2090)))
(assert (x2257 (- x595 x901)))
(assert (x846 x1695))
(assert (x846 x1205))
(assert (x809 x861 x2090 x2095 x2236))
(assert (x928 x595 x1830 x1252 x1365))
(assert (x2257 (- x861 x1252)))
(assert (x846 x1669))
(assert (x846 x2127))
(assert (= (or (and x2319 (not x328)) (and (not x1341) x1907)) x1074))
(assert (= (x349 1889567281) (x1299 1889567281)))
(assert (x846 x1335))
(assert (x846 x950))
(assert (x846 x1427))
(assert (x928 x1355 x60 x171 x1208))
(assert (x1084 x1208 (- x171 x901)))
(assert (x1084 x595 (- x1830 x1221)))
(assert (x1084 x136 (- x44 x2095)))
(assert (= x17 (=> (and (>= 1461501637330902918203684832716283019655932542975 x278) (< 0 x926) (= x2056 243137395) (>= 1461501637330902918203684832716283019655932542975 x280) (= x849 0) (<= x1382 1461501637330902918203684832716283019655932542975) (<= 0 x278) (>= 1461501637330902918203684832716283019655932542975 x539) (= (x1786 x998) x1791) (<= x1791 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x2056 468353030) (= x412 x1146) (= (x338 (x349 x280) x1624 0) x1512) (= (x338 (x349 x2123) (x1299 7) 0) x1624) (= x926 (x235 (x349 274184521717934524641157099916833587206))) (= x173 x539) (<= x2260 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x2056 2293535753) (>= x2260 0) (not (> x2123 x2260)) (= x849 x1927) (>= x539 0) (not (= 69947311 x2056)) (= x2364 x709) (= x208 x709) (not (= 142201243 x2056)) (= (> x1791 0) x2180) (not (< x2260 x2123)) (< x2056 911411945) (<= 0 x1791) (<= 0 x208) (not (= 87118632 x2056)) (<= x208 1461501637330902918203684832716283019655932542975) (= (x338 (x349 x1961) x1512 0) x998) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2260) (<= x1961 1461501637330902918203684832716283019655932542975) (<= 0 x2260)) (and (=> (not x2180) x997) (=> (and (= x2254 (x338 (x349 x2123) (x1299 9) 0)) (= (x338 (x349 x1610) x2254 0) x1796) (= x1137 x901) (= (x89 x197) x1137) x2180 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1137) (>= x1137 0) (= x197 (x338 (x349 x389) x1796 0)) (= (x2265 1461501637330902918203684832716283019655932542975 x280) x1610) (= (x2265 1461501637330902918203684832716283019655932542975 x1961) x389) (= 0 x1187)) x2332)))))
(assert (x846 x687))
(assert (x2257 (- x1208 x2095)))
(assert (x928 x2095 x2236 x1221 x1293))
(assert (x1084 x654 (- x1140 x1365)))
(assert (x846 x167))
(assert (x2257 (- x1208 x300)))
(assert (x846 x895))
(assert (= (x1305 x2157) 0))
(assert (x1084 x60 (- x1355 x300)))
(assert (x1084 x2236 (- x2095 x763)))
(assert (= (or (and x1557 x122) x1083) x1727))
(assert (= (x1299 604800) (x349 604800)))
(assert (x846 x1920))
(assert (x1084 x2236 (- x2095 x1355)))
(assert (x928 x44 x136 x2216 x901))
(assert (x846 x579))
(assert (x846 x2312))
(assert (x1084 x1830 (- x595 x901)))
(assert (x846 x2245))
(assert (x2257 (- x1830 x1208)))
(assert (=> (>= 10000 x1900) (= (x1299 x1900) (x349 x1900))))
(assert (x846 x1419))
(assert (x2257 (- x171 x2090)))
(assert (x809 x595 x1830 x1162 x482))
(assert (x1084 x654 (- x1140 x60)))
(assert (x846 x1900))
(assert (x2257 (- x2216 x2095)))
(assert (x1084 x861 (- x2090 x2236)))
(assert (x846 x838))
(assert (x1794 x266))
(assert (x2257 (- x901 x60)))
(assert (x1794 x416))
(assert (x2257 (- x1208 x2090)))
(assert (x2257 (- x1355 x44)))
(assert (x2257 (- x1830 x171)))
(assert (= x2123 (x73 (x349 x2123))))
(assert (x1084 x1162 (- x482 x1221)))
(assert (x928 x1252 x1365 x1830 x595))
(assert (x846 x166))
(assert (x928 x2095 x2236 x1293 x1221))
(assert (x928 x136 x44 x60 x1355))
(assert (= x1907 (and x2382 x798)))
(assert (x809 x1830 x595 x2090 x861))
(assert (= (ite x670 (ite (and x542 x1643) (x698 x2210) (x850 x2210)) (x850 x2210)) (x2336 x2210)))
(assert (x2257 (- x1208 x595)))
(assert (x928 x861 x2090 x654 x1140))
(assert (x928 x60 x1355 x300 x763))
(assert (x928 x44 x136 x861 x2090))
(assert (x1084 x136 (- x44 x763)))
(assert (x846 x65))
(assert (x2257 (- x1162 x1293)))
(assert (= x2148 (=> (and (>= x1863 0) (= x1863 (x344 x1226)) (= (x338 (x349 x377) x273 0) x8) (not (> x1863 x51)) (= x466 (x338 (x349 x497) x123 0)) (>= x1067 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1863) (<= x51 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x51) (= (x1353 (- x51 x1863)) x429) (= (x338 (x349 x497) x1603 0) x273) (= (x660 x8) x51) (= (= x429 0) x1148) (= x1067 (x2348 x1533)) (= x1660 (x338 (x349 x377) x466 0)) (= x611 (x338 (x349 x1307) (x1299 5) 0)) (= x1603 (x338 (x349 x1307) (x1299 3) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1067) (= x1226 (x338 (x349 x1205) x1660 0)) (= (x338 (x349 x497) x611 0) x1533) (= x123 (x338 (x349 x1307) (x1299 4) 0))) (and (=> (and (= x1243 (< 0 x2207)) (= x1874 (ite (< 115792089237316195423570985008687907853269984665640564039457 x429) 1 0)) (= x2135 x929) (= x60 (x2393 x897 x1067)) (= (x2393 x1800 1000000000000000000) x97) (or (and (= (x2363 (+ x2141 x390)) x1442) x1867) (not x1867)) (= x718 (x338 (x349 x1307) (x1299 4) 0)) x1243 (= x218 (x338 (x349 x1205) x544 0)) (= x1215 (x2363 (+ 100 x1390))) (= (x338 (x349 x377) x1663 0) x544) (not x1148) (= x390 (x2363 (+ x2314 128))) (= x1616 (x338 (x349 x1205) x996 0)) (= x838 (x2363 (+ 68 x1390))) (= x1066 (x2265 x830 x1874)) (= (x344 x218) x2135) (or (and (= x636 x1517) (= x1277 (> x2141 32)) x691 (or (and (not x1277) (= 32 x1807)) (and (= x1553 (x2363 (+ x1215 96))) (or (and (= 64 x1807) (not x40)) (and (= x119 (x356 x2157)) (= x182 (< 96 x2141)) (= (x2363 (+ 128 x1215)) x1440) x40 (= (x2363 (+ x1390 96)) x2157) (or (and (= 96 x1807) (not x182)) (and (= x1807 128) (= x1465 (x356 x1165)) (= x1165 (x2363 (+ 128 x1390))) (= x1743 (x2363 (+ x1215 160))) (not x292) x182 (= (> x2141 128) x292))))) (= x1139 (x2363 (+ x1390 64))) (= x40 (> x2141 64)) (= (x356 x1139) x1041) x1277)) (= x1631 x390) (= (x356 x636) x773)) (and (= x1807 0) (not x691))) (= x1066 0) (= (x2363 (+ x1756 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x1039) (= x700 0) (= (x896 x1390) x2141) (= x996 (x338 (x349 x497) x459 0)) (= x691 (< 0 x2141)) (= x897 (x759 (* x429 1000000000000000000))) (= (x918 x1517) x609) (= 1 x830) (= (x1353 (- x1215 x1390)) x587) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x429 x2135)) (< 0 x1067) (= x2314 (x2363 (+ x1864 100))) (= x2163 (x1353 (- x587 32))) (= (x2375 x1616) x1355) (= (x836 x1355 x60) x1800) (= (x235 (x349 x1205)) x2207) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x836 x1355 x60)) (<= 0 x1355) (= x1406 x429) (= (x338 (x349 x497) x718 0) x1663) (= (x2363 (+ 96 x1864)) x1517) (= (> x1807 x2141) x1867) (>= x2135 0) (= x459 (x338 (x349 x1307) (x1299 11) 0)) (= x1756 (x2265 26959946667150639794667015087019630673637144422540572481103610249215 x609)) (<= x1355 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x651 (+ x1406 x929)) (<= x2135 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1386) (=> x1148 x1689)))))
(assert (x846 x26))
(assert (x809 x482 x1162 x2095 x2236))
(assert (= (x1299 274184521717934524641157099916833587218) (x349 274184521717934524641157099916833587218)))
(assert (x846 x1927))
(assert (x928 x60 x1355 x861 x2090))
(assert (x1084 x2095 (- x2236 x60)))
(assert (x846 x1502))
(assert (x846 x1457))
(assert (x846 x1610))
(assert (x1794 x977))
(assert (x846 x2012))
(assert (x2257 x171))
(assert (= 1000000000000000000 (x73 (x1299 1000000000000000000))))
(assert (x846 x317))
(assert (x1084 x1365 (- x1252 x595)))
(assert (x846 x12))
(assert (x846 x318))
(assert (x2257 (- x136 x2095)))
(assert (= (x289 x1077) 0))
(assert (x1084 x1355 (- x60 x595)))
(assert (x1084 x1293 (- x1221 x1355)))
(assert (x928 x1365 x1252 x1355 x60))
(assert (x846 x550))
(assert (x928 x1208 x171 x2216 x901))
(assert (x2257 (- x2216 x300)))
(assert (x846 x1008))
(assert (x846 x478))
(assert (= x1256 (=> (and (= x366 (> x1732 0)) (= x1732 (x1353 (- x1307 1)))) (and (=> x366 x568) (=> (not x366) x53)))))
(assert (x1084 x2090 (- x861 x1355)))
(assert (x2257 (- x595 x2090)))
(assert (= 0 (x238 x1061)))
(assert (x846 x1077))
(assert (x928 x1221 x1293 x763 x300))
(assert (x846 x1213))
(assert (x846 x287))
(assert (x846 x510))
(assert (x846 x1020))
(assert (x1084 x1355 (- x60 x136)))
(assert (x1098 x416))
(assert (x928 x1830 x595 x60 x1355))
(assert (x928 x2236 x2095 x901 x2216))
(assert (= x2252 (x73 (x349 x2252))))
(assert (x2257 (- x901 x1293)))
(assert (x928 x2095 x2236 x1355 x60))
(assert (x928 x1830 x595 x482 x1162))
(assert (x2257 (- x1293 x2090)))
(assert (x809 x595 x1830 x1252 x1365))
(assert (x846 x285))
(assert (= (x657 (- x378 x2067)) (x494 (- x378 x2067))))
(assert (x846 x429))
(assert (= (x494 (- x2219 x2067)) (x657 (- x2219 x2067))))
(assert (x846 x513))
(assert (x928 x901 x2216 x2095 x2236))
(assert (x846 x120))
(assert (x846 x365))
(assert (x846 x173))
(assert (= (=> (= x157 0) x316) x567))
(assert (x928 x300 x763 x654 x1140))
(assert (x1084 x1365 (- x1252 x1221)))
(assert (= x164 (x73 (x349 x164))))
(assert (=> (<= x1455 10000) (= (x1299 x1455) (x349 x1455))))
(assert (x846 x112))
(assert (=> (<= x395 10000) (= (x349 x395) (x1299 x395))))
(assert (x1084 x300 (- x763 x1293)))
(assert (x1084 x2236 (- x2095 x1252)))
(assert (= (x349 2835717307) (x1299 2835717307)))
(assert (= x1463 x1545))
(assert (=> (<= x245 10000) (= (x349 x245) (x1299 x245))))
(assert (x1547 32 x1298))
(assert (x846 x912))
(assert (= 2835717307 (x73 (x1299 2835717307))))
(assert (x1084 x44 (- x136 x2236)))
(assert (= (x1065 x1533) (ite (and x1260 x184) (x791 x1533) (x1095 x1533))))
(assert (x846 x1288))
(assert (x2257 (- x861 x1355)))
(assert (x846 x473))
(assert (x2257 (- x763 x1221)))
(assert (x2257 (- x763 x1365)))
(assert (x1084 x1208 (- x171 x300)))
(assert (x1084 x44 (- x136 x171)))
(assert (x303 x1800 1000000000000000000))
(assert (= (=> (and (= (x2363 (+ 35 x720)) x1878) (not (< 18446744073709551615 x1176)) (= (x2363 (+ x2307 4)) x1854) (< 0 x1611) (not (> x1699 18446744073709551615)) (= (x759 (* x1605 32)) x1301) (= x1354 x1927) (not (or (and (< x481 128) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x481))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x481))) (= x688 (x1353 (- x1351 4))) (>= 1461501637330902918203684832716283019655932542975 x1258) (= (x1270 x1507) x1420) (= 842085797 x1142) (= x725 (> x1699 0)) (= x985 (x2363 (+ x1301 x2198))) (= x2172 (x759 (* 32 x1176))) (not (= 759532456 x1142)) (>= 1461501637330902918203684832716283019655932542975 x217) (= (x2363 (+ 36 x2307)) x2198) (> 911411945 x1142) (= (x2363 (+ x1468 32)) x1233) (= x2186 (x2363 (+ x1764 x837))) (> x2187 163) (= x694 (x2363 (+ 36 x1283))) (not (= x1142 468353030)) (not (< x1142 468353030)) (= x2067 (x2363 (+ 32 x1351))) (<= 0 x1422) (not (> x2307 18446744073709551615)) (not (> x1525 x2187)) (not (> x720 18446744073709551615)) (= (x1353 (- x2187 4)) x481) (= x687 (x759 (- (x2363 (+ (x759 (* x1298 32)) 32)) 32))) (= (x2363 (+ x1964 164)) x576) (= x1206 x1258) (= (x1270 x1854) x1605) (= x2364 x1206) (= x1218 (x2363 (+ x1283 35))) (= (x2363 (+ (x2363 (+ (x759 (* x536 32)) x21)) 32)) x1468) (= (x1353 (- x2195 4)) x601) (= (x1270 x648) x1176) (= (x2363 (+ (x759 (* 32 x1472)) 196)) x1836) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2187)) (= x167 (x2363 (+ (x2363 (+ x1233 (x759 (* x1298 32)))) 32))) (= (x759 (* 32 x1420)) x1764) (= (x759 (- (x2363 (+ (x759 (* x536 32)) 32)) 32)) x156) (= (x2363 (+ 164 (x759 (* x1472 32)))) x1821) (= (x759 (- (x2363 (+ 32 (x759 (* 32 x1434)))) 32)) x403) (= x648 (x2363 (+ x1283 4))) (= x1525 (x2363 (+ x694 x2172))) (= x837 (x2363 (+ 36 x720))) (= (x2363 (+ x2307 35)) x1859) (= x2307 (x1353 (- x1351 4))) (= (x1353 (- x2195 4)) x720) (>= x217 0) (>= 1461501637330902918203684832716283019655932542975 x1422) (not (> x1283 18446744073709551615)) (= x173 x217) (or (and (< x1859 x2187) (= (<= x1859 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2187 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1859) (<= x2187 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1087 (x2363 (+ (x2363 (+ x335 (x759 (* x1434 32)))) 32))) (= x2187 (x2363 (+ 32 x1087))) (= (x2363 (+ 32 (x2363 (+ (x759 (* x536 32)) x1821)))) x1351) (ite x58 (= x1605 x1699) x58) (= (x1353 (- x1821 4)) x1384) (not (> x1605 18446744073709551615)) (= x139 x1146) (= (x2363 (+ (x2363 (+ x1351 (x759 (* x1298 32)))) 32)) x2195) (= x335 (x2363 (+ x167 32))) (= x1354 0) (= (x759 (- (x2363 (+ (x759 (* 32 x1472)) 32)) 32)) x495) (not (= x1142 635128645)) (< x1142 2293535753) (= (= x1176 x1699) x58) (not (< x2187 x576)) (= x1699 (x1270 132)) (not (< x2187 x2186)) (not (< x2187 x985)) (= (x1353 (- x1821 4)) x1283) (= (x235 (x349 274184521717934524641157099916833587206)) x1611) (= (x2363 (+ x720 4)) x1507) (= (x759 (* x1699 32)) x1964) (not (> 4 x2187)) (or (and (> x1218 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2187 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x2187 x1218) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1218) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2187)))) (= x21 (x2363 (+ 68 (x759 (* x1472 32))))) (not (> x1420 18446744073709551615)) (= x1699 x1420) (= (x2363 (+ x2195 32)) x86) (>= x1258 0) (or (and (<= x2187 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1878)) (and (< x1878 x2187) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1878) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2187))))) (and (=> x725 x800) (=> (not x725) x2074))) x477))
(assert (x2257 (- x1208 x2216)))
(assert (x846 x97))
(assert (x1084 x1140 x654))
(assert (x846 x1212))
(assert (x928 x901 x2216 x1365 x1252))
(assert (x2257 (- x2090 x1293)))
(assert (x809 x136 x44 x1293 x1221))
(assert (=> (<= x907 10000) (= (x349 x907) (x1299 x907))))
(assert (x1084 x595 (- x1830 x44)))
(assert (x846 x455))
(assert (x809 x60 x1355 x901 x2216))
(assert (=> (>= 10000 x266) (= (x349 x266) (x1299 x266))))
(assert (x2257 (- x901 x1830)))
(assert (x2257 (- x861 x2095)))
(assert (x846 x1956))
(assert (x2257 (- x171 x1162)))
(assert (x846 x1874))
(assert (x2257 (- x300 x861)))
(assert (x846 x77))
(assert (x2257 (- x595 x654)))
(assert (x2257 (- x44 x1830)))
(assert (x809 x482 x1162 x136 x44))
(assert (x1084 x1252 (- x1365 x1208)))
(assert (x1794 x164))
(assert (x1084 x1293 (- x1221 x1208)))
(assert (x1084 x901 (- x2216 x1252)))
(assert (x928 x901 x2216 x482 x1162))
(assert (= (x73 (x349 x933)) x933))
(assert (x1084 x1140 (- x654 x171)))
(assert (x1084 x2090 (- x861 x1140)))
(assert (x1361 x1382 x1757))
(assert (x846 x1701))
(assert (x846 x1801))
(assert (x2257 x1472))
(assert (x846 x780))
(assert (x1902 x683))
(assert (= x1333 x414))
(assert (x2257 (- x1162 x595)))
(assert (= (=> (and (= x749 (> x1455 0)) (= x1455 (x1353 (- x2123 1)))) (and (=> (not x749) x1638) (=> x749 x623))) x315))
(assert (x928 x2090 x861 x763 x300))
(assert (x928 x300 x763 x1365 x1252))
(assert (x846 x2163))
(assert (x928 x171 x1208 x1293 x1221))
(assert (x1084 x2090 (- x861 x2095)))
(assert (x846 x1702))
(assert (x1084 x1365 (- x1252 x1830)))
(assert (x846 x1646))
(assert (x809 x2095 x2236 x136 x44))
(assert (x846 x773))
(assert (x1794 x313))
(assert (x846 x1690))
(assert (x846 x1068))
(assert (x2257 (- x2095 x654)))
(assert (x846 x1497))
(assert (x1084 x1830 (- x595 x136)))
(assert (= x342 (or x1343 x638)))
(assert (x928 x1365 x1252 x763 x300))
(assert (x2257 (- x2090 x136)))
(assert (= (=> (and (or (and (= 1 x1194) (= x188 (x338 (x349 x1396) x1984 0)) (not x952) (= (x2265 1461501637330902918203684832716283019655932542975 x883) x1396) (= x1640 (x2265 1461501637330902918203684832716283019655932542975 x416)) (= (x338 (x349 x2063) (x1299 9) 0) x1984) (= x38 (x338 (x349 x1640) x188 0)) (= (x1930 x38) x756) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x756) (<= 0 x756) (= x171 x756)) (and (= 0 x1194) x952 (= x171 0))) (= (= x2063 0) x952)) x230) x201))
(assert (x928 x1221 x1293 x482 x1162))
(assert (x846 x481))
(assert (x928 x44 x136 x1221 x1293))
(assert (= (x73 (x349 x589)) x589))
(assert (x846 x1183))
(assert (=> (>= 10000 x1079) (= (x349 x1079) (x1299 x1079))))
(assert (x846 x228))
(assert (= x263 x619))
(assert (x928 x136 x44 x595 x1830))
(assert (x846 x1303))
(assert (x846 x1623))
(assert (x928 x60 x1355 x1365 x1252))
(assert (x2257 (- x861 x1293)))
(assert (= x257 (=> (= x453 (= 274184521717934524641157099916833587214 x734)) (and (=> (not x453) x1340) (=> (and (= 1 x12) (= x215 x696) (<= 0 x388) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x101) (< 0 x1784) (= (x456 x1738) x388) (= (x1353 (- x388 x696)) x878) (not x1346) (= x56 x420) (= (x338 (x349 x2339) (x1299 1) 0) x1842) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1884) (= 68 x56) (= x906 274184521717934524641157099916833587206) x453 (not x1336) (not x1962) (< (+ x101 x434) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (> x434 x388) x1346) (= (> x696 x388) x1336) (not (> 4 x56)) (not x1413) (= x202 (x338 (x349 x2339) (x1299 1) 0)) (= x101 (x20 x1842)) (not (= x446 2514000705)) (= x1962 (or (and (< x253 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x253) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x253))) (<= 0 x101) (not (= 649617121 x446)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x388) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x101 x434)) x1413) (= (x1353 (- x56 4)) x253) (not (< x446 649617121)) (= x190 32) (not (= 826074471 x446)) (= (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0) x2103) (= (+ x13 x2269) x431) (= x434 x2269) (= x1784 (x235 (x349 274184521717934524641157099916833587214))) (= x696 x434) (= (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0) x1738) (= x1217 274184521717934524641157099916833587206) (= x2339 x1416) (= x101 x13) (not (= x446 1889567281)) (= x1200 x2339) (= x446 2835717307) (<= x2339 1461501637330902918203684832716283019655932542975)) x840)))))
(assert (= x716 (x73 (x349 x716))))
(assert (x1794 x1963))
(assert (x809 x136 x44 x1355 x60))
(assert (x928 x2095 x2236 x1208 x171))
(assert (= (x238 x1623) 0))
(assert (x846 x2197))
(assert (x2257 (- x861 x1162)))
(assert (x928 x763 x300 x861 x2090))
(assert (x846 x2015))
(assert (x846 x1875))
(assert (x2257 (- x300 x482)))
(assert (x1084 x171 (- x1208 x2236)))
(assert (x1794 x1253))
(assert (x928 x1355 x60 x300 x763))
(assert (x2257 (- x2095 x1830)))
(assert (x809 x1355 x60 x1162 x482))
(assert (x846 x522))
(assert (x809 x1221 x1293 x1252 x1365))
(assert (x2257 (- x901 x1162)))
(assert (x928 x901 x2216 x136 x44))
(assert (= (=> (= (> x745 0) x282) (and (=> x282 x1705) (=> (not x282) x1536))) x1149))
(assert (x846 x1178))
(assert (=> (>= 10000 x1645) (= (x1299 x1645) (x349 x1645))))
(assert (= x898 (=> (and (= (= x1761 0) x137) (or (and (= x1947 x901) (= (x2265 1461501637330902918203684832716283019655932542975 x280) x2376) (= (x338 (x349 x2376) x428 0) x2132) (= 1 x1187) (<= x1947 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1947 (x89 x212)) (>= x1947 0) (not x137) (= (x338 (x349 x1831) x2132 0) x212) (= (x338 (x349 x1761) (x1299 9) 0) x428) (= x1831 (x2265 1461501637330902918203684832716283019655932542975 x1961))) (and (= x1187 0) x137 (= 0 x901)))) x2332)))
(assert (x846 x837))
(assert (x846 x702))
(assert (x928 x654 x1140 x901 x2216))
(assert (x928 x1365 x1252 x171 x1208))
(assert (x928 x136 x44 x2095 x2236))
(assert (=> (<= x389 10000) (= (x349 x389) (x1299 x389))))
(assert (x928 x1830 x595 x1162 x482))
(assert (x1084 x654 (- x1140 x1221)))
(assert (x2257 x1699))
(assert (x809 x901 x2216 x1140 x654))
(assert (= x2156 (x73 (x349 x2156))))
(assert (x928 x1252 x1365 x595 x1830))
(assert (=> (<= x580 10000) (= (x1299 x580) (x349 x580))))
(assert (x2257 (- x60 x595)))
(assert (x846 x823))
(assert (x2257 (- x595 x1355)))
(assert (x846 x484))
(assert (x1084 x1293 (- x1221 x482)))
(assert (x1794 x755))
(assert (x1794 x1052))
(assert (x1084 x1140 (- x654 x2090)))
(assert (= x483 true))
(assert (x2257 (- x482 x2090)))
(assert (x1084 x2095 (- x2236 x1355)))
(assert (x2257 (- x595 x60)))
(assert (x2257 (- x1221 x595)))
(assert (x846 x1221))
(assert (x1084 x300 (- x763 x2216)))
(assert (x846 x1453))
(assert (x928 x60 x1355 x171 x1208))
(assert (x846 x1265))
(assert (x846 x1972))
(assert (x846 x240))
(assert (x2257 (- x171 x482)))
(assert (x1084 x2216 (- x901 x136)))
(assert (x846 x1023))
(assert (x846 x1275))
(assert (x1084 x300 (- x763 x1221)))
(assert (x846 x855))
(assert (=> (<= x1811 10000) (= (x349 x1811) (x1299 x1811))))
(assert (x846 x1905))
(assert (= x1761 (x73 (x349 x1761))))
(assert (x846 x1726))
(assert (x928 x861 x2090 x1355 x60))
(assert (x1084 x2090 (- x861 x171)))
(assert (x928 x1208 x171 x1221 x1293))
(assert (= x732 (=> (= 0 x1589) x1414)))
(assert (x809 x1293 x1221 x2090 x861))
(assert (x2153 x1329 x2173))
(assert (x846 x460))
(assert (x928 x1252 x1365 x2216 x901))
(assert (x809 x654 x1140 x1252 x1365))
(assert (x2257 (- x482 x136)))
(assert (x2257 (- x300 x654)))
(assert (x928 x1355 x60 x861 x2090))
(assert (x809 x654 x1140 x2090 x861))
(assert (= true x2032))
(assert (x928 x595 x1830 x1140 x654))
(assert (x1084 x171 (- x1208 x300)))
(assert (x928 x763 x300 x2236 x2095))
(assert (x1084 x2090 x861))
(assert (x846 x681))
(assert (x1902 x1800))
(assert (x2257 (- x2236 x595)))
(assert (x928 x1208 x171 x2236 x2095))
(assert (x1084 x1355 (- x60 x901)))
(assert (= x1331 (x73 (x349 x1331))))
(assert (x928 x2216 x901 x171 x1208))
(assert (= (x73 (x349 x1120)) x1120))
(assert (x2257 (- x1221 x136)))
(assert (x846 x2192))
(assert (x846 x1649))
(assert (x846 x793))
(assert (x846 x2333))
(assert (x928 x1221 x1293 x595 x1830))
(assert (x1794 x1232))
(assert (x2257 (- x2236 x44)))
(assert (= x1264 (x73 (x349 x1264))))
(assert (= x316 (=> (and (or (and (= (x2265 1461501637330902918203684832716283019655932542975 x280) x1120) (= x1230 (x1225 x1767)) (>= x1230 0) (= (= x1230 0) x491) (not x409) (or (and x491 (= x2236 0) (= 0 x132)) (and (= 1 x132) (= x1230 x2236) (not x491))) (<= x1230 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x530 (x338 (x349 x157) (x1299 10) 0)) (= x1767 (x338 (x349 x1120) x530 0))) (and x409 (= x132 0) (= 0 x2236))) (= x409 (= x157 0))) x2315)))
(assert (x928 x1293 x1221 x2216 x901))
(assert (= (=> (= x94 (< 0 x1007)) (and (=> x94 x1626) (=> (not x94) x2262))) x1474))
(assert (x928 x1208 x171 x901 x2216))
(assert (x928 x1140 x654 x1162 x482))
(assert (x846 x2207))
(assert (x1794 x166))
(assert (=> (<= x1860 10000) (= (x1299 x1860) (x349 x1860))))
(assert (x846 x1052))
(assert (x2257 (- x763 x1355)))
(assert (x928 x1208 x171 x1293 x1221))
(assert (x846 x2311))
(assert (x928 x1208 x171 x1162 x482))
(assert (x809 x654 x1140 x901 x2216))
(assert (= x628 (or x1207 x467)))
(assert (x928 x763 x300 x1252 x1365))
(assert (x2257 (- x901 x1252)))
(assert (x2257 (- x1208 x1365)))
(assert (x928 x300 x763 x1252 x1365))
(assert (x928 x482 x1162 x901 x2216))
(assert (= x116 (=> (and (<= x1462 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2005 (x338 (x349 x2123) (x1299 6) 0)) (= x442 (= x1462 0)) (not (< x2260 x2123)) (= x1052 (x2265 1461501637330902918203684832716283019655932542975 x280)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2260) (= (x2011 x1407) x1462) (<= 0 x1462) (<= 0 x2260) (= x1407 (x338 (x349 x1052) x2005 0))) (and (=> x442 x1951) (=> (and (<= x767 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x767 x2236) (= x2221 (x338 (x349 x2123) (x1299 10) 0)) (= (x1225 x1948) x767) (= x1948 (x338 (x349 x120) x2221 0)) (= x120 (x2265 1461501637330902918203684832716283019655932542975 x280)) (= x132 0) (not x442) (<= 0 x767)) x2315)))))
(assert (x809 x1365 x1252 x2095 x2236))
(assert (x928 x595 x1830 x1365 x1252))
(assert (x1084 x171 (- x1208 x1140)))
(assert (x2257 (- x1355 x861)))
(assert (x928 x2236 x2095 x136 x44))
(assert (x846 x1914))
(assert (x846 x1891))
(assert (x1902 1000000000000000000))
(assert (x809 x136 x44 x595 x1830))
(assert (x1084 x763 (- x300 x1830)))
(assert (x2257 (- x1365 x2216)))
(assert (x809 x2236 x2095 x1293 x1221))
(assert (x1084 x1830 (- x595 x654)))
(assert (x928 x1162 x482 x136 x44))
(assert (x1098 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1084 x2095 (- x2236 x1830)))
(assert (x846 x894))
(assert (x2257 (- x171 x2216)))
(assert (=> (<= x2050 10000) (= (x349 x2050) (x1299 x2050))))
(assert (= 0 (x1305 x1517)))
(assert (x809 x2090 x861 x1140 x654))
(assert (= (x349 87118632) (x1299 87118632)))
(assert (=> (<= x2021 10000) (= (x349 x2021) (x1299 x2021))))
(assert (x846 x1886))
(assert (x1084 x2216 (- x901 x861)))
(assert (= (x73 (x1299 842085797)) 842085797))
(assert (x2257 (- x2216 x763)))
(assert (x846 x913))
(assert (x846 x1200))
(assert (x846 x629))
(assert (x846 x2021))
(assert (x1098 x1147))
(assert (= x245 (x73 (x349 x245))))
(assert (x928 x1162 x482 x654 x1140))
(assert (x846 x1012))
(assert (x928 x2216 x901 x2095 x2236))
(assert (x928 x136 x44 x763 x300))
(assert (x1084 x136 (- x44 x861)))
(assert (x928 x171 x1208 x1162 x482))
(assert (x1084 x861 (- x2090 x482)))
(assert (x846 x1973))
(assert (x846 x24))
(assert (x846 x957))
(assert (x1794 x2156))
(assert (x928 x482 x1162 x2216 x901))
(assert (x1084 x300 (- x763 x595)))
(assert (= (x2091 (- x1854 x1836)) (x1888 (- x1854 x1836))))
(assert (x846 x1945))
(assert (x1084 x300 (- x763 x1162)))
(assert (x809 x136 x44 x171 x1208))
(assert (=> (<= x1052 10000) (= (x349 x1052) (x1299 x1052))))
(assert (x1084 x1221 (- x1293 x861)))
(assert (= (x1834 x1932) (ite (and x1837 x1670) (x456 x1932) (ite (and x2343 x852) (x456 x1932) (x537 x1932)))))
(assert (x2257 (- x482 x1252)))
(assert (= (+ (x73 x259) 1) (x73 (x2112 x259 1))))
(assert (x1084 x654 (- x1140 x1355)))
(assert (x928 x2095 x2236 x482 x1162))
(assert (x1084 x654 (- x1140 x2095)))
(assert (x846 x1219))
(assert (x2257 (- x2095 x1365)))
(assert (x846 x2004))
(assert (x928 x1293 x1221 x1365 x1252))
(assert (x1084 x1830 (- x595 x1208)))
(assert (x1084 x171 (- x1208 x1162)))
(assert (x928 x595 x1830 x482 x1162))
(assert (x846 x668))
(assert (= (x73 (x349 x1645)) x1645))
(assert (x809 x2216 x901 x1162 x482))
(assert (x2257 (- x2216 x1162)))
(assert (x1084 x2216 (- x901 x171)))
(assert (x928 x763 x300 x136 x44))
(assert (x846 x1864))
(assert (x846 x1480))
(assert (x1547 32 x536))
(assert (x2257 (- x44 x1355)))
(assert (= (and x1556 (not x942)) x542))
(assert (= x53 (=> (= x2021 0) x1731)))
(assert (x1084 x300 (- x763 x654)))
(assert (x928 x861 x2090 x2216 x901))
(assert (= (x657 (- x1497 x2067)) (x494 (- x1497 x2067))))
(assert (x846 x2204))
(assert (x928 x763 x300 x482 x1162))
(assert (x846 x441))
(assert (x928 x1365 x1252 x60 x1355))
(assert (x2257 (- x1140 x300)))
(assert (x2257 (- x654 x482)))
(assert (x846 x2356))
(assert (x846 x278))
(assert (= x1862 (x73 (x349 x1862))))
(assert (x846 x214))
(assert (= x1343 (or (and (not x1752) x982) (and x1574 (not x1898)))))
(assert (x2257 (- x1252 x482)))
(assert (x846 x395))
(assert (x846 x63))
(assert (x928 x2236 x2095 x1140 x654))
(assert (x2257 (- x1355 x763)))
(assert (x846 x2247))
(assert (=> (<= x285 10000) (= (x349 x285) (x1299 x285))))
(assert (= 274184521717934524641157099916833587218 (x73 (x349 274184521717934524641157099916833587218))))
(assert (x846 x1417))
(assert (x1794 x2303))
(assert (= (x1299 243137395) (x349 243137395)))
(assert (x809 x1162 x482 x1293 x1221))
(assert (x928 x171 x1208 x2090 x861))
(assert (x2257 (- x1252 x1162)))
(assert (x1084 x861 (- x2090 x136)))
(assert (x928 x1162 x482 x1252 x1365))
(assert (x846 x304))
(assert (= x325 (x73 (x349 x325))))
(assert (x1084 x1355 (- x60 x2090)))
(assert (x928 x1221 x1293 x1162 x482))
(assert (x2257 (- x861 x44)))
(assert (x846 x195))
(assert (x2257 x136))
(assert (x2257 (- x595 x2236)))
(assert (x928 x595 x1830 x1162 x482))
(assert (= x1414 (=> (and (or (and (= 0 x232) (= x1293 0) x2213) (and (= (x338 (x349 x377) x2334 0) x1904) (= x232 1) (= x1293 x1716) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1716) (= x293 (x338 (x349 x1589) (x1299 9) 0)) (= (x853 x1904) x1716) (<= 0 x1716) (not x2213) (= (x338 (x349 x497) x293 0) x2334))) (= x2213 (= x1589 0))) x64)))
(assert (x2257 (- x1830 x1162)))
(assert (x928 x1830 x595 x861 x2090))
(assert (x1084 x1252 (- x1365 x60)))
(assert (x1084 x2095 (- x2236 x2090)))
(assert (= (and x282 x1665) x2379))
(assert (x1084 x2095 (- x2236 x171)))
(assert (x152 x897 x1067))
(assert (x1084 x1355 (- x60 x171)))
(assert (x928 x2095 x2236 x44 x136))
(assert (x2257 (- x1140 x2090)))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x73 (x1299 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x846 x1599))
(assert (x1084 x1293 (- x1221 x1252)))
(assert (x1084 x1365 (- x1252 x136)))
(assert (=> (<= x1831 10000) (= (x1299 x1831) (x349 x1831))))
(assert (=> (<= x1714 10000) (= (x349 x1714) (x1299 x1714))))
(assert (x846 x1655))
(assert (x846 x1618))
(assert (x928 x1830 x595 x1355 x60))
(assert (x846 x1928))
(assert (=> (>= 10000 x1388) (= (x1299 x1388) (x349 x1388))))
(assert (x846 x1374))
(assert (x1902 x862))
(assert (x928 x654 x1140 x1221 x1293))
(assert (x2257 (- x1252 x44)))
(assert (= (x2091 (- x2008 x1836)) (x1888 (- x2008 x1836))))
(assert (x809 x2095 x2236 x1355 x60))
(assert (x928 x171 x1208 x1252 x1365))
(assert (= (x349 826074471) (x1299 826074471)))
(assert (x846 x883))
(assert (= (=> (and (= x748 (x2105 (x349 274184521717934524641157099916833587206))) (= x604 (x2105 (x349 274184521717934524641157099916833587206))) (= x1016 (< (x1471 (x349 x734)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1016 (= x2251 (<= 0 x748)) x2251 x1164 (= x1691 x420) (= x210 (x2105 (x349 x734))) (= (= x734 274184521717934524641157099916833587218) x1643) (= (x1471 (x349 x734)) x252) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x210) x1164)) (and (=> (and (< (+ x562 x617) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1457 x617) (not (= x2069 2514000705)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x432) (= x1046 (x1353 (- x474 x1457))) (not (= x2069 649617121)) (= (x1353 (- x2042 4)) x661) (= 68 x2042) (= x1457 x215) (= x1960 (>= (+ x562 x617) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1643 (= x12 1) (= x413 (< x474 x1457)) (= x1185 (x338 (x349 x1680) (x1299 1) 0)) (= x1683 x562) (not x1045) (= (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0) x685) (not x1235) (= x2086 (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0)) (= 32 x190) (= x617 x2077) (= 274184521717934524641157099916833587206 x2083) (not (= 1889567281 x2069)) (< 0 x1261) (not x413) (= x420 x2042) (= x668 274184521717934524641157099916833587206) (>= x474 0) (<= 0 x562) (= (x850 x2086) x474) (<= x474 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x1683 x2077) x455) (not (< x2042 4)) (= x1235 (> x617 x474)) (not (= x2069 826074471)) (not x1960) (= x1416 x1680) (= (x1725 x1185) x562) (= x1680 x957) (not (> 649617121 x2069)) (<= x1680 1461501637330902918203684832716283019655932542975) (<= x562 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1261 (x235 (x349 274184521717934524641157099916833587218))) (= (x338 (x349 x1680) (x1299 1) 0) x965) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x661) (and (= (<= x661 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x661 64))) x1045) (= 2835717307 x2069)) x840) (=> (not x1643) x257))) x507))
(assert (x1084 x2216 (- x901 x2236)))
(assert (x809 x1830 x595 x763 x300))
(assert (x846 x922))
(assert (x928 x861 x2090 x1252 x1365))
(assert (x846 x57))
(assert (x809 x2236 x2095 x763 x300))
(assert (x928 x2216 x901 x300 x763))
(assert (x928 x1293 x1221 x1208 x171))
(assert (x2257 (- x1293 x44)))
(assert (x1084 x1140 (- x654 x300)))
(assert (x1084 x1221 (- x1293 x2095)))
(assert (x809 x171 x1208 x1252 x1365))
(assert (x846 x2040))
(assert (=> (<= x673 10000) (= (x349 x673) (x1299 x673))))
(assert (x809 x901 x2216 x1162 x482))
(assert (= x801 (=> (and (= x799 x676) (= x395 x2205)) x1133)))
(assert (x809 x2090 x861 x901 x2216))
(assert (x1098 x794))
(assert (x2257 (- x595 x1293)))
(assert (x809 x595 x1830 x1140 x654))
(assert (x2257 (- x1830 x2090)))
(assert (x846 x506))
(assert (= (x73 (x1299 2293535753)) 2293535753))
(assert (x846 x482))
(assert (x846 x936))
(assert (x2257 (- x136 x1365)))
(assert (x809 x1208 x171 x595 x1830))
(assert (= x177 (=> (= x1324 x157) x316)))
(assert (x1084 x1355 (- x60 x1162)))
(assert (x846 x163))
(assert (x1084 x1365 (- x1252 x482)))
(assert (x1084 x44 (- x136 x1221)))
(assert (x809 x1365 x1252 x2090 x861))
(assert (= (x349 2293535753) (x1299 2293535753)))
(assert (x846 x2172))
(assert (x2257 (- x1355 x1221)))
(assert (x846 x232))
(assert (= x157 (x73 (x349 x157))))
(assert (x846 x589))
(assert (x846 x136))
(assert (x928 x1293 x1221 x861 x2090))
(assert (x2257 (- x1830 x1293)))
(assert (= x1289 (or (and x270 x2017) (and (not x2360) x295) (and x1397 (not x749)))))
(assert (x846 x580))
(assert (x846 x2116))
(assert (x2257 (- x1162 x2095)))
(assert (= (x73 (x1299 142201243)) 142201243))
(assert (x846 x405))
(assert (= (x1888 (- x1507 x1836)) (x2091 (- x1507 x1836))))
(assert (= (x99 32) (x2048 32)))
(assert (x846 x2042))
(assert (x846 x633))
(assert (x1084 x1162 (- x482 x60)))
(assert (x928 x654 x1140 x1293 x1221))
(assert (x846 x29))
(assert (x846 x595))
(assert (x2257 (- x1208 x1252)))
(assert (x1084 x595 (- x1830 x1162)))
(assert (x1084 x763 (- x300 x2216)))
(assert (x809 x1221 x1293 x763 x300))
(assert (x928 x2090 x861 x1252 x1365))
(assert (x928 x1162 x482 x2090 x861))
(assert (x809 x763 x300 x1252 x1365))
(assert (x928 x1208 x171 x1365 x1252))
(assert (= 0 (x1305 x234)))
(assert (= x1014 (=> (and (= x588 (x338 (x349 x745) (x1299 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x570) (>= x570 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2260) (= (= x570 0) x2125) (= (x435 x1581) x570) (<= 0 x2260) (= x1581 (x338 (x349 x1253) x588 0)) (not (> x745 x2260))) (and (=> x2125 x1149) (=> (and (= x1910 (x338 (x349 x1253) x1562 0)) (= x1562 (x338 (x349 x745) (x1299 10) 0)) (<= x1702 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 0 x974) (= (x578 x1910) x1702) (not x2125) (>= x1702 0) (= x300 x1702)) x2097)))))
(assert (x2257 (- x171 x654)))
(assert (x846 x1251))
(assert (x1084 x901 (- x2216 x1365)))
(assert (x1084 x1252 (- x1365 x1221)))
(assert (x809 x595 x1830 x1293 x1221))
(assert (x846 x1))
(assert (x1084 x1221 (- x1293 x171)))
(assert (= (x99 (- x1843 164)) (x2048 (- x1843 164))))
(assert (x2257 (- x482 x1293)))
(assert (= x1251 (x73 (x349 x1251))))
(assert (x1084 x901 (- x2216 x136)))
(assert (x846 x1197))
(assert (x2257 (- x1365 x1140)))
(assert (x1084 x1162 (- x482 x300)))
(assert (x1084 x482 (- x1162 x2090)))
(assert (x846 x859))
(assert (= (x1337 (- 164 x86)) (x2302 (- 164 x86))))
(assert (x809 x1208 x171 x901 x2216))
(assert (x928 x136 x44 x1830 x595))
(assert (=> (>= 10000 x497) (= (x349 x497) (x1299 x497))))
(assert (x846 x1062))
(assert (= (=> (and (= x1189 (= x1882 0)) (or (and (= x1724 x112) (= (x2363 (+ x2331 96)) x839) (not x1189) (= x2211 x721) (= (x2363 (+ x1882 63)) x118) (= x872 (x2265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x118)) (= x721 (x2363 (+ x1724 x872)))) (and (= x2211 x1724) (= 96 x112) x1189)) (= (x91 (x349 x285)) x14) (= x1244 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1460 (x349 274184521717934524641157099916833587206)))) x1244 (not (= 0 x824)) (= (x1276 x112) x1112) (= x1787 (< 0 x1112)) (or (not x1787) (and (< 0 x1988) (= (x2363 (+ x112 32)) x1077) (= x170 (ite x1808 1 0)) (= x1988 (x250 x1077)) (= (not x1286) x1808) x1787 (= (= 0 x1988) x1286) (= x170 x1988) (= (x1276 x112) x2202) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2202) (and (> 32 x2202) (= (<= x2202 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))))) (= (x1460 (x349 274184521717934524641157099916833587206)) x2321) (= x1813 x2211)) x281) x25))
(assert (= (x2091 (- 164 x1836)) (x1888 (- 164 x1836))))
(assert (= (x1305 x1972) 0))
(assert (x928 x2236 x2095 x300 x763))
(assert (x2257 x1920))
(assert (x1084 x171 (- x1208 x1365)))
(assert (= (x1955 x1740) (ite (and x1670 x1837) (x289 x1740) (x250 x1740))))
(assert (x2257 (- x300 x171)))
(assert (x2257 (- x1162 x1221)))
(assert (x1794 x1815))
(assert (x928 x763 x300 x60 x1355))
(assert (x928 x2090 x861 x482 x1162))
(assert (x1794 x2021))
(assert (x846 x664))
(assert (x846 x1652))
(assert (x846 x2162))
(assert (x928 x1208 x171 x595 x1830))
(assert (=> (>= 10000 x672) (= (x349 x672) (x1299 x672))))
(assert (x846 x1764))
(assert (x846 x104))
(assert (x928 x1208 x171 x1140 x654))
(assert (x1084 x1140 (- x654 x595)))
(assert (x846 x1641))
(assert (x2257 (- x595 x861)))
(assert (x1794 x68))
(assert (x846 x86))
(assert (x1794 x1610))
(assert (x2257 (- x763 x136)))
(assert (x1084 x44 (- x136 x1365)))
(assert (x1084 x2216 (- x901 x595)))
(assert (= (x2048 (- x648 164)) (x99 (- x648 164))))
(assert (x1084 x1252 (- x1365 x136)))
(assert (x928 x136 x44 x171 x1208))
(assert (x846 x933))
(assert (x1794 x1862))
(assert (x1794 x1732))
(assert (x809 x901 x2216 x1355 x60))
(assert (x809 x1830 x595 x2095 x2236))
(assert (x846 x495))
(assert (x846 x1399))
(assert (x1084 x2090 (- x861 x654)))
(assert (x846 x653))
(assert (x2257 (- x2236 x1293)))
(assert (x1084 x482 (- x1162 x2095)))
(assert (x1794 x1436))
(assert (x1098 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1084 x136 (- x44 x1208)))
(assert (x1084 x1830 (- x595 x1140)))
(assert (x1084 x44 (- x136 x1140)))
(assert (x846 x432))
(assert (x846 x709))
(assert (x846 x132))
(assert (=> (<= x1732 10000) (= (x349 x1732) (x1299 x1732))))
(assert (x2257 (- x1221 x1365)))
(assert (=> (<= x1640 10000) (= (x1299 x1640) (x349 x1640))))
(assert (x1084 x300 (- x763 x861)))
(assert (x928 x1293 x1221 x60 x1355))
(assert (x1902 x1570))
(assert (x846 x1263))
(assert (x1084 x901 (- x2216 x1221)))
(assert (x809 x861 x2090 x171 x1208))
(assert (x1084 x654 (- x1140 x901)))
(assert (x2257 (- x300 x1293)))
(assert (x2257 (- x654 x171)))
(assert (=> (>= 10000 x1759) (= (x349 x1759) (x1299 x1759))))
(assert (x846 x412))
(assert (= (=> (and (= (x1809 (x349 274184521717934524641157099916833587206)) x663) x1648 (= x2271 (< x682 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1141 x895) (= x1053 (x1809 (x349 274184521717934524641157099916833587206))) (= x682 (x1809 (x349 x1331))) (= x793 (x772 (x349 x1331))) (= x1648 (<= 0 x1053)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x772 (x349 x1331))) x1484) x2271 x1484 (= x813 (= x1331 274184521717934524641157099916833587218))) (and (=> (and (= x640 x1573) (= 68 x402) (= (x338 (x349 x2355) (x1299 1) 0) x2326) (not (= 649617121 x419)) (not (= 826074471 x419)) x813 (= x1141 x402) (>= 1461501637330902918203684832716283019655932542975 x2355) (not x1889) (= (x1353 (- x1190 x983)) x2053) (= (x1353 (- x402 4)) x1451) (= x1317 (+ x640 x1312)) (not (< x402 4)) (= x983 x1573) (= x2181 32) (= 274184521717934524641157099916833587206 x440) (= x1312 x401) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1190) (not (> 649617121 x419)) (<= x401 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x196 1) (not x211) (= x211 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1451) (and (> 64 x1451) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1451) true)))) (not x967) (<= 0 x1190) (= (> x1573 x1190) x967) (= x2355 x1667) (= 2835717307 x419) (= (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0) x1567) (< (+ x401 x1573) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= x419 1889567281)) (= x890 274184521717934524641157099916833587206) (= (x235 (x349 274184521717934524641157099916833587218)) x172) (< 0 x172) (not (= x419 2514000705)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1265) (= (< x1190 x983) x1188) (>= x401 0) (= x401 (x2270 x2326)) (= x1190 (x2336 x1567)) (= x2355 x249) (= (x338 (x349 x2355) (x1299 1) 0) x1323) (= (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0) x1430) (not x1188) (= x370 x983) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x401 x1573)) x1889)) x881) (=> (not x813) x490))) x2066))
(assert (x809 x763 x300 x901 x2216))
(assert (= (and (not x453) x1129) x299))
(assert (x928 x1140 x654 x2090 x861))
(assert (= (and x677 x94) x818))
(assert (x928 x1293 x1221 x1140 x654))
(assert (x2257 (- x1221 x2095)))
(assert (x846 x618))
(assert (x846 x977))
(assert (x928 x1293 x1221 x1830 x595))
(assert (x809 x1140 x654 x1355 x60))
(assert (x809 x1221 x1293 x1355 x60))
(assert (x1084 x482 (- x1162 x861)))
(assert (x846 x1230))
(assert (x2257 (- x60 x654)))
(assert (= x2196 true))
(assert (x1084 x1208 (- x171 x595)))
(assert (x846 x1963))
(assert (x846 x1142))
(assert (x809 x2095 x2236 x763 x300))
(assert (x1084 x1293 (- x1221 x1140)))
(assert (x928 x1221 x1293 x2236 x2095))
(assert (x1084 x901 (- x2216 x1208)))
(assert (x1084 x60 (- x1355 x654)))
(assert (x846 x2228))
(assert (x928 x482 x1162 x1293 x1221))
(assert (x1794 x1264))
(assert (= x213 (or (and x270 (not x2017)) (and (not x2206) x2136))))
(assert (x928 x1293 x1221 x1162 x482))
(assert (= (=> (= x294 x1761) x898) x1628))
(assert (x1084 x44 (- x136 x1208)))
(assert (x928 x901 x2216 x654 x1140))
(assert (x928 x2095 x2236 x901 x2216))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x73 (x1299 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x809 x763 x300 x1293 x1221))
(assert (x846 x33))
(assert (x2257 (- x1221 x1208)))
(assert (x846 x1378))
(assert (x809 x1140 x654 x901 x2216))
(assert (x2257 (- x2095 x1208)))
(assert (x1084 x1162 (- x482 x595)))
(assert (x1902 x854))
(assert (=> (<= x1264 10000) (= (x349 x1264) (x1299 x1264))))
(assert (x846 x2283))
(assert (x1084 x60 (- x1355 x2095)))
(assert (x846 x1582))
(assert (x2257 (- x1221 x1830)))
(assert (x2257 (- x1252 x300)))
(assert (= (x610 x2323) 0))
(assert (x2257 (- x1365 x482)))
(assert (x1084 x1252 (- x1365 x482)))
(assert (x846 x810))
(assert (x2257 (- x654 x595)))
(assert (x846 x2061))
(assert (x1084 x1162 (- x482 x1830)))
(assert (= x615 x371))
(assert (x2257 (- x654 x763)))
(assert (x846 x1106))
(assert (x846 x1042))
(assert (= (=> (and (= 468353030 x1685) (>= 1461501637330902918203684832716283019655932542975 x1042) (> 911411945 x1685) (< x1685 2293535753) (= (x235 (x349 274184521717934524641157099916833587206)) x1618) (not (> 468353030 x1685)) (= 128 x1578) (= x2068 (= x1042 274184521717934524641157099916833587218)) (<= x1565 1461501637330902918203684832716283019655932542975) (> x1618 0)) (and (=> (not x2068) x969) (=> (and (not (= x2084 826074471)) (= x1565 x805) (= x2166 36) (= x2078 (x1353 (- x2166 4))) (> x262 0) (not (< x2166 4)) (not x1824) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1919) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x10) (not (> 649617121 x2084)) (= x195 1) x2068 (= x1919 (x1198 x274)) (<= x805 1461501637330902918203684832716283019655932542975) (= x430 32) (not (= 649617121 x2084)) (= 36 x2166) (= x2084 1889567281) (= x1824 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2078)) (< x2078 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2078))) (>= x1919 0) (= (x235 (x349 274184521717934524641157099916833587218)) x262) (= (x338 (x349 x1565) (x1299 1) 0) x274)) x797))) x1360))
(assert (x1084 x595 (- x1830 x171)))
(assert (x846 x340))
(assert (x928 x1221 x1293 x300 x763))
(assert (x846 x1380))
(assert (x1902 x1671))
(assert (x928 x482 x1162 x1208 x171))
(assert (x1084 x1140 (- x654 x1830)))
(assert (x809 x1208 x171 x2090 x861))
(assert (x846 x34))
(assert (x1084 x44 (- x136 x595)))
(assert (x846 x59))
(assert (x1084 x2095 (- x2236 x1365)))
(assert (=> (<= x1308 10000) (= (x1299 x1308) (x349 x1308))))
(assert (= (or (and x1981 (not x2177)) (and (not x1282) x2296) (and x1898 x1574)) x638))
(assert (= (=> (= x1417 0) x1320) x1584))
(assert (x2257 (- x44 x1221)))
(assert (x846 x2227))
(assert (x846 x305))
(assert (x1084 x2236 (- x2095 x136)))
(assert (x1084 x136 (- x44 x2090)))
(assert (= 0 (x1305 x1986)))
(assert (=> (<= x1886 10000) (= (x1299 x1886) (x349 x1886))))
(assert (x809 x1162 x482 x1355 x60))
(assert (x846 x1813))
(assert (x2257 (- x44 x1140)))
(assert (x1794 x1383))
(assert (= x449 (x73 (x349 x449))))
(assert (x846 x784))
(assert (x846 x760))
(assert (x928 x1355 x60 x1365 x1252))
(assert (x1084 x1355 (- x60 x1830)))
(assert (= (=> (= (> x2123 0) x1520) (and (=> (not x1520) x567) (=> x1520 x667))) x1951))
(assert (x1794 x1726))
(assert (x846 x517))
(assert (= (=> (and (<= x912 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1232 (x2265 1461501637330902918203684832716283019655932542975 x883)) (<= 0 x2013) (<= x781 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x141 0) x1717) (>= x781 0) (= (x2363 (+ 64 x126)) x169) (or (and (= x2165 (x338 (x349 x2227) x582 0)) (= x1191 x104) (= x1679 (x791 x2165)) (= x509 (+ x2389 x1758)) (= (x2265 1461501637330902918203684832716283019655932542975 x883) x2227) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1679 x104)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x836 x136 x44)) (= x266 (x2265 1461501637330902918203684832716283019655932542975 x883)) (= x2246 (x338 (x349 x1007) (x1299 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1679) (>= x1679 0) (not x149) (= x582 (x338 (x349 x1007) (x1299 5) 0)) (= x104 x2389) (= x1679 x1758) (= x1773 (x338 (x349 x266) x2246 0)) (= x1191 (x836 x136 x44))) (and (= (x338 (x349 x1007) (x1299 6) 0) x927) (= x2365 (x338 (x349 x672) x927 0)) x149 (= x672 (x2265 1461501637330902918203684832716283019655932542975 x883)))) (or (and (= x1950 (x338 (x349 x1007) (x1299 10) 0)) (= x1363 (x338 (x349 x108) x1950 0)) (not x1717) (= x108 (x2265 1461501637330902918203684832716283019655932542975 x883))) x1717) (= (x338 (x349 x1232) x343 0) x993) (= (x338 (x349 x1007) (x1299 1) 0) x662) (= x912 (x1179 x662)) (= (x1903 x1801) x2356) (= x1801 (x2363 (+ x126 32))) (= (x338 (x349 x1007) (x1299 6) 0) x343) (>= x912 0) (= (< x781 x2356) x15) (or (and (or (and x2235 (= (x1903 x1801) x72) (= x72 x2277)) (and (= x1146 x2277) (not x2235))) (= (< x1580 x1146) x2235) (= x1580 (x1903 x1801)) (= (= 0 x781) x364) x15 (or (and (= (x1353 (- x2277 x1036)) x261) (not (> x1036 x2277)) (= x1036 (x1150 x126)) x364 (= x136 x261)) (and (= x635 x136) (= (ite (< x2333 604800) x2333 604800) x635) (= x650 604800) (not (> x781 x2277)) (not x364) (= x2333 (x1353 (- x2277 x781)))))) (and (= x136 0) (not x15))) (= (x2112 x662 1) x2240) (<= x2013 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x435 x993) x781) (= x2013 (x955 x2240)) (= (= x136 0) x149)) x1488) x277))
(assert (x928 x861 x2090 x1140 x654))
(assert (x846 x2376))
(assert (x846 x937))
(assert (x846 x325))
(assert (x846 x127))
(assert (= (=> (and (= (= 0 x190) x1797) (= x2244 (< 0 x1655)) (= (x1591 (x349 x734)) x42) x2243 (= x1655 (x1866 x387)) (= x473 (x1429 (x349 274184521717934524641157099916833587206))) (or (and x1797 (= x387 96)) (and (= x1977 x387) (not x1797) (= x332 (x2363 (+ x1945 96))))) (or (not x2244) (and (= (ite x2175 1 0) x1795) (= x1111 (x1866 x387)) (= x2175 (not x2381)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1111) true) (< x1111 32)) (> x1111 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x990 x1795) (= (= 0 x990) x2381) x2244 (= x1789 (x2363 (+ 32 x387))) (> x990 0) (= (x645 x1789) x990))) (= x2243 (< (x1429 (x349 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (= 0 x12))) x1019) x840))
(assert (x809 x60 x1355 x763 x300))
(assert (x846 x723))
(assert (=> (<= x2359 10000) (= (x349 x2359) (x1299 x2359))))
(assert (= (and x2379 x978) x374))
(assert (x846 x1627))
(assert (x846 x449))
(assert (x809 x1830 x595 x1293 x1221))
(assert (x846 x369))
(assert (x928 x2236 x2095 x1208 x171))
(assert (x2257 (- x44 x1162)))
(assert (x1084 x595 (- x1830 x1365)))
(assert (x928 x1355 x60 x1293 x1221))
(assert (x2257 (- x1140 x1252)))
(assert (x1084 x2216 (- x901 x2095)))
(assert (= (=> (and (= (>= x825 0) x1338) x2029 (= x1799 (x1969 (x349 x285))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2159) x2029) (= (= x285 274184521717934524641157099916833587218) x2343) (= x2183 (x2105 (x349 274184521717934524641157099916833587206))) (= x2159 (x2105 (x349 x285))) x1338 x1779 (= (x2105 (x349 274184521717934524641157099916833587206)) x825) (= x1496 x1639) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1969 (x349 x285))) x1779)) (and (=> (not x2343) x117) (=> (and (not (= x1020 826074471)) (= x949 x1911) (= x643 (or (> x1399 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1399) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1399))))) (= x980 274184521717934524641157099916833587206) (= x472 x2025) (= (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0) x758) (= x1639 x522) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x498) (= x1367 x131) (= 2835717307 x1020) (<= 0 x1367) (not x1816) (not (< x1020 649617121)) (not x643) (= x1367 (x1110 x1763)) (= x1622 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1367 x949))) (= x899 (x235 (x349 274184521717934524641157099916833587218))) (= x555 x949) (= x873 (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0)) (= (+ x555 x131) x1103) (not (= 649617121 x1020)) (= x304 x103) (> x899 0) (not (< x522 4)) (= (> x949 x498) x1816) (= (x338 (x349 x2025) (x1299 1) 0) x1116) (= x1609 x1911) (not (= x1020 2514000705)) x2343 (= x522 68) (= x110 (x1353 (- x498 x1911))) (= x1475 274184521717934524641157099916833587206) (= 32 x1882) (not x1622) (= x512 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x1353 (- x522 4)) x1399) (= (> x1911 x498) x193) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1367 x949)) (<= x472 1461501637330902918203684832716283019655932542975) (= (x338 (x349 x2025) (x1299 1) 0) x1763) (not (= 1889567281 x1020)) (not x193) (= x824 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1367) (= x498 (x850 x758)) (<= 0 x498)) x25))) x121))
(assert (x846 x286))
(assert (= (x73 (x349 x1886)) x1886))
(assert (x928 x1162 x482 x595 x1830))
(assert (x846 x7))
(assert (x928 x60 x1355 x595 x1830))
(assert (x928 x763 x300 x1162 x482))
(assert (x846 x734))
(assert (x1084 x1355 x60))
(assert (x846 x762))
(assert (x928 x2090 x861 x300 x763))
(assert (x2257 (- x1355 x2095)))
(assert (x928 x171 x1208 x60 x1355))
(assert (x846 x1925))
(assert (x928 x595 x1830 x763 x300))
(assert (x2257 (- x44 x2095)))
(assert (x2257 (- x1355 x595)))
(assert (x2257 (- x136 x1830)))
(assert (x809 x1830 x595 x1252 x1365))
(assert (x928 x763 x300 x901 x2216))
(assert (= x1308 (x73 (x349 x1308))))
(assert (x1084 x1221 (- x1293 x60)))
(assert (= (x73 (x1299 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x846 x313))
(assert (x846 x1664))
(assert (=> (<= x1610 10000) (= (x349 x1610) (x1299 x1610))))
(assert (x2257 (- x136 x901)))
(assert (x809 x1221 x1293 x1140 x654))
(assert (x846 x1004))
(assert (x928 x2095 x2236 x1162 x482))
(assert (x928 x1221 x1293 x60 x1355))
(assert (x846 x778))
(assert (x1084 x136 (- x44 x1293)))
(assert (x846 x1217))
(assert (x846 x2205))
(assert (x2257 (- x136 x300)))
(assert (x846 x2320))
(assert (= (x349 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1299 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x846 x1375))
(assert (x928 x2090 x861 x1830 x595))
(assert (x1084 x595 x1830))
(assert (x846 x2267))
(assert (x846 x2220))
(assert (x846 x1645))
(assert (x2257 (- x1221 x1355)))
(assert (x809 x1162 x482 x1252 x1365))
(assert (= x1007 (x73 (x349 x1007))))
(assert (= x204 (=> (= x1424 x821) x735)))
(assert (x2257 x1605))
(assert (x928 x1140 x654 x2095 x2236))
(assert (=> (>= 10000 x120) (= (x349 x120) (x1299 x120))))
(assert (x928 x171 x1208 x136 x44))
(assert (x846 x1798))
(assert (x1084 x1208 (- x171 x654)))
(assert (x846 x1194))
(assert (x2257 (- x2095 x901)))
(assert (= x1726 (x73 (x349 x1726))))
(assert (x846 x804))
(assert (x928 x1221 x1293 x901 x2216))
(assert (x2257 (- x1162 x60)))
(assert (=> (<= x1565 10000) (= (x1299 x1565) (x349 x1565))))
(assert (x1084 x1355 (- x60 x763)))
(assert (x2257 (- x44 x861)))
(assert (x846 x1812))
(assert (x809 x1293 x1221 x136 x44))
(assert (x809 x2236 x2095 x595 x1830))
(assert (x1547 32 x1480))
(assert (x928 x1162 x482 x300 x763))
(assert (x2257 (- x171 x1365)))
(assert (x846 x389))
(assert (x1794 x1886))
(assert (x928 x1252 x1365 x1208 x171))
(assert (x928 x595 x1830 x901 x2216))
(assert (=> (<= x2063 10000) (= (x349 x2063) (x1299 x2063))))
(assert (x928 x654 x1140 x595 x1830))
(assert (x809 x1140 x654 x1293 x1221))
(assert (x928 x1140 x654 x1221 x1293))
(assert (x846 x1843))
(assert (=> (<= x1253 10000) (= (x349 x1253) (x1299 x1253))))
(assert (x809 x763 x300 x2095 x2236))
(assert (x1794 x1021))
(assert (x809 x300 x763 x1293 x1221))
(assert (x846 x415))
(assert (x2257 (- x1365 x1830)))
(assert (x2257 x1208))
(assert (= (x494 (- 196 x2067)) (x657 (- 196 x2067))))
(assert (x1098 x1548))
(assert (x809 x2236 x2095 x171 x1208))
(assert (x928 x1208 x171 x861 x2090))
(assert (x2257 (- x763 x2236)))
(assert (x2257 (- x1355 x1162)))
(assert (= (x73 (x349 x1205)) x1205))
(assert (x846 x2179))
(assert (x928 x171 x1208 x2216 x901))
(assert (x928 x654 x1140 x763 x300))
(assert (x846 x2082))
(assert (x1084 x1140 (- x654 x2095)))
(assert (x928 x300 x763 x60 x1355))
(assert (x1084 x763 (- x300 x1208)))
(assert (x1098 x118))
(assert (x846 x1257))
(assert (x1084 x595 (- x1830 x2236)))
(assert (x846 x2167))
(assert (x846 x1613))
(assert (= (x349 2514000705) (x1299 2514000705)))
(assert (x809 x1355 x60 x901 x2216))
(assert (= (x1373 x274) (ite (and x1837 x1670) (x850 x274) (ite (and x852 x2343) (x713 x274) (x850 x274)))))
(assert (x846 x139))
(assert (x928 x2236 x2095 x1252 x1365))
(assert (x928 x136 x44 x1365 x1252))
(assert (x846 x258))
(assert (=> (<= x1307 10000) (= (x1299 x1307) (x349 x1307))))
(assert (x1084 x300 (- x763 x1355)))
(assert (x846 x1958))
(assert (x2257 (- x595 x1162)))
(assert (x2257 (- x654 x44)))
(assert (x846 x2186))
(assert (= (ite (and x1837 x1670) (x850 x1893) (ite (and x852 x2343) (x713 x1893) (x850 x1893))) (x1373 x1893)))
(assert (x928 x2216 x901 x595 x1830))
(assert (x809 x1252 x1365 x763 x300))
(assert (x846 x1121))
(assert (x846 x92))
(assert (= (and (not x1223) x1651) x2249))
(assert (x846 x751))
(assert (x1794 x1396))
(assert (= (ite (and x2033 x345) (x1994 x8) (ite (and x345 x1357 (not x2033)) (x1994 x8) (x2200 x8))) (x887 x8)))
(assert (x2153 x609 x2107))
(assert (x846 x190))
(assert (x928 x2216 x901 x1162 x482))
(assert (x846 x925))
(assert (x2257 (- x901 x44)))
(assert (x928 x1162 x482 x861 x2090))
(assert (x2257 (- x1162 x901)))
(assert (x809 x60 x1355 x1293 x1221))
(assert (x1084 x2236 (- x2095 x1140)))
(assert (x846 x2350))
(assert (x2257 (- x763 x171)))
(assert (x2257 (- x1365 x763)))
(assert (x846 x1422))
(assert (x846 x474))
(assert (= (x1299 842085797) (x349 842085797)))
(assert (x1084 x763 (- x300 x901)))
(assert (x928 x44 x136 x1355 x60))
(assert (= x2305 (x73 (x349 x2305))))
(assert (x928 x482 x1162 x1252 x1365))
(assert (x928 x171 x1208 x2095 x2236))
(assert (= x2193 (or (and (not x1043) x78) (and (not x1949) x1614) (and x1239 x41))))
(assert (=> (<= x589 10000) (= (x349 x589) (x1299 x589))))
(assert (x2257 (- x482 x171)))
(assert (x1361 x1961 x644))
(assert (x846 x2159))
(assert (= x1133 (=> (and (not (< x622 468353030)) (= (x235 (x349 274184521717934524641157099916833587206)) x1812) (= x45 128) (= (= 274184521717934524641157099916833587218 x676) x1596) (< 0 x1812) (>= 1461501637330902918203684832716283019655932542975 x676) (<= x395 1461501637330902918203684832716283019655932542975) (= 468353030 x622) (< x622 911411945) (< x622 2293535753)) (and (=> (not x1596) x2261) (=> (and (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2300) (>= x1798 0) (= 36 x1453) (= x1294 (x235 (x349 274184521717934524641157099916833587218))) (> x1294 0) (not x1387) (= 36 x1453) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1798) (= (x1353 (- x1453 4)) x2009) x1596 (= x2320 1889567281) (= (x322 x2210) x1798) (not (= x2320 826074471)) (>= 1461501637330902918203684832716283019655932542975 x870) (= 1 x2238) (= x2210 (x338 (x349 x395) (x1299 1) 0)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2009) (and (< x2009 32) (= (<= x2009 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1387) (= 32 x287) (not (= 649617121 x2320)) (not (< x2320 649617121)) (not (< x1453 4)) (= x395 x870)) x711)))))
(assert (x2257 (- x171 x1830)))
(assert (x2257 (- x2090 x482)))
(assert (x1084 x2095 (- x2236 x482)))
(assert (x2257 (- x2236 x60)))
(assert (= x2108 (=> (and (= x2010 (= x1491 0)) (or x2010 (and (= (x338 (x349 x2025) x1135 0) x1870) (not x2010) (= (x338 (x349 x745) (x1299 9) 0) x450) (= (x338 (x349 x1253) x450 0) x1135))) (or (and (= 128 x1753) (= x1259 (x338 (x349 x1253) x1851 0)) x2033 (= x36 (x338 (x349 x2025) x1259 0)) (= (x338 (x349 x745) (x1299 7) 0) x1851)) (and (= (x2342 x787) x874) (= x517 (x1179 x1587)) (= x769 (x955 x471)) (= x787 (x338 (x349 x2025) x1772 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x769) (<= x517 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (not x1357) (= x1555 (x338 (x349 x1253) x308 0)) (= (+ x385 x2316) x1513) (< (+ x1 x1744) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1846 (x836 x1140 x654)) (= (x338 (x349 x745) (x1299 3) 0) x860) (= x1753 192) (= x1 x2316) (<= 0 x1744) (= (x1994 x176) x1744) (= x308 (x338 (x349 x745) (x1299 7) 0)) (= (x338 (x349 x2025) x1555 0) x1271) (= (x338 (x349 x2025) x1031 0) x176) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x836 x1140 x654)) (= x1744 x385) (= x1031 (x338 (x349 x1253) x860 0)) (<= x1744 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1846 x1)) (and (= x2358 (x338 (x349 x1253) x2280 0)) (= x2185 (x338 (x349 x2025) x2358 0)) x1357 (= x1753 192) (= x2280 (x338 (x349 x745) (x1299 7) 0)))) (not x2033) (= (= x654 0) x1357) (= x618 (x1818 160)) (<= x874 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x106 (< x874 x618)) (= (x2112 x1587 1) x471) (<= 0 x517) (or (and (= 0 x654) (not x106)) (and (= (x1818 160) x2122) (or (and (not x397) (= x98 (x1353 (- x2015 x874))) (= x654 x411) (not (< x2015 x874)) (= x411 (ite (< x98 604800) x98 604800)) (= 604800 x778)) (and (= x654 x1690) x397 (= (x143 128) x620) (not (> x620 x2015)) (= (x1353 (- x2015 x620)) x1690))) (= x37 (> x1146 x2122)) x106 (= x397 (= x874 0)) (or (and (= x1146 x2015) (not x37)) (and (= x2350 x2015) (= x2350 (x1818 160)) x37)))) (= (x338 (x349 x745) (x1299 7) 0) x704) (>= x769 0) (= x1772 (x338 (x349 x1253) x704 0)) (= x1587 (x338 (x349 x745) (x1299 1) 0)) (<= 0 x874))) (= x2033 (= 0 x1140))) x1014)))
(assert (x1084 x60 (- x1355 x44)))
(assert (x2257 (- x861 x1830)))
(assert (x928 x1162 x482 x60 x1355))
(assert (x846 x990))
(assert (x1098 x554))
(assert (x846 x2383))
(assert (x846 x1394))
(assert (x1794 x2050))
(assert (x846 x672))
(assert (x846 x2211))
(assert (x1794 x2359))
(assert (x846 x1028))
(assert (= (x73 (x349 x497)) x497))
(assert (= (x46 x1678) 0))
(assert (x1084 x1293 (- x1221 x861)))
(assert (x928 x1365 x1252 x654 x1140))
(assert (x1084 x44 (- x136 x654)))
(assert (x2257 (- x136 x2216)))
(assert (x928 x136 x44 x1162 x482))
(assert (x2257 (- x763 x1830)))
(assert (x1084 x654 (- x1140 x136)))
(assert (x1084 x44 (- x136 x1162)))
(assert (x928 x482 x1162 x44 x136))
(assert (= (and x357 x1376) x1983))
(assert (=> (>= 10000 x1641) (= (x349 x1641) (x1299 x1641))))
(assert (= (=> (and (= x502 (= 0 x1293)) (or (and (= x2178 (x2363 (+ x1813 32))) (= x771 (= 0 x1221)) (= x1173 (x955 x533)) (= (< x2100 x2189) x426) (<= x1173 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1967 (x2363 (+ 64 x1813))) (= (x338 (x349 x1307) (x1299 7) 0) x470) (or (and x426 (= (= x2100 0) x90) (= x1532 (> x1146 x1415)) (= (x699 x2178) x1415) (or (and (not (> x1134 x880)) (= (x302 x1813) x1134) (= x1303 (x1353 (- x880 x1134))) x90 (= x1221 x1303)) (and (= x1029 x1221) (= (x1353 (- x880 x2100)) x1673) (= x684 604800) (= (ite (< x1673 604800) x1673 604800) x1029) (not x90) (not (> x2100 x880)))) (or (and (= x1146 x880) (not x1532)) (and x1532 (= (x699 x2178) x276) (= x880 x276)))) (and (not x426) (= 0 x1221))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x236) (= x236 (x1179 x70)) (= x533 (x2112 x70 1)) (= x2100 (x647 x2146)) (or (and x771 (= x1967 x1864)) (and (= x1569 (+ x2294 x738)) (= x2233 x738) (= x2233 x2372) (= x2372 (x836 x1293 x1221)) (= x1967 x1864) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x836 x1293 x1221)) (>= x7 0) (< (+ x7 x2233) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x338 (x349 x1307) (x1299 3) 0) x1531) (= x7 (x887 x2239)) (= (x338 (x349 x497) x1531 0) x1592) (not x771) (<= x7 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2294 x7) (= (x338 (x349 x377) x1592 0) x2239))) (= x2189 (x699 x2178)) (= x70 (x338 (x349 x1307) (x1299 1) 0)) (<= x2100 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1537 (x338 (x349 x497) x470 0)) (<= 0 x1173) (not x502) (>= x2100 0) (<= 0 x236) (= (x338 (x349 x377) x1537 0) x2146)) (and (= x1864 x1813) x502)) (= (= x232 0) x128)) x1635) x64))
(assert (x1084 x901 (- x2216 x861)))
(assert (x1084 x861 (- x2090 x2216)))
(assert (x846 x509))
(assert (x846 x776))
(assert (x1084 x1293 (- x1221 x60)))
(assert (x846 x841))
(assert (x928 x2095 x2236 x654 x1140))
(assert (x846 x1799))
(assert (x846 x673))
(assert (= (and x867 x1063) x2319))
(assert (x846 x2090))
(assert (x1084 x595 (- x1830 x2095)))
(assert (x846 x1713))
(assert (x1084 x1830 (- x595 x1365)))
(assert (x846 x872))
(assert (x2257 (- x44 x171)))
(assert (x1084 x1365 (- x1252 x1162)))
(assert (= (=> (and (= (x1270 x1843) x285) (= (x1270 x1497) x2025) (> x1605 0) (= (x2342 x161) x1550) (>= 1461501637330902918203684832716283019655932542975 x1253) (= x1838 (x338 (x349 x1253) x1412 0)) (not (< x2260 x745)) (<= 0 x2260) (<= x2025 1461501637330902918203684832716283019655932542975) (= x327 (> x1550 0)) (= (x338 (x349 x745) (x1299 7) 0) x1412) (not (< x2260 x745)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2260) (>= x1550 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2260) (>= 1461501637330902918203684832716283019655932542975 x285) (< 0 x1176) (< 0 x1420) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1550) (= x745 (x1270 164)) (= (x338 (x349 x2025) x1838 0) x161) (> x1699 0) (= x1843 x2198) (= x837 x1497) (<= 0 x2260) (= (x1270 x2008) x1253) (= x694 x2008)) (and (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x527) (= x500 (x338 (x349 x745) (x1299 9) 0)) (= x1140 x527) (= (x1930 x1939) x527) (= x1939 (x338 (x349 x2025) x2299 0)) (= x1491 0) x327 (<= 0 x527) (= x2299 (x338 (x349 x1253) x500 0))) x2108) (=> (not x327) x1482))) x800))
(assert (x928 x2090 x861 x1355 x60))
(assert (x2257 (- x2095 x1355)))
(assert (x928 x2216 x901 x1252 x1365))
(assert (x928 x300 x763 x2236 x2095))
(assert (x928 x595 x1830 x861 x2090))
(assert (x928 x1365 x1252 x1221 x1293))
(assert (x1084 x2095 (- x2236 x595)))
(assert (x1794 x1811))
(assert (x1084 x1293 (- x1221 x1162)))
(assert (x846 x179))
(assert (x1084 x1365 (- x1252 x2095)))
(assert (x1084 x1830 (- x595 x2095)))
(assert (x2257 (- x654 x1208)))
(assert (x928 x1830 x595 x2090 x861))
(assert (x846 x1253))
(assert (= x2332 (=> (and (= x1035 (= 0 x901)) (or (and (not x1071) (= x2273 (x2265 1461501637330902918203684832716283019655932542975 x1961)) (= x151 (x2265 1461501637330902918203684832716283019655932542975 x280))) x1071) (= x1071 (= 0 x1187)) (or (and (= (x1179 x1047) x579) (or (and (= 0 x2216) (not x1048)) (and (= x424 (x1022 160)) (or (and (not (< x2253 x2179)) x1166 (= x2179 (x2030 128)) (= x2204 (x1353 (- x2253 x2179))) (= x2216 x2204)) (and (= (x1353 (- x2253 x1421)) x1023) (not (> x1421 x2253)) (= x2216 x1783) (not x1166) (= x1783 (ite (< x1023 604800) x1023 604800)) (= x1528 604800))) (= (< x424 x1146) x1498) (or (and x1498 (= x792 x2253) (= (x1022 160) x792)) (and (not x1498) (= x1146 x2253))) (= x1166 (= 0 x1421)) x1048)) (>= x1421 0) (= (> x664 x1421) x1048) (= x1038 (= 0 x2216)) (= (x338 (x349 x2123) (x1299 7) 0) x1519) (<= x178 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1860 (x2265 1461501637330902918203684832716283019655932542975 x1961)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x579) (= x1047 (x338 (x349 x2123) (x1299 1) 0)) (or (and (= x1666 (x2265 1461501637330902918203684832716283019655932542975 x1961)) (= (x2265 1461501637330902918203684832716283019655932542975 x280) x559) x1038 (= x1197 192)) (and (= x415 (+ x1262 x1494)) (= (x2265 1461501637330902918203684832716283019655932542975 x1961) x834) (< (x836 x901 x2216) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x243 x1973) (= x187 x1262) (= x187 (x954 x1005)) (= x1974 (x338 (x349 x594) x1644 0)) (not x1038) (= x934 (x2265 1461501637330902918203684832716283019655932542975 x1961)) (= (x2265 1461501637330902918203684832716283019655932542975 x280) x594) (<= x187 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1486 (x2265 1461501637330902918203684832716283019655932542975 x280)) (= x1197 192) (= x1005 (x338 (x349 x834) x1974 0)) (= x1644 (x338 (x349 x2123) (x1299 3) 0)) (= x1494 x1973) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x187 x1973)) (= (x836 x901 x2216) x243) (<= 0 x187))) (= (x1022 160) x664) (= x1421 (x1786 x1295)) (= (x2265 1461501637330902918203684832716283019655932542975 x280) x2252) (= x1295 (x338 (x349 x1860) x598 0)) (= (x955 x399) x178) (>= x579 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1421) (not x1035) (= (x338 (x349 x2252) x1519 0) x598) (>= x178 0) (= (x2112 x1047 1) x399)) (and (= x1613 (x2265 1461501637330902918203684832716283019655932542975 x1961)) (= 128 x1197) x1035 (= x1749 (x2265 1461501637330902918203684832716283019655932542975 x280))))) x116)))
(assert (= x1610 (x73 (x349 x1610))))
(assert (= (=> (and (<= 0 x438) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2260) (= x1886 (x2265 1461501637330902918203684832716283019655932542975 x883)) (= (x338 (x349 x1007) (x1299 6) 0) x1443) (= x689 (x338 (x349 x1886) x1443 0)) (= (= 0 x438) x2064) (<= 0 x2260) (= (x435 x689) x438) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x438) (not (< x2260 x1007))) (and (=> x2064 x1474) (=> (and (= x2329 (x338 (x349 x1184) x1736 0)) (= x44 x1875) (= (x338 (x349 x1007) (x1299 10) 0) x1736) (= x141 0) (not x2064) (= x1875 (x578 x2329)) (>= x1875 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1875) (= (x2265 1461501637330902918203684832716283019655932542975 x883) x1184)) x277))) x1441))
(assert (x2257 (- x654 x2236)))
(assert (x846 x335))
(assert (x2257 (- x2090 x1140)))
(assert (x846 x1021))
(assert (x1084 x1293 (- x1221 x595)))
(assert (x928 x136 x44 x1140 x654))
(assert (x846 x1297))
(assert (x846 x1967))
(assert (x846 x2285))
(assert (x1084 x44 (- x136 x2090)))
(assert (x1547 1000000000000000000 x429))
(assert (= x270 (and x1397 x749)))
(assert (= (x657 (- x1843 x2067)) (x494 (- x1843 x2067))))
(assert (x1084 x300 (- x763 x482)))
(assert (= x1207 (or (and (not x282) x1665) (and x1287 x1132) (and (not x2214) x374))))
(assert (x846 x1105))
(assert (x846 x241))
(assert (= x383 x1668))
(assert (=> (<= x2303 10000) (= (x1299 x2303) (x349 x2303))))
(assert (= x735 (=> (and (or (and x962 (= x141 0) (= x44 0)) (and (not x962) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x501) (= (x2265 1461501637330902918203684832716283019655932542975 x883) x933) (= (x578 x150) x501) (= x817 (= 0 x501)) (= (x338 (x349 x821) (x1299 10) 0) x2007) (<= 0 x501) (or (and (= x501 x44) (= 1 x141) (not x817)) (and x817 (= 0 x141) (= x44 0))) (= x150 (x338 (x349 x933) x2007 0)))) (= x962 (= x821 0))) x277)))
(assert (x2257 (- x482 x2095)))
(assert (x846 x1452))
(assert (= x2021 (x73 (x349 x2021))))
(assert (x2257 (- x1208 x1830)))
(assert (x846 x696))
(assert (= (=> (and (= (= x1417 0) x1604) (or (and (= x1140 0) x1604 (= 0 x1491)) (and (= (x338 (x349 x2025) x1751 0) x505) (not x1604) (= x2110 (x338 (x349 x1417) (x1299 9) 0)) (= x1491 1) (= x740 (x1930 x505)) (<= 0 x740) (= x740 x1140) (<= x740 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x338 (x349 x1253) x2110 0) x1751)))) x2108) x1320))
(assert (x928 x1355 x60 x1162 x482))
(assert (x1084 x2090 (- x861 x595)))
(assert (x2257 (- x1830 x861)))
(assert (= (and x2081 x783) x1527))
(assert (x846 x1401))
(assert (x2257 (- x136 x171)))
(assert (= x41 (and x1614 x1949)))
(assert (= x18 (=> (= x1582 x313) x1099)))
(assert (x928 x901 x2216 x1221 x1293))
(assert (x2257 (- x2236 x1221)))
(assert (x2257 (- x60 x861)))
(assert (x846 x1096))
(assert (x928 x1355 x60 x2095 x2236))
(assert (= (x73 (x349 x120)) x120))
(assert (= (x2091 (- x1843 x1836)) (x1888 (- x1843 x1836))))
(assert (x2257 (- x60 x2236)))
(assert (x928 x1293 x1221 x654 x1140))
(assert (x928 x1355 x60 x44 x136))
(assert (x2257 (- x136 x654)))
(assert (x846 x1774))
(assert (= 274184521717934524641157099916833587214 (x73 (x1299 274184521717934524641157099916833587214))))
(assert (x2257 (- x2216 x1140)))
(assert (x2257 (- x44 x2236)))
(assert (= (x887 x963) (ite (and x345 x2033) (x1994 x963) (ite (and (not x2033) x1357 x345) (x1994 x963) (x2200 x963)))))
(assert (x928 x2236 x2095 x2216 x901))
(assert (x846 x910))
(assert (=> (>= 10000 x1765) (= (x349 x1765) (x1299 x1765))))
(assert (= 1968616202 (x73 (x1299 1968616202))))
(assert (x846 x635))
(assert (x846 x576))
(assert (x2257 (- x654 x1830)))
(assert (x846 x1356))
(assert (x1084 x482 (- x1162 x1830)))
(assert (= (x73 (x2112 x662 1)) (+ (x73 x662) 1)))
(assert (x846 x301))
(assert (= x260 (and (not x575) x1896)))
(assert (x846 x499))
(assert (x928 x60 x1355 x1252 x1365))
(assert (x1794 x1417))
(assert (x846 x189))
(assert (x846 x1365))
(assert (x809 x1355 x60 x136 x44))
(assert (x1084 x861 (- x2090 x1140)))
(assert (x1084 x2095 (- x2236 x1252)))
(assert (x928 x1140 x654 x60 x1355))
(assert (x928 x763 x300 x1208 x171))
(assert (x2257 (- x1221 x44)))
(assert (x846 x1844))
(assert (x809 x861 x2090 x1355 x60))
(assert (x809 x300 x763 x1252 x1365))
(assert (x1084 x595 (- x1830 x1140)))
(assert (= x1388 (x73 (x349 x1388))))
(assert (x1084 x44 (- x136 x763)))
(assert (x846 x907))
(assert (= (x2142 x1374) 0))
(assert (x1547 32 x1855))
(assert (x846 x874))
(assert (x2257 (- x1830 x2236)))
(assert (= x1386 (=> (and (= x829 (x1718 (x349 x1205))) (= (< (x1718 (x349 x1205)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2201) x2201 (= (x2301 (x349 274184521717934524641157099916833587206)) x1109) (= (= 274184521717934524641157099916833587218 x1205) x575) x186 x858 (= (< x913 115792089237316195423570985008687907853269984665640564039457584007913129639936) x186) (= x858 (<= 0 x551)) (= x2141 x856) (= (x2301 (x349 274184521717934524641157099916833587206)) x551) (= x913 (x2301 (x349 x1205)))) (and (=> (not x575) x1114) (=> (and (= x492 (x1373 x826)) (= x1401 274184521717934524641157099916833587206) (= x856 x1506) (= x950 x1352) (not (= 1889567281 x2116)) (= x2276 274184521717934524641157099916833587206) (= x135 x1004) (= (or (> x2222 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2222 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2222) true))) x679) (= x258 x950) (not x1829) (not (< x2116 649617121)) (= 2835717307 x2116) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1004 x950)) (= x377 x1439) (not x679) (= x1489 32) (= x961 1) (= (< x492 x950) x1720) (not x1720) (> x1788 0) (= (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0) x826) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1996) (not (= x2116 826074471)) (= (x338 (x349 x377) (x1299 1) 0) x1893) (= (x1353 (- x492 x258)) x875) (not (< x1506 4)) (= x1829 (>= (+ x1004 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1004) (>= x492 0) (not (= 2514000705 x2116)) (<= 0 x1004) (= x258 x97) (= (x338 (x349 x377) (x1299 1) 0) x2298) (= x1506 68) (= (x2394 x1893) x1004) (= x19 (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0)) x575 (= x2353 (< x492 x258)) (= (x235 (x349 274184521717934524641157099916833587218)) x1788) (not x2353) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x492) (= (x1353 (- x1506 4)) x2222) (not (= x2116 649617121)) (>= 1461501637330902918203684832716283019655932542975 x1439) (= x333 (+ x1352 x135))) x1946)))))
(assert (x928 x2236 x2095 x1221 x1293))
(assert (x2257 (- x1355 x654)))
(assert (x846 x2303))
(assert (x846 x390))
(assert (x2257 (- x1208 x1221)))
(assert (x846 x676))
(assert (x928 x44 x136 x2090 x861))
(assert (x928 x482 x1162 x654 x1140))
(assert (x846 x1162))
(assert (x928 x171 x1208 x1365 x1252))
(assert (x2257 (- x1355 x2216)))
(assert (x928 x861 x2090 x1208 x171))
(assert (x2257 x595))
(assert (= x847 (=> (and (= (> x1645 0) x2382) (= (x1353 (- x1307 1)) x1645)) (and (=> (not x2382) x732) (=> x2382 x549)))))
(assert (x2257 (- x861 x1365)))
(assert (x928 x2090 x861 x136 x44))
(assert (x928 x1293 x1221 x2090 x861))
(assert (x2257 (- x482 x60)))
(assert (x809 x2090 x861 x1252 x1365))
(assert (x1794 x376))
(assert (x928 x1221 x1293 x171 x1208))
(assert (x928 x1355 x60 x2236 x2095))
(assert (x846 x974))
(assert (=> (>= 10000 x2355) (= (x349 x2355) (x1299 x2355))))
(assert (x1084 x300 (- x763 x1252)))
(assert (x1794 x395))
(assert (x809 x136 x44 x1252 x1365))
(assert (x809 x1355 x60 x595 x1830))
(assert (= (x349 1461501637330902918203684832716283019655932542975) (x1299 1461501637330902918203684832716283019655932542975)))
(assert (x846 x1104))
(assert (x2257 (- x136 x1293)))
(assert (x2257 (- x654 x2090)))
(assert (x809 x2090 x861 x1355 x60))
(assert (x2257 (- x1293 x861)))
(assert (x2257 (- x1355 x482)))
(assert (x928 x300 x763 x44 x136))
(assert (x928 x171 x1208 x595 x1830))
(assert (x846 x2001))
(assert (x1084 x1221 (- x1293 x1355)))
(assert (x846 x1775))
(assert (x1084 x595 (- x1830 x901)))
(assert (x2257 (- x1252 x2090)))
(assert (x1084 x1355 (- x60 x654)))
(assert (x846 x1092))
(assert (x846 x168))
(assert (x2257 x1480))
(assert (x2257 (- x1221 x171)))
(assert (x846 x1439))
(assert (x1084 x654 (- x1140 x44)))
(assert (x2257 (- x1355 x1293)))
(assert (x1084 x300 (- x763 x2236)))
(assert (x846 x105))
(assert (x2257 (- x482 x1221)))
(assert (x846 x245))
(assert (x846 x714))
(assert (x2257 (- x1293 x595)))
(assert (x846 x1055))
(assert (x846 x2088))
(assert (x809 x60 x1355 x1140 x654))
(assert (x1084 x2236 (- x2095 x901)))
(assert (x1098 x1328))
(assert (x1084 x44 (- x136 x60)))
(assert (x846 x2083))
(assert (x2257 (- x654 x300)))
(assert (x2257 (- x300 x2090)))
(assert (x846 x1351))
(assert (x846 x401))
(assert (x928 x44 x136 x595 x1830))
(assert (x1794 x1288))
(assert (x1084 x1208 (- x171 x482)))
(assert (x1084 x1365 (- x1252 x171)))
(assert (x1794 x2252))
(assert (x846 x1485))
(assert (x846 x1992))
(assert (= (=> (and (= x164 (x1353 (- x745 1))) (= (< 0 x164) x2214)) (and (=> x2214 x656) (=> (not x2214) x1536))) x2223))
(assert (x928 x1365 x1252 x2095 x2236))
(assert (x846 x2187))
(assert (x846 x119))
(assert (x846 x1364))
(assert (x928 x482 x1162 x1221 x1293))
(assert (x1084 x171 (- x1208 x1830)))
(assert (= (and (not x813) x1003) x1458))
(assert (x1902 x231))
(assert (x809 x1252 x1365 x1293 x1221))
(assert (x1794 x468))
(assert (x928 x2216 x901 x60 x1355))
(assert (x928 x2236 x2095 x1365 x1252))
(assert (x846 x1513))
(assert (x846 x707))
(assert (= (x73 (x349 x2376)) x2376))
(assert (x846 x1830))
(assert (x2257 (- x171 x763)))
(assert (=> (>= 10000 x977) (= (x1299 x977) (x349 x977))))
(assert (x809 x2216 x901 x1140 x654))
(assert (x1098 1461501637330902918203684832716283019655932542975))
(assert (x1084 x2236 (- x2095 x1293)))
(assert (= (x349 759532456) (x1299 759532456)))
(assert (x809 x44 x136 x763 x300))
(assert (x2257 (- x44 x654)))
(assert (x2257 (- x654 x2095)))
(assert (x1084 x1162 (- x482 x136)))
(assert (x1084 x2236 (- x2095 x171)))
(assert (x846 x2260))
(assert (= x2133 (=> (= 0 x2063) x201)))
(assert (= (x1337 (- x1854 x86)) (x2302 (- x1854 x86))))
(assert (x2257 (- x595 x1365)))
(assert (x809 x1252 x1365 x1140 x654))
(assert (x1084 x1252 (- x1365 x595)))
(assert (x2257 (- x1221 x1140)))
(assert (=> (<= x1726 10000) (= (x349 x1726) (x1299 x1726))))
(assert (x2257 (- x763 x901)))
(assert (= x568 (=> (and (= x2060 (x338 (x349 x497) x1881 0)) (= (x338 (x349 x1732) (x1299 6) 0) x1881) (<= 0 x893) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x893) (= x893 (x1608 x2060)) (= (= x893 0) x1108)) (and (=> (and (not x1108) (= x1076 x1732)) x1814) (=> (and (= x736 (x1353 (- x1732 1))) x1108 (= x560 (< 0 x736)) (not x560)) x53)))))
(assert (x1084 x44 (- x136 x861)))
(assert (x809 x763 x300 x2090 x861))
(assert (x846 x2323))
(assert (x928 x901 x2216 x1355 x60))
(assert (x809 x60 x1355 x2090 x861))
(assert (x846 x1788))
(assert (x809 x1830 x595 x1140 x654))
(assert (x1084 x1140 (- x654 x763)))
(assert (x846 x620))
(assert (x846 x984))
(assert (= x2261 (=> (= x487 (= 274184521717934524641157099916833587214 x676)) (and (=> (and (not (= x77 826074471)) (<= 0 x421) (= x77 1889567281) (not (> 649617121 x77)) (= x751 (x235 (x349 274184521717934524641157099916833587214))) (= x2238 1) (= (or (and (= (<= x2164 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2164)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2164)) x1306) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x421) (= x287 32) (= x1849 50942633119752846454219349998365661925608737367104304655302372697894809501696) (< 0 x751) (>= 1461501637330902918203684832716283019655932542975 x2167) (= (x1290 x251) x421) (= x2167 x395) (not x1306) (= x2311 36) (= 36 x2311) (not (< x2311 4)) (= (x338 (x349 x395) (x1299 1) 0) x251) (not (= 649617121 x77)) x487 (= (x1353 (- x2311 4)) x2164)) x711) (=> (not x487) x1944)))))
(assert (x846 x2222))
(assert (x2257 (- x901 x1140)))
(assert (x1084 x763 (- x300 x482)))
(assert (x2257 (- x2090 x654)))
(assert (= (=> (and (= (x338 (x349 x2025) x979 0) x986) (= (x338 (x349 x1253) x185 0) x979) (= x1857 (x2342 x986)) (= (x338 (x349 x317) (x1299 7) 0) x185) (= (= x1857 0) x1239) (<= x1857 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1857 0)) (and (=> (and x1239 (= x2242 (< 0 x26)) (not x2242) (= (x1353 (- x317 1)) x26)) x1584) (=> (and (= x2098 x317) (not x1239)) x125))) x715))
(assert (x928 x300 x763 x136 x44))
(assert (x928 x1162 x482 x2216 x901))
(assert (x809 x595 x1830 x2090 x861))
(assert (x2257 (- x136 x60)))
(assert (x846 x2284))
(assert (x846 x756))
(assert (x809 x136 x44 x901 x2216))
(assert (=> (<= x2156 10000) (= (x1299 x2156) (x349 x2156))))
(assert (= (and (not x1216) x1458) x400))
(assert (x928 x1162 x482 x1221 x1293))
(assert (x1084 x1830 (- x595 x2090)))
(assert (x928 x2095 x2236 x595 x1830))
(assert (x2257 (- x60 x901)))
(assert (x1794 x834))
(assert (x1794 x594))
(assert (= (x73 (x349 x908)) x908))
(assert (x846 x875))
(assert (x846 x1137))
(assert (x2257 (- x136 x2236)))
(assert (x928 x1355 x60 x136 x44))
(assert (x928 x1252 x1365 x136 x44))
(assert (x2257 (- x2216 x136)))
(assert (x2257 x2216))
(assert (x2257 x1830))
(assert (= (x238 x2209) 0))
(assert (x928 x300 x763 x1830 x595))
(assert (x809 x136 x44 x1140 x654))
(assert (=> (>= 10000 x1891) (= (x1299 x1891) (x349 x1891))))
(assert (x2257 (- x1830 x1252)))
(assert (x1084 x861 (- x2090 x300)))
(assert (x928 x2090 x861 x1140 x654))
(assert (x1084 x482 (- x1162 x1208)))
(assert (x809 x2090 x861 x171 x1208))
(assert (x846 x1296))
(assert (x1794 x1641))
(assert (x846 x1203))
(assert (x928 x1355 x60 x2090 x861))
(assert (x809 x595 x1830 x2095 x2236))
(assert (=> (>= 10000 x2305) (= (x1299 x2305) (x349 x2305))))
(assert (x2257 (- x300 x1162)))
(assert (x1084 x1208 (- x171 x1293)))
(assert (x846 x1258))
(assert (= (x73 (x349 x734)) x734))
(assert (x928 x861 x2090 x1830 x595))
(assert (x928 x44 x136 x1252 x1365))
(assert (x2257 (- x763 x861)))
(assert (= x1825 (x73 (x349 x1825))))
(assert (x809 x171 x1208 x763 x300))
(assert (x1547 32 x1420))
(assert (x2257 (- x1140 x1221)))
(assert (x1084 x1830 (- x595 x60)))
(assert (x846 x824))
(assert (x846 x49))
(assert (x846 x2295))
(assert (= x317 (x73 (x349 x317))))
(assert (x846 x314))
(assert (x2257 (- x861 x300)))
(assert (x1794 x1825))
(assert (x1084 x1208 (- x171 x763)))
(assert (x2257 (- x763 x595)))
(assert (x2257 (- x1830 x60)))
(assert (x928 x482 x1162 x763 x300))
(assert (x846 x805))
(assert (x2257 (- x1365 x1162)))
(assert (x2257 (- x1355 x1830)))
(assert (x928 x1293 x1221 x2095 x2236))
(assert (= (x2091 (- 196 x1836)) (x1888 (- 196 x1836))))
(assert (x846 x1017))
(assert (x809 x1365 x1252 x136 x44))
(assert (x1084 x1355 (- x60 x1208)))
(assert (= (or (and x1670 x1837) x1966) x1959))
(assert (x809 x2216 x901 x595 x1830))
(assert (x2257 (- x2236 x1208)))
(assert (= x203 (x73 (x349 x203))))
(assert (x1084 x763 (- x300 x1162)))
(assert (x846 x755))
(assert (x2257 (- x861 x763)))
(assert (= (x73 (x349 x914)) x914))
(assert (= 0 (x2142 x1940)))
(assert (x928 x482 x1162 x300 x763))
(assert (x1794 x1900))
(assert (x1084 x861 (- x2090 x1162)))
(assert (=> (<= x376 10000) (= (x349 x376) (x1299 x376))))
(assert (x928 x1140 x654 x482 x1162))
(assert (= (x73 (x1299 2258409472)) 2258409472))
(assert (x1084 x1252 (- x1365 x44)))
(assert (x809 x901 x2216 x1293 x1221))
(assert (x928 x2236 x2095 x1830 x595))
(assert (x846 x799))
(assert (x846 x1156))
(assert (x809 x1830 x595 x1162 x482))
(assert (x846 x949))
(assert (x2257 (- x1830 x1365)))
(assert (x846 x1550))
(assert (x846 x1558))
(assert (x1794 x1308))
(assert (x928 x2090 x861 x2236 x2095))
(assert (= x138 (or (and x260 x267) (and x575 x1896))))
(assert (x1084 x2090 (- x861 x1208)))
(assert (x846 x1836))
(assert (x1084 x60 (- x1355 x901)))
(assert (= x295 (and (not x2180) x1545)))
(assert (x809 x171 x1208 x1140 x654))
(assert (x1794 x245))
(assert (x846 x1085))
(assert (x1098 x1874))
(assert (x1084 x1830 (- x595 x1293)))
(assert (x928 x300 x763 x901 x2216))
(assert (x1084 x1162 (- x482 x763)))
(assert (= (x73 (x349 x1961)) x1961))
(assert (= (x73 (x349 x2359)) x2359))
(assert (x846 x1087))
(assert (x846 x1908))
(assert (x846 x1245))
(assert (x2257 (- x136 x1221)))
(assert (x809 x654 x1140 x1162 x482))
(assert (x846 x1442))
(assert (= (x2302 (- x1375 x86)) (x1337 (- x1375 x86))))
(assert (x809 x2236 x2095 x136 x44))
(assert (x846 x9))
(assert (x928 x300 x763 x1162 x482))
(assert (x2257 (- x1293 x60)))
(assert (x1902 x2272))
(assert (x2257 (- x1208 x1355)))
(assert (x1794 274184521717934524641157099916833587206))
(assert (x928 x1365 x1252 x2090 x861))
(assert (x846 x1384))
(assert (x2257 (- x300 x595)))
(assert (x2257 (- x1293 x1355)))
(assert (x846 x1231))
(assert (x1547 32 x1176))
(assert (x846 x2106))
(assert (x846 x1783))
(assert (x2257 (- x1140 x1293)))
(assert (= x947 true))
(assert (= x2050 (x73 (x349 x2050))))
(assert (x846 x570))
(assert (x2257 (- x1140 x44)))
(assert (x846 x187))
(assert (=> (>= 10000 x1680) (= (x349 x1680) (x1299 x1680))))
(assert (x928 x171 x1208 x44 x136))
(assert (x809 x1162 x482 x171 x1208))
(assert (x846 x333))
(assert (x928 x300 x763 x1140 x654))
(assert (x1084 x1162 (- x482 x2095)))
(assert (x1084 x2090 (- x861 x2216)))
(assert (x2257 (- x2090 x1830)))
(assert (x846 x1293))
(assert (x846 x2087))
(assert (x809 x1140 x654 x1252 x1365))
(assert (x928 x2095 x2236 x2090 x861))
(assert (=> (>= 10000 x883) (= (x1299 x883) (x349 x883))))
(assert (x2257 (- x1162 x1830)))
(assert (= (x657 (- 132 x2067)) (x494 (- 132 x2067))))
(assert (x846 x1001))
(assert (x2257 (- x1162 x171)))
(assert (= x1529 (or x988 x2115)))
(assert (x2257 (- x1365 x1221)))
(assert (x928 x1221 x1293 x44 x136))
(assert (x809 x482 x1162 x171 x1208))
(assert (x2257 (- x595 x482)))
(assert (x846 x924))
(assert (= (=> (and (<= 0 x905) (= x2024 (x2363 (+ x1864 32))) (= x2047 (x338 (x349 x1307) (x1299 6) 0)) (= x1089 (x2112 x2218 1)) (>= x146 0) (= (x1608 x1193) x146) (= (x338 (x349 x497) x2047 0) x1193) (= (x1179 x2218) x905) (or (and (< (x836 x2090 x861) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x418) (>= x2158 0) (= (x1065 x1395) x2158) (= x2158 x1625) (= x1395 (x338 (x349 x497) x284 0)) (= (+ x2073 x1625) x894) (= x1349 (x836 x2090 x861)) (= (x338 (x349 x1307) (x1299 5) 0) x284) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2158) (= x179 x2073) (< (+ x2158 x179) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x179 x1349)) x418) (= x418 (= 0 x2090)) (<= 0 x219) (= x785 (x1922 x2024)) (= (x2363 (+ 64 x1864)) x1390) (<= x219 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (not x2370) (= x2090 0)) (and (= x1619 (< x451 x1146)) (or (and (not x1619) (= x506 x1146)) (and (= x163 x506) x1619 (= x163 (x1922 x2024)))) (= x451 (x1922 x2024)) x2370 (or (and (= (x1466 x1864) x995) (= x723 (x1353 (- x506 x995))) (= x2090 x723) x1975 (not (> x995 x506))) (and (= x1037 (x1353 (- x506 x146))) (= x1649 x2090) (not (> x146 x506)) (= (ite (< x1037 604800) x1037 604800) x1649) (not x1975) (= 604800 x1356))) (= (= 0 x146) x1975))) (= (< x146 x785) x2370) (= x2218 (x338 (x349 x1307) (x1299 1) 0)) (= (= 0 x2215) x586) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x905) (= (x955 x1089) x219) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x146)) x2148) x283))
(assert (x928 x1140 x654 x171 x1208))
(assert (x846 x2327))
(assert (x1084 x1355 (- x60 x1365)))
(assert (x846 x1878))
(assert (x1361 x883 x84))
(assert (x2257 (- x2236 x171)))
(assert (= (and x2136 x2206) x1397))
(assert (= (x2048 (- x1375 164)) (x99 (- x1375 164))))
(assert (= (+ (x73 x1047) 1) (x73 (x2112 x1047 1))))
(assert (x1794 x1681))
(assert (x1794 x1007))
(assert (= 0 (x46 x112)))
(assert (x2257 (- x2090 x1252)))
(assert (x2257 (- x1208 x2236)))
(assert (x928 x1221 x1293 x1355 x60))
(assert (= (x2302 (- x1507 x86)) (x1337 (- x1507 x86))))
(assert (x846 x1789))
(assert (x1794 x1640))
(assert (= x1127 (x73 (x349 x1127))))
(assert (x1084 x136 x44))
(assert (= x672 (x73 (x349 x672))))
(assert (x846 x2273))
(assert (x846 x1431))
(assert (x928 x1355 x60 x1830 x595))
(assert (= x1837 x184))
(assert (x809 x1208 x171 x1293 x1221))
(assert (x2257 (- x2090 x44)))
(assert (x809 x60 x1355 x2095 x2236))
(assert (x846 x1331))
(assert (x928 x1162 x482 x763 x300))
(assert (x846 x1007))
(assert (x928 x1208 x171 x763 x300))
(assert (= (x73 (x349 x970)) x970))
(assert (x2257 (- x44 x482)))
(assert (x1084 x482 (- x1162 x2236)))
(assert (x2257 (- x1830 x1355)))
(assert (= (x1337 (- 196 x86)) (x2302 (- 196 x86))))
(assert (x1084 x1293 (- x1221 x2090)))
(assert (x846 x416))
(assert (x1084 x171 (- x1208 x595)))
(assert (x846 x1228))
(assert (x846 x770))
(assert (x846 x2359))
(assert (x846 x1854))
(assert (x2257 x1162))
(assert (x846 x1208))
(assert (x846 x593))
(assert (x928 x763 x300 x1221 x1293))
(assert (x846 x682))
(assert (x2257 (- x1221 x2216)))
(assert (= x667 (=> (and (>= x543 0) (= (x2011 x1006) x543) (= (x2265 1461501637330902918203684832716283019655932542975 x280) x755) (= x1006 (x338 (x349 x755) x1501 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x543) (= x1501 (x338 (x349 x2123) (x1299 6) 0)) (= x1192 (= 0 x543))) (and (=> x1192 x903) (=> (and (= x2123 x1324) (not x1192)) x177)))))
(assert (= true x1944))
(assert (x846 x2238))
(assert (x928 x595 x1830 x2236 x2095))
(assert (x846 x446))
(assert (x846 x543))
(assert (x809 x2090 x861 x1293 x1221))
(assert (x846 x1383))
(assert (x1084 x1830 (- x595 x1221)))
(assert (= (and (not x1670) x1837) x852))
(assert (= x977 (x73 (x349 x977))))
(assert (x809 x763 x300 x171 x1208))
(assert (= x1032 (and x958 x1520)))
(assert (x1084 x1208 (- x171 x1365)))
(assert (x1084 x136 (- x44 x1252)))
(assert (x2257 32))
(assert (= x1396 (x73 (x349 x1396))))
(assert (x846 x1653))
(assert (x1902 x513))
(assert (x846 x44))
(assert (x2257 (- x60 x1830)))
(assert (x1794 x1885))
(assert (x846 x1090))
(assert (x928 x482 x1162 x1365 x1252))
(assert (x846 x252))
(assert (x846 x1724))
(assert (= (=> (and (= x2131 (x338 (x349 x1493) x624 0)) (<= x2387 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2387 (x435 x2131)) (= x1493 (x2265 1461501637330902918203684832716283019655932542975 x883)) (<= 0 x2387) (= x624 (x338 (x349 x29) (x1299 6) 0)) (= (= 0 x2387) x1167)) (and (=> (and (= (x1353 (- x29 1)) x24) x1167 (not x1209) (= (> x24 0) x1209)) x2262) (=> (and (not x1167) (= x29 x1424)) x204))) x1901))
(assert (x2257 (- x171 x1293)))
(assert (x2257 x2012))
(assert (=> (>= 10000 x1205) (= (x1299 x1205) (x349 x1205))))
(assert (x2257 (- x2090 x901)))
(assert (x809 x1140 x654 x595 x1830))
(assert (x846 x983))
(assert (x846 x2317))
(assert (x1794 x108))
(assert (= (x73 (x349 x376)) x376))
(assert (x2257 (- x1221 x482)))
(assert (=> (<= x914 10000) (= (x349 x914) (x1299 x914))))
(assert (x1084 x2090 (- x861 x1252)))
(assert (= (x349 142201243) (x1299 142201243)))
(assert (x928 x2236 x2095 x1162 x482))
(assert (not x504))
(assert (x846 x1141))
(assert (x928 x2236 x2095 x654 x1140))
(assert (x1084 x171 (- x1208 x44)))
(assert (x1794 x1714))
(assert (x1547 32 x1920))
(assert (x1794 x1211))
(assert (x846 x1977))
(assert (x928 x60 x1355 x44 x136))
(assert (x1084 x1208 (- x171 x44)))
(assert (=> (>= 10000 x834) (= (x349 x834) (x1299 x834))))
(assert (x846 x492))
(assert (x809 x1162 x482 x2090 x861))
(assert (x2257 x1183))
(assert (x1084 x1221 (- x1293 x300)))
(assert (x846 x1046))
(assert (x928 x901 x2216 x1830 x595))
(assert (x2257 (- x1162 x1355)))
(assert (x2257 (- x2090 x60)))
(assert (x809 x861 x2090 x901 x2216))
(assert (x846 x1324))
(assert (x846 x2158))
(assert (x1084 x482 (- x1162 x654)))
(assert (= (=> (and (= x1670 (= 0 x460)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1011) (>= x2087 0) (= (x1201 x652) x2087) (not (> x2087 x1011)) (= x306 (x338 (x349 x745) (x1299 5) 0)) (= (x338 (x349 x2025) x692 0) x963) (= (x338 (x349 x1253) x1381 0) x692) (= (x887 x963) x1011) (= x460 (x1353 (- x1011 x2087))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2087) (= x652 (x338 (x349 x285) x1704 0)) (= (x338 (x349 x745) (x1299 4) 0) x1806) (= (x338 (x349 x2025) x1615 0) x1704) (= x1615 (x338 (x349 x1253) x1806 0)) (= x946 (x338 (x349 x1253) x306 0)) (>= x1011 0) (= (x1065 x946) x513) (<= x513 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x513) (= (x338 (x349 x745) (x1299 3) 0) x1381)) (and (=> (and x1670 (= x30 x1813)) x281) (=> (and (or (and x968 (= (x2363 (+ x1724 x1496)) x1348)) (not x968)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x162 x460)) (= (x2393 x683 1000000000000000000) x1609) (= x854 (x759 (* x460 1000000000000000000))) (= (ite (> x460 115792089237316195423570985008687907853269984665640564039457) 1 0) x794) (= x324 (x338 (x349 x1253) x1315 0)) (= (x1201 x174) x162) (= x859 0) (= (x338 (x349 x285) x1544 0) x174) (not x1670) (= x1213 (x2363 (+ 96 x1753))) (>= x595 0) (= x460 x1015) (< 0 x513) (= x1051 (x338 (x349 x745) (x1299 11) 0)) (= (+ x1015 x1180) x945) (or (and (= 0 x1642) (not x207)) (and (= x234 x1213) x207 (or (and x339 (= x989 (x2363 (+ 64 x30))) (or (and (= x1986 (x2363 (+ 96 x30))) (= (x1985 x1986) x1121) x1739 (or (and (= 96 x1642) (not x1056)) (and (= x1199 (x2363 (+ x2331 160))) (= x1972 (x2363 (+ x30 128))) (not x1072) (= (> x1496 128) x1072) (= x2034 (x1985 x1972)) (= 128 x1642) x1056)) (= x1933 (x2363 (+ 128 x2331))) (= (< 96 x1496) x1056)) (and (= x1642 64) (not x1739))) (= (< 64 x1496) x1739) (= x680 (x1985 x989)) (= (x2363 (+ 96 x2331)) x2001)) (and (= x1642 32) (not x339))) (= x1595 x1724) (= (> x1496 32) x339) (= (x1985 x234) x2176))) (= x595 (x2375 x386)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x595) (= (x2363 (+ 100 x1753)) x1652) (= x1180 x162) (= (x2363 (+ x1652 128)) x1724) (= x1229 (x2363 (+ x1254 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= (x1659 x30) x1496) (= (< 0 x1496) x207) (= (x338 (x349 x745) (x1299 4) 0) x1315) (= (x1353 (- x1481 32)) x9) (= (x338 (x349 x285) x1060 0) x386) (= (x1353 (- x2331 x30)) x1481) (= (x836 x595 x1830) x683) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x162) (= x1008 (x2265 x554 x794)) (= (x2297 x1213) x1147) (= x1254 (x2265 26959946667150639794667015087019630673637144422540572481103610249215 x1147)) (= x1008 0) (= x1153 (> x516 0)) (= (x2363 (+ x30 100)) x2331) x1153 (= x516 (x235 (x349 x285))) (>= x162 0) (= 1 x554) (= (x2363 (+ 68 x30)) x2228) (= x1060 (x338 (x349 x1253) x1051 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x836 x595 x1830)) (= x1830 (x2393 x854 x513)) (= (x338 (x349 x2025) x324 0) x1544) (= (> x1642 x1496) x968)) x121))) x1953))
(assert (x846 x68))
(assert (x846 x443))
(assert (x928 x1221 x1293 x1365 x1252))
(assert (x2257 (- x654 x1355)))
(assert (x1084 x2216 (- x901 x654)))
(assert (x846 x2020))
(assert (x846 x2253))
(assert (x1084 x482 (- x1162 x1293)))
(assert (x846 x2063))
(assert (x2257 (- x1252 x60)))
(assert (x846 x1565))
(assert (x846 x1039))
(assert (= (x73 (x349 x2004)) x2004))
(assert (x2257 (- x300 x2095)))
(assert (x809 x1162 x482 x2095 x2236))
(assert (= (x1299 1000000000000000000) (x349 1000000000000000000)))
(assert (x846 x2300))
(assert (x809 x1293 x1221 x171 x1208))
(assert (x846 x914))
(assert (x809 x901 x2216 x171 x1208))
(assert (x1084 x1252 (- x1365 x2095)))
(assert (x809 x2216 x901 x1355 x60))
(assert (x2257 x536))
(assert (x1084 x171 (- x1208 x60)))
(assert (x846 x2046))
(assert (x809 x171 x1208 x1355 x60))
(assert (x2257 (- x1293 x654)))
(assert (x1084 x654 (- x1140 x2090)))
(assert (x1084 x1830 (- x595 x44)))
(assert (x1084 x595 (- x1830 x654)))
(assert (x2257 (- x861 x136)))
(assert (x2257 (- x1221 x1252)))
(assert (x846 x2198))
(assert (= x1640 (x73 (x349 x1640))))
(assert (x2257 (- x2236 x2216)))
(assert (x846 x1756))
(assert (x846 x559))
(assert (x1084 x482 (- x1162 x136)))
(assert (x809 x1140 x654 x2095 x2236))
(assert (x846 x897))
(assert (x846 x1667))
(assert (x928 x1208 x171 x2090 x861))
(assert (x152 x1671 x2272))
(assert (x928 x1252 x1365 x1140 x654))
(assert (x846 x376))
(assert (x1084 x482 (- x1162 x595)))
(assert (x846 x98))
(assert (x2257 (- x1365 x2236)))
(assert (x1794 x580))
(assert (x1902 x1067))
(assert (x1084 x1365 (- x1252 x2090)))
(assert (x846 x1745))
(assert (x1084 x60 (- x1355 x2090)))
(assert (x928 x1365 x1252 x2236 x2095))
(assert (x846 x1746))
(assert (x846 x1147))
(assert (x846 x729))
(assert (x928 x763 x300 x1830 x595))
(assert (= (=> (= (< 0 x1007) x2177) (and (=> (not x2177) x2133) (=> x2177 x1136))) x80))
(assert (x1084 x300 (- x763 x171)))
(assert (x2257 x1140))
(assert (x928 x595 x1830 x136 x44))
(assert (=> (>= 10000 x1885) (= (x349 x1885) (x1299 x1885))))
(assert (x2257 (- x861 x1221)))
(assert (x928 x60 x1355 x1221 x1293))
(assert (x809 x1221 x1293 x901 x2216))
(assert (x1084 x901 (- x2216 x2236)))
(assert (= x1641 (x73 (x349 x1641))))
(assert (x2257 (- x595 x2095)))
(assert (x1084 x1140 (- x654 x482)))
(assert (x1084 x482 (- x1162 x1140)))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x73 (x1299 115792089237316195423570985008687907853269984665640564039457))))
(assert (x846 x1451))
(assert (x1084 x763 (- x300 x1355)))
(assert (x846 x1534))
(assert (x928 x44 x136 x2236 x2095))
(assert (x846 x1913))
(assert (x928 x2236 x2095 x2090 x861))
(assert (x1794 x389))
(assert (= 2061678023 (x73 (x1299 2061678023))))
(assert (= 0 (x238 x2357)))
(assert (x928 x1221 x1293 x861 x2090))
(assert (x846 x351))
(assert (x809 x1293 x1221 x1252 x1365))
(assert (x1084 x654 (- x1140 x171)))
(assert (x2257 (- x2090 x300)))
(assert (x2257 (- x136 x861)))
(assert (x846 x1054))
(assert (x2257 (- x901 x1221)))
(assert (x928 x1293 x1221 x1252 x1365))
(assert (= (x73 (x349 x1288)) x1288))
(assert (x2257 (- x763 x60)))
(assert (x1794 x907))
(assert (x2257 (- x1830 x1221)))
(assert (x809 x300 x763 x171 x1208))
(assert (x2257 (- x2236 x1252)))
(assert (= (x99 (- x1507 164)) (x2048 (- x1507 164))))
(assert (x1084 x171 (- x1208 x763)))
(assert (= (x2302 (- x2219 x86)) (x1337 (- x2219 x86))))
(assert (x846 x839))
(assert (x846 x1569))
(assert (x1084 x595 (- x1830 x1293)))
(assert (x846 x2340))
(assert (x846 x2141))
(assert (x928 x171 x1208 x300 x763))
(assert (x846 x1791))
(assert (x928 x1162 x482 x1208 x171))
(assert (x846 x2120))
(assert (x2257 (- x136 x1162)))
(assert (= (x73 (x1299 826074471)) 826074471))
(assert (x846 x2084))
(assert (x928 x44 x136 x763 x300))
(assert (x1084 x1252 (- x1365 x1162)))
(assert (x809 x171 x1208 x1162 x482))
(assert (x928 x60 x1355 x2090 x861))
(assert (x2257 (- x2216 x1252)))
(assert (= x1981 (and (not x2268) x2182)))
(assert (x928 x654 x1140 x1252 x1365))
(assert (x846 x608))
(assert (x1794 x1307))
(assert (x846 x2056))
(assert (x809 x44 x136 x1162 x482))
(assert (x846 x2364))
(assert (x2257 (- x1293 x2095)))
(assert (x846 x1578))
(assert (x2257 (- x595 x763)))
(assert (x928 x1162 x482 x901 x2216))
(assert (= (=> (and (< x1987 911411945) (= x1883 x1601) (> 468353030 x1987) (not (= x1987 142201243)) (not (= 69947311 x1987)) (>= x323 0) (>= 1461501637330902918203684832716283019655932542975 x1548) (not (= x1987 87118632)) (>= x714 0) (= (x338 (x349 x883) x265 0) x2338) (= 0 x972) (not (< x2260 x1007)) (= x1146 x1013) (= x323 (x2342 x1418)) (< 0 x2082) (>= 1461501637330902918203684832716283019655932542975 x714) (<= x883 1461501637330902918203684832716283019655932542975) (= x265 (x338 (x349 x1007) (x1299 7) 0)) (<= 0 x1883) (= x173 x1404) (= (x338 (x349 x416) x2338 0) x1418) (<= x416 1461501637330902918203684832716283019655932542975) (= x1601 x2364) (>= x2260 0) (= x1927 x972) (< x1987 2293535753) (>= x1404 0) (= x2268 (> x323 0)) (<= x1883 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1404) (= 243137395 x1987) (not (> x1007 x2260)) (= (x235 (x349 274184521717934524641157099916833587206)) x2082) (<= x323 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2260) (>= x2260 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2260)) (and (=> (and (<= 0 x1992) (= x1194 0) (= x908 (x2265 1461501637330902918203684832716283019655932542975 x883)) (= (x338 (x349 x908) x1372 0) x1965) (= x1992 (x1930 x639)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1992) (= (x2265 1461501637330902918203684832716283019655932542975 x416) x2004) (= (x338 (x349 x1007) (x1299 9) 0) x1372) (= x171 x1992) (= (x338 (x349 x2004) x1965 0) x639) x2268) x230) (=> (not x2268) x80))) x254))
(assert (x2257 (- x1221 x901)))
(assert (x846 x2387))
(assert (x2257 (- x300 x1208)))
(assert (x846 x2117))
(assert (= x2303 (x73 (x349 x2303))))
(assert (x846 x205))
(assert (x1084 x861 (- x2090 x1830)))
(assert (x928 x861 x2090 x171 x1208))
(assert (x846 x1671))
(assert (= x125 (=> (= x2098 x1417) x1320)))
(assert (x846 x1863))
(assert (= 911411945 (x73 (x1299 911411945))))
(assert (x928 x171 x1208 x763 x300))
(assert (= (x1337 (- x2008 x86)) (x2302 (- x2008 x86))))
(assert (x1084 x2216 (- x901 x1365)))
(assert (x1794 x1079))
(assert (x928 x300 x763 x482 x1162))
(assert (= (x73 (x349 x1417)) x1417))
(assert (= 604800 (x73 (x1299 604800))))
(assert (x1084 x1208 (- x171 x1162)))
(assert (x846 x1264))
(assert (x2257 (- x171 x901)))
(assert (x1084 x763 (- x300 x654)))
(assert (x1084 x1221 (- x1293 x44)))
(assert (x2257 (- x1208 x1293)))
(assert (x928 x595 x1830 x44 x136))
(assert (= x623 (=> (and (= x994 (x338 (x349 x2303) x531 0)) (= x531 (x338 (x349 x1815) x882 0)) (>= x1869 0) (= x1869 (x1786 x994)) (= x2303 (x2265 1461501637330902918203684832716283019655932542975 x1961)) (= (= x1869 0) x2017) (<= x1869 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x338 (x349 x1455) (x1299 7) 0) x882) (= (x2265 1461501637330902918203684832716283019655932542975 x280) x1815)) (and (=> (and x2017 (not x888) (= (x1353 (- x1455 1)) x1017) (= x888 (< 0 x1017))) x1638) (=> (and (= x294 x1455) (not x2017)) x1628)))))
(assert (x846 x2189))
(assert (x846 x541))
(assert (x2257 (- x595 x1208)))
(assert (x1084 x901 (- x2216 x1140)))
(assert (x1084 x901 (- x2216 x2095)))
(assert (x846 x157))
(assert (x2257 (- x300 x1365)))
(assert (x846 x1279))
(assert (x846 x323))
(assert (x2257 (- x171 x595)))
(assert (x928 x861 x2090 x1365 x1252))
(assert (x846 x147))
(assert (x846 x82))
(assert (=> (>= 10000 x1681) (= (x1299 x1681) (x349 x1681))))
(assert (x2257 (- x654 x861)))
(assert (x846 x536))
(assert (x846 x2178))
(assert (x1084 x2090 (- x861 x1830)))
(assert (=> (>= 10000 x157) (= (x349 x157) (x1299 x157))))
(assert (= (x73 (x349 x594)) x594))
(assert (x928 x1221 x1293 x1252 x1365))
(assert (x2257 (- x1293 x2236)))
(assert (x809 x1208 x171 x763 x300))
(assert (x1084 x60 (- x1355 x1293)))
(assert (x2257 (- x60 x171)))
(assert (x928 x2216 x901 x1140 x654))
(assert (x846 x6))
(assert (x846 x419))
(assert (x846 x2104))
(assert (= (x73 (x349 x2025)) x2025))
(assert (x846 x1732))
(assert (x928 x2216 x901 x482 x1162))
(assert (x846 x779))
(assert (x1084 x861 (- x2090 x901)))
(assert (x846 x1140))
(assert (x928 x1293 x1221 x300 x763))
(assert (x1084 x2216 (- x901 x1208)))
(assert (=> (>= 10000 x784) (= (x349 x784) (x1299 x784))))
(assert (= x1831 (x73 (x349 x1831))))
(assert (= (x1888 (- 132 x1836)) (x2091 (- 132 x1836))))
(assert (x928 x2216 x901 x1830 x595))
(assert (= (or x2264 (and x2180 x1545)) x2016))
(assert (x1547 32 x1699))
(assert (x1084 x171 (- x1208 x901)))
(assert (x846 x10))
(assert (x846 x298))
(assert (x2257 (- x1252 x654)))
(assert (x2257 (- x1162 x2090)))
(assert (x846 x654))
(assert (=> (<= x416 10000) (= (x1299 x416) (x349 x416))))
(assert (x809 x763 x300 x1162 x482))
(assert (x928 x901 x2216 x763 x300))
(assert (x846 x72))
(assert (x2257 (- x2095 x1162)))
(assert (= 69947311 (x73 (x1299 69947311))))
(assert (x928 x1830 x595 x1140 x654))
(assert (x2257 (- x2216 x1830)))
(assert (x846 x1218))
(assert (x1084 x2090 (- x861 x1162)))
(assert (x1084 x2095 x2236))
(assert (x2257 (- x300 x1830)))
(assert (x928 x44 x136 x300 x763))
(assert (x846 x650))
(assert (x1084 x60 (- x1355 x595)))
(assert (x846 x1298))
(assert (x1084 x171 (- x1208 x1355)))
(assert (= x2152 (or (and (not x2064) x619) x1654)))
(assert (x928 x1252 x1365 x2090 x861))
(assert (= x1635 (=> (and (= (= x612 0) x2081) (not (> x1307 x2260)) (<= 0 x612) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2260) (<= x612 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x338 (x349 x497) x1242 0) x1350) (>= x2260 0) (= x612 (x1608 x1350)) (= x1242 (x338 (x349 x1307) (x1299 6) 0))) (and (=> (and (= x1024 (x338 (x349 x497) x678 0)) (= 0 x2215) (= x678 (x338 (x349 x1307) (x1299 10) 0)) (= (x2361 x1024) x1510) (>= x1510 0) (= x861 x1510) (<= x1510 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x2081)) x283) (=> x2081 x2308)))))
(assert (x1794 x1455))
(assert (x809 x1208 x171 x2095 x2236))
(assert (x846 x870))
(assert (= (x349 1986467848) (x1299 1986467848)))
(assert (x1084 x1252 (- x1365 x861)))
(assert (x928 x1355 x60 x763 x300))
(assert (x846 x1489))
(assert (=> (<= x325 10000) (= (x349 x325) (x1299 x325))))
(assert (x846 x472))
(assert (x1084 x1355 (- x60 x300)))
(assert (x2257 (- x901 x2236)))
(assert (x846 x1416))
(assert (x2257 (- x1252 x171)))
(assert (x809 x2216 x901 x2095 x2236))
(assert (x928 x2095 x2236 x1365 x1252))
(assert (x2257 (- x1208 x654)))
(assert (x2257 (- x1365 x136)))
(assert (x846 x1362))
(assert (x928 x1252 x1365 x171 x1208))
(assert (x1084 x654 (- x1140 x1162)))
(assert (x809 x44 x136 x901 x2216))
(assert (x928 x2090 x861 x60 x1355))
(assert (= (x99 (- x1854 164)) (x2048 (- x1854 164))))
(assert (=> (>= 10000 x280) (= (x349 x280) (x1299 x280))))
(assert (x846 x1385))
(assert (x2257 (- x1365 x861)))
(assert (x1084 x595 (- x1830 x1208)))
(assert (x928 x2216 x901 x763 x300))
(assert (= 0 (x1305 x636)))
(assert (x2257 (- x482 x300)))
(assert (x1084 x2095 (- x2236 x1208)))
(assert (= x746 (=> (and (= (> x1765 0) x1282) (= x1765 (x1353 (- x1007 1)))) (and (=> (not x1282) x2133) (=> x1282 x229)))))
(assert (x928 x763 x300 x171 x1208))
(assert (x846 x118))
(assert (= x1482 (=> (= (> x745 0) x1043) (and (=> (not x1043) x1584) (=> x1043 x436)))))
(assert (x846 x2307))
(assert (x846 x2252))
(assert (x303 x231 1000000000000000000))
(assert (x809 x861 x2090 x595 x1830))
(assert (x2257 (- x1162 x300)))
(assert (x2257 (- x60 x482)))
(assert (x1547 32 x1472))
(assert (x846 x1131))
(assert (= (+ (x73 x1587) 1) (x73 (x2112 x1587 1))))
(assert (x928 x1221 x1293 x2095 x2236))
(assert (x846 x1053))
(assert (x846 x1379))
(assert (x928 x2216 x901 x1293 x1221))
(assert (x846 x1420))
(assert (x1084 x44 (- x136 x2095)))
(assert (= (x349 635128645) (x1299 635128645)))
(assert (x846 x1283))
(assert (x846 x300))
(assert (x2257 (- x44 x2216)))
(assert (x2257 x901))
(assert (x928 x60 x1355 x901 x2216))
(assert (x1547 1000000000000000000 x460))
(assert (= (x1299 115792089237316195423570985008687907853269984665640564039457) (x349 115792089237316195423570985008687907853269984665640564039457)))
(assert (x2257 (- x60 x44)))
(assert (x1361 x280 x1516))
(assert (x846 x1673))
(assert (x846 x337))
(assert (x809 x901 x2216 x2090 x861))
(assert (x809 x482 x1162 x1140 x654))
(assert (x1084 x1252 (- x1365 x300)))
(assert (x1084 x1365 (- x1252 x654)))
(assert (= (x73 (x349 x377)) x377))
(assert (x2257 (- x2216 x2090)))
(assert (= (x657 (- x1854 x2067)) (x494 (- x1854 x2067))))
(assert (x2257 x2090))
(assert (x1084 x1830 (- x595 x2216)))
(assert (x846 x1382))
(assert (x2257 (- x654 x1221)))
(assert (= (=> (= (= 274184521717934524641157099916833587214 x285) x1541) (and (=> (not x1541) x2196) (=> (and (not (= x1012 826074471)) (= x984 (x1353 (- x2106 x337))) (= x1269 x35) (not (= x1012 649617121)) (= x1269 (x708 x523)) (not x1585) (< 0 x2283) (not (= x1012 2514000705)) (= (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0) x1437) (= 2835717307 x1012) (>= x2106 0) (= x1585 (> x2284 x2106)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1269 x2284)) (= x2040 274184521717934524641157099916833587206) (<= x1269 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x824) (= 32 x1882) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x441) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2106) (= x1092 x1639) (= x2283 (x235 (x349 274184521717934524641157099916833587214))) (= x1609 x337) (not (> 4 x1092)) (= x1231 x2025) (= x1092 68) (= x573 x2284) (= (x338 (x349 x2025) (x1299 1) 0) x597) (= x2284 x337) (= 274184521717934524641157099916833587206 x92) (= x1009 (or (> x1840 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1840) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1840))))) (not x1009) (= x1958 x458) (= (x338 (x349 x2025) (x1299 1) 0) x523) (= (x456 x1437) x2106) (= x1840 (x1353 (- x1092 4))) (= x552 (>= (+ x1269 x2284) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= 0 x1269) (>= 1461501637330902918203684832716283019655932542975 x1231) (not x552) (= (+ x35 x573) x240) (not (= 1889567281 x1012)) (not (> 649617121 x1012)) (= x2230 (x338 (x349 274184521717934524641157099916833587206) (x1299 1) 0)) (= (> x337 x2106) x347) x1541 (not x347)) x25))) x117))
(assert (x1084 x2090 (- x861 x2236)))
(assert (x2257 (- x2236 x861)))
(assert (x809 x2090 x861 x2095 x2236))
(assert (x2257 (- x595 x300)))
(assert (x846 x694))
(assert (x1084 x654 (- x1140 x2236)))
(assert (= x947 x1668))
(assert (x2257 (- x482 x861)))
(assert (x846 x1358))
(assert (x846 x126))
(assert (x928 x595 x1830 x1208 x171))
(assert (x846 x985))
(assert (x1084 x901 (- x2216 x482)))
(assert (x846 x2085))
(assert (x2257 (- x1293 x136)))
(assert (x846 x1400))
(assert (x846 x1388))
(assert (x2257 (- x2095 x2090)))
(assert (x1084 x1293 (- x1221 x1830)))
(assert (x846 x825))
(assert (= (or x670 (and x1556 x942)) x1463))
(assert (=> (>= 10000 x1120) (= (x1299 x1120) (x349 x1120))))
(assert (x846 x736))
(assert (x846 x87))
(assert (x2257 (- x136 x595)))
(assert (x2257 (- x1355 x300)))
(assert (x846 x617))
(assert (x928 x1355 x60 x1208 x171))
(assert (x846 x279))
(assert (x1084 x654 (- x1140 x1293)))
(assert (=> (<= x1383 10000) (= (x1299 x1383) (x349 x1383))))
(assert (x928 x654 x1140 x2090 x861))
(assert (x846 x590))
(assert (x1084 x2236 (- x2095 x654)))
(assert (x846 x1310))
(assert (x928 x595 x1830 x300 x763))
(assert (x846 x2025))
(assert (x2257 (- x1252 x1355)))
(assert (x809 x1252 x1365 x1162 x482))
(assert (x1794 x933))
(assert (= 2211524764 (x73 (x1299 2211524764))))
(assert (x928 x1830 x595 x1252 x1365))
(assert (x928 x1140 x654 x1252 x1365))
(assert (x1084 x136 (- x44 x1365)))
(assert (x809 x136 x44 x763 x300))
(assert (x928 x1208 x171 x2095 x2236))
(assert (x1547 1000000000000000000 x2012))
(assert (x1084 x901 (- x2216 x60)))
(assert (= (x954 x1005) (ite (and (not x1921) (not x1342) x263) (x1175 x1005) (x1994 x1005))))
(assert (x2257 (- x1208 x763)))
(assert (x928 x2090 x861 x2216 x901))
(assert (= (x73 (x349 x280)) x280))
(assert (x2257 (- x2095 x763)))
(assert (x1084 x2095 (- x2236 x901)))
(assert (x1084 x482 (- x1162 x171)))
(assert (= (x657 (- x648 x2067)) (x494 (- x648 x2067))))
(assert (x846 x2195))
(assert (x2257 (- x1252 x763)))
(assert (= (ite (and x2152 (not x149)) (x768 x2392) (x791 x2392)) (x1700 x2392)))
(assert (x846 x2052))
(assert (x928 x1162 x482 x1355 x60))
(assert (x809 x1355 x60 x2095 x2236))
(assert (x1084 x1221 (- x1293 x482)))
(assert (x809 x60 x1355 x595 x1830))
(assert (x1084 x763 (- x300 x1221)))
(assert (= (and x725 x1924) x75))
(assert (x2257 (- x482 x595)))
(assert (x928 x60 x1355 x1162 x482))
(assert (x809 x2236 x2095 x1252 x1365))
(assert (x846 x878))
(assert (x809 x1365 x1252 x171 x1208))
(assert (=> (>= 10000 x1211) (= (x349 x1211) (x1299 x1211))))
(assert (x846 x648))
(assert (x1084 x2095 (- x2236 x861)))
(assert (= (x99 (- x378 164)) (x2048 (- x378 164))))
(assert (= (x349 1461501637330902918203684832716283019655932542976) (x1299 1461501637330902918203684832716283019655932542976)))
(assert (x2257 (- x1365 x171)))
(assert (x1084 x763 (- x300 x2236)))
(assert (x928 x171 x1208 x482 x1162))
(assert (x809 x171 x1208 x136 x44))
(assert (= (x1742 x1314) (ite x670 (ite (and x1643 x542) (x456 x1314) (x1970 x1314)) (x456 x1314))))
(assert (x1084 x482 (- x1162 x901)))
(assert (x928 x2090 x861 x2095 x2236))
(assert (x2257 (- x482 x1355)))
(assert (x2257 (- x1293 x1140)))
(check-sat)
