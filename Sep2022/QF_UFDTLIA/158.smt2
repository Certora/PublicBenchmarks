(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTLIA)
(declare-datatypes ((x565 0)) (((x297 (x752 Int)) (x60 (x1453 x565) (x1348 x565) (x1389 Int)) (x214 (x597 x565) (x724 Int)))))
(declare-fun x70 () Bool)
(declare-fun x975 () Bool)
(declare-fun x537 () Bool)
(declare-fun x614 () Int)
(declare-fun x1336 () Bool)
(declare-fun x1234 () Int)
(declare-fun x49 () Int)
(declare-fun x906 () Bool)
(declare-fun x956 () x565)
(declare-fun x196 () Int)
(declare-fun x946 () Bool)
(declare-fun x988 () Int)
(declare-fun x1295 (x565) Int)
(declare-fun x1277 () Int)
(declare-fun x1221 () x565)
(declare-fun x355 () Bool)
(declare-fun x645 () x565)
(declare-fun x329 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x157 () x565)
(declare-fun x1204 () Bool)
(declare-fun x875 (Int) Int)
(declare-fun x478 () Int)
(declare-fun x61 () Int)
(declare-fun x423 () x565)
(declare-fun x446 () Int)
(declare-fun x264 (Int) Int)
(declare-fun x500 () Int)
(declare-fun x100 () Int)
(declare-fun x1001 () Int)
(declare-fun x1438 () Bool)
(declare-fun x229 () x565)
(declare-fun x1101 () Int)
(declare-fun x1187 (Int Int) Int)
(declare-fun x544 () Int)
(declare-fun x717 () Int)
(declare-fun x378 () Bool)
(declare-fun x239 () Bool)
(declare-fun x475 () Int)
(declare-fun x1452 () Int)
(declare-fun x1087 () Bool)
(declare-fun x1106 () x565)
(declare-fun x1420 () Int)
(declare-fun x1010 () Int)
(declare-fun x594 () Bool)
(declare-fun x688 () Int)
(declare-fun x1519 () Bool)
(declare-fun x228 () Int)
(declare-fun x255 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x83 () Int)
(declare-fun x1159 () Int)
(declare-fun x539 () Bool)
(declare-fun x876 () Int)
(declare-fun x1441 () Int)
(declare-fun x947 () x565)
(declare-fun x342 () Bool)
(declare-fun x1377 () Int)
(declare-fun x493 () Bool)
(declare-fun x154 () x565)
(declare-fun x415 () Bool)
(declare-fun x1479 () Int)
(declare-fun x400 () Bool)
(declare-fun x200 () Bool)
(declare-fun x880 () Int)
(declare-fun x976 () Int)
(declare-fun x443 () Int)
(declare-fun x109 () Int)
(declare-fun x1043 () Bool)
(declare-fun x1465 () Bool)
(declare-fun x404 () x565)
(declare-fun x655 () x565)
(declare-fun x808 () Int)
(declare-fun x895 () x565)
(declare-fun x654 () Int)
(declare-fun x1069 () Bool)
(declare-fun x1421 () Int)
(declare-fun x586 () Int)
(declare-fun x1095 () Int)
(declare-fun x1080 () Bool)
(declare-fun x732 () x565)
(declare-fun x312 () Bool)
(declare-fun x347 () Bool)
(declare-fun x62 () Bool)
(declare-fun x506 () Bool)
(declare-fun x585 () Int)
(declare-fun x76 () Int)
(declare-fun x1267 () x565)
(declare-fun x425 () x565)
(declare-fun x831 () Int)
(declare-fun x1547 () Int)
(declare-fun x57 () Int)
(declare-fun x977 () Int)
(declare-fun x1331 () x565)
(declare-fun x121 () Bool)
(declare-fun x707 () Bool)
(declare-fun x968 () Int)
(declare-fun x30 () Bool)
(declare-fun x300 (Int) x565)
(declare-fun x365 () x565)
(declare-fun x669 () Int)
(declare-fun x434 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x1162 () Int)
(declare-fun x1530 () Int)
(declare-fun x563 () Bool)
(declare-fun x862 (Int) Int)
(declare-fun x1422 (x565) Int)
(declare-fun x793 () Int)
(declare-fun x841 () x565)
(declare-fun x1481 () Bool)
(declare-fun x53 () Bool)
(declare-fun x749 () Int)
(declare-fun x535 () Int)
(declare-fun x1471 () Bool)
(declare-fun x1477 () Int)
(declare-fun x806 () Int)
(declare-fun x693 () Int)
(declare-fun x942 () x565)
(declare-fun x1178 () Int)
(declare-fun x89 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x485 () Int)
(declare-fun x388 () Int)
(declare-fun x902 () Bool)
(declare-fun x1497 () Bool)
(declare-fun x1326 () Int)
(declare-fun x1135 () Bool)
(declare-fun x695 () Int)
(declare-fun x38 () Int)
(declare-fun x996 () Int)
(declare-fun x1098 () Int)
(declare-fun x172 () Bool)
(declare-fun x358 () Bool)
(declare-fun x1197 () Int)
(declare-fun x1542 () x565)
(declare-fun x584 () x565)
(declare-fun x770 () Bool)
(declare-fun x1522 () Bool)
(declare-fun x1231 () x565)
(declare-fun x456 () Int)
(declare-fun x167 () Bool)
(declare-fun x209 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x331 () Bool)
(declare-fun x63 () Bool)
(declare-fun x1248 () Int)
(declare-fun x771 () Int)
(declare-fun x193 (Int) Int)
(declare-fun x589 () x565)
(declare-fun x937 () Bool)
(declare-fun x848 () x565)
(declare-fun x865 () Bool)
(declare-fun x1300 () x565)
(declare-fun x628 () Int)
(declare-fun x371 () Bool)
(declare-fun x215 () Bool)
(declare-fun x995 () Bool)
(declare-fun x726 () Bool)
(declare-fun x750 () x565)
(declare-fun x74 () Bool)
(declare-fun x821 () Bool)
(declare-fun x883 () Int)
(declare-fun x637 () Bool)
(declare-fun x794 () Bool)
(declare-fun x1198 () Int)
(declare-fun x223 () Bool)
(declare-fun x492 () Int)
(declare-fun x1544 () Bool)
(declare-fun x1554 () Bool)
(declare-fun x1320 () Int)
(declare-fun x605 () Int)
(declare-fun x850 () Int)
(declare-fun x1577 (Int) Int)
(declare-fun x144 () x565)
(declare-fun x104 () Bool)
(declare-fun x567 () Bool)
(declare-fun x169 () x565)
(declare-fun x1314 () Int)
(declare-fun x1293 () Int)
(declare-fun x1324 () x565)
(declare-fun x301 () x565)
(declare-fun x747 () Bool)
(declare-fun x1531 () Int)
(declare-fun x1429 () Int)
(declare-fun x1287 () Int)
(declare-fun x197 () Bool)
(declare-fun x177 () Int)
(declare-fun x170 () Bool)
(declare-fun x498 () Int)
(declare-fun x50 () Int)
(declare-fun x1119 () Bool)
(declare-fun x904 () Bool)
(declare-fun x1177 () Int)
(declare-fun x523 () Int)
(declare-fun x742 () x565)
(declare-fun x549 () Bool)
(declare-fun x1350 () Int)
(declare-fun x536 () Int)
(declare-fun x1510 () Int)
(declare-fun x43 () Int)
(declare-fun x1036 () Bool)
(declare-fun x1334 () x565)
(declare-fun x1262 (Int) Int)
(declare-fun x853 () Int)
(declare-fun x145 () Int)
(declare-fun x10 () Int)
(declare-fun x261 () Int)
(declare-fun x564 () Bool)
(declare-fun x612 () Int)
(declare-fun x1112 () Int)
(declare-fun x1414 () Int)
(declare-fun x1304 () Int)
(declare-fun x180 () x565)
(declare-fun x507 () Int)
(declare-fun x1327 () Int)
(declare-fun x1033 () Bool)
(declare-fun x173 () Int)
(declare-fun x1398 () Int)
(declare-fun x1313 () Int)
(declare-fun x238 () Int)
(declare-fun x631 () Int)
(declare-fun x847 () Int)
(declare-fun x1499 () Int)
(declare-fun x882 () Int)
(declare-fun x54 () x565)
(declare-fun x503 () Int)
(declare-fun x1473 () Bool)
(declare-fun x576 () Int)
(declare-fun x557 () x565)
(declare-fun x889 () Int)
(declare-fun x652 () x565)
(declare-fun x192 () Int)
(declare-fun x957 (x565) Int)
(declare-fun x189 () Bool)
(declare-fun x199 () Int)
(declare-fun x420 () Int)
(declare-fun x1199 (Int) Int)
(declare-fun x285 (Int) Int)
(declare-fun x1107 () Int)
(declare-fun x571 () Int)
(declare-fun x1416 () Int)
(declare-fun x1154 () Int)
(declare-fun x1005 () Bool)
(declare-fun x133 () x565)
(declare-fun x445 () Int)
(declare-fun x1588 () Int)
(declare-fun x1274 () x565)
(declare-fun x56 () Int)
(declare-fun x1456 () x565)
(declare-fun x328 (Int) Int)
(declare-fun x1495 () Bool)
(declare-fun x1361 () x565)
(declare-fun x982 () Int)
(declare-fun x635 () Int)
(declare-fun x558 () Int)
(declare-fun x735 () x565)
(declare-fun x1333 () Bool)
(declare-fun x706 () x565)
(declare-fun x1550 () Int)
(declare-fun x911 () Int)
(declare-fun x1084 () x565)
(declare-fun x394 () Int)
(declare-fun x1152 () Bool)
(declare-fun x663 () x565)
(declare-fun x740 () Int)
(declare-fun x760 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x1551 () Int)
(declare-fun x11 () Int)
(declare-fun x20 () Int)
(declare-fun x364 () Bool)
(declare-fun x1541 () Int)
(declare-fun x596 () Int)
(declare-fun x313 () Int)
(declare-fun x607 () Bool)
(declare-fun x113 () Int)
(declare-fun x1417 () Int)
(declare-fun x1379 () Int)
(declare-fun x778 () Int)
(declare-fun x611 () x565)
(declare-fun x725 () Int)
(declare-fun x1250 () Bool)
(declare-fun x990 () Int)
(declare-fun x1498 () Int)
(declare-fun x919 () Int)
(declare-fun x334 () Int)
(declare-fun x55 () Bool)
(declare-fun x1307 () Int)
(declare-fun x230 () Int)
(declare-fun x479 () Bool)
(declare-fun x983 () x565)
(declare-fun x1055 () Bool)
(declare-fun x123 () Bool)
(declare-fun x741 () Bool)
(declare-fun x253 () Int)
(declare-fun x1424 () Bool)
(declare-fun x183 () Int)
(declare-fun x1528 () Int)
(declare-fun x1583 () Int)
(declare-fun x681 () Bool)
(declare-fun x1291 () Int)
(declare-fun x901 () Int)
(declare-fun x1591 () Bool)
(declare-fun x72 () Int)
(declare-fun x1103 () Int)
(declare-fun x1345 () Bool)
(declare-fun x634 () Bool)
(declare-fun x1053 () x565)
(declare-fun x542 (x565) Int)
(declare-fun x887 () Int)
(declare-fun x1072 () Bool)
(declare-fun x1496 () x565)
(declare-fun x1163 () x565)
(declare-fun x1281 () Bool)
(declare-fun x67 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x1593 () Int)
(declare-fun x103 () x565)
(declare-fun x772 () x565)
(declare-fun x174 () x565)
(declare-fun x546 () Bool)
(declare-fun x280 () Int)
(declare-fun x1149 () Int)
(declare-fun x1252 () x565)
(declare-fun x799 () Bool)
(declare-fun x839 () Bool)
(declare-fun x1126 () Int)
(declare-fun x112 () Bool)
(declare-fun x1329 () Int)
(declare-fun x1030 () Bool)
(declare-fun x158 () Bool)
(declare-fun x1180 () Int)
(declare-fun x940 () Int)
(declare-fun x1565 () Int)
(declare-fun x147 (Int Int) Int)
(declare-fun x390 () Int)
(declare-fun x582 () Bool)
(declare-fun x692 () Bool)
(declare-fun x474 () Int)
(declare-fun x135 () Bool)
(declare-fun x482 () Bool)
(declare-fun x642 () x565)
(declare-fun x386 () Int)
(declare-fun x981 () x565)
(declare-fun x529 () Bool)
(declare-fun x604 () Bool)
(declare-fun x1448 () x565)
(declare-fun x408 () Int)
(declare-fun x1048 () Int)
(declare-fun x1137 () Int)
(declare-fun x917 () Int)
(declare-fun x1436 () x565)
(declare-fun x978 () Bool)
(declare-fun x406 () Int)
(declare-fun x1599 () Int)
(declare-fun x1435 () Bool)
(declare-fun x530 () x565)
(declare-fun x1218 () Bool)
(declare-fun x992 () Int)
(declare-fun x1305 () Bool)
(declare-fun x892 () Bool)
(declare-fun x1446 () Int)
(declare-fun x351 () x565)
(declare-fun x773 () x565)
(declare-fun x974 () Bool)
(declare-fun x208 () Int)
(declare-fun x525 () Int)
(declare-fun x1443 () Int)
(declare-fun x560 () Int)
(declare-fun x1376 () x565)
(declare-fun x1169 () x565)
(declare-fun x333 () Int)
(declare-fun x1403 () Int)
(declare-fun x1068 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x65 () Bool)
(declare-fun x483 () Int)
(declare-fun x422 () Int)
(declare-fun x29 () Bool)
(declare-fun x758 () Bool)
(declare-fun x1512 () Int)
(declare-fun x195 () Bool)
(declare-fun x1263 () Int)
(declare-fun x1428 () Bool)
(declare-fun x1207 () Int)
(declare-fun x416 () Bool)
(declare-fun x305 () Int)
(declare-fun x684 () x565)
(declare-fun x1459 () Int)
(declare-fun x533 () Int)
(declare-fun x1406 () Bool)
(declare-fun x864 () Int)
(declare-fun x1332 () Bool)
(declare-fun x1611 () Int)
(declare-fun x470 () Bool)
(declare-fun x1039 () x565)
(declare-fun x690 () Bool)
(declare-fun x907 () Int)
(declare-fun x389 () Int)
(declare-fun x1261 () Int)
(declare-fun x156 () x565)
(declare-fun x1283 () Bool)
(declare-fun x1299 () x565)
(declare-fun x1488 () Int)
(declare-fun x1138 () Int)
(declare-fun x846 () Int)
(declare-fun x1484 () Int)
(declare-fun x884 () Int)
(declare-fun x354 () Int)
(declare-fun x1013 () Int)
(declare-fun x1014 () Int)
(declare-fun x1035 () Bool)
(declare-fun x294 () Int)
(declare-fun x419 () x565)
(declare-fun x1370 () Bool)
(declare-fun x247 () Bool)
(declare-fun x1173 () Int)
(declare-fun x77 () Bool)
(declare-fun x1430 () Int)
(declare-fun x694 () Int)
(declare-fun x1273 () Int)
(declare-fun x950 () x565)
(declare-fun x51 () Bool)
(declare-fun x786 () Int)
(declare-fun x436 () Int)
(declare-fun x430 () Int)
(declare-fun x1012 () Int)
(declare-fun x429 () Int)
(declare-fun x73 () Bool)
(declare-fun x1584 () Bool)
(declare-fun x376 () x565)
(declare-fun x460 () Int)
(declare-fun x860 () Bool)
(declare-fun x1442 () Int)
(declare-fun x480 () Int)
(declare-fun x362 () Int)
(declare-fun x465 () Int)
(declare-fun x120 () Int)
(declare-fun x929 () Bool)
(declare-fun x78 () Bool)
(declare-fun x126 () Bool)
(declare-fun x897 () Int)
(declare-fun x266 () x565)
(declare-fun x427 () Int)
(declare-fun x657 () Bool)
(declare-fun x284 () x565)
(declare-fun x146 () x565)
(declare-fun x271 () x565)
(declare-fun x1090 () Int)
(declare-fun x1064 () Bool)
(declare-fun x754 () Int)
(declare-fun x509 () Bool)
(declare-fun x1602 () x565)
(declare-fun x125 () x565)
(declare-fun x783 () Bool)
(declare-fun x1141 () Int)
(declare-fun x858 (Int) Int)
(declare-fun x438 () Int)
(declare-fun x401 () Int)
(declare-fun x1423 () Int)
(declare-fun x27 () Bool)
(declare-fun x1474 () x565)
(declare-fun x166 () Bool)
(declare-fun x513 () Int)
(declare-fun x1351 () Int)
(declare-fun x510 () x565)
(declare-fun x1558 () Int)
(declare-fun x803 () Bool)
(declare-fun x1241 () Int)
(declare-fun x1071 () Int)
(declare-fun x1224 () Int)
(declare-fun x1096 () Int)
(declare-fun x1524 () Bool)
(declare-fun x1412 (Int) Int)
(declare-fun x928 () x565)
(declare-fun x36 () Int)
(declare-fun x380 () Int)
(declare-fun x1415 () x565)
(declare-fun x812 () Bool)
(declare-fun x912 () Int)
(declare-fun x1258 () Bool)
(declare-fun x698 () Int)
(declare-fun x245 () x565)
(declare-fun x5 () x565)
(declare-fun x163 (x565) Int)
(declare-fun x219 () Int)
(declare-fun x660 () x565)
(declare-fun x296 () Int)
(declare-fun x1189 () Int)
(declare-fun x1316 () Int)
(declare-fun x810 () Int)
(declare-fun x1539 () x565)
(declare-fun x1208 (Int) Int)
(declare-fun x108 () x565)
(declare-fun x1310 () Int)
(declare-fun x1236 () Bool)
(declare-fun x227 () x565)
(declare-fun x1600 () Bool)
(declare-fun x1147 () Int)
(declare-fun x1454 () Bool)
(declare-fun x715 () x565)
(declare-fun x540 (Int Int) Int)
(declare-fun x476 () Int)
(declare-fun x1130 () Int)
(declare-fun x269 () x565)
(declare-fun x1437 () Bool)
(declare-fun x624 () x565)
(declare-fun x1595 (x565) Int)
(declare-fun x782 () Bool)
(declare-fun x805 () Int)
(declare-fun x403 () Bool)
(declare-fun x870 () Int)
(declare-fun x800 () Int)
(declare-fun x1349 (Int) Int)
(declare-fun x1296 () x565)
(declare-fun x755 () x565)
(declare-fun x1078 () Int)
(declare-fun x1092 () Bool)
(declare-fun x545 () Int)
(declare-fun x899 (x565) Int)
(declare-fun x85 () x565)
(declare-fun x601 () Bool)
(declare-fun x1596 () x565)
(declare-fun x1118 () Int)
(declare-fun x1460 () Int)
(declare-fun x1145 () Int)
(declare-fun x842 () Int)
(declare-fun x1518 () Int)
(declare-fun x1179 () Int)
(declare-fun x1133 () Bool)
(declare-fun x1380 () Int)
(declare-fun x930 () Bool)
(declare-fun x213 () Int)
(declare-fun x496 () Int)
(declare-fun x881 () Int)
(declare-fun x288 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x190 () Int)
(declare-fun x650 () Bool)
(declare-fun x951 () Int)
(declare-fun x1476 () Int)
(declare-fun x705 () x565)
(declare-fun x98 () Int)
(declare-fun x651 () Int)
(declare-fun x1390 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x368 () Int)
(declare-fun x23 () Int)
(declare-fun x817 () x565)
(declare-fun x1093 () Bool)
(declare-fun x1371 () Int)
(declare-fun x619 () Int)
(declare-fun x1249 () Int)
(declare-fun x45 () Int)
(declare-fun x1284 () Bool)
(declare-fun x1343 () Int)
(declare-fun x1050 () Int)
(declare-fun x402 () Bool)
(declare-fun x467 () Int)
(declare-fun x998 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x939 () Bool)
(declare-fun x153 () Int)
(declare-fun x1573 () Int)
(declare-fun x291 () Int)
(declare-fun x95 () Bool)
(declare-fun x14 () Bool)
(declare-fun x792 () Bool)
(declare-fun x44 () Bool)
(declare-fun x444 () Bool)
(declare-fun x1511 () Int)
(declare-fun x668 () Int)
(declare-fun x497 () Bool)
(declare-fun x262 () Bool)
(declare-fun x1194 () Int)
(declare-fun x945 (x565) Int)
(declare-fun x1085 () Int)
(declare-fun x1576 () x565)
(declare-fun x588 () Bool)
(declare-fun x1260 () Int)
(declare-fun x743 () Int)
(declare-fun x1535 () x565)
(declare-fun x653 () Int)
(declare-fun x52 () Bool)
(declare-fun x603 () Int)
(declare-fun x970 () Int)
(declare-fun x1597 () Bool)
(declare-fun x165 () Int)
(declare-fun x339 () Int)
(declare-fun x1523 () x565)
(declare-fun x1516 () Bool)
(declare-fun x1124 (Int) Int)
(declare-fun x1492 () Bool)
(declare-fun x102 () Int)
(declare-fun x310 () Int)
(declare-fun x675 () Bool)
(declare-fun x532 () Int)
(declare-fun x1214 () Int)
(declare-fun x1037 () Bool)
(declare-fun x129 () Int)
(declare-fun x788 () x565)
(declare-fun x33 () Bool)
(declare-fun x949 () Bool)
(declare-fun x1086 () Int)
(declare-fun x332 () Bool)
(declare-fun x440 () x565)
(declare-fun x1225 () Bool)
(declare-fun x1166 () Int)
(declare-fun x1560 () Bool)
(declare-fun x346 () x565)
(declare-fun x455 () Bool)
(declare-fun x396 (Int) Int)
(declare-fun x789 () Int)
(declare-fun x41 () Bool)
(declare-fun x137 () Int)
(declare-fun x1040 () Bool)
(declare-fun x1427 () Int)
(declare-fun x961 () Int)
(declare-fun x522 () Int)
(declare-fun x763 () Bool)
(declare-fun x1330 () Int)
(declare-fun x106 () Int)
(declare-fun x1485 () Bool)
(declare-fun x1139 () Int)
(declare-fun x1240 () Bool)
(declare-fun x570 () Bool)
(declare-fun x718 () x565)
(declare-fun x666 (Int) Int)
(declare-fun x633 () Bool)
(declare-fun x600 () x565)
(declare-fun x1000 (Int Int) Int)
(declare-fun x1245 () Bool)
(declare-fun x24 () Int)
(declare-fun x1526 () x565)
(declare-fun x1362 () Int)
(declare-fun x412 () Bool)
(declare-fun x258 () Int)
(declare-fun x616 () Int)
(declare-fun x1175 () Int)
(declare-fun x1056 () Bool)
(declare-fun x781 () Bool)
(declare-fun x433 () Int)
(declare-fun x1099 () Bool)
(declare-fun x872 () Int)
(declare-fun x664 () Int)
(declare-fun x1470 () Bool)
(declare-fun x471 () Bool)
(declare-fun x148 () Int)
(declare-fun x1066 () Int)
(declare-fun x1150 () Bool)
(declare-fun x702 () Int)
(declare-fun x1568 () Bool)
(declare-fun x1553 () Int)
(declare-fun x868 () Int)
(declare-fun x617 () Int)
(declare-fun x81 () Int)
(declare-fun x871 () Int)
(declare-fun x1367 () Bool)
(declare-fun x1125 () Int)
(declare-fun x922 () Int)
(declare-fun x128 () Int)
(declare-fun x181 () Int)
(declare-fun x598 () Int)
(declare-fun x796 () Bool)
(declare-fun x849 () Bool)
(declare-fun x1201 () Int)
(declare-fun x765 () Int)
(declare-fun x304 () Int)
(declare-fun x1227 () Bool)
(declare-fun x1134 () x565)
(declare-fun x1006 () x565)
(declare-fun x1407 () Int)
(declare-fun x142 () Int)
(declare-fun x820 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x356 () Int)
(declare-fun x369 () Bool)
(declare-fun x1571 () x565)
(declare-fun x307 () Bool)
(declare-fun x392 () x565)
(declare-fun x1219 () Bool)
(declare-fun x682 () Int)
(declare-fun x21 () Int)
(declare-fun x1500 () Int)
(declare-fun x1457 () x565)
(declare-fun x936 () Int)
(declare-fun x840 () Bool)
(declare-fun x1058 () Int)
(declare-fun x836 () x565)
(declare-fun x1188 () x565)
(declare-fun x306 () Bool)
(declare-fun x3 () x565)
(declare-fun x1148 () Int)
(declare-fun x1386 () Bool)
(declare-fun x432 () Bool)
(declare-fun x685 () Int)
(declare-fun x809 () Bool)
(declare-fun x186 () Int)
(declare-fun x161 () Bool)
(declare-fun x1003 (x565) Int)
(declare-fun x221 () Int)
(declare-fun x1228 () Int)
(declare-fun x562 () Bool)
(declare-fun x1458 () Int)
(declare-fun x689 () Bool)
(declare-fun x292 () Int)
(declare-fun x1462 () Int)
(declare-fun x1191 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x543 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x1352 (Int) Int)
(declare-fun x686 (x565) Int)
(declare-fun x625 () Int)
(declare-fun x417 (x565) Int)
(declare-fun x1440 () x565)
(declare-fun x1088 () Int)
(declare-fun x547 () x565)
(declare-fun x343 () Bool)
(declare-fun x538 () Int)
(declare-fun x1115 () Int)
(declare-fun x1559 () Int)
(declare-fun x117 () Int)
(declare-fun x879 () Int)
(declare-fun x115 () Bool)
(declare-fun x464 () x565)
(declare-fun x759 () Int)
(declare-fun x226 () x565)
(declare-fun x608 () Int)
(declare-fun x391 () Int)
(declare-fun x779 () Int)
(declare-fun x7 () Bool)
(declare-fun x531 () Bool)
(declare-fun x941 () Int)
(declare-fun x1567 () Int)
(declare-fun x179 () Int)
(declare-fun x211 () x565)
(declare-fun x1339 () Int)
(declare-fun x521 () Bool)
(declare-fun x324 () Bool)
(declare-fun x414 (x565) Int)
(declare-fun x1181 () x565)
(declare-fun x119 () Int)
(declare-fun x1549 () Int)
(declare-fun x477 () Int)
(declare-fun x435 () x565)
(declare-fun x162 () Int)
(declare-fun x409 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x34 () Int)
(declare-fun x1215 () Bool)
(declare-fun x1382 () Int)
(declare-fun x959 () Bool)
(declare-fun x908 () Bool)
(declare-fun x1562 () Int)
(declare-fun x110 () Int)
(declare-fun x381 () Int)
(declare-fun x1129 () x565)
(declare-fun x667 () Bool)
(declare-fun x830 () Bool)
(declare-fun x155 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x337 () Int)
(declare-fun x234 () Int)
(declare-fun x462 () Int)
(declare-fun x517 (Int) Int)
(declare-fun x236 () Int)
(declare-fun x1328 () Int)
(declare-fun x736 () Int)
(declare-fun x131 () Int)
(declare-fun x1121 () Bool)
(declare-fun x888 () Int)
(declare-fun x958 () Int)
(declare-fun x42 () x565)
(declare-fun x1601 () Bool)
(declare-fun x775 () Bool)
(declare-fun x920 () Bool)
(declare-fun x1368 () Int)
(declare-fun x856 () Int)
(declare-fun x1308 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x1222 () x565)
(declare-fun x843 () Bool)
(declare-fun x1397 () Int)
(declare-fun x1015 () Bool)
(declare-fun x295 () Bool)
(declare-fun x134 () Bool)
(declare-fun x737 () Int)
(declare-fun x777 () Int)
(declare-fun x1364 () x565)
(declare-fun x613 () x565)
(declare-fun x739 (Int Int) Int)
(declare-fun x984 () Int)
(declare-fun x1251 () Bool)
(declare-fun x1309 () Bool)
(declare-fun x561 () x565)
(declare-fun x68 () Bool)
(declare-fun x986 () Bool)
(declare-fun x527 () x565)
(declare-fun x744 () Int)
(declare-fun x1140 (x565) Int)
(declare-fun x1120 () Bool)
(declare-fun x511 () Bool)
(declare-fun x282 () Int)
(declare-fun x399 () Int)
(declare-fun x791 () Bool)
(declare-fun x1378 () Int)
(declare-fun x785 () Bool)
(declare-fun x453 () x565)
(declare-fun x1463 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x122 () x565)
(declare-fun x886 () Int)
(declare-fun x658 () Bool)
(declare-fun x710 () x565)
(declare-fun x168 () Int)
(declare-fun x1358 () Int)
(declare-fun x944 () Int)
(declare-fun x780 () x565)
(declare-fun x290 () Bool)
(declare-fun x341 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x413 () Int)
(declare-fun x1575 () x565)
(declare-fun x1202 () Int)
(declare-fun x828 () Int)
(declare-fun x699 () Int)
(declare-fun x972 () Int)
(declare-fun x1285 () Int)
(declare-fun x609 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x1183 () x565)
(declare-fun x1170 () Int)
(declare-fun x318 () Int)
(declare-fun x665 () Int)
(declare-fun x1319 () Int)
(declare-fun x964 () Int)
(declare-fun x1217 () Int)
(declare-fun x587 () x565)
(declare-fun x138 () Int)
(declare-fun x319 () Int)
(declare-fun x1074 () Int)
(declare-fun x1301 () Int)
(declare-fun x630 () Int)
(declare-fun x1229 () Int)
(declare-fun x171 () Bool)
(declare-fun x395 () x565)
(declare-fun x1521 () Bool)
(declare-fun x143 () Bool)
(declare-fun x1019 () Int)
(declare-fun x1132 () Bool)
(declare-fun x913 () Int)
(declare-fun x622 () Int)
(declare-fun x1044 () Bool)
(declare-fun x863 () Int)
(declare-fun x551 () Int)
(declare-fun x1508 () Int)
(declare-fun x418 () Int)
(declare-fun x265 () Int)
(declare-fun x708 () Int)
(declare-fun x375 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x569 () Int)
(declare-fun x1509 () Bool)
(declare-fun x816 () Int)
(declare-fun x712 () Int)
(declare-fun x220 () Bool)
(declare-fun x79 () Int)
(declare-fun x1592 () Int)
(declare-fun x283 () Int)
(declare-fun x1543 () Int)
(declare-fun x101 () Bool)
(declare-fun x1067 () x565)
(declare-fun x1075 () x565)
(declare-fun x1608 () Bool)
(declare-fun x473 () Int)
(declare-fun x656 () Int)
(declare-fun x1411 () Int)
(declare-fun x1265 () Int)
(declare-fun x1165 (Int) Int)
(declare-fun x1341 () Int)
(declare-fun x954 () Int)
(declare-fun x1383 () Bool)
(declare-fun x222 () Int)
(declare-fun x1433 () Int)
(declare-fun x1109 () Int)
(declare-fun x46 () Bool)
(declare-fun x855 () Bool)
(declare-fun x1564 () x565)
(declare-fun x869 () x565)
(declare-fun x1081 () Int)
(declare-fun x552 (Int) Int)
(declare-fun x275 () Int)
(declare-fun x251 () Bool)
(declare-fun x459 () Bool)
(declare-fun x299 () Int)
(declare-fun x198 () Int)
(declare-fun x952 () Bool)
(declare-fun x1603 () Int)
(declare-fun x1254 () Bool)
(declare-fun x274 () Int)
(declare-fun x580 () x565)
(declare-fun x676 () x565)
(declare-fun x92 () Bool)
(declare-fun x463 () Bool)
(declare-fun x91 () Int)
(declare-fun x302 () Bool)
(declare-fun x1335 () Int)
(declare-fun x1065 () x565)
(declare-fun x581 () Int)
(declare-fun x235 () x565)
(declare-fun x363 () x565)
(declare-fun x602 () Int)
(declare-fun x762 () Bool)
(declare-fun x579 () x565)
(declare-fun x28 () x565)
(declare-fun x623 () Int)
(declare-fun x592 (Int) Int)
(declare-fun x991 () Int)
(declare-fun x1444 () Int)
(declare-fun x114 () x565)
(declare-fun x159 (x565) Int)
(declare-fun x59 () Int)
(declare-fun x1469 () Int)
(declare-fun x1325 () x565)
(declare-fun x1196 () Int)
(declare-fun x1534 () Int)
(declare-fun x1610 () Int)
(declare-fun x64 () Bool)
(declare-fun x764 () x565)
(declare-fun x75 () Int)
(declare-fun x372 () Bool)
(declare-fun x1160 () Int)
(declare-fun x398 () Bool)
(declare-fun x680 (Int) Int)
(declare-fun x116 () Int)
(declare-fun x207 () x565)
(declare-fun x1073 () x565)
(declare-fun x1020 () Int)
(declare-fun x1337 () Int)
(declare-fun x241 () Int)
(declare-fun x980 (Int) Int)
(declare-fun x696 () x565)
(declare-fun x1340 () Int)
(declare-fun x971 () x565)
(declare-fun x1342 () Int)
(declare-fun x1355 () Int)
(declare-fun x987 () Int)
(declare-fun x1409 () Bool)
(declare-fun x252 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x795 () Bool)
(declare-fun x303 () Bool)
(declare-fun x556 () x565)
(declare-fun x385 () x565)
(declare-fun x967 () x565)
(declare-fun x905 () x565)
(declare-fun x1111 () Bool)
(declare-fun x766 () Bool)
(declare-fun x1289 () x565)
(declare-fun x1502 () Int)
(declare-fun x1021 () Int)
(declare-fun x182 () Int)
(declare-fun x1461 () Int)
(declare-fun x468 () Bool)
(declare-fun x149 () x565)
(declare-fun x366 () Bool)
(declare-fun x494 (x565) Int)
(declare-fun x1372 () x565)
(declare-fun x1246 () Bool)
(declare-fun x894 () x565)
(declare-fun x184 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x591 () Int)
(declare-fun x136 () Bool)
(declare-fun x32 (Int) Int)
(declare-fun x1151 () x565)
(declare-fun x1582 () Bool)
(declare-fun x1413 () Int)
(declare-fun x93 () Bool)
(declare-fun x578 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x1168 () Int)
(declare-fun x450 () Int)
(declare-fun x1322 () Int)
(declare-fun x272 () Int)
(declare-fun x1105 () Int)
(declare-fun x1359 () Int)
(declare-fun x449 () x565)
(declare-fun x1051 () Bool)
(declare-fun x900 () Int)
(declare-fun x632 () Int)
(declare-fun x728 () Bool)
(declare-fun x1467 () x565)
(declare-fun x1213 () Bool)
(declare-fun x86 () Int)
(declare-fun x335 () Int)
(declare-fun x514 () x565)
(declare-fun x1083 () Int)
(declare-fun x1555 () Bool)
(declare-fun x1276 () Int)
(declare-fun x457 () Bool)
(declare-fun x969 () Bool)
(declare-fun x734 () Int)
(declare-fun x379 () x565)
(declare-fun x1239 () Int)
(declare-fun x1566 () Int)
(declare-fun x1157 () Int)
(declare-fun x397 () x565)
(declare-fun x649 () Int)
(declare-fun x35 (x565) Int)
(declare-fun x242 () Int)
(declare-fun x993 () Int)
(declare-fun x923 () Int)
(declare-fun x646 () Int)
(declare-fun x898 () Bool)
(declare-fun x1578 () Int)
(declare-fun x861 (Int) Int)
(declare-fun x885 () Bool)
(declare-fun x1259 () x565)
(declare-fun x111 () Int)
(declare-fun x1538 () Int)
(declare-fun x528 () Bool)
(declare-fun x1192 () Int)
(declare-fun x516 () Bool)
(declare-fun x661 () Int)
(declare-fun x512 () Bool)
(declare-fun x278 () Int)
(declare-fun x709 () Int)
(declare-fun x1388 () Int)
(declare-fun x217 () Bool)
(declare-fun x357 () Int)
(declare-fun x697 () Bool)
(declare-fun x1002 (x565) Int)
(declare-fun x1049 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x19 () Bool)
(declare-fun x1211 () Int)
(declare-fun x1548 () Bool)
(declare-fun x1408 () Int)
(declare-fun x1513 () Int)
(declare-fun x1556 () Int)
(declare-fun x1482 () Int)
(declare-fun x751 () x565)
(declare-fun x926 () Int)
(declare-fun x1127 () Bool)
(declare-fun x1395 () x565)
(declare-fun x40 () x565)
(declare-fun x753 () x565)
(declare-fun x813 () Int)
(declare-fun x1253 () Int)
(declare-fun x811 () Bool)
(declare-fun x441 () Int)
(declare-fun x518 () x565)
(declare-fun x353 () Bool)
(declare-fun x311 () Bool)
(declare-fun x118 () Int)
(declare-fun x1278 () Int)
(declare-fun x37 () x565)
(declare-fun x1466 () x565)
(declare-fun x1579 () Bool)
(declare-fun x1606 () x565)
(declare-fun x22 () Int)
(declare-fun x268 () Int)
(declare-fun x1480 () Bool)
(declare-fun x679 () Int)
(declare-fun x323 () Int)
(declare-fun x130 () Int)
(declare-fun x1323 () Bool)
(declare-fun x1244 () Int)
(declare-fun x1493 () x565)
(declare-fun x729 () Bool)
(declare-fun x276 () Int)
(declare-fun x140 () Int)
(declare-fun x47 () Bool)
(declare-fun x270 () Bool)
(declare-fun x80 () x565)
(declare-fun x524 () Int)
(declare-fun x1604 () x565)
(declare-fun x298 (x565) Int)
(declare-fun x361 () Int)
(declare-fun x340 () Bool)
(declare-fun x925 () Int)
(declare-fun x17 () Int)
(declare-fun x338 () Int)
(declare-fun x866 () Int)
(declare-fun x1182 () x565)
(declare-fun x1070 () Bool)
(declare-fun x1032 () Int)
(declare-fun x1200 () Int)
(declare-fun x448 () Bool)
(declare-fun x985 () Int)
(declare-fun x691 () Int)
(declare-fun x838 () Bool)
(declare-fun x431 () x565)
(declare-fun x316 () Int)
(declare-fun x701 () Bool)
(declare-fun x1184 () Int)
(declare-fun x1598 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x336 () Int)
(declare-fun x1100 () Int)
(declare-fun x1266 () Bool)
(declare-fun x132 () x565)
(declare-fun x1024 () Int)
(declare-fun x526 (Int) Int)
(declare-fun x250 () Int)
(declare-fun x1235 () Bool)
(declare-fun x769 () Bool)
(declare-fun x893 () Int)
(declare-fun x833 () Int)
(declare-fun x1590 () Bool)
(declare-fun x1220 () Int)
(declare-fun x802 () x565)
(declare-fun x1344 () Bool)
(declare-fun x175 (x565) Int)
(declare-fun x568 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x160 () x565)
(declare-fun x962 () x565)
(declare-fun x344 () Int)
(declare-fun x1451 () Bool)
(declare-fun x572 () Bool)
(declare-fun x590 () Bool)
(declare-fun x1449 () Int)
(declare-fun x932 () Int)
(declare-fun x1514 () Int)
(declare-fun x472 () Int)
(declare-fun x1527 () Int)
(declare-fun x1009 () x565)
(declare-fun x1594 () Int)
(declare-fun x279 () Bool)
(declare-fun x231 () Int)
(declare-fun x1431 () x565)
(declare-fun x638 () Int)
(declare-fun x851 () Int)
(declare-fun x738 () Int)
(declare-fun x934 () x565)
(declare-fun x1426 () Int)
(declare-fun x504 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x711 () Int)
(declare-fun x583 () x565)
(declare-fun x1082 () Int)
(declare-fun x191 () Int)
(declare-fun x1400 () Int)
(declare-fun x1185 () Int)
(declare-fun x1102 () Int)
(declare-fun x815 () Int)
(declare-fun x822 () Int)
(declare-fun x599 () Bool)
(declare-fun x877 () Bool)
(declare-fun x1176 () Int)
(declare-fun x188 () Int)
(declare-fun x1545 () Int)
(declare-fun x933 () Int)
(declare-fun x273 () Int)
(declare-fun x857 () Int)
(declare-fun x927 () x565)
(declare-fun x1472 () Int)
(declare-fun x1366 () Int)
(declare-fun x308 () Bool)
(declare-fun x1186 () Int)
(declare-fun x827 () Int)
(declare-fun x1589 () Bool)
(declare-fun x559 () x565)
(declare-fun x1205 () Bool)
(declare-fun x96 () Int)
(declare-fun x1445 (Int) Int)
(declare-fun x1581 () Bool)
(declare-fun x818 () Int)
(declare-fun x410 () Int)
(declare-fun x1387 () Int)
(declare-fun x176 () Bool)
(declare-fun x1393 () Int)
(declare-fun x723 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x447 () Bool)
(declare-fun x756 () Int)
(declare-fun x973 () x565)
(declare-fun x1108 () Bool)
(declare-fun x713 () Bool)
(declare-fun x515 () Int)
(declare-fun x955 () Int)
(declare-fun x4 () Int)
(declare-fun x700 () Int)
(declare-fun x643 () Int)
(declare-fun x383 () Int)
(declare-fun x48 () Bool)
(declare-fun x8 () Int)
(declare-fun x1491 () x565)
(declare-fun x1052 () Int)
(declare-fun x1256 () Bool)
(declare-fun x260 () Bool)
(declare-fun x1172 () x565)
(declare-fun x407 () x565)
(declare-fun x1156 () Int)
(declare-fun x965 () Int)
(declare-fun x374 () x565)
(declare-fun x874 () Bool)
(declare-fun x1419 () Int)
(declare-fun x105 () Bool)
(declare-fun x367 () Int)
(declare-fun x1076 () Bool)
(declare-fun x187 () x565)
(declare-fun x966 () Int)
(declare-fun x1404 () x565)
(declare-fun x216 () Bool)
(declare-fun x832 () Bool)
(declare-fun x1381 () x565)
(declare-fun x1515 () Int)
(declare-fun x232 () Bool)
(declare-fun x819 () Bool)
(declare-fun x804 () x565)
(declare-fun x829 () Int)
(declare-fun x593 () Int)
(declare-fun x325 () Int)
(declare-fun x426 () Int)
(declare-fun x330 () x565)
(declare-fun x733 () Bool)
(declare-fun x88 () Bool)
(declare-fun x218 () Int)
(declare-fun x71 () Bool)
(declare-fun x1369 () Int)
(declare-fun x1047 () Bool)
(declare-fun x550 () Int)
(declare-fun x727 () Int)
(declare-fun x1004 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x210 () Bool)
(declare-fun x673 () Int)
(declare-fun x826 () Int)
(declare-fun x1242 () Int)
(declare-fun x1097 () x565)
(declare-fun x151 () Int)
(declare-fun x1357 () Bool)
(declare-fun x1011 () Int)
(declare-fun x903 () x565)
(declare-fun x823 () Int)
(declare-fun x1264 () Int)
(declare-fun x1279 () Int)
(declare-fun x731 () Int)
(declare-fun x152 () x565)
(declare-fun x859 () Int)
(declare-fun x1486 () x565)
(declare-fun x370 () Int)
(declare-fun x1425 () Bool)
(declare-fun x989 () Int)
(declare-fun x317 () Int)
(declare-fun x1232 () Bool)
(declare-fun x672 () Int)
(declare-fun x627 () Int)
(declare-fun x1243 () x565)
(declare-fun x834 () Bool)
(declare-fun x721 () Int)
(declare-fun x469 () Int)
(declare-fun x745 () Int)
(declare-fun x1223 () Int)
(declare-fun x1016 () Int)
(declare-fun x97 () x565)
(declare-fun x1490 () Int)
(declare-fun x15 () Int)
(declare-fun x639 () Bool)
(declare-fun x259 () Int)
(declare-fun x489 () Int)
(declare-fun x1286 () Bool)
(declare-fun x674 () Int)
(declare-fun x566 () Bool)
(declare-fun x640 () Bool)
(declare-fun x487 () Bool)
(declare-fun x224 () Int)
(declare-fun x263 () x565)
(declare-fun x1501 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x1464 () Int)
(declare-fun x359 () Int)
(declare-fun x9 () Bool)
(declare-fun x1209 () Int)
(declare-fun x1297 () Int)
(declare-fun x979 (Int) Int)
(declare-fun x1552 () x565)
(declare-fun x1375 () Int)
(declare-fun x677 () Int)
(declare-fun x349 () Int)
(declare-fun x411 () Int)
(declare-fun x801 () Int)
(declare-fun x1161 () Int)
(declare-fun x787 () Bool)
(declare-fun x1503 () Int)
(declare-fun x495 (Int) Int)
(declare-fun x719 () Int)
(declare-fun x1506 () Int)
(declare-fun x915 () Int)
(declare-fun x722 () x565)
(declare-fun x1292 () Int)
(declare-fun x687 (Int) Int)
(declare-fun x1210 () Bool)
(declare-fun x948 () x565)
(declare-fun x716 () Bool)
(declare-fun x867 (x565) Int)
(declare-fun x852 () x565)
(declare-fun x277 () Int)
(declare-fun x233 () x565)
(declare-fun x1315 () Int)
(declare-fun x896 () Int)
(declare-fun x999 () Int)
(declare-fun x1570 () Bool)
(declare-fun x575 () x565)
(declare-fun x502 () x565)
(declare-fun x1418 () Bool)
(declare-fun x1034 () Int)
(declare-fun x225 () x565)
(declare-fun x1363 () x565)
(declare-fun x405 () Int)
(declare-fun x1226 () Int)
(declare-fun x461 () Bool)
(declare-fun x909 (x565) Int)
(declare-fun x730 () Int)
(declare-fun x1104 () Bool)
(declare-fun x82 () Int)
(declare-fun x1063 () Bool)
(declare-fun x931 () Int)
(declare-fun x553 () Int)
(declare-fun x1 () Int)
(declare-fun x1609 () x565)
(declare-fun x66 () x565)
(declare-fun x1280 () Bool)
(declare-fun x212 () Bool)
(declare-fun x124 () x565)
(declare-fun x185 () x565)
(declare-fun x1117 () x565)
(declare-fun x1401 () Bool)
(declare-fun x854 () Bool)
(declare-fun x1271 () Int)
(declare-fun x520 () Int)
(declare-fun x1607 () Bool)
(declare-fun x963 () Int)
(declare-fun x99 () Bool)
(declare-fun x439 () Bool)
(declare-fun x6 () Bool)
(declare-fun x267 () Bool)
(declare-fun x647 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x321 () Bool)
(declare-fun x1347 () Int)
(declare-fun x1206 () Int)
(declare-fun x1580 () x565)
(declare-fun x621 () Bool)
(declare-fun x1045 () Int)
(declare-fun x393 () Bool)
(declare-fun x246 () Int)
(declare-fun x1022 () Bool)
(declare-fun x314 () Int)
(declare-fun x421 () Int)
(declare-fun x204 () Int)
(declare-fun x256 () x565)
(declare-fun x1077 () Bool)
(declare-fun x501 () x565)
(declare-fun x938 () Int)
(declare-fun x428 () Int)
(declare-fun x488 () Int)
(declare-fun x683 () Int)
(declare-fun x243 () Int)
(declare-fun x508 () Int)
(declare-fun x644 () Int)
(declare-fun x790 () Int)
(declare-fun x1042 () Int)
(declare-fun x1114 () Int)
(declare-fun x953 () Int)
(declare-fun x1143 () Bool)
(declare-fun x768 () Int)
(declare-fun x797 () Bool)
(declare-fun x203 () Int)
(declare-fun x626 () Int)
(declare-fun x39 () Bool)
(declare-fun x322 () Bool)
(declare-fun x1374 () Int)
(declare-fun x825 () Int)
(declare-fun x555 () Int)
(declare-fun x1338 () Bool)
(declare-fun x451 () Int)
(declare-fun x454 () Int)
(declare-fun x373 (x565) Int)
(declare-fun x382 () Int)
(declare-fun x1079 () Int)
(declare-fun x1391 () x565)
(declare-fun x1504 () Int)
(declare-fun x206 () Int)
(declare-fun x1017 () Int)
(declare-fun x25 () Int)
(declare-fun x360 () Int)
(declare-fun x1023 () Int)
(declare-fun x26 () x565)
(declare-fun x824 () Int)
(declare-fun x1439 () x565)
(declare-fun x1536 () Bool)
(declare-fun x1255 () x565)
(declare-fun x746 () Int)
(declare-fun x1529 () Int)
(declare-fun x548 () Int)
(declare-fun x837 () Int)
(declare-fun x1268 () Bool)
(declare-fun x671 () x565)
(declare-fun x150 () Int)
(declare-fun x573 () Bool)
(declare-fun x1475 () x565)
(declare-fun x237 () Int)
(declare-fun x1091 () Int)
(declare-fun x554 () Int)
(declare-fun x281 () Int)
(declare-fun x31 () x565)
(declare-fun x1478 () Int)
(declare-fun x1483 () Bool)
(declare-fun x1303 () Int)
(declare-fun x1447 () Int)
(declare-fun x918 () Int)
(declare-fun x943 () x565)
(declare-fun x293 () Int)
(declare-fun x678 () Int)
(declare-fun x1489 () Int)
(declare-fun x1155 () Bool)
(declare-fun x481 () x565)
(declare-fun x1540 () Bool)
(declare-fun x610 () x565)
(declare-fun x776 () Int)
(declare-fun x814 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x1238 () Int)
(declare-fun x194 () Int)
(declare-fun x289 () Int)
(declare-fun x844 (Int) Int)
(declare-fun x1027 () Int)
(declare-fun x1270 () Int)
(declare-fun x1123 () Int)
(declare-fun x1237 () Int)
(declare-fun x574 () Int)
(declare-fun x761 () Int)
(declare-fun x1318 () Bool)
(declare-fun x1029 () Bool)
(declare-fun x1450 () Int)
(define-fun x606 ((x565 x565) (x1507 Int)) x565 (ite ((_ is x214) x565) (x214 (x597 x565) (+ (x724 x565) x1507)) (ite ((_ is x60) x565) (x60 (x1453 x565) (x1348 x565) (+ (x1389 x565) x1507)) (x297 (+ (x752 x565) x1507)))))
(define-fun x1360 ((x1060 Int)) Int (ite (and (< x1060 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1060 0)) x1060 (- x1060 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x484 ((x1060 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1060) (> 0 x1060)) (+ x1060 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1060))
(define-fun x1167 ((x1060 Int)) Int (ite (and (>= x1060 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1060)) x1060 (ite (and (>= x1060 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x1060 231584178474632390847141970017375815706539969331281128078915168015826259279872)) (- x1060 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x1060 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1060 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1060) (x739 x1060 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x205 ((x1317 Int)) Bool (and (<= 0 x1317) (< x1317 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1174 ((x1317 Int) (x1171 Int)) Bool (= (* x1317 x1171) (x1187 x1317 x1171)))
(define-fun x499 ((x1317 Int) (x1171 Int)) Bool (=> (not (= 0 x1317)) (= (= x1171 (x1000 (x1167 (* x1317 x1171)) x1317)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1317 x1171)) (< (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* x1317 x1171))))))
(define-fun x1373 ((x1317 Int) (x1171 Int)) Bool (= (< (x1000 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1317) x1171) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (* x1317 x1171))))
(define-fun x767 ((x1317 Int) (x1171 Int)) Bool (and (x1174 x1317 x1171) (x499 x1317 x1171) (x1373 x1317 x1171)))
(define-fun x309 ((x1317 Int)) Bool (and (= (x1187 x1317 0) 0) (= (x1187 0 x1317) 0)))
(define-fun x1031 ((x1317 Int)) Bool (and (= x1317 (x1187 x1317 1)) (= (x1187 1 x1317) x1317)))
(define-fun x491 ((x1317 Int)) Bool (and (x309 x1317) (x1031 x1317)))
(define-fun x1247 ((x1317 Int)) Bool (and (= x1317 (x147 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1317)) (= x1317 (x147 x1317 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x244 ((x1317 Int)) Bool (and (= 0 (x147 x1317 0)) (= (x147 0 x1317) 0)))
(define-fun x1586 ((x1317 Int)) Bool (= x1317 (x147 x1317 x1317)))
(define-fun x107 ((x1317 Int)) Bool (and (x1247 x1317) (x244 x1317) (x1586 x1317)))
(define-fun x629 ((x1317 Int)) Bool (= (x147 1461501637330902918203684832716283019655932542975 (x147 1461501637330902918203684832716283019655932542975 x1317)) (x147 1461501637330902918203684832716283019655932542975 x1317)))
(define-fun x12 ((x1317 Int)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x1317) (<= 0 x1317)) (= x1317 (x147 1461501637330902918203684832716283019655932542975 x1317))))
(define-fun x352 ((x1317 Int)) Bool (=> (= (x147 1461501637330902918203684832716283019655932542975 x1317) x1317) (and (<= 0 x1317) (< x1317 1461501637330902918203684832716283019655932542976))))
(define-fun x1018 ((x1317 Int)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x1317) (>= x1317 1461501637330902918203684832716283019655932542976)) (= (- x1317 1461501637330902918203684832716283019655932542976) (x147 1461501637330902918203684832716283019655932542975 x1317))))
(define-fun x541 ((x1317 Int) (x1171 Int)) Bool (and (= (+ (* x1171 1461501637330902918203684832716283019655932542976) (x147 1461501637330902918203684832716283019655932542975 x1317)) x1317) (<= 0 x1171)))
(define-fun x845 ((x1317 Int) (x1158 Int)) Bool (and (x541 x1317 x1158) (x352 x1317) (x629 x1317) (x12 x1317) (x1018 x1317)))
(define-fun x490 ((x1317 Int) (x1171 Int)) Bool (= (x147 x1317 x1171) (x147 x1171 x1317)))
(define-fun x1468 ((x1317 Int) (x1171 Int)) Bool (and (=> (<= 0 x1171) (>= x1171 (x147 x1317 x1171))) (=> (<= 0 x1317) (<= (x147 x1317 x1171) x1317)) (<= 0 (x147 x1317 x1171))))
(define-fun x662 ((x1317 Int) (x1171 Int)) Bool (and (x1468 x1317 x1171) (x490 x1317 x1171)))
(define-fun x1294 ((x1317 Int) (x1158 Int)) Bool (and (x662 x1317 1461501637330902918203684832716283019655932542975) (x845 x1317 x1158)))
(define-fun x595 ((x1317 Int) (x1171 Int)) Bool (= (x1187 x1317 x1171) (x1187 x1171 x1317)))
(define-fun x505 ((x1317 Int) (x1171 Int)) Bool (and (=> (and (> x1171 0) (< 0 x1317)) (> (x1187 x1317 x1171) 0)) (=> (and (< x1317 0) (> x1171 0)) (> 0 (x1187 x1317 x1171))) (=> (and (> x1317 0) (> 0 x1171)) (> 0 (x1187 x1317 x1171))) (=> (and (< x1317 0) (< x1171 0)) (< 0 (x1187 x1317 x1171)))))
(define-fun x1399 ((x1317 Int) (x1171 Int)) Bool (=> (and (< 0 x1317) (> x1171 0)) (and (>= (x1187 x1317 x1171) x1171) (<= x1317 (x1187 x1317 x1171)))))
(define-fun x254 ((x1317 Int) (x1171 Int)) Bool (=> (not (= x1317 0)) (= (= (x1000 (x1167 (x1187 x1317 x1171)) x1317) x1171) (and (< (x1187 x1317 x1171) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> (x1187 x1317 x1171) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x534 ((x1317 Int) (x1171 Int)) Bool (=> (and (= x1171 (x1000 (x1187 x1317 x1171) x1317)) (not (= 0 x1171)) (not (= x1317 0))) (= (x1000 (x1187 x1317 x1171) x1171) x1317)))
(define-fun x327 ((x1317 Int) (x1171 Int)) Bool (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1187 x1317 x1171)) (< (x1000 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1317) x1171)))
(define-fun x924 ((x1317 Int) (x1171 Int)) Bool (and (x534 x1317 x1171) (x505 x1317 x1171) (x1399 x1317 x1171) (x327 x1317 x1171) (x254 x1317 x1171) (x595 x1317 x1171)))
(define-fun x164 ((x1317 Int) (x1171 Int)) Bool (=> (and (> x1171 0) (< 0 x1317)) (and (<= (x1000 x1317 x1171) x1317) (<= 0 (x1000 x1317 x1171)))))
(define-fun x1290 ((x1317 Int) (x1171 Int)) Bool (=> (and (< x1171 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x1171) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1317) (<= 0 x1317)) (and (>= (x1000 x1317 x1171) 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1000 x1317 x1171)))))
(define-fun x1190 ((x1317 Int) (x1171 Int)) Bool (=> (and (> x1171 1) (> x1317 x1171)) (> x1317 (x1000 x1317 x1171))))
(define-fun x620 ((x1317 Int) (x1171 Int)) Bool (=> (and (> x1171 0) (> x1317 0)) (= (= 0 (x1000 x1317 x1171)) (< x1317 x1171))))
(define-fun x748 ((x1317 Int) (x1171 Int)) Bool (=> (and (> x1317 0) (> x1171 0)) (and (<= (x1187 (x1000 x1317 x1171) x1171) x1317) (< (- x1317 x1171) (x1187 (x1000 x1317 x1171) x1171)))))
(define-fun x201 ((x1317 Int) (x1171 Int)) Bool (and (x1290 x1317 x1171) (x748 x1317 x1171) (x164 x1317 x1171) (x1190 x1317 x1171) (x620 x1317 x1171)))
(define-fun x18 ((x1317 Int)) Bool (= (x1000 0 x1317) 0))
(define-fun x774 ((x1317 Int)) Bool (= (x1000 x1317 1) x1317))
(define-fun x1128 ((x1317 Int)) Bool (=> (not (= x1317 0)) (= (x1000 x1317 x1317) 1)))
(define-fun x1455 ((x1317 Int)) Bool (and (x18 x1317) (x1128 x1317) (x774 x1317)))
(define-fun x1346 ((x1317 Int) (x1171 Int)) Bool (=> (and (< 0 x1317) (> x1171 0)) (and (<= (* (x1000 x1317 x1171) x1171) x1317) (< (- x1317 x1171) (* x1171 (x1000 x1317 x1171))))))
(define-fun x519 ((x1317 Int) (x1171 Int)) Bool (and (x1290 x1317 x1171) (x620 x1317 x1171) (x1346 x1317 x1171) (x1190 x1317 x1171) (x164 x1317 x1171)))
(define-fun x240 ((x1317 Int)) Bool (= (x147 26959946667150639794667015087019630673637144422540572481103610249215 (x147 26959946667150639794667015087019630673637144422540572481103610249215 x1317)) (x147 26959946667150639794667015087019630673637144422540572481103610249215 x1317)))
(define-fun x139 ((x1317 Int)) Bool (=> (and (<= 0 x1317) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1317)) (= x1317 (x147 26959946667150639794667015087019630673637144422540572481103610249215 x1317))))
(define-fun x458 ((x1317 Int)) Bool (=> (= x1317 (x147 26959946667150639794667015087019630673637144422540572481103610249215 x1317)) (and (<= 0 x1317) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1317))))
(define-fun x1311 ((x1317 Int)) Bool (=> (and (< x1317 53919893334301279589334030174039261347274288845081144962207220498432) (>= x1317 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x147 26959946667150639794667015087019630673637144422540572481103610249215 x1317) (- x1317 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x84 ((x1317 Int) (x1171 Int)) Bool (and (= (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x1171) (x147 26959946667150639794667015087019630673637144422540572481103610249215 x1317)) x1317) (<= 0 x1171)))
(define-fun x835 ((x1317 Int) (x1158 Int)) Bool (and (x139 x1317) (x240 x1317) (x84 x1317 x1158) (x1311 x1317) (x458 x1317)))
(define-fun x1146 ((x1317 Int) (x1158 Int)) Bool (and (x835 x1317 x1158) (x662 x1317 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1587 ((x1317 Int)) Bool (= (x147 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x147 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1317)) (x147 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1317)))
(define-fun x452 ((x1317 Int)) Bool (=> (and (> 32 x1317) (<= 0 x1317)) (= 0 (x147 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1317))))
(define-fun x1212 ((x1317 Int) (x1171 Int) (x1396 Int) (x670 Int)) Bool (and (< x1171 32) (= (* 32 x1396) (x147 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1317)) (<= 0 x1396) (>= x1171 0) (= x1317 (+ x1171 (* 32 x1396) (* x670 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (> 1 x670) (< x1396 3618502788666131106986593281521497120414687020801267626233049500247285301248) (<= 0 x670)))
(define-fun x1537 ((x1317 Int) (x914 Int) (x636 Int) (x127 Int)) Bool (and (x1587 x1317) (x1212 x1317 x914 x636 x127) (x452 x1317)))
(define-fun x249 ((x1317 Int) (x914 Int) (x636 Int) (x127 Int)) Bool (and (x1537 x1317 x914 x636 x127) (x662 x1317 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x87 ((x1153 Int)) Int (x285 x1153))
(define-fun x757 ((x1153 Int)) Int (ite (= x1153 128) x919 (x980 x1153)))
(define-fun x90 ((x1153 Int)) Int (ite (and (> (+ 160 x913) x1153) (>= x1153 160)) (x285 (+ x413 (- x1153 160))) (x328 x1153)))
(define-fun x615 ((x1153 x565)) Int (ite (= x1153 x1243) x644 (x298 x1153)))
(define-fun x1546 ((x1153 x565)) Int (ite (= x1153 x903) x644 (x298 x1153)))
(define-fun x287 ((x1153 x565)) Int (ite (= x80 x1153) x644 (x867 x1153)))
(define-fun x257 ((x1153 x565)) Int (ite (= x1153 x948) x644 (x867 x1153)))
(define-fun x1410 ((x1153 x565)) Int (ite (and x1536 x1037) (x867 x1153) (ite (and x1240 x415) (x298 x1153) (ite (and (not x1015) x455) (x287 x1153) (x257 x1153)))))
(define-fun x248 ((x1153 x565)) Int (ite (= x1153 x1474) x644 (x957 x1153)))
(define-fun x1306 ((x1153 x565)) Int (ite (= x1153 x154) x644 (x957 x1153)))
(define-fun x94 ((x1153 x565)) Int (ite (= x869 x1153) x644 (x957 x1153)))
(define-fun x1144 ((x1153 x565)) Int (ite (= x1153 x1609) x644 (x414 x1153)))
(define-fun x714 ((x1153 x565)) Int (ite (= x1153 x346) x644 (x414 x1153)))
(define-fun x1302 ((x1153 x565)) Int (ite (= x1153 x753) x644 (x414 x1153)))
(define-fun x202 ((x1153 x565)) Int (ite (and x1037 x1536) (x414 x1153) (ite (and x1240 x415) (x957 x1153) (ite (and (not x322) (not x1495) x161) (x1144 x1153) (ite (and x322 x161 (not x1495)) (x714 x1153) (x1302 x1153))))))
(define-fun x1233 ((x1153 x565)) Int (ite (= x1153 x1404) x992 (x542 x1153)))
(define-fun x350 ((x1153 x565)) Int (ite (= x379 x1153) x522 (x1595 x1153)))
(define-fun x1142 ((x1153 x565)) Int (ite (and x455 (not x1015)) (x350 x1153) (x1595 x1153)))
(define-fun x960 ((x1153 x565)) Int (ite (and x1536 x1037) (x1595 x1153) (ite (and x415 x1240) (x542 x1153) (x1142 x1153))))
(define-fun x704 ((x1153 x565)) Int (ite (= x1153 x226) x859 (x909 x1153)))
(define-fun x1557 ((x1153 x565)) Int (ite (= x160 x1153) x1549 (x159 x1153)))
(define-fun x807 ((x1153 x565)) Int (ite (and (not x322) x161 (not x1495)) (x1557 x1153) (x159 x1153)))
(define-fun x1057 ((x1153 x565)) Int (ite (and x1037 x1536) (x159 x1153) (ite (and x415 x1240) (x909 x1153) (x807 x1153))))
(define-fun x13 ((x1153 x565)) Int (ite (= x1539 x1153) x1547 (x417 x1153)))
(define-fun x424 ((x1153 x565)) Int (ite (= x584 x1153) x433 (x1295 x1153)))
(define-fun x994 ((x1153 x565)) Int (ite (and x1037 x1536) (x35 x1153) (ite (and x1240 x415) (x175 x1153) (ite (and (not x1581) x455 (not x171) x1069) (x1295 x1153) (ite (and (not x171) x455 (not x1069)) (x35 x1153) (ite (and x455 x171) (x35 x1153) (x424 x1153)))))))
(define-fun x641 ((x1153 x565)) Int (ite (= x187 x1153) x460 (x1002 x1153)))
(define-fun x377 ((x1153 x565)) Int (ite (and x1356 x448) (x1002 x1153) (x641 x1153)))
(define-fun x577 ((x1153 x565)) Int (ite (= x510 x1153) x669 (x494 x1153)))
(define-fun x437 ((x1153 x565)) Int (ite (and x247 x1561) (x494 x1153) (x577 x1153)))
(define-fun x1272 ((x1153 Int)) Int (ite (= x165 x1153) x422 (x861 x1153)))
(define-fun x1122 ((x1153 Int)) Int (ite (and x791 x1561) (x861 x1153) (x1272 x1153)))
(define-fun x1257 ((x1153 Int)) Int (ite (= x1153 x683) x109 (x1122 x1153)))
(define-fun x659 ((x1153 Int)) Int (ite (= x1168 x1153) x1083 (x858 x1153)))
(define-fun x648 ((x1153 Int)) Int (ite (and x1561 x791) (x858 x1153) (x659 x1153)))
(define-fun x873 ((x1153 Int)) Int (ite (= x219 x1153) x478 (x648 x1153)))
(define-fun x1487 ((x1153 Int)) Int (ite (= x1153 x250) x984 (x1445 x1153)))
(define-fun x1203 ((x1153 Int)) Int (ite (= x1482 x1153) x150 (x1487 x1153)))
(define-fun x890 ((x1153 Int)) Int (ite (= x1153 x1566) x1095 (x1577 x1153)))
(define-fun x348 ((x1153 Int)) Int (ite (= x1153 x1012) x887 (x890 x1153)))
(define-fun x891 ((x1153 Int)) Int (ite (= x1153 192) x236 (x517 x1153)))
(define-fun x326 ((x1153 Int)) Int (ite (= x1153 192) x746 (x862 x1153)))
(define-fun x1089 ((x1153 Int)) Int (ite (and x1037 x1536) (x1412 x1153) (ite (and x1240 x415) (x264 x1153) (ite (and (not x1581) x455 x1069 (not x171)) (x862 x1153) (ite (and (not x1069) (not x171) x455) (x1412 x1153) (ite (and x171 x455) (x1412 x1153) (x326 x1153)))))))
(define-fun x387 ((x1153 Int)) Int (ite (= x638 x1153) x571 (x193 x1153)))
(define-fun x1059 ((x1153 Int)) Int (ite (= x1153 x730) x1226 (x387 x1153)))
(define-fun x1384 ((x1153 Int)) Int (ite (= x1166 x1153) x503 (x1352 x1153)))
(define-fun x1193 ((x1153 Int)) Int (ite (= x1153 x886) x36 (x1059 x1153)))
(define-fun x315 ((x1153 Int)) Int (ite (= x1433 x1153) x1430 (x844 x1153)))
(define-fun x486 ((x1153 Int)) Int (ite (= x1202 x1153) 0 (x875 x1153)))
(define-fun x1405 ((x1153 Int)) Int (ite (= x1153 x789) x989 (x1349 x1153)))
(define-fun x69 ((x1153 Int)) Int (ite (= x789 x1153) x1292 (x1349 x1153)))
(define-fun x703 ((x1153 Int)) Int (ite (= x665 x1153) x50 (x495 x1153)))
(define-fun x1026 ((x1153 Int)) Int (ite (= x1153 x1114) 0 (x1208 x1153)))
(define-fun x997 ((x1153 Int)) Int (ite (and x1555 (not x1093) x978) (x1208 x1153) (x1026 x1153)))
(define-fun x1116 ((x1153 x565)) Int (ite (= x1153 (x300 274184521717934524641157099916833587206)) x759 (x1003 x1153)))
(define-fun x2 ((x1153 x565)) Int (ite (= (x300 x72) x1153) x1206 (x1116 x1153)))
(define-fun x1574 ((x1153 x565)) Int (ite (= (x300 x72) x1153) x1550 (x2 x1153)))
(define-fun x178 ((x1153 x565)) Int (ite (= x1153 (x300 274184521717934524641157099916833587206)) x1050 (x1574 x1153)))
(define-fun x1061 ((x1153 x565)) Int (ite (= x1153 (x300 274184521717934524641157099916833587206)) x800 (x178 x1153)))
(define-fun x1533 ((x1153 x565)) Int (ite (= (x300 x1388) x1153) x24 (x1061 x1153)))
(define-fun x878 ((x1153 x565)) Int (ite (= x950 x1153) x1178 (x899 x1153)))
(define-fun x58 ((x1153 x565)) Int (ite (= x108 x1153) x1145 (x878 x1153)))
(define-fun x320 ((x1153 x565)) Int (ite (and x51 x1104) (x58 x1153) (x899 x1153)))
(define-fun x1312 ((x1153 x565)) Int (ite (= x374 x1153) x337 (x320 x1153)))
(define-fun x784 ((x1153 Int)) Int (ite (= x1153 0) 1 (x396 x1153)))
(define-fun x618 ((x1153 Int)) Int (ite (= x1153 x996) x179 (x1193 x1153)))
(define-fun x1230 ((x1153 Int)) Int (ite (= x1153 x1223) x1271 (x618 x1153)))
(define-fun x798 ((x1153 Int)) Int (ite (= x1153 x548) x426 (x1384 x1153)))
(define-fun x16 ((x1153 Int)) Int (ite (= x1153 x702) x258 (x1230 x1153)))
(define-fun x1505 ((x1153 Int)) Int (ite (= 0 x1153) 1 (x687 x1153)))
(define-fun x1164 ((x1153 x565)) Int (ite (= x1602 x1153) x825 (x945 x1153)))
(define-fun x910 ((x1153 x565)) Int (ite (= x1542 x1153) x674 (x1164 x1153)))
(define-fun x1353 ((x1153 x565)) Int (ite (and x1104 x51) (x945 x1153) (x910 x1153)))
(define-fun x1354 ((x1153 x565)) Int (ite (= x233 x1153) x805 (x1353 x1153)))
(define-fun x286 ((x1153 Int)) Int (ite (= x1153 0) 1 (x396 x1153)))
(define-fun x141 ((x1153 Int)) Int (ite (= 0 x1153) 1 (x687 x1153)))
(define-fun x1517 ((x1153 Int)) Int (ite (and x447 x1025) (x784 x1153) (x286 x1153)))
(define-fun x345 ((x1153 x565)) Int (ite (= x1153 (x300 x1388)) x938 (x1533 x1153)))
(define-fun x720 ((x1153 Int)) Int (ite (= x1153 x789) x691 (x552 x1153)))
(define-fun x466 ((x1153 Int)) Int (ite (= x881 x1153) x1369 (x592 x1153)))
(define-fun x1392 ((x1153 Int)) Int (ite (and x1104 x51) (x1505 x1153) (x141 x1153)))
(define-fun x1007 ((x1153 Int)) Int (ite (and (> (+ x1316 x691) x1153) (<= x1316 x1153)) (x1392 (+ 0 (- x1153 x1316))) (x680 x1153)))
(define-fun x916 ((x1153 Int)) Int (ite (and (<= x113 x1153) (> (+ x113 x1369) x1153)) (x1517 (+ (- x1153 x113) 0)) (x979 x1153)))
(define-fun x1605 ((x1153 Int)) Int (ite (and x792 x14) (x979 x1153) (x916 x1153)))
(define-fun x384 ((x1153 Int)) Int (ite (and x14 x792) (x592 x1153) (x466 x1153)))
(define-fun x935 ((x1317 Int) (x1171 Int) (x1396 Int) (x670 Int)) Bool (=> (and (<= x1171 x670) (>= x1317 0) (<= 0 x1171) (>= x1396 x1317)) (<= (x1187 x1317 x1171) (x1187 x1396 x670))))
(define-fun x442 ((x1317 Int) (x1171 Int) (x1396 Int) (x670 Int)) Bool (=> (= x1317 x1396) (= (- (x1187 x1317 x1171) (x1187 x1396 x670)) (x1187 x1317 (- x1171 x670)))))
(define-fun x921 ((x1317 Int)) Bool (=> (and (not (= 2798343961 x1317)) (not (= x1317 1968616202)) (not (= 2293535753 x1317)) (not (= x1317 115792089237316195423570985008687907853269984665640564039457)) (> x1317 10000) (not (= x1317 1000000000000000000)) (not (= 1889567281 x1317)) (not (= x1317 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1317 2764855426)) (not (= x1317 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 2868243304 x1317)) (not (= x1317 1986467848)) (not (= x1317 2258409472)) (not (= 2061678023 x1317)) (not (= 2418364589 x1317)) (not (= 2211524764 x1317)) (not (= x1317 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x1317 2532887486)) (not (= x1317 604800)) (not (= 826074471 x1317)) (not (= 274184521717934524641157099916833587218 x1317)) (not (= x1317 2514000705)) (not (= x1317 649617121)) (not (= 2835717307 x1317)) (not (= 87118632 x1317)) (not (= 468353030 x1317)) (not (= 759532456 x1317)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1317)) (not (= x1317 142201243)) (not (= 2939843472 x1317)) (not (= 18446744073709551615 x1317)) (not (= 635128645 x1317)) (not (= x1317 911411945)) (not (= x1317 2690754053)) (not (= x1317 1461501637330902918203684832716283019655932542975)) (not (= 2743102681 x1317)) (not (= x1317 2960351575)) (not (= 69947311 x1317)) (not (= x1317 274184521717934524641157099916833587206)) (not (= x1317 2512682246)) (not (= x1317 274184521717934524641157099916833587214))) (not ((_ is x297) (x300 x1317)))))
(assert (= 274184521717934524641157099916833587206 (x163 (x300 274184521717934524641157099916833587206))))
(assert (x491 (- x954 x1244)))
(assert (x205 x951))
(assert (= (x300 115792089237316195423570985008687907853269984665640564039457) (x297 115792089237316195423570985008687907853269984665640564039457)))
(assert (x442 x1244 x668 x668 x777))
(assert (= x1040 (=> (= (> x1016 0) x1582) (and (=> x1582 x929) (=> (not x1582) x572)))))
(assert (x205 x349))
(assert (= (x163 (x300 x293)) x293))
(assert (x205 x1214))
(assert (=> (<= x203 10000) (= (x300 x203) (x297 x203))))
(assert (x935 x1244 x668 x954 x173))
(assert (x205 x1196))
(assert (x205 x970))
(assert (= x987 (x163 (x300 x987))))
(assert (= (x163 (x297 911411945)) 911411945))
(assert (x205 x1337))
(assert (= (x300 274184521717934524641157099916833587206) (x297 274184521717934524641157099916833587206)))
(assert (x924 x695 (- x617 x777)))
(assert (x205 x335))
(assert (x205 x430))
(assert (x921 x454))
(assert (x442 x777 x668 x1502 x460))
(assert (x921 x1326))
(assert (x921 x1197))
(assert (x205 x789))
(assert (x205 x1176))
(assert (x935 x695 x617 x694 x695))
(assert (x924 x694 (- x695 x460)))
(assert (not x1584))
(assert (x205 x492))
(assert (x205 x989))
(assert (x921 x1285))
(assert (x205 x654))
(assert (x491 (- x173 x669)))
(assert (x205 x391))
(assert (x935 x438 x1027 x777 x668))
(assert (=> (>= 10000 x338) (= (x297 x338) (x300 x338))))
(assert (x921 x98))
(assert (= (x163 (x300 x450)) x450))
(assert (x205 x545))
(assert (x205 x1101))
(assert (x205 x1341))
(assert (x107 x1593))
(assert (= (=> (and (= x759 (x1003 (x300 274184521717934524641157099916833587206))) (= (x1116 (x300 x72)) x1206) (= x465 (x1003 (x300 274184521717934524641157099916833587206))) (= (>= x465 0) x7) x262 x52 x7 (= (x1003 (x300 x72)) x1393) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1116 (x300 x72))) x262) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1393) x52) (= x140 x968) (= (= 274184521717934524641157099916833587218 x72) x51)) (and (=> (not x51) x402) (=> (and (= (x60 (x300 274184521717934524641157099916833587206) (x297 1) 0) x435) (not (= x532 2514000705)) (= x608 x177) (>= x356 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x356) (= x654 274184521717934524641157099916833587206) (= x623 1) (not (= 826074471 x532)) x51 (= x400 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x177 x625))) (<= 0 x625) (not (= 649617121 x532)) (= x148 (x484 (- x536 4))) (= x356 (x899 x435)) (= x1504 (x1422 (x300 274184521717934524641157099916833587218))) (= x1076 (> x177 x356)) (= x140 x536) (not (= x532 1889567281)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x625 x177)) (not (< x536 4)) (< 0 x1504) (= 68 x536) (= (< x356 x1149) x398) (= x571 x293) (= (x484 (- x356 x1149)) x1178) (= x624 (x60 (x300 x293) (x297 1) 0)) (not x1497) (= x691 32) (not (> 649617121 x532)) (= x1366 x989) (not x398) (= (x60 (x300 x293) (x297 1) 0) x108) (= x1226 x1149) (not x1076) (not x400) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x148) true) (< x148 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x148)) x1497) (= x1149 x177) (<= x625 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2835717307 x532) (= (+ x736 x608) x1145) (= (x878 x624) x625) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1100) (= x963 274184521717934524641157099916833587206) (= x293 x1273) (<= x293 1461501637330902918203684832716283019655932542975) (= x625 x736) (= (x60 (x300 274184521717934524641157099916833587206) (x297 1) 0) x950)) x562))) x723))
(assert (x442 x1502 x460 x664 x669))
(assert (=> (<= x1192 10000) (= (x297 x1192) (x300 x1192))))
(assert (x1455 x612))
(assert (=> (<= x1446 10000) (= (x297 x1446) (x300 x1446))))
(assert (x491 (- x664 x1244)))
(assert (= (x159 x971) (ite (and x791 x1561) (x909 x971) (ite (and (not x791) x1561 x88) (x909 x971) (x704 x971)))))
(assert (x924 x695 (- x694 x438)))
(assert (x924 x695 (- x694 x695)))
(assert (x924 x668 (- x777 x1027)))
(assert (x205 x148))
(assert (x205 x183))
(assert (x442 x438 x1027 x777 x668))
(assert (x205 x922))
(assert (x491 (- x668 x1244)))
(assert (= (ite (= x1183 x788) x1207 (x35 x1183)) (x1295 x1183)))
(assert (= x91 (x163 (x300 x91))))
(assert (x442 x664 x669 x617 x695))
(assert (x205 x925))
(assert (=> (>= 10000 x824) (= (x300 x824) (x297 x824))))
(assert (x205 x83))
(assert (x205 x1374))
(assert (= 2512682246 (x163 (x297 2512682246))))
(assert (=> (<= x1248 10000) (= (x297 x1248) (x300 x1248))))
(assert (x205 x585))
(assert (=> (<= x651 10000) (= (x300 x651) (x297 x651))))
(assert (= x1441 (x163 (x300 x1441))))
(assert (x442 x954 x173 x669 x664))
(assert (x491 (- x1244 x664)))
(assert (x921 x1138))
(assert (= (=> (and (not (> 2690754053 x1515)) (< x1515 2960351575) (= (x1422 (x300 274184521717934524641157099916833587206)) x1034) (= x1515 2743102681) (= x1378 x1610) (not (< x1515 2293535753)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1378) (= (x60 (x300 x228) x735 0) x580) (< 0 x1034) (not (= x1515 2690754053)) (= (x60 (x300 x918) (x297 3) 0) x1296) (= x735 (x60 (x300 x1112) x1296 0)) (<= x228 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1112) (= x1378 (x909 x580)) (<= 0 x1378)) (=> (and (= x778 x1209) (= x381 x137) (= x1358 x907) (= x59 x1610) (= x360 x182)) x487)) x1155))
(assert (= (x163 (x300 x1048)) x1048))
(assert (x205 x81))
(assert (=> (>= 10000 x693) (= (x297 x693) (x300 x693))))
(assert (= (x193 x281) 0))
(assert (x205 x1530))
(assert (=> (>= 10000 x1293) (= (x300 x1293) (x297 x1293))))
(assert (x921 x970))
(assert (x924 x617 (- x695 x460)))
(assert (x205 x496))
(assert (=> (<= x538 10000) (= (x300 x538) (x297 x538))))
(assert (x205 x50))
(assert (x935 x954 x173 x1244 x668))
(assert (x205 x1375))
(assert (x205 x779))
(assert (x205 x338))
(assert (x205 x1592))
(assert (x924 x617 (- x695 x1027)))
(assert (x205 x1154))
(assert (x921 x643))
(assert (= (x300 26959946667150639794667015087019630673637144422540572481103610249215) (x297 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x935 x669 x664 x617 x695))
(assert (x442 x668 x1244 x695 x617))
(assert (x205 x1156))
(assert (=> (>= 10000 x856) (= (x297 x856) (x300 x856))))
(assert (= x1560 (=> (and (= x1228 x411) (= x1469 2743102681) (> 2960351575 x1469) (not (< x1469 2690754053)) (= (x60 (x300 x1359) x1496 0) x122) (>= 1461501637330902918203684832716283019655932542975 x1359) (< 0 x1234) (>= x411 0) (<= x868 1461501637330902918203684832716283019655932542975) (= (x1422 (x300 274184521717934524641157099916833587206)) x1234) (<= x411 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x1469 2293535753)) (= (x60 (x300 x268) (x297 3) 0) x1496) (= x1053 (x60 (x300 x868) x122 0)) (= (x1057 x1053) x411) (not (= 2690754053 x1469))) (=> (and (= x360 x1287) (= x1228 x1001) (= (>= x574 x1001) x758) (= x1115 x778)) x640))))
(assert (= x1131 x1561))
(assert (x205 x1114))
(assert (x205 x473))
(assert (= (=> (and (= (= 0 x199) x564) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x1265) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x199) (= (x867 x755) x199) (= x613 (x60 (x300 x953) (x297 6) 0)) (<= 0 x199) (= (x60 (x300 x1265) x613 0) x755)) (and (=> (and (= (x484 (- x953 1)) x632) (not x1309) x564 (= x1309 (> x632 0))) x572) (=> (and (= x1078 x953) (not x564)) x1383))) x770))
(assert (= x497 x223))
(assert (x491 (- x664 x1502)))
(assert (=> (<= x586 10000) (= (x297 x586) (x300 x586))))
(assert (= x637 (and x692 x1582)))
(assert (x201 x1478 x1459))
(assert (x442 x954 x173 x460 x1502))
(assert (=> (>= 10000 x626) (= (x297 x626) (x300 x626))))
(assert (x921 x75))
(assert (x205 x535))
(assert (x205 x317))
(assert (= x1024 (x163 (x300 x1024))))
(assert (x205 x436))
(assert (=> (>= 10000 x951) (= (x297 x951) (x300 x951))))
(assert (x442 x438 x1027 x695 x694))
(assert (=> (<= x850 10000) (= (x297 x850) (x300 x850))))
(assert (x205 x1079))
(assert (= x1413 (x163 (x300 x1413))))
(assert (= (x297 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x300 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x491 (- x1027 x1244)))
(assert (= 0 (x193 x1527)))
(assert (x442 x664 x669 x668 x1244))
(assert (= (=> (= x1118 x1086) x53) x1418))
(assert (x921 x586))
(assert (x935 x664 x669 x617 x695))
(assert (x921 x1441))
(assert (x491 (- x664 x173)))
(assert (x442 x438 x1027 x669 x664))
(assert (x205 x622))
(assert (=> (<= x1209 10000) (= (x297 x1209) (x300 x1209))))
(assert (=> (>= 10000 x83) (= (x297 x83) (x300 x83))))
(assert (= x1477 (x163 (x300 x1477))))
(assert (x205 x1529))
(assert (x491 (- x669 x777)))
(assert (x924 x1027 (- x438 x664)))
(assert (x205 x1263))
(assert (x205 x489))
(assert (x205 x1052))
(assert (x205 x1304))
(assert (x491 (- x617 x173)))
(assert (x491 (- x173 x460)))
(assert (=> (<= x1429 10000) (= (x297 x1429) (x300 x1429))))
(assert (x205 x1161))
(assert (x921 x228))
(assert (= x181 (x163 (x300 x181))))
(assert (x491 x617))
(assert (x205 x17))
(assert (x205 x411))
(assert (x924 x668 (- x1244 x664)))
(assert (x205 x746))
(assert (x921 x106))
(assert (x442 x669 x664 x777 x668))
(assert (x205 x110))
(assert (x442 x668 x1244 x173 x954))
(assert (x921 x198))
(assert (x662 x1408 x1593))
(assert (x491 (- x438 x954)))
(assert (x442 x1502 x460 x1027 x438))
(assert (x491 (- x617 x954)))
(assert (x205 x708))
(assert (x924 x668 (- x777 x460)))
(assert (= true x270))
(assert (x442 x777 x668 x954 x173))
(assert (x205 x932))
(assert (x205 x177))
(assert (x442 x695 x617 x1244 x668))
(assert (x442 x694 x695 x668 x1244))
(assert (x921 x1277))
(assert (x205 x1045))
(assert (=> (>= 10000 x182) (= (x297 x182) (x300 x182))))
(assert (x205 x598))
(assert (x491 (- x617 x1244)))
(assert (x205 x1166))
(assert (x921 x918))
(assert (x921 x399))
(assert (x935 x694 x695 x669 x664))
(assert (= (=> (and (= (>= x394 x828) x1132) (= x1132 x1204) (= x828 x1148)) x1204) x1110))
(assert (x205 x182))
(assert (x205 x808))
(assert (x491 (- x460 x954)))
(assert (=> (<= x75 10000) (= (x297 x75) (x300 x75))))
(assert (x205 x672))
(assert (x442 x695 x694 x777 x668))
(assert (x205 x203))
(assert (= x203 (x163 (x300 x203))))
(assert (x442 x668 x777 x695 x617))
(assert (x935 x617 x695 x1244 x668))
(assert (x107 x1408))
(assert (x491 (- x777 x1027)))
(assert (x205 x337))
(assert (= x1335 (x163 (x300 x1335))))
(assert (x935 x668 x777 x438 x1027))
(assert (x491 (- x1502 x694)))
(assert (x205 x1276))
(assert (x205 x931))
(assert (x205 x734))
(assert (x921 x856))
(assert (x205 x1408))
(assert (=> (>= 10000 x1091) (= (x297 x1091) (x300 x1091))))
(assert (x205 x8))
(assert (= (x163 (x300 x1242)) x1242))
(assert (= (=> (and (= x1291 (x484 (- x1192 1))) (= (> x1291 0) x126)) (and (=> (not x126) x506) (=> x126 x134))) x1038))
(assert (= x538 (x163 (x300 x538))))
(assert (x1146 x357 x719))
(assert (x921 x936))
(assert (x205 x560))
(assert (= x504 x1492))
(assert (x921 x1347))
(assert (x442 x438 x1027 x1244 x668))
(assert (x767 32 x919))
(assert (x442 x777 x668 x695 x694))
(assert (x205 x1515))
(assert (x205 x907))
(assert (x205 x1511))
(assert (x205 x259))
(assert (x491 (- x1502 x664)))
(assert (x921 x793))
(assert (x107 x646))
(assert (x935 x438 x1027 x954 x173))
(assert (x205 x181))
(assert (x205 x1340))
(assert (= (x297 274184521717934524641157099916833587218) (x300 274184521717934524641157099916833587218)))
(assert (x205 x837))
(assert (x205 x1148))
(assert (= x1329 (x163 (x300 x1329))))
(assert (= x1314 (x163 (x300 x1314))))
(assert (x491 (- x1244 x695)))
(assert (x205 x1141))
(assert (x205 x693))
(assert (x921 x1479))
(assert (= (x163 (x300 x198)) x198))
(assert (x924 x954 (- x173 x669)))
(assert (x442 x173 x954 x664 x669))
(assert (x442 x438 x1027 x694 x695))
(assert (x205 x34))
(assert (= 0 (x193 x1297)))
(assert (x921 x1565))
(assert (= 142201243 (x163 (x297 142201243))))
(assert (x491 (- x1244 x617)))
(assert (x205 x265))
(assert (x921 x221))
(assert (x205 x888))
(assert (x921 x846))
(assert (x205 x1241))
(assert (x924 x664 (- x669 x694)))
(assert (x205 x228))
(assert (x491 (- x664 x695)))
(assert (x205 x1010))
(assert (x442 x1027 x438 x617 x695))
(assert (x205 x558))
(assert (= 18446744073709551615 (x163 (x297 18446744073709551615))))
(assert (x205 x1541))
(assert (x924 x1027 (- x438 x1502)))
(assert (x924 x438 (- x1027 x1502)))
(assert (x205 x1088))
(assert (=> (<= x477 10000) (= (x300 x477) (x297 x477))))
(assert (x921 x1449))
(assert (x935 x173 x954 x669 x664))
(assert (x921 x22))
(assert (= x1484 (x163 (x300 x1484))))
(assert (x491 (- x669 x173)))
(assert (= (x163 (x300 x1277)) x1277))
(assert (x442 x173 x954 x1502 x460))
(assert (=> (<= x1477 10000) (= (x300 x1477) (x297 x1477))))
(assert (x491 (- x173 x617)))
(assert (= (and (not x834) x1044) x1047))
(assert (x924 x695 (- x617 x1502)))
(assert (=> (<= x793 10000) (= (x300 x793) (x297 x793))))
(assert (x935 x664 x669 x777 x668))
(assert (x205 x61))
(assert (x205 x1534))
(assert (x442 x695 x694 x1244 x668))
(assert (x924 x777 (- x668 x617)))
(assert (x442 x173 x954 x617 x695))
(assert (x924 x668 (- x777 x694)))
(assert (= (x163 (x300 x278)) x278))
(assert (= x493 x307))
(assert (x442 x1244 x668 x669 x664))
(assert (= x1265 (x163 (x300 x1265))))
(assert (x935 x1502 x460 x694 x695))
(assert (x442 x669 x664 x173 x954))
(assert (x924 x669 (- x664 x954)))
(assert (x935 x777 x668 x1244 x668))
(assert (= x745 (x163 (x300 x745))))
(assert (x205 x1482))
(assert (x205 x651))
(assert (x205 x1096))
(assert (x205 x1293))
(assert (x491 (- x694 x954)))
(assert (x205 x646))
(assert (=> (>= 10000 x918) (= (x300 x918) (x297 x918))))
(assert (x205 x23))
(assert (x442 x1027 x438 x668 x777))
(assert (x205 x857))
(assert (x921 x1512))
(assert (x205 x1048))
(assert (= (=> (and (= x578 (= 0 x1543)) (or (and (= x460 0) (= x1088 0) x578) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x361) (not x578) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x188) (= x453 (x60 (x300 x188) x1440 0)) (= x1440 (x60 (x300 x1543) (x297 10) 0)) (= x1525 (= 0 x361)) (or (and (= 0 x1088) x1525 (= x460 0)) (and (not x1525) (= 1 x1088) (= x361 x460))) (= (x1002 x453) x361) (>= x361 0)))) x369) x568))
(assert (x491 (- x669 x1244)))
(assert (x205 x679))
(assert (= x1598 (=> (= (< x1238 x1192) x415) (and (=> (not x415) x1509) (=> (and (= x1166 x165) x415) x290)))))
(assert (x442 x460 x1502 x777 x668))
(assert (x442 x669 x664 x668 x1244))
(assert (= (x163 (x300 x1420)) x1420))
(assert (= x497 x1432))
(assert (x1294 x1343 x591))
(assert (x442 x664 x669 x695 x694))
(assert (x205 x738))
(assert (x107 x955))
(assert (x924 x669 (- x664 x777)))
(assert (x924 x1244 (- x668 x617)))
(assert (x205 x304))
(assert (x935 x695 x694 x669 x664))
(assert (= x1388 (x163 (x300 x1388))))
(assert (x935 x460 x1502 x438 x1027))
(assert (x491 (- x1502 x695)))
(assert (x491 (- x438 x695)))
(assert (x205 x1452))
(assert (x442 x695 x617 x695 x694))
(assert (x205 x702))
(assert (x442 x668 x777 x1244 x668))
(assert (x1455 x1478))
(assert (=> (>= 10000 x823) (= (x297 x823) (x300 x823))))
(assert (x205 x1112))
(assert (= (x163 (x300 x98)) x98))
(assert (=> (<= x500 10000) (= (x300 x500) (x297 x500))))
(assert (=> (<= x1264 10000) (= (x300 x1264) (x297 x1264))))
(assert (x491 x1027))
(assert (x924 x617 (- x695 x438)))
(assert (x442 x664 x669 x668 x777))
(assert (= x251 (and x1143 x637)))
(assert (= x106 (x163 (x300 x106))))
(assert (x442 x668 x777 x669 x664))
(assert (x491 (- x668 x777)))
(assert (x935 x1502 x460 x954 x173))
(assert (x491 (- x460 x695)))
(assert (= (x300 1986467848) (x297 1986467848)))
(assert (x205 x273))
(assert (x205 x334))
(assert (x442 x617 x695 x777 x668))
(assert (= (x300 1968616202) (x297 1968616202)))
(assert (= (x35 x584) (ite (and (not x170) (not x762) x448 x302) (x417 x584) (ite (and (not x762) x448 (not x302)) (x175 x584) (ite (and x762 x448) (x175 x584) (x13 x584))))))
(assert (=> (>= 10000 x359) (= (x300 x359) (x297 x359))))
(assert (x442 x694 x695 x438 x1027))
(assert (x935 x777 x668 x694 x695))
(assert (= x1600 (and x1286 x251)))
(assert (x491 (- x173 x664)))
(assert (x205 x1379))
(assert (=> (>= 10000 x1543) (= (x300 x1543) (x297 x1543))))
(assert (x205 x1380))
(assert (x491 (- x617 x664)))
(assert (x205 x1565))
(assert (x205 x313))
(assert (x924 x695 (- x694 x1502)))
(assert (x205 x1462))
(assert (x205 x1126))
(assert (= (x163 (x300 x1156)) x1156))
(assert (= (x300 649617121) (x297 649617121)))
(assert (x935 x668 x777 x694 x695))
(assert (x491 (- x460 x664)))
(assert (x935 x438 x1027 x617 x695))
(assert (x205 x339))
(assert (x935 x954 x173 x777 x668))
(assert (=> (<= x1462 10000) (= (x300 x1462) (x297 x1462))))
(assert (x205 x725))
(assert (x205 x870))
(assert (x935 x173 x954 x777 x668))
(assert (x201 x1107 x612))
(assert (x935 x668 x777 x1244 x668))
(assert (x205 x1184))
(assert (x935 x460 x1502 x617 x695))
(assert (x921 x25))
(assert (= x678 (x862 160)))
(assert (x442 x664 x669 x438 x1027))
(assert (x442 x668 x1244 x1502 x460))
(assert (x205 x219))
(assert (x935 x1502 x460 x1244 x668))
(assert (x205 x1447))
(assert (x935 x669 x664 x777 x668))
(assert (x205 x1058))
(assert (x921 x651))
(assert (= x1402 x1308))
(assert (=> (<= x1239 10000) (= (x300 x1239) (x297 x1239))))
(assert (x205 x628))
(assert (x921 x102))
(assert (x205 x1330))
(assert (x491 (- x669 x1027)))
(assert (x935 x438 x1027 x1502 x460))
(assert (x205 x305))
(assert (x205 x603))
(assert (x924 x438 (- x1027 x173)))
(assert (x921 x182))
(assert (x924 x669 (- x664 x694)))
(assert (x205 x1514))
(assert (= (x159 x1053) (ite (and x791 x1561) (x909 x1053) (ite (and x1561 x88 (not x791)) (x909 x1053) (x704 x1053)))))
(assert (= (x297 2743102681) (x300 2743102681)))
(assert (x205 x856))
(assert (x491 (- x668 x694)))
(assert (x921 x868))
(assert (x491 (- x669 x460)))
(assert (= x1293 (x163 (x300 x1293))))
(assert (x924 x173 (- x954 x460)))
(assert (=> (<= x876 10000) (= (x300 x876) (x297 x876))))
(assert (x205 x1307))
(assert (x935 x695 x694 x777 x668))
(assert (x921 x488))
(assert (x924 x695 (- x617 x694)))
(assert (x442 x1027 x438 x669 x664))
(assert (x442 x668 x777 x954 x173))
(assert (x935 x173 x954 x438 x1027))
(assert (x491 (- x954 x664)))
(assert (= x1016 (x163 (x300 x1016))))
(assert (=> (<= x1201 10000) (= (x297 x1201) (x300 x1201))))
(assert (x205 x1261))
(assert (x205 x462))
(assert (x205 x410))
(assert (x205 x1023))
(assert (=> (>= 10000 x953) (= (x297 x953) (x300 x953))))
(assert (= (x297 759532456) (x300 759532456)))
(assert (= (x163 (x300 x1112)) x1112))
(assert (= (x163 (x300 x1197)) x1197))
(assert (= (x297 2690754053) (x300 2690754053)))
(assert (x935 x617 x695 x694 x695))
(assert (x491 (- x1244 x777)))
(assert (x205 x488))
(assert (x491 (- x668 x438)))
(assert (x205 x1443))
(assert (x205 x102))
(assert (x205 x278))
(assert (x924 x954 (- x173 x460)))
(assert (x205 x977))
(assert (x205 x296))
(assert (x924 x1502 (- x460 x1027)))
(assert (x205 x82))
(assert (= (x297 2418364589) (x300 2418364589)))
(assert (x442 x460 x1502 x438 x1027))
(assert (x935 x695 x617 x1244 x668))
(assert (= (=> (and (= (x60 (x300 x586) x559 0) x983) (not (< x1211 x1016)) (= x586 (x147 1461501637330902918203684832716283019655932542975 x1343)) (>= x186 0) (<= 0 x1211) (= (x60 (x300 x314) x983 0) x575) (= x559 (x60 (x300 x1016) (x297 7) 0)) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x314) (<= x1211 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x186 (x414 x575)) (= x74 (< 0 x186)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x186)) (and (=> (and (= x954 x1443) (= x897 (x147 1461501637330902918203684832716283019655932542975 x1175)) (= x156 (x60 (x300 x1016) (x297 9) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1443) (>= x1443 0) (= (x60 (x300 x1449) x156 0) x37) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x1449) (= 0 x131) x74 (= x1443 (x437 x579)) (= x579 (x60 (x300 x897) x37 0))) x434) (=> (not x74) x701))) x689))
(assert (x205 x1551))
(assert (x442 x668 x1244 x695 x694))
(assert (x935 x668 x777 x954 x173))
(assert (x205 x940))
(assert (x921 x83))
(assert (= (x163 (x300 x83)) x83))
(assert (x442 x668 x777 x617 x695))
(assert (x442 x954 x173 x777 x668))
(assert (= (ite (and x448 x1113) (x542 x1571) (x1233 x1571)) (x1595 x1571)))
(assert (x935 x695 x617 x1502 x460))
(assert (x491 (- x438 x1502)))
(assert (x442 x438 x1027 x954 x173))
(assert (x921 x129))
(assert (x491 (- x438 x617)))
(assert (= (x163 (x300 x1115)) x1115))
(assert (= x677 (x163 (x300 x677))))
(assert (x442 x668 x777 x460 x1502))
(assert (x205 x846))
(assert (x924 x668 (- x1244 x438)))
(assert (x924 x669 (- x664 x668)))
(assert (x205 x1442))
(assert (x924 x668 (- x1244 x1502)))
(assert (x205 x1398))
(assert (x442 x1244 x668 x695 x617))
(assert (=> (<= x1023 10000) (= (x300 x1023) (x297 x1023))))
(assert (x442 x695 x617 x1502 x460))
(assert (x205 x1549))
(assert (x442 x695 x617 x954 x173))
(assert (= (x163 (x297 87118632)) 87118632))
(assert (= x306 (=> (= 0 x1086) x53)))
(assert (x442 x668 x777 x668 x1244))
(assert (x205 x109))
(assert (x921 274184521717934524641157099916833587218))
(assert (= (+ (x163 x1361) 1) (x163 (x606 x1361 1))))
(assert (= (=> (and (or (and (= x669 0) (= x1583 0) x1516) (and (= x1583 1) (= (x494 x705) x581) (= x817 (x60 (x300 x677) (x297 9) 0)) (= x1048 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= x581 x669) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x1477) (= (x60 (x300 x1477) x1486 0) x705) (<= 0 x581) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x581) (not x1516) (= (x60 (x300 x1048) x817 0) x1486))) (= x1516 (= x677 0))) x1051) x1607))
(assert (= x1184 (x163 (x300 x1184))))
(assert (x442 x695 x617 x668 x777))
(assert (= x93 (and x820 x126)))
(assert (x205 x1013))
(assert (= (ite (and x448 x1113) (x615 x755) (x1546 x755)) (x867 x755)))
(assert (x491 (- x777 x954)))
(assert (x924 x1027 (- x438 x460)))
(assert (= (x867 x772) (ite (and x448 x1113) (x615 x772) (x1546 x772))))
(assert (x491 (- x694 x695)))
(assert (x491 (- x668 x617)))
(assert (x205 x1371))
(assert (x205 x49))
(assert (x491 (- x664 x460)))
(assert (= (x163 (x606 x229 1)) (+ (x163 x229) 1)))
(assert (=> (>= 10000 x1074) (= (x297 x1074) (x300 x1074))))
(assert (x491 (- x460 x438)))
(assert (x924 x954 (- x173 x668)))
(assert (x935 x694 x695 x1244 x668))
(assert (=> (<= x630 10000) (= (x300 x630) (x297 x630))))
(assert (=> (<= x117 10000) (= (x300 x117) (x297 x117))))
(assert (x205 x864))
(assert (x205 x996))
(assert (x921 x605))
(assert (x924 x1244 (- x668 x695)))
(assert (x205 x871))
(assert (= x1282 (=> (and (= (or x1480 (not x1591)) x512) (= x1480 (and x758 x650)) (= (>= x21 x1414) x650) (= x1414 x492)) (and x512 (=> (and (= x1042 x907) (= 2939843472 x1375) (= x33 true) (= x198 x778) (= x1058 x360) (= 87118632 x1320)) x796)))))
(assert (x442 x1027 x438 x1244 x668))
(assert (x205 x1441))
(assert (x491 (- x694 x1027)))
(assert (x935 x669 x664 x694 x695))
(assert (x205 x45))
(assert (x921 x850))
(assert (x924 x617 x695))
(assert (= (x163 (x300 x75)) x75))
(assert (= (x264 192) (ite (and x1121 x176) (x328 192) (x90 192))))
(assert (x205 x632))
(assert (x491 (- x617 x777)))
(assert (x205 x638))
(assert (x205 x691))
(assert (= (ite (and x791 x1561) (x248 x1381) (ite (and (not x791) x1561 x88) (x1306 x1381) (x94 x1381))) (x414 x1381)))
(assert (x921 x1603))
(assert (=> (>= 10000 x162) (= (x297 x162) (x300 x162))))
(assert (= (x163 (x300 x22)) x22))
(assert (x921 x1413))
(assert (x491 (- x460 x617)))
(assert (x205 x851))
(assert (= x830 x1108))
(assert (x491 x173))
(assert (x921 x679))
(assert (= x1338 (=> (and (= x365 (x60 (x300 x1023) (x297 3) 0)) (not (< x1447 2690754053)) (<= x98 1461501637330902918203684832716283019655932542975) (<= 0 x469) (= x273 x469) (= x1599 (x1422 (x300 274184521717934524641157099916833587206))) (< x1447 2960351575) (= (x909 x227) x469) (= x227 (x60 (x300 x218) x1067 0)) (> x1599 0) (not (< x1447 2293535753)) (= x1447 2743102681) (not (= 2690754053 x1447)) (>= 1461501637330902918203684832716283019655932542975 x218) (<= x469 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1067 (x60 (x300 x98) x365 0))) (=> (and (= x731 x273) (= x975 (<= x731 x1423)) (= x360 x1102) (= x778 x22)) x1365))))
(assert (= (x417 x584) (ite (= x584 x1084) x1224 (x175 x584))))
(assert (x205 x553))
(assert (= (x300 2512682246) (x297 2512682246)))
(assert (x205 x1506))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x163 (x297 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x935 x669 x664 x1502 x460))
(assert (= (=> (and (= (x1422 (x300 274184521717934524641157099916833587206)) x558) (not (= 468353030 x1400)) (< x1400 911411945) (not (> 468353030 x1400)) (<= x688 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1535 (x60 (x300 x441) (x297 7) 0)) (= (x60 (x300 x824) x1535 0) x905) (>= 1461501637330902918203684832716283019655932542975 x1096) (= (x202 x235) x688) (not (= 635128645 x1400)) (> x558 0) (>= x688 0) (<= x824 1461501637330902918203684832716283019655932542975) (= x688 x1371) (= x235 (x60 (x300 x1096) x905 0)) (= x1400 759532456) (> 2293535753 x1400)) (=> (and (= x743 x778) (= x1591 (<= x1157 x1154)) (= x360 x296) (= x1371 x1157)) x573)) x329))
(assert (x205 x1020))
(assert (x205 x1599))
(assert (= 826074471 (x163 (x297 826074471))))
(assert (x205 x399))
(assert (x205 x1499))
(assert (x924 x460 (- x1502 x1244)))
(assert (x924 x1244 (- x668 x1502)))
(assert (x205 x884))
(assert (x442 x777 x668 x664 x669))
(assert (=> (>= 10000 x1265) (= (x300 x1265) (x297 x1265))))
(assert (x491 (- x668 x954)))
(assert (x924 x695 (- x694 x664)))
(assert (x205 x456))
(assert (x205 x915))
(assert (=> (>= 10000 x1565) (= (x297 x1565) (x300 x1565))))
(assert (x921 x137))
(assert (= (x300 2211524764) (x297 2211524764)))
(assert (x205 x253))
(assert (x107 x1180))
(assert (x935 x173 x954 x1502 x460))
(assert (x205 x727))
(assert (x519 x1162 1000000000000000000))
(assert (= x931 (x163 (x300 x931))))
(assert (x205 x1201))
(assert (= (x163 (x300 x593)) x593))
(assert (x205 x1502))
(assert (x921 x477))
(assert (x442 x617 x695 x1027 x438))
(assert (x924 x668 (- x1244 x777)))
(assert (x491 (- x173 x695)))
(assert (x491 (- x664 x438)))
(assert (x205 x427))
(assert (= x820 (and x1235 x1401)))
(assert (x921 x1359))
(assert (= (and x726 x6) x639))
(assert (x935 x695 x694 x954 x173))
(assert (x491 (- x777 x694)))
(assert (x924 x1027 (- x438 x694)))
(assert (= x594 (or x455 (and x1536 x1037) (and x1240 x415))))
(assert (x205 x318))
(assert (= (x163 (x300 x842)) x842))
(assert (x924 x617 (- x695 x694)))
(assert (x205 x1538))
(assert (= (x300 142201243) (x297 142201243)))
(assert (= (x163 (x300 x296)) x296))
(assert (x491 (- x1027 x694)))
(assert (x921 x91))
(assert (=> (<= x1197 10000) (= (x297 x1197) (x300 x1197))))
(assert (x205 x515))
(assert (x205 x1490))
(assert (= (x163 (x297 2798343961)) 2798343961))
(assert (x935 x695 x694 x1502 x460))
(assert (= (x163 (x300 x268)) x268))
(assert (x935 x954 x173 x1502 x460))
(assert (= (x35 x642) (ite (and x302 (not x762) x448 (not x170)) (x417 x642) (ite (and x448 (not x302) (not x762)) (x175 x642) (ite (and x762 x448) (x175 x642) (x13 x642))))))
(assert (x205 x1147))
(assert (=> (>= 10000 x616) (= (x300 x616) (x297 x616))))
(assert (x205 x1224))
(assert (x205 x1588))
(assert (x205 x1273))
(assert (x205 x291))
(assert (x205 x1610))
(assert (x491 (- x777 x438)))
(assert (x921 x181))
(assert (x205 x954))
(assert (x442 x460 x1502 x954 x173))
(assert (x205 x24))
(assert (x205 x1138))
(assert (x205 x677))
(assert (x205 x605))
(assert (x205 x38))
(assert (x205 x538))
(assert (=> (<= x813 10000) (= (x297 x813) (x300 x813))))
(assert (x519 x972 1000000000000000000))
(assert (x205 x569))
(assert (x205 x1071))
(assert (x924 x668 (- x1244 x460)))
(assert (x921 x1429))
(assert (x935 x668 x1244 x777 x668))
(assert (x921 x1102))
(assert (x205 x422))
(assert (x924 x1502 (- x460 x617)))
(assert (x491 (- x173 x694)))
(assert (x924 x777 (- x668 x438)))
(assert (x924 x669 (- x664 x1027)))
(assert (= (=> (and (not (= 2512682246 x34)) (not (> 2293535753 x34)) (>= 1461501637330902918203684832716283019655932542975 x1420) (<= x1176 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1176 x1081) (= x389 (x1422 (x300 274184521717934524641157099916833587206))) (< x34 2690754053) (= x684 (x60 (x300 x382) x895 0)) (> 2960351575 x34) (<= x1264 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x382) (<= 0 x1176) (not (= 2418364589 x34)) (= x1176 (x175 x684)) (= (x60 (x300 x626) (x297 4) 0) x245) (= (x60 (x300 x1264) x125 0) x895) (= x34 2532887486) (not (= 2293535753 x34)) (= x125 (x60 (x300 x1420) x245 0)) (< 0 x389)) (=> (and (= x360 x918) (= x228 x907) (= x778 x1112) (= x1442 x1081) (= x412 (and x582 x633)) (= x633 (<= x1442 x712))) x1155)) x795))
(assert (x935 x695 x617 x669 x664))
(assert (x921 x1184))
(assert (x491 x1472))
(assert (x924 x460 (- x1502 x954)))
(assert (x205 x626))
(assert (x205 x1234))
(assert (x924 x1502 (- x460 x1244)))
(assert (= (x297 2764855426) (x300 2764855426)))
(assert (x205 x1287))
(assert (x921 x1489))
(assert (x924 x777 (- x668 x460)))
(assert (x205 x1206))
(assert (x442 x664 x669 x1502 x460))
(assert (x921 x280))
(assert (x205 x79))
(assert (x442 x668 x1244 x617 x695))
(assert (x924 x1502 (- x460 x668)))
(assert (x205 x1149))
(assert (= x72 (x163 (x300 x72))))
(assert (x921 x1239))
(assert (x921 x1242))
(assert (x924 x1244 (- x668 x777)))
(assert (x205 x665))
(assert (x442 x617 x695 x954 x173))
(assert (x935 x1027 x438 x617 x695))
(assert (= (x163 (x300 x1528)) x1528))
(assert (x924 x695 (- x694 x617)))
(assert (x205 x1016))
(assert (x205 x768))
(assert (x491 (- x669 x954)))
(assert (x491 (- x664 x954)))
(assert (x442 x617 x695 x695 x694))
(assert (x442 x777 x668 x694 x695))
(assert (= x635 (x163 (x300 x635))))
(assert (x442 x1244 x668 x438 x1027))
(assert (x924 x1244 x668))
(assert (=> (>= 10000 x679) (= (x297 x679) (x300 x679))))
(assert (= (ite (= x788 x124) x1207 (x35 x124)) (x1295 x124)))
(assert (x205 x281))
(assert (x205 x361))
(assert (x491 (- x777 x664)))
(assert (x924 x695 (- x617 x954)))
(assert (x935 x173 x954 x617 x695))
(assert (x924 x173 (- x954 x1027)))
(assert (x921 x1335))
(assert (= 2293535753 (x163 (x297 2293535753))))
(assert (= x926 (x163 (x300 x926))))
(assert (x935 x617 x695 x1502 x460))
(assert (x205 x523))
(assert (x921 x1241))
(assert (= (or x567 x741) x217))
(assert (x442 x664 x669 x954 x173))
(assert (x205 x1291))
(assert (x205 x357))
(assert (= (x163 (x300 x1347)) x1347))
(assert (x924 x777 (- x668 x1244)))
(assert (x924 x668 (- x777 x173)))
(assert (x491 (- x777 x460)))
(assert (x924 x664 (- x669 x617)))
(assert (x935 x954 x173 x694 x695))
(assert (=> (>= 10000 x1441) (= (x297 x1441) (x300 x1441))))
(assert (=> (>= 10000 x737) (= (x297 x737) (x300 x737))))
(assert (= (x163 (x300 x951)) x951))
(assert (=> (>= 10000 x922) (= (x300 x922) (x297 x922))))
(assert (x924 x669 (- x664 x460)))
(assert (= (x680 x863) 0))
(assert (= (x979 x1071) (ite (and (not x1572) x814) (x1007 x1071) (x680 x1071))))
(assert (x924 x777 (- x668 x664)))
(assert (= x1462 (x163 (x300 x1462))))
(assert (x924 x173 (- x954 x669)))
(assert (= x117 (x163 (x300 x117))))
(assert (= x1261 (x163 (x300 x1261))))
(assert (= x986 (or (and (not x468) x1152) (and x639 (not x811)))))
(assert (x205 x901))
(assert (and (= (x1187 27 3) 81) (= 27 (x1187 9 3)) (= (x1187 3 3) 9) (= 81 (x1187 9 9))))
(assert (x491 (- x438 x460)))
(assert (x491 (- x1027 x664)))
(assert (=> (<= x926 10000) (= (x300 x926) (x297 x926))))
(assert (x205 x1316))
(assert (x935 x777 x668 x438 x1027))
(assert (= (x163 (x297 468353030)) 468353030))
(assert (=> (<= x672 10000) (= (x297 x672) (x300 x672))))
(assert (x442 x954 x173 x668 x1244))
(assert (x924 x669 (- x664 x1502)))
(assert (=> (>= 10000 x1359) (= (x297 x1359) (x300 x1359))))
(assert (x935 x460 x1502 x694 x695))
(assert (x491 (- x1244 x460)))
(assert (= (=> (and (>= x533 0) (= (x298 x5) x533) (= x5 (x60 (x300 x1194) x42 0)) (<= x533 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x42 (x60 (x300 x1192) (x297 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1211) (not (< x1211 x391)) (<= 0 x1211) (= x260 (= 0 x533)) (= x1194 (x147 1461501637330902918203684832716283019655932542975 x1343))) (and (=> x260 x1030) (=> (and (= x699 x460) (= x611 (x60 (x300 x1192) (x297 10) 0)) (not x260) (= (x1002 x556) x699) (<= 0 x699) (= 0 x1088) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x181) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x699) (= x556 (x60 (x300 x181) x611 0))) x369))) x364))
(assert (x205 x554))
(assert (x491 (- x1244 x694)))
(assert (x442 x1502 x460 x669 x664))
(assert (=> (<= x91 10000) (= (x300 x91) (x297 x91))))
(assert (x924 x664 (- x669 x668)))
(assert (x205 x743))
(assert (x491 1000000000000000000))
(assert (= (=> (and (not (= 2512682246 x1500)) (= x492 x489) (> 2690754053 x1500) (not (> 2293535753 x1500)) (= (x1422 (x300 274184521717934524641157099916833587206)) x1341) (> x1341 0) (= x124 (x60 (x300 x970) x404 0)) (= x489 (x994 x124)) (>= 1461501637330902918203684832716283019655932542975 x813) (<= 0 x489) (<= x951 1461501637330902918203684832716283019655932542975) (= x1500 2532887486) (= x1065 (x60 (x300 x399) (x297 4) 0)) (not (= x1500 2293535753)) (> 2960351575 x1500) (not (= x1500 2418364589)) (= (x60 (x300 x813) x928 0) x404) (= x928 (x60 (x300 x951) x1065 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x489) (>= 1461501637330902918203684832716283019655932542975 x970)) x1282) x1357))
(assert (=> (<= x1326 10000) (= (x297 x1326) (x300 x1326))))
(assert (=> (<= x181 10000) (= (x297 x181) (x300 x181))))
(assert (= x447 (and x1555 x978)))
(assert (x205 x1368))
(assert (= x596 (x163 (x300 x596))))
(assert (x205 x882))
(assert (x924 x173 (- x954 x668)))
(assert (x491 (- x460 x668)))
(assert (x205 x1265))
(assert (=> (<= x808 10000) (= (x297 x808) (x300 x808))))
(assert (= (x297 2835717307) (x300 2835717307)))
(assert (=> (>= 10000 x1358) (= (x300 x1358) (x297 x1358))))
(assert (x491 (- x694 x669)))
(assert (x442 x1027 x438 x460 x1502))
(assert (x921 x1421))
(assert (x205 x1513))
(assert (x442 x694 x695 x1027 x438))
(assert (= x1406 (and (not x51) x1104)))
(assert (= x14 (or (and x1044 x834) (and x1025 x447))))
(assert (x921 x1074))
(assert (x491 (- x1502 x438)))
(assert (x924 x668 (- x1244 x668)))
(assert (x205 x367))
(assert (x491 (- x668 x664)))
(assert (x921 x1388))
(assert (x205 x1017))
(assert (x205 x1420))
(assert (x205 x276))
(assert (x491 (- x460 x777)))
(assert (x205 x1578))
(assert (x205 x1211))
(assert (x205 x1503))
(assert (x491 (- x664 x694)))
(assert (x205 x818))
(assert (= (x163 (x300 x1603)) x1603))
(assert (x442 x1027 x438 x173 x954))
(assert (= (=> (and (= (x1003 (x300 274184521717934524641157099916833587206)) x1416) (<= 0 x1503) (>= x907 0) (= x778 x500) (= x952 false) (<= x627 1461501637330902918203684832716283019655932542975) (= (x1003 (x300 274184521717934524641157099916833587214)) x776) (= x190 (x1003 (x300 274184521717934524641157099916833587218))) (= x627 x191) x1111 (>= 1461501637330902918203684832716283019655932542975 x778) (<= 0 x190) (= x1213 false) (<= x907 1461501637330902918203684832716283019655932542975) (= x1111 (< 0 (x1422 (x300 274184521717934524641157099916833587218)))) (>= x1416 0) (>= 1461501637330902918203684832716283019655932542975 x1503) (= x403 (> (x1422 (x300 274184521717934524641157099916833587206)) 0)) (>= x778 0) (= (> (x1422 (x300 274184521717934524641157099916833587214)) 0) x1437) (<= x381 1461501637330902918203684832716283019655932542975) (<= 0 x776) (<= 0 x627) x403 (= 5 x545) (= x259 2939843472) (= false x136) (= x209 false) (<= 0 x381) (= x1503 x1558) x1437 (= x360 x25)) x355) x1584))
(assert (x205 x293))
(assert (x442 x617 x695 x460 x1502))
(assert (x924 x1502 (- x460 x438)))
(assert (x205 x1139))
(assert (x205 x386))
(assert (x921 x1058))
(assert (= (x35 x1183) (ite (and (not x762) (not x170) x302 x448) (x417 x1183) (ite (and x448 (not x302) (not x762)) (x175 x1183) (ite (and x762 x448) (x175 x1183) (x13 x1183))))))
(assert (= (x163 (x300 x488)) x488))
(assert (= (x163 (x300 x1287)) x1287))
(assert (=> (<= x1413 10000) (= (x300 x1413) (x297 x1413))))
(assert (x935 x668 x1244 x954 x173))
(assert (x205 x827))
(assert (= x651 (x163 (x300 x651))))
(assert (x205 x1024))
(assert (=> (<= x399 10000) (= (x300 x399) (x297 x399))))
(assert (= x195 x311))
(assert (x491 (- x173 x1244)))
(assert (x205 x1478))
(assert (x924 x617 (- x695 x664)))
(assert (= 0 (x552 x349)))
(assert (= x1554 x432))
(assert (x442 x617 x695 x173 x954))
(assert (x442 x777 x668 x438 x1027))
(assert (x205 x1239))
(assert (x107 x357))
(assert (x491 x954))
(assert (x491 (- x1244 x669)))
(assert (x205 x1186))
(assert (x924 x1027 (- x438 x669)))
(assert (= x441 (x163 (x300 x441))))
(assert (x491 (- x954 x438)))
(assert (= (x297 2258409472) (x300 2258409472)))
(assert (x205 x1160))
(assert (= x1058 (x163 (x300 x1058))))
(assert (x205 x831))
(assert (x935 x695 x617 x954 x173))
(assert (x107 x1343))
(assert (=> (<= x1102 10000) (= (x300 x1102) (x297 x1102))))
(assert (=> (<= x977 10000) (= (x300 x977) (x297 x977))))
(assert (= x506 (=> (= 0 x1543) x568)))
(assert (x935 x438 x1027 x1244 x668))
(assert (x921 x876))
(assert (x442 x695 x694 x669 x664))
(assert (x1455 x196))
(assert (x205 x1327))
(assert (x205 x685))
(assert (x491 (- x695 x1502)))
(assert (x924 x1244 (- x668 x694)))
(assert (x491 (- x777 x669)))
(assert (x205 x532))
(assert (= (=> (and (= x85 (x60 (x300 x1441) (x297 9) 0)) (<= x793 1461501637330902918203684832716283019655932542975) (<= x477 1461501637330902918203684832716283019655932542975) (= (x60 (x300 x477) x1391 0) x1182) (<= x110 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1260 69947311)) (> 468353030 x1260) (= 142201243 x1260) (= x1391 (x60 (x300 x793) x85 0)) (< x1260 911411945) (< x1260 2293535753) (> x446 0) (= x446 (x1422 (x300 274184521717934524641157099916833587206))) (<= 0 x110) (= x1379 x110) (= x110 (x494 x1182)) (not (= 87118632 x1260))) (=> (and (= (and x267 x1471) x582) (= x698 0) (= x778 x630) (= x1471 (> x1019 0)) (= x1019 x1379) (= x360 x1347)) x1216)) x1219))
(assert (= 2061678023 (x163 (x297 2061678023))))
(assert (=> (>= 10000 x268) (= (x300 x268) (x297 x268))))
(assert (x205 x992))
(assert (x442 x695 x694 x664 x669))
(assert (x924 x664 (- x669 x1244)))
(assert (x205 x299))
(assert (= (ite (and x814 (not x1572)) (x720 x349) (x552 x349)) (x592 x349)))
(assert (x205 x1423))
(assert (= (x163 (x300 x1534)) x1534))
(assert (x924 x617 (- x695 x668)))
(assert (x935 x664 x669 x438 x1027))
(assert (= (x297 18446744073709551615) (x300 18446744073709551615)))
(assert (x442 x694 x695 x173 x954))
(assert (x442 x173 x954 x668 x1244))
(assert (x924 x668 (- x777 x438)))
(assert (=> (<= x576 10000) (= (x297 x576) (x300 x576))))
(assert (x205 x25))
(assert (x442 x617 x695 x1502 x460))
(assert (= x830 x1308))
(assert (x205 x467))
(assert (x205 x507))
(assert (=> (>= 10000 x987) (= (x300 x987) (x297 x987))))
(assert (x205 x475))
(assert (x491 (- x668 x1502)))
(assert (=> (>= 10000 x1024) (= (x297 x1024) (x300 x1024))))
(assert (x921 x1293))
(assert (x442 x669 x664 x694 x695))
(assert (x442 x664 x669 x1027 x438))
(assert (x935 x1027 x438 x954 x173))
(assert (= x382 (x163 (x300 x382))))
(assert (x491 x669))
(assert (= (=> (and (not (= 1968616202 x765)) (not (= x765 1986467848)) (not (< x765 1968616202)) (= x1181 (x60 (x300 x25) (x297 6) 0)) (not (< x765 911411945)) (= 2258409472 x765) (<= x500 1461501637330902918203684832716283019655932542975) (not (= 2061678023 x765)) (= x991 x966) (= x31 (x60 (x300 x500) x1181 0)) (not (= x765 2211524764)) (< x765 2293535753) (= x966 (x298 x31)) (>= x966 0) (= x436 (x1422 (x300 274184521717934524641157099916833587206))) (< 0 x436) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x966)) (=> (and (= x1010 x360) (= x991 x1) (= x778 x1293) (= x102 x907)) x1597)) x355))
(assert (x924 x695 (- x617 x1027)))
(assert (x924 x695 (- x694 x460)))
(assert (= (x163 (x300 x808)) x808))
(assert (x205 x292))
(assert (x491 (- x669 x617)))
(assert (x924 x173 (- x954 x664)))
(assert (x205 x1173))
(assert (= (x163 (x300 x616)) x616))
(assert (=> (<= x708 10000) (= (x297 x708) (x300 x708))))
(assert (x205 x548))
(assert (x205 x1189))
(assert (= x1085 (x163 (x300 x1085))))
(assert (= (=> (= x401 x1543) x568) x1043))
(assert (x205 x688))
(assert (x442 x695 x617 x1027 x438))
(assert (=> (>= 10000 x1538) (= (x300 x1538) (x297 x1538))))
(assert (=> (>= 10000 x1528) (= (x300 x1528) (x297 x1528))))
(assert (=> (>= 10000 x294) (= (x300 x294) (x297 x294))))
(assert (=> (>= 10000 x1016) (= (x300 x1016) (x297 x1016))))
(assert (x921 x1189))
(assert (x205 x721))
(assert (x935 x1502 x460 x617 x695))
(assert (x205 x1314))
(assert (x935 x694 x695 x438 x1027))
(assert (= x1315 (x163 (x300 x1315))))
(assert (x205 x310))
(assert (x442 x1502 x460 x617 x695))
(assert (x924 x1244 (- x668 x669)))
(assert (x924 x954 (- x173 x1027)))
(assert (x205 x43))
(assert (x921 x1201))
(assert (x205 x314))
(assert (= (=> (and (= x953 (x484 (- x1016 1))) (= x1286 (> x953 0))) (and (=> x1286 x770) (=> (not x1286) x572))) x353))
(assert (x924 x695 (- x617 x460)))
(assert (x1455 1000000000000000000))
(assert (x205 x1019))
(assert (x491 (- x777 x695)))
(assert (x205 x953))
(assert (x205 x408))
(assert (x935 x438 x1027 x694 x695))
(assert (x442 x954 x173 x694 x695))
(assert (=> (<= x1189 10000) (= (x297 x1189) (x300 x1189))))
(assert (= x1201 (x163 (x300 x1201))))
(assert (x205 x1179))
(assert (x205 x1366))
(assert (x205 x165))
(assert (= (x163 (x300 x1358)) x1358))
(assert (x205 x401))
(assert (x205 x1417))
(assert (x924 x438 (- x1027 x695)))
(assert (= (=> (and (not (> x1016 x1211)) (= (= x1578 0) x763) (= x1578 (x867 x742)) (= x1395 (x60 (x300 x1016) (x297 6) 0)) (<= x1211 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x987 (x147 1461501637330902918203684832716283019655932542975 x1343)) (>= x1578 0) (<= 0 x1211) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1578) (= x742 (x60 (x300 x987) x1395 0))) (and (=> x763 x1040) (=> (and (<= 0 x1179) (= (x60 (x300 x1016) (x297 10) 0) x1097) (= x359 (x147 1461501637330902918203684832716283019655932542975 x1343)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1179) (not x763) (= x1179 (x377 x40)) (= (x60 (x300 x359) x1097 0) x40) (= x1027 x1179) (= x999 0)) x342))) x70))
(assert (= x78 (and x675 (not x74))))
(assert (x491 x694))
(assert (= x1189 (x163 (x300 x1189))))
(assert (x921 x354))
(assert (x442 x668 x777 x173 x954))
(assert (= (x297 1000000000000000000) (x300 1000000000000000000)))
(assert (x924 x460 (- x1502 x438)))
(assert (x921 x1528))
(assert (x442 x954 x173 x668 x777))
(assert (x205 x777))
(assert (x205 x863))
(assert (= x813 (x163 (x300 x813))))
(assert (= x1051 (=> (and (= (= x1583 0) x247) (or (and (= x510 (x60 (x300 x538) x1552 0)) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x856) (= x538 (x147 1461501637330902918203684832716283019655932542975 x1175)) (= x1552 (x60 (x300 x856) x1576 0)) (= x1576 (x60 (x300 x1192) (x297 9) 0)) (not x247)) x247) (= x791 (= 0 x669)) (or (and (= x823 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x1307) (= x710 (x60 (x300 x1192) (x297 7) 0)) x791 (= (x60 (x300 x1307) x385 0) x1474) (= x250 x165) (= x385 (x60 (x300 x823) x710 0))) (and (= (= x664 0) x88) (= (x1360 (+ x1301 192)) x1488) (= (x659 x1168) x857) (<= x1573 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x842) (= x363 (x60 (x300 x842) x1604 0)) (= x1523 (x60 (x300 x278) x363 0)) (= x1168 (x1360 (+ x1301 160))) (<= 0 x422) (= x1573 (x957 x1523)) (<= x422 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= x226 (x60 (x300 x1314) x133 0)) (= x133 (x60 (x300 x850) x722 0)) (= x1398 x900) (= x1189 (x147 1461501637330902918203684832716283019655932542975 x1175)) (= (+ x900 x1098) x859) (<= x941 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x1314) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x128) (= (x60 (x300 x1189) x1334 0) x869) (= x866 x1398) (= x1488 x250) (>= x941 0) (= (x60 (x300 x1192) (x297 3) 0) x722) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1187 x669 x664)) (= x866 (x1187 x669 x664)) (= x850 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= (x60 (x300 x128) x645 0) x1334) (not x88) (< (+ x941 x1398) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x941 x1098) (= x645 (x60 (x300 x1192) (x297 7) 0)) (= (x909 x226) x941)) (and x88 (= x1488 x250) (= x1196 (x147 1461501637330902918203684832716283019655932542975 x1175)) (= x154 (x60 (x300 x1196) x696 0)) (= (x60 (x300 x1192) (x297 7) 0) x1467) (= x696 (x60 (x300 x1335) x1467 0)) (= x1335 (x147 1461501637330902918203684832716283019655932542975 x1343)))) (<= 0 x1083) (= (x606 x934 1) x1073) (>= x1573 0) (= x1604 (x60 (x300 x1192) (x297 7) 0)) (= x934 (x60 (x300 x1192) (x297 1) 0)) (or (and (not x30) (= 0 x664)) (and (or (and (= x418 (x1272 x165)) (= x664 x1263) x1056 (not (< x1513 x418)) (= x1263 (x484 (- x1513 x418)))) (and (= x451 604800) (= x224 x664) (not x1056) (not (> x1573 x1513)) (= x1079 (x484 (- x1513 x1573))) (= x224 (ite (< x1079 604800) x1079 604800)))) x30 (or (and (= x644 x1513) (not x1055)) (and (= (x659 x1168) x1200) (= x1200 x1513) x1055)) (= (x659 x1168) x145) (= (> x644 x145) x1055) (= x1056 (= x1573 0)))) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x278) (= (x373 x934) x422) (= (> x857 x1573) x30) (not x791) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1083) (= (x686 x1073) x1083)))) x364)))
(assert (=> (<= x283 10000) (= (x297 x283) (x300 x283))))
(assert (=> (<= x1170 10000) (= (x297 x1170) (x300 x1170))))
(assert (x442 x173 x954 x668 x777))
(assert (x921 x45))
(assert (x205 x370))
(assert (x921 274184521717934524641157099916833587206))
(assert (x921 x1315))
(assert (x924 x954 x173))
(assert (x205 x1433))
(assert (x921 x693))
(assert (= x1307 (x163 (x300 x1307))))
(assert (x442 x695 x694 x173 x954))
(assert (x924 x954 (- x173 x695)))
(assert (= x102 (x163 (x300 x102))))
(assert (x924 x669 (- x664 x617)))
(assert (x924 x668 (- x777 x1244)))
(assert (x921 x1265))
(assert (= x1597 (=> (and (<= x1293 1461501637330902918203684832716283019655932542975) (< x871 2293535753) (> 911411945 x871) (not (= 468353030 x871)) (not (= x871 635128645)) (= x551 x1125) (> x318 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1125) (= x1125 (x957 x144)) (<= x102 1461501637330902918203684832716283019655932542975) (= x871 759532456) (= (x60 (x300 x102) x518 0) x144) (= x518 (x60 (x300 x1293) x211 0)) (= x318 (x1422 (x300 274184521717934524641157099916833587206))) (not (< x871 468353030)) (>= x1125 0) (= (x60 (x300 x1010) (x297 7) 0) x211)) (=> (and (= x1242 x360) x19 (= x19 (>= x1567 x1)) (= x778 x1248) (= x551 x1567)) x885))))
(assert (x205 x1042))
(assert (= (ite (= x788 x1084) x1224 (x175 x788)) (x417 x788)))
(assert (x491 (- x173 x1027)))
(assert (x205 x682))
(assert (= (=> (and (= x942 (x60 (x300 x1327) (x297 6) 0)) (not (= 1968616202 x1387)) (= x1129 (x60 (x300 x738) x942 0)) (>= 1461501637330902918203684832716283019655932542975 x738) (<= 0 x1126) (> x888 0) (not (> 911411945 x1387)) (not (= 1986467848 x1387)) (not (= x1387 2061678023)) (= (x1410 x1129) x1126) (not (> 1968616202 x1387)) (= x1387 2258409472) (= x553 x1126) (= x888 (x1422 (x300 274184521717934524641157099916833587206))) (> 2293535753 x1387) (<= x1126 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1387 2211524764))) (=> (and (= x778 x824) (= x1154 x553) (= x1096 x907) (= x441 x360)) x329)) x89))
(assert (= (or (and (not x1143) x637) (and x1600 (not x564))) x509))
(assert (x205 x113))
(assert (= x701 (=> (= (> x1016 0) x55) (and (=> (not x55) x306) (=> x55 x865)))))
(assert (=> (<= x488 10000) (= (x297 x488) (x300 x488))))
(assert (= (x163 (x300 x1241)) x1241))
(assert (x442 x173 x954 x1027 x438))
(assert (x205 x1413))
(assert (x205 x173))
(assert (x205 x993))
(assert (=> (<= x198 10000) (= (x300 x198) (x297 x198))))
(assert (x205 x190))
(assert (x205 x1301))
(assert (x205 x522))
(assert (= (x163 (x300 x1017)) x1017))
(assert (x442 x669 x664 x438 x1027))
(assert (= (x163 (x297 2960351575)) 2960351575))
(assert (=> (>= 10000 x1489) (= (x297 x1489) (x300 x1489))))
(assert (x442 x664 x669 x1244 x668))
(assert (= x25 (x163 (x300 x25))))
(assert (x205 x1100))
(assert (x924 x668 (- x1244 x954)))
(assert (x442 x617 x695 x669 x664))
(assert (x205 x86))
(assert (x924 x664 (- x669 x1027)))
(assert (x205 x1081))
(assert (x205 x1562))
(assert (= (or x217 (and (not x260) x1131)) x448))
(assert (=> (>= 10000 x188) (= (x300 x188) (x297 x188))))
(assert (x205 x243))
(assert (= 2532887486 (x163 (x297 2532887486))))
(assert (x205 x1484))
(assert (x921 x672))
(assert (= x1102 (x163 (x300 x1102))))
(assert (x442 x954 x173 x695 x617))
(assert (= (ite (and x1113 x448) (x615 x742) (x1546 x742)) (x867 x742)))
(assert (x921 x576))
(assert (x442 x668 x1244 x694 x695))
(assert (= (x163 (x297 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= x1326 (x163 (x300 x1326))))
(assert (= (x163 (x300 x626)) x626))
(assert (x205 x433))
(assert (x205 x1228))
(assert (=> (<= x1388 10000) (= (x300 x1388) (x297 x1388))))
(assert (x205 x955))
(assert (x924 x695 (- x694 x669)))
(assert (= (x328 160) 0))
(assert (= (x300 911411945) (x297 911411945)))
(assert (x491 (- x1027 x954)))
(assert (x442 x460 x1502 x664 x669))
(assert (= (or x14 (and x1555 (not x978)) (and (not x601) x594)) x760))
(assert (= x1359 (x163 (x300 x1359))))
(assert (x205 x454))
(assert (x205 x1249))
(assert (x107 x515))
(assert (x205 x815))
(assert (x921 x833))
(assert (= x134 (=> (and (<= 0 x1270) (= (x298 x1431) x1270) (= x812 (= x1270 0)) (= (x60 (x300 x1291) (x297 6) 0) x1106) (= (x60 (x300 x280) x1106 0) x1431) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1270) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x280)) (and (=> (and (= x401 x1291) (not x812)) x1043) (=> (and (= x1062 (> x1319 0)) (= (x484 (- x1291 1)) x1319) x812 (not x1062)) x506)))))
(assert (x205 x853))
(assert (x205 x98))
(assert (x205 x918))
(assert (x205 x1472))
(assert (x205 x683))
(assert (x519 x196 1000000000000000000))
(assert (=> (<= x228 10000) (= (x297 x228) (x300 x228))))
(assert (x924 x617 (- x695 x1244)))
(assert (= x743 (x163 (x300 x743))))
(assert (x205 x744))
(assert (x205 x1419))
(assert (= (x163 (x300 x1185)) x1185))
(assert (x935 x954 x173 x438 x1027))
(assert (x442 x954 x173 x617 x695))
(assert (= (x517 192) (x264 192)))
(assert (=> (<= x1335 10000) (= (x300 x1335) (x297 x1335))))
(assert (x205 x325))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1177) (= x1177 x1545) (not (< x325 2690754053)) (= x1177 (x1057 x152)) (not (= 2690754053 x325)) (= x57 (x1422 (x300 274184521717934524641157099916833587206))) (= x956 (x60 (x300 x198) x1299 0)) (>= 1461501637330902918203684832716283019655932542975 x198) (< 0 x57) (= x152 (x60 (x300 x1042) x956 0)) (> 2960351575 x325) (= x1299 (x60 (x300 x1058) (x297 3) 0)) (not (< x325 2293535753)) (<= x1042 1461501637330902918203684832716283019655932542975) (= 2743102681 x325) (>= x1177 0)) (=> (and (= x294 x381) (= x360 x745) (= x907 x693) (= x778 x243) (= x394 x1545)) x9)) x796))
(assert (x205 x258))
(assert (x205 x1319))
(assert (= (ite (and x1113 x448) (x542 x671) (x1233 x671)) (x1595 x671)))
(assert (x921 x1477))
(assert (x442 x1244 x668 x664 x669))
(assert (x205 x1091))
(assert (x924 x1502 (- x460 x695)))
(assert (x205 x1339))
(assert (x924 x460 (- x1502 x173)))
(assert (= (x163 (x300 x218)) x218))
(assert (x205 x1504))
(assert (= (x417 x124) (ite (= x124 x1084) x1224 (x175 x124))))
(assert (x442 x668 x777 x694 x695))
(assert (x205 x678))
(assert (x205 x656))
(assert (x491 (- x1027 x777)))
(assert (x491 (- x694 x438)))
(assert (= (or x904 (and x797 (not x763))) x455))
(assert (= x1042 (x163 (x300 x1042))))
(assert (x924 x438 (- x1027 x460)))
(assert (=> (>= 10000 x314) (= (x297 x314) (x300 x314))))
(assert (= x824 (x163 (x300 x824))))
(assert (x921 x922))
(assert (=> (>= 10000 x738) (= (x300 x738) (x297 x738))))
(assert (x205 x881))
(assert (x921 x897))
(assert (x205 x188))
(assert (x491 x933))
(assert (= x434 (=> (and (or (and (= x478 (x686 x28)) (= (> x1380 x569) x849) (or (and (= (x60 (x300 x926) x1456 0) x1259) (= x846 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= x1456 (x60 (x300 x1016) (x297 7) 0)) (= (x1187 x954 x173) x1229) (= (x159 x160) x275) (= (x60 (x300 x1016) (x297 3) 0) x561) (= (x60 (x300 x846) x561 0) x1188) (<= 0 x275) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x275 x508)) (not x322) (= x323 x275) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x275) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x454) (= x711 x508) (= (+ x323 x711) x1549) (< (x1187 x954 x173) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x160 (x60 (x300 x454) x1188 0)) (= x926 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= x1531 x1482) (= x1229 x508) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x488) (= x1609 (x60 (x300 x488) x1259 0))) (and (= (x60 (x300 x1016) (x297 7) 0) x392) x322 (= x1482 x1531) (= x346 (x60 (x300 x1565) x981 0)) (= x981 (x60 (x300 x1091) x392 0)) (= x1091 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x1565))) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x75) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x569) (= x1421 (x147 1461501637330902918203684832716283019655932542975 x1175)) (>= x569 0) (= x109 (x373 x1361)) (<= x109 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x60 (x300 x1016) (x297 7) 0) x1117) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x478) (= x423 (x60 (x300 x75) x1117 0)) (= x219 (x1360 (+ x250 96))) (= x1361 (x60 (x300 x1016) (x297 1) 0)) (= x1380 (x873 x219)) (= (x606 x1361 1) x28) (= (= 0 x173) x322) (= (x1360 (+ 128 x250)) x1531) (<= 0 x478) (>= x109 0) (not x1495) (= (x60 (x300 x1421) x423 0) x1457) (= x569 (x414 x1457)) (or (and (= x1476 (x873 x219)) (or (and (= 604800 x43) (not x1246) (not (> x569 x1045)) (= (x484 (- x1045 x569)) x1611) (= x334 x173) (= x334 (ite (< x1611 604800) x1611 604800))) (and (= (x484 (- x1045 x498)) x1530) x1246 (= x173 x1530) (not (> x498 x1045)) (= (x1257 x683) x498))) (= (> x644 x1476) x332) (= x1246 (= 0 x569)) x849 (or (and x332 (= x1045 x153) (= x153 (x873 x219))) (and (not x332) (= x644 x1045)))) (and (= 0 x173) (not x849)))) (and (= x1032 (x147 1461501637330902918203684832716283019655932542975 x1175)) (= x977 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= x600 (x60 (x300 x1016) (x297 7) 0)) (= x683 x1482) x1495 (= (x60 (x300 x1032) x1274 0) x753) (= (x60 (x300 x977) x600 0) x1274))) (or (and (= (x147 1461501637330902918203684832716283019655932542975 x1343) x602) (= x749 (x147 1461501637330902918203684832716283019655932542975 x1175)) (not x1094)) x1094) (= (= x131 0) x1094) (= (= 0 x954) x1495)) x70)))
(assert (x205 x1489))
(assert (=> (>= 10000 x1032) (= (x300 x1032) (x297 x1032))))
(assert (x205 x1310))
(assert (= 604800 (x163 (x297 604800))))
(assert (x491 (- x777 x1244)))
(assert (= x1030 (=> (= x1269 (< 0 x1192)) (and (=> (not x1269) x506) (=> x1269 x47)))))
(assert (= (=> (and (= x410 (x484 (- x1016 1))) (= (> x410 0) x726)) (and (=> x726 x65) (=> (not x726) x306))) x1254))
(assert (x205 x206))
(assert (x205 x1469))
(assert (x924 x669 (- x664 x1244)))
(assert (x921 x1329))
(assert (x205 x1159))
(assert (x205 x1543))
(assert (x921 x1017))
(assert (x924 x1027 (- x438 x777)))
(assert (= (x1295 x284) (ite (= x788 x284) x1207 (x35 x284))))
(assert (x924 x695 (- x617 x695)))
(assert (= (x163 (x300 x708)) x708))
(assert (x205 x1178))
(assert (= 0 (x193 x183)))
(assert (= x1579 x311))
(assert (x205 x1347))
(assert (= (x163 (x300 x243)) x243))
(assert (x924 x668 (- x777 x664)))
(assert (x935 x1244 x668 x617 x695))
(assert (x205 x1553))
(assert (x205 x381))
(assert (x491 (- x694 x460)))
(assert (=> (<= x897 10000) (= (x297 x897) (x300 x897))))
(assert (= (x163 (x300 x1248)) x1248))
(assert (= (x297 2532887486) (x300 2532887486)))
(assert (= x112 x760))
(assert (= (x193 x96) 0))
(assert (= (x163 (x297 759532456)) 759532456))
(assert (= 649617121 (x163 (x297 649617121))))
(assert (=> (<= x243 10000) (= (x300 x243) (x297 x243))))
(assert (x205 x1429))
(assert (= x128 (x163 (x300 x128))))
(assert (x205 x1202))
(assert (= (x163 (x300 x918)) x918))
(assert (x924 x1244 (- x668 x1027)))
(assert (x924 x1244 (- x668 x173)))
(assert (x442 x1502 x460 x173 x954))
(assert (= 274184521717934524641157099916833587214 (x163 (x300 274184521717934524641157099916833587214))))
(assert (= (x163 (x300 x1264)) x1264))
(assert (= x1240 x1121))
(assert (x205 x383))
(assert (x924 x668 (- x777 x668)))
(assert (=> (>= 10000 x1314) (= (x297 x1314) (x300 x1314))))
(assert (x491 x777))
(assert (=> (>= 10000 x128) (= (x297 x128) (x300 x128))))
(assert (x924 x1027 (- x438 x173)))
(assert (x442 x438 x1027 x695 x617))
(assert (x205 x674))
(assert (x935 x1027 x438 x777 x668))
(assert (x1455 x1162))
(assert (x491 (- x617 x1502)))
(assert (x205 x1277))
(assert (x442 x664 x669 x695 x617))
(assert (x921 x278))
(assert (x205 x441))
(assert (x205 x429))
(assert (x924 x695 (- x694 x777)))
(assert (=> (<= x1196 10000) (= (x300 x1196) (x297 x1196))))
(assert (x205 x1458))
(assert (x442 x777 x668 x1027 x438))
(assert (= (x163 (x300 x1096)) x1096))
(assert (x205 x1118))
(assert (x924 x438 (- x1027 x668)))
(assert (= x135 (=> (= x978 (> x919 1)) (and (=> (not x978) x46) (=> (and x978 (= x1551 (x757 128)) (= x426 (x484 (- x768 32))) (= (x285 x81) x1388) (= x1463 (< 0 x628)) (= (> x560 0) x216) (= (x1089 192) x1271) (= x996 (x1360 (+ x548 36))) (= (x1360 (+ 68 x548)) x1223) (= (x1360 (+ x548 100)) x4) (= (x1360 (+ x996 128)) x881) (= (x1360 (+ x1511 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x258) (= (x1230 x702) x357) (= x985 0) (= (x484 (- x4 x548)) x768) (or (not x1093) (and x1093 (= x1114 (x1360 (+ x628 x881))))) (= x560 (x1422 (x300 x1388))) (= x81 (x1360 (+ x118 64))) (= x702 (x1360 (+ 32 x548))) (< 1 x1551) (<= x1388 1461501637330902918203684832716283019655932542975) (> x919 1) (= (x798 x548) x628) (or (and (= x277 x881) (= x685 (x16 x183)) (= x702 x183) (or (and (= 32 x421) (not x1284)) (and (= x537 (> x628 64)) (or (and (or (and (= x421 96) (not x766)) (and (= x1367 (< 128 x628)) (= (x1360 (+ x548 128)) x1186) (= (x16 x1186) x50) (= x665 (x1360 (+ 160 x4))) (= x421 128) (not x1367) x766)) (= x847 (x1360 (+ x548 96))) (= x721 (x1360 (+ x4 128))) x537 (= x766 (> x628 96)) (= x61 (x16 x847))) (and (not x537) (= 64 x421))) (= x367 (x16 x281)) x1284 (= x754 (x1360 (+ 96 x4))) (= x281 (x1360 (+ 64 x548))))) (= x1284 (> x628 32)) x1463) (and (= x421 0) (not x1463))) (= x1511 (x147 26959946667150639794667015087019630673637144422540572481103610249215 x357)) x216 (= (> x421 x628) x1093) (= x179 (x147 1461501637330902918203684832716283019655932542975 x1175))) x803)))))
(assert (x442 x669 x664 x460 x1502))
(assert (x205 x1593))
(assert (x442 x694 x695 x695 x617))
(assert (x205 x1012))
(assert (= (x163 (x297 2939843472)) 2939843472))
(assert (x491 (- x1502 x1027)))
(assert (= (=> (and (= (x484 (- x1192 1)) x616) (= x621 (< 0 x616))) (and (=> x621 x252) (=> (not x621) x658))) x1046))
(assert (= (x163 (x300 x359)) x359))
(assert (x491 (- x617 x438)))
(assert (x924 x954 (- x173 x438)))
(assert (= (x163 (x300 x1512)) x1512))
(assert (x205 x961))
(assert (=> (<= x1185 10000) (= (x297 x1185) (x300 x1185))))
(assert (x205 x289))
(assert (x491 x460))
(assert (= x53 (=> (and (= x657 (= 0 x1086)) (or (and (= (x60 (x300 x1086) (x297 9) 0) x780) (<= 0 x1464) (= x330 (x60 (x300 x596) x1039 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1464) (= x1464 x954) (= 1 x131) (not x657) (= x1534 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= (x60 (x300 x1534) x780 0) x1039) (= (x437 x330) x1464) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x596)) (and (= 0 x131) (= x954 0) x657))) x434)))
(assert (x442 x617 x695 x1244 x668))
(assert (= x868 (x163 (x300 x868))))
(assert (x205 x525))
(assert (x442 x617 x695 x668 x1244))
(assert (x442 x664 x669 x777 x668))
(assert (x491 (- x695 x438)))
(assert (x205 x1157))
(assert (x935 x668 x1244 x669 x664))
(assert (= x314 (x163 (x300 x314))))
(assert (= (x417 x1539) (ite (= x1539 x1084) x1224 (x175 x1539))))
(assert (x491 (- x1502 x668)))
(assert (x205 x886))
(assert (x921 x1010))
(assert (x205 x1558))
(assert (x935 x668 x1244 x1502 x460))
(assert (x924 x173 (- x954 x617)))
(assert (x491 (- x1244 x173)))
(assert (= (x163 (x297 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x205 x1125))
(assert (x205 x926))
(assert (=> (>= 10000 x22) (= (x297 x22) (x300 x22))))
(assert (x205 x833))
(assert (= (ite (and (not x762) x302 (not x170) x448) (x417 x284) (ite (and x448 (not x302) (not x762)) (x175 x284) (ite (and x448 x762) (x175 x284) (x13 x284)))) (x35 x284)))
(assert (x491 x1502))
(assert (= x399 (x163 (x300 x399))))
(assert (= (x552 x15) 0))
(assert (x491 (- x777 x1502)))
(assert (x491 (- x1027 x668)))
(assert (=> (<= x293 10000) (= (x297 x293) (x300 x293))))
(assert (x205 x1244))
(assert (x205 x275))
(assert (x205 x75))
(assert (x205 x644))
(assert (x442 x954 x173 x1027 x438))
(assert (x935 x1027 x438 x1244 x668))
(assert (= 274184521717934524641157099916833587218 (x163 (x297 274184521717934524641157099916833587218))))
(assert (x935 x1502 x460 x777 x668))
(assert (x205 x801))
(assert (=> (>= 10000 x1096) (= (x300 x1096) (x297 x1096))))
(assert (x442 x1244 x668 x1027 x438))
(assert (x205 x1400))
(assert (= (x163 (x300 x477)) x477))
(assert (x924 x1244 (- x668 x460)))
(assert (= x290 (=> (= x601 (< 0 x919)) (and (=> (not x601) x46) (=> (and (= x166 (> x968 0)) (or (and (= x1202 (x1360 (+ x789 x968))) x1268) (not x1268)) (<= x72 1461501637330902918203684832716283019655932542975) (= x604 (> x523 0)) x601 (> x919 0) x604 (= x1013 (x147 26959946667150639794667015087019630673637144422540572481103610249215 x1180)) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x571) (< 0 x483) (or (and (= 0 x1340) (not x166)) (and (or (and (= x1340 32) (not x1092)) (and (= x265 (x1360 (+ x598 96))) (= x1527 (x1360 (+ 64 x1166))) x1092 (or (and (= x1444 (x1193 x467)) x588 (= (x1360 (+ x1166 96)) x467) (= (x1360 (+ x598 128)) x56) (or (and (= 96 x1340) (not x1589)) (and (= x1430 (x1193 x1297)) x1589 (= x1297 (x1360 (+ x1166 128))) (not x707) (= 128 x1340) (= (> x968 128) x707) (= (x1360 (+ x598 160)) x1433))) (= (> x968 96) x1589)) (and (= 64 x1340) (not x588))) (= (x1193 x1527) x20) (= (> x968 64) x588))) (= x886 x96) (= x344 x789) (= (x1193 x96) x299) x166 (= x1092 (< 32 x968)))) (= x523 (x1422 (x300 x72))) (= (x1360 (+ 36 x1166)) x638) (= 0 x1021) (= x1268 (> x1340 x968)) (= (x757 128) x483) (= x968 (x1384 x1166)) (= x730 (x1360 (+ 68 x1166))) (= x789 (x1360 (+ 128 x638))) (= (x1089 160) x1226) (= x72 (x285 x923)) (= x36 (x1360 (+ x1013 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= (x1360 (+ 100 x1166)) x598) (= (x1059 x886) x1180) (= (x1360 (+ x1166 32)) x886) (= (x484 (- x598 x1166)) x473) (= x524 x923) (= (x484 (- x473 32)) x503)) x723)))))
(assert (x205 x917))
(assert (x205 x204))
(assert (x924 x1027 (- x438 x668)))
(assert (x205 x1573))
(assert (x205 x1083))
(assert (x205 x428))
(assert (= x1037 x448))
(assert (= 274184521717934524641157099916833587214 (x163 (x297 274184521717934524641157099916833587214))))
(assert (x491 x438))
(assert (= (x297 2939843472) (x300 2939843472)))
(assert (x662 x955 x646))
(assert (x491 (- x695 x664)))
(assert (= (or (and (not x1286) x251) (and x692 (not x1582)) (and x1600 x564)) x121))
(assert (x924 x173 (- x954 x1502)))
(assert (= (x163 (x300 x693)) x693))
(assert (x205 x602))
(assert (= (+ 1 (x163 x934)) (x163 (x606 x934 1))))
(assert (x205 x649))
(assert (x491 (- x695 x460)))
(assert (x442 x1027 x438 x1502 x460))
(assert (x1455 x972))
(assert (x442 x695 x617 x438 x1027))
(assert (x921 x616))
(assert (= (x163 (x300 x1194)) x1194))
(assert (x491 (- x617 x669)))
(assert (x442 x669 x664 x695 x694))
(assert (x921 x218))
(assert (x924 x695 (- x617 x438)))
(assert (x205 x879))
(assert (x935 x664 x669 x1502 x460))
(assert (= x1579 x307))
(assert (= (x163 (x606 x501 1)) (+ (x163 x501) 1)))
(assert (=> (<= x635 10000) (= (x297 x635) (x300 x635))))
(assert (x205 x36))
(assert (= (=> (and (or (and (= x203 (x147 1461501637330902918203684832716283019655932542975 x1343)) (<= x1452 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1452 (x377 x1006)) (or (and (= 1 x999) (= x1452 x1027) (not x1280)) (and (= x999 0) (= x1027 0) x1280)) (= (x60 (x300 x1197) (x297 10) 0) x395) (>= x1452 0) (= x1280 (= x1452 0)) (not x340) (= (x60 (x300 x203) x395 0) x1006)) (and x340 (= 0 x999) (= 0 x1027))) (= x340 (= 0 x1197))) x342) x366))
(assert (x205 x1508))
(assert (x205 x1464))
(assert (= (x297 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x300 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x924 x694 (- x695 x669)))
(assert (x205 x887))
(assert (x924 x777 (- x668 x695)))
(assert (= (x163 (x300 x1421)) x1421))
(assert (x442 x668 x1244 x668 x777))
(assert (x205 x128))
(assert (x205 x1476))
(assert (x205 x224))
(assert (x205 x826))
(assert (x935 x695 x617 x777 x668))
(assert (x442 x694 x695 x1502 x460))
(assert (= x1555 x814))
(assert (x924 x173 (- x954 x695)))
(assert (x924 x1502 (- x460 x777)))
(assert (= x1383 (=> (= x1078 x1197) x366)))
(assert (=> (>= 10000 x1287) (= (x300 x1287) (x297 x1287))))
(assert (x205 x765))
(assert (= x454 (x163 (x300 x454))))
(assert (x921 x1420))
(assert (x205 x1477))
(assert (x107 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x921 x1091))
(assert (x924 x777 (- x668 x173)))
(assert (x491 (- x1027 x695)))
(assert (x491 (- x669 x668)))
(assert (x924 x669 (- x664 x173)))
(assert (x491 (- x460 x669)))
(assert (=> (>= 10000 x45) (= (x300 x45) (x297 x45))))
(assert (x921 x117))
(assert (x205 x15))
(assert (x924 x1502 (- x460 x669)))
(assert (=> (<= x1241 10000) (= (x300 x1241) (x297 x1241))))
(assert (=> (<= x102 10000) (= (x300 x102) (x297 x102))))
(assert (x921 x1024))
(assert (x205 x186))
(assert (x205 x673))
(assert (x205 x390))
(assert (x205 x1180))
(assert (x921 x243))
(assert (x935 x1244 x668 x777 x668))
(assert (x935 x777 x668 x1502 x460))
(assert (x491 (- x460 x1244)))
(assert (x491 (- x438 x669)))
(assert (x491 (- x668 x173)))
(assert (x924 x460 (- x1502 x694)))
(assert (= (x297 1461501637330902918203684832716283019655932542975) (x300 1461501637330902918203684832716283019655932542975)))
(assert (= 0 (x193 x847)))
(assert (=> (<= x1327 10000) (= (x297 x1327) (x300 x1327))))
(assert (x205 x630))
(assert (x921 x1192))
(assert (x442 x438 x1027 x668 x1244))
(assert (= (x297 69947311) (x300 69947311)))
(assert (x924 x777 (- x668 x669)))
(assert (x924 x777 (- x668 x1027)))
(assert (x205 x138))
(assert (x205 x1427))
(assert (x205 x712))
(assert (x921 x740))
(assert (x205 x876))
(assert (x442 x668 x1244 x460 x1502))
(assert (x205 x976))
(assert (x442 x668 x1244 x669 x664))
(assert (x205 x10))
(assert (x442 x695 x694 x954 x173))
(assert (x491 (- x695 x954)))
(assert (x205 x1421))
(assert (= (x297 635128645) (x300 635128645)))
(assert (= (x163 (x300 x1032)) x1032))
(assert (x924 x668 (- x1244 x694)))
(assert (x205 x631))
(assert (x921 x1170))
(assert (x442 x664 x669 x694 x695))
(assert (x205 x222))
(assert (= x27 (and x73 (not x115))))
(assert (x205 x1545))
(assert (x921 x987))
(assert (= 0 (x193 x886)))
(assert (x935 x777 x668 x954 x173))
(assert (x205 x1594))
(assert (= (x163 (x297 2868243304)) 2868243304))
(assert (x935 x954 x173 x617 x695))
(assert (= (x163 (x300 x1489)) x1489))
(assert (x205 x508))
(assert (x205 x485))
(assert (x921 x268))
(assert (x205 x1034))
(assert (x205 x106))
(assert (x442 x954 x173 x1244 x668))
(assert (x205 x498))
(assert (x491 (- x694 x668)))
(assert (= (x417 x284) (ite (= x1084 x284) x1224 (x175 x284))))
(assert (x205 x413))
(assert (x921 x1141))
(assert (= (x163 (x300 x936)) x936))
(assert (x442 x695 x694 x460 x1502))
(assert (x924 x1502 (- x460 x694)))
(assert (x205 x1105))
(assert (x205 x988))
(assert (x924 x173 (- x954 x1244)))
(assert (x205 x616))
(assert (x442 x954 x173 x438 x1027))
(assert (=> (>= 10000 x454) (= (x297 x454) (x300 x454))))
(assert (x442 x668 x1244 x1027 x438))
(assert (x921 x1484))
(assert (=> (>= 10000 x137) (= (x300 x137) (x297 x137))))
(assert (= (x159 x530) (ite (and x1561 x791) (x909 x530) (ite (and x1561 (not x791) x88) (x909 x530) (x704 x530)))))
(assert (x205 x162))
(assert (x491 (- x694 x617)))
(assert (x205 x627))
(assert (x442 x438 x1027 x664 x669))
(assert (= (x297 87118632) (x300 87118632)))
(assert (= (ite (= x1084 x642) x1224 (x175 x642)) (x417 x642)))
(assert (x491 (- x954 x668)))
(assert (x205 x1382))
(assert (= (=> (= x677 x1382) x1607) x1532))
(assert (= (x297 604800) (x300 604800)))
(assert (= (ite (and (not x762) x302 (not x170) x448) (x517 192) (ite (and (not x302) (not x762) x448) (x264 192) (ite (and x448 x762) (x264 192) (x891 192)))) (x1412 192)))
(assert (= (ite (and (not x170) x302 x448 (not x762)) (x417 x124) (ite (and (not x302) (not x762) x448) (x175 x124) (ite (and x762 x448) (x175 x124) (x13 x124)))) (x35 x124)))
(assert (x442 x668 x1244 x438 x1027))
(assert (=> (>= 10000 x1315) (= (x300 x1315) (x297 x1315))))
(assert (=> (<= x1285 10000) (= (x297 x1285) (x300 x1285))))
(assert (= (x163 (x297 69947311)) 69947311))
(assert (x205 x294))
(assert (x442 x438 x1027 x617 x695))
(assert (=> (>= 10000 x1277) (= (x300 x1277) (x297 x1277))))
(assert (= x1554 x195))
(assert (= x675 (and (not x1536) x1037)))
(assert (x205 x191))
(assert (x924 x460 (- x1502 x695)))
(assert (x205 x1264))
(assert (x205 x555))
(assert (x205 x571))
(assert (x935 x668 x777 x617 x695))
(assert (x921 x708))
(assert (x921 x743))
(assert (= (x300 468353030) (x297 468353030)))
(assert (x205 x237))
(assert (x935 x617 x695 x777 x668))
(assert (x442 x1027 x438 x664 x669))
(assert (x442 x617 x695 x664 x669))
(assert (x205 x536))
(assert (x921 x953))
(assert (x491 (- x668 x695)))
(assert (x924 x694 (- x695 x438)))
(assert (x442 x695 x694 x617 x695))
(assert (x205 x999))
(assert (x924 x664 (- x669 x173)))
(assert (x924 x617 (- x695 x777)))
(assert (= x856 (x163 (x300 x856))))
(assert (x442 x668 x777 x1502 x460))
(assert (= (x163 (x300 x672)) x672))
(assert (x205 x1074))
(assert (x442 x173 x954 x438 x1027))
(assert (x924 x668 (- x1244 x173)))
(assert (= x410 (x163 (x300 x410))))
(assert (=> (>= 10000 x98) (= (x297 x98) (x300 x98))))
(assert (x205 x1279))
(assert (= (x163 (x300 x922)) x922))
(assert (x924 x694 (- x695 x173)))
(assert (x491 (- x695 x668)))
(assert (=> (<= x129 10000) (= (x300 x129) (x297 x129))))
(assert (= true x1022))
(assert (= x576 (x163 (x300 x576))))
(assert (= x354 (x163 (x300 x354))))
(assert (x205 x319))
(assert (x442 x460 x1502 x668 x777))
(assert (x205 x221))
(assert (= x573 (=> (and (<= x743 1461501637330902918203684832716283019655932542975) (< x801 2960351575) (not (= x801 2743102681)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x831) (not (= 2690754053 x801)) (< 0 x1066) (= 2798343961 x801) (<= 0 x831) (not (= x801 2764855426)) (= (x1422 (x300 274184521717934524641157099916833587206)) x1066) (not (> 2690754053 x801)) (not (> 2293535753 x801)) (= x1491 (x60 (x300 x743) x502 0)) (= (x60 (x300 x296) (x297 5) 0) x502) (= x831 x1351) (= x831 (x960 x1491))) (=> (and (= x574 x1351) (= x360 x268) (= x778 x1359) (= x868 x907)) x1560))))
(assert (x205 x476))
(assert (x442 x1027 x438 x954 x173))
(assert (x205 x451))
(assert (x1294 x1175 x717))
(assert (x921 x1534))
(assert (x935 x694 x695 x954 x173))
(assert (x921 x538))
(assert (= (=> (and (= x1327 x360) (= x738 x778)) x89) x46))
(assert (= x738 (x163 (x300 x738))))
(assert (x205 x438))
(assert (=> (<= x354 10000) (= (x297 x354) (x300 x354))))
(assert true)
(assert (= x1291 (x163 (x300 x1291))))
(assert (= (x163 (x300 x1137)) x1137))
(assert (x205 x96))
(assert (x205 x982))
(assert (=> (<= x1534 10000) (= (x297 x1534) (x300 x1534))))
(assert (x205 x533))
(assert (x924 x460 (- x1502 x617)))
(assert (= x1344 x747))
(assert (x205 x1403))
(assert (= x658 (=> (= x677 0) x1607)))
(assert (x205 x445))
(assert (= (=> (= x1345 (= 274184521717934524641157099916833587214 x72)) (and (=> (and x1345 (= 2835717307 x1052) (= (x484 (- x1426 4)) x194) (not (= x1052 2514000705)) (= x305 x272) (= (x60 (x300 x1201) (x297 1) 0) x947) (= x623 1) (= 274184521717934524641157099916833587206 x656) (not (= 826074471 x1052)) (= x691 32) (= x511 (or (> x194 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x194) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x194))))) (<= x429 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x429) (not (= x1052 1889567281)) (= x140 x1426) (= (x60 (x300 x1201) (x297 1) 0) x1542) (= (x484 (- x304 x305)) x825) (= x119 x272) (= x571 x1201) (= x1602 (x60 (x300 274184521717934524641157099916833587206) (x297 1) 0)) (<= x1201 1461501637330902918203684832716283019655932542975) (< (+ x429 x272) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x511) (not (< x1426 4)) (< 0 x1147) (= x305 x1226) (not x324) (>= x304 0) (= x1426 68) (= 274184521717934524641157099916833587206 x151) (= (> x305 x304) x1070) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x304) (= (x945 x397) x304) (= x1201 x313) (= (>= (+ x272 x429) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x324) (= x1506 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not x105) (= (x1164 x947) x429) (= (x1422 (x300 274184521717934524641157099916833587214)) x1147) (not (< x1052 649617121)) (= x674 (+ x119 x333)) (not x1070) (= x1292 x111) (= (> x272 x304) x105) (= x429 x333) (not (= x1052 649617121)) (= (x60 (x300 274184521717934524641157099916833587206) (x297 1) 0) x397)) x562) (=> (not x1345) x270))) x402))
(assert (x491 (- x695 x617)))
(assert (x921 x1342))
(assert (x491 (- x1027 x1502)))
(assert (x205 x360))
(assert (= x1091 (x163 (x300 x1091))))
(assert (x491 (- x695 x1027)))
(assert (= x904 (or x121 x509)))
(assert (x924 x460 (- x1502 x1027)))
(assert (x921 x188))
(assert (x921 x842))
(assert (x205 x421))
(assert (x442 x438 x1027 x173 x954))
(assert (=> (>= 10000 x936) (= (x297 x936) (x300 x936))))
(assert (x205 x829))
(assert (x924 x438 x1027))
(assert (x205 x880))
(assert (x442 x695 x694 x1027 x438))
(assert (x924 x617 (- x695 x954)))
(assert (x921 x1194))
(assert (x935 x617 x695 x954 x173))
(assert (= x876 (x163 (x300 x876))))
(assert (x205 x889))
(assert (x921 x520))
(assert (=> (<= x1194 10000) (= (x300 x1194) (x297 x1194))))
(assert (= x803 (=> (and x459 (= x628 x761) x1425 (= (x1061 (x300 x1388)) x24) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1339) x459) (= (x178 (x300 274184521717934524641157099916833587206)) x806) (= (< (x1061 (x300 x1388)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1425) (= (x178 (x300 274184521717934524641157099916833587206)) x800) x1608 (= (>= x806 0) x1608) (= (x178 (x300 x1388)) x1339) (= x1025 (= 274184521717934524641157099916833587218 x1388))) (and (=> (and (= x1562 (x1312 x1575)) (> x230 0) (= x179 x1277) (= (+ x513 x130) x1159) (= x1249 68) (not (< x1249 4)) (= x341 (> x965 x884)) (= x1277 x958) (= x1575 (x60 (x300 x1277) (x297 1) 0)) (not x341) (<= x1562 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x965 x1271) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x138) (= 32 x1369) (not (= 2514000705 x237)) (= (x320 x1415) x884) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x884) (= 1 x1592) (= x1350 x965) (= (x60 (x300 274184521717934524641157099916833587206) (x297 1) 0) x374) (= x896 (x484 (- x1249 4))) (= (or (and (= (<= x896 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x896 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x896)) x1298) (= x237 2835717307) (= x1562 x130) x1025 (= x1249 x761) (>= x884 0) (<= 0 x1562) (< (+ x1350 x1562) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 1461501637330902918203684832716283019655932542975 x1277) (not x1298) (= x1415 (x60 (x300 274184521717934524641157099916833587206) (x297 1) 0)) (= x274 274184521717934524641157099916833587206) (not (< x237 649617121)) (not x647) (not (= x237 826074471)) (= x208 274184521717934524641157099916833587206) (not x1336) (= (> x1350 x884) x647) (not (= x237 1889567281)) (= x1350 x513) (= x230 (x1422 (x300 274184521717934524641157099916833587218))) (= (>= (+ x1562 x1350) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1336) (not (= 649617121 x237)) (= (x484 (- x884 x965)) x337)) x1485) (=> (not x1025) x303)))))
(assert (x924 x695 (- x694 x668)))
(assert (x442 x460 x1502 x617 x695))
(assert (x491 (- x1027 x617)))
(assert (= (x193 x1186) 0))
(assert (x921 x72))
(assert (= x1429 (x163 (x300 x1429))))
(assert (x205 x218))
(assert (x205 x1303))
(assert (=> (<= x441 10000) (= (x300 x441) (x297 x441))))
(assert (x205 x1388))
(assert (x491 (- x777 x668)))
(assert (= x781 (and x1131 x260)))
(assert (x205 x20))
(assert (x205 x1351))
(assert (= (or (and x215 (not x255)) (and x799 (not x1250))) x1136))
(assert (x491 (- x460 x1027)))
(assert (x205 x965))
(assert (x205 x469))
(assert (x205 x478))
(assert (= (x163 (x297 635128645)) 635128645))
(assert (= x572 (=> (= 0 x1197) x366)))
(assert (x442 x173 x954 x1244 x668))
(assert (x205 x1527))
(assert (x205 x1198))
(assert (= x1401 (and x1269 x781)))
(assert (x205 x500))
(assert (x921 x951))
(assert (x924 x669 x664))
(assert (x491 (- x668 x669)))
(assert (x921 x1287))
(assert (= (x163 (x297 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x205 x793))
(assert (x935 x669 x664 x1244 x668))
(assert (x205 x619))
(assert (=> (>= 10000 x771) (= (x300 x771) (x297 x771))))
(assert (= x1509 (=> (and (= (< 0 x727) x115) (= (x60 (x300 x1192) (x297 7) 0) x610) (>= x1211 0) (not (< x1211 x391)) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x771) (>= x727 0) (<= x1211 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x957 x449) x727) (= x449 (x60 (x300 x771) x419 0)) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x605) (= x419 (x60 (x300 x605) x610 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x727)) (and (=> (and (= (x147 1461501637330902918203684832716283019655932542975 x1175) x520) (= x669 x1330) (= x1583 0) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x922) (= x440 (x60 (x300 x922) x169 0)) (= x1221 (x60 (x300 x520) x440 0)) (= (x494 x1221) x1330) (= x169 (x60 (x300 x1192) (x297 9) 0)) x115 (<= 0 x1330) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1330)) x1051) (=> (not x115) x1568)))))
(assert (x205 x1209))
(assert (x924 x694 (- x695 x1244)))
(assert (x1455 x1107))
(assert (x767 1000000000000000000 x933))
(assert (= (=> (and (= (= x691 0) x1572) (or (not x123) (and (= x863 (x1360 (+ x349 32))) (= x855 (= x1139 0)) (= x1123 x1139) x123 (< 0 x1139) (= (x979 x863) x1139) (= (x592 x349) x405) (= (not x855) x1409) (= x1123 (ite x1409 1 0)) (not (or (and (> 32 x405) (= (<= x405 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x405 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x317 (x592 x349)) x1033 (not (= 0 x623)) (= x123 (< 0 x317)) (or (and (= 96 x349) x1572 (= x548 x789)) (and (= (x147 115792089237316195423570985008687907853269984665640564039457584007913129639904 x515) x116) (not x1572) (= x964 x548) (= x964 (x1360 (+ x789 x116))) (= x789 x349) (= x515 (x1360 (+ 63 x691))) (= x1316 (x1360 (+ x598 96))))) (= x1033 (< (x1574 (x300 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x2 (x300 x72)) x1550) (= x1050 (x1574 (x300 274184521717934524641157099916833587206)))) x135) x562))
(assert (x491 (- x1244 x438)))
(assert (= (and x1544 x621) x799))
(assert (x249 x515 x1253 x1510 x911))
(assert (x205 x465))
(assert (x921 x823))
(assert (x205 x272))
(assert (= x741 (or (and (not x1235) x1401) (and x93 (not x812)))))
(assert (x491 (- x695 x694)))
(assert (= (ite (and x448 x1113) (x542 x379) (x1233 x379)) (x1595 x379)))
(assert (x205 x194))
(assert (= (x300 1889567281) (x297 1889567281)))
(assert (x442 x1244 x668 x173 x954))
(assert (x924 x173 (- x954 x438)))
(assert (= (x163 (x300 x1074)) x1074))
(assert (x924 x694 x695))
(assert (= (x163 (x300 x793)) x793))
(assert (x921 x410))
(assert (x491 (- x668 x460)))
(assert (x205 x1260))
(assert (=> (>= 10000 x1512) (= (x297 x1512) (x300 x1512))))
(assert (= (x163 (x300 x45)) x45))
(assert (=> (>= 10000 x1484) (= (x300 x1484) (x297 x1484))))
(assert (x491 (- x438 x694)))
(assert (x205 x731))
(assert (x442 x777 x668 x460 x1502))
(assert (=> (>= 10000 x278) (= (x300 x278) (x297 x278))))
(assert (x205 x596))
(assert (x921 x745))
(assert (= (x163 (x300 x679)) x679))
(assert (x205 x761))
(assert (x921 x626))
(assert (x205 x100))
(assert (=> (<= x1347 10000) (= (x300 x1347) (x297 x1347))))
(assert (x442 x1027 x438 x777 x668))
(assert (x924 x694 (- x695 x954)))
(assert (x205 x274))
(assert (x205 x426))
(assert (x924 x1244 (- x668 x438)))
(assert (x205 x1115))
(assert (x205 x1461))
(assert (=> (>= 10000 x1085) (= (x297 x1085) (x300 x1085))))
(assert (x921 x593))
(assert (=> (<= x1307 10000) (= (x300 x1307) (x297 x1307))))
(assert (x205 x406))
(assert (x921 x1264))
(assert (x442 x694 x695 x460 x1502))
(assert (= x1135 x1432))
(assert (x205 x823))
(assert (x935 x1027 x438 x694 x695))
(assert (= x1344 x223))
(assert (x205 x1446))
(assert (x205 x968))
(assert (x442 x1027 x438 x668 x1244))
(assert (x491 (- x1502 x617)))
(assert (x442 x695 x694 x668 x1244))
(assert (x205 x21))
(assert (x924 x1244 (- x668 x954)))
(assert (=> (>= 10000 x993) (= (x297 x993) (x300 x993))))
(assert (x491 (- x438 x777)))
(assert (x205 x593))
(assert (x491 (- x954 x460)))
(assert (=> (<= x1420 10000) (= (x300 x1420) (x297 x1420))))
(assert (x442 x460 x1502 x669 x664))
(assert (= (x163 (x300 x535)) x535))
(assert (= (ite (and x791 x1561) (x909 x152) (ite (and (not x791) x88 x1561) (x909 x152) (x704 x152))) (x159 x152)))
(assert (x205 x1021))
(assert (x921 x1307))
(assert (x924 x695 (- x694 x1027)))
(assert (x205 x1014))
(assert (x205 x151))
(assert (x924 x695 (- x617 x173)))
(assert (x442 x173 x954 x695 x694))
(assert (x205 x581))
(assert (x935 x1502 x460 x669 x664))
(assert (x935 x173 x954 x1244 x668))
(assert (= x846 (x163 (x300 x846))))
(assert (x442 x1502 x460 x695 x617))
(assert (x921 x596))
(assert (=> (>= 10000 x1042) (= (x297 x1042) (x300 x1042))))
(assert (x924 x664 (- x669 x695)))
(assert (x921 x813))
(assert (x935 x460 x1502 x669 x664))
(assert (x205 x11))
(assert (x442 x668 x1244 x954 x173))
(assert (=> (>= 10000 x596) (= (x300 x596) (x297 x596))))
(assert (x205 x1350))
(assert (x205 x941))
(assert (x921 x1137))
(assert (x491 (- x1502 x173)))
(assert (x205 x754))
(assert (x205 x617))
(assert (= x161 (or (and x675 x74) x1548)))
(assert (x205 x868))
(assert (=> (>= 10000 x82) (= (x297 x82) (x300 x82))))
(assert (x935 x173 x954 x694 x695))
(assert (=> (>= 10000 x1048) (= (x297 x1048) (x300 x1048))))
(assert (x205 x1547))
(assert (x205 x737))
(assert (x935 x1027 x438 x669 x664))
(assert (x442 x669 x664 x695 x617))
(assert (x491 (- x954 x617)))
(assert (=> (<= x1141 10000) (= (x297 x1141) (x300 x1141))))
(assert (x205 x1185))
(assert (x921 x677))
(assert (x205 x551))
(assert (= 274184521717934524641157099916833587206 (x163 (x297 274184521717934524641157099916833587206))))
(assert (= (ite (and x1113 x448) (x615 x425) (x1546 x425)) (x867 x425)))
(assert (= x1543 (x163 (x300 x1543))))
(assert (x491 (- x1502 x669)))
(assert (x442 x1502 x460 x695 x694))
(assert (x491 (- x669 x1502)))
(assert (x491 x1244))
(assert (=> (<= x296 10000) (= (x300 x296) (x297 x296))))
(assert (x205 x1192))
(assert (= (=> (and (= x242 (x867 x772)) (= x1459 (x1142 x804)) (= x48 (< x242 x585)) (= (x60 (x300 x1329) x836 0) x660) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x887) (= (x60 (x300 x1016) (x297 5) 0) x802) (= x772 (x60 (x300 x576) x1606 0)) (= (x373 x501) x150) (or x1205 (and (= (x147 1461501637330902918203684832716283019655932542975 x1343) x1490) (not x1205))) (= (x60 (x300 x1016) (x297 6) 0) x1606) (= x1499 x1166) (<= 0 x887) (= x351 (x606 x501 1)) (>= x933 0) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1016)) (= (= x999 0) x1205) (>= x1459 0) (= x1329 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= x971 (x60 (x300 x1141) x660 0)) (= (x1360 (+ 32 x1482)) x1012) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x1413) (= x1499 (x1360 (+ x1482 64))) (= x171 (= x933 0)) (or (and (= (x147 1461501637330902918203684832716283019655932542975 x1343) x679) (= x261 x822) (= x1276 x480) (= x80 (x60 (x300 x833) x185 0)) (= (x1595 x379) x1276) (>= x1276 0) (= (x60 (x300 x1016) (x297 6) 0) x185) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x833) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1276) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1276 x822)) (= (x60 (x300 x679) x773 0) x379) (= x822 x336) (= (x1187 x438 x1027) x336) (= x773 (x60 (x300 x1016) (x297 5) 0)) (not x1015) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1187 x438 x1027)) (= (+ x261 x480) x522)) (and x1015 (= (x60 (x300 x1450) x663 0) x948) (= x663 (x60 (x300 x1016) (x297 6) 0)) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x1450))) (or (and (= 0 x438) (not x48)) (and (= (= 0 x242) x1519) (or (and (not x1519) (= x438 x827) (not (< x234 x242)) (= (x484 (- x234 x242)) x362) (= x827 (ite (< x362 604800) x362 604800)) (= 604800 x1217)) (and x1519 (not (> x1279 x234)) (= x339 x438) (= x1279 (x1203 x1482)) (= x339 (x484 (- x234 x1279))))) (= x908 (> x644 x1237)) (or (and (= x234 x644) (not x908)) (and (= x1508 x234) (= x1508 (x348 x1012)) x908)) x48 (= (x348 x1012) x1237))) (= x576 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= x1397 (x1360 (+ 2 x1192))) (= (x60 (x300 x1016) (x297 3) 0) x836) (<= 0 x242) (> x1397 x889) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x933) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x1141) (or x171 (and (> x1459 0) (= x893 0) (= (x1167 (* x933 1000000000000000000)) x1478) (not x171) (= x955 1) (= x695 (x1000 x1478 x1459)) (= (ite (> x933 115792089237316195423570985008687907853269984665640564039457) 1 0) x646) (= (x147 x955 x646) x893) (or (not x1069) (and (< (+ x23 x1411) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x1090 x544) x1207) (= (x1000 x196 1000000000000000000) x1411) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x1489) (= x544 x406) (= x408 (x35 x642)) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x1446) (or (and (< 1 x919) (= x431 (x60 (x300 x1016) (x297 4) 0)) (not x104) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x617) (= x593 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= x1151 (x60 (x300 x1016) (x297 4) 0)) (= x584 (x60 (x300 x1512) x1580 0)) (= (> x919 2) x104) (= (x285 x734) x1024) (<= x931 1461501637330902918203684832716283019655932542975) (= x17 (x1295 x584)) (= (x60 (x300 x335) x225 0) x1580) (= (x1295 x1183) x879) (<= x17 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x380 x790) x433) (= 0 x879) (= x649 (x1000 x972 1000000000000000000)) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x1185) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x82) (= x472 x649) (= x1479 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= x1518 (x862 192)) x1581 (>= 1461501637330902918203684832716283019655932542975 x1512) (= x407 (x60 (x300 x1016) (x297 11) 0)) (= x192 (x757 128)) (= (x1187 x617 x695) x972) (<= 0 x879) (> x919 1) (= x1183 (x60 (x300 x1024) x732 0)) (>= x17 0) (= x617 (x1140 x973)) (< 1 x919) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x649 x1518)) (= (x60 (x300 x1185) x1151 0) x225) (= (x1360 (+ x118 64)) x734) (>= 1461501637330902918203684832716283019655932542975 x1024) (= x933 x790) (<= x879 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 1 x192) (= x17 x380) (= (x60 (x300 x593) x431 0) x848) (<= 0 x617) (= (x60 (x300 x1479) x407 0) x157) (< (x1187 x617 x695) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x746 (+ x1082 x472)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x17 x933)) (= x973 (x60 (x300 x931) x157 0)) (= x931 (x285 x734)) (= x1082 x1518) (= (x285 x734) x1512) (= x732 (x60 (x300 x82) x848 0)) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x335)) (not x1581)) (<= x408 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x60 (x300 x1603) x1169 0) x788) (< (x1187 x694 x695) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 1461501637330902918203684832716283019655932542975 x91) (= (x60 (x300 x1484) x1289 0) x642) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x45) (= x883 x524) (= (x285 x883) x91) (= x354 (x147 1461501637330902918203684832716283019655932542975 x1343)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x694) (= x23 x1498) (>= 1461501637330902918203684832716283019655932542975 x1484) (= x1411 x1322) (= x1169 (x60 (x300 x1446) x514 0)) (> x919 0) (= x408 0) (= x481 (x60 (x300 x1489) x718 0)) (> x428 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x933 x406)) (> x919 0) (= x1324 (x60 (x300 x651) x1448 0)) (= x933 x1090) (= x1289 (x60 (x300 x45) x1324 0)) (>= 1461501637330902918203684832716283019655932542975 x1603) (= x678 (+ x1322 x1498)) (>= x406 0) (= (x35 x788) x406) x1069 (= x651 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= (x1412 160) x23) (= (x1187 x694 x695) x196) (= (x60 (x300 x354) x263 0) x514) (> x919 0) (= x1581 (< 1 x919)) (>= x408 0) (= (x60 (x300 x1016) (x297 11) 0) x718) (= (x285 x883) x1603) (= x1484 (x285 x883)) (= x1448 (x60 (x300 x1016) (x297 4) 0)) (<= 0 x694) (= (x757 128) x428) (= x694 (x1140 x1267)) (<= x406 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x60 (x300 x91) x481 0) x1267) (= (x60 (x300 x1016) (x297 4) 0) x263))) (= (> x919 0) x1069))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x150) (= x1015 (= 0 x438)) (= x804 (x60 (x300 x1413) x802 0)) (= x887 (x686 x351)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1459) (>= x150 0) (= (x807 x971) x933) (= x501 (x60 (x300 x1016) (x297 1) 0)) (<= x242 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x348 x1012) x585)) x290) x342))
(assert (x442 x695 x617 x777 x668))
(assert (= x432 true))
(assert (= x747 x112))
(assert (x205 x1177))
(assert (x921 x1048))
(assert (= (x163 (x300 x643)) x643))
(assert (x442 x668 x777 x695 x694))
(assert (x205 x1197))
(assert (x205 x179))
(assert (= x47 (=> (and (= x750 (x60 (x300 x106) x266 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1337) (<= 0 x1337) (= (= 0 x1337) x1235) (= x106 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= (x60 (x300 x1192) (x297 6) 0) x266) (= x1337 (x298 x750))) (and (=> x1235 x1038) (=> (and (not x1235) (= x1192 x401)) x1043)))))
(assert (x924 x173 (- x954 x777)))
(assert (x442 x695 x694 x1502 x460))
(assert (x205 x883))
(assert (x442 x669 x664 x617 x695))
(assert (x491 (- x438 x1244)))
(assert (x491 x695))
(assert (= (x163 (x300 x823)) x823))
(assert (x205 x1102))
(assert (x205 x117))
(assert (x205 x612))
(assert (= (x517 160) x231))
(assert (x442 x664 x669 x460 x1502))
(assert (=> (>= 10000 x106) (= (x300 x106) (x297 x106))))
(assert (x205 x669))
(assert (x205 x698))
(assert (x205 x963))
(assert (= (x979 x863) (ite (and (not x1572) x814) (x1007 x863) (x680 x863))))
(assert (= (=> (and (<= 0 x525) (= x525 (x867 x425)) (<= x525 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x162 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= (= 0 x525) x1143) (= x927 (x60 (x300 x1016) (x297 6) 0)) (= x425 (x60 (x300 x162) x927 0))) (and (=> (and (not x1143) (= x1078 x1016)) x1383) (=> x1143 x353))) x929))
(assert (x924 x668 (- x1244 x617)))
(assert (x491 (- x173 x1502)))
(assert (x442 x695 x694 x695 x617))
(assert (x491 (- x1244 x1027)))
(assert (x442 x1244 x668 x695 x694))
(assert (x205 x22))
(assert (x924 x664 (- x669 x954)))
(assert (x924 x617 (- x695 x1502)))
(assert (= x1121 x1402))
(assert (x935 x1502 x460 x438 x1027))
(assert (= x1104 (and x594 x601)))
(assert (x205 x1556))
(assert (x935 x695 x694 x1244 x668))
(assert (x491 (- x617 x460)))
(assert (x1455 x1459))
(assert (x205 x813))
(assert (x205 x1242))
(assert (x205 x1297))
(assert (= (x297 2868243304) (x300 2868243304)))
(assert (=> (<= x1115 10000) (= (x300 x1115) (x297 x1115))))
(assert (x491 (- x694 x664)))
(assert (x205 x574))
(assert (x205 x56))
(assert (x491 x919))
(assert (=> (>= 10000 x1058) (= (x297 x1058) (x300 x1058))))
(assert (= x129 (x163 (x300 x129))))
(assert (x205 x356))
(assert (x205 x625))
(assert (x935 x460 x1502 x777 x668))
(assert (x442 x777 x668 x617 x695))
(assert (x491 (- x1244 x954)))
(assert (x924 x460 (- x1502 x664)))
(assert (= (x1412 192) (x862 192)))
(assert (= (x163 (x300 x338)) x338))
(assert (x924 x695 (- x617 x669)))
(assert (x205 x635))
(assert (=> (<= x743 10000) (= (x297 x743) (x300 x743))))
(assert (= x1010 (x163 (x300 x1010))))
(assert (x491 (- x460 x173)))
(assert (= x970 (x163 (x300 x970))))
(assert (=> (>= 10000 x1137) (= (x297 x1137) (x300 x1137))))
(assert (= x737 (x163 (x300 x737))))
(assert (x205 x1583))
(assert (x205 x1086))
(assert (x924 x954 (- x173 x777)))
(assert (= (x163 (x300 x82)) x82))
(assert (x205 x745))
(assert (= x1086 (x163 (x300 x1086))))
(assert (x935 x668 x777 x669 x664))
(assert (x205 x1369))
(assert (x205 x825))
(assert (= 0 (x193 x702)))
(assert (x921 x1446))
(assert (= x897 (x163 (x300 x897))))
(assert (x921 x1462))
(assert (x491 (- x668 x1027)))
(assert (= x977 (x163 (x300 x977))))
(assert (x491 x664))
(assert (x442 x460 x1502 x695 x694))
(assert (= (x163 (x300 x1209)) x1209))
(assert (= x493 x461))
(assert (x442 x460 x1502 x694 x695))
(assert (x924 x668 (- x777 x1502)))
(assert (=> (>= 10000 x1112) (= (x297 x1112) (x300 x1112))))
(assert (x491 (- x173 x668)))
(assert (x924 x438 (- x1027 x777)))
(assert (=> (<= x1450 10000) (= (x297 x1450) (x300 x1450))))
(assert (= x833 (x163 (x300 x833))))
(assert (x491 (- x954 x694)))
(assert (x442 x1244 x668 x694 x695))
(assert (x205 x816))
(assert (x442 x173 x954 x460 x1502))
(assert (x205 x362))
(assert (x491 (- x664 x668)))
(assert (= x1170 (x163 (x300 x1170))))
(assert (= (x297 2061678023) (x300 2061678023)))
(assert (x205 x822))
(assert (x442 x460 x1502 x173 x954))
(assert (x205 x730))
(assert (x205 x118))
(assert (x924 x1027 (- x438 x1244)))
(assert (x924 x173 (- x954 x694)))
(assert (= x6 (and x468 x1152)))
(assert (x921 x450))
(assert (=> (>= 10000 x221) (= (x297 x221) (x300 x221))))
(assert (= (=> (and (not (< x917 2690754053)) (= x917 2798343961) (> 2960351575 x917) (= x1571 (x60 (x300 x1115) x180 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x550) (not (< x917 2293535753)) (<= x1115 1461501637330902918203684832716283019655932542975) (= x49 x550) (> x1461 0) (not (= 2690754053 x917)) (<= 0 x550) (not (= 2764855426 x917)) (= (x1422 (x300 274184521717934524641157099916833587206)) x1461) (= x550 (x960 x1571)) (= x180 (x60 (x300 x1287) (x297 5) 0)) (not (= 2743102681 x917))) (=> (and (= x813 x907) (= x21 x49) (= x951 x778) (= x970 x381) (= x360 x399)) x1357)) x640))
(assert (x921 x1538))
(assert (x205 x1027))
(assert (= (x163 (x300 x1138)) x1138))
(assert (x442 x1502 x460 x1244 x668))
(assert (x205 x1123))
(assert (x442 x668 x777 x1027 x438))
(assert (x205 x771))
(assert (x205 x984))
(assert (= (x867 x1129) (ite (and x1113 x448) (x615 x1129) (x1546 x1129))))
(assert (x921 x737))
(assert (x442 x1244 x668 x460 x1502))
(assert (x442 x173 x954 x695 x617))
(assert (x442 x694 x695 x1244 x668))
(assert (x205 x944))
(assert (=> (>= 10000 x605) (= (x297 x605) (x300 x605))))
(assert (= (x163 (x300 x740)) x740))
(assert (x935 x668 x1244 x438 x1027))
(assert (x921 x535))
(assert (=> (<= x72 10000) (= (x300 x72) (x297 x72))))
(assert (x205 x1278))
(assert (= x1332 (=> (and (not (= x391 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (< x1238 x1016) x1536) (= (x1360 (+ x1192 1)) x1016)) (and (=> (not x1536) x689) (=> (and x1536 (= x683 x1166)) x290)))))
(assert (x924 x668 (- x777 x695)))
(assert (x205 x420))
(assert (x935 x1244 x668 x669 x664))
(assert (x205 x700))
(assert (= (x163 (x300 x137)) x137))
(assert (x519 x872 1000000000000000000))
(assert (x205 x1168))
(assert (x921 x993))
(assert (x921 x1358))
(assert (x442 x669 x664 x1502 x460))
(assert (= (x1412 160) (ite (and x302 (not x170) (not x762) x448) (x517 160) (ite (and (not x762) x448 (not x302)) (x264 160) (ite (and x762 x448) (x264 160) (x891 160))))))
(assert (x442 x668 x777 x664 x669))
(assert (x205 x1559))
(assert (x205 x1085))
(assert (x491 (- x695 x669)))
(assert (x442 x438 x1027 x460 x1502))
(assert (x442 x460 x1502 x695 x617))
(assert (x491 (- x1502 x1244)))
(assert (x205 x1414))
(assert (x205 x1326))
(assert (x205 x550))
(assert (= (=> (and (= x816 x474) (not (= 2211524764 x961)) (= x1255 (x60 (x300 x1242) (x297 6) 0)) (< 0 x443) (= x474 (x298 x715)) (not (= x961 1986467848)) (not (= 2061678023 x961)) (> 2293535753 x961) (<= x474 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x715 (x60 (x300 x1248) x1255 0)) (not (< x961 911411945)) (not (= x961 1968616202)) (>= 1461501637330902918203684832716283019655932542975 x1248) (= x443 (x1422 (x300 274184521717934524641157099916833587206))) (not (< x961 1968616202)) (<= 0 x474) (= x961 2258409472)) (=> (and (= x292 x816) (= x83 x360) (= x778 x708) x71 (= (not (= x292 0)) x71) (= x100 0)) x528)) x885))
(assert (= x73 (and (not x415) x1240)))
(assert (x205 x1603))
(assert (x205 x828))
(assert (x205 x137))
(assert (= (=> (and (= x207 (x60 (x300 x117) x894 0)) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x117) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1553) (= (x60 (x300 x1138) x207 0) x1381) (= x1138 (x147 1461501637330902918203684832716283019655932542975 x1175)) (= x811 (= 0 x1553)) (= x1553 (x414 x1381)) (= x894 (x60 (x300 x410) (x297 7) 0)) (>= x1553 0)) (and (=> (and (= x1118 x410) (not x811)) x1418) (=> (and (not x775) (= x445 (x484 (- x410 1))) x811 (= (< 0 x445) x775)) x306))) x65))
(assert (x491 (- x694 x1244)))
(assert (x205 x59))
(assert (= (x163 (x300 x1239)) x1239))
(assert (=> (>= 10000 x1184) (= (x300 x1184) (x297 x1184))))
(assert (= (or (and (not x1269) x781) (and x812 x93) (and (not x126) x820)) x567))
(assert (x205 x985))
(assert (x205 x699))
(assert (x491 (- x695 x1244)))
(assert (x491 (- x1027 x460)))
(assert (x205 x709))
(assert (x205 x1217))
(assert (= (x163 (x300 x850)) x850))
(assert (x205 x1335))
(assert (x205 x213))
(assert (= 1889567281 (x163 (x297 1889567281))))
(assert (x442 x695 x617 x460 x1502))
(assert (= (and x482 x27) x215))
(assert (x935 x664 x669 x954 x173))
(assert (x491 (- x1027 x669)))
(assert (= x1446 (x163 (x300 x1446))))
(assert (x924 x460 (- x1502 x669)))
(assert (x205 x1032))
(assert (x442 x664 x669 x173 x954))
(assert (x921 x926))
(assert (x442 x694 x695 x954 x173))
(assert (x935 x668 x1244 x617 x695))
(assert (x924 x694 (- x695 x1502)))
(assert (x924 x668 (- x1244 x1027)))
(assert (= (x163 (x300 x1565)) x1565))
(assert (= (x163 (x300 x1327)) x1327))
(assert (x442 x460 x1502 x1244 x668))
(assert (x205 x936))
(assert (x205 x964))
(assert (x491 (- x173 x438)))
(assert (=> (<= x1261 10000) (= (x297 x1261) (x300 x1261))))
(assert (x924 x1502 x460))
(assert (x205 x1426))
(assert (x205 x236))
(assert (x442 x694 x695 x664 x669))
(assert (x921 x335))
(assert (= x461 x1108))
(assert (x442 x460 x1502 x1027 x438))
(assert (x205 x131))
(assert (x205 x129))
(assert (x205 x483))
(assert (x205 x1416))
(assert (x205 x893))
(assert (x205 x1611))
(assert (x921 x1085))
(assert (x205 x778))
(assert (x205 x842))
(assert (x924 x438 (- x1027 x664)))
(assert (x205 x623))
(assert (= x1342 (x163 (x300 x1342))))
(assert (=> (>= 10000 x1449) (= (x300 x1449) (x297 x1449))))
(assert (x935 x669 x664 x954 x173))
(assert (x205 x1407))
(assert (=> (<= x1010 10000) (= (x297 x1010) (x300 x1010))))
(assert (= (x163 (x300 x1449)) x1449))
(assert (x924 x617 (- x695 x173)))
(assert (x491 (- x617 x694)))
(assert (x205 x344))
(assert (= (x300 2293535753) (x297 2293535753)))
(assert (x924 x1244 (- x668 x664)))
(assert (= (x163 (x300 x771)) x771))
(assert (= (=> (and (= x744 x476) (> x79 0) (= x1439 (x60 (x300 x1102) (x297 10) 0)) (> 2293535753 x1105) (= x1105 69947311) (= x79 (x1422 (x300 274184521717934524641157099916833587206))) (= x744 (x1002 x1252)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x744) (> 911411945 x1105) (<= 0 x744) (= x1252 (x60 (x300 x22) x1439 0)) (< x1105 468353030) (<= x22 1461501637330902918203684832716283019655932542975)) (=> (and (= x1462 x907) (= x876 x360) (= x507 x476) (= x778 x1074)) x279)) x1365))
(assert (= 0 (x193 x467)))
(assert (x442 x438 x1027 x668 x777))
(assert (= x1216 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1101) (not (> 2293535753 x1310)) (not (= 2690754053 x1310)) (< x1310 2960351575) (= 2798343961 x1310) (= (x1422 (x300 274184521717934524641157099916833587206)) x661) (< 0 x661) (>= x1101 0) (>= 1461501637330902918203684832716283019655932542975 x630) (not (< x1310 2690754053)) (= x1130 x1101) (= (x60 (x300 x630) x97 0) x114) (not (= 2743102681 x1310)) (= x1101 (x542 x114)) (not (= x1310 2764855426)) (= (x60 (x300 x1347) (x297 5) 0) x97)) (=> (and (= x1420 x778) (= x907 x1264) (= x1130 x712) (= x381 x382) (= x626 x360)) x795))))
(assert (x924 x694 (- x695 x777)))
(assert (= (x680 x1071) 0))
(assert (x921 x296))
(assert (x205 x450))
(assert (x924 x668 (- x1244 x669)))
(assert (x921 x1248))
(assert (x442 x669 x664 x1244 x668))
(assert (x205 x958))
(assert (x491 (- x617 x1027)))
(assert (x205 x1207))
(assert (= x1141 (x163 (x300 x1141))))
(assert (= x692 (and x763 x797)))
(assert (= (x1295 x584) (ite (= x788 x584) x1207 (x35 x584))))
(assert (x935 x695 x694 x617 x695))
(assert (x442 x695 x617 x694 x695))
(assert (x442 x1244 x668 x617 x695))
(assert (x205 x850))
(assert (x921 x824))
(assert (x205 x1566))
(assert (= x1424 (=> (and (>= x1103 0) (= x1103 (x957 x3)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1103) (= x54 (x60 (x300 x1192) (x297 7) 0)) (= x255 (= x1103 0)) (= x221 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x1303) (= x3 (x60 (x300 x1303) x841 0)) (= (x60 (x300 x221) x54 0) x841)) (and (=> x255 x1046) (=> (and (not x255) (= x1192 x1382)) x1532)))))
(assert (x935 x460 x1502 x1244 x668))
(assert (x491 (- x695 x777)))
(assert (x205 x268))
(assert (x924 x460 (- x1502 x777)))
(assert (x205 x919))
(assert (x205 x199))
(assert (= (ite (and x448 x1113) (x542 x1491) (x1233 x1491)) (x1595 x1491)))
(assert (= x504 x343))
(assert (x921 x293))
(assert (x924 x777 x668))
(assert (=> (>= 10000 x1086) (= (x300 x1086) (x297 x1086))))
(assert (x205 x1270))
(assert (x442 x695 x617 x664 x669))
(assert (= (x35 x788) (ite (and (not x762) x448 (not x170) x302) (x417 x788) (ite (and (not x302) x448 (not x762)) (x175 x788) (ite (and x448 x762) (x175 x788) (x13 x788))))))
(assert (x924 x664 (- x669 x438)))
(assert (x921 x1303))
(assert (x442 x1502 x460 x668 x1244))
(assert (x921 x82))
(assert (=> (<= x1242 10000) (= (x300 x1242) (x297 x1242))))
(assert (x205 x474))
(assert (x205 x1200))
(assert (=> (>= 10000 x745) (= (x300 x745) (x297 x745))))
(assert (x924 x664 (- x669 x460)))
(assert (=> (<= x520 10000) (= (x300 x520) (x297 x520))))
(assert (x924 x668 (- x777 x669)))
(assert (x921 x1543))
(assert (x924 x695 (- x694 x954)))
(assert (x205 x1393))
(assert (x442 x954 x173 x664 x669))
(assert (x205 x923))
(assert (= (x414 x575) (ite (and x791 x1561) (x248 x575) (ite (and (not x791) x88 x1561) (x1306 x575) (x94 x575)))))
(assert (x205 x76))
(assert (x935 x1244 x668 x1502 x460))
(assert (= x343 x1135))
(assert (x924 x668 (- x777 x617)))
(assert (= 0 (x328 192)))
(assert (x205 x987))
(assert (= x1538 (x163 (x300 x1538))))
(assert (= (x297 2514000705) (x300 2514000705)))
(assert (x921 x1209))
(assert (=> (<= x280 10000) (= (x300 x280) (x297 x280))))
(assert (x491 (- x664 x617)))
(assert (x935 x954 x173 x669 x664))
(assert (= (x297 2798343961) (x300 2798343961)))
(assert (x205 x1444))
(assert (x767 1000000000000000000 x1472))
(assert (= (x163 (x300 x1023)) x1023))
(assert (x205 x1095))
(assert (x442 x1502 x460 x438 x1027))
(assert (x491 (- x695 x173)))
(assert (= (or (and x1544 (not x621)) (and x27 (not x482)) (and x799 x1250)) x590))
(assert (x205 x776))
(assert (= x228 (x163 (x300 x228))))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x163 (x297 115792089237316195423570985008687907853269984665640564039457))))
(assert (= (x163 (x297 1968616202)) 1968616202))
(assert (x921 x441))
(assert (x205 x277))
(assert (x205 x1430))
(assert (x442 x695 x617 x668 x1244))
(assert (x205 x91))
(assert (x442 x1027 x438 x695 x617))
(assert (x205 x208))
(assert (x921 x1042))
(assert (x442 x695 x694 x438 x1027))
(assert (x491 (- x1244 x668)))
(assert (= 2514000705 (x163 (x297 2514000705))))
(assert (= x92 (and x1406 (not x1345))))
(assert (x921 x1096))
(assert (x205 x576))
(assert (= x1152 (and x78 x55)))
(assert (x935 x695 x617 x438 x1027))
(assert (x442 x173 x954 x777 x668))
(assert (x205 x1011))
(assert (x921 x808))
(assert (= (or x463 (and x115 x73)) x1561))
(assert (x921 x635))
(assert (x205 x250))
(assert (x924 x1027 (- x438 x695)))
(assert (= 2418364589 (x163 (x297 2418364589))))
(assert (x205 x153))
(assert (=> (<= x450 10000) (= (x300 x450) (x297 x450))))
(assert (x205 x1459))
(assert (x205 x1223))
(assert (x924 x664 (- x669 x777)))
(assert (= x993 (x163 (x300 x993))))
(assert (x205 x1194))
(assert (= (=> (and (< x1368 2293535753) (= x1368 142201243) (> 468353030 x1368) (= (x1422 (x300 274184521717934524641157099916833587206)) x725) (= x390 (x494 x271)) (<= x390 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x301 (x60 (x300 x876) (x297 9) 0)) (>= 1461501637330902918203684832716283019655932542975 x1462) (>= x390 0) (< x1368 911411945) (= (x60 (x300 x1074) x301 0) x1493) (= x1541 x390) (= x271 (x60 (x300 x1462) x1493 0)) (> x725 0) (<= x1074 1461501637330902918203684832716283019655932542975) (not (= 69947311 x1368)) (not (= 87118632 x1368))) (=> (and (= x793 x778) (= (and x975 x1385) x267) (= x907 x477) (= (>= x507 x1427) x1385) (= x360 x1441) (= x1427 x1541)) x1219)) x279))
(assert (x205 x1531))
(assert (= (ite (and x791 x1561) (x248 x1457) (ite (and (not x791) x1561 x88) (x1306 x1457) (x94 x1457))) (x414 x1457)))
(assert (x205 x1528))
(assert (x205 x1001))
(assert (x205 x1378))
(assert (x442 x695 x694 x668 x777))
(assert (x205 x1359))
(assert (x924 x617 (- x695 x669)))
(assert (x491 (- x954 x777)))
(assert (x205 x1500))
(assert (x442 x695 x617 x173 x954))
(assert (x935 x438 x1027 x669 x664))
(assert (x491 (- x1027 x173)))
(assert (x205 x1567))
(assert (= x182 (x163 (x300 x182))))
(assert (x924 x1027 (- x438 x954)))
(assert (x205 x234))
(assert (= (x163 (x297 2690754053)) 2690754053))
(assert (x442 x1502 x460 x954 x173))
(assert (x491 x668))
(assert (x1146 x1180 x368))
(assert (= x1044 (and (not x1025) x447)))
(assert (x205 x1488))
(assert (x935 x668 x777 x1502 x460))
(assert (x924 x668 (- x777 x954)))
(assert (=> (<= x868 10000) (= (x297 x868) (x300 x868))))
(assert (= (x163 (x300 x520)) x520))
(assert (x205 x1285))
(assert (x442 x617 x695 x438 x1027))
(assert (x442 x669 x664 x1027 x438))
(assert (= (x163 (x300 x1450)) x1450))
(assert (=> (>= 10000 x1303) (= (x297 x1303) (x300 x1303))))
(assert (x205 x1329))
(assert (= x303 (=> (= (= 274184521717934524641157099916833587214 x1388) x834) (and (=> (not x834) x1022) (=> (and (>= x1328 0) (= x168 x276) (= x241 x276) (= 2835717307 x1559) (= (x1353 x676) x1328) (>= x786 0) (not (> 649617121 x1559)) (= x1377 x786) (not x937) (= x1528 x179) (= x761 x370) (= x409 (< x1328 x276)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x786 x276)) (= (x60 (x300 274184521717934524641157099916833587206) (x297 1) 0) x233) (<= x1528 1461501637330902918203684832716283019655932542975) (= 274184521717934524641157099916833587206 x619) (not (= x1559 2514000705)) (< 0 x673) (not (= 826074471 x1559)) (not x1323) (= x673 (x1422 (x300 274184521717934524641157099916833587214))) (= x818 (+ x241 x1377)) (not (< x370 4)) (= x676 (x60 (x300 274184521717934524641157099916833587206) (x297 1) 0)) (not x409) (= x805 (x484 (- x1328 x168))) (= x1214 x1528) (= x370 68) (= 274184521717934524641157099916833587206 x631) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1328) x834 (= (> x168 x1328) x1029) (not (= 1889567281 x1559)) (<= x786 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 32 x1369) (= 1 x1592) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x944) (not x1029) (= x1458 (x484 (- x370 4))) (= x1323 (or (and (= (<= x1458 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1458)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1458))) (= x168 x1271) (= x786 (x1354 x1364)) (= x937 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x276 x786))) (not (= 649617121 x1559)) (= (x60 (x300 x1528) (x297 1) 0) x1364)) x1485)))))
(assert (x491 (- x954 x695)))
(assert (=> (>= 10000 x1017) (= (x297 x1017) (x300 x1017))))
(assert (x1455 x872))
(assert (x205 x1328))
(assert (x205 x1479))
(assert (= (x163 (x297 2835717307)) 2835717307))
(assert (x921 x1016))
(assert (=> (>= 10000 x643) (= (x300 x643) (x297 x643))))
(assert (= x162 (x163 (x300 x162))))
(assert (= x161 x797))
(assert (=> (<= x833 10000) (= (x297 x833) (x300 x833))))
(assert (x924 x695 (- x694 x173)))
(assert (x442 x668 x1244 x777 x668))
(assert (= x1303 (x163 (x300 x1303))))
(assert (= (ite (and x791 x1561) (x909 x160) (ite (and x88 x1561 (not x791)) (x909 x160) (x704 x160))) (x159 x160)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x163 (x297 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x205 x740))
(assert (x205 x503))
(assert (= (x163 (x297 1000000000000000000)) 1000000000000000000))
(assert (=> (<= x382 10000) (= (x297 x382) (x300 x382))))
(assert (x205 x756))
(assert (x491 (- x669 x694)))
(assert (=> (>= 10000 x1479) (= (x297 x1479) (x300 x1479))))
(assert (=> (<= x740 10000) (= (x297 x740) (x300 x740))))
(assert (= (x300 826074471) (x297 826074471)))
(assert (x935 x1027 x438 x1502 x460))
(assert (x935 x694 x695 x1502 x460))
(assert (x205 x1078))
(assert (x442 x1027 x438 x695 x694))
(assert (x491 (- x777 x617)))
(assert (x921 x1023))
(assert (x442 x668 x777 x438 x1027))
(assert (=> (<= x335 10000) (= (x297 x335) (x300 x335))))
(assert (x442 x669 x664 x954 x173))
(assert (= (x163 (x297 2764855426)) 2764855426))
(assert (x205 x246))
(assert (x442 x173 x954 x694 x695))
(assert (x442 x173 x954 x669 x664))
(assert (x205 x1248))
(assert (x442 x1244 x668 x954 x173))
(assert (x935 x777 x668 x617 x695))
(assert (x491 (- x438 x664)))
(assert (x442 x777 x668 x695 x617))
(assert (x924 x668 (- x1244 x695)))
(assert (= (x300 2960351575) (x297 2960351575)))
(assert (= (=> (and (<= x137 1461501637330902918203684832716283019655932542975) (= (x60 (x300 x1358) x557 0) x1331) (= x1160 x310) (< x829 2960351575) (not (< x829 2293535753)) (<= x1209 1461501637330902918203684832716283019655932542975) (>= x1160 0) (= x829 2532887486) (<= x1358 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1160) (not (= 2418364589 x829)) (not (= 2293535753 x829)) (= (x1422 (x300 274184521717934524641157099916833587206)) x756) (= x1160 (x175 x146)) (= (x60 (x300 x1209) x269 0) x557) (not (= x829 2512682246)) (< 0 x756) (= (x60 (x300 x182) (x297 4) 0) x269) (> 2690754053 x829) (= x146 (x60 (x300 x137) x1331 0))) (=> (and (= (x1167 (* 32 x919)) x475) (not (> 2293535753 x925)) (> x976 0) (>= 1461501637330902918203684832716283019655932542975 x456) (= x880 x383) (= x430 x1238) (= x815 x386) (not (or (and (> 160 x940) (= (<= x940 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x940 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x919 (x285 x118)) (= (<= x413 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (= x456 x386) (>= 1461501637330902918203684832716283019655932542975 x1175) (= x524 (x1360 (+ 36 x383))) (not (= x925 2690754053)) (= (x1422 (x300 274184521717934524641157099916833587206)) x976) (= (x1360 (+ 160 x475)) x165) (not (> 4 x413)) (not (> x880 18446744073709551615)) (not (= x925 2764855426)) (> x1211 x1238) (= x949 (and x1008 x412)) (= x1419 x644) (<= x1343 1461501637330902918203684832716283019655932542975) (= x1407 x1192) (= (<= x932 x59) x1008) x949 (= x76 x1175) (= x1355 (x1360 (+ x1161 x524))) (>= x1211 0) (= (x1360 (+ x383 4)) x118) (not (= 2798343961 x925)) (= x1175 x682) (= (x1360 (+ 35 x383)) x1374) (>= 1461501637330902918203684832716283019655932542975 x882) (= x653 x1343) (>= 1461501637330902918203684832716283019655932542975 x1198) (= x310 x932) (= x319 0) (not (< x413 x1355)) (not (= 2743102681 x925)) (= x388 x319) (= x1011 x1343) (= (x1167 (* 32 x919)) x1161) (or x176 (and (not x176) (= x913 (x1167 (* x919 32))))) (= x940 (x484 (- x413 4))) (= x1238 x889) (not (> x919 18446744073709551615)) (= x1301 (x1360 (+ x475 32))) (<= 0 x882) (not (= x925 2868243304)) (not (< x1238 x1192)) (= x1558 x882) (<= x1211 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x925 2960351575) (= 2939843472 x925) (<= 0 x456) (<= 0 x1198) (= x1192 x391) (> x413 163) (= (= 0 x919) x176) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1374) (<= x413 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1374 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x413 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x413 x1374))) (not (< x925 2690754053))) x1598)) x487))
(assert (x921 x314))
(assert (x924 x954 (- x173 x617)))
(assert (x205 x524))
(assert (x491 (- x1502 x777)))
(assert (x491 32))
(assert (= (=> (and (= x943 (x60 (x300 x616) (x297 7) 0)) (>= x204 0) (= x706 (x60 (x300 x1239) x1526 0)) (= (= x204 0) x1250) (= (x957 x706) x204) (= x1239 (x147 1461501637330902918203684832716283019655932542975 x1175)) (<= x204 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x60 (x300 x1017) x943 0) x1526) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x1017)) (and (=> (and (= (x484 (- x616 1)) x10) (not x998) x1250 (= x998 (< 0 x10))) x658) (=> (and (= x616 x1382) (not x1250)) x1532))) x252))
(assert (= (=> (= (< 0 x1192) x482) (and (=> (not x482) x658) (=> x482 x1424))) x1568))
(assert (= x1548 (or x1035 x986)))
(assert (x205 x786))
(assert (x921 x1291))
(assert (x935 x694 x695 x617 x695))
(assert (x205 x280))
(assert (= x814 (or (and x1345 x1406) (and x1104 x51))))
(assert (= (=> (and (= (x373 x229) x984) (= x1417 (x298 x376)) (= (x60 (x300 x1326) x1300 0) x376) (= x1095 (x686 x66)) (<= 0 x1472) (= x120 (x890 x1566)) (= x683 (x1360 (+ x250 64))) (= (x60 (x300 x1192) (x297 3) 0) x1009) (or (and (= x1408 1) (= (< 0 x919) x302) (or (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x603 x1304)) (= 0 x851) (= (x285 x8) x1241) (= x129 (x147 1461501637330902918203684832716283019655932542975 x1175)) (< 0 x919) (<= 0 x213) (< 0 x919) (= x231 (+ x316 x1362)) (= x1472 x142) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x338) (= (x1000 x872 1000000000000000000) x603) (= x751 (x60 (x300 x535) x1376 0)) (= x777 (x1140 x962)) (= x8 x524) (<= x1241 1461501637330902918203684832716283019655932542975) (= (x60 (x300 x129) x751 0) x26) (= x643 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= x603 x316) (>= x851 0) (> x709 0) x302 (= x852 (x60 (x300 x1192) (x297 11) 0)) (= (x285 x8) x450) (<= x450 1461501637330902918203684832716283019655932542975) (= x737 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= (x175 x1084) x213) (< (x1187 x777 x668) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x777) (>= x777 0) (= (x60 (x300 x338) x1163 0) x1436) (= x213 x1109) (= x535 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= x967 (x60 (x300 x1192) (x297 4) 0)) (= (x60 (x300 x643) x967 0) x1163) (<= x1137 1461501637330902918203684832716283019655932542975) (= (x264 160) x1304) (= x872 (x1187 x777 x668)) (or (and (= (x757 128) x837) (= (> x919 2) x1099) (= (x1187 x1244 x668) x1162) (= x1261 (x285 x1014)) (= (x60 (x300 x1261) x1134 0) x1539) (< 1 x919) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1187 x1244 x668)) (= (x60 (x300 x283) x655 0) x256) (= x206 (x417 x1539)) (= (x60 (x300 x1429) x1172 0) x547) (= x1244 (x1140 x1564)) (= x485 0) (<= x206 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x206 x1472) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1244) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x915 x291)) (>= 1461501637330902918203684832716283019655932542975 x1156) (> x919 1) (> x837 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x485) (= x1564 (x60 (x300 x1156) x174 0)) (= (x60 (x300 x1192) (x297 4) 0) x1325) (= x1313 x206) (= (x60 (x300 x808) x1325 0) x1363) (< 1 x919) (= x291 (x517 192)) (= x174 (x60 (x300 x1085) x583 0)) (= x915 (x1000 x1162 1000000000000000000)) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x936) (<= x1429 1461501637330902918203684832716283019655932542975) (= (x1360 (+ x118 64)) x1014) (= x1156 (x285 x1014)) (= x583 (x60 (x300 x1192) (x297 11) 0)) (= x291 x912) (= x1220 x915) (>= x206 0) (= x1172 (x60 (x300 x936) x256 0)) (= x810 x1472) (= (+ x1220 x912) x236) (<= 0 x485) (<= x1261 1461501637330902918203684832716283019655932542975) (= (x417 x547) x485) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x808) (= (+ x810 x1313) x1547) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x283) (= (x60 (x300 x1192) (x297 4) 0) x655) (= (x60 (x300 x1285) x1363 0) x1134) (= x1429 (x285 x1014)) (<= x1244 115792089237316195423570985008687907853269984665640564039457584007913129639935) x170 (= x1085 (x147 1461501637330902918203684832716283019655932542975 x1343)) (not x1099) (= (x147 1461501637330902918203684832716283019655932542975 x1175) x1285)) (not x170)) (= x1362 x1304) (= (x60 (x300 x1192) (x297 4) 0) x1376) (< (+ x1472 x213) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1596 (x60 (x300 x1241) x26 0)) (> x919 0) (= x962 (x60 (x300 x1137) x1222 0)) (= (> x919 1) x170) (= (x175 x1596) x851) (= (x757 128) x709) (<= x851 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x60 (x300 x737) x852 0) x1222) (= (x285 x8) x1137) (<= x213 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x60 (x300 x450) x1436 0) x1084) (= (+ x142 x1109) x1224)) (not x302)) (= x1107 (x1167 (* x1472 1000000000000000000))) (= 0 x988) (= (x1000 x1107 x612) x668) (= x988 (x147 x1408 x1593)) (< 0 x612) (not x762) (= (ite (< 115792089237316195423570985008687907853269984665640564039457 x1472) 1 0) x1593)) x762) (= x1300 (x60 (x300 x1192) (x297 6) 0)) (<= x1472 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x984) (or (and (or (and (= (x1487 x250) x496) (not (< x1020 x496)) (= (x484 (- x1020 x496)) x38) x713 (= x38 x1502)) (and (not x713) (= x700 (ite (> 604800 x238) x238 604800)) (= (x484 (- x1020 x1417)) x238) (= x864 604800) (= x700 x1502) (not (< x1020 x1417)))) x371 (= x713 (= 0 x1417)) (= x1119 (> x644 x1594)) (or (and x1119 (= x982 (x890 x1566)) (= x982 x1020)) (and (= x1020 x644) (not x1119))) (= x1594 (x890 x1566))) (and (= 0 x1502) (not x371))) (or (and (= x614 x1514) (= (+ x990 x614) x992) (< (x1187 x1502 x460) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1315 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= x1404 (x60 (x300 x993) x132 0)) (= x282 x427) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x427 x1514)) (= (x1187 x1502 x460) x282) (= (x60 (x300 x1192) (x297 6) 0) x149) (= x903 (x60 (x300 x1315) x149 0)) (<= 0 x1514) (= x1514 (x542 x1404)) (= x993 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= (x60 (x300 x1192) (x297 5) 0) x132) (= x427 x990) (<= x1514 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x1113)) (and (= (x147 1461501637330902918203684832716283019655932542975 x1343) x1342) (= (x60 (x300 x1192) (x297 6) 0) x652) (= x1243 (x60 (x300 x1342) x652 0)) x1113)) (= (x1360 (+ x250 32)) x1566) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x612) (<= x1417 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x159 x530) x1472) (= (= 0 x1502) x1113) (= x464 (x60 (x300 x1192) (x297 5) 0)) (or (and (= x187 (x60 (x300 x1170) x527 0)) (not x1356) (= x1170 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= x527 (x60 (x300 x1192) (x297 10) 0))) x1356) (= x587 (x60 (x300 x1538) x1009 0)) (<= 0 x612) (<= 0 x1417) (= x1326 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= (x147 1461501637330902918203684832716283019655932542975 x1343) x1538) (= x530 (x60 (x300 x672) x587 0)) (= (x606 x229 1) x66) (= (x60 (x300 x1184) x464 0) x671) (= x1356 (= x1088 0)) (= x371 (> x120 x1417)) (= x762 (= 0 x1472)) (<= 0 x984) (= x672 (x147 1461501637330902918203684832716283019655932542975 x1175)) (= x612 (x1595 x671)) (= x1184 (x147 1461501637330902918203684832716283019655932542975 x1343)) (>= x1095 0) (<= x1095 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x229 (x60 (x300 x1192) (x297 1) 0))) x1332) x369))
(assert (x491 (- x617 x695)))
(assert (x205 x443))
(assert (x205 x668))
(assert (x205 x1170))
(assert (x924 x694 (- x695 x668)))
(assert (x491 (- x460 x694)))
(assert (x205 x198))
(assert (x205 x520))
(assert (x205 x824))
(assert (x491 (- x173 x777)))
(assert (x924 x777 (- x668 x954)))
(assert (x205 x1343))
(assert (x924 x438 (- x1027 x1244)))
(assert (x491 (- x954 x1502)))
(assert (=> (>= 10000 x1421) (= (x300 x1421) (x297 x1421))))
(assert (= (x414 x235) (ite (and x791 x1561) (x248 x235) (ite (and (not x791) x88 x1561) (x1306 x235) (x94 x235)))))
(assert (x924 x460 (- x1502 x668)))
(assert (x921 x294))
(assert (x924 x954 (- x173 x694)))
(assert (x205 x1238))
(assert (x921 x382))
(assert (x205 x359))
(assert (= (x163 (x300 x1285)) x1285))
(assert (x921 x771))
(assert (= (x163 (x300 x280)) x280))
(assert (x921 x1185))
(assert (x442 x1502 x460 x694 x695))
(assert (x921 x630))
(assert (x205 x1130))
(assert (x491 (- x669 x695)))
(assert (x205 x1145))
(assert (= (x163 (x300 x294)) x294))
(assert (x924 x695 (- x694 x1244)))
(assert (=> (>= 10000 x931) (= (x300 x931) (x297 x931))))
(assert (= (x297 274184521717934524641157099916833587214) (x300 274184521717934524641157099916833587214)))
(assert (x205 x1411))
(assert (=> (>= 10000 x1342) (= (x297 x1342) (x300 x1342))))
(assert (x205 x230))
(assert (x924 x695 (- x617 x668)))
(assert (x205 x1387))
(assert (x924 x669 (- x664 x695)))
(assert (x442 x669 x664 x668 x777))
(assert (x205 x57))
(assert (=> (>= 10000 x1156) (= (x300 x1156) (x297 x1156))))
(assert (x205 x933))
(assert (= (x1595 x804) (ite (and x1113 x448) (x542 x804) (x1233 x804))))
(assert (x205 x643))
(assert (= (x163 (x300 x630)) x630))
(assert (x921 x738))
(assert (x205 x653))
(assert (=> (<= x1291 10000) (= (x297 x1291) (x300 x1291))))
(assert (x921 x162))
(assert (= (x300 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x297 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x924 x695 (- x617 x1244)))
(assert (x205 x1397))
(assert (= 274184521717934524641157099916833587218 (x163 (x300 274184521717934524641157099916833587218))))
(assert (= (and x215 x255) x1544))
(assert (x491 (- x954 x1027)))
(assert (x924 x669 (- x664 x438)))
(assert (x921 x1196))
(assert (x935 x617 x695 x438 x1027))
(assert (x442 x694 x695 x777 x668))
(assert (x205 x238))
(assert (x205 x749))
(assert (= x283 (x163 (x300 x283))))
(assert (x935 x460 x1502 x954 x173))
(assert (x205 x586))
(assert (x924 x695 (- x617 x664)))
(assert (x205 x1271))
(assert (x205 x242))
(assert (x205 x111))
(assert (x924 x694 (- x695 x617)))
(assert (x205 x896))
(assert (x442 x694 x695 x669 x664))
(assert (x921 x931))
(assert (x107 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (>= 10000 x218) (= (x300 x218) (x297 x218))))
(assert (x491 (- x438 x173)))
(assert (x205 x354))
(assert (x205 x116))
(assert (x921 x1112))
(assert (x924 x954 (- x173 x1502)))
(assert (x921 x359))
(assert (x205 x477))
(assert (= (x163 (x300 x605)) x605))
(assert (=> (>= 10000 x410) (= (x297 x410) (x300 x410))))
(assert (= (x163 (x300 x1192)) x1192))
(assert (= x463 (or x1136 x590)))
(assert (= x1485 (=> (and (or (and (= x312 (not x839)) (= x622 (x384 x15)) x1305 (= (x1605 x1071) x462) (= (= x462 0) x839) (= x462 x826) (= (ite x312 1 0) x826) (not (or (> x622 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x622)) (< x622 32)))) (> x462 0) (= (x1360 (+ x15 32)) x1071)) (not x1305)) (= x1068 (< (x345 (x300 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x1481) (or (and x792 (= 96 x15)) (and (not x792) (= x113 (x1360 (+ 96 x4))) (= x881 x15))) (not (= 0 x1592)) x1068 (= x938 (x1533 (x300 x1388))) (= x1481 (> x919 2)) (= x792 (= x1369 0)) (= x1305 (< 0 x901)) (= (x384 x15) x901)) x46)))
(assert (x491 (- x669 x438)))
(assert (x205 x120))
(assert (=> (<= x677 10000) (= (x300 x677) (x297 x677))))
(assert (x205 x847))
(assert (x205 x1226))
(assert (x935 x664 x669 x1244 x668))
(assert (x442 x460 x1502 x668 x1244))
(assert (x205 x1137))
(assert (x935 x1244 x668 x694 x695))
(assert (x205 x859))
(assert (= (x163 (x300 x500)) x500))
(assert (x921 x1032))
(assert (x924 x777 (- x668 x1502)))
(assert (x935 x777 x668 x669 x664))
(assert (x205 x1320))
(assert (x921 x128))
(assert (x924 x694 (- x695 x664)))
(assert (= (ite (and x176 x1121) (x328 160) (x90 160)) (x264 160)))
(assert (x935 x695 x694 x438 x1027))
(assert (x205 x966))
(assert (= x1035 (or (and x639 x811) (and (not x55) x78) (and x6 (not x726)))))
(assert (x935 x664 x669 x694 x695))
(assert (x491 (- x694 x777)))
(assert (x921 x1086))
(assert (x924 x1502 (- x460 x173)))
(assert (x205 x1107))
(assert (x442 x617 x695 x668 x777))
(assert (x924 x954 (- x173 x664)))
(assert (x491 (- x777 x173)))
(assert (x491 (- x694 x1502)))
(assert (x924 x694 (- x695 x1027)))
(assert (x924 x664 (- x669 x1502)))
(assert (= 2258409472 (x163 (x297 2258409472))))
(assert (=> (<= x1329 10000) (= (x300 x1329) (x297 x1329))))
(assert (x205 x913))
(assert (=> (>= 10000 x842) (= (x297 x842) (x300 x842))))
(assert (x935 x669 x664 x438 x1027))
(assert (x491 (- x617 x668)))
(assert (=> (<= x535 10000) (= (x300 x535) (x297 x535))))
(assert (x442 x1502 x460 x777 x668))
(assert (= (x163 (x297 2211524764)) 2211524764))
(assert (x491 (- x664 x777)))
(assert (x442 x438 x1027 x1502 x460))
(assert (= (x592 x15) (ite (and x814 (not x1572)) (x720 x15) (x552 x15))))
(assert (x205 x1))
(assert (= (ite (and x1561 x791) (x248 x1075) (ite (and x1561 x88 (not x791)) (x1306 x1075) (x94 x1075))) (x414 x1075)))
(assert (=> (<= x1138 10000) (= (x297 x1138) (x300 x1138))))
(assert (x924 x954 (- x173 x1244)))
(assert (x491 (- x1502 x954)))
(assert (x921 274184521717934524641157099916833587214))
(assert (x921 x1450))
(assert (= x1196 (x163 (x300 x1196))))
(assert (x205 x805))
(assert (x205 x991))
(assert (x205 x1518))
(assert (x442 x668 x1244 x664 x669))
(assert (x491 (- x438 x668)))
(assert (x205 x4))
(assert (x935 x694 x695 x777 x668))
(assert (x924 x1027 (- x438 x617)))
(assert (= 2743102681 (x163 (x297 2743102681))))
(assert (x442 x695 x617 x669 x664))
(assert (x205 x1175))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x243) (= (x60 (x300 x294) x589 0) x284) (<= x1529 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 2690754053 x1588) (not (= 2418364589 x1588)) (= x420 (x1422 (x300 274184521717934524641157099916833587206))) (= x1588 2532887486) (= (x994 x284) x1529) (not (> 2293535753 x1588)) (= x1148 x1529) (< 0 x420) (>= x1529 0) (= x103 (x60 (x300 x243) x1372 0)) (>= 1461501637330902918203684832716283019655932542975 x294) (not (= 2293535753 x1588)) (not (= 2512682246 x1588)) (= (x60 (x300 x745) (x297 4) 0) x1372) (= (x60 (x300 x693) x103 0) x589) (> 2960351575 x1588) (<= x693 1461501637330902918203684832716283019655932542975)) x1110) x9))
(assert (= x528 (=> (and (= x222 x1278) (not (= x86 2743102681)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1278) (= (x60 (x300 x83) (x297 5) 0) x1231) (not (< x86 2690754053)) (= x1278 (x542 x764)) (= x764 (x60 (x300 x708) x1231 0)) (<= 0 x1278) (= (x1422 (x300 274184521717934524641157099916833587206)) x11) (not (= x86 2690754053)) (< 0 x11) (not (> 2293535753 x86)) (>= 1461501637330902918203684832716283019655932542975 x708) (= x86 2798343961) (> 2960351575 x86) (not (= 2764855426 x86))) (=> (and (= x1423 x222) (= x218 x907) (= x360 x1023) (= x778 x98)) x1338))))
(assert (x205 x1358))
(assert (=> (>= 10000 x593) (= (x300 x593) (x297 x593))))
(assert (x205 x150))
(assert (x205 x388))
(assert (x205 x1450))
(assert (x107 x1175))
(assert (x205 x664))
(assert (x924 x438 (- x1027 x954)))
(assert (x205 x446))
(assert (x921 x283))
(assert (x205 x806))
(assert (x205 x1315))
(assert (= x865 (=> (and (= x1475 (x60 (x300 x740) x1466 0)) (= x740 (x147 1461501637330902918203684832716283019655932542975 x1343)) (= (= 0 x554) x468) (= x635 (x147 1461501637330902918203684832716283019655932542975 x1175)) (= x554 (x414 x1075)) (<= 0 x554) (= (x60 (x300 x1016) (x297 7) 0) x1466) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x554) (= x1075 (x60 (x300 x635) x1475 0))) (and (=> x468 x1254) (=> (and (= x1016 x1118) (not x468)) x1418)))))
(assert (x442 x1502 x460 x668 x777))
(assert (x921 x500))
(assert (x205 x283))
(assert (x921 x203))
(assert (x205 x231))
(assert (x205 x694))
(assert (x924 x777 (- x668 x694)))
(assert (x205 x418))
(assert (x205 x1103))
(assert (x442 x777 x668 x669 x664))
(assert (x491 (- x1244 x1502)))
(assert (= x953 (x163 (x300 x953))))
(assert (= 1986467848 (x163 (x297 1986467848))))
(assert (x205 x72))
(assert (x205 x1449))
(assert (x205 x1292))
(assert (x205 x1460))
(assert (x205 x1355))
(assert (x921 x1314))
(assert (x924 x438 (- x1027 x669)))
(assert (x442 x777 x668 x668 x1244))
(assert (x921 x1156))
(assert (= (ite (= x547 x1084) x1224 (x175 x547)) (x417 x547)))
(assert (x921 x1327))
(assert (x921 x977))
(assert (x924 x438 (- x1027 x617)))
(assert (x924 x1502 (- x460 x664)))
(assert (x924 x1502 (- x460 x954)))
(assert (x491 (- x664 x1027)))
(assert (x205 x192))
(assert (x491 (- x954 x669)))
(assert (x205 x405))
(assert (x442 x1244 x668 x1502 x460))
(assert (= (x417 x1183) (ite (= x1183 x1084) x1224 (x175 x1183))))
(assert (x921 x1261))
(assert (x924 x438 (- x1027 x694)))
(assert (x491 (- x694 x173)))
(assert (x442 x1027 x438 x694 x695))
(assert (=> (<= x25 10000) (= (x300 x25) (x297 x25))))
(assert (x205 x140))
(assert (x205 x661))
(assert (x442 x777 x668 x173 x954))
(assert (x921 x338))
(assert (= x221 (x163 (x300 x221))))
(assert (x205 x382))
(assert (= x586 (x163 (x300 x586))))
(assert (=> (>= 10000 x1603) (= (x297 x1603) (x300 x1603))))
(assert (x442 x954 x173 x695 x694))
(assert (x205 x1512))
(assert (x935 x1244 x668 x438 x1027))
(assert (x935 x617 x695 x669 x664))
(assert (x205 x460))
(assert (=> (>= 10000 x846) (= (x300 x846) (x297 x846))))
(assert (x442 x694 x695 x668 x777))
(assert (x205 x1050))
(assert (x205 x145))
(assert (x205 x168))
(assert (=> (<= x970 10000) (= (x297 x970) (x300 x970))))
(assert (x921 x1115))
(assert (x205 x394))
(assert (x107 1461501637330902918203684832716283019655932542975))
(assert (x935 x668 x1244 x694 x695))
(assert (x205 x897))
(assert (x205 x389))
(assert (x442 x954 x173 x1502 x460))
(assert (x205 x1237))
(assert (= x1479 (x163 (x300 x1479))))
(assert (x205 x1066))
(assert (x205 x695))
(assert (x205 x1342))
(assert (= x188 (x163 (x300 x188))))
(assert (= (x163 (x300 x335)) x335))
(check-sat)
