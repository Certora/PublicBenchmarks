(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTLIA)
(declare-datatypes ((x1161 0)) (((x1293 (x180 x1161) (x548 x1161) (x210 Int)) (x31 (x636 Int)) (x1262 (x970 x1161) (x1288 Int)))))
(declare-fun x898 () x1161)
(declare-fun x174 () x1161)
(declare-fun x229 () Int)
(declare-fun x1168 () Int)
(declare-fun x1352 () Int)
(declare-fun x291 () Int)
(declare-fun x576 () Int)
(declare-fun x211 () x1161)
(declare-fun x1327 () Bool)
(declare-fun x629 () Int)
(declare-fun x1081 () x1161)
(declare-fun x158 () Bool)
(declare-fun x1003 () x1161)
(declare-fun x740 () Int)
(declare-fun x54 () Bool)
(declare-fun x138 () Int)
(declare-fun x806 () Bool)
(declare-fun x865 () Bool)
(declare-fun x1162 () Int)
(declare-fun x962 () Int)
(declare-fun x109 () Int)
(declare-fun x539 () Bool)
(declare-fun x1012 () Int)
(declare-fun x407 () Int)
(declare-fun x475 () Bool)
(declare-fun x1320 () Int)
(declare-fun x344 () Int)
(declare-fun x501 () Bool)
(declare-fun x1374 () x1161)
(declare-fun x224 () Int)
(declare-fun x1065 () Bool)
(declare-fun x828 () Bool)
(declare-fun x906 () x1161)
(declare-fun x80 () Int)
(declare-fun x1062 () x1161)
(declare-fun x243 () x1161)
(declare-fun x465 (x1161) Int)
(declare-fun x1008 () Int)
(declare-fun x225 () Bool)
(declare-fun x937 () Int)
(declare-fun x314 () Bool)
(declare-fun x997 () Int)
(declare-fun x757 () Bool)
(declare-fun x85 () Bool)
(declare-fun x972 () x1161)
(declare-fun x4 () Bool)
(declare-fun x710 () Int)
(declare-fun x468 () x1161)
(declare-fun x782 () Int)
(declare-fun x1231 () Bool)
(declare-fun x442 () Int)
(declare-fun x659 () Int)
(declare-fun x126 () Int)
(declare-fun x641 () Bool)
(declare-fun x535 () Int)
(declare-fun x914 () Int)
(declare-fun x349 () Bool)
(declare-fun x1214 () Int)
(declare-fun x738 () Int)
(declare-fun x1146 () x1161)
(declare-fun x901 () Bool)
(declare-fun x741 () Bool)
(declare-fun x117 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x385 () Int)
(declare-fun x830 () Bool)
(declare-fun x34 (x1161) Int)
(declare-fun x359 () Int)
(declare-fun x452 (Int) x1161)
(declare-fun x677 () Int)
(declare-fun x39 () x1161)
(declare-fun x626 () x1161)
(declare-fun x102 () x1161)
(declare-fun x35 () Int)
(declare-fun x33 () Bool)
(declare-fun x148 () x1161)
(declare-fun x1115 () Int)
(declare-fun x1307 () Int)
(declare-fun x720 () Bool)
(declare-fun x1156 () x1161)
(declare-fun x1037 () Int)
(declare-fun x946 () Int)
(declare-fun x151 () Int)
(declare-fun x104 () Int)
(declare-fun x711 () x1161)
(declare-fun x1277 (x1161) Int)
(declare-fun x182 () Int)
(declare-fun x1114 () Bool)
(declare-fun x557 () Int)
(declare-fun x55 () Int)
(declare-fun x1281 () Int)
(declare-fun x927 () Bool)
(declare-fun x499 () x1161)
(declare-fun x405 () Int)
(declare-fun x490 () x1161)
(declare-fun x549 () Bool)
(declare-fun x342 () Bool)
(declare-fun x543 () Bool)
(declare-fun x53 () Int)
(declare-fun x301 () Int)
(declare-fun x569 () Int)
(declare-fun x96 () x1161)
(declare-fun x656 () x1161)
(declare-fun x1284 () Bool)
(declare-fun x304 () Int)
(declare-fun x868 () Int)
(declare-fun x1247 () Int)
(declare-fun x517 () x1161)
(declare-fun x570 (Int) Int)
(declare-fun x833 () Int)
(declare-fun x327 () Bool)
(declare-fun x228 () Int)
(declare-fun x1358 () Bool)
(declare-fun x65 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x730 () Int)
(declare-fun x983 () Bool)
(declare-fun x537 () Int)
(declare-fun x611 () x1161)
(declare-fun x695 () Bool)
(declare-fun x931 () x1161)
(declare-fun x964 () Int)
(declare-fun x1361 () Bool)
(declare-fun x170 () x1161)
(declare-fun x1118 () Bool)
(declare-fun x1223 (Int) Int)
(declare-fun x1093 () Int)
(declare-fun x951 () Int)
(declare-fun x379 () Int)
(declare-fun x144 () Bool)
(declare-fun x1270 () Int)
(declare-fun x754 () Bool)
(declare-fun x851 () Int)
(declare-fun x1150 (Int) Int)
(declare-fun x555 () Int)
(declare-fun x23 () Int)
(declare-fun x693 () Int)
(declare-fun x892 () x1161)
(declare-fun x1299 () Int)
(declare-fun x471 () Int)
(declare-fun x358 () Int)
(declare-fun x667 () Bool)
(declare-fun x262 () x1161)
(declare-fun x1290 () Bool)
(declare-fun x846 () Bool)
(declare-fun x130 () Int)
(declare-fun x630 () Int)
(declare-fun x866 () Bool)
(declare-fun x878 () Int)
(declare-fun x856 () Int)
(declare-fun x1178 (Int) Int)
(declare-fun x422 () Int)
(declare-fun x739 () Int)
(declare-fun x999 () x1161)
(declare-fun x593 () x1161)
(declare-fun x125 () x1161)
(declare-fun x706 () x1161)
(declare-fun x1158 () Int)
(declare-fun x390 () Int)
(declare-fun x861 () Bool)
(declare-fun x1357 () x1161)
(declare-fun x52 () Bool)
(declare-fun x429 () Int)
(declare-fun x859 () Int)
(declare-fun x597 () x1161)
(declare-fun x1303 () Bool)
(declare-fun x1278 () Int)
(declare-fun x230 () Int)
(declare-fun x1028 () Bool)
(declare-fun x1084 () Int)
(declare-fun x1054 () Int)
(declare-fun x1208 () Bool)
(declare-fun x234 () Int)
(declare-fun x403 () Int)
(declare-fun x250 () Bool)
(declare-fun x1198 () Int)
(declare-fun x1244 () Int)
(declare-fun x1229 () Int)
(declare-fun x674 () Int)
(declare-fun x903 () x1161)
(declare-fun x573 () x1161)
(declare-fun x954 () Int)
(declare-fun x483 () Int)
(declare-fun x137 () Int)
(declare-fun x973 () Bool)
(declare-fun x181 () Int)
(declare-fun x882 () Int)
(declare-fun x56 () Int)
(declare-fun x717 () Bool)
(declare-fun x507 () Int)
(declare-fun x1124 () Int)
(declare-fun x1279 () Int)
(declare-fun x732 () Int)
(declare-fun x1246 () Int)
(declare-fun x960 () Int)
(declare-fun x752 () Int)
(declare-fun x18 () Bool)
(declare-fun x1258 () Bool)
(declare-fun x450 () Int)
(declare-fun x798 () Bool)
(declare-fun x100 () Int)
(declare-fun x194 () x1161)
(declare-fun x1157 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x774 () Bool)
(declare-fun x768 () Int)
(declare-fun x1130 () x1161)
(declare-fun x77 (Int Int) Int)
(declare-fun x919 () Bool)
(declare-fun x679 () Int)
(declare-fun x305 () Int)
(declare-fun x1092 () Int)
(declare-fun x335 () Int)
(declare-fun x1237 () x1161)
(declare-fun x14 () Int)
(declare-fun x67 () Bool)
(declare-fun x1217 () Int)
(declare-fun x1129 () Bool)
(declare-fun x127 () Int)
(declare-fun x83 () Bool)
(declare-fun x392 () Int)
(declare-fun x534 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x969 () Bool)
(declare-fun x697 () Bool)
(declare-fun x1318 () x1161)
(declare-fun x345 () Int)
(declare-fun x431 () Int)
(declare-fun x1025 () Int)
(declare-fun x381 () x1161)
(declare-fun x75 (Int Int) Int)
(declare-fun x62 () Int)
(declare-fun x446 () Int)
(declare-fun x161 () Int)
(declare-fun x619 () x1161)
(declare-fun x72 () Bool)
(declare-fun x112 () Bool)
(declare-fun x727 () Int)
(declare-fun x414 () Int)
(declare-fun x941 () Bool)
(declare-fun x30 () x1161)
(declare-fun x343 () Int)
(declare-fun x1151 () Int)
(declare-fun x1142 () Int)
(declare-fun x1306 () Bool)
(declare-fun x1321 () Int)
(declare-fun x606 () Int)
(declare-fun x776 () Bool)
(declare-fun x41 (x1161) Int)
(declare-fun x1230 () Int)
(declare-fun x718 () Bool)
(declare-fun x433 () Int)
(declare-fun x737 () Int)
(declare-fun x37 () Int)
(declare-fun x173 (Int) Int)
(declare-fun x413 () Bool)
(declare-fun x643 () Int)
(declare-fun x1160 () Int)
(declare-fun x1098 () Bool)
(declare-fun x977 () Bool)
(declare-fun x871 () Int)
(declare-fun x804 () Int)
(declare-fun x25 () Int)
(declare-fun x380 () Int)
(declare-fun x115 () Int)
(declare-fun x1302 () Int)
(declare-fun x494 () Int)
(declare-fun x587 () x1161)
(declare-fun x1240 () Bool)
(declare-fun x114 () Bool)
(declare-fun x862 () Int)
(declare-fun x1122 () Int)
(declare-fun x990 () Int)
(declare-fun x734 () Int)
(declare-fun x152 () Bool)
(declare-fun x582 () Int)
(declare-fun x1099 () Int)
(declare-fun x36 () Int)
(declare-fun x1309 () x1161)
(declare-fun x601 () Int)
(declare-fun x1305 () Int)
(declare-fun x1378 () Int)
(declare-fun x311 () x1161)
(declare-fun x1268 () Int)
(declare-fun x825 () x1161)
(declare-fun x1113 () Int)
(declare-fun x1095 () Int)
(declare-fun x378 () Bool)
(declare-fun x595 () Bool)
(declare-fun x397 () Int)
(declare-fun x493 () Int)
(declare-fun x948 () Int)
(declare-fun x156 (x1161) Int)
(declare-fun x1088 () Int)
(declare-fun x1067 () Bool)
(declare-fun x961 () Bool)
(declare-fun x1041 () Int)
(declare-fun x462 () Int)
(declare-fun x550 () Bool)
(declare-fun x1049 () x1161)
(declare-fun x275 (x1161) Int)
(declare-fun x1362 () Int)
(declare-fun x1238 () Int)
(declare-fun x265 () Int)
(declare-fun x812 () Bool)
(declare-fun x136 () Int)
(declare-fun x1257 () Int)
(declare-fun x398 () Int)
(declare-fun x745 () Bool)
(declare-fun x447 () x1161)
(declare-fun x1109 () Int)
(declare-fun x119 () Bool)
(declare-fun x73 () Bool)
(declare-fun x251 () Int)
(declare-fun x985 () x1161)
(declare-fun x512 () Int)
(declare-fun x850 () Int)
(declare-fun x716 () Int)
(declare-fun x491 () Int)
(declare-fun x729 () Int)
(declare-fun x624 () x1161)
(declare-fun x58 () Int)
(declare-fun x322 () Int)
(declare-fun x485 () x1161)
(declare-fun x340 () Int)
(declare-fun x1070 () Int)
(declare-fun x1069 (Int) Int)
(declare-fun x292 () Int)
(declare-fun x489 (x1161) Int)
(declare-fun x918 () x1161)
(declare-fun x857 () Int)
(declare-fun x1304 () Int)
(declare-fun x185 () Int)
(declare-fun x900 () Int)
(declare-fun x1171 () Int)
(declare-fun x1301 () Bool)
(declare-fun x93 () x1161)
(declare-fun x286 () Int)
(declare-fun x1134 () Int)
(declare-fun x1341 () Int)
(declare-fun x979 () x1161)
(declare-fun x396 () Int)
(declare-fun x1254 () Bool)
(declare-fun x1365 () Int)
(declare-fun x1051 () Int)
(declare-fun x226 () Bool)
(declare-fun x334 () Bool)
(declare-fun x27 () Int)
(declare-fun x1089 () Bool)
(declare-fun x164 () Int)
(declare-fun x631 () Int)
(declare-fun x514 () Int)
(declare-fun x11 () Int)
(declare-fun x1140 () Int)
(declare-fun x566 () Int)
(declare-fun x1011 () Int)
(declare-fun x94 () Int)
(declare-fun x121 () x1161)
(declare-fun x843 () Int)
(declare-fun x531 () Bool)
(declare-fun x246 () Bool)
(declare-fun x1345 () x1161)
(declare-fun x1291 () Int)
(declare-fun x1014 () Bool)
(declare-fun x980 () Bool)
(declare-fun x1292 () Int)
(declare-fun x284 (Int) Int)
(declare-fun x1239 () Int)
(declare-fun x331 () Int)
(declare-fun x440 () Int)
(declare-fun x785 () x1161)
(declare-fun x879 () Bool)
(declare-fun x283 () Int)
(declare-fun x269 () Int)
(declare-fun x742 () Bool)
(declare-fun x357 () Int)
(declare-fun x1317 () Int)
(declare-fun x1076 () Int)
(declare-fun x540 () Int)
(declare-fun x409 () x1161)
(declare-fun x553 (Int) Int)
(declare-fun x469 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x822 () Int)
(declare-fun x1066 () x1161)
(declare-fun x923 () Int)
(declare-fun x71 () Int)
(declare-fun x994 () x1161)
(declare-fun x51 () Bool)
(declare-fun x1375 () Int)
(declare-fun x1004 () Int)
(declare-fun x110 () Bool)
(declare-fun x184 () Bool)
(declare-fun x105 () Int)
(declare-fun x723 (Int) Int)
(declare-fun x585 () Bool)
(declare-fun x325 () Int)
(declare-fun x1213 () Bool)
(declare-fun x470 () Bool)
(declare-fun x1001 () Int)
(declare-fun x1354 (Int) Int)
(declare-fun x1015 () Int)
(declare-fun x330 () x1161)
(declare-fun x453 () Int)
(declare-fun x445 () Int)
(declare-fun x1226 () Int)
(declare-fun x149 () Int)
(declare-fun x1174 () Bool)
(declare-fun x945 () x1161)
(declare-fun x896 () Int)
(declare-fun x690 () Int)
(declare-fun x559 () Bool)
(declare-fun x1197 () x1161)
(declare-fun x271 () Int)
(declare-fun x203 () Int)
(declare-fun x332 () Bool)
(declare-fun x750 () Int)
(declare-fun x921 () Int)
(declare-fun x731 () Int)
(declare-fun x758 () Int)
(declare-fun x1325 () Int)
(declare-fun x212 () Int)
(declare-fun x191 () Int)
(declare-fun x1251 () Bool)
(declare-fun x320 () Int)
(declare-fun x103 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x444 () Bool)
(declare-fun x1295 () x1161)
(declare-fun x827 (x1161) Int)
(declare-fun x675 (x1161) Int)
(declare-fun x696 () Int)
(declare-fun x371 () Int)
(declare-fun x1381 () Int)
(declare-fun x984 () Int)
(declare-fun x781 () Int)
(declare-fun x883 () Bool)
(declare-fun x755 () Bool)
(declare-fun x253 () x1161)
(declare-fun x201 () Bool)
(declare-fun x84 () Int)
(declare-fun x759 () Int)
(declare-fun x965 () Int)
(declare-fun x824 () Int)
(declare-fun x939 () x1161)
(declare-fun x845 () Int)
(declare-fun x324 () Int)
(declare-fun x1032 () Int)
(declare-fun x591 () Int)
(declare-fun x1331 () Int)
(declare-fun x1203 () Bool)
(declare-fun x384 () x1161)
(declare-fun x256 () Bool)
(declare-fun x1120 () Int)
(declare-fun x241 () x1161)
(declare-fun x1224 () Int)
(declare-fun x76 () Int)
(declare-fun x190 () x1161)
(declare-fun x1196 () Bool)
(declare-fun x1027 () Int)
(declare-fun x1319 () Int)
(declare-fun x916 () x1161)
(declare-fun x1058 () Bool)
(declare-fun x488 () Int)
(declare-fun x957 () Int)
(declare-fun x1337 () Int)
(declare-fun x187 () Bool)
(declare-fun x1382 () Int)
(declare-fun x145 () Bool)
(declare-fun x1204 () Int)
(declare-fun x897 () x1161)
(declare-fun x198 () x1161)
(declare-fun x153 () x1161)
(declare-fun x668 () Bool)
(declare-fun x1187 () x1161)
(declare-fun x707 () x1161)
(declare-fun x261 () Bool)
(declare-fun x6 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x709 () Int)
(declare-fun x1269 () Int)
(declare-fun x783 () Bool)
(declare-fun x503 () x1161)
(declare-fun x47 () Int)
(declare-fun x347 (Int) Int)
(declare-fun x1379 () x1161)
(declare-fun x1215 () Int)
(declare-fun x373 () Int)
(declare-fun x888 () Bool)
(declare-fun x456 () Int)
(declare-fun x404 () Int)
(declare-fun x1180 () Int)
(declare-fun x929 () x1161)
(declare-fun x236 () Int)
(declare-fun x1170 () Bool)
(declare-fun x772 () Int)
(declare-fun x623 () Int)
(declare-fun x464 () Bool)
(declare-fun x1090 () Int)
(declare-fun x321 () Bool)
(declare-fun x1007 (Int) Int)
(declare-fun x150 () Bool)
(declare-fun x124 () Int)
(declare-fun x694 () Int)
(declare-fun x683 () Int)
(declare-fun x849 () x1161)
(declare-fun x1339 () Int)
(declare-fun x309 () Int)
(declare-fun x1026 () x1161)
(declare-fun x244 () Bool)
(declare-fun x206 (x1161) Int)
(declare-fun x1315 () Int)
(declare-fun x1199 () Int)
(declare-fun x1145 () Bool)
(declare-fun x1356 () Int)
(declare-fun x1111 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x792 () Int)
(declare-fun x816 () Int)
(declare-fun x1250 () Int)
(declare-fun x708 () Bool)
(declare-fun x568 () Int)
(declare-fun x989 () Int)
(declare-fun x296 () Bool)
(declare-fun x12 () Int)
(declare-fun x95 () Bool)
(declare-fun x299 () Int)
(declare-fun x1087 () Bool)
(declare-fun x944 () Bool)
(declare-fun x913 () Int)
(declare-fun x307 () Int)
(declare-fun x654 () Bool)
(declare-fun x763 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x1363 () Int)
(declare-fun x831 () x1161)
(declare-fun x721 () Bool)
(declare-fun x770 () Bool)
(declare-fun x853 () Bool)
(declare-fun x686 () Int)
(declare-fun x556 () Bool)
(declare-fun x1091 () Int)
(declare-fun x277 () Bool)
(declare-fun x175 () Int)
(declare-fun x922 () x1161)
(declare-fun x880 () x1161)
(declare-fun x649 () Int)
(declare-fun x29 () Int)
(declare-fun x8 () Int)
(declare-fun x844 () Int)
(declare-fun x519 () x1161)
(declare-fun x215 () x1161)
(declare-fun x455 () Bool)
(declare-fun x847 () Int)
(declare-fun x411 () Int)
(declare-fun x658 () Int)
(declare-fun x669 () Int)
(declare-fun x610 (x1161) Int)
(declare-fun x448 () Bool)
(declare-fun x466 () Int)
(declare-fun x949 () x1161)
(declare-fun x1105 () Int)
(declare-fun x120 () Bool)
(declare-fun x259 () Bool)
(declare-fun x554 () Int)
(declare-fun x434 () Int)
(declare-fun x1030 (x1161) Int)
(declare-fun x217 () x1161)
(declare-fun x1181 () x1161)
(declare-fun x956 () Int)
(declare-fun x1086 () x1161)
(declare-fun x1335 () x1161)
(declare-fun x1311 () x1161)
(declare-fun x196 () Bool)
(declare-fun x808 () Bool)
(declare-fun x1035 () Int)
(declare-fun x647 () Int)
(declare-fun x685 () Bool)
(declare-fun x1023 () Int)
(declare-fun x1342 () Int)
(declare-fun x572 () Bool)
(declare-fun x635 () Int)
(declare-fun x227 () Int)
(declare-fun x420 () Int)
(declare-fun x354 () Int)
(declare-fun x270 (Int Int) Int)
(declare-fun x546 (Int) Int)
(declare-fun x167 () Int)
(declare-fun x432 () Int)
(declare-fun x1116 () Int)
(declare-fun x1016 () Int)
(declare-fun x1183 () Int)
(declare-fun x650 () Bool)
(declare-fun x249 () Int)
(declare-fun x637 () Bool)
(declare-fun x495 () Int)
(declare-fun x1085 () Int)
(declare-fun x111 () Int)
(declare-fun x1353 () Int)
(declare-fun x1297 () Bool)
(declare-fun x116 () Int)
(declare-fun x425 () Bool)
(declare-fun x1234 () Int)
(declare-fun x353 () Int)
(declare-fun x618 () x1161)
(declare-fun x474 () Int)
(declare-fun x281 () x1161)
(declare-fun x521 () Bool)
(declare-fun x1060 () Int)
(declare-fun x810 () Bool)
(declare-fun x208 () Int)
(declare-fun x926 () Int)
(declare-fun x193 (Int Int) Int)
(declare-fun x1369 () Int)
(declare-fun x477 () Bool)
(declare-fun x140 () Int)
(declare-fun x1228 () Int)
(declare-fun x605 () Int)
(declare-fun x613 () x1161)
(declare-fun x232 () x1161)
(declare-fun x673 () Int)
(declare-fun x480 () Bool)
(declare-fun x715 () Int)
(declare-fun x362 () Int)
(declare-fun x458 () Int)
(declare-fun x467 () Bool)
(declare-fun x609 () Int)
(declare-fun x141 () Int)
(declare-fun x811 (x1161) Int)
(declare-fun x506 () Int)
(declare-fun x1063 () Int)
(declare-fun x1289 () Bool)
(declare-fun x216 () Int)
(declare-fun x565 () Int)
(declare-fun x86 () Int)
(declare-fun x1189 () Int)
(declare-fun x1287 () Int)
(declare-fun x748 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x457 () Int)
(declare-fun x365 () Bool)
(declare-fun x1045 () Int)
(declare-fun x766 (Int) Int)
(declare-fun x155 () x1161)
(declare-fun x1264 () Int)
(declare-fun x1206 () Int)
(declare-fun x1330 () Int)
(declare-fun x680 (Int) Int)
(declare-fun x69 () Bool)
(declare-fun x278 () Int)
(declare-fun x935 () Int)
(declare-fun x749 () Bool)
(declare-fun x955 () Int)
(declare-fun x287 () Int)
(declare-fun x1173 (Int) Int)
(declare-fun x274 () Bool)
(declare-fun x642 () Int)
(declare-fun x911 (x1161) Int)
(declare-fun x372 () Int)
(declare-fun x1282 () Bool)
(declare-fun x282 () Int)
(declare-fun x998 () Bool)
(declare-fun x621 () Int)
(declare-fun x1128 () x1161)
(declare-fun x1110 () Bool)
(declare-fun x615 () Int)
(declare-fun x712 () Bool)
(declare-fun x1266 () Int)
(declare-fun x415 () Bool)
(declare-fun x836 () Int)
(declare-fun x339 () Bool)
(declare-fun x902 () Bool)
(declare-fun x388 () Int)
(declare-fun x790 () Bool)
(declare-fun x1106 (Int) Int)
(declare-fun x982 () Bool)
(declare-fun x288 () Bool)
(declare-fun x1064 () Int)
(declare-fun x17 (Int) Int)
(declare-fun x1373 () Int)
(declare-fun x823 () Int)
(declare-fun x744 () Bool)
(declare-fun x417 () x1161)
(declare-fun x660 () Int)
(declare-fun x692 () Int)
(declare-fun x302 () Int)
(declare-fun x1177 () Int)
(declare-fun x317 () Int)
(declare-fun x484 () x1161)
(declare-fun x893 () Bool)
(declare-fun x625 () x1161)
(declare-fun x113 () Int)
(declare-fun x672 () Bool)
(declare-fun x852 () x1161)
(declare-fun x1010 () Int)
(declare-fun x410 () Int)
(declare-fun x107 () Int)
(declare-fun x1249 () Int)
(declare-fun x1195 () Int)
(declare-fun x778 () Int)
(declare-fun x195 () Int)
(declare-fun x1343 () Int)
(declare-fun x1055 () Int)
(declare-fun x1029 () Int)
(declare-fun x950 (Int) Int)
(declare-fun x1101 () Bool)
(declare-fun x993 () Bool)
(declare-fun x958 () Int)
(declare-fun x1073 () Bool)
(declare-fun x32 () Int)
(declare-fun x306 () x1161)
(declare-fun x552 () Int)
(declare-fun x890 () x1161)
(declare-fun x1154 () Int)
(declare-fun x765 () Int)
(declare-fun x454 () Bool)
(declare-fun x803 () Bool)
(declare-fun x118 () Bool)
(declare-fun x563 () Bool)
(declare-fun x733 () Int)
(declare-fun x74 () x1161)
(declare-fun x313 () x1161)
(declare-fun x179 () Bool)
(declare-fun x1267 () Int)
(declare-fun x594 () Bool)
(declare-fun x351 () Bool)
(declare-fun x608 () Int)
(declare-fun x1155 () Int)
(declare-fun x981 () Int)
(declare-fun x1119 () Bool)
(declare-fun x905 () x1161)
(declare-fun x577 () Int)
(declare-fun x1179 () Int)
(declare-fun x655 () x1161)
(declare-fun x1261 () Bool)
(declare-fun x562 () Int)
(declare-fun x42 () Int)
(declare-fun x1255 () x1161)
(declare-fun x854 () Int)
(declare-fun x451 () Int)
(declare-fun x877 () Bool)
(declare-fun x1205 () Bool)
(declare-fun x19 () x1161)
(declare-fun x1188 () x1161)
(declare-fun x57 () Int)
(declare-fun x544 () Int)
(declare-fun x661 () Int)
(declare-fun x252 () x1161)
(declare-fun x254 () Int)
(declare-fun x1312 () Int)
(declare-fun x651 () Int)
(declare-fun x1323 () x1161)
(declare-fun x940 () Int)
(declare-fun x791 () x1161)
(declare-fun x633 () Int)
(declare-fun x646 () Int)
(declare-fun x1232 () Int)
(declare-fun x436 () Int)
(declare-fun x238 () Int)
(declare-fun x541 () x1161)
(declare-fun x713 () Int)
(declare-fun x1355 () x1161)
(declare-fun x1271 () x1161)
(declare-fun x975 () x1161)
(declare-fun x1053 (x1161) Int)
(declare-fun x987 () Bool)
(declare-fun x66 () Int)
(declare-fun x743 () Int)
(declare-fun x200 () x1161)
(declare-fun x928 () Bool)
(declare-fun x1300 () x1161)
(declare-fun x316 () Int)
(declare-fun x1364 () x1161)
(declare-fun x724 () Int)
(declare-fun x128 () Int)
(declare-fun x777 () Bool)
(declare-fun x604 () Int)
(declare-fun x676 () Bool)
(declare-fun x79 () Bool)
(declare-fun x222 () x1161)
(declare-fun x1308 () Bool)
(declare-fun x279 () Int)
(declare-fun x1082 () Int)
(declare-fun x1138 () x1161)
(declare-fun x1245 () Int)
(declare-fun x233 () Int)
(declare-fun x24 () x1161)
(declare-fun x38 () x1161)
(declare-fun x1121 () Int)
(declare-fun x838 () Int)
(declare-fun x323 () Int)
(declare-fun x910 () Int)
(declare-fun x68 () Int)
(declare-fun x1243 () Int)
(declare-fun x524 () Int)
(declare-fun x159 () Int)
(declare-fun x802 () Int)
(declare-fun x416 () Int)
(declare-fun x424 () Int)
(declare-fun x64 () Int)
(declare-fun x780 () Int)
(declare-fun x28 () Int)
(declare-fun x842 () Bool)
(declare-fun x1380 () Int)
(declare-fun x315 () Int)
(declare-fun x1371 () Int)
(declare-fun x632 () Int)
(declare-fun x1360 () x1161)
(declare-fun x1108 () Int)
(declare-fun x873 () Int)
(declare-fun x328 () Int)
(declare-fun x43 () Int)
(declare-fun x1207 () Int)
(declare-fun x930 () Bool)
(declare-fun x374 () Int)
(declare-fun x924 (Int Int) Int)
(declare-fun x1367 () Int)
(declare-fun x703 () Int)
(declare-fun x547 () Int)
(declare-fun x486 (x1161) Int)
(declare-fun x223 () Bool)
(declare-fun x336 () Bool)
(declare-fun x747 () Bool)
(declare-fun x508 () x1161)
(declare-fun x1131 () Int)
(declare-fun x1236 () Int)
(declare-fun x303 () Int)
(declare-fun x1165 () Int)
(declare-fun x426 () Int)
(declare-fun x135 () Bool)
(declare-fun x1040 () x1161)
(declare-fun x689 () Int)
(declare-fun x870 () Int)
(declare-fun x1166 () Int)
(declare-fun x293 () x1161)
(declare-fun x213 () Bool)
(declare-fun x558 () Int)
(declare-fun x648 () Int)
(declare-fun x586 () Bool)
(declare-fun x1021 () Int)
(declare-fun x1212 () Int)
(declare-fun x1190 (Int) Int)
(declare-fun x1052 () Int)
(declare-fun x473 () Bool)
(declare-fun x815 () x1161)
(declare-fun x239 () Int)
(declare-fun x492 () Bool)
(declare-fun x640 () Int)
(declare-fun x367 () Int)
(declare-fun x645 () x1161)
(declare-fun x809 () Int)
(declare-fun x176 () Bool)
(declare-fun x326 () Bool)
(declare-fun x858 () Int)
(declare-fun x786 () Int)
(declare-fun x382 () Int)
(declare-fun x1147 () Bool)
(declare-fun x746 () Bool)
(declare-fun x260 () Bool)
(declare-fun x1370 () Int)
(declare-fun x515 () Int)
(declare-fun x1326 () Int)
(declare-fun x874 () Int)
(declare-fun x775 () Int)
(declare-fun x133 () Int)
(declare-fun x26 () x1161)
(declare-fun x1044 () Int)
(declare-fun x1235 () x1161)
(declare-fun x561 () Int)
(declare-fun x644 () Int)
(declare-fun x1137 () x1161)
(declare-fun x616 () Bool)
(declare-fun x787 () Bool)
(declare-fun x129 () Int)
(declare-fun x799 () Bool)
(declare-fun x526 () Int)
(declare-fun x795 () Bool)
(declare-fun x510 () Bool)
(declare-fun x46 () Int)
(declare-fun x1333 () Bool)
(declare-fun x63 () Int)
(declare-fun x532 () x1161)
(declare-fun x801 () Int)
(declare-fun x912 () Int)
(declare-fun x1164 () Int)
(declare-fun x665 () x1161)
(declare-fun x1022 () x1161)
(declare-fun x829 () x1161)
(declare-fun x408 () Int)
(declare-fun x419 () Int)
(declare-fun x1184 () Int)
(declare-fun x498 () Int)
(declare-fun x1227 () Int)
(declare-fun x370 () Int)
(declare-fun x952 () Int)
(declare-fun x1080 () x1161)
(declare-fun x682 () Int)
(declare-fun x762 (x1161) Int)
(declare-fun x986 () Bool)
(declare-fun x99 () Int)
(declare-fun x920 () Int)
(declare-fun x756 () Int)
(declare-fun x132 () Int)
(declare-fun x818 () Int)
(declare-fun x991 () Int)
(declare-fun x885 () x1161)
(declare-fun x764 () Int)
(declare-fun x1225 () Int)
(declare-fun x377 () Bool)
(declare-fun x290 () x1161)
(declare-fun x872 () Int)
(declare-fun x1172 () Int)
(declare-fun x355 () Int)
(declare-fun x1298 () x1161)
(declare-fun x704 () Int)
(declare-fun x899 () Int)
(declare-fun x235 () Int)
(declare-fun x272 () Int)
(declare-fun x318 () Int)
(declare-fun x346 () Int)
(declare-fun x207 () x1161)
(declare-fun x482 () Bool)
(declare-fun x1328 () Int)
(declare-fun x1218 () Int)
(declare-fun x437 () Int)
(declare-fun x529 () Bool)
(declare-fun x273 () Int)
(declare-fun x726 () Int)
(declare-fun x760 () Int)
(declare-fun x329 () Int)
(declare-fun x826 () Int)
(declare-fun x20 () Int)
(declare-fun x794 () Bool)
(declare-fun x719 () Int)
(declare-fun x907 () Int)
(declare-fun x209 () Int)
(declare-fun x511 () Int)
(declare-fun x1346 () x1161)
(declare-fun x1167 () Bool)
(declare-fun x753 () Int)
(declare-fun x1359 () Int)
(declare-fun x1347 () Int)
(declare-fun x915 () Int)
(declare-fun x657 () Int)
(declare-fun x131 () Int)
(declare-fun x134 () Int)
(declare-fun x1349 () Int)
(declare-fun x1248 () Bool)
(declare-fun x400 () x1161)
(declare-fun x142 () x1161)
(declare-fun x1043 () Int)
(declare-fun x578 () Int)
(declare-fun x925 () Int)
(declare-fun x1123 () Bool)
(declare-fun x297 () Int)
(declare-fun x337 () x1161)
(declare-fun x663 () Bool)
(declare-fun x860 () Int)
(declare-fun x192 () Bool)
(declare-fun x423 () Bool)
(declare-fun x1013 () Int)
(declare-fun x1276 () Bool)
(declare-fun x932 () Bool)
(declare-fun x1133 () Int)
(declare-fun x441 () Int)
(declare-fun x2 () Bool)
(declare-fun x959 () Bool)
(declare-fun x1018 () x1161)
(declare-fun x1135 () Int)
(declare-fun x1068 () Int)
(declare-fun x813 () x1161)
(declare-fun x356 () Int)
(declare-fun x10 () x1161)
(declare-fun x240 () Int)
(declare-fun x350 () Bool)
(declare-fun x108 () Int)
(declare-fun x666 () Int)
(declare-fun x895 () x1161)
(declare-fun x953 () x1161)
(declare-fun x714 () Bool)
(declare-fun x1222 () Int)
(declare-fun x1046 () Bool)
(declare-fun x1152 () Int)
(declare-fun x670 () Bool)
(declare-fun x1075 () Int)
(declare-fun x394 () Int)
(declare-fun x97 () Int)
(declare-fun x1334 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x653 () Int)
(declare-fun x1009 () Bool)
(declare-fun x963 () Int)
(declare-fun x1112 () Int)
(declare-fun x361 () Int)
(declare-fun x590 (Int) Int)
(declare-fun x101 () Bool)
(declare-fun x523 () Int)
(declare-fun x1061 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x807 () Int)
(declare-fun x88 () Int)
(declare-fun x1077 () Bool)
(declare-fun x699 () Bool)
(declare-fun x61 () Bool)
(declare-fun x533 () x1161)
(declare-fun x639 () Int)
(declare-fun x527 () Int)
(declare-fun x848 () Bool)
(declare-fun x369 () Int)
(declare-fun x268 () Bool)
(declare-fun x761 () Bool)
(declare-fun x1056 () Int)
(declare-fun x1144 () Int)
(declare-fun x638 () Bool)
(declare-fun x736 () Int)
(declare-fun x579 () Int)
(declare-fun x869 () Bool)
(declare-fun x837 () Int)
(declare-fun x363 () Int)
(declare-fun x1050 () x1161)
(declare-fun x505 () Int)
(declare-fun x1005 (Int) Int)
(declare-fun x393 () Int)
(declare-fun x894 () Bool)
(declare-fun x87 () Bool)
(declare-fun x934 () Int)
(declare-fun x1079 () Int)
(declare-fun x518 () x1161)
(declare-fun x219 () Int)
(declare-fun x1153 () x1161)
(declare-fun x771 () Bool)
(declare-fun x1042 () x1161)
(declare-fun x1163 () Int)
(declare-fun x1274 () Int)
(declare-fun x186 () x1161)
(declare-fun x391 () Bool)
(declare-fun x564 () Bool)
(declare-fun x310 () Bool)
(declare-fun x257 () Bool)
(declare-fun x881 () Int)
(declare-fun x264 () Int)
(declare-fun x280 () Int)
(declare-fun x202 (x1161) Int)
(declare-fun x188 () x1161)
(declare-fun x435 () Int)
(declare-fun x421 () Int)
(declare-fun x592 () Bool)
(declare-fun x1097 () Int)
(declare-fun x584 () x1161)
(declare-fun x472 () x1161)
(declare-fun x82 () Bool)
(declare-fun x178 (Int) Int)
(declare-fun x528 () Int)
(declare-fun x267 () Int)
(declare-fun x947 () Int)
(declare-fun x628 () Int)
(declare-fun x1094 () Int)
(declare-fun x819 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x580 () Int)
(declare-fun x1192 () Int)
(declare-fun x1141 () x1161)
(declare-fun x460 () Int)
(declare-fun x1286 () Bool)
(declare-fun x341 () x1161)
(declare-fun x1351 () Int)
(declare-fun x996 () Bool)
(declare-fun x596 () x1161)
(declare-fun x1159 () Int)
(declare-fun x988 () Int)
(declare-fun x855 () Bool)
(declare-fun x406 () x1161)
(declare-fun x1020 () Bool)
(declare-fun x933 () Int)
(declare-fun x1210 () Int)
(declare-fun x44 () Int)
(declare-fun x627 () Int)
(declare-fun x936 () Int)
(declare-fun x971 () Int)
(declare-fun x728 () Int)
(declare-fun x1366 () Int)
(declare-fun x884 () Int)
(declare-fun x1285 () Int)
(declare-fun x600 () Int)
(declare-fun x599 () Bool)
(declare-fun x538 () Bool)
(declare-fun x258 () x1161)
(declare-fun x255 () Bool)
(declare-fun x513 () Int)
(declare-fun x567 () Bool)
(declare-fun x13 () Bool)
(declare-fun x171 (Int) Int)
(declare-fun x992 () Int)
(declare-fun x551 () Bool)
(declare-fun x1344 () Int)
(declare-fun x814 () Bool)
(declare-fun x45 () Int)
(declare-fun x1314 () Int)
(declare-fun x166 () Bool)
(declare-fun x536 () Bool)
(declare-fun x48 () x1161)
(declare-fun x773 () Bool)
(declare-fun x1252 () Int)
(declare-fun x106 () Bool)
(declare-fun x1078 () x1161)
(declare-fun x189 () Int)
(declare-fun x220 () Int)
(declare-fun x333 () x1161)
(declare-fun x395 () Bool)
(declare-fun x681 () Bool)
(declare-fun x294 () Bool)
(declare-fun x1002 () x1161)
(declare-fun x841 () Int)
(declare-fun x263 () Int)
(declare-fun x7 () x1161)
(declare-fun x702 () x1161)
(declare-fun x821 () Int)
(declare-fun x583 () Int)
(declare-fun x383 () Int)
(declare-fun x449 () Int)
(declare-fun x139 () Bool)
(declare-fun x589 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x427 (x1161) Int)
(declare-fun x796 () Bool)
(declare-fun x147 () Int)
(declare-fun x1216 () x1161)
(declare-fun x338 () Int)
(declare-fun x1377 () x1161)
(declare-fun x146 () Int)
(declare-fun x1175 () Int)
(declare-fun x622 () Bool)
(declare-fun x864 () Int)
(declare-fun x221 () Bool)
(declare-fun x1031 (x1161) Int)
(declare-fun x366 () Int)
(declare-fun x588 () x1161)
(declare-fun x1102 (Int) Int)
(declare-fun x237 () Bool)
(declare-fun x522 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x1148 () x1161)
(declare-fun x248 (x1161) Int)
(declare-fun x820 (x1161) Int)
(declare-fun x163 () Int)
(declare-fun x352 (Int) Int)
(declare-fun x91 () x1161)
(declare-fun x1368 () Int)
(declare-fun x1006 () x1161)
(declare-fun x769 () Bool)
(declare-fun x560 () Int)
(declare-fun x788 () x1161)
(declare-fun x1033 () x1161)
(declare-fun x700 () Int)
(declare-fun x1107 () x1161)
(declare-fun x751 () Int)
(declare-fun x401 () Int)
(declare-fun x21 () Int)
(declare-fun x430 () Bool)
(declare-fun x1103 () Int)
(declare-fun x688 () Int)
(declare-fun x169 () Int)
(declare-fun x1019 () Int)
(declare-fun x1 () Bool)
(declare-fun x793 () Bool)
(declare-fun x545 () Int)
(declare-fun x863 () Int)
(declare-fun x516 () Int)
(declare-fun x123 () x1161)
(declare-fun x687 () Bool)
(declare-fun x1242 () Int)
(declare-fun x602 () Int)
(declare-fun x1100 () Int)
(declare-fun x15 () Int)
(declare-fun x1259 () Int)
(declare-fun x581 () Bool)
(declare-fun x652 () Int)
(declare-fun x245 () Bool)
(declare-fun x295 () Int)
(declare-fun x443 () Int)
(declare-fun x50 () Int)
(declare-fun x671 () Int)
(declare-fun x1376 () Int)
(declare-fun x276 () Int)
(declare-fun x867 () Bool)
(declare-fun x183 () Int)
(declare-fun x1336 () Int)
(declare-fun x375 () Int)
(declare-fun x199 () Int)
(declare-fun x1294 () Bool)
(declare-fun x481 () Bool)
(declare-fun x691 () Int)
(declare-fun x16 () Int)
(declare-fun x614 () Int)
(declare-fun x1194 () Int)
(declare-fun x891 () Int)
(declare-fun x995 () x1161)
(declare-fun x60 () x1161)
(declare-fun x968 () x1161)
(declare-fun x165 () Int)
(declare-fun x160 () Int)
(declare-fun x886 () Int)
(declare-fun x1117 () Bool)
(declare-fun x1047 () Int)
(declare-fun x779 () Int)
(declare-fun x98 () Bool)
(declare-fun x1072 () x1161)
(declare-fun x966 () Int)
(declare-fun x967 () Bool)
(declare-fun x908 () Int)
(declare-fun x463 () Int)
(declare-fun x612 () Int)
(declare-fun x571 () Bool)
(declare-fun x767 () Int)
(declare-fun x834 () x1161)
(declare-fun x9 () x1161)
(declare-fun x1143 () Int)
(define-fun x348 ((x1161 x1161) (x722 Int)) x1161 (ite ((_ is x1262) x1161) (x1262 (x970 x1161) (+ x722 (x1288 x1161))) (ite ((_ is x1293) x1161) (x1293 (x180 x1161) (x548 x1161) (+ x722 (x210 x1161))) (x31 (+ x722 (x636 x1161))))))
(define-fun x177 ((x1296 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1296) (>= x1296 0)) x1296 (- x1296 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x78 ((x1296 Int)) Int (ite (and (> 0 x1296) (>= x1296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1296) x1296))
(define-fun x368 ((x1296 Int)) Int (ite (and (<= 0 x1296) (< x1296 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1296 (ite (and (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x1296) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1296)) (- x1296 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (> 0 x1296) (>= x1296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1296) (x75 x1296 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x832 ((x298 Int)) Bool (and (>= x298 0) (< x298 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x735 ((x298 Int) (x725 Int)) Bool (= (* x725 x298) (x270 x298 x725)))
(define-fun x1083 ((x298 Int) (x725 Int)) Bool (=> (not (= 0 x298)) (= (and (> (* x298 x725) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x298 x725))) (= x725 (x193 (x368 (* x725 x298)) x298)))))
(define-fun x479 ((x298 Int) (x725 Int)) Bool (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (* x725 x298)) (> x725 (x193 115792089237316195423570985008687907853269984665640564039457584007913129639935 x298))))
(define-fun x1220 ((x298 Int) (x725 Int)) Bool (and (x1083 x298 x725) (x479 x298 x725) (x735 x298 x725)))
(define-fun x978 ((x298 Int)) Bool (and (= 0 (x270 0 x298)) (= 0 (x270 x298 0))))
(define-fun x90 ((x298 Int)) Bool (and (= (x270 x298 1) x298) (= (x270 1 x298) x298)))
(define-fun x1260 ((x298 Int)) Bool (and (x978 x298) (x90 x298)))
(define-fun x214 ((x298 Int)) Bool (and (= (x77 x298 115792089237316195423570985008687907853269984665640564039457584007913129639935) x298) (= x298 (x77 115792089237316195423570985008687907853269984665640564039457584007913129639935 x298))))
(define-fun x1000 ((x298 Int)) Bool (and (= 0 (x77 0 x298)) (= 0 (x77 x298 0))))
(define-fun x1132 ((x298 Int)) Bool (= x298 (x77 x298 x298)))
(define-fun x218 ((x298 Int)) Bool (and (x214 x298) (x1132 x298) (x1000 x298)))
(define-fun x1280 ((x298 Int)) Bool (= (x77 1461501637330902918203684832716283019655932542975 (x77 1461501637330902918203684832716283019655932542975 x298)) (x77 1461501637330902918203684832716283019655932542975 x298)))
(define-fun x360 ((x298 Int)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x298) (>= x298 0)) (= (x77 1461501637330902918203684832716283019655932542975 x298) x298)))
(define-fun x603 ((x298 Int)) Bool (=> (= (x77 1461501637330902918203684832716283019655932542975 x298) x298) (and (<= 0 x298) (> 1461501637330902918203684832716283019655932542976 x298))))
(define-fun x530 ((x298 Int)) Bool (=> (and (>= x298 1461501637330902918203684832716283019655932542976) (> 2923003274661805836407369665432566039311865085952 x298)) (= (x77 1461501637330902918203684832716283019655932542975 x298) (- x298 1461501637330902918203684832716283019655932542976))))
(define-fun x289 ((x298 Int) (x725 Int)) Bool (and (<= 0 x725) (= x298 (+ (* x725 1461501637330902918203684832716283019655932542976) (x77 1461501637330902918203684832716283019655932542975 x298)))))
(define-fun x497 ((x298 Int) (x1283 Int)) Bool (and (x289 x298 x1283) (x360 x298) (x530 x298) (x603 x298) (x1280 x298)))
(define-fun x459 ((x298 Int) (x725 Int)) Bool (= (x77 x725 x298) (x77 x298 x725)))
(define-fun x428 ((x298 Int) (x725 Int)) Bool (and (<= 0 (x77 x298 x725)) (=> (>= x298 0) (<= (x77 x298 x725) x298)) (=> (>= x725 0) (<= (x77 x298 x725) x725))))
(define-fun x1038 ((x298 Int) (x725 Int)) Bool (and (x459 x298 x725) (x428 x298 x725)))
(define-fun x1263 ((x298 Int) (x1283 Int)) Bool (and (x497 x298 x1283) (x1038 x298 1461501637330902918203684832716283019655932542975)))
(define-fun x943 ((x298 Int) (x725 Int)) Bool (= (x270 x298 x725) (x270 x725 x298)))
(define-fun x1048 ((x298 Int) (x725 Int)) Bool (and (=> (and (> x298 0) (> 0 x725)) (> 0 (x270 x298 x725))) (=> (and (> 0 x298) (< x725 0)) (> (x270 x298 x725) 0)) (=> (and (> x725 0) (< 0 x298)) (> (x270 x298 x725) 0)) (=> (and (< x298 0) (> x725 0)) (< (x270 x298 x725) 0))))
(define-fun x285 ((x298 Int) (x725 Int)) Bool (=> (and (> x298 0) (> x725 0)) (and (>= (x270 x298 x725) x725) (<= x298 (x270 x298 x725)))))
(define-fun x154 ((x298 Int) (x725 Int)) Bool (=> (not (= 0 x298)) (= (and (< (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x298 x725)) (< (x270 x298 x725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x193 (x368 (x270 x298 x725)) x298) x725))))
(define-fun x917 ((x298 Int) (x725 Int)) Bool (=> (and (= x725 (x193 (x270 x298 x725) x298)) (not (= x298 0)) (not (= x725 0))) (= (x193 (x270 x298 x725) x725) x298)))
(define-fun x1176 ((x298 Int) (x725 Int)) Bool (= (< (x193 115792089237316195423570985008687907853269984665640564039457584007913129639935 x298) x725) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x270 x298 x725))))
(define-fun x49 ((x298 Int) (x725 Int)) Bool (and (x917 x298 x725) (x285 x298 x725) (x943 x298 x725) (x154 x298 x725) (x1048 x298 x725) (x1176 x298 x725)))
(define-fun x817 ((x298 Int) (x725 Int)) Bool (=> (and (> x725 0) (> x298 0)) (and (<= (x193 x298 x725) x298) (<= 0 (x193 x298 x725)))))
(define-fun x705 ((x298 Int) (x725 Int)) Bool (=> (and (<= 1 x725) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x298) (<= 0 x298) (< x725 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (< (x193 x298 x725) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= (x193 x298 x725) 0))))
(define-fun x1126 ((x298 Int) (x725 Int)) Bool (=> (and (< 1 x725) (< x725 x298)) (< (x193 x298 x725) x298)))
(define-fun x81 ((x298 Int) (x725 Int)) Bool (=> (and (< 0 x725) (< 0 x298)) (= (< x298 x725) (= 0 (x193 x298 x725)))))
(define-fun x418 ((x298 Int) (x725 Int)) Bool (=> (and (< 0 x298) (> x725 0)) (and (> (x270 (x193 x298 x725) x725) (- x298 x725)) (<= (x270 (x193 x298 x725) x725) x298))))
(define-fun x1074 ((x298 Int) (x725 Int)) Bool (and (x1126 x298 x725) (x418 x298 x725) (x705 x298 x725) (x817 x298 x725) (x81 x298 x725)))
(define-fun x942 ((x298 Int)) Bool (= 0 (x193 0 x298)))
(define-fun x231 ((x298 Int)) Bool (= (x193 x298 1) x298))
(define-fun x122 ((x298 Int)) Bool (=> (not (= x298 0)) (= 1 (x193 x298 x298))))
(define-fun x1383 ((x298 Int)) Bool (and (x231 x298) (x122 x298) (x942 x298)))
(define-fun x840 ((x298 Int) (x725 Int)) Bool (=> (and (> x298 0) (< 0 x725)) (and (<= (* x725 (x193 x298 x725)) x298) (< (- x298 x725) (* (x193 x298 x725) x725)))))
(define-fun x1310 ((x298 Int) (x725 Int)) Bool (and (x81 x298 x725) (x1126 x298 x725) (x840 x298 x725) (x705 x298 x725) (x817 x298 x725)))
(define-fun x387 ((x298 Int)) Bool (= (x77 26959946667150639794667015087019630673637144422540572481103610249215 (x77 26959946667150639794667015087019630673637144422540572481103610249215 x298)) (x77 26959946667150639794667015087019630673637144422540572481103610249215 x298)))
(define-fun x59 ((x298 Int)) Bool (=> (and (< x298 26959946667150639794667015087019630673637144422540572481103610249216) (>= x298 0)) (= (x77 26959946667150639794667015087019630673637144422540572481103610249215 x298) x298)))
(define-fun x500 ((x298 Int)) Bool (=> (= (x77 26959946667150639794667015087019630673637144422540572481103610249215 x298) x298) (and (>= x298 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x298))))
(define-fun x634 ((x298 Int)) Bool (=> (and (<= 26959946667150639794667015087019630673637144422540572481103610249216 x298) (< x298 53919893334301279589334030174039261347274288845081144962207220498432)) (= (x77 26959946667150639794667015087019630673637144422540572481103610249215 x298) (- x298 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x197 ((x298 Int) (x725 Int)) Bool (and (= x298 (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x725) (x77 26959946667150639794667015087019630673637144422540572481103610249215 x298))) (>= x725 0)))
(define-fun x1059 ((x298 Int) (x1283 Int)) Bool (and (x59 x298) (x500 x298) (x197 x298 x1283) (x387 x298) (x634 x298)))
(define-fun x1241 ((x298 Int) (x1283 Int)) Bool (and (x1059 x298 x1283) (x1038 x298 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x574 ((x298 Int)) Bool (= (x77 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x77 115792089237316195423570985008687907853269984665640564039457584007913129639904 x298)) (x77 115792089237316195423570985008687907853269984665640564039457584007913129639904 x298)))
(define-fun x575 ((x298 Int)) Bool (=> (and (> 32 x298) (>= x298 0)) (= (x77 115792089237316195423570985008687907853269984665640564039457584007913129639904 x298) 0)))
(define-fun x839 ((x298 Int) (x725 Int) (x364 Int) (x386 Int)) Bool (and (<= 0 x725) (<= 0 x386) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x364) (< x386 1) (< x725 32) (= x298 (+ x725 (* x364 32) (* x386 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* x364 32) (x77 115792089237316195423570985008687907853269984665640564039457584007913129639904 x298)) (<= 0 x364)))
(define-fun x607 ((x298 Int) (x1202 Int) (x502 Int) (x172 Int)) Bool (and (x839 x298 x1202 x502 x172) (x575 x298) (x574 x298)))
(define-fun x1096 ((x298 Int) (x1202 Int) (x502 Int) (x172 Int)) Bool (and (x607 x298 x1202 x502 x172) (x1038 x298 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x789 ((x800 Int)) Int (x284 x800))
(define-fun x40 ((x800 Int)) Int (ite (= 128 x800) x696 (x347 x800)))
(define-fun x157 ((x800 Int)) Int (ite (and (< x800 (+ 160 x71)) (>= x800 160)) (x284 (+ (- x800 160) x325)) (x40 x800)))
(define-fun x664 ((x800 Int)) Int (ite (= x800 x138) 0 (x157 x800)))
(define-fun x1039 ((x800 Int)) Int (ite (and (> (+ x765 x434) x800) (>= x800 x765)) (x284 (+ (- x800 x765) x826)) (x546 x800)))
(define-fun x1332 ((x800 x1161)) Int (ite (= x1018 x800) x11 (x34 x800)))
(define-fun x1324 ((x800 Int)) Int (ite (= x643 x800) x768 (x1005 x800)))
(define-fun x797 ((x800 Int)) Int (ite (= x800 x703) x1064 (x1324 x800)))
(define-fun x1275 ((x800 x1161)) Int (ite (= x1138 x800) x772 (x1030 x800)))
(define-fun x1256 ((x800 x1161)) Int (ite (= x800 x1050) x11 (x34 x800)))
(define-fun x504 ((x800 x1161)) Int (ite (= x800 x1026) x11 (x34 x800)))
(define-fun x1350 ((x800 Int)) Int (ite (and x998 (not x1089) x794) (x1005 x800) (x797 x800)))
(define-fun x976 ((x800 Int)) Int (ite (= x756 x800) x841 (x1350 x800)))
(define-fun x1340 ((x800 x1161)) Int (ite (= x800 x253) x1382 (x427 x800)))
(define-fun x22 ((x800 x1161)) Int (ite (= x800 x121) x11 (x675 x800)))
(define-fun x1348 ((x800 x1161)) Int (ite (= x38 x800) x11 (x675 x800)))
(define-fun x496 ((x800 x1161)) Int (ite (= x800 x1141) x868 (x465 x800)))
(define-fun x438 ((x800 Int)) Int (ite (= x630 x800) x229 (x178 x800)))
(define-fun x476 ((x800 x1161)) Int (ite (= x174 x800) x11 (x1277 x800)))
(define-fun x701 ((x800 Int)) Int (ite (= x1341 x800) x66 (x173 x800)))
(define-fun x938 ((x800 Int)) Int (ite (= x1326 x800) x346 (x701 x800)))
(define-fun x909 ((x800 x1161)) Int (ite (= x800 x258) x11 (x1277 x800)))
(define-fun x620 ((x800 x1161)) Int (ite (= x1156 x800) x854 (x206 x800)))
(define-fun x1219 ((x800 x1161)) Int (ite (= x852 x800) x11 (x1277 x800)))
(define-fun x1372 ((x800 x1161)) Int (ite (and x998 (not x1057) (not x448) (not x1089) (not x415)) (x620 x800) (x206 x800)))
(define-fun x875 ((x800 Int)) Int (ite (and (not x1089) (not x415) (not x1057) x998 (not x448)) (x938 x800) (ite (and (not x415) (not x1089) x448 (not x1057) x998) (x938 x800) (x173 x800))))
(define-fun x1201 ((x800 Int)) Int (ite (= x279 x800) x605 (x875 x800)))
(define-fun x89 ((x800 x1161)) Int (ite (= x800 x1309) x11 (x1053 x800)))
(define-fun x876 ((x800 x1161)) Int (ite (= x800 x281) x1366 (x827 x800)))
(define-fun x143 ((x800 x1161)) Int (ite (= x800 x215) x11 (x1053 x800)))
(define-fun x300 ((x800 x1161)) Int (ite (and x998 (not x1089) (not x415) (not x861)) (x876 x800) (x827 x800)))
(define-fun x662 ((x800 x1161)) Int (ite (= x624 x800) x864 (x486 x800)))
(define-fun x678 ((x800 Int)) Int (ite (= x1325 x800) x767 (x553 x800)))
(define-fun x247 ((x800 x1161)) Int (ite (and x415 x998 (not x1089)) (x1053 x800) (ite (and x998 x1089) (x675 x800) (ite (and (not x861) (not x1089) x998 (not x415)) (x143 x800) (x89 x800)))))
(define-fun x598 ((x800 x1161)) Int (ite (and x415 x998 (not x1089)) (x1277 x800) (ite (and x1089 x998) (x34 x800) (ite (and x998 (not x448) (not x1057) (not x415) (not x1089)) (x1219 x800) (ite (and x998 (not x1057) x448 (not x1089) (not x415)) (x909 x800) (x476 x800))))))
(define-fun x1329 ((x800 x1161)) Int (ite (and x998 (not x1089) x415) (x827 x800) (ite (and x1089 x998) (x427 x800) (x300 x800))))
(define-fun x402 ((x800 x1161)) Int (ite (and x415 x998 (not x1089)) (x206 x800) (ite (and x1089 x998) (x1030 x800) (x1372 x800))))
(define-fun x70 ((x800 x1161)) Int (ite (and (not x1089) x415 x998) (x610 x800) (ite (and x998 x1089) (x248 x800) (ite (and (not x415) (not x808) (not x1297) (not x1089) x777 x998) (x486 x800) (ite (and (not x415) (not x1089) (not x808) (not x777) x998) (x610 x800) (ite (and x998 x808 (not x1089) (not x415)) (x610 x800) (x662 x800)))))))
(define-fun x889 ((x800 Int)) Int (ite (and x415 (not x1089) x998) (x173 x800) (ite (and x998 x1089) (x1005 x800) (ite (and x777 (not x415) (not x808) x998 (not x1297) (not x1089)) (x553 x800) (ite (and (not x415) (not x1089) (not x777) x998 (not x808)) (x570 x800) (ite (and x998 (not x1089) x808 (not x415)) (x570 x800) (x678 x800)))))))
(define-fun x617 ((x800 Int)) Int (ite (= x800 x1113) x16 (x889 x800)))
(define-fun x1200 ((x800 Int)) Int (ite (= x686 x800) x390 (x617 x800)))
(define-fun x204 ((x800 Int)) Int (ite (= x562 x800) x738 (x1200 x800)))
(define-fun x1036 ((x800 Int)) Int (ite (= x669 x800) x398 (x204 x800)))
(define-fun x520 ((x800 Int)) Int (ite (= x800 x623) 32 (x1036 x800)))
(define-fun x887 ((x800 Int)) Int (ite (= x800 x431) x872 (x1069 x800)))
(define-fun x1185 ((x800 Int)) Int (ite (= x800 x682) 0 (x1150 x800)))
(define-fun x509 ((x800 Int)) Int (ite (= x800 0) 1 (x1102 x800)))
(define-fun x1221 ((x800 Int)) Int (ite (= 0 x800) 1 (x1102 x800)))
(define-fun x904 ((x800 Int)) Int (ite (and x581 x720) (x509 x800) (x1221 x800)))
(define-fun x312 ((x800 Int)) Int (ite (= x182 x800) x1068 (x1354 x800)))
(define-fun x805 ((x800 Int)) Int (ite (= x800 x182) x422 (x1354 x800)))
(define-fun x412 ((x800 Int)) Int (ite (= x182 x800) x167 (x1173 x800)))
(define-fun x92 ((x800 Int)) Int (ite (and (> (+ x46 x167) x800) (<= x46 x800)) (x904 (+ (- x800 x46) 0)) (x412 x800)))
(define-fun x1017 ((x800 Int)) Int (ite (and (not x685) x1294) (x92 x800) (x1173 x800)))
(define-fun x487 ((x800 Int)) Int (ite (= x800 x228) x1312 (x1017 x800)))
(define-fun x205 ((x800 Int)) Int (ite (= x8 x800) x851 (x487 x800)))
(define-fun x1233 ((x800 Int)) Int (ite (= x800 x405) x1359 (x205 x800)))
(define-fun x308 ((x800 Int)) Int (ite (= x547 x800) x1015 (x1233 x800)))
(define-fun x784 ((x800 Int)) Int (ite (= x800 x609) 32 (x308 x800)))
(define-fun x974 ((x800 Int)) Int (ite (= x935 x800) x990 (x171 x800)))
(define-fun x319 ((x800 Int)) Int (ite (= x847 x800) 0 (x590 x800)))
(define-fun x3 ((x800 x1161)) Int (ite (= (x452 274184521717934524641157099916833587206) x800) x1330 (x1031 x800)))
(define-fun x1149 ((x800 x1161)) Int (ite (= x800 (x452 x1365)) x639 (x3 x800)))
(define-fun x542 ((x800 x1161)) Int (ite (= x800 (x452 x1365)) x836 (x1149 x800)))
(define-fun x162 ((x800 x1161)) Int (ite (= x800 (x452 274184521717934524641157099916833587206)) x209 (x542 x800)))
(define-fun x1253 ((x800 x1161)) Int (ite (= (x452 274184521717934524641157099916833587206) x800) x838 (x162 x800)))
(define-fun x1071 ((x800 x1161)) Int (ite (= x800 (x452 x535)) x886 (x1253 x800)))
(define-fun x835 ((x800 x1161)) Int (ite (= x1006 x800) x661 (x820 x800)))
(define-fun x1024 ((x800 x1161)) Int (ite (= x800 x890) x690 (x835 x800)))
(define-fun x698 ((x800 x1161)) Int (ite (and x720 x581) (x1024 x800) (x820 x800)))
(define-fun x1169 ((x800 x1161)) Int (ite (= x800 x702) x1218 (x698 x800)))
(define-fun x461 ((x800 Int)) Int (ite (= 0 x800) 1 (x1178 x800)))
(define-fun x266 ((x800 Int)) Int (ite (= x800 x164) x1259 (x1007 x800)))
(define-fun x5 ((x800 x1161)) Int (ite (= x834 x800) x107 (x41 x800)))
(define-fun x399 ((x800 x1161)) Int (ite (= x800 x593) x700 (x5 x800)))
(define-fun x1125 ((x800 x1161)) Int (ite (and x720 x581) (x41 x800) (x399 x800)))
(define-fun x1272 ((x800 x1161)) Int (ite (= x800 x1235) x301 (x1125 x800)))
(define-fun x1209 ((x800 Int)) Int (ite (= 0 x800) 1 (x1178 x800)))
(define-fun x376 ((x800 Int)) Int (ite (= x800 x164) x1029 (x1007 x800)))
(define-fun x684 ((x800 Int)) Int (ite (and x120 x761) (x461 x800) (x1209 x800)))
(define-fun x439 ((x800 x1161)) Int (ite (= x800 (x452 x535)) x1035 (x1071 x800)))
(define-fun x242 ((x800 Int)) Int (ite (= x800 x164) x1179 (x766 x800)))
(define-fun x525 ((x800 Int)) Int (ite (and (< x800 (+ x1179 x393)) (>= x800 x393)) (x684 (+ (- x800 x393) 0)) (x242 x800)))
(define-fun x389 ((x800 Int)) Int (ite (and x798 x930) (x766 x800) (x525 x800)))
(define-fun x1384 ((x298 Int) (x725 Int) (x364 Int) (x386 Int)) Bool (=> (and (>= x364 x298) (>= x298 0) (<= x725 x386) (>= x725 0)) (>= (x270 x364 x386) (x270 x298 x725))))
(define-fun x478 ((x298 Int) (x725 Int) (x364 Int) (x386 Int)) Bool (=> (= x298 x364) (= (- (x270 x298 x725) (x270 x364 x386)) (x270 x298 (- x725 x386)))))
(define-fun x168 ((x298 Int)) Bool (=> (and (not (= 604800 x298)) (not (= 468353030 x298)) (not (= 2764855426 x298)) (not (= 69947311 x298)) (not (= 274184521717934524641157099916833587214 x298)) (not (= x298 2532887486)) (not (= x298 2293535753)) (not (= 2512682246 x298)) (not (= x298 649617121)) (not (= 1968616202 x298)) (not (= 2743102681 x298)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x298)) (not (= x298 759532456)) (not (= x298 274184521717934524641157099916833587218)) (> x298 10000) (not (= x298 2835717307)) (not (= x298 1000000000000000000)) (not (= x298 2258409472)) (not (= 826074471 x298)) (not (= x298 18446744073709551615)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x298)) (not (= 2061678023 x298)) (not (= 2514000705 x298)) (not (= 1889567281 x298)) (not (= x298 2211524764)) (not (= 2939843472 x298)) (not (= 2690754053 x298)) (not (= 1461501637330902918203684832716283019655932542975 x298)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x298)) (not (= 635128645 x298)) (not (= x298 2798343961)) (not (= 142201243 x298)) (not (= 2960351575 x298)) (not (= 1986467848 x298)) (not (= x298 2418364589)) (not (= x298 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= x298 2868243304)) (not (= x298 274184521717934524641157099916833587206)) (not (= 911411945 x298)) (not (= x298 87118632)) (not (= 115792089237316195423570985008687907853269984665640564039457 x298)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x298))) (not ((_ is x31) (x452 x298)))))
(assert (x168 x370))
(assert (x478 x362 x359 x254 x84))
(assert (x832 x738))
(assert (x832 x704))
(assert (x1384 x362 x359 x84 x254))
(assert (x1260 (- x1120 x1224)))
(assert (x478 x912 x1177 x362 x359))
(assert (x832 x420))
(assert (x832 x679))
(assert (x168 x271))
(assert (x168 x1342))
(assert (x49 x441 (- x420 x912)))
(assert (x832 x673))
(assert (x832 x68))
(assert (x832 x709))
(assert (x832 x304))
(assert (x478 x1120 x936 x936 x1352))
(assert (x832 x822))
(assert (x49 x108 (- x857 x1120)))
(assert (x832 x1312))
(assert (x832 x1238))
(assert (=> (<= x859 10000) (= (x31 x859) (x452 x859))))
(assert (= (x553 x900) (ite (= x900 x435) x951 (x570 x900))))
(assert (x832 x1266))
(assert (= (ite (= x1375 x900) x449 (x976 x900)) (x17 x900)))
(assert (x168 x859))
(assert (x1384 x912 x1177 x84 x254))
(assert (x832 x981))
(assert (x832 x1342))
(assert (= x552 (x202 (x452 x552))))
(assert (= (=> (and (= (x489 (x452 274184521717934524641157099916833587206)) x115) (= (x1293 (x452 x240) (x31 9) 0) x619) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x463) (<= x1122 1461501637330902918203684832716283019655932542975) (<= x956 1461501637330902918203684832716283019655932542975) (> 468353030 x1037) (not (= 69947311 x1037)) (= x463 (x156 x785)) (<= 0 x463) (= (x1293 (x452 x1122) x968 0) x785) (> 911411945 x1037) (not (= x1037 87118632)) (= x1037 142201243) (> x115 0) (> 2293535753 x1037) (= (x1293 (x452 x956) x619 0) x968) (= x463 x1349)) (=> (and (= (and x697 x867) x529) (= x36 x203) (= x1144 x385) (= x780 x558) (= x159 x1349) (= x697 (>= x212 x159))) x901)) x455))
(assert (= x1122 (x202 (x452 x1122))))
(assert (= (ite (= x28 x900) x357 (x1201 x900)) (x570 x900)))
(assert (x218 x604))
(assert (x832 x1021))
(assert (=> (<= x1075 10000) (= (x31 x1075) (x452 x1075))))
(assert (x1260 (- x441 x1177)))
(assert (x478 x359 x1224 x420 x441))
(assert (= (x352 x809) (ite (= x578 x809) x614 (x1190 x809))))
(assert (=> (>= 10000 x132) (= (x31 x132) (x452 x132))))
(assert (x1260 (- x1224 x1352)))
(assert (x168 x884))
(assert (x168 x914))
(assert (x168 x1099))
(assert (x49 x936 (- x1352 x254)))
(assert (x832 x568))
(assert (x832 x1093))
(assert (x832 x557))
(assert (= x33 (=> (= x1110 (< 1 x696)) (and (=> (and (= (x78 (- x273 32)) x1359) (= (x177 (+ 64 x566)) x576) (= (x177 (+ x405 68)) x8) (= 0 x462) x244 (< 1 x1210) (or (and (not x967) (= 0 x55)) (and (= x1028 (> x577 32)) (= x1363 (x1223 x68)) (= x164 x267) (or (and (= 32 x55) (not x1028)) (and x1028 (= (x177 (+ x609 96)) x335) (= x515 (x177 (+ x405 64))) (= x729 (x723 x515)) (or (and (not x567) (= 64 x55)) (and (= (> x577 96) x226) (= x807 (x680 x850)) (= x537 (x177 (+ x609 128))) (or (and (= (< 128 x577) x803) (= (x177 (+ 128 x405)) x1305) (= (x177 (+ x609 160)) x935) (not x803) x226 (= x990 (x171 x1305)) (= 128 x55)) (and (= x55 96) (not x226))) x567 (= (x177 (+ 96 x405)) x850))) (= x567 (> x577 64)))) x967 (= x547 x68))) (= x535 (x284 x576)) (= (x177 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x856)) x1015) (= x851 (x1017 x208)) (= (x77 1461501637330902918203684832716283019655932542975 x862) x1312) x1110 (= (x489 (x452 x535)) x1084) (= x164 (x177 (+ x228 128))) (= x609 (x177 (+ x405 100))) (= (x177 (+ x29 192)) x208) (= x933 (x1233 x547)) (= x228 (x177 (+ 36 x405))) (= x244 (< 0 x1084)) (or (and x806 (= x847 (x177 (+ x164 x577)))) (not x806)) (> x696 1) (= (x77 26959946667150639794667015087019630673637144422540572481103610249215 x933) x856) (= (> x55 x577) x806) (= x273 (x78 (- x609 x405))) (= x547 (x177 (+ 32 x405))) (= x577 (x1223 x405)) (= x967 (< 0 x577)) (= (x177 (+ x228 96)) x652) (= x1210 (x1017 x874)) (<= x535 1461501637330902918203684832716283019655932542975)) x501) (=> (not x1110) x977)))))
(assert (=> (<= x450 10000) (= (x452 x450) (x31 x450))))
(assert (x832 x23))
(assert (x832 x199))
(assert (x1384 x1224 x359 x84 x254))
(assert (= x458 (x202 (x452 x458))))
(assert (x168 x516))
(assert (x1310 x644 1000000000000000000))
(assert (x832 x370))
(assert (x832 x1239))
(assert (x832 x128))
(assert (x832 x900))
(assert (x168 x80))
(assert (x832 x398))
(assert (x49 x912 (- x1177 x359)))
(assert (= (x452 69947311) (x31 69947311)))
(assert (= (x202 (x452 x716)) x716))
(assert (=> (>= 10000 x233) (= (x452 x233) (x31 x233))))
(assert (x1260 (- x84 x857)))
(assert (x49 x936 (- x1120 x362)))
(assert (x832 x449))
(assert (x1260 (- x936 x362)))
(assert (x832 x956))
(assert (x832 x826))
(assert (=> (>= 10000 x379) (= (x452 x379) (x31 x379))))
(assert (x832 x921))
(assert (x478 x936 x1120 x912 x1177))
(assert (= x1127 (and (not x423) x1333)))
(assert (=> (>= 10000 x1143) (= (x452 x1143) (x31 x1143))))
(assert (x832 x137))
(assert (x832 x1160))
(assert (=> (>= 10000 x891) (= (x31 x891) (x452 x891))))
(assert (x832 x1371))
(assert (x478 x936 x1120 x359 x1224))
(assert (= (x1069 x27) (ite (= x632 x27) x913 (x352 x27))))
(assert (x832 x315))
(assert (x478 x912 x1177 x1120 x936))
(assert (x832 x491))
(assert (x832 x442))
(assert (x168 x642))
(assert (x168 x863))
(assert (= (x1005 x374) (ite (and x998 x481) (x546 x374) (x1039 x374))))
(assert (x832 x864))
(assert (x832 x498))
(assert (= (x202 (x452 x1339)) x1339))
(assert (=> (>= 10000 x743) (= (x452 x743) (x31 x743))))
(assert (x832 x507))
(assert (= x710 (x202 (x452 x710))))
(assert (x832 x1281))
(assert (x478 x359 x362 x420 x441))
(assert (= (x452 635128645) (x31 635128645)))
(assert (x832 x946))
(assert (x832 x847))
(assert (= (x827 x313) (ite (and (not x1089) x998 x865) (x427 x313) (x1340 x313))))
(assert (x168 x354))
(assert (x832 x28))
(assert (= x18 (=> (= (> x696 0) x1251) (and (=> (and (= (x77 1461501637330902918203684832716283019655932542975 x862) x16) (= x390 (x889 x600)) (= x955 (x489 (x452 x1365))) x87 (< 0 x507) (= (x889 x874) x507) (= x738 (x78 (- x1168 32))) (= (x284 x21) x1365) (= x398 (x177 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1082))) (= (x177 (+ x562 36)) x1113) (= (x950 x562) x329) (= x623 (x177 (+ x562 100))) (= (x177 (+ x29 160)) x600) (= x1168 (x78 (- x623 x562))) (> x696 0) (= x94 0) (= x182 (x177 (+ x1113 128))) (or (and (not x1009) (= 0 x1380)) (and (or (and x819 (or (and (= (x177 (+ 96 x562)) x925) (= x913 (x352 x925)) (or (and (= 128 x1380) (= x872 (x1069 x25)) (not x237) x256 (= (x177 (+ x562 128)) x25) (= x237 (< 128 x329)) (= (x177 (+ 160 x623)) x431)) (and (not x256) (= 96 x1380))) (= x632 (x177 (+ x623 128))) (= (< 96 x329) x256) x932) (and (= 64 x1380) (not x932))) (= (x177 (+ 64 x562)) x419) (= (x177 (+ x623 96)) x578) (= (> x329 64) x932) (= (x1190 x419) x614)) (and (= 32 x1380) (not x819))) (= (x950 x264) x185) x1009 (= x819 (> x329 32)) (= x669 x264) (= x345 x182))) (= (> x1380 x329) x894) (= (x177 (+ x1113 96)) x844) (<= x1365 1461501637330902918203684832716283019655932542975) (= (> x955 0) x87) (= x669 (x177 (+ x562 32))) x1251 (= x1082 (x77 26959946667150639794667015087019630673637144422540572481103610249215 x511)) (= x325 x21) (= x511 (x204 x669)) (= x1009 (< 0 x329)) (= x686 (x177 (+ 68 x562))) (or (and x894 (= (x177 (+ x182 x329)) x682)) (not x894))) x54) (=> (not x1251) x977)))))
(assert (x1260 (- x1120 x1352)))
(assert (= (x202 (x452 x64)) x64))
(assert (= x166 x288))
(assert (x832 x493))
(assert (= x1353 (x202 (x452 x1353))))
(assert (x1220 32 x696))
(assert (x49 x1177 (- x912 x84)))
(assert (x478 x857 x108 x1120 x936))
(assert (= (x202 (x452 x673)) x673))
(assert (x832 x881))
(assert (x1260 (- x1120 x359)))
(assert (x218 x1175))
(assert (= (x1173 x547) (ite (and x581 x720) (x312 x547) (x805 x547))))
(assert (x49 x84 (- x254 x441)))
(assert (x832 x724))
(assert (= x534 x1290))
(assert (x832 x1097))
(assert (x1260 (- x912 x108)))
(assert (= (x202 (x452 x591)) x591))
(assert (x1384 x936 x1352 x1224 x359))
(assert (x49 x441 (- x420 x1120)))
(assert (x478 x84 x254 x912 x1177))
(assert (x832 x615))
(assert (x832 x657))
(assert (= (ite (= x435 x515) x951 (x570 x515)) (x553 x515)))
(assert (x832 x182))
(assert (x1260 (- x1352 x84)))
(assert (=> (>= 10000 x1315) (= (x452 x1315) (x31 x1315))))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x202 (x31 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x832 x149))
(assert (x1260 (- x362 x1177)))
(assert (x49 x857 (- x108 x441)))
(assert (= (x173 x25) (ite (and (not x549) x638 x998 (not x1089) (not x246)) (x178 x25) (ite (and (not x1089) (not x549) x998 (not x638)) (x17 x25) (ite (and x549 (not x1089) x998) (x17 x25) (x438 x25))))))
(assert (= x534 x225))
(assert (x832 x690))
(assert (x168 x1052))
(assert (= (x1005 x515) (ite (and x998 x481) (x546 x515) (x1039 x515))))
(assert (x168 x443))
(assert (x1384 x1352 x936 x912 x1177))
(assert (x832 x239))
(assert (x49 x420 (- x441 x1120)))
(assert (x832 x544))
(assert (x49 x936 (- x1352 x857)))
(assert (= x424 (x202 (x452 x424))))
(assert (=> (<= x263 10000) (= (x31 x263) (x452 x263))))
(assert (x1384 x359 x362 x441 x420))
(assert (x478 x936 x1120 x108 x857))
(assert (x168 x1142))
(assert (x832 x346))
(assert (= (x1277 x1153) (ite (and x998 (not x1089) x794) (x1332 x1153) (ite (and (not x794) x998 x196 (not x1089)) (x504 x1153) (x1256 x1153)))))
(assert (x168 x560))
(assert (x1260 (- x1352 x1224)))
(assert (=> (>= 10000 x230) (= (x31 x230) (x452 x230))))
(assert (= (ite (= x809 x844) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x809)) (x950 x809)))
(assert (= (x570 x264) (ite (= x264 x28) x357 (x1201 x264))))
(assert (= x696 (x546 x874)))
(assert (x1260 (- x1177 x441)))
(assert (x478 x936 x1120 x359 x362))
(assert (= (x17 x1375) x449))
(assert (x832 x1052))
(assert (= x1250 (x202 (x452 x1250))))
(assert (x832 x605))
(assert (x1260 (- x362 x857)))
(assert (= (x546 x600) (ite (= x874 x600) x696 (x664 x600))))
(assert (= (x202 (x452 x1336)) x1336))
(assert (x832 x1305))
(assert (x832 x219))
(assert (= (x202 (x31 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (=> (>= 10000 x802) (= (x31 x802) (x452 x802))))
(assert (x1384 x936 x1352 x362 x359))
(assert (x218 x862))
(assert (= (x1173 x809) (ite (and x720 x581) (x312 x809) (x805 x809))))
(assert (= (x202 (x452 x1159)) x1159))
(assert (x832 x963))
(assert (=> (>= 10000 x269) (= (x452 x269) (x31 x269))))
(assert (x1384 x108 x857 x84 x254))
(assert (x1384 x1177 x912 x362 x359))
(assert (x1384 x359 x1224 x912 x1177))
(assert (x49 x1120 (- x936 x857)))
(assert (x832 x1115))
(assert (x49 x359 (- x362 x912)))
(assert (x832 x1180))
(assert (= (ite (= x27 x435) x951 (x570 x27)) (x553 x27)))
(assert (x49 x420 (- x441 x1352)))
(assert (=> (<= x372 10000) (= (x31 x372) (x452 x372))))
(assert (=> (<= x908 10000) (= (x452 x908) (x31 x908))))
(assert (x1260 (- x1177 x1224)))
(assert (x49 x359 (- x362 x254)))
(assert (x478 x84 x254 x857 x108))
(assert (= x781 (x202 (x452 x781))))
(assert (= (x1173 x27) (ite (and x581 x720) (x312 x27) (x805 x27))))
(assert (x832 x161))
(assert (x1260 x1177))
(assert (x832 x936))
(assert (x478 x108 x857 x420 x441))
(assert (= (x452 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x31 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x49 x1352 (- x936 x84)))
(assert (x1310 x1207 1000000000000000000))
(assert (x49 x857 (- x108 x420)))
(assert (x49 x1224 x359))
(assert (x832 x299))
(assert (x1260 (- x1120 x912)))
(assert (= x73 x65))
(assert (= (x202 (x452 x141)) x141))
(assert (x478 x108 x857 x441 x420))
(assert (x1384 x857 x108 x1352 x936))
(assert (= 0 (x347 x669)))
(assert (x478 x441 x420 x1177 x912))
(assert (x168 x1198))
(assert (x832 x694))
(assert (x1384 x108 x857 x1120 x936))
(assert (=> (>= 10000 x1198) (= (x452 x1198) (x31 x1198))))
(assert (x832 x882))
(assert (x1260 (- x441 x1224)))
(assert (x49 x108 (- x857 x912)))
(assert (x218 x219))
(assert (= (ite (and x998 x638 (not x246) (not x549) (not x1089)) (x178 x1325) (ite (and x998 (not x638) (not x549) (not x1089)) (x17 x1325) (ite (and (not x1089) x549 x998) (x17 x1325) (x438 x1325)))) (x173 x1325)))
(assert (= x480 (=> (and (>= x947 0) (= x1094 x947) (< x20 2690754053) (<= x947 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x451) (not (= x20 2418364589)) (= x517 (x1293 (x452 x1370) x1188 0)) (not (> 2293535753 x20)) (= (x1293 (x452 x451) x1130 0) x1188) (<= x303 1461501637330902918203684832716283019655932542975) (> x317 0) (< x20 2960351575) (= x317 (x489 (x452 274184521717934524641157099916833587206))) (= (x1293 (x452 x303) x207 0) x1130) (not (= x20 2293535753)) (>= 1461501637330902918203684832716283019655932542975 x1370) (not (= 2512682246 x20)) (= x207 (x1293 (x452 x370) (x31 4) 0)) (= x947 (x70 x517)) (= 2532887486 x20)) x350)))
(assert (x832 x436))
(assert (x832 x1051))
(assert (=> (<= x673 10000) (= (x31 x673) (x452 x673))))
(assert (= 0 (x347 x435)))
(assert (x49 x1352 (- x936 x362)))
(assert (= (x173 x669) (ite (and (not x246) x638 x998 (not x549) (not x1089)) (x178 x669) (ite (and (not x549) (not x1089) (not x638) x998) (x17 x669) (ite (and (not x1089) x998 x549) (x17 x669) (x438 x669))))))
(assert (x478 x359 x1224 x1177 x912))
(assert (= (ite (= x208 x28) x357 (x1201 x208)) (x570 x208)))
(assert (x1260 (- x108 x84)))
(assert (x1260 (- x108 x254)))
(assert (x478 x441 x420 x857 x108))
(assert (= (x1005 x27) (ite (and x481 x998) (x546 x27) (x1039 x27))))
(assert (=> (>= 10000 x460) (= (x452 x460) (x31 x460))))
(assert (= (ite (= x374 x630) x297 (x17 x630)) (x178 x630)))
(assert (= x989 (x202 (x452 x989))))
(assert (x832 x627))
(assert (x478 x1352 x936 x1177 x912))
(assert (x168 x1021))
(assert (= x1162 (x202 (x452 x1162))))
(assert (= (x1354 x874) (ite (and x184 (not x894) x1251) (x1150 x874) (x1185 x874))))
(assert (x49 x1352 (- x936 x254)))
(assert (x478 x857 x108 x936 x1352))
(assert (x832 x76))
(assert (= (x202 (x452 x129)) x129))
(assert (x478 x936 x1352 x1177 x912))
(assert (x1384 x936 x1120 x1352 x936))
(assert (=> (>= 10000 x141) (= (x452 x141) (x31 x141))))
(assert (=> (<= x565 10000) (= (x452 x565) (x31 x565))))
(assert (= (x546 x515) (ite (= x515 x874) x696 (x664 x515))))
(assert (x168 x45))
(assert (x478 x84 x254 x441 x420))
(assert (x478 x441 x420 x359 x362))
(assert (x832 x743))
(assert (x168 x1095))
(assert (x1384 x1224 x359 x362 x359))
(assert (=> (>= 10000 x692) (= (x452 x692) (x31 x692))))
(assert (x832 x710))
(assert (= (x1069 x1305) (ite (= x1305 x632) x913 (x352 x1305))))
(assert (x1260 (- x84 x912)))
(assert (= (x950 x264) (ite (= x264 x844) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x264))))
(assert (x478 x936 x1352 x108 x857))
(assert (x49 x362 x359))
(assert (= (x827 x155) (ite (and x998 x865 (not x1089)) (x427 x155) (x1340 x155))))
(assert (x832 x1189))
(assert (x832 x666))
(assert (= (ite (= x652 x1305) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x784 x1305)) (x1223 x1305)))
(assert (x478 x1177 x912 x359 x1224))
(assert (x1260 (- x1224 x359)))
(assert (= (x206 x541) (ite (and (not x1089) x998 x794) (x1030 x541) (ite (and (not x794) x196 (not x1089) x998) (x1030 x541) (x1275 x541)))))
(assert (= x372 (x202 (x452 x372))))
(assert (x49 x1352 (- x936 x1224)))
(assert (x1260 (- x420 x912)))
(assert (x478 x912 x1177 x936 x1120))
(assert (x832 x1274))
(assert (x168 x451))
(assert (= (ite (and x581 x720) (x312 x515) (x805 x515)) (x1173 x515)))
(assert (x832 x997))
(assert (x1383 x1243))
(assert (= (x452 274184521717934524641157099916833587214) (x31 274184521717934524641157099916833587214)))
(assert (x478 x1177 x912 x108 x857))
(assert (=> (<= x579 10000) (= (x452 x579) (x31 x579))))
(assert (x832 x265))
(assert (x832 x1091))
(assert (x478 x84 x254 x1177 x912))
(assert (x49 x441 (- x420 x254)))
(assert (x1260 (- x108 x420)))
(assert (x168 x908))
(assert (x478 x1177 x912 x936 x1120))
(assert (= (x352 x25) (ite (= x578 x25) x614 (x1190 x25))))
(assert (x832 x273))
(assert (x832 x126))
(assert (x478 x359 x362 x1120 x936))
(assert (x832 x516))
(assert (x168 x1151))
(assert (x832 x104))
(assert (= x65 x72))
(assert (x832 x1198))
(assert (= (x1150 x1305) (ite (and x932 x184 (not x256) x1251 x819 x1009) (x1069 x1305) (ite (and x819 x184 x1251 (not x932) x1009) (x352 x1305) (ite (and x1009 (not x819) x184 x1251) (x1190 x1305) (ite (and x1251 x184 (not x1009)) (x950 x1305) (x887 x1305)))))))
(assert (x478 x857 x108 x420 x441))
(assert (x1260 (- x420 x1224)))
(assert (= (x452 87118632) (x31 87118632)))
(assert (= (ite (= x578 x1305) x614 (x1190 x1305)) (x352 x1305)))
(assert (x49 x1177 (- x912 x441)))
(assert (x832 x651))
(assert (x832 x1245))
(assert (x832 x1243))
(assert (x478 x108 x857 x254 x84))
(assert (=> (<= x1250 10000) (= (x31 x1250) (x452 x1250))))
(assert (x832 x369))
(assert (x1384 x359 x1224 x84 x254))
(assert (= x1227 (x202 (x452 x1227))))
(assert (= (x202 (x452 x104)) x104))
(assert (= x787 x1358))
(assert (x832 x775))
(assert (x168 x710))
(assert (x832 x612))
(assert (= (x31 604800) (x452 604800)))
(assert (x832 x537))
(assert (x832 x1184))
(assert (x168 x104))
(assert (=> (>= 10000 x383) (= (x452 x383) (x31 x383))))
(assert (x478 x857 x108 x1224 x359))
(assert (x832 x1226))
(assert (=> (>= 10000 x1287) (= (x452 x1287) (x31 x1287))))
(assert (= (ite (= x600 x28) x357 (x1201 x600)) (x570 x600)))
(assert (x49 x1352 (- x936 x108)))
(assert (x478 x108 x857 x362 x359))
(assert (x832 x688))
(assert (x832 x1019))
(assert (x832 x683))
(assert (=> (<= x451 10000) (= (x31 x451) (x452 x451))))
(assert (=> (>= 10000 x240) (= (x31 x240) (x452 x240))))
(assert (= x309 (x202 (x452 x309))))
(assert (x49 x1224 (- x359 x420)))
(assert (= (x17 x600) (ite (= x600 x1375) x449 (x976 x600))))
(assert (x832 x320))
(assert (x478 x1177 x912 x857 x108))
(assert (= (x347 x140) 0))
(assert (= (ite (= x435 x28) x357 (x1201 x435)) (x570 x435)))
(assert (x168 x971))
(assert (x1260 (- x936 x1224)))
(assert (= (ite (= x874 x345) x185 (x950 x874)) (x1190 x874)))
(assert (x478 x1177 x912 x84 x254))
(assert (x832 x816))
(assert (x832 x236))
(assert (= (ite (= x25 x844) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x25)) (x950 x25)))
(assert (x478 x84 x254 x420 x441))
(assert (x832 x682))
(assert (x168 x379))
(assert (= (x202 (x452 x1093)) x1093))
(assert (=> (<= x1365 10000) (= (x452 x1365) (x31 x1365))))
(assert (x1260 (- x359 x420)))
(assert (= (x202 (x452 x1370)) x1370))
(assert (x832 x109))
(assert (= (x766 x140) (ite (and x761 x120) (x266 x140) (x376 x140))))
(assert (x1260 (- x936 x84)))
(assert (x478 x420 x441 x912 x1177))
(assert (x1384 x420 x441 x1224 x359))
(assert (= (x173 x419) (ite (and (not x246) (not x549) x998 x638 (not x1089)) (x178 x419) (ite (and x998 (not x638) (not x549) (not x1089)) (x17 x419) (ite (and x998 (not x1089) x549) (x17 x419) (x438 x419))))))
(assert (= x964 (x202 (x452 x964))))
(assert (x832 x577))
(assert (x832 x562))
(assert (= (x202 (x31 2211524764)) 2211524764))
(assert (x832 x1029))
(assert (x49 x936 (- x1352 x359)))
(assert (= x263 (x202 (x452 x263))))
(assert (x168 x640))
(assert (x832 x1075))
(assert (x49 x362 (- x359 x1177)))
(assert (= (x202 (x348 x611 1)) (+ 1 (x202 x611))))
(assert (x832 x396))
(assert (x832 x1363))
(assert (x1384 x84 x254 x912 x1177))
(assert (x832 x1027))
(assert (x478 x362 x359 x359 x1224))
(assert (= x1240 true))
(assert (= (x202 (x31 37714057306076988483118529490347679105585116642029194716945419020321082336612)) 37714057306076988483118529490347679105585116642029194716945419020321082336612))
(assert (x1260 (- x857 x84)))
(assert (x478 x359 x362 x108 x857))
(assert (= (x202 (x452 x80)) x80))
(assert (x478 x912 x1177 x936 x1352))
(assert (= (ite (and (not x894) x184 x1251) (x1150 x208) (x1185 x208)) (x1354 x208)))
(assert (x832 x873))
(assert (x832 x851))
(assert (x832 x422))
(assert (x49 x108 (- x857 x1224)))
(assert (= (x202 (x452 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x478 x1224 x359 x1120 x936))
(assert (= (ite (= x632 x515) x913 (x352 x515)) (x1069 x515)))
(assert (x168 x591))
(assert (and (= 81 (x270 27 3)) (= 9 (x270 3 3)) (= (x270 9 3) 27) (= 81 (x270 9 9))))
(assert (=> (>= 10000 x1376) (= (x31 x1376) (x452 x1376))))
(assert (x832 x818))
(assert (= (x178 x900) (ite (= x374 x900) x297 (x17 x900))))
(assert (x1384 x1120 x936 x441 x420))
(assert (= x787 x69))
(assert (x1260 (- x1120 x108)))
(assert (x478 x1352 x936 x84 x254))
(assert (x832 x1013))
(assert (= 2512682246 (x202 (x31 2512682246))))
(assert (x832 x545))
(assert (=> (<= x1227 10000) (= (x452 x1227) (x31 x1227))))
(assert (= (ite (= x1375 x27) x449 (x976 x27)) (x17 x27)))
(assert (=> (>= 10000 x727) (= (x452 x727) (x31 x727))))
(assert (x478 x1120 x936 x362 x359))
(assert (x832 x169))
(assert (= (ite (= x1305 x1375) x449 (x976 x1305)) (x17 x1305)))
(assert (= x1376 (x202 (x452 x1376))))
(assert (x832 x952))
(assert (x1260 (- x84 x936)))
(assert (= (x202 (x452 x1019)) x1019))
(assert (x168 x372))
(assert (= (x202 (x452 x858)) x858))
(assert (x1384 x1224 x359 x1120 x936))
(assert (x49 x857 (- x108 x912)))
(assert (x168 x579))
(assert (=> (<= x1163 10000) (= (x452 x1163) (x31 x1163))))
(assert (x49 x362 (- x359 x420)))
(assert (x832 x971))
(assert (= x714 x454))
(assert (= (ite (= x68 x874) x696 (x664 x68)) (x546 x68)))
(assert (x49 x359 (- x1224 x108)))
(assert (x478 x441 x420 x1224 x359))
(assert (x832 x802))
(assert (=> (>= 10000 x923) (= (x31 x923) (x452 x923))))
(assert (x832 x1269))
(assert (x1260 (- x420 x359)))
(assert (x832 x1151))
(assert (= x560 (x202 (x452 x560))))
(assert (x832 x164))
(assert (x832 x640))
(assert (x49 x912 (- x1177 x254)))
(assert (x478 x359 x1224 x936 x1120))
(assert (x49 x857 (- x108 x1352)))
(assert (x478 x359 x362 x936 x1120))
(assert (= (ite (and x998 x481) (x546 x874) (x1039 x874)) (x1005 x874)))
(assert (x1384 x254 x84 x108 x857))
(assert (x832 x36))
(assert (x832 x912))
(assert (x832 x450))
(assert (= (x352 x140) (ite (= x140 x578) x614 (x1190 x140))))
(assert (x1241 x511 x954))
(assert (x832 x1001))
(assert (x832 x12))
(assert (= (x202 (x452 x1142)) x1142))
(assert (= (ite (= x435 x547) x951 (x570 x547)) (x553 x547)))
(assert (x1383 x644))
(assert (x1384 x254 x84 x1224 x359))
(assert (x832 x579))
(assert (x49 x362 (- x359 x912)))
(assert (x1384 x254 x84 x912 x1177))
(assert (x832 x462))
(assert (= (ite (= x1364 x624) x127 (x610 x624)) (x486 x624)))
(assert (x832 x1135))
(assert (x168 x263))
(assert (x1260 (- x362 x912)))
(assert (x1260 (- x1224 x912)))
(assert (x478 x1224 x359 x420 x441))
(assert (x478 x1177 x912 x441 x420))
(assert (= (x452 2061678023) (x31 2061678023)))
(assert (x478 x1120 x936 x359 x1224))
(assert (x832 x601))
(assert (x832 x1070))
(assert (= (ite (= x578 x547) x614 (x1190 x547)) (x352 x547)))
(assert (= x451 (x202 (x452 x451))))
(assert (x478 x359 x1224 x857 x108))
(assert (x1384 x912 x1177 x362 x359))
(assert (x832 x693))
(assert (= (ite (= x632 x900) x913 (x352 x900)) (x1069 x900)))
(assert (x832 x750))
(assert (x168 x189))
(assert (=> (>= 10000 x1239) (= (x452 x1239) (x31 x1239))))
(assert (x478 x359 x1224 x359 x362))
(assert (x49 x359 (- x1224 x359)))
(assert (x49 x420 (- x441 x359)))
(assert (= (ite (= x345 x547) x185 (x950 x547)) (x1190 x547)))
(assert (x832 x1341))
(assert (=> (>= 10000 x716) (= (x31 x716) (x452 x716))))
(assert (x832 x302))
(assert (= x1143 (x202 (x452 x1143))))
(assert (=> (>= 10000 x858) (= (x31 x858) (x452 x858))))
(assert (x478 x441 x420 x1352 x936))
(assert (= (x202 (x452 x283)) x283))
(assert (x49 x254 (- x84 x1120)))
(assert (x49 x936 (- x1352 x420)))
(assert (=> (<= x779 10000) (= (x452 x779) (x31 x779))))
(assert (x168 x899))
(assert (x478 x359 x1224 x362 x359))
(assert (= (x546 x25) (ite (= x874 x25) x696 (x664 x25))))
(assert (x168 x383))
(assert (x832 x920))
(assert (= (x202 (x452 x535)) x535))
(assert (= (x202 (x452 x728)) x728))
(assert (= x923 (x202 (x452 x923))))
(assert (= 69947311 (x202 (x31 69947311))))
(assert (x832 x1381))
(assert (x1260 (- x441 x359)))
(assert (x832 x558))
(assert (x1384 x108 x857 x1224 x359))
(assert (= (ite (and x481 x998) (x546 x669) (x1039 x669)) (x1005 x669)))
(assert (x49 x936 (- x1352 x912)))
(assert (x1384 x420 x441 x912 x1177))
(assert (x832 x569))
(assert (x49 x84 (- x254 x936)))
(assert (= (x1223 x515) (ite (= x515 x652) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x784 x515))))
(assert (=> (>= 10000 x544) (= (x31 x544) (x452 x544))))
(assert (x832 x732))
(assert (x478 x254 x84 x420 x441))
(assert (x49 x84 (- x254 x1224)))
(assert (= (ite (and x1251 x184 (not x894)) (x1150 x515) (x1185 x515)) (x1354 x515)))
(assert (x832 x1331))
(assert (= (ite (and x481 x998) (x546 x435) (x1039 x435)) (x1005 x435)))
(assert (= (ite (= x809 x374) x297 (x17 x809)) (x178 x809)))
(assert (x1384 x441 x420 x1224 x359))
(assert (x1260 (- x912 x1352)))
(assert (x168 x1376))
(assert (x832 x991))
(assert (x1260 x696))
(assert (x1260 (- x362 x254)))
(assert (= (x202 (x452 x1099)) x1099))
(assert (= 0 (x347 x925)))
(assert (= (x553 x925) (ite (= x925 x435) x951 (x570 x925))))
(assert (x832 x540))
(assert (= x650 x69))
(assert (x168 x1343))
(assert (x168 x137))
(assert (= 0 (x347 x900)))
(assert (x478 x1120 x936 x84 x254))
(assert (x1384 x1224 x359 x108 x857))
(assert (x832 x1044))
(assert (x832 x99))
(assert (= (x1223 x850) (ite (= x652 x850) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x784 x850))))
(assert (x49 x420 (- x441 x912)))
(assert (x49 x1224 (- x359 x1352)))
(assert (x1260 (- x254 x936)))
(assert (x1384 x857 x108 x84 x254))
(assert (x168 x802))
(assert (x478 x420 x441 x359 x1224))
(assert (x1260 (- x1177 x936)))
(assert (= x152 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1013) (<= x1250 1461501637330902918203684832716283019655932542975) (>= x1013 0) (= (x489 (x452 274184521717934524641157099916833587206)) x557) (= x1360 (x1293 (x452 x719) (x31 3) 0)) (> x557 0) (>= 1461501637330902918203684832716283019655932542975 x582) (= x953 (x1293 (x452 x1250) x532 0)) (= (x1293 (x452 x582) x1360 0) x532) (not (= 2690754053 x62)) (= x62 2743102681) (> 2960351575 x62) (not (< x62 2690754053)) (= x1013 (x1030 x953)) (= x1013 x227) (not (< x62 2293535753))) (=> (and (= x385 x1044) (= x1183 x227) (= x822 x230) (= x36 x424) (= x971 x558)) x721))))
(assert (x168 x1143))
(assert (x832 x383))
(assert (=> (>= 10000 x474) (= (x31 x474) (x452 x474))))
(assert (x478 x254 x84 x936 x1352))
(assert (x832 x614))
(assert (x478 x1120 x936 x912 x1177))
(assert (x832 x43))
(assert (x832 x305))
(assert (= x971 (x202 (x452 x971))))
(assert (x49 x359 (- x362 x1120)))
(assert (x832 x527))
(assert (= (x202 (x452 x1075)) x1075))
(assert (x49 x912 (- x1177 x1224)))
(assert (= (x347 x630) 0))
(assert (x832 x1144))
(assert (x478 x108 x857 x84 x254))
(assert (x832 x1242))
(assert (x168 x1285))
(assert (x832 x552))
(assert (= (ite (= x925 x1375) x449 (x976 x925)) (x17 x925)))
(assert (=> (<= x109 10000) (= (x452 x109) (x31 x109))))
(assert (x832 x1325))
(assert (= x1282 x1213))
(assert (x478 x84 x254 x108 x857))
(assert (x832 x175))
(assert (x832 x354))
(assert (x832 x1047))
(assert (= (x1354 x140) (ite (and x184 (not x894) x1251) (x1150 x140) (x1185 x140))))
(assert (= (x452 18446744073709551615) (x31 18446744073709551615)))
(assert (x832 x730))
(assert (x1260 (- x108 x359)))
(assert (x832 x303))
(assert (= (x202 (x31 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x49 x1224 (- x359 x912)))
(assert (x49 x1177 (- x912 x420)))
(assert (= (or x930 (and x1306 (not x1110)) (and x184 (not x1251))) x1358))
(assert (= (x1005 x850) (ite (and x998 x481) (x546 x850) (x1039 x850))))
(assert (=> (>= 10000 x1370) (= (x31 x1370) (x452 x1370))))
(assert (= (x570 x925) (ite (= x28 x925) x357 (x1201 x925))))
(assert (x832 x1307))
(assert (= (=> (and (= x743 x558) (= x36 x516)) x783) x977))
(assert (x832 x726))
(assert (x168 x732))
(assert (x1260 (- x254 x857)))
(assert (x478 x441 x420 x936 x1352))
(assert (x832 x804))
(assert (= 0 (x347 x850)))
(assert (x832 x523))
(assert (x478 x362 x359 x857 x108))
(assert (= (ite (= x264 x1375) x449 (x976 x264)) (x17 x264)))
(assert (x1260 (- x420 x84)))
(assert (x49 x936 (- x1352 x362)))
(assert (= (x202 (x452 x474)) x474))
(assert (= x637 (=> (and (= (x489 (x452 274184521717934524641157099916833587206)) x1195) (= x292 (x70 x1355)) (= (x1293 (x452 x1279) x1146 0) x1355) (<= x292 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x802) (= 2532887486 x1105) (< 0 x1195) (< x1105 2690754053) (>= 1461501637330902918203684832716283019655932542975 x1279) (= x292 x169) (not (< x1105 2293535753)) (>= x292 0) (> 2960351575 x1105) (not (= x1105 2512682246)) (not (= x1105 2418364589)) (not (= 2293535753 x1105)) (= x293 (x1293 (x452 x863) x573 0)) (= x573 (x1293 (x452 x64) (x31 4) 0)) (= (x1293 (x452 x802) x293 0) x1146) (>= 1461501637330902918203684832716283019655932542975 x863)) x592)))
(assert (x832 x582))
(assert (x832 x639))
(assert (x168 x1347))
(assert (x832 x1210))
(assert (x1260 (- x84 x1352)))
(assert (x832 x719))
(assert (= 649617121 (x202 (x31 649617121))))
(assert (x832 x414))
(assert (x478 x936 x1352 x359 x1224))
(assert (= (x347 160) 0))
(assert (= (x31 759532456) (x452 759532456)))
(assert (= (x31 649617121) (x452 649617121)))
(assert (x832 x940))
(assert (x832 x433))
(assert (= (x173 x140) (ite (and x638 (not x1089) x998 (not x549) (not x246)) (x178 x140) (ite (and (not x549) (not x638) (not x1089) x998) (x17 x140) (ite (and x549 (not x1089) x998) (x17 x140) (x438 x140))))))
(assert (x832 x768))
(assert (x168 x1093))
(assert (x218 x1189))
(assert (= x998 x184))
(assert (x49 x1224 (- x359 x936)))
(assert (x832 x1267))
(assert (x832 x307))
(assert (x168 x1370))
(assert (x49 x84 (- x254 x1120)))
(assert (x478 x1352 x936 x1224 x359))
(assert (= (x1354 x68) (ite (and x1251 (not x894) x184) (x1150 x68) (x1185 x68))))
(assert (= (x202 (x452 x1144)) x1144))
(assert (x832 x254))
(assert (x168 x561))
(assert (x1260 (- x362 x936)))
(assert (x832 x1304))
(assert (x478 x254 x84 x108 x857))
(assert (x832 x379))
(assert (x832 x407))
(assert (x1260 (- x420 x1120)))
(assert (x832 x962))
(assert (x478 x1224 x359 x441 x420))
(assert (x49 x441 (- x420 x1177)))
(assert (=> (>= 10000 x934) (= (x31 x934) (x452 x934))))
(assert (x478 x108 x857 x936 x1120))
(assert (=> (>= 10000 x1122) (= (x452 x1122) (x31 x1122))))
(assert (x49 x1120 (- x936 x1224)))
(assert (= (ite (and x720 x581) (x312 x208) (x805 x208)) (x1173 x208)))
(assert (x832 x1299))
(assert (x832 x555))
(assert (x218 1461501637330902918203684832716283019655932542975))
(assert (= x1269 (x202 (x452 x1269))))
(assert (= (and (not x559) x563) x13))
(assert (= (x553 x419) (ite (= x419 x435) x951 (x570 x419))))
(assert (= (ite (and (not x246) (not x1089) x998 x638 (not x549)) (x178 x208) (ite (and (not x638) x998 (not x549) (not x1089)) (x17 x208) (ite (and (not x1089) x998 x549) (x17 x208) (x438 x208)))) (x173 x208)))
(assert (x832 x1302))
(assert (x1260 (- x912 x254)))
(assert (= (x950 x1305) (ite (= x1305 x844) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x1305))))
(assert (x832 x127))
(assert (x1260 (- x254 x1352)))
(assert (= (x546 x850) (ite (= x850 x874) x696 (x664 x850))))
(assert (x478 x1177 x912 x420 x441))
(assert (x832 x405))
(assert (x168 x779))
(assert (= x1123 x430))
(assert (x49 x1177 (- x912 x254)))
(assert (= (ite (= x435 x809) x951 (x570 x809)) (x553 x809)))
(assert (= x1103 (x202 (x452 x1103))))
(assert (x832 x1279))
(assert (x1260 (- x1177 x84)))
(assert (x49 x857 (- x108 x936)))
(assert (x832 x1094))
(assert (=> (>= 10000 x1344) (= (x452 x1344) (x31 x1344))))
(assert (= (x202 (x31 2293535753)) 2293535753))
(assert (x168 x1339))
(assert (x832 x907))
(assert (= x1321 (x202 (x452 x1321))))
(assert (x478 x359 x1224 x108 x857))
(assert (x478 x936 x1352 x441 x420))
(assert (x1260 (- x857 x912)))
(assert (x1384 x420 x441 x1120 x936))
(assert (x1096 x604 x1222 x353 x758))
(assert (x168 x450))
(assert (= (ite (= x435 x25) x951 (x570 x25)) (x553 x25)))
(assert (= (=> (and (not (< x97 2690754053)) (<= x307 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x97 2743102681)) (= x1257 (x489 (x452 274184521717934524641157099916833587206))) (<= x1085 1461501637330902918203684832716283019655932542975) (= x307 x457) (= x384 (x1293 (x452 x1085) x503 0)) (= 2798343961 x97) (= x503 (x1293 (x452 x354) (x31 5) 0)) (not (= x97 2764855426)) (not (= 2690754053 x97)) (= (x427 x384) x307) (> 2960351575 x97) (not (> 2293535753 x97)) (< 0 x1257) (>= x307 0)) (=> (and (= x899 x36) (= x1317 x822) (= x385 x914) (= x411 x457) (= x558 x1142)) x336)) x594))
(assert (=> (<= x964 10000) (= (x31 x964) (x452 x964))))
(assert (x168 x1159))
(assert (x49 x936 (- x1120 x1177)))
(assert (x478 x254 x84 x359 x362))
(assert (x1260 (- x84 x108)))
(assert (x1260 (- x254 x1177)))
(assert (=> (<= x907 10000) (= (x31 x907) (x452 x907))))
(assert (x478 x936 x1120 x1224 x359))
(assert (x1260 (- x857 x254)))
(assert (x1384 x857 x108 x1224 x359))
(assert (= (x347 x25) 0))
(assert (= 0 (x347 x419)))
(assert (x1260 (- x1224 x857)))
(assert (x832 x8))
(assert (= (x206 x484) (ite (and x794 x998 (not x1089)) (x1030 x484) (ite (and (not x1089) (not x794) x998 x196) (x1030 x484) (x1275 x484)))))
(assert (= (x171 x900) (ite (= x900 x537) x807 (x680 x900))))
(assert (x1260 (- x84 x1120)))
(assert (x1260 x359))
(assert (x832 x689))
(assert (= (ite (= x547 x874) x696 (x664 x547)) (x546 x547)))
(assert (=> (>= 10000 x1321) (= (x452 x1321) (x31 x1321))))
(assert (x49 x359 (- x362 x936)))
(assert (= (ite (and x481 x998) (x546 x264) (x1039 x264)) (x1005 x264)))
(assert true)
(assert (x1260 (- x359 x1177)))
(assert (x478 x254 x84 x359 x1224))
(assert (=> (>= 10000 x1142) (= (x31 x1142) (x452 x1142))))
(assert (= (x202 (x31 2061678023)) 2061678023))
(assert (=> (>= 10000 x64) (= (x31 x64) (x452 x64))))
(assert (= 2743102681 (x202 (x31 2743102681))))
(assert (x478 x1177 x912 x936 x1352))
(assert (x1384 x362 x359 x1224 x359))
(assert (= (ite (= x28 x1325) x357 (x1201 x1325)) (x570 x1325)))
(assert (x832 x935))
(assert (= (+ 1 (x202 x341)) (x202 (x348 x341 1))))
(assert (= (x202 (x452 x732)) x732))
(assert (x832 x731))
(assert (= (x553 x600) (ite (= x435 x600) x951 (x570 x600))))
(assert (x478 x1224 x359 x108 x857))
(assert (x1260 (- x1120 x936)))
(assert (x49 x362 (- x359 x1120)))
(assert (= (x1005 x68) (ite (and x998 x481) (x546 x68) (x1039 x68))))
(assert (= x1085 (x202 (x452 x1085))))
(assert (x832 x271))
(assert (x168 x1252))
(assert (= (ite (= x844 x925) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x925)) (x950 x925)))
(assert (= x1347 (x202 (x452 x1347))))
(assert (x832 x715))
(assert (x478 x1352 x936 x912 x1177))
(assert (x832 x209))
(assert (x478 x857 x108 x1352 x936))
(assert (x832 x1063))
(assert (=> (<= x189 10000) (= (x31 x189) (x452 x189))))
(assert (x49 x420 (- x441 x936)))
(assert (x49 x1120 (- x936 x912)))
(assert (x478 x254 x84 x857 x108))
(assert (=> (<= x203 10000) (= (x452 x203) (x31 x203))))
(assert (x832 x1232))
(assert (= (ite (= x1355 x1364) x127 (x610 x1355)) (x486 x1355)))
(assert (x478 x1224 x359 x359 x362))
(assert (x832 x1116))
(assert (=> (>= 10000 x1103) (= (x452 x1103) (x31 x1103))))
(assert (x49 x254 (- x84 x857)))
(assert (x49 x254 (- x84 x362)))
(assert (=> (>= 10000 x1162) (= (x31 x1162) (x452 x1162))))
(assert (x832 x195))
(assert (x478 x420 x441 x1352 x936))
(assert (= (x680 x1305) (ite (= x1305 x335) x729 (x723 x1305))))
(assert (= (x570 x874) (ite (= x28 x874) x357 (x1201 x874))))
(assert (x832 x1326))
(assert (x832 x453))
(assert (=> (<= x792 10000) (= (x31 x792) (x452 x792))))
(assert (x1260 (- x857 x1120)))
(assert (x832 x220))
(assert (x168 x1279))
(assert (x478 x1352 x936 x441 x420))
(assert (= (ite (= x578 x68) x614 (x1190 x68)) (x352 x68)))
(assert (=> (<= x764 10000) (= (x31 x764) (x452 x764))))
(assert (x49 x420 (- x441 x1224)))
(assert (x1384 x362 x359 x1120 x936))
(assert (x832 x734))
(assert (x1384 x1224 x359 x912 x1177))
(assert (x832 x58))
(assert (x832 x1108))
(assert (x168 274184521717934524641157099916833587218))
(assert (= (x31 468353030) (x452 468353030)))
(assert (= (x1150 x874) (ite (and (not x256) x1251 x184 x1009 x932 x819) (x1069 x874) (ite (and x819 x184 x1251 x1009 (not x932)) (x352 x874) (ite (and x1009 x184 (not x819) x1251) (x1190 x874) (ite (and x184 (not x1009) x1251) (x950 x874) (x887 x874)))))))
(assert (x1384 x108 x857 x441 x420))
(assert (x832 x328))
(assert (= (x173 x874) (ite (and x638 (not x549) (not x1089) (not x246) x998) (x178 x874) (ite (and (not x549) (not x1089) x998 (not x638)) (x17 x874) (ite (and x549 x998 (not x1089)) (x17 x874) (x438 x874))))))
(assert (x1384 x108 x857 x912 x1177))
(assert (= x650 x1289))
(assert (x1260 (- x1224 x936)))
(assert (x168 x1085))
(assert (= (ite (= x25 x345) x185 (x950 x25)) (x1190 x25)))
(assert (= (ite (= x1305 x435) x951 (x570 x1305)) (x553 x1305)))
(assert (x832 x105))
(assert (x478 x857 x108 x359 x1224))
(assert (x832 x1084))
(assert (= (x202 (x452 x908)) x908))
(assert (= 0 (x347 x515)))
(assert (x168 x1144))
(assert (x1384 x441 x420 x1120 x936))
(assert (x832 x821))
(assert (= (ite (= x632 x547) x913 (x352 x547)) (x1069 x547)))
(assert (x832 x989))
(assert (x168 x858))
(assert (x478 x1177 x912 x359 x362))
(assert (= (ite (= x345 x1305) x185 (x950 x1305)) (x1190 x1305)))
(assert (x49 x912 (- x1177 x936)))
(assert (x49 x441 x420))
(assert (x49 x1352 (- x936 x420)))
(assert (= (x452 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x31 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x478 x359 x1224 x936 x1352))
(assert (x832 x1370))
(assert (x832 x1192))
(assert (x1384 x936 x1120 x912 x1177))
(assert (= (x202 (x452 x956)) x956))
(assert (x168 x544))
(assert (x832 x1347))
(assert (x832 x372))
(assert (x478 x359 x362 x912 x1177))
(assert (x1260 (- x108 x362)))
(assert (=> (<= x1342 10000) (= (x452 x1342) (x31 x1342))))
(assert (x168 x309))
(assert (x49 x936 (- x1120 x254)))
(assert (x832 x269))
(assert (=> (<= x989 10000) (= (x31 x989) (x452 x989))))
(assert (x49 x254 (- x84 x1352)))
(assert (x832 x356))
(assert (x832 x1100))
(assert (= (ite (and x819 x932 x1251 x1009 (not x256) x184) (x1069 x208) (ite (and (not x932) x1009 x184 x1251 x819) (x352 x208) (ite (and (not x819) x184 x1251 x1009) (x1190 x208) (ite (and x184 (not x1009) x1251) (x950 x208) (x887 x208))))) (x1150 x208)))
(assert (x49 x857 (- x108 x359)))
(assert (=> (>= 10000 x1144) (= (x31 x1144) (x452 x1144))))
(assert (x832 x915))
(assert (= (x202 (x31 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x478 x108 x857 x912 x1177))
(assert (x1260 (- x1177 x359)))
(assert (x218 x511))
(assert (= (x553 x1325) (ite (= x1325 x435) x951 (x570 x1325))))
(assert (x478 x857 x108 x936 x1120))
(assert (x478 x1177 x912 x362 x359))
(assert (x1383 x1207))
(assert (x832 x871))
(assert (= x233 (x202 (x452 x233))))
(assert (x832 x295))
(assert (x832 x1378))
(assert (x832 x858))
(assert (= (x17 x850) (ite (= x850 x1375) x449 (x976 x850))))
(assert (= 0 (x347 x809)))
(assert (x832 x878))
(assert (=> (<= x569 10000) (= (x31 x569) (x452 x569))))
(assert (x1384 x359 x362 x1120 x936))
(assert (=> (>= 10000 x1159) (= (x452 x1159) (x31 x1159))))
(assert (= (x173 x600) (ite (and x638 (not x1089) (not x246) (not x549) x998) (x178 x600) (ite (and (not x638) (not x549) x998 (not x1089)) (x17 x600) (ite (and x549 x998 (not x1089)) (x17 x600) (x438 x600))))))
(assert (= (ite (= x374 x925) x297 (x17 x925)) (x178 x925)))
(assert (x1260 (- x359 x936)))
(assert (x49 x857 (- x108 x1177)))
(assert (= (x202 (x31 2690754053)) 2690754053))
(assert (x168 x737))
(assert (= (x352 x27) (ite (= x578 x27) x614 (x1190 x27))))
(assert (= (x202 (x452 x379)) x379))
(assert (x832 x859))
(assert (x832 x62))
(assert (x1384 x254 x84 x362 x359))
(assert (x49 x936 (- x1352 x108)))
(assert (x832 x1270))
(assert (= (x202 (x452 x642)) x642))
(assert (x478 x936 x1352 x362 x359))
(assert (= (x452 2960351575) (x31 2960351575)))
(assert (x1260 (- x254 x1120)))
(assert (= (ite (and x720 x581) (x312 x850) (x805 x850)) (x1173 x850)))
(assert (= (x202 (x452 x460)) x460))
(assert (x1384 x912 x1177 x108 x857))
(assert (x832 x960))
(assert (x832 x780))
(assert (x1260 (- x359 x108)))
(assert (x832 x403))
(assert (x478 x936 x1120 x362 x359))
(assert (= (ite (and (not x549) x998 (not x246) x638 (not x1089)) (x178 x68) (ite (and x998 (not x638) (not x549) (not x1089)) (x17 x68) (ite (and x549 (not x1089) x998) (x17 x68) (x438 x68)))) (x173 x68)))
(assert (x168 x764))
(assert (x1260 (- x108 x1224)))
(assert (x168 x716))
(assert (x832 x151))
(assert (x1260 (- x359 x857)))
(assert (x1384 x441 x420 x84 x254))
(assert (x832 x729))
(assert (=> (>= 10000 x1045) (= (x31 x1045) (x452 x1045))))
(assert (= (x31 2532887486) (x452 2532887486)))
(assert (x1384 x936 x1352 x441 x420))
(assert (= true x1129))
(assert (x49 x912 (- x1177 x362)))
(assert (x832 x1229))
(assert (x1260 (- x1352 x254)))
(assert (x49 x441 (- x420 x936)))
(assert (= (x1190 x27) (ite (= x345 x27) x185 (x950 x27))))
(assert (x832 x874))
(assert (=> (<= x1093 10000) (= (x452 x1093) (x31 x1093))))
(assert (= (x452 2835717307) (x31 2835717307)))
(assert (x832 x189))
(assert (= (x553 x68) (ite (= x435 x68) x951 (x570 x68))))
(assert (x832 x554))
(assert (= (x17 x419) (ite (= x1375 x419) x449 (x976 x419))))
(assert (= (x178 x874) (ite (= x374 x874) x297 (x17 x874))))
(assert (x832 x1367))
(assert (= (ite (and x481 x998) (x546 x1325) (x1039 x1325)) (x1005 x1325)))
(assert (x1260 (- x912 x857)))
(assert (= (x202 (x31 2868243304)) 2868243304))
(assert (x832 x1230))
(assert (= x1011 (x202 (x452 x1011))))
(assert (x478 x1224 x359 x1352 x936))
(assert (x832 x1257))
(assert (x832 x580))
(assert (=> (<= x863 10000) (= (x452 x863) (x31 x863))))
(assert (x1260 (- x362 x441)))
(assert (= (ite (and (not x549) (not x1089) x998 (not x246) x638) (x178 x515) (ite (and (not x549) x998 (not x1089) (not x638)) (x17 x515) (ite (and x998 (not x1089) x549) (x17 x515) (x438 x515)))) (x173 x515)))
(assert (= x444 (=> (and (= x1035 (x1071 (x452 x535))) (= x135 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x439 (x452 274184521717934524641157099916833587206)))) (= (x389 x140) x653) (= (> x653 0) x616) x135 (not (= x380 0)) (or (not x616) (and (= x1116 (x389 x900)) (< 0 x1116) x616 (not (or (and (> 32 x299) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x299))) (> x299 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x53 x1116) (= (x389 x140) x299) (= x900 (x177 (+ x140 32))) (= x53 (ite x221 1 0)) (= (= x1116 0) x144) (= (not x144) x221))) (= x798 (= 0 x1179)) (not x51) (or (and (= 96 x140) x798) (and (= (x177 (+ 96 x609)) x393) (not x798) (= x164 x140))) (= x51 (< 2 x696))) x977)))
(assert (x478 x362 x359 x936 x1352))
(assert (x478 x1352 x936 x359 x1224))
(assert (x1038 x113 x1304))
(assert (= (x17 x515) (ite (= x1375 x515) x449 (x976 x515))))
(assert (x832 x1162))
(assert (x1384 x1120 x936 x362 x359))
(assert (= x454 x799))
(assert (= (ite (= x68 x652) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x784 x68)) (x1223 x68)))
(assert (x49 x359 (- x1224 x912)))
(assert (x832 x240))
(assert (x832 x872))
(assert (x1384 x936 x1352 x108 x857))
(assert (= (x723 x515) (ite (= x515 x267) x1363 (x1223 x515))))
(assert (= x1317 (x202 (x452 x1317))))
(assert (x832 x965))
(assert (x1260 x84))
(assert (x1038 x1264 x1189))
(assert (x478 x1224 x359 x84 x254))
(assert (x832 x948))
(assert (x832 x863))
(assert (= (ite (and x481 x998) (x546 x809) (x1039 x809)) (x1005 x809)))
(assert (x168 x474))
(assert (= (ite (= x345 x850) x185 (x950 x850)) (x1190 x850)))
(assert (x832 x1278))
(assert (= x930 (or (and x761 x120) (and x423 x1333))))
(assert (x168 x32))
(assert (x832 x191))
(assert (x832 x908))
(assert (x478 x1352 x936 x936 x1120))
(assert (x832 x1382))
(assert (x168 x471))
(assert (x1263 x837 x494))
(assert (x1260 (- x1177 x1352)))
(assert (x478 x1120 x936 x1177 x912))
(assert (x832 x463))
(assert (= (x1190 x900) (ite (= x900 x345) x185 (x950 x900))))
(assert (x1384 x359 x1224 x362 x359))
(assert (= (ite (and x1306 (not x806) x1110) (x590 x140) (x319 x140)) (x1007 x140)))
(assert (x832 x646))
(assert (=> (<= x1336 10000) (= (x452 x1336) (x31 x1336))))
(assert (x478 x441 x420 x936 x1120))
(assert (= (x1069 x140) (ite (= x140 x632) x913 (x352 x140))))
(assert (=> (>= 10000 x591) (= (x31 x591) (x452 x591))))
(assert (x832 x914))
(assert (= (x202 (x31 1986467848)) 1986467848))
(assert (= (ite (and (not x246) (not x549) (not x1089) x638 x998) (x465 x517) (ite (and (not x1089) (not x549) x998 (not x638)) (x248 x517) (ite (and (not x1089) x998 x549) (x248 x517) (x496 x517)))) (x610 x517)))
(assert (x478 x420 x441 x1177 x912))
(assert (= (x202 (x452 x907)) x907))
(assert (x1260 x420))
(assert (= (x202 (x452 x45)) x45))
(assert (x1260 (- x108 x1177)))
(assert (x832 x434))
(assert (x49 x359 (- x362 x84)))
(assert (x1260 (- x912 x84)))
(assert (= (x347 x264) 0))
(assert (x478 x912 x1177 x359 x362))
(assert (x478 x108 x857 x936 x1352))
(assert (x478 x936 x1352 x359 x362))
(assert (x49 x441 (- x420 x857)))
(assert (x832 x1224))
(assert (x832 x323))
(assert (= (x452 274184521717934524641157099916833587206) (x31 274184521717934524641157099916833587206)))
(assert (x832 x604))
(assert (=> (<= x303 10000) (= (x452 x303) (x31 x303))))
(assert (= (ite (and (not x1089) x794 x998) (x1030 x972) (ite (and x196 (not x1089) x998 (not x794)) (x1030 x972) (x1275 x972))) (x206 x972)))
(assert (x478 x359 x362 x441 x420))
(assert (x168 x394))
(assert (x832 x1246))
(assert (x1260 (- x1120 x441)))
(assert (x168 x233))
(assert (x832 x471))
(assert (x478 x1352 x936 x857 x108))
(assert (x832 x1095))
(assert (= (x202 (x452 x1342)) x1342))
(assert (= (x202 (x31 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x478 x254 x84 x1120 x936))
(assert (= (x202 (x452 x544)) x544))
(assert (x1384 x1177 x912 x441 x420))
(assert (x478 x936 x1352 x420 x441))
(assert (x168 x1227))
(assert (= (x723 x1305) (ite (= x1305 x267) x1363 (x1223 x1305))))
(assert (=> (<= x561 10000) (= (x31 x561) (x452 x561))))
(assert (= (x202 (x452 x802)) x802))
(assert (x168 x1250))
(assert (x832 x456))
(assert (=> (<= x1011 10000) (= (x452 x1011) (x31 x1011))))
(assert (x832 x437))
(assert (= (x202 (x452 x1131)) x1131))
(assert (x1260 (- x108 x441)))
(assert (=> (>= 10000 x719) (= (x31 x719) (x452 x719))))
(assert (x1260 (- x84 x1224)))
(assert (=> (<= x1095 10000) (= (x452 x1095) (x31 x1095))))
(assert (x832 x870))
(assert (= (ite (= x374 x25) x297 (x17 x25)) (x178 x25)))
(assert (= (ite (and x720 x581) (x312 x140) (x805 x140)) (x1173 x140)))
(assert (x478 x1224 x359 x936 x1120))
(assert (x832 x358))
(assert (x1384 x359 x362 x84 x254))
(assert (= x430 x67))
(assert (x832 x88))
(assert (x832 x1344))
(assert (= (ite (= x1375 x208) x449 (x976 x208)) (x17 x208)))
(assert (x49 x359 (- x1224 x1352)))
(assert (= 87118632 (x202 (x31 87118632))))
(assert (= x357 (x570 x28)))
(assert (x478 x108 x857 x359 x1224))
(assert (x832 x505))
(assert (x832 x84))
(assert (x832 x653))
(assert (x832 x1268))
(assert (= (and x1306 x1110) x120))
(assert (=> (>= 10000 x516) (= (x452 x516) (x31 x516))))
(assert (x832 x1336))
(assert (x1260 (- x108 x1120)))
(assert (x1260 (- x936 x1120)))
(assert (x832 x1349))
(assert (x478 x359 x1224 x254 x84))
(assert (x478 x84 x254 x1120 x936))
(assert (x168 x1103))
(assert (x1260 (- x1177 x254)))
(assert (x832 x756))
(assert (x1384 x857 x108 x1120 x936))
(assert (x832 x1158))
(assert (x168 x1356))
(assert (x832 x691))
(assert (= x117 (=> (and (= (x1293 (x452 x728) x813 0) x39) (not (= x689 2690754053)) (not (< x689 2293535753)) (= (x489 (x452 274184521717934524641157099916833587206)) x992) (not (= 2764855426 x689)) (<= 0 x1166) (= x689 2798343961) (= x234 x1166) (= x813 (x1293 (x452 x109) (x31 5) 0)) (not (= x689 2743102681)) (not (> 2690754053 x689)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1166) (= (x427 x39) x1166) (< x689 2960351575) (<= x728 1461501637330902918203684832716283019655932542975) (> x992 0)) (=> (and (= x36 x1093) (= x385 x1252) (= x383 x558) (= x234 x1192)) x261))))
(assert (= (ite (and x481 x998) (x546 x600) (x1039 x600)) (x1005 x600)))
(assert (= (ite (and x998 (not x549) (not x1089) x638 (not x246)) (x465 x1355) (ite (and (not x638) (not x549) (not x1089) x998) (x248 x1355) (ite (and (not x1089) x549 x998) (x248 x1355) (x496 x1355)))) (x610 x1355)))
(assert (x832 x1206))
(assert (x832 x1315))
(assert (x1260 (- x362 x84)))
(assert (x832 x203))
(assert (x832 x359))
(assert (= (x202 (x452 x516)) x516))
(assert (= x1240 x714))
(assert (x1260 (- x441 x1120)))
(assert (x1384 x362 x359 x108 x857))
(assert (= 1968616202 (x202 (x31 1968616202))))
(assert (x832 x132))
(assert (=> (<= x1279 10000) (= (x31 x1279) (x452 x1279))))
(assert (=> (>= 10000 x271) (= (x452 x271) (x31 x271))))
(assert (= (ite (= x515 x578) x614 (x1190 x515)) (x352 x515)))
(assert (x1260 (- x108 x912)))
(assert (x832 x649))
(assert (= (x202 (x452 x230)) x230))
(assert (x168 x15))
(assert (= (ite (= x1375 x809) x449 (x976 x809)) (x17 x809)))
(assert (= (x452 2512682246) (x31 2512682246)))
(assert (x832 x621))
(assert (x168 x719))
(assert (= (x31 1461501637330902918203684832716283019655932542975) (x452 1461501637330902918203684832716283019655932542975)))
(assert (x1260 (- x441 x1352)))
(assert (= (x950 x562) (ite (= x844 x562) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x562))))
(assert (x832 x560))
(assert (x832 x629))
(assert (x49 x84 (- x254 x359)))
(assert (x478 x1177 x912 x1120 x936))
(assert (x832 x435))
(assert (= (x202 (x452 x963)) x963))
(assert (x478 x420 x441 x1120 x936))
(assert (x1260 (- x441 x84)))
(assert (x1384 x420 x441 x1352 x936))
(assert (x832 x1054))
(assert (x1384 x420 x441 x108 x857))
(assert (x49 x441 (- x420 x1224)))
(assert (x832 x393))
(assert (= (x590 x140) (ite (and x1028 (not x226) x1110 x967 x1306 x567) (x171 x140) (ite (and x967 x1028 x1110 x1306 (not x567)) (x680 x140) (ite (and x967 x1110 (not x1028) x1306) (x723 x140) (ite (and x1306 (not x967) x1110) (x1223 x140) (x974 x140)))))))
(assert (= (x950 x140) (ite (= x844 x140) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x140))))
(assert (x1260 (- x912 x1224)))
(assert (x832 x526))
(assert (x1260 (- x912 x1120)))
(assert (x832 x94))
(assert (= (ite (= x578 x850) x614 (x1190 x850)) (x352 x850)))
(assert (= x692 (x202 (x452 x692))))
(assert (=> (>= 10000 x129) (= (x31 x129) (x452 x129))))
(assert (x832 x115))
(assert (x168 x1269))
(assert (= (x31 2690754053) (x452 2690754053)))
(assert (= (=> (and (<= x271 1461501637330902918203684832716283019655932542975) (> 2960351575 x239) (not (= 2690754053 x239)) (>= 1461501637330902918203684832716283019655932542975 x858) (not (> 2690754053 x239)) (= x885 (x1293 (x452 x858) x791 0)) (<= 0 x1133) (= x791 (x1293 (x452 x673) (x31 3) 0)) (= x541 (x1293 (x452 x271) x885 0)) (= 2743102681 x239) (< 0 x1242) (= x1242 (x489 (x452 274184521717934524641157099916833587206))) (= (x402 x541) x1133) (not (< x239 2293535753)) (= x1133 x1012) (<= x1133 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x36 x1378) (= x737 x558) (= x236 x1012) (= x595 (<= x236 x58))) x469)) x747))
(assert (x478 x936 x1120 x441 x420))
(assert (x49 x1224 (- x359 x362)))
(assert (x832 x397))
(assert (x832 x660))
(assert (x1260 x441))
(assert (= (x202 (x31 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (= (ite (= x1375 x547) x449 (x976 x547)) (x17 x547)))
(assert (x832 x1154))
(assert (x1384 x359 x362 x1352 x936))
(assert (x478 x1224 x359 x1177 x912))
(assert (= x1287 (x202 (x452 x1287))))
(assert (x1260 x108))
(assert (=> (<= x1353 10000) (= (x452 x1353) (x31 x1353))))
(assert (x832 x807))
(assert (x1260 (- x1352 x912)))
(assert (x218 x933))
(assert (x1384 x936 x1120 x441 x420))
(assert (x1260 (- x1120 x857)))
(assert (x1260 (- x362 x108)))
(assert (x478 x420 x441 x359 x362))
(assert (x1260 (- x936 x1177)))
(assert (= (x546 x27) (ite (= x874 x27) x696 (x664 x27))))
(assert (x832 x234))
(assert (x1260 x912))
(assert (x478 x936 x1120 x420 x441))
(assert (x832 x45))
(assert (x1384 x912 x1177 x441 x420))
(assert (=> (>= 10000 x443) (= (x31 x443) (x452 x443))))
(assert (x478 x359 x362 x1224 x359))
(assert (x1384 x420 x441 x362 x359))
(assert (x1384 x359 x362 x912 x1177))
(assert (x1384 x1352 x936 x441 x420))
(assert (x168 x1180))
(assert (x478 x108 x857 x359 x362))
(assert (=> (<= x642 10000) (= (x31 x642) (x452 x642))))
(assert (x1260 (- x857 x1352)))
(assert (x49 x108 (- x857 x254)))
(assert (x1384 x84 x254 x362 x359))
(assert (x478 x254 x84 x362 x359))
(assert (= (x31 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x452 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x168 x1131))
(assert (=> (<= x899 10000) (= (x31 x899) (x452 x899))))
(assert (x832 x165))
(assert (= x764 (x202 (x452 x764))))
(assert (=> (>= 10000 x1099) (= (x31 x1099) (x452 x1099))))
(assert (= (x486 x517) (ite (= x517 x1364) x127 (x610 x517))))
(assert (x1384 x359 x1224 x108 x857))
(assert (x832 x335))
(assert (x478 x359 x362 x857 x108))
(assert (= (x546 x419) (ite (= x419 x874) x696 (x664 x419))))
(assert (x832 x37))
(assert (= (x546 x208) (ite (= x208 x874) x696 (x664 x208))))
(assert (x1384 x1352 x936 x1120 x936))
(assert (x1384 x359 x362 x108 x857))
(assert (x832 x1252))
(assert (x478 x254 x84 x1177 x912))
(assert (x832 x511))
(assert (x832 x390))
(assert (x1384 x359 x362 x1224 x359))
(assert (=> (>= 10000 x80) (= (x452 x80) (x31 x80))))
(assert (x832 x524))
(assert (= (x1150 x68) (ite (and x819 x932 x1251 x184 x1009 (not x256)) (x1069 x68) (ite (and x184 x1251 (not x932) x1009 x819) (x352 x68) (ite (and (not x819) x184 x1251 x1009) (x1190 x68) (ite (and x1251 (not x1009) x184) (x950 x68) (x887 x68)))))))
(assert (= (ite (and x865 x998 (not x1089)) (x427 x7) (x1340 x7)) (x827 x7)))
(assert (x49 x1352 x936))
(assert (x832 x32))
(assert (x832 x309))
(assert (= (x202 (x452 x189)) x189))
(assert (x832 x764))
(assert (x49 x1120 (- x936 x359)))
(assert (= (x202 (x452 x561)) x561))
(assert (=> (>= 10000 x283) (= (x452 x283) (x31 x283))))
(assert (= (x202 (x452 x450)) x450))
(assert (= x443 (x202 (x452 x443))))
(assert (x832 x514))
(assert (x1383 x340))
(assert (x832 x1045))
(assert (x832 x696))
(assert (x1384 x857 x108 x362 x359))
(assert (x168 x1378))
(assert (=> (<= x1347 10000) (= (x452 x1347) (x31 x1347))))
(assert (x168 x1122))
(assert (x49 x1177 (- x912 x362)))
(assert (x832 x1043))
(assert (x49 x359 (- x1224 x84)))
(assert (= (ite (and x638 (not x246) (not x549) x998 (not x1089)) (x178 x547) (ite (and x998 (not x549) (not x1089) (not x638)) (x17 x547) (ite (and (not x1089) x998 x549) (x17 x547) (x438 x547)))) (x173 x547)))
(assert (= (ite (= x1375 x874) x449 (x976 x874)) (x17 x874)))
(assert (x49 x936 (- x1120 x359)))
(assert (x218 x1124))
(assert (= (x465 x597) (ite (= x597 x26) x134 (x248 x597))))
(assert (x832 x228))
(assert (x49 x857 (- x108 x84)))
(assert (x478 x420 x441 x108 x857))
(assert (x832 x913))
(assert (x1260 (- x936 x912)))
(assert (x49 x1177 (- x912 x108)))
(assert (x478 x359 x362 x84 x254))
(assert (x1260 (- x108 x1352)))
(assert (x49 x359 (- x362 x359)))
(assert (x832 x528))
(assert (= (x173 x900) (ite (and x638 (not x549) (not x246) (not x1089) x998) (x178 x900) (ite (and x998 (not x1089) (not x638) (not x549)) (x17 x900) (ite (and x998 (not x1089) x549) (x17 x900) (x438 x900))))))
(assert (= (ite (= x435 x208) x951 (x570 x208)) (x553 x208)))
(assert (x49 x936 (- x1120 x936)))
(assert (= (x202 (x452 x719)) x719))
(assert (x478 x912 x1177 x857 x108))
(assert (x1260 (- x441 x936)))
(assert (=> (<= x32 10000) (= (x452 x32) (x31 x32))))
(assert (= (x178 x140) (ite (= x140 x374) x297 (x17 x140))))
(assert (x1260 (- x441 x362)))
(assert (x1384 x936 x1120 x362 x359))
(assert (x832 x635))
(assert (x218 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (=> (and (<= x1317 1461501637330902918203684832716283019655932542975) (>= x56 0) (= x56 x1230) (= x843 (x489 (x452 274184521717934524641157099916833587206))) (> x843 0) (> 2690754053 x437) (not (= x437 2293535753)) (not (= x437 2418364589)) (< x437 2960351575) (<= x914 1461501637330902918203684832716283019655932542975) (not (> 2293535753 x437)) (= x1002 (x1293 (x452 x914) x125 0)) (= (x248 x1345) x56) (= x437 2532887486) (<= x56 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1293 (x452 x1142) x1237 0) x125) (not (= x437 2512682246)) (>= 1461501637330902918203684832716283019655932542975 x1142) (= x1237 (x1293 (x452 x899) (x31 4) 0)) (= (x1293 (x452 x1317) x1002 0) x1345)) (=> (and (= x385 x1250) (= (<= x823 x411) x201) (= x1230 x823) (= x558 x582) (= (and x1147 x201) x339) (= x36 x719)) x152)) x336))
(assert (x832 x658))
(assert (x168 x963))
(assert (= x1123 x998))
(assert (x832 x1085))
(assert (x1260 (- x254 x912)))
(assert (x832 x752))
(assert (= (ite (= x844 x419) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x419)) (x950 x419)))
(assert (x832 x884))
(assert (x832 x923))
(assert (= (ite (and x184 x1251 (not x894)) (x1150 x850) (x1185 x850)) (x1354 x850)))
(assert (x832 x1064))
(assert (= (x178 x669) (ite (= x374 x669) x297 (x17 x669))))
(assert (x832 x1068))
(assert (=> (<= x1269 10000) (= (x452 x1269) (x31 x1269))))
(assert (x168 x1336))
(assert (= (ite (= x900 x874) x696 (x664 x900)) (x546 x900)))
(assert (= (+ (x202 x994) 1) (x202 (x348 x994 1))))
(assert (x832 x1032))
(assert (x49 x1177 (- x912 x1352)))
(assert (= (x610 x624) (ite (and x638 (not x246) (not x1089) (not x549) x998) (x465 x624) (ite (and (not x549) x998 (not x1089) (not x638)) (x248 x624) (ite (and x998 x549 (not x1089)) (x248 x624) (x496 x624))))))
(assert (x1260 (- x420 x936)))
(assert (x478 x420 x441 x936 x1120))
(assert (x832 x71))
(assert (x168 x240))
(assert (x1260 (- x1120 x362)))
(assert (x478 x936 x1352 x936 x1120))
(assert (x49 x359 (- x1224 x254)))
(assert (x1260 (- x359 x1352)))
(assert (x478 x1120 x936 x420 x441))
(assert (x1384 x1120 x936 x1352 x936))
(assert (x832 x97))
(assert (= (ite (= x208 x632) x913 (x352 x208)) (x1069 x208)))
(assert (x49 x254 (- x84 x936)))
(assert (x49 x420 (- x441 x84)))
(assert (x832 x642))
(assert (=> (<= x394 10000) (= (x452 x394) (x31 x394))))
(assert (x478 x857 x108 x254 x84))
(assert (x49 x857 (- x108 x1120)))
(assert (x1074 x251 x235))
(assert (x168 x1287))
(assert (x832 x844))
(assert (x832 x56))
(assert (x832 x737))
(assert (x49 x359 (- x362 x1224)))
(assert (= (x570 x419) (ite (= x419 x28) x357 (x1201 x419))))
(assert (= (=> (and (= x48 (x1293 (x452 x1093) (x31 3) 0)) (= x892 (x1293 (x452 x1252) x1062 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x804) (<= 0 x804) (= (x1030 x892) x804) (> 2960351575 x704) (not (> 2690754053 x704)) (>= 1461501637330902918203684832716283019655932542975 x383) (not (< x704 2293535753)) (not (= x704 2690754053)) (>= 1461501637330902918203684832716283019655932542975 x1252) (= x704 2743102681) (= x1062 (x1293 (x452 x383) x48 0)) (= (x489 (x452 274184521717934524641157099916833587206)) x44) (< 0 x44) (= x775 x804)) (=> (and (= x981 x558) (= x867 (>= x1192 x688)) (= x36 x569) (= x688 x775)) x754)) x261))
(assert (x832 x933))
(assert (x832 x677))
(assert (x832 x630))
(assert (x1384 x1120 x936 x912 x1177))
(assert (x832 x1317))
(assert (x1384 x857 x108 x441 x420))
(assert (x478 x1224 x359 x254 x84))
(assert (x832 x355))
(assert (= x1344 (x202 (x452 x1344))))
(assert (x478 x1352 x936 x108 x857))
(assert (x832 x66))
(assert (x832 x513))
(assert (= (x546 x1305) (ite (= x874 x1305) x696 (x664 x1305))))
(assert (x832 x652))
(assert (x1384 x1177 x912 x1120 x936))
(assert (x1260 (- x254 x441)))
(assert (x1384 x362 x359 x441 x420))
(assert (x1260 (- x857 x359)))
(assert (x1260 (- x441 x912)))
(assert (x832 x1177))
(assert (x1384 x912 x1177 x1352 x936))
(assert (x832 x329))
(assert (x832 x1092))
(assert (x1384 x254 x84 x441 x420))
(assert (x478 x936 x1352 x1224 x359))
(assert (x1260 (- x936 x108)))
(assert (=> (<= x1180 10000) (= (x452 x1180) (x31 x1180))))
(assert (= (x347 224) 0))
(assert (x49 x420 (- x441 x1177)))
(assert (x49 x362 (- x359 x108)))
(assert (x832 x703))
(assert (x832 x686))
(assert (x218 x1304))
(assert (x478 x1120 x936 x857 x108))
(assert (x832 x279))
(assert (= (ite (= x1375 x630) x449 (x976 x630)) (x17 x630)))
(assert (= (x202 (x452 x433)) x433))
(assert (x832 x786))
(assert (= (x1053 x1081) (ite (and x865 x998 (not x1089)) (x1348 x1081) (x22 x1081))))
(assert (= (ite (= x632 x809) x913 (x352 x809)) (x1069 x809)))
(assert (x1260 (- x1352 x857)))
(assert (x832 x1183))
(assert (x832 x374))
(assert (= x1239 (x202 (x452 x1239))))
(assert (=> (<= x309 10000) (= (x31 x309) (x452 x309))))
(assert (x832 x674))
(assert (= (ite (= x28 x140) x357 (x1201 x140)) (x570 x140)))
(assert (x832 x25))
(assert (x478 x359 x362 x1352 x936))
(assert (x832 x1082))
(assert (x1260 1000000000000000000))
(assert (x832 x910))
(assert (x832 x20))
(assert (= (x202 (x31 911411945)) 911411945))
(assert (x1241 x933 x124))
(assert (x1384 x936 x1352 x84 x254))
(assert (x832 x445))
(assert (x478 x359 x362 x936 x1352))
(assert (x49 x936 (- x1352 x441)))
(assert (x478 x1177 x912 x1224 x359))
(assert (x832 x1287))
(assert (x49 x1352 (- x936 x1177)))
(assert (= 274184521717934524641157099916833587214 (x202 (x452 274184521717934524641157099916833587214))))
(assert (x832 x361))
(assert (x1263 x219 x896))
(assert (x49 x84 (- x254 x857)))
(assert (x832 x566))
(assert (x832 x1356))
(assert (x832 x728))
(assert (=> (<= x458 10000) (= (x452 x458) (x31 x458))))
(assert (= x73 x288))
(assert (x1260 (- x1177 x362)))
(assert (x832 x1012))
(assert (x49 x84 x254))
(assert (x168 x132))
(assert (x832 x845))
(assert (x832 x424))
(assert (= (x1053 x711) (ite (and x865 (not x1089) x998) (x1348 x711) (x22 x711))))
(assert (x832 x380))
(assert (x1260 (- x912 x359)))
(assert (x1260 (- x420 x857)))
(assert (= (x452 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x31 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x49 x254 (- x84 x912)))
(assert (x1384 x84 x254 x108 x857))
(assert (x1260 (- x857 x1224)))
(assert (x168 x1011))
(assert (x49 x912 (- x1177 x441)))
(assert (= x271 (x202 (x452 x271))))
(assert (x832 x1105))
(assert (x168 x1239))
(assert (x832 x1041))
(assert (= (x1005 x1305) (ite (and x481 x998) (x546 x1305) (x1039 x1305))))
(assert (x832 x316))
(assert (=> (>= 10000 x535) (= (x452 x535) (x31 x535))))
(assert (x168 274184521717934524641157099916833587206))
(assert (=> (<= x963 10000) (= (x31 x963) (x452 x963))))
(assert (= (x202 (x31 2960351575)) 2960351575))
(assert (x832 x21))
(assert (x832 x823))
(assert (x168 274184521717934524641157099916833587214))
(assert (x1384 x1224 x359 x441 x420))
(assert (=> (>= 10000 x1052) (= (x31 x1052) (x452 x1052))))
(assert (= x291 (x202 (x452 x291))))
(assert (x832 x824))
(assert (x1260 x1352))
(assert (x832 x632))
(assert (x1384 x857 x108 x912 x1177))
(assert (x49 x362 (- x359 x857)))
(assert (x1260 (- x1352 x1120)))
(assert (x168 x727))
(assert (x832 x80))
(assert (x832 x373))
(assert (=> (>= 10000 x640) (= (x452 x640) (x31 x640))))
(assert (x1260 (- x936 x441)))
(assert (x832 x1133))
(assert (x168 x781))
(assert (= (x553 x264) (ite (= x264 x435) x951 (x570 x264))))
(assert (= (x465 x1355) (ite (= x26 x1355) x134 (x248 x1355))))
(assert (x832 x1352))
(assert (x478 x936 x1352 x84 x254))
(assert (x832 x1171))
(assert (= x1279 (x202 (x452 x1279))))
(assert (x478 x1177 x912 x1352 x936))
(assert (= (x1354 x900) (ite (and x1251 x184 (not x894)) (x1150 x900) (x1185 x900))))
(assert (= (ite (= x669 x1375) x449 (x976 x669)) (x17 x669)))
(assert (x49 x857 (- x108 x254)))
(assert (x832 x367))
(assert (x832 x1056))
(assert (x832 x141))
(assert (= (ite (= x844 x208) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x208)) (x950 x208)))
(assert (x1263 x1175 x440))
(assert (= (x465 x508) (ite (= x26 x508) x134 (x248 x508))))
(assert (x832 x782))
(assert (x1310 x583 1000000000000000000))
(assert (=> (<= x1378 10000) (= (x31 x1378) (x452 x1378))))
(assert (x832 x451))
(assert (= (x352 x900) (ite (= x900 x578) x614 (x1190 x900))))
(assert (x478 x362 x359 x936 x1120))
(assert (x832 x1142))
(assert (x832 x1204))
(assert (= (ite (and x998 x481) (x546 x140) (x1039 x140)) (x1005 x140)))
(assert (x1384 x84 x254 x1352 x936))
(assert (= (x202 (x31 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x168 x64))
(assert (x832 x608))
(assert (x478 x441 x420 x362 x359))
(assert (x832 x443))
(assert (= (x1069 x68) (ite (= x632 x68) x913 (x352 x68))))
(assert (x49 x359 (- x362 x108)))
(assert (= (x202 (x452 x1163)) x1163))
(assert (x1384 x1224 x359 x1352 x936))
(assert (x832 x934))
(assert (x832 x1112))
(assert (x168 x871))
(assert (x832 x1365))
(assert (x1384 x359 x1224 x1120 x936))
(assert (x1260 (- x254 x420)))
(assert (= (ite (= x345 x68) x185 (x950 x68)) (x1190 x68)))
(assert (x49 x936 (- x1120 x420)))
(assert (= (x202 (x452 x1044)) x1044))
(assert (= x1361 (=> (= (= 274184521717934524641157099916833587214 x1365) x559) (and (=> (and (= x781 x16) (= x107 (x78 (- x392 x1368))) (= x445 x1212) (not (< x860 4)) (not x1191) (= x540 274184521717934524641157099916833587206) (= x1008 x937) (= x466 x860) (= (x41 x849) x392) (= (x1293 (x452 x781) (x31 1) 0) x1049) (= 68 x860) (= x545 274184521717934524641157099916833587206) (not (= 1889567281 x730)) (= x176 (>= (+ x937 x445) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1368 x390) (= x740 1) x559 (<= x781 1461501637330902918203684832716283019655932542975) (= (> x445 x392) x492) (<= x937 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x937 0) (not x1316) (> x921 0) (= (x5 x1049) x937) (= (x489 (x452 274184521717934524641157099916833587214)) x921) (= x730 2835717307) (not (= 826074471 x730)) (<= x392 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x834 (x1293 (x452 274184521717934524641157099916833587206) (x31 1) 0)) (< (+ x445 x937) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x593 (x1293 (x452 x781) (x31 1) 0)) (not x176) (= x781 x621) (not x492) (= x1191 (or (and (> 64 x355) (= (<= x355 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x355))) (= (x1293 (x452 274184521717934524641157099916833587206) (x31 1) 0) x849) (= (+ x1212 x1008) x700) (not (= x730 649617121)) (not (< x730 649617121)) (= x167 32) (= x1368 x445) (>= x392 0) (= x422 x693) (= (> x1368 x392) x1316) (= x355 (x78 (- x860 4))) (not (= x730 2514000705)) (= x1225 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x521) (=> (not x559) x1129)))))
(assert (x832 x362))
(assert (x49 x359 (- x362 x1352)))
(assert (x832 x291))
(assert (x832 x1004))
(assert (x832 x957))
(assert (x832 x419))
(assert (= x1314 (x202 (x452 x1314))))
(assert (x49 x254 (- x84 x108)))
(assert (x49 x108 (- x857 x1352)))
(assert (= (x202 (x452 x383)) x383))
(assert (x1260 (- x936 x857)))
(assert (x1260 (- x359 x254)))
(assert (x832 x392))
(assert (=> (>= 10000 x370) (= (x31 x370) (x452 x370))))
(assert (x49 x108 (- x857 x1177)))
(assert (= 2514000705 (x202 (x31 2514000705))))
(assert (x832 x862))
(assert (x832 x772))
(assert (x168 x673))
(assert (x832 x1175))
(assert (= (ite (and (not x246) (not x549) x638 x998 (not x1089)) (x178 x264) (ite (and x998 (not x549) (not x1089) (not x638)) (x17 x264) (ite (and x998 x549 (not x1089)) (x17 x264) (x438 x264)))) (x173 x264)))
(assert (x1260 (- x912 x441)))
(assert (= (x31 2293535753) (x452 2293535753)))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x202 (x31 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= (and x720 (not x581)) x563))
(assert (x832 x108))
(assert (x832 x11))
(assert (x478 x857 x108 x1177 x912))
(assert (x1260 (- x359 x84)))
(assert (x1260 (- x1224 x420)))
(assert (x832 x1088))
(assert (x832 x765))
(assert (= (=> (and (= 2798343961 x1056) (<= x1162 1461501637330902918203684832716283019655932542975) (not (> 2293535753 x1056)) (not (= x1056 2743102681)) (not (= x1056 2690754053)) (>= x1051 0) (not (< x1056 2690754053)) (< x1056 2960351575) (= x7 (x1293 (x452 x1162) x588 0)) (> x382 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1051) (= (x489 (x452 274184521717934524641157099916833587206)) x382) (= x238 x1051) (= x588 (x1293 (x452 x1131) (x31 5) 0)) (= (x1329 x7) x1051) (not (= 2764855426 x1056))) (=> (and (= x673 x36) (= x385 x271) (= x558 x858) (= x238 x58)) x747)) x538))
(assert (x168 x1163))
(assert (x168 x981))
(assert (= (=> (and (= (x162 (x452 x535)) x1171) x790 (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1253 (x452 x535))) x681) (= (= 274184521717934524641157099916833587218 x535) x761) (= (>= x151 0) x550) (= (< x1171 115792089237316195423570985008687907853269984665640564039457584007913129639936) x790) (= x577 x833) x550 (= x151 (x162 (x452 274184521717934524641157099916833587206))) x681 (= (x162 (x452 274184521717934524641157099916833587206)) x838) (= x886 (x1253 (x452 x535)))) (and (=> (and (<= 0 x421) (= x1097 x1075) (= x302 x1373) (= x426 x851) (= (x1169 x1148) x960) (<= x960 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x543 (> x302 x421)) (not x983) (not x543) (<= x421 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x698 x939) x421) (= x1148 (x1293 (x452 x1075) (x31 1) 0)) (= x369 (+ x1373 x648)) (= 1 x380) (= x833 x1079) (= (or (> x1204 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1204) (= (<= x1204 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x294) (>= 1461501637330902918203684832716283019655932542975 x1075) (= x1259 x367) (= x958 (x489 (x452 274184521717934524641157099916833587218))) (= x648 x960) (> x958 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x302 x960)) (not (= x286 649617121)) (not (< x286 649617121)) (= x1179 32) (= (x1293 (x452 274184521717934524641157099916833587206) (x31 1) 0) x939) (= x1312 x1075) (= (> x426 x421) x983) (= x302 x426) (not x294) (not (= x286 1889567281)) (not (> 4 x1079)) x761 (= x286 2835717307) (>= x960 0) (= (x78 (- x1079 4)) x1204) (= x1218 (x78 (- x421 x426))) (= x276 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not x1067) (= x1079 68) (not (= 2514000705 x286)) (= (x1293 (x452 274184521717934524641157099916833587206) (x31 1) 0) x702) (= x375 274184521717934524641157099916833587206) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x960 x302)) x1067) (= x1328 274184521717934524641157099916833587206) (not (= 826074471 x286))) x444) (=> (not x761) x522))) x501))
(assert (= x1021 (x202 (x452 x1021))))
(assert (= (ite (and x865 x998 (not x1089)) (x427 x241) (x1340 x241)) (x827 x241)))
(assert (x49 x936 (- x1120 x441)))
(assert (x1260 (- x84 x420)))
(assert (x832 x1120))
(assert (x832 x736))
(assert (= x303 (x202 (x452 x303))))
(assert (=> (>= 10000 x560) (= (x452 x560) (x31 x560))))
(assert (x1260 (- x1352 x420)))
(assert (x49 x359 (- x1224 x1120)))
(assert (= (x1173 x874) (ite (and x581 x720) (x312 x874) (x805 x874))))
(assert (= (x202 (x31 2835717307)) 2835717307))
(assert (x49 x1177 (- x912 x359)))
(assert (x1260 (- x441 x254)))
(assert (x49 x1352 (- x936 x857)))
(assert (x1260 (- x1352 x359)))
(assert (x218 x113))
(assert (x218 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1220 1000000000000000000 x280))
(assert (= 826074471 (x202 (x31 826074471))))
(assert (x832 x133))
(assert (x832 x606))
(assert (x49 x441 (- x420 x359)))
(assert (= (x570 x515) (ite (= x28 x515) x357 (x1201 x515))))
(assert (x832 x282))
(assert (= (x31 1986467848) (x452 1986467848)))
(assert (x1260 (- x84 x359)))
(assert (x832 x661))
(assert (= (x1277 x142) (ite (and x998 (not x1089) x794) (x1332 x142) (ite (and (not x794) x998 x196 (not x1089)) (x504 x142) (x1256 x142)))))
(assert (x832 x1218))
(assert (x832 x751))
(assert (x49 x441 (- x420 x362)))
(assert (x168 x934))
(assert (=> (<= x1044 10000) (= (x31 x1044) (x452 x1044))))
(assert (x478 x420 x441 x254 x84))
(assert (x832 x1228))
(assert (x832 x631))
(assert (x49 x912 (- x1177 x1120)))
(assert (x832 x740))
(assert (x832 x111))
(assert (x832 x779))
(assert (= (x352 x208) (ite (= x208 x578) x614 (x1190 x208))))
(assert (= (x202 (x348 x190 1)) (+ 1 (x202 x190))))
(assert (x168 x141))
(assert (= x901 (=> (and (= x381 (x1293 (x452 x203) (x31 9) 0)) (not (= x915 87118632)) (= (x489 (x452 274184521717934524641157099916833587206)) x657) (> x657 0) (= 142201243 x915) (= (x1293 (x452 x1144) x1335 0) x625) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x47) (<= 0 x47) (>= 1461501637330902918203684832716283019655932542975 x780) (>= 1461501637330902918203684832716283019655932542975 x1144) (= (x156 x625) x47) (> 468353030 x915) (< x915 911411945) (< x915 2293535753) (not (= x915 69947311)) (= x1228 x47) (= (x1293 (x452 x780) x381 0) x1335)) (=> (and (= x1085 x558) (= x694 0) (= (> x1108 0) x1) (= x354 x36) (= (and x529 x1) x1147) (= x1108 x1228)) x594))))
(assert (x49 x1120 (- x936 x84)))
(assert (x1260 x936))
(assert (x832 x781))
(assert (=> (>= 10000 x732) (= (x452 x732) (x31 x732))))
(assert (x218 x1264))
(assert (x832 x212))
(assert (= x269 (x202 (x452 x269))))
(assert (= (ite (= x335 x850) x729 (x723 x850)) (x680 x850)))
(assert (x478 x1224 x359 x936 x1352))
(assert (x478 x936 x1352 x254 x84))
(assert (=> (>= 10000 x1339) (= (x452 x1339) (x31 x1339))))
(assert (x168 x989))
(assert (x478 x362 x359 x912 x1177))
(assert (x1260 x857))
(assert (x478 x857 x108 x912 x1177))
(assert (x832 x474))
(assert (x478 x359 x362 x254 x84))
(assert (= (x452 2939843472) (x31 2939843472)))
(assert (= (ite (= x900 x267) x1363 (x1223 x900)) (x723 x900)))
(assert (= (x202 (x452 x569)) x569))
(assert (x49 x359 (- x362 x1177)))
(assert (x49 x84 (- x254 x1177)))
(assert (x832 x1285))
(assert (x832 x134))
(assert (x478 x420 x441 x84 x254))
(assert (x168 x1315))
(assert (= (ite (and x581 x720) (x312 x68) (x805 x68)) (x1173 x68)))
(assert (x1260 (- x936 x254)))
(assert (= (x1190 x925) (ite (= x925 x345) x185 (x950 x925))))
(assert (= (x17 x25) (ite (= x25 x1375) x449 (x976 x25))))
(assert (= (x950 x874) (ite (= x874 x844) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x874))))
(assert (x832 x27))
(assert (x832 x64))
(assert (x1384 x936 x1352 x1120 x936))
(assert (x832 x891))
(assert (x832 x1214))
(assert (= (x17 x435) (ite (= x435 x1375) x449 (x976 x435))))
(assert (x832 x633))
(assert (= (x31 2798343961) (x452 2798343961)))
(assert (x1260 (- x912 x420)))
(assert (x478 x857 x108 x362 x359))
(assert (= (x610 x597) (ite (and (not x549) (not x246) x998 x638 (not x1089)) (x465 x597) (ite (and (not x638) (not x1089) (not x549) x998) (x248 x597) (ite (and x998 (not x1089) x549) (x248 x597) (x496 x597))))))
(assert (x832 x600))
(assert (x1384 x441 x420 x108 x857))
(assert (x832 x394))
(assert (x478 x1352 x936 x362 x359))
(assert (x832 x238))
(assert (= (ite (= x140 x345) x185 (x950 x140)) (x1190 x140)))
(assert (= (x546 x630) (ite (= x630 x874) x696 (x664 x630))))
(assert (= (x1150 x850) (ite (and x1251 x819 x1009 (not x256) x184 x932) (x1069 x850) (ite (and x184 x819 (not x932) x1009 x1251) (x352 x850) (ite (and (not x819) x1009 x1251 x184) (x1190 x850) (ite (and x184 (not x1009) x1251) (x950 x850) (x887 x850)))))))
(assert (x168 x552))
(assert (x49 x1120 (- x936 x420)))
(assert (= (ite (and (not x1089) (not x246) (not x549) x998 x638) (x178 x809) (ite (and (not x549) (not x1089) (not x638) x998) (x17 x809) (ite (and x998 (not x1089) x549) (x17 x809) (x438 x809)))) (x173 x809)))
(assert (x832 x988))
(assert (x478 x912 x1177 x420 x441))
(assert (= (x178 x208) (ite (= x208 x374) x297 (x17 x208))))
(assert (=> (>= 10000 x149) (= (x31 x149) (x452 x149))))
(assert (x832 x1060))
(assert (x832 x208))
(assert (= 635128645 (x202 (x31 635128645))))
(assert (= (x1354 x1305) (ite (and x184 x1251 (not x894)) (x1150 x1305) (x1185 x1305))))
(assert (x832 x264))
(assert (x1260 (- x1224 x441)))
(assert (x478 x857 x108 x359 x362))
(assert (= (ite (= x874 x435) x951 (x570 x874)) (x553 x874)))
(assert (x832 x230))
(assert (x1384 x1177 x912 x1224 x359))
(assert (x832 x1037))
(assert (x1260 (- x1224 x1120)))
(assert (x1260 (- x108 x936)))
(assert (x832 x301))
(assert (x49 x362 (- x359 x936)))
(assert (x218 x837))
(assert (x832 x1159))
(assert (x1260 (- x359 x441)))
(assert (x832 x843))
(assert (x1384 x84 x254 x441 x420))
(assert (= (x465 x624) (ite (= x26 x624) x134 (x248 x624))))
(assert (x832 x35))
(assert (= (x202 (x452 x15)) x15))
(assert (x832 x408))
(assert (= x1180 (x202 (x452 x1180))))
(assert (x168 x424))
(assert (= (ite (and x998 (not x549) (not x1089) (not x246) x638) (x178 x925) (ite (and (not x1089) (not x638) x998 (not x549)) (x17 x925) (ite (and (not x1089) x998 x549) (x17 x925) (x438 x925)))) (x173 x925)))
(assert (x832 x488))
(assert (x1384 x84 x254 x1120 x936))
(assert (x1260 (- x1352 x936)))
(assert (x168 x569))
(assert (x49 x857 (- x108 x362)))
(assert (= (x202 (x452 x1343)) x1343))
(assert (= (ite (= x374 x515) x297 (x17 x515)) (x178 x515)))
(assert (x168 x891))
(assert (x49 x1120 (- x936 x254)))
(assert (= (x31 2258409472) (x452 2258409472)))
(assert (x49 x254 (- x84 x1224)))
(assert (x832 x669))
(assert (x49 x1120 (- x936 x441)))
(assert (= (x950 x850) (ite (= x844 x850) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x850))))
(assert (x832 x1122))
(assert (x832 x1328))
(assert (x832 x324))
(assert (x832 x926))
(assert (x832 x431))
(assert (= (x202 (x452 x1151)) x1151))
(assert (= (x1069 x850) (ite (= x632 x850) x913 (x352 x850))))
(assert (x478 x359 x362 x359 x1224))
(assert (x832 x1249))
(assert (x49 x362 (- x359 x254)))
(assert (x832 x561))
(assert (x478 x84 x254 x936 x1352))
(assert (x168 x269))
(assert (x1384 x359 x1224 x441 x420))
(assert (= (ite (= x345 x809) x185 (x950 x809)) (x1190 x809)))
(assert (x49 x441 (- x420 x1352)))
(assert (x832 x727))
(assert (x832 x1247))
(assert (=> (<= x1131 10000) (= (x452 x1131) (x31 x1131))))
(assert (= 2764855426 (x202 (x31 2764855426))))
(assert (= (ite (= x900 x652) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x784 x900)) (x1223 x900)))
(assert (x478 x362 x359 x420 x441))
(assert (x832 x338))
(assert (x478 x857 x108 x441 x420))
(assert (= (ite (and x481 x998) (x546 x630) (x1039 x630)) (x1005 x630)))
(assert (= (x452 142201243) (x31 142201243)))
(assert (x478 x420 x441 x857 x108))
(assert (x49 x254 (- x84 x1177)))
(assert (x1384 x254 x84 x1120 x936))
(assert (x832 x1166))
(assert (x1384 x936 x1120 x84 x254))
(assert (x1260 (- x857 x441)))
(assert (x49 x1352 (- x936 x912)))
(assert (x1384 x1352 x936 x362 x359))
(assert (x168 x458))
(assert (x832 x46))
(assert (x832 x899))
(assert (x49 x1352 (- x936 x1120)))
(assert (x49 x359 (- x362 x441)))
(assert (x478 x936 x1120 x1177 x912))
(assert (= x779 (x202 (x452 x779))))
(assert (x832 x1375))
(assert (= x1289 x72))
(assert (x168 x1019))
(assert (x832 x1023))
(assert (x1260 x280))
(assert (x478 x420 x441 x362 x359))
(assert (x1310 x340 1000000000000000000))
(assert (x1260 (- x1177 x420)))
(assert (x832 x964))
(assert (x832 x951))
(assert (= (x465 x1364) (ite (= x26 x1364) x134 (x248 x1364))))
(assert (= (x202 (x452 x109)) x109))
(assert (= (x202 (x31 604800)) 604800))
(assert (= (x171 x1305) (ite (= x537 x1305) x807 (x680 x1305))))
(assert (x832 x183))
(assert (x1384 x936 x1352 x912 x1177))
(assert (= (x1190 x515) (ite (= x345 x515) x185 (x950 x515))))
(assert (x832 x1140))
(assert (x168 x728))
(assert (x1260 (- x1352 x362)))
(assert (x49 x1224 (- x359 x441)))
(assert (= (x31 1968616202) (x452 1968616202)))
(assert (x478 x1352 x936 x359 x362))
(assert (x478 x1120 x936 x254 x84))
(assert (= (x610 x1364) (ite (and x998 (not x246) (not x1089) x638 (not x549)) (x465 x1364) (ite (and (not x638) x998 (not x1089) (not x549)) (x248 x1364) (ite (and (not x1089) x549 x998) (x248 x1364) (x496 x1364))))))
(assert (x832 x868))
(assert (x832 x14))
(assert (x1384 x84 x254 x1224 x359))
(assert (= (x546 x435) (ite (= x874 x435) x696 (x664 x435))))
(assert (x1384 x1352 x936 x108 x857))
(assert (= x592 (=> (and (= (and x595 x869) x101) (= x869 (<= x1001 x649)) (= x1065 (or (not x391) x101)) (= x169 x1001)) (and (=> (and (= x320 2939843472) (= x560 x385) (= 87118632 x512) (= x1045 x36) (= x558 x45) (= x464 true)) x1301) x1065))))
(assert (= (x202 (x452 x495)) x495))
(assert (x832 x113))
(assert (x1260 (- x1120 x420)))
(assert (= (x465 x517) (ite (= x517 x26) x134 (x248 x517))))
(assert (x478 x936 x1120 x254 x84))
(assert (= (x680 x140) (ite (= x140 x335) x729 (x723 x140))))
(assert (x478 x441 x420 x1120 x936))
(assert (= 274184521717934524641157099916833587218 (x202 (x452 274184521717934524641157099916833587218))))
(assert (x168 x283))
(assert (= (x1190 x208) (ite (= x345 x208) x185 (x950 x208))))
(assert (x1260 (- x420 x108)))
(assert (x49 x1224 (- x359 x1120)))
(assert (= (ite (and x1251 x1009 (not x256) x184 x819 x932) (x1069 x547) (ite (and x1251 (not x932) x1009 x184 x819) (x352 x547) (ite (and x1251 x1009 x184 (not x819)) (x1190 x547) (ite (and (not x1009) x184 x1251) (x950 x547) (x887 x547))))) (x1150 x547)))
(assert (= (x452 1000000000000000000) (x31 1000000000000000000)))
(assert (x832 x837))
(assert (x832 x578))
(assert (x1260 x362))
(assert (= (x31 911411945) (x452 911411945)))
(assert (x1384 x912 x1177 x1120 x936))
(assert (= (x202 (x452 x1252)) x1252))
(assert (x1384 x1177 x912 x84 x254))
(assert (=> (<= x1317 10000) (= (x452 x1317) (x31 x1317))))
(assert (x832 x343))
(assert (x168 x923))
(assert (x832 x129))
(assert (x168 x1365))
(assert (= (ite (and x184 x932 x1009 x819 (not x256) x1251) (x1069 x27) (ite (and x1251 (not x932) x184 x819 x1009) (x352 x27) (ite (and x1009 x184 (not x819) x1251) (x1190 x27) (ite (and x1251 (not x1009) x184) (x950 x27) (x887 x27))))) (x1150 x27)))
(assert (x1260 (- x1352 x1177)))
(assert (x832 x286))
(assert (x832 x410))
(assert (x478 x441 x420 x359 x1224))
(assert (= (ite (and x998 (not x246) (not x549) x638 (not x1089)) (x178 x1305) (ite (and (not x549) (not x638) x998 (not x1089)) (x17 x1305) (ite (and x998 (not x1089) x549) (x17 x1305) (x438 x1305)))) (x173 x1305)))
(assert (x832 x429))
(assert (= (x1173 x900) (ite (and x581 x720) (x312 x900) (x805 x900))))
(assert (x49 x84 (- x254 x912)))
(assert (= (x202 (x31 142201243)) 142201243))
(assert (x49 x420 (- x441 x254)))
(assert (= (x206 x252) (ite (and x998 (not x1089) x794) (x1030 x252) (ite (and x196 (not x1089) x998 (not x794)) (x1030 x252) (x1275 x252)))))
(assert (= (ite (= x140 x537) x807 (x680 x140)) (x171 x140)))
(assert (x478 x359 x1224 x1120 x936))
(assert (x478 x1120 x936 x108 x857))
(assert (x1383 x235))
(assert (= (x347 x208) 0))
(assert (x168 x1353))
(assert (x832 x267))
(assert (x168 x230))
(assert (x832 x1250))
(assert (= (x452 274184521717934524641157099916833587218) (x31 274184521717934524641157099916833587218)))
(assert (x1260 (- x420 x1177)))
(assert (x49 x359 (- x1224 x857)))
(assert (x832 x344))
(assert (x832 x366))
(assert (x49 x1224 (- x359 x254)))
(assert (= (x1150 x900) (ite (and x1009 x184 x819 x932 x1251 (not x256)) (x1069 x900) (ite (and x184 x1009 x819 x1251 (not x932)) (x352 x900) (ite (and (not x819) x184 x1009 x1251) (x1190 x900) (ite (and x184 x1251 (not x1009)) (x950 x900) (x887 x900)))))))
(assert (= (ite (and x184 x819 (not x256) x1009 x1251 x932) (x1069 x809) (ite (and x1009 (not x932) x819 x1251 x184) (x352 x809) (ite (and x184 x1251 x1009 (not x819)) (x1190 x809) (ite (and x1251 (not x1009) x184) (x950 x809) (x887 x809))))) (x1150 x809)))
(assert (= x469 (=> (and (= x241 (x1293 (x452 x737) x945 0)) (= x1266 x752) (= (x1293 (x452 x1378) (x31 5) 0) x945) (= x1160 (x489 (x452 274184521717934524641157099916833587206))) (not (= 2690754053 x1320)) (> 2960351575 x1320) (= 2798343961 x1320) (<= x1266 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1160 0) (= (x1329 x241) x1266) (not (= 2764855426 x1320)) (not (< x1320 2690754053)) (>= 1461501637330902918203684832716283019655932542975 x737) (not (= x1320 2743102681)) (not (> 2293535753 x1320)) (>= x1266 0)) (=> (and (= x36 x64) (= x385 x802) (= x822 x1279) (= x649 x752) (= x558 x863)) x637))))
(assert (x832 x86))
(assert (x832 x860))
(assert (x832 x55))
(assert (= (x347 x600) 0))
(assert (x1384 x441 x420 x912 x1177))
(assert (x832 x229))
(assert (=> (<= x1314 10000) (= (x31 x1314) (x452 x1314))))
(assert (= (=> (and (= x1047 x1094) (= (<= x1047 x316) x687) (= x687 x1203)) x1203) x350))
(assert (= (x202 (x452 x580)) x580))
(assert (x1384 x441 x420 x1352 x936))
(assert (x832 x850))
(assert (x832 x809))
(assert (= x1052 (x202 (x452 x1052))))
(assert (x1074 x220 x1243))
(assert (x168 x580))
(assert (= x1306 x1294))
(assert (x832 x317))
(assert (= (and x1251 x184) x720))
(assert (x49 x84 (- x254 x108)))
(assert (= (x546 x925) (ite (= x925 x874) x696 (x664 x925))))
(assert (x49 x912 (- x1177 x857)))
(assert (x478 x420 x441 x1224 x359))
(assert (x832 x421))
(assert (x49 x108 (- x857 x84)))
(assert (= (x347 x27) 0))
(assert (x832 x1055))
(assert (x832 x1353))
(assert (= (x17 x756) (ite (= x1375 x756) x449 (x976 x756))))
(assert (x1383 x583))
(assert (x1260 (- x1224 x254)))
(assert (= x521 (=> (and (= x836 (x1149 (x452 x1365))) (= (= x167 0) x685) (= x774 (< (x542 (x452 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (= 0 x740)) x774 (or (and (= (x1017 x809) x483) (= x1307 (ite x744 1 0)) x846 (not (or (and (< x920 32) (= true (<= x920 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x920 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (not x1098) x744) (= x483 x1307) (= (x177 (+ 32 x27)) x809) (= (= 0 x483) x1098) (= (x1017 x27) x920) (> x483 0)) (not x846)) (or (and (= x882 (x177 (+ x1226 x182))) (= x604 (x177 (+ x167 63))) (not x685) (= x882 x405) (= x46 (x177 (+ x623 96))) (= x27 x182) (= (x77 115792089237316195423570985008687907853269984665640564039457584007913129639904 x604) x1226)) (and (= x27 96) (= x405 x182) x685)) (= x209 (x542 (x452 274184521717934524641157099916833587206))) (= x524 (x1017 x27)) (= x846 (> x524 0))) x33)))
(assert (x168 x433))
(assert (= x32 (x202 (x452 x32))))
(assert (x832 x382))
(assert (=> (<= x1356 10000) (= (x452 x1356) (x31 x1356))))
(assert (x1383 1000000000000000000))
(assert (x1260 (- x857 x362)))
(assert (x49 x359 (- x1224 x1177)))
(assert (x49 x936 (- x1120 x912)))
(assert (x49 x912 x1177))
(assert (x478 x1120 x936 x1224 x359))
(assert (x168 x956))
(assert (x832 x371))
(assert (x832 x1016))
(assert (= (ite (= x850 x374) x297 (x17 x850)) (x178 x850)))
(assert (x832 x345))
(assert (x49 x359 (- x362 x857)))
(assert (x832 x495))
(assert (x1260 (- x857 x420)))
(assert (= x640 (x202 (x452 x640))))
(assert (= x914 (x202 (x452 x914))))
(assert (=> (>= 10000 x495) (= (x452 x495) (x31 x495))))
(assert (x1260 (- x84 x441)))
(assert (x832 x1152))
(assert (x478 x84 x254 x1224 x359))
(assert (x478 x362 x359 x1120 x936))
(assert (x832 x515))
(assert (= x891 (x202 (x452 x891))))
(assert (x832 x363))
(assert (=> (<= x1021 10000) (= (x452 x1021) (x31 x1021))))
(assert (= (x202 (x452 x1315)) x1315))
(assert (=> (<= x582 10000) (= (x31 x582) (x452 x582))))
(assert (x1260 (- x1224 x1177)))
(assert (x1260 (- x1224 x108)))
(assert (x832 x1011))
(assert (x1260 (- x254 x108)))
(assert (x478 x912 x1177 x1352 x936))
(assert (= (x202 (x452 x1285)) x1285))
(assert (x478 x254 x84 x1352 x936))
(assert (= 2418364589 (x202 (x31 2418364589))))
(assert (x1260 x1120))
(assert (= x1282 x1290))
(assert (= (x202 (x452 x792)) x792))
(assert (x832 x1113))
(assert (x49 x362 (- x359 x441)))
(assert (x168 x303))
(assert (= (ite (= x669 x874) x696 (x664 x669)) (x546 x669)))
(assert (= (x178 x435) (ite (= x374 x435) x297 (x17 x435))))
(assert (x832 x297))
(assert (= (x723 x140) (ite (= x140 x267) x1363 (x1223 x140))))
(assert (x832 x1369))
(assert (x832 x760))
(assert (x832 x1179))
(assert (x832 x411))
(assert (x832 x107))
(assert (x1263 x1124 x287))
(assert (x832 x733))
(assert (= (x202 (x452 x727)) x727))
(assert (=> (<= x1252 10000) (= (x452 x1252) (x31 x1252))))
(assert (x168 x1317))
(assert (x1384 x420 x441 x84 x254))
(assert (x1260 (- x1352 x441)))
(assert (x1384 x1177 x912 x1352 x936))
(assert (x1384 x936 x1120 x108 x857))
(assert (x1260 (- x1177 x1120)))
(assert (x1260 (- x1120 x1177)))
(assert (x168 x1321))
(assert (x832 x146))
(assert (x168 x964))
(assert (x832 x647))
(assert (= 759532456 (x202 (x31 759532456))))
(assert (not x327))
(assert (x1384 x1352 x936 x84 x254))
(assert (x832 x778))
(assert (x49 x936 (- x1352 x1177)))
(assert (= 1000000000000000000 (x202 (x31 1000000000000000000))))
(assert (x832 x276))
(assert (x1260 32))
(assert (x1384 x1352 x936 x1224 x359))
(assert (= (x202 (x452 x471)) x471))
(assert (x478 x108 x857 x1352 x936))
(assert (x478 x936 x1120 x936 x1352))
(assert (= (x202 (x452 x780)) x780))
(assert (x168 x1044))
(assert (x49 x254 (- x84 x441)))
(assert (x478 x254 x84 x936 x1120))
(assert (x832 x643))
(assert (x832 x224))
(assert (= (x347 x68) 0))
(assert (= (x570 x279) (ite (= x28 x279) x357 (x1201 x279))))
(assert (x49 x254 (- x84 x359)))
(assert (x49 x936 (- x1120 x1352)))
(assert (x832 x458))
(assert (x1260 (- x1177 x857)))
(assert (x218 x105))
(assert (x49 x1120 (- x936 x1352)))
(assert (x478 x912 x1177 x84 x254))
(assert (x49 x108 (- x857 x362)))
(assert (x168 x1314))
(assert (x832 x63))
(assert (=> (>= 10000 x1043) (= (x452 x1043) (x31 x1043))))
(assert (= (ite (= x374 x264) x297 (x17 x264)) (x178 x264)))
(assert (= (x202 (x452 x934)) x934))
(assert (= (ite (= x374 x600) x297 (x17 x600)) (x178 x600)))
(assert (x832 x1195))
(assert (=> (<= x871 10000) (= (x31 x871) (x452 x871))))
(assert (=> (<= x971 10000) (= (x31 x971) (x452 x971))))
(assert (x478 x359 x1224 x441 x420))
(assert (x49 x1177 (- x912 x936)))
(assert (= (x347 x1325) 0))
(assert (x1260 (- x84 x362)))
(assert (x478 x362 x359 x1352 x936))
(assert (= (x31 2514000705) (x452 2514000705)))
(assert (= (x202 (x452 x203)) x203))
(assert (=> (<= x728 10000) (= (x31 x728) (x452 x728))))
(assert (x49 x1224 (- x359 x108)))
(assert (=> (<= x433 10000) (= (x452 x433) (x31 x433))))
(assert (x832 x1368))
(assert (x1260 (- x420 x362)))
(assert (x1260 (- x359 x912)))
(assert (x832 x1079))
(assert (x832 x466))
(assert (x832 x1234))
(assert (x832 x925))
(assert (x1260 (- x254 x1224)))
(assert (x478 x420 x441 x936 x1352))
(assert (x1383 x251))
(assert (=> (>= 10000 x781) (= (x31 x781) (x452 x781))))
(assert (=> (<= x780 10000) (= (x452 x780) (x31 x780))))
(assert (x832 x1131))
(assert (x168 x582))
(assert (x49 x936 (- x1352 x936)))
(assert (= x1043 (x202 (x452 x1043))))
(assert (= (ite (= x374 x1325) x297 (x17 x1325)) (x178 x1325)))
(assert (x832 x16))
(assert (x832 x1155))
(assert (x1384 x362 x359 x912 x1177))
(assert (x1260 (- x362 x1352)))
(assert (x478 x84 x254 x1352 x936))
(assert (x832 x1124))
(assert (= x863 (x202 (x452 x863))))
(assert (= x1265 (=> (and (< x407 911411945) (>= 1461501637330902918203684832716283019655932542975 x372) (not (> 468353030 x407)) (<= x1052 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1165) (= (x1293 (x452 x1285) (x31 7) 0) x1323) (not (= x407 468353030)) (> 2293535753 x407) (= x1165 x527) (> x1291 0) (= x30 (x1293 (x452 x372) x1323 0)) (not (= x407 635128645)) (= (x598 x142) x1165) (= (x489 (x452 274184521717934524641157099916833587206)) x1291) (= (x1293 (x452 x1052) x30 0) x142) (= 759532456 x407) (<= 0 x1165)) (=> (and (= x558 x1162) (= x165 x527) (= x1131 x36) (= (<= x165 x272) x391)) x538))))
(assert (x49 x936 (- x1120 x108)))
(assert (x832 x1380))
(assert (= (ite (= x844 x27) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x27)) (x950 x27)))
(assert (x478 x362 x359 x84 x254))
(assert (x49 x84 (- x254 x1352)))
(assert (x832 x739))
(assert (x1384 x1120 x936 x1224 x359))
(assert (x832 x1314))
(assert (x168 x291))
(assert (x832 x506))
(assert (x832 x841))
(assert (x168 x743))
(assert (x49 x362 (- x359 x1224)))
(assert (x832 x441))
(assert (x478 x936 x1352 x857 x108))
(assert (x832 x856))
(assert (x168 x460))
(assert (= x1213 x67))
(assert (=> (<= x137 10000) (= (x31 x137) (x452 x137))))
(assert (x1260 (- x362 x1224)))
(assert (= (ite (= x850 x435) x951 (x570 x850)) (x553 x850)))
(assert (x832 x1376))
(assert (x1260 (- x362 x1120)))
(assert (x49 x912 (- x1177 x420)))
(assert (x832 x576))
(assert (= (x1150 x515) (ite (and x1251 x819 x184 x1009 x932 (not x256)) (x1069 x515) (ite (and (not x932) x184 x1009 x819 x1251) (x352 x515) (ite (and x184 (not x819) x1251 x1009) (x1190 x515) (ite (and x1251 x184 (not x1009)) (x950 x515) (x887 x515)))))))
(assert (x168 x792))
(assert (x832 x357))
(assert (x832 x857))
(assert (x832 x1165))
(assert (x49 x420 (- x441 x857)))
(assert (=> (<= x291 10000) (= (x31 x291) (x452 x291))))
(assert (x478 x362 x359 x108 x857))
(assert (x1260 (- x1352 x108)))
(assert (= (x202 (x452 x899)) x899))
(assert (= (x1069 x874) (ite (= x874 x632) x913 (x352 x874))))
(assert (x478 x936 x1120 x1352 x936))
(assert (= (ite (and (not x1089) x638 (not x246) x998 (not x549)) (x465 x499) (ite (and (not x1089) (not x549) (not x638) x998) (x248 x499) (ite (and x549 x998 (not x1089)) (x248 x499) (x496 x499)))) (x610 x499)))
(assert (x478 x84 x254 x359 x362))
(assert (x49 x359 (- x1224 x362)))
(assert (x168 x565))
(assert (x832 x565))
(assert (x49 x359 (- x1224 x420)))
(assert (=> (>= 10000 x104) (= (x452 x104) (x31 x104))))
(assert (= x225 x799))
(assert (x49 x420 (- x441 x108)))
(assert (x49 x359 (- x1224 x441)))
(assert (= (ite (= x68 x374) x297 (x17 x68)) (x178 x68)))
(assert (= (ite (= x28 x809) x357 (x1201 x809)) (x570 x809)))
(assert (= (x570 x547) (ite (= x547 x28) x357 (x1201 x547))))
(assert (x1383 x220))
(assert (x832 x280))
(assert (x478 x441 x420 x912 x1177))
(assert (= x1294 (or (and x563 x559) (and x581 x720))))
(assert (= (ite (and x998 (not x246) (not x1089) x638 (not x549)) (x178 x435) (ite (and (not x1089) x998 (not x638) (not x549)) (x17 x435) (ite (and x549 (not x1089) x998) (x17 x435) (x438 x435)))) (x173 x435)))
(assert (= (x173 x27) (ite (and (not x1089) x998 (not x246) (not x549) x638) (x178 x27) (ite (and (not x638) (not x1089) (not x549) x998) (x17 x27) (ite (and x998 (not x1089) x549) (x17 x27) (x438 x27))))))
(assert (= x132 (x202 (x452 x132))))
(assert (x49 x936 (- x1352 x84)))
(assert (= (x553 x669) (ite (= x435 x669) x951 (x570 x669))))
(assert (x832 x1121))
(assert (x49 x857 (- x108 x1224)))
(assert (x168 x495))
(assert (= (x31 115792089237316195423570985008687907853269984665640564039457) (x452 115792089237316195423570985008687907853269984665640564039457)))
(assert (x832 x958))
(assert (x168 x149))
(assert (= (x465 x499) (ite (= x499 x26) x134 (x248 x499))))
(assert (x49 x254 (- x84 x420)))
(assert (x1260 (- x359 x362)))
(assert (=> (>= 10000 x1019) (= (x31 x1019) (x452 x1019))))
(assert (x1384 x108 x857 x362 x359))
(assert (x832 x966))
(assert (x1384 x936 x1120 x1224 x359))
(assert (x168 x1162))
(assert (x832 x388))
(assert (= (ite (and (not x256) x932 x184 x1009 x819 x1251) (x1069 x140) (ite (and x184 x819 (not x932) x1251 x1009) (x352 x140) (ite (and x1251 x1009 (not x819) x184) (x1190 x140) (ite (and x1251 (not x1009) x184) (x950 x140) (x887 x140))))) (x1150 x140)))
(assert (x478 x912 x1177 x359 x1224))
(assert (=> (<= x1343 10000) (= (x452 x1343) (x31 x1343))))
(assert (x49 x1177 (- x912 x857)))
(assert (= (x1069 x25) (ite (= x25 x632) x913 (x352 x25))))
(assert (=> (<= x15 10000) (= (x452 x15) (x31 x15))))
(assert (= (ite (and x720 x581) (x312 x1305) (x805 x1305)) (x1173 x1305)))
(assert (=> (>= 10000 x884) (= (x31 x884) (x452 x884))))
(assert (x1384 x1120 x936 x84 x254))
(assert (x478 x362 x359 x441 x420))
(assert (x49 x108 (- x857 x420)))
(assert (x1260 (- x1224 x362)))
(assert (= (ite (= x28 x1305) x357 (x1201 x1305)) (x570 x1305)))
(assert (x832 x547))
(assert (x832 x159))
(assert (x49 x936 (- x1352 x1120)))
(assert (x478 x84 x254 x362 x359))
(assert (x478 x108 x857 x1177 x912))
(assert (= (=> (and (= (x489 (x452 274184521717934524641157099916833587206)) x733) (< 0 x733) (= x513 x88) (>= x88 0) (= x9 (x1293 (x452 x981) x1042 0)) (= x1042 (x1293 (x452 x569) (x31 10) 0)) (< x344 2293535753) (< x344 468353030) (<= x88 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x344 911411945) (<= x981 1461501637330902918203684832716283019655932542975) (= x344 69947311) (= (x911 x9) x88)) (=> (and (= x36 x240) (= x956 x558) (= x513 x212) (= x1122 x385)) x455)) x754))
(assert (x832 x535))
(assert (= 0 (x347 x374)))
(assert (x478 x1224 x359 x857 x108))
(assert (x478 x359 x1224 x1352 x936))
(assert (= (x202 (x452 x582)) x582))
(assert (x832 x792))
(assert (x1260 (- x1177 x108)))
(assert (= (ite (= x405 x652) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x784 x405)) (x1223 x405)))
(assert (= (x202 (x452 x1095)) x1095))
(assert (x1260 (- x362 x359)))
(assert (x1384 x441 x420 x362 x359))
(assert (x49 x1177 (- x912 x1224)))
(assert (x1260 (- x1224 x84)))
(assert (= (x347 x1305) 0))
(assert (= (ite (and x998 (not x1089) x865) (x427 x281) (x1340 x281)) (x827 x281)))
(assert (= (x590 x900) (ite (and x967 (not x226) x1028 x1110 x567 x1306) (x171 x900) (ite (and x967 x1110 x1306 (not x567) x1028) (x680 x900) (ite (and (not x1028) x1306 x1110 x967) (x723 x900) (ite (and x1306 x1110 (not x967)) (x1223 x900) (x974 x900)))))))
(assert (x478 x912 x1177 x108 x857))
(assert (x832 x609))
(assert (x832 x1291))
(assert (= (=> (and (not (> 2293535753 x1155)) (> 2960351575 x1155) (< 0 x528) (= x731 x1249) (<= 0 x731) (= x1107 (x1293 (x452 x45) x905 0)) (not (< x1155 2690754053)) (= x731 (x402 x484)) (<= x731 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2690754053 x1155)) (<= x560 1461501637330902918203684832716283019655932542975) (= 2743102681 x1155) (= x484 (x1293 (x452 x560) x1107 0)) (<= x45 1461501637330902918203684832716283019655932542975) (= x528 (x489 (x452 274184521717934524641157099916833587206))) (= x905 (x1293 (x452 x1045) (x31 3) 0))) (=> (and (= x316 x1249) (= x303 x558) (= x36 x370) (= x451 x385) (= x822 x1370)) x480)) x1301))
(assert (x1260 (- x359 x1224)))
(assert (x168 x780))
(assert (= (ite (= x1375 x374) x449 (x976 x374)) (x17 x374)))
(assert (x49 x936 (- x1352 x1224)))
(assert (= (x202 (x31 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (x478 x362 x359 x1177 x912))
(assert (= (ite (= x1325 x1375) x449 (x976 x1325)) (x17 x1325)))
(assert (x49 x1120 (- x936 x362)))
(assert (= (x546 x374) (ite (= x874 x374) x696 (x664 x374))))
(assert (= (x546 x140) (ite (= x874 x140) x696 (x664 x140))))
(assert (x832 x628))
(assert (x832 x1168))
(assert (x1260 x1224))
(assert (= (ite (and (not x1089) x794 x998) (x1030 x1156) (ite (and (not x794) x196 (not x1089) x998) (x1030 x1156) (x1275 x1156))) (x206 x1156)))
(assert (x49 x936 (- x1120 x84)))
(assert (=> (<= x1285 10000) (= (x452 x1285) (x31 x1285))))
(assert (= 468353030 (x202 (x31 468353030))))
(assert (x49 x1120 x936))
(assert (x1260 (- x936 x1352)))
(assert (x832 x1134))
(assert (= (x31 2764855426) (x452 2764855426)))
(assert (x832 x483))
(assert (x832 x1337))
(assert (x168 x109))
(assert (x1260 (- x84 x1177)))
(assert (= true x1157))
(assert (= (ite (and (not x246) x998 (not x1089) x638 (not x549)) (x178 x850) (ite (and (not x1089) x998 (not x549) (not x638)) (x17 x850) (ite (and x549 x998 (not x1089)) (x17 x850) (x438 x850)))) (x173 x850)))
(assert (=> (>= 10000 x45) (= (x452 x45) (x31 x45))))
(assert (x832 x955))
(assert (x49 x108 (- x857 x359)))
(assert (x168 x1075))
(assert (=> (<= x354 10000) (= (x31 x354) (x452 x354))))
(assert (x478 x1120 x936 x359 x362))
(assert (= (x347 192) 0))
(assert (= (x17 x140) (ite (= x1375 x140) x449 (x976 x140))))
(assert (= x149 (x202 (x452 x149))))
(assert (x49 x936 (- x1120 x1224)))
(assert (= (x1190 x419) (ite (= x345 x419) x185 (x950 x419))))
(assert (x832 x53))
(assert (x832 x990))
(assert (x832 x227))
(assert (x49 x441 (- x420 x108)))
(assert (x478 x1120 x936 x441 x420))
(assert (x832 x1199))
(assert (x832 x457))
(assert (x1260 (- x441 x857)))
(assert (x478 x441 x420 x84 x254))
(assert (x49 x362 (- x359 x84)))
(assert (x478 x441 x420 x254 x84))
(assert (= (x352 x925) (ite (= x578 x925) x614 (x1190 x925))))
(assert (x1260 (- x254 x362)))
(assert (= x1378 (x202 (x452 x1378))))
(assert (= x1333 (and x120 (not x761))))
(assert (= x1198 (x202 (x452 x1198))))
(assert (x168 x1344))
(assert (x832 x1227))
(assert (= (x178 x1305) (ite (= x374 x1305) x297 (x17 x1305))))
(assert (= (x570 x68) (ite (= x28 x68) x357 (x1201 x68))))
(assert (x478 x1177 x912 x254 x84))
(assert (= x1045 (x202 (x452 x1045))))
(assert (= (x1005 x208) (ite (and x998 x481) (x546 x208) (x1039 x208))))
(assert (x478 x359 x1224 x84 x254))
(assert (x478 x912 x1177 x1224 x359))
(assert (x478 x441 x420 x108 x857))
(assert (= (ite (and x998 x481) (x546 x925) (x1039 x925)) (x1005 x925)))
(assert (x49 x362 (- x359 x1352)))
(assert (x832 x416))
(assert (=> (<= x710 10000) (= (x31 x710) (x452 x710))))
(assert (= (ite (= x28 x27) x357 (x1201 x27)) (x570 x27)))
(assert (x1220 1000000000000000000 x1112))
(assert (x832 x1366))
(assert (=> (>= 10000 x580) (= (x31 x580) (x452 x580))))
(assert (= (ite (and x184 (not x894) x1251) (x1150 x27) (x1185 x27)) (x1354 x27)))
(assert (x1260 x1112))
(assert (= (x202 (x452 x579)) x579))
(assert (x832 x292))
(assert (= (x570 x669) (ite (= x28 x669) x357 (x1201 x669))))
(assert (x832 x432))
(assert (= (x202 (x452 x737)) x737))
(assert (= x981 (x202 (x452 x981))))
(assert (x832 x659))
(assert (x832 x138))
(assert (x478 x936 x1352 x1120 x936))
(assert (x49 x1224 (- x359 x857)))
(assert (x1260 (- x936 x420)))
(assert (x832 x854))
(assert (x1384 x912 x1177 x1224 x359))
(assert (x832 x937))
(assert (x832 x692))
(assert (x832 x767))
(assert (x478 x912 x1177 x254 x84))
(assert (x1260 (- x362 x420)))
(assert (= x783 (=> (and (> x371 0) (<= 0 x608) (= x323 2258409472) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x608) (= x371 (x489 (x452 274184521717934524641157099916833587206))) (not (= x323 1986467848)) (< x323 2293535753) (= x1086 (x1293 (x452 x516) (x31 6) 0)) (<= x743 1461501637330902918203684832716283019655932542975) (not (> 1968616202 x323)) (not (< x323 911411945)) (= (x247 x1081) x608) (not (= 1968616202 x323)) (not (= 2211524764 x323)) (= x282 x608) (not (= 2061678023 x323)) (= (x1293 (x452 x743) x1086 0) x1081)) (=> (and (= x36 x1285) (= x558 x372) (= x1052 x385) (= x282 x272)) x1265))))
(assert (= (x546 x264) (ite (= x264 x874) x696 (x664 x264))))
(assert (x49 x84 (- x254 x420)))
(assert (x49 x1224 (- x359 x84)))
(assert (x49 x359 (- x1224 x936)))
(assert (= (x950 x68) (ite (= x68 x844) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x68))))
(assert (x478 x254 x84 x441 x420))
(assert (= (x178 x27) (ite (= x374 x27) x297 (x17 x27))))
(assert (x168 x203))
(assert (= 2798343961 (x202 (x31 2798343961))))
(assert (=> (<= x956 10000) (= (x452 x956) (x31 x956))))
(assert (= (x17 x68) (ite (= x1375 x68) x449 (x976 x68))))
(assert (= (ite (and x998 x481) (x546 x419) (x1039 x419)) (x1005 x419)))
(assert (= (x1007 x900) (ite (and x1306 (not x806) x1110) (x590 x900) (x319 x900))))
(assert (x832 x1320))
(assert (= (ite (= x374 x419) x297 (x17 x419)) (x178 x419)))
(assert (x832 x1225))
(assert (x1260 (- x441 x108)))
(assert (x1384 x359 x1224 x1352 x936))
(assert (x832 x426))
(assert (x1260 (- x254 x359)))
(assert (x832 x29))
(assert (x832 x623))
(assert (x168 x535))
(assert (x1260 (- x1120 x84)))
(assert (x832 x1090))
(assert (x832 x1264))
(assert (= (=> (and (not (= 1968616202 x111)) (= x918 (x1293 (x452 x269) (x31 6) 0)) (> 2293535753 x111) (= (x489 (x452 274184521717934524641157099916833587206)) x1369) (not (= x111 2061678023)) (not (> 911411945 x111)) (not (= 2211524764 x111)) (= (x1293 (x452 x1269) x918 0) x788) (= x111 2258409472) (= x356 x683) (not (> 1968616202 x111)) (<= x1269 1461501637330902918203684832716283019655932542975) (= (x675 x788) x683) (>= x683 0) (not (= x111 1986467848)) (< 0 x1369) (<= x683 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x760 x356) (= x871 x558) (= x544 x385) (= x710 x36)) x893)) x959))
(assert (x832 x1163))
(assert (x832 x1143))
(assert (x49 x420 (- x441 x362)))
(assert (x49 x108 x857))
(assert (x49 x108 (- x857 x441)))
(assert (=> (<= x737 10000) (= (x452 x737) (x31 x737))))
(assert (= (=> (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3 (x452 x1365))) x378) (= (x1031 (x452 274184521717934524641157099916833587206)) x1330) (= (>= x1247 0) x473) (= x329 x466) (= x581 (= 274184521717934524641157099916833587218 x1365)) (= x946 (x1031 (x452 x1365))) x378 x473 (= (x3 (x452 x1365)) x639) x888 (= x1247 (x1031 (x452 274184521717934524641157099916833587206))) (= (< x946 115792089237316195423570985008687907853269984665640564039457584007913129639936) x888)) (and (=> (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x821 x491)) (= x390 x1337) (= x491 x1076) (= (< x416 x491) x757) (not x571) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x404) (= x1041 68) (= x1041 x466) (not (> 649617121 x493)) (>= 1461501637330902918203684832716283019655932542975 x458) (= x458 x1278) (< 0 x997) (= x690 (+ x1076 x322)) (not (= x493 2514000705)) (<= 0 x821) x581 (= 274184521717934524641157099916833587206 x1154) (= x458 x16) (= x821 (x835 x93)) (not (< x1041 4)) (= x1006 (x1293 (x452 274184521717934524641157099916833587206) (x31 1) 0)) (= x821 x322) (= 32 x167) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x491 x821)) x1014) (= x816 x1068) (= (x1293 (x452 x458) (x31 1) 0) x93) (= x606 (x78 (- x1041 4))) (= x997 (x489 (x452 274184521717934524641157099916833587218))) (not x757) (= (x78 (- x416 x1337)) x661) (= 1 x740) (= (x820 x1271) x416) (not (= x493 649617121)) (not (= x493 826074471)) (not (= 1889567281 x493)) (<= 0 x416) (= x1337 x491) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x821) (= 274184521717934524641157099916833587206 x126) (= x571 (or (and (< x606 64) (= true (<= x606 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x606 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x416) (= x1118 (> x1337 x416)) (not x1118) (not x1014) (= (x1293 (x452 x458) (x31 1) 0) x890) (= x1271 (x1293 (x452 274184521717934524641157099916833587206) (x31 1) 0)) (= x493 2835717307)) x521) (=> (not x581) x1361))) x54))
(assert (= x859 (x202 (x452 x859))))
(assert (x478 x108 x857 x1224 x359))
(assert (x478 x936 x1352 x912 x1177))
(assert (x832 x385))
(assert (x832 x1103))
(assert (x832 x404))
(assert (= (ite (= x435 x140) x951 (x570 x140)) (x553 x140)))
(assert (= x1273 x166))
(assert (x1260 (- x359 x1120)))
(assert (= (ite (and x761 x120) (x266 x900) (x376 x900)) (x766 x900)))
(assert (= x240 (x202 (x452 x240))))
(assert (x49 x912 (- x1177 x1352)))
(assert (= (x31 2418364589) (x452 2418364589)))
(assert (x832 x283))
(assert (= x721 (=> (and (not (= 2512682246 x709)) (>= 1461501637330902918203684832716283019655932542975 x230) (> x1055 0) (= x1066 (x1293 (x452 x230) x1003 0)) (<= x304 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x248 x1066) x304) (= x1055 (x489 (x452 274184521717934524641157099916833587206))) (< x709 2960351575) (<= x1044 1461501637330902918203684832716283019655932542975) (not (< x709 2293535753)) (not (= 2293535753 x709)) (> 2690754053 x709) (= x1346 (x1293 (x452 x971) x1080 0)) (not (= 2418364589 x709)) (= (x1293 (x452 x1044) x1346 0) x1003) (= x1080 (x1293 (x452 x424) (x31 4) 0)) (<= x971 1461501637330902918203684832716283019655932542975) (= x304 x1281) (>= x304 0) (= 2532887486 x709)) (=> (and (< x739 2960351575) (= x506 x580) (< 163 x826) (= x526 x580) (= (x177 (+ 35 x873)) x328) (< x615 x965) (not (> 1 x628)) (>= x403 0) (< 0 x646) (= x138 (x177 (+ x71 160))) (not (< 18446744073709551615 x696)) (<= x429 1461501637330902918203684832716283019655932542975) (or (and (not x481) (= x434 (x368 (* x696 32))) (= (x177 (+ x29 160)) x765)) x481) (= x161 (x78 (- x826 4))) x536 (>= x724 0) (= x325 (x177 (+ 36 x873))) (not (< 18446744073709551615 x183)) (= (>= x1183 x658) x332) (not (= 2764855426 x739)) (= x1281 x658) (= x453 (x368 (* 32 x696))) (= x615 x1070) (= (= 0 x696) x481) (= (x177 (+ x627 x325)) x952) (= x133 x429) (= x199 x862) (= (x489 (x452 274184521717934524641157099916833587206)) x646) (not (< x826 x952)) (= (x284 x566) x696) (<= x1175 1461501637330902918203684832716283019655932542975) (= true (<= x826 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not (< x739 2690754053)) (not (= 2690754053 x739)) (= x566 (x177 (+ x873 4))) (<= 0 x429) (not (< x615 x580)) (= x11 x1234) (= x1134 x1164) (= x628 (x664 128)) (= (x368 (* x696 32)) x627) (= (< 0 x295) x1322) (not (= x739 2868243304)) (>= 1461501637330902918203684832716283019655932542975 x403) (= 2939843472 x739) (= 128 x366) (= x1175 x195) (not (or (and (> 160 x161) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x161))) (> x161 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= 1461501637330902918203684832716283019655932542975 x724) (= (x177 (+ x453 160)) x874) (or (and (= x255 (> x628 1)) (not (< x628 1)) (not (> x1238 1)) (or (and (= x523 (x664 128)) x255 (= (x664 128) x1032) (not (= x456 x396)) (= x793 (> x628 2)) (= (x664 192) x219) (= x396 (x77 1461501637330902918203684832716283019655932542975 x837)) (< 1 x1032) (> x523 0) (or (and (= (x77 1461501637330902918203684832716283019655932542975 x105) x1371) (= (x664 160) x105) (= x12 (x664 128)) (not (= x1371 x629)) x793 (= x1124 (x664 224)) (< 2 x14) (= (> x628 3) x986) (= (x77 1461501637330902918203684832716283019655932542975 x1124) x629) (= x14 (x664 128)) (not x986) (< 0 x12)) (not x793)) (= (x77 1461501637330902918203684832716283019655932542975 x219) x456) (= (x664 160) x837)) (not x255)) (= (x78 (- x628 1)) x1238) x1322) (not x1322)) (not (> 4 x826)) (= (x368 (* x696 32)) x71) (= x265 x1246) (= x862 x442) (= x1246 0) (= x724 x1164) (= x505 (x177 (+ x71 32))) (or (and (= x562 x643) x1089) (and (or (and (< (x270 x441 x420) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x962 x612)) (= x612 x1362) (= x121 (x1293 (x452 x233) x24 0)) (= x253 (x1293 (x452 x1287) x656 0)) (= x1194 (x270 x441 x420)) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x1287) (= x962 x602) (>= x612 0) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x233) (<= x612 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x612 (x427 x253)) (= x1382 (+ x602 x1362)) (not x865) (= (x1293 (x452 x580) (x31 6) 0) x24) (= x962 x1194) (= (x1293 (x452 x580) (x31 5) 0) x656)) (and x865 (= x1321 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= (x1293 (x452 x1321) x707 0) x38) (= (x1293 (x452 x580) (x31 6) 0) x707))) (= x1356 (x77 1461501637330902918203684832716283019655932542975 x862)) (not x1089) (= (x675 x1379) x1025) (or (and (= x922 (x1293 (x452 x460) (x31 5) 0)) (= x1159 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= (x1293 (x452 x891) x333 0) x711) (>= x357 0) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x1011) (= (x1293 (x452 x692) x262 0) x916) (< x397 x1092) (= (x177 (+ 32 x279)) x28) (<= 0 x965) (= (x911 x490) x1177) (>= x108 0) (= x333 (x1293 (x452 x460) (x31 6) 0)) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x474) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1177) (= (x1293 (x452 x283) x895 0) x985) (= x633 x562) (or (and (= x912 0) (not x941)) (and (or (and (not x667) (= x410 x11)) (and (= x498 (x570 x28)) (= x498 x410) x667)) (= (x570 x28) x76) (= (= 0 x926) x556) x941 (= x667 (< x76 x11)) (or (and (= (x78 (- x410 x1184)) x1115) (= x1115 x912) (not (< x410 x1184)) x556 (= x1184 (x570 x279))) (and (not (> x926 x410)) (= x1274 604800) (not x556) (= x436 x912) (= (ite (< x1023 604800) x1023 604800) x436) (= x1023 (x78 (- x410 x926))))))) (or x808 (and (= (x193 x251 x235) x936) (> x235 0) (= x113 1) (= x1299 (x77 x113 x1304)) (not x808) (= x1304 (ite (< 115792089237316195423570985008687907853269984665640564039457 x1112) 1 0)) (= (> x696 0) x777) (= x251 (x368 (* 1000000000000000000 x1112))) (or (not x777) (and (= x432 (x570 x874)) (= x1342 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= x435 (x177 (+ 160 x29))) (= (x284 x1140) x433) (< 0 x696) (= (x1293 (x452 x379) x447 0) x211) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x727) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1352) (= (x1293 (x452 x433) x400 0) x232) (= x1297 (< 1 x696)) (= x290 (x1293 (x452 x727) x1040 0)) (< 0 x432) (= x86 0) (<= x363 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1293 (x452 x460) (x31 11) 0) x584) (= x400 (x1293 (x452 x137) x584 0)) (= x340 (x270 x1352 x936)) (>= x86 0) (< (+ x1112 x363) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (or (not x1297) (and x1297 (= x1187 (x1293 (x452 x640) x19 0)) (= (x1293 (x452 x934) x1187 0) x624) (<= x751 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x177 (+ 64 x566)) x63) (not x641) (= x1112 x446) (= (x1293 (x452 x32) x102 0) x597) (>= 1461501637330902918203684832716283019655932542975 x934) (= x554 x100) (= (x486 x624) x1158) (= x1099 (x77 1461501637330902918203684832716283019655932542975 x1175)) (>= x1120 0) (= x32 (x284 x63)) (= x1103 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= (x193 x583 1000000000000000000) x305) (= (+ x130 x100) x767) (= (x1293 (x452 x460) (x31 4) 0) x1181) (<= x1315 1461501637330902918203684832716283019655932542975) (= x934 (x284 x63)) (= (x284 x63) x1315) (= x130 x305) (= (+ x446 x713) x864) (= (x1293 (x452 x460) (x31 11) 0) x96) (= (x486 x597) x751) (= (x1293 (x452 x1099) x1181 0) x613) (= 0 x751) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1120) (= x734 (x553 x874)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x270 x1120 x936)) (= x641 (< 2 x696)) (= x19 (x1293 (x452 x1103) x417 0)) (< 1 x696) (= (x1293 (x452 x1315) x533 0) x1377) (= (x1293 (x452 x1043) x96 0) x533) (= x713 x1158) (= x1120 (x811 x1377)) (>= x751 0) (<= x1158 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x554 (x553 x1325)) (< (+ x305 x554) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x77 1461501637330902918203684832716283019655932542975 x862) x640) (> x696 1) (< 1 x734) (= (x270 x1120 x936) x583) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1158 x1112)) (= (x177 (+ 192 x29)) x1325) (>= x1158 0) (= x417 (x1293 (x452 x460) (x31 4) 0)) (= (x1293 (x452 x859) x613 0) x102) (> x696 1) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x1043) (<= x32 1461501637330902918203684832716283019655932542975) (= x859 (x77 1461501637330902918203684832716283019655932542975 x862)))) (= x1364 (x1293 (x452 x80) x211 0)) (= (+ x1351 x1319) x127) (< 0 x696) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x86) (= x499 (x1293 (x452 x907) x1298 0)) (= x1351 x363) (< (x270 x1352 x936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x811 x232) x1352) (= x163 x1027) (= x379 (x77 1461501637330902918203684832716283019655932542975 x862)) (= (x610 x499) x86) (>= 1461501637330902918203684832716283019655932542975 x80) (< (+ x414 x1027) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x414 (x570 x435)) (= x1319 x1112) x777 (= x80 (x284 x1140)) (>= 1461501637330902918203684832716283019655932542975 x433) (= x1040 (x1293 (x452 x460) (x31 4) 0)) (= (x193 x340 1000000000000000000) x1027) (= (+ x181 x163) x951) (= (x1293 (x452 x460) (x31 4) 0) x472) (= (x610 x1364) x363) (<= 0 x1352) (= x495 (x77 1461501637330902918203684832716283019655932542975 x862)) (= x137 (x77 1461501637330902918203684832716283019655932542975 x1175)) (>= x363 0) (= x907 (x284 x1140)) (< 0 x696) (= x414 x181) (= x1140 x325) (>= 1461501637330902918203684832716283019655932542975 x907) (= (x1293 (x452 x1342) x472 0) x447) (= (x1293 (x452 x495) x290 0) x1298))) (= x1299 0))) (<= 0 x965) (<= x605 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1112 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x108) x1057) (= x262 (x1293 (x452 x460) (x31 3) 0)) (not (< x965 x460)) (<= 0 x605) (= x645 (x1293 (x452 x460) (x31 9) 0)) (= x651 (x570 x28)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x108) (= (x1293 (x452 x460) (x31 10) 0) x626) (or (and (= (x77 1461501637330902918203684832716283019655932542975 x1175) x1336) x861 (= (x1293 (x452 x460) (x31 6) 0) x931) (= (x1293 (x452 x1336) x931 0) x1309)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x270 x912 x1177)) (<= x35 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x186 (x1293 (x452 x460) (x31 5) 0)) (= x131 x35) (= (+ x42 x131) x1366) (= x1128 (x1293 (x452 x460) (x31 6) 0)) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x792) (= x147 (x270 x912 x1177)) (= x42 x388) (>= x35 0) (not x861) (= (x1293 (x452 x1314) x1128 0) x215) (= x147 x388) (< (+ x35 x388) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x35 (x827 x281)) (= x281 (x1293 (x452 x792) x186 0)) (= x1314 (x77 1461501637330902918203684832716283019655932542975 x1175)))) (= x235 (x300 x313)) (= (x1372 x252) x1112) (= x1092 (x177 (+ 2 x580))) (= x108 (x156 x985)) (= (x177 (+ x279 64)) x633) (<= x357 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x235) (or (and (= (x1293 (x452 x1180) x587 0) x200) (= x1180 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= x174 (x1293 (x452 x394) x200 0)) (= (x1293 (x452 x460) (x31 7) 0) x587) x1057 (= x279 x1341) (= x394 (x77 1461501637330902918203684832716283019655932542975 x862))) (and (= x1347 (x77 1461501637330902918203684832716283019655932542975 x862)) (>= x346 0) (= (x1293 (x452 x460) (x31 1) 0) x994) (or (and x448 (= (x1293 (x452 x1376) x979 0) x258) (= x279 x845) (= x60 (x1293 (x452 x460) (x31 7) 0)) (= (x77 1461501637330902918203684832716283019655932542975 x862) x1376) (= x884 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= x979 (x1293 (x452 x884) x60 0))) (and (= x1156 (x1293 (x452 x908) x1033 0)) (= x1033 (x1293 (x452 x642) x222 0)) (<= x601 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x601 x782) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x642 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= x908 (x77 1461501637330902918203684832716283019655932542975 x862)) (>= x601 0) (= x782 x401) (= (x1293 (x452 x471) x929 0) x1137) (= (x1293 (x452 x460) (x31 3) 0) x222) (= x854 (+ x401 x278)) (= (x77 1461501637330902918203684832716283019655932542975 x862) x732) (= x279 x845) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x471) (= x1010 x782) (= (x206 x1156) x601) (= x278 x601) (= (x1293 (x452 x460) (x31 7) 0) x929) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x270 x108 x857)) (= (x270 x108 x857) x1010) (not x448) (= x852 (x1293 (x452 x732) x1137 0)))) (= (x177 (+ 96 x756)) x1326) (= (x938 x1326) x1331) (= (x1293 (x452 x460) (x31 7) 0) x74) (= (x1293 (x452 x1347) x975 0) x1153) (>= x1090 0) (= x845 (x177 (+ 128 x756))) (>= x66 0) (<= x346 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x857) x448) (= (x275 x994) x66) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1090) (not x1057) (or (and (not x717) (= 0 x857)) (and (or (and (not x1254) (= x660 x11)) (and x1254 (= (x938 x1326) x175) (= x175 x660))) (= (x938 x1326) x408) (or (and (= x23 (x78 (- x660 x1367))) (= x23 x857) x564 (not (> x1367 x660)) (= (x938 x1341) x1367)) (and (not (> x1090 x660)) (= x674 x857) (= x647 604800) (not x564) (= x674 (ite (> 604800 x1267) x1267 604800)) (= x1267 (x78 (- x660 x1090))))) x717 (= (> x11 x408) x1254) (= (= 0 x1090) x564))) (= x975 (x1293 (x452 x779) x74 0)) (= (x348 x994 1) x1300) (= x1090 (x1277 x1153)) (= x346 (x762 x1300)) (= x717 (> x1331 x1090)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x66) (= x779 (x77 1461501637330902918203684832716283019655932542975 x1175)))) (>= x1177 0) (<= x965 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x891 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= x357 (x762 x10)) (= x252 (x1293 (x452 x1198) x916 0)) (= x490 (x1293 (x452 x1011) x626 0)) (= (= x1112 0) x808) (= (x348 x341 1) x10) (not x415) (<= x926 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x460)) (= x341 (x1293 (x452 x460) (x31 1) 0)) (<= 0 x926) (= x692 (x77 1461501637330902918203684832716283019655932542975 x1175)) (not (> x460 x965)) (= x313 (x1293 (x452 x1159) x922 0)) (>= x1112 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x965) (= (x275 x341) x605) (= (= x912 0) x861) (= (x1293 (x452 x474) x645 0) x895) (= x926 (x1053 x711)) (= (x77 1461501637330902918203684832716283019655932542975 x862) x283) (= (< x926 x651) x941) (= x1198 (x77 1461501637330902918203684832716283019655932542975 x862)) (<= 0 x235)) (and x415 (= x1341 x562))) (not (< x965 x526)) (<= x449 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x348 x190 1) x153) (= (x1293 (x452 x561) x897 0) x1197) (= x794 (= 0 x84)) (= (x206 x972) x280) (= x841 (x275 x190)) (= x95 (> x940 x1025)) (= x1375 (x177 (+ x756 32))) (<= 0 x84) (>= x449 0) (= x1143 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= x217 (x1293 (x452 x580) (x31 6) 0)) (<= x280 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x450 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= x190 (x1293 (x452 x580) (x31 1) 0)) (= x549 (= x280 0)) (= (x762 x153) x449) (= x880 (x1293 (x452 x580) (x31 5) 0)) (<= 0 x1243) (= x972 (x1293 (x452 x1095) x91 0)) (= (x156 x337) x84) (= x460 (x177 (+ x580 1))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x841) (= x1341 (x177 (+ 64 x756))) (= (x1293 (x452 x1143) x217 0) x1379) (>= x965 0) (= (x1293 (x452 x580) (x31 10) 0) x897) (<= x965 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x84 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x526 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (<= x1243 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x468 (x1293 (x452 x989) x1295 0)) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x989) (or (and (= x1343 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= x643 x756) (= x1018 (x1293 (x452 x443) x1318 0)) (= (x1293 (x452 x580) (x31 7) 0) x198) x794 (= (x1293 (x452 x1343) x198 0) x1318) (= x443 (x77 1461501637330902918203684832716283019655932542975 x862))) (and (= (x77 1461501637330902918203684832716283019655932542975 x862) x291) (or (and (= x254 0) (not x996)) (and (or (and (= x11 x128) (not x1136)) (and x1136 (= (x797 x703) x910) (= x910 x128))) x996 (= (= x324 0) x365) (= x1136 (< x338 x11)) (= x338 (x797 x703)) (or (and x365 (= x786 (x78 (- x128 x1135))) (= x1135 (x797 x643)) (= x786 x254) (not (> x1135 x128))) (and (= x254 x778) (= x778 (ite (> 604800 x1088) x1088 604800)) (= (x78 (- x128 x324)) x1088) (= 604800 x1292) (not (< x128 x324)) (not x365))))) (<= x768 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x177 (+ x643 64)) x568) (= (x1293 (x452 x580) (x31 1) 0) x611) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x1227) (= (x1293 (x452 x580) (x31 7) 0) x706) (= x703 (x177 (+ x643 32))) (= (x797 x703) x635) (= x196 (= x254 0)) (= x1064 (x762 x1357)) (= (x34 x903) x324) (= (x1293 (x452 x1227) x706 0) x999) (= (x275 x611) x768) (or (and (<= x358 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1293 (x452 x309) x1216 0) x148) (not x196) (= (x77 1461501637330902918203684832716283019655932542975 x862) x1151) (= x1050 (x1293 (x452 x923) x148 0)) (= x358 (x1030 x1138)) (= x764 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= x331 x358) (= (x1293 (x452 x580) (x31 7) 0) x1216) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x358 x514)) (= x1072 (x1293 (x452 x764) x995 0)) (>= x358 0) (= (x270 x84 x254) x759) (= x923 (x77 1461501637330902918203684832716283019655932542975 x862)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x270 x84 x254)) (= x57 x514) (= x995 (x1293 (x452 x580) (x31 3) 0)) (= x514 x759) (= (+ x331 x57) x772) (= x568 x756) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x309) (= x1138 (x1293 (x452 x1151) x1072 0))) (and (= x756 x568) (= (x77 1461501637330902918203684832716283019655932542975 x862) x129) x196 (= (x77 1461501637330902918203684832716283019655932542975 x1175) x104) (= (x1293 (x452 x580) (x31 7) 0) x188) (= (x1293 (x452 x104) x188 0) x170) (= x1026 (x1293 (x452 x129) x170 0)))) (>= x768 0) (not x794) (= x996 (> x635 x324)) (<= x1064 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x324) (>= x324 0) (= (x1293 (x452 x291) x999 0) x903) (= x1357 (x348 x611 1)) (>= x1064 0))) (= (x827 x155) x1243) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x1021) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1025) (>= x1025 0) (= x865 (= x441 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x420) (= (x77 1461501637330902918203684832716283019655932542975 x862) x1095) (= x420 (x911 x1197)) (<= 0 x420) (= x155 (x1293 (x452 x1021) x880 0)) (= x1295 (x1293 (x452 x580) (x31 9) 0)) (= (> x460 x615) x415) (or (and (or (not x638) (and (< (+ x280 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x297 (+ x801 x1236)) (= (x17 x374) x50) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x963) (= x753 x1268) (= x132 (x284 x988)) (= x50 x1236) (= (x284 x988) x263) (<= 0 x1224) (= (x1293 (x452 x964) x330 0) x1022) (<= x1268 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x815 (x1293 (x452 x15) x123 0)) (= (+ x160 x753) x134) (> x488 0) (= (x17 x874) x488) (= x1268 (x248 x26)) (= x1207 (x270 x1224 x359)) (= x964 (x77 1461501637330902918203684832716283019655932542975 x862)) (= x1224 (x811 x519)) (= x665 (x1293 (x452 x1239) x949 0)) (= (x1293 (x452 x580) (x31 4) 0) x618) (< 0 x696) (or (not x246) (and (= (x1293 (x452 x580) (x31 4) 0) x831) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x270 x362 x359)) (= (x1293 (x452 x141) x825 0) x829) (= x745 (> x696 2)) (= (x1293 (x452 x716) x194 0) x508) (= x194 (x1293 (x452 x1019) x1255 0)) (= x991 0) (< 1 x696) (<= x1344 1461501637330902918203684832716283019655932542975) (= (x1293 (x452 x1353) x829 0) x306) (= x1016 x318) (= x868 (+ x1109 x318)) (= x552 (x77 1461501637330902918203684832716283019655932542975 x862)) (= x280 x1109) (= x362 (x811 x306)) x246 (= x1163 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= (x193 x644 1000000000000000000) x750) (= x1344 (x284 x191)) (= (x1293 (x452 x552) x1311 0) x243) (= (x1293 (x452 x1163) x831 0) x1311) (= x373 x249) (<= x991 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x141 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= x825 (x1293 (x452 x580) (x31 11) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x280 x1016)) (= (x177 (+ x566 64)) x191) (not x745) (= (x178 x874) x679) (= x1255 (x1293 (x452 x565) x906 0)) (<= 0 x362) (= x750 x116) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x565) (< 1 x696) (> x679 1) (= (x77 1461501637330902918203684832716283019655932542975 x862) x1019) (= x1016 (x465 x1141)) (<= 0 x991) (= (x270 x362 x359) x644) (= x1353 (x284 x191)) (<= x1016 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x750 x373) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x991 (x465 x508)) (= (x178 x630) x373) (= x229 (+ x249 x116)) (<= x716 1461501637330902918203684832716283019655932542975) (= x906 (x1293 (x452 x580) (x31 4) 0)) (< 1 x696) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x362) (= (x1293 (x452 x1344) x243 0) x1141) (>= 1461501637330902918203684832716283019655932542975 x1353) (= (x177 (+ 192 x29)) x630) (= (x284 x191) x716) (>= x1016 0))) (= (x177 (+ 160 x29)) x374) (= x801 x957) (= x26 (x1293 (x452 x579) x1022 0)) (= x949 (x1293 (x452 x580) (x31 11) 0)) (= x518 (x1293 (x452 x132) x406 0)) (= (x248 x518) x315) (= x325 x988) (= x149 (x77 1461501637330902918203684832716283019655932542975 x862)) (= x15 (x77 1461501637330902918203684832716283019655932542975 x1175)) (> x696 0) (= x315 0) (= (x1293 (x452 x580) (x31 4) 0) x123) (<= x263 1461501637330902918203684832716283019655932542975) (= x1239 (x77 1461501637330902918203684832716283019655932542975 x1175)) (= x519 (x1293 (x452 x263) x665 0)) (= (x284 x988) x579) (>= 1461501637330902918203684832716283019655932542975 x132) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x270 x1224 x359)) (= (< 1 x696) x246) (>= 1461501637330902918203684832716283019655932542975 x579) (>= x1268 0) (<= x1224 115792089237316195423570985008687907853269984665640564039457584007913129639935) x638 (= x406 (x1293 (x452 x149) x815 0)) (>= x315 0) (<= x315 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x160 x280) (= x957 (x193 x1207 1000000000000000000)) (< 0 x696) (= x330 (x1293 (x452 x963) x618 0)) (< (+ x957 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x549) (= x359 (x193 x220 x1243)) (= x220 (x368 (* 1000000000000000000 x280))) (= x1189 (ite (< 115792089237316195423570985008687907853269984665640564039457 x280) 1 0)) (> x1243 0) (= x1264 1) (= 0 x43) (= (> x696 0) x638) (= x43 (x77 x1264 x1189))) x549) (>= x280 0) (= x940 (x17 x1375)) (= (x77 1461501637330902918203684832716283019655932542975 x1175) x561) (= x91 (x1293 (x452 x450) x1078 0)) (= x337 (x1293 (x452 x1356) x468 0)) (not (> x526 x965)) (>= x841 0) (<= 0 x965) (or (and (= x441 0) (not x95)) (and (= x1121 (x17 x1375)) (= x377 (= 0 x1025)) (or (and (= x441 x1215) (= (x78 (- x881 x1025)) x726) (= x1091 604800) (= x1215 (ite (< x726 604800) x726 604800)) (not (> x1025 x881)) (not x377)) (and (not (< x881 x659)) (= x1245 (x78 (- x881 x659))) (= (x17 x756) x659) x377 (= x441 x1245))) (= (< x1121 x11) x83) x95 (or (and (not x83) (= x881 x11)) (and (= (x17 x1375) x1152) x83 (= x1152 x881))))) (<= x965 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1293 (x452 x580) (x31 3) 0) x1078))) (= x1089 (< x615 x580)) (= x183 x873) (= x295 (x78 (- x628 1))) (not (= 2743102681 x739)) (>= 1461501637330902918203684832716283019655932542975 x862) (= x1270 x1175) (= x643 (x177 (+ x874 x505))) (<= x965 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x536 (and x332 x339)) (<= 0 x965) (not (= 2798343961 x739)) (or (and (> x826 x328) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x826) (<= x328 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x328 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x826))) (not (> 2293535753 x739)) (= x29 (x177 (+ 32 x453))) (= x615 x397)) x18))))
(assert (= x1365 (x202 (x452 x1365))))
(assert (x478 x108 x857 x1120 x936))
(assert (= (x202 (x452 x137)) x137))
(assert (x478 x857 x108 x84 x254))
(assert (x49 x1120 (- x936 x1177)))
(assert (x1260 (- x912 x936)))
(assert (x49 x1352 (- x936 x359)))
(assert (= (ite (and x481 x998) (x546 x900) (x1039 x900)) (x1005 x900)))
(assert (x49 x441 (- x420 x84)))
(assert (x832 x1259))
(assert (= (x202 (x452 x354)) x354))
(assert (= 1889567281 (x202 (x31 1889567281))))
(assert (= 2532887486 (x202 (x31 2532887486))))
(assert (= (x452 2868243304) (x31 2868243304)))
(assert (= x565 (x202 (x452 x565))))
(assert (x832 x1339))
(assert (= (x452 2211524764) (x31 2211524764)))
(assert (x832 x716))
(assert (x478 x254 x84 x1224 x359))
(assert (= (ite (= x547 x374) x297 (x17 x547)) (x178 x547)))
(assert (x832 x992))
(assert (x478 x359 x1224 x912 x1177))
(assert (= (x452 826074471) (x31 826074471)))
(assert (x1260 (- x857 x1177)))
(assert (=> (<= x1151 10000) (= (x452 x1151) (x31 x1151))))
(assert (x1260 (- x912 x362)))
(assert (x168 x129))
(assert (x1260 (- x936 x359)))
(assert (x1384 x1120 x936 x108 x857))
(assert (x1260 (- x420 x1352)))
(assert (x832 x325))
(assert (x832 x460))
(assert (= (x465 x1141) (ite (= x26 x1141) x134 (x248 x1141))))
(assert (= (x546 x1325) (ite (= x874 x1325) x696 (x664 x1325))))
(assert (x478 x84 x254 x936 x1120))
(assert (= (x486 x597) (ite (= x1364 x597) x127 (x610 x597))))
(assert (x832 x167))
(assert (=> (>= 10000 x552) (= (x452 x552) (x31 x552))))
(assert (x832 x272))
(assert (= (x570 x850) (ite (= x850 x28) x357 (x1201 x850))))
(assert (x832 x1164))
(assert (= (x452 1889567281) (x31 1889567281)))
(assert (= (x202 (x31 2939843472)) 2939843472))
(assert (x478 x912 x1177 x441 x420))
(assert (x1263 x105 x136))
(assert (= (x1005 x25) (ite (and x481 x998) (x546 x25) (x1039 x25))))
(assert (x49 x359 (- x362 x420)))
(assert (x49 x84 (- x254 x362)))
(assert (= x327 (=> (and (= (x1031 (x452 274184521717934524641157099916833587218)) x1217) x321 (>= 1461501637330902918203684832716283019655932542975 x822) (= x1269 x558) (>= x822 0) (= x1054 x1381) (= false x52) (>= x224 0) (= x830 false) (<= 0 x1054) (= x555 5) (= false x1114) (= (< 0 (x489 (x452 274184521717934524641157099916833587218))) x572) (= 2939843472 x37) (<= 0 x1217) (<= 0 x146) (<= 0 x558) (<= x715 1461501637330902918203684832716283019655932542975) (= x133 x715) (<= x385 1461501637330902918203684832716283019655932542975) (<= x558 1461501637330902918203684832716283019655932542975) (= x277 false) (>= x715 0) x85 (<= x1054 1461501637330902918203684832716283019655932542975) (= x269 x36) (<= 0 x385) x572 (= x85 (< 0 (x489 (x452 274184521717934524641157099916833587206)))) (= (x1031 (x452 274184521717934524641157099916833587214)) x224) (= x146 (x1031 (x452 274184521717934524641157099916833587206))) (= x321 (> (x489 (x452 274184521717934524641157099916833587214)) 0))) x959)))
(assert (x832 x1215))
(assert (x49 x108 (- x857 x936)))
(assert (x832 x1321))
(assert (= (ite (= x578 x874) x614 (x1190 x874)) (x352 x874)))
(assert (= (x202 (x452 x1356)) x1356))
(assert (x49 x912 (- x1177 x108)))
(assert (x478 x1352 x936 x254 x84))
(assert (x832 x671))
(assert (= (ite (= x900 x335) x729 (x723 x900)) (x680 x900)))
(assert (x478 x359 x362 x1177 x912))
(assert (x1260 x254))
(assert (x832 x1343))
(assert (x1260 (- x420 x254)))
(assert (= (ite (= x874 x809) x696 (x664 x809)) (x546 x809)))
(assert (= (=> (= (= 274184521717934524641157099916833587214 x535) x423) (and (=> (not x423) x1157) (=> (and (= x189 x736) (= x878 (x1272 x311)) (<= 0 x1302) (= x380 1) (= 274184521717934524641157099916833587206 x343) (= (x78 (- x1302 x1214)) x301) (= x1060 (+ x984 x216)) (> x666 0) (= x966 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x1293 (x452 274184521717934524641157099916833587206) (x31 1) 0) x1235) (= 68 x1232) (= x851 x1214) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x870 x878)) x192) (not (= 649617121 x818)) (not (< x818 649617121)) (not x192) (not (= x818 1889567281)) (= x189 x1312) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1302) (not (< x1232 4)) (= x1232 x833) (= x1029 x1004) (= x870 x1214) (= x631 (x78 (- x1232 4))) (= (x489 (x452 274184521717934524641157099916833587214)) x666) (= x870 x984) (= x878 x216) (= (x1293 (x452 274184521717934524641157099916833587206) (x31 1) 0) x1374) (not x314) (>= 1461501637330902918203684832716283019655932542975 x189) (not x467) (= x818 2835717307) (= x1179 32) (not (= x818 826074471)) (= x314 (< x1302 x1214)) (= (< x1302 x870) x467) (= x361 274184521717934524641157099916833587206) (not (= x818 2514000705)) (not x296) (= x296 (or (> x631 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x631 64) (= (<= x631 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x311 (x1293 (x452 x189) (x31 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x878) (< (+ x870 x878) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x878 0) x423 (= x1302 (x1125 x1374))) x444))) x522))
(assert (x832 x1025))
(assert (x168 x1045))
(assert (= (x1354 x809) (ite (and x184 (not x894) x1251) (x1150 x809) (x1185 x809))))
(assert (x832 x15))
(assert (= (x347 x547) 0))
(assert (x832 x47))
(assert (x832 x263))
(assert (x49 x936 (- x1120 x857)))
(assert (= (x202 (x452 x871)) x871))
(assert (= x370 (x202 (x452 x370))))
(assert (x832 x235))
(assert (= 2258409472 (x202 (x31 2258409472))))
(assert (= 18446744073709551615 (x202 (x31 18446744073709551615))))
(assert (x832 x251))
(assert (x49 x912 (- x1177 x84)))
(assert (=> (>= 10000 x471) (= (x31 x471) (x452 x471))))
(assert (x168 x1043))
(assert (x832 x1217))
(assert (= (x1005 x547) (ite (and x481 x998) (x546 x547) (x1039 x547))))
(assert (x1384 x254 x84 x1352 x936))
(assert (x832 x1292))
(assert (x49 x1177 (- x912 x1120)))
(assert (x832 x700))
(assert (x478 x254 x84 x912 x1177))
(assert (x832 x233))
(assert (x478 x936 x1120 x857 x108))
(assert (x832 x185))
(assert (x478 x936 x1120 x84 x254))
(assert (x832 x1015))
(assert (x832 x375))
(assert (x1260 (- x1120 x254)))
(assert (= (ite (= x844 x547) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x547)) (x950 x547)))
(assert (x832 x1099))
(assert (=> (>= 10000 x981) (= (x31 x981) (x452 x981))))
(assert (x832 x44))
(assert (x832 x1172))
(assert (x478 x1224 x359 x912 x1177))
(assert (= (=> (and (= (x1293 (x452 x1339) x485 0) x898) (not (= x671 1968616202)) (= x485 (x1293 (x452 x591) (x31 6) 0)) (>= x1100 0) (= x1100 (x675 x898)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1100) (= x948 (x489 (x452 274184521717934524641157099916833587206))) (not (= 2211524764 x671)) (< 0 x948) (< x671 2293535753) (= x824 x1100) (not (= 2061678023 x671)) (not (< x671 1968616202)) (not (> 911411945 x671)) (= x671 2258409472) (not (= 1986467848 x671)) (>= 1461501637330902918203684832716283019655932542975 x1339)) (=> (and (= x728 x558) (= x973 (not (= 0 x1199))) (= x36 x109) (= 0 x1172) (= x1199 x824) x973) x117)) x879))
(assert (= (x1223 x140) (ite (= x140 x652) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x784 x140))))
(assert (x478 x84 x254 x359 x1224))
(assert (x832 x947))
(assert (x49 x1224 (- x359 x1177)))
(assert (= x893 (=> (and (>= 1461501637330902918203684832716283019655932542975 x544) (= x1063 759532456) (= (x1293 (x452 x544) x655 0) x596) (>= 1461501637330902918203684832716283019655932542975 x871) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229) (= x655 (x1293 (x452 x871) x409 0)) (= x409 (x1293 (x452 x710) (x31 7) 0)) (not (= x1063 635128645)) (<= 0 x1229) (= (x34 x596) x1229) (not (< x1063 468353030)) (> 911411945 x1063) (= (x489 (x452 274184521717934524641157099916833587206)) x677) (not (= 468353030 x1063)) (< 0 x677) (= x1229 x691) (< x1063 2293535753)) (=> (and x961 (= x1339 x558) (= x1206 x691) (= x961 (<= x760 x1206)) (= x591 x36)) x879))))
(assert (x1260 (- x857 x936)))
(assert (x832 x591))
(assert (x168 x907))
(assert (= (ite (= x25 x28) x357 (x1201 x25)) (x570 x25)))
(assert (x832 x50))
(assert (x478 x1352 x936 x420 x441))
(assert (x1384 x1177 x912 x108 x857))
(assert (x1384 x108 x857 x1352 x936))
(assert (x49 x1352 (- x936 x441)))
(assert (x832 x1359))
(assert (=> (<= x914 10000) (= (x31 x914) (x452 x914))))
(assert (x1384 x362 x359 x1352 x936))
(assert (= (x202 (x452 x743)) x743))
(assert (x832 x512))
(assert (= (x31 2743102681) (x452 2743102681)))
(assert (= (ite (= x844 x900) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x900)) (x950 x900)))
(assert (=> (>= 10000 x424) (= (x452 x424) (x31 x424))))
(assert (=> (>= 10000 x1085) (= (x452 x1085) (x31 x1085))))
(assert (= x884 (x202 (x452 x884))))
(assert (= (ite (= x515 x844) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x520 x515)) (x950 x515)))
(assert (= (x452 26959946667150639794667015087019630673637144422540572481103610249215) (x31 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x832 x886))
(assert (x1263 x862 x1244))
(assert (x168 x692))
(assert (x49 x1120 (- x936 x108)))
(assert (= (x723 x850) (ite (= x850 x267) x1363 (x1223 x850))))
(assert (x832 x140))
(assert (x832 x833))
(assert (= (ite (and (not x894) x1251 x184) (x1150 x547) (x1185 x547)) (x1354 x547)))
(assert (= x394 (x202 (x452 x394))))
(check-sat)
