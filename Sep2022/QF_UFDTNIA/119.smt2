(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x482 0)) (((x665 (x1418 x482) (x735 x482) (x384 Int)) (x737 (x1026 x482) (x57 Int)) (x497 (x448 Int)))))
(declare-fun x180 () Int)
(declare-fun x1371 () Int)
(declare-fun x309 () Bool)
(declare-fun x173 () Int)
(declare-fun x239 () Bool)
(declare-fun x295 () Int)
(declare-fun x820 () Bool)
(declare-fun x701 () Int)
(declare-fun x598 () Bool)
(declare-fun x892 () Int)
(declare-fun x1077 () Int)
(declare-fun x459 () Int)
(declare-fun x301 () Bool)
(declare-fun x351 () Bool)
(declare-fun x631 () Int)
(declare-fun x445 () Int)
(declare-fun x650 () Int)
(declare-fun x1289 () Int)
(declare-fun x554 () Int)
(declare-fun x1286 () Int)
(declare-fun x886 () Int)
(declare-fun x479 () Int)
(declare-fun x711 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x865 () Int)
(declare-fun x207 () Int)
(declare-fun x61 () Int)
(declare-fun x469 () Int)
(declare-fun x389 () Int)
(declare-fun x3 () Int)
(declare-fun x1425 () Int)
(declare-fun x322 (Int) Int)
(declare-fun x510 () Bool)
(declare-fun x72 () Int)
(declare-fun x817 () Int)
(declare-fun x1447 () Int)
(declare-fun x1176 () Int)
(declare-fun x227 () Int)
(declare-fun x11 () Int)
(declare-fun x714 () Int)
(declare-fun x832 () x482)
(declare-fun x1435 () Int)
(declare-fun x1436 () Int)
(declare-fun x835 () Bool)
(declare-fun x875 () x482)
(declare-fun x754 () Int)
(declare-fun x611 () Int)
(declare-fun x652 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x1487 () Int)
(declare-fun x757 () Bool)
(declare-fun x708 () Int)
(declare-fun x885 () Bool)
(declare-fun x1478 () Int)
(declare-fun x693 () Bool)
(declare-fun x1346 () Int)
(declare-fun x981 () Int)
(declare-fun x696 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1057 () Int)
(declare-fun x121 () Bool)
(declare-fun x688 () Int)
(declare-fun x1250 () Int)
(declare-fun x1036 () Int)
(declare-fun x685 () Int)
(declare-fun x852 () Int)
(declare-fun x1049 () Int)
(declare-fun x1340 () x482)
(declare-fun x593 () Bool)
(declare-fun x1182 () Int)
(declare-fun x543 () Bool)
(declare-fun x476 () Int)
(declare-fun x969 () Bool)
(declare-fun x561 (Int) Int)
(declare-fun x630 () x482)
(declare-fun x777 () Int)
(declare-fun x719 () Int)
(declare-fun x1466 () Bool)
(declare-fun x423 () Int)
(declare-fun x105 (x482) Int)
(declare-fun x1287 () Int)
(declare-fun x252 () Int)
(declare-fun x1263 () Bool)
(declare-fun x1178 () Int)
(declare-fun x723 () Int)
(declare-fun x1518 () Bool)
(declare-fun x587 () Int)
(declare-fun x532 () Int)
(declare-fun x138 () x482)
(declare-fun x842 () Int)
(declare-fun x533 () Int)
(declare-fun x1488 () Int)
(declare-fun x503 () Bool)
(declare-fun x355 () Int)
(declare-fun x622 () Int)
(declare-fun x996 () Int)
(declare-fun x1116 () Int)
(declare-fun x560 () Bool)
(declare-fun x847 () Int)
(declare-fun x710 () Int)
(declare-fun x694 () Int)
(declare-fun x568 () Int)
(declare-fun x244 () Int)
(declare-fun x381 () Int)
(declare-fun x699 () Bool)
(declare-fun x519 () Int)
(declare-fun x1322 (x482) Int)
(declare-fun x1222 () Int)
(declare-fun x1245 () Int)
(declare-fun x660 () Int)
(declare-fun x1522 () Int)
(declare-fun x53 () Int)
(declare-fun x1082 () Int)
(declare-fun x323 () Int)
(declare-fun x1318 () Int)
(declare-fun x1497 () Bool)
(declare-fun x1495 () Int)
(declare-fun x1479 () Int)
(declare-fun x982 () Int)
(declare-fun x1458 () Int)
(declare-fun x1310 () Bool)
(declare-fun x1138 () Int)
(declare-fun x1154 () Int)
(declare-fun x1391 () Int)
(declare-fun x183 () x482)
(declare-fun x795 (x482) Int)
(declare-fun x703 () Int)
(declare-fun x1484 () Int)
(declare-fun x1507 () Bool)
(declare-fun x413 () Int)
(declare-fun x1228 () Int)
(declare-fun x776 () Int)
(declare-fun x579 () Int)
(declare-fun x1415 () Bool)
(declare-fun x359 () Int)
(declare-fun x978 () Int)
(declare-fun x513 () Int)
(declare-fun x692 () x482)
(declare-fun x1041 () Bool)
(declare-fun x801 () x482)
(declare-fun x881 () Int)
(declare-fun x1272 () x482)
(declare-fun x746 () Int)
(declare-fun x1111 () Bool)
(declare-fun x51 () Bool)
(declare-fun x127 () Bool)
(declare-fun x254 () Int)
(declare-fun x794 () Int)
(declare-fun x938 (Int) Int)
(declare-fun x695 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x909 () Bool)
(declare-fun x742 () Bool)
(declare-fun x297 () Int)
(declare-fun x529 () Int)
(declare-fun x1359 () Int)
(declare-fun x267 (Int) Int)
(declare-fun x248 () Bool)
(declare-fun x182 () Int)
(declare-fun x1416 () Bool)
(declare-fun x1127 () Int)
(declare-fun x161 (Int) Int)
(declare-fun x697 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x525 () Int)
(declare-fun x199 () Int)
(declare-fun x789 () Int)
(declare-fun x1246 () Bool)
(declare-fun x718 () Bool)
(declare-fun x383 () Int)
(declare-fun x1155 () Bool)
(declare-fun x1224 () Int)
(declare-fun x1441 () x482)
(declare-fun x1248 () Int)
(declare-fun x1432 () Int)
(declare-fun x1506 () Int)
(declare-fun x312 () Int)
(declare-fun x1196 () Int)
(declare-fun x363 () x482)
(declare-fun x857 () Int)
(declare-fun x1423 () Bool)
(declare-fun x474 () Int)
(declare-fun x619 () Int)
(declare-fun x1366 () Int)
(declare-fun x1477 () Int)
(declare-fun x730 () Int)
(declare-fun x212 () Bool)
(declare-fun x407 () Int)
(declare-fun x78 () Bool)
(declare-fun x1514 () Int)
(declare-fun x1135 () Int)
(declare-fun x950 () Int)
(declare-fun x704 () Int)
(declare-fun x1123 () x482)
(declare-fun x755 () Bool)
(declare-fun x651 () Int)
(declare-fun x283 () Int)
(declare-fun x432 () Int)
(declare-fun x656 () Int)
(declare-fun x1358 () Bool)
(declare-fun x783 () Int)
(declare-fun x1521 () Int)
(declare-fun x610 (x482) Int)
(declare-fun x1046 () Int)
(declare-fun x39 () Int)
(declare-fun x409 () Int)
(declare-fun x531 () Int)
(declare-fun x1202 () x482)
(declare-fun x100 () Int)
(declare-fun x1055 () Int)
(declare-fun x108 () Int)
(declare-fun x398 () Int)
(declare-fun x1442 () Int)
(declare-fun x1125 () Int)
(declare-fun x262 () Int)
(declare-fun x1493 () Int)
(declare-fun x1474 () Int)
(declare-fun x1066 () x482)
(declare-fun x771 () Int)
(declare-fun x1327 () Int)
(declare-fun x79 () Int)
(declare-fun x707 () x482)
(declare-fun x1244 () Int)
(declare-fun x1164 () Int)
(declare-fun x745 () Bool)
(declare-fun x803 () x482)
(declare-fun x624 () Int)
(declare-fun x196 () Int)
(declare-fun x1056 () Int)
(declare-fun x499 () Int)
(declare-fun x44 () Bool)
(declare-fun x1122 () Int)
(declare-fun x1060 () Bool)
(declare-fun x1315 (Int) Int)
(declare-fun x1037 () Int)
(declare-fun x1210 () Int)
(declare-fun x139 (Int) Int)
(declare-fun x1445 () Bool)
(declare-fun x335 () Int)
(declare-fun x866 () Int)
(declare-fun x1386 () Int)
(declare-fun x547 () Int)
(declare-fun x473 () Int)
(declare-fun x876 () Int)
(declare-fun x1513 () Int)
(declare-fun x636 () Int)
(declare-fun x259 () Int)
(declare-fun x231 () Int)
(declare-fun x1326 (Int) Int)
(declare-fun x709 () Int)
(declare-fun x641 () Int)
(declare-fun x214 () x482)
(declare-fun x609 () Bool)
(declare-fun x983 () Int)
(declare-fun x1313 () Bool)
(declare-fun x642 () Int)
(declare-fun x1397 () Int)
(declare-fun x103 () Int)
(declare-fun x56 () Int)
(declare-fun x874 () Bool)
(declare-fun x1335 () Int)
(declare-fun x35 () x482)
(declare-fun x895 () Int)
(declare-fun x573 () Int)
(declare-fun x320 () Int)
(declare-fun x101 () Int)
(declare-fun x375 () Int)
(declare-fun x788 () Int)
(declare-fun x621 () Int)
(declare-fun x637 () Int)
(declare-fun x505 () Int)
(declare-fun x1258 () Int)
(declare-fun x1417 () Int)
(declare-fun x948 () Int)
(declare-fun x1231 () x482)
(declare-fun x1307 () Int)
(declare-fun x69 () Bool)
(declare-fun x86 () Bool)
(declare-fun x1108 () Int)
(declare-fun x222 () Int)
(declare-fun x15 () Bool)
(declare-fun x494 (Int) Int)
(declare-fun x815 () Int)
(declare-fun x1235 () Int)
(declare-fun x498 () Int)
(declare-fun x75 () Bool)
(declare-fun x151 () Int)
(declare-fun x1291 () Bool)
(declare-fun x1143 () Int)
(declare-fun x1321 () Bool)
(declare-fun x1097 () x482)
(declare-fun x52 () Int)
(declare-fun x49 () Int)
(declare-fun x555 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x455 () Int)
(declare-fun x998 () Int)
(declare-fun x617 () Int)
(declare-fun x142 () x482)
(declare-fun x1090 () Int)
(declare-fun x117 () Bool)
(declare-fun x165 () Int)
(declare-fun x994 () Int)
(declare-fun x502 () Int)
(declare-fun x603 () Int)
(declare-fun x1253 () Int)
(declare-fun x572 () x482)
(declare-fun x242 () Int)
(declare-fun x698 () Int)
(declare-fun x96 () x482)
(declare-fun x147 () Bool)
(declare-fun x524 () Bool)
(declare-fun x1407 () Int)
(declare-fun x373 () Bool)
(declare-fun x361 () Int)
(declare-fun x553 () Int)
(declare-fun x1081 () Int)
(declare-fun x551 () Int)
(declare-fun x873 () Int)
(declare-fun x867 (x482) Int)
(declare-fun x12 () Int)
(declare-fun x662 () Bool)
(declare-fun x362 () Int)
(declare-fun x331 () Int)
(declare-fun x744 (Int) Int)
(declare-fun x1332 () Int)
(declare-fun x439 () Int)
(declare-fun x229 () Int)
(declare-fun x1165 () Int)
(declare-fun x838 () Int)
(declare-fun x1158 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x831 () Bool)
(declare-fun x140 () Int)
(declare-fun x465 (Int) Int)
(declare-fun x452 () Int)
(declare-fun x342 () Int)
(declare-fun x1401 () Bool)
(declare-fun x1121 () Int)
(declare-fun x1268 () Bool)
(declare-fun x200 () Int)
(declare-fun x475 () Bool)
(declare-fun x1496 () Int)
(declare-fun x1508 () Int)
(declare-fun x1015 () Int)
(declare-fun x787 () Int)
(declare-fun x1301 () Int)
(declare-fun x87 () Int)
(declare-fun x1009 () Int)
(declare-fun x300 (x482) Int)
(declare-fun x1494 () Int)
(declare-fun x5 () Int)
(declare-fun x129 () Int)
(declare-fun x170 () x482)
(declare-fun x462 () Int)
(declare-fun x149 () Bool)
(declare-fun x1429 () Int)
(declare-fun x333 () Int)
(declare-fun x947 () Bool)
(declare-fun x358 () Bool)
(declare-fun x365 () Int)
(declare-fun x1078 (Int) Int)
(declare-fun x1058 () Int)
(declare-fun x1325 () Int)
(declare-fun x841 () Int)
(declare-fun x334 () Int)
(declare-fun x1489 () Int)
(declare-fun x1065 (x482) Int)
(declare-fun x1083 () Int)
(declare-fun x1414 () Int)
(declare-fun x1187 () Int)
(declare-fun x421 () Int)
(declare-fun x601 () Int)
(declare-fun x158 () Int)
(declare-fun x934 () Int)
(declare-fun x306 () Int)
(declare-fun x24 () Int)
(declare-fun x353 () Int)
(declare-fun x246 () Int)
(declare-fun x1088 () Bool)
(declare-fun x364 (x482) Int)
(declare-fun x1101 () Int)
(declare-fun x1308 () Bool)
(declare-fun x119 () Int)
(declare-fun x963 () Int)
(declare-fun x1515 () Bool)
(declare-fun x935 () Int)
(declare-fun x1284 () Int)
(declare-fun x488 () x482)
(declare-fun x1054 () Int)
(declare-fun x203 () Int)
(declare-fun x818 () Int)
(declare-fun x1199 () Bool)
(declare-fun x1192 () Int)
(declare-fun x468 () Int)
(declare-fun x338 () Int)
(declare-fun x576 () Bool)
(declare-fun x47 () Int)
(declare-fun x303 () Bool)
(declare-fun x733 () Int)
(declare-fun x855 () Int)
(declare-fun x46 () Int)
(declare-fun x1439 () Int)
(declare-fun x85 () Int)
(declare-fun x115 () Int)
(declare-fun x1362 () Int)
(declare-fun x1013 () Bool)
(declare-fun x1453 () Int)
(declare-fun x512 () Int)
(declare-fun x926 () Int)
(declare-fun x1500 () Int)
(declare-fun x640 () Int)
(declare-fun x1520 () Int)
(declare-fun x1395 () Int)
(declare-fun x1421 (Int) Int)
(declare-fun x343 () Int)
(declare-fun x1064 () Int)
(declare-fun x606 () Int)
(declare-fun x808 () Int)
(declare-fun x595 () Int)
(declare-fun x1294 () Int)
(declare-fun x809 () Int)
(declare-fun x1126 () Int)
(declare-fun x1219 (Int) Int)
(declare-fun x1085 (x482) Int)
(declare-fun x1234 () Int)
(declare-fun x538 () Int)
(declare-fun x591 () Bool)
(declare-fun x586 () Int)
(declare-fun x27 () Int)
(declare-fun x257 () Int)
(declare-fun x1285 () Bool)
(declare-fun x915 () Int)
(declare-fun x137 () Int)
(declare-fun x620 () Int)
(declare-fun x933 () Int)
(declare-fun x1450 () Bool)
(declare-fun x18 () x482)
(declare-fun x224 () Bool)
(declare-fun x1459 () Int)
(declare-fun x110 () Int)
(declare-fun x1293 () Bool)
(declare-fun x1337 () Int)
(declare-fun x416 () Bool)
(declare-fun x168 () Int)
(declare-fun x972 () Int)
(declare-fun x293 () Int)
(declare-fun x23 () Int)
(declare-fun x1317 () Int)
(declare-fun x1059 () Int)
(declare-fun x833 () x482)
(declare-fun x916 () Int)
(declare-fun x272 () Int)
(declare-fun x834 () x482)
(declare-fun x659 () Bool)
(declare-fun x88 () Int)
(declare-fun x1255 () Int)
(declare-fun x296 () Int)
(declare-fun x1033 () Int)
(declare-fun x521 () Int)
(declare-fun x716 () Int)
(declare-fun x109 () Int)
(declare-fun x1259 () Int)
(declare-fun x490 () Int)
(declare-fun x1330 () Int)
(declare-fun x337 () Int)
(declare-fun x1361 () Int)
(declare-fun x54 () Bool)
(declare-fun x349 () Int)
(declare-fun x352 () Int)
(declare-fun x851 () Int)
(declare-fun x167 (Int) Int)
(declare-fun x870 () Int)
(declare-fun x691 () Int)
(declare-fun x1404 () Int)
(declare-fun x999 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x426 (Int) Int)
(declare-fun x14 () Int)
(declare-fun x1230 () Int)
(declare-fun x1303 () Int)
(declare-fun x1073 () Bool)
(declare-fun x1238 () Int)
(declare-fun x99 () Int)
(declare-fun x740 () Int)
(declare-fun x268 () Int)
(declare-fun x235 () Int)
(declare-fun x854 () Int)
(declare-fun x977 () Bool)
(declare-fun x686 () Int)
(declare-fun x124 () Int)
(declare-fun x564 () Int)
(declare-fun x1161 () Int)
(declare-fun x844 () Bool)
(declare-fun x327 () Int)
(declare-fun x957 () Int)
(declare-fun x778 () Bool)
(declare-fun x822 () Bool)
(declare-fun x1021 () Int)
(declare-fun x635 () Int)
(declare-fun x580 () Int)
(declare-fun x299 () Int)
(declare-fun x1019 () Int)
(declare-fun x1501 () Int)
(declare-fun x456 () Int)
(declare-fun x1481 () Bool)
(declare-fun x163 () Bool)
(declare-fun x910 () Int)
(declare-fun x132 () Int)
(declare-fun x830 () Bool)
(declare-fun x747 () Bool)
(declare-fun x397 () Int)
(declare-fun x430 () Int)
(declare-fun x1002 () Int)
(declare-fun x329 () Bool)
(declare-fun x1472 () Int)
(declare-fun x931 () Bool)
(declare-fun x753 () Int)
(declare-fun x1267 () Int)
(declare-fun x1320 () Bool)
(declare-fun x347 () Int)
(declare-fun x918 () Int)
(declare-fun x486 () Int)
(declare-fun x357 () Int)
(declare-fun x273 () Int)
(declare-fun x1480 () Int)
(declare-fun x668 () Int)
(declare-fun x1167 () Int)
(declare-fun x360 () Bool)
(declare-fun x946 () Int)
(declare-fun x269 () Bool)
(declare-fun x556 () Int)
(declare-fun x1001 () Int)
(declare-fun x965 () Int)
(declare-fun x427 () x482)
(declare-fun x848 () Int)
(declare-fun x1363 () Int)
(declare-fun x394 (Int) Int)
(declare-fun x750 () Int)
(declare-fun x927 () Int)
(declare-fun x901 () Int)
(declare-fun x845 () Int)
(declare-fun x779 () Int)
(declare-fun x993 () Int)
(declare-fun x859 () Int)
(declare-fun x577 () Int)
(declare-fun x903 () Int)
(declare-fun x493 () Int)
(declare-fun x226 () Int)
(declare-fun x1292 () Bool)
(declare-fun x1137 () Int)
(declare-fun x1032 () Int)
(declare-fun x435 () Int)
(declare-fun x379 () Int)
(declare-fun x1469 () Bool)
(declare-fun x128 () Int)
(declare-fun x1214 () Bool)
(declare-fun x1003 (Int) Int)
(declare-fun x1483 () Int)
(declare-fun x836 () Int)
(declare-fun x1348 () Int)
(declare-fun x113 () Bool)
(declare-fun x287 () Int)
(declare-fun x973 () Int)
(declare-fun x424 () Int)
(declare-fun x1191 () Int)
(declare-fun x1334 () Bool)
(declare-fun x66 () Int)
(declare-fun x1349 () Bool)
(declare-fun x120 (x482) Int)
(declare-fun x405 () Bool)
(declare-fun x975 (Int) Int)
(declare-fun x62 () x482)
(declare-fun x395 () Bool)
(declare-fun x318 () Int)
(declare-fun x540 () Int)
(declare-fun x1193 () Bool)
(declare-fun x33 () Int)
(declare-fun x1279 () x482)
(declare-fun x1236 (Int) Int)
(declare-fun x125 () Int)
(declare-fun x420 () Int)
(declare-fun x179 () Int)
(declare-fun x76 () x482)
(declare-fun x1485 () Int)
(declare-fun x366 () Int)
(declare-fun x354 () Int)
(declare-fun x583 () Bool)
(declare-fun x1257 () Int)
(declare-fun x823 () Int)
(declare-fun x879 () Int)
(declare-fun x114 () Bool)
(declare-fun x93 () Int)
(declare-fun x687 () Bool)
(declare-fun x1229 () Int)
(declare-fun x1086 () Int)
(declare-fun x98 () Int)
(declare-fun x1525 (Int) Int)
(declare-fun x102 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x1462 () Int)
(declare-fun x520 () Int)
(declare-fun x578 () Int)
(declare-fun x471 () Bool)
(declare-fun x1008 () Int)
(declare-fun x210 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x1107 (x482) Int)
(declare-fun x615 () Int)
(declare-fun x1207 () Int)
(declare-fun x557 () Int)
(declare-fun x1353 () Int)
(declare-fun x1409 () Int)
(declare-fun x1102 () Int)
(declare-fun x45 () Int)
(declare-fun x417 () Int)
(declare-fun x807 () x482)
(declare-fun x1206 (x482) Int)
(declare-fun x106 () Int)
(declare-fun x1389 () Bool)
(declare-fun x1260 () Int)
(declare-fun x145 () Bool)
(declare-fun x575 () Bool)
(declare-fun x951 () Int)
(declare-fun x1390 () Int)
(declare-fun x917 () Int)
(declare-fun x1430 () Bool)
(declare-fun x1273 () Int)
(declare-fun x959 () Int)
(declare-fun x377 () Int)
(declare-fun x997 () Int)
(declare-fun x1403 () Bool)
(declare-fun x940 () Int)
(declare-fun x1264 () Int)
(declare-fun x1437 () Int)
(declare-fun x677 () Int)
(declare-fun x1509 () Int)
(declare-fun x810 () Bool)
(declare-fun x31 () Int)
(declare-fun x321 () Int)
(declare-fun x135 () Int)
(declare-fun x1523 () Int)
(declare-fun x305 () Int)
(declare-fun x813 () Int)
(declare-fun x178 () Int)
(declare-fun x278 () Int)
(declare-fun x399 () Int)
(declare-fun x626 () Int)
(declare-fun x761 () Int)
(declare-fun x1227 () Int)
(declare-fun x1168 () Int)
(declare-fun x1089 () Bool)
(declare-fun x171 () Int)
(declare-fun x1302 () Int)
(declare-fun x1428 () Bool)
(declare-fun x570 () Bool)
(declare-fun x614 () Int)
(declare-fun x1225 () Bool)
(declare-fun x159 () Int)
(declare-fun x1211 () Int)
(declare-fun x332 () Bool)
(declare-fun x1181 () Int)
(declare-fun x790 () Int)
(declare-fun x853 () Int)
(declare-fun x291 () Int)
(declare-fun x544 () Int)
(declare-fun x249 () Int)
(declare-fun x608 () Int)
(declare-fun x1338 (Int) x482)
(declare-fun x893 () Int)
(declare-fun x457 () Int)
(declare-fun x1324 () Int)
(declare-fun x1309 () Int)
(declare-fun x437 (Int) Int)
(declare-fun x314 () Bool)
(declare-fun x768 () Int)
(declare-fun x205 () Int)
(declare-fun x415 () Bool)
(declare-fun x181 () Int)
(declare-fun x827 () x482)
(declare-fun x1076 () x482)
(declare-fun x396 () Bool)
(declare-fun x1148 () Int)
(declare-fun x1328 () Int)
(declare-fun x60 () Bool)
(declare-fun x705 () Int)
(declare-fun x643 () Int)
(declare-fun x1240 () Int)
(declare-fun x1094 () Int)
(declare-fun x726 () Bool)
(declare-fun x770 () Bool)
(declare-fun x450 () Bool)
(declare-fun x21 () Int)
(declare-fun x1061 () Bool)
(declare-fun x625 () Int)
(declare-fun x43 () Int)
(declare-fun x749 (Int) Int)
(declare-fun x1124 () Int)
(declare-fun x1190 () x482)
(declare-fun x517 () Bool)
(declare-fun x219 () Int)
(declare-fun x1388 () Int)
(declare-fun x1368 () Bool)
(declare-fun x1364 (x482) Int)
(declare-fun x330 () Int)
(declare-fun x485 () Bool)
(declare-fun x378 () Int)
(declare-fun x1047 () Int)
(declare-fun x1502 () Bool)
(declare-fun x1379 () Int)
(declare-fun x315 () Bool)
(declare-fun x356 () Int)
(declare-fun x766 () Int)
(declare-fun x1156 () Int)
(declare-fun x1226 () Int)
(declare-fun x131 () Int)
(declare-fun x937 () x482)
(declare-fun x678 () Int)
(declare-fun x911 () Int)
(declare-fun x1499 () Int)
(declare-fun x1256 () Int)
(declare-fun x1044 () Int)
(declare-fun x1274 () Int)
(declare-fun x806 () Int)
(declare-fun x313 () Int)
(declare-fun x1424 () Int)
(declare-fun x225 () Int)
(declare-fun x1189 () Int)
(declare-fun x552 (Int) Int)
(declare-fun x592 () Int)
(declare-fun x370 () Int)
(declare-fun x470 () Bool)
(declare-fun x602 () Int)
(declare-fun x1251 () Int)
(declare-fun x863 () Int)
(declare-fun x796 () Int)
(declare-fun x775 () Int)
(declare-fun x1503 () Int)
(declare-fun x1068 () Int)
(declare-fun x446 () Int)
(declare-fun x566 () Int)
(declare-fun x1299 () Int)
(declare-fun x104 () Int)
(declare-fun x902 () Bool)
(declare-fun x811 () Int)
(declare-fun x759 () Int)
(declare-fun x585 () Bool)
(declare-fun x1144 () Int)
(declare-fun x107 () Bool)
(declare-fun x221 (Int Int) Int)
(declare-fun x1411 (x482) Int)
(declare-fun x1071 () Int)
(declare-fun x136 () Bool)
(declare-fun x288 () Int)
(declare-fun x1043 (x482) Int)
(declare-fun x367 () x482)
(declare-fun x773 () Int)
(declare-fun x648 (Int) Int)
(declare-fun x856 () Int)
(declare-fun x897 () Int)
(declare-fun x311 () Int)
(declare-fun x647 () Int)
(declare-fun x255 () Int)
(declare-fun x514 () Int)
(declare-fun x1133 () Int)
(declare-fun x1074 () Int)
(declare-fun x819 () Bool)
(declare-fun x1380 (Int) Int)
(declare-fun x1277 () Int)
(declare-fun x541 () Int)
(declare-fun x1136 () Bool)
(declare-fun x63 () Bool)
(declare-fun x1010 () Int)
(declare-fun x846 () Int)
(declare-fun x1426 () Bool)
(declare-fun x805 () Int)
(declare-fun x400 () Bool)
(declare-fun x496 () Int)
(declare-fun x674 () Bool)
(declare-fun x393 () Int)
(declare-fun x1399 () Int)
(declare-fun x760 () Int)
(declare-fun x209 () Bool)
(declare-fun x1117 () Int)
(declare-fun x732 () Int)
(declare-fun x548 () Int)
(declare-fun x1040 () Int)
(declare-fun x667 () Int)
(declare-fun x882 () Bool)
(declare-fun x1174 () Int)
(declare-fun x661 () Int)
(declare-fun x418 () Int)
(declare-fun x528 () Int)
(declare-fun x702 () Bool)
(declare-fun x858 () Int)
(declare-fun x59 () x482)
(declare-fun x13 () Int)
(declare-fun x198 () x482)
(declare-fun x406 () Int)
(declare-fun x914 () Bool)
(declare-fun x509 () Int)
(declare-fun x20 () Int)
(declare-fun x758 () x482)
(declare-fun x748 (x482) Int)
(declare-fun x954 () Int)
(declare-fun x1150 () x482)
(declare-fun x460 (Int) Int)
(declare-fun x1115 () Int)
(declare-fun x282 () Int)
(declare-fun x307 () Int)
(declare-fun x1072 () Int)
(declare-fun x912 (Int) Int)
(declare-fun x48 () Bool)
(declare-fun x38 () Int)
(declare-fun x162 () Bool)
(declare-fun x1173 () Int)
(declare-fun x1048 () Int)
(declare-fun x706 () Bool)
(declare-fun x712 () Int)
(declare-fun x1367 () Int)
(declare-fun x414 () Bool)
(declare-fun x1084 () Int)
(declare-fun x798 () Int)
(declare-fun x1269 () Bool)
(declare-fun x629 () Bool)
(declare-fun x1016 () Int)
(declare-fun x924 () Int)
(declare-fun x81 () Int)
(declare-fun x507 () Int)
(declare-fun x1385 () Int)
(declare-fun x164 () Int)
(declare-fun x539 () Int)
(declare-fun x390 () Int)
(declare-fun x1387 () Int)
(declare-fun x1316 (x482) Int)
(declare-fun x634 () Bool)
(declare-fun x1188 () Int)
(declare-fun x284 () x482)
(declare-fun x767 () Int)
(declare-fun x734 () Int)
(declare-fun x1212 () Int)
(declare-fun x1011 () Bool)
(declare-fun x1031 () Int)
(declare-fun x336 () Int)
(declare-fun x1467 () Int)
(declare-fun x190 () Int)
(declare-fun x976 () Int)
(declare-fun x279 () Bool)
(declare-fun x185 () Bool)
(declare-fun x26 () Int)
(declare-fun x326 () Int)
(declare-fun x574 () Int)
(declare-fun x188 () Int)
(declare-fun x250 (Int) Int)
(declare-fun x581 () Int)
(declare-fun x1336 () Int)
(declare-fun x1204 () Int)
(declare-fun x1365 () Int)
(declare-fun x1373 (Int) Int)
(declare-fun x458 () Int)
(declare-fun x995 () Int)
(declare-fun x1468 () Int)
(declare-fun x1305 () Int)
(declare-fun x536 () Int)
(declare-fun x908 (x482) Int)
(declare-fun x483 () Bool)
(declare-fun x1018 () Int)
(declare-fun x328 () Int)
(declare-fun x727 () Bool)
(declare-fun x542 () Int)
(declare-fun x1381 (Int) Int)
(declare-fun x1443 () Int)
(declare-fun x793 () Int)
(declare-fun x410 (Int) Int)
(declare-fun x700 () Int)
(declare-fun x1201 () Int)
(declare-fun x984 () Bool)
(declare-fun x374 (x482) Int)
(declare-fun x440 () Int)
(declare-fun x34 () Int)
(declare-fun x829 () Bool)
(declare-fun x1252 () Int)
(declare-fun x6 () x482)
(declare-fun x153 () Int)
(declare-fun x67 () Int)
(declare-fun x989 () Bool)
(declare-fun x8 () Bool)
(declare-fun x774 () Int)
(declare-fun x285 () Int)
(declare-fun x2 () Int)
(declare-fun x1232 () Int)
(declare-fun x289 () Int)
(declare-fun x1163 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x319 () Int)
(declare-fun x1470 () Bool)
(declare-fun x1218 () Int)
(declare-fun x588 () Bool)
(declare-fun x7 () Int)
(declare-fun x1312 () Int)
(declare-fun x74 () Int)
(declare-fun x725 (x482) Int)
(declare-fun x936 () Int)
(declare-fun x1213 () Int)
(declare-fun x1027 () Bool)
(declare-fun x1106 () Int)
(declare-fun x73 () Int)
(declare-fun x1382 () Int)
(declare-fun x449 () Int)
(declare-fun x962 () Int)
(declare-fun x186 () Int)
(declare-fun x1290 () Int)
(declare-fun x1120 () Int)
(declare-fun x243 () Int)
(declare-fun x245 () Bool)
(declare-fun x25 () Int)
(declare-fun x582 () Int)
(declare-fun x1524 () Int)
(declare-fun x376 () Int)
(declare-fun x1422 () Int)
(declare-fun x680 () Int)
(declare-fun x899 () Int)
(declare-fun x537 () Bool)
(declare-fun x1372 () Int)
(declare-fun x1045 () Int)
(declare-fun x265 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x1410 () x482)
(declare-fun x1383 () Int)
(declare-fun x1331 () Int)
(declare-fun x184 (x482) Int)
(declare-fun x1465 () Int)
(declare-fun x785 () Int)
(declare-fun x1183 () Int)
(declare-fun x419 () Int)
(declare-fun x1095 () Int)
(declare-fun x1354 (x482) Int)
(declare-fun x607 () Int)
(declare-fun x1185 () Int)
(declare-fun x1198 () Int)
(declare-fun x133 () Bool)
(declare-fun x1221 () x482)
(declare-fun x1360 () Int)
(declare-fun x433 () Bool)
(declare-fun x277 () Int)
(declare-fun x961 () Int)
(declare-fun x1278 () Bool)
(declare-fun x1393 () Int)
(declare-fun x1491 () Bool)
(declare-fun x431 () Int)
(declare-fun x1434 () Bool)
(declare-fun x763 () Int)
(declare-fun x945 () Int)
(declare-fun x722 () x482)
(declare-fun x1343 () Int)
(declare-fun x597 () Int)
(declare-fun x825 () Int)
(declare-fun x567 (Int) Int)
(declare-fun x1034 () Int)
(declare-fun x238 () x482)
(declare-fun x392 () Bool)
(declare-fun x340 () Bool)
(declare-fun x83 () Int)
(declare-fun x1141 (x482) Int)
(declare-fun x1519 () Int)
(declare-fun x258 () Int)
(declare-fun x922 () Int)
(declare-fun x484 () Int)
(declare-fun x967 (x482) Int)
(declare-fun x1131 () Int)
(declare-fun x155 () Int)
(declare-fun x1344 () Int)
(declare-fun x1241 () x482)
(declare-fun x1376 () Bool)
(declare-fun x146 () Int)
(declare-fun x22 () Int)
(declare-fun x670 () Int)
(declare-fun x1412 () x482)
(declare-fun x717 () Bool)
(declare-fun x1151 () Int)
(declare-fun x980 () Bool)
(declare-fun x535 () Int)
(declare-fun x1184 () Bool)
(declare-fun x501 () Int)
(declare-fun x964 (Int) Int)
(declare-fun x1413 () Bool)
(declare-fun x491 () Int)
(declare-fun x508 () Int)
(declare-fun x428 () Int)
(declare-fun x64 () Int)
(declare-fun x247 () Int)
(declare-fun x765 (Int) Int)
(declare-fun x234 () Int)
(declare-fun x743 () Bool)
(declare-fun x628 () Int)
(declare-fun x518 () Bool)
(declare-fun x1062 () Int)
(declare-fun x451 () Int)
(declare-fun x1402 () Bool)
(declare-fun x1035 () Int)
(declare-fun x228 (Int) Int)
(declare-fun x275 () Int)
(declare-fun x1004 () Int)
(declare-fun x862 () Int)
(declare-fun x1104 () Int)
(declare-fun x204 () Int)
(declare-fun x890 () x482)
(declare-fun x1454 () Int)
(declare-fun x9 () Bool)
(declare-fun x1169 () Int)
(declare-fun x1145 () Bool)
(declare-fun x1314 () Int)
(declare-fun x1093 () Int)
(declare-fun x1005 () Int)
(declare-fun x1171 (Int) Int)
(declare-fun x1455 () Int)
(declare-fun x569 () Int)
(declare-fun x436 () Int)
(declare-fun x550 () Int)
(declare-fun x156 () Int)
(declare-fun x230 () Int)
(declare-fun x28 () Int)
(declare-fun x888 () Int)
(declare-fun x756 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x929 () Bool)
(declare-fun x526 () Int)
(declare-fun x118 () Int)
(declare-fun x1398 () Int)
(declare-fun x1020 () x482)
(declare-fun x316 () Int)
(declare-fun x769 () Int)
(declare-fun x495 () Int)
(declare-fun x1374 (Int) Int)
(declare-fun x689 (x482) Int)
(declare-fun x260 () Bool)
(declare-fun x325 () Int)
(declare-fun x1096 () x482)
(declare-fun x613 () Int)
(declare-fun x172 () Int)
(declare-fun x616 () Int)
(declare-fun x19 (Int) Int)
(declare-fun x942 () Bool)
(declare-fun x122 () Int)
(declare-fun x985 () Int)
(declare-fun x189 () Int)
(declare-fun x232 () Int)
(declare-fun x143 () Int)
(declare-fun x112 () Int)
(declare-fun x70 () Int)
(declare-fun x1452 () Int)
(declare-fun x1205 () Int)
(declare-fun x800 () Bool)
(declare-fun x208 () Int)
(declare-fun x1431 () Bool)
(declare-fun x1492 () Int)
(declare-fun x681 () Int)
(declare-fun x1024 () Int)
(declare-fun x1505 () Int)
(declare-fun x956 () Bool)
(declare-fun x463 () Bool)
(declare-fun x1079 () Int)
(declare-fun x872 () Int)
(declare-fun x932 () Int)
(declare-fun x177 () Int)
(declare-fun x411 () Int)
(declare-fun x1050 () Int)
(declare-fun x202 () Int)
(declare-fun x134 () Int)
(declare-fun x1128 () Int)
(declare-fun x41 () Int)
(declare-fun x605 () x482)
(declare-fun x30 () Int)
(declare-fun x826 () Int)
(declare-fun x1099 () Int)
(declare-fun x1378 () Bool)
(declare-fun x1262 () x482)
(declare-fun x144 (Int) Int)
(declare-fun x623 () Int)
(declare-fun x1356 () Int)
(declare-fun x1075 () Int)
(declare-fun x781 () Bool)
(declare-fun x986 () Bool)
(declare-fun x489 () Int)
(declare-fun x160 () Int)
(declare-fun x1139 () Int)
(declare-fun x762 () Int)
(declare-fun x1159 () Int)
(declare-fun x464 () Int)
(declare-fun x690 () Int)
(declare-fun x515 () Int)
(declare-fun x944 () Int)
(declare-fun x970 () Int)
(declare-fun x453 () Bool)
(declare-fun x633 () Int)
(declare-fun x653 () Bool)
(declare-fun x1030 () Int)
(declare-fun x864 () Int)
(declare-fun x1433 () Int)
(declare-fun x671 () Int)
(declare-fun x404 () Int)
(declare-fun x522 () Int)
(declare-fun x504 () Int)
(declare-fun x713 () Bool)
(declare-fun x281 (x482) Int)
(declare-fun x92 () Int)
(declare-fun x256 () Int)
(declare-fun x1014 () Bool)
(declare-fun x1448 () Int)
(declare-fun x990 () Int)
(declare-fun x251 () Bool)
(declare-fun x1023 () Int)
(declare-fun x77 () Int)
(declare-fun x434 () x482)
(declare-fun x1069 () Int)
(declare-fun x527 () Bool)
(declare-fun x558 () Int)
(declare-fun x403 (Int) Int)
(declare-fun x649 () Int)
(declare-fun x1517 () Int)
(declare-fun x42 () Int)
(declare-fun x176 () Int)
(declare-fun x1239 () Int)
(declare-fun x1352 () x482)
(declare-fun x193 () Int)
(declare-fun x860 () Int)
(declare-fun x1112 () Int)
(declare-fun x632 () Int)
(declare-fun x478 () Bool)
(declare-fun x271 (Int) Int)
(declare-fun x728 () Bool)
(declare-fun x599 () Int)
(declare-fun x1275 () Int)
(declare-fun x402 () Bool)
(declare-fun x1486 () Int)
(declare-fun x1406 () Int)
(declare-fun x1200 () Int)
(declare-fun x1 () Int)
(declare-fun x646 () Bool)
(declare-fun x40 () Int)
(declare-fun x1215 () Int)
(declare-fun x1498 () Int)
(declare-fun x441 () x482)
(declare-fun x672 () Int)
(declare-fun x304 () Int)
(declare-fun x348 (Int) Int)
(declare-fun x1342 () Int)
(declare-fun x627 () Int)
(declare-fun x1070 (Int Int) Int)
(declare-fun x559 () Int)
(declare-fun x1261 () Int)
(declare-fun x1460 () Int)
(declare-fun x792 () Int)
(declare-fun x898 () Int)
(declare-fun x454 () Bool)
(declare-fun x584 () Int)
(declare-fun x549 () Int)
(declare-fun x952 (Int) Int)
(declare-fun x1329 () Bool)
(declare-fun x292 () Int)
(declare-fun x545 () Bool)
(declare-fun x1175 () Int)
(declare-fun x896 () x482)
(declare-fun x4 () Bool)
(declare-fun x71 () Int)
(declare-fun x1473 () Int)
(declare-fun x1203 () Int)
(declare-fun x302 () Bool)
(declare-fun x887 (Int) Int)
(declare-fun x346 () Int)
(declare-fun x111 () Int)
(declare-fun x372 () Int)
(declare-fun x1427 () Int)
(declare-fun x919 () Int)
(declare-fun x95 () Bool)
(declare-fun x1162 () Int)
(declare-fun x850 () Int)
(declare-fun x152 () Int)
(declare-fun x868 () x482)
(declare-fun x939 () Int)
(declare-fun x1370 () Int)
(declare-fun x1153 () Int)
(declare-fun x369 () Bool)
(declare-fun x150 (Int) Int)
(declare-fun x32 () Int)
(declare-fun x786 () Int)
(declare-fun x884 () Int)
(declare-fun x157 () Bool)
(declare-fun x17 () Bool)
(declare-fun x824 () Int)
(declare-fun x1118 () Int)
(declare-fun x1017 () Int)
(declare-fun x339 () Int)
(declare-fun x1375 (x482) Int)
(declare-fun x82 () Int)
(declare-fun x443 () Int)
(declare-fun x197 () Int)
(declare-fun x1000 () Int)
(declare-fun x191 () Int)
(declare-fun x1012 (x482) Int)
(declare-fun x467 () Int)
(declare-fun x276 () Int)
(declare-fun x673 () Int)
(declare-fun x84 (Int) Int)
(declare-fun x799 () Int)
(declare-fun x843 () Int)
(declare-fun x223 () Int)
(declare-fun x913 () Int)
(declare-fun x1347 () Int)
(declare-fun x1053 () Int)
(declare-fun x1394 () Int)
(declare-fun x1091 () Int)
(declare-fun x1209 () Int)
(declare-fun x604 () Int)
(declare-fun x979 () x482)
(declare-fun x1166 () Int)
(declare-fun x638 () x482)
(declare-fun x941 () Int)
(declare-fun x472 () Int)
(declare-fun x657 () Int)
(declare-fun x849 () Int)
(declare-fun x731 () Int)
(declare-fun x1249 () Int)
(declare-fun x387 () Int)
(declare-fun x1208 () Int)
(declare-fun x782 () Int)
(declare-fun x216 () Int)
(declare-fun x1357 () Int)
(declare-fun x839 () Int)
(declare-fun x310 () Int)
(declare-fun x516 () Int)
(declare-fun x350 () Bool)
(declare-fun x192 () Int)
(declare-fun x738 () Bool)
(declare-fun x116 () Int)
(declare-fun x523 () x482)
(declare-fun x386 () Int)
(declare-fun x921 () Bool)
(declare-fun x1105 () Int)
(declare-fun x412 () Int)
(declare-fun x391 () Int)
(declare-fun x264 () Int)
(declare-fun x684 () Int)
(declare-fun x596 (Int) Int)
(declare-fun x1087 () Int)
(declare-fun x1304 () Int)
(declare-fun x211 (Int) Int)
(declare-fun x724 () Int)
(declare-fun x1512 () Int)
(declare-fun x816 () Bool)
(declare-fun x237 () Int)
(declare-fun x1298 () Bool)
(declare-fun x837 () Int)
(declare-fun x266 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x741 () Int)
(declare-fun x89 () Int)
(declare-fun x148 () Bool)
(declare-fun x1511 () Int)
(declare-fun x923 () Bool)
(declare-fun x126 () Int)
(declare-fun x480 () x482)
(declare-fun x1482 () Int)
(declare-fun x481 () Int)
(declare-fun x298 () Bool)
(define-fun x169 ((x482 x482) (x241 Int)) x482 (ite ((_ is x737) x482) (x737 (x1026 x482) (+ (x57 x482) x241)) (ite ((_ is x665) x482) (x665 (x1418 x482) (x735 x482) (+ (x384 x482) x241)) (x497 (+ (x448 x482) x241)))))
(define-fun x58 ((x286 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286) (<= 0 x286)) x286 (- x286 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x877 ((x286 Int)) Int (ite (and (< x286 0) (>= x286 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x286 115792089237316195423570985008687907853269984665640564039457584007913129639936) x286))
(define-fun x1052 ((x1355 Int)) Bool (and (<= 0 x1355) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1355)))
(define-fun x1197 ((x1355 Int)) Bool (and (= (x221 x1355 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1355) (= (x221 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1355) x1355)))
(define-fun x240 ((x1355 Int)) Bool (and (= 0 (x221 0 x1355)) (= 0 (x221 x1355 0))))
(define-fun x988 ((x1355 Int)) Bool (= (x221 x1355 x1355) x1355))
(define-fun x955 ((x1355 Int)) Bool (and (x988 x1355) (x1197 x1355) (x240 x1355)))
(define-fun x308 ((x1355 Int)) Bool (= (x221 18446744073709551615 (x221 18446744073709551615 x1355)) (x221 18446744073709551615 x1355)))
(define-fun x388 ((x1355 Int)) Bool (=> (and (< x1355 18446744073709551616) (>= x1355 0)) (= x1355 (x221 18446744073709551615 x1355))))
(define-fun x894 ((x1355 Int)) Bool (=> (= x1355 (x221 18446744073709551615 x1355)) (and (< x1355 18446744073709551616) (>= x1355 0))))
(define-fun x828 ((x1355 Int)) Bool (=> (and (>= x1355 18446744073709551616) (< x1355 36893488147419103232)) (= (x221 18446744073709551615 x1355) (- x1355 18446744073709551616))))
(define-fun x534 ((x1355 Int) (x511 Int)) Bool (and (<= 0 x511) (= (+ (* 18446744073709551616 x511) (x221 18446744073709551615 x1355)) x1355)))
(define-fun x50 ((x1355 Int) (x1132 Int)) Bool (and (x388 x1355) (x308 x1355) (x894 x1355) (x828 x1355) (x534 x1355 x1132)))
(define-fun x37 ((x1355 Int) (x511 Int)) Bool (= (x221 x1355 x511) (x221 x511 x1355)))
(define-fun x905 ((x1355 Int) (x511 Int)) Bool (and (=> (<= 0 x511) (<= (x221 x1355 x511) x511)) (>= (x221 x1355 x511) 0) (=> (>= x1355 0) (<= (x221 x1355 x511) x1355))))
(define-fun x953 ((x1355 Int) (x511 Int)) Bool (and (x905 x1355 x511) (x37 x1355 x511)))
(define-fun x812 ((x1355 Int) (x1132 Int)) Bool (and (x953 x1355 18446744073709551615) (x50 x1355 x1132)))
(define-fun x736 ((x1355 Int)) Bool (= (x221 20282409603651670423947251286015 x1355) (x221 20282409603651670423947251286015 (x221 20282409603651670423947251286015 x1355))))
(define-fun x571 ((x1355 Int)) Bool (=> (and (<= 0 x1355) (< x1355 20282409603651670423947251286016)) (= (x221 20282409603651670423947251286015 x1355) x1355)))
(define-fun x408 ((x1355 Int)) Bool (=> (= x1355 (x221 20282409603651670423947251286015 x1355)) (and (>= x1355 0) (> 20282409603651670423947251286016 x1355))))
(define-fun x1247 ((x1355 Int)) Bool (=> (and (<= 20282409603651670423947251286016 x1355) (> 40564819207303340847894502572032 x1355)) (= (x221 20282409603651670423947251286015 x1355) (- x1355 20282409603651670423947251286016))))
(define-fun x16 ((x1355 Int) (x511 Int)) Bool (and (= (+ (x221 20282409603651670423947251286015 x1355) (* 20282409603651670423947251286016 x511)) x1355) (<= 0 x511)))
(define-fun x1142 ((x1355 Int) (x1132 Int)) Bool (and (x736 x1355) (x408 x1355) (x1247 x1355) (x571 x1355) (x16 x1355 x1132)))
(define-fun x966 ((x1355 Int) (x1132 Int)) Bool (and (x1142 x1355 x1132) (x953 x1355 20282409603651670423947251286015)))
(define-fun x1080 ((x1355 Int)) Bool (= (x221 1461501637330902918203684832716283019655932542975 (x221 1461501637330902918203684832716283019655932542975 x1355)) (x221 1461501637330902918203684832716283019655932542975 x1355)))
(define-fun x90 ((x1355 Int)) Bool (=> (and (< x1355 1461501637330902918203684832716283019655932542976) (<= 0 x1355)) (= x1355 (x221 1461501637330902918203684832716283019655932542975 x1355))))
(define-fun x94 ((x1355 Int)) Bool (=> (= x1355 (x221 1461501637330902918203684832716283019655932542975 x1355)) (and (>= x1355 0) (< x1355 1461501637330902918203684832716283019655932542976))))
(define-fun x1194 ((x1355 Int)) Bool (=> (and (< x1355 2923003274661805836407369665432566039311865085952) (<= 1461501637330902918203684832716283019655932542976 x1355)) (= (- x1355 1461501637330902918203684832716283019655932542976) (x221 1461501637330902918203684832716283019655932542975 x1355))))
(define-fun x1147 ((x1355 Int) (x511 Int)) Bool (and (<= 0 x511) (= (+ (x221 1461501637330902918203684832716283019655932542975 x1355) (* x511 1461501637330902918203684832716283019655932542976)) x1355)))
(define-fun x715 ((x1355 Int) (x1132 Int)) Bool (and (x1080 x1355) (x1147 x1355 x1132) (x94 x1355) (x1194 x1355) (x90 x1355)))
(define-fun x1392 ((x1355 Int) (x1132 Int)) Bool (and (x953 x1355 1461501637330902918203684832716283019655932542975) (x715 x1355 x1132)))
(define-fun x546 ((x1355 Int)) Bool (= (x221 255 (x221 255 x1355)) (x221 255 x1355)))
(define-fun x1345 ((x1355 Int)) Bool (=> (and (<= 0 x1355) (> 256 x1355)) (= (x221 255 x1355) x1355)))
(define-fun x1160 ((x1355 Int)) Bool (=> (= x1355 (x221 255 x1355)) (and (<= 0 x1355) (< x1355 256))))
(define-fun x1369 ((x1355 Int)) Bool (=> (and (>= x1355 256) (< x1355 512)) (= (- x1355 256) (x221 255 x1355))))
(define-fun x65 ((x1355 Int) (x511 Int)) Bool (and (<= 0 x511) (= (+ (* x511 256) (x221 255 x1355)) x1355)))
(define-fun x1438 ((x1355 Int) (x1132 Int)) Bool (and (x1345 x1355) (x1160 x1355) (x65 x1355 x1132) (x1369 x1355) (x546 x1355)))
(define-fun x1134 ((x1355 Int) (x1132 Int)) Bool (and (x1438 x1355 x1132) (x953 x1355 255)))
(define-fun x10 ((x1355 Int)) Bool (= (ite (< (x221 x1355 20282409603651670423947251286015) 10141204801825835211973625643008) (x221 x1355 20282409603651670423947251286015) (+ (x221 x1355 20282409603651670423947251286015) 115792089237316195423570985008687907853269984645358154435805913583965878353920)) (x1381 x1355)))
(define-fun x447 ((x1355 Int)) Bool (= (x221 340282366920938463463374607431768211455 x1355) (x221 340282366920938463463374607431768211455 (x221 340282366920938463463374607431768211455 x1355))))
(define-fun x1475 ((x1355 Int)) Bool (=> (and (>= x1355 0) (> 340282366920938463463374607431768211456 x1355)) (= (x221 340282366920938463463374607431768211455 x1355) x1355)))
(define-fun x658 ((x1355 Int)) Bool (=> (= x1355 (x221 340282366920938463463374607431768211455 x1355)) (and (<= 0 x1355) (> 340282366920938463463374607431768211456 x1355))))
(define-fun x201 ((x1355 Int)) Bool (=> (and (> 680564733841876926926749214863536422912 x1355) (>= x1355 340282366920938463463374607431768211456)) (= (- x1355 340282366920938463463374607431768211456) (x221 340282366920938463463374607431768211455 x1355))))
(define-fun x1098 ((x1355 Int) (x511 Int)) Bool (and (= x1355 (+ (* x511 340282366920938463463374607431768211456) (x221 340282366920938463463374607431768211455 x1355))) (<= 0 x511)))
(define-fun x600 ((x1355 Int) (x1132 Int)) Bool (and (x447 x1355) (x658 x1355) (x1098 x1355 x1132) (x1475 x1355) (x201 x1355)))
(define-fun x729 ((x1355 Int) (x1132 Int)) Bool (and (x600 x1355 x1132) (x953 x1355 340282366920938463463374607431768211455)))
(define-fun x840 ((x1355 Int)) Bool (= (x221 65535 x1355) (x221 65535 (x221 65535 x1355))))
(define-fun x987 ((x1355 Int)) Bool (=> (and (>= x1355 0) (< x1355 65536)) (= x1355 (x221 65535 x1355))))
(define-fun x380 ((x1355 Int)) Bool (=> (= (x221 65535 x1355) x1355) (and (< x1355 65536) (>= x1355 0))))
(define-fun x1300 ((x1355 Int)) Bool (=> (and (< x1355 131072) (<= 65536 x1355)) (= (- x1355 65536) (x221 65535 x1355))))
(define-fun x974 ((x1355 Int) (x511 Int)) Bool (and (= x1355 (+ (* x511 65536) (x221 65535 x1355))) (>= x511 0)))
(define-fun x721 ((x1355 Int) (x1132 Int)) Bool (and (x1300 x1355) (x840 x1355) (x987 x1355) (x974 x1355 x1132) (x380 x1355)))
(define-fun x1446 ((x1355 Int) (x1132 Int)) Bool (and (x721 x1355 x1132) (x953 x1355 65535)))
(define-fun x1006 ((x1355 Int)) Bool (= (x221 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1355) (x221 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x221 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1355))))
(define-fun x943 ((x1355 Int)) Bool (=> (and (>= x1355 0) (< x1355 32)) (= 0 (x221 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1355))))
(define-fun x461 ((x1355 Int) (x511 Int) (x1457 Int) (x891 Int)) Bool (and (< x1457 3618502788666131106986593281521497120414687020801267626233049500247285301248) (<= 0 x1457) (< x511 32) (>= x511 0) (< x891 1) (= x1355 (+ (* 32 x1457) x511 (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x891))) (<= 0 x891) (= (x221 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1355) (* 32 x1457))))
(define-fun x814 ((x1355 Int) (x1420 Int) (x821 Int) (x233 Int)) Bool (and (x943 x1355) (x461 x1355 x1420 x821 x233) (x1006 x1355)))
(define-fun x883 ((x1355 Int) (x1420 Int) (x821 Int) (x233 Int)) Bool (and (x953 x1355 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x814 x1355 x1420 x821 x233)))
(define-fun x618 ((x1355 Int)) Bool (= (x1373 x1355) (ite (< (x221 x1355 340282366920938463463374607431768211455) 170141183460469231731687303715884105728) (x221 x1355 340282366920938463463374607431768211455) (+ (x221 x1355 340282366920938463463374607431768211455) 115792089237316195423570985008687907852929702298719625575994209400481361428480))))
(define-fun x506 ((x80 Int)) Int (ite (= x892 x80) x179 (x144 x80)))
(define-fun x1254 ((x80 Int)) Int (ite (= x80 x1363) x313 (x437 x80)))
(define-fun x1476 ((x80 Int)) Int (ite (= x80 x501) x459 (x1525 x80)))
(define-fun x683 ((x80 Int)) Int (ite (= x1108 x80) x595 (x1236 x80)))
(define-fun x1007 ((x80 Int)) Int (ite (= x80 x505) x1138 (x267 x80)))
(define-fun x1038 ((x80 Int)) Int (ite (= x80 x963) x436 (x19 x80)))
(define-fun x1440 ((x80 Int)) Int (ite (= x80 x81) x913 (x1171 x80)))
(define-fun x1243 ((x80 Int)) Int (ite (= x80 x1001) x660 (x1326 x80)))
(define-fun x442 ((x80 Int)) Int (ite (= x80 288) x1495 (x84 x80)))
(define-fun x751 ((x80 Int)) Int (ite (= x80 320) x1118 (x442 x80)))
(define-fun x371 ((x80 Int)) Int (ite (= x80 352) x1479 (x751 x80)))
(define-fun x195 ((x80 Int)) Int (ite (= x80 384) x383 (x371 x80)))
(define-fun x594 ((x80 Int)) Int (ite (= 416 x80) x1303 (x195 x80)))
(define-fun x784 ((x80 Int)) Int (ite (= 288 x80) x1255 (x84 x80)))
(define-fun x1490 ((x80 Int)) Int (ite (= x80 320) x1071 (x784 x80)))
(define-fun x68 ((x80 Int)) Int (ite (= x80 352) x1309 (x1490 x80)))
(define-fun x218 ((x80 Int)) Int (ite (= 384 x80) x859 (x68 x80)))
(define-fun x772 ((x80 Int)) Int (ite (= 416 x80) x620 (x218 x80)))
(define-fun x645 ((x80 Int)) Int (ite (= 128 x80) x507 (x596 x80)))
(define-fun x154 ((x80 Int)) Int (ite (= 160 x80) x20 (x645 x80)))
(define-fun x422 ((x80 Int)) Int (ite (= 192 x80) x1522 (x154 x80)))
(define-fun x1288 ((x80 Int)) Int (ite (= 224 x80) x547 (x422 x80)))
(define-fun x1456 ((x80 Int)) Int (ite (= 256 x80) x61 (x1288 x80)))
(define-fun x1146 ((x80 Int)) Int (ite (= x1299 x80) x125 (x410 x80)))
(define-fun x991 ((x80 Int)) Int (ite (= x1391 x80) x1336 (x1146 x80)))
(define-fun x676 ((x80 Int)) Int (ite (= x1099 x80) x366 (x991 x80)))
(define-fun x123 ((x80 Int)) Int (ite (= x1448 x80) x421 (x676 x80)))
(define-fun x1113 ((x80 Int)) Int (ite (= x80 x1057) x1032 (x123 x80)))
(define-fun x992 ((x80 Int)) Int (ite (= x80 0) x520 (x938 x80)))
(define-fun x861 ((x80 Int)) Int (ite (= x80 32) x522 (x992 x80)))
(define-fun x1350 ((x80 Int)) Int (ite (= x80 64) x940 (x861 x80)))
(define-fun x958 ((x80 Int)) Int (ite (= 96 x80) x1328 (x1350 x80)))
(define-fun x563 ((x80 Int)) Int (ite (= 128 x80) x326 (x958 x80)))
(define-fun x382 ((x80 Int)) Int (ite (= x678 x80) x1045 (x1380 x80)))
(define-fun x682 ((x80 Int)) Int (ite (= x80 x611) x1016 (x494 x80)))
(define-fun x477 ((x80 Int)) Int (ite (= x80 x1317) x1205 (x912 x80)))
(define-fun x1092 ((x80 Int)) Int (ite (= x80 x1496) x1245 (x271 x80)))
(define-fun x1510 ((x80 Int)) Int (ite (= x587 x80) x288 (x167 x80)))
(define-fun x368 ((x80 Int)) Int (ite (= x80 x708) x1215 (x561 x80)))
(define-fun x1281 ((x80 Int)) Int (ite (= x80 x1484) x536 (x139 x80)))
(define-fun x261 ((x80 Int)) Int (ite (= x80 x307) x917 (x744 x80)))
(define-fun x930 ((x80 x482)) Int (ite (= x827 x80) x1062 (x1085 x80)))
(define-fun x1177 ((x80 Int)) Int (ite (= 128 x80) x569 (x426 x80)))
(define-fun x492 ((x80 Int)) Int (ite (= x80 160) x1302 (x1177 x80)))
(define-fun x797 ((x80 Int)) Int (ite (= 192 x80) x146 (x492 x80)))
(define-fun x791 ((x80 Int)) Int (ite (= x80 224) x1201 (x797 x80)))
(define-fun x29 ((x80 Int)) Int (ite (= 256 x80) x1397 (x791 x80)))
(define-fun x1306 ((x80 Int)) Int (ite (= 128 x80) x1159 (x426 x80)))
(define-fun x1140 ((x80 Int)) Int (ite (= x80 160) x356 (x1306 x80)))
(define-fun x871 ((x80 Int)) Int (ite (= 192 x80) x173 (x1140 x80)))
(define-fun x429 ((x80 Int)) Int (ite (= 224 x80) x387 (x871 x80)))
(define-fun x187 ((x80 Int)) Int (ite (= x80 256) x1275 (x429 x80)))
(define-fun x590 ((x80 Int)) Int (ite (= 128 x80) x507 (x964 x80)))
(define-fun x1042 ((x80 Int)) Int (ite (= 160 x80) x973 (x590 x80)))
(define-fun x341 ((x80 Int)) Int (ite (= x80 192) x1522 (x1042 x80)))
(define-fun x1282 ((x80 Int)) Int (ite (= 224 x80) x547 (x341 x80)))
(define-fun x1157 ((x80 Int)) Int (ite (= 256 x80) x61 (x1282 x80)))
(define-fun x317 ((x80 Int)) Int (ite (= x512 x80) x452 (x211 x80)))
(define-fun x679 ((x80 Int)) Int (ite (= x80 x934) x242 (x317 x80)))
(define-fun x1216 ((x80 Int)) Int (ite (= x603 x80) x789 (x679 x80)))
(define-fun x175 ((x80 Int)) Int (ite (= x334 x80) x1455 (x1216 x80)))
(define-fun x166 ((x80 Int)) Int (ite (= x617 x80) x710 (x175 x80)))
(define-fun x565 ((x80 Int)) Int (ite (= x80 0) x650 (x887 x80)))
(define-fun x904 ((x80 Int)) Int (ite (= 32 x80) x343 (x565 x80)))
(define-fun x1377 ((x80 Int)) Int (ite (= x80 64) x1433 (x904 x80)))
(define-fun x213 ((x80 Int)) Int (ite (= 96 x80) x42 (x1377 x80)))
(define-fun x971 ((x80 Int)) Int (ite (= x80 128) x1346 (x213 x80)))
(define-fun x1103 ((x80 Int)) Int (ite (= x80 x1299) x996 (x410 x80)))
(define-fun x639 ((x80 Int)) Int (ite (= x87 x80) x89 (x1103 x80)))
(define-fun x1220 ((x80 Int)) Int (ite (= x670 x80) x257 (x639 x80)))
(define-fun x487 ((x80 Int)) Int (ite (= x592 x80) x1294 (x1220 x80)))
(define-fun x1270 ((x80 Int)) Int (ite (= x464 x80) x1167 (x487 x80)))
(define-fun x666 ((x80 Int)) Int (ite (and x478 x585) (x1113 x80) (x1270 x80)))
(define-fun x344 ((x80 Int)) Int (ite x1265 (x666 x80) (x552 x80)))
(define-fun x589 ((x80 Int)) Int (ite (= x80 x512) x491 (x211 x80)))
(define-fun x438 ((x80 Int)) Int (ite (= x80 x1112) x838 (x589 x80)))
(define-fun x949 ((x80 Int)) Int (ite (= x80 x700) x553 (x438 x80)))
(define-fun x36 ((x80 Int)) Int (ite (= x1259 x80) x893 (x949 x80)))
(define-fun x878 ((x80 Int)) Int (ite (= x1289 x80) x1367 (x36 x80)))
(define-fun x1119 ((x80 Int)) Int (ite (and x921 x999) (x166 x80) (x878 x80)))
(define-fun x1297 ((x80 Int)) Int (ite x1507 (x1119 x80) (x1078 x80)))
(define-fun x1129 ((x80 Int)) Int (ite (and x1225 (not x1184)) (x552 x80) (x344 x80)))
(define-fun x802 ((x80 Int)) Int (ite x251 (ite (and (not x210) x414) (x1078 x80) (x1297 x80)) (x1078 x80)))
(define-fun x236 ((x80 Int)) Int (ite (= x508 x80) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x802 x80)))
(define-fun x612 ((x80 Int)) Int (ite (= x1091 x80) x285 (x236 x80)))
(define-fun x1341 ((x80 x482)) Int (ite (= x80 x707) x222 (x1043 x80)))
(define-fun x91 ((x80 Int)) Int (ite (= x80 0) 1 (x1421 x80)))
(define-fun x294 ((x80 Int)) Int (ite (= x80 x508) 1 (x567 x80)))
(define-fun x1114 ((x80 Int)) Int (ite (= x80 128) x507 (x975 x80)))
(define-fun x217 ((x80 Int)) Int (ite (= 160 x80) x961 (x1114 x80)))
(define-fun x1179 ((x80 Int)) Int (ite (= 192 x80) x1522 (x217 x80)))
(define-fun x1271 ((x80 Int)) Int (ite (= 224 x80) x547 (x1179 x80)))
(define-fun x206 ((x80 Int)) Int (ite (= x80 256) x61 (x1271 x80)))
(define-fun x530 ((x80 Int)) Int (ite (= 0 x80) x135 (x749 x80)))
(define-fun x1109 ((x80 Int)) Int (ite (= 32 x80) x1248 (x530 x80)))
(define-fun x1195 ((x80 Int)) Int (ite (= 64 x80) x995 (x1109 x80)))
(define-fun x1110 ((x80 Int)) Int (ite (= x80 96) x849 (x1195 x80)))
(define-fun x1504 ((x80 Int)) Int (ite (= x80 128) x1047 (x1110 x80)))
(define-fun x425 ((x80 Int)) Int (ite (= 128 x80) x507 (x394 x80)))
(define-fun x174 ((x80 Int)) Int (ite (= x80 160) x493 (x425 x80)))
(define-fun x215 ((x80 Int)) Int (ite (= 192 x80) x1522 (x174 x80)))
(define-fun x900 ((x80 Int)) Int (ite (= 224 x80) x547 (x215 x80)))
(define-fun x274 ((x80 Int)) Int (ite (= 256 x80) x61 (x900 x80)))
(define-fun x401 ((x80 Int)) Int (ite (= 0 x80) x323 (x150 x80)))
(define-fun x1223 ((x80 Int)) Int (ite (= x80 32) x312 (x401 x80)))
(define-fun x1233 ((x80 Int)) Int (ite (= x80 64) x922 (x1223 x80)))
(define-fun x928 ((x80 Int)) Int (ite (= x80 96) x1425 (x1233 x80)))
(define-fun x1028 ((x80 Int)) Int (ite (= x80 128) x1183 (x928 x80)))
(define-fun x263 ((x80 Int)) Int (ite (= x80 128) x621 (x228 x80)))
(define-fun x1516 ((x80 Int)) Int (ite (= 224 x80) x719 (x1374 x80)))
(define-fun x194 ((x80 Int)) Int (ite (= 256 x80) x1069 (x322 x80)))
(define-fun x1180 ((x80 Int)) Int (ite (= x80 128) x207 (x263 x80)))
(define-fun x466 ((x80 Int)) Int (ite (= x80 192) x972 (x765 x80)))
(define-fun x720 ((x80 Int)) Int (ite (= 192 x80) x1509 (x765 x80)))
(define-fun x880 ((x80 Int)) Int (ite (and x1237 x405 x248) (x720 x80) (x466 x80)))
(define-fun x290 ((x80 Int)) Int (ite (= 160 x80) x1277 (x460 x80)))
(define-fun x644 ((x80 Int)) Int (ite (= 160 x80) x197 (x460 x80)))
(define-fun x55 ((x80 Int)) Int (ite (and (not x1319) x1358) (x648 x80) (ite x1027 (x1129 x80) (x552 x80))))
(define-fun x654 ((x80 Int)) Int (ite (= x80 x1034) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x55 x80)))
(define-fun x780 ((x80 Int)) Int (ite (= x681 x80) x951 (x654 x80)))
(define-fun x1444 ((x80 Int)) Int (ite (= x80 x1033) x27 (x780 x80)))
(define-fun x1384 ((x80 x482)) Int (ite (= x80 x833) x1000 (x1043 x80)))
(define-fun x1149 ((x80 Int)) Int (ite (= 0 x80) 1 (x348 x80)))
(define-fun x1339 ((x80 Int)) Int (ite (= x80 x1034) 1 (x1444 x80)))
(define-fun x739 ((x80 Int)) Int (ite (and x248 x1469 x1237) (x644 x80) (x290 x80)))
(define-fun x1029 ((x80 x482)) Int (ite (= x1020 x80) x7 (x1316 x80)))
(define-fun x669 ((x80 x482)) Int (ite (= x1020 x80) x554 (x689 x80)))
(define-fun x655 ((x80 x482)) Int (ite (= x1221 x80) x33 (x689 x80)))
(define-fun x1186 ((x80 x482)) Int (ite x1334 (x655 x80) (x689 x80)))
(define-fun x764 ((x80 Int)) Int (ite (= 128 x80) x615 (x161 x80)))
(define-fun x1449 ((x80 Int)) Int (ite (= 160 x80) x1304 (x764 x80)))
(define-fun x1333 ((x80 Int)) Int (ite (= x80 192) x378 (x1449 x80)))
(define-fun x1323 ((x80 Int)) Int (ite (= 224 x80) x100 (x1333 x80)))
(define-fun x663 ((x80 Int)) Int (ite (= 256 x80) x759 (x1323 x80)))
(define-fun x500 ((x80 Int)) Int (ite (= 0 x80) x631 (x938 x80)))
(define-fun x804 ((x80 Int)) Int (ite (= 32 x80) x199 (x500 x80)))
(define-fun x920 ((x80 Int)) Int (ite (= x80 64) x856 (x804 x80)))
(define-fun x141 ((x80 Int)) Int (ite (= 96 x80) x186 (x920 x80)))
(define-fun x1172 ((x80 Int)) Int (ite (= 128 x80) x347 (x141 x80)))
(define-fun x1152 ((x80 Int)) Int (ite (= 128 x80) x615 (x465 x80)))
(define-fun x444 ((x80 Int)) Int (ite (= x80 160) x641 (x1152 x80)))
(define-fun x345 ((x80 Int)) Int (ite (= 192 x80) x378 (x444 x80)))
(define-fun x324 ((x80 Int)) Int (ite (= x80 224) x100 (x345 x80)))
(define-fun x1408 ((x80 Int)) Int (ite (= 256 x80) x759 (x324 x80)))
(define-fun x1276 ((x80 Int)) Int (ite (= 0 x80) x1226 (x887 x80)))
(define-fun x960 ((x80 Int)) Int (ite (= x80 32) x624 (x1276 x80)))
(define-fun x1405 ((x80 Int)) Int (ite (= 64 x80) x355 (x960 x80)))
(define-fun x664 ((x80 Int)) Int (ite (= 96 x80) x540 (x1405 x80)))
(define-fun x1351 ((x80 Int)) Int (ite (= 128 x80) x287 (x664 x80)))
(define-fun x97 ((x80 Int)) Int (ite (= x80 128) x615 (x403 x80)))
(define-fun x675 ((x80 Int)) Int (ite (= 160 x80) x64 (x97 x80)))
(define-fun x925 ((x80 Int)) Int (ite (= 192 x80) x378 (x675 x80)))
(define-fun x906 ((x80 Int)) Int (ite (= 224 x80) x100 (x925 x80)))
(define-fun x968 ((x80 Int)) Int (ite (= x80 256) x759 (x906 x80)))
(define-fun x1170 ((x80 Int)) Int (ite (= x80 0) x948 (x749 x80)))
(define-fun x752 ((x80 Int)) Int (ite (= x80 32) x1031 (x1170 x80)))
(define-fun x220 ((x80 Int)) Int (ite (= 64 x80) x82 (x752 x80)))
(define-fun x1400 ((x80 Int)) Int (ite (= x80 96) x993 (x220 x80)))
(define-fun x1067 ((x80 Int)) Int (ite (= x80 128) x1189 (x1400 x80)))
(define-fun x889 ((x80 Int)) Int (ite (= x80 128) x615 (x1315 x80)))
(define-fun x907 ((x80 Int)) Int (ite (= x80 160) x47 (x889 x80)))
(define-fun x562 ((x80 Int)) Int (ite (= x80 192) x378 (x907 x80)))
(define-fun x1280 ((x80 Int)) Int (ite (= 224 x80) x100 (x562 x80)))
(define-fun x1463 ((x80 Int)) Int (ite (= 256 x80) x759 (x1280 x80)))
(define-fun x1063 ((x80 Int)) Int (ite (= 0 x80) x1128 (x150 x80)))
(define-fun x385 ((x80 Int)) Int (ite (= x80 32) x256 (x1063 x80)))
(define-fun x1051 ((x80 Int)) Int (ite (= x80 64) x619 (x385 x80)))
(define-fun x869 ((x80 Int)) Int (ite (= x80 96) x817 (x1051 x80)))
(define-fun x1461 ((x80 Int)) Int (ite (= 128 x80) x115 (x869 x80)))
(define-fun x280 ((x80 x482)) Int (ite (= x1076 x80) x432 (x1141 x80)))
(define-fun x1471 ((x80 Int)) Int (ite (= x80 0) 1 (x1421 x80)))
(define-fun x253 ((x80 Int)) Int (ite (= x508 x80) 1 (x567 x80)))
(define-fun x1100 ((x80 x482)) Int (ite (= x80 x1412) x1094 (x1322 x80)))
(define-fun x270 ((x80 Int)) Int (ite (= x80 0) 1 (x1421 x80)))
(define-fun x1266 ((x80 Int)) Int (ite (= x80 x508) 1 (x567 x80)))
(define-fun x1296 ((x80 Int)) Int (ite (and x1199 x989) (x294 x80) (ite (and x162 x1295) (x1266 x80) (x253 x80))))
(define-fun x130 ((x1355 Int)) Bool (=> (and (not (= x1355 65535)) (not (= 1752364190 x1355)) (not (= 274184521717934524641157099916833587231 x1355)) (not (= x1355 1153557995)) (not (= x1355 1000000000000000000)) (not (= x1355 1134440005)) (not (= x1355 18446744073709551616)) (not (= 826074471 x1355)) (not (= 1461501637330902918203684832716283019655932542975 x1355)) (not (= 4272920204 x1355)) (not (= 1889567281 x1355)) (not (= x1355 10141204801825835211973625643007)) (not (= x1355 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (not (= 3122421376 x1355)) (not (= x1355 1034154046)) (not (= x1355 2867386960)) (not (= 18446744073709551615 x1355)) (not (= x1355 2835717307)) (not (= x1355 3257672857)) (not (= 2059964113 x1355)) (not (= x1355 20282409603651670423947251286015)) (not (= 2055092157 x1355)) (not (= x1355 274184521717934524641157099916833587242)) (not (= x1355 274184521717934524641157099916833587221)) (not (= x1355 3319015721)) (not (= 20282409603651670423947251286016 x1355)) (not (= 641995544 x1355)) (not (= x1355 1800920247)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1355)) (not (= 274184521717934524641157099916833587225 x1355)) (not (= x1355 3695885053)) (not (= x1355 1736444767)) (not (= x1355 1176186698)) (not (= 2362581449 x1355)) (not (= x1355 2758797371)) (not (= 170141183460469231731687303715884105727 x1355)) (not (= 274184521717934524641157099916833587229 x1355)) (not (= x1355 1000000000000000)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1355)) (not (= x1355 636681789)) (not (= x1355 1558726628)) (not (= 806251499 x1355)) (not (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1355)) (not (= 274184521717934524641157099916833587209 x1355)) (not (= x1355 3075265556)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1355)) (> x1355 10000) (not (= 1208925819614629174706176 x1355)) (not (= 1153654023 x1355)) (not (= 2879910238 x1355)) (not (= 340282366920938463463374607431768211455 x1355)) (not (= x1355 340282366920938463463374607431768211456)) (not (= 65536 x1355)) (not (= x1355 1157571613)) (not (= 1168994686 x1355)) (not (= x1355 2514000705)) (not (= 1208925819614629174706175 x1355)) (not (= x1355 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (not (= 274184521717934524641157099916833587233 x1355)) (not (= x1355 1099511627775)) (not (= 2531764673 x1355)) (not (= 2993122508 x1355)) (not (= 1461501637330902918203684832716283019655932542976 x1355)) (not (= x1355 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1355 4062139261)) (not (= 2834295333 x1355))) (not ((_ is x497) (x1338 x1355)))))
(assert (= (x1364 (x497 4272920204)) 4272920204))
(assert (x1052 x208))
(assert (x1052 x1230))
(assert (x955 18446744073709551615))
(assert (= (x497 4272920204) (x1338 4272920204)))
(assert (x130 x1083))
(assert (= (x497 3695885053) (x1338 3695885053)))
(assert (= (=> (= (= x397 274184521717934524641157099916833587231) x593) (and (=> (not x593) x727) (=> (and (> 1208925819614629174706176 x615) (not (> 4 x1442)) (= 4 x1442) (= x108 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x1463 160) x256) (= (x665 (x1338 x643) (x497 1) 0) x6) (>= 1208925819614629174706175 x615) (= (x1463 192) x619) (= x115 (x1463 256)) (<= x759 1208925819614629174706175) (not (= x531 2362581449)) (not (= x531 4062139261)) (= 4272920204 x531) (= x1275 (x1463 256)) (= x47 (x748 x6)) (> x1252 0) (= x1128 (x1463 128)) (<= x378 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x759 0) (= x1030 1) (= x387 (x1463 224)) (>= x47 0) (= 160 x539) (= (x1463 160) x356) (not (> 2362581449 x531)) (>= x615 0) (<= 0 x378) x593 (> 1208925819614629174706176 x759) (>= x100 0) (= x1252 (x1012 (x1338 274184521717934524641157099916833587231))) (= (x1463 192) x173) (<= x47 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 3257672857 x531)) (= x1159 (x1463 128)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x100) (= 4 x1442) (= x817 (x1463 224))) x1242))) x1518))
(assert (x1052 x1359))
(assert (x955 x1257))
(assert (x1052 x320))
(assert (x955 x273))
(assert (x1052 x1499))
(assert (x1052 x1135))
(assert (= (x497 115197700812830431890159100217698998050002284567939525164234024451216521560064) (x1338 115197700812830431890159100217698998050002284567939525164234024451216521560064)))
(assert (x1052 x939))
(assert (x130 x556))
(assert (x130 x1229))
(assert (x1052 x1228))
(assert (x1052 x372))
(assert (x1052 x1524))
(assert (x1052 x1077))
(assert (= x984 (=> (and (< 0 x762) (= x1422 x1034)) x9)))
(assert (x1052 x1335))
(assert (x1052 x558))
(assert (x1052 x1056))
(assert (= x395 (=> (and (= x616 x1224) (= x1283 (> x1327 1)) (not x1283) (= (x221 255 x1386) x1327) (= x407 x46)) x301)))
(assert (=> (>= 10000 x515) (= (x497 x515) (x1338 x515))))
(assert (= (x271 x1251) 0))
(assert (x1052 x934))
(assert (x1052 x623))
(assert (x1052 x246))
(assert (x130 x180))
(assert (x1052 x1343))
(assert (x955 x1370))
(assert (x955 x1365))
(assert (x1052 x328))
(assert (x1052 x531))
(assert (x955 x219))
(assert (x955 x229))
(assert (x1052 x577))
(assert (= x9 (=> (and (= (or (and (= true (<= x786 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x786)) (> x786 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1193) (= x951 (x221 1461501637330902918203684832716283019655932542975 x336)) (= 274184521717934524641157099916833587229 x1143) (= x1227 x945) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x649 x104)) (<= x104 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x372 (x58 (+ x1034 68))) (= x1520 x870) (= x1244 2835717307) (= (= x79 0) x392) (= (x58 (+ x1034 36)) x1033) (= x104 x417) (< 0 x353) (< 0 x79) (= (x1043 x1352) x881) (not x755) (= x104 (x1384 x1231)) (not (> 4 x1520)) (= x353 (x1012 (x1338 274184521717934524641157099916833587229))) (not (= x1244 2514000705)) (>= x104 0) (not (= 826074471 x1244)) (= x681 (x58 (+ x1034 4))) (= x823 (ite x711 1 0)) (= x1231 (x665 (x1338 x945) (x497 1) 0)) (= x79 x823) (= x1520 68) (= x1203 x1472) (= x1000 (x877 (- x881 x27))) (= x755 (< x881 x404)) (<= x881 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1339 x1034) x79) (not (> 826074471 x1244)) (= x71 274184521717934524641157099916833587209) (<= 0 x881) (= (x665 (x1338 274184521717934524641157099916833587209) (x497 1) 0) x833) (= x379 x495) (= x1439 x1169) (= x306 274184521717934524641157099916833587209) (= x786 (x877 (- x1520 4))) (= x649 x1139) (= x870 (x877 (- x372 x1034))) (= x178 (+ x417 x1139)) (= x1352 (x665 (x1338 274184521717934524641157099916833587209) (x497 1) 0)) (not x1193) (= x919 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 1889567281 x1244)) (= x649 x404) (= x711 (not x392)) (= x951 x945) (= x1453 274184521717934524641157099916833587229)) x1041)))
(assert (x1052 x1033))
(assert (= (x1364 (x497 1800920247)) 1800920247))
(assert (= (x1338 115792089237316195423570985008687907853269984655499359237631748795939503996928) (x497 115792089237316195423570985008687907853269984655499359237631748795939503996928)))
(assert (x1052 x1054))
(assert (x1052 x1336))
(assert (x1052 x983))
(assert (x1052 x1173))
(assert (x1052 x532))
(assert (= (=> (and (> x1487 0) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1501)) (< x1501 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1501))) (= x1487 x685) (= (ite x279 1 0) x685) (= (not x524) x279) (not (= x863 0)) (= x1487 (x1296 x508)) (= x524 (= 0 x1487)) (= x983 x379) (= x31 x1472) (= x1238 x1439)) x1041) x1466))
(assert (x1052 x1455))
(assert (x1052 x311))
(assert (= x1413 (and (not x583) x909)))
(assert (x1052 x1496))
(assert (x966 x1191 x370))
(assert (= (x1338 2834295333) (x497 2834295333)))
(assert (x130 x876))
(assert (x1052 x1071))
(assert (x1052 x599))
(assert (x1052 x1366))
(assert (x130 x1228))
(assert (=> (>= 10000 x457) (= (x497 x457) (x1338 x457))))
(assert (x10 x915))
(assert (=> (<= x556 10000) (= (x1338 x556) (x497 x556))))
(assert (= (x497 4062139261) (x1338 4062139261)))
(assert (x1052 x516))
(assert (x1052 x112))
(assert (x1052 x1474))
(assert (x1052 x1511))
(assert (x1052 x794))
(assert (x1052 x805))
(assert (=> (<= x903 10000) (= (x497 x903) (x1338 x903))))
(assert (x966 x45 x1187))
(assert (x1052 x508))
(assert (= x38 (x1364 (x1338 x38))))
(assert (x1052 x1513))
(assert (x1052 x1021))
(assert (x1052 x1224))
(assert (x729 x824 x283))
(assert (= (or x1265 (and x260 x576)) x923))
(assert (x1052 x1327))
(assert (x1052 x1406))
(assert (x955 x112))
(assert (x1052 x1090))
(assert (x1052 x1443))
(assert (x1052 x1495))
(assert (x1052 x708))
(assert (= x157 (=> (and (<= x640 340282366920938463463374607431768211455) (> 340282366920938463463374607431768211456 x489) (= x1410 (x665 (x1338 x1353) x834 0)) (>= x640 0) (= (ite (= 0 x490) (not (= 0 (x221 340282366920938463463374607431768211455 x1260))) (= 0 x490)) x314) (= x1353 (x221 1461501637330902918203684832716283019655932542975 x1068)) (= x183 (x665 (x1338 x99) (x497 5) 0)) (= (x221 1461501637330902918203684832716283019655932542975 x525) x99) (= (x221 1461501637330902918203684832716283019655932542975 x525) x1506) (= (x665 (x1338 x1506) (x497 6) 0) x214) (>= x489 0) (= (x1085 x1410) x490) (<= x490 340282366920938463463374607431768211455) (= (x877 (- x490 x27)) x1260) (= x1182 (+ x445 x1137)) (= x398 (x221 1461501637330902918203684832716283019655932542975 x1068)) (= (x221 340282366920938463463374607431768211455 x1260) x1062) (not (> x649 x489)) (not (> x649 x490)) (= x640 x557) (= (x952 x1036) x92) (= x116 (x877 (- x489 x27))) (= x398 x473) (= x979 (x665 (x1338 x43) (x497 2) 0)) (= x1443 (x689 x183)) (= (x221 1461501637330902918203684832716283019655932542975 x1068) x43) (= x640 (x1085 x827)) (> 340282366920938463463374607431768211456 x490) (= (x665 (x1338 x398) x214 0) x827) (>= 65535 x1443) (= x1137 (- x92 x557)) (= (x221 340282366920938463463374607431768211455 x116) x1059) (> 65536 x1443) (= (x221 1461501637330902918203684832716283019655932542975 x525) x180) (= x1036 x398) (= (x1375 x979) x489) (= x1062 x445) (>= x1443 0) (= (x665 (x1338 x180) (x497 6) 0) x834) (>= x490 0) (not (< 340282366920938463463374607431768211455 x649)) (<= x489 340282366920938463463374607431768211455)) (and (=> (not x314) x518) (=> (and (= x361 1) x314) x545)))))
(assert (x1052 x606))
(assert (x955 x40))
(assert (x1052 x1101))
(assert (x1052 x1414))
(assert (x1052 x495))
(assert (x966 x983 x1372))
(assert (x1052 x919))
(assert (x1052 x407))
(assert (x1052 x365))
(assert (= (x497 65535) (x1338 65535)))
(assert (= x51 (=> (and (= x457 (x221 1461501637330902918203684832716283019655932542975 x525)) (= x231 (x221 1461501637330902918203684832716283019655932542975 x525)) (>= x1436 0) (<= x586 20282409603651670423947251286015) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1127) (and (= true (<= x1127 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x1127))) x1292) (> 20282409603651670423947251286016 x586) (or (and (= (* x633 x321) x1210) (= x825 (div x1210 1000000000000000)) (< x321 18446744073709551616) (not x1292) (>= 18446744073709551615 x321) (< (* x633 x321) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x221 20282409603651670423947251286015 x1127) x633) (= x604 x825) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1127) true) (> 0 x1127)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1127))) (= (x221 20282409603651670423947251286015 x825) x529) (<= 0 x321) (not (< 10141204801825835211973625643007 x529))) (and (= x602 (x221 20282409603651670423947251286015 x777)) (= (* x498 x962) x790) (= x962 (x221 20282409603651670423947251286015 x997)) (>= 18446744073709551615 x498) (= (div x790 1000000000000000) x777) (< x498 18446744073709551616) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x319)) (= x1371 x604) (not (< 10141204801825835211973625643007 x602)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x498 x962)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x997) (and (> 0 x997) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x997))))) (= x1371 (x877 (- 0 x319))) (>= x498 0) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1127)) (= (x1381 x777) x319) (= (x877 (- 0 x1127)) x997) x1292)) (= (x1381 x586) x1127) (>= 65535 x1436) (= x801 (x665 (x1338 x457) (x497 5) 0)) (= x138 (x665 (x1338 x231) (x497 5) 0)) (= x586 (x1316 x801)) (> 65536 x1436) (= (x1186 x138) x1436) (<= 0 x586)) x1430)))
(assert (x1392 x443 x990))
(assert (x1052 x291))
(assert (x10 x27))
(assert (x1052 x1253))
(assert (= x903 (x1364 (x1338 x903))))
(assert (= (x1364 (x1338 x556)) x556))
(assert (x1052 x698))
(assert (= (x1364 (x497 1134440005)) 1134440005))
(assert (x1052 x970))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1364 (x497 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x1052 x64))
(assert (x1052 x424))
(assert (x1052 x550))
(assert (x1052 x850))
(assert (x1052 x636))
(assert (x1052 x498))
(assert (x1052 x1331))
(assert (= (x497 20282409603651670423947251286016) (x1338 20282409603651670423947251286016)))
(assert (= (x497 274184521717934524641157099916833587221) (x1338 274184521717934524641157099916833587221)))
(assert (x1052 x823))
(assert (x1052 x746))
(assert (x1052 x1164))
(assert (x1052 x1213))
(assert (x1052 x775))
(assert (x955 x1050))
(assert (x1052 x411))
(assert (x955 x1386))
(assert (x1052 x1382))
(assert (x130 x231))
(assert (x1052 x1083))
(assert (x1052 x1245))
(assert (= (x497 3075265556) (x1338 3075265556)))
(assert (x1052 x1075))
(assert (=> (<= x1506 10000) (= (x1338 x1506) (x497 x1506))))
(assert (x1052 x25))
(assert (x966 x7 x684))
(assert (x1052 x924))
(assert (= (x1338 2362581449) (x497 2362581449)))
(assert (x1052 x741))
(assert (x1052 x1289))
(assert (x1052 x1318))
(assert (x1052 x965))
(assert (x1052 x1058))
(assert (x130 x1506))
(assert (x1052 x289))
(assert (= (x1338 2531764673) (x497 2531764673)))
(assert (x1052 x418))
(assert (= (x1078 256) (ite (and x1419 x598) (x29 256) (x187 256))))
(assert (x1052 x421))
(assert (= (x1364 (x497 10141204801825835211973625643007)) 10141204801825835211973625643007))
(assert (x1052 x257))
(assert (= 806251499 (x1364 (x497 806251499))))
(assert (x1052 x297))
(assert (= (x1338 65536) (x497 65536)))
(assert (x1052 x525))
(assert (= (x1364 (x497 1099511627775)) 1099511627775))
(assert (x1052 x685))
(assert (x966 x586 x544))
(assert (= x555 (and x133 (not x314))))
(assert (= (x497 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x1338 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x1052 x1128))
(assert (x1052 x1404))
(assert (x1052 x81))
(assert (= x977 (=> (and (= (x58 (+ 288 x892)) x1090) (= (x221 18446744073709551615 x140) x181) (= x1498 (x221 115792089237316195423570985008687907853269984665640564039457584007913129639904 x25)) (<= x1048 1208925819614629174706175) (= (and (= true (<= x1239 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 0 x1239)) x800) (= (x221 18446744073709551615 x234) x959) (= x1050 (ite (or (and (= (<= x1175 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1478 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1478 x1175)) (and (> x1175 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1478))) 1 0)) (= x927 (ite (not x830) 1 0)) (= x25 (x58 (+ 31 x538))) (>= 1208925819614629174706175 x1054) (not (ite x914 x914 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1239) true) (> x1239 170141183460469231731687303715884105727)))) (= x848 x469) (= x1048 (x666 x845)) (= x1478 (x877 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x733))) (not (= 0 x950)) (= (x666 x1299) x1054) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x181 x53)) (= x1178 x328) (= (x666 x1090) x1239) (> x959 0) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1175)) (= x1178 (x58 (+ x1175 x733))) (= x886 (x221 x924 x1050)) (= x558 (mod (* x1348 x1256) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x548 0) (= x1175 (div x171 1000000000000000000)) (= (x58 (+ 64 x1299)) x131) (= (x58 (+ 64 x651)) x430) (= x234 (x683 x418)) (= (x877 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x733)) x1209) (not (or (> x538 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x538 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 160 x538)))) (= x140 (x1007 x430)) (= x418 (x58 (+ x1332 64))) (= (div x558 x959) x53) (= (x221 340282366920938463463374607431768211455 x1239) x1348) (= x668 (ite (or (and (> x1209 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1175)) (and (= (<= x1209 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1175)) (< x1209 x1175))) 1 0)) (= x924 (ite (or (> x733 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x733 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x733))) 1 0)) (= (not x800) x914) (= (x221 x927 x668) x548) (= (x58 (+ x1299 x1498)) x848) (= x830 (or (and (< x733 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x733) true)) (> x733 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x845 (x58 (+ x131 64))) (= (* x181 x53) x171) (= 0 x886)) x95)))
(assert (= x902 (=> (and (> x176 0) (= x159 x1468) (>= x1208 0) (= 0 x1312) (= x176 (x1012 (x1338 274184521717934524641157099916833587209))) (> 3122421376 x566) (= x686 x732) (= 2531764673 x566) (= x732 x1208) (<= x1468 1461501637330902918203684832716283019655932542975) (= 1000000000000000 x337) (>= 1461501637330902918203684832716283019655932542975 x1024) (<= x1208 1461501637330902918203684832716283019655932542975) (= x1312 x1409) (not (> 2531764673 x566)) (> 2758797371 x566) (= 1000000000000000 x132) (not (> 2059964113 x566)) (<= 0 x1024) (>= x1468 0)) (=> (and (= x1013 (= 1000000000000000 x851)) (= x226 1000000000000000) x1013 (= x1008 x31)) x942))))
(assert (=> (<= x439 10000) (= (x497 x439) (x1338 x439))))
(assert (x1052 x223))
(assert (x1052 x1082))
(assert (x1052 x862))
(assert (x1052 x445))
(assert (x1052 x815))
(assert (x1052 x824))
(assert (x1052 x1294))
(assert (x1052 x1427))
(assert (x1052 x219))
(assert (= (x1364 (x497 3075265556)) 3075265556))
(assert (x1052 x443))
(assert (x1052 x1484))
(assert (x955 x152))
(assert (x1052 x595))
(assert (x1052 x119))
(assert (x955 x854))
(assert (x955 x1467))
(assert (x1052 x125))
(assert (= (x1364 (x497 170141183460469231731687303715884105727)) 170141183460469231731687303715884105727))
(assert (x955 x1494))
(assert (= (x1364 (x497 274184521717934524641157099916833587209)) 274184521717934524641157099916833587209))
(assert (x1052 x356))
(assert (x1052 x670))
(assert (x1052 x316))
(assert (x1052 x1506))
(assert (x955 x83))
(assert (x955 x1439))
(assert (x1052 x813))
(assert (= x999 (and x1278 x373)))
(assert (x130 x643))
(assert (x1052 x1362))
(assert (= (x1364 (x497 1000000000000000)) 1000000000000000))
(assert (x1052 x660))
(assert (x955 x318))
(assert (x1052 x177))
(assert (= (=> (and (= x316 x409) (not (> 2059964113 x910)) (not (< x910 3122421376)) (>= 20282409603651670423947251286015 x379) (= (x1012 (x1338 274184521717934524641157099916833587209)) x1017) (< x379 20282409603651670423947251286016) (<= 0 x379) (= 3319015721 x910) (not (< x910 3319015721)) (< 0 x1017) (= (x221 20282409603651670423947251286015 x379) x409) (> 3695885053 x910)) x1060) x713))
(assert (x1052 x1437))
(assert (x1052 x512))
(assert (x130 x1366))
(assert (x1052 x838))
(assert (x1052 x268))
(assert (x955 x709))
(assert (= (=> (= (= x5 274184521717934524641157099916833587231) x1145) (and (=> (and (<= 0 x759) (<= 0 x64) (= x1133 4272920204) (= (x968 128) x948) (= x879 4) (<= 0 x378) (< x615 1208925819614629174706176) (= x1255 (x968 128)) (= x1241 (x665 (x1338 x643) (x497 1) 0)) (= (x968 160) x1071) (= x852 (x1012 (x1338 274184521717934524641157099916833587231))) (= (x968 192) x1309) (= x310 160) x1145 (<= x378 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x615 1208925819614629174706175) (= (x968 256) x1189) (<= x100 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x968 192) x82) (= 4 x879) (not (> 2362581449 x1133)) (= (x968 224) x993) (not (= x1133 3257672857)) (> x852 0) (<= x64 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1173 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x748 x1241) x64) (= (x968 256) x620) (> 1208925819614629174706176 x759) (<= 0 x615) (<= 0 x100) (<= x759 1208925819614629174706175) (not (= 2362581449 x1133)) (= x859 (x968 224)) (not (> 4 x879)) (= (x968 160) x1031) (= x532 1) (not (= 4062139261 x1133))) x588) (=> (not x1145) x60))) x475))
(assert (x1052 x978))
(assert (= x43 (x1364 (x1338 x43))))
(assert (x130 x165))
(assert (x966 x219 x1053))
(assert (x1052 x1442))
(assert (x1052 x319))
(assert (x1052 x1274))
(assert (= x1497 x1419))
(assert (x1052 x626))
(assert (x1052 x777))
(assert (x955 x468))
(assert (x1052 x20))
(assert (= 2867386960 (x1364 (x497 2867386960))))
(assert (x1052 x457))
(assert (x1052 x993))
(assert (= (and x478 (not x585)) x909))
(assert (= (x1338 2758797371) (x497 2758797371)))
(assert (x1052 x542))
(assert (= x127 (or x1263 x1491)))
(assert (x1052 x941))
(assert (x1052 x946))
(assert (x1052 x704))
(assert (= 636681789 (x1364 (x497 636681789))))
(assert (x1052 x53))
(assert (x966 x202 x808))
(assert (x1052 x691))
(assert (=> (<= x746 10000) (= (x1338 x746) (x497 x746))))
(assert (x1052 x1238))
(assert (x1052 x61))
(assert (= (x211 x1404) (ite (= x512 x1404) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1078 x1404))))
(assert (x1392 x525 x860))
(assert (x1052 x188))
(assert (x955 1461501637330902918203684832716283019655932542975))
(assert (x1052 x839))
(assert (= (x1338 1168994686) (x497 1168994686)))
(assert (x955 x1512))
(assert (x1052 x293))
(assert (x955 x202))
(assert (= x746 (x1364 (x1338 x746))))
(assert (x1052 x203))
(assert (= x545 (=> (and (>= x731 0) (= (x665 (x1338 x970) x890 0) x198) (> 65536 x33) (> 256 x731) (<= 0 x1046) (= x1097 (x665 (x1338 x1046) (x497 9) 0)) (>= 255 x577) (= (x665 (x1338 x255) (x497 8) 0) x758) (= x8 (= x361 0)) (= (not x8) x781) (>= 1461501637330902918203684832716283019655932542975 x970) (>= x577 0) (= x970 (x1065 x1097)) (= x113 (not x543)) (> 256 x577) (<= x1046 255) (= (x1107 x198) x731) (>= 255 x731) (= (x221 1461501637330902918203684832716283019655932542975 x1068) x1366) (= (x221 1461501637330902918203684832716283019655932542975 x1068) x255) (= x781 x1464) (= x956 (not x350)) (= x1246 (not x113)) (<= 0 x970) (<= x33 65535) (= (x665 (x1338 x903) (x497 5) 0) x1221) (= (x665 (x1338 x1443) (x497 12) 0) x523) (= x890 (x665 (x1338 x33) (x497 11) 0)) (= (x665 (x1338 x33) (x497 11) 0) x875) (= x33 (x908 x1190)) (= (x1107 x363) x577) (= (= x361 0) x543) (< x970 1461501637330902918203684832716283019655932542976) (= x903 (x221 1461501637330902918203684832716283019655932542975 x525)) (= (x665 (x1338 x1366) x523 0) x1340) (>= x33 0) (= x956 x986) (= (x665 (x1338 x1229) x1340 0) x1190) (= x363 (x665 (x1338 x439) x875 0)) (= (x221 1461501637330902918203684832716283019655932542975 x1068) x439) (= x463 (= 0 x577)) (< x1046 256) (= (ite (not x1246) 1 0) x1229) (= x1464 (not x463)) (= (not x931) x986) (= (= 0 x731) x931) (= x1046 (x184 x758)) (= (= x361 0) x350)) x51)))
(assert (x955 x379))
(assert (x1052 x1069))
(assert (x955 x25))
(assert (x1052 x398))
(assert (= x298 (and x999 (not x921))))
(assert (= (x1338 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x497 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x1364 (x497 2879910238)) 2879910238))
(assert (= (=> (and (>= 18446744073709551615 x1138) (> 256 x179) (= (x58 (+ x1363 64)) x1108) (>= 1461501637330902918203684832716283019655932542975 x459) (= (x221 255 x1473) x568) (= (x867 x427) x459) (= (x58 (+ 64 x963)) x1001) (> 18446744073709551616 x595) (>= 18446744073709551615 x436) (= (x1354 x427) x595) (= (x665 (x497 0) (x497 10) 0) x1272) (= (x105 x480) x913) (= x1256 (x1085 x722)) (= (= x614 274184521717934524641157099916833587233) x585) (> 1461501637330902918203684832716283019655932542976 x313) (<= x179 255) (>= 340282366920938463463374607431768211455 x660) (> 18446744073709551616 x436) (= x963 (x58 (+ 64 x1108))) (= (x169 x427 2) x868) (= x1262 (x665 (x497 0) (x497 9) 0)) (= x81 (x58 (+ 64 x505))) (>= x179 0) (>= x595 0) (>= 18446744073709551615 x595) (<= 0 x660) (= x76 (x665 (x1338 x515) (x497 6) 0)) (= x1299 (x58 (+ 512 x656))) (>= 1461501637330902918203684832716283019655932542975 x268) (> 340282366920938463463374607431768211456 x1256) (= (x221 1461501637330902918203684832716283019655932542975 x839) x1126) (= (x169 x1272 2) x480) (>= x313 0) (= x1305 (x221 1461501637330902918203684832716283019655932542975 x443)) (= (x58 (+ x892 64)) x651) (<= 0 x1256) (= (x374 x1272) x179) (= x1126 x268) (= x722 (x665 (x1338 x1305) x76 0)) (<= x913 18446744073709551615) (= x124 0) (> 18446744073709551616 x913) (= 0 x299) (>= 1461501637330902918203684832716283019655932542975 x313) (<= 0 x1138) (< x660 340282366920938463463374607431768211456) (<= 0 x268) (<= 0 x913) (= (x58 (+ 288 x656)) x1332) (= x839 (x1254 x1363)) (= (x58 (+ x873 544)) x892) (= (x725 x1272) x313) (= (x1254 x1332) x443) (= 0 x568) (= x436 (x967 x480)) (= x660 (x1411 x868)) (> 18446744073709551616 x1138) (= x456 4) (= (x58 (+ x656 288)) x1363) (= x427 (x169 x1272 1)) (= (x506 x892) x1473) (> 1461501637330902918203684832716283019655932542976 x268) (>= x436 0) (>= x459 0) (= x1138 (x300 x480)) (= x515 (x221 1461501637330902918203684832716283019655932542975 x525)) (= x864 (x1476 x651)) (= x501 (x58 (+ 64 x892))) (= (x58 (+ x501 64)) x505) (= (x1065 x1262) x268) (= (x221 1461501637330902918203684832716283019655932542975 x864) x614) (>= 340282366920938463463374607431768211455 x1256) (< x459 1461501637330902918203684832716283019655932542976)) (and (=> (and (= (x795 x62) x20) (>= 1208925819614629174706175 x61) (= x1032 (x1456 256)) (= (x1456 128) x125) (= (x1456 128) x520) (<= 0 x20) (< 0 x208) (not (> 2362581449 x1234)) (= (x1456 160) x1336) (= x421 (x1456 224)) (= 4272920204 x1234) (= x538 160) (= x522 (x1456 160)) (= (x1456 224) x1328) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1522) (<= x507 1208925819614629174706175) (<= 0 x547) (= x950 1) (= x1424 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x1448 (x58 (+ 352 x892))) x585 (= (x58 (+ x892 320)) x1099) (= x1035 x456) (< x507 1208925819614629174706176) (<= x20 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1522 0) (<= 0 x61) (not (> 4 x1035)) (= x366 (x1456 192)) (= x1391 (x58 (+ 288 x892))) (= x62 (x665 (x1338 x643) (x497 1) 0)) (not (= 4062139261 x1234)) (= x1057 (x58 (+ 384 x892))) (= (x1456 256) x326) (not (= x1234 2362581449)) (<= 0 x507) (< x61 1208925819614629174706176) (= 4 x1035) (not (= x1234 3257672857)) (= x208 (x1012 (x1338 274184521717934524641157099916833587233))) (= (x1456 192) x940) (<= x547 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x977) (=> (not x585) x687))) x717))
(assert (x1052 x390))
(assert (x955 x45))
(assert (x966 x584 x564))
(assert (x1052 x709))
(assert (x1052 x621))
(assert (x1052 x243))
(assert (x1052 x406))
(assert (= x1436 (x1364 (x1338 x1436))))
(assert (x1392 x657 x419))
(assert (x1052 x52))
(assert (x1052 x1002))
(assert (= x1046 (x1364 (x1338 x1046))))
(assert (x1052 x288))
(assert (x1052 x789))
(assert (x1052 x935))
(assert (= 274184521717934524641157099916833587242 (x1364 (x497 274184521717934524641157099916833587242))))
(assert (= (x497 274184521717934524641157099916833587233) (x1338 274184521717934524641157099916833587233)))
(assert (= (x1364 (x497 65536)) 65536))
(assert (x1052 x1260))
(assert (x1052 x788))
(assert (=> (<= x1305 10000) (= (x1338 x1305) (x497 x1305))))
(assert (= (or (and (not x1184) x1225) x923) x1027))
(assert (= (and x260 (not x576)) x527))
(assert (x1052 x680))
(assert (=> (<= x180 10000) (= (x1338 x180) (x497 x180))))
(assert (= (=> (and (= x1165 (x382 x678)) (< x11 1461501637330902918203684832716283019655932542976) (= (x867 x35) x1205) (< x1045 256) (= (x169 x630 1) x35) (>= x1215 0) (<= x1016 1461501637330902918203684832716283019655932542975) (>= x288 0) (= x1317 (x58 (+ 64 x678))) (= (x1411 x803) x917) (= (x221 1461501637330902918203684832716283019655932542975 x525) x556) (= x238 (x665 (x497 0) (x497 9) 0)) (= (x221 1461501637330902918203684832716283019655932542975 x246) x1330) (= 0 x1485) (= 0 x1120) (= (x169 x630 2) x605) (<= 0 x917) (= (x682 x597) x1230) (> 340282366920938463463374607431768211456 x917) (= x11 x774) (= (x58 (+ x587 64)) x1484) (<= x11 1461501637330902918203684832716283019655932542975) (<= 0 x536) (>= 340282366920938463463374607431768211455 x917) (= (x105 x605) x536) (>= 18446744073709551615 x536) (<= 0 x1205) (>= x11 0) (= (x665 (x497 0) (x497 10) 0) x630) (< x1016 1461501637330902918203684832716283019655932542976) (= x11 (x1065 x238)) (= x1045 (x374 x630)) (< x1215 18446744073709551616) (> 340282366920938463463374607431768211456 x798) (= (x665 (x1338 x556) (x497 6) 0) x284) (= x509 0) (= (= 274184521717934524641157099916833587233 x1330) x921) (= x803 (x169 x35 2)) (< x536 18446744073709551616) (>= x1045 0) (= (x300 x605) x288) (= (x221 1461501637330902918203684832716283019655932542975 x1230) x38) (= 4 x1500) (>= x798 0) (= (x221 1461501637330902918203684832716283019655932542975 x1417) x774) (= (x58 (+ x704 288)) x597) (= x1245 (x1354 x35)) (<= x798 340282366920938463463374607431768211455) (<= x1245 18446744073709551615) (= x708 (x58 (+ x1496 64))) (= x73 (x58 (+ 64 x678))) (<= x288 18446744073709551615) (>= x1245 0) (= x1417 (x682 x611)) (= (x58 (+ 288 x704)) x611) (= x509 (x221 255 x1165)) (= (x930 x170) x798) (< x1245 18446744073709551616) (= (x58 (+ x1192 384)) x678) (= x170 (x665 (x1338 x38) x284 0)) (<= x1045 255) (> 1461501637330902918203684832716283019655932542976 x1205) (<= x1205 1461501637330902918203684832716283019655932542975) (>= 18446744073709551615 x1215) (>= x1016 0) (= (x725 x630) x1016) (= (x58 (+ x611 64)) x1496) (= (x58 (+ x704 512)) x512) (= x1215 (x967 x605)) (= (x58 (+ x708 64)) x307) (< x288 18446744073709551616) (= x587 (x58 (+ 64 x1317))) (= x246 (x477 x73))) (and (=> (and (= x627 4272920204) (= x1489 (x1012 (x1338 274184521717934524641157099916833587233))) x921 (>= x61 0) (= x242 (x1157 160)) (<= 0 x1522) (= x1433 (x1157 192)) (< x507 1208925819614629174706176) (>= x507 0) (= x1346 (x1157 256)) (<= x507 1208925819614629174706175) (= x352 1) (= (x1157 128) x650) (= (x1157 224) x1455) (not (> 4 x843)) (= x42 (x1157 224)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1524) (= x710 (x1157 256)) (not (= 4062139261 x627)) (not (= x627 2362581449)) (not (= x627 3257672857)) (= (x665 (x1338 x643) (x497 1) 0) x572) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x547) (<= 0 x547) (> x1489 0) (>= x973 0) (= x843 4) (= x1500 x843) (= x934 (x58 (+ 288 x678))) (= x973 (x795 x572)) (<= x61 1208925819614629174706175) (> 1208925819614629174706176 x61) (not (> 2362581449 x627)) (= (x58 (+ x678 384)) x617) (= x789 (x1157 192)) (= x847 160) (= x343 (x1157 160)) (= x452 (x1157 128)) (<= x1522 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x973 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x58 (+ 320 x678)) x603) (= (x58 (+ 352 x678)) x334)) x816) (=> (not x921) x340))) x706))
(assert (x1052 x1328))
(assert (= x1269 x1237))
(assert (x812 x98 x1148))
(assert (x1052 x474))
(assert (x1052 x489))
(assert (=> (>= 10000 x1353) (= (x1338 x1353) (x497 x1353))))
(assert (x10 x40))
(assert (x1052 x124))
(assert (x1052 x331))
(assert (= (x1364 (x497 2834295333)) 2834295333))
(assert (= (x1364 (x1338 x1116)) x1116))
(assert (x1052 x1200))
(assert (x1052 x963))
(assert (= (x497 274184521717934524641157099916833587225) (x1338 274184521717934524641157099916833587225)))
(assert (x1392 x864 x526))
(assert (x1052 x115))
(assert (x1052 x754))
(assert (x1052 x851))
(assert (x1052 x1521))
(assert (x1052 x753))
(assert (x1052 x180))
(assert (x1052 x1174))
(assert (x130 x1353))
(assert (= (x497 1752364190) (x1338 1752364190)))
(assert (x1052 x1346))
(assert (x1052 x1))
(assert (= (x410 x1090) (ite (= x1090 x1299) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x552 x1090))))
(assert (x1392 x839 x446))
(assert (= (=> (and (not (= 1558726628 x193)) (>= x1074 0) (not (< x193 1176186698)) (>= x1286 0) (<= x498 18446744073709551615) (= x1427 (x221 18446744073709551615 x498)) (not (= 1736444767 x193)) (> 18446744073709551616 x498) (not (= x193 1752364190)) (not (> 1558726628 x193)) (= x1301 x1164) (= 2055092157 x193) (> x486 0) (= x1427 x694) (not (> 1034154046 x193)) (= x1409 x1287) (not (= 1800920247 x193)) (<= 0 x498) (<= 0 x1164) (>= 1461501637330902918203684832716283019655932542975 x1074) (<= x1164 1461501637330902918203684832716283019655932542975) (> 2059964113 x193) (= x1287 0) (= x1301 x686) (= x486 (x1012 (x1338 274184521717934524641157099916833587209))) (>= 1461501637330902918203684832716283019655932542975 x1286) (= x159 x1286)) (=> (= x851 x694) x902)) x1011))
(assert (x1052 x292))
(assert (= (x497 1461501637330902918203684832716283019655932542976) (x1338 1461501637330902918203684832716283019655932542976)))
(assert (x1052 x1284))
(assert (x1052 x1102))
(assert (= x165 (x1364 (x1338 x165))))
(assert (x1052 x1068))
(assert (x1052 x1273))
(assert (x1052 x1188))
(assert (x1052 x1121))
(assert (x1052 x1342))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1364 (x497 57896044618658097711785492504343953926634992332820282019728792003956564819967))))
(assert (x1052 x1370))
(assert (x1052 x1178))
(assert (x1052 x1032))
(assert (x1052 x1138))
(assert (x1052 x132))
(assert (= x255 (x1364 (x1338 x255))))
(assert (x966 x866 x129))
(assert (x1052 x458))
(assert (x1052 x1244))
(assert (x1052 x1424))
(assert (x1052 x856))
(assert (x1052 x1259))
(assert (x1052 x1047))
(assert (x1052 x866))
(assert (x1052 x631))
(assert (=> (<= x1081 10000) (= (x1338 x1081) (x497 x1081))))
(assert (x1052 x338))
(assert (x1052 x1498))
(assert (x1052 x1017))
(assert (x812 x365 x994))
(assert (x1052 x383))
(assert (x812 x1072 x899))
(assert (x966 x825 x386))
(assert (x1052 x1049))
(assert (= x1358 (and x248 x1237)))
(assert (=> (>= 10000 x945) (= (x497 x945) (x1338 x945))))
(assert (x1052 x493))
(assert (x1052 x917))
(assert (= (=> (and (= (ite x696 1 0) x762) (= x1422 x998) (= (not x86) x696) (= (or (> x1337 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1337 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x1337))) x86)) x984) x1158))
(assert (= x145 x1396))
(assert (x1052 x641))
(assert (x1052 x66))
(assert (x1052 x104))
(assert (x10 x411))
(assert (x1052 x1459))
(assert (x130 x38))
(assert (= (x497 340282366920938463463374607431768211455) (x1338 340282366920938463463374607431768211455)))
(assert (= (x1364 (x1338 x231)) x231))
(assert (x955 x657))
(assert (= x117 (and x298 (not x358))))
(assert (x1052 x179))
(assert (x1052 x1325))
(assert (x955 x866))
(assert (x1052 x399))
(assert (x1052 x467))
(assert (= (x1338 2055092157) (x497 2055092157)))
(assert (x955 x1513))
(assert (x1052 x592))
(assert (x1052 x774))
(assert (x1052 x837))
(assert (= (x1364 (x1338 274184521717934524641157099916833587242)) 274184521717934524641157099916833587242))
(assert (x955 x411))
(assert (x1052 x404))
(assert (x955 x126))
(assert (x1052 x913))
(assert (= x351 x1396))
(assert (= (and x1319 x1358) x400))
(assert (x10 x777))
(assert (x1052 x647))
(assert (x1052 x45))
(assert (x10 x1191))
(assert (x1052 x1034))
(assert (x1052 x852))
(assert (x130 x439))
(assert (= (x1338 1736444767) (x497 1736444767)))
(assert (x1052 x613))
(assert (x1052 x89))
(assert (x955 x983))
(assert (x955 x336))
(assert (= (or x1027 (and (not x575) x527)) x107))
(assert (=> (<= x643 10000) (= (x1338 x643) (x497 x643))))
(assert (= (x1364 (x497 1153654023)) 1153654023))
(assert (x1052 x901))
(assert (x1052 x786))
(assert (x1052 x826))
(assert (= 0 (x648 x1404)))
(assert (x1052 x28))
(assert (= x99 (x1364 (x1338 x99))))
(assert (x1052 x776))
(assert (=> (>= 10000 x1116) (= (x1338 x1116) (x497 x1116))))
(assert (= x439 (x1364 (x1338 x439))))
(assert (x1392 x1068 x855))
(assert (x1052 x847))
(assert (x1052 x330))
(assert (x1052 x140))
(assert (x1052 x603))
(assert (x1052 x1301))
(assert (x1052 x1099))
(assert (= (or (and x162 x1295) (and x1199 x989) (and x1502 x185)) x1491))
(assert (x1052 x760))
(assert (x1052 x176))
(assert (x1052 x520))
(assert (x966 x1055 x462))
(assert (x1052 x1522))
(assert (x1052 x346))
(assert (x130 x33))
(assert (x1052 x1232))
(assert (x955 x924))
(assert (x966 x516 x484))
(assert (x1052 x1239))
(assert (x1052 x895))
(assert (x955 x957))
(assert (x1052 x1062))
(assert (x1052 x619))
(assert (x1052 x1004))
(assert (x1052 x190))
(assert (=> (<= x43 10000) (= (x1338 x43) (x497 x43))))
(assert (x1052 x995))
(assert (= (x1364 (x1338 x643)) x643))
(assert (x1052 x186))
(assert (x955 x98))
(assert (x1052 x1353))
(assert (x1392 x1230 x276))
(assert (= x145 x329))
(assert (x1052 x881))
(assert (x1052 x1112))
(assert (x130 x255))
(assert (x1052 x287))
(assert (= (x1338 2867386960) (x497 2867386960)))
(assert true)
(assert (x1052 x1307))
(assert (x955 x1068))
(assert (x130 x1046))
(assert (= (x497 274184521717934524641157099916833587242) (x1338 274184521717934524641157099916833587242)))
(assert (x1052 x1176))
(assert (x1052 x343))
(assert (= (x497 340282366920938463463374607431768211456) (x1338 340282366920938463463374607431768211456)))
(assert (x966 x379 x714))
(assert (= (x552 320) (ite (and x69 x400) (x594 320) (x772 320))))
(assert (x1052 x536))
(assert (x955 x1127))
(assert (x955 x1521))
(assert (x1052 x1019))
(assert (x955 x7))
(assert (x1052 x668))
(assert (x1052 x1314))
(assert (x130 x970))
(assert (= (x497 2835717307) (x1338 2835717307)))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1364 (x497 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(assert (x1052 x857))
(assert (= x687 (=> (= x583 (= 274184521717934524641157099916833587231 x614)) (and (=> (and (= x996 (x663 128)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1304) (< x759 1208925819614629174706176) (= x856 (x663 192)) (= (x1012 (x1338 274184521717934524641157099916833587231)) x338) (= (x663 256) x347) (<= x100 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1167 (x663 256)) (= x592 (x58 (+ 352 x892))) (>= x759 0) (< x615 1208925819614629174706176) (not (< x712 4)) (<= 0 x378) (= x631 (x663 128)) (>= x1304 0) (= x464 (x58 (+ 384 x892))) x583 (= (x663 160) x199) (>= 1208925819614629174706175 x759) (= x441 (x665 (x1338 x643) (x497 1) 0)) (<= 0 x615) (= x670 (x58 (+ 320 x892))) (= 160 x538) (> x338 0) (= x712 x456) (= (x663 160) x89) (= x950 1) (not (< x1211 2362581449)) (= x1294 (x663 224)) (>= 1208925819614629174706175 x615) (= x1106 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= 4272920204 x1211) (= x712 4) (not (= x1211 3257672857)) (= x186 (x663 224)) (= (x663 192) x257) (= x87 (x58 (+ 288 x892))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x378) (not (= x1211 4062139261)) (= x1304 (x748 x441)) (>= x100 0) (not (= x1211 2362581449))) x977) (=> (not x583) x810)))))
(assert (x1052 x135))
(assert (x1052 x1175))
(assert (x1052 x580))
(assert (x1052 x1261))
(assert (x1052 x656))
(assert (= (x1364 (x497 2059964113)) 2059964113))
(assert (x10 x586))
(assert (x1052 x1447))
(assert (= (ite (= x512 x28) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1078 x28)) (x211 x28)))
(assert (x1052 x46))
(assert (=> (<= x33 10000) (= (x1338 x33) (x497 x33))))
(assert (x955 x140))
(assert (x955 x825))
(assert (= (x1338 1000000000000000) (x497 1000000000000000)))
(assert (x1052 x1393))
(assert (x953 x897 x698))
(assert (x955 x1239))
(assert (= (x1364 (x497 3122421376)) 3122421376))
(assert (x1052 x556))
(assert (x1052 x734))
(assert (=> (>= 10000 x398) (= (x1338 x398) (x497 x398))))
(assert (= (x497 2059964113) (x1338 2059964113)))
(assert (= x1502 (and x162 (not x1295))))
(assert (x1052 x1360))
(assert (= 2531764673 (x1364 (x497 2531764673))))
(assert (x1052 x33))
(assert (x1052 x640))
(assert (x130 274184521717934524641157099916833587242))
(assert (x1052 x1417))
(assert (x1052 x379))
(assert (= x1060 (=> (and (= (- x472 x158) x982) (= x158 x1452) (= x316 x1452) (= (= x982 x1181) x745)) x745)))
(assert (x729 x957 x1037))
(assert (x1052 x1388))
(assert (x966 x915 x449))
(assert (x1052 x701))
(assert (= (x167 x190) 0))
(assert (x1052 x1493))
(assert (x1052 x1143))
(assert (= (x1364 (x169 x630 2)) (+ 2 (x1364 x630))))
(assert (= x1305 (x1364 (x1338 x1305))))
(assert (x1052 x30))
(assert (x1052 x731))
(assert (= (ite (and x69 x400) (x594 416) (x772 416)) (x552 416)))
(assert (= (x1364 (x497 1157571613)) 1157571613))
(assert (x1052 x1277))
(assert (x1052 x690))
(assert (= (ite (and x1419 x598) (x29 x1404) (x187 x1404)) (x1078 x1404)))
(assert (x1052 x547))
(assert (= (=> (and (= (= 274184521717934524641157099916833587233 x397) x598) (= x349 128) (= (x1381 x604) x957) (= x397 (x221 1461501637330902918203684832716283019655932542975 x657))) (and (=> (not x598) x1518) (=> (and (= x539 160) (= 1 x1030) (= (x274 192) x922) (<= x507 1208925819614629174706175) (<= 0 x1522) (= x146 (x274 192)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1105) (= x1201 (x274 224)) (= x692 (x665 (x1338 x643) (x497 1) 0)) (= x493 (x795 x692)) (= x312 (x274 160)) (>= 1208925819614629174706175 x61) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1522) (not (= 4062139261 x34)) (< x507 1208925819614629174706176) (<= 0 x507) (not (< x1393 4)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x547) (= (x274 256) x1397) (not (= x34 3257672857)) (= x1183 (x274 256)) (>= x547 0) (not (< x34 2362581449)) (not (= x34 2362581449)) (= 4 x1393) (> x128 0) (= x128 (x1012 (x1338 274184521717934524641157099916833587233))) (> 1208925819614629174706176 x61) x598 (= x1393 4) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x493) (>= x493 0) (>= x61 0) (= x569 (x274 128)) (= 4272920204 x34) (= x1302 (x274 160)) (= x1425 (x274 224)) (= (x274 128) x323)) x1242))) x1430))
(assert (x1052 x616))
(assert (x1052 x962))
(assert (x1392 x246 x1198))
(assert (x953 x1370 x1459))
(assert (x1052 x1287))
(assert (= (=> (and (= x998 x469) (= x66 (x221 255 x1386)) (not x163) (= (> x66 1) x163) (= x1337 x328)) x1158) x95))
(assert (x1052 x1361))
(assert (= (x497 636681789) (x1338 636681789)))
(assert (x812 x474 x225))
(assert (x1052 x1257))
(assert (x1052 x412))
(assert (x1052 x936))
(assert (x1052 x940))
(assert (=> (<= x1101 10000) (= (x1338 x1101) (x497 x1101))))
(assert (x1052 x566))
(assert (x1052 x242))
(assert (x1052 x779))
(assert (x883 x25 x1435 x1356 x1519))
(assert (x130 x424))
(assert (x130 x457))
(assert (x1052 x156))
(assert (x1052 x1433))
(assert (= (or (and x303 x555) (and x314 x133)) x1334))
(assert (= (x497 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1338 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1052 x903))
(assert (x1052 x361))
(assert (x1446 x1513 x1010))
(assert (x1052 x459))
(assert (x1052 x1473))
(assert (= (=> (and (= (ite (not x1130) (= 0 (x221 340282366920938463463374607431768211455 x1260)) (not x1130)) x303) (= (= x490 0) x1130)) (and (=> (not x303) x51) (=> (and x303 (= x361 0)) x545))) x518))
(assert (x955 x864))
(assert (= (x1338 641995544) (x497 641995544)))
(assert (x1052 x535))
(assert (= 2758797371 (x1364 (x497 2758797371))))
(assert (= (x497 10141204801825835211973625643007) (x1338 10141204801825835211973625643007)))
(assert (= (x497 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1338 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x1052 x1211))
(assert (x1052 x499))
(assert (= (x497 806251499) (x1338 806251499)))
(assert (x966 x740 x200))
(assert (x1052 x681))
(assert (x1052 x1509))
(assert (x1052 x7))
(assert (x1052 x249))
(assert (x10 x468))
(assert (x1052 x277))
(assert (x1052 x1337))
(assert (x1052 x93))
(assert (x1052 x1252))
(assert (x966 x112 x254))
(assert (= x647 (x1364 (x1338 x647))))
(assert (x1052 x1479))
(assert (x1052 x1116))
(assert (x1052 x584))
(assert (x10 x203))
(assert (= (=> (and (> x502 0) (= (x877 (- x806 x508)) x514) (= x989 (= 274184521717934524641157099916833587229 x30)) (= (x221 1461501637330902918203684832716283019655932542975 x336) x285) (= (x58 (+ x508 36)) x122) (= x30 (x221 1461501637330902918203684832716283019655932542975 x1068)) (= x806 (x58 (+ 68 x508))) (= (x58 (+ x508 4)) x1091)) (and (=> (not x989) x453) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x628) (not x1450) (= x705 (+ x1153 x541)) (< (+ x649 x628) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1501 32) (>= 1461501637330902918203684832716283019655932542975 x424) (< 0 x2) (= x628 (x1341 x1441)) (= x649 x1212) (= x285 x424) (not (= 2514000705 x775)) (not (> 4 x761)) (= x1441 (x665 (x1338 x424) (x497 1) 0)) (= x1335 (x877 (- x761 4))) (<= x1360 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1012 (x1338 274184521717934524641157099916833587229)) x2) (= 68 x761) (not (< x775 826074471)) (= x707 (x665 (x1338 274184521717934524641157099916833587209) (x497 1) 0)) (= x277 x424) (not x1368) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x41) (not (= x775 1889567281)) (<= 0 x1360) (= x761 x514) (= x628 x1153) (= x541 x649) (= 2835717307 x775) (= x1450 (or (and (= (<= x1335 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1335)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1335))) x989 (= x435 274184521717934524641157099916833587209) (= x1368 (< x1360 x1212)) (= (x665 (x1338 274184521717934524641157099916833587209) (x497 1) 0) x1202) (= x863 1) (not (= x775 826074471)) (= 274184521717934524641157099916833587209 x1240) (= x1360 (x1043 x1202)) (>= x628 0) (= (x877 (- x1360 x27)) x222)) x1466))) x396))
(assert (= x702 (=> (and (= x237 (x120 (x1338 274184521717934524641157099916833587231))) (<= 0 x1429) (= x1228 x750) (= (< 0 (x1012 (x1338 274184521717934524641157099916833587231))) x659) x454 (>= x734 0) x402 (>= 20282409603651670423947251286015 x983) (<= x197 18446744073709551615) (= (x120 (x1338 274184521717934524641157099916833587225)) x769) (>= 1461501637330902918203684832716283019655932542975 x734) (<= x507 1208925819614629174706175) (<= x759 1208925819614629174706175) (<= x1395 18446744073709551615) (= x402 (< 0 (x1012 (x1338 274184521717934524641157099916833587242)))) (>= x916 0) (>= x1465 0) x659 (= x1253 641995544) (>= x615 0) (<= x1135 255) (<= x615 1208925819614629174706175) (<= 0 x237) (<= 0 x1395) (>= 18446744073709551615 x1429) (>= 255 x773) (>= 1099511627775 x872) (>= 18446744073709551615 x1274) (= false x1088) (= false x239) (>= x498 0) (>= 1461501637330902918203684832716283019655932542975 x601) (= x652 (> (x1012 (x1338 274184521717934524641157099916833587233)) 0)) (= x3 4) (<= 0 x769) (>= x458 0) (>= x983 0) (= x415 false) (= x895 (x120 (x1338 274184521717934524641157099916833587221))) (>= x1019 0) (<= 0 x1277) (>= 20282409603651670423947251286015 x916) (>= x507 0) (<= x321 18446744073709551615) x224 (= (x120 (x1338 274184521717934524641157099916833587229)) x376) (<= x1277 18446744073709551615) (<= 0 x872) (<= x504 1099511627775) (= x224 (> (x1012 (x1338 274184521717934524641157099916833587225)) 0)) (>= x1238 0) (>= x21 0) (<= 0 x1135) (>= x773 0) (= x601 x159) (= x227 (x120 (x1338 274184521717934524641157099916833587209))) (<= 0 x1274) (= x697 (< 0 (x1012 (x1338 274184521717934524641157099916833587221)))) (>= x759 0) x369 (= x1196 x850) (>= x895 0) (<= x926 20282409603651670423947251286015) (>= 255 x1390) (>= 1461501637330902918203684832716283019655932542975 x750) (<= 0 x850) (>= x607 0) (>= 18446744073709551615 x458) (<= x1465 255) (>= 1208925819614629174706175 x61) (>= x61 0) (>= x1390 0) (<= 0 x321) (= x1156 x734) x652 (>= x197 0) (= x21 (x120 (x1338 274184521717934524641157099916833587233))) (= (> (x1012 (x1338 274184521717934524641157099916833587209)) 0) x454) (<= 0 x504) (>= x926 0) (= x819 false) (<= 0 x601) x697 (<= x498 18446744073709551615) (<= x850 1461501637330902918203684832716283019655932542975) (>= x227 0) (= (x120 (x1338 274184521717934524641157099916833587242)) x1019) (>= 255 x607) (<= 0 x750) (= x369 (> (x1012 (x1338 274184521717934524641157099916833587229)) 0)) (<= 0 x376) (>= 20282409603651670423947251286015 x1238)) x570)))
(assert (= x942 (=> (and (not (< x1486 1034154046)) (not (> 1134440005 x1486)) (>= 20282409603651670423947251286015 x1238) (= x730 (x221 20282409603651670423947251286015 x1238)) (< x1486 2059964113) (= x1458 (x1012 (x1338 274184521717934524641157099916833587209))) (<= 0 x1238) (< 0 x1458) (> 20282409603651670423947251286016 x1238) (not (= 1157571613 x1486)) (= x479 x730) (not (= 1153557995 x1486)) (not (= 1153654023 x1486)) (> 1176186698 x1486) (not (= 1134440005 x1486)) (= x1486 1168994686)) (=> (and (= x661 x1398) (= x479 x1398)) x820))))
(assert (x1052 x528))
(assert (x1052 x1478))
(assert (x1052 x1191))
(assert (x1052 x886))
(assert (x1392 x336 x101))
(assert (x1052 x769))
(assert (x1052 x1488))
(assert (= x471 x351))
(assert (x955 x1072))
(assert (= 0 (x437 x1332)))
(assert (x955 x1459))
(assert (x1052 x513))
(assert (x1392 x1417 x151))
(assert (x1052 x505))
(assert (= x1269 x471))
(assert (x1052 x985))
(assert (x1052 x1304))
(assert (x1052 x836))
(assert (x1052 x342))
(assert (x1052 x1514))
(assert (x1052 x750))
(assert (x1052 x191))
(assert (= (=> (and (= (x221 1461501637330902918203684832716283019655932542975 x1068) x1049) (= x248 (= x1049 274184521717934524641157099916833587229)) (< 0 x88)) (and (=> (and (= x796 (* 1000000000000000 x1474)) (<= 0 x498) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x498 x983)) (<= 0 x1174) (< x1174 18446744073709551616) (>= x983 0) (= x1307 0) (= x719 (x689 x367)) (> 18446744073709551616 x296) (>= 18446744073709551615 x321) (<= x321 18446744073709551615) (= x165 (x221 1461501637330902918203684832716283019655932542975 x525)) (= (+ x49 x1347) x1474) (or (and (> 18446744073709551616 x1277) (= x771 (x221 18446744073709551615 x1521)) (< (* x723 x119) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (< 18446744073709551615 x293)) (= (x221 18446744073709551615 x98) x1086) (= x1009 x771) (< 0 x701) (<= x972 18446744073709551615) (= (div x1505 x701) x1) (= x111 (x877 (- x1277 x1086))) (= x1505 (* x723 x119)) (< (+ x293 x771) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1277 18446744073709551615) (= x972 (+ x1009 x377)) (= (div x1 x1514) x293) (= x723 (x221 18446744073709551615 x111)) (= x293 x377) (not x405) (= x1521 (x765 192)) (<= 0 x1277) (< 0 x1514) (not (< x1277 x1086)) (= (x460 160) x98) (= (x221 20282409603651670423947251286015 x915) x119)) (and (= x1232 (x460 160)) (< 0 x1514) (> x701 0) (= x1095 (x221 18446744073709551615 x1072)) (<= 0 x197) x405 (< (* x1284 x550) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x197 18446744073709551615) (not (< x197 x335)) (< x197 18446744073709551616) (not (> x1414 18446744073709551615)) (= x1072 (x765 192)) (= x440 x1414) (not (= x467 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (< (+ x1414 x1095) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1082 (div x278 x701)) (= x550 (x221 18446744073709551615 x229)) (= x1509 (+ x74 x440)) (= x1284 (x221 20282409603651670423947251286015 x754)) (= x335 (x221 18446744073709551615 x1232)) (= x754 (x877 (- 0 x467))) (= (* x550 x1284) x278) (= (x877 (- x197 x335)) x229) (= x74 x1095) (= x1414 (div x1082 x1514)) (<= x1509 18446744073709551615) (= x467 (x1381 x915)))) (= x1174 (x281 x367)) (<= x1069 255) (= x677 (ite (not x1321) 1 0)) (= x932 (* x321 x1238)) (= (x1316 x367) x273) (not (> x649 20282409603651670423947251286015)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x172 1000000000000000)) (= x551 (x1381 x40)) (<= 0 x321) (>= 20282409603651670423947251286015 x273) (= (x877 (- x551 x813)) x83) (<= 0 x273) (= x1093 128) (= (x665 (x1338 x165) (x497 5) 0) x367) (= x468 (x263 128)) (< x983 20282409603651670423947251286016) (= (x364 x367) x1069) (> x321 0) (= (* x498 x983) x1185) (not (< x884 x413)) (<= 0 x1238) (>= 18446744073709551615 x498) (= x259 (x221 x897 x698)) (<= x1174 18446744073709551615) (= (ite (or (> x813 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x813) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x813)))) 1 0) x897) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1102) (<= x551 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x551 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1102 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1102 x551))) 1 0) x698) (= x109 (x221 20282409603651670423947251286015 x202)) (<= x773 255) (>= 65535 x719) (>= x498 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1238 x321)) (<= 0 x321) (= x109 x49) (= x172 (x221 20282409603651670423947251286015 x709)) (= x1307 (x221 x818 x126)) (= x709 (x877 (- x884 x413))) (>= x773 0) (= (x221 20282409603651670423947251286015 x1447) x56) (= x757 (or (and (> 0 (x1381 x468)) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1381 x468)) true)) (> (x1381 x468) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= x1238 20282409603651670423947251286015) (= (x221 20282409603651670423947251286015 x1512) x495) (= (* x172 1000000000000000) x582) (= (x1381 x273) x621) (= x112 (div x1185 1000000000000000)) (or (and (>= x197 0) x1469 (> 18446744073709551616 x197) (>= 18446744073709551615 x197)) (and (not x1469) (>= 18446744073709551615 x1277) (< x1277 18446744073709551616) (<= 0 x1277))) (= (and (> (x1381 x40) 0) (= true (<= (x1381 x40) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x517) (or (and (= x40 x1162) (= (div x1166 1000000000000000) x1162) (>= 18446744073709551615 x321) (= (x1381 x468) x1204) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x321 x1004)) (not (> x297 10141204801825835211973625643007)) (= (* x1004 x321) x1166) (<= 0 x321) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1204) (and (= true (<= x1204 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1204 0)))) (not x757) (= (x221 20282409603651670423947251286015 x468) x1004) (< x321 18446744073709551616) (= (x221 20282409603651670423947251286015 x1162) x297)) (and (= x1055 (x877 (- 0 x243))) (= x767 x40) (= x1343 (x221 20282409603651670423947251286015 x1359)) (> 18446744073709551616 x498) (<= 0 x498) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x243)) (= (x221 20282409603651670423947251286015 x1055) x1387) (= (x1381 x468) x243) (= (x1381 x1359) x862) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1055) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1055) true) (> 0 x1055)))) (= x767 (x877 (- 0 x862))) (>= 18446744073709551615 x498) (= x1359 (div x182 1000000000000000)) (< (* x498 x1387) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= x862 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (* x498 x1387) x182) (not (< 10141204801825835211973625643007 x1343)) x757)) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x551) (<= x528 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x551) (<= x528 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x528 x551))) 1 0) x126) (> 18446744073709551616 x321) (= (x877 (- x27 x56)) x202) (> 20282409603651670423947251286016 x273) (not (> x56 x649)) (= x1169 (x221 20282409603651670423947251286015 x496)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000 x1474)) (>= 20282409603651670423947251286015 x1474) (= x413 (x221 20282409603651670423947251286015 x1447)) (= x1002 (x221 20282409603651670423947251286015 x1512)) (> 65536 x719) (= (ite (not x360) 1 0) x818) (< x1238 20282409603651670423947251286016) (= x405 (or (> (x1381 x915) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 (x1381 x915)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1381 x915)))))) (= (x221 20282409603651670423947251286015 x496) x703) (= x259 0) (= x1102 (x58 (+ 10141204801825835211973625643007 x813))) (= x1512 (div x796 x498)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1381 x103)) (and (> 0 (x1381 x103)) (= true (<= (x1381 x103) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1469) (< x498 18446744073709551616) (= x450 (or (> (x1381 x83) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 (x1381 x83)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1381 x83)))))) (= x1329 (= x773 0)) (> x498 0) (not (< 10141204801825835211973625643007 x649)) (or (and (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x788)) (= (x221 20282409603651670423947251286015 x168) x1222) (not (> x1382 10141204801825835211973625643007)) (> x498 0) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x134)) (>= 18446744073709551615 x498) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000 x1222)) (= x411 (div x264 x498)) (= (x877 (- 0 x134)) x168) x450 (= (x1381 x83) x134) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x168) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x168) true) (< x168 0)))) (< x498 18446744073709551616) (= x103 x622) (= (* x1222 1000000000000000) x264) (= (x877 (- 0 x788)) x622) (>= x498 0) (= x788 (x1381 x411)) (= x1382 (x221 20282409603651670423947251286015 x411))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000 x976)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1115) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1115) true) (> 0 x1115)))) (not x450) (>= 18446744073709551615 x321) (= x888 (* 1000000000000000 x976)) (<= 0 x321) (< x321 18446744073709551616) (= x103 x580) (= x976 (x221 20282409603651670423947251286015 x83)) (= (div x888 x321) x580) (< 0 x321) (= x935 (x221 20282409603651670423947251286015 x580)) (= x1115 (x1381 x83)) (not (< 10141204801825835211973625643007 x935)))) (= x360 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x813) (and (= (<= x813 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x813)))) (= (div x582 x321) x496) (= (x221 20282409603651670423947251286015 x516) x884) (<= x296 18446744073709551615) (<= x983 20282409603651670423947251286015) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x289 x109)) (< x773 256) (= x813 (x1381 x27)) (= (x221 20282409603651670423947251286015 x112) x289) x248 (= x1321 (not x1329)) (= (div x932 1000000000000000) x516) (or (and (= x901 (x1381 x40)) (= (ite (< x513 x649) x40 x27) x1517) (= x1447 x1517) x517 (not (or (and (> 0 x901) (= (<= x901 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x901 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x513 (x221 20282409603651670423947251286015 x40))) (and (= x1447 0) (not x517))) (= x207 (x1381 x103)) (>= x719 0) (= x1347 x289) (> 18446744073709551616 x321) (= (x263 128) x915) (<= 0 x1069) (= (x58 (+ 115792089237316195423570985008687907853269984655499359237631748795939503996928 x813)) x528) (< x498 18446744073709551616) (>= x296 0) (>= 18446744073709551615 x498) (= (x1206 x367) x296) (> 256 x1069)) x269) (=> (not x248) x157))) x1217))
(assert (x1052 x1309))
(assert (x1052 x98))
(assert (x1052 x1267))
(assert (x1052 x809))
(assert (x955 x668))
(assert (= 1153557995 (x1364 (x497 1153557995))))
(assert (x1052 x1229))
(assert (x10 x318))
(assert (= (x1364 (x497 1889567281)) 1889567281))
(assert (x1052 x514))
(assert (x1052 x1275))
(assert (x966 x83 x205))
(assert (x1052 x1046))
(assert (x1052 x553))
(assert (x10 x103))
(assert (x1052 x479))
(assert (x1052 x455))
(assert (= (or (and x555 (not x303)) x1334) x1497))
(assert (= (or (and x414 (not x210)) x470) x251))
(assert (x1052 x72))
(assert (x1052 x1379))
(assert (x1052 x22))
(assert (x1052 x853))
(assert (= (=> (and (> x1084 0) (>= x983 0) (< x983 20282409603651670423947251286016) (not (> 3122421376 x794)) (= (x1012 (x1338 274184521717934524641157099916833587209)) x1084) (> 3695885053 x794) (not (< x794 3319015721)) (= 3319015721 x794) (= x1511 x275) (= x275 (x221 20282409603651670423947251286015 x983)) (<= x983 20282409603651670423947251286015) (not (> 2059964113 x794))) (=> (and (= x629 x591) (<= x673 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x826) (= x768 x27) (not (= x1124 636681789)) (= x525 x191) (= x336 x985) (= x149 (= x525 x1228)) (<= x525 1461501637330902918203684832716283019655932542975) (< x1124 1034154046) (or (and (= x399 (x610 x142)) (= x88 x399) (>= 255 x399) (= (x221 1461501637330902918203684832716283019655932542975 x525) x876) (= (x665 (x1338 x1228) x1279 0) x142) (>= x399 0) (= x1279 (x665 (x1338 x876) (x497 3) 0)) (not x149) (< x399 256)) (and (= (ite x149 1 0) x88) x149)) (= x1388 x1068) (= x649 x27) (= x782 0) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x857) (and (< x857 128) (= (<= x857 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (>= x521 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1077) true) (= x336 x579) (not (> 636681789 x1124)) (= (- x661 x1005) x235) (= x782 x1121) (<= x336 1461501637330902918203684832716283019655932542975) (<= 0 x673) (= x643 x941) (>= x826 0) (not x629) (= (x1012 (x1338 274184521717934524641157099916833587209)) x1379) (= x1079 x673) (<= x1068 1461501637330902918203684832716283019655932542975) (> 2059964113 x1124) (> x1077 131) (= x1005 x476) (= 641995544 x1124) (< 0 x1379) (= x826 x1228) (= x114 x629) (= x918 x525) (= (= x235 x1008) x1136) (= x1273 x1079) (not (> 4 x1077)) (= x476 x1511) (< x1124 806251499) (= x1068 x412) (<= x521 1461501637330902918203684832716283019655932542975) x1136 (= x857 (x877 (- x1077 4)))) x1217)) x820))
(assert (x1052 x972))
(assert (x966 x604 x632))
(assert (=> (<= x876 10000) (= (x497 x876) (x1338 x876))))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1364 (x497 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (x1052 x1018))
(assert (x1052 x43))
(assert (x955 x625))
(assert (x1052 x1208))
(assert (= (x460 160) x296))
(assert (= x885 x127))
(assert (= 0 (x648 x1090)))
(assert (x1052 x397))
(assert (x1052 x672))
(assert (x1052 x2))
(assert (x1052 x723))
(assert (x1052 x432))
(assert (x955 x740))
(assert (= x63 true))
(assert (x1052 x842))
(assert (x1052 x1395))
(assert (x1052 x1196))
(assert (= (x1338 18446744073709551616) (x497 18446744073709551616)))
(assert (x1052 x1371))
(assert (x1052 x1118))
(assert (= true x727))
(assert (x955 x1260))
(assert (x1052 x818))
(assert (x1052 x1489))
(assert (x1052 x573))
(assert (x955 x584))
(assert (x130 274184521717934524641157099916833587231))
(assert (x729 x1260 x574))
(assert (x1052 x1391))
(assert (x10 x45))
(assert (= (ite (= x1404 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x648 x1404)) (x426 x1404)))
(assert (x1052 x349))
(assert (= 0 (x494 x597)))
(assert (= (x1364 (x497 826074471)) 826074471))
(assert (x1052 x366))
(assert (x1052 x677))
(assert (x1052 x1390))
(assert (x1052 x1081))
(assert (x1052 x1234))
(assert (x1052 x1087))
(assert (x1052 x1024))
(assert (x1052 x1072))
(assert (x1052 x538))
(assert (x1052 x502))
(assert (x1052 x258))
(assert (x1052 x568))
(assert (= (x497 1134440005) (x1338 1134440005)))
(assert (x955 x498))
(assert (x1052 x578))
(assert (x1052 x732))
(assert (x1052 x491))
(assert (x1052 x858))
(assert (x966 x580 x1483))
(assert (x1052 x601))
(assert (= x816 (=> (and (= (x1119 x28) x766) (= x1370 (ite (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1342)) (< x1342 0)) (> x1342 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x847) (and (< x847 160) (= (<= x847 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x190 (x58 (+ x73 64))) (= 0 x291) (= x143 (x58 (+ x512 x613))) (= (x58 (+ 64 x573)) x1404) (= (mod (* x798 x519) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x836) (= x1459 (ite (or (and (> x680 x805) (= (<= x805 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x680))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x805) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x680))) 1 0)) (= (not x1423) x560) (>= 1208925819614629174706175 x13) (< (* x1044 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x221 x1370 x1459) x1454) (= (x221 x1365 x1257) x291) (= (x221 18446744073709551615 x1249) x1325) (= x1249 (x1092 x1251)) (= (ite (or (and (> x805 x1151) (= (<= x805 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1151 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x805 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1151))) 1 0) x1257) (= (x58 (+ x1342 x805)) x232) (>= 1208925819614629174706175 x1394) (= (x877 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1342)) x680) (= x1365 (ite (not x1039) 1 0)) (not (ite x560 x560 (and (< 170141183460469231731687303715884105727 x766) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x766) true)))) (= (x221 115792089237316195423570985008687907853269984665640564039457584007913129639904 x809) x613) (= 0 x1454) (= x28 (x58 (+ x678 288))) (= x1039 (or (> x1342 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1342 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1342))))) (= x1432 (* x1044 x1324)) (= (x1510 x190) x365) (= (x1119 x512) x1394) (= (and (< 0 x766) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x766))) x1423) (= x143 x616) (< 0 x1325) (= (div x1432 1000000000000000000) x805) (= x809 (x58 (+ x847 31))) (= x573 (x58 (+ 64 x512))) (= (x221 18446744073709551615 x365) x1044) (not (= 0 x352)) (= x46 x232) (= (div x836 x1325) x1324) (= (x58 (+ 64 x597)) x1251) (not (> x805 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x13 (x1119 x1404)) (= (x221 340282366920938463463374607431768211455 x766) x519) (= x1151 (x877 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1342)))) x395)))
(assert (x1052 x509))
(assert (x1052 x1365))
(assert (= x1278 (and x1349 (not x148))))
(assert (x1052 x1487))
(assert (x966 x273 x1122))
(assert (= (x497 1099511627775) (x1338 1099511627775)))
(assert (x1052 x1105))
(assert (x1052 x1048))
(assert (x729 x1499 x451))
(assert (= (or x1507 (and x148 x1349)) x470))
(assert (= (x1338 3257672857) (x497 3257672857)))
(assert (x1052 x916))
(assert (x1052 x468))
(assert (x1052 x469))
(assert (= 1461501637330902918203684832716283019655932542976 (x1364 (x497 1461501637330902918203684832716283019655932542976))))
(assert (x1052 x1500))
(assert (x1052 x83))
(assert (x955 x1165))
(assert (x1052 x87))
(assert (x1052 x911))
(assert (x966 x1439 x362))
(assert (x1052 x1115))
(assert (x1052 x996))
(assert (x955 x111))
(assert (x1052 x1317))
(assert (= x1353 (x1364 (x1338 x1353))))
(assert (x1052 x730))
(assert (x1052 x1452))
(assert (x130 x305))
(assert (x812 x229 x204))
(assert (= 3695885053 (x1364 (x497 3695885053))))
(assert (x1052 x1167))
(assert (= x634 (=> (and (>= x1161 0) (= x724 2531764673) (< 0 x1407) (= x939 x1207) (not (< x724 2531764673)) (= x811 x1409) (> 3122421376 x724) (= x686 x1207) (< x724 2758797371) (= x1407 (x1012 (x1338 274184521717934524641157099916833587209))) (= 1000000000000000 x1482) (= 1000000000000000 x1462) (>= 1461501637330902918203684832716283019655932542975 x939) (= x811 0) (not (< x724 2059964113)) (<= x1161 1461501637330902918203684832716283019655932542975) (<= 0 x939) (<= x1314 1461501637330902918203684832716283019655932542975) (= x1161 x159) (<= 0 x1314)) (=> (and x4 (= (= 1000000000000000 x1437) x4) (= 1000000000000000 x249)) x1011))))
(assert (= (x552 288) (ite (and x400 x69) (x594 288) (x772 288))))
(assert (x1052 x409))
(assert (= (and (not x69) x400) x48))
(assert (= (x497 2993122508) (x1338 2993122508)))
(assert (= x1263 (or (and (not x1319) x1358) x107)))
(assert (x618 x957))
(assert (x1052 x1031))
(assert (x1052 x336))
(assert (= (x1364 (x497 115197700812830431890159100217698998050002284567939525164234024451216521560064)) 115197700812830431890159100217698998050002284567939525164234024451216521560064))
(assert (= x970 (x1364 (x1338 x970))))
(assert (x1134 x1473 x272))
(assert (x130 x99))
(assert (x130 x1116))
(assert (x1052 x1520))
(assert (x1052 x1256))
(assert (x1052 x624))
(assert (x1052 x1094))
(assert (x955 20282409603651670423947251286015))
(assert (= (x497 3122421376) (x1338 3122421376)))
(assert (x1052 x504))
(assert (x1052 x1240))
(assert (x1052 x1494))
(assert (x1052 x122))
(assert (= 20282409603651670423947251286016 (x1364 (x497 20282409603651670423947251286016))))
(assert (x955 x234))
(assert (x1052 x1305))
(assert (= (x1338 1034154046) (x497 1034154046)))
(assert (x1052 x259))
(assert (x953 x1365 x1257))
(assert (x1052 x1250))
(assert (= x1268 (=> (= x185 (= 274184521717934524641157099916833587221 x30)) (and (=> (and (not x1415) (= x936 2835717307) (= x22 x785) (= (x665 (x1338 274184521717934524641157099916833587209) (x497 1) 0) x807) (<= x381 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x1308) (= 1 x863) (= x342 (x877 (- x1200 4))) (= x649 x865) (= x1076 (x665 (x1338 274184521717934524641157099916833587209) (x497 1) 0)) (= (x280 x1123) x389) (= x785 x285) (= (x665 (x1338 x785) (x497 1) 0) x1123) (= 68 x1200) (= x432 (x877 (- x381 x27))) (<= 0 x389) (= x1501 32) (= x177 x649) x185 (not (= x936 826074471)) (= x1018 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> x354 0) (<= 0 x381) (= x1117 x389) (= x1415 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x342) true) (< x342 64)) (> x342 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< (+ x649 x389) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (> 4 x1200)) (not (> 826074471 x936)) (not (= x936 1889567281)) (= x514 x1200) (= (x1141 x807) x381) (= x954 274184521717934524641157099916833587209) (not (= x936 2514000705)) (= (> x177 x381) x1308) (= (x1012 (x1338 274184521717934524641157099916833587221)) x354) (= 274184521717934524641157099916833587209 x1361) (<= x389 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1406 (+ x1117 x865)) (<= x785 1461501637330902918203684832716283019655932542975)) x1466) (=> (not x185) x1293)))))
(assert (= (x1364 (x497 1736444767)) 1736444767))
(assert (x1052 x391))
(assert (= (x497 1461501637330902918203684832716283019655932542975) (x1338 1461501637330902918203684832716283019655932542975)))
(assert (= x1101 (x1364 (x1338 x1101))))
(assert (x1052 x1209))
(assert (= (ite (and x1419 x598) (x29 160) (x187 160)) (x1078 160)))
(assert (x1052 x771))
(assert (= (x1364 (x169 x630 1)) (+ 1 (x1364 x630))))
(assert (x1052 x143))
(assert (x1052 x1159))
(assert (x1052 x252))
(assert (x1052 x688))
(assert (x955 x839))
(assert (x1052 x579))
(assert (= (x497 1000000000000000000) (x1338 1000000000000000000)))
(assert (x1052 x897))
(assert (x1052 x41))
(assert (= 274184521717934524641157099916833587229 (x1364 (x497 274184521717934524641157099916833587229))))
(assert (x1052 x108))
(assert (= (x1364 (x1338 x457)) x457))
(assert (x1052 x131))
(assert (x955 x1230))
(assert (x1052 x597))
(assert (x1052 x724))
(assert (x1052 x381))
(assert (x1052 x1348))
(assert (x1052 x740))
(assert (x1052 x5))
(assert (x1052 x126))
(assert (x1052 x285))
(assert (= (x497 274184521717934524641157099916833587229) (x1338 274184521717934524641157099916833587229)))
(assert (x1052 x1302))
(assert (x1052 x275))
(assert (x1052 x40))
(assert (x1052 x387))
(assert (x1052 x232))
(assert (= (+ 2 (x1364 x427)) (x1364 (x169 x427 2))))
(assert (x1052 x843))
(assert (x1052 x1482))
(assert (x1052 x521))
(assert (x1052 x111))
(assert (x1052 x766))
(assert (x1052 x226))
(assert (x1052 x307))
(assert (= (x1364 (x1338 x305)) x305))
(assert (x966 x625 x793))
(assert (x10 x604))
(assert (x1052 x430))
(assert (x1052 x100))
(assert (x955 x1417))
(assert (x1052 x799))
(assert (x1052 x611))
(assert (x1052 x1407))
(assert (x130 x1305))
(assert (x1052 x376))
(assert (x1052 x1367))
(assert (x1052 x231))
(assert (= 2514000705 (x1364 (x497 2514000705))))
(assert (= x1291 (=> (= (or (and (> 0 x1342) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1342))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1342)) x373) (and (=> (and (= 1 x502) (not x373) (= x508 x704)) x396) (=> x373 x706)))))
(assert (= x1083 (x1364 (x1338 x1083))))
(assert (x1052 x153))
(assert (x1052 x1212))
(assert (x1052 x164))
(assert (x955 x1249))
(assert (= (x1364 (x497 340282366920938463463374607431768211455)) 340282366920938463463374607431768211455))
(assert (x955 255))
(assert (x130 x647))
(assert (x812 x140 x1480))
(assert (= (x552 x845) (ite (and x400 x69) (x594 x845) (x772 x845))))
(assert (x955 x1447))
(assert (x1052 x557))
(assert (x1134 x1165 x77))
(assert (x1052 x892))
(assert (x966 x1447 x1492))
(assert (= true x60))
(assert (x1052 x1429))
(assert (x1052 x529))
(assert (x1052 x945))
(assert (x130 274184521717934524641157099916833587225))
(assert (x1052 x476))
(assert (x1052 x202))
(assert (x1052 x627))
(assert (x1052 x347))
(assert (= (=> (= x358 (= 274184521717934524641157099916833587231 x1330)) (and (=> (and (> x247 0) (<= x615 1208925819614629174706175) (>= x759 0) (<= x100 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> 4 x252)) (not (= 2362581449 x1331)) (= x252 4) (= (x1408 160) x624) (= x352 1) (= (x1408 224) x893) (= (x1408 192) x553) (< x759 1208925819614629174706176) (not (< x1331 2362581449)) (= x247 (x1012 (x1338 274184521717934524641157099916833587231))) (not (= x1331 3257672857)) (= x1226 (x1408 128)) (= (x1408 192) x355) (= (x1408 256) x1367) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x641) (not (= 4062139261 x1331)) (>= x378 0) (= x838 (x1408 160)) (= x606 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x59 (x665 (x1338 x643) (x497 1) 0)) (>= x615 0) x358 (= (x58 (+ x678 352)) x1259) (= x252 x1500) (= 160 x847) (= x700 (x58 (+ x678 320))) (= (x1408 256) x287) (< x615 1208925819614629174706176) (<= x759 1208925819614629174706175) (= (x58 (+ x678 288)) x1112) (= x1289 (x58 (+ 384 x678))) (<= x378 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x100) (= (x1408 224) x540) (= x1331 4272920204) (= (x748 x59) x641) (<= 0 x641) (= x491 (x1408 128))) x816) (=> (not x358) x835))) x340))
(assert (x955 x586))
(assert (=> (<= x1228 10000) (= (x1338 x1228) (x497 x1228))))
(assert (x955 x168))
(assert (x1052 x193))
(assert (x1052 x1344))
(assert (x955 x1188))
(assert (= (+ 2 (x1364 x1272)) (x1364 (x169 x1272 2))))
(assert (x1052 x1332))
(assert (x729 x1460 x196))
(assert (x1052 x997))
(assert (x1052 x262))
(assert (x1052 x957))
(assert (x1052 x312))
(assert (= x570 (=> (and (= x93 0) (not (> 2758797371 x626)) (not (= 2993122508 x626)) (= x1488 (x1012 (x1338 274184521717934524641157099916833587209))) (>= 18446744073709551615 x321) (> 3122421376 x626) (>= 1461501637330902918203684832716283019655932542975 x799) (= x93 x1409) (not (> 2059964113 x626)) (<= 0 x691) (= x164 x760) (= x760 (x221 18446744073709551615 x321)) (<= 0 x799) (= x626 3075265556) (not (= x626 2758797371)) (>= 1461501637330902918203684832716283019655932542975 x549) (< x321 18446744073709551616) (>= x321 0) (not (= 2867386960 x626)) (= x159 x691) (not (= x626 2879910238)) (= x549 x52) (not (< x626 2531764673)) (>= 1461501637330902918203684832716283019655932542975 x691) (< 0 x1488) (= x686 x52) (>= x549 0) (not (= 2834295333 x626))) (=> (= x1437 x164) x634))))
(assert (x1052 x1165))
(assert (x966 x468 x85))
(assert (x1052 x189))
(assert (x1052 x237))
(assert (x955 x321))
(assert (x1052 x817))
(assert (= (x1364 (x169 x35 2)) (+ 2 (x1364 x35))))
(assert (x1052 x456))
(assert (x130 274184521717934524641157099916833587229))
(assert (x955 x766))
(assert (= (x1364 (x497 1208925819614629174706176)) 1208925819614629174706176))
(assert (= (x1364 (x1338 x1366)) x1366))
(assert (x10 x7))
(assert (= (x1364 (x1338 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x1052 x1156))
(assert (x812 x854 x559))
(assert (= x1506 (x1364 (x1338 x1506))))
(assert (x1052 x420))
(assert (x1052 x954))
(assert (x1052 x1079))
(assert (x1052 x1093))
(assert (x1052 x14))
(assert (= x260 (and x1225 x1184)))
(assert (x1052 x1436))
(assert (x1052 x67))
(assert (x1052 x1000))
(assert (= x699 (=> (and (> 2059964113 x1362) (not (= 1157571613 x1362)) (< x1439 20282409603651670423947251286016) (<= 0 x1439) (not (= 1153654023 x1362)) (not (= 1134440005 x1362)) (< 0 x393) (= x14 x346) (= x14 (x221 20282409603651670423947251286015 x1439)) (= x1362 1168994686) (not (< x1362 1134440005)) (>= 20282409603651670423947251286015 x1439) (= x393 (x1012 (x1338 274184521717934524641157099916833587209))) (not (> 1034154046 x1362)) (< x1362 1176186698) (not (= 1153557995 x1362))) (=> (and (= x346 x1144) (= x1144 x472)) x713))))
(assert (x1052 x12))
(assert (= x1265 (or (and x478 x585) (and x583 x909))))
(assert (x1052 x146))
(assert (x1052 x643))
(assert (x1052 x1422))
(assert (x1052 x950))
(assert (x1052 x859))
(assert (x1052 x1057))
(assert (= (x1338 1800920247) (x497 1800920247)))
(assert (x1052 x389))
(assert (x955 x1460))
(assert (x1052 x1398))
(assert (= x693 (=> (= x575 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x733) (and (< x733 0) (= true (<= x733 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (and (=> (and (= x1422 x656) (not x575) (= x762 1)) x984) (=> x575 x717)))))
(assert (x729 x1239 x944))
(assert (x1052 x452))
(assert (x1052 x1448))
(assert (x1052 x1183))
(assert (x1052 x321))
(assert (x1052 x1409))
(assert (x1052 x464))
(assert (x1052 x1303))
(assert (= (=> (= x1472 x1181) x699) x1041))
(assert (x966 x168 x481))
(assert (x1052 x13))
(assert (x1052 x207))
(assert (= (x497 1889567281) (x1338 1889567281)))
(assert (x1052 x608))
(assert (x1052 x1439))
(assert (= x515 (x1364 (x1338 x515))))
(assert (x1052 x1312))
(assert (x966 x1127 x1154))
(assert (x130 x746))
(assert (x1052 x898))
(assert (x1052 x1095))
(assert (x1052 x1086))
(assert (x955 x496))
(assert (= 274184521717934524641157099916833587225 (x1364 (x1338 274184521717934524641157099916833587225))))
(assert (x955 x915))
(assert (= x329 x63))
(assert (x1052 x227))
(assert (= x424 (x1364 (x1338 x424))))
(assert (x1052 x615))
(assert (=> (<= x38 10000) (= (x1338 x38) (x497 x38))))
(assert (x1052 x1227))
(assert (x966 x777 x70))
(assert (x1052 x375))
(assert (x1052 x282))
(assert (x955 x103))
(assert (x955 340282366920938463463374607431768211455))
(assert (= (x552 x1090) (ite (and x69 x400) (x594 x1090) (x772 x1090))))
(assert (x1052 x759))
(assert (x1052 x761))
(assert (x1052 x548))
(assert (= (x648 x28) 0))
(assert (= (x497 2879910238) (x1338 2879910238)))
(assert (= x1228 (x1364 (x1338 x1228))))
(assert (x1052 x604))
(assert (x1052 x1394))
(assert (= (x1364 (x1338 x785)) x785))
(assert (x966 x1359 x533))
(assert (= (x1364 (x1338 x180)) x180))
(assert (x955 x1359))
(assert (x955 x27))
(assert (x1052 x540))
(assert (=> (<= x785 10000) (= (x497 x785) (x1338 x785))))
(assert (= 2362581449 (x1364 (x497 2362581449))))
(assert (= (x1364 (x1338 x1081)) x1081))
(assert (x1052 x172))
(assert (x1052 x787))
(assert (x1052 x1091))
(assert (x1052 x1131))
(assert (x1052 x863))
(assert (x1052 x1035))
(assert (x812 x111 x763))
(assert (x1052 x1465))
(assert (x1052 x1485))
(assert (x1052 x1286))
(assert (x1052 x976))
(assert (= (=> (and (>= 255 x1261) (< x1261 256) (<= 0 x1116) (= (x665 (x1338 x1116) x18 0) x832) (= x148 (= 0 x1261)) (= (x665 (x497 0) (x497 9) 0) x1096) (= (x1107 x832) x1261) (>= x1261 0) (= (x1065 x1096) x1116) (= (x665 (x1338 x1436) (x497 11) 0) x18) (> 1461501637330902918203684832716283019655932542976 x1116) (<= x1116 1461501637330902918203684832716283019655932542975) (= 0 x406)) (and (=> (and x148 (= x46 x1342) (= x704 x616)) x395) (=> (not x148) x1291))) x662))
(assert (x1052 x1133))
(assert (x10 x1359))
(assert (= 274184521717934524641157099916833587221 (x1364 (x1338 274184521717934524641157099916833587221))))
(assert (x1052 x3))
(assert (x1052 x783))
(assert (x1134 x1386 x26))
(assert (x1052 x181))
(assert (x812 x1494 x1477))
(assert (x1052 x393))
(assert (x1052 x767))
(assert (x1052 x948))
(assert (x1052 x1059))
(assert (x1052 x811))
(assert (= (ite (= x845 x1299) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x552 x845)) (x410 x845)))
(assert (x1052 x310))
(assert (x1052 x870))
(assert (x10 x83))
(assert (= (x497 1208925819614629174706176) (x1338 1208925819614629174706176)))
(assert (= (=> (and (not (= x532 0)) (<= x390 1208925819614629174706175) (= (x221 18446744073709551615 x854) x815) (>= 1208925819614629174706175 x1087) (> x815 0) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x310) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x310)) (> 160 x310)))) (= (x552 288) x1087) (= 0 x331) (= x420 (x221 340282366920938463463374607431768211455 x824)) (= x656 (x58 (+ x873 288))) (= (and (= true (<= x824 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x824 0)) x738) (= (x552 416) x390) (= (not x738) x1426) (= x824 (x552 320)) (not (ite x1426 x1426 (and (< 170141183460469231731687303715884105727 x824) (= (<= x824 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x733 (ite (or (= x978 0) (= x815 0)) 0 (ite (= (< x978 57896044618658097711785492504343953926634992332820282019728792003956564819968) (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x815)) (div (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x978) x978 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x877 (- x978 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x815) x815 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x877 (- x815 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div (ite (< x978 57896044618658097711785492504343953926634992332820282019728792003956564819968) x978 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x877 (- x978 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (< x815 57896044618658097711785492504343953926634992332820282019728792003956564819968) x815 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x877 (- x815 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x221 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1176) x873) (= (x58 (+ 31 x310)) x1176) (= x1184 (> x1056 0)) (= x1056 (x221 255 x1386)) (= x978 (mod (* (x1373 x1460) x420) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> x1184 x136) (=> (and (= x998 x656) (not x1184) (= x733 x1337)) x1158))) x588))
(assert (x955 x1055))
(assert (= x136 (=> (and (= (x1065 x937) x647) (= x1150 (x665 (x1338 x1101) (x497 11) 0)) (>= x647 0) (= 0 x330) (< x647 1461501637330902918203684832716283019655932542976) (= (x1107 x488) x153) (>= 1461501637330902918203684832716283019655932542975 x647) (= x488 (x665 (x1338 x647) x1150 0)) (>= 255 x153) (>= x153 0) (> 256 x153) (= x576 (= 0 x153)) (= x937 (x665 (x497 0) (x497 9) 0))) (and (=> (not x576) x693) (=> (and (= x328 x733) (= x656 x469) x576) x95)))))
(assert (x1052 x1235))
(assert (x1052 x1205))
(assert (x1052 x515))
(assert (= x1507 (or (and x999 x921) (and x358 x298))))
(assert (x1052 x1453))
(assert (= (x1338 170141183460469231731687303715884105727) (x497 170141183460469231731687303715884105727)))
(assert (= (x497 18446744073709551615) (x1338 18446744073709551615)))
(assert (= (x426 x28) (ite (= x28 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x648 x28))))
(assert (x966 x203 x160))
(assert (= 2835717307 (x1364 (x497 2835717307))))
(assert (x1052 x71))
(assert (x1052 x650))
(assert (= (x1364 (x1338 x33)) x33))
(assert (= (and x969 (not x593)) x147))
(assert (= (x1364 (x497 2993122508)) 2993122508))
(assert (x1052 x34))
(assert (= (x1364 (x497 2055092157)) 2055092157))
(assert (x1052 x82))
(assert (x1052 x178))
(assert (x1052 x38))
(assert (x812 x498 x637))
(assert (x1052 x1207))
(assert (= (=> (and (= x1298 (not x537)) (= x537 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x407) true) (< x407 0)) (> x407 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (ite x1298 1 0) x502) (= x508 x1224)) x396) x301))
(assert (x1052 x197))
(assert (= (x1364 (x497 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x1052 x1201))
(assert (= 274184521717934524641157099916833587229 (x1364 (x1338 274184521717934524641157099916833587229))))
(assert (x966 x40 x1218))
(assert (x1052 x1040))
(assert (= 340282366920938463463374607431768211456 (x1364 (x497 340282366920938463463374607431768211456))))
(assert (= (+ (x1364 x1272) 1) (x1364 (x169 x1272 1))))
(assert (= (x84 x845) (ite (= 288 x845) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x648 x845))))
(assert (x729 x766 x1508))
(assert (= x453 (=> (= (= 274184521717934524641157099916833587225 x30) x1295) (and (=> (and x1295 (= x1125 (x1012 (x1338 274184521717934524641157099916833587225))) (= (+ x359 x23) x1075) (= (x877 (- x776 x27)) x1094) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x649 x842)) (= x359 x842) (not (> 4 x535)) (= x514 x535) (= 32 x1501) (= x188 (x877 (- x535 4))) (= x863 1) (= (x665 (x1338 274184521717934524641157099916833587209) (x497 1) 0) x1412) (= 68 x535) (= x623 274184521717934524641157099916833587209) (= (x665 (x1338 274184521717934524641157099916833587209) (x497 1) 0) x1066) (not x416) (not (> 826074471 x779)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1493) (= 2835717307 x779) (not (= x779 2514000705)) (= (> x542 x776) x829) (= (x1322 x1066) x776) (not x829) (<= x776 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x779 826074471)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x842) (= x23 x649) (not (= x779 1889567281)) (= x1081 x285) (= (x665 (x1338 x1081) (x497 1) 0) x638) (>= 1461501637330902918203684832716283019655932542975 x1081) (>= x776 0) (= x1344 274184521717934524641157099916833587209) (> x1125 0) (= x842 (x1100 x638)) (= x542 x649) (= x1081 x1264) (= (or (and (> 64 x188) (= true (<= x188 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x188)) x416) (>= x842 0)) x1466) (=> (not x1295) x1268)))))
(assert (= x269 (=> (and (= x262 (x1381 x219)) (= (x1381 x7) x455) (= x1203 (- x1290 x933)) (= (x1316 x1020) x219) (= (+ x244 x32) x1290) (<= x219 20282409603651670423947251286015) (= (x221 18446744073709551615 x1494) x311) (= x474 (x880 192)) (= (x221 18446744073709551615 x474) x24) (= (x1180 128) x203) (= x1513 (x1516 224)) (= x933 (ite (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x262) x262 (- x262 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1381 x203) x584) (= x7 (x221 20282409603651670423947251286015 x584)) (= (x221 255 x1188) x499) (= x32 x31) (= (x739 160) x1494) (= x244 (ite (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x455) x455 (- x455 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x221 1461501637330902918203684832716283019655932542975 x525) x1083) (= x1188 (x194 256)) (= x1020 (x665 (x1338 x1083) (x497 5) 0)) (>= x219 0) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1381 x83)) (and (> 0 (x1381 x83)) (= (<= (x1381 x83) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1319) (= (x221 65535 x1513) x554)) (and (=> (and (= x625 (x1381 x1191)) (= x896 (x665 (x1338 x305) (x497 5) 0)) (>= x1101 0) (= (x1381 x83) x858) (<= x1101 65535) x1319 (or (and x778 (= x1040 (x877 (- 0 x304))) (= x783 (x221 20282409603651670423947251286015 x866)) (= x1040 x45) (>= 18446744073709551615 x498) (< x498 18446744073709551616) (= x853 (x221 20282409603651670423947251286015 x318)) (not (or (> x866 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x866) (= true (<= x866 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (div x1503 1000000000000000) x318) (<= 0 x498) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x783 x498)) (= (x877 (- 0 x625)) x866) (not (> x853 10141204801825835211973625643007)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x304)) (not (= x625 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x1503 (* x498 x783)) (= x304 (x1381 x318))) (and (< (* x321 x1131) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x740 x45) (> 18446744073709551616 x321) (= (div x155 1000000000000000) x740) (= (x221 20282409603651670423947251286015 x740) x1250) (>= 18446744073709551615 x321) (not (> x1250 10141204801825835211973625643007)) (<= 0 x321) (= (x221 20282409603651670423947251286015 x625) x1131) (not (or (> x625 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x625)) (> 0 x625)))) (not x778) (= (* x1131 x321) x155))) (= x1101 (x669 x896)) (= (x221 1461501637330902918203684832716283019655932542975 x525) x305) (< x1101 65536) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x858)) (>= 20282409603651670423947251286015 x1191) (not (> x965 x423)) (= x434 (x665 (x1338 x746) (x497 5) 0)) (= x1191 (x1029 x434)) (= (x877 (- 0 x858)) x1467) (<= 0 x1191) (> 20282409603651670423947251286016 x1191) (= (x221 1461501637330902918203684832716283019655932542975 x525) x746) (= (x221 20282409603651670423947251286015 x1467) x423) (= (or (and (= true (<= x625 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x625)) (> x625 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x778)) x503) (=> (and (= x1034 288) (not x1319)) x9)))))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1052 x602))
(assert (x1052 x47))
(assert (x1052 x313))
(assert (x1052 x884))
(assert (x966 x411 x841))
(assert (= x1349 (and x414 x210)))
(assert (x1052 x825))
(assert (x955 x777))
(assert (x10 x219))
(assert (x1052 x1397))
(assert (x955 x474))
(assert (= (x1364 (x1338 x876)) x876))
(assert (x1052 x712))
(assert (x955 x525))
(assert (= (x1338 826074471) (x497 826074471)))
(assert (x1052 x103))
(assert (= 65535 (x1364 (x497 65535))))
(assert (x953 x818 x126))
(assert (x1052 x1330))
(assert (x1052 x549))
(assert (= 1168994686 (x1364 (x497 1168994686))))
(assert (x1052 x337))
(assert (x1052 x152))
(assert (= (x1338 3319015721) (x497 3319015721)))
(assert (x130 x398))
(assert (x1052 x617))
(assert (=> (>= 10000 x1229) (= (x497 x1229) (x1338 x1229))))
(assert (x883 x152 x357 x39 x339))
(assert (= 18446744073709551615 (x1364 (x497 18446744073709551615))))
(assert (= 1461501637330902918203684832716283019655932542975 (x1364 (x497 1461501637330902918203684832716283019655932542975))))
(assert (x1052 x519))
(assert (x1052 x486))
(assert (x1052 x806))
(assert (x1052 x439))
(assert (x955 x443))
(assert (x955 x1232))
(assert (x130 x785))
(assert (x1052 x1501))
(assert (= 1000000000000000000 (x1364 (x497 1000000000000000000))))
(assert (x1052 x1169))
(assert (x1052 x651))
(assert (x955 x1499))
(assert (x1052 x554))
(assert (= 274184521717934524641157099916833587233 (x1364 (x497 274184521717934524641157099916833587233))))
(assert (x130 274184521717934524641157099916833587221))
(assert (x1052 x318))
(assert (x1052 x569))
(assert (=> (<= x1046 10000) (= (x1338 x1046) (x497 x1046))))
(assert (x955 x516))
(assert (=> (>= 10000 x231) (= (x497 x231) (x1338 x231))))
(assert (x1052 x1486))
(assert (=> (>= 10000 x970) (= (x1338 x970) (x497 x970))))
(assert (x1052 x173))
(assert (x1052 x922))
(assert (x1052 x378))
(assert (x1052 x1222))
(assert (x966 x1238 x110))
(assert (= (x1338 274184521717934524641157099916833587209) (x497 274184521717934524641157099916833587209)))
(assert (x130 x903))
(assert (= (and x1419 (not x598)) x969))
(assert (x1052 x106))
(assert (= 1034154046 (x1364 (x497 1034154046))))
(assert (x1052 x1387))
(assert (= (x1338 1153557995) (x497 1153557995)))
(assert (x1052 x327))
(assert (x1052 x848))
(assert (x955 x365))
(assert (x1052 x910))
(assert (x955 x809))
(assert (x812 x1521 x192))
(assert (=> (<= x165 10000) (= (x1338 x165) (x497 x165))))
(assert (x1052 x1248))
(assert (x1052 x168))
(assert (= 1176186698 (x1364 (x497 1176186698))))
(assert (x1052 x56))
(assert (x1052 x496))
(assert (x1052 x642))
(assert (x1052 x326))
(assert (= (x1364 (x497 3319015721)) 3319015721))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1364 (x497 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x1052 x255))
(assert (= 18446744073709551616 (x1364 (x497 18446744073709551616))))
(assert (= x478 (and x527 x575)))
(assert (x1052 x872))
(assert (= (x1364 (x497 115792089237316195423570985008687907853269984655499359237631748795939503996928)) 115792089237316195423570985008687907853269984655499359237631748795939503996928))
(assert (x1052 x79))
(assert (x1052 x918))
(assert (x1052 x165))
(assert (x1052 x1454))
(assert (=> (<= x1083 10000) (= (x497 x1083) (x1338 x1083))))
(assert (x955 x580))
(assert (x1052 x305))
(assert (x955 x824))
(assert (x1052 x1001))
(assert (=> (<= x99 10000) (= (x1338 x99) (x497 x99))))
(assert (x1052 x620))
(assert (x1052 x1512))
(assert (x955 x246))
(assert (x1052 x490))
(assert (= x1242 (=> (and (< 0 x636) (not (= x1030 0)) (= x578 (mod (* x1104 (x1373 x957)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x221 115792089237316195423570985008687907853269984665640564039457584007913129639904 x152) x1192) (= (ite (or (= x578 0) (= x636 0)) 0 (ite (= (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x636) (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x578)) (div (ite (< x578 57896044618658097711785492504343953926634992332820282019728792003956564819968) x578 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x877 (- x578 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x636) x636 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x877 (- x636 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x578) x578 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x877 (- x578 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (< x636 57896044618658097711785492504343953926634992332820282019728792003956564819968) x636 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x877 (- x636 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1342) (not (or (and (< x539 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x539) true)) (> x539 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x152 (x58 (+ x539 31))) (= x704 (x58 (+ x1192 128))) (= (not x1451) x1155) (= x210 (< 0 x320)) (>= 1208925819614629174706175 x106) (= (x221 18446744073709551615 x854) x636) (= (x1078 128) x106) (= (x221 255 x1386) x320) (not (ite x1155 x1155 (and (> x1499 170141183460469231731687303715884105727) (= true (<= x1499 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x1078 160) x1499) (= x1451 (and (< 0 x1499) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1499) true))) (= x787 (x1078 256)) (= x688 0) (= (x221 340282366920938463463374607431768211455 x1499) x1104) (<= x787 1208925819614629174706175)) (and (=> x210 x662) (=> (and (= x407 x1342) (not x210) (= x704 x1224)) x301)))))
(assert (x1052 x586))
(assert (x1052 x1517))
(assert (x1052 x334))
(assert (x1052 x88))
(assert (x955 x818))
(assert (x1052 x522))
(assert (x955 x1473))
(assert (x955 x754))
(assert (x883 x809 x1399 x1523 x295))
(assert (=> (<= x1366 10000) (= (x497 x1366) (x1338 x1366))))
(assert (x1052 x1127))
(assert (x1052 x1044))
(assert (= (ite (and x598 x1419) (x29 x28) (x187 x28)) (x1078 x28)))
(assert (x1052 x11))
(assert (= x133 (and (not x248) x1237)))
(assert (= (x1338 1153654023) (x497 1153654023)))
(assert (x1052 x768))
(assert (= (x1364 (x1338 x1229)) x1229))
(assert (= 274184521717934524641157099916833587233 (x1364 (x1338 274184521717934524641157099916833587233))))
(assert (x130 x1101))
(assert (x1052 x700))
(assert (x1052 x927))
(assert (x1052 x607))
(assert (= x728 (and (not x1145) x48)))
(assert (x955 65535))
(assert (x130 274184521717934524641157099916833587233))
(assert (x955 x1191))
(assert (x966 x1512 x118))
(assert (x966 x997 x1357))
(assert (= (x497 20282409603651670423947251286015) (x1338 20282409603651670423947251286015)))
(assert (x1052 x353))
(assert (x1052 x628))
(assert (= x414 (or (and x593 x969) (and x1419 x598))))
(assert (x1052 x413))
(assert (x1052 x1015))
(assert (x1052 x1124))
(assert (x1052 x1324))
(assert (x1052 x304))
(assert (x1052 x1151))
(assert (x1052 x1215))
(assert (= x1225 (or (and x400 x69) (and x48 x1145))))
(assert (x1052 x893))
(assert (x1052 x879))
(assert (= (x1078 128) (ite (and x598 x1419) (x29 128) (x187 128))))
(assert (x1052 x782))
(assert (x1052 x501))
(assert (x1052 x854))
(assert (= (x497 274184521717934524641157099916833587231) (x1338 274184521717934524641157099916833587231)))
(assert (x1052 x998))
(assert (x812 x1249 x230))
(assert (x1134 x1188 x431))
(assert (x1052 x694))
(assert (x1052 x99))
(assert (x1052 x1120))
(assert (x1052 x733))
(assert (x966 x754 x137))
(assert (x955 x927))
(assert (x1052 x773))
(assert (= x810 true))
(assert (x1052 x73))
(assert (not x702))
(assert (x1052 x199))
(assert (=> (>= 10000 x424) (= (x1338 x424) (x497 x424))))
(assert (x1052 x27))
(assert (x1052 x229))
(assert (x1052 x710))
(assert (x1052 x1161))
(assert (x1052 x1249))
(assert (= (x497 1208925819614629174706175) (x1338 1208925819614629174706175)))
(assert (x966 x27 x1023))
(assert (x1052 x355))
(assert (=> (>= 10000 x647) (= (x497 x647) (x1338 x647))))
(assert (x1052 x1108))
(assert (= x885 x609))
(assert (x1052 x222))
(assert (x966 x1162 x1258))
(assert (x1052 x436))
(assert (x1052 x849))
(assert (=> (>= 10000 x255) (= (x497 x255) (x1338 x255))))
(assert (x130 x43))
(assert (x1052 x24))
(assert (= (and (not x185) x1502) x17))
(assert (x1052 x1189))
(assert (x953 x924 x1050))
(assert (= x945 (x1364 (x1338 x945))))
(assert (x966 x496 x716))
(assert (x1052 x1045))
(assert (x1052 x1204))
(assert (x1052 x42))
(assert (x1052 x959))
(assert (x812 x321 x1025))
(assert (x1052 x614))
(assert (x1052 x678))
(assert (x1052 x951))
(assert (x130 x1081))
(assert (x1052 x705))
(assert (x130 x515))
(assert (= 274184521717934524641157099916833587221 (x1364 (x497 274184521717934524641157099916833587221))))
(assert (= (ite (= 288 x1090) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x648 x1090)) (x84 x1090)))
(assert (x1052 x1030))
(assert (x955 x116))
(assert (= x844 x609))
(assert (x1052 x657))
(assert (x1052 x1363))
(assert (x1052 x1050))
(assert (x1052 x1467))
(assert (x1052 x1126))
(assert (x1052 x134))
(assert (x1052 x1036))
(assert (x1052 x1055))
(assert (x1052 x1125))
(assert (x1052 x1084))
(assert (x1052 x325))
(assert (x1052 x587))
(assert (x1052 x785))
(assert (= 0 (x1236 x418)))
(assert (x1052 x128))
(assert (= (x1364 (x1338 x1443)) x1443))
(assert (x1052 x864))
(assert (x1052 x473))
(assert (x130 x1443))
(assert (= (x1364 (x1338 274184521717934524641157099916833587209)) 274184521717934524641157099916833587209))
(assert (x1052 x1462))
(assert (x1052 x792))
(assert (= (x1338 1176186698) (x497 1176186698)))
(assert (x955 x1162))
(assert (= (x497 1558726628) (x1338 1558726628)))
(assert (x1052 x539))
(assert (x1052 x299))
(assert (x955 x1176))
(assert (x966 x1467 x581))
(assert (x1052 x1162))
(assert (x1052 x109))
(assert (x955 x1238))
(assert (x883 x1176 x667 x1385 x981))
(assert (= 274184521717934524641157099916833587225 (x1364 (x497 274184521717934524641157099916833587225))))
(assert (x1052 x1264))
(assert (x1052 x354))
(assert (x1052 x635))
(assert (x1052 x1460))
(assert (x812 x1232 x1064))
(assert (x1052 x423))
(assert (x1052 x1251))
(assert (= true x835))
(assert (= (x1364 (x497 1558726628)) 1558726628))
(assert (x1052 x719))
(assert (x1052 x961))
(assert (x1052 x1425))
(assert (x1052 x798))
(assert (x955 x897))
(assert (x1052 x1074))
(assert (x1052 x435))
(assert (x130 x1436))
(assert (=> (>= 10000 x305) (= (x1338 x305) (x497 x305))))
(assert (x1052 x671))
(assert (x955 x604))
(assert (x1052 x673))
(assert (= 0 (x1525 x651)))
(assert (x1052 x234))
(assert (x1052 x21))
(assert (= (x765 192) x1174))
(assert (x1052 x622))
(assert (= x1199 (or x251 (and x1278 (not x373)))))
(assert (x1052 x649))
(assert (x1052 x1468))
(assert (x1052 x625))
(assert (x1052 x1458))
(assert (x1052 x686))
(assert (x966 x103 x333))
(assert (x1052 x876))
(assert (=> (<= x1436 10000) (= (x497 x1436) (x1338 x1436))))
(assert (= (and x1199 (not x989)) x162))
(assert (x1052 x1386))
(assert (x1052 x551))
(assert (x953 x927 x668))
(assert (x729 x116 x216))
(assert (x1052 x1226))
(assert (x966 x709 x1168))
(assert (x1052 x703))
(assert (= 1208925819614629174706175 (x1364 (x497 1208925819614629174706175))))
(assert (x1052 x352))
(assert (x1052 x335))
(assert (= (x267 x430) 0))
(assert (x1052 x926))
(assert (x1052 x1192))
(assert (x966 x318 x846))
(assert (x1052 x256))
(assert (x1052 x296))
(assert (= (x1364 (x497 1752364190)) 1752364190))
(assert (x1052 x247))
(assert (= (x1364 (x497 4062139261)) 4062139261))
(assert (x1052 x1016))
(assert (= (x497 1157571613) (x1338 1157571613)))
(assert (x955 x997))
(assert (x1052 x915))
(assert (= (x1364 (x497 20282409603651670423947251286015)) 20282409603651670423947251286015))
(assert (= (x1364 (x1338 x398)) x398))
(assert (= 3257672857 (x1364 (x497 3257672857))))
(assert (x1052 x1299))
(assert (x1052 x1106))
(assert (x1052 x762))
(assert (= (=> (and (= (x1381 x45) x1460) (= 288 x642) (= (= 274184521717934524641157099916833587233 x5) x69) (= x5 (x221 1461501637330902918203684832716283019655932542975 x657))) (and (=> (not x69) x475) (=> (and (= (x206 256) x1303) x69 (not (= 3257672857 x1015)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1522) (<= 0 x61) (= x1118 (x206 160)) (= (x206 192) x1479) (= 1 x532) (= x1047 (x206 256)) (= x672 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x995 (x206 192)) (= x96 (x665 (x1338 x643) (x497 1) 0)) (<= 0 x961) (<= 0 x507) (= x1318 4) (>= 1208925819614629174706175 x61) (>= 1208925819614629174706175 x507) (not (< x1318 4)) (= 4272920204 x1015) (= (x795 x96) x961) (< x61 1208925819614629174706176) (<= x961 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x135 (x206 128)) (= x741 (x1012 (x1338 274184521717934524641157099916833587233))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x547) (= (x206 128) x1495) (= (x206 224) x383) (= x310 160) (not (= x1015 2362581449)) (< x507 1208925819614629174706176) (not (= x1015 4062139261)) (>= x1522 0) (= (x206 224) x849) (= x1248 (x206 160)) (= 4 x1318) (< 0 x741) (<= 0 x547) (not (< x1015 2362581449))) x588))) x503))
(assert (x1052 x159))
(assert (x10 x273))
(assert (x618 x1460))
(assert (= (x648 x845) 0))
(assert (x1052 x306))
(assert (x1052 x1104))
(assert (x1052 x273))
(assert (=> (>= 10000 x1443) (= (x497 x1443) (x1338 x1443))))
(assert (x1052 x1255))
(assert (x812 x234 x1383))
(assert (x1052 x116))
(assert (x955 x203))
(assert (= (x1338 2514000705) (x497 2514000705)))
(assert (= true x1293))
(assert (x1052 x323))
(assert (x1052 x1144))
(assert (x1052 x973))
(assert (x130 x945))
(assert (x130 274184521717934524641157099916833587209))
(assert (x1052 x845))
(assert (x955 x698))
(assert (x1052 x633))
(assert (x1052 x507))
(assert (x1052 x428))
(assert (x1052 x873))
(assert (= 0 (x912 x73)))
(assert (= (x1364 (x497 641995544)) 641995544))
(assert (= (x1338 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x497 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(check-sat)
