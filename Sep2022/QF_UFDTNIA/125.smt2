(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x1298 0)) (((x1081 (x1439 x1298) (x474 x1298) (x88 Int)) (x1410 (x345 x1298) (x311 Int)) (x1467 (x866 Int)))))
(declare-fun x1515 () Bool)
(declare-fun x234 () Int)
(declare-fun x1529 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x783 () Bool)
(declare-fun x141 () Bool)
(declare-fun x1047 () x1298)
(declare-fun x1421 () Int)
(declare-fun x67 () Int)
(declare-fun x924 () Int)
(declare-fun x648 () Int)
(declare-fun x967 () Bool)
(declare-fun x31 () x1298)
(declare-fun x735 () Bool)
(declare-fun x1062 () Int)
(declare-fun x488 () Bool)
(declare-fun x1123 () Int)
(declare-fun x1174 () Int)
(declare-fun x511 () x1298)
(declare-fun x556 () Int)
(declare-fun x84 () x1298)
(declare-fun x876 (Int) Int)
(declare-fun x494 () x1298)
(declare-fun x891 () Int)
(declare-fun x861 () x1298)
(declare-fun x415 () Bool)
(declare-fun x882 () Bool)
(declare-fun x689 () Bool)
(declare-fun x970 () Int)
(declare-fun x602 () Int)
(declare-fun x1135 () Bool)
(declare-fun x1263 () Int)
(declare-fun x1048 () Int)
(declare-fun x65 () Bool)
(declare-fun x1171 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x1067 (x1298) Int)
(declare-fun x1495 () Int)
(declare-fun x165 () Int)
(declare-fun x569 () Bool)
(declare-fun x401 () Bool)
(declare-fun x443 () x1298)
(declare-fun x918 () Int)
(declare-fun x1268 () Bool)
(declare-fun x1528 () Int)
(declare-fun x1049 () Bool)
(declare-fun x1379 () x1298)
(declare-fun x686 (x1298) Int)
(declare-fun x563 () Int)
(declare-fun x1276 () Bool)
(declare-fun x1554 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x1327 () Int)
(declare-fun x1138 () Int)
(declare-fun x1490 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x1553 () Int)
(declare-fun x1353 () Bool)
(declare-fun x1149 () Int)
(declare-fun x538 () Int)
(declare-fun x1003 () Bool)
(declare-fun x525 () Int)
(declare-fun x668 () Bool)
(declare-fun x952 () Int)
(declare-fun x38 () Bool)
(declare-fun x408 () Int)
(declare-fun x540 () Int)
(declare-fun x55 () Bool)
(declare-fun x248 () Int)
(declare-fun x1556 () Int)
(declare-fun x1255 () Int)
(declare-fun x600 () Int)
(declare-fun x1183 () Int)
(declare-fun x696 () Int)
(declare-fun x1338 () Int)
(declare-fun x1343 () Int)
(declare-fun x1050 () Int)
(declare-fun x840 () x1298)
(declare-fun x797 () x1298)
(declare-fun x750 () Bool)
(declare-fun x557 (x1298) Int)
(declare-fun x584 (x1298) Int)
(declare-fun x1543 () Int)
(declare-fun x257 () Int)
(declare-fun x173 () Bool)
(declare-fun x809 () Int)
(declare-fun x1221 () x1298)
(declare-fun x887 () x1298)
(declare-fun x457 () Int)
(declare-fun x104 () Bool)
(declare-fun x591 () Int)
(declare-fun x460 () x1298)
(declare-fun x546 () Bool)
(declare-fun x657 () Bool)
(declare-fun x1239 () Int)
(declare-fun x512 () Bool)
(declare-fun x1262 () x1298)
(declare-fun x907 () Int)
(declare-fun x90 () Bool)
(declare-fun x789 () Int)
(declare-fun x1520 () Int)
(declare-fun x230 () Int)
(declare-fun x1151 () Bool)
(declare-fun x491 () Int)
(declare-fun x856 () Int)
(declare-fun x787 (Int) Int)
(declare-fun x25 () Int)
(declare-fun x815 () Int)
(declare-fun x1438 () Bool)
(declare-fun x737 () Int)
(declare-fun x769 () Int)
(declare-fun x870 () Bool)
(declare-fun x743 () Int)
(declare-fun x140 () Int)
(declare-fun x1247 () x1298)
(declare-fun x1355 () Int)
(declare-fun x1317 () Bool)
(declare-fun x818 () Int)
(declare-fun x587 () Int)
(declare-fun x1299 () Bool)
(declare-fun x463 () Int)
(declare-fun x1497 () Bool)
(declare-fun x1209 () Int)
(declare-fun x1137 () Int)
(declare-fun x266 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x309 () Bool)
(declare-fun x30 () Int)
(declare-fun x1066 () Int)
(declare-fun x573 () Int)
(declare-fun x462 () Int)
(declare-fun x431 () Int)
(declare-fun x413 () Bool)
(declare-fun x186 () x1298)
(declare-fun x336 () Int)
(declare-fun x1143 () Bool)
(declare-fun x634 () Bool)
(declare-fun x20 () Int)
(declare-fun x1080 (Int) Int)
(declare-fun x997 () Int)
(declare-fun x868 () Int)
(declare-fun x858 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x149 () Bool)
(declare-fun x582 () x1298)
(declare-fun x484 () x1298)
(declare-fun x1429 () x1298)
(declare-fun x63 () Int)
(declare-fun x925 () Int)
(declare-fun x1250 () Bool)
(declare-fun x451 () x1298)
(declare-fun x728 () x1298)
(declare-fun x168 () Int)
(declare-fun x1045 () x1298)
(declare-fun x189 () x1298)
(declare-fun x1097 () Int)
(declare-fun x145 () Int)
(declare-fun x1550 (Int) Int)
(declare-fun x358 () Int)
(declare-fun x1100 () Int)
(declare-fun x1127 () Int)
(declare-fun x702 () Int)
(declare-fun x1551 () Int)
(declare-fun x147 () Bool)
(declare-fun x1202 () Int)
(declare-fun x1404 () Bool)
(declare-fun x850 () x1298)
(declare-fun x1349 () Int)
(declare-fun x308 () Int)
(declare-fun x1306 () x1298)
(declare-fun x959 () x1298)
(declare-fun x116 () Int)
(declare-fun x1415 (Int) Int)
(declare-fun x1205 () Int)
(declare-fun x958 (Int) x1298)
(declare-fun x131 () x1298)
(declare-fun x927 () Bool)
(declare-fun x441 () Int)
(declare-fun x1178 () Int)
(declare-fun x174 (x1298) Int)
(declare-fun x1356 () Int)
(declare-fun x1231 () Bool)
(declare-fun x1261 () Int)
(declare-fun x1498 () Bool)
(declare-fun x1266 () Int)
(declare-fun x369 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x1157 () Int)
(declare-fun x158 () Bool)
(declare-fun x1286 () Int)
(declare-fun x335 () Int)
(declare-fun x572 () x1298)
(declare-fun x917 () Int)
(declare-fun x135 () Int)
(declare-fun x239 () Int)
(declare-fun x1154 () Bool)
(declare-fun x576 () Int)
(declare-fun x210 () Bool)
(declare-fun x765 () Int)
(declare-fun x229 () Int)
(declare-fun x741 () Bool)
(declare-fun x1517 () x1298)
(declare-fun x678 () Bool)
(declare-fun x1389 () Int)
(declare-fun x302 () Int)
(declare-fun x34 () Int)
(declare-fun x1244 () Int)
(declare-fun x1132 () Int)
(declare-fun x1018 () Int)
(declare-fun x180 () Int)
(declare-fun x1194 () Int)
(declare-fun x208 () Bool)
(declare-fun x780 () Int)
(declare-fun x1326 () Bool)
(declare-fun x91 () Int)
(declare-fun x701 () Int)
(declare-fun x1083 () Int)
(declare-fun x1070 () Int)
(declare-fun x1144 () x1298)
(declare-fun x825 () Int)
(declare-fun x465 () Int)
(declare-fun x1525 () Int)
(declare-fun x323 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x419 () Int)
(declare-fun x1043 () Int)
(declare-fun x673 () x1298)
(declare-fun x738 () Int)
(declare-fun x237 () Int)
(declare-fun x1206 () Int)
(declare-fun x752 () Bool)
(declare-fun x530 () Bool)
(declare-fun x1180 () x1298)
(declare-fun x656 () x1298)
(declare-fun x1472 () Bool)
(declare-fun x862 () x1298)
(declare-fun x682 () Int)
(declare-fun x1046 () x1298)
(declare-fun x1386 () Bool)
(declare-fun x1115 () Int)
(declare-fun x1041 () Bool)
(declare-fun x77 () Int)
(declare-fun x683 () Int)
(declare-fun x965 () x1298)
(declare-fun x827 () Int)
(declare-fun x973 () Int)
(declare-fun x1518 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x826 () Int)
(declare-fun x878 () Int)
(declare-fun x1448 () Int)
(declare-fun x204 () Bool)
(declare-fun x928 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x543 () Bool)
(declare-fun x264 () Int)
(declare-fun x961 () x1298)
(declare-fun x777 () Int)
(declare-fun x1110 () Int)
(declare-fun x1468 () Int)
(declare-fun x773 () x1298)
(declare-fun x775 () Bool)
(declare-fun x545 () Bool)
(declare-fun x966 () Int)
(declare-fun x1284 () Int)
(declare-fun x80 () Int)
(declare-fun x155 () x1298)
(declare-fun x1333 () x1298)
(declare-fun x446 () Int)
(declare-fun x482 () Bool)
(declare-fun x483 () Int)
(declare-fun x319 () x1298)
(declare-fun x357 () Bool)
(declare-fun x611 () Bool)
(declare-fun x919 () x1298)
(declare-fun x1360 () Int)
(declare-fun x502 () Int)
(declare-fun x774 () Bool)
(declare-fun x354 () x1298)
(declare-fun x754 () Int)
(declare-fun x82 () Bool)
(declare-fun x902 () x1298)
(declare-fun x196 () Int)
(declare-fun x705 (Int) Int)
(declare-fun x300 () Bool)
(declare-fun x307 () Bool)
(declare-fun x713 () Int)
(declare-fun x1029 () x1298)
(declare-fun x211 () Int)
(declare-fun x875 () Bool)
(declare-fun x1044 () Int)
(declare-fun x1372 () Int)
(declare-fun x1016 () Int)
(declare-fun x274 () Int)
(declare-fun x235 () Int)
(declare-fun x417 () Int)
(declare-fun x117 () Bool)
(declare-fun x23 () Int)
(declare-fun x937 () Bool)
(declare-fun x259 () x1298)
(declare-fun x968 () Bool)
(declare-fun x373 () Int)
(declare-fun x12 () Int)
(declare-fun x740 () Int)
(declare-fun x1060 () Int)
(declare-fun x404 () Int)
(declare-fun x156 () Bool)
(declare-fun x51 () Int)
(declare-fun x1245 () Int)
(declare-fun x182 () Bool)
(declare-fun x448 () x1298)
(declare-fun x622 () Bool)
(declare-fun x400 () Bool)
(declare-fun x291 () x1298)
(declare-fun x1362 () Int)
(declare-fun x1511 () x1298)
(declare-fun x5 () Int)
(declare-fun x367 () Bool)
(declare-fun x500 () x1298)
(declare-fun x1500 () Int)
(declare-fun x1314 () Bool)
(declare-fun x635 () x1298)
(declare-fun x1214 () Bool)
(declare-fun x1466 () x1298)
(declare-fun x350 () Bool)
(declare-fun x1510 () Int)
(declare-fun x1380 () Int)
(declare-fun x1330 () Int)
(declare-fun x1483 () Int)
(declare-fun x751 () Int)
(declare-fun x1325 () Bool)
(declare-fun x41 () Bool)
(declare-fun x799 () Bool)
(declare-fun x11 () Int)
(declare-fun x1397 () Int)
(declare-fun x1027 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x270 () Bool)
(declare-fun x18 () Int)
(declare-fun x430 () Bool)
(declare-fun x353 () Bool)
(declare-fun x220 () Int)
(declare-fun x315 () Int)
(declare-fun x123 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x771 () x1298)
(declare-fun x594 () Bool)
(declare-fun x1390 () Int)
(declare-fun x692 () Bool)
(declare-fun x830 () Bool)
(declare-fun x916 () Int)
(declare-fun x577 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x661 () Int)
(declare-fun x980 () x1298)
(declare-fun x1251 (Int) Int)
(declare-fun x942 () Bool)
(declare-fun x346 () Int)
(declare-fun x671 () Bool)
(declare-fun x151 () x1298)
(declare-fun x1036 () Bool)
(declare-fun x518 () Int)
(declare-fun x570 () Bool)
(declare-fun x922 () Bool)
(declare-fun x1025 () x1298)
(declare-fun x1458 () Int)
(declare-fun x418 () Int)
(declare-fun x396 () Bool)
(declare-fun x134 () x1298)
(declare-fun x1270 () Bool)
(declare-fun x845 () Int)
(declare-fun x129 (x1298) Int)
(declare-fun x660 () Int)
(declare-fun x1184 () Bool)
(declare-fun x256 () Int)
(declare-fun x1547 () Int)
(declare-fun x691 () Int)
(declare-fun x1412 () Int)
(declare-fun x392 () Int)
(declare-fun x1252 () Int)
(declare-fun x649 () x1298)
(declare-fun x109 () Bool)
(declare-fun x481 () Int)
(declare-fun x1300 () x1298)
(declare-fun x1462 () Bool)
(declare-fun x295 (Int Int) Int)
(declare-fun x289 () Int)
(declare-fun x1318 () Bool)
(declare-fun x1075 () Int)
(declare-fun x1443 () x1298)
(declare-fun x292 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x24 () x1298)
(declare-fun x939 () Int)
(declare-fun x763 () x1298)
(declare-fun x568 () Int)
(declare-fun x626 (Int) Int)
(declare-fun x988 () Int)
(declare-fun x420 () Int)
(declare-fun x869 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x218 () Int)
(declare-fun x798 () x1298)
(declare-fun x1476 () Int)
(declare-fun x1201 () x1298)
(declare-fun x655 () Int)
(declare-fun x203 () Bool)
(declare-fun x1383 () x1298)
(declare-fun x1235 () Int)
(declare-fun x1152 () x1298)
(declare-fun x1006 () Int)
(declare-fun x722 () Bool)
(declare-fun x228 () Int)
(declare-fun x1033 () x1298)
(declare-fun x472 () Int)
(declare-fun x899 () Int)
(declare-fun x1370 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x92 () Bool)
(declare-fun x957 () Int)
(declare-fun x744 () Int)
(declare-fun x107 () Int)
(declare-fun x645 () Bool)
(declare-fun x1289 () Int)
(declare-fun x1128 (Int) Int)
(declare-fun x654 () x1298)
(declare-fun x478 () Int)
(declare-fun x1492 (x1298) Int)
(declare-fun x821 () Bool)
(declare-fun x519 () Bool)
(declare-fun x1226 () Int)
(declare-fun x1105 () Bool)
(declare-fun x1150 () x1298)
(declare-fun x58 () x1298)
(declare-fun x215 () Int)
(declare-fun x1335 () x1298)
(declare-fun x398 () Int)
(declare-fun x1395 () Int)
(declare-fun x83 () x1298)
(declare-fun x1273 () Int)
(declare-fun x960 () Int)
(declare-fun x1546 (x1298) Int)
(declare-fun x1056 () Int)
(declare-fun x812 () Bool)
(declare-fun x835 () Int)
(declare-fun x1545 () Int)
(declare-fun x544 () Int)
(declare-fun x1217 (x1298) Int)
(declare-fun x1013 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x562 () Bool)
(declare-fun x504 () Int)
(declare-fun x362 () x1298)
(declare-fun x185 () Int)
(declare-fun x1246 () Bool)
(declare-fun x99 () x1298)
(declare-fun x931 () Bool)
(declare-fun x999 () Int)
(declare-fun x361 () x1298)
(declare-fun x1328 () Int)
(declare-fun x533 () Int)
(declare-fun x526 () Int)
(declare-fun x1505 () x1298)
(declare-fun x62 () Int)
(declare-fun x296 () Int)
(declare-fun x1287 () Bool)
(declare-fun x632 () Bool)
(declare-fun x216 () Int)
(declare-fun x1167 () Int)
(declare-fun x1414 () Bool)
(declare-fun x727 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x814 () Int)
(declare-fun x834 () Int)
(declare-fun x343 () Int)
(declare-fun x306 () Int)
(declare-fun x615 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x979 () Int)
(declare-fun x150 () Int)
(declare-fun x1052 () Bool)
(declare-fun x1172 (Int) Int)
(declare-fun x1322 () Bool)
(declare-fun x245 () x1298)
(declare-fun x948 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x1392 () Int)
(declare-fun x639 () Bool)
(declare-fun x310 () Bool)
(declare-fun x1279 () Int)
(declare-fun x619 () Bool)
(declare-fun x581 () Int)
(declare-fun x748 () Bool)
(declare-fun x499 () x1298)
(declare-fun x426 () Int)
(declare-fun x281 () Bool)
(declare-fun x564 () x1298)
(declare-fun x95 () Int)
(declare-fun x1470 () Int)
(declare-fun x1280 () Int)
(declare-fun x254 () Int)
(declare-fun x399 () Bool)
(declare-fun x352 () Int)
(declare-fun x1017 () Int)
(declare-fun x1376 () Bool)
(declare-fun x1165 () Int)
(declare-fun x1074 () Bool)
(declare-fun x193 () Int)
(declare-fun x651 () x1298)
(declare-fun x384 () Int)
(declare-fun x1357 () Int)
(declare-fun x989 () Bool)
(declare-fun x153 () Int)
(declare-fun x480 () Int)
(declare-fun x627 () Int)
(declare-fun x349 (x1298) Int)
(declare-fun x795 () Int)
(declare-fun x128 () Int)
(declare-fun x926 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x680 (x1298) Int)
(declare-fun x1384 (x1298) Int)
(declare-fun x40 () Int)
(declare-fun x898 () Bool)
(declare-fun x729 () Int)
(declare-fun x258 () Bool)
(declare-fun x1182 (Int) Int)
(declare-fun x1450 () Int)
(declare-fun x402 () x1298)
(declare-fun x977 () x1298)
(declare-fun x640 () Bool)
(declare-fun x510 () Bool)
(declare-fun x138 () Int)
(declare-fun x549 () Int)
(declare-fun x1258 () Int)
(declare-fun x314 () Int)
(declare-fun x1480 () Int)
(declare-fun x111 () Int)
(declare-fun x126 () Int)
(declare-fun x929 () Int)
(declare-fun x366 () Bool)
(declare-fun x73 () Bool)
(declare-fun x27 () Bool)
(declare-fun x33 () Bool)
(declare-fun x79 () x1298)
(declare-fun x1435 () Int)
(declare-fun x788 () Bool)
(declare-fun x1059 () x1298)
(declare-fun x475 () Int)
(declare-fun x555 () Bool)
(declare-fun x157 () Int)
(declare-fun x1191 () Int)
(declare-fun x513 () Int)
(declare-fun x871 () Int)
(declare-fun x1296 () Int)
(declare-fun x297 () x1298)
(declare-fun x233 () Int)
(declare-fun x1207 () x1298)
(declare-fun x200 () Bool)
(declare-fun x1503 () Int)
(declare-fun x1116 () Int)
(declare-fun x767 () Bool)
(declare-fun x857 () Int)
(declare-fun x1320 () Bool)
(declare-fun x675 () Bool)
(declare-fun x717 () Bool)
(declare-fun x201 () x1298)
(declare-fun x1272 () Int)
(declare-fun x583 () Bool)
(declare-fun x1420 () x1298)
(declare-fun x688 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x372 () x1298)
(declare-fun x730 () Bool)
(declare-fun x516 () Int)
(declare-fun x658 () Bool)
(declare-fun x489 () Int)
(declare-fun x629 () Bool)
(declare-fun x468 () Bool)
(declare-fun x721 () Bool)
(declare-fun x406 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x1237 () Int)
(declare-fun x1211 () Int)
(declare-fun x152 () Int)
(declare-fun x53 () Int)
(declare-fun x756 () x1298)
(declare-fun x71 () Bool)
(declare-fun x1423 () Int)
(declare-fun x620 () Int)
(declare-fun x348 () Int)
(declare-fun x388 () Bool)
(declare-fun x1189 () Int)
(declare-fun x1011 () x1298)
(declare-fun x1426 () Bool)
(declare-fun x605 (Int) Int)
(declare-fun x1212 () x1298)
(declare-fun x585 () Int)
(declare-fun x716 () x1298)
(declare-fun x1494 () Bool)
(declare-fun x1225 () Int)
(declare-fun x422 () x1298)
(declare-fun x589 () Int)
(declare-fun x43 () Int)
(declare-fun x1257 () Bool)
(declare-fun x578 () Int)
(declare-fun x768 () Int)
(declare-fun x749 () Int)
(declare-fun x139 () x1298)
(declare-fun x146 () Int)
(declare-fun x757 () Bool)
(declare-fun x886 () Int)
(declare-fun x304 () Int)
(declare-fun x125 () Bool)
(declare-fun x459 () Int)
(declare-fun x273 () Bool)
(declare-fun x792 () Int)
(declare-fun x363 () Int)
(declare-fun x706 () Bool)
(declare-fun x529 () Int)
(declare-fun x411 () Int)
(declare-fun x596 () x1298)
(declare-fun x242 () x1298)
(declare-fun x981 () Bool)
(declare-fun x644 () x1298)
(declare-fun x604 () Bool)
(declare-fun x1030 () Int)
(declare-fun x1035 () Bool)
(declare-fun x935 () Bool)
(declare-fun x202 () Int)
(declare-fun x383 () x1298)
(declare-fun x1329 () Int)
(declare-fun x1491 () x1298)
(declare-fun x410 () Int)
(declare-fun x1324 () Int)
(declare-fun x1457 () Int)
(declare-fun x1381 () Int)
(declare-fun x486 () Int)
(declare-fun x447 () x1298)
(declare-fun x566 () Int)
(declare-fun x558 () Int)
(declare-fun x1007 () Bool)
(declare-fun x839 () Bool)
(declare-fun x1478 () Int)
(declare-fun x913 () Bool)
(declare-fun x1504 () Int)
(declare-fun x860 () x1298)
(declare-fun x66 () Bool)
(declare-fun x718 () Int)
(declare-fun x824 () x1298)
(declare-fun x469 () Int)
(declare-fun x711 () x1298)
(declare-fun x1340 () Int)
(declare-fun x144 () Bool)
(declare-fun x1124 () Bool)
(declare-fun x567 () Bool)
(declare-fun x409 () Int)
(declare-fun x244 () Int)
(declare-fun x593 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x700 () Int)
(declare-fun x120 () Int)
(declare-fun x1037 () Int)
(declare-fun x1271 () Bool)
(declare-fun x376 () x1298)
(declare-fun x908 () Int)
(declare-fun x57 () x1298)
(declare-fun x1112 () Bool)
(declare-fun x368 () Bool)
(declare-fun x425 () Int)
(declare-fun x592 () Bool)
(declare-fun x1160 () Int)
(declare-fun x331 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x269 () Int)
(declare-fun x1022 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x642 () Bool)
(declare-fun x704 () Bool)
(declare-fun x1234 () x1298)
(declare-fun x503 () Int)
(declare-fun x1288 () Int)
(declare-fun x375 () Int)
(declare-fun x28 () Bool)
(declare-fun x110 () Int)
(declare-fun x98 () Bool)
(declare-fun x347 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x382 () Int)
(declare-fun x793 () Int)
(declare-fun x894 () Int)
(declare-fun x9 () Bool)
(declare-fun x527 () Int)
(declare-fun x190 () Bool)
(declare-fun x532 () Int)
(declare-fun x1304 () Bool)
(declare-fun x517 () Bool)
(declare-fun x1442 () Int)
(declare-fun x1507 () Bool)
(declare-fun x1486 () x1298)
(declare-fun x715 () Int)
(declare-fun x848 () Bool)
(declare-fun x987 () Int)
(declare-fun x386 () Int)
(declare-fun x565 () Int)
(declare-fun x327 () Int)
(declare-fun x590 () Int)
(declare-fun x1196 () Int)
(declare-fun x1094 () x1298)
(declare-fun x1514 () Int)
(declare-fun x1508 () Int)
(declare-fun x1058 () Int)
(declare-fun x1369 () Int)
(declare-fun x808 () Int)
(declare-fun x601 () Int)
(declare-fun x1303 () x1298)
(declare-fun x1401 () x1298)
(declare-fun x1548 () Bool)
(declare-fun x252 () Int)
(declare-fun x1293 () Int)
(declare-fun x541 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x904 () Int)
(declare-fun x14 () Bool)
(declare-fun x946 () Bool)
(declare-fun x1432 () Int)
(declare-fun x423 () Bool)
(declare-fun x817 () Bool)
(declare-fun x313 () Int)
(declare-fun x114 () Int)
(declare-fun x1308 () Int)
(declare-fun x356 () Int)
(declare-fun x485 () Int)
(declare-fun x665 () Bool)
(declare-fun x209 () Bool)
(declare-fun x137 () x1298)
(declare-fun x32 () Int)
(declare-fun x385 () Int)
(declare-fun x803 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x895 () Int)
(declare-fun x781 () Int)
(declare-fun x1023 () Int)
(declare-fun x160 () Bool)
(declare-fun x514 () Int)
(declare-fun x606 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x1164 (Int) Int)
(declare-fun x851 () Int)
(declare-fun x647 () Int)
(declare-fun x1557 () x1298)
(declare-fun x1055 () Bool)
(declare-fun x822 () x1298)
(declare-fun x78 (Int) Int)
(declare-fun x1113 () Bool)
(declare-fun x772 () x1298)
(declare-fun x1454 () Int)
(declare-fun x1537 () Int)
(declare-fun x837 () Bool)
(declare-fun x1197 () Bool)
(declare-fun x1051 () Int)
(declare-fun x1195 () Bool)
(declare-fun x1253 () Int)
(declare-fun x536 () x1298)
(declare-fun x976 () Int)
(declare-fun x118 () Int)
(declare-fun x1198 () Bool)
(declare-fun x1535 () x1298)
(declare-fun x1460 () Bool)
(declare-fun x1513 () x1298)
(declare-fun x1313 () x1298)
(declare-fun x552 () Int)
(declare-fun x453 () Bool)
(declare-fun x238 () Int)
(declare-fun x784 () Int)
(declare-fun x405 () x1298)
(declare-fun x1463 (Int) Int)
(declare-fun x56 () Int)
(declare-fun x1348 () Int)
(declare-fun x1512 () x1298)
(declare-fun x1413 () x1298)
(declare-fun x897 () Int)
(declare-fun x873 () x1298)
(declare-fun x949 () Bool)
(declare-fun x442 () Int)
(declare-fun x1 () Bool)
(declare-fun x1533 () x1298)
(declare-fun x616 () x1298)
(declare-fun x534 () x1298)
(declare-fun x1122 () Bool)
(declare-fun x60 () x1298)
(declare-fun x855 (Int) Int)
(declare-fun x455 () Bool)
(declare-fun x650 () Bool)
(declare-fun x1053 () Int)
(declare-fun x947 () Int)
(declare-fun x96 () Int)
(declare-fun x930 () x1298)
(declare-fun x690 () x1298)
(declare-fun x731 () Bool)
(declare-fun x719 () x1298)
(declare-fun x915 () Int)
(declare-fun x285 () Int)
(declare-fun x990 () Int)
(declare-fun x473 () Int)
(declare-fun x613 () Bool)
(declare-fun x1387 () Int)
(declare-fun x497 () Int)
(declare-fun x806 () Int)
(declare-fun x880 () Int)
(declare-fun x508 () Int)
(declare-fun x421 () Int)
(declare-fun x329 () Bool)
(declare-fun x1292 () Int)
(declare-fun x1005 () Int)
(declare-fun x133 () Bool)
(declare-fun x687 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x438 () Bool)
(declare-fun x1307 () Int)
(declare-fun x614 (Int) Int)
(declare-fun x670 () x1298)
(declare-fun x982 () x1298)
(declare-fun x1382 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x393 () Int)
(declare-fun x1176 () Int)
(declare-fun x945 () Bool)
(declare-fun x324 () Int)
(declare-fun x1549 () Bool)
(declare-fun x260 () Bool)
(declare-fun x1428 () Int)
(declare-fun x883 () Bool)
(declare-fun x776 () Bool)
(declare-fun x403 () Int)
(declare-fun x490 () Bool)
(declare-fun x341 () Bool)
(declare-fun x37 () Bool)
(declare-fun x766 () Int)
(declare-fun x198 () Bool)
(declare-fun x853 () Int)
(declare-fun x755 () Bool)
(declare-fun x268 () Bool)
(declare-fun x888 () Int)
(declare-fun x325 () Bool)
(declare-fun x1437 () Int)
(declare-fun x1400 () Bool)
(declare-fun x854 () Bool)
(declare-fun x1363 () Int)
(declare-fun x580 () Int)
(declare-fun x389 () Int)
(declare-fun x699 () Int)
(declare-fun x920 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x1092 () Int)
(declare-fun x159 () x1298)
(declare-fun x76 () Int)
(declare-fun x609 () Int)
(declare-fun x278 () Int)
(declare-fun x45 () Int)
(declare-fun x994 () x1298)
(declare-fun x829 () Int)
(declare-fun x745 () x1298)
(declare-fun x667 () Bool)
(declare-fun x1449 () Int)
(declare-fun x1065 () Bool)
(declare-fun x1496 () Int)
(declare-fun x1269 () Bool)
(declare-fun x1452 (x1298) Int)
(declare-fun x1378 () Int)
(declare-fun x1501 () x1298)
(declare-fun x390 () Int)
(declare-fun x553 () Int)
(declare-fun x625 () Bool)
(declare-fun x758 () Int)
(declare-fun x1222 () Bool)
(declare-fun x214 () x1298)
(declare-fun x1185 () Int)
(declare-fun x102 () Bool)
(declare-fun x316 () Int)
(declare-fun x1073 () x1298)
(declare-fun x394 () Int)
(declare-fun x1243 () Bool)
(declare-fun x571 () x1298)
(declare-fun x863 () Bool)
(declare-fun x679 () Bool)
(declare-fun x42 () Int)
(declare-fun x380 () Bool)
(declare-fun x416 () Int)
(declare-fun x1147 () Int)
(declare-fun x579 () Bool)
(declare-fun x1351 () Int)
(declare-fun x951 () x1298)
(declare-fun x1077 () Bool)
(declare-fun x249 () Int)
(declare-fun x288 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x633 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x1407 () x1298)
(declare-fun x1291 () Int)
(declare-fun x1484 () Bool)
(declare-fun x974 () Bool)
(declare-fun x710 () Int)
(declare-fun x301 () Int)
(declare-fun x610 () Int)
(declare-fun x1091 () Int)
(declare-fun x742 () Bool)
(declare-fun x250 () Int)
(declare-fun x70 () Int)
(declare-fun x1459 () Int)
(declare-fun x170 () Int)
(declare-fun x305 () Int)
(declare-fun x819 () Int)
(declare-fun x786 () Int)
(declare-fun x1102 () Int)
(declare-fun x1125 () Bool)
(declare-fun x360 () Int)
(declare-fun x753 () Int)
(declare-fun x547 () Bool)
(declare-fun x790 () Int)
(declare-fun x1431 () x1298)
(declare-fun x1071 () Int)
(declare-fun x1479 () Int)
(declare-fun x1163 () Int)
(declare-fun x1433 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x1278 () x1298)
(declare-fun x1391 () Int)
(declare-fun x124 () x1298)
(declare-fun x222 () Bool)
(declare-fun x956 () Int)
(declare-fun x802 () x1298)
(declare-fun x1331 () Bool)
(declare-fun x265 () Bool)
(declare-fun x698 () Int)
(declare-fun x643 () x1298)
(declare-fun x1168 () Bool)
(declare-fun x219 () Bool)
(declare-fun x284 () Int)
(declare-fun x1534 () Int)
(declare-fun x217 () Int)
(declare-fun x598 (Int) Int)
(declare-fun x1064 () Int)
(declare-fun x86 () Int)
(declare-fun x1264 () x1298)
(declare-fun x1493 () Bool)
(declare-fun x548 () Int)
(declare-fun x495 () Int)
(declare-fun x1200 () Int)
(declare-fun x1316 () x1298)
(declare-fun x893 () Int)
(declare-fun x355 () Int)
(declare-fun x433 () x1298)
(declare-fun x1136 () Bool)
(declare-fun x732 () x1298)
(declare-fun x1440 (x1298) Int)
(declare-fun x612 () Bool)
(declare-fun x932 () Int)
(declare-fun x938 () Bool)
(declare-fun x184 () Bool)
(declare-fun x167 () Int)
(declare-fun x1028 () Int)
(declare-fun x1455 () Bool)
(declare-fun x760 () Int)
(declare-fun x1531 () x1298)
(declare-fun x1464 () Int)
(declare-fun x293 () Int)
(declare-fun x992 () Int)
(declare-fun x1032 () x1298)
(declare-fun x332 (Int) Int)
(declare-fun x1228 (x1298) Int)
(declare-fun x286 () Int)
(declare-fun x1301 () x1298)
(declare-fun x454 () Bool)
(declare-fun x318 () Bool)
(declare-fun x1374 () Int)
(declare-fun x492 () Int)
(declare-fun x900 (Int) Int)
(declare-fun x761 () Bool)
(declare-fun x87 () x1298)
(declare-fun x277 () Bool)
(declare-fun x1101 () Int)
(declare-fun x251 () Int)
(declare-fun x1444 () Int)
(declare-fun x1471 () Bool)
(declare-fun x498 () Int)
(declare-fun x1359 () Bool)
(declare-fun x75 () Bool)
(declare-fun x298 () Int)
(declare-fun x287 () x1298)
(declare-fun x223 () Int)
(declare-fun x864 () x1298)
(declare-fun x617 () x1298)
(declare-fun x1242 () Bool)
(declare-fun x243 () Bool)
(declare-fun x240 () Bool)
(declare-fun x911 () Bool)
(declare-fun x377 () Bool)
(declare-fun x524 () Bool)
(declare-fun x330 () Bool)
(declare-fun x1008 () Int)
(declare-fun x954 () Int)
(declare-fun x445 () Int)
(declare-fun x26 () Int)
(declare-fun x449 () Bool)
(declare-fun x881 () Bool)
(declare-fun x1087 () x1298)
(declare-fun x136 () Int)
(declare-fun x436 () Bool)
(declare-fun x811 (x1298) Int)
(declare-fun x1098 () Int)
(declare-fun x630 () Int)
(declare-fun x1002 (Int) Int)
(declare-fun x941 () Int)
(declare-fun x1411 () Bool)
(declare-fun x344 () Int)
(declare-fun x213 () Int)
(declare-fun x112 () Int)
(declare-fun x843 () Bool)
(declare-fun x279 () x1298)
(declare-fun x1418 () Int)
(declare-fun x132 () Bool)
(declare-fun x1156 () x1298)
(declare-fun x374 () Int)
(declare-fun x164 (Int) Int)
(declare-fun x1425 () Bool)
(declare-fun x103 (x1298) Int)
(declare-fun x1536 () Int)
(declare-fun x1193 () Bool)
(declare-fun x397 () Int)
(declare-fun x833 () Int)
(declare-fun x113 () Bool)
(declare-fun x867 () Int)
(declare-fun x440 () Bool)
(declare-fun x21 () Int)
(declare-fun x847 () Int)
(declare-fun x1034 () Bool)
(declare-fun x381 () Int)
(declare-fun x317 () x1298)
(declare-fun x550 () Int)
(declare-fun x677 () x1298)
(declare-fun x909 () Int)
(declare-fun x1446 () x1298)
(declare-fun x879 () Int)
(declare-fun x464 () Int)
(declare-fun x407 () Bool)
(declare-fun x246 () Int)
(declare-fun x1277 () Bool)
(declare-fun x1465 () Int)
(declare-fun x890 () Bool)
(declare-fun x172 () Int)
(declare-fun x69 () Int)
(declare-fun x3 () Int)
(declare-fun x828 () Bool)
(declare-fun x892 () Int)
(declare-fun x54 () Int)
(declare-fun x276 () Int)
(declare-fun x10 () x1298)
(declare-fun x607 () Int)
(declare-fun x1126 () Int)
(declare-fun x1469 () Bool)
(declare-fun x631 () Bool)
(declare-fun x906 () Int)
(declare-fun x1403 () Int)
(declare-fun x944 () Bool)
(declare-fun x225 (Int) Int)
(declare-fun x119 () Int)
(declare-fun x637 () Bool)
(declare-fun x652 () Int)
(declare-fun x429 () Int)
(declare-fun x912 () x1298)
(declare-fun x1267 () x1298)
(declare-fun x1254 () x1298)
(declare-fun x340 () Int)
(declare-fun x1377 () Bool)
(declare-fun x623 () Int)
(declare-fun x914 () x1298)
(declare-fun x641 () x1298)
(declare-fun x105 () Int)
(declare-fun x703 () x1298)
(declare-fun x1259 () x1298)
(declare-fun x934 () Int)
(declare-fun x1082 () Int)
(declare-fun x832 () Bool)
(declare-fun x188 () Int)
(declare-fun x778 () Int)
(declare-fun x723 () Bool)
(declare-fun x161 () Int)
(declare-fun x466 () Int)
(declare-fun x1366 () Int)
(declare-fun x842 () Bool)
(declare-fun x1079 () Int)
(declare-fun x1249 () Int)
(declare-fun x1544 () Int)
(declare-fun x586 () Int)
(declare-fun x471 () Bool)
(declare-fun x19 () Bool)
(declare-fun x697 () Int)
(declare-fun x1364 () Bool)
(declare-fun x810 () Int)
(declare-fun x74 () Bool)
(declare-fun x1399 () Int)
(declare-fun x255 () x1298)
(declare-fun x666 () Int)
(declare-fun x1406 () Bool)
(declare-fun x695 () x1298)
(declare-fun x575 () Int)
(declare-fun x1453 () Int)
(declare-fun x1282 () x1298)
(declare-fun x1146 () Bool)
(declare-fun x739 () Int)
(declare-fun x1541 () Bool)
(declare-fun x351 () x1298)
(declare-fun x653 () Bool)
(declare-fun x831 () Int)
(declare-fun x1210 () Bool)
(declare-fun x1309 () Bool)
(declare-fun x905 () Int)
(declare-fun x726 () Bool)
(declare-fun x1119 () x1298)
(declare-fun x1019 () Bool)
(declare-fun x621 () Int)
(declare-fun x72 () Bool)
(declare-fun x1109 () Int)
(declare-fun x85 () Bool)
(declare-fun x1170 () x1298)
(declare-fun x1141 () Bool)
(declare-fun x759 () Bool)
(declare-fun x794 (Int) Int)
(declare-fun x1241 () Bool)
(declare-fun x262 () Int)
(declare-fun x846 () Int)
(declare-fun x299 () Int)
(declare-fun x338 () Int)
(declare-fun x1038 () Int)
(declare-fun x884 () Int)
(declare-fun x872 () Bool)
(declare-fun x1542 () Int)
(declare-fun x663 () Int)
(declare-fun x1088 () Int)
(declare-fun x1506 () Bool)
(declare-fun x1153 () Int)
(declare-fun x328 () Bool)
(declare-fun x841 () Int)
(declare-fun x659 () x1298)
(declare-fun x1090 () Bool)
(declare-fun x93 () Int)
(declare-fun x1166 () Int)
(declare-fun x1216 () Bool)
(declare-fun x458 () Bool)
(declare-fun x646 () Int)
(declare-fun x1133 () Bool)
(declare-fun x796 () x1298)
(declare-fun x322 () Int)
(declare-fun x1281 () Bool)
(declare-fun x1402 () Int)
(declare-fun x1238 () x1298)
(declare-fun x1295 () x1298)
(declare-fun x813 () Int)
(declare-fun x1427 () x1298)
(declare-fun x100 () Int)
(declare-fun x712 () Bool)
(declare-fun x1224 () x1298)
(declare-fun x574 () Bool)
(declare-fun x709 () Int)
(declare-fun x97 () Int)
(declare-fun x183 (x1298) Int)
(declare-fun x175 () Bool)
(declare-fun x1409 () Int)
(declare-fun x1332 () Bool)
(declare-fun x985 () Bool)
(declare-fun x805 () Int)
(declare-fun x1385 () Bool)
(declare-fun x1145 () Int)
(declare-fun x1001 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x280 () x1298)
(declare-fun x1192 () Int)
(declare-fun x507 () Bool)
(declare-fun x560 () Bool)
(declare-fun x387 () Int)
(declare-fun x943 () Bool)
(declare-fun x275 () Int)
(declare-fun x290 () x1298)
(declare-fun x1203 () Int)
(declare-fun x29 () Int)
(declare-fun x1522 () Int)
(declare-fun x1114 () Int)
(declare-fun x1456 () Int)
(declare-fun x171 () Bool)
(declare-fun x212 () Int)
(declare-fun x224 () Int)
(declare-fun x8 () Bool)
(declare-fun x747 () Int)
(declare-fun x1436 () Int)
(declare-fun x427 () Int)
(declare-fun x953 () x1298)
(declare-fun x364 () Int)
(declare-fun x199 () Int)
(declare-fun x779 () Int)
(declare-fun x933 () Int)
(declare-fun x1354 () Bool)
(declare-fun x1319 () Int)
(declare-fun x121 () x1298)
(declare-fun x1040 () Int)
(declare-fun x16 () Int)
(declare-fun x412 () Bool)
(declare-fun x921 () Int)
(declare-fun x522 (Int) Int)
(declare-fun x106 () x1298)
(declare-fun x1358 () x1298)
(declare-fun x1233 () Int)
(declare-fun x227 () Bool)
(declare-fun x337 () x1298)
(declare-fun x303 () Int)
(declare-fun x852 () x1298)
(declare-fun x1524 () x1298)
(declare-fun x206 () Bool)
(declare-fun x764 () Int)
(declare-fun x1342 () Int)
(declare-fun x1311 () Bool)
(declare-fun x520 () x1298)
(declare-fun x1477 () Bool)
(declare-fun x1555 () x1298)
(declare-fun x1532 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x505 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x599 () Int)
(declare-fun x236 () x1298)
(declare-fun x636 () Bool)
(declare-fun x414 () x1298)
(declare-fun x561 () x1298)
(declare-fun x724 () x1298)
(declare-fun x15 () Bool)
(declare-fun x624 () Bool)
(declare-fun x334 () Int)
(declare-fun x559 () Int)
(declare-fun x181 () Bool)
(declare-fun x378 () Int)
(declare-fun x101 () Int)
(declare-fun x542 () Int)
(declare-fun x177 () Int)
(declare-fun x194 () x1298)
(declare-fun x207 () Int)
(declare-fun x437 () Int)
(declare-fun x1177 () x1298)
(declare-fun x506 () Int)
(declare-fun x1213 () Int)
(declare-fun x282 () Bool)
(declare-fun x241 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x936 () Int)
(declare-fun x972 () Int)
(declare-fun x1394 () Int)
(declare-fun x978 () x1298)
(declare-fun x1057 () Bool)
(declare-fun x1061 () Int)
(declare-fun x554 () Int)
(declare-fun x470 () Int)
(declare-fun x231 () x1298)
(declare-fun x434 () Bool)
(declare-fun x1229 () Int)
(declare-fun x493 () x1298)
(declare-fun x467 () Int)
(declare-fun x247 () Int)
(declare-fun x371 () Int)
(declare-fun x1502 () Int)
(declare-fun x342 () Bool)
(declare-fun x770 () Bool)
(declare-fun x681 () Int)
(declare-fun x1540 () Bool)
(declare-fun x962 () x1298)
(declare-fun x820 () Int)
(declare-fun x1341 () x1298)
(declare-fun x955 () Int)
(declare-fun x923 () Int)
(declare-fun x603 () Bool)
(declare-fun x130 () x1298)
(declare-fun x321 () Bool)
(declare-fun x1310 () Int)
(declare-fun x1204 (Int) Int)
(declare-fun x179 () Int)
(declare-fun x1031 () Bool)
(declare-fun x877 () Bool)
(declare-fun x444 () Int)
(declare-fun x48 () x1298)
(declare-fun x991 () Bool)
(declare-fun x963 () Int)
(declare-fun x964 () Int)
(declare-fun x1350 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x1290 () x1298)
(declare-fun x1107 () Int)
(declare-fun x2 () Bool)
(declare-fun x993 () x1298)
(declare-fun x1487 () Int)
(declare-fun x1187 () Int)
(declare-fun x782 () Bool)
(declare-fun x588 () Int)
(declare-fun x807 () Int)
(declare-fun x1419 () x1298)
(declare-fun x1499 () Bool)
(declare-fun x395 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x253 () Int)
(declare-fun x359 () x1298)
(declare-fun x734 () Int)
(declare-fun x450 () Bool)
(declare-fun x59 () x1298)
(declare-fun x1347 () Int)
(declare-fun x551 () Int)
(declare-fun x664 () Int)
(declare-fun x509 (Int Int) Int)
(declare-fun x64 () x1298)
(declare-fun x154 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x1108 () Int)
(declare-fun x1367 () Int)
(declare-fun x36 () Int)
(declare-fun x1375 () Bool)
(declare-fun x1024 () Int)
(declare-fun x44 () Int)
(declare-fun x1248 (x1298) Int)
(declare-fun x115 () Int)
(declare-fun x52 () Int)
(declare-fun x1140 () Int)
(declare-fun x178 () Int)
(declare-fun x1274 () Bool)
(declare-fun x1131 () Int)
(declare-fun x901 () Bool)
(declare-fun x197 () Int)
(declare-fun x1482 () Bool)
(declare-fun x461 () Int)
(declare-fun x849 () Int)
(declare-fun x685 () Int)
(declare-fun x1526 () Bool)
(declare-fun x94 () Int)
(declare-fun x221 () Bool)
(declare-fun x1015 () Int)
(declare-fun x1337 () Int)
(declare-fun x47 () Int)
(declare-fun x1430 () Bool)
(declare-fun x1352 () Bool)
(declare-fun x1256 () x1298)
(declare-fun x762 () Int)
(declare-fun x865 () Int)
(declare-fun x674 () x1298)
(declare-fun x889 () Bool)
(declare-fun x1014 () Int)
(declare-fun x1120 () Int)
(declare-fun x162 () Bool)
(declare-fun x595 () Int)
(declare-fun x370 () Int)
(declare-fun x68 () Bool)
(declare-fun x733 () Int)
(declare-fun x539 () Int)
(declare-fun x195 () Bool)
(declare-fun x1039 (x1298) Int)
(declare-fun x1240 () Bool)
(declare-fun x1181 () Int)
(declare-fun x816 () Bool)
(declare-fun x267 () x1298)
(declare-fun x1488 () Int)
(declare-fun x187 () Int)
(declare-fun x662 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x1441 () Int)
(declare-fun x969 () Int)
(declare-fun x1161 () x1298)
(declare-fun x320 () x1298)
(declare-fun x1434 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x424 () Int)
(declare-fun x1302 () Int)
(declare-fun x874 () Int)
(declare-fun x1315 () Bool)
(declare-fun x1417 () x1298)
(declare-fun x61 () x1298)
(declare-fun x1069 () x1298)
(declare-fun x4 () Int)
(declare-fun x1523 () Int)
(declare-fun x694 () Bool)
(declare-fun x263 () Bool)
(declare-fun x49 () Bool)
(declare-fun x272 () Int)
(declare-fun x608 () x1298)
(declare-fun x456 () Int)
(declare-fun x523 () Int)
(declare-fun x435 () Bool)
(declare-fun x1117 () Int)
(declare-fun x998 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x1321 () x1298)
(declare-fun x1219 () Int)
(declare-fun x166 () Int)
(declare-fun x312 () Bool)
(declare-fun x800 () Int)
(declare-fun x1516 () Int)
(declare-fun x1368 () Int)
(declare-fun x736 () Int)
(declare-fun x163 () Bool)
(declare-fun x205 () Bool)
(declare-fun x746 () Int)
(declare-fun x1134 (x1298) Int)
(declare-fun x432 () Bool)
(declare-fun x1346 () x1298)
(declare-fun x487 () x1298)
(declare-fun x39 () x1298)
(define-fun x950 ((x1298 x1298) (x859 Int)) x1298 (ite ((_ is x1410) x1298) (x1410 (x345 x1298) (+ (x311 x1298) x859)) (ite ((_ is x1081) x1298) (x1081 (x1439 x1298) (x474 x1298) (+ x859 (x88 x1298))) (x1467 (+ (x866 x1298) x859)))))
(define-fun x1283 ((x1215 Int)) Int (ite (and (< x1215 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1215)) x1215 (- x1215 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x628 ((x1215 Int)) Int (ite (and (< x1215 0) (>= x1215 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1215 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1215))
(define-fun x672 ((x1199 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1199) (>= x1199 0)))
(define-fun x791 ((x1199 Int)) Bool (and (= (x509 x1199 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1199) (= x1199 (x509 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1199))))
(define-fun x975 ((x1199 Int)) Bool (and (= (x509 x1199 0) 0) (= 0 (x509 0 x1199))))
(define-fun x1538 ((x1199 Int)) Bool (= (x509 x1199 x1199) x1199))
(define-fun x122 ((x1199 Int)) Bool (and (x975 x1199) (x791 x1199) (x1538 x1199)))
(define-fun x515 ((x1199 Int)) Bool (= (x509 1461501637330902918203684832716283019655932542975 x1199) (x509 1461501637330902918203684832716283019655932542975 (x509 1461501637330902918203684832716283019655932542975 x1199))))
(define-fun x232 ((x1199 Int)) Bool (=> (and (<= 0 x1199) (< x1199 1461501637330902918203684832716283019655932542976)) (= x1199 (x509 1461501637330902918203684832716283019655932542975 x1199))))
(define-fun x1558 ((x1199 Int)) Bool (=> (= (x509 1461501637330902918203684832716283019655932542975 x1199) x1199) (and (> 1461501637330902918203684832716283019655932542976 x1199) (<= 0 x1199))))
(define-fun x1398 ((x1199 Int)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x1199) (< x1199 2923003274661805836407369665432566039311865085952)) (= (x509 1461501637330902918203684832716283019655932542975 x1199) (- x1199 1461501637330902918203684832716283019655932542976))))
(define-fun x81 ((x1199 Int) (x1393 Int)) Bool (and (= (+ (x509 1461501637330902918203684832716283019655932542975 x1199) (* x1393 1461501637330902918203684832716283019655932542976)) x1199) (<= 0 x1393)))
(define-fun x684 ((x1199 Int) (x1236 Int)) Bool (and (x81 x1199 x1236) (x515 x1199) (x1558 x1199) (x1398 x1199) (x232 x1199)))
(define-fun x844 ((x1199 Int) (x1393 Int)) Bool (= (x509 x1199 x1393) (x509 x1393 x1199)))
(define-fun x720 ((x1199 Int) (x1393 Int)) Bool (and (=> (<= 0 x1393) (>= x1393 (x509 x1199 x1393))) (=> (<= 0 x1199) (<= (x509 x1199 x1393) x1199)) (>= (x509 x1199 x1393) 0)))
(define-fun x1179 ((x1199 Int) (x1393 Int)) Bool (and (x844 x1199 x1393) (x720 x1199 x1393)))
(define-fun x142 ((x1199 Int) (x1236 Int)) Bool (and (x1179 x1199 1461501637330902918203684832716283019655932542975) (x684 x1199 x1236)))
(define-fun x476 ((x1199 Int)) Bool (= (x509 26959946667150639794667015087019630673637144422540572481103610249215 x1199) (x509 26959946667150639794667015087019630673637144422540572481103610249215 (x509 26959946667150639794667015087019630673637144422540572481103610249215 x1199))))
(define-fun x127 ((x1199 Int)) Bool (=> (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x1199) (>= x1199 0)) (= (x509 26959946667150639794667015087019630673637144422540572481103610249215 x1199) x1199)))
(define-fun x143 ((x1199 Int)) Bool (=> (= (x509 26959946667150639794667015087019630673637144422540572481103610249215 x1199) x1199) (and (<= 0 x1199) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1199))))
(define-fun x496 ((x1199 Int)) Bool (=> (and (< x1199 53919893334301279589334030174039261347274288845081144962207220498432) (>= x1199 26959946667150639794667015087019630673637144422540572481103610249216)) (= (- x1199 26959946667150639794667015087019630673637144422540572481103610249216) (x509 26959946667150639794667015087019630673637144422540572481103610249215 x1199))))
(define-fun x13 ((x1199 Int) (x1393 Int)) Bool (and (= (+ (x509 26959946667150639794667015087019630673637144422540572481103610249215 x1199) (* 26959946667150639794667015087019630673637144422540572481103610249216 x1393)) x1199) (<= 0 x1393)))
(define-fun x1173 ((x1199 Int) (x1236 Int)) Bool (and (x143 x1199) (x476 x1199) (x13 x1199 x1236) (x496 x1199) (x127 x1199)))
(define-fun x1175 ((x1199 Int) (x1236 Int)) Bool (and (x1179 x1199 26959946667150639794667015087019630673637144422540572481103610249215) (x1173 x1199 x1236)))
(define-fun x804 ((x1199 Int)) Bool (= (x509 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1199) (x509 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x509 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1199))))
(define-fun x365 ((x1199 Int)) Bool (=> (and (>= x1199 0) (< x1199 32)) (= (x509 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1199) 0)))
(define-fun x597 ((x1199 Int) (x1393 Int) (x1103 Int) (x1085 Int)) Bool (and (> 1 x1085) (>= x1085 0) (= (x509 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1199) (* 32 x1103)) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x1103) (<= 0 x1393) (<= 0 x1103) (> 32 x1393) (= (+ (* x1085 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 32 x1103) x1393) x1199)))
(define-fun x1447 ((x1199 Int) (x1232 Int) (x1099 Int) (x995 Int)) Bool (and (x365 x1199) (x804 x1199) (x597 x1199 x1232 x1099 x995)))
(define-fun x501 ((x1199 Int) (x1232 Int) (x1099 Int) (x995 Int)) Bool (and (x1447 x1199 x1232 x1099 x995) (x1179 x1199 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x169 ((x1305 Int)) Int (x225 x1305))
(define-fun x1408 ((x1305 Int)) Int (ite (= x1305 128) x1536 (x1251 x1305)))
(define-fun x428 ((x1305 Int)) Int (ite (and (<= 160 x1305) (< x1305 (+ x459 160))) (x225 (+ x93 (- x1305 160))) (x1408 x1305)))
(define-fun x391 ((x1305 Int)) Int (ite (= x1305 x1174) 0 (x428 x1305)))
(define-fun x708 ((x1305 Int)) Int (ite (and (< x1305 (+ x441 x753)) (<= x753 x1305)) (x225 (+ (- x1305 x753) x600)) (x794 x1305)))
(define-fun x676 ((x1305 x1298)) Int (ite (= x1305 x121) x1079 (x1546 x1305)))
(define-fun x1111 ((x1305 x1298)) Int (ite (= x1305 x1156) x1079 (x1546 x1305)))
(define-fun x1530 ((x1305 x1298)) Int (ite (= x840 x1305) x1079 (x103 x1305)))
(define-fun x1481 ((x1305 x1298)) Int (ite (= x1305 x31) x1079 (x103 x1305)))
(define-fun x1371 ((x1305 x1298)) Int (ite (and x1197 x292) (x103 x1305) (ite (and x1515 x1076) (x1546 x1305) (ite (and (not x593) x1549) (x1530 x1305) (x1481 x1305)))))
(define-fun x22 ((x1305 x1298)) Int (ite (= x534 x1305) x1079 (x811 x1305)))
(define-fun x452 ((x1305 x1298)) Int (ite (= x1305 x87) x1079 (x811 x1305)))
(define-fun x885 ((x1305 x1298)) Int (ite (= x1305 x536) x1079 (x811 x1305)))
(define-fun x1188 ((x1305 x1298)) Int (ite (= x422 x1305) x1079 (x1134 x1305)))
(define-fun x1227 ((x1305 x1298)) Int (ite (= x1290 x1305) x1079 (x1134 x1305)))
(define-fun x1068 ((x1305 x1298)) Int (ite (= x961 x1305) x1079 (x1134 x1305)))
(define-fun x983 ((x1305 x1298)) Int (ite (and x1197 x292) (x1134 x1305) (ite (and x1076 x1515) (x811 x1305) (ite (and x974 (not x436) (not x830)) (x1188 x1305) (ite (and x974 (not x830) x436) (x1227 x1305) (x1068 x1305))))))
(define-fun x537 ((x1305 x1298)) Int (ite (= x1305 x1073) x1091 (x1248 x1305)))
(define-fun x618 ((x1305 x1298)) Int (ite (= x60 x1305) x709 (x129 x1305)))
(define-fun x35 ((x1305 x1298)) Int (ite (and x1549 (not x593)) (x618 x1305) (x129 x1305)))
(define-fun x1475 ((x1305 x1298)) Int (ite (and x1197 x292) (x129 x1305) (ite (and x1515 x1076) (x1248 x1305) (x35 x1305))))
(define-fun x1093 ((x1305 x1298)) Int (ite (= x1305 x1557) x378 (x584 x1305)))
(define-fun x1519 ((x1305 x1298)) Int (ite (= x1305 x1059) x1343 (x1217 x1305)))
(define-fun x1230 ((x1305 x1298)) Int (ite (and x974 (not x436) (not x830)) (x1519 x1305) (x1217 x1305)))
(define-fun x823 ((x1305 x1298)) Int (ite (= x1305 x186) 0 (x1384 x1305)))
(define-fun x836 ((x1305 x1298)) Int (ite (and x123 x210 (not x945)) (x1384 x1305) (ite (and (not x123) x210) (x1492 x1305) (x823 x1305))))
(define-fun x339 ((x1305 x1298)) Int (ite (= x1305 x902) 0 (x836 x1305)))
(define-fun x326 ((x1305 x1298)) Int (ite (= x1305 x1313) x1209 (x183 x1305)))
(define-fun x294 ((x1305 x1298)) Int (ite (and x848 x1122) (x183 x1305) (x326 x1305)))
(define-fun x191 ((x1305 Int)) Int (ite (= x1305 x1464) x660 (x900 x1305)))
(define-fun x333 ((x1305 Int)) Int (ite (= x1305 x758) x964 (x191 x1305)))
(define-fun x1106 ((x1305 Int)) Int (ite (and x848 x821) (x900 x1305) (x333 x1305)))
(define-fun x46 ((x1305 Int)) Int (ite (= x1305 x970) x738 (x1106 x1305)))
(define-fun x1186 ((x1305 Int)) Int (ite (= x316 x1305) x224 (x1463 x1305)))
(define-fun x7 ((x1305 Int)) Int (ite (= x831 x1305) x229 (x614 x1305)))
(define-fun x1422 ((x1305 Int)) Int (ite (= x587 x1305) x1189 (x7 x1305)))
(define-fun x89 ((x1305 Int)) Int (ite (and (not x830) (not x436) x974) (x1422 x1305) (ite (and x974 (not x830) x436) (x1422 x1305) (x614 x1305))))
(define-fun x17 ((x1305 Int)) Int (ite (= x1305 x202) x464 (x89 x1305)))
(define-fun x801 ((x1305 Int)) Int (ite (= x1305 x16) x768 (x1204 x1305)))
(define-fun x226 ((x1305 Int)) Int (ite (and x1549 (not x752) (not x510) x882) (x1204 x1305) (ite (and (not x882) (not x510) x1549) (x605 x1305) (x801 x1305))))
(define-fun x785 ((x1305 Int)) Int (ite (and x1197 x292) (x614 x1305) (ite (and x1515 x1076) (x900 x1305) (ite (and x1549 (not x510)) (x226 x1305) (x605 x1305)))))
(define-fun x986 ((x1305 Int)) Int (ite (= x1305 x80) x1178 (x785 x1305)))
(define-fun x707 ((x1305 Int)) Int (ite (= x729 x1305) x469 (x986 x1305)))
(define-fun x531 ((x1305 Int)) Int (ite (= x1369 x1305) x5 (x707 x1305)))
(define-fun x725 ((x1305 Int)) Int (ite (= x1423 x1305) x947 (x531 x1305)))
(define-fun x439 ((x1305 Int)) Int (ite (= x1305 x894) 32 (x725 x1305)))
(define-fun x521 ((x1305 Int)) Int (ite (= x216 x1305) x397 (x1164 x1305)))
(define-fun x535 ((x1305 Int)) Int (ite (= x257 x1305) 0 (x1550 x1305)))
(define-fun x971 ((x1305 x1298)) Int (ite (= x1305 x641) x1403 (x174 x1305)))
(define-fun x192 ((x1305 x1298)) Int (ite (and x594 x366) (x174 x1305) (x971 x1305)))
(define-fun x271 ((x1305 Int)) Int (ite (= x1305 0) 1 (x1415 x1305)))
(define-fun x1312 ((x1305 Int)) Int (ite (= x1305 0) 1 (x1415 x1305)))
(define-fun x261 ((x1305 Int)) Int (ite (and x1035 x742) (x271 x1305) (x1312 x1305)))
(define-fun x6 ((x1305 Int)) Int (ite (= x1305 x278) x1255 (x522 x1305)))
(define-fun x896 ((x1305 Int)) Int (ite (= x1305 x278) x1390 (x522 x1305)))
(define-fun x714 ((x1305 Int)) Int (ite (= x1305 x278) x1279 (x598 x1305)))
(define-fun x379 ((x1305 Int)) Int (ite (and (< x1305 (+ x120 x1279)) (<= x120 x1305)) (x261 (+ 0 (- x1305 x120))) (x714 x1305)))
(define-fun x1336 ((x1305 Int)) Int (ite (and x205 (not x658)) (x379 x1305) (x598 x1305)))
(define-fun x838 ((x1305 Int)) Int (ite (= x857 x1305) x1178 (x1336 x1305)))
(define-fun x940 ((x1305 Int)) Int (ite (= x1305 x254) x1496 (x838 x1305)))
(define-fun x903 ((x1305 Int)) Int (ite (= x1147 x1305) x514 (x940 x1305)))
(define-fun x479 ((x1305 Int)) Int (ite (= x1305 x1556) x303 (x903 x1305)))
(define-fun x1388 ((x1305 Int)) Int (ite (= x1211 x1305) 32 (x479 x1305)))
(define-fun x1118 ((x1305 Int)) Int (ite (= x1305 x744) x230 (x332 x1305)))
(define-fun x1021 ((x1305 Int)) Int (ite (= x1225 x1305) 0 (x626 x1305)))
(define-fun x693 ((x1305 x1298)) Int (ite (= (x958 274184521717934524641157099916833587206) x1305) x304 (x557 x1305)))
(define-fun x50 ((x1305 x1298)) Int (ite (= (x958 x178) x1305) x145 (x693 x1305)))
(define-fun x1552 ((x1305 x1298)) Int (ite (= x1305 (x958 x178)) x54 (x50 x1305)))
(define-fun x1294 ((x1305 x1298)) Int (ite (= (x958 274184521717934524641157099916833587206) x1305) x997 (x1552 x1305)))
(define-fun x1054 ((x1305 x1298)) Int (ite (= (x958 274184521717934524641157099916833587206) x1305) x540 (x1294 x1305)))
(define-fun x1078 ((x1305 x1298)) Int (ite (= (x958 x1360) x1305) x346 (x1054 x1305)))
(define-fun x1148 ((x1305 x1298)) Int (ite (= x1305 x106) x486 (x1228 x1305)))
(define-fun x477 ((x1305 x1298)) Int (ite (= x1305 x772) x212 (x1148 x1305)))
(define-fun x638 ((x1305 x1298)) Int (ite (and x742 x1035) (x477 x1305) (x1228 x1305)))
(define-fun x176 ((x1305 x1298)) Int (ite (= x402 x1305) x586 (x638 x1305)))
(define-fun x1260 ((x1305 Int)) Int (ite (= 0 x1305) 1 (x705 x1305)))
(define-fun x528 ((x1305 Int)) Int (ite (= x1056 x1305) x1348 (x164 x1305)))
(define-fun x996 ((x1305 x1298)) Int (ite (= x1513 x1305) x1362 (x686 x1305)))
(define-fun x1485 ((x1305 x1298)) Int (ite (= x1305 x1512) x568 (x996 x1305)))
(define-fun x1063 ((x1305 x1298)) Int (ite (and x1035 x742) (x686 x1305) (x1485 x1305)))
(define-fun x984 ((x1305 x1298)) Int (ite (= x1305 x1321) x932 (x1063 x1305)))
(define-fun x148 ((x1305 Int)) Int (ite (= x1305 0) 1 (x705 x1305)))
(define-fun x1323 ((x1305 Int)) Int (ite (= x1305 x1056) x1442 (x164 x1305)))
(define-fun x1509 ((x1305 Int)) Int (ite (and x1096 x144) (x1260 x1305) (x148 x1305)))
(define-fun x1339 ((x1305 x1298)) Int (ite (= (x958 x1360) x1305) x235 (x1078 x1305)))
(define-fun x910 ((x1305 Int)) Int (ite (= x1305 x1056) x1387 (x876 x1305)))
(define-fun x283 ((x1305 Int)) Int (ite (and (< x1305 (+ x1520 x1387)) (>= x1305 x1520)) (x1509 (+ 0 (- x1305 x1520))) (x910 x1305)))
(define-fun x108 ((x1305 Int)) Int (ite (and x926 x388) (x876 x1305) (x283 x1305)))
(define-fun x669 ((x1199 Int)) Bool (=> (and (not (= x1199 2835717307)) (not (= x1199 759532456)) (not (= 18446744073709551615 x1199)) (not (= 2764855426 x1199)) (not (= x1199 2798343961)) (not (= 468353030 x1199)) (not (= x1199 1968616202)) (> x1199 10000) (not (= x1199 1986467848)) (not (= x1199 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x1199 2960351575)) (not (= 2061678023 x1199)) (not (= x1199 826074471)) (not (= x1199 142201243)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1199)) (not (= x1199 635128645)) (not (= x1199 1000000000000000000)) (not (= 274184521717934524641157099916833587214 x1199)) (not (= 2743102681 x1199)) (not (= x1199 1889567281)) (not (= x1199 2293535753)) (not (= x1199 649617121)) (not (= x1199 2512682246)) (not (= x1199 604800)) (not (= x1199 69947311)) (not (= x1199 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x1199 2258409472)) (not (= x1199 87118632)) (not (= 2418364589 x1199)) (not (= x1199 274184521717934524641157099916833587218)) (not (= 2211524764 x1199)) (not (= 1461501637330902918203684832716283019655932542975 x1199)) (not (= x1199 2690754053)) (not (= x1199 2532887486)) (not (= 2514000705 x1199)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x1199)) (not (= x1199 115792089237316195423570985008687907853269984665640564039457)) (not (= x1199 911411945)) (not (= x1199 274184521717934524641157099916833587206)) (not (= x1199 37714057306076988483118529490347679105585116642029194716945419020321082336612))) (not ((_ is x1467) (x958 x1199)))))
(assert (= (x680 (x958 x778)) x778))
(assert (= (=> (and (= (= 0 x421) x1122) (= x821 (= x1209 0)) (or (and (= (x1081 (x958 x1114) x677 0) x1152) (= (x1283 (+ 64 x1464)) x701) (= x758 (x1283 (+ 32 x1464))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x660) (= (x1452 x1144) x964) (= x872 (= 0 x835)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x30) (<= 0 x660) (= x660 (x1039 x1358)) (= x696 (x333 x758)) (not x821) (= (x509 1461501637330902918203684832716283019655932542975 x419) x1114) (= x616 (x1081 (x958 x1178) x1152 0)) (= x30 (x811 x616)) (= (x1081 (x958 x1165) (x1467 7) 0) x677) (or (and (not x872) (< (* x1209 x835) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1081 (x958 x891) x1413 0) x494) (= (x1081 (x958 x1165) (x1467 3) 0) x745) (= x907 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x53 x378) (= (x1081 (x958 x1178) x1341 0) x1557) (= (x509 1461501637330902918203684832716283019655932542975 x419) x891) (= x701 x970) (= (x1081 (x958 x1165) (x1467 7) 0) x1413) (= (x1081 (x958 x907) x745 0) x1341) (= (* x1209 x835) x53) (= (x1081 (x958 x1178) x494 0) x536)) (and x872 (= x87 (x1081 (x958 x1178) x267 0)) (= (x1081 (x958 x1165) (x1467 7) 0) x711) (= x970 x701) (= (x1081 (x958 x1082) x711 0) x267) (= (x509 1461501637330902918203684832716283019655932542975 x419) x1082))) (= x1144 (x950 x1358 1)) (or (and (not x453) (= x835 0)) (and x453 (= x149 (> x1079 x884)) (= x884 (x333 x758)) (or (and (= (x628 (- x44 x895)) x1145) (= x1145 x835) (not (> x895 x44)) x125 (= (x333 x1464) x895)) (and (= x743 x835) (= (ite (< x700 604800) x700 604800) x743) (not x125) (not (< x44 x30)) (= (x628 (- x44 x30)) x700) (= x1219 604800))) (or (and (= x44 x1008) (= (x333 x758) x1008) x149) (and (not x149) (= x1079 x44))) (= (= x30 0) x125))) (= (x1081 (x958 x1165) (x1467 1) 0) x1358) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x964) (<= 0 x964) (>= x30 0) (= (< x30 x696) x453)) (and (= x810 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x290 (x1081 (x958 x1165) (x1467 7) 0)) (= (x1081 (x958 x1178) x1282 0) x534) (= x1282 (x1081 (x958 x810) x290 0)) x821 (= x970 x1464))) (or (and (= (x1081 (x958 x1165) (x1467 9) 0) x1011) (not x1122) (= x1313 (x1081 (x958 x1178) x977 0)) (= x1023 (x509 1461501637330902918203684832716283019655932542975 x419)) (= (x1081 (x958 x1023) x1011 0) x977)) x1122)) x1285) x1077))
(assert (= (and (not x1515) x1076) x928))
(assert (x672 x990))
(assert (x672 x1079))
(assert (x142 x805 x702))
(assert (x672 x409))
(assert (= (x614 x16) (ite (and x366 x645) (x1080 x16) (ite (and (not x1325) x1493 (not x645) x366) (x1463 x16) (ite (and (not x1493) (not x645) x366) (x1080 x16) (x1186 x16))))))
(assert (x672 x1263))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x533) (= x533 (x1134 x484)) (= (x1081 (x958 x739) x1029 0) x654) (>= x533 0) (= (x1081 (x958 x610) (x1467 7) 0) x1029) (= (x509 1461501637330902918203684832716283019655932542975 x419) x739) (= (= 0 x533) x619) (= x484 (x1081 (x958 x1178) x654 0))) (and (=> (and x619 (not x1365) (= (> x929 0) x1365) (= (x628 (- x610 1)) x929)) x767) (=> (and (= x1476 x610) (not x619)) x1193))) x454))
(assert (x672 x315))
(assert (= (x680 (x958 x652)) x652))
(assert (= (ite (= x573 x211) x381 (x605 x573)) (x1204 x573)))
(assert (x672 x69))
(assert (x669 x1024))
(assert (x672 x166))
(assert (x672 x1192))
(assert (= x8 (=> (= (> x1165 0) x117) (and (=> (not x117) x1354) (=> x117 x981)))))
(assert (= (=> (and (or (and (= x526 0) x206 (= 0 x955)) (and (= x544 (x294 x137)) (= (x509 1461501637330902918203684832716283019655932542975 x419) x69) (<= x544 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x544 x955) (>= x544 0) (= 1 x526) (= (x1081 (x958 x69) x24 0) x433) (= x24 (x1081 (x958 x336) (x1467 9) 0)) (not x206) (= (x1081 (x958 x1178) x433 0) x137))) (= x206 (= 0 x336))) x1034) x325))
(assert (= (x1550 x573) (ite (and x1026 x1242 x1190 x721 x154 (not x770)) (x1164 x573) (ite (and (not x154) x1190 x1242 x721 x1026) (x78 x573) (ite (and x1190 (not x1026) x1242 x721) (x787 x573) (ite (and (not x1190) x721 x1242) (x1128 x573) (x521 x573)))))))
(assert (= (ite (= x472 x1412) x187 (x1182 x472)) (x1172 x472)))
(assert (x672 x792))
(assert (x672 x403))
(assert (x672 x1369))
(assert (x672 x1064))
(assert (= (ite (and x869 x395) (x794 x765) (x708 x765)) (x900 x765)))
(assert (x669 x3))
(assert (x672 x63))
(assert (x672 x138))
(assert (= (ite (and x366 x645) (x1080 x1423) (ite (and x366 (not x1325) (not x645) x1493) (x1463 x1423) (ite (and x366 (not x1493) (not x645)) (x1080 x1423) (x1186 x1423)))) (x614 x1423)))
(assert (x672 x1423))
(assert (= (x1204 x52) (ite (= x211 x52) x381 (x605 x52))))
(assert (= (x1251 160) 0))
(assert (x669 x356))
(assert (= (ite (= x244 x1075) x1137 (x1080 x1075)) (x1463 x1075)))
(assert (x672 x196))
(assert (x672 x179))
(assert (= x679 (=> (and (= x475 (x1440 (x958 274184521717934524641157099916833587206))) (< 0 x475) (= x1466 (x1081 (x958 x1200) (x1467 3) 0)) (not (> 2293535753 x247)) (= (x339 x608) x936) (<= 0 x936) (<= x936 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> 2690754053 x247)) (= (x1081 (x958 x1108) x259 0) x608) (= x247 2743102681) (not (= 2690754053 x247)) (= x126 x936) (= x259 (x1081 (x958 x374) x1466 0)) (<= x1108 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x374) (< x247 2960351575)) (=> (and (= x897 x251) (= x264 x853) (= x298 x516) (= x126 x766) (= x489 x893)) x935))))
(assert (x669 x1525))
(assert (x672 x180))
(assert (x672 x1166))
(assert (x672 x581))
(assert (= (or (and x636 x1027) (and x1159 (not x1265)) (and (not x803) x842)) x1271))
(assert (x672 x417))
(assert (x672 x857))
(assert (x672 x698))
(assert (x122 x805))
(assert (= x806 (x680 (x958 x806))))
(assert (x672 x299))
(assert (x672 x202))
(assert (= (ite (and x1026 x1190 x154 x1242 (not x770) x721) (x1164 x215) (ite (and x1026 x1242 x721 (not x154) x1190) (x78 x215) (ite (and x1242 (not x1026) x1190 x721) (x787 x215) (ite (and x1242 x721 (not x1190)) (x1128 x215) (x521 x215))))) (x1550 x215)))
(assert (x672 x410))
(assert (= (x1128 x1468) (ite (= x762 x1468) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x1468))))
(assert (x672 x1378))
(assert (x672 x934))
(assert (= x800 (x680 (x958 x800))))
(assert (= (x680 (x1467 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x672 x762))
(assert (x672 x257))
(assert (= 2293535753 (x680 (x1467 2293535753))))
(assert (x669 x1083))
(assert (x672 x1449))
(assert (= x820 (x680 (x958 x820))))
(assert (x669 x904))
(assert (= (x1128 x1369) (ite (= x762 x1369) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x1369))))
(assert (= true x406))
(assert (x672 x1476))
(assert (x672 x966))
(assert (=> (<= x445 10000) (= (x1467 x445) (x958 x445))))
(assert (x672 x335))
(assert (x672 x1340))
(assert (= (ite (= x215 x1092) x384 (x78 x215)) (x1164 x215)))
(assert (x669 274184521717934524641157099916833587218))
(assert (= (x1164 x1075) (ite (= x1075 x1092) x384 (x78 x1075))))
(assert (= x77 (x680 (x958 x77))))
(assert (x672 x1083))
(assert (x669 x248))
(assert (= (x129 x57) (ite (and x366 x731) (x1248 x57) (x537 x57))))
(assert (x672 x630))
(assert (= x28 (=> (and (= (x509 1461501637330902918203684832716283019655932542975 x419) x3) (= (= x250 0) x222) (= (x1081 (x958 x1178) x864 0) x1045) (>= x250 0) (= (x1081 (x958 x3) x1180 0) x864) (= (x1134 x1045) x250) (= (x1081 (x958 x609) (x1467 7) 0) x1180) (<= x250 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (not x222) (= x609 x1476)) x1193) (=> x222 x1020)))))
(assert (x672 x463))
(assert (= (ite (= x211 x472) x381 (x605 x472)) (x1204 x472)))
(assert (= (x1128 x765) (ite (= x765 x762) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x765))))
(assert (x672 x936))
(assert (x672 x758))
(assert (x672 x1239))
(assert (x672 x445))
(assert (x672 x1211))
(assert (x672 x306))
(assert (x672 x96))
(assert (x672 x305))
(assert (= x55 (=> (and (= (= 0 x508) x730) (or (and (= 0 x1403) x730 (= 0 x26)) (and (= x451 (x1081 (x958 x1018) x1446 0)) (= x807 (x174 x451)) (not x730) (= x1361 (= x807 0)) (= (x509 1461501637330902918203684832716283019655932542975 x419) x1018) (<= 0 x807) (= x1446 (x1081 (x958 x508) (x1467 10) 0)) (<= x807 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= 0 x1403) (= 0 x26) x1361) (and (= x1403 x807) (= x26 1) (not x1361)))))) x1455)))
(assert (=> (<= x1381 10000) (= (x958 x1381) (x1467 x1381))))
(assert (= (ite (= x1092 x573) x384 (x78 x573)) (x1164 x573)))
(assert (= (x680 (x958 x370)) x370))
(assert (= (x605 x1487) (ite (= x1500 x1487) x1338 (x17 x1487))))
(assert (x672 x1114))
(assert (x672 x956))
(assert (= (x1467 2764855426) (x958 2764855426)))
(assert (x672 x461))
(assert (x672 x340))
(assert (=> (<= x1005 10000) (= (x1467 x1005) (x958 x1005))))
(assert (= (ite (and x154 (not x770) x721 x1026 x1190 x1242) (x1164 x966) (ite (and x721 x1190 x1242 (not x154) x1026) (x78 x966) (ite (and x721 x1242 (not x1026) x1190) (x787 x966) (ite (and x721 x1242 (not x1190)) (x1128 x966) (x521 x966))))) (x1550 x966)))
(assert (= (ite (= x1500 x1075) x1338 (x17 x1075)) (x605 x1075)))
(assert (x672 x1202))
(assert (x672 x168))
(assert (= (ite (= x573 x834) x1536 (x391 x834)) (x794 x834)))
(assert (= x347 (and (not x144) x1096)))
(assert (x672 x696))
(assert (x672 x908))
(assert (= (x605 x256) (ite (= x256 x1500) x1338 (x17 x256))))
(assert (x672 x416))
(assert (x672 x552))
(assert (x672 x972))
(assert (= (x680 (x958 x739)) x739))
(assert (= 649617121 (x680 (x1467 649617121))))
(assert (x672 x269))
(assert (x1175 x495 x364))
(assert (=> (>= 10000 x815) (= (x1467 x815) (x958 x815))))
(assert (= (ite (= x765 x1412) x187 (x1182 x765)) (x1172 x765)))
(assert (= (ite (= x762 x573) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x573)) (x1128 x573)))
(assert (=> (>= 10000 x1360) (= (x1467 x1360) (x958 x1360))))
(assert (= (and x1268 (not x490)) x468))
(assert (= x904 (x680 (x958 x904))))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x680 (x1467 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (=> (>= 10000 x1342) (= (x958 x1342) (x1467 x1342))))
(assert (= x767 (=> (= x336 0) x325)))
(assert (= (ite (and x366 x645) (x1080 x52) (ite (and (not x1325) x1493 x366 (not x645)) (x1463 x52) (ite (and (not x645) x366 (not x1493)) (x1080 x52) (x1186 x52)))) (x614 x52)))
(assert (= (x1467 604800) (x958 604800)))
(assert (x672 x93))
(assert (= (ite (and x645 x366) (x1080 x573) (ite (and (not x1325) x366 x1493 (not x645)) (x1463 x573) (ite (and x366 (not x645) (not x1493)) (x1080 x573) (x1186 x573)))) (x614 x573)))
(assert (=> (<= x1108 10000) (= (x1467 x1108) (x958 x1108))))
(assert (=> (<= x110 10000) (= (x958 x110) (x1467 x110))))
(assert (= x827 (x680 (x958 x827))))
(assert (= (x680 (x958 x1015)) x1015))
(assert (x669 x1167))
(assert (= (x787 x1075) (ite (= x1075 x1368) x1131 (x1128 x1075))))
(assert (= (ite (= x1412 x45) x187 (x1182 x45)) (x1172 x45)))
(assert (= (x1467 2512682246) (x958 2512682246)))
(assert (= (x598 x765) (ite (and x1035 x742) (x6 x765) (x896 x765))))
(assert (= (x680 (x958 x343)) x343))
(assert (=> (>= 10000 x739) (= (x1467 x739) (x958 x739))))
(assert (= (ite (= x1500 x467) x1338 (x17 x467)) (x605 x467)))
(assert (= 1889567281 (x680 (x1467 1889567281))))
(assert (= x907 (x680 (x958 x907))))
(assert (x672 x1185))
(assert (x672 x924))
(assert (x669 x180))
(assert (=> (>= 10000 x786) (= (x1467 x786) (x958 x786))))
(assert (=> (>= 10000 x552) (= (x958 x552) (x1467 x552))))
(assert (= (ite (and x366 x645) (x1080 x472) (ite (and x366 x1493 (not x645) (not x1325)) (x1463 x472) (ite (and (not x645) (not x1493) x366) (x1080 x472) (x1186 x472)))) (x614 x472)))
(assert (x669 x165))
(assert (x669 x1258))
(assert (=> (>= 10000 x904) (= (x1467 x904) (x958 x904))))
(assert (= x826 (x680 (x958 x826))))
(assert (x672 x457))
(assert (x672 x591))
(assert (= (ite (and x869 x395) (x794 x472) (x708 x472)) (x900 x472)))
(assert (x672 x5))
(assert (=> (<= x1082 10000) (= (x1467 x1082) (x958 x1082))))
(assert (= (x680 (x958 x918)) x918))
(assert (= (x1550 x52) (ite (and x721 x154 x1242 x1190 x1026 (not x770)) (x1164 x52) (ite (and x1190 x721 (not x154) x1026 x1242) (x78 x52) (ite (and x1190 (not x1026) x721 x1242) (x787 x52) (ite (and x1242 x721 (not x1190)) (x1128 x52) (x521 x52)))))))
(assert (x672 x970))
(assert (= (ite (= x385 x1075) x136 (x787 x1075)) (x78 x1075)))
(assert (= (x680 (x958 x168)) x168))
(assert (x669 x465))
(assert (=> (>= 10000 x356) (= (x1467 x356) (x958 x356))))
(assert (=> (<= x792 10000) (= (x958 x792) (x1467 x792))))
(assert (= (x794 x215) (ite (= x215 x573) x1536 (x391 x215))))
(assert (= x74 x944))
(assert (= (ite (= x385 x966) x136 (x787 x966)) (x78 x966)))
(assert (x672 x646))
(assert (x672 x47))
(assert (= x399 (=> (and (< 0 x23) (= x233 x237) (>= x237 0) (> 911411945 x358) (= (x1081 (x958 x1048) (x1467 10) 0) x724) (< x358 468353030) (= x237 (x174 x1301)) (= 69947311 x358) (>= 1461501637330902918203684832716283019655932542975 x918) (= (x1081 (x958 x918) x724 0) x1301) (> 2293535753 x358) (<= x237 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1440 (x958 274184521717934524641157099916833587206)) x23)) (=> (and (= x853 x1194) (= x233 x1551) (= x846 x251) (= x685 x298)) x606))))
(assert (=> (>= 10000 x820) (= (x958 x820) (x1467 x820))))
(assert (x672 x987))
(assert (x672 x558))
(assert (= (x680 (x958 x264)) x264))
(assert (x672 x426))
(assert (x672 x781))
(assert (x669 x168))
(assert (=> (>= 10000 x987) (= (x1467 x987) (x958 x987))))
(assert (x672 x1253))
(assert (x142 x1310 x1330))
(assert (= (x680 (x958 x356)) x356))
(assert (x672 x964))
(assert (= (x1463 x215) (ite (= x244 x215) x1137 (x1080 x215))))
(assert (= (x1467 1461501637330902918203684832716283019655932542975) (x958 1461501637330902918203684832716283019655932542975)))
(assert (= (ite (and x869 x395) (x794 x467) (x708 x467)) (x900 x467)))
(assert (= (ite (= x1368 x573) x1131 (x1128 x573)) (x787 x573)))
(assert (= (x1204 x1160) (ite (= x211 x1160) x381 (x605 x1160))))
(assert (x672 x101))
(assert (x669 x386))
(assert (x669 x481))
(assert (x672 x1126))
(assert (x672 x979))
(assert (= x637 (or x1072 x881)))
(assert (= (x958 2293535753) (x1467 2293535753)))
(assert (x672 x378))
(assert (= x1005 (x680 (x958 x1005))))
(assert (x672 x599))
(assert (=> (>= 10000 x954) (= (x1467 x954) (x958 x954))))
(assert (= (x1251 x1423) 0))
(assert (x672 x865))
(assert (= 468353030 (x680 (x1467 468353030))))
(assert (x672 x713))
(assert (=> (<= x274 10000) (= (x958 x274) (x1467 x274))))
(assert (x672 x298))
(assert (x672 x1233))
(assert (x672 x346))
(assert (= (ite (= x1487 x972) x308 (x46 x1487)) (x1080 x1487)))
(assert (x672 x1442))
(assert (x672 x516))
(assert (x672 x1191))
(assert (= x193 (x680 (x958 x193))))
(assert (x672 x1014))
(assert (x669 x815))
(assert (x672 x110))
(assert (=> (<= x685 10000) (= (x958 x685) (x1467 x685))))
(assert (=> (>= 10000 x386) (= (x958 x386) (x1467 x386))))
(assert (= (x1080 x256) (ite (= x972 x256) x308 (x46 x256))))
(assert (= x465 (x680 (x958 x465))))
(assert (= (x680 (x958 x1367)) x1367))
(assert (x672 x666))
(assert (= (x680 (x1467 87118632)) 87118632))
(assert (x672 x1508))
(assert (= x1076 x869))
(assert (x672 x327))
(assert (x669 x648))
(assert (= (=> (and (> 911411945 x1444) (not (= 69947311 x1444)) (not (= 87118632 x1444)) (<= x846 1461501637330902918203684832716283019655932542975) (> x956 0) (<= x1194 1461501637330902918203684832716283019655932542975) (= x255 (x1081 (x958 x685) (x1467 9) 0)) (> 2293535753 x1444) (= x892 x1053) (= x994 (x1081 (x958 x1194) x670 0)) (= x1444 142201243) (< x1444 468353030) (= (x1440 (x958 274184521717934524641157099916833587206)) x956) (= x670 (x1081 (x958 x846) x255 0)) (<= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1053) (= x1053 (x183 x994))) (=> (and (= (and x133 x158) x68) (= x853 x578) (= x1064 x298) (= x892 x525) (= x251 x595) (= (<= x525 x1551) x158)) x430)) x606))
(assert (=> (<= x101 10000) (= (x958 x101) (x1467 x101))))
(assert (= (x1217 x862) (ite (and x848 x821) (x584 x862) (ite (and x872 x848 (not x821)) (x584 x862) (x1093 x862)))))
(assert (= (ite (= x972 x244) x308 (x46 x244)) (x1080 x244)))
(assert (x672 x744))
(assert (= x1193 (=> (= x1476 x336) x325)))
(assert (x672 x441))
(assert (= (and x1317 x331) x662))
(assert (= x503 (x680 (x958 x503))))
(assert (x672 x585))
(assert (x672 x70))
(assert (x672 x1258))
(assert (= (ite (= x779 x765) x94 (x1172 x765)) (x855 x765)))
(assert (= (ite (= x52 x1500) x1338 (x17 x52)) (x605 x52)))
(assert (x672 x845))
(assert (x672 x230))
(assert (= (ite (= x1487 x211) x381 (x605 x1487)) (x1204 x1487)))
(assert (= (ite (= x472 x972) x308 (x46 x472)) (x1080 x472)))
(assert (x672 x1543))
(assert (x672 x1289))
(assert (x672 x929))
(assert (= x274 (x680 (x958 x274))))
(assert (= (=> (= (= 274184521717934524641157099916833587214 x1360) x1297) (and (=> (not x1297) x1353) (=> (and x1297 (< 0 x969) (= 274184521717934524641157099916833587206 x1397) (not (= x249 2514000705)) (= x1496 x1261) (= x1387 32) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1545) (= x172 (x984 x1259)) (not (= 826074471 x249)) (= x782 (< x418 x43)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x43 x172)) (not x858) (not x1386) (= x1060 (+ x1149 x1109)) (not (= x249 649617121)) (= x1261 x43) (= x769 x1284) (= x1149 x43) (>= 1461501637330902918203684832716283019655932542975 x1284) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x418) (not x555) (= (x509 1461501637330902918203684832716283019655932542975 x1284) x715) (= x417 x550) (= x554 x1442) (= (x628 (- x417 4)) x1289) (= x1386 (> x1261 x418)) (= (x509 1461501637330902918203684832716283019655932542975 x1284) x979) (>= x418 0) (= x249 2835717307) (= x932 (x628 (- x418 x1261))) (= x457 274184521717934524641157099916833587206) (= x555 (or (and (= (<= x1289 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1289)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1289))) (not x782) (= x418 (x1063 x1533)) (= x417 68) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x172 x43)) x858) (= (x1081 (x958 274184521717934524641157099916833587206) (x1467 1) 0) x1533) (not (< x249 649617121)) (= 1 x713) (not (= 1889567281 x249)) (= (x1440 (x958 274184521717934524641157099916833587214)) x969) (= x1321 (x1081 (x958 274184521717934524641157099916833587206) (x1467 1) 0)) (not (< x417 4)) (>= x172 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x172) (= (x1081 (x958 x979) (x1467 1) 0) x1259) (= x172 x1109)) x1507))) x132))
(assert (x672 x834))
(assert (x672 x389))
(assert (= (x680 (x958 x1108)) x1108))
(assert (x672 x303))
(assert (= (=> (and (>= x251 0) (<= x251 1461501637330902918203684832716283019655932542975) (= x1202 (x557 (x958 274184521717934524641157099916833587214))) (>= x865 0) (<= 0 x737) (= x221 (> (x1440 (x958 274184521717934524641157099916833587214)) 0)) (= x197 4) (>= x76 0) (= (< 0 (x1440 (x958 274184521717934524641157099916833587218))) x219) (= x251 x1389) x221 (<= 0 x1308) (= x306 x865) (= x1178 x1308) (>= 1461501637330902918203684832716283019655932542975 x893) (= x875 false) (= x750 (< 0 (x1440 (x958 274184521717934524641157099916833587206)))) (= x85 false) (= (x557 (x958 274184521717934524641157099916833587206)) x76) (<= 0 x893) x750 (= x737 (x557 (x958 274184521717934524641157099916833587218))) (= x943 false) (<= 0 x853) (>= 1461501637330902918203684832716283019655932542975 x1308) (>= x1202 0) (<= x853 1461501637330902918203684832716283019655932542975) (= 87118632 x1402) x219 (= x632 false) (<= x865 1461501637330902918203684832716283019655932542975) (= x298 x781)) x991) x629))
(assert (= (x164 x765) (ite (and x1010 x1526 (not x1331)) (x626 x765) (x1021 x765))))
(assert (x672 x1397))
(assert (= (x614 x215) (ite (and x366 x645) (x1080 x215) (ite (and (not x1325) x366 (not x645) x1493) (x1463 x215) (ite (and (not x645) x366 (not x1493)) (x1080 x215) (x1186 x215))))))
(assert (=> (<= x595 10000) (= (x958 x595) (x1467 x595))))
(assert (x672 x746))
(assert (= (ite (= x244 x1423) x1137 (x1080 x1423)) (x1463 x1423)))
(assert (= (x1463 x316) (ite (= x244 x316) x1137 (x1080 x316))))
(assert (=> (>= 10000 x1016) (= (x1467 x1016) (x958 x1016))))
(assert (x672 x738))
(assert (x672 x51))
(assert (= (ite (= x52 x762) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x52)) (x1128 x52)))
(assert (= (or (and x407 (not x222)) (and (not x619) x369)) x1042))
(assert (= 0 (x1251 x215)))
(assert (x122 x1310))
(assert (= (x680 (x1467 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x171 x109))
(assert (x672 x1205))
(assert (= x577 (=> (and (= (and x1548 x890) x1155) (= x1196 x115) (= (or (not x1404) x1155) x726) (= x1548 (<= x1196 x789))) (and (=> (and (= x251 x374) (= x393 87118632) (= x1200 x298) (= x1522 87118632) (= x853 x1108) (= false x1104)) x679) x726))))
(assert (x142 x444 x62))
(assert (= (x522 x966) (ite (and (not x353) x721 x1242) (x1550 x966) (x535 x966))))
(assert (x669 x652))
(assert (= (and x505 x938) x1250))
(assert (= x210 x1242))
(assert (= (x787 x472) (ite (= x1368 x472) x1131 (x1128 x472))))
(assert (= x759 x438))
(assert (= x1176 (x680 (x958 x1176))))
(assert (x672 x1366))
(assert (x122 x916))
(assert (x672 x1060))
(assert (= (x794 x1556) (ite (= x1556 x573) x1536 (x391 x1556))))
(assert (= (x1467 2532887486) (x958 2532887486)))
(assert (x669 x595))
(assert (x672 x514))
(assert (= (x1172 x834) (ite (= x834 x1412) x187 (x1182 x834))))
(assert (= (x680 (x1467 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x672 x371))
(assert (=> (>= 10000 x301) (= (x958 x301) (x1467 x301))))
(assert (= (x1467 2835717307) (x958 2835717307)))
(assert (x669 x810))
(assert (= (x680 (x958 x1363)) x1363))
(assert (= x1138 (x680 (x958 x1138))))
(assert (x142 x1284 x473))
(assert (=> (>= 10000 x591) (= (x1467 x591) (x958 x591))))
(assert (= (x900 x16) (ite (and x395 x869) (x794 x16) (x708 x16))))
(assert (x669 x764))
(assert (x669 x1108))
(assert (= (x794 x1423) (ite (= x573 x1423) x1536 (x391 x1423))))
(assert (= (x614 x966) (ite (and x645 x366) (x1080 x966) (ite (and (not x645) x1493 (not x1325) x366) (x1463 x966) (ite (and (not x645) (not x1493) x366) (x1080 x966) (x1186 x966))))))
(assert (x672 x895))
(assert (=> (>= 10000 x177) (= (x1467 x177) (x958 x177))))
(assert (x672 x1120))
(assert (x672 x1468))
(assert (x672 x314))
(assert (x672 x193))
(assert (x672 x20))
(assert (x672 x185))
(assert (x672 x1307))
(assert (x672 x1005))
(assert (= x1416 (=> (= (< 0 x1165) x38) (and (=> (not x38) x579) (=> x38 x832)))))
(assert (=> (>= 10000 x420) (= (x1467 x420) (x958 x420))))
(assert (x672 x1389))
(assert (=> (<= x646 10000) (= (x958 x646) (x1467 x646))))
(assert (x669 x398))
(assert (x672 x1349))
(assert (= (and x117 x1074) x331))
(assert (=> (<= x1547 10000) (= (x958 x1547) (x1467 x1547))))
(assert (= (=> (and (= x286 x602) (not (> 911411945 x1286)) (= x1286 2258409472) (not (= 2211524764 x1286)) (not (= 1986467848 x1286)) (>= 1461501637330902918203684832716283019655932542975 x1389) (= x286 (x1546 x656)) (< x1286 2293535753) (= (x1081 (x958 x781) (x1467 6) 0) x773) (= x656 (x1081 (x958 x1389) x773 0)) (> x856 0) (= x856 (x1440 (x958 274184521717934524641157099916833587206))) (>= x286 0) (not (= x1286 1968616202)) (not (< x1286 1968616202)) (<= x286 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1286 2061678023))) (=> (and (= x552 x251) (= x1525 x298) (= x853 x180) (= x874 x602)) x1396)) x991))
(assert (= (ite (= x1092 x1556) x384 (x78 x1556)) (x1164 x1556)))
(assert (= (ite (and x1242 (not x353) x721) (x1550 x765) (x535 x765)) (x522 x765)))
(assert (= x759 x507))
(assert (x672 x1374))
(assert (= (ite (= x573 x972) x308 (x46 x573)) (x1080 x573)))
(assert (x672 x820))
(assert (x672 x77))
(assert (x672 x907))
(assert (x672 x374))
(assert (x672 x1176))
(assert (x672 x1421))
(assert (x672 x336))
(assert (= (x680 (x958 x1525)) x1525))
(assert (= x846 (x680 (x958 x846))))
(assert (= (ite (and x742 x1035) (x6 x966) (x896 x966)) (x598 x966)))
(assert (x672 x793))
(assert (= (x1467 2211524764) (x958 2211524764)))
(assert (x672 x532))
(assert (=> (>= 10000 x1194) (= (x958 x1194) (x1467 x1194))))
(assert (x672 x1525))
(assert (x672 x697))
(assert (= x985 x1320))
(assert (x669 x999))
(assert (x672 x1436))
(assert (x672 x217))
(assert (x672 x105))
(assert (= x925 (x680 (x958 x925))))
(assert (x669 x921))
(assert (x672 x1127))
(assert (= 759532456 (x680 (x1467 759532456))))
(assert (= x445 (x680 (x958 x445))))
(assert (x672 x348))
(assert (= (ite (= x1468 x573) x1536 (x391 x1468)) (x794 x1468)))
(assert (x672 x760))
(assert (= (x958 2514000705) (x1467 2514000705)))
(assert (= (x1463 x472) (ite (= x472 x244) x1137 (x1080 x472))))
(assert (= (ite (and (not x770) x721 x1242 x1026 x1190 x154) (x1164 x1075) (ite (and x721 (not x154) x1026 x1242 x1190) (x78 x1075) (ite (and (not x1026) x1190 x1242 x721) (x787 x1075) (ite (and x1242 x721 (not x1190)) (x1128 x1075) (x521 x1075))))) (x1550 x1075)))
(assert (= (=> (and (<= 0 x1302) (= (x1081 (x958 x786) (x1467 3) 0) x297) (< 0 x607) (>= 1461501637330902918203684832716283019655932542975 x420) (< x375 2960351575) (not (> 2690754053 x375)) (= (x1081 (x958 x420) x297 0) x337) (= x1535 (x1081 (x958 x165) x337 0)) (= (x1440 (x958 274184521717934524641157099916833587206)) x607) (= x1302 (x584 x1535)) (>= 1461501637330902918203684832716283019655932542975 x165) (= x375 2743102681) (not (= 2690754053 x375)) (= x698 x1302) (<= x1302 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> 2293535753 x375))) (=> (and (= x298 x1048) (= x1181 x698) (= x133 (>= x1483 x1181)) (= x251 x918)) x399)) x1540))
(assert (= x1105 x1434))
(assert (= (ite (= x215 x252) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1388 x215)) (x1182 x215)))
(assert (= (x1128 x472) (ite (= x762 x472) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x472))))
(assert (= (ite (and x366 x645) (x1080 x1075) (ite (and x366 (not x645) x1493 (not x1325)) (x1463 x1075) (ite (and x366 (not x1493) (not x645)) (x1080 x1075) (x1186 x1075)))) (x614 x1075)))
(assert (= x742 (and x721 x1242)))
(assert (x672 x1097))
(assert (= (ite (= x573 x1075) x1536 (x391 x1075)) (x794 x1075)))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1183) (= (x1081 (x958 x609) (x1467 1) 0) x596) (= (x1081 (x958 x1043) x1333 0) x1069) (= (= 0 x1349) x1344) (<= 0 x327) (or x1344 (and (= x963 (x509 1461501637330902918203684832716283019655932542975 x419)) (not x1344))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x464) (= (x1039 x596) x464) (= (x35 x57) x327) (= x1043 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x593 (= 0 x446)) (<= 0 x1338) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x327) (>= x915 0) (= x510 (= x915 0)) (= x317 (x950 x596 1)) (> x18 x664) (= (x1081 (x958 x609) (x1467 6) 0) x1333) (= (x103 x1069) x1183) (= x915 (x1230 x862)) (<= 0 x464) (= x862 (x1081 (x958 x1178) x695 0)) (or (and (= 0 x446) (not x282)) (and (= x1031 (< x1391 x1079)) (= (= x1183 0) x1218) (or (and (not x1031) (= x1516 x1079)) (and x1031 (= x1051 x1516) (= (x605 x1500) x1051))) x282 (= (x605 x1500) x1391) (or (and (= x446 x299) x1218 (= x1503 (x605 x202)) (not (< x1516 x1503)) (= x299 (x628 (- x1516 x1503)))) (and (= x34 (x628 (- x1516 x1183))) (not x1218) (= 604800 x621) (= x20 x446) (not (< x1516 x1183)) (= x20 (ite (> 604800 x34) x34 604800)))))) (or (and (= x60 (x1081 (x958 x681) x1262 0)) (= x878 x709) (= (x1081 (x958 x118) x728 0) x840) (= (x509 1461501637330902918203684832716283019655932542975 x419) x681) (= (x509 1461501637330902918203684832716283019655932542975 x419) x118) (< (* x446 x322) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1081 (x958 x609) (x1467 5) 0) x1262) (not x593) (= (* x322 x446) x878) (= (x1081 (x958 x609) (x1467 6) 0) x728)) (and (= (x1081 (x958 x609) (x1467 6) 0) x447) (= x1040 (x509 1461501637330902918203684832716283019655932542975 x419)) x593 (= x31 (x1081 (x958 x1040) x447 0)))) (= (x1081 (x958 x976) x716 0) x695) (= (< x1183 x647) x282) (= x404 x1369) (= (x1283 (+ x202 32)) x1500) (= x976 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x1046 (x1081 (x958 x609) (x1467 5) 0)) (= (x1283 (+ x202 64)) x404) (= (x1081 (x958 x609) (x1467 3) 0) x716) (or (and (= (ite (< 115792089237316195423570985008687907853269984665640564039457 x915) 1 0) x220) (= x416 (x1283 (+ 1 x609))) (= x523 (mod (* 1000000000000000000 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< 0 x327) (= x416 x18) (= x754 (div x523 x327)) (not x510) (or (and (= (x1081 (x958 x1258) x214 0) x822) (= x1258 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x502 (x605 x211)) (= (* x754 x542) x1292) (= x649 (x1081 (x958 x778) x84 0)) (or (not x752) (and (= (x225 x1356) x179) (= (x1283 (+ x1296 64)) x1356) (= (x1081 (x958 x179) x245 0) x1295) (> x1536 1) (= x827 (x225 x1356)) (not x434) (= x280 (x1081 (x958 x1342) x1427 0)) (= x434 (< 2 x1536)) (= x1110 x1062) (>= 1461501637330902918203684832716283019655932542975 x179) (= (x1067 x1295) x581) x752 (= x1555 (x1081 (x958 x609) (x1467 4) 0)) (= x291 (x1081 (x958 x827) x280 0)) (= (x1204 x573) x886) (= x130 (x1081 (x958 x213) x1555 0)) (= x245 (x1081 (x958 x1178) x130 0)) (>= 1461501637330902918203684832716283019655932542975 x827) (= (x349 x291) x566) (= (div x1514 1000000000000000000) x1110) (<= x581 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x886 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x906 x1110)) (= (x509 1461501637330902918203684832716283019655932542975 x419) x213) (> x1536 1) (<= x566 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x140 x906) (= (x1204 x16) x906) (= (x1283 (+ 192 x425)) x16) (= (* x566 x754) x1514) (>= x581 0) (< (* x754 x566) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1081 (x958 x609) (x1467 11) 0) x1427) (<= 0 x566) (= (+ x140 x1062) x768) (= x581 0) (= (x509 1461501637330902918203684832716283019655932542975 x419) x1342))) (> x1536 0) (< (* x754 x542) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x502 x588) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x542) (= x4 x992) (> x1395 0) (= 0 x111) (<= x111 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x381 (+ x588 x4)) (= x448 (x1081 (x958 x957) x511 0)) (<= 0 x111) x882 (= x211 (x1283 (+ x425 160))) (>= x542 0) (= x93 x1544) (<= x957 1461501637330902918203684832716283019655932542975) (= (> x1536 1) x752) (= (x1081 (x958 x1030) x1491 0) x84) (= (x1081 (x958 x609) (x1467 11) 0) x1491) (= x214 (x1081 (x958 x609) (x1467 4) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x502 x992)) (= x1030 (x509 1461501637330902918203684832716283019655932542975 x419)) (<= x778 1461501637330902918203684832716283019655932542975) (= (div x1292 1000000000000000000) x992) (= x542 (x349 x649)) (= x957 (x225 x1544)) (= (x605 x573) x1395) (= x778 (x225 x1544)) (= x111 (x1067 x448)) (> x1536 0) (= x511 (x1081 (x958 x1178) x822 0))) (not x882)) (= 1 x1253) (= 0 x95) (= (< 0 x1536) x882) (= x95 (x509 x1253 x220))) (and (= (x1283 (+ x609 1)) x1088) (= x1088 x18) x510)) (= x1338 (x1452 x317)) (= (x509 1461501637330902918203684832716283019655932542975 x419) x1458) (= (x1081 (x958 x1458) x1046 0) x57) (<= x1338 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x605 x1500) x647) (<= x915 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1183 0)) x2) x657))
(assert (x672 x146))
(assert (x672 x135))
(assert (= x1529 (=> (and (= x145 (x693 (x958 x178))) x368 (= x1035 (= x178 274184521717934524641157099916833587218)) (= x304 (x557 (x958 274184521717934524641157099916833587206))) x1214 (= x1214 (< x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x557 (x958 274184521717934524641157099916833587206)) x272) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x693 (x958 x178))) x368) x1352 (= (x557 (x958 x178)) x392) (= x246 x344) (= (<= 0 x272) x1352)) (and (=> (and (= x990 2835717307) (= x880 274184521717934524641157099916833587206) (= (x628 (- x492 x223)) x486) (< (+ x952 x1266) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x492 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x946) (= (x1081 (x958 x445) (x1467 1) 0) x852) (= x200 (> x1266 x492)) (not x200) (= (+ x86 x734) x212) (= x772 (x1081 (x958 x1553) (x1467 1) 0)) (= x182 (or (and (= true (<= x429 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x429 64)) (> x429 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x814 x246) (= (x1081 (x958 274184521717934524641157099916833587206) (x1467 1) 0) x564) (= x86 x952) (not (< x814 4)) (= x223 x469) (= 274184521717934524641157099916833587206 x504) (<= x1185 1461501637330902918203684832716283019655932542975) (< 0 x751) (= x445 (x509 1461501637330902918203684832716283019655932542975 x1185)) (not (= 1889567281 x990)) (= (x509 1461501637330902918203684832716283019655932542975 x1185) x1553) (= x769 x1185) (= x1266 x223) (not (= 826074471 x990)) (= 68 x814) (= (>= (+ x1266 x952) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x307) (not x182) (>= x952 0) (<= 0 x492) (= 1 x580) (not (= x990 2514000705)) (= x1279 32) (= x492 (x1228 x564)) (not (> 649617121 x990)) (= x751 (x1440 (x958 274184521717934524641157099916833587218))) (= (x628 (- x814 4)) x429) (<= x952 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x223 x492) x946) (= (x1081 (x958 274184521717934524641157099916833587206) (x1467 1) 0) x106) (= x952 (x1148 x852)) (= x734 x1266) (= x1255 x363) (not (= x990 649617121)) (not x307) x1035 (= x747 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x265) (=> (not x1035) x1129)))))
(assert (= (ite (= x211 x972) x308 (x46 x211)) (x1080 x211)))
(assert (= x569 x341))
(assert (x672 x1520))
(assert (x672 x831))
(assert (= (x680 (x1467 69947311)) 69947311))
(assert (x672 x652))
(assert (x672 x580))
(assert (=> (>= 10000 x1100) (= (x958 x1100) (x1467 x1100))))
(assert (x122 x419))
(assert (= (x1251 x1487) 0))
(assert (= (and x1405 x38) x689))
(assert (x672 x145))
(assert (x672 x906))
(assert (x672 x462))
(assert (x672 x234))
(assert (x672 x904))
(assert (x669 x1288))
(assert (= (and x1274 x1001) x407))
(assert (x672 x1372))
(assert (x669 x792))
(assert (x672 x747))
(assert (= (=> (and (= x251 x529) (= x298 x269)) x449) x1198))
(assert (= x1268 (and x742 (not x1035))))
(assert (x669 x1005))
(assert (= (x1467 635128645) (x958 635128645)))
(assert (x672 x437))
(assert (= (ite (and x1026 x1190 x721 (not x770) x154 x1242) (x1164 x467) (ite (and (not x154) x1026 x1190 x1242 x721) (x78 x467) (ite (and x1190 (not x1026) x721 x1242) (x787 x467) (ite (and x721 x1242 (not x1190)) (x1128 x467) (x521 x467))))) (x1550 x467)))
(assert (= (x680 (x958 x792)) x792))
(assert (= (or (and x1027 (not x636)) (and x530 (not x717))) x1195))
(assert (=> (>= 10000 x907) (= (x1467 x907) (x958 x907))))
(assert (x672 x3))
(assert (= (x958 87118632) (x1467 87118632)))
(assert (= (ite (and x645 x366) (x1080 x467) (ite (and (not x645) x366 x1493 (not x1325)) (x1463 x467) (ite (and x366 (not x1493) (not x645)) (x1080 x467) (x1186 x467)))) (x614 x467)))
(assert (= (x605 x211) (ite (= x211 x1500) x1338 (x17 x211))))
(assert (= (ite (= x385 x45) x136 (x787 x45)) (x78 x45)))
(assert (=> (<= x1138 10000) (= (x1467 x1138) (x958 x1138))))
(assert (x672 x67))
(assert (x142 x916 x1453))
(assert (x672 x301))
(assert (= x179 (x680 (x958 x179))))
(assert (x672 x1504))
(assert (x672 x743))
(assert (x672 x586))
(assert (= (ite (= x834 x762) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x834)) (x1128 x834)))
(assert (= x1105 x74))
(assert (= (x900 x256) (ite (and x395 x869) (x794 x256) (x708 x256))))
(assert (x672 x1038))
(assert (= x516 (x680 (x958 x516))))
(assert (x669 x1192))
(assert (x672 x431))
(assert (= x1287 x171))
(assert (= (x680 (x950 x1033 1)) (+ (x680 x1033) 1)))
(assert (= (x1217 x279) (ite (and x848 x821) (x584 x279) (ite (and (not x821) x872 x848) (x584 x279) (x1093 x279)))))
(assert (= (=> (and (>= x1140 0) (= x405 (x1081 (x958 x1372) x493 0)) (= (= 0 x1140) x636) (= (x103 x405) x1140) (= x493 (x1081 (x958 x1153) (x1467 6) 0)) (= (x509 1461501637330902918203684832716283019655932542975 x419) x1372) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1140)) (and (=> (and (not x636) (= x188 x1153)) x396) (=> (and (= x1366 (x628 (- x1153 1))) x636 (not x1359) (= x1359 (> x1366 0))) x1345))) x1007))
(assert (x672 x957))
(assert (= (x1204 x765) (ite (= x211 x765) x381 (x605 x765))))
(assert (= (x1164 x1160) (ite (= x1160 x1092) x384 (x78 x1160))))
(assert (= (ite (= x385 x472) x136 (x787 x472)) (x78 x472)))
(assert (= (x680 (x958 x979)) x979))
(assert (x672 x513))
(assert (= x1165 (x680 (x958 x1165))))
(assert (= (ite (and x742 x1035) (x6 x573) (x896 x573)) (x598 x573)))
(assert (= x394 (x680 (x958 x394))))
(assert (x669 x335))
(assert (= (x680 (x958 x529)) x529))
(assert (= (ite (= x573 x45) x1536 (x391 x45)) (x794 x45)))
(assert (= (x680 (x1467 826074471)) 826074471))
(assert (x672 x1551))
(assert (x672 x554))
(assert (= (x1463 x988) (ite (= x988 x244) x1137 (x1080 x988))))
(assert (x669 x1381))
(assert (x672 x1160))
(assert (= (x522 x215) (ite (and x721 x1242 (not x353)) (x1550 x215) (x535 x215))))
(assert (x672 x1544))
(assert (x672 x814))
(assert (x672 x778))
(assert (x672 x1015))
(assert (= (x1463 x1487) (ite (= x1487 x244) x1137 (x1080 x1487))))
(assert (x672 x1390))
(assert (x672 x1206))
(assert (= (ite (and x731 x366) (x676 x139) (x1111 x139)) (x103 x139)))
(assert (x672 x1536))
(assert (= (x787 x1487) (ite (= x1487 x1368) x1131 (x1128 x1487))))
(assert (x672 x1058))
(assert (= (x958 274184521717934524641157099916833587214) (x1467 274184521717934524641157099916833587214)))
(assert (=> (>= 10000 x548) (= (x1467 x548) (x958 x548))))
(assert (= (or (and x181 (not x329)) (and (not x1274) x1001) (and x619 x369)) x761))
(assert (x672 x308))
(assert (x672 x1537))
(assert (=> (<= x1272 10000) (= (x958 x1272) (x1467 x1272))))
(assert (= (x332 x765) (ite (= x765 x112) x851 (x855 x765))))
(assert (= (x794 x211) (ite (= x211 x573) x1536 (x391 x211))))
(assert (= (ite (= x1368 x1556) x1131 (x1128 x1556)) (x787 x1556)))
(assert (= x350 (=> (and (>= x1058 0) (= x1058 x1070) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1058) (= (x1081 (x958 x1187) (x1467 3) 0) x383) (= x850 (x1081 (x958 x815) x383 0)) (= (x1081 (x958 x1192) x850 0) x1087) (>= 1461501637330902918203684832716283019655932542975 x1192) (not (> 2690754053 x29)) (not (= 2690754053 x29)) (<= x815 1461501637330902918203684832716283019655932542975) (= 2743102681 x29) (not (> 2293535753 x29)) (= x1235 (x1440 (x958 274184521717934524641157099916833587206))) (< x29 2960351575) (> x1235 0) (= (x339 x1087) x1058)) (=> (and (= x262 x1070) (= (<= x262 x1132) x890) (= x298 x410) (= x1005 x251)) x877))))
(assert (x672 x1107))
(assert (x672 x867))
(assert (= 0 (x1251 192)))
(assert (x672 x187))
(assert (= (x1467 759532456) (x958 759532456)))
(assert (= (x598 x52) (ite (and x1035 x742) (x6 x52) (x896 x52))))
(assert (= (=> (and (<= x784 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x870 (< 0 x784)) (>= x784 0) (= x784 (x1134 x824)) (not (> x609 x1450)) (= x1363 (x509 1461501637330902918203684832716283019655932542975 x419)) (>= x1450 0) (= (x1081 (x958 x1178) x659 0) x824) (<= x1450 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1486 (x1081 (x958 x609) (x1467 7) 0)) (= (x1081 (x958 x1363) x1486 0) x659)) (and (=> (not x870) x321) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x808) (= x808 (x294 x887)) (= x1419 (x1081 (x958 x954) x635 0)) (= (x1081 (x958 x609) (x1467 9) 0) x635) (= (x1081 (x958 x1178) x1419 0) x887) x870 (= x526 0) (= x955 x808) (= (x509 1461501637330902918203684832716283019655932542975 x419) x954) (<= 0 x808)) x1034))) x1113))
(assert (x669 x301))
(assert (x672 x26))
(assert (= 0 (x1251 x1556)))
(assert (= (x605 x215) (ite (= x1500 x215) x1338 (x17 x215))))
(assert (=> (<= x601 10000) (= (x1467 x601) (x958 x601))))
(assert (= (and x622 x288) x1159))
(assert (= (ite (= x972 x970) x308 (x46 x970)) (x1080 x970)))
(assert (x672 x1266))
(assert (= (=> (and (= x803 (< 0 x1153)) (= (x628 (- x609 1)) x1153)) (and (=> x803 x1007) (=> (not x803) x1345))) x1304))
(assert (=> (<= x336 10000) (= (x1467 x336) (x958 x336))))
(assert (=> (>= 10000 x1389) (= (x1467 x1389) (x958 x1389))))
(assert (x669 x179))
(assert (x672 x100))
(assert (= (ite (= x45 x972) x308 (x46 x45)) (x1080 x45)))
(assert (x672 x1459))
(assert (= (=> (and (= x279 (x1081 (x958 x1178) x1306 0)) (<= 0 x1252) (or (and (= x905 (* x1403 x809)) (= (x509 1461501637330902918203684832716283019655932542975 x419) x1015) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1403 x809)) (= (x1081 (x958 x1015) x571 0) x1073) (= (x1081 (x958 x1165) (x1467 6) 0) x59) (not x731) (= x548 (x509 1461501637330902918203684832716283019655932542975 x419)) (= (x1081 (x958 x548) x59 0) x1156) (= (x1081 (x958 x1165) (x1467 5) 0) x571) (= x1091 x905)) (and x731 (= (x1081 (x958 x777) x1150 0) x121) (= (x1081 (x958 x1165) (x1467 6) 0) x1150) (= x777 (x509 1461501637330902918203684832716283019655932542975 x419)))) (>= x308 0) (= x159 (x1081 (x958 x1165) (x1467 1) 0)) (= x302 (x129 x1278)) (= x1378 (x1546 x980)) (= (x950 x159 1) x644) (= (x1283 (+ x970 64)) x831) (= x594 (= 0 x26)) (or (and (not x594) (= (x1081 (x958 x70) x99 0) x641) (= x70 (x509 1461501637330902918203684832716283019655932542975 x419)) (= (x1081 (x958 x1165) (x1467 10) 0) x99)) x594) (<= 0 x1378) (= (x1452 x644) x308) (= (x1080 x972) x1205) (= x972 (x1283 (+ 32 x970))) (= x1306 (x1081 (x958 x820) x1254 0)) (<= 0 x738) (= x820 (x509 1461501637330902918203684832716283019655932542975 x419)) (= (= 0 x809) x731) (or (and (not x645) (= x609 x793) (= 0 x146) (= 1 x150) (or (not x1493) (and (= x1441 (x1067 x1303)) (= x819 (div x1351 1000000000000000000)) (< 0 x1536) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x819 x1280)) (or (and (< 1 x1536) (<= 0 x1249) (= x847 (div x1480 1000000000000000000)) (>= x1319 0) (= x1249 (x349 x1407)) (<= x398 1461501637330902918203684832716283019655932542975) (= x234 (x1463 x573)) (= x485 x1239) (< (+ x1239 x847) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x398 (x225 x1014)) (<= x1249 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1381 (x225 x1014)) (= x1407 (x1081 (x958 x1381) x151 0)) (= x847 x1117) (= (x1081 (x958 x999) x561 0) x151) (> x1536 1) x1325 (= x561 (x1081 (x958 x1165) (x1467 11) 0)) (= x224 (+ x485 x1117)) (< 1 x234) (= (> x1536 2) x162) (= x999 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x316 (x1283 (+ 192 x425))) (= x912 (x1081 (x958 x1178) x372 0)) (= 0 x1319) (= (x1283 (+ 64 x1296)) x1014) (= (x509 1461501637330902918203684832716283019655932542975 x419) x427) (<= x1319 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1067 x1224) x1319) (= (x1081 (x958 x1165) (x1467 4) 0) x236) (= (x1081 (x958 x427) x236 0) x372) (not x162) (= x1480 (* x1249 x114)) (>= 1461501637330902918203684832716283019655932542975 x1381) (= x1239 (x1463 x316)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x114 x1249)) (= (x1081 (x958 x398) x912 0) x1224)) (not x1325)) (= x690 (x1081 (x958 x1178) x861 0)) (= x1137 (+ x411 x575)) (>= 1461501637330902918203684832716283019655932542975 x806) (= (> x1536 1) x1325) (= x201 (x1081 (x958 x806) x520 0)) (= (x1081 (x958 x167) x690 0) x1303) (= x244 (x1283 (+ x425 160))) (= (x509 1461501637330902918203684832716283019655932542975 x419) x648) x1493 (< (* x553 x114) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1441) (>= 1461501637330902918203684832716283019655932542975 x167) (= x575 x1280) (= x93 x849) (> x12 0) (<= 0 x1441) (<= 0 x553) (= x553 (x349 x201)) (= (x1081 (x958 x648) x1201 0) x520) (= x806 (x225 x849)) (< 0 x1536) (= (x1081 (x958 x1543) x732 0) x861) (= x1543 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x1441 0) (= x12 (x1080 x573)) (= x732 (x1081 (x958 x1165) (x1467 4) 0)) (= (x225 x849) x167) (= (x1080 x244) x1280) (= x1201 (x1081 (x958 x1165) (x1467 11) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x553) (= x1351 (* x553 x114)) (= x819 x411))) (= (x509 x150 x1050) x146) (= (mod (* 1000000000000000000 x1252) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x408) (< 0 x302) (= (> x1536 0) x1493) (= (ite (> x1252 115792089237316195423570985008687907853269984665640564039457) 1 0) x1050) (= (x1283 (+ x1165 1)) x793) (= x114 (div x408 x302))) (and (= x609 x1006) (= (x1283 (+ x1165 1)) x1006) x645)) (or (and x741 (or (and (not x49) (= x1079 x1523)) (and (= x620 x1523) (= (x1080 x972) x620) x49)) (= x49 (< x1436 x1079)) (= (= x1378 0) x543) (or (and (= (x1080 x970) x36) (= x135 (x628 (- x1523 x36))) (= x809 x135) (not (> x36 x1523)) x543) (and (not (> x1378 x1523)) (= x1191 (x628 (- x1523 x1378))) (= x105 604800) (= x809 x21) (not x543) (= (ite (< x1191 604800) x1191 604800) x21))) (= x1436 (x1080 x972))) (and (not x741) (= x809 0))) (= (x1081 (x958 x335) x1032 0) x1278) (= (x509 1461501637330902918203684832716283019655932542975 x419) x925) (= x796 (x1081 (x958 x1165) (x1467 6) 0)) (<= x1252 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1217 x279) x1252) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1378) (= x335 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x980 (x1081 (x958 x925) x796 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x308) (= (= 0 x1252) x645) (<= x738 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x741 (< x1378 x1205)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x302) (= (x1081 (x958 x1165) (x1467 5) 0) x1032) (= x738 (x1039 x159)) (= (x1081 (x958 x1165) (x1467 3) 0) x1254) (>= x302 0)) x512) x1455))
(assert (x122 x1253))
(assert (x672 x766))
(assert (= x210 (or x1549 (and x1076 x1515) (and x1197 x292))))
(assert (x672 x602))
(assert (x672 x1053))
(assert (x669 x1138))
(assert (= (x1134 x1045) (ite (and x821 x848) (x22 x1045) (ite (and x872 x848 (not x821)) (x452 x1045) (x885 x1045)))))
(assert (x672 x709))
(assert (=> (>= 10000 x1226) (= (x958 x1226) (x1467 x1226))))
(assert (= (x680 (x1467 2743102681)) 2743102681))
(assert (= (x1463 x573) (ite (= x244 x573) x1137 (x1080 x573))))
(assert (= (x522 x52) (ite (and x1242 (not x353) x721) (x1550 x52) (x535 x52))))
(assert (x672 x1252))
(assert (=> (>= 10000 x1024) (= (x958 x1024) (x1467 x1024))))
(assert (= (ite (= x1500 x1556) x1338 (x17 x1556)) (x605 x1556)))
(assert (x672 x733))
(assert (= (ite (and x366 x645) (x1080 x1556) (ite (and (not x645) x1493 x366 (not x1325)) (x1463 x1556) (ite (and (not x645) (not x1493) x366) (x1080 x1556) (x1186 x1556)))) (x614 x1556)))
(assert (x672 x421))
(assert (x672 x749))
(assert (= 0 (x1251 x316)))
(assert (x142 x461 x565))
(assert (x672 x701))
(assert (x672 x879))
(assert (= x1028 (x680 (x958 x1028))))
(assert (= (ite (and x821 x848) (x584 x1087) (ite (and (not x821) x872 x848) (x584 x1087) (x1093 x1087))) (x1217 x1087)))
(assert (= (ite (= x16 x211) x381 (x605 x16)) (x1204 x16)))
(assert (= 0 (x1251 x834)))
(assert (=> (>= 10000 x827) (= (x958 x827) (x1467 x827))))
(assert (=> (>= 10000 x609) (= (x1467 x609) (x958 x609))))
(assert (= (ite (and x869 x395) (x794 x966) (x708 x966)) (x900 x966)))
(assert (= 2960351575 (x680 (x1467 2960351575))))
(assert (= (x680 (x1467 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x672 x338))
(assert (= x177 (x680 (x958 x177))))
(assert (=> (>= 10000 x1167) (= (x958 x1167) (x1467 x1167))))
(assert (= x1338 (x605 x1500)))
(assert (= (x680 (x958 x1178)) x1178))
(assert (x672 x544))
(assert (= x592 (=> (and x631 x1414 (= x1328 (x1294 (x958 x1360))) x309 (= (x1294 (x958 274184521717934524641157099916833587206)) x1465) (= x199 x550) (= (x1294 (x958 274184521717934524641157099916833587206)) x540) (= x309 (<= 0 x1465)) (= (x1054 (x958 x1360)) x346) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1328) x631) (= x144 (= x1360 274184521717934524641157099916833587218)) (= (< (x1054 (x958 x1360)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1414)) (and (=> (not x144) x132) (=> (and (<= x461 1461501637330902918203684832716283019655932542975) (= (x1440 (x958 274184521717934524641157099916833587218)) x1263) (not x640) (= (x1081 (x958 274184521717934524641157099916833587206) (x1467 1) 0) x402) (>= x371 0) (= x1115 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1017 x1348) (= (or (> x409 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x409) (= (<= x409 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x640) (not (= 1889567281 x185)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x371) x144 (not x1022) (= x1504 x1337) (= x185 2835717307) (= (x176 x361) x371) (= (> x1504 x390) x922) (= (x509 1461501637330902918203684832716283019655932542975 x461) x1329) (= x582 (x1081 (x958 274184521717934524641157099916833587206) (x1467 1) 0)) (not (= x185 2514000705)) (> x1263 0) (not x488) (<= x390 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x829 274184521717934524641157099916833587206) (= x1167 (x509 1461501637330902918203684832716283019655932542975 x461)) (= (x1081 (x958 x1167) (x1467 1) 0) x361) (= x586 (x628 (- x390 x1337))) (not x922) (= x550 x153) (= x1504 x939) (not (= x185 826074471)) (= 1 x713) (< (+ x371 x1504) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x638 x582) x390) (= x1428 x371) (= x1496 x1337) (not (< x185 649617121)) (= x933 (+ x1428 x939)) (<= 0 x390) (= 274184521717934524641157099916833587206 x1454) (not (= 649617121 x185)) (= 32 x1387) (= x409 (x628 (- x153 4))) (= x1022 (>= (+ x371 x1504) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (> 4 x153)) (= 68 x153) (= (> x1337 x390) x488) (= x461 x769)) x1507)))))
(assert (= x1016 (x680 (x958 x1016))))
(assert (= x1020 (=> (and (= (x628 (- x609 1)) x610) (= (> x610 0) x329)) (and (=> (not x329) x767) (=> x329 x454)))))
(assert (x672 x495))
(assert (x672 x954))
(assert (= (x598 x1075) (ite (and x742 x1035) (x6 x1075) (x896 x1075))))
(assert (x672 x95))
(assert (= (and x1041 x1) x1405))
(assert (= (=> (and (>= x338 0) (= x189 (x1081 (x958 x269) (x1467 6) 0)) (not (> 911411945 x42)) (<= x529 1461501637330902918203684832716283019655932542975) (not (= 1986467848 x42)) (= x338 x1203) (not (= 2061678023 x42)) (< x42 2293535753) (> x25 0) (not (= x42 1968616202)) (= x139 (x1081 (x958 x529) x189 0)) (not (= x42 2211524764)) (= 2258409472 x42) (not (< x42 1968616202)) (<= x338 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1440 (x958 274184521717934524641157099916833587206)) x25) (= x338 (x1371 x139))) (=> (and (= x298 x800) (= x491 x1203) (= x110 x853) (= x655 x251)) x1019)) x449))
(assert (x669 x374))
(assert (x501 x558 x466 x576 x442))
(assert (= (x680 (x958 x497)) x497))
(assert (x672 x1293))
(assert (= (x680 (x958 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x669 x681))
(assert (= (x680 (x1467 18446744073709551615)) 18446744073709551615))
(assert (= (x787 x52) (ite (= x52 x1368) x1131 (x1128 x52))))
(assert (x669 274184521717934524641157099916833587214))
(assert (=> (>= 10000 x1200) (= (x1467 x1200) (x958 x1200))))
(assert (x672 x526))
(assert (x672 x1368))
(assert (=> (<= x781 10000) (= (x958 x781) (x1467 x781))))
(assert (= (x958 26959946667150639794667015087019630673637144422540572481103610249215) (x1467 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x672 x467))
(assert (x672 x663))
(assert (x669 x954))
(assert (x672 x97))
(assert (=> (>= 10000 x826) (= (x1467 x826) (x958 x826))))
(assert (= (x680 (x958 x373)) x373))
(assert (x672 x829))
(assert (x669 x646))
(assert (=> (<= x1040 10000) (= (x1467 x1040) (x958 x1040))))
(assert (x672 x1343))
(assert (= x1082 (x680 (x958 x1082))))
(assert (x672 x1203))
(assert (=> (<= x1372 10000) (= (x1467 x1372) (x958 x1372))))
(assert (x672 x199))
(assert (=> (>= 10000 x918) (= (x1467 x918) (x958 x918))))
(assert (= (x1182 x45) (ite (= x252 x45) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1388 x45))))
(assert (x669 x178))
(assert (= (x787 x765) (ite (= x1368 x765) x1131 (x1128 x765))))
(assert (x672 x648))
(assert (x672 x1147))
(assert (=> (<= x289 10000) (= (x1467 x289) (x958 x289))))
(assert (x672 x700))
(assert (x142 x1185 x1470))
(assert (= (=> (and (= x73 (= 0 x1340)) (or (and (= 0 x322) x73 (= x1349 0)) (and (= (x192 x1316) x1355) (not x73) (or (and (= x1349 0) (= x322 0) x33) (and (= 1 x1349) (= x322 x1355) (not x33))) (<= x1355 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1316 (x1081 (x958 x1044) x1025 0)) (>= x1355 0) (= (x509 1461501637330902918203684832716283019655932542975 x419) x1044) (= (x1081 (x958 x1340) (x1467 10) 0) x1025) (= (= 0 x1355) x33)))) x657) x603))
(assert (x672 x1348))
(assert (= (x605 x765) (ite (= x1500 x765) x1338 (x17 x765))))
(assert (= (x680 (x958 x921)) x921))
(assert (x672 x1356))
(assert (=> (<= x1340 10000) (= (x1467 x1340) (x958 x1340))))
(assert (=> (<= x655 10000) (= (x1467 x655) (x958 x655))))
(assert (=> (>= 10000 x760) (= (x958 x760) (x1467 x760))))
(assert (x672 x228))
(assert (= (x900 x1423) (ite (and x395 x869) (x794 x1423) (x708 x1423))))
(assert (x672 x394))
(assert (= (=> (and (= x296 2532887486) (= x860 (x1081 (x958 x897) x376 0)) (< x296 2690754053) (>= x590 0) (<= x264 1461501637330902918203684832716283019655932542975) (= x590 (x1067 x1346)) (not (= 2293535753 x296)) (not (= x296 2418364589)) (= x138 (x1440 (x958 274184521717934524641157099916833587206))) (< x296 2960351575) (<= x897 1461501637330902918203684832716283019655932542975) (= x382 x590) (= x1346 (x1081 (x958 x489) x1443 0)) (> x138 0) (<= x489 1461501637330902918203684832716283019655932542975) (<= x590 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x296 2512682246)) (not (< x296 2293535753)) (= x376 (x1081 (x958 x516) (x1467 4) 0)) (= (x1081 (x958 x264) x860 0) x1443)) x688) x935))
(assert (= (ite (and x1026 x1242 x154 x1190 (not x770) x721) (x1164 x765) (ite (and x1190 (not x154) x721 x1242 x1026) (x78 x765) (ite (and (not x1026) x721 x1190 x1242) (x787 x765) (ite (and x721 x1242 (not x1190)) (x1128 x765) (x521 x765))))) (x1550 x765)))
(assert (= (x680 (x958 x386)) x386))
(assert (x672 x16))
(assert (= x1287 x507))
(assert (x672 x34))
(assert (x672 x503))
(assert (= x204 (=> (and (= (x1081 (x958 x1016) (x1467 3) 0) x617) (= x177 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x721 (< 0 x1536)) (= (x1081 (x958 x177) x617 0) x797) (= (x1081 (x958 x1178) x797 0) x902)) (and (=> (not x721) x1198) (=> (and (= x1127 (x785 x573)) (> x1127 0) (= (x1283 (+ x1369 36)) x80) (or (and x1190 (= x1423 x988) (= x1026 (< 32 x344)) (or (and (= x1487 (x1283 (+ x1369 64))) (= x136 (x787 x1487)) (or (and (not x154) (= 64 x825)) (and (or (and (not x770) (= x825 96)) (and (= x397 (x1164 x1160)) (= (< 128 x344) x1052) (not x1052) x770 (= x1160 (x1283 (+ 128 x1369))) (= x216 (x1283 (+ x894 160))) (= x825 128))) (= (x1283 (+ 96 x1369)) x1468) (= x384 (x78 x1468)) x154 (= x1092 (x1283 (+ x894 128))) (= x770 (< 96 x344)))) (= (> x344 64) x154) x1026 (= x385 (x1283 (+ 96 x894)))) (and (not x1026) (= 32 x825))) (= (x1128 x988) x1131) (= x1368 x278)) (and (= 0 x825) (not x1190))) (= (< 0 x387) x968) (= x894 (x1283 (+ 100 x1369))) (= (x1283 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x630)) x947) (= (x1128 x1369) x344) (= (x1283 (+ 128 x80)) x278) (= x729 (x1283 (+ 68 x1369))) (= (x1283 (+ 32 x1369)) x1423) (= (x785 x256) x469) (= (x531 x1423) x813) (= x1327 x93) (= (< x344 x825) x353) x968 (= (> x344 0) x1190) x721 (or (and x353 (= (x1283 (+ x344 x278)) x257)) (not x353)) (<= x178 1461501637330902918203684832716283019655932542975) (= 0 x888) (= (x628 (- x894 x1369)) x532) (= (x1283 (+ 96 x80)) x762) (= x5 (x628 (- x532 32))) (< 0 x1536) (= (x1283 (+ 160 x425)) x256) (= (x225 x1327) x178) (= (x509 26959946667150639794667015087019630673637144422540572481103610249215 x813) x630) (= x387 (x1440 (x958 x178)))) x1529)))))
(assert (x672 x111))
(assert (= (x680 (x958 x165)) x165))
(assert (=> (<= x610 10000) (= (x1467 x610) (x958 x610))))
(assert (x669 x1389))
(assert (= (ite (= x834 x211) x381 (x605 x834)) (x1204 x834)))
(assert (=> (>= 10000 x398) (= (x958 x398) (x1467 x398))))
(assert (x672 x475))
(assert (x672 x1360))
(assert (= (ite (and x1242 x721 x154 (not x770) x1190 x1026) (x1164 x45) (ite (and x1190 (not x154) x721 x1026 x1242) (x78 x45) (ite (and x721 x1190 (not x1026) x1242) (x787 x45) (ite (and (not x1190) x721 x1242) (x1128 x45) (x521 x45))))) (x1550 x45)))
(assert (= x999 (x680 (x958 x999))))
(assert (= (ite (and x395 x869) (x794 x834) (x708 x834)) (x900 x834)))
(assert (= (x1467 2960351575) (x958 2960351575)))
(assert (= x178 (x680 (x958 x178))))
(assert (x672 x334))
(assert (x672 x178))
(assert (=> (<= x193 10000) (= (x1467 x193) (x958 x193))))
(assert (= x776 (=> (= x563 x1226) x1425)))
(assert (x672 x1261))
(assert (x672 x107))
(assert (x672 x1291))
(assert (x672 x1174))
(assert (=> (>= 10000 x1114) (= (x1467 x1114) (x958 x1114))))
(assert (=> (>= 10000 x374) (= (x958 x374) (x1467 x374))))
(assert (= (x1128 x1160) (ite (= x762 x1160) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x1160))))
(assert (= (x680 (x958 x1018)) x1018))
(assert (x669 x585))
(assert (x672 x1380))
(assert (x672 x42))
(assert (=> (<= x777 10000) (= (x958 x777) (x1467 x777))))
(assert (=> (>= 10000 x178) (= (x958 x178) (x1467 x178))))
(assert (x672 x1435))
(assert (x672 x1444))
(assert (x672 x249))
(assert (= (x1164 x467) (ite (= x1092 x467) x384 (x78 x467))))
(assert (x669 x110))
(assert (= x308 (x1080 x972)))
(assert (= (x129 x1417) (ite (and x731 x366) (x1248 x1417) (x537 x1417))))
(assert (=> (>= 10000 x118) (= (x1467 x118) (x958 x118))))
(assert (x672 x446))
(assert (x672 x486))
(assert (= (x680 (x958 x1226)) x1226))
(assert (= (x787 x966) (ite (= x966 x1368) x1131 (x1128 x966))))
(assert (x672 x444))
(assert (x669 x1023))
(assert (= (and (not x1297) x347) x1406))
(assert (= (x680 (x1467 2764855426)) 2764855426))
(assert (x672 x1327))
(assert (x672 x815))
(assert (x672 x921))
(assert (= x1445 (=> (and (not (= 2764855426 x1478)) (not (> 2690754053 x1478)) (<= x917 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1478 2690754053)) (not (= 2743102681 x1478)) (< x1478 2960351575) (= 2798343961 x1478) (= (x1440 (x958 274184521717934524641157099916833587206)) x867) (= (x1081 (x958 x1028) x320 0) x79) (= x320 (x1081 (x958 x987) (x1467 5) 0)) (<= 0 x917) (not (< x1478 2293535753)) (= x91 x917) (> x867 0) (<= x1028 1461501637330902918203684832716283019655932542975) (= (x1248 x79) x917)) (=> (and (= x1367 x298) (= x251 x646) (= x293 x893) (= x1107 x91) (= x465 x853)) x1240))))
(assert (= (x680 (x958 x810)) x810))
(assert (x672 x527))
(assert (= (x794 x765) (ite (= x765 x573) x1536 (x391 x765))))
(assert (=> (<= x976 10000) (= (x1467 x976) (x958 x976))))
(assert (x672 x316))
(assert (= (x680 (x1467 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (x672 x1110))
(assert (= (x680 (x958 x70)) x70))
(assert (x672 x655))
(assert (x672 x289))
(assert (= x706 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x152) (= x152 (x1546 x919)) (not (= 2211524764 x238)) (not (> 911411945 x238)) (<= 0 x152) (not (= 1968616202 x238)) (= (x1081 (x958 x760) x1207 0) x919) (not (= x238 1986467848)) (= (x1081 (x958 x934) (x1467 6) 0) x1207) (not (< x238 1968616202)) (= x152 x833) (> 2293535753 x238) (not (= 2061678023 x238)) (<= x760 1461501637330902918203684832716283019655932542975) (= 2258409472 x238) (< 0 x1456) (= x1456 (x1440 (x958 274184521717934524641157099916833587206)))) (=> (and (= (not (= 0 x1037)) x277) (= x1547 x298) (= x251 x792) x277 (= x1037 x833) (= x740 0)) x1141))))
(assert (= (ite (= x244 x45) x1137 (x1080 x45)) (x1463 x45)))
(assert (x672 x1082))
(assert (= (x614 x765) (ite (and x645 x366) (x1080 x765) (ite (and x366 (not x1325) x1493 (not x645)) (x1463 x765) (ite (and x366 (not x645) (not x1493)) (x1080 x765) (x1186 x765))))))
(assert (x672 x480))
(assert (= (ite (= x573 x988) x1536 (x391 x988)) (x794 x988)))
(assert (x122 x150))
(assert (x672 x955))
(assert (= x1471 x341))
(assert (= (x680 (x1467 2061678023)) 2061678023))
(assert (= (ite (= x834 x252) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1388 x834)) (x1182 x834)))
(assert (x672 x1066))
(assert (x672 x566))
(assert (x672 x1412))
(assert (= x1133 (=> (and (= (x1081 (x958 x343) (x1467 6) 0) x1267) (= (x1081 (x958 x826) x1267 0) x58) (= (x1546 x58) x1061) (>= x1061 0) (= (= 0 x1061) x184) (= (x509 1461501637330902918203684832716283019655932542975 x419) x826) (<= x1061 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (= x480 x343) (not x184)) x816) (=> (and x184 (= x1125 (< 0 x1126)) (= x1126 (x628 (- x343 1))) (not x1125)) x579)))))
(assert (= (x794 x52) (ite (= x573 x52) x1536 (x391 x52))))
(assert (= (x680 (x958 x685)) x685))
(assert (x672 x525))
(assert (x672 x1363))
(assert (x672 x551))
(assert (x672 x167))
(assert (x672 x1237))
(assert (x672 x1399))
(assert (x669 x1360))
(assert (= (x680 (x958 x591)) x591))
(assert (x672 x275))
(assert (x672 x884))
(assert (= (ite (and x395 x869) (x794 x1468) (x708 x1468)) (x900 x1468)))
(assert (= (x680 (x958 x1543)) x1543))
(assert (= (x855 x215) (ite (= x215 x779) x94 (x1172 x215))))
(assert (= (ite (= x802 x608) 0 (x1492 x608)) (x1384 x608)))
(assert (=> (<= x891 10000) (= (x1467 x891) (x958 x891))))
(assert (=> (>= 10000 x373) (= (x1467 x373) (x958 x373))))
(assert (=> (<= x1178 10000) (= (x958 x1178) (x1467 x1178))))
(assert (x669 x601))
(assert (= (x958 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1467 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x672 x683))
(assert (x122 x220))
(assert (x672 x660))
(assert (= (x787 x215) (ite (= x215 x1368) x1131 (x1128 x215))))
(assert (x672 x36))
(assert (x672 x229))
(assert (= x289 (x680 (x958 x289))))
(assert (x672 x1071))
(assert (x669 274184521717934524641157099916833587206))
(assert (= (and x1159 x1265) x530))
(assert (= (or x727 x1482) x113))
(assert (x672 x715))
(assert (x672 x1545))
(assert (= x1342 (x680 (x958 x1342))))
(assert (x672 x276))
(assert (=> (>= 10000 x1543) (= (x1467 x1543) (x958 x1543))))
(assert (x669 x420))
(assert (= (x1492 x1087) (ite (and x1197 x292) (x1217 x1087) (ite (and x1515 x1076) (x584 x1087) (x1230 x1087)))))
(assert (= (x1164 x45) (ite (= x45 x1092) x384 (x78 x45))))
(assert (x672 x128))
(assert (= x595 (x680 (x958 x595))))
(assert (x672 x1273))
(assert (x672 x880))
(assert (x672 x1448))
(assert (x672 x779))
(assert (= (x598 x467) (ite (and x1035 x742) (x6 x467) (x896 x467))))
(assert (x672 x120))
(assert (= (x680 (x958 x891)) x891))
(assert (x672 x1329))
(assert (= (ite (= x762 x966) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x966)) (x1128 x966)))
(assert (x669 x685))
(assert (= (ite (= x467 x252) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1388 x467)) (x1182 x467)))
(assert (= x69 (x680 (x958 x69))))
(assert (= (x1182 x1147) (ite (= x252 x1147) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1388 x1147))))
(assert (x672 x1464))
(assert (x672 x769))
(assert (x669 x1367))
(assert (x1179 x150 x1050))
(assert (x672 x1123))
(assert (x122 1461501637330902918203684832716283019655932542975))
(assert (= (ite (= x215 x1412) x187 (x1182 x215)) (x1172 x215)))
(assert (=> (<= x481 10000) (= (x958 x481) (x1467 x481))))
(assert (= (ite (= x1468 x1368) x1131 (x1128 x1468)) (x787 x1468)))
(assert (= (ite (= x762 x215) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x215)) (x1128 x215)))
(assert (x672 x682))
(assert (= (x680 (x1467 2211524764)) 2211524764))
(assert (x672 x1225))
(assert (= (x900 x211) (ite (and x869 x395) (x794 x211) (x708 x211))))
(assert (= (ite (= x211 x1423) x381 (x605 x1423)) (x1204 x1423)))
(assert (x672 x753))
(assert (x672 x897))
(assert (= (and x329 x181) x369))
(assert (x669 x69))
(assert (x672 x1437))
(assert (x672 x969))
(assert (= x727 (or (and x1250 x184) (and (not x505) x938) (and x1405 (not x38)))))
(assert (= (ite (= x972 x16) x308 (x46 x16)) (x1080 x16)))
(assert (x122 x1185))
(assert (x672 x891))
(assert (= (x680 (x958 x301)) x301))
(assert (= (x1463 x52) (ite (= x52 x244) x1137 (x1080 x52))))
(assert (= (x626 x472) (ite (and (not x1036) x1010 x1527 x1526 x712 x901) (x332 x472) (ite (and x1526 x901 (not x1527) x712 x1010) (x855 x472) (ite (and (not x712) x901 x1010 x1526) (x1172 x472) (ite (and (not x901) x1010 x1526) (x1182 x472) (x1118 x472)))))))
(assert (= x764 (x680 (x958 x764))))
(assert (x672 x1479))
(assert (= 0 (x1251 x472)))
(assert (= (ite (and x1197 x292) (x1217 x608) (ite (and x1515 x1076) (x584 x608) (x1230 x608))) (x1492 x608)))
(assert (x669 x1165))
(assert (=> (<= x508 10000) (= (x958 x508) (x1467 x508))))
(assert (x1175 x813 x56))
(assert (x672 x790))
(assert (=> (>= 10000 x1018) (= (x1467 x1018) (x958 x1018))))
(assert (x669 x497))
(assert (x672 x1051))
(assert (x669 x1114))
(assert (=> (>= 10000 x264) (= (x958 x264) (x1467 x264))))
(assert (= (x522 x1075) (ite (and x721 x1242 (not x353)) (x1550 x1075) (x535 x1075))))
(assert (= (ite (= x1556 x244) x1137 (x1080 x1556)) (x1463 x1556)))
(assert (x672 x1542))
(assert (x672 x1308))
(assert (x672 x963))
(assert (x669 x548))
(assert (x669 x503))
(assert (x672 x472))
(assert (= (ite (and x869 x395) (x794 x45) (x708 x45)) (x900 x45)))
(assert (x672 x1337))
(assert (x672 x112))
(assert (=> (<= x764 10000) (= (x1467 x764) (x958 x764))))
(assert (= (ite (= x972 x1160) x308 (x46 x1160)) (x1080 x1160)))
(assert (= (x680 (x958 x489)) x489))
(assert (x672 x250))
(assert (x672 x1061))
(assert (=> (>= 10000 x1553) (= (x958 x1553) (x1467 x1553))))
(assert (x672 x833))
(assert (x672 x1138))
(assert (x672 x293))
(assert (x672 x116))
(assert (x672 x1556))
(assert (x672 x375))
(assert (x672 x691))
(assert (= (x614 x211) (ite (and x645 x366) (x1080 x211) (ite (and (not x1325) x366 x1493 (not x645)) (x1463 x211) (ite (and (not x1493) x366 (not x645)) (x1080 x211) (x1186 x211))))))
(assert (= x1272 (x680 (x958 x1272))))
(assert (x672 x262))
(assert (= (x1251 x1160) 0))
(assert (x669 x800))
(assert (=> (<= x648 10000) (= (x958 x648) (x1467 x648))))
(assert (x669 x820))
(assert (x672 x1137))
(assert (x672 x1024))
(assert (= x438 x1320))
(assert (= x760 (x680 (x958 x760))))
(assert (x672 x1115))
(assert (= (x680 (x958 x548)) x548))
(assert (x672 x549))
(assert (x672 x238))
(assert (= (ite (and x154 x1242 x1190 x721 x1026 (not x770)) (x1164 x472) (ite (and x721 x1190 x1242 x1026 (not x154)) (x78 x472) (ite (and x1190 (not x1026) x721 x1242) (x787 x472) (ite (and x1242 (not x1190) x721) (x1128 x472) (x521 x472))))) (x1550 x472)))
(assert (x672 x1279))
(assert (x669 x1547))
(assert (x672 x699))
(assert (x672 x523))
(assert (x672 x136))
(assert (= (x680 (x1467 604800)) 604800))
(assert (x669 x781))
(assert (=> (<= x1363 10000) (= (x958 x1363) (x1467 x1363))))
(assert (= x321 (=> (= x1274 (< 0 x609)) (and (=> (not x1274) x767) (=> x1274 x28)))))
(assert (x672 x126))
(assert (=> (<= x529 10000) (= (x958 x529) (x1467 x529))))
(assert (x672 x118))
(assert (=> (<= x370 10000) (= (x1467 x370) (x958 x370))))
(assert (x669 x1153))
(assert (=> (>= 10000 x213) (= (x958 x213) (x1467 x213))))
(assert (x672 x1100))
(assert (x672 x647))
(assert (= x1141 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x666) (<= x792 1461501637330902918203684832716283019655932542975) (not (< x683 2690754053)) (not (= x683 2764855426)) (not (= x683 2690754053)) (> x1116 0) (= (x1440 (x958 274184521717934524641157099916833587206)) x1116) (not (= 2743102681 x683)) (= (x1248 x359) x666) (= x10 (x1081 (x958 x1547) (x1467 5) 0)) (not (< x683 2293535753)) (= (x1081 (x958 x792) x10 0) x359) (= x683 2798343961) (>= x666 0) (= x360 x666) (< x683 2960351575)) (=> (and (= x251 x420) (= x1483 x360) (= x786 x298) (= x853 x165)) x1540))))
(assert (x672 x1213))
(assert (x672 x846))
(assert (= (x680 (x958 x336)) x336))
(assert (= (x958 2258409472) (x1467 2258409472)))
(assert (= (=> (and (= x173 (< 0 x274)) (= (x628 (- x1165 1)) x274)) (and (=> (not x173) x1354) (=> x173 x1489))) x562))
(assert (x672 x1037))
(assert (x672 x248))
(assert (x672 x1244))
(assert (= (x787 x834) (ite (= x1368 x834) x1131 (x1128 x834))))
(assert (=> (>= 10000 x681) (= (x1467 x681) (x958 x681))))
(assert (not x629))
(assert (x672 x1355))
(assert (= (x680 (x958 x1389)) x1389))
(assert (x672 x932))
(assert (x669 x107))
(assert (x672 x1528))
(assert (x669 x343))
(assert (=> (>= 10000 x1030) (= (x1467 x1030) (x958 x1030))))
(assert (x672 x1391))
(assert (= (x605 x45) (ite (= x45 x1500) x1338 (x17 x45))))
(assert (= (ite (and x869 x395) (x794 x573) (x708 x573)) (x900 x573)))
(assert (=> (>= 10000 x335) (= (x1467 x335) (x958 x335))))
(assert (= x1154 x406))
(assert (= x310 (=> (and (= x119 x305) (not (= x284 2690754053)) (= x305 (x1475 x1170)) (not (= 2764855426 x284)) (<= x305 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x284 2798343961) (< x284 2960351575) (< 0 x1071) (not (> 2690754053 x284)) (>= 1461501637330902918203684832716283019655932542975 x431) (not (= 2743102681 x284)) (>= x305 0) (= x231 (x1081 (x958 x1100) (x1467 5) 0)) (= x1170 (x1081 (x958 x431) x231 0)) (not (< x284 2293535753)) (= x1071 (x1440 (x958 274184521717934524641157099916833587206)))) (=> (and (= x119 x1132) (= x853 x1192) (= x1187 x298) (= x251 x815)) x350))))
(assert (x672 x44))
(assert (x1179 x1253 x220))
(assert (x672 x1418))
(assert (x672 x899))
(assert (= x1381 (x680 (x958 x1381))))
(assert (x672 x1288))
(assert (=> (<= x778 10000) (= (x1467 x778) (x958 x778))))
(assert (= (x1251 x16) 0))
(assert (x672 x550))
(assert (x672 x1050))
(assert (x672 x780))
(assert (x669 x70))
(assert (x672 x856))
(assert (x672 x177))
(assert (= x1434 x1473))
(assert (= (x1128 x1556) (ite (= x762 x1556) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x1556))))
(assert (= x1372 (x680 (x958 x1372))))
(assert (x669 x591))
(assert (x122 x1284))
(assert (x669 x1272))
(assert (= (ite (= x972 x467) x308 (x46 x467)) (x1080 x467)))
(assert (= (x1134 x484) (ite (and x848 x821) (x22 x484) (ite (and x872 x848 (not x821)) (x452 x484) (x885 x484)))))
(assert (x672 x992))
(assert (= (x1467 2061678023) (x958 2061678023)))
(assert (x669 x1082))
(assert (= (ite (= x1368 x1160) x1131 (x1128 x1160)) (x787 x1160)))
(assert (x669 x609))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1502) (not (= 2690754053 x11)) (= x1502 (x1475 x1417)) (<= x1005 1461501637330902918203684832716283019655932542975) (= x643 (x1081 (x958 x410) (x1467 5) 0)) (not (> 2690754053 x11)) (= x868 (x1440 (x958 274184521717934524641157099916833587206))) (not (< x11 2293535753)) (< x11 2960351575) (= x549 x1502) (< 0 x868) (not (= x11 2764855426)) (= 2798343961 x11) (<= 0 x1502) (not (= 2743102681 x11)) (= (x1081 (x958 x1005) x643 0) x1417)) (=> (and (= x1083 x298) (= x1176 x251) (= x168 x853) (= x893 x101) (= x789 x549)) x263)) x877))
(assert (x672 x404))
(assert (= (x1204 x988) (ite (= x211 x988) x381 (x605 x988))))
(assert (x669 x897))
(assert (= (ite (and (not x353) x721 x1242) (x1550 x472) (x535 x472)) (x522 x472)))
(assert (x672 x1043))
(assert (x672 x387))
(assert (= (x1251 x256) 0))
(assert (= x1154 x569))
(assert (x672 x627))
(assert (= (x958 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1467 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x680 (x958 x1040)) x1040))
(assert (x672 x976))
(assert (= (x680 (x958 x1167)) x1167))
(assert (x672 x818))
(assert (= (x900 x1487) (ite (and x395 x869) (x794 x1487) (x708 x1487))))
(assert (x672 x1457))
(assert (= (x680 (x958 x786)) x786))
(assert (x672 x170))
(assert (x672 x621))
(assert (x669 x508))
(assert (x672 x420))
(assert (x672 x789))
(assert (= (x900 x1556) (ite (and x395 x869) (x794 x1556) (x708 x1556))))
(assert (=> (<= x810 10000) (= (x1467 x810) (x958 x810))))
(assert (x672 x1496))
(assert (= (x522 x834) (ite (and x1242 x721 (not x353)) (x1550 x834) (x535 x834))))
(assert (x672 x313))
(assert (x672 x470))
(assert (x672 x916))
(assert (x669 x289))
(assert (= (=> (and (= (x1336 x1075) x518) (or (and (= x923 x1147) (= x1075 x278) (= (x1283 (+ 96 x894)) x120) (= (x1283 (+ x1279 63)) x558) (= (x1283 (+ x340 x278)) x923) (= x340 (x509 115792089237316195423570985008687907853269984665640564039457584007913129639904 x558)) (not x658)) (and (= x1147 x278) x658 (= x1075 96))) (not (= 0 x580)) (= x658 (= x1279 0)) (= x997 (x1552 (x958 274184521717934524641157099916833587206))) (or (and (= x147 (not x799)) (= x424 x1479) (= (x1283 (+ x1075 32)) x52) (= x462 (x1336 x1075)) (not (or (and (< x462 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x462))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x462))) (< 0 x424) (= (ite x147 1 0) x1479) (= (x1336 x52) x424) x1350 (= x799 (= x424 0))) (not x1350)) (= x54 (x50 (x958 x178))) (= (> x518 0) x1350) (= (< (x1552 (x958 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x92) x92) x883) x265))
(assert (= x180 (x680 (x958 x180))))
(assert (= (x958 2418364589) (x1467 2418364589)))
(assert (x672 x1108))
(assert (= (or (and x928 x240) x637) x848))
(assert (= (x1467 115792089237316195423570985008687907853269984665640564039457) (x958 115792089237316195423570985008687907853269984665640564039457)))
(assert (= (=> (and (<= x941 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2532887486 x170) (<= x301 1461501637330902918203684832716283019655932542975) (= x914 (x1081 (x958 x764) x1256 0)) (not (> 2293535753 x170)) (not (= x170 2512682246)) (< x170 2960351575) (= (x1081 (x958 x497) (x1467 4) 0) x500) (= (x1440 (x958 274184521717934524641157099916833587206)) x733) (>= 1461501637330902918203684832716283019655932542975 x764) (= (x1081 (x958 x301) x914 0) x443) (<= x370 1461501637330902918203684832716283019655932542975) (not (= 2418364589 x170)) (> 2690754053 x170) (= (x1081 (x958 x370) x500 0) x1256) (> x733 0) (not (= x170 2293535753)) (= x1066 x941) (<= 0 x941) (= x941 (x1067 x443))) (=> (and (= (x1283 (+ 160 x746)) x573) (= x1233 (x1283 (+ x513 x93))) (= 0 x63) (= x1174 (x1283 (+ x459 160))) (not (> 1 x1449)) (< 0 x196) (= x328 (<= x334 x276)) (= x1237 87118632) (not (or (> x538 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x538 128) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x538))))) (= (= 0 x1536) x395) (= x97 x1165) (= (and x195 x328) x258) (= x1016 x924) (< x1237 2293535753) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1450) (= (x628 (- x600 4)) x538) (= (x1440 (x958 274184521717934524641157099916833587206)) x196) (= x589 x463) (< x1237 911411945) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x600)) (> x1450 x1016) x258 (= (x1283 (+ x1488 x573)) x1464) (or (and (= x266 (< 1 x1449)) (not (> x1123 1)) x863 (or (not x266) (and (= (x391 128) x161) x266 (= (x509 1461501637330902918203684832716283019655932542975 x805) x1291) (= x1310 (x391 192)) (or (not x260) (and (= (x509 1461501637330902918203684832716283019655932542975 x1098) x32) (not x545) (= (x391 224) x916) (> x1495 2) (> x845 0) (= x1098 (x391 160)) (not (= x710 x32)) (= (x391 128) x845) (= (x509 1461501637330902918203684832716283019655932542975 x916) x710) x260 (= (< 3 x1449) x545) (= x1495 (x391 128)))) (> x161 0) (= x736 (x391 128)) (= x1418 (x509 1461501637330902918203684832716283019655932542975 x1310)) (= (x391 160) x805) (> x736 1) (= (> x1449 2) x260) (not (= x1418 x1291)))) (not (> 1 x1449)) (= (x628 (- x1449 1)) x1123)) (not x863)) (not (> x1536 18446744073709551615)) (= x116 x419) (<= 0 x463) (= x419 x1534) (= x863 (> x1380 0)) (= x1066 x334) (> 468353030 x1237) (= x1380 (x628 (- x1449 1))) (< 131 x600) (not (> x1233 x600)) (= (mod (* 32 x1536) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x513) (= x426 x63) (= x1449 (x391 128)) (<= 0 x769) (>= x1450 0) (= x589 x795) (= x1324 x470) (= (x1283 (+ x746 32)) x425) (>= 1461501637330902918203684832716283019655932542975 x419) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x600) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x841)) (and (= (<= x600 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x841 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x841 x600))) (= (mod (* 32 x1536) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x459) (<= x697 1461501637330902918203684832716283019655932542975) (= (x1283 (+ x1324 4)) x1296) (= x769 x1178) (or x395 (and (not x395) (= (x1283 (+ 160 x425)) x753) (= x441 (mod (* x1536 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= x697 0) (not (< 18446744073709551615 x470)) (not (= 69947311 x1237)) (<= x769 1461501637330902918203684832716283019655932542975) (= x1536 (x225 x1296)) (= x1016 x664) (not (< x600 4)) (= x746 (mod (* x1536 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1488 (x1283 (+ x459 32))) (= x1307 128) (= x841 (x1283 (+ x1324 35))) (<= x463 1461501637330902918203684832716283019655932542975) (= (x1283 (+ 36 x1324)) x93) (not (< x1016 x1165)) (= x1165 x437) (= x1437 x1079)) x1541)) x415))
(assert (x672 x710))
(assert (= (ite (= x966 x244) x1137 (x1080 x966)) (x1463 x966)))
(assert (x669 x1543))
(assert (x669 x1194))
(assert (= x987 (x680 (x958 x987))))
(assert (x672 x590))
(assert (x669 x1018))
(assert (= (x680 (x958 x601)) x601))
(assert (= (ite (and x645 x366) (x1080 x1487) (ite (and (not x1325) x1493 (not x645) x366) (x1463 x1487) (ite (and (not x1493) (not x645) x366) (x1080 x1487) (x1186 x1487)))) (x614 x1487)))
(assert (= (x680 (x958 x398)) x398))
(assert (x672 x254))
(assert (x672 x1347))
(assert (x672 x610))
(assert (=> (>= 10000 x107) (= (x958 x107) (x1467 x107))))
(assert (x672 x1403))
(assert (x672 x1229))
(assert (= (x680 (x958 x552)) x552))
(assert (x672 x1101))
(assert (= (x680 (x958 x100)) x100))
(assert (x672 x868))
(assert (=> (>= 10000 x293) (= (x1467 x293) (x958 x293))))
(assert (x672 x324))
(assert (x669 x1028))
(assert (=> (>= 10000 x846) (= (x1467 x846) (x958 x846))))
(assert (x672 x91))
(assert (=> (<= x165 10000) (= (x958 x165) (x1467 x165))))
(assert (x672 x1092))
(assert (x672 x1098))
(assert (=> (<= x516 10000) (= (x1467 x516) (x958 x516))))
(assert (x669 x806))
(assert (x142 x1098 x909))
(assert (= (ite (= x762 x467) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x467)) (x1128 x467)))
(assert (x672 x1023))
(assert (x669 x274))
(assert (= (x1128 x988) (ite (= x988 x762) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x988))))
(assert (x669 x1553))
(assert (=> (>= 10000 x497) (= (x958 x497) (x1467 x497))))
(assert (=> (<= x934 10000) (= (x958 x934) (x1467 x934))))
(assert (= (ite (and x869 x395) (x794 x316) (x708 x316)) (x900 x316)))
(assert (x669 x786))
(assert (x672 x1483))
(assert (x672 x1272))
(assert (= (ite (= x211 x1556) x381 (x605 x1556)) (x1204 x1556)))
(assert (= x1258 (x680 (x958 x1258))))
(assert (x672 x246))
(assert (x672 x918))
(assert (= (ite (= x244 x211) x1137 (x1080 x211)) (x1463 x211)))
(assert (= x160 x985))
(assert (x672 x152))
(assert (=> (<= x921 10000) (= (x1467 x921) (x958 x921))))
(assert (x669 x1178))
(assert (=> (<= x585 10000) (= (x958 x585) (x1467 x585))))
(assert (x672 x1409))
(assert (x669 x445))
(assert (x672 x1040))
(assert (= (x605 x202) (ite (= x202 x1500) x1338 (x17 x202))))
(assert (x669 x957))
(assert (= (x680 (x958 x610)) x610))
(assert (=> (>= 10000 x1525) (= (x958 x1525) (x1467 x1525))))
(assert (= (ite (= x1368 x45) x1131 (x1128 x45)) (x787 x45)))
(assert (x669 x101))
(assert (x672 x1328))
(assert (=> (>= 10000 x1187) (= (x958 x1187) (x1467 x1187))))
(assert (x672 x886))
(assert (x672 x492))
(assert (x672 x29))
(assert (x672 x559))
(assert (x672 x825))
(assert (= (x680 (x1467 2512682246)) 2512682246))
(assert (x669 x394))
(assert (=> (>= 10000 x1015) (= (x1467 x1015) (x958 x1015))))
(assert (x672 x385))
(assert (= (x680 (x958 x1083)) x1083))
(assert (x672 x356))
(assert (= x788 x65))
(assert (= (x794 x966) (ite (= x966 x573) x1536 (x391 x966))))
(assert (= (x598 x1556) (ite (and x742 x1035) (x6 x1556) (x896 x1556))))
(assert (=> (>= 10000 x1192) (= (x1467 x1192) (x958 x1192))))
(assert (= (ite (= x834 x1500) x1338 (x17 x834)) (x605 x834)))
(assert (=> (<= x1028 10000) (= (x1467 x1028) (x958 x1028))))
(assert (= x609 (x680 (x958 x609))))
(assert (x672 x1280))
(assert (x672 x765))
(assert (x672 x1319))
(assert (=> (<= x1258 10000) (= (x1467 x1258) (x958 x1258))))
(assert (x122 x444))
(assert (x672 x548))
(assert (x672 x344))
(assert (x672 x429))
(assert (= (x1251 x244) 0))
(assert (= (ite (= x215 x211) x381 (x605 x215)) (x1204 x215)))
(assert (= (ite (= x211 x256) x381 (x605 x256)) (x1204 x256)))
(assert (= (=> (= x292 (> x609 x1016)) (and (=> (not x292) x1113) (=> (and (= x831 x1369) x292) x2))) x512))
(assert (x672 x11))
(assert (x672 x1178))
(assert (x672 x1006))
(assert (= (ite (and x645 x366) (x1080 x1160) (ite (and x366 x1493 (not x645) (not x1325)) (x1463 x1160) (ite (and (not x645) x366 (not x1493)) (x1080 x1160) (x1186 x1160)))) (x614 x1160)))
(assert (x672 x397))
(assert (x669 x918))
(assert (=> (<= x503 10000) (= (x958 x503) (x1467 x503))))
(assert (x672 x370))
(assert (x672 x1387))
(assert (= (x78 x215) (ite (= x215 x385) x136 (x787 x215))))
(assert (x672 x373))
(assert (x672 x197))
(assert (=> (>= 10000 x578) (= (x958 x578) (x1467 x578))))
(assert (x672 x239))
(assert (= (ite (= x472 x1500) x1338 (x17 x472)) (x605 x472)))
(assert (= x788 x869))
(assert (x672 x1157))
(assert (= (=> (and (= (x1081 (x958 x274) (x1467 7) 0) x673) (= (x1081 (x958 x481) x673 0) x953) (= x1357 (x811 x39)) (= (= 0 x1357) x1426) (>= x1357 0) (<= x1357 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1081 (x958 x1178) x953 0) x39) (= (x509 1461501637330902918203684832716283019655932542975 x419) x481)) (and (=> (and (not x1426) (= x563 x274)) x776) (=> (and (= (x628 (- x274 1)) x973) (= x837 (< 0 x973)) x1426 (not x837)) x1354))) x1489))
(assert (= (x855 x472) (ite (= x779 x472) x94 (x1172 x472))))
(assert (x672 x813))
(assert (= (ite (= x1075 x211) x381 (x605 x1075)) (x1204 x1075)))
(assert (= (x680 (x958 x1043)) x1043))
(assert (x672 x223))
(assert (= x938 (and x524 x689)))
(assert (= (=> (and (= (x1081 (x958 x1178) x1161 0) x131) (>= x1450 0) (= x771 (x1081 (x958 x1165) (x1467 7) 0)) (= x394 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x240 (< 0 x1459)) (= (x811 x131) x1459) (not (< x1450 x97)) (= x1161 (x1081 (x958 x394) x771 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1450) (<= 0 x1459) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1459)) (and (=> (and (= x1517 (x1081 (x958 x1178) x487 0)) (= (x1081 (x958 x503) x1420 0) x487) (= x1206 (x183 x1517)) (<= 0 x1206) (<= x1206 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x509 1461501637330902918203684832716283019655932542975 x419) x503) (= x1420 (x1081 (x958 x1165) (x1467 9) 0)) (= 0 x421) x240 (= x1206 x1209)) x1077) (=> (not x240) x8))) x1370))
(assert (= (or (and x1010 (not x1526)) x926 (and x1242 (not x721))) x109))
(assert (x672 x30))
(assert (x672 x600))
(assert (= x816 (=> (= x480 x508) x55)))
(assert (=> (<= x1458 10000) (= (x1467 x1458) (x958 x1458))))
(assert (= (x680 (x958 x107)) x107))
(assert (= (ite (and x848 x821) (x22 x1531) (ite (and x848 x872 (not x821)) (x452 x1531) (x885 x1531))) (x1134 x1531)))
(assert (= (x958 2690754053) (x1467 2690754053)))
(assert (= (ite (= x972 x52) x308 (x46 x52)) (x1080 x52)))
(assert (x672 x1362))
(assert (= (x522 x1556) (ite (and x721 x1242 (not x353)) (x1550 x1556) (x535 x1556))))
(assert (= (x680 (x958 x578)) x578))
(assert (= (x680 (x958 x815)) x815))
(assert (= (ite (and x395 x869) (x794 x988) (x708 x988)) (x900 x988)))
(assert (= (x1251 224) 0))
(assert (=> (>= 10000 x179) (= (x958 x179) (x1467 x179))))
(assert (x672 x502))
(assert (x672 x1194))
(assert (x672 x568))
(assert (= (ite (= x1423 x1500) x1338 (x17 x1423)) (x605 x1423)))
(assert (= (ite (= x966 x972) x308 (x46 x966)) (x1080 x966)))
(assert (= x974 (or (and x920 x870) x633)))
(assert (x672 x425))
(assert (= (x1467 274184521717934524641157099916833587206) (x958 274184521717934524641157099916833587206)))
(assert (x672 x224))
(assert (x672 x578))
(assert (= x1425 (=> (and (= (= x1226 0) x104) (or (and (>= x899 0) (= x1379 (x1081 (x958 x1178) x719 0)) (= x193 (x509 1461501637330902918203684832716283019655932542975 x419)) (= (x1081 (x958 x1226) (x1467 9) 0) x287) (not x104) (= (x183 x1379) x899) (= (x1081 (x958 x193) x287 0) x719) (= x899 x1209) (<= x899 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x421 1)) (and (= x421 0) (= 0 x1209) x104))) x1077)))
(assert (= x897 (x680 (x958 x897))))
(assert (= 2258409472 (x680 (x1467 2258409472))))
(assert (x669 x1363))
(assert (x672 x1284))
(assert (x672 x286))
(assert (x672 x835))
(assert (x672 x1465))
(assert (= (x164 x472) (ite (and x1526 (not x1331) x1010) (x626 x472) (x1021 x472))))
(assert (= (and x842 x803) x1027))
(assert (=> (<= x1102 10000) (= (x1467 x1102) (x958 x1102))))
(assert (= x842 (and x717 x530)))
(assert (x672 x601))
(assert (x672 x997))
(assert (= x374 (x680 (x958 x374))))
(assert (= (ite (and x366 x731) (x676 x1069) (x1111 x1069)) (x103 x1069)))
(assert (x672 x408))
(assert (= (x78 x1160) (ite (= x385 x1160) x136 (x787 x1160))))
(assert (x672 x94))
(assert (= x579 (=> (= x508 0) x55)))
(assert (=> (>= 10000 x1288) (= (x1467 x1288) (x958 x1288))))
(assert (=> (<= x979 10000) (= (x1467 x979) (x958 x979))))
(assert (= (ite (= x112 x472) x851 (x855 x472)) (x332 x472)))
(assert (x672 x805))
(assert (x672 x213))
(assert (x669 x118))
(assert (=> (<= x957 10000) (= (x1467 x957) (x958 x957))))
(assert (x672 x1132))
(assert (x672 x1338))
(assert (=> (<= x343 10000) (= (x1467 x343) (x958 x343))))
(assert (x672 x1296))
(assert (= (x787 x467) (ite (= x1368 x467) x1131 (x1128 x467))))
(assert (x672 x459))
(assert (x672 x973))
(assert (x669 x1048))
(assert (x672 x390))
(assert (= (ite (= x244 x16) x1137 (x1080 x16)) (x1463 x16)))
(assert (x672 x23))
(assert (= (x103 x1119) (ite (and x731 x366) (x676 x1119) (x1111 x1119))))
(assert (= (x680 (x958 x293)) x293))
(assert (x672 x481))
(assert (x672 x18))
(assert (= x624 x160))
(assert (= (ite (= x573 x316) x1536 (x391 x316)) (x794 x316)))
(assert (x672 x1534))
(assert (=> (>= 10000 x1165) (= (x1467 x1165) (x958 x1165))))
(assert (x672 x32))
(assert (= (ite (= x573 x16) x1536 (x391 x16)) (x794 x16)))
(assert (= (ite (= x834 x1092) x384 (x78 x834)) (x1164 x834)))
(assert (= (=> (and (= x524 (= 0 x1508)) (>= x1508 0) (= (x509 1461501637330902918203684832716283019655932542975 x419) x356) (<= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1081 (x958 x1165) (x1467 6) 0) x64) (= x572 (x1081 (x958 x356) x64 0)) (= (x1546 x572) x1508)) (and (=> (and (= x480 x1165) (not x524)) x816) (=> x524 x209))) x832))
(assert (= (ite (= x972 x1075) x308 (x46 x1075)) (x1080 x1075)))
(assert (x669 x1043))
(assert (= (ite (= x467 x244) x1137 (x1080 x467)) (x1463 x467)))
(assert (= 0 (x1251 x1075)))
(assert (= (ite (= x762 x45) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x45)) (x1128 x45)))
(assert (= (x900 x215) (ite (and x395 x869) (x794 x215) (x708 x215))))
(assert (x672 x764))
(assert (x672 x1116))
(assert (= (or x1195 x1271) x1055))
(assert (x672 x1183))
(assert (x672 x381))
(assert (x672 x76))
(assert (= (x614 x988) (ite (and x366 x645) (x1080 x988) (ite (and x366 (not x1325) x1493 (not x645)) (x1463 x988) (ite (and (not x645) (not x1493) x366) (x1080 x988) (x1186 x988))))))
(assert (x672 x784))
(assert (x672 x302))
(assert (= (x332 x834) (ite (= x834 x112) x851 (x855 x834))))
(assert (=> (<= x925 10000) (= (x1467 x925) (x958 x925))))
(assert (= (x605 x988) (ite (= x1500 x988) x1338 (x17 x988))))
(assert (x672 x553))
(assert (x669 x410))
(assert (x672 x1226))
(assert (= (and x1197 (not x292)) x920))
(assert (x672 x1044))
(assert (x672 x1189))
(assert (= x1096 (and x1526 x1010)))
(assert (x669 x760))
(assert (= (x626 x765) (ite (and x1010 x1526 x712 (not x1036) x1527 x901) (x332 x765) (ite (and x712 x901 x1010 x1526 (not x1527)) (x855 x765) (ite (and x1526 x1010 (not x712) x901) (x1172 x765) (ite (and x1010 x1526 (not x901)) (x1182 x765) (x1118 x765)))))))
(assert (= (x794 x467) (ite (= x467 x573) x1536 (x391 x467))))
(assert (x672 x489))
(assert (x669 x1200))
(assert (=> (>= 10000 x806) (= (x958 x806) (x1467 x806))))
(assert (x672 x40))
(assert (x669 x1342))
(assert (= x430 (=> (and (= x930 (x1081 (x958 x578) x951 0)) (not (= 69947311 x527)) (not (= x527 87118632)) (>= 1461501637330902918203684832716283019655932542975 x578) (= x527 142201243) (= x1501 (x1081 (x958 x1064) (x1467 9) 0)) (< x527 911411945) (= (x1081 (x958 x595) x1501 0) x951) (<= x595 1461501637330902918203684832716283019655932542975) (> x313 0) (> 2293535753 x527) (> 468353030 x527) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x749) (>= x749 0) (= x749 x228) (= x749 (x183 x930)) (= x313 (x1440 (x958 274184521717934524641157099916833587206)))) (=> (and (= x1385 (< 0 x1542)) (= x228 x1542) (= 0 x559) (= x298 x987) (= x1334 (and x68 x1385)) (= x1028 x251)) x1445))))
(assert (=> (>= 10000 x1083) (= (x958 x1083) (x1467 x1083))))
(assert (x669 x1100))
(assert (= (x680 (x958 x957)) x957))
(assert (= (x1251 x1468) 0))
(assert (= (x1467 1000000000000000000) (x958 1000000000000000000)))
(assert (x672 x1500))
(assert (= (x1080 x1423) (ite (= x1423 x972) x308 (x46 x1423))))
(assert (x672 x456))
(assert (= (x855 x834) (ite (= x779 x834) x94 (x1172 x834))))
(assert (x672 x508))
(assert (x672 x1488))
(assert (= 911411945 (x680 (x1467 911411945))))
(assert (x672 x1478))
(assert (= 142201243 (x680 (x1467 142201243))))
(assert (= (x900 x1160) (ite (and x395 x869) (x794 x1160) (x708 x1160))))
(assert (x122 x558))
(assert (x672 x284))
(assert (x672 x43))
(assert (= (x680 (x958 x431)) x431))
(assert (= (ite (and x821 x848) (x584 x608) (ite (and x848 (not x821) x872) (x584 x608) (x1093 x608))) (x1217 x608)))
(assert (x672 x1102))
(assert (x672 x1056))
(assert (x672 x497))
(assert (= (x680 (x958 x508)) x508))
(assert (= (x680 (x950 x1358 1)) (+ 1 (x680 x1358))))
(assert (x672 x786))
(assert (x672 x115))
(assert (x672 x892))
(assert (=> (<= x465 10000) (= (x958 x465) (x1467 x465))))
(assert (= (=> (and (= (= x1387 0) x388) (or (and (= x1520 (x1283 (+ x1211 96))) (not x388) (= x765 x1056)) (and (= 96 x765) x388)) (= x235 (x1078 (x958 x1360))) (not x471) (= (< 0 x661) x755) (= (x108 x765) x661) (or (not x755) (and (= (x1283 (+ 32 x765)) x472) (not (or (and (< x218 32) (= true (<= x218 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x218))) (= x1210 (not x1171)) (= x348 x1457) (= x1171 (= 0 x348)) x755 (= (x108 x765) x218) (= (x108 x472) x348) (> x348 0) (= (ite x1210 1 0) x1457))) (= (< (x1339 (x958 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x613) x613 (= (< 2 x1536) x471) (not (= x713 0))) x1198) x1507))
(assert (= (ite (= x1468 x972) x308 (x46 x1468)) (x1080 x1468)))
(assert (= (x1467 1968616202) (x958 1968616202)))
(assert (= (x1164 x472) (ite (= x1092 x472) x384 (x78 x472))))
(assert (= (ite (= x834 x244) x1137 (x1080 x834)) (x1463 x834)))
(assert (=> (>= 10000 x69) (= (x1467 x69) (x958 x69))))
(assert (x669 x925))
(assert (= (ite (= x244 x765) x1137 (x1080 x765)) (x1463 x765)))
(assert (x672 x1131))
(assert (x672 x237))
(assert (x122 x813))
(assert (= x777 (x680 (x958 x777))))
(assert (= x367 (=> (and (not (> x609 x1450)) (= (x103 x993) x128) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x128) (>= x1450 0) (= (x1081 (x958 x609) (x1467 6) 0) x1335) (<= x1450 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x128 0) (= x248 (x509 1461501637330902918203684832716283019655932542975 x419)) (= (= x128 0) x622) (= (x1081 (x958 x248) x1335 0) x993)) (and (=> (and (= (x509 1461501637330902918203684832716283019655932542975 x419) x1272) (= x798 (x1081 (x958 x1272) x651 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x699) (>= x699 0) (= x1349 0) (= x699 x322) (not x622) (= x699 (x192 x798)) (= (x1081 (x958 x609) (x1467 10) 0) x651)) x657) (=> x622 x413)))))
(assert (= (x680 (x1467 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= (x958 274184521717934524641157099916833587218) (x1467 274184521717934524641157099916833587218)))
(assert (x672 x172))
(assert (= (=> (and (or (and (= x945 (< x652 x1016)) (= x1024 (x509 1461501637330902918203684832716283019655932542975 x419)) (= (x1283 (+ x1165 1)) x652) (= (x1081 (x958 x1165) (x1467 3) 0) x319) (= x1166 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x61 (x1081 (x958 x1024) x319 0)) (= (x1081 (x958 x1178) x61 0) x802) (or (not x945) (and (= x186 (x1081 (x958 x1178) x124 0)) (= x386 (x509 1461501637330902918203684832716283019655932542975 x419)) (not x812) (= x812 (< x682 x664)) x945 (= x124 (x1081 (x958 x386) x1264 0)) (= x682 (x1283 (+ 2 x1165))) (= x879 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x1264 (x1081 (x958 x652) (x1467 3) 0)))) x123) (not x123)) (= (> x1016 x1165) x123)) x204) x2))
(assert (x672 x398))
(assert (x672 x296))
(assert (= (x680 (x958 x1044)) x1044))
(assert (= (x680 (x958 x1547)) x1547))
(assert (= (x522 x467) (ite (and x1242 (not x353) x721) (x1550 x467) (x535 x467))))
(assert (x672 x1342))
(assert (x672 x165))
(assert (x672 x819))
(assert (= x1048 (x680 (x958 x1048))))
(assert (= (x129 x1170) (ite (and x366 x731) (x1248 x1170) (x537 x1170))))
(assert (x672 x52))
(assert (= (x680 (x1467 2514000705)) 2514000705))
(assert (x672 x739))
(assert (= (ite (and x1035 x742) (x6 x215) (x896 x215)) (x598 x215)))
(assert (= 2690754053 (x680 (x1467 2690754053))))
(assert (=> (>= 10000 x410) (= (x1467 x410) (x958 x410))))
(assert (= (x598 x45) (ite (and x742 x1035) (x6 x45) (x896 x45))))
(assert (=> (>= 10000 x248) (= (x958 x248) (x1467 x248))))
(assert (x669 x1102))
(assert (x672 x1392))
(assert (= (x1467 1986467848) (x958 1986467848)))
(assert (x672 x1402))
(assert (x669 x1458))
(assert (= x1471 x1473))
(assert (x669 x1044))
(assert (=> (>= 10000 x999) (= (x958 x999) (x1467 x999))))
(assert (= x269 (x680 (x958 x269))))
(assert (= (x794 x472) (ite (= x472 x573) x1536 (x391 x472))))
(assert (x672 x274))
(assert (=> (<= x431 10000) (= (x958 x431) (x1467 x431))))
(assert (= x781 (x680 (x958 x781))))
(assert (= (ite (= x573 x256) x1536 (x391 x256)) (x794 x256)))
(assert (= x410 (x680 (x958 x410))))
(assert (x672 x587))
(assert (x672 x851))
(assert (x669 x655))
(assert (x672 x1324))
(assert (x672 x1454))
(assert (=> (>= 10000 x1044) (= (x1467 x1044) (x958 x1044))))
(assert (=> (<= x168 10000) (= (x1467 x168) (x958 x168))))
(assert (x672 x893))
(assert (x669 x516))
(assert (x669 x1187))
(assert (= (ite (and x366 x645) (x1080 x834) (ite (and (not x1325) (not x645) x366 x1493) (x1463 x834) (ite (and (not x645) x366 (not x1493)) (x1080 x834) (x1186 x834)))) (x614 x834)))
(assert (x669 x1030))
(assert (= 1968616202 (x680 (x1467 1968616202))))
(assert (= x1345 (=> (= x1340 0) x603)))
(assert (x669 x578))
(assert (x672 x1510))
(assert (= 2532887486 (x680 (x1467 2532887486))))
(assert (x672 x1008))
(assert (x672 x216))
(assert (= x427 (x680 (x958 x427))))
(assert (x672 x999))
(assert (=> (<= x427 10000) (= (x1467 x427) (x958 x427))))
(assert (x669 x827))
(assert (x672 x1522))
(assert (= x41 true))
(assert (= x954 (x680 (x958 x954))))
(assert (x672 x1196))
(assert (= x1114 (x680 (x958 x1114))))
(assert (= 0 (x1251 x765)))
(assert (x672 x278))
(assert (x672 x810))
(assert (= (=> (and (= (x1081 (x958 x100) x134 0) x1247) (<= x585 1461501637330902918203684832716283019655932542975) (<= x67 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1273 2690754053)) (< x1273 2960351575) (>= 1461501637330902918203684832716283019655932542975 x100) (= (x1081 (x958 x585) x1247 0) x1383) (not (> 2293535753 x1273)) (= x599 x67) (= x67 (x584 x1383)) (= x134 (x1081 (x958 x904) (x1467 3) 0)) (>= x67 0) (< 0 x623) (not (< x1273 2690754053)) (= x1273 2743102681) (= (x1440 (x958 274184521717934524641157099916833587206)) x623)) (=> (and (= x276 x599) (= x893 x301) (= x370 x251) (= x298 x497) (= x853 x764)) x415)) x66))
(assert (x669 x177))
(assert (x672 x1017))
(assert (x672 x478))
(assert (x672 x1516))
(assert (x672 x809))
(assert (x672 x595))
(assert (x672 x384))
(assert (x672 x392))
(assert (x142 x419 x207))
(assert (= (x1080 x988) (ite (= x972 x988) x308 (x46 x988))))
(assert (x672 x1187))
(assert (x672 x754))
(assert (= (=> (= x1340 x188) x603) x396))
(assert (x672 x419))
(assert (= (x680 (x958 x1553)) x1553))
(assert (x669 x610))
(assert (x672 x211))
(assert (= (ite (= x244 x1468) x1137 (x1080 x1468)) (x1463 x1468)))
(assert (=> (>= 10000 x70) (= (x958 x70) (x1467 x70))))
(assert (x672 x1286))
(assert (= (x598 x472) (ite (and x1035 x742) (x6 x472) (x896 x472))))
(assert (= (=> (= x1515 (< x1016 x1165)) (and (=> (not x1515) x1370) (=> (and (= x1464 x1369) x1515) x2))) x1541))
(assert (= (x1080 x316) (ite (= x316 x972) x308 (x46 x316))))
(assert (= (=> (= (= x178 274184521717934524641157099916833587214) x490) (and (=> (and (= x51 274184521717934524641157099916833587206) (= x1326 (< x478 x389)) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x627 x389)) x9) (= (x996 x962) x627) (= (x628 (- x663 4)) x1213) (= x1157 x389) (= (x1081 (x958 274184521717934524641157099916833587206) (x1467 1) 0) x83) (= (x509 1461501637330902918203684832716283019655932542975 x444) x601) (= x1279 32) (not (= x1101 826074471)) (= 1 x580) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x627 x389)) (= x1101 2835717307) (= x389 x253) (= x1157 x469) (= x1394 x627) (<= x444 1461501637330902918203684832716283019655932542975) (> x1528 0) (= (x509 1461501637330902918203684832716283019655932542975 x444) x1288) (= 274184521717934524641157099916833587206 x1448) (= x47 76450787359836037641860180984291677749980919077056822294353438043884394381312) x490 (not x9) (= (x1081 (x958 274184521717934524641157099916833587206) (x1467 1) 0) x1513) (not (= x1101 649617121)) (= (x1440 (x958 274184521717934524641157099916833587214)) x1528) (not (> 4 x663)) (not (= 2514000705 x1101)) (= x1362 (x628 (- x478 x1157))) (not (< x1101 649617121)) (= 68 x663) (= (x1081 (x958 x1288) (x1467 1) 0) x962) (= x818 x1390) (<= x478 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 1889567281 x1101)) (<= 0 x627) (= x478 (x686 x83)) (not x82) (= x1512 (x1081 (x958 x601) (x1467 1) 0)) (>= x478 0) (= x246 x663) (<= x627 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x1326) (= (or (> x1213 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1213 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1213)))) x1315) (= (+ x1394 x253) x568) (not x1315) (= x82 (< x478 x1157)) (= x769 x444)) x265) (=> (not x490) x41))) x1129))
(assert (= (x680 (x950 x596 1)) (+ (x680 x596) 1)))
(assert (x669 x1064))
(assert (x672 x988))
(assert (x122 x1098))
(assert (= (x78 x52) (ite (= x52 x385) x136 (x787 x52))))
(assert (= (x794 x573) x1536))
(assert (x672 x661))
(assert (= (x680 (x958 x1288)) x1288))
(assert (x669 x213))
(assert (x672 x343))
(assert (=> (<= x1023 10000) (= (x1467 x1023) (x958 x1023))))
(assert (= 0 (x1251 x467)))
(assert (= (ite (= x244 x1160) x1137 (x1080 x1160)) (x1463 x1160)))
(assert (x672 x1209))
(assert (= x1001 (and x920 (not x870))))
(assert (x672 x563))
(assert (= x944 x65))
(assert (x672 x888))
(assert (x672 x1018))
(assert (x672 x153))
(assert (= (x680 (x958 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (x672 x220))
(assert (= (ite (= x211 x1468) x381 (x605 x1468)) (x1204 x1468)))
(assert (x672 x740))
(assert (= (ite (= x244 x573) x1536 (x391 x244)) (x794 x244)))
(assert (x672 x25))
(assert (x672 x607))
(assert (x669 x269))
(assert (= (x680 (x958 x646)) x646))
(assert (x672 x947))
(assert (= x1064 (x680 (x958 x1064))))
(assert (x672 x247))
(assert (x672 x251))
(assert (x672 x363))
(assert (x672 x718))
(assert (x672 x161))
(assert (= (x103 x993) (ite (and x731 x366) (x676 x993) (x1111 x993))))
(assert (x669 x427))
(assert (x672 x1153))
(assert (= x681 (x680 (x958 x681))))
(assert (= (=> (= 0 x1226) x1425) x1354))
(assert (x672 x800))
(assert (x672 x1200))
(assert (x672 x80))
(assert (= (and x222 x407) x181))
(assert (x672 x1547))
(assert (x672 x212))
(assert (x672 x808))
(assert (=> (>= 10000 x800) (= (x958 x800) (x1467 x800))))
(assert (= x934 (x680 (x958 x934))))
(assert (= (x1467 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x958 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x122 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x672 x874))
(assert (x672 x960))
(assert (x672 x358))
(assert (x672 x504))
(assert (= (x680 (x958 x1200)) x1200))
(assert (= (ite (and x395 x869) (x794 x1075) (x708 x1075)) (x900 x1075)))
(assert (x669 x846))
(assert (x672 x1487))
(assert (= (x680 (x958 x213)) x213))
(assert (x672 x542))
(assert (= (x1463 x256) (ite (= x256 x244) x1137 (x1080 x256))))
(assert true)
(assert (x672 x664))
(assert (x672 x491))
(assert (x669 x431))
(assert (x672 x681))
(assert (x672 x188))
(assert (x672 x915))
(assert (= (x958 911411945) (x1467 911411945)))
(assert (= (x1251 x45) 0))
(assert (= (x680 (x1467 2835717307)) 2835717307))
(assert (= (x680 (x958 x976)) x976))
(assert (= x1240 (=> (and (= x166 (x1067 x48)) (> x871 0) (= x871 (x1440 (x958 274184521717934524641157099916833587206))) (= (x1081 (x958 x293) x978 0) x48) (> 2690754053 x1245) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x166) (< x1245 2960351575) (= x780 x166) (<= x646 1461501637330902918203684832716283019655932542975) (<= x293 1461501637330902918203684832716283019655932542975) (>= x166 0) (not (< x1245 2293535753)) (not (= x1245 2293535753)) (= x354 (x1081 (x958 x1367) (x1467 4) 0)) (not (= 2418364589 x1245)) (= x1245 2532887486) (= x1505 (x1081 (x958 x646) x354 0)) (not (= x1245 2512682246)) (>= 1461501637330902918203684832716283019655932542975 x465) (= x978 (x1081 (x958 x465) x1505 0))) (=> (and (= (<= x314 x1107) x1142) (= x904 x298) (= x780 x314) (= (and x1334 x1142) x195) (= x853 x585) (= x100 x251)) x66))))
(assert (x672 x1145))
(assert (x672 x923))
(assert (x672 x322))
(assert (= (x876 x472) (ite (and x1096 x144) (x528 x472) (x1323 x472))))
(assert (= (x1080 x215) (ite (= x215 x972) x308 (x46 x215))))
(assert (= (ite (and x645 x366) (x1080 x45) (ite (and x366 (not x1325) (not x645) x1493) (x1463 x45) (ite (and (not x645) x366 (not x1493)) (x1080 x45) (x1186 x45)))) (x614 x45)))
(assert (= (x129 x1278) (ite (and x731 x366) (x1248 x1278) (x537 x1278))))
(assert (x672 x737))
(assert (x122 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x672 x1255))
(assert (x672 x573))
(assert (= (ite (= x765 x972) x308 (x46 x765)) (x1080 x765)))
(assert (= x1023 (x680 (x958 x1023))))
(assert (x672 x894))
(assert (= x1074 (and x928 (not x240))))
(assert (= x1153 (x680 (x958 x1153))))
(assert (x672 x1028))
(assert (x669 x264))
(assert (= (x680 (x958 x585)) x585))
(assert (x672 x464))
(assert (x672 x609))
(assert (x672 x826))
(assert (= (ite (= x252 x472) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1388 x472)) (x1182 x472)))
(assert (= (or x1055 (and x288 (not x622))) x1549))
(assert (x672 x589))
(assert (x672 x729))
(assert (x669 x489))
(assert (x672 x21))
(assert (= (x680 (x958 x1360)) x1360))
(assert (x672 x1245))
(assert (= (ite (= x45 x211) x381 (x605 x45)) (x1204 x45)))
(assert (= (x680 (x958 x1100)) x1100))
(assert (x672 x1502))
(assert (=> (<= x897 10000) (= (x958 x897) (x1467 x897))))
(assert (= x335 (x680 (x958 x335))))
(assert (= (x78 x573) (ite (= x385 x573) x136 (x787 x573))))
(assert (x672 x483))
(assert (= (x1080 x834) (ite (= x972 x834) x308 (x46 x834))))
(assert (= (x1467 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x958 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x672 x1367))
(assert (=> (>= 10000 x180) (= (x958 x180) (x1467 x180))))
(assert (=> (>= 10000 x489) (= (x958 x489) (x1467 x489))))
(assert (= (x1467 69947311) (x958 69947311)))
(assert (x669 x370))
(assert (= (ite (= x385 x467) x136 (x787 x467)) (x78 x467)))
(assert (= (x680 (x958 x420)) x420))
(assert (= x1024 (x680 (x958 x1024))))
(assert (x672 x427))
(assert (=> (>= 10000 x394) (= (x958 x394) (x1467 x394))))
(assert (= (x1204 x467) (ite (= x211 x467) x381 (x605 x467))))
(assert (= (ite (= x1468 x1500) x1338 (x17 x1468)) (x605 x1468)))
(assert (x669 x1226))
(assert (= (ite (= x1160 x1500) x1338 (x17 x1160)) (x605 x1160)))
(assert (x669 x293))
(assert (x672 x1432))
(assert (x672 x498))
(assert (x672 x556))
(assert (= (x680 (x958 x1192)) x1192))
(assert (x672 x952))
(assert (= (ite (and x1242 x721 x154 x1190 x1026 (not x770)) (x1164 x1556) (ite (and x721 (not x154) x1190 x1026 x1242) (x78 x1556) (ite (and x1190 x721 (not x1026) x1242) (x787 x1556) (ite (and x1242 x721 (not x1190)) (x1128 x1556) (x521 x1556))))) (x1550 x1556)))
(assert (x669 x1015))
(assert (= (x1128 x1487) (ite (= x1487 x762) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x1487))))
(assert (x672 x465))
(assert (x672 x1302))
(assert (=> (>= 10000 x1064) (= (x958 x1064) (x1467 x1064))))
(assert (x672 x469))
(assert (= (x598 x834) (ite (and x1035 x742) (x6 x834) (x896 x834))))
(assert (= (=> (and (<= x101 1461501637330902918203684832716283019655932542975) (>= x1399 0) (not (= x960 2512682246)) (= x539 (x1440 (x958 274184521717934524641157099916833587206))) (not (= 2293535753 x960)) (> 2690754053 x960) (= (x1081 (x958 x168) x982 0) x1511) (= x1399 x115) (= x965 (x1081 (x958 x101) x1511 0)) (not (< x960 2293535753)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1399) (>= 1461501637330902918203684832716283019655932542975 x1176) (= (x1081 (x958 x1083) (x1467 4) 0) x1300) (> x539 0) (> 2960351575 x960) (= x982 (x1081 (x958 x1176) x1300 0)) (= x960 2532887486) (= x1399 (x1067 x965)) (<= x168 1461501637330902918203684832716283019655932542975) (not (= 2418364589 x960))) x577) x263))
(assert (= x1010 x205))
(assert (= x949 x624))
(assert (x672 x1030))
(assert (x669 x1340))
(assert (= x1030 (x680 (x958 x1030))))
(assert (x672 x849))
(assert (x669 x552))
(assert (= x974 x288))
(assert (x669 x934))
(assert (x122 x461))
(assert (x672 x1523))
(assert (x672 x1495))
(assert (= (x1128 x1075) (ite (= x1075 x762) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x439 x1075))))
(assert (= (or x113 (and (not x1041) x1)) x366))
(assert (x669 x907))
(assert (x672 x768))
(assert (= x1458 (x680 (x958 x1458))))
(assert (x669 x976))
(assert (x672 x355))
(assert (= (ite (= x211 x966) x381 (x605 x966)) (x1204 x966)))
(assert (x672 x736))
(assert (= (ite (and x1096 x144) (x528 x765) (x1323 x765)) (x876 x765)))
(assert (= (and x173 x662) x1469))
(assert (= (x680 (x958 x3)) x3))
(assert (x672 x244))
(assert (x669 x1372))
(assert (= x1340 (x680 (x958 x1340))))
(assert (= x110 (x680 (x958 x110))))
(assert (x669 x77))
(assert (= (+ 1 (x680 x159)) (x680 (x950 x159 1))))
(assert (x672 x620))
(assert (x672 x807))
(assert (= (x1467 2798343961) (x958 2798343961)))
(assert (= (x1467 142201243) (x958 142201243)))
(assert (= (x680 (x1467 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= (ite (= x1087 x802) 0 (x1492 x1087)) (x1384 x1087)))
(assert (= (x680 (x1467 1000000000000000000)) 1000000000000000000))
(assert (x672 x1441))
(assert (x672 x538))
(assert (= 635128645 (x680 (x1467 635128645))))
(assert (= (x900 x52) (ite (and x869 x395) (x794 x52) (x708 x52))))
(assert (= (x680 (x958 x648)) x648))
(assert (=> (<= x1048 10000) (= (x1467 x1048) (x958 x1048))))
(assert (x672 x272))
(assert (= 0 (x1251 x966)))
(assert (x672 x264))
(assert (x672 x1016))
(assert (x672 x941))
(assert (= (x1251 x988) 0))
(assert (=> (>= 10000 x315) (= (x1467 x315) (x958 x315))))
(assert (x672 x841))
(assert (= (ite (and x821 x848) (x22 x1234) (ite (and (not x821) x848 x872) (x452 x1234) (x885 x1234))) (x1134 x1234)))
(assert (x672 x1458))
(assert (x672 x1181))
(assert (= (x1164 x765) (ite (= x1092 x765) x384 (x78 x765))))
(assert (= (x958 18446744073709551615) (x1467 18446744073709551615)))
(assert (x672 x917))
(assert (x672 x827))
(assert (= true x1353))
(assert (x672 x386))
(assert (x669 x987))
(assert (x672 x1456))
(assert (x672 x360))
(assert (= x1102 (x680 (x958 x1102))))
(assert (= (ite (= x573 x1500) x1338 (x17 x573)) (x605 x573)))
(assert (x672 x424))
(assert (x672 x382))
(assert (= (x900 x244) (ite (and x395 x869) (x794 x244) (x708 x244))))
(assert (= (=> (and (= (< 0 x343) x505) (= (x628 (- x1165 1)) x343)) (and (=> (not x505) x579) (=> x505 x1133))) x209))
(assert (= (x680 (x1467 1986467848)) 1986467848))
(assert (x672 x1395))
(assert (= (x103 x405) (ite (and x366 x731) (x676 x405) (x1111 x405))))
(assert (=> (<= x1367 10000) (= (x958 x1367) (x1467 x1367))))
(assert (x669 x778))
(assert (x672 x1503))
(assert (x672 x1167))
(assert (x669 x826))
(assert (= 0 (x1251 x211)))
(assert (x672 x233))
(assert (x672 x1091))
(assert (x669 x1176))
(assert (x669 x373))
(assert (x672 x795))
(assert (x669 x1016))
(assert (= x101 (x680 (x958 x101))))
(assert (= x248 (x680 (x958 x248))))
(assert (= (ite (= x1487 x573) x1536 (x391 x1487)) (x794 x1487)))
(assert (x672 x1249))
(assert (= (ite (= x834 x385) x136 (x787 x834)) (x78 x834)))
(assert (x669 x193))
(assert (x672 x418))
(assert (=> (<= x1153 10000) (= (x1467 x1153) (x958 x1153))))
(assert (= (or x1042 x761) x633))
(assert (=> (>= 10000 x652) (= (x958 x652) (x1467 x652))))
(assert (x672 x853))
(assert (x672 x12))
(assert (= (x1467 2743102681) (x958 2743102681)))
(assert (x672 x218))
(assert (= (x614 x256) (ite (and x366 x645) (x1080 x256) (ite (and (not x645) x1493 (not x1325) x366) (x1463 x256) (ite (and (not x1493) x366 (not x645)) (x1080 x256) (x1186 x256))))))
(assert (x672 x685))
(assert (= (=> (and (= x1119 (x1081 (x958 x107) x1401 0)) (<= 0 x239) (<= x239 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x239 (x103 x1119)) (= x107 (x509 1461501637330902918203684832716283019655932542975 x419)) (= (= 0 x239) x717) (= x1401 (x1081 (x958 x609) (x1467 6) 0))) (and (=> x717 x1304) (=> (and (not x717) (= x188 x609)) x396))) x611))
(assert (= (x680 (x958 x1187)) x1187))
(assert (= x655 (x680 (x958 x655))))
(assert (x672 x215))
(assert (= (x680 (x958 x118)) x118))
(assert (= (ite (= x252 x765) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1388 x765)) (x1182 x765)))
(assert (= x981 (=> (and (<= 0 x1374) (= (x509 1461501637330902918203684832716283019655932542975 x419) x289) (= x1374 (x811 x499)) (= (x1081 (x958 x1178) x1429 0) x499) (= (= x1374 0) x1317) (= x1429 (x1081 (x958 x289) x1177 0)) (= x1177 (x1081 (x958 x1165) (x1467 7) 0)) (<= x1374 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (= x563 x1165) (not x1317)) x776) (=> x1317 x562)))))
(assert (= (=> (and (= (x1081 (x958 x552) x1238 0) x155) (<= 0 x1097) (< x40 2293535753) (= x40 759532456) (not (= x40 468353030)) (> x96 0) (<= x1097 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x552) (= x96 (x1440 (x958 274184521717934524641157099916833587206))) (= (x1081 (x958 x180) x155 0) x242) (>= 1461501637330902918203684832716283019655932542975 x180) (not (< x40 468353030)) (not (= x40 635128645)) (= (x811 x242) x1097) (> 911411945 x40) (= (x1081 (x958 x1525) (x1467 7) 0) x1238) (= x355 x1097)) (=> (and x450 (= x934 x298) (= x355 x498) (= x450 (>= x498 x874)) (= x251 x760)) x706)) x1396))
(assert (= (=> (and (= x382 x324) (= (<= x324 x766) x1143) (= x1220 true)) x1220) x688))
(assert (x672 x806))
(assert (x672 x529))
(assert (= (x1467 468353030) (x958 468353030)))
(assert (= x926 (or (and x1096 x144) (and x1297 x347))))
(assert (x672 x1450))
(assert (= (ite (= x16 x1500) x1338 (x17 x16)) (x605 x16)))
(assert (= x883 (=> (= (< 1 x1536) x1526) (and (=> (and (= (x1283 (+ x425 192)) x966) x400 (= x1331 (< x199 x908)) (= (x1283 (+ x1147 100)) x1211) (= (x1283 (+ 96 x857)) x252) x1526 (= x1120 (x509 26959946667150639794667015087019630673637144422540572481103610249215 x495)) (= x1347 (x1283 (+ 64 x1296))) (or (and (= (x1283 (+ x199 x1056)) x1225) x1331) (not x1331)) (or (and (= 0 x908) (not x901)) (and (= x1412 x1056) (= x467 x1556) (= (< 32 x199) x712) x901 (= (x1182 x467) x187) (or (and (not x712) (= 32 x908)) (and (= (x1172 x45) x94) (or (and (= x851 (x855 x215)) (or (and x1036 (= x834 (x1283 (+ 128 x1147))) (= x908 128) (= (x1283 (+ x1211 160)) x744) (= (x332 x834) x230) (= (< 128 x199) x1112) (not x1112)) (and (not x1036) (= 96 x908))) (= (x1283 (+ x1211 128)) x112) (= (x1283 (+ 96 x1147)) x215) (= x1036 (< 96 x199)) x1527) (and (not x1527) (= 64 x908))) x712 (= x1527 (< 64 x199)) (= x779 (x1283 (+ 96 x1211))) (= (x1283 (+ 64 x1147)) x45))))) (= (x903 x1556) x495) (= x456 (x1440 (x958 x1360))) (= x1229 (x628 (- x1211 x1147))) (= (> x456 0) x400) (= x514 (x628 (- x1229 32))) (= (> x199 0) x901) (= (x225 x1347) x1360) (= (x1283 (+ 68 x1147)) x254) (= x857 (x1283 (+ x1147 36))) (= x1435 0) (= (x1283 (+ 32 x1147)) x1556) (= (x1283 (+ x1120 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x303) (> x1536 1) (> x790 1) (= (x1336 x573) x790) (= (x1336 x966) x1496) (= x199 (x1182 x1147)) (= (x1283 (+ 128 x857)) x1056) (>= 1461501637330902918203684832716283019655932542975 x1360)) x592) (=> (not x1526) x1198)))))
(assert (= x1285 (=> (and (>= x1038 0) (= x1102 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x1038 (x1546 x1431)) (not (< x1450 x97)) (= x1041 (= x1038 0)) (>= x1450 0) (= (x1081 (x958 x1102) x1212 0) x1431) (= x1212 (x1081 (x958 x1165) (x1467 6) 0)) (<= x1038 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1450 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> x1041 x1416) (=> (and (= 0 x26) (= x217 x1403) (= x1138 (x509 1461501637330902918203684832716283019655932542975 x419)) (<= x217 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x174 x1524) x217) (<= 0 x217) (= (x1081 (x958 x1138) x763 0) x1524) (= (x1081 (x958 x1165) (x1467 10) 0) x763) (not x1041)) x1455)))))
(assert (=> (>= 10000 x100) (= (x1467 x100) (x958 x100))))
(assert (=> (<= x77 10000) (= (x958 x77) (x1467 x77))))
(assert (= x1 x848))
(assert (x669 x529))
(assert (= x881 (or (and x1469 x1426) (and x662 (not x173)) (and x1074 (not x117)))))
(assert (x672 x114))
(assert (= (x1080 x1556) (ite (= x1556 x972) x308 (x46 x1556))))
(assert (x672 x393))
(assert (=> (<= x269 10000) (= (x958 x269) (x1467 x269))))
(assert (x672 x1163))
(assert (= (x1251 x52) 0))
(assert (x672 x252))
(assert (x672 x933))
(assert (= 2798343961 (x680 (x1467 2798343961))))
(assert (= 274184521717934524641157099916833587214 (x680 (x958 274184521717934524641157099916833587214))))
(assert (= (=> (and (= x625 (= 0 x526)) (or (and (= (x1081 (x958 x609) (x1467 7) 0) x959) (= (x509 1461501637330902918203684832716283019655932542975 x419) x77) x830 (= (x1081 (x958 x77) x959 0) x703) (= x961 (x1081 (x958 x1178) x703 0)) (= x202 x831)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x229) (= x541 (< x1163 x352)) (= x1189 (x1452 x1221)) (= (x1081 (x958 x1178) x460 0) x1531) (= x1163 (x1134 x1531)) (<= 0 x1189) (= x1033 (x1081 (x958 x609) (x1467 1) 0)) (= x460 (x1081 (x958 x591) x1094 0)) (or (and (= (x1081 (x958 x1178) x1047 0) x1290) (= x1047 (x1081 (x958 x921) x194 0)) (= x921 (x509 1461501637330902918203684832716283019655932542975 x419)) (= x194 (x1081 (x958 x609) (x1467 7) 0)) x436 (= x202 x275)) (and (< (* x157 x955) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x202 x275) (= x422 (x1081 (x958 x1178) x362 0)) (= x373 (x509 1461501637330902918203684832716283019655932542975 x419)) (= (* x955 x157) x506) (= (x509 1461501637330902918203684832716283019655932542975 x419) x315) (= x362 (x1081 (x958 x373) x414 0)) (not x436) (= (x1081 (x958 x315) x756 0) x674) (= (x1081 (x958 x1178) x674 0) x1059) (= x1343 x506) (= (x1081 (x958 x609) (x1467 3) 0) x756) (= x414 (x1081 (x958 x609) (x1467 7) 0)))) (= (x1081 (x958 x609) (x1467 7) 0) x1094) (= x591 (x509 1461501637330902918203684832716283019655932542975 x419)) (or (and (= x157 0) (not x541)) (and (= (x1422 x587) x1392) (= x72 (> x1079 x1392)) (or (and (= x551 (x1422 x831)) (= x1293 (x628 (- x1432 x551))) (= x157 x1293) x1146 (not (> x551 x1432))) (and (= 604800 x691) (= (x628 (- x1432 x1163)) x1409) (= x1510 (ite (> 604800 x1409) x1409 604800)) (= x1510 x157) (not x1146) (not (< x1432 x1163)))) (= x1146 (= 0 x1163)) x541 (or (and x72 (= x1432 x483) (= x483 (x1422 x587))) (and (not x72) (= x1079 x1432))))) (= (x1283 (+ x970 96)) x587) (= x1221 (x950 x1033 1)) (= x436 (= 0 x157)) (<= 0 x229) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1189) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1163) (= (x1422 x587) x352) (not x830) (= (x1283 (+ 128 x970)) x275) (= (x1039 x1033) x229) (<= 0 x1163))) (= (= 0 x955) x830) (or x625 (and (= x718 (x509 1461501637330902918203684832716283019655932542975 x419)) (not x625)))) x367) x1034))
(assert (x672 x1075))
(assert (= (x680 (x958 x481)) x481))
(assert (x672 x871))
(assert (= x315 (x680 (x958 x315))))
(assert (=> (>= 10000 x167) (= (x1467 x167) (x958 x167))))
(assert (= (ite (= x385 x1468) x136 (x787 x1468)) (x78 x1468)))
(assert (x672 x539))
(assert (= (x614 x1468) (ite (and x366 x645) (x1080 x1468) (ite (and (not x1325) x366 (not x645) x1493) (x1463 x1468) (ite (and (not x1493) x366 (not x645)) (x1080 x1468) (x1186 x1468))))))
(assert (= (x78 x765) (ite (= x385 x765) x136 (x787 x765))))
(assert (x672 x119))
(assert (x672 x751))
(assert (x672 x1165))
(assert (= (x958 1889567281) (x1467 1889567281)))
(assert (x669 x739))
(assert (x672 x1357))
(assert (x122 x1050))
(assert (= (x680 (x1467 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x680 (x1467 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x672 x285))
(assert (= (ite (= x966 x1092) x384 (x78 x966)) (x1164 x966)))
(assert (x672 x777))
(assert (= (x680 (x958 x1194)) x1194))
(assert (x122 x495))
(assert (= (or (and x742 x1035) (and x1268 x490)) x205))
(assert (x669 x979))
(assert (x672 x847))
(assert (= x167 (x680 (x958 x167))))
(assert (= (x958 826074471) (x1467 826074471)))
(assert (x672 x1219))
(assert (=> (<= x1043 10000) (= (x1467 x1043) (x958 x1043))))
(assert (= (x522 x45) (ite (and (not x353) x1242 x721) (x1550 x45) (x535 x45))))
(assert (x669 x891))
(assert (x672 x623))
(assert (x669 x315))
(assert (= (=> (and (<= x655 1461501637330902918203684832716283019655932542975) (= x873 (x1081 (x958 x800) (x1467 7) 0)) (= x1244 x1537) (> 911411945 x556) (<= x1537 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 635128645 x556)) (not (> 468353030 x556)) (<= 0 x1537) (<= x110 1461501637330902918203684832716283019655932542975) (= x556 759532456) (< x556 2293535753) (= (x983 x1234) x1537) (not (= x556 468353030)) (> x1421 0) (= (x1081 (x958 x110) x351 0) x1234) (= (x1081 (x958 x655) x873 0) x351) (= x1421 (x1440 (x958 274184521717934524641157099916833587206)))) (=> (and (= x1244 x403) (= x1100 x298) (= x431 x251) (= x1404 (>= x491 x403))) x310)) x1019))
(assert (=> (<= x3 10000) (= (x1467 x3) (x958 x3))))
(assert (= (x605 x966) (ite (= x966 x1500) x1338 (x17 x966))))
(assert (x672 x1140))
(assert (x672 x533))
(assert (= x413 (=> (= (< 0 x609) x1265) (and (=> (not x1265) x1345) (=> x1265 x611)))))
(assert (x672 x1048))
(assert (x669 x777))
(assert (x672 x1088))
(assert (x672 x256))
(assert (= x1072 (or (and x331 (not x1317)) (and x1469 (not x1426)))))
(assert (x669 x167))
(assert (= (ite (and x1190 (not x770) x721 x154 x1026 x1242) (x1164 x834) (ite (and x1190 x1026 x1242 (not x154) x721) (x78 x834) (ite (and (not x1026) x1190 x1242 x721) (x787 x834) (ite (and (not x1190) x721 x1242) (x1128 x834) (x521 x834))))) (x1550 x834)))
(assert (= (x1164 x52) (ite (= x1092 x52) x384 (x78 x52))))
(assert (x672 x1070))
(assert (x672 x1235))
(assert (x672 x157))
(assert (= (or (and (not x184) x1250) (and (not x524) x689)) x1482))
(assert (x669 x100))
(assert (= x366 x1197))
(assert (= (x680 (x1467 2418364589)) 2418364589))
(assert (= (x1467 649617121) (x958 649617121)))
(assert (x672 x1553))
(assert (= (x522 x573) (ite (and x721 x1242 (not x353)) (x1550 x573) (x535 x573))))
(assert (x672 x150))
(assert (x672 x518))
(assert (x672 x1381))
(assert (=> (<= x1176 10000) (= (x1467 x1176) (x958 x1176))))
(assert (= (ite (= x573 x1160) x1536 (x391 x1160)) (x794 x1160)))
(assert (= (x1134 x824) (ite (and x848 x821) (x22 x824) (ite (and x848 (not x821) x872) (x452 x824) (x885 x824)))))
(assert (x672 x1310))
(assert (= (ite (= x385 x1556) x136 (x787 x1556)) (x78 x1556)))
(assert (x669 x1040))
(assert (x672 x925))
(assert (x672 x45))
(assert (x669 x336))
(assert (x672 x352))
(check-sat)
