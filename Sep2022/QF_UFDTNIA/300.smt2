(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x603 0)) (((x128 (x1184 x603) (x1346 x603) (x1059 Int)) (x336 (x1026 Int)) (x894 (x1336 x603) (x1401 Int)))))
(declare-fun x1255 () x603)
(declare-fun x885 () Int)
(declare-fun x979 () Int)
(declare-fun x860 () Int)
(declare-fun x1251 () Int)
(declare-fun x1049 () Int)
(declare-fun x1150 () Bool)
(declare-fun x1051 () x603)
(declare-fun x405 (Int) Int)
(declare-fun x960 () Int)
(declare-fun x1175 () Int)
(declare-fun x221 (Int) Int)
(declare-fun x1230 () Bool)
(declare-fun x608 () Bool)
(declare-fun x492 () Bool)
(declare-fun x341 () Bool)
(declare-fun x786 () Bool)
(declare-fun x535 () Int)
(declare-fun x583 () Bool)
(declare-fun x525 () Bool)
(declare-fun x386 () x603)
(declare-fun x1260 () Int)
(declare-fun x688 () Int)
(declare-fun x1547 (x603) Int)
(declare-fun x1132 () Int)
(declare-fun x1207 () Int)
(declare-fun x1308 () x603)
(declare-fun x601 () Int)
(declare-fun x912 () x603)
(declare-fun x1297 () Bool)
(declare-fun x6 () Bool)
(declare-fun x517 () Bool)
(declare-fun x774 () Int)
(declare-fun x112 () Bool)
(declare-fun x451 () Int)
(declare-fun x915 () Bool)
(declare-fun x1330 () x603)
(declare-fun x1338 () Int)
(declare-fun x752 () Int)
(declare-fun x1171 () Bool)
(declare-fun x971 () Bool)
(declare-fun x428 () x603)
(declare-fun x867 (x603) Int)
(declare-fun x196 () Int)
(declare-fun x972 () x603)
(declare-fun x65 () Int)
(declare-fun x668 () x603)
(declare-fun x114 () Int)
(declare-fun x957 () Int)
(declare-fun x1173 () Bool)
(declare-fun x1017 () x603)
(declare-fun x942 () Bool)
(declare-fun x431 () x603)
(declare-fun x574 () Bool)
(declare-fun x673 () Bool)
(declare-fun x149 () Int)
(declare-fun x1481 () Bool)
(declare-fun x159 () Bool)
(declare-fun x868 () Int)
(declare-fun x1395 () Int)
(declare-fun x1221 () Bool)
(declare-fun x922 () Int)
(declare-fun x647 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x261 () Bool)
(declare-fun x896 () Bool)
(declare-fun x277 () x603)
(declare-fun x524 () Bool)
(declare-fun x1405 () Int)
(declare-fun x392 () Int)
(declare-fun x540 () Bool)
(declare-fun x1566 () Int)
(declare-fun x312 () Bool)
(declare-fun x1238 () Int)
(declare-fun x701 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x943 () Int)
(declare-fun x916 () Int)
(declare-fun x769 () x603)
(declare-fun x820 () Int)
(declare-fun x905 () Int)
(declare-fun x313 () Int)
(declare-fun x737 () Int)
(declare-fun x1348 (Int) Int)
(declare-fun x1174 () x603)
(declare-fun x967 () Int)
(declare-fun x710 () Bool)
(declare-fun x743 () Int)
(declare-fun x975 () Bool)
(declare-fun x458 () Bool)
(declare-fun x596 () Int)
(declare-fun x1312 () Int)
(declare-fun x318 () Bool)
(declare-fun x84 () Int)
(declare-fun x1444 () x603)
(declare-fun x57 () Int)
(declare-fun x91 () Int)
(declare-fun x543 () Int)
(declare-fun x520 () Bool)
(declare-fun x1015 () Int)
(declare-fun x1329 () x603)
(declare-fun x1541 () Int)
(declare-fun x120 () Int)
(declare-fun x645 () Int)
(declare-fun x122 () Int)
(declare-fun x825 () x603)
(declare-fun x500 () Int)
(declare-fun x649 () Int)
(declare-fun x38 () Int)
(declare-fun x534 (Int) Int)
(declare-fun x586 () x603)
(declare-fun x1493 (x603) Int)
(declare-fun x377 () x603)
(declare-fun x873 () Bool)
(declare-fun x1455 () Int)
(declare-fun x1250 () Bool)
(declare-fun x17 () Int)
(declare-fun x816 () x603)
(declare-fun x1418 () Bool)
(declare-fun x287 () Int)
(declare-fun x172 () Int)
(declare-fun x1386 () Int)
(declare-fun x1044 () x603)
(declare-fun x442 () Bool)
(declare-fun x927 () x603)
(declare-fun x784 () Bool)
(declare-fun x105 () Int)
(declare-fun x1433 () Int)
(declare-fun x1154 () Int)
(declare-fun x198 () Bool)
(declare-fun x227 () Int)
(declare-fun x1479 () Int)
(declare-fun x1475 () Bool)
(declare-fun x1092 () Int)
(declare-fun x981 () Int)
(declare-fun x87 () Int)
(declare-fun x1094 () Int)
(declare-fun x342 () Int)
(declare-fun x1083 () Int)
(declare-fun x707 (Int) Int)
(declare-fun x166 () Int)
(declare-fun x604 () Int)
(declare-fun x1157 () Bool)
(declare-fun x15 () Bool)
(declare-fun x1379 () Int)
(declare-fun x504 () Int)
(declare-fun x1272 () x603)
(declare-fun x1533 () Int)
(declare-fun x949 () Int)
(declare-fun x848 () Bool)
(declare-fun x495 () x603)
(declare-fun x382 () Int)
(declare-fun x1099 () Int)
(declare-fun x1084 () Int)
(declare-fun x178 () Bool)
(declare-fun x60 () Bool)
(declare-fun x970 () x603)
(declare-fun x1200 () Int)
(declare-fun x299 () Bool)
(declare-fun x280 () Int)
(declare-fun x333 () Int)
(declare-fun x676 () Int)
(declare-fun x1546 () Bool)
(declare-fun x418 () x603)
(declare-fun x547 () x603)
(declare-fun x558 () Int)
(declare-fun x1231 () Int)
(declare-fun x1461 (x603) Int)
(declare-fun x1182 () Int)
(declare-fun x1052 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x1234 () Int)
(declare-fun x875 () x603)
(declare-fun x75 () Int)
(declare-fun x1193 () Bool)
(declare-fun x501 () Bool)
(declare-fun x1376 () Int)
(declare-fun x182 () Int)
(declare-fun x330 () Int)
(declare-fun x1569 () Int)
(declare-fun x931 () Int)
(declare-fun x1187 () Bool)
(declare-fun x621 () Bool)
(declare-fun x562 () Int)
(declare-fun x1278 () Bool)
(declare-fun x546 () x603)
(declare-fun x689 () Int)
(declare-fun x158 () Int)
(declare-fun x1372 () Bool)
(declare-fun x526 () Int)
(declare-fun x1565 () Int)
(declare-fun x739 () Int)
(declare-fun x1077 () Int)
(declare-fun x1268 () x603)
(declare-fun x1459 () x603)
(declare-fun x854 () Int)
(declare-fun x1020 () Int)
(declare-fun x566 () Bool)
(declare-fun x1486 () Int)
(declare-fun x459 () Int)
(declare-fun x1201 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x589 () Bool)
(declare-fun x340 () Int)
(declare-fun x45 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x390 () Bool)
(declare-fun x802 () x603)
(declare-fun x125 () Int)
(declare-fun x1219 () Bool)
(declare-fun x365 () Int)
(declare-fun x1344 () x603)
(declare-fun x1284 () Int)
(declare-fun x5 () Int)
(declare-fun x103 () Int)
(declare-fun x1370 () Int)
(declare-fun x447 () Bool)
(declare-fun x391 () x603)
(declare-fun x909 () Int)
(declare-fun x439 () Int)
(declare-fun x12 () Int)
(declare-fun x630 () Int)
(declare-fun x1245 () Int)
(declare-fun x987 () Int)
(declare-fun x376 () Bool)
(declare-fun x623 () Int)
(declare-fun x469 () Int)
(declare-fun x870 () Int)
(declare-fun x570 () Bool)
(declare-fun x64 () Int)
(declare-fun x117 () x603)
(declare-fun x169 () Int)
(declare-fun x1322 () Int)
(declare-fun x444 () x603)
(declare-fun x155 () x603)
(declare-fun x226 () Bool)
(declare-fun x651 () Bool)
(declare-fun x1009 () Int)
(declare-fun x703 () Int)
(declare-fun x339 () x603)
(declare-fun x1158 () Bool)
(declare-fun x98 () Bool)
(declare-fun x595 () Bool)
(declare-fun x828 () Bool)
(declare-fun x1205 () Int)
(declare-fun x872 () Int)
(declare-fun x974 () x603)
(declare-fun x359 () Bool)
(declare-fun x237 () Int)
(declare-fun x258 () Int)
(declare-fun x389 () Int)
(declare-fun x824 () Bool)
(declare-fun x1352 () x603)
(declare-fun x1146 () Int)
(declare-fun x1517 () Int)
(declare-fun x723 () Bool)
(declare-fun x415 () Int)
(declare-fun x1357 () Bool)
(declare-fun x992 () Int)
(declare-fun x709 () Bool)
(declare-fun x1022 () Int)
(declare-fun x956 () x603)
(declare-fun x502 () Int)
(declare-fun x185 () Int)
(declare-fun x73 () Bool)
(declare-fun x582 () Int)
(declare-fun x776 () Int)
(declare-fun x919 () Bool)
(declare-fun x1144 () Int)
(declare-fun x772 () Bool)
(declare-fun x350 () Int)
(declare-fun x982 () x603)
(declare-fun x731 () Bool)
(declare-fun x1409 () Int)
(declare-fun x1512 () Bool)
(declare-fun x877 () Bool)
(declare-fun x1323 () Int)
(declare-fun x423 () Int)
(declare-fun x796 () Bool)
(declare-fun x1520 () Int)
(declare-fun x1283 () Bool)
(declare-fun x138 () Int)
(declare-fun x923 () Bool)
(declare-fun x357 () x603)
(declare-fun x753 () Int)
(declare-fun x940 (Int) Int)
(declare-fun x617 () Bool)
(declare-fun x245 () Int)
(declare-fun x1095 () Int)
(declare-fun x498 () x603)
(declare-fun x973 () Int)
(declare-fun x921 (Int) Int)
(declare-fun x381 () Bool)
(declare-fun x483 () x603)
(declare-fun x266 () Bool)
(declare-fun x263 () Bool)
(declare-fun x1419 () Int)
(declare-fun x628 () x603)
(declare-fun x895 () Int)
(declare-fun x687 () Int)
(declare-fun x1010 () Int)
(declare-fun x565 () Bool)
(declare-fun x1456 () Int)
(declare-fun x311 () Int)
(declare-fun x1361 () Int)
(declare-fun x1212 () Bool)
(declare-fun x900 () x603)
(declare-fun x591 () Bool)
(declare-fun x1480 () x603)
(declare-fun x764 () Bool)
(declare-fun x1314 () Int)
(declare-fun x1006 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x1263 () Bool)
(declare-fun x1321 () Int)
(declare-fun x1556 () x603)
(declare-fun x577 () Int)
(declare-fun x925 () Bool)
(declare-fun x606 (x603) Int)
(declare-fun x199 () Int)
(declare-fun x1151 () Int)
(declare-fun x202 () Int)
(declare-fun x34 () Bool)
(declare-fun x1156 () Int)
(declare-fun x725 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x338 () Int)
(declare-fun x911 () Int)
(declare-fun x598 () Int)
(declare-fun x732 () Int)
(declare-fun x291 () Int)
(declare-fun x394 () Int)
(declare-fun x1000 () x603)
(declare-fun x728 () Int)
(declare-fun x1365 () Bool)
(declare-fun x1369 () x603)
(declare-fun x1295 () Int)
(declare-fun x44 () x603)
(declare-fun x930 () Int)
(declare-fun x373 () x603)
(declare-fun x395 () Int)
(declare-fun x775 () Int)
(declare-fun x271 () Int)
(declare-fun x1442 () Bool)
(declare-fun x1229 () Int)
(declare-fun x1452 (x603) Int)
(declare-fun x443 () x603)
(declare-fun x907 () Int)
(declare-fun x780 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x1472 () Int)
(declare-fun x529 () Int)
(declare-fun x944 () Int)
(declare-fun x585 () Int)
(declare-fun x1125 () Int)
(declare-fun x1423 () Bool)
(declare-fun x1266 () Int)
(declare-fun x941 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x1466 () Int)
(declare-fun x705 () Int)
(declare-fun x255 () Int)
(declare-fun x1326 () Int)
(declare-fun x457 () Int)
(declare-fun x490 () Int)
(declare-fun x889 () Int)
(declare-fun x1153 () Int)
(declare-fun x136 (Int) Int)
(declare-fun x978 () Int)
(declare-fun x440 () Int)
(declare-fun x1110 () Int)
(declare-fun x1507 () Int)
(declare-fun x1551 () Bool)
(declare-fun x1196 () Int)
(declare-fun x1504 () Bool)
(declare-fun x968 (Int) Int)
(declare-fun x1537 () x603)
(declare-fun x467 () x603)
(declare-fun x1334 () Bool)
(declare-fun x934 () Int)
(declare-fun x641 () Int)
(declare-fun x141 () Int)
(declare-fun x541 () Int)
(declare-fun x1141 () x603)
(declare-fun x1258 () Bool)
(declare-fun x1120 () Int)
(declare-fun x819 () Int)
(declare-fun x97 () Int)
(declare-fun x197 () x603)
(declare-fun x559 () Int)
(declare-fun x124 () Bool)
(declare-fun x811 () Int)
(declare-fun x1122 () Int)
(declare-fun x1106 () Int)
(declare-fun x119 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x242 () Bool)
(declare-fun x691 () Int)
(declare-fun x1270 () Bool)
(declare-fun x506 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x662 () Bool)
(declare-fun x279 () Int)
(declare-fun x111 () Bool)
(declare-fun x717 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x528 () Int)
(declare-fun x892 () Bool)
(declare-fun x1549 () Int)
(declare-fun x851 () Bool)
(declare-fun x1066 () Int)
(declare-fun x1168 () Bool)
(declare-fun x317 () Bool)
(declare-fun x425 () Bool)
(declare-fun x605 () Bool)
(declare-fun x1145 () x603)
(declare-fun x602 () x603)
(declare-fun x192 () x603)
(declare-fun x168 () Bool)
(declare-fun x171 () Bool)
(declare-fun x996 () Int)
(declare-fun x59 () Bool)
(declare-fun x746 () Int)
(declare-fun x953 () Bool)
(declare-fun x695 () Int)
(declare-fun x1328 () x603)
(declare-fun x1319 () Int)
(declare-fun x1337 () Bool)
(declare-fun x821 () Int)
(declare-fun x187 () Int)
(declare-fun x214 () Bool)
(declare-fun x416 () Bool)
(declare-fun x265 () Int)
(declare-fun x844 () x603)
(declare-fun x1073 () Int)
(declare-fun x1450 () Bool)
(declare-fun x52 () Bool)
(declare-fun x592 () x603)
(declare-fun x429 () x603)
(declare-fun x309 () Int)
(declare-fun x133 () Int)
(declare-fun x1301 () Int)
(declare-fun x267 () Int)
(declare-fun x393 () x603)
(declare-fun x738 () Bool)
(declare-fun x948 () Bool)
(declare-fun x594 () Int)
(declare-fun x1186 () Bool)
(declare-fun x579 () Bool)
(declare-fun x847 () Int)
(declare-fun x555 () Bool)
(declare-fun x26 () x603)
(declare-fun x286 () Bool)
(declare-fun x14 () Bool)
(declare-fun x659 () Int)
(declare-fun x626 () Int)
(declare-fun x997 () Bool)
(declare-fun x1028 () x603)
(declare-fun x206 () Int)
(declare-fun x1364 () Int)
(declare-fun x1411 () Int)
(declare-fun x1140 () Bool)
(declare-fun x218 () Int)
(declare-fun x1496 () x603)
(declare-fun x325 () Bool)
(declare-fun x36 () Bool)
(declare-fun x1013 () Int)
(declare-fun x699 () Bool)
(declare-fun x329 () Int)
(declare-fun x1159 () x603)
(declare-fun x1381 () Int)
(declare-fun x1562 () Int)
(declare-fun x1189 () Bool)
(declare-fun x660 () Bool)
(declare-fun x48 () Int)
(declare-fun x1008 () Int)
(declare-fun x1287 () Bool)
(declare-fun x945 () Bool)
(declare-fun x962 () Bool)
(declare-fun x587 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x147 () Bool)
(declare-fun x685 () x603)
(declare-fun x109 (x603) Int)
(declare-fun x519 () x603)
(declare-fun x228 () Bool)
(declare-fun x779 () Int)
(declare-fun x3 () Int)
(declare-fun x104 () Int)
(declare-fun x677 () x603)
(declare-fun x194 () Int)
(declare-fun x988 () Bool)
(declare-fun x315 () Bool)
(declare-fun x269 () Int)
(declare-fun x268 () Bool)
(declare-fun x89 () Bool)
(declare-fun x1502 () Int)
(declare-fun x1558 () Int)
(declare-fun x1179 (x603) Int)
(declare-fun x656 () Bool)
(declare-fun x236 () Int)
(declare-fun x748 () Bool)
(declare-fun x698 () Int)
(declare-fun x767 () Int)
(declare-fun x644 () Bool)
(declare-fun x876 () Int)
(declare-fun x90 () Bool)
(declare-fun x100 () Bool)
(declare-fun x869 () Bool)
(declare-fun x1061 () Int)
(declare-fun x176 () Int)
(declare-fun x715 () Int)
(declare-fun x334 (Int) Int)
(declare-fun x422 (Int) Int)
(declare-fun x681 () x603)
(declare-fun x966 () Int)
(declare-fun x76 () Int)
(declare-fun x347 (x603) Int)
(declare-fun x818 () Bool)
(declare-fun x760 () Bool)
(declare-fun x362 () Int)
(declare-fun x1434 () Int)
(declare-fun x482 () Bool)
(declare-fun x719 () Int)
(declare-fun x283 () Int)
(declare-fun x351 () Int)
(declare-fun x1276 () Int)
(declare-fun x1335 () Bool)
(declare-fun x1069 () x603)
(declare-fun x222 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x1299 () Int)
(declare-fun x722 () x603)
(declare-fun x411 () Int)
(declare-fun x1128 () Int)
(declare-fun x486 () Int)
(declare-fun x643 () Bool)
(declare-fun x413 () Bool)
(declare-fun x742 () Bool)
(declare-fun x1309 () Int)
(declare-fun x908 () Bool)
(declare-fun x156 () Int)
(declare-fun x783 () Int)
(declare-fun x718 () Int)
(declare-fun x1198 () Bool)
(declare-fun x132 () x603)
(declare-fun x620 () Int)
(declare-fun x384 () x603)
(declare-fun x787 () Int)
(declare-fun x1202 () x603)
(declare-fun x408 () x603)
(declare-fun x1527 () Int)
(declare-fun x306 () Int)
(declare-fun x1239 () Int)
(declare-fun x1476 () x603)
(declare-fun x321 () Int)
(declare-fun x1435 () Int)
(declare-fun x914 () Int)
(declare-fun x538 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x1131 () x603)
(declare-fun x1277 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x463 () Bool)
(declare-fun x303 () Int)
(declare-fun x1244 () Int)
(declare-fun x726 () Int)
(declare-fun x1426 () Bool)
(declare-fun x462 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x385 () Bool)
(declare-fun x1271 () Int)
(declare-fun x1257 () Bool)
(declare-fun x295 () Int)
(declare-fun x1499 () Bool)
(declare-fun x499 () Int)
(declare-fun x863 () Int)
(declare-fun x655 () Int)
(declare-fun x298 (x603) Int)
(declare-fun x473 () Bool)
(declare-fun x514 () Bool)
(declare-fun x985 () x603)
(declare-fun x886 () Int)
(declare-fun x1288 () x603)
(declare-fun x1439 () Int)
(declare-fun x1429 () Int)
(declare-fun x724 () Int)
(declare-fun x1262 () Bool)
(declare-fun x1105 () Int)
(declare-fun x994 () Int)
(declare-fun x1064 () Int)
(declare-fun x72 () Int)
(declare-fun x150 () Bool)
(declare-fun x1021 () Int)
(declare-fun x584 () Int)
(declare-fun x516 () Bool)
(declare-fun x207 () x603)
(declare-fun x1031 () Int)
(declare-fun x1098 () Int)
(declare-fun x324 () Int)
(declare-fun x1560 () Int)
(declare-fun x1390 () Int)
(declare-fun x646 () x603)
(declare-fun x396 () Bool)
(declare-fun x946 () Bool)
(declare-fun x1192 () x603)
(declare-fun x223 () Int)
(declare-fun x51 () Bool)
(declare-fun x1261 (Int) Int)
(declare-fun x398 () Bool)
(declare-fun x1101 () x603)
(declare-fun x1096 () Bool)
(declare-fun x20 () Int)
(declare-fun x43 () x603)
(declare-fun x515 () Int)
(declare-fun x1194 () Int)
(declare-fun x1482 () Int)
(declare-fun x1076 () Int)
(declare-fun x1114 () Bool)
(declare-fun x1490 () Int)
(declare-fun x19 () Int)
(declare-fun x1124 () Int)
(declare-fun x1454 () x603)
(declare-fun x208 () Int)
(declare-fun x609 () Int)
(declare-fun x4 () Int)
(declare-fun x622 () Int)
(declare-fun x984 () Int)
(declare-fun x680 () Int)
(declare-fun x721 () x603)
(declare-fun x580 (Int Int) Int)
(declare-fun x27 () Bool)
(declare-fun x682 () Int)
(declare-fun x871 (Int) Int)
(declare-fun x1427 () x603)
(declare-fun x531 () Int)
(declare-fun x1063 () Bool)
(declare-fun x804 () Bool)
(declare-fun x108 () Bool)
(declare-fun x204 () Int)
(declare-fun x22 () Bool)
(declare-fun x663 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x477 () Bool)
(declare-fun x955 (Int) Int)
(declare-fun x1002 () Bool)
(declare-fun x675 () x603)
(declare-fun x1503 () Bool)
(declare-fun x278 () Int)
(declare-fun x542 () Int)
(declare-fun x1458 () Bool)
(declare-fun x1172 () Int)
(declare-fun x910 () x603)
(declare-fun x62 (Int) Int)
(declare-fun x403 () Int)
(declare-fun x409 () Bool)
(declare-fun x497 () Bool)
(declare-fun x836 () Bool)
(declare-fun x1513 () Int)
(declare-fun x936 () Bool)
(declare-fun x1016 (x603) Int)
(declare-fun x1536 () Int)
(declare-fun x1415 () Bool)
(declare-fun x505 () Int)
(declare-fun x1404 () Int)
(declare-fun x1501 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x666 () Int)
(declare-fun x53 () Bool)
(declare-fun x964 () Bool)
(declare-fun x101 () Bool)
(declare-fun x1075 () Int)
(declare-fun x388 () Int)
(declare-fun x822 () Int)
(declare-fun x1425 () x603)
(declare-fun x46 () Int)
(declare-fun x567 () x603)
(declare-fun x798 () x603)
(declare-fun x1463 () x603)
(declare-fun x1468 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x175 () Int)
(declare-fun x1190 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x963 () Int)
(declare-fun x1421 () Int)
(declare-fun x281 () Int)
(declare-fun x588 () Int)
(declare-fun x653 () Bool)
(declare-fun x527 () x603)
(declare-fun x1217 () Int)
(declare-fun x1053 () Int)
(declare-fun x590 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x576 () Int)
(declare-fun x374 () Int)
(declare-fun x951 () Bool)
(declare-fun x1274 () Int)
(declare-fun x539 () Int)
(declare-fun x958 (Int) Int)
(declare-fun x573 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x712 () x603)
(declare-fun x578 () Int)
(declare-fun x289 () Int)
(declare-fun x1341 (Int) Int)
(declare-fun x437 () Bool)
(declare-fun x1553 () x603)
(declare-fun x1210 () Bool)
(declare-fun x1091 () Int)
(declare-fun x1121 () Bool)
(declare-fun x888 () x603)
(declare-fun x1161 () Bool)
(declare-fun x1024 (x603) Int)
(declare-fun x865 () Bool)
(declare-fun x173 () Bool)
(declare-fun x420 () Bool)
(declare-fun x879 () Int)
(declare-fun x452 () Bool)
(declare-fun x1524 () Int)
(declare-fun x35 () Bool)
(declare-fun x1428 () Int)
(declare-fun x163 () Int)
(declare-fun x496 (Int) Int)
(declare-fun x1065 () Bool)
(declare-fun x369 (x603) Int)
(declare-fun x450 () Int)
(declare-fun x259 () Int)
(declare-fun x856 () Int)
(declare-fun x1471 () Int)
(declare-fun x1104 () Bool)
(declare-fun x367 () Int)
(declare-fun x635 () Int)
(declare-fun x1440 () Int)
(declare-fun x552 () x603)
(declare-fun x1007 (Int) Int)
(declare-fun x893 () Bool)
(declare-fun x901 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x1045 () Int)
(declare-fun x1571 () Int)
(declare-fun x1180 () Bool)
(declare-fun x759 () Int)
(declare-fun x129 () Int)
(declare-fun x771 () Int)
(declare-fun x513 () Int)
(declare-fun x1448 (x603) Int)
(declare-fun x670 () Int)
(declare-fun x690 () Int)
(declare-fun x1208 () x603)
(declare-fun x1216 () Int)
(declare-fun x254 () Bool)
(declare-fun x678 () Bool)
(declare-fun x711 () Bool)
(declare-fun x1402 () Int)
(declare-fun x174 () x603)
(declare-fun x144 () Int)
(declare-fun x1293 () x603)
(declare-fun x1432 () Int)
(declare-fun x1316 () Int)
(declare-fun x1388 () Bool)
(declare-fun x1487 () Int)
(declare-fun x1539 () Int)
(declare-fun x1191 () Bool)
(declare-fun x1209 () Int)
(declare-fun x154 () Int)
(declare-fun x1148 () Int)
(declare-fun x134 () Int)
(declare-fun x256 () Int)
(declare-fun x1498 () Bool)
(declare-fun x734 () Int)
(declare-fun x904 () Int)
(declare-fun x714 () Int)
(declare-fun x143 () Int)
(declare-fun x1363 (x603) Int)
(declare-fun x1470 () Int)
(declare-fun x253 () Bool)
(declare-fun x924 () Bool)
(declare-fun x1391 () Int)
(declare-fun x1544 () x603)
(declare-fun x866 () Int)
(declare-fun x16 (Int Int) Int)
(declare-fun x674 () Bool)
(declare-fun x950 () Int)
(declare-fun x257 () Int)
(declare-fun x1246 () Int)
(declare-fun x1477 () x603)
(declare-fun x42 () Int)
(declare-fun x383 () Int)
(declare-fun x88 () x603)
(declare-fun x790 () x603)
(declare-fun x549 () Int)
(declare-fun x947 () Bool)
(declare-fun x157 () Int)
(declare-fun x1265 () Bool)
(declare-fun x1080 () x603)
(declare-fun x370 () Int)
(declare-fun x1088 () x603)
(declare-fun x1273 () Int)
(declare-fun x1394 () x603)
(declare-fun x1027 () Bool)
(declare-fun x741 () Int)
(declare-fun x961 () x603)
(declare-fun x1290 () x603)
(declare-fun x21 () Int)
(declare-fun x471 () x603)
(declare-fun x1397 () Int)
(declare-fun x372 () Bool)
(declare-fun x1550 () x603)
(declare-fun x348 () Bool)
(declare-fun x352 () Int)
(declare-fun x164 () Int)
(declare-fun x640 () Int)
(declare-fun x686 () Bool)
(declare-fun x840 () Int)
(declare-fun x307 () Bool)
(declare-fun x1392 () Int)
(declare-fun x939 () Int)
(declare-fun x130 () Int)
(declare-fun x1138 () Int)
(declare-fun x246 () Int)
(declare-fun x1109 () Int)
(declare-fun x1070 () Bool)
(declare-fun x441 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x830 () Int)
(declare-fun x406 () Int)
(declare-fun x1014 () x603)
(declare-fun x1220 () Int)
(declare-fun x1089 () Int)
(declare-fun x929 (Int) Int)
(declare-fun x353 () Int)
(declare-fun x1072 () Int)
(declare-fun x1570 () Int)
(declare-fun x1030 () Int)
(declare-fun x1041 () Int)
(declare-fun x874 () Int)
(declare-fun x102 () Bool)
(declare-fun x1413 () x603)
(declare-fun x1453 () Int)
(declare-fun x765 () Bool)
(declare-fun x354 () Int)
(declare-fun x99 () x603)
(declare-fun x639 () x603)
(declare-fun x1396 (Int) Int)
(declare-fun x807 () x603)
(declare-fun x611 () Bool)
(declare-fun x846 () x603)
(declare-fun x1252 () Int)
(declare-fun x1289 () Int)
(declare-fun x862 () Bool)
(declare-fun x1422 () Int)
(declare-fun x692 () Int)
(declare-fun x56 () Int)
(declare-fun x855 () Int)
(declare-fun x47 () x603)
(declare-fun x683 () Bool)
(declare-fun x1004 () Int)
(declare-fun x1515 () x603)
(declare-fun x523 () Int)
(declare-fun x665 () Bool)
(declare-fun x560 () Int)
(declare-fun x231 () Bool)
(declare-fun x792 () Int)
(declare-fun x213 () Bool)
(declare-fun x730 () Bool)
(declare-fun x1324 () Int)
(declare-fun x736 () Bool)
(declare-fun x612 () Int)
(declare-fun x1082 () Int)
(declare-fun x744 () Bool)
(declare-fun x932 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x41 () Bool)
(declare-fun x293 () Int)
(declare-fun x938 (x603) Int)
(declare-fun x1545 () x603)
(declare-fun x8 () Int)
(declare-fun x1181 () Int)
(declare-fun x1368 () Bool)
(declare-fun x839 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x368 () Int)
(declare-fun x1516 () Int)
(declare-fun x1203 () Bool)
(declare-fun x1256 () Int)
(declare-fun x1093 () Bool)
(declare-fun x272 () Int)
(declare-fun x799 () x603)
(declare-fun x282 () Int)
(declare-fun x1167 () Bool)
(declare-fun x959 () x603)
(declare-fun x262 () Int)
(declare-fun x1223 () Int)
(declare-fun x1139 () Int)
(declare-fun x761 () Bool)
(declare-fun x544 () Int)
(declare-fun x1460 () Int)
(declare-fun x1554 () Int)
(declare-fun x86 () Bool)
(declare-fun x475 () Int)
(declare-fun x1511 () Int)
(declare-fun x328 () x603)
(declare-fun x190 () Int)
(declare-fun x1047 () Bool)
(declare-fun x476 () Int)
(declare-fun x285 () Bool)
(declare-fun x92 () Bool)
(declare-fun x789 () x603)
(declare-fun x852 () Int)
(declare-fun x139 () Bool)
(declare-fun x740 () Int)
(declare-fun x735 () x603)
(declare-fun x1559 () Bool)
(declare-fun x181 () x603)
(declare-fun x292 () Int)
(declare-fun x1197 () Int)
(declare-fun x1079 () Int)
(declare-fun x414 () Int)
(declare-fun x658 (x603) Int)
(declare-fun x191 () Int)
(declare-fun x1367 () Bool)
(declare-fun x80 (x603) Int)
(declare-fun x115 () Int)
(declare-fun x581 () Int)
(declare-fun x123 () Int)
(declare-fun x616 (x603) Int)
(declare-fun x1018 () Int)
(declare-fun x211 () Bool)
(declare-fun x1407 () Int)
(declare-fun x116 () Int)
(declare-fun x275 () Bool)
(declare-fun x488 () Int)
(declare-fun x1529 () Bool)
(declare-fun x1108 () Int)
(declare-fun x902 () Bool)
(declare-fun x633 () x603)
(declare-fun x800 () Bool)
(declare-fun x550 () Int)
(declare-fun x364 () Int)
(declare-fun x1170 () Int)
(declare-fun x599 () Int)
(declare-fun x273 () Int)
(declare-fun x745 () Int)
(declare-fun x493 () x603)
(declare-fun x1033 () Int)
(declare-fun x1248 () Bool)
(declare-fun x1241 () Bool)
(declare-fun x636 () Int)
(declare-fun x1378 () Int)
(declare-fun x793 () Int)
(declare-fun x835 () Bool)
(declare-fun x1227 () Int)
(declare-fun x1373 () Int)
(declare-fun x1300 () Bool)
(declare-fun x302 () Bool)
(declare-fun x770 () x603)
(declare-fun x928 () Bool)
(declare-fun x1310 () Int)
(declare-fun x49 () Bool)
(declare-fun x466 () Int)
(declare-fun x1530 () Bool)
(declare-fun x926 () x603)
(declare-fun x1228 () Int)
(declare-fun x252 () Bool)
(declare-fun x1086 () Int)
(declare-fun x749 () x603)
(declare-fun x1204 () x603)
(declare-fun x322 () Bool)
(declare-fun x239 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x1160 () x603)
(declare-fun x454 () Int)
(declare-fun x1111 () Bool)
(declare-fun x845 () Int)
(declare-fun x1342 () Int)
(declare-fun x106 () Int)
(declare-fun x1532 () Int)
(declare-fun x1 () x603)
(declare-fun x1469 () Int)
(declare-fun x1259 () Int)
(declare-fun x993 () Bool)
(declare-fun x1542 () Int)
(declare-fun x1054 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x758 () Bool)
(declare-fun x1485 () Int)
(declare-fun x1362 () Int)
(declare-fun x1497 () Bool)
(declare-fun x189 () Bool)
(declare-fun x1525 () x603)
(declare-fun x694 () x603)
(declare-fun x1464 () Bool)
(declare-fun x110 () Int)
(declare-fun x1225 () Bool)
(declare-fun x1142 () Int)
(declare-fun x747 () x603)
(declare-fun x1038 () Bool)
(declare-fun x1213 () x603)
(declare-fun x1090 () Bool)
(declare-fun x720 () Bool)
(declare-fun x434 () Int)
(declare-fun x1211 () Int)
(declare-fun x1163 () Int)
(declare-fun x1505 () Int)
(declare-fun x556 () Bool)
(declare-fun x632 () Int)
(declare-fun x1305 (x603) Int)
(declare-fun x195 () Int)
(declare-fun x478 () Int)
(declare-fun x532 () Bool)
(declare-fun x151 () x603)
(declare-fun x906 () Int)
(declare-fun x30 () Int)
(declare-fun x882 () x603)
(declare-fun x453 () Int)
(declare-fun x1048 () Int)
(declare-fun x627 () Int)
(declare-fun x438 () Int)
(declare-fun x24 () Bool)
(declare-fun x575 () Int)
(declare-fun x419 () Int)
(declare-fun x861 () Int)
(declare-fun x568 () Bool)
(declare-fun x1249 () Int)
(declare-fun x881 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x667 () Int)
(declare-fun x817 () Int)
(declare-fun x131 () x603)
(declare-fun x572 () Int)
(declare-fun x1264 () x603)
(declare-fun x1446 () x603)
(declare-fun x880 () Int)
(declare-fun x661 () Int)
(declare-fun x1494 () Int)
(declare-fun x773 (x603) Int)
(declare-fun x918 () Int)
(declare-fun x74 () Int)
(declare-fun x755 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x470 () Int)
(declare-fun x754 () Int)
(declare-fun x1133 () Bool)
(declare-fun x58 () Int)
(declare-fun x188 () x603)
(declare-fun x2 () Int)
(declare-fun x326 () Int)
(declare-fun x794 () Int)
(declare-fun x177 () Int)
(declare-fun x553 () Int)
(declare-fun x1548 () x603)
(declare-fun x833 () Int)
(declare-fun x1528 (Int) Int)
(declare-fun x225 () Int)
(declare-fun x696 () x603)
(declare-fun x1506 () Int)
(declare-fun x1451 () Int)
(declare-fun x180 () Int)
(declare-fun x791 () Int)
(declare-fun x356 () Bool)
(declare-fun x1535 () Int)
(declare-fun x54 () Bool)
(declare-fun x400 () x603)
(declare-fun x564 () x603)
(declare-fun x805 () Bool)
(declare-fun x785 () Int)
(declare-fun x1417 () Int)
(declare-fun x952 () Int)
(declare-fun x308 () Int)
(declare-fun x335 () Int)
(declare-fun x118 () Int)
(declare-fun x977 () Bool)
(declare-fun x510 () x603)
(declare-fun x468 () Bool)
(declare-fun x430 () Int)
(declare-fun x1032 () Int)
(declare-fun x1129 () x603)
(declare-fun x1237 () Bool)
(declare-fun x864 () x603)
(declare-fun x857 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x37 () Int)
(declare-fun x9 () Int)
(declare-fun x39 () Int)
(declare-fun x1134 () x603)
(declare-fun x569 () Bool)
(declare-fun x433 () Int)
(declare-fun x1001 () Int)
(declare-fun x1074 () Int)
(declare-fun x657 () Int)
(declare-fun x380 () Int)
(declare-fun x1116 () Int)
(declare-fun x432 () Bool)
(declare-fun x1478 () Int)
(declare-fun x212 () Int)
(declare-fun x1353 () x603)
(declare-fun x1320 () Int)
(declare-fun x530 () Int)
(declare-fun x224 () Int)
(declare-fun x1534 () x603)
(declare-fun x903 () Bool)
(declare-fun x859 () x603)
(declare-fun x600 () Bool)
(declare-fun x472 () Int)
(declare-fun x241 () x603)
(declare-fun x95 () Int)
(declare-fun x1164 () Bool)
(declare-fun x200 () Int)
(declare-fun x107 () Int)
(declare-fun x1563 () Bool)
(declare-fun x455 () Int)
(declare-fun x1543 () Int)
(declare-fun x1113 () Bool)
(declare-fun x489 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x1034 () Int)
(declare-fun x704 () x603)
(declare-fun x803 () Bool)
(declare-fun x1416 () Int)
(declare-fun x402 () Bool)
(declare-fun x184 () Bool)
(declare-fun x1349 () Int)
(declare-fun x1467 () x603)
(declare-fun x1389 () Int)
(declare-fun x331 () Bool)
(declare-fun x1519 () Int)
(declare-fun x460 () Bool)
(declare-fun x344 () Int)
(declare-fun x597 () Int)
(declare-fun x358 () Bool)
(declare-fun x1195 () Int)
(declare-fun x1102 () Int)
(declare-fun x1393 () x603)
(declare-fun x518 () Int)
(declare-fun x1149 () Int)
(declare-fun x1060 () Bool)
(declare-fun x1420 () Int)
(declare-fun x1306 () x603)
(declare-fun x1267 () Int)
(declare-fun x782 () x603)
(declare-fun x614 () x603)
(declare-fun x233 () Int)
(declare-fun x83 () Int)
(declare-fun x1441 () x603)
(declare-fun x1303 () Int)
(declare-fun x1304 () Int)
(declare-fun x989 () Int)
(declare-fun x209 () x603)
(declare-fun x837 () Int)
(declare-fun x70 () x603)
(declare-fun x1226 () x603)
(declare-fun x276 () Int)
(declare-fun x503 () x603)
(declare-fun x1136 () Bool)
(declare-fun x217 () Bool)
(declare-fun x284 () Bool)
(declare-fun x1488 () Int)
(declare-fun x1437 () Bool)
(declare-fun x884 () Bool)
(declare-fun x94 () Int)
(declare-fun x891 () Int)
(declare-fun x345 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x1561 () Int)
(declare-fun x1430 () Bool)
(declare-fun x378 () Int)
(declare-fun x937 () Bool)
(declare-fun x1489 () Int)
(declare-fun x1012 () Int)
(declare-fun x78 () Int)
(declare-fun x1135 () Bool)
(declare-fun x1029 () Int)
(declare-fun x1345 () Int)
(declare-fun x980 () Int)
(declare-fun x1325 () x603)
(declare-fun x1025 () Bool)
(declare-fun x29 () x603)
(declare-fun x841 () Bool)
(declare-fun x615 () x603)
(declare-fun x366 () Int)
(declare-fun x153 () Bool)
(declare-fun x829 () Int)
(declare-fun x1085 () Bool)
(declare-fun x1356 () Int)
(declare-fun x522 () Int)
(declare-fun x729 () Bool)
(declare-fun x1188 () x603)
(declare-fun x274 () Bool)
(declare-fun x31 () Int)
(declare-fun x50 () Bool)
(declare-fun x1023 () Bool)
(declare-fun x1508 (Int) x603)
(declare-fun x1531 () Bool)
(declare-fun x85 () x603)
(declare-fun x320 () Int)
(declare-fun x986 () Bool)
(declare-fun x702 () Bool)
(declare-fun x69 () Int)
(declare-fun x247 () Int)
(declare-fun x648 () Int)
(declare-fun x235 () Int)
(declare-fun x244 () Int)
(declare-fun x788 () Int)
(declare-fun x145 () Bool)
(declare-fun x162 () x603)
(declare-fun x82 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x480 () Int)
(declare-fun x232 () Int)
(declare-fun x557 () Bool)
(declare-fun x301 () Bool)
(declare-fun x264 () x603)
(declare-fun x1375 () Int)
(declare-fun x998 () Bool)
(declare-fun x797 () Bool)
(declare-fun x167 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x484 () x603)
(declare-fun x427 () Int)
(declare-fun x288 () x603)
(declare-fun x679 () Int)
(declare-fun x1449 () Int)
(declare-fun x733 () x603)
(declare-fun x913 () x603)
(declare-fun x827 () Int)
(declare-fun x571 () Int)
(declare-fun x297 () Bool)
(declare-fun x897 () Bool)
(declare-fun x1166 () Int)
(declare-fun x1282 () Bool)
(declare-fun x561 () Int)
(declare-fun x965 () Bool)
(declare-fun x1152 () Int)
(declare-fun x954 () Bool)
(declare-fun x1398 () Int)
(declare-fun x1254 () Bool)
(declare-fun x494 () x603)
(declare-fun x113 () Int)
(declare-fun x1236 () Int)
(declare-fun x319 () Int)
(declare-fun x890 () Bool)
(declare-fun x806 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x991 () Int)
(declare-fun x379 () Int)
(declare-fun x332 () Bool)
(declare-fun x1003 () x603)
(declare-fun x781 () Bool)
(declare-fun x220 () Bool)
(declare-fun x1100 () x603)
(declare-fun x250 () Int)
(declare-fun x448 () Bool)
(declare-fun x63 () Int)
(declare-fun x210 () Int)
(declare-fun x1484 () Int)
(declare-fun x1495 () Bool)
(declare-fun x808 () Bool)
(declare-fun x1538 () x603)
(declare-fun x1313 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x654 () Int)
(declare-fun x1037 () Bool)
(declare-fun x183 () Int)
(declare-fun x883 () Int)
(declare-fun x1247 () Bool)
(declare-fun x1399 () Int)
(declare-fun x170 () x603)
(declare-fun x1343 () Int)
(declare-fun x1162 () Bool)
(declare-fun x10 (Int) Int)
(declare-fun x436 () Int)
(declare-fun x1242 () x603)
(declare-fun x810 () x603)
(declare-fun x1011 () Int)
(declare-fun x1169 () Bool)
(declare-fun x446 () Int)
(declare-fun x146 () Int)
(declare-fun x186 () Bool)
(declare-fun x404 () Bool)
(declare-fun x1318 () x603)
(declare-fun x1510 () x603)
(declare-fun x465 () Int)
(declare-fun x243 () Bool)
(declare-fun x813 () Int)
(declare-fun x148 () x603)
(declare-fun x1331 () Int)
(declare-fun x697 () Int)
(declare-fun x424 () Bool)
(declare-fun x93 () Int)
(declare-fun x853 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x140 () Int)
(declare-fun x762 () x603)
(declare-fun x481 () Int)
(declare-fun x1291 () Int)
(declare-fun x1360 () Int)
(declare-fun x563 () Bool)
(declare-fun x713 () Int)
(declare-fun x479 () Int)
(declare-fun x634 () Bool)
(declare-fun x768 () x603)
(declare-fun x346 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x23 () Int)
(declare-fun x795 () Int)
(declare-fun x349 () Bool)
(declare-fun x135 () Int)
(declare-fun x304 () Int)
(declare-fun x270 () x603)
(declare-fun x401 () Bool)
(declare-fun x849 () x603)
(declare-fun x1443 () Int)
(declare-fun x160 () Int)
(declare-fun x399 () Bool)
(declare-fun x898 () Int)
(declare-fun x1447 () x603)
(declare-fun x878 () Bool)
(declare-fun x238 (x603) Int)
(declare-fun x815 () Bool)
(declare-fun x814 () x603)
(declare-fun x1509 () Int)
(declare-fun x1412 () Int)
(declare-fun x1410 () x603)
(declare-fun x548 () Bool)
(declare-fun x1465 () Bool)
(declare-fun x1275 () Int)
(declare-fun x456 () x603)
(declare-fun x1057 (Int) Int)
(declare-fun x371 () Int)
(declare-fun x66 () Int)
(declare-fun x551 () x603)
(declare-fun x607 () Int)
(declare-fun x1340 () Int)
(declare-fun x1366 () Int)
(declare-fun x1294 () Bool)
(declare-fun x491 () Int)
(declare-fun x693 () Bool)
(declare-fun x684 () x603)
(declare-fun x618 () Int)
(declare-fun x1414 () Int)
(declare-fun x1176 () Int)
(declare-fun x509 () Int)
(declare-fun x1526 () x603)
(declare-fun x1055 () Int)
(declare-fun x55 () Int)
(declare-fun x1071 () Int)
(declare-fun x664 () x603)
(declare-fun x68 () Bool)
(declare-fun x310 () Int)
(declare-fun x826 () Bool)
(declare-fun x165 () Int)
(declare-fun x1046 () Int)
(declare-fun x40 () Int)
(declare-fun x360 () x603)
(declare-fun x407 () Int)
(declare-fun x638 () x603)
(declare-fun x305 () Bool)
(declare-fun x999 () Int)
(declare-fun x327 () Int)
(declare-fun x995 () Int)
(declare-fun x219 () Int)
(declare-fun x71 () Int)
(declare-fun x201 () Int)
(declare-fun x363 () x603)
(declare-fun x1445 () Bool)
(declare-fun x1359 () x603)
(declare-fun x1333 () Int)
(declare-fun x536 () Int)
(declare-fun x1384 () Int)
(declare-fun x1380 () Int)
(declare-fun x508 () x603)
(declare-fun x1130 () Bool)
(declare-fun x650 () Bool)
(declare-fun x234 () Bool)
(declare-fun x7 () Int)
(declare-fun x716 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x1036 () Int)
(declare-fun x397 () Int)
(declare-fun x1005 () x603)
(declare-fun x343 () Int)
(declare-fun x625 () Int)
(declare-fun x421 () Int)
(declare-fun x1285 () x603)
(declare-fun x778 () Int)
(declare-fun x1035 () Int)
(declare-fun x193 () Int)
(declare-fun x215 (Int) Int)
(declare-fun x464 () x603)
(declare-fun x843 () Int)
(declare-fun x1355 () Int)
(declare-fun x823 () Int)
(declare-fun x511 () Int)
(declare-fun x152 () Bool)
(declare-fun x33 () Int)
(declare-fun x337 (Int) Int)
(declare-fun x1127 () Bool)
(declare-fun x1400 () x603)
(declare-fun x216 () Bool)
(declare-fun x314 () Int)
(declare-fun x229 () Bool)
(declare-fun x842 () x603)
(declare-fun x1081 () x603)
(declare-fun x355 () Int)
(declare-fun x1431 () Int)
(declare-fun x1143 () Int)
(declare-fun x1040 () x603)
(declare-fun x79 () Bool)
(declare-fun x756 () Int)
(declare-fun x11 (x603) Int)
(declare-fun x61 () Int)
(declare-fun x249 () Int)
(declare-fun x300 () Bool)
(declare-fun x1137 () Int)
(declare-fun x629 () Int)
(declare-fun x613 () Int)
(declare-fun x507 () x603)
(declare-fun x969 () Int)
(declare-fun x624 () Int)
(declare-fun x1178 () x603)
(declare-fun x1296 () Int)
(declare-fun x708 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x1555 (x603) Int)
(declare-fun x361 () Bool)
(declare-fun x1492 () Int)
(define-fun x67 ((x603 x603) (x1078 Int)) x603 (ite ((_ is x894) x603) (x894 (x1336 x603) (+ x1078 (x1401 x603))) (ite ((_ is x128) x603) (x128 (x1184 x603) (x1346 x603) (+ (x1059 x603) x1078)) (x336 (+ x1078 (x1026 x603))))))
(define-fun x81 ((x32 Int)) Int (ite (and (< x32 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x32)) x32 (- x32 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1315 ((x32 Int)) Int (ite (and (>= x32 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x32 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x32) x32))
(define-fun x537 ((x1280 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1280) (>= x1280 0)))
(define-fun x121 ((x1280 Int)) Bool (and (= (x580 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1280) x1280) (= x1280 (x580 x1280 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x449 ((x1280 Int)) Bool (and (= 0 (x580 0 x1280)) (= (x580 x1280 0) 0)))
(define-fun x521 ((x1280 Int)) Bool (= x1280 (x580 x1280 x1280)))
(define-fun x1147 ((x1280 Int)) Bool (and (x449 x1280) (x121 x1280) (x521 x1280)))
(define-fun x1115 ((x1280 Int)) Bool (= (x580 1461501637330902918203684832716283019655932542975 (x580 1461501637330902918203684832716283019655932542975 x1280)) (x580 1461501637330902918203684832716283019655932542975 x1280)))
(define-fun x920 ((x1280 Int)) Bool (=> (and (< x1280 1461501637330902918203684832716283019655932542976) (>= x1280 0)) (= x1280 (x580 1461501637330902918203684832716283019655932542975 x1280))))
(define-fun x1491 ((x1280 Int)) Bool (=> (= (x580 1461501637330902918203684832716283019655932542975 x1280) x1280) (and (< x1280 1461501637330902918203684832716283019655932542976) (<= 0 x1280))))
(define-fun x533 ((x1280 Int)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x1280) (>= x1280 1461501637330902918203684832716283019655932542976)) (= (x580 1461501637330902918203684832716283019655932542975 x1280) (- x1280 1461501637330902918203684832716283019655932542976))))
(define-fun x1552 ((x1280 Int) (x801 Int)) Bool (and (= x1280 (+ (x580 1461501637330902918203684832716283019655932542975 x1280) (* 1461501637330902918203684832716283019655932542976 x801))) (>= x801 0)))
(define-fun x13 ((x1280 Int) (x831 Int)) Bool (and (x920 x1280) (x533 x1280) (x1552 x1280 x831) (x1491 x1280) (x1115 x1280)))
(define-fun x933 ((x1280 Int) (x801 Int)) Bool (= (x580 x1280 x801) (x580 x801 x1280)))
(define-fun x290 ((x1280 Int) (x801 Int)) Bool (and (=> (<= 0 x1280) (<= (x580 x1280 x801) x1280)) (<= 0 (x580 x1280 x801)) (=> (>= x801 0) (<= (x580 x1280 x801) x801))))
(define-fun x1332 ((x1280 Int) (x801 Int)) Bool (and (x933 x1280 x801) (x290 x1280 x801)))
(define-fun x838 ((x1280 Int) (x831 Int)) Bool (and (x13 x1280 x831) (x1332 x1280 1461501637330902918203684832716283019655932542975)))
(define-fun x642 ((x1280 Int)) Bool (= (x580 26959946667150639794667015087019630673637144422540572481103610249215 x1280) (x580 26959946667150639794667015087019630673637144422540572481103610249215 (x580 26959946667150639794667015087019630673637144422540572481103610249215 x1280))))
(define-fun x751 ((x1280 Int)) Bool (=> (and (>= x1280 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1280)) (= (x580 26959946667150639794667015087019630673637144422540572481103610249215 x1280) x1280)))
(define-fun x296 ((x1280 Int)) Bool (=> (= (x580 26959946667150639794667015087019630673637144422540572481103610249215 x1280) x1280) (and (>= x1280 0) (< x1280 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x1240 ((x1280 Int)) Bool (=> (and (> 53919893334301279589334030174039261347274288845081144962207220498432 x1280) (<= 26959946667150639794667015087019630673637144422540572481103610249216 x1280)) (= (x580 26959946667150639794667015087019630673637144422540572481103610249215 x1280) (- x1280 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x832 ((x1280 Int) (x801 Int)) Bool (and (<= 0 x801) (= (+ (* x801 26959946667150639794667015087019630673637144422540572481103610249216) (x580 26959946667150639794667015087019630673637144422540572481103610249215 x1280)) x1280)))
(define-fun x316 ((x1280 Int) (x831 Int)) Bool (and (x296 x1280) (x642 x1280) (x832 x1280 x831) (x1240 x1280) (x751 x1280)))
(define-fun x593 ((x1280 Int) (x831 Int)) Bool (and (x1332 x1280 26959946667150639794667015087019630673637144422540572481103610249215) (x316 x1280 x831)))
(define-fun x512 ((x1280 Int)) Bool (= (x580 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x580 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1280)) (x580 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1280)))
(define-fun x1302 ((x1280 Int)) Bool (=> (and (<= 0 x1280) (> 32 x1280)) (= (x580 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1280) 0)))
(define-fun x1383 ((x1280 Int) (x801 Int) (x1117 Int) (x727 Int)) Bool (and (>= x727 0) (< x727 1) (< x801 32) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x1117) (= x1280 (+ x801 (* 32 x1117) (* x727 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (>= x801 0) (<= 0 x1117) (= (* 32 x1117) (x580 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1280))))
(define-fun x858 ((x1280 Int) (x1406 Int) (x445 Int) (x1424 Int)) Bool (and (x1302 x1280) (x1383 x1280 x1406 x445 x1424) (x512 x1280)))
(define-fun x637 ((x1280 Int) (x1406 Int) (x445 Int) (x1424 Int)) Bool (and (x858 x1280 x1406 x445 x1424) (x1332 x1280 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x260 ((x485 Int)) Int (x955 x485))
(define-fun x230 ((x485 Int)) Int (ite (= 128 x485) x1151 (x62 x485)))
(define-fun x671 ((x485 Int)) Int (ite (and (<= 160 x485) (> (+ 160 x196) x485)) (x955 (+ x1517 (- x485 160))) (x230 x485)))
(define-fun x77 ((x485 Int)) Int (ite (= x530 x485) 0 (x671 x485)))
(define-fun x1119 ((x485 Int)) Int (ite (and (> (+ x1301 x338) x485) (>= x485 x338)) (x955 (+ (- x485 x338) x1433)) (x1261 x485)))
(define-fun x899 ((x485 x603)) Int (ite (= x485 x696) x949 (x1305 x485)))
(define-fun x1408 ((x485 x603)) Int (ite (= x485 x429) x949 (x1305 x485)))
(define-fun x1233 ((x485 x603)) Int (ite (= x485 x431) x949 (x347 x485)))
(define-fun x1473 ((x485 x603)) Int (ite (= x485 x1003) x949 (x347 x485)))
(define-fun x1235 ((x485 x603)) Int (ite (and x325 x447) (x347 x485) (ite (and x908 x139) (x1305 x485) (ite (and (not x538) x1286) (x1233 x485) (x1473 x485)))))
(define-fun x812 ((x485 x603)) Int (ite (= x485 x551) x19 (x773 x485)))
(define-fun x205 ((x485 x603)) Int (ite (= x592 x485) x39 (x238 x485)))
(define-fun x809 ((x485 x603)) Int (ite (and x1286 (not x538)) (x205 x485) (x238 x485)))
(define-fun x1347 ((x485 x603)) Int (ite (and x325 x447) (x238 x485) (ite (and x908 x139) (x773 x485) (x809 x485))))
(define-fun x1107 ((x485 x603)) Int (ite (= x1308 x485) x247 (x1448 x485)))
(define-fun x375 ((x485 x603)) Int (ite (= x1477 x485) x944 (x938 x485)))
(define-fun x251 ((x485 x603)) Int (ite (and x325 x447) (x938 x485) (ite (and x139 x908) (x1448 x485) (ite (and x59 x1286) (x938 x485) (x375 x485)))))
(define-fun x203 ((x485 x603)) Int (ite (= x471 x485) x949 (x1016 x485)))
(define-fun x474 ((x485 x603)) Int (ite (= x132 x485) x949 (x1016 x485)))
(define-fun x1436 ((x485 x603)) Int (ite (= x485 x1537) x949 (x1016 x485)))
(define-fun x1387 ((x485 x603)) Int (ite (= x735 x485) x949 (x298 x485)))
(define-fun x545 ((x485 x603)) Int (ite (= x985 x485) x949 (x298 x485)))
(define-fun x1067 ((x485 x603)) Int (ite (= x485 x1467) x949 (x298 x485)))
(define-fun x412 ((x485 x603)) Int (ite (and x447 x325) (x298 x485) (ite (and x139 x908) (x1016 x485) (ite (and (not x945) (not x568) x1241) (x1387 x485) (ite (and x568 x1241 (not x945)) (x545 x485) (x1067 x485))))))
(define-fun x248 ((x485 x603)) Int (ite (= x151 x485) x1077 (x80 x485)))
(define-fun x652 ((x485 x603)) Int (ite (= x974 x485) x529 (x1363 x485)))
(define-fun x387 ((x485 x603)) Int (ite (and x447 x325) (x1363 x485) (ite (and x908 x139) (x80 x485) (ite (and x402 x1241) (x1363 x485) (x652 x485)))))
(define-fun x1243 ((x485 x603)) Int (ite (= x485 x926) x1246 (x1452 x485)))
(define-fun x1514 ((x485 x603)) Int (ite (= x485 x1242) x1296 (x1461 x485)))
(define-fun x96 ((x485 x603)) Int (ite (and (not x945) x1241 (not x568)) (x1514 x485) (x1461 x485)))
(define-fun x417 ((x485 x603)) Int (ite (and x447 x325) (x1461 x485) (ite (and x139 x908) (x1452 x485) (x96 x485))))
(define-fun x1371 ((x485 x603)) Int (ite (= x1134 x485) x303 (x1547 x485)))
(define-fun x983 ((x485 x603)) Int (ite (= x1548 x485) x1170 (x867 x485)))
(define-fun x1068 ((x485 x603)) Int (ite (and x325 x447) (x11 x485) (ite (and x139 x908) (x1024 x485) (ite (and (not x234) (not x424) x1286 x1458) (x867 x485) (ite (and x1286 (not x234) (not x1458)) (x11 x485) (ite (and x234 x1286) (x11 x485) (x983 x485)))))))
(define-fun x161 ((x485 Int)) Int (ite (= x485 x688) x21 (x1528 x485)))
(define-fun x610 ((x485 Int)) Int (ite (= x485 x585) x193 (x161 x485)))
(define-fun x426 ((x485 Int)) Int (ite (and x101 x878) (x1528 x485) (x610 x485)))
(define-fun x554 ((x485 Int)) Int (ite (= x374 x485) x236 (x426 x485)))
(define-fun x142 ((x485 Int)) Int (ite (= x485 x645) x353 (x871 x485)))
(define-fun x1165 ((x485 Int)) Int (ite (= x485 x960) x1176 (x1057 x485)))
(define-fun x1474 ((x485 Int)) Int (ite (= x1109 x485) x625 (x1165 x485)))
(define-fun x127 ((x485 Int)) Int (ite (and (not x945) (not x568) x1241) (x1474 x485) (ite (and (not x945) x568 x1241) (x1474 x485) (x1057 x485))))
(define-fun x757 ((x485 Int)) Int (ite (= x320 x485) x1266 (x127 x485)))
(define-fun x850 ((x485 Int)) Int (ite (= x967 x485) x1399 (x968 x485)))
(define-fun x1438 ((x485 Int)) Int (ite (and x447 x325) (x1057 x485) (ite (and x139 x908) (x1528 x485) (ite (and x1286 (not x424) (not x234) x1458) (x968 x485) (ite (and x1286 (not x234) (not x1458)) (x1007 x485) (ite (and x234 x1286) (x1007 x485) (x850 x485)))))))
(define-fun x461 ((x485 Int)) Int (ite (= x485 x292) x739 (x1438 x485)))
(define-fun x935 ((x485 Int)) Int (ite (= x485 x166) x1083 (x461 x485)))
(define-fun x700 ((x485 Int)) Int (ite (= x485 x134) x1397 (x935 x485)))
(define-fun x1377 ((x485 Int)) Int (ite (= x485 x87) x438 (x700 x485)))
(define-fun x1457 ((x485 Int)) Int (ite (= x485 x1227) 32 (x1377 x485)))
(define-fun x18 ((x485 Int)) Int (ite (= x485 x1524) x715 (x136 x485)))
(define-fun x1050 ((x485 Int)) Int (ite (= x208 x485) 0 (x929 x485)))
(define-fun x1339 ((x485 Int)) Int (ite (= x485 0) 1 (x10 x485)))
(define-fun x777 ((x485 Int)) Int (ite (= x485 0) 1 (x10 x485)))
(define-fun x990 ((x485 Int)) Int (ite (and x865 x1388) (x1339 x485) (x777 x485)))
(define-fun x435 ((x485 Int)) Int (ite (= x485 x309) x146 (x958 x485)))
(define-fun x126 ((x485 Int)) Int (ite (= x485 x309) x695 (x958 x485)))
(define-fun x1056 ((x485 Int)) Int (ite (= x309 x485) x767 (x334 x485)))
(define-fun x672 ((x485 Int)) Int (ite (and (<= x314 x485) (> (+ x767 x314) x485)) (x990 (+ 0 (- x485 x314))) (x1056 x485)))
(define-fun x1522 ((x485 Int)) Int (ite (and (not x1218) x760) (x672 x485) (x334 x485)))
(define-fun x1317 ((x485 Int)) Int (ite (= x415 x485) x1366 (x1522 x485)))
(define-fun x410 ((x485 Int)) Int (ite (= x1321 x485) x1304 (x1317 x485)))
(define-fun x28 ((x485 Int)) Int (ite (= x485 x223) x304 (x410 x485)))
(define-fun x1403 ((x485 Int)) Int (ite (= x485 x504) x759 (x28 x485)))
(define-fun x179 ((x485 Int)) Int (ite (= x485 x622) 32 (x1403 x485)))
(define-fun x917 ((x485 Int)) Int (ite (= x485 x1091) x83 (x534 x485)))
(define-fun x1374 ((x485 Int)) Int (ite (= x295 x485) 0 (x707 x485)))
(define-fun x976 ((x485 x603)) Int (ite (= x485 (x1508 274184521717934524641157099916833587206)) x1098 (x1493 x485)))
(define-fun x137 ((x485 x603)) Int (ite (= (x1508 x728) x485) x578 (x976 x485)))
(define-fun x619 ((x485 x603)) Int (ite (= x485 (x1508 x728)) x934 (x137 x485)))
(define-fun x323 ((x485 x603)) Int (ite (= (x1508 274184521717934524641157099916833587206) x485) x406 (x619 x485)))
(define-fun x887 ((x485 x603)) Int (ite (= (x1508 274184521717934524641157099916833587206) x485) x676 (x323 x485)))
(define-fun x750 ((x485 x603)) Int (ite (= (x1508 x1239) x485) x771 (x887 x485)))
(define-fun x294 ((x485 x603)) Int (ite (= x485 x684) x469 (x658 x485)))
(define-fun x1097 ((x485 x603)) Int (ite (= x485 x1202) x472 (x294 x485)))
(define-fun x1214 ((x485 x603)) Int (ite (and x1388 x865) (x1097 x485) (x658 x485)))
(define-fun x487 ((x485 x603)) Int (ite (= x1538 x485) x918 (x1214 x485)))
(define-fun x631 ((x485 Int)) Int (ite (= 0 x485) 1 (x422 x485)))
(define-fun x1215 ((x485 Int)) Int (ite (= x485 x278) x1031 (x337 x485)))
(define-fun x669 ((x485 x603)) Int (ite (= x485 x1515) x1412 (x1179 x485)))
(define-fun x763 ((x485 x603)) Int (ite (= x768 x485) x351 (x669 x485)))
(define-fun x766 ((x485 x603)) Int (ite (and x865 x1388) (x1179 x485) (x763 x485)))
(define-fun x1183 ((x485 x603)) Int (ite (= x485 x373) x1149 (x766 x485)))
(define-fun x706 ((x485 Int)) Int (ite (= x485 0) 1 (x422 x485)))
(define-fun x1358 ((x485 Int)) Int (ite (= x485 x278) x1256 (x337 x485)))
(define-fun x25 ((x485 Int)) Int (ite (and x1503 x881) (x631 x485) (x706 x485)))
(define-fun x834 ((x485 x603)) Int (ite (= (x1508 x1239) x485) x182 (x750 x485)))
(define-fun x240 ((x485 Int)) Int (ite (= x278 x485) x454 (x496 x485)))
(define-fun x1253 ((x485 Int)) Int (ite (and (< x485 (+ x454 x75)) (<= x75 x485)) (x25 (+ (- x485 x75) 0)) (x240 x485)))
(define-fun x1039 ((x485 Int)) Int (ite (and x748 x643) (x496 x485) (x1253 x485)))
(define-fun x1279 ((x1280 Int)) Bool (=> (and (not (= x1280 274184521717934524641157099916833587218)) (not (= 18446744073709551615 x1280)) (not (= 759532456 x1280)) (not (= x1280 635128645)) (not (= x1280 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1280 1968616202)) (not (= x1280 2532887486)) (not (= x1280 3123789364)) (not (= x1280 2743102681)) (not (= x1280 87118632)) (not (= 2960351575 x1280)) (not (= x1280 826074471)) (not (= 2514000705 x1280)) (not (= 604800 x1280)) (not (= 2418364589 x1280)) (not (= x1280 468353030)) (not (= x1280 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= x1280 2512682246)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1280)) (not (= 2258409472 x1280)) (not (= 2868243304 x1280)) (not (= x1280 2798343961)) (> x1280 10000) (not (= 911411945 x1280)) (not (= 2939843472 x1280)) (not (= 274184521717934524641157099916833587214 x1280)) (not (= x1280 274184521717934524641157099916833587206)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1280)) (not (= x1280 649617121)) (not (= x1280 1000000000000000000)) (not (= x1280 1986467848)) (not (= 2835717307 x1280)) (not (= 115792089237316195423570985008687907853269984665640564039457 x1280)) (not (= 2690754053 x1280)) (not (= 2211524764 x1280)) (not (= 2293535753 x1280)) (not (= 1517119036 x1280)) (not (= x1280 69947311)) (not (= x1280 1461501637330902918203684832716283019655932542975)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x1280)) (not (= 2061678023 x1280)) (not (= 2764855426 x1280)) (not (= x1280 142201243)) (not (= x1280 1889567281))) (not ((_ is x336) (x1508 x1280)))))
(assert (x537 x771))
(assert (= x555 (=> (and (= x1206 (< 0 x1451)) (= x1451 (x1315 (- x395 1)))) (and (=> (not x1206) x318) (=> x1206 x686)))))
(assert (x537 x879))
(assert (= x389 (x1555 (x1508 x389))))
(assert (= (x347 x1550) (ite (and x1529 x178) (x899 x1550) (x1408 x1550))))
(assert (x537 x526))
(assert (= (x1555 (x1508 x246)) x246))
(assert (= x779 (x1555 (x1508 x779))))
(assert (= (x336 2418364589) (x1508 2418364589)))
(assert (x537 x378))
(assert (x537 x1075))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x654) (= x78 x791) (= x1252 (x616 (x1508 274184521717934524641157099916833587206))) (not (= x502 2293535753)) (not (< x502 2293535753)) (> 2960351575 x502) (<= x78 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2418364589 x502)) (= (x128 (x1508 x46) x615 0) x493) (< 0 x1252) (<= x46 1461501637330902918203684832716283019655932542975) (= x1410 (x128 (x1508 x654) x1526 0)) (= x1526 (x128 (x1508 x1320) (x336 4) 0)) (= (x1068 x493) x78) (>= x78 0) (= x615 (x128 (x1508 x1124) x1410 0)) (not (= 2512682246 x502)) (< x502 2690754053) (= 2532887486 x502) (>= 1461501637330902918203684832716283019655932542975 x1124)) x1230) x520))
(assert (= (ite (= x320 x1066) x870 (x757 x320)) (x1007 x320)))
(assert (= (x929 x504) (ite (and x1237 x305 (not x923) x942 x744 x322) (x136 x504) (ite (and x1237 (not x942) x305 x322 x744) (x405 x504) (ite (and (not x305) x1237 x322 x744) (x215 x504) (ite (and (not x322) x744 x1237) (x1348 x504) (x18 x504)))))))
(assert (= (x1555 (x336 649617121)) 649617121))
(assert (= (ite (= x1443 x914) x1151 (x77 x1443)) (x1261 x1443)))
(assert (x537 x1321))
(assert (x537 x1156))
(assert (x537 x1231))
(assert (= (or (and x102 (not x1567)) (and (not x506) x1450)) x796))
(assert (=> (<= x364 10000) (= (x336 x364) (x1508 x364))))
(assert (= (ite (and x1529 x178) (x773 x85) (x812 x85)) (x238 x85)))
(assert (x537 x1008))
(assert (x537 x123))
(assert (= (ite (= x1102 x1066) x870 (x757 x1102)) (x1007 x1102)))
(assert (= (x1341 x967) (ite (= x1455 x967) x453 (x554 x967))))
(assert (x537 x1229))
(assert (x1279 x185))
(assert (=> (<= x1163 10000) (= (x1508 x1163) (x336 x1163))))
(assert (x537 x338))
(assert (= (x1547 x633) (ite (= x846 x633) x1381 (x1024 x633))))
(assert (x537 x1084))
(assert (x537 x7))
(assert (= (=> (= x1033 x1539) x89) x390))
(assert (= (and x947 x458) x1450))
(assert (x537 x1021))
(assert (=> (<= x308 10000) (= (x1508 x308) (x336 x308))))
(assert (x1279 x513))
(assert (x537 x1246))
(assert (= x1150 (and x841 x359)))
(assert (x537 x950))
(assert (x537 x1524))
(assert (= (x1528 x690) (ite (and x385 x372) (x1261 x690) (x1119 x690))))
(assert (x537 x140))
(assert (=> (>= 10000 x135) (= (x1508 x135) (x336 x135))))
(assert (x537 x1048))
(assert (x537 x582))
(assert (= (x1555 (x1508 x906)) x906))
(assert (= (x1555 (x1508 x1386)) x1386))
(assert (x537 x403))
(assert (= (x238 x1129) (ite (and x178 x1529) (x773 x1129) (x812 x1129))))
(assert (= (x871 x1443) (ite (= x488 x1443) x905 (x1341 x1443))))
(assert (= (ite (= x1314 x69) x187 (x1348 x69)) (x215 x69)))
(assert (=> (<= x1428 10000) (= (x1508 x1428) (x336 x1428))))
(assert (= (ite (= x446 x1484) x219 (x215 x1484)) (x405 x1484)))
(assert (= (ite (and (not x1423) x1529 (not x242) x413) (x1547 x633) (ite (and x1529 (not x413) (not x1423)) (x1024 x633) (ite (and x1423 x1529) (x1024 x633) (x1371 x633)))) (x11 x633)))
(assert (x537 x172))
(assert (= 2512682246 (x1555 (x336 2512682246))))
(assert (x537 x728))
(assert (= (ite (= x245 x623) x911 (x1007 x245)) (x968 x245)))
(assert (x537 x1082))
(assert (= (x1555 (x1508 x1153)) x1153))
(assert (x537 x691))
(assert (x1279 x1251))
(assert (= (x1555 (x1508 x654)) x654))
(assert (x537 x143))
(assert (x537 x1316))
(assert (x537 x1035))
(assert (x537 x575))
(assert (= x345 x971))
(assert (= (x405 x69) (ite (= x69 x446) x219 (x215 x69))))
(assert (= x447 x1529))
(assert (x537 x811))
(assert (= (=> (and (= x101 (= x1077 0)) (or (and (= x193 (x606 x393)) (= (x128 (x1508 x1200) x1285 0) x1444) (<= x490 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x490 0) (= (x1016 x1553) x490) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x21) (<= 0 x193) (not x101) (or (and (= (< x811 x949) x299) (= (= 0 x490) x587) (or (and (= x1520 x1116) (= x823 (x610 x688)) x587 (= x1520 (x1315 (- x430 x823))) (not (> x823 x430))) (and (not (< x430 x490)) (not x587) (= 604800 x795) (= x1116 x436) (= x776 (x1315 (- x430 x490))) (= x436 (ite (> 604800 x776) x776 604800)))) (= x811 (x610 x585)) (or (and (= x949 x430) (not x299)) (and (= (x610 x585) x1289) (= x430 x1289) x299)) x489) (and (= 0 x1116) (not x489))) (= (x580 1461501637330902918203684832716283019655932542975 x355) x821) (= x1250 (= 0 x1116)) (= x21 (x109 x1268)) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x1200) (= x393 (x67 x1268 1)) (= x978 (x610 x585)) (= (x128 (x1508 x395) (x336 1) 0) x1268) (= x1156 (x81 (+ 64 x688))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x193) (or (and (= (x128 (x1508 x395) (x336 7) 0) x747) (= x185 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= x926 (x128 (x1508 x135) x614 0)) (< (* x1077 x1116) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x128 (x1508 x185) x747 0) x357) (= (x580 1461501637330902918203684832716283019655932542975 x355) x104) (= (* x1116 x1077) x273) (= (x128 (x1508 x104) x357 0) x1537) (= (x128 (x1508 x395) (x336 3) 0) x799) (= x374 x1156) (= (x580 1461501637330902918203684832716283019655932542975 x355) x135) (= (x128 (x1508 x368) x799 0) x614) (not x1250) (= x273 x1246) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x368)) (and (= (x128 (x1508 x1428) x1014 0) x443) (= (x128 (x1508 x177) x443 0) x132) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x1428) (= x374 x1156) (= x177 (x580 1461501637330902918203684832716283019655932542975 x355)) (= (x128 (x1508 x395) (x336 7) 0) x1014) x1250)) (= x1285 (x128 (x1508 x395) (x336 7) 0)) (>= x21 0) (= x1553 (x128 (x1508 x821) x1444 0)) (= x489 (< x490 x978)) (= (x81 (+ 32 x688)) x585)) (and (= x1400 (x128 (x1508 x1338) x1131 0)) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x1338) (= x471 (x128 (x1508 x1419) x1400 0)) x101 (= x374 x688) (= (x128 (x1508 x395) (x336 7) 0) x1131) (= (x580 1461501637330902918203684832716283019655932542975 x355) x1419))) (or (and (= (x580 1461501637330902918203684832716283019655932542975 x355) x48) (not x873) (= (x128 (x1508 x1251) x1081 0) x1264) (= x1251 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= (x128 (x1508 x395) (x336 9) 0) x1081) (= (x128 (x1508 x48) x1264 0) x151)) x873) (= x873 (= 0 x1324))) x266) x826))
(assert (x537 x528))
(assert (= (x968 x1015) (ite (= x1015 x623) x911 (x1007 x1015))))
(assert (x537 x1227))
(assert (x537 x1312))
(assert (= (=> (and (= x1416 x981) (= x791 x157) (= (>= x1416 x775) x448) (= x987 x775)) (and x448 (=> (and (= (<= x1152 x1110) x808) (= x1138 x1152) (= x601 x1110)) (and x808 (=> (and (= x1299 x1020) (= x627 x909) (= (>= x627 x1299) x217)) (and (=> (and (= x157 x333) (= (>= x333 x352) x565) (= x291 x352)) (and x565 (=> (and (= x714 2939843472) (= x1267 1517119036) (= x788 2939843472) (= true x986) (= x470 x423) (= true x420) (= 2939843472 x1125) (= x509 x499) (= true x1551) (= 2512682246 x1172) (= (>= x509 x470) x1104) (= x611 true) (= 2939843472 x392) (= 3123789364 x692) (= x214 true) (= 87118632 x1008)) (and x1104 (=> (and (= x491 x326) (= (<= x491 x1211) x797) (= x1086 x1211)) (and (=> (and (= x589 false) (= x399 false) (= x868 2512682246) (= x922 2939843472) (= x621 true) (= x1146 x1422) (= (<= x1146 x528) x1155) (= x163 x528)) x1155) x797)))))) x217)))))) x1230))
(assert (x537 x1176))
(assert (x537 x1386))
(assert (= (+ 1 (x1555 x927)) (x1555 (x67 x927 1))))
(assert (= (x1528 x817) (ite (and x372 x385) (x1261 x817) (x1119 x817))))
(assert (x537 x1239))
(assert (= (x1348 x33) (ite (= x33 x539) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x33))))
(assert (= (ite (and x385 x372) (x1261 x504) (x1119 x504)) (x1528 x504)))
(assert (= (ite (= x967 x1066) x870 (x757 x967)) (x1007 x967)))
(assert (= x1388 (and x744 x1237)))
(assert (x537 x95))
(assert (= (x1057 x1561) (ite (and (not x242) x413 (not x1423) x1529) (x871 x1561) (ite (and (not x1423) x1529 (not x413)) (x1341 x1561) (ite (and x1529 x1423) (x1341 x1561) (x142 x1561))))))
(assert (=> (>= 10000 x368) (= (x336 x368) (x1508 x368))))
(assert (= x1142 (x1555 (x1508 x1142))))
(assert (= (ite (and x322 x1237 x744 x942 (not x923) x305) (x136 x1569) (ite (and x744 x305 x322 x1237 (not x942)) (x405 x1569) (ite (and x322 x744 (not x305) x1237) (x215 x1569) (ite (and x744 x1237 (not x322)) (x1348 x1569) (x18 x1569))))) (x929 x1569)))
(assert (x537 x201))
(assert (= x544 (x1555 (x1508 x544))))
(assert (x537 x854))
(assert (= (x336 759532456) (x1508 759532456)))
(assert (x537 x737))
(assert (x537 x598))
(assert (x537 x379))
(assert (= 0 (x62 x69)))
(assert (x537 x1260))
(assert (x537 x743))
(assert (x537 x392))
(assert (x537 x281))
(assert (x537 x1144))
(assert (=> (>= 10000 x544) (= (x336 x544) (x1508 x544))))
(assert (=> (>= 10000 x1251) (= (x336 x1251) (x1508 x1251))))
(assert (= (ite (= x1569 x488) x905 (x1341 x1569)) (x871 x1569)))
(assert (= (ite (and x372 x385) (x1261 x895) (x1119 x895)) (x1528 x895)))
(assert (x537 x355))
(assert (= x953 (=> (and (= (x323 (x1508 x1239)) x235) (= x195 x451) x98 (= (x887 (x1508 x1239)) x771) (= x1527 (x323 (x1508 274184521717934524641157099916833587206))) x92 (= x98 (< (x887 (x1508 x1239)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= 274184521717934524641157099916833587218 x1239) x881) x108 (= (<= 0 x1527) x108) (= x92 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x235)) (= x676 (x323 (x1508 274184521717934524641157099916833587206)))) (and (=> (not x881) x1499) (=> (and (= (+ x1011 x210) x63) (not (= 826074471 x703)) (= x1304 x1205) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1291) (not (= 2514000705 x703)) (<= 0 x1291) (= x541 x210) (<= 0 x541) (= (x487 x1510) x541) (= x500 (x1315 (- x999 4))) (not x901) (= 32 x454) (= x1031 x1231) (= x996 (x616 (x1508 274184521717934524641157099916833587218))) (not x1265) (= 1 x206) (>= 1461501637330902918203684832716283019655932542975 x691) (= (x128 (x1508 274184521717934524641157099916833587206) (x336 1) 0) x1538) (= x856 x1011) (= (x128 (x1508 274184521717934524641157099916833587206) (x336 1) 0) x483) (= x58 76450787359836037641860180984291677749980919077056822294353438043884394381312) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x541) (not (= x703 1889567281)) (= (< x1291 x1205) x1265) (= x195 x999) (not (> 4 x999)) (= (x128 (x1508 x691) (x336 1) 0) x1510) (= x691 x72) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x856 x541)) (not (= x703 649617121)) (= x583 (< x1291 x856)) (= x1291 (x1214 x483)) (not (> 649617121 x703)) (= x691 x1366) (= x918 (x1315 (- x1291 x1205))) (> x996 0) (= x999 68) x881 (= x703 2835717307) (not x1177) (= x901 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x500)) (> 64 x500)) (> x500 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (+ x541 x856) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1177) (= x778 274184521717934524641157099916833587206) (= x856 x1205) (= 274184521717934524641157099916833587206 x403) (not x583)) x1415)))))
(assert (= x1407 (x1555 (x1508 x1407))))
(assert (x1279 x840))
(assert (= (x968 x690) (ite (= x690 x623) x911 (x1007 x690))))
(assert (x537 x759))
(assert (x537 x1143))
(assert (= (x1396 x1015) (ite (= x581 x1015) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x179 x1015))))
(assert (x537 x1324))
(assert (=> (<= x654 10000) (= (x1508 x654) (x336 x654))))
(assert (= x115 (x1555 (x1508 x115))))
(assert (x537 x1431))
(assert (= (x336 1889567281) (x1508 1889567281)))
(assert (x537 x1163))
(assert (x1279 x1320))
(assert (x1147 x380))
(assert (= (=> (and (<= x820 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x604) (< 0 x310) (not (= 2211524764 x281)) (<= 0 x820) (> 2293535753 x281) (= x310 (x616 (x1508 274184521717934524641157099916833587206))) (not (= 1986467848 x281)) (not (> 911411945 x281)) (not (= x281 1968616202)) (not (= 2061678023 x281)) (not (> 1968616202 x281)) (= x281 2258409472) (= x1029 x820) (= (x1235 x1550) x820) (= (x128 (x1508 x66) (x336 6) 0) x170) (= x1550 (x128 (x1508 x604) x170 0))) (=> (and (= x687 x705) (= x1029 x981) (= x1084 x1035)) x660)) x701))
(assert (x537 x1012))
(assert (= (x1555 (x336 18446744073709551615)) 18446744073709551615))
(assert (x537 x353))
(assert (x537 x960))
(assert (= (x1508 2532887486) (x336 2532887486)))
(assert (=> (>= 10000 x433) (= (x1508 x433) (x336 x433))))
(assert (=> (>= 10000 x258) (= (x1508 x258) (x336 x258))))
(assert (x1279 x1338))
(assert (x537 x1440))
(assert (x537 x1397))
(assert (= (x1555 (x1508 x950)) x950))
(assert (= (ite (= x690 x539) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x690)) (x1348 x690)))
(assert (x537 x648))
(assert (x537 x430))
(assert (x537 x1116))
(assert (= (=> (= x845 x1022) x1512) x702))
(assert (x1279 x1197))
(assert (x537 x1453))
(assert (x1279 x364))
(assert (x537 x319))
(assert (x537 x1217))
(assert (x537 x1034))
(assert (x537 x165))
(assert (x1279 x1549))
(assert (= 0 (x62 224)))
(assert (x537 x609))
(assert (x537 x446))
(assert (x537 x1392))
(assert (x537 x793))
(assert (= x665 x1162))
(assert (x537 x457))
(assert (= (and x1135 x1103) x1027))
(assert (= (ite (= x1066 x1484) x870 (x757 x1484)) (x1007 x1484)))
(assert (x1279 x258))
(assert (=> (<= x343 10000) (= (x336 x343) (x1508 x343))))
(assert (= (ite (= x1443 x581) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x179 x1443)) (x1396 x1443)))
(assert (x1279 x860))
(assert (= x243 (=> (and (<= x1099 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1032) (= (x128 (x1508 x55) x638 0) x712) (= (x1452 x712) x1032) (> 2960351575 x1074) (not (> 2293535753 x1074)) (not (= x1074 2690754053)) (= x969 x1032) (not (> 2690754053 x1074)) (= x943 (x616 (x1508 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x55) (= x1074 2743102681) (>= x1032 0) (= x638 (x128 (x1508 x1099) x910 0)) (= x910 (x128 (x1508 x536) (x336 3) 0)) (< 0 x943)) (=> (and (= x250 x860) (= x1260 x17) (= x980 x705) (= x1422 x969) (= x680 x1035)) x569))))
(assert (x537 x1390))
(assert (x537 x1029))
(assert (= 1461501637330902918203684832716283019655932542975 (x1555 (x336 1461501637330902918203684832716283019655932542975))))
(assert (x537 x872))
(assert (= (x1555 (x1508 x794)) x794))
(assert (= 0 (x62 x87)))
(assert (x537 x382))
(assert (=> (>= 10000 x854) (= (x1508 x854) (x336 x854))))
(assert (x537 x1018))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1555 (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= (ite (= x1455 x645) x453 (x554 x645)) (x1341 x645)))
(assert (= (x1555 (x1508 x626)) x626))
(assert (= x395 (x1555 (x1508 x395))))
(assert (= (x1555 (x1508 x1320)) x1320))
(assert (= (x968 x895) (ite (= x895 x623) x911 (x1007 x895))))
(assert (= (ite (= x1455 x914) x453 (x554 x914)) (x1341 x914)))
(assert (= x1099 (x1555 (x1508 x1099))))
(assert (= x1002 (=> (= 0 x1022) x1512)))
(assert (x1279 x433))
(assert (= (x1555 (x1508 x1420)) x1420))
(assert (= (ite (= x914 x623) x1151 (x77 x623)) (x1261 x623)))
(assert (= (ite (and x1529 x1257) (x1448 x1545) (x1107 x1545)) (x938 x1545)))
(assert (= x598 (x1555 (x1508 x598))))
(assert (x537 x1560))
(assert (x1279 x190))
(assert (= (x534 x1015) (ite (= x319 x1015) x640 (x221 x1015))))
(assert (=> (>= 10000 x190) (= (x1508 x190) (x336 x190))))
(assert (= (ite (= x1314 x245) x187 (x1348 x245)) (x215 x245)))
(assert (= (ite (and (not x923) x305 x322 x1237 x744 x942) (x136 x69) (ite (and x1237 x744 x322 x305 (not x942)) (x405 x69) (ite (and x744 x1237 x322 (not x305)) (x215 x69) (ite (and (not x322) x1237 x744) (x1348 x69) (x18 x69))))) (x929 x69)))
(assert (x537 x250))
(assert (= (ite (= x69 x539) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x69)) (x1348 x69)))
(assert (= (ite (= x446 x895) x219 (x215 x895)) (x405 x895)))
(assert (x537 x1539))
(assert (x537 x618))
(assert (x537 x1478))
(assert (x537 x1228))
(assert (= (x1057 x623) (ite (and x1529 x413 (not x242) (not x1423)) (x871 x623) (ite (and (not x1423) x1529 (not x413)) (x1341 x623) (ite (and x1529 x1423) (x1341 x623) (x142 x623))))))
(assert (= (x1555 (x1508 x1120)) x1120))
(assert (= (ite (= x561 x1443) x1075 (x405 x1443)) (x136 x1443)))
(assert (x537 x327))
(assert (x537 x1073))
(assert (= (or (and x1497 x896) (and x1388 x865)) x760))
(assert (= 2798343961 (x1555 (x336 2798343961))))
(assert (=> (<= x1322 10000) (= (x336 x1322) (x1508 x1322))))
(assert (x537 x55))
(assert (=> (>= 10000 x1001) (= (x1508 x1001) (x336 x1001))))
(assert (x537 x830))
(assert (= (ite (and x744 x322 x1237 x305 (not x923) x942) (x136 x690) (ite (and x744 x1237 x305 (not x942) x322) (x405 x690) (ite (and (not x305) x322 x744 x1237) (x215 x690) (ite (and (not x322) x1237 x744) (x1348 x690) (x18 x690))))) (x929 x690)))
(assert (=> (<= x950 10000) (= (x1508 x950) (x336 x950))))
(assert (x537 x450))
(assert (= (ite (and x1529 x178) (x899 x1556) (x1408 x1556)) (x347 x1556)))
(assert (=> (>= 10000 x513) (= (x336 x513) (x1508 x513))))
(assert (x537 x612))
(assert (= (ite (= x1484 x539) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x1484)) (x1348 x1484)))
(assert (= x1472 (x1555 (x1508 x1472))))
(assert (= (x62 x967) 0))
(assert (=> (<= x267 10000) (= (x1508 x267) (x336 x267))))
(assert (= (x1555 (x336 1889567281)) 1889567281))
(assert (= (x958 x1561) (ite (and (not x711) x1237 x744) (x929 x1561) (x1050 x1561))))
(assert (x537 x419))
(assert (x537 x311))
(assert (= x579 (or x848 x1193)))
(assert (x593 x110 x407))
(assert (= (x1555 (x1508 x624)) x624))
(assert (= x458 (and x102 x1567)))
(assert (x537 x1004))
(assert (= (ite (= x1561 x539) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x1561)) (x1348 x1561)))
(assert (x537 x1362))
(assert (=> (>= 10000 x626) (= (x336 x626) (x1508 x626))))
(assert (x537 x271))
(assert (x537 x703))
(assert (x1279 x350))
(assert (= (x336 2211524764) (x1508 2211524764)))
(assert (x537 x191))
(assert (x537 x196))
(assert (x537 x1089))
(assert (x537 x66))
(assert (x1279 x847))
(assert (x537 x1511))
(assert (= (and x647 (not x772)) x167))
(assert (x1279 x1163))
(assert (x537 x1022))
(assert (x1279 x365))
(assert (=> (<= x1507 10000) (= (x1508 x1507) (x336 x1507))))
(assert (x537 x107))
(assert (x537 x335))
(assert (x537 x1571))
(assert (=> (<= x604 10000) (= (x1508 x604) (x336 x604))))
(assert (x537 x33))
(assert (x1279 x598))
(assert (= (x1508 69947311) (x336 69947311)))
(assert (x1279 x1429))
(assert (= (ite (and x873 x878) (x80 x1544) (x248 x1544)) (x1363 x1544)))
(assert (x537 x289))
(assert (= x924 (=> (and (= x854 (x1315 (- x906 1))) (= x925 (< 0 x854))) (and (=> (not x925) x150) (=> x925 x590)))))
(assert (x537 x342))
(assert (x537 x64))
(assert (= x378 (x1555 (x1508 x378))))
(assert (x537 x649))
(assert (= (and (not x285) x1187) x1006))
(assert (=> (>= 10000 x679) (= (x1508 x679) (x336 x679))))
(assert (x1279 x1132))
(assert (x537 x577))
(assert (x537 x206))
(assert (= (x1555 (x1508 x125)) x125))
(assert (x537 x1064))
(assert (= x1001 (x1555 (x1508 x1001))))
(assert (= (x1555 (x1508 x753)) x753))
(assert (x537 x194))
(assert (x1279 x1420))
(assert (=> (>= 10000 x439) (= (x1508 x439) (x336 x439))))
(assert (= (x968 x914) (ite (= x623 x914) x911 (x1007 x914))))
(assert (x537 x1376))
(assert (= (x871 x1102) (ite (= x488 x1102) x905 (x1341 x1102))))
(assert (= x1379 (x1555 (x1508 x1379))))
(assert (=> (<= x1045 10000) (= (x1508 x1045) (x336 x1045))))
(assert (= (ite (= x69 x488) x905 (x1341 x69)) (x871 x69)))
(assert (= (x1261 x967) (ite (= x967 x914) x1151 (x77 x967))))
(assert (= x66 (x1555 (x1508 x66))))
(assert (x1279 x1322))
(assert (= x1249 (x1555 (x1508 x1249))))
(assert (= (x1555 (x1508 x741)) x741))
(assert (x537 x1175))
(assert (x1279 x104))
(assert (= (x1528 x488) (ite (and x372 x385) (x1261 x488) (x1119 x488))))
(assert (= (x1555 (x1508 x1259)) x1259))
(assert (x537 x787))
(assert (= (x1057 x1015) (ite (and (not x1423) x1529 x413 (not x242)) (x871 x1015) (ite (and (not x1423) (not x413) x1529) (x1341 x1015) (ite (and x1529 x1423) (x1341 x1015) (x142 x1015))))))
(assert (x537 x788))
(assert (= (x62 x1561) 0))
(assert (=> (>= 10000 x327) (= (x336 x327) (x1508 x327))))
(assert (x1147 x110))
(assert (= (ite (= x895 x561) x1075 (x405 x895)) (x136 x895)))
(assert (x537 x193))
(assert (= (x405 x1102) (ite (= x446 x1102) x219 (x215 x1102))))
(assert (x537 x362))
(assert (x537 x57))
(assert (=> (>= 10000 x1417) (= (x336 x1417) (x1508 x1417))))
(assert (= (x1555 (x1508 x1124)) x1124))
(assert (= (ite (= x630 x561) x1075 (x405 x630)) (x136 x630)))
(assert (= (x62 x504) 0))
(assert (x537 x1128))
(assert (= (x1396 x69) (ite (= x69 x581) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x179 x69))))
(assert (x537 x204))
(assert (x537 x394))
(assert (x537 x1517))
(assert (= (ite (= x464 x1548) x256 (x11 x1548)) (x867 x1548)))
(assert (x537 x1395))
(assert (x537 x1409))
(assert (x537 x1055))
(assert (= (x1555 (x336 37714057306076988483118529490347679105585116642029194716945419020321082336612)) 37714057306076988483118529490347679105585116642029194716945419020321082336612))
(assert (= (ite (and x385 x372) (x1261 x245) (x1119 x245)) (x1528 x245)))
(assert (= x1251 (x1555 (x1508 x1251))))
(assert (x838 x560 x1439))
(assert (x537 x504))
(assert (= x318 (=> (= 0 x129) x781)))
(assert (x537 x952))
(assert (x537 x265))
(assert (x537 x1194))
(assert (x537 x1513))
(assert (x1279 x1360))
(assert (= (x1508 142201243) (x336 142201243)))
(assert (= (ite (= x488 x33) x905 (x1341 x33)) (x871 x33)))
(assert (= (x1508 1986467848) (x336 1986467848)))
(assert (= (x1528 x69) (ite (and x385 x372) (x1261 x69) (x1119 x69))))
(assert (x838 x1516 x1009))
(assert (x537 x1274))
(assert (x1279 x779))
(assert (x537 x1020))
(assert (x537 x1102))
(assert (=> (>= 10000 x1395) (= (x336 x1395) (x1508 x1395))))
(assert (= (ite (and (not x711) x744 x1237) (x929 x1015) (x1050 x1015)) (x958 x1015)))
(assert (x1279 x821))
(assert (= (=> (and (= x1344 (x128 (x1508 x950) x270 0)) (not (< x718 x906)) (= x1345 (x298 x567)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x718) (= x381 (> x1345 0)) (>= x1345 0) (= x365 (x580 1461501637330902918203684832716283019655932542975 x355)) (= x270 (x128 (x1508 x906) (x336 7) 0)) (>= x718 0) (<= x1345 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x567 (x128 (x1508 x365) x1344 0)) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x950)) (and (=> (and x381 (= (x128 (x1508 x433) x510 0) x722) (= (x128 (x1508 x1216) x117 0) x510) (<= x1370 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x1216) (>= x1370 0) (= 0 x370) (= (x580 1461501637330902918203684832716283019655932542975 x355) x433) (= (x128 (x1508 x906) (x336 9) 0) x117) (= (x1363 x722) x1370) (= x529 x1370)) x90) (=> (not x381) x307))) x574))
(assert (x537 x667))
(assert (= (x1555 (x1508 x680)) x680))
(assert (= (ite (and x1529 (not x1423) (not x242) x413) (x871 x895) (ite (and x1529 (not x1423) (not x413)) (x1341 x895) (ite (and x1529 x1423) (x1341 x895) (x142 x895)))) (x1057 x895)))
(assert (x537 x1301))
(assert (x537 x245))
(assert (x537 x502))
(assert (=> (>= 10000 x1429) (= (x1508 x1429) (x336 x1429))))
(assert (x1279 x48))
(assert (=> (>= 10000 x395) (= (x336 x395) (x1508 x395))))
(assert (= (=> (and (= (< 0 x620) x331) (= (x1315 (- x906 1)) x620)) (and (=> (not x331) x1002) (=> x331 x441))) x729))
(assert (=> (>= 10000 x342) (= (x1508 x342) (x336 x342))))
(assert (= (ite (= x87 x623) x911 (x1007 x87)) (x968 x87)))
(assert (= (x1555 (x1508 x827)) x827))
(assert (x1279 x1217))
(assert (=> (>= 10000 x237) (= (x336 x237) (x1508 x237))))
(assert (x537 x421))
(assert (x537 x599))
(assert (x537 x1151))
(assert (x537 x1267))
(assert (x1279 x172))
(assert (= (ite (= x1455 x1443) x453 (x554 x1443)) (x1341 x1443)))
(assert (= (=> (= (> x395 0) x252) (and (=> (not x252) x463) (=> x252 x416))) x268))
(assert (x537 x531))
(assert (x1279 x980))
(assert (= (x215 x630) (ite (= x630 x1314) x187 (x1348 x630))))
(assert (=> (<= x1419 10000) (= (x1508 x1419) (x336 x1419))))
(assert (x537 x255))
(assert (= 0 (x62 x488)))
(assert (x537 x438))
(assert (x537 x880))
(assert (x1279 x1386))
(assert (= (ite (and x413 (not x1423) (not x242) x1529) (x871 x967) (ite (and x1529 (not x413) (not x1423)) (x1341 x967) (ite (and x1529 x1423) (x1341 x967) (x142 x967)))) (x1057 x967)))
(assert (x537 x785))
(assert (=> (<= x194 10000) (= (x1508 x194) (x336 x194))))
(assert (= (x1555 (x1508 x141)) x141))
(assert (=> (<= x829 10000) (= (x1508 x829) (x336 x829))))
(assert (=> (>= 10000 x1543) (= (x1508 x1543) (x336 x1543))))
(assert (x593 x1376 x321))
(assert (=> (<= x827 10000) (= (x336 x827) (x1508 x827))))
(assert (= (ite (and x1529 x413 (not x242) (not x1423)) (x871 x1443) (ite (and (not x1423) (not x413) x1529) (x1341 x1443) (ite (and x1423 x1529) (x1341 x1443) (x142 x1443)))) (x1057 x1443)))
(assert (= (x1555 (x1508 x861)) x861))
(assert (= (ite (= x504 x1066) x870 (x757 x504)) (x1007 x504)))
(assert (= (x1528 x967) (ite (and x372 x385) (x1261 x967) (x1119 x967))))
(assert (= 0 (x62 x33)))
(assert (x1279 x94))
(assert (x537 x623))
(assert (= (x215 x1561) (ite (= x1561 x1314) x187 (x1348 x1561))))
(assert (x537 x1238))
(assert (= (x336 18446744073709551615) (x1508 18446744073709551615)))
(assert (x537 x1092))
(assert (x537 x1466))
(assert (x537 x183))
(assert (= (=> (and (= x288 (x128 (x1508 x154) x1369 0)) (= x1570 142201243) (<= 0 x740) (= x740 (x387 x26)) (< 0 x478) (= (x128 (x1508 x308) x288 0) x26) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x740) (> 468353030 x1570) (= x740 x225) (not (= 87118632 x1570)) (> 911411945 x1570) (= (x128 (x1508 x1004) (x336 9) 0) x1369) (not (= x1570 69947311)) (<= x308 1461501637330902918203684832716283019655932542975) (< x1570 2293535753) (= (x616 (x1508 274184521717934524641157099916833587206)) x478) (>= 1461501637330902918203684832716283019655932542975 x154)) (=> (and (= x225 x1086) (= x250 x233) (= x327 x705) (= x1035 x1386)) x1351)) x862))
(assert (= (x336 649617121) (x1508 649617121)))
(assert (x537 x698))
(assert (x537 x1146))
(assert (x1279 x342))
(assert (x1279 x571))
(assert (= (ite (= x630 x446) x219 (x215 x630)) (x405 x630)))
(assert (x1279 x1472))
(assert (x537 x1391))
(assert (=> (>= 10000 x1245) (= (x336 x1245) (x1508 x1245))))
(assert (= (ite (= x1102 x1314) x187 (x1348 x1102)) (x215 x1102)))
(assert (= (ite (= x488 x87) x905 (x1341 x87)) (x871 x87)))
(assert (x537 x58))
(assert (x537 x144))
(assert (x537 x885))
(assert (x838 x863 x670))
(assert (x537 x1220))
(assert (x1279 x691))
(assert (x537 x1266))
(assert (= 142201243 (x1555 (x336 142201243))))
(assert (x537 x1010))
(assert (x1147 x560))
(assert (= x1241 x359))
(assert (= (x1348 x914) (ite (= x914 x539) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x914))))
(assert (x537 x1543))
(assert (= (ite (= x1443 x505) x1182 (x1396 x1443)) (x921 x1443)))
(assert (x537 x1479))
(assert (x537 x21))
(assert (= x350 (x1555 (x1508 x350))))
(assert (x537 x244))
(assert (x537 x436))
(assert (x537 x116))
(assert (x537 x1303))
(assert (= (x1007 x1440) (ite (= x1440 x1066) x870 (x757 x1440))))
(assert (x1279 x262))
(assert (= (x1555 (x1508 x154)) x154))
(assert (= (x1555 (x1508 x1398)) x1398))
(assert (=> (<= x1142 10000) (= (x1508 x1142) (x336 x1142))))
(assert (x537 x1086))
(assert (x537 x1124))
(assert (= (x871 x1561) (ite (= x488 x1561) x905 (x1341 x1561))))
(assert (=> (>= 10000 x340) (= (x336 x340) (x1508 x340))))
(assert (x537 x470))
(assert (x537 x491))
(assert (= x342 (x1555 (x1508 x342))))
(assert (x537 x883))
(assert (x537 x138))
(assert (x537 x397))
(assert (= (ite (= x1455 x1569) x453 (x554 x1569)) (x1341 x1569)))
(assert (=> (<= x125 10000) (= (x1508 x125) (x336 x125))))
(assert (= (x215 x914) (ite (= x914 x1314) x187 (x1348 x914))))
(assert (= (x1555 (x336 3123789364)) 3123789364))
(assert (x537 x272))
(assert (x537 x991))
(assert (x537 x906))
(assert (= x1338 (x1555 (x1508 x1338))))
(assert (x537 x1046))
(assert (= (x136 x914) (ite (= x914 x561) x1075 (x405 x914))))
(assert (= (x871 x1015) (ite (= x1015 x488) x905 (x1341 x1015))))
(assert (x1279 x604))
(assert (x537 x1333))
(assert (x1279 x618))
(assert (= x1429 (x1555 (x1508 x1429))))
(assert (= (ite (= x623 x69) x911 (x1007 x69)) (x968 x69)))
(assert (x537 x943))
(assert (x537 x505))
(assert (=> (>= 10000 x1472) (= (x1508 x1472) (x336 x1472))))
(assert (= (ite (= x1455 x1561) x453 (x554 x1561)) (x1341 x1561)))
(assert (= (x1508 2764855426) (x336 2764855426)))
(assert (x537 x1506))
(assert (x537 x247))
(assert (= (x871 x1484) (ite (= x1484 x488) x905 (x1341 x1484))))
(assert (x537 x821))
(assert (=> (>= 10000 x1239) (= (x336 x1239) (x1508 x1239))))
(assert (x1147 x1376))
(assert (=> (>= 10000 x104) (= (x1508 x104) (x336 x104))))
(assert (x537 x847))
(assert (= (x1555 (x1508 x536)) x536))
(assert (x537 x383))
(assert (= true x222))
(assert (= (ite (= x504 x488) x905 (x1341 x504)) (x871 x504)))
(assert (= x1499 (=> (= x285 (= x1239 274184521717934524641157099916833587214)) (and (=> (and (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1449 x872)) x975) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x144) (and (< x144 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x144)))) x168) (not (= x1375 1889567281)) (= 68 x1148) (>= 1461501637330902918203684832716283019655932542975 x1486) (not (> 4 x1148)) (= x1449 (x1183 x1159)) (= 274184521717934524641157099916833587206 x160) (not x1523) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1021) (= x1375 2835717307) (= x1486 x1366) (= x1402 x1449) (= (x128 (x1508 274184521717934524641157099916833587206) (x336 1) 0) x825) (not (= 826074471 x1375)) (<= x876 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x674) (= (< x876 x939) x1523) (>= x1449 0) (= x966 274184521717934524641157099916833587206) (= x1166 x872) (= x939 x1304) (= x1486 x434) (= x1159 (x128 (x1508 x1486) (x336 1) 0)) (= x1256 x1194) (= x1149 (x1315 (- x876 x939))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1449) (= x1148 x195) (= x872 x939) (= 1 x206) (not x168) (not (= x1375 649617121)) (= (x616 (x1508 274184521717934524641157099916833587214)) x459) (= x454 32) x285 (= (x1315 (- x1148 4)) x144) (= x876 (x766 x825)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x872 x1449)) (not x975) (not (< x1375 649617121)) (= (x128 (x1508 274184521717934524641157099916833587206) (x336 1) 0) x373) (= (+ x1166 x1402) x732) (= (< x876 x872) x674) (> x459 0) (>= x876 0) (not (= x1375 2514000705))) x1415) (=> (not x285) x222)))))
(assert (x537 x8))
(assert (=> (<= x262 10000) (= (x1508 x262) (x336 x262))))
(assert (x537 x200))
(assert (x1279 x648))
(assert (= (x1555 (x1508 x164)) x164))
(assert (= x23 (x1555 (x1508 x23))))
(assert (= x686 (=> (and (= (x128 (x1508 x1451) (x336 6) 0) x197) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x930) (= (= x613 0) x1357) (= (x128 (x1508 x930) x197 0) x849) (<= 0 x613) (= x613 (x1305 x849)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x613)) (and (=> (and (not x1357) (= x1122 x1451)) x297) (=> (and (= x644 (> x272 0)) (= x272 (x1315 (- x1451 1))) (not x644) x1357) x318)))))
(assert (=> (>= 10000 x129) (= (x1508 x129) (x336 x129))))
(assert (x537 x1443))
(assert (=> (>= 10000 x1200) (= (x1508 x1200) (x336 x1200))))
(assert (= x577 (x1555 (x1508 x577))))
(assert (x537 x163))
(assert (x1279 x829))
(assert (x537 x71))
(assert (x537 x543))
(assert (x537 x559))
(assert (x537 x895))
(assert (x1279 x154))
(assert (= (ite (= x1314 x1015) x187 (x1348 x1015)) (x215 x1015)))
(assert (x537 x622))
(assert (x537 x630))
(assert (x537 x584))
(assert (= (x1555 (x1508 x513)) x513))
(assert (= (ite (= x488 x914) x1151 (x77 x488)) (x1261 x488)))
(assert (= (=> (and (= (x1493 (x1508 274184521717934524641157099916833587214)) x344) (= false x663) (= x1223 2939843472) (>= x344 0) (>= x1260 0) (= x1094 x724) (<= x1260 1461501637330902918203684832716283019655932542975) (>= x705 0) (>= x518 0) (= x130 x37) (= (< 0 (x616 (x1508 274184521717934524641157099916833587206))) x253) (>= 1461501637330902918203684832716283019655932542975 x724) (>= x130 0) (<= x130 1461501637330902918203684832716283019655932542975) (= 5 x752) (= (< 0 (x616 (x1508 274184521717934524641157099916833587218))) x239) (<= x705 1461501637330902918203684832716283019655932542975) x239 (= x1378 x705) x253 (<= 0 x724) (= x1035 x624) (= x1254 false) (>= 1461501637330902918203684832716283019655932542975 x250) (>= x250 0) (= x1421 (x1493 (x1508 274184521717934524641157099916833587206))) (= (> (x616 (x1508 274184521717934524641157099916833587214)) 0) x556) (= x828 false) (>= x1421 0) (= x514 false) x556 (= x518 (x1493 (x1508 274184521717934524641157099916833587218)))) x1190) x903))
(assert (x537 x1516))
(assert (=> (>= 10000 x233) (= (x1508 x233) (x336 x233))))
(assert (x537 x829))
(assert (x537 x1066))
(assert (= 0 (x62 192)))
(assert (= (x336 826074471) (x1508 826074471)))
(assert (x537 x515))
(assert (= x229 x730))
(assert (x1147 x863))
(assert (= (ite (and (not x923) x942 x1237 x322 x744 x305) (x136 x1443) (ite (and x305 x744 x322 x1237 (not x942)) (x405 x1443) (ite (and (not x305) x744 x322 x1237) (x215 x1443) (ite (and (not x322) x1237 x744) (x1348 x1443) (x18 x1443))))) (x929 x1443)))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1555 (x336 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (=> (<= x103 10000) (= (x336 x103) (x1508 x103))))
(assert (= (x62 x1484) 0))
(assert (x537 x37))
(assert (x537 x822))
(assert (x1279 x680))
(assert (x537 x262))
(assert (= x1287 (=> (= x890 (< 1 x1151)) (and (=> (and (= x581 (x81 (+ 96 x415))) x600 (= x278 (x81 (+ x415 128))) (= (x1315 (- x324 32)) x304) (= (x1396 x223) x451) (or (and (= x1484 x504) (= x505 x278) x1136 (= (x1396 x1484) x1182) (or (and x839 (= x33 (x81 (+ x223 64))) (= x1492 (x921 x33)) (= (> x451 64) x1248) (= x3 (x81 (+ 96 x622))) (or (and x1248 (= x319 (x81 (+ 128 x622))) (= x1443 (x81 (+ x223 96))) (= (< 96 x451) x111) (or (and (= x83 (x534 x1015)) x111 (= x1127 (< 128 x451)) (not x1127) (= x1091 (x81 (+ x622 160))) (= x1536 128) (= (x81 (+ x223 128)) x1015)) (and (not x111) (= x1536 96))) (= (x221 x1443) x640)) (and (= 64 x1536) (not x1248)))) (and (= 32 x1536) (not x839))) (= x839 (< 32 x451))) (and (= x1536 0) (not x1136))) (= x835 (> x1536 x451)) (= x1136 (< 0 x451)) (= (x28 x504) x110) (= (x81 (+ x223 100)) x622) (= x1326 (x580 26959946667150639794667015087019630673637144422540572481103610249215 x110)) (= x455 (x81 (+ x636 64))) (= x785 (x616 (x1508 x1239))) (<= x1239 1461501637330902918203684832716283019655932542975) (= x324 (x1315 (- x622 x223))) (= x1304 (x1522 x1569)) (= x1569 (x81 (+ 192 x480))) (= (x81 (+ x223 32)) x504) x890 (= (x81 (+ 36 x223)) x415) (= x1366 (x580 1461501637330902918203684832716283019655932542975 x355)) (or (and (= x295 (x81 (+ x451 x278))) x835) (not x835)) (= (x81 (+ x1326 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x759) (> x143 1) (= (x1522 x914) x143) (= 0 x1566) (= (x955 x455) x1239) (< 1 x1151) (= x1321 (x81 (+ x223 68))) (= (< 0 x785) x600)) x953) (=> (not x890) x1060)))))
(assert (= x1565 (x1555 (x1508 x1565))))
(assert (= (x1555 (x1508 x898)) x898))
(assert (x537 x365))
(assert (= (ite (= x623 x630) x911 (x1007 x630)) (x968 x630)))
(assert (= (x1508 468353030) (x336 468353030)))
(assert (= (x1555 (x1508 x103)) x103))
(assert (x537 x406))
(assert (= (x871 x623) (ite (= x623 x488) x905 (x1341 x623))))
(assert (= (=> (= x361 (> x395 0)) (and (=> x361 x145) (=> (not x361) x318))) x1113))
(assert (x537 x476))
(assert (x537 x1532))
(assert (= x1540 x482))
(assert (x537 x235))
(assert (x537 x967))
(assert (x537 x1033))
(assert (x537 x767))
(assert (x537 x314))
(assert (= (=> (= x744 (> x1151 0)) (and (=> (not x744) x1060) (=> (and (= x711 (> x1010 x523)) (= x438 (x81 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x994))) x1093 (= (x1315 (- x1227 x134)) x212) (= x1397 (x1315 (- x212 32))) (or (and (= 0 x1010) (not x322)) (and (= x1440 x87) (= x187 (x1348 x1440)) (or (and (not x305) (= 32 x1010)) (and (= (x81 (+ 64 x134)) x245) (= (x81 (+ x1227 96)) x446) (= x942 (< 64 x523)) (= (x215 x245) x219) x305 (or (and (= 64 x1010) (not x942)) (and (= (x81 (+ x1227 128)) x561) (= (x405 x1102) x1075) x942 (or (and (= x1010 96) (not x923)) (and (= (x136 x895) x715) x923 (not x1210) (= (x81 (+ x1227 160)) x1524) (= x895 (x81 (+ x134 128))) (= (> x523 128) x1210) (= x1010 128))) (= x923 (> x523 96)) (= x1102 (x81 (+ x134 96))))))) x322 (= x309 x1314) (= (< 32 x523) x305))) (= x1093 (> x1143 0)) (= (x1438 x914) x1460) (= x728 (x955 x855)) (= x1517 x855) (<= x728 1461501637330902918203684832716283019655932542975) (> x1460 0) (= x739 (x580 1461501637330902918203684832716283019655932542975 x355)) (= x1376 (x700 x87)) (= x1143 (x616 (x1508 x728))) (= x539 (x81 (+ x292 96))) (= (> x523 0) x322) x744 (= x1227 (x81 (+ 100 x134))) (= x1083 (x1438 x817)) (= (x81 (+ x134 68)) x166) (= (x580 26959946667150639794667015087019630673637144422540572481103610249215 x1376) x994) (= (x1348 x134) x523) (= (x81 (+ 128 x292)) x309) (= x889 0) (< 0 x1151) (or (not x711) (and x711 (= x208 (x81 (+ x523 x309))))) (= x292 (x81 (+ x134 36))) (= x87 (x81 (+ 32 x134))) (= x817 (x81 (+ x480 160)))) x286))) x432))
(assert (x537 x535))
(assert (= (x1555 (x1508 x618)) x618))
(assert (x537 x918))
(assert (x537 x1380))
(assert (x537 x1398))
(assert (= (x336 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x1508 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x537 x1485))
(assert (x537 x106))
(assert (= x1481 (=> (and (= (= 0 x957) x1185) (= (x128 (x1508 x577) x769 0) x1028) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x840) (= (x128 (x1508 x840) x602 0) x769) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x957) (= x577 (x580 1461501637330902918203684832716283019655932542975 x355)) (<= 0 x957) (= x957 (x298 x1028)) (= x602 (x128 (x1508 x906) (x336 7) 0))) (and (=> (and (= x845 x906) (not x1185)) x702) (=> x1185 x729)))))
(assert (x537 x129))
(assert (x1279 x626))
(assert (= (x336 2743102681) (x1508 2743102681)))
(assert (= x106 (x1555 (x1508 x106))))
(assert (x537 x149))
(assert (= (ite (and (not x1423) x413 (not x242) x1529) (x1547 x493) (ite (and (not x413) x1529 (not x1423)) (x1024 x493) (ite (and x1529 x1423) (x1024 x493) (x1371 x493)))) (x11 x493)))
(assert (x537 x1542))
(assert (x537 x154))
(assert (x537 x276))
(assert (= (x62 x623) 0))
(assert (= (x405 x1443) (ite (= x446 x1443) x219 (x215 x1443))))
(assert (x537 x1451))
(assert (x537 x1275))
(assert (x537 x585))
(assert (= (ite (= x1443 x1066) x870 (x757 x1443)) (x1007 x1443)))
(assert (x537 x827))
(assert (= (x1396 x33) (ite (= x33 x581) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x179 x33))))
(assert (= x936 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734) (= x1080 (x128 (x1508 x7) x1447 0)) (= x961 (x128 (x1508 x1398) x1080 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x718) (<= 0 x734) (= x1447 (x128 (x1508 x395) (x336 7) 0)) (not (> x754 x718)) (= (> x734 0) x772) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x7) (= (x1016 x961) x734) (= (x580 1461501637330902918203684832716283019655932542975 x355) x1398) (<= 0 x718)) (and (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1061) (= (x128 (x1508 x1322) x959 0) x546) (= x959 (x128 (x1508 x340) x456 0)) (= x1077 x1061) (= x340 (x580 1461501637330902918203684832716283019655932542975 x1494)) x772 (= (x580 1461501637330902918203684832716283019655932542975 x355) x1322) (= x1061 (x80 x546)) (= 0 x1324) (= (x128 (x1508 x395) (x336 9) 0) x456) (>= x1061 0)) x826) (=> (not x772) x268)))))
(assert (x537 x39))
(assert (x1279 x687))
(assert (x537 x860))
(assert (=> (>= 10000 x1398) (= (x336 x1398) (x1508 x1398))))
(assert (= (ite (and x322 (not x923) x744 x305 x942 x1237) (x136 x914) (ite (and (not x942) x305 x1237 x744 x322) (x405 x914) (ite (and x322 x744 (not x305) x1237) (x215 x914) (ite (and (not x322) x1237 x744) (x1348 x914) (x18 x914))))) (x929 x914)))
(assert (=> (<= x620 10000) (= (x1508 x620) (x336 x620))))
(assert (= x116 (x1555 (x1508 x116))))
(assert (= x1271 (x1555 (x1508 x1271))))
(assert (x537 x774))
(assert (= (x1555 (x1508 x1509)) x1509))
(assert (= x1033 (x1555 (x1508 x1033))))
(assert (= x1190 (=> (and (= (x128 (x1508 x624) (x336 6) 0) x88) (> 2293535753 x916) (not (= x916 1968616202)) (= x1192 (x128 (x1508 x1378) x88 0)) (not (= 2061678023 x916)) (= x249 (x616 (x1508 274184521717934524641157099916833587206))) (<= x1378 1461501637330902918203684832716283019655932542975) (= (x1305 x1192) x140) (= x140 x12) (not (= x916 1986467848)) (> x249 0) (not (> 911411945 x916)) (not (= x916 2211524764)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x140) (= 2258409472 x916) (<= 0 x140) (not (> 1968616202 x916))) (=> (and (= x705 x106) (= x289 x1035) (= x12 x987)) x261))))
(assert (x838 x355 x973))
(assert (x537 x93))
(assert (= (x968 x967) (ite (= x967 x623) x911 (x1007 x967))))
(assert (= x840 (x1555 (x1508 x840))))
(assert (= (or (and x1500 x892) (and x1087 (not x492)) (and (not x331) x437)) x1043))
(assert (= x575 (x1555 (x1508 x575))))
(assert (= 826074471 (x1555 (x336 826074471))))
(assert (x537 x995))
(assert (x537 x713))
(assert (x537 x1106))
(assert (= (x1555 (x1508 x313)) x313))
(assert (x537 x423))
(assert (x537 x629))
(assert (x537 x914))
(assert (= (x871 x914) (ite (= x914 x488) x905 (x1341 x914))))
(assert (x537 x158))
(assert (= (ite (= x1066 x245) x870 (x757 x245)) (x1007 x245)))
(assert (x1279 x1045))
(assert (=> (<= x154 10000) (= (x1508 x154) (x336 x154))))
(assert (x537 x779))
(assert (x1279 x368))
(assert (= (x336 2960351575) (x1508 2960351575)))
(assert (= (ite (and x178 x1529) (x899 x681) (x1408 x681)) (x347 x681)))
(assert (x537 x97))
(assert (x537 x1094))
(assert (=> (>= 10000 x164) (= (x1508 x164) (x336 x164))))
(assert (x1279 x526))
(assert (x537 x754))
(assert (= (x871 x645) (ite (= x488 x645) x905 (x1341 x645))))
(assert (= (ite (= x1066 x87) x870 (x757 x87)) (x1007 x87)))
(assert (x537 x1216))
(assert (= (x1555 (x1508 x335)) x335))
(assert (=> (<= x1099 10000) (= (x336 x1099) (x1508 x1099))))
(assert (=> (<= x847 10000) (= (x336 x847) (x1508 x847))))
(assert (x537 x996))
(assert (x537 x227))
(assert (= (x136 x69) (ite (= x69 x561) x1075 (x405 x69))))
(assert (x1279 x180))
(assert (x537 x905))
(assert (x537 x1565))
(assert (x537 x269))
(assert (= (x1555 (x1508 x1549)) x1549))
(assert (x537 x267))
(assert (= 2764855426 (x1555 (x336 2764855426))))
(assert (= (x1555 (x336 2868243304)) 2868243304))
(assert (= (x1508 26959946667150639794667015087019630673637144422540572481103610249215) (x336 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1279 x115))
(assert (= x129 (x1555 (x1508 x129))))
(assert (x537 x1460))
(assert (x537 x957))
(assert (x1279 x1379))
(assert (= (x1555 (x1508 x648)) x648))
(assert (x537 x320))
(assert (x537 x1295))
(assert (= (or (and (not x841) x359) x579) x1286))
(assert (x537 x840))
(assert (= x1502 (x1555 (x1508 x1502))))
(assert (= 2835717307 (x1555 (x336 2835717307))))
(assert (x537 x518))
(assert (=> (<= x1451 10000) (= (x336 x1451) (x1508 x1451))))
(assert (= (ite (and x413 (not x242) (not x1423) x1529) (x1547 x694) (ite (and x1529 (not x413) (not x1423)) (x1024 x694) (ite (and x1423 x1529) (x1024 x694) (x1371 x694)))) (x11 x694)))
(assert true)
(assert (x537 x103))
(assert (x537 x1428))
(assert (x537 x146))
(assert (=> (>= 10000 x531) (= (x336 x531) (x1508 x531))))
(assert (x537 x1304))
(assert (x537 x1223))
(assert (= x1313 (or (and x60 (not x890)) (and x1237 (not x744)) x748)))
(assert (x537 x208))
(assert (= (x1057 x630) (ite (and (not x1423) x413 x1529 (not x242)) (x871 x630) (ite (and (not x1423) (not x413) x1529) (x1341 x630) (ite (and x1529 x1423) (x1341 x630) (x142 x630))))))
(assert (x537 x624))
(assert (x1279 x2))
(assert (x537 x451))
(assert (= (x1341 x33) (ite (= x1455 x33) x453 (x554 x33))))
(assert (x1279 x313))
(assert (=> (>= 10000 x1323) (= (x336 x1323) (x1508 x1323))))
(assert (=> (<= x94 10000) (= (x1508 x94) (x336 x94))))
(assert (=> (<= x389 10000) (= (x336 x389) (x1508 x389))))
(assert (= (and x1388 (not x865)) x896))
(assert (x537 x1429))
(assert (x537 x1370))
(assert (= 274184521717934524641157099916833587218 (x1555 (x336 274184521717934524641157099916833587218))))
(assert (= (x1555 (x1508 x980)) x980))
(assert (= x569 (=> (and (< 0 x1356) (= (x128 (x1508 x860) x47 0) x842) (not (> 2293535753 x1506)) (<= x980 1461501637330902918203684832716283019655932542975) (not (= x1506 2512682246)) (= x1506 2532887486) (= x984 x1073) (= x844 (x128 (x1508 x680) (x336 4) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x984) (> 2690754053 x1506) (= (x128 (x1508 x17) x842 0) x639) (not (= 2418364589 x1506)) (= x47 (x128 (x1508 x980) x844 0)) (= (x1024 x639) x984) (<= x860 1461501637330902918203684832716283019655932542975) (>= x984 0) (< x1506 2960351575) (not (= 2293535753 x1506)) (= (x616 (x1508 274184521717934524641157099916833587206)) x1356) (>= 1461501637330902918203684832716283019655932542975 x17)) (=> (and (not (< x1128 1)) (= 0 x907) (= x395 x754) (= x1392 x475) (>= x743 0) (not (= x1404 2690754053)) (= x1513 x1089) (< x1404 2960351575) (not (< x1433 4)) (= x667 0) (= 0 x995) (= x1456 x394) (= x573 (and x915 x349)) (= x1511 0) (not (= 2764855426 x1404)) (= x291 x1073) (= x1151 (x955 x636)) (<= x743 1461501637330902918203684832716283019655932542975) (= (mod (* x1151 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x196) (<= 0 x1392) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x183) (<= x1433 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x183 x1433) (= (<= x183 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1433 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1433) true) (= x949 x1535) (not (> x1151 18446744073709551615)) (or (and (= (x81 (+ x480 160)) x338) (not x385) (= x1301 (mod (* x1151 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x385) (= 0 x931) (= 128 x138) (= x1391 x1456) (>= 1461501637330902918203684832716283019655932542975 x355) (> x718 x1456) (= x480 (x81 (+ x38 32))) (<= x1494 1461501637330902918203684832716283019655932542975) (= x1422 x440) (= x349 (= 0 x149)) (= x591 (or x1294 (not x1311))) (= x530 (x81 (+ x196 160))) (= (mod (* x1151 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x38) (= (= x257 0) x884) (= (= 0 x440) x915) (= x385 (= x1151 0)) x1504 (not (= x1404 2868243304)) (not (< x1404 2293535753)) (= x326 x149) (= x515 (x81 (+ 32 x196))) (= (x1315 (- x1433 4)) x1489) (= (x81 (+ x38 160)) x914) (= x355 x1229) (= (x1315 (- x1128 1)) x158) (not (> x787 x1433)) (or (and (= x301 (< 1 x1128)) x1418 (not (< 1 x1275)) (or (not x301) (and (= (x77 160) x107) (= x792 (x580 1461501637330902918203684832716283019655932542975 x1516)) (< 0 x191) x301 (= x736 (< 2 x1128)) (= (x77 128) x191) (= (x77 128) x97) (not (= x657 x792)) (= x1516 (x77 192)) (or (not x736) (and (= (x77 128) x597) (< 2 x597) (= (x77 128) x582) (= x863 (x77 160)) (not (= x169 x1435)) (= x152 (> x1128 3)) (= x1435 (x580 1461501637330902918203684832716283019655932542975 x863)) (not x152) x736 (= (x77 224) x560) (= (x580 1461501637330902918203684832716283019655932542975 x560) x169) (> x582 0))) (= (x580 1461501637330902918203684832716283019655932542975 x107) x657) (< 1 x97))) (= x1275 (x1315 (- x1128 1))) (not (> 1 x1128))) (not x1418)) (not (> x395 x1456)) (= x636 (x81 (+ x1089 4))) (<= x718 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> x1513 18446744073709551615)) (= x37 x1082) (= x1294 (and x573 x884)) (<= x1082 1461501637330902918203684832716283019655932542975) (= x1494 x885) x591 (= x688 (x81 (+ x515 x914))) (= x1404 2939843472) (= (x81 (+ x91 x1517)) x787) (< 163 x1433) (= (x81 (+ x1089 35)) x183) (= x949 x588) (= x291 x257) (= x952 x1138) (not (> 2690754053 x1404)) (= (x77 128) x1128) (not (= x1404 2743102681)) (= x91 (mod (* x1151 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (or (and (> 160 x1489) (= true (<= x1489 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1489 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x616 (x1508 274184521717934524641157099916833587206)) x293) (= x666 x395) (= x1095 x1138) (>= x718 0) (= x355 x1487) (= (>= x1535 x952) x1504) (= x1418 (> x158 0)) (>= 1461501637330902918203684832716283019655932542975 x1392) (= x475 x64) (< 0 x293) (= x1349 x1494) (= x1511 x427) (not (= 2798343961 x1404)) (= x1517 (x81 (+ x1089 36))) (>= x1082 0) (= x1311 (= 0 x1095))) x1557))))
(assert (= (or (and (not x252) x167) (and x458 (not x947)) (and x1450 x506)) x263))
(assert (= (ite (= x1102 x539) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x1102)) (x1348 x1102)))
(assert (= (x62 x630) 0))
(assert (x537 x344))
(assert (= (x1555 (x1508 x1022)) x1022))
(assert (= 2293535753 (x1555 (x336 2293535753))))
(assert (= x878 (or x524 (and x647 x772))))
(assert (x537 x364))
(assert (x1147 x1516))
(assert (= (ite (= x846 x1134) x1381 (x1024 x1134)) (x1547 x1134)))
(assert (= (x1007 x1015) (ite (= x1066 x1015) x870 (x757 x1015))))
(assert (= (x1555 (x336 759532456)) 759532456))
(assert (= x673 x998))
(assert (x537 x756))
(assert (= (ite (and x865 x1388) (x435 x1569) (x126 x1569)) (x334 x1569)))
(assert (= (ite (= x539 x1440) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x1440)) (x1348 x1440)))
(assert (=> (<= x861 10000) (= (x1508 x861) (x336 x861))))
(assert (x537 x558))
(assert (x537 x820))
(assert (x537 x56))
(assert (x1279 x129))
(assert (x537 x682))
(assert (= (x136 x1015) (ite (= x561 x1015) x1075 (x405 x1015))))
(assert (= x1417 (x1555 (x1508 x1417))))
(assert (=> (<= x1360 10000) (= (x1508 x1360) (x336 x1360))))
(assert (x537 x1001))
(assert (x537 x994))
(assert (= (x334 x33) (ite (and x865 x1388) (x435 x33) (x126 x33))))
(assert (= x194 (x1555 (x1508 x194))))
(assert (x537 x657))
(assert (= x1503 (and x890 x60)))
(assert (= (ite (= x914 x245) x1151 (x77 x245)) (x1261 x245)))
(assert (= (ite (= x1066 x817) x870 (x757 x817)) (x1007 x817)))
(assert (x537 x1172))
(assert (x537 x293))
(assert (= (ite (= x1484 x1314) x187 (x1348 x1484)) (x215 x1484)))
(assert (x537 x1456))
(assert (x1279 x1323))
(assert (= (x1508 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x336 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x537 x963))
(assert (=> (<= x1197 10000) (= (x1508 x1197) (x336 x1197))))
(assert (x537 x1470))
(assert (x537 x1549))
(assert (= x315 (and x361 x1130)))
(assert (x537 x855))
(assert (= x806 (=> (and (= (x128 (x1508 x1384) x70 0) x527) (= x646 (x128 (x1508 x793) (x336 7) 0)) (>= x774 0) (= x70 (x128 (x1508 x115) x646 0)) (= (x580 1461501637330902918203684832716283019655932542975 x355) x1384) (= x506 (= x774 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x774) (= x774 (x1016 x527)) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x115)) (and (=> (and (= x1106 (x1315 (- x793 1))) (not x1168) x506 (= x1168 (< 0 x1106))) x463) (=> (and (not x506) (= x746 x793)) x1222)))))
(assert (= (ite (= x1015 x446) x219 (x215 x1015)) (x405 x1015)))
(assert (= (ite (and x1388 x865) (x435 x1561) (x126 x1561)) (x334 x1561)))
(assert (x537 x874))
(assert (x1279 x340))
(assert (= (x334 x630) (ite (and x865 x1388) (x435 x630) (x126 x630))))
(assert (= (x1555 (x1508 x1384)) x1384))
(assert (= (x1555 (x1508 x1486)) x1486))
(assert (x1279 x116))
(assert (= (x1555 (x1508 x17)) x17))
(assert (x537 x1345))
(assert (x537 x469))
(assert (x537 x2))
(assert (x537 x529))
(assert (x537 x1310))
(assert (x537 x1252))
(assert (x537 x169))
(assert (= (ite (= x895 x1066) x870 (x757 x895)) (x1007 x895)))
(assert (=> (<= x106 10000) (= (x1508 x106) (x336 x106))))
(assert (= x2 (x1555 (x1508 x2))))
(assert (= (x958 x1443) (ite (and x1237 x744 (not x711)) (x929 x1443) (x1050 x1443))))
(assert (x537 x1527))
(assert (= 274184521717934524641157099916833587206 (x1555 (x336 274184521717934524641157099916833587206))))
(assert (x537 x287))
(assert (= (x1057 x33) (ite (and x1529 x413 (not x242) (not x1423)) (x871 x33) (ite (and (not x1423) x1529 (not x413)) (x1341 x33) (ite (and x1529 x1423) (x1341 x33) (x142 x33))))))
(assert (= x829 (x1555 (x1508 x829))))
(assert (x537 x1349))
(assert (x537 x1236))
(assert (=> (>= 10000 x1004) (= (x336 x1004) (x1508 x1004))))
(assert (x537 x1074))
(assert (= (x336 1000000000000000000) (x1508 1000000000000000000)))
(assert (x537 x9))
(assert (= (x1508 2798343961) (x336 2798343961)))
(assert (x1279 274184521717934524641157099916833587206))
(assert (= (x1555 (x336 1986467848)) 1986467848))
(assert (= (x215 x1569) (ite (= x1569 x1314) x187 (x1348 x1569))))
(assert (=> (<= x1153 10000) (= (x336 x1153) (x1508 x1153))))
(assert (x1279 x61))
(assert (= (ite (= x1102 x914) x1151 (x77 x1102)) (x1261 x1102)))
(assert (= (ite (= x846 x694) x1381 (x1024 x694)) (x1547 x694)))
(assert (= (ite (= x630 x914) x1151 (x77 x630)) (x1261 x630)))
(assert (x1279 x861))
(assert (x1279 x1419))
(assert (x537 x1091))
(assert (x537 x160))
(assert (x537 x1505))
(assert (= (x1555 (x1508 x1217)) x1217))
(assert (x1279 x1120))
(assert (= (x1528 x645) (ite (and x385 x372) (x1261 x645) (x1119 x645))))
(assert (= (x1555 (x1508 x46)) x46))
(assert (= x345 x1313))
(assert (x537 x304))
(assert (= (x1555 (x1508 x55)) x55))
(assert (x537 x1469))
(assert (x537 x661))
(assert (x537 x308))
(assert (x537 x794))
(assert (=> (>= 10000 x379) (= (x1508 x379) (x336 x379))))
(assert (x537 x1139))
(assert (= (x1508 2258409472) (x336 2258409472)))
(assert (x537 x352))
(assert (x1279 x753))
(assert (= (ite (and x881 x1503) (x1215 x690) (x1358 x690)) (x496 x690)))
(assert (= x190 (x1555 (x1508 x190))))
(assert (= x60 x760))
(assert (= (x871 x630) (ite (= x488 x630) x905 (x1341 x630))))
(assert (x1147 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x537 x1541))
(assert (x537 x5))
(assert (= (x1007 x1569) (ite (= x1569 x1066) x870 (x757 x1569))))
(assert (= x114 (x1555 (x1508 x114))))
(assert (=> (<= x906 10000) (= (x1508 x906) (x336 x906))))
(assert (= x1360 (x1555 (x1508 x1360))))
(assert (= x781 (=> (and (or (and (>= x1542 0) (= x1542 (x1448 x1188)) (= (x128 (x1508 x129) (x336 10) 0) x1330) (= x1188 (x128 (x1508 x544) x1330 0)) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x544) (= x211 (= x1542 0)) (or (and (= 0 x247) (= 0 x726) x211) (and (= x1542 x247) (not x211) (= 1 x726))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1542) (not x425)) (and (= 0 x247) (= 0 x726) x425)) (= x425 (= 0 x129))) x683)))
(assert (= (ite (= x446 x504) x219 (x215 x504)) (x405 x504)))
(assert (=> (>= 10000 x860) (= (x1508 x860) (x336 x860))))
(assert (x537 x654))
(assert (=> (>= 10000 x794) (= (x336 x794) (x1508 x794))))
(assert (= (ite (and x372 x385) (x1261 x87) (x1119 x87)) (x1528 x87)))
(assert (=> (>= 10000 x1502) (= (x336 x1502) (x1508 x1502))))
(assert (= (x1555 (x336 911411945)) 911411945))
(assert (x537 x980))
(assert (= (x1261 x1440) (ite (= x1440 x914) x1151 (x77 x1440))))
(assert (= (x1555 (x1508 x860)) x860))
(assert (= x482 x971))
(assert (x537 x156))
(assert (= (ite (and (not x711) x744 x1237) (x929 x504) (x1050 x504)) (x958 x504)))
(assert (x537 x688))
(assert (= (x1508 2835717307) (x336 2835717307)))
(assert (x537 x434))
(assert (x537 x655))
(assert (= (x1261 x914) x1151))
(assert (= x1415 (=> (and (= (< (x834 (x1508 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x708) (or (and (= 96 x69) x643) (and (not x643) (= x278 x69) (= (x81 (+ 96 x622)) x75))) (not (= 0 x206)) (= (= 0 x454) x643) x708 (= x725 (< 2 x1151)) (= x1337 (> x397 0)) (= (x750 (x1508 x1239)) x182) (or (and (< 0 x992) (= (= x992 0) x824) x1337 (not (or (and (= (<= x450 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x450)) (> x450 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x992 (x1039 x690)) (= x649 (ite x1198 1 0)) (= x450 (x1039 x69)) (= x992 x649) (= x690 (x81 (+ x69 32))) (= (not x824) x1198)) (not x1337)) (= x397 (x1039 x69)) (not x725)) x1060)))
(assert (x537 x65))
(assert (= x302 (=> (and (= x287 (x1016 x1293)) (= x418 (x128 (x1508 x1271) x1208 0)) (<= x287 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 759532456 x329) (= x287 x819) (> 2293535753 x329) (< x329 911411945) (not (= x329 635128645)) (= (x616 (x1508 274184521717934524641157099916833587206)) x1236) (> x1236 0) (not (> 468353030 x329)) (>= 1461501637330902918203684832716283019655932542975 x753) (= x1208 (x128 (x1508 x1549) (x336 7) 0)) (<= 0 x287) (not (= x329 468353030)) (= x1293 (x128 (x1508 x753) x418 0)) (<= x1271 1461501637330902918203684832716283019655932542975)) (=> (and (= x705 x719) (= x1138 x819) (= x1035 x1163) (= x250 x30)) x1173))))
(assert (x537 x1566))
(assert (= 2258409472 (x1555 (x336 2258409472))))
(assert (x537 x83))
(assert (x537 x219))
(assert (= (=> (and (= (x606 x1088) x870) (= x538 (= x562 0)) (or (and (= x280 0) (> x40 0) (= (x580 x1049 x813) x280) (or (and (<= x1055 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x120 x95)) (>= 1461501637330902918203684832716283019655932542975 x1217) (= (x369 x494) x1055) (= x386 (x128 (x1508 x906) (x336 11) 0)) (= (x128 (x1508 x1217) x1226 0) x494) (= (x128 (x1508 x194) x1459 0) x677) (= (x1007 x914) x1284) (= (x580 1461501637330902918203684832716283019655932542975 x355) x1360) (<= x830 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x830) (>= 1461501637330902918203684832716283019655932542975 x61) (= x95 (div x1076 1000000000000000000)) (= x1072 x486) (> x1284 0) (= x623 (x81 (+ x480 160))) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x194) (= x95 x542) (< 0 x1151) (<= 0 x1041) (= (x11 x694) x830) (= x1041 x1519) (= (x1007 x623) x120) (> x1151 0) (>= x1055 0) (= (* x1055 x698) x1076) (= (+ x481 x542) x911) (= (+ x1519 x1072) x256) (= x694 (x128 (x1508 x1197) x956 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1041) (> x1151 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1055 x698)) (= x1485 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= x1041 (x11 x464)) (= x1517 x553) (= (x128 (x1508 x342) x628 0) x1329) (or (and (>= 1461501637330902918203684832716283019655932542975 x1380) (< 1 x1151) (= x224 (div x118 1000000000000000000)) (= x198 (> x1151 2)) (= (x968 x967) x1560) (= x859 (x128 (x1508 x906) (x336 4) 0)) (= (+ x641 x1432) x1170) (<= 0 x1105) (not x198) (= x224 x1533) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x827) (= (x128 (x1508 x379) x400 0) x982) (= (x128 (x1508 x906) (x336 4) 0) x498) (= x594 0) (= (x128 (x1508 x1380) x900 0) x1548) (= (* x698 x199) x118) (> x244 1) (= x244 (x968 x914)) (= (x81 (+ 64 x636)) x1046) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x379) (= x1399 (+ x122 x1533)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x594) (= (x955 x1046) x1380) (= (x867 x633) x594) (= x807 (x128 (x1508 x180) x982 0)) (<= 0 x594) (<= x172 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x180) (< 1 x1151) (< 1 x1151) (= (x128 (x1508 x827) x498 0) x188) (= x400 (x128 (x1508 x906) (x336 11) 0)) (= x122 x1560) (< (+ x486 x1105) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1105 x641) (<= 0 x199) (= x199 (x369 x807)) (<= x1105 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x199) (= (x128 (x1508 x1429) x802 0) x900) (= (x580 1461501637330902918203684832716283019655932542975 x355) x141) (= (x580 1461501637330902918203684832716283019655932542975 x355) x1429) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x199 x698)) (= x486 x1432) (< (+ x1560 x224) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x128 (x1508 x172) x685 0) x633) (= (x128 (x1508 x141) x188 0) x685) (= (x81 (+ x480 192)) x967) (= (x128 (x1508 x1543) x859 0) x802) (= x1543 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= (x867 x1548) x1105) (= x180 (x955 x1046)) x424 (= x172 (x955 x1046))) (not x424)) (= (x580 1461501637330902918203684832716283019655932542975 x355) x76) (= x120 x481) (<= x1197 1461501637330902918203684832716283019655932542975) (= x830 0) (= x61 (x955 x553)) (= x1217 (x955 x553)) (< (+ x486 x1041) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x424 (> x1151 1)) (= x1100 (x128 (x1508 x1360) x1329 0)) (= (x128 (x1508 x76) x677 0) x956) x1458 (= (x128 (x1508 x61) x1100 0) x464) (= x1459 (x128 (x1508 x906) (x336 4) 0)) (= (x128 (x1508 x1485) x386 0) x1226) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x342) (= x628 (x128 (x1508 x906) (x336 4) 0)) (= (x955 x553) x1197)) (not x1458)) (= (ite (> x486 115792089237316195423570985008687907853269984665640564039457) 1 0) x813) (= x698 (div x572 x40)) (= 1 x1049) (not x234) (= (> x1151 0) x1458) (= (mod (* 1000000000000000000 x486) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x572)) x234) (= (x109 x782) x1266) (= x789 (x128 (x1508 x1395) x408 0)) (<= 0 x870) (= (x67 x782 1) x1088) (= x1472 (x580 1461501637330902918203684832716283019655932542975 x355)) (>= x486 0) (> x200 x394) (not (= x906 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (<= 0 x1276) (= x85 (x128 (x1508 x389) x377 0)) (= (x128 (x1508 x1509) x1463 0) x1051) (<= x1276 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x40 (x809 x85)) (= x358 (> x414 x1276)) (<= x486 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= x1003 (x128 (x1508 x94) x547 0)) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x94) (= (x128 (x1508 x906) (x336 6) 0) x547) x538) (and (= (x128 (x1508 x829) x155 0) x592) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x1420) (= x39 x659) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x829) (= (x128 (x1508 x906) (x336 5) 0) x155) (= x659 (* x562 x944)) (< (* x944 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x128 (x1508 x1420) x1394 0) x431) (not x538) (= (x128 (x1508 x906) (x336 6) 0) x1394))) (= x408 (x128 (x1508 x906) (x336 6) 0)) (= (= x486 0) x234) (= (x128 (x1508 x1472) x1051 0) x1213) (= x414 (x1007 x1066)) (= x377 (x128 (x1508 x906) (x336 5) 0)) (= (x347 x789) x1276) (= x59 (= x697 0)) (<= x870 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1509 (x580 1461501637330902918203684832716283019655932542975 x1494)) (or (and (not x358) (= x562 0)) (and (or (and (= (x1007 x320) x543) (= (x1315 (- x71 x543)) x1541) (= x562 x1541) (not (> x543 x71)) x1247) (and (= x745 x562) (= x1079 (x1315 (- x71 x1276))) (= 604800 x1333) (not (< x71 x1276)) (not x1247) (= (ite (> 604800 x1079) x1079 604800) x745))) (= x1070 (> x949 x991)) (= x991 (x1007 x1066)) (= (= x1276 0) x1247) x358 (or (and (= x949 x71) (not x1070)) (and (= x1144 (x1007 x1066)) (= x71 x1144) x1070)))) (= (x128 (x1508 x906) (x336 1) 0) x782) (= x1395 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= (x81 (+ 32 x320)) x1066) (= x200 (x81 (+ x395 2))) (<= x1266 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x96 x1213) x486) (= x389 (x580 1461501637330902918203684832716283019655932542975 x1494)) (>= x1266 0) (or (and (= (x128 (x1508 x531) x207 0) x1477) (not x59) (= (x128 (x1508 x906) (x336 10) 0) x207) (= x531 (x580 1461501637330902918203684832716283019655932542975 x1494))) x59) (= x1196 x134) (= x1196 (x81 (+ 64 x320))) (<= 0 x40) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x40) (= x1463 (x128 (x1508 x906) (x336 3) 0))) x432) x213))
(assert (x537 x989))
(assert (= (x336 2514000705) (x1508 2514000705)))
(assert (= (x1348 x134) (ite (= x539 x134) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x134))))
(assert (= (x1508 635128645) (x336 635128645)))
(assert (x1279 x544))
(assert (x537 x604))
(assert (= (x1057 x87) (ite (and (not x1423) (not x242) x413 x1529) (x871 x87) (ite (and x1529 (not x1423) (not x413)) (x1341 x87) (ite (and x1529 x1423) (x1341 x87) (x142 x87))))))
(assert (= (ite (= x623 x1561) x911 (x1007 x1561)) (x968 x1561)))
(assert (x1279 x620))
(assert (= (ite (and x1529 x413 (not x242) (not x1423)) (x871 x504) (ite (and (not x1423) (not x413) x1529) (x1341 x504) (ite (and x1529 x1423) (x1341 x504) (x142 x504)))) (x1057 x504)))
(assert (x1279 x103))
(assert (=> (>= 10000 x1384) (= (x1508 x1384) (x336 x1384))))
(assert (x537 x984))
(assert (x537 x303))
(assert (x537 x581))
(assert (= (x1555 (x336 2743102681)) 2743102681))
(assert (x1147 1461501637330902918203684832716283019655932542975))
(assert (x537 x479))
(assert (x537 x19))
(assert (x1279 x793))
(assert (x1332 x176 x380))
(assert (x537 x291))
(assert (= (+ 1 (x1555 x782)) (x1555 (x67 x782 1))))
(assert (= x177 (x1555 (x1508 x177))))
(assert (= (x1341 x488) (ite (= x1455 x488) x453 (x554 x488))))
(assert (x838 x1494 x31))
(assert (x537 x992))
(assert (x537 x368))
(assert (x537 x1149))
(assert (x537 x627))
(assert (= (ite (and x865 x1388) (x435 x690) (x126 x690)) (x334 x690)))
(assert (x537 x61))
(assert (= (x1555 (x1508 x233)) x233))
(assert (= (x336 274184521717934524641157099916833587206) (x1508 274184521717934524641157099916833587206)))
(assert (x537 x1196))
(assert (= (x1555 (x1508 x202)) x202))
(assert (x537 x636))
(assert (x537 x741))
(assert (x537 x135))
(assert (=> (<= x655 10000) (= (x336 x655) (x1508 x655))))
(assert (x537 x739))
(assert (x537 x776))
(assert (x537 x453))
(assert (= (x1555 (x1508 x620)) x620))
(assert (x1279 x719))
(assert (= x908 x372))
(assert (x537 x202))
(assert (= (ite (and (not x923) x1237 x322 x744 x942 x305) (x136 x1561) (ite (and x322 (not x942) x305 x1237 x744) (x405 x1561) (ite (and x744 (not x305) x322 x1237) (x215 x1561) (ite (and (not x322) x1237 x744) (x1348 x1561) (x18 x1561))))) (x929 x1561)))
(assert (x1279 x822))
(assert (x537 x813))
(assert (= (x1547 x493) (ite (= x846 x493) x1381 (x1024 x493))))
(assert (= (ite (= x504 x561) x1075 (x405 x504)) (x136 x504)))
(assert (= (x1555 (x1508 x185)) x185))
(assert (= (x938 x875) (ite (and x1529 x1257) (x1448 x875) (x1107 x875))))
(assert (= x1389 (x1555 (x1508 x1389))))
(assert (= (x1261 x1484) (ite (= x1484 x914) x1151 (x77 x1484))))
(assert (= (ite (and (not x111) x1136 x1248 x890 x839 x60) (x534 x690) (ite (and x60 x1136 x890 x839 (not x1248)) (x221 x690) (ite (and x890 x60 (not x839) x1136) (x921 x690) (ite (and (not x1136) x890 x60) (x1396 x690) (x917 x690))))) (x707 x690)))
(assert (x537 x17))
(assert (x537 x1323))
(assert (x537 x1211))
(assert (x537 x911))
(assert (x537 x594))
(assert (= (x1555 (x1508 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (=> (<= x648 10000) (= (x1508 x648) (x336 x648))))
(assert (= x761 (=> (and (> 2293535753 x833) (= 69947311 x833) (= (x616 (x1508 274184521717934524641157099916833587206)) x1207) (= x989 x282) (>= x989 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x989) (= (x251 x1545) x989) (= (x128 (x1508 x1001) x882 0) x1545) (>= 1461501637330902918203684832716283019655932542975 x1001) (= (x128 (x1508 x1502) (x336 10) 0) x882) (< x833 468353030) (> 911411945 x833) (< 0 x1207)) (=> (and (= x282 x499) (= x705 x571) (= x1035 x655) (= x125 x250)) x1121))))
(assert (x537 x1355))
(assert (= (x1555 (x67 x1268 1)) (+ 1 (x1555 x1268))))
(assert (=> (>= 10000 x180) (= (x1508 x180) (x336 x180))))
(assert (= 69947311 (x1555 (x336 69947311))))
(assert (= x439 (x1555 (x1508 x439))))
(assert (= (ite (and x101 x878) (x1452 x564) (ite (and x1250 x878 (not x101)) (x1452 x564) (x1243 x564))) (x1461 x564)))
(assert (= x1557 (=> (= x139 (< x1456 x395)) (and (=> (not x139) x936) (=> (and (= x688 x134) x139) x432)))))
(assert (x1279 x1022))
(assert (x537 x1471))
(assert (x537 x330))
(assert (=> (<= x7 10000) (= (x1508 x7) (x336 x7))))
(assert (= (x1555 (x1508 x687)) x687))
(assert (x537 x1455))
(assert (=> (<= x141 10000) (= (x336 x141) (x1508 x141))))
(assert (= x728 (x1555 (x1508 x728))))
(assert (= (x929 x630) (ite (and x322 x942 x1237 (not x923) x305 x744) (x136 x630) (ite (and x1237 x744 x305 x322 (not x942)) (x405 x630) (ite (and x1237 x322 (not x305) x744) (x215 x630) (ite (and x1237 x744 (not x322)) (x1348 x630) (x18 x630)))))))
(assert (x537 x1170))
(assert (= (x1555 (x336 2514000705)) 2514000705))
(assert (x537 x486))
(assert (x1279 x1509))
(assert (=> (<= x177 10000) (= (x1508 x177) (x336 x177))))
(assert (x537 x1379))
(assert (x537 x87))
(assert (= (ite (and x1237 x744 (not x711)) (x929 x630) (x1050 x630)) (x958 x630)))
(assert (x537 x415))
(assert (x537 x475))
(assert (x537 x1207))
(assert (x537 x105))
(assert (x1279 x1389))
(assert (= (x1261 x504) (ite (= x914 x504) x1151 (x77 x504))))
(assert (x537 x522))
(assert (x537 x1181))
(assert (x537 x1309))
(assert (x537 x439))
(assert (x537 x726))
(assert (x1279 x177))
(assert (= (x1508 274184521717934524641157099916833587218) (x336 274184521717934524641157099916833587218)))
(assert (= (x1555 (x336 1000000000000000000)) 1000000000000000000))
(assert (x637 x1064 x466 x1490 x1036))
(assert (= (x871 x895) (ite (= x895 x488) x905 (x1341 x895))))
(assert (x537 x783))
(assert (x537 x313))
(assert (= (x1555 (x1508 x1245)) x1245))
(assert (= x617 x1540))
(assert (= (x1555 (x1508 x854)) x854))
(assert (x537 x969))
(assert (x537 x395))
(assert (x1279 x1312))
(assert (x1279 x1245))
(assert (= (x1341 x1102) (ite (= x1102 x1455) x453 (x554 x1102))))
(assert (= (x1508 2293535753) (x336 2293535753)))
(assert (x537 x1276))
(assert (x537 x1244))
(assert (x537 x601))
(assert (x537 x541))
(assert (= (x336 115792089237316195423570985008687907853269984665640564039457) (x1508 115792089237316195423570985008687907853269984665640564039457)))
(assert (x1279 x1565))
(assert (x1279 x141))
(assert (x537 x177))
(assert (x537 x351))
(assert (x537 x1195))
(assert (= (x1555 (x1508 x7)) x7))
(assert (x537 x823))
(assert (x537 x863))
(assert (= (x1528 x630) (ite (and x385 x372) (x1261 x630) (x1119 x630))))
(assert (= (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1508 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x537 x366))
(assert (x1279 x1259))
(assert (x537 x613))
(assert (= (x336 2939843472) (x1508 2939843472)))
(assert (x537 x1125))
(assert (= (ite (= x1314 x33) x187 (x1348 x33)) (x215 x33)))
(assert (=> (>= 10000 x335) (= (x1508 x335) (x336 x335))))
(assert (x537 x310))
(assert (= (x1555 (x1508 x1485)) x1485))
(assert (=> (<= x1259 10000) (= (x1508 x1259) (x336 x1259))))
(assert (= (or (and x462 (not x1464)) (and x1135 (not x1103))) x848))
(assert (x537 x1122))
(assert (= (ite (= x464 x846) x1381 (x1024 x464)) (x1547 x464)))
(assert (= (ite (and x60 (not x835) x890) (x707 x690) (x1374 x690)) (x337 x690)))
(assert (x537 x1554))
(assert (x1279 x1378))
(assert (= (x1555 (x1508 x135)) x135))
(assert (= (x1508 1968616202) (x336 1968616202)))
(assert (= (x1261 x895) (ite (= x914 x895) x1151 (x77 x895))))
(assert (x1147 x176))
(assert (= (x1555 (x1508 x258)) x258))
(assert (= (x1348 x1443) (ite (= x1443 x539) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x1443))))
(assert (= (=> (and (<= 0 x56) (>= x718 0) (= (x347 x681) x56) (not (> x906 x718)) (<= x56 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x128 (x1508 x1407) x1525 0) x681) (= (= 0 x56) x841) (= x1407 (x580 1461501637330902918203684832716283019655932542975 x1494)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x718) (= x1525 (x128 (x1508 x906) (x336 6) 0))) (and (=> (and (= (x580 1461501637330902918203684832716283019655932542975 x1494) x164) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1554) (= x1174 (x128 (x1508 x164) x43 0)) (<= 0 x1554) (= x944 x1554) (= x697 0) (not x841) (= x43 (x128 (x1508 x906) (x336 10) 0)) (= x1554 (x938 x1174))) x213) (=> x841 x1277))) x693))
(assert (= (x1555 (x336 1968616202)) 1968616202))
(assert (= (x1555 (x1508 x9)) x9))
(assert (x537 x549))
(assert (= x836 (and x1087 x492)))
(assert (x537 x354))
(assert (x537 x539))
(assert (=> (<= x1217 10000) (= (x336 x1217) (x1508 x1217))))
(assert (x537 x1561))
(assert (x537 x625))
(assert (x537 x459))
(assert (x537 x175))
(assert (x1279 x531))
(assert (= (ite (and x878 x101) (x203 x1028) (ite (and (not x101) x1250 x878) (x474 x1028) (x1436 x1028))) (x298 x1028)))
(assert (= (x1348 x895) (ite (= x539 x895) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x895))))
(assert (x537 x513))
(assert (x537 x999))
(assert (x537 x597))
(assert (x537 x176))
(assert (x537 x295))
(assert (x1279 x114))
(assert (= (x11 x1548) (ite (and x413 (not x1423) (not x242) x1529) (x1547 x1548) (ite (and x1529 (not x413) (not x1423)) (x1024 x1548) (ite (and x1423 x1529) (x1024 x1548) (x1371 x1548))))))
(assert (=> (>= 10000 x378) (= (x1508 x378) (x336 x378))))
(assert (x537 x472))
(assert (x537 x1399))
(assert (= (=> (and (or (and (= (x938 x875) x1303) (not x401) (= (= 0 x1303) x699) (= (x128 (x1508 x1033) (x336 10) 0) x816) (or (and x699 (= x944 0) (= x697 0)) (and (= 1 x697) (not x699) (= x1303 x944))) (<= x1303 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x378 (x580 1461501637330902918203684832716283019655932542975 x1494)) (<= 0 x1303) (= (x128 (x1508 x378) x816 0) x875)) (and (= 0 x697) x401 (= x944 0))) (= (= 0 x1033) x401)) x213) x89))
(assert (= (ite (= x245 x539) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x245)) (x1348 x245)))
(assert (= (x1461 x1213) (ite (and x101 x878) (x1452 x1213) (ite (and x878 (not x101) x1250) (x1452 x1213) (x1243 x1213)))))
(assert (x537 x1373))
(assert (= (ite (and (not x923) x744 x305 x942 x322 x1237) (x136 x1484) (ite (and x744 x322 x305 x1237 (not x942)) (x405 x1484) (ite (and (not x305) x744 x1237 x322) (x215 x1484) (ite (and x1237 x744 (not x322)) (x1348 x1484) (x18 x1484))))) (x929 x1484)))
(assert (x537 x1205))
(assert (= 2960351575 (x1555 (x336 2960351575))))
(assert (= (x1555 (x1508 x76)) x76))
(assert (= (or (and x1365 (not x932)) x764) x1529))
(assert (=> (>= 10000 x1216) (= (x336 x1216) (x1508 x1216))))
(assert (x537 x870))
(assert (x537 x922))
(assert (= x1197 (x1555 (x1508 x1197))))
(assert (x537 x1049))
(assert (= (or (and x325 x447) x1286 (and x908 x139)) x1237))
(assert (x537 x626))
(assert (= (ite (= x1015 x3) x1492 (x921 x1015)) (x221 x1015)))
(assert (x1279 x202))
(assert (x537 x511))
(assert (=> (<= x536 10000) (= (x1508 x536) (x336 x536))))
(assert (= (x968 x33) (ite (= x33 x623) x911 (x1007 x33))))
(assert (= (ite (and (not x835) x60 x890) (x707 x69) (x1374 x69)) (x337 x69)))
(assert (x537 x12))
(assert (= (=> (= x1120 0) x540) x463))
(assert (x537 x237))
(assert (x1279 x1395))
(assert (= (x62 160) 0))
(assert (x537 x1338))
(assert (= (or x41 x1043) x1096))
(assert (x537 x3))
(assert (= x870 (x1007 x1066)))
(assert (= x660 (=> (and (not (= 2764855426 x1470)) (= x57 x165) (<= 0 x165) (not (< x1470 2690754053)) (< x1470 2960351575) (= x1470 2798343961) (> x549 0) (>= 1461501637330902918203684832716283019655932542975 x687) (= (x128 (x1508 x1084) (x336 5) 0) x1534) (<= x165 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> 2293535753 x1470)) (= (x128 (x1508 x687) x1534 0) x1129) (not (= 2690754053 x1470)) (= (x616 (x1508 274184521717934524641157099916833587206)) x549) (= (x1347 x1129) x165) (not (= 2743102681 x1470))) (=> (and (= x57 x909) (= x705 x1001) (= x1035 x1502)) x761))))
(assert (= (or (and (not x1500) x892) (and (not x1185) x836)) x41))
(assert (= (x1555 (x336 2690754053)) 2690754053))
(assert (x1279 274184521717934524641157099916833587218))
(assert (= x1483 x226))
(assert (x537 x620))
(assert (=> (>= 10000 x821) (= (x336 x821) (x1508 x821))))
(assert (= (x1555 (x1508 x1200)) x1200))
(assert (= (=> (= x1122 x129) x781) x297))
(assert (x1279 x1380))
(assert (= (x1555 (x1508 x1322)) x1322))
(assert (x1279 x55))
(assert (x537 x1083))
(assert (x537 x1299))
(assert (= (x1348 x1015) (ite (= x1015 x539) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x1015))))
(assert (= (ite (and x385 x372) (x1261 x33) (x1119 x33)) (x1528 x33)))
(assert (x1147 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1279 x624))
(assert (x537 x1449))
(assert (= x308 (x1555 (x1508 x308))))
(assert (x537 x1416))
(assert (x537 x190))
(assert (x1279 x343))
(assert (x537 x837))
(assert (= (x336 1517119036) (x1508 1517119036)))
(assert (= (ite (and x372 x385) (x1261 x1443) (x1119 x1443)) (x1528 x1443)))
(assert (x537 x1031))
(assert (= (ite (= x561 x1561) x1075 (x405 x1561)) (x136 x1561)))
(assert (x537 x981))
(assert (= x979 (x1555 (x1508 x979))))
(assert (= 1517119036 (x1555 (x336 1517119036))))
(assert (= (x215 x895) (ite (= x895 x1314) x187 (x1348 x895))))
(assert (=> (>= 10000 x535) (= (x336 x535) (x1508 x535))))
(assert (= x1135 (and x1150 x651)))
(assert (=> (<= x172 10000) (= (x1508 x172) (x336 x172))))
(assert (x1279 x395))
(assert (= x416 (=> (and (<= 0 x1108) (= x8 (x580 1461501637330902918203684832716283019655932542975 x355)) (= x1507 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= (x128 (x1508 x1507) x519 0) x888) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1108) (= (x128 (x1508 x8) x888 0) x1204) (= x519 (x128 (x1508 x395) (x336 7) 0)) (= x1567 (= 0 x1108)) (= (x1016 x1204) x1108)) (and (=> (and (not x1567) (= x395 x746)) x1222) (=> x1567 x595)))))
(assert (= (x1057 x1102) (ite (and x1529 x413 (not x242) (not x1423)) (x871 x1102) (ite (and x1529 (not x413) (not x1423)) (x1341 x1102) (ite (and x1423 x1529) (x1341 x1102) (x142 x1102))))))
(assert (x537 x20))
(assert (x537 x861))
(assert (x537 x916))
(assert (x1279 x1384))
(assert (x537 x1045))
(assert (x1279 x1428))
(assert (= 87118632 (x1555 (x336 87118632))))
(assert (x537 x1259))
(assert (x537 x225))
(assert (x537 x868))
(assert (x537 x1320))
(assert (x537 x283))
(assert (= x453 (x1341 x1455)))
(assert (x537 x719))
(assert (= (x1528 x1015) (ite (and x385 x372) (x1261 x1015) (x1119 x1015))))
(assert (= (x867 x493) (ite (= x493 x464) x256 (x11 x493))))
(assert (x537 x1030))
(assert (x537 x1013))
(assert (= (=> (and (= x604 x705) (= x66 x1035)) x701) x1060))
(assert (x537 x427))
(assert (x537 x904))
(assert (x1279 x679))
(assert (x537 x480))
(assert (x537 x909))
(assert (= (ite (and x1529 x178) (x899 x789) (x1408 x789)) (x347 x789)))
(assert (x537 x632))
(assert (x537 x84))
(assert (= (x1261 x69) (ite (= x914 x69) x1151 (x77 x69))))
(assert (= x1518 x1162))
(assert (= (ite (= x33 x446) x219 (x215 x33)) (x405 x33)))
(assert (= (ite (and x385 x372) (x1261 x1484) (x1119 x1484)) (x1528 x1484)))
(assert (= (=> (= x746 x1120) x540) x1222))
(assert (= (x1555 (x1508 x847)) x847))
(assert (= (x405 x1561) (ite (= x1561 x446) x219 (x215 x1561))))
(assert (=> (<= x571 10000) (= (x1508 x571) (x336 x571))))
(assert (x537 x1120))
(assert (= (x1528 x623) (ite (and x372 x385) (x1261 x623) (x1119 x623))))
(assert (x537 x249))
(assert (= (ite (= x645 x914) x1151 (x77 x645)) (x1261 x645)))
(assert (= (x1555 (x1508 x1216)) x1216))
(assert (=> (<= x687 10000) (= (x336 x687) (x1508 x687))))
(assert (= (ite (= x623 x1569) x911 (x1007 x1569)) (x968 x1569)))
(assert (x537 x1182))
(assert (= x1163 (x1555 (x1508 x1163))))
(assert (x537 x292))
(assert (= (x496 x69) (ite (and x1503 x881) (x1215 x69) (x1358 x69))))
(assert (x1279 x741))
(assert (= (+ 1 (x1555 x508)) (x1555 (x67 x508 1))))
(assert (x537 x76))
(assert (x537 x1419))
(assert (x1279 x23))
(assert (x537 x645))
(assert (x537 x1558))
(assert (x1279 x135))
(assert (= (x1555 (x1508 x679)) x679))
(assert (= (x938 x1174) (ite (and x1529 x1257) (x1448 x1174) (x1107 x1174))))
(assert (x1279 x963))
(assert (x537 x1152))
(assert (x1279 x439))
(assert (x1279 x7))
(assert (x537 x1487))
(assert (x537 x1420))
(assert (= (x62 x245) 0))
(assert (= (x1555 (x1508 x963)) x963))
(assert (=> (<= x66 10000) (= (x1508 x66) (x336 x66))))
(assert (= (ite (and x865 x1388) (x435 x504) (x126 x504)) (x334 x504)))
(assert (= x853 (or (and x186 x1357) (and (not x1206) x1221) (and (not x361) x1130))))
(assert (= (or x796 x263) x524))
(assert (x537 x1414))
(assert (= (and x1224 (not x381)) x1087))
(assert (= (x1555 (x1508 x379)) x379))
(assert (x537 x1405))
(assert (x1279 x237))
(assert (x1279 x728))
(assert (=> (>= 10000 x1420) (= (x336 x1420) (x1508 x1420))))
(assert (= x1084 (x1555 (x1508 x1084))))
(assert (x1279 x794))
(assert (=> (<= x46 10000) (= (x336 x46) (x1508 x46))))
(assert (=> (<= x1249 10000) (= (x336 x1249) (x1508 x1249))))
(assert (x537 x1245))
(assert (x537 x778))
(assert (= (ite (= x3 x1443) x1492 (x921 x1443)) (x221 x1443)))
(assert (= x343 (x1555 (x1508 x343))))
(assert (=> (>= 10000 x719) (= (x1508 x719) (x336 x719))))
(assert (x537 x1384))
(assert (x537 x817))
(assert (x1279 x335))
(assert (x1279 x950))
(assert (x537 x1326))
(assert (x537 x340))
(assert (x537 x72))
(assert (x537 x1053))
(assert (= (x968 x1102) (ite (= x623 x1102) x911 (x1007 x1102))))
(assert (= x1121 (=> (and (< x1431 911411945) (>= 1461501637330902918203684832716283019655932542975 x125) (= x467 (x128 (x1508 x655) (x336 7) 0)) (>= 1461501637330902918203684832716283019655932542975 x571) (<= 0 x1478) (= 759532456 x1431) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1478) (not (> 468353030 x1431)) (not (= 468353030 x1431)) (< 0 x612) (= x783 x1478) (> 2293535753 x1431) (= (x616 (x1508 274184521717934524641157099916833587206)) x612) (= x384 (x128 (x1508 x571) x467 0)) (not (= x1431 635128645)) (= (x412 x148) x1478) (= (x128 (x1508 x125) x384 0) x148)) (=> (and (= x1004 x1035) (= x154 x705) (= x783 x601) (= x250 x308)) x862))))
(assert (x537 x218))
(assert (= (x1555 (x1508 x340)) x340))
(assert (x1279 x66))
(assert (x537 x1296))
(assert (= x793 (x1555 (x1508 x793))))
(assert (= (x1057 x690) (ite (and x413 (not x242) x1529 (not x1423)) (x871 x690) (ite (and (not x1423) (not x413) x1529) (x1341 x690) (ite (and x1423 x1529) (x1341 x690) (x142 x690))))))
(assert (x537 x1095))
(assert (x537 x1251))
(assert (=> (>= 10000 x350) (= (x336 x350) (x1508 x350))))
(assert (= 2211524764 (x1555 (x336 2211524764))))
(assert (=> (<= x76 10000) (= (x1508 x76) (x336 x76))))
(assert (x537 x1412))
(assert (= (ite (= x1548 x846) x1381 (x1024 x1548)) (x1547 x1548)))
(assert (x537 x1234))
(assert (x537 x536))
(assert (=> (>= 10000 x624) (= (x336 x624) (x1508 x624))))
(assert (x1279 x827))
(assert (= x30 (x1555 (x1508 x30))))
(assert (= (=> (and (= x598 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= x1103 (= 0 x599)) (<= x599 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1353 (x128 (x1508 x906) (x336 6) 0)) (= (x347 x1556) x599) (>= x599 0) (= (x128 (x1508 x598) x1353 0) x1556)) (and (=> (and (not x1103) (= x1539 x906)) x390) (=> x1103 x924))) x780))
(assert (x537 x1507))
(assert (=> (<= x753 10000) (= (x1508 x753) (x336 x753))))
(assert (x537 x350))
(assert (= x1193 (or (and x1150 (not x651)) (and (not x925) x1027) (and x1464 x462))))
(assert (x1279 x46))
(assert (x1279 x1451))
(assert (x537 x690))
(assert (x537 x876))
(assert (x537 x856))
(assert (x537 x374))
(assert (=> (<= x728 10000) (= (x336 x728) (x1508 x728))))
(assert (x537 x232))
(assert (x537 x791))
(assert (= (x298 x567) (ite (and x878 x101) (x203 x567) (ite (and x878 (not x101) x1250) (x474 x567) (x1436 x567)))))
(assert (= (ite (= x504 x1455) x453 (x554 x504)) (x1341 x504)))
(assert (= x462 (and x1027 x925)))
(assert (x537 x1489))
(assert (x537 x91))
(assert (= x1130 (and x1365 x932)))
(assert (x537 x1494))
(assert (x537 x223))
(assert (=> (<= x980 10000) (= (x1508 x980) (x336 x980))))
(assert (x537 x1109))
(assert (= x571 (x1555 (x1508 x571))))
(assert (= (x1341 x1484) (ite (= x1484 x1455) x453 (x554 x1484))))
(assert (= x1241 (or x1096 (and x1224 x381))))
(assert (x537 x907))
(assert (= (ite (and x178 x1529) (x899 x29) (x1408 x29)) (x347 x29)))
(assert (= x307 (=> (= x492 (> x906 0)) (and (=> (not x492) x1002) (=> x492 x1481)))))
(assert (x537 x1105))
(assert (x1279 x1153))
(assert (x537 x246))
(assert (= x535 (x1555 (x1508 x535))))
(assert (x537 x1422))
(assert (x537 x1041))
(assert (x537 x1032))
(assert (=> (>= 10000 x116) (= (x336 x116) (x1508 x116))))
(assert (= (ite (= x623 x1443) x911 (x1007 x1443)) (x968 x1443)))
(assert (= x267 (x1555 (x1508 x267))))
(assert (x537 x1015))
(assert (= (ite (and (not x1423) (not x242) x413 x1529) (x871 x69) (ite (and (not x1423) x1529 (not x413)) (x1341 x69) (ite (and x1529 x1423) (x1341 x69) (x142 x69)))) (x1057 x69)))
(assert (= x1405 (x1555 (x1508 x1405))))
(assert (= (ite (= x505 x33) x1182 (x1396 x33)) (x921 x33)))
(assert (x1279 x1200))
(assert (x537 x572))
(assert (= (x62 x895) 0))
(assert (= 468353030 (x1555 (x336 468353030))))
(assert (= (ite (= x1440 x488) x905 (x1341 x1440)) (x871 x1440)))
(assert (x537 x562))
(assert (= (x1555 (x1508 x180)) x180))
(assert (= (=> (and x1042 (= x946 (<= 0 x1034)) (= (x1493 (x1508 x728)) x84) x946 (= (x976 (x1508 x728)) x578) (= x1175 x523) x1047 (= x1034 (x1493 (x1508 274184521717934524641157099916833587206))) (= x865 (= 274184521717934524641157099916833587218 x728)) (= (x1493 (x1508 274184521717934524641157099916833587206)) x1098) (= (< x84 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1047) (= x1042 (< (x976 (x1508 x728)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x865) x738) (=> (and (= x1295 68) (> x5 0) (>= x682 0) (= x822 x276) (= 2835717307 x596) (<= x682 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 826074471 x596)) (= x886 274184521717934524641157099916833587206) (= (x658 x668) x682) (= x265 (x294 x363)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x113 x265)) (not (> 4 x1295)) (not (= 649617121 x596)) (= (< x682 x113) x784) (= x469 (x1315 (- x682 x271))) (= x1453 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (>= (+ x113 x265) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x993) (not (> 649617121 x596)) (= x113 x271) (<= 0 x265) (= x113 x465) (= (or (and (< x1355 64) (= (<= x1355 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1355 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x171) (= (x128 (x1508 x822) (x336 1) 0) x363) (= x156 x146) (= x857 (< x682 x271)) (<= x822 1461501637330902918203684832716283019655932542975) (not x171) (not x784) (= (+ x465 x1434) x472) (= x668 (x128 (x1508 274184521717934524641157099916833587206) (x336 1) 0)) (= x1434 x265) (not x993) (not (= x596 2514000705)) (= x5 (x616 (x1508 274184521717934524641157099916833587218))) (= (x128 (x1508 x822) (x336 1) 0) x1202) x865 (= x1319 1) (not (= 1889567281 x596)) (= x1083 x271) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x265) (= x822 x739) (not x857) (= x1053 274184521717934524641157099916833587206) (= (x128 (x1508 274184521717934524641157099916833587206) (x336 1) 0) x684) (= 32 x767) (= (x1315 (- x1295 4)) x1355) (= x1175 x1295)) x1430))) x286))
(assert (= (ite (and x385 x372) (x1261 x1102) (x1119 x1102)) (x1528 x1102)))
(assert (x537 x343))
(assert (= x1282 (or (and (not x1357) x186) (and x315 (not x1062)))))
(assert (= (=> (and (= x402 (= x370 0)) (or (and (= (x580 1461501637330902918203684832716283019655932542975 x355) x114) (= x42 (x298 x162)) (or (and (or (and (= x1562 x629) (= (x1474 x960) x635) (= x1562 (x1315 (- x1469 x635))) (not (> x635 x1469)) x22) (and (not x22) (= x1092 (ite (> 604800 x457) x457 604800)) (= x629 x1092) (= (x1315 (- x1469 x42)) x457) (= 604800 x609) (not (< x1469 x42)))) (= (x1474 x1109) x175) x473 (= (< x175 x949) x869) (= (= 0 x42) x22) (or (and (= x949 x1469) (not x869)) (and (= x1469 x330) x869 (= (x1474 x1109) x330)))) (and (not x473) (= 0 x629))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x1245) (= (= x629 0) x568) (= x1101 (x128 (x1508 x906) (x336 7) 0)) (= (x81 (+ 96 x374)) x1109) (= x625 (x606 x814)) (= (x1474 x1109) x1479) (= (> x1479 x42) x473) (= x1176 (x109 x508)) (>= x1176 0) (= x508 (x128 (x1508 x906) (x336 1) 0)) (>= x625 0) (<= x42 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= x843 x1296) (= x675 (x128 (x1508 x513) x1272 0)) (= x847 (x580 1461501637330902918203684832716283019655932542975 x355)) (not x568) (= (x128 (x1508 x906) (x336 3) 0) x1272) (= (x580 1461501637330902918203684832716283019655932542975 x355) x9) (= x320 x269) (= x843 (* x529 x629)) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x513) (= x1242 (x128 (x1508 x847) x675 0)) (< (* x629 x529) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x428 (x128 (x1508 x1417) x1496 0)) (= x1417 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= x735 (x128 (x1508 x9) x428 0)) (= (x128 (x1508 x906) (x336 7) 0) x1496)) (and (= (x128 (x1508 x906) (x336 7) 0) x770) (= x269 x320) (= (x128 (x1508 x262) x770 0) x1476) x568 (= (x580 1461501637330902918203684832716283019655932542975 x355) x679) (= x985 (x128 (x1508 x679) x1476 0)) (= x262 (x580 1461501637330902918203684832716283019655932542975 x1494)))) (<= x1176 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x42 0) (= (x128 (x1508 x114) x131 0) x162) (= (x67 x508 1) x814) (= x269 (x81 (+ x374 128))) (= (x128 (x1508 x1245) x1101 0) x131) (not x945)) (and (= x575 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= (x128 (x1508 x618) x277 0) x1467) (= x320 x960) (= x618 (x580 1461501637330902918203684832716283019655932542975 x355)) x945 (= (x128 (x1508 x575) x1328 0) x277) (= (x128 (x1508 x906) (x336 7) 0) x1328))) (= (= 0 x529) x945) (or (and (= (x128 (x1508 x779) x810 0) x1441) (not x402) (= x974 (x128 (x1508 x794) x1441 0)) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x779) (= x810 (x128 (x1508 x906) (x336 9) 0)) (= (x580 1461501637330902918203684832716283019655932542975 x355) x794)) x402)) x693) x90))
(assert (x537 x718))
(assert (= (x405 x914) (ite (= x446 x914) x219 (x215 x914))))
(assert (x537 x1200))
(assert (x537 x679))
(assert (= (ite (= x623 x1455) x453 (x554 x623)) (x1341 x623)))
(assert (= (x1555 (x336 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (x1279 x655))
(assert (= (x1261 x1561) (ite (= x1561 x914) x1151 (x77 x1561))))
(assert (x537 x187))
(assert (= (x221 x69) (ite (= x3 x69) x1492 (x921 x69))))
(assert (x537 x1482))
(assert (=> (>= 10000 x55) (= (x336 x55) (x1508 x55))))
(assert (x537 x680))
(assert (x537 x78))
(assert (x537 x125))
(assert (=> (>= 10000 x1380) (= (x1508 x1380) (x336 x1380))))
(assert (= (ite (and x744 x1237 (not x711)) (x929 x914) (x1050 x914)) (x958 x914)))
(assert (x537 x1142))
(assert (x537 x1492))
(assert (x537 x1381))
(assert (= (ite (= x319 x690) x640 (x221 x690)) (x534 x690)))
(assert (= (x1555 (x1508 x1045)) x1045))
(assert (x537 x930))
(assert (x1279 x1084))
(assert (= (ite (= x846 x507) x1381 (x1024 x507)) (x1547 x507)))
(assert (x537 x114))
(assert (x1279 x1407))
(assert (= x764 (or x1282 x853)))
(assert (= (x334 x1443) (ite (and x865 x1388) (x435 x1443) (x126 x1443))))
(assert (x1279 x930))
(assert (x537 x695))
(assert (x1279 x1216))
(assert (x537 x889))
(assert (=> (<= x9 10000) (= (x336 x9) (x1508 x9))))
(assert (= true x229))
(assert (= (x1555 (x1508 x655)) x655))
(assert (x537 x499))
(assert (x1279 x1502))
(assert (=> (<= x1033 10000) (= (x336 x1033) (x1508 x1033))))
(assert (x1279 x906))
(assert (x1279 x289))
(assert (=> (<= x365 10000) (= (x1508 x365) (x336 x365))))
(assert (x1279 x76))
(assert (x1147 x1494))
(assert (= (x62 x817) 0))
(assert (x1279 x1485))
(assert (x1147 x1049))
(assert (x537 x1404))
(assert (= (ite (= x504 x539) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x504)) (x1348 x504)))
(assert (x537 x752))
(assert (= x1277 (=> (= (< 0 x906) x651) (and (=> x651 x780) (=> (not x651) x150)))))
(assert (= x275 true))
(assert (= (x1555 (x1508 x1380)) x1380))
(assert (x537 x833))
(assert (x537 x1378))
(assert (x537 x224))
(assert (= (x336 2868243304) (x1508 2868243304)))
(assert (x537 x1421))
(assert (= x1419 (x1555 (x1508 x1419))))
(assert (= (x336 2512682246) (x1508 2512682246)))
(assert (=> (<= x1486 10000) (= (x1508 x1486) (x336 x1486))))
(assert (x537 x640))
(assert (x537 x1209))
(assert (=> (>= 10000 x115) (= (x336 x115) (x1508 x115))))
(assert (= (x1555 (x1508 x1004)) x1004))
(assert (= (x1261 x33) (ite (= x914 x33) x1151 (x77 x33))))
(assert (x537 x180))
(assert (x537 x1110))
(assert (=> (>= 10000 x1509) (= (x1508 x1509) (x336 x1509))))
(assert (x537 x635))
(assert (= (ite (= x690 x1314) x187 (x1348 x690)) (x215 x690)))
(assert (= (x1057 x1484) (ite (and (not x242) x413 x1529 (not x1423)) (x871 x1484) (ite (and (not x413) x1529 (not x1423)) (x1341 x1484) (ite (and x1423 x1529) (x1341 x1484) (x142 x1484))))))
(assert (x537 x571))
(assert (= (x1363 x26) (ite (and x878 x873) (x80 x26) (x248 x26))))
(assert (=> (<= x1124 10000) (= (x336 x1124) (x1508 x1124))))
(assert (x537 x166))
(assert (x1279 x30))
(assert (= (or (and x285 x1187) (and x1503 x881)) x748))
(assert (x537 x455))
(assert (= (x1555 (x1508 x262)) x262))
(assert (x1279 x327))
(assert (= (x1508 1461501637330902918203684832716283019655932542975) (x336 1461501637330902918203684832716283019655932542975)))
(assert (x537 x689))
(assert (= (x405 x1569) (ite (= x446 x1569) x219 (x215 x1569))))
(assert (x537 x113))
(assert (x1279 x8))
(assert (x1279 x1543))
(assert (= (ite (= x561 x1569) x1075 (x405 x1569)) (x136 x1569)))
(assert (x537 x333))
(assert (= (x1555 (x336 604800)) 604800))
(assert (= x1430 (=> (and (= (x1522 x630) x421) (= x934 (x137 (x1508 x728))) (not (= x1319 0)) (= (x619 (x1508 274184521717934524641157099916833587206)) x406) (or (and (= x223 x309) x1218 (= 96 x630)) (and (= (x81 (+ 63 x767)) x1064) (= x309 x630) (= (x81 (+ 96 x1227)) x314) (= (x81 (+ x1048 x309)) x1030) (not x1218) (= x1030 x223) (= (x580 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1064) x1048))) x570 (= x570 (< (x619 (x1508 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x421 0) x1462) (or (and (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x388) true) (< x388 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x388))) (> x354 0) (= x997 (= x354 0)) (= (ite x815 1 0) x123) (= (x1522 x1561) x354) (= (x1522 x630) x388) (= x354 x123) x1462 (= x1561 (x81 (+ 32 x630))) (= (not x997) x815)) (not x1462)) (= x1218 (= x767 0))) x1287)))
(assert (x537 x1132))
(assert (= x1365 x878))
(assert (x537 x1079))
(assert (x537 x94))
(assert (= (x1555 (x336 2418364589)) 2418364589))
(assert (= (x221 x690) (ite (= x3 x690) x1492 (x921 x690))))
(assert (x1279 x577))
(assert (x537 x544))
(assert (= (=> (and (>= x904 0) (<= x904 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x586 (x128 (x1508 x620) (x336 7) 0)) (= (x128 (x1508 x1249) x586 0) x1352) (= x552 (x128 (x1508 x1153) x1352 0)) (= x1249 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= (x580 1461501637330902918203684832716283019655932542975 x355) x1153) (= (= 0 x904) x1500) (= (x298 x552) x904)) (and (=> (and (not x1500) (= x620 x845)) x702) (=> (and (not x964) (= (< 0 x4) x964) x1500 (= (x1315 (- x620 1)) x4)) x1002))) x441))
(assert (= (x1555 (x336 635128645)) 635128645))
(assert (= (x1555 (x336 2532887486)) 2532887486))
(assert (= (ite (= x817 x623) x911 (x1007 x817)) (x968 x817)))
(assert (= x1270 x730))
(assert (x537 x30))
(assert (= x1507 (x1555 (x1508 x1507))))
(assert (= (x1555 (x1508 x94)) x94))
(assert (x537 x553))
(assert (x537 x164))
(assert (x1147 x107))
(assert (= x368 (x1555 (x1508 x368))))
(assert (= (ite (= x1484 x581) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x179 x1484)) (x1396 x1484)))
(assert (= (ite (= x1455 x1015) x453 (x554 x1015)) (x1341 x1015)))
(assert (=> (<= x48 10000) (= (x1508 x48) (x336 x48))))
(assert (= x104 (x1555 (x1508 x104))))
(assert (x537 x490))
(assert (x537 x1197))
(assert (= (x1555 (x1508 x1378)) x1378))
(assert (= (x1396 x223) (ite (= x581 x223) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x179 x223))))
(assert (x537 x666))
(assert (x537 x133))
(assert (x537 x1569))
(assert (x537 x130))
(assert (= (x1555 (x1508 x1239)) x1239))
(assert (= (and x447 (not x325)) x1224))
(assert (=> (<= x1084 10000) (= (x1508 x1084) (x336 x1084))))
(assert (= 0 (x62 x1569)))
(assert (= (x336 604800) (x1508 604800)))
(assert (x537 x1484))
(assert (= (x298 x162) (ite (and x878 x101) (x203 x162) (ite (and x878 x1250 (not x101)) (x474 x162) (x1436 x162)))))
(assert (= (x1007 x914) (ite (= x1066 x914) x870 (x757 x914))))
(assert (x537 x1249))
(assert (x537 x939))
(assert (= (ite (= x69 x319) x640 (x221 x69)) (x534 x69)))
(assert (x537 x987))
(assert (= (and x252 x167) x102))
(assert (x1279 x1239))
(assert (= (ite (= x1066 x69) x870 (x757 x69)) (x1007 x69)))
(assert (= x673 x1483))
(assert (= (ite (and x1237 x744 (not x711)) (x929 x1569) (x1050 x1569)) (x958 x1569)))
(assert (= x590 (=> (and (= (x128 (x1508 x854) (x336 6) 0) x1325) (<= 0 x689) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x116) (= (= 0 x689) x1464) (= (x347 x29) x689) (<= x689 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x128 (x1508 x116) x1325 0) x29)) (and (=> (and (= x1225 (< 0 x880)) (= (x1315 (- x854 1)) x880) x1464 (not x1225)) x150) (=> (and (not x1464) (= x1539 x854)) x390)))))
(assert (x537 x233))
(assert (= 274184521717934524641157099916833587214 (x1555 (x336 274184521717934524641157099916833587214))))
(assert (x537 x329))
(assert (= (ite (= x1440 x1455) x453 (x554 x1440)) (x1341 x1440)))
(assert (x537 x75))
(assert (= (x968 x1484) (ite (= x1484 x623) x911 (x1007 x1484))))
(assert (= (x1555 (x1508 x365)) x365))
(assert (= (and x896 (not x1497)) x1297))
(assert (x537 x48))
(assert (x537 x1502))
(assert (x1279 x1486))
(assert (=> (>= 10000 x1565) (= (x336 x1565) (x1508 x1565))))
(assert (x1279 x854))
(assert (x537 x110))
(assert (= x145 (=> (and (= (= 0 x1373) x1062) (<= x1373 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1373 (x1305 x503)) (= x648 (x580 1461501637330902918203684832716283019655932542975 x1494)) (<= 0 x1373) (= x972 (x128 (x1508 x395) (x336 6) 0)) (= x503 (x128 (x1508 x648) x972 0))) (and (=> (and (not x1062) (= x1122 x395)) x297) (=> x1062 x555)))))
(assert (x537 x1375))
(assert (x537 x1271))
(assert (=> (>= 10000 x30) (= (x336 x30) (x1508 x30))))
(assert (= (x1555 (x1508 x1543)) x1543))
(assert (= x437 (and x836 x1185)))
(assert (= (ite (and (not x711) x1237 x744) (x929 x1484) (x1050 x1484)) (x958 x1484)))
(assert (= (x1555 (x1508 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x537 x714))
(assert (= x186 (and x1221 x1206)))
(assert (= (x1555 (x1508 x364)) x364))
(assert (= (x1555 (x1508 x61)) x61))
(assert (x537 x898))
(assert (x537 x753))
(assert (x537 x157))
(assert (= (x1007 x623) (ite (= x623 x1066) x870 (x757 x623))))
(assert (x1279 x308))
(assert (x537 x236))
(assert (x537 x819))
(assert (= (ite (= x1443 x1314) x187 (x1348 x1443)) (x215 x1443)))
(assert (= (x958 x690) (ite (and x1237 x744 (not x711)) (x929 x690) (x1050 x690))))
(assert (x1279 x389))
(assert (x537 x454))
(assert (= x683 (=> (and (= x453 (x606 x1288)) (or (and (= (< x218 x949) x731) (= x1164 (= 0 x576)) x755 (or (and (not (< x411 x204)) (= x1316 (x1315 (- x411 x204))) (= x204 (x1341 x374)) (= x1244 x1316) x1164) (and (= x511 x1244) (= x756 (x1315 (- x411 x576))) (= x511 (ite (< x756 604800) x756 604800)) (not (< x411 x576)) (= 604800 x419) (not x1164))) (= x218 (x1341 x1455)) (or (and (= x362 x411) x731 (= x362 (x1341 x1455))) (and (not x731) (= x949 x411)))) (and (not x755) (= 0 x1244))) (= x2 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= (x128 (x1508 x395) (x336 6) 0) x1413) (= (x128 (x1508 x395) (x336 3) 0) x1044) (= x236 (x109 x927)) (= (x128 (x1508 x267) x1044 0) x1040) (= x1142 (x580 1461501637330902918203684832716283019655932542975 x355)) (<= 0 x236) (= x267 (x580 1461501637330902918203684832716283019655932542975 x1494)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x453) (= (< x576 x479) x755) (= x1331 (x1461 x564)) (= (x128 (x1508 x395) (x336 1) 0) x927) (>= x576 0) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x258) (= x1455 (x81 (+ x374 32))) (or x1423 (and (< 0 x584) (or (not x413) (and (= (x128 (x1508 x343) x1160 0) x1290) (> x1151 0) (= x1361 x1154) (>= 1461501637330902918203684832716283019655932542975 x535) (= x306 x1517) (= (x128 (x1508 x395) (x336 4) 0) x360) (= x550 x1273) (= x1238 (x369 x664)) (= (x955 x306) x1379) (= (x1341 x914) x93) (= x1488 (x1024 x181)) (= x343 (x580 1461501637330902918203684832716283019655932542975 x1494)) (< 0 x93) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1361 x1390)) (>= x1238 0) (= x1390 x371) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x550) (= x246 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= x242 (> x1151 1)) (= x190 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= x1390 (x1341 x488)) (= x535 (x955 x306)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1488) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1238) x413 (= (x128 (x1508 x535) x913 0) x181) (<= x350 1461501637330902918203684832716283019655932542975) (= (x955 x306) x350) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1209 x1238)) (= x1361 (div x1411 1000000000000000000)) (= (+ x371 x1154) x905) (= (x128 (x1508 x246) x1318 0) x1425) (= x526 (x580 1461501637330902918203684832716283019655932542975 x355)) (= x913 (x128 (x1508 x626) x798 0)) (< 0 x1151) (= (x81 (+ x480 160)) x488) (= (x128 (x1508 x1379) x1427 0) x846) (= 0 x1488) (>= 1461501637330902918203684832716283019655932542975 x1379) (>= x550 0) (>= x1488 0) (= (x128 (x1508 x526) x1425 0) x1427) (= (x128 (x1508 x395) (x336 11) 0) x1160) (= (x1024 x846) x550) (= (x580 1461501637330902918203684832716283019655932542975 x355) x626) (= x1381 (+ x607 x1273)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x550 x1331)) (= (x128 (x1508 x190) x360 0) x798) (= x664 (x128 (x1508 x350) x1290 0)) (= (* x1209 x1238) x1411) (or (not x242) (and (= x232 (x1547 x507)) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x979) (not x119) (= x1005 (x128 (x1508 x1312) x1359 0)) (= x721 (x128 (x1508 x1259) x1005 0)) (= (x128 (x1508 x1132) x1480 0) x1134) (= x119 (< 2 x1151)) (= (x128 (x1508 x979) x1393 0) x192) (= (x580 1461501637330902918203684832716283019655932542975 x355) x313) (= x1259 (x955 x311)) (<= 0 x65) (= x1571 (x1547 x1134)) x242 (>= 1461501637330902918203684832716283019655932542975 x1259) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x1312) (<= x1571 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x74 x383) (= x383 (x871 x645)) (= x1342 x1309) (= x44 (x128 (x1508 x395) (x336 4) 0)) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x861) (= (* x65 x1209) x852) (= x311 (x81 (+ x636 64))) (= (x955 x311) x364) (= (+ x1071 x866) x303) (= (x128 (x1508 x313) x192 0) x1480) (< 1 x1151) (<= 0 x1571) (= (x128 (x1508 x861) x44 0) x762) (> x1151 1) (> x1151 1) (= (div x852 1000000000000000000) x1309) (< 1 x661) (= (x81 (+ x480 192)) x645) (= (x580 1461501637330902918203684832716283019655932542975 x355) x1405) (= x661 (x871 x914)) (= (+ x1342 x74) x353) (<= x232 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (* x65 x1209) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 1461501637330902918203684832716283019655932542975 x364) (= (x128 (x1508 x364) x864 0) x507) (<= x65 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1132 1461501637330902918203684832716283019655932542975) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1331 x1571)) (= x65 (x369 x721)) (= x866 x1331) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1309 x383)) (>= x232 0) (= (x955 x311) x1132) (= x864 (x128 (x1508 x1405) x762 0)) (= x1071 x1571) (= x1393 (x128 (x1508 x395) (x336 4) 0)) (= x1359 (x128 (x1508 x395) (x336 11) 0)) (= x232 0))) (< 0 x1151) (= x607 x1331) (= (x128 (x1508 x395) (x336 4) 0) x1318))) (= (div x283 x584) x1209) (= x1234 0) (= x380 (ite (< 115792089237316195423570985008687907853269984665640564039457 x1331) 1 0)) (= (mod (* 1000000000000000000 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x283) (= x1234 (x580 x176 x380)) (= x176 1) (not x1423) (= x413 (< 0 x1151)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331) (= x1423 (= x1331 0)) (or x1257 (and (= x103 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= x1308 (x128 (x1508 x103) x1178 0)) (= (x128 (x1508 x395) (x336 10) 0) x1178) (not x1257))) (= (x128 (x1508 x2) x970 0) x733) (= (x1305 x391) x576) (= x479 (x1341 x1455)) (= x970 (x128 (x1508 x395) (x336 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x576) (= (x128 (x1508 x258) x1413 0) x391) (= (= x1244 0) x178) (= x564 (x128 (x1508 x1142) x1040 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x236) (>= x584 0) (or (and (= x741 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= x209 (x128 (x1508 x395) (x336 6) 0)) (= x696 (x128 (x1508 x741) x209 0)) x178) (and (not x178) (= x790 (x128 (x1508 x395) (x336 6) 0)) (= (x128 (x1508 x395) (x336 5) 0) x339) (= x19 x279) (= x279 (* x1244 x247)) (= x963 (x580 1461501637330902918203684832716283019655932542975 x1494)) (= (x128 (x1508 x1565) x790 0) x429) (= x551 (x128 (x1508 x963) x339 0)) (= x1565 (x580 1461501637330902918203684832716283019655932542975 x1494)) (< (* x247 x1244) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= x1257 (= x726 0)) (>= x453 0) (= x1288 (x67 x927 1)) (<= x584 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x238 x733) x584) (>= x1331 0) (= (x81 (+ 64 x374)) x960)) x1052)))
(assert (= (x336 3123789364) (x1508 3123789364)))
(assert (x1279 x194))
(assert (x537 x596))
(assert (= (x1555 (x1508 x1451)) x1451))
(assert (x1279 x1124))
(assert (= (ite (= x690 x505) x1182 (x1396 x690)) (x921 x690)))
(assert (=> (<= x979 10000) (= (x336 x979) (x1508 x979))))
(assert (x1279 x246))
(assert (x537 x1389))
(assert (= (x1261 x690) (ite (= x914 x690) x1151 (x77 x690))))
(assert (= (x1261 x817) (ite (= x914 x817) x1151 (x77 x817))))
(assert (= (x968 x504) (ite (= x623 x504) x911 (x1007 x504))))
(assert (x1279 x1033))
(assert (=> (>= 10000 x1405) (= (x336 x1405) (x1508 x1405))))
(assert (= x821 (x1555 (x1508 x821))))
(assert (x537 x1322))
(assert (x537 x141))
(assert (x537 x433))
(assert (x1279 x267))
(assert (= (=> (= x1497 (= x728 274184521717934524641157099916833587214)) (and (=> (and (= x805 (or (> x1471 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1471 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1471)))) (= 1 x1319) (<= 0 x632) (not x805) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x632) (= (x128 (x1508 274184521717934524641157099916833587206) (x336 1) 0) x1306) (= (< x1466 x366) x1278) (not x1445) (= x522 x366) x1497 (= 32 x767) (= (x1179 x1306) x1466) (not (> 649617121 x1532)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1466) (= (x669 x1141) x632) (not (= 826074471 x1532)) (not (= x1532 1889567281)) (= (x128 (x1508 x1323) (x336 1) 0) x1141) (not x1278) (= x695 x1220) (= x367 x366) (= x1018 x1323) (= x1175 x1181) (= (x128 (x1508 x1323) (x336 1) 0) x768) (<= x1323 1461501637330902918203684832716283019655932542975) (= x1445 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x366 x632))) (= 274184521717934524641157099916833587206 x1409) (= x1471 (x1315 (- x1181 4))) (> x1195 0) (= x1323 x739) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x632 x366)) (= (< x1466 x522) x1169) (= x632 x1137) (not (= x1532 649617121)) (= 2835717307 x1532) (= (x128 (x1508 274184521717934524641157099916833587206) (x336 1) 0) x1515) (= x1083 x522) (= x227 274184521717934524641157099916833587206) (not x1169) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x259) (= x351 (+ x1137 x367)) (not (= 2514000705 x1532)) (= x1412 (x1315 (- x1466 x522))) (= (x616 (x1508 274184521717934524641157099916833587214)) x1195) (= 68 x1181) (<= 0 x1466) (not (> 4 x1181))) x1430) (=> (not x1497) x275))) x738))
(assert (x537 x745))
(assert (= x266 (=> (and (<= x718 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x718 x754)) (<= 0 x718) (= x874 (x1305 x241)) (>= x874 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x874) (= (x128 (x1508 x237) x328 0) x241) (= x932 (= x874 0)) (= (x128 (x1508 x395) (x336 6) 0) x328) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x237)) (and (=> x932 x1113) (=> (and (= 0 x726) (= x247 x1340) (= (x128 (x1508 x395) (x336 10) 0) x749) (= x1045 (x580 1461501637330902918203684832716283019655932542975 x1494)) (>= x1340 0) (<= x1340 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1340 (x1448 x1446)) (not x932) (= (x128 (x1508 x1045) x749 0) x1446)) x683)))))
(assert (= (ite (= x1015 x914) x1151 (x77 x1015)) (x1261 x1015)))
(assert (x1279 x575))
(assert (x537 x1407))
(assert (x537 x1138))
(assert (= (ite (and x385 x372) (x1261 x1561) (x1119 x1561)) (x1528 x1561)))
(assert (= (x1363 x722) (ite (and x873 x878) (x80 x722) (x248 x722))))
(assert (x537 x257))
(assert (=> (>= 10000 x289) (= (x336 x289) (x1508 x289))))
(assert (= (=> (and (< 0 x1414) (= x1069 (x128 (x1508 x202) (x336 10) 0)) (<= x439 1461501637330902918203684832716283019655932542975) (= x559 x476) (= 69947311 x837) (> 2293535753 x837) (<= x559 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x128 (x1508 x439) x1069 0) x1145) (= x559 (x1448 x1145)) (= (x616 (x1508 274184521717934524641157099916833587206)) x1414) (<= 0 x559) (> 468353030 x837) (> 911411945 x837)) (=> (and (= x1271 x705) (= x423 x476) (= x1549 x1035) (= (= 0 x1013) x1501) x1085 (= x1482 0) (= x879 x987) x1023 (= x1085 (<= x891 x1274)) (= x1274 x949) (= (= 0 x558) x941) (= x891 x987) (= x398 (and x1501 x941)) (= 0 x20) (= x558 x423) (= x1013 x1020) (= x1140 (= x879 0)) (= (or x398 (not x1140)) x1023) (= x753 x250) (= x1505 0)) x302)) x742))
(assert (x537 x120))
(assert (x1279 x106))
(assert (= x1221 (and x315 x1062)))
(assert (x537 x509))
(assert (= (x1528 x1440) (ite (and x385 x372) (x1261 x1440) (x1119 x1440))))
(assert (= (x1528 x914) (ite (and x372 x385) (x1261 x914) (x1119 x914))))
(assert (=> (>= 10000 x185) (= (x1508 x185) (x336 x185))))
(assert (= (x958 x33) (ite (and x744 (not x711) x1237) (x929 x33) (x1050 x33))))
(assert (= x1173 (=> (and (< x1228 911411945) (not (= x1228 69947311)) (< x1228 468353030) (= 142201243 x1228) (= (x128 (x1508 x719) x1454 0) x912) (not (= x1228 87118632)) (= x737 (x616 (x1508 274184521717934524641157099916833587206))) (>= x1364 0) (= x1558 x1364) (= (x80 x704) x1364) (= x1454 (x128 (x1508 x1163) (x336 9) 0)) (< x1228 2293535753) (>= 1461501637330902918203684832716283019655932542975 x719) (= (x128 (x1508 x30) x912 0) x704) (<= x30 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1364) (> x737 0)) (=> (and (= x705 x1099) (= x250 x55) (= x1035 x536) (= x1558 x326)) x243))))
(assert (x537 x370))
(assert (= (ite (and x1529 x413 (not x1423) (not x242)) (x871 x817) (ite (and x1529 (not x1423) (not x413)) (x1341 x817) (ite (and x1529 x1423) (x1341 x817) (x142 x817)))) (x1057 x817)))
(assert (=> (<= x1312 10000) (= (x336 x1312) (x1508 x1312))))
(assert (= x289 (x1555 (x1508 x289))))
(assert (x537 x550))
(assert (=> (>= 10000 x963) (= (x1508 x963) (x336 x963))))
(assert (x1279 x1507))
(assert (x537 x746))
(assert (x537 x1435))
(assert (= x822 (x1555 (x1508 x822))))
(assert (=> (>= 10000 x1132) (= (x1508 x1132) (x336 x1132))))
(assert (x537 x40))
(assert (x537 x1061))
(assert (= x526 (x1555 (x1508 x526))))
(assert (x537 x1291))
(assert (=> (<= x793 10000) (= (x1508 x793) (x336 x793))))
(assert (x537 x1360))
(assert (x537 x732))
(assert (= (ite (= x1455 x374) x453 (x554 x374)) (x1341 x374)))
(assert (x537 x282))
(assert (x537 x1570))
(assert (= (x11 x464) (ite (and x1529 (not x242) x413 (not x1423)) (x1547 x464) (ite (and (not x1423) x1529 (not x413)) (x1024 x464) (ite (and x1423 x1529) (x1024 x464) (x1371 x464))))))
(assert (= (x336 2061678023) (x1508 2061678023)))
(assert (= (=> (and (or (and (= 0 x370) (= x529 0) x1262) (and (= x444 (x128 (x1508 x1022) (x336 9) 0)) (not x1262) (= (x1363 x1544) x1012) (= (x580 1461501637330902918203684832716283019655932542975 x355) x335) (= x1012 x529) (= x1544 (x128 (x1508 x335) x99 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1012) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x898) (>= x1012 0) (= 1 x370) (= (x128 (x1508 x898) x444 0) x99))) (= x1262 (= 0 x1022))) x90) x1512))
(assert (= x1132 (x1555 (x1508 x1132))))
(assert (= (ite (= x630 x1066) x870 (x757 x630)) (x1007 x630)))
(assert (x537 x1108))
(assert (x1279 x1001))
(assert (= (x1555 (x1508 x1395)) x1395))
(assert (= x1312 (x1555 (x1508 x1312))))
(assert (x1279 274184521717934524641157099916833587214))
(assert (x537 x1284))
(assert (=> (>= 10000 x114) (= (x336 x114) (x1508 x114))))
(assert (=> (<= x1407 10000) (= (x336 x1407) (x1508 x1407))))
(assert (= (ite (= x504 x1314) x187 (x1348 x504)) (x215 x504)))
(assert (x537 x1356))
(assert (x1332 x1049 x813))
(assert (=> (<= x1120 10000) (= (x1508 x1120) (x336 x1120))))
(assert (=> (>= 10000 x898) (= (x1508 x898) (x336 x898))))
(assert (x537 x715))
(assert (= x892 (and x437 x331)))
(assert (= x433 (x1555 (x1508 x433))))
(assert (x537 x1520))
(assert (x537 x697))
(assert (=> (>= 10000 x1386) (= (x336 x1386) (x1508 x1386))))
(assert (= (x1341 x87) (ite (= x1455 x87) x453 (x554 x87))))
(assert (= (ite (= x623 x1440) x911 (x1007 x1440)) (x968 x1440)))
(assert (= (x1461 x484) (ite (and x878 x101) (x1452 x484) (ite (and x1250 (not x101) x878) (x1452 x484) (x1243 x484)))))
(assert (= x1270 x226))
(assert (=> (<= x526 10000) (= (x336 x526) (x1508 x526))))
(assert (x537 x38))
(assert (= (ite (and x1529 (not x1423) x413 (not x242)) (x871 x1440) (ite (and x1529 (not x1423) (not x413)) (x1341 x1440) (ite (and x1423 x1529) (x1341 x1440) (x142 x1440)))) (x1057 x1440)))
(assert (x537 x389))
(assert (= 274184521717934524641157099916833587218 (x1555 (x1508 274184521717934524641157099916833587218))))
(assert (x537 x388))
(assert (=> (>= 10000 x598) (= (x336 x598) (x1508 x598))))
(assert (=> (>= 10000 x1549) (= (x336 x1549) (x1508 x1549))))
(assert (= (x238 x733) (ite (and x1529 x178) (x773 x733) (x812 x733))))
(assert (x537 x1488))
(assert (x1279 x1004))
(assert (x537 x278))
(assert (= (x929 x1015) (ite (and x305 x322 x1237 x942 (not x923) x744) (x136 x1015) (ite (and x305 x744 (not x942) x1237 x322) (x405 x1015) (ite (and x744 x1237 x322 (not x305)) (x215 x1015) (ite (and (not x322) x1237 x744) (x1348 x1015) (x18 x1015)))))))
(assert (x1279 x125))
(assert (x1279 x535))
(assert (x537 x1153))
(assert (= x665 x617))
(assert (=> (<= x1378 10000) (= (x1508 x1378) (x336 x1378))))
(assert (= (x929 x33) (ite (and x942 (not x923) x744 x1237 x305 x322) (x136 x33) (ite (and x1237 (not x942) x305 x744 x322) (x405 x33) (ite (and x744 x322 (not x305) x1237) (x215 x33) (ite (and x1237 (not x322) x744) (x1348 x33) (x18 x33)))))))
(assert (x537 x1331))
(assert (= (=> (and (= x201 (x773 x1000)) (= x883 2798343961) (> x1139 0) (= x495 (x128 (x1508 x289) (x336 5) 0)) (<= x106 1461501637330902918203684832716283019655932542975) (not (= x883 2764855426)) (not (< x883 2293535753)) (> 2960351575 x883) (= x1000 (x128 (x1508 x106) x495 0)) (= x1139 (x616 (x1508 274184521717934524641157099916833587206))) (not (> 2690754053 x883)) (<= x201 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x201 0) (not (= 2690754053 x883)) (= x255 x201) (not (= x883 2743102681))) (=> (and (= x255 x1020) (= x1035 x202) (= x439 x705)) x742)) x261))
(assert (x537 x1486))
(assert (x537 x488))
(assert (x537 x1417))
(assert (= (x336 87118632) (x1508 87118632)))
(assert (= (x336 911411945) (x1508 911411945)))
(assert (x537 x523))
(assert (x537 x1562))
(assert (x537 x309))
(assert (x537 x949))
(assert (x1279 x979))
(assert (x1279 x9))
(assert (=> (>= 10000 x1485) (= (x1508 x1485) (x336 x1485))))
(assert (= (=> (and (= x906 (x81 (+ 1 x395))) (= (< x1456 x906) x325) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x754))) (and (=> (and (= x134 x960) x325) x432) (=> (not x325) x574))) x1052))
(assert (= (x1555 (x1508 x237)) x237))
(assert (=> (>= 10000 x1271) (= (x336 x1271) (x1508 x1271))))
(assert (= (x1528 x1569) (ite (and x372 x385) (x1261 x1569) (x1119 x1569))))
(assert (=> (>= 10000 x779) (= (x1508 x779) (x336 x779))))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1555 (x336 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (=> (and (or (and x153 (= x1324 0) (= 0 x1077)) (and (= x1017 (x128 (x1508 x23) x174 0)) (= x23 (x580 1461501637330902918203684832716283019655932542975 x355)) (not x153) (= x1324 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1310) (= x1077 x1310) (= x1310 (x80 x1017)) (= x264 (x128 (x1508 x1120) (x336 9) 0)) (= (x580 1461501637330902918203684832716283019655932542975 x1494) x1389) (= (x128 (x1508 x1389) x264 0) x174) (<= 0 x1310))) (= x153 (= x1120 0))) x826) x540))
(assert (x537 x792))
(assert (= (ite (= x464 x633) x256 (x11 x633)) (x867 x633)))
(assert (=> (<= x2 10000) (= (x1508 x2) (x336 x2))))
(assert (= 0 (x62 x645)))
(assert (not x903))
(assert (= x998 x372))
(assert (x537 x380))
(assert (=> (<= x1022 10000) (= (x336 x1022) (x1508 x1022))))
(assert (= (x1508 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x336 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (ite (= x581 x690) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x179 x690)) (x1396 x690)))
(assert (=> (<= x61 10000) (= (x1508 x61) (x336 x61))))
(assert (x537 x1364))
(assert (x537 x1319))
(assert (x1279 x17))
(assert (x537 x1366))
(assert (x537 x740))
(assert (x537 x212))
(assert (x1279 x379))
(assert (= (x1261 x87) (ite (= x914 x87) x1151 (x77 x87))))
(assert (x537 x692))
(assert (=> (<= x822 10000) (= (x336 x822) (x1508 x822))))
(assert (x537 x478))
(assert (= 0 (x62 x1440)))
(assert (= (ite (= x1561 x1066) x870 (x757 x1561)) (x1007 x1561)))
(assert (= 0 (x62 x690)))
(assert (x537 x1099))
(assert (x1147 x355))
(assert (=> (<= x930 10000) (= (x336 x930) (x1508 x930))))
(assert (x1279 x536))
(assert (= (ite (and x101 x878) (x203 x552) (ite (and (not x101) x1250 x878) (x474 x552) (x1436 x552))) (x298 x552)))
(assert (= (ite (and (not x242) x1529 (not x1423) x413) (x871 x245) (ite (and x1529 (not x1423) (not x413)) (x1341 x245) (ite (and x1529 x1423) (x1341 x245) (x142 x245)))) (x1057 x245)))
(assert (= (ite (= x561 x33) x1075 (x405 x33)) (x136 x33)))
(assert (= (x62 x1443) 0))
(assert (=> (>= 10000 x202) (= (x1508 x202) (x336 x202))))
(assert (x537 x530))
(assert (x537 x411))
(assert (x1279 x1405))
(assert (= (ite (= x690 x1066) x870 (x757 x690)) (x1007 x690)))
(assert (x537 x46))
(assert (x537 x1472))
(assert (x537 x195))
(assert (x537 x561))
(assert (= 2939843472 (x1555 (x336 2939843472))))
(assert (=> (>= 10000 x680) (= (x1508 x680) (x336 x680))))
(assert (= (ite (and x890 (not x111) x839 x1248 x1136 x60) (x534 x69) (ite (and x839 (not x1248) x60 x1136 x890) (x221 x69) (ite (and x1136 (not x839) x890 x60) (x921 x69) (ite (and x60 x890 (not x1136)) (x1396 x69) (x917 x69))))) (x707 x69)))
(assert (= (x298 x148) (ite (and x101 x878) (x203 x148) (ite (and x878 x1250 (not x101)) (x474 x148) (x1436 x148)))))
(assert (= (x1341 x69) (ite (= x1455 x69) x453 (x554 x69))))
(assert (x537 x724))
(assert (x537 x931))
(assert (= x1351 (=> (and (= x133 (x616 (x1508 274184521717934524641157099916833587206))) (> 2960351575 x1362) (= x713 x105) (= x105 (x417 x484)) (= (x128 (x1508 x233) x1255 0) x484) (>= 1461501637330902918203684832716283019655932542975 x327) (< 0 x133) (= 2743102681 x1362) (= x1255 (x128 (x1508 x327) x1 0)) (<= 0 x105) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x105) (not (= x1362 2690754053)) (not (< x1362 2293535753)) (>= 1461501637330902918203684832716283019655932542975 x233) (not (> 2690754053 x1362)) (= (x128 (x1508 x1386) (x336 3) 0) x1)) (=> (and (= x163 x713) (= x705 x654) (= x1035 x1320) (= x250 x1124) (= x46 x1260)) x520))))
(assert (x1279 x1417))
(assert (= (ite (and x1388 x865) (x435 x1015) (x126 x1015)) (x334 x1015)))
(assert (x537 x705))
(assert (= (x334 x69) (ite (and x865 x1388) (x435 x69) (x126 x69))))
(assert (x537 x979))
(assert (x537 x258))
(assert (= (x1348 x1569) (ite (= x1569 x539) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x1569))))
(assert (x537 x560))
(assert (x537 x256))
(assert (= (x1555 (x1508 x327)) x327))
(assert (= (x62 x1015) 0))
(assert (=> (<= x741 10000) (= (x1508 x741) (x336 x741))))
(assert (= (x1348 x630) (ite (= x539 x630) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1457 x630))))
(assert (= (x1508 274184521717934524641157099916833587214) (x336 274184521717934524641157099916833587214)))
(assert (=> (<= x1338 10000) (= (x336 x1338) (x1508 x1338))))
(assert (x537 x69))
(assert (x537 x23))
(assert (= (x1007 x33) (ite (= x33 x1066) x870 (x757 x33))))
(assert (x1279 x378))
(assert (x537 x104))
(assert (x537 x578))
(assert (= (x1555 (x1508 x719)) x719))
(assert (x537 x1535))
(assert (=> (<= x840 10000) (= (x336 x840) (x1508 x840))))
(assert (= (x1555 (x1508 x691)) x691))
(assert (= (ite (= x630 x1455) x453 (x554 x630)) (x1341 x630)))
(assert (=> (>= 10000 x17) (= (x1508 x17) (x336 x17))))
(assert (x537 x795))
(assert (= (x1057 x1569) (ite (and (not x1423) (not x242) x413 x1529) (x871 x1569) (ite (and (not x1423) x1529 (not x413)) (x1341 x1569) (ite (and x1529 x1423) (x1341 x1569) (x142 x1569))))))
(assert (x1279 x1249))
(assert (x537 x1340))
(assert (= x1428 (x1555 (x1508 x1428))))
(assert (x838 x107 x1343))
(assert (= (x1555 (x336 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= (ite (= x1455 x895) x453 (x554 x895)) (x1341 x895)))
(assert (=> (<= x1379 10000) (= (x1508 x1379) (x336 x1379))))
(assert (x537 x199))
(assert (x537 x440))
(assert (= (x1341 x690) (ite (= x1455 x690) x453 (x554 x690))))
(assert (x537 x414))
(assert (= (ite (= x505 x1015) x1182 (x1396 x1015)) (x921 x1015)))
(assert (=> (<= x1389 10000) (= (x336 x1389) (x1508 x1389))))
(assert (= (ite (= x1455 x817) x453 (x554 x817)) (x1341 x817)))
(assert (=> (<= x1320 10000) (= (x1508 x1320) (x336 x1320))))
(assert (= (ite (and x1529 x413 (not x242) (not x1423)) (x871 x914) (ite (and (not x413) (not x1423) x1529) (x1341 x914) (ite (and x1423 x1529) (x1341 x914) (x142 x914)))) (x1057 x914)))
(assert (=> (>= 10000 x691) (= (x1508 x691) (x336 x691))))
(assert (= x172 (x1555 (x1508 x172))))
(assert (x537 x1077))
(assert (= x595 (=> (and (= (x1315 (- x395 1)) x793) (= x947 (> x793 0))) (and (=> (not x947) x463) (=> x947 x806)))))
(assert (=> (<= x313 10000) (= (x1508 x313) (x336 x313))))
(assert (= (x958 x69) (ite (and (not x711) x744 x1237) (x929 x69) (x1050 x69))))
(assert (x537 x1289))
(assert (= (ite (= x1484 x561) x1075 (x405 x1484)) (x136 x1484)))
(assert (x537 x886))
(assert (x1279 x898))
(assert (= x647 (and (not x139) x908)))
(assert (= (x871 x817) (ite (= x817 x488) x905 (x1341 x817))))
(assert (x537 x1509))
(assert (=> (<= x575 10000) (= (x336 x575) (x1508 x575))))
(assert (x1147 x813))
(assert (x537 x500))
(assert (x537 x576))
(assert (x537 x185))
(assert (x1279 x164))
(assert (x537 x1148))
(assert (= (x1555 (x1508 x604)) x604))
(assert (x1279 x1142))
(assert (x537 x115))
(assert (x537 x324))
(assert (x537 x1536))
(assert (x1147 x1064))
(assert (= x1187 (and x1503 (not x881))))
(assert (= (ite (= x245 x488) x905 (x1341 x245)) (x871 x245)))
(assert (=> (<= x23 10000) (= (x1508 x23) (x336 x23))))
(assert (x537 x775))
(assert (= x150 (=> (= x1033 0) x89)))
(assert (x537 x280))
(assert (= (x1555 (x336 2061678023)) 2061678023))
(assert (=> (<= x246 10000) (= (x336 x246) (x1508 x246))))
(assert (=> (<= x577 10000) (= (x1508 x577) (x336 x577))))
(assert (x537 x966))
(assert (x1279 x1099))
(assert (= (x1555 (x1508 x930)) x930))
(assert (x537 x588))
(assert (x1279 x233))
(assert (x1279 x1398))
(assert (= (ite (and x865 x1388) (x435 x914) (x126 x914)) (x334 x914)))
(assert (x537 x306))
(assert (= (x1555 (x1508 x1323)) x1323))
(assert (x537 x259))
(assert (x537 x1433))
(assert (x537 x978))
(assert (x537 x326))
(assert (= x8 (x1555 (x1508 x8))))
(assert (x537 x944))
(assert (= (x405 x690) (ite (= x690 x446) x219 (x215 x690))))
(assert (= (x871 x967) (ite (= x967 x488) x905 (x1341 x967))))
(assert (= (x1508 2690754053) (x336 2690754053)))
(assert (x537 x1361))
(assert (=> (<= x8 10000) (= (x1508 x8) (x336 x8))))
(assert (x537 x63))
(assert (= (ite (= x690 x561) x1075 (x405 x690)) (x136 x690)))
(assert (x537 x1256))
(assert (=> (>= 10000 x618) (= (x336 x618) (x1508 x618))))
(assert (x537 x891))
(assert (= (x1555 (x1508 x531)) x531))
(assert (= (x62 x1102) 0))
(assert (x537 x734))
(assert (x537 x4))
(assert (= (x1261 x1569) (ite (= x914 x1569) x1151 (x77 x1569))))
(assert (= (ite (= x69 x505) x1182 (x1396 x69)) (x921 x69)))
(assert (x537 x42))
(assert (x537 x687))
(assert (= (ite (= x690 x488) x905 (x1341 x690)) (x871 x690)))
(assert (x537 x845))
(assert (x1279 x1271))
(assert (x537 x134))
(assert (= (ite (and x1388 x865) (x435 x1484) (x126 x1484)) (x334 x1484)))
(assert (x1279 x654))
(assert (= (x1555 (x1508 x48)) x48))
(assert (x537 x1314))
(assert (= (x1341 x245) (ite (= x245 x1455) x453 (x554 x245))))
(check-sat)
