(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x711 0)) (((x28 (x643 Int)) (x1112 (x817 x711) (x176 x711) (x135 Int)) (x485 (x96 x711) (x112 Int)))))
(declare-fun x102 () Int)
(declare-fun x457 () x711)
(declare-fun x973 () Bool)
(declare-fun x460 () Bool)
(declare-fun x2311 () Int)
(declare-fun x590 () x711)
(declare-fun x1227 () Int)
(declare-fun x1098 () Int)
(declare-fun x710 () x711)
(declare-fun x1149 () x711)
(declare-fun x2181 () x711)
(declare-fun x1898 () Int)
(declare-fun x1729 () Bool)
(declare-fun x1358 () Int)
(declare-fun x2084 () Int)
(declare-fun x2354 () Int)
(declare-fun x936 () Int)
(declare-fun x739 () x711)
(declare-fun x173 () Int)
(declare-fun x376 () x711)
(declare-fun x1106 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x754 () Bool)
(declare-fun x994 () x711)
(declare-fun x323 () Bool)
(declare-fun x214 () Int)
(declare-fun x2324 () Int)
(declare-fun x44 () x711)
(declare-fun x2235 () Int)
(declare-fun x117 () Int)
(declare-fun x949 () Int)
(declare-fun x1171 () Bool)
(declare-fun x877 () Int)
(declare-fun x692 () Bool)
(declare-fun x2224 () Bool)
(declare-fun x1687 () Bool)
(declare-fun x25 () Int)
(declare-fun x558 () Int)
(declare-fun x298 () Int)
(declare-fun x912 () Bool)
(declare-fun x937 () Bool)
(declare-fun x1661 () Int)
(declare-fun x1945 () x711)
(declare-fun x2001 () Int)
(declare-fun x1231 () Bool)
(declare-fun x1649 () Bool)
(declare-fun x2308 () Int)
(declare-fun x2234 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x744 () x711)
(declare-fun x627 () Int)
(declare-fun x1619 () Bool)
(declare-fun x1623 () Int)
(declare-fun x491 () Int)
(declare-fun x1273 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x1861 () Bool)
(declare-fun x2039 () Int)
(declare-fun x1984 () Int)
(declare-fun x1704 (Int) Int)
(declare-fun x1587 () Int)
(declare-fun x625 () Bool)
(declare-fun x1973 () Int)
(declare-fun x1797 () Int)
(declare-fun x245 () Int)
(declare-fun x2178 () Bool)
(declare-fun x1016 () Int)
(declare-fun x83 () Int)
(declare-fun x1601 () Int)
(declare-fun x1679 () Bool)
(declare-fun x1301 () Int)
(declare-fun x1285 () Int)
(declare-fun x366 () Bool)
(declare-fun x614 () Int)
(declare-fun x1982 () Bool)
(declare-fun x80 () x711)
(declare-fun x1253 () Bool)
(declare-fun x2206 () Bool)
(declare-fun x2064 () Int)
(declare-fun x21 () Bool)
(declare-fun x1774 () x711)
(declare-fun x1506 () Int)
(declare-fun x1759 () x711)
(declare-fun x794 () Bool)
(declare-fun x371 () Int)
(declare-fun x1636 () Int)
(declare-fun x1010 () Int)
(declare-fun x1123 () Bool)
(declare-fun x115 () Bool)
(declare-fun x386 () Int)
(declare-fun x1304 () Bool)
(declare-fun x2244 () Bool)
(declare-fun x810 () x711)
(declare-fun x266 (x711) Int)
(declare-fun x1498 () Bool)
(declare-fun x1397 () Int)
(declare-fun x1593 () Bool)
(declare-fun x505 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x1284 () Int)
(declare-fun x1727 () Bool)
(declare-fun x333 () x711)
(declare-fun x1988 () Int)
(declare-fun x2176 () x711)
(declare-fun x1458 () Int)
(declare-fun x84 () Int)
(declare-fun x2107 () x711)
(declare-fun x1229 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x1039 () Int)
(declare-fun x1419 () Int)
(declare-fun x1719 () Int)
(declare-fun x443 () Int)
(declare-fun x1196 () Bool)
(declare-fun x1383 () Int)
(declare-fun x688 () x711)
(declare-fun x1409 () Int)
(declare-fun x487 () x711)
(declare-fun x522 () x711)
(declare-fun x2145 (Int) Int)
(declare-fun x1329 () Int)
(declare-fun x1324 () Int)
(declare-fun x663 () Bool)
(declare-fun x670 () Int)
(declare-fun x2085 (x711) Int)
(declare-fun x1590 () Bool)
(declare-fun x1875 () x711)
(declare-fun x911 () Int)
(declare-fun x2346 () Int)
(declare-fun x907 () x711)
(declare-fun x2063 () Int)
(declare-fun x2254 () Int)
(declare-fun x879 () Int)
(declare-fun x2349 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x1486 () x711)
(declare-fun x241 () Int)
(declare-fun x1827 () Bool)
(declare-fun x1435 () Bool)
(declare-fun x2297 () Int)
(declare-fun x2071 () Int)
(declare-fun x1783 () Int)
(declare-fun x425 () Bool)
(declare-fun x106 () Int)
(declare-fun x1471 () Int)
(declare-fun x2171 () Int)
(declare-fun x254 () Int)
(declare-fun x2011 () Bool)
(declare-fun x1947 () Int)
(declare-fun x1747 () Int)
(declare-fun x124 () x711)
(declare-fun x1643 () Int)
(declare-fun x2242 () Bool)
(declare-fun x781 () Int)
(declare-fun x928 () Int)
(declare-fun x413 () Int)
(declare-fun x1453 () Int)
(declare-fun x680 () Int)
(declare-fun x1230 () Int)
(declare-fun x1871 () x711)
(declare-fun x2327 () Bool)
(declare-fun x1658 () Bool)
(declare-fun x965 () Int)
(declare-fun x349 () Int)
(declare-fun x1976 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x685 () Bool)
(declare-fun x845 () Int)
(declare-fun x1212 () x711)
(declare-fun x1136 () Int)
(declare-fun x1617 () x711)
(declare-fun x1046 () Int)
(declare-fun x1382 () Int)
(declare-fun x2256 () Int)
(declare-fun x1953 () Int)
(declare-fun x1122 () Int)
(declare-fun x991 () Bool)
(declare-fun x2102 () Int)
(declare-fun x976 () x711)
(declare-fun x1555 () Int)
(declare-fun x798 () Int)
(declare-fun x2253 () x711)
(declare-fun x2154 () Bool)
(declare-fun x896 () x711)
(declare-fun x2080 () Int)
(declare-fun x394 () Bool)
(declare-fun x1256 () Int)
(declare-fun x275 () Int)
(declare-fun x2090 () Int)
(declare-fun x766 () x711)
(declare-fun x2005 () x711)
(declare-fun x1817 () Bool)
(declare-fun x4 () Int)
(declare-fun x1832 (Int) Int)
(declare-fun x210 () Int)
(declare-fun x1432 () Int)
(declare-fun x1570 () Int)
(declare-fun x2231 () Int)
(declare-fun x900 () Bool)
(declare-fun x709 () x711)
(declare-fun x1297 () x711)
(declare-fun x2348 () Int)
(declare-fun x459 () Int)
(declare-fun x753 () x711)
(declare-fun x637 () Int)
(declare-fun x387 () x711)
(declare-fun x707 () Int)
(declare-fun x536 () Int)
(declare-fun x1216 () Int)
(declare-fun x2299 () Int)
(declare-fun x1158 () Int)
(declare-fun x393 () Bool)
(declare-fun x1448 () Int)
(declare-fun x2000 () Int)
(declare-fun x1481 () Bool)
(declare-fun x799 () x711)
(declare-fun x1370 () x711)
(declare-fun x1897 () Int)
(declare-fun x1516 () Bool)
(declare-fun x2352 () Int)
(declare-fun x1264 () x711)
(declare-fun x1497 () Bool)
(declare-fun x2267 () Int)
(declare-fun x1055 () x711)
(declare-fun x723 () Int)
(declare-fun x1626 () Int)
(declare-fun x1386 () Bool)
(declare-fun x231 () x711)
(declare-fun x1943 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x130 () Int)
(declare-fun x1707 () Int)
(declare-fun x2300 () Int)
(declare-fun x2114 () Bool)
(declare-fun x602 () Int)
(declare-fun x1378 () Int)
(declare-fun x984 () Int)
(declare-fun x729 () Int)
(declare-fun x1620 () x711)
(declare-fun x1752 () x711)
(declare-fun x1634 () Bool)
(declare-fun x517 () Bool)
(declare-fun x134 () Bool)
(declare-fun x429 () Bool)
(declare-fun x712 () Int)
(declare-fun x415 () x711)
(declare-fun x1676 () Bool)
(declare-fun x1848 () Int)
(declare-fun x1071 () x711)
(declare-fun x1799 () Bool)
(declare-fun x617 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x285 () Bool)
(declare-fun x785 () Int)
(declare-fun x1842 (Int) Int)
(declare-fun x624 () Bool)
(declare-fun x1648 () Int)
(declare-fun x1348 () Bool)
(declare-fun x360 () Bool)
(declare-fun x776 () Int)
(declare-fun x316 () Bool)
(declare-fun x341 () Int)
(declare-fun x13 () Int)
(declare-fun x1558 () x711)
(declare-fun x870 () Bool)
(declare-fun x855 () Bool)
(declare-fun x573 () Int)
(declare-fun x281 () Bool)
(declare-fun x1944 () Int)
(declare-fun x291 () Int)
(declare-fun x2083 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x1293 () Int)
(declare-fun x726 () Int)
(declare-fun x1214 () x711)
(declare-fun x534 () Int)
(declare-fun x1966 () Bool)
(declare-fun x1987 () Int)
(declare-fun x1466 () Bool)
(declare-fun x924 () Int)
(declare-fun x2152 () x711)
(declare-fun x1963 () Int)
(declare-fun x849 () Int)
(declare-fun x821 () Bool)
(declare-fun x770 (Int) Int)
(declare-fun x1130 () Int)
(declare-fun x1682 () Int)
(declare-fun x320 () Int)
(declare-fun x833 () x711)
(declare-fun x1302 () Bool)
(declare-fun x431 () x711)
(declare-fun x1685 () x711)
(declare-fun x1571 () Int)
(declare-fun x273 () Int)
(declare-fun x1142 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1916 () Int)
(declare-fun x2166 () Bool)
(declare-fun x2037 () Bool)
(declare-fun x1211 (Int) Int)
(declare-fun x1289 () x711)
(declare-fun x608 () Int)
(declare-fun x414 () x711)
(declare-fun x352 () Int)
(declare-fun x2194 () Int)
(declare-fun x1709 () Bool)
(declare-fun x2269 () Int)
(declare-fun x2053 () Bool)
(declare-fun x484 () Int)
(declare-fun x208 () Int)
(declare-fun x1655 () Int)
(declare-fun x2335 () Int)
(declare-fun x1322 () Bool)
(declare-fun x276 () Bool)
(declare-fun x1100 () Int)
(declare-fun x41 () Int)
(declare-fun x862 () Bool)
(declare-fun x509 () Int)
(declare-fun x1140 () Int)
(declare-fun x1342 () Bool)
(declare-fun x2295 () Int)
(declare-fun x1090 () x711)
(declare-fun x892 () Int)
(declare-fun x202 () x711)
(declare-fun x1323 () Int)
(declare-fun x296 () Int)
(declare-fun x582 () Bool)
(declare-fun x714 () Int)
(declare-fun x483 () Int)
(declare-fun x1706 () Bool)
(declare-fun x569 () Int)
(declare-fun x1852 () x711)
(declare-fun x507 () x711)
(declare-fun x1564 () x711)
(declare-fun x2147 () Bool)
(declare-fun x1269 () Int)
(declare-fun x177 () Int)
(declare-fun x233 () Bool)
(declare-fun x2229 () Int)
(declare-fun x1182 () Int)
(declare-fun x782 () x711)
(declare-fun x1974 () Bool)
(declare-fun x741 () Int)
(declare-fun x1846 () Int)
(declare-fun x1808 () Int)
(declare-fun x1436 () Int)
(declare-fun x1233 () Int)
(declare-fun x802 () Bool)
(declare-fun x142 () Int)
(declare-fun x280 () Int)
(declare-fun x1782 () Bool)
(declare-fun x211 () Bool)
(declare-fun x2277 () Bool)
(declare-fun x1514 () Int)
(declare-fun x1567 () x711)
(declare-fun x2066 () Bool)
(declare-fun x1698 () Int)
(declare-fun x1417 () Int)
(declare-fun x1872 () x711)
(declare-fun x679 () Bool)
(declare-fun x1559 () Int)
(declare-fun x963 () Int)
(declare-fun x330 () Int)
(declare-fun x858 () Bool)
(declare-fun x958 () x711)
(declare-fun x574 () Bool)
(declare-fun x30 () Int)
(declare-fun x10 () Int)
(declare-fun x985 () Bool)
(declare-fun x1242 () x711)
(declare-fun x2029 () Bool)
(declare-fun x343 () Int)
(declare-fun x428 () Bool)
(declare-fun x526 () Int)
(declare-fun x2329 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x706 () Bool)
(declare-fun x229 (Int) Int)
(declare-fun x1856 () Int)
(declare-fun x580 () Int)
(declare-fun x1117 () Bool)
(declare-fun x1598 () Int)
(declare-fun x938 () Int)
(declare-fun x317 () Int)
(declare-fun x2059 () Bool)
(declare-fun x279 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x651 () Bool)
(declare-fun x1977 () Int)
(declare-fun x2169 () Int)
(declare-fun x1244 () Int)
(declare-fun x945 () Int)
(declare-fun x161 () Int)
(declare-fun x603 () Int)
(declare-fun x1899 () Bool)
(declare-fun x2285 () Int)
(declare-fun x205 () Int)
(declare-fun x2263 () Bool)
(declare-fun x941 () Bool)
(declare-fun x2028 () Int)
(declare-fun x136 () x711)
(declare-fun x1980 () Bool)
(declare-fun x548 () Int)
(declare-fun x2165 () x711)
(declare-fun x730 () Bool)
(declare-fun x1985 () Int)
(declare-fun x335 () Bool)
(declare-fun x385 () Int)
(declare-fun x66 () Bool)
(declare-fun x147 () Int)
(declare-fun x539 () Bool)
(declare-fun x705 () Bool)
(declare-fun x1578 (Int) Int)
(declare-fun x2187 () Bool)
(declare-fun x1044 () Int)
(declare-fun x1075 () Bool)
(declare-fun x490 () Bool)
(declare-fun x359 () Bool)
(declare-fun x1722 () Int)
(declare-fun x763 (x711) Int)
(declare-fun x184 () Bool)
(declare-fun x644 () Int)
(declare-fun x2222 () Bool)
(declare-fun x2247 () Int)
(declare-fun x1303 () Int)
(declare-fun x1491 () x711)
(declare-fun x1788 () Int)
(declare-fun x269 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x1979 () Int)
(declare-fun x2333 () Bool)
(declare-fun x2214 () Int)
(declare-fun x308 () Bool)
(declare-fun x524 () x711)
(declare-fun x1664 () Bool)
(declare-fun x1135 () Int)
(declare-fun x631 () x711)
(declare-fun x804 () Int)
(declare-fun x1734 () Bool)
(declare-fun x1622 () Int)
(declare-fun x1187 () Bool)
(declare-fun x1560 () Int)
(declare-fun x2190 () Int)
(declare-fun x2249 () Bool)
(declare-fun x1437 () Int)
(declare-fun x1538 () Bool)
(declare-fun x380 () Bool)
(declare-fun x1236 () Int)
(declare-fun x2344 () Int)
(declare-fun x2251 () Bool)
(declare-fun x2052 () Int)
(declare-fun x750 () Bool)
(declare-fun x1416 () Int)
(declare-fun x1434 () x711)
(declare-fun x1005 () x711)
(declare-fun x304 () Int)
(declare-fun x1331 () Bool)
(declare-fun x53 () Int)
(declare-fun x1274 () Bool)
(declare-fun x2273 (Int Int) Int)
(declare-fun x1887 () Int)
(declare-fun x1188 () Int)
(declare-fun x1422 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x329 () Bool)
(declare-fun x784 () Bool)
(declare-fun x1780 () Int)
(declare-fun x1819 () Int)
(declare-fun x2025 () Bool)
(declare-fun x932 () Int)
(declare-fun x1177 () Bool)
(declare-fun x236 () Bool)
(declare-fun x596 () Bool)
(declare-fun x589 () Bool)
(declare-fun x378 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x740 (x711) Int)
(declare-fun x1097 () Int)
(declare-fun x364 () Int)
(declare-fun x165 () Bool)
(declare-fun x940 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x2282 () Int)
(declare-fun x1339 () Bool)
(declare-fun x1279 () Int)
(declare-fun x81 () Int)
(declare-fun x464 () Int)
(declare-fun x1543 () Int)
(declare-fun x1168 () Int)
(declare-fun x1266 () Int)
(declare-fun x479 () Int)
(declare-fun x523 () Bool)
(declare-fun x1862 () x711)
(declare-fun x1333 () Int)
(declare-fun x2036 () Int)
(declare-fun x547 () Int)
(declare-fun x777 () Bool)
(declare-fun x2265 () Int)
(declare-fun x2243 () x711)
(declare-fun x1499 () Bool)
(declare-fun x1531 () Int)
(declare-fun x2075 () x711)
(declare-fun x2290 () Bool)
(declare-fun x1316 () Int)
(declare-fun x716 () Int)
(declare-fun x1992 (Int) Int)
(declare-fun x562 () x711)
(declare-fun x1372 (Int) Int)
(declare-fun x295 (Int) Int)
(declare-fun x1387 () Int)
(declare-fun x321 () Bool)
(declare-fun x952 () Int)
(declare-fun x1997 () x711)
(declare-fun x151 () Int)
(declare-fun x2281 () Bool)
(declare-fun x1688 () Int)
(declare-fun x844 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x1996 () Int)
(declare-fun x875 () Bool)
(declare-fun x812 () Int)
(declare-fun x859 () Bool)
(declare-fun x1193 () Int)
(declare-fun x1690 () Int)
(declare-fun x1628 () Int)
(declare-fun x1213 () Int)
(declare-fun x257 () Bool)
(declare-fun x290 () Int)
(declare-fun x423 () Int)
(declare-fun x899 () Int)
(declare-fun x527 (x711) Int)
(declare-fun x1525 () Bool)
(declare-fun x1653 () Int)
(declare-fun x1699 () Int)
(declare-fun x430 () Bool)
(declare-fun x197 () Int)
(declare-fun x8 (Int) Int)
(declare-fun x856 () Int)
(declare-fun x2065 () Int)
(declare-fun x1189 () Int)
(declare-fun x232 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x1745 () Int)
(declare-fun x929 () Int)
(declare-fun x2077 () Int)
(declare-fun x215 () Int)
(declare-fun x1423 () Int)
(declare-fun x1677 () Int)
(declare-fun x2245 () Int)
(declare-fun x1355 (Int) Int)
(declare-fun x1306 () x711)
(declare-fun x953 () Bool)
(declare-fun x1684 () Int)
(declare-fun x1951 () Bool)
(declare-fun x759 () Bool)
(declare-fun x987 () Bool)
(declare-fun x1644 () x711)
(declare-fun x1478 () x711)
(declare-fun x405 () Int)
(declare-fun x1669 () Bool)
(declare-fun x1344 () Int)
(declare-fun x7 () x711)
(declare-fun x1418 () Int)
(declare-fun x735 () Int)
(declare-fun x1021 () x711)
(declare-fun x183 () Int)
(declare-fun x2079 () Int)
(declare-fun x999 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x15 () Int)
(declare-fun x1080 () Bool)
(declare-fun x2360 () Bool)
(declare-fun x866 () Int)
(declare-fun x599 () Bool)
(declare-fun x166 () Int)
(declare-fun x908 () Int)
(declare-fun x807 () Bool)
(declare-fun x1275 () Int)
(declare-fun x2347 () Bool)
(declare-fun x1986 () Bool)
(declare-fun x1955 () x711)
(declare-fun x1454 () Bool)
(declare-fun x738 () Bool)
(declare-fun x1159 () Int)
(declare-fun x145 () Bool)
(declare-fun x243 () Bool)
(declare-fun x389 () x711)
(declare-fun x2127 () Int)
(declare-fun x920 () Bool)
(declare-fun x356 () Bool)
(declare-fun x1811 () Int)
(declare-fun x1475 () Bool)
(declare-fun x1129 () Int)
(declare-fun x347 () Bool)
(declare-fun x179 () x711)
(declare-fun x616 () Int)
(declare-fun x2129 () Int)
(declare-fun x2124 () Int)
(declare-fun x1027 () Bool)
(declare-fun x682 () Bool)
(declare-fun x123 () Int)
(declare-fun x2196 () x711)
(declare-fun x1946 () Int)
(declare-fun x24 () Int)
(declare-fun x332 () Int)
(declare-fun x747 () x711)
(declare-fun x50 () Int)
(declare-fun x1659 () Bool)
(declare-fun x2056 () Int)
(declare-fun x1114 () Int)
(declare-fun x60 () Bool)
(declare-fun x1394 () Int)
(declare-fun x854 () Int)
(declare-fun x1605 () Int)
(declare-fun x2159 () Bool)
(declare-fun x307 () Int)
(declare-fun x1359 () Bool)
(declare-fun x189 () x711)
(declare-fun x1794 () x711)
(declare-fun x1830 () Bool)
(declare-fun x1157 () x711)
(declare-fun x1639 () Bool)
(declare-fun x1469 () x711)
(declare-fun x1515 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x2358 () Int)
(declare-fun x379 () Bool)
(declare-fun x1371 (Int) Int)
(declare-fun x749 () Int)
(declare-fun x1509 () Int)
(declare-fun x29 () Bool)
(declare-fun x878 () Int)
(declare-fun x350 () Bool)
(declare-fun x93 () Bool)
(declare-fun x1124 () Int)
(declare-fun x119 () Bool)
(declare-fun x424 () Int)
(declare-fun x246 () Int)
(declare-fun x1741 () x711)
(declare-fun x1413 () Bool)
(declare-fun x74 () Bool)
(declare-fun x1472 () Int)
(declare-fun x1183 () Int)
(declare-fun x1825 () Int)
(declare-fun x1120 () Int)
(declare-fun x1952 () x711)
(declare-fun x1550 () Bool)
(declare-fun x489 () Bool)
(declare-fun x1125 () Int)
(declare-fun x1240 () Bool)
(declare-fun x2076 () Int)
(declare-fun x1462 () Int)
(declare-fun x426 () Bool)
(declare-fun x553 () Bool)
(declare-fun x673 () Bool)
(declare-fun x708 () Int)
(declare-fun x1294 () Bool)
(declare-fun x677 () Int)
(declare-fun x841 () Int)
(declare-fun x1591 () Int)
(declare-fun x1063 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x1828 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x1967 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x2287 () Bool)
(declare-fun x348 () Int)
(declare-fun x2135 () Int)
(declare-fun x126 () Int)
(declare-fun x1119 () Int)
(declare-fun x157 () Int)
(declare-fun x494 () Int)
(declare-fun x152 () Int)
(declare-fun x864 () x711)
(declare-fun x1074 () Bool)
(declare-fun x230 () Int)
(declare-fun x1194 () Bool)
(declare-fun x1801 (Int) Int)
(declare-fun x34 () Int)
(declare-fun x1243 () Bool)
(declare-fun x37 () Int)
(declare-fun x512 () x711)
(declare-fun x760 () Int)
(declare-fun x701 () Int)
(declare-fun x2009 () Bool)
(declare-fun x1205 () Bool)
(declare-fun x367 () Int)
(declare-fun x1646 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x694 () Bool)
(declare-fun x983 () Bool)
(declare-fun x1678 () Int)
(declare-fun x256 () Bool)
(declare-fun x105 () Int)
(declare-fun x1789 () Int)
(declare-fun x2060 () Bool)
(declare-fun x2233 () Bool)
(declare-fun x1456 () Int)
(declare-fun x1724 () Int)
(declare-fun x578 () Bool)
(declare-fun x2072 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x2237 () Int)
(declare-fun x1954 () Bool)
(declare-fun x2113 () x711)
(declare-fun x1482 (Int) Int)
(declare-fun x801 () Int)
(declare-fun x237 () Int)
(declare-fun x2195 () Int)
(declare-fun x406 () x711)
(declare-fun x700 () Int)
(declare-fun x1902 (x711) Int)
(declare-fun x2321 () Bool)
(declare-fun x1718 () Int)
(declare-fun x1048 () Bool)
(declare-fun x1238 () Int)
(declare-fun x903 () Int)
(declare-fun x458 () Int)
(declare-fun x1824 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x1068 () x711)
(declare-fun x1351 () Int)
(declare-fun x751 () Bool)
(declare-fun x85 () Int)
(declare-fun x2332 () Int)
(declare-fun x481 () Bool)
(declare-fun x1838 () Int)
(declare-fun x557 () x711)
(declare-fun x1053 () Int)
(declare-fun x847 () Bool)
(declare-fun x1390 (Int) Int)
(declare-fun x571 () Int)
(declare-fun x2118 () Int)
(declare-fun x168 () Bool)
(declare-fun x2270 () Int)
(declare-fun x40 () Int)
(declare-fun x2356 () Int)
(declare-fun x1091 () Bool)
(declare-fun x1806 () Int)
(declare-fun x139 () Int)
(declare-fun x2302 () Int)
(declare-fun x1775 () x711)
(declare-fun x818 () Bool)
(declare-fun x1609 () x711)
(declare-fun x1740 () Int)
(declare-fun x995 () Int)
(declare-fun x1226 () Int)
(declare-fun x1447 () Int)
(declare-fun x1057 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x790 () Int)
(declare-fun x2236 () Int)
(declare-fun x1668 () Bool)
(declare-fun x1599 () Int)
(declare-fun x286 () Int)
(declare-fun x1853 () Bool)
(declare-fun x1990 () Int)
(declare-fun x2082 () Int)
(declare-fun x793 () Bool)
(declare-fun x1384 () Int)
(declare-fun x1702 () x711)
(declare-fun x2160 () Bool)
(declare-fun x946 () Int)
(declare-fun x2291 () Bool)
(declare-fun x363 () Int)
(declare-fun x1270 () Bool)
(declare-fun x652 () Int)
(declare-fun x1262 () Bool)
(declare-fun x1563 () x711)
(declare-fun x1656 () Int)
(declare-fun x1917 () Bool)
(declare-fun x144 (Int) Int)
(declare-fun x2089 () Int)
(declare-fun x2151 () Int)
(declare-fun x1400 () Int)
(declare-fun x2153 () Int)
(declare-fun x448 () Bool)
(declare-fun x576 () Int)
(declare-fun x226 () Bool)
(declare-fun x272 () Int)
(declare-fun x1441 () Bool)
(declare-fun x579 (Int) Int)
(declare-fun x1430 () Bool)
(declare-fun x1689 () Int)
(declare-fun x224 () Int)
(declare-fun x475 () Int)
(declare-fun x719 () Bool)
(declare-fun x775 () Bool)
(declare-fun x111 () x711)
(declare-fun x1444 () Bool)
(declare-fun x2167 () Bool)
(declare-fun x3 () Int)
(declare-fun x1930 () Int)
(declare-fun x1412 () Bool)
(declare-fun x2185 () Int)
(declare-fun x327 () Bool)
(declare-fun x615 () Bool)
(declare-fun x921 () Int)
(declare-fun x463 () Bool)
(declare-fun x1349 () x711)
(declare-fun x803 () Int)
(declare-fun x2061 () Int)
(declare-fun x1026 (Int) Int)
(declare-fun x2345 () Bool)
(declare-fun x1588 () x711)
(declare-fun x1744 () Int)
(declare-fun x1388 () Bool)
(declare-fun x1365 () Int)
(declare-fun x884 () Int)
(declare-fun x223 () Int)
(declare-fun x403 () Int)
(declare-fun x1313 () Int)
(declare-fun x1013 () Bool)
(declare-fun x2209 () Bool)
(declare-fun x441 () Int)
(declare-fun x148 () Int)
(declare-fun x2092 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x2096 () Int)
(declare-fun x773 () Bool)
(declare-fun x488 () Int)
(declare-fun x1452 () Int)
(declare-fun x848 () x711)
(declare-fun x1492 () Bool)
(declare-fun x1318 () Bool)
(declare-fun x400 () Int)
(declare-fun x2312 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x519 () Int)
(declare-fun x894 () Bool)
(declare-fun x758 () Int)
(declare-fun x2216 () Bool)
(declare-fun x125 () Bool)
(declare-fun x1245 () Int)
(declare-fun x1993 () Bool)
(declare-fun x2315 () Bool)
(declare-fun x1798 () Int)
(declare-fun x2139 () Int)
(declare-fun x2021 () Bool)
(declare-fun x564 () Int)
(declare-fun x2146 () Bool)
(declare-fun x828 () Bool)
(declare-fun x1299 () Int)
(declare-fun x897 () Int)
(declare-fun x504 () Int)
(declare-fun x2119 () x711)
(declare-fun x1890 (Int) Int)
(declare-fun x635 () Bool)
(declare-fun x222 () Int)
(declare-fun x2163 () Bool)
(declare-fun x282 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x2110 () Bool)
(declare-fun x1446 () Int)
(declare-fun x409 () Int)
(declare-fun x353 () Bool)
(declare-fun x453 () Bool)
(declare-fun x1533 () x711)
(declare-fun x998 () Int)
(declare-fun x351 () Int)
(declare-fun x326 () Bool)
(declare-fun x404 () Int)
(declare-fun x1381 () x711)
(declare-fun x1927 () Int)
(declare-fun x169 () x711)
(declare-fun x314 () x711)
(declare-fun x745 () Bool)
(declare-fun x618 (x711) Int)
(declare-fun x71 () Bool)
(declare-fun x1345 () Int)
(declare-fun x2215 () Int)
(declare-fun x2205 () Int)
(declare-fun x358 () Int)
(declare-fun x822 () Int)
(declare-fun x560 () Int)
(declare-fun x436 () Bool)
(declare-fun x471 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x1385 () Int)
(declare-fun x263 () Int)
(declare-fun x87 () Int)
(declare-fun x891 () Int)
(declare-fun x1866 () Int)
(declare-fun x1438 () Bool)
(declare-fun x2336 () x711)
(declare-fun x46 () Bool)
(declare-fun x1673 () x711)
(declare-fun x830 () Int)
(declare-fun x743 () Bool)
(declare-fun x888 () Bool)
(declare-fun x1582 (x711) Int)
(declare-fun x2268 (Int) Int)
(declare-fun x1998 () x711)
(declare-fun x1054 () Int)
(declare-fun x2276 () x711)
(declare-fun x1577 () x711)
(declare-fun x1065 (Int) Int)
(declare-fun x240 () Int)
(declare-fun x1942 () Int)
(declare-fun x2121 () x711)
(declare-fun x1615 () Int)
(declare-fun x2137 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x373 () Int)
(declare-fun x1935 () Int)
(declare-fun x916 () Int)
(declare-fun x1363 () Int)
(declare-fun x869 () Bool)
(declare-fun x104 () Bool)
(declare-fun x626 () Bool)
(declare-fun x1254 () Int)
(declare-fun x72 () Bool)
(declare-fun x1743 () Int)
(declare-fun x1014 () Int)
(declare-fun x540 () x711)
(declare-fun x1008 () Bool)
(declare-fun x2002 () Int)
(declare-fun x1379 () Bool)
(declare-fun x2301 () Int)
(declare-fun x2161 () Bool)
(declare-fun x1785 () x711)
(declare-fun x1805 () Int)
(declare-fun x2309 () Bool)
(declare-fun x762 () Int)
(declare-fun x2310 () Int)
(declare-fun x923 () Int)
(declare-fun x2062 () x711)
(declare-fun x981 () x711)
(declare-fun x1547 () Int)
(declare-fun x318 () Bool)
(declare-fun x163 () Bool)
(declare-fun x1176 () Int)
(declare-fun x813 () x711)
(declare-fun x1769 () Bool)
(declare-fun x2259 () x711)
(declare-fun x118 () Int)
(declare-fun x2099 () Bool)
(declare-fun x1173 () x711)
(declare-fun x1200 (Int) Int)
(declare-fun x2260 () Int)
(declare-fun x452 () Int)
(declare-fun x1613 () x711)
(declare-fun x131 () Bool)
(declare-fun x311 () x711)
(declare-fun x1139 () Int)
(declare-fun x1309 () Bool)
(declare-fun x2182 () Int)
(declare-fun x383 () Bool)
(declare-fun x171 (Int) Int)
(declare-fun x1840 () Int)
(declare-fun x1803 () x711)
(declare-fun x925 () Bool)
(declare-fun x516 () Int)
(declare-fun x902 () Bool)
(declare-fun x2144 () Int)
(declare-fun x695 () Bool)
(declare-fun x717 () Int)
(declare-fun x568 () x711)
(declare-fun x1586 (Int) Int)
(declare-fun x872 () Int)
(declare-fun x1128 () Int)
(declare-fun x2296 () Bool)
(declare-fun x382 () x711)
(declare-fun x592 () Int)
(declare-fun x2141 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x1197 () Bool)
(declare-fun x874 () Bool)
(declare-fun x1841 () x711)
(declare-fun x1032 () Int)
(declare-fun x901 () Int)
(declare-fun x1508 () Int)
(declare-fun x529 () Int)
(declare-fun x1914 () Int)
(declare-fun x1307 () Bool)
(declare-fun x2292 () Bool)
(declare-fun x1375 (x711) Int)
(declare-fun x630 () Int)
(declare-fun x1070 () Bool)
(declare-fun x1428 () Int)
(declare-fun x201 () Int)
(declare-fun x601 () Int)
(declare-fun x1981 () Int)
(declare-fun x1192 () Int)
(declare-fun x1061 () Int)
(declare-fun x1777 () x711)
(declare-fun x92 () Bool)
(declare-fun x1217 () Int)
(declare-fun x620 () Bool)
(declare-fun x442 () Int)
(declare-fun x508 () Int)
(declare-fun x1066 () Bool)
(declare-fun x433 () Int)
(declare-fun x2220 () Bool)
(declare-fun x1424 () x711)
(declare-fun x931 () Int)
(declare-fun x2191 () Int)
(declare-fun x196 () x711)
(declare-fun x535 () Bool)
(declare-fun x1971 () x711)
(declare-fun x800 () Bool)
(declare-fun x1633 () Int)
(declare-fun x1511 () Int)
(declare-fun x1793 () Int)
(declare-fun x1310 () Int)
(declare-fun x78 () Bool)
(declare-fun x58 () Bool)
(declare-fun x1584 () x711)
(declare-fun x1562 () Bool)
(declare-fun x890 () x711)
(declare-fun x2180 () Int)
(declare-fun x1879 (Int) Int)
(declare-fun x1439 () Int)
(declare-fun x570 () Int)
(declare-fun x525 () x711)
(declare-fun x1630 () x711)
(declare-fun x795 () Bool)
(declare-fun x948 () Bool)
(declare-fun x2330 () Int)
(declare-fun x1790 () Int)
(declare-fun x577 () Int)
(declare-fun x194 () x711)
(declare-fun x2057 () Int)
(declare-fun x1314 () Int)
(declare-fun x2008 () Int)
(declare-fun x1011 () Int)
(declare-fun x2174 () Int)
(declare-fun x1893 () Int)
(declare-fun x1334 () Int)
(declare-fun x1994 () Int)
(declare-fun x100 () Int)
(declare-fun x640 () x711)
(declare-fun x1697 () Bool)
(declare-fun x607 () Int)
(declare-fun x1151 () Bool)
(declare-fun x1251 () Int)
(declare-fun x2279 () Int)
(declare-fun x515 () Int)
(declare-fun x1851 () Int)
(declare-fun x88 () Int)
(declare-fun x1708 () Bool)
(declare-fun x1250 () Int)
(declare-fun x565 () Int)
(declare-fun x942 () x711)
(declare-fun x1958 () x711)
(declare-fun x1901 () Bool)
(declare-fun x319 () Int)
(declare-fun x1174 () Int)
(declare-fun x982 () x711)
(declare-fun x1652 () Int)
(declare-fun x2208 (Int) Int)
(declare-fun x1786 () Int)
(declare-fun x1191 () Int)
(declare-fun x1758 () x711)
(declare-fun x1429 () Int)
(declare-fun x137 () Bool)
(declare-fun x392 () Bool)
(declare-fun x561 () Int)
(declare-fun x462 () x711)
(declare-fun x1843 () x711)
(declare-fun x1905 () Int)
(declare-fun x2044 () x711)
(declare-fun x1635 () Bool)
(declare-fun x209 () Bool)
(declare-fun x1225 () Int)
(declare-fun x2098 () Int)
(declare-fun x823 () x711)
(declare-fun x278 () Int)
(declare-fun x2106 () Bool)
(declare-fun x581 () Int)
(declare-fun x950 () Bool)
(declare-fun x76 () Bool)
(declare-fun x395 () Int)
(declare-fun x2284 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x191 () Int)
(declare-fun x1208 () Bool)
(declare-fun x1327 () Int)
(declare-fun x470 () Int)
(declare-fun x886 () Int)
(declare-fun x1938 () Int)
(declare-fun x1860 () Int)
(declare-fun x1505 () Int)
(declare-fun x1891 () Bool)
(declare-fun x1146 () Int)
(declare-fun x1116 () Bool)
(declare-fun x857 () Int)
(declare-fun x1145 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x748 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x772 () Int)
(declare-fun x552 () Bool)
(declare-fun x2055 () Int)
(declare-fun x268 (Int) Int)
(declare-fun x1025 (Int) Int)
(declare-fun x1814 () Int)
(declare-fun x860 () Bool)
(declare-fun x1179 () Int)
(declare-fun x199 () Int)
(declare-fun x2227 () Int)
(declare-fun x1325 () Int)
(declare-fun x1190 () Int)
(declare-fun x407 () Bool)
(declare-fun x566 () Int)
(declare-fun x538 () Bool)
(declare-fun x1583 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x12 () Int)
(declare-fun x337 () Int)
(declare-fun x1670 () Bool)
(declare-fun x2228 () Bool)
(declare-fun x1581 () Int)
(declare-fun x239 () Bool)
(declare-fun x1023 () Int)
(declare-fun x1495 () Int)
(declare-fun x2177 () Bool)
(declare-fun x964 () x711)
(declare-fun x1089 () Int)
(declare-fun x939 () Bool)
(declare-fun x2339 () Bool)
(declare-fun x809 () Int)
(declare-fun x2288 () Bool)
(declare-fun x1163 () Int)
(declare-fun x496 () Bool)
(declare-fun x1524 () x711)
(declare-fun x2294 () Int)
(declare-fun x1572 () Bool)
(declare-fun x2067 () Int)
(declare-fun x1553 () Int)
(declare-fun x67 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x765 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x2142 () Int)
(declare-fun x2232 () Int)
(declare-fun x1232 () Int)
(declare-fun x52 () Int)
(declare-fun x1585 () Int)
(declare-fun x531 () x711)
(declare-fun x970 () Bool)
(declare-fun x683 () Int)
(declare-fun x1058 (Int) Int)
(declare-fun x2350 () Int)
(declare-fun x212 () Int)
(declare-fun x853 () Int)
(declare-fun x593 () Bool)
(declare-fun x639 () Int)
(declare-fun x1479 (Int) Int)
(declare-fun x1864 () Int)
(declare-fun x1449 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x1885 () x711)
(declare-fun x1530 () Int)
(declare-fun x2004 () Int)
(declare-fun x2361 () Int)
(declare-fun x962 () Bool)
(declare-fun x206 (Int) Int)
(declare-fun x895 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x62 () Bool)
(declare-fun x2088 () x711)
(declare-fun x258 () x711)
(declare-fun x2283 () Bool)
(declare-fun x1776 () x711)
(declare-fun x1118 () Int)
(declare-fun x2150 () Bool)
(declare-fun x1972 () Int)
(declare-fun x834 () Bool)
(declare-fun x36 () Bool)
(declare-fun x38 () Bool)
(declare-fun x109 () Bool)
(declare-fun x966 () Int)
(declare-fun x2230 () Bool)
(declare-fun x2286 () Bool)
(declare-fun x1234 () Int)
(declare-fun x1784 () Int)
(declare-fun x1102 () Bool)
(declare-fun x2240 () x711)
(declare-fun x1781 () Bool)
(declare-fun x468 () Int)
(declare-fun x235 () Int)
(declare-fun x943 () Int)
(declare-fun x287 () x711)
(declare-fun x158 () Bool)
(declare-fun x51 () x711)
(declare-fun x2020 (Int) Int)
(declare-fun x2305 () x711)
(declare-fun x1235 () x711)
(declare-fun x1209 () x711)
(declare-fun x806 () Int)
(declare-fun x1975 () Bool)
(declare-fun x918 () Bool)
(declare-fun x1823 () x711)
(declare-fun x2323 () x711)
(declare-fun x2221 () Int)
(declare-fun x1750 () Int)
(declare-fun x1490 (Int) Int)
(declare-fun x1407 () Int)
(declare-fun x788 () Bool)
(declare-fun x2326 () Bool)
(declare-fun x808 () Int)
(declare-fun x2197 () x711)
(declare-fun x764 () x711)
(declare-fun x814 () Bool)
(declare-fun x492 () Int)
(declare-fun x549 () x711)
(declare-fun x449 () x711)
(declare-fun x1592 () Bool)
(declare-fun x696 () Int)
(declare-fun x1701 () Int)
(declare-fun x31 (Int) Int)
(declare-fun x1249 () Bool)
(declare-fun x249 () Bool)
(declare-fun x2133 () x711)
(declare-fun x591 () Bool)
(declare-fun x1017 () Int)
(declare-fun x2136 () Int)
(declare-fun x1246 () Int)
(declare-fun x662 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x1143 () Int)
(declare-fun x1991 () Int)
(declare-fun x1480 () Bool)
(declare-fun x244 () Bool)
(declare-fun x68 (Int) Int)
(declare-fun x2162 (Int) Int)
(declare-fun x1311 () Bool)
(declare-fun x1602 () Int)
(declare-fun x1523 () Bool)
(declare-fun x1836 () Int)
(declare-fun x1880 () x711)
(declare-fun x1561 () Int)
(declare-fun x1725 () Int)
(declare-fun x388 () Int)
(declare-fun x947 () Int)
(declare-fun x1259 (Int) Int)
(declare-fun x264 () Bool)
(declare-fun x1762 () Int)
(declare-fun x181 () Bool)
(declare-fun x346 () Bool)
(declare-fun x91 () Int)
(declare-fun x898 () Bool)
(declare-fun x1035 () x711)
(declare-fun x2212 () Int)
(declare-fun x1036 () Int)
(declare-fun x1426 () Int)
(declare-fun x1263 () Int)
(declare-fun x2306 () Int)
(declare-fun x1220 () Int)
(declare-fun x1180 () Int)
(declare-fun x2013 () Bool)
(declare-fun x1083 () Int)
(declare-fun x1882 () Bool)
(declare-fun x1829 () Int)
(declare-fun x957 () x711)
(declare-fun x1913 () Int)
(declare-fun x238 () Int)
(declare-fun x396 () Int)
(declare-fun x528 () x711)
(declare-fun x55 () Bool)
(declare-fun x780 () Bool)
(declare-fun x313 () Int)
(declare-fun x2104 () Int)
(declare-fun x133 () Bool)
(declare-fun x755 () Int)
(declare-fun x728 () Int)
(declare-fun x761 () Int)
(declare-fun x1028 () Bool)
(declare-fun x1969 () Bool)
(declare-fun x1895 () Int)
(declare-fun x301 () Int)
(declare-fun x703 () Int)
(declare-fun x2148 (x711) Int)
(declare-fun x1549 () Int)
(declare-fun x1683 () Bool)
(declare-fun x1433 () Int)
(declare-fun x1535 () x711)
(declare-fun x1663 () Bool)
(declare-fun x686 () Int)
(declare-fun x1241 () Bool)
(declare-fun x1812 () x711)
(declare-fun x365 () Int)
(declare-fun x1603 () Int)
(declare-fun x1809 () Int)
(declare-fun x2353 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x2074 () x711)
(declare-fun x1911 () Bool)
(declare-fun x863 () x711)
(declare-fun x2081 () Bool)
(declare-fun x2105 () x711)
(declare-fun x546 () x711)
(declare-fun x914 () x711)
(declare-fun x2341 () Int)
(declare-fun x1857 () Int)
(declare-fun x2217 () Int)
(declare-fun x530 () Bool)
(declare-fun x1009 () Int)
(declare-fun x1072 () Int)
(declare-fun x1713 () Int)
(declare-fun x1519 () Int)
(declare-fun x1918 () Int)
(declare-fun x2103 () Int)
(declare-fun x455 () Int)
(declare-fun x1983 () Int)
(declare-fun x718 (Int Int) Int)
(declare-fun x1062 (Int) Int)
(declare-fun x1155 () Int)
(declare-fun x917 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x159 () Int)
(declare-fun x2298 () Int)
(declare-fun x1172 () x711)
(declare-fun x175 () Int)
(declare-fun x2134 () Int)
(declare-fun x506 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x1565 () Int)
(declare-fun x18 () Bool)
(declare-fun x1889 (x711) Int)
(declare-fun x1761 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x1539 (Int) Int)
(declare-fun x1278 () x711)
(declare-fun x1265 () Int)
(declare-fun x1502 () Int)
(declare-fun x2108 () Bool)
(declare-fun x2170 () Bool)
(declare-fun x556 () Int)
(declare-fun x893 () Int)
(declare-fun x1507 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x1815 () Int)
(declare-fun x113 () Bool)
(declare-fun x1820 () Bool)
(declare-fun x689 () x711)
(declare-fun x502 () x711)
(declare-fun x374 () Int)
(declare-fun x234 () Bool)
(declare-fun x1346 () Int)
(declare-fun x322 () Bool)
(declare-fun x1650 () Int)
(declare-fun x1501 () Bool)
(declare-fun x207 () Int)
(declare-fun x95 () Int)
(declare-fun x550 () Int)
(declare-fun x1528 () Bool)
(declare-fun x61 () Bool)
(declare-fun x103 () Int)
(declare-fun x1557 () Int)
(declare-fun x2047 () Bool)
(declare-fun x2022 () x711)
(declare-fun x1510 () Bool)
(declare-fun x1069 () Int)
(declare-fun x641 () Bool)
(declare-fun x368 () Bool)
(declare-fun x974 () Int)
(declare-fun x6 () Int)
(declare-fun x778 () Bool)
(declare-fun x192 () Bool)
(declare-fun x154 () Int)
(declare-fun x720 () x711)
(declare-fun x656 () x711)
(declare-fun x2126 () Int)
(declare-fun x1810 () Bool)
(declare-fun x820 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x1962 () Int)
(declare-fun x293 () x711)
(declare-fun x1219 () Int)
(declare-fun x1033 () Int)
(declare-fun x499 () Int)
(declare-fun x1834 () Int)
(declare-fun x2223 () Int)
(declare-fun x1831 () x711)
(declare-fun x121 () Bool)
(declare-fun x1522 () Int)
(declare-fun x1964 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x922 () Int)
(declare-fun x187 () Bool)
(declare-fun x658 () Int)
(declare-fun x934 () x711)
(declare-fun x1732 (Int) Int)
(declare-fun x1548 () Bool)
(declare-fun x913 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x2201 () x711)
(declare-fun x1760 () Int)
(declare-fun x1073 () Bool)
(declare-fun x1703 () Int)
(declare-fun x1018 () Int)
(declare-fun x421 () Bool)
(declare-fun x1493 () Bool)
(declare-fun x86 () Bool)
(declare-fun x1931 () Int)
(declare-fun x1764 () Int)
(declare-fun x1534 () Int)
(declare-fun x588 () x711)
(declare-fun x2120 () x711)
(declare-fun x2112 () Bool)
(declare-fun x1134 () Int)
(declare-fun x1616 (Int) Int)
(declare-fun x270 () x711)
(declare-fun x537 () Bool)
(declare-fun x996 (Int) Int)
(declare-fun x1369 () Bool)
(declare-fun x1257 () x711)
(declare-fun x1949 () Int)
(declare-fun x1978 () Int)
(declare-fun x1108 () Bool)
(declare-fun x825 () Int)
(declare-fun x466 () Int)
(declare-fun x156 () Int)
(declare-fun x1651 () Int)
(declare-fun x1350 () Bool)
(declare-fun x435 () Bool)
(declare-fun x1223 () Int)
(declare-fun x2143 () Int)
(declare-fun x1999 () Int)
(declare-fun x305 () Int)
(declare-fun x1215 () x711)
(declare-fun x110 () Int)
(declare-fun x2355 () Bool)
(declare-fun x2331 () Int)
(declare-fun x725 () Bool)
(declare-fun x955 () Bool)
(declare-fun x195 () Bool)
(declare-fun x1127 () Int)
(declare-fun x82 () x711)
(declare-fun x2340 () x711)
(declare-fun x1487 () Int)
(declare-fun x1015 () Int)
(declare-fun x1362 () Bool)
(declare-fun x2040 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x1621 () Bool)
(declare-fun x1618 () x711)
(declare-fun x2049 () Int)
(declare-fun x1147 () Int)
(declare-fun x1629 () Int)
(declare-fun x1855 () Int)
(declare-fun x2041 () Int)
(declare-fun x1854 () Int)
(declare-fun x228 () x711)
(declare-fun x1094 () Int)
(declare-fun x881 () Int)
(declare-fun x1440 () Int)
(declare-fun x138 () x711)
(declare-fun x1796 () Bool)
(declare-fun x724 () Int)
(declare-fun x1894 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x2006 () Int)
(declare-fun x1247 () Int)
(declare-fun x250 () Int)
(declare-fun x1874 () Int)
(declare-fun x2314 () Int)
(declare-fun x1315 () x711)
(declare-fun x732 () Int)
(declare-fun x2093 () Int)
(declare-fun x422 () Bool)
(declare-fun x633 () Int)
(declare-fun x1335 () Int)
(declare-fun x756 () Bool)
(declare-fun x1645 () Int)
(declare-fun x865 () x711)
(declare-fun x1460 () Bool)
(declare-fun x1489 (Int) Int)
(declare-fun x1398 () Bool)
(declare-fun x1464 () x711)
(declare-fun x986 () Bool)
(declare-fun x850 () Bool)
(declare-fun x2111 () x711)
(declare-fun x2179 () Int)
(declare-fun x1276 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x843 () x711)
(declare-fun x2033 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x769 () Int)
(declare-fun x248 () Int)
(declare-fun x451 () Int)
(declare-fun x2123 () Bool)
(declare-fun x39 () Int)
(declare-fun x2246 () Int)
(declare-fun x1321 (x711) Int)
(declare-fun x1641 () Bool)
(declare-fun x678 (Int) Int)
(declare-fun x370 () Int)
(declare-fun x274 () Int)
(declare-fun x1847 () Int)
(declare-fun x2014 () x711)
(declare-fun x883 () Int)
(declare-fun x514 () Bool)
(declare-fun x480 () Bool)
(declare-fun x997 () Int)
(declare-fun x1614 () Bool)
(declare-fun x408 () x711)
(declare-fun x312 () x711)
(declare-fun x541 () Bool)
(declare-fun x1465 () Int)
(declare-fun x2342 () x711)
(declare-fun x2202 () Int)
(declare-fun x1088 () Int)
(declare-fun x653 () Int)
(declare-fun x1494 () Int)
(declare-fun x1067 () Bool)
(declare-fun x655 () Int)
(declare-fun x767 () Bool)
(declare-fun x1064 () x711)
(declare-fun x2117 () Int)
(declare-fun x650 () Bool)
(declare-fun x1420 () Int)
(declare-fun x467 () x711)
(declare-fun x1503 () Int)
(declare-fun x665 () Int)
(declare-fun x1736 () Int)
(declare-fun x1647 () Int)
(declare-fun x1347 (Int) Int)
(declare-fun x1640 () Int)
(declare-fun x2140 () Int)
(declare-fun x390 () x711)
(declare-fun x604 () x711)
(declare-fun x261 () x711)
(declare-fun x16 () Bool)
(declare-fun x2203 () Int)
(declare-fun x835 () Bool)
(declare-fun x1473 () Int)
(declare-fun x1850 () Int)
(declare-fun x559 () Bool)
(declare-fun x1742 () x711)
(declare-fun x2078 () Bool)
(declare-fun x398 () Int)
(declare-fun x2168 () Bool)
(declare-fun x2097 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x325 () x711)
(declare-fun x35 () Bool)
(declare-fun x1248 () Int)
(declare-fun x2200 () Int)
(declare-fun x1610 () Bool)
(declare-fun x19 () x711)
(declare-fun x1484 () Int)
(declare-fun x1757 () Int)
(declare-fun x1406 () Int)
(declare-fun x1204 () Int)
(declare-fun x930 () Bool)
(declare-fun x1696 () Bool)
(declare-fun x20 () x711)
(declare-fun x375 () Int)
(declare-fun x1287 () Int)
(declare-fun x674 () Int)
(declare-fun x2027 () x711)
(declare-fun x715 () Int)
(declare-fun x1043 () Bool)
(declare-fun x1680 () x711)
(declare-fun x1728 () Int)
(declare-fun x420 (Int) Int)
(declare-fun x1865 () x711)
(declare-fun x2017 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x623 () Int)
(declare-fun x1845 () Bool)
(declare-fun x2042 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x1772 (Int) Int)
(declare-fun x129 () Bool)
(declare-fun x1222 () Int)
(declare-fun x472 (Int) x711)
(declare-fun x647 () Bool)
(declare-fun x64 () Int)
(declare-fun x1907 () Int)
(declare-fun x1956 () Bool)
(declare-fun x354 () Bool)
(declare-fun x598 () Bool)
(declare-fun x927 () Int)
(declare-fun x1512 () Int)
(declare-fun x1995 () Int)
(declare-fun x628 () Int)
(declare-fun x1255 () Int)
(declare-fun x675 () Int)
(declare-fun x1319 () Int)
(declare-fun x1411 () Int)
(declare-fun x1040 (Int) Int)
(declare-fun x819 () Int)
(declare-fun x1170 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x873 () Int)
(declare-fun x198 () x711)
(declare-fun x669 () Int)
(declare-fun x1710 () Bool)
(declare-fun x262 () Int)
(declare-fun x1940 () Int)
(declare-fun x1060 () Bool)
(declare-fun x1389 () Int)
(declare-fun x961 () Int)
(declare-fun x1087 () Bool)
(declare-fun x2189 () Bool)
(declare-fun x2010 () Int)
(declare-fun x990 () Int)
(declare-fun x473 () Int)
(declare-fun x1518 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x292 () Bool)
(declare-fun x1749 () Int)
(declare-fun x1675 () Bool)
(declare-fun x2338 () Int)
(declare-fun x1308 () Bool)
(declare-fun x372 () Bool)
(declare-fun x868 () Bool)
(declare-fun x1594 () Int)
(declare-fun x437 () Int)
(declare-fun x757 () x711)
(declare-fun x1928 () x711)
(declare-fun x1833 () Bool)
(declare-fun x2272 () Bool)
(declare-fun x1030 () x711)
(declare-fun x2015 () Int)
(declare-fun x1726 () Bool)
(declare-fun x340 () Int)
(declare-fun x967 () Int)
(declare-fun x789 () Bool)
(declare-fun x543 () Int)
(declare-fun x1937 () Bool)
(declare-fun x1611 () x711)
(declare-fun x369 () Bool)
(declare-fun x297 () Int)
(declare-fun x1295 (x711) Int)
(declare-fun x1532 () Int)
(declare-fun x1773 () x711)
(declare-fun x497 () Bool)
(declare-fun x478 () Int)
(declare-fun x684 () Bool)
(declare-fun x1156 (Int) Int)
(declare-fun x260 () Int)
(declare-fun x345 () Bool)
(declare-fun x122 () Bool)
(declare-fun x1597 () x711)
(declare-fun x247 () Int)
(declare-fun x648 () Bool)
(declare-fun x926 () Bool)
(declare-fun x1924 () Int)
(declare-fun x1770 () Int)
(declare-fun x832 () Int)
(declare-fun x1442 () Int)
(declare-fun x1765 (x711) Int)
(declare-fun x768 () Int)
(declare-fun x63 (x711) Int)
(declare-fun x1970 () Int)
(declare-fun x1720 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x871 () Int)
(declare-fun x1029 () Int)
(declare-fun x1921 () Bool)
(declare-fun x336 () Bool)
(declare-fun x283 () Bool)
(declare-fun x1166 () Int)
(declare-fun x2116 () x711)
(declare-fun x1792 () Int)
(declare-fun x2094 () Bool)
(declare-fun x69 () Int)
(declare-fun x1115 () Bool)
(declare-fun x1111 () Int)
(declare-fun x1185 () Int)
(declare-fun x1165 () Int)
(declare-fun x1164 () Int)
(declare-fun x2054 () Bool)
(declare-fun x252 () Bool)
(declare-fun x2058 () Int)
(declare-fun x1989 () Int)
(declare-fun x1210 (x711) Int)
(declare-fun x456 () Bool)
(declare-fun x2091 () Bool)
(declare-fun x1756 () Int)
(declare-fun x2086 () Int)
(declare-fun x1573 () Int)
(declare-fun x619 () Bool)
(declare-fun x344 () Bool)
(declare-fun x1892 () Int)
(declare-fun x572 () Bool)
(declare-fun x1576 () x711)
(declare-fun x2026 () Int)
(declare-fun x193 () Int)
(declare-fun x1933 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x629 () Bool)
(declare-fun x73 () Int)
(declare-fun x960 () Int)
(declare-fun x1642 () Int)
(declare-fun x493 () Bool)
(declare-fun x659 () x711)
(declare-fun x1906 () Bool)
(declare-fun x1910 () x711)
(declare-fun x954 () Int)
(declare-fun x968 () x711)
(declare-fun x827 () Int)
(declare-fun x1468 () Int)
(declare-fun x1049 () Int)
(declare-fun x2046 () Bool)
(declare-fun x621 () Int)
(declare-fun x334 () x711)
(declare-fun x186 (x711) Int)
(declare-fun x2210 () Int)
(declare-fun x597 () Bool)
(declare-fun x2069 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x672 () Int)
(declare-fun x89 () Int)
(declare-fun x1328 () Int)
(declare-fun x910 () Int)
(declare-fun x2328 () Bool)
(declare-fun x1919 () x711)
(declare-fun x1778 () Bool)
(declare-fun x1004 () Int)
(declare-fun x1006 () Int)
(declare-fun x889 () Int)
(declare-fun x882 () Int)
(declare-fun x1199 () x711)
(declare-fun x661 () Int)
(declare-fun x1047 () Int)
(declare-fun x851 () x711)
(declare-fun x1737 () Bool)
(declare-fun x594 () Int)
(declare-fun x399 () Int)
(declare-fun x731 () Int)
(declare-fun x746 () x711)
(declare-fun x736 () Bool)
(declare-fun x1818 (Int) Int)
(declare-fun x2289 () Bool)
(declare-fun x75 () Int)
(declare-fun x721 () x711)
(declare-fun x1427 () Int)
(declare-fun x587 () Int)
(declare-fun x575 () Int)
(declare-fun x1746 () Bool)
(declare-fun x450 () Int)
(declare-fun x842 () Int)
(declare-fun x164 () x711)
(declare-fun x944 () x711)
(declare-fun x2359 () Int)
(declare-fun x2199 () Bool)
(declare-fun x9 () Int)
(declare-fun x277 () Int)
(declare-fun x839 (Int) Int)
(declare-fun x583 () Int)
(declare-fun x595 () Int)
(declare-fun x2158 () Bool)
(declare-fun x107 () Int)
(declare-fun x1876 () Int)
(declare-fun x972 () Int)
(declare-fun x975 () Int)
(declare-fun x1224 () Int)
(declare-fun x299 () Int)
(declare-fun x1356 () Bool)
(declare-fun x1085 () Int)
(declare-fun x242 () Bool)
(declare-fun x2030 () Bool)
(declare-fun x2204 () Bool)
(declare-fun x2175 () Bool)
(declare-fun x1099 () Int)
(declare-fun x1723 () Bool)
(declare-fun x1330 () Int)
(declare-fun x1162 () Int)
(declare-fun x2131 () Bool)
(declare-fun x2317 () Int)
(declare-fun x1317 () Int)
(declare-fun x2050 () Int)
(declare-fun x1277 () Bool)
(declare-fun x2188 () Int)
(declare-fun x1738 () x711)
(declare-fun x1178 () Bool)
(declare-fun x1816 () x711)
(declare-fun x2034 () Bool)
(declare-fun x915 () Int)
(declare-fun x609 () Int)
(declare-fun x2 () x711)
(declare-fun x27 () Int)
(declare-fun x77 () Bool)
(declare-fun x727 () Bool)
(declare-fun x826 () Bool)
(declare-fun x146 () Int)
(declare-fun x1336 () Bool)
(declare-fun x2316 () Int)
(declare-fun x852 () Bool)
(declare-fun x2193 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x1056 () Int)
(declare-fun x17 () Int)
(declare-fun x2155 () Int)
(declare-fun x555 () Bool)
(declare-fun x1141 () x711)
(declare-fun x1150 () Int)
(declare-fun x638 () Int)
(declare-fun x563 () Bool)
(declare-fun x2218 () x711)
(declare-fun x1050 () Int)
(declare-fun x1625 () Bool)
(declare-fun x1019 () Int)
(declare-fun x649 () Bool)
(declare-fun x1873 () Int)
(declare-fun x551 (Int) Int)
(declare-fun x486 () x711)
(declare-fun x1121 () Int)
(declare-fun x1826 () x711)
(declare-fun x2031 (Int) Int)
(declare-fun x2280 (Int) Int)
(declare-fun x1041 () Int)
(declare-fun x742 () x711)
(declare-fun x2070 () Int)
(declare-fun x1925 () Int)
(declare-fun x1031 () Int)
(declare-fun x2322 () Bool)
(declare-fun x846 () Int)
(declare-fun x1092 () Int)
(declare-fun x116 () Int)
(declare-fun x1807 () Int)
(declare-fun x1960 () Bool)
(declare-fun x90 () Int)
(declare-fun x2248 () Bool)
(declare-fun x681 () Bool)
(declare-fun x1867 () Int)
(declare-fun x445 () Int)
(declare-fun x438 () Int)
(declare-fun x584 () Bool)
(declare-fun x2255 () Int)
(declare-fun x622 () Int)
(declare-fun x1450 () Bool)
(declare-fun x2032 () x711)
(declare-fun x988 () Bool)
(declare-fun x698 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x1631 (Int) Int)
(declare-fun x284 () x711)
(declare-fun x1950 () Int)
(declare-fun x503 () x711)
(declare-fun x1104 () x711)
(declare-fun x1077 () Int)
(declare-fun x2319 () x711)
(declare-fun x397 () Bool)
(declare-fun x876 (Int) Int)
(declare-fun x1624 () Int)
(declare-fun x585 () Int)
(declare-fun x432 () x711)
(declare-fun x1795 () Bool)
(declare-fun x1175 () x711)
(declare-fun x1667 () x711)
(declare-fun x1877 () Bool)
(declare-fun x2138 () Int)
(declare-fun x657 () Bool)
(declare-fun x2271 () Int)
(declare-fun x140 () x711)
(declare-fun x521 () Bool)
(declare-fun x1716 () Int)
(declare-fun x690 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x1352 () Int)
(declare-fun x610 () Int)
(declare-fun x1939 () Int)
(declare-fun x816 (x711) Int)
(declare-fun x1751 () Int)
(declare-fun x1184 () Bool)
(declare-fun x2115 () Int)
(declare-fun x935 () Int)
(declare-fun x227 () Int)
(declare-fun x586 () Int)
(declare-fun x288 () x711)
(declare-fun x2048 () Int)
(declare-fun x1733 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x204 () Int)
(declare-fun x676 () Int)
(declare-fun x2125 () Int)
(declare-fun x1455 () Bool)
(declare-fun x1541 () x711)
(declare-fun x1414 () x711)
(declare-fun x271 () Int)
(declare-fun x23 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x1936 () Int)
(declare-fun x303 () Int)
(declare-fun x992 () Int)
(declare-fun x511 () Bool)
(declare-fun x1821 () Bool)
(declare-fun x1863 () Int)
(declare-fun x520 () Int)
(declare-fun x980 () Int)
(declare-fun x1470 () Bool)
(declare-fun x783 () Int)
(declare-fun x837 () Int)
(declare-fun x1186 (x711) Int)
(declare-fun x1755 () Bool)
(declare-fun x642 () Bool)
(declare-fun x1948 () Int)
(declare-fun x482 () x711)
(declare-fun x1527 (x711) Int)
(declare-fun x174 () Bool)
(declare-fun x1787 () x711)
(declare-fun x259 () Bool)
(declare-fun x309 () Bool)
(declare-fun x702 () Int)
(declare-fun x1020 () Int)
(declare-fun x391 () Int)
(declare-fun x1001 () Bool)
(declare-fun x419 () x711)
(declare-fun x567 () Int)
(declare-fun x149 () Int)
(declare-fun x796 () Bool)
(declare-fun x791 () Int)
(declare-fun x127 () Bool)
(declare-fun x267 () Bool)
(declare-fun x1791 () x711)
(declare-fun x1612 () Bool)
(declare-fun x1105 () Int)
(declare-fun x542 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x143 () x711)
(declare-fun x2130 () Int)
(declare-fun x2024 () Bool)
(declare-fun x771 () Bool)
(declare-fun x200 (Int) Int)
(declare-fun x1463 () Bool)
(declare-fun x829 () Int)
(declare-fun x1802 () Bool)
(declare-fun x1258 () Bool)
(declare-fun x203 () Int)
(declare-fun x1870 () Int)
(declare-fun x1126 () Bool)
(declare-fun x1753 () Int)
(declare-fun x2156 () Bool)
(declare-fun x1739 () x711)
(declare-fun x1554 () Int)
(declare-fun x2073 (x711) Int)
(declare-fun x384 () Bool)
(declare-fun x1903 () Bool)
(declare-fun x1181 () Int)
(declare-fun x792 () Int)
(declare-fun x410 () Int)
(declare-fun x1203 () Bool)
(declare-fun x1849 () Bool)
(declare-fun x2343 () x711)
(declare-fun x94 () Bool)
(declare-fun x342 () Bool)
(declare-fun x2207 () Bool)
(declare-fun x1144 () Int)
(declare-fun x2068 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x1730 () x711)
(declare-fun x412 () Int)
(declare-fun x1445 () x711)
(declare-fun x2012 () Int)
(declare-fun x218 () Int)
(declare-fun x1900 (Int) Int)
(declare-fun x302 () x711)
(declare-fun x2351 () x711)
(declare-fun x545 () Bool)
(declare-fun x70 () Bool)
(declare-fun x56 (Int) Int)
(declare-fun x33 () Int)
(declare-fun x377 () Int)
(declare-fun x722 () Int)
(declare-fun x1888 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x1415 () x711)
(declare-fun x1357 () Bool)
(declare-fun x867 () Int)
(declare-fun x253 () Bool)
(declare-fun x2318 () x711)
(declare-fun x1474 () Int)
(declare-fun x645 () Bool)
(declare-fun x217 () x711)
(declare-fun x1 () Int)
(declare-fun x1207 () x711)
(declare-fun x2261 () Int)
(declare-fun x2257 () Bool)
(declare-fun x1766 () Int)
(declare-fun x1152 () Bool)
(declare-fun x444 () Int)
(declare-fun x1096 () Int)
(declare-fun x1113 (x711) Int)
(declare-fun x2016 () x711)
(declare-fun x45 () Bool)
(declare-fun x2149 () Int)
(declare-fun x2213 () x711)
(declare-fun x993 () Int)
(declare-fun x1391 () Bool)
(declare-fun x1003 () Int)
(declare-fun x880 () Int)
(declare-fun x1133 () Int)
(declare-fun x906 () Int)
(declare-fun x2035 () Int)
(declare-fun x697 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x99 () Bool)
(declare-fun x2250 () x711)
(declare-fun x306 () Int)
(declare-fun x1337 () Bool)
(declare-fun x108 () Bool)
(declare-fun x315 () Bool)
(declare-fun x1421 () Int)
(declare-fun x2007 () x711)
(declare-fun x1923 (Int) Int)
(declare-fun x1093 () Bool)
(declare-fun x1837 (Int) Int)
(declare-fun x605 () Bool)
(declare-fun x612 () Bool)
(declare-fun x416 () Int)
(declare-fun x2018 () x711)
(declare-fun x1037 () Int)
(declare-fun x1748 () x711)
(declare-fun x1800 () Int)
(declare-fun x1858 () Int)
(declare-fun x554 () x711)
(declare-fun x447 () Int)
(declare-fun x500 () Int)
(declare-fun x2173 () Int)
(declare-fun x2023 (x711) Int)
(declare-fun x1632 () Int)
(declare-fun x887 () Int)
(declare-fun x2100 () Int)
(declare-fun x1290 () Int)
(declare-fun x1804 () Int)
(declare-fun x2095 () Int)
(declare-fun x1425 () Int)
(declare-fun x774 () Bool)
(declare-fun x1606 () Int)
(declare-fun x1546 () Int)
(declare-fun x1292 () Int)
(declare-fun x831 () Int)
(declare-fun x495 () Bool)
(declare-fun x355 () x711)
(declare-fun x2241 () x711)
(declare-fun x1431 () Bool)
(declare-fun x838 () x711)
(declare-fun x59 () Bool)
(declare-fun x904 () x711)
(declare-fun x1627 () Bool)
(declare-fun x2275 () Int)
(declare-fun x2334 () Bool)
(declare-fun x42 () Bool)
(declare-fun x190 () Int)
(declare-fun x1779 () Int)
(declare-fun x1402 () Int)
(declare-fun x2303 () x711)
(declare-fun x513 () Int)
(declare-fun x668 () Int)
(declare-fun x97 (Int) Int)
(declare-fun x533 () Int)
(declare-fun x1353 () x711)
(declare-fun x606 () Int)
(declare-fun x1320 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x693 () Int)
(declare-fun x1500 () Int)
(declare-fun x2122 () Int)
(declare-fun x476 () x711)
(declare-fun x54 () Bool)
(declare-fun x1526 () x711)
(declare-fun x1965 () Int)
(declare-fun x1496 () Int)
(declare-fun x1666 () Int)
(declare-fun x2003 () Int)
(declare-fun x1574 () Bool)
(declare-fun x1272 (Int) Int)
(declare-fun x265 () Int)
(declare-fun x1477 (Int) Int)
(declare-fun x2164 () Int)
(declare-fun x1374 () Bool)
(declare-fun x2320 () Int)
(declare-fun x2198 () x711)
(declare-fun x331 () Int)
(declare-fun x1366 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x1693 () Int)
(declare-fun x1929 () Int)
(declare-fun x1109 () Int)
(declare-fun x1665 () Bool)
(declare-fun x2313 () x711)
(declare-fun x411 () Bool)
(declare-fun x611 () Bool)
(declare-fun x613 () Int)
(declare-fun x811 () Int)
(declare-fun x32 () Int)
(declare-fun x1568 () Int)
(declare-fun x836 () x711)
(declare-fun x150 () Int)
(declare-fun x1467 () Bool)
(declare-fun x969 () x711)
(declare-fun x2043 () Int)
(declare-fun x1961 () x711)
(declare-fun x328 () Bool)
(declare-fun x216 () Int)
(declare-fun x1521 () Bool)
(declare-fun x178 () Int)
(declare-fun x1968 () Bool)
(declare-fun x1022 () Int)
(declare-fun x532 () Int)
(declare-fun x1154 () Bool)
(declare-fun x1252 () Int)
(declare-fun x1922 () Int)
(declare-fun x1393 () Int)
(declare-fun x310 () Int)
(declare-fun x160 () Bool)
(declare-fun x339 () Bool)
(declare-fun x2293 (Int) Int)
(declare-fun x79 () Bool)
(declare-fun x1941 () x711)
(declare-fun x885 () Int)
(define-fun x1101 ((x711 x711) (x427 Int)) x711 (ite ((_ is x485) x711) (x485 (x96 x711) (+ (x112 x711) x427)) (ite ((_ is x1112) x711) (x1112 (x817 x711) (x176 x711) (+ x427 (x135 x711))) (x28 (+ (x643 x711) x427)))))
(define-fun x2192 ((x439 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x439) (<= 0 x439)) x439 (- x439 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x959 ((x439 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x439) (> 0 x439)) (+ x439 115792089237316195423570985008687907853269984665640564039457584007913129639936) x439))
(define-fun x49 ((x2274 Int)) Bool (and (>= x2274 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274)))
(define-fun x1957 ((x2274 Int)) Bool (and (= x2274 (x718 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2274)) (= (x718 x2274 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2274)))
(define-fun x501 ((x2274 Int)) Bool (and (= 0 (x718 x2274 0)) (= 0 (x718 0 x2274))))
(define-fun x779 ((x2274 Int)) Bool (= (x718 x2274 x2274) x2274))
(define-fun x170 ((x2274 Int)) Bool (and (x501 x2274) (x779 x2274) (x1957 x2274)))
(define-fun x1589 ((x2274 Int)) Bool (= (x718 1461501637330902918203684832716283019655932542975 (x718 1461501637330902918203684832716283019655932542975 x2274)) (x718 1461501637330902918203684832716283019655932542975 x2274)))
(define-fun x2128 ((x2274 Int)) Bool (=> (and (< x2274 1461501637330902918203684832716283019655932542976) (>= x2274 0)) (= (x718 1461501637330902918203684832716283019655932542975 x2274) x2274)))
(define-fun x660 ((x2274 Int)) Bool (=> (= (x718 1461501637330902918203684832716283019655932542975 x2274) x2274) (and (> 1461501637330902918203684832716283019655932542976 x2274) (>= x2274 0))))
(define-fun x1485 ((x2274 Int)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x2274) (> 2923003274661805836407369665432566039311865085952 x2274)) (= (x718 1461501637330902918203684832716283019655932542975 x2274) (- x2274 1461501637330902918203684832716283019655932542976))))
(define-fun x48 ((x2274 Int) (x1218 Int)) Bool (and (= x2274 (+ (* x1218 1461501637330902918203684832716283019655932542976) (x718 1461501637330902918203684832716283019655932542975 x2274))) (>= x1218 0)))
(define-fun x654 ((x2274 Int) (x1296 Int)) Bool (and (x2128 x2274) (x1589 x2274) (x48 x2274 x1296) (x1485 x2274) (x660 x2274)))
(define-fun x1086 ((x2274 Int) (x1218 Int)) Bool (= (x718 x2274 x1218) (x718 x1218 x2274)))
(define-fun x2019 ((x2274 Int) (x1218 Int)) Bool (and (=> (<= 0 x2274) (<= (x718 x2274 x1218) x2274)) (=> (<= 0 x1218) (<= (x718 x2274 x1218) x1218)) (<= 0 (x718 x2274 x1218))))
(define-fun x1340 ((x2274 Int) (x1218 Int)) Bool (and (x1086 x2274 x1218) (x2019 x2274 x1218)))
(define-fun x805 ((x2274 Int) (x1296 Int)) Bool (and (x1340 x2274 1461501637330902918203684832716283019655932542975) (x654 x2274 x1296)))
(define-fun x251 ((x2274 Int)) Bool (= (x718 26959946667150639794667015087019630673637144422540572481103610249215 (x718 26959946667150639794667015087019630673637144422540572481103610249215 x2274)) (x718 26959946667150639794667015087019630673637144422540572481103610249215 x2274)))
(define-fun x667 ((x2274 Int)) Bool (=> (and (>= x2274 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x2274)) (= (x718 26959946667150639794667015087019630673637144422540572481103610249215 x2274) x2274)))
(define-fun x1700 ((x2274 Int)) Bool (=> (= (x718 26959946667150639794667015087019630673637144422540572481103610249215 x2274) x2274) (and (>= x2274 0) (< x2274 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x1380 ((x2274 Int)) Bool (=> (and (> 53919893334301279589334030174039261347274288845081144962207220498432 x2274) (<= 26959946667150639794667015087019630673637144422540572481103610249216 x2274)) (= (- x2274 26959946667150639794667015087019630673637144422540572481103610249216) (x718 26959946667150639794667015087019630673637144422540572481103610249215 x2274))))
(define-fun x1844 ((x2274 Int) (x1218 Int)) Bool (and (= x2274 (+ (* x1218 26959946667150639794667015087019630673637144422540572481103610249216) (x718 26959946667150639794667015087019630673637144422540572481103610249215 x2274))) (>= x1218 0)))
(define-fun x1361 ((x2274 Int) (x1296 Int)) Bool (and (x1700 x2274) (x1380 x2274) (x667 x2274) (x1844 x2274 x1296) (x251 x2274)))
(define-fun x11 ((x2274 Int) (x1296 Int)) Bool (and (x1361 x2274 x1296) (x1340 x2274 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1377 ((x2274 Int)) Bool (= (x718 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2274) (x718 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x718 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2274))))
(define-fun x324 ((x2274 Int)) Bool (=> (and (< x2274 32) (>= x2274 0)) (= 0 (x718 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2274))))
(define-fun x446 ((x2274 Int) (x1218 Int) (x1513 Int) (x1360 Int)) Bool (and (>= x1360 0) (> 1 x1360) (= (+ (* x1513 32) (* x1360 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1218) x2274) (< x1218 32) (< x1513 3618502788666131106986593281521497120414687020801267626233049500247285301248) (<= 0 x1218) (= (* 32 x1513) (x718 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2274)) (>= x1513 0)))
(define-fun x2051 ((x2274 Int) (x153 Int) (x1024 Int) (x1007 Int)) Bool (and (x446 x2274 x153 x1024 x1007) (x1377 x2274) (x324 x2274)))
(define-fun x951 ((x2274 Int) (x153 Int) (x1024 Int) (x1007 Int)) Bool (and (x1340 x2274 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2051 x2274 x153 x1024 x1007)))
(define-fun x1932 ((x1291 Int)) Int (ite (< x1291 x1690) (x839 x1291) 0))
(define-fun x1705 ((x1291 Int)) Int (x579 x1291))
(define-fun x402 ((x1291 Int)) Int (x579 x1291))
(define-fun x1556 ((x1291 Int)) Int (x1489 x1291))
(define-fun x47 ((x1291 Int)) Int (x1489 x1291))
(define-fun x14 ((x1291 Int)) Int (x1040 x1291))
(define-fun x1148 ((x1291 Int)) Int (x1040 x1291))
(define-fun x185 ((x1291 Int)) Int (x2031 x1291))
(define-fun x1082 ((x1291 Int)) Int (x2031 x1291))
(define-fun x2087 ((x1291 x711)) Int (ite (= (x472 274184521717934524641157099916833587206) x1291) x64 (x527 x1291)))
(define-fun x1103 ((x1291 x711)) Int (ite (= (x472 x822) x1291) x151 (x2087 x1291)))
(define-fun x1052 ((x1291 x711)) Int (ite (= (x472 x822) x1291) x1056 (x1103 x1291)))
(define-fun x713 ((x1291 x711)) Int (ite (= x1291 (x472 274184521717934524641157099916833587206)) x2237 (x1052 x1291)))
(define-fun x381 ((x1291 x711)) Int (ite x1253 (x713 x1291) (x527 x1291)))
(define-fun x1312 ((x1291 x711)) Int (ite (= x1291 x659) x614 (x1582 x1291)))
(define-fun x461 ((x1291 x711)) Int (ite (= x2336 x1291) x2255 (x1312 x1291)))
(define-fun x518 ((x1291 x711)) Int (ite (= x1291 x1748) x2203 (x63 x1291)))
(define-fun x1883 ((x1291 x711)) Int (ite x1253 (x518 x1291) (x63 x1291)))
(define-fun x1403 ((x1291 x711)) Int (ite (= x1291 x1941) x1962 (x1889 x1291)))
(define-fun x1595 ((x1291 x711)) Int (ite (= x1291 x2075) x2089 (x1403 x1291)))
(define-fun x417 ((x1291 x711)) Int (ite (= x1291 x1175) x1188 (x1321 x1291)))
(define-fun x671 ((x1291 x711)) Int (ite (= x1104 x1291) x1188 (x1321 x1291)))
(define-fun x1286 ((x1291 x711)) Int (ite (and (not x651) x1538) (x417 x1291) (x671 x1291)))
(define-fun x861 ((x1291 x711)) Int (ite (= x2201 x1291) x1863 (x2085 x1291)))
(define-fun x1368 ((x1291 x711)) Int (ite (= x1291 x688) x1039 (x816 x1291)))
(define-fun x1604 ((x1291 Int)) Int (ite (= x1291 x1922) x2144 (x1801 x1291)))
(define-fun x2101 ((x1291 Int)) Int (ite (= x717 x1291) x1924 (x1604 x1291)))
(define-fun x1132 ((x1291 Int)) Int (ite (= x1010 x1291) x2335 (x678 x1291)))
(define-fun x752 ((x1291 Int)) Int (ite (= x1978 x1291) x1703 (x2101 x1291)))
(define-fun x1822 ((x1291 Int)) Int (ite (= x1317 x1291) x758 (x1371 x1291)))
(define-fun x1084 ((x1291 Int)) Int (ite (= x2200 x1291) 0 (x1842 x1291)))
(define-fun x824 ((x1291 x711)) Int (ite (= x1172 x1291) x1188 (x1186 x1291)))
(define-fun x65 ((x1291 x711)) Int (ite (= x1291 x169) x1188 (x1186 x1291)))
(define-fun x418 ((x1291 x711)) Int (ite (= x1291 x2016) x1188 (x1186 x1291)))
(define-fun x289 ((x1291 x711)) Int (ite (and x1467 (not x1694) (not x2220)) (x824 x1291) (ite (and x1694 (not x2220) x1467) (x65 x1291) (x418 x1291))))
(define-fun x1095 ((x1291 x711)) Int (ite (= x1291 x1774) x1815 (x2073 x1291)))
(define-fun x733 ((x1291 x711)) Int (ite (and x1467 x1802) (x2073 x1291) (x1095 x1291)))
(define-fun x1408 ((x1291 Int)) Int (ite (= x1291 128) x2308 (x1616 x1291)))
(define-fun x1483 ((x1291 Int)) Int (ite (= 160 x1291) x2056 (x1025 x1291)))
(define-fun x1332 ((x1291 x711)) Int (ite (= x1291 x406) x755 (x1375 x1291)))
(define-fun x434 ((x1291 x711)) Int (ite (and x1538 x719) (x1375 x1291) (x1332 x1291)))
(define-fun x2172 ((x1291 Int)) Int (ite (= x975 x1291) x1874 (x1026 x1291)))
(define-fun x182 ((x1291 Int)) Int (ite (= x571 x1291) x2003 (x1631 x1291)))
(define-fun x22 ((x1291 Int)) Int (ite (and (not x1249) (not x828) x1422) (x1842 x1291) (x1084 x1291)))
(define-fun x544 ((x1291 Int)) Int (ite (= x1291 0) 1 (x1372 x1291)))
(define-fun x905 ((x1291 x711)) Int (ite (= x1291 x1673) x1344 (x763 x1291)))
(define-fun x687 ((x1291 x711)) Int (ite (= x1291 x2218) x1473 (x905 x1291)))
(define-fun x1364 ((x1291 x711)) Int (ite x1492 (ite (and x60 x160) (x763 x1291) (x687 x1291)) (x763 x1291)))
(define-fun x498 ((x1291 x711)) Int (ite (= x2120 x1291) x1217 (x2148 x1291)))
(define-fun x1237 ((x1291 x711)) Int (ite (= x865 x1291) x2063 (x498 x1291)))
(define-fun x1566 ((x1291 x711)) Int (ite x1492 (ite (and x60 x160) (x1237 x1291) (x2148 x1291)) (x2148 x1291)))
(define-fun x188 ((x1291 x711)) Int (ite (= x588 x1291) x1400 (x1210 x1291)))
(define-fun x1686 ((x1291 x711)) Int (ite (and x67 (not x973)) (x188 x1291) (x1210 x1291)))
(define-fun x1034 ((x1291 x711)) Int (ite (= x431 x1291) x1402 (x1527 x1291)))
(define-fun x699 ((x1291 x711)) Int (ite (and (not x2249) (not x888) x134) (x1034 x1291) (x1527 x1291)))
(define-fun x1076 ((x1291 Int)) Int (ite (= x1291 x536) x2001 (x1890 x1291)))
(define-fun x734 ((x1291 Int)) Int (ite (= x1780 x1291) x424 (x1076 x1291)))
(define-fun x213 ((x1291 Int)) Int (ite (= x2077 x1291) x878 (x1482 x1291)))
(define-fun x2337 ((x1291 Int)) Int (ite (= x1291 x1269) x1792 (x734 x1291)))
(define-fun x632 ((x1291 Int)) Int (ite (= x881 x1291) x990 (x1477 x1291)))
(define-fun x666 ((x1291 Int)) Int (ite (= x441 x1291) 0 (x56 x1291)))
(define-fun x362 ((x1291 Int)) Int (ite (= 128 x1291) x1446 (x551 x1291)))
(define-fun x401 ((x1291 Int)) Int (ite (= x1291 160) x2071 (x1355 x1291)))
(define-fun x1376 ((x1291 Int)) Int (ite (= x1291 x515) x1232 (x2268 x1291)))
(define-fun x2239 ((x1291 Int)) Int (ite (= x1291 x567) x468 (x1490 x1291)))
(define-fun x1451 ((x1291 Int)) Int (ite (and (not x1639) x2264 (not x2141)) (x56 x1291) (x666 x1291)))
(define-fun x1488 ((x1291 x711)) Int (ite (= (x472 274184521717934524641157099916833587206) x1291) x1851 (x381 x1291)))
(define-fun x2225 ((x1291 x711)) Int (ite (= (x472 x1046) x1291) x945 (x1488 x1291)))
(define-fun x2304 ((x1291 Int)) Int (ite (= 0 x1291) 1 (x1772 x1291)))
(define-fun x919 ((x1291 Int)) Int (ite (= 128 x1291) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1272 x1291)))
(define-fun x989 ((x1291 Int)) Int (ite (= x1291 0) x2295 (x1586 x1291)))
(define-fun x1338 ((x1291 Int)) Int (ite (= 128 x1291) x2295 (x1062 x1291)))
(define-fun x1767 ((x1291 Int)) Int (ite (= 4 x1291) 128 (x1932 x1291)))
(define-fun x2226 ((x1291 Int)) Int (ite (= 36 x1291) x2202 (x1767 x1291)))
(define-fun x2278 ((x1291 Int)) Int (ite (= x1291 68) x1427 (x2226 x1291)))
(define-fun x1459 ((x1291 Int)) Int (ite (= x1291 100) x1378 (x2278 x1291)))
(define-fun x691 ((x1291 Int)) Int (ite (= x1291 132) x483 (x1459 x1291)))
(define-fun x1038 ((x1291 Int)) Int (ite (and (< x1291 (+ x2235 164)) (<= 164 x1291)) (x97 (+ 0 (- x1291 164))) (x691 x1291)))
(define-fun x664 ((x1291 Int)) Int (ite (= x2153 x1291) x278 (x1038 x1291)))
(define-fun x338 ((x1291 Int)) Int (ite (and (>= x1291 x1185) (> (+ x1185 x564) x1291)) (x295 (+ (- x1291 x1185) 0)) (x664 x1291)))
(define-fun x1201 ((x1291 Int)) Int (ite (= x191 x1291) x1807 (x338 x1291)))
(define-fun x1717 ((x1291 Int)) Int (ite (and (>= x1291 x1133) (> (+ x1324 x1133) x1291)) (x229 (+ (- x1291 x1133) 0)) (x1201 x1291)))
(define-fun x510 ((x1291 Int)) Int (ite (= x1291 x2118) x1800 (x1717 x1291)))
(define-fun x101 ((x1291 Int)) Int (ite (and (<= x1136 x1291) (> (+ x1136 x1854) x1291)) (x1578 (+ (- x1291 x1136) 0)) (x510 x1291)))
(define-fun x933 ((x1291 x711)) Int (ite (= x1910 x1291) x1188 (x1186 x1291)))
(define-fun x43 ((x1291 x711)) Int (ite (= x1862 x1291) x1188 (x1186 x1291)))
(define-fun x636 ((x1291 x711)) Int (ite (= x1291 x531) x1188 (x1186 x1291)))
(define-fun x786 ((x1291 x711)) Int (ite (and x1964 x1374) (x933 x1291) (ite (and (not x1374) x2159 x1964) (x43 x1291) (x636 x1291))))
(define-fun x294 ((x1291 x711)) Int (ite (= x757 x1291) x1159 (x2073 x1291)))
(define-fun x2238 ((x1291 x711)) Int (ite (and x1964 x748) (x2073 x1291) (x294 x1291)))
(define-fun x2186 ((x1291 x711)) Int (ite (= x1291 x1776) x1471 (x1889 x1291)))
(define-fun x1681 ((x1291 x711)) Int (ite (= x1291 x2241) x658 (x2186 x1291)))
(define-fun x477 ((x1291 x711)) Int (ite (= x976 x1291) x1561 (x186 x1291)))
(define-fun x2357 ((x1291 x711)) Int (ite (= x1291 x747) x891 (x477 x1291)))
(define-fun x909 ((x1291 x711)) Int (ite (and x2209 x850) (x2357 x1291) (x186 x1291)))
(define-fun x787 ((x1291 x711)) Int (ite (and x411 (not x685)) (x186 x1291) (ite (and (not x773) x1891) (x1889 x1291) (ite x1454 (x909 x1291) (x186 x1291)))))
(define-fun x2157 ((x1291 x711)) Int (ite (= x1291 x389) x260 (x1582 x1291)))
(define-fun x465 ((x1291 x711)) Int (ite (= x1291 x419) x2352 (x2157 x1291)))
(define-fun x1079 ((x1291 x711)) Int (ite (= x2253 x1291) x183 (x266 x1291)))
(define-fun x141 ((x1291 x711)) Int (ite (= x1291 x462) x484 (x1079 x1291)))
(define-fun x815 ((x1291 x711)) Int (ite (and x2209 x850) (x266 x1291) (x141 x1291)))
(define-fun x1443 ((x1291 x711)) Int (ite (and (not x685) x411) (x266 x1291) (ite (and x1891 (not x773)) (x1582 x1291) (ite x1454 (x815 x1291) (x266 x1291)))))
(define-fun x971 ((x1291 x711)) Int (ite (= x1291 x546) x105 (x2085 x1291)))
(define-fun x1520 ((x1291 x711)) Int (ite (= x1291 x140) x2311 (x1295 x1291)))
(define-fun x26 ((x1291 x711)) Int (ite (and (not x1131) x1178) (x1520 x1291) (x1295 x1291)))
(define-fun x1042 ((x1291 x711)) Int (ite (= x1291 x138) x569 (x816 x1291)))
(define-fun x1081 ((x1291 x711)) Int (ite (= x1291 x293) x2338 (x1765 x1291)))
(define-fun x634 ((x1291 x711)) Int (ite (and (not x1059) x249 (not x2158)) (x1081 x1291) (x1765 x1291)))
(define-fun x1110 ((x1291 x711)) Int (ite (= x1469 x1291) x395 (x63 x1291)))
(define-fun x1580 ((x1291 x711)) Int (ite (and x2257 x1986) (x63 x1291) (x1110 x1291)))
(define-fun x1692 ((x1291 Int)) Int (ite (= x1291 x447) x2100 (x1879 x1291)))
(define-fun x1912 ((x1291 Int)) Int (ite (= x1163 x1291) x1547 (x1692 x1291)))
(define-fun x128 ((x1291 Int)) Int (ite (= x2139 x1291) x1233 (x1912 x1291)))
(define-fun x1540 ((x1291 Int)) Int (ite (and x2257 x1986) (x1879 x1291) (x128 x1291)))
(define-fun x979 ((x1291 Int)) Int (ite (= x2180 x1291) x1389 (x1540 x1291)))
(define-fun x1771 ((x1291 Int)) Int (ite (= x1291 x1965) x15 (x979 x1291)))
(define-fun x1569 ((x1291 Int)) Int (ite (= x2136 x1291) x351 (x876 x1291)))
(define-fun x737 ((x1291 Int)) Int (ite (and x1986 x2257) (x876 x1291) (x1569 x1291)))
(define-fun x797 ((x1291 Int)) Int (ite (= x1382 x1291) x280 (x737 x1291)))
(define-fun x1869 ((x1291 Int)) Int (ite (= x1291 x856) x2279 (x1771 x1291)))
(define-fun x1195 ((x1291 Int)) Int (ite (= x1291 x1623) x95 (x8 x1291)))
(define-fun x2045 ((x1291 Int)) Int (ite (= x653 x1291) 0 (x1200 x1291)))
(define-fun x220 ((x1291 Int)) Int (ite (= x1291 x2246) x1134 (x1211 x1291)))
(define-fun x1051 ((x1291 Int)) Int (ite (= x1291 x2246) x1335 (x1211 x1291)))
(define-fun x978 ((x1291 Int)) Int (ite (= x2080 x1291) x1846 (x1923 x1291)))
(define-fun x1768 ((x1291 Int)) Int (ite (= x885 x1291) 0 (x1832 x1291)))
(define-fun x1878 ((x1291 x711)) Int (ite (= x1005 x1291) x1188 (x1321 x1291)))
(define-fun x1596 ((x1291 x711)) Int (ite (= x1291 x1209) x1188 (x1321 x1291)))
(define-fun x600 ((x1291 x711)) Int (ite (and x1379 x279) (x1878 x1291) (x1596 x1291)))
(define-fun x1268 ((x1291 x711)) Int (ite (= x1567 x1291) x1098 (x1375 x1291)))
(define-fun x2183 ((x1291 x711)) Int (ite (and x1920 x1379) (x1375 x1291) (x1268 x1291)))
(define-fun x469 ((x1291 Int)) Int (ite (= 128 x1291) x724 (x1065 x1291)))
(define-fun x2132 ((x1291 Int)) Int (ite (and x1374 x1964) (x1065 x1291) (x469 x1291)))
(define-fun x1537 ((x1291 Int)) Int (ite (= x1144 x1291) x443 (x2132 x1291)))
(define-fun x1002 ((x1291 Int)) Int (ite (= x1291 160) x857 (x420 x1291)))
(define-fun x155 ((x1291 Int)) Int (ite (and x1964 x1374) (x420 x1291) (x1002 x1291)))
(define-fun x172 ((x1291 Int)) Int (ite (= x1291 x1895) x1031 (x155 x1291)))
(define-fun x474 ((x1291 Int)) Int (ite (= x772 x1291) x313 (x1837 x1291)))
(define-fun x956 ((x1291 Int)) Int (ite (= x2269 x1291) x849 (x474 x1291)))
(define-fun x132 ((x1291 Int)) Int (ite (= x277 x1291) x1127 (x206 x1291)))
(define-fun x2262 ((x1291 Int)) Int (ite (= x341 x1291) x1506 (x132 x1291)))
(define-fun x440 ((x1291 Int)) Int (ite (and x1271 (not x496) (not x2199)) (x1832 x1291) (x1768 x1291)))
(define-fun x225 ((x1291 x711)) Int (ite (= (x472 274184521717934524641157099916833587206) x1291) x845 (x527 x1291)))
(define-fun x840 ((x1291 x711)) Int (ite (= (x472 x1677) x1291) x1989 (x225 x1291)))
(define-fun x219 ((x1291 x711)) Int (ite (= (x472 x1677) x1291) x2210 (x840 x1291)))
(define-fun x357 ((x1291 x711)) Int (ite (= (x472 274184521717934524641157099916833587206) x1291) x2064 (x219 x1291)))
(define-fun x1638 ((x1291 x711)) Int (ite (and x2257 x1986) (x527 x1291) (x357 x1291)))
(define-fun x1078 ((x1291 x711)) Int (ite (= (x472 274184521717934524641157099916833587206) x1291) x1979 (x1638 x1291)))
(define-fun x2307 ((x1291 x711)) Int (ite (= x1291 (x472 x526)) x832 (x1078 x1291)))
(define-fun x1305 ((x1291 Int)) Int (ite (= 0 x1291) 1 (x268 x1291)))
(define-fun x1915 ((x1291 Int)) Int (ite (= 0 x1291) 1 (x2280 x1291)))
(define-fun x57 ((x1291 Int)) Int (ite (= 0 x1291) 1 (x2280 x1291)))
(define-fun x1714 ((x1291 Int)) Int (ite (and x1093 x1197) (x1915 x1291) (x57 x1291)))
(define-fun x2252 ((x1291 Int)) Int (ite (and (< x1291 (+ x2129 x1798)) (>= x1291 x2129)) (x1714 (+ (- x1291 x2129) 0)) (x1347 x1291)))
(define-fun x5 ((x1291 Int)) Int (ite (and (not x800) x784) (x2252 x1291) (x1347 x1291)))
(define-fun x1896 ((x1291 Int)) Int (ite (= x2246 x1291) x1798 (x1390 x1291)))
(define-fun x1662 ((x1291 Int)) Int (ite (and x784 (not x800)) (x1896 x1291) (x1390 x1291)))
(define-fun x162 ((x1291 Int)) Int (ite (= 128 x1291) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2162 x1291)))
(define-fun x167 ((x1291 Int)) Int (ite (= x1291 0) x1850 (x2020 x1291)))
(define-fun x2038 ((x1291 Int)) Int (ite (= x1291 128) x1850 (x1479 x1291)))
(define-fun x1517 ((x1291 Int)) Int (ite (= 0 x1291) 1 (x1372 x1291)))
(define-fun x454 ((x1291 Int)) Int (ite (= x1291 0) 1 (x1772 x1291)))
(define-fun x1671 ((x1291 Int)) Int (ite (= x1291 0) x1096 (x1586 x1291)))
(define-fun x1909 ((x1291 Int)) Int (ite (= x1291 128) x1096 (x1062 x1291)))
(define-fun x1731 ((x1291 Int)) Int (ite (= 0 x1291) 1 (x268 x1291)))
(define-fun x180 ((x1291 Int)) Int (ite (= 0 x1291) x2190 (x2020 x1291)))
(define-fun x300 ((x1291 Int)) Int (ite (= 128 x1291) x2190 (x1479 x1291)))
(define-fun x1660 ((x1291 Int)) Int (ite (and x2033 x574) (x544 x1291) (x1517 x1291)))
(define-fun x1884 ((x1291 Int)) Int (ite (= x672 x1291) x2232 (x200 x1291)))
(define-fun x2211 ((x1291 Int)) Int (ite (and (>= x1291 x358) (> (+ x2232 x358) x1291)) (x1660 (+ 0 (- x1291 x358))) (x31 x1291)))
(define-fun x255 ((x1291 Int)) Int (ite (and x1510 x1253) (x200 x1291) (x1884 x1291)))
(define-fun x120 ((x1291 Int)) Int (ite (and x1253 x1510) (x31 x1291) (x2211 x1291)))
(define-fun x1551 ((x1291 Int)) Int (ite (and x60 x160) (x2304 x1291) (x454 x1291)))
(define-fun x1283 ((x1291 x711)) Int (ite (= (x472 x1046) x1291) x3 (x2225 x1291)))
(define-fun x1045 ((x1291 Int)) Int (ite (= x1291 x696) x130 (x2208 x1291)))
(define-fun x221 ((x1291 Int)) Int (ite (and (>= x1291 x1939) (< x1291 (+ x1939 x130))) (x1551 (+ 0 (- x1291 x1939))) (x1058 x1291)))
(define-fun x114 ((x1291 Int)) Int (ite (and x1492 x1894) (x1058 x1291) (x221 x1291)))
(define-fun x2184 ((x1291 Int)) Int (ite (and x1492 x1894) (x2208 x1291) (x1045 x1291)))
(define-fun x1835 ((x1291 Int)) Int (ite (and x725 x985) (x1338 x1291) (x1909 x1291)))
(define-fun x1908 ((x1291 Int)) Int (x97 x1291))
(define-fun x1886 ((x1291 Int)) Int (x295 x1291))
(define-fun x1000 ((x1291 Int)) Int (x229 x1291))
(define-fun x1608 ((x1291 Int)) Int (x1578 x1291))
(define-fun x704 ((x1291 Int)) Int (ite (and x2209 x850) (x1305 x1291) (x1731 x1291)))
(define-fun x1261 ((x1291 x711)) Int (ite (= x1291 (x472 x526)) x616 (x2307 x1291)))
(define-fun x1138 ((x1291 Int)) Int (ite (= x1291 x296) x299 (x1992 x1291)))
(define-fun x361 ((x1291 Int)) Int (ite (and (< x1291 (+ x299 x1805)) (<= x1805 x1291)) (x704 (+ (- x1291 x1805) 0)) (x2145 x1291)))
(define-fun x1674 ((x1291 Int)) Int (ite (and x1454 x2123) (x2145 x1291) (x361 x1291)))
(define-fun x98 ((x1291 Int)) Int (ite (and x2123 x1454) (x1992 x1291) (x1138 x1291)))
(define-fun x977 ((x1291 Int)) Int (ite (and x868 x1243) (x2038 x1291) (x300 x1291)))
(define-fun x2258 ((x2274 Int)) Bool (=> (and (not (= 2293535753 x2274)) (not (= x2274 911411945)) (not (= 18446744073709551615 x2274)) (not (= x2274 468353030)) (not (= x2274 1986467848)) (not (= x2274 635128645)) (not (= 604800 x2274)) (not (= x2274 1889567281)) (not (= x2274 2835717307)) (not (= 274184521717934524641157099916833587214 x2274)) (not (= x2274 142201243)) (not (= x2274 2258409472)) (not (= x2274 69947311)) (not (= 649617121 x2274)) (not (= 115792089237316195423570985008687907853269984665640564039457 x2274)) (not (= x2274 1000000000000000000)) (not (= 274184521717934524641157099916833587218 x2274)) (not (= 1968616202 x2274)) (not (= x2274 826074471)) (not (= 274184521717934524641157099916833587206 x2274)) (not (= x2274 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x2274 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2274)) (not (= x2274 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 87118632 x2274)) (not (= x2274 2514000705)) (not (= x2274 842085797)) (not (= x2274 1461501637330902918203684832716283019655932542975)) (< 10000 x2274) (not (= 2211524764 x2274)) (not (= 2061678023 x2274)) (not (= x2274 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x2274 1461501637330902918203684832716283019655932542976)) (not (= x2274 759532456)) (not (= x2274 243137395))) (not ((_ is x28) (x472 x2274)))))
(assert (x49 x1766))
(assert (x49 x277))
(assert (=> (>= 10000 x1503) (= (x472 x1503) (x28 x1503))))
(assert (= (ite x1253 (ite (and x574 x2033) (x1582 x1945) (x461 x1945)) (x1582 x1945)) (x763 x1945)))
(assert (x49 x1873))
(assert (x49 x1179))
(assert (= (ite (and x1374 x1964) (x816 x2165) (ite (and (not x1374) x1964 x2159) (x816 x2165) (x1042 x2165))) (x1765 x2165)))
(assert (x49 x208))
(assert (x49 x1036))
(assert (x49 x2331))
(assert (= (or x778 x1574) x121))
(assert (x49 x1571))
(assert (x49 x351))
(assert (= (=> (and (= x1008 (> x1323 0)) (= (x959 (- x1573 1)) x1323)) (and (=> (not x1008) x818) (=> x1008 x256))) x1341))
(assert (x49 x352))
(assert (x2258 x398))
(assert (x49 x1119))
(assert (= (x1902 (x472 x500)) x500))
(assert (x805 x2006 x1284))
(assert (= (+ 1 (x1902 x2259)) (x1902 (x1101 x2259 1))))
(assert (= x1853 (and x347 x578)))
(assert (= (and (not x1951) x1906) x1169))
(assert (x49 x1139))
(assert (= (x295 (- x1128 x1185)) (x1489 (- x1128 x1185))))
(assert (x2258 x1227))
(assert (= (x2148 x1021) (ite x1253 (ite (and x2033 x574) (x1595 x1021) (x1889 x1021)) (x1889 x1021))))
(assert (x2258 x526))
(assert (=> (<= x1227 10000) (= (x472 x1227) (x28 x1227))))
(assert (x49 x150))
(assert (x49 x2153))
(assert (x49 x2269))
(assert (=> (<= x330 10000) (= (x28 x330) (x472 x330))))
(assert (= (x1902 (x472 x479)) x479))
(assert (= (x2031 (- x2173 x1136)) (x1578 (- x2173 x1136))))
(assert (= (x1902 (x28 826074471)) 826074471))
(assert (x49 x1756))
(assert (x49 x658))
(assert (x49 x1800))
(assert (=> (<= x1054 10000) (= (x28 x1054) (x472 x1054))))
(assert (x49 x936))
(assert (x49 x741))
(assert (= x2282 (x1902 (x472 x2282))))
(assert (= (or (and (not x1348) x820) x2059) x1538))
(assert (x49 x1234))
(assert (= (=> (and (= (>= x216 0) x1270) (= (x381 (x472 x1046)) x2271) (= x346 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2271)) (= x471 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1488 (x472 x1046)))) (= (x381 (x472 274184521717934524641157099916833587206)) x216) x471 x346 (= x1851 (x381 (x472 274184521717934524641157099916833587206))) (= x1319 x1509) (= x160 (= x1046 274184521717934524641157099916833587218)) x1270 (= x945 (x1488 (x472 x1046)))) (and (=> (and (= (x959 (- x1234 4)) x534) (= x1217 (x959 (- x2130 x1))) (<= 0 x1857) (= (< x2130 x1009) x393) (= x2096 274184521717934524641157099916833587206) (not (= x1429 826074471)) (= x609 x1857) (not (= x1429 1889567281)) (= x1857 (x498 x1021)) (= (x1112 (x472 x906) (x28 1) 0) x1021) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1009 x1857)) (= (>= (+ x1857 x1009) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x807) (= (x1112 (x472 x906) (x28 1) 0) x865) (= x1 x424) (= 32 x130) (= x1429 2835717307) (not (< x1429 649617121)) (not (= x1429 649617121)) (not (> 4 x1234)) (= x1788 (x618 (x472 274184521717934524641157099916833587218))) (= x954 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not x999) (= x906 x2004) (= 1 x212) (not x393) (= x2001 x906) (= (or (and (> 64 x534) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x534))) (> x534 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x999) (<= x1857 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2514000705 x1429)) (= x1509 x1234) (= x77 (< x2130 x1)) (>= x2130 0) (<= x906 1461501637330902918203684832716283019655932542975) (= x665 274184521717934524641157099916833587206) (not x807) (= 68 x1234) (= x1009 x2298) (not x77) x160 (= x2120 (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0)) (> x1788 0) (= x1 x1009) (= (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0) x2111) (= (+ x609 x2298) x2063) (= x2130 (x2148 x2111)) (<= x2130 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1441) (=> (not x160) x1966))) x1670))
(assert (=> (<= x2100 10000) (= (x472 x2100) (x28 x2100))))
(assert (x49 x1724))
(assert (x2258 x2256))
(assert (x49 x280))
(assert (x49 x1553))
(assert (x49 x1053))
(assert (= (+ 1 (x1902 x864)) (x1902 (x1101 x864 1))))
(assert (= (x1902 (x472 x726)) x726))
(assert (= x347 (and x1107 x1412)))
(assert (= (x1902 (x28 635128645)) 635128645))
(assert (x49 x2142))
(assert (x49 x1432))
(assert (x2258 x1114))
(assert (x49 x707))
(assert (= (or (and (not x1449) x209) (and x1152 (not x1410))) x125))
(assert (x2258 x479))
(assert (x49 x254))
(assert (x11 x952 x2169))
(assert (= (x1489 (- 132 x1185)) (x295 (- 132 x1185))))
(assert (x2258 x1503))
(assert (= (x229 (- x1417 x1133)) (x1040 (- x1417 x1133))))
(assert (x2258 x1573))
(assert (x49 x1189))
(assert (x170 x2306))
(assert (= 0 (x1801 x998)))
(assert (=> (>= 10000 x34) (= (x28 x34) (x472 x34))))
(assert (= (x1902 (x472 x319)) x319))
(assert (= x1568 (x1902 (x472 x1568))))
(assert (x49 x532))
(assert (x49 x1972))
(assert (x49 x2267))
(assert (= (x1902 (x28 2211524764)) 2211524764))
(assert (x49 x2125))
(assert (= (x28 759532456) (x472 759532456)))
(assert (= (x472 2835717307) (x28 2835717307)))
(assert (= (and x555 x76) x495))
(assert (x49 x1503))
(assert (x49 x680))
(assert (= x1763 x868))
(assert (x49 x139))
(assert (x49 x1798))
(assert (=> (>= 10000 x190) (= (x28 x190) (x472 x190))))
(assert (=> (>= 10000 x1032) (= (x472 x1032) (x28 x1032))))
(assert (x49 x1023))
(assert (x49 x947))
(assert (x2258 x50))
(assert (x49 x1512))
(assert (x49 x2215))
(assert (x49 x69))
(assert (x49 x310))
(assert (=> (>= 10000 x2006) (= (x28 x2006) (x472 x2006))))
(assert (x49 x2058))
(assert (x49 x1324))
(assert (x49 x1722))
(assert (x49 x1244))
(assert (= 0 (x1879 x204)))
(assert (x49 x1984))
(assert (= x348 (x1902 (x472 x348))))
(assert (=> (<= x974 10000) (= (x472 x974) (x28 x974))))
(assert (x1340 x621 x2002))
(assert (x49 x595))
(assert (= (x28 274184521717934524641157099916833587214) (x472 274184521717934524641157099916833587214)))
(assert (x49 x594))
(assert (x49 x1554))
(assert (= (x1902 (x472 x1166)) x1166))
(assert (x49 x2090))
(assert (x49 x921))
(assert (= (x1902 (x472 x1502)) x1502))
(assert (x2258 x723))
(assert (= (and x209 x1449) x1281))
(assert (= x1470 (=> (and (= (= 0 x1916) x2131) (or (and (= 0 x1098) x2131 (= x1511 0)) (and (= x1826 (x1112 (x472 x1990) x476 0)) (= (x1112 (x472 x1916) (x28 10) 0) x476) (<= x1797 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1646 (= x1797 0)) (<= 0 x1797) (or (and (= 0 x1098) x1646 (= 0 x1511)) (and (= x1797 x1098) (= 1 x1511) (not x1646))) (not x2131) (= (x1375 x1826) x1797)))) x2168)))
(assert (x49 x1693))
(assert (=> (>= 10000 x1158) (= (x28 x1158) (x472 x1158))))
(assert (=> (<= x1166 10000) (= (x28 x1166) (x472 x1166))))
(assert (x49 x1790))
(assert (= (x1578 (- x1128 x1136)) (x2031 (- x1128 x1136))))
(assert (=> (<= x1174 10000) (= (x472 x1174) (x28 x1174))))
(assert (x49 x1808))
(assert (x49 x2117))
(assert (x49 x146))
(assert (= (or (and x38 (not x681)) x1746) x67))
(assert (x49 x1793))
(assert (x49 x1225))
(assert (x49 x237))
(assert (=> (<= x726 10000) (= (x28 x726) (x472 x726))))
(assert (x49 x2063))
(assert (x2258 274184521717934524641157099916833587206))
(assert (= (x1902 (x472 x1897)) x1897))
(assert (x49 x156))
(assert (x49 x1083))
(assert (x49 x1162))
(assert (x49 x1188))
(assert (= x1916 (x1902 (x472 x1916))))
(assert (x49 x837))
(assert (x49 x853))
(assert (x49 x1220))
(assert (x2258 x963))
(assert (= (x1902 (x472 x1581)) x1581))
(assert (x49 x245))
(assert (x49 x499))
(assert (x49 x1219))
(assert (x2258 x190))
(assert (x49 x2173))
(assert (x2258 x1180))
(assert (= (or (and x2264 x1639) x1492) x1969))
(assert (x49 x313))
(assert (x49 x1163))
(assert (x49 x391))
(assert (=> (>= 10000 x1557) (= (x28 x1557) (x472 x1557))))
(assert (= x380 (and x2081 (not x184))))
(assert (x49 x1105))
(assert (x49 x103))
(assert (x49 x872))
(assert (= (=> (and (= x25 x1135) (= x240 x1581) (= x317 x830) (= x2058 x458)) x359) x45))
(assert (x49 x2270))
(assert (x2258 x152))
(assert (= (x1902 (x28 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x2258 x1158))
(assert (x49 x2138))
(assert (= (x1489 (- x148 x1185)) (x295 (- x148 x1185))))
(assert (x49 x2236))
(assert (x49 x731))
(assert (x805 x458 x1328))
(assert (= (x1902 (x1101 x1816 1)) (+ 1 (x1902 x1816))))
(assert (x49 x224))
(assert (x49 x83))
(assert (x49 x2246))
(assert (x49 x1819))
(assert (x49 x1020))
(assert (= x329 (=> (and (= x1242 (x1112 (x472 x576) x1207 0)) (= x1866 (x1186 x2062)) (= x1207 (x1112 (x472 x550) (x28 7) 0)) (< x1125 911411945) (not (= 468353030 x1125)) (= 759532456 x1125) (>= x1866 0) (= x1204 (x618 (x472 274184521717934524641157099916833587206))) (< 0 x1204) (>= 1461501637330902918203684832716283019655932542975 x576) (not (= 635128645 x1125)) (not (< x1125 468353030)) (< x1125 2293535753) (>= 1461501637330902918203684832716283019655932542975 x50) (= x1866 x1316) (= (x1112 (x472 x50) x1242 0) x2062) (<= x1866 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (> 1461501637330902918203684832716283019655932542976 x915) (= x935 x2058) (= 0 x1385) x1435 x617 (= x1053 x1285) (= x492 2) (= x1334 (x1705 0)) x436 (= x583 32) (= x37 x2058) (= x1106 (= x935 x915)) (= 0 x543) (= x2006 x1135) (= 32 x1044) (= (= x1762 x2270) x1515) (= x2135 x1182) (= x1554 x240) (= x1809 x337) (= x1143 x286) (= (= x2135 (mod (* x1121 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x292) (= x1809 x1213) x1697 (= (x1556 0) x1938) (= x1121 x30) x292 x1475 (= (= x1743 x1290) x1711) (= x2178 (= x1393 2)) (= x208 x1143) (= x516 x2297) x1106 (= x674 x1143) (= x997 x2057) (= x2142 x1907) (= (x185 0) x1546) (= (= (mod (* 32 x1907) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1053) x436) (= x1907 x831) (= x1893 274184521717934524641157099916833587214) x1515 x1501 (= x317 x1725) (= x445 x1053) (= x2058 x1238) (> 1461501637330902918203684832716283019655932542976 x1762) x1460 (= x475 (x1082 32)) (= x240 x32) (= (< 0 x263) x648) (= x227 2) (> 1461501637330902918203684832716283019655932542976 x1546) (= x2301 (x47 32)) x86 (= 0 x1532) x917 (= x661 32) (= x407 (= 2 x208)) (= (x1148 32) x915) (= x617 (= (mod (* x1143 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1809)) (< x2301 1461501637330902918203684832716283019655932542976) (= 32 x1819) (= x2270 x2058) x407 (= x1135 x911) (= x1316 x263) (= x997 x622) x1663 (= 0 x2174) (= (= x2301 x911) x1475) (= (x14 0) x1762) (= 2 x373) (= x1876 x1135) (= (= x842 2) x1697) (= x516 x2098) x1711 (= x317 x1557) (= (= x1876 x1938) x1460) x2248 (= (= x1546 x1554) x86) (= x1121 x1420) (= x1663 (= 274184521717934524641157099916833587214 x1238)) (= (= x1334 x1725) x1435) (= (x402 32) x1743) (= x1501 (= (mod (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x516)) (= x1121 x1393) (> 1461501637330902918203684832716283019655932542976 x475) (= x842 x997) (= x1907 x146) (= (= x146 2) x917) (= x2135 x2359) (= x1808 x240) (= x2248 (= x475 x32)) (= 0 x177) x648 x2178 (= x1290 x317) (= x2330 2) (< x1938 1461501637330902918203684832716283019655932542976)) x345))))
(assert (= x1833 (=> (= (= 274184521717934524641157099916833587214 x1677) x2193) (and (=> (not x2193) x920) (=> (and (= x628 x2100) (not x1610) (= (x1582 x528) x1251) (= x2149 x1930) (= x1716 274184521717934524641157099916833587206) (= x389 (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0)) (= x528 (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1050) (= x1090 (x1112 (x472 x2100) (x28 1) 0)) (= x1756 1) (= x46 (> x677 x1251)) (= x2352 (+ x585 x1092)) (>= 1461501637330902918203684832716283019655932542975 x628) (= x1335 x1736) (= x928 x677) (not (= 2514000705 x2140)) (= x53 (x959 (- x2149 4))) (= 68 x2149) (not (> 649617121 x2140)) (not x852) (not (= 826074471 x2140)) (< (+ x1661 x928) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< 0 x1972) (not x46) (= (x2157 x1090) x1661) (= x1610 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x928 x1661))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1661) (= x1229 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x53)) (> 64 x53)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x53))) (not (= 1889567281 x2140)) x2193 (= x1972 (x618 (x472 274184521717934524641157099916833587214))) (<= 0 x1661) (= x1798 32) (<= x1251 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1251) (= x852 (< x1251 x928)) (= 2835717307 x2140) (= (x1112 (x472 x2100) (x28 1) 0) x419) (not (= x2140 649617121)) (= (x959 (- x1251 x677)) x260) (= x1661 x585) (= x1547 x677) (not x1229) (= x928 x1092) (not (> 4 x2149)) (= 274184521717934524641157099916833587206 x1279)) x429)))))
(assert (= x1158 (x1902 (x472 x1158))))
(assert (x170 x952))
(assert (x49 x1699))
(assert (x49 x1573))
(assert (= (x229 (- x2173 x1133)) (x1040 (- x2173 x1133))))
(assert (=> (>= 10000 x922) (= (x28 x922) (x472 x922))))
(assert (x49 x1936))
(assert (x49 x1094))
(assert (x49 x178))
(assert (= (or (and x1184 (not x2046)) (and (not x76) x555)) x1574))
(assert (x49 x2084))
(assert (= (x1890 x1269) 0))
(assert (= x2264 x67))
(assert (= (=> (= (> x1996 0) x1544) (and (=> x1544 x1198) (=> (not x1544) x705))) x2283))
(assert (= (x472 18446744073709551615) (x28 18446744073709551615)))
(assert (x49 x1713))
(assert (x49 x984))
(assert (= x1379 x1986))
(assert (= x901 (x1902 (x472 x901))))
(assert (= x627 (x1902 (x472 x627))))
(assert (= (x1902 (x472 x110)) x110))
(assert (x2258 x1130))
(assert (= (=> (and (>= x769 0) (= x766 (x1112 (x472 x2100) x202 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x769) (= x202 (x1112 (x472 x1990) x1533 0)) (= x1533 (x1112 (x472 x1573) (x28 7) 0)) (= (x1186 x766) x769) (= x898 (= x769 0))) (and (=> (and (not x898) (= x1216 x1573)) x368) (=> x898 x1430))) x269))
(assert (x49 x1031))
(assert (= x553 (and x657 (not x1356))))
(assert (x49 x1109))
(assert (= (and x1043 x2042) x1542))
(assert (= (x1902 (x472 x723)) x723))
(assert (= (x1902 (x472 x602)) x602))
(assert (= x1848 (x1902 (x472 x1848))))
(assert (x49 x123))
(assert (x49 x2314))
(assert (x49 x1543))
(assert (x49 x2149))
(assert (x49 x893))
(assert (= (ite x1253 (ite (and x2033 x574) (x1582 x1212) (x461 x1212)) (x1582 x1212)) (x763 x1212)))
(assert (x49 x1519))
(assert (x49 x516))
(assert (x2258 x33))
(assert (x49 x1656))
(assert (x49 x1991))
(assert (x49 x1447))
(assert (= 0 (x1879 x856)))
(assert (x49 x1385))
(assert (x49 x1549))
(assert (x49 x550))
(assert (x49 x2205))
(assert (x49 x371))
(assert (x49 x303))
(assert (x2258 x601))
(assert (=> (>= 10000 x966) (= (x472 x966) (x28 x966))))
(assert (x49 x1846))
(assert (x2258 x1557))
(assert (x49 x2002))
(assert (x49 x830))
(assert (x170 x25))
(assert (x49 x1121))
(assert (= (and x1063 x1277) x2042))
(assert (= (=> (and (= (= 0 x548) x1802) (or (and (= (x718 1461501637330902918203684832716283019655932542975 x1808) x1988) (= x1774 (x1112 (x472 x1988) x1486 0)) (= (x718 1461501637330902918203684832716283019655932542975 x2006) x1693) (= (x1112 (x472 x1557) (x28 9) 0) x164) (= (x1112 (x472 x1693) x164 0) x1486) (not x1802)) x1802) (= (= x1815 0) x2220) (or (and (= x560 (x718 1461501637330902918203684832716283019655932542975 x1808)) (= x2016 (x1112 (x472 x560) x2074 0)) x2220 (= x1500 (x718 1461501637330902918203684832716283019655932542975 x2006)) (= 128 x975) (= (x1112 (x472 x1500) x1609 0) x2074) (= x1609 (x1112 (x472 x1557) (x28 7) 0))) (and (= (x1101 x1841 1) x2305) (= x246 (x1186 x1759)) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1946) (= x573 x1946) (not x1694) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x519 x1946)) (= x2323 (x1112 (x472 x398) x1758 0)) (= x1172 (x1112 (x472 x117) x1414 0)) (< (* x2358 x1815) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x117 (x718 1461501637330902918203684832716283019655932542975 x1808)) (= (* x2358 x1815) x1605) (= x519 x2012) (<= 0 x1946) (= (x1112 (x472 x1557) (x28 7) 0) x1680) (= x190 (x718 1461501637330902918203684832716283019655932542975 x2006)) (= (+ x573 x2012) x1039) (= x1605 x519) (= x1758 (x1112 (x472 x1557) (x28 3) 0)) (= x975 192) (= (x718 1461501637330902918203684832716283019655932542975 x2006) x398) (= (x718 1461501637330902918203684832716283019655932542975 x1808) x396) (= x1414 (x1112 (x472 x190) x1680 0)) (= x1946 (x816 x688)) (= (x1112 (x472 x396) x2323 0) x688)) (and x1694 (= x1919 (x1112 (x472 x1502) x217 0)) (= x217 (x1112 (x472 x1557) (x28 7) 0)) (= x1502 (x718 1461501637330902918203684832716283019655932542975 x2006)) (= x169 (x1112 (x472 x1097) x1919 0)) (= 192 x975) (= x1097 (x718 1461501637330902918203684832716283019655932542975 x1808)))) (= (x1112 (x472 x922) x944 0) x1759) (= (x718 1461501637330902918203684832716283019655932542975 x2006) x726) (= (x718 1461501637330902918203684832716283019655932542975 x1808) x922) (<= 0 x2056) (= x2032 (x1112 (x472 x1557) (x28 7) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x246) (or (and (= x2320 (x1483 160)) (or (and (not (> x246 x1640)) (not x1311) (= x841 604800) (= x2302 (ite (< x2055 604800) x2055 604800)) (= x2358 x2302) (= (x959 (- x1640 x246)) x2055)) (and (= (x1408 128) x1931) x1311 (not (> x1931 x1640)) (= x1440 x2358) (= (x959 (- x1640 x1931)) x1440))) x1123 (= (= 0 x246) x1311) (= x1307 (< x2320 x1188)) (or (and (= x1433 x1640) x1307 (= (x1483 160) x1433)) (and (not x1307) (= x1640 x1188)))) (and (= 0 x2358) (not x1123))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2308) (>= x246 0) (= (x1112 (x472 x726) x2032 0) x944) (= x1694 (= 0 x2358)) (not x2220) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2056) (= x2308 (x740 x1841)) (= x1841 (x1112 (x472 x1557) (x28 1) 0)) (= (< x246 x2036) x1123) (= (x1483 160) x2036) (<= 0 x2308) (= x2056 (x2023 x2305))))) x1761) x736))
(assert (=> (>= 10000 x2052) (= (x472 x2052) (x28 x2052))))
(assert (= x1174 (x1902 (x472 x1174))))
(assert (x49 x1054))
(assert (= x1666 (x1902 (x472 x1666))))
(assert (x49 x1247))
(assert (x2258 x2331))
(assert (x49 x1100))
(assert (x49 x363))
(assert (x49 x214))
(assert (= x1728 (x1902 (x472 x1728))))
(assert (x49 x250))
(assert (= (x1902 (x28 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (x49 x100))
(assert (x49 x1014))
(assert (x2258 x1032))
(assert (= x673 (and x2033 (not x574))))
(assert (x1340 x2306 x2299))
(assert (x49 x12))
(assert (x49 x1983))
(assert (= (and x1799 x1548) x242))
(assert (x49 x1442))
(assert (= (and x1778 x1091) x555))
(assert (x49 x508))
(assert (x2258 x1650))
(assert (=> (<= x1988 10000) (= (x472 x1988) (x28 x1988))))
(assert (= (x1902 (x472 x34)) x34))
(assert (x49 x2144))
(assert (=> (<= x712 10000) (= (x28 x712) (x472 x712))))
(assert (= (=> (= (< 0 x830) x323) (and (=> (not x323) x646) (=> x323 x1600))) x2097))
(assert (=> (<= x2310 10000) (= (x28 x2310) (x472 x2310))))
(assert (= x601 (x1902 (x472 x601))))
(assert (x49 x2335))
(assert (x49 x1913))
(assert (= x1990 (x1902 (x472 x1990))))
(assert (x49 x1745))
(assert (x49 x1387))
(assert (x49 x929))
(assert (x49 x1238))
(assert (x49 x2254))
(assert (= x1538 x1422))
(assert (= (and x611 x1542) x1507))
(assert (x49 x1406))
(assert (x49 x1136))
(assert (= x1129 (x1902 (x472 x1129))))
(assert (x49 x1858))
(assert (x2258 x1500))
(assert (= (x1902 (x472 x1054)) x1054))
(assert (= x803 (x1902 (x472 x803))))
(assert (= x226 (=> (and (= 2258409472 x1120) (not (= x1120 2061678023)) (not (= x1120 2211524764)) (< 0 x83) (not (= x1120 1986467848)) (> 2293535753 x1120) (= x1597 (x1112 (x472 x2314) (x28 6) 0)) (not (= 1968616202 x1120)) (>= x1948 0) (= x83 (x618 (x472 274184521717934524641157099916833587206))) (not (< x1120 911411945)) (not (> 1968616202 x1120)) (= x1948 (x1321 x1872)) (= (x1112 (x472 x348) x1597 0) x1872) (= x1948 x1358) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1948) (<= x348 1461501637330902918203684832716283019655932542975)) (=> (and (= x550 x317) (= x1135 x576) (= 0 x1011) x29 (= x50 x240) (= x936 x1358) (= (< 0 x936) x29)) x329))))
(assert (x49 x1474))
(assert (x2258 x2223))
(assert (x49 x1856))
(assert (= x2263 (=> (and (= (= x2310 0) x2092) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x783) (or (and (= x644 x783) (= 1 x1015) (not x1593)) (and (= x644 0) (= 0 x1015) x1593)) (<= 0 x783) (= (x1112 (x472 x2310) (x28 10) 0) x1785) (not x2092) (= (= x783 0) x1593) (= x783 (x2183 x198)) (= (x1112 (x472 x2275) x1785 0) x198)) (and (= x644 0) x2092 (= x1015 0)))) x2251)))
(assert (x49 x2006))
(assert (x2258 x2282))
(assert (=> (>= 10000 x901) (= (x28 x901) (x472 x901))))
(assert (= x1117 (=> (and (= (>= x984 0) x1845) x1171 (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2087 (x472 x822))) x1171) (= x984 (x527 (x472 274184521717934524641157099916833587206))) (= (< x437 115792089237316195423570985008687907853269984665640564039457584007913129639936) x163) x1845 (= (= 274184521717934524641157099916833587218 x822) x574) (= x762 x854) (= x64 (x527 (x472 274184521717934524641157099916833587206))) (= (x527 (x472 x822)) x437) (= (x2087 (x472 x822)) x151) x163) (and (=> (not x574) x1956) (=> (and (= x949 x1453) (= (x1112 (x472 x1130) (x28 1) 0) x2075) (= x2260 x1924) (>= x931 0) (= x1089 68) (= x2232 32) (= (x1112 (x472 x1130) (x28 1) 0) x1584) (<= 0 x1530) (= x1530 (x1403 x1584)) (not x2013) (= (< x931 x949) x645) (> x1192 0) (= x669 1) (not (= 2514000705 x884)) (not (= x884 1889567281)) (= x2068 (or (> x1474 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1474) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1474))))) (= x1130 x732) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x306) (= x762 x1089) (= x1962 (x959 (- x931 x2260))) (= x1474 (x959 (- x1089 4))) (not (= 649617121 x884)) (= x2089 (+ x1453 x1494)) (= x1955 (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0)) (>= 1461501637330902918203684832716283019655932542975 x1130) (not (> 649617121 x884)) (not x2068) (= x1530 x1494) (not x645) (not x1493) (= x2260 x949) x574 (= 274184521717934524641157099916833587206 x2300) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1530 x949)) x2013) (< (+ x949 x1530) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= 826074471 x884)) (= x1130 x2144) (= x1941 (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0)) (not (> 4 x1089)) (= 274184521717934524641157099916833587206 x13) (= (x1889 x1955) x931) (= (> x2260 x931) x1493) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1530) (= x1192 (x618 (x472 274184521717934524641157099916833587218))) (<= x931 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x884 2835717307)) x1621)))))
(assert (x49 x570))
(assert (=> (>= 10000 x2331) (= (x472 x2331) (x28 x2331))))
(assert (x49 x1097))
(assert (= (x28 26959946667150639794667015087019630673637144422540572481103610249215) (x472 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= 2514000705 (x1902 (x28 2514000705))))
(assert (= x249 x2329))
(assert (x49 x1039))
(assert (x49 x1182))
(assert (= (=> (and (= (x2023 x314) x1506) (= x1464 (x1112 (x472 x1996) (x28 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x849) (= x2332 (x600 x1478)) (= (x2262 x341) x2086) (= (x2192 (+ 32 x2269)) x341) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2332) (= x2313 (x1112 (x472 x1996) (x28 1) 0)) (= (= 0 x1015) x344) (or (and (not x1575) (= x886 0)) (and (or (and (= (x959 (- x2229 x2332)) x1984) (= x416 x886) (= 604800 x1124) (= (ite (< x1984 604800) x1984 604800) x416) (not x1729) (not (< x2229 x2332))) (and (= x102 x886) (= (x956 x2269) x2067) x1729 (= (x959 (- x2229 x2067)) x102) (not (< x2229 x2067)))) (= x1452 (x2262 x341)) (= (= x2332 0) x1729) (or (and (= x2229 x1188) (not x1665)) (and x1665 (= x150 (x2262 x341)) (= x2229 x150))) x1575 (= (< x1452 x1188) x1665))) (>= x849 0) (<= 0 x1506) (= (x1101 x2313 1) x314) (= x1575 (< x2332 x2086)) (= x849 (x740 x2313)) (= (= x886 0) x1131) (<= x1506 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or x1131 (and (< (* x886 x644) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (+ x2050 x1254) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1685 (x1112 (x472 x1996) (x28 5) 0)) (= x375 (* x644 x886)) (= x1254 x1275) (= x1254 (x1295 x140)) (= x1147 x2050) (= x140 (x1112 (x472 x2275) x1685 0)) (= x2311 (+ x1275 x1147)) (<= x1254 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x375 x2050) (not x1131) (<= 0 x1254))) (<= 0 x2332) (= (x1112 (x472 x2275) x1464 0) x1478) (= (x2192 (+ x2269 64)) x1382)) x597) x2251))
(assert (x49 x832))
(assert (=> (<= x560 10000) (= (x472 x560) (x28 x560))))
(assert (x49 x980))
(assert (x49 x867))
(assert (= x1379 (or x788 (and (not x1063) x1277))))
(assert (x49 x526))
(assert (x49 x922))
(assert (x49 x1124))
(assert (x49 x455))
(assert (x49 x2245))
(assert (= 274184521717934524641157099916833587218 (x1902 (x28 274184521717934524641157099916833587218))))
(assert (x49 x583))
(assert (x2258 x298))
(assert (x49 x278))
(assert (x49 x1585))
(assert (x49 x899))
(assert (x49 x2171))
(assert (x49 x2191))
(assert (= (=> (and (= (x1052 (x472 274184521717934524641157099916833587206)) x2237) (not (= 0 x669)) (or (and (not x1510) (= (x2192 (+ 96 x1100)) x358) (= x1744 x672)) (and (= x1744 96) x1510)) x514 (= x1056 (x1103 (x472 x822))) (= (x255 x1744) x1682) (= x1830 (> x1682 0)) (or (and (= x862 (not x113)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2117) true) (> 32 x2117)) (> x2117 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2182 (x120 x433)) (= (= 0 x2182) x113) (= x883 x2182) (= x433 (x2192 (+ x1744 32))) (= (ite x862 1 0) x883) x1830 (> x2182 0) (= x2117 (x255 x1744))) (not x1830)) (= x1510 (= x2232 0)) (= x514 (< (x1052 (x472 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x45) x1621))
(assert (= x298 (x1902 (x472 x298))))
(assert (x49 x262))
(assert (x49 x319))
(assert (x1340 x2076 x331))
(assert (x49 x95))
(assert (x49 x2330))
(assert (= x646 (=> (= 0 x1158) x1012)))
(assert (x49 x1565))
(assert (x11 x1793 x972))
(assert (= x1274 (=> (and (= (x1112 (x472 x1557) (x28 6) 0) x1928) (>= x364 0) (= x364 (x1321 x82)) (= (x718 1461501637330902918203684832716283019655932542975 x2006) x2267) (= (= x364 0) x1412) (= x82 (x1112 (x472 x2267) x1928 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x364)) (and (=> (and (= x1557 x2217) (not x1412)) x1498) (=> x1412 x802)))))
(assert (x49 x1942))
(assert (= (and x773 x1891) x1906))
(assert (= (or (and x1243 x868) (and x1302 x874)) x1260))
(assert (x49 x1622))
(assert (x2258 x1645))
(assert (= 0 (x31 x433)))
(assert (x49 x398))
(assert (x2258 x147))
(assert (= (x1902 (x472 x396)) x396))
(assert (x2258 x1581))
(assert (x2258 x1555))
(assert (x49 x1707))
(assert (x49 x215))
(assert (= (x1902 (x28 2061678023)) 2061678023))
(assert (x49 x1840))
(assert (x49 x238))
(assert (=> (>= 10000 x798) (= (x28 x798) (x472 x798))))
(assert (x49 x367))
(assert (x49 x2237))
(assert (x170 x1808))
(assert (= x1901 (and x820 x1348)))
(assert (x49 x479))
(assert (= (=> (= x2310 0) x2263) x1536))
(assert (x49 x2067))
(assert (x49 x884))
(assert (x49 x1128))
(assert (x49 x84))
(assert (x49 x1351))
(assert (x49 x1407))
(assert (=> (>= 10000 x1502) (= (x472 x1502) (x28 x1502))))
(assert (= (x1902 (x472 x922)) x922))
(assert (= x1763 (or x962 (and x1891 (not x773)) (and (not x685) x411))))
(assert (x49 x1429))
(assert (x49 x2231))
(assert (x49 x2354))
(assert (x49 x529))
(assert (= (x1902 (x1101 x2152 1)) (+ (x1902 x2152) 1)))
(assert (= (=> (= 0 x298) x315) x754))
(assert (x49 x1114))
(assert (x49 x2008))
(assert (x49 x2260))
(assert (x49 x630))
(assert (x49 x1287))
(assert (= x765 true))
(assert (x49 x1944))
(assert (x49 x1423))
(assert (= (x1902 (x472 x1963)) x1963))
(assert (= (and x195 x1169) x2040))
(assert (x49 x543))
(assert (x2258 x348))
(assert (= (x28 604800) (x472 604800)))
(assert (x2258 x906))
(assert (x49 x248))
(assert (= (and (not x850) x2209) x489))
(assert (x49 x2302))
(assert (x170 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x49 x1192))
(assert (x49 x1174))
(assert (x49 x1602))
(assert (= (x1902 (x472 x1652)) x1652))
(assert (x49 x1345))
(assert (x49 x1180))
(assert (x49 x2227))
(assert (x49 x769))
(assert (x49 x404))
(assert (x49 x2086))
(assert (x2258 x1174))
(assert (= x1430 (=> (and (= (> x2331 0) x1993) (= x2331 (x959 (- x1573 1)))) (and (=> x1993 x267) (=> (not x1993) x1322)))))
(assert (x49 x2100))
(assert (x49 x2299))
(assert (x49 x1333))
(assert (x49 x2301))
(assert (=> (>= 10000 x906) (= (x472 x906) (x28 x906))))
(assert (x49 x928))
(assert (x49 x388))
(assert (x49 x1615))
(assert (x49 x1854))
(assert (x49 x1017))
(assert (= x1260 x1276))
(assert (= x1985 (x1902 (x472 x1985))))
(assert (x49 x90))
(assert (x2258 x2227))
(assert (= x383 (and x489 (not x72))))
(assert (x49 x1907))
(assert (x49 x475))
(assert (x49 x1134))
(assert (= (x229 (- x1189 x1133)) (x1040 (- x1189 x1133))))
(assert (= 0 (x2208 x1615)))
(assert (= (x1902 (x28 87118632)) 87118632))
(assert (x49 x675))
(assert (= (x1040 (- x608 x1133)) (x229 (- x608 x1133))))
(assert (=> (<= x1808 10000) (= (x472 x1808) (x28 x1808))))
(assert (x2258 x1097))
(assert (= (and x490 (not x1679)) x2099))
(assert (x49 x1546))
(assert (x49 x1439))
(assert (x2258 x1764))
(assert (=> (<= x1666 10000) (= (x472 x1666) (x28 x1666))))
(assert (x49 x1190))
(assert (= (and (not x1249) x1422) x2033))
(assert (x49 x639))
(assert (x49 x2035))
(assert (x49 x241))
(assert (=> (<= x2267 10000) (= (x28 x2267) (x472 x2267))))
(assert (= (x28 911411945) (x472 911411945)))
(assert (= (x1902 (x472 x1032)) x1032))
(assert (=> (>= 10000 x2294) (= (x28 x2294) (x472 x2294))))
(assert (x49 x849))
(assert (x49 x1935))
(assert (x49 x758))
(assert (x49 x151))
(assert (x49 x504))
(assert (x49 x1185))
(assert (x49 x1256))
(assert (x49 x854))
(assert (x49 x412))
(assert (x49 x154))
(assert (x49 x212))
(assert (x2258 x1323))
(assert (=> (<= x1130 10000) (= (x472 x1130) (x28 x1130))))
(assert (= (=> (= 0 x1985) x2160) x1322))
(assert (x49 x576))
(assert (= (x579 0) (x97 0)))
(assert (x49 x932))
(assert (x49 x1037))
(assert (= (=> (and (= x1389 (x101 x2126)) (> x892 1) (= (x1112 (x472 x1996) (x28 7) 0) x333) (> x205 1) (= (x1112 (x472 x1389) x568 0) x1667) (= (x2192 (+ 64 x1128)) x2126) (= x2115 (x786 x1667)) (<= 0 x2115) (= x530 (> x2115 0)) (= x2275 (x101 x608)) (> x1014 x1996) (= (x101 x148) x526) (= x148 (x2192 (+ 64 x2173))) (= x1996 (x101 196)) (>= 1461501637330902918203684832716283019655932542975 x2275) (>= x1014 0) (<= x2115 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1014 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1389) (> x1864 1) (= x568 (x1112 (x472 x2275) x333 0)) (>= 1461501637330902918203684832716283019655932542975 x526) (< 1 x700) (= (x2192 (+ 64 x2261)) x608)) (and (=> (and (= (x1112 (x472 x1996) (x28 9) 0) x1071) (= x2171 x741) (<= 0 x741) (= x1643 0) (= (x1112 (x472 x1389) x562 0) x1030) (= (x2238 x1030) x741) (= x562 (x1112 (x472 x2275) x1071 0)) x530 (<= x741 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x2175) (=> (not x530) x2283))) x2024))
(assert (x49 x117))
(assert (x49 x2089))
(assert (x49 x27))
(assert (= (and x1708 x1712) x354))
(assert (x2258 x1389))
(assert (x49 x492))
(assert (=> (<= x529 10000) (= (x472 x529) (x28 x529))))
(assert (=> (<= x2314 10000) (= (x472 x2314) (x28 x2314))))
(assert (= (x1210 x1742) (ite (and x1538 (not x651)) (x861 x1742) (x2085 x1742))))
(assert (= x60 (and x2264 (not x1639))))
(assert (=> (>= 10000 x24) (= (x28 x24) (x472 x24))))
(assert (=> (<= x1352 10000) (= (x28 x1352) (x472 x1352))))
(assert (= (=> (and (= x245 x1303) (= x697 (= x307 x1606)) (= x245 x307) (= x1266 x1606)) x697) x2296))
(assert (=> (>= 10000 x1146) (= (x472 x1146) (x28 x1146))))
(assert (= 0 (x1801 x1855)))
(assert (= x1500 (x1902 (x472 x1500))))
(assert (x49 x91))
(assert (x170 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x49 x1425))
(assert (x49 x413))
(assert (= x2294 (x1902 (x472 x2294))))
(assert (x49 x1015))
(assert (= (=> (and (< x1656 911411945) (> 2293535753 x1656) (= x1656 468353030) (<= x1764 1461501637330902918203684832716283019655932542975) (= x592 128) (< 0 x1789) (<= x2344 1461501637330902918203684832716283019655932542975) (not (< x1656 468353030)) (= x1789 (x618 (x472 274184521717934524641157099916833587206))) (= (= 274184521717934524641157099916833587218 x2344) x985)) (and (=> (not x985) x2322) (=> (and (not x309) (>= 1461501637330902918203684832716283019655932542975 x2125) (not (= 649617121 x1252)) (= 1889567281 x1252) (= x566 1) (= (x959 (- x1345 4)) x1994) (= x1345 36) (>= x2295 0) (not (= 826074471 x1252)) (= x749 32) (= (or (and (> 32 x1994) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1994))) (> x1994 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x309) (not (> 649617121 x1252)) (= x1764 x2125) (= x1436 50942633119752846454219349998365661925608737367104304655302372697894809501696) x985 (= 36 x1345) (= x2295 (x1566 x1215)) (not (< x1345 4)) (> x504 0) (= (x618 (x472 274184521717934524641157099916833587218)) x504) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2295) (= (x1112 (x472 x1764) (x28 1) 0) x1215)) x642))) x2233))
(assert (x49 x1652))
(assert (= (x1489 (- x2261 x1185)) (x295 (- x2261 x1185))))
(assert (x49 x683))
(assert (= x683 (x1902 (x472 x683))))
(assert (x49 x1327))
(assert (x49 x1651))
(assert (=> (<= x825 10000) (= (x28 x825) (x472 x825))))
(assert (= (=> (and (= (x1078 (x472 x526)) x832) (= x1783 (x1638 (x472 x526))) (= (x1638 (x472 274184521717934524641157099916833587206)) x1979) (= x1461 (< (x1078 (x472 x526)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x850 (= 274184521717934524641157099916833587218 x526)) (= x812 (x1638 (x472 274184521717934524641157099916833587206))) x860 (= x349 x1313) (= x537 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1783)) x1461 x537 (= x860 (<= 0 x812))) (and (=> (not x850) x930) (=> (and (not (= x594 1889567281)) (= x15 x370) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x908) (= x1190 274184521717934524641157099916833587206) (>= x1442 0) (= x432 (x1112 (x472 x1389) (x28 1) 0)) (not (= x594 649617121)) (= x115 (>= (+ x509 x1442) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x850 (not (= 826074471 x594)) (= x1949 (x959 (- x701 4))) (= 32 x299) (= x1561 (x959 (- x908 x370))) (= (> x509 x908) x505) (= x1339 (> x370 x908)) (= x976 (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x156) (= (x618 (x472 274184521717934524641157099916833587218)) x444) (= 1 x655) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1442) (= x451 x1442) (not (< x701 4)) (not (= 2514000705 x594)) (= (+ x451 x2247) x891) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x509 x1442)) (> x444 0) (not x505) (= x494 x1389) (= 2835717307 x594) (= (x1112 (x472 x1389) (x28 1) 0) x747) (not x1339) (= x370 x509) (<= x494 1461501637330902918203684832716283019655932542975) (= x509 x2247) (= x1960 (or (and (= true (<= x1949 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1949 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1949))) (not x115) (not (> 649617121 x594)) (<= 0 x908) (= x701 68) (not x1960) (= 274184521717934524641157099916833587206 x2008) (= x1442 (x477 x432)) (= x908 (x186 x964)) (= x1313 x701) (= x964 (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0))) x463))) x378))
(assert (x2258 x560))
(assert (x49 x1893))
(assert (= (x472 1461501637330902918203684832716283019655932542975) (x28 1461501637330902918203684832716283019655932542975)))
(assert (x49 x2179))
(assert (= x1555 (x1902 (x472 x1555))))
(assert (x49 x536))
(assert (= (x1295 x1865) (ite (and x1379 x279) (x2085 x1865) (x971 x1865))))
(assert (x49 x484))
(assert (= x283 true))
(assert (= x784 (or (and x1057 x2193) (and x1197 x1093))))
(assert (= (ite x1253 (ite (and x2033 x574) (x1595 x2111) (x1889 x2111)) (x1889 x2111)) (x2148 x2111)))
(assert (x49 x148))
(assert (= x1219 (x1902 (x472 x1219))))
(assert (x49 x1807))
(assert (x2258 x520))
(assert (=> (>= 10000 x822) (= (x472 x822) (x28 x822))))
(assert (x49 x2001))
(assert (= x2289 (=> (and (= x1063 (= x1383 0)) (= (x1112 (x472 x1573) (x28 6) 0) x2007) (= (x1112 (x472 x1990) x2007 0) x2240) (<= 0 x1383) (= (x1321 x2240) x1383) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1383)) (and (=> (and (= (x1112 (x472 x1990) x1971 0) x1563) (not x1063) (>= x367 0) (<= x367 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1098 x367) (= x1971 (x1112 (x472 x1573) (x28 10) 0)) (= x1511 0) (= (x1375 x1563) x367)) x2168) (=> x1063 x1476)))))
(assert (= (ite (and x279 x1379) (x2085 x140) (x971 x140)) (x1295 x140)))
(assert (x49 x1806))
(assert (=> (>= 10000 x2282) (= (x472 x2282) (x28 x2282))))
(assert (x49 x1426))
(assert (= (x579 32) (x97 32)))
(assert (x2258 x247))
(assert (= x190 (x1902 (x472 x190))))
(assert (x49 x2118))
(assert (x49 x1684))
(assert (x49 x2235))
(assert (x2258 x726))
(assert (x49 x1876))
(assert (= (and x2112 x211) x1911))
(assert (x49 x1870))
(assert (x49 x798))
(assert (x49 x1143))
(assert (= (x1902 (x472 x798)) x798))
(assert (x49 x1834))
(assert (= (x1902 (x472 x365)) x365))
(assert (x49 x1999))
(assert (x49 x1232))
(assert (x49 x405))
(assert (= (=> (= (> x1557 0) x1342) (and (=> x1342 x1274) (=> (not x1342) x2315))) x2347))
(assert (x49 x1689))
(assert (x2258 x110))
(assert (x49 x296))
(assert (x49 x2077))
(assert (=> (<= x2346 10000) (= (x28 x2346) (x472 x2346))))
(assert (x49 x1378))
(assert (= (or x453 x2166) x2059))
(assert (x49 x1779))
(assert (=> (<= x1114 10000) (= (x472 x1114) (x28 x1114))))
(assert (x49 x1250))
(assert (=> (<= x1645 10000) (= (x28 x1645) (x472 x1645))))
(assert (= 0 (x1801 x1978)))
(assert (x2258 x1990))
(assert (= (x1040 (- x148 x1133)) (x229 (- x148 x1133))))
(assert (= (or (and x2329 (not x847)) x121) x1178))
(assert (=> (<= x1633 10000) (= (x472 x1633) (x28 x1633))))
(assert (x2258 x1054))
(assert (x49 x701))
(assert (x49 x1402))
(assert (= (=> (and (= x1303 x785) (not (= 0 x2049)) (not (or (> x1003 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1003 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1003 32)))) (= (x977 128) x785)) x2296) x1550))
(assert (x2258 x1784))
(assert (x49 x1155))
(assert (=> (<= x627 10000) (= (x472 x627) (x28 x627))))
(assert (= (x1902 (x28 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x49 x2356))
(assert (= (x295 (- 196 x1185)) (x1489 (- 196 x1185))))
(assert (x49 x223))
(assert (=> (<= x1784 10000) (= (x472 x1784) (x28 x1784))))
(assert (x49 x560))
(assert (x49 x1269))
(assert (x49 x1753))
(assert (= (or x1253 (and x1422 x1249)) x647))
(assert (x49 x1397))
(assert (x170 x1632))
(assert (x49 x811))
(assert (x49 x633))
(assert (= (=> (= (< 0 x1557) x1708) (and (=> (not x1708) x1516) (=> x1708 x239))) x322))
(assert (x49 x966))
(assert (x49 x1847))
(assert (x49 x1072))
(assert (x49 x954))
(assert (=> (<= x1389 10000) (= (x28 x1389) (x472 x1389))))
(assert (= (x28 2514000705) (x472 2514000705)))
(assert (= x411 (or (and x1986 x2257) x784)))
(assert (= (x472 1000000000000000000) (x28 1000000000000000000)))
(assert (x49 x1352))
(assert (= (=> (= x1916 x1140) x1470) x233))
(assert (x49 x1829))
(assert (x49 x1293))
(assert (x49 x1159))
(assert (x49 x304))
(assert (x49 x2200))
(assert (= (x579 (- x1128 164)) (x97 (- x1128 164))))
(assert (x49 x1427))
(assert (x49 x911))
(assert (= (x28 2061678023) (x472 2061678023)))
(assert (x49 x961))
(assert (x49 x2195))
(assert (x49 x997))
(assert (x49 x2070))
(assert (x49 x118))
(assert (x49 x1587))
(assert (x2258 x2000))
(assert (x49 x373))
(assert (x49 x819))
(assert (x49 x438))
(assert (= (x579 (- x148 164)) (x97 (- x148 164))))
(assert (=> (>= 10000 x479) (= (x28 x479) (x472 x479))))
(assert (= (x2031 (- 164 x1136)) (x1578 (- 164 x1136))))
(assert (x49 x831))
(assert (= x647 x2081))
(assert (x49 x183))
(assert (=> (<= x1573 10000) (= (x28 x1573) (x472 x1573))))
(assert (x49 x1033))
(assert (= true x920))
(assert (= (x28 2211524764) (x472 2211524764)))
(assert (= x695 (or (and (not x612) x242) (and (not x1888) x751))))
(assert (x49 x1325))
(assert (= x1046 (x1902 (x472 x1046))))
(assert (x49 x240))
(assert (x49 x2082))
(assert (= x1107 (and x1342 x1901)))
(assert (x49 x761))
(assert (x49 x622))
(assert (=> (>= 10000 x1990) (= (x28 x1990) (x472 x1990))))
(assert (x2258 x34))
(assert (x49 x1316))
(assert (x49 x1181))
(assert (=> (<= x1046 10000) (= (x28 x1046) (x472 x1046))))
(assert (x49 x952))
(assert (x49 x676))
(assert (=> (>= 10000 x1097) (= (x472 x1097) (x28 x1097))))
(assert (x49 x2324))
(assert (= 142201243 (x1902 (x28 142201243))))
(assert (x49 x1041))
(assert (x49 x1127))
(assert (x170 1461501637330902918203684832716283019655932542975))
(assert (x49 x1420))
(assert (x2258 x1146))
(assert (= (x2145 x716) (ite (and x2257 x1986) (x1347 x716) (x5 x716))))
(assert (x49 x1365))
(assert (x49 x792))
(assert (x49 x1946))
(assert (x49 x2143))
(assert (x49 x2255))
(assert (x49 x1981))
(assert (x49 x2124))
(assert (x49 x726))
(assert (x49 x190))
(assert (x49 x1472))
(assert (x49 x2057))
(assert (= (x1890 x409) 0))
(assert (= (x1902 (x472 x2256)) x2256))
(assert (= (x1902 (x472 x2100)) x2100))
(assert (x49 x1559))
(assert (= (x1902 (x472 x2346)) x2346))
(assert (x49 x1096))
(assert (x49 x2071))
(assert (= (x1992 x1770) (ite (and x2257 x1986) (x1390 x1770) (x1662 x1770))))
(assert (x49 x173))
(assert (x49 x1725))
(assert (x49 x341))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x25) (= x1981 x639) (= (x289 x486) x1766) (> x116 0) (>= x1766 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1014) (= x1099 x1629) (> x1014 x830) (= x1421 x581) (>= 1461501637330902918203684832716283019655932542975 x377) (= x639 0) (<= x1581 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1421) (= x1297 (x1112 (x472 x25) x111 0)) (> 2293535753 x1049) (= (x618 (x472 274184521717934524641157099916833587206)) x116) (= x184 (> x1766 0)) (not (= 87118632 x1049)) (<= 0 x1421) (<= 0 x1014) (>= 1461501637330902918203684832716283019655932542975 x458) (= x214 x1188) (<= 0 x377) (= x486 (x1112 (x472 x1581) x1297 0)) (not (= 142201243 x1049)) (= 243137395 x1049) (= (x1112 (x472 x830) (x28 7) 0) x111) (not (= x1049 69947311)) (< x1049 911411945) (< x1049 468353030) (<= x1766 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x581 x438) (>= x1099 0) (>= 1461501637330902918203684832716283019655932542975 x1099)) (and (=> (not x184) x2097) (=> (and (= 0 x1036) (= x19 (x1112 (x472 x830) (x28 9) 0)) (= (x1112 (x472 x319) x408 0) x503) (= (x718 1461501637330902918203684832716283019655932542975 x25) x1555) (<= x1973 115792089237316195423570985008687907853269984665640564039457584007913129639935) x184 (<= 0 x1973) (= (x718 1461501637330902918203684832716283019655932542975 x1581) x319) (= x408 (x1112 (x472 x1555) x19 0)) (= (x733 x503) x1973) (= x1973 x274)) x1518))) x359))
(assert (= (x1489 (- x1189 x1185)) (x295 (- x1189 x1185))))
(assert (x49 x1495))
(assert (x49 x903))
(assert (x49 x1764))
(assert (x49 x443))
(assert (x49 x949))
(assert (= (x1902 (x472 x84)) x84))
(assert (= x356 (=> (and (= x1810 (> x2102 x808)) (= (x740 x1885) x1232) (or (and (= (= x808 0) x1080) (or (and (not x777) (= x1423 x1188)) (and x777 (= (x2239 x567) x947) (= x1423 x947))) (or (and (= (x1376 x515) x2015) (= x2143 x1750) x1080 (not (< x1423 x2015)) (= x1750 (x959 (- x1423 x2015)))) (and (= x1549 (ite (< x2236 604800) x2236 604800)) (= x1549 x2143) (not (> x808 x1423)) (not x1080) (= (x959 (- x1423 x808)) x2236) (= 604800 x1684))) x1810 (= (< x686 x1188) x777) (= x686 (x2239 x567))) (and (= x2143 0) (not x1810))) (= (x1112 (x472 x830) (x28 6) 0) x2276) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x468) (= (x1286 x2250) x808) (= (x2023 x522) x468) (= x567 (x2192 (+ x515 32))) (= x973 (= 0 x2143)) (= x2077 (x2192 (+ x515 64))) (or x58 (and (= x1495 (x718 1461501637330902918203684832716283019655932542975 x25)) (not x58))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x808) (<= 0 x468) (>= x808 0) (= x2102 (x2239 x567)) (or (and (< (* x837 x2143) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x670 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2039 x556) (= x670 (x1210 x588)) (= x452 x670) (not x973) (= (x718 1461501637330902918203684832716283019655932542975 x25) x887) (= x84 (x718 1461501637330902918203684832716283019655932542975 x25)) (= x2039 x1487) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x670 x2039)) (= (x1112 (x472 x830) (x28 5) 0) x720) (= x556 (* x837 x2143)) (<= 0 x670) (= x588 (x1112 (x472 x84) x720 0)) (= x1400 (+ x452 x1487))) (and (= x2191 (x718 1461501637330902918203684832716283019655932542975 x25)) x973)) (= (x1101 x1885 1) x522) (= x58 (= x1653 0)) (<= 0 x1232) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232) (= x2250 (x1112 (x472 x520) x2276 0)) (= (x1112 (x472 x830) (x28 1) 0) x1885) (= (x718 1461501637330902918203684832716283019655932542975 x25) x520)) x372)))
(assert (x49 x669))
(assert (x49 x395))
(assert (= (x28 2293535753) (x472 2293535753)))
(assert (x49 x1948))
(assert (= (=> (and (= (x1112 (x472 x1728) x1823 0) x914) (= x1728 (x718 1461501637330902918203684832716283019655932542975 x2006)) (= (x1112 (x472 x1180) x914 0) x982) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x961) (= x1823 (x1112 (x472 x1503) (x28 7) 0)) (= x961 (x1186 x982)) (>= x961 0) (= (x718 1461501637330902918203684832716283019655932542975 x1808) x1180) (= x1463 (= 0 x961))) (and (=> (and (not x1463) (= x1503 x1505)) x1336) (=> (and (= (< 0 x2254) x756) (= x2254 (x959 (- x1503 1))) x1463 (not x756)) x1516))) x1691))
(assert (x49 x2217))
(assert (= (or (and x496 x1271) x1454) x962))
(assert (= (x28 87118632) (x472 87118632)))
(assert (x49 x2279))
(assert (= x1891 x93))
(assert (x49 x2015))
(assert (= x825 (x1902 (x472 x825))))
(assert (= x1548 (and x38 x681)))
(assert (x49 x1303))
(assert (x49 x1809))
(assert (x170 x2002))
(assert (x49 x674))
(assert (= (x229 (- 164 x1133)) (x1040 (- 164 x1133))))
(assert (x49 x1690))
(assert (x49 x1643))
(assert (x49 x566))
(assert (x49 x286))
(assert (= (=> (and (< 0 x87) (>= 1461501637330902918203684832716283019655932542975 x1514) (= (= 274184521717934524641157099916833587218 x1514) x1243) (not (> 468353030 x199)) (>= 1461501637330902918203684832716283019655932542975 x803) (= (x618 (x472 274184521717934524641157099916833587206)) x87) (= x2350 128) (< x199 911411945) (> 2293535753 x199) (= x199 468353030)) (and (=> (and (= x1850 (x787 x1702)) (= x1006 (x618 (x472 274184521717934524641157099916833587218))) (= x1642 (x959 (- x85 4))) (= 1 x2049) (= 1889567281 x237) (not x1267) (<= 0 x1850) (> x1006 0) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1642) true) (> 32 x1642)) (> x1642 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1267) (= x1003 32) (not (= 649617121 x237)) (= (x1112 (x472 x803) (x28 1) 0) x1702) (not (< x237 649617121)) (= x1247 x803) x1243 (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1870) (<= x1247 1461501637330902918203684832716283019655932542975) (= 36 x85) (not (= 826074471 x237)) (= x85 36) (not (< x85 4)) (<= x1850 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1550) (=> (not x1243) x650))) x252))
(assert (= (x1902 (x472 x822)) x822))
(assert (x49 x157))
(assert (x49 x1411))
(assert (= (=> (and (>= x1394 0) (<= x1394 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1112 (x472 x1963) (x28 7) 0) x2343) (= x2243 (x1112 (x472 x2275) x2343 0)) (= (x786 x549) x1394) (= (x1112 (x472 x1389) x2243 0) x549) (= (= x1394 0) x941)) (and (=> (and (= x1029 x1963) (not x941)) x1206) (=> (and (not x1413) (= x1413 (> x139 0)) (= (x959 (- x1963 1)) x139) x941) x705))) x694))
(assert (x49 x1716))
(assert (x49 x1522))
(assert (x49 x1166))
(assert (x49 x1236))
(assert (x49 x1783))
(assert (= (x1902 (x28 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= x315 (=> (and (= x1280 (= x298 0)) (or (and (or (and (not x174) (= x1653 1) (= x837 x1246)) (and (= 0 x837) x174 (= x1653 0))) (= (x1112 (x472 x1784) x1173 0) x20) (= (x1112 (x472 x298) (x28 10) 0) x1173) (>= x1246 0) (= x1246 (x434 x20)) (not x1280) (= (x718 1461501637330902918203684832716283019655932542975 x25) x1784) (= (= 0 x1246) x174) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1246)) (and x1280 (= 0 x1653) (= 0 x837)))) x356)))
(assert (x49 x1857))
(assert (x49 x2344))
(assert (=> (<= x683 10000) (= (x472 x683) (x28 x683))))
(assert (=> (>= 10000 x1650) (= (x472 x1650) (x28 x1650))))
(assert (x49 x1678))
(assert (x2258 x966))
(assert (= (x472 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x28 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x49 x1930))
(assert (x49 x2056))
(assert (=> (>= 10000 x803) (= (x28 x803) (x472 x803))))
(assert (x49 x40))
(assert (x49 x2223))
(assert (x49 x878))
(assert (x2258 x830))
(assert (x49 x1019))
(assert (= (x1902 (x472 x2000)) x2000))
(assert (= x239 (=> (and (>= x1072 0) (= (x1112 (x472 x2000) x838 0) x228) (= x838 (x1112 (x472 x247) x1424 0)) (= (x1186 x228) x1072) (= (x718 1461501637330902918203684832716283019655932542975 x1808) x2000) (= x2328 (= 0 x1072)) (= (x1112 (x472 x1557) (x28 7) 0) x1424) (= (x718 1461501637330902918203684832716283019655932542975 x2006) x247) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1072)) (and (=> (and (not x2328) (= x1557 x1505)) x1336) (=> x2328 x1933)))))
(assert (x49 x2188))
(assert (=> (<= x1897 10000) (= (x28 x1897) (x472 x1897))))
(assert (x49 x627))
(assert (x2258 x2275))
(assert (x49 x1645))
(assert (= x152 (x1902 (x472 x152))))
(assert (=> (<= x576 10000) (= (x28 x576) (x472 x576))))
(assert (= (x1902 (x472 x938)) x938))
(assert (x49 x1266))
(assert (=> (>= 10000 x1916) (= (x472 x1916) (x28 x1916))))
(assert (=> (>= 10000 x1764) (= (x472 x1764) (x28 x1764))))
(assert (x2258 x500))
(assert (x2258 x1985))
(assert (x2258 x1897))
(assert (= (x472 842085797) (x28 842085797)))
(assert (x49 x1279))
(assert (x49 x652))
(assert (x49 x607))
(assert (=> (<= x178 10000) (= (x472 x178) (x28 x178))))
(assert (x49 x423))
(assert (x49 x1416))
(assert (x49 x1346))
(assert (= (x1489 (- 164 x1185)) (x295 (- 164 x1185))))
(assert (= x2314 (x1902 (x472 x2314))))
(assert (x49 x468))
(assert (x49 x670))
(assert (=> (>= 10000 x1581) (= (x28 x1581) (x472 x1581))))
(assert (x49 x772))
(assert (= x1720 (=> (and (= (x959 (- x1996 1)) x1963) (= x2112 (< 0 x1963))) (and (=> (not x2112) x705) (=> x2112 x694)))))
(assert (= (x1902 (x472 x2267)) x2267))
(assert (x49 x1994))
(assert (= (=> (and (not (> x702 x652)) (= (x1112 (x472 x1573) (x28 3) 0) x742) (= x2257 (= x1496 0)) (= x810 (x1112 (x472 x2100) x415 0)) (= x702 (x63 x604)) (= x415 (x1112 (x472 x1990) x1289 0)) (= (x1112 (x472 x1573) (x28 4) 0) x1289) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x652) (= x604 (x1112 (x472 x1677) x810 0)) (= x1496 (x959 (- x652 x702))) (= (x1112 (x472 x1990) x742 0) x355) (>= x702 0) (= x1491 (x1112 (x472 x2100) x355 0)) (<= 0 x652) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x702) (= (x1112 (x472 x1573) (x28 5) 0) x1541) (<= x1244 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1865 (x1112 (x472 x1990) x1541 0)) (= (x1765 x1491) x652) (= x1244 (x1295 x1865)) (<= 0 x1244)) (and (=> (and (= x2179 (div x340 x1244)) (= x1496 x1248) (= x2027 (x1112 (x472 x1573) (x28 4) 0)) (or (and (= x103 0) (not x1431)) (and (or (and (= x552 (< 64 x921)) (or (and (= 64 x103) (not x552)) (and (or (and (= (x128 x204) x95) (= x1623 (x2192 (+ 160 x2214))) (= x204 (x2192 (+ x2136 128))) (= x1959 (< 128 x921)) (= 128 x103) x350 (not x1959)) (and (not x350) (= x103 96))) (= (> x921 96) x350) (= x491 (x2192 (+ 96 x2136))) x552 (= x404 (x2192 (+ x2214 128))) (= (x128 x491) x1719))) (= x1299 (x2192 (+ x2136 64))) (= x473 (x128 x1299)) (= x303 (x2192 (+ x2214 96))) x1821) (and (not x1821) (= 32 x103))) (= (< 32 x921) x1821) (= x1162 (x128 x1804)) x1431 (= x2246 x1018) (= x1804 x2139))) (= (x718 26959946667150639794667015087019630673637144422540572481103610249215 x1793) x1512) (= x1013 (> x1936 0)) (= x1233 (x2192 (+ x1512 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= x1055 (x1112 (x472 x1573) (x28 11) 0)) (= (* x2179 x1626) x638) (= (x718 x633 x1069) x6) (= x633 1) (= (x2192 (+ x2136 68)) x1163) (= x1547 (div x638 1000000000000000000)) (= (x959 (- x2214 x2136)) x27) (= (x1113 x1415) x1626) x1013 (= x1431 (> x921 0)) (= x2246 (x2192 (+ x447 128))) (= x921 (x1569 x2136)) (= x447 (x2192 (+ x772 100))) (= (x1112 (x472 x1990) x1055 0) x1199) (or (and x2114 (= x653 (x2192 (+ x921 x2246)))) (not x2114)) (= x2114 (> x103 x921)) (< (+ x1496 x809) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x809) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x809) (= x1468 x809) (= (x1112 (x472 x1677) x1214 0) x1469) (not x2257) (= x1406 0) (= x340 (mod (* 1000000000000000000 x1496) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x959 (- x27 32)) x351) (= (x1112 (x472 x1990) x2027 0) x457) (= 0 x6) (= x809 (x63 x1469)) (= (x618 (x472 x1677)) x1936) (= (x1112 (x472 x2100) x457 0) x1214) (<= x1626 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1626) (= x2214 (x2192 (+ 100 x2136))) (= (ite (> x1496 115792089237316195423570985008687907853269984665640564039457) 1 0) x1069) (< 0 x1244) (= (+ x1248 x1468) x395) (= x2139 (x2192 (+ 96 x772))) (= (x1112 (x472 x1677) x1199 0) x1415) (< (* x2179 x1626) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1912 x2139) x1793)) x18) (=> (and (= x1144 x2136) x2257) x2053))) x1641))
(assert (= 1986467848 (x1902 (x28 1986467848))))
(assert (x170 x2299))
(assert (= (x1040 (- x386 x1133)) (x229 (- x386 x1133))))
(assert (x49 x1506))
(assert (x49 x263))
(assert (x49 x1514))
(assert (x49 x2129))
(assert (= 274184521717934524641157099916833587206 (x1902 (x472 274184521717934524641157099916833587206))))
(assert (= (x1902 (x472 x330)) x330))
(assert (x49 x52))
(assert (= (x295 (- x2126 x1185)) (x1489 (- x2126 x1185))))
(assert (x49 x2134))
(assert (x49 x1508))
(assert (= x1178 x1271))
(assert (x49 x199))
(assert (= (ite (and (not x2220) (not x1694) x1467) (x1368 x431) (x816 x431)) (x1527 x431)))
(assert (=> (>= 10000 x1648) (= (x28 x1648) (x472 x1648))))
(assert (x49 x1129))
(assert (x49 x1797))
(assert (= (and x685 x411) x727))
(assert (x49 x116))
(assert (= (and x1281 x1499) x1152))
(assert (= (=> (and (= x1387 (x959 (- x1996 1))) (= x35 (> x1387 0))) (and (=> x35 x1457) (=> (not x35) x1536))) x624))
(assert (x49 x2136))
(assert (= (x1902 (x472 x1114)) x1114))
(assert (x2258 x2267))
(assert (x49 x575))
(assert (x49 x1330))
(assert (x49 x470))
(assert (x49 x993))
(assert (x49 x866))
(assert (=> (<= x50 10000) (= (x28 x50) (x472 x50))))
(assert (= (x2031 (- x1417 x1136)) (x1578 (- x1417 x1136))))
(assert (x49 x1947))
(assert (= (=> (= x1029 x2282) x1687) x1206))
(assert (= (x472 1968616202) (x28 1968616202)))
(assert (= x599 (=> (and (= (x2023 x1370) x2003) (= (x1321 x994) x1858) (= x746 (x1112 (x472 x1557) (x28 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003) (= (x1101 x1773 1) x1370) (or (and (= (x1112 (x472 x1557) (x28 6) 0) x1775) (= x2256 (x718 1461501637330902918203684832716283019655932542975 x2006)) (= x1104 (x1112 (x472 x2256) x1775 0)) x651) (and (<= 0 x1105) (= x2107 (x1112 (x472 x1557) (x28 5) 0)) (= x1105 (x2085 x2201)) (<= x1105 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1999 x580) (= x1114 (x718 1461501637330902918203684832716283019655932542975 x2006)) (= (x1112 (x472 x901) x2107 0) x2201) (= (x1112 (x472 x1557) (x28 6) 0) x656) (= x1105 x613) (< (* x1287 x755) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x755 x1287) x760) (not x651) (< (+ x1999 x1105) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x613 x580) x1863) (= x1999 x760) (= (x1112 (x472 x1114) x656 0) x1175) (= x901 (x718 1461501637330902918203684832716283019655932542975 x2006)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858) (>= x1874 0) (= (x718 1461501637330902918203684832716283019655932542975 x2006) x2346) (= x651 (= 0 x1287)) (= x1874 (x740 x1773)) (or x719 (and (= (x718 1461501637330902918203684832716283019655932542975 x2006) x1848) (= (x1112 (x472 x1848) x51 0) x406) (= (x1112 (x472 x1557) (x28 10) 0) x51) (not x719))) (= x94 (< x1858 x305)) (= x994 (x1112 (x472 x2346) x746 0)) (>= x2003 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1874) (= x571 (x2192 (+ x975 32))) (or (and (= (x182 x571) x290) (= (> x1188 x290) x2287) (or (and (= x532 x1188) (not x2287)) (and (= x532 x1749) x2287 (= x1749 (x182 x571)))) (= (= 0 x1858) x369) (or (and (= x1085 604800) (= x1287 x157) (= x157 (ite (< x1622 604800) x1622 604800)) (not (< x532 x1858)) (not x369) (= x1622 (x959 (- x532 x1858)))) (and (= (x959 (- x532 x866)) x12) (not (> x866 x532)) (= (x2172 x975) x866) (= x12 x1287) x369)) x94) (and (= x1287 0) (not x94))) (>= x1858 0) (= (= 0 x910) x719) (= x1773 (x1112 (x472 x1557) (x28 1) 0)) (= (x182 x571) x305) (= (x2192 (+ x975 64)) x1010)) x1669)))
(assert (x49 x686))
(assert (x49 x37))
(assert (x49 x1313))
(assert (x49 x509))
(assert (x49 x364))
(assert (x49 x1122))
(assert (= x730 (and x1008 x1507)))
(assert (= 1889567281 (x1902 (x28 1889567281))))
(assert (x49 x349))
(assert (x49 x1226))
(assert (x2258 x712))
(assert (=> (>= 10000 x247) (= (x472 x247) (x28 x247))))
(assert (= (x1347 x703) 0))
(assert (x49 x1223))
(assert (x170 x37))
(assert (x49 x1905))
(assert (x2258 x1808))
(assert true)
(assert (=> (<= x500 10000) (= (x472 x500) (x28 x500))))
(assert (= x1253 (or (and x673 x1937) (and x2033 x574))))
(assert (=> (>= 10000 x1219) (= (x28 x1219) (x472 x1219))))
(assert (x2258 274184521717934524641157099916833587214))
(assert (x49 x73))
(assert (= x963 (x1902 (x472 x963))))
(assert (= (and x380 x323) x209))
(assert (x49 x1252))
(assert (= x1343 (or (and x1888 x751) (and x629 (not x1754)) (and (not x1799) x1548))))
(assert (x49 x558))
(assert (x49 x207))
(assert (x49 x901))
(assert (= (or (and x2040 (not x898)) (and x1187 (not x1668))) x379))
(assert (x49 x2358))
(assert (= x1389 (x1902 (x472 x1389))))
(assert (x49 x857))
(assert (x49 x2282))
(assert (x49 x166))
(assert (x11 x352 x149))
(assert (= (x1902 (x472 x712)) x712))
(assert (= x1933 (=> (and (= x1503 (x959 (- x1557 1))) (= (< 0 x1503) x497)) (and (=> x497 x1691) (=> (not x497) x1516)))))
(assert (x2258 x1652))
(assert (x49 x2080))
(assert (= (x1040 (- x2126 x1133)) (x229 (- x2126 x1133))))
(assert (x49 x1502))
(assert (= (ite (and (not x2220) (not x1694) x1467) (x1368 x189) (x816 x189)) (x1527 x189)))
(assert (x49 x998))
(assert (= true x1320))
(assert (x49 x1458))
(assert (= (=> (= (= x1046 274184521717934524641157099916833587214) x1679) (and (=> (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1751 x1624)) (= (x1112 (x472 x1032) (x28 1) 0) x2218) (= x1559 (x618 (x472 274184521717934524641157099916833587214))) (= 68 x1179) (= x212 1) (= (+ x272 x106) x1473) (= x291 (x959 (- x1179 4))) (= x1673 (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0)) (= x52 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 2514000705 x2164)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2138) (= x2138 (x763 x334)) (>= x2138 0) (= x1179 x1509) (= (x905 x1212) x1751) (= x1416 x1624) (= x334 (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0)) (= x130 32) (= x2164 2835717307) (not x1203) (= x895 (< x2138 x1624)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1751) (not x1975) (not (= 649617121 x2164)) x1679 (not (< x2164 649617121)) (= x1975 (< x2138 x1416)) (= x1624 x272) (not (= x2164 1889567281)) (= (x1112 (x472 x1032) (x28 1) 0) x1212) (= x1203 (>= (+ x1751 x1624) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x663) (= x1751 x106) (= x1032 x478) (> x1559 0) (>= 1461501637330902918203684832716283019655932542975 x1032) (not (= x2164 826074471)) (not (> 4 x1179)) (not x895) (= 274184521717934524641157099916833587206 x1407) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x291) (and (< x291 64) (= true (<= x291 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x663) (= x1416 x424) (>= x1751 0) (= x2001 x1032) (= (x959 (- x2138 x1416)) x1344) (= x1448 274184521717934524641157099916833587206)) x1441) (=> (not x1679) x765))) x1966))
(assert (= x2187 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1970) (<= 0 x1970) (= x968 (x1112 (x472 x1650) (x28 6) 0)) (= x2005 (x1112 (x472 x500) x968 0)) (= x500 (x718 1461501637330902918203684832716283019655932542975 x25)) (= (= 0 x1970) x1888) (= (x1286 x2005) x1970)) (and (=> (and (= x1553 x1650) (not x1888)) x1075) (=> (and (not x122) (= (x959 (- x1650 1)) x100) x1888 (= x122 (> x100 0))) x754)))))
(assert (x49 x569))
(assert (= (=> (= x298 x1553) x315) x1075))
(assert (x49 x564))
(assert (=> (<= x218 10000) (= (x472 x218) (x28 x218))))
(assert (x49 x885))
(assert (x49 x677))
(assert (x49 x1085))
(assert (x49 x1850))
(assert (x49 x102))
(assert (= (x1902 (x472 x806)) x806))
(assert (= x1648 (x1902 (x472 x1648))))
(assert (x49 x827))
(assert (x49 x1456))
(assert (x49 x1626))
(assert (x49 x621))
(assert (= (x579 (- x2261 164)) (x97 (- x2261 164))))
(assert (x49 x825))
(assert (x49 x716))
(assert (x2258 x1963))
(assert (x49 x715))
(assert (= (and x428 (not x1028)) x1712))
(assert (x49 x672))
(assert (= (x1902 (x1101 x1885 1)) (+ (x1902 x1885) 1)))
(assert (= (ite x1253 (ite (and x2033 x574) (x1595 x1215) (x1889 x1215)) (x1889 x1215)) (x2148 x1215)))
(assert (=> (>= 10000 x723) (= (x28 x723) (x472 x723))))
(assert (x49 x1598))
(assert (x49 x755))
(assert (x49 x2185))
(assert (x49 x34))
(assert (= x820 x1467))
(assert (= x259 (and (not x874) x1302)))
(assert (x49 x2050))
(assert (= (x1902 (x472 x1764)) x1764))
(assert (x49 x290))
(assert (x49 x1931))
(assert (= x18 (=> (and (= x1067 (< (x225 (x472 x1677)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1930 x921) x2312 (= x1921 (<= 0 x1411)) (= x924 (x527 (x472 x1677))) (= (x527 (x472 274184521717934524641157099916833587206)) x1411) x1067 (= x2312 (< x924 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= x1677 274184521717934524641157099916833587218) x1093) (= (x527 (x472 274184521717934524641157099916833587206)) x845) (= x1989 (x225 (x472 x1677))) x1921) (and (=> (and x1093 (not (> 4 x1363)) (not x1706) (>= x1565 0) (= (+ x776 x1301) x658) (not x23) (= x1798 32) (not (= x1887 826074471)) (<= x1565 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 68 x1363) (= (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0) x1776) (= x1547 x215) (<= 0 x1472) (= x1472 (x1889 x1812)) (= x538 (> x215 x1472)) (= x1706 (or (and (< x927 64) (= true (<= x927 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x927))) (not (= x1887 1889567281)) (= x1887 2835717307) (not (= 2514000705 x1887)) (= x1418 x776) (= x1953 x2100) (= 1 x1756) (not x2327) (<= x1953 1461501637330902918203684832716283019655932542975) (= x943 (x618 (x472 274184521717934524641157099916833587218))) (= x2241 (x1112 (x472 x2100) (x28 1) 0)) (= 274184521717934524641157099916833587206 x1083) (= x1418 x215) (not x538) (= x1301 x1565) (= x403 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> x943 0) (= x23 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1418 x1565))) (< (+ x1565 x1418) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1363 x1930) (= x1834 x1134) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1472) (= (x2186 x1875) x1565) (= (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0) x1812) (= (x959 (- x1363 4)) x927) (not (= 649617121 x1887)) (not (> 649617121 x1887)) (= x508 274184521717934524641157099916833587206) (= x1875 (x1112 (x472 x2100) (x28 1) 0)) (= x1471 (x959 (- x1472 x215))) (= (> x1418 x1472) x2327)) x429) (=> (not x1093) x1833)))))
(assert (x170 x2076))
(assert (x49 x1417))
(assert (x49 x205))
(assert (x49 x2311))
(assert (x49 x732))
(assert (= x2053 (=> (= (> x892 1) x685) (and (=> x685 x2024) (=> (not x685) x1755)))))
(assert (x49 x473))
(assert (x2258 x1633))
(assert (= (ite (and x1986 x2257) (x1582 x942) (ite (and x1197 x1093) (x1582 x942) (x465 x942))) (x266 x942)))
(assert (x49 x15))
(assert (= x463 (=> (and (= x78 (< 0 x1745)) (= (< (x1261 (x472 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x264) (= x1745 (x98 x1770)) x264 (= x2123 (= 0 x299)) (or (and (not x2123) (= x1770 x296) (= x1805 (x2192 (+ x1094 96)))) (and (= 96 x1770) x2123)) (= (x2307 (x472 x526)) x616) (not (= 0 x655)) (or (not x78) (and (= x250 (x98 x1770)) (= x1373 (= x230 0)) (= (x2192 (+ 32 x1770)) x716) (= (x1674 x716) x230) (> x230 0) (not (or (> x250 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x250)) (< x250 32)))) (= x230 x175) (= x175 (ite x1208 1 0)) x78 (= (not x1373) x1208)))) x2204)))
(assert (x49 x191))
(assert (= (x1902 (x472 x576)) x576))
(assert (not x1683))
(assert (x49 x714))
(assert (= (x1902 (x472 x117)) x117))
(assert (x49 x653))
(assert (x49 x1825))
(assert (= (or x1899 (and x530 x727)) x249))
(assert (= x1130 (x1902 (x472 x1130))))
(assert (= (=> (and (or (and (= (x1112 (x472 x1389) x525 0) x1235) (= (x2238 x1235) x1020) (= x1643 1) (not x2290) (= (x1112 (x472 x2282) (x28 9) 0) x1141) (<= 0 x1020) (<= x1020 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1020 x2171) (= x525 (x1112 (x472 x2275) x1141 0))) (and (= x1643 0) x2290 (= 0 x2171))) (= (= 0 x2282) x2290)) x2175) x1687))
(assert (= x1677 (x1902 (x472 x1677))))
(assert (x49 x1230))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1902 (x28 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x49 x2102))
(assert (x49 x2064))
(assert (x49 x1433))
(assert (x49 x1953))
(assert (= x2166 (or (and x1982 x1853) (and x347 (not x578)) (and (not x1342) x1901))))
(assert (x49 x637))
(assert (x49 x724))
(assert (=> (>= 10000 x1323) (= (x472 x1323) (x28 x1323))))
(assert (x49 x886))
(assert (= (=> (and (= (x1112 (x472 x1990) x1787 0) x799) (= x1787 (x1112 (x472 x1323) (x28 6) 0)) (<= 0 x1585) (= (x1321 x799) x1585) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1585) (= x79 (= 0 x1585))) (and (=> (and (= x480 (< 0 x707)) x79 (= (x959 (- x1323 1)) x707) (not x480)) x818) (=> (and (= x1323 x1140) (not x79)) x233))) x256))
(assert (x2258 x806))
(assert (x49 x1594))
(assert (= (x1390 x1432) 0))
(assert (= (x1902 (x1101 x2313 1)) (+ 1 (x1902 x2313))))
(assert (= (x1902 (x472 x10)) x10))
(assert (x49 x1050))
(assert (x170 x1581))
(assert (x49 x1263))
(assert (x49 x1962))
(assert (= (x1902 (x472 x2275)) x2275))
(assert (= (x1902 (x472 x830)) x830))
(assert (x49 x693))
(assert (x49 x712))
(assert (x49 x1419))
(assert (= x1454 (or (and x489 x72) (and x2209 x850))))
(assert (= 0 (x1879 x2139)))
(assert (x49 x337))
(assert (=> (<= x1387 10000) (= (x28 x1387) (x472 x1387))))
(assert (x49 x1009))
(assert (= x1184 (and x35 x495)))
(assert (= x428 x1170))
(assert (x49 x889))
(assert (= (=> (= (< 0 x1996) x1778) (and (=> x1778 x1868) (=> (not x1778) x1536))) x635))
(assert (x170 x304))
(assert (x49 x1770))
(assert (x49 x2127))
(assert (= (=> (= (> x830 0) x1799) (and (=> (not x1799) x754) (=> x1799 x1154))) x598))
(assert (=> (<= x1180 10000) (= (x28 x1180) (x472 x1180))))
(assert (= x1600 (=> (and (= (x289 x1738) x1995) (= (x1112 (x472 x1519) x1264 0) x631) (>= x1995 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1995) (= x1519 (x718 1461501637330902918203684832716283019655932542975 x25)) (= x825 (x718 1461501637330902918203684832716283019655932542975 x1581)) (= (x1112 (x472 x825) x631 0) x1738) (= x1264 (x1112 (x472 x830) (x28 7) 0)) (= x1449 (= 0 x1995))) (and (=> x1449 x456) (=> (and (not x1449) (= x830 x201)) x127)))))
(assert (x49 x735))
(assert (= x1956 (=> (= (= x822 274184521717934524641157099916833587214) x1937) (and (=> (and (not x1239) (not (= x923 2514000705)) x1937 (= x858 (or (and (> 64 x1560) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1560) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1560))) (not x1709) (= x659 (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0)) (= x275 68) (= 32 x2232) (= x974 x2317) (= x1924 x1220) (= x464 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x1112 (x472 x974) (x28 1) 0) x2336) (= x40 274184521717934524641157099916833587206) (not (= x923 1889567281)) (< 0 x570) (<= 0 x1594) (= (x959 (- x1531 x1220)) x614) (= x981 (x1112 (x472 x974) (x28 1) 0)) (= (x959 (- x275 4)) x1560) (< (+ x610 x1594) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1594 (x1312 x981)) (= x1531 (x1582 x136)) (not (= 649617121 x923)) (<= x974 1461501637330902918203684832716283019655932542975) (= x136 (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0)) (= x1829 274184521717934524641157099916833587206) (= x610 x1220) (= x1709 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1594 x610))) (= x762 x275) (= (> x610 x1531) x1239) (= (x618 (x472 274184521717934524641157099916833587214)) x570) (<= 0 x1531) (not (= x923 826074471)) (not x2110) (= x1636 x1594) (= x2285 x610) (not x858) (not (> 649617121 x923)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1594) (= x2255 (+ x1636 x2285)) (= 1 x669) (not (< x275 4)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1531) (= (< x1531 x1220) x2110) (= 2835717307 x923) (= x974 x2144)) x1621) (=> (not x1937) x1145)))))
(assert (x49 x1661))
(assert (x49 x2182))
(assert (x49 x1628))
(assert (x49 x1728))
(assert (=> (>= 10000 x526) (= (x28 x526) (x472 x526))))
(assert (x170 x1793))
(assert (= (ite (and x279 x1379) (x2085 x813) (x971 x813)) (x1295 x813)))
(assert (x49 x1022))
(assert (=> (>= 10000 x1519) (= (x28 x1519) (x472 x1519))))
(assert (= 0 (x1879 x1804)))
(assert (x49 x1757))
(assert (= (x2031 (- x2261 x1136)) (x1578 (- x2261 x1136))))
(assert (x49 x1004))
(assert (x49 x1144))
(assert (= 69947311 (x1902 (x28 69947311))))
(assert (= (=> (= x72 (= x526 274184521717934524641157099916833587214)) (and (=> (not x72) x2161) (=> (and (= 32 x299) (= (x1079 x942) x1718) (= x2134 x1313) (= x655 1) (= (>= (+ x1718 x1628) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1298) (not (= x2155 826074471)) (= (x1112 (x472 x1389) (x28 1) 0) x462) (not (= 649617121 x2155)) (= (x959 (- x680 x867)) x183) (= x2155 2835717307) (= x1628 x1814) (not (= x2155 1889567281)) (not x339) (= (< x680 x867) x339) (= x942 (x1112 (x472 x1389) (x28 1) 0)) (not x1466) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1718) (= 68 x2134) (<= 0 x1718) (= (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0) x1349) x72 (= x1389 x2185) (not x1625) (>= 1461501637330902918203684832716283019655932542975 x2185) (not x1298) (not (> 4 x2134)) (= x1625 (or (and (< x1022 64) (= true (<= x1022 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1022 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2253 (x1112 (x472 274184521717934524641157099916833587206) (x28 1) 0)) (= (< x680 x1628) x1466) (= x15 x867) (not (= x2155 2514000705)) (< (+ x1718 x1628) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x680 0) (= x484 (+ x459 x1814)) (= 274184521717934524641157099916833587206 x2127) (= x1718 x459) (< 0 x173) (not (< x2155 649617121)) (= x680 (x266 x1349)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x273) (= x166 274184521717934524641157099916833587206) (= (x959 (- x2134 4)) x1022) (= x867 x1628) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x680) (= (x618 (x472 274184521717934524641157099916833587214)) x173)) x463))) x930))
(assert (x49 x1855))
(assert (x2258 x1916))
(assert (x49 x343))
(assert (x49 x2065))
(assert (x49 x89))
(assert (x805 x1581 x265))
(assert (= x545 (and x1057 (not x2193))))
(assert (x49 x829))
(assert (x49 x1509))
(assert (x49 x1496))
(assert (x49 x1867))
(assert (x49 x442))
(assert (x49 x1125))
(assert (x49 x1719))
(assert (= 0 (x1390 x1770)))
(assert (= x490 (and (not x160) x60)))
(assert (= (x1902 (x472 x147)) x147))
(assert (x49 x1677))
(assert (x49 x1792))
(assert (x49 x1319))
(assert (= (ite (and (not x1694) x1467 (not x2220)) (x1368 x325) (x816 x325)) (x1527 x325)))
(assert (x49 x2261))
(assert (= (=> (and (= x240 x803) (= x2058 x1514)) x252) x1755))
(assert (x49 x275))
(assert (= (x1879 x897) 0))
(assert (=> (>= 10000 x963) (= (x28 x963) (x472 x963))))
(assert (x49 x665))
(assert (x49 x2095))
(assert (x49 x386))
(assert (x49 x879))
(assert (x49 x1653))
(assert (= (x1902 (x472 x24)) x24))
(assert (x49 x466))
(assert (x49 x1996))
(assert (= (=> (and (= (= x1325 0) x681) (= (x1286 x2342) x1325) (= x1794 (x1112 (x472 x830) (x28 6) 0)) (<= x1325 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x718 1461501637330902918203684832716283019655932542975 x25) x110) (>= x1325 0) (= x2342 (x1112 (x472 x110) x1794 0))) (and (=> x681 x598) (=> (and (= 0 x1653) (not x681) (= (x718 1461501637330902918203684832716283019655932542975 x25) x1146) (= x1434 (x1112 (x472 x1146) x1618 0)) (= x423 (x434 x1434)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x423) (= x423 x837) (<= 0 x423) (= x1618 (x1112 (x472 x830) (x28 10) 0))) x356))) x1528))
(assert (x49 x1452))
(assert (x49 x1224))
(assert (=> (<= x2227 10000) (= (x472 x2227) (x28 x2227))))
(assert (= (x97 (- x2126 164)) (x579 (- x2126 164))))
(assert (x49 x608))
(assert (x49 x1216))
(assert (x49 x2271))
(assert (x170 x458))
(assert (=> (>= 10000 x520) (= (x472 x520) (x28 x520))))
(assert (= (=> (and (= (x959 (- x343 x455)) x1191) (= (= 0 x1191) x496) (>= x343 0) (<= 0 x1437) (= x1958 (x1112 (x472 x2275) x1843 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1437) (= x2014 (x1112 (x472 x1996) (x28 5) 0)) (= x2303 (x1112 (x472 x1996) (x28 4) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x343) (not (< x343 x455)) (= (x634 x2165) x343) (= x1843 (x1112 (x472 x1996) (x28 3) 0)) (= (x1112 (x472 x2275) x2303 0) x284) (= x813 (x1112 (x472 x2275) x2014 0)) (= (x1112 (x472 x526) x2351 0) x467) (>= x455 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x455) (= (x1580 x467) x455) (= (x26 x813) x1437) (= (x1112 (x472 x1389) x284 0) x2351) (= (x1112 (x472 x1389) x1958 0) x2165)) (and (=> (and (= (x959 (- x1944 32)) x280) (= x288 (x1112 (x472 x1996) (x28 4) 0)) (< (* x1603 x2104) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2180 (x2192 (+ 100 x2269))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2195) (= (> x349 0) x1619) (= (div x499 x1437) x1603) (not x496) (>= x2104 0) (= x993 0) (= (x2192 (+ x1382 100)) x1094) (= x739 (x1112 (x472 x526) x2198 0)) (= (x1112 (x472 x2275) x288 0) x1961) (= (x1112 (x472 x1389) x1961 0) x487) (>= x2195 0) (= x513 (x718 26959946667150639794667015087019630673637144422540572481103610249215 x304)) (= x539 (> x2010 0)) (= x721 (x1112 (x472 x526) x487 0)) (= 1 x621) (= x1965 (x2192 (+ x1382 68))) (= x15 (div x1701 1000000000000000000)) (or (and x2199 (= x885 (x2192 (+ x296 x349)))) (not x2199)) (= x1245 x1191) (= (x1112 (x472 x2275) x261 0) x2198) (= (+ x967 x1245) x2348) (= x304 (x1771 x856)) (= (x718 x621 x2002) x993) (= (* x1603 x2104) x1701) x539 (= x2195 x967) (= (x1580 x721) x2195) (= x856 (x2192 (+ 96 x2269))) (= x2104 (x1113 x739)) (= x296 (x2192 (+ 128 x2180))) (= x261 (x1112 (x472 x1996) (x28 11) 0)) (= (mod (* x1191 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x499) (< 0 x1437) (= x349 (x797 x1382)) (= x2279 (x2192 (+ x513 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (<= x2104 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1944 (x959 (- x1094 x1382))) (or (and (= x872 x296) x1619 (= x161 x856) (= x2242 (< 32 x349)) (= (x1869 x161) x1439) (or (and (= x1860 32) (not x2242)) (and (= x1004 (x1869 x1753)) (or (and (not x1795) (= 64 x1860)) (and (or (and (= 128 x1860) x55 (= (x2192 (+ 160 x1094)) x2080) (= (x2192 (+ x1382 128)) x897) (not x1654) (= x1654 (< 128 x349)) (= x1846 (x1869 x897))) (and (not x55) (= 96 x1860))) (= x2043 (x2192 (+ 128 x1094))) (= x1825 (x2192 (+ 96 x1382))) (= x55 (< 96 x349)) (= x1599 (x1869 x1825)) x1795)) (= (x2192 (+ 96 x1094)) x1119) (= (< 64 x349) x1795) x2242 (= x1753 (x2192 (+ 64 x1382)))))) (and (= x1860 0) (not x1619))) (= (x618 (x472 x526)) x2010) (= x2199 (> x1860 x349)) (= 0 x1811) (= x2002 (ite (> x1191 115792089237316195423570985008687907853269984665640564039457) 1 0)) (< (+ x2195 x1191) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x378) (=> x496 x2204))) x597))
(assert (= (x1890 x154) 0))
(assert (= x629 (and x612 x242)))
(assert (x49 x881))
(assert (x49 x81))
(assert (= (x472 649617121) (x28 649617121)))
(assert (= (and (not x2257) x1986) x1197))
(assert (x49 x628))
(assert (x49 x25))
(assert (x49 x1089))
(assert (x49 x1010))
(assert (x49 x1165))
(assert (x49 x915))
(assert (x49 x785))
(assert (x49 x2332))
(assert (= x1012 (=> (and (= (= x1158 0) x1497) (or (and (= (x1112 (x472 x601) x80 0) x2018) (= x512 (x1112 (x472 x1648) x2018 0)) (= x965 (x733 x512)) (>= x965 0) (<= x965 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1036 1) (= x274 x965) (= x1648 (x718 1461501637330902918203684832716283019655932542975 x1581)) (= (x718 1461501637330902918203684832716283019655932542975 x25) x601) (not x1497) (= x80 (x1112 (x472 x1158) (x28 9) 0))) (and (= 0 x274) x1497 (= 0 x1036)))) x1518)))
(assert (= x36 (and x2328 x354)))
(assert (x49 x610))
(assert (x2258 x1219))
(assert (=> (<= x715 10000) (= (x472 x715) (x28 x715))))
(assert (= (x1902 (x472 x247)) x247))
(assert (= x778 (or (and (not x1778) x1091) (and x1184 x2046) (and x495 (not x35)))))
(assert (=> (<= x319 10000) (= (x472 x319) (x28 x319))))
(assert (= 911411945 (x1902 (x28 911411945))))
(assert (x49 x41))
(assert (x2258 274184521717934524641157099916833587218))
(assert (= x218 (x1902 (x472 x218))))
(assert (x49 x4))
(assert (x49 x883))
(assert (x2258 x627))
(assert (x49 x2232))
(assert (x49 x1409))
(assert (x49 x1838))
(assert (= x398 (x1902 (x472 x398))))
(assert (x49 x2348))
(assert (x49 x1561))
(assert (x49 x317))
(assert (x805 x25 x400))
(assert (= (x1578 (- x608 x1136)) (x2031 (- x608 x1136))))
(assert (x49 x2000))
(assert (= (and x1754 x629) x751))
(assert (x49 x655))
(assert (x49 x668))
(assert (x49 x320))
(assert (x49 x17))
(assert (x49 x1069))
(assert (= (x28 243137395) (x472 243137395)))
(assert (= x855 (=> (= x195 (< 0 x1573)) (and (=> (not x195) x1322) (=> x195 x269)))))
(assert (=> (>= 10000 x1677) (= (x28 x1677) (x472 x1677))))
(assert (x49 x1760))
(assert (= (x28 468353030) (x472 468353030)))
(assert (x49 x32))
(assert (=> (>= 10000 x1500) (= (x472 x1500) (x28 x1500))))
(assert (= x1457 (=> (and (= (x600 x2318) x1929) (= (= x1929 0) x2046) (= (x1112 (x472 x1387) (x28 6) 0) x1880) (<= x1929 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1929 0) (= (x1112 (x472 x2275) x1880 0) x2318)) (and (=> (and (= x1256 x1387) (not x2046)) x1161) (=> (and x2046 (= x1088 (x959 (- x1387 1))) (not x1659) (= (< 0 x1088) x1659)) x1536)))))
(assert (x49 x2180))
(assert (x49 x274))
(assert (= x33 (x1902 (x472 x33))))
(assert (x49 x424))
(assert (x49 x33))
(assert (x2258 x1129))
(assert (x49 x561))
(assert (x49 x722))
(assert (x2258 x218))
(assert (x49 x9))
(assert (x49 x1310))
(assert (x49 x2256))
(assert (= (x1902 (x472 x1557)) x1557))
(assert (x49 x1864))
(assert (x49 x877))
(assert (x49 x297))
(assert (x49 x1044))
(assert (x49 x515))
(assert (x49 x1623))
(assert (= (x579 (- x1189 164)) (x97 (- x1189 164))))
(assert (x49 x2155))
(assert (= (x1902 (x472 x1784)) x1784))
(assert (= (or x336 x125) x1904))
(assert (= (x1902 (x472 x1645)) x1645))
(assert (x49 x1120))
(assert (x170 x352))
(assert (x49 x1682))
(assert (x49 x1077))
(assert (x49 x1995))
(assert (x49 x1465))
(assert (= (or (and (not x1954) x1820) (and (not x941) x1911)) x257))
(assert (x49 x1227))
(assert (x49 x2049))
(assert (x49 x992))
(assert (x170 x621))
(assert (x49 x2039))
(assert (= 468353030 (x1902 (x28 468353030))))
(assert (x49 x975))
(assert (x49 x1863))
(assert (x49 x571))
(assert (x49 x717))
(assert (x2258 x1677))
(assert (x49 x1650))
(assert (x49 x1334))
(assert (x49 x1003))
(assert (=> (>= 10000 x938) (= (x28 x938) (x472 x938))))
(assert (x49 x75))
(assert (x49 x1394))
(assert (x2258 x396))
(assert (x1340 x633 x1069))
(assert (x49 x2350))
(assert (= x2331 (x1902 (x472 x2331))))
(assert (x49 x846))
(assert (x49 x1970))
(assert (= (=> (= x24 x1505) x1060) x1336))
(assert (x49 x39))
(assert (x2258 x319))
(assert (= x1817 (=> (and (= x1374 (= 0 x1159)) (or x748 (and (= x1952 (x1112 (x472 x1990) x1068 0)) (not x748) (= (x1112 (x472 x2100) x1952 0) x757) (= x1068 (x1112 (x472 x1573) (x28 9) 0)))) (= x748 (= x714 0)) (or (and x1374 (= (x1112 (x472 x1573) (x28 7) 0) x640) (= (x1112 (x472 x1990) x640 0) x1157) (= x1910 (x1112 (x472 x2100) x1157 0)) (= x772 128)) (and (= (x1112 (x472 x1573) (x28 1) 0) x2152) (or (and (or (and (= (x1002 160) x1314) x1001 (= x1314 x1409)) (and (= x1409 x1188) (not x1001))) (= x422 (= 0 x1977)) (or (and (= x89 (x959 (- x1409 x1977))) (= 604800 x1346) (= x606 x853) (= (ite (< x89 604800) x89 604800) x853) (not (< x1409 x1977)) (not x422)) (and (= x1914 (x959 (- x1409 x871))) x422 (= x871 (x469 128)) (not (< x1409 x871)) (= x606 x1914))) (= x466 (x1002 160)) x937 (= x1001 (> x1188 x466))) (and (not x937) (= 0 x606))) (= (x1186 x851) x1977) (= (x1112 (x472 x1990) x312 0) x1791) (or (and (= x531 (x1112 (x472 x2100) x1620 0)) (<= 0 x1458) (= x142 (* x606 x1159)) (= (+ x603 x1987) x569) (<= x1458 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1112 (x472 x2100) x2105 0) x138) (= x586 x603) (= (x1112 (x472 x1990) x934 0) x2105) (< (+ x586 x1458) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x606 x1159)) (= x934 (x1112 (x472 x1573) (x28 3) 0)) (= x1620 (x1112 (x472 x1990) x2113 0)) (= x1987 x1458) (= x586 x142) (not x2159) (= x2113 (x1112 (x472 x1573) (x28 7) 0)) (= x1458 (x816 x138)) (= 192 x772)) (and (= (x1112 (x472 x2100) x2197 0) x1862) (= x2340 (x1112 (x472 x1573) (x28 7) 0)) (= (x1112 (x472 x1990) x2340 0) x2197) x2159 (= x772 192))) (<= 0 x857) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1977) (= x312 (x1112 (x472 x1573) (x28 7) 0)) (= x724 (x740 x2152)) (>= x724 0) (= x937 (> x980 x1977)) (= (x1112 (x472 x2100) x1791 0) x851) (= (x1002 160) x980) (= (= 0 x606) x2159) (<= x724 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x857) (= x857 (x2023 x1149)) (not x1374) (>= x1977 0) (= x1149 (x1101 x2152 1))))) x2289)))
(assert (x49 x2212))
(assert (x49 x2140))
(assert (x2258 x1502))
(assert (x49 x882))
(assert (x49 x938))
(assert (=> (>= 10000 x10) (= (x28 x10) (x472 x10))))
(assert (x49 x1146))
(assert (x49 x1989))
(assert (x2258 x576))
(assert (= (x1902 (x28 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (x2258 x798))
(assert (= (x1902 (x472 x1180)) x1180))
(assert (x49 x1255))
(assert (= x1087 (or (and (not x195) x1169) (and x535 (not x1993)) (and x1187 x1668))))
(assert (x49 x10))
(assert (x49 x602))
(assert (x49 x995))
(assert (x49 x126))
(assert (x49 x193))
(assert (x49 x500))
(assert (x49 x1098))
(assert (= (ite (and x1986 x2257) (x1582 x1613) (ite (and x1197 x1093) (x1582 x1613) (x465 x1613))) (x266 x1613)))
(assert (x49 x1462))
(assert (= (or (and (not x1008) x1507) (and x2042 (not x1043)) (and x730 x79)) x1592))
(assert (= (x1902 (x472 x1996)) x1996))
(assert (x2258 x1988))
(assert (x49 x2341))
(assert (= (x1902 (x472 x1573)) x1573))
(assert (x49 x791))
(assert (= x1492 (or (and x490 x1679) (and x60 x160))))
(assert (x49 x708))
(assert (x49 x644))
(assert (x2258 x2310))
(assert (x49 x218))
(assert (x49 x13))
(assert (= (x472 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x28 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x49 x385))
(assert (= (=> (= x2310 x1256) x2263) x1161))
(assert (= (=> (= x10 x2217) x620) x1498))
(assert (=> (<= x1996 10000) (= (x472 x1996) (x28 x1996))))
(assert (=> (<= x365 10000) (= (x472 x365) (x28 x365))))
(assert (= x1057 (and (not x1093) x1197)))
(assert (x49 x410))
(assert (x49 x1164))
(assert (x49 x822))
(assert (= (x186 x964) (ite (and x2257 x1986) (x1889 x964) (ite (and x1197 x1093) (x1681 x964) (x1889 x964)))))
(assert (= 0 (x1801 x2324)))
(assert (x49 x1985))
(assert (x49 x1874))
(assert (x49 x403))
(assert (x49 x1866))
(assert (= x560 (x1902 (x472 x560))))
(assert (= 2835717307 (x1902 (x28 2835717307))))
(assert (x49 x2028))
(assert (x49 x130))
(assert (= x1693 (x1902 (x472 x1693))))
(assert (x49 x201))
(assert (x49 x1511))
(assert (= (ite (and x1986 x2257) (x1889 x432) (ite (and x1197 x1093) (x1681 x432) (x1889 x432))) (x186 x432)))
(assert (= (or (and x1853 (not x1982)) (and x1107 (not x1412))) x453))
(assert (x49 x1251))
(assert (=> (<= x147 10000) (= (x472 x147) (x28 x147))))
(assert (x49 x1285))
(assert (x49 x1788))
(assert (x49 x880))
(assert (= (x1902 (x472 x1503)) x1503))
(assert (= (=> (= x1216 x1985) x2160) x368))
(assert (= (x2031 (- 196 x1136)) (x1578 (- 196 x1136))))
(assert (= (x1578 (- 132 x1136)) (x2031 (- 132 x1136))))
(assert (= (x1578 (- x386 x1136)) (x2031 (- x386 x1136))))
(assert (= (x28 635128645) (x472 635128645)))
(assert (x49 x2317))
(assert (x49 x2026))
(assert (x49 x1922))
(assert (x49 x1950))
(assert (x2258 x1728))
(assert (= x1352 (x1902 (x472 x1352))))
(assert (x49 x2043))
(assert (x49 x2265))
(assert (x49 x842))
(assert (= (x28 274184521717934524641157099916833587206) (x472 274184521717934524641157099916833587206)))
(assert (x49 x1805))
(assert (= (x1902 (x472 x1227)) x1227))
(assert (x49 x1))
(assert (x49 x577))
(assert (x2258 x715))
(assert (x49 x1222))
(assert (= x2310 (x1902 (x472 x2310))))
(assert (= (ite (and x2257 x1986) (x1889 x1702) (ite (and x1093 x1197) (x1681 x1702) (x1889 x1702))) (x186 x1702)))
(assert (x49 x197))
(assert (x49 x2103))
(assert (x49 x661))
(assert (x49 x1029))
(assert (= (x1058 x946) 0))
(assert (x49 x1929))
(assert (x49 x1299))
(assert (x49 x1978))
(assert (x49 x1940))
(assert (=> (>= 10000 x830) (= (x28 x830) (x472 x830))))
(assert (=> (>= 10000 x601) (= (x28 x601) (x472 x601))))
(assert (= x2223 (x1902 (x472 x2223))))
(assert (= (x579 (- x386 164)) (x97 (- x386 164))))
(assert (x49 x305))
(assert (x49 x1531))
(assert (x49 x464))
(assert (x49 x331))
(assert (=> (<= x1728 10000) (= (x28 x1728) (x472 x1728))))
(assert (x49 x330))
(assert (=> (>= 10000 x1129) (= (x28 x1129) (x472 x1129))))
(assert (= (x28 142201243) (x472 142201243)))
(assert (x49 x2098))
(assert (x49 x246))
(assert (= x134 x38))
(assert (x2258 x1352))
(assert (x49 x1329))
(assert (x2258 x2100))
(assert (=> (>= 10000 x602) (= (x472 x602) (x28 x602))))
(assert (= x267 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x587) (= (x1112 (x472 x1990) x1315 0) x1306) (>= x587 0) (= x1668 (= 0 x587)) (= (x1112 (x472 x2331) (x28 7) 0) x1315) (= (x1112 (x472 x2100) x1306 0) x1257) (= (x1186 x1257) x587)) (and (=> (and (= x1707 (x959 (- x2331 1))) x1668 (not x1137) (= x1137 (> x1707 0))) x1322) (=> (and (not x1668) (= x2331 x1216)) x368)))))
(assert (x49 x204))
(assert (= x1964 x1277))
(assert (x49 x801))
(assert (= x1187 (and x1993 x535)))
(assert (= x788 (or x2017 x1592)))
(assert (x49 x291))
(assert (= (x1902 (x472 x1808)) x1808))
(assert (x49 x1811))
(assert (x49 x1990))
(assert (= (x1902 (x472 x715)) x715))
(assert (x2258 x1666))
(assert (= (x266 x1349) (ite (and x1986 x2257) (x1582 x1349) (ite (and x1093 x1197) (x1582 x1349) (x465 x1349)))))
(assert (x49 x2126))
(assert (x49 x809))
(assert (x49 x458))
(assert (= (=> (= (> x1573 0) x1043) (and (=> (not x1043) x818) (=> x1043 x2094))) x1476))
(assert (x49 x396))
(assert (= x1386 (or (and x1712 (not x1708)) (and x1882 x1463) (and (not x497) x36))))
(assert (x49 x444))
(assert (= (ite x1253 (ite (and x2033 x574) (x1582 x334) (x461 x334)) (x1582 x334)) (x763 x334)))
(assert (=> (<= x110 10000) (= (x28 x110) (x472 x110))))
(assert (= (+ 1 (x1902 x1841)) (x1902 (x1101 x1841 1))))
(assert (x49 x1570))
(assert (= (x1902 (x472 x1519)) x1519))
(assert (x49 x1939))
(assert (x49 x2061))
(assert (= x1198 (=> (and (= x916 (x786 x2213)) (<= 0 x916) (= x1630 (x1112 (x472 x2275) x270 0)) (= (x1112 (x472 x1996) (x28 7) 0) x270) (= (x1112 (x472 x1389) x1630 0) x2213) (<= x916 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x916 0) x1954)) (and (=> x1954 x1720) (=> (and (= x1029 x1996) (not x1954)) x1206)))))
(assert (x49 x2295))
(assert (x49 x1290))
(assert (x49 x927))
(assert (x2258 x1648))
(assert (x2258 x10))
(assert (x49 x808))
(assert (= (=> (= x24 0) x1060) x1516))
(assert (x49 x1436))
(assert (x49 x332))
(assert (x49 x1938))
(assert (x49 x1895))
(assert (x49 x2055))
(assert (= (x1902 (x28 1000000000000000000)) 1000000000000000000))
(assert (x805 x1808 x2041))
(assert (x49 x1924))
(assert (x49 x623))
(assert (x49 x1949))
(assert (x2258 x1519))
(assert (x2258 x25))
(assert (= x1633 (x1902 (x472 x1633))))
(assert (x49 x534))
(assert (x49 x2320))
(assert (= (x295 (- x386 x1185)) (x1489 (- x386 x1185))))
(assert (x49 x1265))
(assert (x49 x910))
(assert (x49 x1446))
(assert (= x336 (or (and x1152 x1410) (and x380 (not x323)) (and (not x1499) x1281))))
(assert (x49 x1314))
(assert (=> (>= 10000 x1963) (= (x472 x1963) (x28 x1963))))
(assert (x49 x177))
(assert (x49 x1557))
(assert (x2258 x974))
(assert (= (or (and (not x2112) x211) (and x1782 (not x1544)) (and x1911 x941)) x1480))
(assert (x49 x50))
(assert (x49 x1898))
(assert (= (x28 1889567281) (x472 1889567281)))
(assert (x49 x943))
(assert (x49 x2359))
(assert (= x1146 (x1902 (x472 x1146))))
(assert (x49 x2104))
(assert (x2258 x2314))
(assert (x49 x152))
(assert (x49 x348))
(assert (= (x295 (- x608 x1185)) (x1489 (- x608 x1185))))
(assert (x49 x2048))
(assert (= x1782 (and (not x530) x727)))
(assert (= x1746 (or x1343 x695)))
(assert (= x1820 (and x1782 x1544)))
(assert (x49 x897))
(assert (=> (<= x33 10000) (= (x28 x33) (x472 x33))))
(assert (x49 x1317))
(assert (x2258 x683))
(assert (= x705 (=> (= x2282 0) x1687)))
(assert (x49 x247))
(assert (=> (<= x1848 10000) (= (x472 x1848) (x28 x1848))))
(assert (x49 x271))
(assert (x49 x1914))
(assert (= x283 x953))
(assert (=> (>= 10000 x806) (= (x28 x806) (x472 x806))))
(assert (x49 x891))
(assert (= 2258409472 (x1902 (x28 2258409472))))
(assert (x49 x873))
(assert (x2258 x2006))
(assert (= x521 (=> (and (= x1871 (x1112 (x472 x2275) x1588 0)) (<= x1699 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1699 0) (= x1699 (x600 x1871)) (= (x1112 (x472 x1996) (x28 6) 0) x1588) (= (= 0 x1699) x847)) (and (=> (and (= x644 x899) (= (x1112 (x472 x1996) (x28 10) 0) x1064) (= 0 x1015) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x899) (= (x2183 x1752) x899) (not x847) (>= x899 0) (= (x1112 (x472 x2275) x1064 0) x1752)) x2251) (=> x847 x635)))))
(assert (= (or (and x1028 x428) x181) x1467))
(assert (x49 x1254))
(assert (x49 x892))
(assert (x2258 x1848))
(assert (x49 x1633))
(assert (= x2227 (x1902 (x472 x2227))))
(assert (x2258 x2052))
(assert (= (=> (and (= (x1112 (x472 x1897) x7 0) x958) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1601) (= x1897 (x718 1461501637330902918203684832716283019655932542975 x25)) (= x710 (x1112 (x472 x602) x958 0)) (= (= 0 x1601) x1410) (= (x718 1461501637330902918203684832716283019655932542975 x1581) x602) (= x7 (x1112 (x472 x1568) (x28 7) 0)) (>= x1601 0) (= x1601 (x289 x710))) (and (=> (and (= x1568 x201) (not x1410)) x127) (=> (and x1410 (not x780) (= (x959 (- x1568 1)) x1293) (= (> x1293 0) x780)) x646))) x1108))
(assert (= (=> (and (= (< 0 x627) x578) (= (x959 (- x1557 1)) x627)) (and (=> (not x578) x2315) (=> x578 x1968))) x802))
(assert (= (x472 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x28 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x2258 x1166))
(assert (x49 x88))
(assert (= (x1879 x1825) 0))
(assert (x49 x374))
(assert (x49 x1421))
(assert (x49 x581))
(assert (x2258 x2346))
(assert (x49 x1648))
(assert (x49 x1046))
(assert (x49 x227))
(assert (x49 x445))
(assert (x49 x856))
(assert (= (x1902 (x28 842085797)) 842085797))
(assert (x49 x1437))
(assert (x49 x1599))
(assert (x2258 x1387))
(assert (x49 x923))
(assert (x49 x1804))
(assert (x2258 x825))
(assert (x49 x370))
(assert (x49 x1762))
(assert (x49 x1916))
(assert (x49 x1344))
(assert (x49 x1751))
(assert (x49 x1789))
(assert (x2258 x901))
(assert (= x2161 true))
(assert (x49 x1006))
(assert (x49 x1135))
(assert (x49 x2194))
(assert (= (=> (and (= (x959 (- x830 1)) x1650) (= x1754 (< 0 x1650))) (and (=> x1754 x2187) (=> (not x1754) x754))) x2222))
(assert (=> (<= x2223 10000) (= (x472 x2223) (x28 x2223))))
(assert (x49 x2306))
(assert (x49 x1292))
(assert (x2258 x803))
(assert (= (x1902 (x472 x966)) x966))
(assert (x49 x2004))
(assert (= (ite (and x1374 x1964) (x816 x1491) (ite (and (not x1374) x1964 x2159) (x816 x1491) (x1042 x1491))) (x1765 x1491)))
(assert (x49 x1191))
(assert (x49 x1500))
(assert (x49 x1965))
(assert (x49 x2151))
(assert (= (x28 2258409472) (x472 2258409472)))
(assert (x49 x548))
(assert (x49 x2010))
(assert (= (ite (and (not x651) x1538) (x861 x588) (x2085 x588)) (x1210 x588)))
(assert (= (x1890 x118) 0))
(assert (x49 x1860))
(assert (=> (<= x117 10000) (= (x28 x117) (x472 x117))))
(assert (x49 x1624))
(assert (= (=> (and (= (x1112 (x472 x2052) x2133 0) x1777) (= (= x1856 0) x1348) (= (x1112 (x472 x1557) (x28 6) 0) x2133) (<= x1856 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1856 0) (= x1856 (x1321 x1777)) (= (x718 1461501637330902918203684832716283019655932542975 x2006) x2052)) (and (=> x1348 x2347) (=> (and (<= 0 x1327) (= (x1112 (x472 x1557) (x28 10) 0) x744) (= x2088 (x1112 (x472 x1352) x744 0)) (= (x718 1461501637330902918203684832716283019655932542975 x2006) x1352) (not x1348) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1327) (= x1327 (x1375 x2088)) (= x910 0) (= x1327 x755)) x599))) x1761))
(assert (= x2160 (=> (and (= (= 0 x1985) x1262) (or (and (= 0 x714) (= x1159 0) x1262) (and (= x1741 (x1112 (x472 x1985) (x28 9) 0)) (<= 0 x1329) (= x1803 (x1112 (x472 x1990) x1741 0)) (= (x2073 x1852) x1329) (= x1329 x1159) (not x1262) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1329) (= 1 x714) (= x1852 (x1112 (x472 x2100) x1803 0))))) x1817)))
(assert (x49 x1389))
(assert (x49 x299))
(assert (= (x28 1986467848) (x472 1986467848)))
(assert (= (and x673 (not x1937)) x2009))
(assert (x49 x1601))
(assert (x49 x1547))
(assert (= x1552 (=> (and (= x1365 x1629) (not (> x17 18446744073709551615)) (= (x2192 (+ 32 x191)) x1133) (= (x959 (- x2118 4)) x1378) (= x1779 (mod (* x205 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 0 x595) (= x892 x1864) (not (< x399 x470)) (not (> x1864 18446744073709551615)) (= x460 (= x892 x700)) (not (< x399 x729)) (= x1111 (x2192 (+ 36 x2082))) (= (mod (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x781) (= x399 (x2192 (+ 32 x235))) (>= 1461501637330902918203684832716283019655932542975 x1365) (ite x460 (= x205 x892) x460) (not (< 18446744073709551615 x1722)) (= (mod (* 32 x1864) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2079) (not (= x405 468353030)) (= (x2192 (+ (mod (* x483 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 196)) x1185) (= x438 x882) (= x903 (x2192 (+ 32 (x2192 (+ x123 (mod (* 32 x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x399) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1263)) (< x1263 x399)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1263) (<= x399 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x892 (x101 132)) (= x488 x882) (not (= 759532456 x405)) (= x1324 (mod (- (x2192 (+ (mod (* x1807 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x2192 (+ x17 4)) x1128) (= (x2192 (+ x1522 x1779)) x729) (= (x2192 (+ (x2192 (+ (mod (* x1800 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x731)) 32)) x235) (= (x959 (- x399 4)) x846) (= (x959 (- x191 4)) x1722) (= (mod (- (x2192 (+ 32 (mod (* 32 x1800) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1854) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x846) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x846) true) (< x846 128)))) (< x405 911411945) (= x773 (< 0 x892)) (<= 0 x488) (<= 0 x675) (= (x2192 (+ 164 x929)) x470) (= (x2192 (+ (x2192 (+ (mod (* x1807 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x191)) 32)) x2118) (= x1263 (x2192 (+ x1722 35))) (= x205 (x101 x2173)) (not (< 18446744073709551615 x205)) (= x1864 (x101 x1128)) (= x731 (x2192 (+ 32 x1384))) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x399) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x9)) (and (> x399 x9) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x399) (<= x9 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x2192 (+ 68 (mod (* 32 x483) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x123) (= x2173 (x2192 (+ x1722 4))) (= x700 (x101 x2261)) (not (< x399 x73)) (>= 1461501637330902918203684832716283019655932542975 x675) (= (x2192 (+ (mod (* x483 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 164)) x2153) (= x595 x1981) (> x399 163) (= (x959 (- x2118 4)) x17) (<= 0 x1365) (< x405 2293535753) (= x929 (mod (* 32 x892) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1522 (x2192 (+ x1722 36))) (= x2202 (x959 (- x2153 4))) (= x1136 (x2192 (+ 32 x2118))) (not (< 18446744073709551615 x892)) (= x564 (mod (- (x2192 (+ 32 (mod (* x278 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x399) true) (not (> x2265 x399)) (= (x2192 (+ 4 x2082)) x2261) (= (x2192 (+ 36 x17)) x1139) (<= x488 1461501637330902918203684832716283019655932542975) (not (< x405 468353030)) (= x2265 (x2192 (+ x1111 x781))) (< 0 x735) (= x1508 x1188) (not (> x700 18446744073709551615)) (not (= x405 635128645)) (= x1224 (x2192 (+ 35 x2082))) (= x73 (x2192 (+ x1139 x2079))) (not (< x399 4)) (= x405 842085797) (= x1571 (x2192 (+ 32 x903))) (not (> x2082 18446744073709551615)) (= x1427 (x959 (- x191 4))) (= x2235 (mod (- (x2192 (+ 32 (mod (* 32 x483) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x191 (x2192 (+ (x2192 (+ (mod (* x278 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2153)) 32))) (= (x2192 (+ 35 x17)) x9) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x399) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1224)) (< x1224 x399)) (and (> x1224 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x399))) (= (x959 (- x2153 4)) x2082) (= (x618 (x472 274184521717934524641157099916833587206)) x735) (= (x2192 (+ 32 (x2192 (+ x1571 (mod (* x1807 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) x1384)) (and (=> (not x773) x1755) (=> x773 x591)))))
(assert (x49 x1217))
(assert (x2258 x922))
(assert (x49 x1505))
(assert (x49 x2203))
(assert (x49 x1213))
(assert (x49 x1323))
(assert (x49 x203))
(assert (= x1091 (and x847 x2329)))
(assert (=> (>= 10000 x298) (= (x28 x298) (x472 x298))))
(assert (x49 x1246))
(assert (= 604800 (x1902 (x28 604800))))
(assert (x49 x614))
(assert (= x392 (=> (and (= x240 x1764) (= x2058 x2344)) x2233)))
(assert (x49 x974))
(assert (x49 x358))
(assert (= (x1210 x2181) (ite (and (not x651) x1538) (x861 x2181) (x2085 x2181))))
(assert (x49 x1018))
(assert (x49 x53))
(assert (x49 x567))
(assert (x49 x1133))
(assert (x49 x1049))
(assert (x49 x723))
(assert (x49 x483))
(assert (= x1882 (and x497 x36)))
(assert (x49 x547))
(assert (x49 x2275))
(assert (= x1097 (x1902 (x472 x1097))))
(assert (= x372 (=> (and (= (x1112 (x472 x1227) x848 0) x2181) (= (x1112 (x472 x830) (x28 3) 0) x2176) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2090) (= x413 (x699 x189)) (= x1645 (x718 1461501637330902918203684832716283019655932542975 x1581)) (>= x1351 0) (= x1639 (= 0 x1724)) (<= 0 x2090) (= (x1686 x2181) x1351) (= (x718 1461501637330902918203684832716283019655932542975 x25) x798) (= x2090 (x1883 x957)) (= x1227 (x718 1461501637330902918203684832716283019655932542975 x25)) (= (x1112 (x472 x479) x1445 0) x957) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x413) (= (x1112 (x472 x830) (x28 5) 0) x848) (= (x959 (- x413 x2090)) x1724) (= x1611 (x1112 (x472 x798) x2176 0)) (= x966 (x718 1461501637330902918203684832716283019655932542975 x25)) (= (x1112 (x472 x1645) x1611 0) x189) (>= x413 0) (= (x1112 (x472 x147) x2121 0) x1445) (= (x1112 (x472 x966) x1524 0) x2121) (= (x718 1461501637330902918203684832716283019655932542975 x458) x479) (= x1524 (x1112 (x472 x830) (x28 4) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1351) (not (> x2090 x413)) (= x147 (x718 1461501637330902918203684832716283019655932542975 x1581))) (and (=> (and (= (x718 1461501637330902918203684832716283019655932542975 x25) x1054) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1543 x1724)) (= x1129 (x718 1461501637330902918203684832716283019655932542975 x25)) (= x194 (x1112 (x472 x723) x540 0)) (= (> x1319 0) x282) (= 0 x332) (= (x718 1461501637330902918203684832716283019655932542975 x458) x1046) (= x352 (x734 x1269)) (= (x718 1461501637330902918203684832716283019655932542975 x1581) x2001) (= x1780 (x2192 (+ x2077 68))) (<= 0 x1543) (= x2299 (ite (< 115792089237316195423570985008687907853269984665640564039457 x1724) 1 0)) (= x1534 (* x1836 x2035)) (= 0 x801) (= x2022 (x1112 (x472 x830) (x28 11) 0)) (> x1351 0) (= x1644 (x1112 (x472 x1054) x2022 0)) (= (x1112 (x472 x1129) x969 0) x2116) (= (x1112 (x472 x830) (x28 4) 0) x969) (= (x1883 x194) x1543) (= x1652 (x718 1461501637330902918203684832716283019655932542975 x1581)) (= x696 (x2192 (+ x536 128))) (= (> x371 0) x988) (or (not x2141) (and x2141 (= x441 (x2192 (+ x696 x1319))))) (= (x2192 (+ x515 96)) x1269) (not x1639) (or (and (not x282) (= x301 0)) (and (= x154 x1269) x282 (= x1109 x696) (or (and (= x1840 (x2337 x118)) (= (x2192 (+ x2077 64)) x118) x948 (= x902 (< 64 x1319)) (or (and (= (x2192 (+ x2077 96)) x2354) (= x2341 (x2192 (+ x722 128))) (= (x2337 x2354) x1419) (or (and (= x301 128) (= (< 128 x1319) x1405) (= x881 (x2192 (+ x722 160))) (= x990 (x2337 x409)) x108 (= (x2192 (+ x2077 128)) x409) (not x1405)) (and (= 96 x301) (not x108))) (= (> x1319 96) x108) x902) (and (not x902) (= 64 x301))) (= x1019 (x2192 (+ x722 96)))) (and (not x948) (= x301 32))) (= (x2337 x154) x893) (= x948 (< 32 x1319)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1543) x988 (= x1319 (x213 x2077)) (= 1 x2306) (= (x1112 (x472 x365) x1644 0) x507) (= x722 (x2192 (+ 100 x2077))) (= x1292 (+ x1925 x533)) (= (x618 (x472 x1046)) x371) (= x630 (x959 (- x722 x2077))) (= x424 (div x1534 1000000000000000000)) (= x1836 (div x2231 x1351)) (= (x718 1461501637330902918203684832716283019655932542975 x458) x723) (<= 0 x2035) (= x540 (x1112 (x472 x1652) x2116 0)) (<= x2035 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x533 x1724) (= (x718 26959946667150639794667015087019630673637144422540572481103610249215 x352) x880) (= x801 (x718 x2306 x2299)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1836 x2035)) (= (x1113 x507) x2035) (= (mod (* x1724 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2231) (= x536 (x2192 (+ x515 100))) (= (x959 (- x630 32)) x878) (= x1792 (x2192 (+ x880 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= x365 (x718 1461501637330902918203684832716283019655932542975 x458)) (= x2141 (< x1319 x301)) (= x1925 x1543)) x1670) (=> x1639 x392)))))
(assert (x49 x2361))
(assert (x49 x1555))
(assert (x49 x2202))
(assert (x49 x2352))
(assert (x49 x1887))
(assert (x170 x1069))
(assert (x49 x1400))
(assert (= (or (and x184 x2081) x1904) x134))
(assert (x49 x781))
(assert (x49 x2036))
(assert (x49 x2308))
(assert (x49 x230))
(assert (x805 x37 x790))
(assert (x49 x488))
(assert (= (x1879 x161) 0))
(assert (x2258 x117))
(assert (x2258 x1568))
(assert (x49 x906))
(assert (x49 x273))
(assert (x49 x85))
(assert (x49 x1977))
(assert (x49 x2096))
(assert (x49 x1836))
(assert (x49 x2229))
(assert (= x725 x1969))
(assert (x49 x700))
(assert (= x2322 (=> (= x1356 (= x2344 274184521717934524641157099916833587214)) (and (=> (not x1356) x109) (=> (and (= x126 50942633119752846454219349998365661925608737367104304655302372697894809501696) (<= x1096 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1112 (x472 x1764) (x28 1) 0) x1945) (= x1713 1889567281) (not (> 649617121 x1713)) (not x2355) (not (= x1713 649617121)) (= x1764 x1950) (= (x959 (- x1333 4)) x238) (= x566 1) (> x2212 0) (>= x1096 0) (not (< x1333 4)) (<= x1950 1461501637330902918203684832716283019655932542975) x1356 (not (= 826074471 x1713)) (= x2212 (x618 (x472 274184521717934524641157099916833587214))) (= 36 x1333) (= x749 32) (= 36 x1333) (= (x1364 x1945) x1096) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x238) (and (< x238 32) (= true (<= x238 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x2355)) x642)))))
(assert (x49 x1963))
(assert (= x456 (=> (and (= x1568 (x959 (- x830 1))) (= x1499 (< 0 x1568))) (and (=> (not x1499) x646) (=> x1499 x1108)))))
(assert (x49 x1140))
(assert (= (x1902 (x472 x708)) x708))
(assert (x49 x365))
(assert (x2258 x938))
(assert (= (x579 (- x2173 164)) (x97 (- x2173 164))))
(assert (x49 x806))
(assert (x49 x887))
(assert (= 1968616202 (x1902 (x28 1968616202))))
(assert (= x211 (and x1820 x1954)))
(assert (= x93 (or (and x985 x725) (and x1356 x657))))
(assert (= (x1902 (x1101 x1773 1)) (+ 1 (x1902 x1773))))
(assert (x49 x2346))
(assert (= (x229 (- 196 x1133)) (x1040 (- 196 x1133))))
(assert (=> (>= 10000 x2000) (= (x472 x2000) (x28 x2000))))
(assert (=> (<= x708 10000) (= (x472 x708) (x28 x708))))
(assert (x49 x1749))
(assert (x49 x1384))
(assert (x49 x586))
(assert (= x109 true))
(assert (= x1669 (=> (and (not (< x1602 x2084)) (= (x718 1461501637330902918203684832716283019655932542975 x1808) x1174) (= x2084 (x63 x2319)) (>= x2084 0) (= (x1112 (x472 x529) x782 0) x2319) (= x34 (x718 1461501637330902918203684832716283019655932542975 x1808)) (= (x1112 (x472 x1557) (x28 4) 0) x1739) (= (x1112 (x472 x1166) x836 0) x904) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806) (= x297 (x959 (- x1602 x2084))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2084) (= (x718 1461501637330902918203684832716283019655932542975 x2006) x715) (= (x718 1461501637330902918203684832716283019655932542975 x2006) x1166) (= x782 (x1112 (x472 x34) x1278 0)) (>= x1806 0) (= x529 (x718 1461501637330902918203684832716283019655932542975 x37)) (= x1249 (= 0 x297)) (= (x1527 x325) x1602) (= x1806 (x1210 x1742)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1602) (= x823 (x1112 (x472 x1557) (x28 5) 0)) (= (x1112 (x472 x715) x1739 0) x1278) (= (x1112 (x472 x178) x823 0) x1742) (= x325 (x1112 (x472 x1174) x904 0)) (<= 0 x1602) (= (x718 1461501637330902918203684832716283019655932542975 x2006) x178) (= x836 (x1112 (x472 x1557) (x28 3) 0))) (and (=> (and (= x2335 (x959 (- x873 32))) (= (x959 (- x1100 x1010)) x873) (= x822 (x718 1461501637330902918203684832716283019655932542975 x37)) (or (and (= (> x854 32) x2281) (= x668 x672) x774 (or (and (= x811 32) (not x2281)) (and (= (> x854 64) x2272) x2281 (= x1651 (x752 x2324)) (or (and (= x1855 (x2192 (+ 96 x1010))) (= (< 96 x854) x584) (= x2061 (x752 x1855)) (or (and (not x584) (= x811 96)) (and (= (x752 x998) x758) (not x1637) (= x1637 (< 128 x854)) x584 (= x1317 (x2192 (+ x1100 160))) (= (x2192 (+ 128 x1010)) x998) (= 128 x811))) (= (x2192 (+ x1100 128)) x1847) x2272) (and (= x811 64) (not x2272))) (= (x2192 (+ x1010 64)) x2324) (= (x2192 (+ 96 x1100)) x558))) (= (x752 x2026) x1678) (= x2026 x1978)) (and (= 0 x811) (not x774))) (= (* x1250 x1236) x1647) (= x390 (x1112 (x472 x1666) x482 0)) (= (x1112 (x472 x1557) (x28 4) 0) x382) (= x717 (x2192 (+ 68 x1010))) (= (+ x565 x2221) x2203) (= (x618 (x472 x822)) x1940) (= x1924 (div x1647 1000000000000000000)) (= x565 x297) (= (x2192 (+ 100 x1010)) x1100) (= x33 (x718 1461501637330902918203684832716283019655932542975 x37)) (= x1922 (x2192 (+ x975 100))) (= (x1112 (x472 x708) x2044 0) x482) (= (x1112 (x472 x2227) x382 0) x1353) (= (x1112 (x472 x1557) (x28 11) 0) x2044) (= (div x1462 x1806) x1236) (<= 0 x1250) (= x708 (x718 1461501637330902918203684832716283019655932542975 x2006)) (= (x718 26959946667150639794667015087019630673637144422540572481103610249215 x952) x241) (= x262 x2221) (= x854 (x1132 x1010)) (= x2144 (x718 1461501637330902918203684832716283019655932542975 x1808)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x297 x262)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x262) (= (ite (< 115792089237316195423570985008687907853269984665640564039457 x297) 1 0) x331) (= (x1112 (x472 x33) x231 0) x1748) (<= x1250 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1703 (x2192 (+ x241 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= (x63 x1748) x262) (= x995 (x718 x2076 x331)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1236 x1250)) (= 0 x254) (= x774 (> x854 0)) (= x1250 (x1113 x390)) x2154 (not x1249) (= (x1112 (x472 x938) x1353 0) x231) (= x828 (< x854 x811)) (>= x262 0) (= x672 (x2192 (+ 128 x1922))) (or (and (= (x2192 (+ x854 x672)) x2200) x828) (not x828)) (= (x718 1461501637330902918203684832716283019655932542975 x1808) x938) (= x1462 (mod (* x297 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x718 1461501637330902918203684832716283019655932542975 x37) x1666) (= x2076 1) (= (x718 1461501637330902918203684832716283019655932542975 x2006) x2227) (< 0 x1806) (= 0 x995) (= (x2192 (+ x975 96)) x1978) (= x952 (x2101 x1978)) (= x2154 (> x1940 0))) x1117) (=> x1249 x45)))))
(assert (= x1650 (x1902 (x472 x1650))))
(assert (= x953 x1170))
(assert (= (x1902 (x472 x550)) x550))
(assert (x49 x307))
(assert (x49 x1736))
(assert (x49 x478))
(assert (x49 x437))
(assert (x2258 x708))
(assert (x49 x1484))
(assert (x49 x2076))
(assert (=> (<= x2256 10000) (= (x28 x2256) (x472 x2256))))
(assert (= 0 (x1879 x491)))
(assert (=> (>= 10000 x1652) (= (x472 x1652) (x28 x1652))))
(assert (x11 x304 x1918))
(assert (x951 x1632 x1150 x728 x2122))
(assert (= x1964 (or x70 (and x1951 x1906))))
(assert (x49 x1363))
(assert (= x2006 (x1902 (x472 x2006))))
(assert (x49 x377))
(assert (x49 x1603))
(assert (x49 x1473))
(assert (= (and x725 (not x985)) x657))
(assert (x49 x399))
(assert (x49 x1011))
(assert (x49 x1382))
(assert (x49 x2130))
(assert (= (x472 274184521717934524641157099916833587218) (x28 274184521717934524641157099916833587218)))
(assert (= x2017 (or (and x1542 (not x611)) (and (not x79) x730))))
(assert (x49 x159))
(assert (x2258 x529))
(assert (x49 x447))
(assert (= x1060 (=> (and (or (and (not x2345) (= x193 (x2073 x311)) (= x193 x1815) (<= 0 x193) (= x311 (x1112 (x472 x330) x689 0)) (= x548 1) (= x689 (x1112 (x472 x683) x2196 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x193) (= x330 (x718 1461501637330902918203684832716283019655932542975 x1808)) (= x2196 (x1112 (x472 x24) (x28 9) 0)) (= x683 (x718 1461501637330902918203684832716283019655932542975 x2006))) (and (= x1815 0) (= x548 0) x2345)) (= x2345 (= 0 x24))) x736)))
(assert (= x1868 (=> (and (<= 0 x1033) (= (= x1033 0) x76) (<= x1033 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x863 (x1112 (x472 x1996) (x28 6) 0)) (= (x1112 (x472 x2275) x863 0) x557) (= (x600 x557) x1033)) (and (=> (and (= x1256 x1996) (not x76)) x1161) (=> x76 x624)))))
(assert (x2258 x24))
(assert (x2258 x1996))
(assert (x49 x450))
(assert (= (x1040 (- x2261 x1133)) (x229 (- x2261 x1133))))
(assert (= (or (and (not x2328) x354) (and (not x1463) x1882)) x869))
(assert (x49 x1471))
(assert (x49 x960))
(assert (x49 x1158))
(assert (x49 x908))
(assert (= (x472 1461501637330902918203684832716283019655932542976) (x28 1461501637330902918203684832716283019655932542976)))
(assert (x49 x520))
(assert (= 274184521717934524641157099916833587206 (x1902 (x28 274184521717934524641157099916833587206))))
(assert (x49 x1973))
(assert (x49 x1744))
(assert (= x526 (x1902 (x472 x526))))
(assert (x49 x946))
(assert (x49 x990))
(assert (= (or x869 x1386) x181))
(assert (= 759532456 (x1902 (x28 759532456))))
(assert (x49 x216))
(assert (= (=> (and (= (x527 (x472 274184521717934524641157099916833587218)) x1041) (= x829 x1629) (>= x240 0) (= (< 0 (x618 (x472 274184521717934524641157099916833587218))) x970) (= x1027 (> (x618 (x472 274184521717934524641157099916833587206)) 0)) (>= x829 0) x970 (= (x527 (x472 274184521717934524641157099916833587214)) x224) (= x791 x4) (<= 0 x224) (>= 1461501637330902918203684832716283019655932542975 x2058) (<= x791 1461501637330902918203684832716283019655932542975) (<= 0 x2058) (= x348 x1135) (= x234 (< 0 (x618 (x472 274184521717934524641157099916833587214)))) (<= 0 x1041) (>= 1461501637330902918203684832716283019655932542975 x829) (>= x932 0) (= x932 (x527 (x472 274184521717934524641157099916833587206))) x234 (<= x240 1461501637330902918203684832716283019655932542975) (<= 0 x1135) (<= 0 x791) (= x317 x2314) (>= 1461501637330902918203684832716283019655932542975 x1135) x1027) x226) x1683))
(assert (x49 x587))
(assert (= (x229 (- x1128 x1133)) (x1040 (- x1128 x1133))))
(assert (x49 x702))
(assert (x49 x161))
(assert (= 243137395 (x1902 (x28 243137395))))
(assert (= (x1902 (x472 x529)) x529))
(assert (= x1441 (=> (and (= (= 0 x130) x1894) (not (= x212 0)) (= (> x879 0) x285) (or (and (= x1615 96) x1894) (and (not x1894) (= (x2192 (+ 96 x722)) x1939) (= x696 x1615))) (= x879 (x2184 x1615)) x1444 (= x1444 (< (x1283 (x472 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and (= x1023 x768) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2095) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2095)) (> 32 x2095)))) x285 (= x2095 (x2184 x1615)) (= (not x511) x2309) (= (x2192 (+ 32 x1615)) x946) (= x511 (= x768 0)) (= (ite x2309 1 0) x1023) (< 0 x768) (= x768 (x114 x946))) (not x285)) (= x3 (x2225 (x472 x1046)))) x392)))
(assert (x49 x606))
(assert (= x2168 (=> (and (>= x1127 0) (= (x132 x277) x1991) (<= 0 x410) (= (x1101 x2259 1) x1730) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1127) (= x1127 (x2023 x1730)) (or x1920 (and (= (x1112 (x472 x1573) (x28 10) 0) x502) (= x1567 (x1112 (x472 x1990) x502 0)) (not x1920))) (= (> x1991 x410) x523) (= (x2192 (+ x772 32)) x277) (or (and x279 (= (x1112 (x472 x1573) (x28 6) 0) x44) (= x1005 (x1112 (x472 x1990) x44 0))) (and (= x709 (x1112 (x472 x1573) (x28 5) 0)) (= x2316 x385) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1061) (= x258 (x1112 (x472 x1573) (x28 6) 0)) (< (+ x1061 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1112 (x472 x1990) x709 0) x546) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1098 x1935)) (= x1209 (x1112 (x472 x1990) x258 0)) (= x1892 x1061) (<= 0 x1061) (= x2316 (* x1098 x1935)) (= (x2085 x546) x1061) (not x279) (= x385 x1168) (= (+ x1168 x1892) x105))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x410) (= x313 (x740 x2259)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x313) (= x843 (x1112 (x472 x1573) (x28 6) 0)) (= x410 (x1321 x1577)) (= x1920 (= x1511 0)) (or (and (= x561 (x132 x277)) (or (and (not x1721) (= x1188 x207)) (and x1721 (= x575 x207) (= x575 (x132 x277)))) (= (= x410 0) x104) (or (and (= x1927 (x959 (- x207 x410))) (= (ite (> 604800 x1927) x1927 604800) x41) (not x104) (= x1165 604800) (= x41 x1935) (not (> x410 x207))) (and (not (< x207 x39)) (= (x474 x772) x39) (= x693 (x959 (- x207 x39))) (= x693 x1935) x104)) x523 (= (> x1188 x561) x1721)) (and (= 0 x1935) (not x523))) (= x1577 (x1112 (x472 x1990) x843 0)) (<= 0 x313) (= x2259 (x1112 (x472 x1573) (x28 1) 0)) (= (= 0 x1935) x279) (= (x2192 (+ x772 64)) x2136)) x1641)))
(assert (= x25 (x1902 (x472 x25))))
(assert (x49 x1786))
(assert (x49 x762))
(assert (= 0 (x1347 x716)))
(assert (x2258 x822))
(assert (= x2175 (=> (and (= x991 (= x1643 0)) (= x1059 (= 0 x2171)) (or (and (>= x1031 0) (or (and x2158 (= x1426 x2269)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1155 x2171)) (= x90 x1176) (= x1998 (x1112 (x472 x2275) x1035 0)) (= (+ x1047 x1118) x2338) (= x1118 x1905) (<= x1905 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x2158) (= x293 (x1112 (x472 x1389) x1998 0)) (= x1905 (x1765 x293)) (= x2269 x1426) (= x1047 x90) (= (* x2171 x1155) x1176) (= (x1112 (x472 x1996) (x28 3) 0) x1035) (>= x1905 0) (< (+ x90 x1905) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= x2158 (= 0 x1155)) (= (x2192 (+ x1144 32)) x1895) (= x443 (x740 x864)) (= x833 (x1101 x864 1)) (= x143 (x1112 (x472 x1389) x179 0)) (not x1059) (= x387 (x1112 (x472 x1996) (x28 7) 0)) (= (x1112 (x472 x1996) (x28 1) 0) x864) (= (x2192 (+ x1144 64)) x1426) (<= x547 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1698 (x172 x1895)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x443) (= (x786 x143) x547) (<= x1031 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1031 (x2023 x833)) (or (and (= (> x1188 x210) x1153) (or (and (= x1447 (x172 x1895)) (= x1265 x1447) x1153) (and (not x1153) (= x1265 x1188))) (or (and (= (x959 (- x1265 x547)) x1456) (= (ite (> 604800 x1456) x1456 604800) x1587) (= x1155 x1587) (= x1077 604800) (not x366) (not (< x1265 x547))) (and (not (> x1225 x1265)) (= (x959 (- x1265 x1225)) x1226) x366 (= (x1537 x1144) x1225) (= x1155 x1226))) x165 (= (= x547 0) x366) (= (x172 x1895) x210)) (and (not x165) (= x1155 0))) (= x179 (x1112 (x472 x2275) x387 0)) (<= 0 x443) (<= 0 x547) (= x165 (> x1698 x547))) (and x1059 (= x1144 x2269)))) x521)))
(assert (x49 x491))
(assert (x2258 x365))
(assert (x49 x1655))
(assert (= 274184521717934524641157099916833587214 (x1902 (x28 274184521717934524641157099916833587214))))
(assert (x49 x1848))
(assert (x49 x519))
(assert (x49 x1703))
(assert (=> (<= x1693 10000) (= (x28 x1693) (x472 x1693))))
(assert (x49 x1448))
(assert (x49 x703))
(assert (= (x1902 (x472 x906)) x906))
(assert (= (x2031 (- x1189 x1136)) (x1578 (- x1189 x1136))))
(assert (x49 x433))
(assert (x49 x2310))
(assert (x49 x147))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1902 (x28 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x49 x2190))
(assert (x49 x1530))
(assert (= (x1902 (x472 x1988)) x1988))
(assert (x49 x2079))
(assert (x49 x513))
(assert (= x2094 (=> (and (<= 0 x1255) (= (x1112 (x472 x1573) (x28 6) 0) x1997) (= (= 0 x1255) x611) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1255) (= x1255 (x1321 x1831)) (= x1831 (x1112 (x472 x1990) x1997 0))) (and (=> x611 x1341) (=> (and (= x1573 x1140) (not x611)) x233)))))
(assert (x49 x1629))
(assert (x49 x1927))
(assert (= (x1040 (- 132 x1133)) (x229 (- 132 x1133))))
(assert (= x1302 (and (not x1243) x868)))
(assert (x49 x105))
(assert (x49 x768))
(assert (x49 x2093))
(assert (x170 x633))
(assert (x49 x1193))
(assert (= (=> (= x1916 0) x1470) x818))
(assert (x49 x803))
(assert (x49 x1130))
(assert (x49 x601))
(assert (x49 x924))
(assert (= (x1879 x1753) 0))
(assert (=> (>= 10000 x348) (= (x472 x348) (x28 x348))))
(assert (= (x1578 (- x148 x1136)) (x2031 (- x148 x1136))))
(assert (x49 x2338))
(assert (= x127 (=> (= x1158 x201) x1012)))
(assert (x49 x871))
(assert (x49 x1718))
(assert (= (x2031 (- x2126 x1136)) (x1578 (- x2126 x1136))))
(assert (x2258 x84))
(assert (= (x1902 (x472 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (x49 x222))
(assert (=> (<= x398 10000) (= (x28 x398) (x472 x398))))
(assert (x2258 x602))
(assert (x2258 x2294))
(assert (= x1899 (or x1480 x257)))
(assert (= x70 (or x1087 x379)))
(assert (x49 x494))
(assert (= (x1902 (x472 x520)) x520))
(assert (x49 x2174))
(assert (= (x97 (- x1417 164)) (x579 (- x1417 164))))
(assert (x2258 x178))
(assert (x49 x2214))
(assert (x49 x298))
(assert (x49 x24))
(assert (= (and (not x496) x1271) x2209))
(assert (x49 x1642))
(assert (x49 x2294))
(assert (= (ite (and x1374 x1964) (x816 x293) (ite (and x1964 x2159 (not x1374)) (x816 x293) (x1042 x293))) (x1765 x293)))
(assert (x49 x1335))
(assert (x49 x1698))
(assert (x49 x416))
(assert (= (x295 (- x2173 x1185)) (x1489 (- x2173 x1185))))
(assert (x49 x1560))
(assert (x49 x2139))
(assert (=> (>= 10000 x396) (= (x28 x396) (x472 x396))))
(assert (x49 x1204))
(assert (= true x1145))
(assert (x49 x2003))
(assert (= (=> (and (= x1942 x197) (= (x1835 128) x197) (not (= 0 x566)) (not (or (and (> 32 x749) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x749) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x749)))) (=> (and (= x2135 x1598) (= x1942 x1266) (= x1907 x483) (= x1800 x997) (= x1807 x1121) (= x1143 x278) (= x1809 x819) (= x516 x320) (= x1053 x1330)) x1552)) x642))
(assert (= (x472 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x28 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (<= x25 10000) (= (x472 x25) (x28 x25))))
(assert (= (=> (and (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x391) (= x1726 (= 0 x391)) (= x391 (x1375 x753)) (<= 0 x391) (not x983) (= (x1112 (x472 x10) (x28 10) 0) x449) (= (x718 1461501637330902918203684832716283019655932542975 x2006) x963) (or (and (= 1 x910) (not x1726) (= x391 x755)) (and x1726 (= x910 0) (= x755 0))) (= x753 (x1112 (x472 x963) x449 0))) (and x983 (= 0 x910) (= 0 x755))) (= (= x10 0) x983)) x599) x620))
(assert (x49 x916))
(assert (x49 x2297))
(assert (= x974 (x1902 (x472 x974))))
(assert (= 0 (x1801 x2026)))
(assert (x49 x696))
(assert (x49 x2300))
(assert (x2258 x550))
(assert (x49 x1418))
(assert (x49 x1743))
(assert (x49 x804))
(assert (= 18446744073709551615 (x1902 (x28 18446744073709551615))))
(assert (= (x1902 (x472 x178)) x178))
(assert (= (x1902 (x28 2293535753)) 2293535753))
(assert (x49 x783))
(assert (x49 x306))
(assert (= (x295 (- x1417 x1185)) (x1489 (- x1417 x1185))))
(assert (x49 x2135))
(assert (x49 x175))
(assert (x2258 x1046))
(assert (= (x472 115792089237316195423570985008687907853269984665640564039457) (x28 115792089237316195423570985008687907853269984665640564039457)))
(assert (x2258 x1693))
(assert (= x1323 (x1902 (x472 x1323))))
(assert (=> (<= x152 10000) (= (x28 x152) (x472 x152))))
(assert (x49 x260))
(assert (= (x97 (- x608 164)) (x579 (- x608 164))))
(assert (x49 x1088))
(assert (x49 x2164))
(assert (x49 x931))
(assert (x49 x441))
(assert (x49 x1897))
(assert (x2258 x330))
(assert (= (x472 69947311) (x28 69947311)))
(assert (= 0 (x1890 x2354)))
(assert (=> (>= 10000 x84) (= (x28 x84) (x472 x84))))
(assert (x49 x1988))
(assert (x49 x235))
(assert (x49 x935))
(assert (x49 x409))
(assert (x49 x340))
(assert (x49 x749))
(assert (= x591 (=> (and (< 0 x892) (> x1864 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x248) (>= x248 0) (>= x1014 0) (= (x1186 x524) x248) (>= 1461501637330902918203684832716283019655932542975 x2100) (< 0 x205) (= (x101 x1189) x2100) (= (x101 x1417) x1677) (< x1573 x1014) (= x1522 x1417) (< 0 x700) (= x386 x1111) (= (x101 164) x1573) (= (x1112 (x472 x2100) x302 0) x524) (= (x101 x386) x1990) (<= x1990 1461501637330902918203684832716283019655932542975) (= (x1112 (x472 x1573) (x28 7) 0) x287) (= x1139 x1189) (= (< 0 x248) x1951) (<= x1677 1461501637330902918203684832716283019655932542975) (<= x1014 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1112 (x472 x1990) x287 0) x302)) (and (=> (not x1951) x855) (=> (and (>= x2151 0) (= x1159 x2151) (= (x1112 (x472 x1990) x196 0) x414) (= 0 x714) (= x196 (x1112 (x472 x1573) (x28 9) 0)) (= x890 (x1112 (x472 x2100) x414 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2151) x1951 (= (x2073 x890) x2151)) x1817)))))
(assert (x49 x1568))
(assert (= x1387 (x1902 (x472 x1387))))
(assert (x49 x1740))
(assert (= (=> (and (not x1562) (= (< 2 x892) x1562)) x1755) x2204))
(assert (x49 x1780))
(assert (x49 x1784))
(assert (= 274184521717934524641157099916833587214 (x1902 (x472 274184521717934524641157099916833587214))))
(assert (= 649617121 (x1902 (x28 649617121))))
(assert (x49 x812))
(assert (=> (>= 10000 x2275) (= (x28 x2275) (x472 x2275))))
(assert (= x2315 (=> (= 0 x10) x620)))
(assert (= x650 (=> (= (= x1514 274184521717934524641157099916833587214) x874) (and (=> (and (= x1465 1889567281) (= x1310 36) (= x1003 32) (not (< x1465 649617121)) (<= x1425 1461501637330902918203684832716283019655932542975) (= 36 x1310) (= (x959 (- x1310 4)) x1570) (not (> 4 x1310)) x874 (not (= 649617121 x1465)) (not (= 826074471 x1465)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1570) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1570)) (< x1570 32))) x1735) (<= 0 x2190) (= (x1443 x1613) x2190) (<= x2190 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1913 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x222 (x618 (x472 274184521717934524641157099916833587214))) (< 0 x222) (= x1613 (x1112 (x472 x803) (x28 1) 0)) (not x1735) (= 1 x2049) (= x1425 x803)) x1550) (=> (not x874) x1320)))))
(assert (x49 x1032))
(assert (x49 x110))
(assert (=> (<= x1568 10000) (= (x472 x1568) (x28 x1568))))
(assert (x49 x1393))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1902 (x28 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (x49 x592))
(assert (x49 x301))
(assert (x49 x1358))
(assert (= 0 (x200 x1744)))
(assert (= x1968 (=> (and (<= 0 x992) (<= x992 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1982 (= x992 0)) (= (x1112 (x472 x627) (x28 6) 0) x590) (= x1219 (x718 1461501637330902918203684832716283019655932542975 x2006)) (= (x1321 x2) x992) (= (x1112 (x472 x1219) x590 0) x2)) (and (=> (and (= x627 x2217) (not x1982)) x1498) (=> (and (= (> x2194 0) x1521) x1982 (not x1521) (= (x959 (- x627 1)) x2194)) x2315)))))
(assert (x49 x1233))
(assert (= (x28 826074471) (x472 826074471)))
(assert (= (=> (and (not (= x1193 69947311)) (<= x1230 1461501637330902918203684832716283019655932542975) (<= x1014 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1230) (> x388 0) (= x1188 x2188) (not (= x1193 87118632)) (= (x1112 (x472 x2006) x376 0) x1576) (>= x1757 0) (<= x37 1461501637330902918203684832716283019655932542975) (<= 0 x1591) (= x1028 (< 0 x1591)) (= x1183 x203) (>= 1461501637330902918203684832716283019655932542975 x1757) (= (x618 (x472 274184521717934524641157099916833587206)) x388) (>= 1461501637330902918203684832716283019655932542975 x2006) (= (x1186 x896) x1591) (= 243137395 x1193) (>= x203 0) (< x1193 911411945) (= (x1112 (x472 x1557) (x28 7) 0) x376) (>= 1461501637330902918203684832716283019655932542975 x1808) (= x1629 x1230) (>= x1014 0) (= (x1112 (x472 x1808) x1576 0) x896) (= x637 x1981) (= 0 x637) (< x1557 x1014) (not (= x1193 142201243)) (= x1183 x438) (<= x1591 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 2293535753 x1193) (<= x203 1461501637330902918203684832716283019655932542975) (> 468353030 x1193)) (and (=> (and (= (x1112 (x472 x1557) (x28 9) 0) x764) (= x88 (x2073 x1526)) (= x1633 (x718 1461501637330902918203684832716283019655932542975 x2006)) (= x88 x1815) x1028 (>= x88 0) (= x1526 (x1112 (x472 x712) x1535 0)) (= x1535 (x1112 (x472 x1633) x764 0)) (<= x88 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x712 (x718 1461501637330902918203684832716283019655932542975 x1808)) (= 0 x548)) x736) (=> (not x1028) x322))) x345))
(assert (x49 x1440))
(assert (x49 x963))
(assert (x49 x841))
(assert (= x535 (and x898 x2040)))
(assert (x49 x1815))
(assert (x49 x1099))
(assert (x49 x1061))
(assert (= (x1902 (x472 x50)) x50))
(assert (x49 x1688))
(assert (= x429 (=> (and x2321 (or (and (= (ite x99 1 0) x1688) (= x223 (x5 x703)) (= (x1662 x1432) x107) (not (or (and (< x107 32) (= true (<= x107 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x107))) (= (not x1733) x99) (= x1733 (= x223 0)) (= (x2192 (+ x1432 32)) x703) x342 (< 0 x223) (= x223 x1688)) (not x342)) (= x2064 (x219 (x472 274184521717934524641157099916833587206))) (not (= x1756 0)) (= x623 x1144) (= (> x2065 0) x342) (= x2065 (x1662 x1432)) (= (< (x219 (x472 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2321) (= (= 0 x1798) x800) (= (x840 (x472 x1677)) x2210) (or (and (= (x2192 (+ x1798 63)) x1632) (= x2205 (x2192 (+ x676 x2246))) (not x800) (= x2246 x1432) (= (x2192 (+ 96 x2214)) x2129) (= x623 x2205) (= (x718 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1632) x676)) (and (= x1432 96) (= x623 x2246) x800))) x2053)))
(assert (=> (<= x550 10000) (= (x28 x550) (x472 x550))))
(assert (x49 x1750))
(assert (x49 x1581))
(assert (= (=> (and (<= x792 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x792 (x1286 x907)) (>= x792 0) (= (= x792 0) x612) (= x907 (x1112 (x472 x152) x554 0)) (= x152 (x718 1461501637330902918203684832716283019655932542975 x25)) (= (x1112 (x472 x830) (x28 6) 0) x554)) (and (=> (and (= x830 x1553) (not x612)) x1075) (=> x612 x2222))) x1154))
(assert (x49 x1591))
(assert (x170 x2006))
(assert (x49 x1383))
(assert (x49 x945))
(assert (x49 x2052))
(assert (x49 x107))
(assert (= 0 (x1879 x1299)))
(assert (x49 x2115))
(assert (x49 x1666))
(assert (x170 x331))
(assert (x49 x210))
(assert (=> (<= x1985 10000) (= (x472 x1985) (x28 x1985))))
(assert (x49 x729))
(assert (x49 x1183))
(assert (x49 x6))
(assert (x49 x30))
(assert (x49 x1606))
(assert (x49 x87))
(assert (=> (<= x1555 10000) (= (x28 x1555) (x472 x1555))))
(assert (x49 x1111))
(assert (= (=> (and (= x1326 (= x1036 0)) (or x1326 (and (= (x718 1461501637330902918203684832716283019655932542975 x1581) x412) (not x1326) (= (x718 1461501637330902918203684832716283019655932542975 x25) x2361))) (or (and (= 128 x515) (= (x718 1461501637330902918203684832716283019655932542975 x25) x577) (= x81 (x718 1461501637330902918203684832716283019655932542975 x1581)) x2249) (and (= x2071 (x2023 x1381)) (<= 0 x1223) (= x1381 (x1101 x1816 1)) (= x1558 (x1112 (x472 x806) x2119 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1446) (= (x289 x1558) x1223) (>= x1446 0) (= (< x1223 x159) x327) (<= 0 x2071) (= x218 (x718 1461501637330902918203684832716283019655932542975 x25)) (not x2249) (or (and (= 192 x515) (<= x271 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x271 0) (= x363 (x718 1461501637330902918203684832716283019655932542975 x25)) (= (x718 1461501637330902918203684832716283019655932542975 x1581) x2294) (= x1747 x1397) (= x1397 x1428) (= x271 (x1527 x431)) (= x271 x1016) (= (+ x1016 x1747) x1402) (not x888) (= x1617 (x1112 (x472 x830) (x28 3) 0)) (= (x718 1461501637330902918203684832716283019655932542975 x1581) x1947) (= x2223 (x718 1461501637330902918203684832716283019655932542975 x25)) (= (* x274 x2093) x1428) (= x431 (x1112 (x472 x2294) x124 0)) (< (* x274 x2093) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (+ x1397 x271) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1112 (x472 x2223) x1617 0) x124)) (and (= (x718 1461501637330902918203684832716283019655932542975 x1581) x827) (= x889 (x718 1461501637330902918203684832716283019655932542975 x25)) x888 (= 192 x515))) (= (x401 160) x159) (= (x1112 (x472 x218) x1564 0) x2119) (<= x2071 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x888 (= 0 x2093)) (or (and (= (> x1188 x310) x2147) (or (and (not (> x2215 x1689)) (= x2093 x1122) x2326 (= x2215 (x362 128)) (= (x959 (- x1689 x2215)) x1122)) (and (not (> x1223 x1689)) (= x2093 x1983) (= (x959 (- x1689 x1223)) x1838) (= (ite (> 604800 x1838) x1838 604800) x1983) (not x2326) (= 604800 x1017))) (= (= 0 x1223) x2326) (or (and (not x2147) (= x1689 x1188)) (and (= x1689 x1898) x2147 (= (x401 160) x1898))) x327 (= (x401 160) x310)) (and (not x327) (= x2093 0))) (= x1564 (x1112 (x472 x830) (x28 7) 0)) (= x1816 (x1112 (x472 x830) (x28 1) 0)) (= (x718 1461501637330902918203684832716283019655932542975 x1581) x806) (= x1446 (x740 x1816)) (<= x1223 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (= 0 x274) x2249)) x1528) x1518))
(assert (x49 x1532))
(assert (x49 x1640))
(assert (x49 x965))
(assert (= x2052 (x1902 (x472 x2052))))
(assert (x49 x1632))
(check-sat)
