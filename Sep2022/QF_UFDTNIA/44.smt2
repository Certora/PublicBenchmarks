(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x881 0)) (((x87 (x56 Int)) (x295 (x146 x881) (x835 x881) (x823 Int)) (x443 (x819 x881) (x10 Int)))))
(declare-fun x526 () Int)
(declare-fun x212 () Int)
(declare-fun x82 () Int)
(declare-fun x783 () Int)
(declare-fun x913 () Int)
(declare-fun x40 () Int)
(declare-fun x334 () Int)
(declare-fun x277 () Int)
(declare-fun x787 () Int)
(declare-fun x438 () Bool)
(declare-fun x652 (Int) Int)
(declare-fun x313 () Int)
(declare-fun x925 () x881)
(declare-fun x222 () Bool)
(declare-fun x377 () Bool)
(declare-fun x190 () x881)
(declare-fun x24 () Int)
(declare-fun x431 () Int)
(declare-fun x727 () Bool)
(declare-fun x420 () Bool)
(declare-fun x31 () Int)
(declare-fun x416 () Int)
(declare-fun x905 () Int)
(declare-fun x475 () Int)
(declare-fun x479 () Bool)
(declare-fun x8 () Int)
(declare-fun x466 () Int)
(declare-fun x761 () Int)
(declare-fun x917 () Int)
(declare-fun x48 (x881) Int)
(declare-fun x666 () Int)
(declare-fun x379 () Int)
(declare-fun x565 () Bool)
(declare-fun x38 () Int)
(declare-fun x350 () Int)
(declare-fun x612 () Int)
(declare-fun x330 () Int)
(declare-fun x760 () Int)
(declare-fun x923 () Int)
(declare-fun x508 () Int)
(declare-fun x696 (x881) Int)
(declare-fun x603 () Bool)
(declare-fun x59 () Int)
(declare-fun x576 () Int)
(declare-fun x545 () Int)
(declare-fun x732 () Bool)
(declare-fun x734 () Int)
(declare-fun x877 () x881)
(declare-fun x725 () Int)
(declare-fun x380 () Bool)
(declare-fun x938 (Int) Int)
(declare-fun x737 () Int)
(declare-fun x287 () Bool)
(declare-fun x130 () Int)
(declare-fun x44 () Int)
(declare-fun x704 () x881)
(declare-fun x5 () Int)
(declare-fun x367 () Int)
(declare-fun x498 () Bool)
(declare-fun x35 () Int)
(declare-fun x385 () Int)
(declare-fun x862 () Bool)
(declare-fun x504 () Int)
(declare-fun x202 () Bool)
(declare-fun x329 () Bool)
(declare-fun x133 () Bool)
(declare-fun x676 () Int)
(declare-fun x927 () Bool)
(declare-fun x257 () Bool)
(declare-fun x816 () Int)
(declare-fun x240 () Int)
(declare-fun x335 () Int)
(declare-fun x15 () Bool)
(declare-fun x396 () x881)
(declare-fun x890 () Bool)
(declare-fun x176 (Int) Int)
(declare-fun x436 () Int)
(declare-fun x542 () Int)
(declare-fun x549 () Int)
(declare-fun x415 (Int) Int)
(declare-fun x667 (Int) Int)
(declare-fun x567 () Bool)
(declare-fun x328 () Int)
(declare-fun x236 () Int)
(declare-fun x72 () Int)
(declare-fun x600 (Int) Int)
(declare-fun x116 () Int)
(declare-fun x640 () Int)
(declare-fun x206 () Int)
(declare-fun x102 () Int)
(declare-fun x149 () x881)
(declare-fun x619 () Int)
(declare-fun x60 () Int)
(declare-fun x879 (x881) Int)
(declare-fun x892 () Int)
(declare-fun x799 () Int)
(declare-fun x752 () Int)
(declare-fun x47 () Int)
(declare-fun x378 () Int)
(declare-fun x457 () Int)
(declare-fun x629 () Int)
(declare-fun x476 () Int)
(declare-fun x746 () Int)
(declare-fun x754 (Int) Int)
(declare-fun x643 () Int)
(declare-fun x874 () Int)
(declare-fun x376 () Int)
(declare-fun x627 () Int)
(declare-fun x546 () x881)
(declare-fun x450 () Int)
(declare-fun x607 () Int)
(declare-fun x159 () Bool)
(declare-fun x142 (x881) Int)
(declare-fun x693 () Bool)
(declare-fun x217 () Int)
(declare-fun x25 () Int)
(declare-fun x897 () Int)
(declare-fun x136 (x881) Int)
(declare-fun x550 () Int)
(declare-fun x69 () x881)
(declare-fun x67 () Int)
(declare-fun x288 () Int)
(declare-fun x605 (Int) Int)
(declare-fun x247 () Int)
(declare-fun x316 () Int)
(declare-fun x21 () Int)
(declare-fun x829 () Int)
(declare-fun x166 () Int)
(declare-fun x175 () Int)
(declare-fun x836 () Bool)
(declare-fun x337 () Int)
(declare-fun x813 (Int) Int)
(declare-fun x85 () Bool)
(declare-fun x364 () x881)
(declare-fun x298 () Bool)
(declare-fun x461 () Int)
(declare-fun x606 () Int)
(declare-fun x515 () Int)
(declare-fun x941 () Int)
(declare-fun x797 () Int)
(declare-fun x722 () Int)
(declare-fun x809 () Int)
(declare-fun x762 () Int)
(declare-fun x502 () Int)
(declare-fun x112 () Bool)
(declare-fun x738 () Bool)
(declare-fun x518 () Bool)
(declare-fun x812 () Int)
(declare-fun x51 () Int)
(declare-fun x594 () Bool)
(declare-fun x19 () Int)
(declare-fun x29 () Bool)
(declare-fun x800 () Int)
(declare-fun x97 () Int)
(declare-fun x22 () Int)
(declare-fun x898 () Int)
(declare-fun x28 () Int)
(declare-fun x49 () Int)
(declare-fun x375 () Int)
(declare-fun x669 () Bool)
(declare-fun x39 () Int)
(declare-fun x58 () Int)
(declare-fun x209 () Int)
(declare-fun x659 () Int)
(declare-fun x293 () Int)
(declare-fun x921 () Int)
(declare-fun x821 () Int)
(declare-fun x882 () Int)
(declare-fun x414 () Int)
(declare-fun x634 () Int)
(declare-fun x814 () Int)
(declare-fun x776 () Int)
(declare-fun x670 () Int)
(declare-fun x464 (Int) Int)
(declare-fun x41 () Int)
(declare-fun x108 () Int)
(declare-fun x575 () Bool)
(declare-fun x852 () Int)
(declare-fun x230 () Int)
(declare-fun x207 () Int)
(declare-fun x625 () Bool)
(declare-fun x495 () Int)
(declare-fun x106 () Int)
(declare-fun x122 () Int)
(declare-fun x791 (x881) Int)
(declare-fun x943 () Int)
(declare-fun x541 () Bool)
(declare-fun x733 () Int)
(declare-fun x650 () Bool)
(declare-fun x90 () Int)
(declare-fun x99 () Bool)
(declare-fun x465 () Int)
(declare-fun x609 () Int)
(declare-fun x664 () Int)
(declare-fun x483 () Int)
(declare-fun x637 () Int)
(declare-fun x368 (Int) Int)
(declare-fun x592 () x881)
(declare-fun x381 () Int)
(declare-fun x632 () x881)
(declare-fun x107 () Int)
(declare-fun x557 () Int)
(declare-fun x708 () Int)
(declare-fun x409 () Int)
(declare-fun x745 () Bool)
(declare-fun x555 () Int)
(declare-fun x264 () Int)
(declare-fun x196 () Bool)
(declare-fun x84 () Int)
(declare-fun x796 () Bool)
(declare-fun x398 () Int)
(declare-fun x522 () Int)
(declare-fun x114 () Bool)
(declare-fun x843 () Bool)
(declare-fun x234 () Int)
(declare-fun x876 () Int)
(declare-fun x427 () Int)
(declare-fun x93 () Int)
(declare-fun x338 () x881)
(declare-fun x384 () Bool)
(declare-fun x698 () Bool)
(declare-fun x497 () Int)
(declare-fun x400 () Int)
(declare-fun x474 () Int)
(declare-fun x336 (Int) Int)
(declare-fun x583 () Int)
(declare-fun x869 () Int)
(declare-fun x333 () Int)
(declare-fun x392 () Bool)
(declare-fun x34 () Int)
(declare-fun x658 () Int)
(declare-fun x774 () x881)
(declare-fun x445 () Int)
(declare-fun x302 () Int)
(declare-fun x759 () Bool)
(declare-fun x854 () Int)
(declare-fun x871 () Int)
(declare-fun x587 () Bool)
(declare-fun x434 () Int)
(declare-fun x695 () Bool)
(declare-fun x179 () Bool)
(declare-fun x258 () Int)
(declare-fun x610 () Int)
(declare-fun x472 () Int)
(declare-fun x687 () Int)
(declare-fun x402 () Int)
(declare-fun x543 () Int)
(declare-fun x505 () Int)
(declare-fun x271 (Int) Int)
(declare-fun x285 () Bool)
(declare-fun x284 () Int)
(declare-fun x503 () Int)
(declare-fun x674 () Bool)
(declare-fun x304 () Int)
(declare-fun x763 () Int)
(declare-fun x246 () Int)
(declare-fun x137 () Int)
(declare-fun x817 () Int)
(declare-fun x421 () Int)
(declare-fun x850 () Int)
(declare-fun x558 () Int)
(declare-fun x910 () Int)
(declare-fun x647 () Int)
(declare-fun x861 () Int)
(declare-fun x499 () Bool)
(declare-fun x63 () Int)
(declare-fun x916 () Bool)
(declare-fun x359 () Int)
(declare-fun x66 () Bool)
(declare-fun x473 () x881)
(declare-fun x500 () x881)
(declare-fun x251 () Bool)
(declare-fun x279 () Int)
(declare-fun x651 (Int) Int)
(declare-fun x618 (Int) Int)
(declare-fun x353 () Int)
(declare-fun x893 () Int)
(declare-fun x370 (Int) Int)
(declare-fun x255 () Int)
(declare-fun x833 () Int)
(declare-fun x151 () Int)
(declare-fun x529 () Int)
(declare-fun x214 () Int)
(declare-fun x644 () Int)
(declare-fun x680 () x881)
(declare-fun x482 () Int)
(declare-fun x820 () Bool)
(declare-fun x138 () Int)
(declare-fun x826 () Int)
(declare-fun x633 () Bool)
(declare-fun x74 () Int)
(declare-fun x306 () Int)
(declare-fun x765 () Int)
(declare-fun x120 () Int)
(declare-fun x366 () Int)
(declare-fun x73 (Int) Int)
(declare-fun x301 () Int)
(declare-fun x645 () Int)
(declare-fun x183 () Int)
(declare-fun x739 () Bool)
(declare-fun x818 () Int)
(declare-fun x611 (Int) Int)
(declare-fun x832 () Int)
(declare-fun x292 () Int)
(declare-fun x710 () Bool)
(declare-fun x361 () Int)
(declare-fun x770 () Bool)
(declare-fun x685 (Int) Int)
(declare-fun x767 () Int)
(declare-fun x75 () Int)
(declare-fun x401 () Int)
(declare-fun x527 () Bool)
(declare-fun x76 (x881) Int)
(declare-fun x155 () Int)
(declare-fun x192 () Int)
(declare-fun x939 () Bool)
(declare-fun x372 () Int)
(declare-fun x699 () Int)
(declare-fun x458 () Int)
(declare-fun x326 () Int)
(declare-fun x584 () Int)
(declare-fun x103 () x881)
(declare-fun x139 () Int)
(declare-fun x169 (x881) Int)
(declare-fun x294 (x881) Int)
(declare-fun x564 () Bool)
(declare-fun x563 () Int)
(declare-fun x363 () Int)
(declare-fun x847 () Int)
(declare-fun x808 () Int)
(declare-fun x299 (Int) Int)
(declare-fun x574 () Int)
(declare-fun x942 (x881) Int)
(declare-fun x872 () Bool)
(declare-fun x604 () Bool)
(declare-fun x110 () Bool)
(declare-fun x655 () Bool)
(declare-fun x307 () Bool)
(declare-fun x588 () Int)
(declare-fun x441 () Int)
(declare-fun x197 () Int)
(declare-fun x373 () Int)
(declare-fun x362 () Int)
(declare-fun x613 () Int)
(declare-fun x553 () Bool)
(declare-fun x548 () Int)
(declare-fun x566 () Int)
(declare-fun x677 () Int)
(declare-fun x492 () Int)
(declare-fun x4 (Int) Int)
(declare-fun x352 () Bool)
(declare-fun x792 () Int)
(declare-fun x642 () Int)
(declare-fun x691 () Int)
(declare-fun x528 () Int)
(declare-fun x23 () Bool)
(declare-fun x274 () Int)
(declare-fun x780 (Int) Int)
(declare-fun x562 () Int)
(declare-fun x748 () Int)
(declare-fun x470 () Bool)
(declare-fun x940 () Int)
(declare-fun x81 () Bool)
(declare-fun x830 () Int)
(declare-fun x572 (Int Int) Int)
(declare-fun x216 () Int)
(declare-fun x91 () Bool)
(declare-fun x756 () Int)
(declare-fun x793 () Int)
(declare-fun x273 () Int)
(declare-fun x448 () Int)
(declare-fun x452 () Bool)
(declare-fun x914 () Int)
(declare-fun x275 () Bool)
(declare-fun x596 (x881) Int)
(declare-fun x743 () Int)
(declare-fun x686 () Int)
(declare-fun x663 () Bool)
(declare-fun x468 () Int)
(declare-fun x899 () Int)
(declare-fun x580 () Bool)
(declare-fun x578 () Int)
(declare-fun x263 () Int)
(declare-fun x14 () Int)
(declare-fun x638 () Int)
(declare-fun x484 () Int)
(declare-fun x238 () x881)
(declare-fun x631 () Bool)
(declare-fun x453 () Int)
(declare-fun x319 () Int)
(declare-fun x657 () Bool)
(declare-fun x128 () Int)
(declare-fun x755 (Int) Int)
(declare-fun x111 () Int)
(declare-fun x930 () Int)
(declare-fun x65 (Int) Int)
(declare-fun x863 () Int)
(declare-fun x101 () Int)
(declare-fun x405 () Int)
(declare-fun x684 () x881)
(declare-fun x689 () Int)
(declare-fun x758 () Int)
(declare-fun x219 () Int)
(declare-fun x53 () Int)
(declare-fun x678 () Int)
(declare-fun x382 (x881) Int)
(declare-fun x769 () Bool)
(declare-fun x838 () Int)
(declare-fun x348 (x881) Int)
(declare-fun x178 () Int)
(declare-fun x433 () Int)
(declare-fun x736 () Int)
(declare-fun x560 () Int)
(declare-fun x272 () Bool)
(declare-fun x426 () Bool)
(declare-fun x839 () Bool)
(declare-fun x467 () Int)
(declare-fun x894 () Int)
(declare-fun x648 (Int) Int)
(declare-fun x711 () Int)
(declare-fun x358 () Int)
(declare-fun x777 () Int)
(declare-fun x561 () Int)
(declare-fun x928 () Int)
(declare-fun x243 () Int)
(declare-fun x259 () Int)
(declare-fun x630 () Bool)
(declare-fun x900 () Int)
(declare-fun x429 () Int)
(declare-fun x712 () x881)
(declare-fun x582 () Int)
(declare-fun x496 () Int)
(declare-fun x54 () Int)
(declare-fun x171 () Int)
(declare-fun x803 () Int)
(declare-fun x413 (x881) Int)
(declare-fun x837 () Int)
(declare-fun x909 () Bool)
(declare-fun x781 () Int)
(declare-fun x694 () Int)
(declare-fun x127 () Int)
(declare-fun x311 () Int)
(declare-fun x786 () Int)
(declare-fun x89 () Int)
(declare-fun x254 () Int)
(declare-fun x825 () Int)
(declare-fun x231 () Int)
(declare-fun x845 (Int) Int)
(declare-fun x229 () Bool)
(declare-fun x131 () Int)
(declare-fun x569 () Int)
(declare-fun x394 () Bool)
(declare-fun x851 () Int)
(declare-fun x253 () Int)
(declare-fun x539 () Int)
(declare-fun x113 (Int) Int)
(declare-fun x944 () Int)
(declare-fun x195 () Int)
(declare-fun x187 () Int)
(declare-fun x327 () Int)
(declare-fun x494 () Int)
(declare-fun x491 () Int)
(declare-fun x266 () Int)
(declare-fun x143 (x881) Int)
(declare-fun x404 () Int)
(declare-fun x280 () Bool)
(declare-fun x623 () Int)
(declare-fun x731 () Int)
(declare-fun x597 () Int)
(declare-fun x341 () Int)
(declare-fun x331 () Bool)
(declare-fun x751 () Int)
(declare-fun x622 () Int)
(declare-fun x602 () Bool)
(declare-fun x152 () Int)
(declare-fun x417 (x881) Int)
(declare-fun x842 () Int)
(declare-fun x775 () Bool)
(declare-fun x173 () Bool)
(declare-fun x744 () Int)
(declare-fun x934 () Int)
(declare-fun x314 () Bool)
(declare-fun x506 () Int)
(declare-fun x12 () Int)
(declare-fun x926 () Bool)
(declare-fun x17 () Bool)
(declare-fun x95 () Int)
(declare-fun x310 () Int)
(declare-fun x463 () Bool)
(declare-fun x211 () Int)
(declare-fun x20 () x881)
(declare-fun x488 () Bool)
(declare-fun x501 () Int)
(declare-fun x673 () Bool)
(declare-fun x511 () Int)
(declare-fun x891 () Int)
(declare-fun x174 () Bool)
(declare-fun x393 () Int)
(declare-fun x719 () Int)
(declare-fun x42 () Int)
(declare-fun x435 () Int)
(declare-fun x282 () Int)
(declare-fun x595 () Int)
(declare-fun x37 () Int)
(declare-fun x96 () Int)
(declare-fun x918 () Int)
(declare-fun x64 () Int)
(declare-fun x154 () Bool)
(declare-fun x901 () Int)
(declare-fun x707 () Bool)
(declare-fun x68 () Int)
(declare-fun x281 () Int)
(declare-fun x933 () Int)
(declare-fun x525 () Bool)
(declare-fun x593 () x881)
(declare-fun x43 (Int) Int)
(declare-fun x481 () Int)
(declare-fun x126 () Int)
(declare-fun x57 () Bool)
(declare-fun x371 () Int)
(declare-fun x806 () Int)
(declare-fun x513 () Int)
(declare-fun x858 () Bool)
(declare-fun x810 () Bool)
(declare-fun x205 () Bool)
(declare-fun x778 () Int)
(declare-fun x889 (Int) Int)
(declare-fun x516 () Bool)
(declare-fun x79 () Bool)
(declare-fun x620 () Int)
(declare-fun x586 () Int)
(declare-fun x80 () Int)
(declare-fun x33 () Int)
(declare-fun x794 () Int)
(declare-fun x507 () Int)
(declare-fun x447 () Bool)
(declare-fun x109 () x881)
(declare-fun x269 () Int)
(declare-fun x641 () x881)
(declare-fun x716 () Int)
(declare-fun x772 () Int)
(declare-fun x886 () Int)
(declare-fun x598 () Int)
(declare-fun x260 () Bool)
(declare-fun x332 () Bool)
(declare-fun x932 () Int)
(declare-fun x83 () Bool)
(declare-fun x904 () Int)
(declare-fun x585 () Bool)
(declare-fun x870 () Int)
(declare-fun x181 () Int)
(declare-fun x514 () Bool)
(declare-fun x204 () Int)
(declare-fun x554 () Int)
(declare-fun x315 () Int)
(declare-fun x324 () Int)
(declare-fun x276 () Int)
(declare-fun x317 () Bool)
(declare-fun x161 () Int)
(declare-fun x599 () Bool)
(declare-fun x885 (Int) Int)
(declare-fun x235 () Int)
(declare-fun x493 () Int)
(declare-fun x846 (Int) Int)
(declare-fun x167 () Int)
(declare-fun x824 () Int)
(declare-fun x289 () Int)
(declare-fun x573 () Int)
(declare-fun x537 () x881)
(declare-fun x540 () Int)
(declare-fun x410 () Int)
(declare-fun x802 () Int)
(declare-fun x218 () Int)
(declare-fun x860 () Int)
(declare-fun x766 (Int) x881)
(declare-fun x418 () Int)
(declare-fun x538 () x881)
(declare-fun x922 (Int) Int)
(declare-fun x153 () Int)
(declare-fun x325 () Int)
(declare-fun x369 (Int) Int)
(declare-fun x624 () Int)
(declare-fun x250 () Int)
(declare-fun x300 () Int)
(declare-fun x156 () Int)
(declare-fun x801 () Int)
(declare-fun x735 () Bool)
(declare-fun x866 () x881)
(declare-fun x351 () Int)
(declare-fun x268 () Bool)
(declare-fun x844 () Int)
(declare-fun x798 () Int)
(declare-fun x649 () Int)
(declare-fun x168 () Int)
(declare-fun x71 () Int)
(declare-fun x487 () Int)
(declare-fun x339 () Bool)
(declare-fun x228 () Int)
(declare-fun x170 () Int)
(declare-fun x121 () Bool)
(declare-fun x789 () Int)
(declare-fun x749 () Int)
(declare-fun x706 () x881)
(declare-fun x547 () Int)
(declare-fun x321 () Int)
(declare-fun x442 () Int)
(declare-fun x480 () Bool)
(declare-fun x129 () Int)
(declare-fun x785 () Bool)
(declare-fun x318 () Int)
(declare-fun x589 () Bool)
(declare-fun x804 (Int) Int)
(declare-fun x831 () Int)
(declare-fun x422 () Bool)
(declare-fun x856 (x881) Int)
(declare-fun x692 () Int)
(declare-fun x568 () Int)
(declare-fun x875 () Int)
(declare-fun x185 () Bool)
(declare-fun x386 () Bool)
(declare-fun x242 () Int)
(declare-fun x132 () Bool)
(declare-fun x389 () Int)
(declare-fun x18 () Int)
(declare-fun x6 () Int)
(declare-fun x198 () Int)
(declare-fun x425 () Int)
(declare-fun x345 () Bool)
(declare-fun x661 () Int)
(declare-fun x210 () Int)
(declare-fun x601 () Int)
(declare-fun x408 () Bool)
(declare-fun x688 () Int)
(declare-fun x239 () Int)
(declare-fun x52 () Bool)
(declare-fun x180 () Bool)
(declare-fun x160 () Int)
(declare-fun x158 (Int) Int)
(declare-fun x320 () Int)
(declare-fun x2 () Bool)
(declare-fun x720 () Int)
(declare-fun x220 () Int)
(declare-fun x98 () Int)
(declare-fun x523 () Int)
(declare-fun x390 () Bool)
(declare-fun x533 () x881)
(declare-fun x200 (Int Int) Int)
(declare-fun x118 () Int)
(declare-fun x672 () Int)
(declare-fun x728 () Int)
(declare-fun x888 () Bool)
(declare-fun x662 () Int)
(declare-fun x92 () Int)
(declare-fun x323 () Int)
(declare-fun x411 () Bool)
(declare-fun x456 (Int) Int)
(declare-fun x312 () Bool)
(declare-fun x790 () Int)
(declare-fun x730 () Int)
(declare-fun x360 () Int)
(declare-fun x322 () Bool)
(declare-fun x617 () Int)
(declare-fun x771 () Int)
(declare-fun x931 () x881)
(declare-fun x162 () Int)
(declare-fun x579 () Int)
(declare-fun x559 () Int)
(declare-fun x437 () Int)
(declare-fun x764 () Int)
(declare-fun x915 () Int)
(declare-fun x449 () Bool)
(declare-fun x807 () Int)
(declare-fun x544 () Int)
(declare-fun x135 () Int)
(declare-fun x811 () Int)
(declare-fun x233 () Bool)
(declare-fun x849 () Int)
(declare-fun x203 () Int)
(declare-fun x248 () Int)
(declare-fun x521 () Bool)
(declare-fun x70 () Bool)
(declare-fun x88 () Int)
(declare-fun x444 () Int)
(declare-fun x878 () Int)
(declare-fun x615 () x881)
(declare-fun x827 (Int) Int)
(declare-fun x883 () Int)
(declare-fun x147 (x881) Int)
(declare-fun x768 () Int)
(declare-fun x188 () Int)
(declare-fun x639 () Int)
(declare-fun x485 () Int)
(declare-fun x489 () Int)
(declare-fun x815 () x881)
(declare-fun x779 () x881)
(declare-fun x713 () Int)
(declare-fun x469 () Int)
(declare-fun x399 () Int)
(declare-fun x397 () Int)
(declare-fun x252 () Bool)
(declare-fun x534 () Int)
(declare-fun x591 () Int)
(declare-fun x78 () Int)
(declare-fun x840 () Bool)
(declare-fun x383 () Int)
(declare-fun x654 () Int)
(declare-fun x356 () Int)
(declare-fun x703 () Bool)
(declare-fun x13 () Int)
(declare-fun x193 () Int)
(declare-fun x929 () Bool)
(declare-fun x478 () Bool)
(declare-fun x614 () Int)
(declare-fun x157 () Int)
(declare-fun x742 () Int)
(declare-fun x532 () Int)
(declare-fun x740 () Bool)
(declare-fun x945 () Int)
(declare-fun x590 () Int)
(declare-fun x424 () Int)
(declare-fun x616 () Int)
(declare-fun x896 () Bool)
(declare-fun x715 () Bool)
(declare-fun x867 () Int)
(declare-fun x750 () Int)
(declare-fun x245 () x881)
(declare-fun x354 () Int)
(declare-fun x428 () Int)
(declare-fun x471 () Int)
(declare-fun x859 () Int)
(define-fun x757 ((x881 x881) (x125 Int)) x881 (ite ((_ is x443) x881) (x443 (x819 x881) (+ x125 (x10 x881))) (ite ((_ is x295) x881) (x295 (x146 x881) (x835 x881) (+ x125 (x823 x881))) (x87 (+ (x56 x881) x125)))))
(define-fun x165 ((x403 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403) (<= 0 x403)) x403 (- x403 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x124 ((x403 Int)) Int (ite (and (< x403 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x403)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403) x403))
(define-fun x864 ((x700 Int)) Bool (and (>= x700 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700)))
(define-fun x189 ((x700 Int)) Bool (and (= x700 (x572 x700 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x572 115792089237316195423570985008687907853269984665640564039457584007913129639935 x700) x700)))
(define-fun x286 ((x700 Int)) Bool (and (= 0 (x572 x700 0)) (= (x572 0 x700) 0)))
(define-fun x902 ((x700 Int)) Bool (= (x572 x700 x700) x700))
(define-fun x303 ((x700 Int)) Bool (and (x902 x700) (x189 x700) (x286 x700)))
(define-fun x446 ((x700 Int)) Bool (= (x572 20282409603651670423947251286015 x700) (x572 20282409603651670423947251286015 (x572 20282409603651670423947251286015 x700))))
(define-fun x77 ((x700 Int)) Bool (=> (and (>= x700 0) (< x700 20282409603651670423947251286016)) (= (x572 20282409603651670423947251286015 x700) x700)))
(define-fun x828 ((x700 Int)) Bool (=> (= x700 (x572 20282409603651670423947251286015 x700)) (and (<= 0 x700) (> 20282409603651670423947251286016 x700))))
(define-fun x486 ((x700 Int)) Bool (=> (and (> 40564819207303340847894502572032 x700) (>= x700 20282409603651670423947251286016)) (= (- x700 20282409603651670423947251286016) (x572 20282409603651670423947251286015 x700))))
(define-fun x423 ((x700 Int) (x265 Int)) Bool (and (>= x265 0) (= (+ (* x265 20282409603651670423947251286016) (x572 20282409603651670423947251286015 x700)) x700)))
(define-fun x857 ((x700 Int) (x262 Int)) Bool (and (x77 x700) (x486 x700) (x423 x700 x262) (x828 x700) (x446 x700)))
(define-fun x145 ((x700 Int) (x265 Int)) Bool (= (x572 x700 x265) (x572 x265 x700)))
(define-fun x61 ((x700 Int) (x265 Int)) Bool (and (=> (<= 0 x265) (>= x265 (x572 x700 x265))) (>= (x572 x700 x265) 0) (=> (<= 0 x700) (>= x700 (x572 x700 x265)))))
(define-fun x552 ((x700 Int) (x265 Int)) Bool (and (x145 x700 x265) (x61 x700 x265)))
(define-fun x936 ((x700 Int) (x262 Int)) Bool (and (x857 x700 x262) (x552 x700 20282409603651670423947251286015)))
(define-fun x570 ((x700 Int)) Bool (= (x618 x700) (ite (> 10141204801825835211973625643008 (x572 x700 20282409603651670423947251286015)) (x572 x700 20282409603651670423947251286015) (+ (x572 x700 20282409603651670423947251286015) 115792089237316195423570985008687907853269984645358154435805913583965878353920))))
(define-fun x349 ((x700 Int)) Bool (= (x572 255 (x572 255 x700)) (x572 255 x700)))
(define-fun x346 ((x700 Int)) Bool (=> (and (> 256 x700) (<= 0 x700)) (= x700 (x572 255 x700))))
(define-fun x701 ((x700 Int)) Bool (=> (= (x572 255 x700) x700) (and (<= 0 x700) (< x700 256))))
(define-fun x682 ((x700 Int)) Bool (=> (and (<= 256 x700) (> 512 x700)) (= (x572 255 x700) (- x700 256))))
(define-fun x344 ((x700 Int) (x265 Int)) Bool (and (<= 0 x265) (= (+ (* 256 x265) (x572 255 x700)) x700)))
(define-fun x671 ((x700 Int) (x262 Int)) Bool (and (x344 x700 x262) (x346 x700) (x701 x700) (x682 x700) (x349 x700)))
(define-fun x908 ((x700 Int) (x262 Int)) Bool (and (x671 x700 x262) (x552 x700 255)))
(define-fun x86 ((x700 Int)) Bool (= (x572 1461501637330902918203684832716283019655932542975 (x572 1461501637330902918203684832716283019655932542975 x700)) (x572 1461501637330902918203684832716283019655932542975 x700)))
(define-fun x290 ((x700 Int)) Bool (=> (and (>= x700 0) (> 1461501637330902918203684832716283019655932542976 x700)) (= x700 (x572 1461501637330902918203684832716283019655932542975 x700))))
(define-fun x46 ((x700 Int)) Bool (=> (= (x572 1461501637330902918203684832716283019655932542975 x700) x700) (and (> 1461501637330902918203684832716283019655932542976 x700) (<= 0 x700))))
(define-fun x477 ((x700 Int)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x700) (>= x700 1461501637330902918203684832716283019655932542976)) (= (x572 1461501637330902918203684832716283019655932542975 x700) (- x700 1461501637330902918203684832716283019655932542976))))
(define-fun x903 ((x700 Int) (x265 Int)) Bool (and (>= x265 0) (= x700 (+ (* x265 1461501637330902918203684832716283019655932542976) (x572 1461501637330902918203684832716283019655932542975 x700)))))
(define-fun x628 ((x700 Int) (x262 Int)) Bool (and (x46 x700) (x903 x700 x262) (x477 x700) (x86 x700) (x290 x700)))
(define-fun x297 ((x700 Int) (x262 Int)) Bool (and (x628 x700 x262) (x552 x700 1461501637330902918203684832716283019655932542975)))
(define-fun x374 ((x700 Int)) Bool (= (x572 18446744073709551615 x700) (x572 18446744073709551615 (x572 18446744073709551615 x700))))
(define-fun x536 ((x700 Int)) Bool (=> (and (<= 0 x700) (< x700 18446744073709551616)) (= x700 (x572 18446744073709551615 x700))))
(define-fun x697 ((x700 Int)) Bool (=> (= (x572 18446744073709551615 x700) x700) (and (< x700 18446744073709551616) (>= x700 0))))
(define-fun x653 ((x700 Int)) Bool (=> (and (<= 18446744073709551616 x700) (> 36893488147419103232 x700)) (= (- x700 18446744073709551616) (x572 18446744073709551615 x700))))
(define-fun x163 ((x700 Int) (x265 Int)) Bool (and (= (+ (x572 18446744073709551615 x700) (* 18446744073709551616 x265)) x700) (>= x265 0)))
(define-fun x223 ((x700 Int) (x262 Int)) Bool (and (x536 x700) (x163 x700 x262) (x697 x700) (x653 x700) (x374 x700)))
(define-fun x868 ((x700 Int) (x262 Int)) Bool (and (x552 x700 18446744073709551615) (x223 x700 x262)))
(define-fun x395 ((x700 Int)) Bool (= (x572 340282366920938463463374607431768211455 x700) (x572 340282366920938463463374607431768211455 (x572 340282366920938463463374607431768211455 x700))))
(define-fun x668 ((x700 Int)) Bool (=> (and (>= x700 0) (> 340282366920938463463374607431768211456 x700)) (= x700 (x572 340282366920938463463374607431768211455 x700))))
(define-fun x340 ((x700 Int)) Bool (=> (= (x572 340282366920938463463374607431768211455 x700) x700) (and (> 340282366920938463463374607431768211456 x700) (>= x700 0))))
(define-fun x50 ((x700 Int)) Bool (=> (and (<= 340282366920938463463374607431768211456 x700) (> 680564733841876926926749214863536422912 x700)) (= (- x700 340282366920938463463374607431768211456) (x572 340282366920938463463374607431768211455 x700))))
(define-fun x726 ((x700 Int) (x265 Int)) Bool (and (>= x265 0) (= (+ (x572 340282366920938463463374607431768211455 x700) (* 340282366920938463463374607431768211456 x265)) x700)))
(define-fun x683 ((x700 Int) (x262 Int)) Bool (and (x395 x700) (x668 x700) (x726 x700 x262) (x50 x700) (x340 x700)))
(define-fun x256 ((x700 Int) (x262 Int)) Bool (and (x683 x700 x262) (x552 x700 340282366920938463463374607431768211455)))
(define-fun x184 ((x700 Int)) Bool (= (x572 115792089237316195423570985008687907853269984665640564039457584007913129639904 x700) (x572 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x572 115792089237316195423570985008687907853269984665640564039457584007913129639904 x700))))
(define-fun x278 ((x700 Int)) Bool (=> (and (>= x700 0) (< x700 32)) (= (x572 115792089237316195423570985008687907853269984665640564039457584007913129639904 x700) 0)))
(define-fun x822 ((x700 Int) (x265 Int) (x115 Int) (x714 Int)) Bool (and (< x714 1) (>= x265 0) (= (* x115 32) (x572 115792089237316195423570985008687907853269984665640564039457584007913129639904 x700)) (<= 0 x714) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x115) (= x700 (+ (* 32 x115) (* x714 115792089237316195423570985008687907853269984665640564039457584007913129639936) x265)) (< x265 32) (<= 0 x115)))
(define-fun x208 ((x700 Int) (x225 Int) (x911 Int) (x291 Int)) Bool (and (x822 x700 x225 x911 x291) (x278 x700) (x184 x700)))
(define-fun x853 ((x700 Int) (x225 Int) (x911 Int) (x291 Int)) Bool (and (x208 x700 x225 x911 x291) (x552 x700 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x7 ((x700 Int)) Bool (= (ite (> 170141183460469231731687303715884105728 (x572 x700 340282366920938463463374607431768211455)) (x572 x700 340282366920938463463374607431768211455) (+ 115792089237316195423570985008687907852929702298719625575994209400481361428480 (x572 x700 340282366920938463463374607431768211455))) (x456 x700)))
(define-fun x724 ((x27 Int)) Int (ite (= x27 x598) x467 (x158 x27)))
(define-fun x747 ((x27 Int)) Int (ite (= x27 x751) x918 (x885 x27)))
(define-fun x571 ((x27 Int)) Int (ite (= x27 x573) x427 (x780 x27)))
(define-fun x681 ((x27 Int)) Int (ite (= x209 x27) x276 (x938 x27)))
(define-fun x608 ((x27 Int)) Int (ite (= x27 x302) x354 (x648 x27)))
(define-fun x848 ((x27 Int)) Int (ite (= x27 x324) x776 (x73 x27)))
(define-fun x104 ((x27 Int)) Int (ite (= x27 x892) x756 (x651 x27)))
(define-fun x524 ((x27 Int)) Int (ite (= x27 x266) x481 (x754 x27)))
(define-fun x873 ((x27 Int)) Int (ite (= 128 x27) x818 (x4 x27)))
(define-fun x186 ((x27 Int)) Int (ite (= x27 160) x842 (x873 x27)))
(define-fun x213 ((x27 Int)) Int (ite (= x27 192) x503 (x186 x27)))
(define-fun x782 ((x27 Int)) Int (ite (= 224 x27) x75 (x213 x27)))
(define-fun x895 ((x27 Int)) Int (ite (= x27 256) x217 (x782 x27)))
(define-fun x906 ((x27 Int)) Int (ite (= 128 x27) x539 (x4 x27)))
(define-fun x626 ((x27 Int)) Int (ite (= 160 x27) x595 (x906 x27)))
(define-fun x3 ((x27 Int)) Int (ite (= x27 192) x733 (x626 x27)))
(define-fun x702 ((x27 Int)) Int (ite (= 224 x27) x748 (x3 x27)))
(define-fun x462 ((x27 Int)) Int (ite (= x27 256) x28 (x702 x27)))
(define-fun x646 ((x27 Int)) Int (ite (and x377 x738) (x895 x27) (x462 x27)))
(define-fun x419 ((x27 Int)) Int (ite (= 128 x27) x692 (x845 x27)))
(define-fun x227 ((x27 Int)) Int (ite (= 160 x27) x613 (x419 x27)))
(define-fun x709 ((x27 Int)) Int (ite (= x27 192) x450 (x227 x27)))
(define-fun x440 ((x27 Int)) Int (ite (= x27 224) x722 (x709 x27)))
(define-fun x342 ((x27 Int)) Int (ite (= 256 x27) x279 (x440 x27)))
(define-fun x140 ((x27 Int)) Int (ite (= x161 x27) x483 (x464 x27)))
(define-fun x182 ((x27 Int)) Int (ite (= x659 x27) x168 (x140 x27)))
(define-fun x865 ((x27 Int)) Int (ite (= x27 x787) x138 (x182 x27)))
(define-fun x172 ((x27 Int)) Int (ite (= x507 x27) x495 (x865 x27)))
(define-fun x241 ((x27 Int)) Int (ite (= x428 x27) x713 (x172 x27)))
(define-fun x887 ((x27 Int)) Int (ite (= x27 0) x582 (x922 x27)))
(define-fun x510 ((x27 Int)) Int (ite (= 32 x27) x634 (x887 x27)))
(define-fun x150 ((x27 Int)) Int (ite (= 64 x27) x425 (x510 x27)))
(define-fun x224 ((x27 Int)) Int (ite (= 96 x27) x19 (x150 x27)))
(define-fun x244 ((x27 Int)) Int (ite (= x27 128) x816 (x224 x27)))
(define-fun x221 ((x27 Int)) Int (ite (= x27 128) x692 (x846 x27)))
(define-fun x267 ((x27 Int)) Int (ite (= 160 x27) x71 (x221 x27)))
(define-fun x391 ((x27 Int)) Int (ite (= 192 x27) x450 (x267 x27)))
(define-fun x841 ((x27 Int)) Int (ite (= x27 224) x722 (x391 x27)))
(define-fun x45 ((x27 Int)) Int (ite (= 256 x27) x279 (x841 x27)))
(define-fun x509 ((x27 Int)) Int (ite (= x27 0) x325 (x415 x27)))
(define-fun x660 ((x27 Int)) Int (ite (= x27 32) x375 (x509 x27)))
(define-fun x665 ((x27 Int)) Int (ite (= 64 x27) x643 (x660 x27)))
(define-fun x177 ((x27 Int)) Int (ite (= 96 x27) x849 (x665 x27)))
(define-fun x753 ((x27 Int)) Int (ite (= x27 128) x106 (x177 x27)))
(define-fun x100 ((x27 Int)) Int (ite (= x27 x913) x373 (x299 x27)))
(define-fun x194 ((x27 Int)) Int (ite (= x783 x27) x402 (x368 x27)))
(define-fun x581 ((x27 Int)) Int (ite (= x27 x334) x383 (x667 x27)))
(define-fun x675 ((x27 Int)) Int (ite (= x367 x27) x243 (x600 x27)))
(define-fun x1 ((x27 Int)) Int (ite (= x27 x448) x781 (x804 x27)))
(define-fun x935 ((x27 Int)) Int (ite (= x27 x744) x941 (x43 x27)))
(define-fun x309 ((x27 Int)) Int (ite (= x27 x591) x409 (x605 x27)))
(define-fun x226 ((x27 Int)) Int (ite (= x49 x27) x82 (x652 x27)))
(define-fun x26 ((x27 Int)) Int (ite (= x27 128) x944 (x755 x27)))
(define-fun x551 ((x27 Int)) Int (ite (= 160 x27) x366 (x26 x27)))
(define-fun x119 ((x27 Int)) Int (ite (= 192 x27) x691 (x551 x27)))
(define-fun x729 ((x27 Int)) Int (ite (= x27 224) x811 (x119 x27)))
(define-fun x880 ((x27 Int)) Int (ite (= 256 x27) x548 (x729 x27)))
(define-fun x855 ((x27 Int)) Int (ite (= 128 x27) x672 (x755 x27)))
(define-fun x520 ((x27 Int)) Int (ite (= x27 160) x453 (x855 x27)))
(define-fun x305 ((x27 Int)) Int (ite (= x27 192) x609 (x520 x27)))
(define-fun x237 ((x27 Int)) Int (ite (= x27 224) x74 (x305 x27)))
(define-fun x148 ((x27 Int)) Int (ite (= x27 256) x358 (x237 x27)))
(define-fun x347 ((x27 Int)) Int (ite (and x541 x260) (x880 x27) (x148 x27)))
(define-fun x388 ((x27 Int)) Int (ite (= 128 x27) x692 (x370 x27)))
(define-fun x920 ((x27 Int)) Int (ite (= 160 x27) x157 (x388 x27)))
(define-fun x656 ((x27 Int)) Int (ite (= x27 192) x450 (x920 x27)))
(define-fun x9 ((x27 Int)) Int (ite (= 224 x27) x722 (x656 x27)))
(define-fun x16 ((x27 Int)) Int (ite (= x27 256) x279 (x9 x27)))
(define-fun x94 ((x27 Int)) Int (ite (= x360 x27) x934 (x369 x27)))
(define-fun x937 ((x27 Int)) Int (ite (= x794 x27) x306 (x94 x27)))
(define-fun x512 ((x27 Int)) Int (ite (= x131 x27) x468 (x937 x27)))
(define-fun x805 ((x27 Int)) Int (ite (= x27 x363) x292 (x512 x27)))
(define-fun x11 ((x27 Int)) Int (ite (= x27 x59) x496 (x805 x27)))
(define-fun x721 ((x27 Int)) Int (ite (= 0 x27) x469 (x889 x27)))
(define-fun x907 ((x27 Int)) Int (ite (= x27 32) x240 (x721 x27)))
(define-fun x36 ((x27 Int)) Int (ite (= 64 x27) x378 (x907 x27)))
(define-fun x884 ((x27 Int)) Int (ite (= 96 x27) x429 (x36 x27)))
(define-fun x460 ((x27 Int)) Int (ite (= 128 x27) x376 (x884 x27)))
(define-fun x407 ((x27 Int)) Int (ite (= 128 x27) x692 (x176 x27)))
(define-fun x343 ((x27 Int)) Int (ite (= 160 x27) x629 (x407 x27)))
(define-fun x365 ((x27 Int)) Int (ite (= 192 x27) x450 (x343 x27)))
(define-fun x30 ((x27 Int)) Int (ite (= x27 224) x722 (x365 x27)))
(define-fun x490 ((x27 Int)) Int (ite (= 256 x27) x279 (x30 x27)))
(define-fun x144 ((x27 Int)) Int (ite (= 0 x27) x436 (x336 x27)))
(define-fun x134 ((x27 Int)) Int (ite (= 32 x27) x63 (x144 x27)))
(define-fun x635 ((x27 Int)) Int (ite (= 64 x27) x497 (x134 x27)))
(define-fun x201 ((x27 Int)) Int (ite (= 96 x27) x40 (x635 x27)))
(define-fun x117 ((x27 Int)) Int (ite (= 128 x27) x730 (x201 x27)))
(define-fun x723 ((x27 Int)) Int (ite (= 128 x27) x444 (x113 x27)))
(define-fun x270 ((x27 Int)) Int (ite (= 160 x27) x95 (x723 x27)))
(define-fun x406 ((x27 Int)) Int (ite (= 192 x27) x198 (x270 x27)))
(define-fun x308 ((x27 Int)) Int (ite (= x27 224) x560 (x406 x27)))
(define-fun x355 ((x27 Int)) Int (ite (= x27 256) x764 (x308 x27)))
(define-fun x784 ((x27 Int)) Int (ite (= x161 x27) x289 (x464 x27)))
(define-fun x773 ((x27 Int)) Int (ite (= x27 x206) x484 (x784 x27)))
(define-fun x412 ((x27 Int)) Int (ite (= x127 x27) x689 (x773 x27)))
(define-fun x717 ((x27 Int)) Int (ite (= x27 x197) x664 (x412 x27)))
(define-fun x32 ((x27 Int)) Int (ite (= x379 x27) x333 (x717 x27)))
(define-fun x679 ((x27 Int)) Int (ite (= x27 0) x288 (x922 x27)))
(define-fun x141 ((x27 Int)) Int (ite (= x27 32) x218 (x679 x27)))
(define-fun x215 ((x27 Int)) Int (ite (= x27 64) x187 (x141 x27)))
(define-fun x387 ((x27 Int)) Int (ite (= x27 96) x235 (x215 x27)))
(define-fun x535 ((x27 Int)) Int (ite (= 128 x27) x886 (x387 x27)))
(define-fun x531 ((x27 Int)) Int (ite (= 128 x27) x444 (x813 x27)))
(define-fun x788 ((x27 Int)) Int (ite (= x27 160) x389 (x531 x27)))
(define-fun x55 ((x27 Int)) Int (ite (= x27 192) x198 (x788 x27)))
(define-fun x621 ((x27 Int)) Int (ite (= x27 224) x560 (x55 x27)))
(define-fun x357 ((x27 Int)) Int (ite (= x27 256) x764 (x621 x27)))
(define-fun x455 ((x27 Int)) Int (ite (= x27 0) x461 (x415 x27)))
(define-fun x705 ((x27 Int)) Int (ite (= 32 x27) x544 (x455 x27)))
(define-fun x439 ((x27 Int)) Int (ite (= x27 64) x330 (x705 x27)))
(define-fun x283 ((x27 Int)) Int (ite (= 96 x27) x400 (x439 x27)))
(define-fun x454 ((x27 Int)) Int (ite (= x27 128) x832 (x283 x27)))
(define-fun x795 ((x27 Int)) Int (ite (= 128 x27) x444 (x827 x27)))
(define-fun x577 ((x27 Int)) Int (ite (= x27 160) x58 (x795 x27)))
(define-fun x296 ((x27 Int)) Int (ite (= 192 x27) x198 (x577 x27)))
(define-fun x199 ((x27 Int)) Int (ite (= 224 x27) x560 (x296 x27)))
(define-fun x718 ((x27 Int)) Int (ite (= 256 x27) x764 (x199 x27)))
(define-fun x261 ((x27 Int)) Int (ite (= x360 x27) x797 (x369 x27)))
(define-fun x123 ((x27 Int)) Int (ite (= x27 x102) x688 (x261 x27)))
(define-fun x517 ((x27 Int)) Int (ite (= x801 x27) x410 (x123 x27)))
(define-fun x556 ((x27 Int)) Int (ite (= x27 x60) x534 (x517 x27)))
(define-fun x232 ((x27 Int)) Int (ite (= x27 x569) x90 (x556 x27)))
(define-fun x191 ((x27 Int)) Int (ite (= x27 0) x242 (x889 x27)))
(define-fun x834 ((x27 Int)) Int (ite (= 32 x27) x98 (x191 x27)))
(define-fun x62 ((x27 Int)) Int (ite (= 64 x27) x812 (x834 x27)))
(define-fun x249 ((x27 Int)) Int (ite (= x27 96) x181 (x62 x27)))
(define-fun x430 ((x27 Int)) Int (ite (= x27 128) x506 (x249 x27)))
(define-fun x432 ((x27 Int)) Int (ite (= 128 x27) x444 (x685 x27)))
(define-fun x912 ((x27 Int)) Int (ite (= x27 160) x863 (x432 x27)))
(define-fun x105 ((x27 Int)) Int (ite (= x27 192) x198 (x912 x27)))
(define-fun x636 ((x27 Int)) Int (ite (= x27 224) x560 (x105 x27)))
(define-fun x451 ((x27 Int)) Int (ite (= 256 x27) x764 (x636 x27)))
(define-fun x741 ((x27 Int)) Int (ite (= 0 x27) x130 (x336 x27)))
(define-fun x690 ((x27 Int)) Int (ite (= 32 x27) x763 (x741 x27)))
(define-fun x519 ((x27 Int)) Int (ite (= 64 x27) x894 (x690 x27)))
(define-fun x459 ((x27 Int)) Int (ite (= x27 96) x676 (x519 x27)))
(define-fun x164 ((x27 Int)) Int (ite (= x27 128) x662 (x459 x27)))
(define-fun x919 ((x27 Int)) Int (ite (and x470 x83) (x241 x27) (x32 x27)))
(define-fun x924 ((x27 Int)) Int (ite (and x179 x121) (x11 x27) (x232 x27)))
(define-fun x530 ((x700 Int)) Bool (=> (and (not (= 274184521717934524641157099916833587227 x700)) (not (= x700 20282409603651670423947251286016)) (not (= x700 2055092157)) (not (= 2371715404 x700)) (not (= x700 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x700 1000000000000000)) (< 10000 x700) (not (= 1558726628 x700)) (not (= x700 1208925819614629174706176)) (not (= x700 274184521717934524641157099916833587210)) (not (= 2661915226 x700)) (not (= x700 65536)) (not (= 2000660004 x700)) (not (= 2531764673 x700)) (not (= x700 65535)) (not (= 950698303 x700)) (not (= x700 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (not (= 1461501637330902918203684832716283019655932542975 x700)) (not (= 4062139261 x700)) (not (= x700 1099511627775)) (not (= 1168994686 x700)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x700)) (not (= 1736444767 x700)) (not (= x700 10141204801825835211973625643007)) (not (= 274184521717934524641157099916833587231 x700)) (not (= x700 170141183460469231731687303715884105727)) (not (= x700 340282366920938463463374607431768211456)) (not (= 1208925819614629174706175 x700)) (not (= 274184521717934524641157099916833587244 x700)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x700)) (not (= x700 2059964113)) (not (= 2419208567 x700)) (not (= 2472862090 x700)) (not (= x700 2362581449)) (not (= 18446744073709551615 x700)) (not (= 340282366920938463463374607431768211455 x700)) (not (= 4272920204 x700)) (not (= x700 20282409603651670423947251286015)) (not (= 2348850734 x700)) (not (= x700 1000000000000000000)) (not (= 3253611544 x700)) (not (= x700 1752364190)) (not (= x700 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not (= x700 274184521717934524641157099916833587233)) (not (= x700 1100443145)) (not (= x700 3257672857)) (not (= x700 274184521717934524641157099916833587223)) (not (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x700)) (not (= x700 1461501637330902918203684832716283019655932542976)) (not (= x700 274184521717934524641157099916833587235)) (not (= x700 18446744073709551616)) (not (= x700 2325509075)) (not (= x700 2059260625))) (not ((_ is x87) (x766 x700)))))
(assert (x864 x670))
(assert (x864 x59))
(assert (x864 x672))
(assert (x864 x18))
(assert (= (x766 1000000000000000000) (x87 1000000000000000000)))
(assert (x864 x923))
(assert (x864 x746))
(assert (x864 x637))
(assert (= (x696 (x87 950698303)) 950698303))
(assert (= x587 (and x23 (not x567))))
(assert (= (x696 (x87 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= (x766 1208925819614629174706176) (x87 1208925819614629174706176)))
(assert (x864 x629))
(assert (x864 x620))
(assert (= (x696 (x87 3253611544)) 3253611544))
(assert (x864 x513))
(assert (= (x87 2371715404) (x766 2371715404)))
(assert (x864 x579))
(assert (x864 x235))
(assert (= x601 (x696 (x766 x601))))
(assert (x864 x734))
(assert (x864 x614))
(assert (x530 274184521717934524641157099916833587227))
(assert (= (x87 2472862090) (x766 2472862090)))
(assert (x303 x466))
(assert (= (x696 (x87 1208925819614629174706175)) 1208925819614629174706175))
(assert (= (x369 x247) (ite (= x247 x360) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x347 x247))))
(assert (= 1168994686 (x696 (x87 1168994686))))
(assert (x864 x476))
(assert (x864 x624))
(assert (x864 x453))
(assert (= 1000000000000000000 (x696 (x87 1000000000000000000))))
(assert (= (x4 x31) (ite (= x31 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x65 x31))))
(assert (x864 x178))
(assert (= 0 (x368 x566)))
(assert (x864 x787))
(assert (= 0 (x600 x871)))
(assert (= (x755 x558) (ite (= 128 x558) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x271 x558))))
(assert (x552 x53 x790))
(assert (x936 x554 x511))
(assert (x864 x554))
(assert (x864 x167))
(assert (x864 x465))
(assert (x864 x487))
(assert (= 1099511627775 (x696 (x87 1099511627775))))
(assert (= x66 x339))
(assert (x864 x441))
(assert (x864 x315))
(assert true)
(assert (x864 x214))
(assert (x864 x211))
(assert (x864 x898))
(assert (x303 x96))
(assert (x864 x414))
(assert (x864 x566))
(assert (x864 x108))
(assert (= x121 (and x785 x422)))
(assert (x303 x465))
(assert (x864 x817))
(assert (= 1208925819614629174706176 (x696 (x87 1208925819614629174706176))))
(assert (x864 x281))
(assert (x864 x254))
(assert (x864 x425))
(assert (x864 x93))
(assert (x864 x871))
(assert (=> (>= 10000 x891) (= (x766 x891) (x87 x891))))
(assert (x303 255))
(assert (x864 x442))
(assert (x303 x434))
(assert (x864 x181))
(assert (x864 x692))
(assert (= (x780 x253) 0))
(assert (= 2059260625 (x696 (x87 2059260625))))
(assert (x864 x559))
(assert (= x17 true))
(assert (x303 x207))
(assert (= (x766 1099511627775) (x87 1099511627775)))
(assert (= (x696 (x87 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x864 x762))
(assert (= (or (and x260 x541) (and x633 x516)) x674))
(assert (x864 x645))
(assert (x864 x405))
(assert (=> (>= 10000 x878) (= (x87 x878) (x766 x878))))
(assert (x864 x689))
(assert (x864 x67))
(assert (x864 x373))
(assert (= (ite (= x31 x161) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x646 x31)) (x464 x31)))
(assert (x864 x886))
(assert (x864 x218))
(assert (x864 x135))
(assert (x864 x790))
(assert (x530 x601))
(assert (= (x696 (x87 65535)) 65535))
(assert (x303 x750))
(assert (= (x696 (x87 2371715404)) 2371715404))
(assert (= x110 (=> (and (= (x681 x523) x466) (= x711 (mod (* x393 x765) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x711 x550) x12) (= x329 (and (= true (<= x932 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x932 0))) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x118) true) (< x118 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x118)) x57) (= (x165 (+ x253 64)) x33) (< (* x162 x12) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x165 (+ x598 288)) x31) (= x725 (x919 x161)) (not (= 0 x513)) (= x825 (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x893) (<= x120 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x120 x893)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x893) (<= x120 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (not (or (and (> 160 x800) (= (<= x800 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x800 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x165 (+ 64 x694)) x151) (= x120 (div x837 1000000000000000000)) (= x53 (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x118) (and (> 0 x118) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x118)))) 1 0)) (= x893 (x124 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x118))) (= (x572 18446744073709551615 x466) x550) (= (x919 x151) x441) (= x41 0) (= x716 x771) (= x185 (not x329)) (not (> x120 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x231 0) (= (* x12 x162) x837) (< 0 x550) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x120) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x277)) (and (< x120 x277) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x120) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x277)))) 1 0) x790) (= (x572 x53 x790) x231) (= x475 (x608 x33)) (= x523 (x165 (+ x504 64))) (= (x919 x31) x932) (= (x572 18446744073709551615 x475) x162) (not (ite x185 x185 (and (< 170141183460469231731687303715884105727 x932) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x932))))) (= (x165 (+ x120 x118)) x716) (<= x441 1208925819614629174706175) (= x762 (ite (not x57) 1 0)) (>= 1208925819614629174706175 x725) (= (x165 (+ 64 x161)) x694) (= x277 (x124 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x118))) (= x41 (x572 x762 x825)) (= (x572 340282366920938463463374607431768211455 x932) x393)) x392)))
(assert (x864 x372))
(assert (x864 x768))
(assert (x303 x808))
(assert (x864 x248))
(assert (x864 x777))
(assert (x303 x476))
(assert (= (x696 (x87 57896044618658097711785492504343953926634992332820282019728792003956564819968)) 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x297 x526 x471))
(assert (= (x87 2362581449) (x766 2362581449)))
(assert (x303 x472))
(assert (x864 x301))
(assert (x864 x41))
(assert (x530 x878))
(assert (x864 x269))
(assert (= (x696 (x766 x891)) x891))
(assert (x864 x897))
(assert (x864 x686))
(assert (x936 x614 x416))
(assert (x864 x341))
(assert (x864 x878))
(assert (x864 x183))
(assert (x864 x195))
(assert (x303 x128))
(assert (x864 x801))
(assert (x864 x496))
(assert (= x840 x390))
(assert (x864 x435))
(assert (x864 x494))
(assert (= (x766 1168994686) (x87 1168994686)))
(assert (x864 x84))
(assert (= x479 (and x630 x820)))
(assert (x864 x207))
(assert (x864 x622))
(assert (x864 x688))
(assert (x864 x550))
(assert (x864 x101))
(assert (= 274184521717934524641157099916833587244 (x696 (x87 274184521717934524641157099916833587244))))
(assert (= (x87 3257672857) (x766 3257672857)))
(assert (x936 x255 x263))
(assert (x864 x917))
(assert (x864 x786))
(assert (x864 x106))
(assert (x864 x821))
(assert (x864 x778))
(assert (x864 x404))
(assert (x864 x240))
(assert (= (x696 (x757 x931 2)) (+ 2 (x696 x931))))
(assert (x303 x790))
(assert (x908 x686 x501))
(assert (x864 x160))
(assert (x864 x216))
(assert (x303 x195))
(assert (x256 x359 x678))
(assert (x864 x466))
(assert (= x770 true))
(assert (= (x87 2348850734) (x766 2348850734)))
(assert (x864 x458))
(assert (= (x696 (x766 x72)) x72))
(assert (x864 x128))
(assert (x864 x63))
(assert (= (x87 65535) (x766 65535)))
(assert (x864 x934))
(assert (= (=> (and (< 0 x897) (= 0 x35) (= x617 2531764673) (not (< x584 4)) (not (= 2348850734 x617)) (= 1000000000000000 x492) (not (= x617 2472862090)) (< x617 2661915226) (< x617 3253611544) (= x300 1000000000000000) (= (x856 (x766 274184521717934524641157099916833587210)) x897) (not (= 2325509075 x617)) (not (< x617 2325509075)) (not (> 2059964113 x617)) (not (= 2371715404 x617)) (not (= x617 2419208567))) (=> (= x622 x522) x384)) x669))
(assert (= (x696 (x766 274184521717934524641157099916833587244)) 274184521717934524641157099916833587244))
(assert (= (x87 1208925819614629174706175) (x766 1208925819614629174706175)))
(assert (x864 x783))
(assert (x864 x282))
(assert (x864 x138))
(assert (= 1752364190 (x696 (x87 1752364190))))
(assert (= (x696 (x87 20282409603651670423947251286016)) 20282409603651670423947251286016))
(assert (= (x766 3253611544) (x87 3253611544)))
(assert (x864 x831))
(assert (x864 x591))
(assert (x303 x255))
(assert (x868 x466 x610))
(assert (= x862 (=> (and (= x589 (> (x856 (x766 274184521717934524641157099916833587227)) 0)) (= (> (x856 (x766 274184521717934524641157099916833587210)) 0) x631) (= x64 (x413 (x766 274184521717934524641157099916833587244))) (= x921 2531764673) (<= x315 18446744073709551615) (<= x274 255) (<= x494 18446744073709551615) (= (> (x856 (x766 274184521717934524641157099916833587223)) 0) x909) (>= 18446744073709551615 x356) (<= 0 x356) (= (x413 (x766 274184521717934524641157099916833587233)) x814) (>= x578 0) (>= x814 0) (<= 0 x107) (<= x767 18446744073709551615) (= x638 (x413 (x766 274184521717934524641157099916833587235))) (>= x901 0) (<= 0 x579) (<= x5 20282409603651670423947251286015) (= x878 x522) (<= 0 x494) (= x508 x579) x85 x631 (>= 1208925819614629174706175 x444) (= false x625) x345 (= (x413 (x766 274184521717934524641157099916833587223)) x677) (= false x858) (<= 0 x274) (<= 0 x444) (= (> (x856 (x766 274184521717934524641157099916833587231)) 0) x345) (<= 0 x313) (<= 0 x692) (= x905 (x413 (x766 274184521717934524641157099916833587231))) x909 (>= 255 x210) (<= x578 18446744073709551615) (<= 0 x248) (>= x905 0) (>= 18446744073709551615 x13) (= x527 (< 0 (x856 (x766 274184521717934524641157099916833587233)))) (>= 20282409603651670423947251286015 x901) (>= x616 0) (<= x320 20282409603651670423947251286015) (>= 20282409603651670423947251286015 x89) (>= 1208925819614629174706175 x692) x527 (<= x313 18446744073709551615) (>= x139 0) (<= 0 x809) (<= 0 x764) x222 (<= 0 x89) (<= 0 x522) (>= 255 x458) (<= 0 x5) (= x222 (not (= 274184521717934524641157099916833587210 x54))) x589 (>= x315 0) (= (> (x856 (x766 274184521717934524641157099916833587244)) 0) x298) (<= x579 1461501637330902918203684832716283019655932542975) (= x54 x522) (>= x64 0) (= (x413 (x766 274184521717934524641157099916833587227)) x421) (<= 0 x638) (>= 1208925819614629174706175 x279) (<= x637 18446744073709551615) (= x350 0) x298 (>= x458 0) (<= 0 x279) (<= x764 1208925819614629174706175) (>= x767 0) (= x817 x139) (>= x421 0) (= x85 (< 0 (x856 (x766 274184521717934524641157099916833587235)))) (>= 255 x616) (= x107 (x413 (x766 274184521717934524641157099916833587210))) (>= 1099511627775 x248) (<= 0 x13) (= x275 false) (= x8 274184521717934524641157099916833587210) (<= 0 x677) (>= x637 0) (= x180 false) (>= 1461501637330902918203684832716283019655932542975 x139) (<= x809 1099511627775) (>= x210 0) (>= 1461501637330902918203684832716283019655932542975 x522) (>= x320 0)) x740)))
(assert (= (x696 (x766 274184521717934524641157099916833587235)) 274184521717934524641157099916833587235))
(assert (x864 x584))
(assert (x864 x5))
(assert (x530 x642))
(assert (x864 x34))
(assert (x864 x127))
(assert (x864 x90))
(assert (x864 x383))
(assert (x936 x867 x398))
(assert (= (x696 (x87 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (x570 x854))
(assert (= (x696 (x87 274184521717934524641157099916833587235)) 274184521717934524641157099916833587235))
(assert (x864 x47))
(assert (x864 x825))
(assert (x303 x528))
(assert (x864 x397))
(assert (x864 x276))
(assert (= x740 (=> (and (<= x472 20282409603651670423947251286015) (not (= 1736444767 x97)) (< x472 20282409603651670423947251286016) (= x537 (x295 (x766 x878) (x87 5) 0)) (= x97 2059260625) (= (x856 (x766 274184521717934524641157099916833587210)) x844) (>= x472 0) (not (= 2055092157 x97)) (not (< x97 1168994686)) (> 2059964113 x97) (not (= x97 1558726628)) (>= 1461501637330902918203684832716283019655932542975 x878) (not (= 2000660004 x97)) (not (> 1558726628 x97)) (not (= x97 1752364190)) (= (x618 x472) x760) (> x844 0) (not (> 950698303 x97)) (= x563 x760) (= (x147 x537) x472)) (=> (and (= (x856 (x766 274184521717934524641157099916833587210)) x318) (< x250 1168994686) (= (or (and (> 0 x246) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x246))) (> x246 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x257) (> x318 0) (= x774 (x295 (x766 x601) (x87 5) 0)) (= (x147 x925) x854) (>= 1461501637330902918203684832716283019655932542975 x601) (= 950698303 x250) (> 1100443145 x250) (not (< x250 950698303)) (< x627 65536) (= (x618 x854) x424) (<= x854 20282409603651670423947251286015) (>= x627 0) (<= x627 65535) (= x522 x601) (= (x295 (x766 x601) (x87 5) 0) x925) (<= 0 x854) (> 2059964113 x250) (> 20282409603651670423947251286016 x854) (= 0 x39) (= x627 (x348 x774)) (= (or (> x424 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x424 0) (= (<= x424 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x394) (= x246 x563) (or (and (not (or (and (= true (<= x614 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x614 0)) (> x614 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 18446744073709551616 x313) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x424)) (= (x572 20282409603651670423947251286015 x614) x418) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x166)) (>= x313 0) x394 (= (div x502 1000000000000000) x167) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x418 x313)) (= x614 (x124 (- 0 x424))) (= (x572 20282409603651670423947251286015 x167) x228) (= x282 x207) (= x282 (x124 (- 0 x166))) (= x166 (x618 x167)) (= (* x313 x418) x502) (not (> x228 10141204801825835211973625643007)) (>= 18446744073709551615 x313)) (and (<= x637 18446744073709551615) (= (x572 20282409603651670423947251286015 x424) x789) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x789 x637)) (not x394) (< x637 18446744073709551616) (= x830 (* x789 x637)) (= x207 x515) (= (div x830 1000000000000000) x515) (= (x572 20282409603651670423947251286015 x515) x435) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x424)) (> 0 x424)) (> x424 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< 10141204801825835211973625643007 x435)) (<= 0 x637)))) x463))))
(assert (x864 x389))
(assert (x864 x549))
(assert (= (x766 115197700812830431890159100217698998050002284567939525164234024451216521560064) (x87 115197700812830431890159100217698998050002284567939525164234024451216521560064)))
(assert (x864 x436))
(assert (x864 x118))
(assert (= 2419208567 (x696 (x87 2419208567))))
(assert (x530 x622))
(assert (x864 x217))
(assert (x864 x508))
(assert (x864 x350))
(assert (x864 x8))
(assert (x864 x638))
(assert (= (x696 (x87 274184521717934524641157099916833587233)) 274184521717934524641157099916833587233))
(assert (x864 x230))
(assert (= (x87 274184521717934524641157099916833587233) (x766 274184521717934524641157099916833587233)))
(assert (x864 x528))
(assert (= (x696 (x87 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= (x87 2661915226) (x766 2661915226)))
(assert (= x17 x565))
(assert (x864 x461))
(assert (x256 x561 x431))
(assert (= x18 (x696 (x766 x18))))
(assert (= x287 (=> (= x52 (= x122 274184521717934524641157099916833587233)) (and (=> (and (not (= 4062139261 x852)) (= x748 (x357 224)) (<= x764 1208925819614629174706175) (>= x389 0) (>= x444 0) (= x160 4) (= (x357 160) x595) (>= 1208925819614629174706175 x444) (> x923 0) (not (> 2362581449 x852)) (= (x357 224) x400) (< x444 1208925819614629174706176) (< x764 1208925819614629174706176) (not (> 4 x160)) x52 (= x733 (x357 192)) (>= x560 0) (= x203 1) (= x829 160) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x900) (= x544 (x357 160)) (= 4272920204 x852) (= x539 (x357 128)) (= x815 (x295 (x766 x910) (x87 1) 0)) (= x28 (x357 256)) (= (x357 256) x832) (= x389 (x76 x815)) (= x923 (x856 (x766 274184521717934524641157099916833587233))) (<= 0 x198) (not (= 3257672857 x852)) (<= x560 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x461 (x357 128)) (<= 0 x764) (<= x198 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x330 (x357 192)) (not (= x852 2362581449)) (<= x389 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 4 x160)) x929) (=> (not x52) x251)))))
(assert (x864 x428))
(assert (= x525 (or (and x312 x479) x796)))
(assert (x864 x492))
(assert (= (x87 4062139261) (x766 4062139261)))
(assert (x864 x659))
(assert (x303 18446744073709551615))
(assert (x530 274184521717934524641157099916833587210))
(assert (x864 x472))
(assert (x864 x358))
(assert (= (=> (= x785 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x14) (and (< x14 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x14))))) (and (=> x785 x553) (=> (and (= x557 1) (not x785)) x114))) x939))
(assert (x864 x573))
(assert (= (x87 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x766 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x864 x529))
(assert (x864 x798))
(assert (x864 x259))
(assert (x864 x427))
(assert (x864 x88))
(assert (x864 x752))
(assert (x864 x802))
(assert (x864 x607))
(assert (= (x65 x31) 0))
(assert (x864 x120))
(assert (x864 x944))
(assert (x530 x891))
(assert (x864 x526))
(assert (x864 x568))
(assert (x864 x772))
(assert (x864 x152))
(assert (x864 x379))
(assert (x864 x33))
(assert (x864 x661))
(assert (= 274184521717934524641157099916833587210 (x696 (x766 274184521717934524641157099916833587210))))
(assert (x303 x53))
(assert (= (or (and x83 x470) (and x23 x567)) x796))
(assert (x864 x558))
(assert (x936 x854 x649))
(assert (x864 x497))
(assert (x864 x49))
(assert (= (x696 (x87 2531764673)) 2531764673))
(assert (= (x87 4272920204) (x766 4272920204)))
(assert (= 340282366920938463463374607431768211456 (x696 (x87 340282366920938463463374607431768211456))))
(assert (x864 x941))
(assert (= (x766 1461501637330902918203684832716283019655932542975) (x87 1461501637330902918203684832716283019655932542975)))
(assert (x864 x203))
(assert (x303 x526))
(assert (x864 x243))
(assert (x864 x859))
(assert (= (and x633 (not x516)) x132))
(assert (x864 x444))
(assert (= x673 (=> (and (= 128 x311) (= x541 (= 274184521717934524641157099916833587235 x192)) (= (x572 1461501637330902918203684832716283019655932542975 x526) x192) (= (x618 x465) x528)) (and (=> (and (not (= x559 2362581449)) (= (x490 128) x436) (= x351 160) (= x850 4) (= 4 x850) (<= x629 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x40 (x490 224)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x586) x541 (>= x450 0) (= (x490 128) x944) (<= x279 1208925819614629174706175) (>= x722 0) (not (= x559 3257672857)) (> x156 0) (= x629 (x596 x866)) (not (= 4062139261 x559)) (= (x490 192) x497) (<= x722 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x811 (x490 224)) (= 1 x786) (<= 0 x279) (= x156 (x856 (x766 274184521717934524641157099916833587235))) (= 4272920204 x559) (>= x692 0) (< x279 1208925819614629174706176) (= (x490 160) x63) (>= 1208925819614629174706175 x692) (not (< x850 4)) (< x692 1208925819614629174706176) (= x730 (x490 256)) (= x548 (x490 256)) (= x366 (x490 160)) (<= 0 x629) (= x866 (x295 (x766 x891) (x87 1) 0)) (<= x450 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x559 2362581449)) (= (x490 192) x691)) x133) (=> (not x541) x499)))))
(assert (x864 x794))
(assert (= (x766 2059964113) (x87 2059964113)))
(assert (x864 x489))
(assert (x864 x595))
(assert (x864 x151))
(assert (x864 x44))
(assert (x530 274184521717934524641157099916833587235))
(assert (x864 x22))
(assert (x864 x448))
(assert (x864 x445))
(assert (x864 x19))
(assert (= 18446744073709551615 (x696 (x87 18446744073709551615))))
(assert (x297 x68 x904))
(assert (= (+ 1 (x696 x396)) (x696 (x757 x396 1))))
(assert (x530 274184521717934524641157099916833587233))
(assert (= 1000000000000000 (x696 (x87 1000000000000000))))
(assert (=> (<= x72 10000) (= (x766 x72) (x87 x72))))
(assert (x864 x168))
(assert (x864 x468))
(assert (x864 x304))
(assert (x303 x404))
(assert (x864 x129))
(assert (x864 x737))
(assert (= 274184521717934524641157099916833587227 (x696 (x87 274184521717934524641157099916833587227))))
(assert (x297 x761 x482))
(assert (= (x696 (x766 274184521717934524641157099916833587227)) 274184521717934524641157099916833587227))
(assert (= (x938 x523) 0))
(assert (x570 x465))
(assert (x864 x767))
(assert (= (=> (= x252 (= 274184521717934524641157099916833587233 x647)) (and (=> (and (= x58 (x76 x20)) (= (x718 256) x506) (= (x718 192) x410) (= x801 (x165 (+ 320 x913))) (= x644 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x20 (x295 (x766 x891) (x87 1) 0)) (= x60 (x165 (+ x913 352))) (>= x560 0) (not (= 3257672857 x746)) (= 160 x220) (= x569 (x165 (+ 384 x913))) (not (= 4062139261 x746)) (<= 0 x764) (= (x718 160) x98) (= (x856 (x766 274184521717934524641157099916833587233)) x474) (<= 0 x198) (<= x444 1208925819614629174706175) (= (x165 (+ 288 x913)) x102) x252 (>= x444 0) (not (= x746 2362581449)) (<= x58 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x534 (x718 224)) (< x764 1208925819614629174706176) (= (x718 192) x812) (= (x718 256) x90) (= x181 (x718 224)) (= (x718 128) x797) (<= x764 1208925819614629174706175) (= x301 4) (= x301 x399) (<= x560 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x198) (not (< x301 4)) (< 0 x474) (not (< x746 2362581449)) (= 1 x92) (> 1208925819614629174706176 x444) (>= x58 0) (= (x718 160) x688) (= x746 4272920204) (= (x718 128) x242)) x154) (=> (not x252) x770))) x580))
(assert (x864 x891))
(assert (= (x696 (x766 x878)) x878))
(assert (= (x696 (x87 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x864 x274))
(assert (x864 x832))
(assert (x864 x811))
(assert (x303 x445))
(assert (= (x766 170141183460469231731687303715884105727) (x87 170141183460469231731687303715884105727)))
(assert (= 1100443145 (x696 (x87 1100443145))))
(assert (x530 274184521717934524641157099916833587231))
(assert (x864 x892))
(assert (x864 x210))
(assert (x864 x758))
(assert (x570 x472))
(assert (= 170141183460469231731687303715884105727 (x696 (x87 170141183460469231731687303715884105727))))
(assert (= (x271 x558) 0))
(assert (x864 x42))
(assert (= (x696 (x87 2661915226)) 2661915226))
(assert (= (x696 (x766 x642)) x642))
(assert (x864 x833))
(assert (= (x648 x33) 0))
(assert (x864 x253))
(assert (x864 x170))
(assert (= x553 (=> (and (< x373 256) (>= x243 0) (< x402 1461501637330902918203684832716283019655932542976) (<= x373 255) (= x179 (= 274184521717934524641157099916833587235 x647)) (= (x194 x783) x254) (> 18446744073709551616 x941) (= (x417 x877) x941) (= (x165 (+ x913 64)) x334) (= x591 (x165 (+ x448 64))) (> 18446744073709551616 x243) (= x360 (x165 (+ x802 512))) (= (x165 (+ 384 x219)) x913) (= x448 (x165 (+ x334 64))) (= x383 (x136 x931)) (= (x572 255 x686) x489) (> 340282366920938463463374607431768211456 x898) (<= x941 18446744073709551615) (>= x781 0) (= x641 (x295 (x87 0) (x87 9) 0)) (= 0 x183) (= (x142 x877) x409) (= x898 (x294 x103)) (<= 0 x861) (= (x165 (+ 64 x783)) x367) (= (x572 1461501637330902918203684832716283019655932542975 x777) x647) (= x943 0) (= (x295 (x766 x129) (x87 6) 0) x704) (= (x143 x641) x861) (= (x295 (x766 x212) x704 0) x103) (= x126 (x572 1461501637330902918203684832716283019655932542975 x254)) (= 4 x399) (= (x165 (+ x913 64)) x362) (>= 1461501637330902918203684832716283019655932542975 x383) (= x566 (x165 (+ 288 x802))) (> 1461501637330902918203684832716283019655932542976 x383) (>= x82 0) (= (x942 x877) x781) (= x931 (x757 x593 1)) (= x243 (x169 x931)) (= x82 (x879 x592)) (<= x861 1461501637330902918203684832716283019655932542975) (>= 340282366920938463463374607431768211455 x898) (= (x382 x593) x373) (<= 0 x941) (< x409 18446744073709551616) (= (x100 x913) x686) (= (x165 (+ 64 x367)) x744) (<= x243 18446744073709551615) (>= x383 0) (= (x165 (+ x802 288)) x783) (<= 0 x402) (>= x898 0) (> 1461501637330902918203684832716283019655932542976 x861) (= (x757 x593 2) x877) (<= x402 1461501637330902918203684832716283019655932542975) (= x129 (x572 1461501637330902918203684832716283019655932542975 x476)) (= x777 (x581 x362)) (= (x757 x931 2) x592) (< x82 340282366920938463463374607431768211456) (<= x781 18446744073709551615) (= x489 0) (= x861 x126) (<= 0 x409) (= (x572 1461501637330902918203684832716283019655932542975 x68) x212) (= x49 (x165 (+ 64 x744))) (< x781 18446744073709551616) (>= 340282366920938463463374607431768211455 x82) (<= x409 18446744073709551615) (= x402 (x791 x593)) (= x593 (x295 (x87 0) (x87 10) 0)) (= x68 (x194 x566)) (>= x373 0)) (and (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x450) (= (x295 (x766 x891) (x87 1) 0) x684) (< x692 1208925819614629174706176) (= x934 (x16 128)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x722) (not (< x917 2362581449)) (= x496 (x16 256)) (= x220 160) (= (x16 160) x240) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x157) (= x131 (x165 (+ 320 x913))) (= x734 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x645 (x856 (x766 274184521717934524641157099916833587235))) (= x306 (x16 160)) (= (x16 128) x469) (not (= x917 4062139261)) (= x468 (x16 192)) (= 4 x562) (= x376 (x16 256)) (> 1208925819614629174706176 x279) (= (x165 (+ 352 x913)) x363) (= x429 (x16 224)) (= x399 x562) (>= x722 0) (= x157 (x596 x684)) (not (= 2362581449 x917)) (= x794 (x165 (+ 288 x913))) (>= 1208925819614629174706175 x692) (>= 1208925819614629174706175 x279) (= (x165 (+ x913 384)) x59) (> x645 0) (<= 0 x157) (not (< x562 4)) (>= x692 0) x179 (<= 0 x450) (= (x16 192) x378) (= x917 4272920204) (>= x279 0) (= (x16 224) x292) (= x92 1) (not (= 3257672857 x917))) x154) (=> (not x179) x580)))))
(assert (x864 x92))
(assert (x864 x708))
(assert (x864 x921))
(assert (= x910 (x696 (x766 x910))))
(assert (= (x766 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x87 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x936 x207 x6))
(assert (x864 x13))
(assert (x864 x609))
(assert (x864 x800))
(assert (x864 x582))
(assert (= (x766 20282409603651670423947251286015) (x87 20282409603651670423947251286015)))
(assert (x908 x137 x658))
(assert (x864 x450))
(assert (=> (>= 10000 x627) (= (x766 x627) (x87 x627))))
(assert (x864 x743))
(assert (= (=> (and (= 4 x385) (> 1461501637330902918203684832716283019655932542976 x778) (= 0 x833) (= x161 (x165 (+ x42 512))) (>= x354 0) (= x18 (x572 1461501637330902918203684832716283019655932542975 x750)) (<= 0 x427) (= (x165 (+ x598 64)) x253) (= (x165 (+ 64 x751)) x209) (= x504 (x165 (+ x42 288))) (= (x295 (x766 x18) x546 0) x615) (= x778 (x143 x109)) (> 256 x467) (<= x427 1461501637330902918203684832716283019655932542975) (= x457 x778) (<= x765 340282366920938463463374607431768211455) (> 18446744073709551616 x776) (= (x294 x615) x765) (= x473 (x757 x396 2)) (= x273 0) (= (x942 x473) x354) (> 340282366920938463463374607431768211456 x481) (>= 18446744073709551615 x354) (= 0 x945) (= (x724 x598) x137) (= x546 (x295 (x766 x72) (x87 6) 0)) (= (x571 x253) x761) (> 1461501637330902918203684832716283019655932542976 x918) (> 18446744073709551616 x756) (>= 18446744073709551615 x756) (= (x382 x396) x467) (= x750 (x747 x504)) (< x427 1461501637330902918203684832716283019655932542976) (>= x481 0) (= x266 (x165 (+ x324 64))) (= x457 (x572 1461501637330902918203684832716283019655932542975 x404)) (>= 255 x467) (<= 0 x756) (= x751 (x165 (+ x42 288))) (= x109 (x295 (x87 0) (x87 9) 0)) (= x245 (x757 x706 2)) (= (x142 x473) x756) (= (x165 (+ 64 x302)) x892) (= x404 (x747 x751)) (< x354 18446744073709551616) (= (x295 (x87 0) (x87 10) 0) x396) (>= x778 0) (>= 340282366920938463463374607431768211455 x481) (>= 1461501637330902918203684832716283019655932542975 x918) (= x918 (x791 x396)) (= (x165 (+ x598 64)) x573) (= (x572 1461501637330902918203684832716283019655932542975 x761) x736) (>= 18446744073709551615 x276) (= (x572 1461501637330902918203684832716283019655932542975 x601) x72) (= (x417 x473) x776) (>= 1461501637330902918203684832716283019655932542975 x778) (= x324 (x165 (+ 64 x209))) (>= x467 0) (<= x776 18446744073709551615) (<= 0 x276) (> 18446744073709551616 x276) (= (x169 x706) x276) (= x598 (x165 (+ 384 x37))) (= (= 274184521717934524641157099916833587235 x736) x83) (<= 0 x918) (= x945 (x572 255 x137)) (< x765 340282366920938463463374607431768211456) (= (x757 x396 1) x706) (= x427 (x136 x706)) (<= 0 x765) (= (x879 x245) x481) (= x302 (x165 (+ x573 64))) (<= 0 x776)) (and (=> (not x83) x585) (=> (and (= x507 (x165 (+ x598 352))) (= (x342 128) x582) (= (x596 x149) x613) (= 4272920204 x624) (not (= x624 3257672857)) (= x816 (x342 256)) (> 1208925819614629174706176 x279) (<= 0 x450) (<= x279 1208925819614629174706175) (>= x613 0) (= x483 (x342 128)) (= 160 x800) (not (> 2362581449 x624)) (<= x692 1208925819614629174706175) (<= x613 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x692) (not (> 4 x135)) (= x138 (x342 192)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x450) (= (x295 (x766 x910) (x87 1) 0) x149) (= (x342 160) x634) x83 (= x713 (x342 256)) (> x821 0) (= (x342 160) x168) (= x659 (x165 (+ x598 288))) (= (x342 224) x495) (= x821 (x856 (x766 274184521717934524641157099916833587235))) (= x22 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x342 192) x425) (= 4 x135) (>= x722 0) (= 1 x513) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x722) (<= 0 x279) (= x135 x385) (< x692 1208925819614629174706176) (= x428 (x165 (+ x598 384))) (= (x165 (+ 320 x598)) x787) (= (x342 224) x19) (not (= x624 2362581449)) (not (= x624 4062139261))) x110))) x739))
(assert (= (x87 1000000000000000) (x766 1000000000000000)))
(assert (x864 x131))
(assert (x864 x14))
(assert (x864 x60))
(assert (x864 x861))
(assert (x864 x812))
(assert (= (x696 (x87 1736444767)) 1736444767))
(assert (x864 x905))
(assert (x864 x586))
(assert (= (and (not x738) x377) x322))
(assert (= (x696 (x87 1558726628)) 1558726628))
(assert (= x154 (=> (and (>= 1208925819614629174706175 x742) (= x397 (x1 x259)) (= 0 x353) (= (x924 x247) x561) (= (ite (not x314) 1 0) x38) (= x719 (x124 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x14))) (= (x165 (+ x360 64)) x152) (= x314 (or (and (< x14 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x14) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x14))) (= (x124 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x14)) x178) (not (= 0 x92)) (= x798 x381) (= (x165 (+ 64 x566)) x871) (= x96 (ite (or (and (<= x230 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x719 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x230 x719) (= (<= x230 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x719 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (= (x572 x808 x543) x371) (not (ite x79 x79 (and (< 170141183460469231731687303715884105727 x561) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x561))))) (= x371 0) (= (ite (or (and (> 0 x14) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x14))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x14)) 1 0) x808) (= x514 (and (= (<= x561 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 0 x561))) (= x661 (mod (* x234 x898) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x572 x38 x96) x353) (not (> x230 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x247 (x165 (+ x913 288))) (> x337 0) (< (* x88 x529) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x547 (* x529 x88)) (= x882 (x675 x871)) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x230) (<= x178 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x178 x230) (= (<= x178 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x230)))) 1 0) x543) (= (x924 x360) x619) (= x381 (x165 (+ x230 x14))) (= x230 (div x547 1000000000000000000)) (<= x619 1208925819614629174706175) (= (not x514) x79) (= x337 (x572 18446744073709551615 x882)) (= (div x661 x337) x88) (= x259 (x165 (+ 64 x362))) (= x234 (x572 340282366920938463463374607431768211455 x561)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x220) (and (> 160 x220) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x220))))) (= (x924 x558) x742) (= (x572 18446744073709551615 x397) x529) (= x558 (x165 (+ x152 64)))) x438)))
(assert (= (and (not x52) x322) x890))
(assert (x864 x644))
(assert (x864 x474))
(assert (x864 x493))
(assert (x864 x824))
(assert (x303 x686))
(assert (= (=> (= x516 (= x192 274184521717934524641157099916833587233)) (and (=> (and (> x826 0) (> 1208925819614629174706176 x444) (= x676 (x451 224)) (= x358 (x451 256)) (not (= x505 2362581449)) (<= x863 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 4272920204 x505) (>= x863 0) (= (x451 160) x453) (= 4 x21) (not (< x21 4)) (= (x451 192) x609) (>= x764 0) (= x662 (x451 256)) (= (x451 160) x763) (>= x560 0) (<= x764 1208925819614629174706175) (= x826 (x856 (x766 274184521717934524641157099916833587233))) (= (x295 (x766 x891) (x87 1) 0) x538) (not (= 4062139261 x505)) (= x786 1) x516 (<= 0 x444) (<= 0 x198) (= (x451 128) x672) (not (= 3257672857 x505)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x560) (= (x451 224) x74) (<= x198 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x451 128) x130) (not (> 2362581449 x505)) (<= x444 1208925819614629174706175) (= (x451 192) x894) (= x351 160) (= x863 (x76 x538)) (= x21 4) (< x764 1208925819614629174706176) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x493)) x133) (=> (not x516) x926))) x499))
(assert (x864 x361))
(assert (x864 x515))
(assert (x303 x601))
(assert (x864 x393))
(assert (= x752 (x696 (x766 x752))))
(assert (x864 x206))
(assert (x864 x220))
(assert (x868 x195 x111))
(assert (x864 x578))
(assert (x864 x760))
(assert (= (x87 2531764673) (x766 2531764673)))
(assert (= (or x525 (and (not x820) x630)) x352))
(assert (x864 x713))
(assert (x864 x38))
(assert (= (x696 (x757 x593 2)) (+ 2 (x696 x593))))
(assert (x864 x326))
(assert (= (x766 2055092157) (x87 2055092157)))
(assert (x864 x744))
(assert (x864 x409))
(assert (= (or (and (not x112) x272) x352) x66))
(assert (x864 x469))
(assert (x864 x356))
(assert (x297 x777 x899))
(assert (x864 x484))
(assert (x853 x640 x153 x328 x542))
(assert (x864 x12))
(assert (= (x696 (x87 2325509075)) 2325509075))
(assert (x864 x597))
(assert (x256 x434 x940))
(assert (x864 x522))
(assert (x864 x765))
(assert (= (ite (= x558 x360) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x347 x558)) (x369 x558)))
(assert (x864 x731))
(assert (= 10141204801825835211973625643007 (x696 (x87 10141204801825835211973625643007))))
(assert (x864 x71))
(assert (x864 x733))
(assert (x864 x945))
(assert (x864 x539))
(assert (x864 x771))
(assert (x864 x327))
(assert (x864 x325))
(assert (= x202 (and (not x252) x518)))
(assert (x864 x31))
(assert (x864 x137))
(assert (x864 x139))
(assert (x864 x318))
(assert (= (x87 2000660004) (x766 2000660004)))
(assert (= (x87 115792089237316195423570985008687907853269984655499359237631748795939503996928) (x766 115792089237316195423570985008687907853269984655499359237631748795939503996928)))
(assert (x864 x353))
(assert (= 2000660004 (x696 (x87 2000660004))))
(assert (x530 274184521717934524641157099916833587244))
(assert (= (x87 2059260625) (x766 2059260625)))
(assert (x864 x385))
(assert (x864 x197))
(assert (x570 x207))
(assert (x552 x762 x825))
(assert (x936 x728 x749))
(assert (= (x87 340282366920938463463374607431768211455) (x766 340282366920938463463374607431768211455)))
(assert (x864 x561))
(assert (= (x696 (x87 274184521717934524641157099916833587223)) 274184521717934524641157099916833587223))
(assert (x864 x359))
(assert (= (x87 1100443145) (x766 1100443145)))
(assert (x864 x188))
(assert (= 18446744073709551616 (x696 (x87 18446744073709551616))))
(assert (= (x766 65536) (x87 65536)))
(assert (x864 x155))
(assert (x864 x293))
(assert (x303 x825))
(assert (= (x87 1736444767) (x766 1736444767)))
(assert (x864 x507))
(assert (= 65536 (x696 (x87 65536))))
(assert (= (x766 274184521717934524641157099916833587210) (x87 274184521717934524641157099916833587210)))
(assert (x864 x39))
(assert (x552 x808 x543))
(assert (x864 x687))
(assert (x864 x806))
(assert (x864 x860))
(assert (x864 x915))
(assert (x7 x670))
(assert (x864 x316))
(assert (x864 x198))
(assert (x864 x75))
(assert (x864 x662))
(assert (x303 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x696 (x87 2059964113)) 2059964113))
(assert (=> (>= 10000 x476) (= (x766 x476) (x87 x476))))
(assert (x864 x742))
(assert (x864 x242))
(assert (x864 x900))
(assert (x864 x725))
(assert (x864 x107))
(assert (x864 x255))
(assert (=> (<= x601 10000) (= (x87 x601) (x766 x601))))
(assert (x303 20282409603651670423947251286015))
(assert (x864 x842))
(assert (x864 x838))
(assert (x303 x397))
(assert (x864 x333))
(assert (x864 x807))
(assert (x864 x239))
(assert (x864 x102))
(assert (x297 x404 x851))
(assert (x552 x38 x96))
(assert (x864 x37))
(assert (x864 x818))
(assert (= (x696 (x87 340282366920938463463374607431768211455)) 340282366920938463463374607431768211455))
(assert (x864 x728))
(assert (x864 x789))
(assert (x864 x844))
(assert (= x23 (and (not x83) x470)))
(assert (x530 x532))
(assert (x864 x157))
(assert (x864 x751))
(assert (x864 x720))
(assert (x864 x78))
(assert (x864 x808))
(assert (= (x87 2419208567) (x766 2419208567)))
(assert (x864 x28))
(assert (= x840 (or (and x422 (not x785)) x480)))
(assert (= x212 (x696 (x766 x212))))
(assert (x864 x381))
(assert (= x129 (x696 (x766 x129))))
(assert (x864 x284))
(assert (x864 x234))
(assert (x864 x25))
(assert (x303 x543))
(assert (x864 x548))
(assert (x864 x277))
(assert (= (=> (= x112 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x118) true) (> 0 x118)) (> x118 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (=> x112 x739) (=> (and (not x112) (= 1 x171)) x81))) x447))
(assert (x864 x475))
(assert (x864 x279))
(assert (= (and (not x312) x479) x272))
(assert (x864 x764))
(assert (x303 x424))
(assert (x864 x495))
(assert (x864 x250))
(assert (x864 x64))
(assert (x864 x932))
(assert (x864 x483))
(assert (= (x696 (x87 4062139261)) 4062139261))
(assert (x864 x97))
(assert (x864 x89))
(assert (= (+ (x696 x706) 2) (x696 (x757 x706 2))))
(assert (= x518 (and x121 (not x179))))
(assert (x864 x913))
(assert (x303 x882))
(assert (x864 x193))
(assert (= (x696 (x766 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x864 x750))
(assert (= (x696 (x87 2362581449)) 2362581449))
(assert (x864 x722))
(assert (=> (>= 10000 x129) (= (x87 x129) (x766 x129))))
(assert (x303 x867))
(assert (x864 x337))
(assert (x864 x302))
(assert (x864 x166))
(assert (x864 x354))
(assert (x864 x523))
(assert (= x159 (and x674 x285)))
(assert (x864 x711))
(assert (x864 x616))
(assert (x530 x627))
(assert (= (=> (and (> x620 0) (>= 1208925819614629174706175 x25) (= (not x331) x735) (not (ite x735 x735 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x434) true) (> x434 170141183460469231731687303715884105727)))) (= (x165 (+ x219 128)) x802) (= (x572 18446744073709551615 x195) x620) (= x737 0) (= x93 (x572 255 x84)) (= x14 (ite (or (= 0 x874) (= 0 x620)) 0 (ite (= (< x874 57896044618658097711785492504343953926634992332820282019728792003956564819968) (< x620 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (div (ite (< x874 57896044618658097711785492504343953926634992332820282019728792003956564819968) x874 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x124 (- x874 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (< x620 57896044618658097711785492504343953926634992332820282019728792003956564819968) x620 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x124 (- x620 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div (ite (< x874 57896044618658097711785492504343953926634992332820282019728792003956564819968) x874 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x124 (- x874 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (< x620 57896044618658097711785492504343953926634992332820282019728792003956564819968) x620 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x124 (- x620 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x640 (x165 (+ 31 x351))) (= (mod (* x236 (x456 x528)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x874) (= (x572 340282366920938463463374607431768211455 x434) x236) (= (x347 128) x25) (<= x414 1208925819614629174706175) (= (x572 115792089237316195423570985008687907853269984665640564039457584007913129639904 x640) x219) (= x434 (x347 160)) (= x414 (x347 256)) (= x285 (< 0 x93)) (= x331 (and (> x434 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x434)))) (not (= x786 0)) (not (or (> x351 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 160 x351) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x351) true))))) (and (=> (and (= x44 x14) (not x285)) x91) (=> x285 x564))) x133))
(assert (x530 x18))
(assert (x570 x167))
(assert (= x622 (x696 (x766 x622))))
(assert (x864 x503))
(assert (x864 x421))
(assert (x864 x666))
(assert (= (x87 10141204801825835211973625643007) (x766 10141204801825835211973625643007)))
(assert (x303 x932))
(assert (x864 x654))
(assert (x256 x932 x847))
(assert (x864 x410))
(assert (= (x766 18446744073709551616) (x87 18446744073709551616)))
(assert (= x114 (=> (and (= x332 (not x655)) (= x655 (= x557 0)) (= x549 (ite x332 1 0))) (=> (= (not (= 0 x549)) x229) x70))))
(assert (=> (>= 10000 x532) (= (x766 x532) (x87 x532))))
(assert (x864 x606))
(assert (x864 x481))
(assert (x864 x869))
(assert (x864 x601))
(assert (x864 x378))
(assert (= x426 true))
(assert (x864 x504))
(assert (x864 x320))
(assert (x868 x397 x401))
(assert (x864 x676))
(assert (x864 x874))
(assert (x864 x306))
(assert (x864 x161))
(assert (x864 x882))
(assert (x864 x627))
(assert (= (x755 x247) (ite (= x247 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x271 x247))))
(assert (= (x766 274184521717934524641157099916833587235) (x87 274184521717934524641157099916833587235)))
(assert (= (or (and x252 x518) (and x179 x121)) x15))
(assert (x864 x330))
(assert (= (x696 (x757 x396 2)) (+ (x696 x396) 2)))
(assert (x864 x363))
(assert (x864 x748))
(assert (x864 x321))
(assert (= x633 (and x260 (not x541))))
(assert (x864 x883))
(assert (= (=> (and (= (ite x657 1 0) x361) (= (not x759) x657) (= x759 (= 0 x171))) (=> (and (>= 1461501637330902918203684832716283019655932542975 x708) (= x915 x35) (<= x597 1461501637330902918203684832716283019655932542975) (> x584 3) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x584)) (= x508 x708) (<= 0 x807) (>= x708 0) (<= 0 x597) (= x449 (or (not x257) x732)) x449 (= x575 (not (= 0 x361))) (= x575 x732) (= x405 x597) (<= x807 1461501637330902918203684832716283019655932542975) (= x654 x405)) x669)) x81))
(assert (x7 x528))
(assert (x864 x617))
(assert (x864 x534))
(assert (x864 x126))
(assert (= 274184521717934524641157099916833587223 (x696 (x766 274184521717934524641157099916833587223))))
(assert (x864 x598))
(assert (x864 x399))
(assert (x864 x360))
(assert (= x280 x339))
(assert (= (x87 274184521717934524641157099916833587227) (x766 274184521717934524641157099916833587227)))
(assert (= (and (not x498) x159) x422))
(assert (x864 x563))
(assert (= x280 x260))
(assert (x864 x863))
(assert (x864 x367))
(assert (x303 x167))
(assert (x864 x266))
(assert (x303 x38))
(assert (=> (>= 10000 x642) (= (x87 x642) (x766 x642))))
(assert (x864 x854))
(assert (= (x87 274184521717934524641157099916833587223) (x766 274184521717934524641157099916833587223)))
(assert (x864 x583))
(assert (x864 x867))
(assert (x297 x601 x491))
(assert (= x926 true))
(assert (x864 x351))
(assert (x864 x928))
(assert (x864 x677))
(assert (= (x766 950698303) (x87 950698303)))
(assert (x864 x54))
(assert (= (=> (= (= 274184521717934524641157099916833587233 x736) x567) (and (=> (and (<= x198 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1208925819614629174706176 x764) (= 160 x800) (= x712 (x295 (x766 x910) (x87 1) 0)) (= (x856 (x766 274184521717934524641157099916833587233)) x319) (= x127 (x165 (+ x598 320))) (= x206 (x165 (+ 288 x598))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x95) (= x235 (x355 224)) (= (x355 192) x187) (not (= 4062139261 x216)) (= x689 (x355 192)) (= x323 4) (= x875 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x886 (x355 256)) (= x288 (x355 128)) (>= x764 0) (= x95 (x76 x712)) (= (x355 160) x218) (= x323 x385) (= (x355 160) x484) x567 (< x444 1208925819614629174706176) (= (x165 (+ 384 x598)) x379) (not (< x323 4)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x560) (= x333 (x355 256)) (not (= x216 3257672857)) (= x197 (x165 (+ 352 x598))) (not (< x216 2362581449)) (>= x560 0) (= 4272920204 x216) (<= x764 1208925819614629174706175) (= (x355 224) x664) (= 1 x513) (not (= 2362581449 x216)) (= (x355 128) x289) (>= 1208925819614629174706175 x444) (> x319 0) (>= x198 0) (>= x444 0) (>= x95 0)) x110) (=> (not x567) x426))) x585))
(assert (x864 x68))
(assert (x303 x761))
(assert (= x532 (x696 (x766 x532))))
(assert (x864 x156))
(assert (= (x87 2325509075) (x766 2325509075)))
(assert (x530 x212))
(assert (= x70 (=> (and (= x229 x745) (= x173 (or (not x602) x745))) x173)))
(assert (x864 x781))
(assert (x868 x475 x914))
(assert (x530 x910))
(assert (x864 x730))
(assert (x864 x694))
(assert (x936 x445 x335))
(assert (x864 x699))
(assert (x864 x901))
(assert (x864 x366))
(assert (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x696 (x87 115197700812830431890159100217698998050002284567939525164234024451216521560064))))
(assert (x530 274184521717934524641157099916833587223))
(assert (= x251 true))
(assert (= (x696 (x87 274184521717934524641157099916833587210)) 274184521717934524641157099916833587210))
(assert (= (or (and x738 x377) (and x322 x52)) x630))
(assert (= 0 (x804 x259)))
(assert (x864 x371))
(assert (= (x696 (x87 2348850734)) 2348850734))
(assert (x864 x814))
(assert (x864 x485))
(assert (x864 x162))
(assert (x570 x606))
(assert (x936 x167 x803))
(assert (= (x696 (x87 115792089237316195423570985008687907853269984655499359237631748795939503996928)) 115792089237316195423570985008687907853269984655499359237631748795939503996928))
(assert (= (x667 x362) 0))
(assert (= (and x112 x272) x470))
(assert (x864 x246))
(assert (x864 x212))
(assert (x864 x209))
(assert (= (x766 1461501637330902918203684832716283019655932542976) (x87 1461501637330902918203684832716283019655932542976)))
(assert (x303 1461501637330902918203684832716283019655932542975))
(assert (x864 x613))
(assert (= (x87 1752364190) (x766 1752364190)))
(assert (x864 x82))
(assert (x864 x776))
(assert (x864 x943))
(assert (= (=> (and (= (= x122 274184521717934524641157099916833587235) x738) (= (x618 x207) x670) (= 128 x806) (= (x572 1461501637330902918203684832716283019655932542975 x526) x122)) (and (=> (and (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x108) (= x75 (x45 224)) (< 0 x214) (= x842 (x45 160)) (= (x45 256) x217) (= 1 x203) (>= 1208925819614629174706175 x692) (<= x71 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x831 3257672857)) (>= x279 0) (= x71 (x596 x338)) x738 (= x818 (x45 128)) (>= 1208925819614629174706175 x279) (= x106 (x45 256)) (>= x722 0) (> 1208925819614629174706176 x692) (= (x45 128) x325) (not (< x831 2362581449)) (<= x450 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x692 0) (= x375 (x45 160)) (= x338 (x295 (x766 x910) (x87 1) 0)) (= x326 4) (= x643 (x45 192)) (= (x856 (x766 274184521717934524641157099916833587235)) x214) (= x831 4272920204) (= x326 4) (< x279 1208925819614629174706176) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x722) (not (= 4062139261 x831)) (= 160 x829) (= x503 (x45 192)) (not (< x326 4)) (= x849 (x45 224)) (<= 0 x71) (not (= 2362581449 x831)) (>= x450 0)) x929) (=> (not x738) x287))) x463))
(assert (=> (>= 10000 x622) (= (x87 x622) (x766 x622))))
(assert (x864 x763))
(assert (x864 x691))
(assert (x864 x313))
(assert (x864 x849))
(assert (x864 x231))
(assert (x303 x854))
(assert (= (ite (= x151 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x65 x151)) (x4 x151)))
(assert (x864 x640))
(assert (= (x766 274184521717934524641157099916833587244) (x87 274184521717934524641157099916833587244)))
(assert (x864 x323))
(assert (= (x87 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x766 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x864 x756))
(assert (= (x696 (x87 3257672857)) 3257672857))
(assert (x936 x472 x574))
(assert (x853 x128 x116 x588 x540))
(assert (not x862))
(assert (x864 x72))
(assert (x936 x515 x437))
(assert (x864 x623))
(assert (=> (<= x752 10000) (= (x766 x752) (x87 x752))))
(assert (x864 x560))
(assert (= (x87 20282409603651670423947251286016) (x766 20282409603651670423947251286016)))
(assert (x864 x875))
(assert (x303 x359))
(assert (x864 x429))
(assert (x864 x910))
(assert (x864 x761))
(assert (= x438 (=> (and (not x386) (= (x572 255 x84) x155) (= x798 x44) (= x386 (> x155 1))) x91)))
(assert (= (x766 274184521717934524641157099916833587231) (x87 274184521717934524641157099916833587231)))
(assert (x864 x716))
(assert (x864 x870))
(assert (x570 x554))
(assert (= (x696 (x757 x593 1)) (+ 1 (x696 x593))))
(assert (x303 x762))
(assert (x864 x58))
(assert (x864 x467))
(assert (x864 x612))
(assert (= x564 (=> (and (= (x295 (x87 0) (x87 9) 0) x238) (= x532 (x143 x238)) (>= x758 0) (= x498 (= x758 0)) (= 0 x743) (>= x532 0) (= x758 (x48 x190)) (>= 255 x758) (> 1461501637330902918203684832716283019655932542976 x532) (= x779 (x295 (x766 x642) (x87 11) 0)) (= (x295 (x766 x532) x779 0) x190) (<= x532 1461501637330902918203684832716283019655932542975) (< x758 256)) (and (=> (and (= x798 x14) x498) x438) (=> (not x498) x939)))))
(assert (x864 x557))
(assert (= (x766 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x87 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x864 x434))
(assert (= (=> (and (= x768 (x572 18446744073709551615 x195)) (<= x731 1208925819614629174706175) (not (ite x927 x927 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x359) true) (< 170141183460469231731687303715884105727 x359)))) (= (and (> x359 0) (= (<= x359 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x603) (= x820 (> x341 0)) (= (x165 (+ 128 x37)) x42) (= (x165 (+ x829 31)) x128) (not (or (and (< x829 160) (= true (<= x829 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x829 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x928 (x572 340282366920938463463374607431768211455 x359)) (= x37 (x572 115792089237316195423570985008687907853269984665640564039457584007913129639904 x128)) (= (not x603) x927) (= x859 0) (= x118 (ite (or (= 0 x281) (= x768 0)) 0 (ite (= (< x281 57896044618658097711785492504343953926634992332820282019728792003956564819968) (< x768 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (div (ite (< x281 57896044618658097711785492504343953926634992332820282019728792003956564819968) x281 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x124 (- x281 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (< x768 57896044618658097711785492504343953926634992332820282019728792003956564819968) x768 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x124 (- x768 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x281) x281 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x124 (- x281 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x768) x768 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x124 (- x768 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (> x768 0) (= (x646 160) x359) (= x699 (x646 256)) (= x341 (x572 255 x84)) (= (mod (* (x456 x670) x928) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x281) (>= 1208925819614629174706175 x699) (not (= x203 0)) (= x731 (x646 128))) (and (=> x820 x420) (=> (and (not x820) (= x883 x118)) x703))) x929))
(assert (= (=> (and (= (ite x268 1 0) x557) (= x650 (or (> x44 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x44) (= (<= x44 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x268 (not x650))) x114) x91))
(assert (x303 x614))
(assert (x297 x750 x933))
(assert (x864 x95))
(assert (x864 x506))
(assert (x297 x476 x80))
(assert (= 0 (x271 x247)))
(assert (= 4272920204 (x696 (x87 4272920204))))
(assert (= (=> (and (<= x622 1461501637330902918203684832716283019655932542975) (= x372 (x856 (x766 274184521717934524641157099916833587210))) (>= x606 0) (not (= 1558726628 x612)) (= x623 (x618 x606)) (not (> 950698303 x612)) (not (> 1558726628 x612)) (not (< x612 1168994686)) (< x612 2059964113) (> 20282409603651670423947251286016 x606) (> x372 0) (= (x147 x69) x606) (not (= x612 2000660004)) (<= x606 20282409603651670423947251286015) (not (= 1752364190 x612)) (= x612 2059260625) (not (= x612 1736444767)) (= x623 x51) (not (= 2055092157 x612)) (= (x295 (x766 x622) (x87 5) 0) x69)) (=> (and (= (x295 (x766 x476) (x87 5) 0) x500) (not (> 950698303 x860)) (> 20282409603651670423947251286016 x445) (= 950698303 x860) (= x522 x476) (= x364 (x295 (x766 x476) (x87 5) 0)) (= (x348 x364) x642) (= (or (and (< x255 0) (= (<= x255 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x255)) x488) (< x642 65536) (<= 0 x445) (> 2059964113 x860) (>= 65535 x642) (> x269 0) (or (and (= x720 (x124 (- 0 x442))) (< x313 18446744073709551616) (= x442 (x618 x554)) x488 (= x554 (div x264 1000000000000000)) (< (* x316 x313) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x255)) (= x465 x720) (<= x313 18446744073709551615) (= x264 (* x316 x313)) (= x867 (x124 (- 0 x255))) (= (x572 20282409603651670423947251286015 x554) x193) (not (or (> x867 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x867) true) (< x867 0)))) (>= x313 0) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x442)) (= x316 (x572 20282409603651670423947251286015 x867)) (not (< 10141204801825835211973625643007 x193))) (and (> 18446744073709551616 x637) (< (* x637 x101) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x572 20282409603651670423947251286015 x728) x607) (= x465 x728) (= (x572 20282409603651670423947251286015 x255) x101) (= x728 (div x799 1000000000000000)) (<= x637 18446744073709551615) (not (or (and (> 0 x255) (= true (<= x255 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x255))) (not x488) (<= 0 x637) (= (* x637 x101) x799) (not (< 10141204801825835211973625643007 x607)))) (<= 0 x642) (= x687 0) (= x51 x188) (< x860 1168994686) (>= 20282409603651670423947251286015 x445) (>= 1461501637330902918203684832716283019655932542975 x476) (< x860 1100443145) (= (x618 x445) x255) (= x445 (x147 x500)) (= x269 (x856 (x766 274184521717934524641157099916833587210))) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x188)) (> 0 x188)) (> x188 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x602)) x673)) x384))
(assert (= x480 (or x663 (and x674 (not x285)))))
(assert (x864 x273))
(assert (x864 x619))
(assert (x864 x289))
(assert (x864 x334))
(assert (x864 x719))
(assert (x864 x247))
(assert (x864 x893))
(assert (x864 x187))
(assert (x864 x642))
(assert (x864 x894))
(assert (x864 x850))
(assert (x303 x777))
(assert (x303 x554))
(assert (x864 x826))
(assert (x864 x400))
(assert (=> (>= 10000 x212) (= (x87 x212) (x766 x212))))
(assert (= 20282409603651670423947251286015 (x696 (x87 20282409603651670423947251286015))))
(assert (x864 x228))
(assert (x868 x882 x310))
(assert (x936 x424 x792))
(assert (x864 x300))
(assert (=> (>= 10000 x18) (= (x87 x18) (x766 x18))))
(assert (= (x696 (x87 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x303 x515))
(assert (= x392 (=> (and (= x839 (< 1 x170)) (= (x572 255 x84) x170) (not x839) (= x771 x883)) x703)))
(assert (x303 x475))
(assert (x864 x590))
(assert (x303 x84))
(assert (x864 x634))
(assert (x864 x236))
(assert (x864 x664))
(assert (= x565 x377))
(assert (x864 x362))
(assert (x864 x311))
(assert (x303 x254))
(assert (x864 x532))
(assert (x936 x465 x555))
(assert (= x663 (or (and x498 x159) x15)))
(assert (x530 x72))
(assert (x864 x204))
(assert (= (x696 (x766 274184521717934524641157099916833587233)) 274184521717934524641157099916833587233))
(assert (x864 x375))
(assert (x530 x752))
(assert (x864 x816))
(assert (x864 x98))
(assert (x864 x876))
(assert (= (x696 (x766 x627)) x627))
(assert (x303 x68))
(assert (x864 x219))
(assert (x864 x918))
(assert (x303 x561))
(assert (= (x87 340282366920938463463374607431768211456) (x766 340282366920938463463374607431768211456)))
(assert (x864 x797))
(assert (x303 x670))
(assert (x864 x21))
(assert (x864 x51))
(assert (x303 x606))
(assert (x864 x543))
(assert (x864 x639))
(assert (x864 x576))
(assert (x864 x505))
(assert (x864 x24))
(assert (x864 x376))
(assert (x864 x852))
(assert (x530 x129))
(assert (x864 x829))
(assert (x864 x457))
(assert (x864 x809))
(assert (x864 x74))
(assert (x864 x288))
(assert (= (=> (and (<= x752 1461501637330902918203684832716283019655932542975) (<= x869 255) (= (x295 (x766 x752) x533 0) x632) (= (x48 x632) x869) (= x680 (x295 (x87 0) (x87 9) 0)) (<= 0 x752) (= x752 (x143 x680)) (= x312 (= 0 x869)) (= x239 0) (< x752 1461501637330902918203684832716283019655932542976) (<= 0 x869) (= x533 (x295 (x766 x627) (x87 11) 0)) (> 256 x869)) (and (=> (and x312 (= x118 x771)) x392) (=> (not x312) x447))) x420))
(assert (x864 x192))
(assert (x303 x728))
(assert (x864 x424))
(assert (x864 x643))
(assert (x303 x137))
(assert (= (x766 18446744073709551615) (x87 18446744073709551615)))
(assert (= (x696 (x87 2055092157)) 2055092157))
(assert (x570 x445))
(assert (x864 x647))
(assert (x864 x40))
(assert (x908 x84 x433))
(assert (x256 x528 x545))
(assert (x864 x562))
(assert (x864 x569))
(assert (= 2472862090 (x696 (x87 2472862090))))
(assert (x864 x418))
(assert (x864 x402))
(assert (x530 x476))
(assert (x864 x319))
(assert (x864 x171))
(assert (= x476 (x696 (x766 x476))))
(assert (x303 340282366920938463463374607431768211455))
(assert (= (x885 x504) 0))
(assert (x864 x130))
(assert (x864 x544))
(assert (x864 x292))
(assert (x864 x122))
(assert (= x703 (=> (and (= (ite x710 1 0) x171) (= x99 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x883) true) (> 0 x883)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x883))) (= (not x99) x710)) x81)))
(assert (=> (>= 10000 x910) (= (x87 x910) (x766 x910))))
(assert (x864 x736))
(assert (x864 x35))
(assert (x297 x254 x175))
(assert (x936 x606 x258))
(assert (x864 x324))
(assert (= (x464 x151) (ite (= x161 x151) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x646 x151))))
(assert (= (x87 1558726628) (x766 1558726628)))
(assert (x303 x640))
(assert (x864 x96))
(assert (= (x65 x151) 0))
(assert (x864 x53))
(assert (x864 x793))
(assert (x256 x670 x930))
(check-sat)
