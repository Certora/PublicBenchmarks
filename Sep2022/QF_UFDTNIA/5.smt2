(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x905 0)) (((x1276 (x572 x905) (x913 x905) (x1146 Int)) (x467 (x867 Int)) (x1461 (x1117 x905) (x348 Int)))))
(declare-fun x639 () Int)
(declare-fun x221 (x905) Int)
(declare-fun x1258 () Bool)
(declare-fun x1126 () Int)
(declare-fun x631 () x905)
(declare-fun x130 () x905)
(declare-fun x1199 () Int)
(declare-fun x806 () x905)
(declare-fun x512 () Int)
(declare-fun x164 () x905)
(declare-fun x479 () Bool)
(declare-fun x617 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x927 () Int)
(declare-fun x1198 (Int) Int)
(declare-fun x1091 () Int)
(declare-fun x947 (Int) Int)
(declare-fun x969 () Bool)
(declare-fun x435 () Int)
(declare-fun x643 () Int)
(declare-fun x721 () Int)
(declare-fun x1221 () Int)
(declare-fun x106 () x905)
(declare-fun x1185 () Int)
(declare-fun x767 () x905)
(declare-fun x333 () Int)
(declare-fun x1335 () Bool)
(declare-fun x608 () Int)
(declare-fun x1316 () Int)
(declare-fun x985 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x1121 () Int)
(declare-fun x231 () x905)
(declare-fun x18 () Int)
(declare-fun x1394 () Bool)
(declare-fun x1113 () x905)
(declare-fun x485 () x905)
(declare-fun x862 () Bool)
(declare-fun x202 () Bool)
(declare-fun x437 () Bool)
(declare-fun x372 () Int)
(declare-fun x1479 () Bool)
(declare-fun x227 () Bool)
(declare-fun x9 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x509 () Int)
(declare-fun x1431 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x1292 () x905)
(declare-fun x523 () x905)
(declare-fun x1237 () Int)
(declare-fun x317 () Bool)
(declare-fun x832 () Int)
(declare-fun x1527 (x905) Int)
(declare-fun x682 () Int)
(declare-fun x99 () Bool)
(declare-fun x154 () Int)
(declare-fun x1480 () Int)
(declare-fun x769 () x905)
(declare-fun x967 () Int)
(declare-fun x1521 () Int)
(declare-fun x1171 () Bool)
(declare-fun x363 (x905) Int)
(declare-fun x488 () Int)
(declare-fun x659 () Int)
(declare-fun x1228 () Int)
(declare-fun x842 () Int)
(declare-fun x342 () Int)
(declare-fun x1203 () Int)
(declare-fun x191 () Int)
(declare-fun x581 () x905)
(declare-fun x1300 () Bool)
(declare-fun x152 () x905)
(declare-fun x575 () Bool)
(declare-fun x110 () Bool)
(declare-fun x234 () Int)
(declare-fun x1202 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x36 () x905)
(declare-fun x591 () Bool)
(declare-fun x1133 () x905)
(declare-fun x599 () Int)
(declare-fun x976 () Bool)
(declare-fun x1081 () x905)
(declare-fun x134 (x905) Int)
(declare-fun x1516 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x514 () Bool)
(declare-fun x351 () Int)
(declare-fun x718 () Int)
(declare-fun x1502 () x905)
(declare-fun x1294 () Int)
(declare-fun x781 () Bool)
(declare-fun x49 () Int)
(declare-fun x1536 () Int)
(declare-fun x1206 () x905)
(declare-fun x583 () x905)
(declare-fun x1145 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x1511 () x905)
(declare-fun x1177 () Int)
(declare-fun x996 () Int)
(declare-fun x395 () Int)
(declare-fun x279 () x905)
(declare-fun x1196 () Int)
(declare-fun x772 () Int)
(declare-fun x1002 () Int)
(declare-fun x613 () x905)
(declare-fun x1168 () Bool)
(declare-fun x621 () x905)
(declare-fun x386 () Bool)
(declare-fun x759 () Int)
(declare-fun x361 () Bool)
(declare-fun x142 () Bool)
(declare-fun x1329 () Int)
(declare-fun x1555 () Bool)
(declare-fun x600 () Bool)
(declare-fun x87 () Int)
(declare-fun x507 () Bool)
(declare-fun x1425 () x905)
(declare-fun x1403 () Int)
(declare-fun x655 () Bool)
(declare-fun x306 () Int)
(declare-fun x393 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x195 () Bool)
(declare-fun x1505 () x905)
(declare-fun x921 () x905)
(declare-fun x237 () x905)
(declare-fun x151 () Bool)
(declare-fun x426 () Int)
(declare-fun x122 () Int)
(declare-fun x723 () Int)
(declare-fun x204 () x905)
(declare-fun x610 () x905)
(declare-fun x1013 () Int)
(declare-fun x429 () Bool)
(declare-fun x1554 () x905)
(declare-fun x1400 () Int)
(declare-fun x667 () Int)
(declare-fun x201 () Bool)
(declare-fun x1093 () Int)
(declare-fun x346 () x905)
(declare-fun x641 () Bool)
(declare-fun x766 () Int)
(declare-fun x804 () Int)
(declare-fun x1118 () Int)
(declare-fun x1238 () Int)
(declare-fun x788 () Int)
(declare-fun x1407 () Bool)
(declare-fun x495 () Int)
(declare-fun x627 () Int)
(declare-fun x521 () Int)
(declare-fun x782 () Bool)
(declare-fun x894 () Bool)
(declare-fun x811 () Int)
(declare-fun x673 () Bool)
(declare-fun x789 () Bool)
(declare-fun x403 () Bool)
(declare-fun x1304 () Int)
(declare-fun x459 () Int)
(declare-fun x316 () Bool)
(declare-fun x773 () Int)
(declare-fun x538 (Int) Int)
(declare-fun x218 () x905)
(declare-fun x546 () Bool)
(declare-fun x1460 (Int) Int)
(declare-fun x364 () Bool)
(declare-fun x1549 (x905) Int)
(declare-fun x1273 () Bool)
(declare-fun x1115 () Int)
(declare-fun x497 () Int)
(declare-fun x1061 (Int) Int)
(declare-fun x362 () x905)
(declare-fun x269 () Bool)
(declare-fun x1007 () Int)
(declare-fun x216 () x905)
(declare-fun x515 () Bool)
(declare-fun x264 () Int)
(declare-fun x725 () Int)
(declare-fun x998 () Bool)
(declare-fun x37 () Bool)
(declare-fun x89 () Int)
(declare-fun x622 () Int)
(declare-fun x90 () x905)
(declare-fun x59 () Int)
(declare-fun x1321 () Int)
(declare-fun x193 () Bool)
(declare-fun x1233 () Int)
(declare-fun x1544 () x905)
(declare-fun x831 () Int)
(declare-fun x1411 () Int)
(declare-fun x1467 () Bool)
(declare-fun x464 () Int)
(declare-fun x762 () Int)
(declare-fun x215 () Int)
(declare-fun x41 () Int)
(declare-fun x1426 () Int)
(declare-fun x722 () Int)
(declare-fun x1434 () Int)
(declare-fun x38 () Int)
(declare-fun x738 () Bool)
(declare-fun x1074 () Int)
(declare-fun x1092 () Int)
(declare-fun x79 () Bool)
(declare-fun x672 () Int)
(declare-fun x1085 () Int)
(declare-fun x897 () Bool)
(declare-fun x377 () Int)
(declare-fun x1244 () Int)
(declare-fun x783 (Int) Int)
(declare-fun x1142 () Int)
(declare-fun x353 () Int)
(declare-fun x992 () x905)
(declare-fun x779 () Bool)
(declare-fun x245 () Bool)
(declare-fun x1473 () Int)
(declare-fun x1541 (Int) Int)
(declare-fun x1405 () Int)
(declare-fun x1191 () Int)
(declare-fun x731 () Bool)
(declare-fun x379 () Bool)
(declare-fun x798 () Bool)
(declare-fun x491 () Int)
(declare-fun x837 () x905)
(declare-fun x518 () Int)
(declare-fun x1419 () x905)
(declare-fun x1563 () x905)
(declare-fun x1284 () Bool)
(declare-fun x428 () Int)
(declare-fun x418 () x905)
(declare-fun x715 () Bool)
(declare-fun x196 () Bool)
(declare-fun x674 () Int)
(declare-fun x63 () Bool)
(declare-fun x1062 () x905)
(declare-fun x541 () Int)
(declare-fun x407 () Int)
(declare-fun x1058 () Bool)
(declare-fun x775 () x905)
(declare-fun x1371 () Bool)
(declare-fun x206 () x905)
(declare-fun x80 () Int)
(declare-fun x67 () Int)
(declare-fun x1134 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x383 () Int)
(declare-fun x1172 () Int)
(declare-fun x1570 () Int)
(declare-fun x1234 () Bool)
(declare-fun x535 () Bool)
(declare-fun x1524 () Int)
(declare-fun x584 () Int)
(declare-fun x1338 () x905)
(declare-fun x1413 () Bool)
(declare-fun x768 () x905)
(declare-fun x1469 () Bool)
(declare-fun x603 () Int)
(declare-fun x448 () Int)
(declare-fun x389 (Int) x905)
(declare-fun x640 () Int)
(declare-fun x844 () Bool)
(declare-fun x1528 () Int)
(declare-fun x214 (Int) Int)
(declare-fun x1274 () Int)
(declare-fun x169 () Int)
(declare-fun x1382 () Int)
(declare-fun x25 () Int)
(declare-fun x1163 () Bool)
(declare-fun x734 () Int)
(declare-fun x1296 () x905)
(declare-fun x217 () Int)
(declare-fun x885 () Int)
(declare-fun x877 () Bool)
(declare-fun x544 () x905)
(declare-fun x1148 () Bool)
(declare-fun x11 () Bool)
(declare-fun x777 () Int)
(declare-fun x1302 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x1455 () Int)
(declare-fun x153 () Int)
(declare-fun x823 () Bool)
(declare-fun x157 () Bool)
(declare-fun x254 () Bool)
(declare-fun x558 () x905)
(declare-fun x1243 () x905)
(declare-fun x1056 () Bool)
(declare-fun x873 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x432 () x905)
(declare-fun x968 () Int)
(declare-fun x861 () Int)
(declare-fun x1483 () Int)
(declare-fun x31 () Int)
(declare-fun x232 () Int)
(declare-fun x1248 () Int)
(declare-fun x822 () Int)
(declare-fun x412 () Bool)
(declare-fun x994 () Int)
(declare-fun x935 () Int)
(declare-fun x145 () Int)
(declare-fun x1268 (x905) Int)
(declare-fun x170 () x905)
(declare-fun x212 () x905)
(declare-fun x1374 () x905)
(declare-fun x569 () Bool)
(declare-fun x747 () Bool)
(declare-fun x539 () x905)
(declare-fun x487 () x905)
(declare-fun x602 () Bool)
(declare-fun x436 () Int)
(declare-fun x81 () Int)
(declare-fun x1475 () x905)
(declare-fun x619 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x592 () Int)
(declare-fun x1131 () Bool)
(declare-fun x336 () Int)
(declare-fun x45 () x905)
(declare-fun x1429 () Int)
(declare-fun x577 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x143 () x905)
(declare-fun x910 () Bool)
(declare-fun x466 () Int)
(declare-fun x376 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x425 () Int)
(declare-fun x1153 () Bool)
(declare-fun x322 () Bool)
(declare-fun x181 () x905)
(declare-fun x1539 () Bool)
(declare-fun x760 () x905)
(declare-fun x838 () Int)
(declare-fun x443 () x905)
(declare-fun x28 () x905)
(declare-fun x585 () Bool)
(declare-fun x1488 () Int)
(declare-fun x302 () Int)
(declare-fun x1312 (Int) Int)
(declare-fun x688 () Int)
(declare-fun x1342 () Bool)
(declare-fun x793 () Bool)
(declare-fun x637 () Int)
(declare-fun x192 () x905)
(declare-fun x751 () Bool)
(declare-fun x626 () Bool)
(declare-fun x174 () Int)
(declare-fun x1169 () Int)
(declare-fun x1269 () Bool)
(declare-fun x565 () x905)
(declare-fun x1018 () x905)
(declare-fun x1140 () Bool)
(declare-fun x687 () x905)
(declare-fun x829 () Bool)
(declare-fun x340 () Int)
(declare-fun x423 () Int)
(declare-fun x741 () x905)
(declare-fun x1030 () Bool)
(declare-fun x911 () Bool)
(declare-fun x854 () Int)
(declare-fun x101 () Int)
(declare-fun x461 () x905)
(declare-fun x1147 () Int)
(declare-fun x1125 () x905)
(declare-fun x820 () Int)
(declare-fun x1391 () x905)
(declare-fun x809 () Bool)
(declare-fun x1569 () Int)
(declare-fun x50 () x905)
(declare-fun x1020 () Int)
(declare-fun x64 () Int)
(declare-fun x1216 () Int)
(declare-fun x1503 () Bool)
(declare-fun x654 () Int)
(declare-fun x1266 () Bool)
(declare-fun x636 () Int)
(declare-fun x1449 () Bool)
(declare-fun x410 () Int)
(declare-fun x341 () Int)
(declare-fun x657 () Bool)
(declare-fun x819 () Int)
(declare-fun x301 () Int)
(declare-fun x764 () Bool)
(declare-fun x700 () Int)
(declare-fun x757 () Int)
(declare-fun x1123 (x905) Int)
(declare-fun x796 (x905) Int)
(declare-fun x1422 () x905)
(declare-fun x1478 () x905)
(declare-fun x394 () Bool)
(declare-fun x398 () Bool)
(declare-fun x1298 () Int)
(declare-fun x1119 () x905)
(declare-fun x645 () x905)
(declare-fun x543 () x905)
(declare-fun x48 () Int)
(declare-fun x801 () Int)
(declare-fun x199 () Bool)
(declare-fun x320 () Int)
(declare-fun x786 () Bool)
(declare-fun x172 () Int)
(declare-fun x133 () Bool)
(declare-fun x841 () Bool)
(declare-fun x352 () Int)
(declare-fun x1215 () Int)
(declare-fun x1048 () Int)
(declare-fun x590 () Int)
(declare-fun x1043 () Bool)
(declare-fun x519 () Int)
(declare-fun x113 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x879 () x905)
(declare-fun x649 () Int)
(declare-fun x100 () Bool)
(declare-fun x414 () Int)
(declare-fun x1214 () Int)
(declare-fun x284 () Int)
(declare-fun x1546 () Int)
(declare-fun x1384 () Int)
(declare-fun x1526 () Int)
(declare-fun x690 () Int)
(declare-fun x1224 () x905)
(declare-fun x825 () Int)
(declare-fun x1064 () x905)
(declare-fun x1009 () Int)
(declare-fun x1497 () Int)
(declare-fun x1448 () Int)
(declare-fun x1154 () x905)
(declare-fun x370 () Int)
(declare-fun x1307 () Int)
(declare-fun x1256 () Int)
(declare-fun x19 () Int)
(declare-fun x784 () Int)
(declare-fun x1439 () Bool)
(declare-fun x576 () Int)
(declare-fun x75 () Int)
(declare-fun x810 () Bool)
(declare-fun x1165 (x905) Int)
(declare-fun x676 () Int)
(declare-fun x445 () Bool)
(declare-fun x780 () Int)
(declare-fun x1458 () Bool)
(declare-fun x1288 () Int)
(declare-fun x1010 () Bool)
(declare-fun x950 () Int)
(declare-fun x419 () Int)
(declare-fun x319 () Int)
(declare-fun x928 () Int)
(declare-fun x597 () Bool)
(declare-fun x298 () Int)
(declare-fun x1501 () x905)
(declare-fun x1193 () Int)
(declare-fun x91 () Int)
(declare-fun x1358 () Bool)
(declare-fun x1481 () Int)
(declare-fun x1031 () Int)
(declare-fun x1352 () Bool)
(declare-fun x285 () x905)
(declare-fun x694 () Int)
(declare-fun x442 () Bool)
(declare-fun x474 () Int)
(declare-fun x473 () x905)
(declare-fun x699 () Bool)
(declare-fun x527 () Bool)
(declare-fun x960 () x905)
(declare-fun x1101 () Bool)
(declare-fun x652 () Bool)
(declare-fun x939 () Int)
(declare-fun x136 () Int)
(declare-fun x148 () Int)
(declare-fun x664 () Int)
(declare-fun x1438 () Bool)
(declare-fun x240 () x905)
(declare-fun x1281 () Int)
(declare-fun x1568 () Int)
(declare-fun x560 (Int Int) Int)
(declare-fun x35 () Bool)
(declare-fun x57 (Int) Int)
(declare-fun x1462 () Bool)
(declare-fun x183 () Int)
(declare-fun x1217 () Bool)
(declare-fun x874 () Bool)
(declare-fun x1026 () Int)
(declare-fun x477 () Int)
(declare-fun x880 () Int)
(declare-fun x74 () Int)
(declare-fun x278 () Int)
(declare-fun x5 () Bool)
(declare-fun x44 () Bool)
(declare-fun x62 () x905)
(declare-fun x990 () Bool)
(declare-fun x257 (Int) Int)
(declare-fun x1547 () Int)
(declare-fun x463 () Int)
(declare-fun x1535 () Bool)
(declare-fun x1337 () Int)
(declare-fun x416 () Int)
(declare-fun x198 () Bool)
(declare-fun x1303 () Int)
(declare-fun x1375 () x905)
(declare-fun x853 () Int)
(declare-fun x524 () x905)
(declare-fun x1213 () x905)
(declare-fun x4 () x905)
(declare-fun x595 () Int)
(declare-fun x283 () x905)
(declare-fun x662 () Int)
(declare-fun x661 () Int)
(declare-fun x289 () Bool)
(declare-fun x589 () Bool)
(declare-fun x707 () Int)
(declare-fun x609 () Int)
(declare-fun x1380 () Int)
(declare-fun x923 () Int)
(declare-fun x1476 () x905)
(declare-fun x239 () Int)
(declare-fun x703 () Int)
(declare-fun x51 () Int)
(declare-fun x1175 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x742 () Bool)
(declare-fun x611 () Int)
(declare-fun x1158 () x905)
(declare-fun x1071 () Bool)
(declare-fun x16 () Bool)
(declare-fun x705 () Bool)
(declare-fun x771 () Bool)
(declare-fun x1076 () Int)
(declare-fun x229 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x1372 () Int)
(declare-fun x748 () x905)
(declare-fun x1157 (Int) Int)
(declare-fun x1416 () x905)
(declare-fun x300 () Int)
(declare-fun x1019 () Bool)
(declare-fun x1567 () Int)
(declare-fun x604 () x905)
(declare-fun x1011 () Bool)
(declare-fun x1102 () Int)
(declare-fun x959 () Int)
(declare-fun x465 () Int)
(declare-fun x78 () Int)
(declare-fun x98 () Int)
(declare-fun x1220 () Int)
(declare-fun x413 () Int)
(declare-fun x1247 () Bool)
(declare-fun x681 () Int)
(declare-fun x1454 () Bool)
(declare-fun x1500 () Int)
(declare-fun x605 () Int)
(declare-fun x1144 () Int)
(declare-fun x224 () Int)
(declare-fun x308 () Int)
(declare-fun x571 () Bool)
(declare-fun x453 () Int)
(declare-fun x647 () Bool)
(declare-fun x47 () Bool)
(declare-fun x66 () x905)
(declare-fun x753 () Int)
(declare-fun x458 () x905)
(declare-fun x116 () Int)
(declare-fun x1295 () x905)
(declare-fun x1514 (Int) Int)
(declare-fun x280 () x905)
(declare-fun x1083 () Int)
(declare-fun x526 () Int)
(declare-fun x1470 () Int)
(declare-fun x972 () Int)
(declare-fun x553 () Int)
(declare-fun x920 () Int)
(declare-fun x787 () x905)
(declare-fun x745 () Bool)
(declare-fun x365 () Int)
(declare-fun x86 () Int)
(declare-fun x516 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x1465 () Bool)
(declare-fun x158 () Int)
(declare-fun x1484 (x905) Int)
(declare-fun x431 () Int)
(declare-fun x850 () Int)
(declare-fun x863 () x905)
(declare-fun x1306 () Bool)
(declare-fun x200 () Bool)
(declare-fun x250 () Bool)
(declare-fun x871 () Int)
(declare-fun x884 () Bool)
(declare-fun x555 () Int)
(declare-fun x1525 () Int)
(declare-fun x307 () x905)
(declare-fun x321 () Bool)
(declare-fun x542 () Bool)
(declare-fun x256 () Int)
(declare-fun x358 () Int)
(declare-fun x1291 () Int)
(declare-fun x1188 () x905)
(declare-fun x1025 () x905)
(declare-fun x347 () Int)
(declare-fun x1049 () Int)
(declare-fun x324 () x905)
(declare-fun x925 () Int)
(declare-fun x1533 () Bool)
(declare-fun x1278 () Int)
(declare-fun x878 () Bool)
(declare-fun x642 () Bool)
(declare-fun x1100 () Int)
(declare-fun x1111 () Int)
(declare-fun x1130 () Bool)
(declare-fun x638 () x905)
(declare-fun x1180 () Int)
(declare-fun x318 () x905)
(declare-fun x121 () Bool)
(declare-fun x1003 () Int)
(declare-fun x634 () Int)
(declare-fun x211 () Int)
(declare-fun x420 () Bool)
(declare-fun x120 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x175 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x439 () Bool)
(declare-fun x708 () Int)
(declare-fun x1034 () Bool)
(declare-fun x938 () x905)
(declare-fun x1254 () Int)
(declare-fun x455 () Bool)
(declare-fun x843 () Int)
(declare-fun x1037 () Bool)
(declare-fun x988 () Int)
(declare-fun x470 () Int)
(declare-fun x1466 () Int)
(declare-fun x185 () Int)
(declare-fun x53 () Bool)
(declare-fun x1453 () Int)
(declare-fun x498 () Int)
(declare-fun x140 () Bool)
(declare-fun x374 () x905)
(declare-fun x430 () Bool)
(declare-fun x373 () Int)
(declare-fun x213 () x905)
(declare-fun x1209 (Int) Int)
(declare-fun x1098 () Bool)
(declare-fun x1566 () Int)
(declare-fun x1451 () Int)
(declare-fun x1445 () Int)
(declare-fun x815 () Int)
(declare-fun x1089 () Bool)
(declare-fun x55 () Bool)
(declare-fun x932 () x905)
(declare-fun x730 () Int)
(declare-fun x1415 () Int)
(declare-fun x1194 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x457 () Int)
(declare-fun x548 () Bool)
(declare-fun x305 () Int)
(declare-fun x118 () Int)
(declare-fun x559 () Int)
(declare-fun x440 () Bool)
(declare-fun x291 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x520 () Int)
(declare-fun x1437 () Int)
(declare-fun x1023 () Int)
(declare-fun x1109 () Int)
(declare-fun x1227 () Int)
(declare-fun x1560 () Bool)
(declare-fun x1069 () x905)
(declare-fun x1052 () Int)
(declare-fun x926 () Int)
(declare-fun x65 () x905)
(declare-fun x258 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x891 () Int)
(declare-fun x962 () Int)
(declare-fun x574 () Int)
(declare-fun x586 () Bool)
(declare-fun x359 () x905)
(declare-fun x1029 () x905)
(declare-fun x272 () x905)
(declare-fun x469 () Bool)
(declare-fun x669 () Int)
(declare-fun x997 () Int)
(declare-fun x186 () Int)
(declare-fun x1459 () Int)
(declare-fun x1472 () Bool)
(declare-fun x856 () Int)
(declare-fun x460 () x905)
(declare-fun x1229 () Int)
(declare-fun x963 () Bool)
(declare-fun x1183 () Int)
(declare-fun x421 () Int)
(declare-fun x973 () Bool)
(declare-fun x1308 () Int)
(declare-fun x1187 () Int)
(declare-fun x903 () Int)
(declare-fun x888 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x1259 () Int)
(declare-fun x236 () Int)
(declare-fun x482 () Int)
(declare-fun x1122 () Int)
(declare-fun x409 () Bool)
(declare-fun x869 () Int)
(declare-fun x1552 () Int)
(declare-fun x656 () Bool)
(declare-fun x288 () Bool)
(declare-fun x706 () Int)
(declare-fun x695 () Int)
(declare-fun x1179 () Int)
(declare-fun x1369 () Int)
(declare-fun x930 () Int)
(declare-fun x22 () Int)
(declare-fun x1261 () Int)
(declare-fun x406 () Int)
(declare-fun x629 () Int)
(declare-fun x238 () Int)
(declare-fun x875 () x905)
(declare-fun x534 () Int)
(declare-fun x1553 () Bool)
(declare-fun x1087 () Int)
(declare-fun x830 () Int)
(declare-fun x900 () Int)
(declare-fun x209 () Int)
(declare-fun x1114 () Int)
(declare-fun x1226 () Int)
(declare-fun x686 () Int)
(declare-fun x1487 () Bool)
(declare-fun x249 () Int)
(declare-fun x295 () Int)
(declare-fun x1044 () Bool)
(declare-fun x128 () x905)
(declare-fun x233 () Int)
(declare-fun x1360 (x905) Int)
(declare-fun x1164 () x905)
(declare-fun x427 () Bool)
(declare-fun x1381 () x905)
(declare-fun x357 () Int)
(declare-fun x24 () Bool)
(declare-fun x10 () Int)
(declare-fun x1096 () Bool)
(declare-fun x692 () x905)
(declare-fun x127 () Int)
(declare-fun x1255 () Int)
(declare-fun x96 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x338 () Int)
(declare-fun x1077 (Int) Int)
(declare-fun x350 () Bool)
(declare-fun x651 () Bool)
(declare-fun x392 () Int)
(declare-fun x1270 () Int)
(declare-fun x168 () Int)
(declare-fun x1241 () Bool)
(declare-fun x276 () Bool)
(declare-fun x570 () Int)
(declare-fun x97 () Int)
(declare-fun x977 () Int)
(declare-fun x1464 () x905)
(declare-fun x564 () Bool)
(declare-fun x17 () Int)
(declare-fun x533 () x905)
(declare-fun x1412 () Int)
(declare-fun x1442 () Int)
(declare-fun x1065 () Bool)
(declare-fun x593 () Int)
(declare-fun x1493 () Bool)
(declare-fun x839 () Int)
(declare-fun x259 () Bool)
(declare-fun x13 () Bool)
(declare-fun x1280 () x905)
(declare-fun x713 () Bool)
(declare-fun x776 () Int)
(declare-fun x496 () Bool)
(declare-fun x956 () x905)
(declare-fun x1543 (x905) Int)
(declare-fun x628 () Bool)
(declare-fun x743 () Bool)
(declare-fun x354 () Bool)
(declare-fun x556 () Bool)
(declare-fun x1531 () x905)
(declare-fun x1236 () Int)
(declare-fun x163 () Int)
(declare-fun x1112 () Int)
(declare-fun x1325 () Int)
(declare-fun x582 () Bool)
(declare-fun x714 () Int)
(declare-fun x1508 () x905)
(declare-fun x388 () Bool)
(declare-fun x717 () Bool)
(declare-fun x312 () Int)
(declare-fun x630 () Int)
(declare-fun x727 () Int)
(declare-fun x1186 () Int)
(declare-fun x117 () Int)
(declare-fun x1132 () Bool)
(declare-fun x281 () Bool)
(declare-fun x1558 () Bool)
(declare-fun x115 (x905) Int)
(declare-fun x1246 () Int)
(declare-fun x197 () Int)
(declare-fun x454 () Int)
(declare-fun x855 () Bool)
(declare-fun x989 () Int)
(declare-fun x1212 () Int)
(declare-fun x511 () Int)
(declare-fun x15 () Int)
(declare-fun x207 () x905)
(declare-fun x665 (x905) Int)
(declare-fun x1106 (Int) Int)
(declare-fun x937 () Int)
(declare-fun x1332 () Int)
(declare-fun x1490 () Bool)
(declare-fun x517 () x905)
(declare-fun x550 () Int)
(declare-fun x1559 () x905)
(declare-fun x1433 () Bool)
(declare-fun x481 () Int)
(declare-fun x161 () Bool)
(declare-fun x952 () Int)
(declare-fun x678 () Int)
(declare-fun x112 () Bool)
(declare-fun x1328 () Int)
(declare-fun x1014 () Bool)
(declare-fun x1333 () Int)
(declare-fun x1477 () Int)
(declare-fun x500 () Int)
(declare-fun x220 () Bool)
(declare-fun x561 () x905)
(declare-fun x763 () Int)
(declare-fun x1309 () x905)
(declare-fun x76 () Int)
(declare-fun x728 () Bool)
(declare-fun x1507 () Int)
(declare-fun x724 () Bool)
(declare-fun x402 () x905)
(declare-fun x876 () Int)
(declare-fun x545 () Bool)
(declare-fun x865 () Bool)
(declare-fun x268 () x905)
(declare-fun x323 () Bool)
(declare-fun x8 (x905) Int)
(declare-fun x1301 () Bool)
(declare-fun x704 () Int)
(declare-fun x391 () Int)
(declare-fun x1286 () x905)
(declare-fun x922 () Int)
(declare-fun x1032 () Bool)
(declare-fun x685 () x905)
(declare-fun x750 () x905)
(declare-fun x188 (x905) Int)
(declare-fun x531 () Bool)
(declare-fun x408 () x905)
(declare-fun x401 () Int)
(declare-fun x343 () Int)
(declare-fun x965 () Int)
(declare-fun x1251 () Bool)
(declare-fun x881 () x905)
(declare-fun x675 () Bool)
(declare-fun x29 () Int)
(declare-fun x980 () Bool)
(declare-fun x132 () Bool)
(declare-fun x92 () Int)
(declare-fun x506 () Int)
(declare-fun x32 () Bool)
(declare-fun x532 () x905)
(declare-fun x1272 () Bool)
(declare-fun x1392 () Int)
(declare-fun x304 () x905)
(declare-fun x1320 () Bool)
(declare-fun x746 () Bool)
(declare-fun x1095 () Int)
(declare-fun x1293 () x905)
(declare-fun x265 () Bool)
(declare-fun x69 () Int)
(declare-fun x1050 () Int)
(declare-fun x1072 () Int)
(declare-fun x795 () Int)
(declare-fun x1494 () Bool)
(declare-fun x941 () Int)
(declare-fun x1124 () Int)
(declare-fun x1410 () Int)
(declare-fun x802 () Int)
(declare-fun x761 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x328 () Int)
(declare-fun x1174 () Int)
(declare-fun x797 () Bool)
(declare-fun x701 () Int)
(declare-fun x1430 () x905)
(declare-fun x125 () Int)
(declare-fun x821 () Int)
(declare-fun x230 () Int)
(declare-fun x987 () Bool)
(declare-fun x1534 () Int)
(declare-fun x846 () Int)
(declare-fun x729 () Int)
(declare-fun x1066 () x905)
(declare-fun x1260 () Int)
(declare-fun x909 () Bool)
(declare-fun x1519 () x905)
(declare-fun x1143 () Bool)
(declare-fun x263 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x382 () Int)
(declare-fun x85 () Int)
(declare-fun x961 () Int)
(declare-fun x1041 () Int)
(declare-fun x902 (x905) Int)
(declare-fun x1571 () Int)
(declare-fun x924 () Bool)
(declare-fun x384 () Int)
(declare-fun x1271 () Bool)
(declare-fun x601 () Bool)
(declare-fun x953 () Bool)
(declare-fun x945 () x905)
(declare-fun x975 () x905)
(declare-fun x1159 () Int)
(declare-fun x194 () Int)
(declare-fun x817 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x739 () Int)
(declare-fun x94 () Int)
(declare-fun x683 () Bool)
(declare-fun x828 () x905)
(declare-fun x433 () Int)
(declare-fun x139 () Int)
(declare-fun x778 () Bool)
(declare-fun x684 () Bool)
(declare-fun x462 () x905)
(declare-fun x1129 () Int)
(declare-fun x1530 () Int)
(declare-fun x1548 (Int Int) Int)
(declare-fun x189 () Int)
(declare-fun x349 () x905)
(declare-fun x1240 () Int)
(declare-fun x179 () Int)
(declare-fun x1053 () Bool)
(declare-fun x943 () Int)
(declare-fun x951 () Int)
(declare-fun x369 () Bool)
(declare-fun x513 () Int)
(declare-fun x68 () Int)
(declare-fun x309 () Bool)
(declare-fun x56 () Int)
(declare-fun x1097 () x905)
(declare-fun x1428 () Bool)
(declare-fun x327 () x905)
(declare-fun x405 () Int)
(declare-fun x1406 () Int)
(declare-fun x166 () Bool)
(declare-fun x1562 (x905) Int)
(declare-fun x1408 () Int)
(declare-fun x187 () Int)
(declare-fun x210 () Int)
(declare-fun x205 () Int)
(declare-fun x1489 () x905)
(declare-fun x1152 () Int)
(declare-fun x981 () Bool)
(declare-fun x964 () Int)
(declare-fun x1015 () Bool)
(declare-fun x472 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x27 () Bool)
(declare-fun x1075 () Int)
(declare-fun x1355 () Int)
(declare-fun x504 () Bool)
(declare-fun x165 () Bool)
(declare-fun x451 () Bool)
(declare-fun x765 () Bool)
(declare-fun x1404 () x905)
(declare-fun x1 () x905)
(declare-fun x330 () x905)
(declare-fun x1383 () Bool)
(declare-fun x635 () Int)
(declare-fun x1128 () Bool)
(declare-fun x623 () Bool)
(declare-fun x557 () Bool)
(declare-fun x970 () Int)
(declare-fun x21 () Int)
(declare-fun x966 () Int)
(declare-fun x310 () Int)
(declare-fun x371 () Int)
(declare-fun x792 () Bool)
(declare-fun x12 () Int)
(declare-fun x155 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x156 () Int)
(declare-fun x799 () Bool)
(declare-fun x105 () Bool)
(declare-fun x883 () Int)
(declare-fun x616 () Int)
(declare-fun x368 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x208 () Int)
(declare-fun x1208 () Int)
(declare-fun x243 () x905)
(declare-fun x711 () Int)
(declare-fun x868 () Int)
(declare-fun x1517 () Int)
(declare-fun x934 () Bool)
(declare-fun x833 () x905)
(declare-fun x1028 () Int)
(declare-fun x422 () Int)
(declare-fun x1441 () Bool)
(declare-fun x931 () x905)
(declare-fun x892 () Bool)
(declare-fun x929 () Bool)
(declare-fun x337 () Int)
(declare-fun x834 () x905)
(declare-fun x114 () x905)
(declare-fun x1319 () Int)
(declare-fun x758 () Int)
(declare-fun x261 () Bool)
(declare-fun x522 () x905)
(declare-fun x848 () Bool)
(declare-fun x588 () Int)
(declare-fun x95 (Int) Int)
(declare-fun x1474 () Int)
(declare-fun x178 () Bool)
(declare-fun x311 () Int)
(declare-fun x847 () Int)
(declare-fun x489 () Bool)
(declare-fun x1347 () Int)
(declare-fun x1205 () Int)
(declare-fun x267 () Bool)
(declare-fun x1390 () Bool)
(declare-fun x1485 () Int)
(declare-fun x1350 () Int)
(declare-fun x549 () Bool)
(declare-fun x159 () x905)
(declare-fun x1264 () Int)
(declare-fun x1496 () Bool)
(declare-fun x547 () x905)
(declare-fun x441 () Int)
(declare-fun x1170 () Int)
(declare-fun x1150 () x905)
(declare-fun x1275 () x905)
(declare-fun x1016 () x905)
(declare-fun x1344 () Int)
(declare-fun x737 () x905)
(declare-fun x1385 () x905)
(declare-fun x260 () x905)
(declare-fun x1105 () Int)
(declare-fun x933 () Int)
(declare-fun x663 () Int)
(declare-fun x1395 () Int)
(declare-fun x294 () Bool)
(declare-fun x1377 () Bool)
(declare-fun x277 () Bool)
(declare-fun x503 () Bool)
(declare-fun x356 () Bool)
(declare-fun x1290 () Int)
(declare-fun x246 () Int)
(declare-fun x1103 () Int)
(declare-fun x845 () Bool)
(declare-fun x124 () Bool)
(declare-fun x375 () Bool)
(declare-fun x918 () x905)
(declare-fun x1376 () Bool)
(declare-fun x475 () Int)
(declare-fun x446 (Int) Int)
(declare-fun x144 () Int)
(declare-fun x812 () x905)
(declare-fun x1127 () Int)
(declare-fun x857 () Int)
(declare-fun x562 () Bool)
(declare-fun x893 () Int)
(declare-fun x1176 () Int)
(declare-fun x632 () Int)
(declare-fun x896 () Int)
(declare-fun x949 () Int)
(declare-fun x244 () Int)
(declare-fun x805 () Int)
(declare-fun x190 () Int)
(declare-fun x447 () Int)
(declare-fun x693 () Bool)
(declare-fun x1021 () Int)
(declare-fun x1223 () Int)
(declare-fun x147 () Bool)
(declare-fun x1311 () Int)
(declare-fun x680 () Bool)
(declare-fun x329 () Bool)
(declare-fun x1094 () Int)
(declare-fun x1399 () Int)
(declare-fun x1104 () x905)
(declare-fun x251 () Int)
(declare-fun x326 () Int)
(declare-fun x1353 () Int)
(declare-fun x1184 () Bool)
(declare-fun x397 () x905)
(declare-fun x668 () Int)
(declare-fun x1515 () Int)
(declare-fun x26 () Bool)
(declare-fun x450 () Bool)
(declare-fun x528 () Int)
(declare-fun x1108 () Bool)
(declare-fun x270 () Int)
(declare-fun x1210 () x905)
(declare-fun x275 () Bool)
(declare-fun x1424 () Int)
(declare-fun x752 () Int)
(declare-fun x858 (x905) Int)
(declare-fun x103 () Bool)
(declare-fun x648 () Bool)
(declare-fun x274 () x905)
(declare-fun x889 () Int)
(declare-fun x219 () Bool)
(declare-fun x790 () Int)
(declare-fun x1314 () Int)
(declare-fun x378 () Int)
(declare-fun x1334 () Bool)
(declare-fun x709 () Int)
(declare-fun x1456 () Int)
(declare-fun x1370 () Int)
(declare-fun x1067 (Int) Int)
(declare-fun x160 () Int)
(declare-fun x299 () Bool)
(declare-fun x859 () Int)
(declare-fun x1250 () Int)
(declare-fun x303 () Int)
(declare-fun x1564 () Bool)
(declare-fun x73 () Int)
(declare-fun x129 () Int)
(declare-fun x1373 () Bool)
(declare-fun x468 () x905)
(declare-fun x452 () Int)
(declare-fun x954 (Int) Int)
(declare-fun x573 () Bool)
(declare-fun x1008 () x905)
(declare-fun x1231 () Bool)
(declare-fun x84 () Bool)
(declare-fun x1262 () Int)
(declare-fun x1167 () Int)
(declare-fun x108 () Int)
(declare-fun x226 () Bool)
(declare-fun x1257 (Int) Int)
(declare-fun x30 () Int)
(declare-fun x1263 () Int)
(declare-fun x940 () Int)
(declare-fun x754 () Bool)
(declare-fun x716 () Int)
(declare-fun x271 () Int)
(declare-fun x493 () Bool)
(declare-fun x290 () Int)
(declare-fun x1346 () Int)
(declare-fun x1116 () Bool)
(declare-fun x598 () Int)
(declare-fun x650 () Int)
(declare-fun x241 () Int)
(declare-fun x1012 () Int)
(declare-fun x1141 () Int)
(declare-fun x1033 () Bool)
(declare-fun x551 () Int)
(declare-fun x1506 () Int)
(declare-fun x906 () Int)
(declare-fun x162 () Int)
(declare-fun x222 () Bool)
(declare-fun x633 () Bool)
(declare-fun x438 () Int)
(declare-fun x866 () x905)
(declare-fun x23 () Int)
(declare-fun x860 () Bool)
(declare-fun x899 () Int)
(declare-fun x1249 () Int)
(declare-fun x123 (Int) Int)
(declare-fun x1155 () x905)
(declare-fun x483 () Int)
(declare-fun x919 () Int)
(declare-fun x525 () Int)
(declare-fun x1498 () Int)
(declare-fun x1182 () Bool)
(declare-fun x942 () Bool)
(declare-fun x415 () Int)
(declare-fun x607 () Bool)
(declare-fun x644 () Bool)
(declare-fun x1318 () x905)
(declare-fun x60 () Int)
(declare-fun x1457 () Int)
(declare-fun x1551 () Bool)
(declare-fun x907 () Int)
(declare-fun x1322 () Int)
(declare-fun x1389 () Bool)
(declare-fun x471 () Bool)
(declare-fun x612 () Bool)
(declare-fun x223 () Bool)
(declare-fun x71 (Int) Int)
(declare-fun x1211 () x905)
(declare-fun x827 () Int)
(declare-fun x1200 () Bool)
(declare-fun x480 () Int)
(declare-fun x54 () Int)
(declare-fun x1136 () Int)
(declare-fun x1239 () Int)
(declare-fun x1197 () Int)
(declare-fun x794 () Bool)
(declare-fun x1401 () Int)
(declare-fun x1420 () Int)
(declare-fun x1471 () Bool)
(declare-fun x355 () Int)
(declare-fun x177 () x905)
(declare-fun x58 () Int)
(declare-fun x606 () Int)
(declare-fun x1423 () Bool)
(declare-fun x1195 () Int)
(declare-fun x335 () Int)
(declare-fun x1068 () x905)
(declare-fun x1297 () Int)
(declare-fun x83 () Int)
(declare-fun x814 () Int)
(declare-fun x936 () Int)
(declare-fun x744 () Int)
(declare-fun x697 (Int) Int)
(declare-fun x698 () Bool)
(declare-fun x225 () Int)
(declare-fun x1561 () Int)
(declare-fun x1537 () Int)
(declare-fun x624 () Int)
(declare-fun x1327 () Bool)
(declare-fun x287 () x905)
(declare-fun x904 () Bool)
(declare-fun x540 () Int)
(declare-fun x1313 () Int)
(declare-fun x849 () Int)
(declare-fun x1279 () Int)
(declare-fun x736 () Bool)
(declare-fun x444 () Int)
(declare-fun x1166 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x486 () Int)
(declare-fun x381 () x905)
(declare-fun x908 () Int)
(declare-fun x380 () Int)
(declare-fun x1444 () x905)
(declare-fun x1135 () Int)
(declare-fun x262 () x905)
(declare-fun x710 () x905)
(declare-fun x1005 () Bool)
(declare-fun x1417 () Int)
(declare-fun x1151 () Bool)
(declare-fun x314 () Int)
(declare-fun x537 () Int)
(declare-fun x552 () Int)
(declare-fun x1267 () Bool)
(declare-fun x851 () Int)
(declare-fun x138 () x905)
(declare-fun x529 () Int)
(declare-fun x983 () Int)
(declare-fun x266 (Int) Int)
(declare-fun x1192 () Bool)
(declare-fun x1510 () Int)
(declare-fun x864 () Int)
(declare-fun x912 () Bool)
(declare-fun x1027 () Int)
(declare-fun x580 () Bool)
(declare-fun x334 () Bool)
(declare-fun x835 () Bool)
(declare-fun x732 (x905) Int)
(declare-fun x107 () Int)
(declare-fun x1396 () Int)
(declare-fun x1245 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x1520 () Int)
(declare-fun x1356 () Int)
(declare-fun x948 () Int)
(declare-fun x1310 () Int)
(declare-fun x1450 () Int)
(declare-fun x34 () Int)
(declare-fun x1099 () Bool)
(declare-fun x554 () Int)
(declare-fun x1357 () Bool)
(declare-fun x614 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x313 () x905)
(declare-fun x901 () Bool)
(declare-fun x39 () Int)
(declare-fun x1359 () Int)
(declare-fun x957 () Int)
(declare-fun x293 () Int)
(declare-fun x1349 () Bool)
(declare-fun x1402 () Int)
(declare-fun x702 () Bool)
(declare-fun x1341 () Int)
(declare-fun x102 () Bool)
(declare-fun x594 () Int)
(declare-fun x755 () Bool)
(declare-fun x490 () Int)
(declare-fun x646 () Int)
(declare-fun x478 () Int)
(declare-fun x958 () Bool)
(declare-fun x167 () Bool)
(declare-fun x1006 () Int)
(declare-fun x1440 () Bool)
(declare-fun x325 () Int)
(declare-fun x1230 () Int)
(declare-fun x476 () Bool)
(declare-fun x813 () Int)
(declare-fun x253 () Int)
(declare-fun x399 () Int)
(declare-fun x1492 () x905)
(declare-fun x1330 () Bool)
(declare-fun x1523 () Int)
(declare-fun x7 () Bool)
(declare-fun x1022 () Int)
(declare-fun x1340 () Int)
(declare-fun x137 () Int)
(declare-fun x916 () Int)
(declare-fun x579 () Bool)
(declare-fun x171 () x905)
(declare-fun x785 () x905)
(declare-fun x501 () Int)
(declare-fun x677 () Int)
(declare-fun x434 () Int)
(declare-fun x986 () Int)
(declare-fun x946 () x905)
(declare-fun x1364 () Int)
(declare-fun x995 () Int)
(declare-fun x1542 () x905)
(declare-fun x971 () Int)
(declare-fun x836 () Bool)
(declare-fun x803 () Int)
(declare-fun x88 () x905)
(declare-fun x1222 () Bool)
(declare-fun x1509 (x905) Int)
(declare-fun x653 () Int)
(declare-fun x82 (x905) Int)
(declare-fun x33 () Int)
(declare-fun x587 () x905)
(declare-fun x331 () Int)
(declare-fun x366 () Int)
(declare-fun x149 () Int)
(declare-fun x726 () Bool)
(declare-fun x1189 () Int)
(declare-fun x1482 () Int)
(declare-fun x1348 () Int)
(declare-fun x396 () Bool)
(declare-fun x184 () Bool)
(declare-fun x484 () Bool)
(declare-fun x840 () Int)
(declare-fun x1004 () Int)
(declare-fun x131 () x905)
(declare-fun x1427 () x905)
(declare-fun x1042 () Int)
(declare-fun x6 () Int)
(declare-fun x887 () x905)
(declare-fun x43 () Int)
(declare-fun x944 () Int)
(declare-fun x40 () x905)
(declare-fun x620 () Bool)
(declare-fun x70 () Int)
(declare-fun x1178 () Bool)
(declare-fun x1059 () Int)
(declare-fun x1495 () Bool)
(declare-fun x135 () Bool)
(declare-fun x1070 () Int)
(declare-fun x774 () x905)
(declare-fun x696 () Bool)
(declare-fun x104 () Int)
(declare-fun x1513 (x905) Int)
(declare-fun x898 () Int)
(declare-fun x505 () Int)
(declare-fun x14 () Int)
(declare-fun x282 () Int)
(declare-fun x344 () x905)
(declare-fun x1317 () Bool)
(declare-fun x658 () x905)
(declare-fun x510 () x905)
(declare-fun x618 () Int)
(declare-fun x1518 () Int)
(declare-fun x286 () Int)
(declare-fun x886 () Int)
(declare-fun x46 () x905)
(declare-fun x126 () Bool)
(declare-fun x1550 () Int)
(declare-fun x749 () Int)
(declare-fun x1432 (x905) Int)
(declare-fun x367 () Bool)
(declare-fun x2 () Bool)
(declare-fun x332 (Int) Int)
(declare-fun x1040 () Int)
(declare-fun x1447 () Bool)
(declare-fun x449 () x905)
(declare-fun x235 () Int)
(declare-fun x991 () Bool)
(declare-fun x852 () x905)
(declare-fun x914 () Int)
(declare-fun x566 () Int)
(declare-fun x417 () Int)
(declare-fun x247 () x905)
(declare-fun x719 () Bool)
(declare-fun x315 () Int)
(declare-fun x1363 () Int)
(declare-fun x1463 () x905)
(declare-fun x273 () Bool)
(declare-fun x109 () Int)
(declare-fun x42 () Bool)
(declare-fun x339 () Int)
(declare-fun x791 () Bool)
(declare-fun x808 () x905)
(declare-fun x1036 () Int)
(declare-fun x984 () Int)
(declare-fun x826 () Bool)
(declare-fun x385 () Int)
(declare-fun x1039 () Int)
(declare-fun x1446 () Int)
(declare-fun x536 () x905)
(declare-fun x1160 () Int)
(declare-fun x119 () Int)
(declare-fun x870 () Int)
(declare-fun x1045 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x61 () x905)
(declare-fun x679 () x905)
(declare-fun x1557 () Int)
(declare-fun x93 () Int)
(declare-fun x999 () Int)
(declare-fun x1060 () x905)
(declare-fun x1512 () Int)
(declare-fun x508 () Int)
(define-fun x733 ((x905 x905) (x255 Int)) x905 (ite ((_ is x1461) x905) (x1461 (x1117 x905) (+ x255 (x348 x905))) (ite ((_ is x1276) x905) (x1276 (x572 x905) (x913 x905) (+ x255 (x1146 x905))) (x467 (+ x255 (x867 x905))))))
(define-fun x173 ((x660 Int)) Int (ite (and (<= 0 x660) (< x660 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x660 (- x660 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x345 ((x660 Int)) Int (ite (and (> 0 x660) (>= x660 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x660 115792089237316195423570985008687907853269984665640564039457584007913129639936) x660))
(define-fun x1120 ((x1418 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1418) (<= 0 x1418)))
(define-fun x1265 ((x1418 Int)) Bool (and (= x1418 (x560 x1418 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x560 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1418) x1418)))
(define-fun x1073 ((x1418 Int)) Bool (and (= 0 (x560 x1418 0)) (= (x560 0 x1418) 0)))
(define-fun x974 ((x1418 Int)) Bool (= x1418 (x560 x1418 x1418)))
(define-fun x1057 ((x1418 Int)) Bool (and (x1265 x1418) (x974 x1418) (x1073 x1418)))
(define-fun x567 ((x1418 Int)) Bool (= (x560 1461501637330902918203684832716283019655932542975 (x560 1461501637330902918203684832716283019655932542975 x1418)) (x560 1461501637330902918203684832716283019655932542975 x1418)))
(define-fun x890 ((x1418 Int)) Bool (=> (and (<= 0 x1418) (> 1461501637330902918203684832716283019655932542976 x1418)) (= x1418 (x560 1461501637330902918203684832716283019655932542975 x1418))))
(define-fun x111 ((x1418 Int)) Bool (=> (= (x560 1461501637330902918203684832716283019655932542975 x1418) x1418) (and (>= x1418 0) (< x1418 1461501637330902918203684832716283019655932542976))))
(define-fun x1201 ((x1418 Int)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x1418) (< x1418 2923003274661805836407369665432566039311865085952)) (= (x560 1461501637330902918203684832716283019655932542975 x1418) (- x1418 1461501637330902918203684832716283019655932542976))))
(define-fun x1351 ((x1418 Int) (x1540 Int)) Bool (and (= x1418 (+ (x560 1461501637330902918203684832716283019655932542975 x1418) (* x1540 1461501637330902918203684832716283019655932542976))) (<= 0 x1540)))
(define-fun x670 ((x1418 Int) (x978 Int)) Bool (and (x890 x1418) (x567 x1418) (x1201 x1418) (x1351 x1418 x978) (x111 x1418)))
(define-fun x1367 ((x1418 Int) (x1540 Int)) Bool (= (x560 x1418 x1540) (x560 x1540 x1418)))
(define-fun x740 ((x1418 Int) (x1540 Int)) Bool (and (=> (<= 0 x1540) (<= (x560 x1418 x1540) x1540)) (=> (<= 0 x1418) (<= (x560 x1418 x1540) x1418)) (<= 0 (x560 x1418 x1540))))
(define-fun x400 ((x1418 Int) (x1540 Int)) Bool (and (x740 x1418 x1540) (x1367 x1418 x1540)))
(define-fun x502 ((x1418 Int) (x978 Int)) Bool (and (x670 x1418 x978) (x400 x1418 1461501637330902918203684832716283019655932542975)))
(define-fun x1204 ((x1418 Int)) Bool (= (x560 26959946667150639794667015087019630673637144422540572481103610249215 x1418) (x560 26959946667150639794667015087019630673637144422540572481103610249215 (x560 26959946667150639794667015087019630673637144422540572481103610249215 x1418))))
(define-fun x1323 ((x1418 Int)) Bool (=> (and (<= 0 x1418) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1418)) (= x1418 (x560 26959946667150639794667015087019630673637144422540572481103610249215 x1418))))
(define-fun x671 ((x1418 Int)) Bool (=> (= x1418 (x560 26959946667150639794667015087019630673637144422540572481103610249215 x1418)) (and (<= 0 x1418) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1418))))
(define-fun x735 ((x1418 Int)) Bool (=> (and (> 53919893334301279589334030174039261347274288845081144962207220498432 x1418) (<= 26959946667150639794667015087019630673637144422540572481103610249216 x1418)) (= (x560 26959946667150639794667015087019630673637144422540572481103610249215 x1418) (- x1418 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x141 ((x1418 Int) (x1540 Int)) Bool (and (<= 0 x1540) (= x1418 (+ (x560 26959946667150639794667015087019630673637144422540572481103610249215 x1418) (* 26959946667150639794667015087019630673637144422540572481103610249216 x1540)))))
(define-fun x1343 ((x1418 Int) (x978 Int)) Bool (and (x141 x1418 x978) (x671 x1418) (x1204 x1418) (x1323 x1418) (x735 x1418)))
(define-fun x387 ((x1418 Int) (x978 Int)) Bool (and (x400 x1418 26959946667150639794667015087019630673637144422540572481103610249215) (x1343 x1418 x978)))
(define-fun x404 ((x1418 Int)) Bool (= (x560 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1418) (x560 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x560 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1418))))
(define-fun x1315 ((x1418 Int)) Bool (=> (and (<= 0 x1418) (> 32 x1418)) (= 0 (x560 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1418))))
(define-fun x818 ((x1418 Int) (x1540 Int) (x816 Int) (x1232 Int)) Bool (and (>= x1540 0) (>= x1232 0) (>= x816 0) (= (+ (* x816 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1232) x1540) x1418) (> 32 x1540) (> 1 x1232) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x816) (= (x560 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1418) (* x816 32))))
(define-fun x1047 ((x1418 Int) (x242 Int) (x1545 Int) (x993 Int)) Bool (and (x1315 x1418) (x404 x1418) (x818 x1418 x242 x1545 x993)))
(define-fun x1078 ((x1418 Int) (x242 Int) (x1545 Int) (x993 Int)) Bool (and (x1047 x1418 x242 x1545 x993) (x400 x1418 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x146 ((x615 Int)) Int (x446 x615))
(define-fun x456 ((x615 Int)) Int (ite (= x615 128) x1353 (x783 x615)))
(define-fun x1326 ((x615 Int)) Int (ite (and (>= x615 160) (< x615 (+ 160 x380))) (x446 (+ x943 (- x615 160))) (x456 x615)))
(define-fun x915 ((x615 Int)) Int (ite (= x759 x615) 0 (x1326 x615)))
(define-fun x1001 ((x615 Int)) Int (ite (and (> (+ x681 x414) x615) (<= x414 x615)) (x446 (+ (- x615 x414) x832)) (x57 x615)))
(define-fun x1435 ((x615 x905)) Int (ite (= x638 x615) x491 (x1562 x615)))
(define-fun x424 ((x615 x905)) Int (ite (= x692 x615) x491 (x1562 x615)))
(define-fun x499 ((x615 x905)) Int (ite (= x615 x1155) x491 (x1509 x615)))
(define-fun x625 ((x615 x905)) Int (ite (= x1275 x615) x491 (x1509 x615)))
(define-fun x982 ((x615 x905)) Int (ite (and x1462 x102) (x1509 x615) (ite (and x1015 x440) (x1562 x615) (ite (and x195 (not x100)) (x499 x615) (x625 x615)))))
(define-fun x1556 ((x615 x905)) Int (ite (= x615 x240) x1248 (x1360 x615)))
(define-fun x1225 ((x615 x905)) Int (ite (= x583 x615) x1298 (x858 x615)))
(define-fun x689 ((x615 x905)) Int (ite (and x195 (not x100)) (x1225 x615) (x858 x615)))
(define-fun x720 ((x615 x905)) Int (ite (and x1462 x102) (x858 x615) (ite (and x440 x1015) (x1360 x615) (x689 x615))))
(define-fun x228 ((x615 x905)) Int (ite (= x615 x806) x1233 (x82 x615)))
(define-fun x1110 ((x615 x905)) Int (ite (= x615 x558) x391 (x1165 x615)))
(define-fun x1190 ((x615 x905)) Int (ite (and x102 x1462) (x1165 x615) (ite (and x440 x1015) (x82 x615) (ite (and x195 x651) (x1165 x615) (x1110 x615)))))
(define-fun x1137 ((x615 x905)) Int (ite (= x1158 x615) x491 (x1527 x615)))
(define-fun x494 ((x615 x905)) Int (ite (= x615 x204) x491 (x1527 x615)))
(define-fun x1084 ((x615 x905)) Int (ite (= x279 x615) x491 (x1527 x615)))
(define-fun x800 ((x615 x905)) Int (ite (= x610 x615) x491 (x1484 x615)))
(define-fun x1000 ((x615 x905)) Int (ite (= x231 x615) x491 (x1484 x615)))
(define-fun x296 ((x615 x905)) Int (ite (= x621 x615) x491 (x1484 x615)))
(define-fun x1088 ((x615 x905)) Int (ite (and x1462 x102) (x1484 x615) (ite (and x440 x1015) (x1527 x615) (ite (and (not x1071) (not x829) x193) (x800 x615) (ite (and (not x1071) x829 x193) (x1000 x615) (x296 x615))))))
(define-fun x1491 ((x615 x905)) Int (ite (= x61 x615) x1332 (x1543 x615)))
(define-fun x530 ((x615 x905)) Int (ite (= x615 x402) x928 (x1549 x615)))
(define-fun x1345 ((x615 x905)) Int (ite (and x1462 x102) (x1549 x615) (ite (and x440 x1015) (x1543 x615) (ite (and x193 x1300) (x1549 x615) (x530 x615)))))
(define-fun x1398 ((x615 x905)) Int (ite (= x737 x615) x861 (x665 x615)))
(define-fun x666 ((x615 x905)) Int (ite (= x615 x543) x370 (x115 x615)))
(define-fun x1379 ((x615 x905)) Int (ite (and (not x1071) (not x829) x193) (x666 x615) (x115 x615)))
(define-fun x712 ((x615 x905)) Int (ite (and x102 x1462) (x115 x615) (ite (and x1015 x440) (x665 x615) (x1379 x615))))
(define-fun x72 ((x615 x905)) Int (ite (= x645 x615) x1417 (x1513 x615)))
(define-fun x203 ((x615 x905)) Int (ite (= x1018 x615) x1400 (x1123 x615)))
(define-fun x1282 ((x615 x905)) Int (ite (and x102 x1462) (x732 x615) (ite (and x440 x1015) (x8 x615) (ite (and x195 (not x222) (not x1479) x469) (x1123 x615) (ite (and x195 (not x469) (not x222)) (x732 x615) (ite (and x222 x195) (x732 x615) (x203 x615)))))))
(define-fun x917 ((x615 Int)) Int (ite (= x303 x615) x1087 (x1157 x615)))
(define-fun x1368 ((x615 Int)) Int (ite (= x336 x615) x996 (x917 x615)))
(define-fun x1436 ((x615 Int)) Int (ite (and x897 x409) (x1157 x615) (x1368 x615)))
(define-fun x252 ((x615 Int)) Int (ite (= x615 x1410) x239 (x1436 x615)))
(define-fun x1387 ((x615 Int)) Int (ite (= x615 x30) x215 (x1312 x615)))
(define-fun x596 ((x615 Int)) Int (ite (= x615 x1448) x1013 (x954 x615)))
(define-fun x1181 ((x615 Int)) Int (ite (= x615 x422) x1281 (x596 x615)))
(define-fun x150 ((x615 Int)) Int (ite (and (not x829) (not x1071) x193) (x1181 x615) (ite (and (not x1071) x829 x193) (x1181 x615) (x954 x615))))
(define-fun x52 ((x615 Int)) Int (ite (= x927 x615) x1074 (x150 x615)))
(define-fun x1339 ((x615 Int)) Int (ite (= x615 x399) x1480 (x1061 x615)))
(define-fun x248 ((x615 Int)) Int (ite (and x102 x1462) (x954 x615) (ite (and x440 x1015) (x1157 x615) (ite (and x195 x469 (not x222) (not x1479)) (x1061 x615) (ite (and (not x222) x195 (not x469)) (x1067 x615) (ite (and x222 x195) (x1067 x615) (x1339 x615)))))))
(define-fun x1324 ((x615 Int)) Int (ite (= x306 x615) x830 (x248 x615)))
(define-fun x182 ((x615 Int)) Int (ite (= x615 x197) x474 (x1324 x615)))
(define-fun x691 ((x615 Int)) Int (ite (= x1264 x615) x1412 (x182 x615)))
(define-fun x1063 ((x615 Int)) Int (ite (= x615 x643) x608 (x691 x615)))
(define-fun x756 ((x615 Int)) Int (ite (= x574 x615) 32 (x1063 x615)))
(define-fun x1409 ((x615 Int)) Int (ite (= x615 x1126) x629 (x1460 x615)))
(define-fun x1386 ((x615 Int)) Int (ite (= x340 x615) 0 (x1514 x615)))
(define-fun x1156 ((x615 Int)) Int (ite (= 0 x615) 1 (x1209 x615)))
(define-fun x979 ((x615 Int)) Int (ite (= 0 x615) 1 (x1209 x615)))
(define-fun x1529 ((x615 Int)) Int (ite (and x1166 x673) (x1156 x615) (x979 x615)))
(define-fun x297 ((x615 Int)) Int (ite (= x1159 x615) x649 (x1257 x615)))
(define-fun x1299 ((x615 Int)) Int (ite (= x615 x1159) x682 (x1257 x615)))
(define-fun x1522 ((x615 Int)) Int (ite (= x615 x1159) x961 (x538 x615)))
(define-fun x390 ((x615 Int)) Int (ite (and (<= x907 x615) (< x615 (+ x907 x961))) (x1529 (+ 0 (- x615 x907))) (x1522 x615)))
(define-fun x955 ((x615 Int)) Int (ite (and x42 (not x281)) (x390 x615) (x538 x615)))
(define-fun x882 ((x615 Int)) Int (ite (= x1380 x615) x1189 (x955 x615)))
(define-fun x180 ((x615 Int)) Int (ite (= x615 x305) x822 (x882 x615)))
(define-fun x872 ((x615 Int)) Int (ite (= x382 x615) x1524 (x180 x615)))
(define-fun x1388 ((x615 Int)) Int (ite (= x615 x43) x1451 (x872 x615)))
(define-fun x1161 ((x615 Int)) Int (ite (= x650 x615) 32 (x1388 x615)))
(define-fun x1207 ((x615 Int)) Int (ite (= x615 x1453) x526 (x1541 x615)))
(define-fun x895 ((x615 Int)) Int (ite (= x615 x1167) 0 (x697 x615)))
(define-fun x1055 ((x615 x905)) Int (ite (= x615 (x389 274184521717934524641157099916833587206)) x1518 (x134 x615)))
(define-fun x563 ((x615 x905)) Int (ite (= (x389 x1485) x615) x690 (x1055 x615)))
(define-fun x770 ((x615 x905)) Int (ite (= x615 (x389 x1485)) x995 (x563 x615)))
(define-fun x1139 ((x615 x905)) Int (ite (= x615 (x389 274184521717934524641157099916833587206)) x795 (x770 x615)))
(define-fun x20 ((x615 x905)) Int (ite (= (x389 274184521717934524641157099916833587206) x615) x920 (x1139 x615)))
(define-fun x1235 ((x615 x905)) Int (ite (= x615 (x389 x695)) x1227 (x20 x615)))
(define-fun x360 ((x615 x905)) Int (ite (= x615 x327) x419 (x902 x615)))
(define-fun x492 ((x615 x905)) Int (ite (= x207 x615) x423 (x360 x615)))
(define-fun x411 ((x615 x905)) Int (ite (and x1166 x673) (x492 x615) (x902 x615)))
(define-fun x807 ((x615 x905)) Int (ite (= x615 x1381) x825 (x411 x615)))
(define-fun x1331 ((x615 Int)) Int (ite (= x615 0) 1 (x95 x615)))
(define-fun x1277 ((x615 Int)) Int (ite (= x1546 x615) x1408 (x1106 x615)))
(define-fun x1538 ((x615 x905)) Int (ite (= x946 x615) x154 (x1432 x615)))
(define-fun x1452 ((x615 x905)) Int (ite (= x615 x1125) x700 (x1538 x615)))
(define-fun x77 ((x615 x905)) Int (ite (and x1166 x673) (x1432 x615) (x1452 x615)))
(define-fun x1283 ((x615 x905)) Int (ite (= x1318 x615) x1127 (x77 x615)))
(define-fun x176 ((x615 Int)) Int (ite (= x615 0) 1 (x95 x615)))
(define-fun x1468 ((x615 Int)) Int (ite (= x615 x1546) x172 (x1106 x615)))
(define-fun x578 ((x615 Int)) Int (ite (and x742 x226) (x1331 x615) (x176 x615)))
(define-fun x3 ((x615 x905)) Int (ite (= x615 (x389 x695)) x92 (x1235 x615)))
(define-fun x824 ((x615 Int)) Int (ite (= x615 x1546) x377 (x1077 x615)))
(define-fun x568 ((x615 Int)) Int (ite (and (<= x1048 x615) (< x615 (+ x1048 x377))) (x578 (+ 0 (- x615 x1048))) (x824 x615)))
(define-fun x1219 ((x615 Int)) Int (ite (and x263 x1560) (x1077 x615) (x568 x615)))
(define-fun x292 ((x1418 Int)) Bool (=> (and (not (= 2061678023 x1418)) (not (= x1418 604800)) (not (= x1418 26959946667150639794667015087019630673637144422540572481103610249215)) (> x1418 10000) (not (= x1418 911411945)) (not (= 274184521717934524641157099916833587214 x1418)) (not (= 1461501637330902918203684832716283019655932542975 x1418)) (not (= 1000000000000000000 x1418)) (not (= x1418 826074471)) (not (= x1418 2418364589)) (not (= x1418 2211524764)) (not (= x1418 1968616202)) (not (= x1418 87118632)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1418)) (not (= x1418 3123789364)) (not (= x1418 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= 274184521717934524641157099916833587206 x1418)) (not (= x1418 2532887486)) (not (= x1418 759532456)) (not (= x1418 142201243)) (not (= 635128645 x1418)) (not (= x1418 115792089237316195423570985008687907853269984665640564039457)) (not (= 2743102681 x1418)) (not (= x1418 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 2960351575 x1418)) (not (= x1418 1986467848)) (not (= x1418 18446744073709551615)) (not (= x1418 2293535753)) (not (= 2258409472 x1418)) (not (= x1418 2868243304)) (not (= x1418 468353030)) (not (= x1418 2939843472)) (not (= x1418 2798343961)) (not (= x1418 2690754053)) (not (= 1889567281 x1418)) (not (= 2514000705 x1418)) (not (= 2764855426 x1418)) (not (= x1418 69947311)) (not (= x1418 1517119036)) (not (= x1418 2835717307)) (not (= x1418 2512682246)) (not (= 649617121 x1418)) (not (= 274184521717934524641157099916833587218 x1418)) (not (= x1418 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (not ((_ is x467) (x389 x1418)))))
(assert (x1120 x447))
(assert (x1120 x293))
(assert (x292 x1176))
(assert (x1120 x163))
(assert (= (x221 (x467 759532456)) 759532456))
(assert (x1120 x413))
(assert (x292 x1322))
(assert (x292 x776))
(assert (x1120 x1147))
(assert (x1120 x957))
(assert (= (x71 x678) (ite (= x831 x678) x1406 (x252 x678))))
(assert (= (x467 1517119036) (x389 1517119036)))
(assert (= (x1460 x512) (ite (= x512 x869) x964 (x332 x512))))
(assert (x1120 x1450))
(assert (x1120 x1009))
(assert (= 0 (x783 x643)))
(assert (x1120 x672))
(assert (= (x1061 x506) (ite (= x506 x160) x1254 (x1067 x506))))
(assert (=> (>= 10000 x1199) (= (x389 x1199) (x467 x1199))))
(assert (x1120 x997))
(assert (x1120 x1474))
(assert (x1120 x646))
(assert (= (x1312 x355) (ite (= x497 x355) x999 (x71 x355))))
(assert (x1120 x158))
(assert (x1120 x714))
(assert (=> (<= x1160 10000) (= (x389 x1160) (x467 x1160))))
(assert (= (ite (and x515 x289) (x57 x678) (x1001 x678)) (x1157 x678)))
(assert (x1120 x851))
(assert (x1120 x17))
(assert (=> (>= 10000 x1520) (= (x389 x1520) (x467 x1520))))
(assert (= x1179 (x221 (x389 x1179))))
(assert (x1120 x711))
(assert (= (ite (and (not x1010) x569 (not x309) x439) (x1312 x643) (ite (and (not x439) x569 (not x309)) (x71 x643) (ite (and x569 x309) (x71 x643) (x1387 x643)))) (x954 x643)))
(assert (= (ite (= x885 x160) x1254 (x1067 x885)) (x1061 x885)))
(assert (= 0 (x783 x512)))
(assert (x1120 x686))
(assert (=> (>= 10000 x1450) (= (x467 x1450) (x389 x1450))))
(assert (x1120 x436))
(assert (= x897 x110))
(assert (= x1431 (=> (and (or (and (= x1195 (x560 1461501637330902918203684832716283019655932542975 x903)) (not x845) (>= x593 0) (= (x1165 x381) x593) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x593) (= (x1276 (x389 x1310) (x467 10) 0) x1296) (= (x1276 (x389 x1195) x1296 0) x381) (= x745 (= x593 0)) (or (and (= 1 x859) (= x391 x593) (not x745)) (and (= x859 0) x745 (= 0 x391)))) (and x845 (= 0 x391) (= 0 x859))) (= (= 0 x1310) x845)) x1056)))
(assert (= (x1067 x43) (ite (= x1446 x43) x653 (x52 x43))))
(assert (x1120 x1528))
(assert (= (ite (and (not x309) (not x1010) x569 x439) (x1513 x1502) (ite (and (not x439) (not x309) x569) (x8 x1502) (ite (and x309 x569) (x8 x1502) (x72 x1502)))) (x732 x1502)))
(assert (x1120 x919))
(assert (x1120 x190))
(assert (= (=> (= x786 (< 0 x752)) (and (=> (not x786) x265) (=> x786 x892))) x1449))
(assert (= (x783 160) 0))
(assert (x292 x217))
(assert (x1120 x965))
(assert (= (x221 (x389 x1160)) x1160))
(assert (x1120 x1141))
(assert (x292 x295))
(assert (x1120 x1480))
(assert (= 0 (x783 x908)))
(assert (= (x57 x399) (ite (= x48 x399) x1353 (x915 x399))))
(assert (x1120 x51))
(assert (= (ite (and x289 x515) (x57 x1135) (x1001 x1135)) (x1157 x1135)))
(assert (x1120 x301))
(assert (= x674 (x221 (x389 x674))))
(assert (= (ite (and x471 x794 (not x55)) (x697 x827) (x895 x827)) (x1106 x827)))
(assert (x292 x957))
(assert (= (x1198 x500) (ite (= x500 x1319) x1246 (x214 x500))))
(assert (= (x57 x355) (ite (= x355 x48) x1353 (x915 x355))))
(assert (= (ite (= x831 x851) x1406 (x252 x851)) (x71 x851)))
(assert (x1120 x1569))
(assert (x1120 x54))
(assert (= (x221 (x467 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (x1057 x371))
(assert (x1120 x1483))
(assert (x387 x1477 x570))
(assert (= x1359 (x221 (x389 x1359))))
(assert (x1120 x501))
(assert (= x1101 (=> (= x1080 (= x1485 274184521717934524641157099916833587214)) (and (=> (not x1080) x1086) (=> (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1009) (= (x1276 (x389 x1279) (x467 1) 0) x1125) (= (+ x1557 x739) x700) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1510 x438)) x1080 (= 1 x1459) (= x373 (x1432 x218)) (= x941 68) (< 0 x618) (not (> 4 x941)) (= 274184521717934524641157099916833587206 x1288) (= x465 274184521717934524641157099916833587206) (= x474 x426) (= x1557 x1510) (<= 0 x1510) (not (= 826074471 x405)) (= x438 x426) (not (< x405 649617121)) (<= x1279 1461501637330902918203684832716283019655932542975) (= x1279 x1197) (not (= 649617121 x405)) (= x946 (x1276 (x389 274184521717934524641157099916833587206) (x467 1) 0)) (not (= x405 1889567281)) (= x961 32) (= x218 (x1276 (x389 274184521717934524641157099916833587206) (x467 1) 0)) (not x175) (= x682 x525) (= x175 (> x438 x373)) (= x830 x1279) (= 2835717307 x405) (= x1489 (x1276 (x389 x1279) (x467 1) 0)) (= x747 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1316) true) (> 64 x1316)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1316))) (= (x345 (- x941 4)) x1316) (= x154 (x345 (- x373 x426))) (<= 0 x373) (not x105) (= (< x373 x426) x5) (= x59 x941) (not x747) (not x5) (= x739 x438) (not (= 2514000705 x405)) (= x105 (>= (+ x438 x1510) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1538 x1489) x1510) (<= x373 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1510 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x796 (x389 274184521717934524641157099916833587214)) x618)) x934)))))
(assert (x1120 x58))
(assert (= (x783 192) 0))
(assert (x1120 x940))
(assert (x1120 x336))
(assert (= (x221 (x389 x762)) x762))
(assert (x1120 x1185))
(assert (= (x389 635128645) (x467 635128645)))
(assert (= x1462 x569))
(assert (= (ite (= x1085 x43) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x43)) (x214 x43)))
(assert (= (x221 (x467 1000000000000000000)) 1000000000000000000))
(assert (x1120 x886))
(assert (x1120 x815))
(assert (=> (>= 10000 x677) (= (x389 x677) (x467 x677))))
(assert (x1120 x466))
(assert (x292 x1195))
(assert (x292 x1333))
(assert true)
(assert (= (x858 x956) (ite (and x569 x619) (x1360 x956) (x1556 x956))))
(assert (=> (<= x31 10000) (= (x467 x31) (x389 x31))))
(assert (= x11 (=> (= 0 x302) x35)))
(assert (= (x57 x926) (ite (= x48 x926) x1353 (x915 x926))))
(assert (= (x1257 x43) (ite (and x450 (not x652) x1558) (x1514 x43) (x1386 x43))))
(assert (x1120 x311))
(assert (=> (<= x1092 10000) (= (x467 x1092) (x389 x1092))))
(assert (= (x221 (x467 2798343961)) 2798343961))
(assert (x292 x820))
(assert (= (x1106 x355) (ite (and (not x55) x471 x794) (x697 x355) (x895 x355))))
(assert (x1120 x405))
(assert (= (x467 1889567281) (x389 1889567281)))
(assert (x1120 x927))
(assert (= (ite (and (not x1010) x569 x439 (not x309)) (x1312 x129) (ite (and (not x309) x569 (not x439)) (x71 x129) (ite (and x569 x309) (x71 x129) (x1387 x129)))) (x954 x129)))
(assert (x1120 x33))
(assert (= x994 (x221 (x389 x994))))
(assert (x292 x1372))
(assert (= (x1061 x540) (ite (= x160 x540) x1254 (x1067 x540))))
(assert (x292 x101))
(assert (= (x389 274184521717934524641157099916833587206) (x467 274184521717934524641157099916833587206)))
(assert (= (x221 (x389 x319)) x319))
(assert (= (x1067 x355) (ite (= x355 x1446) x653 (x52 x355))))
(assert (= (x1067 x399) (ite (= x1446 x399) x653 (x52 x399))))
(assert (= (ite (= x926 x497) x999 (x71 x926)) (x1312 x926)))
(assert (x1120 x1214))
(assert (x1120 x830))
(assert (x292 x566))
(assert (x1120 x122))
(assert (x1120 x1083))
(assert (x1120 x1359))
(assert (x1120 x423))
(assert (x1120 x1220))
(assert (=> (<= x1372 10000) (= (x467 x1372) (x389 x1372))))
(assert (= (x266 x500) (ite (= x988 x500) x1370 (x123 x500))))
(assert (x1120 x452))
(assert (=> (>= 10000 x1569) (= (x467 x1569) (x389 x1569))))
(assert (x1120 x999))
(assert (x1120 x1221))
(assert (=> (>= 10000 x605) (= (x467 x605) (x389 x605))))
(assert (= (x221 (x467 2743102681)) 2743102681))
(assert (x1120 x811))
(assert (x1120 x559))
(assert (= (=> (and (= (= 0 x302) x1043) (or (and (= (x1276 (x389 x1566) x1081 0) x449) (= (x560 1461501637330902918203684832716283019655932542975 x347) x1566) (= x707 1) (>= x70 0) (= (x1276 (x389 x38) x587 0) x1081) (not x1043) (= x38 (x560 1461501637330902918203684832716283019655932542975 x903)) (= (x1276 (x389 x302) (x467 9) 0) x587) (= x70 (x1549 x449)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x70) (= x928 x70)) (and x1043 (= x928 0) (= 0 x707)))) x987) x35))
(assert (=> (>= 10000 x256) (= (x389 x256) (x467 x256))))
(assert (= (x221 (x389 x605)) x605))
(assert (x292 x819))
(assert (x1120 x465))
(assert (x292 x235))
(assert (x1120 x1237))
(assert (= (=> (= x1310 0) x1431) x132))
(assert (x292 x1566))
(assert (= (=> (and (= x87 x1221) (= x1372 x308)) x929) x1053))
(assert (x292 x452))
(assert (x1120 x153))
(assert (x1120 x1406))
(assert (x1120 x1408))
(assert (= (and x1365 (not x161)) x641))
(assert (= x600 (=> (= x1401 x217) x698)))
(assert (x387 x371 x1174))
(assert (x292 x302))
(assert (x1120 x1510))
(assert (x1120 x1229))
(assert (= (ite (and x1166 x673) (x297 x48) (x1299 x48)) (x538 x48)))
(assert (= (ite (= x926 x160) x1254 (x1067 x926)) (x1061 x926)))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x221 (x467 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (= (and x793 x573) x571))
(assert (x1120 x230))
(assert (= 2939843472 (x221 (x467 2939843472))))
(assert (= 0 (x783 x885)))
(assert (= x647 (=> (= (= x695 274184521717934524641157099916833587214) x161) (and (=> (and (= x606 1) (= 32 x377) (= x1384 x172) (= x1189 x722) (= 2835717307 x1399) (= (x1276 (x389 x722) (x467 1) 0) x1338) (= x765 (> x372 x550)) (= (or (> x74 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x74 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x74 64))) x1496) (<= 0 x1344) (not x258) (= x372 x822) (= x416 (+ x636 x19)) (= x550 (x77 x544)) (not (= 826074471 x1399)) x161 (= x1350 x325) (<= x550 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x1180 x1344) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1276 (x389 274184521717934524641157099916833587206) (x467 1) 0) x544) (not x765) (= x74 (x345 (- x1350 4))) (= x1127 (x345 (- x550 x372))) (not (< x1350 4)) (= x1180 x372) (= x1318 (x1276 (x389 274184521717934524641157099916833587206) (x467 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1344) (= 68 x1350) (not (= x1399 649617121)) (< 0 x169) (not x726) (not (> 649617121 x1399)) (not x1496) (= (x796 (x389 274184521717934524641157099916833587214)) x169) (= x1395 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x258 (>= (+ x1344 x1180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (= x1399 2514000705)) (= x19 x1344) (= x1344 (x1283 x1338)) (= x410 x722) (= (> x1180 x550) x726) (not (= x1399 1889567281)) (= 274184521717934524641157099916833587206 x395) (>= x550 0) (= x1180 x636) (>= 1461501637330902918203684832716283019655932542975 x722) (= x122 274184521717934524641157099916833587206)) x1051) (=> (not x161) x1011)))))
(assert (= (x221 (x389 x326)) x326))
(assert (=> (<= x899 10000) (= (x389 x899) (x467 x899))))
(assert (x1120 x1526))
(assert (= (x1061 x129) (ite (= x160 x129) x1254 (x1067 x129))))
(assert (x1120 x880))
(assert (= x393 (=> (and (= x565 (x1276 (x389 x1040) x863 0)) (not (= 468353030 x1426)) (> x716 0) (= x539 (x1276 (x389 x31) x565 0)) (not (< x1426 468353030)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x89) (> 2293535753 x1426) (>= 1461501637330902918203684832716283019655932542975 x1040) (= x89 (x1527 x539)) (< x1426 911411945) (= x89 x85) (= (x796 (x389 274184521717934524641157099916833587206)) x716) (<= x31 1461501637330902918203684832716283019655932542975) (not (= x1426 635128645)) (= x863 (x1276 (x389 x1488) (x467 7) 0)) (>= x89 0) (= x1426 759532456)) (=> (and (= x1333 x1205) (= x308 x594) (= x1186 x85) (= x661 x1221)) x1551))))
(assert (x1120 x898))
(assert (x1120 x734))
(assert (x1120 x668))
(assert (x1120 x416))
(assert (x1120 x1473))
(assert (= (x1312 x851) (ite (= x851 x497) x999 (x71 x851))))
(assert (x1120 x497))
(assert (= (x221 (x389 x153)) x153))
(assert (x1120 x1291))
(assert (x1120 x306))
(assert (x1120 x518))
(assert (x292 x595))
(assert (x1120 x1328))
(assert (= (ite (= x1264 x1085) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x1264)) (x214 x1264)))
(assert (x292 x1485))
(assert (x292 x256))
(assert (x1120 x936))
(assert (=> (>= 10000 x87) (= (x389 x87) (x467 x87))))
(assert (= (x467 274184521717934524641157099916833587214) (x389 274184521717934524641157099916833587214)))
(assert (x292 x1249))
(assert (x1120 x1281))
(assert (x292 x966))
(assert (x1120 x380))
(assert (x1120 x417))
(assert (= x1279 (x221 (x389 x1279))))
(assert (= (ite (= x48 x129) x1353 (x915 x129)) (x57 x129)))
(assert (= x1251 x582))
(assert (= 274184521717934524641157099916833587218 (x221 (x467 274184521717934524641157099916833587218))))
(assert (x292 x183))
(assert (x1120 x315))
(assert (x292 x310))
(assert (= (=> (and (= (x1276 (x389 x235) x432 0) x473) (= (x665 x473) x1515) (not (> 2690754053 x788)) (= x1212 (x796 (x389 274184521717934524641157099916833587206))) (> x1212 0) (= x432 (x1276 (x389 x1483) x522 0)) (<= x1515 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x235) (= x1515 x611) (<= x1483 1461501637330902918203684832716283019655932542975) (= 2743102681 x788) (not (> 2293535753 x788)) (>= x1515 0) (< x788 2960351575) (not (= x788 2690754053)) (= x522 (x1276 (x389 x1347) (x467 3) 0))) (=> (and (= x1205 x1199) (= x632 x611) (= x1221 x1092) (= x308 x876) (= x949 x1341)) x496)) x1487))
(assert (x1120 x519))
(assert (x1120 x1093))
(assert (x1120 x1319))
(assert (= (x467 87118632) (x389 87118632)))
(assert (= 468353030 (x221 (x467 468353030))))
(assert (= (x71 x497) (ite (= x831 x497) x1406 (x252 x497))))
(assert (x1120 x926))
(assert (x1120 x498))
(assert (= 274184521717934524641157099916833587214 (x221 (x467 274184521717934524641157099916833587214))))
(assert (x292 x18))
(assert (x1120 x1256))
(assert (= (ite (and (not x1010) x569 x439 (not x309)) (x1312 x48) (ite (and x569 (not x309) (not x439)) (x71 x48) (ite (and x569 x309) (x71 x48) (x1387 x48)))) (x954 x48)))
(assert (x292 x149))
(assert (= (ite (= x48 x497) x999 (x71 x48)) (x1312 x48)))
(assert (x1120 x576))
(assert (x1120 x474))
(assert (x1120 x217))
(assert (x292 x603))
(assert (x292 x1223))
(assert (x1120 x169))
(assert (x1120 x48))
(assert (x1120 x1288))
(assert (x1120 x1382))
(assert (= (x1067 x643) (ite (= x643 x1446) x653 (x52 x643))))
(assert (x1120 x650))
(assert (= (x538 x540) (ite (and x1166 x673) (x297 x540) (x1299 x540))))
(assert (x1120 x723))
(assert (x292 x646))
(assert (= (ite (= x497 x399) x999 (x71 x399)) (x1312 x399)))
(assert (x1120 x351))
(assert (= x695 (x221 (x389 x695))))
(assert (x1120 x550))
(assert (=> (>= 10000 x235) (= (x389 x235) (x467 x235))))
(assert (=> (>= 10000 x1310) (= (x467 x1310) (x389 x1310))))
(assert (= (x221 (x389 x1121)) x1121))
(assert (= (x214 x506) (ite (= x506 x1085) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x506))))
(assert (x1120 x1364))
(assert (= (=> (and (= x1544 (x1276 (x389 x1105) (x467 6) 0)) (= x533 (x1276 (x389 x1100) x1544 0)) (= (x1509 x533) x694) (= (= x694 0) x9) (= (x560 1461501637330902918203684832716283019655932542975 x903) x1100) (<= 0 x694) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x694)) (and (=> (and (= x457 x1105) (not x9)) x696) (=> (and (not x1458) (= (x345 (- x1105 1)) x1238) x9 (= x1458 (< 0 x1238))) x132))) x1389))
(assert (x1120 x1546))
(assert (= (ite (and (not x1010) (not x309) x439 x569) (x1312 x827) (ite (and (not x439) x569 (not x309)) (x71 x827) (ite (and x569 x309) (x71 x827) (x1387 x827)))) (x954 x827)))
(assert (= (ite (= x831 x1410) x1406 (x252 x1410)) (x71 x1410)))
(assert (= (x221 (x389 x1485)) x1485))
(assert (= x505 (x221 (x389 x505))))
(assert (x292 x635))
(assert (= (x389 759532456) (x467 759532456)))
(assert (x1120 x814))
(assert (x292 x1470))
(assert (x1120 x847))
(assert (= (ite (= x908 x869) x964 (x332 x908)) (x1460 x908)))
(assert (= (x221 (x389 x1483)) x1483))
(assert (= (x221 (x389 x256)) x256))
(assert (x1120 x598))
(assert (= 87118632 (x221 (x467 87118632))))
(assert (= (x467 2835717307) (x389 2835717307)))
(assert (x292 x454))
(assert (x1120 x117))
(assert (= x589 (and (not x1080) x135)))
(assert (x1120 x661))
(assert (= x744 (x221 (x389 x744))))
(assert (=> (>= 10000 x501) (= (x389 x501) (x467 x501))))
(assert (= (or (and x1166 x673) (and x1080 x135)) x42))
(assert (x1120 x856))
(assert (= (and x450 x1558) x673))
(assert (=> (>= 10000 x69) (= (x389 x69) (x467 x69))))
(assert (= (ite (and (not x652) x1558 x450) (x1514 x129) (x1386 x129)) (x1257 x129)))
(assert (x1120 x1410))
(assert (= (x954 x43) (ite (and x439 (not x1010) (not x309) x569) (x1312 x43) (ite (and (not x439) x569 (not x309)) (x71 x43) (ite (and x309 x569) (x71 x43) (x1387 x43))))))
(assert (x1120 x383))
(assert (x1120 x939))
(assert (= (x123 x827) (ite (= x421 x827) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1161 x827))))
(assert (x1120 x1537))
(assert (x1120 x314))
(assert (x1120 x1195))
(assert (= (x221 (x467 2690754053)) 2690754053))
(assert (= (=> (and (<= x849 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x849 0) (= (x1276 (x389 x871) x1066 0) x171) (= x157 (= x849 0)) (= x871 (x560 1461501637330902918203684832716283019655932542975 x903)) (= (x1276 (x389 x1567) (x467 6) 0) x1066) (= x849 (x1509 x171))) (and (=> (and (= x1567 x457) (not x157)) x696) (=> x157 x1317))) x96))
(assert (=> (>= 10000 x117) (= (x389 x117) (x467 x117))))
(assert (x1120 x34))
(assert (= (ite (= x1319 x43) x1246 (x214 x43)) (x1198 x43)))
(assert (x292 x1341))
(assert (x1120 x1100))
(assert (x1120 x682))
(assert (x1120 x241))
(assert (x1120 x659))
(assert (=> (>= 10000 x1177) (= (x389 x1177) (x467 x1177))))
(assert (x1120 x1092))
(assert (x1120 x238))
(assert (x1120 x891))
(assert (x502 x434 x168))
(assert (= x1011 true))
(assert (x292 x490))
(assert (= (x538 x500) (ite (and x1166 x673) (x297 x500) (x1299 x500))))
(assert (x1120 x1403))
(assert (=> (>= 10000 x667) (= (x467 x667) (x389 x667))))
(assert (x1120 x1203))
(assert (x1120 x419))
(assert (x292 x594))
(assert (x1120 x885))
(assert (= (x221 (x467 1889567281)) 1889567281))
(assert (x1120 x1193))
(assert (x1120 x1417))
(assert (x1120 x233))
(assert (= (ite (= x36 x114) x315 (x8 x114)) (x1513 x114)))
(assert (= (x1509 x171) (ite (and x619 x569) (x1435 x171) (x424 x171))))
(assert (x292 x385))
(assert (=> (>= 10000 x162) (= (x467 x162) (x389 x162))))
(assert (=> (<= x594 10000) (= (x389 x594) (x467 x594))))
(assert (=> (>= 10000 x378) (= (x389 x378) (x467 x378))))
(assert (x292 x1569))
(assert (= 826074471 (x221 (x467 826074471))))
(assert (= x856 (x221 (x389 x856))))
(assert (= x1267 x693))
(assert (x1120 x1466))
(assert (= (x266 x908) (ite (= x908 x988) x1370 (x123 x908))))
(assert (= (and x471 x794) x742))
(assert (x1120 x1356))
(assert (= x521 (x221 (x389 x521))))
(assert (x1120 x373))
(assert (=> (>= 10000 x986) (= (x389 x986) (x467 x986))))
(assert (= (x71 x926) (ite (= x926 x831) x1406 (x252 x926))))
(assert (x1120 x232))
(assert (x1120 x1230))
(assert (x1120 x630))
(assert (= (x123 x1135) (ite (= x421 x1135) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1161 x1135))))
(assert (=> (<= x1445 10000) (= (x467 x1445) (x389 x1445))))
(assert (x1120 x709))
(assert (= (ite (= x399 x831) x1406 (x252 x399)) (x71 x399)))
(assert (x1120 x534))
(assert (= (x221 (x389 x302)) x302))
(assert (x1120 x951))
(assert (x1120 x1395))
(assert (x1120 x819))
(assert (x1120 x209))
(assert (= (ite (= x48 x831) x1406 (x252 x48)) (x71 x48)))
(assert (x1120 x540))
(assert (x1120 x1095))
(assert (= (x389 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x467 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (=> (>= 10000 x205) (= (x467 x205) (x389 x205))))
(assert (= x877 (=> (and (= x750 (x1276 (x389 x501) x828 0)) (= (x1276 (x389 x856) x750 0) x613) (<= 0 x971) (= (x560 1461501637330902918203684832716283019655932542975 x347) x856) (= (x560 1461501637330902918203684832716283019655932542975 x903) x501) (= x971 (x1527 x613)) (= (x1276 (x389 x635) (x467 7) 0) x828) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x971) (= x911 (= 0 x971))) (and (=> (and (= (< 0 x78) x267) (= x78 (x345 (- x635 1))) (not x267) x911) x394) (=> (and (not x911) (= x635 x1401)) x600)))))
(assert (x292 x1105))
(assert (x1120 x464))
(assert (x1120 x1179))
(assert (= (ite (and x515 x289) (x57 x553) (x1001 x553)) (x1157 x553)))
(assert (= x1218 (=> (and (not (< x1094 468353030)) (= x274 (x1276 (x389 x1070) (x467 7) 0)) (= 759532456 x1094) (< x1094 2293535753) (= x1183 (x796 (x389 274184521717934524641157099916833587206))) (= x186 x936) (= x1422 (x1276 (x389 x256) x274 0)) (not (= x1094 635128645)) (< x1094 911411945) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x936) (= (x1088 x1280) x936) (>= 1461501637330902918203684832716283019655932542975 x256) (= x1280 (x1276 (x389 x820) x1422 0)) (>= 1461501637330902918203684832716283019655932542975 x820) (not (= 468353030 x1094)) (< 0 x1183) (>= x936 0)) (=> (and (= x1221 x183) (= x186 x1396) (= x308 x342) (= x319 x1205)) x364))))
(assert (x1120 x1036))
(assert (x292 x749))
(assert (x1120 x971))
(assert (x1120 x1007))
(assert (x1120 x525))
(assert (= 0 (x783 x399)))
(assert (= (x389 142201243) (x467 142201243)))
(assert (x1120 x208))
(assert (x292 x986))
(assert (x292 x1160))
(assert (x1120 x593))
(assert (= x865 (or x1439 x1454)))
(assert (x1120 x1114))
(assert (= (x954 x885) (ite (and x569 x439 (not x1010) (not x309)) (x1312 x885) (ite (and x569 (not x439) (not x309)) (x71 x885) (ite (and x309 x569) (x71 x885) (x1387 x885))))))
(assert (= x1138 x193))
(assert (= (x257 x500) (ite (= x500 x763) x290 (x266 x500))))
(assert (x1120 x832))
(assert (x292 x488))
(assert (x1120 x1384))
(assert (x1120 x1552))
(assert (=> (>= 10000 x758) (= (x389 x758) (x467 x758))))
(assert (x1120 x1039))
(assert (x1120 x118))
(assert (=> (<= x101 10000) (= (x389 x101) (x467 x101))))
(assert (= (and x888 x294) x16))
(assert (x1120 x640))
(assert (= (ite (= x851 x48) x1353 (x915 x851)) (x57 x851)))
(assert (= (x1067 x160) (ite (= x160 x1446) x653 (x52 x160))))
(assert (= (x221 (x389 x1500)) x1500))
(assert (x1120 x780))
(assert (= x1361 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1083) (= x239 (x188 x879)) (= (x1562 x532) x1083) (<= 0 x239) (= (x560 1461501637330902918203684832716283019655932542975 x347) x1568) (= (x173 (+ 64 x1410)) x1448) (<= x145 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1406) (<= 0 x1083) (= (x560 1461501637330902918203684832716283019655932542975 x903) x762) (= x145 (x115 x213)) (= x831 (x173 (+ x1410 32))) (= (x1276 (x389 x762) x283 0) x212) (= (x1276 (x389 x1322) x1374 0) x833) (= (x1276 (x389 x1568) x833 0) x213) (= x879 (x1276 (x389 x752) (x467 1) 0)) (= x198 (= x896 0)) (= (x1276 (x389 x752) (x467 6) 0) x1211) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x239) (or x198 (and (= (x1276 (x389 x752) (x467 10) 0) x260) (= x39 (x560 1461501637330902918203684832716283019655932542975 x903)) (= x806 (x1276 (x389 x39) x260 0)) (not x198))) (= x1406 (x1268 x408)) (= x309 (= 0 x145)) (= x532 (x1276 (x389 x1445) x1211 0)) (or (and (not x309) (= x1075 0) (= (div x967 x1528) x1297) (= x1075 (x560 x56 x1328)) (= x1328 (ite (< 115792089237316195423570985008687907853269984665640564039457 x145) 1 0)) (or (not x439) (and (= (x8 x461) x144) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x576 x145)) (= x1369 (x560 1461501637330902918203684832716283019655932542975 x347)) (> x1353 0) (= x41 x576) (= (x1276 (x389 x776) x581 0) x523) (= x312 (x446 x968)) (< (* x1297 x331) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1276 (x389 x688) x604 0) x130) (= x158 x977) (= (x446 x968) x1191) (>= 1461501637330902918203684832716283019655932542975 x312) (> x68 0) (= (x1276 (x389 x966) x443 0) x658) (= (x1276 (x389 x815) x344 0) x461) (= (x173 (+ 160 x857)) x497) (<= x331 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x144 0) (= x581 (x1276 (x389 x752) (x467 11) 0)) (= (x560 1461501637330902918203684832716283019655932542975 x903) x776) (<= 0 x331) (= 0 x144) (= x966 (x560 1461501637330902918203684832716283019655932542975 x347)) (= x310 (x560 1461501637330902918203684832716283019655932542975 x903)) (= (x446 x968) x815) (< (+ x158 x854) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (< 1 x1353) x1010) (<= x815 1461501637330902918203684832716283019655932542975) (= (x1276 (x389 x310) x1554 0) x443) (= x1026 (* x1297 x331)) (= x999 (+ x977 x850)) (= (+ x41 x459) x315) (= x145 x459) (= (x1276 (x389 x1191) x523 0) x159) (< 0 x1353) (> x1353 0) (= x576 (x8 x36)) (= (x71 x497) x854) (<= 0 x576) (= (x1276 (x389 x1369) x130 0) x344) x439 (= (x363 x159) x331) (= x604 (x1276 (x389 x752) (x467 4) 0)) (= x688 (x560 1461501637330902918203684832716283019655932542975 x903)) (or (not x1010) (and (= x1521 (x446 x1007)) (= x97 x609) (= x75 (x1312 x48)) (= (x1312 x30) x609) (<= x10 1461501637330902918203684832716283019655932542975) (= x10 (x446 x1007)) (= (x1276 (x389 x752) (x467 4) 0) x1501) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x6 x145)) (= x1417 (+ x972 x1304)) (<= x1570 1461501637330902918203684832716283019655932542975) (= (x1276 (x389 x669) x875 0) x462) (= x145 x972) (= (div x29 1000000000000000000) x959) (= x1304 x6) (= (x560 1461501637330902918203684832716283019655932542975 x347) x669) (= x645 (x1276 (x389 x1570) x932 0)) (= (x1276 (x389 x752) (x467 4) 0) x131) (>= 1461501637330902918203684832716283019655932542975 x1521) (= (x1276 (x389 x338) x177 0) x932) (< 1 x1353) (= x29 (* x495 x1297)) (= x1142 x959) (= x547 (x1276 (x389 x752) (x467 11) 0)) (= x69 (x560 1461501637330902918203684832716283019655932542975 x903)) (= x875 (x1276 (x389 x1109) x1501 0)) (= x1570 (x446 x1007)) (= x495 (x363 x1113)) (= x223 (> x1353 2)) x1010 (= x338 (x560 1461501637330902918203684832716283019655932542975 x347)) (<= x6 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x1142 x97) x215) (= (x1513 x645) x6) (<= 0 x6) (= (x1276 (x389 x10) x462 0) x1464) (< 1 x1353) (>= x495 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x475) (= x30 (x173 (+ 192 x857))) (= x1109 (x560 1461501637330902918203684832716283019655932542975 x903)) (= (x1276 (x389 x1521) x685 0) x1113) (< (+ x609 x959) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x475 (x1513 x1464)) (= (x1276 (x389 x431) x131 0) x177) (= (x560 1461501637330902918203684832716283019655932542975 x903) x431) (= x475 0) (not x223) (= x685 (x1276 (x389 x69) x547 0)) (<= x495 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1297 x495)) (= x1007 (x173 (+ x1311 64))) (> x1353 1) (< 1 x75) (<= 0 x475))) (= x943 x968) (= x850 x854) (<= x576 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1191 1461501637330902918203684832716283019655932542975) (= x36 (x1276 (x389 x312) x658 0)) (= (x71 x48) x68) (= (div x1026 1000000000000000000) x158) (= (x1276 (x389 x752) (x467 4) 0) x1554) (<= x144 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= 1 x56) (= (> x1353 0) x439) (> x1528 0) (= (mod (* x145 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x967)) x309) (= x1528 (x858 x212)) (<= 0 x145) (= (x1276 (x389 x752) (x467 3) 0) x1374) (= (x733 x879 1) x408) (= (x71 x831) x1004) (<= 0 x1528) (= x283 (x1276 (x389 x752) (x467 5) 0)) (= (= 0 x1329) x619) (= x1322 (x560 1461501637330902918203684832716283019655932542975 x903)) (or (and (not x489) (= 0 x1329)) (and (= (x71 x831) x163) x489 (= (> x491 x163) x1252) (or (and (not (< x551 x343)) (= x1329 x1229) (= x343 (x71 x1410)) (= x1229 (x345 (- x551 x343))) x607) (and (= x417 604800) (not x607) (= x1329 x1424) (= x21 (x345 (- x551 x1083))) (not (< x551 x1083)) (= x1424 (ite (> 604800 x21) x21 604800)))) (= (= x1083 0) x607) (or (and x1252 (= x951 x551) (= x951 (x71 x831))) (and (not x1252) (= x491 x551))))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1528) (= (x560 1461501637330902918203684832716283019655932542975 x903) x1445) (or (and (= x240 (x1276 (x389 x488) x1505 0)) (= x1248 x236) (not x619) (= x692 (x1276 (x389 x1169) x679 0)) (= x1505 (x1276 (x389 x752) (x467 5) 0)) (= (x560 1461501637330902918203684832716283019655932542975 x903) x488) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1329 x1233)) (= (x560 1461501637330902918203684832716283019655932542975 x903) x1169) (= (* x1329 x1233) x236) (= x679 (x1276 (x389 x752) (x467 6) 0))) (and x619 (= (x1276 (x389 x149) x88 0) x638) (= (x560 1461501637330902918203684832716283019655932542975 x903) x149) (= (x1276 (x389 x752) (x467 6) 0) x88))) (= x489 (< x1083 x1004))) x791)))
(assert (= (x389 1000000000000000000) (x467 1000000000000000000)))
(assert (x1120 x434))
(assert (= (=> (= x457 x1310) x1431) x696))
(assert (x1120 x343))
(assert (x1120 x857))
(assert (=> (<= x351 10000) (= (x389 x351) (x467 x351))))
(assert (= (x221 (x389 x1070)) x1070))
(assert (= (x221 (x389 x366)) x366))
(assert (= (x221 (x389 x635)) x635))
(assert (= 2258409472 (x221 (x467 2258409472))))
(assert (x292 x1567))
(assert (= x957 (x221 (x389 x957))))
(assert (=> (>= 10000 x1359) (= (x467 x1359) (x389 x1359))))
(assert (= (x954 x678) (ite (and x569 (not x1010) (not x309) x439) (x1312 x678) (ite (and (not x309) (not x439) x569) (x71 x678) (ite (and x309 x569) (x71 x678) (x1387 x678))))))
(assert (= (x221 (x467 18446744073709551615)) 18446744073709551615))
(assert (x1120 x883))
(assert (x292 x10))
(assert (x1120 x529))
(assert (=> (<= x729 10000) (= (x467 x729) (x389 x729))))
(assert (x292 x661))
(assert (x1120 x340))
(assert (= 0 (x783 x553)))
(assert (x1120 x290))
(assert (x292 x1169))
(assert (x1120 x718))
(assert (= x351 (x221 (x389 x351))))
(assert (= (x221 (x389 x149)) x149))
(assert (x1120 x70))
(assert (x292 x1147))
(assert (x1120 x205))
(assert (x292 x25))
(assert (x1120 x595))
(assert (= x1223 (x221 (x389 x1223))))
(assert (=> (>= 10000 x893) (= (x467 x893) (x389 x893))))
(assert (= (x467 604800) (x389 604800)))
(assert (x292 x721))
(assert (= (ite (= x843 x355) x870 (x257 x355)) (x1541 x355)))
(assert (x292 x448))
(assert (x292 x342))
(assert (= (ite (and x439 x569 (not x1010) (not x309)) (x1312 x540) (ite (and (not x439) x569 (not x309)) (x71 x540) (ite (and x309 x569) (x71 x540) (x1387 x540)))) (x954 x540)))
(assert (= (x1165 x458) (ite (and x569 x198) (x82 x458) (x228 x458))))
(assert (x1120 x566))
(assert (x1120 x73))
(assert (x1120 x622))
(assert (x1120 x149))
(assert (x1120 x943))
(assert (x292 x205))
(assert (x502 x664 x1240))
(assert (x1120 x271))
(assert (x1120 x448))
(assert (= 0 (x783 x497)))
(assert (= (ite (and x569 x198) (x82 x381) (x228 x381)) (x1165 x381)))
(assert (= (ite (and x976 x450 x1558 (not x53) x844 x403) (x1460 x827) (ite (and x450 x1558 (not x403) x976 x844) (x332 x827) (ite (and (not x844) x450 x976 x1558) (x1198 x827) (ite (and x1558 (not x976) x450) (x214 x827) (x1409 x827))))) (x1514 x827)))
(assert (x1120 x1050))
(assert (= 0 (x783 x160)))
(assert (= x985 (and x110 x1539)))
(assert (x1120 x1020))
(assert (x1120 x1118))
(assert (= (x389 2293535753) (x467 2293535753)))
(assert (x1120 x1459))
(assert (x292 x871))
(assert (x400 x56 x1328))
(assert (x1120 x1524))
(assert (x1120 x1530))
(assert (x1120 x1087))
(assert (x1120 x1333))
(assert (= (x1514 x1135) (ite (and x844 x450 x403 (not x53) x976 x1558) (x1460 x1135) (ite (and x976 x450 x1558 (not x403) x844) (x332 x1135) (ite (and (not x844) x1558 x976 x450) (x1198 x1135) (ite (and x1558 x450 (not x976)) (x214 x1135) (x1409 x1135)))))))
(assert (x502 x413 x1363))
(assert (x292 x674))
(assert (= (x221 (x389 x1152)) x1152))
(assert (x1120 x804))
(assert (= x220 x1251))
(assert (= 274184521717934524641157099916833587206 (x221 (x389 274184521717934524641157099916833587206))))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x221 (x467 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (x1120 x937))
(assert (=> (<= x34 10000) (= (x467 x34) (x389 x34))))
(assert (not x1184))
(assert (= (x467 18446744073709551615) (x389 18446744073709551615)))
(assert (x1120 x454))
(assert (x292 x1429))
(assert (x1120 x870))
(assert (= (x214 x540) (ite (= x1085 x540) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x540))))
(assert (x292 x1520))
(assert (x1120 x859))
(assert (x1120 x352))
(assert (= (ite (and x450 (not x652) x1558) (x1514 x1135) (x1386 x1135)) (x1257 x1135)))
(assert (x1120 x1215))
(assert (x1120 x49))
(assert (= x804 (x221 (x389 x804))))
(assert (= x1495 (=> (and (= (= x1332 0) x409) (or x445 (and (= (x560 1461501637330902918203684832716283019655932542975 x347) x1121) (= x428 (x560 1461501637330902918203684832716283019655932542975 x903)) (= x45 (x1276 (x389 x428) x785 0)) (not x445) (= (x1276 (x389 x1121) x45 0) x61) (= x785 (x1276 (x389 x752) (x467 9) 0)))) (or (and x409 (= (x560 1461501637330902918203684832716283019655932542975 x347) x1176) (= (x1276 (x389 x1176) x1188 0) x1158) (= (x1276 (x389 x752) (x467 7) 0) x1391) (= x667 (x560 1461501637330902918203684832716283019655932542975 x903)) (= x1188 (x1276 (x389 x667) x1391 0)) (= x1410 x303)) (and (<= 0 x64) (= (x560 1461501637330902918203684832716283019655932542975 x903) x914) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1087) (>= x1087 0) (= x918 (x733 x760 1)) (<= x64 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x460 (x1276 (x389 x1526) x1064 0)) (or (and (= x295 (x560 1461501637330902918203684832716283019655932542975 x903)) (= x744 (x560 1461501637330902918203684832716283019655932542975 x347)) x13 (= x1561 x1410) (= (x1276 (x389 x744) x1060 0) x204) (= (x1276 (x389 x295) x1213 0) x1060) (= (x1276 (x389 x752) (x467 7) 0) x1213)) (and (= (x1276 (x389 x1290) x330 0) x279) (= x729 (x560 1461501637330902918203684832716283019655932542975 x347)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1021 x1332)) (not x13) (= x554 (x560 1461501637330902918203684832716283019655932542975 x903)) (= x1290 (x560 1461501637330902918203684832716283019655932542975 x347)) (= (x560 1461501637330902918203684832716283019655932542975 x903) x101) (= x737 (x1276 (x389 x729) x1133 0)) (= x861 x933) (= x330 (x1276 (x389 x554) x808 0)) (= x1097 (x1276 (x389 x752) (x467 3) 0)) (= x1410 x1561) (= (* x1021 x1332) x933) (= x1133 (x1276 (x389 x101) x1097 0)) (= x808 (x1276 (x389 x752) (x467 7) 0)))) (<= x996 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= 0 x1021) (not x1335)) (and (or (and (= (x345 (- x60 x64)) x211) (= 604800 x922) (not (> x64 x60)) (= x320 x1021) (not x1182) (= x320 (ite (< x211 604800) x211 604800))) (and (= (x345 (- x60 x270)) x847) x1182 (= x270 (x1368 x303)) (not (< x60 x270)) (= x1021 x847))) (= (= 0 x64) x1182) x1335 (= x709 (x1368 x336)) (or (and (= x1506 (x1368 x336)) (= x60 x1506) x1362) (and (= x60 x491) (not x1362))) (= x1362 (> x491 x709)))) (= x760 (x1276 (x389 x752) (x467 1) 0)) (= x407 (x1368 x336)) (<= 0 x996) (= (x560 1461501637330902918203684832716283019655932542975 x347) x1526) (= (x173 (+ x303 32)) x336) (= (x1276 (x389 x914) x1519 0) x1064) (= x1335 (< x64 x407)) (= (= x1021 0) x13) (= x1087 (x188 x760)) (= (x1276 (x389 x752) (x467 7) 0) x1519) (= x64 (x1527 x460)) (not x409) (= (x1268 x918) x996) (= (x173 (+ x303 64)) x1561))) (= x445 (= x246 0))) x1535)))
(assert (= (x783 x678) 0))
(assert (x292 x1179))
(assert (= (x389 2960351575) (x467 2960351575)))
(assert (= (x221 (x467 3123789364)) 3123789364))
(assert (= (ite (= x43 x1230) x898 (x1198 x43)) (x332 x43)))
(assert (=> (>= 10000 x1488) (= (x467 x1488) (x389 x1488))))
(assert (x1120 x1152))
(assert (= (ite (= x1319 x540) x1246 (x214 x540)) (x1198 x540)))
(assert (=> (<= x278 10000) (= (x389 x278) (x467 x278))))
(assert (x1120 x766))
(assert (= (x221 (x389 x1450)) x1450))
(assert (= (ite (and (not x1010) (not x309) x569 x439) (x1513 x1018) (ite (and (not x439) (not x309) x569) (x8 x1018) (ite (and x569 x309) (x8 x1018) (x72 x1018)))) (x732 x1018)))
(assert (= (and (not x226) x742) x1365))
(assert (x1120 x189))
(assert (=> (>= 10000 x773) (= (x389 x773) (x467 x773))))
(assert (x1120 x395))
(assert (= x755 x575))
(assert (= x1441 (=> (and (<= x482 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x482) (= x1309 (x1276 (x389 x893) x65 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1523) (= (= 0 x482) x1266) (= x893 (x560 1461501637330902918203684832716283019655932542975 x903)) (not (> x1567 x1523)) (= x65 (x1276 (x389 x1567) (x467 6) 0)) (>= x1523 0) (= (x1509 x1309) x482)) (and (=> (and (not x1266) (= x555 (x1165 x1385)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x555) (= (x1276 (x389 x1434) x1029 0) x1385) (= x1029 (x1276 (x389 x1567) (x467 10) 0)) (= x859 0) (>= x555 0) (= x555 x391) (= x1434 (x560 1461501637330902918203684832716283019655932542975 x903))) x1056) (=> x1266 x514)))))
(assert (= (=> (and (= x1215 (x796 (x389 274184521717934524641157099916833587206))) (= (x1360 x359) x1093) (<= x1569 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1093) (= x944 x1093) (> 2960351575 x1261) (= x1293 (x1276 (x389 x1216) (x467 5) 0)) (= (x1276 (x389 x1569) x1293 0) x359) (= x1261 2798343961) (not (> 2293535753 x1261)) (not (= x1261 2743102681)) (<= 0 x1093) (> x1215 0) (not (= x1261 2764855426)) (not (> 2690754053 x1261)) (not (= x1261 2690754053))) (=> (and (= x1221 x117) (= x308 x603) (= x91 x944)) x126)) x277))
(assert (x292 x1279))
(assert (x1120 x342))
(assert (= x821 (x221 (x389 x821))))
(assert (= (x123 x355) (ite (= x421 x355) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1161 x355))))
(assert (x1120 x1445))
(assert (x1120 x441))
(assert (=> (>= 10000 x1567) (= (x389 x1567) (x467 x1567))))
(assert (= (x1312 x1135) (ite (= x1135 x497) x999 (x71 x1135))))
(assert (= (ite (= x48 x869) x964 (x332 x48)) (x1460 x48)))
(assert (x1120 x996))
(assert (x292 x153))
(assert (x1120 x87))
(assert (x1120 x410))
(assert (x1120 x211))
(assert (x1120 x109))
(assert (= (x538 x512) (ite (and x1166 x673) (x297 x512) (x1299 x512))))
(assert (= (x1067 x500) (ite (= x500 x1446) x653 (x52 x500))))
(assert (= (=> (= x162 x1547) x368) x503))
(assert (x1120 x302))
(assert (x1120 x319))
(assert (= (x221 (x389 x672)) x672))
(assert (= (x57 x30) (ite (= x48 x30) x1353 (x915 x30))))
(assert (=> (<= x1500 10000) (= (x467 x1500) (x389 x1500))))
(assert (x1120 x1261))
(assert (= (x467 911411945) (x389 911411945)))
(assert (= (=> (and (= (< 0 x889) x754) (= (x345 (- x752 1)) x889)) (and (=> (not x754) x265) (=> x754 x299))) x196))
(assert (= x39 (x221 (x389 x39))))
(assert (= (x1541 x500) (ite (= x500 x843) x870 (x257 x500))))
(assert (x1120 x624))
(assert (= x295 (x221 (x389 x295))))
(assert (=> (<= x505 10000) (= (x389 x505) (x467 x505))))
(assert (x1120 x1031))
(assert (=> (<= x431 10000) (= (x467 x431) (x389 x431))))
(assert (x1120 x172))
(assert (x292 x1434))
(assert (= (x1460 x506) (ite (= x869 x506) x964 (x332 x506))))
(assert (x1120 x777))
(assert (= x1369 (x221 (x389 x1369))))
(assert (=> (>= 10000 x1364) (= (x467 x1364) (x389 x1364))))
(assert (x1120 x1112))
(assert (= (=> (and (= x1307 (x955 x512)) (= x281 (= 0 x961)) (= x795 (x770 (x389 274184521717934524641157099916833587206))) (= x995 (x563 (x389 x1485))) (or (and (= x1228 (x173 (+ x961 63))) (= x1159 x512) (= x382 x244) (= (x560 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1228) x950) (not x281) (= (x173 (+ x1159 x950)) x244) (= x907 (x173 (+ 96 x574)))) (and (= 96 x512) x281 (= x382 x1159))) x1289 (not (= x1459 0)) (= x1289 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x770 (x389 274184521717934524641157099916833587206)))) (= x219 (< 0 x1307)) (or (and (< 0 x930) (= x777 x930) (= (x173 (+ 32 x512)) x540) (= (x955 x540) x930) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1256) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1256)) (< x1256 32)))) (= x1469 (not x731)) (= x1256 (x955 x512)) (= (= 0 x930) x731) x219 (= x777 (ite x1469 1 0))) (not x219))) x1342) x934))
(assert (= (x467 2211524764) (x389 2211524764)))
(assert (=> (<= x1483 10000) (= (x467 x1483) (x389 x1483))))
(assert (x1120 x428))
(assert (x292 x1237))
(assert (= (x1157 x851) (ite (and x515 x289) (x57 x851) (x1001 x851))))
(assert (= (ite (= x497 x643) x999 (x71 x643)) (x1312 x643)))
(assert (= x1269 (=> (and (= x339 x333) (= x1076 x1122) (= x598 x148) (= x958 (<= x148 x339))) (and x958 (=> (and (= x1396 x842) (= (<= x640 x842) x27) (= x640 x1186)) (and (=> (and (= x477 x241) (= x813 x91) (= x715 (>= x477 x813))) (and x715 (=> (and (= x264 x282) (= (<= x264 x1012) x577) (= x1012 x1076)) (and x577 (=> (and (= x352 x1226) (= true x1443) (= x271 2939843472) (= x714 2939843472) (= x1132 true) (= (<= x1415 x1226) x1305) (= x1196 2939843472) (= x335 1517119036) (= 2939843472 x1259) (= x433 x1415) (= x58 2512682246) (= x1116 true) (= x1041 87118632) (= true x1258) (= true x1320) (= x1118 3123789364)) (and (=> (and (= x493 (>= x1497 x466)) (= x883 x1497) (= x466 x1474)) (and x493 (=> (and (= x384 x1481) (= (<= x1456 x1481) x656) (= x1130 true) (= x386 false) (= x1046 false) (= 2512682246 x483) (= x632 x1456) (= 2939843472 x1534)) x656))) x1305)))))) x27))))))
(assert (= (ite (= x1230 x355) x898 (x1198 x355)) (x332 x355)))
(assert (=> (>= 10000 x1571) (= (x389 x1571) (x467 x1571))))
(assert (x1120 x744))
(assert (x1120 x959))
(assert (x1120 x1453))
(assert (= x1019 (or x823 x789)))
(assert (x1120 x75))
(assert (x1120 x1451))
(assert (x292 x81))
(assert (= (and x909 (not x321)) x888))
(assert (x1120 x681))
(assert (= (x221 (x389 x776)) x776))
(assert (= (x221 (x389 x286)) x286))
(assert (= (x221 (x389 x1333)) x1333))
(assert (x1120 x695))
(assert (x1120 x914))
(assert (x1120 x282))
(assert (x1120 x762))
(assert (x1120 x148))
(assert (x1120 x407))
(assert (x1120 x470))
(assert (x1120 x81))
(assert (= (x221 (x389 x10)) x10))
(assert (= (x221 (x389 x966)) x966))
(assert (= (x115 x1292) (ite (and x409 x897) (x665 x1292) (ite (and x13 x897 (not x409)) (x665 x1292) (x1398 x1292)))))
(assert (=> (>= 10000 x452) (= (x389 x452) (x467 x452))))
(assert (x1120 x355))
(assert (x1120 x1233))
(assert (x1057 x413))
(assert (x292 x1445))
(assert (=> (>= 10000 x688) (= (x389 x688) (x467 x688))))
(assert (x292 x899))
(assert (= (x1312 x30) (ite (= x30 x497) x999 (x71 x30))))
(assert (=> (>= 10000 x86) (= (x389 x86) (x467 x86))))
(assert (= (x732 x1286) (ite (and x439 (not x1010) (not x309) x569) (x1513 x1286) (ite (and (not x439) x569 (not x309)) (x8 x1286) (ite (and x309 x569) (x8 x1286) (x72 x1286))))))
(assert (=> (>= 10000 x119) (= (x389 x119) (x467 x119))))
(assert (x1120 x1199))
(assert (= (x1312 x827) (ite (= x827 x497) x999 (x71 x827))))
(assert (x1120 x899))
(assert (= (ite (and x1558 (not x652) x450) (x1514 x512) (x1386 x512)) (x1257 x512)))
(assert (= (x71 x129) (ite (= x129 x831) x1406 (x252 x129))))
(assert (x292 x326))
(assert (x1120 x989))
(assert (x1120 x422))
(assert (x1120 x298))
(assert (x1120 x801))
(assert (x1120 x1372))
(assert (x1120 x1340))
(assert (x1120 x94))
(assert (= 274184521717934524641157099916833587214 (x221 (x389 274184521717934524641157099916833587214))))
(assert (= (x1312 x540) (ite (= x497 x540) x999 (x71 x540))))
(assert (x1120 x788))
(assert (x1120 x357))
(assert (= x1109 (x221 (x389 x1109))))
(assert (x1120 x1426))
(assert (x292 x69))
(assert (x1120 x906))
(assert (= (x71 x355) (ite (= x355 x831) x1406 (x252 x355))))
(assert (= (or (and (not x1558) x450) (and (not x471) x794) x263) x1271))
(assert (x1120 x608))
(assert (x292 x667))
(assert (= (ite (and x289 x515) (x57 x885) (x1001 x885)) (x1157 x885)))
(assert (x1120 x984))
(assert (= (and x655 (not x1089)) x1553))
(assert (x1120 x925))
(assert (x1120 x1226))
(assert (x1120 x1205))
(assert (=> (>= 10000 x519) (= (x389 x519) (x467 x519))))
(assert (x1057 x903))
(assert (x1120 x606))
(assert (=> (>= 10000 x179) (= (x467 x179) (x389 x179))))
(assert (x1120 x944))
(assert (x292 x1199))
(assert (x1120 x1072))
(assert (x292 x893))
(assert (= x452 (x221 (x389 x452))))
(assert (=> (<= x38 10000) (= (x389 x38) (x467 x38))))
(assert (x1120 x80))
(assert (= (x57 x908) (ite (= x908 x48) x1353 (x915 x908))))
(assert (= (ite (and x619 x569) (x1360 x212) (x1556 x212)) (x858 x212)))
(assert (= (ite (= x355 x763) x290 (x266 x355)) (x257 x355)))
(assert (x1120 x1534))
(assert (x1120 x551))
(assert (x400 x118 x156))
(assert (= (ite (and x897 x445) (x1543 x449) (x1491 x449)) (x1549 x449)))
(assert (= (x71 x500) (ite (= x831 x500) x1406 (x252 x500))))
(assert (x292 x773))
(assert (= x31 (x221 (x389 x31))))
(assert (x1120 x1412))
(assert (=> (>= 10000 x454) (= (x467 x454) (x389 x454))))
(assert (x1057 x347))
(assert (= (x389 1968616202) (x467 1968616202)))
(assert (x1120 x521))
(assert (x1120 x278))
(assert (x292 x338))
(assert (x292 x876))
(assert (= (ite (and x289 x515) (x57 x43) (x1001 x43)) (x1157 x43)))
(assert (x1120 x889))
(assert (x1120 x861))
(assert (x1120 x983))
(assert (x1120 x378))
(assert (= (x221 (x733 x760 1)) (+ 1 (x221 x760))))
(assert (x1120 x1012))
(assert (x1120 x1274))
(assert (= (x57 x885) (ite (= x48 x885) x1353 (x915 x885))))
(assert (= (ite (= x885 x869) x964 (x332 x885)) (x1460 x885)))
(assert (= (x389 2868243304) (x467 2868243304)))
(assert (x1120 x1415))
(assert (x1120 x1332))
(assert (= (x1061 x827) (ite (= x827 x160) x1254 (x1067 x827))))
(assert (= (x57 x540) (ite (= x48 x540) x1353 (x915 x540))))
(assert (= (x221 (x389 x1191)) x1191))
(assert (= (x1061 x355) (ite (= x355 x160) x1254 (x1067 x355))))
(assert (= (x221 (x389 x624)) x624))
(assert (x292 x278))
(assert (x292 x1521))
(assert (= x125 (x221 (x389 x125))))
(assert (= 2532887486 (x221 (x467 2532887486))))
(assert (= x1570 (x221 (x389 x1570))))
(assert (=> (>= 10000 x1470) (= (x467 x1470) (x389 x1470))))
(assert (= (+ 1 (x221 x879)) (x221 (x733 x879 1))))
(assert (x1120 x662))
(assert (= x455 x178))
(assert (= (x71 x506) (ite (= x506 x831) x1406 (x252 x506))))
(assert (x1120 x1144))
(assert (x1120 x1399))
(assert (= (ite (and x673 x1166) (x297 x827) (x1299 x827)) (x538 x827)))
(assert (x1120 x156))
(assert (x1120 x1521))
(assert (=> (<= x821 10000) (= (x467 x821) (x389 x821))))
(assert (x1120 x1059))
(assert (x292 x1488))
(assert (x1120 x1329))
(assert (x292 x1570))
(assert (=> (<= x1059 10000) (= (x389 x1059) (x467 x1059))))
(assert (x292 x179))
(assert (= (x71 x831) x1406))
(assert (x292 x1027))
(assert (=> (>= 10000 x752) (= (x467 x752) (x389 x752))))
(assert (= (x332 x500) (ite (= x1230 x500) x898 (x1198 x500))))
(assert (= x278 (x221 (x389 x278))))
(assert (= x178 x1005))
(assert (= (x221 (x389 x1040)) x1040))
(assert (= (ite (= x908 x1319) x1246 (x214 x908)) (x1198 x908)))
(assert (= (ite (= x1085 x908) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x908)) (x214 x908)))
(assert (= (x389 2764855426) (x467 2764855426)))
(assert (x292 x428))
(assert (= (x1123 x1018) (ite (= x1018 x1286) x1114 (x732 x1018))))
(assert (= (x1198 x355) (ite (= x355 x1319) x1246 (x214 x355))))
(assert (= (=> (and (>= x1523 0) (= (x560 1461501637330902918203684832716283019655932542975 x903) x821) (= (x1276 (x389 x752) (x467 7) 0) x1154) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1523) (= (x1276 (x389 x821) x1154 0) x1425) (<= 0 x401) (not (< x1523 x962)) (= (x1527 x748) x401) (= x624 (x560 1461501637330902918203684832716283019655932542975 x347)) (= x748 (x1276 (x389 x624) x1425 0)) (= x321 (> x401 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x401)) (and (=> (not x321) x841) (=> (and (= x1187 x1332) (= x1119 (x1276 (x389 x378) x143 0)) (= (x1276 (x389 x752) (x467 9) 0) x143) (= (x560 1461501637330902918203684832716283019655932542975 x347) x1152) (= (x1276 (x389 x1152) x1119 0) x1430) x321 (= 0 x246) (= (x560 1461501637330902918203684832716283019655932542975 x903) x378) (= (x1543 x1430) x1187) (<= x1187 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1187)) x1495))) x546))
(assert (x292 x319))
(assert (x1120 x700))
(assert (= x289 x1354))
(assert (x1120 x1186))
(assert (x1120 x1515))
(assert (x1120 x1244))
(assert (x1120 x347))
(assert (= (ite (and x515 x289) (x57 x926) (x1001 x926)) (x1157 x926)))
(assert (x1120 x1455))
(assert (=> (>= 10000 x1290) (= (x389 x1290) (x467 x1290))))
(assert (= (ite (and x569 (not x1010) x439 (not x309)) (x1312 x926) (ite (and (not x309) (not x439) x569) (x71 x926) (ite (and x309 x569) (x71 x926) (x1387 x926)))) (x954 x926)))
(assert (= (ite (= x43 x160) x1254 (x1067 x43)) (x1061 x43)))
(assert (x1120 x609))
(assert (x1120 x632))
(assert (= (ite (= x1085 x500) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x500)) (x214 x500)))
(assert (= (x1198 x553) (ite (= x553 x1319) x1246 (x214 x553))))
(assert (x1120 x795))
(assert (x1120 x1167))
(assert (= x1249 (x221 (x389 x1249))))
(assert (=> (<= x1042 10000) (= (x389 x1042) (x467 x1042))))
(assert (=> (<= x521 10000) (= (x389 x521) (x467 x521))))
(assert (= (x221 (x389 x893)) x893))
(assert (x1120 x353))
(assert (= (ite (and x742 x226) (x1277 x355) (x1468 x355)) (x1077 x355)))
(assert (x1120 x108))
(assert (= (x467 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x389 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x292 x1359))
(assert (x292 x1500))
(assert (= (x221 (x389 x646)) x646))
(assert (= (and x1171 x1175) x1438))
(assert (x1120 x1042))
(assert (x1120 x144))
(assert (= x220 x575))
(assert (= x791 (=> (and (= x1567 (x173 (+ 1 x752))) (= x102 (> x1567 x293)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x962))) (and (=> (and x102 (= x1448 x1264)) x133) (=> (not x102) x626)))))
(assert (=> (>= 10000 x1027) (= (x467 x1027) (x389 x1027))))
(assert (= (x389 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x467 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (x221 (x467 1517119036)) 1517119036))
(assert (= 0 (x783 x827)))
(assert (= (x221 (x389 x119)) x119))
(assert (x1120 x594))
(assert (x1120 x1337))
(assert (x292 x1568))
(assert (=> (<= x1434 10000) (= (x467 x1434) (x389 x1434))))
(assert (x1120 x1052))
(assert (x1120 x674))
(assert (= (x221 (x389 x1341)) x1341))
(assert (=> (>= 10000 x1070) (= (x467 x1070) (x389 x1070))))
(assert (= (x71 x643) (ite (= x831 x643) x1406 (x252 x643))))
(assert (= (ite (= x497 x129) x999 (x71 x129)) (x1312 x129)))
(assert (x1057 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1120 x1400))
(assert (x1120 x1392))
(assert (x1120 x759))
(assert (x292 x1070))
(assert (= (ite (= x497 x43) x999 (x71 x43)) (x1312 x43)))
(assert (= (x1312 x885) (ite (= x497 x885) x999 (x71 x885))))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x33) (= x34 (x560 1461501637330902918203684832716283019655932542975 x903)) (= (= x33 0) x1151) (>= x33 0) (= (x1562 x561) x33) (= (x1276 (x389 x889) (x467 6) 0) x510) (= x561 (x1276 (x389 x34) x510 0))) (and (=> (and (not x1151) (= x1547 x889)) x503) (=> (and (= x254 (< 0 x1250)) (= (x345 (- x889 1)) x1250) x1151 (not x254)) x265))) x299))
(assert (x1120 x1189))
(assert (=> (>= 10000 x1279) (= (x467 x1279) (x389 x1279))))
(assert (x1120 x1347))
(assert (x1120 x174))
(assert (=> (<= x10 10000) (= (x389 x10) (x467 x10))))
(assert (=> (<= x695 10000) (= (x467 x695) (x389 x695))))
(assert (= (x221 (x389 x749)) x749))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x221 (x467 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= x653 (x1067 x1446)))
(assert (= (x467 69947311) (x389 69947311)))
(assert (= (x954 x500) (ite (and x439 (not x1010) (not x309) x569) (x1312 x500) (ite (and (not x439) (not x309) x569) (x71 x500) (ite (and x309 x569) (x71 x500) (x1387 x500))))))
(assert (x1120 x475))
(assert (= x291 (=> (and (= x920 (x1139 (x389 274184521717934524641157099916833587206))) x527 x99 (= (x1139 (x389 x695)) x357) (= (x20 (x389 x695)) x1227) (= x325 x1049) (= x1437 (x1139 (x389 274184521717934524641157099916833587206))) (= x702 (<= 0 x1437)) (= (= x695 274184521717934524641157099916833587218) x226) (= (< (x20 (x389 x695)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x527) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x357) x99) x702) (and (=> (not x226) x647) (=> (and (> x1141 0) (= x834 (x1276 (x389 274184521717934524641157099916833587206) (x467 1) 0)) (<= 0 x838) (= x109 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x1276 (x389 x819) (x467 1) 0) x243) (= x1403 2835717307) (>= 1461501637330902918203684832716283019655932542975 x819) (= x973 (> x637 x838)) (= 68 x616) (= (x411 x834) x838) (not (> 649617121 x1403)) (= x1189 x819) (not (= x1403 649617121)) (= x1308 x637) (= x997 (+ x1308 x284)) (= x637 x846) (= x174 x819) (= x1408 x923) (not x973) (<= x711 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x616 x325) (= (x807 x243) x711) (not (= x1403 2514000705)) x226 (not x229) (not (> 4 x616)) (= (x796 (x389 274184521717934524641157099916833587218)) x1141) (= x825 (x345 (- x838 x846))) (not x623) (= x1222 (or (and (= (<= x1340 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1340)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1340))) (= (x1276 (x389 274184521717934524641157099916833587206) (x467 1) 0) x1381) (<= x838 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 826074471 x1403)) (<= 0 x711) (= 274184521717934524641157099916833587206 x864) (not x1222) (= x284 x711) (= x229 (> x846 x838)) (not (= x1403 1889567281)) (= x623 (>= (+ x637 x711) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< (+ x711 x637) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x822 x846) (= 1 x606) (= 274184521717934524641157099916833587206 x1112) (= x377 32) (= (x345 (- x616 4)) x1340)) x1051)))))
(assert (= (ite (= x831 x160) x1406 (x252 x160)) (x71 x160)))
(assert (=> (<= x722 10000) (= (x467 x722) (x389 x722))))
(assert (= (ite (= x553 x160) x1254 (x1067 x553)) (x1061 x553)))
(assert (x1120 x988))
(assert (=> (>= 10000 x302) (= (x389 x302) (x467 x302))))
(assert (x1120 x1307))
(assert (x1057 x1477))
(assert (= (x1198 x827) (ite (= x1319 x827) x1246 (x214 x827))))
(assert (x292 x1310))
(assert (= (x221 (x733 x1416 1)) (+ (x221 x1416) 1)))
(assert (= (ite (= x926 x1446) x653 (x52 x926)) (x1067 x926)))
(assert (= (ite (= x1319 x1135) x1246 (x214 x1135)) (x1198 x1135)))
(assert (x292 x1191))
(assert (x1120 x678))
(assert (=> (<= x136 10000) (= (x467 x136) (x389 x136))))
(assert (x292 x1270))
(assert (x292 x1040))
(assert (x1120 x406))
(assert (= (x1061 x512) (ite (= x512 x160) x1254 (x1067 x512))))
(assert (x1120 x160))
(assert (= x819 (x221 (x389 x819))))
(assert (x1120 x1109))
(assert (x1120 x1350))
(assert (x1120 x900))
(assert (x1120 x1002))
(assert (= x227 (=> (= (< x293 x752) x1015) (and (=> (and x1015 (= x303 x1264)) x133) (=> (not x1015) x546)))))
(assert (x1120 x18))
(assert (x1120 x649))
(assert (= (x1198 x48) (ite (= x1319 x48) x1246 (x214 x48))))
(assert (= (x221 (x389 x1488)) x1488))
(assert (= (ite (and x1558 x450 (not x652)) (x1514 x48) (x1386 x48)) (x1257 x48)))
(assert (= x1371 (=> (and (= (x345 (- x1567 1)) x286) (= x573 (< 0 x286))) (and (=> x573 x782) (=> (not x573) x11)))))
(assert (x1120 x1187))
(assert (= (x1549 x687) (ite (and x445 x897) (x1543 x687) (x1491 x687))))
(assert (= (x1061 x908) (ite (= x160 x908) x1254 (x1067 x908))))
(assert (x1120 x603))
(assert (= (x221 (x389 x486)) x486))
(assert (x1120 x15))
(assert (x1120 x1228))
(assert (= x1216 (x221 (x389 x1216))))
(assert (=> (>= 10000 x1040) (= (x467 x1040) (x389 x1040))))
(assert (x1120 x820))
(assert (= (x1198 x851) (ite (= x1319 x851) x1246 (x214 x851))))
(assert (x1120 x1481))
(assert (= x1239 (x221 (x389 x1239))))
(assert (x1120 x721))
(assert (=> (<= x1521 10000) (= (x389 x1521) (x467 x1521))))
(assert (x292 x672))
(assert (= (ite (= x869 x355) x964 (x332 x355)) (x1460 x355)))
(assert (x1120 x822))
(assert (= (ite (and x439 x569 (not x1010) (not x309)) (x1312 x851) (ite (and (not x309) (not x439) x569) (x71 x851) (ite (and x309 x569) (x71 x851) (x1387 x851)))) (x954 x851)))
(assert (=> (>= 10000 x1526) (= (x389 x1526) (x467 x1526))))
(assert (x1120 x1348))
(assert (x292 x136))
(assert (= x428 (x221 (x389 x428))))
(assert (= (x1541 x827) (ite (= x843 x827) x870 (x257 x827))))
(assert (x292 x804))
(assert (x1120 x1411))
(assert (x292 x1483))
(assert (x1120 x43))
(assert (= (and x786 x985) x24))
(assert (x1120 x1278))
(assert (x1120 x56))
(assert (x1120 x1325))
(assert (x292 x627))
(assert (x1120 x482))
(assert (x1120 x303))
(assert (x1120 x1434))
(assert (x1120 x505))
(assert (x1120 x876))
(assert (= x562 x455))
(assert (x1120 x224))
(assert (x1057 x56))
(assert (= x729 (x221 (x389 x729))))
(assert (= (x389 2798343961) (x467 2798343961)))
(assert (= x810 (or x1357 x1145)))
(assert (x1120 x22))
(assert (= (x467 649617121) (x389 649617121)))
(assert (x1120 x136))
(assert (= x722 (x221 (x389 x722))))
(assert (= (ite (= x1446 x553) x653 (x52 x553)) (x1067 x553)))
(assert (= (=> (= (< 1 x1353) x471) (and (=> (and (or (and (= (x173 (+ x1049 x1546)) x1167) x55) (not x55)) (= x650 (x173 (+ 100 x382))) (= x1380 (x173 (+ 36 x382))) (= x1477 (x872 x43)) (> x1353 1) (= x1451 (x173 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x663))) (= 0 x1263) (= (x560 26959946667150639794667015087019630673637144422540572481103610249215 x1477) x663) (= x695 (x446 x1337)) (= x421 (x173 (+ x1380 96))) (= x202 (< 0 x1473)) (= (x345 (- x650 x382)) x22) (= x1473 (x796 (x389 x695))) (= x1189 (x560 1461501637330902918203684832716283019655932542975 x347)) (= x822 (x955 x129)) (= x1546 (x173 (+ 128 x1380))) (= x129 (x173 (+ x857 192))) (= x1049 (x123 x382)) (= (x173 (+ x382 68)) x305) x471 (= x323 (> x1049 0)) (= x1405 (x955 x48)) (= (x345 (- x22 32)) x1524) (= (x173 (+ 64 x1311)) x1337) (= (x173 (+ x382 32)) x43) (> x1405 1) (= (< x1049 x919) x55) x202 (<= x695 1461501637330902918203684832716283019655932542975) (or (and (= x885 x43) (= (> x1049 32) x1390) (= x1546 x988) x323 (or (and (= 32 x919) (not x1390)) (and (= (x173 (+ 96 x650)) x763) (= x290 (x266 x1135)) (= x1306 (> x1049 64)) (or (and (= x728 (< 96 x1049)) (or (and (not x728) (= 96 x919)) (and x728 (= (> x1049 128) x799) (not x799) (= x526 (x1541 x500)) (= (x173 (+ x650 160)) x1453) (= (x173 (+ x382 128)) x500) (= 128 x919))) (= x908 (x173 (+ 96 x382))) (= (x257 x908) x870) x1306 (= (x173 (+ x650 128)) x843)) (and (not x1306) (= 64 x919))) (= (x173 (+ 64 x382)) x1135) x1390)) (= x1370 (x123 x885))) (and (= 0 x919) (not x323)))) x291) (=> (not x471) x1053))) x1342))
(assert (= (x221 (x389 x1567)) x1567))
(assert (= (ite (and x289 x515) (x57 x497) (x1001 x497)) (x1157 x497)))
(assert (= x1217 (and x375 x16)))
(assert (x1120 x1520))
(assert (x1120 x1437))
(assert (= (x221 (x389 x378)) x378))
(assert (x1120 x490))
(assert (x1120 x509))
(assert (x1120 x320))
(assert (x1120 x384))
(assert (= (x71 x43) (ite (= x831 x43) x1406 (x252 x43))))
(assert (x1120 x1177))
(assert (x1120 x1568))
(assert (x1120 x1170))
(assert (=> (>= 10000 x819) (= (x467 x819) (x389 x819))))
(assert (= (x1460 x827) (ite (= x827 x869) x964 (x332 x827))))
(assert (= (ite (= x48 x1135) x1353 (x915 x1135)) (x57 x1135)))
(assert (= (ite (and x515 x289) (x57 x827) (x1001 x827)) (x1157 x827)))
(assert (= (and x1358 x269) x793))
(assert (x1120 x335))
(assert (x1120 x730))
(assert (= (x1460 x129) (ite (= x129 x869) x964 (x332 x129))))
(assert (x1120 x14))
(assert (x1120 x68))
(assert (= (x221 (x389 x183)) x183))
(assert (=> (<= x1100 10000) (= (x389 x1100) (x467 x1100))))
(assert (x1120 x98))
(assert (= (ite (= x1085 x129) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x129)) (x214 x129)))
(assert (x1120 x643))
(assert (= (x1157 x512) (ite (and x289 x515) (x57 x512) (x1001 x512))))
(assert (= (x221 (x389 x1470)) x1470))
(assert (x1120 x950))
(assert (x1120 x1094))
(assert (x1120 x690))
(assert (x1120 x790))
(assert (= (and x1217 x580) x1330))
(assert (x1120 x1370))
(assert (= (x221 (x467 2868243304)) 2868243304))
(assert (= (ite (= x1230 x48) x898 (x1198 x48)) (x332 x48)))
(assert (=> (<= x149 10000) (= (x389 x149) (x467 x149))))
(assert (=> (>= 10000 x1191) (= (x389 x1191) (x467 x1191))))
(assert (x292 x752))
(assert (=> (>= 10000 x814) (= (x467 x814) (x389 x814))))
(assert (x1120 x1298))
(assert (= x234 (x221 (x389 x234))))
(assert (= (x221 (x389 x1237)) x1237))
(assert (= (x332 x908) (ite (= x908 x1230) x898 (x1198 x908))))
(assert (= (ite (= x988 x355) x1370 (x123 x355)) (x266 x355)))
(assert (= (x1257 x885) (ite (and (not x652) x450 x1558) (x1514 x885) (x1386 x885))))
(assert (= (ite (= x869 x43) x964 (x332 x43)) (x1460 x43)))
(assert (= (x221 (x467 2514000705)) 2514000705))
(assert (= x1353 (x57 x48)))
(assert (=> (<= x595 10000) (= (x467 x595) (x389 x595))))
(assert (= (x332 x129) (ite (= x129 x1230) x898 (x1198 x129))))
(assert (= x1434 (x221 (x389 x1434))))
(assert (= x501 (x221 (x389 x501))))
(assert (= (or (and x151 (not x1366)) (and (not x1171) x1175) (and x9 x1153)) x1439))
(assert (x1120 x1498))
(assert (= (x389 2939843472) (x467 2939843472)))
(assert (= x454 (x221 (x389 x454))))
(assert (x1120 x253))
(assert (= (x71 x885) (ite (= x885 x831) x1406 (x252 x885))))
(assert (= (ite (and x619 x569) (x1435 x533) (x424 x533)) (x1509 x533)))
(assert (= x1086 true))
(assert (x1120 x1028))
(assert (=> (>= 10000 x319) (= (x467 x319) (x389 x319))))
(assert (= (x221 (x389 x179)) x179))
(assert (x292 x744))
(assert (= (ite (and x976 (not x53) x403 x1558 x450 x844) (x1460 x129) (ite (and x844 x1558 (not x403) x976 x450) (x332 x129) (ite (and (not x844) x976 x450 x1558) (x1198 x129) (ite (and x450 (not x976) x1558) (x214 x129) (x1409 x129))))) (x1514 x129)))
(assert (=> (>= 10000 x1333) (= (x389 x1333) (x467 x1333))))
(assert (=> (>= 10000 x762) (= (x467 x762) (x389 x762))))
(assert (= (x467 2418364589) (x389 2418364589)))
(assert (= (x221 (x467 2061678023)) 2061678023))
(assert (= x69 (x221 (x389 x69))))
(assert (x1120 x93))
(assert (x1120 x488))
(assert (= (x57 x643) (ite (= x48 x643) x1353 (x915 x643))))
(assert (x1120 x1091))
(assert (x1120 x225))
(assert (= (x123 x500) (ite (= x500 x421) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1161 x500))))
(assert (=> (>= 10000 x1322) (= (x389 x1322) (x467 x1322))))
(assert (x1120 x716))
(assert (x292 x1450))
(assert (=> (<= x1485 10000) (= (x467 x1485) (x389 x1485))))
(assert (x292 274184521717934524641157099916833587218))
(assert (= (ite (and x1558 (not x652) x450) (x1514 x500) (x1386 x500)) (x1257 x500)))
(assert (= x1037 (=> (and (not (= 2764855426 x481)) (= (x796 (x389 274184521717934524641157099916833587206)) x537) (not (> 2293535753 x481)) (> 2960351575 x481) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x116) (>= 1461501637330902918203684832716283019655932542975 x490) (= x1531 (x1276 (x389 x490) x1478 0)) (= x116 x1294) (not (< x481 2690754053)) (= (x720 x1531) x116) (>= x116 0) (not (= 2743102681 x481)) (= 2798343961 x481) (not (= x481 2690754053)) (= (x1276 (x389 x627) (x467 5) 0) x1478) (< 0 x537)) (=> (and (= x672 x1221) (= x1294 x241) (= x308 x234)) x1532))))
(assert (x1120 x101))
(assert (= (x1460 x540) (ite (= x540 x869) x964 (x332 x540))))
(assert (= (ite (and x569 (not x1010) x439 (not x309)) (x1312 x553) (ite (and (not x439) (not x309) x569) (x71 x553) (ite (and x309 x569) (x71 x553) (x1387 x553)))) (x954 x553)))
(assert (= (ite (and x515 x289) (x57 x48) (x1001 x48)) (x1157 x48)))
(assert (x1120 x60))
(assert (= (ite (and x409 x897) (x1137 x975) (ite (and x897 (not x409) x13) (x494 x975) (x1084 x975))) (x1484 x975)))
(assert (x1120 x10))
(assert (x1120 x234))
(assert (x1120 x708))
(assert (x1120 x1313))
(assert (=> (>= 10000 x1169) (= (x467 x1169) (x389 x1169))))
(assert (x1120 x426))
(assert (= x1100 (x221 (x389 x1100))))
(assert (= (ite (= x1230 x540) x898 (x1198 x540)) (x332 x540)))
(assert (= (x221 (x467 604800)) 604800))
(assert (= (x1077 x827) (ite (and x742 x226) (x1277 x827) (x1468 x827))))
(assert (= (and x1138 x1266) x1175))
(assert (x1120 x6))
(assert (= x329 (=> (and (= (x1527 x1068) x353) (<= 0 x353) (= x1249 (x560 1461501637330902918203684832716283019655932542975 x903)) (= x268 (x1276 (x389 x752) (x467 7) 0)) (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1276 (x389 x1249) x268 0) x62) (= x351 (x560 1461501637330902918203684832716283019655932542975 x347)) (= (x1276 (x389 x351) x62 0) x1068) (= x375 (= x353 0))) (and (=> x375 x924) (=> (and (= x1401 x752) (not x375)) x600)))))
(assert (= (x221 (x467 69947311)) 69947311))
(assert (x1120 x729))
(assert (=> (<= x856 10000) (= (x389 x856) (x467 x856))))
(assert (= x1169 (x221 (x389 x1169))))
(assert (= (x221 (x389 x1290)) x1290))
(assert (= (x221 (x389 x554)) x554))
(assert (x292 x677))
(assert (x1120 x246))
(assert (= x126 (=> (and (= x784 (x82 x767)) (<= x603 1461501637330902918203684832716283019655932542975) (= x767 (x1276 (x389 x603) x881 0)) (<= 0 x784) (< x210 2293535753) (= x630 (x796 (x389 274184521717934524641157099916833587206))) (> x630 0) (> 468353030 x210) (= (x1276 (x389 x117) (x467 10) 0) x881) (= x891 x784) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x784) (> 911411945 x210) (= x210 69947311)) (=> (and (= (and x379 x288) x1397) (= x433 x891) x998 (= x659 0) (= x1040 x308) (= (= x253 0) x738) (= x491 x300) (= x379 (= x233 0)) (= x415 x598) (= x233 x433) (= x912 (<= x415 x300)) (= x886 0) (= (= 0 x1172) x288) (= x998 (or (not x738) x1397)) (= 0 x137) x912 (= x1488 x1221) (= x91 x1172) (= x253 x598) (= x1205 x31)) x393))))
(assert (= (x1198 x512) (ite (= x1319 x512) x1246 (x214 x512))))
(assert (x1120 x308))
(assert (= (x221 (x389 x899)) x899))
(assert (= (x1157 x643) (ite (and x289 x515) (x57 x643) (x1001 x643))))
(assert (x1120 x773))
(assert (x1120 x896))
(assert (x1057 x118))
(assert (x1120 x869))
(assert (= (x1513 x1286) (ite (= x1286 x36) x315 (x8 x1286))))
(assert (x1120 x371))
(assert (x1120 x1176))
(assert (x1120 x758))
(assert (x1120 x688))
(assert (x1120 x89))
(assert (x292 x127))
(assert (=> (<= x994 10000) (= (x467 x994) (x389 x994))))
(assert (x1120 x725))
(assert (x1120 x506))
(assert (x1120 x139))
(assert (= (x221 (x389 x871)) x871))
(assert (= (ite (and x619 x569) (x1435 x237) (x424 x237)) (x1509 x237)))
(assert (= x557 (or (and x888 (not x294)) (and x911 x1330) (and (not x580) x1217))))
(assert (=> (<= x1568 10000) (= (x467 x1568) (x389 x1568))))
(assert (x1057 x434))
(assert (=> (<= x1239 10000) (= (x467 x1239) (x389 x1239))))
(assert (= (x1061 x399) (ite (= x399 x160) x1254 (x1067 x399))))
(assert (x1120 x162))
(assert (= (ite (= x382 x421) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1161 x382)) (x123 x382)))
(assert (x292 x39))
(assert (= (x221 (x389 x205)) x205))
(assert (x1120 x399))
(assert (x1120 x31))
(assert (= (x954 x512) (ite (and (not x1010) x439 (not x309) x569) (x1312 x512) (ite (and (not x309) (not x439) x569) (x71 x512) (ite (and x309 x569) (x71 x512) (x1387 x512))))))
(assert (= (x467 3123789364) (x389 3123789364)))
(assert (x1120 x425))
(assert (= (x221 (x389 x1176)) x1176))
(assert (= 142201243 (x221 (x467 142201243))))
(assert (x1120 x91))
(assert (= x38 (x221 (x389 x38))))
(assert (=> (<= x804 10000) (= (x389 x804) (x467 x804))))
(assert (= x924 (=> (and (= (> x635 0) x580) (= (x345 (- x752 1)) x635)) (and (=> (not x580) x394) (=> x580 x877)))))
(assert (x292 x758))
(assert (= 2293535753 (x221 (x467 2293535753))))
(assert (= (x1157 x355) (ite (and x515 x289) (x57 x355) (x1001 x355))))
(assert (x1120 x391))
(assert (x1120 x187))
(assert (= x1411 (x221 (x389 x1411))))
(assert (x1120 x331))
(assert (= (ite (and x673 x1166) (x297 x129) (x1299 x129)) (x538 x129)))
(assert (x502 x441 x513))
(assert (= (+ (x221 x468) 1) (x221 (x733 x468 1))))
(assert (x292 x695))
(assert (x1120 x1477))
(assert (=> (>= 10000 x1291) (= (x467 x1291) (x389 x1291))))
(assert (=> (>= 10000 x127) (= (x389 x127) (x467 x127))))
(assert (= (x1067 x908) (ite (= x1446 x908) x653 (x52 x908))))
(assert (x1120 x1085))
(assert (= x135 (and x673 (not x1166))))
(assert (=> (>= 10000 x871) (= (x467 x871) (x389 x871))))
(assert (x1120 x868))
(assert (x1120 x839))
(assert (= (ite (= x1446 x506) x653 (x52 x506)) (x1067 x506)))
(assert (= (ite (= x1446 x540) x653 (x52 x540)) (x1067 x540)))
(assert (x1120 x1571))
(assert (x1120 x185))
(assert (= x440 x289))
(assert (x292 x378))
(assert (x1120 x618))
(assert (= x1568 (x221 (x389 x1568))))
(assert (= x484 (=> (= x302 x676) x35)))
(assert (x1120 x749))
(assert (= (ite (= x497 x506) x999 (x71 x506)) (x1312 x506)))
(assert (= (x1061 x48) (ite (= x160 x48) x1254 (x1067 x48))))
(assert (x1120 x1196))
(assert (= x677 (x221 (x389 x677))))
(assert (x292 x1571))
(assert (x1120 x654))
(assert (x292 x1109))
(assert (x1057 x664))
(assert (x1120 x667))
(assert (= (x467 2514000705) (x389 2514000705)))
(assert (= (x221 (x389 x627)) x627))
(assert (= (x783 x851) 0))
(assert (= (x1067 x927) (ite (= x927 x1446) x653 (x52 x927))))
(assert (x1120 x1424))
(assert (= (x221 (x467 2835717307)) 2835717307))
(assert (x1120 x1249))
(assert (= x562 x1377))
(assert (x292 x501))
(assert (x1120 x511))
(assert (x292 x1290))
(assert (x1120 x339))
(assert (= (x1198 x129) (ite (= x129 x1319) x1246 (x214 x129))))
(assert (= x312 (x221 (x389 x312))))
(assert (= (x221 (x389 x1105)) x1105))
(assert (x1120 x1254))
(assert (= x860 (or x557 x1494)))
(assert (x292 x1526))
(assert (x292 x1177))
(assert (= (ite (= x553 x497) x999 (x71 x553)) (x1312 x553)))
(assert (x1120 x74))
(assert (x1120 x1321))
(assert (= (x214 x678) (ite (= x678 x1085) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x678))))
(assert (x1120 x370))
(assert (=> (>= 10000 x1195) (= (x467 x1195) (x389 x1195))))
(assert (x1120 x1344))
(assert (= (x389 2690754053) (x467 2690754053)))
(assert (x1120 x840))
(assert (x1120 x703))
(assert (x1120 x1127))
(assert (= (x221 (x389 x25)) x25))
(assert (x1120 x1264))
(assert (=> (>= 10000 x820) (= (x389 x820) (x467 x820))))
(assert (= (x1123 x349) (ite (= x349 x1286) x1114 (x732 x349))))
(assert (x1120 x1507))
(assert (x1120 x941))
(assert (x1120 x592))
(assert (x1120 x653))
(assert (x1120 x59))
(assert (=> (<= x1121 10000) (= (x389 x1121) (x467 x1121))))
(assert (x1120 x300))
(assert (x1120 x341))
(assert (= (ite (and x439 (not x1010) (not x309) x569) (x1312 x506) (ite (and (not x439) x569 (not x309)) (x71 x506) (ite (and x569 x309) (x71 x506) (x1387 x506)))) (x954 x506)))
(assert (x1120 x1512))
(assert (x1120 x537))
(assert (x1120 x1172))
(assert (= (ite (= x500 x48) x1353 (x915 x500)) (x57 x500)))
(assert (x1120 x1013))
(assert (=> (>= 10000 x1223) (= (x389 x1223) (x467 x1223))))
(assert (= (ite (= x512 x831) x1406 (x252 x512)) (x71 x512)))
(assert (x1120 x923))
(assert (= (x1484 x1280) (ite (and x409 x897) (x1137 x1280) (ite (and (not x409) x13 x897) (x494 x1280) (x1084 x1280)))))
(assert (x1120 x1227))
(assert (=> (>= 10000 x234) (= (x389 x234) (x467 x234))))
(assert (x1120 x706))
(assert (= x661 (x221 (x389 x661))))
(assert (= x626 (=> (and (= x605 (x560 1461501637330902918203684832716283019655932542975 x903)) (= x406 (x1484 x1375)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x406) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1523) (not (< x1523 x1567)) (= x1089 (> x406 0)) (>= x1523 0) (= x1364 (x560 1461501637330902918203684832716283019655932542975 x347)) (= (x1276 (x389 x1567) (x467 7) 0) x852) (>= x406 0) (= x1375 (x1276 (x389 x1364) x768 0)) (= (x1276 (x389 x605) x852 0) x768)) (and (=> (not x1089) x683) (=> (and (= x928 x1260) x1089 (= x707 0) (= (x560 1461501637330902918203684832716283019655932542975 x903) x1429) (>= x1260 0) (= x285 (x1276 (x389 x1429) x164 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1260) (= x1260 (x1549 x687)) (= (x560 1461501637330902918203684832716283019655932542975 x347) x1270) (= (x1276 (x389 x1567) (x467 9) 0) x164) (= (x1276 (x389 x1270) x285 0) x687)) x987)))))
(assert (x1120 x495))
(assert (=> (>= 10000 x39) (= (x389 x39) (x467 x39))))
(assert (= 274184521717934524641157099916833587218 (x221 (x389 274184521717934524641157099916833587218))))
(assert (= x789 (or (and (not x1151) x724) (and x24 (not x614)))))
(assert (x292 x1347))
(assert (= (ite (= x1230 x512) x898 (x1198 x512)) (x332 x512)))
(assert (x1120 x1049))
(assert (= (x57 x506) (ite (= x506 x48) x1353 (x915 x506))))
(assert (= (x221 (x467 2418364589)) 2418364589))
(assert (=> (<= x1237 10000) (= (x389 x1237) (x467 x1237))))
(assert (=> (>= 10000 x385) (= (x389 x385) (x467 x385))))
(assert (x1120 x415))
(assert (x1120 x1239))
(assert (x1120 x907))
(assert (x292 x688))
(assert (x1120 x107))
(assert (x1120 x1346))
(assert (= (=> (and (or (and (not x1472) (= x1291 (x560 1461501637330902918203684832716283019655932542975 x903)) (= (x1543 x318) x108) (= x108 x1332) (= x318 (x1276 (x389 x1450) x90 0)) (= 1 x246) (<= 0 x108) (= (x560 1461501637330902918203684832716283019655932542975 x347) x1450) (= (x1276 (x389 x1291) x487 0) x90) (<= x108 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x487 (x1276 (x389 x217) (x467 9) 0))) (and (= 0 x1332) (= 0 x246) x1472)) (= (= x217 0) x1472)) x1495) x698))
(assert (x1120 x1263))
(assert (= (x1257 x355) (ite (and (not x652) x450 x1558) (x1514 x355) (x1386 x355))))
(assert (x1120 x1506))
(assert (= (ite (= x1135 x1446) x653 (x52 x1135)) (x1067 x1135)))
(assert (x1120 x842))
(assert (x1120 x129))
(assert (= (x221 (x389 x688)) x688))
(assert (x1120 x210))
(assert (=> (<= x1249 10000) (= (x389 x1249) (x467 x1249))))
(assert (x1120 x183))
(assert (= (or (and (not x573) x793) (and x571 x1090) (and x1553 (not x579))) x1145))
(assert (= (ite (= x500 x160) x1254 (x1067 x500)) (x1061 x500)))
(assert (= (x221 (x389 x1520)) x1520))
(assert (x292 x1152))
(assert (= (ite (= x1085 x885) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x885)) (x214 x885)))
(assert (x292 274184521717934524641157099916833587206))
(assert (x1120 x948))
(assert (x1120 x1567))
(assert (= x1322 (x221 (x389 x1322))))
(assert (= (=> (and (= x1071 (= 0 x928)) (or (and (= x1448 x927) (= x621 (x1276 (x389 x454) x921 0)) x1071 (= x454 (x560 1461501637330902918203684832716283019655932542975 x347)) (= (x560 1461501637330902918203684832716283019655932542975 x903) x127) (= x921 (x1276 (x389 x127) x50 0)) (= x50 (x1276 (x389 x1567) (x467 7) 0))) (and (= (x560 1461501637330902918203684832716283019655932542975 x903) x18) (= x566 (x560 1461501637330902918203684832716283019655932542975 x347)) (or (and (= 0 x1255) (not x751)) (and x751 (= x935 (x1181 x422)) (= x1192 (> x491 x935)) (= x121 (= x520 0)) (or (and (= x491 x1244) (not x1192)) (and x1192 (= x511 (x1181 x422)) (= x511 x1244))) (or (and (= x1321 x1255) (= x1321 (ite (> 604800 x1552) x1552 604800)) (not x121) (= (x345 (- x1244 x520)) x1552) (= 604800 x230) (not (> x520 x1244))) (and (= x208 x1255) (not (> x730 x1244)) x121 (= (x1181 x1448) x730) (= (x345 (- x1244 x730)) x208))))) (= (x1268 x307) x1281) (= (x733 x1416 1) x307) (<= x1013 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= x1411 (x560 1461501637330902918203684832716283019655932542975 x903)) (= x1348 x927) (= x1470 (x560 1461501637330902918203684832716283019655932542975 x347)) x829 (= (x1276 (x389 x1411) x485 0) x1563) (= (x1276 (x389 x1567) (x467 7) 0) x485) (= x231 (x1276 (x389 x1470) x1563 0))) (and (= x1025 (x1276 (x389 x1567) (x467 3) 0)) (= x543 (x1276 (x389 x1179) x1508 0)) (= x519 (x560 1461501637330902918203684832716283019655932542975 x903)) (= x610 (x1276 (x389 x385) x866 0)) (= (* x1255 x928) x772) (= x927 x1348) (= x370 x772) (= (x1276 (x389 x1567) (x467 7) 0) x287) (= (x560 1461501637330902918203684832716283019655932542975 x347) x385) (= (x560 1461501637330902918203684832716283019655932542975 x347) x1179) (= (x560 1461501637330902918203684832716283019655932542975 x903) x804) (= x866 (x1276 (x389 x519) x287 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1255 x928)) (not x829) (= x1508 (x1276 (x389 x804) x1025 0)))) (<= 0 x1013) (= (> x1236 x520) x751) (= (x1276 (x389 x566) x324 0) x975) (= x1013 (x188 x1416)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1281) (= (x1276 (x389 x18) x524 0) x324) (= (x173 (+ x1410 128)) x1348) (= x1236 (x1181 x422)) (>= x520 0) (<= x520 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1281 0) (= (x173 (+ x1410 96)) x422) (= (x1484 x975) x520) (= (x1276 (x389 x1567) (x467 7) 0) x524) (= x829 (= x1255 0)) (not x1071) (= (x1276 (x389 x1567) (x467 1) 0) x1416))) (or (and (= (x560 1461501637330902918203684832716283019655932542975 x903) x486) (= x674 (x560 1461501637330902918203684832716283019655932542975 x347)) (= x1008 (x1276 (x389 x486) x1069 0)) (= (x1276 (x389 x1567) (x467 9) 0) x1069) (not x1300) (= (x1276 (x389 x674) x1008 0) x402)) x1300) (= x1300 (= x707 0))) x1441) x987))
(assert (x292 x554))
(assert (x1120 x235))
(assert (x1120 x908))
(assert (x1120 x1547))
(assert (x1120 x154))
(assert (= x269 (and x1553 x579)))
(assert (x1120 x1355))
(assert (x1120 x480))
(assert (= (ite (and x897 x409) (x1137 x280) (ite (and x897 (not x409) x13) (x494 x280) (x1084 x280))) (x1484 x280)))
(assert (x1120 x414))
(assert (= (=> (and (<= x319 1461501637330902918203684832716283019655932542975) (= x1072 (x1345 x812)) (> x298 0) (< x1129 2293535753) (= (x1276 (x389 x342) x945 0) x138) (> 911411945 x1129) (= (x1276 (x389 x183) (x467 9) 0) x945) (< x1129 468353030) (= x298 (x796 (x389 274184521717934524641157099916833587206))) (<= x1072 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x383 x1072) (>= x1072 0) (= (x1276 (x389 x319) x138 0) x812) (<= x342 1461501637330902918203684832716283019655932542975) (not (= x1129 69947311)) (= x1129 142201243) (not (= x1129 87118632))) (=> (and (= x383 x883) (= x1221 x814) (= x595 x1205) (= x521 x308)) x26)) x364))
(assert (x1120 x438))
(assert (x1120 x1270))
(assert (= (x1157 x506) (ite (and x289 x515) (x57 x506) (x1001 x506))))
(assert (= (ite (and x403 (not x53) x1558 x844 x976 x450) (x1460 x885) (ite (and (not x403) x1558 x844 x450 x976) (x332 x885) (ite (and x450 x976 x1558 (not x844)) (x1198 x885) (ite (and x1558 (not x976) x450) (x214 x885) (x1409 x885))))) (x1514 x885)))
(assert (=> (<= x669 10000) (= (x467 x669) (x389 x669))))
(assert (x1120 x1456))
(assert (= x1551 (=> (and (<= x1517 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 69947311 x939)) (> 468353030 x939) (= x1517 x189) (= x1466 (x796 (x389 274184521717934524641157099916833587206))) (<= x1333 1461501637330902918203684832716283019655932542975) (> 2293535753 x939) (= (x1276 (x389 x594) x992 0) x304) (>= 1461501637330902918203684832716283019655932542975 x594) (= x939 142201243) (< x939 911411945) (< 0 x1466) (= (x1276 (x389 x1333) x304 0) x170) (= x1517 (x1543 x170)) (not (= 87118632 x939)) (= x992 (x1276 (x389 x661) (x467 9) 0)) (>= x1517 0)) (=> (and (= x1474 x189) (= x308 x1483) (= x1205 x235) (= x1221 x1347)) x1487))))
(assert (= (x221 (x389 x876)) x876))
(assert (= (or (and x1153 (not x9)) (and x1438 (not x157))) x1454))
(assert (x1120 x1191))
(assert (x1120 x21))
(assert (=> (>= 10000 x286) (= (x467 x286) (x389 x286))))
(assert (x1120 x1303))
(assert (= (x221 (x389 x1571)) x1571))
(assert (x1120 x552))
(assert (x1120 x555))
(assert (x1120 x966))
(assert (= (ite (= x500 x869) x964 (x332 x500)) (x1460 x500)))
(assert (= (ite (= x988 x827) x1370 (x123 x827)) (x266 x827)))
(assert (= (ite (= x678 x497) x999 (x71 x678)) (x1312 x678)))
(assert (= x1177 (x221 (x389 x1177))))
(assert (= x1535 (=> (and (>= x498 0) (= (x1276 (x389 x752) (x467 6) 0) x106) (<= x1523 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1539 (= x498 0)) (not (< x1523 x962)) (= (x1276 (x389 x448) x106 0) x216) (<= x498 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1523) (= (x1562 x216) x498) (= x448 (x560 1461501637330902918203684832716283019655932542975 x903))) (and (=> x1539 x1449) (=> (and (= (x82 x181) x447) (= (x1276 (x389 x752) (x467 10) 0) x1206) (= x994 (x560 1461501637330902918203684832716283019655932542975 x903)) (= x181 (x1276 (x389 x994) x1206 0)) (not x1539) (<= 0 x447) (= 0 x896) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x447) (= x447 x1233)) x1361)))))
(assert (= x724 (and x142 x754)))
(assert (= x892 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1303) (= (x560 1461501637330902918203684832716283019655932542975 x903) x899) (= x272 (x1276 (x389 x899) x262 0)) (= (x1276 (x389 x752) (x467 6) 0) x262) (= x614 (= 0 x1303)) (= x1303 (x1562 x272)) (<= 0 x1303)) (and (=> (and (= x1547 x752) (not x614)) x503) (=> x614 x196)))))
(assert (x1057 x441))
(assert (x1120 x270))
(assert (= (x214 x827) (ite (= x1085 x827) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x827))))
(assert (x1120 x664))
(assert (x1120 x1236))
(assert (x1120 x194))
(assert (= (x221 (x389 x758)) x758))
(assert (= (ite (= x1230 x851) x898 (x1198 x851)) (x332 x851)))
(assert (= (=> (and (= x67 2532887486) (= x362 (x1276 (x389 x179) x1150 0)) (>= 1461501637330902918203684832716283019655932542975 x1237) (>= x1525 0) (= (x1276 (x389 x749) (x467 4) 0) x1150) (<= x153 1461501637330902918203684832716283019655932542975) (> 2690754053 x67) (= x1122 x1525) (= (x1282 x349) x1525) (not (= x67 2293535753)) (< x67 2960351575) (> x1355 0) (= x46 (x1276 (x389 x1237) x362 0)) (<= x179 1461501637330902918203684832716283019655932542975) (= (x1276 (x389 x153) x46 0) x349) (= (x796 (x389 274184521717934524641157099916833587206)) x1355) (not (< x67 2293535753)) (not (= x67 2418364589)) (not (= 2512682246 x67)) (<= x1525 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1269) x1301))
(assert (x1120 x1070))
(assert (= x263 (or (and x1365 x161) (and x226 x742))))
(assert (= (ite (= x497 x160) x999 (x71 x160)) (x1312 x160)))
(assert (x1120 x1122))
(assert (= (x954 x160) (ite (and (not x1010) x569 x439 (not x309)) (x1312 x160) (ite (and (not x439) x569 (not x309)) (x71 x160) (ite (and x309 x569) (x71 x160) (x1387 x160))))))
(assert (x1120 x116))
(assert (= x431 (x221 (x389 x431))))
(assert (= x669 (x221 (x389 x669))))
(assert (x1120 x1570))
(assert (=> (>= 10000 x889) (= (x389 x889) (x467 x889))))
(assert (x292 x889))
(assert (x1120 x1420))
(assert (= x1566 (x221 (x389 x1566))))
(assert (x1120 x752))
(assert (= (x783 x1135) 0))
(assert (x1120 x337))
(assert (x1120 x635))
(assert (= (x57 x497) (ite (= x497 x48) x1353 (x915 x497))))
(assert (x1120 x30))
(assert (x1120 x677))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x221 (x467 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= (x783 x355) 0))
(assert (x1120 x1048))
(assert (x1120 x1003))
(assert (= (and x1462 (not x102)) x655))
(assert (= (x221 (x389 x217)) x217))
(assert (x1120 x1316))
(assert (= x1195 (x221 (x389 x1195))))
(assert (=> (>= 10000 x217) (= (x467 x217) (x389 x217))))
(assert (= (x954 x1135) (ite (and x569 x439 (not x309) (not x1010)) (x1312 x1135) (ite (and (not x439) (not x309) x569) (x71 x1135) (ite (and x569 x309) (x71 x1135) (x1387 x1135))))))
(assert (= x1569 (x221 (x389 x1569))))
(assert (x1120 x500))
(assert (= (x467 26959946667150639794667015087019630673637144422540572481103610249215) (x389 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1120 x916))
(assert (= x488 (x221 (x389 x488))))
(assert (= (ite (= x349 x36) x315 (x8 x349)) (x1513 x349)))
(assert (x1120 x967))
(assert (=> (<= x1411 10000) (= (x467 x1411) (x389 x1411))))
(assert (x1057 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x292 x31))
(assert (x1120 x707))
(assert (x292 x119))
(assert (= (x1157 x540) (ite (and x289 x515) (x57 x540) (x1001 x540))))
(assert (= x450 (or (and x1015 x440) (and x1462 x102) x195)))
(assert (=> (<= x1570 10000) (= (x389 x1570) (x467 x1570))))
(assert (=> (>= 10000 x1270) (= (x389 x1270) (x467 x1270))))
(assert (= (x266 x1135) (ite (= x1135 x988) x1370 (x123 x1135))))
(assert (= x1153 (and x151 x1366)))
(assert (x1120 x1223))
(assert (= (ite (= x129 x1446) x653 (x52 x129)) (x1067 x129)))
(assert (= (x221 (x389 x385)) x385))
(assert (= x909 (and x440 (not x1015))))
(assert (x1120 x1482))
(assert (x1120 x1260))
(assert (= 2764855426 (x221 (x467 2764855426))))
(assert (x1120 x1216))
(assert (= (ite (= x553 x831) x1406 (x252 x553)) (x71 x553)))
(assert (=> (>= 10000 x312) (= (x389 x312) (x467 x312))))
(assert (x1120 x1310))
(assert (= x1184 (=> (and (= x81 x308) (= (< 0 (x796 (x389 274184521717934524641157099916833587218))) x585) (= x1170 (x134 (x389 274184521717934524641157099916833587218))) (= x376 false) (= x367 false) x746 (>= x1205 0) (<= 0 x937) (= false x472) (>= x308 0) (= x275 false) (= x937 x98) (>= x1111 0) x155 (= x790 x1111) (>= 1461501637330902918203684832716283019655932542975 x949) (= x746 (< 0 (x796 (x389 274184521717934524641157099916833587206)))) (>= 1461501637330902918203684832716283019655932542975 x1205) (= x1052 (x134 (x389 274184521717934524641157099916833587214))) (>= 1461501637330902918203684832716283019655932542975 x1111) (>= x949 0) (= x1221 x1177) (>= x1023 0) (<= 0 x1170) (= 5 x622) x585 (<= x937 1461501637330902918203684832716283019655932542975) (= (x134 (x389 274184521717934524641157099916833587206)) x1023) (<= x308 1461501637330902918203684832716283019655932542975) (= (< 0 (x796 (x389 274184521717934524641157099916833587214))) x155) (>= x1052 0) (= 2939843472 x509)) x1045)))
(assert (x1120 x1197))
(assert (= (x1514 x43) (ite (and x844 (not x53) x976 x450 x1558 x403) (x1460 x43) (ite (and x976 x450 (not x403) x844 x1558) (x332 x43) (ite (and x450 x976 x1558 (not x844)) (x1198 x43) (ite (and (not x976) x1558 x450) (x214 x43) (x1409 x43)))))))
(assert (x1120 x704))
(assert (x1120 x104))
(assert (x1120 x1488))
(assert (x1120 x325))
(assert (x1120 x669))
(assert (x1120 x1380))
(assert (x1120 x333))
(assert (x1120 x305))
(assert (= x794 x42))
(assert (= (ite (and x515 x289) (x57 x129) (x1001 x129)) (x1157 x129)))
(assert (= (ite (= x678 x160) x1254 (x1067 x678)) (x1061 x678)))
(assert (= (ite (= x678 x1446) x653 (x52 x678)) (x1067 x678)))
(assert (x1120 x1457))
(assert (x292 x1216))
(assert (=> (<= x428 10000) (= (x389 x428) (x467 x428))))
(assert (=> (>= 10000 x18) (= (x467 x18) (x389 x18))))
(assert (x1120 x1102))
(assert (x1120 x1561))
(assert (= x1364 (x221 (x389 x1364))))
(assert (x1120 x935))
(assert (=> (<= x1566 10000) (= (x467 x1566) (x389 x1566))))
(assert (x1120 x251))
(assert (x1120 x541))
(assert (x1120 x1021))
(assert (x1120 x928))
(assert (x1120 x1550))
(assert (= (x783 x540) 0))
(assert (x1120 x846))
(assert (x1120 x1169))
(assert (= (x1514 x540) (ite (and x976 x844 (not x53) x1558 x403 x450) (x1460 x540) (ite (and (not x403) x450 x976 x1558 x844) (x332 x540) (ite (and (not x844) x450 x976 x1558) (x1198 x540) (ite (and x1558 (not x976) x450) (x214 x540) (x1409 x540)))))))
(assert (=> (<= x914 10000) (= (x467 x914) (x389 x914))))
(assert (=> (>= 10000 x1369) (= (x389 x1369) (x467 x1369))))
(assert (x292 x234))
(assert (= (=> (and (= x84 (< x83 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= 274184521717934524641157099916833587218 x1485) x1166) x317 x628 (= (x134 (x389 274184521717934524641157099916833587206)) x983) (= x83 (x134 (x389 x1485))) x84 (= x690 (x1055 (x389 x1485))) (= x628 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1055 (x389 x1485)))) (= x317 (<= 0 x983)) (= (x134 (x389 274184521717934524641157099916833587206)) x1518) (= x59 x965)) (and (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1274) (= x1504 (> x1482 x107)) (not (= 649617121 x1039)) (>= x1274 0) (not (= 2514000705 x1039)) (= x80 x1482) (= x588 x1274) (= (x1276 (x389 x366) (x467 1) 0) x1542) (= (x1276 (x389 274184521717934524641157099916833587206) (x467 1) 0) x327) (= x925 x59) (= x1022 x80) (not x1504) (= x518 (x796 (x389 274184521717934524641157099916833587218))) (= x649 x17) (not x1032) (not (= x1039 826074471)) (= x1032 (or (and (< x805 64) (= (<= x805 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x805 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1276 (x389 x366) (x467 1) 0) x207) (= x961 32) (= 1 x1459) (not x37) (= (>= (+ x80 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x334) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x508) (= x925 68) (= x419 (x345 (- x107 x1482))) x1166 (>= x107 0) (= x366 x830) (< (+ x1274 x80) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x15 274184521717934524641157099916833587206) (= 2835717307 x1039) (= x769 (x1276 (x389 274184521717934524641157099916833587206) (x467 1) 0)) (not (= x1039 1889567281)) (= (> x80 x107) x37) (<= x366 1461501637330902918203684832716283019655932542975) (= (x345 (- x925 4)) x805) (> x518 0) (not (< x925 4)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x107) (= (+ x588 x1022) x423) (= 274184521717934524641157099916833587206 x853) (= (x902 x769) x107) (= x1274 (x360 x1542)) (not x334) (= x366 x1507) (not (> 649617121 x1039)) (= x1482 x474)) x934) (=> (not x1166) x1101))) x736))
(assert (=> (>= 10000 x674) (= (x467 x674) (x389 x674))))
(assert (x1120 x827))
(assert (=> (>= 10000 x1179) (= (x389 x1179) (x467 x1179))))
(assert (x1120 x1004))
(assert (=> (>= 10000 x310) (= (x389 x310) (x467 x310))))
(assert (=> (<= x295 10000) (= (x389 x295) (x467 x295))))
(assert (x1120 x1523))
(assert (x502 x347 x1115))
(assert (= x1291 (x221 (x389 x1291))))
(assert (x1120 x952))
(assert (x292 x1121))
(assert (= (ite (= x1319 x506) x1246 (x214 x506)) (x1198 x506)))
(assert (= (x538 x908) (ite (and x673 x1166) (x297 x908) (x1299 x908))))
(assert (x1120 x444))
(assert (x502 x903 x435))
(assert (x1120 x1442))
(assert (x1120 x605))
(assert (x1120 x843))
(assert (x1120 x477))
(assert (= (or x860 (and x321 x909)) x897))
(assert (x1120 x802))
(assert (=> (<= x1347 10000) (= (x389 x1347) (x467 x1347))))
(assert (= (ite (= x827 x831) x1406 (x252 x827)) (x71 x827)))
(assert (x1120 x1525))
(assert (x1120 x1126))
(assert (= (ite (and x289 x515) (x57 x908) (x1001 x908)) (x1157 x908)))
(assert (= (ite (and x844 x1558 (not x53) x403 x450 x976) (x1460 x908) (ite (and x976 (not x403) x844 x1558 x450) (x332 x908) (ite (and (not x844) x976 x1558 x450) (x1198 x908) (ite (and x450 x1558 (not x976)) (x214 x908) (x1409 x908))))) (x1514 x908)))
(assert (= (x1513 x1464) (ite (= x1464 x36) x315 (x8 x1464))))
(assert (= (x221 (x467 649617121)) 649617121))
(assert (x1120 x964))
(assert (x1120 x1536))
(assert (= (x389 2512682246) (x467 2512682246)))
(assert (= (x467 274184521717934524641157099916833587218) (x389 274184521717934524641157099916833587218)))
(assert (= (x221 (x389 x1027)) x1027))
(assert (= (x221 (x389 x34)) x34))
(assert (x292 x914))
(assert (x292 x994))
(assert (= 0 (x783 x506)))
(assert (x1120 x825))
(assert (= (x123 x908) (ite (= x421 x908) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1161 x908))))
(assert (= (x467 1461501637330902918203684832716283019655932542975) (x389 1461501637330902918203684832716283019655932542975)))
(assert (= (ite (and x409 x897) (x665 x213) (ite (and x13 (not x409) x897) (x665 x213) (x1398 x213))) (x115 x213)))
(assert (= (=> (and (= x556 (= x162 0)) (or (and (or (and (not x1033) (= 1 x896) (= x1233 x1346)) (and (= 0 x1233) (= 0 x896) x1033)) (>= x1346 0) (<= x1346 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x1346) x1033) (= x346 (x1276 (x389 x278) x4 0)) (= (x82 x346) x1346) (= x4 (x1276 (x389 x162) (x467 10) 0)) (= (x560 1461501637330902918203684832716283019655932542975 x903) x278) (not x556)) (and (= 0 x896) (= 0 x1233) x556))) x1361) x368))
(assert (x1120 x256))
(assert (x1120 x78))
(assert (x1120 x922))
(assert (= (x221 (x467 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (= x1271 x1267))
(assert (x1120 x1006))
(assert (= x782 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x839) (= x1160 (x560 1461501637330902918203684832716283019655932542975 x903)) (<= 0 x839) (= (x1484 x280) x839) (= (= x839 0) x1090) (= x326 (x560 1461501637330902918203684832716283019655932542975 x347)) (= (x1276 (x389 x326) x28 0) x280) (= (x1276 (x389 x286) (x467 7) 0) x1427) (= x28 (x1276 (x389 x1160) x1427 0))) (and (=> (and (= x676 x286) (not x1090)) x484) (=> (and (= x1420 (x345 (- x286 1))) x1090 (= x166 (> x1420 0)) (not x166)) x11)))))
(assert (= (x467 1986467848) (x389 1986467848)))
(assert (= (x221 (x389 x566)) x566))
(assert (=> (<= x125 10000) (= (x467 x125) (x389 x125))))
(assert (= (ite (and x515 x289) (x57 x399) (x1001 x399)) (x1157 x399)))
(assert (= true x1131))
(assert (x1120 x1429))
(assert (=> (>= 10000 x1105) (= (x389 x1105) (x467 x1105))))
(assert (= (x221 (x389 x1445)) x1445))
(assert (x1120 x528))
(assert (= (x221 (x389 x880)) x880))
(assert (x1120 x1517))
(assert (= x136 (x221 (x389 x136))))
(assert (= (x732 x349) (ite (and x569 x439 (not x1010) (not x309)) (x1513 x349) (ite (and (not x309) (not x439) x569) (x8 x349) (ite (and x309 x569) (x8 x349) (x72 x349))))))
(assert (= (x1123 x1502) (ite (= x1502 x1286) x1114 (x732 x1502))))
(assert (x1120 x1023))
(assert (= (x1061 x851) (ite (= x160 x851) x1254 (x1067 x851))))
(assert (x1120 x244))
(assert (= x814 (x221 (x389 x814))))
(assert (= (ite (and (not x1010) (not x309) x569 x439) (x1513 x114) (ite (and x569 (not x309) (not x439)) (x8 x114) (ite (and x309 x569) (x8 x114) (x72 x114)))) (x732 x114)))
(assert (x1120 x1074))
(assert (x1120 x197))
(assert (x1120 x191))
(assert (= x394 (=> (= x217 0) x698)))
(assert (= (ite (= x908 x763) x290 (x266 x908)) (x257 x908)))
(assert (= (x1549 x812) (ite (and x445 x897) (x1543 x812) (x1491 x812))))
(assert (x1120 x1322))
(assert (=> (<= x448 10000) (= (x389 x448) (x467 x448))))
(assert (= x1521 (x221 (x389 x1521))))
(assert (x1120 x385))
(assert (= (x1067 x512) (ite (= x1446 x512) x653 (x52 x512))))
(assert (x1120 x12))
(assert (=> (<= x661 10000) (= (x389 x661) (x467 x661))))
(assert (= (x221 (x467 1986467848)) 1986467848))
(assert (= (ite (= x36 x645) x315 (x8 x645)) (x1513 x645)))
(assert (x1120 x776))
(assert (x1120 x486))
(assert (x1120 x86))
(assert (= (ite (= x1018 x36) x315 (x8 x1018)) (x1513 x1018)))
(assert (x1120 x1238))
(assert (= (x221 (x389 x490)) x490))
(assert (x1120 x590))
(assert (x1120 x1297))
(assert (=> (>= 10000 x366) (= (x389 x366) (x467 x366))))
(assert (= (x221 (x389 x1310)) x1310))
(assert (x292 x722))
(assert (= (and x614 x24) x142))
(assert (x1120 x853))
(assert (x292 x669))
(assert (= (x389 2061678023) (x467 2061678023)))
(assert (= (x697 x355) (ite (and x323 (not x728) x1306 x471 x794 x1390) (x1541 x355) (ite (and x1390 x794 x323 (not x1306) x471) (x257 x355) (ite (and x323 x471 (not x1390) x794) (x266 x355) (ite (and (not x323) x471 x794) (x123 x355) (x1207 x355)))))))
(assert (x1120 x508))
(assert (= (or (and (not x786) x985) (and (not x754) x142) (and x1151 x724)) x823))
(assert (x292 x366))
(assert (x1120 x1294))
(assert (= (x221 (x389 x667)) x667))
(assert (= x1357 (or (and x571 (not x1090)) (and x269 (not x1358)))))
(assert (= (x71 x908) (ite (= x908 x831) x1406 (x252 x908))))
(assert (=> (<= x566 10000) (= (x389 x566) (x467 x566))))
(assert (x292 x814))
(assert (= (ite (= x1446 x48) x653 (x52 x48)) (x1067 x48)))
(assert (x292 x1364))
(assert (x1120 x64))
(assert (= (x467 2532887486) (x389 2532887486)))
(assert (= (x221 (x389 x1270)) x1270))
(assert (=> (>= 10000 x635) (= (x467 x635) (x389 x635))))
(assert (= (x1257 x540) (ite (and (not x652) x450 x1558) (x1514 x540) (x1386 x540))))
(assert (= (ite (and x673 x1166) (x297 x355) (x1299 x355)) (x538 x355)))
(assert (= (x221 (x389 x820)) x820))
(assert (= x1092 (x221 (x389 x1092))))
(assert (x1120 x627))
(assert (x1120 x611))
(assert (x1120 x481))
(assert (= (x221 (x389 x127)) x127))
(assert (= (x783 x926) 0))
(assert (x1120 x179))
(assert (= (=> (and (not (= x1262 2293535753)) (= (x8 x710) x1203) (not (= x1262 2512682246)) (> 2690754053 x1262) (> 2960351575 x1262) (>= x1203 0) (= x1550 x1203) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1203) (= x938 (x1276 (x389 x876) x931 0)) (<= x1341 1461501637330902918203684832716283019655932542975) (not (< x1262 2293535753)) (not (= 2418364589 x1262)) (= x104 (x796 (x389 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x1199) (= x1444 (x1276 (x389 x1199) x938 0)) (= (x1276 (x389 x1341) x1444 0) x710) (= x931 (x1276 (x389 x1092) (x467 4) 0)) (<= x876 1461501637330902918203684832716283019655932542975) (= 2532887486 x1262) (< 0 x104)) (=> (and (> x1002 0) (= x436 0) (= true (<= x832 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x245 (> x1536 0)) (= x282 x1028) (= (and x1148 x1140) x1413) (<= x209 1461501637330902918203684832716283019655932542975) (= x94 x662) (not (> x1353 18446744073709551615)) (>= x1523 0) (= x1550 x282) (not (> 4 x832)) (> x1523 x293) (= x293 x251) (= (x446 x1311) x1353) (= x668 (x915 128)) (not (= x311 2690754053)) (< x311 2960351575) (>= 1461501637330902918203684832716283019655932542975 x347) (= (x173 (+ x780 36)) x943) (= (x345 (- x832 4)) x1313) (not (= x311 2764855426)) (= x51 x293) (<= x903 1461501637330902918203684832716283019655932542975) (not (< 18446744073709551615 x584)) (not (or (> x1313 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1313) true) (< x1313 160)))) (= 0 x187) (= (or (not x873) x953) x1564) (= x347 x1278) (not (> x1036 x832)) (>= x1144 0) (= x1148 (= x425 0)) (= (x173 (+ 4 x780)) x1311) (= x801 128) (= x94 0) (= x1214 x347) (< 163 x832) (= x515 (= 0 x1353)) (= (= x1356 0) x1140) (= x54 x903) (= x723 x491) x1564 (<= 0 x209) (= (x173 (+ x48 x1124)) x303) (>= x916 0) (not (> 2293535753 x311)) (>= 1461501637330902918203684832716283019655932542975 x916) (= (= 0 x1028) x835) (not (= x311 2868243304)) (= (mod (* 32 x1353) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x392) (= x1124 (x173 (+ 32 x380))) (or (and (= (mod (* 32 x1353) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x681) (not x515) (= x414 (x173 (+ 160 x857)))) x515) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1006) (<= x832 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x832 x1006)) (and (<= x832 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1006))) (= 0 x314) (= x759 (x173 (+ 160 x380))) (= (<= x1382 x478) x430) (= x478 x491) (<= x1523 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1186 x592) (= x857 (x173 (+ 32 x1050))) (= x1498 x903) (= 2939843472 x311) (= x48 (x173 (+ 160 x1050))) (= x780 x584) (= (mod (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x380) (not (> 2690754053 x311)) x430 (= x1356 x1474) (<= x1144 1461501637330902918203684832716283019655932542975) (not (= x311 2798343961)) (not (= 2743102681 x311)) (= x790 x1144) (= x1002 (x796 (x389 274184521717934524641157099916833587206))) (= x12 x752) (= x632 x425) (= x209 x1314) (= x752 x962) (not (> 1 x668)) (= 0 x1091) (= (= x592 0) x873) (or (not x245) (and (not (> 1 x668)) (not (> x225 1)) (= (x345 (- x668 1)) x225) x245 (= x361 (< 1 x668)) (or (not x361) (and (= (x915 128) x73) (= (x560 1461501637330902918203684832716283019655932542975 x413) x634) (not (= x191 x634)) (or (not x680) (and (= (x560 1461501637330902918203684832716283019655932542975 x434) x23) (= x809 (> x668 3)) (= x802 (x915 128)) (not (= x704 x23)) (= x139 (x915 128)) (> x802 2) x680 (= x704 (x560 1461501637330902918203684832716283019655932542975 x441)) (> x139 0) (= (x915 224) x434) (not x809) (= (x915 160) x441))) (= x664 (x915 192)) (= x680 (< 2 x668)) (< 0 x73) (> x718 1) (= x413 (x915 160)) x361 (= x718 (x915 128)) (= x191 (x560 1461501637330902918203684832716283019655932542975 x664)))))) (= (x345 (- x668 1)) x1536) (= x1006 (x173 (+ x780 35))) (= x1382 x1186) (= x1050 (mod (* x1353 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1314 x14) (= x1036 (x173 (+ x943 x392))) (= x953 (and x1413 x835)) (not (> x752 x293))) x227)) x496))
(assert (x1120 x38))
(assert (= (x221 (x467 2960351575)) 2960351575))
(assert (x1120 x1470))
(assert (x1120 x1246))
(assert (= (x221 (x389 x1042)) x1042))
(assert (x1120 x854))
(assert (x1120 x67))
(assert (x1120 x1566))
(assert (x1120 x39))
(assert (= (x1484 x128) (ite (and x897 x409) (x1137 x128) (ite (and x13 x897 (not x409)) (x494 x128) (x1084 x128)))))
(assert (x1120 x616))
(assert (= (ite (and x673 x1166) (x297 x43) (x1299 x43)) (x538 x43)))
(assert (= (x467 2258409472) (x389 2258409472)))
(assert (x1120 x1396))
(assert (= (x1067 x851) (ite (= x1446 x851) x653 (x52 x851))))
(assert (= (x71 x540) (ite (= x540 x831) x1406 (x252 x540))))
(assert (= 0 (x783 224)))
(assert (x1120 x85))
(assert (x1120 x526))
(assert (x1120 x1076))
(assert (= x874 x755))
(assert (x1120 x1121))
(assert (= x594 (x221 (x389 x594))))
(assert (= (x221 (x389 x721)) x721))
(assert (=> (<= x646 10000) (= (x467 x646) (x389 x646))))
(assert (= x235 (x221 (x389 x235))))
(assert (= x310 (x221 (x389 x310))))
(assert (= (x389 2743102681) (x467 2743102681)))
(assert (=> (>= 10000 x486) (= (x389 x486) (x467 x486))))
(assert (= (x467 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x389 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1120 x1259))
(assert (x1120 x831))
(assert (= (x221 (x389 x1059)) x1059))
(assert (= (ite (= x1319 x885) x1246 (x214 x885)) (x1198 x885)))
(assert (=> (<= x627 10000) (= (x467 x627) (x389 x627))))
(assert (x1120 x239))
(assert (=> (>= 10000 x25) (= (x389 x25) (x467 x25))))
(assert (x1078 x1228 x803 x453 x365))
(assert (x1120 x639))
(assert (x1120 x1040))
(assert (x1120 x962))
(assert (x292 x125))
(assert (x1120 x676))
(assert (x292 x351))
(assert (x1120 x864))
(assert (= x18 (x221 (x389 x18))))
(assert (x1120 x871))
(assert (x292 x86))
(assert (= (ite (and (not x53) x844 x976 x450 x403 x1558) (x1460 x512) (ite (and x450 x1558 x976 x844 (not x403)) (x332 x512) (ite (and x976 (not x844) x1558 x450) (x1198 x512) (ite (and (not x976) x450 x1558) (x214 x512) (x1409 x512))))) (x1514 x512)))
(assert (=> (>= 10000 x876) (= (x467 x876) (x389 x876))))
(assert (x1120 x1369))
(assert (x1120 x722))
(assert (x1120 x1485))
(assert (= (x221 (x389 x815)) x815))
(assert (=> (<= x672 10000) (= (x389 x672) (x467 x672))))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x221 (x467 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x1120 x401))
(assert (= (x1157 x160) (ite (and x515 x289) (x57 x160) (x1001 x160))))
(assert (= (ite (= x497 x908) x999 (x71 x908)) (x1312 x908)))
(assert (= 2211524764 (x221 (x467 2211524764))))
(assert (x1120 x813))
(assert (= (=> (= x294 (> x752 0)) (and (=> x294 x329) (=> (not x294) x394))) x841))
(assert (= (x221 (x389 x519)) x519))
(assert (x292 x486))
(assert (x1120 x805))
(assert (= x448 (x221 (x389 x448))))
(assert (= (=> (and (= x1105 (x345 (- x1567 1))) (= (< 0 x1105) x1366)) (and (=> (not x1366) x132) (=> x1366 x1389))) x1317))
(assert (x292 x1042))
(assert (x1120 x986))
(assert (x1120 x1311))
(assert (= (x1513 x1502) (ite (= x1502 x36) x315 (x8 x1502))))
(assert (x292 x505))
(assert (x1120 x1314))
(assert (=> (<= x342 10000) (= (x467 x342) (x389 x342))))
(assert (= (=> (and (= (x560 1461501637330902918203684832716283019655932542975 x903) x1147) (= x1210 (x1276 (x389 x773) x192 0)) (<= 0 x1074) (= (x1276 (x389 x1567) (x467 3) 0) x192) (<= x653 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x173 (+ 64 x927)) x232) (<= 0 x725) (or (and (not x100) (= (x1276 (x389 x1567) (x467 6) 0) x1463) (= x960 (x1276 (x389 x1567) (x467 5) 0)) (= x1155 (x1276 (x389 x205) x1463 0)) (= x1208 (* x1102 x391)) (< (* x1102 x391) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x583 (x1276 (x389 x646) x960 0)) (= (x560 1461501637330902918203684832716283019655932542975 x903) x646) (= x1208 x1298) (= (x560 1461501637330902918203684832716283019655932542975 x903) x205)) (and (= x25 (x560 1461501637330902918203684832716283019655932542975 x903)) (= (x1276 (x389 x1567) (x467 6) 0) x374) (= x1275 (x1276 (x389 x25) x374 0)) x100)) (>= x190 0) (= (< x337 x1442) x743) (or x651 (and (= (x1276 (x389 x758) x66 0) x558) (= x66 (x1276 (x389 x1567) (x467 10) 0)) (not x651) (= (x560 1461501637330902918203684832716283019655932542975 x903) x758))) (= x468 (x1276 (x389 x1567) (x467 1) 0)) (= (= x1102 0) x100) (= (x1276 (x389 x1147) x418 0) x237) (= x1475 (x1276 (x389 x1567) (x467 5) 0)) (= (x173 (+ 32 x927)) x1446) (= x222 (= 0 x190)) (= (= x859 0) x651) (= (x1268 x1404) x653) (< x51 x639) (= x1442 (x1067 x1446)) (= (x1276 (x389 x1059) x1475 0) x956) (= (x188 x468) x1074) (<= x337 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x725) (= (x1276 (x389 x957) x1210 0) x206) (= x639 (x173 (+ 2 x752))) (= (x560 1461501637330902918203684832716283019655932542975 x903) x1059) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1567)) (<= x1074 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x232 x1264) (= x418 (x1276 (x389 x1567) (x467 6) 0)) (<= x190 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x560 1461501637330902918203684832716283019655932542975 x347) x957) (= x725 (x689 x956)) (or x222 (and (= (mod (* 1000000000000000000 x190) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x840) (or (not x469) (and (= x76 x1512) (> x1353 0) (< (+ x1457 x1512) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1239 (x560 1461501637330902918203684832716283019655932542975 x347)) (= (x732 x114) x1185) (<= x984 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x900 x943) (= x119 (x446 x900)) (= x49 (x732 x1286)) (>= 1461501637330902918203684832716283019655932542975 x1359) (= x1 (x1276 (x389 x1567) (x467 4) 0)) (= (x1276 (x389 x1359) x887 0) x1016) (= (x1276 (x389 x1567) (x467 11) 0) x1104) (> x1353 0) (>= x984 0) (= (x560 1461501637330902918203684832716283019655932542975 x903) x1571) (= (* x766 x984) x358) (<= 0 x49) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185) (< 0 x727) (= x880 (x560 1461501637330902918203684832716283019655932542975 x903)) (= (x560 1461501637330902918203684832716283019655932542975 x903) x1500) (or (not x1479) (and (>= x706 0) (< 1 x1353) (= x721 (x446 x470)) (<= x86 1461501637330902918203684832716283019655932542975) (<= 0 x1095) (= x452 (x446 x470)) (= x775 (x1276 (x389 x1567) (x467 11) 0)) (= x536 (x1276 (x389 x1567) (x467 4) 0)) (> x1530 1) (= (x1276 (x389 x86) x631 0) x1018) (> x1353 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x529 x185)) (= x631 (x1276 (x389 x505) x837 0)) (= x40 (x1276 (x389 x452) x1224 0)) (= x1400 (+ x1402 x970)) (= x774 (x1276 (x389 x125) x1559 0)) (= (x560 1461501637330902918203684832716283019655932542975 x903) x1223) (= x644 (< 2 x1353)) (= (x560 1461501637330902918203684832716283019655932542975 x903) x1042) (not x644) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x706) (= x1559 (x1276 (x389 x1567) (x467 4) 0)) (= 0 x1095) (= (x560 1461501637330902918203684832716283019655932542975 x347) x505) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x238) (= (x1123 x1018) x238) (>= 1461501637330902918203684832716283019655932542975 x721) (= x1062 (x1276 (x389 x1027) x774 0)) x1479 (>= x238 0) (= (x1276 (x389 x1042) x536 0) x837) (<= x452 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1095) (= x185 (div x249 1000000000000000000)) (= (x1061 x48) x1530) (< (* x766 x706) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x249 (* x766 x706)) (= (x560 1461501637330902918203684832716283019655932542975 x347) x1027) (= (x1276 (x389 x721) x1062 0) x1502) (= x86 (x446 x470)) (= (x363 x40) x706) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x190 x238)) (= (x1123 x1502) x1095) (= (x560 1461501637330902918203684832716283019655932542975 x903) x125) (= x238 x1402) (= x1224 (x1276 (x389 x1223) x775 0)) (= x328 x185) (= x529 x753) (= x970 x190) (= (x1061 x399) x529) (> x1353 1) (= (x173 (+ 192 x857)) x399) (= x1480 (+ x328 x753)) (= x470 (x173 (+ x1311 64))))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x984 x766)) (= (x1067 x48) x727) (= x152 (x1276 (x389 x1571) x1 0)) (= 0 x1185) (<= x136 1461501637330902918203684832716283019655932542975) (= (x1276 (x389 x880) x1104 0) x887) (= (div x358 1000000000000000000) x1457) (= (x1067 x160) x1512) (= (+ x599 x463) x1114) (= x1479 (> x1353 1)) (= x1359 (x446 x900)) (< (+ x190 x49) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x136 (x446 x900)) (= x1457 x1103) (= x247 (x1276 (x389 x986) x1476 0)) (= (x1276 (x389 x1500) x1164 0) x1476) (>= x1185 0) (= x463 x190) (= x1254 (+ x1103 x76)) (< 0 x1353) (= (x1276 (x389 x1239) x152 0) x1492) (= x1286 (x1276 (x389 x136) x1492 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x49) x469 (= x984 (x363 x1016)) (= x599 x49) (>= 1461501637330902918203684832716283019655932542975 x119) (= x114 (x1276 (x389 x119) x247 0)) (= x160 (x173 (+ 160 x857))) (= (x560 1461501637330902918203684832716283019655932542975 x347) x986) (= x1164 (x1276 (x389 x1567) (x467 4) 0)))) (< 0 x725) (= x766 (div x840 x725)) (= x559 (x560 x118 x156)) (not x222) (= 1 x118) (= 0 x559) (= x469 (< 0 x1353)) (= (ite (< 115792089237316195423570985008687907853269984665640564039457 x190) 1 0) x156))) (= (x733 x468 1) x1404) (= x190 (x1379 x206)) (= (x560 1461501637330902918203684832716283019655932542975 x903) x773) (= x337 (x1509 x237)) (<= 0 x653) (or (and (= x1102 0) (not x743)) (and (= x356 (> x491 x1136)) (or (and (= x1031 x491) (not x356)) (and x356 (= (x1067 x1446) x590) (= x1031 x590))) (= x1136 (x1067 x1446)) (or (and (= x1020 (x345 (- x1031 x337))) (= x444 604800) (not x942) (not (< x1031 x337)) (= x1102 x194) (= (ite (< x1020 604800) x1020 604800) x194)) (and (= (x345 (- x1031 x541)) x757) x942 (= x757 x1102) (not (< x1031 x541)) (= x541 (x1067 x927)))) x743 (= (= x337 0) x942))) (>= x337 0)) x133) x1056))
(assert (= (ite (= x827 x763) x290 (x266 x827)) (x257 x827)))
(assert (x1120 x763))
(assert (= (x57 x827) (ite (= x48 x827) x1353 (x915 x827))))
(assert (= (x1157 x500) (ite (and x515 x289) (x57 x500) (x1001 x500))))
(assert (=> (>= 10000 x624) (= (x389 x624) (x467 x624))))
(assert (= x914 (x221 (x389 x914))))
(assert (= x929 (=> (and (= x686 (x796 (x389 274184521717934524641157099916833587206))) (= (x982 x313) x952) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x952) (not (= 2061678023 x734)) (>= 1461501637330902918203684832716283019655932542975 x1372) (<= 0 x952) (= (x1276 (x389 x1372) x787 0) x313) (= x341 x952) (= (x1276 (x389 x87) (x467 6) 0) x787) (not (= 1986467848 x734)) (< 0 x686) (> 2293535753 x734) (not (= x734 1968616202)) (not (= x734 2211524764)) (= 2258409472 x734) (not (> 911411945 x734)) (not (> 1968616202 x734))) (=> (and (= x627 x1221) (= x333 x341) (= x490 x308)) x1037))))
(assert (= 635128645 (x221 (x467 635128645))))
(assert (x1120 x784))
(assert (=> (<= x603 10000) (= (x467 x603) (x389 x603))))
(assert (x292 x286))
(assert (=> (>= 10000 x721) (= (x389 x721) (x467 x721))))
(assert (=> (>= 10000 x153) (= (x389 x153) (x467 x153))))
(assert (x1120 x1353))
(assert (= (x332 x885) (ite (= x1230 x885) x898 (x1198 x885))))
(assert (x1120 x903))
(assert (= (x332 x827) (ite (= x827 x1230) x898 (x1198 x827))))
(assert (x1120 x1500))
(assert (= 911411945 (x221 (x467 911411945))))
(assert (x1120 x119))
(assert (= (x221 (x389 x1526)) x1526))
(assert (x1120 x312))
(assert (x1120 x137))
(assert (x1120 x264))
(assert (= (x214 x553) (ite (= x1085 x553) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x553))))
(assert (=> (<= x1341 10000) (= (x467 x1341) (x389 x1341))))
(assert (x1120 x125))
(assert (x1120 x1497))
(assert (x1120 x1262))
(assert (x292 x1239))
(assert (x1120 x431))
(assert (x292 x117))
(assert (= (x1067 x885) (ite (= x885 x1446) x653 (x52 x885))))
(assert (x1120 x457))
(assert (x1120 x1105))
(assert (x1120 x694))
(assert (x1120 x1448))
(assert (x292 x312))
(assert (=> (<= x1216 10000) (= (x389 x1216) (x467 x1216))))
(assert (= (=> (= x162 0) x368) x265))
(assert (x1120 x1250))
(assert (x1120 x69))
(assert (x1120 x491))
(assert (x1120 x392))
(assert (= (ite (and x1558 x844 x976 x450 (not x53) x403) (x1460 x355) (ite (and x450 x844 (not x403) x976 x1558) (x332 x355) (ite (and (not x844) x450 x976 x1558) (x1198 x355) (ite (and x450 (not x976) x1558) (x214 x355) (x1409 x355))))) (x1514 x355)))
(assert (= (=> (and (= x517 (x1276 (x389 x1567) (x467 7) 0)) (= (x1484 x128) x906) (= x1511 (x1276 (x389 x677) x517 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x906) (<= 0 x906) (= x128 (x1276 (x389 x1520) x1511 0)) (= (x560 1461501637330902918203684832716283019655932542975 x903) x677) (= x1358 (= x906 0)) (= x1520 (x560 1461501637330902918203684832716283019655932542975 x347))) (and (=> (and (not x1358) (= x1567 x676)) x484) (=> x1358 x1371))) x1287))
(assert (x1120 x215))
(assert (x1120 x1041))
(assert (=> (<= x1109 10000) (= (x467 x1109) (x389 x1109))))
(assert (x1120 x512))
(assert (=> (<= x880 10000) (= (x467 x880) (x389 x880))))
(assert (= (x221 (x389 x101)) x101))
(assert (x1120 x326))
(assert (x1120 x83))
(assert (= (x214 x48) (ite (= x48 x1085) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x48))))
(assert (= (ite (and x673 x1166) (x297 x1135) (x1299 x1135)) (x538 x1135)))
(assert (x1120 x295))
(assert (x292 x519))
(assert (= (x123 x885) (ite (= x885 x421) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1161 x885))))
(assert (x1120 x637))
(assert (= (ite (= x1135 x869) x964 (x332 x1135)) (x1460 x1135)))
(assert (= (ite (= x831 x30) x1406 (x252 x30)) (x71 x30)))
(assert (x1120 x1183))
(assert (x1120 x1290))
(assert (x1120 x25))
(assert (=> (>= 10000 x338) (= (x467 x338) (x389 x338))))
(assert (= (ite (and x569 (not x309) (not x1010) x439) (x1312 x399) (ite (and (not x309) x569 (not x439)) (x71 x399) (ite (and x569 x309) (x71 x399) (x1387 x399)))) (x954 x399)))
(assert (x292 x1092))
(assert (=> (>= 10000 x183) (= (x467 x183) (x389 x183))))
(assert (= (x1061 x1135) (ite (= x160 x1135) x1254 (x1067 x1135))))
(assert (x292 x624))
(assert (= (x221 (x389 x603)) x603))
(assert (x292 x821))
(assert (x1120 x145))
(assert (x1120 x727))
(assert (= (ite (= x48 x512) x1353 (x915 x512)) (x57 x512)))
(assert (x1120 x849))
(assert (= (ite (= x1135 x1085) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x1135)) (x214 x1135)))
(assert (x1120 x433))
(assert (x292 x1059))
(assert (= (x221 (x389 x889)) x889))
(assert (=> (>= 10000 x326) (= (x467 x326) (x389 x326))))
(assert (x1120 x186))
(assert (= (x221 (x467 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x1120 x629))
(assert (x1057 x156))
(assert (= (or (and (not x1539) x110) x1019) x569))
(assert (= (x221 (x389 x342)) x342))
(assert (= (x221 (x389 x1147)) x1147))
(assert (x1120 x483))
(assert (= (x1257 x827) (ite (and (not x652) x450 x1558) (x1514 x827) (x1386 x827))))
(assert (x1057 1461501637330902918203684832716283019655932542975))
(assert (x1120 x1111))
(assert (= (x783 x43) 0))
(assert (= (and x157 x1438) x151))
(assert (x1120 x1255))
(assert (=> (<= x1176 10000) (= (x467 x1176) (x389 x1176))))
(assert (x1120 x372))
(assert (= (x1257 x908) (ite (and (not x652) x1558 x450) (x1514 x908) (x1386 x908))))
(assert (= (x57 x43) (ite (= x43 x48) x1353 (x915 x43))))
(assert (= (x467 115792089237316195423570985008687907853269984665640564039457) (x389 115792089237316195423570985008687907853269984665640564039457)))
(assert (x1120 x554))
(assert (= (x1484 x1375) (ite (and x897 x409) (x1137 x1375) (ite (and x13 (not x409) x897) (x494 x1375) (x1084 x1375)))))
(assert (x1120 x701))
(assert (= (x697 x827) (ite (and x323 x1306 x1390 (not x728) x471 x794) (x1541 x827) (ite (and x1390 x794 (not x1306) x323 x471) (x257 x827) (ite (and x794 (not x1390) x471 x323) (x266 x827) (ite (and x794 x471 (not x323)) (x123 x827) (x1207 x827)))))))
(assert (= (ite (and x569 x439 (not x309) (not x1010)) (x1312 x908) (ite (and (not x309) (not x439) x569) (x71 x908) (ite (and x309 x569) (x71 x908) (x1387 x908)))) (x954 x908)))
(assert (=> (>= 10000 x1429) (= (x389 x1429) (x467 x1429))))
(assert (x1120 x821))
(assert (= (=> (and (not (= x528 1968616202)) (<= x81 1461501637330902918203684832716283019655932542975) (< x528 2293535753) (<= 0 x534) (= 2258409472 x528) (not (= x528 2211524764)) (= (x1562 x1243) x534) (not (< x528 911411945)) (= (x796 (x389 274184521717934524641157099916833587206)) x464) (= x1243 (x1276 (x389 x81) x1295 0)) (= (x1276 (x389 x1177) (x467 6) 0) x1295) (= x534 x480) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x534) (not (= x528 2061678023)) (not (< x528 1968616202)) (not (= 1986467848 x528)) (< 0 x464)) (=> (and (= x308 x1569) (= x1221 x1216) (= x480 x598)) x277)) x1045))
(assert (x292 x38))
(assert (x1120 x1124))
(assert (x1120 x478))
(assert (x1057 x1328))
(assert (x292 x34))
(assert (=> (<= x1152 10000) (= (x467 x1152) (x389 x1152))))
(assert (= (x221 (x389 x1199)) x1199))
(assert (= (ite (and x1558 (not x53) x976 x450 x844 x403) (x1460 x48) (ite (and x844 (not x403) x976 x1558 x450) (x332 x48) (ite (and x976 x450 (not x844) x1558) (x1198 x48) (ite (and x450 (not x976) x1558) (x214 x48) (x1409 x48))))) (x1514 x48)))
(assert (= (x1165 x1385) (ite (and x569 x198) (x82 x1385) (x228 x1385))))
(assert (= x986 (x221 (x389 x986))))
(assert (x1120 x421))
(assert (x292 x815))
(assert (= (x783 x500) 0))
(assert (x292 x856))
(assert (= (x57 x160) (ite (= x48 x160) x1353 (x915 x160))))
(assert (= x1377 x1354))
(assert (=> (<= x554 10000) (= (x467 x554) (x389 x554))))
(assert (x1120 x1279))
(assert (= (x332 x1135) (ite (= x1135 x1230) x898 (x1198 x1135))))
(assert (= (x221 (x389 x773)) x773))
(assert (x292 x1100))
(assert (x1120 x893))
(assert (= (x389 468353030) (x467 468353030)))
(assert (= (x858 x1531) (ite (and x619 x569) (x1360 x1531) (x1556 x1531))))
(assert (x292 x1411))
(assert (=> (>= 10000 x966) (= (x389 x966) (x467 x966))))
(assert (x1120 x1136))
(assert (= (x115 x206) (ite (and x897 x409) (x665 x206) (ite (and x897 (not x409) x13) (x665 x206) (x1398 x206)))))
(assert (= (x214 x512) (ite (= x512 x1085) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x512))))
(assert (= (x1509 x313) (ite (and x569 x619) (x1435 x313) (x424 x313))))
(assert (= (x1514 x500) (ite (and x1558 (not x53) x450 x403 x844 x976) (x1460 x500) (ite (and x976 x844 x1558 x450 (not x403)) (x332 x500) (ite (and x450 (not x844) x1558 x976) (x1198 x500) (ite (and x1558 (not x976) x450) (x214 x500) (x1409 x500)))))))
(assert (= (x221 (x389 x86)) x86))
(assert (= (ite (= x497 x512) x999 (x71 x512)) (x1312 x512)))
(assert (=> (>= 10000 x1147) (= (x389 x1147) (x467 x1147))))
(assert (x1120 x584))
(assert (x1120 x968))
(assert (=> (<= x776 10000) (= (x467 x776) (x389 x776))))
(assert (= x1131 x1005))
(assert (x292 x605))
(assert (= x595 (x221 (x389 x595))))
(assert (x1120 x1212))
(assert (= (ite (= x851 x1085) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x851)) (x214 x851)))
(assert (x1120 x338))
(assert (= x193 (or x810 (and x1089 x655))))
(assert (x1120 x1159))
(assert (x1120 x382))
(assert (= (ite (= x500 x497) x999 (x71 x500)) (x1312 x500)))
(assert (=> (<= x749 10000) (= (x467 x749) (x389 x749))))
(assert (x1120 x23))
(assert (x1120 x1248))
(assert (=> (<= x490 10000) (= (x467 x490) (x389 x490))))
(assert (= 1968616202 (x221 (x467 1968616202))))
(assert (= (x389 826074471) (x467 826074471)))
(assert (= x874 x693))
(assert (= (ite (= x160 x643) x1254 (x1067 x643)) (x1061 x643)))
(assert (x1120 x1446))
(assert (x292 x762))
(assert (x292 x162))
(assert (= (x221 (x389 x1372)) x1372))
(assert (= x26 (=> (and (= x552 x1003) (= 2743102681 x1392) (not (< x1392 2293535753)) (= x1003 (x712 x1292)) (>= 1461501637330902918203684832716283019655932542975 x595) (> x654 0) (<= x521 1461501637330902918203684832716283019655932542975) (= x397 (x1276 (x389 x521) x741 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1003) (not (= x1392 2690754053)) (not (< x1392 2690754053)) (= x741 (x1276 (x389 x814) (x467 3) 0)) (> 2960351575 x1392) (= (x1276 (x389 x595) x397 0) x1292) (<= 0 x1003) (= (x796 (x389 274184521717934524641157099916833587206)) x654)) (=> (and (= x552 x384) (= x1237 x1205) (= x1221 x749) (= x153 x949) (= x179 x308)) x1301))))
(assert (x1057 x1228))
(assert (=> (>= 10000 x488) (= (x467 x488) (x389 x488))))
(assert (x1120 x1405))
(assert (= x1532 (=> (and (> 911411945 x703) (= x701 (x796 (x389 274184521717934524641157099916833587206))) (= (x1276 (x389 x234) x1419 0) x458) (> 2293535753 x703) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x811) (= 69947311 x703) (= x811 (x1190 x458)) (= x940 x811) (>= x811 0) (<= x234 1461501637330902918203684832716283019655932542975) (= x1419 (x1276 (x389 x672) (x467 10) 0)) (> 468353030 x703) (> x701 0)) (=> (and (= x820 x1205) (= x1070 x1221) (= x308 x256) (= x352 x940)) x1218))))
(assert (= (ite (= x506 x1230) x898 (x1198 x506)) (x332 x506)))
(assert (= (x221 (x389 x1429)) x1429))
(assert (x1120 x930))
(assert (= (x71 x1135) (ite (= x1135 x831) x1406 (x252 x1135))))
(assert (= (ite (= x827 x1446) x653 (x52 x827)) (x1067 x827)))
(assert (x1120 x520))
(assert (=> (>= 10000 x815) (= (x467 x815) (x389 x815))))
(assert (x1120 x377))
(assert (x1120 x366))
(assert (= (x221 (x389 x1347)) x1347))
(assert (x1120 x1401))
(assert (= (x783 x30) 0))
(assert (x1120 x994))
(assert (x292 x880))
(assert (x1120 x127))
(assert (=> (<= x957 10000) (= (x389 x957) (x467 x957))))
(assert (x1120 x838))
(assert (x1120 x574))
(assert (=> (<= x81 10000) (= (x467 x81) (x389 x81))))
(assert (=> (<= x744 10000) (= (x389 x744) (x467 x744))))
(assert (= (x221 (x389 x87)) x87))
(assert (= x195 (or (and x1138 (not x1266)) x865)))
(assert (x1120 x757))
(assert (x1120 x1180))
(assert (= (x221 (x389 x162)) x162))
(assert (= x752 (x221 (x389 x752))))
(assert (= (x1157 x30) (ite (and x515 x289) (x57 x30) (x1001 x30))))
(assert (= x1051 (=> (and (or (and (= 96 x827) x1560) (and (not x1560) (= x1546 x827) (= x1048 (x173 (+ x650 96))))) x1134 (or (and (> x1220 0) (= (= x1220 0) x991) (= x355 (x173 (+ x827 32))) (= x1537 (ite x545 1 0)) (= x1220 (x1219 x355)) (= (x1219 x827) x224) (not (or (> x224 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x224 32) (= true (<= x224 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) x591 (= x1220 x1537) (= x545 (not x991))) (not x591)) (not x140) (= x1560 (= 0 x377)) (= x92 (x1235 (x389 x695))) (= x1134 (< (x3 (x389 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x708 0) x591) (= (> x1353 2) x140) (= (x1219 x827) x708) (not (= 0 x606))) x1053)))
(assert (x1120 x949))
(assert (= (or (and x16 (not x375)) (and (not x911) x1330)) x1494))
(assert (= (x221 (x389 x338)) x338))
(assert (= (ite (and x569 x619) (x1435 x1309) (x424 x1309)) (x1509 x1309)))
(assert (x292 x729))
(assert (x1120 x1160))
(assert (= (x538 x885) (ite (and x673 x1166) (x297 x885) (x1299 x885))))
(assert (= (ite (= x355 x1085) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x756 x355)) (x214 x355)))
(assert (= (x783 x129) 0))
(assert (x292 x1369))
(assert (= (=> (= (> x1353 0) x1558) (and (=> (and x504 (= x1159 (x173 (+ x306 128))) (= (x173 (+ x306 96)) x1085) (= (x796 (x389 x1485)) x868) (= x1485 (x446 x93)) (= (x173 (+ 36 x1264)) x306) (= x652 (> x1325 x965)) (= (x214 x1264) x965) (< 0 x1455) (or (and (= (x173 (+ x1159 x965)) x340) x652) (not x652)) (= (< 0 x965) x976) (>= 1461501637330902918203684832716283019655932542975 x1485) (= x943 x93) (= (x173 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1193)) x608) (= (x173 (+ 160 x857)) x926) (= (x173 (+ x1264 32)) x643) (= x1455 (x248 x48)) (= x301 (x345 (- x574 x1264))) (= x371 (x691 x643)) (= x830 (x560 1461501637330902918203684832716283019655932542975 x347)) (= x474 (x248 x926)) (= x574 (x173 (+ x1264 100))) (= x1193 (x560 26959946667150639794667015087019630673637144422540572481103610249215 x371)) (= x197 (x173 (+ 68 x1264))) (= x504 (< 0 x868)) (or (and (not x976) (= 0 x1325)) (and (= x678 x643) (= (x214 x678) x1246) (= x844 (> x965 32)) (= x1319 x1159) (or (and (= (< 64 x965) x403) x844 (or (and (= 64 x1325) (not x403)) (and (= x53 (< 96 x965)) (= x964 (x332 x851)) (= (x173 (+ 128 x574)) x869) x403 (= (x173 (+ x1264 96)) x851) (or (and (= (x1460 x506) x629) x53 (= x1325 128) (not x884) (= x1126 (x173 (+ 160 x574))) (= (x173 (+ x1264 128)) x506) (= (> x965 128) x884)) (and (= x1325 96) (not x53))))) (= (x173 (+ x1264 64)) x553) (= x1230 (x173 (+ x574 96))) (= x898 (x1198 x553))) (and (= x1325 32) (not x844))) x976)) (= (x345 (- x301 32)) x1412) (= 0 x948) x1558 (< 0 x1353)) x736) (=> (not x1558) x1053))) x133))
(assert (= (x221 (x389 x117)) x117))
(assert (x1120 x310))
(assert (= x683 (=> (= (< 0 x1567) x579) (and (=> x579 x1287) (=> (not x579) x11)))))
(assert (x292 x521))
(assert (x1120 x1075))
(assert (x1120 x1341))
(assert (= (x954 x355) (ite (and x569 x439 (not x1010) (not x309)) (x1312 x355) (ite (and x569 (not x309) (not x439)) (x71 x355) (ite (and x309 x569) (x71 x355) (x1387 x355))))))
(assert (= (x57 x678) (ite (= x48 x678) x1353 (x915 x678))))
(assert (= (=> (= x1171 (> x1567 0)) (and (=> (not x1171) x132) (=> x1171 x96))) x514))
(assert (x292 274184521717934524641157099916833587214))
(assert (= (x221 (x467 2512682246)) 2512682246))
(assert (x1120 x1135))
(assert (x292 x1291))
(assert (x1120 x634))
(assert (x1120 x1129))
(assert (x292 x431))
(assert (x1120 x663))
(assert (x1120 x961))
(assert (= (ite (= x48 x553) x1353 (x915 x553)) (x57 x553)))
(assert (x1120 x1027))
(assert (x1120 x286))
(assert (x1120 x553))
(assert (= x81 (x221 (x389 x81))))
(assert (x292 x87))
(check-sat)
