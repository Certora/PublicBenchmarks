(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x199 0)) (((x1177 (x1279 x199) (x1452 x199) (x201 Int)) (x511 (x754 Int)) (x45 (x100 x199) (x605 Int)))))
(declare-fun x467 () Int)
(declare-fun x703 () Int)
(declare-fun x418 () Int)
(declare-fun x663 () x199)
(declare-fun x1119 () Int)
(declare-fun x531 () Int)
(declare-fun x799 () Int)
(declare-fun x10 () Int)
(declare-fun x1095 () Bool)
(declare-fun x554 () Bool)
(declare-fun x840 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x635 () Bool)
(declare-fun x1026 () Int)
(declare-fun x1283 () Int)
(declare-fun x47 () Bool)
(declare-fun x666 () Bool)
(declare-fun x25 () Bool)
(declare-fun x830 () Int)
(declare-fun x231 () Bool)
(declare-fun x419 (Int) Int)
(declare-fun x1592 () Int)
(declare-fun x1276 () Bool)
(declare-fun x772 () Int)
(declare-fun x1260 () Int)
(declare-fun x192 () Bool)
(declare-fun x865 () Bool)
(declare-fun x763 () Bool)
(declare-fun x14 () Int)
(declare-fun x998 () Int)
(declare-fun x114 () Int)
(declare-fun x680 () Int)
(declare-fun x683 () x199)
(declare-fun x755 () Bool)
(declare-fun x324 () Bool)
(declare-fun x727 () Int)
(declare-fun x1253 () x199)
(declare-fun x838 () Int)
(declare-fun x871 () x199)
(declare-fun x1347 () Int)
(declare-fun x1040 () x199)
(declare-fun x999 () Int)
(declare-fun x937 (x199) Int)
(declare-fun x1102 (x199) Int)
(declare-fun x946 () Bool)
(declare-fun x333 () x199)
(declare-fun x208 () Int)
(declare-fun x1389 () Int)
(declare-fun x1573 () x199)
(declare-fun x1239 () Int)
(declare-fun x1131 () Int)
(declare-fun x514 () Bool)
(declare-fun x1199 () Int)
(declare-fun x454 () Int)
(declare-fun x669 () Int)
(declare-fun x1066 () x199)
(declare-fun x90 () Int)
(declare-fun x1519 () x199)
(declare-fun x1561 () Bool)
(declare-fun x881 () x199)
(declare-fun x317 (Int Int) Int)
(declare-fun x210 () x199)
(declare-fun x687 () Int)
(declare-fun x1293 () Int)
(declare-fun x734 () Int)
(declare-fun x1179 () Int)
(declare-fun x145 () Int)
(declare-fun x654 () Int)
(declare-fun x1331 () Bool)
(declare-fun x126 () Bool)
(declare-fun x1502 () x199)
(declare-fun x160 () Bool)
(declare-fun x997 () Int)
(declare-fun x85 () Int)
(declare-fun x561 () Int)
(declare-fun x275 () x199)
(declare-fun x1521 () Int)
(declare-fun x858 () Bool)
(declare-fun x456 () Int)
(declare-fun x1227 () Bool)
(declare-fun x417 () x199)
(declare-fun x437 () Bool)
(declare-fun x1408 () Int)
(declare-fun x1503 () Bool)
(declare-fun x1406 () x199)
(declare-fun x1469 () Int)
(declare-fun x1197 () x199)
(declare-fun x58 () Int)
(declare-fun x116 () Int)
(declare-fun x1232 () Int)
(declare-fun x1134 () Int)
(declare-fun x857 () Bool)
(declare-fun x652 (Int) Int)
(declare-fun x306 () Int)
(declare-fun x378 () Bool)
(declare-fun x1114 () Int)
(declare-fun x1499 () Int)
(declare-fun x559 () Bool)
(declare-fun x284 () x199)
(declare-fun x648 () Int)
(declare-fun x1560 () Bool)
(declare-fun x1112 () Int)
(declare-fun x113 () x199)
(declare-fun x1321 () x199)
(declare-fun x586 () Int)
(declare-fun x108 () Int)
(declare-fun x203 () Int)
(declare-fun x750 () x199)
(declare-fun x229 () Int)
(declare-fun x593 () x199)
(declare-fun x172 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x1473 () Int)
(declare-fun x1379 () Int)
(declare-fun x1063 (x199) Int)
(declare-fun x781 () x199)
(declare-fun x1424 () Int)
(declare-fun x1315 () x199)
(declare-fun x216 () Bool)
(declare-fun x169 () x199)
(declare-fun x949 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x156 () Int)
(declare-fun x1330 () Bool)
(declare-fun x934 () Int)
(declare-fun x106 () Int)
(declare-fun x1484 () Int)
(declare-fun x1482 () Int)
(declare-fun x54 () x199)
(declare-fun x670 () Bool)
(declare-fun x130 () Int)
(declare-fun x1043 () Int)
(declare-fun x917 () Int)
(declare-fun x89 () Int)
(declare-fun x769 () x199)
(declare-fun x1394 () x199)
(declare-fun x234 () Int)
(declare-fun x13 () Bool)
(declare-fun x313 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x1236 () Int)
(declare-fun x484 () Bool)
(declare-fun x786 () Bool)
(declare-fun x465 (x199) Int)
(declare-fun x753 () x199)
(declare-fun x59 () Int)
(declare-fun x1438 () Int)
(declare-fun x1172 () Int)
(declare-fun x1091 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x155 () x199)
(declare-fun x72 () Bool)
(declare-fun x546 () Int)
(declare-fun x1194 () x199)
(declare-fun x1427 () Int)
(declare-fun x1492 () Int)
(declare-fun x899 () Bool)
(declare-fun x1012 (Int) Int)
(declare-fun x1013 () Bool)
(declare-fun x1585 () x199)
(declare-fun x655 () Int)
(declare-fun x1178 () Int)
(declare-fun x194 () Bool)
(declare-fun x819 () Bool)
(declare-fun x302 () Int)
(declare-fun x516 () Int)
(declare-fun x1068 () Bool)
(declare-fun x549 () Int)
(declare-fun x1142 () Int)
(declare-fun x1415 () Int)
(declare-fun x263 () Int)
(declare-fun x220 () Int)
(declare-fun x1390 () Int)
(declare-fun x817 () Int)
(declare-fun x385 () Int)
(declare-fun x190 () Int)
(declare-fun x1291 () Bool)
(declare-fun x295 () Int)
(declare-fun x1164 () x199)
(declare-fun x1267 () x199)
(declare-fun x1238 () Int)
(declare-fun x1414 () Int)
(declare-fun x41 () Int)
(declare-fun x530 () Int)
(declare-fun x1000 () Int)
(declare-fun x825 () Int)
(declare-fun x771 () Bool)
(declare-fun x380 () Int)
(declare-fun x983 () Int)
(declare-fun x399 () Int)
(declare-fun x1104 () Bool)
(declare-fun x1366 () Int)
(declare-fun x1111 () Int)
(declare-fun x415 () Int)
(declare-fun x883 () Int)
(declare-fun x1173 () Int)
(declare-fun x721 () Bool)
(declare-fun x1169 () Int)
(declare-fun x1539 () Int)
(declare-fun x659 () Bool)
(declare-fun x1174 () Int)
(declare-fun x1489 () Int)
(declare-fun x214 () Bool)
(declare-fun x405 () Int)
(declare-fun x1126 () x199)
(declare-fun x507 () Int)
(declare-fun x611 () Int)
(declare-fun x538 () Bool)
(declare-fun x1196 () Int)
(declare-fun x86 () Bool)
(declare-fun x762 () Bool)
(declare-fun x430 () Int)
(declare-fun x406 () Int)
(declare-fun x510 () x199)
(declare-fun x1113 () Int)
(declare-fun x1509 () Bool)
(declare-fun x1050 () Int)
(declare-fun x1075 () Int)
(declare-fun x885 () Int)
(declare-fun x606 () x199)
(declare-fun x1487 () x199)
(declare-fun x1037 () Bool)
(declare-fun x836 () x199)
(declare-fun x230 () Int)
(declare-fun x1007 () x199)
(declare-fun x1516 () x199)
(declare-fun x814 () Int)
(declare-fun x1286 () Int)
(declare-fun x768 () Bool)
(declare-fun x1451 () Int)
(declare-fun x761 () Int)
(declare-fun x639 () Int)
(declare-fun x1154 () Int)
(declare-fun x1138 () Bool)
(declare-fun x1513 () x199)
(declare-fun x1271 () Bool)
(declare-fun x489 () Bool)
(declare-fun x671 () Bool)
(declare-fun x1554 () Bool)
(declare-fun x933 () Int)
(declare-fun x1572 () Int)
(declare-fun x112 () Bool)
(declare-fun x548 () Bool)
(declare-fun x1189 () Int)
(declare-fun x1478 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x556 () Int)
(declare-fun x1100 () Int)
(declare-fun x887 () Int)
(declare-fun x778 () Int)
(declare-fun x960 () Int)
(declare-fun x745 () Bool)
(declare-fun x512 () Bool)
(declare-fun x70 () Int)
(declare-fun x475 (Int Int) Int)
(declare-fun x1290 () Int)
(declare-fun x298 () Int)
(declare-fun x182 () Bool)
(declare-fun x1547 () Int)
(declare-fun x856 () Int)
(declare-fun x1203 () x199)
(declare-fun x764 () Int)
(declare-fun x1139 () Bool)
(declare-fun x260 () Bool)
(declare-fun x39 () Int)
(declare-fun x443 () Bool)
(declare-fun x1504 () x199)
(declare-fun x613 () Int)
(declare-fun x822 () Bool)
(declare-fun x472 () Bool)
(declare-fun x259 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x38 () Int)
(declare-fun x775 () Int)
(declare-fun x1188 () Bool)
(declare-fun x1005 () Int)
(declare-fun x204 (x199) Int)
(declare-fun x1182 () Int)
(declare-fun x1589 () Int)
(declare-fun x1081 () Int)
(declare-fun x119 () Int)
(declare-fun x862 () Int)
(declare-fun x542 () Bool)
(declare-fun x797 () x199)
(declare-fun x950 () Bool)
(declare-fun x783 () Bool)
(declare-fun x879 () x199)
(declare-fun x596 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x325 () Int)
(declare-fun x924 () Bool)
(declare-fun x1098 () Int)
(declare-fun x490 () Bool)
(declare-fun x785 () Int)
(declare-fun x239 () Int)
(declare-fun x186 () Bool)
(declare-fun x1118 () Int)
(declare-fun x1402 () Int)
(declare-fun x289 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x564 () Bool)
(declare-fun x245 () Int)
(declare-fun x1245 () Bool)
(declare-fun x1409 () x199)
(declare-fun x373 () x199)
(declare-fun x395 () Int)
(declare-fun x843 () Bool)
(declare-fun x812 () x199)
(declare-fun x1219 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x246 () Int)
(declare-fun x1034 () x199)
(declare-fun x831 () Bool)
(declare-fun x733 () Int)
(declare-fun x955 (Int) Int)
(declare-fun x692 () Int)
(declare-fun x626 (Int) Int)
(declare-fun x714 () x199)
(declare-fun x1004 () x199)
(declare-fun x878 () Int)
(declare-fun x215 () Bool)
(declare-fun x403 () Int)
(declare-fun x414 () Int)
(declare-fun x332 () Int)
(declare-fun x1514 () Int)
(declare-fun x1562 () Int)
(declare-fun x1185 () Int)
(declare-fun x455 () Int)
(declare-fun x486 () Int)
(declare-fun x187 () Bool)
(declare-fun x292 () Int)
(declare-fun x445 () Int)
(declare-fun x1147 () Int)
(declare-fun x29 () x199)
(declare-fun x361 () Int)
(declare-fun x1158 () Int)
(declare-fun x1364 () Int)
(declare-fun x428 () Bool)
(declare-fun x1242 () Int)
(declare-fun x6 () x199)
(declare-fun x280 () x199)
(declare-fun x877 () Int)
(declare-fun x1166 () Int)
(declare-fun x859 () Bool)
(declare-fun x959 () x199)
(declare-fun x1053 () Bool)
(declare-fun x1223 () Int)
(declare-fun x1411 () Int)
(declare-fun x868 () Int)
(declare-fun x863 () Int)
(declare-fun x1092 () Bool)
(declare-fun x846 () Int)
(declare-fun x550 () Bool)
(declare-fun x986 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x931 () Int)
(declare-fun x320 () Int)
(declare-fun x48 () Int)
(declare-fun x219 (Int) Int)
(declare-fun x948 () Int)
(declare-fun x135 () Int)
(declare-fun x102 () Int)
(declare-fun x509 () Int)
(declare-fun x1437 () Int)
(declare-fun x235 () Bool)
(declare-fun x1541 () x199)
(declare-fun x1130 () Int)
(declare-fun x748 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x127 () Int)
(declare-fun x473 () x199)
(declare-fun x1035 () Int)
(declare-fun x927 () Int)
(declare-fun x374 () Int)
(declare-fun x1264 () Int)
(declare-fun x1234 () Int)
(declare-fun x760 () Bool)
(declare-fun x1022 () Int)
(declare-fun x984 (Int) Int)
(declare-fun x1274 () Bool)
(declare-fun x867 () Int)
(declare-fun x543 () Int)
(declare-fun x411 () x199)
(declare-fun x1132 () Int)
(declare-fun x1190 () Int)
(declare-fun x513 () Bool)
(declare-fun x981 () Bool)
(declare-fun x1525 () x199)
(declare-fun x500 () x199)
(declare-fun x991 () Int)
(declare-fun x1318 () Int)
(declare-fun x504 (Int) Int)
(declare-fun x166 () Int)
(declare-fun x300 () Int)
(declare-fun x147 () Int)
(declare-fun x57 () Int)
(declare-fun x869 () Bool)
(declare-fun x1496 () Int)
(declare-fun x209 () Int)
(declare-fun x1532 () Int)
(declare-fun x355 () x199)
(declare-fun x1205 () Bool)
(declare-fun x642 () Int)
(declare-fun x1460 () Int)
(declare-fun x641 () Bool)
(declare-fun x1191 () x199)
(declare-fun x177 () Int)
(declare-fun x1363 () Bool)
(declare-fun x258 () Bool)
(declare-fun x565 () Bool)
(declare-fun x528 () x199)
(declare-fun x496 () Int)
(declare-fun x376 () Bool)
(declare-fun x1060 () Int)
(declare-fun x293 () Int)
(declare-fun x837 () Bool)
(declare-fun x711 (Int) Int)
(declare-fun x110 () Bool)
(declare-fun x1313 (x199) Int)
(declare-fun x580 () Int)
(declare-fun x1089 () Int)
(declare-fun x591 () Int)
(declare-fun x767 () Int)
(declare-fun x576 () Bool)
(declare-fun x134 () Int)
(declare-fun x350 () Bool)
(declare-fun x1016 () Int)
(declare-fun x716 () Int)
(declare-fun x105 () x199)
(declare-fun x730 () Int)
(declare-fun x1067 (Int) Int)
(declare-fun x483 () Int)
(declare-fun x316 () Bool)
(declare-fun x1465 () Int)
(declare-fun x240 () Bool)
(declare-fun x690 () Int)
(declare-fun x1535 () x199)
(declare-fun x91 () Bool)
(declare-fun x330 () Int)
(declare-fun x823 () Int)
(declare-fun x592 () Bool)
(declare-fun x1167 (x199) Int)
(declare-fun x1309 () x199)
(declare-fun x1382 () Bool)
(declare-fun x82 () Int)
(declare-fun x803 () Bool)
(declare-fun x1281 () x199)
(declare-fun x1055 () Int)
(declare-fun x1019 () x199)
(declare-fun x896 () x199)
(declare-fun x1483 () Int)
(declare-fun x1211 () Bool)
(declare-fun x637 () Int)
(declare-fun x195 () x199)
(declare-fun x1216 () Int)
(declare-fun x1368 () Int)
(declare-fun x254 (x199) Int)
(declare-fun x521 () Bool)
(declare-fun x407 () Int)
(declare-fun x1553 () x199)
(declare-fun x732 () Bool)
(declare-fun x1110 () x199)
(declare-fun x431 () Bool)
(declare-fun x1480 () Int)
(declare-fun x1157 () x199)
(declare-fun x523 () Bool)
(declare-fun x600 () Int)
(declare-fun x1096 () Int)
(declare-fun x973 () Int)
(declare-fun x118 () Int)
(declare-fun x1048 () Int)
(declare-fun x470 () Bool)
(declare-fun x1097 () Int)
(declare-fun x266 () Int)
(declare-fun x299 () Bool)
(declare-fun x345 () Int)
(declare-fun x55 () Int)
(declare-fun x913 () Bool)
(declare-fun x277 () Bool)
(declare-fun x508 () Bool)
(declare-fun x432 () Int)
(declare-fun x1571 () Int)
(declare-fun x141 () Bool)
(declare-fun x1430 () Int)
(declare-fun x4 () Int)
(declare-fun x665 () Bool)
(declare-fun x718 () Bool)
(declare-fun x1237 () Int)
(declare-fun x875 () Bool)
(declare-fun x1317 () Int)
(declare-fun x1156 () Int)
(declare-fun x392 () Int)
(declare-fun x964 () Bool)
(declare-fun x276 () Bool)
(declare-fun x651 () Bool)
(declare-fun x953 () x199)
(declare-fun x905 () Int)
(declare-fun x63 () Int)
(declare-fun x1176 () Bool)
(declare-fun x163 () Int)
(declare-fun x1049 () Int)
(declare-fun x1457 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x747 () x199)
(declare-fun x536 () Bool)
(declare-fun x1612 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x457 () Bool)
(declare-fun x382 () Int)
(declare-fun x889 () Int)
(declare-fun x26 () Bool)
(declare-fun x1262 () Int)
(declare-fun x1537 () Bool)
(declare-fun x1228 () Int)
(declare-fun x408 () x199)
(declare-fun x849 () Int)
(declare-fun x834 () Bool)
(declare-fun x369 () x199)
(declare-fun x503 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x967 () Int)
(declare-fun x60 () Bool)
(declare-fun x1149 () x199)
(declare-fun x1248 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x193 () Int)
(declare-fun x138 () Int)
(declare-fun x1079 () x199)
(declare-fun x921 () Int)
(declare-fun x1300 () x199)
(declare-fun x1517 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x1249 () Int)
(declare-fun x810 () Int)
(declare-fun x348 () x199)
(declare-fun x992 () Bool)
(declare-fun x1202 () Int)
(declare-fun x497 () Int)
(declare-fun x202 () Int)
(declare-fun x963 () Bool)
(declare-fun x73 () Bool)
(declare-fun x1326 () x199)
(declare-fun x1006 () Int)
(declare-fun x801 () Bool)
(declare-fun x770 () Int)
(declare-fun x40 () Int)
(declare-fun x315 () Int)
(declare-fun x83 () Int)
(declare-fun x1105 () x199)
(declare-fun x870 () Int)
(declare-fun x466 () Int)
(declare-fun x1337 () Bool)
(declare-fun x920 () Int)
(declare-fun x1024 () Bool)
(declare-fun x137 () Bool)
(declare-fun x519 () x199)
(declare-fun x335 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x678 () Int)
(declare-fun x76 () x199)
(declare-fun x1069 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x695 () Int)
(declare-fun x1349 () Int)
(declare-fun x1077 () Int)
(declare-fun x1381 () Int)
(declare-fun x480 () x199)
(declare-fun x1261 () Bool)
(declare-fun x237 () Int)
(declare-fun x1213 () Int)
(declare-fun x32 () Bool)
(declare-fun x1583 () Int)
(declare-fun x1298 () x199)
(declare-fun x807 () Int)
(declare-fun x615 () Bool)
(declare-fun x422 () Bool)
(declare-fun x520 () x199)
(declare-fun x1335 () x199)
(declare-fun x122 () Int)
(declare-fun x388 () Bool)
(declare-fun x966 () Int)
(declare-fun x1116 () Int)
(declare-fun x43 () Int)
(declare-fun x243 () Int)
(declare-fun x1125 () Int)
(declare-fun x1070 () Bool)
(declare-fun x366 () Int)
(declare-fun x357 () Int)
(declare-fun x631 () Int)
(declare-fun x579 () Bool)
(declare-fun x327 (Int) Int)
(declare-fun x608 () Bool)
(declare-fun x171 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x476 () Int)
(declare-fun x1432 () Bool)
(declare-fun x285 () Int)
(declare-fun x491 () Bool)
(declare-fun x704 () x199)
(declare-fun x1146 () Bool)
(declare-fun x880 () Bool)
(declare-fun x211 () x199)
(declare-fun x961 () Int)
(declare-fun x1017 () Int)
(declare-fun x349 () Bool)
(declare-fun x247 () Int)
(declare-fun x1303 () Int)
(declare-fun x1312 () Bool)
(declare-fun x686 () Int)
(declare-fun x1611 () Int)
(declare-fun x1106 () Bool)
(declare-fun x907 () Int)
(declare-fun x1085 () Bool)
(declare-fun x895 () Bool)
(declare-fun x1586 () Int)
(declare-fun x1041 () Int)
(declare-fun x1374 () Int)
(declare-fun x607 () Int)
(declare-fun x87 () Bool)
(declare-fun x286 () Bool)
(declare-fun x911 () Bool)
(declare-fun x563 () Int)
(declare-fun x329 () Int)
(declare-fun x170 () Int)
(declare-fun x1036 () Bool)
(declare-fun x1501 () x199)
(declare-fun x84 () Int)
(declare-fun x624 () Bool)
(declare-fun x1255 (x199) Int)
(declare-fun x96 () Bool)
(declare-fun x506 () Bool)
(declare-fun x180 () x199)
(declare-fun x1266 () Bool)
(declare-fun x562 () Int)
(declare-fun x918 () Int)
(declare-fun x1580 () Int)
(declare-fun x397 () Int)
(declare-fun x1031 () x199)
(declare-fun x154 () x199)
(declare-fun x1302 () x199)
(declare-fun x1456 () Int)
(declare-fun x132 () x199)
(declare-fun x65 () x199)
(declare-fun x1193 () Int)
(declare-fun x1413 () Int)
(declare-fun x930 () Bool)
(declare-fun x381 () Int)
(declare-fun x1038 () Int)
(declare-fun x1486 () Int)
(declare-fun x900 () Int)
(declare-fun x35 () Bool)
(declare-fun x5 () Int)
(declare-fun x627 () Bool)
(declare-fun x1186 () Int)
(declare-fun x226 () Int)
(declare-fun x1180 (Int) Int)
(declare-fun x892 () x199)
(declare-fun x599 () Int)
(declare-fun x650 () x199)
(declare-fun x1265 () Int)
(declare-fun x947 () x199)
(declare-fun x367 () x199)
(declare-fun x64 () Int)
(declare-fun x1597 () Bool)
(declare-fun x839 () x199)
(declare-fun x162 () Bool)
(declare-fun x829 () Int)
(declare-fun x1578 (x199) Int)
(declare-fun x124 () Bool)
(declare-fun x676 () Int)
(declare-fun x27 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x965 () x199)
(declare-fun x123 () x199)
(declare-fun x342 () Int)
(declare-fun x159 () Int)
(declare-fun x1214 () Int)
(declare-fun x387 () Bool)
(declare-fun x461 () x199)
(declare-fun x876 () Bool)
(declare-fun x175 () Bool)
(declare-fun x494 () Int)
(declare-fun x1268 () Int)
(declare-fun x1488 () Int)
(declare-fun x358 () Bool)
(declare-fun x932 () Int)
(declare-fun x1064 () Int)
(declare-fun x922 () Int)
(declare-fun x151 () Bool)
(declare-fun x827 () Int)
(declare-fun x149 () Int)
(declare-fun x1215 () x199)
(declare-fun x619 () Bool)
(declare-fun x794 () x199)
(declare-fun x567 () Int)
(declare-fun x485 () x199)
(declare-fun x420 () x199)
(declare-fun x784 () Int)
(declare-fun x336 () Bool)
(declare-fun x573 () Int)
(declare-fun x661 () Int)
(declare-fun x935 () Int)
(declare-fun x21 () Int)
(declare-fun x319 () Int)
(declare-fun x1247 () Bool)
(declare-fun x1410 () Int)
(declare-fun x1386 () x199)
(declare-fun x1225 () Int)
(declare-fun x672 () Int)
(declare-fun x578 () x199)
(declare-fun x109 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x185 () Int)
(declare-fun x107 () Int)
(declare-fun x1344 () Bool)
(declare-fun x796 () Bool)
(declare-fun x636 () x199)
(declare-fun x1200 () x199)
(declare-fun x956 () Int)
(declare-fun x1042 () Int)
(declare-fun x621 () Int)
(declare-fun x46 () x199)
(declare-fun x1608 () Int)
(declare-fun x493 () Bool)
(declare-fun x1025 () x199)
(declare-fun x575 () Int)
(declare-fun x759 () Int)
(declare-fun x1518 () Bool)
(declare-fun x242 () Int)
(declare-fun x568 () Int)
(declare-fun x66 () Bool)
(declare-fun x471 () Bool)
(declare-fun x731 () Int)
(declare-fun x1588 () Int)
(declare-fun x1278 (x199) Int)
(declare-fun x547 () Bool)
(declare-fun x458 () Int)
(declare-fun x996 () Int)
(declare-fun x1461 () Int)
(declare-fun x267 () Int)
(declare-fun x227 () Int)
(declare-fun x2 () Int)
(declare-fun x1466 () Int)
(declare-fun x1010 () x199)
(declare-fun x1032 (x199) Int)
(declare-fun x318 () Bool)
(declare-fun x851 () Int)
(declare-fun x462 () Int)
(declare-fun x1282 () Bool)
(declare-fun x1472 () x199)
(declare-fun x736 () Bool)
(declare-fun x1495 (x199) Int)
(declare-fun x1250 () x199)
(declare-fun x780 () Bool)
(declare-fun x1351 () Int)
(declare-fun x1524 () Int)
(declare-fun x1045 () x199)
(declare-fun x886 (Int) Int)
(declare-fun x583 () Bool)
(declare-fun x423 (Int) Int)
(declare-fun x1425 () Bool)
(declare-fun x1603 () Int)
(declare-fun x339 () Int)
(declare-fun x1033 () Int)
(declare-fun x640 () Bool)
(declare-fun x129 () Int)
(declare-fun x1362 () x199)
(declare-fun x364 () Int)
(declare-fun x1338 () Int)
(declare-fun x828 () x199)
(declare-fun x1340 () Bool)
(declare-fun x943 () Bool)
(declare-fun x909 () Bool)
(declare-fun x362 () Bool)
(declare-fun x1373 () Int)
(declare-fun x377 () Bool)
(declare-fun x435 () Bool)
(declare-fun x752 () Int)
(declare-fun x1599 () Bool)
(declare-fun x1103 () Int)
(declare-fun x338 () Int)
(declare-fun x1417 () x199)
(declare-fun x534 () Int)
(declare-fun x845 () Int)
(declare-fun x1256 () Int)
(declare-fun x1420 () Int)
(declare-fun x773 () Int)
(declare-fun x352 () Int)
(declare-fun x1596 () Int)
(declare-fun x1423 () Bool)
(declare-fun x1072 () Int)
(declare-fun x97 () Int)
(declare-fun x33 () Int)
(declare-fun x1403 () Int)
(declare-fun x574 () Bool)
(declare-fun x314 () Bool)
(declare-fun x120 () Int)
(declare-fun x409 () x199)
(declare-fun x136 () Bool)
(declare-fun x463 () Int)
(declare-fun x310 () Bool)
(declare-fun x701 () Int)
(declare-fun x941 () Int)
(declare-fun x1440 () Bool)
(declare-fun x1602 () Bool)
(declare-fun x693 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x297 () x199)
(declare-fun x968 () x199)
(declare-fun x16 () x199)
(declare-fun x524 () Int)
(declare-fun x795 () x199)
(declare-fun x1153 () Int)
(declare-fun x649 () Int)
(declare-fun x179 () Int)
(declare-fun x370 () Bool)
(declare-fun x1581 () Int)
(declare-fun x609 () Int)
(declare-fun x644 () x199)
(declare-fun x24 () Bool)
(declare-fun x806 () Bool)
(declare-fun x1407 () x199)
(declare-fun x79 () Int)
(declare-fun x384 (Int) Int)
(declare-fun x56 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x438 () Int)
(declare-fun x442 () Int)
(declare-fun x1428 () Bool)
(declare-fun x679 () Bool)
(declare-fun x1555 () Int)
(declare-fun x340 () Bool)
(declare-fun x331 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x28 () Int)
(declare-fun x375 () Int)
(declare-fun x356 () Int)
(declare-fun x850 () Bool)
(declare-fun x52 () Int)
(declare-fun x532 () Int)
(declare-fun x958 () Bool)
(declare-fun x1422 () Int)
(declare-fun x144 () Int)
(declare-fun x1145 () Int)
(declare-fun x1141 () Int)
(declare-fun x842 () Int)
(declare-fun x236 () Int)
(declare-fun x518 () Int)
(declare-fun x337 () Int)
(declare-fun x1148 () Int)
(declare-fun x866 () Bool)
(declare-fun x632 () Int)
(declare-fun x200 (x199) Int)
(declare-fun x835 () Bool)
(declare-fun x1442 () Int)
(declare-fun x309 () Bool)
(declare-fun x545 () x199)
(declare-fun x980 () x199)
(declare-fun x323 () Int)
(declare-fun x1061 (Int) Int)
(declare-fun x288 () x199)
(declare-fun x805 () Int)
(declare-fun x979 () Int)
(declare-fun x925 () Int)
(declare-fun x256 () Bool)
(declare-fun x290 () Int)
(declare-fun x68 () Bool)
(declare-fun x1558 () Int)
(declare-fun x1080 () Bool)
(declare-fun x439 () x199)
(declare-fun x401 () Bool)
(declare-fun x928 () Bool)
(declare-fun x265 () x199)
(declare-fun x1609 () x199)
(declare-fun x326 () Int)
(declare-fun x1443 () Int)
(declare-fun x1508 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x104 () Int)
(declare-fun x495 () Int)
(declare-fun x1459 () Bool)
(declare-fun x1124 () Bool)
(declare-fun x757 () Int)
(declare-fun x957 (Int) Int)
(declare-fun x469 () Int)
(declare-fun x197 () Int)
(declare-fun x398 () Bool)
(declare-fun x1479 () Int)
(declare-fun x311 () Int)
(declare-fun x623 () Bool)
(declare-fun x774 () Bool)
(declare-fun x1240 () Int)
(declare-fun x923 () x199)
(declare-fun x343 () Bool)
(declare-fun x954 () Bool)
(declare-fun x250 () x199)
(declare-fun x1606 () Int)
(declare-fun x720 () Int)
(declare-fun x1450 () Int)
(declare-fun x487 () x199)
(declare-fun x826 () Int)
(declare-fun x92 () Bool)
(declare-fun x551 () Int)
(declare-fun x1323 () Int)
(declare-fun x222 () Int)
(declare-fun x1526 () Bool)
(declare-fun x1530 () Int)
(declare-fun x176 (x199) Int)
(declare-fun x816 () Bool)
(declare-fun x993 () x199)
(declare-fun x1065 () Int)
(declare-fun x1044 () Bool)
(declare-fun x178 () Bool)
(declare-fun x1498 () x199)
(declare-fun x1244 () Bool)
(declare-fun x1533 () Int)
(declare-fun x1441 () x199)
(declare-fun x969 () Bool)
(declare-fun x789 () Int)
(declare-fun x537 () Bool)
(declare-fun x844 () Int)
(declare-fun x746 () Int)
(declare-fun x1152 () Int)
(declare-fun x1151 () Int)
(declare-fun x1545 () Int)
(declare-fun x251 () Bool)
(declare-fun x610 () x199)
(declare-fun x664 () Int)
(declare-fun x424 () Int)
(declare-fun x321 () Int)
(declare-fun x708 () Int)
(declare-fun x1400 () Int)
(declare-fun x1308 () Bool)
(declare-fun x597 () Int)
(declare-fun x347 () Int)
(declare-fun x307 () Int)
(declare-fun x675 () Bool)
(declare-fun x800 () Bool)
(declare-fun x1287 () Int)
(declare-fun x1546 () Int)
(declare-fun x1448 () Int)
(declare-fun x233 () Bool)
(declare-fun x766 () Int)
(declare-fun x453 () x199)
(declare-fun x152 () Int)
(declare-fun x1175 () Int)
(declare-fun x3 () x199)
(declare-fun x294 () Bool)
(declare-fun x42 () Bool)
(declare-fun x128 () Bool)
(declare-fun x121 (x199) Int)
(declare-fun x36 () Bool)
(declare-fun x1306 () Int)
(declare-fun x69 () Bool)
(declare-fun x738 () Bool)
(declare-fun x634 () Bool)
(declare-fun x660 () Int)
(declare-fun x638 () Int)
(declare-fun x372 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x515 () Bool)
(declare-fun x15 () Int)
(declare-fun x677 () Int)
(declare-fun x1207 () Int)
(declare-fun x400 () Int)
(declare-fun x1399 () Bool)
(declare-fun x165 () x199)
(declare-fun x1115 () Int)
(declare-fun x1593 () Int)
(declare-fun x499 () Bool)
(declare-fun x976 () Int)
(declare-fun x1299 () Int)
(declare-fun x365 () Int)
(declare-fun x685 () x199)
(declare-fun x1471 () Int)
(declare-fun x1094 () Bool)
(declare-fun x1358 () x199)
(declare-fun x153 () Int)
(declare-fun x1168 () x199)
(declare-fun x1398 () Int)
(declare-fun x1522 () Bool)
(declare-fun x383 () Int)
(declare-fun x1534 () Int)
(declare-fun x618 () x199)
(declare-fun x1507 () Int)
(declare-fun x1235 () Int)
(declare-fun x572 () x199)
(declare-fun x12 () x199)
(declare-fun x1346 () x199)
(declare-fun x479 () Int)
(declare-fun x1121 () Bool)
(declare-fun x49 (Int) Int)
(declare-fun x790 () Int)
(declare-fun x23 () Bool)
(declare-fun x782 () Bool)
(declare-fun x841 () x199)
(declare-fun x1078 () Int)
(declare-fun x525 () Int)
(declare-fun x653 () Int)
(declare-fun x1140 () Int)
(declare-fun x148 () Int)
(declare-fun x1272 () Int)
(declare-fun x421 () Bool)
(declare-fun x444 () Int)
(declare-fun x1348 () x199)
(declare-fun x788 () Bool)
(declare-fun x630 () Int)
(declare-fun x614 () Int)
(declare-fun x539 () Bool)
(declare-fun x248 () Int)
(declare-fun x143 () x199)
(declare-fun x811 () Int)
(declare-fun x1352 () x199)
(declare-fun x725 () x199)
(declare-fun x252 () Int)
(declare-fun x798 () Int)
(declare-fun x1343 () Int)
(declare-fun x588 () Int)
(declare-fun x1328 () Bool)
(declare-fun x1310 () Int)
(declare-fun x1418 () Int)
(declare-fun x792 () Bool)
(declare-fun x225 () Bool)
(declare-fun x168 () Int)
(declare-fun x1204 () Bool)
(declare-fun x287 () Int)
(declare-fun x1093 () Int)
(declare-fun x205 () Int)
(declare-fun x1325 () Bool)
(declare-fun x1051 () x199)
(declare-fun x1549 () Bool)
(declare-fun x413 () Int)
(declare-fun x988 () Bool)
(declare-fun x346 () Int)
(declare-fun x1292 () Int)
(declare-fun x910 () x199)
(declare-fun x157 () Int)
(declare-fun x742 () Bool)
(declare-fun x603 () Int)
(declare-fun x1375 () Bool)
(declare-fun x581 () x199)
(declare-fun x691 () Int)
(declare-fun x1607 () Bool)
(declare-fun x17 () Int)
(declare-fun x451 () Int)
(declare-fun x1076 () Int)
(declare-fun x818 () Int)
(declare-fun x1433 () Int)
(declare-fun x1144 () x199)
(declare-fun x629 () x199)
(declare-fun x459 (Int) Int)
(declare-fun x971 () Bool)
(declare-fun x1540 () x199)
(declare-fun x1212 () x199)
(declare-fun x522 () x199)
(declare-fun x1224 () Int)
(declare-fun x1434 () Int)
(declare-fun x821 () Int)
(declare-fun x390 () x199)
(declare-fun x743 () Int)
(declare-fun x1392 () Int)
(declare-fun x855 () Int)
(declare-fun x620 () Int)
(declare-fun x894 () Int)
(declare-fun x1320 () Int)
(declare-fun x740 () x199)
(declare-fun x824 () Int)
(declare-fun x776 () Bool)
(declare-fun x926 () Int)
(declare-fun x441 () x199)
(declare-fun x447 () Bool)
(declare-fun x274 () Int)
(declare-fun x645 () Int)
(declare-fun x1371 (x199) Int)
(declare-fun x647 () Int)
(declare-fun x1029 () Bool)
(declare-fun x394 () Int)
(declare-fun x517 () x199)
(declare-fun x942 () Int)
(declare-fun x749 () Bool)
(declare-fun x44 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x1226 () Int)
(declare-fun x1574 () Int)
(declare-fun x9 () Int)
(declare-fun x995 () Bool)
(declare-fun x1393 () Int)
(declare-fun x729 () x199)
(declare-fun x590 () Int)
(declare-fun x978 () Int)
(declare-fun x1088 () Int)
(declare-fun x53 () Int)
(declare-fun x698 () x199)
(declare-fun x847 () Int)
(declare-fun x1008 () Int)
(declare-fun x1002 () Int)
(declare-fun x696 () Int)
(declare-fun x707 () Int)
(declare-fun x1397 () x199)
(declare-fun x221 () x199)
(declare-fun x1493 () Int)
(declare-fun x1122 () Int)
(declare-fun x99 (x199) Int)
(declare-fun x893 () Int)
(declare-fun x228 () Int)
(declare-fun x594 () Int)
(declare-fun x111 () Int)
(declare-fun x557 () x199)
(declare-fun x787 () Int)
(declare-fun x1361 () Int)
(declare-fun x915 () Bool)
(declare-fun x737 () Bool)
(declare-fun x101 () Int)
(declare-fun x334 () Int)
(declare-fun x1127 () Int)
(declare-fun x1086 () Int)
(declare-fun x1566 () x199)
(declare-fun x1570 () Int)
(declare-fun x125 (x199) Int)
(declare-fun x368 () Bool)
(declare-fun x505 () Int)
(declare-fun x396 () Int)
(declare-fun x389 () Int)
(declare-fun x674 () Int)
(declare-fun x19 () Int)
(declare-fun x1577 () x199)
(declare-fun x901 () Int)
(declare-fun x1494 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x502 () Int)
(declare-fun x815 () Int)
(declare-fun x802 () Bool)
(declare-fun x571 () Int)
(declare-fun x482 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x1181 () Int)
(declare-fun x436 () Int)
(declare-fun x944 () x199)
(declare-fun x1052 () Int)
(declare-fun x450 () Int)
(declare-fun x1396 () Int)
(declare-fun x1280 () Int)
(declare-fun x426 () Int)
(declare-fun x612 () Int)
(declare-fun x872 () Int)
(declare-fun x939 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x95 () x199)
(declare-fun x1071 () x199)
(declare-fun x264 () Int)
(declare-fun x940 () Bool)
(declare-fun x1170 () Int)
(declare-fun x1288 () Int)
(declare-fun x161 () x199)
(declare-fun x1046 () Int)
(declare-fun x20 () x199)
(declare-fun x713 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x253 () Int)
(declare-fun x1463 () Bool)
(declare-fun x832 () Bool)
(declare-fun x982 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x1263 () x199)
(declare-fun x416 () Bool)
(declare-fun x402 () Bool)
(declare-fun x724 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x206 () Bool)
(declare-fun x18 () Int)
(declare-fun x1162 () x199)
(declare-fun x131 (Int) Int)
(declare-fun x1117 () Int)
(declare-fun x888 () Bool)
(declare-fun x50 () Bool)
(declare-fun x371 () x199)
(declare-fun x1163 () Int)
(declare-fun x278 () Int)
(declare-fun x540 () Bool)
(declare-fun x1391 () Int)
(declare-fun x535 () Int)
(declare-fun x291 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x196 () Bool)
(declare-fun x232 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x1576 () Int)
(declare-fun x427 () Bool)
(declare-fun x728 () Int)
(declare-fun x906 () Int)
(declare-fun x1137 () Int)
(declare-fun x257 () Int)
(declare-fun x1387 (x199) Int)
(declare-fun x804 () x199)
(declare-fun x1269 () Int)
(declare-fun x1047 () Int)
(declare-fun x765 () x199)
(declare-fun x919 () x199)
(declare-fun x852 () Bool)
(declare-fun x1192 () Bool)
(declare-fun x625 () Bool)
(declare-fun x1370 (Int) Int)
(declare-fun x351 () Bool)
(declare-fun x587 () Bool)
(declare-fun x146 () Bool)
(declare-fun x78 () Int)
(declare-fun x1454 () Int)
(declare-fun x1251 () x199)
(declare-fun x1510 () Bool)
(declare-fun x617 () x199)
(declare-fun x945 () Int)
(declare-fun x188 () Bool)
(declare-fun x71 () Int)
(declare-fun x1419 () Bool)
(declare-fun x1296 () Int)
(declare-fun x1468 () Bool)
(declare-fun x1307 () Int)
(declare-fun x133 () Bool)
(declare-fun x312 () Bool)
(declare-fun x1171 () Int)
(declare-fun x974 () Int)
(declare-fun x1231 () x199)
(declare-fun x890 () Int)
(declare-fun x1550 () Bool)
(declare-fun x1159 (Int) Int)
(declare-fun x1421 () Bool)
(declare-fun x791 () Int)
(declare-fun x429 () Bool)
(declare-fun x1201 () x199)
(declare-fun x62 () Bool)
(declare-fun x363 () Int)
(declare-fun x31 () Int)
(declare-fun x1054 () Int)
(declare-fun x1206 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x558 () x199)
(declare-fun x853 () Int)
(declare-fun x566 (x199) Int)
(declare-fun x140 () Bool)
(declare-fun x1600 () Int)
(declare-fun x1 () Int)
(declare-fun x1314 () Bool)
(declare-fun x1160 () Int)
(declare-fun x662 () Int)
(declare-fun x633 () Int)
(declare-fun x261 () Int)
(declare-fun x452 () Bool)
(declare-fun x1187 () Int)
(declare-fun x987 (x199) Int)
(declare-fun x1485 () Int)
(declare-fun x689 () x199)
(declare-fun x183 () x199)
(declare-fun x1220 () Int)
(declare-fun x103 () Int)
(declare-fun x1444 () Bool)
(declare-fun x37 () Int)
(declare-fun x271 () Int)
(declare-fun x304 () x199)
(declare-fun x897 () Int)
(declare-fun x1449 () Bool)
(declare-fun x970 () Int)
(declare-fun x269 () Int)
(declare-fun x874 () Int)
(declare-fun x1595 () x199)
(declare-fun x861 () Int)
(declare-fun x244 () Int)
(declare-fun x1277 () x199)
(declare-fun x1582 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x281 () x199)
(declare-fun x744 () Int)
(declare-fun x164 () Int)
(declare-fun x1584 () Bool)
(declare-fun x1270 () Int)
(declare-fun x1587 () x199)
(declare-fun x1568 () x199)
(declare-fun x88 () Int)
(declare-fun x1341 () Bool)
(declare-fun x270 () Bool)
(declare-fun x74 () Bool)
(declare-fun x296 () Int)
(declare-fun x464 () Int)
(declare-fun x779 () Int)
(declare-fun x81 () Int)
(declare-fun x468 () Int)
(declare-fun x1165 () Bool)
(declare-fun x702 () Int)
(declare-fun x1014 () Int)
(declare-fun x985 () Bool)
(declare-fun x903 () Bool)
(declare-fun x975 () Int)
(declare-fun x1490 () Int)
(declare-fun x582 (Int) x199)
(declare-fun x1183 () Int)
(declare-fun x646 () Int)
(declare-fun x628 () Int)
(declare-fun x322 () Int)
(declare-fun x1230 () x199)
(declare-fun x570 () x199)
(declare-fun x51 () Int)
(declare-fun x30 () x199)
(declare-fun x697 () Int)
(declare-fun x67 () x199)
(declare-fun x1542 () Int)
(declare-fun x1458 () x199)
(declare-fun x1462 () Int)
(declare-fun x393 () Int)
(declare-fun x142 () Int)
(declare-fun x1273 () x199)
(declare-fun x1087 () Int)
(declare-fun x990 () Int)
(declare-fun x1221 () Int)
(declare-fun x328 () x199)
(declare-fun x198 () Bool)
(declare-fun x1284 () Int)
(declare-fun x150 () Bool)
(declare-fun x1369 () Int)
(declare-fun x1610 (Int) Int)
(declare-fun x283 () x199)
(declare-fun x341 () x199)
(declare-fun x700 () x199)
(declare-fun x1590 () Int)
(declare-fun x977 () Int)
(declare-fun x1359 () Bool)
(declare-fun x706 () Int)
(declare-fun x1285 () x199)
(declare-fun x1319 (Int) Int)
(declare-fun x1567 () Int)
(declare-fun x1229 () Bool)
(declare-fun x1598 () Int)
(declare-fun x1120 () x199)
(declare-fun x1559 () Int)
(declare-fun x61 () Bool)
(declare-fun x952 () Int)
(declare-fun x584 () x199)
(declare-fun x404 (Int) Int)
(declare-fun x492 () Int)
(declare-fun x268 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x238 () Int)
(declare-fun x1289 () Int)
(declare-fun x916 () x199)
(declare-fun x255 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x972 () Int)
(declare-fun x1481 () Bool)
(declare-fun x585 () x199)
(declare-fun x694 () Int)
(declare-fun x305 () Int)
(declare-fun x1099 () Int)
(declare-fun x1601 () Int)
(declare-fun x1083 () Int)
(declare-fun x602 () Bool)
(declare-fun x501 () Bool)
(declare-fun x1377 () Int)
(declare-fun x741 () x199)
(declare-fun x914 () x199)
(declare-fun x213 () Bool)
(declare-fun x656 () Int)
(declare-fun x777 () x199)
(declare-fun x908 () Int)
(declare-fun x1556 () Int)
(declare-fun x344 () Bool)
(declare-fun x249 () Bool)
(declare-fun x353 () Bool)
(declare-fun x1528 () x199)
(declare-fun x1001 () Bool)
(declare-fun x936 () Bool)
(declare-fun x1334 () Int)
(declare-fun x22 () Int)
(declare-fun x668 () Int)
(declare-fun x710 () Int)
(declare-fun x449 () Int)
(declare-fun x498 () Int)
(declare-fun x1336 () Int)
(declare-fun x410 () Int)
(declare-fun x93 () Bool)
(declare-fun x218 () x199)
(declare-fun x929 () Bool)
(declare-fun x622 () Bool)
(declare-fun x158 () Bool)
(declare-fun x412 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x833 () Bool)
(declare-fun x1544 () Int)
(declare-fun x189 () Int)
(declare-fun x962 () Int)
(declare-fun x577 () Bool)
(declare-fun x217 () x199)
(declare-fun x1506 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x1565 () Int)
(declare-fun x77 () Bool)
(declare-fun x1475 () x199)
(declare-fun x440 () x199)
(declare-fun x552 () Int)
(declare-fun x912 () Int)
(declare-fun x354 () Int)
(declare-fun x7 () Bool)
(declare-fun x1395 () Int)
(declare-fun x1453 () Bool)
(declare-fun x1579 () Int)
(declare-fun x526 () Int)
(declare-fun x1090 () Int)
(declare-fun x555 () Bool)
(declare-fun x1401 () Int)
(declare-fun x474 () Bool)
(declare-fun x1339 () Int)
(declare-fun x1257 () Int)
(declare-fun x553 () Bool)
(declare-fun x1129 () Int)
(declare-fun x433 () Int)
(declare-fun x1376 () Int)
(declare-fun x173 () x199)
(declare-fun x1365 () Int)
(declare-fun x820 () Int)
(declare-fun x1027 () Bool)
(declare-fun x848 () Int)
(declare-fun x223 () Int)
(declare-fun x739 () Bool)
(declare-fun x425 () Bool)
(declare-fun x719 () Int)
(declare-fun x184 () Int)
(declare-fun x1136 () Bool)
(declare-fun x735 () x199)
(declare-fun x1018 () Int)
(declare-fun x1252 () Bool)
(declare-fun x1511 () Int)
(declare-fun x544 () Bool)
(declare-fun x860 () Bool)
(declare-fun x898 () Int)
(declare-fun x1470 () Int)
(declare-fun x533 () x199)
(declare-fun x1367 () Bool)
(declare-fun x1275 () Int)
(declare-fun x273 () x199)
(declare-fun x673 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x434 () x199)
(declare-fun x756 () x199)
(declare-fun x1195 () Int)
(declare-fun x1074 () Int)
(declare-fun x1353 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x1429 () Int)
(declare-fun x1372 () Int)
(declare-fun x98 () Bool)
(declare-fun x1101 () x199)
(declare-fun x541 () Int)
(declare-fun x951 () Bool)
(declare-fun x589 () Bool)
(declare-fun x1436 () Int)
(declare-fun x1412 () Bool)
(declare-fun x207 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x446 () Int)
(declare-fun x1405 () Bool)
(declare-fun x854 () Bool)
(declare-fun x884 (Int) Int)
(declare-fun x902 () Int)
(declare-fun x1073 () x199)
(declare-fun x938 () Bool)
(declare-fun x1015 () x199)
(declare-fun x262 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x477 () Int)
(define-fun x904 ((x199 x199) (x882 Int)) x199 (ite ((_ is x45) x199) (x45 (x100 x199) (+ (x605 x199) x882)) (ite ((_ is x1177) x199) (x1177 (x1279 x199) (x1452 x199) (+ x882 (x201 x199))) (x511 (+ (x754 x199) x882)))))
(define-fun x808 ((x448 Int)) Int (ite (and (>= x448 0) (< x448 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x448 (- x448 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x212 ((x448 Int)) Int (ite (and (< x448 0) (>= x448 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x448 115792089237316195423570985008687907853269984665640564039457584007913129639936) x448))
(define-fun x891 ((x643 Int)) Bool (and (>= x643 0) (< x643 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1527 ((x643 Int)) Bool (and (= x643 (x317 x643 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x643 (x317 115792089237316195423570985008687907853269984665640564039457584007913129639935 x643))))
(define-fun x527 ((x643 Int)) Bool (and (= (x317 0 x643) 0) (= 0 (x317 x643 0))))
(define-fun x478 ((x643 Int)) Bool (= x643 (x317 x643 x643)))
(define-fun x1003 ((x643 Int)) Bool (and (x527 x643) (x478 x643) (x1527 x643)))
(define-fun x1107 ((x643 Int)) Bool (= (x317 1461501637330902918203684832716283019655932542975 x643) (x317 1461501637330902918203684832716283019655932542975 (x317 1461501637330902918203684832716283019655932542975 x643))))
(define-fun x460 ((x643 Int)) Bool (=> (and (< x643 1461501637330902918203684832716283019655932542976) (>= x643 0)) (= (x317 1461501637330902918203684832716283019655932542975 x643) x643)))
(define-fun x308 ((x643 Int)) Bool (=> (= (x317 1461501637330902918203684832716283019655932542975 x643) x643) (and (<= 0 x643) (> 1461501637330902918203684832716283019655932542976 x643))))
(define-fun x224 ((x643 Int)) Bool (=> (and (< x643 2923003274661805836407369665432566039311865085952) (>= x643 1461501637330902918203684832716283019655932542976)) (= (- x643 1461501637330902918203684832716283019655932542976) (x317 1461501637330902918203684832716283019655932542975 x643))))
(define-fun x1356 ((x643 Int) (x1329 Int)) Bool (and (= x643 (+ (* x1329 1461501637330902918203684832716283019655932542976) (x317 1461501637330902918203684832716283019655932542975 x643))) (<= 0 x1329)))
(define-fun x1531 ((x643 Int) (x604 Int)) Bool (and (x460 x643) (x1356 x643 x604) (x224 x643) (x1107 x643) (x308 x643)))
(define-fun x488 ((x643 Int) (x1329 Int)) Bool (= (x317 x643 x1329) (x317 x1329 x643)))
(define-fun x167 ((x643 Int) (x1329 Int)) Bool (and (=> (<= 0 x643) (<= (x317 x643 x1329) x643)) (>= (x317 x643 x1329) 0) (=> (>= x1329 0) (<= (x317 x643 x1329) x1329))))
(define-fun x360 ((x643 Int) (x1329 Int)) Bool (and (x167 x643 x1329) (x488 x643 x1329)))
(define-fun x705 ((x643 Int) (x604 Int)) Bool (and (x360 x643 1461501637330902918203684832716283019655932542975) (x1531 x643 x604)))
(define-fun x1591 ((x643 Int)) Bool (= (x317 26959946667150639794667015087019630673637144422540572481103610249215 x643) (x317 26959946667150639794667015087019630673637144422540572481103610249215 (x317 26959946667150639794667015087019630673637144422540572481103610249215 x643))))
(define-fun x1062 ((x643 Int)) Bool (=> (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x643) (>= x643 0)) (= x643 (x317 26959946667150639794667015087019630673637144422540572481103610249215 x643))))
(define-fun x94 ((x643 Int)) Bool (=> (= (x317 26959946667150639794667015087019630673637144422540572481103610249215 x643) x643) (and (>= x643 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x643))))
(define-fun x303 ((x643 Int)) Bool (=> (and (< x643 53919893334301279589334030174039261347274288845081144962207220498432) (<= 26959946667150639794667015087019630673637144422540572481103610249216 x643)) (= (- x643 26959946667150639794667015087019630673637144422540572481103610249216) (x317 26959946667150639794667015087019630673637144422540572481103610249215 x643))))
(define-fun x115 ((x643 Int) (x1329 Int)) Bool (and (<= 0 x1329) (= x643 (+ (* x1329 26959946667150639794667015087019630673637144422540572481103610249216) (x317 26959946667150639794667015087019630673637144422540572481103610249215 x643)))))
(define-fun x1445 ((x643 Int) (x604 Int)) Bool (and (x1591 x643) (x115 x643 x604) (x1062 x643) (x303 x643) (x94 x643)))
(define-fun x1011 ((x643 Int) (x604 Int)) Bool (and (x1445 x643 x604) (x360 x643 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x598 ((x643 Int)) Bool (= (x317 115792089237316195423570985008687907853269984665640564039457584007913129639904 x643) (x317 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x317 115792089237316195423570985008687907853269984665640564039457584007913129639904 x643))))
(define-fun x1333 ((x643 Int)) Bool (=> (and (<= 0 x643) (> 32 x643)) (= (x317 115792089237316195423570985008687907853269984665640564039457584007913129639904 x643) 0)))
(define-fun x682 ((x643 Int) (x1329 Int) (x601 Int) (x1209 Int)) Bool (and (<= 0 x1209) (< x1209 1) (= (* x601 32) (x317 115792089237316195423570985008687907853269984665640564039457584007913129639904 x643)) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1209) x1329 (* 32 x601)) x643) (< x1329 32) (>= x601 0) (< x601 3618502788666131106986593281521497120414687020801267626233049500247285301248) (>= x1329 0)))
(define-fun x1431 ((x643 Int) (x1058 Int) (x658 Int) (x667 Int)) Bool (and (x598 x643) (x1333 x643) (x682 x643 x1058 x658 x667)))
(define-fun x699 ((x643 Int) (x1058 Int) (x658 Int) (x667 Int)) Bool (and (x360 x643 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1431 x643 x1058 x658 x667)))
(define-fun x1084 ((x272 Int)) Int (x652 x272))
(define-fun x1009 ((x272 Int)) Int (ite (= x272 128) x526 (x984 x272)))
(define-fun x1301 ((x272 Int)) Int (ite (and (<= 160 x272) (< x272 (+ x1118 160))) (x652 (+ (- x272 160) x668)) (x1009 x272)))
(define-fun x1455 ((x272 Int)) Int (ite (= x463 x272) 0 (x1301 x272)))
(define-fun x873 ((x272 Int)) Int (ite (and (>= x272 x979) (> (+ x88 x979) x272)) (x652 (+ (- x272 x979) x1187)) (x219 x272)))
(define-fun x1426 ((x272 x199)) Int (ite (= x636 x272) x966 (x987 x272)))
(define-fun x174 ((x272 x199)) Int (ite (= x500 x272) x966 (x987 x272)))
(define-fun x1604 ((x272 x199)) Int (ite (= x1110 x272) x966 (x1063 x272)))
(define-fun x1217 ((x272 x199)) Int (ite (= x143 x272) x966 (x1063 x272)))
(define-fun x75 ((x272 x199)) Int (ite (and x398 x860) (x1063 x272) (ite (and x583 x592) (x987 x272) (ite (and (not x447) x344) (x1604 x272) (x1217 x272)))))
(define-fun x989 ((x272 x199)) Int (ite (= x272 x881) x966 (x1278 x272)))
(define-fun x994 ((x272 x199)) Int (ite (= x1498 x272) x966 (x1278 x272)))
(define-fun x1210 ((x272 x199)) Int (ite (= x272 x685) x966 (x1278 x272)))
(define-fun x684 ((x272 x199)) Int (ite (= x272 x6) x966 (x1387 x272)))
(define-fun x793 ((x272 x199)) Int (ite (= x272 x1215) x966 (x1387 x272)))
(define-fun x1500 ((x272 x199)) Int (ite (= x272 x1326) x966 (x1387 x272)))
(define-fun x279 ((x272 x199)) Int (ite (and x398 x860) (x1387 x272) (ite (and x583 x592) (x1278 x272) (ite (and (not x309) (not x378) x431) (x684 x272) (ite (and x431 (not x378) x309) (x793 x272) (x1500 x272))))))
(define-fun x1304 ((x272 x199)) Int (ite (= x272 x557) x405 (x125 x272)))
(define-fun x712 ((x272 x199)) Int (ite (= x272 x1231) x614 (x1167 x272)))
(define-fun x1467 ((x272 x199)) Int (ite (and (not x447) x344) (x712 x272) (x1167 x272)))
(define-fun x139 ((x272 x199)) Int (ite (and x860 x398) (x1167 x272) (ite (and x583 x592) (x125 x272) (x1467 x272))))
(define-fun x1020 ((x272 x199)) Int (ite (= x1263 x272) x144 (x1102 x272)))
(define-fun x282 ((x272 x199)) Int (ite (= x545 x272) x1260 (x121 x272)))
(define-fun x1295 ((x272 x199)) Int (ite (and (not x378) (not x309) x431) (x282 x272) (x121 x272)))
(define-fun x1023 ((x272 x199)) Int (ite (and x398 x860) (x121 x272) (ite (and x583 x592) (x1102 x272) (x1295 x272))))
(define-fun x1564 ((x272 x199)) Int (ite (= x272 x250) x902 (x1032 x272)))
(define-fun x1505 ((x272 x199)) Int (ite (= x795 x272) x759 (x99 x272)))
(define-fun x1332 ((x272 x199)) Int (ite (and x860 x398) (x1313 x272) (ite (and x592 x583) (x937 x272) (ite (and x1380 (not x822) x344 (not x141)) (x99 x272) (ite (and x344 (not x822) (not x1380)) (x1313 x272) (ite (and x822 x344) (x1313 x272) (x1505 x272)))))))
(define-fun x1512 ((x272 Int)) Int (ite (= x272 x975) x266 (x711 x272)))
(define-fun x34 ((x272 Int)) Int (ite (= x272 x706) x645 (x1512 x272)))
(define-fun x1143 ((x272 Int)) Int (ite (and x539 x171) (x711 x272) (x34 x272)))
(define-fun x241 ((x272 Int)) Int (ite (= x272 x290) x1470 (x1143 x272)))
(define-fun x595 ((x272 Int)) Int (ite (= x1270 x272) x1534 (x1159 x272)))
(define-fun x1360 ((x272 Int)) Int (ite (= x64 x272) x887 (x886 x272)))
(define-fun x359 ((x272 Int)) Int (ite (= x272 x82) x469 (x1360 x272)))
(define-fun x722 ((x272 Int)) Int (ite (and (not x309) x431 (not x378)) (x359 x272) (ite (and x431 (not x378) x309) (x359 x272) (x886 x272))))
(define-fun x481 ((x272 x199)) Int (ite (= x272 x629) x518 (x566 x272)))
(define-fun x1575 ((x272 x199)) Int (ite (and x151 x521) (x566 x272) (x481 x272)))
(define-fun x688 ((x272 x199)) Int (ite (= x272 x95) x486 (x200 x272)))
(define-fun x681 ((x272 x199)) Int (ite (and x539 x92) (x200 x272) (x688 x272)))
(define-fun x80 ((x272 Int)) Int (ite (= x853 x272) x1410 (x722 x272)))
(define-fun x1039 ((x272 Int)) Int (ite (= x84 x272) x927 (x504 x272)))
(define-fun x1241 ((x272 Int)) Int (ite (and x860 x398) (x886 x272) (ite (and x592 x583) (x711 x272) (ite (and x1380 x344 (not x141) (not x822)) (x504 x272) (ite (and (not x822) x344 (not x1380)) (x1610 x272) (ite (and x822 x344) (x1610 x272) (x1039 x272)))))))
(define-fun x1447 ((x272 Int)) Int (ite (= x272 x1570) x1014 (x1241 x272)))
(define-fun x726 ((x272 Int)) Int (ite (= x272 x102) x1567 (x1447 x272)))
(define-fun x117 ((x272 Int)) Int (ite (= x272 x948) x498 (x726 x272)))
(define-fun x1538 ((x272 Int)) Int (ite (= x220 x272) x1484 (x117 x272)))
(define-fun x1155 ((x272 Int)) Int (ite (= x272 x1482) 32 (x1538 x272)))
(define-fun x391 ((x272 Int)) Int (ite (= x272 x1598) x1147 (x957 x272)))
(define-fun x1059 ((x272 Int)) Int (ite (= x272 x406) 0 (x49 x272)))
(define-fun x1563 ((x272 Int)) Int (ite (= x272 0) 1 (x1012 x272)))
(define-fun x1529 ((x272 Int)) Int (ite (= 0 x272) 1 (x1012 x272)))
(define-fun x529 ((x272 Int)) Int (ite (and x1030 x194) (x1563 x272) (x1529 x272)))
(define-fun x813 ((x272 Int)) Int (ite (= x1075 x272) x1269 (x404 x272)))
(define-fun x709 ((x272 Int)) Int (ite (= x272 x1075) x1460 (x404 x272)))
(define-fun x1497 ((x272 Int)) Int (ite (= x1075 x272) x552 (x1180 x272)))
(define-fun x715 ((x272 Int)) Int (ite (and (>= x272 x862) (< x272 (+ x862 x552))) (x529 (+ 0 (- x272 x862))) (x1497 x272)))
(define-fun x569 ((x272 Int)) Int (ite (and (not x1106) x985) (x715 x272) (x1180 x272)))
(define-fun x864 ((x272 Int)) Int (ite (= x433 x272) x170 (x569 x272)))
(define-fun x616 ((x272 Int)) Int (ite (= x272 x1493) x1546 (x864 x272)))
(define-fun x181 ((x272 Int)) Int (ite (= x1392 x272) x826 (x616 x272)))
(define-fun x1520 ((x272 Int)) Int (ite (= x272 x766) x925 (x181 x272)))
(define-fun x1021 ((x272 Int)) Int (ite (= x1456 x272) 32 (x1520 x272)))
(define-fun x717 ((x272 Int)) Int (ite (= x272 x267) x730 (x327 x272)))
(define-fun x1254 ((x272 Int)) Int (ite (= x272 x551) 0 (x131 x272)))
(define-fun x560 ((x272 x199)) Int (ite (= x272 (x582 274184521717934524641157099916833587206)) x941 (x176 x272)))
(define-fun x379 ((x272 x199)) Int (ite (= (x582 x1166) x272) x1195 (x560 x272)))
(define-fun x1028 ((x272 x199)) Int (ite (= (x582 x1166) x272) x228 (x379 x272)))
(define-fun x1233 ((x272 x199)) Int (ite (= (x582 274184521717934524641157099916833587206) x272) x1343 (x1028 x272)))
(define-fun x1357 ((x272 x199)) Int (ite (= (x582 274184521717934524641157099916833587206) x272) x298 (x1233 x272)))
(define-fun x386 ((x272 x199)) Int (ite (= x272 (x582 x731)) x414 (x1357 x272)))
(define-fun x1342 ((x272 x199)) Int (ite (= x272 x644) x586 (x1371 x272)))
(define-fun x11 ((x272 x199)) Int (ite (= x272 x1321) x1179 (x1342 x272)))
(define-fun x1605 ((x272 x199)) Int (ite (and x1030 x194) (x11 x272) (x1371 x272)))
(define-fun x723 ((x272 x199)) Int (ite (= x272 x1031) x436 (x1605 x272)))
(define-fun x809 ((x272 Int)) Int (ite (= 0 x272) 1 (x1061 x272)))
(define-fun x301 ((x272 Int)) Int (ite (= x767 x272) x1533 (x884 x272)))
(define-fun x191 ((x272 x199)) Int (ite (= x272 x369) x1589 (x1255 x272)))
(define-fun x1355 ((x272 x199)) Int (ite (= x953 x272) x611 (x191 x272)))
(define-fun x1378 ((x272 x199)) Int (ite (and x1030 x194) (x1255 x272) (x1355 x272)))
(define-fun x1258 ((x272 x199)) Int (ite (= x650 x272) x330 (x1378 x272)))
(define-fun x1350 ((x272 Int)) Int (ite (= 0 x272) 1 (x1061 x272)))
(define-fun x758 ((x272 Int)) Int (ite (= x767 x272) x1249 (x884 x272)))
(define-fun x1435 ((x272 Int)) Int (ite (and x832 x833) (x809 x272) (x1350 x272)))
(define-fun x8 ((x272 x199)) Int (ite (= (x582 x731) x272) x364 (x386 x272)))
(define-fun x657 ((x272 Int)) Int (ite (= x767 x272) x1049 (x423 x272)))
(define-fun x1108 ((x272 Int)) Int (ite (and (<= x354 x272) (> (+ x354 x1049) x272)) (x1435 (+ (- x272 x354) 0)) (x657 x272)))
(define-fun x1294 ((x272 Int)) Int (ite (and x312 x1211) (x423 x272) (x1108 x272)))
(define-fun x751 ((x643 Int)) Bool (=> (and (not (= 18446744073709551615 x643)) (not (= x643 2835717307)) (not (= x643 2690754053)) (not (= x643 2743102681)) (not (= 649617121 x643)) (not (= x643 1889567281)) (not (= 69947311 x643)) (not (= x643 115792089237316195423570985008687907853269984665640564039457)) (not (= 142201243 x643)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x643)) (not (= 2293535753 x643)) (not (= 826074471 x643)) (not (= x643 87118632)) (not (= x643 2532887486)) (not (= 274184521717934524641157099916833587206 x643)) (not (= 2061678023 x643)) (not (= x643 2512682246)) (not (= 2418364589 x643)) (not (= x643 468353030)) (not (= 1968616202 x643)) (not (= 2939843472 x643)) (not (= 2211524764 x643)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x643)) (not (= 274184521717934524641157099916833587218 x643)) (not (= 2764855426 x643)) (not (= 2258409472 x643)) (not (= x643 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 2514000705 x643)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x643)) (not (= x643 759532456)) (not (= 1000000000000000000 x643)) (not (= x643 274184521717934524641157099916833587214)) (not (= 635128645 x643)) (not (= 604800 x643)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x643)) (not (= 2960351575 x643)) (not (= 2868243304 x643)) (not (= x643 2798343961)) (> x643 10000) (not (= 911411945 x643)) (not (= x643 1986467848)) (not (= x643 1461501637330902918203684832716283019655932542975))) (not ((_ is x511) (x582 x643)))))
(assert (x891 x1454))
(assert (x751 x1429))
(assert (= (x404 x442) (ite (and x206 (not x1324) x36) (x49 x442) (x1059 x442))))
(assert (x751 x156))
(assert (x891 x1542))
(assert (x891 x380))
(assert (x891 x84))
(assert (x891 x761))
(assert (= x1325 x865))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x465 (x511 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= (x1159 x63) (ite (= x63 x590) x791 (x459 x63))))
(assert (= (ite (and x151 x512 (not x615) (not x137)) (x1032 x795) (ite (and x151 (not x615) (not x512)) (x937 x795) (ite (and x151 x615) (x937 x795) (x1564 x795)))) (x1313 x795)))
(assert (x891 x1580))
(assert (= (x465 (x511 2061678023)) 2061678023))
(assert (= x1085 (=> (= 0 x193) x992)))
(assert (= (x465 (x511 2798343961)) 2798343961))
(assert (= (=> (and (= (x1177 (x582 x326) x1577 0) x284) (= x326 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= (x317 1461501637330902918203684832716283019655932542975 x701) x799) (= (= 0 x970) x1316) (= (x1387 x284) x970) (>= x970 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x970) (= x1101 (x1177 (x582 x1434) (x511 7) 0)) (= (x1177 (x582 x799) x1101 0) x1577)) (and (=> (and (= x1434 x894) (not x1316)) x515) (=> x1316 x1327))) x850))
(assert (x891 x1186))
(assert (= (ite (= x1268 x238) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x238)) (x1370 x238)))
(assert (x891 x1049))
(assert (x751 x177))
(assert (= (x984 x1131) 0))
(assert (x891 x1048))
(assert (x891 x1088))
(assert (= (x582 2293535753) (x511 2293535753)))
(assert (= (x459 x134) (ite (= x134 x430) x907 (x241 x134))))
(assert (x891 x122))
(assert (x891 x767))
(assert (x891 x397))
(assert (= (ite (and x964 x1305) (x219 x220) (x873 x220)) (x711 x220)))
(assert (= x261 (x465 (x582 x261))))
(assert (x751 x18))
(assert (= x676 (x465 (x582 x676))))
(assert (x891 x867))
(assert (x891 x1055))
(assert (= x244 (x465 (x582 x244))))
(assert (x891 x900))
(assert (=> (>= 10000 x830) (= (x511 x830) (x582 x830))))
(assert (= (ite (= x442 x1270) x526 (x1455 x1270)) (x219 x1270)))
(assert (= x177 (x465 (x582 x177))))
(assert (=> (>= 10000 x1486) (= (x511 x1486) (x582 x1486))))
(assert (= x840 (or x1549 x1476)))
(assert (=> (>= 10000 x157) (= (x582 x157) (x511 x157))))
(assert (= (=> (and (= (x279 x123) x1499) (> 2293535753 x1320) (= (x1177 (x582 x230) x1051 0) x1394) (< 0 x1318) (>= 1461501637330902918203684832716283019655932542975 x978) (<= x230 1461501637330902918203684832716283019655932542975) (= x1051 (x1177 (x582 x97) (x511 7) 0)) (= x123 (x1177 (x582 x978) x1394 0)) (= x1320 759532456) (< x1320 911411945) (<= 0 x1499) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1499) (not (= 635128645 x1320)) (not (< x1320 468353030)) (= x1499 x1098) (not (= x1320 468353030)) (= (x1495 (x582 274184521717934524641157099916833587206)) x1318)) (=> (and (= x1369 x931) (= x351 (>= x1317 x466)) (= x466 x1098) (= x1275 x1465)) x1388)) x1550))
(assert (x891 x1567))
(assert (= (x465 (x582 x1429)) x1429))
(assert (= (ite (and x1030 x194) (x813 x238) (x709 x238)) (x1180 x238)))
(assert (= (x465 (x582 x1303)) x1303))
(assert (x891 x970))
(assert (x891 x156))
(assert (x891 x239))
(assert (x891 x120))
(assert (= x484 x783))
(assert (= x1219 (=> (and (= x1119 x1125) (= x683 (x1177 (x582 x28) x195 0)) (= x328 (x1177 (x582 x1286) (x511 3) 0)) (not (> 2293535753 x361)) (< x361 2960351575) (= 2743102681 x361) (< 0 x1415) (= (x1495 (x582 274184521717934524641157099916833587206)) x1415) (not (> 2690754053 x361)) (>= x1119 0) (>= 1461501637330902918203684832716283019655932542975 x1433) (= x195 (x1177 (x582 x1433) x328 0)) (>= 1461501637330902918203684832716283019655932542975 x28) (not (= 2690754053 x361)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1119) (= x1119 (x1023 x683))) (=> (and (= x1532 x179) (= x1438 x1090) (= x1465 x1486) (= x1134 x1125) (= x59 x931)) x1205))))
(assert (= (x1159 x1131) (ite (= x1131 x590) x791 (x459 x1131))))
(assert (= (=> (and (< x1411 2960351575) (= (x1177 (x582 x1293) (x511 3) 0) x1352) (= x839 (x1177 (x582 x85) x1352 0)) (>= x19 0) (= x19 x337) (not (> 2690754053 x1411)) (not (= x1411 2690754053)) (= x1144 (x1177 (x582 x638) x839 0)) (= (x1495 (x582 274184521717934524641157099916833587206)) x57) (not (< x1411 2293535753)) (<= x19 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1102 x1144) x19) (<= x85 1461501637330902918203684832716283019655932542975) (<= x638 1461501637330902918203684832716283019655932542975) (< 0 x57) (= 2743102681 x1411)) (=> (and (= x1465 x757) (= (>= x334 x345) x880) (= x931 x1374) (= x337 x345)) x421)) x1607))
(assert (x891 x990))
(assert (x891 x752))
(assert (= (x459 x290) (ite (= x430 x290) x907 (x241 x290))))
(assert (= (x626 x1414) (ite (= x1414 x628) x1396 (x955 x1414))))
(assert (= x1280 (x465 (x582 x1280))))
(assert (= (x99 x871) (ite (= x439 x871) x1422 (x1313 x871))))
(assert (x891 x1257))
(assert (= x575 (x465 (x582 x575))))
(assert (x891 x14))
(assert (x891 x1166))
(assert (= (x984 x1414) 0))
(assert (=> (>= 10000 x761) (= (x582 x761) (x511 x761))))
(assert (= 826074471 (x465 (x511 826074471))))
(assert (x891 x535))
(assert (x891 x676))
(assert (x891 x908))
(assert (=> (<= x1303 10000) (= (x582 x1303) (x511 x1303))))
(assert (x891 x1377))
(assert (x751 x830))
(assert (x891 x1140))
(assert (= (=> (and (= (= x1257 0) x378) (= x251 (= 0 x202)) (or (and (= x237 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= x853 x64) (= (x1177 (x582 x1434) (x511 7) 0) x1406) (= (x317 1461501637330902918203684832716283019655932542975 x701) x323) x378 (= x218 (x1177 (x582 x323) x1406 0)) (= (x1177 (x582 x237) x218 0) x1326)) (and (<= 0 x887) (= x646 (x808 (+ x290 128))) (= x461 (x1177 (x582 x1130) x1157 0)) (<= x887 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x378) (= (x1177 (x582 x1434) (x511 7) 0) x1157) (<= x1185 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x469 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1177 (x582 x1434) (x511 1) 0) x1525) (<= 0 x1185) (or (and (not x457) (= 0 x815)) (and x457 (= (> x966 x530) x7) (= x289 (= x1185 0)) (= x530 (x359 x82)) (or (and x289 (not (> x856 x1299)) (= x829 (x212 (- x1299 x856))) (= (x359 x64) x856) (= x815 x829)) (and (= (ite (< x1443 604800) x1443 604800) x1158) (= x815 x1158) (not x289) (= 604800 x1461) (not (< x1299 x1185)) (= (x212 (- x1299 x1185)) x1443))) (or (and (= (x359 x82) x1424) x7 (= x1424 x1299)) (and (= x1299 x966) (not x7))))) (or (and (= x1262 x597) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x810) (= x411 (x1177 (x582 x1366) x1251 0)) (= (x1177 (x582 x1434) (x511 3) 0) x1251) (= (x1177 (x582 x1434) (x511 7) 0) x54) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x815 x1257)) (= x853 x646) (>= x1262 0) (= x356 x532) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1262 x356)) (= (* x1257 x815) x168) (= x468 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= x1262 (x121 x545)) (= x1407 (x1177 (x582 x18) x54 0)) (= x545 (x1177 (x582 x468) x411 0)) (not x309) (<= x1262 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x18 (x317 1461501637330902918203684832716283019655932542975 x701)) (= x1260 (+ x597 x532)) (= x6 (x1177 (x582 x810) x1407 0)) (= x168 x356) (= (x317 1461501637330902918203684832716283019655932542975 x701) x1366)) (and (= (x1177 (x582 x1186) x297 0) x1215) (= (x1177 (x582 x1434) (x511 7) 0) x765) (= x297 (x1177 (x582 x1588) x765 0)) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x1186) (= (x317 1461501637330902918203684832716283019655932542975 x701) x1588) (= x646 x853) x309)) (= x469 (x204 x76)) (= x1403 (x359 x82)) (= x309 (= 0 x815)) (= x457 (> x1403 x1185)) (= (x1387 x520) x1185) (= x887 (x254 x1525)) (= x520 (x1177 (x582 x1303) x461 0)) (= (x904 x1525 1) x76) (= x1303 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= x82 (x808 (+ x290 96))) (= x1130 (x317 1461501637330902918203684832716283019655932542975 x701)) (<= 0 x469))) (or (and (= x1043 (x317 1461501637330902918203684832716283019655932542975 x701)) (not x251) (= x295 (x317 1461501637330902918203684832716283019655932542975 x1507))) x251)) x1227) x350))
(assert (= x1369 (x465 (x582 x1369))))
(assert (x891 x1185))
(assert (=> (>= 10000 x293) (= (x511 x293) (x582 x293))))
(assert (= (x511 2514000705) (x582 2514000705)))
(assert (=> (<= x1093 10000) (= (x511 x1093) (x582 x1093))))
(assert (x751 x900))
(assert (x891 x1290))
(assert (x891 x731))
(assert (x891 x1214))
(assert (= (x465 (x511 2512682246)) 2512682246))
(assert (x1003 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x891 x278))
(assert (x891 x918))
(assert (= x1256 (x465 (x582 x1256))))
(assert (= (x511 1000000000000000000) (x582 1000000000000000000)))
(assert (= (=> (and (or (and (>= x1148 0) (= x1257 x1148) (= x1025 (x1177 (x582 x244) x1298 0)) (= x244 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= x1298 (x1177 (x582 x300) x618 0)) (= (x681 x1025) x1148) (= (x1177 (x582 x942) (x511 9) 0) x618) (not x1243) (= x202 1) (<= x1148 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x300 (x317 1461501637330902918203684832716283019655932542975 x701))) (and x1243 (= x1257 0) (= 0 x202))) (= (= 0 x942) x1243)) x350) x249))
(assert (= (or (and x640 x1399) (and x832 x833)) x1211))
(assert (=> (>= 10000 x638) (= (x582 x638) (x511 x638))))
(assert (x891 x1480))
(assert (x751 x1395))
(assert (= x1400 (x465 (x582 x1400))))
(assert (x891 x770))
(assert (= (x465 (x582 x393)) x393))
(assert (x891 x97))
(assert (x891 x927))
(assert (x891 x220))
(assert (x891 x821))
(assert (= 2211524764 (x465 (x511 2211524764))))
(assert (x891 x1532))
(assert (x891 x1054))
(assert (= x865 x140))
(assert (= x474 x783))
(assert (= (x459 x467) (ite (= x467 x430) x907 (x241 x467))))
(assert (= x234 (x465 (x582 x234))))
(assert (x891 x189))
(assert (=> (>= 10000 x535) (= (x511 x535) (x582 x535))))
(assert (=> (<= x1430 10000) (= (x511 x1430) (x582 x1430))))
(assert (=> (<= x926 10000) (= (x582 x926) (x511 x926))))
(assert (x751 x790))
(assert (= (x886 x1462) (ite (and (not x615) x151 x512 (not x137)) (x1159 x1462) (ite (and x151 (not x615) (not x512)) (x459 x1462) (ite (and x151 x615) (x459 x1462) (x595 x1462))))))
(assert (= (ite (= x248 x787) x669 (x80 x248)) (x1610 x248)))
(assert (x891 x632))
(assert (x891 x720))
(assert (= (x465 (x582 x104)) x104))
(assert (= x1082 x1523))
(assert (= (x465 (x582 x1008)) x1008))
(assert (= 1968616202 (x465 (x511 1968616202))))
(assert (= (x219 x1142) (ite (= x442 x1142) x526 (x1455 x1142))))
(assert (= (x219 x63) (ite (= x442 x63) x526 (x1455 x63))))
(assert (= 0 (x984 x467)))
(assert (x891 x63))
(assert (x891 x323))
(assert (= (=> (and (= (> x1413 0) x936) (= (x212 (- x393 1)) x1413)) (and (=> x936 x1560) (=> (not x936) x576))) x175))
(assert (=> (>= 10000 x978) (= (x511 x978) (x582 x978))))
(assert (= (and x91 x1316) x162))
(assert (= (=> (and (= x1472 (x1177 (x582 x1395) x367 0)) (= x383 (x1387 x1348)) (= (x1177 (x582 x1365) x1472 0) x1348) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x257) (<= x383 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x383 0) (= (x317 1461501637330902918203684832716283019655932542975 x701) x1395) (= x367 (x1177 (x582 x1434) (x511 7) 0)) (not (< x257 x1434)) (<= 0 x257) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x1365) (= (> x383 0) x1001)) (and (=> (and x1001 (<= 0 x710) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x399) (= x689 (x1177 (x582 x399) x3 0)) (= (x681 x689) x710) (= (x317 1461501637330902918203684832716283019655932542975 x701) x1429) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x710) (= x3 (x1177 (x582 x1429) x440 0)) (= x440 (x1177 (x582 x1434) (x511 9) 0)) (= 0 x202) (= x1257 x710)) x350) (=> (not x1001) x806))) x718))
(assert (x751 x1372))
(assert (= (x984 x1451) 0))
(assert (x891 x1293))
(assert (= (x465 (x511 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= x824 (x465 (x582 x824))))
(assert (x891 x1099))
(assert (x891 x135))
(assert (x751 x1366))
(assert (x751 x326))
(assert (= x602 (=> (and (= x37 (x317 1461501637330902918203684832716283019655932542975 x701)) (not (< x257 x1580)) (<= 0 x257) (= x677 (x987 x747)) (<= 0 x677) (= (x1177 (x582 x393) (x511 6) 0) x1309) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x257) (<= x677 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x677) x109) (= x747 (x1177 (x582 x37) x1309 0))) (and (=> (and (>= x1154 0) (= 0 x332) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1154) (not x109) (= (x1177 (x582 x960) x1386 0) x1573) (= x1154 (x566 x1573)) (= (x1177 (x582 x393) (x511 10) 0) x1386) (= x518 x1154) (= (x317 1461501637330902918203684832716283019655932542975 x701) x960)) x1218) (=> x109 x737)))))
(assert (= (ite (and x1030 x194) (x813 x1220) (x709 x1220)) (x1180 x1220)))
(assert (x1003 x620))
(assert (=> (<= x1555 10000) (= (x511 x1555) (x582 x1555))))
(assert (x751 x549))
(assert (x891 x293))
(assert (=> (<= x575 10000) (= (x511 x575) (x582 x575))))
(assert (x891 x498))
(assert (= (x465 (x582 x205)) x205))
(assert (x891 x893))
(assert (= x774 (and x1468 x899)))
(assert (= (ite (and (not x1150) x206 x471 x852 x506 x36) (x957 x238) (ite (and (not x506) x36 x206 x852 x471) (x626 x238) (ite (and x471 x36 x206 (not x852)) (x955 x238) (ite (and x206 x36 (not x471)) (x1370 x238) (x391 x238))))) (x49 x238)))
(assert (x891 x296))
(assert (x891 x960))
(assert (=> (>= 10000 x855) (= (x582 x855) (x511 x855))))
(assert (= (x1370 x134) (ite (= x134 x1268) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x134))))
(assert (x891 x779))
(assert (x891 x1242))
(assert (= (x219 x766) (ite (= x442 x766) x526 (x1455 x766))))
(assert (x891 x594))
(assert (x891 x707))
(assert (= x761 (x465 (x582 x761))))
(assert (= (x1370 x1131) (ite (= x1131 x1268) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x1131))))
(assert (= x857 (=> (= x193 x458) x992)))
(assert (=> (>= 10000 x209) (= (x582 x209) (x511 x209))))
(assert (= (x626 x238) (ite (= x628 x238) x1396 (x955 x238))))
(assert (= (ite (and x69 x1457 (not x1044)) (x131 x1408) (x1254 x1408)) (x884 x1408)))
(assert (= (ite (and x852 x36 (not x1150) x471 x506 x206) (x957 x134) (ite (and x852 x206 x36 x471 (not x506)) (x626 x134) (ite (and x36 x471 (not x852) x206) (x955 x134) (ite (and x36 (not x471) x206) (x1370 x134) (x391 x134))))) (x49 x134)))
(assert (= (x459 x153) (ite (= x430 x153) x907 (x241 x153))))
(assert (x891 x1376))
(assert (= (or (and (not x36) x206) (and x1457 (not x69)) x1211) x1345))
(assert (x891 x185))
(assert (x751 x1588))
(assert (=> (>= 10000 x1264) (= (x511 x1264) (x582 x1264))))
(assert (x891 x1234))
(assert (x891 x1114))
(assert (=> (>= 10000 x694) (= (x582 x694) (x511 x694))))
(assert (x891 x614))
(assert (= x553 (=> (= x1338 x863) x1248)))
(assert (= (ite (and x151 x951) (x1426 x916) (x174 x916)) (x1063 x916)))
(assert (= x571 (x465 (x582 x571))))
(assert (=> (>= 10000 x607) (= (x511 x607) (x582 x607))))
(assert (x891 x432))
(assert (= (ite (= x1462 x787) x669 (x80 x1462)) (x1610 x1462)))
(assert (= (x465 (x582 x1083)) x1083))
(assert (x891 x1450))
(assert (x891 x1115))
(assert (x891 x805))
(assert (= (ite (= x382 x238) x1485 (x1067 x238)) (x384 x238)))
(assert (= (x465 (x582 x861)) x861))
(assert (x891 x649))
(assert (x891 x591))
(assert (= (x1159 x220) (ite (= x590 x220) x791 (x459 x220))))
(assert (= (ite (= x1142 x430) x907 (x241 x1142)) (x459 x1142)))
(assert (x751 x731))
(assert (x751 x1374))
(assert (= (x582 2258409472) (x511 2258409472)))
(assert (=> (>= 10000 x261) (= (x582 x261) (x511 x261))))
(assert (x891 x868))
(assert (x751 x323))
(assert (= (x465 (x511 2868243304)) 2868243304))
(assert (x891 x791))
(assert (x891 x697))
(assert (x891 x1499))
(assert (x891 x1374))
(assert (x891 x1153))
(assert (= (ite (= x185 x238) x55 (x1370 x238)) (x955 x238)))
(assert (= x28 (x465 (x582 x28))))
(assert (=> (<= x1339 10000) (= (x511 x1339) (x582 x1339))))
(assert (x891 x1533))
(assert (x891 x1075))
(assert (= (and (not x929) x1252) x971))
(assert (= (ite (= x787 x84) x669 (x80 x84)) (x1610 x84)))
(assert (x891 x1098))
(assert (x891 x1064))
(assert (= x1116 (x465 (x582 x1116))))
(assert (x891 x1280))
(assert (x891 x130))
(assert (= (ite (= x1377 x708) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1021 x1377)) (x1067 x1377)))
(assert (= (x465 (x582 x179)) x179))
(assert (x891 x59))
(assert (x891 x1400))
(assert (= (x1180 x1451) (ite (and x194 x1030) (x813 x1451) (x709 x1451))))
(assert (= x1123 (and x1330 x1510)))
(assert (=> (>= 10000 x1390) (= (x582 x1390) (x511 x1390))))
(assert (x891 x925))
(assert (x891 x1473))
(assert (x891 x1589))
(assert (x891 x531))
(assert (=> (>= 10000 x1429) (= (x582 x1429) (x511 x1429))))
(assert (= (x419 x1408) (ite (= x1064 x1408) x1349 (x384 x1408))))
(assert (x891 x1545))
(assert (= (x511 2418364589) (x582 2418364589)))
(assert (=> (<= x14 10000) (= (x511 x14) (x582 x14))))
(assert (x891 x967))
(assert (= (x419 x1142) (ite (= x1064 x1142) x1349 (x384 x1142))))
(assert (= (x465 (x582 x1166)) x1166))
(assert (x751 x942))
(assert (= x737 (=> (= (< 0 x393) x259) (and (=> x259 x587) (=> (not x259) x576)))))
(assert (x891 x1016))
(assert (x891 x1175))
(assert (x891 x1389))
(assert (= x1078 (x465 (x582 x1078))))
(assert (x891 x238))
(assert (x891 x1307))
(assert (x891 x998))
(assert (= (ite (= x590 x248) x791 (x459 x248)) (x1159 x248)))
(assert (= (ite (and x852 x506 x471 x206 (not x1150) x36) (x957 x1451) (ite (and (not x506) x471 x852 x206 x36) (x626 x1451) (ite (and x206 x471 x36 (not x852)) (x955 x1451) (ite (and x36 x206 (not x471)) (x1370 x1451) (x391 x1451))))) (x49 x1451)))
(assert (x891 x1496))
(assert (x751 x1286))
(assert (x751 x575))
(assert (= (x582 2690754053) (x511 2690754053)))
(assert (= (ite (= x628 x1131) x1396 (x955 x1131)) (x626 x1131)))
(assert (= (x984 x1408) 0))
(assert (x891 x1249))
(assert (= (x1313 x439) (ite (and x151 (not x137) x512 (not x615)) (x1032 x439) (ite (and (not x615) x151 (not x512)) (x937 x439) (ite (and x615 x151) (x937 x439) (x1564 x439))))))
(assert (x751 x1169))
(assert (x891 x1608))
(assert (= (ite (= x442 x590) x526 (x1455 x590)) (x219 x590)))
(assert (= (and (not x592) x583) x1252))
(assert (x891 x253))
(assert (x891 x38))
(assert (= (x404 x1408) (ite (and x36 x206 (not x1324)) (x49 x1408) (x1059 x1408))))
(assert (= (and x1404 x762) x1613))
(assert (x1003 1461501637330902918203684832716283019655932542975))
(assert (x891 x17))
(assert (x891 x1398))
(assert (= (x465 (x582 x594)) x594))
(assert (x891 x902))
(assert (= (x465 (x582 x1183)) x1183))
(assert (x891 x703))
(assert (x891 x647))
(assert (x751 x1130))
(assert (= (x984 x1220) 0))
(assert (= (x99 x617) (ite (= x439 x617) x1422 (x1313 x617))))
(assert (= (ite (= x1220 x442) x526 (x1455 x1220)) (x219 x1220)))
(assert (x751 x1000))
(assert (x891 x977))
(assert (= (x1159 x1414) (ite (= x1414 x590) x791 (x459 x1414))))
(assert (x891 x82))
(assert (= (=> (and (= x899 (> x1292 0)) (= (x212 (- x393 1)) x1292)) (and (=> (not x899) x160) (=> x899 x1382))) x358))
(assert (= (ite (= x1077 x787) x669 (x80 x1077)) (x1610 x1077)))
(assert (x891 x1268))
(assert (=> (<= x1590 10000) (= (x511 x1590) (x582 x1590))))
(assert (x751 x638))
(assert (x891 x446))
(assert (= (x1180 x1077) (ite (and x1030 x194) (x813 x1077) (x709 x1077))))
(assert (= (x1032 x871) (ite (= x871 x804) x811 (x937 x871))))
(assert (x891 x952))
(assert (= (=> (= x969 (= x1166 274184521717934524641157099916833587214)) (and (=> (and (not x26) (= x1060 x997) (not (> 649617121 x678)) (not x958) (= (>= (+ x1060 x1437) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x425) (<= x1524 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1442) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1437) (not (< x462 4)) (>= x1437 0) (= (x1177 (x582 274184521717934524641157099916833587206) (x511 1) 0) x1045) (<= 0 x1524) (= x1596 x462) (= x1014 x1442) x969 (= (x212 (- x462 4)) x691) (= 2835717307 x678) (= x1583 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x1177 (x582 274184521717934524641157099916833587206) (x511 1) 0) x369) (= x1460 x1480) (= x196 (< x1524 x1450)) (= (x1495 (x582 274184521717934524641157099916833587214)) x1224) (not (= 2514000705 x678)) (= x1524 (x1255 x1045)) (not x196) (= 274184521717934524641157099916833587206 x375) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x691) (and (= true (<= x691 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x691))) x26) (= x611 (+ x997 x415)) (= (x212 (- x1524 x1450)) x1589) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1060 x1437)) (= (x1177 (x582 x1442) (x511 1) 0) x953) (not (= x678 1889567281)) (= x1567 x1450) (= x1450 x1060) (not (= x678 649617121)) (not x425) (= x164 1) (= (x191 x1541) x1437) (= x1437 x415) (= x588 274184521717934524641157099916833587206) (= (> x1060 x1524) x958) (= x1442 x1213) (> x1224 0) (= x552 32) (not (= x678 826074471)) (= (x1177 (x582 x1442) (x511 1) 0) x1541) (= x462 68)) x472) (=> (not x969) x387))) x749))
(assert (= x1227 (=> (and (= (x1063 x1609) x935) (= (x1177 (x582 x1434) (x511 6) 0) x828) (>= x257 0) (not (< x257 x1434)) (= x1609 (x1177 (x582 x1376) x828 0)) (= x762 (= x935 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x257) (= (x317 1461501637330902918203684832716283019655932542975 x701) x1376) (<= 0 x935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)) (and (=> (and (<= x9 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x9 x269) (<= 0 x9) (= (x1177 (x582 x1434) (x511 10) 0) x1346) (= x9 (x1575 x155)) (= x1074 0) (= x1590 (x317 1461501637330902918203684832716283019655932542975 x701)) (not x762) (= x155 (x1177 (x582 x1590) x1346 0))) x768) (=> x762 x482)))))
(assert (x891 x922))
(assert (= (x582 115792089237316195423570985008687907853269984665640564039457) (x511 115792089237316195423570985008687907853269984665640564039457)))
(assert (x891 x486))
(assert (x751 x978))
(assert (= (x886 x1142) (ite (and x512 x151 (not x137) (not x615)) (x1159 x1142) (ite (and (not x512) (not x615) x151) (x459 x1142) (ite (and x615 x151) (x459 x1142) (x595 x1142))))))
(assert (= (x465 (x511 142201243)) 142201243))
(assert (= x912 (x465 (x582 x912))))
(assert (x751 x274))
(assert (x891 x516))
(assert (x891 x22))
(assert (= (=> (= x592 (< x445 x393)) (and (=> (not x592) x771) (=> (and x592 (= x975 x948)) x1340))) x1138))
(assert (x891 x790))
(assert (x891 x571))
(assert (=> (>= 10000 x40) (= (x511 x40) (x582 x40))))
(assert (= (x984 x134) 0))
(assert true)
(assert (= (x511 2835717307) (x582 2835717307)))
(assert (= (x465 (x582 x1292)) x1292))
(assert (= (x711 x1142) (ite (and x1305 x964) (x219 x1142) (x873 x1142))))
(assert (x891 x920))
(assert (x891 x855))
(assert (x891 x743))
(assert (x891 x245))
(assert (= (=> (and (>= x849 0) (= x849 (x1063 x533)) (= x533 (x1177 (x582 x264) x584 0)) (= x264 (x317 1461501637330902918203684832716283019655932542975 x701)) (<= x849 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x849) x491) (= x584 (x1177 (x582 x1555) (x511 6) 0))) (and (=> (and x491 (= x263 (x212 (- x1555 1))) (= x136 (< 0 x263)) (not x136)) x1085) (=> (and (= x1555 x458) (not x491)) x857))) x1024))
(assert (x891 x695))
(assert (x891 x163))
(assert (=> (<= x326 10000) (= (x511 x326) (x582 x326))))
(assert (x891 x1038))
(assert (= (x511 2061678023) (x582 2061678023)))
(assert (x891 x1373))
(assert (= (+ 1 (x465 x1525)) (x465 (x904 x1525 1))))
(assert (= (=> (and (not (= x905 2211524764)) (> 2293535753 x905) (<= x703 1461501637330902918203684832716283019655932542975) (= x785 (x1495 (x582 274184521717934524641157099916833587206))) (= (x987 x1273) x479) (not (= x905 2061678023)) (not (= 1986467848 x905)) (< 0 x785) (= x281 (x1177 (x582 x912) (x511 6) 0)) (>= x479 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x479) (= (x1177 (x582 x703) x281 0) x1273) (not (< x905 1968616202)) (not (= 1968616202 x905)) (= x905 2258409472) (not (< x905 911411945)) (= x1022 x479)) (=> (and (= x893 x931) (= x246 x1022) x150 (= 0 x1586) (= (not (= x246 0)) x150) (= x1465 x1054)) x875)) x256))
(assert (=> (>= 10000 x1103) (= (x511 x1103) (x582 x1103))))
(assert (x891 x825))
(assert (x891 x383))
(assert (= x172 x1344))
(assert (x891 x396))
(assert (x891 x863))
(assert (x891 x496))
(assert (x891 x1401))
(assert (x891 x444))
(assert (x891 x52))
(assert (= (x582 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x511 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (= x43 (x465 (x582 x43))))
(assert (x891 x1050))
(assert (= (+ 1 (x465 x781)) (x465 (x904 x781 1))))
(assert (x891 x78))
(assert (= (x465 (x582 x1130)) x1130))
(assert (= (x957 x1077) (ite (= x1077 x1402) x720 (x626 x1077))))
(assert (= (x219 x1451) (ite (= x442 x1451) x526 (x1455 x1451))))
(assert (x891 x974))
(assert (x891 x252))
(assert (= (ite (= x1451 x153) x159 (x1610 x1451)) (x504 x1451)))
(assert (=> (>= 10000 x177) (= (x582 x177) (x511 x177))))
(assert (x751 x883))
(assert (x891 x1593))
(assert (= x986 x1481))
(assert (= (ite (= x1268 x1408) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x1408)) (x1370 x1408)))
(assert (x891 x483))
(assert (= (ite (= x1414 x185) x55 (x1370 x1414)) (x955 x1414)))
(assert (x891 x872))
(assert (x891 x1083))
(assert (= (ite (and (not x1324) x206 x36) (x49 x1451) (x1059 x1451)) (x404 x1451)))
(assert (x891 x613))
(assert (= (x1180 x1377) (ite (and x1030 x194) (x813 x1377) (x709 x1377))))
(assert (= (x504 x220) (ite (= x220 x153) x159 (x1610 x220))))
(assert (x891 x315))
(assert (not x47))
(assert (= (x886 x134) (ite (and x151 x512 (not x137) (not x615)) (x1159 x134) (ite (and (not x512) (not x615) x151) (x459 x134) (ite (and x151 x615) (x459 x134) (x595 x134))))))
(assert (x751 x1590))
(assert (x891 x464))
(assert (x751 274184521717934524641157099916833587214))
(assert (x891 x661))
(assert (x891 x226))
(assert (=> (>= 10000 x731) (= (x511 x731) (x582 x731))))
(assert (= (=> (and (= x398 (< x445 x1434)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1580)) (= (x808 (+ x393 1)) x1434)) (and (=> (and (= x948 x64) x398) x1340) (=> (not x398) x718))) x353))
(assert (= (=> (and (not (< x101 2293535753)) (= (x1332 x871) x10) (> 2960351575 x101) (not (= 2293535753 x101)) (= x871 (x1177 (x582 x1438) x519 0)) (< x101 2690754053) (> x744 0) (<= 0 x10) (= x725 (x1177 (x582 x1486) (x511 4) 0)) (= (x1177 (x582 x179) x1441 0) x519) (not (= x101 2418364589)) (= x101 2532887486) (not (= x101 2512682246)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x10) (= x1441 (x1177 (x582 x59) x725 0)) (= x10 x449) (= x744 (x1495 (x582 274184521717934524641157099916833587206))) (<= x59 1461501637330902918203684832716283019655932542975) (<= x1438 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x179)) x755) x1205))
(assert (= (x465 (x582 x893)) x893))
(assert (x891 x518))
(assert (x751 x1376))
(assert (=> (>= 10000 x893) (= (x511 x893) (x582 x893))))
(assert (=> (>= 10000 x1114) (= (x511 x1114) (x582 x1114))))
(assert (= x1590 (x465 (x582 x1590))))
(assert (x891 x149))
(assert (= (ite (= x467 x442) x526 (x1455 x467)) (x219 x467)))
(assert (= (ite (= x153 x1462) x159 (x1610 x1462)) (x504 x1462)))
(assert (=> (>= 10000 x580) (= (x511 x580) (x582 x580))))
(assert (=> (>= 10000 x1182) (= (x582 x1182) (x511 x1182))))
(assert (= x707 (x465 (x582 x707))))
(assert (x891 x978))
(assert (x891 x88))
(assert (x751 x234))
(assert (x891 x497))
(assert (= (ite (and x194 x1030) (x813 x1142) (x709 x1142)) (x1180 x1142)))
(assert (x891 x1172))
(assert (= x1544 (x465 (x582 x1544))))
(assert (x891 x1559))
(assert (x891 x246))
(assert (= 0 (x984 x1377)))
(assert (x891 x820))
(assert (x891 x530))
(assert (x751 x686))
(assert (x751 x468))
(assert (= (ite (= x628 x134) x1396 (x955 x134)) (x626 x134)))
(assert (= (=> (and (>= x1470 0) (or x615 (and (or (and (< (* x996 x967) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x137 (> x526 1)) (= x14 (x317 1461501637330902918203684832716283019655932542975 x701)) (< (+ x302 x339) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1177 (x582 x393) (x511 11) 0) x797) (or (not x137) (and (= x349 (< 2 x526)) (<= 0 x149) (< (+ x135 x642) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1595 (x1177 (x582 x393) (x511 4) 0)) (= (x808 (+ x392 64)) x820) (= x135 x662) (= x1300 (x1177 (x582 x347) x1105 0)) (= (x652 x820) x104) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x51) (> x546 1) (= x250 (x1177 (x582 x1391) x1149 0)) (= x149 (x1032 x441)) (= x135 (div x773 1000000000000000000)) (>= x1196 0) (= x861 (x317 1461501637330902918203684832716283019655932542975 x701)) (< (* x996 x51) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 1461501637330902918203684832716283019655932542975 x1391) (= x910 (x1177 (x582 x908) x221 0)) (= (x808 (+ x562 192)) x1270) (= x546 (x1159 x442)) (= x1592 x339) (= x1196 (x1032 x250)) (< 1 x526) x137 (< 1 x526) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x149) (= (x1177 (x582 x104) x1300 0) x441) (= x642 (x1159 x1270)) (= x149 0) (= x773 (* x51 x996)) (= x221 (x1177 (x582 x393) (x511 4) 0)) (= (x1177 (x582 x549) x910 0) x1149) (>= 1461501637330902918203684832716283019655932542975 x456) (= x549 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= x381 (x317 1461501637330902918203684832716283019655932542975 x701)) (= (x317 1461501637330902918203684832716283019655932542975 x701) x908) (= (x1177 (x582 x456) x217 0) x698) (>= x51 0) (= x1539 x1196) (<= x104 1461501637330902918203684832716283019655932542975) (= (x652 x820) x456) (= x1197 (x1177 (x582 x393) (x511 11) 0)) (= x347 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= (x652 x820) x1391) (= (x1177 (x582 x861) x1197 0) x217) (not x349) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x339 x1196)) (= (x1177 (x582 x381) x1595 0) x1105) (= (x1578 x698) x51) (= x642 x1065) (> x526 1) (= x902 (+ x1539 x1592)) (= (+ x662 x1065) x1534) (<= x1196 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= x1026 x668) (= x791 (+ x600 x1284)) (>= x967 0) (<= x967 115792089237316195423570985008687907853269984665640564039457584007913129639935) x512 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x302) (<= x851 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x292 (x459 x590)) (= (x317 1461501637330902918203684832716283019655932542975 x701) x874) (= x590 (x808 (+ x562 160))) (= x740 (x1177 (x582 x393) (x511 4) 0)) (<= x535 1461501637330902918203684832716283019655932542975) (= (x1177 (x582 x43) x1528 0) x132) (= x302 x342) (= (x937 x804) x302) (= x804 (x1177 (x582 x535) x1501 0)) (= (x652 x1026) x1169) (< 0 x526) (= x292 x600) (< (+ x1351 x292) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x652 x1026) x43) (= x1351 (div x184 1000000000000000000)) (<= 0 x851) (= x660 x339) (= x1351 x1284) (<= x1169 1461501637330902918203684832716283019655932542975) (= (x459 x442) x734) (> x526 0) (= (+ x660 x342) x811) (= x851 0) (= x851 (x937 x1034)) (= (x1177 (x582 x1000) x1362 0) x1168) (= x535 (x652 x1026)) (>= 1461501637330902918203684832716283019655932542975 x43) (= (x1177 (x582 x790) x1535 0) x1501) (= (x1177 (x582 x1169) x1168 0) x1034) (> x734 0) (= x1397 (x1177 (x582 x393) (x511 4) 0)) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x1000) (= x1535 (x1177 (x582 x14) x1397 0)) (= x1362 (x1177 (x582 x1078) x740 0)) (= x1078 (x317 1461501637330902918203684832716283019655932542975 x701)) (= (* x967 x996) x184) (> x526 0) (= (x1578 x132) x967) (= x790 (x317 1461501637330902918203684832716283019655932542975 x1507)) (<= 0 x302) (= x1528 (x1177 (x582 x874) x797 0))) (not x512)) (= x543 (mod (* 1000000000000000000 x339) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x630 0) (= 1 x152) (not x615) (= (div x543 x236) x996) (= (ite (< 115792089237316195423570985008687907853269984665640564039457 x339) 1 0) x847) (= (x317 x152 x847) x630) (> x236 0) (= (> x526 0) x512))) (= x521 (= x332 0)) (= x615 (= 0 x339)) (= x453 (x1177 (x582 x1544) x1194 0)) (= (x987 x453) x1129) (= (x459 x430) x609) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x883) (= (x121 x20) x339) (= x20 (x1177 (x582 x883) x180 0)) (<= x236 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x808 (+ x290 32)) x430) (= (x808 (+ 64 x290)) x64) (= (x204 x1358) x907) (= x389 (x317 1461501637330902918203684832716283019655932542975 x701)) (= x180 (x1177 (x582 x389) x1066 0)) (>= x339 0) (= (x1177 (x582 x393) (x511 3) 0) x1066) (= x1337 (> x609 x1129)) (= (x254 x965) x1470) (= (x904 x965 1) x1358) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x339) (= x1194 (x1177 (x582 x393) (x511 6) 0)) (= x965 (x1177 (x582 x393) (x511 1) 0)) (<= 0 x1129) (= x578 (x1177 (x582 x393) (x511 5) 0)) (or (and (= x672 0) (not x1337)) (and x1337 (= x866 (= x1129 0)) (= (< x418 x966) x1311) (= x418 (x459 x430)) (or (and (= x966 x53) (not x1311)) (and (= (x459 x430) x1047) (= x53 x1047) x1311)) (or (and (= x39 604800) (= x868 (ite (< x573 604800) x573 604800)) (= x573 (x212 (- x53 x1129))) (not x866) (not (< x53 x1129)) (= x868 x672)) (and (= x79 x672) (= (x212 (- x53 x631)) x79) x866 (= x631 (x459 x290)) (not (< x53 x631)))))) (or (and x951 (= (x1177 (x582 x918) x1409 0) x636) (= (x317 1461501637330902918203684832716283019655932542975 x701) x918) (= x1409 (x1177 (x582 x393) (x511 6) 0))) (and (= (x1177 (x582 x393) (x511 6) 0) x1502) (<= 0 x1088) (= (x317 1461501637330902918203684832716283019655932542975 x701) x1103) (= x473 (x1177 (x582 x393) (x511 5) 0)) (= x500 (x1177 (x582 x1103) x1502 0)) (= x311 x674) (= (x125 x557) x1088) (< (+ x311 x1088) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2 (x317 1461501637330902918203684832716283019655932542975 x701)) (= (x1177 (x582 x2) x473 0) x557) (<= x1088 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x1558 x653) x405) (not x951) (= x311 x653) (= x1088 x1558) (< (* x672 x518) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x672 x518) x674))) (<= 0 x236) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1470) (= (x1167 x1417) x236) (= (x1177 (x582 x1048) x578 0) x1417) (= (x317 1461501637330902918203684832716283019655932542975 x701) x1544) (= x1048 (x317 1461501637330902918203684832716283019655932542975 x701)) (>= x907 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1129) (or x521 (and (= (x317 1461501637330902918203684832716283019655932542975 x701) x177) (= (x1177 (x582 x177) x1267 0) x629) (not x521) (= (x1177 (x582 x393) (x511 10) 0) x1267))) (= (= x672 0) x951) (<= x907 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x353) x1218))
(assert (= x264 (x465 (x582 x264))))
(assert (x891 x266))
(assert (x891 x1190))
(assert (x891 x1236))
(assert (= (x1313 x617) (ite (and (not x137) x151 (not x615) x512) (x1032 x617) (ite (and (not x615) x151 (not x512)) (x937 x617) (ite (and x615 x151) (x937 x617) (x1564 x617))))))
(assert (x891 x393))
(assert (= (x1313 x871) (ite (and (not x615) (not x137) x151 x512) (x1032 x871) (ite (and (not x512) x151 (not x615)) (x937 x871) (ite (and x615 x151) (x937 x871) (x1564 x871))))))
(assert (x891 x706))
(assert (x891 x21))
(assert (x891 x1379))
(assert (x891 x1490))
(assert (= (x219 x134) (ite (= x442 x134) x526 (x1455 x134))))
(assert (x891 x1081))
(assert (x891 x9))
(assert (x891 x702))
(assert (x751 x648))
(assert (x891 x230))
(assert (x891 x1195))
(assert (= (x465 (x511 2764855426)) 2764855426))
(assert (= (x511 1986467848) (x582 1986467848)))
(assert (= 18446744073709551615 (x465 (x511 18446744073709551615))))
(assert (x891 x874))
(assert (=> (>= 10000 x1369) (= (x582 x1369) (x511 x1369))))
(assert (x1003 x1368))
(assert (= x1557 (and (not x1001) x671)))
(assert (x891 x43))
(assert (x891 x320))
(assert (= x1054 (x465 (x582 x1054))))
(assert (x751 x5))
(assert (=> (>= 10000 x451) (= (x582 x451) (x511 x451))))
(assert (x751 x1544))
(assert (=> (<= x5 10000) (= (x582 x5) (x511 x5))))
(assert (= (ite (and (not x615) x512 (not x137) x151) (x1159 x1077) (ite (and x151 (not x512) (not x615)) (x459 x1077) (ite (and x151 x615) (x459 x1077) (x595 x1077)))) (x886 x1077)))
(assert (= (ite (and x206 x36 (not x1324)) (x49 x766) (x1059 x766)) (x404 x766)))
(assert (x891 x1130))
(assert (= (x711 x134) (ite (and x1305 x964) (x219 x134) (x873 x134))))
(assert (= x1490 (x465 (x582 x1490))))
(assert (x751 x757))
(assert (x891 x337))
(assert (= x1082 x1537))
(assert (x891 x145))
(assert (=> (>= 10000 x1293) (= (x511 x1293) (x582 x1293))))
(assert (= (x711 x1131) (ite (and x1305 x964) (x219 x1131) (x873 x1131))))
(assert (x751 x1379))
(assert (= (x1063 x533) (ite (and x951 x151) (x1426 x533) (x174 x533))))
(assert (x1003 x847))
(assert (= (x626 x1451) (ite (= x1451 x628) x1396 (x955 x1451))))
(assert (= 635128645 (x465 (x511 635128645))))
(assert (x891 x1288))
(assert (= 2960351575 (x465 (x511 2960351575))))
(assert (x891 x1113))
(assert (x751 x1369))
(assert (x891 x1410))
(assert (x891 x1199))
(assert (= 274184521717934524641157099916833587206 (x465 (x582 274184521717934524641157099916833587206))))
(assert (x891 x48))
(assert (x891 x247))
(assert (= 649617121 (x465 (x511 649617121))))
(assert (x751 x347))
(assert (= x147 (x465 (x582 x147))))
(assert (= (x465 (x582 x33)) x33))
(assert (x891 x5))
(assert (x891 x885))
(assert (=> (<= x399 10000) (= (x511 x399) (x582 x399))))
(assert (x891 x375))
(assert (= (x504 x766) (ite (= x766 x153) x159 (x1610 x766))))
(assert (x891 x1366))
(assert (x891 x227))
(assert (x891 x830))
(assert (= (x465 (x582 x926)) x926))
(assert (x891 x1052))
(assert (x891 x546))
(assert (x891 x1415))
(assert (x891 x817))
(assert (= x1375 (=> (and (< x1401 2690754053) (= x1171 x476) (not (< x1401 2293535753)) (<= 0 x1171) (= (x1495 (x582 274184521717934524641157099916833587206)) x346) (= (x1177 (x582 x1175) x919 0) x1230) (not (= x1401 2512682246)) (= x714 (x1177 (x582 x991) (x511 4) 0)) (= (x1177 (x582 x770) x714 0) x919) (< x1401 2960351575) (< 0 x346) (>= 1461501637330902918203684832716283019655932542975 x770) (not (= 2293535753 x1401)) (>= 1461501637330902918203684832716283019655932542975 x1175) (= x1285 (x1177 (x582 x1427) x1230 0)) (not (= x1401 2418364589)) (= 2532887486 x1401) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1171) (<= x1427 1461501637330902918203684832716283019655932542975) (= x1171 (x937 x1285))) (=> (and (= (<= x654 x649) x724) (= x654 x476) (= x1532 x1420) (= (and x724 x1208) x1439) (= x931 x1307) (= x1005 x1465)) x913))))
(assert (x891 x1422))
(assert (x891 x261))
(assert (x751 x147))
(assert (x891 x1544))
(assert (= (x465 (x582 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= (x465 (x582 x193)) x193))
(assert (x891 x274))
(assert (=> (>= 10000 x863) (= (x582 x863) (x511 x863))))
(assert (=> (>= 10000 x38) (= (x511 x38) (x582 x38))))
(assert (x891 x1546))
(assert (= (or (and x1440 x1517) (and (not x936) x1123) (and (not x259) x859)) x1070))
(assert (x699 x1368 x1361 x1112 x921))
(assert (= (or x1478 x1070) x87))
(assert (x891 x51))
(assert (x891 x28))
(assert (= (x465 (x511 37714057306076988483118529490347679105585116642029194716945419020321082336612)) 37714057306076988483118529490347679105585116642029194716945419020321082336612))
(assert (= x1442 (x465 (x582 x1442))))
(assert (x891 x102))
(assert (= x172 x1229))
(assert (x751 x1087))
(assert (x751 x41))
(assert (= (x465 (x582 x945)) x945))
(assert (=> (<= x1365 10000) (= (x582 x1365) (x511 x1365))))
(assert (x891 x1427))
(assert (x891 x357))
(assert (x891 x129))
(assert (=> (<= x1418 10000) (= (x511 x1418) (x582 x1418))))
(assert (x751 x1275))
(assert (= (x582 274184521717934524641157099916833587206) (x511 274184521717934524641157099916833587206)))
(assert (x891 x1402))
(assert (= (x984 x1270) 0))
(assert (=> (<= x733 10000) (= (x511 x733) (x582 x733))))
(assert (x751 x43))
(assert (x891 x829))
(assert (=> (>= 10000 x1434) (= (x582 x1434) (x511 x1434))))
(assert (=> (>= 10000 x1186) (= (x511 x1186) (x582 x1186))))
(assert (x891 x1262))
(assert (x751 x863))
(assert (= (ite (= x430 x1220) x907 (x241 x1220)) (x459 x1220)))
(assert (= (x582 759532456) (x511 759532456)))
(assert (= (x504 x134) (ite (= x134 x153) x159 (x1610 x134))))
(assert (x751 x230))
(assert (x891 x655))
(assert (x891 x1147))
(assert (= (x465 (x582 x1169)) x1169))
(assert (x891 x1169))
(assert (x891 x269))
(assert (= (x626 x1077) (ite (= x628 x1077) x1396 (x955 x1077))))
(assert (x891 x1364))
(assert (x891 x118))
(assert (= x920 (x465 (x582 x920))))
(assert (x891 x887))
(assert (x891 x41))
(assert (x891 x407))
(assert (x705 x680 x287))
(assert (= (x419 x134) (ite (= x134 x1064) x1349 (x384 x134))))
(assert (= (or (and x583 x592) x344 (and x860 x398)) x206))
(assert (= (x504 x63) (ite (= x153 x63) x159 (x1610 x63))))
(assert (x891 x1127))
(assert (= (x711 x1451) (ite (and x964 x1305) (x219 x1451) (x873 x1451))))
(assert (=> (<= x33 10000) (= (x582 x33) (x511 x33))))
(assert (=> (<= x85 10000) (= (x582 x85) (x511 x85))))
(assert (= (x459 x1377) (ite (= x430 x1377) x907 (x241 x1377))))
(assert (= (x582 468353030) (x511 468353030)))
(assert (x891 x332))
(assert (x891 x877))
(assert (= (x404 x1377) (ite (and (not x1324) x206 x36) (x49 x1377) (x1059 x1377))))
(assert (= (x459 x430) x907))
(assert (= (x1370 x248) (ite (= x1268 x248) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x248))))
(assert (= x1229 x1341))
(assert (x891 x395))
(assert (= (x465 (x511 2939843472)) 2939843472))
(assert (= (x384 x134) (ite (= x382 x134) x1485 (x1067 x134))))
(assert (= (x582 1889567281) (x511 1889567281)))
(assert (x891 x1202))
(assert (x891 x1103))
(assert (x891 x458))
(assert (x891 x454))
(assert (= (and x577 (not x969)) x938))
(assert (= (=> (= x69 (> x526 1)) (and (=> (not x69) x739) (=> (and (= (x808 (+ 96 x433)) x708) (= x1471 (x212 (- x1456 x1392))) (= x826 (x212 (- x1471 32))) x207 (= x1421 (> x1216 0)) (= x1546 (x569 x1451)) (= x1493 (x808 (+ 68 x1392))) (= (x1067 x1392) x1216) (or (and (= x551 (x808 (+ x1216 x767))) x1044) (not x1044)) (= (x808 (+ 64 x392)) x805) (= 0 x983) (= (x569 x442) x446) (= x1456 (x808 (+ x1392 100))) (= (x181 x766) x620) (= x925 (x808 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1288))) (= (x808 (+ 32 x1392)) x766) (= x731 (x652 x805)) (< 1 x526) (= (x808 (+ 128 x433)) x767) (= x170 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= x433 (x808 (+ 36 x1392))) (= x207 (< 0 x122)) (> x446 1) (= x1044 (> x906 x1216)) (= x122 (x1495 (x582 x731))) x69 (>= 1461501637330902918203684832716283019655932542975 x731) (= x1288 (x317 26959946667150639794667015087019630673637144422540572481103610249215 x620)) (= (x808 (+ 192 x562)) x1451) (or (and x1421 (= x767 x382) (or (and (= (< 64 x1216) x258) x124 (= x238 (x808 (+ x1392 64))) (= (x808 (+ 96 x1456)) x1064) (= (x384 x238) x1349) (or (and (not x258) (= 64 x906)) (and (= x424 (x419 x1142)) (= x1543 (< 96 x1216)) (or (and (= x906 96) (not x1543)) (and (= 128 x906) (= (x808 (+ x1456 160)) x267) (= (x808 (+ x1392 128)) x134) (not x1247) x1543 (= (< 128 x1216) x1247) (= (x327 x134) x730))) (= (x808 (+ x1456 128)) x516) (= (x808 (+ 96 x1392)) x1142) x258))) (and (= 32 x906) (not x124))) (= (> x1216 32) x124) (= x1077 x766) (= (x1067 x1077) x1485)) (and (not x1421) (= 0 x906)))) x276))) x513))
(assert (= (ite (= x442 x430) x907 (x241 x442)) (x459 x442)))
(assert (x891 x759))
(assert (x751 274184521717934524641157099916833587218))
(assert (x891 x147))
(assert (x891 x1283))
(assert (x891 x495))
(assert (=> (>= 10000 x1454) (= (x582 x1454) (x511 x1454))))
(assert (= x472 (=> (and (not (= 0 x164)) (or (not x1245) (and (= x976 (x569 x1220)) (< 0 x976) (= x214 (not x819)) (= (x569 x1462) x952) (= x976 x632) (= x819 (= x976 0)) (not (or (and (< x952 32) (= (<= x952 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x952))) (= x1220 (x808 (+ x1462 32))) (= x632 (ite x214 1 0)) x1245)) (= x943 (< (x1028 (x582 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and (= x1392 x1075) x1106 (= x1462 96)) (and (= x1075 x1462) (not x1106) (= (x808 (+ x1482 96)) x862) (= x1392 x633) (= (x317 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1368) x1172) (= x1368 (x808 (+ x552 63))) (= (x808 (+ x1075 x1172)) x633))) (= (x1028 (x582 274184521717934524641157099916833587206)) x1343) (= (x379 (x582 x1166)) x228) (= x599 (x569 x1462)) x943 (= (= 0 x552) x1106) (= x1245 (> x599 0))) x513)))
(assert (= 0 (x984 x238)))
(assert (= (=> (= x1474 (< 0 x393)) (and (=> (not x1474) x160) (=> x1474 x277))) x542))
(assert (x891 x1470))
(assert (x891 x1320))
(assert (= (x582 826074471) (x511 826074471)))
(assert (x751 x703))
(assert (x891 x263))
(assert (= 1889567281 (x465 (x511 1889567281))))
(assert (= (x1067 x1392) (ite (= x1392 x708) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1021 x1392))))
(assert (x891 x935))
(assert (x705 x779 x827))
(assert (= (x404 x1142) (ite (and x36 x206 (not x1324)) (x49 x1142) (x1059 x1142))))
(assert (x751 x825))
(assert (= (ite (= x467 x153) x159 (x1610 x467)) (x504 x467)))
(assert (=> (>= 10000 x509) (= (x582 x509) (x511 x509))))
(assert (x891 x295))
(assert (= (ite (= x1268 x1451) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x1451)) (x1370 x1451)))
(assert (x891 x1462))
(assert (x891 x111))
(assert (= (x955 x1220) (ite (= x185 x1220) x55 (x1370 x1220))))
(assert (x891 x1235))
(assert (= (x582 2532887486) (x511 2532887486)))
(assert (= x986 x484))
(assert (x891 x305))
(assert (= (x465 (x582 x731)) x731))
(assert (= (x121 x545) (ite (and x539 x171) (x1102 x545) (ite (and x96 (not x171) x539) (x1102 x545) (x1020 x545)))))
(assert (=> (>= 10000 x1290) (= (x582 x1290) (x511 x1290))))
(assert (x891 x1026))
(assert (x891 x870))
(assert (x891 x455))
(assert (= (x711 x84) (ite (and x964 x1305) (x219 x84) (x873 x84))))
(assert (x891 x354))
(assert (= (x1167 x1231) (ite (and x951 x151) (x125 x1231) (x1304 x1231))))
(assert (= (ite (= x185 x1377) x55 (x1370 x1377)) (x955 x1377)))
(assert (= (ite (= x134 x787) x669 (x80 x134)) (x1610 x134)))
(assert (= (x465 (x511 468353030)) 468353030))
(assert (= (x1370 x467) (ite (= x1268 x467) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x467))))
(assert (x1003 x127))
(assert (= (x465 (x582 x157)) x157))
(assert (=> (>= 10000 x1433) (= (x511 x1433) (x582 x1433))))
(assert (x891 x1486))
(assert (= (x957 x238) (ite (= x238 x1402) x720 (x626 x238))))
(assert (x891 x772))
(assert (= (x465 (x582 x38)) x38))
(assert (= 2293535753 (x465 (x511 2293535753))))
(assert (x751 x676))
(assert (= x534 (x465 (x582 x534))))
(assert (= (x465 (x582 x580)) x580))
(assert (= x1454 (x465 (x582 x1454))))
(assert (= x1427 (x465 (x582 x1427))))
(assert (x891 x1224))
(assert (= (x465 (x582 x2)) x2))
(assert (= (ite (= x238 x442) x526 (x1455 x238)) (x219 x238)))
(assert (x751 x261))
(assert (=> (<= x1166 10000) (= (x511 x1166) (x582 x1166))))
(assert (= (x465 (x582 x692)) x692))
(assert (= (ite (= x1142 x590) x791 (x459 x1142)) (x1159 x1142)))
(assert (x891 x1223))
(assert (x891 x190))
(assert (= (x504 x1077) (ite (= x153 x1077) x159 (x1610 x1077))))
(assert (= x1384 (or (and (not x491) x854) (and x1554 (not x62)))))
(assert (x891 x534))
(assert (= x1420 (x465 (x582 x1420))))
(assert (= (x504 x1414) (ite (= x1414 x153) x159 (x1610 x1414))))
(assert (= 0 (x984 x766)))
(assert (x891 x1483))
(assert (x751 x1280))
(assert (x891 x1090))
(assert (= (x511 1461501637330902918203684832716283019655932542975) (x582 1461501637330902918203684832716283019655932542975)))
(assert (= x908 (x465 (x582 x908))))
(assert (= (x465 (x511 87118632)) 87118632))
(assert (x891 x889))
(assert (= (x511 2798343961) (x582 2798343961)))
(assert (x751 x1008))
(assert (= (x582 274184521717934524641157099916833587214) (x511 274184521717934524641157099916833587214)))
(assert (= (ite (and x1030 x194) (x813 x1408) (x709 x1408)) (x1180 x1408)))
(assert (x891 x361))
(assert (=> (>= 10000 x247) (= (x511 x247) (x582 x247))))
(assert (= (x465 (x511 2418364589)) 2418364589))
(assert (= (ite (= x1402 x1131) x720 (x626 x1131)) (x957 x1131)))
(assert (=> (<= x323 10000) (= (x582 x323) (x511 x323))))
(assert (= (x465 (x582 x1379)) x1379))
(assert (x891 x1196))
(assert (= (x459 x63) (ite (= x430 x63) x907 (x241 x63))))
(assert (= x1114 (x465 (x582 x1114))))
(assert (= (x131 x1408) (ite (and x1421 x258 x1457 (not x1543) x124 x69) (x327 x1408) (ite (and x1421 (not x258) x1457 x124 x69) (x419 x1408) (ite (and x1457 x1421 (not x124) x69) (x384 x1408) (ite (and (not x1421) x69 x1457) (x1067 x1408) (x717 x1408)))))))
(assert (= (ite (= x441 x804) x811 (x937 x441)) (x1032 x441)))
(assert (= (x984 x1462) 0))
(assert (= x991 (x465 (x582 x991))))
(assert (= (x511 2211524764) (x582 2211524764)))
(assert (x751 x1427))
(assert (=> (<= x942 10000) (= (x582 x942) (x511 x942))))
(assert (x891 x972))
(assert (x891 x1448))
(assert (= (x465 (x582 x694)) x694))
(assert (= (ite (= x238 x708) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1021 x238)) (x1067 x238)))
(assert (x891 x1598))
(assert (x891 x1178))
(assert (= (x984 x153) 0))
(assert (= (or (and (not x1094) x776) (and x91 (not x1316))) x1476))
(assert (= (x459 x1462) (ite (= x430 x1462) x907 (x241 x1462))))
(assert (x891 x426))
(assert (x891 x883))
(assert (x891 x363))
(assert (= (x886 x766) (ite (and (not x615) x151 x512 (not x137)) (x1159 x766) (ite (and (not x615) x151 (not x512)) (x459 x766) (ite (and x615 x151) (x459 x766) (x595 x766))))))
(assert (x891 x1270))
(assert (= (x1159 x238) (ite (= x590 x238) x791 (x459 x238))))
(assert (x891 x83))
(assert (x751 x1442))
(assert (=> (>= 10000 x1145) (= (x511 x1145) (x582 x1145))))
(assert (x891 x894))
(assert (= (ite (= x442 x153) x159 (x1610 x442)) (x504 x442)))
(assert (=> (<= x2 10000) (= (x582 x2) (x511 x2))))
(assert (= (x465 (x582 x1572)) x1572))
(assert (x891 x1221))
(assert (=> (>= 10000 x874) (= (x582 x874) (x511 x874))))
(assert (= x1376 (x465 (x582 x1376))))
(assert (=> (>= 10000 x59) (= (x582 x59) (x511 x59))))
(assert (x891 x1411))
(assert (= (x955 x1408) (ite (= x185 x1408) x55 (x1370 x1408))))
(assert (x891 x1514))
(assert (x891 x107))
(assert (x751 x692))
(assert (= (x582 2960351575) (x511 2960351575)))
(assert (= (x955 x134) (ite (= x185 x134) x55 (x1370 x134))))
(assert (= x294 x748))
(assert (x891 x1005))
(assert (x891 x2))
(assert (=> (<= x945 10000) (= (x511 x945) (x582 x945))))
(assert (x891 x456))
(assert (x891 x462))
(assert (x891 x926))
(assert (x891 x352))
(assert (= (ite (= x1402 x1220) x720 (x626 x1220)) (x957 x1220)))
(assert (= x1365 (x465 (x582 x1365))))
(assert (= x733 (x465 (x582 x733))))
(assert (=> (<= x347 10000) (= (x582 x347) (x511 x347))))
(assert (x891 x1403))
(assert (= x1588 (x465 (x582 x1588))))
(assert (x891 x449))
(assert (= (x504 x1220) (ite (= x153 x1220) x159 (x1610 x1220))))
(assert (x891 x430))
(assert (= x1261 (=> (and (or (and (= (x317 1461501637330902918203684832716283019655932542975 x701) x648) (= x420 (x1177 (x582 x648) x1040 0)) (not x940) (>= x637 0) (= (x1177 (x582 x1256) x420 0) x606) (= x637 (x200 x606)) (= x1256 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= x1040 (x1177 (x582 x41) (x511 9) 0)) (= x507 1) (<= x637 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x486 x637)) (and x940 (= x486 0) (= 0 x507))) (= (= 0 x41) x940)) x233)))
(assert (=> (>= 10000 x1008) (= (x511 x1008) (x582 x1008))))
(assert (= (x1032 x795) (ite (= x804 x795) x811 (x937 x795))))
(assert (x891 x492))
(assert (x751 x733))
(assert (x705 x701 x1565))
(assert (x360 x152 x847))
(assert (= (ite (= x467 x590) x791 (x459 x467)) (x1159 x467)))
(assert (x1003 x152))
(assert (= (x219 x248) (ite (= x442 x248) x526 (x1455 x248))))
(assert (= (x511 911411945) (x582 911411945)))
(assert (= (ite (and x151 x512 (not x137) (not x615)) (x1159 x1220) (ite (and (not x615) x151 (not x512)) (x459 x1220) (ite (and x151 x615) (x459 x1220) (x595 x1220)))) (x886 x1220)))
(assert (= (x1159 x1377) (ite (= x1377 x590) x791 (x459 x1377))))
(assert (x751 x1420))
(assert (= (x465 (x582 x1390)) x1390))
(assert (=> (>= 10000 x381) (= (x511 x381) (x582 x381))))
(assert (= 274184521717934524641157099916833587214 (x465 (x511 274184521717934524641157099916833587214))))
(assert (= (x465 (x511 2835717307)) 2835717307))
(assert (x891 x814))
(assert (x891 x1418))
(assert (x1003 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x891 x687))
(assert (= x771 (=> (and (= (< 0 x229) x929) (= x1250 (x1177 (x582 x393) (x511 7) 0)) (>= x257 0) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x205) (= x1379 (x317 1461501637330902918203684832716283019655932542975 x701)) (>= x229 0) (not (< x257 x1580)) (= (x1177 (x582 x205) x1007 0) x841) (= x229 (x1278 x841)) (= x1007 (x1177 (x582 x1379) x1250 0)) (<= x229 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x257)) (and (=> (not x929) x542) (=> (and (= (x1177 (x582 x157) x750 0) x341) (= x750 (x1177 (x582 x1489) x1302 0)) (= x1041 (x200 x341)) (= x486 x1041) (= x507 0) (<= x1041 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1302 (x1177 (x582 x393) (x511 9) 0)) x929 (>= x1041 0) (= x1489 (x317 1461501637330902918203684832716283019655932542975 x701)) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x157)) x233)))))
(assert (= x190 (x465 (x582 x190))))
(assert (= x1340 (=> (= (< 0 x526) x36) (and (=> (and (= x464 (x1495 (x582 x1166))) (= (x117 x220) x525) (= x1482 (x808 (+ 100 x948))) x56 (= (x1241 x442) x1323) (= (x1370 x948) x702) (= x668 x1389) (or (and (or (and (= x248 (x808 (+ x948 64))) x852 (= (> x702 64) x506) (= (x955 x248) x1396) (or (and (= (> x702 96) x1150) (= x720 (x626 x1414)) x506 (= (x808 (+ 128 x1482)) x1402) (or (and (= x319 96) (not x1150)) (and (= x1598 (x808 (+ 160 x1482))) (not x1314) x1150 (= x1147 (x957 x1131)) (= x1314 (< 128 x702)) (= x319 128) (= (x808 (+ x948 128)) x1131))) (= x1414 (x808 (+ 96 x948)))) (and (not x506) (= 64 x319))) (= (x808 (+ 96 x1482)) x628)) (and (= x319 32) (not x852))) (= x852 (> x702 32)) (= x185 x1075) x471 (= x55 (x1370 x467)) (= x220 x467)) (and (= x319 0) (not x471))) (= x1014 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= x1268 (x808 (+ 96 x1570))) (= (> x464 0) x56) (= x1570 (x808 (+ x948 36))) (= (x317 26959946667150639794667015087019630673637144422540572481103610249215 x525) x817) (= (x808 (+ 32 x948)) x220) (>= 1461501637330902918203684832716283019655932542975 x1166) (= (x212 (- x1482 x948)) x1072) (= x1166 (x652 x1389)) (= (x808 (+ 68 x948)) x102) (= (x1241 x63) x1567) (= (< 0 x702) x471) (> x526 0) (= (> x319 x702) x1324) x36 (or (not x1324) (and x1324 (= x406 (x808 (+ x702 x1075))))) (= x1484 (x808 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x817))) (= x498 (x212 (- x1072 32))) (= x63 (x808 (+ x562 160))) (= 0 x413) (< 0 x1323) (= (x808 (+ 128 x1570)) x1075)) x388) (=> (not x36) x739)))))
(assert (x891 x1413))
(assert (= x456 (x465 (x582 x456))))
(assert (= (ite (= x1377 x1268) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x1377)) (x1370 x1377)))
(assert (= x294 x1344))
(assert (= x1363 (=> (and (<= x956 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x956 0) (= (x317 1461501637330902918203684832716283019655932542975 x701) x694) (= (= x956 0) x62) (= x916 (x1177 (x582 x694) x777 0)) (= x777 (x1177 (x582 x1434) (x511 6) 0)) (= x956 (x1063 x916))) (and (=> x62 x1464) (=> (and (= x458 x1434) (not x62)) x857)))))
(assert (x751 x1042))
(assert (= (x465 (x582 x942)) x942))
(assert (= (ite (and x1030 x194) (x813 x134) (x709 x134)) (x1180 x134)))
(assert (x891 x853))
(assert (x891 x945))
(assert (= (x582 69947311) (x511 69947311)))
(assert (x891 x509))
(assert (x751 x1496))
(assert (x891 x1530))
(assert (= (x511 649617121) (x582 649617121)))
(assert (= (x511 18446744073709551615) (x582 18446744073709551615)))
(assert (= (ite (= x1414 x787) x669 (x80 x1414)) (x1610 x1414)))
(assert (x891 x727))
(assert (= (x1159 x1462) (ite (= x1462 x590) x791 (x459 x1462))))
(assert (= x832 (and x69 x1457)))
(assert (=> (<= x1438 10000) (= (x511 x1438) (x582 x1438))))
(assert (x751 x874))
(assert (=> (>= 10000 x1078) (= (x582 x1078) (x511 x1078))))
(assert (= (x711 x1270) (ite (and x964 x1305) (x219 x1270) (x873 x1270))))
(assert (x891 x1174))
(assert (= x326 (x465 (x582 x326))))
(assert (x891 x1033))
(assert (= (x465 (x582 x274)) x274))
(assert (= (ite (= x628 x1220) x1396 (x955 x1220)) (x626 x1220)))
(assert (= (ite (= x1268 x948) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x948)) (x1370 x948)))
(assert (= x389 (x465 (x582 x389))))
(assert (= x992 (=> (and (= x1091 (= x193 0)) (or (and (= x269 0) (= 0 x1074) x1091) (and (= x340 (= x690 0)) (= x690 (x1575 x1587)) (= (x1177 (x582 x40) x1458 0) x1587) (not x1091) (>= x690 0) (= (x1177 (x582 x193) (x511 10) 0) x1458) (<= x690 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= x269 x690) (= x1074 1) (not x340)) (and x340 (= 0 x1074) (= 0 x269))) (= x40 (x317 1461501637330902918203684832716283019655932542975 x701))))) x768)))
(assert (=> (<= x28 10000) (= (x582 x28) (x511 x28))))
(assert (x891 x290))
(assert (x891 x1134))
(assert (= (x1610 x766) (ite (= x766 x787) x669 (x80 x766))))
(assert (x891 x242))
(assert (x891 x1287))
(assert (x891 x1116))
(assert (= x1128 x1345))
(assert (=> (>= 10000 x1489) (= (x582 x1489) (x511 x1489))))
(assert (x891 x642))
(assert (x891 x197))
(assert (= (ite (= x153 x1131) x159 (x1610 x1131)) (x504 x1131)))
(assert (= x757 (x465 (x582 x757))))
(assert (= x875 (=> (and (= x700 (x1177 (x582 x893) x67 0)) (not (= 2690754053 x563)) (not (= x563 2764855426)) (<= x1581 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1581 (x125 x700)) (= x106 x1581) (> x505 0) (not (> 2690754053 x563)) (= (x1177 (x582 x1054) (x511 5) 0) x67) (<= x893 1461501637330902918203684832716283019655932542975) (not (< x563 2293535753)) (< x563 2960351575) (>= x1581 0) (= x505 (x1495 (x582 274184521717934524641157099916833587206))) (not (= x563 2743102681)) (= x563 2798343961)) (=> (and (= x638 x1532) (= x1465 x1293) (= x931 x85) (= x334 x106)) x1607))))
(assert (x891 x1562))
(assert (=> (>= 10000 x790) (= (x582 x790) (x511 x790))))
(assert (x751 x1116))
(assert (= (ite (= x1268 x1462) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x1462)) (x1370 x1462)))
(assert (x891 x728))
(assert (= (x711 x442) (ite (and x964 x1305) (x219 x442) (x873 x442))))
(assert (x751 x1307))
(assert (x891 x1339))
(assert (x891 x1014))
(assert (x891 x991))
(assert (= (ite (and (not x1150) x852 x471 x36 x206 x506) (x957 x1462) (ite (and x852 x471 x206 x36 (not x506)) (x626 x1462) (ite (and (not x852) x206 x471 x36) (x955 x1462) (ite (and x36 x206 (not x471)) (x1370 x1462) (x391 x1462))))) (x49 x1462)))
(assert (x891 x325))
(assert (x891 x549))
(assert (x891 x1586))
(assert (= (x465 (x582 x451)) x451))
(assert (x891 x646))
(assert (x751 x1114))
(assert (x751 x855))
(assert (x891 x844))
(assert (= x1353 true))
(assert (x891 x144))
(assert (x891 x392))
(assert (x891 x1590))
(assert (= (x1387 x520) (ite (and x171 x539) (x989 x520) (ite (and x96 x539 (not x171)) (x994 x520) (x1210 x520)))))
(assert (= (x1159 x134) (ite (= x134 x590) x791 (x459 x134))))
(assert (=> (<= x648 10000) (= (x511 x648) (x582 x648))))
(assert (=> (>= 10000 x147) (= (x511 x147) (x582 x147))))
(assert (x891 x861))
(assert (x891 x389))
(assert (= (=> (and (= x931 x1182) (= x1400 x1465)) x1518) x739))
(assert (= 0 (x984 x220)))
(assert (=> (<= x264 10000) (= (x511 x264) (x582 x264))))
(assert (x751 x824))
(assert (x891 x1260))
(assert (= x226 (x465 (x582 x226))))
(assert (x751 x28))
(assert (x891 x243))
(assert (x891 x567))
(assert (x751 x607))
(assert (x751 x920))
(assert (= (+ (x465 x965) 1) (x465 (x904 x965 1))))
(assert (x891 x842))
(assert (= (x465 (x511 1000000000000000000)) 1000000000000000000))
(assert (= x1341 x427))
(assert (x891 x53))
(assert (x891 x244))
(assert (=> (>= 10000 x1292) (= (x582 x1292) (x511 x1292))))
(assert (x705 x798 x1436))
(assert (= x835 (or (and x24 (not x336)) (and (not x924) x1613) (and x491 x854))))
(assert (x891 x1511))
(assert (= x247 (x465 (x582 x247))))
(assert (x891 x708))
(assert (x891 x1118))
(assert (x891 x1187))
(assert (x751 x926))
(assert (= (=> (and (= x1490 (x317 1461501637330902918203684832716283019655932542975 x701)) (= x1576 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= x1094 (= x1393 0)) (= (x1177 (x582 x385) (x511 7) 0) x1162) (= x947 (x1177 (x582 x1490) x1162 0)) (<= 0 x1393) (<= x1393 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1177 (x582 x1576) x947 0) x729) (= x1393 (x1387 x729))) (and (=> (and x1094 (= (< 0 x306) x673) (= x306 (x212 (- x385 1))) (not x673)) x803) (=> (and (not x1094) (= x385 x894)) x515))) x1029))
(assert (x751 x15))
(assert (=> (<= x1175 10000) (= (x511 x1175) (x582 x1175))))
(assert (= x863 (x465 (x582 x863))))
(assert (x891 x1306))
(assert (x751 x1166))
(assert (x891 x271))
(assert (x891 x1430))
(assert (x751 x1292))
(assert (=> (<= x757 10000) (= (x511 x757) (x582 x757))))
(assert (x891 x438))
(assert (= (ite (= x185 x1451) x55 (x1370 x1451)) (x955 x1451)))
(assert (x891 x1148))
(assert (= (x404 x134) (ite (and x36 (not x1324) x206) (x49 x134) (x1059 x134))))
(assert (x891 x468))
(assert (x891 x734))
(assert (= (ite (and x964 x1305) (x219 x63) (x873 x63)) (x711 x63)))
(assert (x891 x345))
(assert (= (x384 x1142) (ite (= x382 x1142) x1485 (x1067 x1142))))
(assert (= (ite (= x787 x467) x669 (x80 x467)) (x1610 x467)))
(assert (=> (<= x18 10000) (= (x582 x18) (x511 x18))))
(assert (= (x465 (x582 x59)) x59))
(assert (=> (>= 10000 x900) (= (x582 x900) (x511 x900))))
(assert (x751 x1390))
(assert (= x703 (x465 (x582 x703))))
(assert (x891 x586))
(assert (x751 x1486))
(assert (= (x1067 x1142) (ite (= x1142 x708) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1021 x1142))))
(assert (x891 x202))
(assert (x891 x798))
(assert (= (x511 142201243) (x582 142201243)))
(assert (= x1293 (x465 (x582 x1293))))
(assert (x891 x672))
(assert (=> (>= 10000 x770) (= (x582 x770) (x511 x770))))
(assert (x891 x1145))
(assert (x891 x677))
(assert (= x18 (x465 (x582 x18))))
(assert (x891 x1571))
(assert (=> (>= 10000 x300) (= (x511 x300) (x582 x300))))
(assert (= x738 (and x1474 x971)))
(assert (x891 x948))
(assert (=> (>= 10000 x695) (= (x511 x695) (x582 x695))))
(assert (= (x1159 x1270) (ite (= x1270 x590) x791 (x459 x1270))))
(assert (= x1182 (x465 (x582 x1182))))
(assert (x891 x1588))
(assert (= (x459 x238) (ite (= x238 x430) x907 (x241 x238))))
(assert (x891 x1485))
(assert (x891 x433))
(assert (x360 x454 x357))
(assert (=> (>= 10000 x274) (= (x511 x274) (x582 x274))))
(assert (= (x465 (x582 x638)) x638))
(assert (= x918 (x465 (x582 x918))))
(assert (x891 x568))
(assert (x891 x599))
(assert (= (x711 x248) (ite (and x1305 x964) (x219 x248) (x873 x248))))
(assert (x891 x799))
(assert (= (x957 x1451) (ite (= x1402 x1451) x720 (x626 x1451))))
(assert (= (ite (= x1408 x708) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1021 x1408)) (x1067 x1408)))
(assert (=> (<= x1087 10000) (= (x511 x1087) (x582 x1087))))
(assert (x891 x556))
(assert (= x526 (x219 x442)))
(assert (x891 x1596))
(assert (= (x504 x1142) (ite (= x153 x1142) x159 (x1610 x1142))))
(assert (= (ite (and (not x1150) x852 x471 x206 x36 x506) (x957 x1220) (ite (and x852 x471 x36 (not x506) x206) (x626 x1220) (ite (and x206 x36 (not x852) x471) (x955 x1220) (ite (and x206 x36 (not x471)) (x1370 x1220) (x391 x1220))))) (x49 x1220)))
(assert (x891 x1272))
(assert (x891 x775))
(assert (= (ite (= x1408 x787) x669 (x80 x1408)) (x1610 x1408)))
(assert (= (ite (= x804 x250) x811 (x937 x250)) (x1032 x250)))
(assert (x891 x1443))
(assert (= x278 (x465 (x582 x278))))
(assert (x891 x142))
(assert (x891 x956))
(assert (= (=> (and (= (< 0 x385) x559) (= (x212 (- x1434 1)) x385)) (and (=> x559 x1029) (=> (not x559) x803))) x1327))
(assert (x891 x18))
(assert (=> (>= 10000 x686) (= (x582 x686) (x511 x686))))
(assert (= x985 x1457))
(assert (x751 x1454))
(assert (x891 x1264))
(assert (= x686 (x465 (x582 x686))))
(assert (x891 x1310))
(assert (= (x886 x153) (ite (and (not x137) x151 x512 (not x615)) (x1159 x153) (ite (and (not x615) (not x512) x151) (x459 x153) (ite (and x615 x151) (x459 x153) (x595 x153))))))
(assert (= (ite (and x539 x171) (x1102 x288) (ite (and x539 (not x171) x96) (x1102 x288) (x1020 x288))) (x121 x288)))
(assert (x891 x1334))
(assert (x891 x1292))
(assert (= (and x377 x1557) x91))
(assert (=> (>= 10000 x78) (= (x582 x78) (x511 x78))))
(assert (= (x511 2743102681) (x582 2743102681)))
(assert (= (ite (and x539 x171) (x989 x729) (ite (and x96 x539 (not x171)) (x994 x729) (x1210 x729))) (x1387 x729)))
(assert (=> (<= x278 10000) (= (x511 x278) (x582 x278))))
(assert (= (=> (= x41 0) x1261) x160))
(assert (x891 x897))
(assert (=> (<= x687 10000) (= (x511 x687) (x582 x687))))
(assert (x891 x1189))
(assert (= (x711 x1220) (ite (and x1305 x964) (x219 x1220) (x873 x1220))))
(assert (x891 x10))
(assert (= (=> (and (= x1164 (x904 x1516 1)) (= x961 (x1610 x787)) (= (= 0 x591) x822) (= (x1467 x892) x696) (= (x1177 (x582 x1496) x923 0) x273) (>= x1410 0) (= x923 (x1177 (x582 x1290) x1120 0)) (or (and (not x822) (or (not x1380) (and (or (not x141) (and (= x285 x1562) (= x1562 (x99 x795)) (= x735 (x1177 (x582 x234) x581 0)) (= x692 (x317 1461501637330902918203684832716283019655932542975 x701)) (< (+ x1530 x1542) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 1461501637330902918203684832716283019655932542975 x580) (= (x808 (+ x392 64)) x664) (= (x504 x442) x338) (= (x1177 (x582 x1264) x280 0) x1071) (< 1 x526) (= (x652 x664) x278) (> x526 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901) (= (x504 x84) x1530) (= (x99 x1487) x901) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1579) (= x84 (x808 (+ 192 x562))) (= (* x1152 x1579) x1141) (= (+ x1097 x285) x759) (<= 0 x901) (= (x317 1461501637330902918203684832716283019655932542975 x701) x234) (> x526 1) (= x554 (> x526 2)) (= x795 (x1177 (x582 x278) x1519 0)) x141 (= x901 0) (= x1264 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= x855 (x652 x664)) (<= x855 1461501637330902918203684832716283019655932542975) (= x1315 (x1177 (x582 x855) x735 0)) (>= x1562 0) (< (* x1579 x1152) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1177 (x582 x1434) (x511 4) 0) x1015) (= x38 (x317 1461501637330902918203684832716283019655932542975 x701)) (>= x1579 0) (= (x1177 (x582 x580) x1071 0) x1487) (= x1530 x846) (= (+ x1226 x846) x927) (= (x1177 (x582 x1434) (x511 4) 0) x105) (= x1226 x1542) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x591 x1562)) (not x554) (= x580 (x652 x664)) (<= x278 1461501637330902918203684832716283019655932542975) (= x591 x1097) (< 1 x338) (= (x1578 x1315) x1579) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x33) (= (div x1141 1000000000000000000) x1542) (= (x1177 (x582 x33) x704 0) x1519) (= x280 (x1177 (x582 x38) x1015 0)) (= (x1177 (x582 x1434) (x511 11) 0) x581) (= x704 (x1177 (x582 x692) x105 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1562))) (= (x652 x444) x571) (= (x1313 x275) x1002) (= (x317 1461501637330902918203684832716283019655932542975 x701) x686) (= x444 x668) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1181) (= x575 (x652 x444)) (< (+ x325 x639) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1313 x439) x305) (= (+ x114 x1381) x1422) (= (x1177 (x582 x575) x169 0) x275) (<= 0 x305) (= x487 (x1177 (x582 x571) x522 0)) (= x410 (* x1181 x1152)) (>= x1002 0) (= x114 x591) (= x252 (x317 1461501637330902918203684832716283019655932542975 x701)) (= (x1177 (x582 x1430) x183 0) x169) (= (x317 1461501637330902918203684832716283019655932542975 x701) x761) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x247) (= x593 (x1177 (x582 x1434) (x511 4) 0)) (< 0 x526) (= x183 (x1177 (x582 x686) x593 0)) (<= x305 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x1430) (>= 1461501637330902918203684832716283019655932542975 x571) (= (x1610 x153) x325) x1380 (= x1099 (x1610 x442)) (= x502 x639) (= x1540 (x1177 (x582 x252) x1253 0)) (= (x1177 (x582 x274) x980 0) x439) (> x526 0) (= x153 (x808 (+ 160 x562))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x305 x591)) (= x1002 0) (= (+ x502 x1600) x159) (= (x652 x444) x274) (<= x1002 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x575) (= x1600 x325) (<= x274 1461501637330902918203684832716283019655932542975) (< 0 x1099) (= (x1177 (x582 x1434) (x511 4) 0) x1253) (>= x1181 0) (= (x1177 (x582 x761) x944 0) x522) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1152 x1181)) (> x526 0) (= x944 (x1177 (x582 x1434) (x511 11) 0)) (= x1181 (x1578 x487)) (= x980 (x1177 (x582 x247) x1540 0)) (= x1381 x305) (= (< 1 x526) x141) (= x639 (div x410 1000000000000000000)))) (= (x317 x454 x357) x877) (= x877 0) (= x357 (ite (< 115792089237316195423570985008687907853269984665640564039457 x591) 1 0)) (< 0 x696) (= (> x526 0) x1380) (= (mod (* x591 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x655) (= (div x655 x696) x1152) (= x454 1)) x822) (= (x1177 (x582 x1434) (x511 5) 0) x572) (= (x1177 (x582 x1434) (x511 1) 0) x1516) (= (x1177 (x582 x1145) x390 0) x1010) (= x787 (x808 (+ x853 32))) (<= x697 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1290 (x317 1461501637330902918203684832716283019655932542975 x701)) (<= 0 x696) (<= x1410 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= x1178 (x317 1461501637330902918203684832716283019655932542975 x701)) (not x335)) x335) (<= x591 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1434 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x1496 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= (x808 (+ 2 x393)) x848) (>= x591 0) (<= x669 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x892 (x1177 (x582 x1418) x572 0)) (= x335 (= 0 x1074)) (= (x1177 (x582 x1434) (x511 3) 0) x1120) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x696) (= x591 (x1295 x273)) (= x1410 (x254 x1516)) (= x296 x948) (= (x808 (+ 64 x853)) x296) (= x390 (x1177 (x582 x1434) (x511 6) 0)) (or (and (= (x1167 x1231) x807) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1511 x807)) (= (+ x784 x719) x614) (= (x1177 (x582 x1434) (x511 5) 0) x283) (= (x317 1461501637330902918203684832716283019655932542975 x701) x594) (= x719 x807) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x807) (= x1511 x784) (not x447) (= x322 x1511) (<= 0 x807) (< (* x269 x245) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x317 1461501637330902918203684832716283019655932542975 x701) x1093) (= x1110 (x1177 (x582 x1093) x1585 0)) (= (x1177 (x582 x594) x283 0) x1231) (= x322 (* x269 x245)) (= (x1177 (x582 x1434) (x511 6) 0) x1585)) (and (= x293 (x317 1461501637330902918203684832716283019655932542975 x701)) (= (x1177 (x582 x1434) (x511 6) 0) x12) x447 (= (x1177 (x582 x293) x12 0) x143))) (> x848 x556) (= x697 (x1063 x1010)) (= (x204 x1164) x669) (= x1145 (x317 1461501637330902918203684832716283019655932542975 x701)) (= (< x697 x961) x1246) (or (and (= (= x697 0) x429) (= (x1610 x787) x821) (= x23 (< x821 x966)) (or (and (= x1239 x245) (= x1239 (x212 (- x352 x999))) (= x999 (x1610 x853)) x429 (not (< x352 x999))) (and (not x429) (= 604800 x934) (= x245 x1296) (= (x212 (- x352 x697)) x483) (= x1296 (ite (> 604800 x483) x483 604800)) (not (< x352 x697)))) x1246 (or (and (= x352 x1334) x23 (= (x1610 x787) x1334)) (and (not x23) (= x966 x352)))) (and (not x1246) (= x245 0))) (= x1418 (x317 1461501637330902918203684832716283019655932542975 x701)) (<= 0 x697) (>= x669 0) (= (= 0 x245) x447)) x1340) x768))
(assert (x751 x1183))
(assert (= (x957 x1377) (ite (= x1402 x1377) x720 (x626 x1377))))
(assert (x891 x1087))
(assert (= (ite (= x766 x590) x791 (x459 x766)) (x1159 x766)))
(assert (= (x465 (x582 x1093)) x1093))
(assert (= x803 (=> (= 0 x942) x249)))
(assert (x891 x1572))
(assert (x751 x209))
(assert (x891 x1043))
(assert (=> (>= 10000 x226) (= (x511 x226) (x582 x226))))
(assert (x751 x908))
(assert (= 274184521717934524641157099916833587214 (x465 (x582 274184521717934524641157099916833587214))))
(assert (= (x465 (x511 1986467848)) 1986467848))
(assert (x891 x1420))
(assert (x891 x418))
(assert (x891 x1179))
(assert (=> (>= 10000 x1083) (= (x582 x1083) (x511 x1083))))
(assert (x891 x609))
(assert (= x576 (=> (= x863 0) x1248)))
(assert (x751 x1083))
(assert (= (x984 x1077) 0))
(assert (= x978 (x465 (x582 x978))))
(assert (x891 x1368))
(assert (x891 x1611))
(assert (= (ite (and x832 x833) (x301 x1408) (x758 x1408)) (x423 x1408)))
(assert (x751 274184521717934524641157099916833587206))
(assert (= (x511 635128645) (x582 635128645)))
(assert (= x960 (x465 (x582 x960))))
(assert (x751 x40))
(assert (x751 x300))
(assert (= 1461501637330902918203684832716283019655932542975 (x465 (x511 1461501637330902918203684832716283019655932542975))))
(assert (= (x511 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x582 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x891 x603))
(assert (= (and x206 x36) x1030))
(assert (= x1282 (=> (and (>= 1461501637330902918203684832716283019655932542975 x78) (not (= x974 2293535753)) (<= 0 x1466) (= x1004 (x1177 (x582 x78) x1201 0)) (= x118 x1466) (= 2532887486 x974) (= (x1177 (x582 x824) (x511 4) 0) x30) (> 2960351575 x974) (> 2690754053 x974) (not (= 2512682246 x974)) (= (x937 x1004) x1466) (= x1566 (x1177 (x582 x190) x30 0)) (not (> 2293535753 x974)) (<= x190 1461501637330902918203684832716283019655932542975) (< 0 x823) (= x823 (x1495 (x582 274184521717934524641157099916833587206))) (= (x1177 (x582 x5) x1566 0) x1201) (not (= 2418364589 x974)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1466) (>= 1461501637330902918203684832716283019655932542975 x5)) (=> (and (<= 0 x257) (= x668 (x808 (+ 36 x1207))) (= (x1495 (x582 274184521717934524641157099916833587206)) x17) (= x728 x966) (>= 1461501637330902918203684832716283019655932542975 x1038) (not (= 2690754053 x889)) (= (x808 (+ x442 x932)) x975) (= (x212 (- x1187 4)) x656) (> x1187 163) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1187)) (>= 1461501637330902918203684832716283019655932542975 x1507) (= x1507 x531) (= (x1455 128) x492) (not (< x1187 x253)) (not (< x889 2690754053)) (not (> 2293535753 x889)) x1146 (not (> 4 x1187)) (= 128 x374) (= x562 (x808 (+ x1033 32))) (= (= 0 x526) x964) (= x253 (x808 (+ x668 x1173))) (= x445 x962) (= (mod (* 32 x526) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1033) (= x1132 x727) (not (= 2764855426 x889)) (= (mod (* 32 x526) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1118) (= x1089 x1507) (<= 0 x1608) (= x541 (x808 (+ x1207 35))) (not (> x526 18446744073709551615)) (not (< x257 x445)) (= x1603 x1207) (= x392 (x808 (+ x1207 4))) (= x932 (x808 (+ x1118 32))) (= x445 x556) (>= 1461501637330902918203684832716283019655932542975 x1283) (> 2960351575 x889) (<= 0 x1283) (= (x212 (- x492 1)) x1521) (not (= 2868243304 x889)) (not (or (> x656 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x656 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x656 160)))) (not (< x492 1)) (= x727 x1608) (= (x808 (+ 160 x1033)) x442) (or x964 (and (= x88 (mod (* 32 x526) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x979 (x808 (+ 160 x562))) (not x964))) (or (and (= x239 (x212 (- x492 1))) (= (< 1 x492) x1354) (not (> x239 1)) x915 (not (> 1 x492)) (or (not x1354) (and (= (x317 1461501637330902918203684832716283019655932542975 x798) x845) x1354 (not (= x845 x1199)) (= x127 (x1455 160)) (= x270 (> x492 2)) (> x867 0) (= x1199 (x317 1461501637330902918203684832716283019655932542975 x127)) (= x798 (x1455 192)) (< 1 x242) (= (x1455 128) x867) (or (and (not (= x998 x1547)) (= x680 (x1455 224)) (> x31 0) (> x1479 2) (= (x317 1461501637330902918203684832716283019655932542975 x779) x998) (not x1594) (= x1547 (x317 1461501637330902918203684832716283019655932542975 x680)) (= x779 (x1455 160)) (= (x1455 128) x31) x270 (= x1479 (x1455 128)) (= x1594 (< 3 x492))) (not x270)) (= x242 (x1455 128))))) (not x915)) (= x393 x403) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x257) (>= x1038 0) (not (= 2798343961 x889)) (> x17 0) (not (= 2743102681 x889)) (= x365 x103) (= 0 x365) (= (x652 x392) x526) (= (x808 (+ 160 x1118)) x463) (= x1235 x701) (= x930 (>= x1221 x1574)) (>= 1461501637330902918203684832716283019655932542975 x1608) (= (mod (* x526 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1173) (not (< x445 x393)) (= x701 x897) (= x118 x1574) (= (and x930 x1439) x1146) (= x1580 x393) (<= x701 1461501637330902918203684832716283019655932542975) (= x889 2939843472) (= x915 (> x1521 0)) (= x1038 x818) (or (and (> x1187 x541) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x541) (<= x1187 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x541) (<= x1187 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> x1603 18446744073709551615))) x1138))))
(assert (x891 x170))
(assert (= (x465 (x582 x366)) x366))
(assert (= (ite (= x248 x430) x907 (x241 x248)) (x459 x248)))
(assert (x751 x694))
(assert (x891 x507))
(assert (x891 x580))
(assert (x891 x1429))
(assert (= (x711 x153) (ite (and x1305 x964) (x219 x153) (x873 x153))))
(assert (= (ite (and x1305 x964) (x219 x1414) (x873 x1414)) (x711 x1414)))
(assert (x891 x932))
(assert (= 2743102681 (x465 (x511 2743102681))))
(assert (= (x511 26959946667150639794667015087019630673637144422540572481103610249215) (x582 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= x523 x1184))
(assert (= (x459 x1131) (ite (= x430 x1131) x907 (x241 x1131))))
(assert (= x1430 (x465 (x582 x1430))))
(assert (=> (>= 10000 x393) (= (x511 x393) (x582 x393))))
(assert (x891 x1041))
(assert (x891 x621))
(assert (= (ite (and (not x137) x151 x512 (not x615)) (x1032 x1487) (ite (and (not x512) (not x615) x151) (x937 x1487) (ite (and x151 x615) (x937 x1487) (x1564 x1487)))) (x1313 x1487)))
(assert (= (=> (and (not (= 2690754053 x842)) (= x71 x1448) (= x1448 (x139 x173)) (> x1514 0) (= (x1495 (x582 274184521717934524641157099916833587206)) x1514) (>= 1461501637330902918203684832716283019655932542975 x1369) (not (= x842 2743102681)) (not (> 2293535753 x842)) (not (> 2690754053 x842)) (not (= x842 2764855426)) (>= x1448 0) (<= x1448 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x333 (x1177 (x582 x1275) (x511 5) 0)) (> 2960351575 x842) (= 2798343961 x842) (= x173 (x1177 (x582 x1369) x333 0))) (=> (and (= x1339 x931) (= x716 x1532) (= x1225 x71) (= x1465 x825)) x110)) x1388))
(assert (= 0 (x984 x63)))
(assert (x751 x104))
(assert (x751 x451))
(assert (=> (<= x1490 10000) (= (x511 x1490) (x582 x1490))))
(assert (=> (>= 10000 x1280) (= (x511 x1280) (x582 x1280))))
(assert (= (x465 (x582 x1391)) x1391))
(assert (x891 x339))
(assert (= (x465 (x582 x156)) x156))
(assert (=> (<= x692 10000) (= (x582 x692) (x511 x692))))
(assert (x891 x406))
(assert (x1011 x525 x1556))
(assert (x891 x934))
(assert (x891 x811))
(assert (= x385 (x465 (x582 x385))))
(assert (= (x504 x238) (ite (= x238 x153) x159 (x1610 x238))))
(assert (x891 x975))
(assert (x751 x1093))
(assert (x891 x680))
(assert (=> (<= x1544 10000) (= (x511 x1544) (x582 x1544))))
(assert (x891 x905))
(assert (x891 x1317))
(assert (=> (>= 10000 x234) (= (x511 x234) (x582 x234))))
(assert (x751 x2))
(assert (= (x1167 x1417) (ite (and x951 x151) (x125 x1417) (x1304 x1417))))
(assert (x891 x645))
(assert (= (ite (= x766 x1268) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x766)) (x1370 x766)))
(assert (x751 x456))
(assert (x891 x405))
(assert (= x883 (x465 (x582 x883))))
(assert (=> (<= x456 10000) (= (x511 x456) (x582 x456))))
(assert (x891 x119))
(assert (x891 x79))
(assert (= (ite (= x590 x84) x791 (x459 x84)) (x1159 x84)))
(assert (x751 x580))
(assert (x891 x524))
(assert (= (x465 (x582 x5)) x5))
(assert (= x778 (x465 (x582 x778))))
(assert (x891 x906))
(assert (= x323 (x465 (x582 x323))))
(assert (= x1053 (or (and (not x899) x1468) (and x1161 x774) (and x971 (not x1474)))))
(assert (= x315 (x465 (x582 x315))))
(assert (= (x465 (x582 x1366)) x1366))
(assert (x891 x85))
(assert (x891 x153))
(assert (x1003 x357))
(assert (= (x511 604800) (x582 604800)))
(assert (= (ite (and x171 x539) (x1102 x20) (ite (and (not x171) x539 x96) (x1102 x20) (x1020 x20))) (x121 x20)))
(assert (= (x404 x1462) (ite (and (not x1324) x36 x206) (x49 x1462) (x1059 x1462))))
(assert (x891 x1391))
(assert (= x716 (x465 (x582 x716))))
(assert (x891 x1484))
(assert (x891 x399))
(assert (= (x465 (x582 x810)) x810))
(assert (x891 x134))
(assert (=> (>= 10000 x190) (= (x511 x190) (x582 x190))))
(assert (= (x327 x134) (ite (= x516 x134) x424 (x419 x134))))
(assert (= (=> (and (not (= x1223 0)) (= (< (x8 (x582 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x146) (or (and (= (x808 (+ 96 x1456)) x354) (= x767 x1377) (not x312)) (and (= 96 x1377) x312)) (not x255) (= (= 0 x1049) x312) (= (< 0 x363) x623) (= x255 (> x526 2)) (or (not x623) (and (= x1016 (x1294 x1408)) (= (x1294 x1377) x1488) (= (= x1016 0) x995) (= (x808 (+ 32 x1377)) x1408) (= x1016 x1287) (not (or (and (> 32 x1488) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1488))) (> x1488 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x834 (not x995)) x623 (= x1287 (ite x834 1 0)) (> x1016 0))) x146 (= (x1294 x1377) x363) (= (x386 (x582 x731)) x364)) x739) x548))
(assert (= (ite (= x439 x804) x811 (x937 x439)) (x1032 x439)))
(assert (= (and x859 x259) x1330))
(assert (= x1395 (x465 (x582 x1395))))
(assert (= (x327 x1408) (ite (= x1408 x516) x424 (x419 x1408))))
(assert (x891 x494))
(assert (x891 x1392))
(assert (= (x465 (x582 x1005)) x1005))
(assert (x891 x1239))
(assert (=> (<= x1588 10000) (= (x511 x1588) (x582 x1588))))
(assert (= (x1032 x1487) (ite (= x1487 x804) x811 (x937 x1487))))
(assert (= x399 (x465 (x582 x399))))
(assert (= (x1610 x853) (ite (= x787 x853) x669 (x80 x853))))
(assert (x891 x639))
(assert (x891 x1414))
(assert (=> (>= 10000 x48) (= (x582 x48) (x511 x48))))
(assert (x891 x692))
(assert (= (ite (= x185 x766) x55 (x1370 x766)) (x955 x766)))
(assert (= (x984 192) 0))
(assert (= (x121 x273) (ite (and x539 x171) (x1102 x273) (ite (and (not x171) x96 x539) (x1102 x273) (x1020 x273)))))
(assert (x751 x509))
(assert (= (or (and (not x1161) x774) (and (not x35) x738)) x782))
(assert (= (ite (= x708 x134) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1021 x134)) (x1067 x134)))
(assert (= (x219 x220) (ite (= x442 x220) x526 (x1455 x220))))
(assert (= (x711 x1077) (ite (and x964 x1305) (x219 x1077) (x873 x1077))))
(assert (x891 x236))
(assert (x891 x1438))
(assert (x891 x237))
(assert (x891 x1137))
(assert (x891 x1096))
(assert (x891 x744))
(assert (= (x465 (x582 x661)) x661))
(assert (x751 x264))
(assert (= (x465 (x582 x1555)) x1555))
(assert (x891 x845))
(assert (x891 x648))
(assert (x891 x1493))
(assert (x891 x1492))
(assert (x891 x445))
(assert (x891 x746))
(assert (x891 x1035))
(assert (= x1560 (=> (and (<= 0 x1113) (= x408 (x1177 (x582 x1413) (x511 6) 0)) (= x1440 (= x1113 0)) (= (x317 1461501637330902918203684832716283019655932542975 x701) x48) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1113) (= (x1177 (x582 x48) x408 0) x304) (= (x987 x304) x1113)) (and (=> (and (= x1559 (x212 (- x1413 1))) (not x988) x1440 (= x988 (< 0 x1559))) x576) (=> (and (= x1413 x1338) (not x1440)) x553)))))
(assert (x1003 x525))
(assert (x891 x205))
(assert (x891 x764))
(assert (= (x984 x248) 0))
(assert (=> (>= 10000 x156) (= (x511 x156) (x582 x156))))
(assert (=> (>= 10000 x825) (= (x511 x825) (x582 x825))))
(assert (x891 x789))
(assert (x751 x991))
(assert (x751 x1365))
(assert (x751 x205))
(assert (= 274184521717934524641157099916833587206 (x465 (x511 274184521717934524641157099916833587206))))
(assert (= (and x559 x162) x776))
(assert (= 69947311 (x465 (x511 69947311))))
(assert (= x474 x1523))
(assert (x891 x1469))
(assert (x891 x338))
(assert (x891 x847))
(assert (= (x886 x220) (ite (and x512 x151 (not x615) (not x137)) (x1159 x220) (ite (and (not x615) (not x512) x151) (x459 x220) (ite (and x615 x151) (x459 x220) (x595 x220))))))
(assert (= (x1610 x1220) (ite (= x787 x1220) x669 (x80 x1220))))
(assert (x891 x1000))
(assert (x751 x687))
(assert (=> (>= 10000 x716) (= (x511 x716) (x582 x716))))
(assert (x751 x244))
(assert (x891 x824))
(assert (x891 x638))
(assert (= (=> (and (or (and (= x1191 (x1177 (x582 x226) x417 0)) (= (x317 1461501637330902918203684832716283019655932542975 x701) x226) (= (x1177 (x582 x393) (x511 9) 0) x417) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x15) (= x95 (x1177 (x582 x15) x1191 0)) (not x92)) x92) (= x171 (= x486 0)) (= x92 (= 0 x507)) (or (and (= x290 x975) (= (x1177 (x582 x534) x528 0) x881) (= x534 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= x1008 (x317 1461501637330902918203684832716283019655932542975 x701)) (= x528 (x1177 (x582 x1008) x29 0)) (= (x1177 (x582 x393) (x511 7) 0) x29) x171) (and (= (x1177 (x582 x695) x585 0) x1212) (>= x266 0) (= (x1278 x373) x271) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x661) (= x373 (x1177 (x582 x661) x1212 0)) (= x266 (x254 x781)) (= x1475 (x904 x781 1)) (= (x808 (+ x975 64)) x977) (= (x34 x706) x922) (= x781 (x1177 (x582 x393) (x511 1) 0)) (= x909 (< x271 x922)) (= (x204 x1475) x645) (<= 0 x645) (not x171) (<= x271 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x271 0) (= x695 (x317 1461501637330902918203684832716283019655932542975 x701)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x266) (= (x1177 (x582 x393) (x511 7) 0) x585) (or (and (or (and (= x1571 x966) (not x619)) (and (= (x34 x706) x890) (= x1571 x890) x619)) (= x428 (= 0 x271)) (or (and (= (x34 x975) x1137) (= (x212 (- x1571 x1137)) x22) (= x22 x145) (not (> x1137 x1571)) x428) (and (not x428) (= x1232 (ite (< x1236 604800) x1236 604800)) (= x1236 (x212 (- x1571 x271))) (= 604800 x1127) (not (< x1571 x271)) (= x145 x1232))) x909 (= (x34 x706) x1373) (= x619 (> x966 x1373))) (and (not x909) (= 0 x145))) (= x96 (= 0 x145)) (<= x645 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x706 (x808 (+ x975 32))) (or (and (<= 0 x1306) (not x96) (= x830 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= x1306 (x1102 x1263)) (< (+ x1156 x1306) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1076 x1156) (= x144 (+ x222 x917)) (= x1280 (x317 1461501637330902918203684832716283019655932542975 x701)) (= x1076 (* x486 x145)) (= x977 x290) (= (x1177 (x582 x830) x1079 0) x1263) (= x222 x1156) (= x1306 x917) (= x1079 (x1177 (x582 x1265) x113 0)) (= x707 (x317 1461501637330902918203684832716283019655932542975 x1507)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1306) (< (* x486 x145) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1177 (x582 x1280) x165 0) x1073) (= (x1177 (x582 x393) (x511 3) 0) x113) (= x165 (x1177 (x582 x393) (x511 7) 0)) (= x1265 (x317 1461501637330902918203684832716283019655932542975 x701)) (= (x1177 (x582 x707) x1073 0) x685)) (and (= (x1177 (x582 x315) x756 0) x1498) (= x290 x977) (= x315 (x317 1461501637330902918203684832716283019655932542975 x1507)) (= x558 (x1177 (x582 x393) (x511 7) 0)) x96 (= x147 (x317 1461501637330902918203684832716283019655932542975 x701)) (= (x1177 (x582 x147) x558 0) x756)))))) x602) x233))
(assert (x751 x535))
(assert (=> (>= 10000 x252) (= (x582 x252) (x511 x252))))
(assert (x751 x247))
(assert (x891 x347))
(assert (x891 x901))
(assert (=> (<= x15 10000) (= (x511 x15) (x582 x15))))
(assert (x891 x856))
(assert (=> (<= x104 10000) (= (x582 x104) (x511 x104))))
(assert (= 0 (x984 224)))
(assert (=> (<= x1442 10000) (= (x511 x1442) (x582 x1442))))
(assert (x1003 x779))
(assert (= (x955 x248) (ite (= x248 x185) x55 (x1370 x248))))
(assert (x891 x561))
(assert (x891 x1086))
(assert (= (x465 (x582 x1489)) x1489))
(assert (= (=> (and (<= x603 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1096 468353030)) (= x612 (x1495 (x582 274184521717934524641157099916833587206))) (= x1483 x603) (not (= x1096 635128645)) (= (x1278 x1504) x603) (= x16 (x1177 (x582 x261) (x511 7) 0)) (= (x1177 (x582 x451) x265 0) x1504) (= x1096 759532456) (= (x1177 (x582 x1390) x16 0) x265) (not (> 468353030 x1096)) (< x1096 2293535753) (>= 1461501637330902918203684832716283019655932542975 x451) (<= x1390 1461501637330902918203684832716283019655932542975) (< 0 x612) (< x1096 911411945) (<= 0 x603)) (=> (and (= (<= x1163 x203) x675) x675 (= x203 x1483) (= x931 x703) (= x912 x1465)) x256)) x831))
(assert (= (ite (= x590 x1220) x791 (x459 x1220)) (x1159 x1220)))
(assert (= (ite (and x539 x171) (x989 x1348) (ite (and x539 x96 (not x171)) (x994 x1348) (x1210 x1348))) (x1387 x1348)))
(assert (= (x465 (x582 x1418)) x1418))
(assert (= (x465 (x582 x1496)) x1496))
(assert (= (x886 x84) (ite (and x512 x151 (not x615) (not x137)) (x1159 x84) (ite (and (not x512) (not x615) x151) (x459 x84) (ite (and x615 x151) (x459 x84) (x595 x84))))))
(assert (x891 x1163))
(assert (x891 x1603))
(assert (=> (>= 10000 x799) (= (x582 x799) (x511 x799))))
(assert (x891 x1390))
(assert (x891 x1396))
(assert (= (x626 x442) (ite (= x628 x442) x1396 (x955 x442))))
(assert (= (x1167 x663) (ite (and x951 x151) (x125 x663) (x1304 x663))))
(assert (x891 x1601))
(assert (x751 x770))
(assert (x891 x1437))
(assert (x891 x1182))
(assert (x891 x403))
(assert (x751 x1293))
(assert (= (=> (and (= x1428 x624) (= x1428 (>= x1134 x438)) (= x438 x449)) x624) x755))
(assert (x751 x78))
(assert (= x1057 (=> (and (= (x1177 (x582 x509) x211 0) x617) (< x1193 2960351575) (= x1193 2532887486) (not (= x1193 2293535753)) (not (> 2293535753 x1193)) (not (= 2418364589 x1193)) (<= x209 1461501637330902918203684832716283019655932542975) (= (x1177 (x582 x1083) (x511 4) 0) x741) (not (= 2512682246 x1193)) (<= x926 1461501637330902918203684832716283019655932542975) (= x211 (x1177 (x582 x209) x409 0)) (< 0 x567) (= x1050 x107) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1050) (<= 0 x1050) (= (x1177 (x582 x926) x741 0) x409) (= (x1495 (x582 274184521717934524641157099916833587206)) x567) (= x1050 (x1332 x617)) (< x1193 2690754053) (>= 1461501637330902918203684832716283019655932542975 x509)) x1508)))
(assert (= (x465 (x582 x48)) x48))
(assert (= (x511 274184521717934524641157099916833587218) (x582 274184521717934524641157099916833587218)))
(assert (x751 x571))
(assert (= (x465 (x582 x300)) x300))
(assert (x891 x573))
(assert (= (ite (= x442 x1408) x526 (x1455 x1408)) (x219 x1408)))
(assert (x891 x90))
(assert (= (ite (= x787 x442) x669 (x80 x442)) (x1610 x442)))
(assert (x891 x152))
(assert (= (ite (= x628 x1408) x1396 (x955 x1408)) (x626 x1408)))
(assert (= (or (and x969 x577) (and x194 x1030)) x985))
(assert (= x1234 (x465 (x582 x1234))))
(assert (= (x504 x84) (ite (= x153 x84) x159 (x1610 x84))))
(assert (= (x1313 x275) (ite (and (not x137) (not x615) x512 x151) (x1032 x275) (ite (and x151 (not x512) (not x615)) (x937 x275) (ite (and x151 x615) (x937 x275) (x1564 x275))))))
(assert (=> (<= x1116 10000) (= (x582 x1116) (x511 x1116))))
(assert (= (=> (and (> x1606 0) (= (x1177 (x582 x1420) x896 0) x1568) (not (> 2690754053 x1189)) (= x1189 2743102681) (> 2960351575 x1189) (<= x148 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1307) (= (x1102 x1568) x148) (= x355 (x1177 (x582 x1005) (x511 3) 0)) (not (= x1189 2690754053)) (<= x1420 1461501637330902918203684832716283019655932542975) (>= x148 0) (= x148 x142) (= x1606 (x1495 (x582 274184521717934524641157099916833587206))) (= x896 (x1177 (x582 x1307) x355 0)) (not (> 2293535753 x1189))) (=> (and (= x1090 x78) (= x1465 x824) (= x1221 x142) (= x931 x190) (= x5 x1532)) x1282)) x913))
(assert (= (x465 (x582 x695)) x695))
(assert (x891 x690))
(assert (= (x219 x1131) (ite (= x442 x1131) x526 (x1455 x1131))))
(assert (x891 x58))
(assert (= (=> (and (not (< x885 2293535753)) (< 0 x1100) (= x885 2743102681) (= x161 (x1177 (x582 x825) (x511 3) 0)) (not (> 2690754053 x885)) (not (= 2690754053 x885)) (>= 1461501637330902918203684832716283019655932542975 x1339) (= (x1177 (x582 x716) x794 0) x288) (= x223 (x1023 x288)) (= (x1177 (x582 x1339) x161 0) x794) (= x223 x1190) (<= 0 x223) (= (x1495 (x582 274184521717934524641157099916833587206)) x1100) (<= x223 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 2960351575 x885) (<= x716 1461501637330902918203684832716283019655932542975)) (=> (and (= x366 x931) (= x687 x1465) (= x1190 x1545) (= x93 (<= x1545 x1225))) x1599)) x110))
(assert (= (ite (= x628 x1462) x1396 (x955 x1462)) (x626 x1462)))
(assert (x891 x1220))
(assert (x891 x394))
(assert (= x640 (and (not x833) x832)))
(assert (= (x1610 x1451) (ite (= x1451 x787) x669 (x80 x1451))))
(assert (x891 x467))
(assert (x891 x1555))
(assert (x891 x469))
(assert (x891 x1433))
(assert (=> (<= x1130 10000) (= (x511 x1130) (x582 x1130))))
(assert (= (x465 (x582 x825)) x825))
(assert (x891 x1156))
(assert (x891 x996))
(assert (x891 x374))
(assert (x751 x912))
(assert (= (x465 (x582 x1265)) x1265))
(assert (=> (>= 10000 x1005) (= (x582 x1005) (x511 x1005))))
(assert (x891 x1299))
(assert (x891 x326))
(assert (= (x465 (x582 x252)) x252))
(assert (= (x465 (x582 x1413)) x1413))
(assert (x891 x966))
(assert (x891 x1160))
(assert (x891 x451))
(assert (x891 x1372))
(assert (x891 x1151))
(assert (x891 x1131))
(assert (= (ite (and x69 (not x1543) x1421 x124 x258 x1457) (x327 x1377) (ite (and x124 x69 (not x258) x1421 x1457) (x419 x1377) (ite (and (not x124) x69 x1457 x1421) (x384 x1377) (ite (and x1457 x69 (not x1421)) (x1067 x1377) (x717 x1377))))) (x131 x1377)))
(assert (x891 x306))
(assert (= x648 (x465 (x582 x648))))
(assert (=> (<= x810 10000) (= (x582 x810) (x511 x810))))
(assert (= (ite (and (not x615) (not x137) x151 x512) (x1159 x1131) (ite (and (not x512) x151 (not x615)) (x459 x1131) (ite (and x151 x615) (x459 x1131) (x595 x1131)))) (x886 x1131)))
(assert (x751 x1303))
(assert (x751 x226))
(assert (x891 x234))
(assert (= (ite (= x275 x804) x811 (x937 x275)) (x1032 x275)))
(assert (x891 x668))
(assert (x891 x1193))
(assert (x751 x1265))
(assert (= (ite (and x951 x151) (x1426 x1010) (x174 x1010)) (x1063 x1010)))
(assert (x891 x664))
(assert (x891 x463))
(assert (x891 x810))
(assert (=> (<= x1000 10000) (= (x582 x1000) (x511 x1000))))
(assert (x891 x1507))
(assert (= (x465 (x511 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (=> (>= 10000 x1275) (= (x511 x1275) (x582 x1275))))
(assert (= (ite (and (not x1150) x852 x506 x206 x471 x36) (x957 x442) (ite (and x852 x36 x471 (not x506) x206) (x626 x442) (ite (and x471 (not x852) x36 x206) (x955 x442) (ite (and x206 (not x471) x36) (x1370 x442) (x391 x442))))) (x49 x442)))
(assert (=> (>= 10000 x1042) (= (x582 x1042) (x511 x1042))))
(assert (x751 x315))
(assert (x751 x1576))
(assert (x891 x552))
(assert (x891 x1228))
(assert (= (x1610 x787) x669))
(assert (x891 x628))
(assert (x751 x179))
(assert (x891 x19))
(assert (x891 x292))
(assert (= (x711 x1408) (ite (and x964 x1305) (x219 x1408) (x873 x1408))))
(assert (x751 x810))
(assert (x891 x730))
(assert (x891 x907))
(assert (x751 x1290))
(assert (x891 x1207))
(assert (x751 x1489))
(assert (=> (<= x1169 10000) (= (x582 x1169) (x511 x1169))))
(assert (x891 x563))
(assert (=> (<= x205 10000) (= (x582 x205) (x511 x205))))
(assert (= (=> (and (= false x982) (= false x508) (= x1572 x1465) (= (x176 (x582 274184521717934524641157099916833587218)) x752) (<= 0 x931) (= x818 x973) (>= 1461501637330902918203684832716283019655932542975 x931) (= 5 x878) (>= 1461501637330902918203684832716283019655932542975 x1532) (= x21 (x176 (x582 274184521717934524641157099916833587206))) (= x1042 x931) (= x1160 x1081) (<= 0 x973) (<= 0 x1160) (= (x176 (x582 274184521717934524641157099916833587214)) x70) (= x133 (< 0 (x1495 (x582 274184521717934524641157099916833587214)))) x490 (<= x973 1461501637330902918203684832716283019655932542975) (<= 0 x21) (>= 1461501637330902918203684832716283019655932542975 x1160) x133 (>= 1461501637330902918203684832716283019655932542975 x1090) (<= 0 x70) (= x318 false) (= (< 0 (x1495 (x582 274184521717934524641157099916833587206))) x954) (= (> (x1495 (x582 274184521717934524641157099916833587218)) 0) x490) (= false x858) (<= 0 x752) (<= 0 x1090) x954 (>= x1532 0) (= 2939843472 x432)) x1037) x47))
(assert (x751 x1430))
(assert (x891 x177))
(assert (x891 x1047))
(assert (= (x955 x1142) (ite (= x1142 x185) x55 (x1370 x1142))))
(assert (x891 x976))
(assert (x891 x637))
(assert (= (x465 (x511 2514000705)) 2514000705))
(assert (x751 x252))
(assert (x751 x237))
(assert (= (x465 (x582 x97)) x97))
(assert (= (ite (and x151 (not x615) x512 (not x137)) (x1159 x467) (ite (and (not x615) x151 (not x512)) (x459 x467) (ite (and x615 x151) (x459 x467) (x595 x467)))) (x886 x467)))
(assert (= (x955 x1462) (ite (= x1462 x185) x55 (x1370 x1462))))
(assert (= (x582 87118632) (x511 87118632)))
(assert (x891 x157))
(assert (x891 x1442))
(assert (=> (>= 10000 x534) (= (x582 x534) (x511 x534))))
(assert (= (and x924 x1613) x1554))
(assert (= (x404 x238) (ite (and x206 (not x1324) x36) (x49 x238) (x1059 x238))))
(assert (= (x465 (x582 x1046)) x1046))
(assert (x1003 x1507))
(assert (= x1175 (x465 (x582 x1175))))
(assert (x751 x1005))
(assert (x891 x334))
(assert (x891 x669))
(assert (= (x49 x1377) (ite (and x36 x206 x506 x852 x471 (not x1150)) (x957 x1377) (ite (and x852 x206 (not x506) x36 x471) (x626 x1377) (ite (and x471 x206 (not x852) x36) (x955 x1377) (ite (and x206 x36 (not x471)) (x1370 x1377) (x391 x1377)))))))
(assert (= (x955 x1077) (ite (= x185 x1077) x55 (x1370 x1077))))
(assert (x751 x716))
(assert (x891 x1046))
(assert (x891 x1022))
(assert (x891 x1318))
(assert (=> (<= x1576 10000) (= (x511 x1576) (x582 x1576))))
(assert (= x748 x523))
(assert (x891 x4))
(assert (x751 x707))
(assert (= (ite (= x787 x1377) x669 (x80 x1377)) (x1610 x1377)))
(assert (= x313 x539))
(assert (x891 x1142))
(assert (= (x957 x134) (ite (= x134 x1402) x720 (x626 x134))))
(assert (=> (<= x1413 10000) (= (x511 x1413) (x582 x1413))))
(assert (= (x465 (x582 x1290)) x1290))
(assert (= (x49 x766) (ite (and x471 x852 (not x1150) x206 x506 x36) (x957 x766) (ite (and x852 (not x506) x206 x471 x36) (x626 x766) (ite (and x206 x471 x36 (not x852)) (x955 x766) (ite (and (not x471) x36 x206) (x1370 x766) (x391 x766)))))))
(assert (= (x511 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x582 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x891 x179))
(assert (=> (<= x1420 10000) (= (x582 x1420) (x511 x1420))))
(assert (= (x1159 x1451) (ite (= x590 x1451) x791 (x459 x1451))))
(assert (= (x465 (x582 x687)) x687))
(assert (=> (>= 10000 x1234) (= (x511 x1234) (x582 x1234))))
(assert (= (x711 x1462) (ite (and x1305 x964) (x219 x1462) (x873 x1462))))
(assert (=> (<= x1376 10000) (= (x511 x1376) (x582 x1376))))
(assert (x891 x1434))
(assert (x751 x1048))
(assert (x891 x1008))
(assert (x891 x1240))
(assert (x891 x127))
(assert (= x1305 x1325))
(assert (x891 x1489))
(assert (= (x459 x1270) (ite (= x1270 x430) x907 (x241 x1270))))
(assert (= (=> (and (= x1035 (x1278 x371)) (= (x1177 (x582 x393) (x511 7) 0) x1019) (= x400 (x317 1461501637330902918203684832716283019655932542975 x701)) (= (= x1035 0) x35) (= (x1177 (x582 x676) x879 0) x371) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1035) (= x879 (x1177 (x582 x400) x1019 0)) (>= x1035 0) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x676)) (and (=> (and (not x35) (= x138 x393)) x1385) (=> x35 x358))) x277))
(assert (= (x465 (x582 x1042)) x1042))
(assert (x891 x33))
(assert (x1003 x701))
(assert (x891 x209))
(assert (=> (<= x230 10000) (= (x582 x230) (x511 x230))))
(assert (=> (>= 10000 x920) (= (x511 x920) (x582 x920))))
(assert (= (ite (and x36 x852 x506 (not x1150) x471 x206) (x957 x1077) (ite (and (not x506) x206 x471 x36 x852) (x626 x1077) (ite (and x471 x36 (not x852) x206) (x955 x1077) (ite (and (not x471) x36 x206) (x1370 x1077) (x391 x1077))))) (x49 x1077)))
(assert (= (x465 (x904 x1516 1)) (+ 1 (x465 x1516))))
(assert (x891 x1077))
(assert (= (x423 x1377) (ite (and x832 x833) (x301 x1377) (x758 x1377))))
(assert (x891 x1576))
(assert (x891 x983))
(assert (x891 x164))
(assert (= (x327 x1377) (ite (= x1377 x516) x424 (x419 x1377))))
(assert (= (x957 x766) (ite (= x1402 x766) x720 (x626 x766))))
(assert (x891 x807))
(assert (=> (<= x1256 10000) (= (x511 x1256) (x582 x1256))))
(assert (= (=> (and (> x495 0) (not (= x407 2061678023)) (= (x1177 (x582 x1182) x348 0) x210) (= (x75 x210) x426) (= x407 2258409472) (> 2293535753 x407) (= x426 x1593) (= x348 (x1177 (x582 x1400) (x511 6) 0)) (not (< x407 911411945)) (not (> 1968616202 x407)) (not (= 2211524764 x407)) (not (= 1986467848 x407)) (<= x426 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1182 1461501637330902918203684832716283019655932542975) (not (= x407 1968616202)) (= (x1495 (x582 274184521717934524641157099916833587206)) x495) (>= x426 0)) (=> (and (= x1317 x1593) (= x931 x230) (= x97 x1465) (= x1532 x978)) x1550)) x1518))
(assert (= (or (and x1404 (not x762)) x1526) x344))
(assert (= (ite (= x708 x1077) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1021 x1077)) (x1067 x1077)))
(assert (=> (>= 10000 x778) (= (x582 x778) (x511 x778))))
(assert (x891 x1488))
(assert (x891 x382))
(assert (=> (<= x1265 10000) (= (x582 x1265) (x511 x1265))))
(assert (= (ite (and (not x615) x512 (not x137) x151) (x1159 x1414) (ite (and x151 (not x615) (not x512)) (x459 x1414) (ite (and x151 x615) (x459 x1414) (x595 x1414)))) (x886 x1414)))
(assert (= x1186 (x465 (x582 x1186))))
(assert (= x276 (=> (and (= x608 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1357 (x582 x731)))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x58) x437) x437 x651 (= x651 (>= x397 0)) (= x1216 x52) (= (x1357 (x582 x731)) x414) (= (x1233 (x582 x731)) x58) (= (x1233 (x582 274184521717934524641157099916833587206)) x397) (= (x1233 (x582 274184521717934524641157099916833587206)) x298) x608 (= x833 (= 274184521717934524641157099916833587218 x731))) (and (=> (not x833) x1135) (=> (and (= x450 x561) (not (< x120 4)) (= 2835717307 x1492) (= x329 (x1495 (x582 274184521717934524641157099916833587218))) (= x1372 x496) (= x65 (x1177 (x582 x1372) (x511 1) 0)) (= x1223 1) (= x613 274184521717934524641157099916833587206) (not x452) (= x1372 x170) (= x4 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x1492 826074471)) (<= 0 x1202) (< 0 x329) (<= 0 x1151) (= x1533 x1017) (= 68 x120) (= x1546 x450) (not x1444) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1228) (and (< x1228 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1228) true))) x232) (not (< x1492 649617121)) (= x610 (x1177 (x582 274184521717934524641157099916833587206) (x511 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1151) (= x1049 32) (<= x1202 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x452 (< x1151 x561)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x561 x1202)) (= x436 (x212 (- x1151 x450))) (not x331) (= (>= (+ x561 x1202) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1444) (= x1031 (x1177 (x582 274184521717934524641157099916833587206) (x511 1) 0)) x833 (not (= 1889567281 x1492)) (= x1228 (x212 (- x120 4))) (= x120 x52) (= x838 x1202) (= x561 x1) (= (x723 x65) x1202) (not (= 649617121 x1492)) (= x621 274184521717934524641157099916833587206) (<= x1372 1461501637330902918203684832716283019655932542975) (not (= 2514000705 x1492)) (not x232) (= x1151 (x1605 x610)) (= x307 (+ x838 x1)) (= x331 (< x1151 x450))) x548)))))
(assert (x751 x293))
(assert (x751 x778))
(assert (= x14 (x465 (x582 x14))))
(assert (= (=> (and (= (x212 (- x1434 1)) x1555) (= (> x1555 0) x336)) (and (=> (not x336) x1085) (=> x336 x1024))) x1464))
(assert (= (x711 x766) (ite (and x1305 x964) (x219 x766) (x873 x766))))
(assert (=> (>= 10000 x1379) (= (x511 x1379) (x582 x1379))))
(assert (= x431 (or x840 (and x671 x1001))))
(assert (x891 x630))
(assert (= x24 (and x1554 x62)))
(assert (x751 x14))
(assert (=> (>= 10000 x37) (= (x511 x37) (x582 x37))))
(assert (x891 x620))
(assert (= (x219 x1414) (ite (= x442 x1414) x526 (x1455 x1414))))
(assert (= x1339 (x465 (x582 x1339))))
(assert (=> (<= x244 10000) (= (x582 x244) (x511 x244))))
(assert (x891 x505))
(assert (= (ite (= x153 x442) x526 (x1455 x153)) (x219 x153)))
(assert (= (x459 x1414) (ite (= x1414 x430) x907 (x241 x1414))))
(assert (=> (<= x594 10000) (= (x511 x594) (x582 x594))))
(assert (=> (>= 10000 x1395) (= (x511 x1395) (x582 x1395))))
(assert (x891 x321))
(assert (x751 x1046))
(assert (= (x504 x1377) (ite (= x153 x1377) x159 (x1610 x1377))))
(assert (=> (>= 10000 x1048) (= (x582 x1048) (x511 x1048))))
(assert (x891 x633))
(assert (x751 x761))
(assert (=> (<= x468 10000) (= (x582 x468) (x511 x468))))
(assert (x891 x678))
(assert (x751 x1264))
(assert (x891 x701))
(assert (= (ite (and x951 x151) (x125 x892) (x1304 x892)) (x1167 x892)))
(assert (= (x465 (x582 x85)) x85))
(assert (= (x49 x1142) (ite (and x206 x506 (not x1150) x852 x471 x36) (x957 x1142) (ite (and x852 x206 (not x506) x471 x36) (x626 x1142) (ite (and x36 (not x852) x471 x206) (x955 x1142) (ite (and (not x471) x206 x36) (x1370 x1142) (x391 x1142)))))))
(assert (x751 x861))
(assert (= (x219 x1462) (ite (= x1462 x442) x526 (x1455 x1462))))
(assert (= (ite (and x539 x171) (x989 x123) (ite (and (not x171) x96 x539) (x994 x123) (x1210 x123))) (x1387 x123)))
(assert (= (ite (and x194 x1030) (x813 x442) (x709 x442)) (x1180 x442)))
(assert (x891 x766))
(assert (= (x465 (x582 x1048)) x1048))
(assert (x891 x1216))
(assert (x891 x611))
(assert (x891 x1365))
(assert (= (and x35 x738) x1468))
(assert (= (x465 (x582 x1433)) x1433))
(assert (x891 x1265))
(assert (=> (>= 10000 x237) (= (x511 x237) (x582 x237))))
(assert (=> (>= 10000 x1366) (= (x582 x1366) (x511 x1366))))
(assert (= (x1370 x1414) (ite (= x1414 x1268) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x1414))))
(assert (= x1248 (=> (and (= (= 0 x863) x314) (or (and x314 (= 0 x332) (= x518 0)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1170) (= x1087 (x317 1461501637330902918203684832716283019655932542975 x701)) (not x314) (= (x1177 (x582 x1087) x914 0) x510) (= x1170 (x566 x510)) (= x914 (x1177 (x582 x863) (x511 10) 0)) (= (= x1170 0) x538) (<= 0 x1170) (or (and (= 1 x332) (not x538) (= x1170 x518)) (and (= x518 0) (= 0 x332) x538))))) x1218)))
(assert (x891 x942))
(assert (x891 x691))
(assert (x891 x159))
(assert (x891 x381))
(assert (=> (<= x1307 10000) (= (x582 x1307) (x511 x1307))))
(assert (x891 x1093))
(assert (= (ite (and x852 x206 x506 x471 x36 (not x1150)) (x957 x1408) (ite (and x36 x852 x206 x471 (not x506)) (x626 x1408) (ite (and x36 (not x852) x471 x206) (x955 x1408) (ite (and x206 x36 (not x471)) (x1370 x1408) (x391 x1408))))) (x49 x1408)))
(assert (x891 x466))
(assert (x891 x57))
(assert (= (=> (= x138 x41) x1261) x1385))
(assert (= x1382 (=> (and (= (x1177 (x582 x1292) (x511 7) 0) x480) (= (x317 1461501637330902918203684832716283019655932542975 x1507) x1114) (= (x1177 (x582 x900) x480 0) x1553) (>= x1469 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1469) (= x1469 (x1278 x1200)) (= x1200 (x1177 (x582 x1114) x1553 0)) (= (x317 1461501637330902918203684832716283019655932542975 x701) x900) (= x1161 (= x1469 0))) (and (=> (and (= x1292 x138) (not x1161)) x1385) (=> (and (= (< 0 x111) x843) x1161 (not x843) (= x111 (x212 (- x1292 1)))) x160)))))
(assert (= (x1159 x442) (ite (= x590 x442) x791 (x459 x442))))
(assert (= (x511 2764855426) (x582 2764855426)))
(assert (= (x465 (x511 604800)) 604800))
(assert (= x1275 (x465 (x582 x1275))))
(assert (x751 x1413))
(assert (x891 x1395))
(assert (x751 x85))
(assert (= (or (and (not x559) x162) (and x1094 x776) (and x1557 (not x377))) x1549))
(assert (= (x711 x1377) (ite (and x964 x1305) (x219 x1377) (x873 x1377))))
(assert (= (x886 x238) (ite (and (not x137) (not x615) x512 x151) (x1159 x238) (ite (and (not x615) x151 (not x512)) (x459 x238) (ite (and x615 x151) (x459 x238) (x595 x238))))))
(assert (x891 x479))
(assert (= 2258409472 (x465 (x511 2258409472))))
(assert (x751 x278))
(assert (x751 x157))
(assert (= x41 (x465 (x582 x41))))
(assert (x891 x39))
(assert (x891 x778))
(assert (x891 x400))
(assert (=> (>= 10000 x1372) (= (x582 x1372) (x511 x1372))))
(assert (= x1526 (or x835 x1384)))
(assert (= (x582 1968616202) (x511 1968616202)))
(assert (x891 x248))
(assert (= (x219 x1377) (ite (= x1377 x442) x526 (x1455 x1377))))
(assert (= x151 (or x87 (and (not x109) x313))))
(assert (x891 x1237))
(assert (x891 x1323))
(assert (x891 x526))
(assert (= (=> (and (>= x1347 0) (= x434 (x1177 (x582 x1116) x485 0)) (>= 1461501637330902918203684832716283019655932542975 x1116) (not (= x119 87118632)) (< x119 468353030) (= (x1177 (x582 x1234) (x511 9) 0) x485) (< x119 2293535753) (= x1272 (x1495 (x582 274184521717934524641157099916833587206))) (= x1513 (x1177 (x582 x920) x434 0)) (= x1473 x1347) (= 142201243 x119) (<= x1347 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x200 x1513) x1347) (< 0 x1272) (not (= x119 69947311)) (> 911411945 x119) (>= 1461501637330902918203684832716283019655932542975 x920)) (=> (and (= x931 x1183) (= x1473 x129) (= x1208 (and x801 x1104)) (= x789 0) (= x1046 x1465) (= x1104 (< 0 x129))) x1124)) x1453))
(assert (x891 x1338))
(assert (=> (>= 10000 x193) (= (x511 x193) (x582 x193))))
(assert (x891 x1534))
(assert (x891 x257))
(assert (x891 x961))
(assert (= 0 (x984 x1142)))
(assert (x891 x106))
(assert (x751 x1434))
(assert (= (or (and x1330 (not x1510)) (and (not x1440) x1517)) x1478))
(assert (x751 x33))
(assert (= (x1167 x173) (ite (and x151 x951) (x125 x173) (x1304 x173))))
(assert (x751 x1256))
(assert (x751 x1555))
(assert (= (ite (and x539 x171) (x989 x284) (ite (and x539 x96 (not x171)) (x994 x284) (x1210 x284))) (x1387 x284)))
(assert (= x1353 x1481))
(assert (x751 x695))
(assert (= x1135 (=> (= (= x731 274184521717934524641157099916833587214) x1399) (and (=> (not x1399) x1328) (=> (and (not (= x189 826074471)) (= x650 (x1177 (x582 274184521717934524641157099916833587206) (x511 1) 0)) (= x52 x83) (= x1310 x1546) (not x1276) (= x898 x1454) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1398 x1052)) (= 32 x1049) (<= 0 x743) (= x197 274184521717934524641157099916833587206) (= (x1495 (x582 274184521717934524641157099916833587214)) x243) (= (x1378 x1203) x743) (= x792 (> x1310 x743)) (= x1052 x1310) (<= x1454 1461501637330902918203684832716283019655932542975) (= (x212 (- x83 4)) x320) (not (< x83 4)) (not (= x189 2514000705)) (= x1276 (>= (+ x1052 x1398) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1177 (x582 x1454) (x511 1) 0) x570) (= x1203 (x1177 (x582 274184521717934524641157099916833587206) (x511 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x743) (= x189 2835717307) (= x225 (or (> x320 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x320 64) (= true (<= x320 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not x903) (= (x1258 x570) x1398) (= x81 x1398) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1237) (not (= 1889567281 x189)) (= x1454 x170) (<= 0 x1398) (not (= 649617121 x189)) (> x243 0) (not (> 649617121 x189)) (= x83 68) (= x903 (< x743 x1052)) (not x792) (= x990 (+ x1006 x81)) (= x1249 x321) (not x225) x1399 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1398) (= x1052 x1006) (= x1223 1) (= (x212 (- x743 x1310)) x330) (= 274184521717934524641157099916833587206 x227)) x548)))))
(assert (x891 x1072))
(assert (= (ite (and x964 x1305) (x219 x467) (x873 x467)) (x711 x467)))
(assert (x891 x551))
(assert (x891 x541))
(assert (x751 x1490))
(assert (=> (<= x571 10000) (= (x511 x571) (x582 x571))))
(assert (=> (<= x366 10000) (= (x511 x366) (x582 x366))))
(assert (x751 x1339))
(assert (x751 x193))
(assert (= x1184 x1128))
(assert (x891 x1606))
(assert (= (x626 x1142) (ite (= x1142 x628) x1396 (x955 x1142))))
(assert (= (=> (and (= x396 x107) (= (and x42 x93) x1416) (= x42 (<= x396 x1122)) (= x544 (or x1416 (not x351)))) (and x544 (=> (and (= x28 x1532) (= x1433 x931) (= true x126) (= x1465 x1286) (= 87118632 x1289) (= x455 2939843472)) x1219))) x1508))
(assert (=> (>= 10000 x861) (= (x511 x861) (x582 x861))))
(assert (=> (>= 10000 x912) (= (x582 x912) (x511 x912))))
(assert (x751 x399))
(assert (x751 x534))
(assert (= (x219 x84) (ite (= x442 x84) x526 (x1455 x84))))
(assert (x751 x1078))
(assert (= (ite (= x430 x220) x907 (x241 x220)) (x459 x220)))
(assert (= (x465 (x582 x1576)) x1576))
(assert (x891 x1579))
(assert (= (ite (and x1030 x194) (x813 x1462) (x709 x1462)) (x1180 x1462)))
(assert (x891 x1471))
(assert (= x1103 (x465 (x582 x1103))))
(assert (x891 x307))
(assert (x891 x696))
(assert (= (ite (and x951 x151) (x1426 x210) (x174 x210)) (x1063 x210)))
(assert (x891 x70))
(assert (= x388 (=> (and (= x514 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x560 (x582 x1166)))) x182 (= x182 (>= x163 0)) x291 (= x1596 x702) (= x814 (x176 (x582 x1166))) (= x194 (= 274184521717934524641157099916833587218 x1166)) (= (x176 (x582 274184521717934524641157099916833587206)) x163) (= x941 (x176 (x582 274184521717934524641157099916833587206))) (= x1195 (x560 (x582 x1166))) x514 (= x291 (< x814 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (and (not (= 826074471 x494)) (= x1596 x772) (not x324) (not (= 649617121 x494)) (< (+ x647 x844) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= x494 2514000705)) (= x586 (x212 (- x870 x395))) (= x497 x1269) (= x844 x108) (= 32 x552) (= x494 2835717307) (= (x212 (- x772 4)) x477) (= x1179 (+ x108 x1238)) (not x1522) (< 0 x933) (= x772 68) (= x959 (x1177 (x582 x156) (x511 1) 0)) (= x1321 (x1177 (x582 x156) (x511 1) 0)) (not x1449) (= x1449 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x647 x844))) (= x647 x395) (= x1014 x156) (= 274184521717934524641157099916833587206 x1111) x194 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x844) (= x870 (x1371 x812)) (not x625) (not (> 649617121 x494)) (>= 1461501637330902918203684832716283019655932542975 x156) (= x644 (x1177 (x582 274184521717934524641157099916833587206) (x511 1) 0)) (= x394 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x324 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x477) (and (< x477 64) (= (<= x477 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (< x870 x395) x1522) (= (x1495 (x582 274184521717934524641157099916833587218)) x933) (not (> 4 x772)) (= 274184521717934524641157099916833587206 x116) (= x844 (x1342 x959)) (= x1567 x395) (not (= 1889567281 x494)) (= x1238 x647) (= x972 x156) (<= x870 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x844 0) (>= x870 0) (= (> x647 x870) x625) (= x812 (x1177 (x582 274184521717934524641157099916833587206) (x511 1) 0)) (= x164 1)) x472) (=> (not x194) x749)))))
(assert (= (x465 (x582 x1486)) x1486))
(assert (= (x1032 x617) (ite (= x804 x617) x811 (x937 x617))))
(assert (x891 x1125))
(assert (= (or x198 (and x929 x1252)) x539))
(assert (=> (<= x918 10000) (= (x511 x918) (x582 x918))))
(assert (x751 x960))
(assert (x891 x1424))
(assert (x751 x1186))
(assert (=> (<= x883 10000) (= (x582 x883) (x511 x883))))
(assert (x891 x1111))
(assert (x891 x1343))
(assert (x891 x311))
(assert (x891 x476))
(assert (= (x465 (x582 x40)) x40))
(assert (x891 x1303))
(assert (x891 x656))
(assert (= (x465 (x511 2690754053)) 2690754053))
(assert (x751 x1145))
(assert (= (ite (= x238 x787) x669 (x80 x238)) (x1610 x238)))
(assert (x891 x1002))
(assert (x891 x1451))
(assert (= (x886 x63) (ite (and (not x137) x512 x151 (not x615)) (x1159 x63) (ite (and (not x512) x151 (not x615)) (x459 x63) (ite (and x615 x151) (x459 x63) (x595 x63))))))
(assert (x891 x785))
(assert (x891 x849))
(assert (= (x459 x84) (ite (= x84 x430) x907 (x241 x84))))
(assert (= (ite (= x1408 x1402) x720 (x626 x1408)) (x957 x1408)))
(assert (=> (<= x41 10000) (= (x511 x41) (x582 x41))))
(assert (x891 x138))
(assert (x891 x710))
(assert (x891 x413))
(assert (x891 x1349))
(assert (= (ite (= x787 x1142) x669 (x80 x1142)) (x1610 x1142)))
(assert (x891 x319))
(assert (= x237 (x465 (x582 x237))))
(assert (x891 x1074))
(assert (x891 x1171))
(assert (= x671 (and x860 (not x398))))
(assert (= (x886 x1377) (ite (and x151 (not x137) (not x615) x512) (x1159 x1377) (ite (and x151 (not x615) (not x512)) (x459 x1377) (ite (and x151 x615) (x459 x1377) (x595 x1377))))))
(assert (x891 x1100))
(assert (= (x465 (x582 x1434)) x1434))
(assert (x891 x933))
(assert (x891 x31))
(assert (x751 x393))
(assert (x891 x1461))
(assert (x891 x612))
(assert (= (ite (= x1402 x1462) x720 (x626 x1462)) (x957 x1462)))
(assert (= x1087 (x465 (x582 x1087))))
(assert (= (ite (= x382 x1377) x1485 (x1067 x1377)) (x384 x1377)))
(assert (= (x465 (x582 x381)) x381))
(assert (=> (>= 10000 x1046) (= (x511 x1046) (x582 x1046))))
(assert (x891 x787))
(assert (= x209 (x465 (x582 x209))))
(assert (= (x459 x1077) (ite (= x1077 x430) x907 (x241 x1077))))
(assert (x891 x1256))
(assert (=> (>= 10000 x97) (= (x511 x97) (x582 x97))))
(assert (x891 x442))
(assert (= (ite (= x430 x766) x907 (x241 x766)) (x459 x766)))
(assert (= (ite (and (not x137) x151 x512 (not x615)) (x1159 x1451) (ite (and x151 (not x615) (not x512)) (x459 x1451) (ite (and x615 x151) (x459 x1451) (x595 x1451)))) (x886 x1451)))
(assert (x891 x203))
(assert (x891 x1089))
(assert (= x1037 (=> (and (not (= 2211524764 x90)) (= x517 (x1177 (x582 x1042) x46 0)) (> x568 0) (= x872 x380) (not (= x90 1968616202)) (= (x1177 (x582 x1572) (x511 6) 0) x46) (>= x380 0) (not (= 2061678023 x90)) (<= x1042 1461501637330902918203684832716283019655932542975) (= 2258409472 x90) (= x568 (x1495 (x582 274184521717934524641157099916833587206))) (< x90 2293535753) (not (= 1986467848 x90)) (= (x987 x517) x380) (not (< x90 911411945)) (<= x380 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x90 1968616202))) (=> (and (= x872 x1163) (= x1465 x261) (= x931 x1390) (= x451 x1532)) x831))))
(assert (x891 x757))
(assert (x751 x366))
(assert (= x482 (=> (= (< 0 x1434) x924) (and (=> (not x924) x1085) (=> x924 x1363)))))
(assert (= (x99 x1487) (ite (= x1487 x439) x1422 (x1313 x1487))))
(assert (x891 x1170))
(assert (x891 x1289))
(assert (= (ite (and x951 x151) (x1426 x1609) (x174 x1609)) (x1063 x1609)))
(assert (= x854 (and x336 x24)))
(assert (= (x465 (x582 x874)) x874))
(assert (=> (<= x676 10000) (= (x511 x676) (x582 x676))))
(assert (x891 x912))
(assert (x891 x264))
(assert (= x1537 x140))
(assert (= (x465 (x511 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x891 x1547))
(assert (x891 x104))
(assert (x891 x71))
(assert (= true x1328))
(assert (x891 x267))
(assert (x891 x588))
(assert (x751 x1438))
(assert (x891 x1570))
(assert (x891 x346))
(assert (= (x219 x1077) (ite (= x1077 x442) x526 (x1455 x1077))))
(assert (x891 x1482))
(assert (= x421 (=> (and (> 2293535753 x764) (= 69947311 x764) (= (x1495 (x582 274184521717934524641157099916833587206)) x130) (= (x1177 (x582 x757) (x511 10) 0) x154) (> 468353030 x764) (= x89 x746) (= (x566 x1277) x89) (<= x1374 1461501637330902918203684832716283019655932542975) (= (x1177 (x582 x1374) x154 0) x1277) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x89) (<= 0 x89) (< x764 911411945) (> x130 0)) (=> (and (= x1465 x733) (= x931 x945) (= x746 x1214) (= x1532 x607)) x641))))
(assert (x891 x1524))
(assert (x891 x356))
(assert (= (ite (= x1377 x1064) x1349 (x384 x1377)) (x419 x1377)))
(assert (= (ite (= x1451 x430) x907 (x241 x1451)) (x459 x1451)))
(assert (x751 x1182))
(assert (x891 x414))
(assert (x891 x450))
(assert (x891 x229))
(assert (= (ite (and x512 x151 (not x615) (not x137)) (x1159 x1408) (ite (and x151 (not x512) (not x615)) (x459 x1408) (ite (and x151 x615) (x459 x1408) (x595 x1408)))) (x886 x1408)))
(assert (x891 x1465))
(assert (x751 x594))
(assert (x891 x607))
(assert (= (x1159 x153) (ite (= x153 x590) x791 (x459 x153))))
(assert (= (ite (= x153 x248) x159 (x1610 x248)) (x504 x248)))
(assert (=> (<= x43 10000) (= (x511 x43) (x582 x43))))
(assert (x705 x1507 x208))
(assert (=> (<= x1400 10000) (= (x582 x1400) (x511 x1400))))
(assert (x891 x436))
(assert (x891 x1369))
(assert (x891 x848))
(assert (x891 x1225))
(assert (= x387 true))
(assert (= x799 (x465 (x582 x799))))
(assert (x891 x166))
(assert (x891 x823))
(assert (= (x465 (x582 x230)) x230))
(assert (x891 x543))
(assert (x891 x1581))
(assert (x891 x1152))
(assert (=> (<= x960 10000) (= (x511 x960) (x582 x960))))
(assert (= (x955 x1131) (ite (= x1131 x185) x55 (x1370 x1131))))
(assert (= (and x1123 x936) x1517))
(assert (x891 x1173))
(assert (= (ite (= x590 x1077) x791 (x459 x1077)) (x1159 x1077)))
(assert (x891 x1296))
(assert (x751 x381))
(assert (x751 x385))
(assert (x751 x893))
(assert (= 911411945 (x465 (x511 911411945))))
(assert (= (x582 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x511 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x891 x1466))
(assert (x705 x127 x1117))
(assert (= x151 x860))
(assert (x891 x1132))
(assert (= x535 (x465 (x582 x535))))
(assert (x891 x1181))
(assert (= (x465 (x511 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (ite (= x787 x63) x669 (x80 x63)) (x1610 x63)))
(assert (= 0 (x984 160)))
(assert (x751 x97))
(assert (=> (>= 10000 x385) (= (x511 x385) (x582 x385))))
(assert (x891 x1351))
(assert (x891 x878))
(assert (x891 x1269))
(assert (=> (<= x707 10000) (= (x511 x707) (x582 x707))))
(assert (= (x582 2868243304) (x511 2868243304)))
(assert (= (x465 (x511 2532887486)) 2532887486))
(assert (x891 x1129))
(assert (=> (>= 10000 x991) (= (x511 x991) (x582 x991))))
(assert (= x293 (x465 (x582 x293))))
(assert (= x1372 (x465 (x582 x1372))))
(assert (= x1124 (=> (and (= x1055 (x1495 (x582 274184521717934524641157099916833587206))) (= x1174 2798343961) (<= x1183 1461501637330902918203684832716283019655932542975) (> x1055 0) (< x1174 2960351575) (= (x1177 (x582 x1046) (x511 5) 0) x1335) (= x753 (x1177 (x582 x1183) x1335 0)) (<= 0 x1086) (not (= x1174 2764855426)) (= (x125 x753) x1086) (not (> 2690754053 x1174)) (not (= x1174 2690754053)) (<= x1086 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1242 x1086) (not (= x1174 2743102681)) (not (< x1174 2293535753))) (=> (and (= x649 x1242) (= x1090 x1427) (= x1175 x1532) (= x770 x931) (= x991 x1465)) x1375))))
(assert (x891 x590))
(assert (= (x711 x590) (ite (and x964 x1305) (x219 x590) (x873 x590))))
(assert (= (and x313 x109) x859))
(assert (= (x1610 x153) (ite (= x787 x153) x669 (x80 x153))))
(assert (x891 x55))
(assert (= (x465 (x582 x855)) x855))
(assert (=> (>= 10000 x1286) (= (x582 x1286) (x511 x1286))))
(assert (=> (<= x908 10000) (= (x582 x908) (x511 x908))))
(assert (x751 x48))
(assert (= x806 (=> (= x377 (< 0 x1434)) (and (=> (not x377) x803) (=> x377 x850)))))
(assert (x891 x654))
(assert (= (=> (and (< 0 x1611) (= x166 (x139 x663)) (= x663 (x1177 (x582 x366) x1281 0)) (= x1611 (x1495 (x582 274184521717934524641157099916833587206))) (= x1153 x166) (> 2960351575 x524) (<= 0 x166) (not (= 2743102681 x524)) (= x524 2798343961) (not (< x524 2293535753)) (<= x166 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x524 2690754053)) (not (= x524 2764855426)) (= (x1177 (x582 x687) (x511 5) 0) x1281) (not (< x524 2690754053)) (>= 1461501637330902918203684832716283019655932542975 x366)) (=> (and (= x926 x931) (= x509 x1090) (= x1532 x209) (= x1122 x1153) (= x1083 x1465)) x1057)) x1599))
(assert (= (x465 (x511 759532456)) 759532456))
(assert (x891 x329))
(assert (= x1145 (x465 (x582 x1145))))
(assert (= x347 (x465 (x582 x347))))
(assert (= (and x640 (not x1399)) x564))
(assert (= x509 (x465 (x582 x509))))
(assert (x751 x661))
(assert (=> (<= x661 10000) (= (x511 x661) (x582 x661))))
(assert (= (ite (and (not x1324) x36 x206) (x49 x1077) (x1059 x1077)) (x404 x1077)))
(assert (x891 x330))
(assert (= (x465 (x582 x1374)) x1374))
(assert (x891 x193))
(assert (= x577 (and (not x194) x1030)))
(assert (= (ite (= x1131 x787) x669 (x80 x1131)) (x1610 x1131)))
(assert (=> (<= x1183 10000) (= (x511 x1183) (x582 x1183))))
(assert (= (x465 (x582 x78)) x78))
(assert (x891 x148))
(assert (x891 x1286))
(assert (=> (>= 10000 x703) (= (x511 x703) (x582 x703))))
(assert (x891 x1122))
(assert (x891 x525))
(assert (x751 x1175))
(assert (x891 x366))
(assert (x751 x1391))
(assert (x751 x190))
(assert (= (x459 x1408) (ite (= x1408 x430) x907 (x241 x1408))))
(assert (x891 x103))
(assert (=> (<= x389 10000) (= (x582 x389) (x511 x389))))
(assert (x891 x962))
(assert (=> (>= 10000 x1054) (= (x582 x1054) (x511 x1054))))
(assert (x891 x979))
(assert (x891 x1213))
(assert (= (x99 x795) (ite (= x439 x795) x1422 (x1313 x795))))
(assert (x891 x1119))
(assert (= (x582 2512682246) (x511 2512682246)))
(assert (x891 x851))
(assert (= (ite (= x153 x1408) x159 (x1610 x1408)) (x504 x1408)))
(assert (x891 x973))
(assert (x1003 x454))
(assert (x891 x37))
(assert (=> (>= 10000 x1374) (= (x582 x1374) (x511 x1374))))
(assert (x891 x694))
(assert (x751 x918))
(assert (x751 x945))
(assert (x751 x37))
(assert (x751 x1054))
(assert (x891 x898))
(assert (= (ite (= x590 x1408) x791 (x459 x1408)) (x1159 x1408)))
(assert (x891 x1460))
(assert (x891 x223))
(assert (x891 x116))
(assert (= (x465 (x582 x1307)) x1307))
(assert (x891 x1479))
(assert (x891 x862))
(assert (x891 x385))
(assert (= (x404 x1220) (ite (and x36 x206 (not x1324)) (x49 x1220) (x1059 x1220))))
(assert (x891 x818))
(assert (x891 x1018))
(assert (x891 x733))
(assert (x891 x302))
(assert (= x515 (=> (= x894 x942) x249)))
(assert (x891 x64))
(assert (= (x465 (x582 x1000)) x1000))
(assert (= (x984 x84) 0))
(assert (x891 x562))
(assert (= (x1370 x1077) (ite (= x1077 x1268) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x1077))))
(assert (= (x886 x248) (ite (and x512 (not x137) x151 (not x615)) (x1159 x248) (ite (and (not x615) (not x512) x151) (x459 x248) (ite (and x615 x151) (x459 x248) (x595 x248))))))
(assert (x751 x389))
(assert (x891 x1347))
(assert (= (x465 (x582 x607)) x607))
(assert (x891 x686))
(assert (x891 x1154))
(assert (= (ite (= x1402 x442) x720 (x626 x442)) (x957 x442)))
(assert (= (ite (and x1305 x964) (x219 x238) (x873 x238)) (x711 x238)))
(assert (x891 x716))
(assert (=> (>= 10000 x1391) (= (x582 x1391) (x511 x1391))))
(assert (= (ite (and (not x1044) x1457 x69) (x131 x1377) (x1254 x1377)) (x884 x1377)))
(assert (= (ite (and x151 (not x137) x512 (not x615)) (x1159 x442) (ite (and (not x512) x151 (not x615)) (x459 x442) (ite (and x151 x615) (x459 x442) (x595 x442)))) (x886 x442)))
(assert (x891 x1017))
(assert (= (x459 x590) (ite (= x590 x430) x907 (x241 x590))))
(assert (= (x626 x766) (ite (= x766 x628) x1396 (x955 x766))))
(assert (= x549 (x465 (x582 x549))))
(assert (x891 x365))
(assert (x1003 x680))
(assert (x891 x1042))
(assert (x751 x1400))
(assert (= (ite (= x1268 x442) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x442)) (x1370 x442)))
(assert (x891 x1060))
(assert (= (ite (and x1030 x194) (x813 x766) (x709 x766)) (x1180 x766)))
(assert (=> (<= x824 10000) (= (x582 x824) (x511 x824))))
(assert (x891 x424))
(assert (=> (<= x179 10000) (= (x511 x179) (x582 x179))))
(assert (=> (<= x1572 10000) (= (x511 x1572) (x582 x1572))))
(assert (= (x465 (x582 x15)) x15))
(assert (= x587 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1364) (= (= 0 x1364) x1510) (= (x1177 (x582 x393) (x511 6) 0) x1126) (>= x1364 0) (= x1364 (x987 x993)) (= x993 (x1177 (x582 x778) x1126 0)) (= x778 (x317 1461501637330902918203684832716283019655932542975 x701))) (and (=> x1510 x175) (=> (and (= x1338 x393) (not x1510)) x553)))))
(assert (x891 x631))
(assert (x891 x575))
(assert (x891 x1574))
(assert (x891 x1158))
(assert (= x641 (=> (and (= 142201243 x1115) (< x1115 2293535753) (<= 0 x1140) (<= x607 1461501637330902918203684832716283019655932542975) (not (= 69947311 x1115)) (= (x1177 (x582 x607) x968 0) x836) (= x1240 x1140) (< 0 x775) (<= x1140 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1140 (x200 x836)) (= x968 (x1177 (x582 x945) x769 0)) (= x775 (x1495 (x582 274184521717934524641157099916833587206))) (<= x945 1461501637330902918203684832716283019655932542975) (not (= x1115 87118632)) (> 911411945 x1115) (= x769 (x1177 (x582 x733) (x511 9) 0)) (> 468353030 x1115)) (=> (and (= x1234 x1465) (= x801 (and x1013 x880)) (= x1013 (>= x1214 x1018)) (= x1116 x931) (= x1018 x1240) (= x920 x1532)) x1453))))
(assert (= (ite (= x1377 x628) x1396 (x955 x1377)) (x626 x1377)))
(assert (= (x465 (x582 x1438)) x1438))
(assert (= (ite (= x442 x185) x55 (x1370 x442)) (x955 x442)))
(assert (x751 x59))
(assert (x891 x477))
(assert (= (x465 (x511 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x891 x1521))
(assert (x891 x1408))
(assert (x751 x1234))
(assert (x1003 x798))
(assert (=> (<= x1427 10000) (= (x511 x1427) (x582 x1427))))
(assert (= (x465 (x582 x37)) x37))
(assert (x891 x1393))
(assert (= x198 (or x1053 x782)))
(assert (= (x582 2939843472) (x511 2939843472)))
(assert (x891 x890))
(assert (x891 x1183))
(assert (x891 x1232))
(assert (x1011 x620 x1336))
(assert (x891 x1275))
(assert (x891 x999))
(assert (= x400 (x465 (x582 x400))))
(assert (x891 x300))
(assert (= (ite (= x1220 x1268) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x1220)) (x1370 x1220)))
(assert (=> (>= 10000 x315) (= (x582 x315) (x511 x315))))
(assert (= (ite (= x1142 x1402) x720 (x626 x1142)) (x957 x1142)))
(assert (= (x465 (x582 x900)) x900))
(assert (x891 x815))
(assert (= x1264 (x465 (x582 x1264))))
(assert (=> (>= 10000 x1496) (= (x582 x1496) (x511 x1496))))
(assert (x891 x1583))
(assert (x891 x1456))
(assert (=> (>= 10000 x549) (= (x511 x549) (x582 x549))))
(assert (x751 x38))
(assert (x751 x1433))
(assert (x751 x1572))
(assert (= x1286 (x465 (x582 x1286))))
(assert (= (x1370 x1142) (ite (= x1268 x1142) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1155 x1142))))
(assert (=> (>= 10000 x400) (= (x511 x400) (x582 x400))))
(assert (x891 x931))
(assert (x891 x89))
(assert (x751 x1103))
(assert (= (x465 (x582 x790)) x790))
(assert (x751 x1418))
(assert (= x468 (x465 (x582 x468))))
(assert (= (ite (= x787 x220) x669 (x80 x220)) (x1610 x220)))
(assert (x751 x400))
(assert (x891 x1078))
(assert (x751 x799))
(assert (= (ite (and x171 x539) (x1102 x683) (ite (and (not x171) x96 x539) (x1102 x683) (x1020 x683))) (x121 x683)))
(assert (x891 x40))
(assert (x891 x15))
(assert (= x1305 x583))
(assert (= (x465 (x582 x830)) x830))
(assert (x891 x101))
(assert (= x770 (x465 (x582 x770))))
(assert (= 0 (x984 x590)))
(assert (x891 x826))
(assert (= (x384 x1408) (ite (= x382 x1408) x1485 (x1067 x1408))))
(assert (= x431 x1404))
(check-sat)
