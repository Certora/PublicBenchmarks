(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x843 0)) (((x550 (x1171 Int)) (x1184 (x933 x843) (x1340 Int)) (x189 (x665 x843) (x174 x843) (x1505 Int)))))
(declare-fun x1048 () Int)
(declare-fun x232 () x843)
(declare-fun x1287 () Bool)
(declare-fun x346 () Int)
(declare-fun x955 () Int)
(declare-fun x1123 () Int)
(declare-fun x682 () Int)
(declare-fun x1153 () Bool)
(declare-fun x1376 () Int)
(declare-fun x417 () Bool)
(declare-fun x840 () Bool)
(declare-fun x1400 () Int)
(declare-fun x1127 () x843)
(declare-fun x1480 () Bool)
(declare-fun x697 () Bool)
(declare-fun x991 () Int)
(declare-fun x552 () Int)
(declare-fun x424 () Bool)
(declare-fun x747 () Int)
(declare-fun x1106 () x843)
(declare-fun x493 () Bool)
(declare-fun x1167 (x843) Int)
(declare-fun x492 () Int)
(declare-fun x185 () Bool)
(declare-fun x206 () Int)
(declare-fun x190 () x843)
(declare-fun x1131 () Int)
(declare-fun x640 () Int)
(declare-fun x1094 () Int)
(declare-fun x55 () x843)
(declare-fun x731 () Int)
(declare-fun x329 () x843)
(declare-fun x1208 () x843)
(declare-fun x389 (Int Int) Int)
(declare-fun x930 () Int)
(declare-fun x229 (Int) Int)
(declare-fun x1289 () Int)
(declare-fun x1464 () Int)
(declare-fun x866 () Int)
(declare-fun x663 () Int)
(declare-fun x228 () Int)
(declare-fun x63 () Bool)
(declare-fun x1519 () Int)
(declare-fun x282 () Bool)
(declare-fun x1309 () Int)
(declare-fun x1427 () Bool)
(declare-fun x1326 () Int)
(declare-fun x819 () Bool)
(declare-fun x1285 () Int)
(declare-fun x921 () Int)
(declare-fun x25 () Bool)
(declare-fun x748 () Bool)
(declare-fun x987 () x843)
(declare-fun x1518 () Int)
(declare-fun x276 () x843)
(declare-fun x815 () Bool)
(declare-fun x258 () Bool)
(declare-fun x571 () Bool)
(declare-fun x507 () Bool)
(declare-fun x247 () x843)
(declare-fun x882 () Int)
(declare-fun x1021 () Bool)
(declare-fun x683 () Bool)
(declare-fun x1381 () Bool)
(declare-fun x1068 () Int)
(declare-fun x98 () Bool)
(declare-fun x407 () Bool)
(declare-fun x864 () x843)
(declare-fun x1373 () Bool)
(declare-fun x1396 () Int)
(declare-fun x71 () Int)
(declare-fun x446 () Bool)
(declare-fun x114 () Bool)
(declare-fun x902 () Bool)
(declare-fun x1105 () Int)
(declare-fun x793 () Int)
(declare-fun x891 () x843)
(declare-fun x1474 () x843)
(declare-fun x155 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x601 () Bool)
(declare-fun x924 () Int)
(declare-fun x1116 () x843)
(declare-fun x1159 () Int)
(declare-fun x277 (x843) Int)
(declare-fun x1170 () Int)
(declare-fun x49 () Int)
(declare-fun x1317 () Bool)
(declare-fun x100 () Bool)
(declare-fun x548 () Int)
(declare-fun x536 () Int)
(declare-fun x903 () x843)
(declare-fun x203 () Bool)
(declare-fun x533 () Int)
(declare-fun x1148 () Int)
(declare-fun x35 () Int)
(declare-fun x1345 () Bool)
(declare-fun x838 () x843)
(declare-fun x829 (Int) Int)
(declare-fun x469 () Int)
(declare-fun x1451 () Int)
(declare-fun x1158 () Int)
(declare-fun x870 () Int)
(declare-fun x676 () x843)
(declare-fun x717 () Bool)
(declare-fun x643 (Int) Int)
(declare-fun x264 () Bool)
(declare-fun x1408 () Int)
(declare-fun x421 () Bool)
(declare-fun x656 () Bool)
(declare-fun x1251 () x843)
(declare-fun x1130 () Int)
(declare-fun x610 () Int)
(declare-fun x887 () Bool)
(declare-fun x532 () Int)
(declare-fun x1013 () Int)
(declare-fun x386 () Bool)
(declare-fun x1082 () Int)
(declare-fun x941 () Int)
(declare-fun x1157 () Int)
(declare-fun x349 () Int)
(declare-fun x1305 () x843)
(declare-fun x739 () Int)
(declare-fun x77 () Int)
(declare-fun x325 () Bool)
(declare-fun x877 () Int)
(declare-fun x1343 () Int)
(declare-fun x326 () x843)
(declare-fun x246 () Bool)
(declare-fun x937 () Int)
(declare-fun x86 () Int)
(declare-fun x511 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x841 () x843)
(declare-fun x602 () Bool)
(declare-fun x515 () x843)
(declare-fun x770 () Int)
(declare-fun x362 () x843)
(declare-fun x470 () Int)
(declare-fun x286 () Bool)
(declare-fun x360 () Int)
(declare-fun x749 () Int)
(declare-fun x562 () Int)
(declare-fun x561 () Bool)
(declare-fun x430 () Bool)
(declare-fun x129 () Int)
(declare-fun x1081 () Int)
(declare-fun x273 () Bool)
(declare-fun x1452 () x843)
(declare-fun x1384 () Int)
(declare-fun x66 () Int)
(declare-fun x692 () Int)
(declare-fun x885 () Int)
(declare-fun x166 () Bool)
(declare-fun x302 () Int)
(declare-fun x1024 () Int)
(declare-fun x1506 () Int)
(declare-fun x1221 (x843) Int)
(declare-fun x1091 () Int)
(declare-fun x238 () Int)
(declare-fun x20 () Int)
(declare-fun x634 () x843)
(declare-fun x1380 () Int)
(declare-fun x1156 () Bool)
(declare-fun x107 () Bool)
(declare-fun x537 () Int)
(declare-fun x1293 () Int)
(declare-fun x347 () Int)
(declare-fun x861 () Int)
(declare-fun x886 () Int)
(declare-fun x1061 () Bool)
(declare-fun x82 () Bool)
(declare-fun x178 () Bool)
(declare-fun x1392 () x843)
(declare-fun x495 () Bool)
(declare-fun x62 () Int)
(declare-fun x1142 () Int)
(declare-fun x629 () Bool)
(declare-fun x444 () Bool)
(declare-fun x1160 () Int)
(declare-fun x1234 () Int)
(declare-fun x900 () Int)
(declare-fun x429 () Bool)
(declare-fun x708 () x843)
(declare-fun x916 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x719 () x843)
(declare-fun x245 () Int)
(declare-fun x681 () Bool)
(declare-fun x499 () Int)
(declare-fun x575 () Bool)
(declare-fun x1500 () Int)
(declare-fun x1447 () Bool)
(declare-fun x1339 () Int)
(declare-fun x496 () Bool)
(declare-fun x1481 () Int)
(declare-fun x256 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1211 () Int)
(declare-fun x1352 () Int)
(declare-fun x979 () Bool)
(declare-fun x554 () Int)
(declare-fun x1397 () Int)
(declare-fun x1325 () x843)
(declare-fun x397 () Bool)
(declare-fun x194 () Int)
(declare-fun x36 () x843)
(declare-fun x1220 () Int)
(declare-fun x1407 () Int)
(declare-fun x1235 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x57 () x843)
(declare-fun x645 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x216 (Int) Int)
(declare-fun x1050 () Int)
(declare-fun x337 () Bool)
(declare-fun x1516 () Int)
(declare-fun x294 () Int)
(declare-fun x332 () Bool)
(declare-fun x981 () x843)
(declare-fun x489 () x843)
(declare-fun x287 () Int)
(declare-fun x75 () Int)
(declare-fun x456 () Int)
(declare-fun x500 () Int)
(declare-fun x539 () Bool)
(declare-fun x1402 () Int)
(declare-fun x944 () Int)
(declare-fun x1364 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x1482 () Int)
(declare-fun x1284 () Bool)
(declare-fun x986 () Bool)
(declare-fun x393 () Int)
(declare-fun x998 () x843)
(declare-fun x314 () Int)
(declare-fun x1034 () Bool)
(declare-fun x1138 () x843)
(declare-fun x481 () Int)
(declare-fun x651 () Int)
(declare-fun x1047 () x843)
(declare-fun x1393 () Bool)
(declare-fun x969 () x843)
(declare-fun x414 () Bool)
(declare-fun x934 () Int)
(declare-fun x374 () Bool)
(declare-fun x267 (Int) Int)
(declare-fun x910 () x843)
(declare-fun x911 () Int)
(declare-fun x806 () x843)
(declare-fun x600 () Int)
(declare-fun x1349 () Bool)
(declare-fun x1083 () Int)
(declare-fun x531 () Bool)
(declare-fun x997 () Bool)
(declare-fun x1428 () Int)
(declare-fun x725 () Int)
(declare-fun x925 () Int)
(declare-fun x1348 (x843) Int)
(declare-fun x177 () Int)
(declare-fun x16 () Int)
(declare-fun x1066 () x843)
(declare-fun x876 () Int)
(declare-fun x9 () x843)
(declare-fun x540 () Bool)
(declare-fun x863 (x843) Int)
(declare-fun x150 () Bool)
(declare-fun x319 () Int)
(declare-fun x207 () Int)
(declare-fun x1001 () Int)
(declare-fun x61 () Bool)
(declare-fun x1444 () Int)
(declare-fun x1483 () Int)
(declare-fun x1205 (x843) Int)
(declare-fun x1462 () Bool)
(declare-fun x486 () x843)
(declare-fun x867 () Bool)
(declare-fun x136 () x843)
(declare-fun x510 () Bool)
(declare-fun x288 () Bool)
(declare-fun x767 () Int)
(declare-fun x239 () Bool)
(declare-fun x408 () Int)
(declare-fun x1275 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x437 () Int)
(declare-fun x780 () x843)
(declare-fun x127 () Int)
(declare-fun x664 () Bool)
(declare-fun x400 () Int)
(declare-fun x162 () x843)
(declare-fun x1267 () Bool)
(declare-fun x586 () Int)
(declare-fun x484 () Bool)
(declare-fun x2 () Int)
(declare-fun x778 (x843) Int)
(declare-fun x199 (x843) Int)
(declare-fun x3 () Int)
(declare-fun x1276 () x843)
(declare-fun x219 () Bool)
(declare-fun x1247 (x843) Int)
(declare-fun x1445 () Bool)
(declare-fun x519 () Int)
(declare-fun x1226 () Bool)
(declare-fun x974 (Int) Int)
(declare-fun x221 () x843)
(declare-fun x713 () Bool)
(declare-fun x1239 () Int)
(declare-fun x1146 () Int)
(declare-fun x67 () x843)
(declare-fun x1166 () Bool)
(declare-fun x943 () Int)
(declare-fun x573 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x647 () Bool)
(declare-fun x1181 () Int)
(declare-fun x1020 () x843)
(declare-fun x455 () Bool)
(declare-fun x794 () Bool)
(declare-fun x1064 () Int)
(declare-fun x1512 () Bool)
(declare-fun x1390 () Int)
(declare-fun x449 () Int)
(declare-fun x83 () Bool)
(declare-fun x614 () Int)
(declare-fun x657 () x843)
(declare-fun x581 () Int)
(declare-fun x1097 () x843)
(declare-fun x821 () Bool)
(declare-fun x684 () x843)
(declare-fun x784 () Int)
(declare-fun x428 () x843)
(declare-fun x135 () Int)
(declare-fun x754 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x317 () Bool)
(declare-fun x975 () Bool)
(declare-fun x270 () Int)
(declare-fun x121 () x843)
(declare-fun x888 () Int)
(declare-fun x394 () x843)
(declare-fun x1288 () Int)
(declare-fun x734 () x843)
(declare-fun x1078 (x843) Int)
(declare-fun x425 () Int)
(declare-fun x1477 () x843)
(declare-fun x275 () Bool)
(declare-fun x698 () Int)
(declare-fun x1433 () Int)
(declare-fun x252 () Int)
(declare-fun x1141 (Int) Int)
(declare-fun x1077 () Bool)
(declare-fun x627 () Bool)
(declare-fun x804 () Int)
(declare-fun x261 () Int)
(declare-fun x908 () Int)
(declare-fun x699 () Bool)
(declare-fun x856 () Bool)
(declare-fun x660 () Bool)
(declare-fun x743 () Int)
(declare-fun x1134 () Int)
(declare-fun x1440 () Bool)
(declare-fun x1025 () Int)
(declare-fun x176 () x843)
(declare-fun x1517 () Int)
(declare-fun x844 () Bool)
(declare-fun x29 () Int)
(declare-fun x447 () Int)
(declare-fun x968 () Bool)
(declare-fun x1033 () Bool)
(declare-fun x1003 () Int)
(declare-fun x108 () Bool)
(declare-fun x1382 () Int)
(declare-fun x590 () x843)
(declare-fun x544 () Bool)
(declare-fun x1468 (Int) x843)
(declare-fun x79 () Int)
(declare-fun x1206 () Int)
(declare-fun x312 () Int)
(declare-fun x528 (Int) Int)
(declare-fun x323 () Int)
(declare-fun x1259 () Bool)
(declare-fun x524 () x843)
(declare-fun x212 () Bool)
(declare-fun x836 () Bool)
(declare-fun x184 () Bool)
(declare-fun x915 () Bool)
(declare-fun x1370 () Int)
(declare-fun x483 () Bool)
(declare-fun x204 () Bool)
(declare-fun x260 () Bool)
(declare-fun x164 () Bool)
(declare-fun x823 () Bool)
(declare-fun x339 () Int)
(declare-fun x410 () Int)
(declare-fun x598 () x843)
(declare-fun x869 () Bool)
(declare-fun x1151 () Int)
(declare-fun x1479 () Int)
(declare-fun x441 () Int)
(declare-fun x297 () x843)
(declare-fun x372 () Int)
(declare-fun x47 () Int)
(declare-fun x1254 () Int)
(declare-fun x649 () Int)
(declare-fun x487 () Int)
(declare-fun x149 () Int)
(declare-fun x530 () x843)
(declare-fun x929 () Int)
(declare-fun x1004 () Int)
(declare-fun x727 () Bool)
(declare-fun x705 () Bool)
(declare-fun x336 () Int)
(declare-fun x1314 () x843)
(declare-fun x438 () Int)
(declare-fun x849 (Int) Int)
(declare-fun x158 () Int)
(declare-fun x1040 () Int)
(declare-fun x775 () Int)
(declare-fun x631 () Bool)
(declare-fun x237 () Int)
(declare-fun x1187 () Bool)
(declare-fun x236 () Bool)
(declare-fun x122 () Int)
(declare-fun x957 () Int)
(declare-fun x473 () Int)
(declare-fun x134 () Bool)
(declare-fun x1437 () x843)
(declare-fun x205 () Bool)
(declare-fun x310 () x843)
(declare-fun x990 (Int) Int)
(declare-fun x68 () Int)
(declare-fun x251 () x843)
(declare-fun x757 () Bool)
(declare-fun x284 () Int)
(declare-fun x1333 () Int)
(declare-fun x1338 () x843)
(declare-fun x1307 () Int)
(declare-fun x44 () Int)
(declare-fun x1182 () Bool)
(declare-fun x341 () Int)
(declare-fun x1016 () x843)
(declare-fun x842 () Bool)
(declare-fun x1128 () Int)
(declare-fun x361 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x1490 () Int)
(declare-fun x1351 () x843)
(declare-fun x918 () x843)
(declare-fun x1423 () x843)
(declare-fun x658 () Bool)
(declare-fun x111 () Int)
(declare-fun x78 () Int)
(declare-fun x578 () Int)
(declare-fun x1446 () Int)
(declare-fun x24 () Int)
(declare-fun x559 () Int)
(declare-fun x1485 () Int)
(declare-fun x378 () x843)
(declare-fun x993 () x843)
(declare-fun x1015 () Bool)
(declare-fun x630 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x137 () Bool)
(declare-fun x1215 () Int)
(declare-fun x1244 () Int)
(declare-fun x1058 () Bool)
(declare-fun x667 () Bool)
(declare-fun x1360 () Int)
(declare-fun x433 () Int)
(declare-fun x1056 () Bool)
(declare-fun x13 () Bool)
(declare-fun x439 () Bool)
(declare-fun x153 () Int)
(declare-fun x751 () Int)
(declare-fun x750 () x843)
(declare-fun x970 () x843)
(declare-fun x1282 () Int)
(declare-fun x737 () Int)
(declare-fun x596 () x843)
(declare-fun x384 () Int)
(declare-fun x555 () Bool)
(declare-fun x200 () Int)
(declare-fun x588 () Bool)
(declare-fun x138 () Int)
(declare-fun x729 () Bool)
(declare-fun x1032 () Int)
(declare-fun x6 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x60 () Bool)
(declare-fun x744 () Bool)
(declare-fun x545 () Int)
(declare-fun x976 () Bool)
(declare-fun x616 () Int)
(declare-fun x985 () Bool)
(declare-fun x457 () Int)
(declare-fun x669 () Int)
(declare-fun x387 () x843)
(declare-fun x1063 () Bool)
(declare-fun x1071 () Int)
(declare-fun x313 () Int)
(declare-fun x170 () Int)
(declare-fun x954 () Bool)
(declare-fun x303 () Bool)
(declare-fun x1425 () Int)
(declare-fun x1223 () Bool)
(declare-fun x180 () Int)
(declare-fun x1088 () x843)
(declare-fun x173 () Bool)
(declare-fun x846 () x843)
(declare-fun x26 () Int)
(declare-fun x1260 () Bool)
(declare-fun x546 () Bool)
(declare-fun x450 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x54 () Int)
(declare-fun x513 () Int)
(declare-fun x626 () Int)
(declare-fun x348 (Int) Int)
(declare-fun x1318 () Int)
(declare-fun x517 () x843)
(declare-fun x534 () Bool)
(declare-fun x305 () Bool)
(declare-fun x1366 () Int)
(declare-fun x143 () Int)
(declare-fun x442 () Int)
(declare-fun x946 () Bool)
(declare-fun x1120 () Int)
(declare-fun x1012 () Bool)
(declare-fun x1194 () Int)
(declare-fun x357 () Bool)
(declare-fun x1404 () Int)
(declare-fun x827 () Int)
(declare-fun x34 () Bool)
(declare-fun x512 () Int)
(declare-fun x1356 (x843) Int)
(declare-fun x436 () Int)
(declare-fun x235 () x843)
(declare-fun x59 () Bool)
(declare-fun x847 () x843)
(declare-fun x371 () Int)
(declare-fun x1052 () x843)
(declare-fun x648 () Bool)
(declare-fun x1389 () x843)
(declare-fun x777 () Int)
(declare-fun x787 () Bool)
(declare-fun x1228 () Int)
(declare-fun x257 () Int)
(declare-fun x463 () Int)
(declare-fun x766 (Int) Int)
(declare-fun x1459 () Bool)
(declare-fun x116 () x843)
(declare-fun x1214 () Int)
(declare-fun x1006 (Int Int) Int)
(declare-fun x73 (Int) Int)
(declare-fun x1101 () Int)
(declare-fun x48 () Bool)
(declare-fun x295 () Int)
(declare-fun x942 () Int)
(declare-fun x568 () Int)
(declare-fun x327 () Int)
(declare-fun x110 () Int)
(declare-fun x927 () x843)
(declare-fun x772 () Int)
(declare-fun x488 () Int)
(declare-fun x1201 () Int)
(declare-fun x1510 () Int)
(declare-fun x152 () Int)
(declare-fun x558 () Bool)
(declare-fun x928 () Bool)
(declare-fun x464 () Int)
(declare-fun x688 () Int)
(declare-fun x1291 () Bool)
(declare-fun x1076 () Int)
(declare-fun x214 () x843)
(declare-fun x1022 () Bool)
(declare-fun x774 () x843)
(declare-fun x803 () Int)
(declare-fun x244 (x843) Int)
(declare-fun x1168 () Int)
(declare-fun x752 () x843)
(declare-fun x105 () Bool)
(declare-fun x1027 () Int)
(declare-fun x1110 () Int)
(declare-fun x570 () Int)
(declare-fun x951 () Bool)
(declare-fun x1018 () x843)
(declare-fun x868 () Int)
(declare-fun x377 () Int)
(declare-fun x181 () Bool)
(declare-fun x675 () x843)
(declare-fun x1261 () Int)
(declare-fun x478 () Int)
(declare-fun x72 () Int)
(declare-fun x50 () Int)
(declare-fun x895 () Int)
(declare-fun x620 () Int)
(declare-fun x240 () x843)
(declare-fun x1302 () Int)
(declare-fun x466 () Int)
(declare-fun x1227 () Int)
(declare-fun x401 () Int)
(declare-fun x1487 () Int)
(declare-fun x172 () Int)
(declare-fun x324 () Bool)
(declare-fun x973 () Int)
(declare-fun x179 () Int)
(declare-fun x359 () Int)
(declare-fun x721 () Int)
(declare-fun x549 () x843)
(declare-fun x102 () Bool)
(declare-fun x917 () x843)
(declare-fun x209 () x843)
(declare-fun x785 () Int)
(declare-fun x959 () Int)
(declare-fun x662 () Bool)
(declare-fun x1172 () Int)
(declare-fun x621 () Bool)
(declare-fun x280 () Int)
(declare-fun x710 () Int)
(declare-fun x94 () Bool)
(declare-fun x14 () Bool)
(declare-fun x1294 (Int) Int)
(declare-fun x51 () Int)
(declare-fun x1177 () Int)
(declare-fun x1369 () Int)
(declare-fun x931 () Bool)
(declare-fun x1290 () Int)
(declare-fun x1225 () Int)
(declare-fun x126 () Int)
(declare-fun x1498 () Int)
(declare-fun x845 () x843)
(declare-fun x603 () Int)
(declare-fun x351 () Bool)
(declare-fun x529 () Bool)
(declare-fun x132 () Int)
(declare-fun x730 () Bool)
(declare-fun x434 () Bool)
(declare-fun x148 () x843)
(declare-fun x171 () Bool)
(declare-fun x142 () Bool)
(declare-fun x1489 () Int)
(declare-fun x1271 () Bool)
(declare-fun x1315 () x843)
(declare-fun x165 () Int)
(declare-fun x824 () Int)
(declare-fun x352 () x843)
(declare-fun x1320 () Int)
(declare-fun x475 () Int)
(declare-fun x966 () Int)
(declare-fun x52 () Bool)
(declare-fun x1295 () Int)
(declare-fun x1155 () x843)
(declare-fun x225 () Bool)
(declare-fun x889 () Int)
(declare-fun x560 () Bool)
(declare-fun x1190 () Int)
(declare-fun x1236 () Bool)
(declare-fun x1409 () x843)
(declare-fun x17 () Int)
(declare-fun x556 () Int)
(declare-fun x402 () Bool)
(declare-fun x333 () Int)
(declare-fun x163 () Int)
(declare-fun x906 () Int)
(declare-fun x1173 () Bool)
(declare-fun x22 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x1199 () x843)
(declare-fun x707 () Int)
(declare-fun x1060 () x843)
(declare-fun x1028 () Bool)
(declare-fun x383 () x843)
(declare-fun x628 () Bool)
(declare-fun x618 () Int)
(declare-fun x741 () Bool)
(declare-fun x1174 () x843)
(declare-fun x1207 () Int)
(declare-fun x1301 () Bool)
(declare-fun x865 (Int) Int)
(declare-fun x309 () Bool)
(declare-fun x1185 () Int)
(declare-fun x1191 () Int)
(declare-fun x873 () Bool)
(declare-fun x619 () Bool)
(declare-fun x202 () Bool)
(declare-fun x1469 () Int)
(declare-fun x1209 () x843)
(declare-fun x694 () Int)
(declare-fun x685 () Int)
(declare-fun x90 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x798 () Bool)
(declare-fun x646 () Int)
(declare-fun x813 () x843)
(declare-fun x899 () x843)
(declare-fun x115 () Int)
(declare-fun x1129 () x843)
(declare-fun x390 () Int)
(declare-fun x593 () Int)
(declare-fun x1346 () Bool)
(declare-fun x564 () Int)
(declare-fun x130 () Int)
(declare-fun x1473 () Bool)
(declare-fun x761 () Bool)
(declare-fun x1266 () Bool)
(declare-fun x87 () x843)
(declare-fun x1124 () Bool)
(declare-fun x1299 () Int)
(declare-fun x1136 () Int)
(declare-fun x611 () Bool)
(declare-fun x1484 () Int)
(declare-fun x65 () Int)
(declare-fun x1411 () Int)
(declare-fun x353 () x843)
(declare-fun x223 () x843)
(declare-fun x125 () Bool)
(declare-fun x1232 () x843)
(declare-fun x448 (x843) Int)
(declare-fun x1103 () Bool)
(declare-fun x1092 () Int)
(declare-fun x1093 () Int)
(declare-fun x962 () Int)
(declare-fun x1200 () Bool)
(declare-fun x161 () Bool)
(declare-fun x8 () Int)
(declare-fun x211 () x843)
(declare-fun x56 () Int)
(declare-fun x467 () Bool)
(declare-fun x1507 () Int)
(declare-fun x565 () x843)
(declare-fun x1041 () Bool)
(declare-fun x187 () Bool)
(declare-fun x1306 () Int)
(declare-fun x263 () Bool)
(declare-fun x779 () Int)
(declare-fun x412 () Int)
(declare-fun x1403 () Bool)
(declare-fun x617 () Bool)
(declare-fun x879 () Bool)
(declare-fun x653 () Bool)
(declare-fun x758 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x633 () Int)
(declare-fun x978 () Int)
(declare-fun x1164 () Int)
(declare-fun x1038 () Bool)
(declare-fun x988 () x843)
(declare-fun x380 () x843)
(declare-fun x1395 () Int)
(declare-fun x527 () Bool)
(declare-fun x409 () Bool)
(declare-fun x687 () Int)
(declare-fun x789 () Bool)
(declare-fun x589 () Int)
(declare-fun x1417 () Int)
(declare-fun x814 () x843)
(declare-fun x253 () x843)
(declare-fun x781 () Int)
(declare-fun x278 () Int)
(declare-fun x399 () Int)
(declare-fun x709 () x843)
(declare-fun x1178 () Int)
(declare-fun x213 () Int)
(declare-fun x504 () Bool)
(declare-fun x1430 () Int)
(declare-fun x661 () x843)
(declare-fun x860 () Int)
(declare-fun x1296 () Int)
(declare-fun x255 () Bool)
(declare-fun x283 () Bool)
(declare-fun x826 () Int)
(declare-fun x1465 () x843)
(declare-fun x883 () Int)
(declare-fun x795 () Int)
(declare-fun x1053 () Int)
(declare-fun x358 () Int)
(declare-fun x1100 () Int)
(declare-fun x782 () Int)
(declare-fun x935 () x843)
(declare-fun x702 () x843)
(declare-fun x1273 () Bool)
(declare-fun x718 () Int)
(declare-fun x1149 () Int)
(declare-fun x141 () Int)
(declare-fun x584 () Bool)
(declare-fun x822 () Bool)
(declare-fun x43 () Int)
(declare-fun x5 () Int)
(declare-fun x1253 () Int)
(declare-fun x376 () Bool)
(declare-fun x947 () Int)
(declare-fun x521 (x843) Int)
(declare-fun x830 () Int)
(declare-fun x1303 () Int)
(declare-fun x1098 () Int)
(declare-fun x1335 () Int)
(declare-fun x704 () Int)
(declare-fun x831 () Bool)
(declare-fun x950 () Bool)
(declare-fun x901 () Int)
(declare-fun x146 () Int)
(declare-fun x268 () Int)
(declare-fun x599 () Bool)
(declare-fun x124 () Int)
(declare-fun x242 () Int)
(declare-fun x1399 () Int)
(declare-fun x182 () Bool)
(declare-fun x307 () Int)
(declare-fun x1256 () Bool)
(declare-fun x1044 (Int) Int)
(declare-fun x1045 () Int)
(declare-fun x1412 () Int)
(declare-fun x853 () Int)
(declare-fun x1036 () x843)
(declare-fun x1135 () Int)
(declare-fun x670 (x843) Int)
(declare-fun x720 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x566 () Bool)
(declare-fun x1441 () Int)
(declare-fun x701 () x843)
(declare-fun x1495 () Int)
(declare-fun x1461 () x843)
(declare-fun x569 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x391 () x843)
(declare-fun x857 () Bool)
(declare-fun x786 () Int)
(declare-fun x1372 () Int)
(declare-fun x1229 () x843)
(declare-fun x1114 () Bool)
(declare-fun x1472 () Int)
(declare-fun x859 () Int)
(declare-fun x762 () Int)
(declare-fun x1336 () Bool)
(declare-fun x893 () x843)
(declare-fun x1410 () Int)
(declare-fun x817 () Int)
(declare-fun x623 () Bool)
(declare-fun x81 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x953 () Int)
(declare-fun x808 () Bool)
(declare-fun x595 () Int)
(declare-fun x1169 () Int)
(declare-fun x700 () Bool)
(declare-fun x913 () x843)
(declare-fun x84 () x843)
(declare-fun x1147 () Int)
(declare-fun x279 () Bool)
(declare-fun x680 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x759 () x843)
(declare-fun x671 () Int)
(declare-fun x345 () Int)
(declare-fun x1031 () Bool)
(declare-fun x995 () Bool)
(declare-fun x783 () Bool)
(declare-fun x1165 () Int)
(declare-fun x801 () Bool)
(declare-fun x828 () Int)
(declare-fun x1501 () x843)
(declare-fun x632 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x999 () Bool)
(declare-fun x144 () Bool)
(declare-fun x1422 () x843)
(declare-fun x587 () Bool)
(declare-fun x340 () Bool)
(declare-fun x904 () x843)
(declare-fun x1257 () Bool)
(declare-fun x1511 () Int)
(declare-fun x668 () Int)
(declare-fun x1494 () Bool)
(declare-fun x848 () Int)
(declare-fun x638 () Int)
(declare-fun x624 () Int)
(declare-fun x354 () Bool)
(declare-fun x1361 () Int)
(declare-fun x736 () Bool)
(declare-fun x1062 (Int) Int)
(declare-fun x95 () Int)
(declare-fun x1132 () Int)
(declare-fun x154 () Bool)
(declare-fun x220 () Int)
(declare-fun x388 () Int)
(declare-fun x642 () Int)
(declare-fun x1405 () Int)
(declare-fun x1180 () Bool)
(declare-fun x233 () Bool)
(declare-fun x583 () Int)
(declare-fun x518 () x843)
(declare-fun x274 () Int)
(declare-fun x1219 () Bool)
(declare-fun x522 () x843)
(declare-fun x1002 () Bool)
(declare-fun x508 () Int)
(declare-fun x1513 () Bool)
(declare-fun x807 () x843)
(declare-fun x1188 () Int)
(declare-fun x1085 () Int)
(declare-fun x1470 () Int)
(declare-fun x923 (x843) Int)
(declare-fun x272 () Bool)
(declare-fun x1466 () Int)
(declare-fun x7 () Int)
(declare-fun x992 (Int) Int)
(declare-fun x198 () Int)
(declare-fun x1362 () Bool)
(declare-fun x654 () Int)
(declare-fun x756 () Bool)
(declare-fun x431 () Bool)
(declare-fun x1313 () Int)
(declare-fun x1019 () x843)
(declare-fun x195 () Bool)
(declare-fun x1154 () x843)
(declare-fun x1150 () Bool)
(declare-fun x38 () Int)
(declare-fun x1258 () Int)
(declare-fun x1270 () Int)
(declare-fun x1493 () Int)
(declare-fun x1278 () Bool)
(declare-fun x91 () x843)
(declare-fun x1243 () Bool)
(declare-fun x543 () Int)
(declare-fun x594 (Int) Int)
(declare-fun x982 (Int) Int)
(declare-fun x805 () Int)
(declare-fun x1186 () Int)
(declare-fun x462 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x612 () Int)
(declare-fun x1095 () x843)
(declare-fun x932 () Bool)
(declare-fun x1308 () Int)
(declare-fun x1415 () Int)
(declare-fun x810 () x843)
(declare-fun x881 () Int)
(declare-fun x168 () Int)
(declare-fun x1337 () Int)
(declare-fun x768 () x843)
(declare-fun x984 () Bool)
(declare-fun x476 () Int)
(declare-fun x21 () x843)
(declare-fun x308 () Int)
(declare-fun x1216 () Int)
(declare-fun x453 () Int)
(declare-fun x896 () Int)
(declare-fun x763 () Int)
(declare-fun x27 () Int)
(declare-fun x1426 (x843) Int)
(declare-fun x123 () Int)
(declare-fun x837 () x843)
(declare-fun x854 () Int)
(declare-fun x289 () Bool)
(declare-fun x852 () x843)
(declare-fun x501 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x526 () x843)
(declare-fun x70 () Bool)
(declare-fun x1324 (x843) Int)
(declare-fun x892 () Int)
(declare-fun x765 () Bool)
(declare-fun x740 () Bool)
(declare-fun x405 () Bool)
(declare-fun x403 () Int)
(declare-fun x335 () Int)
(declare-fun x972 () Int)
(declare-fun x1502 () Int)
(declare-fun x1023 () Int)
(declare-fun x606 () x843)
(declare-fun x480 () Int)
(declare-fun x1420 () Bool)
(declare-fun x74 () Int)
(declare-fun x732 () x843)
(declare-fun x1067 () Int)
(declare-fun x961 () x843)
(declare-fun x1383 () Int)
(declare-fun x1419 () x843)
(declare-fun x210 () Int)
(declare-fun x716 () Bool)
(declare-fun x458 () Int)
(declare-fun x1467 () Bool)
(declare-fun x939 () Bool)
(declare-fun x248 () Int)
(declare-fun x1515 () Int)
(declare-fun x949 (x843) Int)
(declare-fun x771 () Int)
(declare-fun x1434 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x419 () Bool)
(declare-fun x505 () Bool)
(declare-fun x183 () Int)
(declare-fun x764 () Bool)
(declare-fun x907 () Int)
(declare-fun x1298 () x843)
(declare-fun x299 () Int)
(declare-fun x591 () Int)
(declare-fun x1011 () Int)
(declare-fun x1322 () x843)
(declare-fun x1269 () Int)
(declare-fun x714 () Bool)
(declare-fun x553 () Bool)
(declare-fun x494 () Bool)
(declare-fun x451 () Int)
(declare-fun x696 () x843)
(declare-fun x1375 () Int)
(declare-fun x186 () Int)
(declare-fun x1113 () Int)
(declare-fun x120 () x843)
(declare-fun x1499 () Bool)
(declare-fun x1455 () Int)
(declare-fun x1059 () Int)
(declare-fun x1358 () Int)
(declare-fun x370 () Int)
(declare-fun x1037 (x843) Int)
(declare-fun x1478 () Bool)
(declare-fun x1217 () Int)
(declare-fun x1074 () Int)
(declare-fun x342 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x350 () Bool)
(declare-fun x1163 () Bool)
(declare-fun x1117 () x843)
(declare-fun x482 () Int)
(declare-fun x160 () Int)
(declare-fun x503 () x843)
(declare-fun x914 () Int)
(declare-fun x1096 () Int)
(declare-fun x413 () Bool)
(declare-fun x379 () Int)
(declare-fun x227 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x1329 () Int)
(declare-fun x797 () Int)
(declare-fun x395 () Int)
(declare-fun x364 () Int)
(declare-fun x96 () Int)
(declare-fun x637 () x843)
(declare-fun x703 () Int)
(declare-fun x1350 () Int)
(declare-fun x1327 () Bool)
(declare-fun x1304 () Int)
(declare-fun x905 () x843)
(declare-fun x535 () Int)
(declare-fun x243 () Int)
(declare-fun x655 () x843)
(declare-fun x963 () Int)
(declare-fun x118 () x843)
(declare-fun x1365 () Bool)
(declare-fun x422 () Int)
(declare-fun x131 () Int)
(declare-fun x454 () Int)
(declare-fun x215 () Int)
(declare-fun x1330 () Bool)
(declare-fun x196 () x843)
(declare-fun x222 () Int)
(declare-fun x833 () Int)
(declare-fun x818 () Bool)
(declare-fun x106 () Int)
(declare-fun x715 () Bool)
(declare-fun x18 () x843)
(declare-fun x416 () Bool)
(declare-fun x851 () Int)
(declare-fun x192 () Int)
(declare-fun x839 () Int)
(declare-fun x832 () Int)
(declare-fun x1057 () Bool)
(declare-fun x738 () x843)
(declare-fun x1268 () Bool)
(declare-fun x1009 (x843) Int)
(declare-fun x1316 () Bool)
(declare-fun x679 () Int)
(declare-fun x940 () Bool)
(declare-fun x690 () x843)
(declare-fun x230 () Int)
(declare-fun x650 () Int)
(declare-fun x459 () Int)
(declare-fun x825 () Int)
(declare-fun x133 (Int) Int)
(declare-fun x862 () Int)
(declare-fun x1249 () Bool)
(declare-fun x1055 () Int)
(declare-fun x773 () Int)
(declare-fun x1008 () Int)
(declare-fun x28 (Int) Int)
(declare-fun x724 () Int)
(declare-fun x802 () Bool)
(declare-fun x293 () Bool)
(declare-fun x316 () Int)
(declare-fun x331 () Int)
(declare-fun x1265 () Bool)
(declare-fun x816 () Int)
(declare-fun x1137 () Int)
(declare-fun x53 () Bool)
(declare-fun x1388 () Int)
(declare-fun x788 () Bool)
(declare-fun x381 () Int)
(declare-fun x1460 () Int)
(declare-fun x423 () Bool)
(declare-fun x415 () Bool)
(declare-fun x188 () Int)
(declare-fun x834 () Bool)
(declare-fun x1051 () Int)
(declare-fun x1029 () Int)
(declare-fun x224 () Int)
(declare-fun x728 () Int)
(declare-fun x1202 () Int)
(declare-fun x1435 () Int)
(declare-fun x742 () Int)
(declare-fun x37 () Bool)
(declare-fun x557 () Int)
(declare-fun x460 () Bool)
(declare-fun x292 () Bool)
(declare-fun x344 () Int)
(declare-fun x1054 () x843)
(declare-fun x175 () Int)
(declare-fun x468 () Bool)
(declare-fun x644 () Int)
(declare-fun x1246 () Bool)
(declare-fun x672 () Bool)
(declare-fun x396 () Bool)
(declare-fun x1347 () x843)
(declare-fun x776 () Bool)
(declare-fun x1264 () x843)
(declare-fun x41 () Int)
(declare-fun x497 () Int)
(declare-fun x726 () Int)
(declare-fun x1179 () x843)
(declare-fun x1449 () Int)
(declare-fun x356 () Int)
(declare-fun x580 () Bool)
(declare-fun x76 () Int)
(declare-fun x636 () Int)
(declare-fun x1450 () Int)
(declare-fun x322 () Bool)
(declare-fun x218 () Bool)
(declare-fun x1492 () Int)
(declare-fun x217 () Bool)
(declare-fun x355 () Int)
(declare-fun x1176 (Int) Int)
(declare-fun x369 () Int)
(declare-fun x541 () Int)
(declare-fun x1086 () x843)
(declare-fun x506 () Int)
(declare-fun x1312 () Int)
(declare-fun x92 () Bool)
(declare-fun x285 () Int)
(declare-fun x722 () Bool)
(declare-fun x101 () Int)
(declare-fun x1456 () Int)
(declare-fun x1454 () x843)
(declare-fun x1104 () Int)
(declare-fun x241 () Int)
(declare-fun x1406 () Bool)
(declare-fun x440 () x843)
(declare-fun x1233 () Bool)
(declare-fun x291 () Int)
(declare-fun x1263 () Bool)
(declare-fun x572 () Int)
(declare-fun x746 (Int) Int)
(declare-fun x1421 () Int)
(declare-fun x328 () Int)
(declare-fun x516 () Bool)
(declare-fun x1280 () x843)
(declare-fun x39 () Int)
(declare-fun x1283 () x843)
(declare-fun x119 () Int)
(declare-fun x1471 () Bool)
(declare-fun x691 () Int)
(declare-fun x525 () Int)
(declare-fun x582 () Int)
(declare-fun x306 () x843)
(declare-fun x1514 () Int)
(declare-fun x1070 () Int)
(declare-fun x1241 () Bool)
(declare-fun x42 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x265 () Bool)
(declare-fun x523 () Bool)
(declare-fun x80 () Int)
(declare-fun x1007 () Int)
(declare-fun x967 () Bool)
(declare-fun x128 () x843)
(declare-fun x1438 () Bool)
(declare-fun x109 () x843)
(declare-fun x1030 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x659 () Bool)
(declare-fun x485 () Bool)
(declare-fun x398 () Bool)
(declare-fun x563 () Bool)
(declare-fun x290 () Bool)
(declare-fun x1432 () x843)
(declare-fun x147 () Bool)
(declare-fun x1520 () Int)
(declare-fun x983 () Bool)
(declare-fun x262 () Bool)
(declare-fun x858 () Int)
(declare-fun x872 () x843)
(declare-fun x1224 () x843)
(declare-fun x1121 () x843)
(declare-fun x1250 () Int)
(declare-fun x99 () Bool)
(declare-fun x926 () Bool)
(declare-fun x898 () Int)
(declare-fun x1476 () x843)
(declare-fun x373 () Int)
(declare-fun x723 () x843)
(declare-fun x103 () Int)
(declare-fun x673 () Int)
(declare-fun x1363 () Int)
(declare-fun x706 () Bool)
(declare-fun x652 () Int)
(declare-fun x12 () Int)
(declare-fun x167 () Bool)
(declare-fun x607 () Bool)
(declare-fun x1026 () Int)
(declare-fun x404 () Int)
(declare-fun x1240 () Bool)
(declare-fun x1414 () x843)
(declare-fun x641 () Int)
(declare-fun x1196 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x231 (Int) Int)
(declare-fun x11 () Bool)
(declare-fun x890 () x843)
(declare-fun x980 () x843)
(declare-fun x678 () x843)
(declare-fun x193 () Int)
(declare-fun x1321 () Bool)
(declare-fun x635 () Bool)
(declare-fun x311 () x843)
(declare-fun x156 () Int)
(declare-fun x1122 () x843)
(declare-fun x1424 () Int)
(declare-fun x1387 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x64 () Int)
(declare-fun x1140 () x843)
(declare-fun x1386 () Bool)
(declare-fun x1377 () Bool)
(declare-fun x850 () x843)
(declare-fun x474 () x843)
(declare-fun x320 () Int)
(declare-fun x318 () Bool)
(declare-fun x266 () x843)
(declare-fun x960 () Int)
(declare-fun x1203 () Int)
(declare-fun x140 () x843)
(declare-fun x567 () Int)
(declare-fun x733 () x843)
(declare-fun x1297 () Bool)
(declare-fun x502 () x843)
(declare-fun x1277 () Int)
(declare-fun x1262 () x843)
(declare-fun x952 () Int)
(declare-fun x1143 () Bool)
(declare-fun x271 () Int)
(declare-fun x799 () x843)
(declare-fun x1010 () x843)
(declare-fun x677 () Bool)
(declare-fun x104 () Int)
(declare-fun x1035 () Int)
(declare-fun x871 () Int)
(declare-fun x1334 () x843)
(declare-fun x1475 () Bool)
(declare-fun x994 (x843) Int)
(declare-fun x769 () Int)
(declare-fun x1099 () Int)
(declare-fun x1497 () Int)
(declare-fun x615 () Int)
(declare-fun x996 () Bool)
(declare-fun x1448 () Int)
(declare-fun x920 () Int)
(declare-fun x547 () Bool)
(declare-fun x755 () x843)
(declare-fun x608 () Int)
(declare-fun x1108 () Bool)
(declare-fun x112 () Int)
(declare-fun x1279 () Bool)
(declare-fun x1125 () Bool)
(declare-fun x432 () Int)
(declare-fun x912 () x843)
(declare-fun x1368 () Int)
(declare-fun x45 () Bool)
(declare-fun x909 () Bool)
(declare-fun x1331 () x843)
(declare-fun x574 (x843) Int)
(declare-fun x1238 () Int)
(declare-fun x30 () Int)
(declare-fun x1218 (x843) Int)
(declare-fun x579 () Int)
(declare-fun x1237 () Bool)
(declare-fun x145 () Int)
(declare-fun x498 () Int)
(declare-fun x1046 () Bool)
(declare-fun x1391 () x843)
(declare-fun x1049 () Int)
(declare-fun x1286 () Int)
(declare-fun x835 () Bool)
(declare-fun x1195 (Int) Int)
(declare-fun x1354 () Bool)
(declare-fun x375 () Int)
(declare-fun x1431 () Int)
(declare-fun x1292 () Bool)
(declare-fun x315 () Bool)
(declare-fun x452 () Int)
(declare-fun x250 () x843)
(declare-fun x1416 () x843)
(declare-fun x1152 () Bool)
(declare-fun x820 () x843)
(declare-fun x811 () Int)
(declare-fun x1401 () x843)
(declare-fun x491 () Bool)
(declare-fun x304 () Int)
(declare-fun x10 () Int)
(declare-fun x1080 () Int)
(declare-fun x1222 () Bool)
(declare-fun x249 () Int)
(declare-fun x385 () x843)
(declare-fun x1 () Int)
(declare-fun x1126 () Bool)
(declare-fun x790 () Int)
(declare-fun x254 () Bool)
(declare-fun x1328 () Int)
(declare-fun x23 () x843)
(declare-fun x1457 () Bool)
(declare-fun x259 () Int)
(declare-fun x406 () Int)
(declare-fun x551 () Int)
(declare-fun x1212 () Int)
(declare-fun x69 () Bool)
(declare-fun x1204 () Int)
(declare-fun x31 () Int)
(declare-fun x1436 () Bool)
(declare-fun x97 () Bool)
(declare-fun x461 () Bool)
(declare-fun x977 () Int)
(declare-fun x392 () Bool)
(declare-fun x1385 () Int)
(declare-fun x1442 () Bool)
(declare-fun x1488 () Int)
(declare-fun x343 () Int)
(declare-fun x1210 () Bool)
(declare-fun x321 () Int)
(declare-fun x330 () Bool)
(declare-fun x1463 () Int)
(declare-fun x426 () Bool)
(declare-fun x609 () Int)
(declare-fun x15 () x843)
(declare-fun x712 () Int)
(declare-fun x605 () Int)
(declare-fun x169 () x843)
(declare-fun x89 () x843)
(declare-fun x117 () Int)
(declare-fun x1379 () Int)
(declare-fun x1133 () Bool)
(declare-fun x1413 () x843)
(declare-fun x922 () Int)
(declare-fun x753 () Bool)
(declare-fun x894 () Bool)
(declare-fun x1017 () x843)
(declare-fun x366 () Int)
(declare-fun x427 () Int)
(declare-fun x477 () Int)
(declare-fun x1503 () x843)
(declare-fun x151 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x1112 () Int)
(declare-fun x208 () Int)
(declare-fun x1005 () Int)
(declare-fun x1509 (x843) Int)
(define-fun x597 ((x843 x843) (x948 Int)) x843 (ite ((_ is x1184) x843) (x1184 (x933 x843) (+ (x1340 x843) x948)) (ite ((_ is x189) x843) (x189 (x665 x843) (x174 x843) (+ (x1505 x843) x948)) (x550 (+ (x1171 x843) x948)))))
(define-fun x1119 ((x878 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x878) (<= 0 x878)) x878 (- x878 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x191 ((x878 Int)) Int (ite (and (< x878 0) (>= x878 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x878 115792089237316195423570985008687907853269984665640564039457584007913129639936) x878))
(define-fun x1089 ((x695 Int)) Bool (and (< x695 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x695 0)))
(define-fun x1192 ((x695 Int)) Bool (and (= (x1006 x695 115792089237316195423570985008687907853269984665640564039457584007913129639935) x695) (= (x1006 115792089237316195423570985008687907853269984665640564039457584007913129639935 x695) x695)))
(define-fun x1310 ((x695 Int)) Bool (and (= (x1006 x695 0) 0) (= 0 (x1006 0 x695))))
(define-fun x1429 ((x695 Int)) Bool (= x695 (x1006 x695 x695)))
(define-fun x1145 ((x695 Int)) Bool (and (x1310 x695) (x1429 x695) (x1192 x695)))
(define-fun x919 ((x695 Int)) Bool (= (x1006 1461501637330902918203684832716283019655932542975 (x1006 1461501637330902918203684832716283019655932542975 x695)) (x1006 1461501637330902918203684832716283019655932542975 x695)))
(define-fun x445 ((x695 Int)) Bool (=> (and (< x695 1461501637330902918203684832716283019655932542976) (>= x695 0)) (= (x1006 1461501637330902918203684832716283019655932542975 x695) x695)))
(define-fun x1248 ((x695 Int)) Bool (=> (= (x1006 1461501637330902918203684832716283019655932542975 x695) x695) (and (< x695 1461501637330902918203684832716283019655932542976) (<= 0 x695))))
(define-fun x33 ((x695 Int)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x695) (> 2923003274661805836407369665432566039311865085952 x695)) (= (x1006 1461501637330902918203684832716283019655932542975 x695) (- x695 1461501637330902918203684832716283019655932542976))))
(define-fun x465 ((x695 Int) (x1458 Int)) Bool (and (<= 0 x1458) (= x695 (+ (* x1458 1461501637330902918203684832716283019655932542976) (x1006 1461501637330902918203684832716283019655932542975 x695)))))
(define-fun x666 ((x695 Int) (x479 Int)) Bool (and (x1248 x695) (x919 x695) (x33 x695) (x445 x695) (x465 x695 x479)))
(define-fun x509 ((x695 Int) (x1458 Int)) Bool (= (x1006 x695 x1458) (x1006 x1458 x695)))
(define-fun x1072 ((x695 Int) (x1458 Int)) Bool (and (=> (<= 0 x1458) (<= (x1006 x695 x1458) x1458)) (>= (x1006 x695 x1458) 0) (=> (<= 0 x695) (>= x695 (x1006 x695 x1458)))))
(define-fun x577 ((x695 Int) (x1458 Int)) Bool (and (x509 x695 x1458) (x1072 x695 x1458)))
(define-fun x693 ((x695 Int) (x479 Int)) Bool (and (x577 x695 1461501637330902918203684832716283019655932542975) (x666 x695 x479)))
(define-fun x945 ((x695 Int)) Bool (= (x1006 26959946667150639794667015087019630673637144422540572481103610249215 x695) (x1006 26959946667150639794667015087019630673637144422540572481103610249215 (x1006 26959946667150639794667015087019630673637144422540572481103610249215 x695))))
(define-fun x897 ((x695 Int)) Bool (=> (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x695) (>= x695 0)) (= x695 (x1006 26959946667150639794667015087019630673637144422540572481103610249215 x695))))
(define-fun x809 ((x695 Int)) Bool (=> (= x695 (x1006 26959946667150639794667015087019630673637144422540572481103610249215 x695)) (and (>= x695 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x695))))
(define-fun x334 ((x695 Int)) Bool (=> (and (> 53919893334301279589334030174039261347274288845081144962207220498432 x695) (>= x695 26959946667150639794667015087019630673637144422540572481103610249216)) (= (- x695 26959946667150639794667015087019630673637144422540572481103610249216) (x1006 26959946667150639794667015087019630673637144422540572481103610249215 x695))))
(define-fun x472 ((x695 Int) (x1458 Int)) Bool (and (= (+ (x1006 26959946667150639794667015087019630673637144422540572481103610249215 x695) (* 26959946667150639794667015087019630673637144422540572481103610249216 x1458)) x695) (>= x1458 0)))
(define-fun x520 ((x695 Int) (x479 Int)) Bool (and (x472 x695 x479) (x334 x695) (x897 x695) (x945 x695) (x809 x695)))
(define-fun x1043 ((x695 Int) (x479 Int)) Bool (and (x577 x695 26959946667150639794667015087019630673637144422540572481103610249215) (x520 x695 x479)))
(define-fun x1109 ((x695 Int)) Bool (= (x1006 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1006 115792089237316195423570985008687907853269984665640564039457584007913129639904 x695)) (x1006 115792089237316195423570985008687907853269984665640564039457584007913129639904 x695)))
(define-fun x19 ((x695 Int)) Bool (=> (and (< x695 32) (<= 0 x695)) (= 0 (x1006 115792089237316195423570985008687907853269984665640564039457584007913129639904 x695))))
(define-fun x300 ((x695 Int) (x1458 Int) (x538 Int) (x411 Int)) Bool (and (= x695 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x411) x1458 (* x538 32))) (>= x411 0) (< x1458 32) (> 1 x411) (<= 0 x1458) (>= x538 0) (< x538 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= (* 32 x538) (x1006 115792089237316195423570985008687907853269984665640564039457584007913129639904 x695))))
(define-fun x46 ((x695 Int) (x1107 Int) (x965 Int) (x938 Int)) Bool (and (x300 x695 x1107 x965 x938) (x19 x695) (x1109 x695)))
(define-fun x368 ((x695 Int) (x1107 Int) (x965 Int) (x938 Int)) Bool (and (x46 x695 x1107 x965 x938) (x577 x695 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x745 ((x88 Int)) Int (x267 x88))
(define-fun x800 ((x88 Int)) Int (ite (= 128 x88) x106 (x865 x88)))
(define-fun x435 ((x88 Int)) Int (ite (and (< x88 (+ 160 x762)) (<= 160 x88)) (x267 (+ (- x88 160) x294)) (x800 x88)))
(define-fun x363 ((x88 Int)) Int (ite (= x156 x88) 0 (x435 x88)))
(define-fun x226 ((x88 Int)) Int (ite (and (< x88 (+ x180 x1518)) (<= x1518 x88)) (x267 (+ x1207 (- x88 x1518))) (x849 x88)))
(define-fun x1508 ((x88 x843)) Int (ite (= x1262 x88) x285 (x778 x88)))
(define-fun x604 ((x88 x843)) Int (ite (= x1454 x88) x285 (x778 x88)))
(define-fun x542 ((x88 x843)) Int (ite (= x128 x88) x285 (x199 x88)))
(define-fun x792 ((x88 x843)) Int (ite (= x768 x88) x285 (x199 x88)))
(define-fun x1193 ((x88 x843)) Int (ite (and x1022 x1471) (x199 x88) (ite (and x303 x1263) (x778 x88) (ite (and (not x527) x523) (x542 x88) (x792 x88)))))
(define-fun x796 ((x88 x843)) Int (ite (= x913 x88) x991 (x1426 x88)))
(define-fun x1065 ((x88 x843)) Int (ite (= x88 x251) x1404 (x1037 x88)))
(define-fun x157 ((x88 x843)) Int (ite (and (not x527) x523) (x1065 x88) (x1037 x88)))
(define-fun x1162 ((x88 x843)) Int (ite (and x1471 x1022) (x1037 x88) (ite (and x303 x1263) (x1426 x88) (x157 x88))))
(define-fun x1255 ((x88 x843)) Int (ite (= x1461 x88) x886 (x1009 x88)))
(define-fun x1069 ((x88 x843)) Int (ite (= x88 x15) x1519 (x1221 x88)))
(define-fun x639 ((x88 x843)) Int (ite (and x1022 x1471) (x1221 x88) (ite (and x303 x1263) (x1009 x88) (ite (and x523 x713) (x1221 x88) (x1069 x88)))))
(define-fun x1175 ((x88 x843)) Int (ite (= x88 x961) x285 (x1205 x88)))
(define-fun x689 ((x88 x843)) Int (ite (= x88 x565) x285 (x1205 x88)))
(define-fun x936 ((x88 x843)) Int (ite (= x88 x904) x285 (x1205 x88)))
(define-fun x490 ((x88 x843)) Int (ite (= x88 x780) x285 (x1509 x88)))
(define-fun x1359 ((x88 x843)) Int (ite (= x684 x88) x285 (x1509 x88)))
(define-fun x874 ((x88 x843)) Int (ite (= x88 x362) x285 (x1509 x88)))
(define-fun x613 ((x88 x843)) Int (ite (and x1471 x1022) (x1509 x88) (ite (and x303 x1263) (x1205 x88) (ite (and (not x1349) (not x1321) x1459) (x490 x88) (ite (and x1459 (not x1321) x1349) (x1359 x88) (x874 x88))))))
(define-fun x576 ((x88 x843)) Int (ite (= x88 x1416) x252 (x1218 x88)))
(define-fun x956 ((x88 x843)) Int (ite (= x88 x522) x685 (x923 x88)))
(define-fun x1319 ((x88 x843)) Int (ite (= x813 x88) 0 (x1356 x88)))
(define-fun x1084 ((x88 x843)) Int (ite (and x1125 x1394 (not x928)) (x1356 x88) (ite (and x1394 (not x1125)) (x574 x88) (x1319 x88))))
(define-fun x1353 ((x88 x843)) Int (ite (= x88 x326) x688 (x277 x88)))
(define-fun x1355 ((x88 x843)) Int (ite (= x88 x1020) x1506 (x448 x88)))
(define-fun x1398 ((x88 x843)) Int (ite (and x1459 (not x1321) (not x1349)) (x1355 x88) (x448 x88)))
(define-fun x1197 ((x88 x843)) Int (ite (= x88 x1452) 0 (x949 x88)))
(define-fun x197 ((x88 x843)) Int (ite (and x1394 x1125 (not x928)) (x949 x88) (ite (and (not x1125) x1394) (x521 x88) (x1197 x88))))
(define-fun x971 ((x88 x843)) Int (ite (= x88 x1097) 0 (x197 x88)))
(define-fun x367 ((x88 Int)) Int (ite (= x88 x638) x12 (x982 x88)))
(define-fun x1161 ((x88 Int)) Int (ite (= x88 x1363) x1466 (x367 x88)))
(define-fun x812 ((x88 Int)) Int (ite (and x1403 x272) (x982 x88) (x1161 x88)))
(define-fun x139 ((x88 Int)) Int (ite (= x88 x1168) x572 (x812 x88)))
(define-fun x625 ((x88 Int)) Int (ite (= x548 x88) x556 (x1294 x88)))
(define-fun x443 ((x88 Int)) Int (ite (= x88 x1488) x425 (x974 x88)))
(define-fun x884 ((x88 Int)) Int (ite (= x703 x88) x1408 (x443 x88)))
(define-fun x1245 ((x88 Int)) Int (ite (and (not x1349) (not x1321) x1459) (x884 x88) (ite (and x1349 x1459 (not x1321)) (x884 x88) (x974 x88))))
(define-fun x958 ((x88 Int)) Int (ite (= x955 x88) x41 (x1245 x88)))
(define-fun x1144 ((x88 Int)) Int (ite (= x88 x314) x1448 (x348 x88)))
(define-fun x514 ((x88 Int)) Int (ite (and (not x45) (not x976) x844 x523) (x348 x88) (ite (and x523 (not x976) (not x844)) (x594 x88) (x1144 x88))))
(define-fun x40 ((x88 Int)) Int (ite (and x1471 x1022) (x974 x88) (ite (and x1263 x303) (x982 x88) (ite (and x523 (not x976)) (x514 x88) (x594 x88)))))
(define-fun x93 ((x88 Int)) Int (ite (= x88 x1352) x512 (x40 x88)))
(define-fun x1230 ((x88 Int)) Int (ite (= x1397 x88) x795 (x93 x88)))
(define-fun x1418 ((x88 Int)) Int (ite (= x1216 x88) x1013 (x1230 x88)))
(define-fun x269 ((x88 Int)) Int (ite (= x898 x88) x973 (x1418 x88)))
(define-fun x281 ((x88 Int)) Int (ite (= x88 x257) 32 (x269 x88)))
(define-fun x592 ((x88 Int)) Int (ite (= x88 x1326) x54 (x1044 x88)))
(define-fun x234 ((x88 Int)) Int (ite (= x449 x88) 0 (x1195 x88)))
(define-fun x622 ((x88 Int)) Int (ite (= x88 0) 1 (x1141 x88)))
(define-fun x880 ((x88 Int)) Int (ite (= x88 0) 1 (x1141 x88)))
(define-fun x1118 ((x88 Int)) Int (ite (and x1265 x1447) (x622 x88) (x880 x88)))
(define-fun x382 ((x88 Int)) Int (ite (= x64 x88) x372 (x28 x88)))
(define-fun x338 ((x88 Int)) Int (ite (= x64 x88) x1170 (x28 x88)))
(define-fun x585 ((x88 Int)) Int (ite (= x64 x88) x751 (x746 x88)))
(define-fun x1242 ((x88 Int)) Int (ite (and (>= x88 x1502) (< x88 (+ x1502 x751))) (x1118 (+ (- x88 x1502) 0)) (x585 x88)))
(define-fun x201 ((x88 Int)) Int (ite (and (not x996) x1345) (x1242 x88) (x746 x88)))
(define-fun x113 ((x88 Int)) Int (ite (= x88 x1417) x512 (x201 x88)))
(define-fun x1042 ((x88 Int)) Int (ite (= x1234 x88) x1483 (x113 x88)))
(define-fun x298 ((x88 Int)) Int (ite (= x88 x782) x222 (x1042 x88)))
(define-fun x1090 ((x88 Int)) Int (ite (= x88 x552) x1425 (x298 x88)))
(define-fun x711 ((x88 Int)) Int (ite (= x88 x537) 32 (x1090 x88)))
(define-fun x365 ((x88 Int)) Int (ite (= x88 x1497) x1051 (x766 x88)))
(define-fun x1496 ((x88 Int)) Int (ite (= x88 x492) 0 (x528 x88)))
(define-fun x420 ((x88 x843)) Int (ite (= x88 (x1468 274184521717934524641157099916833587206)) x345 (x1247 x88)))
(define-fun x1491 ((x88 x843)) Int (ite (= (x1468 x476) x88) x797 (x420 x88)))
(define-fun x296 ((x88 x843)) Int (ite (= (x1468 x476) x88) x111 (x1491 x88)))
(define-fun x471 ((x88 x843)) Int (ite (= x88 (x1468 274184521717934524641157099916833587206)) x691 (x296 x88)))
(define-fun x1183 ((x88 x843)) Int (ite (= (x1468 274184521717934524641157099916833587206) x88) x1383 (x471 x88)))
(define-fun x1075 ((x88 x843)) Int (ite (= x88 (x1468 x39)) x1160 (x1183 x88)))
(define-fun x159 ((x88 x843)) Int (ite (= x88 x910) x920 (x670 x88)))
(define-fun x58 ((x88 x843)) Int (ite (= x88 x120) x1366 (x159 x88)))
(define-fun x85 ((x88 x843)) Int (ite (and x1265 x1447) (x58 x88) (x670 x88)))
(define-fun x964 ((x88 x843)) Int (ite (= x88 x1419) x1134 (x85 x88)))
(define-fun x1341 ((x88 Int)) Int (ite (= x88 0) 1 (x643 x88)))
(define-fun x875 ((x88 Int)) Int (ite (= x88 x772) x75 (x829 x88)))
(define-fun x855 ((x88 x843)) Int (ite (= x88 x503) x1517 (x994 x88)))
(define-fun x989 ((x88 x843)) Int (ite (= x88 x917) x925 (x855 x88)))
(define-fun x418 ((x88 x843)) Int (ite (and x1447 x1265) (x994 x88) (x989 x88)))
(define-fun x686 ((x88 x843)) Int (ite (= x969 x88) x793 (x418 x88)))
(define-fun x1300 ((x88 Int)) Int (ite (= x88 0) 1 (x643 x88)))
(define-fun x674 ((x88 Int)) Int (ite (= x772 x88) x947 (x829 x88)))
(define-fun x301 ((x88 Int)) Int (ite (and x60 x1034) (x1341 x88) (x1300 x88)))
(define-fun x791 ((x88 x843)) Int (ite (= (x1468 x39) x88) x1337 (x1075 x88)))
(define-fun x735 ((x88 Int)) Int (ite (= x88 x772) x1064 (x231 x88)))
(define-fun x32 ((x88 Int)) Int (ite (and (<= x76 x88) (< x88 (+ x76 x1064))) (x301 (+ (- x88 x76) 0)) (x735 x88)))
(define-fun x760 ((x88 Int)) Int (ite (and x52 x539) (x231 x88) (x32 x88)))
(define-fun x4 ((x695 Int)) Bool (=> (and (not (= 635128645 x695)) (not (= 2764855426 x695)) (not (= x695 87118632)) (not (= 1000000000000000000 x695)) (not (= 2418364589 x695)) (not (= 274184521717934524641157099916833587218 x695)) (not (= 115792089237316195423570985008687907853269984665640564039457 x695)) (not (= x695 1461501637330902918203684832716283019655932542975)) (not (= 2690754053 x695)) (not (= 274184521717934524641157099916833587214 x695)) (not (= 2798343961 x695)) (not (= x695 1986467848)) (not (= 2743102681 x695)) (not (= 468353030 x695)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x695)) (not (= 1889567281 x695)) (not (= 826074471 x695)) (> x695 10000) (not (= x695 2258409472)) (not (= x695 142201243)) (not (= x695 2835717307)) (not (= 2514000705 x695)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x695)) (not (= x695 1968616202)) (not (= x695 759532456)) (not (= 69947311 x695)) (not (= x695 2532887486)) (not (= 274184521717934524641157099916833587206 x695)) (not (= 649617121 x695)) (not (= x695 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 911411945 x695)) (not (= 2512682246 x695)) (not (= 604800 x695)) (not (= x695 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x695 2960351575)) (not (= x695 2293535753)) (not (= 2211524764 x695)) (not (= x695 18446744073709551615)) (not (= 2061678023 x695)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x695))) (not ((_ is x550) (x1468 x695)))))
(assert (= (x1294 x248) (ite (= x248 x158) x295 (x133 x248))))
(assert (= x1220 (x1324 (x1468 x1220))))
(assert (= (ite (= x498 x371) x749 (x139 x498)) (x133 x498)))
(assert (x1089 x1506))
(assert (= (=> (and (= (< 0 x646) x1028) (= (x191 (- x406 1)) x646)) (and (=> x1028 x233) (=> (not x1028) x1031))) x601))
(assert (x1089 x1206))
(assert (not x1473))
(assert (x1089 x1137))
(assert (x4 x1085))
(assert (x1089 x12))
(assert (= x1459 x706))
(assert (x1089 x344))
(assert (x1089 x112))
(assert (x1089 x1293))
(assert (= (x1324 (x1468 x1130)) x1130))
(assert (= x804 (x1324 (x1468 x804))))
(assert (= (x974 x519) (ite (and x392 x939) (x133 x519) (ite (and x1301 (not x392) x939 (not x902)) (x1294 x519) (ite (and (not x392) (not x1301) x939) (x133 x519) (x625 x519))))))
(assert (x1089 x206))
(assert (= (x1324 (x1468 x506)) x506))
(assert (= (x849 x1026) (ite (= x1026 x1469) x106 (x363 x1026))))
(assert (x4 x609))
(assert (x1089 x312))
(assert (x1089 x1520))
(assert (= (x1195 x633) (ite (and (not x940) x292 x748 x495 x621 x1462) (x1044 x633) (ite (and x621 (not x1462) x495 x748 x292) (x1062 x633) (ite (and x748 x621 x292 (not x495)) (x990 x633) (ite (and (not x292) x748 x621) (x992 x633) (x592 x633)))))))
(assert (= (ite (and x272 x1403) (x277 x1229) (ite (and x415 x272 (not x1403)) (x277 x1229) (x1353 x1229))) (x448 x1229)))
(assert (x1089 x610))
(assert (= (x1324 (x1468 x38)) x38))
(assert (x1089 x858))
(assert (x1089 x442))
(assert (=> (>= 10000 x1384) (= (x1468 x1384) (x550 x1384))))
(assert (x4 x1415))
(assert (x1089 x691))
(assert (x4 x642))
(assert (=> (<= x862 10000) (= (x1468 x862) (x550 x862))))
(assert (x1089 x991))
(assert (= 0 (x865 160)))
(assert (x1089 x1415))
(assert (x1089 x1128))
(assert (x1089 x1446))
(assert (x1089 x1318))
(assert (= (=> (and (= (x189 (x1468 x652) (x550 6) 0) x118) (not (< x5 x652)) (= x732 (x189 (x1468 x359) x118 0)) (>= x179 0) (= x359 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= x179 (x199 x732)) (>= x5 0) (<= x179 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5) (= x1200 (= x179 0))) (and (=> (and (= x838 (x189 (x1468 x499) x774 0)) (<= 0 x451) (<= x451 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x499) (= (x1221 x838) x451) (= x595 0) (= x1519 x451) (= x774 (x189 (x1468 x652) (x550 10) 0)) (not x1200)) x699) (=> x1200 x753))) x1346))
(assert (= x1102 (and x286 x318)))
(assert (= x1281 (=> (and (not (> 2690754053 x866)) (= x866 2798343961) (not (= x866 2764855426)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1188) (= x1391 (x189 (x1468 x1211) (x550 5) 0)) (>= x1188 0) (not (= x866 2743102681)) (= x1188 (x1426 x196)) (< x866 2960351575) (= x1188 x535) (= x196 (x189 (x1468 x559) x1391 0)) (= (x244 (x1468 274184521717934524641157099916833587206)) x1147) (not (= 2690754053 x866)) (> x1147 0) (<= x559 1461501637330902918203684832716283019655932542975) (not (> 2293535753 x866))) (=> (and (= x245 x323) (= x163 x582) (= x535 x464)) x1327))))
(assert (x1089 x608))
(assert (= x455 (=> (and (or (and x996 (= x248 96) (= x64 x782)) (and (= x248 x64) (= x1105 (x1119 (+ 63 x751))) (not x996) (= x782 x1439) (= (x1006 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1105) x908) (= (x1119 (+ x257 96)) x1502) (= (x1119 (+ x64 x908)) x1439))) (= x467 (< 0 x1285)) (or (not x467) (and (= (x201 x1026) x1164) (= x243 x1164) x467 (= (x1119 (+ 32 x248)) x1026) (= x1041 (= 0 x1164)) (= (x201 x248) x442) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x442) (and (> 32 x442) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x442) true)))) (> x1164 0) (= (ite x1268 1 0) x243) (= (not x1041) x1268))) x546 (= (x1491 (x1468 x476)) x111) (= (= 0 x751) x996) (not (= x1390 0)) (= (x296 (x1468 274184521717934524641157099916833587206)) x691) (= x546 (< (x296 (x1468 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x201 x248) x1285)) x1196)))
(assert (= (x133 x1469) (ite (= x371 x1469) x749 (x139 x1469))))
(assert (= (x1294 x1372) (ite (= x158 x1372) x295 (x133 x1372))))
(assert (x1089 x921))
(assert (= 0 (x865 x898)))
(assert (=> (<= x1191 10000) (= (x550 x1191) (x1468 x1191))))
(assert (= (ite (= x698 x1177) x1463 (x594 x1177)) (x348 x1177)))
(assert (x1089 x636))
(assert (x1089 x1358))
(assert (x1089 x1366))
(assert (= (x865 x158) 0))
(assert (x693 x743 x304))
(assert (=> (>= 10000 x1151) (= (x550 x1151) (x1468 x1151))))
(assert (= (x594 x1469) (ite (= x1469 x422) x1023 (x958 x1469))))
(assert (x1089 x79))
(assert (x1089 x1168))
(assert (x1089 x1250))
(assert (= x635 x842))
(assert (=> (<= x1059 10000) (= (x1468 x1059) (x550 x1059))))
(assert (=> (>= 10000 x826) (= (x550 x826) (x1468 x826))))
(assert (x1145 1461501637330902918203684832716283019655932542975))
(assert (x1089 x1105))
(assert (= x152 (x1324 (x1468 x152))))
(assert (= x1412 (x1324 (x1468 x1412))))
(assert (x1089 x1402))
(assert (x1089 x1343))
(assert (= (and x102 (not x1378)) x787))
(assert (= (x1324 (x550 2512682246)) 2512682246))
(assert (= (x992 x1026) (ite (= x1026 x1431) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x1026))))
(assert (= (x849 x1372) (ite (= x1469 x1372) x106 (x363 x1372))))
(assert (x1089 x960))
(assert (x1043 x271 x1320))
(assert (=> (>= 10000 x1449) (= (x1468 x1449) (x550 x1449))))
(assert (x4 x26))
(assert (= 0 (x865 x548)))
(assert (x4 x138))
(assert (x1089 x497))
(assert (x1089 x827))
(assert (= (x974 x568) (ite (and x939 x392) (x133 x568) (ite (and (not x392) x1301 x939 (not x902)) (x1294 x568) (ite (and x939 (not x1301) (not x392)) (x133 x568) (x625 x568))))))
(assert (= x69 x1263))
(assert (= (x982 x698) (ite (and x429 x69) (x849 x698) (x226 x698))))
(assert (= x1384 (x1324 (x1468 x1384))))
(assert (= x125 (or (and x1079 x789) (and (not x325) x560) (and x181 (not x660)))))
(assert (= (x1324 (x550 2835717307)) 2835717307))
(assert (x1089 x364))
(assert (= (x982 x1375) (ite (and x69 x429) (x849 x1375) (x226 x1375))))
(assert (= (ite (= x158 x548) x295 (x133 x548)) (x1294 x548)))
(assert (= (and x419 x154) x286))
(assert (x1089 x1502))
(assert (= (x1221 x1283) (ite (and x629 x939) (x1009 x1283) (x1255 x1283))))
(assert (= (ite (and x1403 x272) (x1175 x1322) (ite (and x272 (not x1403) x415) (x689 x1322) (x936 x1322))) (x1509 x1322)))
(assert (x1089 x1))
(assert (x1145 x839))
(assert (x1145 x271))
(assert (x1089 x1191))
(assert (= (x1324 (x1468 x183)) x183))
(assert (= (ite (= x1431 x395) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x395)) (x992 x395)))
(assert (= (ite (= x401 x158) x295 (x133 x401)) (x1294 x401)))
(assert (x4 x877))
(assert (x4 x848))
(assert (x1089 x1112))
(assert (= (x1324 (x1468 x1482)) x1482))
(assert (= x1447 (and x621 x748)))
(assert (=> (>= 10000 x280) (= (x550 x280) (x1468 x280))))
(assert (=> (>= 10000 x1165) (= (x1468 x1165) (x550 x1165))))
(assert (x1089 x642))
(assert (x4 x559))
(assert (x4 x153))
(assert (= (x1294 x633) (ite (= x158 x633) x295 (x133 x633))))
(assert (= (x216 x1177) (ite (= x1318 x1177) x2 (x1176 x1177))))
(assert (x1089 x252))
(assert (= (ite (= x395 x158) x295 (x133 x395)) (x1294 x395)))
(assert (= (x1468 2835717307) (x550 2835717307)))
(assert (= (ite (= x668 x586) x349 (x990 x586)) (x1062 x586)))
(assert (x1089 x1372))
(assert (= x566 (or (and (not x705) x787) (and (not x318) x286) (and x263 x1102))))
(assert (x1089 x1035))
(assert (x1089 x1203))
(assert (= x1243 x842))
(assert (x1089 x1085))
(assert (x1089 x603))
(assert (x1089 x1147))
(assert (x1089 x1455))
(assert (= x246 x98))
(assert (= (x1195 x552) (ite (and x621 x1462 x748 x292 x495 (not x940)) (x1044 x552) (ite (and (not x1462) x621 x748 x495 x292) (x1062 x552) (ite (and (not x495) x292 x748 x621) (x990 x552) (ite (and x621 x748 (not x292)) (x992 x552) (x592 x552)))))))
(assert (=> (>= 10000 x944) (= (x550 x944) (x1468 x944))))
(assert (x4 x183))
(assert (= x138 (x1324 (x1468 x138))))
(assert (x1089 x1326))
(assert (= (x199 x709) (ite (and x939 x632) (x1508 x709) (x604 x709))))
(assert (= x61 (=> (= (< 0 x652) x705) (and (=> x705 x293) (=> (not x705) x954)))))
(assert (= x551 (x1324 (x1468 x551))))
(assert (x4 x274))
(assert (= (ite (= x668 x498) x349 (x990 x498)) (x1062 x498)))
(assert (x4 x79))
(assert (x1089 x1120))
(assert (=> (<= x640 10000) (= (x550 x640) (x1468 x640))))
(assert (x1089 x138))
(assert (x1089 x895))
(assert (= x877 (x1324 (x1468 x877))))
(assert (= x3 (x1324 (x1468 x3))))
(assert (x1089 x1076))
(assert (x1089 x824))
(assert (x1089 x1303))
(assert (= (x1356 x1347) (ite (= x1347 x1017) 0 (x574 x1347))))
(assert (= x1236 (=> (and (= x378 (x189 (x1468 x1435) x329 0)) (= x1267 (= 0 x610)) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1435) (<= 0 x610) (= (x189 (x1468 x406) (x550 6) 0) x329) (= (x778 x378) x610) (<= x610 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (= x978 x406) (not x1267)) x1317) (=> x1267 x1133)))))
(assert (x1089 x422))
(assert (x1089 x1308))
(assert (x1089 x50))
(assert (x4 x582))
(assert (=> (>= 10000 x1307) (= (x1468 x1307) (x550 x1307))))
(assert (= (x974 x552) (ite (and x392 x939) (x133 x552) (ite (and x939 (not x902) (not x392) x1301) (x1294 x552) (ite (and (not x1301) x939 (not x392)) (x133 x552) (x625 x552))))))
(assert (x1089 x688))
(assert (x1089 x775))
(assert (= (ite (= x668 x552) x349 (x990 x552)) (x1062 x552)))
(assert (= (x1176 x1375) (ite (= x605 x1375) x356 (x73 x1375))))
(assert (x1089 x589))
(assert (x1089 x8))
(assert (x4 x929))
(assert (= x1435 (x1324 (x1468 x1435))))
(assert (= (ite (and x69 x429) (x849 x1177) (x226 x1177)) (x982 x1177)))
(assert (x4 x1149))
(assert (x1089 x96))
(assert (= x771 (x1324 (x1468 x771))))
(assert (x1089 x1026))
(assert (x1089 x885))
(assert (= (x1324 (x1468 x110)) x110))
(assert (= (x1324 (x1468 x30)) x30))
(assert (x1089 x441))
(assert (x1089 x633))
(assert (= x62 (x1324 (x1468 x62))))
(assert (=> (>= 10000 x763) (= (x550 x763) (x1468 x763))))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x24) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x900) (>= x24 0) (= x1465 (x189 (x1468 x862) (x550 6) 0)) (= x84 (x189 (x1468 x900) x1465 0)) (= (x778 x84) x24) (= (= 0 x24) x1079)) (and (=> (and (not x1079) (= x978 x862)) x1317) (=> (and x1079 (= (x191 (- x862 1)) x1048) (= (> x1048 0) x1015) (not x1015)) x97))) x1381))
(assert (x1089 x294))
(assert (x1089 x1286))
(assert (= (and x683 x1246) x414))
(assert (x4 x1130))
(assert (x1089 x347))
(assert (= (ite (= x1177 x924) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x711 x1177)) (x73 x1177)))
(assert (x1089 x784))
(assert (x1089 x47))
(assert (=> (<= x1250 10000) (= (x1468 x1250) (x550 x1250))))
(assert (= (x1062 x1071) (ite (= x1071 x668) x349 (x990 x1071))))
(assert (x1089 x1254))
(assert (x1089 x143))
(assert (= (=> (and (= (x471 (x1468 x39)) x1277) x1504 x1480 (= x1479 (x471 (x1468 274184521717934524641157099916833587206))) x1365 (= x1383 (x471 (x1468 274184521717934524641157099916833587206))) (= (= x39 274184521717934524641157099916833587218) x60) (= (< (x1183 (x1468 x39)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1504) (= x1365 (>= x1479 0)) (= (x1183 (x1468 x39)) x1160) (= x470 x1470) (= x1480 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1277))) (and (=> (not x60) x386) (=> (and (= x1215 (x1006 1461501637330902918203684832716283019655932542975 x892)) (not (= x777 2514000705)) (= x1047 (x189 (x1468 x1215) (x550 1) 0)) (= 2835717307 x777) (= (or (and (< x1433 64) (= true (<= x1433 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1433 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x105) (= x364 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x557 x1441) (= x1433 (x191 (- x1421 4))) (= x892 x299) (= x1419 (x189 (x1468 274184521717934524641157099916833587206) (x550 1) 0)) (= 32 x1064) (= (+ x833 x1441) x1053) (= x962 x213) (not x1189) (= x312 (x85 x385)) x60 (not (> 4 x1421)) (= (> x213 x312) x607) (not x105) (= 274184521717934524641157099916833587206 x1) (= x213 x1483) (= x1492 (x1006 1461501637330902918203684832716283019655932542975 x892)) (= x49 274184521717934524641157099916833587206) (= x1421 68) (not x607) (= (x244 (x1468 274184521717934524641157099916833587218)) x545) (= x1421 x470) (= (>= (+ x962 x557) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x818) (< (+ x962 x557) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x557) (= x962 x833) (not (= x777 826074471)) (<= x312 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x385 (x189 (x1468 274184521717934524641157099916833587206) (x550 1) 0)) (not (= 649617121 x777)) (>= 1461501637330902918203684832716283019655932542975 x892) (= x557 (x964 x1047)) (not x818) (= 1 x786) (< 0 x545) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x557) (= (> x962 x312) x1189) (<= 0 x312) (not (= 1889567281 x777)) (not (< x777 649617121)) (= (x191 (- x312 x213)) x1134) (= x75 x1428)) x1266))) x1014))
(assert (= x1210 (=> (and (= x119 x624) (= x907 x44) (= (>= x907 x119) x264) (= x1306 x316)) (and (=> (and (= x1181 x1157) (= (<= x500 x1157) x483) (= x388 x500)) (and x483 (=> (and (= x464 x1074) (= x1150 (<= x1074 x671)) (= x172 x671)) (and x1150 (=> (and (= x781 x1306) (= x339 x104) (= (<= x104 x781) x155)) (and (=> (and (= x1226 false) (= (<= x1185 x1296) x1039) (= x649 x1296) (= x1379 87118632) (= x13 true) (= x914 87118632) (= x564 x1185)) x1039) x155)))))) x264))))
(assert (x1089 x370))
(assert (= (ite (= x1177 x328) x370 (x992 x1177)) (x990 x1177)))
(assert (= (x1044 x519) (ite (= x1076 x519) x536 (x1062 x519))))
(assert (x1089 x773))
(assert (= (ite (= x924 x633) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x711 x633)) (x73 x633)))
(assert (= 2764855426 (x1324 (x550 2764855426))))
(assert (= (ite (and x1471 x1022) (x448 x1060) (ite (and x303 x1263) (x277 x1060) (x1398 x1060))) (x521 x1060)))
(assert (= (ite (and x632 x939) (x1426 x383) (x796 x383)) (x1037 x383)))
(assert (x1089 x1313))
(assert (= (x133 x1388) (ite (= x371 x1388) x749 (x139 x1388))))
(assert (= (x1468 2798343961) (x550 2798343961)))
(assert (= (x1294 x1177) (ite (= x158 x1177) x295 (x133 x1177))))
(assert (x4 x1151))
(assert (= (=> (and (<= x977 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x977) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1313) (= x428 (x189 (x1468 x1309) (x550 7) 0)) (= (x189 (x1468 x1313) x428 0) x927) (= (= x977 0) x263) (= x696 (x189 (x1468 x512) x927 0)) (= (x1509 x696) x977)) (and (=> (and (= (x191 (- x1309 1)) x644) (= (< 0 x644) x203) x263 (not x203)) x954) (=> (and (= x1309 x452) (not x263)) x1273))) x255))
(assert (x1089 x1094))
(assert (x1089 x1101))
(assert (= (x974 x586) (ite (and x392 x939) (x133 x586) (ite (and x1301 (not x392) (not x902) x939) (x1294 x586) (ite (and (not x1301) (not x392) x939) (x133 x586) (x625 x586))))))
(assert (=> (>= 10000 x331) (= (x550 x331) (x1468 x331))))
(assert (= (or x1063 (and x1272 x397)) x272))
(assert (x1089 x285))
(assert (x1145 x456))
(assert (= (ite (= x548 x1469) x106 (x363 x548)) (x849 x548)))
(assert (= (x348 x395) (ite (= x698 x395) x1463 (x594 x395))))
(assert (x4 x3))
(assert (x1089 x406))
(assert (x1089 x519))
(assert (x1089 x832))
(assert (x1089 x614))
(assert (= x1364 (and x414 x720)))
(assert (x1089 x906))
(assert (= (ite (and x939 x392) (x133 x1026) (ite (and x939 x1301 (not x902) (not x392)) (x1294 x1026) (ite (and x939 (not x1301) (not x392)) (x133 x1026) (x625 x1026)))) (x974 x1026)))
(assert (x1089 x541))
(assert (x1145 x344))
(assert (= x137 x1222))
(assert (= (x1468 2293535753) (x550 2293535753)))
(assert (= (and x741 x1267) x560))
(assert (=> (>= 10000 x937) (= (x1468 x937) (x550 x937))))
(assert (x1089 x1188))
(assert (x1089 x944))
(assert (x1089 x1388))
(assert (x1089 x1339))
(assert (x1089 x482))
(assert (= (x923 x912) (ite (and x42 x272) (x1218 x912) (x576 x912))))
(assert (= 1000000000000000000 (x1324 (x550 1000000000000000000))))
(assert (= (ite (and (not x656) x621 x748) (x1195 x552) (x234 x552)) (x28 x552)))
(assert (x1089 x900))
(assert (x1089 x581))
(assert (x1089 x1214))
(assert (= (x1324 (x1468 x1415)) x1415))
(assert (= (x550 1000000000000000000) (x1468 1000000000000000000)))
(assert (x1089 x1178))
(assert (= (ite (= x1071 x328) x370 (x992 x1071)) (x990 x1071)))
(assert (=> (<= x1312 10000) (= (x550 x1312) (x1468 x1312))))
(assert (= (x1468 826074471) (x550 826074471)))
(assert (= (ite (= x633 x422) x1023 (x958 x633)) (x594 x633)))
(assert (x1089 x1439))
(assert (x1089 x1050))
(assert (= (x348 x1372) (ite (= x698 x1372) x1463 (x594 x1372))))
(assert (x1089 x651))
(assert (= x437 (x1324 (x1468 x437))))
(assert (= x153 (x1324 (x1468 x153))))
(assert (x1089 x1227))
(assert (x1089 x1482))
(assert (x1089 x790))
(assert (= x911 (x1324 (x1468 x911))))
(assert (= x1059 (x1324 (x1468 x1059))))
(assert (= (x849 x1071) (ite (= x1071 x1469) x106 (x363 x1071))))
(assert (x1089 x728))
(assert (x693 x344 x488))
(assert (= (ite (and x1265 x1447) (x382 x1375) (x338 x1375)) (x746 x1375)))
(assert (x1145 x1194))
(assert (x1089 x866))
(assert (= (x1324 (x550 649617121)) 649617121))
(assert (= (x1062 x1372) (ite (= x668 x1372) x349 (x990 x1372))))
(assert (= (x849 x1375) (ite (= x1375 x1469) x106 (x363 x1375))))
(assert (= (x28 x1375) (ite (and x748 (not x656) x621) (x1195 x1375) (x234 x1375))))
(assert (x1089 x72))
(assert (=> (<= x1211 10000) (= (x1468 x1211) (x550 x1211))))
(assert (= (x992 x1071) (ite (= x1071 x1431) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x1071))))
(assert (x1089 x469))
(assert (=> (>= 10000 x1220) (= (x1468 x1220) (x550 x1220))))
(assert (= (ite (= x955 x422) x1023 (x958 x955)) (x594 x955)))
(assert (=> (>= 10000 x900) (= (x550 x900) (x1468 x900))))
(assert (x1089 x868))
(assert (x4 x830))
(assert (x4 x458))
(assert (x1089 x1007))
(assert (= (x1324 (x597 x905 1)) (+ (x1324 x905) 1)))
(assert (= (ite (= x422 x1026) x1023 (x958 x1026)) (x594 x1026)))
(assert (= (x550 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x1468 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x1089 x1027))
(assert (x1089 x20))
(assert (= (x746 x519) (ite (and x1265 x1447) (x382 x519) (x338 x519))))
(assert (x1089 x770))
(assert (= (=> (and (= x241 (x191 (- x652 1))) (= x1000 (< 0 x241))) (and (=> x1000 x1291) (=> (not x1000) x1058))) x1056))
(assert (x1089 x952))
(assert (x1089 x626))
(assert (x1089 x1430))
(assert (x1089 x914))
(assert (=> (>= 10000 x551) (= (x550 x551) (x1468 x551))))
(assert (x4 x718))
(assert (x1089 x56))
(assert (x1089 x449))
(assert (x1089 x668))
(assert (x1089 x1096))
(assert (x1089 x321))
(assert (= x1165 (x1324 (x1468 x1165))))
(assert (= (x348 x1071) (ite (= x698 x1071) x1463 (x594 x1071))))
(assert (= x98 x354))
(assert (x1089 x38))
(assert (= x788 x967))
(assert (= (x992 x1469) (ite (= x1431 x1469) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x1469))))
(assert (= (x1468 2061678023) (x550 2061678023)))
(assert (x1089 x615))
(assert (x4 x608))
(assert (= (x594 x498) (ite (= x422 x498) x1023 (x958 x498))))
(assert (=> (>= 10000 x16) (= (x1468 x16) (x550 x16))))
(assert (x1089 x1067))
(assert (= (x1324 (x550 2061678023)) 2061678023))
(assert (= (ite (and x1265 x1447) (x382 x248) (x338 x248)) (x746 x248)))
(assert (= (x1195 x1071) (ite (and x1462 x621 x748 x495 x292 (not x940)) (x1044 x1071) (ite (and x621 (not x1462) x748 x495 x292) (x1062 x1071) (ite (and (not x495) x748 x621 x292) (x990 x1071) (ite (and (not x292) x621 x748) (x992 x1071) (x592 x1071)))))))
(assert (x1089 x366))
(assert (= (ite (= x498 x1076) x536 (x1062 x498)) (x1044 x498)))
(assert (x1089 x1519))
(assert (x1089 x339))
(assert (x1089 x1160))
(assert (= (x348 x314) (ite (= x314 x698) x1463 (x594 x314))))
(assert (=> (<= x103 10000) (= (x550 x103) (x1468 x103))))
(assert (x1089 x475))
(assert (x4 x868))
(assert (x1089 x1098))
(assert (x1089 x103))
(assert (= (x1324 (x550 69947311)) 69947311))
(assert (x1089 x618))
(assert (=> (<= x877 10000) (= (x550 x877) (x1468 x877))))
(assert (= x1354 (=> (and (not (= x1446 468353030)) (<= x1303 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x291) (>= 1461501637330902918203684832716283019655932542975 x447) (= x1019 (x189 (x1468 x447) x752 0)) (= (x1205 x1019) x1303) (< x1446 2293535753) (= x1303 x1135) (>= x1303 0) (= (x189 (x1468 x1253) (x550 7) 0) x394) (= 759532456 x1446) (= (x189 (x1468 x1328) x394 0) x752) (<= x1328 1461501637330902918203684832716283019655932542975) (< x1446 911411945) (not (< x1446 468353030)) (= x291 (x244 (x1468 274184521717934524641157099916833587206))) (not (= x1446 635128645))) (=> (and (= x1135 x388) (= x1307 x307) (= x163 x790) (= x237 x245)) x446))))
(assert (= x1023 (x594 x422)))
(assert (= (ite (= x605 x1071) x356 (x73 x1071)) (x1176 x1071)))
(assert (= (ite (= x1388 x668) x349 (x990 x1388)) (x1062 x1388)))
(assert (x1089 x238))
(assert (x1089 x930))
(assert (x4 x447))
(assert (= (=> (= x114 (> x106 1)) (and (=> (not x114) x659) (=> (and (or (and (= x492 (x1119 (+ x772 x1470))) x322) (not x322)) (> x106 1) (= x86 (x191 (- x537 x782))) (or (and (not x1087) (= x319 0)) (and (= x605 x772) (= x356 (x73 x519)) (or (and x258 (= (x1119 (+ 64 x782)) x1071) (= (> x1470 64) x697) (= x2 (x1176 x1071)) (or (and (not x697) (= 64 x319)) (and (or (and (not x547) (= x319 96)) (and (= 128 x319) (not x504) (= (< 128 x1470) x504) (= x498 (x1119 (+ x782 128))) x547 (= x1497 (x1119 (+ x537 160))) (= x1051 (x766 x498)))) (= (x216 x1177) x1025) (= x615 (x1119 (+ x537 128))) x697 (= x1177 (x1119 (+ x782 96))) (= (< 96 x1470) x547))) (= (x1119 (+ x537 96)) x1318)) (and (= x319 32) (not x258))) (= x519 x552) (= (< 32 x1470) x258) x1087)) (= (x1119 (+ x259 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x1425) (= x885 (x1119 (+ x206 64))) x114 (= (x1119 (+ x1417 96)) x924) (= (x298 x552) x271) (= (x244 (x1468 x39)) x827) (= x1035 0) (= (x1006 26959946667150639794667015087019630673637144422540572481103610249215 x271) x259) (= x1483 (x201 x586)) (= (x1119 (+ 128 x1417)) x772) (<= x39 1461501637330902918203684832716283019655932542975) (= (x1119 (+ x782 36)) x1417) (= x586 (x1119 (+ x1290 192))) (= (x191 (- x86 32)) x222) (= x715 (< 0 x827)) (< 1 x779) (= (x201 x1469) x779) (= x1087 (> x1470 0)) (= (> x319 x1470) x322) (= (x1119 (+ 68 x782)) x1234) (= (x267 x885) x39) (= (x1119 (+ x782 32)) x552) x715 (= (x73 x782) x1470) (= (x1119 (+ x782 100)) x537)) x1014))) x1196))
(assert (= (and x758 x1156) x462))
(assert (x1089 x704))
(assert (x1089 x359))
(assert (= (x594 x248) (ite (= x422 x248) x1023 (x958 x248))))
(assert (= (x133 x1375) (ite (= x371 x1375) x749 (x139 x1375))))
(assert (x1089 x1258))
(assert (= x1332 (or x566 x1046)))
(assert (x1089 x1510))
(assert (= (x550 759532456) (x1468 759532456)))
(assert (x1089 x533))
(assert (x1089 x922))
(assert (=> (>= 10000 x784) (= (x1468 x784) (x550 x784))))
(assert (x4 x937))
(assert (x1089 x1110))
(assert (x1089 x104))
(assert (x1089 x1157))
(assert (=> (>= 10000 x62) (= (x550 x62) (x1468 x62))))
(assert (= (x550 1461501637330902918203684832716283019655932542975) (x1468 1461501637330902918203684832716283019655932542975)))
(assert (x1089 x559))
(assert (= (x974 x1372) (ite (and x939 x392) (x133 x1372) (ite (and x1301 (not x392) x939 (not x902)) (x1294 x1372) (ite (and x939 (not x1301) (not x392)) (x133 x1372) (x625 x1372))))))
(assert (x1089 x433))
(assert (= (ite (= x668 x633) x349 (x990 x633)) (x1062 x633)))
(assert (= (x1195 x586) (ite (and (not x940) x1462 x748 x292 x495 x621) (x1044 x586) (ite (and (not x1462) x495 x292 x748 x621) (x1062 x586) (ite (and (not x495) x621 x292 x748) (x990 x586) (ite (and x748 x621 (not x292)) (x992 x586) (x592 x586)))))))
(assert (x1089 x901))
(assert (x4 x30))
(assert (= x94 (=> (and (not (> 1968616202 x77)) (not (= 1986467848 x77)) (>= x1067 0) (not (= x77 1968616202)) (= 2258409472 x77) (not (> 911411945 x77)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1067) (= x17 (x244 (x1468 274184521717934524641157099916833587206))) (> 2293535753 x77) (not (= 2211524764 x77)) (= x214 (x189 (x1468 x817) (x550 6) 0)) (< 0 x17) (not (= x77 2061678023)) (= (x1193 x1325) x1067) (= x1067 x1370) (<= x1360 1461501637330902918203684832716283019655932542975) (= (x189 (x1468 x1360) x214 0) x1325)) (=> (and (= x245 x1424) (= x163 x183) (= x44 x1370)) x975))))
(assert (= x640 (x1324 (x1468 x640))))
(assert (x1089 x1074))
(assert (= x1058 (=> (= x1482 0) x727)))
(assert (x1089 x64))
(assert (= (x1324 (x550 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (= (and x1471 (not x1022)) x102))
(assert (x1089 x962))
(assert (x1089 x375))
(assert (x1089 x1399))
(assert (x4 x20))
(assert (= (x1324 (x1468 x432)) x432))
(assert (= (ite (= x328 x248) x370 (x992 x248)) (x990 x248)))
(assert (= (x1294 x898) (ite (= x158 x898) x295 (x133 x898))))
(assert (= x1128 (x1324 (x1468 x1128))))
(assert (= (and x260 (not x756)) x407))
(assert (= (ite (= x1026 x668) x349 (x990 x1026)) (x1062 x1026)))
(assert (= (x865 x1177) 0))
(assert (= x1328 (x1324 (x1468 x1328))))
(assert (= (ite (= x1469 x158) x106 (x363 x158)) (x849 x158)))
(assert (x4 x1395))
(assert (= (x1324 (x1468 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (= (ite (= x1372 x328) x370 (x992 x1372)) (x990 x1372)))
(assert (= (x1324 (x1468 x953)) x953))
(assert (x1089 x1135))
(assert (= x167 (=> (and (= x318 (> x1309 0)) (= (x191 (- x652 1)) x1309)) (and (=> x318 x255) (=> (not x318) x954)))))
(assert (= (ite (= x395 x422) x1023 (x958 x395)) (x594 x395)))
(assert (x1089 x552))
(assert (=> (<= x642 10000) (= (x1468 x642) (x550 x642))))
(assert (= 274184521717934524641157099916833587214 (x1324 (x1468 274184521717934524641157099916833587214))))
(assert (= (x982 x1026) (ite (and x69 x429) (x849 x1026) (x226 x1026))))
(assert (= 2258409472 (x1324 (x550 2258409472))))
(assert (x1089 x1487))
(assert (=> (>= 10000 x3) (= (x1468 x3) (x550 x3))))
(assert (x1089 x583))
(assert (x4 x506))
(assert (x1089 x854))
(assert (x1089 x35))
(assert (= (=> (and (or (and (= x1168 x638) (= x750 (x189 (x1468 x406) (x550 7) 0)) x1403 (= x1474 (x189 (x1468 x1191) x750 0)) (= (x189 (x1468 x512) x1474 0) x961) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1191)) (and (= (x1348 x1276) x1466) (= x905 (x189 (x1468 x406) (x550 1) 0)) (= x1276 (x597 x905 1)) (<= 0 x694) (= x694 (x1205 x266)) (not x1403) (<= 0 x1466) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1466) (= (x189 (x1468 x1151) x1129 0) x807) (= x415 (= x384 0)) (= (x189 (x1468 x406) (x550 7) 0) x1129) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x12) (= x1187 (> x1136 x694)) (= x1136 (x1161 x1363)) (= x1151 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= (x1119 (+ x638 64)) x1110) (= x1363 (x1119 (+ x638 32))) (or (and (= (x189 (x1468 x512) x1251 0) x565) x415 (= x1251 (x189 (x1468 x718) x846 0)) (= x1168 x1110) (= x718 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= x846 (x189 (x1468 x406) (x550 7) 0))) (and (= x1128 (x1006 1461501637330902918203684832716283019655932542975 x959)) (not x415) (= (* x252 x384) x828) (= (x189 (x1468 x512) x1122 0) x904) (= x1298 (x189 (x1468 x406) (x550 7) 0)) (= x828 x688) (= x1154 (x189 (x1468 x406) (x550 3) 0)) (= x1168 x1110) (= (x189 (x1468 x1128) x1154 0) x1305) (= x1122 (x189 (x1468 x3) x1298 0)) (= x326 (x189 (x1468 x512) x1305 0)) (= x3 (x1006 1461501637330902918203684832716283019655932542975 x959)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x384 x252)))) (= (x189 (x1468 x512) x807 0) x266) (= x12 (x1078 x905)) (<= x694 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (not x1187) (= x384 0)) (and (= (= 0 x694) x468) (or (and x468 (= x769 (x191 (- x122 x1350))) (not (< x122 x1350)) (= (x1161 x638) x1350) (= x769 x384)) (and (not x468) (not (< x122 x694)) (= x541 (ite (< x1225 604800) x1225 604800)) (= 604800 x1206) (= x541 x384) (= x1225 (x191 (- x122 x694))))) (= x895 (x1161 x1363)) (or (and (= x122 x285) (not x1259)) (and (= x51 x122) x1259 (= x51 (x1161 x1363)))) (= x1259 (< x895 x285)) x1187)) (<= 0 x12))) (or (and (= (x189 (x1468 x512) x211 0) x1416) (not x42) (= x998 (x189 (x1468 x406) (x550 9) 0)) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1514) (= x211 (x189 (x1468 x1514) x998 0))) x42) (= (= x436 0) x42) (= x1403 (= 0 x252))) x1467) x1021))
(assert (= 0 (x865 x568)))
(assert (= x1266 (=> (and (or (and (= x466 (x760 x633)) x1336 (> x466 0) (= x803 (ite x134 1 0)) (not (or (and (= true (<= x230 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x230)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x230))) (= x633 (x1119 (+ 32 x1375))) (= x230 (x760 x1375)) (= x134 (not x540)) (= x466 x803) (= (= x466 0) x540)) (not x1336)) (= x1336 (< 0 x35)) (or (and (= x1375 x772) (not x539) (= x76 (x1119 (+ x537 96)))) (and x539 (= 96 x1375))) (= (< (x791 (x1468 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x681) (= x1337 (x1075 (x1468 x39))) (= x539 (= 0 x1064)) (= (> x106 2) x1373) (= (x760 x1375) x35) (not x1373) (not (= x786 0)) x681) x659)))
(assert (= (x1324 (x550 142201243)) 142201243))
(assert (x1089 x955))
(assert (x1089 x1492))
(assert (=> (<= x1244 10000) (= (x550 x1244) (x1468 x1244))))
(assert (x1089 x556))
(assert (= (ite (= x1431 x552) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x552)) (x992 x552)))
(assert (= (=> (and (= (x191 (- x406 1)) x862) (= x325 (> x862 0))) (and (=> x325 x1381) (=> (not x325) x97))) x1133))
(assert (x1089 x78))
(assert (x1089 x39))
(assert (x1089 x243))
(assert (x1089 x1299))
(assert (x1089 x1055))
(assert (= (x1044 x1071) (ite (= x1071 x1076) x536 (x1062 x1071))))
(assert (x1089 x1451))
(assert (= (ite (= x698 x1469) x106 (x363 x698)) (x849 x698)))
(assert (= (ite (= x519 x1431) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x519)) (x992 x519)))
(assert (x1089 x638))
(assert (x1089 x543))
(assert (x1089 x371))
(assert (= (x133 x552) (ite (= x371 x552) x749 (x139 x552))))
(assert (x1089 x393))
(assert (x1089 x1370))
(assert (= (ite (= x1177 x668) x349 (x990 x1177)) (x1062 x1177)))
(assert (= (x1324 (x1468 x944)) x944))
(assert (= (x1324 (x1468 x336)) x336))
(assert (=> (<= x241 10000) (= (x1468 x241) (x550 x241))))
(assert (= (x28 x519) (ite (and x748 (not x656) x621) (x1195 x519) (x234 x519))))
(assert (= (ite (and x939 x632) (x1508 x253) (x604 x253)) (x199 x253)))
(assert (x1089 x1123))
(assert (x1089 x1185))
(assert (= (ite (and x392 x939) (x133 x1388) (ite (and x1301 (not x902) x939 (not x392)) (x1294 x1388) (ite (and (not x392) x939 (not x1301)) (x133 x1388) (x625 x1388)))) (x974 x1388)))
(assert (x4 x1312))
(assert (= x741 (and x660 x181)))
(assert (= (x1324 (x550 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x1324 (x1468 x1424)) x1424))
(assert (= (x1324 (x1468 x1003)) x1003))
(assert (= 0 (x865 x248)))
(assert (= x659 (=> (and (= x1360 x245) (= x817 x163)) x94)))
(assert (x577 x839 x773))
(assert (x1089 x1113))
(assert (x1089 x1390))
(assert (x1089 x1511))
(assert (= 2798343961 (x1324 (x550 2798343961))))
(assert (x1089 x71))
(assert (x1089 x1481))
(assert (x1089 x525))
(assert (x1089 x1239))
(assert (x1089 x1380))
(assert (= (x990 x552) (ite (= x328 x552) x370 (x992 x552))))
(assert (x1089 x160))
(assert (x1089 x124))
(assert (=> (>= 10000 x533) (= (x1468 x533) (x550 x533))))
(assert (x4 x921))
(assert (= (ite (and x1462 x621 x748 x292 (not x940) x495) (x1044 x1375) (ite (and x292 x495 x621 (not x1462) x748) (x1062 x1375) (ite (and (not x495) x748 x292 x621) (x990 x1375) (ite (and x621 x748 (not x292)) (x992 x1375) (x592 x1375))))) (x1195 x1375)))
(assert (= x446 (=> (and (= (x189 (x1468 x790) (x550 9) 0) x387) (< 0 x1081) (< x881 468353030) (= x1081 (x244 (x1468 274184521717934524641157099916833587206))) (< x881 2293535753) (= (x189 (x1468 x237) x387 0) x352) (>= 1461501637330902918203684832716283019655932542975 x1307) (= (x189 (x1468 x1307) x352 0) x1052) (< x881 911411945) (= x1455 x1070) (= x1455 (x1218 x1052)) (not (= 69947311 x881)) (>= 1461501637330902918203684832716283019655932542975 x237) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1455) (not (= x881 87118632)) (<= 0 x1455) (= 142201243 x881)) (=> (and (= x458 x163) (= x1070 x220) (= x307 x38) (= x245 x944)) x754))))
(assert (= (x550 274184521717934524641157099916833587206) (x1468 274184521717934524641157099916833587206)))
(assert (=> (<= x816 10000) (= (x1468 x816) (x550 x816))))
(assert (= (x1324 (x1468 x406)) x406))
(assert (= x450 (and x462 x1028)))
(assert (= (x1324 (x1468 x1148)) x1148))
(assert (= (ite (= x158 x568) x295 (x133 x568)) (x1294 x568)))
(assert (= (x1324 (x1468 x1449)) x1449))
(assert (x1089 x1460))
(assert (x1089 x663))
(assert (= (or (and x756 x260) (and x60 x1034)) x52))
(assert (x1089 x769))
(assert (= 0 (x865 224)))
(assert (=> (>= 10000 x582) (= (x550 x582) (x1468 x582))))
(assert (= 2690754053 (x1324 (x550 2690754053))))
(assert (= (x849 x395) (ite (= x1469 x395) x106 (x363 x395))))
(assert (x4 x16))
(assert (x1089 x62))
(assert (x4 x533))
(assert (x1089 x145))
(assert (x1089 x1295))
(assert (x4 x499))
(assert (= (ite (= x248 x1431) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x248)) (x992 x248)))
(assert (x1089 x1307))
(assert (x1145 x743))
(assert (= (ite (= x1375 x924) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x711 x1375)) (x73 x1375)))
(assert (= (and x560 x325) x789))
(assert (x1089 x679))
(assert (x1089 x1435))
(assert (= (=> (and (= x249 (x778 x899)) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x194) (<= x249 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x5 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x899 (x189 (x1468 x194) x1477 0)) (<= 0 x5) (= (= x249 0) x628) (not (< x5 x1481)) (= (x189 (x1468 x406) (x550 6) 0) x1477) (>= x249 0)) (and (=> (and (<= 0 x724) (= x724 (x1009 x1409)) (= x918 (x189 (x1468 x406) (x550 10) 0)) (= x886 x724) (= x110 (x1006 1461501637330902918203684832716283019655932542975 x959)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x724) (not x628) (= x1409 (x189 (x1468 x110) x918 0)) (= 0 x858)) x1316) (=> x628 x1235))) x1467))
(assert (= (=> (and (= 142201243 x871) (= x1086 (x189 (x1468 x175) x1174 0)) (> 911411945 x871) (= x1464 (x1084 x1347)) (not (= 69947311 x871)) (= (x189 (x1468 x274) (x550 9) 0) x1174) (< 0 x636) (= x123 x1464) (= (x244 (x1468 274184521717934524641157099916833587206)) x636) (< x871 468353030) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1464) (>= x1464 0) (not (= 87118632 x871)) (= x1347 (x189 (x1468 x868) x1086 0)) (<= x868 1461501637330902918203684832716283019655932542975) (<= x175 1461501637330902918203684832716283019655932542975) (< x871 2293535753)) (=> (and (= x245 x1395) (= x307 x687) (= x123 x1500) (= x163 x608)) x205)) x575))
(assert (= x749 (x133 x371)))
(assert (= (x550 604800) (x1468 604800)))
(assert (= (x865 x314) 0))
(assert (x1089 x1253))
(assert (x1089 x327))
(assert (= (x1324 (x1468 x1096)) x1096))
(assert (x1089 x241))
(assert (= (ite (= x401 x1469) x106 (x363 x401)) (x849 x401)))
(assert (= (ite (= x568 x698) x1463 (x594 x568)) (x348 x568)))
(assert (x1089 x384))
(assert (x4 x1132))
(assert (=> (>= 10000 x1313) (= (x550 x1313) (x1468 x1313))))
(assert (x1089 x1051))
(assert (x1089 x1361))
(assert (x1089 x388))
(assert (x1089 x772))
(assert (x1089 x1068))
(assert (x1089 x781))
(assert (x1089 x278))
(assert (= x754 (=> (and (>= 1461501637330902918203684832716283019655932542975 x38) (= (x244 (x1468 274184521717934524641157099916833587206)) x327) (not (= x591 2690754053)) (= (x189 (x1468 x38) x845 0) x524) (<= 0 x47) (> 2960351575 x591) (= x591 2743102681) (<= x944 1461501637330902918203684832716283019655932542975) (= x47 x1113) (not (> 2690754053 x591)) (<= x47 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x189 (x1468 x944) x981 0) x845) (> x327 0) (= x47 (x277 x524)) (= (x189 (x1468 x458) (x550 3) 0) x981) (not (> 2293535753 x591))) (=> (and (= x1113 x679) (= x1295 x245) (= x784 x163) (= x124 x200) (= x307 x1130)) x236))))
(assert (= (x1468 2690754053) (x550 2690754053)))
(assert (= 604800 (x1324 (x550 604800))))
(assert (x1089 x1405))
(assert (= x967 x664))
(assert (= (ite (= x1375 x1076) x536 (x1062 x1375)) (x1044 x1375)))
(assert (= (=> (and (or (and (= x252 0) x1275 (= 0 x436)) (and (not x1275) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1101) (<= x824 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x841 (x189 (x1468 x512) x1224 0)) (= x1224 (x189 (x1468 x1101) x109 0)) (= (x1218 x841) x824) (= x109 (x189 (x1468 x1444) (x550 9) 0)) (= x824 x252) (>= x824 0) (= 1 x436))) (= x1275 (= x1444 0))) x1021) x409))
(assert (= (=> (= 0 x170) x783) x954))
(assert (x4 x817))
(assert (x1145 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1089 x751))
(assert (= (x1324 (x1468 x274)) x274))
(assert (= x817 (x1324 (x1468 x817))))
(assert (= (and x794 x324) x758))
(assert (= (x1221 x353) (ite (and x629 x939) (x1009 x353) (x1255 x353))))
(assert (x1089 x512))
(assert (=> (>= 10000 x1228) (= (x1468 x1228) (x550 x1228))))
(assert (= (x982 x568) (ite (and x69 x429) (x849 x568) (x226 x568))))
(assert (x1089 x498))
(assert (x1089 x1136))
(assert (= (x1468 69947311) (x550 69947311)))
(assert (x1089 x1169))
(assert (=> (>= 10000 x609) (= (x1468 x609) (x550 x609))))
(assert (x1089 x130))
(assert (x1089 x942))
(assert (=> (>= 10000 x79) (= (x550 x79) (x1468 x79))))
(assert (x1089 x652))
(assert (x4 x198))
(assert (= (x133 x1026) (ite (= x371 x1026) x749 (x139 x1026))))
(assert (x1089 x1165))
(assert (x1089 x180))
(assert (x1089 x480))
(assert (= (x1324 (x550 2418364589)) 2418364589))
(assert (x1089 x44))
(assert (= (ite (and x69 x429) (x849 x1388) (x226 x1388)) (x982 x1388)))
(assert (x1145 x1227))
(assert (x1089 x1385))
(assert (= (ite (and x392 x939) (x133 x395) (ite (and x939 (not x392) (not x902) x1301) (x1294 x395) (ite (and x939 (not x1301) (not x392)) (x133 x395) (x625 x395)))) (x974 x395)))
(assert (= (x348 x898) (ite (= x898 x698) x1463 (x594 x898))))
(assert (=> (<= x512 10000) (= (x550 x512) (x1468 x512))))
(assert (x4 x331))
(assert (= (ite (= x1375 x1431) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x1375)) (x992 x1375)))
(assert (x1089 x650))
(assert (= (ite (and x429 x69) (x849 x248) (x226 x248)) (x982 x248)))
(assert (x1089 x43))
(assert (x1089 x487))
(assert (= 0 (x865 192)))
(assert (x4 x194))
(assert (=> (<= x953 10000) (= (x550 x953) (x1468 x953))))
(assert (= (x1324 (x1468 x170)) x170))
(assert (=> (<= x170 10000) (= (x1468 x170) (x550 x170))))
(assert (= (x1176 x498) (ite (= x498 x605) x356 (x73 x498))))
(assert (x1089 x49))
(assert (= x712 (x1324 (x1468 x712))))
(assert (x1089 x1032))
(assert (= (x1195 x248) (ite (and x292 x748 x1462 x495 (not x940) x621) (x1044 x248) (ite (and x748 x292 x621 (not x1462) x495) (x1062 x248) (ite (and (not x495) x621 x292 x748) (x990 x248) (ite (and x748 (not x292) x621) (x992 x248) (x592 x248)))))))
(assert (= (x990 x1469) (ite (= x1469 x328) x370 (x992 x1469))))
(assert (x4 x237))
(assert (x4 x38))
(assert (= (ite (and x272 x42) (x1218 x1347) (x576 x1347)) (x923 x1347)))
(assert (x4 x323))
(assert (x4 x1514))
(assert (x4 x1307))
(assert (x1145 x347))
(assert (= x608 (x1324 (x1468 x608))))
(assert (x1089 x1270))
(assert (= x419 (and x787 x705)))
(assert (x4 x62))
(assert (x1089 x1464))
(assert (= x1244 (x1324 (x1468 x1244))))
(assert (x1089 x1211))
(assert (x1089 x135))
(assert (= (ite (and x621 x748 (not x656)) (x1195 x1071) (x234 x1071)) (x28 x1071)))
(assert (= (x1221 x838) (ite (and x629 x939) (x1009 x838) (x1255 x838))))
(assert (= x458 (x1324 (x1468 x458))))
(assert (x4 x103))
(assert (= (x865 x1071) 0))
(assert (x4 x406))
(assert (= (x1324 (x1468 x1149)) x1149))
(assert (= (ite (= x615 x498) x1025 (x216 x498)) (x766 x498)))
(assert (= (x133 x698) (ite (= x698 x371) x749 (x139 x698))))
(assert (= x26 (x1324 (x1468 x26))))
(assert (= (x746 x1026) (ite (and x1447 x1265) (x382 x1026) (x338 x1026))))
(assert (x1089 x466))
(assert (= x70 (=> (and (>= 1461501637330902918203684832716283019655932542975 x208) (< 0 x1288) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x469) (= x1288 (x244 (x1468 274184521717934524641157099916833587206))) (= x806 (x189 (x1468 x208) x1208 0)) (= (x613 x806) x469) (= (x189 (x1468 x1132) (x550 7) 0) x9) (< x612 911411945) (= (x189 (x1468 x153) x9 0) x1208) (= x469 x567) (not (= 468353030 x612)) (>= x469 0) (= x612 759532456) (not (= x612 635128645)) (< x612 2293535753) (>= 1461501637330902918203684832716283019655932542975 x153) (not (> 468353030 x612))) (=> (and (= x274 x163) (= x1181 x567) (= x245 x175) (= x868 x307)) x575))))
(assert (x4 x1096))
(assert (=> (<= x458 10000) (= (x550 x458) (x1468 x458))))
(assert (= (x849 x519) (ite (= x1469 x519) x106 (x363 x519))))
(assert (= (x1324 (x550 37714057306076988483118529490347679105585116642029194716945419020321082336612)) 37714057306076988483118529490347679105585116642029194716945419020321082336612))
(assert (x1089 x1306))
(assert (= (x1324 (x1468 x39)) x39))
(assert (= 0 (x865 x395)))
(assert (x1089 x671))
(assert (x1089 x27))
(assert (x4 x1128))
(assert (=> (>= 10000 x476) (= (x1468 x476) (x550 x476))))
(assert (x1089 x972))
(assert (x4 x771))
(assert (x1089 x499))
(assert (x1089 x1428))
(assert (x4 x1405))
(assert (x1089 x284))
(assert (= (x1324 (x1468 x194)) x194))
(assert (x1089 x1424))
(assert (x1089 x29))
(assert (x4 x359))
(assert (x1089 x1048))
(assert (= 1889567281 (x1324 (x550 1889567281))))
(assert (x1089 x743))
(assert (x1089 x177))
(assert (x1089 x1004))
(assert (= x921 (x1324 (x1468 x921))))
(assert (x1089 x200))
(assert (x1089 x1407))
(assert (=> (<= x26 10000) (= (x550 x26) (x1468 x26))))
(assert (= (ite (= x422 x898) x1023 (x958 x898)) (x594 x898)))
(assert (x1089 x1201))
(assert (= (x982 x898) (ite (and x429 x69) (x849 x898) (x226 x898))))
(assert (= (x1195 x1177) (ite (and x292 (not x940) x748 x1462 x621 x495) (x1044 x1177) (ite (and x292 x621 (not x1462) x748 x495) (x1062 x1177) (ite (and x292 x748 (not x495) x621) (x990 x1177) (ite (and x621 x748 (not x292)) (x992 x1177) (x592 x1177)))))))
(assert (= (x1324 (x1468 x20)) x20))
(assert (x1089 x1216))
(assert (x1089 x1053))
(assert (x693 x1520 x215))
(assert (x4 x862))
(assert (x1089 x75))
(assert (=> (>= 10000 x406) (= (x1468 x406) (x550 x406))))
(assert (x1089 x548))
(assert (x1089 x545))
(assert (x1089 x1234))
(assert (=> (<= x804 10000) (= (x550 x804) (x1468 x804))))
(assert (x4 x1328))
(assert (x1089 x1312))
(assert (=> (>= 10000 x1253) (= (x1468 x1253) (x550 x1253))))
(assert (= (x1468 2743102681) (x550 2743102681)))
(assert (x1089 x763))
(assert (x4 x900))
(assert (x4 x826))
(assert (x1089 x5))
(assert (x4 x1293))
(assert (x4 x640))
(assert (x1089 x207))
(assert (x1089 x973))
(assert (x1089 x179))
(assert (x1089 x609))
(assert (= (x1195 x1026) (ite (and (not x940) x748 x495 x292 x1462 x621) (x1044 x1026) (ite (and (not x1462) x748 x495 x292 x621) (x1062 x1026) (ite (and x292 x621 x748 (not x495)) (x990 x1026) (ite (and x621 x748 (not x292)) (x992 x1026) (x592 x1026)))))))
(assert (x1089 x624))
(assert (= x1307 (x1324 (x1468 x1307))))
(assert (x1089 x149))
(assert (x1089 x1277))
(assert (= (x1324 (x550 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x4 x1412))
(assert (= 274184521717934524641157099916833587218 (x1324 (x1468 274184521717934524641157099916833587218))))
(assert (= x260 (and (not x60) x1034)))
(assert (x1089 x31))
(assert (= (ite (= x1469 x698) x1463 (x594 x1469)) (x348 x1469)))
(assert (x1089 x274))
(assert (x1089 x156))
(assert (x4 x1148))
(assert (x1089 x707))
(assert (= (x73 x1071) (ite (= x1071 x924) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x711 x1071))))
(assert (x1089 x95))
(assert (x1089 x579))
(assert (x1089 x886))
(assert (x1089 x123))
(assert (= x1327 (=> (and (= 69947311 x1361) (= (x189 (x1468 x323) x209 0) x820) (= (x1009 x820) x1137) (>= 1461501637330902918203684832716283019655932542975 x323) (< x1361 2293535753) (>= x1137 0) (< x1361 468353030) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1137) (< x1361 911411945) (= (x244 (x1468 274184521717934524641157099916833587206)) x115) (> x115 0) (= x209 (x189 (x1468 x582) (x550 10) 0)) (= x1137 x1178)) (=> (and (= x447 x307) (= 0 x132) (= 0 x1120) (= x801 (or (not x1103) x227)) (= x1328 x245) x801 (= (= 0 x481) x187) (= x227 (and x680 x187)) (= x285 x1493) (= x1214 x624) (= x464 x481) x144 (= x564 x641) (= x144 (<= x381 x1493)) (= (= x641 0) x680) (= x163 x1253) (= x1178 x564) (= x1103 (= 0 x1214)) (= 0 x1269) (= x381 x624)) x1354))))
(assert (x1089 x186))
(assert (= (x73 x519) (ite (= x519 x924) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x711 x519))))
(assert (= (x1294 x498) (ite (= x158 x498) x295 (x133 x498))))
(assert (= (=> (and (= (x189 (x1468 x771) (x550 3) 0) x596) (= x621 (> x106 0)) (= x1097 (x189 (x1468 x512) x517 0)) (= x517 (x189 (x1468 x103) x596 0)) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x103)) (and (=> (and (= x776 (< 0 x473)) (or (and (= (x1119 (+ x373 x64)) x449) x656) (not x656)) (= x456 (x1418 x898)) (= (x1119 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x168)) x973) (= x1013 (x191 (- x433 32))) (= (x40 x1469) x321) (= x476 (x267 x1299)) x621 (or (and (= x495 (> x373 32)) (= x328 x64) (= x401 x898) (= (x992 x401) x370) (or (and (not x495) (= 32 x375)) (and (= (x1119 (+ 96 x257)) x668) (= x1462 (> x373 64)) (= (x1119 (+ 64 x1216)) x395) (= (x990 x395) x349) x495 (or (and (= x940 (< 96 x373)) x1462 (= x536 (x1062 x1372)) (= (x1119 (+ x257 128)) x1076) (= (x1119 (+ x1216 96)) x1372) (or (and (not x940) (= x375 96)) (and x940 (= x1326 (x1119 (+ x257 160))) (= x54 (x1044 x1388)) (= (> x373 128) x916) (= x1388 (x1119 (+ 128 x1216))) (= 128 x375) (not x916)))) (and (= 64 x375) (not x1462))))) x292) (and (not x292) (= 0 x375))) (= x64 (x1119 (+ x1352 128))) (>= 1461501637330902918203684832716283019655932542975 x476) (= x257 (x1119 (+ x1216 100))) (= (x1119 (+ x1216 68)) x1397) (= (x40 x568) x795) (= (> x373 0) x292) (= x294 x1299) (= (x244 (x1468 x476)) x473) (= x1352 (x1119 (+ 36 x1216))) x776 (= x568 (x1119 (+ x1290 160))) (= x433 (x191 (- x257 x1216))) (< 0 x321) (= (x1119 (+ 32 x1216)) x898) (= x373 (x992 x1216)) (= x656 (> x375 x373)) (= (x1006 26959946667150639794667015087019630673637144422540572481103610249215 x456) x168) (= 0 x207) (= (x1119 (+ 96 x1352)) x1431) (< 0 x106)) x563) (=> (not x621) x659))) x460))
(assert (x1089 x1170))
(assert (x1089 x771))
(assert (x1089 x793))
(assert (x1089 x724))
(assert (=> (<= x482 10000) (= (x1468 x482) (x550 x482))))
(assert (= (ite (and x69 x429) (x849 x586) (x226 x586)) (x982 x586)))
(assert (x4 x1435))
(assert (x1089 x797))
(assert (x4 x1220))
(assert (x1089 x1159))
(assert (x1089 x600))
(assert (=> (<= x650 10000) (= (x1468 x650) (x550 x650))))
(assert (= (ite (and (not x656) x621 x748) (x1195 x498) (x234 x498)) (x28 x498)))
(assert (= (x594 x1177) (ite (= x422 x1177) x1023 (x958 x1177))))
(assert (= (x133 x586) (ite (= x371 x586) x749 (x139 x586))))
(assert (x1089 x307))
(assert (=> (<= x859 10000) (= (x550 x859) (x1468 x859))))
(assert (= (x1324 (x1468 x1312)) x1312))
(assert (=> (>= 10000 x153) (= (x550 x153) (x1468 x153))))
(assert (= 635128645 (x1324 (x550 635128645))))
(assert (= 759532456 (x1324 (x550 759532456))))
(assert (= (x348 x1388) (ite (= x1388 x698) x1463 (x594 x1388))))
(assert (x1089 x595))
(assert (= (x348 x248) (ite (= x698 x248) x1463 (x594 x248))))
(assert (=> (<= x1444 10000) (= (x1468 x1444) (x550 x1444))))
(assert (= x1440 (or x764 x1287)))
(assert (x1089 x1483))
(assert (=> (>= 10000 x1215) (= (x1468 x1215) (x550 x1215))))
(assert (= (ite (= x552 x698) x1463 (x594 x552)) (x348 x552)))
(assert (= (x982 x158) (ite (and x429 x69) (x849 x158) (x226 x158))))
(assert (= x293 (=> (and (= (x189 (x1468 x512) x502 0) x1322) (<= 0 x1396) (= (= x1396 0) x154) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1396) (= (x189 (x1468 x739) x1106 0) x502) (= x739 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= x1396 (x1509 x1322)) (= (x189 (x1468 x652) (x550 7) 0) x1106)) (and (=> (and (not x154) (= x652 x452)) x1273) (=> x154 x167)))))
(assert (x1089 x1408))
(assert (x1089 x163))
(assert (x4 x170))
(assert (x1089 x343))
(assert (= x753 (=> (= x1246 (> x652 0)) (and (=> x1246 x171) (=> (not x1246) x1058)))))
(assert (= (ite (= x422 x401) x1023 (x958 x401)) (x594 x401)))
(assert (x1089 x230))
(assert (x1089 x399))
(assert (x4 x437))
(assert (x1089 x1489))
(assert (x4 x790))
(assert (= (ite (= x401 x698) x1463 (x594 x401)) (x348 x401)))
(assert (x4 x1313))
(assert (x1089 x718))
(assert (x1089 x1493))
(assert (= (=> (= x303 (> x406 x771)) (and (=> (not x303) x1249) (=> (and x303 (= x1216 x638)) x309))) x82))
(assert (x4 x432))
(assert (=> (<= x1027 10000) (= (x550 x1027) (x1468 x1027))))
(assert (= (ite (and x1265 x1447) (x382 x1469) (x338 x1469)) (x746 x1469)))
(assert (= (x1324 (x550 1986467848)) 1986467848))
(assert (x1089 x395))
(assert (x1089 x1507))
(assert (x1089 x115))
(assert (x4 x476))
(assert (= (ite (and x69 x429) (x849 x633) (x226 x633)) (x982 x633)))
(assert (x4 x131))
(assert (x1089 x299))
(assert (= (ite (= x422 x1071) x1023 (x958 x1071)) (x594 x1071)))
(assert (= 2293535753 (x1324 (x550 2293535753))))
(assert (x1089 x1517))
(assert (x1089 x16))
(assert (x1089 x506))
(assert (= (x28 x586) (ite (and x621 x748 (not x656)) (x1195 x586) (x234 x586))))
(assert (= (ite (and x748 (not x656) x621) (x1195 x1177) (x234 x1177)) (x28 x1177)))
(assert (= (x448 x1060) (ite (and x272 x1403) (x277 x1060) (ite (and x272 (not x1403) x415) (x277 x1060) (x1353 x1060)))))
(assert (= x642 (x1324 (x1468 x642))))
(assert (x1089 x578))
(assert (x1089 x319))
(assert (x1089 x1003))
(assert (x1089 x390))
(assert (= (x1324 (x1468 x763)) x763))
(assert (x1089 x1013))
(assert (x1089 x907))
(assert (= (x1294 x1071) (ite (= x158 x1071) x295 (x133 x1071))))
(assert (= 0 (x865 x1375)))
(assert (x1089 x346))
(assert (= x181 (and x424 x628)))
(assert (x1089 x551))
(assert (x1089 x131))
(assert (x1089 x280))
(assert (x1089 x1134))
(assert (x1089 x731))
(assert (= (ite (= x422 x314) x1023 (x958 x314)) (x594 x314)))
(assert (= (x992 x1372) (ite (= x1372 x1431) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x1372))))
(assert (x693 x892 x412))
(assert (x1089 x1335))
(assert (x4 x911))
(assert (= (x550 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1468 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1089 x403))
(assert (x1089 x1130))
(assert (x577 x1194 x1227))
(assert (= (x849 x633) (ite (= x633 x1469) x106 (x363 x633))))
(assert (=> (>= 10000 x138) (= (x550 x138) (x1468 x138))))
(assert (x1089 x175))
(assert (x1089 x1490))
(assert (= 2514000705 (x1324 (x550 2514000705))))
(assert (= (x990 x498) (ite (= x328 x498) x370 (x992 x498))))
(assert (x4 x208))
(assert (x1089 x795))
(assert (= x888 (x1324 (x1468 x888))))
(assert (= (ite (= x586 x698) x1463 (x594 x586)) (x348 x586)))
(assert (= (x1324 (x1468 x1313)) x1313))
(assert (x1089 x586))
(assert (=> (>= 10000 x868) (= (x550 x868) (x1468 x868))))
(assert (x1089 x1463))
(assert (= (x231 x633) (ite (and x60 x1034) (x875 x633) (x674 x633))))
(assert (= (x849 x568) (ite (= x568 x1469) x106 (x363 x568))))
(assert (= (=> (and (> 911411945 x1516) (= x278 (x244 (x1468 274184521717934524641157099916833587206))) (= (x189 (x1468 x1027) (x550 10) 0) x1010) (= x31 x50) (< x1516 468353030) (> x278 0) (>= 1461501637330902918203684832716283019655932542975 x482) (= (x189 (x1468 x482) x1010 0) x353) (= 69947311 x1516) (<= 0 x50) (< x1516 2293535753) (= (x639 x353) x50) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x50)) (=> (and (= x1132 x163) (= x31 x649) (= x307 x208) (= x153 x245)) x70)) x37))
(assert (x1089 x1412))
(assert (x4 x1027))
(assert (= (x550 87118632) (x1468 87118632)))
(assert (= (x982 x519) (ite (and x429 x69) (x849 x519) (x226 x519))))
(assert (= (x992 x586) (ite (= x1431 x586) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x586))))
(assert (x4 x712))
(assert (x1089 x170))
(assert (x1089 x1328))
(assert (= x166 true))
(assert (= (x1294 x1388) (ite (= x1388 x158) x295 (x133 x1388))))
(assert (x1089 x271))
(assert (x4 x124))
(assert (x4 x859))
(assert (= (x1324 (x1468 x499)) x499))
(assert (x4 x482))
(assert (x1089 x1194))
(assert (x1089 x803))
(assert (x1089 x860))
(assert (x4 x1482))
(assert (= (x73 x782) (ite (= x782 x924) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x711 x782))))
(assert (= (ite (= x371 x314) x749 (x139 x314)) (x133 x314)))
(assert (x1089 x1207))
(assert (x1089 x127))
(assert (x1089 x452))
(assert (x1089 x862))
(assert (x1089 x457))
(assert (= x137 x315))
(assert (= (x990 x633) (ite (= x328 x633) x370 (x992 x633))))
(assert (= (x1324 (x1468 x237)) x237))
(assert (x1089 x1080))
(assert (x1089 x941))
(assert (x1089 x1202))
(assert (= (x528 x633) (ite (and x258 x1087 x114 x697 (not x547) x289) (x766 x633) (ite (and x289 x114 x1087 (not x697) x258) (x216 x633) (ite (and x1087 x289 x114 (not x258)) (x1176 x633) (ite (and x289 x114 (not x1087)) (x73 x633) (x365 x633)))))))
(assert (= x1293 (x1324 (x1468 x1293))))
(assert (=> (<= x911 10000) (= (x1468 x911) (x550 x911))))
(assert (x1089 x453))
(assert (= (ite (and x1447 x1265) (x382 x498) (x338 x498)) (x746 x498)))
(assert (= (x550 911411945) (x1468 911411945)))
(assert (x4 x1295))
(assert (= (ite (= x314 x1469) x106 (x363 x314)) (x849 x314)))
(assert (= (=> (= x972 x1444) x409) x653))
(assert (x4 x280))
(assert (= (x1044 x248) (ite (= x1076 x248) x536 (x1062 x248))))
(assert (= (x550 635128645) (x1468 635128645)))
(assert (=> (>= 10000 x1482) (= (x550 x1482) (x1468 x1482))))
(assert (= (ite (= x395 x371) x749 (x139 x395)) (x133 x395)))
(assert (x693 x347 x1131))
(assert (x1089 x825))
(assert (= x868 (x1324 (x1468 x868))))
(assert (x1089 x456))
(assert (= (=> (and (= (x189 (x1468 x608) (x550 3) 0) x140) (= (x189 (x1468 x687) x864 0) x1060) (= x1158 x43) (<= 0 x43) (>= 1461501637330902918203684832716283019655932542975 x687) (>= 1461501637330902918203684832716283019655932542975 x1395) (< 0 x1456) (not (< x543 2293535753)) (= (x244 (x1468 274184521717934524641157099916833587206)) x1456) (not (= x543 2690754053)) (not (> 2690754053 x543)) (<= x43 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x189 (x1468 x1395) x140 0) x864) (= x43 (x971 x1060)) (< x543 2960351575) (= 2743102681 x543)) (=> (and (= x245 x62) (= x609 x200) (= x1220 x163) (= x131 x307) (= x1158 x463)) x1330)) x205))
(assert (x4 x1424))
(assert (= x331 (x1324 (x1468 x331))))
(assert (x1089 x568))
(assert (x4 x1450))
(assert (x1089 x153))
(assert (=> (>= 10000 x1309) (= (x1468 x1309) (x550 x1309))))
(assert (= (=> (and (= x1156 (= 0 x1289)) (= (x189 (x1468 x406) (x550 7) 0) x89) (= (x1205 x1315) x1289) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1289) (= x1024 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= (x189 (x1468 x512) x116 0) x1315) (<= 0 x1289) (= (x189 (x1468 x1024) x89 0) x116)) (and (=> x1156 x601) (=> (and (= x972 x406) (not x1156)) x653))) x1126))
(assert (=> (>= 10000 x1029) (= (x1468 x1029) (x550 x1029))))
(assert (= (x1324 (x1468 x1211)) x1211))
(assert (= (x1468 26959946667150639794667015087019630673637144422540572481103610249215) (x550 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1089 x1485))
(assert (= (x550 274184521717934524641157099916833587218) (x1468 274184521717934524641157099916833587218)))
(assert (= x175 (x1324 (x1468 x175))))
(assert (x1089 x210))
(assert (= (x992 x498) (ite (= x498 x1431) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x498))))
(assert (x1089 x1384))
(assert (x1089 x749))
(assert (x1089 x1040))
(assert (= (ite (= x568 x371) x749 (x139 x568)) (x133 x568)))
(assert (x4 274184521717934524641157099916833587214))
(assert (= (x574 x1347) (ite (and x1022 x1471) (x923 x1347) (ite (and x1263 x303) (x1218 x1347) (ite (and x485 x1459) (x923 x1347) (x956 x1347))))))
(assert (= (x594 x586) (ite (= x586 x422) x1023 (x958 x586))))
(assert (= x1291 (=> (and (<= 0 x165) (= (x199 x253) x165) (= x799 (x189 (x1468 x241) (x550 6) 0)) (<= x165 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x189 (x1468 x804) x799 0) x253) (= x804 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= (= x165 0) x808)) (and (=> (and (not x716) (= x716 (< 0 x71)) x808 (= (x191 (- x241 1)) x71)) x1058) (=> (and (not x808) (= x284 x241)) x305)))))
(assert (= (=> (and (not (= x193 2512682246)) (= x1437 (x189 (x1468 x124) x223 0)) (> 2690754053 x193) (= x223 (x189 (x1468 x1130) x380 0)) (= x193 2532887486) (= x380 (x189 (x1468 x1295) x606 0)) (< x193 2960351575) (= x1507 (x863 x1437)) (<= x1295 1461501637330902918203684832716283019655932542975) (< 0 x1050) (= x1050 (x244 (x1468 274184521717934524641157099916833587206))) (not (< x193 2293535753)) (= (x189 (x1468 x784) (x550 4) 0) x606) (<= 0 x1507) (not (= 2293535753 x193)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1507) (>= 1461501637330902918203684832716283019655932542975 x124) (= x1339 x1507) (not (= 2418364589 x193)) (>= 1461501637330902918203684832716283019655932542975 x1130)) (=> (and (or (and (not x429) (= x1518 (x1119 (+ 160 x1290))) (= (mod (* 32 x106) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x180)) x429) (= x679 x960) (= x1068 (x1119 (+ 35 x1094))) (not (< 18446744073709551615 x966)) (= x1282 (x363 128)) (>= 1461501637330902918203684832716283019655932542975 x959) (= x206 (x1119 (+ x1094 4))) (>= 1461501637330902918203684832716283019655932542975 x487) (> x5 x771) (> x1207 131) (= x1290 (x1119 (+ 32 x497))) (>= 1461501637330902918203684832716283019655932542975 x1254) (= x1339 x339) (= x1094 x966) (not (< x1207 4)) (= x366 x388) (not (> x379 x1207)) (= x771 x1082) x915 (>= x1254 0) x926 (= x406 x1481) (not (= 69947311 x1489)) (<= 0 x487) (= x72 (x1119 (+ 32 x762))) (= x497 (mod (* x106 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (or x1311 (not x511)) x915) (= x1304 0) (< 0 x589) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1068) (<= x1207 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1068 x1207) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1068) (<= x1207 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (<= 0 x299) (= x926 (>= x770 x1080)) (= (< 0 x1343) x1284) (not (< 18446744073709551615 x106)) (= x771 x1258) (= x840 (= x960 0)) (= (x191 (- x1282 1)) x1343) (= (x1119 (+ x497 160)) x1469) (not (> 1 x1282)) (= x290 (= 0 x1007)) (= x313 x220) (= x941 (mod (* 32 x106) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= x5 0) (> 911411945 x1489) (= (x1119 (+ x1094 36)) x294) (= (and x290 x867) x1311) (= x299 x512) (= 128 x861) (< x1489 2293535753) (or (and x1284 (not (> x1490 1)) (or (and (= x654 (x363 128)) (< 0 x1186) (= (x1006 1461501637330902918203684832716283019655932542975 x268) x1104) (not (= x1407 x1104)) (> x654 1) (= x347 (x363 192)) (= (x363 160) x268) (= x1407 (x1006 1461501637330902918203684832716283019655932542975 x347)) (= (x363 128) x1186) (= x529 (> x1282 2)) (or (not x529) (and x529 (= (x1006 1461501637330902918203684832716283019655932542975 x743) x1011) (= x743 (x363 224)) (< 0 x404) (= (x1006 1461501637330902918203684832716283019655932542975 x1005) x438) (not (= x438 x1011)) (< 2 x343) (not x573) (= x1005 (x363 160)) (= (x363 128) x343) (= x573 (> x1282 3)) (= (x363 128) x404))) x815) (not x815)) (= x1490 (x191 (- x1282 1))) (not (< x1282 1)) (= (> x1282 1) x815)) (not x1284)) (= (x1119 (+ x72 x1469)) x638) (= x285 x770) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x883) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x883) true) (> 128 x883)))) (= x1142 x959) (= x832 0) (= (x267 x206) x106) (= x952 x1487) (= true (<= x1207 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x952 x1254) (= 87118632 x1489) (= x762 (mod (* 32 x106) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 0 x1004) (= (x191 (- x1207 4)) x883) (>= 1461501637330902918203684832716283019655932542975 x299) (= (x1119 (+ 160 x762)) x156) (< x1489 468353030) (= x1112 0) (= x511 (= 0 x366)) (= x388 x1080) (<= x5 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x406 x731) (= x1007 x339) (= (= x106 0) x429) (= x959 x1001) (= x589 (x244 (x1468 274184521717934524641157099916833587206))) (= x909 (= x313 0)) (= x68 0) (= x832 x1382) (not (> x406 x771)) (= x285 x1239) (= x867 (and x909 x840)) (= x379 (x1119 (+ x294 x941)))) x82)) x236))
(assert (x1089 x1071))
(assert (= (x348 x498) (ite (= x498 x698) x1463 (x594 x498))))
(assert (x4 x953))
(assert (= 274184521717934524641157099916833587218 (x1324 (x550 274184521717934524641157099916833587218))))
(assert (x1089 x882))
(assert (x1089 x1082))
(assert (= 2211524764 (x1324 (x550 2211524764))))
(assert (x1089 x1469))
(assert (= x1101 (x1324 (x1468 x1101))))
(assert (x1089 x1204))
(assert (x1089 x620))
(assert (x4 x551))
(assert (= (x1324 (x550 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (=> (<= x110 10000) (= (x1468 x110) (x550 x110))))
(assert (x1145 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= 0 (x865 x1026)))
(assert (x1043 x456 x725))
(assert (= (ite (= x633 x371) x749 (x139 x633)) (x133 x633)))
(assert (x4 x650))
(assert (x1089 x1425))
(assert (x1089 x291))
(assert (x1089 x767))
(assert (=> (<= x1128 10000) (= (x1468 x1128) (x550 x1128))))
(assert (= x559 (x1324 (x1468 x559))))
(assert (= x894 (and (not x869) x1279)))
(assert (= x106 (x849 x1469)))
(assert (= x609 (x1324 (x1468 x609))))
(assert (x1089 x739))
(assert (x1089 x1177))
(assert (= (x982 x1372) (ite (and x69 x429) (x849 x1372) (x226 x1372))))
(assert (=> (<= x646 10000) (= (x1468 x646) (x550 x646))))
(assert (= x1031 (=> (= 0 x1444) x409)))
(assert (x1089 x463))
(assert (x1089 x1181))
(assert (x1089 x1288))
(assert (= (x1324 (x1468 x280)) x280))
(assert (=> (>= 10000 x739) (= (x1468 x739) (x550 x739))))
(assert (x1089 x779))
(assert (=> (>= 10000 x335) (= (x1468 x335) (x550 x335))))
(assert (=> (>= 10000 x336) (= (x550 x336) (x1468 x336))))
(assert (x4 x175))
(assert (= (x1324 (x550 2960351575)) 2960351575))
(assert (=> (>= 10000 x1328) (= (x1468 x1328) (x550 x1328))))
(assert (= x523 (or x1440 (and x706 (not x1200)))))
(assert (x4 x1165))
(assert (= (x1324 (x1468 x929)) x929))
(assert (= (x550 2514000705) (x1468 2514000705)))
(assert (= (x1324 (x550 911411945)) 911411945))
(assert (x1089 x1397))
(assert (= (x1044 x1026) (ite (= x1026 x1076) x536 (x1062 x1026))))
(assert (x4 x1191))
(assert (x1089 x451))
(assert (x1089 x257))
(assert (= (x73 x498) (ite (= x498 x924) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x711 x498))))
(assert (= (=> (= x660 (< 0 x406)) (and (=> (not x660) x97) (=> x660 x1236))) x1235))
(assert (= (ite (= x1168 x371) x749 (x139 x1168)) (x133 x1168)))
(assert (= (x1324 (x1468 x335)) x335))
(assert (x1089 x977))
(assert (= (x974 x314) (ite (and x939 x392) (x133 x314) (ite (and x939 (not x902) (not x392) x1301) (x1294 x314) (ite (and x939 (not x1301) (not x392)) (x133 x314) (x625 x314))))))
(assert (x1089 x2))
(assert (=> (>= 10000 x785) (= (x1468 x785) (x550 x785))))
(assert (x4 x110))
(assert (= (x550 1986467848) (x1468 1986467848)))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x238) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x30) (= x238 (x1205 x1199)) (= (x189 (x1468 x30) x1501 0) x518) (not (> x1481 x5)) (= x397 (< 0 x238)) (<= 0 x5) (= x1501 (x189 (x1468 x406) (x550 7) 0)) (= x1199 (x189 (x1468 x512) x518 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5) (<= 0 x238)) (and (=> (not x397) x823) (=> (and (= x23 (x189 (x1468 x512) x733 0)) (= x733 (x189 (x1468 x826) x1331 0)) (= (x1218 x23) x1212) (>= x1212 0) x397 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1212) (= (x189 (x1468 x406) (x550 9) 0) x1331) (= x436 0) (= x826 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= x1212 x252)) x1021))) x1249))
(assert (x1089 x786))
(assert (x1089 x152))
(assert (= (=> (= x170 x452) x783) x1273))
(assert (x1089 x817))
(assert (x1089 x593))
(assert (= (x1062 x248) (ite (= x668 x248) x349 (x990 x248))))
(assert (x1089 x454))
(assert (= (or (and x462 (not x1028)) (and x794 (not x324)) (and x700 x450)) x561))
(assert (= (ite (= x519 x422) x1023 (x958 x519)) (x594 x519)))
(assert (x4 x1253))
(assert (=> (<= x1003 10000) (= (x1468 x1003) (x550 x1003))))
(assert (= x233 (=> (and (= (x189 (x1468 x929) x1232 0) x148) (= x1232 (x189 (x1468 x646) (x550 7) 0)) (= x700 (= x130 0)) (= x130 (x1205 x515)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x130) (= (x189 (x1468 x512) x148 0) x515) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x929) (<= 0 x130)) (and (=> (and (= x646 x972) (not x700)) x653) (=> (and (= (> x346 0) x332) x700 (= (x191 (- x646 1)) x346) (not x332)) x1031)))))
(assert (= (=> (and (= (x863 x1351) x80) (= (x189 (x1468 x1220) (x550 4) 0) x1503) (< 0 x1302) (> 2690754053 x1485) (not (> 2293535753 x1485)) (= 2532887486 x1485) (= x1127 (x189 (x1468 x131) x162 0)) (= x1351 (x189 (x1468 x609) x1127 0)) (not (= x1485 2293535753)) (= x80 x316) (<= x609 1461501637330902918203684832716283019655932542975) (= (x244 (x1468 274184521717934524641157099916833587206)) x1302) (not (= x1485 2418364589)) (= x162 (x189 (x1468 x62) x1503 0)) (<= x80 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x62) (<= x131 1461501637330902918203684832716283019655932542975) (not (= 2512682246 x1485)) (> 2960351575 x1485) (<= 0 x80)) x1210) x1330))
(assert (= x687 (x1324 (x1468 x687))))
(assert (x1089 x966))
(assert (= (ite (and x1447 x1265) (x382 x1177) (x338 x1177)) (x746 x1177)))
(assert (=> (<= x20 10000) (= (x1468 x20) (x550 x20))))
(assert (x1089 x876))
(assert (= (x1324 (x550 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= x729 (or (and (not x1156) x758) (and x450 (not x700)))))
(assert (x1089 x372))
(assert (=> (>= 10000 x175) (= (x550 x175) (x1468 x175))))
(assert (= x241 (x1324 (x1468 x241))))
(assert (= x1253 (x1324 (x1468 x1253))))
(assert (x1089 x1149))
(assert (= (x1324 (x550 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (x1089 x710))
(assert (= x588 x246))
(assert (= (=> (and (= (x199 x709) x805) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x877) (= x235 (x189 (x1468 x652) (x550 6) 0)) (= (= x805 0) x720) (<= 0 x805) (= x709 (x189 (x1468 x877) x235 0)) (<= x805 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (= x652 x284) (not x720)) x305) (=> x720 x1056))) x171))
(assert (= (x1324 (x1468 x124)) x124))
(assert (x4 x888))
(assert (x1089 x1304))
(assert (= x823 (=> (= x324 (< 0 x406)) (and (=> x324 x1126) (=> (not x324) x1031)))))
(assert (=> (<= x1405 10000) (= (x1468 x1405) (x550 x1405))))
(assert (= (ite (= x1375 x328) x370 (x992 x1375)) (x990 x1375)))
(assert (x1089 x612))
(assert (x1089 x481))
(assert (= (ite (and x1265 x1447) (x382 x552) (x338 x552)) (x746 x552)))
(assert (= (ite (= x1177 x1469) x106 (x363 x1177)) (x849 x1177)))
(assert (=> (>= 10000 x1415) (= (x550 x1415) (x1468 x1415))))
(assert (= (ite (and x392 x939) (x133 x898) (ite (and (not x392) x1301 (not x902) x939) (x1294 x898) (ite (and (not x392) (not x1301) x939) (x133 x898) (x625 x898)))) (x974 x898)))
(assert (x1089 x853))
(assert (x1089 x537))
(assert (x1089 x1396))
(assert (= x1395 (x1324 (x1468 x1395))))
(assert (x1089 x287))
(assert (= x1085 (x1324 (x1468 x1085))))
(assert (= x748 x1394))
(assert (x1089 x323))
(assert (x1089 x336))
(assert (= (x1037 x1155) (ite (and x939 x632) (x1426 x1155) (x796 x1155))))
(assert (x1089 x861))
(assert (= (x982 x314) (ite (and x69 x429) (x849 x314) (x226 x314))))
(assert (x1089 x1290))
(assert (=> (<= x274 10000) (= (x1468 x274) (x550 x274))))
(assert (= (x1324 (x1468 x533)) x533))
(assert (x1089 x644))
(assert (x1089 x1244))
(assert (= (ite (= x519 x158) x295 (x133 x519)) (x1294 x519)))
(assert (=> (>= 10000 x559) (= (x550 x559) (x1468 x559))))
(assert (x1089 x1352))
(assert (x1089 x168))
(assert (= (x1324 (x597 x232 1)) (+ (x1324 x232) 1)))
(assert (= (x1324 (x550 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (= x1063 (or x561 x729)))
(assert (x1089 x1142))
(assert (= (ite (= x1375 x698) x1463 (x594 x1375)) (x348 x1375)))
(assert (= (x1044 x1469) (ite (= x1076 x1469) x536 (x1062 x1469))))
(assert (= (x1176 x1177) (ite (= x1177 x605) x356 (x73 x1177))))
(assert (= (or (and x1279 x869) (and x1447 x1265)) x1345))
(assert (x1089 x953))
(assert (= (x865 x586) 0))
(assert (= x784 (x1324 (x1468 x784))))
(assert (=> (<= x30 10000) (= (x550 x30) (x1468 x30))))
(assert (x1145 x1105))
(assert (= (=> (and (or (and (= (x189 (x1468 x512) x310 0) x1017) (or (and (= x484 (< x1460 x1258)) (= x813 (x189 (x1468 x512) x1140 0)) (= x1422 (x189 (x1468 x26) (x550 9) 0)) (= (x189 (x1468 x512) x723 0) x1452) (= (x189 (x1468 x26) (x550 3) 0) x221) (not x484) (= (x189 (x1468 x1450) x1422 0) x1140) (= (x1119 (+ 2 x406)) x1460) (= x1450 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= x816 (x1006 1461501637330902918203684832716283019655932542975 x959)) x928 (= x723 (x189 (x1468 x816) x221 0))) (not x928)) (= (x189 (x1468 x406) (x550 3) 0) x67) (= x437 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= (x1119 (+ x406 1)) x26) x1125 (= x814 (x189 (x1468 x406) (x550 9) 0)) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1228) (= x702 (x189 (x1468 x512) x549 0)) (= (> x771 x26) x928) (= (x189 (x1468 x437) x814 0) x310) (= (x189 (x1468 x1228) x67 0) x549)) (not x1125)) (= (> x771 x406) x1125)) x460) x309))
(assert (x4 x687))
(assert (= (x594 x552) (ite (= x422 x552) x1023 (x958 x552))))
(assert (x1089 x377))
(assert (= (x1324 (x1468 x652)) x652))
(assert (= (or (and (not x154) x419) (and x1102 (not x263))) x1046))
(assert (=> (>= 10000 x848) (= (x1468 x848) (x550 x848))))
(assert (x1089 x242))
(assert (= (x1324 (x1468 x739)) x739))
(assert (x1089 x1285))
(assert (x4 x241))
(assert (= (x1324 (x1468 x323)) x323))
(assert (x1089 x198))
(assert (x4 x1430))
(assert (x4 x652))
(assert (x1089 x959))
(assert (= (x133 x1372) (ite (= x371 x1372) x749 (x139 x1372))))
(assert (= (x990 x519) (ite (= x328 x519) x370 (x992 x519))))
(assert (x1089 x379))
(assert (= x417 x275))
(assert (= x1444 (x1324 (x1468 x1444))))
(assert (x1089 x1404))
(assert (x1089 x1064))
(assert (= (x1324 (x1468 x785)) x785))
(assert (= (x231 x1375) (ite (and x60 x1034) (x875 x1375) (x674 x1375))))
(assert (= (x974 x248) (ite (and x392 x939) (x133 x248) (ite (and x1301 x939 (not x392) (not x902)) (x1294 x248) (ite (and (not x392) x939 (not x1301)) (x133 x248) (x625 x248))))))
(assert (x1089 x1400))
(assert (x1089 x649))
(assert (x1089 x1238))
(assert (=> (<= x441 10000) (= (x550 x441) (x1468 x441))))
(assert (x4 x739))
(assert (x1145 x892))
(assert (x1089 x747))
(assert (x1145 x268))
(assert (x1089 x1228))
(assert (= (and (not x303) x1263) x1272))
(assert (= (x133 x519) (ite (= x519 x371) x749 (x139 x519))))
(assert (x1089 x777))
(assert (x1089 x106))
(assert (= (x1324 (x550 18446744073709551615)) 18446744073709551615))
(assert (x368 x1105 x459 x188 x261))
(assert (=> (>= 10000 x1412) (= (x1468 x1412) (x550 x1412))))
(assert (x4 x336))
(assert (x1089 x24))
(assert (= (ite (= x702 x1060) 0 (x521 x1060)) (x949 x1060)))
(assert (x1089 x1164))
(assert (= (x550 2532887486) (x1468 2532887486)))
(assert (x1089 x925))
(assert (x1089 x963))
(assert (x1089 x1212))
(assert (= (x28 x1026) (ite (and (not x656) x621 x748) (x1195 x1026) (x234 x1026))))
(assert (= (x1324 (x1468 x103)) x103))
(assert (x1089 x682))
(assert (x1089 x1225))
(assert (x1089 x66))
(assert (x1089 x1215))
(assert (= 0 (x865 x552)))
(assert (x1089 x1516))
(assert (x1089 x1083))
(assert (x1089 x532))
(assert (x1089 x1456))
(assert (= (ite (= x401 x1431) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x401)) (x992 x401)))
(assert (=> (>= 10000 x198) (= (x550 x198) (x1468 x198))))
(assert (= (x1468 18446744073709551615) (x550 18446744073709551615)))
(assert (= (ite (and x392 x939) (x133 x401) (ite (and (not x902) (not x392) x939 x1301) (x1294 x401) (ite (and (not x1301) (not x392) x939) (x133 x401) (x625 x401)))) (x974 x401)))
(assert (= (ite (= x668 x519) x349 (x990 x519)) (x1062 x519)))
(assert (= (x133 x898) (ite (= x371 x898) x749 (x139 x898))))
(assert (= (x992 x1388) (ite (= x1431 x1388) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x1388))))
(assert (= x859 (x1324 (x1468 x859))))
(assert (x1089 x1148))
(assert (x4 x1003))
(assert (x1089 x1395))
(assert (x1089 x1421))
(assert (=> (>= 10000 x1450) (= (x1468 x1450) (x550 x1450))))
(assert (=> (>= 10000 x1514) (= (x1468 x1514) (x550 x1514))))
(assert (x1089 x1029))
(assert (x1089 x1005))
(assert (x4 x39))
(assert (x1089 x1025))
(assert (=> (>= 10000 x237) (= (x550 x237) (x1468 x237))))
(assert (x1089 x1008))
(assert (x4 x1101))
(assert (x1089 x158))
(assert (x1089 x1296))
(assert (= (=> (and (= false x265) (= x66 (x1247 (x1468 274184521717934524641157099916833587206))) (>= x307 0) (= x210 x620) (= x1484 4) (>= 1461501637330902918203684832716283019655932542975 x307) (>= x66 0) (<= 0 x620) (= x710 x512) (= x1198 (> (x244 (x1468 274184521717934524641157099916833587206)) 0)) (= (x1247 (x1468 274184521717934524641157099916833587218)) x27) (= x1029 x245) (= 87118632 x399) (<= 0 x726) (<= 0 x245) (<= 0 x710) x1198 (= false x534) x1219 (= x501 false) (= (< 0 (x244 (x1468 274184521717934524641157099916833587214))) x1219) x254 (= x1367 false) (<= x245 1461501637330902918203684832716283019655932542975) (>= x27 0) (<= 0 x200) (= x254 (> (x244 (x1468 274184521717934524641157099916833587218)) 0)) (= x163 x331) (>= 1461501637330902918203684832716283019655932542975 x620) (<= x200 1461501637330902918203684832716283019655932542975) (<= x710 1461501637330902918203684832716283019655932542975) (= x726 (x1247 (x1468 274184521717934524641157099916833587214)))) x63) x1473))
(assert (x1089 x1431))
(assert (=> (>= 10000 x437) (= (x1468 x437) (x550 x437))))
(assert (= (=> (and (= x714 (= 0 x170)) (or (and (= x532 0) (= x685 0) x714) (and (not x714) (= 1 x532) (= (x189 (x1468 x170) (x550 9) 0) x36) (= x308 (x923 x912)) (= x1412 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= x685 x308) (= x912 (x189 (x1468 x512) x1338 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x308) (<= 0 x308) (= x1338 (x189 (x1468 x1412) x36 0))))) x611) x783))
(assert (x1089 x268))
(assert (x1089 x1360))
(assert (x4 x763))
(assert (= x790 (x1324 (x1468 x790))))
(assert (= x1027 (x1324 (x1468 x1027))))
(assert (= (x766 x1375) (ite (= x615 x1375) x1025 (x216 x1375))))
(assert (x1089 x870))
(assert (= (x829 x1375) (ite (and x289 (not x322) x114) (x528 x1375) (x1496 x1375))))
(assert (x1089 x640))
(assert (x1145 x1005))
(assert (= (x133 x1177) (ite (= x1177 x371) x749 (x139 x1177))))
(assert (x693 x268 x427))
(assert (= 826074471 (x1324 (x550 826074471))))
(assert (= (x746 x633) (ite (and x1447 x1265) (x382 x633) (x338 x633))))
(assert (= (ite (= x158 x586) x295 (x133 x586)) (x1294 x586)))
(assert (x1089 x698))
(assert (= (x199 x903) (ite (and x632 x939) (x1508 x903) (x604 x903))))
(assert (= x1024 (x1324 (x1468 x1024))))
(assert (= (ite (= x586 x328) x370 (x992 x586)) (x990 x586)))
(assert (=> (<= x359 10000) (= (x1468 x359) (x550 x359))))
(assert (= (=> (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x420 (x1468 x476))) x1166) x1166 (= x1265 (= 274184521717934524641157099916833587218 x476)) (= (x1247 (x1468 274184521717934524641157099916833587206)) x345) (= x373 x1515) (= (x420 (x1468 x476)) x797) x645 (= x1163 (< x112 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x74 (x1247 (x1468 274184521717934524641157099916833587206))) x1163 (= (x1247 (x1468 x476)) x112) (= x645 (>= x74 0))) (and (=> (and (= x1510 (x244 (x1468 274184521717934524641157099916833587218))) (not (< x457 4)) (= (x189 (x1468 274184521717934524641157099916833587206) (x550 1) 0) x57) (= (x670 x57) x578) (not (= x1202 2514000705)) (= x920 (x191 (- x578 x453))) (<= 0 x578) (= (x189 (x1468 x280) (x550 1) 0) x708) (= (> x453 x578) x185) (= x453 x8) (= (x189 (x1468 274184521717934524641157099916833587206) (x550 1) 0) x910) (= x751 32) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x8 x403)) x951) (<= 0 x403) (not x951) (not (> 649617121 x1202)) (= x335 (x1006 1461501637330902918203684832716283019655932542975 x1520)) (= x669 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x159 x708) x403) (= 68 x457) x1265 (<= x403 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x189 (x1468 x335) (x550 1) 0) x120) (= x1202 2835717307) (not x835) (= (x191 (- x457 4)) x963) (= x1366 (+ x616 x192)) (= x403 x192) (not x185) (= x1270 x372) (= (or (and (> 64 x963) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x963) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x963)) x1453) (= x8 x616) (not x1453) (= x457 x1515) (= (x1006 1461501637330902918203684832716283019655932542975 x1520) x280) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x8 x403)) (<= x1520 1461501637330902918203684832716283019655932542975) (= 274184521717934524641157099916833587206 x1159) (= x453 x795) (<= x578 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1390 1) (not (= x1202 1889567281)) (= x835 (< x578 x8)) (= 274184521717934524641157099916833587206 x228) (= x299 x1520) (not (= x1202 649617121)) (not (= 826074471 x1202)) (> x1510 0)) x455) (=> (not x1265) x798))) x563))
(assert (= x1459 (or (and x1378 x102) x1332)))
(assert (x1089 x826))
(assert (= (x133 x158) (ite (= x158 x371) x749 (x139 x158))))
(assert (= (x1324 (x1468 x1450)) x1450))
(assert (x1089 x249))
(assert (x1089 x1011))
(assert (=> (>= 10000 x1435) (= (x550 x1435) (x1468 x1435))))
(assert (= (x849 x552) (ite (= x552 x1469) x106 (x363 x552))))
(assert (x1089 x1470))
(assert (x1089 x1001))
(assert (x4 x1309))
(assert (x1089 x877))
(assert (= (ite (= x158 x314) x295 (x133 x314)) (x1294 x314)))
(assert (x1089 x425))
(assert (x4 x1059))
(assert (=> (>= 10000 x1096) (= (x550 x1096) (x1468 x1096))))
(assert (x1089 x572))
(assert (x1089 x381))
(assert (x1145 x773))
(assert (= x794 (and (not x397) x1272)))
(assert (= (x1324 (x1468 x1250)) x1250))
(assert (x4 x1444))
(assert (x1089 x1186))
(assert (x1089 x141))
(assert (x1089 x557))
(assert (= (x992 x1216) (ite (= x1431 x1216) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x1216))))
(assert (x1089 x320))
(assert (x1089 x816))
(assert (x1089 x228))
(assert (= (x1324 (x1468 x900)) x900))
(assert (= (x974 x633) (ite (and x939 x392) (x133 x633) (ite (and x939 x1301 (not x392) (not x902)) (x1294 x633) (ite (and (not x1301) (not x392) x939) (x133 x633) (x625 x633))))))
(assert (x1145 x1472))
(assert (= (x865 x519) 0))
(assert (= (x1324 (x1468 x1295)) x1295))
(assert (x1089 x316))
(assert (= (ite (= x422 x698) x1023 (x958 x698)) (x594 x698)))
(assert (= (+ (x1324 x1413) 1) (x1324 (x597 x1413 1))))
(assert (= x69 x635))
(assert (= (x766 x633) (ite (= x633 x615) x1025 (x216 x633))))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1324 (x550 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (x1089 x762))
(assert (x1089 x737))
(assert (=> (<= x1430 10000) (= (x550 x1430) (x1468 x1430))))
(assert (x1089 x314))
(assert (= (=> (= x756 (= 274184521717934524641157099916833587214 x39)) (and (=> (not x756) x218) (=> (and (= x377 2835717307) (= (x418 x87) x410) (= (x189 (x1468 274184521717934524641157099916833587206) (x550 1) 0) x969) (<= x410 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x1499) (< (+ x135 x554) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x686 x1401) x135) (= x648 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x942) (and (< x942 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x942) true)))) (= x138 (x1006 1461501637330902918203684832716283019655932542975 x1472)) x756 (= x1286 (x1006 1461501637330902918203684832716283019655932542975 x1472)) (not x150) (= x1401 (x189 (x1468 x138) (x550 1) 0)) (= 68 x1498) (= x1064 32) (= x299 x1472) (= x793 (x191 (- x410 x1368))) (= x150 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x554 x135))) (>= x410 0) (= x554 x1329) (not (= x377 1889567281)) (= x135 x478) (not (< x377 649617121)) (<= x135 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x189 (x1468 274184521717934524641157099916833587206) (x550 1) 0) x87) (= x1376 x947) (= 1 x786) (= (< x410 x554) x1297) (= x581 (x244 (x1468 274184521717934524641157099916833587214))) (not (< x1498 4)) (<= 0 x135) (not x648) (= 274184521717934524641157099916833587206 x682) (= x1483 x1368) (not x1297) (= x554 x1368) (= 274184521717934524641157099916833587206 x475) (>= 1461501637330902918203684832716283019655932542975 x1472) (> x581 0) (not (= x377 2514000705)) (not (= 649617121 x377)) (= x1499 (< x410 x1368)) (= x600 (+ x478 x1329)) (= x942 (x191 (- x1498 4))) (= x775 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x377 826074471)) (= x1498 x470)) x1266))) x386))
(assert (= (x348 x633) (ite (= x633 x698) x1463 (x594 x633))))
(assert (x1089 x1488))
(assert (x1089 x1433))
(assert (= (x1324 (x550 2743102681)) 2743102681))
(assert (x1089 x1158))
(assert (x1089 x703))
(assert (= (x1324 (x550 87118632)) 87118632))
(assert (= (x550 468353030) (x1468 468353030)))
(assert (x1089 x270))
(assert (x1089 x355))
(assert (x4 x1228))
(assert (x1089 x582))
(assert (x1089 x1190))
(assert (= (ite (and x748 (not x656) x621) (x1195 x1469) (x234 x1469)) (x28 x1469)))
(assert (= (x849 x498) (ite (= x1469 x498) x106 (x363 x498))))
(assert (= (x1324 (x1468 x79)) x79))
(assert (= (ite (= x633 x605) x356 (x73 x633)) (x1176 x633)))
(assert (= (x1324 (x1468 x1430)) x1430))
(assert (x1089 x883))
(assert (=> (>= 10000 x1333) (= (x1468 x1333) (x550 x1333))))
(assert (= (x982 x1071) (ite (and x69 x429) (x849 x1071) (x226 x1071))))
(assert (x4 x646))
(assert (= (x1044 x552) (ite (= x1076 x552) x536 (x1062 x552))))
(assert (x1089 x259))
(assert (x1145 x959))
(assert (x693 x959 x1411))
(assert (x1089 x341))
(assert (= (ite (and x392 x939) (x133 x1177) (ite (and (not x902) (not x392) x1301 x939) (x1294 x1177) (ite (and x939 (not x1301) (not x392)) (x133 x1177) (x625 x1177)))) (x974 x1177)))
(assert (x1089 x432))
(assert (= (and x1364 x1000) x374))
(assert (x1089 x920))
(assert (x1089 x830))
(assert (= (x982 x395) (ite (and x69 x429) (x849 x395) (x226 x395))))
(assert (x1089 x1484))
(assert (x1089 x881))
(assert (x1089 x929))
(assert (x1089 x119))
(assert (= (=> (and (= x393 (x448 x55)) (or (and (not x426) (= 0 x408)) (and (or (and (not x59) (= x825 x285)) (and x59 (= x1261 x825) (= x1261 (x133 x371)))) (or (and x765 (= x562 x408) (not (> x579 x825)) (= (x133 x1168) x579) (= (x191 (- x825 x579)) x562)) (and (not (> x65 x825)) (= x853 x408) (= (ite (> 604800 x626) x626 604800) x853) (= x626 (x191 (- x825 x65))) (not x765) (= x95 604800))) (= x860 (x133 x371)) (= (= x65 0) x765) (= x59 (> x285 x860)) x426)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x572) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x393) (= x629 (= x858 0)) (>= x851 0) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1149) (= (x1078 x121) x572) (= x176 (x189 (x1468 x406) (x550 6) 0)) (= (x189 (x1468 x640) x489 0) x1314) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x851) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x640) (or (and x632 (= x1262 (x189 (x1468 x1032) x1423 0)) (= (x189 (x1468 x406) (x550 6) 0) x1423) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1032)) (and (< (* x886 x408) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x189 (x1468 x1405) x1392 0) x913) (= x1059 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= x1392 (x189 (x1468 x406) (x550 5) 0)) (not x632) (= (x189 (x1468 x1059) x21 0) x1454) (= x1405 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= x943 (* x408 x886)) (= x943 x991) (= (x189 (x1468 x406) (x550 6) 0) x21))) (<= 0 x749) (= (x1119 (+ 64 x1168)) x1488) (= (x1119 (+ 32 x1168)) x371) (<= x749 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x392 (= 0 x393)) (= (x189 (x1468 x512) x1314 0) x55) (= x1088 (x189 (x1468 x859) x176 0)) (= (x133 x371) x242) (= (x1037 x297) x851) (= (< x65 x242) x426) (= x719 (x189 (x1468 x406) (x550 5) 0)) (= (x189 (x1468 x406) (x550 1) 0) x121) (= (x597 x121 1) x240) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x859) (<= 0 x393) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x65) (or (and x392 (= x186 (x1119 (+ x406 1))) (= x652 x186)) (and (= x652 x901) (not x392) (= x480 (mod (* 1000000000000000000 x393) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 0 x513) (or (not x1301) (and (= x707 (x863 x1264)) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x953) (<= x707 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x1451) (= x1451 (x133 x1469)) (= x734 (x189 (x1468 x953) x738 0)) (= x1209 (x189 (x1468 x20) x598 0)) (= x759 (x189 (x1468 x512) x734 0)) (< 0 x106) (> x106 0) (>= x707 0) (or (and (<= 0 x78) (= (x189 (x1468 x79) x810 0) x872) x902 (= (* x78 x854) x742) (= x896 x508) (= (x1294 x1469) x454) (= (x1119 (+ 64 x206)) x603) (= x78 (x1167 x872)) (= x525 (x863 x1036)) (= (x189 (x1468 x406) (x550 11) 0) x755) (= (div x742 1000000000000000000) x508) (= x701 (x189 (x1468 x406) (x550 4) 0)) (not x1139) (= (x189 (x1468 x888) x701 0) x657) (= (> x106 2) x1139) (= x432 (x267 x603)) (= (x189 (x1468 x432) x893 0) x1036) (>= x525 0) (<= x79 1461501637330902918203684832716283019655932542975) (= x642 (x1006 1461501637330902918203684832716283019655932542975 x959)) (> x454 1) (= x1098 (x1294 x548)) (= x556 (+ x896 x889)) (= 0 x525) (= x1098 x889) (<= x432 1461501637330902918203684832716283019655932542975) (<= x525 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x810 (x189 (x1468 x642) x755 0)) (= x888 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= (x1119 (+ 192 x1290)) x548) (= (x189 (x1468 x512) x657 0) x893) (< 1 x106) (< (* x854 x78) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1098 x508)) (<= x78 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x106 1) (= x79 (x267 x603))) (not x902)) (>= 1461501637330902918203684832716283019655932542975 x20) (= x1415 (x267 x737)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1092 x854)) (= x20 (x267 x737)) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1003) (= (* x1092 x854) x400) (= x358 x96) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1092) (= (x133 x158) x96) (= x158 (x1119 (+ x1290 160))) (= (div x400 1000000000000000000) x1217) (= (x189 (x1468 x1003) x852 0) x598) (<= 0 x1092) (= x1091 x1217) (<= x1415 1461501637330902918203684832716283019655932542975) (= (x189 (x1468 x1415) x759 0) x1264) (= (x1167 x1209) x1092) (= x902 (< 1 x106)) x1301 (= x738 (x189 (x1468 x406) (x550 4) 0)) (= x294 x737) (= x707 0) (= x295 (+ x358 x1091)) (= x852 (x189 (x1468 x406) (x550 11) 0)) (< (+ x96 x1217) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= x1227 (ite (> x393 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= (div x480 x851) x854) (= x901 (x1119 (+ x406 1))) (= x1301 (< 0 x106)) (> x851 0) (= 1 x1194) (= (x1006 x1194 x1227) x513))) (= x632 (= x408 0)) (= (x189 (x1468 x406) (x550 3) 0) x489) (= x65 (x778 x1088)) (= x749 (x1348 x240)) (or x629 (and (= x837 (x189 (x1468 x406) (x550 10) 0)) (not x629) (= x1461 (x189 (x1468 x1449) x837 0)) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1449))) (= x297 (x189 (x1468 x1149) x719 0)) (<= 0 x65) (>= x572 0)) x531) x1316))
(assert (= (=> (and (= (= 0 x685) x1321) (or (and (= (x189 (x1468 x198) x391 0) x1018) (= x198 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= x391 (x189 (x1468 x652) (x550 9) 0)) (not x485) (= x522 (x189 (x1468 x512) x1018 0))) x485) (or (and (= x1488 x955) (= (x189 (x1468 x652) (x550 7) 0) x530) (= x1117 (x189 (x1468 x506) x530 0)) x1321 (= (x1006 1461501637330902918203684832716283019655932542975 x959) x506) (= (x189 (x1468 x512) x1117 0) x362)) (and (= x425 (x1078 x1413)) (>= x704 0) (= (x597 x1413 1) x190) (not x1321) (= x1349 (= x177 0)) (= x703 (x1119 (+ x1168 96))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x704) (= (x884 x703) x143) (>= x425 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1408) (= x1077 (> x143 x704)) (= x993 (x189 (x1468 x512) x847 0)) (= x785 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= (x1348 x190) x1408) (or (and (or (and (= x1308 (ite (> 604800 x1055) x1055 604800)) (not (> x704 x341)) (not x507) (= (x191 (- x341 x704)) x1055) (= x177 x1308) (= 604800 x1172)) (and (not (< x341 x1385)) (= (x884 x1488) x1385) (= (x191 (- x341 x1385)) x1008) x507 (= x177 x1008))) x1077 (= (x884 x703) x1123) (or (and (= x285 x341) (not x997)) (and (= x570 (x884 x703)) x997 (= x341 x570))) (= (= 0 x704) x507) (= (< x1123 x285) x997)) (and (= x177 0) (not x1077))) (= (x189 (x1468 x785) x1179 0) x847) (= (x189 (x1468 x652) (x550 7) 0) x1179) (<= 0 x1408) (or (and (= x593 x955) (= x684 (x189 (x1468 x512) x91 0)) x1349 (= x980 (x189 (x1468 x652) (x550 7) 0)) (= (x189 (x1468 x848) x980 0) x91) (= x848 (x1006 1461501637330902918203684832716283019655932542975 x959))) (and (= x1506 x117) (= x1312 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= (x189 (x1468 x533) x474 0) x247) (= x780 (x189 (x1468 x512) x247 0)) (= (* x685 x177) x117) (= x1054 (x189 (x1468 x652) (x550 3) 0)) (= x955 x593) (not x1349) (= x1020 (x189 (x1468 x512) x136 0)) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x533) (= (x189 (x1468 x652) (x550 7) 0) x474) (< (* x177 x685) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x189 (x1468 x1312) x1054 0) x136))) (= x704 (x1509 x993)) (= (x1119 (+ x1168 128)) x593) (<= x425 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1413 (x189 (x1468 x652) (x550 1) 0)))) (= x485 (= x532 0))) x1346) x611))
(assert (= (ite (and (not x322) x289 x114) (x528 x633) (x1496 x633)) (x829 x633)))
(assert (x1089 x564))
(assert (= (ite (= x1318 x633) x2 (x1176 x633)) (x216 x633)))
(assert (=> (>= 10000 x1293) (= (x550 x1293) (x1468 x1293))))
(assert (=> (<= x1360 10000) (= (x1468 x1360) (x550 x1360))))
(assert (= (x550 2764855426) (x1468 2764855426)))
(assert (=> (>= 10000 x608) (= (x1468 x608) (x550 x608))))
(assert (x1089 x692))
(assert (x1089 x1024))
(assert (x1089 x1289))
(assert (= (x1324 (x1468 x826)) x826))
(assert (= (x1468 2418364589) (x550 2418364589)))
(assert (=> (<= x652 10000) (= (x550 x652) (x1468 x652))))
(assert (x4 x152))
(assert (= (ite (and x69 x429) (x849 x552) (x226 x552)) (x982 x552)))
(assert (x1089 x132))
(assert (x1089 x473))
(assert (x4 x1333))
(assert (= (x594 x1375) (ite (= x422 x1375) x1023 (x958 x1375))))
(assert (= (x28 x248) (ite (and (not x656) x748 x621) (x1195 x248) (x234 x248))))
(assert (= (=> (and (<= x1023 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1389 (x597 x232 1)) (= (x189 (x1468 x441) x634 0) x903) (or (and (= x15 (x189 (x1468 x911) x690 0)) (not x713) (= (x189 (x1468 x652) (x550 10) 0) x690) (= x911 (x1006 1461501637330902918203684832716283019655932542975 x959))) x713) (= (x594 x422) x1402) (>= x149 0) (= (x1119 (+ 64 x955)) x10) (>= x1023 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x41) (<= x692 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x141) x976) (= x232 (x189 (x1468 x652) (x550 1) 0)) (>= x41 0) (= x149 (x157 x383)) (or (and (= x1410 x618) (> x149 0) (= x773 (ite (> x141 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= 0 x1083) (= x1238 (div x1495 x149)) (= x844 (< 0 x106)) (= x839 1) (= (x1006 x839 x773) x1083) (= (mod (* 1000000000000000000 x141) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1495) (= x618 (x1119 (+ 1 x652))) (or (and (= x1100 x477) (= x583 (x594 x698)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x906 x1238)) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1165) (= (x1167 x1121) x906) (= x935 (x189 (x1468 x336) x18 0)) (= x336 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= (+ x1049 x1100) x1463) (= (x189 (x1468 x512) x987 0) x678) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x922) (<= 0 x922) (= 0 x922) (> x106 0) x844 (= x1335 (x594 x1469)) (= x922 (x863 x1414)) (= x45 (> x106 1)) (= (x1119 (+ 160 x1290)) x698) (= x921 (x267 x747)) (= (x189 (x1468 x652) (x550 11) 0) x18) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x906) (= x763 (x267 x747)) (= x583 x1049) (= x1121 (x189 (x1468 x921) x935 0)) (or (not x45) (and (= x637 (x189 (x1468 x512) x850 0)) (< 1 x287) (= (x863 x676) x126) (= x676 (x189 (x1468 x937) x637 0)) (= x126 0) (= (+ x673 x129) x1448) (= x970 (x189 (x1468 x1333) x1138 0)) (< (* x1238 x360) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x360 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x830 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= x1204 x129) (= (x189 (x1468 x830) x440 0) x850) (> x106 1) (= x1250 (x267 x1040)) (<= 0 x360) (= (x1119 (+ 192 x1290)) x314) x45 (not x985) (= x287 (x348 x1469)) (= x1400 (div x333 1000000000000000000)) (= x1040 (x1119 (+ x206 64))) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1333) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x126) (= x1138 (x189 (x1468 x652) (x550 11) 0)) (= (* x360 x1238) x333) (< 1 x106) (= x1400 x673) (>= 1461501637330902918203684832716283019655932542975 x937) (= x985 (> x106 2)) (= x937 (x267 x1040)) (>= 1461501637330902918203684832716283019655932542975 x1250) (= x360 (x1167 x1066)) (= (x189 (x1468 x1250) x970 0) x1066) (= (x189 (x1468 x652) (x550 4) 0) x440) (< (+ x1400 x1204) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1204 (x348 x314)) (>= x126 0))) (<= x763 1461501637330902918203684832716283019655932542975) (< 0 x106) (>= 1461501637330902918203684832716283019655932542975 x921) (> x1335 0) (= x486 (x189 (x1468 x652) (x550 4) 0)) (= x477 (div x811 1000000000000000000)) (>= x906 0) (= x987 (x189 (x1468 x1165) x486 0)) (= (* x906 x1238) x811) (= x294 x747) (= (x189 (x1468 x763) x678 0) x1414) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x583 x477))) (not x844)) (not x976)) (and (= x1399 (x1119 (+ 1 x652))) (= x1399 x1410) x976)) (= x422 (x1119 (+ 32 x955))) (= (x1398 x1229) x141) (= (x189 (x1468 x1085) x1280 0) x383) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1085) (<= 0 x692) (= x276 (x189 (x1468 x652) (x550 3) 0)) (= x1216 x10) (<= 0 x141) (or (and (not x494) (= 0 x663)) (and (= (= x692 0) x398) (= x361 (> x285 x876)) (= (x594 x422) x876) (or (and (not x361) (= x56 x285)) (and x361 (= x146 x56) (= (x594 x422) x146))) x494 (or (and (not x398) (= x302 x663) (= (ite (< x1380 604800) x1380 604800) x302) (not (> x692 x56)) (= (x191 (- x56 x692)) x1380) (= x614 604800)) (and (= x1358 (x191 (- x56 x957))) (= x957 (x594 x955)) x398 (= x663 x1358) (not (> x957 x56)))))) (= (x1348 x1389) x1023) (= (x199 x903) x692) (or (and (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1384) (= (x189 (x1468 x652) (x550 6) 0) x250) x527 (= (x189 (x1468 x1384) x250 0) x768)) (and (= x169 (x189 (x1468 x652) (x550 5) 0)) (not x527) (= (* x1519 x663) x7) (= x7 x1404) (= (x189 (x1468 x712) x169 0) x251) (< (* x1519 x663) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x712 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= x1430 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= (x189 (x1468 x652) (x550 6) 0) x1116) (= x128 (x189 (x1468 x1430) x1116 0)))) (= (x189 (x1468 x652) (x550 5) 0) x1280) (= (> x1402 x692) x494) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x141) (> x1410 x1258) (= x634 (x189 (x1468 x652) (x550 6) 0)) (= x441 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= x713 (= 0 x595)) (= x527 (= x663 0)) (= (x189 (x1468 x512) x890 0) x1229) (= (x1078 x232) x41) (= x16 (x1006 1461501637330902918203684832716283019655932542975 x959)) (<= x149 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x890 (x189 (x1468 x16) x276 0))) x309) x699))
(assert (= (x1468 2211524764) (x550 2211524764)))
(assert (x1089 x669))
(assert (x4 x1449))
(assert (=> (>= 10000 x131) (= (x1468 x131) (x550 x131))))
(assert (= (or (and (not x1246) x683) (and x808 x374) (and x1364 (not x1000))) x1287))
(assert (x1089 x86))
(assert (= (=> (and (< x127 2293535753) (= x590 (x189 (x1468 x331) (x550 6) 0)) (not (= x127 1968616202)) (not (= 1986467848 x127)) (not (= 2211524764 x127)) (= x29 (x778 x526)) (= x127 2258409472) (<= x29 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x127 2061678023)) (not (> 911411945 x127)) (<= x1029 1461501637330902918203684832716283019655932542975) (not (< x127 1968616202)) (= (x189 (x1468 x1029) x590 0) x526) (>= x29 0) (= x355 x29) (> x270 0) (= (x244 (x1468 274184521717934524641157099916833587206)) x270)) (=> (and (= x355 x624) (= x163 x1211) (= x559 x245)) x1281)) x63))
(assert (= (=> (= (= 274184521717934524641157099916833587214 x476) x869) (and (=> (and (not (= 649617121 x145)) (= x204 (>= (+ x882 x320) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1006 1461501637330902918203684832716283019655932542975 x344) x551) (= x891 (x189 (x1468 x1244) (x550 1) 0)) (= x930 x1170) (= x320 x101) (= (x1006 1461501637330902918203684832716283019655932542975 x344) x1244) (= x802 (> x767 x1099)) (not x802) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1099) (<= 0 x882) (= x655 (x189 (x1468 274184521717934524641157099916833587206) (x550 1) 0)) (= x721 274184521717934524641157099916833587206) (not (< x145 649617121)) x869 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x320 x882)) (not x1061) (= (< x1099 x320) x599) (= x882 (x855 x891)) (= x344 x299) (not (= 826074471 x145)) (= x934 x882) (= (x189 (x1468 274184521717934524641157099916833587206) (x550 1) 0) x503) (= x1099 (x994 x655)) (= 2835717307 x145) (= 32 x751) (not (= x145 2514000705)) (= x767 x795) (= x1190 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x191 (- x1099 x767)) x1517) (= 274184521717934524641157099916833587206 x728) (<= x882 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1099) (>= 1461501637330902918203684832716283019655932542975 x344) (= (x244 (x1468 274184521717934524641157099916833587214)) x1203) (= 68 x390) (= x1511 (x191 (- x390 4))) (= x925 (+ x934 x101)) (= x767 x320) (not (> 4 x390)) (= (x189 (x1468 x551) (x550 1) 0) x917) (> x1203 0) (not (= x145 1889567281)) (not x204) (= x1390 1) (= x1515 x390) (= x1061 (or (> x1511 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1511 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1511)))) (not x599)) x455) (=> (not x869) x166))) x798))
(assert (= (x974 x1469) (ite (and x939 x392) (x133 x1469) (ite (and (not x902) x939 x1301 (not x392)) (x1294 x1469) (ite (and (not x392) x939 (not x1301)) (x133 x1469) (x625 x1469))))))
(assert (= x441 (x1324 (x1468 x441))))
(assert (= (ite (and x939 x632) (x1508 x1325) (x604 x1325)) (x199 x1325)))
(assert (x1089 x1449))
(assert (x1089 x1099))
(assert (= (ite (and (not x656) x748 x621) (x1195 x633) (x234 x633)) (x28 x633)))
(assert (= x1034 (and x114 x289)))
(assert (=> (<= x921 10000) (= (x1468 x921) (x550 x921))))
(assert (x1089 x570))
(assert (x1089 x1498))
(assert (= (x133 x1071) (ite (= x1071 x371) x749 (x139 x1071))))
(assert (x1089 x360))
(assert (= x1360 (x1324 (x1468 x1360))))
(assert (= (x1294 x552) (ite (= x158 x552) x295 (x133 x552))))
(assert (x693 x1472 x1146))
(assert (= 2532887486 (x1324 (x550 2532887486))))
(assert (= (or (and x289 (not x114)) (and (not x621) x748) x52) x315))
(assert (x1089 x335))
(assert (x1089 x464))
(assert (= (x1195 x1469) (ite (and x1462 x292 x748 (not x940) x495 x621) (x1044 x1469) (ite (and x495 (not x1462) x292 x621 x748) (x1062 x1469) (ite (and x292 (not x495) x621 x748) (x990 x1469) (ite (and x621 x748 (not x292)) (x992 x1469) (x592 x1469)))))))
(assert (x1089 x408))
(assert (= x354 x1243))
(assert (=> (<= x323 10000) (= (x1468 x323) (x550 x323))))
(assert (x4 x1250))
(assert (x1089 x500))
(assert (= (ite (= x1469 x158) x295 (x133 x1469)) (x1294 x1469)))
(assert (x1089 x1375))
(assert (=> (>= 10000 x687) (= (x550 x687) (x1468 x687))))
(assert (x1089 x851))
(assert (= (ite (and x939 x392) (x133 x1071) (ite (and x939 (not x392) x1301 (not x902)) (x1294 x1071) (ite (and (not x1301) (not x392) x939) (x133 x1071) (x625 x1071)))) (x974 x1071)))
(assert (= x1309 (x1324 (x1468 x1309))))
(assert (= x646 (x1324 (x1468 x646))))
(assert (x1089 x892))
(assert (=> (>= 10000 x432) (= (x550 x432) (x1468 x432))))
(assert (x1089 x165))
(assert (x1089 x605))
(assert (x4 x1211))
(assert (= (x849 x248) (ite (= x1469 x248) x106 (x363 x248))))
(assert (x1089 x295))
(assert (= (or (and (not x628) x424) x555) x939))
(assert (= (x1509 x696) (ite (and x272 x1403) (x1175 x696) (ite (and x272 x415 (not x1403)) (x689 x696) (x936 x696)))))
(assert (x4 274184521717934524641157099916833587206))
(assert (= (=> (and (= x311 (x189 (x1468 x512) x1334 0)) (= x661 (x189 (x1468 x652) (x550 7) 0)) (not (< x5 x652)) (>= x651 0) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1148) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x651) (= x1334 (x189 (x1468 x1148) x661 0)) (>= x5 0) (= (x1509 x311) x651) (= (> x651 0) x1378) (<= x5 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (= (x189 (x1468 x652) (x550 9) 0) x988) (>= x1093 0) x1378 (<= x1093 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x532 0) (= (x923 x306) x1093) (= (x189 (x1468 x1096) x988 0) x675) (= (x1006 1461501637330902918203684832716283019655932542975 x959) x1096) (= x685 x1093) (= x306 (x189 (x1468 x512) x675 0))) x611) (=> (not x1378) x61))) x108))
(assert (= (ite (and x272 x1403) (x1175 x993) (ite (and x415 x272 (not x1403)) (x689 x993) (x936 x993))) (x1509 x993)))
(assert (x1089 x194))
(assert (= (x1324 (x1468 x198)) x198))
(assert (x1089 x848))
(assert (x1089 x1369))
(assert (x1089 x562))
(assert (x1089 x726))
(assert (x1089 x349))
(assert (x1089 x308))
(assert (x1089 x1104))
(assert (x1089 x646))
(assert (= (ite (= x1318 x498) x2 (x1176 x498)) (x216 x498)))
(assert (= (x849 x898) (ite (= x1469 x898) x106 (x363 x898))))
(assert (= (x594 x1388) (ite (= x422 x1388) x1023 (x958 x1388))))
(assert (x1089 x1269))
(assert (= x939 x1471))
(assert (x1089 x1444))
(assert (x1089 x208))
(assert (=> (<= x1101 10000) (= (x550 x1101) (x1468 x1101))))
(assert (x1089 x222))
(assert (x1089 x898))
(assert (x1145 x1520))
(assert (= (ite (and x69 x429) (x849 x548) (x226 x548)) (x982 x548)))
(assert (= (ite (= x586 x1076) x536 (x1062 x586)) (x1044 x586)))
(assert (x1089 x193))
(assert (x4 x804))
(assert (x1089 x554))
(assert (= (x923 x306) (ite (and x42 x272) (x1218 x306) (x576 x306))))
(assert (= (x1324 (x550 468353030)) 468353030))
(assert (x4 x512))
(assert (=> (>= 10000 x1148) (= (x1468 x1148) (x550 x1148))))
(assert (= (and x1447 (not x1265)) x1279))
(assert (x1089 x1070))
(assert (x1089 x1132))
(assert (= x582 (x1324 (x1468 x582))))
(assert (x1089 x1500))
(assert (x1089 x126))
(assert (x1089 x782))
(assert (x1089 x110))
(assert (= (ite (and x939 x392) (x133 x498) (ite (and (not x392) (not x902) x1301 x939) (x1294 x498) (ite (and (not x392) (not x1301) x939) (x133 x498) (x625 x498)))) (x974 x498)))
(assert (= x424 x272))
(assert (x1089 x536))
(assert (x1089 x1172))
(assert (= x275 x1222))
(assert (x1089 x77))
(assert (x4 x944))
(assert (= (x550 2512682246) (x1468 2512682246)))
(assert (x1089 x436))
(assert (x1089 x438))
(assert (= x289 x1345))
(assert (= x447 (x1324 (x1468 x447))))
(assert (=> (<= x208 10000) (= (x1468 x208) (x550 x208))))
(assert (= (x1324 (x1468 x1029)) x1029))
(assert (= (x550 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1468 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (or x125 x239) x555))
(assert (x4 x785))
(assert (= (x1195 x498) (ite (and x621 x292 (not x940) x748 x495 x1462) (x1044 x498) (ite (and (not x1462) x292 x495 x621 x748) (x1062 x498) (ite (and x748 (not x495) x621 x292) (x990 x498) (ite (and x621 x748 (not x292)) (x992 x498) (x592 x498)))))))
(assert (= x830 (x1324 (x1468 x830))))
(assert (= x512 (x1324 (x1468 x512))))
(assert (= x1032 (x1324 (x1468 x1032))))
(assert (= x650 (x1324 (x1468 x650))))
(assert (x1089 x404))
(assert (x1089 x1495))
(assert (x1089 x477))
(assert (x1089 x785))
(assert (x1089 x373))
(assert (= (x1062 x1375) (ite (= x668 x1375) x349 (x990 x1375))))
(assert (= (x982 x498) (ite (and x429 x69) (x849 x498) (x226 x498))))
(assert (= (x1468 2258409472) (x550 2258409472)))
(assert (=> (<= x447 10000) (= (x1468 x447) (x550 x447))))
(assert (=> (<= x1395 10000) (= (x1468 x1395) (x550 x1395))))
(assert (=> (>= 10000 x929) (= (x1468 x929) (x550 x929))))
(assert (=> (>= 10000 x1130) (= (x550 x1130) (x1468 x1130))))
(assert (= (x992 x1177) (ite (= x1431 x1177) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x1177))))
(assert (= (x550 142201243) (x1468 142201243)))
(assert (=> (>= 10000 x194) (= (x1468 x194) (x550 x194))))
(assert (x1089 x1302))
(assert (x1089 x1376))
(assert (x1089 x978))
(assert (x1089 x80))
(assert (= (x1324 (x1468 x1514)) x1514))
(assert (x1089 x1220))
(assert (x1089 x1382))
(assert (= x588 true))
(assert (x1089 x1417))
(assert true)
(assert (= x727 (=> (and (or (and (<= 0 x1169) (not x672) (= x831 (= 0 x1169)) (<= x1169 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1221 x1283) x1169) (= x152 (x1006 1461501637330902918203684832716283019655932542975 x959)) (or (and x831 (= 0 x1519) (= x595 0)) (and (= x1519 x1169) (not x831) (= 1 x595))) (= (x189 (x1468 x1482) (x550 10) 0) x1016) (= (x189 (x1468 x152) x1016 0) x1283)) (and x672 (= x1519 0) (= 0 x595))) (= (= 0 x1482) x672)) x699)))
(assert (x1089 x591))
(assert (x1089 x508))
(assert (x1089 x712))
(assert (x1089 x172))
(assert (=> (>= 10000 x888) (= (x1468 x888) (x550 x888))))
(assert (= (x990 x395) (ite (= x395 x328) x370 (x992 x395))))
(assert (x1089 x513))
(assert (= (ite (= x633 x1076) x536 (x1062 x633)) (x1044 x633)))
(assert (x1089 x654))
(assert (x1089 x224))
(assert (= (x550 2960351575) (x1468 2960351575)))
(assert (x4 x1032))
(assert (=> (>= 10000 x124) (= (x1468 x124) (x550 x124))))
(assert (= (x216 x1375) (ite (= x1318 x1375) x2 (x1176 x1375))))
(assert (= (x1324 (x1468 x1191)) x1191))
(assert (=> (<= x790 10000) (= (x1468 x790) (x550 x790))))
(assert (x1089 x1023))
(assert (= (ite (and x939 x392) (x133 x698) (ite (and x939 (not x392) x1301 (not x902)) (x1294 x698) (ite (and (not x1301) (not x392) x939) (x133 x698) (x625 x698)))) (x974 x698)))
(assert (x4 x1024))
(assert (= (ite (and x272 x1403) (x277 x55) (ite (and x272 x415 (not x1403)) (x277 x55) (x1353 x55))) (x448 x55)))
(assert (x1089 x1497))
(assert (=> (>= 10000 x1132) (= (x550 x1132) (x1468 x1132))))
(assert (x1089 x1368))
(assert (= x1405 (x1324 (x1468 x1405))))
(assert (x1089 x26))
(assert (x1089 x10))
(assert (x1089 x804))
(assert (= (=> (and (or (and (= 0 x858) x856 (= x886 0)) (and (or (and (= 1 x858) (= x886 x160) (not x396)) (and (= x858 0) x396 (= x886 0))) (= x396 (= 0 x160)) (>= x160 0) (= x160 (x1009 x1095)) (= (x189 (x1468 x1293) (x550 10) 0) x1476) (not x856) (= x650 (x1006 1461501637330902918203684832716283019655932542975 x959)) (= (x189 (x1468 x650) x1476 0) x1095) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x160))) (= x856 (= 0 x1293))) x1316) x81))
(assert (=> (>= 10000 x1295) (= (x1468 x1295) (x550 x1295))))
(assert (= x584 x788))
(assert (x1089 x1059))
(assert (x1089 x74))
(assert (= 0 (x865 x1388)))
(assert (= (ite (= x1469 x668) x349 (x990 x1469)) (x1062 x1469)))
(assert (x1089 x68))
(assert (= x359 (x1324 (x1468 x359))))
(assert (= (x982 x1469) (ite (and x429 x69) (x849 x1469) (x226 x1469))))
(assert (= (x1468 274184521717934524641157099916833587214) (x550 274184521717934524641157099916833587214)))
(assert (x4 x1215))
(assert (x1089 x567))
(assert (= x1151 (x1324 (x1468 x1151))))
(assert (x1089 x302))
(assert (x1089 x1282))
(assert (x1089 x1515))
(assert (x1089 x328))
(assert (= (ite (= x519 x698) x1463 (x594 x519)) (x348 x519)))
(assert (= x718 (x1324 (x1468 x718))))
(assert (x4 x784))
(assert (x1089 x41))
(assert (x1089 x213))
(assert (x1089 x30))
(assert (x1089 x245))
(assert (= (ite (= x586 x1469) x106 (x363 x586)) (x849 x586)))
(assert (x1089 x859))
(assert (x1089 x1217))
(assert (x1089 x911))
(assert (x1089 x122))
(assert (= (x865 x401) 0))
(assert (= (x348 x1026) (ite (= x1026 x698) x1463 (x594 x1026))))
(assert (x1089 x76))
(assert (= (=> (= x1022 (> x652 x771)) (and (=> (and x1022 (= x1488 x1216)) x309) (=> (not x1022) x108))) x531))
(assert (=> (<= x830 10000) (= (x1468 x830) (x550 x830))))
(assert (x1089 x694))
(assert (=> (<= x38 10000) (= (x1468 x38) (x550 x38))))
(assert (x1089 x888))
(assert (= (ite (and x1265 x1447) (x382 x1071) (x338 x1071)) (x746 x1071)))
(assert (=> (<= x183 10000) (= (x550 x183) (x1468 x183))))
(assert (x1089 x447))
(assert (= (x1468 115792089237316195423570985008687907853269984665640564039457) (x550 115792089237316195423570985008687907853269984665640564039457)))
(assert (=> (>= 10000 x1024) (= (x550 x1024) (x1468 x1024))))
(assert (x1089 x1092))
(assert (x1089 x356))
(assert (x1089 x401))
(assert (x1089 x146))
(assert (= x584 x417))
(assert (x1089 x1261))
(assert (= (ite (= x328 x1026) x370 (x992 x1026)) (x990 x1026)))
(assert (= (ite (= x1026 x158) x295 (x133 x1026)) (x1294 x1026)))
(assert (x1089 x17))
(assert (x1089 x947))
(assert (x1089 x1410))
(assert (x4 274184521717934524641157099916833587218))
(assert (x1089 x1514))
(assert (= (=> (= x978 x1293) x81) x1317))
(assert (x1089 x51))
(assert (x1089 x1363))
(assert (x4 x816))
(assert (x4 x1384))
(assert (= (x1324 (x1468 x208)) x208))
(assert (= (x1294 x698) (ite (= x698 x158) x295 (x133 x698))))
(assert (x1089 x1479))
(assert (= (x594 x1372) (ite (= x1372 x422) x1023 (x958 x1372))))
(assert (x1089 x331))
(assert (=> (<= x1424 10000) (= (x1468 x1424) (x550 x1424))))
(assert (= (ite (= x568 x422) x1023 (x958 x568)) (x594 x568)))
(assert (x1089 x410))
(assert (=> (<= x712 10000) (= (x550 x712) (x1468 x712))))
(assert (= (x992 x633) (ite (= x1431 x633) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x281 x633))))
(assert (x1089 x1081))
(assert (= x1394 (or (and x1022 x1471) x523 (and x303 x1263))))
(assert (= (ite (and x939 x632) (x1508 x732) (x604 x732)) (x199 x732)))
(assert (= (x1044 x1388) (ite (= x1076 x1388) x536 (x1062 x1388))))
(assert (x1089 x908))
(assert (x1089 x492))
(assert (= (x982 x401) (ite (and x69 x429) (x849 x401) (x226 x401))))
(assert (= (x1324 (x1468 x848)) x848))
(assert (x4 x1360))
(assert (x1089 x535))
(assert (= (ite (and x1447 x1265) (x382 x586) (x338 x586)) (x746 x586)))
(assert (= x131 (x1324 (x1468 x131))))
(assert (=> (>= 10000 x1149) (= (x1468 x1149) (x550 x1149))))
(assert (= (x1324 (x1468 x1132)) x1132))
(assert (x1089 x687))
(assert (= (ite (= x158 x1375) x295 (x133 x1375)) (x1294 x1375)))
(assert (=> (<= x817 10000) (= (x1468 x817) (x550 x817))))
(assert (x1089 x3))
(assert (x1089 x1309))
(assert (x1089 x957))
(assert (= (x1509 x311) (ite (and x272 x1403) (x1175 x311) (ite (and x272 (not x1403) x415) (x689 x311) (x936 x311)))))
(assert (x1089 x470))
(assert (x4 x1244))
(assert (= (x849 x1388) (ite (= x1469 x1388) x106 (x363 x1388))))
(assert (= (x1468 1968616202) (x550 1968616202)))
(assert (= (x1324 (x1468 x482)) x482))
(assert (=> (<= x1085 10000) (= (x550 x1085) (x1468 x1085))))
(assert (= (x550 649617121) (x1468 649617121)))
(assert (= (x1324 (x1468 x1333)) x1333))
(assert (= (and x1200 x706) x683))
(assert (= (=> (= x1293 0) x81) x97))
(assert (x1089 x476))
(assert (x1089 x65))
(assert (x4 x1029))
(assert (=> (>= 10000 x39) (= (x1468 x39) (x550 x39))))
(assert (= 0 (x865 x1372)))
(assert (x1089 x839))
(assert (= 1968616202 (x1324 (x550 1968616202))))
(assert (= (ite (and (not x940) x748 x1462 x292 x621 x495) (x1044 x519) (ite (and x621 x748 x292 (not x1462) x495) (x1062 x519) (ite (and x621 x292 x748 (not x495)) (x990 x519) (ite (and x748 x621 (not x292)) (x992 x519) (x592 x519))))) (x1195 x519)))
(assert (x1089 x721))
(assert (x1089 x248))
(assert (x1089 x871))
(assert (= x239 (or (and x741 (not x1267)) (and (not x1079) x789))))
(assert (x4 x441))
(assert (= (x1324 (x1468 x816)) x816))
(assert (x1089 x1151))
(assert (= (ite (and x939 x632) (x1426 x297) (x796 x297)) (x1037 x297)))
(assert (= 0 (x865 x698)))
(assert (= x764 (or (and (not x720) x414) (and x374 (not x808)))))
(assert (= x1228 (x1324 (x1468 x1228))))
(assert (= (x1324 (x1468 x937)) x937))
(assert (=> (<= x718 10000) (= (x1468 x718) (x550 x718))))
(assert (= x16 (x1324 (x1468 x16))))
(assert (x1089 x369))
(assert (= (x133 x248) (ite (= x248 x371) x749 (x139 x248))))
(assert (x1089 x1448))
(assert (= (x1324 (x597 x121 1)) (+ 1 (x1324 x121))))
(assert (x1089 x183))
(assert (= x975 (=> (and (= x1369 (x1162 x1155)) (= (x244 (x1468 274184521717934524641157099916833587206)) x870) (not (= 2764855426 x224)) (< x224 2960351575) (<= 0 x1369) (= x1155 (x189 (x1468 x1424) x1432 0)) (>= 1461501637330902918203684832716283019655932542975 x1424) (not (= 2743102681 x224)) (< 0 x870) (not (= 2690754053 x224)) (= (x189 (x1468 x183) (x550 5) 0) x1432) (<= x1369 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x224 2690754053)) (not (> 2293535753 x224)) (= x1369 x369) (= x224 2798343961)) (=> (and (= x369 x172) (= x163 x1027) (= x245 x482)) x37))))
(assert (= (x550 1889567281) (x1468 1889567281)))
(assert (x1089 x437))
(assert (=> (>= 10000 x152) (= (x1468 x152) (x550 x152))))
(assert (x1089 x1350))
(assert (=> (>= 10000 x499) (= (x1468 x499) (x550 x499))))
(assert (x1089 x924))
(assert (x1089 x685))
(assert (= true x218))
(assert (x1089 x1093))
(assert (= x862 (x1324 (x1468 x862))))
(assert (= (ite (and x1403 x272) (x1175 x806) (ite (and x415 (not x1403) x272) (x689 x806) (x936 x806))) (x1509 x806)))
(assert (x1089 x220))
(assert (x1089 x805))
(assert (= x476 (x1324 (x1468 x476))))
(assert (x1089 x937))
(assert (= (x1468 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x550 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x133 x401) (ite (= x401 x371) x749 (x139 x401))))
(assert (x1089 x1472))
(assert (x1089 x237))
(assert (x1089 x1333))
(assert (x1089 x641))
(assert (x693 x1005 x1045))
(assert (= (x133 x548) (ite (= x548 x371) x749 (x139 x548))))
(assert (x1089 x313))
(assert (x1089 x1379))
(assert (x1089 x1466))
(assert (x1089 x54))
(assert (x1089 x458))
(assert (= (x990 x1388) (ite (= x1388 x328) x370 (x992 x1388))))
(assert (= (x528 x1375) (ite (and x1087 x697 x258 (not x547) x289 x114) (x766 x1375) (ite (and x1087 (not x697) x258 x289 x114) (x216 x1375) (ite (and x289 (not x258) x1087 x114) (x1176 x1375) (ite (and (not x1087) x114 x289) (x73 x1375) (x365 x1375)))))))
(assert (=> (>= 10000 x1032) (= (x550 x1032) (x1468 x1032))))
(assert (x1089 x1450))
(assert (= (x865 x498) 0))
(assert (= (=> (= x1482 x284) x727) x305))
(assert (=> (<= x506 10000) (= (x550 x506) (x1468 x506))))
(assert (=> (>= 10000 x771) (= (x550 x771) (x1468 x771))))
(assert (= (ite (= x1177 x1076) x536 (x1062 x1177)) (x1044 x1177)))
(assert (x1089 x1518))
(assert (= (ite (and x939 x392) (x133 x1375) (ite (and x1301 (not x902) (not x392) x939) (x1294 x1375) (ite (and x939 (not x1301) (not x392)) (x133 x1375) (x625 x1375)))) (x974 x1375)))
(assert (= (x865 x633) 0))
(assert (x4 x335))
(assert (= (x1324 (x1468 x1215)) x1215))
(check-sat)
