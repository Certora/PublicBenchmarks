(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x347 0)) (((x1481 (x265 Int)) (x1504 (x142 x347) (x1190 Int)) (x288 (x182 x347) (x201 x347) (x1195 Int)))))
(declare-fun x698 () Int)
(declare-fun x906 () Int)
(declare-fun x727 () Int)
(declare-fun x523 () Bool)
(declare-fun x843 () x347)
(declare-fun x1264 () Int)
(declare-fun x473 () Int)
(declare-fun x1305 () x347)
(declare-fun x939 () x347)
(declare-fun x993 () Int)
(declare-fun x38 () Int)
(declare-fun x1462 () Int)
(declare-fun x1562 () Bool)
(declare-fun x84 () Bool)
(declare-fun x1106 () Int)
(declare-fun x731 () x347)
(declare-fun x1418 () Int)
(declare-fun x817 () Bool)
(declare-fun x499 () Int)
(declare-fun x381 () Int)
(declare-fun x521 () Bool)
(declare-fun x730 (Int) Int)
(declare-fun x1489 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x621 () Int)
(declare-fun x418 () Int)
(declare-fun x1169 () x347)
(declare-fun x254 () x347)
(declare-fun x825 () x347)
(declare-fun x1081 () Bool)
(declare-fun x186 () Int)
(declare-fun x431 () x347)
(declare-fun x1482 () Int)
(declare-fun x86 () Int)
(declare-fun x56 () Bool)
(declare-fun x391 () x347)
(declare-fun x627 () x347)
(declare-fun x1512 () Int)
(declare-fun x327 () Int)
(declare-fun x566 () Int)
(declare-fun x336 () x347)
(declare-fun x270 () Int)
(declare-fun x508 () x347)
(declare-fun x514 () Bool)
(declare-fun x1421 () Int)
(declare-fun x1416 () x347)
(declare-fun x1351 () Int)
(declare-fun x236 () Bool)
(declare-fun x1319 () Int)
(declare-fun x193 () Bool)
(declare-fun x1391 () Int)
(declare-fun x1006 () x347)
(declare-fun x4 () Int)
(declare-fun x1459 () Int)
(declare-fun x1150 () Bool)
(declare-fun x436 () Int)
(declare-fun x325 () Bool)
(declare-fun x863 () Bool)
(declare-fun x437 () Bool)
(declare-fun x1097 () Int)
(declare-fun x1002 () Bool)
(declare-fun x774 () x347)
(declare-fun x779 () Int)
(declare-fun x266 () Int)
(declare-fun x364 () Int)
(declare-fun x640 () Int)
(declare-fun x869 () Int)
(declare-fun x1272 () Bool)
(declare-fun x120 () Bool)
(declare-fun x703 () x347)
(declare-fun x599 (Int) Int)
(declare-fun x244 () Bool)
(declare-fun x308 () Int)
(declare-fun x1452 () x347)
(declare-fun x83 () x347)
(declare-fun x792 () Bool)
(declare-fun x815 () Int)
(declare-fun x351 () Int)
(declare-fun x1306 () Bool)
(declare-fun x884 () Int)
(declare-fun x720 () Bool)
(declare-fun x1483 () Int)
(declare-fun x74 () Int)
(declare-fun x1487 () Bool)
(declare-fun x1076 () x347)
(declare-fun x743 () Bool)
(declare-fun x113 () Int)
(declare-fun x1080 () Bool)
(declare-fun x213 () Int)
(declare-fun x467 () Int)
(declare-fun x1423 () Int)
(declare-fun x255 () Bool)
(declare-fun x421 () Bool)
(declare-fun x504 () Int)
(declare-fun x1021 () x347)
(declare-fun x1335 () x347)
(declare-fun x5 (Int) Int)
(declare-fun x661 () Bool)
(declare-fun x1291 () Int)
(declare-fun x329 () Int)
(declare-fun x273 () x347)
(declare-fun x1143 () x347)
(declare-fun x1404 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x168 () Bool)
(declare-fun x1145 () Int)
(declare-fun x823 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x269 () Bool)
(declare-fun x447 () Int)
(declare-fun x1518 () Int)
(declare-fun x1514 () Int)
(declare-fun x1093 () Bool)
(declare-fun x422 () Bool)
(declare-fun x1140 () x347)
(declare-fun x787 () Int)
(declare-fun x1196 () Bool)
(declare-fun x873 () x347)
(declare-fun x133 () Bool)
(declare-fun x23 () Int)
(declare-fun x1138 () Int)
(declare-fun x235 () Int)
(declare-fun x605 () Bool)
(declare-fun x783 () Bool)
(declare-fun x371 () x347)
(declare-fun x1188 () Int)
(declare-fun x439 () Int)
(declare-fun x173 () Int)
(declare-fun x700 () x347)
(declare-fun x1435 () Int)
(declare-fun x1297 () Bool)
(declare-fun x137 () Int)
(declare-fun x1329 () Int)
(declare-fun x796 (Int) Int)
(declare-fun x358 () Int)
(declare-fun x1214 () Int)
(declare-fun x1486 () Bool)
(declare-fun x104 () x347)
(declare-fun x1271 () Bool)
(declare-fun x887 () Int)
(declare-fun x114 () Int)
(declare-fun x740 () Bool)
(declare-fun x1178 () Int)
(declare-fun x858 () Bool)
(declare-fun x791 () Bool)
(declare-fun x275 () Bool)
(declare-fun x202 () Int)
(declare-fun x1343 () Bool)
(declare-fun x26 () Bool)
(declare-fun x370 () Bool)
(declare-fun x1369 () Int)
(declare-fun x1156 () Int)
(declare-fun x875 () Int)
(declare-fun x407 () Int)
(declare-fun x699 () Int)
(declare-fun x151 () Int)
(declare-fun x1014 () Int)
(declare-fun x930 () Bool)
(declare-fun x1160 () Int)
(declare-fun x1484 () Int)
(declare-fun x215 () Bool)
(declare-fun x1527 () Int)
(declare-fun x107 () Int)
(declare-fun x158 () Int)
(declare-fun x1358 () x347)
(declare-fun x1295 () x347)
(declare-fun x1111 () Bool)
(declare-fun x432 () Int)
(declare-fun x1114 () Int)
(declare-fun x955 () Bool)
(declare-fun x132 () Bool)
(declare-fun x413 () Int)
(declare-fun x1364 () Int)
(declare-fun x852 () Int)
(declare-fun x1239 (Int) Int)
(declare-fun x1073 () Int)
(declare-fun x1024 () x347)
(declare-fun x446 () Int)
(declare-fun x600 () Int)
(declare-fun x1133 () x347)
(declare-fun x1371 () Int)
(declare-fun x528 () Bool)
(declare-fun x247 () x347)
(declare-fun x50 () Int)
(declare-fun x1071 () x347)
(declare-fun x1252 () Bool)
(declare-fun x99 () Bool)
(declare-fun x334 () x347)
(declare-fun x312 () Int)
(declare-fun x386 () x347)
(declare-fun x862 (x347) Int)
(declare-fun x780 () Int)
(declare-fun x549 (Int) Int)
(declare-fun x1555 () Bool)
(declare-fun x953 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x874 () Bool)
(declare-fun x459 () Int)
(declare-fun x786 () Int)
(declare-fun x594 () Bool)
(declare-fun x701 () Int)
(declare-fun x630 () Int)
(declare-fun x1250 () Bool)
(declare-fun x143 () Int)
(declare-fun x1123 () x347)
(declare-fun x61 () Bool)
(declare-fun x624 () Bool)
(declare-fun x867 () Int)
(declare-fun x754 () Int)
(declare-fun x1340 () Int)
(declare-fun x95 () x347)
(declare-fun x976 () Bool)
(declare-fun x584 () Int)
(declare-fun x1558 () Int)
(declare-fun x415 () Int)
(declare-fun x1110 () Int)
(declare-fun x3 () Int)
(declare-fun x896 () Bool)
(declare-fun x1083 () Int)
(declare-fun x1251 () x347)
(declare-fun x643 () Int)
(declare-fun x82 () Int)
(declare-fun x1121 () x347)
(declare-fun x1436 () Int)
(declare-fun x910 () Bool)
(declare-fun x122 () Int)
(declare-fun x722 () x347)
(declare-fun x1472 () Bool)
(declare-fun x737 () Int)
(declare-fun x611 () Bool)
(declare-fun x757 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x555 () Int)
(declare-fun x1236 () Int)
(declare-fun x88 () Int)
(declare-fun x830 () Bool)
(declare-fun x994 (x347) Int)
(declare-fun x454 () Int)
(declare-fun x1069 () Bool)
(declare-fun x520 () Int)
(declare-fun x1476 () Bool)
(declare-fun x1211 () Int)
(declare-fun x1353 () Bool)
(declare-fun x223 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1281 () Int)
(declare-fun x928 () x347)
(declare-fun x866 () Int)
(declare-fun x784 (x347) Int)
(declare-fun x588 () Bool)
(declare-fun x773 () x347)
(declare-fun x1152 () Int)
(declare-fun x564 () Int)
(declare-fun x1304 (x347) Int)
(declare-fun x828 () Bool)
(declare-fun x531 () Int)
(declare-fun x392 () Int)
(declare-fun x591 () Int)
(declare-fun x240 () Int)
(declare-fun x578 () Bool)
(declare-fun x1385 () Int)
(declare-fun x1524 () Bool)
(declare-fun x634 () Bool)
(declare-fun x179 () Int)
(declare-fun x1345 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x128 () Int)
(declare-fun x1029 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x1471 () x347)
(declare-fun x1189 () x347)
(declare-fun x1151 () Int)
(declare-fun x1357 () Int)
(declare-fun x1415 () Int)
(declare-fun x1330 () Bool)
(declare-fun x540 () Int)
(declare-fun x1159 () Int)
(declare-fun x382 (Int) Int)
(declare-fun x190 () Int)
(declare-fun x1477 () Bool)
(declare-fun x709 (Int) Int)
(declare-fun x1447 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x480 () x347)
(declare-fun x801 () x347)
(declare-fun x1179 () Int)
(declare-fun x688 () Int)
(declare-fun x1262 () Bool)
(declare-fun x138 () Int)
(declare-fun x1035 () x347)
(declare-fun x692 () x347)
(declare-fun x551 () Int)
(declare-fun x362 () x347)
(declare-fun x988 () Bool)
(declare-fun x1522 () x347)
(declare-fun x1149 () Int)
(declare-fun x917 () Int)
(declare-fun x759 () Int)
(declare-fun x1141 () Bool)
(declare-fun x641 () Bool)
(declare-fun x1181 () Int)
(declare-fun x322 () Int)
(declare-fun x1294 () Int)
(declare-fun x1342 () x347)
(declare-fun x656 () Int)
(declare-fun x87 () Bool)
(declare-fun x530 () Int)
(declare-fun x680 () Int)
(declare-fun x888 () Int)
(declare-fun x899 () Bool)
(declare-fun x1284 () x347)
(declare-fun x558 () Bool)
(declare-fun x408 () Int)
(declare-fun x1365 () Int)
(declare-fun x1082 () Bool)
(declare-fun x174 () Int)
(declare-fun x821 () Int)
(declare-fun x428 () Int)
(declare-fun x1355 () Int)
(declare-fun x1229 () Int)
(declare-fun x449 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x1303 () x347)
(declare-fun x844 () Int)
(declare-fun x1557 () Bool)
(declare-fun x409 () x347)
(declare-fun x1453 () Int)
(declare-fun x596 () Int)
(declare-fun x916 () Int)
(declare-fun x1493 () Int)
(declare-fun x340 () Int)
(declare-fun x1165 () Int)
(declare-fun x942 () Bool)
(declare-fun x12 () Int)
(declare-fun x1086 () Int)
(declare-fun x1132 () Bool)
(declare-fun x961 () Bool)
(declare-fun x1401 () x347)
(declare-fun x1089 () Int)
(declare-fun x468 () x347)
(declare-fun x343 () Int)
(declare-fun x924 () Int)
(declare-fun x973 () Bool)
(declare-fun x1016 () Int)
(declare-fun x684 () x347)
(declare-fun x681 () Int)
(declare-fun x152 () Int)
(declare-fun x819 () Bool)
(declare-fun x217 () Int)
(declare-fun x846 () Int)
(declare-fun x1059 () Bool)
(declare-fun x927 () Int)
(declare-fun x1219 (x347) Int)
(declare-fun x1419 () x347)
(declare-fun x533 () Int)
(declare-fun x812 () Bool)
(declare-fun x228 () Int)
(declare-fun x1389 () Bool)
(declare-fun x1536 () Int)
(declare-fun x209 (Int) Int)
(declare-fun x683 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x622 () Bool)
(declare-fun x1166 () x347)
(declare-fun x1528 () Int)
(declare-fun x377 () Int)
(declare-fun x664 () Bool)
(declare-fun x319 () Int)
(declare-fun x1227 () Int)
(declare-fun x1366 () Bool)
(declare-fun x103 () Int)
(declare-fun x865 () Bool)
(declare-fun x448 () Int)
(declare-fun x424 () Bool)
(declare-fun x310 () Bool)
(declare-fun x481 () Int)
(declare-fun x1521 () Int)
(declare-fun x211 () Int)
(declare-fun x1228 () Int)
(declare-fun x384 () Int)
(declare-fun x834 () Bool)
(declare-fun x1457 () Int)
(declare-fun x952 () Bool)
(declare-fun x430 () Bool)
(declare-fun x482 () Bool)
(declare-fun x806 () x347)
(declare-fun x772 () x347)
(declare-fun x945 () Int)
(declare-fun x1473 () Int)
(declare-fun x713 () Int)
(declare-fun x1193 () Bool)
(declare-fun x157 () Bool)
(declare-fun x595 () Int)
(declare-fun x1105 () Int)
(declare-fun x79 () x347)
(declare-fun x738 () Bool)
(declare-fun x1502 () x347)
(declare-fun x822 () Int)
(declare-fun x982 () x347)
(declare-fun x403 () Int)
(declare-fun x1301 () Int)
(declare-fun x711 () Int)
(declare-fun x999 () Int)
(declare-fun x1210 () x347)
(declare-fun x1282 () Int)
(declare-fun x1 () Int)
(declare-fun x644 () Int)
(declare-fun x1296 () Int)
(declare-fun x466 () Bool)
(declare-fun x1549 () x347)
(declare-fun x980 () Int)
(declare-fun x1321 () Int)
(declare-fun x1344 () Int)
(declare-fun x581 () Int)
(declare-fun x345 () Bool)
(declare-fun x1547 (Int) Int)
(declare-fun x962 () x347)
(declare-fun x1474 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x1530 () Int)
(declare-fun x300 () Bool)
(declare-fun x260 () Int)
(declare-fun x299 () Bool)
(declare-fun x41 () Bool)
(declare-fun x442 () Int)
(declare-fun x1509 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x1454 () Int)
(declare-fun x267 () Int)
(declare-fun x406 () Int)
(declare-fun x195 () Int)
(declare-fun x135 () x347)
(declare-fun x1116 () Bool)
(declare-fun x966 () Bool)
(declare-fun x762 () Bool)
(declare-fun x1450 () Int)
(declare-fun x53 () Int)
(declare-fun x1007 () Bool)
(declare-fun x653 () Bool)
(declare-fun x1034 () x347)
(declare-fun x1437 () Int)
(declare-fun x148 () x347)
(declare-fun x1027 () x347)
(declare-fun x1175 () Int)
(declare-fun x1161 () Bool)
(declare-fun x350 () Int)
(declare-fun x768 () Int)
(declare-fun x826 () Bool)
(declare-fun x1060 () x347)
(declare-fun x606 () Bool)
(declare-fun x949 () Bool)
(declare-fun x848 () Int)
(declare-fun x1533 () Int)
(declare-fun x563 () Int)
(declare-fun x203 () x347)
(declare-fun x978 (Int) Int)
(declare-fun x636 () Int)
(declare-fun x1376 () Bool)
(declare-fun x1554 () x347)
(declare-fun x1377 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x918 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x36 () x347)
(declare-fun x433 () Bool)
(declare-fun x1513 () x347)
(declare-fun x316 () Int)
(declare-fun x1458 (x347) Int)
(declare-fun x907 () Int)
(declare-fun x90 () Int)
(declare-fun x1372 () Int)
(declare-fun x411 (Int) Int)
(declare-fun x1334 () Int)
(declare-fun x400 () Bool)
(declare-fun x526 () x347)
(declare-fun x1349 () Int)
(declare-fun x164 () Int)
(declare-fun x1375 () Bool)
(declare-fun x904 () Bool)
(declare-fun x573 () Bool)
(declare-fun x1417 () x347)
(declare-fun x836 () x347)
(declare-fun x547 () x347)
(declare-fun x1054 () Int)
(declare-fun x940 () Bool)
(declare-fun x57 () Bool)
(declare-fun x659 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x1441 () Int)
(declare-fun x1397 () Int)
(declare-fun x1030 (Int) Int)
(declare-fun x946 () Int)
(declare-fun x48 () x347)
(declare-fun x180 () Int)
(declare-fun x856 () Int)
(declare-fun x802 () Bool)
(declare-fun x570 () x347)
(declare-fun x576 () Int)
(declare-fun x1158 () Bool)
(declare-fun x712 () Int)
(declare-fun x575 () Int)
(declare-fun x613 () Int)
(declare-fun x257 () Bool)
(declare-fun x375 () Bool)
(declare-fun x567 () Bool)
(declare-fun x80 () x347)
(declare-fun x233 () Bool)
(declare-fun x367 () Bool)
(declare-fun x64 (Int) Int)
(declare-fun x608 () Bool)
(declare-fun x259 () Int)
(declare-fun x89 () Int)
(declare-fun x1331 () x347)
(declare-fun x1398 () Int)
(declare-fun x1496 () Int)
(declare-fun x1280 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x199 () Int)
(declare-fun x125 () Bool)
(declare-fun x868 () Int)
(declare-fun x1339 () Int)
(declare-fun x789 () Int)
(declare-fun x1490 () Int)
(declare-fun x1223 () x347)
(declare-fun x1023 () Int)
(declare-fun x785 () Int)
(declare-fun x589 () Bool)
(declare-fun x234 () Bool)
(declare-fun x1278 () Bool)
(declare-fun x1162 () Int)
(declare-fun x937 () Int)
(declare-fun x1168 () Int)
(declare-fun x1373 () Int)
(declare-fun x349 () x347)
(declare-fun x638 () Int)
(declare-fun x241 () Int)
(declare-fun x130 () x347)
(declare-fun x109 () Int)
(declare-fun x1022 () Bool)
(declare-fun x389 () Int)
(declare-fun x1104 () x347)
(declare-fun x690 () Bool)
(declare-fun x220 () x347)
(declare-fun x1129 () Int)
(declare-fun x654 () Int)
(declare-fun x766 () Int)
(declare-fun x556 () Bool)
(declare-fun x1268 () x347)
(declare-fun x359 () Int)
(declare-fun x990 () Bool)
(declare-fun x968 () Bool)
(declare-fun x885 () Int)
(declare-fun x91 (x347) Int)
(declare-fun x477 () Bool)
(declare-fun x121 () x347)
(declare-fun x1456 () Bool)
(declare-fun x733 () x347)
(declare-fun x458 () x347)
(declare-fun x43 () Int)
(declare-fun x1231 () Bool)
(declare-fun x1455 (Int) Int)
(declare-fun x671 () x347)
(declare-fun x1325 () x347)
(declare-fun x877 () Bool)
(declare-fun x78 () Bool)
(declare-fun x1208 () Int)
(declare-fun x1307 () Int)
(declare-fun x900 () Int)
(declare-fun x385 () x347)
(declare-fun x614 () Int)
(declare-fun x1042 (Int) Int)
(declare-fun x694 () Int)
(declare-fun x14 () Bool)
(declare-fun x905 () x347)
(declare-fun x39 () Bool)
(declare-fun x1409 () Int)
(declare-fun x399 () Int)
(declare-fun x106 () Int)
(declare-fun x1395 () Int)
(declare-fun x908 () x347)
(declare-fun x1354 () Bool)
(declare-fun x756 () x347)
(declare-fun x958 () x347)
(declare-fun x245 () x347)
(declare-fun x289 () Int)
(declare-fun x160 () Int)
(declare-fun x695 () Int)
(declare-fun x536 () Int)
(declare-fun x387 () Int)
(declare-fun x1478 () Int)
(declare-fun x1192 () x347)
(declare-fun x515 () Int)
(declare-fun x108 () Int)
(declare-fun x435 () Int)
(declare-fun x1439 () Bool)
(declare-fun x426 () Int)
(declare-fun x947 (Int Int) Int)
(declare-fun x1480 () Int)
(declare-fun x1013 () x347)
(declare-fun x516 () x347)
(declare-fun x1400 () x347)
(declare-fun x293 () Bool)
(declare-fun x763 () Int)
(declare-fun x569 () x347)
(declare-fun x987 () Int)
(declare-fun x1026 () Int)
(declare-fun x1025 () Bool)
(declare-fun x1298 () x347)
(declare-fun x261 () Bool)
(declare-fun x744 () Int)
(declare-fun x645 () Int)
(declare-fun x760 () Bool)
(declare-fun x639 () x347)
(declare-fun x1438 () Int)
(declare-fun x585 () Int)
(declare-fun x111 () Int)
(declare-fun x7 () Int)
(declare-fun x519 () Int)
(declare-fun x309 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x60 () Int)
(declare-fun x1501 () Bool)
(declare-fun x507 () Int)
(declare-fun x837 () Int)
(declare-fun x1088 () Bool)
(declare-fun x617 () Int)
(declare-fun x835 () Bool)
(declare-fun x919 () Int)
(declare-fun x1383 () Int)
(declare-fun x290 () Bool)
(declare-fun x304 () Bool)
(declare-fun x662 () Int)
(declare-fun x139 () Int)
(declare-fun x73 () Int)
(declare-fun x541 () Bool)
(declare-fun x915 (Int) Int)
(declare-fun x175 () Bool)
(declare-fun x323 () Int)
(declare-fun x222 () Bool)
(declare-fun x850 () Int)
(declare-fun x1359 () Int)
(declare-fun x647 () x347)
(declare-fun x592 () Bool)
(declare-fun x296 () x347)
(declare-fun x356 () Int)
(declare-fun x935 () Int)
(declare-fun x1505 () Int)
(declare-fun x1277 () Int)
(declare-fun x134 () Bool)
(declare-fun x440 () Bool)
(declare-fun x463 () Int)
(declare-fun x898 () Int)
(declare-fun x725 () Bool)
(declare-fun x21 () Int)
(declare-fun x1144 () Int)
(declare-fun x404 () Bool)
(declare-fun x1448 () Int)
(declare-fun x485 () Int)
(declare-fun x451 () Bool)
(declare-fun x460 () x347)
(declare-fun x1479 () Bool)
(declare-fun x361 () Int)
(declare-fun x936 () Int)
(declare-fun x921 () Bool)
(declare-fun x798 () Int)
(declare-fun x544 () Int)
(declare-fun x187 () Bool)
(declare-fun x548 () Bool)
(declare-fun x964 () Bool)
(declare-fun x1500 () Int)
(declare-fun x811 () Int)
(declare-fun x797 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x742 () Bool)
(declare-fun x983 () Bool)
(declare-fun x571 () Int)
(declare-fun x1537 () Int)
(declare-fun x1191 () Bool)
(declare-fun x1526 () Int)
(declare-fun x840 () Int)
(declare-fun x715 () Int)
(declare-fun x922 () Int)
(declare-fun x776 () Int)
(declare-fun x894 (Int) Int)
(declare-fun x339 () Int)
(declare-fun x1461 () Int)
(declare-fun x1426 () Bool)
(declare-fun x252 () x347)
(declare-fun x18 () Int)
(declare-fun x1049 () Int)
(declare-fun x849 () Int)
(declare-fun x663 () Bool)
(declare-fun x1070 () Int)
(declare-fun x607 () Int)
(declare-fun x194 () Bool)
(declare-fun x357 () x347)
(declare-fun x747 () Bool)
(declare-fun x172 () Bool)
(declare-fun x177 () Bool)
(declare-fun x77 () Bool)
(declare-fun x373 () Int)
(declare-fun x72 () Bool)
(declare-fun x461 (x347) Int)
(declare-fun x587 () Int)
(declare-fun x612 (x347) Int)
(declare-fun x1153 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x17 () x347)
(declare-fun x1300 () Int)
(declare-fun x1393 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x1270 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x1087 () x347)
(declare-fun x457 () x347)
(declare-fun x1075 () Int)
(declare-fun x728 () Bool)
(declare-fun x827 () Int)
(declare-fun x268 () Int)
(declare-fun x1315 () Int)
(declare-fun x165 () Bool)
(declare-fun x580 () Int)
(declare-fun x657 () Bool)
(declare-fun x824 () Int)
(declare-fun x365 () Int)
(declare-fun x1019 () Bool)
(declare-fun x1571 () Int)
(declare-fun x552 () Bool)
(declare-fun x263 () Int)
(declare-fun x55 () Bool)
(declare-fun x1099 () Int)
(declare-fun x513 () Bool)
(declare-fun x1560 () Int)
(declare-fun x1215 () Int)
(declare-fun x967 () Int)
(declare-fun x188 () Int)
(declare-fun x1253 () Bool)
(declare-fun x1226 () Bool)
(declare-fun x951 () Bool)
(declare-fun x11 () Int)
(declare-fun x47 () Bool)
(declare-fun x670 () Bool)
(declare-fun x1220 () Int)
(declare-fun x1248 () Int)
(declare-fun x383 () x347)
(declare-fun x355 (x347) Int)
(declare-fun x1516 () x347)
(declare-fun x749 () Int)
(declare-fun x717 () Int)
(declare-fun x145 () Bool)
(declare-fun x212 () Bool)
(declare-fun x623 () Int)
(declare-fun x1148 () Int)
(declare-fun x1535 () Int)
(declare-fun x67 () x347)
(declare-fun x1299 () Int)
(declare-fun x934 () x347)
(declare-fun x19 (Int Int) Int)
(declare-fun x281 () Int)
(declare-fun x1442 () Bool)
(declare-fun x1311 () Int)
(declare-fun x376 () x347)
(declare-fun x1540 () Int)
(declare-fun x1048 () Bool)
(declare-fun x489 () Bool)
(declare-fun x1096 () Int)
(declare-fun x301 () Int)
(declare-fun x1157 () x347)
(declare-fun x1508 () x347)
(declare-fun x68 () Bool)
(declare-fun x204 () Int)
(declare-fun x1184 () Int)
(declare-fun x1406 () Bool)
(declare-fun x1567 () x347)
(declare-fun x997 () Bool)
(declare-fun x1113 () Int)
(declare-fun x1011 () Bool)
(declare-fun x1091 () Int)
(declare-fun x1207 () Bool)
(declare-fun x568 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x453 () Int)
(declare-fun x1017 () Int)
(declare-fun x831 () Bool)
(declare-fun x1241 () x347)
(declare-fun x597 () Int)
(declare-fun x1135 () Int)
(declare-fun x1216 () Int)
(declare-fun x803 () x347)
(declare-fun x1532 (Int) Int)
(declare-fun x141 () Int)
(declare-fun x1010 () Bool)
(declare-fun x1503 () x347)
(declare-fun x524 () Int)
(declare-fun x1139 () Int)
(declare-fun x631 () Bool)
(declare-fun x131 () x347)
(declare-fun x813 () x347)
(declare-fun x979 () Int)
(declare-fun x1032 () Int)
(declare-fun x912 () Int)
(declare-fun x306 () x347)
(declare-fun x932 () Bool)
(declare-fun x493 () Int)
(declare-fun x258 () Bool)
(declare-fun x971 () Int)
(declare-fun x1003 () Int)
(declare-fun x34 () Int)
(declare-fun x162 () Int)
(declare-fun x1498 () Int)
(declare-fun x1045 () Int)
(declare-fun x136 () x347)
(declare-fun x224 () Int)
(declare-fun x517 () Int)
(declare-fun x1249 () Int)
(declare-fun x394 (x347) Int)
(declare-fun x718 () Bool)
(declare-fun x926 () x347)
(declare-fun x1068 () Bool)
(declare-fun x1245 () x347)
(declare-fun x565 () x347)
(declare-fun x320 () x347)
(declare-fun x1390 () Int)
(declare-fun x417 () Int)
(declare-fun x668 (x347) Int)
(declare-fun x770 () Int)
(declare-fun x1556 () x347)
(declare-fun x256 () Int)
(declare-fun x1525 () Bool)
(declare-fun x793 () Bool)
(declare-fun x35 () Int)
(declare-fun x535 () Bool)
(declare-fun x66 () Int)
(declare-fun x22 () Int)
(declare-fun x1466 () Int)
(declare-fun x1063 () Int)
(declare-fun x249 () x347)
(declare-fun x845 () Bool)
(declare-fun x788 () Bool)
(declare-fun x882 () Int)
(declare-fun x30 () Bool)
(declare-fun x735 () Int)
(declare-fun x724 () Bool)
(declare-fun x328 () x347)
(declare-fun x390 () Int)
(declare-fun x677 () Int)
(declare-fun x46 () Int)
(declare-fun x693 () Int)
(declare-fun x746 () Int)
(declare-fun x189 () Int)
(declare-fun x445 () Int)
(declare-fun x864 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x782 () Int)
(declare-fun x326 () Int)
(declare-fun x944 () x347)
(declare-fun x1412 () Int)
(declare-fun x1289 () x347)
(declare-fun x313 () x347)
(declare-fun x1408 () Bool)
(declare-fun x529 (Int) Int)
(declare-fun x1326 (x347) Int)
(declare-fun x115 () Bool)
(declare-fun x633 () Int)
(declare-fun x1001 () Int)
(declare-fun x216 () Int)
(declare-fun x1092 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x878 () Int)
(declare-fun x1000 () Int)
(declare-fun x441 () x347)
(declare-fun x210 () Int)
(declare-fun x649 () Int)
(declare-fun x502 () Int)
(declare-fun x1322 () Int)
(declare-fun x71 () Bool)
(declare-fun x75 () Int)
(declare-fun x24 () Int)
(declare-fun x1120 () x347)
(declare-fun x1302 () Int)
(declare-fun x427 () Int)
(declare-fun x1380 () x347)
(declare-fun x1333 () Int)
(declare-fun x1368 () Bool)
(declare-fun x331 () Int)
(declare-fun x651 () Int)
(declare-fun x1424 () Int)
(declare-fun x553 () Int)
(declare-fun x559 () Bool)
(declare-fun x161 () x347)
(declare-fun x557 () Int)
(declare-fun x1410 () Bool)
(declare-fun x1388 () Int)
(declare-fun x1309 () Bool)
(declare-fun x518 (Int) Int)
(declare-fun x667 () Bool)
(declare-fun x294 () Bool)
(declare-fun x92 () Int)
(declare-fun x317 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x1224 () Int)
(declare-fun x1465 () Int)
(declare-fun x886 () Int)
(declare-fun x736 () x347)
(declare-fun x871 () Bool)
(declare-fun x368 () Bool)
(declare-fun x665 () Int)
(declare-fun x872 () Int)
(declare-fun x675 () Int)
(declare-fun x1061 () Bool)
(declare-fun x686 () Bool)
(declare-fun x986 () Int)
(declare-fun x752 (x347) Int)
(declare-fun x666 () Int)
(declare-fun x42 () Bool)
(declare-fun x851 () Int)
(declare-fun x800 () Int)
(declare-fun x117 () Int)
(declare-fun x1460 () Int)
(declare-fun x277 () Bool)
(declare-fun x909 () Int)
(declare-fun x1164 () Int)
(declare-fun x110 () Int)
(declare-fun x648 () Int)
(declare-fun x176 () x347)
(declare-fun x853 () Int)
(declare-fun x923 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x1313 () x347)
(declare-fun x1485 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x127 () Int)
(declare-fun x1446 () Bool)
(declare-fun x1499 () Int)
(declare-fun x805 () Bool)
(declare-fun x1267 () x347)
(declare-fun x450 () Int)
(declare-fun x1350 () Int)
(declare-fun x52 (x347) Int)
(declare-fun x1341 () Bool)
(declare-fun x550 () Bool)
(declare-fun x344 () Int)
(declare-fun x8 () x347)
(declare-fun x832 () Int)
(declare-fun x1199 () Int)
(declare-fun x1488 () Int)
(declare-fun x1051 () Int)
(declare-fun x1411 () x347)
(declare-fun x1520 () Int)
(declare-fun x1286 () Int)
(declare-fun x1163 () Bool)
(declare-fun x579 () Bool)
(declare-fun x1379 (x347) Int)
(declare-fun x1314 () Int)
(declare-fun x981 () x347)
(declare-fun x1470 () Bool)
(declare-fun x167 () Bool)
(declare-fun x1327 () Int)
(declare-fun x27 () x347)
(declare-fun x761 () Int)
(declare-fun x799 () Int)
(declare-fun x1378 () Int)
(declare-fun x1126 () Int)
(declare-fun x1523 () Int)
(declare-fun x963 () Int)
(declare-fun x537 () x347)
(declare-fun x995 () Int)
(declare-fun x652 () Bool)
(declare-fun x751 () Bool)
(declare-fun x696 () Int)
(declare-fun x338 () Bool)
(declare-fun x1346 () Int)
(declare-fun x59 () Int)
(declare-fun x25 () Int)
(declare-fun x200 () Bool)
(declare-fun x484 () x347)
(declare-fun x1553 () Bool)
(declare-fun x284 () Int)
(declare-fun x401 () Int)
(declare-fun x1414 () Int)
(declare-fun x739 () x347)
(declare-fun x1463 () x347)
(declare-fun x841 () Int)
(declare-fun x505 () x347)
(declare-fun x318 () Int)
(declare-fun x855 () Int)
(declare-fun x238 () x347)
(declare-fun x996 () Int)
(declare-fun x883 () Int)
(declare-fun x901 () Int)
(declare-fun x755 () Int)
(declare-fun x1276 () Bool)
(declare-fun x925 () Bool)
(declare-fun x171 () Int)
(declare-fun x538 () Int)
(declare-fun x527 () Int)
(declare-fun x434 () Int)
(declare-fun x76 () Int)
(declare-fun x348 () Bool)
(declare-fun x1275 () x347)
(declare-fun x1043 (Int) Int)
(declare-fun x1433 () Int)
(declare-fun x1046 () Int)
(declare-fun x741 () x347)
(declare-fun x615 () Int)
(declare-fun x1103 () Int)
(declare-fun x764 () Int)
(declare-fun x506 () Int)
(declare-fun x1402 () Int)
(declare-fun x561 () Int)
(declare-fun x1146 () Int)
(declare-fun x1212 () Int)
(declare-fun x1240 () Bool)
(declare-fun x1050 () Int)
(declare-fun x880 () Int)
(declare-fun x861 () x347)
(declare-fun x170 () Int)
(declare-fun x560 () Int)
(declare-fun x98 () Bool)
(declare-fun x248 () Bool)
(declare-fun x219 () Int)
(declare-fun x1020 () x347)
(declare-fun x1381 () Int)
(declare-fun x231 () Int)
(declare-fun x126 () Bool)
(declare-fun x1545 () x347)
(declare-fun x895 () Bool)
(declare-fun x1256 () x347)
(declare-fun x682 () Bool)
(declare-fun x1100 () Int)
(declare-fun x1101 () Bool)
(declare-fun x302 () x347)
(declare-fun x1564 () x347)
(declare-fun x1036 () Int)
(declare-fun x745 () Bool)
(declare-fun x1279 () Int)
(declare-fun x15 () Int)
(declare-fun x969 () Bool)
(declare-fun x620 () Bool)
(declare-fun x374 () Int)
(declare-fun x809 () x347)
(declare-fun x278 (Int) Int)
(declare-fun x532 () Bool)
(declare-fun x970 () Bool)
(declare-fun x1420 (x347) Int)
(declare-fun x33 () Int)
(declare-fun x933 () Bool)
(declare-fun x534 () Int)
(declare-fun x51 () Bool)
(declare-fun x1124 () Int)
(declare-fun x1098 () Int)
(declare-fun x975 () Bool)
(declare-fun x1387 () Int)
(declare-fun x562 () Int)
(declare-fun x1317 () x347)
(declare-fun x419 () Bool)
(declare-fun x893 () Int)
(declare-fun x1009 () Bool)
(declare-fun x31 () Int)
(declare-fun x1109 () Int)
(declare-fun x251 () Int)
(declare-fun x197 () Int)
(declare-fun x998 (x347) Int)
(declare-fun x423 () Int)
(declare-fun x1115 () Int)
(declare-fun x1065 () Int)
(declare-fun x1085 () Int)
(declare-fun x1273 () Int)
(declare-fun x1405 () x347)
(declare-fun x1370 () Int)
(declare-fun x452 () Int)
(declare-fun x1095 (x347) Int)
(declare-fun x471 () Int)
(declare-fun x1074 () Bool)
(declare-fun x689 () Int)
(declare-fun x207 () Int)
(declare-fun x881 () Int)
(declare-fun x314 () Int)
(declare-fun x769 () Int)
(declare-fun x1266 () Int)
(declare-fun x807 () Bool)
(declare-fun x44 () Bool)
(declare-fun x414 () x347)
(declare-fun x829 () Bool)
(declare-fun x218 () Int)
(declare-fun x957 () Int)
(declare-fun x274 () Int)
(declare-fun x492 () Bool)
(declare-fun x1221 () Int)
(declare-fun x1235 () Int)
(declare-fun x879 () x347)
(declare-fun x208 () Int)
(declare-fun x890 () Int)
(declare-fun x1187 () Bool)
(declare-fun x420 () Bool)
(declare-fun x1356 () Int)
(declare-fun x397 () Int)
(declare-fun x674 () x347)
(declare-fun x539 () Int)
(declare-fun x1394 () Int)
(declare-fun x972 () Int)
(declare-fun x795 () Int)
(declare-fun x239 () Int)
(declare-fun x984 () Int)
(declare-fun x1033 () Bool)
(declare-fun x708 () Int)
(declare-fun x1422 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x1570 () x347)
(declare-fun x1008 () Int)
(declare-fun x1382 (Int) Int)
(declare-fun x1041 () Int)
(declare-fun x582 () x347)
(declare-fun x1550 () x347)
(declare-fun x920 () Bool)
(declare-fun x992 () Bool)
(declare-fun x1137 () x347)
(declare-fun x1541 () x347)
(declare-fun x1177 () x347)
(declare-fun x723 () x347)
(declare-fun x292 () Bool)
(declare-fun x496 () Int)
(declare-fun x1173 () Int)
(declare-fun x1119 () Int)
(declare-fun x1209 () Int)
(declare-fun x775 () Int)
(declare-fun x503 () Int)
(declare-fun x280 () Bool)
(declare-fun x396 () Int)
(declare-fun x1232 () Int)
(declare-fun x372 () Int)
(declare-fun x1222 () Bool)
(declare-fun x97 () Int)
(declare-fun x272 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x1427 () Int)
(declare-fun x324 () Int)
(declare-fun x590 () Bool)
(declare-fun x1205 (Int) Int)
(declare-fun x305 () Int)
(declare-fun x525 () Int)
(declare-fun x753 () Bool)
(declare-fun x380 () Bool)
(declare-fun x511 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x1440 () Int)
(declare-fun x1290 () Int)
(declare-fun x707 () Int)
(declare-fun x297 () x347)
(declare-fun x1407 () Bool)
(declare-fun x1217 (x347) Int)
(declare-fun x1430 () x347)
(declare-fun x410 () Bool)
(declare-fun x1542 () x347)
(declare-fun x721 () x347)
(declare-fun x697 (x347) Int)
(declare-fun x1203 () Int)
(declare-fun x673 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x475 () Bool)
(declare-fun x479 () Int)
(declare-fun x554 () x347)
(declare-fun x989 () Bool)
(declare-fun x650 () Int)
(declare-fun x854 () Int)
(declare-fun x498 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x470 () Bool)
(declare-fun x478 () Int)
(declare-fun x346 () x347)
(declare-fun x691 () x347)
(declare-fun x710 () Int)
(declare-fun x1142 () Int)
(declare-fun x112 () Int)
(declare-fun x225 () Int)
(declare-fun x646 () Int)
(declare-fun x105 () x347)
(declare-fun x847 () Int)
(declare-fun x625 () Int)
(declare-fun x69 () Int)
(declare-fun x1287 (x347) Int)
(declare-fun x147 () Bool)
(declare-fun x876 () Int)
(declare-fun x1052 () Int)
(declare-fun x402 () Int)
(declare-fun x335 () Bool)
(declare-fun x230 () Int)
(declare-fun x1038 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x672 () Bool)
(declare-fun x839 () Bool)
(declare-fun x658 () Int)
(declare-fun x425 () Int)
(declare-fun x1122 () Int)
(declare-fun x271 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x232 () Bool)
(declare-fun x1517 () Int)
(declare-fun x1367 () x347)
(declare-fun x20 () Int)
(declare-fun x808 () x347)
(declare-fun x149 () Bool)
(declare-fun x1055 () Int)
(declare-fun x1225 () Int)
(declare-fun x366 () Bool)
(declare-fun x62 () Int)
(declare-fun x1263 () Bool)
(declare-fun x781 () Int)
(declare-fun x714 () Bool)
(declare-fun x393 () Bool)
(declare-fun x282 () Int)
(declare-fun x903 () Bool)
(declare-fun x1425 () x347)
(declare-fun x214 () Int)
(declare-fun x295 () Int)
(declare-fun x1243 () Bool)
(declare-fun x1197 () Int)
(declare-fun x1259 () Bool)
(declare-fun x913 () Bool)
(declare-fun x1067 () x347)
(declare-fun x1186 () Bool)
(declare-fun x497 () Int)
(declare-fun x379 () Bool)
(declare-fun x704 () x347)
(declare-fun x369 () Int)
(declare-fun x777 () Int)
(declare-fun x85 () Int)
(declare-fun x1005 () Bool)
(declare-fun x100 () Int)
(declare-fun x246 () Int)
(declare-fun x96 () Int)
(declare-fun x40 () Int)
(declare-fun x870 () x347)
(declare-fun x1079 () x347)
(declare-fun x469 () Int)
(declare-fun x1047 () Bool)
(declare-fun x405 () Int)
(declare-fun x618 () Int)
(declare-fun x1546 () x347)
(declare-fun x1332 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x250 () Int)
(declare-fun x476 () x347)
(declare-fun x1511 () Int)
(declare-fun x123 () Bool)
(declare-fun x264 () Int)
(declare-fun x58 () Bool)
(declare-fun x276 () Bool)
(declare-fun x192 () Int)
(declare-fun x455 () Int)
(declare-fun x629 () Int)
(declare-fun x959 () Bool)
(declare-fun x1534 () x347)
(declare-fun x676 () Int)
(declare-fun x1413 () Int)
(declare-fun x818 () Int)
(declare-fun x842 () x347)
(declare-fun x510 () Bool)
(declare-fun x616 () Bool)
(declare-fun x1507 () Int)
(declare-fun x1312 () Bool)
(declare-fun x169 () Int)
(declare-fun x685 () x347)
(declare-fun x816 () Int)
(declare-fun x1134 () Int)
(declare-fun x184 () Bool)
(declare-fun x206 (Int) Int)
(declare-fun x140 () x347)
(declare-fun x495 () Int)
(declare-fun x262 () Int)
(declare-fun x1431 () Int)
(declare-fun x719 () Int)
(declare-fun x509 () Bool)
(declare-fun x948 () Bool)
(declare-fun x838 () Bool)
(declare-fun x360 () Bool)
(declare-fun x669 () Bool)
(declare-fun x810 () x347)
(declare-fun x456 () Int)
(declare-fun x1058 () Int)
(declare-fun x583 () Int)
(declare-fun x438 () Int)
(declare-fun x1118 () x347)
(declare-fun x985 () Int)
(declare-fun x483 () x347)
(declare-fun x354 () Int)
(declare-fun x315 () Bool)
(declare-fun x572 () Int)
(declare-fun x965 () Int)
(declare-fun x1234 () Int)
(declare-fun x602 () Int)
(declare-fun x1238 () x347)
(declare-fun x914 () Int)
(declare-fun x16 () Bool)
(declare-fun x332 () Bool)
(declare-fun x10 () Bool)
(declare-fun x1130 () Int)
(declare-fun x388 () Int)
(declare-fun x1337 () Int)
(declare-fun x1172 () x347)
(declare-fun x226 () Int)
(declare-fun x729 () Int)
(declare-fun x1171 () Int)
(declare-fun x859 () Bool)
(declare-fun x166 () Int)
(declare-fun x1258 () Int)
(declare-fun x748 () Int)
(declare-fun x1468 () Int)
(declare-fun x1434 () Bool)
(declare-fun x129 () Bool)
(declare-fun x598 () Int)
(declare-fun x311 () x347)
(declare-fun x1565 () Bool)
(declare-fun x1260 (x347) Int)
(declare-fun x1257 () Int)
(declare-fun x1510 () Bool)
(declare-fun x542 () x347)
(declare-fun x1028 () Int)
(declare-fun x1563 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x37 () x347)
(declare-fun x716 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x601 () Bool)
(declare-fun x1568 () x347)
(declare-fun x283 () Bool)
(declare-fun x577 () x347)
(declare-fun x1561 () x347)
(declare-fun x1491 () Int)
(declare-fun x63 () Int)
(declare-fun x205 () Int)
(declare-fun x191 () x347)
(declare-fun x155 () Int)
(declare-fun x198 () Bool)
(declare-fun x642 () Int)
(declare-fun x118 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x543 () x347)
(declare-fun x1108 () Int)
(declare-fun x804 () Bool)
(declare-fun x1018 () Int)
(declare-fun x522 () Int)
(declare-fun x286 () Bool)
(declare-fun x1386 () Int)
(declare-fun x938 () Bool)
(declare-fun x144 () Bool)
(declare-fun x352 () Int)
(declare-fun x1310 () Bool)
(declare-fun x956 () Int)
(declare-fun x398 () Int)
(declare-fun x472 () Int)
(declare-fun x1323 () Bool)
(declare-fun x1064 () Int)
(declare-fun x444 () Bool)
(declare-fun x181 () Int)
(declare-fun x610 () Bool)
(declare-fun x897 () x347)
(declare-fun x1551 () Int)
(declare-fun x183 () x347)
(declare-fun x911 () Int)
(declare-fun x1015 () Bool)
(declare-fun x609 () Int)
(declare-fun x960 (x347) Int)
(declare-fun x1352 () Int)
(declare-fun x604 () Int)
(declare-fun x285 () Bool)
(declare-fun x1117 () Int)
(declare-fun x159 () Int)
(declare-fun x465 () Int)
(declare-fun x196 () Int)
(declare-fun x1316 () Bool)
(declare-fun x1057 () Int)
(declare-fun x1552 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x185 () Int)
(declare-fun x1218 () Int)
(declare-fun x500 () Int)
(declare-fun x931 () Int)
(declare-fun x1443 () x347)
(declare-fun x702 () Int)
(declare-fun x857 () Int)
(declare-fun x705 () Int)
(declare-fun x291 () Bool)
(declare-fun x1039 () Int)
(declare-fun x1324 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x1125 () Int)
(declare-fun x1084 () Int)
(declare-fun x333 () Int)
(declare-fun x1308 () Int)
(declare-fun x1403 () Int)
(declare-fun x950 () Int)
(declare-fun x229 () Bool)
(declare-fun x54 () Int)
(declare-fun x1269 () Bool)
(declare-fun x474 () x347)
(declare-fun x1336 () Int)
(declare-fun x65 () Bool)
(declare-fun x101 () Int)
(declare-fun x501 (Int) x347)
(declare-fun x253 () Bool)
(declare-fun x512 () Bool)
(declare-fun x490 () Bool)
(declare-fun x119 () Int)
(declare-fun x70 () Int)
(declare-fun x814 () Bool)
(declare-fun x1182 () Int)
(declare-fun x1469 () Int)
(declare-fun x929 () Int)
(declare-fun x635 () Int)
(declare-fun x891 () Bool)
(declare-fun x1037 () Int)
(declare-fun x307 () Bool)
(declare-fun x395 () Bool)
(declare-fun x242 () Bool)
(declare-fun x1230 () Int)
(declare-fun x378 () Bool)
(declare-fun x45 () Int)
(declare-fun x1147 () x347)
(declare-fun x767 () Bool)
(declare-fun x49 () Bool)
(declare-fun x732 () Bool)
(declare-fun x1363 () Int)
(declare-fun x574 () Bool)
(declare-fun x889 () Bool)
(define-fun x954 ((x347 x347) (x116 Int)) x347 (ite ((_ is x1504) x347) (x1504 (x142 x347) (+ (x1190 x347) x116)) (ite ((_ is x288) x347) (x288 (x182 x347) (x201 x347) (+ x116 (x1195 x347))) (x1481 (+ x116 (x265 x347))))))
(define-fun x29 ((x632 Int)) Int (ite (and (< x632 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x632)) x632 (- x632 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x860 ((x632 Int)) Int (ite (and (>= x632 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x632)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x632) x632))
(define-fun x734 ((x1506 Int)) Bool (and (< x1506 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1506 0)))
(define-fun x586 ((x1506 Int)) Bool (and (= (x19 x1506 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1506) (= (x19 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1506) x1506)))
(define-fun x243 ((x1506 Int)) Bool (and (= 0 (x19 0 x1506)) (= (x19 x1506 0) 0)))
(define-fun x363 ((x1506 Int)) Bool (= (x19 x1506 x1506) x1506))
(define-fun x303 ((x1506 Int)) Bool (and (x243 x1506) (x586 x1506) (x363 x1506)))
(define-fun x1102 ((x1506 Int)) Bool (= (x19 1461501637330902918203684832716283019655932542975 x1506) (x19 1461501637330902918203684832716283019655932542975 (x19 1461501637330902918203684832716283019655932542975 x1506))))
(define-fun x124 ((x1506 Int)) Bool (=> (and (>= x1506 0) (> 1461501637330902918203684832716283019655932542976 x1506)) (= (x19 1461501637330902918203684832716283019655932542975 x1506) x1506)))
(define-fun x1318 ((x1506 Int)) Bool (=> (= x1506 (x19 1461501637330902918203684832716283019655932542975 x1506)) (and (> 1461501637330902918203684832716283019655932542976 x1506) (<= 0 x1506))))
(define-fun x9 ((x1506 Int)) Bool (=> (and (< x1506 2923003274661805836407369665432566039311865085952) (>= x1506 1461501637330902918203684832716283019655932542976)) (= (x19 1461501637330902918203684832716283019655932542975 x1506) (- x1506 1461501637330902918203684832716283019655932542976))))
(define-fun x1543 ((x1506 Int) (x1090 Int)) Bool (and (>= x1090 0) (= x1506 (+ (x19 1461501637330902918203684832716283019655932542975 x1506) (* 1461501637330902918203684832716283019655932542976 x1090)))))
(define-fun x706 ((x1506 Int) (x102 Int)) Bool (and (x124 x1506) (x1102 x1506) (x1318 x1506) (x1543 x1506 x102) (x9 x1506)))
(define-fun x790 ((x1506 Int) (x1090 Int)) Bool (= (x19 x1090 x1506) (x19 x1506 x1090)))
(define-fun x1053 ((x1506 Int) (x1090 Int)) Bool (and (<= 0 (x19 x1506 x1090)) (=> (<= 0 x1506) (<= (x19 x1506 x1090) x1506)) (=> (<= 0 x1090) (<= (x19 x1506 x1090) x1090))))
(define-fun x1538 ((x1506 Int) (x1090 Int)) Bool (and (x1053 x1506 x1090) (x790 x1506 x1090)))
(define-fun x679 ((x1506 Int) (x102 Int)) Bool (and (x1538 x1506 1461501637330902918203684832716283019655932542975) (x706 x1506 x102)))
(define-fun x156 ((x1506 Int)) Bool (= (x19 26959946667150639794667015087019630673637144422540572481103610249215 (x19 26959946667150639794667015087019630673637144422540572481103610249215 x1506)) (x19 26959946667150639794667015087019630673637144422540572481103610249215 x1506)))
(define-fun x163 ((x1506 Int)) Bool (=> (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x1506) (>= x1506 0)) (= (x19 26959946667150639794667015087019630673637144422540572481103610249215 x1506) x1506)))
(define-fun x1246 ((x1506 Int)) Bool (=> (= (x19 26959946667150639794667015087019630673637144422540572481103610249215 x1506) x1506) (and (< x1506 26959946667150639794667015087019630673637144422540572481103610249216) (>= x1506 0))))
(define-fun x1176 ((x1506 Int)) Bool (=> (and (<= 26959946667150639794667015087019630673637144422540572481103610249216 x1506) (> 53919893334301279589334030174039261347274288845081144962207220498432 x1506)) (= (- x1506 26959946667150639794667015087019630673637144422540572481103610249216) (x19 26959946667150639794667015087019630673637144422540572481103610249215 x1506))))
(define-fun x1244 ((x1506 Int) (x1090 Int)) Bool (and (= (+ (* x1090 26959946667150639794667015087019630673637144422540572481103610249216) (x19 26959946667150639794667015087019630673637144422540572481103610249215 x1506)) x1506) (<= 0 x1090)))
(define-fun x1347 ((x1506 Int) (x102 Int)) Bool (and (x1246 x1506) (x163 x1506) (x156 x1506) (x1176 x1506) (x1244 x1506 x102)))
(define-fun x991 ((x1506 Int) (x102 Int)) Bool (and (x1538 x1506 26959946667150639794667015087019630673637144422540572481103610249215) (x1347 x1506 x102)))
(define-fun x758 ((x1506 Int)) Bool (= (x19 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x19 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1506)) (x19 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1506)))
(define-fun x416 ((x1506 Int)) Bool (=> (and (< x1506 32) (<= 0 x1506)) (= (x19 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1506) 0)))
(define-fun x1261 ((x1506 Int) (x1090 Int) (x1031 Int) (x765 Int)) Bool (and (> 32 x1090) (>= x1090 0) (<= 0 x1031) (< x1031 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x765) (* x1031 32) x1090) x1506) (>= x765 0) (> 1 x765) (= (* 32 x1031) (x19 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1506))))
(define-fun x1004 ((x1506 Int) (x1044 Int) (x902 Int) (x1464 Int)) Bool (and (x758 x1506) (x1261 x1506 x1044 x902 x1464) (x416 x1506)))
(define-fun x1201 ((x1506 Int) (x1044 Int) (x902 Int) (x1464 Int)) Bool (and (x1538 x1506 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1004 x1506 x1044 x902 x1464)))
(define-fun x32 ((x1292 Int)) Int (x529 x1292))
(define-fun x1497 ((x1292 Int)) Int (ite (= 128 x1292) x571 (x1030 x1292)))
(define-fun x619 ((x1292 Int)) Int (ite (and (< x1292 (+ 160 x1431)) (<= 160 x1292)) (x529 (+ x1390 (- x1292 160))) (x1497 x1292)))
(define-fun x353 ((x1292 Int)) Int (ite (= x1292 x1424) 0 (x619 x1292)))
(define-fun x546 ((x1292 Int)) Int (ite (and (<= x228 x1292) (< x1292 (+ x228 x1))) (x529 (+ (- x1292 x228) x401)) (x1042 x1292)))
(define-fun x412 ((x1292 x347)) Int (ite (= x1292 x842) x1352 (x697 x1292)))
(define-fun x1467 ((x1292 x347)) Int (ite (= x1292 x897) x1352 (x697 x1292)))
(define-fun x488 ((x1292 x347)) Int (ite (= x1292 x505) x1352 (x1219 x1292)))
(define-fun x1529 ((x1292 x347)) Int (ite (= x1013 x1292) x1352 (x1219 x1292)))
(define-fun x330 ((x1292 x347)) Int (ite (and x61 x932) (x1219 x1292) (ite (and x126 x275) (x697 x1292) (ite (and x277 (not x72)) (x488 x1292) (x1529 x1292)))))
(define-fun x6 ((x1292 x347)) Int (ite (= x537 x1292) x1064 (x994 x1292)))
(define-fun x491 ((x1292 x347)) Int (ite (= x1292 x320) x643 (x960 x1292)))
(define-fun x655 ((x1292 x347)) Int (ite (and (not x72) x277) (x491 x1292) (x960 x1292)))
(define-fun x487 ((x1292 x347)) Int (ite (and x61 x932) (x960 x1292) (ite (and x275 x126) (x994 x1292) (x655 x1292))))
(define-fun x221 ((x1292 x347)) Int (ite (= x1292 x1568) x1357 (x91 x1292)))
(define-fun x593 ((x1292 x347)) Int (ite (= x357 x1292) x1008 (x668 x1292)))
(define-fun x429 ((x1292 x347)) Int (ite (and x932 x61) (x668 x1292) (ite (and x126 x275) (x91 x1292) (ite (and x1384 x277) (x668 x1292) (x593 x1292)))))
(define-fun x227 ((x1292 x347)) Int (ite (= x1210 x1292) x1352 (x612 x1292)))
(define-fun x660 ((x1292 x347)) Int (ite (= x1292 x1223) x1352 (x612 x1292)))
(define-fun x794 ((x1292 x347)) Int (ite (= x1024 x1292) x1352 (x612 x1292)))
(define-fun x750 ((x1292 x347)) Int (ite (= x1292 x1021) x1352 (x1304 x1292)))
(define-fun x778 ((x1292 x347)) Int (ite (= x1292 x1189) x1352 (x1304 x1292)))
(define-fun x626 ((x1292 x347)) Int (ite (= x722 x1292) x1352 (x1304 x1292)))
(define-fun x637 ((x1292 x347)) Int (ite (and x932 x61) (x1304 x1292) (ite (and x126 x275) (x612 x1292) (ite (and (not x510) (not x1470) x1069) (x750 x1292) (ite (and x1069 x1470 (not x510)) (x778 x1292) (x626 x1292))))))
(define-fun x1254 ((x1292 x347)) Int (ite (= x1292 x1166) x665 (x998 x1292)))
(define-fun x1348 ((x1292 x347)) Int (ite (= x1292 x526) x1054 (x1287 x1292)))
(define-fun x1066 ((x1292 x347)) Int (ite (and x61 x932) (x1287 x1292) (ite (and x275 x126) (x998 x1292) (ite (and x1069 x1345) (x1287 x1292) (x1348 x1292)))))
(define-fun x687 ((x1292 x347)) Int (ite (= x1292 x1256) x481 (x1420 x1292)))
(define-fun x153 ((x1292 x347)) Int (ite (= x1561 x1292) x1355 (x862 x1292)))
(define-fun x833 ((x1292 x347)) Int (ite (and x1069 (not x1470) (not x510)) (x153 x1292) (x862 x1292)))
(define-fun x93 ((x1292 x347)) Int (ite (and x61 x932) (x862 x1292) (ite (and x126 x275) (x1420 x1292) (x833 x1292))))
(define-fun x1112 ((x1292 x347)) Int (ite (= x1292 x1546) x695 (x1260 x1292)))
(define-fun x941 ((x1292 x347)) Int (ite (= x1157 x1292) x694 (x52 x1292)))
(define-fun x545 ((x1292 x347)) Int (ite (and x61 x932) (x784 x1292) (ite (and x126 x275) (x752 x1292) (ite (and x1255 (not x133) (not x1278) x277) (x52 x1292) (ite (and (not x1255) x277 (not x133)) (x784 x1292) (ite (and x133 x277) (x784 x1292) (x941 x1292)))))))
(define-fun x820 ((x1292 Int)) Int (ite (= x924 x1292) x525 (x64 x1292)))
(define-fun x1338 ((x1292 Int)) Int (ite (= x1113 x1292) x729 (x820 x1292)))
(define-fun x462 ((x1292 Int)) Int (ite (and x1252 x716) (x64 x1292) (x1338 x1292)))
(define-fun x28 ((x1292 Int)) Int (ite (= x1292 x1229) x403 (x462 x1292)))
(define-fun x1328 ((x1292 Int)) Int (ite (= x1302 x1292) x776 (x1239 x1292)))
(define-fun x1396 ((x1292 Int)) Int (ite (= x356 x1292) x583 (x5 x1292)))
(define-fun x150 ((x1292 Int)) Int (ite (= x1423 x1292) x1003 (x1396 x1292)))
(define-fun x1451 ((x1292 Int)) Int (ite (and x1069 (not x510) (not x1470)) (x150 x1292) (ite (and x1069 (not x510) x1470) (x150 x1292) (x5 x1292))))
(define-fun x974 ((x1292 Int)) Int (ite (= x675 x1292) x504 (x1451 x1292)))
(define-fun x1242 ((x1292 Int)) Int (ite (= x1292 x1402) x1184 (x1205 x1292)))
(define-fun x1559 ((x1292 Int)) Int (ite (and x61 x932) (x5 x1292) (ite (and x275 x126) (x64 x1292) (ite (and (not x133) (not x1278) x1255 x277) (x1205 x1292) (ite (and x277 (not x1255) (not x133)) (x1547 x1292) (ite (and x277 x133) (x1547 x1292) (x1242 x1292)))))))
(define-fun x178 ((x1292 Int)) Int (ite (= x1097 x1292) x1224 (x1559 x1292)))
(define-fun x486 ((x1292 Int)) Int (ite (= x1363 x1292) x727 (x178 x1292)))
(define-fun x1519 ((x1292 Int)) Int (ite (= x1292 x597) x584 (x486 x1292)))
(define-fun x1237 ((x1292 Int)) Int (ite (= x1292 x295) x979 (x1519 x1292)))
(define-fun x1128 ((x1292 Int)) Int (ite (= x1292 x880) 32 (x1237 x1292)))
(define-fun x1040 ((x1292 Int)) Int (ite (= x1292 x59) x324 (x796 x1292)))
(define-fun x337 ((x1292 Int)) Int (ite (= x1292 x7) 0 (x549 x1292)))
(define-fun x628 ((x1292 Int)) Int (ite (= x1292 0) 1 (x915 x1292)))
(define-fun x1492 ((x1292 Int)) Int (ite (= 0 x1292) 1 (x915 x1292)))
(define-fun x678 ((x1292 Int)) Int (ite (and x1510 x1204) (x628 x1292) (x1492 x1292)))
(define-fun x603 ((x1292 Int)) Int (ite (= x1144 x1292) x844 (x599 x1292)))
(define-fun x1444 ((x1292 Int)) Int (ite (= x1144 x1292) x821 (x599 x1292)))
(define-fun x464 ((x1292 Int)) Int (ite (= x1292 x1144) x173 (x709 x1292)))
(define-fun x1494 ((x1292 Int)) Int (ite (and (> (+ x284 x173) x1292) (<= x284 x1292)) (x678 (+ 0 (- x1292 x284))) (x464 x1292)))
(define-fun x13 ((x1292 Int)) Int (ite (and x877 (not x513)) (x1494 x1292) (x709 x1292)))
(define-fun x1233 ((x1292 Int)) Int (ite (= x1461 x1292) x1311 (x13 x1292)))
(define-fun x1183 ((x1292 Int)) Int (ite (= x1292 x1307) x1473 (x1233 x1292)))
(define-fun x237 ((x1292 Int)) Int (ite (= x1292 x840) x202 (x1183 x1292)))
(define-fun x279 ((x1292 Int)) Int (ite (= x1135 x1292) x1199 (x237 x1292)))
(define-fun x1548 ((x1292 Int)) Int (ite (= x868 x1292) 32 (x279 x1292)))
(define-fun x1361 ((x1292 Int)) Int (ite (= x824 x1292) x688 (x278 x1292)))
(define-fun x94 ((x1292 Int)) Int (ite (= x322 x1292) 0 (x1043 x1292)))
(define-fun x298 ((x1292 x347)) Int (ite (= (x501 274184521717934524641157099916833587206) x1292) x538 (x355 x1292)))
(define-fun x977 ((x1292 x347)) Int (ite (= (x501 x735) x1292) x1055 (x298 x1292)))
(define-fun x726 ((x1292 x347)) Int (ite (= x1292 (x501 x735)) x1049 (x977 x1292)))
(define-fun x1569 ((x1292 x347)) Int (ite (= x1292 (x501 274184521717934524641157099916833587206)) x698 (x726 x1292)))
(define-fun x1167 ((x1292 x347)) Int (ite (= x1292 (x501 274184521717934524641157099916833587206)) x387 (x1569 x1292)))
(define-fun x1293 ((x1292 x347)) Int (ite (= (x501 x1083) x1292) x152 (x1167 x1292)))
(define-fun x342 ((x1292 x347)) Int (ite (= x1292 x27) x189 (x1326 x1292)))
(define-fun x943 ((x1292 x347)) Int (ite (= x1292 x1335) x907 (x342 x1292)))
(define-fun x81 ((x1292 x347)) Int (ite (and x1510 x1204) (x943 x1292) (x1326 x1292)))
(define-fun x892 ((x1292 x347)) Int (ite (= x1292 x391) x849 (x81 x1292)))
(define-fun x287 ((x1292 Int)) Int (ite (= 0 x1292) 1 (x1382 x1292)))
(define-fun x1180 ((x1292 Int)) Int (ite (= x1292 x1041) x137 (x1455 x1292)))
(define-fun x1185 ((x1292 x347)) Int (ite (= x1268 x1292) x852 (x1379 x1292)))
(define-fun x1078 ((x1292 x347)) Int (ite (= x1416 x1292) x1319 (x1185 x1292)))
(define-fun x146 ((x1292 x347)) Int (ite (and x1204 x1510) (x1379 x1292) (x1078 x1292)))
(define-fun x154 ((x1292 x347)) Int (ite (= x1292 x1508) x872 (x146 x1292)))
(define-fun x1539 ((x1292 Int)) Int (ite (= x1292 0) 1 (x1382 x1292)))
(define-fun x494 ((x1292 Int)) Int (ite (= x1041 x1292) x980 (x1455 x1292)))
(define-fun x1056 ((x1292 Int)) Int (ite (and x258 x1202) (x287 x1292) (x1539 x1292)))
(define-fun x321 ((x1292 x347)) Int (ite (= x1292 (x501 x1083)) x1046 (x1293 x1292)))
(define-fun x341 ((x1292 Int)) Int (ite (= x1292 x1041) x82 (x206 x1292)))
(define-fun x443 ((x1292 Int)) Int (ite (and (<= x38 x1292) (> (+ x38 x82) x1292)) (x1056 (+ (- x1292 x38) 0)) (x341 x1292)))
(define-fun x771 ((x1292 Int)) Int (ite (and x858 x548) (x206 x1292) (x443 x1292)))
(define-fun x1362 ((x1506 Int)) Bool (=> (and (not (= 1000000000000000000 x1506)) (not (= 3123789364 x1506)) (not (= x1506 2258409472)) (not (= x1506 87118632)) (not (= x1506 2532887486)) (not (= 2835717307 x1506)) (not (= 2514000705 x1506)) (not (= 1517119036 x1506)) (not (= 826074471 x1506)) (not (= 274184521717934524641157099916833587218 x1506)) (not (= 2939843472 x1506)) (not (= x1506 1968616202)) (not (= x1506 2512682246)) (not (= 2293535753 x1506)) (not (= x1506 635128645)) (not (= x1506 2418364589)) (not (= x1506 2960351575)) (not (= 468353030 x1506)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1506)) (not (= 69947311 x1506)) (not (= 18446744073709551615 x1506)) (not (= 115792089237316195423570985008687907853269984665640564039457 x1506)) (not (= 2798343961 x1506)) (not (= x1506 911411945)) (> x1506 10000) (not (= x1506 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x1506 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= x1506 142201243)) (not (= 649617121 x1506)) (not (= 2211524764 x1506)) (not (= 2764855426 x1506)) (not (= x1506 274184521717934524641157099916833587206)) (not (= x1506 759532456)) (not (= 2868243304 x1506)) (not (= x1506 1889567281)) (not (= x1506 2690754053)) (not (= 2061678023 x1506)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x1506)) (not (= 274184521717934524641157099916833587214 x1506)) (not (= 1461501637330902918203684832716283019655932542975 x1506)) (not (= 2743102681 x1506)) (not (= x1506 1986467848)) (not (= x1506 604800)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1506))) (not ((_ is x1481) (x501 x1506)))))
(assert (x303 x1523))
(assert (= (x1532 x314) (ite (= x314 x768) x1438 (x382 x314))))
(assert (x734 x1414))
(assert (= (or (and x918 (not x1309)) x548 (and x864 (not x490))) x589))
(assert (= (=> (and (< x1412 2293535753) (= (x288 (x501 x207) (x1481 9) 0) x1027) (not (= 69947311 x1412)) (>= 1461501637330902918203684832716283019655932542975 x1364) (= x365 x1526) (<= x1526 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1217 (x501 274184521717934524641157099916833587206)) x1110) (< x1412 911411945) (>= 1461501637330902918203684832716283019655932542975 x935) (> x1110 0) (= (x288 (x501 x1364) x803 0) x1076) (not (= x1412 87118632)) (<= 0 x1526) (= (x1066 x1076) x1526) (< x1412 468353030) (= x1412 142201243) (= (x288 (x501 x935) x1027 0) x803)) (=> (and (= x365 x1142) (= x1159 x217) (= x1414 x1301) (= x213 x326)) x1343)) x930))
(assert (x734 x996))
(assert (= (x1532 x1227) (ite (= x1227 x768) x1438 (x382 x1227))))
(assert (= (x501 2211524764) (x1481 2211524764)))
(assert (x734 x795))
(assert (x734 x389))
(assert (x734 x479))
(assert (x734 x173))
(assert (=> (>= 10000 x651) (= (x1481 x651) (x501 x651))))
(assert (= (=> (= 0 x499) x1081) x1153))
(assert (x734 x987))
(assert (= (x1547 x701) x914))
(assert (= x503 (x461 (x501 x503))))
(assert (x1362 x1156))
(assert (= (ite (= x235 x993) x1356 (x411 x235)) (x382 x235)))
(assert (= (x461 (x501 x1336)) x1336))
(assert (= (x411 x553) (ite (= x226 x553) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x553))))
(assert (= x871 (=> (and (= x1191 (> x850 0)) (= (x860 (- x1188 1)) x850)) (and (=> x1191 x1250) (=> (not x1191) x1153)))))
(assert (= (and x118 x1515) x720))
(assert (= (ite (= x815 x1533) x571 (x353 x1533)) (x1042 x1533)))
(assert (x734 x980))
(assert (= x1075 (x461 (x501 x1075))))
(assert (= (+ (x461 x183) 1) (x461 (x954 x183 1))))
(assert (=> (>= 10000 x397) (= (x501 x397) (x1481 x397))))
(assert (x734 x1168))
(assert (x734 x445))
(assert (x734 x1045))
(assert (= x1404 (=> (= x366 (< 0 x1188)) (and (=> (not x366) x1092) (=> x366 x1353)))))
(assert (= (=> (and (= (= 0 x1054) x510) (or x1345 (and (= (x19 1461501637330902918203684832716283019655932542975 x1523) x561) (= (x19 1461501637330902918203684832716283019655932542975 x23) x388) (not x1345) (= x1298 (x288 (x501 x497) (x1481 9) 0)) (= x526 (x288 (x501 x388) x105 0)) (= (x288 (x501 x561) x1298 0) x105))) (or (and (= x460 (x288 (x501 x1321) x928 0)) (= x928 (x288 (x501 x497) (x1481 7) 0)) (= x1321 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= (x288 (x501 x681) x460 0) x722) x510 (= x675 x356) (= (x19 1461501637330902918203684832716283019655932542975 x23) x681)) (and (= (x29 (+ 96 x1229)) x1423) (= (> x515 x423) x1269) (or (and x1269 (or (and (not x335) (= x1333 x329) (= 604800 x117) (= (ite (< x251 604800) x251 604800) x1333) (not (> x423 x1571)) (= x251 (x860 (- x1571 x423)))) (and (= (x860 (- x1571 x1530)) x1160) x335 (= x1160 x329) (not (< x1571 x1530)) (= (x150 x356) x1530))) (or (and (= x1571 x587) (= (x150 x1423) x587) x1330) (and (= x1352 x1571) (not x1330))) (= (> x1352 x159) x1330) (= (x150 x1423) x159) (= x335 (= x423 0))) (and (= 0 x329) (not x1269))) (= x423 (x1304 x739)) (= x36 (x288 (x501 x497) (x1481 7) 0)) (<= 0 x423) (= x414 (x954 x684 1)) (= x188 (x19 1461501637330902918203684832716283019655932542975 x23)) (= x912 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= x515 (x150 x1423)) (= (x288 (x501 x497) (x1481 1) 0) x684) (= (x394 x684) x583) (or (and (= x230 x675) x1470 (= (x288 (x501 x798) x37 0) x808) (= (x288 (x501 x497) (x1481 7) 0) x37) (= x1189 (x288 (x501 x867) x808 0)) (= x798 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= (x19 1461501637330902918203684832716283019655932542975 x23) x867)) (and (= x472 (x19 1461501637330902918203684832716283019655932542975 x23)) (= (x288 (x501 x472) x484 0) x1561) (= x580 (x19 1461501637330902918203684832716283019655932542975 x23)) (= x158 (* x329 x1054)) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x848) (= (x288 (x501 x848) x1317 0) x704) (= x158 x1355) (= x484 (x288 (x501 x689) x1452 0)) (= x230 x675) (not x1470) (= x1021 (x288 (x501 x580) x704 0)) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x689) (= x1317 (x288 (x501 x497) (x1481 7) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1054 x329)) (= (x288 (x501 x497) (x1481 3) 0) x1452))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x423) (= x230 (x29 (+ 128 x1229))) (>= x1003 0) (= x1003 (x1095 x414)) (<= 0 x583) (<= x1003 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x288 (x501 x188) x1419 0) x739) (not x510) (= x1470 (= x329 0)) (= x1419 (x288 (x501 x912) x36 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x583))) (= x1345 (= 0 x1388))) x865) x42))
(assert (= (ite (= x1533 x1300) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1548 x1533)) (x894 x1533)))
(assert (= (ite (= x1208 x815) x571 (x353 x1208)) (x1042 x1208)))
(assert (x1362 x1521))
(assert (x1362 x442))
(assert (= (x1481 2512682246) (x501 2512682246)))
(assert (= (ite (= x1165 x235) x128 (x28 x235)) (x209 x235)))
(assert (x734 x665))
(assert (=> (>= 10000 x617) (= (x1481 x617) (x501 x617))))
(assert (x734 x888))
(assert (= x1525 (=> (and (= x997 (> x352 0)) (not (= x372 0)) (= x352 (x771 x1533)) (not x98) (= x1046 (x1293 (x501 x1083))) (= (< (x321 (x501 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1170) (= (< 2 x571) x98) (= x858 (= 0 x82)) (or (and (= (x29 (+ 96 x868)) x38) (not x858) (= x1533 x1041)) (and (= 96 x1533) x858)) (or (not x997) (and (not (or (> x717 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x717)) (< x717 32)))) (= (ite x641 1 0) x495) (= (not x791) x641) (= x169 (x771 x602)) (> x169 0) x997 (= x602 (x29 (+ 32 x1533))) (= (= x169 0) x791) (= x169 x495) (= x717 (x771 x1533)))) x1170) x1010)))
(assert (x734 x1412))
(assert (=> (>= 10000 x888) (= (x501 x888) (x1481 x888))))
(assert (= x1324 (=> (and (= (x697 x685) x1498) (<= 0 x1498) (>= 1461501637330902918203684832716283019655932542975 x219) (not (> 1968616202 x1175)) (> 2293535753 x1175) (not (= x1175 1968616202)) (not (< x1175 911411945)) (= (x288 (x501 x219) x806 0) x685) (not (= 2061678023 x1175)) (= x1498 x1365) (= x473 (x1217 (x501 274184521717934524641157099916833587206))) (= 2258409472 x1175) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1498) (not (= x1175 1986467848)) (= x806 (x288 (x501 x374) (x1481 6) 0)) (< 0 x473) (not (= 2211524764 x1175))) (=> (and (= x707 x1365) (= x1414 x539) (= x213 x22)) x56))))
(assert (x1362 x22))
(assert (x734 x764))
(assert (x1362 x289))
(assert (x734 x351))
(assert (= (x1547 x314) (ite (= x314 x701) x914 (x974 x314))))
(assert (=> (<= x1321 10000) (= (x1481 x1321) (x501 x1321))))
(assert (= (and x988 x532) x248))
(assert (=> (<= x262 10000) (= (x1481 x262) (x501 x262))))
(assert (x734 x162))
(assert (x1362 x598))
(assert (= x217 (x461 (x501 x217))))
(assert (x734 x912))
(assert (= (ite (= x1215 x815) x571 (x353 x1215)) (x1042 x1215)))
(assert (x734 x1571))
(assert (x734 x1540))
(assert (x734 x263))
(assert (x1362 x1232))
(assert (= (x1260 x1471) (ite (= x1471 x577) x615 (x752 x1471))))
(assert (x734 x374))
(assert (= (x461 (x1481 69947311)) 69947311))
(assert (x1362 x967))
(assert (= x188 (x461 (x501 x188))))
(assert (x734 x848))
(assert (= (x1287 x861) (ite (and x1252 x622) (x998 x861) (x1254 x861))))
(assert (x1362 x503))
(assert (x734 x189))
(assert (x1362 x522))
(assert (= x1211 (x461 (x501 x1211))))
(assert (= 2798343961 (x461 (x1481 2798343961))))
(assert (= x609 (x461 (x501 x609))))
(assert (x734 x478))
(assert (= x743 (or x234 x421)))
(assert (= x1426 (=> (and (< x171 2960351575) (= (x288 (x501 x1264) (x1481 3) 0) x772) (not (> 2293535753 x171)) (<= x1511 1461501637330902918203684832716283019655932542975) (not (= x171 2690754053)) (= 2743102681 x171) (= x35 x143) (= (x1217 (x501 274184521717934524641157099916833587206)) x305) (not (> 2690754053 x171)) (= (x288 (x501 x436) x1140 0) x870) (>= 1461501637330902918203684832716283019655932542975 x436) (< 0 x305) (>= x35 0) (= (x1420 x870) x35) (= x1140 (x288 (x501 x1511) x772 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x35)) (=> (and (= x1159 x331) (= x213 x1517) (= x143 x950) (= x1179 x359) (= x1414 x351)) x859))))
(assert (=> (>= 10000 x935) (= (x1481 x935) (x501 x935))))
(assert (x734 x1526))
(assert (x734 x800))
(assert (= (x5 x1215) (ite (and (not x1377) (not x194) x831 x620) (x1239 x1215) (ite (and x620 (not x831) (not x194)) (x209 x1215) (ite (and x194 x620) (x209 x1215) (x1328 x1215))))))
(assert (=> (>= 10000 x630) (= (x501 x630) (x1481 x630))))
(assert (=> (>= 10000 x207) (= (x1481 x207) (x501 x207))))
(assert (= (ite (and x1252 x716) (x227 x1331) (ite (and x601 (not x716) x1252) (x660 x1331) (x794 x1331))) (x1304 x1331)))
(assert (= (ite (= x1208 x63) x21 (x209 x1208)) (x1239 x1208)))
(assert (=> (<= x1100 10000) (= (x1481 x1100) (x501 x1100))))
(assert (= (x461 (x501 x848)) x848))
(assert (= (x461 (x1481 2939843472)) 2939843472))
(assert (x1362 x888))
(assert (= x76 (x461 (x501 x76))))
(assert (x1362 x388))
(assert (x734 x20))
(assert (= (=> (and (= (x288 (x501 x818) (x1481 6) 0) x1554) (= x1551 x1065) (not (= x1359 1986467848)) (> x754 0) (not (< x1359 1968616202)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1065) (not (= 2211524764 x1359)) (< x1359 2293535753) (= 2258409472 x1359) (= (x288 (x501 x715) x1554 0) x647) (<= 0 x1065) (not (= x1359 1968616202)) (not (= 2061678023 x1359)) (= x754 (x1217 (x501 274184521717934524641157099916833587206))) (not (> 911411945 x1359)) (>= 1461501637330902918203684832716283019655932542975 x715) (= x1065 (x330 x647))) (=> (and (= x630 x213) (= x699 x1551) (= x1058 x1414)) x528)) x804))
(assert (x734 x916))
(assert (x734 x744))
(assert (x734 x748))
(assert (= (x1030 x916) 0))
(assert (x1362 x572))
(assert (= x904 (=> (= (> x497 0) x1407) (and (=> (not x1407) x269) (=> x1407 x198)))))
(assert (x734 x372))
(assert (=> (>= 10000 x650) (= (x1481 x650) (x501 x650))))
(assert (= x681 (x461 (x501 x681))))
(assert (= 1986467848 (x461 (x1481 1986467848))))
(assert (x734 x984))
(assert (x734 x585))
(assert (x1362 x1301))
(assert (x734 x715))
(assert (= x867 (x461 (x501 x867))))
(assert (x734 x572))
(assert (x734 x658))
(assert (x1362 x649))
(assert (= 1889567281 (x461 (x1481 1889567281))))
(assert (=> (>= 10000 x555) (= (x1481 x555) (x501 x555))))
(assert (x1362 x1294))
(assert (x734 x211))
(assert (= (ite (= x1165 x108) x128 (x28 x108)) (x209 x108)))
(assert (x734 x1235))
(assert (= (ite (= x993 x815) x1356 (x411 x815)) (x382 x815)))
(assert (=> (>= 10000 x649) (= (x501 x649) (x1481 x649))))
(assert (x734 x525))
(assert (=> (>= 10000 x759) (= (x1481 x759) (x501 x759))))
(assert (= (x461 (x501 x564)) x564))
(assert (= (ite (and x1204 x1510) (x603 x815) (x1444 x815)) (x709 x815)))
(assert (x734 x816))
(assert (= (x1239 x1215) (ite (= x1215 x63) x21 (x209 x1215))))
(assert (= (ite (and x1429 x620) (x412 x1564) (x1467 x1564)) (x1219 x1564)))
(assert (x734 x676))
(assert (= (ite (= x1533 x768) x1438 (x382 x1533)) (x1532 x1533)))
(assert (x734 x630))
(assert (x734 x530))
(assert (x1362 x1290))
(assert (x734 x811))
(assert (x303 x566))
(assert (= (x461 (x501 x499)) x499))
(assert (= x850 (x461 (x501 x850))))
(assert (x1362 x326))
(assert (x1362 x851))
(assert (= x548 (or (and x348 x1375) (and x1202 x258))))
(assert (= (ite (and (not x194) x620 x831 (not x1377)) (x1239 x815) (ite (and x620 (not x831) (not x194)) (x209 x815) (ite (and x620 x194) (x209 x815) (x1328 x815)))) (x5 x815)))
(assert (= (x1042 x633) (ite (= x815 x633) x571 (x353 x633))))
(assert (= (x1481 1517119036) (x501 1517119036)))
(assert (= (x1205 x633) (ite (= x633 x108) x878 (x1547 x633))))
(assert (= (x461 (x954 x1147 1)) (+ 1 (x461 x1147))))
(assert (x1362 x268))
(assert (x734 x1523))
(assert (x734 x553))
(assert (= 2514000705 (x461 (x1481 2514000705))))
(assert (= (ite (= x46 x246) x883 (x1532 x46)) (x796 x46)))
(assert (=> (<= x289 10000) (= (x501 x289) (x1481 x289))))
(assert (= x683 (and x1191 x16)))
(assert (x734 x906))
(assert (x1362 x818))
(assert (= (x461 (x501 x1301)) x1301))
(assert (= 0 (x1030 x235)))
(assert (= (ite (= x602 x226) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x602)) (x411 x602)))
(assert (= x922 (x461 (x501 x922))))
(assert (x1362 x1517))
(assert (x734 x1301))
(assert (x734 x399))
(assert (x734 x358))
(assert (x1362 x469))
(assert (x1362 x1100))
(assert (= (x1205 x1402) (ite (= x108 x1402) x878 (x1547 x1402))))
(assert (x734 x108))
(assert (x734 x1336))
(assert (x734 x1139))
(assert (= (ite (= x633 x246) x883 (x1532 x633)) (x796 x633)))
(assert (x734 x562))
(assert (= (x501 1461501637330902918203684832716283019655932542975) (x1481 1461501637330902918203684832716283019655932542975)))
(assert (= (x1481 274184521717934524641157099916833587218) (x501 274184521717934524641157099916833587218)))
(assert (x734 x1016))
(assert (x734 x609))
(assert (x734 x447))
(assert (x734 x1424))
(assert (x1362 x358))
(assert (= (ite (= x46 x701) x914 (x974 x46)) (x1547 x46)))
(assert (x1362 x650))
(assert (x734 x43))
(assert (x734 x97))
(assert (x734 x822))
(assert (x734 x1296))
(assert (x734 x1355))
(assert (=> (<= x656 10000) (= (x1481 x656) (x501 x656))))
(assert (x734 x648))
(assert (x734 x435))
(assert (= (x209 x101) (ite (= x101 x1165) x128 (x28 x101))))
(assert (x1362 x1340))
(assert (x734 x695))
(assert (= x859 (=> (and (< x106 2690754053) (< x106 2960351575) (= (x288 (x501 x351) (x1481 4) 0) x1463) (= x543 (x288 (x501 x331) x431 0)) (<= x331 1461501637330902918203684832716283019655932542975) (<= 0 x282) (= x1322 (x1217 (x501 274184521717934524641157099916833587206))) (= x431 (x288 (x501 x1517) x1463 0)) (not (= x106 2293535753)) (= x1151 x282) (> x1322 0) (not (= x106 2512682246)) (>= 1461501637330902918203684832716283019655932542975 x1517) (not (= 2418364589 x106)) (<= x282 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x106 2532887486) (= (x752 x1401) x282) (not (< x106 2293535753)) (= (x288 (x501 x1179) x543 0) x1401) (>= 1461501637330902918203684832716283019655932542975 x1179)) (=> (and (or (and (not x1553) (= (mod (* x571 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1) (= (x29 (+ x875 160)) x228)) x1553) (not (> 2293535753 x999)) (>= 1461501637330902918203684832716283019655932542975 x1523) (= (<= x1448 x369) x1434) (= 128 x827) (= (x529 x507) x571) (= x399 (x353 128)) (= x1480 0) (= (x860 (- x401 4)) x853) (= x479 x1369) (= (x860 (- x399 1)) x459) (not (or (and (< x853 160) (= (<= x853 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x853))) (= x1329 (x29 (+ x744 35))) (= x1220 x1299) (< 163 x401) (not (= x999 2690754053)) (= x1171 x744) (= x512 (= 0 x1496)) (not (< x399 1)) (>= x1057 0) (not (> 2690754053 x999)) x1434 (= (x29 (+ x426 x815)) x924) (= x710 x945) (= x145 (and x634 x512)) (= 2939843472 x999) (not (= x999 2743102681)) (not (= x999 2798343961)) (= x1523 x557) (> x1057 x1299) (= (and x896 x58) x634) (>= x1221 0) (= x1553 (= x571 0)) (= x1523 x648) (>= 1461501637330902918203684832716283019655932542975 x69) (or (not x616) (and x616 (not (< 1 x1026)) (= x1276 (> x399 1)) (or (and (= (x353 160) x1409) (= x25 (x353 192)) x1276 (= (x19 1461501637330902918203684832716283019655932542975 x25) x866) (or (and x1163 (= (x19 1461501637330902918203684832716283019655932542975 x1086) x1073) (> x1023 2) (not (= x832 x1073)) (= x1086 (x353 160)) (= x1387 (x353 224)) (= x1023 (x353 128)) (= x125 (< 3 x399)) (not x125) (< 0 x1488) (= x832 (x19 1461501637330902918203684832716283019655932542975 x1387)) (= (x353 128) x1488)) (not x1163)) (< 1 x1440) (= (x353 128) x1440) (not (= x1258 x866)) (= (x353 128) x139) (= (x19 1461501637330902918203684832716283019655932542975 x1409) x1258) (= (< 2 x399) x1163) (> x139 0)) (not x1276)) (= (x860 (- x399 1)) x1026) (not (< x399 1)))) (= x1352 x369) (= x166 x1188) (<= x713 1461501637330902918203684832716283019655932542975) (not (= 2868243304 x999)) (= x1085 (mod (* 32 x571) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x29 (+ 32 x110)) x875) (= x896 (= 0 x936)) (>= x713 0) (= x1299 x179) (= 0 x1296) (= x800 x23) (= x713 x885) (or (and (= (<= x401 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1329)) (> x401 x1329)) (and (<= x401 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1329))) (= (x29 (+ 4 x744)) x507) (> x500 0) (= x58 (= 0 x455)) (> 2960351575 x999) (= (< 0 x459) x616) (= 0 x479) (= x945 x69) (= (x29 (+ 32 x1431)) x426) (= x20 x1151) (= x446 x23) (= x86 x1448) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x401) true) (= x271 (= 0 x478)) (= (x29 (+ 36 x744)) x1390) (= x110 (mod (* 32 x571) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (< 18446744073709551615 x1171)) x1194 (= x1194 (or x145 (not x271))) (= (x29 (+ x110 160)) x815) (= x455 x950) (not (< x401 4)) (not (> x1188 x1299)) (= (x1217 (x501 274184521717934524641157099916833587206)) x500) (not (= x999 2764855426)) (not (< 18446744073709551615 x571)) (= (x29 (+ x1390 x1085)) x560) (= 0 x1178) (= x20 x1496) (not (> x560 x401)) (>= x69 0) (= x478 x86) (<= x1221 1461501637330902918203684832716283019655932542975) (= x1431 (mod (* x571 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x23 1461501637330902918203684832716283019655932542975) (= 0 x1216) (= x1212 x936) (= x97 x1188) (= x1352 x986) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1057) (= (x29 (+ 160 x1431)) x1424)) x1132))))
(assert (x734 x711))
(assert (x734 x1530))
(assert (x734 x1228))
(assert (x1362 274184521717934524641157099916833587214))
(assert (= (=> (= x380 (> x1188 0)) (and (=> (not x380) x1153) (=> x380 x942))) x1068))
(assert (x734 x576))
(assert (= x1375 (and (not x258) x1202)))
(assert (x734 x88))
(assert (= (x64 x235) (ite (and x1553 x315) (x1042 x235) (x546 x235))))
(assert (= (ite (= x597 x226) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x597)) (x411 x597)))
(assert (= (ite (= x108 x314) x878 (x1547 x314)) (x1205 x314)))
(assert (x1362 x651))
(assert (= (and x973 (not x1274)) x667))
(assert (= 3123789364 (x461 (x1481 3123789364))))
(assert (x734 x735))
(assert (x734 x63))
(assert (x734 x824))
(assert (x734 x1100))
(assert (=> (>= 10000 x1505) (= (x501 x1505) (x1481 x1505))))
(assert (= (x709 x235) (ite (and x1510 x1204) (x603 x235) (x1444 x235))))
(assert (=> (<= x1149 10000) (= (x1481 x1149) (x501 x1149))))
(assert (x1362 x1117))
(assert (x734 x66))
(assert (= (ite (and (not x714) x864 x490) (x549 x1533) (x337 x1533)) (x599 x1533)))
(assert (x1362 x1315))
(assert (x734 x207))
(assert (x1201 x566 x1273 x540 x454))
(assert (x734 x127))
(assert (x734 x971))
(assert (= (x501 18446744073709551615) (x1481 18446744073709551615)))
(assert (= (x1219 x647) (ite (and x620 x1429) (x412 x647) (x1467 x647))))
(assert (x734 x893))
(assert (= x425 (x461 (x501 x425))))
(assert (= (ite (and (not x1377) x620 x831 (not x194)) (x1239 x1402) (ite (and (not x831) x620 (not x194)) (x209 x1402) (ite (and x194 x620) (x209 x1402) (x1328 x1402)))) (x5 x1402)))
(assert (x734 x344))
(assert (x734 x1300))
(assert (= (x1239 x1302) (ite (= x1302 x63) x21 (x209 x1302))))
(assert (x734 x1109))
(assert (= (ite (= x815 x602) x571 (x353 x602)) (x1042 x602)))
(assert (= (x709 x602) (ite (and x1204 x1510) (x603 x602) (x1444 x602))))
(assert (x734 x1115))
(assert (x734 x1178))
(assert (= (x382 x1533) (ite (= x993 x1533) x1356 (x411 x1533))))
(assert (x1362 x609))
(assert (x303 x327))
(assert (= x244 (=> (and (<= x1520 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x100 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x128) (or (and (= x1489 (= 0 x1279)) x345 (= (x209 x1165) x927) (or (and (not x1489) (= x151 x1535) (= x151 (ite (< x1139 604800) x1139 604800)) (= (x860 (- x1148 x1279)) x1139) (= x766 604800) (not (> x1279 x1148))) (and (= x1218 (x860 (- x1148 x846))) (= (x209 x1229) x846) x1489 (= x1218 x1535) (not (> x846 x1148)))) (or (and (not x889) (= x1148 x1352)) (and (= x1385 x1148) x889 (= (x209 x1165) x1385))) (= (< x927 x1352) x889)) (and (not x345) (= x1535 0))) (>= x100 0) (= x403 (x394 x183)) (= (x19 1461501637330902918203684832716283019655932542975 x23) x262) (or (and (= x467 0) (= x11 (ite (> x100 115792089237316195423570985008687907853269984665640564039457) 1 0)) (> x1520 0) (= 1 x1099) (= (x19 x1099 x11) x467) (= x831 (< 0 x571)) (= x180 (mod (* x100 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x194) (or (not x831) (and (= (x752 x577) x224) (= x1377 (< 1 x571)) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x1308) (= x289 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= (x288 (x501 x1188) (x1481 4) 0) x334) (= (x288 (x501 x1308) x1556 0) x247) (<= x438 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x438) (>= x428 0) (= (x529 x111) x572) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x428) (= x75 x919) (= x362 (x288 (x501 x1351) x691 0)) (= x17 (x288 (x501 x646) x1123 0)) (= (x19 1461501637330902918203684832716283019655932542975 x23) x1036) (= x1351 (x19 1461501637330902918203684832716283019655932542975 x23)) (= (x752 x17) x428) (= x428 0) (= (x529 x111) x650) (= x1507 x435) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1560 x438)) (= x224 x900) (= (x288 (x501 x1188) (x1481 4) 0) x554) (= x680 (x209 x815)) (= (x288 (x501 x1188) (x1481 11) 0) x1556) (= (x288 (x501 x650) x362 0) x577) x831 (= x646 (x529 x111)) (= (x288 (x501 x289) x334 0) x547) (< (+ x435 x919) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x100 x1281) (< 0 x680) (= x21 (+ x1507 x75)) (< 0 x571) (= x435 (div x1491 1000000000000000000)) (> x571 0) (= (x288 (x501 x1518) x554 0) x691) (>= x224 0) (< (+ x100 x224) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1491 (* x1560 x438)) (or (and (= (x288 (x501 x1188) (x1481 4) 0) x944) (> x571 1) (<= 0 x1540) (<= x1117 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x485) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x712 x1466)) (= x80 (x288 (x501 x456) x801 0)) (= (x529 x181) x456) (> x571 1) (= (> x571 2) x290) (>= x485 0) (< 1 x1433) (= (x19 1461501637330902918203684832716283019655932542975 x23) x264) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x174) (= x1079 (x288 (x501 x531) x731 0)) (= x485 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1540 x1560)) (<= x274 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x29 (+ x875 192)) x1302) (= (+ x1108 x581) x695) (= x1466 (div x1098 1000000000000000000)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x274 x100)) (> x571 1) (= x776 (+ x719 x1537)) (= x274 (x1260 x1546)) (not x290) x1377 (>= 1461501637330902918203684832716283019655932542975 x789) (= (x288 (x501 x1117) x810 0) x1546) (= x801 (x288 (x501 x264) x1567 0)) (= (* x1560 x1540) x1098) (= x1117 (x529 x181)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1540) (= (x288 (x501 x174) x700 0) x1118) (= x1540 (x1458 x79)) (>= 1461501637330902918203684832716283019655932542975 x456) (= x712 (x1239 x1302)) (= x531 (x19 1461501637330902918203684832716283019655932542975 x1523)) (<= 0 x274) (= x719 x1466) (= x731 (x288 (x501 x1188) (x1481 4) 0)) (= (x288 (x501 x1188) (x1481 11) 0) x700) (= x789 (x529 x181)) (= x1433 (x1239 x815)) (= x181 (x29 (+ x507 64))) (= (x1260 x80) x485) (= (x19 1461501637330902918203684832716283019655932542975 x23) x1100) (= x581 x100) (= x79 (x288 (x501 x789) x1118 0)) (= x1108 x274) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x88) (= (x288 (x501 x1100) x1079 0) x810) (= x1537 x712) (= (x288 (x501 x88) x944 0) x1567)) (not x1377)) (= x111 x1390) (= (x288 (x501 x1036) x547 0) x1123) (= (x1458 x220) x438) (= (x29 (+ 160 x875)) x63) (> x571 0) (<= x224 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x646) (= x919 (x209 x63)) (= (x288 (x501 x572) x247 0) x220) (>= 1461501637330902918203684832716283019655932542975 x572) (= x615 (+ x1281 x900)) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x1518) (>= 1461501637330902918203684832716283019655932542975 x650))) (= x1560 (div x180 x1520))) x194) (= x1165 (x29 (+ x1229 32))) (= x1279 (x697 x982)) (<= 0 x128) (<= x403 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x33 0) x579) (= x1520 (x960 x873)) (= x1417 (x288 (x501 x1188) (x1481 3) 0)) (= (x288 (x501 x1188) (x1481 5) 0) x176) (<= 0 x1279) (= (x288 (x501 x888) x1417 0) x306) (= x128 (x1095 x1305)) (= x356 (x29 (+ x1229 64))) (= x1091 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= (= 0 x1535) x1429) (or x579 (and (= (x288 (x501 x1188) (x1481 10) 0) x981) (not x579) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x696) (= (x288 (x501 x696) x981 0) x1568))) (= x194 (= x100 0)) (or (and (= x897 (x288 (x501 x946) x1120 0)) (= x1450 (* x1535 x1357)) (= x1450 x1064) (= (x288 (x501 x1188) (x1481 5) 0) x83) (= x946 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= x1120 (x288 (x501 x1188) (x1481 6) 0)) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x759) (< (* x1535 x1357) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x537 (x288 (x501 x759) x83 0)) (not x1429)) (and (= (x288 (x501 x1188) (x1481 6) 0) x1137) (= x842 (x288 (x501 x1457) x1137 0)) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x1457) x1429)) (= x890 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= (x288 (x501 x262) x306 0) x908) (= x135 (x288 (x501 x1188) (x1481 6) 0)) (= x982 (x288 (x501 x890) x135 0)) (= x183 (x288 (x501 x1188) (x1481 1) 0)) (= (x209 x1165) x917) (= x1305 (x954 x183 1)) (= x100 (x862 x908)) (= x888 (x19 1461501637330902918203684832716283019655932542975 x1523)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1279) (= (x288 (x501 x1091) x176 0) x873) (>= x403 0) (= x345 (> x917 x1279)) (>= x1520 0)) x592)))
(assert (= (x461 (x501 x396)) x396))
(assert (= (x382 x822) (ite (= x993 x822) x1356 (x411 x822))))
(assert (x734 x426))
(assert (= x1138 (x461 (x501 x1138))))
(assert (x734 x1103))
(assert (= (x1239 x815) (ite (= x815 x63) x21 (x209 x815))))
(assert (= (x209 x46) (ite (= x46 x1165) x128 (x28 x46))))
(assert (= (x501 3123789364) (x1481 3123789364)))
(assert (= (ite (= x63 x101) x21 (x209 x101)) (x1239 x101)))
(assert (= (x461 (x501 x984)) x984))
(assert (=> (<= x1517 10000) (= (x1481 x1517) (x501 x1517))))
(assert (x734 x216))
(assert (= (x461 (x501 x847)) x847))
(assert (x734 x909))
(assert (= x891 (=> (and (= (x288 (x501 x1211) (x1481 9) 0) x441) (<= x1225 1461501637330902918203684832716283019655932542975) (not (= 87118632 x471)) (= x471 142201243) (< 0 x1168) (= x779 x585) (< x471 911411945) (< x471 468353030) (>= x779 0) (not (= x471 69947311)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x779) (= x1251 (x288 (x501 x1225) x441 0)) (>= 1461501637330902918203684832716283019655932542975 x963) (= (x998 x376) x779) (= x1168 (x1217 (x501 274184521717934524641157099916833587206))) (= x376 (x288 (x501 x963) x1251 0)) (> 2293535753 x471)) (=> (and (= x1159 x436) (= x213 x1511) (= x1212 x585) (= x1264 x1414)) x1426))))
(assert (x734 x1114))
(assert (=> (>= 10000 x344) (= (x1481 x344) (x501 x344))))
(assert (= x223 (=> (= x886 x638) x1332)))
(assert (= x539 (x461 (x501 x539))))
(assert (= (x1481 26959946667150639794667015087019630673637144422540572481103610249215) (x501 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= x331 (x461 (x501 x331))))
(assert (= x1288 (and x275 (not x126))))
(assert (x734 x1023))
(assert (x1362 x195))
(assert (x734 x251))
(assert (= (and x87 (not x1158)) x673))
(assert (= (or (and x683 (not x1094)) (and (not x84) x1222)) x430))
(assert (x734 x1106))
(assert (= x442 (x461 (x501 x442))))
(assert (x734 x654))
(assert (x734 x340))
(assert (x1362 x1225))
(assert (x734 x170))
(assert (= (x1030 x1227) 0))
(assert (x734 x1096))
(assert (= (x461 (x501 x448)) x448))
(assert (x679 x1523 x408))
(assert (= (x461 (x501 x1100)) x1100))
(assert (=> (<= x886 10000) (= (x501 x886) (x1481 x886))))
(assert (= (=> (and (= x1289 (x288 (x501 x1315) (x1481 7) 0)) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x1075) (= x1020 (x288 (x501 x1505) x140 0)) (>= x1437 0) (= x140 (x288 (x501 x1075) x1289 0)) (<= x1437 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1505 (x19 1461501637330902918203684832716283019655932542975 x23)) (= x1437 (x1304 x1020)) (= (= x1437 0) x1033)) (and (=> (and (= x677 (x860 (- x1315 1))) x1033 (= x690 (> x677 0)) (not x690)) x269) (=> (and (not x1033) (= x638 x1315)) x223))) x657))
(assert (=> (>= 10000 x922) (= (x501 x922) (x1481 x922))))
(assert (x734 x1258))
(assert (x734 x884))
(assert (= (or (and x420 (not x380)) (and (not x1191) x16) (and x1094 x683)) x1048))
(assert (= x22 (x461 (x501 x22))))
(assert (x734 x190))
(assert (x734 x868))
(assert (= (and x1341 x366) x990))
(assert (= (x461 (x501 x1083)) x1083))
(assert (x734 x536))
(assert (= (ite (and x620 (not x194) x831 (not x1377)) (x1239 x235) (ite (and (not x831) (not x194) x620) (x209 x235) (ite (and x620 x194) (x209 x235) (x1328 x235)))) (x5 x235)))
(assert (x1362 x696))
(assert (x734 x1144))
(assert (x734 x264))
(assert (x734 x415))
(assert (x734 x534))
(assert (= (x599 x101) (ite (and (not x714) x490 x864) (x549 x101) (x337 x101))))
(assert (x734 x1220))
(assert (x734 x656))
(assert (= x735 (x461 (x501 x735))))
(assert (=> (<= x1156 10000) (= (x1481 x1156) (x501 x1156))))
(assert (x1362 x1336))
(assert (=> (>= 10000 x645) (= (x1481 x645) (x501 x645))))
(assert (= (x411 x1215) (ite (= x226 x1215) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x1215))))
(assert (=> (>= 10000 x109) (= (x501 x109) (x1481 x109))))
(assert (= x718 x1012))
(assert (= (x461 (x1481 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (= (ite (= x602 x785) x1115 (x894 x602)) (x978 x602)))
(assert (= 2868243304 (x461 (x1481 2868243304))))
(assert (x734 x1232))
(assert (= 911411945 (x461 (x1481 911411945))))
(assert (= 2211524764 (x461 (x1481 2211524764))))
(assert (=> (>= 10000 x1334) (= (x1481 x1334) (x501 x1334))))
(assert (x734 x1162))
(assert (x734 x1493))
(assert (x734 x85))
(assert (= (x1547 x1208) (ite (= x1208 x701) x914 (x974 x1208))))
(assert (=> (>= 10000 x493) (= (x501 x493) (x1481 x493))))
(assert (x734 x1266))
(assert (x734 x352))
(assert (= (ite (= x577 x1570) x615 (x752 x1570)) (x1260 x1570)))
(assert (= (ite (and x1429 x620) (x994 x873) (x6 x873)) (x960 x873)))
(assert (= (x411 x1533) (ite (= x1533 x226) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x1533))))
(assert (=> (<= x1351 10000) (= (x501 x1351) (x1481 x1351))))
(assert (x734 x775))
(assert (x734 x1394))
(assert (= (x709 x398) (ite (and x1510 x1204) (x603 x398) (x1444 x398))))
(assert (= (x278 x46) (ite (= x46 x782) x260 (x518 x46))))
(assert (x1362 x595))
(assert (x1362 x1371))
(assert (x1362 x301))
(assert (=> (<= x239 10000) (= (x1481 x239) (x501 x239))))
(assert (= (and x1510 (not x1204)) x973))
(assert (=> (<= x676 10000) (= (x501 x676) (x1481 x676))))
(assert (= x88 (x461 (x501 x88))))
(assert (x734 x1517))
(assert (x734 x699))
(assert (= (ite (= x46 x993) x1356 (x411 x46)) (x382 x46)))
(assert (= (x461 (x954 x582 1)) (+ (x461 x582) 1)))
(assert (x1362 x331))
(assert (x734 x1146))
(assert (x734 x956))
(assert (x734 x1134))
(assert (x734 x1008))
(assert (= (x461 (x501 x374)) x374))
(assert (= (x461 (x1481 18446744073709551615)) 18446744073709551615))
(assert (=> (<= x867 10000) (= (x1481 x867) (x501 x867))))
(assert (= (x461 (x501 x219)) x219))
(assert (x734 x701))
(assert (x734 x40))
(assert (= (ite (= x577 x542) x615 (x752 x542)) (x1260 x542)))
(assert (=> (>= 10000 x1291) (= (x501 x1291) (x1481 x1291))))
(assert (x734 x442))
(assert (= (x461 (x501 x1149)) x1149))
(assert (x734 x497))
(assert (= (x960 x1545) (ite (and x620 x1429) (x994 x1545) (x6 x1545))))
(assert (= x531 (x461 (x501 x531))))
(assert (= (x5 x314) (ite (and x620 x831 (not x194) (not x1377)) (x1239 x314) (ite (and x620 (not x194) (not x831)) (x209 x314) (ite (and x194 x620) (x209 x314) (x1328 x314))))))
(assert (= (x1532 x822) (ite (= x822 x768) x1438 (x382 x822))))
(assert (=> (>= 10000 x708) (= (x1481 x708) (x501 x708))))
(assert (x734 x62))
(assert (x734 x110))
(assert (x1362 x798))
(assert (= (x1042 x1302) (ite (= x1302 x815) x571 (x353 x1302))))
(assert (x734 x1279))
(assert (= (x461 (x501 x493)) x493))
(assert (= (x461 (x501 x888)) x888))
(assert (= (ite (and (not x194) x620 (not x1377) x831) (x1239 x1533) (ite (and (not x194) (not x831) x620) (x209 x1533) (ite (and x620 x194) (x209 x1533) (x1328 x1533)))) (x5 x1533)))
(assert (= (x1042 x1227) (ite (= x1227 x815) x571 (x353 x1227))))
(assert (x734 x369))
(assert (x734 x1188))
(assert (x1362 x1235))
(assert (=> (>= 10000 x396) (= (x1481 x396) (x501 x396))))
(assert (= (=> (and (= x1263 (< x769 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x466 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x298 (x501 x735)))) x1263 (= (= x735 274184521717934524641157099916833587218) x1204) (= x538 (x355 (x501 274184521717934524641157099916833587206))) x466 (= (x355 (x501 274184521717934524641157099916833587206)) x1001) (= x1111 (<= 0 x1001)) (= (x355 (x501 x735)) x769) x1111 (= x799 x1350) (= (x298 (x501 x735)) x1055)) (and (=> (not x1204) x1360) (=> (and (not x608) (= (or (and (= true (<= x1459 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1459)) (> x1459 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x449) (<= 0 x204) (= (x288 (x501 x339) (x1481 1) 0) x1516) (= (x1217 (x501 274184521717934524641157099916833587218)) x1373) (= x1350 x882) (not (= x318 826074471)) (not (= 649617121 x318)) (not (= x318 1889567281)) (= x640 274184521717934524641157099916833587206) (not x952) (<= x204 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x308 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x204 x1415) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1039 x204)) x952) (= x1039 x381) (= (x288 (x501 274184521717934524641157099916833587206) (x1481 1) 0) x27) (not (> 649617121 x318)) (= x882 68) (<= x339 1461501637330902918203684832716283019655932542975) (= x1224 x339) (< 0 x1373) (not (< x882 4)) (= x907 (+ x381 x1415)) (= (x860 (- x882 4)) x1459) (= x318 2835717307) (= x4 x1039) (= x189 (x860 (- x361 x4))) (not x49) (= 1 x340) (= x658 x844) (= x727 x4) (= (x288 (x501 x339) (x1481 1) 0) x1335) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x361) (= 274184521717934524641157099916833587206 x85) (>= x361 0) (= x723 (x288 (x501 274184521717934524641157099916833587206) (x1481 1) 0)) (not x449) (= x204 (x342 x1516)) (= (> x1039 x361) x49) (= x361 (x1326 x723)) (= x173 32) (not (= x318 2514000705)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x204 x1039)) x1204 (= x339 x45) (= (< x361 x4) x608)) x792))) x1439))
(assert (x734 x1340))
(assert (x734 x1398))
(assert (x1362 x850))
(assert (=> (>= 10000 x1117) (= (x1481 x1117) (x501 x1117))))
(assert (x1362 x555))
(assert (=> (>= 10000 x869) (= (x501 x869) (x1481 x869))))
(assert (x1362 x867))
(assert (x303 x25))
(assert (x734 x901))
(assert (x1362 x630))
(assert (x734 x614))
(assert (= (x461 (x501 x555)) x555))
(assert (= (x461 (x1481 37714057306076988483118529490347679105585116642029194716945419020321082336612)) 37714057306076988483118529490347679105585116642029194716945419020321082336612))
(assert (x734 x1249))
(assert (x734 x789))
(assert (x734 x1160))
(assert (x734 x323))
(assert (x734 x196))
(assert (=> (<= x331 10000) (= (x1481 x331) (x501 x331))))
(assert (=> (>= 10000 x1364) (= (x1481 x1364) (x501 x1364))))
(assert (x734 x965))
(assert (x734 x1466))
(assert (= x1360 (=> (= x1274 (= x735 274184521717934524641157099916833587214)) (and (=> (not x1274) x257) (=> (and (= x931 (x860 (- x911 4))) (= (< x127 x199) x309) (= 32 x173) (= (x288 (x501 x1134) (x1481 1) 0) x296) (>= 1461501637330902918203684832716283019655932542975 x1134) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x931) (and (> 64 x931) (= (<= x931 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x578) x1274 (= (x1185 x296) x1370) (= x3 x821) (= x1234 x1370) (= x911 68) (= x1346 (x1217 (x501 274184521717934524641157099916833587214))) (not x578) (= x1316 (>= (+ x1370 x629) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x288 (x501 274184521717934524641157099916833587206) (x1481 1) 0) x1268) (not (= x901 649617121)) (= 1 x340) (not (= x901 2514000705)) (= x199 x727) (not x51) (<= x127 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1379 x508) x127) (= x1416 (x288 (x501 x1134) (x1481 1) 0)) (not x309) (not (> 649617121 x901)) (>= x1370 0) (= x496 274184521717934524641157099916833587206) (= (> x629 x127) x51) (= x852 (x860 (- x127 x199))) (= x199 x629) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x575) (= x1134 x1224) (= x901 2835717307) (= x1350 x911) (<= 0 x127) (= (+ x1349 x1234) x1319) (not (= 1889567281 x901)) (<= x1370 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1346 0) (= x1349 x629) (not x1316) (not (< x911 4)) (= x1134 x231) (< (+ x1370 x629) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x508 (x288 (x501 274184521717934524641157099916833587206) (x1481 1) 0)) (= 274184521717934524641157099916833587206 x50) (not (= x901 826074471))) x792)))))
(assert (= x18 (x461 (x501 x18))))
(assert (x734 x226))
(assert (x734 x1520))
(assert (x734 x705))
(assert (x734 x1086))
(assert (x991 x1435 x89))
(assert (= (x461 (x1481 142201243)) 142201243))
(assert (x734 x1499))
(assert (x734 x598))
(assert (x734 x769))
(assert (= (x411 x101) (ite (= x226 x101) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x101))))
(assert (x734 x946))
(assert (= (and x828 x819) x1524))
(assert (x734 x1448))
(assert (= (ite (= x63 x602) x21 (x209 x602)) (x1239 x602)))
(assert (= x789 (x461 (x501 x789))))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x562) (<= 0 x562) (= (x288 (x501 x1156) x249 0) x336) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x1156) (= x1006 (x288 (x501 x109) x336 0)) (= x84 (= 0 x562)) (= x249 (x288 (x501 x1188) (x1481 7) 0)) (= x109 (x19 1461501637330902918203684832716283019655932542975 x23)) (= x562 (x612 x1006))) (and (=> x84 x871) (=> (and (= x654 x1188) (not x84)) x895))) x942))
(assert (x734 x875))
(assert (x734 x887))
(assert (= x877 x918))
(assert (= x1376 (or (and x1524 x624) (and x828 (not x819)) (and (not x1059) x1074))))
(assert (x734 x1356))
(assert (= (x209 x1215) (ite (= x1165 x1215) x128 (x28 x1215))))
(assert (x734 x74))
(assert (= (x1287 x1076) (ite (and x1252 x622) (x998 x1076) (x1254 x1076))))
(assert (x734 x566))
(assert (x734 x339))
(assert (= (x1205 x1533) (ite (= x1533 x108) x878 (x1547 x1533))))
(assert (=> (>= 10000 x1058) (= (x1481 x1058) (x501 x1058))))
(assert (= (x501 911411945) (x1481 911411945)))
(assert (x1362 x1083))
(assert (=> (>= 10000 x524) (= (x1481 x524) (x501 x524))))
(assert (= (x461 (x501 x453)) x453))
(assert (=> (>= 10000 x195) (= (x501 x195) (x1481 x195))))
(assert (= (ite (and x579 x620) (x91 x1192) (x221 x1192)) (x668 x1192)))
(assert (= (x1532 x235) (ite (= x768 x235) x1438 (x382 x235))))
(assert (= (x1481 2514000705) (x501 2514000705)))
(assert (= (x461 (x501 x1340)) x1340))
(assert (x734 x350))
(assert (=> (>= 10000 x848) (= (x501 x848) (x1481 x848))))
(assert (= (=> (= x1152 x493) x378) x574))
(assert (=> (>= 10000 x609) (= (x501 x609) (x1481 x609))))
(assert (x734 x1468))
(assert (x1362 x1091))
(assert (x734 x7))
(assert (= (x1532 x602) (ite (= x768 x602) x1438 (x382 x602))))
(assert (= (ite (= x398 x993) x1356 (x411 x398)) (x382 x398)))
(assert (x734 x1152))
(assert (x1362 x208))
(assert (x1362 x580))
(assert (= (x64 x101) (ite (and x315 x1553) (x1042 x101) (x546 x101))))
(assert (= (ite (and (not x714) x864 x490) (x549 x235) (x337 x235)) (x599 x235)))
(assert (x734 x680))
(assert (x734 x398))
(assert (x1362 x890))
(assert (= (x709 x1135) (ite (and x1204 x1510) (x603 x1135) (x1444 x1135))))
(assert (= (x501 468353030) (x1481 468353030)))
(assert (x734 x210))
(assert (= (x549 x1215) (ite (and (not x923) x541 x280 x1077 x864 x490) (x796 x1215) (ite (and x280 x864 x1077 x490 (not x541)) (x1532 x1215) (ite (and (not x280) x1077 x864 x490) (x382 x1215) (ite (and (not x1077) x864 x490) (x411 x1215) (x1040 x1215)))))))
(assert (= (x796 x1227) (ite (= x246 x1227) x883 (x1532 x1227))))
(assert (= x1117 (x461 (x501 x1117))))
(assert (= (ite (= x602 x782) x260 (x518 x602)) (x278 x602)))
(assert (= x1187 (=> (= x1138 0) x1392)))
(assert (x734 x847))
(assert (=> (>= 10000 x781) (= (x1481 x781) (x501 x781))))
(assert (= x207 (x461 (x501 x207))))
(assert (= x1386 (x461 (x501 x1386))))
(assert (x734 x563))
(assert (= (x461 (x501 x1050)) x1050))
(assert (=> (<= x1453 10000) (= (x1481 x1453) (x501 x1453))))
(assert (= (x461 (x501 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (= (ite (and x620 x831 (not x1377) (not x194)) (x1239 x602) (ite (and (not x831) x620 (not x194)) (x209 x602) (ite (and x194 x620) (x209 x602) (x1328 x602)))) (x5 x602)))
(assert (x734 x1165))
(assert (= (x209 x1227) (ite (= x1227 x1165) x128 (x28 x1227))))
(assert (= (ite (= x226 x398) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x398)) (x411 x398)))
(assert (x734 x713))
(assert (= (x461 (x501 x1518)) x1518))
(assert (x734 x208))
(assert (= (and x990 x1555) x1515))
(assert (x734 x377))
(assert (= (x501 2258409472) (x1481 2258409472)))
(assert (x734 x729))
(assert (= (x461 (x501 x364)) x364))
(assert (= (ite (and x315 x1553) (x1042 x1215) (x546 x1215)) (x64 x1215)))
(assert (x1362 x1050))
(assert (= (ite (= x553 x63) x21 (x209 x553)) (x1239 x553)))
(assert (= (x894 x101) (ite (= x101 x1300) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1548 x101))))
(assert (x734 x314))
(assert (=> (<= x1290 10000) (= (x501 x1290) (x1481 x1290))))
(assert (x734 x995))
(assert (= (=> (and (= (= 0 x665) x716) (or x622 (and (= x1166 (x288 (x501 x869) x773 0)) (= (x19 1461501637330902918203684832716283019655932542975 x23) x869) (= x967 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= x671 (x288 (x501 x1188) (x1481 9) 0)) (not x622) (= (x288 (x501 x967) x671 0) x773))) (= (= 0 x841) x622) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x525) (<= x1454 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1095 x1367) x729) (= x601 (= x1327 0)) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x208) (= x525 (x394 x1147)) (= x1113 (x29 (+ 32 x924))) (= (< x1454 x53) x594) (= x692 (x288 (x501 x208) x130 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729) (= x53 (x1338 x1113)) (<= 0 x1454) (= (x288 (x501 x651) x692 0) x1313) (= x651 (x19 1461501637330902918203684832716283019655932542975 x23)) (= x130 (x288 (x501 x1188) (x1481 7) 0)) (= x1147 (x288 (x501 x1188) (x1481 1) 0)) (= (x954 x1147 1) x1367) (or (and (= x1336 (x19 1461501637330902918203684832716283019655932542975 x23)) (< (* x665 x1327) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x601) (= x313 (x288 (x501 x1188) (x1481 7) 0)) (= x1513 (x288 (x501 x1257) x825 0)) (= x413 x481) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x1257) (= x323 x1229) (= (* x1327 x665) x413) (= x825 (x288 (x501 x1188) (x1481 3) 0)) (= x1024 (x288 (x501 x708) x1133 0)) (= x1256 (x288 (x501 x1336) x1513 0)) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x984) (= (x19 1461501637330902918203684832716283019655932542975 x23) x708) (= x1133 (x288 (x501 x984) x313 0))) (and (= (x288 (x501 x1188) (x1481 7) 0) x1238) (= x534 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= x323 x1229) x601 (= (x288 (x501 x534) x1238 0) x476) (= (x288 (x501 x1381) x476 0) x1223) (= x1381 (x19 1461501637330902918203684832716283019655932542975 x23)))) (not x716) (>= x525 0) (= x1454 (x612 x1313)) (>= x729 0) (= x323 (x29 (+ 64 x924))) (or (and (or (and (= x60 (x1338 x924)) (not (> x60 x971)) x1196 (= x1119 (x860 (- x971 x60))) (= x1119 x1327)) (and (= (ite (> 604800 x987) x987 604800) x1124) (not x1196) (= 604800 x1483) (= x987 (x860 (- x971 x1454))) (not (> x1454 x971)) (= x1327 x1124))) (= (x1338 x1113) x96) (= (= 0 x1454) x1196) (or (and (not x1025) (= x1352 x971)) (and (= (x1338 x1113) x405) (= x405 x971) x1025)) x594 (= x1025 (> x1352 x96))) (and (= x1327 0) (not x594)))) (and (= x131 (x288 (x501 x344) x926 0)) (= (x288 (x501 x1188) (x1481 7) 0) x926) (= x1229 x924) x716 (= (x19 1461501637330902918203684832716283019655932542975 x23) x609) (= x1210 (x288 (x501 x609) x131 0)) (= x344 (x19 1461501637330902918203684832716283019655932542975 x1523))))) x1161) x1486))
(assert (= (x461 (x501 x1091)) x1091))
(assert (x734 x495))
(assert (x1362 x963))
(assert (= (=> (and (= x61 (> x497 x1299)) (not (= x166 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x497 (x29 (+ 1 x1188)))) (and (=> (not x61) x969) (=> (and (= x356 x597) x61) x535))) x592))
(assert (x734 x1478))
(assert (= (x501 2939843472) (x1481 2939843472)))
(assert (x1362 x217))
(assert (x734 x500))
(assert (= (ite (= x398 x63) x21 (x209 x398)) (x1239 x398)))
(assert (= (x1030 x633) 0))
(assert (x734 x1461))
(assert (x734 x1159))
(assert (= (and x864 x490) x1510))
(assert (=> (<= x22 10000) (= (x1481 x22) (x501 x22))))
(assert (= (x501 1889567281) (x1481 1889567281)))
(assert (x734 x114))
(assert (x734 x1381))
(assert (= (x549 x633) (ite (and x541 x1077 (not x923) x280 x490 x864) (x796 x633) (ite (and (not x541) x1077 x280 x864 x490) (x1532 x633) (ite (and x490 x1077 x864 (not x280)) (x382 x633) (ite (and x864 (not x1077) x490) (x411 x633) (x1040 x633)))))))
(assert (= (x1481 635128645) (x501 635128645)))
(assert (x734 x1041))
(assert (= (ite (and x1553 x315) (x1042 x1302) (x546 x1302)) (x64 x1302)))
(assert (x734 x322))
(assert (= (x461 (x1481 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x734 x1357))
(assert (x734 x403))
(assert (x734 x1164))
(assert (=> (<= x210 10000) (= (x501 x210) (x1481 x210))))
(assert (=> (>= 10000 x208) (= (x501 x208) (x1481 x208))))
(assert (x734 x602))
(assert (x734 x1490))
(assert (x734 x1496))
(assert (= (ite (and x831 x620 (not x194) (not x1377)) (x1239 x822) (ite (and (not x831) (not x194) x620) (x209 x822) (ite (and x620 x194) (x209 x822) (x1328 x822)))) (x5 x822)))
(assert (=> (<= x1340 10000) (= (x1481 x1340) (x501 x1340))))
(assert (x734 x54))
(assert (= (x501 2835717307) (x1481 2835717307)))
(assert (=> (<= x662 10000) (= (x501 x662) (x1481 x662))))
(assert (x734 x560))
(assert (= x315 x275))
(assert (= (=> (and (= (= x173 0) x513) (= (x13 x235) x787) (= x1479 (> x787 0)) (= x1049 (x977 (x501 x735))) (or (and (= (x29 (+ x1144 x34)) x1413) (= (x29 (+ x173 63)) x566) (not x513) (= x284 (x29 (+ 96 x880))) (= (x19 115792089237316195423570985008687907853269984665640564039457584007913129639904 x566) x34) (= x840 x1413) (= x235 x1144)) (and x513 (= x235 96) (= x1144 x840))) x652 (not (= 0 x340)) (= x652 (< (x726 (x501 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (not x1479) (and (= x705 x74) (not (or (and (< x1427 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1427) true)) (> x1427 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1427 (x13 x235)) (> x705 0) x1479 (= (x13 x314) x705) (= x314 (x29 (+ x235 32))) (= (= 0 x705) x1280) (= (not x1280) x1509) (= x74 (ite x1509 1 0)))) (= (x726 (x501 274184521717934524641157099916833587206)) x698)) x1082) x792))
(assert (= (ite (and (not x194) x620 (not x1377) x831) (x1239 x1135) (ite (and (not x194) (not x831) x620) (x209 x1135) (ite (and x194 x620) (x209 x1135) (x1328 x1135)))) (x5 x1135)))
(assert (= (x1030 x1302) 0))
(assert (= (x461 (x501 x1351)) x1351))
(assert (x303 x23))
(assert (= x1266 (x461 (x501 x1266))))
(assert (= x1521 (x461 (x501 x1521))))
(assert (= (x1030 192) 0))
(assert (= (x1481 274184521717934524641157099916833587206) (x501 274184521717934524641157099916833587206)))
(assert (x1362 x564))
(assert (x734 x1054))
(assert (= (ite (= x916 x1165) x128 (x28 x916)) (x209 x916)))
(assert (x734 x274))
(assert (=> (>= 10000 x1294) (= (x501 x1294) (x1481 x1294))))
(assert (= x120 (=> (and (= x272 (> (x1217 (x501 274184521717934524641157099916833587206)) 0)) (= x225 x887) (<= x887 1461501637330902918203684832716283019655932542975) (<= x359 1461501637330902918203684832716283019655932542975) (= false x1565) (= (x355 (x501 274184521717934524641157099916833587214)) x884) (= x39 false) (>= x213 0) (<= 0 x1159) (= (> (x1217 (x501 274184521717934524641157099916833587214)) 0) x1320) (= false x1272) (= x213 x219) x272 (= (x355 (x501 274184521717934524641157099916833587218)) x256) (<= 0 x937) (<= x213 1461501637330902918203684832716283019655932542975) (>= x884 0) (= false x725) (<= 0 x256) (>= x887 0) (= x937 x885) (= x1414 x374) (= x737 (x355 (x501 274184521717934524641157099916833587206))) (= x563 2939843472) (>= x737 0) x949 x1320 (= x214 5) (>= 1461501637330902918203684832716283019655932542975 x1159) (>= x359 0) (= (< 0 (x1217 (x501 274184521717934524641157099916833587218))) x949) (>= 1461501637330902918203684832716283019655932542975 x937)) x1324)))
(assert (x1362 x1149))
(assert (x734 x101))
(assert (x734 x1462))
(assert (= (x501 826074471) (x1481 826074471)))
(assert (x1362 x210))
(assert (= x263 (x461 (x501 x263))))
(assert (= (ite (and x1553 x315) (x1042 x602) (x546 x602)) (x64 x602)))
(assert (x734 x318))
(assert (= (x461 (x501 x650)) x650))
(assert (= (x461 (x501 x676)) x676))
(assert (= (and x1074 x1059) x590))
(assert (x734 x225))
(assert (x734 x1299))
(assert (x734 x267))
(assert (= (ite (= x602 x1300) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1548 x602)) (x894 x602)))
(assert (=> (>= 10000 x434) (= (x1481 x434) (x501 x434))))
(assert (= (x461 (x501 x107)) x107))
(assert (x734 x1221))
(assert (= 0 (x1030 x1402)))
(assert (x734 x1402))
(assert (x734 x557))
(assert (x734 x872))
(assert (= (x709 x46) (ite (and x1510 x1204) (x603 x46) (x1444 x46))))
(assert (= (ite (= x701 x235) x914 (x974 x235)) (x1547 x235)))
(assert (x734 x571))
(assert (=> (>= 10000 x850) (= (x501 x850) (x1481 x850))))
(assert (x734 x1500))
(assert (= x535 (=> (= x490 (> x571 0)) (and (=> (and (= (x529 x1125) x735) (= (x1559 x815) x1397) (= x1097 (x29 (+ 36 x597))) (or (and (not x1077) (= 0 x1465)) (and (= (x411 x553) x1356) x1077 (= (> x799 32) x280) (or (and (= x768 (x29 (+ x880 96))) (= (> x799 64) x541) x280 (or (and (= (> x799 96) x923) x541 (= x883 (x1532 x822)) (or (and x923 (= x59 (x29 (+ x880 160))) (= x324 (x796 x1227)) (= x1131 (> x799 128)) (= (x29 (+ x597 128)) x1227) (= x1465 128) (not x1131)) (and (not x923) (= x1465 96))) (= (x29 (+ 96 x597)) x822) (= x246 (x29 (+ x880 128)))) (and (= x1465 64) (not x541))) (= x1438 (x382 x1208)) (= x1208 (x29 (+ x597 64)))) (and (not x280) (= 32 x1465))) (= x1144 x993) (= x295 x553))) (= x1125 x1390) (= x1558 (x1217 (x501 x735))) (= (x29 (+ x597 32)) x295) (= x327 (x1519 x295)) x370 (= x979 (x29 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1372))) (<= x735 1461501637330902918203684832716283019655932542975) (> x1397 0) (= x799 (x411 x597)) (= x711 (x860 (- x880 x597))) (= x880 (x29 (+ x597 100))) (= (> x1465 x799) x714) (= x370 (> x1558 0)) (or (not x714) (and (= (x29 (+ x799 x1144)) x7) x714)) (= (x1559 x916) x727) (= x1144 (x29 (+ 128 x1097))) (= x1224 (x19 1461501637330902918203684832716283019655932542975 x23)) (= (x19 26959946667150639794667015087019630673637144422540572481103610249215 x327) x1372) (< 0 x571) (= x1077 (< 0 x799)) (= x226 (x29 (+ x1097 96))) x490 (= (x29 (+ 160 x875)) x916) (= 0 x1527) (= (x860 (- x711 32)) x584) (= (x29 (+ x597 68)) x1363)) x1439) (=> (not x490) x1010)))))
(assert (x734 x1498))
(assert (x1362 x239))
(assert (= x877 (or (and x1204 x1510) (and x973 x1274))))
(assert (= (ite (= x993 x1135) x1356 (x411 x1135)) (x382 x1135)))
(assert (x734 x867))
(assert (= (x461 (x501 x1484)) x1484))
(assert (= (x209 x1229) (ite (= x1229 x1165) x128 (x28 x1229))))
(assert (x734 x1441))
(assert (x734 x472))
(assert (x734 x218))
(assert (x303 x11))
(assert (x734 x1175))
(assert (x734 x1527))
(assert (x1362 x364))
(assert (x734 x1216))
(assert (x1362 x1381))
(assert (= (ite (and (not x1377) (not x194) x831 x620) (x1239 x553) (ite (and (not x831) x620 (not x194)) (x209 x553) (ite (and x620 x194) (x209 x553) (x1328 x553)))) (x5 x553)))
(assert (= x343 (x461 (x501 x343))))
(assert (x734 x1209))
(assert (x734 x53))
(assert (=> (>= 10000 x499) (= (x1481 x499) (x501 x499))))
(assert (x734 x649))
(assert (= (ite (= x63 x1135) x21 (x209 x1135)) (x1239 x1135)))
(assert (x734 x1427))
(assert (x734 x256))
(assert (= (=> (= x886 0) x1332) x269))
(assert (=> (>= 10000 x358) (= (x501 x358) (x1481 x358))))
(assert (=> (>= 10000 x1344) (= (x501 x1344) (x1481 x1344))))
(assert (= x1310 (=> (= x348 (= x1083 274184521717934524641157099916833587214)) (and (=> (and (= (+ x266 x551) x956) (not (= x795 649617121)) (= (x288 (x501 x536) (x1481 1) 0) x191) (not x1563) (= x519 (x146 x383)) (= x354 274184521717934524641157099916833587206) (= (x154 x191) x898) (= (>= (+ x898 x192) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1563) (= x536 x1394) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1536) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1536) true) (> 64 x1536))) x740) (= x1508 (x288 (x501 274184521717934524641157099916833587206) (x1481 1) 0)) (< 0 x1028) (= x1089 x192) (= x872 (x860 (- x519 x1089))) (< (+ x898 x192) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 32 x82) (not (= x795 1889567281)) (>= x519 0) (= x1038 (< x519 x1089)) (<= x536 1461501637330902918203684832716283019655932542975) (= x1014 x980) (not (= 826074471 x795)) (= x898 x551) (= x1398 274184521717934524641157099916833587206) (not x1038) (not (> 4 x112)) (not (= 2514000705 x795)) (not x144) (= x1395 x112) (not x740) (>= x898 0) x348 (= x144 (< x519 x192)) (= (x1217 (x501 274184521717934524641157099916833587214)) x1028) (<= x898 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x795 2835717307) (= x192 x266) (= x1089 x1473) (= x1536 (x860 (- x112 4))) (= x112 68) (not (< x795 649617121)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x591) (= 1 x372) (= (x288 (x501 274184521717934524641157099916833587206) (x1481 1) 0) x383) (= x536 x1311) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x519)) x1525) (=> (not x348) x1566)))))
(assert (= (=> (and (= (x288 (x501 x453) x639 0) x1034) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x40) (= x417 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= (= x40 0) x1094) (= (x288 (x501 x417) x934 0) x639) (= x453 (x19 1461501637330902918203684832716283019655932542975 x23)) (= (x288 (x501 x850) (x1481 7) 0) x934) (<= 0 x40) (= (x612 x1034) x40)) (and (=> (and (not x1094) (= x850 x654)) x895) (=> (and (= (> x164 0) x2) (not x2) x1094 (= x164 (x860 (- x850 1)))) x1153))) x1250))
(assert (x734 x319))
(assert (x734 x240))
(assert (= (ite (and x1252 x716) (x1420 x908) (ite (and x601 (not x716) x1252) (x1420 x908) (x687 x908))) (x862 x908)))
(assert (x734 x520))
(assert (x734 x4))
(assert (x734 x214))
(assert (=> (<= x1138 10000) (= (x501 x1138) (x1481 x1138))))
(assert (= (x461 (x501 x436)) x436))
(assert (= (ite (= x66 x602) x54 (x978 x602)) (x518 x602)))
(assert (= x1188 (x461 (x501 x1188))))
(assert (x734 x727))
(assert (x303 x1086))
(assert (= (x209 x553) (ite (= x553 x1165) x128 (x28 x553))))
(assert (= x114 (x461 (x501 x114))))
(assert (= (x1547 x101) (ite (= x101 x701) x914 (x974 x101))))
(assert (x734 x1117))
(assert (x734 x766))
(assert (= (ite (= x1135 x246) x883 (x1532 x1135)) (x796 x1135)))
(assert (x734 x1122))
(assert (x734 x224))
(assert (x734 x815))
(assert (= x1308 (x461 (x501 x1308))))
(assert (x734 x1457))
(assert (x734 x779))
(assert (= (x1532 x1135) (ite (= x768 x1135) x1438 (x382 x1135))))
(assert (x734 x186))
(assert (x1362 x1518))
(assert (=> (>= 10000 x1225) (= (x1481 x1225) (x501 x1225))))
(assert (x679 x23 x1105))
(assert (x734 x119))
(assert (= x532 (and x673 x1407)))
(assert (=> (>= 10000 x890) (= (x501 x890) (x1481 x890))))
(assert (x734 x199))
(assert (= x1225 (x461 (x501 x1225))))
(assert (= (x1547 x916) (ite (= x916 x701) x914 (x974 x916))))
(assert (x734 x1307))
(assert (x734 x640))
(assert (x734 x1171))
(assert (= (x1481 142201243) (x501 142201243)))
(assert (x734 x1535))
(assert (x734 x407))
(assert (x1362 x935))
(assert (= (ite (= x1402 x63) x21 (x209 x1402)) (x1239 x1402)))
(assert (x734 x787))
(assert (= (or x1048 x430) x470))
(assert (= x482 x823))
(assert (= (x784 x1570) (ite (and x831 (not x194) (not x1377) x620) (x1260 x1570) (ite (and x620 (not x831) (not x194)) (x752 x1570) (ite (and x194 x620) (x752 x1570) (x1112 x1570))))))
(assert (x734 x993))
(assert (x1362 x656))
(assert (= (x461 (x501 x656)) x656))
(assert (= (x1547 x108) (ite (= x108 x701) x914 (x974 x108))))
(assert (x1362 x162))
(assert (x734 x230))
(assert (x734 x623))
(assert (=> (>= 10000 x906) (= (x501 x906) (x1481 x906))))
(assert (= 604800 (x461 (x1481 604800))))
(assert (= (x5 x101) (ite (and (not x1377) x831 (not x194) x620) (x1239 x101) (ite (and (not x194) (not x831) x620) (x209 x101) (ite (and x194 x620) (x209 x101) (x1328 x101))))))
(assert (= (x1030 x1208) 0))
(assert (= (ite (= x246 x815) x883 (x1532 x815)) (x796 x815)))
(assert (= (x501 2418364589) (x1481 2418364589)))
(assert (x734 x636))
(assert (= (ite (= x398 x815) x571 (x353 x398)) (x1042 x398)))
(assert (x734 x1388))
(assert (= (ite (and x620 (not x1377) (not x194) x831) (x1239 x295) (ite (and x620 (not x194) (not x831)) (x209 x295) (ite (and x194 x620) (x209 x295) (x1328 x295)))) (x5 x295)))
(assert (x734 x1440))
(assert (x734 x1018))
(assert (=> (<= x564 10000) (= (x501 x564) (x1481 x564))))
(assert (=> (>= 10000 x1266) (= (x501 x1266) (x1481 x1266))))
(assert (= (x501 759532456) (x1481 759532456)))
(assert (x734 x15))
(assert (x734 x60))
(assert (x734 x898))
(assert (= (ite (and x541 x1077 x864 x490 x280 (not x923)) (x796 x235) (ite (and x490 (not x541) x1077 x864 x280) (x1532 x235) (ite (and x1077 x490 (not x280) x864) (x382 x235) (ite (and x864 (not x1077) x490) (x411 x235) (x1040 x235))))) (x549 x235)))
(assert (x734 x1387))
(assert (= x469 (x461 (x501 x469))))
(assert (x734 x675))
(assert (= (ite (and x1553 x315) (x1042 x314) (x546 x314)) (x64 x314)))
(assert (= (x461 (x501 x1264)) x1264))
(assert (x734 x1184))
(assert (= (x382 x602) (ite (= x602 x993) x1356 (x411 x602))))
(assert (x734 x555))
(assert (= x1321 (x461 (x501 x1321))))
(assert (x303 x402))
(assert (x734 x515))
(assert (x734 x907))
(assert (= (x1547 x822) (ite (= x701 x822) x914 (x974 x822))))
(assert (= (=> (and (or (and (= x1388 1) (= x480 (x288 (x501 x434) x939 0)) (= (x1287 x721) x1084) (= x1453 (x19 1461501637330902918203684832716283019655932542975 x23)) (= (x288 (x501 x1453) x480 0) x721) (not x920) (= x434 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= x939 (x288 (x501 x886) (x1481 9) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1084) (>= x1084 0) (= x1054 x1084)) (and (= 0 x1388) (= 0 x1054) x920)) (= (= 0 x886) x920)) x42) x1332))
(assert (x734 x235))
(assert (= 2743102681 (x461 (x1481 2743102681))))
(assert (x734 x507))
(assert (=> (<= x696 10000) (= (x501 x696) (x1481 x696))))
(assert (x734 x1))
(assert (x734 x106))
(assert (= (ite (= x226 x815) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x815)) (x411 x815)))
(assert (= (x461 (x501 x162)) x162))
(assert (x1362 x107))
(assert (= (or (and x248 (not x68)) (and x1033 x1399) (and (not x1407) x673)) x234))
(assert (x1362 x715))
(assert (= x56 (=> (and (<= 0 x389) (>= 1461501637330902918203684832716283019655932542975 x22) (not (= 2690754053 x837)) (= x1403 x389) (= (x994 x674) x389) (not (< x837 2690754053)) (not (= x837 2743102681)) (= 2798343961 x837) (= (x288 (x501 x539) (x1481 5) 0) x203) (= x674 (x288 (x501 x22) x203 0)) (not (= x837 2764855426)) (> x506 0) (< x837 2960351575) (not (> 2293535753 x837)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x389) (= x506 (x1217 (x501 274184521717934524641157099916833587206)))) (=> (and (= x1414 x1371) (= x1403 x218) (= x213 x1493)) x77))))
(assert (= (x1030 x822) 0))
(assert (x734 x1359))
(assert (x734 x1315))
(assert (x1362 x384))
(assert (= (x1481 649617121) (x501 649617121)))
(assert (x734 x1052))
(assert (= (ite (= x822 x63) x21 (x209 x822)) (x1239 x822)))
(assert (= x561 (x461 (x501 x561))))
(assert (= (x461 (x501 x264)) x264))
(assert (x303 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x734 x390))
(assert (x1362 274184521717934524641157099916833587218))
(assert (x734 x356))
(assert (= (ite (= x398 x66) x54 (x978 x398)) (x518 x398)))
(assert (x734 x1505))
(assert (= (ite (= x1227 x226) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x1227)) (x411 x1227)))
(assert (x734 x967))
(assert (= (x461 (x501 x708)) x708))
(assert (= (x461 (x501 x886)) x886))
(assert (x734 x832))
(assert (= x301 (x461 (x501 x301))))
(assert (=> (<= x851 10000) (= (x501 x851) (x1481 x851))))
(assert (x734 x155))
(assert (= x1291 (x461 (x501 x1291))))
(assert (x734 x384))
(assert (= (x461 (x1481 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x1362 x912))
(assert (= x651 (x461 (x501 x651))))
(assert (= x1371 (x461 (x501 x1371))))
(assert (x734 x139))
(assert (x734 x878))
(assert (= (x461 (x501 x497)) x497))
(assert (= 759532456 (x461 (x1481 759532456))))
(assert (x734 x584))
(assert (x734 x840))
(assert (x734 x935))
(assert (x1362 x646))
(assert (= (ite (and x831 (not x1377) (not x194) x620) (x1239 x108) (ite (and x620 (not x831) (not x194)) (x209 x108) (ite (and x194 x620) (x209 x108) (x1328 x108)))) (x5 x108)))
(assert (= (=> (and (= x1018 (x1217 (x501 274184521717934524641157099916833587206))) (= x775 x1383) (>= 1461501637330902918203684832716283019655932542975 x217) (not (> 2293535753 x786)) (<= x1383 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x328 (x288 (x501 x326) x67 0)) (<= 0 x1383) (> 2960351575 x786) (not (= x786 2690754053)) (= x1534 (x288 (x501 x217) x328 0)) (not (> 2690754053 x786)) (= x1383 (x93 x1534)) (>= 1461501637330902918203684832716283019655932542975 x326) (= (x288 (x501 x1301) (x1481 3) 0) x67) (= x786 2743102681) (< 0 x1018)) (=> (and (= x1159 x447) (= x1109 x775) (= x213 x595) (= x397 x359) (= x1414 x995)) x938)) x1343))
(assert (x734 x18))
(assert (x734 x837))
(assert (= (ite (= x235 x63) x21 (x209 x235)) (x1239 x235)))
(assert (x734 x851))
(assert (= (x382 x314) (ite (= x993 x314) x1356 (x411 x314))))
(assert (= (x1481 2960351575) (x501 2960351575)))
(assert (= x522 (x461 (x501 x522))))
(assert (x1362 x1134))
(assert (= (x461 (x501 x963)) x963))
(assert (x1362 x708))
(assert (= x444 (=> (and (= x879 (x288 (x501 x851) x468 0)) (= x958 (x288 (x501 x497) (x1481 5) 0)) (= x905 (x288 (x501 x497) (x1481 3) 0)) (= (x19 1461501637330902918203684832716283019655932542975 x23) x781) (= x1384 (= 0 x1500)) (= (x1219 x879) x90) (<= 0 x504) (<= 0 x502) (>= x702 0) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x497)) (= x913 (< x90 x73)) (= x604 (x29 (+ 2 x1188))) (= (x29 (+ 32 x675)) x701) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x90) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x504) (= (x288 (x501 x497) (x1481 1) 0) x582) (or x133 (and (= x576 (div x250 x702)) (not x133) (or (not x1255) (and (= (x288 (x501 x442) x1275 0) x1172) (>= 1461501637330902918203684832716283019655932542975 x1149) (= x1386 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= (x288 (x501 x1386) x570 0) x409) (< 0 x571) (= (x784 x1471) x1122) (< 0 x463) (= x1052 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= x1214 x1145) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x502 x1214)) (= (x1547 x108) x1146) (= (+ x1286 x1145) x259) (= (x19 1461501637330902918203684832716283019655932542975 x23) x358) (= (* x642 x576) x12) (< 0 x571) (<= 0 x642) x1255 (= x465 x1146) (= (+ x1418 x465) x878) (<= x656 1461501637330902918203684832716283019655932542975) (= (x529 x1512) x1340) (= 0 x1122) (= (x288 (x501 x497) (x1481 4) 0) x570) (= x1275 (x288 (x501 x497) (x1481 11) 0)) (= x1418 x241) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1214) (= x1278 (< 1 x571)) (<= x642 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x288 (x501 x1149) x1245 0) x542) (or (and (= x95 (x288 (x501 x425) x1549 0)) (< 1 x571) (>= 1461501637330902918203684832716283019655932542975 x503) (= (x529 x113) x1290) (= x1157 (x288 (x501 x503) x95 0)) (<= x1290 1461501637330902918203684832716283019655932542975) (= x876 x373) (< (* x1248 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x530 x452) (= x1197 (x1205 x815)) (= x263 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= (x29 (+ 64 x507)) x113) (= (x288 (x501 x76) x1295 0) x371) x1278 (= 0 x1173) (= x301 (x529 x113)) (not x686) (= (x288 (x501 x922) x1358 0) x1295) (= x1184 (+ x122 x373)) (= (x19 1461501637330902918203684832716283019655932542975 x23) x425) (< 1 x571) (= x530 (x52 x1157)) (= x502 x450) (= x1358 (x288 (x501 x497) (x1481 4) 0)) (>= x1173 0) (= x544 (* x1248 x576)) (= (+ x452 x450) x694) (= x1228 (x1205 x1402)) (= (x288 (x501 x301) x1503 0) x273) (= (x288 (x501 x1290) x371 0) x1570) (<= 0 x530) (>= x1248 0) (> x1197 1) (= x503 (x529 x113)) (= x1173 (x52 x1570)) (= (x1458 x273) x1248) (= (x288 (x501 x263) x1541 0) x1503) (= x1549 (x288 (x501 x1484) x836 0)) (= x686 (> x571 2)) (<= x301 1461501637330902918203684832716283019655932542975) (<= x1248 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x19 1461501637330902918203684832716283019655932542975 x23) x76) (< (+ x502 x530) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1484 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= (x288 (x501 x497) (x1481 11) 0) x1541) (= x1402 (x29 (+ 192 x875))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x530) (= (div x544 1000000000000000000) x876) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x922) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1173) (= x836 (x288 (x501 x497) (x1481 4) 0)) (= x1228 x122) (> x571 1) (< (+ x1228 x876) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x1278)) (= (x288 (x501 x656) x1172 0) x48) (= x1471 (x288 (x501 x1340) x1177 0)) (= x1266 (x19 1461501637330902918203684832716283019655932542975 x23)) (= (x529 x1512) x656) (= (div x12 1000000000000000000) x241) (= (x1547 x815) x463) (= x1390 x1512) (= (x29 (+ x875 160)) x108) (<= 0 x1122) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1146 x241)) (= (x1458 x48) x642) (= x502 x1286) (<= x1340 1461501637330902918203684832716283019655932542975) (= x1214 (x784 x542)) (= x1149 (x529 x1512)) (> x571 0) (= (x288 (x501 x1052) x1411 0) x136) (= x1411 (x288 (x501 x497) (x1481 4) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1122) (< (* x576 x642) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1245 (x288 (x501 x1266) x136 0)) (= (x288 (x501 x358) x409 0) x1177) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x442) (<= 0 x1214))) (= (x19 x402 x1490) x693) (= x693 0) (= (< 0 x571) x1255) (= x1490 (ite (< 115792089237316195423570985008687907853269984665640564039457 x502) 1 0)) (= 1 x402) (> x702 0) (= x250 (mod (* x502 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x72 (= 0 x138)) (= x73 (x1547 x701)) (or (and (= (x288 (x501 x497) (x1481 6) 0) x1405) (= x1126 (x19 1461501637330902918203684832716283019655932542975 x1523)) x72 (= (x288 (x501 x1126) x1405 0) x1013)) (and (= x1378 x643) (= (* x138 x1008) x1378) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x18) (= x847 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= (x288 (x501 x497) (x1481 6) 0) x1121) (= (x288 (x501 x497) (x1481 5) 0) x1169) (= x505 (x288 (x501 x18) x1121 0)) (= (x288 (x501 x847) x1169 0) x320) (not x72) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x138 x1008)))) (= x504 (x394 x582)) (or (and (or (and (not x921) (= x965 x1352)) (and (= x881 x965) (= x881 (x1547 x701)) x921)) (or (and (= (x1547 x675) x407) (not (> x407 x965)) (= (x860 (- x965 x407)) x1514) x157 (= x138 x1514)) (and (= x119 (ite (< x432 604800) x432 604800)) (not x157) (= x138 x119) (= x855 604800) (not (> x90 x965)) (= (x860 (- x965 x90)) x432))) (= x157 (= x90 0)) (= (> x1352 x186) x921) (= (x1547 x701) x186) x913) (and (= x138 0) (not x913))) (= (x954 x582 1) x121) (= x211 x597) (or x1384 (and (not x1384) (= x268 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= x357 (x288 (x501 x268) x1303 0)) (= (x288 (x501 x497) (x1481 10) 0) x1303))) (= (x288 (x501 x1050) x905 0) x1060) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x702) (= x851 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x1050) (= x1545 (x288 (x501 x1232) x958 0)) (>= x90 0) (<= x502 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x833 x1430) x502) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x914) (= (x288 (x501 x781) x1060 0) x1430) (= x211 (x29 (+ 64 x675))) (= (x1095 x121) x914) (> x604 x1220) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x1232) (= x468 (x288 (x501 x497) (x1481 6) 0)) (<= 0 x914) (= (x655 x1545) x702) (= x133 (= x502 0))) x535)))
(assert (x734 x1149))
(assert (x734 x111))
(assert (x734 x1291))
(assert (x734 x1057))
(assert (= (ite (and x620 x1429) (x412 x458) (x1467 x458)) (x1219 x458)))
(assert (x1362 x109))
(assert (=> (>= 10000 x1386) (= (x1481 x1386) (x501 x1386))))
(assert (=> (<= x497 10000) (= (x1481 x497) (x501 x497))))
(assert (= (and x1222 x84) x16))
(assert (x734 x401))
(assert (= (x501 604800) (x1481 604800)))
(assert (x734 x1329))
(assert (= x1081 (=> (and (or (and (= x254 (x288 (x501 x162) x1502 0)) (= (x19 1461501637330902918203684832716283019655932542975 x23) x162) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x445) (not x1265) (<= 0 x445) (= (x288 (x501 x598) x1143 0) x1502) (= (x998 x254) x445) (= x665 x445) (= x598 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= (x288 (x501 x499) (x1481 9) 0) x1143) (= x841 1)) (and (= x841 0) (= x665 0) x1265)) (= (= x499 0) x1265)) x1486)))
(assert (= (x461 (x501 x1036)) x1036))
(assert (= (x1042 x815) x571))
(assert (x734 x1084))
(assert (= (x1205 x822) (ite (= x108 x822) x878 (x1547 x822))))
(assert (x734 x151))
(assert (=> (>= 10000 x1188) (= (x1481 x1188) (x501 x1188))))
(assert (x734 x1371))
(assert (x734 x181))
(assert (= (ite (and x1553 x315) (x1042 x1135) (x546 x1135)) (x64 x1135)))
(assert (x734 x591))
(assert (x734 x1560))
(assert (x303 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x734 x638))
(assert (= (ite (= x246 x602) x883 (x1532 x602)) (x796 x602)))
(assert (x734 x1435))
(assert (=> (>= 10000 x715) (= (x1481 x715) (x501 x715))))
(assert (= (x461 (x501 x319)) x319))
(assert (x734 x25))
(assert (= (x461 (x501 x1290)) x1290))
(assert (= (x796 x235) (ite (= x246 x235) x883 (x1532 x235))))
(assert (x734 x1290))
(assert (=> (<= x1232 10000) (= (x1481 x1232) (x501 x1232))))
(assert (x734 x527))
(assert (x734 x1083))
(assert (= (x461 (x501 x195)) x195))
(assert (= (x1219 x879) (ite (and x1429 x620) (x412 x879) (x1467 x879))))
(assert (x734 x417))
(assert (=> (>= 10000 x1235) (= (x501 x1235) (x1481 x1235))))
(assert (= (ite (and (not x923) x1077 x280 x490 x864 x541) (x796 x815) (ite (and x1077 (not x541) x280 x490 x864) (x1532 x815) (ite (and x490 x1077 (not x280) x864) (x382 x815) (ite (and x490 (not x1077) x864) (x411 x815) (x1040 x815))))) (x549 x815)))
(assert (x734 x1454))
(assert (x1362 x1126))
(assert (= (x64 x553) (ite (and x315 x1553) (x1042 x553) (x546 x553))))
(assert (= (x461 (x501 x851)) x851))
(assert (= x472 (x461 (x501 x472))))
(assert (=> (>= 10000 x263) (= (x1481 x263) (x501 x263))))
(assert (x734 x343))
(assert (= 826074471 (x461 (x1481 826074471))))
(assert (x734 x710))
(assert (=> (<= x453 10000) (= (x1481 x453) (x501 x453))))
(assert (= (x461 (x501 x595)) x595))
(assert (= (x1205 x46) (ite (= x108 x46) x878 (x1547 x46))))
(assert (x734 x1173))
(assert (= (x461 (x1481 2512682246)) 2512682246))
(assert (x734 x250))
(assert (=> (<= x472 10000) (= (x501 x472) (x1481 x472))))
(assert (x1362 x1266))
(assert (x734 x365))
(assert (= x1155 x1012))
(assert (= (x461 (x1481 2960351575)) 2960351575))
(assert (x734 x295))
(assert (= (x796 x398) (ite (= x246 x398) x883 (x1532 x398))))
(assert (x734 x621))
(assert (= (ite (= x1227 x108) x878 (x1547 x1227)) (x1205 x1227)))
(assert (x1362 x1211))
(assert (= x524 (x461 (x501 x524))))
(assert (x734 x86))
(assert (x734 x396))
(assert (= (ite (and x620 (not x1377) (not x194) x831) (x1260 x1471) (ite (and (not x194) (not x831) x620) (x752 x1471) (ite (and x194 x620) (x752 x1471) (x1112 x1471)))) (x784 x1471)))
(assert (x1362 x759))
(assert (x734 x1125))
(assert (= x1344 (x461 (x501 x1344))))
(assert (= (ite (and (not x714) x864 x490) (x549 x633) (x337 x633)) (x599 x633)))
(assert (=> (<= x364 10000) (= (x1481 x364) (x501 x364))))
(assert (x734 x107))
(assert (= (ite (= x398 x785) x1115 (x894 x398)) (x978 x398)))
(assert (= (ite (= x815 x1135) x571 (x353 x1135)) (x1042 x1135)))
(assert (x1362 x436))
(assert (x1362 x319))
(assert (= (x501 1986467848) (x1481 1986467848)))
(assert (=> (>= 10000 x1050) (= (x1481 x1050) (x501 x1050))))
(assert (=> (>= 10000 x107) (= (x501 x107) (x1481 x107))))
(assert (= 0 (x1030 x398)))
(assert (= (=> (and (or (and (<= x1391 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x489 (= 0 x1391)) (or (and (not x489) (= x1008 x1391) (= x1500 1)) (and (= x1500 0) x489 (= 0 x1008))) (= (x288 (x501 x1138) (x1481 10) 0) x457) (= x1192 (x288 (x501 x469) x457 0)) (not x26) (>= x1391 0) (= x1391 (x668 x1192)) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x469)) (and (= 0 x1008) (= x1500 0) x26)) (= (= 0 x1138) x26)) x444) x1392))
(assert (= (x1532 x46) (ite (= x46 x768) x1438 (x382 x46))))
(assert (= 2418364589 (x461 (x1481 2418364589))))
(assert (x734 x1465))
(assert (= (x1042 x63) (ite (= x63 x815) x571 (x353 x63))))
(assert (= (x599 x46) (ite (and x490 (not x714) x864) (x549 x46) (x337 x46))))
(assert (x734 x854))
(assert (= (x461 (x1481 1968616202)) 1968616202))
(assert (= x759 (x461 (x501 x759))))
(assert (= (ite (= x101 x993) x1356 (x411 x101)) (x382 x101)))
(assert (= (and x1309 x918) x1202))
(assert (x734 x786))
(assert (x734 x364))
(assert (= x912 (x461 (x501 x912))))
(assert (= x572 (x461 (x501 x572))))
(assert (x734 x1308))
(assert (= x964 (=> (and (= x68 (< 0 x1315)) (= (x860 (- x497 1)) x1315)) (and (=> (not x68) x269) (=> x68 x657)))))
(assert (x1362 x524))
(assert (x734 x1351))
(assert (x734 x324))
(assert (= (x461 (x501 x781)) x781))
(assert (x734 x914))
(assert (= (x960 x385) (ite (and x620 x1429) (x994 x385) (x6 x385))))
(assert (x734 x326))
(assert (not x120))
(assert (= (x1239 x295) (ite (= x63 x295) x21 (x209 x295))))
(assert (= (x501 2690754053) (x1481 2690754053)))
(assert (x1538 x1099 x11))
(assert (= (x206 x602) (ite (and x1202 x258) (x1180 x602) (x494 x602))))
(assert (x734 x354))
(assert (= (x796 x101) (ite (= x246 x101) x883 (x1532 x101))))
(assert (=> (>= 10000 x503) (= (x501 x503) (x1481 x503))))
(assert (=> (<= x539 10000) (= (x501 x539) (x1481 x539))))
(assert (x1362 x957))
(assert (x1362 x1364))
(assert (x734 x1036))
(assert (x734 x1218))
(assert (= (x461 (x501 x906)) x906))
(assert (x734 x392))
(assert (= (ite (and x1204 x1510) (x603 x1215) (x1444 x1215)) (x709 x1215)))
(assert (x1362 x995))
(assert (x734 x195))
(assert (x734 x406))
(assert (x734 x246))
(assert (=> (>= 10000 x1257) (= (x1481 x1257) (x501 x1257))))
(assert (= (x461 (x501 x456)) x456))
(assert (= x149 x1366))
(assert (x734 x662))
(assert (x1362 x1138))
(assert (=> (>= 10000 x188) (= (x1481 x188) (x501 x188))))
(assert (=> (<= x580 10000) (= (x1481 x580) (x501 x580))))
(assert (x734 x1214))
(assert (= (x461 (x1481 2764855426)) 2764855426))
(assert (= (x461 (x501 x1315)) x1315))
(assert (x734 x689))
(assert (x734 x1390))
(assert (x679 x1409 x1528))
(assert (= (x501 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x1481 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (= (x461 (x1481 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x277 (or x1247 (and (not x830) x1306))))
(assert (x734 x361))
(assert (= (x1547 x815) (ite (= x701 x815) x914 (x974 x815))))
(assert (x734 x1085))
(assert (x734 x1551))
(assert (= x1252 x874))
(assert (= (ite (and x864 x490 (not x714)) (x549 x602) (x337 x602)) (x599 x602)))
(assert (x734 x1483))
(assert (= (x978 x46) (ite (= x785 x46) x1115 (x894 x46))))
(assert (x734 x1350))
(assert (x1362 x789))
(assert (x734 x600))
(assert (= (x501 1000000000000000000) (x1481 1000000000000000000)))
(assert (x1362 x397))
(assert (x734 x1302))
(assert (x734 x1126))
(assert (x734 x855))
(assert (= (x461 (x501 x174)) x174))
(assert (=> (>= 10000 x343) (= (x1481 x343) (x501 x343))))
(assert (x734 x717))
(assert (x1362 x1264))
(assert (x734 x1363))
(assert (=> (>= 10000 x217) (= (x501 x217) (x1481 x217))))
(assert (= (ite (= x815 x768) x1438 (x382 x815)) (x1532 x815)))
(assert (x734 x880))
(assert (x734 x1064))
(assert (=> (<= x219 10000) (= (x1481 x219) (x501 x219))))
(assert (x1362 x848))
(assert (= (x64 x1227) (ite (and x1553 x315) (x1042 x1227) (x546 x1227))))
(assert (x734 x316))
(assert (= x1257 (x461 (x501 x1257))))
(assert (=> (>= 10000 x818) (= (x1481 x818) (x501 x818))))
(assert (x734 x927))
(assert (=> (<= x735 10000) (= (x1481 x735) (x501 x735))))
(assert (= x1074 (and x1306 x830)))
(assert (= (ite (= x633 x768) x1438 (x382 x633)) (x1532 x633)))
(assert (x734 x455))
(assert (= (x461 (x1481 2258409472)) 2258409472))
(assert (x1362 x922))
(assert (x734 x268))
(assert (x734 x1322))
(assert (x1362 x1457))
(assert (x1362 x531))
(assert (= x210 (x461 (x501 x210))))
(assert (= (x209 x1165) x128))
(assert (= (x1455 x1533) (ite (and x1309 (not x132) x918) (x1043 x1533) (x94 x1533))))
(assert (x734 x1089))
(assert (x1362 x499))
(assert (x734 x629))
(assert (= 2293535753 (x461 (x1481 2293535753))))
(assert (x734 x1370))
(assert (= x1010 (=> (and (= x715 x213) (= x1414 x818)) x804)))
(assert (= 274184521717934524641157099916833587218 (x461 (x1481 274184521717934524641157099916833587218))))
(assert (x734 x852))
(assert (=> (>= 10000 x1381) (= (x501 x1381) (x1481 x1381))))
(assert (= (ite (= x1533 x701) x914 (x974 x1533)) (x1547 x1533)))
(assert (x734 x1236))
(assert (=> (>= 10000 x598) (= (x501 x598) (x1481 x598))))
(assert (= x1058 (x461 (x501 x1058))))
(assert (= (x461 (x501 x339)) x339))
(assert (x1362 x1484))
(assert (x734 x1229))
(assert (= (x461 (x1481 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x734 x11))
(assert (x1362 x493))
(assert (x1362 x1052))
(assert (x734 x169))
(assert (= (x461 (x501 x645)) x645))
(assert (= (x64 x822) (ite (and x1553 x315) (x1042 x822) (x546 x822))))
(assert (= x1517 (x461 (x501 x1517))))
(assert (= (ite (= x633 x701) x914 (x974 x633)) (x1547 x633)))
(assert (x734 x708))
(assert (x734 x1386))
(assert (= (ite (= x1302 x1165) x128 (x28 x1302)) (x209 x1302)))
(assert (= (or (and (not x1033) x1399) (and (not x988) x532)) x421))
(assert (= (x461 (x1481 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= (x894 x840) (ite (= x1300 x840) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1548 x840))))
(assert (= (ite (= x577 x80) x615 (x752 x80)) (x1260 x80)))
(assert (= x1493 (x461 (x501 x1493))))
(assert (x734 x1264))
(assert (= x610 (=> (and (= x618 (x1217 (x501 274184521717934524641157099916833587206))) (= x520 (x637 x386)) (>= 1461501637330902918203684832716283019655932542975 x1291) (= (x288 (x501 x195) (x1481 7) 0) x756) (<= 0 x520) (= 759532456 x406) (>= 1461501637330902918203684832716283019655932542975 x662) (not (= 468353030 x406)) (= (x288 (x501 x662) x756 0) x1342) (= (x288 (x501 x1291) x1342 0) x386) (< x406 2293535753) (not (< x406 468353030)) (> x618 0) (<= x520 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 911411945 x406) (not (= 635128645 x406)) (= x520 x1016)) (=> (and (= x213 x935) (= x1364 x1159) (= x1016 x1203) (= x207 x1414)) x930))))
(assert (= (x209 x633) (ite (= x1165 x633) x128 (x28 x633))))
(assert (= (ite (= x108 x815) x878 (x1547 x815)) (x1205 x815)))
(assert (x734 x798))
(assert (= x14 x556))
(assert (= (ite (= x101 x768) x1438 (x382 x101)) (x1532 x101)))
(assert (=> (>= 10000 x374) (= (x1481 x374) (x501 x374))))
(assert (=> (<= x1493 10000) (= (x501 x1493) (x1481 x1493))))
(assert (x734 x763))
(assert (= x1134 (x461 (x501 x1134))))
(assert (x734 x1469))
(assert (= (x461 (x501 x190)) x190))
(assert (x734 x1037))
(assert (= (=> (and (= x816 x1130) (= x71 (<= x596 x92)) (= x707 x596) (= x699 x92)) (and x71 (=> (and (= x1441 x86) (= x1226 (<= x1441 x350)) (= x350 x1203)) (and x1226 (=> (and (= x1051 x613) (= x1283 (>= x613 x15)) (= x218 x15)) (and (=> (and (= x996 x1130) (= (>= x996 x1209) x44) (= x1209 x20)) (and (=> (and (= x222 true) (= true x838) (= true x605) (= 3123789364 x1337) (= x527 x216) (= 87118632 x103) (= 2512682246 x70) (= 2939843472 x427) (= x992 true) (= 2939843472 x777) (= x1456 true) (= x1478 1517119036) (= x1150 (>= x1037 x527)) (= 2939843472 x1063) (= x155 x1037) (= x1436 2939843472)) (and (=> (and (= x1482 x1142) (= x1339 x1212) (= (>= x1482 x1339) x167)) (and x167 (=> (and (= x970 false) (= x636 x950) (= false x1270) (= (>= x1162 x636) x826) (= 2939843472 x893) (= x1259 true) (= x1162 x1109) (= 2512682246 x761)) x826))) x1150)) x44)) x1283)))))) x30))
(assert (= (ite (and x1553 x315) (x1042 x1208) (x546 x1208)) (x64 x1208)))
(assert (x734 x937))
(assert (x734 x397))
(assert (= (ite (and (not x194) (not x1377) x831 x620) (x1239 x398) (ite (and x620 (not x194) (not x831)) (x209 x398) (ite (and x620 x194) (x209 x398) (x1328 x398)))) (x5 x398)))
(assert (=> (>= 10000 x351) (= (x1481 x351) (x501 x351))))
(assert (x1362 x472))
(assert (x734 x1473))
(assert (x1362 x1334))
(assert (= x268 (x461 (x501 x268))))
(assert (x734 x179))
(assert (x734 x1215))
(assert (= (x1481 2764855426) (x501 2764855426)))
(assert (= (x461 (x954 x684 1)) (+ 1 (x461 x684))))
(assert (x734 x1373))
(assert (x1362 x207))
(assert (x734 x228))
(assert (= 0 (x1030 x46)))
(assert (x734 x1321))
(assert (x734 x1311))
(assert (x734 x1130))
(assert (x734 x485))
(assert (= (ite (= x1165 x1208) x128 (x28 x1208)) (x209 x1208)))
(assert (= (x64 x633) (ite (and x1553 x315) (x1042 x633) (x546 x633))))
(assert (= (ite (and x1553 x315) (x1042 x46) (x546 x46)) (x64 x46)))
(assert (= (ite (= x633 x785) x1115 (x894 x633)) (x978 x633)))
(assert (=> (>= 10000 x301) (= (x501 x301) (x1481 x301))))
(assert (x734 x1026))
(assert (x734 x841))
(assert (= x1511 (x461 (x501 x1511))))
(assert (x734 x1431))
(assert (= (ite (and x1077 x541 x864 x490 x280 (not x923)) (x796 x1533) (ite (and x864 x280 (not x541) x1077 x490) (x1532 x1533) (ite (and (not x280) x864 x490 x1077) (x382 x1533) (ite (and x864 (not x1077) x490) (x411 x1533) (x1040 x1533))))) (x549 x1533)))
(assert (= (x501 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1481 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x734 x205))
(assert (x734 x869))
(assert (x734 x917))
(assert (x1362 x617))
(assert (x734 x1334))
(assert (x1362 x190))
(assert (= x198 (=> (and (<= x333 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1331 (x288 (x501 x524) x474 0)) (= (x19 1461501637330902918203684832716283019655932542975 x23) x524) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x676) (= x988 (= 0 x333)) (>= x333 0) (= x1035 (x288 (x501 x497) (x1481 7) 0)) (= (x288 (x501 x676) x1035 0) x474) (= (x1304 x1331) x333)) (and (=> (and (= x497 x638) (not x988)) x223) (=> x988 x964)))))
(assert (x734 x31))
(assert (= (x1304 x386) (ite (and x1252 x716) (x227 x386) (ite (and x601 (not x716) x1252) (x660 x386) (x794 x386)))))
(assert (x734 x785))
(assert (= x1341 (and x874 x899)))
(assert (x734 x761))
(assert (= (x461 (x501 x818)) x818))
(assert (x734 x473))
(assert (x734 x972))
(assert (x734 x333))
(assert (x734 x1438))
(assert (=> (>= 10000 x174) (= (x1481 x174) (x501 x174))))
(assert (= (x278 x1533) (ite (= x1533 x782) x260 (x518 x1533))))
(assert (x1362 x1036))
(assert (x734 x425))
(assert (x1362 x536))
(assert (x734 x781))
(assert (x734 x1063))
(assert (x734 x1514))
(assert (=> (<= x689 10000) (= (x501 x689) (x1481 x689))))
(assert (= x388 (x461 (x501 x388))))
(assert (= x14 x1477))
(assert (= (x209 x1402) (ite (= x1402 x1165) x128 (x28 x1402))))
(assert (=> (>= 10000 x847) (= (x501 x847) (x1481 x847))))
(assert (= (x461 (x501 x630)) x630))
(assert (x734 x504))
(assert (= (x461 (x1481 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x1362 x88))
(assert (x734 x644))
(assert (= x367 (=> (and (= (x1569 (x501 274184521717934524641157099916833587206)) x748) (= (= 274184521717934524641157099916833587218 x1083) x258) (= (< x1164 115792089237316195423570985008687907853269984665640564039457584007913129639936) x360) (= x757 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1167 (x501 x1083)))) x1136 (= (>= x748 0) x1136) (= (x1569 (x501 274184521717934524641157099916833587206)) x387) (= x152 (x1167 (x501 x1083))) x757 x360 (= (x1569 (x501 x1083)) x1164) (= x755 x1395)) (and (=> (not x258) x1310) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625) (= (x288 (x501 x210) (x1481 1) 0) x1550) (= x377 x137) (not x422) (= x210 x1460) (= (x81 x297) x625) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x929 x197)) x1243) (= x418 x929) (not (= 649617121 x415)) (= x1032 76450787359836037641860180984291677749980919077056822294353438043884394381312) (<= 0 x197) (= x1473 x1129) (= x1311 x210) (= x390 274184521717934524641157099916833587206) (not (= 826074471 x415)) (= x197 (x892 x1550)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x929 x197)) (< 0 x439) (<= x210 1461501637330902918203684832716283019655932542975) (= (x860 (- x625 x1129)) x849) (= (or (and (< x1070 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1070) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1070)) x1061) (not (= 1889567281 x415)) (<= x197 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x288 (x501 274184521717934524641157099916833587206) (x1481 1) 0) x297) (= x910 (> x929 x625)) (= 32 x82) (not (= 2514000705 x415)) (not (< x1462 4)) (not x1061) (= x197 x780) (not (< x415 649617121)) (>= x625 0) (= x439 (x1217 (x501 274184521717934524641157099916833587218))) (= (x860 (- x1462 4)) x1070) (= x1462 68) (= x764 (+ x418 x780)) (= x1129 x929) (not x1243) (= 2835717307 x415) (= x422 (> x1129 x625)) (= 274184521717934524641157099916833587206 x316) (= 1 x372) x258 (= x1462 x1395) (not x910) (= (x288 (x501 274184521717934524641157099916833587206) (x1481 1) 0) x391)) x1525)))))
(assert (= x696 (x461 (x501 x696))))
(assert (x734 x1055))
(assert (x1362 x1188))
(assert (x1362 x1291))
(assert (x734 x217))
(assert (= (x461 (x501 x397)) x397))
(assert (x734 x635))
(assert (= 0 (x1030 x1135)))
(assert (= x87 (and x932 (not x61))))
(assert (= (x1239 x1533) (ite (= x1533 x63) x21 (x209 x1533))))
(assert (x1362 x18))
(assert (= (x382 x633) (ite (= x993 x633) x1356 (x411 x633))))
(assert (= (ite (= x1533 x785) x1115 (x894 x1533)) (x978 x1533)))
(assert (= (ite (= x226 x1135) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x1135)) (x411 x1135)))
(assert (= x1161 (=> (and (>= x1057 0) (not (> x166 x1057)) (= x1443 (x288 (x501 x448) x813 0)) (>= x857 0) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x448) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x857) (<= x1057 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x288 (x501 x1188) (x1481 6) 0) x813) (= x899 (= 0 x857)) (= (x697 x1443) x857)) (and (=> x899 x1404) (=> (and (= x1357 x24) (= x1071 (x288 (x501 x1188) (x1481 10) 0)) (= (x288 (x501 x239) x1071 0) x627) (<= x24 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x91 x627) x24) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x239) (= x33 0) (>= x24 0) (not x899)) x244)))))
(assert (x734 x1385))
(assert (= (x1219 x774) (ite (and x1429 x620) (x412 x774) (x1467 x774))))
(assert (= x598 (x461 (x501 x598))))
(assert (x734 x1017))
(assert (x734 x643))
(assert (x734 x284))
(assert (x734 x531))
(assert (x734 x359))
(assert (= x1453 (x461 (x501 x1453))))
(assert (x734 x305))
(assert (=> (<= x339 10000) (= (x501 x339) (x1481 x339))))
(assert (x734 x524))
(assert (= (x461 (x501 x995)) x995))
(assert (=> (<= x76 10000) (= (x1481 x76) (x501 x76))))
(assert (=> (>= 10000 x967) (= (x501 x967) (x1481 x967))))
(assert (= (x668 x1284) (ite (and x620 x579) (x91 x1284) (x221 x1284))))
(assert (= x384 (x461 (x501 x384))))
(assert (x734 x564))
(assert (= (ite (= x108 x398) x878 (x1547 x398)) (x1205 x398)))
(assert (x734 x856))
(assert (x1362 x114))
(assert (= (ite (= x63 x1165) x128 (x28 x63)) (x209 x63)))
(assert (=> (<= x946 10000) (= (x501 x946) (x1481 x946))))
(assert (x1362 x1386))
(assert (= (ite (and x315 x1553) (x1042 x398) (x546 x398)) (x64 x398)))
(assert (= (x599 x1215) (ite (and (not x714) x864 x490) (x549 x1215) (x337 x1215))))
(assert (= (x501 115792089237316195423570985008687907853269984665640564039457) (x1481 115792089237316195423570985008687907853269984665640564039457)))
(assert (= (ite (= x633 x226) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x633)) (x411 x633)))
(assert (= (x862 x1430) (ite (and x1252 x716) (x1420 x1430) (ite (and x1252 x601 (not x716)) (x1420 x1430) (x687 x1430)))))
(assert (=> (<= x88 10000) (= (x501 x88) (x1481 x88))))
(assert (= (x461 (x501 x326)) x326))
(assert (= x969 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x31) (>= x1057 0) (= x148 (x288 (x501 x497) (x1481 7) 0)) (>= x31 0) (= (< 0 x31) x1158) (= x555 (x19 1461501637330902918203684832716283019655932542975 x23)) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x522) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1057) (= (x1304 x1267) x31) (= (x288 (x501 x555) x733 0) x1267) (not (> x497 x1057)) (= x733 (x288 (x501 x522) x148 0))) (and (=> (not x1158) x904) (=> (and (= (x1287 x861) x240) x1158 (= (x19 1461501637330902918203684832716283019655932542975 x23) x343) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x240) (= x565 (x288 (x501 x114) x736 0)) (>= x240 0) (= x736 (x288 (x501 x497) (x1481 9) 0)) (= x114 (x19 1461501637330902918203684832716283019655932542975 x1523)) (= (x288 (x501 x343) x565 0) x861) (= x240 x1054) (= 0 x1388)) x42)))))
(assert (= (x461 (x501 x1294)) x1294))
(assert (= (or (and x874 (not x899)) x1116) x620))
(assert (=> (>= 10000 x425) (= (x501 x425) (x1481 x425))))
(assert (= (and x1288 (not x1552)) x420))
(assert (x303 x1490))
(assert (= x65 x556))
(assert (x734 x768))
(assert (= x845 (=> (and (not (< x1057 x166)) (= (x288 (x501 x190) x1522 0) x843) (= x1425 (x288 (x501 x1188) (x1481 7) 0)) (= x190 (x19 1461501637330902918203684832716283019655932542975 x23)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1057) (= (x19 1461501637330902918203684832716283019655932542975 x1523) x1294) (<= x1249 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1249 (x612 x843)) (>= x1057 0) (= x1552 (< 0 x1249)) (= x1522 (x288 (x501 x1294) x1425 0)) (<= 0 x1249)) (and (=> (not x1552) x1068) (=> (and (= (x19 1461501637330902918203684832716283019655932542975 x1523) x107) (= x170 (x998 x703)) (= x665 x170) (<= 0 x170) (= x1067 (x288 (x501 x1188) (x1481 9) 0)) (<= x170 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x19 1461501637330902918203684832716283019655932542975 x23) x384) x1552 (= 0 x841) (= x569 (x288 (x501 x107) x1067 0)) (= x703 (x288 (x501 x384) x569 0))) x1486)))))
(assert (x734 x1000))
(assert (x734 x1065))
(assert (x734 x866))
(assert (x1362 x263))
(assert (x1362 x448))
(assert (x734 x100))
(assert (x734 x1099))
(assert (x734 x922))
(assert (= (ite (and x620 (not x1377) (not x194) x831) (x1239 x916) (ite (and (not x831) x620 (not x194)) (x209 x916) (ite (and x620 x194) (x209 x916) (x1328 x916)))) (x5 x916)))
(assert (= (x64 x108) (ite (and x1553 x315) (x1042 x108) (x546 x108))))
(assert (= x728 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1277) (< 0 x43) (= (x1217 (x501 274184521717934524641157099916833587206)) x43) (= x1277 (x429 x1104)) (< x1017 911411945) (>= x1277 0) (= x1277 x1045) (<= x1235 1461501637330902918203684832716283019655932542975) (= 69947311 x1017) (= x1380 (x288 (x501 x1521) (x1481 10) 0)) (= x1104 (x288 (x501 x1235) x1380 0)) (< x1017 2293535753) (< x1017 468353030)) (=> (and (= x195 x1414) (= x213 x662) (= x1159 x1291) (= x1045 x155)) x610))))
(assert (= (x1304 x739) (ite (and x1252 x716) (x227 x739) (ite (and x1252 x601 (not x716)) (x660 x739) (x794 x739)))))
(assert (x734 x1248))
(assert (x734 x712))
(assert (x734 x388))
(assert (= x823 x149))
(assert (= (ite (= x246 x314) x883 (x1532 x314)) (x796 x314)))
(assert (=> (>= 10000 x789) (= (x501 x789) (x1481 x789))))
(assert (x734 x844))
(assert (x734 x1212))
(assert (= (ite (= x1165 x295) x128 (x28 x295)) (x209 x295)))
(assert (x734 x986))
(assert (=> (<= x1126 10000) (= (x1481 x1126) (x501 x1126))))
(assert (x303 x1387))
(assert (x734 x677))
(assert (= (x1042 x235) (ite (= x235 x815) x571 (x353 x235))))
(assert (= 0 (x1030 224)))
(assert (=> (>= 10000 x984) (= (x501 x984) (x1481 x984))))
(assert (= (x1260 x1157) (ite (= x1157 x577) x615 (x752 x1157))))
(assert (= (ite (and (not x714) x864 x490) (x549 x398) (x337 x398)) (x599 x398)))
(assert (= (ite (= x815 x101) x571 (x353 x101)) (x1042 x101)))
(assert (= (=> (and (= x645 (x860 (- x497 1))) (= (< 0 x645) x819)) (and (=> (not x819) x1187) (=> x819 x304))) x797))
(assert (x734 x522))
(assert (x734 x446))
(assert (= (ite (= x1402 x815) x571 (x353 x1402)) (x1042 x1402)))
(assert (x734 x137))
(assert (= (ite (and x1252 x622) (x998 x721) (x1254 x721)) (x1287 x721)))
(assert (= (ite (= x246 x1215) x883 (x1532 x1215)) (x796 x1215)))
(assert (x303 x1409))
(assert (x734 x596))
(assert (= (x461 (x501 x351)) x351))
(assert (x734 x849))
(assert (= (x461 (x501 x239)) x239))
(assert (x1362 x869))
(assert (= (x549 x46) (ite (and x490 x1077 x541 (not x923) x280 x864) (x796 x46) (ite (and x490 x280 x864 (not x541) x1077) (x1532 x46) (ite (and x864 x1077 (not x280) x490) (x382 x46) (ite (and x864 (not x1077) x490) (x411 x46) (x1040 x46)))))))
(assert (= (ite (= x701 x1135) x914 (x974 x1135)) (x1547 x1135)))
(assert (x734 x650))
(assert (= (x1547 x1227) (ite (= x1227 x701) x914 (x974 x1227))))
(assert (x734 x561))
(assert (x734 x950))
(assert (x679 x1387 x281))
(assert (= (x1042 x108) (ite (= x108 x815) x571 (x353 x108))))
(assert (= (ite (= x916 x815) x571 (x353 x916)) (x1042 x916)))
(assert (= x1092 (=> (= x493 0) x378)))
(assert true)
(assert (= (x1205 x101) (ite (= x101 x108) x878 (x1547 x101))))
(assert (= (x209 x1135) (ite (= x1135 x1165) x128 (x28 x1135))))
(assert (= (ite (and (not x923) x280 x864 x541 x1077 x490) (x796 x1135) (ite (and x490 x864 x280 x1077 (not x541)) (x1532 x1135) (ite (and x490 x1077 x864 (not x280)) (x382 x1135) (ite (and (not x1077) x490 x864) (x411 x1135) (x1040 x1135))))) (x549 x1135)))
(assert (x1362 x447))
(assert (= (x1481 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x501 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x734 x23))
(assert (= x1566 true))
(assert (=> (<= x442 10000) (= (x501 x442) (x1481 x442))))
(assert (x1362 x434))
(assert (=> (>= 10000 x417) (= (x501 x417) (x1481 x417))))
(assert (= (ite (and x1204 x1510) (x603 x633) (x1444 x633)) (x709 x633)))
(assert (= (x461 (x501 x1334)) x1334))
(assert (=> (<= x1518 10000) (= (x501 x1518) (x1481 x1518))))
(assert (= (ite (and x1202 x258) (x1180 x1533) (x494 x1533)) (x206 x1533)))
(assert (= x1487 (=> (= x1138 x763) x1392)))
(assert (x734 x911))
(assert (x734 x1346))
(assert (= true x379))
(assert (x734 x1521))
(assert (= (ite (= x1215 x701) x914 (x974 x1215)) (x1547 x1215)))
(assert (x734 x96))
(assert (= (ite (= x246 x1533) x883 (x1532 x1533)) (x796 x1533)))
(assert (x734 x1039))
(assert (x734 x1460))
(assert (= (x1030 x1533) 0))
(assert (= x1213 (=> (and (not (= 635128645 x1230)) (>= 1461501637330902918203684832716283019655932542975 x906) (<= 0 x196) (> 911411945 x1230) (= x972 (x1217 (x501 274184521717934524641157099916833587206))) (< x1230 2293535753) (= 759532456 x1230) (< 0 x972) (not (> 468353030 x1230)) (not (= x1230 468353030)) (= x270 x196) (= (x288 (x501 x906) x809 0) x741) (= x196 (x612 x741)) (= x809 (x288 (x501 x319) x161 0)) (<= x196 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x319) (= x161 (x288 (x501 x564) (x1481 7) 0))) (=> (and (= x270 x86) (= x1414 x1211) (= x1159 x963) (= x1225 x213)) x891))))
(assert (x734 x694))
(assert (= (x549 x398) (ite (and (not x923) x541 x280 x864 x1077 x490) (x796 x398) (ite (and x1077 x280 x490 x864 (not x541)) (x1532 x398) (ite (and x864 (not x280) x490 x1077) (x382 x398) (ite (and x864 (not x1077) x490) (x411 x398) (x1040 x398)))))))
(assert (x734 x853))
(assert (= (ite (= x916 x63) x21 (x209 x916)) (x1239 x916)))
(assert (= x1082 (=> (= (> x571 1) x1309) (and (=> (and (> x770 1) (= x1311 (x19 1461501637330902918203684832716283019655932542975 x23)) (= x132 (< x755 x1468)) (>= 1461501637330902918203684832716283019655932542975 x1083) (= (x29 (+ x875 192)) x1215) (= (x29 (+ 128 x1461)) x1041) (= (x29 (+ x507 64)) x160) (= (x13 x815) x770) (= x509 (> x755 0)) (= (x19 26959946667150639794667015087019630673637144422540572481103610249215 x1435) x1114) (= x1461 (x29 (+ x840 36))) (= (x29 (+ x840 32)) x1135) x1442 (= x1435 (x237 x1135)) (= x1199 (x29 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1114))) (= x1442 (< 0 x854)) (or (and (= x1468 0) (not x509)) (and (= x1135 x101) (= (x894 x101) x1115) (= (< 32 x755) x573) (or (and (not x573) (= 32 x1468)) (and (or (and (= 64 x1468) (not x475)) (and (or (and (= x1485 (> x755 128)) x1406 (not x1485) (= (x29 (+ x868 160)) x824) (= 128 x1468) (= x688 (x278 x46)) (= (x29 (+ x840 128)) x46)) (and (not x1406) (= 96 x1468))) (= x398 (x29 (+ 96 x840))) (= x260 (x518 x398)) x475 (= (> x755 96) x1406) (= (x29 (+ x868 128)) x782))) (= (x978 x633) x54) (= (x29 (+ 96 x868)) x66) (= (< 64 x755) x475) (= (x29 (+ 64 x840)) x633) x573)) (= x785 x1041) x509)) (or (and x132 (= x322 (x29 (+ x1041 x755)))) (not x132)) (= (x29 (+ 100 x840)) x868) (= (x894 x840) x755) (> x571 1) (= x1300 (x29 (+ x1461 96))) (= 0 x1499) (= x1307 (x29 (+ x840 68))) (= x854 (x1217 (x501 x1083))) (= (x529 x160) x1083) (= x1473 (x13 x1215)) (= x62 (x860 (- x868 x840))) x1309 (= x202 (x860 (- x62 32)))) x367) (=> (not x1309) x1010)))))
(assert (=> (>= 10000 x561) (= (x501 x561) (x1481 x561))))
(assert (=> (<= x1179 10000) (= (x1481 x1179) (x501 x1179))))
(assert (x734 x402))
(assert (x734 x428))
(assert (x734 x957))
(assert (x734 x821))
(assert (= (x461 (x501 x417)) x417))
(assert (= (ite (= x398 x1300) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1548 x398)) (x894 x398)))
(assert (= (or (and (not x1312) x720) (and (not x1555) x990)) x745))
(assert (=> (<= x1457 10000) (= (x1481 x1457) (x501 x1457))))
(assert (x1362 x453))
(assert (= (x501 2293535753) (x1481 2293535753)))
(assert (x734 x1533))
(assert (x1362 x76))
(assert (x1362 x662))
(assert (x734 x693))
(assert (= (ite (= x66 x1533) x54 (x978 x1533)) (x518 x1533)))
(assert (=> (<= x448 10000) (= (x501 x448) (x1481 x448))))
(assert (x734 x1337))
(assert (x1362 x425))
(assert (=> (>= 10000 x264) (= (x501 x264) (x1481 x264))))
(assert (x734 x197))
(assert (x734 x1028))
(assert (x1362 x343))
(assert (= x689 (x461 (x501 x689))))
(assert (x734 x1314))
(assert (= (x1205 x1208) (ite (= x108 x1208) x878 (x1547 x1208))))
(assert (x1362 x339))
(assert (x734 x46))
(assert (x734 x707))
(assert (= 0 (x1030 x101)))
(assert (x303 x1099))
(assert (= (x64 x1402) (ite (and x1553 x315) (x1042 x1402) (x546 x1402))))
(assert (= (=> (= x126 (< x1299 x1188)) (and (=> (and x126 (= x924 x597)) x535) (=> (not x126) x845))) x1132))
(assert (=> (>= 10000 x1521) (= (x501 x1521) (x1481 x1521))))
(assert (x734 x646))
(assert (= x1080 (=> (= x1059 (< 0 x497)) (and (=> (not x1059) x1187) (=> x1059 x783)))))
(assert (x1362 x1351))
(assert (x734 x502))
(assert (x734 x459))
(assert (x734 x1383))
(assert (x734 x427))
(assert (x734 x1484))
(assert (=> (<= x469 10000) (= (x501 x469) (x1481 x469))))
(assert (= (x1205 x916) (ite (= x108 x916) x878 (x1547 x916))))
(assert (x1362 x1321))
(assert (=> (<= x1336 10000) (= (x501 x1336) (x1481 x1336))))
(assert (=> (>= 10000 x1264) (= (x1481 x1264) (x501 x1264))))
(assert (x734 x432))
(assert (= (or x470 (and x1552 x1288)) x1252))
(assert (= (ite (= x993 x1227) x1356 (x411 x1227)) (x382 x1227)))
(assert (x734 x846))
(assert (x734 x539))
(assert (= (x461 (x1481 1517119036)) 1517119036))
(assert (x1362 x1308))
(assert (x1362 x1453))
(assert (x734 x1208))
(assert (x734 x1070))
(assert (x734 x1333))
(assert (x734 x1124))
(assert (x734 x886))
(assert (= 0 (x1030 x602)))
(assert (x734 x185))
(assert (= (x64 x295) (ite (and x1553 x315) (x1042 x295) (x546 x295))))
(assert (=> (<= x572 10000) (= (x501 x572) (x1481 x572))))
(assert (x734 x202))
(assert (x734 x239))
(assert (= (x461 (x501 x1126)) x1126))
(assert (x734 x327))
(assert (= (x64 x1533) (ite (and x315 x1553) (x1042 x1533) (x546 x1533))))
(assert (= x65 x1475))
(assert (= (=> (and (= x1236 (x1219 x458)) (= x184 (= x1236 0)) (= x458 (x288 (x501 x649) x252 0)) (= (x288 (x501 x497) (x1481 6) 0) x252) (<= x1236 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1236 0) (= x649 (x19 1461501637330902918203684832716283019655932542975 x1523))) (and (=> x184 x797) (=> (and (not x184) (= x763 x497)) x1487))) x783))
(assert (x1362 x417))
(assert (x734 x770))
(assert (x734 x1032))
(assert (= x1477 x315))
(assert (=> (<= x1211 10000) (= (x501 x1211) (x1481 x1211))))
(assert (x734 x924))
(assert (x734 x1001))
(assert (=> (<= x531 10000) (= (x501 x531) (x1481 x531))))
(assert (= (ite (and x620 x579) (x91 x1104) (x221 x1104)) (x668 x1104)))
(assert (= (x461 (x501 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (= x1069 x1306))
(assert (= (x501 274184521717934524641157099916833587214) (x1481 274184521717934524641157099916833587214)))
(assert (= x358 (x461 (x501 x358))))
(assert (x734 x777))
(assert (=> (<= x534 10000) (= (x501 x534) (x1481 x534))))
(assert (= (ite (= x1215 x768) x1438 (x382 x1215)) (x1532 x1215)))
(assert (=> (<= x18 10000) (= (x1481 x18) (x501 x18))))
(assert (x734 x945))
(assert (= (ite (and x831 (not x194) x620 (not x1377)) (x1239 x46) (ite (and (not x831) (not x194) x620) (x209 x46) (ite (and x194 x620) (x209 x46) (x1328 x46)))) (x5 x46)))
(assert (x734 x615))
(assert (=> (<= x436 10000) (= (x1481 x436) (x501 x436))))
(assert (x734 x1050))
(assert (= x1052 (x461 (x501 x1052))))
(assert (=> (>= 10000 x1036) (= (x501 x1036) (x1481 x1036))))
(assert (x734 x192))
(assert (x734 x1156))
(assert (= (x64 x63) (ite (and x1553 x315) (x1042 x63) (x546 x63))))
(assert (x734 x754))
(assert (= (x1260 x1546) (ite (= x1546 x577) x615 (x752 x1546))))
(assert (= (x461 (x1481 87118632)) 87118632))
(assert (x734 x434))
(assert (x679 x25 x666))
(assert (x734 x213))
(assert (x1362 x1179))
(assert (=> (<= x1134 10000) (= (x1481 x1134) (x501 x1134))))
(assert (x734 x117))
(assert (x734 x496))
(assert (x734 x90))
(assert (x734 x241))
(assert (x734 x166))
(assert (= (x461 (x501 x946)) x946))
(assert (x734 x1282))
(assert (x734 x164))
(assert (=> (>= 10000 x268) (= (x501 x268) (x1481 x268))))
(assert (x734 x651))
(assert (=> (<= x1091 10000) (= (x501 x1091) (x1481 x1091))))
(assert (= (x461 (x501 x289)) x289))
(assert (x734 x746))
(assert (= (x501 2868243304) (x1481 2868243304)))
(assert (x734 x50))
(assert (= (x1205 x1215) (ite (= x1215 x108) x878 (x1547 x1215))))
(assert (= (ite (= x553 x108) x878 (x1547 x553)) (x1205 x553)))
(assert (x734 x1433))
(assert (x734 x755))
(assert (x734 x1558))
(assert (x734 x24))
(assert (= (=> (and (> 2960351575 x856) (<= x397 1461501637330902918203684832716283019655932542975) (not (= x856 2512682246)) (= x238 (x288 (x501 x397) x311 0)) (not (= 2293535753 x856)) (not (= x856 2418364589)) (<= 0 x749) (= (x288 (x501 x447) x1542 0) x311) (= (x288 (x501 x995) (x1481 4) 0) x483) (not (> 2293535753 x856)) (>= 1461501637330902918203684832716283019655932542975 x447) (= 2532887486 x856) (> 2690754053 x856) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x749) (= (x545 x238) x749) (= x816 x749) (<= x595 1461501637330902918203684832716283019655932542975) (= x1314 (x1217 (x501 274184521717934524641157099916833587206))) (< 0 x1314) (= (x288 (x501 x595) x483 0) x1542)) x30) x938))
(assert (x303 1461501637330902918203684832716283019655932542975))
(assert (x734 x857))
(assert (= (x1043 x602) (ite (and x918 x1309 x475 x573 x509 (not x1406)) (x278 x602) (ite (and x573 x918 (not x475) x1309 x509) (x518 x602) (ite (and x509 x1309 (not x573) x918) (x978 x602) (ite (and x918 (not x509) x1309) (x894 x602) (x1361 x602)))))))
(assert (= (x1042 x295) (ite (= x815 x295) x571 (x353 x295))))
(assert (= x1253 x718))
(assert (x734 x499))
(assert (x1362 x174))
(assert (x734 x260))
(assert (x734 x1181))
(assert (= x404 x379))
(assert (= (x5 x1208) (ite (and (not x1377) x831 x620 (not x194)) (x1239 x1208) (ite (and (not x831) (not x194) x620) (x209 x1208) (ite (and x620 x194) (x209 x1208) (x1328 x1208))))))
(assert (x734 x1203))
(assert (= 0 (x1030 160)))
(assert (x679 x1086 x312))
(assert (= (x461 (x501 x536)) x536))
(assert (= (x461 (x1481 468353030)) 468353030))
(assert (= x620 x932))
(assert (= (x501 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1481 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x734 x919))
(assert (x734 x1058))
(assert (= 0 (x1030 x553)))
(assert (x1362 x561))
(assert (= (ite (= x238 x577) x615 (x752 x238)) (x1260 x238)))
(assert (=> (<= x912 10000) (= (x501 x912) (x1481 x912))))
(assert (= (ite (= x633 x1300) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1548 x633)) (x894 x633)))
(assert (= (x1030 x295) 0))
(assert (x734 x171))
(assert (x734 x931))
(assert (= x257 true))
(assert (x734 x160))
(assert (=> (>= 10000 x1371) (= (x1481 x1371) (x501 x1371))))
(assert (= (ite (= x63 x633) x21 (x209 x633)) (x1239 x633)))
(assert (x734 x103))
(assert (= (ite (= x1165 x822) x128 (x28 x822)) (x209 x822)))
(assert (=> (>= 10000 x114) (= (x1481 x114) (x501 x114))))
(assert (x734 x436))
(assert (x734 x82))
(assert (x734 x1459))
(assert (x734 x882))
(assert (= (ite (and x315 x1553) (x1042 x916) (x546 x916)) (x64 x916)))
(assert (x734 x1364))
(assert (=> (<= x533 10000) (= (x501 x533) (x1481 x533))))
(assert (x734 x1423))
(assert (x1362 x645))
(assert (x734 x174))
(assert (= (x461 (x501 x447)) x447))
(assert (x734 x112))
(assert (x1362 x735))
(assert (= (ite (and x1204 x1510) (x603 x101) (x1444 x101)) (x709 x101)))
(assert (= 0 (x1030 x108)))
(assert (x734 x1091))
(assert (=> (<= x447 10000) (= (x1481 x447) (x501 x447))))
(assert (= (ite (= x553 x701) x914 (x974 x553)) (x1547 x553)))
(assert (x734 x1397))
(assert (= (x209 x314) (ite (= x1165 x314) x128 (x28 x314))))
(assert (x1362 x689))
(assert (=> (<= x326 10000) (= (x501 x326) (x1481 x326))))
(assert (x1362 x344))
(assert (=> (>= 10000 x1052) (= (x1481 x1052) (x501 x1052))))
(assert (x1362 x676))
(assert (=> (<= x1301 10000) (= (x501 x1301) (x1481 x1301))))
(assert (= (ite (= x226 x46) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x46)) (x411 x46)))
(assert (= (x209 x815) (ite (= x1165 x815) x128 (x28 x815))))
(assert (= (x501 87118632) (x1481 87118632)))
(assert (x734 x1211))
(assert (= 2690754053 (x461 (x1481 2690754053))))
(assert (x734 x21))
(assert (= (=> (and (= x118 (> x396 0)) (= x396 (x860 (- x1188 1)))) (and (=> x118 x147) (=> (not x118) x1092))) x951))
(assert (x1362 x781))
(assert (x1362 x1511))
(assert (= (and x590 x184) x828))
(assert (=> (<= x681 10000) (= (x1481 x681) (x501 x681))))
(assert (x734 x270))
(assert (x734 x438))
(assert (x734 x519))
(assert (x734 x259))
(assert (=> (<= x456 10000) (= (x501 x456) (x1481 x456))))
(assert (x734 x702))
(assert (=> (>= 10000 x522) (= (x1481 x522) (x501 x522))))
(assert (= (ite (= x46 x815) x571 (x353 x46)) (x1042 x46)))
(assert (x734 x1142))
(assert (= (ite (= x815 x822) x571 (x353 x822)) (x1042 x822)))
(assert (= (ite (and x490 x864 (not x923) x280 x541 x1077) (x796 x314) (ite (and (not x541) x1077 x490 x280 x864) (x1532 x314) (ite (and x864 x1077 (not x280) x490) (x382 x314) (ite (and x864 x490 (not x1077)) (x411 x314) (x1040 x314))))) (x549 x314)))
(assert (= (or (and x590 (not x184)) (and x1524 (not x624))) x521))
(assert (x734 x439))
(assert (= (x1030 x63) 0))
(assert (= (or x724 x745) x1116))
(assert (=> (<= x957 10000) (= (x501 x957) (x1481 x957))))
(assert (x734 x1437))
(assert (= (ite (and (not x714) x864 x490) (x549 x815) (x337 x815)) (x599 x815)))
(assert (= (ite (= x226 x1208) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x1208)) (x411 x1208)))
(assert (x734 x463))
(assert (x734 x1225))
(assert (x1362 x262))
(assert (x1362 x681))
(assert (= (x461 (x1481 1000000000000000000)) 1000000000000000000))
(assert (x734 x776))
(assert (=> (<= x319 10000) (= (x1481 x319) (x501 x319))))
(assert (= (x1239 x314) (ite (= x63 x314) x21 (x209 x314))))
(assert (x734 x633))
(assert (x734 x1224))
(assert (x1362 x264))
(assert (= x895 (=> (= x654 x499) x1081)))
(assert (= (ite (and x1309 x918 (not x132)) (x1043 x602) (x94 x602)) (x1455 x602)))
(assert (x734 x749))
(assert (= (x1239 x108) (ite (= x108 x63) x21 (x209 x108))))
(assert (x734 x642))
(assert (x1362 x188))
(assert (x734 x533))
(assert (x734 x423))
(assert (= (x461 (x1481 2532887486)) 2532887486))
(assert (x1362 x984))
(assert (= (x411 x314) (ite (= x226 x314) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x314))))
(assert (x1362 x534))
(assert (x734 x1014))
(assert (= (x1547 x675) (ite (= x675 x701) x914 (x974 x675))))
(assert (x734 x613))
(assert (x734 x471))
(assert (= (x784 x1157) (ite (and (not x1377) x831 (not x194) x620) (x1260 x1157) (ite (and x620 (not x831) (not x194)) (x752 x1157) (ite (and x620 x194) (x752 x1157) (x1112 x1157))))))
(assert (x734 x469))
(assert (= (ite (= x701 x398) x914 (x974 x398)) (x1547 x398)))
(assert (= (=> (and (> x517 0) (not (< x1181 2293535753)) (= x1181 2798343961) (>= x600 0) (= (x288 (x501 x1058) (x1481 5) 0) x1087) (< x1181 2960351575) (>= 1461501637330902918203684832716283019655932542975 x630) (not (= x1181 2764855426)) (not (< x1181 2690754053)) (= x517 (x1217 (x501 274184521717934524641157099916833587206))) (not (= x1181 2690754053)) (<= x600 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1181 2743102681)) (= x600 x392) (= x600 (x487 x385)) (= x385 (x288 (x501 x630) x1087 0))) (=> (and (= x392 x1051) (= x1235 x213) (= x1521 x1414)) x728)) x528))
(assert (x734 x929))
(assert (=> (<= x1075 10000) (= (x1481 x1075) (x501 x1075))))
(assert (= x662 (x461 (x501 x662))))
(assert (x734 x517))
(assert (= (x1481 69947311) (x501 69947311)))
(assert (x734 x481))
(assert (= x890 (x461 (x501 x890))))
(assert (= (x1481 2061678023) (x501 2061678023)))
(assert (x734 x45))
(assert (= (ite (and x1204 x1510) (x603 x314) (x1444 x314)) (x709 x314)))
(assert (=> (>= 10000 x536) (= (x1481 x536) (x501 x536))))
(assert (= x344 (x461 (x501 x344))))
(assert (x734 x1113))
(assert (= x967 (x461 (x501 x967))))
(assert (x734 x301))
(assert (x734 x999))
(assert (= (x411 x235) (ite (= x235 x226) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x235))))
(assert (x734 x92))
(assert (= (x784 x238) (ite (and (not x194) x620 (not x1377) x831) (x1260 x238) (ite (and x620 (not x194) (not x831)) (x752 x238) (ite (and x620 x194) (x752 x238) (x1112 x238))))))
(assert (x734 x76))
(assert (x734 x503))
(assert (x734 x204))
(assert (= (and x248 x68) x1399))
(assert (= x1253 x482))
(assert (x734 x1319))
(assert (= (x461 (x501 x935)) x935))
(assert (x734 x180))
(assert (=> (>= 10000 x798) (= (x501 x798) (x1481 x798))))
(assert (= (x862 x1534) (ite (and x1252 x716) (x1420 x1534) (ite (and x1252 (not x716) x601) (x1420 x1534) (x687 x1534)))))
(assert (x734 x33))
(assert (x734 x1073))
(assert (x734 x70))
(assert (x734 x883))
(assert (x734 x1409))
(assert (= (x1547 x1402) (ite (= x701 x1402) x914 (x974 x1402))))
(assert (x1538 x402 x1490))
(assert (= 2061678023 (x461 (x1481 2061678023))))
(assert (x1362 x1493))
(assert (x734 x1327))
(assert (x1362 x1058))
(assert (x734 x1097))
(assert (x734 x1230))
(assert (x734 x1257))
(assert (x1362 x539))
(assert (=> (<= x595 10000) (= (x1481 x595) (x501 x595))))
(assert (x734 x262))
(assert (= x378 (=> (and (= (= 0 x493) x989) (or (and (= (x19 1461501637330902918203684832716283019655932542975 x1523) x533) (= (x288 (x501 x533) x8 0) x346) (<= 0 x1469) (or (and x395 (= 0 x1357) (= x33 0)) (and (= x1469 x1357) (= x33 1) (not x395))) (not x989) (= (= x1469 0) x395) (<= x1469 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8 (x288 (x501 x493) (x1481 10) 0)) (= (x91 x346) x1469)) (and x989 (= x1357 0) (= 0 x33)))) x244)))
(assert (x734 x1403))
(assert (x734 x1227))
(assert (= (x461 (x501 x715)) x715))
(assert (x734 x159))
(assert (= (x461 (x501 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= (ite (and x620 x831 (not x1377) (not x194)) (x1260 x542) (ite (and (not x194) x620 (not x831)) (x752 x542) (ite (and x620 x194) (x752 x542) (x1112 x542)))) (x784 x542)))
(assert (= (ite (and x1077 x490 x280 (not x923) x864 x541) (x796 x101) (ite (and x864 (not x541) x1077 x490 x280) (x1532 x101) (ite (and x864 x1077 (not x280) x490) (x382 x101) (ite (and (not x1077) x490 x864) (x411 x101) (x1040 x101))))) (x549 x101)))
(assert (= (x209 x602) (ite (= x602 x1165) x128 (x28 x602))))
(assert (= (ite (and x1510 x1204) (x603 x1533) (x1444 x1533)) (x709 x1533)))
(assert (x1362 x374))
(assert (=> (<= x1308 10000) (= (x1481 x1308) (x501 x1308))))
(assert (x734 x818))
(assert (= (x461 (x501 x1179)) x1179))
(assert (= (x461 (x501 x580)) x580))
(assert (= x864 (or x277 (and x932 x61) (and x275 x126))))
(assert (=> (>= 10000 x995) (= (x1481 x995) (x501 x995))))
(assert (= (x382 x1215) (ite (= x1215 x993) x1356 (x411 x1215))))
(assert (x734 x1151))
(assert (= (x461 (x501 x957)) x957))
(assert (x734 x1197))
(assert (x734 x1148))
(assert (= (x461 (x501 x208)) x208))
(assert (x734 x1119))
(assert (x1362 x396))
(assert (= (ite (= x701 x295) x914 (x974 x295)) (x1547 x295)))
(assert (= (x1042 x553) (ite (= x815 x553) x571 (x353 x553))))
(assert (= x262 (x461 (x501 x262))))
(assert (x734 x587))
(assert (= (x501 1968616202) (x1481 1968616202)))
(assert (= (x461 (x501 x869)) x869))
(assert (= (x64 x815) (ite (and x315 x1553) (x1042 x815) (x546 x815))))
(assert (= (x1043 x1533) (ite (and x509 x1309 (not x1406) x918 x573 x475) (x278 x1533) (ite (and x509 x918 (not x475) x573 x1309) (x518 x1533) (ite (and x918 x1309 x509 (not x573)) (x978 x1533) (ite (and x1309 x918 (not x509)) (x894 x1533) (x1361 x1533)))))))
(assert (= (ite (= x1157 x542) x259 (x784 x1157)) (x52 x1157)))
(assert (x734 x1179))
(assert (x734 x936))
(assert (x734 x595))
(assert (= x589 x1155))
(assert (x734 x143))
(assert (x734 x1051))
(assert (x734 x282))
(assert (= (x1304 x1020) (ite (and x716 x1252) (x227 x1020) (ite (and x1252 x601 (not x716)) (x660 x1020) (x794 x1020)))))
(assert (= (x52 x1570) (ite (= x1570 x542) x259 (x784 x1570))))
(assert (= (=> (and (= x1325 (x288 (x501 x1188) (x1481 6) 0)) (= x1344 (x19 1461501637330902918203684832716283019655932542975 x1523)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x909) (= x1555 (= x909 0)) (= x909 (x697 x245)) (<= 0 x909) (= x245 (x288 (x501 x1344) x1325 0))) (and (=> x1555 x951) (=> (and (not x1555) (= x1188 x1152)) x574))) x1353))
(assert (x734 x456))
(assert (x734 x985))
(assert (= (ite (= x768 x398) x1438 (x382 x398)) (x1532 x398)))
(assert (= (ite (= x314 x815) x571 (x353 x314)) (x1042 x314)))
(assert (=> (>= 10000 x190) (= (x1481 x190) (x501 x190))))
(assert (x734 x152))
(assert (x734 x69))
(assert (x734 x737))
(assert (x734 x331))
(assert (x1362 274184521717934524641157099916833587206))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x461 (x1481 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x734 x1199))
(assert (= (x549 x602) (ite (and x1077 (not x923) x864 x541 x280 x490) (x796 x602) (ite (and x1077 x864 x490 (not x541) x280) (x1532 x602) (ite (and x864 x490 (not x280) x1077) (x382 x602) (ite (and x490 x864 (not x1077)) (x411 x602) (x1040 x602)))))))
(assert (= (ite (= x295 x108) x878 (x1547 x295)) (x1205 x295)))
(assert (x734 x1453))
(assert (x734 x141))
(assert (x1362 x533))
(assert (= (=> (and (= x104 (x288 (x501 x396) (x1481 6) 0)) (= x349 (x288 (x501 x1334) x104 0)) (= x1103 (x697 x349)) (= x1312 (= x1103 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1103) (= x1334 (x19 1461501637330902918203684832716283019655932542975 x1523)) (<= 0 x1103)) (and (=> (and (= x396 x1152) (not x1312)) x574) (=> (and (= x1000 (x860 (- x396 1))) (not x1193) x1312 (= x1193 (> x1000 0))) x1092))) x147))
(assert (x734 x231))
(assert (= (x599 x314) (ite (and x490 x864 (not x714)) (x549 x314) (x337 x314))))
(assert (x991 x327 x607))
(assert (x734 x890))
(assert (x734 x113))
(assert (=> (>= 10000 x388) (= (x1481 x388) (x501 x388))))
(assert (x734 x1482))
(assert (x734 x493))
(assert (= (x461 (x501 x434)) x434))
(assert (x734 x696))
(assert (= x1069 (or (and x87 x1158) x743)))
(assert (x1362 x456))
(assert (= (ite (and (not x194) (not x1377) x831 x620) (x1239 x633) (ite (and (not x194) x620 (not x831)) (x209 x633) (ite (and x620 x194) (x209 x633) (x1328 x633)))) (x5 x633)))
(assert (= (ite (= x1300 x46) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1548 x46)) (x894 x46)))
(assert (x734 x583))
(assert (= (x1239 x1227) (ite (= x1227 x63) x21 (x209 x1227))))
(assert (x734 x1344))
(assert (= (ite (= x46 x63) x21 (x209 x46)) (x1239 x46)))
(assert (x303 x1435))
(assert (= (x461 (x501 x617)) x617))
(assert (x734 x1365))
(assert (= (x461 (x501 x534)) x534))
(assert (x734 x1138))
(assert (x734 x1372))
(assert (= (x382 x1208) (ite (= x993 x1208) x1356 (x411 x1208))))
(assert (= (and x1375 (not x348)) x552))
(assert (x1362 x946))
(assert (x734 x1413))
(assert (x734 x506))
(assert (x734 x188))
(assert (x734 x963))
(assert (=> (>= 10000 x1511) (= (x1481 x1511) (x501 x1511))))
(assert (x1362 x1075))
(assert (x734 x308))
(assert (x734 x1277))
(assert (= x1364 (x461 (x501 x1364))))
(assert (= x1505 (x461 (x501 x1505))))
(assert (x734 x1075))
(assert (= x533 (x461 (x501 x533))))
(assert (= (x461 (x1481 649617121)) 649617121))
(assert (x734 x885))
(assert (x734 x1436))
(assert (x734 x645))
(assert (x734 x1369))
(assert (x734 x1129))
(assert (= (x461 (x501 x1457)) x1457))
(assert (x734 x1182))
(assert (= (ite (and x716 x1252) (x227 x1267) (ite (and x1252 (not x716) x601) (x660 x1267) (x794 x1267))) (x1304 x1267)))
(assert (x734 x1339))
(assert (x1362 x1344))
(assert (x734 x597))
(assert (= (ite (= x602 x701) x914 (x974 x602)) (x1547 x602)))
(assert (x734 x979))
(assert (x734 x109))
(assert (x1362 x847))
(assert (x734 x759))
(assert (= (ite (= x66 x46) x54 (x978 x46)) (x518 x46)))
(assert (=> (<= x1484 10000) (= (x1481 x1484) (x501 x1484))))
(assert (x734 x405))
(assert (= 0 (x1030 x1215)))
(assert (x734 x34))
(assert (x734 x138))
(assert (x734 x38))
(assert (x734 x1421))
(assert (x1362 x1505))
(assert (x734 x799))
(assert (= (x461 (x501 x1381)) x1381))
(assert (= (x501 2743102681) (x1481 2743102681)))
(assert (x734 x1511))
(assert (x734 x1135))
(assert (x734 x467))
(assert (= (=> (and (= x1096 (x91 x1400)) (= x635 69947311) (= (x288 (x501 x1371) (x1481 10) 0) x516) (> 911411945 x635) (> x185 0) (<= 0 x1096) (= (x1217 (x501 274184521717934524641157099916833587206)) x185) (> 468353030 x635) (= (x288 (x501 x1493) x516 0) x1400) (> 2293535753 x635) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1096) (= x205 x1096) (>= 1461501637330902918203684832716283019655932542975 x1493)) (=> (and x498 (= x205 x216) (= x644 x707) (= x1282 0) (= x621 0) (= x141 x218) (= x834 (= 0 x141)) (= x172 (= 0 x1182)) (= (and x834 x172) x1476) (= (= x644 0) x1374) x1354 (= x1352 x811) (= x1421 0) (= x1414 x564) (= x498 (<= x623 x811)) (= x213 x319) (= x1159 x906) (= x1354 (or x1476 (not x1374))) (= x623 x707) (= x216 x1182)) x1213)) x77))
(assert (= (x1205 x602) (ite (= x108 x602) x878 (x1547 x602))))
(assert (x734 x1391))
(assert (x734 x329))
(assert (x734 x575))
(assert (= (x599 x1135) (ite (and x864 x490 (not x714)) (x549 x1135) (x337 x1135))))
(assert (= (ite (= x398 x1165) x128 (x28 x398)) (x209 x398)))
(assert (=> (>= 10000 x162) (= (x501 x162) (x1481 x162))))
(assert (x734 x59))
(assert (x734 x1003))
(assert (x734 x1488))
(assert (x734 x219))
(assert (x734 x73))
(assert (x734 x1294))
(assert (= (x5 x1227) (ite (and (not x1377) (not x194) x620 x831) (x1239 x1227) (ite (and (not x194) x620 (not x831)) (x209 x1227) (ite (and x620 x194) (x209 x1227) (x1328 x1227))))))
(assert (= 0 (x1030 x314)))
(assert (x734 x881))
(assert (= (x411 x822) (ite (= x226 x822) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1128 x822))))
(assert (x1362 x886))
(assert (x1362 x497))
(assert (=> (<= x1083 10000) (= (x1481 x1083) (x501 x1083))))
(assert (= (x1205 x1135) (ite (= x1135 x108) x878 (x1547 x1135))))
(assert (x734 x580))
(assert (x734 x850))
(assert (= (x461 (x1481 635128645)) 635128645))
(assert (x734 x1536))
(assert (= x1475 x404))
(assert (= (x461 (x501 x649)) x649))
(assert (= x1222 (and x380 x420)))
(assert (= x865 (=> (and (= (x19 1461501637330902918203684832716283019655932542975 x1523) x957) (>= x985 0) (= (x288 (x501 x497) (x1481 6) 0) x1241) (= x985 (x1219 x1564)) (<= x1057 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x985) (not (> x497 x1057)) (= x1564 (x288 (x501 x957) x1241 0)) (= (= x985 0) x830) (<= 0 x1057)) (and (=> x830 x1080) (=> (and (= 0 x1500) (= (x288 (x501 x617) x302 0) x1284) (= x302 (x288 (x501 x497) (x1481 10) 0)) (<= 0 x614) (= x614 x1008) (= x617 (x19 1461501637330902918203684832716283019655932542975 x1523)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x614) (not x830) (= x614 (x668 x1284))) x444)))))
(assert (x734 x782))
(assert (x734 x448))
(assert (= (x461 (x501 x109)) x109))
(assert (x734 x1110))
(assert (= (x1481 2532887486) (x501 2532887486)))
(assert (x1362 x219))
(assert (=> (>= 10000 x963) (= (x501 x963) (x1481 x963))))
(assert (x734 x35))
(assert (= 2835717307 (x461 (x1481 2835717307))))
(assert (= x1156 (x461 (x501 x1156))))
(assert (x734 x1512))
(assert (x734 x688))
(assert (x734 x876))
(assert (x734 x128))
(assert (x734 x618))
(assert (x734 x1352))
(assert (x734 x22))
(assert (= (ite (= x238 x542) x259 (x784 x238)) (x52 x238)))
(assert (x734 x617))
(assert (x734 x1480))
(assert (= (x501 2798343961) (x1481 2798343961)))
(assert (x734 x289))
(assert (x734 x698))
(assert (x734 x681))
(assert (x734 x604))
(assert (=> (>= 10000 x1315) (= (x1481 x1315) (x501 x1315))))
(assert (= x798 (x461 (x501 x798))))
(assert (x734 x1518))
(assert (x734 x827))
(assert (x734 x3))
(assert (x734 x1395))
(assert (x1362 x906))
(assert (x1362 x1257))
(assert (x734 x625))
(assert (= (x461 (x501 x1235)) x1235))
(assert (x1362 x351))
(assert (= x304 (=> (and (<= 0 x1106) (= (x288 (x501 x364) x962 0) x774) (= (= 0 x1106) x624) (= (x288 (x501 x645) (x1481 6) 0) x962) (= (x1219 x774) x1106) (= x364 (x19 1461501637330902918203684832716283019655932542975 x1523)) (<= x1106 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (not x682) (= (x860 (- x645 1)) x267) x624 (= (< 0 x267) x682)) x1187) (=> (and (= x645 x763) (not x624)) x1487)))))
(assert (= (or x1376 x521) x1247))
(assert (=> (>= 10000 x384) (= (x501 x384) (x1481 x384))))
(assert (x734 x453))
(assert (= (x209 x1533) (ite (= x1165 x1533) x128 (x28 x1533))))
(assert (=> (>= 10000 x646) (= (x1481 x646) (x501 x646))))
(assert (= (ite (= x108 x235) x878 (x1547 x235)) (x1205 x235)))
(assert (= (or (and x720 x1312) (and x1515 (not x118)) (and x1341 (not x366))) x724))
(assert (= (x461 (x501 x646)) x646))
(assert (= (x461 (x501 x1232)) x1232))
(check-sat)
