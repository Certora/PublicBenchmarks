(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x1229 0)) (((x868 (x1786 x1229) (x1779 x1229) (x2908 Int)) (x2873 (x3325 Int)) (x3186 (x1929 x1229) (x2124 Int)))))
(declare-fun x112 () Bool)
(declare-fun x2282 () Int)
(declare-fun x1384 () Int)
(declare-fun x3514 (Int) Int)
(declare-fun x169 () Bool)
(declare-fun x2859 () Int)
(declare-fun x2922 () Bool)
(declare-fun x127 () Int)
(declare-fun x3307 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x1887 () Bool)
(declare-fun x1289 () Int)
(declare-fun x2680 () Bool)
(declare-fun x1063 () Int)
(declare-fun x2973 (Int) Int)
(declare-fun x610 () Bool)
(declare-fun x1804 () Int)
(declare-fun x1518 () Bool)
(declare-fun x415 () Bool)
(declare-fun x569 () Int)
(declare-fun x3117 () Int)
(declare-fun x1544 () Int)
(declare-fun x2707 () Bool)
(declare-fun x3223 () Bool)
(declare-fun x3010 () Bool)
(declare-fun x2013 () Int)
(declare-fun x1072 () Int)
(declare-fun x2916 () Bool)
(declare-fun x1834 () Int)
(declare-fun x3180 () x1229)
(declare-fun x3054 () Int)
(declare-fun x75 () Bool)
(declare-fun x426 () x1229)
(declare-fun x3641 () x1229)
(declare-fun x2801 () Bool)
(declare-fun x2957 () Int)
(declare-fun x3447 () Int)
(declare-fun x2039 () Bool)
(declare-fun x3458 () Int)
(declare-fun x850 () Int)
(declare-fun x488 () Int)
(declare-fun x2997 () Int)
(declare-fun x1060 () Int)
(declare-fun x246 () Bool)
(declare-fun x791 () Bool)
(declare-fun x832 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x2554 () Bool)
(declare-fun x1431 () Int)
(declare-fun x115 () Bool)
(declare-fun x3262 () Bool)
(declare-fun x840 () Bool)
(declare-fun x2371 () Bool)
(declare-fun x2040 () Bool)
(declare-fun x151 () Bool)
(declare-fun x3070 () Int)
(declare-fun x396 () Bool)
(declare-fun x1326 () Int)
(declare-fun x3173 () Int)
(declare-fun x1324 () Bool)
(declare-fun x634 () Int)
(declare-fun x1859 (Int) Int)
(declare-fun x171 () Bool)
(declare-fun x214 (Int) Int)
(declare-fun x104 () Bool)
(declare-fun x471 () Bool)
(declare-fun x3379 () Bool)
(declare-fun x2340 () Int)
(declare-fun x1266 () Bool)
(declare-fun x612 (Int) Int)
(declare-fun x1400 (Int) Int)
(declare-fun x1088 (Int) Int)
(declare-fun x2324 () Bool)
(declare-fun x848 () Int)
(declare-fun x1778 () Int)
(declare-fun x2565 () Bool)
(declare-fun x1027 () x1229)
(declare-fun x1249 () Bool)
(declare-fun x553 () Bool)
(declare-fun x1472 () Int)
(declare-fun x1908 () Int)
(declare-fun x1385 () Int)
(declare-fun x3478 () x1229)
(declare-fun x1160 () Bool)
(declare-fun x1583 () Int)
(declare-fun x1255 () Int)
(declare-fun x2941 () x1229)
(declare-fun x2366 () Bool)
(declare-fun x3288 () Bool)
(declare-fun x623 (Int) Int)
(declare-fun x527 () Bool)
(declare-fun x3273 () Int)
(declare-fun x428 () Int)
(declare-fun x304 () Int)
(declare-fun x2532 () Int)
(declare-fun x805 () Int)
(declare-fun x728 () Int)
(declare-fun x3738 () x1229)
(declare-fun x1570 () Int)
(declare-fun x1 () Int)
(declare-fun x3464 () Bool)
(declare-fun x2712 () Int)
(declare-fun x1307 () Int)
(declare-fun x3485 () Bool)
(declare-fun x2583 () Bool)
(declare-fun x2606 () x1229)
(declare-fun x2060 () Int)
(declare-fun x2378 () Bool)
(declare-fun x1126 () Int)
(declare-fun x3158 () Int)
(declare-fun x37 () x1229)
(declare-fun x2538 () Int)
(declare-fun x876 () Int)
(declare-fun x1175 () Int)
(declare-fun x759 () Int)
(declare-fun x210 () Int)
(declare-fun x288 (Int) Int)
(declare-fun x1067 () Int)
(declare-fun x2346 () Int)
(declare-fun x3077 () Bool)
(declare-fun x2384 () Bool)
(declare-fun x3304 () Bool)
(declare-fun x3191 () Int)
(declare-fun x3628 () Int)
(declare-fun x3008 () Int)
(declare-fun x1459 () x1229)
(declare-fun x1288 () Bool)
(declare-fun x432 () Bool)
(declare-fun x577 () Int)
(declare-fun x2053 () Int)
(declare-fun x1611 () Int)
(declare-fun x445 () Bool)
(declare-fun x2465 () Int)
(declare-fun x2209 () Bool)
(declare-fun x1370 () Int)
(declare-fun x2645 () Int)
(declare-fun x2611 () x1229)
(declare-fun x2865 () Bool)
(declare-fun x2901 () Bool)
(declare-fun x2120 () Bool)
(declare-fun x984 () Bool)
(declare-fun x2836 () Bool)
(declare-fun x1983 () Int)
(declare-fun x251 () Bool)
(declare-fun x3028 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x2059 () Bool)
(declare-fun x620 () x1229)
(declare-fun x2681 () Int)
(declare-fun x181 () Bool)
(declare-fun x1959 () Int)
(declare-fun x3207 () Int)
(declare-fun x351 () Int)
(declare-fun x767 () Bool)
(declare-fun x951 () Bool)
(declare-fun x2080 () Bool)
(declare-fun x1750 () Bool)
(declare-fun x2415 () Int)
(declare-fun x3440 () Bool)
(declare-fun x502 () Int)
(declare-fun x1425 () Bool)
(declare-fun x27 () Bool)
(declare-fun x218 (Int) Int)
(declare-fun x568 () Bool)
(declare-fun x1506 () Int)
(declare-fun x3101 () Bool)
(declare-fun x2360 () Int)
(declare-fun x2910 () Int)
(declare-fun x3584 () Int)
(declare-fun x2332 () Bool)
(declare-fun x99 () Int)
(declare-fun x2780 (Int) Int)
(declare-fun x1555 () Bool)
(declare-fun x3616 () Int)
(declare-fun x44 () Int)
(declare-fun x2577 () Int)
(declare-fun x910 () Int)
(declare-fun x745 () Int)
(declare-fun x1386 () Bool)
(declare-fun x641 () Bool)
(declare-fun x129 () Bool)
(declare-fun x2673 () Bool)
(declare-fun x256 () Int)
(declare-fun x221 () Int)
(declare-fun x1223 (x1229) Int)
(declare-fun x3722 () Int)
(declare-fun x371 () Int)
(declare-fun x846 () x1229)
(declare-fun x2929 () Bool)
(declare-fun x1024 (Int) Int)
(declare-fun x1020 () x1229)
(declare-fun x3052 () Int)
(declare-fun x2165 () Int)
(declare-fun x2003 () Int)
(declare-fun x116 (x1229) Int)
(declare-fun x3445 () Int)
(declare-fun x992 (Int) Int)
(declare-fun x3442 () Int)
(declare-fun x1298 () Bool)
(declare-fun x834 (Int) Int)
(declare-fun x2818 () Int)
(declare-fun x912 (x1229) Int)
(declare-fun x1330 () Bool)
(declare-fun x2613 () Int)
(declare-fun x957 () Int)
(declare-fun x3618 () Int)
(declare-fun x1536 () Bool)
(declare-fun x3565 (x1229) Int)
(declare-fun x535 () Bool)
(declare-fun x11 () Int)
(declare-fun x2779 () Int)
(declare-fun x3562 () Bool)
(declare-fun x2636 (Int) Int)
(declare-fun x1812 () Int)
(declare-fun x3592 () Bool)
(declare-fun x1813 () Int)
(declare-fun x258 () Bool)
(declare-fun x650 (Int) Int)
(declare-fun x512 () Bool)
(declare-fun x1089 (x1229) Int)
(declare-fun x3196 () Bool)
(declare-fun x911 () Bool)
(declare-fun x931 () Bool)
(declare-fun x2476 () Bool)
(declare-fun x267 () Int)
(declare-fun x1252 (Int) Int)
(declare-fun x985 () Int)
(declare-fun x2284 () Bool)
(declare-fun x521 () x1229)
(declare-fun x2402 () Int)
(declare-fun x3334 () Int)
(declare-fun x3473 () Int)
(declare-fun x1269 () Int)
(declare-fun x3408 () Bool)
(declare-fun x3102 () x1229)
(declare-fun x1393 () Int)
(declare-fun x2948 () Bool)
(declare-fun x1937 () Bool)
(declare-fun x35 (Int) Int)
(declare-fun x3235 () Bool)
(declare-fun x3091 () Int)
(declare-fun x1964 () Int)
(declare-fun x3023 () Bool)
(declare-fun x2119 () Bool)
(declare-fun x310 () Int)
(declare-fun x498 () Int)
(declare-fun x2874 () Bool)
(declare-fun x2943 () Int)
(declare-fun x3292 () x1229)
(declare-fun x763 () Bool)
(declare-fun x1556 () Bool)
(declare-fun x2615 () Int)
(declare-fun x648 (Int) Int)
(declare-fun x1580 (Int) Int)
(declare-fun x348 (Int) Int)
(declare-fun x3576 () Int)
(declare-fun x1439 () Int)
(declare-fun x1005 () x1229)
(declare-fun x3184 () Int)
(declare-fun x3269 () Int)
(declare-fun x1552 () Bool)
(declare-fun x652 () Bool)
(declare-fun x18 () Bool)
(declare-fun x618 (Int) Int)
(declare-fun x3686 () Bool)
(declare-fun x1397 () Int)
(declare-fun x1772 () Int)
(declare-fun x341 () Bool)
(declare-fun x2299 () Int)
(declare-fun x77 () Bool)
(declare-fun x991 () x1229)
(declare-fun x828 () Int)
(declare-fun x2444 () Bool)
(declare-fun x2882 () Bool)
(declare-fun x1888 () Int)
(declare-fun x1909 () Bool)
(declare-fun x274 () Bool)
(declare-fun x1295 () Int)
(declare-fun x3143 () Int)
(declare-fun x294 () x1229)
(declare-fun x1708 () Int)
(declare-fun x467 () Bool)
(declare-fun x2205 () Bool)
(declare-fun x2230 () Int)
(declare-fun x1008 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x2674 () Int)
(declare-fun x1377 () Bool)
(declare-fun x1440 () Bool)
(declare-fun x252 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x3429 () Bool)
(declare-fun x3691 () Int)
(declare-fun x2002 (Int) Int)
(declare-fun x1427 () Bool)
(declare-fun x1848 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x2231 () Int)
(declare-fun x2441 () Bool)
(declare-fun x1532 () Int)
(declare-fun x1656 () Bool)
(declare-fun x561 () Int)
(declare-fun x696 () Bool)
(declare-fun x172 () Int)
(declare-fun x478 () Int)
(declare-fun x3242 () Int)
(declare-fun x797 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x2998 () Bool)
(declare-fun x881 () Bool)
(declare-fun x835 () Int)
(declare-fun x451 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x1729 () Int)
(declare-fun x1764 (Int) Int)
(declare-fun x3004 () Bool)
(declare-fun x1691 (Int) Int)
(declare-fun x4 () Int)
(declare-fun x103 () Bool)
(declare-fun x2440 (Int) Int)
(declare-fun x2373 () Int)
(declare-fun x682 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x1222 () Int)
(declare-fun x2768 () Bool)
(declare-fun x3714 () Bool)
(declare-fun x1628 () Int)
(declare-fun x3056 () Bool)
(declare-fun x2261 () Int)
(declare-fun x1158 () Int)
(declare-fun x1646 (x1229) Int)
(declare-fun x3707 () Bool)
(declare-fun x1618 () Bool)
(declare-fun x2048 () Int)
(declare-fun x1659 () Int)
(declare-fun x2899 () Bool)
(declare-fun x3376 () Int)
(declare-fun x894 () Bool)
(declare-fun x3216 () Int)
(declare-fun x2368 (Int) Int)
(declare-fun x1571 () Int)
(declare-fun x890 (x1229) Int)
(declare-fun x2123 () Int)
(declare-fun x3577 () Bool)
(declare-fun x637 () Int)
(declare-fun x3027 () Bool)
(declare-fun x1329 () Int)
(declare-fun x1358 (Int) Int)
(declare-fun x1933 () Bool)
(declare-fun x794 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x3676 () Int)
(declare-fun x330 (Int) Int)
(declare-fun x3362 () x1229)
(declare-fun x681 () Bool)
(declare-fun x3546 () Bool)
(declare-fun x1456 () Int)
(declare-fun x2628 () Int)
(declare-fun x761 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x2140 () x1229)
(declare-fun x1627 () Int)
(declare-fun x2794 () x1229)
(declare-fun x206 () Bool)
(declare-fun x3380 () Bool)
(declare-fun x2276 () Bool)
(declare-fun x1757 () Int)
(declare-fun x511 () Int)
(declare-fun x1780 () Bool)
(declare-fun x667 () x1229)
(declare-fun x2878 () Int)
(declare-fun x1362 () Bool)
(declare-fun x3367 () Bool)
(declare-fun x433 () Bool)
(declare-fun x1322 () Int)
(declare-fun x714 () Int)
(declare-fun x1999 () Bool)
(declare-fun x1630 () Int)
(declare-fun x492 () Bool)
(declare-fun x2106 () Int)
(declare-fun x3306 () Bool)
(declare-fun x2004 () Int)
(declare-fun x2186 () Int)
(declare-fun x2073 () Bool)
(declare-fun x2907 () Int)
(declare-fun x183 () Bool)
(declare-fun x2247 () Int)
(declare-fun x2828 () Int)
(declare-fun x2668 () Bool)
(declare-fun x3270 () Bool)
(declare-fun x1152 () Int)
(declare-fun x771 () Int)
(declare-fun x622 () Int)
(declare-fun x1706 () Int)
(declare-fun x346 () Bool)
(declare-fun x3236 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x2811 () Bool)
(declare-fun x2408 () Int)
(declare-fun x1264 () Int)
(declare-fun x1647 () Bool)
(declare-fun x2682 () Int)
(declare-fun x3682 () Bool)
(declare-fun x2072 () Int)
(declare-fun x477 () Int)
(declare-fun x2300 () Int)
(declare-fun x930 () Int)
(declare-fun x106 () Int)
(declare-fun x123 (Int) Int)
(declare-fun x3013 (Int) Int)
(declare-fun x783 () Int)
(declare-fun x420 () Int)
(declare-fun x1434 () Int)
(declare-fun x3718 () Int)
(declare-fun x3506 () Int)
(declare-fun x1759 () Int)
(declare-fun x726 () Bool)
(declare-fun x782 () Bool)
(declare-fun x2318 () x1229)
(declare-fun x3298 () Int)
(declare-fun x2695 () Bool)
(declare-fun x3144 () Bool)
(declare-fun x1598 () Int)
(declare-fun x3018 () Int)
(declare-fun x3461 () x1229)
(declare-fun x2931 () x1229)
(declare-fun x2504 () Bool)
(declare-fun x88 () Int)
(declare-fun x240 () Bool)
(declare-fun x3046 () Bool)
(declare-fun x3733 () Bool)
(declare-fun x3583 () Bool)
(declare-fun x2069 () Int)
(declare-fun x223 (Int) Int)
(declare-fun x1828 () Bool)
(declare-fun x1320 () Int)
(declare-fun x962 () x1229)
(declare-fun x12 () Bool)
(declare-fun x56 () Bool)
(declare-fun x551 () Bool)
(declare-fun x2148 () Int)
(declare-fun x2835 () Int)
(declare-fun x1220 (Int) Int)
(declare-fun x1374 () Int)
(declare-fun x1811 () Int)
(declare-fun x2078 () Bool)
(declare-fun x739 () Int)
(declare-fun x870 (Int) Int)
(declare-fun x3131 () Int)
(declare-fun x1094 () Int)
(declare-fun x2176 () Int)
(declare-fun x2669 () x1229)
(declare-fun x1411 () Bool)
(declare-fun x45 () Bool)
(declare-fun x3587 () Bool)
(declare-fun x298 () Int)
(declare-fun x2522 () Int)
(declare-fun x3477 () Bool)
(declare-fun x2130 () Int)
(declare-fun x2121 () Int)
(declare-fun x3742 () Int)
(declare-fun x1800 () Bool)
(declare-fun x3324 () Int)
(declare-fun x2355 () Int)
(declare-fun x2244 () Bool)
(declare-fun x1192 () Bool)
(declare-fun x2978 () Int)
(declare-fun x3613 () Int)
(declare-fun x1391 () Int)
(declare-fun x260 () Int)
(declare-fun x2690 () Int)
(declare-fun x720 () Int)
(declare-fun x764 () Int)
(declare-fun x1414 () Int)
(declare-fun x2499 () Int)
(declare-fun x347 () Bool)
(declare-fun x2383 () Int)
(declare-fun x3281 () Bool)
(declare-fun x262 () Bool)
(declare-fun x2319 () Bool)
(declare-fun x1649 (Int) Int)
(declare-fun x1178 (x1229) Int)
(declare-fun x1869 () Int)
(declare-fun x733 () x1229)
(declare-fun x2137 () Int)
(declare-fun x2412 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x2658 () Int)
(declare-fun x719 () Bool)
(declare-fun x2207 () Int)
(declare-fun x235 () Bool)
(declare-fun x2756 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x2771 () Bool)
(declare-fun x2126 () Bool)
(declare-fun x3603 () Int)
(declare-fun x303 () Int)
(declare-fun x1026 () Int)
(declare-fun x3071 () Bool)
(declare-fun x2589 () Int)
(declare-fun x429 () x1229)
(declare-fun x3706 () Int)
(declare-fun x1410 () x1229)
(declare-fun x2030 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x2593 () Bool)
(declare-fun x1711 (Int) Int)
(declare-fun x827 () Bool)
(declare-fun x3456 () Bool)
(declare-fun x3508 () Bool)
(declare-fun x328 () Int)
(declare-fun x1768 () Bool)
(declare-fun x2395 () Int)
(declare-fun x1976 () Bool)
(declare-fun x1184 () Int)
(declare-fun x372 () Bool)
(declare-fun x2995 () Bool)
(declare-fun x1087 () Int)
(declare-fun x2422 () Int)
(declare-fun x2637 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x153 () Int)
(declare-fun x1031 () Bool)
(declare-fun x2967 (Int) Int)
(declare-fun x1196 () Int)
(declare-fun x1237 () Int)
(declare-fun x529 (Int) Int)
(declare-fun x587 (Int) Int)
(declare-fun x990 () Int)
(declare-fun x690 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x3438 () Bool)
(declare-fun x3523 () Int)
(declare-fun x1277 () Bool)
(declare-fun x2986 () Bool)
(declare-fun x2331 () x1229)
(declare-fun x3318 () Int)
(declare-fun x2275 () Int)
(declare-fun x3203 () Bool)
(declare-fun x3241 () Bool)
(declare-fun x586 () Int)
(declare-fun x2976 () Int)
(declare-fun x1150 () Int)
(declare-fun x1283 () x1229)
(declare-fun x2686 (Int) Int)
(declare-fun x3526 () Bool)
(declare-fun x141 () x1229)
(declare-fun x2555 () Bool)
(declare-fun x283 () Int)
(declare-fun x2199 () Int)
(declare-fun x1419 () Int)
(declare-fun x3141 () Int)
(declare-fun x3285 () Bool)
(declare-fun x2953 () Bool)
(declare-fun x3015 () Int)
(declare-fun x1795 () Int)
(declare-fun x2886 () Int)
(declare-fun x3204 () Int)
(declare-fun x2297 () Bool)
(declare-fun x1697 () Int)
(declare-fun x2537 () Int)
(declare-fun x266 () Int)
(declare-fun x2852 () x1229)
(declare-fun x1567 () Int)
(declare-fun x209 () Int)
(declare-fun x2439 () Int)
(declare-fun x1037 () Bool)
(declare-fun x3494 () Int)
(declare-fun x2380 () Int)
(declare-fun x403 () Bool)
(declare-fun x3337 () Int)
(declare-fun x1682 () Bool)
(declare-fun x1191 () Int)
(declare-fun x779 () Bool)
(declare-fun x2885 () Int)
(declare-fun x820 () Int)
(declare-fun x3177 (Int) Int)
(declare-fun x3704 () Int)
(declare-fun x1388 () Int)
(declare-fun x1442 () Bool)
(declare-fun x2817 () Bool)
(declare-fun x3345 () Int)
(declare-fun x28 () Bool)
(declare-fun x1333 () x1229)
(declare-fun x2287 () Int)
(declare-fun x656 () Int)
(declare-fun x2550 () Bool)
(declare-fun x1895 (Int) Int)
(declare-fun x2927 () x1229)
(declare-fun x2534 () Int)
(declare-fun x3434 () Int)
(declare-fun x1728 () Int)
(declare-fun x120 () x1229)
(declare-fun x3505 (Int) Int)
(declare-fun x2761 () Int)
(declare-fun x1412 () Bool)
(declare-fun x825 () Int)
(declare-fun x3274 () Int)
(declare-fun x809 () Int)
(declare-fun x3166 () x1229)
(declare-fun x2464 () Int)
(declare-fun x1864 () Bool)
(declare-fun x2702 () Int)
(declare-fun x2089 (Int) Int)
(declare-fun x2792 () Int)
(declare-fun x2038 () Bool)
(declare-fun x3142 () Bool)
(declare-fun x2238 () Int)
(declare-fun x657 () Bool)
(declare-fun x1373 () Int)
(declare-fun x3002 () Bool)
(declare-fun x1823 () Bool)
(declare-fun x3403 () Int)
(declare-fun x2767 () Int)
(declare-fun x3699 () x1229)
(declare-fun x1547 () Int)
(declare-fun x427 () x1229)
(declare-fun x47 () Bool)
(declare-fun x2523 () Int)
(declare-fun x2023 () Int)
(declare-fun x3519 () Bool)
(declare-fun x2031 () Int)
(declare-fun x1171 () x1229)
(declare-fun x698 () Bool)
(declare-fun x2083 () Int)
(declare-fun x842 () Bool)
(declare-fun x1789 (Int) Int)
(declare-fun x2012 () Int)
(declare-fun x3547 () Bool)
(declare-fun x3106 () Bool)
(declare-fun x269 () Int)
(declare-fun x952 () Int)
(declare-fun x2394 () Int)
(declare-fun x2572 () Int)
(declare-fun x936 (Int) Int)
(declare-fun x1523 () Int)
(declare-fun x2533 () Bool)
(declare-fun x3150 () Int)
(declare-fun x3271 () Int)
(declare-fun x1167 () Int)
(declare-fun x2535 () Int)
(declare-fun x807 () Int)
(declare-fun x1655 (Int) Int)
(declare-fun x3490 () Bool)
(declare-fun x3667 () Int)
(declare-fun x941 () Int)
(declare-fun x2974 () Int)
(declare-fun x1995 () Int)
(declare-fun x2189 () Bool)
(declare-fun x3311 () Int)
(declare-fun x3003 () x1229)
(declare-fun x590 () Int)
(declare-fun x2731 () Int)
(declare-fun x2559 () Bool)
(declare-fun x987 () x1229)
(declare-fun x1738 () Bool)
(declare-fun x810 () Bool)
(declare-fun x3114 () x1229)
(declare-fun x213 () Bool)
(declare-fun x1722 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x2098 () Int)
(declare-fun x2829 () Bool)
(declare-fun x3499 () Int)
(declare-fun x2339 () Bool)
(declare-fun x3375 () Int)
(declare-fun x2781 () Int)
(declare-fun x1035 () Bool)
(declare-fun x166 () Int)
(declare-fun x2984 () Int)
(declare-fun x3495 () Bool)
(declare-fun x2610 () Int)
(declare-fun x1826 () Int)
(declare-fun x344 () Int)
(declare-fun x1698 () Bool)
(declare-fun x633 () Bool)
(declare-fun x2530 () Bool)
(declare-fun x544 () Int)
(declare-fun x3050 () Int)
(declare-fun x691 () Int)
(declare-fun x1076 () x1229)
(declare-fun x2134 () Bool)
(declare-fun x3601 () Bool)
(declare-fun x1743 () Int)
(declare-fun x439 () Int)
(declare-fun x2880 () x1229)
(declare-fun x3343 () Bool)
(declare-fun x2843 () Int)
(declare-fun x2856 (Int) Int)
(declare-fun x3253 () Bool)
(declare-fun x2188 () Int)
(declare-fun x2902 () Bool)
(declare-fun x971 () x1229)
(declare-fun x2897 () Int)
(declare-fun x3109 () Int)
(declare-fun x388 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x2766 () Bool)
(declare-fun x2028 () Bool)
(declare-fun x3585 () Bool)
(declare-fun x3029 (Int) Int)
(declare-fun x1038 () Int)
(declare-fun x540 () Bool)
(declare-fun x2043 (Int) Int)
(declare-fun x1860 () Int)
(declare-fun x2462 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x2870 () Int)
(declare-fun x2496 () Int)
(declare-fun x1302 (Int) Int)
(declare-fun x1584 () Int)
(declare-fun x958 () Int)
(declare-fun x3179 () Int)
(declare-fun x3598 () Bool)
(declare-fun x1927 () Bool)
(declare-fun x71 () Int)
(declare-fun x2435 () x1229)
(declare-fun x1633 () Int)
(declare-fun x1829 () Int)
(declare-fun x3665 () Bool)
(declare-fun x2036 () Int)
(declare-fun x3340 (x1229) Int)
(declare-fun x2370 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x2202 () Bool)
(declare-fun x589 () Int)
(declare-fun x1085 () Int)
(declare-fun x1673 () Int)
(declare-fun x1501 () Int)
(declare-fun x995 () Int)
(declare-fun x1802 () Int)
(declare-fun x241 () Int)
(declare-fun x872 () x1229)
(declare-fun x1457 () Bool)
(declare-fun x2328 () x1229)
(declare-fun x964 () Int)
(declare-fun x257 () Int)
(declare-fun x1201 () Bool)
(declare-fun x2638 () Int)
(declare-fun x3246 () Bool)
(declare-fun x1124 () Int)
(declare-fun x3674 () Int)
(declare-fun x2234 () Int)
(declare-fun x1194 () Bool)
(declare-fun x2850 () Int)
(declare-fun x1363 () Bool)
(declare-fun x1433 () Int)
(declare-fun x227 () Int)
(declare-fun x3138 () Int)
(declare-fun x1720 () Int)
(declare-fun x2432 () Bool)
(declare-fun x1632 () x1229)
(declare-fun x2492 () Int)
(declare-fun x1726 () Int)
(declare-fun x46 () Int)
(declare-fun x2000 () Bool)
(declare-fun x1620 () Int)
(declare-fun x197 () Bool)
(declare-fun x3017 () Bool)
(declare-fun x2921 () Int)
(declare-fun x2108 () Bool)
(declare-fun x1885 () Int)
(declare-fun x857 () Bool)
(declare-fun x1348 () Int)
(declare-fun x2037 () Bool)
(declare-fun x102 () Int)
(declare-fun x2547 () Bool)
(declare-fun x2541 () Int)
(declare-fun x2649 () Int)
(declare-fun x3745 () x1229)
(declare-fun x877 () Bool)
(declare-fun x772 () Int)
(declare-fun x160 () Int)
(declare-fun x1265 () Bool)
(declare-fun x86 () Int)
(declare-fun x1614 () Bool)
(declare-fun x1458 () Int)
(declare-fun x2517 () Bool)
(declare-fun x247 () Int)
(declare-fun x1943 () Int)
(declare-fun x2252 () Int)
(declare-fun x134 () Int)
(declare-fun x1451 () Bool)
(declare-fun x2135 () Bool)
(declare-fun x3061 (x1229) Int)
(declare-fun x1803 () Int)
(declare-fun x2167 () Int)
(declare-fun x2964 () Int)
(declare-fun x2549 () Int)
(declare-fun x2265 () Int)
(declare-fun x1857 () Int)
(declare-fun x1408 () Int)
(declare-fun x2988 () Int)
(declare-fun x3536 () Bool)
(declare-fun x3736 () Int)
(declare-fun x2630 () Bool)
(declare-fun x1608 () Bool)
(declare-fun x875 () Bool)
(declare-fun x1325 () Bool)
(declare-fun x2677 () Bool)
(declare-fun x400 () Int)
(declare-fun x1863 () Int)
(declare-fun x1893 (Int) Int)
(declare-fun x3335 () Bool)
(declare-fun x1530 () Int)
(declare-fun x2290 () Bool)
(declare-fun x3229 () x1229)
(declare-fun x3024 () Int)
(declare-fun x195 () Int)
(declare-fun x2357 () Int)
(declare-fun x3104 (Int) Int)
(declare-fun x626 () Int)
(declare-fun x2379 () Int)
(declare-fun x854 () Int)
(declare-fun x490 () Bool)
(declare-fun x2918 () Bool)
(declare-fun x1644 (Int) Int)
(declare-fun x1499 () Int)
(declare-fun x117 () Int)
(declare-fun x2330 () Bool)
(declare-fun x3044 () Int)
(declare-fun x2041 () Int)
(declare-fun x2093 () Bool)
(declare-fun x386 (Int) Int)
(declare-fun x1081 () Bool)
(declare-fun x142 () Int)
(declare-fun x747 () Int)
(declare-fun x2710 () Int)
(declare-fun x3296 () Int)
(declare-fun x2564 () Int)
(declare-fun x2427 () Int)
(declare-fun x1508 () Bool)
(declare-fun x557 () Bool)
(declare-fun x292 () x1229)
(declare-fun x2467 () Int)
(declare-fun x2327 (Int) Int)
(declare-fun x3064 (Int) Int)
(declare-fun x897 () Bool)
(declare-fun x2372 () Int)
(declare-fun x3433 () Bool)
(declare-fun x2608 () Int)
(declare-fun x1101 () Bool)
(declare-fun x673 () Bool)
(declare-fun x2103 () Int)
(declare-fun x3639 () Bool)
(declare-fun x3125 (x1229) Int)
(declare-fun x1597 () Bool)
(declare-fun x2575 () Int)
(declare-fun x217 () Bool)
(declare-fun x799 () Int)
(declare-fun x2521 () Int)
(declare-fun x1539 () Bool)
(declare-fun x1111 () Int)
(declare-fun x862 () x1229)
(declare-fun x2838 () Bool)
(declare-fun x1116 () Int)
(declare-fun x582 () Int)
(declare-fun x706 () Bool)
(declare-fun x7 () Int)
(declare-fun x1773 () Int)
(declare-fun x3426 () Bool)
(declare-fun x3278 () Bool)
(declare-fun x741 () Int)
(declare-fun x430 () Bool)
(declare-fun x2236 () Int)
(declare-fun x397 () Bool)
(declare-fun x1071 () x1229)
(declare-fun x3663 () Int)
(declare-fun x3220 () Int)
(declare-fun x970 () Int)
(declare-fun x1807 () Int)
(declare-fun x3320 () Int)
(declare-fun x2298 () Bool)
(declare-fun x481 () Bool)
(declare-fun x3097 () Int)
(declare-fun x729 (Int) Int)
(declare-fun x3413 () Int)
(declare-fun x2483 () Bool)
(declare-fun x3396 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x2750 () Bool)
(declare-fun x2064 () Bool)
(declare-fun x3630 () Int)
(declare-fun x2567 () Bool)
(declare-fun x3364 () Int)
(declare-fun x2129 (x1229) Int)
(declare-fun x1677 () Bool)
(declare-fun x1867 () x1229)
(declare-fun x1925 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x579 () Bool)
(declare-fun x2151 () Int)
(declare-fun x2804 () Int)
(declare-fun x1564 () x1229)
(declare-fun x3677 () Bool)
(declare-fun x956 () Int)
(declare-fun x2047 () Bool)
(declare-fun x3524 () Bool)
(declare-fun x3099 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x3053 () Int)
(declare-fun x3239 () Int)
(declare-fun x1962 () Bool)
(declare-fun x308 () Int)
(declare-fun x2020 () Int)
(declare-fun x1767 () Int)
(declare-fun x1648 () Int)
(declare-fun x1689 () Bool)
(declare-fun x1541 (Int) Int)
(declare-fun x576 () x1229)
(declare-fun x959 () Bool)
(declare-fun x949 () Int)
(declare-fun x904 () Bool)
(declare-fun x2177 () Int)
(declare-fun x78 () Bool)
(declare-fun x202 () Int)
(declare-fun x233 () Bool)
(declare-fun x3352 () Int)
(declare-fun x2560 () x1229)
(declare-fun x3390 () Bool)
(declare-fun x3588 () Bool)
(declare-fun x2322 () Bool)
(declare-fun x3016 () Int)
(declare-fun x3734 () Bool)
(declare-fun x2675 () Int)
(declare-fun x417 () Int)
(declare-fun x3509 () Int)
(declare-fun x3568 () Bool)
(declare-fun x3623 () Int)
(declare-fun x3190 (x1229) Int)
(declare-fun x2697 () Bool)
(declare-fun x3391 () Int)
(declare-fun x1202 () Bool)
(declare-fun x463 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x1578 () Int)
(declare-fun x816 () Bool)
(declare-fun x2871 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x1944 () Int)
(declare-fun x1182 () Bool)
(declare-fun x2704 () Int)
(declare-fun x2128 () Bool)
(declare-fun x3090 () Int)
(declare-fun x3436 () x1229)
(declare-fun x1168 () Int)
(declare-fun x1051 () Int)
(declare-fun x2429 () Int)
(declare-fun x1642 (Int) Int)
(declare-fun x2959 () Bool)
(declare-fun x668 () Int)
(declare-fun x111 () Bool)
(declare-fun x473 () Int)
(declare-fun x2511 () Bool)
(declare-fun x286 () Int)
(declare-fun x2021 () Int)
(declare-fun x1637 () Bool)
(declare-fun x573 () Int)
(declare-fun x1806 () Int)
(declare-fun x1351 () Int)
(declare-fun x450 () Bool)
(declare-fun x2667 () Int)
(declare-fun x2010 () Int)
(declare-fun x3471 () x1229)
(declare-fun x2688 () Bool)
(declare-fun x63 () x1229)
(declare-fun x3743 () Int)
(declare-fun x3687 () Bool)
(declare-fun x159 () Bool)
(declare-fun x1077 () Int)
(declare-fun x1585 () Int)
(declare-fun x2617 () Int)
(declare-fun x3636 () Int)
(declare-fun x1247 () Int)
(declare-fun x219 () Bool)
(declare-fun x2019 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x1715 () Int)
(declare-fun x2821 () Bool)
(declare-fun x1238 () Int)
(declare-fun x475 () Bool)
(declare-fun x406 () Int)
(declare-fun x2490 () Int)
(declare-fun x3084 () Bool)
(declare-fun x2200 () Int)
(declare-fun x1446 () Int)
(declare-fun x3312 (Int) Int)
(declare-fun x660 (Int) Int)
(declare-fun x3689 (Int) Int)
(declare-fun x2815 () x1229)
(declare-fun x2855 () Int)
(declare-fun x3557 () x1229)
(declare-fun x2797 () Int)
(declare-fun x2970 () Bool)
(declare-fun x1437 () Int)
(declare-fun x2168 () Int)
(declare-fun x1898 () Bool)
(declare-fun x3294 () Bool)
(declare-fun x666 () Bool)
(declare-fun x629 () Int)
(declare-fun x390 () Int)
(declare-fun x776 () Bool)
(declare-fun x1243 (Int) Int)
(declare-fun x228 (Int) Int)
(declare-fun x3351 () Int)
(declare-fun x591 (Int) Int)
(declare-fun x3696 () Int)
(declare-fun x232 () Bool)
(declare-fun x1751 () Bool)
(declare-fun x3280 () Int)
(declare-fun x2993 () Int)
(declare-fun x2946 () Int)
(declare-fun x2741 () Bool)
(declare-fun x147 () Int)
(declare-fun x2536 () Bool)
(declare-fun x2 () Bool)
(declare-fun x2757 () Bool)
(declare-fun x731 () Bool)
(declare-fun x2160 () Bool)
(declare-fun x914 () x1229)
(declare-fun x3559 () Int)
(declare-fun x1248 () Int)
(declare-fun x1546 () Bool)
(declare-fun x476 () Int)
(declare-fun x3521 () Int)
(declare-fun x3747 () Int)
(declare-fun x3093 () Int)
(declare-fun x2687 () Bool)
(declare-fun x2246 () Int)
(declare-fun x2434 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x1023 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x2966 () Int)
(declare-fun x1700 () Bool)
(declare-fun x3702 (Int) Int)
(declare-fun x3534 () Bool)
(declare-fun x2466 () Int)
(declare-fun x2443 () Int)
(declare-fun x1816 () Int)
(declare-fun x1181 (Int) Int)
(declare-fun x1573 () x1229)
(declare-fun x3079 () Bool)
(declare-fun x2169 () Bool)
(declare-fun x1258 () Int)
(declare-fun x2448 () Bool)
(declare-fun x575 () Int)
(declare-fun x3126 () Int)
(declare-fun x2629 () Int)
(declare-fun x3594 () Int)
(declare-fun x2912 () Bool)
(declare-fun x1549 () x1229)
(declare-fun x3200 () Bool)
(declare-fun x3162 () Int)
(declare-fun x3581 () Bool)
(declare-fun x1049 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x465 () Int)
(declare-fun x3540 () Int)
(declare-fun x592 () Bool)
(declare-fun x1418 () Int)
(declare-fun x2748 () Bool)
(declare-fun x3248 () Int)
(declare-fun x1835 () Bool)
(declare-fun x2399 () Int)
(declare-fun x2027 () Int)
(declare-fun x2153 () Int)
(declare-fun x859 () Bool)
(declare-fun x132 () Int)
(declare-fun x10 () Bool)
(declare-fun x165 (Int) Int)
(declare-fun x1022 () Bool)
(declare-fun x2376 (Int) Int)
(declare-fun x1155 () Int)
(declare-fun x1467 () Bool)
(declare-fun x853 () Bool)
(declare-fun x3518 () Int)
(declare-fun x1936 () Int)
(declare-fun x3042 () Bool)
(declare-fun x1950 () Int)
(declare-fun x1986 () Bool)
(declare-fun x687 () Int)
(declare-fun x272 () Int)
(declare-fun x1774 () Bool)
(declare-fun x3208 () Bool)
(declare-fun x1119 () Int)
(declare-fun x3005 () Int)
(declare-fun x3283 () Int)
(declare-fun x756 () Int)
(declare-fun x588 () Int)
(declare-fun x2075 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x395 () x1229)
(declare-fun x26 (Int) Int)
(declare-fun x2065 () Bool)
(declare-fun x343 () Bool)
(declare-fun x2077 () Bool)
(declare-fun x2950 () Int)
(declare-fun x1674 () Bool)
(declare-fun x2623 () Int)
(declare-fun x815 () x1229)
(declare-fun x2260 () Bool)
(declare-fun x2197 () Int)
(declare-fun x2652 () Int)
(declare-fun x1376 () Bool)
(declare-fun x3484 () Int)
(declare-fun x2211 () Bool)
(declare-fun x1138 () x1229)
(declare-fun x793 () Bool)
(declare-fun x705 () Int)
(declare-fun x3450 () Int)
(declare-fun x479 () Int)
(declare-fun x2820 () x1229)
(declare-fun x1553 (Int) Int)
(declare-fun x3671 () Int)
(declare-fun x2980 () Int)
(declare-fun x3515 () Bool)
(declare-fun x456 () Bool)
(declare-fun x62 () Int)
(declare-fun x608 () Int)
(declare-fun x1050 () Int)
(declare-fun x1799 () Int)
(declare-fun x744 () Bool)
(declare-fun x2659 () Bool)
(declare-fun x2314 () Int)
(declare-fun x631 () Int)
(declare-fun x3255 () x1229)
(declare-fun x3165 () Int)
(declare-fun x718 (Int) Int)
(declare-fun x1559 () Int)
(declare-fun x2643 () Int)
(declare-fun x2206 () Int)
(declare-fun x1135 () Bool)
(declare-fun x299 () Bool)
(declare-fun x3622 () Int)
(declare-fun x1949 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x461 (Int) Int)
(declare-fun x259 () Bool)
(declare-fun x2341 () Int)
(declare-fun x3467 () Int)
(declare-fun x935 () Int)
(declare-fun x3026 () Int)
(declare-fun x1226 () x1229)
(declare-fun x1808 () Int)
(declare-fun x1368 () Int)
(declare-fun x1525 () Int)
(declare-fun x484 () x1229)
(declare-fun x3277 () x1229)
(declare-fun x1952 () Int)
(declare-fun x1623 () Int)
(declare-fun x2317 () Int)
(declare-fun x2472 () Int)
(declare-fun x1372 () Int)
(declare-fun x139 () Int)
(declare-fun x2243 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x2526 () Int)
(declare-fun x1958 (Int) Int)
(declare-fun x829 () Int)
(declare-fun x281 () Int)
(declare-fun x275 () Int)
(declare-fun x3575 () Int)
(declare-fun x3252 () Int)
(declare-fun x3700 () Bool)
(declare-fun x550 () Int)
(declare-fun x2544 () Int)
(declare-fun x1930 () Bool)
(declare-fun x1007 () Int)
(declare-fun x20 () x1229)
(declare-fun x3489 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x187 () Int)
(declare-fun x570 () Int)
(declare-fun x2245 () Int)
(declare-fun x409 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x3480 () Int)
(declare-fun x3541 () Bool)
(declare-fun x1497 () Int)
(declare-fun x847 () Bool)
(declare-fun x280 () Bool)
(declare-fun x2305 () Int)
(declare-fun x1615 () Bool)
(declare-fun x3331 (Int) Int)
(declare-fun x1932 () x1229)
(declare-fun x1334 () Int)
(declare-fun x1421 () Bool)
(declare-fun x3302 () Int)
(declare-fun x638 () Int)
(declare-fun x1382 () Bool)
(declare-fun x852 () Int)
(declare-fun x1352 () Bool)
(declare-fun x79 () Int)
(declare-fun x887 () Int)
(declare-fun x2133 () Int)
(declare-fun x1065 () Bool)
(declare-fun x2664 () Bool)
(declare-fun x2862 () Int)
(declare-fun x3586 () x1229)
(declare-fun x2698 () Int)
(declare-fun x2018 (x1229) Int)
(declare-fun x3305 () Bool)
(declare-fun x1364 () x1229)
(declare-fun x230 () Int)
(declare-fun x2285 () Int)
(declare-fun x3167 () Bool)
(declare-fun x997 () Bool)
(declare-fun x2367 () Int)
(declare-fun x2709 () Bool)
(declare-fun x1739 (x1229) Int)
(declare-fun x2495 () Int)
(declare-fun x954 () Int)
(declare-fun x2581 () Bool)
(declare-fun x822 () Bool)
(declare-fun x2326 () Int)
(declare-fun x2524 () Bool)
(declare-fun x114 () Int)
(declare-fun x532 () Int)
(declare-fun x2749 () x1229)
(declare-fun x778 () Bool)
(declare-fun x3570 (Int) Int)
(declare-fun x2113 () Int)
(declare-fun x365 () Int)
(declare-fun x665 () Int)
(declare-fun x2237 () Int)
(declare-fun x1387 (Int) Int)
(declare-fun x3032 () Int)
(declare-fun x1668 () Int)
(declare-fun x1635 () Bool)
(declare-fun x1471 () x1229)
(declare-fun x1833 (Int) Int)
(declare-fun x54 () Int)
(declare-fun x1455 () Int)
(declare-fun x3322 () Bool)
(declare-fun x1634 () Bool)
(declare-fun x566 () Bool)
(declare-fun x2808 (Int) Int)
(declare-fun x3297 () Bool)
(declare-fun x2898 () Int)
(declare-fun x1928 () Int)
(declare-fun x2689 (Int) Int)
(declare-fun x2584 () Bool)
(declare-fun x2598 () Int)
(declare-fun x632 () Bool)
(declare-fun x1565 () Int)
(declare-fun x1323 () Int)
(declare-fun x702 () Int)
(declare-fun x1262 () Int)
(declare-fun x1970 () Int)
(declare-fun x3591 () Bool)
(declare-fun x2404 () Int)
(declare-fun x2822 () Int)
(declare-fun x2414 (Int) Int)
(declare-fun x2457 () Int)
(declare-fun x3356 () Bool)
(declare-fun x1526 () Bool)
(declare-fun x2826 () Int)
(declare-fun x2989 () Bool)
(declare-fun x1554 () Int)
(declare-fun x1204 () Bool)
(declare-fun x236 () Bool)
(declare-fun x2293 () Int)
(declare-fun x1057 () Int)
(declare-fun x927 () Int)
(declare-fun x3387 () Bool)
(declare-fun x1605 (Int) Int)
(declare-fun x2338 () Int)
(declare-fun x943 () x1229)
(declare-fun x869 () Int)
(declare-fun x1891 () Bool)
(declare-fun x6 () Int)
(declare-fun x1560 () x1229)
(declare-fun x1336 () x1229)
(declare-fun x1045 () Bool)
(declare-fun x3644 () Bool)
(declare-fun x3145 () Int)
(declare-fun x101 () Int)
(declare-fun x1189 () Bool)
(declare-fun x584 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x64 () Bool)
(declare-fun x1984 () Int)
(declare-fun x2409 () Bool)
(declare-fun x688 () Int)
(declare-fun x754 () Int)
(declare-fun x856 () Int)
(declare-fun x486 (Int) Int)
(declare-fun x405 () Bool)
(declare-fun x3149 () Bool)
(declare-fun x900 () Int)
(declare-fun x1507 () Bool)
(declare-fun x2254 () Int)
(declare-fun x1163 () Int)
(declare-fun x2932 () Int)
(declare-fun x96 () Int)
(declare-fun x3209 () Int)
(declare-fun x2514 () Bool)
(declare-fun x2869 () Int)
(declare-fun x1250 () Int)
(declare-fun x1590 () Bool)
(declare-fun x1056 () Int)
(declare-fun x530 () Bool)
(declare-fun x792 () Int)
(declare-fun x273 () Bool)
(declare-fun x5 () Bool)
(declare-fun x2956 () Bool)
(declare-fun x808 (Int) Int)
(declare-fun x2144 () Bool)
(declare-fun x716 () Int)
(declare-fun x2352 () Int)
(declare-fun x1187 () x1229)
(declare-fun x1103 () Bool)
(declare-fun x3085 () Int)
(declare-fun x412 () Bool)
(declare-fun x1966 (x1229) Int)
(declare-fun x3197 () Int)
(declare-fun x1484 () Int)
(declare-fun x2475 (Int) Int)
(declare-fun x2178 () Int)
(declare-fun x2721 () Bool)
(declare-fun x3397 () Int)
(declare-fun x2436 () Bool)
(declare-fun x2350 () Bool)
(declare-fun x131 () Int)
(declare-fun x3737 () Bool)
(declare-fun x1735 (Int) Int)
(declare-fun x3066 () Bool)
(declare-fun x3206 () Int)
(declare-fun x1742 () x1229)
(declare-fun x2752 () Bool)
(declare-fun x760 () Bool)
(declare-fun x1058 () x1229)
(declare-fun x983 () Int)
(declare-fun x2175 () Int)
(declare-fun x999 () Int)
(declare-fun x2612 () Bool)
(declare-fun x2883 () Int)
(declare-fun x2016 () x1229)
(declare-fun x3460 () Bool)
(declare-fun x3705 () Bool)
(declare-fun x3439 () Int)
(declare-fun x2268 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x1285 () Int)
(declare-fun x2582 () Int)
(declare-fun x3319 () Int)
(declare-fun x2190 () Bool)
(declare-fun x1254 () Int)
(declare-fun x1967 () Int)
(declare-fun x444 () Int)
(declare-fun x896 () Bool)
(declare-fun x2386 () Bool)
(declare-fun x849 () Int)
(declare-fun x1657 () Int)
(declare-fun x3520 () Bool)
(declare-fun x392 () Bool)
(declare-fun x1703 () Int)
(declare-fun x2753 () Int)
(declare-fun x1658 () Int)
(declare-fun x3327 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x644 () Int)
(declare-fun x58 () x1229)
(declare-fun x1842 () Int)
(declare-fun x2481 (Int) Int)
(declare-fun x3683 () Int)
(declare-fun x2500 () Int)
(declare-fun x2241 () Int)
(declare-fun x567 () x1229)
(declare-fun x3412 () Bool)
(declare-fun x2459 () Int)
(declare-fun x453 () Int)
(declare-fun x1463 () Int)
(declare-fun x525 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x2909 () Int)
(declare-fun x2485 () Int)
(declare-fun x1960 () Bool)
(declare-fun x2790 () Bool)
(declare-fun x3369 () Int)
(declare-fun x337 () Bool)
(declare-fun x833 () x1229)
(declare-fun x3116 () Bool)
(declare-fun x2599 () Int)
(declare-fun x3192 () Int)
(declare-fun x1968 () Bool)
(declare-fun x1276 () Int)
(declare-fun x1019 () Int)
(declare-fun x3475 (x1229) Int)
(declare-fun x3488 (Int) Int)
(declare-fun x3402 () Int)
(declare-fun x1561 () Int)
(declare-fun x2233 () Int)
(declare-fun x1707 () Bool)
(declare-fun x1874 () Int)
(declare-fun x2655 () Int)
(declare-fun x466 () Int)
(declare-fun x3572 () Int)
(declare-fun x2644 () Int)
(declare-fun x1219 () Int)
(declare-fun x245 () x1229)
(declare-fun x1416 () Bool)
(declare-fun x2778 () Int)
(declare-fun x2678 () Int)
(declare-fun x2229 () Int)
(declare-fun x1814 () Int)
(declare-fun x658 () Int)
(declare-fun x2888 () Int)
(declare-fun x2513 () Int)
(declare-fun x1671 () Bool)
(declare-fun x2385 () Bool)
(declare-fun x469 () Bool)
(declare-fun x2730 () Bool)
(declare-fun x1091 (x1229) Int)
(declare-fun x953 () Int)
(declare-fun x3193 () Bool)
(declare-fun x3045 () Bool)
(declare-fun x3083 () Bool)
(declare-fun x2520 () Bool)
(declare-fun x1681 () Int)
(declare-fun x3463 () Int)
(declare-fun x891 () Int)
(declare-fun x1624 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x1136 () Int)
(declare-fun x948 () Bool)
(declare-fun x1770 (Int) Int)
(declare-fun x1127 () Int)
(declare-fun x2445 (x1229) Int)
(declare-fun x536 () Bool)
(declare-fun x2401 () Int)
(declare-fun x841 () Bool)
(declare-fun x2150 () Bool)
(declare-fun x497 () Int)
(declare-fun x2834 () Int)
(declare-fun x2846 (Int) Int)
(declare-fun x285 () Int)
(declare-fun x543 (Int) Int)
(declare-fun x2745 () Int)
(declare-fun x1293 () Bool)
(declare-fun x845 () Int)
(declare-fun x1392 () x1229)
(declare-fun x3651 () Int)
(declare-fun x2654 () Int)
(declare-fun x2283 () Bool)
(declare-fun x928 () Int)
(declare-fun x1300 () Bool)
(declare-fun x148 () Int)
(declare-fun x1732 () Int)
(declare-fun x3721 (Int) Int)
(declare-fun x1490 () Int)
(declare-fun x1796 (Int) Int)
(declare-fun x3174 () Bool)
(declare-fun x1736 () Bool)
(declare-fun x242 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x198 () Int)
(declare-fun x3605 () Int)
(declare-fun x1193 () Int)
(declare-fun x3410 () Int)
(declare-fun x255 () Bool)
(declare-fun x3326 () Bool)
(declare-fun x1157 (Int) x1229)
(declare-fun x1162 () Int)
(declare-fun x2893 () Int)
(declare-fun x1327 () Bool)
(declare-fun x596 () Int)
(declare-fun x500 () Int)
(declare-fun x617 () Bool)
(declare-fun x2451 () Bool)
(declare-fun x3012 () Int)
(declare-fun x684 () Bool)
(declare-fun x239 () Int)
(declare-fun x611 () Bool)
(declare-fun x378 () Bool)
(declare-fun x861 () Int)
(declare-fun x1531 () Int)
(declare-fun x3432 () x1229)
(declare-fun x39 () x1229)
(declare-fun x2232 () Int)
(declare-fun x3011 () Int)
(declare-fun x3552 () Int)
(declare-fun x996 () Int)
(declare-fun x191 () Int)
(declare-fun x2321 () Bool)
(declare-fun x3595 () Int)
(declare-fun x539 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x2454 () Bool)
(declare-fun x95 () x1229)
(declare-fun x2540 () Int)
(declare-fun x1879 () Int)
(declare-fun x3120 () Int)
(declare-fun x265 () Bool)
(declare-fun x2585 () Int)
(declare-fun x3095 () Int)
(declare-fun x154 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x3468 () Bool)
(declare-fun x301 () Int)
(declare-fun x3388 () Bool)
(declare-fun x2479 () x1229)
(declare-fun x3059 (Int) Int)
(declare-fun x3435 () Int)
(declare-fun x3348 () Bool)
(declare-fun x1798 () Int)
(declare-fun x3560 () Int)
(declare-fun x2226 () Int)
(declare-fun x3507 () Int)
(declare-fun x3212 () Bool)
(declare-fun x3060 () Int)
(declare-fun x3645 () Int)
(declare-fun x743 () Int)
(declare-fun x1914 () Int)
(declare-fun x2143 (Int) Int)
(declare-fun x53 () Int)
(declare-fun x1577 () Int)
(declare-fun x1805 () Int)
(declare-fun x3187 () Bool)
(declare-fun x2482 () Bool)
(declare-fun x701 () Int)
(declare-fun x1581 () Int)
(declare-fun x327 () Bool)
(declare-fun x3661 () Int)
(declare-fun x2516 () Bool)
(declare-fun x2398 () x1229)
(declare-fun x3647 () Bool)
(declare-fun x2204 () Bool)
(declare-fun x1520 (Int) Int)
(declare-fun x770 () Int)
(declare-fun x751 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x1340 () Int)
(declare-fun x1787 () Int)
(declare-fun x1661 (Int) Int)
(declare-fun x3612 () Bool)
(declare-fun x3423 () Bool)
(declare-fun x3039 () Bool)
(declare-fun x709 () Bool)
(declare-fun x2101 () Int)
(declare-fun x3134 (Int) Int)
(declare-fun x2982 () Bool)
(declare-fun x604 () x1229)
(declare-fun x1819 () Bool)
(declare-fun x93 () Bool)
(declare-fun x1261 (Int Int) Int)
(declare-fun x2849 () Bool)
(declare-fun x2833 () Int)
(declare-fun x2306 () Int)
(declare-fun x3693 () Bool)
(declare-fun x994 () Int)
(declare-fun x2656 () Int)
(declare-fun x1109 (Int) Int)
(declare-fun x795 () Bool)
(declare-fun x2542 () Bool)
(declare-fun x1487 () Bool)
(declare-fun x40 () Int)
(declare-fun x918 () Int)
(declare-fun x3264 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x2365 () Bool)
(declare-fun x3226 () Bool)
(declare-fun x1208 () Int)
(declare-fun x2755 () Bool)
(declare-fun x3168 () Bool)
(declare-fun x1763 (Int) Int)
(declare-fun x1516 (Int) Int)
(declare-fun x1579 () Bool)
(declare-fun x1830 () Bool)
(declare-fun x798 () Bool)
(declare-fun x2788 () Bool)
(declare-fun x1205 () Int)
(declare-fun x263 () Int)
(declare-fun x1280 () Int)
(declare-fun x1535 () Int)
(declare-fun x411 () Bool)
(declare-fun x663 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x2356 () Bool)
(declare-fun x1961 () Int)
(declare-fun x419 () Bool)
(declare-fun x1784 () Int)
(declare-fun x3522 () Int)
(declare-fun x21 () Bool)
(declare-fun x237 () Int)
(declare-fun x659 () Bool)
(declare-fun x3094 () Int)
(declare-fun x3542 () x1229)
(declare-fun x315 () Bool)
(declare-fun x3160 () Int)
(declare-fun x888 () x1229)
(declare-fun x1603 () Bool)
(declare-fun x1241 () Bool)
(declare-fun x2320 () Bool)
(declare-fun x2474 () Bool)
(declare-fun x182 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x3072 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x2719 () Int)
(declare-fun x899 () Bool)
(declare-fun x1305 () Int)
(declare-fun x3650 () Bool)
(declare-fun x1758 () Int)
(declare-fun x1240 () Int)
(declare-fun x277 () x1229)
(declare-fun x1871 () Bool)
(declare-fun x2257 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x353 () Int)
(declare-fun x2087 () x1229)
(declare-fun x1625 () Int)
(declare-fun x2939 () Bool)
(declare-fun x2527 () Int)
(declare-fun x3365 () Int)
(declare-fun x1449 () x1229)
(declare-fun x177 () Int)
(declare-fun x3422 () Bool)
(declare-fun x1483 (Int) Int)
(declare-fun x2706 () Int)
(declare-fun x625 (x1229) Int)
(declare-fun x312 () Bool)
(declare-fun x2556 () Int)
(declare-fun x1234 () Int)
(declare-fun x3525 () Bool)
(declare-fun x189 () Bool)
(declare-fun x480 () Int)
(declare-fun x3606 () Int)
(declare-fun x3697 () Int)
(declare-fun x3289 () Int)
(declare-fun x824 (x1229) Int)
(declare-fun x3265 () Int)
(declare-fun x2933 () x1229)
(declare-fun x1877 () Int)
(declare-fun x2890 () Int)
(declare-fun x2728 () Int)
(declare-fun x513 () Int)
(declare-fun x1843 () Bool)
(declare-fun x2215 () Bool)
(declare-fun x2787 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x821 () Bool)
(declare-fun x1337 () Int)
(declare-fun x2127 () Int)
(declare-fun x1801 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x313 () Int)
(declare-fun x1716 () Bool)
(declare-fun x1018 () Int)
(declare-fun x3076 () Bool)
(declare-fun x2576 (Int) Int)
(declare-fun x2051 () Int)
(declare-fun x1972 (Int) Int)
(declare-fun x3020 () Int)
(declare-fun x619 (Int) Int)
(declare-fun x2022 () Int)
(declare-fun x3556 () Int)
(declare-fun x385 () Int)
(declare-fun x3420 () Bool)
(declare-fun x1903 () Bool)
(declare-fun x249 () Int)
(declare-fun x3533 () Int)
(declare-fun x2763 () x1229)
(declare-fun x803 () Bool)
(declare-fun x3695 () Bool)
(declare-fun x3266 () x1229)
(declare-fun x487 () Int)
(declare-fun x3672 () Bool)
(declare-fun x1601 () Int)
(declare-fun x199 () Bool)
(declare-fun x3626 () Int)
(declare-fun x1395 () Bool)
(declare-fun x2904 () Int)
(declare-fun x441 () Bool)
(declare-fun x1452 () Int)
(declare-fun x1317 () Int)
(declare-fun x563 () Int)
(declare-fun x621 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x2746 () Bool)
(declare-fun x3124 () x1229)
(declare-fun x968 () x1229)
(declare-fun x1366 () Bool)
(declare-fun x711 () Int)
(declare-fun x3321 () Int)
(declare-fun x1125 () Int)
(declare-fun x926 (x1229) Int)
(declare-fun x533 () Bool)
(declare-fun x978 () Bool)
(declare-fun x2857 () Int)
(declare-fun x282 () Bool)
(declare-fun x2308 () Bool)
(declare-fun x2170 () Bool)
(declare-fun x2951 () Bool)
(declare-fun x3615 () Bool)
(declare-fun x924 () Int)
(declare-fun x499 () Int)
(declare-fun x989 () Bool)
(declare-fun x1775 () Int)
(declare-fun x3393 () Int)
(declare-fun x1211 () Bool)
(declare-fun x2419 () Int)
(declare-fun x2076 () x1229)
(declare-fun x2085 () Bool)
(declare-fun x3399 () Int)
(declare-fun x1912 () x1229)
(declare-fun x1177 () Int)
(declare-fun x1082 () x1229)
(declare-fun x156 () Int)
(declare-fun x727 () Int)
(declare-fun x442 (Int) Int)
(declare-fun x3068 () Int)
(declare-fun x2819 () Int)
(declare-fun x126 () Bool)
(declare-fun x2438 () x1229)
(declare-fun x2508 (Int) Int)
(declare-fun x2622 () Bool)
(declare-fun x2614 () Int)
(declare-fun x3021 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x735 () Bool)
(declare-fun x3659 () Int)
(declare-fun x838 () Bool)
(declare-fun x1777 (Int) Int)
(declare-fun x1466 () Int)
(declare-fun x3658 () Bool)
(declare-fun x1432 () Int)
(declare-fun x1693 () Int)
(declare-fun x1575 () Int)
(declare-fun x3051 () Bool)
(declare-fun x2449 () Int)
(declare-fun x1793 () Int)
(declare-fun x2430 () Int)
(declare-fun x323 () Bool)
(declare-fun x2736 () Bool)
(declare-fun x3711 () Bool)
(declare-fun x843 () Int)
(declare-fun x2742 () x1229)
(declare-fun x2760 () Bool)
(declare-fun x867 () Bool)
(declare-fun x3385 () Bool)
(declare-fun x207 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x2110 () Int)
(declare-fun x2304 () x1229)
(declare-fun x3176 () Int)
(declare-fun x2097 () Bool)
(declare-fun x3419 () Int)
(declare-fun x309 () Int)
(declare-fun x2954 () Bool)
(declare-fun x950 () Bool)
(declare-fun x407 () Int)
(declare-fun x514 () x1229)
(declare-fun x2488 () x1229)
(declare-fun x140 () Bool)
(declare-fun x944 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x2239 () Int)
(declare-fun x937 () Int)
(declare-fun x3259 () Bool)
(declare-fun x3300 () Bool)
(declare-fun x600 () x1229)
(declare-fun x906 (Int) Int)
(declare-fun x2685 () Bool)
(declare-fun x3617 (Int) Int)
(declare-fun x52 () Bool)
(declare-fun x2759 () Int)
(declare-fun x2558 () Int)
(declare-fun x2996 () Bool)
(declare-fun x3260 () Int)
(declare-fun x3034 () Bool)
(declare-fun x41 () Bool)
(declare-fun x1685 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x583 () x1229)
(declare-fun x893 () Int)
(declare-fun x883 () Bool)
(declare-fun x3395 () Bool)
(declare-fun x3157 (Int) Int)
(declare-fun x436 () Int)
(declare-fun x2720 () Int)
(declare-fun x2979 () Bool)
(declare-fun x3531 () x1229)
(declare-fun x316 () Int)
(declare-fun x1724 () Bool)
(declare-fun x1663 () Int)
(declare-fun x446 () Int)
(declare-fun x506 () Bool)
(declare-fun x2161 () Int)
(declare-fun x203 () Int)
(declare-fun x2743 (Int) Int)
(declare-fun x749 () Int)
(declare-fun x2992 () Bool)
(declare-fun x1511 () Bool)
(declare-fun x254 () Int)
(declare-fun x2312 () Int)
(declare-fun x438 () Bool)
(declare-fun x3692 () Int)
(declare-fun x1406 () Bool)
(declare-fun x3295 () Bool)
(declare-fun x2847 () Int)
(declare-fun x3036 () x1229)
(declare-fun x699 () Int)
(declare-fun x837 () Int)
(declare-fun x2334 () Bool)
(declare-fun x3357 () Int)
(declare-fun x2525 (x1229) Int)
(declare-fun x2114 () Bool)
(declare-fun x1345 () Int)
(declare-fun x2393 () Bool)
(declare-fun x3258 () Bool)
(declare-fun x3366 () Bool)
(declare-fun x1092 () Int)
(declare-fun x3355 () Int)
(declare-fun x3237 () Int)
(declare-fun x370 () Bool)
(declare-fun x571 () Bool)
(declare-fun x3481 () Int)
(declare-fun x1183 () Int)
(declare-fun x3047 () Int)
(declare-fun x1174 () Bool)
(declare-fun x2227 () Int)
(declare-fun x2225 () Int)
(declare-fun x712 () Int)
(declare-fun x1235 () Bool)
(declare-fun x3057 () Bool)
(declare-fun x2975 () Int)
(declare-fun x921 () Int)
(declare-fun x3608 () Bool)
(declare-fun x2307 () x1229)
(declare-fun x1753 () Bool)
(declare-fun x2456 () Bool)
(declare-fun x786 () Int)
(declare-fun x3512 () x1229)
(declare-fun x200 () Int)
(declare-fun x3153 (Int) Int)
(declare-fun x1921 (Int) Int)
(declare-fun x1631 () Int)
(declare-fun x556 () Int)
(declare-fun x713 (Int) Int)
(declare-fun x1424 () Bool)
(declare-fun x3548 () Int)
(declare-fun x2228 () Bool)
(declare-fun x287 () Int)
(declare-fun x2313 () Bool)
(declare-fun x2928 () Bool)
(declare-fun x725 () Bool)
(declare-fun x695 () Bool)
(declare-fun x3256 () Bool)
(declare-fun x2224 () Bool)
(declare-fun x2799 () Int)
(declare-fun x144 () Bool)
(declare-fun x3247 () Bool)
(declare-fun x393 () Bool)
(declare-fun x2218 () Bool)
(declare-fun x746 () Int)
(declare-fun x3629 () Int)
(declare-fun x2269 () Bool)
(declare-fun x993 () Bool)
(declare-fun x1540 () x1229)
(declare-fun x3535 () Bool)
(declare-fun x2676 () Bool)
(declare-fun x355 () x1229)
(declare-fun x2158 () Int)
(declare-fun x2008 () Bool)
(declare-fun x1725 () Bool)
(declare-fun x3627 () Bool)
(declare-fun x2425 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x980 () Int)
(declare-fun x83 () Int)
(declare-fun x722 () Int)
(declare-fun x2813 () Bool)
(declare-fun x2860 () Bool)
(declare-fun x830 () Bool)
(declare-fun x1831 () Bool)
(declare-fun x865 () Bool)
(declare-fun x125 () Bool)
(declare-fun x1309 () Int)
(declare-fun x645 () Int)
(declare-fun x3100 () Bool)
(declare-fun x2426 () Int)
(declare-fun x2587 () Bool)
(declare-fun x3497 () Bool)
(declare-fun x338 () Bool)
(declare-fun x1461 () Int)
(declare-fun x1997 () Int)
(declare-fun x1761 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x1910 () Int)
(declare-fun x1521 () Int)
(declare-fun x974 () Int)
(declare-fun x244 () Int)
(declare-fun x1180 () Bool)
(declare-fun x1957 () Int)
(declare-fun x3210 () x1229)
(declare-fun x1447 () Bool)
(declare-fun x34 () Int)
(declare-fun x2029 () Int)
(declare-fun x2142 () Bool)
(declare-fun x3118 () Bool)
(declare-fun x873 () Int)
(declare-fun x801 () Int)
(declare-fun x335 () Bool)
(declare-fun x2136 () Bool)
(declare-fun x2985 () Int)
(declare-fun x3098 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x3105 () Int)
(declare-fun x225 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x913 () Int)
(declare-fun x59 () Bool)
(declare-fun x1524 () Bool)
(declare-fun x3712 () Int)
(declare-fun x651 (Int) Int)
(declare-fun x2195 (Int) Int)
(declare-fun x2266 () Int)
(declare-fun x955 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x1791 () Int)
(declare-fun x3421 (Int) Int)
(declare-fun x2896 () Bool)
(declare-fun x3561 () Int)
(declare-fun x3544 (x1229) Int)
(declare-fun x765 () Int)
(declare-fun x2316 () Int)
(declare-fun x3698 () Int)
(declare-fun x552 () Bool)
(declare-fun x2722 () Int)
(declare-fun x1713 () Bool)
(declare-fun x1179 () Int)
(declare-fun x138 () Bool)
(declare-fun x3354 (Int) Int)
(declare-fun x1622 () Bool)
(declare-fun x3451 () Int)
(declare-fun x3244 () x1229)
(declare-fun x2905 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x2684 () Int)
(declare-fun x724 () Int)
(declare-fun x1876 () Int)
(declare-fun x662 () Bool)
(declare-fun x2747 (Int) Int)
(declare-fun x3238 () Int)
(declare-fun x2586 () Int)
(declare-fun x2923 () Bool)
(declare-fun x1429 () Int)
(declare-fun x2591 () Bool)
(declare-fun x2139 (Int) Int)
(declare-fun x3175 () Int)
(declare-fun x3730 () Bool)
(declare-fun x787 () Bool)
(declare-fun x74 () Bool)
(declare-fun x2557 () Int)
(declare-fun x1315 () Int)
(declare-fun x2487 () Bool)
(declare-fun x1450 () Bool)
(declare-fun x2875 (Int) Int)
(declare-fun x748 () Bool)
(declare-fun x3571 () Int)
(declare-fun x909 () Bool)
(declare-fun x2861 () Bool)
(declare-fun x3437 () Bool)
(declare-fun x2703 (Int) Int)
(declare-fun x2571 () Int)
(declare-fun x707 () Int)
(declare-fun x1396 () Int)
(declare-fun x3140 () Bool)
(declare-fun x2342 () Bool)
(declare-fun x50 () Int)
(declare-fun x3202 () Int)
(declare-fun x2364 () Int)
(declare-fun x449 () Bool)
(declare-fun x975 () Int)
(declare-fun x1491 () Bool)
(declare-fun x2067 () Int)
(declare-fun x2259 () Int)
(declare-fun x3067 () x1229)
(declare-fun x1533 (Int) Int)
(declare-fun x831 () Int)
(declare-fun x3360 () Int)
(declare-fun x642 () Int)
(declare-fun x1602 () Int)
(declare-fun x3309 () Int)
(declare-fun x2724 () Int)
(declare-fun x90 () Bool)
(declare-fun x369 () Bool)
(declare-fun x216 () Bool)
(declare-fun x66 () Int)
(declare-fun x3558 () Int)
(declare-fun x2528 () Int)
(declare-fun x68 () Int)
(declare-fun x470 () Int)
(declare-fun x2657 () Int)
(declare-fun x1599 () x1229)
(declare-fun x1858 () x1229)
(declare-fun x2192 () Bool)
(declare-fun x3170 () Bool)
(declare-fun x855 () Bool)
(declare-fun x1537 () Int)
(declare-fun x1061 () Bool)
(declare-fun x1692 () Int)
(declare-fun x3373 () Int)
(declare-fun x814 () x1229)
(declare-fun x3272 () Bool)
(declare-fun x1495 (Int) Int)
(declare-fun x1920 () Int)
(declare-fun x1946 () Int)
(declare-fun x72 () Bool)
(declare-fun x3472 () Int)
(declare-fun x2732 () Int)
(declare-fun x97 () Int)
(declare-fun x742 () Int)
(declare-fun x700 () x1229)
(declare-fun x2938 () Int)
(declare-fun x647 () Bool)
(declare-fun x212 (Int) Int)
(declare-fun x677 (Int) Int)
(declare-fun x1029 () Int)
(declare-fun x25 () Bool)
(declare-fun x1640 () Int)
(declare-fun x2210 () Bool)
(declare-fun x2390 () Bool)
(declare-fun x381 () Bool)
(declare-fun x3610 () Int)
(declare-fun x2864 () Int)
(declare-fun x860 () Bool)
(declare-fun x1141 () Int)
(declare-fun x3358 () Int)
(declare-fun x2497 () Int)
(declare-fun x819 () x1229)
(declare-fun x2579 () Int)
(declare-fun x3110 (Int) Int)
(declare-fun x2785 () Int)
(declare-fun x3462 () Int)
(declare-fun x133 () Bool)
(declare-fun x932 () x1229)
(declare-fun x1847 () Bool)
(declare-fun x1316 () Int)
(declare-fun x2981 () Int)
(declare-fun x1291 (x1229) Int)
(declare-fun x137 () Bool)
(declare-fun x1086 () Int)
(declare-fun x1756 () Bool)
(declare-fun x1892 () Int)
(declare-fun x863 () Bool)
(declare-fun x3486 () Int)
(declare-fun x3082 () Int)
(declare-fun x1981 (x1229) Int)
(declare-fun x2264 () Bool)
(declare-fun x1112 () Int)
(declare-fun x2431 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x3224 () Int)
(declare-fun x3652 () Int)
(declare-fun x2683 () Bool)
(declare-fun x1889 () Int)
(declare-fun x2903 () Int)
(declare-fun x1297 () Int)
(declare-fun x3048 () Bool)
(declare-fun x1257 () Int)
(declare-fun x1215 () Int)
(declare-fun x3703 () Int)
(declare-fun x3654 () Int)
(declare-fun x1818 () Bool)
(declare-fun x1332 () Int)
(declare-fun x2102 () Bool)
(declare-fun x510 () x1229)
(declare-fun x593 () Bool)
(declare-fun x1214 () Int)
(declare-fun x504 () Bool)
(declare-fun x2867 () Int)
(declare-fun x2661 () Bool)
(declare-fun x1680 () Int)
(declare-fun x2100 () Int)
(declare-fun x1282 () Bool)
(declare-fun x643 (Int) Int)
(declare-fun x3041 () Int)
(declare-fun x3649 () Bool)
(declare-fun x903 () Int)
(declare-fun x1245 () Int)
(declare-fun x3602 () Bool)
(declare-fun x2507 () Int)
(declare-fun x3427 () Int)
(declare-fun x3554 () x1229)
(declare-fun x960 () Bool)
(declare-fun x1350 () Int)
(declare-fun x2423 () Bool)
(declare-fun x2868 () Int)
(declare-fun x1938 () Bool)
(declare-fun x1308 () Int)
(declare-fun x693 () Int)
(declare-fun x2477 () x1229)
(declare-fun x1409 () Int)
(declare-fun x607 () Bool)
(declare-fun x2934 () Bool)
(declare-fun x495 () Int)
(declare-fun x3675 () Bool)
(declare-fun x635 () Int)
(declare-fun x1563 () Bool)
(declare-fun x545 () Int)
(declare-fun x1473 () Bool)
(declare-fun x2407 () Int)
(declare-fun x518 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x368 () Int)
(declare-fun x2881 () Int)
(declare-fun x3501 () Int)
(declare-fun x1916 () Int)
(declare-fun x3133 () Int)
(declare-fun x2952 () Int)
(declare-fun x3301 (Int) Int)
(declare-fun x2348 () x1229)
(declare-fun x1820 () Bool)
(declare-fun x1945 () Int)
(declare-fun x723 () Bool)
(declare-fun x1043 () Int)
(declare-fun x81 () Int)
(declare-fun x1678 (Int) Int)
(declare-fun x1592 () Int)
(declare-fun x1221 () Bool)
(declare-fun x105 () Bool)
(declare-fun x3088 () Bool)
(declare-fun x1705 () Int)
(declare-fun x3113 () Int)
(declare-fun x2138 (x1229) Int)
(declare-fun x1225 () Bool)
(declare-fun x929 () Bool)
(declare-fun x697 () Int)
(declare-fun x882 () Bool)
(declare-fun x2392 () Bool)
(declare-fun x3135 () Int)
(declare-fun x3225 () Int)
(declare-fun x3504 () Int)
(declare-fun x3058 () Bool)
(declare-fun x2125 () Int)
(declare-fun x3545 () x1229)
(declare-fun x542 () Int)
(declare-fun x774 () Int)
(declare-fun x295 () Bool)
(declare-fun x1104 () Int)
(declare-fun x2924 () Bool)
(declare-fun x1841 () Int)
(declare-fun x1256 () x1229)
(declare-fun x2122 () Int)
(declare-fun x2183 () Bool)
(declare-fun x2024 () Int)
(declare-fun x3146 () Int)
(declare-fun x2841 () Int)
(declare-fun x1906 () Bool)
(declare-fun x3188 () Int)
(declare-fun x599 () Int)
(declare-fun x1365 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x3346 () Int)
(declare-fun x1617 () Bool)
(declare-fun x325 () Int)
(declare-fun x2734 (Int) Int)
(declare-fun x238 () Bool)
(declare-fun x3527 () Bool)
(declare-fun x2837 () Int)
(declare-fun x1607 () Int)
(declare-fun x3543 () Bool)
(declare-fun x2442 () Int)
(declare-fun x3476 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x946 () Int)
(declare-fun x362 (Int) Int)
(declare-fun x3681 () x1229)
(declare-fun x418 (Int) Int)
(declare-fun x306 () Bool)
(declare-fun x2651 () Bool)
(declare-fun x609 () Bool)
(declare-fun x2512 () Bool)
(declare-fun x2005 () Bool)
(declare-fun x311 () Int)
(declare-fun x3213 (Int) Int)
(declare-fun x1197 () Int)
(declare-fun x1100 () Int)
(declare-fun x67 () Bool)
(declare-fun x2116 () Int)
(declare-fun x3378 () Int)
(declare-fun x3123 () Int)
(declare-fun x2452 () Int)
(declare-fun x823 () Int)
(declare-fun x98 () Int)
(declare-fun x1328 () Bool)
(declare-fun x2185 () x1229)
(declare-fun x333 (Int) Int)
(declare-fun x753 () Int)
(declare-fun x2301 () Int)
(declare-fun x661 () Bool)
(declare-fun x762 () Bool)
(declare-fun x2738 () Int)
(declare-fun x1078 () x1229)
(declare-fun x1762 () Int)
(declare-fun x1856 () Int)
(declare-fun x3563 () Int)
(declare-fun x3230 (Int) Int)
(declare-fun x391 () Int)
(declare-fun x2977 () Int)
(declare-fun x2292 () Int)
(declare-fun x1200 () x1229)
(declare-fun x22 () Bool)
(declare-fun x2983 () Bool)
(declare-fun x3286 () Bool)
(declare-fun x851 () Bool)
(declare-fun x1558 () Int)
(declare-fun x3564 () Bool)
(declare-fun x2216 (Int) Int)
(declare-fun x1149 () Bool)
(declare-fun x836 () Int)
(declare-fun x113 () Int)
(declare-fun x785 () Int)
(declare-fun x2484 () Int)
(declare-fun x1832 () Bool)
(declare-fun x3662 () Bool)
(declare-fun x1587 () Bool)
(declare-fun x2774 () Int)
(declare-fun x2141 () Int)
(declare-fun x1850 () Int)
(declare-fun x1032 () x1229)
(declare-fun x942 () Bool)
(declare-fun x1821 () Bool)
(declare-fun x1134 () Int)
(declare-fun x2971 () Int)
(declare-fun x3731 () Int)
(declare-fun x2519 () Int)
(declare-fun x2253 () Int)
(declare-fun x1727 () x1229)
(declare-fun x2179 () Bool)
(declare-fun x2337 () Int)
(declare-fun x2310 () Bool)
(declare-fun x1137 () Int)
(declare-fun x3025 () Int)
(declare-fun x1405 () x1229)
(declare-fun x3690 () Bool)
(declare-fun x3735 () Bool)
(declare-fun x164 () Bool)
(declare-fun x3454 (Int) Int)
(declare-fun x1596 (Int) Int)
(declare-fun x3261 (Int) Int)
(declare-fun x2263 () Int)
(declare-fun x1853 () Bool)
(declare-fun x1122 () Int)
(declare-fun x2054 () x1229)
(declare-fun x517 () Int)
(declare-fun x630 () Bool)
(declare-fun x121 () Int)
(declare-fun x1218 () Bool)
(declare-fun x1117 () Int)
(declare-fun x1108 () Int)
(declare-fun x2791 () Bool)
(declare-fun x3741 () Bool)
(declare-fun x443 () Int)
(declare-fun x1318 () Int)
(declare-fun x157 () Int)
(declare-fun x789 () x1229)
(declare-fun x3657 () Bool)
(declare-fun x3383 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x3642 () Int)
(declare-fun x3107 (Int) Int)
(declare-fun x297 () Bool)
(declare-fun x2289 () Int)
(declare-fun x3038 () Int)
(declare-fun x680 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x1210 () Int)
(declare-fun x363 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x2388 () Int)
(declare-fun x367 () Bool)
(declare-fun x2592 () Int)
(declare-fun x1346 () Bool)
(declare-fun x17 () Bool)
(declare-fun x2288 () Int)
(declare-fun x2001 () Int)
(declare-fun x2823 () Int)
(declare-fun x796 () x1229)
(declare-fun x1809 () Bool)
(declare-fun x2084 () Int)
(declare-fun x3469 () Int)
(declare-fun x1988 () x1229)
(declare-fun x522 (Int) Int)
(declare-fun x1095 () Int)
(declare-fun x1378 (Int) Int)
(declare-fun x2809 () Int)
(declare-fun x2437 () x1229)
(declare-fun x3729 () Bool)
(declare-fun x1688 () Int)
(declare-fun x1894 () Bool)
(declare-fun x1788 () Int)
(declare-fun x549 () Bool)
(declare-fun x1154 (x1229) Int)
(declare-fun x1292 () Bool)
(declare-fun x2906 () Int)
(declare-fun x988 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x1349 () x1229)
(declare-fun x1140 (Int) Int)
(declare-fun x1147 () Bool)
(declare-fun x24 () Bool)
(declare-fun x1696 (Int) Int)
(declare-fun x3030 () Bool)
(declare-fun x2784 () Bool)
(declare-fun x2049 () Int)
(declare-fun x3449 () Int)
(declare-fun x3685 () Int)
(declare-fun x3108 () Int)
(declare-fun x340 () x1229)
(declare-fun x176 () x1229)
(declare-fun x3218 () Bool)
(declare-fun x2421 () Int)
(declare-fun x2469 () Int)
(declare-fun x1897 () Bool)
(declare-fun x3653 () Int)
(declare-fun x2863 () Int)
(declare-fun x3195 () x1229)
(declare-fun x2618 () Int)
(declare-fun x2772 () x1229)
(declare-fun x2510 () Bool)
(declare-fun x379 () Int)
(declare-fun x1542 () Bool)
(declare-fun x2666 () Bool)
(declare-fun x1145 () x1229)
(declare-fun x1971 () x1229)
(declare-fun x3482 () Int)
(declare-fun x2915 () Int)
(declare-fun x2274 () Bool)
(declare-fun x1562 () Bool)
(declare-fun x2351 () Int)
(declare-fun x1004 () Int)
(declare-fun x1669 () Int)
(declare-fun x143 () Int)
(declare-fun x3287 () Int)
(declare-fun x3640 () Int)
(declare-fun x1357 () Int)
(declare-fun x1512 () Int)
(declare-fun x534 () Bool)
(declare-fun x2163 (Int) Int)
(declare-fun x3276 () Bool)
(declare-fun x358 () Bool)
(declare-fun x3416 () x1229)
(declare-fun x2879 () Bool)
(declare-fun x3537 () Bool)
(declare-fun x51 () Int)
(declare-fun x3604 () Int)
(declare-fun x3136 () x1229)
(declare-fun x3632 () Bool)
(declare-fun x423 () Bool)
(declare-fun x38 () Bool)
(declare-fun x3708 () Bool)
(declare-fun x3293 () Int)
(declare-fun x2940 () Bool)
(declare-fun x585 () Int)
(declare-fun x279 () Bool)
(declare-fun x3638 (Int) Int)
(declare-fun x916 () Int)
(declare-fun x3169 () Int)
(declare-fun x89 () Int)
(declare-fun x3386 () Bool)
(declare-fun x2913 () Bool)
(declare-fun x2509 () Bool)
(declare-fun x2693 () Bool)
(declare-fun x2588 () Int)
(declare-fun x2895 () Int)
(declare-fun x2642 (Int) Int)
(declare-fun x3151 () Int)
(declare-fun x1448 () Bool)
(declare-fun x2999 () Bool)
(declare-fun x640 () Int)
(declare-fun x383 () Int)
(declare-fun x268 (Int) Int)
(declare-fun x2164 () Bool)
(declare-fun x546 () Int)
(declare-fun x3217 () x1229)
(declare-fun x3528 (Int) Int)
(declare-fun x2347 (Int) Int)
(declare-fun x2605 () Bool)
(declare-fun x3007 (Int) Int)
(declare-fun x2079 () x1229)
(declare-fun x3353 (Int) Int)
(declare-fun x1613 () Int)
(declare-fun x2798 () Int)
(declare-fun x3382 () Bool)
(declare-fun x541 () Bool)
(declare-fun x122 () Bool)
(declare-fun x1670 () x1229)
(declare-fun x1915 (Int) Int)
(declare-fun x3669 () x1229)
(declare-fun x1139 () Int)
(declare-fun x155 () Bool)
(declare-fun x2539 () Bool)
(declare-fun x2311 () Int)
(declare-fun x31 () Bool)
(declare-fun x3466 () Bool)
(declare-fun x2258 () Bool)
(declare-fun x1389 (Int Int) Int)
(declare-fun x2096 () Int)
(declare-fun x3453 () Int)
(declare-fun x2213 () Int)
(declare-fun x2255 () Int)
(declare-fun x1973 () Int)
(declare-fun x3268 () Bool)
(declare-fun x2580 () Int)
(declare-fun x1638 () Int)
(declare-fun x1275 () x1229)
(declare-fun x1963 () Int)
(declare-fun x3171 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x871 () Bool)
(declare-fun x345 () Int)
(declare-fun x2354 () x1229)
(declare-fun x3389 () Int)
(declare-fun x375 () Int)
(declare-fun x2848 () Int)
(declare-fun x253 () Int)
(declare-fun x2518 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x452 () Bool)
(declare-fun x3234 () Int)
(declare-fun x2616 () Int)
(declare-fun x3315 () Bool)
(declare-fun x1074 (Int) Int)
(declare-fun x2196 () Int)
(declare-fun x704 () Bool)
(declare-fun x2545 () Int)
(declare-fun x531 () Bool)
(declare-fun x2961 () Int)
(declare-fun x1062 () Int)
(declare-fun x2692 () Bool)
(declare-fun x2033 () Int)
(declare-fun x2391 () Bool)
(declare-fun x455 () Bool)
(declare-fun x775 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x3392 (Int) Int)
(declare-fun x2172 () Int)
(declare-fun x382 () Int)
(declare-fun x1500 () Bool)
(declare-fun x3673 () Int)
(declare-fun x2825 () Bool)
(declare-fun x2503 () Int)
(declare-fun x3152 () Int)
(declare-fun x800 () x1229)
(declare-fun x1901 () Bool)
(declare-fun x457 () Int)
(declare-fun x1052 () Int)
(declare-fun x757 () Bool)
(declare-fun x2050 (Int) Int)
(declare-fun x2117 () Bool)
(declare-fun x16 () Bool)
(declare-fun x1039 () Int)
(declare-fun x3431 () Int)
(declare-fun x1379 () Int)
(declare-fun x1047 () Bool)
(declare-fun x3498 () Int)
(declare-fun x3147 () Bool)
(declare-fun x69 () Int)
(declare-fun x738 () Int)
(declare-fun x1854 () Bool)
(declare-fun x1470 () Int)
(declare-fun x2009 () Bool)
(declare-fun x1319 () Int)
(declare-fun x179 () Bool)
(declare-fun x2109 () Int)
(declare-fun x1069 () Bool)
(declare-fun x1977 () Int)
(declare-fun x3 () Int)
(declare-fun x1992 () Bool)
(declare-fun x1528 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x703 () Int)
(declare-fun x2963 () Int)
(declare-fun x1899 () Bool)
(declare-fun x1776 () Bool)
(declare-fun x2034 () Bool)
(declare-fun x1033 () Int)
(declare-fun x1884 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x1462 () Int)
(declare-fun x3566 () Int)
(declare-fun x2278 () Int)
(declare-fun x1055 () Int)
(declare-fun x3611 (x1229) Int)
(declare-fun x940 () Int)
(declare-fun x752 () Bool)
(declare-fun x32 () Int)
(declare-fun x250 () Int)
(declare-fun x3614 () Int)
(declare-fun x414 () Int)
(declare-fun x1096 () Bool)
(declare-fun x3474 () x1229)
(declare-fun x2920 () Int)
(declare-fun x1760 () Bool)
(declare-fun x2403 () Int)
(declare-fun x3347 () Int)
(declare-fun x982 () Int)
(declare-fun x1769 () Int)
(declare-fun x2470 () Bool)
(declare-fun x562 () Bool)
(declare-fun x3726 (Int) Int)
(declare-fun x2155 () Int)
(declare-fun x1048 () Int)
(declare-fun x3122 () Bool)
(declare-fun x336 () Int)
(declare-fun x3717 () Bool)
(declare-fun x730 () Bool)
(declare-fun x1942 () Bool)
(declare-fun x2025 () Int)
(declare-fun x947 (Int) Int)
(declare-fun x1785 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x1550 () Int)
(declare-fun x1924 (Int) Int)
(declare-fun x136 () x1229)
(declare-fun x3701 () Int)
(declare-fun x49 () Bool)
(declare-fun x3744 () Int)
(declare-fun x276 () Bool)
(declare-fun x3538 () Int)
(declare-fun x710 () Bool)
(declare-fun x3666 () Int)
(declare-fun x3580 () Int)
(declare-fun x3452 (Int) Int)
(declare-fun x1862 () Int)
(declare-fun x2424 () Bool)
(declare-fun x1666 () Int)
(declare-fun x866 () Int)
(declare-fun x1825 () Int)
(declare-fun x110 () Int)
(declare-fun x3096 () Bool)
(declare-fun x2708 () Int)
(declare-fun x2494 () Bool)
(declare-fun x2361 () Bool)
(declare-fun x3551 () Int)
(declare-fun x2965 () Int)
(declare-fun x108 () Int)
(declare-fun x1568 () Bool)
(declare-fun x3579 () Int)
(declare-fun x3574 () Bool)
(declare-fun x1749 () Int)
(declare-fun x1989 () x1229)
(declare-fun x2754 () Int)
(declare-fun x3317 () Int)
(declare-fun x398 () Int)
(declare-fun x1075 () Bool)
(declare-fun x8 () Int)
(declare-fun x973 () Int)
(declare-fun x1965 () Bool)
(declare-fun x2162 () Int)
(declare-fun x3400 () x1229)
(declare-fun x1782 (Int) Int)
(declare-fun x1996 () Int)
(declare-fun x979 () Int)
(declare-fun x30 () Int)
(declare-fun x2006 () Int)
(declare-fun x3332 () Bool)
(declare-fun x305 () Int)
(declare-fun x2570 () Int)
(declare-fun x2775 () Int)
(declare-fun x3441 () Int)
(declare-fun x547 () Bool)
(declare-fun x3624 () Bool)
(declare-fun x3231 () Int)
(declare-fun x1118 () Int)
(declare-fun x2092 () Int)
(declare-fun x3573 () Bool)
(declare-fun x229 (x1229) Int)
(declare-fun x2447 () Int)
(declare-fun x92 () Bool)
(declare-fun x394 () Int)
(declare-fun x1527 () Int)
(declare-fun x404 () Bool)
(declare-fun x878 () Bool)
(declare-fun x1314 () Int)
(declare-fun x3299 () Int)
(declare-fun x3156 () Bool)
(declare-fun x2343 () Int)
(declare-fun x2104 () Int)
(declare-fun x1436 () Int)
(declare-fun x2375 () Bool)
(declare-fun x777 () Int)
(declare-fun x1616 () x1229)
(declare-fun x3073 () Bool)
(declare-fun x1636 () Int)
(declare-fun x2816 () Int)
(declare-fun x146 () x1229)
(declare-fun x773 () Int)
(declare-fun x329 () Bool)
(declare-fun x3646 () Bool)
(declare-fun x224 () Int)
(declare-fun x464 () Int)
(declare-fun x1479 () Bool)
(declare-fun x3267 () Int)
(declare-fun x2219 () x1229)
(declare-fun x1402 (Int) Int)
(declare-fun x2242 () Int)
(declare-fun x3578 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x23 () Int)
(declare-fun x1969 () Int)
(declare-fun x790 () Bool)
(declare-fun x3625 () Int)
(declare-fun x2889 () Bool)
(declare-fun x3006 () Int)
(declare-fun x1745 () Int)
(declare-fun x1665 () Bool)
(declare-fun x3342 () Int)
(declare-fun x1278 () Int)
(declare-fun x145 () Int)
(declare-fun x3062 () Bool)
(declare-fun x1919 () Int)
(declare-fun x374 () Int)
(declare-fun x3377 () Int)
(declare-fun x3310 () Int)
(declare-fun x969 () Bool)
(declare-fun x2672 () Int)
(declare-fun x1941 () Int)
(declare-fun x2377 (Int) Int)
(declare-fun x3000 () Int)
(declare-fun x339 () Int)
(declare-fun x2460 () Int)
(declare-fun x1331 (Int Int) Int)
(declare-fun x2070 () Int)
(declare-fun x2717 () Int)
(declare-fun x736 (Int) Int)
(declare-fun x686 () Bool)
(declare-fun x2949 () Bool)
(declare-fun x874 () Int)
(declare-fun x3137 (Int) Int)
(declare-fun x1653 () Bool)
(declare-fun x1271 () Int)
(declare-fun x1719 () Int)
(declare-fun x986 () x1229)
(declare-fun x1270 () Bool)
(declare-fun x2184 () Bool)
(declare-fun x94 () Int)
(declare-fun x961 () Bool)
(declare-fun x2303 () Bool)
(declare-fun x3341 () Bool)
(declare-fun x2740 () Int)
(declare-fun x3496 () Int)
(declare-fun x2960 () x1229)
(declare-fun x3725 () Bool)
(declare-fun x2600 () Bool)
(declare-fun x886 () x1229)
(declare-fun x1783 () Bool)
(declare-fun x3370 () Int)
(declare-fun x3199 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x2796 () Bool)
(declare-fun x1503 () x1229)
(declare-fun x29 () Int)
(declare-fun x2552 () Bool)
(declare-fun x421 () Bool)
(declare-fun x2563 () Int)
(declare-fun x922 () Int)
(declare-fun x3275 () Bool)
(declare-fun x565 () Int)
(declare-fun x3414 () Bool)
(declare-fun x963 () Bool)
(declare-fun x2604 () Int)
(declare-fun x1852 () Int)
(declare-fun x1151 () Bool)
(declare-fun x85 () Int)
(declare-fun x945 () Bool)
(declare-fun x493 () Int)
(declare-fun x1754 () Int)
(declare-fun x1794 () Int)
(declare-fun x2208 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x352 () Int)
(declare-fun x3282 () Int)
(declare-fun x2131 () Int)
(declare-fun x934 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x784 () Int)
(declare-fun x185 (Int) Int)
(declare-fun x300 () Int)
(declare-fun x296 () Bool)
(declare-fun x1985 () Int)
(declare-fun x2362 () Int)
(declare-fun x3159 () Int)
(declare-fun x3425 () Bool)
(declare-fun x3078 () Int)
(declare-fun x1209 () x1229)
(declare-fun x2945 () Int)
(declare-fun x501 () Bool)
(declare-fun x1335 () x1229)
(declare-fun x2489 (Int) Int)
(declare-fun x317 () Bool)
(declare-fun x2633 () Bool)
(declare-fun x3103 () Bool)
(declare-fun x2358 () Int)
(declare-fun x167 () Bool)
(declare-fun x291 () Int)
(declare-fun x1509 () Bool)
(declare-fun x3303 () Bool)
(declare-fun x248 () Bool)
(declare-fun x2930 () Bool)
(declare-fun x734 () Bool)
(declare-fun x3530 () Int)
(declare-fun x2428 () Int)
(declare-fun x3089 () Int)
(declare-fun x2925 () Bool)
(declare-fun x2411 () Int)
(declare-fun x2543 () Bool)
(declare-fun x73 () Int)
(declare-fun x293 () Int)
(declare-fun x1306 () Int)
(declare-fun x2789 () Int)
(declare-fun x2280 () Bool)
(declare-fun x3713 () Bool)
(declare-fun x1699 (Int) Int)
(declare-fun x1430 () Int)
(declare-fun x967 (Int) Int)
(declare-fun x864 () x1229)
(declare-fun x3656 () Int)
(declare-fun x508 () Int)
(declare-fun x1709 () Int)
(declare-fun x234 (Int) Int)
(declare-fun x523 () Int)
(declare-fun x3553 () Bool)
(declare-fun x2990 () Int)
(declare-fun x3609 (Int) Int)
(declare-fun x1381 () Int)
(declare-fun x180 () Bool)
(declare-fun x2551 () Int)
(declare-fun x1730 () Bool)
(declare-fun x380 () Int)
(declare-fun x2501 () Bool)
(declare-fun x320 () Bool)
(declare-fun x3715 () Bool)
(declare-fun x3709 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x3284 () Int)
(declare-fun x1423 () Bool)
(declare-fun x750 () Bool)
(declare-fun x2627 (Int) Int)
(declare-fun x1922 () x1229)
(declare-fun x2714 () Bool)
(declare-fun x2770 () Int)
(declare-fun x1054 () Bool)
(declare-fun x2463 () Bool)
(declare-fun x2782 () Bool)
(declare-fun x483 () Int)
(declare-fun x2157 () Bool)
(declare-fun x594 () Int)
(declare-fun x3479 () Bool)
(declare-fun x2783 () Bool)
(declare-fun x889 () Int)
(declare-fun x1371 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x804 () Int)
(declare-fun x1641 (Int) Int)
(declare-fun x2596 () Int)
(declare-fun x494 () Bool)
(declare-fun x204 () Int)
(declare-fun x3371 () Bool)
(declare-fun x1851 () Int)
(declare-fun x1514 () Int)
(declare-fun x1489 (Int) Int)
(declare-fun x2295 () Int)
(declare-fun x447 () Bool)
(declare-fun x689 () x1229)
(declare-fun x1612 () Bool)
(declare-fun x559 () Bool)
(declare-fun x3444 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x1896 () Int)
(declare-fun x1551 () Bool)
(declare-fun x3245 () Bool)
(declare-fun x1606 (Int) Int)
(declare-fun x3607 () x1229)
(declare-fun x389 () Int)
(declare-fun x766 () Int)
(declare-fun x1369 () Bool)
(declare-fun x2450 () Int)
(declare-fun x2619 () Bool)
(declare-fun x3404 (Int) Int)
(declare-fun x1341 () Int)
(declare-fun x3739 () Int)
(declare-fun x1543 () Bool)
(declare-fun x3263 () Int)
(declare-fun x3069 () Int)
(declare-fun x515 () Bool)
(declare-fun x3130 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x3430 () Int)
(declare-fun x2345 () Int)
(declare-fun x2569 () x1229)
(declare-fun x2609 () Bool)
(declare-fun x2641 () Int)
(declare-fun x424 () Int)
(declare-fun x2531 () Bool)
(declare-fun x1465 () Bool)
(declare-fun x3344 () Int)
(declare-fun x3127 () Int)
(declare-fun x2723 () Bool)
(declare-fun x2803 () Int)
(declare-fun x2071 () Int)
(declare-fun x3323 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x1438 () Int)
(declare-fun x1836 () x1229)
(declare-fun x434 () Bool)
(declare-fun x1588 () Int)
(declare-fun x2729 () Bool)
(declare-fun x3359 () Int)
(declare-fun x1718 () Bool)
(declare-fun x278 () x1229)
(declare-fun x1339 (Int) Int)
(declare-fun x3128 () Bool)
(declare-fun x806 () Int)
(declare-fun x3291 () Int)
(declare-fun x2987 () Int)
(declare-fun x2235 () Bool)
(declare-fun x2486 () Int)
(declare-fun x261 () Bool)
(declare-fun x2400 () Bool)
(declare-fun x354 () Bool)
(declare-fun x649 () Int)
(declare-fun x3487 () Int)
(declare-fun x1009 () Bool)
(declare-fun x3621 () Int)
(declare-fun x2877 () Bool)
(declare-fun x2074 () Int)
(declare-fun x1120 () Int)
(declare-fun x2281 () Bool)
(declare-fun x3660 () Bool)
(declare-fun x1415 () Int)
(declare-fun x1146 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x976 (Int) Int)
(declare-fun x377 () Int)
(declare-fun x1066 () Bool)
(declare-fun x758 () Bool)
(declare-fun x2214 () Int)
(declare-fun x2302 () Int)
(declare-fun x3040 () x1229)
(declare-fun x2671 (x1229) Int)
(declare-fun x516 (Int) Int)
(declare-fun x326 () Int)
(declare-fun x2653 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x3043 () Int)
(declare-fun x3155 () Int)
(declare-fun x1105 () Int)
(declare-fun x1733 () Int)
(declare-fun x48 () Bool)
(declare-fun x601 () Int)
(declare-fun x653 (x1229) Int)
(declare-fun x489 () Int)
(declare-fun x1714 () x1229)
(declare-fun x1746 () Bool)
(declare-fun x2171 () Bool)
(declare-fun x290 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x1684 () Int)
(declare-fun x606 () Int)
(declare-fun x1380 () Int)
(declare-fun x61 () Bool)
(declare-fun x3513 () x1229)
(declare-fun x1166 () Int)
(declare-fun x149 () Int)
(declare-fun x2270 () Int)
(declare-fun x2382 () Int)
(declare-fun x2705 () x1229)
(declare-fun x243 () Bool)
(declare-fun x2769 () Int)
(declare-fun x2844 () Bool)
(declare-fun x595 () Bool)
(declare-fun x1143 () Int)
(declare-fun x1001 () Int)
(declare-fun x3163 () Int)
(declare-fun x2764 (Int) Int)
(declare-fun x1367 () Int)
(declare-fun x537 () Int)
(declare-fun x3448 () Bool)
(declare-fun x366 () Int)
(declare-fun x1012 () x1229)
(declare-fun x42 () Bool)
(declare-fun x813 () Bool)
(declare-fun x2832 () Int)
(declare-fun x2042 () Int)
(declare-fun x1114 () Bool)
(declare-fun x220 () Int)
(declare-fun x2715 () Int)
(declare-fun x2493 () Bool)
(declare-fun x755 () Int)
(declare-fun x357 () Int)
(declare-fun x613 () Bool)
(declare-fun x2795 () Int)
(declare-fun x885 () Int)
(declare-fun x1662 () Int)
(declare-fun x3182 () Bool)
(declare-fun x3668 () Int)
(declare-fun x1574 () Int)
(declare-fun x1113 () Int)
(declare-fun x3240 (Int) Int)
(declare-fun x1169 () Int)
(declare-fun x3087 () Bool)
(declare-fun x3732 () Int)
(declare-fun x3406 (Int) Int)
(declare-fun x289 () Bool)
(declare-fun x555 () Int)
(declare-fun x3121 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x1923 () Int)
(declare-fun x1595 () Bool)
(declare-fun x70 () Bool)
(declare-fun x2962 () x1229)
(declare-fun x3374 () Int)
(declare-fun x2007 () Int)
(declare-fun x2405 () Bool)
(declare-fun x3194 () Int)
(declare-fun x2725 () Bool)
(declare-fun x2566 () x1229)
(declare-fun x1650 () Int)
(declare-fun x2994 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x2256 () Int)
(declare-fun x2601 () Bool)
(declare-fun x2894 () Bool)
(declare-fun x2824 () Bool)
(declare-fun x1690 () Int)
(declare-fun x1993 () Bool)
(declare-fun x1454 () Int)
(declare-fun x768 () Int)
(declare-fun x1263 () Bool)
(declare-fun x2182 () Bool)
(declare-fun x2249 (Int) Int)
(declare-fun x2716 () Int)
(declare-fun x87 () Bool)
(declare-fun x2553 () Bool)
(declare-fun x1190 () Int)
(declare-fun x966 () Bool)
(declare-fun x769 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x360 () Int)
(declare-fun x1926 () Bool)
(declare-fun x2146 () Bool)
(declare-fun x1902 () Int)
(declare-fun x1872 () Bool)
(declare-fun x3470 () Bool)
(declare-fun x3211 () Int)
(declare-fun x80 () Bool)
(declare-fun x2944 () Int)
(declare-fun x1978 () Bool)
(declare-fun x3590 () Bool)
(declare-fun x1188 () Bool)
(define-fun x1844 ((x1229 x1229) (x2453 Int)) x1229 (ite ((_ is x3186) x1229) (x3186 (x1929 x1229) (+ (x2124 x1229) x2453)) (ite ((_ is x868) x1229) (x868 (x1786 x1229) (x1779 x1229) (+ (x2908 x1229) x2453)) (x2873 (+ (x3325 x1229) x2453)))))
(define-fun x2455 ((x485 Int)) Int (ite (and (< x485 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x485 0)) x485 (- x485 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x737 ((x485 Int)) Int (ite (and (>= x485 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x485)) (+ x485 115792089237316195423570985008687907853269984665640564039457584007913129639936) x485))
(define-fun x1480 ((x1498 Int)) Bool (and (>= x1498 0) (< x1498 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3728 ((x1244 Int)) Int (x2636 x1244))
(define-fun x1645 ((x1244 Int)) Int (ite (and (<= 28 x1244) (< x1244 (+ 4 28))) (x2636 (+ (- x1244 28) 0)) (x1691 x1244)))
(define-fun x2911 ((x1244 Int)) Int (ite (= x1244 160) x1850 (x1645 x1244)))
(define-fun x3394 ((x1244 Int)) Int (ite (= 800 x1244) 1854955031 (x1770 x1244)))
(define-fun x2105 ((x1244 Int)) Int (ite (and (>= x1244 800) (> (+ 800 32) x1244)) (x2216 (+ (- x1244 800) 0)) (x3404 x1244)))
(define-fun x3181 ((x1244 Int)) Int (ite (= x1244 800) x1850 (x3013 x1244)))
(define-fun x1710 ((x1244 Int)) Int (ite (= x1244 832) 60465744 (x3181 x1244)))
(define-fun x1609 ((x1244 Int)) Int (ite (and (> (+ 0 0) x1244) (<= 0 x1244)) (x3406 (+ (- x1244 0) 0)) (x185 x1244)))
(define-fun x2055 ((x1244 Int)) Int (ite (= x1244 864) x1850 (x3013 x1244)))
(define-fun x538 ((x1244 Int)) Int (ite (= 160 x1244) x2990 (x3177 x1244)))
(define-fun x708 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x538 x1244)))
(define-fun x3620 ((x1244 Int)) Int (ite (= x1244 928) x2859 (x708 x1244)))
(define-fun x3215 ((x1244 Int)) Int (ite (= x1244 160) x3480 (x3177 x1244)))
(define-fun x3493 ((x1244 Int)) Int (ite (= x1244 128) 16 (x3215 x1244)))
(define-fun x2458 ((x1244 Int)) Int (ite (= 224 x1244) 1889567281 (x3493 x1244)))
(define-fun x880 ((x1244 Int)) Int (ite (and (<= 224 x1244) (> (+ 224 32) x1244)) (x2368 (+ (- x1244 224) 0)) (x330 x1244)))
(define-fun x3635 ((x1244 Int)) Int (ite (and (not x984) x1927 x1835 x17 x3448) (x880 x1244) (x330 x1244)))
(define-fun x1011 ((x1244 Int)) Int (ite (= 352 x1244) x1996 (x3635 x1244)))
(define-fun x1974 ((x1244 Int)) Int (ite (= 320 x1244) x916 (x1011 x1244)))
(define-fun x3164 ((x1244 Int)) Int (ite (= x1244 160) x922 (x1974 x1244)))
(define-fun x2744 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x3164 x1244)))
(define-fun x2262 ((x1244 Int)) Int (ite (= x1244 928) x2667 (x1553 x1244)))
(define-fun x3483 ((x1244 Int)) Int (ite (= x1244 928) x3671 (x1553 x1244)))
(define-fun x676 ((x1244 Int)) Int (ite (= 928 x1244) 0 (x1553 x1244)))
(define-fun x3249 ((x1244 Int)) Int (ite (and x1835 x859 (not x984) x17 x3448) (x2262 x1244) (ite (and (not x859) x17 x1835 (not x3096) (not x984) x3448) (x676 x1244) (ite (and (not x984) (not x859) x17 x1835 x3448 x3096) (x3483 x1244) (x3620 x1244)))))
(define-fun x3664 ((x1244 Int)) Int (ite (= x1244 896) x2006 (x3249 x1244)))
(define-fun x1840 ((x1244 Int)) Int (ite (= x1244 160) x1850 (x3664 x1244)))
(define-fun x826 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1840 x1244)))
(define-fun x496 ((x1244 Int)) Int (ite (= x1244 928) x570 (x826 x1244)))
(define-fun x3384 ((x1244 Int)) Int (ite (= x1244 960) 113225476 (x496 x1244)))
(define-fun x1771 ((x1244 Int)) Int (ite (= 992 x1244) x391 (x3384 x1244)))
(define-fun x2111 ((x1244 Int)) Int (ite (and (>= x1244 1024) (< x1244 (+ 96 1024))) (x2636 (+ 4 (- x1244 1024))) (x1771 x1244)))
(define-fun x1881 ((x1244 Int)) Int (ite (= 1120 x1244) x2427 (x2111 x1244)))
(define-fun x1355 ((x1244 Int)) Int (ite (and (<= 960 x1244) (< x1244 (+ 960 32))) (x2967 (+ 0 (- x1244 960))) (x1302 x1244)))
(define-fun x270 ((x1244 Int)) Int (ite (and x2205 x3448 (not x984) x1835) (x1355 x1244) (x1302 x1244)))
(define-fun x2776 ((x1244 Int)) Int (ite (and x984 x1835) (x1770 x1244) (ite (and (not x984) x1835 x3448) (x270 x1244) (ite (and x1835 (not x984) (not x3448) x1976) (x1609 x1244) (x185 x1244)))))
(define-fun x2461 ((x1244 x1229)) Int (ite (and x1835 x984) (x1091 x1244) (ite (and (not x984) x1835 x3448) (x1091 x1244) (ite (and (not x984) (not x3448) x1835 x1976) (x3125 x1244) (x1091 x1244)))))
(define-fun x2145 ((x1244 Int)) Int (ite (= 800 x1244) 1889567281 (x2776 x1244)))
(define-fun x3092 ((x1244 Int)) Int (ite (and (< x1244 (+ 32 800)) (>= x1244 800)) (x1516 (+ 0 (- x1244 800))) (x936 x1244)))
(define-fun x361 ((x1244 Int)) Int (ite (= x1244 224) x1850 (x1782 x1244)))
(define-fun x1133 ((x1244 Int)) Int (ite (= 256 x1244) x326 (x361 x1244)))
(define-fun x1443 ((x1244 Int)) Int (ite (= 160 x1244) x3377 (x1133 x1244)))
(define-fun x100 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1443 x1244)))
(define-fun x2015 ((x1244 Int)) Int (ite (= 160 x1244) x3097 (x2195 x1244)))
(define-fun x3428 ((x1244 Int)) Int (ite (= x1244 128) 16 (x2015 x1244)))
(define-fun x1286 ((x1244 Int)) Int (ite (= x1244 160) x220 (x2973 x1244)))
(define-fun x2491 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1286 x1244)))
(define-fun x2473 ((x1244 x1229)) Int (ite (= x3478 x1244) x979 (x1154 x1244)))
(define-fun x998 ((x1244 x1229)) Int (ite (= (x2873 39) x1244) x3450 (x2473 x1244)))
(define-fun x324 ((x1244 x1229)) Int (ite (and x2078 x1835 x3564 (not x3023)) (x1154 x1244) (ite (and x3023 x1835 x3564) (x1154 x1244) (x998 x1244))))
(define-fun x190 ((x1244 Int)) Int (ite (and (not x3023) x3564 x2078 x1835) (x2973 x1244) (ite (and x3564 x1835 x3023) (x2195 x1244) (x2491 x1244))))
(define-fun x1687 ((x1244 Int)) Int (ite (= 160 x1244) x3712 (x190 x1244)))
(define-fun x1044 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1687 x1244)))
(define-fun x2955 ((x1244 x1229)) Int (ite (= x2749 x1244) x1743 (x324 x1244)))
(define-fun x1651 ((x1244 Int)) Int (ite (= x1244 160) x2442 (x1044 x1244)))
(define-fun x1488 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1651 x1244)))
(define-fun x844 ((x1244 x1229)) Int (ite (= x1244 x2960) x1807 (x2955 x1244)))
(define-fun x2777 ((x1244 x1229)) Int (ite (= (x2873 40) x1244) x436 (x844 x1244)))
(define-fun x186 ((x1244 Int)) Int (ite (and (not x3564) x1835) (x1782 x1244) (x1488 x1244)))
(define-fun x1173 ((x1244 Int)) Int (ite (= x1244 512) x1850 (x186 x1244)))
(define-fun x1185 ((x1244 Int)) Int (ite (= x1244 544) x1379 (x1173 x1244)))
(define-fun x437 ((x1244 Int)) Int (ite (= x1244 160) x2822 (x1185 x1244)))
(define-fun x2115 ((x1244 Int)) Int (ite (= 832 x1244) 0 (x2856 x1244)))
(define-fun x2942 ((x1244 Int)) Int (ite (= 160 x1244) x2716 (x2856 x1244)))
(define-fun x321 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x2942 x1244)))
(define-fun x1600 ((x1244 Int)) Int (ite (= 160 x1244) x3652 (x1596 x1244)))
(define-fun x462 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1600 x1244)))
(define-fun x435 ((x1244 Int)) Int (ite (and (< x1244 (+ 640 32)) (>= x1244 640)) (x2576 (+ (- x1244 640) 0)) (x3261 x1244)))
(define-fun x811 ((x1244 Int)) Int (ite (and x841 x3581 x449) (x435 x1244) (x3261 x1244)))
(define-fun x3001 ((x1244 Int)) Int (ite (= 608 x1244) x3357 (x811 x1244)))
(define-fun x2634 ((x1244 Int)) Int (ite (= 160 x1244) x3419 (x3001 x1244)))
(define-fun x1765 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x2634 x1244)))
(define-fun x1675 ((x1244 Int)) Int (ite (= x1244 640) x1126 (x1765 x1244)))
(define-fun x1955 ((x1244 Int)) Int (ite (= 672 x1244) x1438 (x1675 x1244)))
(define-fun x3716 ((x1244 Int)) Int (ite (= 704 x1244) x3616 (x3059 x1244)))
(define-fun x1913 ((x1244 Int)) Int (ite (= x1244 352) 274184521717934524641157099916833587200 (x1140 x1244)))
(define-fun x2561 ((x1244 Int)) Int (ite (= x1244 384) x1461 (x1913 x1244)))
(define-fun x977 ((x1244 Int)) Int (ite (= x1244 416) 0 (x2561 x1244)))
(define-fun x458 ((x1244 Int)) Int (ite (= x1244 416) x3481 (x1387 x1244)))
(define-fun x1747 ((x1244 Int)) Int (ite (= 224 x1244) 1889567281 (x1387 x1244)))
(define-fun x3368 ((x1244 Int)) Int (ite (and (<= 224 x1244) (< x1244 (+ 32 224))) (x729 (+ (- x1244 224) 0)) (x1833 x1244)))
(define-fun x2062 ((x1244 Int)) Int (ite (and x1231 x1114 x335 x1324) (x3368 x1244) (x1833 x1244)))
(define-fun x2726 ((x1244 Int)) Int (ite (= x1244 288) x2295 (x2062 x1244)))
(define-fun x1880 ((x1244 Int)) Int (ite (= x1244 256) x2153 (x713 x1244)))
(define-fun x264 ((x1244 Int)) Int (ite (= x1244 320) x2051 (x1880 x1244)))
(define-fun x408 ((x1244 Int)) Int (ite (= x1244 320) 0 (x713 x1244)))
(define-fun x2762 ((x1244 Int)) Int (ite (and x2902 x335 x1231 x1324) (x264 x1244) (x408 x1244)))
(define-fun x1477 ((x1244 Int)) Int (ite (= 480 x1244) x3484 (x2762 x1244)))
(define-fun x2711 ((x1244 Int)) Int (ite (= 416 x1244) x310 (x1477 x1244)))
(define-fun x1695 ((x1244 Int)) Int (ite (and x335 (not x1324) x1231) (x458 x1244) (x2711 x1244)))
(define-fun x2807 ((x1244 Int)) Int (ite (= 160 x1244) x2608 (x1695 x1244)))
(define-fun x3723 ((x1244 Int)) Int (ite (= x1244 128) 7 (x2807 x1244)))
(define-fun x2046 ((x1244 Int)) Int (ite (= 480 x1244) x843 (x3723 x1244)))
(define-fun x1227 ((x1244 Int)) Int (ite (= x1244 768) x3636 (x2046 x1244)))
(define-fun x614 ((x1244 Int)) Int (ite (= 768 x1244) x637 (x3689 x1244)))
(define-fun x1130 ((x1244 Int)) Int (ite (= x1244 224) 274184521717934524641157099916833587200 (x614 x1244)))
(define-fun x1353 ((x1244 Int)) Int (ite (= x1244 256) x1709 (x1130 x1244)))
(define-fun x1591 ((x1244 Int)) Int (ite (= 288 x1244) x313 (x1353 x1244)))
(define-fun x2149 ((x1244 Int)) Int (ite (= x1244 352) 274184521717934524641157099916833587200 (x1591 x1244)))
(define-fun x1734 ((x1244 Int)) Int (ite (= x1244 384) 0 (x2149 x1244)))
(define-fun x2222 ((x1244 Int)) Int (ite (= 320 x1244) 0 (x1734 x1244)))
(define-fun x2562 ((x1244 Int)) Int (ite (and x2454 x767) (x516 x1244) (x461 x1244)))
(define-fun x201 ((x1244 Int)) Int (ite (= 320 x1244) 1 (x2562 x1244)))
(define-fun x1079 ((x1244 Int)) Int (ite (and x832 x3729) (x461 x1244) (x201 x1244)))
(define-fun x1398 ((x1244 Int)) Int (ite (= 160 x1244) x3176 (x1079 x1244)))
(define-fun x1822 ((x1244 Int)) Int (ite (= 128 x1244) 7 (x1398 x1244)))
(define-fun x2802 ((x1244 Int)) Int (ite (= 160 x1244) x1332 (x1822 x1244)))
(define-fun x3339 ((x1244 Int)) Int (ite (= 128 x1244) 7 (x2802 x1244)))
(define-fun x3074 ((x1244 Int)) Int (ite (= x1244 320) x2123 (x3339 x1244)))
(define-fun x1420 ((x1244 Int)) Int (ite (and (not x1934) x3300) (x3689 x1244) (x3074 x1244)))
(define-fun x780 ((x1244 Int)) Int (ite (= x1244 160) 274184521717934524641157099916833587200 (x1420 x1244)))
(define-fun x1905 ((x1244 Int)) Int (ite (= 224 x1244) 274184521717934524641157099916833587200 (x3488 x1244)))
(define-fun x981 ((x1244 Int)) Int (ite (= 256 x1244) x3605 (x1905 x1244)))
(define-fun x2568 ((x1244 Int)) Int (ite (= 160 x1244) 274184521717934524641157099916833587200 (x981 x1244)))
(define-fun x2625 ((x1244 Int)) Int (ite (= 128 x1244) 7 (x2568 x1244)))
(define-fun x2272 ((x1244 Int)) Int (ite (= x1244 288) x1532 (x2625 x1244)))
(define-fun x1030 ((x1244 Int)) Int (ite (= 352 x1244) 274184521717934524641157099916833587200 (x2272 x1244)))
(define-fun x1610 ((x1244 Int)) Int (ite (= 384 x1244) 0 (x1030 x1244)))
(define-fun x3401 ((x1244 Int)) Int (ite (= x1244 320) 0 (x1610 x1244)))
(define-fun x2679 ((x1244 Int)) Int (ite (and x419 x3660) (x1243 x1244) (x2489 x1244)))
(define-fun x1199 ((x1244 Int)) Int (ite (= x1244 320) 1 (x2679 x1244)))
(define-fun x3009 ((x1244 Int)) Int (ite (and x531 x1737) (x2489 x1244) (x1199 x1244)))
(define-fun x1817 ((x1244 Int)) Int (ite (= x1244 160) x1127 (x3009 x1244)))
(define-fun x2058 ((x1244 Int)) Int (ite (= x1244 128) 7 (x1817 x1244)))
(define-fun x1792 ((x1244 x1229)) Int (ite (= x1244 (x2873 9)) x1814 (x1089 x1244)))
(define-fun x3250 ((x1244 x1229)) Int (ite (= x1244 x2479) x1177 (x912 x1244)))
(define-fun x3198 ((x1244 x1229)) Int (ite (= x1244 x604) x3043 (x3250 x1244)))
(define-fun x669 ((x1244 x1229)) Int (ite (= x1244 x819) x2557 (x824 x1244)))
(define-fun x3539 ((x1244 Int)) Int (ite (= 160 x1244) x3449 (x2058 x1244)))
(define-fun x124 ((x1244 Int)) Int (ite (= 128 x1244) 7 (x3539 x1244)))
(define-fun x1287 ((x1244 x1229)) Int (ite (= x2705 x1244) x983 (x669 x1244)))
(define-fun x440 ((x1244 Int)) Int (ite (= 320 x1244) x2564 (x124 x1244)))
(define-fun x3680 ((x1244 Int)) Int (ite (= 832 x1244) 0 (x1596 x1244)))
(define-fun x920 ((x1244 Int)) Int (ite (and (not x2073) x1149) (x3488 x1244) (ite (and (not x1231) x335) (x1140 x1244) (x440 x1244))))
(define-fun x3597 ((x1244 Int)) Int (ite (= x1244 832) x1038 (x920 x1244)))
(define-fun x3555 ((x1244 Int)) Int (ite x1509 (x3597 x1244) (ite (and (not x841) x3581) (x3680 x1244) (x2115 x1244))))
(define-fun x639 ((x1244 x1229)) Int (ite x1509 (ite (and x1149 (not x2073)) (x824 x1244) (ite (and (not x1231) x335) (x1089 x1244) (x1287 x1244))) (x1089 x1244)))
(define-fun x1338 ((x1244 Int)) Int (ite (= x1244 800) x1967 (x3555 x1244)))
(define-fun x636 ((x1244 Int)) Int (ite (= x1244 160) x1850 (x1338 x1244)))
(define-fun x1036 ((x1244 Int)) Int (ite (= x1244 128) 16 (x636 x1244)))
(define-fun x1717 ((x1244 Int)) Int (ite (= x1244 864) 0 (x870 x1244)))
(define-fun x2737 ((x1244 Int)) Int (ite (= 224 x1244) 1889567281 (x870 x1244)))
(define-fun x91 ((x1244 Int)) Int (ite (and (<= 224 x1244) (< x1244 (+ 32 224))) (x1735 (+ 0 (- x1244 224))) (x976 x1244)))
(define-fun x2662 ((x1244 Int)) Int (ite (and x104 x1823 x3717) (x91 x1244) (x976 x1244)))
(define-fun x3582 ((x1244 Int)) Int (ite (= x1244 352) x3024 (x2662 x1244)))
(define-fun x2212 ((x1244 Int)) Int (ite (= x1244 320) x3523 (x3582 x1244)))
(define-fun x1084 ((x1244 Int)) Int (ite (= 352 x1244) x2645 (x2212 x1244)))
(define-fun x895 ((x1244 Int)) Int (ite (= 384 x1244) x414 (x1084 x1244)))
(define-fun x3019 ((x1244 Int)) Int (ite (= 160 x1244) x1829 (x895 x1244)))
(define-fun x1016 ((x1244 Int)) Int (ite (= x1244 128) 16 (x3019 x1244)))
(define-fun x2240 ((x1244 Int)) Int (ite (= x1244 416) x2527 (x1016 x1244)))
(define-fun x2713 ((x1244 Int)) Int (ite (= 160 x1244) x1554 (x2240 x1244)))
(define-fun x2057 ((x1244 Int)) Int (ite (= x1244 128) 16 (x2713 x1244)))
(define-fun x1979 ((x1244 Int)) Int (ite (= 448 x1244) x2658 (x2057 x1244)))
(define-fun x1667 ((x1244 Int)) Int (ite (= x1244 160) x1456 (x1979 x1244)))
(define-fun x215 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1667 x1244)))
(define-fun x3333 ((x1244 Int)) Int (ite (= 480 x1244) x2408 (x215 x1244)))
(define-fun x2478 ((x1244 Int)) Int (ite (= 160 x1244) x2027 (x3333 x1244)))
(define-fun x188 ((x1244 Int)) Int (ite (= x1244 128) 16 (x2478 x1244)))
(define-fun x2187 ((x1244 Int)) Int (ite (= x1244 864) 0 (x1220 x1244)))
(define-fun x2810 ((x1244 Int)) Int (ite (= 544 x1244) x3376 (x1220 x1244)))
(define-fun x1748 ((x1244 Int)) Int (ite (= x1244 544) x3447 (x2810 x1244)))
(define-fun x1213 ((x1244 Int)) Int (ite (= x1244 576) 1889567281 (x1748 x1244)))
(define-fun x3338 ((x1244 Int)) Int (ite (and (> (+ 576 32) x1244) (>= x1244 576)) (x650 (+ 0 (- x1244 576))) (x967 x1244)))
(define-fun x672 ((x1244 Int)) Int (ite (and x1103 x3717 x1823 x2605) (x3338 x1244) (x967 x1244)))
(define-fun x2273 ((x1244 Int)) Int (ite (= x1244 864) x1943 (x1789 x1244)))
(define-fun x3183 ((x1244 Int)) Int (ite (= 864 x1244) 0 (x1789 x1244)))
(define-fun x1390 ((x1244 Int)) Int (ite (and x1823 x1103 x735 x3717) (x3183 x1244) (ite (and x1823 x3717 x1103 (not x735)) (x2273 x1244) (ite (and x1823 (not x1103) x3717) (x2187 x1244) (x1717 x1244)))))
(define-fun x1686 ((x1244 Int)) Int (ite (= 832 x1244) x1472 (x1390 x1244)))
(define-fun x1545 ((x1244 Int)) Int (ite (= x1244 160) x727 (x26 x1244)))
(define-fun x2159 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1545 x1244)))
(define-fun x581 ((x1244 Int)) Int (ite (= x1244 896) x2176 (x2159 x1244)))
(define-fun x3189 ((x1244 Int)) Int (ite (= 160 x1244) x2943 (x26 x1244)))
(define-fun x3363 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x3189 x1244)))
(define-fun x2812 ((x1244 Int)) Int (ite (= x1244 224) 1889567281 (x3363 x1244)))
(define-fun x2194 ((x1244 Int)) Int (ite (and (<= 224 x1244) (< x1244 (+ 32 224))) (x486 (+ (- x1244 224) 0)) (x3505 x1244)))
(define-fun x2696 ((x1244 Int)) Int (ite (and x1288 x3717 x3590) (x2194 x1244) (x3505 x1244)))
(define-fun x3411 ((x1244 Int)) Int (ite (= 352 x1244) x2165 (x2696 x1244)))
(define-fun x1947 ((x1244 Int)) Int (ite (= 320 x1244) x3263 (x3411 x1244)))
(define-fun x2578 ((x1244 Int)) Int (ite (= 160 x1244) x3093 (x1947 x1244)))
(define-fun x938 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x2578 x1244)))
(define-fun x1303 ((x1244 Int)) Int (ite (= 896 x1244) x244 (x2050 x1244)))
(define-fun x2935 ((x1244 Int)) Int (ite (= 896 x1244) x3225 (x2050 x1244)))
(define-fun x616 ((x1244 Int)) Int (ite (= x1244 896) 0 (x2050 x1244)))
(define-fun x2597 ((x1244 Int)) Int (ite (and x3590 x1548 x3717) (x1303 x1244) (ite (and x3590 (not x1548) x3717 (not x432)) (x616 x1244) (ite (and x3590 x3717 (not x1548) x432) (x2935 x1244) (x581 x1244)))))
(define-fun x448 ((x1244 Int)) Int (ite (= 864 x1244) x876 (x2597 x1244)))
(define-fun x1401 ((x1244 Int)) Int (ite (= 160 x1244) x1850 (x1696 x1244)))
(define-fun x2056 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1401 x1244)))
(define-fun x3550 ((x1244 x1229)) Int (ite (= x1244 x340) x1623 (x229 x1244)))
(define-fun x3257 ((x1244 x1229)) Int (ite (= x1244 (x2873 40)) x2885 (x3550 x1244)))
(define-fun x196 ((x1244 Int)) Int (ite (= 864 x1244) x480 (x2056 x1244)))
(define-fun x2471 ((x1244 Int)) Int (ite (= x1244 160) x1850 (x1644 x1244)))
(define-fun x226 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x2471 x1244)))
(define-fun x2842 ((x1244 x1229)) Int (ite (= x1244 x2763) x1118 (x2445 x1244)))
(define-fun x271 ((x1244 x1229)) Int (ite (= (x2873 40) x1244) x3021 (x2842 x1244)))
(define-fun x1195 ((x1244 Int)) Int (ite (and x3717 (not x2676)) (x1644 x1244) (x226 x1244)))
(define-fun x3593 ((x1244 Int)) Int (ite (= x1244 224) x970 (x1895 x1244)))
(define-fun x1569 ((x1244 Int)) Int (ite (= x1244 256) x1850 (x3593 x1244)))
(define-fun x3035 ((x1244 Int)) Int (ite (= x1244 288) x3070 (x1569 x1244)))
(define-fun x1170 ((x1244 Int)) Int (ite (= 384 x1244) 4 (x3035 x1244)))
(define-fun x3228 ((x1244 Int)) Int (ite (and (> (+ 4 480) x1244) (<= 480 x1244)) (x618 (+ (- x1244 480) 0)) (x1378 x1244)))
(define-fun x175 ((x1244 Int)) Int (ite (and x787 x2999 x3717) (x3228 x1244) (x1378 x1244)))
(define-fun x933 ((x1244 Int)) Int (ite (= x1244 x1856) x250 (x175 x1244)))
(define-fun x1594 ((x1244 Int)) Int (ite (= x89 x1244) x1060 (x933 x1244)))
(define-fun x1882 ((x1244 Int)) Int (ite (and (< x1244 (+ 608 32)) (>= x1244 608)) (x643 (+ (- x1244 608) 0)) (x612 x1244)))
(define-fun x2296 ((x1244 Int)) Int (ite (and x2553 x3717 x2999) (x1882 x1244) (x612 x1244)))
(define-fun x2286 ((x1244 Int)) Int (ite (and (<= 320 x1244) (> (+ x3736 320) x1244)) (x834 (+ 0 (- x1244 320))) (x529 x1244)))
(define-fun x2118 ((x1244 Int)) Int (ite (and x3717 x2999 x2894) (x2286 x1244) (x529 x1244)))
(define-fun x3724 ((x1244 Int)) Int (ite (= 224 x1244) x1772 (x1895 x1244)))
(define-fun x2095 ((x1244 Int)) Int (ite (= x1244 256) x1850 (x3724 x1244)))
(define-fun x2251 ((x1244 Int)) Int (ite (= 288 x1244) 274184521717934524641157099916833587200 (x2095 x1244)))
(define-fun x1198 ((x1244 Int)) Int (ite (= x1244 320) x1136 (x2251 x1244)))
(define-fun x2700 ((x1244 Int)) Int (ite (= x1244 416) 4 (x1198 x1244)))
(define-fun x2291 ((x1244 Int)) Int (ite (and (>= x1244 512) (> (+ 512 4) x1244)) (x3107 (+ (- x1244 512) 0)) (x3452 x1244)))
(define-fun x2147 ((x1244 Int)) Int (ite (and x1704 x673 x3717 (not x2999)) (x2291 x1244) (x3452 x1244)))
(define-fun x1128 ((x1244 Int)) Int (ite (= x820 x1244) x3373 (x2147 x1244)))
(define-fun x3112 ((x1244 Int)) Int (ite (= x1244 x3462) x254 (x1128 x1244)))
(define-fun x1875 ((x1244 Int)) Int (ite (= x1244 x269) x1309 (x3112 x1244)))
(define-fun x2858 ((x1244 Int)) Int (ite (and (<= 672 x1244) (> (+ 672 32) x1244)) (x1777 (+ (- x1244 672) 0)) (x1541 x1244)))
(define-fun x675 ((x1244 Int)) Int (ite (and x3717 x673 (not x2999) x1382) (x2858 x1244) (x1541 x1244)))
(define-fun x694 ((x1244 Int)) Int (ite (and (> (+ x2532 352) x1244) (<= 352 x1244)) (x677 (+ 0 (- x1244 352))) (x2139 x1244)))
(define-fun x3031 ((x1244 Int)) Int (ite (and (not x2999) x2432 x673 x3717) (x694 x1244) (x2139 x1244)))
(define-fun x3407 ((x1244 Int)) Int (ite (and (not x2999) x3717 (not x673)) (x1895 x1244) (ite (and x673 (not x2999) x3717) (x3031 x1244) (x2118 x1244))))
(define-fun x2663 ((x1244 Int)) Int (ite (= 992 x1244) 0 (x2689 x1244)))
(define-fun x1435 ((x1244 Int)) Int (ite (= x1244 256) x69 (x2689 x1244)))
(define-fun x3637 ((x1244 Int)) Int (ite (= x1244 992) x2978 (x1435 x1244)))
(define-fun x2917 ((x1244 Int)) Int (ite (and x1887 x3717) (x3637 x1244) (x2663 x1244)))
(define-fun x1939 ((x1244 Int)) Int (ite (= 960 x1244) x488 (x2917 x1244)))
(define-fun x205 ((x1244 x1229)) Int (ite (= (x2873 43) x1244) 0 (x2018 x1244)))
(define-fun x2546 ((x1244 x1229)) Int (ite (= (x2873 43) x1244) x2070 (x2018 x1244)))
(define-fun x454 ((x1244 x1229)) Int (ite (and x2037 x3717) (x2546 x1244) (x205 x1244)))
(define-fun x302 ((x1244 Int)) Int (ite (= x1244 160) x1850 (x1939 x1244)))
(define-fun x3055 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x302 x1244)))
(define-fun x1951 ((x1244 x1229)) Int (ite (= x1244 x2560) x1869 (x454 x1244)))
(define-fun x2751 ((x1244 x1229)) Int (ite (= x1244 (x2873 41)) x1869 (x1951 x1244)))
(define-fun x15 ((x1244 Int)) Int (ite (and (<= 992 x1244) (> (+ 992 64) x1244)) (x2636 (+ (- x1244 992) 4)) (x3055 x1244)))
(define-fun x222 ((x1244 Int)) Int (ite (= 1056 x1244) x499 (x15 x1244)))
(define-fun x76 ((x1244 Int)) Int (ite (= x1244 160) x1850 (x222 x1244)))
(define-fun x3511 ((x1244 Int)) Int (ite (= x1244 128) 16 (x76 x1244)))
(define-fun x917 ((x1244 Int)) Int (ite (= x1244 1088) x2485 (x3511 x1244)))
(define-fun x2639 ((x1244 Int)) Int (ite (= 160 x1244) x1850 (x917 x1244)))
(define-fun x915 ((x1244 Int)) Int (ite (= x1244 128) 16 (x2639 x1244)))
(define-fun x158 ((x1244 Int)) Int (ite (= x1244 1120) x1784 (x915 x1244)))
(define-fun x2323 ((x1244 Int)) Int (ite (= 160 x1244) x1850 (x158 x1244)))
(define-fun x2271 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x2323 x1244)))
(define-fun x2107 ((x1244 Int)) Int (ite (= 1152 x1244) x1057 (x2271 x1244)))
(define-fun x3232 ((x1244 Int)) Int (ite (= 1184 x1244) x2452 (x2107 x1244)))
(define-fun x1870 ((x1244 Int)) Int (ite (= 160 x1244) x1850 (x3232 x1244)))
(define-fun x460 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1870 x1244)))
(define-fun x2152 ((x1244 Int)) Int (ite (= 1216 x1244) x2449 (x460 x1244)))
(define-fun x1849 ((x1244 Int)) Int (ite (= x1244 160) x1850 (x2152 x1244)))
(define-fun x715 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1849 x1244)))
(define-fun x3510 ((x1244 Int)) Int (x3312 x1244))
(define-fun x193 ((x1244 Int)) Int (ite (and (< x1244 (+ 28 4)) (<= 28 x1244)) (x3312 (+ (- x1244 28) 0)) (x3230 x1244)))
(define-fun x1712 ((x1244 Int)) Int (ite (= x1244 160) x956 (x193 x1244)))
(define-fun x1159 ((x1244 Int)) Int (ite (= 800 x1244) 1854955031 (x1924 x1244)))
(define-fun x1485 ((x1244 Int)) Int (ite (and (< x1244 (+ 32 800)) (>= x1244 800)) (x1606 (+ (- x1244 800) 0)) (x288 x1244)))
(define-fun x3655 ((x1244 Int)) Int (ite (= x1244 800) x956 (x1489 x1244)))
(define-fun x1153 ((x1244 Int)) Int (ite (= 832 x1244) 60465744 (x3655 x1244)))
(define-fun x3517 ((x1244 Int)) Int (ite (and (> (+ 0 0) x1244) (>= x1244 0)) (x2481 (+ 0 (- x1244 0))) (x1921 x1244)))
(define-fun x1990 ((x1244 Int)) Int (ite (= 864 x1244) x956 (x1489 x1244)))
(define-fun x387 ((x1244 Int)) Int (ite (= 160 x1244) x2993 (x587 x1244)))
(define-fun x1683 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x387 x1244)))
(define-fun x2082 ((x1244 Int)) Int (ite (= 928 x1244) x1570 (x1683 x1244)))
(define-fun x2805 ((x1244 Int)) Int (ite (= 160 x1244) x1512 (x587 x1244)))
(define-fun x2699 ((x1244 Int)) Int (ite (= x1244 128) 16 (x2805 x1244)))
(define-fun x2294 ((x1244 Int)) Int (ite (= 224 x1244) 1889567281 (x2699 x1244)))
(define-fun x2223 ((x1244 Int)) Int (ite (and (< x1244 (+ 32 224)) (<= 224 x1244)) (x3617 (+ (- x1244 224) 0)) (x362 x1244)))
(define-fun x431 ((x1244 Int)) Int (ite (and x248 x1639 x164 (not x1753) x3717) (x2223 x1244) (x362 x1244)))
(define-fun x1940 ((x1244 Int)) Int (ite (= 352 x1244) x94 (x431 x1244)))
(define-fun x2968 ((x1244 Int)) Int (ite (= x1244 320) x508 (x1940 x1244)))
(define-fun x2396 ((x1244 Int)) Int (ite (= 160 x1244) x1852 (x2968 x1244)))
(define-fun x505 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x2396 x1244)))
(define-fun x314 ((x1244 Int)) Int (ite (= 928 x1244) x2465 (x3213 x1244)))
(define-fun x2344 ((x1244 Int)) Int (ite (= x1244 928) x3560 (x3213 x1244)))
(define-fun x3684 ((x1244 Int)) Int (ite (= 928 x1244) 0 (x3213 x1244)))
(define-fun x402 ((x1244 Int)) Int (ite (and x1639 x3717 x367 (not x1753) x248) (x314 x1244) (ite (and (not x393) (not x367) x3717 (not x1753) x1639 x248) (x3684 x1244) (ite (and x3717 x393 (not x1753) x248 x1639 (not x367)) (x2344 x1244) (x2082 x1244)))))
(define-fun x3279 ((x1244 Int)) Int (ite (= x1244 896) x1162 (x402 x1244)))
(define-fun x572 ((x1244 Int)) Int (ite (= x1244 160) x956 (x3279 x1244)))
(define-fun x1469 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x572 x1244)))
(define-fun x2014 ((x1244 Int)) Int (ite (= x1244 928) x2903 (x1469 x1244)))
(define-fun x884 ((x1244 Int)) Int (ite (= x1244 960) 113225476 (x2014 x1244)))
(define-fun x2369 ((x1244 Int)) Int (ite (= x1244 992) x2722 (x884 x1244)))
(define-fun x2315 ((x1244 Int)) Int (ite (and (< x1244 (+ 1024 96)) (>= x1244 1024)) (x3312 (+ (- x1244 1024) 4)) (x2369 x1244)))
(define-fun x2166 ((x1244 Int)) Int (ite (= 1120 x1244) x889 (x2315 x1244)))
(define-fun x3678 ((x1244 Int)) Int (ite (and (<= 960 x1244) (> (+ 960 32) x1244)) (x3454 (+ 0 (- x1244 960))) (x3134 x1244)))
(define-fun x2621 ((x1244 Int)) Int (ite (and x248 (not x1753) x1751 x3717) (x3678 x1244) (x3134 x1244)))
(define-fun x2853 ((x1244 Int)) Int (ite (and x1753 x3717) (x1924 x1244) (ite (and x248 (not x1753) x3717) (x2621 x1244) (ite (and (not x248) (not x1753) x810 x3717) (x3517 x1244) (x1921 x1244)))))
(define-fun x1505 ((x1244 x1229)) Int (ite (and x3717 x1753) (x1091 x1244) (ite (and (not x1753) x3717 x248) (x1091 x1244) (ite (and (not x248) x3717 x810 (not x1753)) (x1966 x1244) (x1091 x1244)))))
(define-fun x1486 ((x1244 Int)) Int (ite (= x1244 800) 1889567281 (x2853 x1244)))
(define-fun x605 ((x1244 Int)) Int (ite (and (<= 800 x1244) (< x1244 (+ 32 800))) (x2089 (+ (- x1244 800) 0)) (x1958 x1244)))
(define-fun x168 ((x1244 Int)) Int (ite (= 224 x1244) x956 (x3157 x1244)))
(define-fun x1090 ((x1244 Int)) Int (ite (= 256 x1244) x2367 (x168 x1244)))
(define-fun x1426 ((x1244 Int)) Int (ite (= x1244 160) x3006 (x1090 x1244)))
(define-fun x3634 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1426 x1244)))
(define-fun x57 ((x1244 Int)) Int (ite (= 160 x1244) x2326 (x992 x1244)))
(define-fun x664 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x57 x1244)))
(define-fun x732 ((x1244 Int)) Int (ite (= x1244 160) x563 (x165 x1244)))
(define-fun x192 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x732 x1244)))
(define-fun x231 ((x1244 x1229)) Int (ite (= x1244 x292) x2299 (x1154 x1244)))
(define-fun x2926 ((x1244 x1229)) Int (ite (= x1244 (x2873 39)) x1928 (x231 x1244)))
(define-fun x939 ((x1244 Int)) Int (ite (and x2609 x3717 (not x2787) x1900) (x165 x1244) (ite (and x3717 x1900 x2787) (x992 x1244) (x192 x1244))))
(define-fun x2573 ((x1244 x1229)) Int (ite (and x3717 x2609 x1900 (not x2787)) (x1154 x1244) (ite (and x1900 x2787 x3717) (x1154 x1244) (x2926 x1244))))
(define-fun x3361 ((x1244 Int)) Int (ite (= x1244 160) x2395 (x939 x1244)))
(define-fun x2648 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x3361 x1244)))
(define-fun x1790 ((x1244 x1229)) Int (ite (= x484 x1244) x3556 (x2573 x1244)))
(define-fun x350 ((x1244 Int)) Int (ite (= 160 x1244) x2850 (x2648 x1244)))
(define-fun x2174 ((x1244 Int)) Int (ite (= x1244 128) 16 (x350 x1244)))
(define-fun x1407 ((x1244 x1229)) Int (ite (= x3210 x1244) x2443 (x1790 x1244)))
(define-fun x2416 ((x1244 x1229)) Int (ite (= x1244 (x2873 40)) x2168 (x1407 x1244)))
(define-fun x1917 ((x1244 Int)) Int (ite (and x3717 (not x1900)) (x3157 x1244) (x2174 x1244)))
(define-fun x178 ((x1244 Int)) Int (ite (= x1244 512) x956 (x1917 x1244)))
(define-fun x1855 ((x1244 Int)) Int (ite (= 544 x1244) x742 (x178 x1244)))
(define-fun x2505 ((x1244 Int)) Int (ite (= x1244 160) x3041 (x1855 x1244)))
(define-fun x1313 ((x1244 Int)) Int (ite (= x1244 832) 0 (x3301 x1244)))
(define-fun x560 ((x1244 Int)) Int (ite (= x1244 160) x2708 (x3301 x1244)))
(define-fun x2498 ((x1244 Int)) Int (ite (= x1244 128) 16 (x560 x1244)))
(define-fun x1694 ((x1244 Int)) Int (ite (= x1244 160) x1842 (x1972 x1244)))
(define-fun x208 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1694 x1244)))
(define-fun x3111 ((x1244 Int)) Int (ite (and (> (+ 32 640) x1244) (<= 640 x1244)) (x3392 (+ 0 (- x1244 640))) (x3570 x1244)))
(define-fun x2607 ((x1244 Int)) Int (ite (and x1481 x481 x2889) (x3111 x1244) (x3570 x1244)))
(define-fun x2433 ((x1244 Int)) Int (ite (= 608 x1244) x2678 (x2607 x1244)))
(define-fun x624 ((x1244 Int)) Int (ite (= x1244 160) x2775 (x2433 x1244)))
(define-fun x3418 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x624 x1244)))
(define-fun x1740 ((x1244 Int)) Int (ite (= x1244 640) x1578 (x3418 x1244)))
(define-fun x3037 ((x1244 Int)) Int (ite (= x1244 672) x2407 (x1740 x1244)))
(define-fun x1161 ((x1244 Int)) Int (ite (= 704 x1244) x1463 (x3726 x1244)))
(define-fun x1492 ((x1244 Int)) Int (ite (= 352 x1244) 274184521717934524641157099916833587200 (x3702 x1244)))
(define-fun x19 ((x1244 Int)) Int (ite (= 384 x1244) x1788 (x1492 x1244)))
(define-fun x2374 ((x1244 Int)) Int (ite (= 416 x1244) 0 (x19 x1244)))
(define-fun x671 ((x1244 Int)) Int (ite (= 416 x1244) x2103 (x214 x1244)))
(define-fun x2800 ((x1244 Int)) Int (ite (= x1244 224) 1889567281 (x214 x1244)))
(define-fun x602 ((x1244 Int)) Int (ite (and (<= 224 x1244) (> (+ 224 32) x1244)) (x1495 (+ 0 (- x1244 224))) (x3528 x1244)))
(define-fun x472 ((x1244 Int)) Int (ite (and x290 x3256 x1832 x3468) (x602 x1244) (x3528 x1244)))
(define-fun x1383 ((x1244 Int)) Int (ite (= 288 x1244) x34 (x472 x1244)))
(define-fun x2701 ((x1244 Int)) Int (ite (= x1244 256) x3413 (x1641 x1244)))
(define-fun x1576 ((x1244 Int)) Int (ite (= x1244 320) x774 (x2701 x1244)))
(define-fun x2839 ((x1244 Int)) Int (ite (= x1244 320) 0 (x1641 x1244)))
(define-fun x1464 ((x1244 Int)) Int (ite (and x290 x3468 x2640 x3256) (x1576 x1244) (x2839 x1244)))
(define-fun x2937 ((x1244 Int)) Int (ite (= 480 x1244) x2100 (x1464 x1244)))
(define-fun x3172 ((x1244 Int)) Int (ite (= 416 x1244) x3522 (x2937 x1244)))
(define-fun x150 ((x1244 Int)) Int (ite (and (not x290) x3256 x3468) (x671 x1244) (x3172 x1244)))
(define-fun x2250 ((x1244 Int)) Int (ite (= 160 x1244) x3595 (x150 x1244)))
(define-fun x3600 ((x1244 Int)) Int (ite (= 128 x1244) 7 (x2250 x1244)))
(define-fun x2590 ((x1244 Int)) Int (ite (= 480 x1244) x2429 (x3600 x1244)))
(define-fun x3443 ((x1244 Int)) Int (ite (= 768 x1244) x946 (x2590 x1244)))
(define-fun x364 ((x1244 Int)) Int (ite (= 768 x1244) x746 (x234 x1244)))
(define-fun x2646 ((x1244 Int)) Int (ite (= x1244 224) 274184521717934524641157099916833587200 (x364 x1244)))
(define-fun x3409 ((x1244 Int)) Int (ite (= 256 x1244) x2997 (x2646 x1244)))
(define-fun x1121 ((x1244 Int)) Int (ite (= 288 x1244) x1944 (x3409 x1244)))
(define-fun x84 ((x1244 Int)) Int (ite (= 352 x1244) 274184521717934524641157099916833587200 (x1121 x1244)))
(define-fun x2529 ((x1244 Int)) Int (ite (= x1244 384) 0 (x84 x1244)))
(define-fun x14 ((x1244 Int)) Int (ite (= 320 x1244) 0 (x2529 x1244)))
(define-fun x1702 ((x1244 Int)) Int (ite (and x630 x3624) (x1580 x1244) (x386 x1244)))
(define-fun x2958 ((x1244 Int)) Int (ite (= 320 x1244) 1 (x1702 x1244)))
(define-fun x1404 ((x1244 Int)) Int (ite (and x1847 x1999) (x386 x1244) (x2958 x1244)))
(define-fun x2154 ((x1244 Int)) Int (ite (= 160 x1244) x913 (x1404 x1244)))
(define-fun x1956 ((x1244 Int)) Int (ite (= x1244 128) 7 (x2154 x1244)))
(define-fun x598 ((x1244 Int)) Int (ite (= x1244 160) x3346 (x1956 x1244)))
(define-fun x1837 ((x1244 Int)) Int (ite (= 128 x1244) 7 (x598 x1244)))
(define-fun x2733 ((x1244 Int)) Int (ite (= x1244 320) x3117 (x1837 x1244)))
(define-fun x2574 ((x1244 Int)) Int (ite (and x2661 (not x1907)) (x234 x1244) (x2733 x1244)))
(define-fun x1073 ((x1244 Int)) Int (ite (= 160 x1244) 274184521717934524641157099916833587200 (x2574 x1244)))
(define-fun x905 ((x1244 Int)) Int (ite (= 224 x1244) 274184521717934524641157099916833587200 (x228 x1244)))
(define-fun x892 ((x1244 Int)) Int (ite (= x1244 256) x1111 (x905 x1244)))
(define-fun x858 ((x1244 Int)) Int (ite (= x1244 160) 274184521717934524641157099916833587200 (x892 x1244)))
(define-fun x1744 ((x1244 Int)) Int (ite (= 128 x1244) 7 (x858 x1244)))
(define-fun x1294 ((x1244 Int)) Int (ite (= 288 x1244) x1112 (x1744 x1244)))
(define-fun x482 ((x1244 Int)) Int (ite (= x1244 352) 274184521717934524641157099916833587200 (x1294 x1244)))
(define-fun x3185 ((x1244 Int)) Int (ite (= 384 x1244) 0 (x482 x1244)))
(define-fun x2765 ((x1244 Int)) Int (ite (= x1244 320) 0 (x3185 x1244)))
(define-fun x908 ((x1244 Int)) Int (ite (and x882 x236) (x522 x1244) (x2143 x1244)))
(define-fun x2446 ((x1244 Int)) Int (ite (= x1244 320) 1 (x908 x1244)))
(define-fun x2603 ((x1244 Int)) Int (ite (and x3477 x1746) (x2143 x1244) (x2446 x1244)))
(define-fun x384 ((x1244 Int)) Int (ite (= 160 x1244) x3318 (x2603 x1244)))
(define-fun x3329 ((x1244 Int)) Int (ite (= 128 x1244) 7 (x384 x1244)))
(define-fun x2381 ((x1244 x1229)) Int (ite (= x1244 (x2873 9)) x1575 (x1223 x1244)))
(define-fun x2017 ((x1244 x1229)) Int (ite (= x1244 x3436) x1684 (x625 x1244)))
(define-fun x2349 ((x1244 x1229)) Int (ite (= x3699 x1244) x502 (x2017 x1244)))
(define-fun x3336 ((x1244 x1229)) Int (ite (= x2488 x1244) x198 (x926 x1244)))
(define-fun x2647 ((x1244 Int)) Int (ite (= 160 x1244) x3435 (x3329 x1244)))
(define-fun x1242 ((x1244 Int)) Int (ite (= x1244 128) 7 (x2647 x1244)))
(define-fun x3063 ((x1244 x1229)) Int (ite (= x2016 x1244) x1657 (x3336 x1244)))
(define-fun x818 ((x1244 Int)) Int (ite (= x1244 320) x3152 (x1242 x1244)))
(define-fun x1991 ((x1244 Int)) Int (ite (= 832 x1244) 0 (x1972 x1244)))
(define-fun x1529 ((x1244 Int)) Int (ite (and (not x3030) x1267) (x228 x1244) (ite (and (not x3256) x3468) (x3702 x1244) (x818 x1244))))
(define-fun x468 ((x1244 Int)) Int (ite (= x1244 832) x345 (x1529 x1244)))
(define-fun x578 ((x1244 x1229)) Int (ite x2204 (ite (and x1267 (not x3030)) (x926 x1244) (ite (and x3468 (not x3256)) (x1223 x1244) (x3063 x1244))) (x1223 x1244)))
(define-fun x3405 ((x1244 Int)) Int (ite x2204 (x468 x1244) (ite (and (not x2889) x1481) (x1991 x1244) (x1313 x1244))))
(define-fun x2336 ((x1244 Int)) Int (ite (= 800 x1244) x2010 (x3405 x1244)))
(define-fun x907 ((x1244 Int)) Int (ite (= 160 x1244) x956 (x2336 x1244)))
(define-fun x2180 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x907 x1244)))
(define-fun x2156 ((x1244 Int)) Int (ite (= 864 x1244) 0 (x1699 x1244)))
(define-fun x3679 ((x1244 Int)) Int (ite (= 224 x1244) 1889567281 (x1699 x1244)))
(define-fun x2872 ((x1244 Int)) Int (ite (and (<= 224 x1244) (> (+ 32 224) x1244)) (x2377 (+ (- x1244 224) 0)) (x1252 x1244)))
(define-fun x3746 ((x1244 Int)) Int (ite (and x2034 x1546 x2584) (x2872 x1244) (x1252 x1244)))
(define-fun x520 ((x1244 Int)) Int (ite (= x1244 352) x3287 (x3746 x1244)))
(define-fun x2845 ((x1244 Int)) Int (ite (= x1244 320) x1029 (x520 x1244)))
(define-fun x3500 ((x1244 Int)) Int (ite (= 352 x1244) x2467 (x2845 x1244)))
(define-fun x2936 ((x1244 Int)) Int (ite (= 384 x1244) x3015 (x3500 x1244)))
(define-fun x2052 ((x1244 Int)) Int (ite (= 160 x1244) x849 (x2936 x1244)))
(define-fun x554 ((x1244 Int)) Int (ite (= x1244 128) 16 (x2052 x1244)))
(define-fun x3308 ((x1244 Int)) Int (ite (= 416 x1244) x3184 (x554 x1244)))
(define-fun x524 ((x1244 Int)) Int (ite (= x1244 160) x845 (x3308 x1244)))
(define-fun x425 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x524 x1244)))
(define-fun x2061 ((x1244 Int)) Int (ite (= x1244 448) x3692 (x425 x1244)))
(define-fun x1093 ((x1244 Int)) Int (ite (= 160 x1244) x1105 (x2061 x1244)))
(define-fun x1148 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1093 x1244)))
(define-fun x334 ((x1244 Int)) Int (ite (= 480 x1244) x309 (x1148 x1244)))
(define-fun x2650 ((x1244 Int)) Int (ite (= x1244 160) x2282 (x334 x1244)))
(define-fun x2806 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x2650 x1244)))
(define-fun x2217 ((x1244 Int)) Int (ite (= x1244 864) 0 (x3110 x1244)))
(define-fun x1347 ((x1244 Int)) Int (ite (= x1244 544) x1950 (x3110 x1244)))
(define-fun x2665 ((x1244 Int)) Int (ite (= 544 x1244) x590 (x1347 x1244)))
(define-fun x2727 ((x1244 Int)) Int (ite (= 576 x1244) 1889567281 (x2665 x1244)))
(define-fun x2892 ((x1244 Int)) Int (ite (and (< x1244 (+ 576 32)) (>= x1244 576)) (x1402 (+ (- x1244 576) 0)) (x591 x1244)))
(define-fun x3313 ((x1244 Int)) Int (ite (and x341 x1546 x2434 x2034) (x2892 x1244) (x591 x1244)))
(define-fun x1083 ((x1244 Int)) Int (ite (= 864 x1244) x2457 (x736 x1244)))
(define-fun x1312 ((x1244 Int)) Int (ite (= x1244 864) 0 (x736 x1244)))
(define-fun x3227 ((x1244 Int)) Int (ite (and x341 x2793 x1546 x2034) (x1312 x1244) (ite (and x2034 x1546 (not x2793) x341) (x1083 x1244) (ite (and x2034 (not x341) x1546) (x2217 x1244) (x2156 x1244)))))
(define-fun x1502 ((x1244 Int)) Int (ite (= x1244 832) x561 (x3227 x1244)))
(define-fun x717 ((x1244 Int)) Int (ite (= x1244 160) x2674 (x348 x1244)))
(define-fun x925 ((x1244 Int)) Int (ite (= x1244 128) 16 (x717 x1244)))
(define-fun x1482 ((x1244 Int)) Int (ite (= 896 x1244) x1876 (x925 x1244)))
(define-fun x1000 ((x1244 Int)) Int (ite (= x1244 160) x3575 (x348 x1244)))
(define-fun x82 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1000 x1244)))
(define-fun x1106 ((x1244 Int)) Int (ite (= x1244 224) 1889567281 (x82 x1244)))
(define-fun x2631 ((x1244 Int)) Int (ite (and (<= 224 x1244) (< x1244 (+ 224 32))) (x2475 (+ (- x1244 224) 0)) (x3029 x1244)))
(define-fun x399 ((x1244 Int)) Int (ite (and x3187 x2034 x725) (x2631 x1244) (x3029 x1244)))
(define-fun x683 ((x1244 Int)) Int (ite (= x1244 352) x2151 (x399 x1244)))
(define-fun x503 ((x1244 Int)) Int (ite (= 320 x1244) x1340 (x683 x1244)))
(define-fun x1046 ((x1244 Int)) Int (ite (= 160 x1244) x1104 (x503 x1244)))
(define-fun x3330 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1046 x1244)))
(define-fun x349 ((x1244 Int)) Int (ite (= x1244 896) x2214 (x1893 x1244)))
(define-fun x376 ((x1244 Int)) Int (ite (= x1244 896) x2358 (x1893 x1244)))
(define-fun x135 ((x1244 Int)) Int (ite (= x1244 896) 0 (x1893 x1244)))
(define-fun x1172 ((x1244 Int)) Int (ite (and x3187 x2034 x2284) (x349 x1244) (ite (and x3187 x2034 (not x475) (not x2284)) (x135 x1244) (ite (and x2034 (not x2284) x3187 x475) (x376 x1244) (x1482 x1244)))))
(define-fun x2887 ((x1244 Int)) Int (ite (= 864 x1244) x2021 (x1172 x1244)))
(define-fun x3459 ((x1244 Int)) Int (ite (= x1244 160) x956 (x1074 x1244)))
(define-fun x1766 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x3459 x1244)))
(define-fun x3349 ((x1244 x1229)) Int (ite (= x1244 x962) x1910 (x1178 x1244)))
(define-fun x2267 ((x1244 x1229)) Int (ite (= (x2873 40) x1244) x2130 (x3349 x1244)))
(define-fun x3492 ((x1244 Int)) Int (ite (= 864 x1244) x2728 (x1766 x1244)))
(define-fun x972 ((x1244 Int)) Int (ite (= x1244 160) x956 (x1339 x1244)))
(define-fun x65 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x972 x1244)))
(define-fun x1444 ((x1244 x1229)) Int (ite (= x1171 x1244) x2592 (x3340 x1244)))
(define-fun x2866 ((x1244 x1229)) Int (ite (= (x2873 40) x1244) x918 (x1444 x1244)))
(define-fun x2011 ((x1244 Int)) Int (ite (and x2034 (not x2028)) (x1339 x1244) (x65 x1244)))
(define-fun x2947 ((x1244 Int)) Int (ite (= x1244 224) x712 (x1655 x1244)))
(define-fun x1059 ((x1244 Int)) Int (ite (= 256 x1244) x956 (x2947 x1244)))
(define-fun x3599 ((x1244 Int)) Int (ite (= x1244 288) x1092 (x1059 x1244)))
(define-fun x2044 ((x1244 Int)) Int (ite (= 384 x1244) 4 (x3599 x1244)))
(define-fun x1797 ((x1244 Int)) Int (ite (and (< x1244 (+ 480 4)) (<= 480 x1244)) (x1711 (+ (- x1244 480) 0)) (x212 x1244)))
(define-fun x528 ((x1244 Int)) Int (ite (and x584 x2034 x847) (x1797 x1244) (x212 x1244)))
(define-fun x3710 ((x1244 Int)) Int (ite (= x1244 x1620) x353 (x528 x1244)))
(define-fun x2891 ((x1244 Int)) Int (ite (= x1244 x3320) x2915 (x3710 x1244)))
(define-fun x3328 ((x1244 Int)) Int (ite (and (> (+ 32 608) x1244) (<= 608 x1244)) (x3421 (+ 0 (- x1244 608))) (x1763 x1244)))
(define-fun x2972 ((x1244 Int)) Int (ite (and x2034 x584 x2038) (x3328 x1244) (x1763 x1244)))
(define-fun x356 ((x1244 Int)) Int (ite (and (<= 320 x1244) (< x1244 (+ x1567 320))) (x2764 (+ 0 (- x1244 320))) (x3104 x1244)))
(define-fun x3424 ((x1244 Int)) Int (ite (and x2034 x584 x3497) (x356 x1244) (x3104 x1244)))
(define-fun x1890 ((x1244 Int)) Int (ite (= 224 x1244) x1210 (x1655 x1244)))
(define-fun x3290 ((x1244 Int)) Int (ite (= 256 x1244) x956 (x1890 x1244)))
(define-fun x558 ((x1244 Int)) Int (ite (= x1244 288) 274184521717934524641157099916833587200 (x3290 x1244)))
(define-fun x3139 ((x1244 Int)) Int (ite (= 320 x1244) x573 (x558 x1244)))
(define-fun x3022 ((x1244 Int)) Int (ite (= x1244 416) 4 (x3139 x1244)))
(define-fun x184 ((x1244 Int)) Int (ite (and (< x1244 (+ 512 4)) (>= x1244 512)) (x2642 (+ 0 (- x1244 512))) (x1483 x1244)))
(define-fun x1233 ((x1244 Int)) Int (ite (and x1884 x641 x2034 (not x584)) (x184 x1244) (x1483 x1244)))
(define-fun x2353 ((x1244 Int)) Int (ite (= x1244 x705) x805 (x1233 x1244)))
(define-fun x211 ((x1244 Int)) Int (ite (= x3091 x1244) x3321 (x2353 x1244)))
(define-fun x2094 ((x1244 Int)) Int (ite (= x1244 x3108) x2579 (x211 x1244)))
(define-fun x685 ((x1244 Int)) Int (ite (and (< x1244 (+ 32 672)) (>= x1244 672)) (x648 (+ (- x1244 672) 0)) (x1400 x1244)))
(define-fun x2279 ((x1244 Int)) Int (ite (and x1884 x2117 x2034 (not x584)) (x685 x1244) (x1400 x1244)))
(define-fun x655 ((x1244 Int)) Int (ite (and (> (+ x1019 352) x1244) (<= 352 x1244)) (x2327 (+ 0 (- x1244 352))) (x442 x1244)))
(define-fun x817 ((x1244 Int)) Int (ite (and x2034 x1884 x3045 (not x584)) (x655 x1244) (x442 x1244)))
(define-fun x2063 ((x1244 Int)) Int (ite (and (not x1884) (not x584) x2034) (x1655 x1244) (ite (and (not x584) x2034 x1884) (x817 x1244) (x3424 x1244))))
(define-fun x2088 ((x1244 x1229)) Int (ite (and (not x1884) x2034 (not x584)) (x1505 x1244) (ite (and x2034 x1884 (not x584)) (ite (and x2034 (not x584) x2117 x1884) (x3611 x1244) (x1505 x1244)) (ite (and x2038 x2034 x584) (x1291 x1244) (x1505 x1244)))))
(define-fun x1144 ((x1244 Int)) Int (ite (= 992 x1244) 0 (x3153 x1244)))
(define-fun x2694 ((x1244 Int)) Int (ite (= 256 x1244) x2521 (x3153 x1244)))
(define-fun x1025 ((x1244 Int)) Int (ite (= 992 x1244) x2337 (x2694 x1244)))
(define-fun x1589 ((x1244 Int)) Int (ite (and x2034 x593) (x1025 x1244) (x1144 x1244)))
(define-fun x1064 ((x1244 Int)) Int (ite (= 960 x1244) x2534 (x1589 x1244)))
(define-fun x1534 ((x1244 x1229)) Int (ite (= x1244 (x2873 43)) 0 (x3190 x1244)))
(define-fun x3233 ((x1244 x1229)) Int (ite (= (x2873 43) x1244) x2754 (x3190 x1244)))
(define-fun x3132 ((x1244 x1229)) Int (ite (and x3485 x2034) (x3233 x1244) (x1534 x1244)))
(define-fun x2413 ((x1244 Int)) Int (ite (= x1244 160) x956 (x1064 x1244)))
(define-fun x3398 ((x1244 Int)) Int (ite (= x1244 128) 16 (x2413 x1244)))
(define-fun x3516 ((x1244 x1229)) Int (ite (= x971 x1244) x2522 (x3132 x1244)))
(define-fun x2418 ((x1244 Int)) Int (ite (and (< x1244 (+ 64 992)) (>= x1244 992)) (x3312 (+ 4 (- x1244 992))) (x3398 x1244)))
(define-fun x1394 ((x1244 Int)) Int (ite (= x1244 1056) x2402 (x2418 x1244)))
(define-fun x3221 ((x1244 Int)) Int (ite (= 160 x1244) x956 (x1394 x1244)))
(define-fun x2193 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x3221 x1244)))
(define-fun x2635 ((x1244 Int)) Int (ite (= x1244 1088) x1432 (x2193 x1244)))
(define-fun x692 ((x1244 Int)) Int (ite (= 160 x1244) x956 (x2635 x1244)))
(define-fun x3532 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x692 x1244)))
(define-fun x3727 ((x1244 Int)) Int (ite (= x1244 1120) x2029 (x3532 x1244)))
(define-fun x416 ((x1244 Int)) Int (ite (= x1244 160) x956 (x3727 x1244)))
(define-fun x3529 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x416 x1244)))
(define-fun x3589 ((x1244 Int)) Int (ite (= 1152 x1244) x2380 (x3529 x1244)))
(define-fun x1217 ((x1244 Int)) Int (ite (= 1184 x1244) x3133 (x3589 x1244)))
(define-fun x1361 ((x1244 Int)) Int (ite (= 160 x1244) x956 (x1217 x1244)))
(define-fun x119 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1361 x1244)))
(define-fun x1493 ((x1244 Int)) Int (ite (= 1216 x1244) x759 (x119 x1244)))
(define-fun x3350 ((x1244 Int)) Int (ite (= 160 x1244) x956 (x1493 x1244)))
(define-fun x740 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x3350 x1244)))
(define-fun x1224 ((x1244 Int)) Int (x2636 x1244))
(define-fun x902 ((x1244 Int)) Int (ite (and (>= x1244 28) (< x1244 (+ 4 28))) (x2636 (+ (- x1244 28) 0)) (x1764 x1244)))
(define-fun x1098 ((x1244 Int)) Int (ite (= 160 x1244) x1850 (x902 x1244)))
(define-fun x1865 ((x1244 Int)) Int (ite (= 800 x1244) 1854955031 (x2249 x1244)))
(define-fun x2991 ((x1244 Int)) Int (ite (and (<= 800 x1244) (< x1244 (+ 800 32))) (x223 (+ 0 (- x1244 800))) (x543 x1244)))
(define-fun x3740 ((x1244 Int)) Int (ite (= x1244 800) x1850 (x660 x1244)))
(define-fun x901 ((x1244 Int)) Int (ite (= 832 x1244) 60465744 (x3740 x1244)))
(define-fun x1399 ((x1244 Int)) Int (ite (and (>= x1244 0) (< x1244 (+ 0 0))) (x2043 (+ (- x1244 0) 0)) (x947 x1244)))
(define-fun x1299 ((x1244 Int)) Int (ite (= x1244 864) x1850 (x660 x1244)))
(define-fun x3148 ((x1244 Int)) Int (ite (= 160 x1244) x1902 (x1605 x1244)))
(define-fun x2884 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x3148 x1244)))
(define-fun x1274 ((x1244 Int)) Int (ite (= x1244 928) x3389 (x2884 x1244)))
(define-fun x1259 ((x1244 Int)) Int (ite (= 160 x1244) x3127 (x1605 x1244)))
(define-fun x1741 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1259 x1244)))
(define-fun x2277 ((x1244 Int)) Int (ite (= 224 x1244) 1889567281 (x1741 x1244)))
(define-fun x3049 ((x1244 Int)) Int (ite (and (>= x1244 224) (> (+ 224 32) x1244)) (x1796 (+ (- x1244 224) 0)) (x2780 x1244)))
(define-fun x173 ((x1244 Int)) Int (ite (and x1542 x252 x404) (x3049 x1244) (x2780 x1244)))
(define-fun x1510 ((x1244 Int)) Int (ite (= x1244 352) x3410 (x173 x1244)))
(define-fun x3491 ((x1244 Int)) Int (ite (= x1244 320) x1314 (x1510 x1244)))
(define-fun x60 ((x1244 Int)) Int (ite (= 160 x1244) x195 (x3491 x1244)))
(define-fun x3569 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x60 x1244)))
(define-fun x2691 ((x1244 Int)) Int (ite (= 928 x1244) x1033 (x2508 x1244)))
(define-fun x1676 ((x1244 Int)) Int (ite (= 928 x1244) 0 (x2508 x1244)))
(define-fun x1375 ((x1244 Int)) Int (ite (= 928 x1244) x2629 (x2508 x1244)))
(define-fun x422 ((x1244 Int)) Int (ite (and x1682 x1926) (x2691 x1244) (ite (and x274 (not x2390)) (x1676 x1244) (ite (and (not x2518) x1386) (x1375 x1244) (x1274 x1244)))))
(define-fun x1115 ((x1244 Int)) Int (ite (= x1244 896) x145 (x422 x1244)))
(define-fun x1987 ((x1244 Int)) Int (ite (= 160 x1244) x1850 (x1115 x1244)))
(define-fun x1883 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1987 x1244)))
(define-fun x1413 ((x1244 Int)) Int (ite (= 928 x1244) x2252 (x1883 x1244)))
(define-fun x603 ((x1244 Int)) Int (ite (= 960 x1244) 113225476 (x1413 x1244)))
(define-fun x1344 ((x1244 Int)) Int (ite (= 992 x1244) x476 (x603 x1244)))
(define-fun x1460 ((x1244 Int)) Int (ite (and (> (+ 1024 96) x1244) (<= 1024 x1244)) (x2636 (+ (- x1244 1024) 4)) (x1344 x1244)))
(define-fun x812 ((x1244 Int)) Int (ite (= x1244 1120) x2698 (x1460 x1244)))
(define-fun x1422 ((x1244 Int)) Int (ite (and (> (+ 32 960) x1244) (<= 960 x1244)) (x1649 (+ 0 (- x1244 960))) (x623 x1244)))
(define-fun x646 ((x1244 Int)) Int (ite (and x2000 x3236) (x1422 x1244) (x623 x1244)))
(define-fun x1861 ((x1244 Int)) Int (ite (and x3444 (not x842)) (x646 x1244) (ite (and x1465 x1096) (ite (and x41 (not x3027) x2470) (x1399 x1244) (x947 x1244)) (x2249 x1244))))
(define-fun x3455 ((x1244 x1229)) Int (ite (and x3444 (not x842)) (x2088 x1244) (ite (and x1096 x1465) (ite (and x41 x2470 (not x3027)) (x2138 x1244) (x2088 x1244)) (x2088 x1244))))
(define-fun x2406 ((x1244 Int)) Int (ite (= x1244 800) 1889567281 (x1861 x1244)))
(define-fun x2840 ((x1244 Int)) Int (ite (and (> (+ 32 800) x1244) (<= 800 x1244)) (x2627 (+ (- x1244 800) 0)) (x2703 x1244)))
(define-fun x564 ((x1244 Int)) Int (ite (= x1244 224) x1850 (x418 x1244)))
(define-fun x3619 ((x1244 Int)) Int (ite (= 256 x1244) x326 (x564 x1244)))
(define-fun x1839 ((x1244 Int)) Int (ite (= x1244 160) x1152 (x3619 x1244)))
(define-fun x1017 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1839 x1244)))
(define-fun x1824 ((x1244 x1229)) Int (ite (= x700 x1244) x1237 (x116 x1244)))
(define-fun x284 ((x1244 x1229)) Int (ite (= (x2873 39) x1244) x3653 (x1824 x1244)))
(define-fun x788 ((x1244 x1229)) Int (ite (and x1515 x1724) (x116 x1244) (ite (and x750 x1147) (x116 x1244) (x284 x1244))))
(define-fun x13 ((x1244 x1229)) Int (ite (= x1244 x1032) x371 (x788 x1244)))
(define-fun x919 ((x1244 x1229)) Int (ite (= x277 x1244) x3234 (x13 x1244)))
(define-fun x3254 ((x1244 x1229)) Int (ite (= (x2873 40) x1244) x2197 (x919 x1244)))
(define-fun x3081 ((x1244 Int)) Int (ite (= 160 x1244) x1048 (x3064 x1244)))
(define-fun x1474 ((x1244 Int)) Int (ite (= x1244 128) 16 (x3081 x1244)))
(define-fun x1557 ((x1244 Int)) Int (ite (= x1244 160) x3552 (x1181 x1244)))
(define-fun x170 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1557 x1244)))
(define-fun x3381 ((x1244 Int)) Int (ite (and x1724 x1515) (x1181 x1244) (ite (and x750 x1147) (x3064 x1244) (x170 x1244))))
(define-fun x1403 ((x1244 Int)) Int (ite (= x1244 160) x3360 (x3381 x1244)))
(define-fun x526 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1403 x1244)))
(define-fun x359 ((x1244 Int)) Int (ite (= 160 x1244) x1745 (x526 x1244)))
(define-fun x1626 ((x1244 Int)) Int (ite (= x1244 128) 16 (x359 x1244)))
(define-fun x1911 ((x1244 Int)) Int (ite (and (not x1761) x1568) (x418 x1244) (x1626 x1244)))
(define-fun x1513 ((x1244 Int)) Int (ite (= x1244 512) x1850 (x1911 x1244)))
(define-fun x1954 ((x1244 Int)) Int (ite (= 544 x1244) x1379 (x1513 x1244)))
(define-fun x2191 ((x1244 Int)) Int (ite (= x1244 160) x3299 (x1954 x1244)))
(define-fun x628 ((x1244 Int)) Int (ite (= x1244 832) 0 (x808 x1244)))
(define-fun x3316 ((x1244 x1229)) Int (ite (= (x2873 9) x1244) x2613 (x2129 x1244)))
(define-fun x152 ((x1244 x1229)) Int (ite (= x1670 x1244) x1490 (x3061 x1244)))
(define-fun x2099 ((x1244 x1229)) Int (ite (= x3244 x1244) x3044 (x152 x1244)))
(define-fun x2786 ((x1244 x1229)) Int (ite (= x1244 x3641) x1466 (x653 x1244)))
(define-fun x678 ((x1244 x1229)) Int (ite (= x1244 x2307) x1688 (x2786 x1244)))
(define-fun x3502 ((x1244 x1229)) Int (ite x3306 (ite (and (not x2274) x2008) (x653 x1244) (ite (and (not x1909) x372) (x2129 x1244) (x678 x1244))) (x2129 x1244)))
(define-fun x1110 ((x1244 Int)) Int (ite (= 160 x1244) x101 (x808 x1244)))
(define-fun x1015 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1110 x1244)))
(define-fun x1028 ((x1244 Int)) Int (ite (= 160 x1244) x3231 (x1859 x1244)))
(define-fun x2410 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1028 x1244)))
(define-fun x580 ((x1244 Int)) Int (ite (and (>= x1244 640) (> (+ 640 32) x1244)) (x619 (+ 0 (- x1244 640))) (x2002 x1244)))
(define-fun x1176 ((x1244 Int)) Int (ite (and x1619 x1664 x1327) (x580 x1244) (x2002 x1244)))
(define-fun x2181 ((x1244 Int)) Int (ite (= 608 x1244) x1919 (x1176 x1244)))
(define-fun x2626 ((x1244 Int)) Int (ite (= x1244 160) x1681 (x2181 x1244)))
(define-fun x33 ((x1244 Int)) Int (ite (= x1244 128) 16 (x2626 x1244)))
(define-fun x3065 ((x1244 Int)) Int (ite (= 640 x1244) x1826 (x33 x1244)))
(define-fun x2831 ((x1244 Int)) Int (ite (= x1244 672) x3467 (x3065 x1244)))
(define-fun x2068 ((x1244 Int)) Int (ite (= x1244 704) x786 (x268 x1244)))
(define-fun x491 ((x1244 Int)) Int (ite (= 352 x1244) 274184521717934524641157099916833587200 (x1520 x1244)))
(define-fun x331 ((x1244 Int)) Int (ite (= 384 x1244) x2122 (x491 x1244)))
(define-fun x2045 ((x1244 Int)) Int (ite (= 416 x1244) 0 (x331 x1244)))
(define-fun x1582 ((x1244 Int)) Int (ite (= 224 x1244) 1889567281 (x651 x1244)))
(define-fun x1935 ((x1244 Int)) Int (ite (and (< x1244 (+ 224 32)) (<= 224 x1244)) (x2846 (+ 0 (- x1244 224))) (x1642 x1244)))
(define-fun x3033 ((x1244 Int)) Int (ite (and (not x838) x1457 x317) (x1935 x1244) (x1642 x1244)))
(define-fun x1268 ((x1244 Int)) Int (ite (= x1244 288) x903 (x3033 x1244)))
(define-fun x1660 ((x1244 Int)) Int (ite (= 256 x1244) x2246 (x333 x1244)))
(define-fun x879 ((x1244 Int)) Int (ite (= 320 x1244) x2870 (x1660 x1244)))
(define-fun x130 ((x1244 Int)) Int (ite (= 320 x1244) 0 (x333 x1244)))
(define-fun x2548 ((x1244 Int)) Int (ite (and (not x434) x989) (x879 x1244) (x130 x1244)))
(define-fun x2735 ((x1244 Int)) Int (ite (= x1244 480) x1754 (x2548 x1244)))
(define-fun x9 ((x1244 Int)) Int (ite (= 416 x1244) x3344 (x2735 x1244)))
(define-fun x627 ((x1244 Int)) Int (ite (= 416 x1244) x2643 (x651 x1244)))
(define-fun x459 ((x1244 Int)) Int (ite (and (not x1898) x1412) (x9 x1244) (x627 x1244)))
(define-fun x3154 ((x1244 Int)) Int (ite (= 160 x1244) x1945 (x459 x1244)))
(define-fun x128 ((x1244 Int)) Int (ite (= x1244 128) 7 (x3154 x1244)))
(define-fun x194 ((x1244 Int)) Int (ite (= 480 x1244) x2907 (x128 x1244)))
(define-fun x1239 ((x1244 Int)) Int (ite (= x1244 768) x1307 (x194 x1244)))
(define-fun x55 ((x1244 Int)) Int (ite (= x1244 768) x166 (x3638 x1244)))
(define-fun x597 ((x1244 Int)) Int (ite (= 224 x1244) 274184521717934524641157099916833587200 (x55 x1244)))
(define-fun x401 ((x1244 Int)) Int (ite (= x1244 256) x3202 (x597 x1244)))
(define-fun x1232 ((x1244 Int)) Int (ite (= 288 x1244) x303 (x401 x1244)))
(define-fun x410 ((x1244 Int)) Int (ite (= x1244 352) 274184521717934524641157099916833587200 (x1232 x1244)))
(define-fun x839 ((x1244 Int)) Int (ite (= x1244 384) 0 (x410 x1244)))
(define-fun x965 ((x1244 Int)) Int (ite (= x1244 320) 0 (x839 x1244)))
(define-fun x923 ((x1244 Int)) Int (ite (and x3479 x3583) (x2743 x1244) (x2163 x1244)))
(define-fun x2851 ((x1244 Int)) Int (ite (= 320 x1244) 1 (x923 x1244)))
(define-fun x1428 ((x1244 Int)) Int (ite (and x3259 x3168) (x2163 x1244) (x2851 x1244)))
(define-fun x3503 ((x1244 Int)) Int (ite (= x1244 160) x2883 (x1428 x1244)))
(define-fun x373 ((x1244 Int)) Int (ite (= x1244 128) 7 (x3503 x1244)))
(define-fun x1679 ((x1244 Int)) Int (ite (= 160 x1244) x3089 (x373 x1244)))
(define-fun x107 ((x1244 Int)) Int (ite (= 128 x1244) 7 (x1679 x1244)))
(define-fun x2919 ((x1244 Int)) Int (ite (= x1244 320) x3667 (x107 x1244)))
(define-fun x1272 ((x1244 Int)) Int (ite (and x730 (not x3520)) (x3638 x1244) (x2919 x1244)))
(define-fun x174 ((x1244 Int)) Int (ite (= x1244 160) 274184521717934524641157099916833587200 (x1272 x1244)))
(define-fun x1522 ((x1244 Int)) Int (ite (= x1244 224) 274184521717934524641157099916833587200 (x3007 x1244)))
(define-fun x3596 ((x1244 Int)) Int (ite (= x1244 256) x3155 (x1522 x1244)))
(define-fun x1441 ((x1244 Int)) Int (ite (= x1244 160) 274184521717934524641157099916833587200 (x3596 x1244)))
(define-fun x3549 ((x1244 Int)) Int (ite (= 128 x1244) 7 (x1441 x1244)))
(define-fun x1998 ((x1244 Int)) Int (ite (= x1244 288) x2974 (x3549 x1244)))
(define-fun x322 ((x1244 Int)) Int (ite (= 352 x1244) 274184521717934524641157099916833587200 (x1998 x1244)))
(define-fun x2035 ((x1244 Int)) Int (ite (= 384 x1244) 0 (x322 x1244)))
(define-fun x413 ((x1244 Int)) Int (ite (= 320 x1244) 0 (x2035 x1244)))
(define-fun x2814 ((x1244 Int)) Int (ite (and x2752 x3307) (x3609 x1244) (x3721 x1244)))
(define-fun x109 ((x1244 Int)) Int (ite (= 320 x1244) 1 (x2814 x1244)))
(define-fun x161 ((x1244 Int)) Int (ite (and x1013 x731) (x3721 x1244) (x109 x1244)))
(define-fun x342 ((x1244 Int)) Int (ite (= x1244 160) x1663 (x161 x1244)))
(define-fun x3372 ((x1244 Int)) Int (ite (= x1244 128) 7 (x342 x1244)))
(define-fun x3314 ((x1244 Int)) Int (ite (= x1244 160) x1150 (x3372 x1244)))
(define-fun x318 ((x1244 Int)) Int (ite (= x1244 128) 7 (x3314 x1244)))
(define-fun x2602 ((x1244 Int)) Int (ite (= x1244 320) x699 (x318 x1244)))
(define-fun x548 ((x1244 Int)) Int (ite (and x2008 (not x2274)) (x3007 x1244) (ite (and x372 (not x1909)) (x1520 x1244) (x2602 x1244))))
(define-fun x1246 ((x1244 Int)) Int (ite (= x1244 832) x1308 (x548 x1244)))
(define-fun x1003 ((x1244 Int)) Int (ite (= 832 x1244) 0 (x1859 x1244)))
(define-fun x2132 ((x1244 Int)) Int (ite x3306 (x1246 x1244) (ite (and x1619 (not x1664)) (x1003 x1244) (x628 x1244))))
(define-fun x2091 ((x1244 Int)) Int (ite (= x1244 800) x754 (x2132 x1244)))
(define-fun x1207 ((x1244 Int)) Int (ite (= 160 x1244) x1850 (x2091 x1244)))
(define-fun x1216 ((x1244 Int)) Int (ite (= x1244 128) 16 (x1207 x1244)))
(define-fun x2595 ((x1244 Int)) Int (ite (= 864 x1244) 0 (x3353 x1244)))
(define-fun x3222 ((x1244 Int)) Int (ite (= x1244 224) 1889567281 (x3353 x1244)))
(define-fun x670 ((x1244 Int)) Int (ite (and (<= 224 x1244) (< x1244 (+ 224 32))) (x2686 (+ (- x1244 224) 0)) (x1109 x1244)))
(define-fun x2624 ((x1244 Int)) Int (ite (and x1617 x2342 x1500) (x670 x1244) (x1109 x1244)))
(define-fun x36 ((x1244 Int)) Int (ite (= 352 x1244) x3352 (x2624 x1244)))
(define-fun x3688 ((x1244 Int)) Int (ite (= 320 x1244) x3747 (x36 x1244)))
(define-fun x332 ((x1244 Int)) Int (ite (= 352 x1244) x3621 (x3688 x1244)))
(define-fun x1321 ((x1244 Int)) Int (ite (= 384 x1244) x3604 (x332 x1244)))
(define-fun x2758 ((x1244 Int)) Int (ite (= 160 x1244) x3618 (x1321 x1244)))
(define-fun x3719 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x2758 x1244)))
(define-fun x2417 ((x1244 Int)) Int (ite (= 416 x1244) x1583 (x3719 x1244)))
(define-fun x507 ((x1244 Int)) Int (ite (= 160 x1244) x2781 (x2417 x1244)))
(define-fun x3446 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x507 x1244)))
(define-fun x3633 ((x1244 Int)) Int (ite (= x1244 448) x257 (x3446 x1244)))
(define-fun x2389 ((x1244 Int)) Int (ite (= 160 x1244) x866 (x3633 x1244)))
(define-fun x1021 ((x1244 Int)) Int (ite (= x1244 128) 16 (x2389 x1244)))
(define-fun x1273 ((x1244 Int)) Int (ite (= x1244 480) x2285 (x1021 x1244)))
(define-fun x1468 ((x1244 Int)) Int (ite (= x1244 160) x1808 (x1273 x1244)))
(define-fun x1701 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1468 x1244)))
(define-fun x2359 ((x1244 Int)) Int (ite (= x1244 544) x2137 (x2747 x1244)))
(define-fun x3115 ((x1244 Int)) Int (ite (= 544 x1244) x565 (x2359 x1244)))
(define-fun x2173 ((x1244 Int)) Int (ite (= x1244 576) 1889567281 (x3115 x1244)))
(define-fun x1164 ((x1244 Int)) Int (ite (and (>= x1244 576) (> (+ 576 32) x1244)) (x3137 (+ (- x1244 576) 0)) (x3240 x1244)))
(define-fun x2329 ((x1244 Int)) Int (ite (and x3294 x3658 (not x445)) (x1164 x1244) (x3240 x1244)))
(define-fun x3014 ((x1244 Int)) Int (ite (= x1244 864) 0 (x1024 x1244)))
(define-fun x2248 ((x1244 Int)) Int (ite (= 864 x1244) x2732 (x1024 x1244)))
(define-fun x2620 ((x1244 Int)) Int (ite (= x1244 864) 0 (x2747 x1244)))
(define-fun x319 ((x1244 Int)) Int (ite (and x1352 x1827 x840) (x3014 x1244) (ite (and x1827 (not x840) x1352) (x2248 x1244) (ite (and x1451 (not x1442)) (x2620 x1244) (x2595 x1244)))))
(define-fun x802 ((x1244 Int)) Int (ite (= x1244 832) x2178 (x319 x1244)))
(define-fun x1810 ((x1244 Int)) Int (ite (= x1244 160) x2803 (x1358 x1244)))
(define-fun x3161 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1810 x1244)))
(define-fun x3075 ((x1244 Int)) Int (ite (= x1244 224) 1889567281 (x3161 x1244)))
(define-fun x2468 ((x1244 Int)) Int (ite (and (< x1244 (+ 32 224)) (<= 224 x1244)) (x3514 (+ 0 (- x1244 224))) (x2376 x1244)))
(define-fun x2502 ((x1244 Int)) Int (ite (and x1918 x3303 x2929) (x2468 x1244) (x2376 x1244)))
(define-fun x307 ((x1244 Int)) Int (ite (= 352 x1244) x3661 (x2502 x1244)))
(define-fun x574 ((x1244 Int)) Int (ite (= 320 x1244) x2715 (x307 x1244)))
(define-fun x3465 ((x1244 Int)) Int (ite (= x1244 160) x644 (x574 x1244)))
(define-fun x3178 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x3465 x1244)))
(define-fun x3567 ((x1244 Int)) Int (ite (= 896 x1244) x352 (x1915 x1244)))
(define-fun x1723 ((x1244 Int)) Int (ite (= 896 x1244) 0 (x1915 x1244)))
(define-fun x2506 ((x1244 Int)) Int (ite (= 896 x1244) x2110 (x1915 x1244)))
(define-fun x1102 ((x1244 Int)) Int (ite (= 160 x1244) x457 (x1358 x1244)))
(define-fun x1281 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1102 x1244)))
(define-fun x2203 ((x1244 Int)) Int (ite (= x1244 896) x949 (x1281 x1244)))
(define-fun x3694 ((x1244 Int)) Int (ite (and x2 x2995) (x3567 x1244) (ite (and x2269 (not x441)) (x1723 x1244) (ite (and (not x122) x261) (x2506 x1244) (x2203 x1244)))))
(define-fun x1311 ((x1244 Int)) Int (ite (= x1244 864) x755 (x3694 x1244)))
(define-fun x1566 ((x1244 Int)) Int (ite (= x1244 160) x1850 (x35 x1244)))
(define-fun x2387 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1566 x1244)))
(define-fun x163 ((x1244 x1229)) Int (ite (= x58 x1244) x3402 (x1981 x1244)))
(define-fun x1538 ((x1244 x1229)) Int (ite (= x1244 (x2873 40)) x1720 (x163 x1244)))
(define-fun x2397 ((x1244 Int)) Int (ite (= x1244 864) x1585 (x2387 x1244)))
(define-fun x3129 ((x1244 Int)) Int (ite (= 160 x1244) x1850 (x1533 x1244)))
(define-fun x3417 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x3129 x1244)))
(define-fun x3631 ((x1244 x1229)) Int (ite (= x3292 x1244) x487 (x2671 x1244)))
(define-fun x2773 ((x1244 x1229)) Int (ite (= x1244 (x2873 40)) x3309 (x3631 x1244)))
(define-fun x509 ((x1244 Int)) Int (ite (and x1801 (not x2709)) (x1533 x1244) (x3417 x1244)))
(define-fun x3205 ((x1244 Int)) Int (ite (= 224 x1244) x1896 (x2875 x1244)))
(define-fun x2914 ((x1244 Int)) Int (ite (= 256 x1244) x1850 (x3205 x1244)))
(define-fun x2900 ((x1244 Int)) Int (ite (= x1244 288) 274184521717934524641157099916833587200 (x2914 x1244)))
(define-fun x1129 ((x1244 Int)) Int (ite (= x1244 320) x2196 (x2900 x1244)))
(define-fun x1006 ((x1244 Int)) Int (ite (= x1244 416) 4 (x1129 x1244)))
(define-fun x1838 ((x1244 Int)) Int (ite (and (< x1244 (+ 4 512)) (<= 512 x1244)) (x1088 (+ 0 (- x1244 512))) (x906 x1244)))
(define-fun x3643 ((x1244 Int)) Int (ite (and x105 (not x3385) x2959) (x1838 x1244) (x906 x1244)))
(define-fun x1123 ((x1244 Int)) Int (ite (= x2254 x1244) x1941 (x3643 x1244)))
(define-fun x1781 ((x1244 Int)) Int (ite (= x117 x1244) x1964 (x1123 x1244)))
(define-fun x1014 ((x1244 Int)) Int (ite (= x1244 x389) x439 (x1781 x1244)))
(define-fun x1755 ((x1244 Int)) Int (ite (and (< x1244 (+ 32 672)) (<= 672 x1244)) (x718 (+ (- x1244 672) 0)) (x3354 x1244)))
(define-fun x898 ((x1244 Int)) Int (ite (= x1244 224) x2048 (x2875 x1244)))
(define-fun x2830 ((x1244 Int)) Int (ite (= x1244 256) x1850 (x898 x1244)))
(define-fun x2026 ((x1244 Int)) Int (ite (= 288 x1244) x113 (x2830 x1244)))
(define-fun x2854 ((x1244 Int)) Int (ite (= 384 x1244) 4 (x2026 x1244)))
(define-fun x2632 ((x1244 Int)) Int (ite (and (< x1244 (+ 4 480)) (>= x1244 480)) (x1678 (+ (- x1244 480) 0)) (x2808 x1244)))
(define-fun x2480 ((x1244 Int)) Int (ite (and x70 (not x2687) x3709) (x2632 x1244) (x2808 x1244)))
(define-fun x615 ((x1244 Int)) Int (ite (= x1244 x2232) x1969 (x2480 x1244)))
(define-fun x781 ((x1244 Int)) Int (ite (= x3123 x1244) x2161 (x615 x1244)))
(define-fun x674 ((x1244 Int)) Int (ite (and (> (+ 608 32) x1244) (>= x1244 608)) (x218 (+ (- x1244 608) 0)) (x2347 x1244)))
(define-fun x1904 ((x1244 Int)) Int (ite (and x2760 x2959 (not x3385)) (x1755 x1244) (x3354 x1244)))
(define-fun x1068 ((x1244 Int)) Int (ite (and (>= x1244 352) (> (+ 352 x237) x1244)) (x3331 (+ 0 (- x1244 352))) (x1661 x1244)))
(define-fun x3457 ((x1244 Int)) Int (ite (and x1069 x2934 x2533) (x1068 x1244) (x1661 x1244)))
(define-fun x3251 ((x1244 Int)) Int (ite (and (not x2687) x1479 x3709) (x674 x1244) (x2347 x1244)))
(define-fun x162 ((x1244 Int)) Int (ite (and (> (+ x3739 320) x1244) (>= x1244 320)) (x123 (+ 0 (- x1244 320))) (x2440 x1244)))
(define-fun x1975 ((x1244 Int)) Int (ite (and x3058 x1411 x2066) (x162 x1244) (x2440 x1244)))
(define-fun x43 ((x1244 Int)) Int (ite (and x3390 (not x2882)) (x2875 x1244) (ite x2134 (x3457 x1244) (x1975 x1244))))
(define-fun x2670 ((x1244 Int)) Int (ite (= x1244 256) x2072 (x2734 x1244)))
(define-fun x2969 ((x1244 Int)) Int (ite (= x1244 992) x556 (x2670 x1244)))
(define-fun x1752 ((x1244 Int)) Int (ite (= 992 x1244) 0 (x2734 x1244)))
(define-fun x654 ((x1244 Int)) Int (ite (and x1604 (not x1539)) (x2969 x1244) (x1752 x1244)))
(define-fun x2718 ((x1244 Int)) Int (ite (= x1244 960) x2910 (x654 x1244)))
(define-fun x1621 ((x1244 x1229)) Int (ite (= x1244 (x2873 43)) 0 (x3565 x1244)))
(define-fun x1948 ((x1244 x1229)) Int (ite (= (x2873 43) x1244) x1530 (x3565 x1244)))
(define-fun x721 ((x1244 x1229)) Int (ite (and x1491 (not x794)) (x1948 x1244) (x1621 x1244)))
(define-fun x1496 ((x1244 Int)) Int (ite (= x1244 160) x1850 (x2718 x1244)))
(define-fun x3243 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x1496 x1244)))
(define-fun x3219 ((x1244 x1229)) Int (ite (= x800 x1244) x1869 (x721 x1244)))
(define-fun x474 ((x1244 x1229)) Int (ite (= (x2873 41) x1244) x1869 (x3219 x1244)))
(define-fun x2876 ((x1244 Int)) Int (ite (and (>= x1244 992) (> (+ 64 992) x1244)) (x2636 (+ (- x1244 992) 4)) (x3243 x1244)))
(define-fun x3648 ((x1244 Int)) Int (ite (= 1056 x1244) x2101 (x2876 x1244)))
(define-fun x3214 ((x1244 Int)) Int (ite (= 160 x1244) x1850 (x3648 x1244)))
(define-fun x3086 ((x1244 Int)) Int (ite (= x1244 128) 16 (x3214 x1244)))
(define-fun x3201 ((x1244 Int)) Int (ite (= x1244 1088) x1124 (x3086 x1244)))
(define-fun x3720 ((x1244 Int)) Int (ite (= x1244 160) x1850 (x3201 x1244)))
(define-fun x3670 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x3720 x1244)))
(define-fun x118 ((x1244 Int)) Int (ite (= x1244 1120) x311 (x3670 x1244)))
(define-fun x519 ((x1244 Int)) Int (ite (= x1244 160) x1850 (x118 x1244)))
(define-fun x2335 ((x1244 Int)) Int (ite (= x1244 128) 16 (x519 x1244)))
(define-fun x3080 ((x1244 Int)) Int (ite (= x1244 1152) x1345 (x2335 x1244)))
(define-fun x3119 ((x1244 Int)) Int (ite (= x1244 1184) x2571 (x3080 x1244)))
(define-fun x679 ((x1244 Int)) Int (ite (= 160 x1244) x1850 (x3119 x1244)))
(define-fun x2660 ((x1244 Int)) Int (ite (= x1244 128) 16 (x679 x1244)))
(define-fun x3415 ((x1244 Int)) Int (ite (= 1216 x1244) x2133 (x2660 x1244)))
(define-fun x2112 ((x1244 Int)) Int (ite (= 160 x1244) x1850 (x3415 x1244)))
(define-fun x2827 ((x1244 Int)) Int (ite (= 128 x1244) 16 (x2112 x1244)))
(define-fun x2739 ((x1498 Int)) Bool (=> (and (not (= 1977493762 x1498)) (not (= x1498 2572356358)) (not (= x1498 4267106866)) (not (= x1498 3544214205)) (not (= x1498 3184473787)) (not (= x1498 2052391781)) (not (= 1889567281 x1498)) (not (= 60465744 x1498)) (not (= x1498 31556952)) (not (= 1888058147 x1498)) (not (= 3208075701 x1498)) (not (= x1498 1461501637330902918203684832716283019655932542975)) (not (= 1257916802 x1498)) (not (= 2780307423 x1498)) (not (= 347398766 x1498)) (not (= x1498 3877814014)) (not (= x1498 157198259)) (not (= 4294967296 x1498)) (not (= x1498 2869116585)) (not (= 3147386184 x1498)) (not (= x1498 3963136098)) (not (= 3065339685 x1498)) (not (= 2087341860 x1498)) (not (= 2757214935 x1498)) (< 10000 x1498) (not (= 599290589 x1498)) (not (= 1854955031 x1498)) (not (= x1498 16192718)) (not (= 274184521717934524641157099916833587200 x1498)) (not (= x1498 2715400956)) (not (= x1498 3491319510)) (not (= 1401663147 x1498)) (not (= x1498 596573372)) (not (= x1498 1196925270)) (not (= x1498 3092021830)) (not (= 961581905 x1498)) (not (= x1498 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x1498 2316151882)) (not (= x1498 113225476)) (not (= x1498 4151200938)) (not (= 3613687827 x1498)) (not (= 3862337480 x1498)) (not (= 288104347 x1498)) (not (= x1498 2988718581)) (not (= x1498 3339924076)) (not (= x1498 3296657447)) (not (= 31576340 x1498)) (not (= x1498 1823829273)) (not (= x1498 3184006219)) (not (= x1498 1000000000000000000)) (not (= 3567397854 x1498)) (not (= 297566789 x1498)) (not (= x1498 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= 464926286 x1498)) (not (= x1498 1851080549)) (not (= x1498 773487949)) (not (= 629314576 x1498)) (not (= 348537858 x1498)) (not (= 2388873442 x1498)) (not (= x1498 861432679)) (not (= x1498 2681579215)) (not (= x1498 2835717307)) (not (= x1498 2699341722)) (not (= 2484372501 x1498)) (not (= x1498 2209625481)) (not (= x1498 1020253707)) (not (= 356263876 x1498)) (not (= 3504541104 x1498))) (not ((_ is x2873) (x1157 x1498)))))
(assert (= x793 (=> (and (= (> (x1261 x1961 x1673) 0) x527) (= x1673 (mod (* 8 x1214) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x737 (- 32 x3656)) x1214) (= x3656 (x1975 320)) (= x1961 (x1975 352))) (and (=> x527 x1365) (=> (not x527) x1698)))))
(assert (= (+ (x1739 x932) 2) (x1739 (x1844 x932 2))))
(assert (x2739 (x505 128)))
(assert (= (ite (and x3717 (not x1900)) (x1154 x3217) (x2416 x3217)) (x1223 x3217)))
(assert (= (ite (and (not x3564) x1835) (x1154 x872) (x2777 x872)) (x1089 x872)))
(assert (= (ite (and (not x3564) x1835) (x1154 x3554) (x2777 x3554)) (x1089 x3554)))
(assert (= (x1739 (x1844 x1932 6)) (+ 6 (x1739 x1932))))
(assert (= (and x3278 (not x329)) x3737))
(assert (= x532 (x3721 192)))
(assert (x1480 x665))
(assert (x1480 x1152))
(assert (= (x2271 160) (x1739 (x1157 (x2271 160)))))
(assert (= (x100 256) (x2195 256)))
(assert (not x1325))
(assert (x1480 x203))
(assert (x1480 x336))
(assert (x1480 x2629))
(assert (x1480 x394))
(assert (x2739 (x3330 160)))
(assert (= (ite (= x3641 (x2873 41)) x2522 (x3516 x3641)) (x116 x3641)))
(assert (x1480 x286))
(assert (= (x3638 x3472) (ite (= x3472 736) x975 (x1239 x3472))))
(assert (x1480 x2519))
(assert (x1480 x876))
(assert (= (x212 800) (x2044 800)))
(assert (x1480 x2585))
(assert (= (x1223 x2076) (ite (and x3717 (not x1900)) (x1154 x2076) (x2416 x2076))))
(assert (x2739 (x2699 160)))
(assert (x2739 (x321 128)))
(assert (=> (>= 10000 (x226 128)) (= (x1157 (x226 128)) (x2873 (x226 128)))))
(assert (= (ite (= x2140 x2669) x1719 (x2381 x2669)) (x625 x2669)))
(assert (= (x625 x3292) (ite (= x3292 x2140) x1719 (x2381 x3292))))
(assert (x2739 (x2827 128)))
(assert (x1480 x191))
(assert (= (x1642 224) (x1582 224)))
(assert (= (x2703 384) (x2406 384)))
(assert (= (x2279 896) (x442 896)))
(assert (= (x2727 512) (x591 512)))
(assert (= (x802 320) (x1358 320)))
(assert (= (x1223 x1714) (ite (and x3717 (not x1900)) (x1154 x1714) (x2416 x1714))))
(assert (= (x3488 352) (x780 352)))
(assert (x1480 x1470))
(assert (= (ite (= 288 x202) x956 (x1990 x202)) (x587 x202)))
(assert (x2739 x585))
(assert (= (x625 (x2873 43)) (ite (= x2140 (x2873 43)) x1719 (x2381 (x2873 43)))))
(assert (x1480 x2469))
(assert (x1480 x2623))
(assert (= (x3190 (x2873 45)) (ite (and x2034 (not x2028)) (x3340 (x2873 45)) (x2866 (x2873 45)))))
(assert (x1480 x1813))
(assert (x2739 (x808 128)))
(assert (= (=> (and (= x1051 (x654 992)) (= x896 (< x1158 x1051)) (= x1158 (x2455 (+ x1051 x1379)))) (and (=> (not x896) x2928) (=> x896 x1698))) x1828))
(assert (x1480 x3683))
(assert (= (ite (and (not x2709) x1801) (x2671 (x2873 43)) (x2773 (x2873 43))) (x3565 (x2873 43))))
(assert (x1480 x3358))
(assert (= x2365 (and x3466 x1099)))
(assert (= (x1580 704) (x386 704)))
(assert (= (+ (x1739 x141) 2) (x1739 (x1844 x141 2))))
(assert (= (x1223 x620) (ite (and x3717 (not x1900)) (x1154 x620) (x2416 x620))))
(assert (= (x1642 x3105) (ite (= 256 x3105) 274184521717934524641157099916833587200 (x1582 x3105))))
(assert (x1480 x250))
(assert (= (x2139 896) (x675 896)))
(assert (x2739 (x188 160)))
(assert (x2739 (x3398 160)))
(assert (= (x1661 352) (x1904 352)))
(assert (= (x2498 544) (x1972 544)))
(assert (= (=> (and (= x394 (x116 (x2873 39))) (= (= x394 0) x750)) (and (=> (not x750) x2939) (=> x750 x1070))) x3116))
(assert (= (x2055 384) (x3177 384)))
(assert (x1480 x626))
(assert (x1480 x922))
(assert (x1480 x1043))
(assert (x1480 x2769))
(assert (= (x2873 4151200938) (x1157 4151200938)))
(assert (= x2549 (x2050 352)))
(assert (= (x124 160) (x1739 (x1157 (x124 160)))))
(assert (x1480 x3184))
(assert (= (ite (= x733 x2140) x1719 (x2381 x733)) (x625 x733)))
(assert (= (x1073 384) (x228 384)))
(assert (x1480 x352))
(assert (x1480 x2862))
(assert (x2739 (x740 160)))
(assert (= (x1739 (x1844 x3586 2)) (+ (x1739 x3586) 2)))
(assert (x1480 x1384))
(assert (= (x2671 (x2873 44)) (ite (and (not x2276) x2332) (x1981 (x2873 44)) (x1538 (x2873 44)))))
(assert (x1480 x1598))
(assert (= (x1739 (x1844 x1742 6)) (+ (x1739 x1742) 6)))
(assert (x1480 x1143))
(assert (=> (>= 10000 (x2387 160)) (= (x1157 (x2387 160)) (x2873 (x2387 160)))))
(assert (x2739 (x3529 160)))
(assert (= (x912 x2705) (ite (= x2705 x3114) x2558 (x1792 x2705))))
(assert (x1480 x3685))
(assert (x1480 x2355))
(assert (x1480 x3209))
(assert (=> (>= 10000 (x2491 128)) (= (x2873 (x2491 128)) (x1157 (x2491 128)))))
(assert (x2739 (x3007 160)))
(assert (= (x926 x700) (ite (and (not x1907) x2661) (x625 x700) (x2349 x700))))
(assert (= (and x2766 x2386) x3598))
(assert (= (x3061 x833) (ite (= x1727 x833) x2963 (x3316 x833))))
(assert (= (x1739 (x2873 347398766)) 347398766))
(assert (= (x3157 384) (ite (and x3717 x2668) (x605 384) (x1958 384))))
(assert (= (ite (and x3300 (not x1934)) (x912 (x2873 43)) (x3198 (x2873 43))) (x824 (x2873 43))))
(assert (x1480 x46))
(assert (= (x3505 800) (x2812 800)))
(assert (x1480 x1137))
(assert (x2739 (x128 128)))
(assert (x1480 x756))
(assert (= (x1243 192) 0))
(assert (= (x992 352) (x3634 352)))
(assert (= (ite (and x1835 x2211 (not x984)) (x2105 x753) (x3404 x753)) (x3013 x753)))
(assert (= (x2734 224) x134))
(assert (= (x1739 (x1157 (x2180 128))) (x2180 128)))
(assert (= x2378 (=> (= x3644 (< 0 x2909)) (and (=> x3644 x3602) (=> (not x3644) x1698)))))
(assert (= (x1739 (x1157 (x3569 160))) (x3569 160)))
(assert (=> (<= x2083 10000) (= (x2873 x2083) (x1157 x2083))))
(assert (= (ite (= (x2873 46) x3102) x1095 (x578 (x2873 46))) (x1178 (x2873 46))))
(assert (= x1665 (=> (and (= (= x2847 0) x2142) (= (x737 (- x1869 x2588)) x2848) (= x2847 (x1859 576))) (and (=> (not x2142) x3144) (=> x2142 x1698)))))
(assert (x1480 x3522))
(assert (= (x3213 320) (x505 320)))
(assert (= (x1739 (x1157 (x1021 128))) (x1021 128)))
(assert (= (ite (= x1727 (x2873 10)) x2963 (x3316 (x2873 10))) (x3061 (x2873 10))))
(assert (x1480 x1816))
(assert (x2739 (x3330 128)))
(assert (= (x3061 x2307) (ite (= x1727 x2307) x2963 (x3316 x2307))))
(assert (= (x2498 160) (x1739 (x1157 (x2498 160)))))
(assert (= (and x3426 (not x2142)) x1619))
(assert (x2739 (x65 160)))
(assert (= (+ 2 (x1739 x1503)) (x1739 (x1844 x1503 2))))
(assert (x1480 x2266))
(assert (= (x2812 224) (x3505 224)))
(assert (= (x1015 160) (x1739 (x1157 (x1015 160)))))
(assert (x1480 x1348))
(assert (= (x2139 832) (x675 832)))
(assert (x1480 x2850))
(assert (x1480 x777))
(assert (x1480 x1234))
(assert (= (+ 5 (x1739 x968)) (x1739 (x1844 x968 5))))
(assert (= (x1921 x202) (ite (= x202 864) x2843 (x1153 x202))))
(assert (x1480 x2507))
(assert (x1480 x928))
(assert (x1480 x2153))
(assert (= (x1223 (x2873 15)) (ite (and x3717 (not x1900)) (x1154 (x2873 15)) (x2416 (x2873 15)))))
(assert (x1480 x443))
(assert (x2739 (x2410 128)))
(assert (= 0 (x1691 x753)))
(assert (x1480 x2155))
(assert (x1480 x389))
(assert (x2739 (x1822 128)))
(assert (x1480 x2083))
(assert (= (ite (= 192 x3105) 0 (x965 x3105)) (x2743 x3105)))
(assert (x1480 x825))
(assert (=> (<= x1446 10000) (= (x1157 x1446) (x2873 x1446))))
(assert (= (x3330 800) (x1893 800)))
(assert (x1480 x1436))
(assert (=> (>= 10000 (x1765 128)) (= (x1157 (x1765 128)) (x2873 (x1765 128)))))
(assert (= (x1739 (x1157 (x826 160))) (x826 160)))
(assert (= (x116 x37) (ite (= x37 (x2873 41)) x2522 (x3516 x37))))
(assert (x1480 x954))
(assert (= (x2374 704) (x214 704)))
(assert (x1480 x106))
(assert (= (ite (and x1835 (not x3564)) (x1154 x1405) (x2777 x1405)) (x1089 x1405)))
(assert (= (ite (= (x2873 44) x3102) x1095 (x578 (x2873 44))) (x1178 (x2873 44))))
(assert (= (x625 x833) (ite (= x833 x2140) x1719 (x2381 x833))))
(assert (= (x214 x202) (ite (= x202 448) x1183 (x2374 x202))))
(assert (= (x1739 (x1157 (x2056 160))) (x2056 160)))
(assert (= (x1223 x146) (ite (and x3717 (not x1900)) (x1154 x146) (x2416 x146))))
(assert (x1480 x2658))
(assert (= (x116 x395) (ite (= x395 (x2873 41)) x2522 (x3516 x395))))
(assert (= (x1739 (x1157 (x2856 160))) (x2856 160)))
(assert (x1480 x108))
(assert (x1480 x2176))
(assert (= (x1157 773487949) (x2873 773487949)))
(assert (=> (>= 10000 (x2058 160)) (= (x1157 (x2058 160)) (x2873 (x2058 160)))))
(assert (= 0 (x1691 320)))
(assert (= (ite (= x3217 x58) x2266 (x3502 x58)) (x1981 x58)))
(assert (= (x3528 x202) (ite (= 256 x202) 274184521717934524641157099916833587200 (x2800 x202))))
(assert (= 1196925270 (x1739 (x2873 1196925270))))
(assert (= (ite (and (not x1907) x2661) (x625 x1171) (x2349 x1171)) (x926 x1171)))
(assert (= (x1483 832) (x3022 832)))
(assert (= (x1770 320) (x2911 320)))
(assert (x1480 x1497))
(assert (x1480 x829))
(assert (= (and x1603 x378) x2844))
(assert (= (x3565 x1573) (ite (and (not x2709) x1801) (x2671 x1573) (x2773 x1573))))
(assert (= (ite (= x3114 (x2873 45)) x2558 (x1792 (x2873 45))) (x912 (x2873 45))))
(assert (= (ite (and (not x1900) x3717) (x1154 x1275) (x2416 x1275)) (x1223 x1275)))
(assert (= (x3230 x930) 0))
(assert (x1480 x1602))
(assert (x1480 x1063))
(assert (= (x1580 352) (x14 352)))
(assert (=> (>= 10000 (x3330 128)) (= (x2873 (x3330 128)) (x1157 (x3330 128)))))
(assert (= 2869116585 (x1739 (x2873 2869116585))))
(assert (= (x188 448) (x1220 448)))
(assert (x1480 x2535))
(assert (= (x3702 x930) (ite (and x2889 (not x944) x1481) (x3726 x930) (x1161 x930))))
(assert (x1480 x3069))
(assert (x1480 x3093))
(assert (= (x3340 (x2873 45)) (ite (and (not x1300) x2034) (x1178 (x2873 45)) (x2267 (x2873 45)))))
(assert (= (x3528 x2857) (ite (= 256 x2857) 274184521717934524641157099916833587200 (x2800 x2857))))
(assert (= (x1739 (x2873 1851080549)) 1851080549))
(assert (x2739 (x1837 128)))
(assert (=> (>= 10000 (x2498 128)) (= (x2873 (x2498 128)) (x1157 (x2498 128)))))
(assert (=> (<= (x3428 128) 10000) (= (x2873 (x3428 128)) (x1157 (x3428 128)))))
(assert (= x2929 (or (and x1827 x1352) (and x1451 (not x1442)) (and (not x1617) x2342))))
(assert (= (ite (and x3717 (not x1900)) (x1154 x3416) (x2416 x3416)) (x1223 x3416)))
(assert (=> (<= (x2159 160) 10000) (= (x1157 (x2159 160)) (x2873 (x2159 160)))))
(assert (= (x651 384) (x2045 384)))
(assert (= (ite (and (not x1300) x2034) (x1178 (x2873 47)) (x2267 (x2873 47))) (x3340 (x2873 47))))
(assert (x1480 x1490))
(assert (x1480 x722))
(assert (= x1756 (and x506 (not x3343))))
(assert (x1480 x470))
(assert (= (x1739 (x1157 (x2806 128))) (x2806 128)))
(assert (= (x3570 512) (x208 512)))
(assert (= (x2489 224) (x1243 224)))
(assert (= x262 (=> (= (> x3008 31) x1352) (and (=> (not x1352) x1698) (=> (and (or (and (= x3666 (x1024 544)) (= (ite (> x3666 x1072) x1072 x3666) x2732) (not x840) (= (x1024 512) x1072)) x840) (= x586 (ite (> x275 x1452) x1452 x275)) (= x1452 (x2329 576)) (= (x1024 480) x81) (= x840 (< x990 x81)) x1352 (= x990 (x1024 544))) x2375)))))
(assert (= (x2191 384) (x808 384)))
(assert (= (x2249 352) (x1098 352)))
(assert (= x3126 (x3213 352)))
(assert (= (x965 384) (x2743 384)))
(assert (x1480 x2231))
(assert (= (+ (x1739 x2962) 5) (x1739 (x1844 x2962 5))))
(assert (= (x3726 x848) (ite (= x848 704) x2155 (x3037 x848))))
(assert (x1480 x2804))
(assert (= (x1641 384) (x1383 384)))
(assert (= x1447 (=> (and (= (< x285 x2022) x122) (= x285 (x1915 352)) (= x2022 (x1915 320))) (and (=> (and (not x122) (= x2110 (x737 (- x285 x2022)))) x3099) (=> x122 x1698)))))
(assert (= (ite (and (not x3564) x1835) (x1154 x2185) (x2777 x2185)) (x1089 x2185)))
(assert (= (=> (and (= (> x2503 0) x3520) (= (x1239 768) x975) (= x2503 (x3638 640)) (= x2907 (x128 416)) (= x1307 (x194 416)) (= x2963 (x2455 (+ x1794 x3131)))) (and (=> x3520 x3077) (=> (not x3520) x1165))) x613))
(assert (x1480 x79))
(assert (x1480 x1309))
(assert (x2739 (x1017 160)))
(assert (= (x1739 (x1157 (x100 160))) (x100 160)))
(assert (= (ite (and (not x3564) x1835) (x1154 x667) (x2777 x667)) (x1089 x667)))
(assert (x1480 x2684))
(assert (x1480 x820))
(assert (x2739 (x3446 128)))
(assert (x1480 x1196))
(assert (= (x1739 (x1157 (x3529 128))) (x3529 128)))
(assert (= (ite (and (not x1907) x2661) (x625 x2076) (x2349 x2076)) (x926 x2076)))
(assert (x1480 x478))
(assert (= (x1339 800) (ite (and (not x1300) x2034) (x1074 800) (x3492 800))))
(assert (= (x3190 x1727) (ite (and (not x2028) x2034) (x3340 x1727) (x2866 x1727))))
(assert (= (x2498 512) (x1972 512)))
(assert (x2739 (x664 160)))
(assert (= x323 (=> (and (= (x459 416) x79) (= (= x79 0) x1042)) (and (=> x1042 x1698) (=> (not x1042) x553)))))
(assert (x1480 x1219))
(assert (x1480 x2295))
(assert (= (x1739 (x2873 596573372)) 596573372))
(assert (x1480 x1607))
(assert (=> (>= 10000 (x2056 128)) (= (x1157 (x2056 128)) (x2873 (x2056 128)))))
(assert (x1480 x1920))
(assert (x1480 x2690))
(assert (= (x82 160) (x1739 (x1157 (x82 160)))))
(assert (= (x2873 3147386184) (x1157 3147386184)))
(assert (= (x330 x772) (ite (= x772 256) 274184521717934524641157099916833587200 (x2458 x772))))
(assert true)
(assert (x1480 x2299))
(assert (x1480 x3523))
(assert (= (x3702 352) (ite (and x1481 x2889 (not x944)) (x3726 352) (x1161 352))))
(assert (x1480 x2167))
(assert (= (and x1013 (not x731)) x2741))
(assert (= (ite (and (not x2028) x2034) (x3340 (x2873 47)) (x2866 (x2873 47))) (x3190 (x2873 47))))
(assert (= 16192718 (x1739 (x2873 16192718))))
(assert (= (x1216 352) (x3353 352)))
(assert (= (x229 (x2873 10)) (ite (= (x2873 10) x2328) x1240 (x639 (x2873 10)))))
(assert (x1480 x3571))
(assert (x1480 x267))
(assert (x1480 x2719))
(assert (x1480 x1319))
(assert (= (x3609 352) (x3721 352)))
(assert (x1480 x339))
(assert (= (=> (and (= x2390 (> x728 x2351)) (= x728 (x2508 352)) (= (x2508 320) x2351)) (and (=> x2390 x2409) (=> (not x2390) x3056))) x2400))
(assert (= (x229 x846) (ite (= x2328 x846) x1240 (x639 x846))))
(assert (= (x2329 512) (x1024 512)))
(assert (= (x1739 (x1157 (x2387 128))) (x2387 128)))
(assert (= (x653 (x2873 45)) (ite (and (not x3520) x730) (x3061 (x2873 45)) (x2099 (x2873 45)))))
(assert (x1480 x281))
(assert (=> (>= 10000 (x2699 160)) (= (x2873 (x2699 160)) (x1157 (x2699 160)))))
(assert (x1480 x1806))
(assert (x1480 x3622))
(assert (x1480 x2878))
(assert (= (x26 800) (x1686 800)))
(assert (= (x653 (x2873 40)) (ite (and (not x3520) x730) (x3061 (x2873 40)) (x2099 (x2873 40)))))
(assert (= (x3313 320) (x736 320)))
(assert (= (ite (= x3292 (x2873 41)) x2522 (x3516 x3292)) (x116 x3292)))
(assert (x2739 (x228 128)))
(assert (= (ite (= x3114 (x2873 43)) x2558 (x1792 (x2873 43))) (x912 (x2873 43))))
(assert (= (x1016 160) (x1739 (x1157 (x1016 160)))))
(assert (= (x2743 x738) (ite (= 192 x738) 0 (x965 x738))))
(assert (= (x116 x796) (ite (= x796 (x2873 41)) x2522 (x3516 x796))))
(assert (x1480 x2503))
(assert (x1480 x3173))
(assert (x1480 x2521))
(assert (= x3649 x3717))
(assert (= (x2143 256) (x522 256)))
(assert (= (x2498 128) (x1739 (x1157 (x2498 128)))))
(assert (x2739 (x3569 128)))
(assert (= (x185 x753) (ite (= x753 864) x1805 (x1710 x753))))
(assert (x2739 (x124 128)))
(assert (x1480 x3050))
(assert (=> (<= (x2648 160) 10000) (= (x1157 (x2648 160)) (x2873 (x2648 160)))))
(assert (= (x1483 288) (x3022 288)))
(assert (=> (>= 10000 (x226 160)) (= (x1157 (x226 160)) (x2873 (x226 160)))))
(assert (= (x3075 800) (x2376 800)))
(assert (= x199 (and (not x896) x64)))
(assert (= (x288 800) (x1159 800)))
(assert (= (x1739 (x1844 x1076 5)) (+ 5 (x1739 x1076))))
(assert (= (x3157 x848) (ite (and x3717 x2668) (x605 x848) (x1958 x848))))
(assert (x1480 x172))
(assert (= (ite (and (not x3440) (not x2923) x2385) (x268 x738) (x2068 x738)) (x1520 x738)))
(assert (= (x2800 704) (x3528 704)))
(assert (x1480 x2738))
(assert (x1480 x1414))
(assert (= (x3190 x1714) (ite (and (not x2028) x2034) (x3340 x1714) (x2866 x1714))))
(assert (x1480 x2645))
(assert (= (x1739 (x1157 (x925 160))) (x925 160)))
(assert (= (x1739 (x1157 (x2249 160))) (x2249 160)))
(assert (= (=> (= x1038 (x920 704)) x3711) x259))
(assert (= (x3177 x3397) (ite (= x3397 288) x1850 (x2055 x3397))))
(assert (= (=> (and (= x1909 (> x3391 0)) (= (x1520 704) x3391)) (and (=> (not x1909) x822) (=> x1909 x2593))) x2992))
(assert (x1480 x2893))
(assert (x1480 x1585))
(assert (x1480 x2229))
(assert (= (ite (= x3641 x1727) x2963 (x3316 x3641)) (x3061 x3641)))
(assert (x1480 x3551))
(assert (x2739 (x1822 160)))
(assert (= (x3313 384) (x736 384)))
(assert (= (x1387 448) x964))
(assert (= (x2129 (x2873 9)) (ite (and x1568 (not x1761)) (x116 (x2873 9)) (x3254 (x2873 9)))))
(assert (= (x1739 (x2873 3877814014)) 3877814014))
(assert (= (x116 (x2873 10)) (ite (= (x2873 10) (x2873 41)) x2522 (x3516 (x2873 10)))))
(assert (= (ite (and x2034 (not x2028)) (x3340 x3244) (x2866 x3244)) (x3190 x3244)))
(assert (x1480 x2890))
(assert (x1480 x1732))
(assert (= (x1739 (x1844 x943 6)) (+ 6 (x1739 x943))))
(assert (x1480 x3360))
(assert (x1480 x1964))
(assert (= (x926 x2307) (ite (and (not x1907) x2661) (x625 x2307) (x2349 x2307))))
(assert (= (x912 x278) (ite (= x3114 x278) x2558 (x1792 x278))))
(assert (x1480 x2977))
(assert (= (x1157 1823829273) (x2873 1823829273)))
(assert (x1480 x1720))
(assert (= (ite (and (not x1761) x1568) (x116 x1209) (x3254 x1209)) (x2129 x1209)))
(assert (x1480 x2641))
(assert (x2739 (x1281 160)))
(assert (x1480 x3044))
(assert (= (x3721 224) (x3609 224)))
(assert (= (x1739 (x2873 60465744)) 60465744))
(assert (= x1201 (and x2673 x246)))
(assert (= (x2011 352) (x1655 352)))
(assert (= (x1178 x2076) (ite (= x3102 x2076) x1095 (x578 x2076))))
(assert (= (ite (and (not x3520) x730) (x3061 (x2873 43)) (x2099 (x2873 43))) (x653 (x2873 43))))
(assert (= 3184473787 (x1739 (x2873 3184473787))))
(assert (= (ite (= x738 256) 274184521717934524641157099916833587200 (x1582 x738)) (x1642 x738)))
(assert (= (x1644 896) (ite (and x3717 (not x112)) (x1696 896) (x196 896))))
(assert (= (=> (and (= x3334 (mod (* x2541 x3482) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2622 (= (ite x2594 1 0) 0)) (= (or x1897 x860) x2594) (= x860 (= x596 x2541)) (= x2541 (x116 (x2873 39))) (= x3482 (x3064 256)) (= x1897 (= 0 x3482)) (= x596 (div x3334 x3482))) (and (=> x2622 x1698) (=> (not x2622) x2451))) x2939))
(assert (= (x2671 x176) (ite (and (not x2276) x2332) (x1981 x176) (x1538 x176))))
(assert (x1480 x1208))
(assert (x1480 x1544))
(assert (= x775 (=> (and (= x3216 (x2387 864)) (= x2036 (x2387 896)) (= (< x3216 x2036) x3332) (= (x737 (- x3469 x3610)) x1720)) (and (=> (and (= (x737 (- x3216 x2036)) x1585) (not x3332)) x2723) (=> x3332 x1698)))))
(assert (= (x330 864) (x2458 864)))
(assert (= (x1170 224) (x1378 224)))
(assert (= (=> (and (= x1731 (not x1868)) (= x232 x1868) (= x3395 x1731)) x3395) x3315))
(assert (= (x1157 2572356358) (x2873 2572356358)))
(assert (= (x912 (x2873 10)) (ite (= x3114 (x2873 10)) x2558 (x1792 (x2873 10)))))
(assert (= (x3446 128) (x1739 (x1157 (x3446 128)))))
(assert (= (x1739 (x1157 (x3719 128))) (x3719 128)))
(assert (= (x1739 (x1157 (x321 128))) (x321 128)))
(assert (= (+ 1 (x1739 x3362)) (x1739 (x1844 x3362 1))))
(assert (x1480 x2373))
(assert (= (ite (= (x2873 15) x2140) x1719 (x2381 (x2873 15))) (x625 (x2873 15))))
(assert (=> (>= 10000 (x3529 160)) (= (x2873 (x3529 160)) (x1157 (x3529 160)))))
(assert (= x2333 (=> (= x246 (< 31 x940)) (and (=> (not x246) x1698) (=> x246 x3677)))))
(assert (x2739 (x3719 128)))
(assert (= (ite (and x3581 x841 (not x1942)) (x3059 320) (x3716 320)) (x1140 320)))
(assert (x1480 x1466))
(assert (= (x116 (x2873 47)) (ite (= (x2873 41) (x2873 47)) x2522 (x3516 (x2873 47)))))
(assert (= (x651 x3472) (ite (= 448 x3472) x148 (x2045 x3472))))
(assert (x1480 x134))
(assert (x1480 x799))
(assert (x1480 x1373))
(assert (= (x2173 384) (x3240 384)))
(assert (=> (<= (x1770 160) 10000) (= (x1157 (x1770 160)) (x2873 (x1770 160)))))
(assert (x1480 x1393))
(assert (= (x1157 3877814014) (x2873 3877814014)))
(assert (=> (<= (x2335 160) 10000) (= (x1157 (x2335 160)) (x2873 (x2335 160)))))
(assert (x1480 x244))
(assert (= (+ (x1739 x2852) 3) (x1739 (x1844 x2852 3))))
(assert (x1480 x283))
(assert (x1480 x746))
(assert (= (ite (= x3114 x3003) x2558 (x1792 x3003)) (x912 x3003)))
(assert (x1480 x2528))
(assert (x1480 x2233))
(assert (= (x100 320) (x2195 320)))
(assert (x1480 x656))
(assert (x1480 x2351))
(assert (x1480 x1583))
(assert (x2739 (x65 128)))
(assert (= (x1739 (x1157 x2067)) x2067))
(assert (x1480 x805))
(assert (x2739 (x188 128)))
(assert (= (x1140 384) (ite (and (not x1942) x3581 x841) (x3059 384) (x3716 384))))
(assert (x1480 x3445))
(assert (= (x3340 x3471) (ite (and (not x1300) x2034) (x1178 x3471) (x2267 x3471))))
(assert (= (=> (and (= (x2455 (+ 352 x2497)) x930) (= x149 (x2143 256)) (= (x2143 192) x2828) (= x1647 (= x149 x2789)) (= (mod (* x2828 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2497) (= x2789 (x2143 x930))) (and x1647 x3578)) x1593))
(assert (= (x1739 (x1157 (x3178 128))) (x3178 128)))
(assert (= (x653 x2927) (ite (and (not x3520) x730) (x3061 x2927) (x2099 x2927))))
(assert (= (x413 384) (x3609 384)))
(assert (= (x1178 x1032) (ite (= x1032 x3102) x1095 (x578 x1032))))
(assert (= (x1739 (x2873 1401663147)) 1401663147))
(assert (x1480 x1118))
(assert (= (ite (and (not x2028) x2034) (x3340 x3292) (x2866 x3292)) (x3190 x3292)))
(assert (= (ite (and (not x1934) x3300) (x912 x2705) (x3198 x2705)) (x824 x2705)))
(assert (= (ite (= x3102 x3166) x1095 (x578 x3166)) (x1178 x3166)))
(assert (x1480 x1357))
(assert (= (x1605 x1319) (ite (= x1319 288) x1850 (x1299 x1319))))
(assert (= (x2703 x1319) (ite (= x1319 832) x1850 (x2406 x1319))))
(assert (= (x1701 800) (x2747 800)))
(assert (x1480 x949))
(assert (=> (<= (x1626 160) 10000) (= (x2873 (x1626 160)) (x1157 (x1626 160)))))
(assert (x1480 x2302))
(assert (x2739 (x1469 160)))
(assert (= (x2018 (x2873 44)) (ite (and x3717 (not x2676)) (x2445 (x2873 44)) (x271 (x2873 44)))))
(assert (= x1730 (and x1542 x404)))
(assert (x1480 x11))
(assert (= (x3190 x2307) (ite (and (not x2028) x2034) (x3340 x2307) (x2866 x2307))))
(assert (= (ite (= x3416 (x2873 41)) x2522 (x3516 x3416)) (x116 x3416)))
(assert (= (x1739 (x1844 x2606 6)) (+ 6 (x1739 x2606))))
(assert (x1480 x3334))
(assert (x1480 x3060))
(assert (= (=> (= x232 true) x2308) x1698))
(assert (= (ite (and (not x1300) x2034) (x1178 x833) (x2267 x833)) (x3340 x833)))
(assert (x1480 x910))
(assert (x2739 (x3243 128)))
(assert (x1480 x1659))
(assert (= (x2700 256) (x3452 256)))
(assert (= (x1739 (x1157 (x3329 160))) (x3329 160)))
(assert (= (=> (and (= x3030 (< 0 x1860)) (= (x926 x620) x1860) (= (x868 (x1157 (x228 128)) (x1157 (x228 160)) 0) x620)) (and (=> x3030 x2077) (=> (not x3030) x1872))) x2695))
(assert (x1480 x3135))
(assert (= (ite (= 704 x202) x2155 (x3037 x202)) (x3726 x202)))
(assert (= (x1739 (x2873 2757214935)) 2757214935))
(assert (= (x2294 224) (x362 224)))
(assert (= (x2800 384) (x3528 384)))
(assert (= (x268 512) (x2831 512)))
(assert (=> (>= 10000 (x65 128)) (= (x2873 (x65 128)) (x1157 (x65 128)))))
(assert (= (=> (and (= x2966 (x2671 x3292)) (= x2318 (x868 (x1157 (x3417 128)) (x1157 (x3417 160)) 0)) (= x1920 (x3417 832)) (= (x2455 (+ x1920 x2966)) x703) (= (< x703 x2966) x2861) (= x3292 (x1844 x2318 6))) (and (=> (not x2861) x2243) (=> x2861 x1698))) x1980))
(assert (x2739 (x460 128)))
(assert (= (x2445 x2763) (ite (and (not x112) x3717) (x229 x2763) (x3257 x2763))))
(assert (= (ite (and (not x1900) x3717) (x1154 (x2873 9)) (x2416 (x2873 9))) (x1223 (x2873 9))))
(assert (= (x2743 192) 0))
(assert (= (x543 x3105) (ite (= 832 x3105) x1850 (x1865 x3105))))
(assert (= 0 (x1764 x1319)))
(assert (x1480 x2245))
(assert (= (x1261 x88 x1318) (div x88 (x1389 2 x1318))))
(assert (= x2956 x2729))
(assert (x1480 x1705))
(assert (= (x2195 352) (x100 352)))
(assert (x1480 x1530))
(assert (= (x1739 (x2873 1823829273)) 1823829273))
(assert (x1480 x2197))
(assert (x1480 x1237))
(assert (= (x2129 x2307) (ite (and x1568 (not x1761)) (x116 x2307) (x3254 x2307))))
(assert (= x585 (x1739 (x1157 x585))))
(assert (= (x1739 (x1157 (x3330 160))) (x3330 160)))
(assert (x1480 x1385))
(assert (= (x2440 320) (x3251 320)))
(assert (x1480 x2337))
(assert (= (x1580 224) (x14 224)))
(assert (= (ite (and (not x1300) x2034) (x1178 (x2873 9)) (x2267 (x2873 9))) (x3340 (x2873 9))))
(assert (x1480 x1269))
(assert (= (x992 288) x2460))
(assert (= (x268 x3105) (ite (= 704 x3105) x3683 (x2831 x3105))))
(assert (=> (<= (x3418 160) 10000) (= (x1157 (x3418 160)) (x2873 (x3418 160)))))
(assert (= (x1181 x3105) (ite (= 320 x3105) x2855 (x1474 x3105))))
(assert (= (x926 (x2873 45)) (ite (and x2661 (not x1907)) (x625 (x2873 45)) (x2349 (x2873 45)))))
(assert (= (x3404 320) (x3394 320)))
(assert (= (x1178 x1714) (ite (= x3102 x1714) x1095 (x578 x1714))))
(assert (x1480 x224))
(assert (= (x936 800) (x2145 800)))
(assert (= (x625 x3416) (ite (= x2140 x3416) x1719 (x2381 x3416))))
(assert (x1480 x260))
(assert (x1480 x1995))
(assert (= (x2508 x1319) (ite (= x1319 352) x1537 (x3569 x1319))))
(assert (= (x1541 384) (x1875 384)))
(assert (= (x591 384) (x2727 384)))
(assert (x1480 x2586))
(assert (x2739 (x1837 160)))
(assert (= (ite (= 256 x930) 274184521717934524641157099916833587200 (x2294 x930)) (x362 x930)))
(assert (x1480 x1658))
(assert (= (x1223 x1727) (ite (and x3717 (not x1900)) (x1154 x1727) (x2416 x1727))))
(assert (= (=> (and (= x842 (= x53 0)) (= x53 (x646 960))) (and (=> x842 x1698) (=> (not x842) x3167))) x3128))
(assert (= (x926 x796) (ite (and x2661 (not x1907)) (x625 x796) (x2349 x796))))
(assert (x1480 x3231))
(assert (=> (>= 10000 (x3532 128)) (= (x1157 (x3532 128)) (x2873 (x3532 128)))))
(assert (= (x1089 x3461) (ite (and x1835 (not x3564)) (x1154 x3461) (x2777 x3461))))
(assert (x1480 x1305))
(assert (= (x509 352) (x2875 352)))
(assert (= (x1859 x3472) (ite (= 576 x3472) x2848 (x1015 x3472))))
(assert (= (x1739 (x2873 3567397854)) 3567397854))
(assert (= (ite (= 224 x3397) x210 (x2726 x3397)) (x713 x3397)))
(assert (x1480 x309))
(assert (= (ite (= x2140 x3471) x1719 (x2381 x3471)) (x625 x3471)))
(assert (x1480 x2345))
(assert (x1480 x1458))
(assert (= x1186 (=> (= x1761 (< 0 x326)) (and (=> x1761 x2126) (=> (not x1761) x2901)))))
(assert (x1480 x285))
(assert (= (x2195 x3397) (ite (= x3397 288) x2464 (x100 x3397))))
(assert (= (x1859 352) (x1015 352)))
(assert (x1480 x1673))
(assert (= (x912 (x2873 40)) (ite (= x3114 (x2873 40)) x2558 (x1792 (x2873 40)))))
(assert (x1480 x1380))
(assert (= (x587 384) (x1990 384)))
(assert (= (x3528 x930) (ite (= 256 x930) 274184521717934524641157099916833587200 (x2800 x930))))
(assert (=> (>= 10000 (x2159 128)) (= (x1157 (x2159 128)) (x2873 (x2159 128)))))
(assert (x1480 x1222))
(assert (x1480 x956))
(assert (= (ite (= x1727 x176) x2963 (x3316 x176)) (x3061 x176)))
(assert (x1480 x940))
(assert (x1480 x974))
(assert (= (div x2798 (x1389 2 x1391)) (x1261 x2798 x1391)))
(assert (x1480 x1240))
(assert (= (x3157 320) (ite (and x2668 x3717) (x605 320) (x1958 320))))
(assert (= x2375 (=> (and (= x1918 (> x3722 0)) (= x3722 (x1981 (x2873 39))) (= (x319 864) x2178)) (and (=> (and (= x429 (x1844 x120 6)) (= x457 (x1358 288)) (not x1918) (= (x868 (x1157 (x1281 128)) (x1157 (x1281 160)) 0) x120) (= (x1981 x429) x949)) x3099) (=> (and (= (x1981 x3166) x1923) (= x789 (x868 (x1157 (x3161 128)) (x1157 (x3161 160)) 0)) (= (< 0 x1004) x3303) (or (and (= x2551 x1004) (not x3303)) (and (= x2551 1) x3303 (> 4294967296 x3630))) x1918 (= (x1358 288) x2803) (= x3166 (x1844 x789 2))) x867)))))
(assert (x1480 x365))
(assert (x1480 x88))
(assert (x1480 x1297))
(assert (= (x3488 128) (x1739 (x1157 (x3488 128)))))
(assert (= (x625 x796) (ite (= x796 x2140) x1719 (x2381 x796))))
(assert (= (ite (and x2034 (not x1300)) (x1178 x3512) (x2267 x3512)) (x3340 x3512)))
(assert (= (ite (= x2857 832) x956 (x1159 x2857)) (x288 x2857)))
(assert (= (x165 x202) (ite (= x202 320) x900 (x664 x202))))
(assert (x1480 x1122))
(assert (= (x170 160) (x1739 (x1157 (x170 160)))))
(assert (x2739 (x226 128)))
(assert (= (x664 288) (x165 288)))
(assert (= (ite (and (not x1900) x3717) (x1154 x2815) (x2416 x2815)) (x1223 x2815)))
(assert (= (x1739 (x1157 (x373 160))) (x373 160)))
(assert (x1480 x3005))
(assert (x1480 x1923))
(assert (x1480 x921))
(assert (= (x2727 576) (x591 576)))
(assert (=> (<= (x2249 160) 10000) (= (x2873 (x2249 160)) (x1157 (x2249 160)))))
(assert (x1480 x3704))
(assert (x1480 x2199))
(assert (= (x2743 288) (x965 288)))
(assert (x1480 x1627))
(assert (= (=> (and (= (x2525 (x1157 x585)) x1985) (= x3027 (= 0 x1985)) (= (x901 800) x2382) (= (x116 (x2873 15)) x585)) (and (=> (and (= (> x2596 0) x2470) (= (x116 (x2873 15)) x2067) (or (and (= (= (x2138 (x1157 x2067)) x3197) x1487) (= (>= (x2138 (x1157 274184521717934524641157099916833587200)) x1680) x611) (> 4294967296 x291) x611 x1487 (= x3197 (x2088 (x1157 x2067))) x2470 (= x1680 (x2088 (x1157 274184521717934524641157099916833587200)))) (not x2470)) (not x3027)) x1878) (=> x3027 x1698))) x3203))
(assert (= (ite (and (not x2028) x2034) (x3340 (x2873 41)) (x2866 (x2873 41))) (x3190 (x2873 41))))
(assert (= (ite (= x58 x1727) x2963 (x3316 x58)) (x3061 x58)))
(assert (= (x1739 (x1157 (x1044 128))) (x1044 128)))
(assert (= (x226 128) (x1739 (x1157 (x226 128)))))
(assert (=> (<= (x3329 160) 10000) (= (x2873 (x3329 160)) (x1157 (x3329 160)))))
(assert (x2739 (x3418 160)))
(assert (=> (>= 10000 (x1216 160)) (= (x2873 (x1216 160)) (x1157 (x1216 160)))))
(assert (x1480 x1666))
(assert (= (x812 352) (x623 352)))
(assert (x1480 x1973))
(assert (x1480 x3150))
(assert (= (ite (= x1329 736) x2042 (x1227 x1329)) (x3689 x1329)))
(assert (x1480 x457))
(assert (= x1365 x2509))
(assert (x1480 x3556))
(assert (x2739 (x100 128)))
(assert (= x2008 (or (and (not x2476) x1526) (and (not x3520) x730))))
(assert (= (and x607 (not x2622)) x1993))
(assert (= (x1140 640) (ite (and x3581 (not x1942) x841) (x3059 640) (x3716 640))))
(assert (= x2157 (=> (and (not (= 0 x606)) (= x1283 (x1844 x968 5)) (= x968 (x868 (x1157 (x2498 128)) (x1157 (x2498 160)) 0)) (= x777 (x1223 x1283)) (= x2708 (x3301 512)) (= x2889 (> x2373 0)) (= (x737 (- x2522 x777)) x3109) (= x2373 (x1972 544)) (= (x1972 576) x606) (not (< x3238 x777))) (and (=> (not x2889) x297) (=> (and (= (div x3342 10000) x1578) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x544 x1122))) (= (= x1439 x301) x1671) (= (= x2316 x3548) x883) (= (div x3271 x2265) x325) (not (= x62 0)) (= (> x1648 x2519) x944) (= x2265 (x1740 544)) (= x2407 (div x3271 10000)) (not (= x702 0)) (= x2155 (x2455 (+ x544 x1122))) (= (= x398 x325) x3366) (= x1658 (div x3342 x479)) (not (= 0 x3706)) (= x470 (div x2020 10000)) (= x2775 (x2433 512)) (= (= x479 0) x3515) (= x2554 (= x1271 x1658)) (= (div x470 31556952) x2678) (= (ite x2356 1 0) x221) (= x2316 (div x127 x1208)) (= (x2607 640) x3311) (= x1392 (x868 (x1157 (x208 128)) (x1157 (x208 160)) 0)) (= (x3726 704) x1648) (not (< x2311 x3311)) (= x1842 (x1972 512)) (> x3629 0) (= x2430 (x3037 672)) (= (x2607 576) x3548) (= (x1223 (x2873 46)) x1439) (= x421 (or x3366 x595)) (= x1271 (x1223 x1275)) (or (and x481 (< x2024 4294967296) (= 1 x3629)) (and (= x204 x3629) (not x481))) (= (x3726 544) x2519) (= x2020 (mod (* x1439 x127) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1223 x146) x2311) (or (not x944) (and (= (x3726 544) x1463) x944)) (= x3271 (mod (* x2265 x398) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (mod (* x1208 x3548) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x127) (= x702 (ite x421 1 0)) (< 31 x2024) (= x1208 (x737 (- x2311 x3311))) (not (= x221 0)) (= x146 (x1844 x1392 6)) (= (x868 (x1157 (x3418 128)) (x1157 (x3418 160)) 0) x1275) (= x301 (div x2020 x127)) (= x3706 (ite x1930 1 0)) (= x1986 (= 0 x127)) (= x1930 (or x3568 x883)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x54 x2430))) (= x479 (x2433 544)) (= (or x3515 x2554) x2356) (= x398 (x1223 (x2873 47))) (= x62 (ite x24 1 0)) (= (= 0 x1208) x3568) (= (x2455 (+ x2430 x54)) x1122) (= x544 (x3037 608)) (= (x3037 640) x54) x2889 (= (mod (* x479 x1271) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3342) (= x24 (or x1671 x1986)) (= (< 0 x204) x481) (= (= x2265 0) x595)) x282)))))
(assert (= (ite (and x730 (not x3520)) (x3061 x3512) (x2099 x3512)) (x653 x3512)))
(assert (= (x3407 832) (x2689 832)))
(assert (x1480 x2551))
(assert (= (x808 512) (x2191 512)))
(assert (x1480 x3123))
(assert (= (x1489 384) (ite (and x3717 x3577 (not x1753)) (x1485 384) (x288 384))))
(assert (=> (>= 10000 x582) (= (x2873 x582) (x1157 x582))))
(assert (x1480 x2465))
(assert (x1480 x2496))
(assert (= (ite (and x1481 x2889 (not x944)) (x3726 x202) (x1161 x202)) (x3702 x202)))
(assert (= (ite (and (not x944) x2889 x1481) (x3726 704) (x1161 704)) (x3702 704)))
(assert (= 16 (x2856 128)))
(assert (= x2032 (=> (= x2766 (> x1337 0)) (and (=> x2766 x27) (=> (not x2766) x1698)))))
(assert (x1480 x2863))
(assert (= (x1770 160) (x2911 160)))
(assert (= (ite (and x3300 (not x1934)) (x912 x136) (x3198 x136)) (x824 x136)))
(assert (= (ite (and (not x2028) x2034) (x3340 (x2873 9)) (x2866 (x2873 9))) (x3190 (x2873 9))))
(assert (= (ite (= 1152 x1319) x974 (x812 x1319)) (x623 x1319)))
(assert (= (x1223 x3136) (ite (and (not x1900) x3717) (x1154 x3136) (x2416 x3136))))
(assert (x1480 x2177))
(assert (= (ite (= 224 x738) x316 (x1268 x738)) (x333 x738)))
(assert (x1480 x1367))
(assert (= (and x1515 (not x1724)) x2651))
(assert (= (x1483 800) (x3022 800)))
(assert (= (x2689 800) (x3407 800)))
(assert (x1480 x2789))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1739 (x2873 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (= (ite (= x3472 320) x2855 (x1474 x3472)) (x1181 x3472)))
(assert (x2739 (x1148 128)))
(assert (x2739 (x3372 160)))
(assert (x1480 x3462))
(assert (x1480 x382))
(assert (=> (>= 10000 (x1044 128)) (= (x1157 (x1044 128)) (x2873 (x1044 128)))))
(assert (= (ite (= x3102 x3641) x1095 (x578 x3641)) (x1178 x3641)))
(assert (= (x3061 x3166) (ite (= x3166 x1727) x2963 (x3316 x3166))))
(assert (= (x212 896) (x2044 896)))
(assert (= (x1739 (x1157 (x3488 160))) (x3488 160)))
(assert (= (x2129 x37) (ite (and x1568 (not x1761)) (x116 x37) (x3254 x37))))
(assert (= (x1739 (x1157 (x3363 160))) (x3363 160)))
(assert (= (x1981 x3166) (ite (= x3166 x3217) x2266 (x3502 x3166))))
(assert (= (ite (= (x2873 41) x3166) x2522 (x3516 x3166)) (x116 x3166)))
(assert (x1480 x3442))
(assert (x1480 x1370))
(assert (=> (>= 10000 (x2856 160)) (= (x1157 (x2856 160)) (x2873 (x2856 160)))))
(assert (x1480 x644))
(assert (= (x2671 x1573) (ite (and (not x2276) x2332) (x1981 x1573) (x1538 x1573))))
(assert (= (x3634 128) (x1739 (x1157 (x3634 128)))))
(assert (= (ite (= x3397 1152) x3220 (x1881 x3397)) (x1302 x3397)))
(assert (x1480 x1787))
(assert (= (ite (= x1632 x2328) x1240 (x639 x1632)) (x229 x1632)))
(assert (= x621 (and x2009 x2729)))
(assert (= (ite (= 320 x1319) x2855 (x1474 x1319)) (x1181 x1319)))
(assert (= (+ (x1739 x789) 2) (x1739 (x1844 x789 2))))
(assert (= (x1739 (x1157 (x1741 160))) (x1741 160)))
(assert (= x2000 (or (and x404 (not x1542)) (and x1682 x1926) (and x274 (not x2390)) (and (not x2518) x1386))))
(assert (= (x3153 800) (x2063 800)))
(assert (= (ite (and x3300 (not x1934)) (x912 x1836) (x3198 x1836)) (x824 x1836)))
(assert (= (=> (and (= (x2455 (+ x3280 x2404)) x3282) (= (x318 288) x2404) (= x1466 (x737 (- x1334 x2362))) (= (x868 (x1157 (x318 128)) (x1157 (x318 160)) 0) x2307) (= (> x3280 x3282) x1938) (= x3280 (x2786 x2307)) (= (x3372 256) x1150)) (and (=> (and (= (x2455 (+ x3280 x2404)) x1688) (= x699 (x318 288)) (not x1938)) x822) (=> x1938 x1698))) x197))
(assert (= x370 (=> (and (= x187 (x2718 960)) (= (x737 (- x3082 x1429)) x2910) (= (< x326 x187) x3657)) (and (=> (not x3657) x3730) (=> x3657 x2264)))))
(assert (= (x2143 x930) (ite (= x930 192) x545 (x522 x930))))
(assert (x1480 x3324))
(assert (= (x1972 x2857) (ite (= 576 x2857) x3109 (x2498 x2857))))
(assert (x1480 x1247))
(assert (x1480 x1278))
(assert (x2739 (x3339 128)))
(assert (= (ite (= x3114 x1836) x2558 (x1792 x1836)) (x912 x1836)))
(assert (= (x2812 832) (x3505 832)))
(assert (x2739 (x2827 160)))
(assert (=> (>= 10000 (x1956 160)) (= (x1157 (x1956 160)) (x2873 (x1956 160)))))
(assert (x2739 (x3301 128)))
(assert (= (x2873 4294967296) (x1157 4294967296)))
(assert (= (ite (and (not x3564) x1835) (x1154 (x2873 43)) (x2777 (x2873 43))) (x1089 (x2873 43))))
(assert (= (x188 320) (x1220 320)))
(assert (x1480 x2710))
(assert (= (x543 x1319) (ite (= 832 x1319) x1850 (x1865 x1319))))
(assert (= (ite (and (not x1907) x2661) (x625 x1032) (x2349 x1032)) (x926 x1032)))
(assert (= x1202 (and (not x3258) x2361)))
(assert (= (ite (= (x2873 10) x3217) x2266 (x3502 (x2873 10))) (x1981 (x2873 10))))
(assert (= (x1223 x1020) (ite (and x3717 (not x1900)) (x1154 x1020) (x2416 x1020))))
(assert (= (x1739 (x1157 (x425 128))) (x425 128)))
(assert (= (x1178 x395) (ite (= x395 x3102) x1095 (x578 x395))))
(assert (x1480 x3467))
(assert (= x2542 (=> (and (= (x737 (- x1269 x1726)) x1237) (= (x1824 (x2873 39)) x2012) (= x2555 (< x2012 x2148)) (= (x170 320) x2148)) (and (=> (and (not x2555) (= x3653 (x737 (- x2012 x2148)))) x1070) (=> x2555 x1698)))))
(assert (x1480 x1807))
(assert (x1480 x2571))
(assert (x2739 (x228 160)))
(assert (x1480 x7))
(assert (= x2888 (x3104 576)))
(assert (= (x1739 (x1157 (x2806 160))) (x2806 160)))
(assert (= (x1782 x753) (ite (and x1204 x1835) (x3092 x753) (x936 x753))))
(assert (= (ite (= x930 704) x2155 (x3037 x930)) (x3726 x930)))
(assert (= (ite (= x667 x2328) x1240 (x639 x667)) (x229 x667)))
(assert (= (and x3709 (not x2687)) x2066))
(assert (= (x3190 x3166) (ite (and x2034 (not x2028)) (x3340 x3166) (x2866 x3166))))
(assert (= x3146 (x1739 (x1157 x3146))))
(assert (= (x3190 x1209) (ite (and (not x2028) x2034) (x3340 x1209) (x2866 x1209))))
(assert (= (x2873 2052391781) (x1157 2052391781)))
(assert (= (ite (= x1209 x3102) x1095 (x578 x1209)) (x1178 x1209)))
(assert (= (x1739 (x2873 1977493762)) 1977493762))
(assert (= (x1533 832) (ite (and (not x2276) x2332) (x35 832) (x2397 832))))
(assert (= x2308 x3315))
(assert (x1480 x2141))
(assert (x1480 x3399))
(assert (= (x1157 2780307423) (x2873 2780307423)))
(assert (=> (>= 10000 (x1016 128)) (= (x2873 (x1016 128)) (x1157 (x1016 128)))))
(assert (= (x1739 (x1157 (x2193 128))) (x2193 128)))
(assert (= (x1006 384) (x906 384)))
(assert (= (x912 x1632) (ite (= x3114 x1632) x2558 (x1792 x1632))))
(assert (x1480 x3744))
(assert (= (x116 x1599) (ite (= x1599 (x2873 41)) x2522 (x3516 x1599))))
(assert (=> (>= 10000 (x808 128)) (= (x2873 (x808 128)) (x1157 (x808 128)))))
(assert (= (x2174 160) (x1739 (x1157 (x2174 160)))))
(assert (= (=> (and (= (x912 x2479) x1250) (= (x3339 288) x2123) (= x3043 (x2455 (+ x1757 x3345))) (= (x1822 288) x3012) (not (< 0 x497)) (= x497 (x1079 320)) (not (> x3012 x1250)) (= (x868 (x1157 (x1822 128)) (x1157 (x1822 160)) 0) x2479) (= x604 (x868 (x1157 (x3339 128)) (x1157 (x3339 160)) 0)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1757 x3345))) (= x3345 (x3250 x604)) (= (x1822 256) x1332) (= x1757 (x3339 288)) (= x3176 (x1079 224)) (= (x737 (- x1250 x3012)) x1177)) x2235) x942))
(assert (= (+ 6 (x1739 x3067)) (x1739 (x1844 x3067 6))))
(assert (= (x2747 448) (x1701 448)))
(assert (= (and (not x2995) x2) x2269))
(assert (x2739 (x708 128)))
(assert (x1480 x1323))
(assert (= (ite (= 448 x738) x148 (x2045 x738)) (x651 x738)))
(assert (= (x660 x3105) (ite (and (not x1629) x438 x3562) (x2991 x3105) (x543 x3105))))
(assert (x1480 x439))
(assert (x2739 (x3301 160)))
(assert (x1480 x298))
(assert (= x3199 (=> (and (= x2383 (x2875 832)) (= x75 (> x2383 x132)) (= x132 (x2875 928)) (= (x2455 (+ x2031 x765)) x771)) (and (=> (not x75) x3490) (=> x75 x1359)))))
(assert (= (x386 288) (x1580 288)))
(assert (x1480 x786))
(assert (= (x1739 (x1157 (x2744 128))) (x2744 128)))
(assert (= (x1157 1854955031) (x2873 1854955031)))
(assert (x1480 x1709))
(assert (= (x268 640) (x2831 640)))
(assert (= (ite (= 704 x1329) x241 (x1955 x1329)) (x3059 x1329)))
(assert (=> (>= 10000 (x1765 160)) (= (x1157 (x1765 160)) (x2873 (x1765 160)))))
(assert (= (x1223 x58) (ite (and (not x1900) x3717) (x1154 x58) (x2416 x58))))
(assert (= (+ 1 (x1739 x3400)) (x1739 (x1844 x3400 1))))
(assert (= (and x2047 x929) x3444))
(assert (= (x2458 384) (x330 384)))
(assert (= (x2018 (x2873 37)) (ite (and (not x2676) x3717) (x2445 (x2873 37)) (x271 (x2873 37)))))
(assert (x2739 (x2249 160)))
(assert (= (x1014 352) (x3354 352)))
(assert (= (x2808 800) (x2854 800)))
(assert (= (ite (= x1727 x1540) x2963 (x3316 x1540)) (x3061 x1540)))
(assert (= (x3528 640) (x2800 640)))
(assert (=> (<= (x3511 160) 10000) (= (x2873 (x3511 160)) (x1157 (x3511 160)))))
(assert (x1480 x1104))
(assert (= (and (not x1685) x3208) x3464))
(assert (x1480 x596))
(assert (= (x2410 512) (x2002 512)))
(assert (= (x2222 352) (x516 352)))
(assert (x1480 x703))
(assert (x2739 (x2058 160)))
(assert (= (x3570 320) (x208 320)))
(assert (= (x1157 596573372) (x2873 596573372)))
(assert (= (x1763 320) (x2891 320)))
(assert (x1480 x2980))
(assert (= (ite (= x2140 x862) x1719 (x2381 x862)) (x625 x862)))
(assert (= x630 (and x1907 x2661)))
(assert (= (x2744 160) (x1739 (x1157 (x2744 160)))))
(assert (= (x1017 352) (x3064 352)))
(assert (x1480 x1183))
(assert (= (x3134 x930) (ite (= x930 1152) x2403 (x2166 x930))))
(assert (x1480 x2246))
(assert (x1480 x2678))
(assert (= (x1739 (x1157 (x3511 128))) (x3511 128)))
(assert (= (x780 704) (x3488 704)))
(assert (x1480 x3603))
(assert (= x295 (=> (and (= (x116 (x2873 39)) x3663) (= (> x3663 0) x1542)) (and (=> (and (= x252 (< 0 x2172)) (or (and (= x622 x2172) (not x252)) (and (= 1 x622) x252 (< x1215 4294967296))) (= (x868 (x1157 (x1741 128)) (x1157 (x1741 160)) 0) x932) (= x3127 (x1605 288)) (= x935 (x116 x733)) x1542 (= (x1844 x932 2) x733)) x827) (=> (and (not x1542) (= (x116 x395) x3389) (= (x1605 288) x1902) (= x2820 (x868 (x1157 (x2884 128)) (x1157 (x2884 160)) 0)) (= x395 (x1844 x2820 6))) x3056)))))
(assert (x1480 x3521))
(assert (x1480 x400))
(assert (= (x1157 1401663147) (x2873 1401663147)))
(assert (= (x1178 x886) (ite (= x3102 x886) x1095 (x578 x886))))
(assert (= (x1641 224) x3731))
(assert (= (ite (= 192 x2857) 0 (x14 x2857)) (x1580 x2857)))
(assert (x1480 x854))
(assert (= (and (not x1926) x1682) x274))
(assert (= (x3570 544) (x208 544)))
(assert (= (x1739 (x1157 (x3178 160))) (x3178 160)))
(assert (= (x1655 320) (x2011 320)))
(assert (= (x1157 60465744) (x2873 60465744)))
(assert (x1480 x3410))
(assert (x1480 x693))
(assert (= (x3059 640) (x1955 640)))
(assert (= (x1739 (x1157 (x318 160))) (x318 160)))
(assert (= (x2410 160) (x1739 (x1157 (x2410 160)))))
(assert (x1480 x473))
(assert (x2739 (x3529 128)))
(assert (x1480 x1631))
(assert (= (x1178 x2307) (ite (= x3102 x2307) x1095 (x578 x2307))))
(assert (x1480 x2314))
(assert (= (x333 x3105) (ite (= x3105 224) x316 (x1268 x3105))))
(assert (x1480 x1391))
(assert (= (and x2269 x441) x261))
(assert (= (ite (and (not x2028) x2034) (x3340 x3512) (x2866 x3512)) (x3190 x3512)))
(assert (= (x1739 (x1157 (x1837 128))) (x1837 128)))
(assert (= (x1223 x2794) (ite (and x3717 (not x1900)) (x1154 x2794) (x2416 x2794))))
(assert (x1480 x1841))
(assert (= (=> (and (= (x2743 192) x1581) (= (= x575 x2116) x3479) (= (div x1434 x1613) x166) (= x303 (x401 768)) (= x424 (mod (* 32 x1581) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x2743 256) x575) (= x3202 (x597 512)) (= x3472 (x2455 (+ 352 x424))) (= (x2743 x3472) x2116)) (and (=> x3479 x2630) (=> (not x3479) x2487))) x80))
(assert (x1480 x1105))
(assert (x1480 x187))
(assert (x1480 x1463))
(assert (= (ite (and x2332 (not x2276)) (x1981 (x2873 41)) (x1538 (x2873 41))) (x2671 (x2873 41))))
(assert (= (x1098 384) (x2249 384)))
(assert (x1480 x2109))
(assert (x1480 x2656))
(assert (x1480 x3197))
(assert (= (=> (and (= x535 false) (>= 1461501637330902918203684832716283019655932542975 x3374) (= x2774 (x1154 (x2873 15))) (not (= x3509 1401663147)) (= (> (x2525 (x1157 274184521717934524641157099916833587200)) 0) x1266) (> x3584 31) (not (= 596573372 x3509)) (= 3 x3347) (= x8 x1414) (not (= x3509 3491319510)) (< 0 x2719) (not (= 1020253707 x3509)) (not (= 2087341860 x3509)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3175 x1367))) (= x2719 (x1154 x1012)) (not (= 16192718 x3509)) (not (= 157198259 x3509)) (not (= 3147386184 x3509)) (not (= x3509 2757214935)) (= 2715400956 x3509) (not (= x3509 3296657447)) (= x2450 (x1782 800)) x1266 (not (= x3509 961581905)) (<= 0 x806) (= (x2525 (x1157 274184521717934524641157099916833587200)) x1315) (not (= x3509 3065339685)) (= x2824 false) (= x869 x1850) (not (= 1257916802 x3509)) (not (= x3509 2052391781)) (= x1850 x2890) (not (= x3509 3339924076)) (not (= 356263876 x3509)) (<= x869 1461501637330902918203684832716283019655932542975) (<= 0 x3374) (not (= 773487949 x3509)) (not (= x3509 348537858)) (= x1012 (x1844 x1200 1)) (not (= 31576340 x3509)) (>= x1733 0) (= x806 (x1091 (x1157 274184521717934524641157099916833587200))) (not (= x3509 1196925270)) (= x1874 x326) (= (= x1414 x687) x381) (not (= 2869116585 x3509)) (<= 0 x8) (not (= 3544214205 x3509)) (not (= 1888058147 x3509)) (not (= x3509 3963136098)) (= false x881) (not (= 2484372501 x3509)) (not (= x3509 1977493762)) (not (= 1823829273 x3509)) (> x3068 99) (= x169 false) (= x3175 x542) (not (= x3509 2835717307)) (not (> x3504 0)) (= (> x326 0) x3564) (> x1315 0) (not (= 1851080549 x3509)) (not (< x2450 x1728)) (not (= 3092021830 x3509)) (<= x2890 1461501637330902918203684832716283019655932542975) (= x2360 x1733) (or (and (= (x1044 224) x2442) (= (x737 (- x2238 x3427)) x1807) (= x3393 (x2195 288)) (= x1050 (x324 x2749)) (= (= x2388 0) x3023) (= (x1133 224) x3377) x3564 (= (x2195 256) x3558) (= (x1154 x2569) x2464) (= x3712 (x190 224)) (= (x868 (x1157 (x100 128)) (x1157 (x100 160)) 0) x3040) (not (< x2238 x3427)) (= x3211 (x1044 256)) (= (x1844 x2931 8) x2749) (= (x2455 (+ x1050 x3211)) x1743) (= x2238 (x1044 288)) (= x2931 (x868 (x1157 (x1044 128)) (x1157 (x1044 160)) 0)) (= (x737 (- x6 x1341)) x436) (= x1341 (x1488 256)) (= x3427 (x1044 256)) (or x3023 (and (or x2078 (and (not (> x2428 x714)) (= x1007 (x2491 320)) (= (x2973 224) x220) (= (x1154 x3478) x3242) (= x3450 (x737 (- x714 x2428))) (= x3478 (x1844 x1187 2)) (= (x2491 320) x2428) (not x2078) (= x714 (x2473 (x2873 39))) (not (> x1007 x3242)) (= (x868 (x1157 (x2491 128)) (x1157 (x2491 160)) 0) x1187) (= x979 (x737 (- x3242 x1007))))) (= x300 (x2195 256)) (= x3718 (ite (> x1380 x11) x11 x1380)) (= x3669 (x1844 x1027 2)) (= (x2973 320) x1108) (not (= x1393 0)) (= x3097 (x2195 224)) (= (x1154 (x2873 39)) x1018) (not (= 0 x3674)) (= (= 0 x300) x1075) (= (mod (* x1018 x300) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1863) (= (div x1863 x1393) x1380) (= (ite x948 1 0) x3674) (= (div x1863 x300) x283) (= (= x283 x1018) x547) (not x3023) (= (= x1108 0) x2078) (= x11 (x1154 x3669)) (= (or x1075 x547) x948) (= (x868 (x1157 (x3428 128)) (x1157 (x3428 160)) 0) x1027) (= (x1154 (x2873 40)) x1393))) (= x2569 (x1844 x3040 6)) (= x2388 (x1154 (x2873 39))) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3211 x1050))) (not (> x3558 x3393)) (= x6 (x844 (x2873 40))) (= (x868 (x1157 (x1488 128)) (x1157 (x1488 160)) 0) x2606) (= x2960 (x1844 x2606 6)) (not (> x1341 x6))) (not x3564)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3068)) (= x2301 x1869) (not (= x3509 3567397854)) (not (= x3509 2681579215)) (= (x2455 (+ x542 x1379)) x1728) (not (= 2316151882 x3509)) (= x3374 x1348) (not (= x3509 2572356358)) (not (= 3613687827 x3509)) (<= x8 1461501637330902918203684832716283019655932542975) (= x1638 x1348) (not (= 4267106866 x3509)) (not (= x3509 297566789)) (not (= x3509 347398766)) (>= 1461501637330902918203684832716283019655932542975 x2906) x381 (not (= 3862337480 x3509)) (not (= x3509 288104347)) (not (= 629314576 x3509)) (not (= 861432679 x3509)) (= x483 x3504) (= x1379 x1367) (not (= 3877814014 x3509)) (not (= 3504541104 x3509)) (not (= x3509 4151200938)) (not (= 599290589 x3509)) (= x1204 (> x927 0)) (not (= 2780307423 x3509)) (not (= 2988718581 x3509)) (= x1200 (x868 (x1157 (x1770 128)) (x1157 (x1770 160)) 0)) (<= x1733 1461501637330902918203684832716283019655932542975) (not (= 3184006219 x3509)) (= 2715400956 x3566) (not (< x3068 4)) (or (and x1204 (= x1812 1) (> 4294967296 x3584)) (and (= x1812 x927) (not x1204))) (not (= 2209625481 x3509)) (not (= 2699341722 x3509)) (<= 0 x2906) (> x1812 0) (>= x869 0) (= x1850 x687) (= x984 (= 0 x2774)) (<= 0 x2890) (not (= x3509 464926286)) (or (and (= x3448 (> x2586 0)) (= (> x599 0) x2211) (or (and (= x391 (x3384 864)) (= x1858 (x868 (x1157 (x826 128)) (x1157 (x826 160)) 0)) (= x2006 (x3249 928)) (not (= x3651 0)) (= (< 0 x3269) x17) (= x3220 (x1881 928)) (= x2427 (x2111 896)) (> x2862 0) (= (x1844 x1858 6) x2398) (or (and (> 4294967296 x1584) x2205 (= 1 x2862)) (and (not x2205) (= x2862 x2069))) (= x2205 (> x2069 0)) (= x3269 (x1154 (x2873 39))) (or (and (= (mod (* x407 x668) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x825) (= (x1974 288) x922) (< 0 x3668) (= (x1011 352) x668) (= (x868 (x1157 (x3493 128)) (x1157 (x3493 160)) 0) x3586) (= (or x1265 x1595) x534) (or (and (= x2667 (x1553 352)) x859) (and (= x3150 (x1553 320)) (or (and (= (x1553 352) x2615) x3096 (= x3671 (x737 (- x2615 x2472))) (not (< x2615 x2472)) (= x2472 (x1553 320))) (not x3096)) (= (x1553 352) x3487) (not x859) (= (> x3487 x3150) x3096))) (= (x1154 (x2873 37)) x2895) (= x1418 (x1154 (x2873 40))) (= (< 0 x2895) x859) (= (x2455 (+ x3284 x1418)) x1996) (= (x1154 x1471) x1052) (= (< 0 x2523) x1927) (= x3480 (x3177 288)) (or (and (> 4294967296 x2247) (= x3668 1) x1927) (and (not x1927) (= x2523 x3668))) (= x1265 (= x668 x645)) (= (x1154 x3124) x407) (= (div x825 10000) x916) (= x3284 (x3635 224)) (= (x1844 x2772 6) x1471) (= (x868 (x1157 (x2744 128)) (x1157 (x2744 160)) 0) x2772) (< 31 x2247) (= x645 (div x825 x407)) x17 (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1418 x3284))) (= (ite x534 1 0) x2965) (= x3124 (x1844 x3586 2)) (= x1595 (= x407 0)) (not (= 0 x2965))) (and (= x2354 (x868 (x1157 (x708 128)) (x1157 (x708 160)) 0)) (= (x1844 x2354 6) x2348) (= x2990 (x3177 288)) (= (x1154 x2348) x2859) (not x17))) (= (x1154 x2398) x570) (> x1584 31) x3448 (= (x270 960) x3651)) (and (not (= x3000 0)) (= x582 (x1154 (x2873 15))) (or (not x1976) (and (= x1077 (x1091 (x1157 x477))) x2530 (= (>= (x3125 (x1157 274184521717934524641157099916833587200)) x2033) x2530) x1976 (= (x1091 (x1157 274184521717934524641157099916833587200)) x2033) x3149 (= (= x1077 (x3125 (x1157 x477))) x3149) (< x837 4294967296))) (not x3448) (> x1116 0) (= x1976 (< 0 x1116)) (= x477 (x1154 (x2873 15))) (= x1805 (x1710 800)) (= x3000 (x2525 (x1157 x582))))) (not x984) (= (x3013 800) x2586) (< 31 x2421) (or (and (= x3701 x599) (not x2211)) (and (= 1 x3701) (> 4294967296 x2421) x2211)) (< 0 x3701)) x984) (not (= x3509 3184473787)) (not (= 3208075701 x3509))) x3076) x1325))
(assert (x1480 x2486))
(assert (=> (>= 10000 (x3549 128)) (= (x2873 (x3549 128)) (x1157 (x3549 128)))))
(assert (x1480 x1690))
(assert (= x3088 (or (and x1618 (not x2757)) (and x989 (not x434)))))
(assert (x2739 (x526 160)))
(assert (=> (>= 10000 (x3488 160)) (= (x2873 (x3488 160)) (x1157 (x3488 160)))))
(assert (x1480 x2716))
(assert (= x1604 (and x3713 (not x3121))))
(assert (= (ite (= x3114 x1078) x2558 (x1792 x1078)) (x912 x1078)))
(assert (= (=> (and (= x3194 (x2455 (+ x2231 x1222))) (= (x3631 (x2873 40)) x1222) (= (x2455 (+ x1920 x2966)) x487) (= (> x1222 x3194) x463) (= x2231 (x3417 832))) (and (=> (and (not x463) (= x3309 (x2455 (+ x2231 x1222)))) x397) (=> x463 x1698))) x2243))
(assert (= (x3190 x796) (ite (and (not x2028) x2034) (x3340 x796) (x2866 x796))))
(assert (x2739 (x2660 128)))
(assert (= (ite (= (x2873 43) (x2873 41)) x2522 (x3516 (x2873 43))) (x116 (x2873 43))))
(assert (= (x1739 (x1157 (x2648 160))) (x2648 160)))
(assert (x1480 x40))
(assert (x1480 x1018))
(assert (= (x1739 (x1157 (x215 128))) (x215 128)))
(assert (= (ite (= x2857 640) 2388873442 (x208 x2857)) (x3570 x2857)))
(assert (x1480 x3626))
(assert (x1480 x1767))
(assert (= (x3261 x772) (ite (= x772 640) 2388873442 (x462 x772))))
(assert (= (x3443 320) (x234 320)))
(assert (x1480 x2907))
(assert (= (=> (and (= x3545 (x868 (x1157 (x3488 128)) (x1157 (x3488 160)) 0)) (= x1193 (x824 x3545)) (= (< 0 x1193) x2073)) (and (=> x2073 x2996) (=> (not x2073) x259))) x2235))
(assert (x2739 (x208 128)))
(assert (x1480 x3742))
(assert (= (ite (and (not x1934) x3300) (x912 (x2873 39)) (x3198 (x2873 39))) (x824 (x2873 39))))
(assert (x1480 x2797))
(assert (=> (>= 10000 (x82 160)) (= (x1157 (x82 160)) (x2873 (x82 160)))))
(assert (x1480 x2564))
(assert (x2739 (x192 160)))
(assert (= (x3340 (x2873 46)) (ite (and x2034 (not x1300)) (x1178 (x2873 46)) (x2267 (x2873 46)))))
(assert (= (x1140 x1329) (ite (and x841 x3581 (not x1942)) (x3059 x1329) (x3716 x1329))))
(assert (= (x1875 352) (x1541 352)))
(assert (x1480 x2312))
(assert (x1480 x2798))
(assert (= (x1739 (x2873 3544214205)) 3544214205))
(assert (x1480 x1521))
(assert (x1480 x3169))
(assert (x1480 x2104))
(assert (= (x1739 (x1157 (x3569 128))) (x3569 128)))
(assert (= (x1159 384) (x288 384)))
(assert (x1480 x1669))
(assert (= (and (not x2454) x767) x832))
(assert (= (div x1961 (x1389 2 x1673)) (x1261 x1961 x1673)))
(assert (= (ite (= x930 736) x2654 (x3443 x930)) (x234 x930)))
(assert (= (x2875 384) (x509 384)))
(assert (= (x1739 (x2873 861432679)) 861432679))
(assert (= (x1178 x1670) (ite (= x1670 x3102) x1095 (x578 x1670))))
(assert (x2739 (x33 128)))
(assert (x1480 x1085))
(assert (= (ite (and x3717 (not x1900)) (x1154 x2016) (x2416 x2016)) (x1223 x2016)))
(assert (x1480 x1280))
(assert (x1480 x2577))
(assert (x1480 x2898))
(assert (= (ite (= 128 x753) 16 (x437 x753)) (x2856 x753)))
(assert (= (x2812 288) (x3505 288)))
(assert (= (x1311 864) (x35 864)))
(assert (x1480 x1584))
(assert (x1480 x1775))
(assert (x1480 x1630))
(assert (= (=> (= (< 31 x707) x182) (and (=> x182 x1097) (=> (not x182) x1698))) x3062))
(assert (= (ite (= (x2873 39) x3114) x2558 (x1792 (x2873 39))) (x912 (x2873 39))))
(assert (= x2042 (x3689 736)))
(assert (= (x2044 384) (x212 384)))
(assert (= (x1981 x1082) (ite (= x1082 x3217) x2266 (x3502 x1082))))
(assert (= (x976 800) (x2737 800)))
(assert (x1480 x2012))
(assert (x1480 x2346))
(assert (= (x1972 x930) (ite (= 576 x930) x3109 (x2498 x930))))
(assert (= (x1178 x862) (ite (= x3102 x862) x1095 (x578 x862))))
(assert (= x2951 (=> (and (= x983 (x2455 (+ x2616 x1633))) (not (> x3050 x1297)) (= x2557 (x737 (- x1297 x3050))) (= (x3009 224) x1127) (= x2616 (x669 x2705)) (not (>= (+ x1633 x2616) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x868 (x1157 (x2058 128)) (x1157 (x2058 160)) 0) x819) (= x153 (x3009 320)) (not (> x153 0)) (= x3449 (x2058 256)) (= x1297 (x824 x819)) (= x2564 (x124 288)) (= (x2058 288) x3050) (= (x868 (x1157 (x124 128)) (x1157 (x124 160)) 0) x2705) (= (x124 288) x1633)) x259)))
(assert (= (x1178 x3217) (ite (= x3217 x3102) x1095 (x578 x3217))))
(assert (x1480 x360))
(assert (= (x2891 832) (x1763 832)))
(assert (= (x926 x176) (ite (and x2661 (not x1907)) (x625 x176) (x2349 x176))))
(assert (x1480 x1175))
(assert (= (x1921 320) (x1153 320)))
(assert (x1480 x1650))
(assert (x1480 x1155))
(assert (x2739 (x3178 128)))
(assert (x1480 x1326))
(assert (= (x3222 800) (x1109 800)))
(assert (= (ite (and x3717 (not x1900)) (x1154 x814) (x2416 x814)) (x1223 x814)))
(assert (x1480 x1829))
(assert (x1480 x1885))
(assert (x1480 x2722))
(assert (x1480 x3572))
(assert (= x1290 (and (not x255) x3034)))
(assert (= (or x757 (and (not x2009) x2729) (and x515 x358)) x52))
(assert (= (x653 x3166) (ite (and (not x3520) x730) (x3061 x3166) (x2099 x3166))))
(assert (x2739 (x2180 128)))
(assert (= (x3638 736) x975))
(assert (x1480 x3676))
(assert (x1480 x3673))
(assert (x1480 x3691))
(assert (= (x1220 480) (x188 480)))
(assert (x1480 x1950))
(assert (= (ite (and x3717 (not x2676)) (x2445 (x2873 43)) (x271 (x2873 43))) (x2018 (x2873 43))))
(assert (x1480 x1729))
(assert (= (x2887 320) (x1074 320)))
(assert (= (x1157 2869116585) (x2873 2869116585)))
(assert (x1480 x1397))
(assert (= (x333 384) (x1268 384)))
(assert (= (+ 6 (x1739 x1867)) (x1739 (x1844 x1867 6))))
(assert (= (ite (and (not x2028) x2034) (x3340 x1364) (x2866 x1364)) (x3190 x1364)))
(assert (= 599290589 (x1739 (x2873 599290589))))
(assert (= (x936 352) (x2145 352)))
(assert (= (x1822 128) (x1739 (x1157 (x1822 128)))))
(assert (= (+ 2 (x1739 x600)) (x1739 (x1844 x600 2))))
(assert (x1480 x688))
(assert (x1480 x995))
(assert (x1480 x573))
(assert (= (ite (= x753 256) 274184521717934524641157099916833587200 (x1747 x753)) (x1833 x753)))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1739 (x2873 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (=> (>= 10000 (x1017 160)) (= (x1157 (x1017 160)) (x2873 (x1017 160)))))
(assert (= (x2044 288) (x212 288)))
(assert (x1480 x30))
(assert (= (x2458 288) (x330 288)))
(assert (= (and x3644 x1906) x1099))
(assert (= (x1044 160) (x1739 (x1157 (x1044 160)))))
(assert (x1480 x861))
(assert (= (x587 x848) (ite (= 288 x848) x956 (x1990 x848))))
(assert (= (x2129 x3217) (ite (and x1568 (not x1761)) (x116 x3217) (x3254 x3217))))
(assert (x1480 x1919))
(assert (= (x2094 800) (x1400 800)))
(assert (x1480 x3337))
(assert (= (x1268 352) (x333 352)))
(assert (x1480 x3540))
(assert (x1480 x3265))
(assert (= (x1739 (x1157 x582)) x582))
(assert (x1480 x2485))
(assert (= (x128 160) (x1739 (x1157 (x128 160)))))
(assert (= (ite (and (not x1900) x3717) (x1154 x1573) (x2416 x1573)) (x1223 x1573)))
(assert (= (x1281 160) (x1739 (x1157 (x1281 160)))))
(assert (= x3057 (=> (and (= (= x2957 x836) x129) (= x3223 (or x3028 x129)) (= x2957 (x2129 (x2873 46))) (= (div x546 x638) x836) (= x3028 (= 0 x638)) (= x1296 (= 0 (ite x3223 1 0))) (= (mod (* x2957 x638) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x546)) (and (=> (not x1296) x744) (=> x1296 x1698)))))
(assert (=> (<= (x1626 128) 10000) (= (x2873 (x1626 128)) (x1157 (x1626 128)))))
(assert (= (=> (and (= (x509 896) x765) (= (< x1166 x1379) x2784) (= x1166 (x2455 (+ x1379 x765)))) (and (=> (not x2784) x3199) (=> x2784 x1698))) x397))
(assert (x1480 x2667))
(assert (= (x3007 x3105) (ite (= x3105 128) 7 (x174 x3105))))
(assert (= (x1990 320) (x587 320)))
(assert (x1480 x2975))
(assert (= (x1223 x1209) (ite (and (not x1900) x3717) (x1154 x1209) (x2416 x1209))))
(assert (= (ite (and (not x1900) x3717) (x1154 x3512) (x2416 x3512)) (x1223 x3512)))
(assert (= (x1223 (x2873 39)) (ite (and x3717 (not x1900)) (x1154 (x2873 39)) (x2416 (x2873 39)))))
(assert (= (x625 x176) (ite (= x2140 x176) x1719 (x2381 x176))))
(assert (= (x2139 352) (x675 352)))
(assert (=> (>= 10000 (x107 160)) (= (x2873 (x107 160)) (x1157 (x107 160)))))
(assert (x2739 (x2648 160)))
(assert (x1480 x3606))
(assert (=> (>= 10000 (x1924 128)) (= (x2873 (x1924 128)) (x1157 (x1924 128)))))
(assert (x1480 x913))
(assert (=> (<= (x3243 128) 10000) (= (x1157 (x3243 128)) (x2873 (x3243 128)))))
(assert (= (x3340 x1573) (ite (and x2034 (not x1300)) (x1178 x1573) (x2267 x1573))))
(assert (= (ite (and (not x3520) x730) (x3061 x1540) (x2099 x1540)) (x653 x1540)))
(assert (= (x1739 (x1157 (x2827 128))) (x2827 128)))
(assert (= (ite (= x1727 x3102) x1095 (x578 x1727)) (x1178 x1727)))
(assert (x1480 x3202))
(assert (= (x2163 352) (x2743 352)))
(assert (= (=> (and (= (= 0 (ite x934 1 0)) x838) (= (x651 384) x2638) (= (or x2179 x1508) x934) (= x2179 (= x2638 0)) (= (div x1137 x2638) x1248) (= (mod (* x874 x2638) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1137) (= (x651 448) x874) (= (= x1248 x874) x1508)) (and (=> (and (not x838) (= (> x801 0) x1457) (or (and (not x1457) (= x2909 x801)) (and x1457 (= 1 x2909) (< x2241 4294967296)))) x2378) (=> x838 x1698))) x216))
(assert (= (x625 x1082) (ite (= x2140 x1082) x1719 (x2381 x1082))))
(assert (x1480 x542))
(assert (x1480 x801))
(assert (x1480 x3143))
(assert (x1480 x1254))
(assert (x1480 x1431))
(assert (= (ite (and (not x1907) x2661) (x625 x3641) (x2349 x3641)) (x926 x3641)))
(assert (= (ite (= x3105 1152) x974 (x812 x3105)) (x623 x3105)))
(assert (x2739 (x3329 128)))
(assert (= (x3528 448) (x2800 448)))
(assert (x1480 x3718))
(assert (= (x3689 x3397) (ite (= 736 x3397) x2042 (x1227 x3397))))
(assert (= (x2002 x738) (ite (= x738 640) 2388873442 (x2410 x738))))
(assert (= (x1686 384) (x26 384)))
(assert (= (ite (= x1329 832) x1850 (x2145 x1329)) (x936 x1329)))
(assert (= (x165 256) (x664 256)))
(assert (x1480 x1315))
(assert (x1480 x2526))
(assert (= (ite (and x3300 (not x1934)) (x912 x1632) (x3198 x1632)) (x824 x1632)))
(assert (x1480 x1050))
(assert (= (=> (and (= (x2455 (+ x2227 x1379)) x953) (= (x2132 832) x754) (= x2227 (x3502 x3217)) (= (x868 (x1157 (x1216 128)) (x1157 (x1216 160)) 0) x245) (= (x1844 x245 7) x3217) (= x93 (> x2227 x953))) (and (=> (not x93) x2829) (=> x93 x1698))) x2120))
(assert (= (x936 x753) (ite (= x753 832) x1850 (x2145 x753))))
(assert (= (or (and (not x1907) x2661) x2912) x1267))
(assert (= (x3372 128) (x1739 (x1157 (x3372 128)))))
(assert (= (x1243 352) (x2489 352)))
(assert (= (x2812 384) (x3505 384)))
(assert (x1480 x2556))
(assert (= (=> (and (= x1374 (x116 (x2873 37))) (= (x1844 x2054 6) x1138) (= x1926 (> x1374 0)) (= x1314 (div x50 10000)) (= (x868 (x1157 (x3569 128)) (x1157 (x3569 160)) 0) x2054) (= (x116 x1138) x1537) (= x195 (x3491 288))) (and (=> (and (= (x2508 352) x1033) x1926) x3056) (=> (not x1926) x2400))) x652))
(assert (x1480 x2357))
(assert (= (x1990 352) (x587 352)))
(assert (= (x2873 2988718581) (x1157 2988718581)))
(assert (= (x3726 320) (x3037 320)))
(assert (=> (>= 10000 (x1474 128)) (= (x2873 (x1474 128)) (x1157 (x1474 128)))))
(assert (x1480 x2490))
(assert (x1480 x1860))
(assert (= (x2743 320) (x2163 320)))
(assert (x1480 x1703))
(assert (x1480 x3701))
(assert (= x404 (and x1201 x1160)))
(assert (x1480 x1100))
(assert (= (ite (= x3114 x604) x2558 (x1792 x604)) (x912 x604)))
(assert (= (ite (= x1727 (x2873 40)) x2963 (x3316 (x2873 40))) (x3061 (x2873 40))))
(assert (= x1061 (=> (and (= (x2734 224) x3151) (= x2019 (< x3151 1000000000000000000))) (and (=> x2019 x813) (=> (not x2019) x1828)))))
(assert (x1480 x2466))
(assert (x1480 x2655))
(assert (x1480 x3016))
(assert (x1480 x3038))
(assert (x1480 x3162))
(assert (x1480 x66))
(assert (x1480 x1681))
(assert (= x2653 (or x1475 (and x531 x1737))))
(assert (x1480 x3095))
(assert (x2739 (x170 160)))
(assert (x1480 x2238))
(assert (= (x1181 352) (x1474 352)))
(assert (= (=> (and (= x3266 (x1844 x2477 1)) (= x2477 (x868 (x1157 (x808 128)) (x1157 (x808 160)) 0)) (= (x1954 512) x3299) (= (= x3623 x1869) x3476) (= (x2129 x3266) x3623)) (and (=> x3476 x2120) (=> (not x3476) x3118))) x2901))
(assert (= (x664 384) (x165 384)))
(assert (= (x3230 352) 0))
(assert (x1480 x2492))
(assert (= (ite (and x2211 x1835 (not x984)) (x2105 x1329) (x3404 x1329)) (x3013 x1329)))
(assert (= (x653 x2437) (ite (and x730 (not x3520)) (x3061 x2437) (x2099 x2437))))
(assert (= (x1739 (x1157 (x1469 160))) (x1469 160)))
(assert (x1480 x1567))
(assert (x1480 x577))
(assert (x1480 x608))
(assert (= (x2018 x3542) (ite (and x3717 (not x2676)) (x2445 x3542) (x271 x3542))))
(assert (x1480 x1067))
(assert (x1480 x2382))
(assert (x1480 x1461))
(assert (x1480 x1264))
(assert (= (x653 (x2873 39)) (ite (and (not x3520) x730) (x3061 (x2873 39)) (x2099 (x2873 39)))))
(assert (= (+ (x1739 x1971) 3) (x1739 (x1844 x1971 3))))
(assert (= (ite (= (x2873 15) x3102) x1095 (x578 (x2873 15))) (x1178 (x2873 15))))
(assert (x1480 x3127))
(assert (x1480 x444))
(assert (= (x2191 352) (x808 352)))
(assert (= (x3061 (x2873 43)) (ite (= x1727 (x2873 43)) x2963 (x3316 (x2873 43)))))
(assert (= (x3213 x848) (ite (= 352 x848) x3126 (x505 x848))))
(assert (= (ite (= (x2873 45) x3102) x1095 (x578 (x2873 45))) (x1178 (x2873 45))))
(assert (= (x1157 2209625481) (x2873 2209625481)))
(assert (= (x2973 320) x3718))
(assert (x1480 x2213))
(assert (= (x321 384) (x1596 384)))
(assert (= (=> (and (= x2492 (x1223 x3474)) (= (x1855 512) x3041) (= x3632 (= x2492 x2522)) (= (x868 (x1157 (x3301 128)) (x1157 (x3301 160)) 0) x3400) (= (x1844 x3400 1) x3474)) (and (=> x3632 x297) (=> (not x3632) x2157))) x2420))
(assert (x1480 x1525))
(assert (= (x3157 352) (ite (and x2668 x3717) (x605 352) (x1958 352))))
(assert (= (ite (and (not x1907) x2661) (x625 x886) (x2349 x886)) (x926 x886)))
(assert (= x592 (=> (and (= x2918 (> x1889 x3697)) (= (x418 800) x3697)) (and (=> (not x2918) x1186) (=> x2918 x1698)))))
(assert (= (x1268 512) (x333 512)))
(assert (= (x1739 (x1157 (x2856 128))) (x2856 128)))
(assert (= (ite (and (not x1900) x3717) (x1154 x176) (x2416 x176)) (x1223 x176)))
(assert (x1480 x113))
(assert (= (ite (and (not x1300) x2034) (x1178 x3641) (x2267 x3641)) (x3340 x3641)))
(assert (x1480 x345))
(assert (x1480 x2974))
(assert (x2739 (x3511 128)))
(assert (= (x1739 (x1157 (x3719 160))) (x3719 160)))
(assert (= (x505 160) (x1739 (x1157 (x505 160)))))
(assert (x2739 (x1701 128)))
(assert (x1480 x2500))
(assert (= (x35 800) (x1311 800)))
(assert (= (x2057 160) (x1739 (x1157 (x2057 160)))))
(assert (= x1165 (=> (and (= (> x1769 0) x2274) (= x1769 (x653 x1540)) (= (x868 (x1157 (x3007 128)) (x1157 (x3007 160)) 0) x1540)) (and (=> x2274 x2925) (=> (not x2274) x822)))))
(assert (= x2325 (=> (and (= (> x266 x464) x966) (= x464 (x2455 (+ x2233 x266))) (= x266 (x3033 224)) (= x2233 (x2129 (x2873 40)))) (and (=> (not x966) x647) (=> x966 x1698)))))
(assert (= x3322 (or x2310 (and x3259 x3168))))
(assert (x1480 x239))
(assert (x1480 x3138))
(assert (= (ite (and (not x2923) x2385 (not x3440)) (x268 512) (x2068 512)) (x1520 512)))
(assert (x1480 x3238))
(assert (= (ite (and x1801 (not x2709)) (x2671 x3416) (x2773 x3416)) (x3565 x3416)))
(assert (= (x3609 256) (x413 256)))
(assert (= (or (and x3632 x3649) (and (not x2889) x1481) x2204) x2034))
(assert (=> (>= 10000 (x3532 160)) (= (x2873 (x3532 160)) (x1157 (x3532 160)))))
(assert (x1480 x2708))
(assert (x1480 x110))
(assert (= (+ 7 (x1739 x2611)) (x1739 (x1844 x2611 7))))
(assert (=> (<= (x3549 160) 10000) (= (x2873 (x3549 160)) (x1157 (x3549 160)))))
(assert (= (x1015 320) (x1859 320)))
(assert (= (x1594 832) (x612 832)))
(assert (x1480 x1876))
(assert (x2739 (x1770 160)))
(assert (x1480 x785))
(assert (= (x1642 x1319) (ite (= x1319 256) 274184521717934524641157099916833587200 (x1582 x1319))))
(assert (x1480 x1051))
(assert (= (x1739 (x1157 (x1822 160))) (x1822 160)))
(assert (=> (>= 10000 (x1017 128)) (= (x2873 (x1017 128)) (x1157 (x1017 128)))))
(assert (x1480 x970))
(assert (=> (>= 10000 x640) (= (x2873 x640) (x1157 x640))))
(assert (x1480 x3289))
(assert (= (x321 512) (x1596 512)))
(assert (= x921 (x1789 544)))
(assert (= (x3609 256) (x3721 256)))
(assert (x1480 x3224))
(assert (x1480 x2580))
(assert (= (and x2008 x2274) x2752))
(assert (= (x1178 x1171) (ite (= x1171 x3102) x1095 (x578 x1171))))
(assert (= (x516 384) (x461 384)))
(assert (=> (>= 10000 (x1216 128)) (= (x1157 (x1216 128)) (x2873 (x1216 128)))))
(assert (= (x3340 (x2873 37)) (ite (and x2034 (not x1300)) (x1178 (x2873 37)) (x2267 (x2873 37)))))
(assert (= (x3689 384) (x1227 384)))
(assert (=> (>= 10000 (x3363 128)) (= (x1157 (x3363 128)) (x2873 (x3363 128)))))
(assert (= (div x1631 (x1389 2 x2971)) (x1261 x1631 x2971)))
(assert (= (x1739 (x1157 (x3398 160))) (x3398 160)))
(assert (x1480 x2971))
(assert (= (+ 6 (x1739 x986)) (x1739 (x1844 x986 6))))
(assert (x1480 x1969))
(assert (= (=> (and (= (x3702 704) x1693) (= x3256 (< 0 x1693))) (and (=> (not x3256) x1872) (=> (and (= (x214 448) x873) (= (> x873 0) x290) x3256 (= (x1492 704) x1788) (= x1183 (x1223 (x2873 9))) (or (and (not x290) (= (x214 384) x2103)) (and (= (x1641 224) x1662) (= x2324 (or x2801 x3537)) (= (< 0 x1708) x1832) (= x2100 (x737 (- x2886 x1527))) (< 0 x191) (= x66 (ite x2874 1 0)) (= (x214 448) x1396) (or (and (= (mod (* x453 x3622) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2490) (= x347 (or x790 x760)) x2640 (= x420 (div x2490 x453)) (not (< x1397 x2106)) (= (x1223 (x2873 43)) x3413) (= (= 0 x453) x760) (= x790 (= x420 x3622)) (= x453 (x2701 224)) (= x3622 (x2701 256)) (= (x737 (- x1397 x2106)) x774) (= (x2701 256) x1397) (= (ite x347 1 0) x3654) (= (div x2490 1000000000000000000) x2106) (not (= x3654 0))) (not x2640)) (not (= 0 x2439)) (= (x214 384) x160) (= (x472 224) x1305) (= (x2937 480) x2439) (not (> x1775 x3238)) (or (and (not x1832) (= x191 x1708)) (and (> 4294967296 x2074) x1832 (= 1 x191))) (= x1775 (x1223 (x2873 41))) (= x2801 (= x1143 x1396)) (= x2399 (x1223 (x2873 40))) (= (= x444 x764) x1634) (not (= 0 x2545)) (= x3537 (= 0 x160)) (= (div x368 x160) x1143) (= x444 (x1223 (x2873 44))) (= x2545 (ite x2324 1 0)) (> x2074 31) (not (> x1527 x2886)) (= (x2455 (+ x1305 x2399)) x34) x290 (= (> 1000000000000000000 x1662) x2640) (= x2886 (x1383 288)) (= (x1464 320) x1527) (= x764 (div x3731 x272)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2399 x1305))) (= x272 (x737 (- x2522 x1775))) (= x2874 (or x1634 x1937)) (not (= x66 0)) (= (= x272 0) x1937) (= x3522 (div x368 x2439)) (= (mod (* x444 x272) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3731) (= x368 (mod (* x1396 x160) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) x690))) x282))
(assert (= (ite (and (not x112) x3717) (x1696 832) (x196 832)) (x1644 832)))
(assert (= (x1739 (x1157 (x3086 160))) (x3086 160)))
(assert (=> (<= (x2806 128) 10000) (= (x1157 (x2806 128)) (x2873 (x2806 128)))))
(assert (= (ite (= x1670 (x2873 41)) x2522 (x3516 x1670)) (x116 x1670)))
(assert (= (ite (and x3300 (not x1934)) (x912 x667) (x3198 x667)) (x824 x667)))
(assert (= (x936 384) (x2145 384)))
(assert (= (ite (= x3545 x3114) x2558 (x1792 x3545)) (x912 x3545)))
(assert (= (+ 2 (x1739 x1459)) (x1739 (x1844 x1459 2))))
(assert (x1480 x1379))
(assert (= (ite (and (not x1907) x2661) (x625 x2437) (x2349 x2437)) (x926 x2437)))
(assert (= (ite (and (not x1934) x3300) (x912 x3003) (x3198 x3003)) (x824 x3003)))
(assert (= (x2045 320) (x651 320)))
(assert (=> (>= 10000 (x373 160)) (= (x2873 (x373 160)) (x1157 (x373 160)))))
(assert (x1480 x391))
(assert (= (x3110 320) (x2806 320)))
(assert (x1480 x3656))
(assert (x1480 x3321))
(assert (x1480 x2358))
(assert (= (ite (and x1568 (not x1761)) (x116 (x2873 39)) (x3254 (x2873 39))) (x2129 (x2873 39))))
(assert (x1480 x1578))
(assert (x1480 x377))
(assert (x2739 (x3363 160)))
(assert (= (ite (and (not x1907) x2661) (x625 x1209) (x2349 x1209)) (x926 x1209)))
(assert (= (x1483 256) (x3022 256)))
(assert (x1480 x3671))
(assert (= (ite (= x2140 x3436) x1719 (x2381 x3436)) (x625 x3436)))
(assert (=> (<= (x3634 128) 10000) (= (x1157 (x3634 128)) (x2873 (x3634 128)))))
(assert (= (x2193 160) (x1739 (x1157 (x2193 160)))))
(assert (x1480 x3712))
(assert (x1480 x374))
(assert (x1480 x3419))
(assert (= (+ 2 (x1739 x2941)) (x1739 (x1844 x2941 2))))
(assert (=> (<= (x3670 128) 10000) (= (x1157 (x3670 128)) (x2873 (x3670 128)))))
(assert (= (x2671 (x2873 40)) (ite (and x2332 (not x2276)) (x1981 (x2873 40)) (x1538 (x2873 40)))))
(assert (= (x802 800) (x1358 800)))
(assert (x1480 x828))
(assert (= (x2873 3963136098) (x1157 3963136098)))
(assert (x1480 x2864))
(assert (= (x1958 320) (x1486 320)))
(assert (x1480 x2060))
(assert (= x21 (=> (and (= (x2455 (+ 352 x2618)) x3397) (= x609 (= x1264 x1141)) (= x2618 (mod (* 32 x3703) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1141 (x2489 256)) (= (x2489 x3397) x1264) (= (x2489 192) x3703)) (and x1366 x609))))
(assert (x1480 x3499))
(assert (= (x1181 224) (x1474 224)))
(assert (= (x2173 576) (x3240 576)))
(assert (x2739 (x2180 160)))
(assert (= 157198259 (x1739 (x2873 157198259))))
(assert (= (ite (and (not x3520) x730) (x3061 x2307) (x2099 x2307)) (x653 x2307)))
(assert (= (x1739 (x1844 x3040 6)) (+ (x1739 x3040) 6)))
(assert (x1480 x2024))
(assert (= (x1089 x3003) (ite (and (not x3564) x1835) (x1154 x3003) (x2777 x3003))))
(assert (= 0 (x3230 320)))
(assert (= (x1641 352) (x1383 352)))
(assert (= (x1739 (x1157 (x1924 128))) (x1924 128)))
(assert (= (x1981 x3416) (ite (= x3217 x3416) x2266 (x3502 x3416))))
(assert (= (ite (= x2437 x3102) x1095 (x578 x2437)) (x1178 x2437)))
(assert (= (ite (and x3300 (not x1934)) (x912 x819) (x3198 x819)) (x824 x819)))
(assert (x1480 x2628))
(assert (= (x1223 x3292) (ite (and x3717 (not x1900)) (x1154 x3292) (x2416 x3292))))
(assert (= (=> (= x1411 (> x2770 0)) (and (=> (and (= (ite (> 32 x1816) x1816 32) x1430) (or (and x3058 (< x2799 4294967296)) (not x3058)) (= x3739 (x2455 (+ 32 x3145))) x1411 (= x3058 (> x2426 0)) (= x3145 (x2440 576))) x3433) (=> (not x1411) x1698))) x3429))
(assert (= 356263876 (x1739 (x2873 356263876))))
(assert (x1480 x202))
(assert (= (x1924 160) (x1739 (x1157 (x1924 160)))))
(assert (= (x3134 x2857) (ite (= 1152 x2857) x2403 (x2166 x2857))))
(assert (=> (<= (x3329 128) 10000) (= (x2873 (x3329 128)) (x1157 (x3329 128)))))
(assert (= (x3609 320) (x3721 320)))
(assert (x1480 x1094))
(assert (=> (<= (x1766 160) 10000) (= (x2873 (x1766 160)) (x1157 (x1766 160)))))
(assert (x1480 x3584))
(assert (= (x3222 224) (x1109 224)))
(assert (= (ite (and (not x3564) x1835) (x1154 (x2873 10)) (x2777 (x2873 10))) (x1089 (x2873 10))))
(assert (= (ite (= x2140 x1020) x1719 (x2381 x1020)) (x625 x1020)))
(assert (= (x3401 704) (x1243 704)))
(assert (x2739 (x1956 128)))
(assert (x1480 x3628))
(assert (= (x461 x3397) (ite (= 192 x3397) x1043 (x516 x3397))))
(assert (= (x1553 384) (x2744 384)))
(assert (= (x736 352) (x3313 352)))
(assert (x1480 x582))
(assert (=> (>= 10000 (x2744 128)) (= (x1157 (x2744 128)) (x2873 (x2744 128)))))
(assert (= (ite (= x1319 128) 16 (x1098 x1319)) (x2249 x1319)))
(assert (=> (>= 10000 (x1883 128)) (= (x2873 (x1883 128)) (x1157 (x1883 128)))))
(assert (= (x587 x2857) (ite (= x2857 288) x956 (x1990 x2857))))
(assert (= (x926 x1364) (ite (and (not x1907) x2661) (x625 x1364) (x2349 x1364))))
(assert (= (x1739 (x1157 (x3428 160))) (x3428 160)))
(assert (= (x1533 320) (ite (and x2332 (not x2276)) (x35 320) (x2397 320))))
(assert (= (x516 x3397) (ite (= x3397 192) 0 (x2222 x3397))))
(assert (= (x2143 352) (x522 352)))
(assert (= (x2374 512) (x214 512)))
(assert (= (x3261 640) 2388873442))
(assert (= (ite (= 192 x930) 0 (x2765 x930)) (x522 x930)))
(assert (= (ite (= x2140 x37) x1719 (x2381 x37)) (x625 x37)))
(assert (= x1672 (=> (and (= x2004 (x161 320)) (= (> x2004 0) x451)) (and (=> (not x451) x684) (=> x451 x1698)))))
(assert (=> (>= 10000 (x2660 160)) (= (x2873 (x2660 160)) (x1157 (x2660 160)))))
(assert (x1480 x29))
(assert (= (x2873 297566789) (x1157 297566789)))
(assert (x1480 x2352))
(assert (= (x2174 128) (x1739 (x1157 (x2174 128)))))
(assert (= x1615 (=> (and (= (x2831 672) x2162) (= (x2455 (+ x304 x2162)) x1514) (= (x2831 640) x304) (= (div x2753 10000) x3467) (= x3140 (< x1514 x2162))) (and (=> (not x3140) x312) (=> x3140 x1698)))))
(assert (x1480 x3293))
(assert (= (x1140 x3397) (ite (and x841 x3581 (not x1942)) (x3059 x3397) (x3716 x3397))))
(assert (x1480 x3012))
(assert (x1480 x1388))
(assert (x1480 x1788))
(assert (= (x1223 x3166) (ite (and x3717 (not x1900)) (x1154 x3166) (x2416 x3166))))
(assert (x1480 x3449))
(assert (= (x3190 x429) (ite (and x2034 (not x2028)) (x3340 x429) (x2866 x429))))
(assert (x1480 x2292))
(assert (x1480 x1350))
(assert (= (ite (= x202 1152) x2403 (x2166 x202)) (x3134 x202)))
(assert (= (x1958 x930) (ite (= 832 x930) x956 (x1486 x930))))
(assert (x1480 x2976))
(assert (x1480 x836))
(assert (= (x906 800) (x1006 800)))
(assert (= (x1582 352) (x1642 352)))
(assert (= (x3702 x848) (ite (and x1481 x2889 (not x944)) (x3726 x848) (x1161 x848))))
(assert (= (ite (= x3114 x819) x2558 (x1792 x819)) (x912 x819)))
(assert (= (x2222 384) (x516 384)))
(assert (= (x2180 352) (x1699 352)))
(assert (= (or (and x2008 (not x2274)) (and x372 (not x1909)) (and (not x1938) x1290)) x3306))
(assert (x1480 x3435))
(assert (= (ite (and x1204 x1835) (x3092 x3397) (x936 x3397)) (x1782 x3397)))
(assert (= (x625 (x2873 44)) (ite (= x2140 (x2873 44)) x1719 (x2381 (x2873 44)))))
(assert (x2739 (x425 160)))
(assert (x2739 (x1474 128)))
(assert (= (x437 512) (x2856 512)))
(assert (= x2956 (or (and (not x3657) x552) (and x1491 (not x794)))))
(assert (= x3034 (and (not x451) x306)))
(assert (x2739 (x2699 128)))
(assert (= x2537 (x1739 (x1157 x2537))))
(assert (x1480 x1039))
(assert (x1480 x1285))
(assert (= (x2744 864) (x1553 864)))
(assert (= (or (and x3235 x1831) x1509 (and x3581 (not x841))) x3717))
(assert (= (ite (and x438 x3562 (not x1629)) (x2991 800) (x543 800)) (x660 800)))
(assert (=> (<= (x318 128) 10000) (= (x2873 (x318 128)) (x1157 (x318 128)))))
(assert (x1480 x1945))
(assert (= x2896 (=> (and (= (> x2167 x97) x445) (= x2137 (x737 (- x3319 x3676))) (= x2167 (x2359 384)) (= x97 (x2359 352)) (= x3453 (x2359 544))) (and (=> x445 x1698) (=> (and (or (and (= 1 x1295) (> 4294967296 x3008) x3658) (and (= x2652 x1295) (not x3658))) (= (x3115 544) x275) (= (ite (< x1506 x3453) x1506 x3453) x565) (= (> x2652 0) x3658) (= (x737 (- x97 x2167)) x1506) (not x445)) x1780)))))
(assert (= (x1181 384) (x1474 384)))
(assert (=> (<= (x3719 160) 10000) (= (x1157 (x3719 160)) (x2873 (x3719 160)))))
(assert (=> (<= (x3055 160) 10000) (= (x1157 (x3055 160)) (x2873 (x3055 160)))))
(assert (x1480 x629))
(assert (= (=> (and (= x1745 (x526 224)) (= x1445 (< x3095 x2964)) (= x1005 (x868 (x1157 (x1626 128)) (x1157 (x1626 160)) 0)) (= (x1626 256) x2964) (= x3095 (x919 (x2873 40))) (= x3234 (x737 (- x2841 x1592))) (= (x1844 x1005 6) x277)) (and (=> x1445 x1698) (=> (and (not x1445) (= x2197 (x737 (- x3095 x2964)))) x2901))) x549))
(assert (= x1310 (and x2757 x1618)))
(assert (= (x3401 224) (x1243 224)))
(assert (= (ite (and (not x1934) x3300) (x912 x340) (x3198 x340)) (x824 x340)))
(assert (= (x3638 640) (x1239 640)))
(assert (= (x1261 x3540 x691) (div x3540 (x1389 2 x691))))
(assert (= (x1739 (x1157 (x3670 160))) (x3670 160)))
(assert (= (ite (= 192 x1319) 0 (x965 x1319)) (x2743 x1319)))
(assert (= (ite (and x2034 (not x1300)) (x1074 384) (x3492 384)) (x1339 384)))
(assert (x1480 x705))
(assert (= (x522 704) (x2765 704)))
(assert (= (ite (and x2332 (not x2276)) (x1981 x3292) (x1538 x3292)) (x2671 x3292)))
(assert (= x2386 (and x1617 x2342)))
(assert (x1480 x2987))
(assert (= (x1739 (x2873 1889567281)) 1889567281))
(assert (x1480 x937))
(assert (= (x1641 448) (x1383 448)))
(assert (= 3147386184 (x1739 (x2873 3147386184))))
(assert (= (x2743 288) (x2163 288)))
(assert (= (x1223 x1171) (ite (and (not x1900) x3717) (x1154 x1171) (x2416 x1171))))
(assert (x1480 x2910))
(assert (= (ite (= 352 x202) x3126 (x505 x202)) (x3213 x202)))
(assert (x1480 x3365))
(assert (= (x3340 x3217) (ite (and x2034 (not x1300)) (x1178 x3217) (x2267 x3217))))
(assert (x1480 x2608))
(assert (= (x1739 (x1157 (x33 128))) (x33 128)))
(assert (x1480 x1985))
(assert (x1480 x845))
(assert (x1480 x1077))
(assert (= (x1739 (x1157 (x2625 128))) (x2625 128)))
(assert (= (x516 x1329) (ite (= x1329 192) 0 (x2222 x1329))))
(assert (= (x1642 704) (x1582 704)))
(assert (= (x2498 352) (x1972 352)))
(assert (x1480 x3559))
(assert (= (x1239 320) (x3638 320)))
(assert (= (x116 (x2873 39)) (ite (= (x2873 39) (x2873 41)) x2522 (x3516 (x2873 39)))))
(assert (= (x3213 384) (x505 384)))
(assert (x1480 x2430))
(assert (x1480 x2833))
(assert (= (x1739 (x1844 x2079 6)) (+ 6 (x1739 x2079))))
(assert (= (=> (and (= (x868 (x1157 (x2856 128)) (x1157 (x2856 160)) 0) x426) (= (x1089 x1256) x3501) (= x3235 (= x3501 x1869)) (= x2822 (x1185 512)) (= (x1844 x426 1) x1256)) (and (=> x3235 x3711) (=> (not x3235) x2916))) x3076))
(assert (= (ite (and (not x1934) x3300) (x912 (x2873 37)) (x3198 (x2873 37))) (x824 (x2873 37))))
(assert (x2739 (x715 160)))
(assert (x1480 x2084))
(assert (x1480 x2394))
(assert (x1480 x2563))
(assert (x1480 x2003))
(assert (= (ite (and x1568 (not x1761)) (x116 (x2873 10)) (x3254 (x2873 10))) (x2129 (x2873 10))))
(assert (= (x2887 864) (x1074 864)))
(assert (x1480 x3458))
(assert (x1480 x2452))
(assert (x2739 (x1883 128)))
(assert (x2739 (x3549 160)))
(assert (= (x2873 1977493762) (x1157 1977493762)))
(assert (= (x612 352) (x1594 352)))
(assert (x1480 x2672))
(assert (= (x1955 384) (x3059 384)))
(assert (= (x3177 320) (x2055 320)))
(assert (= (x2050 320) (x938 320)))
(assert (= (ite (and (not x1300) x2034) (x1178 x2815) (x2267 x2815)) (x3340 x2815)))
(assert (=> (>= 10000 (x3511 128)) (= (x2873 (x3511 128)) (x1157 (x3511 128)))))
(assert (= (x1243 288) (x3401 288)))
(assert (x1480 x3538))
(assert (x1480 x2921))
(assert (x1480 x3242))
(assert (= (x1770 128) (x1739 (x1157 (x1770 128)))))
(assert (x1480 x2990))
(assert (x1480 x86))
(assert (= (x625 x1032) (ite (= x2140 x1032) x1719 (x2381 x1032))))
(assert (x1480 x1307))
(assert (= (x1157 31576340) (x2873 31576340)))
(assert (=> (<= (x2249 128) 10000) (= (x1157 (x2249 128)) (x2873 (x2249 128)))))
(assert (=> (>= 10000 (x215 160)) (= (x1157 (x215 160)) (x2873 (x215 160)))))
(assert (x1480 x157))
(assert (= (x116 x2815) (ite (= (x2873 41) x2815) x2522 (x3516 x2815))))
(assert (= (x2163 224) (x2743 224)))
(assert (= (x2671 (x2873 43)) (ite (and (not x2276) x2332) (x1981 (x2873 43)) (x1538 (x2873 43)))))
(assert (= (=> (and (= x3559 (x3457 352)) (= x762 (> x3559 0))) (and (=> x762 x2693) (=> (not x762) x2090))) x695))
(assert (= (ite (= (x2873 41) (x2873 45)) x2522 (x3516 (x2873 45))) (x116 (x2873 45))))
(assert (x2739 (x1626 128)))
(assert (= (x2249 x3105) (ite (= x3105 128) 16 (x1098 x3105))))
(assert (x1480 x2175))
(assert (x1480 x3376))
(assert (= (x1691 384) 0))
(assert (= (x1893 832) (x3330 832)))
(assert (= (x116 x862) (ite (= x862 (x2873 41)) x2522 (x3516 x862))))
(assert (= (ite (= x3461 x3114) x2558 (x1792 x3461)) (x912 x3461)))
(assert (x1480 x254))
(assert (= (x1972 576) x3109))
(assert (= (ite (= x753 832) x1850 (x3394 x753)) (x3404 x753)))
(assert (= (+ (x1739 x3180) 4) (x1739 (x1844 x3180 4))))
(assert (= (=> (and (= x863 (< x1963 x1550)) (= x1550 (x2502 224)) (= x1963 (x2455 (+ x2394 x1550))) (= x2394 (x1981 (x2873 40)))) (and (=> (not x863) x1206) (=> x863 x1698))) x1783))
(assert (=> (>= 10000 (x664 128)) (= (x1157 (x664 128)) (x2873 (x664 128)))))
(assert (= x768 (x1739 (x1157 x768))))
(assert (x2739 (x3417 160)))
(assert (x1480 x2252))
(assert (= (x2873 2388873442) (x1157 2388873442)))
(assert (= (x26 320) (x1686 320)))
(assert (= (ite (= x2140 (x2873 10)) x1719 (x2381 (x2873 10))) (x625 (x2873 10))))
(assert (x1480 x2196))
(assert (= x2855 (x1181 320)))
(assert (x1480 x982))
(assert (= (x2884 128) (x1739 (x1157 (x2884 128)))))
(assert (= (and x3322 (not x1174)) x2879))
(assert (= (x906 256) (x1006 256)))
(assert (= (x3061 (x2873 44)) (ite (= x1727 (x2873 44)) x2963 (x3316 (x2873 44)))))
(assert (= (=> (and (= x642 (x2181 544)) (= x2610 (mod (* x298 x642) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= 0 (ite x207 1 0)) x2281) (= (div x2921 31556952) x1919) (= x871 (= x3506 x298)) (= (x868 (x1157 (x33 128)) (x1157 (x33 160)) 0) x2815) (= x1820 (= 0 x642)) (= x207 (or x1820 x871)) (= (x2181 512) x1681) (= (div x2610 x642) x3506) (= (div x546 10000) x2921) (= x298 (x2129 x2815))) (and (=> (not x2281) x469) (=> x2281 x1698))) x744))
(assert (= (div x3431 (x1389 2 x2314)) (x1261 x3431 x2314)))
(assert (= (=> (and (= x1603 (< 0 x3165)) (= (x1975 320) x3165)) (and (=> (not x1603) x1365) (=> x1603 x793))) x3433))
(assert (= (x651 704) (x2045 704)))
(assert (= x690 (=> (and (= (x2381 x2140) x2984) (not (>= (+ x2984 x828) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x868 (x1157 (x3600 128)) (x1157 (x3600 160)) 0) x2140) (= x946 (x2590 416)) (= (x2455 (+ x3355 x3192)) x1575) (= (x150 416) x260) (not (>= (+ x3192 x3355) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< 0 x2675) x1907) (= x2429 (x3600 416)) (= (x150 448) x3355) (= (x234 640) x2675) (= x2654 (x3443 768)) (= x828 (x3600 416)) (not (= x260 0)) (= x1719 (x2455 (+ x2984 x828))) (= (x150 352) x3595) (= (x150 416) x3192)) (and (=> (not x1907) x2695) (=> x1907 x1886)))))
(assert (= (ite (= x3397 832) x1850 (x3394 x3397)) (x3404 x3397)))
(assert (= (ite (= x429 x1727) x2963 (x3316 x429)) (x3061 x429)))
(assert (x1480 x1026))
(assert (= (x625 x429) (ite (= x2140 x429) x1719 (x2381 x429))))
(assert (= (x653 x2669) (ite (and x730 (not x3520)) (x3061 x2669) (x2099 x2669))))
(assert (= (ite (= x753 256) 274184521717934524641157099916833587200 (x2458 x753)) (x330 x753)))
(assert (=> (<= (x1701 128) 10000) (= (x1157 (x1701 128)) (x2873 (x1701 128)))))
(assert (= (x1178 x3266) (ite (= x3102 x3266) x1095 (x578 x3266))))
(assert (x1480 x2613))
(assert (= (x660 320) (ite (and (not x1629) x438 x3562) (x2991 320) (x543 320))))
(assert (= (x116 (x2873 37)) (ite (= (x2873 41) (x2873 37)) x2522 (x3516 (x2873 37)))))
(assert (= (x1223 (x2873 44)) (ite (and (not x1900) x3717) (x1154 (x2873 44)) (x2416 (x2873 44)))))
(assert (= (x1178 x95) (ite (= x3102 x95) x1095 (x578 x95))))
(assert (= (x1358 384) (x802 384)))
(assert (x1480 x1577))
(assert (= (ite (and x1568 (not x1761)) (x116 (x2873 41)) (x3254 (x2873 41))) (x2129 (x2873 41))))
(assert (x1480 x1472))
(assert (= (x1227 512) (x3689 512)))
(assert (x1480 x918))
(assert (x1480 x62))
(assert (x1480 x479))
(assert (x1480 x869))
(assert (= (x906 320) (x1006 320)))
(assert (= (x992 320) (x3634 320)))
(assert (= (=> (and (= x101 (x808 512)) (= x1989 (x868 (x1157 (x1015 128)) (x1157 (x1015 160)) 0)) (= (< x1869 x2588) x1182) (= x2588 (x2129 x1364)) (= x1364 (x1844 x1989 5))) (and (=> (not x1182) x1665) (=> x1182 x1698))) x3118))
(assert (x1480 x2408))
(assert (= (x812 960) (x623 960)))
(assert (= (x2505 384) (x3301 384)))
(assert (x1480 x3668))
(assert (=> (<= (x192 160) 10000) (= (x2873 (x192 160)) (x1157 (x192 160)))))
(assert (x2739 (x708 160)))
(assert (x2739 (x1741 160)))
(assert (= (x912 x2763) (ite (= x2763 x3114) x2558 (x1792 x2763))))
(assert (= (x1502 832) (x348 832)))
(assert (= (ite (= x814 x3102) x1095 (x578 x814)) (x1178 x814)))
(assert (x1480 x493))
(assert (= (ite (= x1727 (x2873 39)) x2963 (x3316 (x2873 39))) (x3061 (x2873 39))))
(assert (= (ite (and (not x1900) x3717) (x1154 x962) (x2416 x962)) (x1223 x962)))
(assert (= (ite (and (not x1907) x2661) (x625 x2488) (x2349 x2488)) (x926 x2488)))
(assert (x1480 x247))
(assert (x1480 x3085))
(assert (= (x3689 x772) (ite (= x772 736) x2042 (x1227 x772))))
(assert (= (x1859 x738) (ite (= x738 576) x2848 (x1015 x738))))
(assert (x1480 x508))
(assert (x1480 x3487))
(assert (x1480 x2214))
(assert (= (x3417 160) (x1739 (x1157 (x3417 160)))))
(assert (x1480 x2644))
(assert (= (x516 352) (x461 352)))
(assert (x1480 x3439))
(assert (x1480 x2029))
(assert (=> (>= 10000 (x128 128)) (= (x2873 (x128 128)) (x1157 (x128 128)))))
(assert (x1480 x3533))
(assert (= (x781 800) (x2347 800)))
(assert (x1480 x2447))
(assert (= (x2489 192) x1773))
(assert (= (x1699 320) (x2180 320)))
(assert (x1480 x1141))
(assert (= (x3443 512) (x234 512)))
(assert (= (x1739 (x1844 x1922 2)) (+ 2 (x1739 x1922))))
(assert (x1480 x3509))
(assert (= (x2489 288) (x1243 288)))
(assert (x1480 x301))
(assert (= (x3213 x2857) (ite (= 352 x2857) x3126 (x505 x2857))))
(assert (= x2077 (=> (and (= x202 (x2455 (+ x1285 352))) (= x2259 (x522 192)) (= x1577 (x522 256)) (= x30 (x522 x202)) (= x1111 (x926 (x2873 45))) (= x1020 (x868 (x1157 (x1744 128)) (x1157 (x1744 160)) 0)) (= (mod (* 32 x2259) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1285) (= x236 (= x1577 x30)) (= (x926 x1020) x1112)) (and (=> (not x236) x2462) (=> x236 x3578)))))
(assert (= (x2445 (x2873 41)) (ite (and (not x112) x3717) (x229 (x2873 41)) (x3257 (x2873 41)))))
(assert (x1480 x3296))
(assert (= (x2445 x136) (ite (and (not x112) x3717) (x229 x136) (x3257 x136))))
(assert (= (+ (x1739 x1200) 1) (x1739 (x1844 x1200 1))))
(assert (= (x625 x814) (ite (= x814 x2140) x1719 (x2381 x814))))
(assert (= (x625 x1364) (ite (= x2140 x1364) x1719 (x2381 x1364))))
(assert (= x3705 (=> (and (= (x2548 320) x2422) (= x1821 (< x493 x2422))) (and (=> (not x1821) x138) (=> x1821 x1698)))))
(assert (= (ite (and (not x1907) x2661) (x625 (x2873 15)) (x2349 (x2873 15))) (x926 (x2873 15))))
(assert (= (x1223 x3266) (ite (and (not x1900) x3717) (x1154 x3266) (x2416 x3266))))
(assert (= (ite (and x3717 (not x112)) (x1696 384) (x196 384)) (x1644 384)))
(assert (= 2052391781 (x1739 (x2873 2052391781))))
(assert (= (x214 320) (x2374 320)))
(assert (x1480 x1029))
(assert (x2739 (x2174 128)))
(assert (= (x1157 2715400956) (x2873 2715400956)))
(assert (= (x3452 320) (x2700 320)))
(assert (= (x1739 (x1157 (x715 160))) (x715 160)))
(assert (x1480 x1773))
(assert (x1480 x2819))
(assert (=> (>= 10000 (x826 128)) (= (x2873 (x826 128)) (x1157 (x826 128)))))
(assert (= (x1739 (x1157 (x3549 128))) (x3549 128)))
(assert (x2739 (x192 128)))
(assert (= (x1739 (x1844 x2742 2)) (+ 2 (x1739 x2742))))
(assert (x1480 x3204))
(assert (x1480 x1852))
(assert (= (x1833 512) (x1747 512)))
(assert (= (x967 800) (x1213 800)))
(assert (= (x3723 160) (x1739 (x1157 (x3723 160)))))
(assert (x2739 (x373 128)))
(assert (= (ite (= 288 x753) x1850 (x2055 x753)) (x3177 x753)))
(assert (= (ite (and (not x112) x3717) (x229 x3542) (x3257 x3542)) (x2445 x3542)))
(assert (= (x1691 x3397) 0))
(assert (x1480 x1640))
(assert (= (ite (= (x2873 40) x3217) x2266 (x3502 (x2873 40))) (x1981 (x2873 40))))
(assert (= (ite (= 288 x738) x2720 (x1017 x738)) (x3064 x738)))
(assert (= (x3061 (x2873 41)) (ite (= x1727 (x2873 41)) x2963 (x3316 (x2873 41)))))
(assert (x1480 x3165))
(assert (x1480 x837))
(assert (x1480 x3616))
(assert (= (ite (and x2034 (not x1300)) (x1178 x3136) (x2267 x3136)) (x3340 x3136)))
(assert (=> (<= (x3417 160) 10000) (= (x1157 (x3417 160)) (x2873 (x3417 160)))))
(assert (= (ite (and x2034 (not x2028)) (x3340 x700) (x2866 x700)) (x3190 x700)))
(assert (= (+ (x1739 x63) 8) (x1739 (x1844 x63 8))))
(assert (= (x1739 (x1157 (x3055 160))) (x3055 160)))
(assert (=> (<= (x3529 128) 10000) (= (x2873 (x3529 128)) (x1157 (x3529 128)))))
(assert (=> (<= (x1924 160) 10000) (= (x1157 (x1924 160)) (x2873 (x1924 160)))))
(assert (x1480 x495))
(assert (x1480 x1984))
(assert (=> (>= 10000 (x119 128)) (= (x2873 (x119 128)) (x1157 (x119 128)))))
(assert (= (x967 576) (x1213 576)))
(assert (= (ite (and (not x1300) x2034) (x1074 832) (x3492 832)) (x1339 832)))
(assert (= (x1865 352) (x543 352)))
(assert (x1480 x3739))
(assert (x1480 x714))
(assert (x1480 x1588))
(assert (= (ite (= x2140 x2794) x1719 (x2381 x2794)) (x625 x2794)))
(assert (= (x2973 288) (x3428 288)))
(assert (= (ite (and (not x1900) x3717) (x1154 x2331) (x2416 x2331)) (x1223 x2331)))
(assert (= (x3301 128) (x1739 (x1157 (x3301 128)))))
(assert (= (x509 800) (x2875 800)))
(assert (x1480 x975))
(assert (=> (>= 10000 (x2625 128)) (= (x2873 (x2625 128)) (x1157 (x2625 128)))))
(assert (= x3208 (and (not x1042) x2750)))
(assert (= (x333 448) (x1268 448)))
(assert (x1480 x3131))
(assert (= (x3394 800) (x3404 800)))
(assert (x1480 x2020))
(assert (= (ite (and x3717 (not x1900)) (x1154 x700) (x2416 x700)) (x1223 x700)))
(assert (= (ite (= x3102 x1138) x1095 (x578 x1138)) (x1178 x1138)))
(assert (x1480 x2657))
(assert (= (x3638 704) (x1239 704)))
(assert (= (x1400 224) (x2094 224)))
(assert (x1480 x2779))
(assert (= (x2873 961581905) (x1157 961581905)))
(assert (x1480 x3041))
(assert (= (x1696 352) (x448 352)))
(assert (x1480 x2200))
(assert (x1480 x1437))
(assert (= x3426 (and x709 (not x1182))))
(assert (x1480 x1558))
(assert (x1480 x2367))
(assert (x1480 x1957))
(assert (= x1992 (and x2756 (not x1819))))
(assert (x1480 x2125))
(assert (= (x1739 (x1157 (x1741 128))) (x1741 128)))
(assert (x1480 x2110))
(assert (x1480 x2540))
(assert (= (x462 512) (x3261 512)))
(assert (= (ite (= (x2873 40) x2328) x1240 (x639 (x2873 40))) (x229 (x2873 40))))
(assert (x1480 x2123))
(assert (x1480 x586))
(assert (x1480 x2042))
(assert (x1480 x2439))
(assert (x1480 x2816))
(assert (x1480 x2236))
(assert (= (ite (and (not x3520) x730) (x3061 (x2873 41)) (x2099 (x2873 41))) (x653 (x2873 41))))
(assert (=> (>= 10000 (x3723 128)) (= (x1157 (x3723 128)) (x2873 (x3723 128)))))
(assert (= (x1789 512) (x672 512)))
(assert (= (ite (and x3717 x2668) (x605 x930) (x1958 x930)) (x3157 x930)))
(assert (= (x3443 704) (x234 704)))
(assert (x1480 x1433))
(assert (x1480 x2759))
(assert (= (x2129 x2669) (ite (and x1568 (not x1761)) (x116 x2669) (x3254 x2669))))
(assert (= (x1520 x3105) (ite (and x2385 (not x3440) (not x2923)) (x268 x3105) (x2068 x3105))))
(assert (= (x1178 x3471) (ite (= x3102 x3471) x1095 (x578 x3471))))
(assert (x1480 x249))
(assert (= (x1170 320) (x1378 320)))
(assert (= (x2044 832) (x212 832)))
(assert (= 0 (x1764 320)))
(assert (= (x926 x1138) (ite (and x2661 (not x1907)) (x625 x1138) (x2349 x1138))))
(assert (x1480 x2287))
(assert (= (=> (and (= x731 (= 2 x532)) (= x532 (x2455 (+ 1 x3120))) (= (x3609 192) x3120)) (and (=> x731 x1672) (=> (not x731) x2309))) x3304))
(assert (x1480 x649))
(assert (x1480 x195))
(assert (x1480 x2888))
(assert (= (x116 x700) (ite (= x700 (x2873 41)) x2522 (x3516 x700))))
(assert (= (x1243 256) (x2489 256)))
(assert (=> (>= 10000 (x2174 160)) (= (x2873 (x2174 160)) (x1157 (x2174 160)))))
(assert (= (x3638 384) (x1239 384)))
(assert (= (x3452 416) (x2700 416)))
(assert (= (x2873 2316151882) (x1157 2316151882)))
(assert (= (x1243 x3397) (ite (= x3397 192) 0 (x3401 x3397))))
(assert (= (x1533 800) (ite (and (not x2276) x2332) (x35 800) (x2397 800))))
(assert (= (x2873 3567397854) (x1157 3567397854)))
(assert (=> (>= 10000 (x3600 128)) (= (x2873 (x3600 128)) (x1157 (x3600 128)))))
(assert (x2739 (x3446 160)))
(assert (= (ite (and x2086 (not x111) x1251) (x2840 x3472) (x2703 x3472)) (x418 x3472)))
(assert (= (x1865 320) (x543 320)))
(assert (= (and x1194 (not x167)) x1107))
(assert (= (x3417 128) (x1739 (x1157 (x3417 128)))))
(assert (= x3660 (and x1149 x2073)))
(assert (x1480 x2835))
(assert (= (ite (= x930 128) 16 (x1712 x930)) (x1924 x930)))
(assert (x1480 x1117))
(assert (x1480 x2753))
(assert (x1480 x308))
(assert (x1480 x2096))
(assert (x1480 x3284))
(assert (= (x1486 384) (x1958 384)))
(assert (x1480 x511))
(assert (x1480 x1794))
(assert (=> (<= (x708 128) 10000) (= (x1157 (x708 128)) (x2873 (x708 128)))))
(assert (x1480 x2579))
(assert (x1480 x32))
(assert (= (ite (and x1835 x1204) (x3092 x772) (x936 x772)) (x1782 x772)))
(assert (x1480 x2932))
(assert (= (x2873 113225476) (x1157 113225476)))
(assert (= (x1739 (x1157 (x938 160))) (x938 160)))
(assert (x1480 x585))
(assert (x2739 (x1242 160)))
(assert (= (x1157 2681579215) (x2873 2681579215)))
(assert (x1480 x1977))
(assert (x1480 x1007))
(assert (= (and x1619 x1664) x2877))
(assert (x1480 x142))
(assert (= (x2854 352) (x2808 352)))
(assert (x1480 x1745))
(assert (x1480 x3369))
(assert (= (x1739 (x1157 (x826 128))) (x826 128)))
(assert (= (ite (= 224 x202) x3731 (x1383 x202)) (x1641 x202)))
(assert (x1480 x3450))
(assert (= x1147 (and (not x657) x2755)))
(assert (x2739 (x119 128)))
(assert (= (x1837 160) (x1739 (x1157 (x1837 160)))))
(assert (= (ite (= x738 1152) x974 (x812 x738)) (x623 x738)))
(assert (= (x3134 352) (x2166 352)))
(assert (x1480 x1317))
(assert (= (x1024 544) x586))
(assert (= (x1227 704) (x3689 704)))
(assert (x1480 x924))
(assert (= (x1739 (x2873 2209625481)) 2209625481))
(assert (= (x1770 160) (x1739 (x1157 (x1770 160)))))
(assert (= (x1213 384) (x967 384)))
(assert (= (ite (= 224 x2857) x3731 (x1383 x2857)) (x1641 x2857)))
(assert (= (x3340 x1449) (ite (and (not x1300) x2034) (x1178 x1449) (x2267 x1449))))
(assert (x1480 x3280))
(assert (= (x461 x772) (ite (= x772 192) x1043 (x516 x772))))
(assert (= (x1223 x95) (ite (and (not x1900) x3717) (x1154 x95) (x2416 x95))))
(assert (= x2848 (x1859 576)))
(assert (x1480 x2592))
(assert (=> (<= (x2410 128) 10000) (= (x1157 (x2410 128)) (x2873 (x2410 128)))))
(assert (= (x116 x1138) (ite (= x1138 (x2873 41)) x2522 (x3516 x1138))))
(assert (= (and x1738 (not x2567)) x1579))
(assert (= x3693 (=> (and (= (mod (* x3463 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2071) (= x2617 (x461 256)) (= x1080 (= x2617 x2544)) (= (x461 x1329) x2544) (= x1329 (x2455 (+ 352 x2071))) (= x3463 (x461 192))) (and x1080 x1328))))
(assert (x1480 x50))
(assert (= (x234 x202) (ite (= x202 736) x2654 (x3443 x202))))
(assert (x1480 x2909))
(assert (= (x2873 3504541104) (x1157 3504541104)))
(assert (x1480 x720))
(assert (and (= 10000000000000000000000000000 (x1389 10 28)) (= 100000000000000000000000000000 (x1389 10 29)) (= 10000000 (x1389 10 7)) (= 1 (x1389 10 0)) (= (x1389 10 20) 100000000000000000000) (= (x1389 10 16) 10000000000000000) (= (x1389 10 23) 100000000000000000000000) (= 1000000 (x1389 10 6)) (= (x1389 10 21) 1000000000000000000000) (= (x1389 10 27) 1000000000000000000000000000) (= (x1389 10 25) 10000000000000000000000000) (= (x1389 10 14) 100000000000000) (= (x1389 10 15) 1000000000000000) (= 10000000000000 (x1389 10 13)) (= 10000000000 (x1389 10 10)) (= (x1389 10 24) 1000000000000000000000000) (= (x1389 10 11) 100000000000) (= 100 (x1389 10 2)) (= 1000000000000 (x1389 10 12)) (= (x1389 10 22) 10000000000000000000000) (= (x1389 10 18) 1000000000000000000) (= (x1389 10 26) 100000000000000000000000000) (= 1000000000 (x1389 10 9)) (= 10 (x1389 10 1)) (= 100000 (x1389 10 5)) (= (x1389 10 3) 1000) (= (x1389 10 19) 10000000000000000000) (= (x1389 10 17) 100000000000000000) (= 100000000 (x1389 10 8)) (= 1000000000000000000000000000000 (x1389 10 30)) (= (x1389 10 4) 10000)))
(assert (= (x2129 x3641) (ite (and (not x1761) x1568) (x116 x3641) (x3254 x3641))))
(assert (x1480 x3108))
(assert (= (ite (= (x2873 41) x1727) x2522 (x3516 x1727)) (x116 x1727)))
(assert (= (x2376 288) (x3075 288)))
(assert (= (ite (and (not x944) x2889 x1481) (x3726 640) (x1161 640)) (x3702 640)))
(assert (= (x1701 416) (x2747 416)))
(assert (= (x1302 352) (x1881 352)))
(assert (x2739 (x3493 128)))
(assert (=> (>= 10000 (x2193 160)) (= (x1157 (x2193 160)) (x2873 (x2193 160)))))
(assert (x1480 x3078))
(assert (= (x214 640) (x2374 640)))
(assert (x1480 x1812))
(assert (x1480 x3239))
(assert (= (and x1212 x3725) x1827))
(assert (= (x1859 x1319) (ite (= x1319 576) x2848 (x1015 x1319))))
(assert (x1480 x2712))
(assert (=> (<= (x1822 128) 10000) (= (x2873 (x1822 128)) (x1157 (x1822 128)))))
(assert (= (and x557 x2877) x3608))
(assert (= (x14 288) (x1580 288)))
(assert (= (x1036 800) (x870 800)))
(assert (= (x1181 256) (x1474 256)))
(assert (= (x3190 x862) (ite (and x2034 (not x2028)) (x3340 x862) (x2866 x862))))
(assert (= (x2002 576) (x2410 576)))
(assert (= (x1157 1196925270) (x2873 1196925270)))
(assert (= (ite (and (not x1300) x2034) (x1178 x1032) (x2267 x1032)) (x3340 x1032)))
(assert (= (x1739 (x1157 (x3634 160))) (x3634 160)))
(assert (= (x1596 x3397) (ite (= x3397 576) x928 (x321 x3397))))
(assert (= x3341 (=> (and (= (> x177 0) x1934) (not (= x1811 0)) (= x2042 (x1227 768)) (= (x2455 (+ x1558 x2672)) x1814) (= x2608 (x1695 352)) (= x2558 (x2455 (+ x995 x2225))) (= x843 (x3723 416)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2225 x995))) (= x1811 (x1695 416)) (= x3636 (x2046 416)) (= x3114 (x868 (x1157 (x3723 128)) (x1157 (x3723 160)) 0)) (= (x1792 x3114) x2225) (= x2672 (x1695 448)) (= (x1695 416) x1558) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2672 x1558))) (= (x3689 640) x177) (= (x3723 416) x995)) (and (=> x1934 x456) (=> (not x1934) x2235)))))
(assert (= x1284 (=> (and (= (div x3743 x281) x3267) (= x10 (= x3267 x239)) (= x3352 (x2455 (+ x253 x2372))) (= x3747 (x36 352)) (= x2986 (= (ite x320 1 0) 0)) (= (x1981 (x2873 39)) x281) (= (= 0 x281) x1131) (= (mod (* x281 x239) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3743) (= x239 (x3688 320)) (= (or x10 x1131) x320)) (and (=> x2986 x1698) (=> (not x2986) x1689)))))
(assert (= (x3569 384) (x2508 384)))
(assert (= (x1223 x1032) (ite (and x3717 (not x1900)) (x1154 x1032) (x2416 x1032))))
(assert (x1480 x351))
(assert (= x2184 (=> (and (= (x2455 (+ x3494 x2507)) x2613) (= x3131 (x128 416)) (= x2792 (x2455 (+ x3131 x1794))) (= (x459 352) x1945) (= x1794 (x3316 x1727)) (= (> x1794 x2792) x2725) (= x1727 (x868 (x1157 (x128 128)) (x1157 (x128 160)) 0))) (and (=> x2725 x1698) (=> (not x2725) x613)))))
(assert (= (x912 x2479) (ite (= x3114 x2479) x2558 (x1792 x2479))))
(assert (= (x2973 352) (x3428 352)))
(assert (= (x870 384) (x1036 384)))
(assert (= (x1580 320) (x386 320)))
(assert (= (ite (= x1319 288) x2720 (x1017 x1319)) (x3064 x1319)))
(assert (= x633 (=> (= (> x2287 31) x515) (and (=> (not x515) x1698) (=> (and x515 (= x232 false)) x2308)))))
(assert (= (ite (and (not x2028) x2034) (x3340 x3136) (x2866 x3136)) (x3190 x3136)))
(assert (x1480 x545))
(assert (= (x1972 x848) (ite (= 576 x848) x3109 (x2498 x848))))
(assert (x2739 (x2498 160)))
(assert (= (x3354 896) (x1014 896)))
(assert (= (x1157 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x2873 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (ite (= x294 x2328) x1240 (x639 x294)) (x229 x294)))
(assert (x1480 x3109))
(assert (x1480 x489))
(assert (= (x2094 352) (x1400 352)))
(assert (= (ite (and (not x1900) x3717) (x1154 (x2873 45)) (x2416 (x2873 45))) (x1223 (x2873 45))))
(assert (x1480 x1636))
(assert (x2739 (x128 160)))
(assert (x1480 x2293))
(assert (x1480 x755))
(assert (= (ite (and (not x1761) x1568) (x116 x176) (x3254 x176)) (x2129 x176)))
(assert (x2739 (x2498 128)))
(assert (= (ite (and (not x3520) x730) (x3061 (x2873 10)) (x2099 (x2873 10))) (x653 (x2873 10))))
(assert (= (x1178 x1082) (ite (= x1082 x3102) x1095 (x578 x1082))))
(assert (= (ite (= x848 256) 274184521717934524641157099916833587200 (x2294 x848)) (x362 x848)))
(assert (x2739 (x3339 160)))
(assert (x1480 x417))
(assert (= (x2129 x3416) (ite (and x1568 (not x1761)) (x116 x3416) (x3254 x3416))))
(assert (x1480 x601))
(assert (x1480 x1758))
(assert (= (ite (= (x2873 39) x2140) x1719 (x2381 (x2873 39))) (x625 (x2873 39))))
(assert (= (x3240 800) (x2173 800)))
(assert (= (=> (and (= (x737 (- x1289 x3090)) x3402) (= (< x3469 x3610) x329) (= (x2387 896) x3610) (= (x163 (x2873 40)) x3469)) (and (=> x329 x1698) (=> (not x329) x775))) x2393))
(assert (= (x2045 640) (x651 640)))
(assert (=> (<= (x2387 128) 10000) (= (x1157 (x2387 128)) (x2873 (x2387 128)))))
(assert (x1480 x2133))
(assert (=> (<= (x3161 160) 10000) (= (x2873 (x3161 160)) (x1157 (x3161 160)))))
(assert (x2739 (x3086 160)))
(assert (= (x1739 (x1157 (x462 160))) (x462 160)))
(assert (= (ite (and x3717 (not x1900)) (x1154 x2437) (x2416 x2437)) (x1223 x2437)))
(assert (x1480 x952))
(assert (x1480 x3359))
(assert (= (+ (x1739 x3681) 7) (x1739 (x1844 x3681 7))))
(assert (x1480 x1625))
(assert (= (x3529 160) (x1739 (x1157 (x3529 160)))))
(assert (x2739 (x2884 160)))
(assert (x1480 x1706))
(assert (= (=> (and (= x88 (x3457 384)) (= x2905 (< 0 (x1261 x88 x1318))) (= x1318 (mod (* 8 x2302) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2060 (x3457 352)) (= (x737 (- 32 x2060)) x2302)) (and (=> (not x2905) x1698) (=> x2905 x2090))) x2693))
(assert (x1480 x2411))
(assert (= (x1739 (x1844 x1027 2)) (+ 2 (x1739 x1027))))
(assert (x1480 x1112))
(assert (= (ite (and x3300 (not x1934)) (x912 x294) (x3198 x294)) (x824 x294)))
(assert (= x1097 (=> (and (= (x1176 640) x2975) (= (< x980 x2975) x167)) (and (=> x167 x1698) (=> (not x167) x2370)))))
(assert (= (ite (= x3102 x1540) x1095 (x578 x1540)) (x1178 x1540)))
(assert (= (x3340 x1540) (ite (and (not x1300) x2034) (x1178 x1540) (x2267 x1540))))
(assert (= (x926 x1670) (ite (and x2661 (not x1907)) (x625 x1670) (x2349 x1670))))
(assert (= (ite (and (not x3520) x730) (x3061 (x2873 44)) (x2099 (x2873 44))) (x653 (x2873 44))))
(assert (= (ite (= x3102 x796) x1095 (x578 x796)) (x1178 x796)))
(assert (= (x3261 384) (x462 384)))
(assert (x1480 x1715))
(assert (= (x3007 128) (x1739 (x1157 (x3007 128)))))
(assert (x1480 x1997))
(assert (x1480 x3319))
(assert (x2739 (x100 160)))
(assert (= (x3638 x738) (ite (= 736 x738) x975 (x1239 x738))))
(assert (x1480 x1726))
(assert (x1480 x1795))
(assert (= (=> (and (= (or x559 x769) x2821) (= x1031 (= (ite x2821 1 0) 0)) (= (x737 (- x1869 x589)) x1729) (= (x3565 (x2873 44)) x785) (= (mod (* x1729 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x134) (= x1168 (div x134 x1729)) (= x559 (= 0 x1729)) (= x769 (= x785 x1168))) (and (=> (not x1031) x1061) (=> x1031 x1698))) x566))
(assert (= 288104347 (x1739 (x2873 288104347))))
(assert (x1480 x99))
(assert (= (x229 (x2873 37)) (ite (= (x2873 37) x2328) x1240 (x639 (x2873 37)))))
(assert (= (ite (and (not x1900) x3717) (x1154 x2140) (x2416 x2140)) (x1223 x2140)))
(assert (= (ite (= x738 256) 274184521717934524641157099916833587200 (x2277 x738)) (x2780 x738)))
(assert (= (x1074 832) (x2887 832)))
(assert (= (x1739 (x1157 (x460 160))) (x460 160)))
(assert (= (ite (and (not x1300) x2034) (x1178 (x2873 10)) (x2267 (x2873 10))) (x3340 (x2873 10))))
(assert (x1480 x227))
(assert (= (x1223 x3244) (ite (and (not x1900) x3717) (x1154 x3244) (x2416 x3244))))
(assert (x1480 x3659))
(assert (= (x3022 352) (x1483 352)))
(assert (= (x2743 704) (x965 704)))
(assert (x2739 (x1770 128)))
(assert (= (ite (and x1835 x1204) (x3092 800) (x936 800)) (x1782 800)))
(assert (= x656 (x736 544)))
(assert (x1480 x221))
(assert (x1480 x3237))
(assert (x2739 (x2271 160)))
(assert (= x317 (and x2268 x238)))
(assert (= (ite (= 640 x1319) 2388873442 (x2410 x1319)) (x2002 x1319)))
(assert (x1480 x3309))
(assert (= (x2129 (x2873 44)) (ite (and x1568 (not x1761)) (x116 (x2873 44)) (x3254 (x2873 44)))))
(assert (= 2388873442 (x2002 640)))
(assert (= (x1739 (x1157 (x373 128))) (x373 128)))
(assert (x1480 x2745))
(assert (= (ite (= x1032 (x2873 41)) x2522 (x3516 x1032)) (x116 x1032)))
(assert (= (x1242 160) (x1739 (x1157 (x1242 160)))))
(assert (= (x808 160) (x2191 160)))
(assert (x1480 x3145))
(assert (x1480 x1439))
(assert (= (ite (= x3292 x3102) x1095 (x578 x3292)) (x1178 x3292)))
(assert (x1480 x424))
(assert (x1480 x3613))
(assert (x1480 x1038))
(assert (= x2601 (=> (and (= (x1580 192) x121) (= (x2455 (+ 1 x121)) x747) (= x1999 (= x747 2))) (and (=> (not x1999) x3371) (=> x1999 x490)))))
(assert (x1480 x1245))
(assert (x1480 x3484))
(assert (=> (>= 10000 (x2180 128)) (= (x1157 (x2180 128)) (x2873 (x2180 128)))))
(assert (x1480 x2945))
(assert (= 3296657447 (x1739 (x2873 3296657447))))
(assert (x2739 (x3055 160)))
(assert (= x3294 (and (not x392) x49)))
(assert (= (x1089 x2763) (ite (and (not x3564) x1835) (x1154 x2763) (x2777 x2763))))
(assert (= (ite (= 192 x202) 0 (x14 x202)) (x1580 x202)))
(assert (= (x3488 384) (x780 384)))
(assert (= x335 (and x841 x3581)))
(assert (= (x461 192) x1043))
(assert (x1480 x1306))
(assert (= (x2129 x2927) (ite (and (not x1761) x1568) (x116 x2927) (x3254 x2927))))
(assert (x2739 274184521717934524641157099916833587200))
(assert (x1480 x2832))
(assert (= (x1739 (x1157 (x2056 128))) (x2056 128)))
(assert (= x1412 (and x3088 (not x1821))))
(assert (= (x321 160) (x1739 (x1157 (x321 160)))))
(assert (x1480 x2033))
(assert (= (x2508 x3472) (ite (= x3472 352) x1537 (x3569 x3472))))
(assert (=> (>= 10000 (x2498 160)) (= (x2873 (x2498 160)) (x1157 (x2498 160)))))
(assert (= (x1739 (x1844 x2054 6)) (+ (x1739 x2054) 6)))
(assert (= (x824 x278) (ite (and (not x1934) x3300) (x912 x278) (x3198 x278))))
(assert (= (x992 x930) (ite (= 288 x930) x2460 (x3634 x930))))
(assert (=> (<= (x1474 160) 10000) (= (x2873 (x1474 160)) (x1157 (x1474 160)))))
(assert (x1480 x3207))
(assert (x1480 x2984))
(assert (= (x1157 3065339685) (x2873 3065339685)))
(assert (=> (<= (x3719 128) 10000) (= (x2873 (x3719 128)) (x1157 (x3719 128)))))
(assert (= (x1739 (x1844 x2820 6)) (+ 6 (x1739 x2820))))
(assert (= (x2145 320) (x936 320)))
(assert (= (x2703 x738) (ite (= x738 832) x1850 (x2406 x738))))
(assert (= (ite (= (x2873 41) x3217) x2522 (x3516 x3217)) (x116 x3217)))
(assert (= (x228 320) (x1073 320)))
(assert (= (ite (= x1329 320) x3718 (x3428 x1329)) (x2973 x1329)))
(assert (= (x116 x3244) (ite (= (x2873 41) x3244) x2522 (x3516 x3244))))
(assert (= x2637 (and x1069 x2934)))
(assert (=> (<= (x228 160) 10000) (= (x2873 (x228 160)) (x1157 (x228 160)))))
(assert (= (+ 6 (x1739 x3277)) (x1739 (x1844 x3277 6))))
(assert (x1480 x2360))
(assert (= (x3104 320) (x2972 320)))
(assert (= (x214 384) (x2374 384)))
(assert (= (x1739 (x2873 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= (x2856 x1329) (ite (= x1329 128) 16 (x437 x1329))))
(assert (x1480 x1936))
(assert (=> (>= 10000 (x3488 128)) (= (x2873 (x3488 128)) (x1157 (x3488 128)))))
(assert (x2739 (x1469 128)))
(assert (= (x1739 (x1157 (x3301 160))) (x3301 160)))
(assert (= (x3075 832) (x2376 832)))
(assert (= (ite (and x2034 (not x2028)) (x3340 x2076) (x2866 x2076)) (x3190 x2076)))
(assert (=> (>= 10000 x768) (= (x1157 x768) (x2873 x768))))
(assert (= (x992 384) (x3634 384)))
(assert (x1480 x738))
(assert (= (x2491 160) (x1739 (x1157 (x2491 160)))))
(assert (= (x1074 384) (x2887 384)))
(assert (= (ite (and x2661 (not x1907)) (x625 x1714) (x2349 x1714)) (x926 x1714)))
(assert (= (ite (and (not x111) x1251 x2086) (x2840 384) (x2703 384)) (x418 384)))
(assert (x1480 x3192))
(assert (x1480 x53))
(assert (= (x3037 512) (x3726 512)))
(assert (x1480 x1728))
(assert (= x3576 (x2163 192)))
(assert (= (x1691 x772) 0))
(assert (= (x1739 (x1844 x1335 6)) (+ 6 (x1739 x1335))))
(assert (= (x1770 x753) (ite (= 128 x753) 16 (x2911 x753))))
(assert (= x2 (and x2517 (not x1225))))
(assert (= (ite (= (x2873 37) x1727) x2963 (x3316 (x2873 37))) (x3061 (x2873 37))))
(assert (= x456 (=> (and (= (x1353 768) x313) (= (= x1732 x2712) x2454) (= (x3689 736) x3160) (= (= x766 0) x1221) (not (= 0 x2706)) (= x2712 (x516 x753)) (= x1709 (x1130 512)) (= (or x704 x1221) x2782) (= (mod (* x766 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2025) (= (x516 192) x3538) (not (= 0 x807)) (= x637 (div x2025 x2706)) (= (ite x2782 1 0) x807) (= x1732 (x516 256)) (= x704 (= x3160 x861)) (= (div x2025 x766) x861) (= x766 (x3689 640)) (= x753 (x2455 (+ x478 352))) (= (mod (* 32 x3538) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x478) (= x2706 (x3689 704))) (and (=> x2454 x1328) (=> (not x2454) x945)))))
(assert (= (x965 352) (x2743 352)))
(assert (x1480 x3463))
(assert (= (x906 832) (x1006 832)))
(assert (x1480 x3614))
(assert (= (x926 (x2873 9)) (ite (and x2661 (not x1907)) (x625 (x2873 9)) (x2349 (x2873 9)))))
(assert (x2739 (x2625 128)))
(assert (= (x3190 x3266) (ite (and x2034 (not x2028)) (x3340 x3266) (x2866 x3266))))
(assert (x1480 x2938))
(assert (x1480 x1946))
(assert (= (ite (= x3217 x2927) x2266 (x3502 x2927)) (x1981 x2927)))
(assert (= (x625 x3102) (ite (= x3102 x2140) x1719 (x2381 x3102))))
(assert (= (x1311 832) (x35 832)))
(assert (= x1614 (or (and x1746 x3477) x258)))
(assert (= (x1739 (x1157 (x3339 160))) (x3339 160)))
(assert (= (ite (= 288 x772) x1850 (x2055 x772)) (x3177 x772)))
(assert (x2739 x477))
(assert (= (=> (= x3725 (< 0 x1295)) (and (=> (not x3725) x1698) (=> x3725 x262))) x1780))
(assert (= (x3064 384) (x1017 384)))
(assert (x1480 x2225))
(assert (x1480 x804))
(assert (= (x1596 576) x928))
(assert (x1480 x1778))
(assert (x1480 x2010))
(assert (=> (>= 10000 (x1148 128)) (= (x1157 (x1148 128)) (x2873 (x1148 128)))))
(assert (= (x1157 1888058147) (x2873 1888058147)))
(assert (= (and x3300 x1934) x767))
(assert (= (x1178 x1449) (ite (= x3102 x1449) x1095 (x578 x1449))))
(assert (= (x228 352) (x1073 352)))
(assert (= (ite (= x2669 x1727) x2963 (x3316 x2669)) (x3061 x2669)))
(assert (x1480 x44))
(assert (= (x1956 128) (x1739 (x1157 (x1956 128)))))
(assert (=> (>= 10000 (x2884 128)) (= (x2873 (x2884 128)) (x1157 (x2884 128)))))
(assert (= (x1157 2484372501) (x2873 2484372501)))
(assert (= x747 (x386 192)))
(assert (= (x174 384) (x3007 384)))
(assert (= (ite (= x3102 x37) x1095 (x578 x37)) (x1178 x37)))
(assert (= x412 (=> (and (not (= 1888058147 x1323)) (not (= x1323 2699341722)) (not (= x1323 2988718581)) (not (= 3877814014 x1323)) (not (= 1823829273 x1323)) (not (= x1323 3208075701)) (not (= x1323 961581905)) (not (= x1323 629314576)) (not (= x1323 3339924076)) (not (= 2052391781 x1323)) (= x2415 (x116 x2076)) (not (= x1323 861432679)) (not (= 1851080549 x1323)) (not (= x1323 3862337480)) (not (= x1323 3567397854)) (not (= x1323 1196925270)) (not (= x1323 3963136098)) (not (= 297566789 x1323)) (not (= x1323 3544214205)) (not (= 2316151882 x1323)) (not (= x1323 3296657447)) (not (= 2087341860 x1323)) (not (= 2835717307 x1323)) (not (= x1323 157198259)) (not (= x1323 464926286)) (not (= 347398766 x1323)) (not (= 2209625481 x1323)) (not (= 2757214935 x1323)) (not (= 596573372 x1323)) (not (= 3184006219 x1323)) (not (= 3092021830 x1323)) (not (= x1323 4151200938)) (not (= 3613687827 x1323)) (not (= 348537858 x1323)) (not (= 599290589 x1323)) (not (= 31576340 x1323)) (not (= 3184473787 x1323)) (not (= x1323 773487949)) (not (= 1020253707 x1323)) (not (= 1401663147 x1323)) (not (= 2869116585 x1323)) (= 2715400956 x1323) (not (= 2681579215 x1323)) (not (= x1323 16192718)) (not (= 1257916802 x1323)) (not (= x1323 2780307423)) (not (= 4267106866 x1323)) (not (= x1323 3491319510)) (not (= x1323 3147386184)) (not (= 2572356358 x1323)) (not (= x1323 356263876)) (not (= 3065339685 x1323)) (= x3362 (x868 (x1157 (x2249 128)) (x1157 (x2249 160)) 0)) (not (= x1323 288104347)) (= (< 0 x2415) x61) (not (= x1323 1977493762)) (= x2076 (x1844 x3362 1)) (not (= x1323 2484372501)) (not (= x1323 3504541104))) (and (=> (not x61) x1698) (=> x61 x2075)))))
(assert (x2739 (x715 128)))
(assert (= (ite (and x1835 (not x3564)) (x1154 x20) (x2777 x20)) (x1089 x20)))
(assert (= (ite (and (not x3564) x1835) (x1154 (x2873 41)) (x2777 (x2873 41))) (x1089 (x2873 41))))
(assert (= (+ 1 (x1739 x1226)) (x1739 (x1844 x1226 1))))
(assert (= (ite (= 352 x738) x1537 (x3569 x738)) (x2508 x738)))
(assert (= (x672 384) (x1789 384)))
(assert (= (ite (and (not x1761) x1568) (x116 x3266) (x3254 x3266)) (x2129 x3266)))
(assert (= (ite (= x2140 x1410) x1719 (x2381 x1410)) (x625 x1410)))
(assert (= (x460 128) (x1739 (x1157 (x460 128)))))
(assert (x1480 x850))
(assert (x1480 x1697))
(assert (x1480 x739))
(assert (= (x1924 320) (x1712 320)))
(assert (= 464926286 (x1739 (x2873 464926286))))
(assert (x2739 (x3428 160)))
(assert (x1480 x3494))
(assert (= (x1358 352) (x802 352)))
(assert (= (ite (= x1727 (x2873 45)) x2963 (x3316 (x2873 45))) (x3061 (x2873 45))))
(assert (x1480 x874))
(assert (= (x3007 352) (x174 352)))
(assert (= (x938 800) (x2050 800)))
(assert (x1480 x2237))
(assert (= (ite (and x1835 (not x3564)) (x1154 x1632) (x2777 x1632)) (x1089 x1632)))
(assert (x1480 x742))
(assert (= (x1220 384) (x188 384)))
(assert (x1480 x849))
(assert (x1480 x2116))
(assert (= (x2873 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x1157 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= (x625 x3641) (ite (= x2140 x3641) x1719 (x2381 x3641))))
(assert (x1480 x2985))
(assert (=> (<= (x664 160) 10000) (= (x2873 (x664 160)) (x1157 (x664 160)))))
(assert (x1480 x2614))
(assert (x1480 x2071))
(assert (=> (<= (x82 128) 10000) (= (x1157 (x82 128)) (x2873 (x82 128)))))
(assert (= (x1739 (x1844 x583 4)) (+ (x1739 x583) 4)))
(assert (= (x1596 x753) (ite (= x753 576) x928 (x321 x753))))
(assert (x1480 x3698))
(assert (x1480 x326))
(assert (=> (<= (x318 160) 10000) (= (x2873 (x318 160)) (x1157 (x318 160)))))
(assert (x1480 x745))
(assert (= (x462 544) (x3261 544)))
(assert (x1480 x3020))
(assert (= (ite (= x3397 640) 2388873442 (x462 x3397)) (x3261 x3397)))
(assert (= (ite (= x930 128) 16 (x2505 x930)) (x3301 x930)))
(assert (= (ite (= x3512 x3102) x1095 (x578 x3512)) (x1178 x3512)))
(assert (= (x3609 352) (x413 352)))
(assert (= (x2406 352) (x2703 352)))
(assert (= (ite (and x2661 (not x1907)) (x625 x833) (x2349 x833)) (x926 x833)))
(assert (= (x333 224) x316))
(assert (= (ite (and x2332 (not x2276)) (x35 384) (x2397 384)) (x1533 384)))
(assert (= (x2671 x1209) (ite (and (not x2276) x2332) (x1981 x1209) (x1538 x1209))))
(assert (x1480 x1334))
(assert (x1480 x3518))
(assert (= x1478 (=> (= (> x665 0) x1069) (and (=> (not x1069) x1698) (=> (and (= x1879 (ite (< x1100 32) x1100 32)) (= (> x854 0) x2533) (or (not x2533) (and (< x2230 4294967296) x2533)) (= x3645 (x1661 640)) (= x237 (x2455 (+ 32 x3645))) x1069) x695)))))
(assert (x1480 x1271))
(assert (x1480 x889))
(assert (x1480 x2074))
(assert (x2739 (x1488 128)))
(assert (= (ite (and x2661 (not x1907)) (x625 x1082) (x2349 x1082)) (x926 x1082)))
(assert (= (ite (and (not x2709) x1801) (x2671 (x2873 37)) (x2773 (x2873 37))) (x3565 (x2873 37))))
(assert (x1480 x2162))
(assert (x1480 x1910))
(assert (= (=> (and (= (= x2175 x3324) x579) (= x638 (mod (* x2300 x3324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= 0 x2300) x2189) (= (or x2189 x579) x2783) (= x467 (= (ite x2783 1 0) 0)) (= x2175 (div x638 x2300)) (= x3324 (x1176 576)) (= (x737 (- x980 x2975)) x2300)) (and (=> x467 x1698) (=> (not x467) x3057))) x2370))
(assert (x1480 x1535))
(assert (= (x2703 x3105) (ite (= x3105 832) x1850 (x2406 x3105))))
(assert (=> (>= 10000 (x1741 128)) (= (x2873 (x1741 128)) (x1157 (x1741 128)))))
(assert (= (x3340 x1670) (ite (and x2034 (not x1300)) (x1178 x1670) (x2267 x1670))))
(assert (=> (<= (x188 160) 10000) (= (x1157 (x188 160)) (x2873 (x188 160)))))
(assert (x2739 (x3670 128)))
(assert (= (ite (and (not x1761) x1568) (x116 (x2873 46)) (x3254 (x2873 46))) (x2129 (x2873 46))))
(assert (= (x2505 512) (x3301 512)))
(assert (= 0 (x3230 x848)))
(assert (= (ite (= x2140 x2307) x1719 (x2381 x2307)) (x625 x2307)))
(assert (x1480 x1169))
(assert (x1480 x957))
(assert (= (or (and x3479 x3583) x2494) x2310))
(assert (= (=> (and (= x58 (x1844 x943 6)) (= x3090 (x2387 896)) (= (> x3090 x1289) x5) (= (x1981 x58) x1289) (= x943 (x868 (x1157 (x2387 128)) (x1157 (x2387 160)) 0))) (and (=> (not x5) x2393) (=> x5 x1698))) x2128))
(assert (= (=> (and (= (x603 864) x476) (= (x812 928) x974) (= (< 0 x1908) x3236) (= x2252 (x116 x2794)) (= x2794 (x1844 x2438 6)) (or (and (> 4294967296 x608) x3236 (= x156 1)) (and (= x1908 x156) (not x3236))) (= (x868 (x1157 (x1883 128)) (x1157 (x1883 160)) 0) x2438) (= x2698 (x1460 896)) (= (x422 928) x145)) x1871) x3056))
(assert (= (x1739 (x1844 x991 6)) (+ 6 (x1739 x991))))
(assert (=> (<= (x460 160) 10000) (= (x1157 (x460 160)) (x2873 (x460 160)))))
(assert (= (x992 224) (x3634 224)))
(assert (= (ite (and x2034 (not x1300)) (x1178 x429) (x2267 x429)) (x3340 x429)))
(assert (= (x1220 800) (x188 800)))
(assert (x1480 x1623))
(assert (= (x1904 800) (x1661 800)))
(assert (= (x418 352) (ite (and x2086 (not x111) x1251) (x2840 352) (x2703 352))))
(assert (= (x226 160) (x1739 (x1157 (x226 160)))))
(assert (= (x1739 (x1157 (x2058 160))) (x2058 160)))
(assert (= (x2689 224) x3135))
(assert (x1480 x177))
(assert (=> (<= (x715 160) 10000) (= (x1157 (x715 160)) (x2873 (x715 160)))))
(assert (x1480 x3052))
(assert (= (ite (and (not x1907) x2661) (x625 x395) (x2349 x395)) (x926 x395)))
(assert (= (x1696 896) x2893))
(assert (x1480 x3317))
(assert (x1480 x3403))
(assert (= (=> (= (> x3337 0) x3072) (and (=> x3072 x2333) (=> (not x3072) x1698))) x2953))
(assert (= (ite (= x3397 448) x964 (x977 x3397)) (x1387 x3397)))
(assert (= (ite (= x202 192) x747 (x1580 x202)) (x386 x202)))
(assert (x1480 x2165))
(assert (= (x234 x848) (ite (= x848 736) x2654 (x3443 x848))))
(assert (= (ite (= x3512 x3217) x2266 (x3502 x3512)) (x1981 x3512)))
(assert (= (x1170 800) (x1378 800)))
(assert (= 3862337480 (x1739 (x2873 3862337480))))
(assert (x1480 x3310))
(assert (x1480 x2978))
(assert (x1480 x2869))
(assert (x1480 x2282))
(assert (x1480 x257))
(assert (x1480 x69))
(assert (=> (<= (x462 160) 10000) (= (x2873 (x462 160)) (x1157 (x462 160)))))
(assert (x1480 x1754))
(assert (x1480 x2961))
(assert (x1480 x2885))
(assert (= (x625 x95) (ite (= x95 x2140) x1719 (x2381 x95))))
(assert (= x2305 (x35 896)))
(assert (= (x554 160) (x1739 (x1157 (x554 160)))))
(assert (x1480 x2549))
(assert (= (x1739 (x1157 (x3161 128))) (x3161 128)))
(assert (x2739 (x938 128)))
(assert (= (ite (= 640 x3472) 2388873442 (x2410 x3472)) (x2002 x3472)))
(assert (x1480 x114))
(assert (x1480 x1554))
(assert (x1480 x3651))
(assert (= (x1981 x2437) (ite (= x3217 x2437) x2266 (x3502 x2437))))
(assert (=> (<= (x2057 160) 10000) (= (x1157 (x2057 160)) (x2873 (x2057 160)))))
(assert (= (x2726 384) (x713 384)))
(assert (x1480 x2025))
(assert (= (ite (= 448 x930) x1183 (x2374 x930)) (x214 x930)))
(assert (= (x625 x1540) (ite (= x1540 x2140) x1719 (x2381 x1540))))
(assert (= (x3493 128) (x1739 (x1157 (x3493 128)))))
(assert (x1480 x2868))
(assert (x1480 x3032))
(assert (= (x2806 352) (x3110 352)))
(assert (= (ite (= 224 x772) x210 (x2726 x772)) (x713 x772)))
(assert (= (x3104 832) (x2972 832)))
(assert (x2739 x1119))
(assert (= (x2249 160) (x1098 160)))
(assert (= x2756 (or (and x2080 (not x2555)) (and x1724 x1515) (and x750 x1147))))
(assert (= (x116 x429) (ite (= (x2873 41) x429) x2522 (x3516 x429))))
(assert (= x2451 (=> (and (= x1257 (x116 (x2873 40))) (= (= 0 x1257) x67)) (and (=> x67 x1698) (=> (not x67) x2097)))))
(assert (x1480 x2895))
(assert (= (x1661 384) (x1904 384)))
(assert (x1480 x668))
(assert (x1480 x3706))
(assert (= x3677 (=> (and (= (x660 800) x1565) (= (< 0 x1565) x1160)) (and (=> (not x1160) x3203) (=> x1160 x295)))))
(assert (= (x1553 x772) (ite (= x772 352) x1052 (x2744 x772))))
(assert (= (ite (= x2140 x1171) x1719 (x2381 x1171)) (x625 x1171)))
(assert (= (x2891 896) (x1763 896)))
(assert (x1480 x1124))
(assert (x1480 x2402))
(assert (= (x3726 384) (x3037 384)))
(assert (= (x1958 x2857) (ite (= x2857 832) x956 (x1486 x2857))))
(assert (x1480 x645))
(assert (x1480 x3267))
(assert (= (x116 x1082) (ite (= x1082 (x2873 41)) x2522 (x3516 x1082))))
(assert (= (x3022 896) (x1483 896)))
(assert (= (x3340 x37) (ite (and (not x1300) x2034) (x1178 x37) (x2267 x37))))
(assert (= (x2018 (x2873 10)) (ite (and (not x2676) x3717) (x2445 (x2873 10)) (x271 (x2873 10)))))
(assert (= (ite (and x2889 x1481 (not x944)) (x3726 512) (x1161 512)) (x3702 512)))
(assert (x1480 x3302))
(assert (= (x1881 320) (x1302 320)))
(assert (x1480 x2775))
(assert (= (ite (= (x2873 39) x3102) x1095 (x578 (x2873 39))) (x1178 (x2873 39))))
(assert (= (x543 800) (x1865 800)))
(assert (= x1386 (and x2390 x274)))
(assert (x1480 x3225))
(assert (= (ite (and (not x111) x2086 x1251) (x2840 800) (x2703 800)) (x418 800)))
(assert (x1480 x97))
(assert (x1480 x3703))
(assert (= (x1686 832) (x26 832)))
(assert (= (ite (and x2034 (not x2028)) (x3340 x2794) (x2866 x2794)) (x3190 x2794)))
(assert (x2739 (x208 160)))
(assert (x1480 x1215))
(assert (= (x1553 352) x1052))
(assert (x1480 x2484))
(assert (= (x1764 384) 0))
(assert (x1480 x532))
(assert (x1480 x809))
(assert (= (x1605 288) x1850))
(assert (x2739 (x425 128)))
(assert (= (ite (and (not x1900) x3717) (x1154 x2307) (x2416 x2307)) (x1223 x2307)))
(assert (= (x1739 (x1157 (x3161 160))) (x3161 160)))
(assert (= (ite (and (not x1761) x1568) (x116 (x2873 45)) (x3254 (x2873 45))) (x2129 (x2873 45))))
(assert (= (x1089 x3545) (ite (and x1835 (not x3564)) (x1154 x3545) (x2777 x3545))))
(assert (= (x3064 320) (x1017 320)))
(assert (x1480 x1197))
(assert (= (+ (x1739 x1349) 2) (x1739 (x1844 x1349 2))))
(assert (x1480 x1134))
(assert (=> (<= (x2806 160) 10000) (= (x2873 (x2806 160)) (x1157 (x2806 160)))))
(assert (= (x1089 x3114) (ite (and (not x3564) x1835) (x1154 x3114) (x2777 x3114))))
(assert (= x2487 (=> (and (= x3576 (x2455 (+ 1 x2293))) (= (x2743 192) x2293) (= x3259 (= 2 x3576))) (and (=> (not x3259) x816) (=> x3259 x3002)))))
(assert (= (x3064 256) (x1017 256)))
(assert (x1480 x2053))
(assert (x1480 x764))
(assert (= (=> (and (= x3436 (x868 (x1157 (x1956 128)) (x1157 (x1956 160)) 0)) (= (x625 x3436) x513) (not (> x1125 0)) (= x3117 (x1837 288)) (= x3346 (x1956 256)) (= x913 (x1404 224)) (not (> x792 x513)) (= (x2017 x3699) x3364) (= x3699 (x868 (x1157 (x1837 128)) (x1157 (x1837 160)) 0)) (= x3521 (x1837 288)) (= x792 (x1956 288)) (= x502 (x2455 (+ x3364 x3521))) (= (x1404 320) x1125) (= x1684 (x737 (- x513 x792))) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3521 x3364)))) x2695) x490))
(assert (= (x100 384) (x2195 384)))
(assert (= (x3638 512) (x1239 512)))
(assert (= (=> (and (= x1894 (= x2897 0)) (= (x3565 (x2873 43)) x2072) (= x2098 (x2670 256)) (= x1388 (x2670 256)) (= (= x2098 x1167) x2666) (= (or x1894 x2666) x1562) (= (= 0 (ite x1562 1 0)) x3121) (= (x2670 224) x2897) (= x1167 (div x2623 x2897)) (= (mod (* x2098 x2897) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2623)) (and (=> (not x3121) x1785) (=> x3121 x1698))) x813))
(assert (=> (<= (x1701 160) 10000) (= (x2873 (x1701 160)) (x1157 (x1701 160)))))
(assert (= (x1739 (x1157 (x1016 128))) (x1016 128)))
(assert (x1480 x1791))
(assert (= (ite (= x3114 x136) x2558 (x1792 x136)) (x912 x136)))
(assert (= (ite (and x3717 (not x2676)) (x2445 x846) (x271 x846)) (x2018 x846)))
(assert (=> (>= 10000 (x208 160)) (= (x2873 (x208 160)) (x1157 (x208 160)))))
(assert (x1480 x1057))
(assert (x1480 x1620))
(assert (x1480 x941))
(assert (x1480 x101))
(assert (= (x1339 320) (ite (and (not x1300) x2034) (x1074 320) (x3492 320))))
(assert (=> (<= (x2648 128) 10000) (= (x2873 (x2648 128)) (x1157 (x2648 128)))))
(assert (= (x1921 x930) (ite (= 864 x930) x2843 (x1153 x930))))
(assert (x1480 x771))
(assert (= (x612 320) (x1594 320)))
(assert (x1480 x2778))
(assert (x1480 x2570))
(assert (= x822 (=> (= x1308 (x548 704)) x2120)))
(assert (x1480 x3504))
(assert (x1480 x3663))
(assert (x1480 x398))
(assert (x1480 x3351))
(assert (= (x2873 3491319510) (x1157 3491319510)))
(assert (= (x516 320) (x2222 320)))
(assert (= (x1739 (x1157 (x2335 128))) (x2335 128)))
(assert (= x942 x1328))
(assert (x1480 x843))
(assert (= x3168 (and (not x3479) x3583)))
(assert (= 0 (x3609 192)))
(assert (= (ite (= x1727 x1670) x2963 (x3316 x1670)) (x3061 x1670)))
(assert (x1480 x1250))
(assert (= (ite (= x3003 x2328) x1240 (x639 x3003)) (x229 x3003)))
(assert (= (x3190 x1082) (ite (and (not x2028) x2034) (x3340 x1082) (x2866 x1082))))
(assert (x1480 x3082))
(assert (= (x1387 x1329) (ite (= 448 x1329) x964 (x977 x1329))))
(assert (x1480 x2265))
(assert (x1480 x2137))
(assert (x1480 x1668))
(assert (= (x2891 352) (x1763 352)))
(assert (x1480 x2403))
(assert (= (x2891 800) (x1763 800)))
(assert (= 2388873442 (x3570 640)))
(assert (x2739 (x1021 128)))
(assert (= (x1036 320) (x870 320)))
(assert (= x956 (x348 288)))
(assert (= (ite (and (not x1300) x2034) (x1178 x2307) (x2267 x2307)) (x3340 x2307)))
(assert (= (x1520 320) (ite (and (not x2923) x2385 (not x3440)) (x268 320) (x2068 320))))
(assert (= (ite (and (not x1934) x3300) (x912 (x2873 10)) (x3198 (x2873 10))) (x824 (x2873 10))))
(assert (= (x1739 (x1844 x2477 1)) (+ 1 (x1739 x2477))))
(assert (x1480 x1877))
(assert (= (ite (= x1573 x3102) x1095 (x578 x1573)) (x1178 x1573)))
(assert (= (ite (= x3102 x3136) x1095 (x578 x3136)) (x1178 x3136)))
(assert (= (ite (= x1329 576) x928 (x321 x1329)) (x1596 x1329)))
(assert (x2739 (x664 128)))
(assert (= (x2747 384) (x1701 384)))
(assert (= (x1739 (x1157 (x3549 160))) (x3549 160)))
(assert (= (x3565 x176) (ite (and (not x2709) x1801) (x2671 x176) (x2773 x176))))
(assert (= (=> (and (= x493 (x1268 288)) (= x903 (x2455 (+ x266 x2233))) (= x230 (x2129 (x2873 41))) (= (< x1869 x230) x3258)) (and (=> x3258 x1698) (=> (not x3258) x3170))) x647))
(assert (= (x625 (x2873 37)) (ite (= x2140 (x2873 37)) x1719 (x2381 (x2873 37)))))
(assert (= (ite (and (not x1300) x2034) (x1178 x2927) (x2267 x2927)) (x3340 x2927)))
(assert (= (x1739 (x1157 (x3372 160))) (x3372 160)))
(assert (= (x2129 x3244) (ite (and (not x1761) x1568) (x116 x3244) (x3254 x3244))))
(assert (x1480 x3018))
(assert (= (x623 x3472) (ite (= 1152 x3472) x974 (x812 x3472))))
(assert (x1480 x237))
(assert (= (or x3707 (and x3300 (not x1934))) x1149))
(assert (= (x1956 160) (x1739 (x1157 (x1956 160)))))
(assert (= (x926 (x2873 37)) (ite (and (not x1907) x2661) (x625 (x2873 37)) (x2349 (x2873 37)))))
(assert (=> (>= 10000 (x1281 128)) (= (x2873 (x1281 128)) (x1157 (x1281 128)))))
(assert (= (ite (and x3717 (not x1753) x3577) (x1485 x2857) (x288 x2857)) (x1489 x2857)))
(assert (x1480 x634))
(assert (x1480 x1004))
(assert (= (x3190 x58) (ite (and (not x2028) x2034) (x3340 x58) (x2866 x58))))
(assert (= (x625 x1209) (ite (= x1209 x2140) x1719 (x2381 x1209))))
(assert (x1480 x3642))
(assert (x1480 x702))
(assert (= (x1089 x2328) (ite (and (not x3564) x1835) (x1154 x2328) (x2777 x2328))))
(assert (x1480 x3501))
(assert (= (and (not x3140) x1579) x2385))
(assert (x1480 x2943))
(assert (= (x926 x1573) (ite (and x2661 (not x1907)) (x625 x1573) (x2349 x1573))))
(assert (= (ite (= x3102 x1410) x1095 (x578 x1410)) (x1178 x1410)))
(assert (= (x926 x3266) (ite (and x2661 (not x1907)) (x625 x3266) (x2349 x3266))))
(assert (= (x2973 384) (x3428 384)))
(assert (= (x1739 (x1157 x2083)) x2083))
(assert (x1480 x3566))
(assert (= (x1921 352) (x1153 352)))
(assert (= (ite (= 736 x753) x2042 (x1227 x753)) (x3689 x753)))
(assert (= x525 (or (and x630 x3624) x662)))
(assert (= (ite (= x930 128) 7 (x1073 x930)) (x228 x930)))
(assert (= (ite (and x3717 x3577 (not x1753)) (x1485 x202) (x288 x202)) (x1489 x202)))
(assert (= (x2703 800) (x2406 800)))
(assert (x1480 x3378))
(assert (x2739 (x925 128)))
(assert (x1480 x147))
(assert (= (x1311 384) (x35 384)))
(assert (=> (>= 10000 (x3007 160)) (= (x2873 (x3007 160)) (x1157 (x3007 160)))))
(assert (x2739 (x2193 160)))
(assert (x1480 x366))
(assert (= (x1140 x772) (ite (and x841 x3581 (not x1942)) (x3059 x772) (x3716 x772))))
(assert (= (x3190 x3641) (ite (and (not x2028) x2034) (x3340 x3641) (x2866 x3641))))
(assert (= (x2279 832) (x442 832)))
(assert (= (=> (and (= (= x545 2) x3477) (= x2459 (x522 192)) (= (x2455 (+ x2459 1)) x545)) (and (=> x3477 x3270) (=> (not x3477) x1593))) x2462))
(assert (= (or (and x1801 (not x2709)) (and (not x463) x243)) x78))
(assert (x1480 x465))
(assert (x1480 x1276))
(assert (= (x1924 352) (x1712 352)))
(assert (=> (<= (x2180 160) 10000) (= (x1157 (x2180 160)) (x2873 (x2180 160)))))
(assert (x1480 x3453))
(assert (x1480 x1889))
(assert (= (x1739 (x1157 (x3600 160))) (x3600 160)))
(assert (x1480 x2541))
(assert (x2739 (x1766 160)))
(assert (= (x116 x176) (ite (= x176 (x2873 41)) x2522 (x3516 x176))))
(assert (= (ite (= 320 x3397) x3718 (x3428 x3397)) (x2973 x3397)))
(assert (= (x824 (x2873 45)) (ite (and x3300 (not x1934)) (x912 (x2873 45)) (x3198 (x2873 45)))))
(assert (= (x2854 896) (x2808 896)))
(assert (= (x1170 384) (x1378 384)))
(assert (x1480 x2051))
(assert (x1480 x2675))
(assert (x1480 x1055))
(assert (x1480 x3113))
(assert (= (x625 x620) (ite (= x620 x2140) x1719 (x2381 x620))))
(assert (x2739 (x2744 160)))
(assert (x1480 x2023))
(assert (x1480 x1316))
(assert (=> (>= 10000 (x1488 128)) (= (x2873 (x1488 128)) (x1157 (x1488 128)))))
(assert (= (x1252 224) (x3679 224)))
(assert (= (x3330 320) (x1893 320)))
(assert (x1480 x1113))
(assert (= (x2734 832) (x43 832)))
(assert (= x1835 x1831))
(assert (x2739 (x2648 128)))
(assert (x1480 x1332))
(assert (x1480 x3469))
(assert (= (ite (= x3105 192) 0 (x413 x3105)) (x3609 x3105)))
(assert (= (x2747 320) (x1701 320)))
(assert (= (x2044 320) (x212 320)))
(assert (x1480 x792))
(assert (= (x1582 640) (x1642 640)))
(assert (x1480 x2226))
(assert (= (ite (= x738 320) x2855 (x1474 x738)) (x1181 x738)))
(assert (= (x461 256) (x516 256)))
(assert (= (x1739 (x2873 1020253707)) 1020253707))
(assert (= x154 (=> (= (< 0 x1320) x2009) (and (=> (and (not x2009) (= false x232)) x2308) (=> (and x2009 (= x1853 (< 0 x3078)) (or (and (not x1853) (= x379 x3078)) (and (< x2287 4294967296) (= x379 1) x1853))) x2339)))))
(assert (= (and x2929 x1918) x1968))
(assert (= (and x2066 x1411) x378))
(assert (= (x1148 160) (x1739 (x1157 (x1148 160)))))
(assert (x2739 (x1956 160)))
(assert (= x607 (and x1147 (not x750))))
(assert (= (x912 x20) (ite (= x3114 x20) x2558 (x1792 x20))))
(assert (x1480 x2965))
(assert (= (x3394 352) (x3404 352)))
(assert (= (x413 224) (x3609 224)))
(assert (= (x2747 352) (x1701 352)))
(assert (= (x1474 288) (x1181 288)))
(assert (=> (>= 10000 (x208 128)) (= (x1157 (x208 128)) (x2873 (x208 128)))))
(assert (= (x1178 x3432) (ite (= x3432 x3102) x1095 (x578 x3432))))
(assert (= (x3240 352) (x2173 352)))
(assert (x1480 x1959))
(assert (x1480 x266))
(assert (= (x1580 384) (x386 384)))
(assert (= (x1739 (x2873 2681579215)) 2681579215))
(assert (= (ite (and (not x1942) x3581 x841) (x3059 352) (x3716 352)) (x1140 352)))
(assert (x1480 x3283))
(assert (= (ite (and (not x1900) x3717) (x1154 x2488) (x2416 x2488)) (x1223 x2488)))
(assert (=> (<= (x3670 160) 10000) (= (x1157 (x3670 160)) (x2873 (x3670 160)))))
(assert (= (x664 224) (x165 224)))
(assert (= (x2873 3184473787) (x1157 3184473787)))
(assert (= 274184521717934524641157099916833587200 (x1739 (x1157 274184521717934524641157099916833587200))))
(assert (x1480 x1941))
(assert (= (x1739 (x1844 x514 3)) (+ (x1739 x514) 3)))
(assert (= x52 x22))
(assert (= (=> (and (not (> x3209 x3260)) (= (x1242 288) x2988) (= x2488 (x868 (x1157 (x3329 128)) (x1157 (x3329 160)) 0)) (= x537 (x3336 x2016)) (not (>= (+ x2988 x537) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (> x1798 0)) (= x1657 (x2455 (+ x2988 x537))) (= x198 (x737 (- x3260 x3209))) (= (x1242 288) x3152) (= x3260 (x926 x2488)) (= (x2603 320) x1798) (= x3209 (x3329 288)) (= x3435 (x3329 256)) (= (x2603 224) x3318) (= (x868 (x1157 (x1242 128)) (x1157 (x1242 160)) 0) x2016)) x1872) x3270))
(assert (x1480 x3311))
(assert (x1480 x2963))
(assert (= (x2806 416) (x3110 416)))
(assert (= (x2410 128) (x1739 (x1157 (x2410 128)))))
(assert (= (x3340 x1599) (ite (and x2034 (not x1300)) (x1178 x1599) (x2267 x1599))))
(assert (= (x1017 160) (x1739 (x1157 (x1017 160)))))
(assert (= (x1739 (x1157 (x2249 128))) (x2249 128)))
(assert (= (x116 x1364) (ite (= (x2873 41) x1364) x2522 (x3516 x1364))))
(assert (= (x1739 (x2873 2780307423)) 2780307423))
(assert (x1480 x3191))
(assert (x1480 x2443))
(assert (x1480 x2121))
(assert (= x3276 (=> (and (= (= x1613 0) x568) (= x1613 (x3638 704))) (and (=> x568 x1698) (=> (not x568) x80)))))
(assert (x1480 x2429))
(assert (x1480 x1308))
(assert (= (ite (= x667 x3114) x2558 (x1792 x667)) (x912 x667)))
(assert (= (x2143 384) (x522 384)))
(assert (= 2988718581 (x1739 (x2873 2988718581))))
(assert (= (x2129 x58) (ite (and x1568 (not x1761)) (x116 x58) (x3254 x58))))
(assert (x1480 x1928))
(assert (= (x229 x3554) (ite (= x3554 x2328) x1240 (x639 x3554))))
(assert (= (x3059 512) (x1955 512)))
(assert (= (x1502 352) (x348 352)))
(assert (x1480 x2379))
(assert (x1480 x1512))
(assert (x1480 x2599))
(assert (x1480 x823))
(assert (= (ite (and x3300 (not x1934)) (x912 x3542) (x3198 x3542)) (x824 x3542)))
(assert (= (x3570 576) (x208 576)))
(assert (= (x3190 x2927) (ite (and x2034 (not x2028)) (x3340 x2927) (x2866 x2927))))
(assert (x1480 x891))
(assert (x1480 x3248))
(assert (= (x901 320) (x947 320)))
(assert (= (x1483 416) (x3022 416)))
(assert (= (ite (and (not x3520) x730) (x3061 x833) (x2099 x833)) (x653 x833)))
(assert (= (ite (= (x2873 15) (x2873 41)) x2522 (x3516 (x2873 15))) (x116 (x2873 15))))
(assert (= (ite (= x2794 x3102) x1095 (x578 x2794)) (x1178 x2794)))
(assert (= (x1378 288) (x1170 288)))
(assert (= (x2873 3544214205) (x1157 3544214205)))
(assert (x1480 x1798))
(assert (= (x1686 352) (x26 352)))
(assert (= (x926 x2331) (ite (and (not x1907) x2661) (x625 x2331) (x2349 x2331))))
(assert (x1480 x1784))
(assert (x1480 x561))
(assert (= (+ (x1739 x2438) 6) (x1739 (x1844 x2438 6))))
(assert (x1480 x2395))
(assert (x1480 x768))
(assert (= (x234 352) (x3443 352)))
(assert (= (x516 288) (x461 288)))
(assert (x1480 x3068))
(assert (x1480 x2572))
(assert (=> (<= (x2827 160) 10000) (= (x2873 (x2827 160)) (x1157 (x2827 160)))))
(assert (= (x1223 x862) (ite (and (not x1900) x3717) (x1154 x862) (x2416 x862))))
(assert (x1480 x2616))
(assert (x1480 x220))
(assert (=> (>= 10000 (x925 128)) (= (x2873 (x925 128)) (x1157 (x925 128)))))
(assert (= (=> (and (= x2757 (< x2049 1000000000000000000)) (= x2049 (x333 224))) (and (=> x2757 x3147) (=> (not x2757) x3705))) x3241))
(assert (= (x1859 384) (x1015 384)))
(assert (x1480 x1351))
(assert (= (x529 896) (x2296 896)))
(assert (x1480 x550))
(assert (= (+ (x1739 x1858) 6) (x1739 (x1844 x1858 6))))
(assert (=> (<= (x192 128) 10000) (= (x1157 (x192 128)) (x2873 (x192 128)))))
(assert (= (x1383 512) (x1641 512)))
(assert (x1480 x198))
(assert (x1480 x1033))
(assert (=> (<= (x938 128) 10000) (= (x2873 (x938 128)) (x1157 (x938 128)))))
(assert (= (x1378 352) (x1170 352)))
(assert (x1480 x1916))
(assert (x1480 x253))
(assert (x1480 x2207))
(assert (x1480 x1415))
(assert (= x2361 (and (not x966) x2365)))
(assert (x1480 x3618))
(assert (x1480 x2148))
(assert (=> (>= 10000 (x1770 128)) (= (x1157 (x1770 128)) (x2873 (x1770 128)))))
(assert (= (x1739 (x2873 2699341722)) 2699341722))
(assert (= (ite (and x2661 (not x1907)) (x625 x3136) (x2349 x3136)) (x926 x3136)))
(assert (= (x1739 (x1157 (x2625 160))) (x2625 160)))
(assert (x1480 x2792))
(assert (= (x2222 704) (x516 704)))
(assert (= (x1739 (x1157 (x1766 160))) (x1766 160)))
(assert (x1480 x1613))
(assert (= (x1739 (x1157 (x228 160))) (x228 160)))
(assert (= x2723 (=> (and (= x2709 (> x377 0)) (= x377 (x1533 832))) (and (=> x2709 x1980) (=> (not x2709) x397)))))
(assert (= (ite (= x1329 640) 2388873442 (x462 x1329)) (x3261 x1329)))
(assert (= (x926 x1540) (ite (and (not x1907) x2661) (x625 x1540) (x2349 x1540))))
(assert (= (+ 6 (x1739 x3195)) (x1739 (x1844 x3195 6))))
(assert (= (x1981 x1573) (ite (= x3217 x1573) x2266 (x3502 x1573))))
(assert (= x28 (=> (and (= (x1243 192) x305) (= x1773 (x2455 (+ x305 1))) (= (= 2 x1773) x1737)) (and (=> x1737 x2951) (=> (not x1737) x21)))))
(assert (= (x2191 320) (x808 320)))
(assert (= x1803 (x1893 352)))
(assert (= (x2800 224) (x3528 224)))
(assert (= (ite (and (not x1900) x3717) (x1154 x37) (x2416 x37)) (x1223 x37)))
(assert (= x1738 (and x2334 (not x2281))))
(assert (= (x1739 (x1157 (x740 128))) (x740 128)))
(assert (= (x2440 896) (x3251 896)))
(assert (= (ite (and (not x3520) x730) (x3061 x3471) (x2099 x3471)) (x653 x3471)))
(assert (x1480 x1952))
(assert (= (=> (and (= x1450 (= x569 0)) (= x3106 (or x1552 x1450)) (= (= x1134 x495) x1552) (= (div x1434 x569) x495) (= x1134 (x3638 736)) (= x3288 (= (ite x3106 1 0) 0)) (= (x3638 640) x569) (= x1434 (mod (* x1134 x569) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x3288) x3276) (=> x3288 x1698))) x3077))
(assert (= (x1739 (x1157 (x1036 128))) (x1036 128)))
(assert (= (x653 x1573) (ite (and x730 (not x3520)) (x3061 x1573) (x2099 x1573))))
(assert (= (x3488 320) (x780 320)))
(assert (= (x333 704) (x1268 704)))
(assert (=> (<= (x1883 160) 10000) (= (x1157 (x1883 160)) (x2873 (x1883 160)))))
(assert (= (ite (= x753 352) x1052 (x2744 x753)) (x1553 x753)))
(assert (x1480 x1708))
(assert (x1480 x1638))
(assert (x1480 x1116))
(assert (x2739 (x1924 128)))
(assert (= (x901 352) (x947 352)))
(assert (x2739 x768))
(assert (x1480 x1111))
(assert (x1480 x3481))
(assert (x1480 x953))
(assert (= (x2743 256) (x965 256)))
(assert (x1480 x985))
(assert (x1480 x3043))
(assert (x1480 x2234))
(assert (x1480 x23))
(assert (x1480 x1446))
(assert (= (x625 (x2873 40)) (ite (= x2140 (x2873 40)) x1719 (x2381 (x2873 40)))))
(assert (= (ite (= x1727 x1209) x2963 (x3316 x1209)) (x3061 x1209)))
(assert (= (+ 5 (x1739 x1989)) (x1739 (x1844 x1989 5))))
(assert (= (x1739 (x1844 x3531 4)) (+ (x1739 x3531) 4)))
(assert (x1480 x3645))
(assert (= (x1109 288) (x3222 288)))
(assert (= (x926 x3166) (ite (and (not x1907) x2661) (x625 x3166) (x2349 x3166))))
(assert (=> (<= (x3086 128) 10000) (= (x1157 (x3086 128)) (x2873 (x3086 128)))))
(assert (= (x1739 (x2873 3339924076)) 3339924076))
(assert (= (x824 x3461) (ite (and (not x1934) x3300) (x912 x3461) (x3198 x3461))))
(assert (x2739 (x462 128)))
(assert (= (ite (and x3717 (not x112)) (x1696 800) (x196 800)) (x1644 800)))
(assert (x1480 x2022))
(assert (x1480 x73))
(assert (= (x625 x1071) (ite (= x2140 x1071) x1719 (x2381 x1071))))
(assert (= x125 (and x47 x452)))
(assert (x1480 x117))
(assert (= x761 (and x832 (not x3729))))
(assert (x1480 x631))
(assert (= (x2376 224) (x3075 224)))
(assert (= (x2734 800) (x43 800)))
(assert (= (x3452 224) (x2700 224)))
(assert (x1480 x766))
(assert (= (ite (and x2661 (not x1907)) (x625 x2794) (x2349 x2794)) (x926 x2794)))
(assert (x2739 (x3243 160)))
(assert (x2739 (x2387 160)))
(assert (=> (>= 10000 (x808 160)) (= (x2873 (x808 160)) (x1157 (x808 160)))))
(assert (x1480 x1139))
(assert (x1480 x2803))
(assert (=> (>= 10000 (x526 128)) (= (x2873 (x526 128)) (x1157 (x526 128)))))
(assert (= (ite (and x3717 (not x1900)) (x1154 x1071) (x2416 x1071)) (x1223 x1071)))
(assert (= (ite (and (not x1900) x3717) (x1154 (x2873 43)) (x2416 (x2873 43))) (x1223 (x2873 43))))
(assert (x1480 x2161))
(assert (= (x625 x962) (ite (= x2140 x962) x1719 (x2381 x962))))
(assert (= (ite (= 320 x930) x900 (x664 x930)) (x165 x930)))
(assert (=> (>= 10000 (x3178 160)) (= (x2873 (x3178 160)) (x1157 (x3178 160)))))
(assert (= (x529 832) (x2296 832)))
(assert (= (ite (and x2034 (not x1300)) (x1178 x3266) (x2267 x3266)) (x3340 x3266)))
(assert (= (x824 x1078) (ite (and x3300 (not x1934)) (x912 x1078) (x3198 x1078))))
(assert (= (x1015 544) (x1859 544)))
(assert (= (x3569 320) (x2508 320)))
(assert (= (x625 x2815) (ite (= x2140 x2815) x1719 (x2381 x2815))))
(assert (=> (>= 10000 (x2699 128)) (= (x1157 (x2699 128)) (x2873 (x2699 128)))))
(assert (x1480 x1857))
(assert (= (x1243 704) (x2489 704)))
(assert (x1480 x2404))
(assert (x1480 x2401))
(assert (= (ite (= 704 x738) x3683 (x2831 x738)) (x268 x738)))
(assert (= (x625 (x2873 9)) (ite (= (x2873 9) x2140) x1719 (x2381 (x2873 9)))))
(assert (x1480 x1834))
(assert (= (x3488 160) (x780 160)))
(assert (= (x2873 2087341860) (x1157 2087341860)))
(assert (x1480 x2582))
(assert (x1480 x2103))
(assert (= (x1655 896) (x2011 896)))
(assert (= x1034 (or (and x1568 (not x1761)) (and (not x1445) x1354))))
(assert (x1480 x1550))
(assert (= (=> (and (= (x2455 (+ x3369 x1806)) x2987) (= (x1844 x3036 8) x1032) (= x3369 (x788 x1032)) (= (x868 (x1157 (x526 128)) (x1157 (x526 160)) 0) x3036) (= x1819 (< x2987 x3369)) (= x3360 (x3381 224)) (= (x526 256) x1806)) (and (=> (not x1819) x217) (=> x1819 x1698))) x1070))
(assert (= (and (not x1156) x1528) x1507))
(assert (x1480 x2682))
(assert (=> (<= (x3569 128) 10000) (= (x1157 (x3569 128)) (x2873 (x3569 128)))))
(assert (= (and x1831 (not x3235)) x3581))
(assert (= (x418 x1319) (ite (and x2086 (not x111) x1251) (x2840 x1319) (x2703 x1319))))
(assert (x1480 x2101))
(assert (=> (<= (x826 160) 10000) (= (x2873 (x826 160)) (x1157 (x826 160)))))
(assert (=> (<= (x3446 128) 10000) (= (x2873 (x3446 128)) (x1157 (x3446 128)))))
(assert (x1480 x3344))
(assert (= (x1157 861432679) (x2873 861432679)))
(assert (= (x1626 160) (x1739 (x1157 (x1626 160)))))
(assert (= x3390 (and x2924 (not x75))))
(assert (x1480 x728))
(assert (= (x3190 x3217) (ite (and x2034 (not x2028)) (x3340 x3217) (x2866 x3217))))
(assert (x2739 (x1044 128)))
(assert (= (x2173 320) (x3240 320)))
(assert (= x1568 (and (not x2918) x2954)))
(assert (= (x1739 (x1157 (x1036 160))) (x1036 160)))
(assert (= (x2329 320) (x1024 320)))
(assert (= (ite (= x2140 x2016) x1719 (x2381 x2016)) (x625 x2016)))
(assert (x1480 x1811))
(assert (= (x1223 x2669) (ite (and (not x1900) x3717) (x1154 x2669) (x2416 x2669))))
(assert (x1480 x1814))
(assert (= (x2854 224) (x2808 224)))
(assert (= (x1644 320) (ite (and x3717 (not x112)) (x1696 320) (x196 320))))
(assert (= (x1833 448) (x1747 448)))
(assert (x1480 x1772))
(assert (= (x1883 160) (x1739 (x1157 (x1883 160)))))
(assert (= (x437 384) (x2856 384)))
(assert (x1480 x379))
(assert (= (x288 352) (x1159 352)))
(assert (= (ite (and (not x2028) x2034) (x3340 (x2873 46)) (x2866 (x2873 46))) (x3190 (x2873 46))))
(assert (= (x437 352) (x2856 352)))
(assert (= (x587 864) (x1990 864)))
(assert (x1480 x2239))
(assert (= (x2854 288) (x2808 288)))
(assert (= (x229 (x2873 39)) (ite (= (x2873 39) x2328) x1240 (x639 (x2873 39)))))
(assert (= (=> (and (= x111 (< x2702 x1379)) (= (x2455 (+ x1379 x542)) x2702)) (and (=> (and (= x1251 (< 0 x200)) (= (x2455 (+ x1521 x2031)) x1889) (or (and (not x1251) (= x200 x1650)) (and (< x2364 4294967296) x1251 (= x1650 1))) (not x111)) x1008) (=> x111 x1698))) x3167))
(assert (= (x1596 320) (x321 320)))
(assert (x1480 x3661))
(assert (x1480 x3431))
(assert (= (x1580 192) 0))
(assert (= (x926 x862) (ite (and (not x1907) x2661) (x625 x862) (x2349 x862))))
(assert (= x956 (x587 288)))
(assert (= (ite (and (not x3520) x730) (x3061 x3217) (x2099 x3217)) (x653 x3217)))
(assert (= (ite (and (not x1907) x2661) (x625 x1727) (x2349 x1727)) (x926 x1727)))
(assert (= (x938 384) (x2050 384)))
(assert (= (x1739 (x1844 x1912 7)) (+ 7 (x1739 x1912))))
(assert (= (x425 160) (x1739 (x1157 (x425 160)))))
(assert (x1480 x487))
(assert (x1480 x2098))
(assert (x1480 x3346))
(assert (x1480 x999))
(assert (=> (>= 10000 (x65 160)) (= (x2873 (x65 160)) (x1157 (x65 160)))))
(assert (= (x926 x3471) (ite (and x2661 (not x1907)) (x625 x3471) (x2349 x3471))))
(assert (x1480 x1944))
(assert (x1480 x3434))
(assert (x1480 x1320))
(assert (x2739 (x1924 160)))
(assert (=> (<= (x1488 160) 10000) (= (x1157 (x1488 160)) (x2873 (x1488 160)))))
(assert (=> (>= 10000 (x3398 128)) (= (x2873 (x3398 128)) (x1157 (x3398 128)))))
(assert (x1480 x3413))
(assert (= x827 (=> (= (> x622 0) x2366) (and (=> x2366 x3687) (=> (not x2366) x1698)))))
(assert (x1480 x622))
(assert (x2739 (x3329 160)))
(assert (x2739 (x1281 128)))
(assert (and (= (x1389 2 205) 51422017416287688817342786954917203280710495801049370729644032) (= (x1389 2 161) 2923003274661805836407369665432566039311865085952) (= 166153499473114484112975882535043072 (x1389 2 117)) (= (x1389 2 86) 77371252455336267181195264) (= (x1389 2 202) 6427752177035961102167848369364650410088811975131171341205504) (= 1461501637330902918203684832716283019655932542976 (x1389 2 160)) (= (x1389 2 4) 16) (= 2417851639229258349412352 (x1389 2 81)) (= 28948022309329048855892746252171976963317496166410141009864396001978282409984 (x1389 2 254)) (= (x1389 2 33) 8589934592) (= 81129638414606681695789005144064 (x1389 2 106)) (= (x1389 2 151) 2854495385411919762116571938898990272765493248) (= (x1389 2 52) 4503599627370496) (= 47890485652059026823698344598447161988085597568237568 (x1389 2 175)) (= (x1389 2 75) 37778931862957161709568) (= 302231454903657293676544 (x1389 2 78)) (= (x1389 2 40) 1099511627776) (= 7237005577332262213973186563042994240829374041602535252466099000494570602496 (x1389 2 252)) (= (x1389 2 126) 85070591730234615865843651857942052864) (= 137438953472 (x1389 2 37)) (= 25108406941546723055343157692830665664409421777856138051584 (x1389 2 194)) (= 12554203470773361527671578846415332832204710888928069025792 (x1389 2 193)) (= (x1389 2 67) 147573952589676412928) (= (x1389 2 220) 1684996666696914987166688442938726917102321526408785780068975640576) (= (x1389 2 165) 46768052394588893382517914646921056628989841375232) (= 11692013098647223345629478661730264157247460343808 (x1389 2 163)) (= 110427941548649020598956093796432407239217743554726184882600387580788736 (x1389 2 236)) (= (x1389 2 25) 33554432) (= 524288 (x1389 2 19)) (= 83076749736557242056487941267521536 (x1389 2 116)) (= 383123885216472214589586756787577295904684780545900544 (x1389 2 178)) (= (x1389 2 34) 17179869184) (= 1329227995784915872903807060280344576 (x1389 2 120)) (= 2147483648 (x1389 2 31)) (= (x1389 2 53) 9007199254740992) (= 11150372599265311570767859136324180752990208 (x1389 2 143)) (= 1073741824 (x1389 2 30)) (= 182687704666362864775460604089535377456991567872 (x1389 2 157)) (= 105312291668557186697918027683670432318895095400549111254310977536 (x1389 2 216)) (= (x1389 2 50) 1125899906842624) (= (x1389 2 123) 10633823966279326983230456482242756608) (= 664613997892457936451903530140172288 (x1389 2 119)) (= 6129982163463555433433388108601236734474956488734408704 (x1389 2 182)) (= (x1389 2 99) 633825300114114700748351602688) (= 154742504910672534362390528 (x1389 2 87)) (= 696898287454081973172991196020261297061888 (x1389 2 139)) (= (x1389 2 180) 1532495540865888858358347027150309183618739122183602176) (= 56539106072908298546665520023773392506479484700019806659891398441363832832 (x1389 2 245)) (= (x1389 2 74) 18889465931478580854784) (= (x1389 2 155) 45671926166590716193865151022383844364247891968) (= 3213876088517980551083924184682325205044405987565585670602752 (x1389 2 201)) (= (x1389 2 109) 649037107316853453566312041152512) (= 113078212145816597093331040047546785012958969400039613319782796882727665664 (x1389 2 246)) (= 2475880078570760549798248448 (x1389 2 91)) (= 1427247692705959881058285969449495136382746624 (x1389 2 150)) (= 288230376151711744 (x1389 2 58)) (= (x1389 2 140) 1393796574908163946345982392040522594123776) (= (x1389 2 11) 2048) (= 42535295865117307932921825928971026432 (x1389 2 125)) (= 365375409332725729550921208179070754913983135744 (x1389 2 158)) (= (x1389 2 247) 226156424291633194186662080095093570025917938800079226639565593765455331328) (= (x1389 2 51) 2251799813685248) (= (x1389 2 215) 52656145834278593348959013841835216159447547700274555627155488768) (= (x1389 2 131) 2722258935367507707706996859454145691648) (= (x1389 2 174) 23945242826029513411849172299223580994042798784118784) (= 13479973333575319897333507543509815336818572211270286240551805124608 (x1389 2 223)) (= 13803492693581127574869511724554050904902217944340773110325048447598592 (x1389 2 233)) (= 11972621413014756705924586149611790497021399392059392 (x1389 2 173)) (= 162259276829213363391578010288128 (x1389 2 107)) (= 5708990770823839524233143877797980545530986496 (x1389 2 152)) (= 23384026197294446691258957323460528314494920687616 (x1389 2 164)) (= 2787593149816327892691964784081045188247552 (x1389 2 141)) (= (x1389 2 138) 348449143727040986586495598010130648530944) (= 89202980794122492566142873090593446023921664 (x1389 2 146)) (= (x1389 2 42) 4398046511104) (= (x1389 2 136) 87112285931760246646623899502532662132736) (= (x1389 2 110) 1298074214633706907132624082305024) (= (x1389 2 156) 91343852333181432387730302044767688728495783936) (= (x1389 2 159) 730750818665451459101842416358141509827966271488) (= (x1389 2 171) 2993155353253689176481146537402947624255349848014848) (= (x1389 2 176) 95780971304118053647396689196894323976171195136475136) (= (x1389 2 186) 98079714615416886934934209737619787751599303819750539264) (= (x1389 2 48) 281474976710656) (= (x1389 2 135) 43556142965880123323311949751266331066368) (= (x1389 2 197) 200867255532373784442745261542645325315275374222849104412672) (= 748288838313422294120286634350736906063837462003712 (x1389 2 169)) (= (x1389 2 207) 205688069665150755269371147819668813122841983204197482918576128) (= 4835703278458516698824704 (x1389 2 82)) (= (x1389 2 100) 1267650600228229401496703205376) (= 3450873173395281893717377931138512726225554486085193277581262111899648 (x1389 2 231)) (= 22835963083295358096932575511191922182123945984 (x1389 2 154)) (= (x1389 2 21) 2097152) (= (x1389 2 184) 24519928653854221733733552434404946937899825954937634816) (= (x1389 2 240) 1766847064778384329583297500742918515827483896875618958121606201292619776) (= 55213970774324510299478046898216203619608871777363092441300193790394368 (x1389 2 235)) (= 2199023255552 (x1389 2 41)) (= (x1389 2 214) 26328072917139296674479506920917608079723773850137277813577744384) (= (x1389 2 167) 187072209578355573530071658587684226515959365500928) (= (x1389 2 83) 9671406556917033397649408) (= 1606938044258990275541962092341162602522202993782792835301376 (x1389 2 200)) (= 5846006549323611672814739330865132078623730171904 (x1389 2 162)) (= 1180591620717411303424 (x1389 2 70)) (= 590295810358705651712 (x1389 2 69)) (= 4096 (x1389 2 12)) (= 70368744177664 (x1389 2 46)) (= (x1389 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= 10141204801825835211973625643008 (x1389 2 103)) (= 713623846352979940529142984724747568191373312 (x1389 2 149)) (= (x1389 2 211) 3291009114642412084309938365114701009965471731267159726697218048) (= (x1389 2 1) 2) (= (x1389 2 38) 274877906944) (= 174224571863520493293247799005065324265472 (x1389 2 137)) (= (x1389 2 129) 680564733841876926926749214863536422912) (= (x1389 2 210) 1645504557321206042154969182557350504982735865633579863348609024) (= 34359738368 (x1389 2 35)) (= (x1389 2 47) 140737488355328) (= (x1389 2 101) 2535301200456458802993406410752) (= 16384 (x1389 2 14)) (= (x1389 2 54) 18014398509481984) (= 75557863725914323419136 (x1389 2 76)) (= (x1389 2 229) 862718293348820473429344482784628181556388621521298319395315527974912) (= 64 (x1389 2 6)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1389 2 256)) (= 6582018229284824168619876730229402019930943462534319453394436096 (x1389 2 212)) (= 374144419156711147060143317175368453031918731001856 (x1389 2 168)) (= 36893488147419103232 (x1389 2 65)) (= (x1389 2 241) 3533694129556768659166595001485837031654967793751237916243212402585239552) (= (x1389 2 28) 268435456) (= 21778071482940061661655974875633165533184 (x1389 2 134)) (= (x1389 2 27) 134217728) (= 562949953421312 (x1389 2 49)) (= (x1389 2 15) 32768) (= 1809251394333065553493296640760748560207343510400633813116524750123642650624 (x1389 2 250)) (= 220855883097298041197912187592864814478435487109452369765200775161577472 (x1389 2 237)) (= 842498333348457493583344221469363458551160763204392890034487820288 (x1389 2 219)) (= 3618502788666131106986593281521497120414687020801267626233049500247285301248 (x1389 2 251)) (= 883423532389192164791648750371459257913741948437809479060803100646309888 (x1389 2 239)) (= (x1389 2 187) 196159429230833773869868419475239575503198607639501078528) (= (x1389 2 234) 27606985387162255149739023449108101809804435888681546220650096895197184) (= 1 (x1389 2 0)) (= 1152921504606846976 (x1389 2 60)) (= 19342813113834066795298816 (x1389 2 84)) (= (x1389 2 57) 144115188075855872) (= 14134776518227074636666380005943348126619871175004951664972849610340958208 (x1389 2 243)) (= (x1389 2 73) 9444732965739290427392) (= 191561942608236107294793378393788647952342390272950272 (x1389 2 177)) (= (x1389 2 63) 9223372036854775808) (= (x1389 2 77) 151115727451828646838272) (= (x1389 2 228) 431359146674410236714672241392314090778194310760649159697657763987456) (= (x1389 2 196) 100433627766186892221372630771322662657637687111424552206336) (= 44601490397061246283071436545296723011960832 (x1389 2 145)) (= 11417981541647679048466287755595961091061972992 (x1389 2 153)) (= (x1389 2 144) 22300745198530623141535718272648361505980416) (= (x1389 2 64) 18446744073709551616) (= 332306998946228968225951765070086144 (x1389 2 118)) (= 210624583337114373395836055367340864637790190801098222508621955072 (x1389 2 217)) (= 107839786668602559178668060348078522694548577690162289924414440996864 (x1389 2 226)) (= (x1389 2 17) 131072) (= 68719476736 (x1389 2 36)) (= (x1389 2 96) 79228162514264337593543950336) (= 512 (x1389 2 9)) (= 19807040628566084398385987584 (x1389 2 94)) (= (x1389 2 43) 8796093022208) (= 441711766194596082395824375185729628956870974218904739530401550323154944 (x1389 2 238)) (= 316912650057057350374175801344 (x1389 2 98)) (= (x1389 2 92) 4951760157141521099596496896) (= 2305843009213693952 (x1389 2 61)) (= (x1389 2 115) 41538374868278621028243970633760768) (= 8192 (x1389 2 13)) (= (x1389 2 253) 14474011154664524427946373126085988481658748083205070504932198000989141204992) (= 2361183241434822606848 (x1389 2 71)) (= (x1389 2 209) 822752278660603021077484591278675252491367932816789931674304512) (= (x1389 2 221) 3369993333393829974333376885877453834204643052817571560137951281152) (= 178405961588244985132285746181186892047843328 (x1389 2 147)) (= (x1389 2 104) 20282409603651670423947251286016) (= (x1389 2 85) 38685626227668133590597632) (= 10384593717069655257060992658440192 (x1389 2 113)) (= (x1389 2 44) 17592186044416) (= (x1389 2 97) 158456325028528675187087900672) (= (x1389 2 218) 421249166674228746791672110734681729275580381602196445017243910144) (= (x1389 2 183) 12259964326927110866866776217202473468949912977468817408) (= 262144 (x1389 2 18)) (= (x1389 2 242) 7067388259113537318333190002971674063309935587502475832486424805170479104) (= (x1389 2 95) 39614081257132168796771975168) (= 8388608 (x1389 2 23)) (= 53919893334301279589334030174039261347274288845081144962207220498432 (x1389 2 225)) (= (x1389 2 230) 1725436586697640946858688965569256363112777243042596638790631055949824) (= (x1389 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (x1389 2 190) 1569275433846670190958947355801916604025588861116008628224) (= (x1389 2 148) 356811923176489970264571492362373784095686656) (= (x1389 2 24) 16777216) (= (x1389 2 108) 324518553658426726783156020576256) (= 5444517870735015415413993718908291383296 (x1389 2 132)) (= 5070602400912917605986812821504 (x1389 2 102)) (= (x1389 2 55) 36028797018963968) (= 803469022129495137770981046170581301261101496891396417650688 (x1389 2 199)) (= 72057594037927936 (x1389 2 56)) (= 401734511064747568885490523085290650630550748445698208825344 (x1389 2 198)) (= 1496577676626844588240573268701473812127674924007424 (x1389 2 170)) (= (x1389 2 124) 21267647932558653966460912964485513216) (= 215679573337205118357336120696157045389097155380324579848828881993728 (x1389 2 227)) (= 35184372088832 (x1389 2 45)) (= (x1389 2 93) 9903520314283042199192993792) (= (x1389 2 121) 2658455991569831745807614120560689152) (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1389 2 255)) (= 5192296858534827628530496329220096 (x1389 2 112)) (= (x1389 2 181) 3064991081731777716716694054300618367237478244367204352) (= (x1389 2 222) 6739986666787659948666753771754907668409286105635143120275902562304) (= 256 (x1389 2 8)) (= (x1389 2 122) 5316911983139663491615228241121378304) (= 102844034832575377634685573909834406561420991602098741459288064 (x1389 2 206)) (= (x1389 2 172) 5986310706507378352962293074805895248510699696029696) (= (x1389 2 3) 8) (= 1237940039285380274899124224 (x1389 2 90)) (= 4194304 (x1389 2 22)) (= 1208925819614629174706176 (x1389 2 80)) (= (x1389 2 249) 904625697166532776746648320380374280103671755200316906558262375061821325312) (= 766247770432944429179173513575154591809369561091801088 (x1389 2 179)) (= 28269553036454149273332760011886696253239742350009903329945699220681916416 (x1389 2 244)) (= (x1389 2 203) 12855504354071922204335696738729300820177623950262342682411008) (= (x1389 2 89) 618970019642690137449562112) (= 6277101735386680763835789423207666416102355444464034512896 (x1389 2 192)) (= 4 (x1389 2 2)) (= (x1389 2 232) 6901746346790563787434755862277025452451108972170386555162524223799296) (= 73786976294838206464 (x1389 2 66)) (= (x1389 2 10) 1024) (= 128 (x1389 2 7)) (= (x1389 2 5) 32) (= 50216813883093446110686315385661331328818843555712276103168 (x1389 2 195)) (= 67108864 (x1389 2 26)) (= (x1389 2 105) 40564819207303340847894502572032) (= 576460752303423488 (x1389 2 59)) (= 309485009821345068724781056 (x1389 2 88)) (= 411376139330301510538742295639337626245683966408394965837152256 (x1389 2 208)) (= (x1389 2 213) 13164036458569648337239753460458804039861886925068638906788872192) (= 20769187434139310514121985316880384 (x1389 2 114)) (= 5575186299632655785383929568162090376495104 (x1389 2 142)) (= 536870912 (x1389 2 29)) (= 4294967296 (x1389 2 32)) (= (x1389 2 204) 25711008708143844408671393477458601640355247900524685364822016) (= 1361129467683753853853498429727072845824 (x1389 2 130)) (= (x1389 2 128) 340282366920938463463374607431768211456) (= 93536104789177786765035829293842113257979682750464 (x1389 2 166)) (= (x1389 2 189) 784637716923335095479473677900958302012794430558004314112) (= 170141183460469231731687303715884105728 (x1389 2 127)) (= (x1389 2 133) 10889035741470030830827987437816582766592) (= (x1389 2 191) 3138550867693340381917894711603833208051177722232017256448) (= 1048576 (x1389 2 20)) (= (x1389 2 16) 65536) (= (x1389 2 68) 295147905179352825856) (= 49039857307708443467467104868809893875799651909875269632 (x1389 2 185)) (= (x1389 2 188) 392318858461667547739736838950479151006397215279002157056) (= 2596148429267413814265248164610048 (x1389 2 111)) (= 604462909807314587353088 (x1389 2 79)) (= 549755813888 (x1389 2 39)) (= 4611686018427387904 (x1389 2 62)) (= (x1389 2 72) 4722366482869645213696)))
(assert (= (x3190 (x2873 40)) (ite (and x2034 (not x2028)) (x3340 (x2873 40)) (x2866 (x2873 40)))))
(assert (= (ite (= x1329 224) x210 (x2726 x1329)) (x713 x1329)))
(assert (= (x3313 800) (x736 800)))
(assert (= (x3240 480) (x2173 480)))
(assert (x1480 x3234))
(assert (x1480 x4))
(assert (x2739 (x915 128)))
(assert (= (and x3715 (not x853)) x1363))
(assert (=> (<= (x1015 128) 10000) (= (x1157 (x1015 128)) (x2873 (x1015 128)))))
(assert (x1480 x2761))
(assert (= (x713 x753) (ite (= x753 224) x210 (x2726 x753))))
(assert (x1480 x2426))
(assert (= x2509 x2090))
(assert (=> (>= 10000 (x2271 160)) (= (x2873 (x2271 160)) (x1157 (x2271 160)))))
(assert (= (x234 x2857) (ite (= 736 x2857) x2654 (x3443 x2857))))
(assert (= (x1157 347398766) (x2873 347398766)))
(assert (= (x2129 x3471) (ite (and x1568 (not x1761)) (x116 x3471) (x3254 x3471))))
(assert (= 2572356358 (x1739 (x2873 2572356358))))
(assert (x1480 x3151))
(assert (= (x824 (x2873 40)) (ite (and x3300 (not x1934)) (x912 (x2873 40)) (x3198 (x2873 40)))))
(assert (x2739 (x1016 160)))
(assert (x2739 (x2410 160)))
(assert (x1480 x2343))
(assert (= (ite (= x1319 192) 0 (x413 x1319)) (x3609 x1319)))
(assert (= (x1972 320) (x2498 320)))
(assert (= (x3110 384) (x2806 384)))
(assert (= (x1739 (x1157 (x1488 160))) (x1488 160)))
(assert (x1480 x1688))
(assert (= (x2780 224) (x2277 224)))
(assert (x1480 x3206))
(assert (= (x1580 352) (x386 352)))
(assert (= (x3261 320) (x462 320)))
(assert (= (x1789 800) (x672 800)))
(assert (= (x2873 3339924076) (x1157 3339924076)))
(assert (x1480 x466))
(assert (x1480 x749))
(assert (x1480 x2172))
(assert (= (x2294 864) (x362 864)))
(assert (= (ite (= x3105 352) x1537 (x3569 x3105)) (x2508 x3105)))
(assert (= (x2808 832) (x2854 832)))
(assert (x1480 x291))
(assert (= (x1895 320) (x1195 320)))
(assert (=> (<= (x3446 160) 10000) (= (x1157 (x3446 160)) (x2873 (x3446 160)))))
(assert (= (ite (= x1727 x2437) x2963 (x3316 x2437)) (x3061 x2437)))
(assert (= (x3565 (x2873 44)) (ite (and (not x2709) x1801) (x2671 (x2873 44)) (x2773 (x2873 44)))))
(assert (= (x229 x340) (ite (= x340 x2328) x1240 (x639 x340))))
(assert (= x2996 (=> (and (= x3605 (x824 (x2873 45))) (= x772 (x2455 (+ 352 x498))) (= (x1243 x772) x3606) (= (x1243 256) x1372) (= x1532 (x824 x1078)) (= (x868 (x1157 (x2625 128)) (x1157 (x2625 160)) 0) x1078) (= x3642 (x1243 192)) (= (= x1372 x3606) x419) (= x498 (mod (* 32 x3642) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x419) x28) (=> x419 x1366)))))
(assert (= (x43 896) (x2734 896)))
(assert (= (ite (= x1319 256) 274184521717934524641157099916833587200 (x2277 x1319)) (x2780 x1319)))
(assert (x1480 x754))
(assert (= (ite (and x2661 (not x1907)) (x625 x620) (x2349 x620)) (x926 x620)))
(assert (= (x1958 x202) (ite (= x202 832) x956 (x1486 x202))))
(assert (= (x3340 x2669) (ite (and (not x1300) x2034) (x1178 x2669) (x2267 x2669))))
(assert (= (x1739 (x1157 (x3670 128))) (x3670 128)))
(assert (= (x2873 4267106866) (x1157 4267106866)))
(assert (x2739 (x2335 128)))
(assert (= (+ (x1739 x888) 5) (x1739 (x1844 x888 5))))
(assert (= (x1148 128) (x1739 (x1157 (x1148 128)))))
(assert (= 7 (x3007 128)))
(assert (=> (<= (x3418 128) 10000) (= (x2873 (x3418 128)) (x1157 (x3418 128)))))
(assert (=> (<= (x124 160) 10000) (= (x1157 (x124 160)) (x2873 (x124 160)))))
(assert (x1480 x3697))
(assert (x1480 x2388))
(assert (=> (<= (x1741 160) 10000) (= (x2873 (x1741 160)) (x1157 (x1741 160)))))
(assert (= 2715400956 (x1739 (x2873 2715400956))))
(assert (x1480 x3480))
(assert (= (x1739 (x2873 3065339685)) 3065339685))
(assert (= (ite (= x753 448) x964 (x977 x753)) (x1387 x753)))
(assert (x1480 x1961))
(assert (x1480 x357))
(assert (x1480 x2041))
(assert (x1480 x2781))
(assert (= (ite (= x738 832) x1850 (x1865 x738)) (x543 x738)))
(assert (= (ite (and (not x3520) x730) (x3061 x3292) (x2099 x3292)) (x653 x3292)))
(assert (= (x1006 416) (x906 416)))
(assert (x1480 x2168))
(assert (x1480 x385))
(assert (= x1602 (x1220 512)))
(assert (= (x3240 512) (x2173 512)))
(assert (= (x188 128) (x1739 (x1157 (x188 128)))))
(assert (= (x2159 160) (x1739 (x1157 (x2159 160)))))
(assert (x1480 x3105))
(assert (x1480 x606))
(assert (x1480 x414))
(assert (x2739 (x1021 160)))
(assert (= (x2699 128) (x1739 (x1157 (x2699 128)))))
(assert (= (x1024 800) (x2329 800)))
(assert (= (x3059 352) (x1955 352)))
(assert (= (x185 352) (x1710 352)))
(assert (= (ite (= 128 x202) 16 (x1712 x202)) (x1924 x202)))
(assert (= (ite (and (not x1900) x3717) (x1154 (x2873 40)) (x2416 (x2873 40))) (x1223 (x2873 40))))
(assert (= (ite (= 192 x3472) 0 (x965 x3472)) (x2743 x3472)))
(assert (= (x926 x1599) (ite (and (not x1907) x2661) (x625 x1599) (x2349 x1599))))
(assert (x1480 x2870))
(assert (x1480 x2596))
(assert (= (ite (and x3717 (not x1900)) (x1154 (x2873 46)) (x2416 (x2873 46))) (x1223 (x2873 46))))
(assert (x1480 x2649))
(assert (= (x2873 1257916802) (x1157 1257916802)))
(assert (x1480 x2311))
(assert (= (x1213 512) (x967 512)))
(assert (x1480 x2740))
(assert (=> (<= (x124 128) 10000) (= (x2873 (x124 128)) (x1157 (x124 128)))))
(assert (= x1183 (x214 448)))
(assert (= (x812 384) (x623 384)))
(assert (= (=> (and (= (= 0 x2341) x1629) (= x2341 (x116 (x2873 15)))) (and (=> (and (not x1629) (= (< 0 x2023) x3562) (or (and (not x3562) (= x2023 x3337)) (and (= x3337 1) (> 4294967296 x940) x3562))) x2953) (=> x1629 x3167))) x2075))
(assert (= (x1739 (x1157 (x192 160))) (x192 160)))
(assert (= (x462 576) (x3261 576)))
(assert (= (x3488 x772) (ite (= x772 128) 7 (x780 x772))))
(assert (x1480 x2450))
(assert (= x2339 (=> (= x2707 (< 0 x379)) (and (=> x2707 x633) (=> (not x2707) x1698)))))
(assert (x1480 x2442))
(assert (= x552 (and (not x719) x199)))
(assert (= (ite (and (not x2028) x2034) (x3340 x1138) (x2866 x1138)) (x3190 x1138)))
(assert (x1480 x3126))
(assert (= (ite (= (x2873 43) x3102) x1095 (x578 (x2873 43))) (x1178 (x2873 43))))
(assert (x1480 x1190))
(assert (x1480 x2537))
(assert (= (x1387 320) (x977 320)))
(assert (x1480 x1863))
(assert (= (x3178 800) (x1915 800)))
(assert (= (ite (and x3717 (not x112)) (x229 (x2873 44)) (x3257 (x2873 44))) (x2445 (x2873 44))))
(assert (= (ite (= 832 x848) x956 (x1159 x848)) (x288 x848)))
(assert (x1480 x2499))
(assert (x1480 x1462))
(assert (= (x2873 1000000000000000000) (x1157 1000000000000000000)))
(assert (x1480 x96))
(assert (= (x3059 320) (x1955 320)))
(assert (= (x1981 x833) (ite (= x3217 x833) x2266 (x3502 x833))))
(assert (=> (<= (x215 128) 10000) (= (x2873 (x215 128)) (x1157 (x215 128)))))
(assert (x2739 (x2249 128)))
(assert (=> (>= 10000 (x2058 128)) (= (x2873 (x2058 128)) (x1157 (x2058 128)))))
(assert (x1480 x2795))
(assert (=> (>= 10000 (x1837 160)) (= (x2873 (x1837 160)) (x1157 (x1837 160)))))
(assert (= (ite (and x2034 (not x1300)) (x1178 x1209) (x2267 x1209)) (x3340 x1209)))
(assert (x1480 x1850))
(assert (x2739 (x826 128)))
(assert (=> (>= 10000 (x33 160)) (= (x2873 (x33 160)) (x1157 (x33 160)))))
(assert (= 0 (x1764 x3472)))
(assert (x1480 x2242))
(assert (= (ite (= (x2873 37) x3102) x1095 (x578 (x2873 37))) (x1178 (x2873 37))))
(assert (= (ite (and (not x1900) x3717) (x1154 x1364) (x2416 x1364)) (x1223 x1364)))
(assert (x1480 x3011))
(assert (= (x2505 160) (x3301 160)))
(assert (= x3700 (and (not x2986) x1363)))
(assert (= (x3565 (x2873 10)) (ite (and x1801 (not x2709)) (x2671 (x2873 10)) (x2773 (x2873 10)))))
(assert (= (ite (= x772 1152) x3220 (x1881 x772)) (x1302 x772)))
(assert (x1480 x2186))
(assert (x1480 x930))
(assert (x1480 x2826))
(assert (x1480 x3652))
(assert (= (x3493 160) (x1739 (x1157 (x3493 160)))))
(assert (= (x2018 x3554) (ite (and x3717 (not x2676)) (x2445 x3554) (x271 x3554))))
(assert (x1480 x2859))
(assert (= (x1243 384) (x3401 384)))
(assert (x1480 x89))
(assert (= x148 (x651 448)))
(assert (= (and x3657 x552) x1491))
(assert (= (x522 320) (x2143 320)))
(assert (x1480 x3594))
(assert (= (x977 640) (x1387 640)))
(assert (= (x1157 3184006219) (x2873 3184006219)))
(assert (= (x2011 384) (x1655 384)))
(assert (x1480 x2464))
(assert (x1480 x3743))
(assert (= (x2002 544) (x2410 544)))
(assert (= x41 (and (not x1160) x1201)))
(assert (= (ite (and x3717 (not x1900)) (x1154 x796) (x2416 x796)) (x1223 x796)))
(assert (x1480 x2415))
(assert (= (ite (and (not x2923) (not x3440) x2385) (x268 352) (x2068 352)) (x1520 352)))
(assert (= (ite (and x3300 (not x1934)) (x912 x2763) (x3198 x2763)) (x824 x2763)))
(assert (= (x1739 (x2873 3504541104)) 3504541104))
(assert (= (ite (and (not x1907) x2661) (x625 (x2873 46)) (x2349 (x2873 46))) (x926 (x2873 46))))
(assert (x1480 x2407))
(assert (= (x1739 (x1157 (x664 128))) (x664 128)))
(assert (= x2237 (x1655 928)))
(assert (= (ite (= x3217 x1209) x2266 (x3502 x1209)) (x1981 x1209)))
(assert (= (+ 8 (x1739 x2931)) (x1739 (x1844 x2931 8))))
(assert (= x1886 (=> (and (= (x3409 768) x1944) (= x1280 (div x1997 x1433)) (= (x2646 512) x2997) (= x2371 (= x1280 x1306)) (not (= x2981 0)) (= (x1580 192) x2007) (= (x234 736) x1306) (= (x1580 256) x1113) (= x2857 (x2455 (+ x3239 352))) (= (= x3038 x1113) x3624) (= x3239 (mod (* x2007 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (mod (* x1306 x1433) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1997) (= x746 (div x1997 x2306)) (= x2981 (ite x3733 1 0)) (= (= 0 x1433) x3535) (= (or x3535 x2371) x3733) (= x1433 (x234 640)) (= (x234 704) x2306) (not (= x2306 0)) (= (x1580 x2857) x3038)) (and (=> (not x3624) x2601) (=> x3624 x155)))))
(assert (= (x1696 320) (x448 320)))
(assert (= (ite (= (x2873 41) (x2873 40)) x2522 (x3516 (x2873 40))) (x116 (x2873 40))))
(assert (= (x1223 x429) (ite (and (not x1900) x3717) (x1154 x429) (x2416 x429))))
(assert (=> (<= (x1744 128) 10000) (= (x2873 (x1744 128)) (x1157 (x1744 128)))))
(assert (x1480 x640))
(assert (x2739 (x2856 128)))
(assert (x1480 x476))
(assert (= (x2973 224) (x3428 224)))
(assert (x1480 x3054))
(assert (= (x1299 320) (x1605 320)))
(assert (x1480 x1983))
(assert (= (x1921 384) (x1153 384)))
(assert (= (x3061 x3512) (ite (= x3512 x1727) x2963 (x3316 x3512))))
(assert (= (x1400 384) (x2094 384)))
(assert (x1480 x1896))
(assert (= (x1089 x2705) (ite (and x1835 (not x3564)) (x1154 x2705) (x2777 x2705))))
(assert (= (x2129 (x2873 40)) (ite (and (not x1761) x1568) (x116 (x2873 40)) (x3254 (x2873 40)))))
(assert (x1480 x375))
(assert (x2739 (x3363 128)))
(assert (= (x516 704) (x461 704)))
(assert (= (x1739 (x2873 2484372501)) 2484372501))
(assert (= (ite (= x3397 192) x1773 (x1243 x3397)) (x2489 x3397)))
(assert (= (x1014 800) (x3354 800)))
(assert (= (x1074 896) x267))
(assert (= (x3261 352) (x462 352)))
(assert (= (x2143 704) (x522 704)))
(assert (x1480 x420))
(assert (=> (<= (x3493 160) 10000) (= (x1157 (x3493 160)) (x2873 (x3493 160)))))
(assert (x1480 x2275))
(assert (= (x3007 160) (x174 160)))
(assert (x2739 (x1036 160)))
(assert (= (ite (= 128 x3105) 16 (x2191 x3105)) (x808 x3105)))
(assert (x1480 x1119))
(assert (= (x1739 (x1157 (x1281 128))) (x1281 128)))
(assert (x2739 (x124 160)))
(assert (= (ite (= 640 x930) 2388873442 (x208 x930)) (x3570 x930)))
(assert (= (ite (= x2076 x2140) x1719 (x2381 x2076)) (x625 x2076)))
(assert (= (x3213 x930) (ite (= 352 x930) x3126 (x505 x930))))
(assert (x1480 x569))
(assert (x2739 (x3600 128)))
(assert (x1480 x3604))
(assert (x1480 x594))
(assert (= (ite (= x3461 x2328) x1240 (x639 x3461)) (x229 x3461)))
(assert (x1480 x2544))
(assert (= (x3061 x1573) (ite (= x1727 x1573) x2963 (x3316 x1573))))
(assert (= 0 (x1691 352)))
(assert (x1480 x2617))
(assert (= x3002 (=> (and (= (> x1892 0) x1174) (= (x1428 320) x1892)) (and (=> x1174 x1698) (=> (not x1174) x1369)))))
(assert (= (x2159 128) (x1739 (x1157 (x2159 128)))))
(assert (= (x2747 512) x2338))
(assert (x1480 x2021))
(assert (= (x1644 352) (ite (and x3717 (not x112)) (x1696 352) (x196 352))))
(assert (= x1525 (x442 640)))
(assert (x1480 x3373))
(assert (= (x3190 x833) (ite (and x2034 (not x2028)) (x3340 x833) (x2866 x833))))
(assert (x1480 x3370))
(assert (x1480 x1769))
(assert (= (x1789 352) (x672 352)))
(assert (x1480 x2036))
(assert (= (=> (= (< 31 x1795) x471) (and (=> (not x471) x1698) (=> x471 x2552))) x27))
(assert (= (ite (and (not x1900) x3717) (x1154 x3436) (x2416 x3436)) (x1223 x3436)))
(assert (=> (>= 10000 (x3086 160)) (= (x1157 (x3086 160)) (x2873 (x3086 160)))))
(assert (=> (>= 10000 (x2057 128)) (= (x2873 (x2057 128)) (x1157 (x2057 128)))))
(assert (= (x625 x3512) (ite (= x3512 x2140) x1719 (x2381 x3512))))
(assert (x1480 x2070))
(assert (= x3144 (=> (and (= (x1859 544) x2352) (= x1664 (< 0 x2352))) (and (=> (and x1664 (= x37 (x1844 x1335 6)) (= x1327 (> x2261 0)) (= x3231 (x1859 512)) (= (x2129 x37) x980) (= (x868 (x1157 (x2410 128)) (x1157 (x2410 160)) 0) x1335) (or (and x1327 (= 1 x1561) (> 4294967296 x707)) (and (= x1561 x2261) (not x1327)))) x3695) (=> (not x1664) x2120)))))
(assert (x1480 x311))
(assert (= (x2166 384) (x3134 384)))
(assert (= (x268 x3472) (ite (= x3472 704) x3683 (x2831 x3472))))
(assert (= (x192 128) (x1739 (x1157 (x192 128)))))
(assert (= (x2911 384) (x1770 384)))
(assert (x1480 x1574))
(assert (= (x3394 384) (x3404 384)))
(assert (x1480 x2232))
(assert (= (x2458 224) (x330 224)))
(assert (= (x1739 (x2873 1000000000000000000)) 1000000000000000000))
(assert (=> (<= (x740 128) 10000) (= (x1157 (x740 128)) (x2873 (x740 128)))))
(assert (x1480 x2092))
(assert (= x1689 (=> (and (= (div x3743 10000) x3621) (= x2280 (= x286 0)) (= (= x2950 x1179) x798) (= (= (ite x38 1 0) 0) x2283) (= x3618 (x1321 288)) (= (x1981 x2437) x286) (= x2437 (x1844 x815 2)) (= (x868 (x1157 (x3719 128)) (x1157 (x3719 160)) 0) x815) (= x2950 (x3719 320)) (= (x1981 (x2873 40)) x3604) (= x1179 (div x351 x286)) (= x351 (mod (* x2950 x286) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (or x798 x2280) x38)) (and (=> (and (= x1583 (div x351 10000)) (= (> x106 x3188) x1282) (= x2338 (x1981 x833)) (= (x2747 416) x106) (= x1808 (x1273 288)) (= (x868 (x1157 (x3446 128)) (x1157 (x3446 160)) 0) x1145) (= (x2747 448) x3188) (not x2283) (= x1971 (x868 (x1157 (x1021 128)) (x1157 (x1021 160)) 0)) (= (x1844 x1145 6) x1082) (or (and (= 1 x3551) (not x1282)) (and (= (x2747 352) x2684) (= (not x857) x1768) (= (< x357 x2684) x857) (= (ite x1768 1 0) x3551) (= (x2747 384) x357) x1282)) (= x2927 (x1844 x1971 3)) (= (x3633 288) x866) (= x2285 (x1981 x2927)) (= (x1981 x1082) x257) (= x3531 (x868 (x1157 (x1701 128)) (x1157 (x1701 160)) 0)) (= x2781 (x2417 288)) (= x833 (x1844 x3531 4))) x137) (=> x2283 x1698)))))
(assert (= (ite (and (not x1900) x3717) (x1154 x427) (x2416 x427)) (x1223 x427)))
(assert (= (x1739 (x1157 (x2660 160))) (x2660 160)))
(assert (x1480 x2316))
(assert (x2739 (x1683 128)))
(assert (= x2515 (and x438 (not x1629))))
(assert (= (ite (and x730 (not x3520)) (x3061 x58) (x2099 x58)) (x653 x58)))
(assert (=> (<= (x1044 160) 10000) (= (x1157 (x1044 160)) (x2873 (x1044 160)))))
(assert (= x2720 (x3064 288)))
(assert (x1480 x1648))
(assert (= (x1895 384) (x1195 384)))
(assert (x1480 x1749))
(assert (x1480 x848))
(assert (= (x1553 x1329) (ite (= x1329 352) x1052 (x2744 x1329))))
(assert (= (x1739 (x1844 x2304 6)) (+ 6 (x1739 x2304))))
(assert (= (x1739 (x1157 (x3329 128))) (x3329 128)))
(assert (= (and (not x568) x3587) x3583))
(assert (x1480 x1825))
(assert (= (x625 x395) (ite (= x395 x2140) x1719 (x2381 x395))))
(assert (x1480 x3575))
(assert (x1480 x300))
(assert (= (x1696 384) (x448 384)))
(assert (= (x1696 864) (x448 864)))
(assert (= (x116 x3266) (ite (= (x2873 41) x3266) x2522 (x3516 x3266))))
(assert (= (ite (= x58 (x2873 41)) x2522 (x3516 x58)) (x116 x58)))
(assert (= (and x2879 (not x2994)) x1526))
(assert (x1480 x2427))
(assert (= (x2887 800) (x1074 800)))
(assert (x1480 x1902))
(assert (=> (>= 10000 (x3398 160)) (= (x1157 (x3398 160)) (x2873 (x3398 160)))))
(assert (x1480 x712))
(assert (= (x1739 (x1157 (x100 128))) (x100 128)))
(assert (= (x824 (x2873 44)) (ite (and x3300 (not x1934)) (x912 (x2873 44)) (x3198 (x2873 44)))))
(assert (= (x1178 (x2873 40)) (ite (= (x2873 40) x3102) x1095 (x578 (x2873 40)))))
(assert (x2739 (x33 160)))
(assert (= (ite (and (not x1629) x3562 x438) (x2991 x738) (x543 x738)) (x660 x738)))
(assert (x1480 x1684))
(assert (= (x3428 128) (x1739 (x1157 (x3428 128)))))
(assert (= (x1580 704) (x14 704)))
(assert (= (=> (= (> x2364 31) x2612) (and (=> x2612 x592) (=> (not x2612) x1698))) x1511))
(assert (x1480 x2270))
(assert (= (ite (= x930 192) 0 (x14 x930)) (x1580 x930)))
(assert (x2739 (x2271 128)))
(assert (= (x116 x833) (ite (= x833 (x2873 41)) x2522 (x3516 x833))))
(assert (x1480 x2652))
(assert (x1480 x2818))
(assert (x1480 x3260))
(assert (= (ite (and (not x1761) x1568) (x116 x2437) (x3254 x2437)) (x2129 x2437)))
(assert (x1480 x2724))
(assert (= (+ (x1739 x120) 6) (x1739 (x1844 x120 6))))
(assert (= (x3190 x2815) (ite (and (not x2028) x2034) (x3340 x2815) (x2866 x2815))))
(assert (x1480 x759))
(assert (x1480 x2261))
(assert (= (x1178 (x2873 47)) (ite (= x3102 (x2873 47)) x1095 (x578 (x2873 47)))))
(assert (= (ite (and x2661 (not x1907)) (x625 x3217) (x2349 x3217)) (x926 x3217)))
(assert (x1480 x658))
(assert (=> (<= x98 10000) (= (x2873 x98) (x1157 x98))))
(assert (x1480 x1879))
(assert (= (x2410 320) (x2002 320)))
(assert (= (x3301 128) 16))
(assert (= (=> (and (= (x2455 (+ x253 x2372)) x2785) (= (x1981 (x2873 40)) x253) (= (x2624 224) x2372) (= (< x2785 x2372) x853)) (and (=> (not x853) x1284) (=> x853 x1698))) x2552))
(assert (= (x1486 800) (x1958 800)))
(assert (x1480 x3216))
(assert (= (ite (and (not x2028) x2034) (x3340 x1032) (x2866 x1032)) (x3190 x1032)))
(assert (= x137 (=> (= (= x3551 0) x1442) (and (=> (not x1442) x2375) (=> x1442 x3285)))))
(assert (x1480 x2467))
(assert (x1480 x2920))
(assert (= (ite (= (x2873 44) x3114) x2558 (x1792 (x2873 44))) (x912 (x2873 44))))
(assert (= (x2671 x3416) (ite (and (not x2276) x2332) (x1981 x3416) (x1538 x3416))))
(assert (= x2593 (=> (and (= (x651 448) x1705) (= x148 (x2129 (x2873 9))) (= x2122 (x491 704)) (= x238 (> x1705 0))) (and (=> x238 x216) (=> (and (not x238) (= x2643 (x651 384))) x323)))))
(assert (= (and x1481 x2889) x3468))
(assert (=> (<= (x100 160) 10000) (= (x2873 (x100 160)) (x1157 (x100 160)))))
(assert (x1480 x1888))
(assert (= (=> (and (= x1231 (> x3434 0)) (= (x1140 704) x3434)) (and (=> (and (= (x1089 (x2873 9)) x964) x1231 (= (x1387 448) x3206) (or (and (= x3481 (x1387 384)) (not x1324)) (and (= x1384 (x1477 480)) (= x2245 (x2062 224)) (= (or x1517 x1037) x1241) (not (= 0 x1384)) (= x523 (x1089 (x2873 40))) (= x310 (div x1888 x1384)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2245 x523))) (= (div x1888 x1574) x360) (= x954 (x1089 (x2873 41))) (or (and (= x2188 x2835) (not x1114)) (and x1114 (= 1 x2835) (> 4294967296 x1373))) (= (x1089 (x2873 44)) x3162) (not (= 0 x1531)) (= x287 (x2726 288)) (= (mod (* x3162 x1255) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x210) (= (x713 224) x2580) (not (> x954 x2301)) (> x2835 0) (= x1114 (> x2188 0)) (= x2837 (x1387 448)) (= x3507 (x2762 320)) (= (= x1983 x3162) x1517) (= (mod (* x1574 x2837) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1888) (= (x737 (- x287 x3507)) x3484) (= x2295 (x2455 (+ x2245 x523))) (or (and (not (= x1437 0)) (= (= x3704 x996) x1448) x2902 (= x2051 (x737 (- x365 x2878))) (= (x1880 256) x365) (= x748 (= 0 x1834)) (not (< x365 x2878)) (= x1834 (x1880 224)) (= (mod (* x1834 x996) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2096) (= (div x2096 x1834) x3704) (= (or x748 x1448) x696) (= (x1089 (x2873 43)) x2153) (= x2878 (div x2096 1000000000000000000)) (= x1437 (ite x696 1 0)) (= x996 (x1880 256))) (not x2902)) x1324 (not (> x3507 x287)) (= (div x210 x1255) x1983) (= (x737 (- x1869 x954)) x1255) (= (ite x388 1 0) x1531) (= x1249 (= x2837 x360)) (= (ite x1241 1 0) x3628) (= x1519 (= 0 x1574)) (< 31 x1373) (= (or x1519 x1249) x388) (= x1574 (x1387 384)) (= x1037 (= x1255 0)) (not (= 0 x3628)) (= (< x2580 1000000000000000000) x2902))) (= x1324 (> x3206 0)) (= (x1913 704) x1461)) x3341) (=> (not x1231) x259))) x3268))
(assert (= (x651 352) (x2045 352)))
(assert (= (x1739 (x1844 x815 2)) (+ (x1739 x815) 2)))
(assert (=> (>= 10000 (x100 128)) (= (x2873 (x100 128)) (x1157 (x100 128)))))
(assert (= (x1981 x176) (ite (= x176 x3217) x2266 (x3502 x176))))
(assert (x1480 x2538))
(assert (x1480 x565))
(assert (= (x612 224) (x1594 224)))
(assert (x1480 x716))
(assert (= (x901 384) (x947 384)))
(assert (= (x2143 288) (x522 288)))
(assert (= (x1739 (x2873 348537858)) 348537858))
(assert (x2739 (x3007 128)))
(assert (x2739 (x3086 128)))
(assert (x1480 x2720))
(assert (= (x1739 (x2873 297566789)) 297566789))
(assert (= (x3702 384) (ite (and x2889 x1481 (not x944)) (x3726 384) (x1161 384))))
(assert (x2739 (x119 160)))
(assert (x1480 x2362))
(assert (= (x3340 x2794) (ite (and (not x1300) x2034) (x1178 x2794) (x2267 x2794))))
(assert (x1480 x1092))
(assert (=> (<= x477 10000) (= (x2873 x477) (x1157 x477))))
(assert (= (ite (= x1727 x3244) x2963 (x3316 x3244)) (x3061 x3244)))
(assert (= (x3340 x58) (ite (and x2034 (not x1300)) (x1178 x58) (x2267 x58))))
(assert (x1480 x3621))
(assert (= (and x551 (not x93)) x2342))
(assert (= (x926 x2016) (ite (and (not x1907) x2661) (x625 x2016) (x2349 x2016))))
(assert (= (x1006 288) (x906 288)))
(assert (= (and x61 x1507) x438))
(assert (= (x926 (x2873 41)) (ite (and (not x1907) x2661) (x625 (x2873 41)) (x2349 (x2873 41)))))
(assert (= x3305 (=> (= (> x608 31) x929) (and (=> (not x929) x1698) (=> x929 x3128)))))
(assert (x1480 x1120))
(assert (x1480 x2497))
(assert (= (ite (and x3717 (not x1900)) (x1154 x395) (x2416 x395)) (x1223 x395)))
(assert (= (x1739 (x1844 x355 6)) (+ (x1739 x355) 6)))
(assert (x1480 x1484))
(assert (x2739 (x3549 128)))
(assert (x1480 x2285))
(assert (x1480 x1803))
(assert (= (x587 x930) (ite (= x930 288) x956 (x1990 x930))))
(assert (x1480 x3625))
(assert (= (x1739 (x1157 (x808 128))) (x808 128)))
(assert (= (x1089 x294) (ite (and (not x3564) x1835) (x1154 x294) (x2777 x294))))
(assert (=> (>= 10000 (x554 160)) (= (x2873 (x554 160)) (x1157 (x554 160)))))
(assert (= (x1580 256) (x14 256)))
(assert (= (x268 320) (x2831 320)))
(assert (= (x938 832) (x2050 832)))
(assert (= (x228 704) (x1073 704)))
(assert (= (ite (and x2661 (not x1907)) (x625 x3416) (x2349 x3416)) (x926 x3416)))
(assert (= (x1157 1461501637330902918203684832716283019655932542975) (x2873 1461501637330902918203684832716283019655932542975)))
(assert (= (ite (and x2211 x1835 (not x984)) (x2105 384) (x3404 384)) (x3013 384)))
(assert (= (x214 x848) (ite (= 448 x848) x1183 (x2374 x848))))
(assert (= (ite (= x738 128) 16 (x2191 x738)) (x808 x738)))
(assert (x1480 x1963))
(assert (= (and x317 (not x838)) x1906))
(assert (x1480 x305))
(assert (= (x625 x1727) (ite (= x1727 x2140) x1719 (x2381 x1727))))
(assert (= (x3404 x772) (ite (= 832 x772) x1850 (x3394 x772))))
(assert (= (ite (and (not x111) x1251 x2086) (x2840 x738) (x2703 x738)) (x418 x738)))
(assert (x1480 x1248))
(assert (= (x2873 3862337480) (x1157 3862337480)))
(assert (x1480 x2881))
(assert (= (x116 x3471) (ite (= x3471 (x2873 41)) x2522 (x3516 x3471))))
(assert (= (x3401 352) (x1243 352)))
(assert (= (x1483 384) (x3022 384)))
(assert (= (ite (and (not x1761) x1568) (x116 x429) (x3254 x429)) (x2129 x429)))
(assert (= (x653 x176) (ite (and x730 (not x3520)) (x3061 x176) (x2099 x176))))
(assert (= (ite (= x3105 736) x975 (x1239 x3105)) (x3638 x3105)))
(assert (= (and (not x2998) x3066) x1682))
(assert (x1480 x1908))
(assert (= (x543 384) (x1865 384)))
(assert (x1480 x2100))
(assert (x1480 x145))
(assert (x1480 x2534))
(assert (= (ite (= (x2873 41) x2927) x2522 (x3516 x2927)) (x116 x2927)))
(assert (= (x1924 x848) (ite (= x848 128) 16 (x1712 x848))))
(assert (x1480 x3263))
(assert (= (x1739 (x1157 (x526 160))) (x526 160)))
(assert (x1480 x287))
(assert (= (x1157 1851080549) (x2873 1851080549)))
(assert (= (or (and x1847 x1999) x525) x2912))
(assert (= (ite (= x738 288) x1850 (x1299 x738)) (x1605 x738)))
(assert (= (x522 256) (x2765 256)))
(assert (x2739 (x1488 160)))
(assert (x1480 x2523))
(assert (= (x442 384) (x2279 384)))
(assert (= (x1170 832) (x1378 832)))
(assert (= (x529 576) x256))
(assert (x2739 (x3161 160)))
(assert (= (x1520 704) (ite (and x2385 (not x2923) (not x3440)) (x268 704) (x2068 704))))
(assert (= (x116 x3512) (ite (= (x2873 41) x3512) x2522 (x3516 x3512))))
(assert (x1480 x153))
(assert (x1480 x1802))
(assert (=> (>= 10000 (x3330 160)) (= (x1157 (x3330 160)) (x2873 (x3330 160)))))
(assert (=> (<= (x1281 160) 10000) (= (x1157 (x1281 160)) (x2873 (x1281 160)))))
(assert (= (x2765 320) (x522 320)))
(assert (x2739 (x3055 128)))
(assert (= (ite (= x848 640) 2388873442 (x208 x848)) (x3570 x848)))
(assert (= (x926 (x2873 44)) (ite (and x2661 (not x1907)) (x625 (x2873 44)) (x2349 (x2873 44)))))
(assert (= (x1178 x1071) (ite (= x1071 x3102) x1095 (x578 x1071))))
(assert (=> (>= 10000 (x1683 160)) (= (x1157 (x1683 160)) (x2873 (x1683 160)))))
(assert (x1480 x230))
(assert (= (and x776 (not x863)) x2517))
(assert (= (=> (= x3546 (< 0 x2551)) (and (=> (not x3546) x1698) (=> x3546 x3735))) x867))
(assert (= (x3190 x2437) (ite (and x2034 (not x2028)) (x3340 x2437) (x2866 x2437))))
(assert (x1480 x2702))
(assert (= (ite (= (x2873 41) x2328) x1240 (x639 (x2873 41))) (x229 (x2873 41))))
(assert (= (x2973 x772) (ite (= 320 x772) x3718 (x3428 x772))))
(assert (= x1509 (or x2653 (and x1149 (not x2073)) (and (not x1231) x335))))
(assert (x1480 x3117))
(assert (= (x165 x2857) (ite (= 320 x2857) x900 (x664 x2857))))
(assert (= (x824 x3554) (ite (and x3300 (not x1934)) (x912 x3554) (x3198 x3554))))
(assert (x1480 x806))
(assert (x1480 x1680))
(assert (= (x1089 (x2873 44)) (ite (and x1835 (not x3564)) (x1154 (x2873 44)) (x2777 (x2873 44)))))
(assert (x1480 x2306))
(assert (= (x1739 (x1157 (x82 128))) (x82 128)))
(assert (x1480 x3252))
(assert (x1480 x887))
(assert (= (+ (x1739 x1058) 6) (x1739 (x1844 x1058 6))))
(assert (= (ite (and x2889 x1481 (not x944)) (x3726 x2857) (x1161 x2857)) (x3702 x2857)))
(assert (= (x2703 320) (x2406 320)))
(assert (x2739 (x2856 160)))
(assert (x1480 x325))
(assert (= x2332 (or (and x2269 (not x441)) (and x2 x2995) (and x2929 (not x1918)) (and (not x122) x261))))
(assert (= (x3190 x733) (ite (and (not x2028) x2034) (x3340 x733) (x2866 x733))))
(assert (= (x3565 x3512) (ite (and x1801 (not x2709)) (x2671 x3512) (x2773 x3512))))
(assert (= (x1157 157198259) (x2873 157198259)))
(assert (x2739 (x2159 160)))
(assert (x1480 x556))
(assert (x1480 x1429))
(assert (= (ite (= (x2873 41) x1573) x2522 (x3516 x1573)) (x116 x1573)))
(assert (= (x2195 x772) (ite (= x772 288) x2464 (x100 x772))))
(assert (= (x543 x3472) (ite (= x3472 832) x1850 (x1865 x3472))))
(assert (x1480 x1663))
(assert (=> (>= 10000 (x33 128)) (= (x1157 (x33 128)) (x2873 (x33 128)))))
(assert (= (x1859 x3105) (ite (= x3105 576) x2848 (x1015 x3105))))
(assert (x2739 (x3161 128)))
(assert (=> (>= 10000 (x1015 160)) (= (x1157 (x1015 160)) (x2873 (x1015 160)))))
(assert (= (ite (= (x2873 41) x2076) x2522 (x3516 x2076)) (x116 x2076)))
(assert (x1480 x2822))
(assert (= (x1739 (x1157 (x2660 128))) (x2660 128)))
(assert (= (x1739 (x1157 (x65 160))) (x65 160)))
(assert (x1480 x2706))
(assert (= (x2671 x3512) (ite (and (not x2276) x2332) (x1981 x3512) (x1538 x3512))))
(assert (= x396 (and (not x3477) x1746)))
(assert (= (x1739 (x1157 (x1488 128))) (x1488 128)))
(assert (= (x2445 x20) (ite (and x3717 (not x112)) (x229 x20) (x3257 x20))))
(assert (x1480 x263))
(assert (= (ite (= x3102 (x2873 9)) x1095 (x578 (x2873 9))) (x1178 (x2873 9))))
(assert (x1480 x2993))
(assert (x1480 x3160))
(assert (= x2264 (=> (and (= x2717 (x2718 960)) (= x794 (< x2717 x326))) (and (=> (and (= x1530 (x737 (- x2717 x3451))) (not x794)) x3730) (=> x794 x1698)))))
(assert (= (x2873 1020253707) (x1157 1020253707)))
(assert (= (x3064 224) (x1017 224)))
(assert (= (ite (= 288 x3105) x2720 (x1017 x3105)) (x3064 x3105)))
(assert (=> (<= x2537 10000) (= (x1157 x2537) (x2873 x2537))))
(assert (= (ite (and x2661 (not x1907)) (x625 x3102) (x2349 x3102)) (x926 x3102)))
(assert (=> (>= 10000 (x2271 128)) (= (x1157 (x2271 128)) (x2873 (x2271 128)))))
(assert (=> (>= 10000 (x425 128)) (= (x2873 (x425 128)) (x1157 (x425 128)))))
(assert (= (x936 x772) (ite (= x772 832) x1850 (x2145 x772))))
(assert (= (x1641 x848) (ite (= 224 x848) x3731 (x1383 x848))))
(assert (= (=> (and (= (x1981 x2669) x2496) (= x2715 (div x2495 10000)) (= x991 (x868 (x1157 (x3178 128)) (x1157 (x3178 160)) 0)) (= (x574 288) x644) (= x2598 (x1981 (x2873 37))) (= x2669 (x1844 x991 6)) (= x2995 (> x2598 0))) (and (=> (and (= (x1915 352) x352) x2995) x3099) (=> (not x2995) x1800))) x72))
(assert (= x3066 (and x3573 (not x3423))))
(assert (= (x3157 800) (ite (and x3717 x2668) (x605 800) (x1958 800))))
(assert (= x1369 (=> (and (= x1670 (x868 (x1157 (x373 128)) (x1157 (x373 160)) 0)) (= (> x328 x937) x2994) (= x328 (x373 288)) (= x2883 (x1428 224)) (= (x3061 x1670) x937)) (and (=> x2994 x1698) (=> (not x2994) x242)))))
(assert (= (ite (and x1204 x1835) (x3092 x1329) (x936 x1329)) (x1782 x1329)))
(assert (x1480 x1408))
(assert (= (x2854 256) (x2808 256)))
(assert (= (ite (= x738 192) x3576 (x2743 x738)) (x2163 x738)))
(assert (= (x2129 x3166) (ite (and x1568 (not x1761)) (x116 x3166) (x3254 x3166))))
(assert (x1480 x513))
(assert (= x2630 x3002))
(assert (x1480 x1733))
(assert (= (+ 6 (x1739 x567)) (x1739 (x1844 x567 6))))
(assert (x1480 x537))
(assert (= (x675 384) (x2139 384)))
(assert (= (x1520 x3472) (ite (and (not x2923) x2385 (not x3440)) (x268 x3472) (x2068 x3472))))
(assert (= (ite (and x2034 (not x1300)) (x1178 x3292) (x2267 x3292)) (x3340 x3292)))
(assert (= x1359 (=> (and (= (x2830 832) x2819) (= (x3565 (x2873 10)) x2048) (= x2687 (> x1535 x2819)) (= (x2830 928) x1535)) (and (=> x2687 x1698) (=> (and (= (> x2770 0) x1479) (= (x2455 (+ 64 x2826)) x2127) (not x2687) (= x2161 (x615 288)) (= x1969 (x2480 256)) (or (not x1479) (and (= (x3455 (x1157 274184521717934524641157099916833587200)) x2253) (= (= (x890 (x1157 x1446)) x2158) x3601) (> 4294967296 x1816) x1479 (= x2547 (<= x2253 (x890 (x1157 274184521717934524641157099916833587200)))) x3601 (= x2158 (x3455 (x1157 x1446))) x2547)) (or (not x70) (and x70 (< x2401 4294967296))) (= x2826 (x2480 384)) (= x2232 (x2455 (+ 480 x2826))) (= x1446 (x2347 224)) (= (x2455 (+ x2826 512)) x3123) (= (> x2141 0) x70) (= x113 (x737 (- x2819 x1535)))) x3429)))))
(assert (x1480 x1719))
(assert (= x2463 (and x730 x3520)))
(assert (= (ite (= x3217 (x2873 41)) x2266 (x3502 (x2873 41))) (x1981 (x2873 41))))
(assert (x2739 (x554 128)))
(assert (x1480 x1657))
(assert (x1480 x480))
(assert (x2739 (x215 128)))
(assert (= (x1089 (x2873 47)) (ite (and (not x3564) x1835) (x1154 (x2873 47)) (x2777 (x2873 47)))))
(assert (x1480 x3299))
(assert (x1480 x3482))
(assert (= (x906 352) (x1006 352)))
(assert (x2739 (x318 128)))
(assert (x1480 x3090))
(assert (= (x3104 800) (x2972 800)))
(assert (= (x2726 352) (x713 352)))
(assert (= (x3190 x3416) (ite (and (not x2028) x2034) (x3340 x3416) (x2866 x3416))))
(assert (= x1850 (x26 288)))
(assert (=> (<= (x2856 128) 10000) (= (x2873 (x2856 128)) (x1157 (x2856 128)))))
(assert (x1480 x1177))
(assert (x1480 x143))
(assert (x2739 (x1148 160)))
(assert (x1480 x638))
(assert (= (x2440 800) (x3251 800)))
(assert (= (x1782 384) (ite (and x1204 x1835) (x3092 384) (x936 384))))
(assert (= (=> (and (= x2101 (x2876 896)) (= (x1844 x1076 5) x800) (= x1573 (x1844 x2611 7)) (= (x868 (x1157 (x3243 128)) (x1157 (x3243 160)) 0) x1076) (= x311 (x474 x3416)) (= x2013 (x474 x1209)) (= (x868 (x1157 (x2827 128)) (x1157 (x2827 160)) 0) x1459) (= x1345 (x474 x176)) (= (x474 x1573) x1124) (or (and (= 1 x1320) x2940) (and (= x958 x1320) (= x958 (x474 (x2873 37))) (not x2940))) (= (x1844 x1564 8) x3416) (= (= x2013 0) x2940) (= x2571 (x3080 832)) (= (x474 x3512) x2133) (= (x868 (x1157 (x2660 128)) (x1157 (x2660 160)) 0) x1560) (= (x868 (x1157 (x2335 128)) (x1157 (x2335 160)) 0) x1058) (= (x1844 x1560 2) x3512) (= (x868 (x1157 (x3086 128)) (x1157 (x3086 160)) 0) x2611) (= x1209 (x1844 x1459 2)) (= (x868 (x1157 (x3670 128)) (x1157 (x3670 160)) 0) x1564) (= x176 (x1844 x1058 6))) x154) x3730))
(assert (=> (>= 10000 (x2625 160)) (= (x2873 (x2625 160)) (x1157 (x2625 160)))))
(assert (= (x1739 (x2873 2835717307)) 2835717307))
(assert (x1480 x380))
(assert (= (x926 (x2873 40)) (ite (and x2661 (not x1907)) (x625 (x2873 40)) (x2349 (x2873 40)))))
(assert (x1480 x807))
(assert (= (ite (and (not x1761) x1568) (x116 x1573) (x3254 x1573)) (x2129 x1573)))
(assert (= (+ 7 (x1739 x576)) (x1739 (x1844 x576 7))))
(assert (= (x1036 352) (x870 352)))
(assert (= (x625 x1714) (ite (= x1714 x2140) x1719 (x2381 x1714))))
(assert (x2739 (x3670 160)))
(assert (= (x1739 (x1844 x3229 6)) (+ 6 (x1739 x3229))))
(assert (= (or x1614 (and x1267 (not x3030)) (and x3468 (not x3256))) x2204))
(assert (= (x2445 (x2873 10)) (ite (and (not x112) x3717) (x229 (x2873 10)) (x3257 (x2873 10)))))
(assert (x1480 x3355))
(assert (x1480 x2004))
(assert (x2739 (x2193 128)))
(assert (=> (<= (x526 160) 10000) (= (x1157 (x526 160)) (x2873 (x526 160)))))
(assert (= (x2873 3208075701) (x1157 3208075701)))
(assert (= (x1089 x2479) (ite (and x1835 (not x3564)) (x1154 x2479) (x2777 x2479))))
(assert (= (x3037 544) (x3726 544)))
(assert (= (x1699 288) x956))
(assert (x1480 x1804))
(assert (x1480 x328))
(assert (= (x2044 256) (x212 256)))
(assert (= (ite (and x2034 (not x1300)) (x1178 x3166) (x2267 x3166)) (x3340 x3166)))
(assert (= (x1223 x1410) (ite (and x3717 (not x1900)) (x1154 x1410) (x2416 x1410))))
(assert (= (ite (= x2331 x3102) x1095 (x578 x2331)) (x1178 x2331)))
(assert (x1480 x980))
(assert (x1480 x2340))
(assert (x2739 (x915 160)))
(assert (x1480 x1072))
(assert (= x2934 (and x2959 (not x3385))))
(assert (= (x1739 (x1157 (x505 128))) (x505 128)))
(assert (= (ite (and (not x1900) x3717) (x1154 x3474) (x2416 x3474)) (x1223 x3474)))
(assert (= (x2489 384) (x1243 384)))
(assert (= (x1833 352) (x1747 352)))
(assert (= (ite (and (not x2028) x2034) (x3340 x1573) (x2866 x1573)) (x3190 x1573)))
(assert (= (x1739 (x1157 (x2827 160))) (x2827 160)))
(assert (= (x321 544) (x1596 544)))
(assert (= (x509 320) (x2875 320)))
(assert (= x681 (and x1756 (not x1031))))
(assert (= (x1981 x429) (ite (= x429 x3217) x2266 (x3502 x429))))
(assert (= (x1739 (x1157 (x1474 128))) (x1474 128)))
(assert (= (x3230 x202) 0))
(assert (x1480 x1456))
(assert (x2739 x2537))
(assert (= (ite (and (not x1300) x2034) (x1178 (x2873 44)) (x2267 (x2873 44))) (x3340 (x2873 44))))
(assert (x1480 x2698))
(assert (= (x824 x846) (ite (and (not x1934) x3300) (x912 x846) (x3198 x846))))
(assert (= (ite (= (x2873 45) x2140) x1719 (x2381 (x2873 45))) (x625 (x2873 45))))
(assert (x1480 x1842))
(assert (= (x3061 x2927) (ite (= x1727 x2927) x2963 (x3316 x2927))))
(assert (x1480 x687))
(assert (= (x2726 512) (x713 512)))
(assert (= (x1739 (x1157 (x1683 128))) (x1683 128)))
(assert (= (+ (x1739 x2318) 6) (x1739 (x1844 x2318 6))))
(assert (= (x1580 224) (x386 224)))
(assert (= (x1739 (x1844 x2219 6)) (+ (x1739 x2219) 6)))
(assert (= (ite (and x2661 (not x1907)) (x625 x3292) (x2349 x3292)) (x926 x3292)))
(assert (x1480 x1996))
(assert (= (x185 384) (x1710 384)))
(assert (= (x1739 (x1844 x3738 2)) (+ 2 (x1739 x3738))))
(assert (x2739 (x373 160)))
(assert (= (x2271 128) (x1739 (x1157 (x2271 128)))))
(assert (= (x625 x3166) (ite (= x3166 x2140) x1719 (x2381 x3166))))
(assert (x2739 (x460 160)))
(assert (x1480 x2674))
(assert (= (x2873 3296657447) (x1157 3296657447)))
(assert (x1480 x2906))
(assert (= (x672 480) (x1789 480)))
(assert (= (x1582 512) (x1642 512)))
(assert (= (x3569 864) (x2508 864)))
(assert (= (x1739 (x1157 (x554 128))) (x554 128)))
(assert (x1480 x94))
(assert (x1480 x3610))
(assert (= (=> (and (= (x1311 864) x716) (= (> x3159 0) x2276) (= (x35 896) x3159) (= x755 (x3694 896)) (= x2305 (ite (< x716 x1521) x716 x1521))) (and (=> (not x2276) x2723) (=> x2276 x2128))) x3099))
(assert (x1480 x2007))
(assert (= (x2873 2699341722) (x1157 2699341722)))
(assert (x1480 x900))
(assert (x1480 x34))
(assert (= (x824 x20) (ite (and x3300 (not x1934)) (x912 x20) (x3198 x20))))
(assert (= (x124 128) (x1739 (x1157 (x124 128)))))
(assert (x1480 x741))
(assert (= (x333 x1319) (ite (= 224 x1319) x316 (x1268 x1319))))
(assert (= (x3726 x2857) (ite (= 704 x2857) x2155 (x3037 x2857))))
(assert (x1480 x773))
(assert (= (x2831 384) (x268 384)))
(assert (= (x1339 352) (ite (and x2034 (not x1300)) (x1074 352) (x3492 352))))
(assert (=> (>= 10000 (x2335 128)) (= (x2873 (x2335 128)) (x1157 (x2335 128)))))
(assert (=> (<= (x915 160) 10000) (= (x2873 (x915 160)) (x1157 (x915 160)))))
(assert (x2739 (x3634 128)))
(assert (= (x664 352) (x165 352)))
(assert (= (ite (and x2661 (not x1907)) (x625 x3512) (x2349 x3512)) (x926 x3512)))
(assert (x1480 x1805))
(assert (= (=> (= x452 (> x1650 0)) (and (=> (not x452) x1698) (=> x452 x1511))) x1008))
(assert (= (x1924 384) (x1712 384)))
(assert (x1480 x2428))
(assert (= (ite (and (not x111) x2086 x1251) (x2840 x3105) (x2703 x3105)) (x418 x3105)))
(assert (= (x1833 384) (x1747 384)))
(assert (x1480 x1052))
(assert (x1480 x371))
(assert (x1480 x1368))
(assert (x1480 x1531))
(assert (= (ite (= x3244 x2140) x1719 (x2381 x3244)) (x625 x3244)))
(assert (= (x2973 x753) (ite (= 320 x753) x3718 (x3428 x753))))
(assert (= (x3340 x700) (ite (and (not x1300) x2034) (x1178 x700) (x2267 x700))))
(assert (= (x2727 320) (x591 320)))
(assert (= (x2249 x3472) (ite (= x3472 128) 16 (x1098 x3472))))
(assert (= (x625 x427) (ite (= x2140 x427) x1719 (x2381 x427))))
(assert (= (x1605 352) (x1299 352)))
(assert (= (ite (and x2034 (not x1300)) (x1178 x733) (x2267 x733)) (x3340 x733)))
(assert (= (x1178 x2669) (ite (= x3102 x2669) x1095 (x578 x2669))))
(assert (= (x1739 (x1157 (x1015 128))) (x1015 128)))
(assert (= (x3029 800) (x1106 800)))
(assert (x1480 x2915))
(assert (= x553 (=> (and (= x2507 (x459 448)) (= (x2455 (+ x2507 x3494)) x2177) (= x3494 (x459 416)) (= x1685 (< x2177 x2507))) (and (=> x1685 x1698) (=> (not x1685) x2184)))))
(assert (= (x1739 (x1844 x2354 6)) (+ 6 (x1739 x2354))))
(assert (= (x781 352) (x2347 352)))
(assert (=> (<= (x3372 128) 10000) (= (x2873 (x3372 128)) (x1157 (x3372 128)))))
(assert (x1480 x2106))
(assert (= (x3029 224) (x1106 224)))
(assert (x1480 x1692))
(assert (= (x1006 896) (x906 896)))
(assert (= (x2780 x3105) (ite (= 256 x3105) 274184521717934524641157099916833587200 (x2277 x3105))))
(assert (=> (>= 10000 (x188 128)) (= (x2873 (x188 128)) (x1157 (x188 128)))))
(assert (x1480 x3736))
(assert (x1480 x2732))
(assert (= (ite (and x2661 (not x1907)) (x625 (x2873 39)) (x2349 (x2873 39))) (x926 (x2873 39))))
(assert (= (x802 832) (x1358 832)))
(assert (x1480 x1856))
(assert (= (ite (and x1481 (not x944) x2889) (x3726 320) (x1161 320)) (x3702 320)))
(assert (x1480 x903))
(assert (= (x912 (x2873 41)) (ite (= x3114 (x2873 41)) x2558 (x1792 (x2873 41)))))
(assert (= x3713 (and x681 x2019)))
(assert (x1480 x852))
(assert (x1480 x310))
(assert (= x2464 (x2195 288)))
(assert (= (x1243 320) (x2489 320)))
(assert (= (+ (x1739 x3745) 2) (x1739 (x1844 x3745 2))))
(assert (= (x1216 384) (x3353 384)))
(assert (x2739 (x170 128)))
(assert (=> (<= x2067 10000) (= (x2873 x2067) (x1157 x2067))))
(assert (= (x625 x1138) (ite (= x2140 x1138) x1719 (x2381 x1138))))
(assert (= (x2831 544) (x268 544)))
(assert (x1480 x500))
(assert (= (x824 x3545) (ite (and (not x1934) x3300) (x912 x3545) (x3198 x3545))))
(assert (= (x1178 x1364) (ite (= x1364 x3102) x1095 (x578 x1364))))
(assert (= x2951 x1366))
(assert (= (x1764 352) 0))
(assert (= (x3301 x202) (ite (= x202 128) 16 (x2505 x202))))
(assert (= (ite (= x3114 x294) x2558 (x1792 x294)) (x912 x294)))
(assert (x1480 x139))
(assert (= (x651 x1319) (ite (= 448 x1319) x148 (x2045 x1319))))
(assert (= 3491319510 (x1739 (x2873 3491319510))))
(assert (= (x2806 480) (x3110 480)))
(assert (= (x612 800) (x1594 800)))
(assert (= (ite (and (not x1900) x3717) (x1154 x3699) (x2416 x3699)) (x1223 x3699)))
(assert (= (x2700 352) (x3452 352)))
(assert (= (x925 128) (x1739 (x1157 (x925 128)))))
(assert (x1480 x483))
(assert (=> (<= (x2744 160) 10000) (= (x2873 (x2744 160)) (x1157 (x2744 160)))))
(assert (= x945 (=> (and (= (x516 192) x3498) (= (= x1043 2) x3729) (= (x2455 (+ 1 x3498)) x1043)) (and (=> (not x3729) x3693) (=> x3729 x942)))))
(assert (= (ite (and (not x984) x2211 x1835) (x2105 x3397) (x3404 x3397)) (x3013 x3397)))
(assert (x1480 x2227))
(assert (= (x229 (x2873 44)) (ite (= (x2873 44) x2328) x1240 (x639 (x2873 44)))))
(assert (x1480 x1258))
(assert (= (ite (and (not x1900) x3717) (x1154 (x2873 41)) (x2416 (x2873 41))) (x1223 (x2873 41))))
(assert (x1480 x1341))
(assert (= (x3251 352) (x2440 352)))
(assert (= (x1216 128) (x1739 (x1157 (x1216 128)))))
(assert (= (x1006 224) (x906 224)))
(assert (= (x1223 x1283) (ite (and (not x1900) x3717) (x1154 x1283) (x2416 x1283))))
(assert (= (x2856 x3397) (ite (= x3397 128) 16 (x437 x3397))))
(assert (= (ite (and (not x1907) x2661) (x625 x95) (x2349 x95)) (x926 x95)))
(assert (= (ite (= x753 192) 0 (x2222 x753)) (x516 x753)))
(assert (= x989 (and (not x296) x1310)))
(assert (= (x330 x3397) (ite (= x3397 256) 274184521717934524641157099916833587200 (x2458 x3397))))
(assert (= (x362 288) (x2294 288)))
(assert (= (x3104 896) (x2972 896)))
(assert (= (ite (= x3217 (x2873 39)) x2266 (x3502 (x2873 39))) (x1981 (x2873 39))))
(assert (= (x2011 800) (x1655 800)))
(assert (= (x1311 352) (x35 352)))
(assert (= (x1157 629314576) (x2873 629314576)))
(assert (x1480 x873))
(assert (= (and x2515 x3072) x2673))
(assert (x1480 x51))
(assert (x1480 x304))
(assert (x1480 x3560))
(assert (= (x3190 x37) (ite (and (not x2028) x2034) (x3340 x37) (x2866 x37))))
(assert (= 113225476 (x1739 (x2873 113225476))))
(assert (x1480 x927))
(assert (x1480 x555))
(assert (= (x1178 x427) (ite (= x427 x3102) x1095 (x578 x427))))
(assert (x2739 (x215 160)))
(assert (= (x1739 (x1157 (x1744 128))) (x1744 128)))
(assert (= (x1764 x738) 0))
(assert (x1480 x3155))
(assert (x1480 x3120))
(assert (= (x2018 (x2873 41)) (ite (and x3717 (not x2676)) (x2445 (x2873 41)) (x271 (x2873 41)))))
(assert (= (ite (and (not x1761) x1568) (x116 x1082) (x3254 x1082)) (x2129 x1082)))
(assert (x2739 (x1015 128)))
(assert (x2739 (x1017 128)))
(assert (x2739 (x321 160)))
(assert (= (ite (and (not x1900) x3717) (x1154 x1449) (x2416 x1449)) (x1223 x1449)))
(assert (= (=> (and (= x3524 (= x2466 x172)) (= x2303 (= x1923 0)) (= x2466 (div x2495 x1923)) (= (mod (* x1923 x172) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2495) (= x172 (x307 352)) (= x3422 (or x2303 x3524)) (= (= (ite x3422 1 0) 0) x1225) (= x3661 (x2455 (+ x1550 x2394)))) (and (=> x1225 x1698) (=> (not x1225) x72))) x1206))
(assert (= (x1981 x2669) (ite (= x2669 x3217) x2266 (x3502 x2669))))
(assert (x1480 x2158))
(assert (=> (<= (x1021 160) 10000) (= (x2873 (x1021 160)) (x1157 (x1021 160)))))
(assert (= (x3570 384) (x208 384)))
(assert (= (x1696 832) (x448 832)))
(assert (x1480 x979))
(assert (x1480 x1318))
(assert (x1480 x1167))
(assert (x1480 x3447))
(assert (= (x185 x1329) (ite (= 864 x1329) x1805 (x1710 x1329))))
(assert (x1480 x166))
(assert (= (x2335 160) (x1739 (x1157 (x2335 160)))))
(assert (= (ite (= x3292 x3217) x2266 (x3502 x3292)) (x1981 x3292)))
(assert (= (x926 x58) (ite (and x2661 (not x1907)) (x625 x58) (x2349 x58))))
(assert (= (x1739 (x1157 x1446)) x1446))
(assert (= (x3190 x1540) (ite (and x2034 (not x2028)) (x3340 x1540) (x2866 x1540))))
(assert (= x2134 (or (and x1586 x2905) (and (not x762) x2637))))
(assert (= (x2671 (x2873 10)) (ite (and (not x2276) x2332) (x1981 (x2873 10)) (x1538 (x2873 10)))))
(assert (= (x3243 160) (x1739 (x1157 (x3243 160)))))
(assert (= (x2972 352) (x3104 352)))
(assert (= (x2873 2757214935) (x1157 2757214935)))
(assert (= (ite (and x730 (not x3520)) (x3061 x3641) (x2099 x3641)) (x653 x3641)))
(assert (= x1465 (and (not x3027) x41)))
(assert (x1480 x3024))
(assert (x1480 x2253))
(assert (x1480 x2031))
(assert (= (and x3294 (not x445)) x1212))
(assert (= (x185 x772) (ite (= x772 864) x1805 (x1710 x772))))
(assert (x1480 x856))
(assert (= (x1252 288) (x3679 288)))
(assert (x1480 x2588))
(assert (x1480 x3006))
(assert (= (x165 320) x900))
(assert (= (x3340 x1714) (ite (and x2034 (not x1300)) (x1178 x1714) (x2267 x1714))))
(assert (=> (<= (x3178 128) 10000) (= (x2873 (x3178 128)) (x1157 (x3178 128)))))
(assert (= (ite (= 128 x1329) 16 (x2911 x1329)) (x1770 x1329)))
(assert (= (ite (and (not x1900) x3717) (x1154 x3471) (x2416 x3471)) (x1223 x3471)))
(assert (= (x653 x429) (ite (and x730 (not x3520)) (x3061 x429) (x2099 x429))))
(assert (x1480 x3747))
(assert (= (x3134 320) (x2166 320)))
(assert (x1480 x1381))
(assert (x1480 x637))
(assert (= (ite (= x1727 x3217) x2963 (x3316 x3217)) (x3061 x3217)))
(assert (x1480 x2837))
(assert (x2739 (x3723 160)))
(assert (x2739 x98))
(assert (= (x1739 (x1157 (x715 128))) (x715 128)))
(assert (x1480 x3008))
(assert (x2739 (x1701 160)))
(assert (=> (>= 10000 (x915 128)) (= (x1157 (x915 128)) (x2873 (x915 128)))))
(assert (= (x1739 (x1157 (x119 160))) (x119 160)))
(assert (= (ite (= x58 x3102) x1095 (x578 x58)) (x1178 x58)))
(assert (= (x330 x1329) (ite (= x1329 256) 274184521717934524641157099916833587200 (x2458 x1329))))
(assert (= (x2873 348537858) (x1157 348537858)))
(assert (= (x926 (x2873 47)) (ite (and x2661 (not x1907)) (x625 (x2873 47)) (x2349 (x2873 47)))))
(assert (= x1800 (=> (and (= (x1915 320) x1959) (= (< x1959 x2980) x441) (= x2980 (x1915 352))) (and (=> (not x441) x3099) (=> x441 x1447)))))
(assert (x2739 (x3723 128)))
(assert (=> (>= 10000 (x1837 128)) (= (x1157 (x1837 128)) (x2873 (x1837 128)))))
(assert (= (x2057 128) (x1739 (x1157 (x2057 128)))))
(assert (= (x1739 (x1157 x1119)) x1119))
(assert (= (x992 x202) (ite (= x202 288) x2460 (x3634 x202))))
(assert (x1480 x3318))
(assert (= (x2445 (x2873 37)) (ite (and (not x112) x3717) (x229 (x2873 37)) (x3257 (x2873 37)))))
(assert (x1480 x3579))
(assert (= (x1739 (x1157 (x1701 128))) (x1701 128)))
(assert (x1480 x2681))
(assert (= (x1178 x833) (ite (= x3102 x833) x1095 (x578 x833))))
(assert (= (x3029 288) (x1106 288)))
(assert (x1480 x497))
(assert (x1480 x544))
(assert (x1480 x2964))
(assert (= (=> (and (= (x868 (x1157 (x3372 128)) (x1157 (x3372 160)) 0) x3641) (= x2362 (x3372 288)) (= (x653 x3641) x1334) (= x255 (< x1334 x2362)) (= x1663 (x161 224))) (and (=> x255 x1698) (=> (not x255) x197))) x684))
(assert (= (ite (= x814 (x2873 41)) x2522 (x3516 x814)) (x116 x814)))
(assert (x1480 x488))
(assert (x1480 x1374))
(assert (= (x1739 (x1157 (x318 128))) (x318 128)))
(assert (x1480 x3580))
(assert (= (x992 x2857) (ite (= 288 x2857) x2460 (x3634 x2857))))
(assert (=> (>= 10000 (x3339 160)) (= (x2873 (x3339 160)) (x1157 (x3339 160)))))
(assert (x1480 x743))
(assert (x1480 x3640))
(assert (= (x2058 128) (x1739 (x1157 (x2058 128)))))
(assert (= (x1683 160) (x1739 (x1157 (x1683 160)))))
(assert (= (x1833 224) (x1747 224)))
(assert (= (x2648 128) (x1739 (x1157 (x2648 128)))))
(assert (= x551 (or (and x1034 x3476) x3306 (and x1619 (not x1664)))))
(assert (= (x1358 288) x1850))
(assert (= (x228 160) (x1073 160)))
(assert (x1480 x1372))
(assert (= (x1195 896) (x1895 896)))
(assert (=> (>= 10000 (x554 128)) (= (x2873 (x554 128)) (x1157 (x554 128)))))
(assert (= (x2887 352) (x1074 352)))
(assert (= (x2410 352) (x2002 352)))
(assert (x1480 x1125))
(assert (= (x3190 (x2873 44)) (ite (and (not x2028) x2034) (x3340 (x2873 44)) (x2866 (x2873 44)))))
(assert (x2739 (x740 128)))
(assert (x1480 x3298))
(assert (x1480 x1514))
(assert (= (and x335 x1231) x3300))
(assert (x1480 x3629))
(assert (= (x3134 960) (x2166 960)))
(assert (= (=> (and (= (x654 800) x1429) (= (x2455 (+ x1051 x2031)) x3082) (= x719 (< x3082 x1429))) (and (=> x719 x1698) (=> (not x719) x370))) x2928))
(assert (= (x1520 640) (ite (and x2385 (not x2923) (not x3440)) (x268 640) (x2068 640))))
(assert (=> (>= 10000 (x3569 160)) (= (x1157 (x3569 160)) (x2873 (x3569 160)))))
(assert (= x2494 (and x3168 (not x3259))))
(assert (= (ite (and (not x1907) x2661) (x625 x2927) (x2349 x2927)) (x926 x2927)))
(assert (x1480 x1793))
(assert (x1480 x1592))
(assert (= (ite (and x1835 (not x3564)) (x1154 x1256) (x2777 x1256)) (x1089 x1256)))
(assert (= (x1739 (x2873 3208075701)) 3208075701))
(assert (x1480 x1570))
(assert (= x1850 (x3177 288)))
(assert (= (x1739 (x1157 (x3446 160))) (x3446 160)))
(assert (= (x3190 x1599) (ite (and x2034 (not x2028)) (x3340 x1599) (x2866 x1599))))
(assert (= (ite (and (not x3520) x730) (x3061 x3416) (x2099 x3416)) (x653 x3416)))
(assert (x1480 x3320))
(assert (x1480 x1056))
(assert (= (+ (x1739 x1616) 6) (x1739 (x1844 x1616 6))))
(assert (x1480 x1019))
(assert (x1480 x697))
(assert (= (x3528 512) (x2800 512)))
(assert (x1480 x2532))
(assert (x1480 x2305))
(assert (= (ite (= x3102 x2927) x1095 (x578 x2927)) (x1178 x2927)))
(assert (= (x1243 320) (x3401 320)))
(assert (= (x1739 (x1844 x2087 2)) (+ (x1739 x2087) 2)))
(assert (= (x1024 480) (x2329 480)))
(assert (x1480 x3548))
(assert (= (x2873 288104347) (x1157 288104347)))
(assert (= (ite (= 192 x772) 0 (x2222 x772)) (x516 x772)))
(assert (x1480 x1438))
(assert (= (x1157 16192718) (x2873 16192718)))
(assert (x2739 (x3418 128)))
(assert (= (ite (= x3397 256) 274184521717934524641157099916833587200 (x1747 x3397)) (x1833 x3397)))
(assert (= (ite (= x2140 x58) x1719 (x2381 x58)) (x625 x58)))
(assert (x1480 x2728))
(assert (= 0 (x3230 384)))
(assert (= (ite (and (not x1300) x2034) (x1178 (x2873 15)) (x2267 (x2873 15))) (x3340 (x2873 15))))
(assert (= (ite (and x2661 (not x1907)) (x625 x733) (x2349 x733)) (x926 x733)))
(assert (x1480 x1693))
(assert (x2739 (x3493 160)))
(assert (= (x2129 x3512) (ite (and x1568 (not x1761)) (x116 x3512) (x3254 x3512))))
(assert (= (ite (and (not x1761) x1568) (x116 x1670) (x3254 x1670)) (x2129 x1670)))
(assert (=> (>= 10000 (x1469 128)) (= (x2873 (x1469 128)) (x1157 (x1469 128)))))
(assert (x1480 x1430))
(assert (= (x1747 640) (x1833 640)))
(assert (= (ite (and (not x1300) x2034) (x1178 (x2873 39)) (x2267 (x2873 39))) (x3340 (x2873 39))))
(assert (x1480 x3402))
(assert (x1480 x1633))
(assert (x1480 x3666))
(assert (x1480 x893))
(assert (= (x1782 352) (ite (and x1204 x1835) (x3092 352) (x936 352))))
(assert (x1480 x102))
(assert (= (x938 128) (x1739 (x1157 (x938 128)))))
(assert (= (x1178 x962) (ite (= x962 x3102) x1095 (x578 x962))))
(assert (= (x926 x962) (ite (and (not x1907) x2661) (x625 x962) (x2349 x962))))
(assert (= (x3055 128) (x1739 (x1157 (x3055 128)))))
(assert (x1480 x1454))
(assert (= (x1089 x819) (ite (and (not x3564) x1835) (x1154 x819) (x2777 x819))))
(assert (x2739 (x2058 128)))
(assert (= (ite (and x2034 (not x1300)) (x1178 x1171) (x2267 x1171)) (x3340 x1171)))
(assert (x2739 x2067))
(assert (=> (>= 10000 x585) (= (x1157 x585) (x2873 x585))))
(assert (= (ite (= x2857 128) 16 (x1712 x2857)) (x1924 x2857)))
(assert (= (x1739 (x1157 (x1469 128))) (x1469 128)))
(assert (= (x3452 288) (x2700 288)))
(assert (= x3573 (and x1637 x2677)))
(assert (= (or (and x1412 (not x1898)) (and x2268 (not x238))) x2750))
(assert (= (x1739 (x1157 (x915 128))) (x915 128)))
(assert (x1480 x453))
(assert (= (x2727 480) (x591 480)))
(assert (x1480 x2988))
(assert (x2739 (x1765 160)))
(assert (x1480 x3374))
(assert (= (x3037 352) (x3726 352)))
(assert (= (and x1135 (not x2861)) x243))
(assert (x1480 x2717))
(assert (= (ite (= x848 192) x747 (x1580 x848)) (x386 x848)))
(assert (= (x1378 896) (x1170 896)))
(assert (x1480 x2857))
(assert (= (x967 480) (x1213 480)))
(assert (= (x1739 (x1844 x426 1)) (+ (x1739 x426) 1)))
(assert (x2739 (x107 128)))
(assert (= (x3022 320) (x1483 320)))
(assert (x1480 x3291))
(assert (= (x926 x1449) (ite (and (not x1907) x2661) (x625 x1449) (x2349 x1449))))
(assert (= 4151200938 (x1739 (x2873 4151200938))))
(assert (= (+ (x1739 x864) 5) (x1739 (x1844 x864 5))))
(assert (x1480 x131))
(assert (=> (>= 10000 (x505 128)) (= (x1157 (x505 128)) (x2873 (x505 128)))))
(assert (= (x229 x1836) (ite (= x2328 x1836) x1240 (x639 x1836))))
(assert (=> (<= (x1036 160) 10000) (= (x1157 (x1036 160)) (x2873 (x1036 160)))))
(assert (x1480 x1662))
(assert (= (x116 x2307) (ite (= (x2873 41) x2307) x2522 (x3516 x2307))))
(assert (= (x1157 1889567281) (x2873 1889567281)))
(assert (x1480 x390))
(assert (= (ite (= x2669 (x2873 41)) x2522 (x3516 x2669)) (x116 x2669)))
(assert (= 961581905 (x1739 (x2873 961581905))))
(assert (= (x1223 x2927) (ite (and x3717 (not x1900)) (x1154 x2927) (x2416 x2927))))
(assert (= (x625 (x2873 41)) (ite (= (x2873 41) x2140) x1719 (x2381 (x2873 41)))))
(assert (= x1586 (and x2637 x762)))
(assert (= (ite (= x1329 192) x1043 (x516 x1329)) (x461 x1329)))
(assert (=> (<= (x3417 128) 10000) (= (x1157 (x3417 128)) (x2873 (x3417 128)))))
(assert (= (ite (= 288 x848) x2460 (x3634 x848)) (x992 x848)))
(assert (= (and x1993 (not x67)) x1515))
(assert (x1480 x2897))
(assert (x1480 x2883))
(assert (x1480 x3473))
(assert (= (ite (and x1251 (not x111) x2086) (x2840 320) (x2703 320)) (x418 320)))
(assert (= x64 (or (and x1604 (not x1539)) (and (not x2019) x681))))
(assert (x1480 x1314))
(assert (= (x437 320) (x2856 320)))
(assert (x1480 x2317))
(assert (= (x212 352) (x2044 352)))
(assert (= (x2055 864) (x3177 864)))
(assert (x2739 (x3398 128)))
(assert (x1480 x2981))
(assert (x1480 x1087))
(assert (= (x516 256) (x2222 256)))
(assert (x1480 x1506))
(assert (= (ite (= x3397 864) x1805 (x1710 x3397)) (x185 x3397)))
(assert (x1480 x2399))
(assert (x1480 x1184))
(assert (= x1801 (or (and (not x3332) x3737) (and (not x2276) x2332))))
(assert (= (x1875 832) (x1541 832)))
(assert (x1480 x546))
(assert (= x2126 (=> (and (= x657 (< x1408 x1544)) (= (x116 x1714) x2720) (= (x3619 224) x1152) (= x1714 (x1844 x1616 6)) (= x1544 (x3064 256)) (= x1408 (x3064 288)) (= (x868 (x1157 (x1017 128)) (x1157 (x1017 160)) 0) x1616)) (and (=> x657 x1698) (=> (not x657) x3116)))))
(assert (= (x1958 x848) (ite (= x848 832) x956 (x1486 x848))))
(assert (x1480 x691))
(assert (= (x736 480) (x3313 480)))
(assert (= (ite (= x2794 (x2873 41)) x2522 (x3516 x2794)) (x116 x2794)))
(assert (= x477 (x1739 (x1157 x477))))
(assert (= (x1881 960) (x1302 960)))
(assert (= (x2279 800) (x442 800)))
(assert (= x562 (=> (and (= x3005 (x2900 928)) (= (> x23 x3005) x3385) (= x23 (x2900 832)) (= (x3565 (x2873 10)) x1896)) (and (=> x3385 x1698) (=> (and (or (not x2760) (and (= x1607 (x3455 (x1157 x98))) (> 4294967296 x1100) (= x851 (= x1607 (x1646 (x1157 x98)))) (= x1406 (<= x3458 (x1646 (x1157 274184521717934524641157099916833587200)))) x1406 (= x3458 (x3455 (x1157 274184521717934524641157099916833587200))) x851 x2760)) (= (> x83 0) x105) (= x2760 (> x665 0)) (not x3385) (= x1941 (x3643 256)) (= (x1781 320) x439) (= x1964 (x1123 288)) (= x1350 (x2455 (+ x383 96))) (= (x2455 (+ x2254 64)) x389) (= x383 (x3643 416)) (= (x2455 (+ x383 544)) x117) (= (x737 (- x3005 x23)) x2196) (or (and x105 (< x3 4294967296)) (not x105)) (= x2254 (x2455 (+ 512 x383))) (= x98 (x3354 224))) x1478)))))
(assert (= (x3013 x772) (ite (and x1835 (not x984) x2211) (x2105 x772) (x3404 x772))))
(assert (=> (<= (x1822 160) 10000) (= (x1157 (x1822 160)) (x2873 (x1822 160)))))
(assert (=> (>= 10000 (x128 160)) (= (x2873 (x128 160)) (x1157 (x128 160)))))
(assert (= (x2376 384) (x3075 384)))
(assert (= (ite (and x1568 (not x1761)) (x116 x1540) (x3254 x1540)) (x2129 x1540)))
(assert (x1480 x3375))
(assert (= 4267106866 (x1739 (x2873 4267106866))))
(assert (=> (<= (x3723 160) 10000) (= (x2873 (x3723 160)) (x1157 (x3723 160)))))
(assert (= (x2765 384) (x522 384)))
(assert (=> (>= 10000 (x3161 128)) (= (x1157 (x3161 128)) (x2873 (x3161 128)))))
(assert (= (x1157 274184521717934524641157099916833587200) (x2873 274184521717934524641157099916833587200)))
(assert (= (ite (and x2385 (not x3440) (not x2923)) (x268 x1319) (x2068 x1319)) (x1520 x1319)))
(assert (x1480 x1255))
(assert (= (x2094 896) (x1400 896)))
(assert (= (x2726 640) (x713 640)))
(assert (= (=> (and (= (div x316 x73) x2556) (= x48 (= 0 (ite x1931 1 0))) (= x978 (= x2556 x2724)) (= (x737 (- x1869 x230)) x73) (= x316 (mod (* x2724 x73) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= 0 x73) x1023) (= (x2129 (x2873 44)) x2724) (= x1931 (or x1023 x978))) (and (=> (not x48) x3241) (=> x48 x1698))) x3170))
(assert (= (x1739 (x2873 31556952)) 31556952))
(assert (= (=> (= x289 (> x3630 31)) (and (=> x289 x1783) (=> (not x289) x1698))) x3735))
(assert (x2739 (x107 160)))
(assert (= (x1553 x3397) (ite (= x3397 352) x1052 (x2744 x3397))))
(assert (= (x1739 (x1157 (x215 160))) (x215 160)))
(assert (x1480 x1158))
(assert (x1480 x83))
(assert (= (x2329 384) (x1024 384)))
(assert (= x2829 (=> (and (= (= x1056 0) x1617) (= (x1981 (x2873 37)) x1056) (= (x2455 (+ x2227 x2031)) x2266)) (and (=> (and (or (and (= x3533 x1337) (not x1500)) (and x1500 (= x1337 1) (> 4294967296 x1795))) x1617 (= (> x3533 0) x1500)) x2032) (=> (not x1617) x2375)))))
(assert (x2739 x640))
(assert (x1480 x446))
(assert (= (x234 736) x2654))
(assert (= (ite (= x3136 (x2873 41)) x2522 (x3516 x3136)) (x116 x3136)))
(assert (= (x1739 (x1844 x1564 8)) (+ (x1739 x1564) 8)))
(assert (x1480 x2130))
(assert (= (x947 x3472) (ite (= x3472 864) x2382 (x901 x3472))))
(assert (= (x234 640) (x3443 640)))
(assert (= (x2129 (x2873 37)) (ite (and x1568 (not x1761)) (x116 (x2873 37)) (x3254 (x2873 37)))))
(assert (= (ite (and x1835 (not x3564)) (x1154 x846) (x2777 x846)) (x1089 x846)))
(assert (x1480 x2834))
(assert (= (ite (= x3244 x3102) x1095 (x578 x3244)) (x1178 x3244)))
(assert (= (x2374 352) (x214 352)))
(assert (= (x1302 384) (x1881 384)))
(assert (= (x1739 (x1157 (x1744 160))) (x1744 160)))
(assert (= (x3153 832) (x2063 832)))
(assert (= (ite (= 640 x753) 2388873442 (x462 x753)) (x3261 x753)))
(assert (= x3715 (and x3598 x471)))
(assert (x1480 x209))
(assert (= (x1541 800) (x1875 800)))
(assert (x1480 x1168))
(assert (=> (>= 10000 (x373 128)) (= (x1157 (x373 128)) (x2873 (x373 128)))))
(assert (= (ite (= x1329 288) x2464 (x100 x1329)) (x2195 x1329)))
(assert (= (x3301 x2857) (ite (= 128 x2857) 16 (x2505 x2857))))
(assert (=> (>= 10000 (x1242 128)) (= (x2873 (x1242 128)) (x1157 (x1242 128)))))
(assert (= (and (not x3632) x3649) x1481))
(assert (= (x1580 320) (x14 320)))
(assert (= (x529 800) (x2296 800)))
(assert (x2739 (x1242 128)))
(assert (x1480 x6))
(assert (= (ite (= x3136 x2140) x1719 (x2381 x3136)) (x625 x3136)))
(assert (x1480 x3347))
(assert (= 3963136098 (x1739 (x2873 3963136098))))
(assert (x1480 x3552))
(assert (= (x1981 (x2873 43)) (ite (= (x2873 43) x3217) x2266 (x3502 (x2873 43)))))
(assert (x1480 x1191))
(assert (= (x3190 x1670) (ite (and x2034 (not x2028)) (x3340 x1670) (x2866 x1670))))
(assert (=> (>= 10000 (x3428 160)) (= (x2873 (x3428 160)) (x1157 (x3428 160)))))
(assert (= (x1541 224) (x1875 224)))
(assert (= x3578 x3270))
(assert (x1480 x2847))
(assert (= (=> (and (= (= x1625 x1749) x877) (= x848 (x2455 (+ x3378 352))) (= x3378 (mod (* x2582 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1749 (x386 256)) (= (x386 192) x2582) (= (x386 x848) x1625)) (and x155 x877)) x3371))
(assert (= (x1178 x1599) (ite (= x1599 x3102) x1095 (x578 x1599))))
(assert (x1480 x3377))
(assert (= (x1216 160) (x1739 (x1157 (x1216 160)))))
(assert (= (x713 224) x210))
(assert (= x3264 (or x2741 (and x2752 x3307))))
(assert (x1480 x275))
(assert (= x1835 true))
(assert (x1480 x256))
(assert (= (x965 224) (x2743 224)))
(assert (= (x1739 (x1157 (x1021 160))) (x1021 160)))
(assert (= (x1541 896) (x1875 896)))
(assert (= x771 (x2875 928)))
(assert (= (ite (= x738 128) 16 (x1098 x738)) (x2249 x738)))
(assert (= x640 (x1739 (x1157 x640))))
(assert (= (x2163 704) (x2743 704)))
(assert (= (x516 320) (x461 320)))
(assert (= x297 (=> (and (= x1333 (x868 (x1157 (x3529 128)) (x1157 (x3529 160)) 0)) (= (> x1191 0) x2028) (or (not x593) (and (= x1608 (= x2317 x2690)) (= (div x2312 1000000000000000000) x417) (= (mod (* x1499 x2317) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2312) x593 (= x1494 (or x1101 x1608)) (= x3298 (x2694 256)) (= x1101 (= x1499 0)) (= x2521 (x3190 (x2873 43))) (= x1499 (x2694 224)) (not (< x3298 x417)) (= (x2694 256) x2317) (not (= 0 x99)) (= x2337 (x737 (- x3298 x417))) (= x2690 (div x2312 x1499)) (= x99 (ite x1494 1 0)))) (or (and (= x689 (x868 (x1157 (x65 128)) (x1157 (x65 160)) 0)) (= x2778 (x65 832)) (= x2868 (x3340 x1171)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1196 x1175))) (= x1171 (x1844 x689 6)) x2028 (= (x2455 (+ x1196 x1175)) x918) (= (x65 832) x1175) (= x1196 (x1444 (x2873 40))) (= (x2455 (+ x2868 x2778)) x2592) (not (>= (+ x2778 x2868) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x2028)) (= (x2455 (+ x742 x1370)) x1995) (= (< x1497 1000000000000000000) x593) (= x267 (ite (< x2229 x2469) x2229 x2469)) (= (x868 (x1157 (x119 128)) (x1157 (x119 160)) 0) x1503) (not (>= (+ x1155 x1087) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1470 x2681) (= (x1064 960) x400) (= x3102 (x1844 x3681 7)) (= x1316 (ite x1066 1 0)) (= x3136 (x1844 x3557 7)) (= x759 (x116 x862)) (= (< 0 x1245) x3187) (= (x3153 224) x1497) (= x542 x1521) (<= x2681 1461501637330902918203684832716283019655932542975) (= (x868 (x1157 (x3532 128)) (x1157 (x3532 160)) 0) x63) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3068)) (= (x3589 832) x3133) (= (x868 (x1157 (x3398 128)) (x1157 (x3398 160)) 0) x864) (= x1449 (x1844 x63 8)) (or (and (> x2113 0) x189 (> x2239 31) (or (and (= x2113 1) x2065 (< x2239 4294967296)) (and (= x3603 x2113) (not x2065))) (= false x530) (= (> x3603 0) x2065) (= false x1235)) (and (= false x1235) (= x530 false) (not x189))) (= x1087 (x2011 896)) (or (and (= x1029 (x520 352)) (= x2419 (x3110 448)) (= x2584 (< 0 x3613)) x1546 (= (ite x2169 1 0) x3486) (= (div x3732 x2869) x2818) (= x745 (x1178 x1410)) (= (div x1067 x1455) x2513) (= (x1178 x427) x2869) (< 0 x247) (= x886 (x1844 x355 6)) (= (x868 (x1157 (x425 128)) (x1157 (x425 160)) 0) x355) (= x157 (x2845 320)) (= x3015 (x1178 (x2873 40))) (= x688 (x3746 224)) (= x2500 (x554 320)) (= (x1844 x3180 4) x1410) (= (= x2513 x157) x610) (= (x1844 x2852 3) x95) (= (x2936 288) x849) (= (< x2419 x2585) x3246) (not (= x2649 0)) (or (not x341) (and (= (x2665 544) x941) (not (> x2985 x2263)) (= (x3313 576) x3273) x341 (= (> x3351 x743) x2793) (or (and (= x1813 (x736 544)) (not x2793) (= (x736 512) x3442) (= (ite (> x1813 x3442) x3442 x1813) x2457)) x2793) (= (ite (< x2379 x1326) x2379 x1326) x590) (or (and (= x2109 x658) (not x2434)) (and (> 4294967296 x711) (= 1 x2109) x2434)) (> x2109 0) (< 31 x711) (= (x1347 384) x2985) (= x1950 (x737 (- x1409 x2655))) (= x2655 (x3110 448)) (= (x1347 544) x1326) (= x743 (x736 544)) (not (> x2655 x1409)) (= (x737 (- x2263 x2985)) x2379) (= (ite (< x3273 x941) x3273 x941) x656) (= (x1347 352) x2263) (= (> x658 0) x2434) (= x3351 (x736 480)) (= x1409 (x3110 416)))) (= (mod (* x1455 x157) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1067) (= x3287 (x2455 (+ x688 x2447))) (= (= x2500 x2818) x2913) (= x2742 (x868 (x1157 (x554 128)) (x1157 (x554 160)) 0)) (or (and (not x2584) (= x3613 x247)) (and (= 1 x247) x2584 (> 4294967296 x3054))) (= (x1178 x886) x3692) (= (x3110 416) x2585) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2447 x688))) (= (x334 288) x2282) (= (x2061 288) x1105) (= (= x2869 0) x723) (= (x1178 (x2873 39)) x1455) (= x2852 (x868 (x1157 (x1148 128)) (x1157 (x1148 160)) 0)) (not (= x3486 0)) (= x2447 (x1178 (x2873 40))) (or (and (= x249 1) (not x3246)) (and x3246 (= x1381 (x3110 384)) (= x1815 (> x3158 x1381)) (= (x3110 352) x3158) (= x249 (ite x2539 1 0)) (= (not x1815) x2539))) (< 31 x3054) (= x56 (= x1455 0)) (= x341 (= 0 x249)) (= (x3308 288) x845) (= x3180 (x868 (x1157 (x2806 128)) (x1157 (x2806 160)) 0)) (= (or x56 x610) x2183) (= (or x723 x2913) x2169) (= x427 (x1844 x2742 2)) (= x3732 (mod (* x2869 x2500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3184 (div x3732 10000)) (= (x1178 x95) x309) (= x2649 (ite x2183 1 0)) (= (div x1067 10000) x2467)) (not x1546)) (= x3310 (x737 (- x2522 x2346))) (not (= 0 x1316)) (not (< x3238 x2346)) (<= x3626 1461501637330902918203684832716283019655932542975) (= (x1589 800) x139) (= (x116 x3136) x1432) (not (>= (+ x3191 x1155) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3094 (mod (* x142 x3310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (>= (+ x1370 x1155) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1599 (x1844 x141 2)) (= x2021 (x1172 896)) (or (not x3485) (and (not (> x2938 x555)) (= x2754 (x737 (- x555 x2367))) x3485 (= (x1064 960) x555))) (= x1039 (x1655 832)) (= (x2418 896) x2402) (or (and (= (x1655 832) x631) (not x584) (= x1884 (> x1238 x631)) (= x1238 (x1655 928)) (or (and (= (ite (> 32 x749) x749 32) x1525) (= x3146 (x1400 224)) (= x2579 (x211 320)) (= (> x108 0) x641) x1884 (= x3321 (x2353 288)) (= x473 (x2455 (+ x1169 96))) (= (< 0 x1914) x2117) (= (x817 352) x443) (= (x2455 (+ x2779 32)) x1019) (or (and x2117 (= (= (x3611 (x1157 x3146)) x1120) x3295) (< x749 4294967296) x1776 (= x550 (x1505 (x1157 274184521717934524641157099916833587200))) x3295 (= (<= x550 (x3611 (x1157 274184521717934524641157099916833587200))) x1776) (= x1120 (x1505 (x1157 x3146)))) (not x2117)) (or (not x3045) (and x3045 (< x3518 4294967296))) (= x3108 (x2455 (+ 64 x705))) (= x835 (x558 928)) (= x805 (x1233 256)) (= (> x1970 0) x3045) (< 0 x1914) (= x3445 (x558 832)) (not (> x3445 x835)) (= (x2455 (+ x1169 512)) x705) (= x1210 (x3190 (x2873 10))) (or (and (> 4294967296 x1669) x641) (not x641)) (= (x442 640) x2779) (= (x737 (- x835 x3445)) x573) (= (x1233 416) x1169) (= (x2455 (+ 544 x1169)) x3091) (= (> x443 0) x280) (or (not x280) (and x280 (= (x737 (- 32 x2270)) x374) (> x1247 0) (= x2270 (x817 352)) (= (x1261 x3431 x2314) x1247) (= (mod (* 8 x374) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2314) (= (x817 384) x3431)))) (not x1884))) (and (= x2038 (> x3580 0)) (or (not x847) (and (< x2740 4294967296) x847)) (= (x1059 928) x3163) (or (and x3497 (> 4294967296 x3069)) (not x3497)) (= x1567 (x2455 (+ x799 32))) (= x3497 (> x2538 0)) (= (x1763 224) x2537) (= x712 (x3190 (x2873 10))) x584 (not (< x1715 x3163)) (= (x528 384) x147) (= (x1059 832) x1715) (= x1659 (x2455 (+ 64 x147))) (= (x2455 (+ x147 480)) x1620) (= (ite (> 32 x634) x634 32) x2888) (or (not x2683) (and x2683 (= (mod (* x1094 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2971) (= x1094 (x737 (- 32 x1184))) (= (x3424 320) x1184) (= x1631 (x3424 352)) (> x1611 0) (= x1611 (x1261 x1631 x2971)))) (= (x3104 576) x799) (= x3320 (x2455 (+ 512 x147))) (> x3580 0) (= (< 0 x85) x847) (= x2915 (x3710 288)) (= x1092 (x737 (- x1715 x3163))) (= (x528 256) x353) (= (< 0 x2234) x2683) (or (and (= (x1505 (x1157 x2537)) x1385) x2038 (= x2899 (>= (x1291 (x1157 274184521717934524641157099916833587200)) x32)) (= x32 (x1505 (x1157 274184521717934524641157099916833587200))) x2899 (> 4294967296 x634) x87 (= x87 (= x1385 (x1291 (x1157 x2537))))) (not x2038)) (= (x3424 320) x2234))) (not (< x1995 x139)) (>= x2340 0) (or (and (= x3665 (or x1342 x1293)) (= x3296 (x1178 (x2873 40))) (= x2589 (ite x3665 1 0)) (= x725 (< 0 x2003)) (or (and (= x850 x2003) (not x725)) (and (> 4294967296 x1851) x725 (= 1 x850))) (= (x1178 x2331) x1803) (= (= 0 x1598) x1293) (= x3575 (x348 288)) (= (div x1 10000) x1340) (= x1598 (x1178 x3432)) (= x2331 (x1844 x3277 6)) (= (mod (* x2207 x1598) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1) (= x2759 (div x1 x1598)) (= (x2455 (+ x1085 x3296)) x2151) (> x1851 31) (not (>= (+ x1085 x3296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1085 (x399 224)) x3187 (not (= 0 x2589)) (= x2236 (x1178 (x2873 37))) (or (and (or (and (= x489 (x1893 352)) x475 (= (x1893 320) x3441) (not (> x3441 x489)) (= (x737 (- x489 x3441)) x2358)) (not x475)) (= (x1893 352) x2535) (= x475 (< x1973 x2535)) (= x1973 (x1893 320)) (not x2284)) (and x2284 (= (x1893 352) x2214))) (= x2087 (x868 (x1157 (x82 128)) (x1157 (x82 160)) 0)) (= x1342 (= x2207 x2759)) (= (< 0 x2236) x2284) (= (x503 288) x1104) (= x3432 (x1844 x2087 2)) (= (x868 (x1157 (x3330 128)) (x1157 (x3330 160)) 0) x3277) (= (x683 352) x2207) (> x850 0)) (and (= (x868 (x1157 (x925 128)) (x1157 (x925 160)) 0) x1549) (= (x1178 x1071) x1876) (= (x348 288) x2674) (not x3187) (= (x1844 x1549 6) x1071))) (= x1379 x2031) (= (x1844 x864 5) x971) (= (x2887 864) x2229) (= (x3405 832) x2010) (= x1850 x3626) (= (< 0 x2834) x189) (= (x868 (x1157 (x2193 128)) (x1157 (x2193 160)) 0) x3557) (> x3068 99) (= (x1339 832) x1191) (= x1095 (x2455 (+ x742 x3191))) (>= x2681 0) (>= 1461501637330902918203684832716283019655932542975 x2340) (not x530) (= (x116 x1449) x2029) (= x1300 (< 0 x1462)) (= x796 (x1844 x1333 6)) (= (x3190 (x2873 41)) x2346) (= x1419 (x1178 (x2873 37))) (>= x3626 0) (= (x116 x1599) x3283) (= (< x2367 x400) x3485) (or (and (not x1022) (= (x116 (x2873 37)) x336) (= x336 x2834)) (and (= x2834 1) x1022)) (= (x868 (x1157 (x2180 128)) (x1157 (x2180 160)) 0) x3681) (= (x1074 896) x1462) (= (= x1063 x142) x3585) (= x1063 (div x3094 x3310)) (= x1022 (= 0 x3283)) (= x3191 (x578 x3102)) (= x141 (x868 (x1157 (x740 128)) (x1157 (x740 160)) 0)) (= (x116 x796) x2380) (= (x1589 992) x1370) (= (= 0 x1419) x1546) (= x142 (x3190 (x2873 44))) (= x561 (x3227 864)) (= (x1655 928) x3561) (= (x1844 x1503 2) x862) (= (x1178 (x2873 39)) x1245) (= (x2455 (+ x1087 x742)) x2237) (not x1235) (= x3451 x326) (= (or x3585 x533) x1066) (= x1470 x1638) (= x584 (> x1039 x3561)) (= x2534 (x737 (- x1995 x139))) (or (not x1300) (and (= (x1766 864) x2572) (= (x3349 (x2873 40)) x1415) (= x999 (x1178 x962)) (= x2130 (x737 (- x1415 x1690))) (= x962 (x1844 x1932 6)) x1300 (= (x1766 896) x1690) (= x2728 (x737 (- x2572 x1857))) (not (> x1690 x1415)) (= (x1766 896) x1857) (= (x868 (x1157 (x1766 128)) (x1157 (x1766 160)) 0) x1932) (= x2001 (x1766 896)) (not (> x1857 x2572)) (= (x737 (- x999 x2001)) x1910) (not (< x999 x2001)))) (= (= 0 x3310) x533)) x539)))
(assert (x1480 x964))
(assert (x1480 x3393))
(assert (= (ite (= x772 256) 274184521717934524641157099916833587200 (x1747 x772)) (x1833 x772)))
(assert (= (ite (and x1835 (not x3564)) (x1154 (x2873 45)) (x2777 (x2873 45))) (x1089 (x2873 45))))
(assert (x1480 x1628))
(assert (= (ite (and x3717 (not x1900)) (x1154 x3102) (x2416 x3102)) (x1223 x3102)))
(assert (=> (<= (x1021 128) 10000) (= (x2873 (x1021 128)) (x1157 (x1021 128)))))
(assert (= (x965 320) (x2743 320)))
(assert (x2739 (x3178 160)))
(assert (= (=> (and (= (x3565 (x2873 41)) x589) (= (< x1869 x589) x3343)) (and (=> x3343 x1698) (=> (not x3343) x566))) x2509))
(assert (= (x3340 (x2873 41)) (ite (and x2034 (not x1300)) (x1178 (x2873 41)) (x2267 (x2873 41)))))
(assert (= 1257916802 (x1739 (x2873 1257916802))))
(assert (= (and x2721 x289) x776))
(assert (= (x2727 800) (x591 800)))
(assert (= (x116 x1209) (ite (= x1209 (x2873 41)) x2522 (x3516 x1209))))
(assert (= (ite (= x3102 x2815) x1095 (x578 x2815)) (x1178 x2815)))
(assert (x1480 x2069))
(assert (= (ite (and (not x1761) x1568) (x116 x2815) (x3254 x2815)) (x2129 x2815)))
(assert (= (x362 x2857) (ite (= 256 x2857) 274184521717934524641157099916833587200 (x2294 x2857))))
(assert (= (x3428 256) (x2973 256)))
(assert (x1480 x935))
(assert (= (x3178 384) (x1915 384)))
(assert (= 16 (x1924 128)))
(assert (= (x2129 x3292) (ite (and x1568 (not x1761)) (x116 x3292) (x3254 x3292))))
(assert (= (x1178 x3416) (ite (= x3102 x3416) x1095 (x578 x3416))))
(assert (x1480 x3163))
(assert (= (x1739 (x1157 (x3723 128))) (x3723 128)))
(assert (x1480 x200))
(assert (= (x2279 352) (x442 352)))
(assert (= x2916 (=> (and (= (x2856 512) x2716) (not (> x131 x2301)) (= (x1844 x2962 5) x2185) (= x928 (x737 (- x1869 x131))) (= (x1596 544) x1322) (= x841 (< 0 x1322)) (= x2962 (x868 (x1157 (x321 128)) (x1157 (x321 160)) 0)) (not (= x466 0)) (= (x1089 x2185) x131) (= (x1596 576) x466)) (and (=> (and (= (x868 (x1157 (x462 128)) (x1157 (x462 160)) 0) x2079) (= (or x1725 x3525) x751) (= x3356 (= x982 x2486)) (= (x1675 544) x2278) (= (x811 576) x831) (= x512 (= x1666 0)) (= x1758 (div x1666 x1062)) (= (ite x1750 1 0) x2767) (> x1547 31) (= x1862 (x1089 x1405)) (= (= x2278 0) x3281) (= x2570 (x1089 x872)) (= x1725 (= 0 x1062)) (= x2206 (x1955 672)) (not (= x2767 0)) (= x1062 (x737 (- x1862 x1523))) (= (div x629 x1666) x2864) (= (x1955 608) x2641) (= (< 0 x2761) x449) (= (= x366 x2570) x1188) (= x3265 (x3059 544)) (= (x868 (x1157 (x1765 128)) (x1157 (x1765 160)) 0) x872) (not (= x1357 0)) (< 0 x2952) (= (x1089 (x2873 46)) x2226) (= x2260 (or x1188 x1700)) (= x2685 (or x2350 x512)) (= x2540 (x3001 544)) (= (div x1692 10000) x1438) (= x1942 (> x2213 x3265)) (= (div x784 10000) x1126) (not (= 0 x224)) (= (x1596 512) x3652) (= (x1089 (x2873 47)) x982) (= x1405 (x1844 x2079 6)) (= x1262 (ite x2260 1 0)) (= (ite x751 1 0) x1357) (= (x2455 (+ x697 x2641)) x241) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1668 x2206))) (= (div x1692 x2278) x2486) (= (div x784 x2540) x366) (= x3419 (x3001 512)) (= (mod (* x982 x2278) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1692) (= (= x1758 x831) x3525) (= (div x629 10000) x1571) (= (mod (* x1062 x831) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1666) (= x697 (x2455 (+ x2206 x1668))) (= x1668 (x1955 640)) (= x1700 (= 0 x2540)) (not (= 0 x1262)) (= x629 (mod (* x1666 x2226) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= x2864 x2226) x2350) (or (and (= x3616 (x3059 544)) x1942) (not x1942)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x697 x2641))) (= (ite x2685 1 0) x224) x841 (not (< x1862 x1523)) (= (mod (* x2570 x2540) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x784) (= x2213 (x3059 704)) (= x1523 (x811 640)) (= (div x1571 31556952) x3357) (or (and (= x2952 x2761) (not x449)) (and (= x2952 1) x449 (> 4294967296 x1547))) (= (or x3356 x3281) x1750)) x3268) (=> (not x841) x3711)))))
(assert (= (ite (= x3471 x1727) x2963 (x3316 x3471)) (x3061 x3471)))
(assert (= (x612 896) (x1594 896)))
(assert (x1480 x1001))
(assert (= (x3007 x1319) (ite (= x1319 128) 7 (x174 x1319))))
(assert (= x1528 x2034))
(assert (= (x3340 x814) (ite (and x2034 (not x1300)) (x1178 x814) (x2267 x814))))
(assert (= (x1387 384) (x977 384)))
(assert (= (=> (and (= x540 (= x2563 x110)) (= (or x1774 x540) x3286) (= x110 (div x2904 x2769)) (= x296 (= (ite x3286 1 0) 0)) (= (x1660 224) x2769) (= x2563 (x1660 256)) (= (= 0 x2769) x1774) (= (x1660 256) x2131) (= x2246 (x2129 (x2873 43))) (= (mod (* x2563 x2769) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2904)) (and (=> (not x296) x327) (=> x296 x1698))) x3147))
(assert (= (x2044 224) (x212 224)))
(assert (= (x128 128) (x1739 (x1157 (x128 128)))))
(assert (= (x1893 384) (x3330 384)))
(assert (x1480 x3146))
(assert (= (ite (and (not x1300) x2034) (x1178 x2076) (x2267 x2076)) (x3340 x2076)))
(assert (x2739 (x2159 128)))
(assert (=> (<= (x3493 128) 10000) (= (x1157 (x3493 128)) (x2873 (x3493 128)))))
(assert (= (x660 384) (ite (and x438 (not x1629) x3562) (x2991 384) (x543 384))))
(assert (x2739 (x938 160)))
(assert (x1480 x1757))
(assert (= (ite (= x3217 (x2873 44)) x2266 (x3502 (x2873 44))) (x1981 (x2873 44))))
(assert (x2739 (x3488 160)))
(assert (= (x2873 3092021830) (x1157 3092021830)))
(assert (x1480 x2944))
(assert (=> (>= 10000 (x925 160)) (= (x1157 (x925 160)) (x2873 (x925 160)))))
(assert (x1480 x3274))
(assert (= (x3340 x395) (ite (and x2034 (not x1300)) (x1178 x395) (x2267 x395))))
(assert (= (or (and x1013 x731) x3264) x306))
(assert (= (ite (= x1329 1152) x3220 (x1881 x1329)) (x1302 x1329)))
(assert (x1480 x1210))
(assert (x1480 x2774))
(assert (x1480 x770))
(assert (x1480 x1455))
(assert (=> (>= 10000 (x715 128)) (= (x2873 (x715 128)) (x1157 (x715 128)))))
(assert (= (x824 x2328) (ite (and x3300 (not x1934)) (x912 x2328) (x3198 x2328))))
(assert (= (x870 288) x1850))
(assert (= (x3007 320) (x174 320)))
(assert (x1480 x2127))
(assert (x2739 (x1016 128)))
(assert (=> (<= (x1956 128) 10000) (= (x1157 (x1956 128)) (x2873 (x1956 128)))))
(assert (= (x3059 544) (x1955 544)))
(assert (= (ite (= x930 192) x747 (x1580 x930)) (x386 x930)))
(assert (x1480 x2263))
(assert (= (x3363 128) (x1739 (x1157 (x3363 128)))))
(assert (x1480 x71))
(assert (= (ite (and x2332 (not x2276)) (x35 352) (x2397 352)) (x1533 352)))
(assert (x1480 x1523))
(assert (= (ite (= x1319 864) x2382 (x901 x1319)) (x947 x1319)))
(assert (x2739 (x505 160)))
(assert (x1480 x1808))
(assert (= (x1299 864) (x1605 864)))
(assert (= (x1220 416) (x188 416)))
(assert (x2739 (x1741 128)))
(assert (= (x660 x1319) (ite (and x438 (not x1629) x3562) (x2991 x1319) (x543 x1319))))
(assert (= (x781 896) (x2347 896)))
(assert (x1480 x1214))
(assert (= (x3059 x753) (ite (= x753 704) x241 (x1955 x753))))
(assert (= (x2163 x1319) (ite (= 192 x1319) x3576 (x2743 x1319))))
(assert (x1480 x3179))
(assert (= (x1710 320) (x185 320)))
(assert (= x3527 (or (and x2844 x527) (and (not x1603) x378))))
(assert (= (x912 x3542) (ite (= x3542 x3114) x2558 (x1792 x3542))))
(assert (x1480 x2326))
(assert (= (x660 x3472) (ite (and x3562 (not x1629) x438) (x2991 x3472) (x543 x3472))))
(assert (x1480 x2027))
(assert (= (ite (= (x2873 47) x2140) x1719 (x2381 (x2873 47))) (x625 (x2873 47))))
(assert (x1480 x3397))
(assert (= (x3301 544) (x2505 544)))
(assert (= (x3452 800) (x2700 800)))
(assert (= (x1596 x772) (ite (= 576 x772) x928 (x321 x772))))
(assert (= (x1739 (x1844 x2772 6)) (+ (x1739 x2772) 6)))
(assert (x1480 x3563))
(assert (x1480 x2558))
(assert (x1480 x3015))
(assert (= (and x2385 (not x2923)) x372))
(assert (= (x2129 x1364) (ite (and (not x1761) x1568) (x116 x1364) (x3254 x1364))))
(assert (= (ite (= 192 x772) 0 (x3401 x772)) (x1243 x772)))
(assert (= (x2498 384) (x1972 384)))
(assert (= (=> (and (= (div x2623 1000000000000000000) x852) (= (< x1388 x852) x1539)) (and (=> (and (not x1539) (= x556 (x737 (- x1388 x852)))) x1828) (=> x1539 x1698))) x1785))
(assert (x1480 x1409))
(assert (x1480 x1419))
(assert (x1480 x575))
(assert (= (x1739 (x1157 (x2491 128))) (x2491 128)))
(assert (x1480 x701))
(assert (= (x3061 x1082) (ite (= x1082 x1727) x2963 (x3316 x1082))))
(assert (x1480 x1322))
(assert (= x3285 (=> (and (= (x2747 416) x3319) (= (< x3319 x3676) x392) (= (x2747 448) x3676)) (and (=> (not x392) x2896) (=> x392 x1698)))))
(assert (x1480 x406))
(assert (= (x1661 832) (x1904 832)))
(assert (= x1878 (=> (= (< 0 x2596) x1096) (and (=> (not x1096) x1698) (=> x1096 x3167)))))
(assert (= (x1178 x700) (ite (= x700 x3102) x1095 (x578 x700))))
(assert (=> (>= 10000 (x3243 160)) (= (x1157 (x3243 160)) (x2873 (x3243 160)))))
(assert (= (x522 x202) (ite (= 192 x202) 0 (x2765 x202))))
(assert (= (x116 (x2873 46)) (ite (= (x2873 46) (x2873 41)) x2522 (x3516 (x2873 46)))))
(assert (x1480 x2867))
(assert (x1480 x1062))
(assert (= (x2780 x3472) (ite (= x3472 256) 274184521717934524641157099916833587200 (x2277 x3472))))
(assert (x2739 (x526 128)))
(assert (= (x1895 352) (x1195 352)))
(assert (x1480 x2289))
(assert (= (x2063 896) (x3153 896)))
(assert (= (ite (and x3717 (not x1900)) (x1154 x1670) (x2416 x1670)) (x1223 x1670)))
(assert (= (=> (= x3466 (> x2241 31)) (and (=> x3466 x2325) (=> (not x3466) x1698))) x3602))
(assert (= (x1178 x176) (ite (= x176 x3102) x1095 (x578 x176))))
(assert (= (x2700 896) (x3452 896)))
(assert (= (ite (and x2034 (not x2028)) (x3340 (x2873 39)) (x2866 (x2873 39))) (x3190 (x2873 39))))
(assert (= (ite (= x3472 128) 16 (x2191 x3472)) (x808 x3472)))
(assert (x1480 x3021))
(assert (= (ite (= (x2873 41) (x2873 44)) x2522 (x3516 (x2873 44))) (x116 (x2873 44))))
(assert (= (x1502 384) (x348 384)))
(assert (x1480 x2013))
(assert (x1480 x3089))
(assert (= (x2873 3613687827) (x1157 3613687827)))
(assert (x1480 x3653))
(assert (= (x1739 (x1157 (x1242 128))) (x1242 128)))
(assert (= (x1216 320) (x3353 320)))
(assert (= (x1642 384) (x1582 384)))
(assert (x1480 x1970))
(assert (x1480 x2823))
(assert (x1480 x2113))
(assert (x1480 x1048))
(assert (= (x781 320) (x2347 320)))
(assert (= (x529 320) (x2296 320)))
(assert (= x217 (=> (and (= x371 (x2455 (+ x1806 x3369))) (= x2514 (> x1592 x2841)) (= x1592 (x526 256)) (= x2841 (x526 288))) (and (=> x2514 x1698) (=> (not x2514) x549)))))
(assert (= (and x1451 x1442) x49))
(assert (= (ite (= 864 x738) x2382 (x901 x738)) (x947 x738)))
(assert (x1480 x1527))
(assert (x1480 x436))
(assert (x1480 x772))
(assert (= (ite (= 288 x1329) x1850 (x2055 x1329)) (x3177 x1329)))
(assert (= x2080 (and (not x409) x2651)))
(assert (x2739 (x925 160)))
(assert (=> (<= (x460 128) 10000) (= (x1157 (x460 128)) (x2873 (x460 128)))))
(assert (= (x1915 352) x2496))
(assert (x1480 x1095))
(assert (x1480 x148))
(assert (= (x362 384) (x2294 384)))
(assert (x1480 x2259))
(assert (= (=> (and (= (div x2904 1000000000000000000) x952) (= (< x2131 x952) x434)) (and (=> (and (= (x737 (- x2131 x952)) x2870) (not x434)) x3705) (=> x434 x1698))) x327))
(assert (= (x2129 (x2873 47)) (ite (and x1568 (not x1761)) (x116 (x2873 47)) (x3254 (x2873 47)))))
(assert (x1480 x990))
(assert (x1480 x866))
(assert (x1480 x2460))
(assert (= (x3340 x1138) (ite (and (not x1300) x2034) (x1178 x1138) (x2267 x1138))))
(assert (x1480 x2072))
(assert (x1480 x2785))
(assert (= x2946 (x2139 640)))
(assert (x1480 x303))
(assert (x1480 x3175))
(assert (x2739 (x2806 160)))
(assert (= (x1502 320) (x348 320)))
(assert (x1480 x996))
(assert (= x1618 (and x1202 (not x48))))
(assert (= (x926 x3432) (ite (and x2661 (not x1907)) (x625 x3432) (x2349 x3432))))
(assert (= (x1739 (x1844 x1392 6)) (+ 6 (x1739 x1392))))
(assert (x1480 x2459))
(assert (x1480 x2615))
(assert (x2739 (x554 160)))
(assert (= (x1699 384) (x2180 384)))
(assert (= x1013 (and x2752 (not x3307))))
(assert (= (ite (and (not x3520) x730) (x3061 (x2873 37)) (x2099 (x2873 37))) (x653 (x2873 37))))
(assert (x2739 (x3600 160)))
(assert (= (ite (and (not x1942) x841 x3581) (x3059 x753) (x3716 x753)) (x1140 x753)))
(assert (x1480 x3561))
(assert (= x816 (=> (and (= x738 (x2455 (+ 352 x1706))) (= (x2163 192) x3018) (= x1706 (mod (* 32 x3018) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3248 (x2163 x738)) (= (x2163 256) x724) (= x276 (= x724 x3248))) (and x2630 x276))))
(assert (= (x3190 x395) (ite (and (not x2028) x2034) (x3340 x395) (x2866 x395))))
(assert (x1480 x2230))
(assert (x1480 x747))
(assert (x1480 x2288))
(assert (x1480 x783))
(assert (x1480 x2301))
(assert (x1480 x3352))
(assert (x1480 x2828))
(assert (=> (>= 10000 (x321 128)) (= (x2873 (x321 128)) (x1157 (x321 128)))))
(assert (= (x516 288) (x2222 288)))
(assert (= (x808 x1319) (ite (= 128 x1319) 16 (x2191 x1319))))
(assert (x1480 x3507))
(assert (=> (<= (x170 128) 10000) (= (x2873 (x170 128)) (x1157 (x170 128)))))
(assert (= x2086 (or (and x438 x1629) (and x1096 x1465) (and x3444 (not x842)))))
(assert (= (x3609 320) (x413 320)))
(assert (= (x1739 (x2873 2388873442)) 2388873442))
(assert (x1480 x1611))
(assert (= 0 (x1691 x1329)))
(assert (x1480 x1851))
(assert (x1480 x1892))
(assert (= (ite (= 256 x848) 274184521717934524641157099916833587200 (x2800 x848)) (x3528 x848)))
(assert (= (x1739 (x1157 (x740 160))) (x740 160)))
(assert (= (x926 x2669) (ite (and (not x1907) x2661) (x625 x2669) (x2349 x2669))))
(assert (x2739 (x3417 128)))
(assert (x1480 x2754))
(assert (x1480 x2589))
(assert (= (x1739 (x1844 x689 6)) (+ 6 (x1739 x689))))
(assert (x1480 x2715))
(assert (x2739 (x3569 160)))
(assert (= (x2163 384) (x2743 384)))
(assert (x1480 x241))
(assert (= (x1739 (x1157 (x33 160))) (x33 160)))
(assert (= (ite (= x3114 (x2873 37)) x2558 (x1792 (x2873 37))) (x912 (x2873 37))))
(assert (x1480 x3141))
(assert (= (x1089 x340) (ite (and (not x3564) x1835) (x1154 x340) (x2777 x340))))
(assert (x1480 x774))
(assert (x1480 x3389))
(assert (= (ite (and x2034 (not x2028)) (x3340 x814) (x2866 x814)) (x3190 x814)))
(assert (= (ite (and x2034 (not x2028)) (x3340 (x2873 15)) (x2866 (x2873 15))) (x3190 (x2873 15))))
(assert (=> (<= (x2827 128) 10000) (= (x1157 (x2827 128)) (x2873 (x2827 128)))))
(assert (= (x3340 x3244) (ite (and x2034 (not x1300)) (x1178 x3244) (x2267 x3244))))
(assert (= (x1739 (x2873 4294967296)) 4294967296))
(assert (= (x3570 x202) (ite (= 640 x202) 2388873442 (x208 x202))))
(assert (= (ite (and x2332 (not x2276)) (x1981 (x2873 37)) (x1538 (x2873 37))) (x2671 (x2873 37))))
(assert (= 0 (x1764 x3105)))
(assert (=> (<= (x2174 128) 10000) (= (x2873 (x2174 128)) (x1157 (x2174 128)))))
(assert (x1480 x127))
(assert (=> (>= 10000 (x3339 128)) (= (x1157 (x3339 128)) (x2873 (x3339 128)))))
(assert (x2739 (x3488 128)))
(assert (= (x1739 (x1844 x3607 6)) (+ 6 (x1739 x3607))))
(assert (x1480 x2855))
(assert (=> (>= 10000 (x2410 160)) (= (x2873 (x2410 160)) (x1157 (x2410 160)))))
(assert (= x662 (and (not x1999) x1847)))
(assert (= (x1895 928) x1139))
(assert (= (x1739 (x1157 (x808 160))) (x808 160)))
(assert (= (ite (= x3114 x3554) x2558 (x1792 x3554)) (x912 x3554)))
(assert (x1480 x383))
(assert (= (+ (x1739 x1333) 6) (x1739 (x1844 x1333 6))))
(assert (= (and x1761 x1568) x2755))
(assert (= (x3059 x3397) (ite (= x3397 704) x241 (x1955 x3397))))
(assert (= (ite (= x2140 x2488) x1719 (x2381 x2488)) (x625 x2488)))
(assert (x2739 (x226 160)))
(assert (= (ite (= x202 256) 274184521717934524641157099916833587200 (x2294 x202)) (x362 x202)))
(assert (= (x3157 x2857) (ite (and x2668 x3717) (x605 x2857) (x1958 x2857))))
(assert (x1480 x2618))
(assert (= (x653 x1209) (ite (and (not x3520) x730) (x3061 x1209) (x2099 x1209))))
(assert (=> (>= 10000 (x228 128)) (= (x1157 (x228 128)) (x2873 (x228 128)))))
(assert (x2739 (x1765 128)))
(assert (= (ite (and (not x3440) (not x2923) x2385) (x268 384) (x2068 384)) (x1520 384)))
(assert (= (x2018 x20) (ite (and (not x2676) x3717) (x2445 x20) (x271 x20))))
(assert (= (x2726 704) (x713 704)))
(assert (x1480 x1418))
(assert (x1480 x1561))
(assert (= (x2191 544) (x808 544)))
(assert (= (ite (and x2661 (not x1907)) (x625 x37) (x2349 x37)) (x926 x37)))
(assert (x1480 x2122))
(assert (=> (>= 10000 (x1766 128)) (= (x1157 (x1766 128)) (x2873 (x1766 128)))))
(assert (= (x116 (x2873 9)) (ite (= (x2873 9) (x2873 41)) x2522 (x3516 (x2873 9)))))
(assert (=> (>= 10000 (x1683 128)) (= (x2873 (x1683 128)) (x1157 (x1683 128)))))
(assert (= (and x2882 x3390) x2959))
(assert (x1480 x2421))
(assert (= (x1239 352) (x3638 352)))
(assert (= (x3398 128) (x1739 (x1157 (x3398 128)))))
(assert (= x126 (and (not x1737) x531)))
(assert (= (x3340 x1364) (ite (and x2034 (not x1300)) (x1178 x1364) (x2267 x1364))))
(assert (= x3709 (and x2924 x75)))
(assert (= (x2508 352) x1537))
(assert (x1480 x2843))
(assert (= (ite (and x3717 (not x112)) (x229 x846) (x3257 x846)) (x2445 x846)))
(assert (= (=> (= x2677 (< 31 x1215)) (and (=> (not x2677) x1698) (=> x2677 x3071))) x3687))
(assert (= x490 x155))
(assert (= (ite (and (not x2028) x2034) (x3340 (x2873 43)) (x2866 (x2873 43))) (x3190 (x2873 43))))
(assert (x1480 x3070))
(assert (= (x1981 (x2873 37)) (ite (= (x2873 37) x3217) x2266 (x3502 (x2873 37)))))
(assert (x1480 x517))
(assert (= (x1014 832) (x3354 832)))
(assert (= (ite (and (not x1900) x3717) (x1154 (x2873 37)) (x2416 (x2873 37))) (x1223 (x2873 37))))
(assert (= (x3721 288) (x3609 288)))
(assert (= (ite (= x2857 448) x1183 (x2374 x2857)) (x214 x2857)))
(assert (= (x1223 x3432) (ite (and x3717 (not x1900)) (x1154 x3432) (x2416 x3432))))
(assert (=> (>= 10000 (x170 160)) (= (x2873 (x170 160)) (x1157 (x170 160)))))
(assert (= (x1605 384) (x1299 384)))
(assert (x2739 (x462 160)))
(assert (= (ite (= x700 x2140) x1719 (x2381 x700)) (x625 x700)))
(assert (= (x1655 832) (x2011 832)))
(assert (x1480 x2527))
(assert (= (x1739 (x1157 (x1474 160))) (x1474 160)))
(assert (= (x3157 x202) (ite (and x2668 x3717) (x605 x202) (x1958 x202))))
(assert (=> (>= 10000 (x3363 160)) (= (x1157 (x3363 160)) (x2873 (x3363 160)))))
(assert (= (x3528 352) (x2800 352)))
(assert (= (x2129 x833) (ite (and (not x1761) x1568) (x116 x833) (x3254 x833))))
(assert (= (x3532 160) (x1739 (x1157 (x3532 160)))))
(assert (= x98 (x1739 (x1157 x98))))
(assert (= (x1502 800) (x348 800)))
(assert (= (ite (and (not x3564) x1835) (x1154 x3542) (x2777 x3542)) (x1089 x3542)))
(assert (= (ite (= x3472 288) x2720 (x1017 x3472)) (x3064 x3472)))
(assert (x1480 x210))
(assert (= (x1763 224) (x2891 224)))
(assert (x2739 (x1015 160)))
(assert (x1480 x589))
(assert (= (x1765 128) (x1739 (x1157 (x1765 128)))))
(assert (= (+ 7 (x1739 x3557)) (x1739 (x1844 x3557 7))))
(assert (x1480 x3496))
(assert (x1480 x2457))
(assert (=> (>= 10000 (x708 160)) (= (x2873 (x708 160)) (x1157 (x708 160)))))
(assert (= (x3404 x1329) (ite (= x1329 832) x1850 (x3394 x1329))))
(assert (= x3707 (or x1236 (and x832 x3729))))
(assert (x2739 (x82 128)))
(assert (x1480 x2638))
(assert (x2739 (x1683 160)))
(assert (= (x2854 384) (x2808 384)))
(assert (x1480 x3441))
(assert (= (ite (and (not x1907) x2661) (x625 x3244) (x2349 x3244)) (x926 x3244)))
(assert (x1480 x1205))
(assert (= (x1904 896) (x1661 896)))
(assert (x1480 x132))
(assert (= (ite (= x2927 x2140) x1719 (x2381 x2927)) (x625 x2927)))
(assert (x1480 x3094))
(assert (= (x3340 x796) (ite (and x2034 (not x1300)) (x1178 x796) (x2267 x796))))
(assert (= (x1739 (x1157 (x1701 160))) (x1701 160)))
(assert (= (x448 800) (x1696 800)))
(assert (x1480 x1537))
(assert (= (x1739 (x1157 (x2884 160))) (x2884 160)))
(assert (x1480 x753))
(assert (x1480 x3097))
(assert (= (ite (and (not x1942) x841 x3581) (x3059 704) (x3716 704)) (x1140 704)))
(assert (x2739 (x318 160)))
(assert (x1480 x1501))
(assert (= (x3340 x862) (ite (and (not x1300) x2034) (x1178 x862) (x2267 x862))))
(assert (= (ite (and x3717 (not x1900)) (x1154 x1082) (x2416 x1082)) (x1223 x1082)))
(assert (x1480 x2903))
(assert (= x2924 (and (not x2784) x78)))
(assert (= x1713 (=> (and (= (x116 x700) x1269) (= x600 (x868 (x1157 (x170 128)) (x1157 (x170 160)) 0)) (= (x1181 224) x3552) (= (x170 320) x1726) (= x700 (x1844 x600 2)) (= (> x1726 x1269) x409)) (and (=> x409 x1698) (=> (not x409) x2542)))))
(assert (= (ite (= x3105 288) x1850 (x1299 x3105)) (x1605 x3105)))
(assert (= 7 (x3488 128)))
(assert (= (ite (and x1568 (not x1761)) (x116 x1727) (x3254 x1727)) (x2129 x1727)))
(assert (= (and x2093 x1228) x2047))
(assert (= (x3190 x2669) (ite (and x2034 (not x2028)) (x3340 x2669) (x2866 x2669))))
(assert (= (x1739 (x1157 (x3600 128))) (x3600 128)))
(assert (x1480 x3696))
(assert (= (ite (= 1152 x753) x3220 (x1881 x753)) (x1302 x753)))
(assert (= (x1089 (x2873 39)) (ite (and x1835 (not x3564)) (x1154 (x2873 39)) (x2777 (x2873 39)))))
(assert (= (ite (= x278 x2328) x1240 (x639 x278)) (x229 x278)))
(assert (= (ite (= x886 x2140) x1719 (x2381 x886)) (x625 x886)))
(assert (x1480 x3472))
(assert (= (x2780 384) (x2277 384)))
(assert (x1480 x156))
(assert (= (x976 224) (x2737 224)))
(assert (= (x2856 x772) (ite (= x772 128) 16 (x437 x772))))
(assert (x1480 x1581))
(assert (x1480 x3220))
(assert (x1480 x344))
(assert (x1480 x1126))
(assert (= (x516 192) 0))
(assert (x1480 x54))
(assert (= (x1089 x278) (ite (and x1835 (not x3564)) (x1154 x278) (x2777 x278))))
(assert (=> (>= 10000 (x2193 128)) (= (x1157 (x2193 128)) (x2873 (x2193 128)))))
(assert (= (x926 x429) (ite (and x2661 (not x1907)) (x625 x429) (x2349 x429))))
(assert (= (x808 128) 16))
(assert (= (x1223 x1138) (ite (and (not x1900) x3717) (x1154 x1138) (x2416 x1138))))
(assert (x1480 x1869))
(assert (x2739 (x3719 160)))
(assert (x1480 x2841))
(assert (=> (<= (x505 160) 10000) (= (x1157 (x505 160)) (x2873 (x505 160)))))
(assert (x1480 x1179))
(assert (= (x2045 512) (x651 512)))
(assert (= x258 (or (and x236 x882) x396)))
(assert (= (x1739 (x2873 3613687827)) 3613687827))
(assert (= (x1580 x848) (ite (= 192 x848) 0 (x14 x848))))
(assert (= (and (not x2514) x1992) x1354))
(assert (= (x1580 384) (x14 384)))
(assert (x1480 x98))
(assert (= (ite (= x429 x3102) x1095 (x578 x429)) (x1178 x429)))
(assert (= (x522 288) (x2765 288)))
(assert (= (x926 x814) (ite (and (not x1907) x2661) (x625 x814) (x2349 x814))))
(assert (=> (>= 10000 (x119 160)) (= (x2873 (x119 160)) (x1157 (x119 160)))))
(assert (= (x1739 (x1844 x1560 2)) (+ (x1739 x1560) 2)))
(assert (x2739 (x1766 128)))
(assert (= (x1089 (x2873 9)) (ite (and (not x3564) x1835) (x1154 (x2873 9)) (x2777 (x2873 9)))))
(assert (x1480 x1759))
(assert (x1480 x1262))
(assert (= (x625 x2437) (ite (= x2437 x2140) x1719 (x2381 x2437))))
(assert (x2739 (x1744 128)))
(assert (x1480 x983))
(assert (x1480 x1601))
(assert (= x2925 (=> (and (= (x653 (x2873 45)) x3155) (= x3307 (= x1787 x2289)) (= x1787 (x3609 x1319)) (= x3471 (x868 (x1157 (x3549 128)) (x1157 (x3549 160)) 0)) (= x1319 (x2455 (+ x2242 352))) (= x2242 (mod (* 32 x3053) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x653 x3471) x2974) (= x3053 (x3609 192)) (= (x3609 256) x2289)) (and (=> (not x3307) x3304) (=> x3307 x1848)))))
(assert (= (x1739 (x2873 3092021830)) 3092021830))
(assert (= (x1739 (x1157 (x915 160))) (x915 160)))
(assert (= (x229 x2763) (ite (= x2763 x2328) x1240 (x639 x2763))))
(assert (= (x1770 352) (x2911 352)))
(assert (= (x1089 x136) (ite (and x1835 (not x3564)) (x1154 x136) (x2777 x136))))
(assert (x1480 x2997))
(assert (x1480 x428))
(assert (= (x1921 x2857) (ite (= x2857 864) x2843 (x1153 x2857))))
(assert (x1480 x1238))
(assert (= (x2143 192) x545))
(assert (= (+ 6 (x1739 x3255)) (x1739 (x1844 x3255 6))))
(assert (= (x3340 (x2873 43)) (ite (and x2034 (not x1300)) (x1178 (x2873 43)) (x2267 (x2873 43)))))
(assert (= (ite (and (not x2676) x3717) (x2445 x136) (x271 x136)) (x2018 x136)))
(assert (=> (>= 10000 (x2884 160)) (= (x2873 (x2884 160)) (x1157 (x2884 160)))))
(assert (= (ite (and x2034 (not x1300)) (x1178 x3416) (x2267 x3416)) (x3340 x3416)))
(assert (= (x3418 128) (x1739 (x1157 (x3418 128)))))
(assert (x2739 (x1036 128)))
(assert (= (x516 224) (x2222 224)))
(assert (= (x1921 x848) (ite (= x848 864) x2843 (x1153 x848))))
(assert (= (x1383 640) (x1641 640)))
(assert (= (x2410 384) (x2002 384)))
(assert (x1480 x599))
(assert (x1480 x2966))
(assert (x2739 (x2884 128)))
(assert (= (ite (= x3699 x2140) x1719 (x2381 x3699)) (x625 x3699)))
(assert (=> (>= 10000 (x2491 160)) (= (x1157 (x2491 160)) (x2873 (x2491 160)))))
(assert (x1480 x3211))
(assert (= (x1170 256) (x1378 256)))
(assert (= (x781 832) (x2347 832)))
(assert (= (ite (and (not x1907) x2661) (x625 x1071) (x2349 x1071)) (x926 x1071)))
(assert (= (x1157 599290589) (x2873 599290589)))
(assert (= (and x1010 (not x1296)) x2334))
(assert (x1480 x1862))
(assert (= x1879 (x1661 640)))
(assert (x1480 x973))
(assert (=> (>= 10000 (x1148 160)) (= (x1157 (x1148 160)) (x2873 (x1148 160)))))
(assert (x1480 x3000))
(assert (x1480 x642))
(assert (x1480 x269))
(assert (= (or (and x419 x3660) x126) x1475))
(assert (= (x912 x340) (ite (= x340 x3114) x2558 (x1792 x340))))
(assert (= (x1223 x833) (ite (and (not x1900) x3717) (x1154 x833) (x2416 x833))))
(assert (= (x413 288) (x3609 288)))
(assert (x2739 (x2056 128)))
(assert (x1480 x3271))
(assert (= (x1387 x772) (ite (= 448 x772) x964 (x977 x772))))
(assert (=> (>= 10000 (x462 128)) (= (x2873 (x462 128)) (x1157 (x462 128)))))
(assert (= (and x2086 (not x111)) x47))
(assert (= (x2875 896) (x509 896)))
(assert (= (x1739 (x1157 (x664 160))) (x664 160)))
(assert (x1480 x2495))
(assert (x1480 x2380))
(assert (= (x1739 (x2873 2087341860)) 2087341860))
(assert (x2739 (x1044 160)))
(assert (= (x2744 320) (x1553 320)))
(assert (= (x462 128) (x1739 (x1157 (x462 128)))))
(assert (x1480 x724))
(assert (x2739 (x2806 128)))
(assert (= (=> (= (> x156 0) x1228) (and (=> (not x1228) x1698) (=> x1228 x3305))) x1871))
(assert (x1480 x3282))
(assert (x1480 x570))
(assert (= (x3407 896) (x2689 896)))
(assert (=> (>= 10000 (x3634 160)) (= (x2873 (x3634 160)) (x1157 (x3634 160)))))
(assert (x1480 x3654))
(assert (x1480 x1432))
(assert (x1480 x2254))
(assert (x1480 x3530))
(assert (= (x1739 (x1157 (x526 128))) (x526 128)))
(assert (= (x1739 (x1157 (x3532 128))) (x3532 128)))
(assert (= x1672 x1848))
(assert (x1480 x2419))
(assert (=> (>= 10000 (x3372 160)) (= (x1157 (x3372 160)) (x2873 (x3372 160)))))
(assert (x1480 x2809))
(assert (x1480 x1329))
(assert (x1480 x313))
(assert (x1480 x711))
(assert (x1480 x407))
(assert (x1480 x3731))
(assert (x1480 x1060))
(assert (=> (<= (x740 160) 10000) (= (x1157 (x740 160)) (x2873 (x740 160)))))
(assert (=> (>= 10000 (x1744 160)) (= (x1157 (x1744 160)) (x2873 (x1744 160)))))
(assert (= (x1739 (x1157 (x228 128))) (x228 128)))
(assert (= (x1739 (x1844 x245 7)) (+ 7 (x1739 x245))))
(assert (= (x1789 320) (x672 320)))
(assert (= 16 (x1770 128)))
(assert (x2739 (x1883 160)))
(assert (= 629314576 (x1739 (x2873 629314576))))
(assert (= (x3213 864) (x505 864)))
(assert (= (x288 320) (x1159 320)))
(assert (= (ite (and x1568 (not x1761)) (x116 (x2873 43)) (x3254 (x2873 43))) (x2129 (x2873 43))))
(assert (= (x268 704) x3683))
(assert (= (ite (and x3717 (not x1900)) (x1154 x1540) (x2416 x1540)) (x1223 x1540)))
(assert (= (x1739 (x1157 (x1017 128))) (x1017 128)))
(assert (= (x1489 320) (ite (and x3577 x3717 (not x1753)) (x1485 320) (x288 320))))
(assert (= (ite (= x2328 (x2873 43)) x1240 (x639 (x2873 43))) (x229 (x2873 43))))
(assert (= 1888058147 (x1739 (x2873 1888058147))))
(assert (= (=> (= x345 (x1529 704)) x297) x1872))
(assert (= (ite (= 1152 x848) x2403 (x2166 x848)) (x3134 x848)))
(assert (= x1010 (and x1107 (not x467))))
(assert (x1480 x765))
(assert (=> (<= (x1036 128) 10000) (= (x2873 (x1036 128)) (x1157 (x1036 128)))))
(assert (= (+ 6 (x1739 x1549)) (x1739 (x1844 x1549 6))))
(assert (= (x3634 256) (x992 256)))
(assert (x1480 x1565))
(assert (x2739 (x3532 160)))
(assert (= (x947 x3105) (ite (= x3105 864) x2382 (x901 x3105))))
(assert (= (x461 224) (x516 224)))
(assert (= x1135 (and x2709 x1801)))
(assert (x1480 x590))
(assert (= (x625 x3217) (ite (= x2140 x3217) x1719 (x2381 x3217))))
(assert (= (x3565 x1209) (ite (and (not x2709) x1801) (x2671 x1209) (x2773 x1209))))
(assert (= (x3340 (x2873 40)) (ite (and (not x1300) x2034) (x1178 (x2873 40)) (x2267 (x2873 40)))))
(assert (= (x2277 864) (x2780 864)))
(assert (x1480 x1257))
(assert (= (ite (= (x2873 41) x3102) x1095 (x578 (x2873 41))) (x1178 (x2873 41))))
(assert (= (x3689 640) (x1227 640)))
(assert (x1480 x2067))
(assert (= x2954 (and x125 x2612)))
(assert (=> (>= 10000 (x321 160)) (= (x2873 (x321 160)) (x1157 (x321 160)))))
(assert (= (x1489 x848) (ite (and x3717 (not x1753) x3577) (x1485 x848) (x288 x848))))
(assert (= (x268 352) (x2831 352)))
(assert (= (x1739 (x1844 x1145 6)) (+ (x1739 x1145) 6)))
(assert (= (x288 x202) (ite (= 832 x202) x956 (x1159 x202))))
(assert (= (x2445 (x2873 43)) (ite (and x3717 (not x112)) (x229 (x2873 43)) (x3257 (x2873 43)))))
(assert (= (x3243 128) (x1739 (x1157 (x3243 128)))))
(assert (x1480 x1166))
(assert (= (x912 x2328) (ite (= x3114 x2328) x2558 (x1792 x2328))))
(assert (= (x3638 x1319) (ite (= 736 x1319) x975 (x1239 x1319))))
(assert (x1480 x1))
(assert (x1480 x946))
(assert (= (x1924 160) (x1712 160)))
(assert (x1480 x563))
(assert (x1480 x2241))
(assert (= (x1895 800) (x1195 800)))
(assert (x1480 x149))
(assert (= (x1739 (x1157 (x208 160))) (x208 160)))
(assert (= (x591 352) (x2727 352)))
(assert (x1480 x2904))
(assert (= (x736 512) (x3313 512)))
(assert (= (x967 352) (x1213 352)))
(assert (x1480 x699))
(assert (x1480 x1499))
(assert (= x531 (and x3660 (not x419))))
(assert (= (x3190 x1449) (ite (and (not x2028) x2034) (x3340 x1449) (x2866 x1449))))
(assert (x2739 x2083))
(assert (x1480 x3692))
(assert (x1480 x635))
(assert (= (x413 704) (x3609 704)))
(assert (= (x2737 288) (x976 288)))
(assert (x2739 (x2625 160)))
(assert (= (x660 352) (ite (and x3562 x438 (not x1629)) (x2991 352) (x543 352))))
(assert (= (ite (and x3717 (not x112)) (x229 x3554) (x3257 x3554)) (x2445 x3554)))
(assert (= x745 (x3110 512)))
(assert (x1480 x2338))
(assert (= (x116 x1714) (ite (= x1714 (x2873 41)) x2522 (x3516 x1714))))
(assert (x1480 x2383))
(assert (= (x2195 x753) (ite (= 288 x753) x2464 (x100 x753))))
(assert (=> (<= (x3055 128) 10000) (= (x2873 (x3055 128)) (x1157 (x3055 128)))))
(assert (= (ite (= x3416 x1727) x2963 (x3316 x3416)) (x3061 x3416)))
(assert (= (x1739 (x1844 x1336 8)) (+ (x1739 x1336) 8)))
(assert (= (x1227 320) (x3689 320)))
(assert (= (x1739 (x1157 (x708 128))) (x708 128)))
(assert (= (x522 192) 0))
(assert (= (x3452 384) (x2700 384)))
(assert (x1480 x3025))
(assert (= (x3340 x2437) (ite (and (not x1300) x2034) (x1178 x2437) (x2267 x2437))))
(assert (x1480 x1434))
(assert (= (x1252 800) (x3679 800)))
(assert (= (ite (and x2211 x1835 (not x984)) (x2105 800) (x3404 800)) (x3013 800)))
(assert (= (=> (and (= (= x3358 x856) x3420) (= (x3721 192) x722) (= (x2455 (+ 352 x293)) x3105) (= (mod (* 32 x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x293) (= x856 (x3721 x3105)) (= (x3721 256) x3358)) (and x1848 x3420)) x2309))
(assert (= 274184521717934524641157099916833587200 (x1739 (x2873 274184521717934524641157099916833587200))))
(assert (=> (<= x1119 10000) (= (x1157 x1119) (x2873 x1119))))
(assert (x1480 x2731))
(assert (= x3094 (x3153 224)))
(assert (x1480 x835))
(assert (= (x1582 448) (x1642 448)))
(assert (= (x1089 (x2873 40)) (ite (and x1835 (not x3564)) (x1154 (x2873 40)) (x2777 (x2873 40)))))
(assert (= (x1739 (x1844 x2933 2)) (+ 2 (x1739 x2933))))
(assert (= (x3418 160) (x1739 (x1157 (x3418 160)))))
(assert (x1480 x2188))
(assert (= (x3609 704) (x3721 704)))
(assert (= (and x1909 x372) x2268))
(assert (x1480 x3047))
(assert (x2739 (x2174 160)))
(assert (x1480 x3345))
(assert (x1480 x85))
(assert (= (ite (= x1449 x2140) x1719 (x2381 x1449)) (x625 x1449)))
(assert (= (x2873 2835717307) (x1157 2835717307)))
(assert (= (ite (and (not x1300) x2034) (x1178 x176) (x2267 x176)) (x3340 x176)))
(assert (x1480 x1743))
(assert (x1480 x1340))
(assert (= (x116 x2437) (ite (= (x2873 41) x2437) x2522 (x3516 x2437))))
(assert (= (x1195 832) (x1895 832)))
(assert (= (x1739 (x1844 x914 8)) (+ (x1739 x914) 8)))
(assert (x1480 x464))
(assert (=> (<= (x3301 128) 10000) (= (x2873 (x3301 128)) (x1157 (x3301 128)))))
(assert (= (x2808 320) (x2854 320)))
(assert (= (x1739 (x1844 x1005 6)) (+ 6 (x1739 x1005))))
(assert (= (x2780 288) (x2277 288)))
(assert (= (x2505 320) (x3301 320)))
(assert (x1480 x3667))
(assert (x2739 (x808 160)))
(assert (x1480 x1914))
(assert (= (=> (and (= x3553 (or x1674 x315)) (= x315 (= 0 x823)) (= x3085 (x2129 (x2873 47))) (= (div x2610 10000) x1826) (= (mod (* x823 x3085) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2753) (= x1674 (= x3085 x2816)) (= x2816 (div x2753 x823)) (= x823 (x3065 544)) (= x2567 (= (ite x3553 1 0) 0))) (and (=> (not x2567) x1615) (=> x2567 x1698))) x469))
(assert (= (=> (and (= (x2455 (+ x3025 x1001)) x1627) (= (< x1627 x1001) x2923) (= x3025 (x2831 608)) (= (x2455 (+ x304 x2162)) x1001)) (and (=> x2923 x1698) (=> (and (= x2867 (x268 704)) (not x2923) (or (and (= x786 (x268 544)) x3440) (not x3440)) (= x3317 (x268 544)) (= (x2455 (+ x3025 x1001)) x3683) (= (> x2867 x3317) x3440)) x2992))) x312))
(assert (x2739 (x2387 128)))
(assert (x1480 x3287))
(assert (= (x1915 320) (x3178 320)))
(assert (= (x625 x1599) (ite (= x2140 x1599) x1719 (x2381 x1599))))
(assert (x2739 (x3532 128)))
(assert (x1480 x3158))
(assert (= (ite (= x1329 256) 274184521717934524641157099916833587200 (x1747 x1329)) (x1833 x1329)))
(assert (x1480 x3273))
(assert (= x709 (and x1034 (not x3476))))
(assert (= (x1157 356263876) (x2873 356263876)))
(assert (x1480 x2372))
(assert (= (x3339 128) (x1739 (x1157 (x3339 128)))))
(assert (x1480 x272))
(assert (= (x2700 832) (x3452 832)))
(assert (= (x3340 x1727) (ite (and (not x1300) x2034) (x1178 x1727) (x2267 x1727))))
(assert (= (x651 x3105) (ite (= 448 x3105) x148 (x2045 x3105))))
(assert (= (x653 x1082) (ite (and (not x3520) x730) (x3061 x1082) (x2099 x1082))))
(assert (= (x1486 352) (x1958 352)))
(assert (= (and x882 (not x236)) x1746))
(assert (x1480 x2247))
(assert (x2739 (x2744 128)))
(assert (= x1847 (and x630 (not x3624))))
(assert (x1480 x2049))
(assert (x1480 x3722))
(assert (= (x1015 512) (x1859 512)))
(assert (= (ite (and x3717 (not x1753) x3577) (x1485 x930) (x288 x930)) (x1489 x930)))
(assert (= (x1770 x3397) (ite (= x3397 128) 16 (x2911 x3397))))
(assert (= (x2329 352) (x1024 352)))
(assert (= (=> (and (= x50 (mod (* x935 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3410 (x2455 (+ x3673 x29))) (= (= (ite x1146 1 0) 0) x2998) (= x1132 (= x701 x1841)) (= x701 (x1510 352)) (= x1841 (div x50 x935)) (= x1146 (or x3380 x1132)) (= (= 0 x935) x3380)) (and (=> (not x2998) x652) (=> x2998 x1698))) x1654))
(assert (x1480 x3342))
(assert (x1480 x1163))
(assert (x1480 x2957))
(assert (= (x1387 704) (x977 704)))
(assert (= (x288 x930) (ite (= x930 832) x956 (x1159 x930))))
(assert (x1480 x1762))
(assert (= (=> (and (= x2476 (< x3274 x390)) (= x3274 (x2455 (+ x390 x1190))) (= x3244 (x868 (x1157 (x107 128)) (x1157 (x107 160)) 0)) (= x390 (x152 x3244)) (= (x107 288) x1190) (= x1490 (x737 (- x937 x328))) (= x3089 (x373 256))) (and (=> (and (= (x2455 (+ x1190 x390)) x3044) (not x2476) (= (x107 288) x3667)) x1165) (=> x2476 x1698))) x242))
(assert (x1480 x2704))
(assert (x1480 x368))
(assert (= (x1739 (x1157 (x208 128))) (x208 128)))
(assert (= (x3007 704) (x174 704)))
(assert (x1480 x1452))
(assert (x2739 (x1626 160)))
(assert (= (x1701 480) (x2747 480)))
(assert (= (ite (and (not x1753) x3717 x3577) (x1485 352) (x288 352)) (x1489 352)))
(assert (x1480 x3427))
(assert (= (and (not x2725) x3464) x730))
(assert (x2739 (x826 160)))
(assert (x1480 x2131))
(assert (= (x2806 800) (x3110 800)))
(assert (x1480 x3430))
(assert (x1480 x2598))
(assert (= (x2743 256) (x2163 256)))
(assert (x1480 x2952))
(assert (x1480 x3159))
(assert (= (x2440 576) x1430))
(assert (= (x2180 160) (x1739 (x1157 (x2180 160)))))
(assert (= x1451 (and x3700 (not x2283))))
(assert (= (x119 128) (x1739 (x1157 (x119 128)))))
(assert (x2739 (x1474 160)))
(assert (x2739 (x1216 128)))
(assert (x1480 x2278))
(assert (x1480 x499))
(assert (= (x2505 352) (x3301 352)))
(assert (= (x2296 352) (x529 352)))
(assert (= (ite (= 192 x3105) x3576 (x2743 x3105)) (x2163 x3105)))
(assert (= 7 (x228 128)))
(assert (x1480 x2206))
(assert (x1480 x1799))
(assert (x1480 x2422))
(assert (x1480 x3152))
(assert (x1480 x2799))
(assert (=> (<= (x1469 160) 10000) (= (x2873 (x1469 160)) (x1157 (x1469 160)))))
(assert (x2739 (x3634 160)))
(assert (x1480 x784))
(assert (= (+ (x1739 x3036) 8) (x1739 (x1844 x3036 8))))
(assert (= (x625 (x2873 46)) (ite (= (x2873 46) x2140) x1719 (x2381 (x2873 46)))))
(assert (x1480 x3636))
(assert (x1480 x885))
(assert (= (x3190 x176) (ite (and (not x2028) x2034) (x3340 x176) (x2866 x176))))
(assert (= (x386 256) (x1580 256)))
(assert (x1480 x81))
(assert (= (ite (and x1835 (not x3564)) (x1154 (x2873 37)) (x2777 (x2873 37))) (x1089 (x2873 37))))
(assert (= (x2856 160) (x437 160)))
(assert (x1480 x994))
(assert (x1480 x3674))
(assert (x1480 x1575))
(assert (= (x625 x1670) (ite (= x1670 x2140) x1719 (x2381 x1670))))
(assert (= x757 (or (and x3088 x1821) (and x2093 (not x1228)) (and x1579 x3140) (and x3034 x255) (and x1445 x1354) (and (not x452) x47) (and x1637 (not x2677)) (and x409 x2651) (and x2283 x3700) (and x1898 x1412) (and (not x1069) x2934) (and x3294 x445) (and x1135 x2861) (and x392 x49) (and x3121 x3713) (and x1539 x1604) (and x1586 (not x2905)) (and (not x3644) x1906) (and x794 x1491) (and x966 x2365) (and x111 x2086) (and x776 x863) (and x3464 x2725) (and x5 x2979) (and x67 x1993) (and x463 x243) (and x1042 x2750) (and x709 x1182) (and x2918 x2954) (and x1107 x467) (and x3608 (not x182)) (and (not x471) x3598) (and x2844 (not x527)) (and x125 (not x2612)) (and x1363 x2986) (and x167 x1194) (and x3737 x3332) (and x41 x3027) (and x1756 x1031) (and x3715 x853) (and x1938 x1290) (and x261 x122) (and x1465 (not x1096)) (and x2281 x2334) (and (not x3466) x1099) (and x306 x451) (and x3444 x842) (and (not x289) x2721) (and x3573 x3423) (and x199 x719) (and x1827 (not x1352)) (and x1386 x2518) (and x2385 x2923) (and x3587 x568) (and x3208 x1685) (and x896 x64) (and x506 x3343) (and x329 x3278) (and x1730 (not x2366)) (and x1528 x1156) (and x3709 x2687) (and x2361 x3258) (and x2066 (not x1411)) (and x3066 x2998) (and x2784 x78) (and x2514 x1992) (and (not x515) x358) (and x296 x1310) (and (not x2766) x2386) (and x1296 x1010) (and x2047 (not x929)) (and x1738 x2567) (and (not x3725) x1212) (and x838 x317) (and x1225 x2517) (and x1174 x3322) (and x2879 x2994) (and x93 x551) (and x1968 (not x3546)) (and x2622 x607) (and x2673 (not x246)) (and x2555 x2080) (and x2463 x3288) (and x1819 x2756) (and x48 x1202) (and (not x2707) x621) (and x3426 x2142) (and x3385 x2959) (and x657 x2755) (and (not x557) x2877) (and x1526 x2476) (and (not x3072) x2515) (and x1507 (not x61)) (and x989 x434))))
(assert (x1480 x1532))
(assert (x1480 x3133))
(assert (= (x3689 352) (x1227 352)))
(assert (=> (>= 10000 (x107 128)) (= (x2873 (x107 128)) (x1157 (x107 128)))))
(assert (= (ite (= x2140 x2331) x1719 (x2381 x2331)) (x625 x2331)))
(assert (= (x3353 288) x1850))
(assert (x1480 x3053))
(assert (x1480 x1193))
(assert (x1480 x3576))
(assert (= (and x1267 x3030) x882))
(assert (x2739 (x2335 160)))
(assert (x1480 x2767))
(assert (= (ite (and (not x1907) x2661) (x625 x2815) (x2349 x2815)) (x926 x2815)))
(assert (= (x35 320) (x1311 320)))
(assert (x1480 x523))
(assert (x1480 x2545))
(assert (=> (>= 10000 x3146) (= (x1157 x3146) (x2873 x3146))))
(assert (= (x3721 x3105) (ite (= x3105 192) x532 (x3609 x3105))))
(assert (= (x3570 352) (x208 352)))
(assert (= (x2703 x3472) (ite (= 832 x3472) x1850 (x2406 x3472))))
(assert (= (and x1968 x3546) x2721))
(assert (x1480 x1127))
(assert (x1480 x2643))
(assert (= (ite (and x2034 (not x1300)) (x1178 x1082) (x2267 x1082)) (x3340 x1082)))
(assert (= (x1089 (x2873 46)) (ite (and x1835 (not x3564)) (x1154 (x2873 46)) (x2777 (x2873 46)))))
(assert (= x2979 (and x2276 x2332)))
(assert (= (x3330 128) (x1739 (x1157 (x3330 128)))))
(assert (= x138 (=> (and (= (x737 (- x493 x2422)) x1754) (= x1898 (= 0 x3252)) (= x3252 (x2735 480))) (and (=> x1898 x1698) (=> (and (not x1898) (= (div x1137 x3252) x3344)) x323)))))
(assert (= (x1739 (x1157 (x3511 160))) (x3511 160)))
(assert (= (x3022 224) (x1483 224)))
(assert (= (ite (and x2661 (not x1907)) (x625 x1020) (x2349 x1020)) (x926 x1020)))
(assert (= (x3301 x848) (ite (= x848 128) 16 (x2505 x848))))
(assert (= (x1243 256) (x3401 256)))
(assert (x1480 x3194))
(assert (x1480 x1547))
(assert (x1480 x1337))
(assert (x1480 x3026))
(assert (= (+ (x1739 x987) 2) (x1739 (x1844 x987 2))))
(assert (= (x2875 832) (x509 832)))
(assert (= (x522 352) (x2765 352)))
(assert (= x2097 (=> (and (= x2256 (x1181 320)) (= (ite (< x3614 x2053) x3614 x2053) x2855) (= x2053 (div x3334 x1257)) (= x1724 (= x2256 0)) (= x814 (x1844 x1922 2)) (= (x3064 224) x1048) (= x1922 (x868 (x1157 (x1474 128)) (x1157 (x1474 160)) 0)) (= (x116 x814) x3614)) (and (=> x1724 x1070) (=> (not x1724) x1713)))))
(assert (x1480 x1289))
(assert (x1480 x1086))
(assert (= (x3230 x2857) 0))
(assert (x1480 x2255))
(assert (= (x1596 352) (x321 352)))
(assert (= (x3251 832) (x2440 832)))
(assert (x1480 x3364))
(assert (x1480 x2557))
(assert (x2739 (x1744 160)))
(assert (= (ite (and x1801 (not x2709)) (x2671 (x2873 41)) (x2773 (x2873 41))) (x3565 (x2873 41))))
(assert (= (x1106 384) (x3029 384)))
(assert (x1480 x3486))
(assert (x1480 x831))
(assert (= (x1699 800) (x2180 800)))
(assert (= (x1739 (x1157 (x708 160))) (x708 160)))
(assert (x1480 x958))
(assert (= (ite (= (x2873 41) x733) x2522 (x3516 x733)) (x116 x733)))
(assert (x1480 x2522))
(assert (x1480 x1150))
(assert (= (ite (= x2328 x20) x1240 (x639 x20)) (x229 x20)))
(assert (x1480 x502))
(assert (= (x1157 31556952) (x2873 31556952)))
(assert (= 16 (x2249 128)))
(assert (x1480 x1874))
(assert (= x3490 (=> (and (= x2882 (< x2920 x1254)) (= x2920 (x2875 832)) (= x1254 (x2875 928))) (and (=> x2882 x562) (=> (not x2882) x2509)))))
(assert (= (x268 x1319) (ite (= 704 x1319) x3683 (x2831 x1319))))
(assert (= (x1223 x1599) (ite (and (not x1900) x3717) (x1154 x1599) (x2416 x1599))))
(assert (x1480 x2341))
(assert (x1480 x2770))
(assert (= (x522 224) (x2765 224)))
(assert (= (ite (and (not x1934) x3300) (x912 (x2873 41)) (x3198 (x2873 41))) (x824 (x2873 41))))
(assert (= (and x3256 x3468) x2661))
(assert (x1480 x68))
(assert (x1480 x1295))
(assert (x1480 x477))
(assert (= (x3354 384) (x1014 384)))
(assert (= x2000 x2093))
(assert (= (x1739 (x2873 3184006219)) 3184006219))
(assert (x1480 x3))
(assert (x1480 x2300))
(assert (= (x1739 (x1157 (x1766 128))) (x1766 128)))
(assert (= (x116 (x2873 41)) x2522))
(assert (= (ite (= x772 704) x241 (x1955 x772)) (x3059 x772)))
(assert (= 1854955031 (x1739 (x2873 1854955031))))
(assert (=> (<= (x3007 128) 10000) (= (x1157 (x3007 128)) (x2873 (x3007 128)))))
(assert (= (x2347 224) (x781 224)))
(assert (= (x3726 640) (x3037 640)))
(assert (= (x812 320) (x623 320)))
(assert (x1480 x2001))
(assert (x1480 x2449))
(assert (x1480 x2886))
(assert (= (x1268 640) (x333 640)))
(assert (x1480 x1108))
(assert (= x1637 (and x1730 x2366)))
(assert (x1480 x498))
(assert (= (ite (and (not x3564) x1835) (x1154 x1078) (x2777 x1078)) (x1089 x1078)))
(assert (= x3587 (and x2463 (not x3288))))
(assert (x2739 (x3511 160)))
(assert (=> (<= (x2056 160) 10000) (= (x2873 (x2056 160)) (x1157 (x2056 160)))))
(assert (x1480 x3605))
(assert (= (ite (= x2328 x136) x1240 (x639 x136)) (x229 x136)))
(assert (x1480 x121))
(assert (= (ite (and (not x1900) x3717) (x1154 x3641) (x2416 x3641)) (x1223 x3641)))
(assert (= (x3190 (x2873 10)) (ite (and x2034 (not x2028)) (x3340 (x2873 10)) (x2866 (x2873 10)))))
(assert (x2739 (x2057 160)))
(assert (= (ite (and x3717 (not x1900)) (x1154 x886) (x2416 x886)) (x1223 x886)))
(assert (x1480 x3357))
(assert (= (x1739 (x2873 2316151882)) 2316151882))
(assert (= (x3353 800) (x1216 800)))
(assert (= (x3013 320) (ite (and x2211 (not x984) x1835) (x2105 320) (x3404 320))))
(assert (= (x116 x1449) (ite (= x1449 (x2873 41)) x2522 (x3516 x1449))))
(assert (x1480 x3188))
(assert (= (=> (and (= x1436 x1276) (= x2288 (x2689 224)) (not (> x3173 x2301)) (= (> x1431 0) x2668) (= (not x2146) x2510) (= x576 (x868 (x1157 (x1036 128)) (x1157 (x1036 160)) 0)) (not (= x3060 3184006219)) (or (and (= x3210 (x1844 x986 6)) x1900 (= (x2648 256) x1984) (= x2850 (x2648 224)) (= (x2455 (+ x887 x1984)) x3556) (= x986 (x868 (x1157 (x2174 128)) (x1157 (x2174 160)) 0)) (= (x868 (x1157 (x3634 128)) (x1157 (x3634 160)) 0) x1867) (= (x737 (- x1936 x3365)) x2168) (= x1336 (x868 (x1157 (x2648 128)) (x1157 (x2648 160)) 0)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1984 x887))) (= x3365 (x2174 256)) (= x1936 (x1407 (x2873 40))) (= (x2648 288) x3640) (= x2395 (x939 224)) (= (x2648 256) x3207) (= x339 (x1154 (x2873 39))) (= (x1154 x2880) x2460) (= (x992 288) x924) (not (< x924 x3659)) (= x2880 (x1844 x1867 6)) (= x3659 (x992 256)) (not (> x3365 x1936)) (= x2443 (x737 (- x3640 x3207))) (= (= 0 x339) x2787) (not (< x3640 x3207)) (= x3006 (x1090 224)) (= x484 (x1844 x1336 8)) (or (and (= (= x1219 0) x2609) (not (= x804 0)) (= (or x1417 x2085) x1371) (or (and (= x563 (x165 224)) (not (< x2528 x3625)) (= x2528 (x231 (x2873 39))) (= (x192 320) x3625) (= x1877 (x1154 x292)) (= (x1844 x3745 2) x292) (= (x192 320) x517) (= (x737 (- x2528 x3625)) x1928) (not (< x1877 x517)) (not x2609) (= (x737 (- x1877 x517)) x2299) (= (x868 (x1157 (x192 128)) (x1157 (x192 160)) 0) x3745)) x2609) (= x2326 (x992 224)) (= (ite (> x3169 x910) x910 x3169) x900) (= (div x741 x44) x203) (= x2085 (= x203 x3499)) (= (mod (* x3499 x44) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x741) (= x44 (x992 256)) (= x2355 (x1154 (x2873 40))) (= x2566 (x1844 x3738 2)) (= (x1154 (x2873 39)) x3499) (= (x868 (x1157 (x664 128)) (x1157 (x664 160)) 0) x3738) (= x910 (x1154 x2566)) (not (= 0 x2355)) (not x2787) (= x1417 (= x44 0)) (= (div x741 x2355) x3169) (= (ite x1371 1 0) x804) (= x1219 (x165 320))) x2787) (= (x2573 x484) x887)) (not x1900)) (> x2357 31) (= (x1844 x2933 2) x20) (or (not x2037) (and x2037 (= (x1939 960) x3293) (not (< x3293 x1874)) (= x2070 (x737 (- x3293 x326))))) (= (x2917 800) x2200) (not (= x3060 1851080549)) (= x3291 x956) (not (= x3060 3963136098)) (= x2938 x2367) (or x1753 (and (> x1117 0) (not x1753) (= (< 0 x2345) x248) (= (> x2863 0) x3577) (= (x1489 800) x2345) (or (and (= x1117 1) x3577 (> 4294967296 x1952)) (and (= x2863 x1117) (not x3577))) (< 31 x1952) (or (and (= x889 (x2315 896)) (not (= x3370 0)) (< 0 x227) (= x1639 (< 0 x2804)) (= (x1154 x3513) x2903) (= (x402 928) x1162) (= (x868 (x1157 (x1469 128)) (x1157 (x1469 160)) 0) x3607) (= x2804 (x1154 (x2873 39))) (= x2722 (x884 864)) (= (x2621 960) x3370) (or (and (not x1639) (= x39 (x1844 x567 6)) (= (x868 (x1157 (x1683 128)) (x1157 (x1683 160)) 0) x567) (= x2993 (x587 288)) (= x1570 (x1154 x39))) (and x1639 (< 31 x406) (= x94 (x2455 (+ x3696 x1484))) (= (x868 (x1157 (x505 128)) (x1157 (x505 160)) 0) x2304) (= (x1844 x521 2) x1988) (= x2714 (= x446 x1628)) (= x508 (div x1086 10000)) (= x1555 (or x1476 x2714)) (= (ite x1555 1 0) x3032) (= (= 0 x1278) x1476) (not (>= (+ x1484 x3696) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x2977 0) x164) (= (x868 (x1157 (x2699 128)) (x1157 (x2699 160)) 0) x521) (= (x1154 x2435) x3126) (= (x431 224) x1484) (or (and (not x164) (= x380 x2977)) (and x164 (= 1 x380) (> 4294967296 x406))) (= (x587 288) x1512) (= x465 (x1154 (x2873 37))) (= (x1844 x2304 6) x2435) (not (= 0 x3032)) (> x380 0) (= (< 0 x465) x367) (= (x1940 352) x1628) (= x1278 (x1154 x1988)) (= (div x1086 x1278) x446) (or (and (= x428 (x3213 320)) (not x367) (= x68 (x3213 352)) (= (> x68 x428) x393) (or (not x393) (and (= x3698 (x3213 352)) x393 (= x263 (x3213 320)) (= x3560 (x737 (- x3698 x263))) (not (> x263 x3698))))) (and x367 (= x2465 (x3213 352)))) (= x3696 (x1154 (x2873 40))) (= x1086 (mod (* x1628 x1278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1852 (x2968 288)))) (= x1751 (> x893 0)) (= x3513 (x1844 x3607 6)) (or (and (not x1751) (= x227 x893)) (and x1751 (= 1 x227) (> 4294967296 x2657))) x248 (< 31 x2657) (= (x2166 928) x2403)) (and (= x810 (< 0 x3742)) (or (not x810) (and x3073 (= (x1091 (x1157 x2083)) x3473) (= x961 (= x3473 (x1966 (x1157 x2083)))) x961 (= x51 (x1091 (x1157 274184521717934524641157099916833587200))) (> 4294967296 x2944) x810 (= x3073 (<= x51 (x1966 (x1157 274184521717934524641157099916833587200)))))) (= x768 (x1154 (x2873 15))) (= (x1154 (x2873 15)) x2083) (= x2843 (x1153 800)) (not x248) (not (= x2976 0)) (= x2976 (x2525 (x1157 x768))) (> x3742 0))))) (not x1843) (not (= 2572356358 x3060)) (not (< x2656 x2200)) (or (and (= (ite x3156 1 0) x3496) (= x2943 (x26 288)) (= (div x829 10000) x3263) (or (and (= (< x1197 x2275) x432) (= x2275 (x2050 352)) (not x1548) (or (not x432) (and x432 (= x114 (x2050 320)) (= (x2050 352) x577) (not (< x577 x114)) (= (x737 (- x577 x114)) x3225))) (= (x2050 320) x1197)) (and x1548 (= (x2050 352) x244))) (= x3615 (= x3399 x3141)) (= x3143 (x229 x3461)) (= x3093 (x1947 288)) (= x2084 (x2696 224)) (= (mod (* x3143 x3399) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x829) (= x3399 (x3411 352)) (= x667 (x1844 x1742 6)) (= (x868 (x1157 (x3363 128)) (x1157 (x3363 160)) 0) x1349) (= x1548 (< 0 x1778)) (< 0 x46) (= x2549 (x229 x667)) (= (div x829 x3143) x3141) (not (>= (+ x2084 x3237) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x3590 (= (or x2790 x3615) x3156) (= (x1844 x1349 2) x3461) (< 31 x344) (= x1778 (x229 (x2873 37))) (= (x868 (x1157 (x938 128)) (x1157 (x938 160)) 0) x1742) (= x1288 (> x1454 0)) (= x3237 (x229 (x2873 40))) (= (= 0 x3143) x2790) (not (= 0 x3496)) (= (x2455 (+ x2084 x3237)) x2165) (or (and (not x1288) (= x1454 x46)) (and x1288 (= 1 x46) (< x344 4294967296)))) (and (= (x26 288) x727) (= x2176 (x229 x294)) (= x3255 (x868 (x1157 (x2159 128)) (x1157 (x2159 160)) 0)) (= x294 (x1844 x3255 6)) (not x3590))) (= (= x2575 0) x1823) (= x3046 (not (= x3291 x2731))) (not (= x3060 31576340)) (= (x2455 (+ x3439 x1379)) x1240) (or (and (= x250 (x175 256)) (= x2894 (< 0 x3179)) (or (and (> 4294967296 x2738) x787) (not x787)) (= x2199 (x175 384)) (= x3736 (x2455 (+ 32 x3026))) (= (x2455 (+ 512 x2199)) x89) (= x1793 (x2118 320)) (= x787 (> x1767 0)) (= (x1569 832) x626) (= x1060 (x933 288)) (= x4 (x2455 (+ x2199 64))) (or (and (= (x2118 352) x2798) (> x3052 0) (= x1759 (x737 (- 32 x957))) (= (x1261 x2798 x1391) x3052) (= x1391 (mod (* x1759 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x2118 320) x957) x1343) (not x1343)) (or (and (< x7 4294967296) (= (x2461 (x1157 274184521717934524641157099916833587200)) x1026) x181 x2553 (= x1559 (x2461 (x1157 x640))) (= (<= x1026 (x3475 (x1157 274184521717934524641157099916833587200))) x181) (= (= x1559 (x3475 (x1157 x640))) x1845) x1845) (not x2553)) x2999 (= x2553 (< 0 x3563)) (= (ite (> 32 x7) x7 32) x256) (= (x612 224) x640) (= (x1569 928) x1163) (= (x529 576) x3026) (= x1856 (x2455 (+ x2199 480))) (= x1343 (< 0 x1793)) (not (> x1163 x626)) (= x970 (x2018 (x2873 10))) (or (not x2894) (and (< x3691 4294967296) x2894)) (= (x737 (- x626 x1163)) x3070) (> x3563 0)) (and (= (< x635 x2745) x673) (not x2999) (= (x1895 832) x635) (= x2745 (x1895 928)) (or (and (= (x2455 (+ 64 x820)) x269) (= (> x693 0) x2432) (= (x3112 320) x1309) (or (and (< x601 4294967296) x1704) (not x1704)) (= x3375 (x2147 416)) (= x1772 (x2018 (x2873 10))) (= x96 (x3031 352)) (= x1382 (< 0 x3016)) (not (> x2343 x2961)) (= x2961 (x2251 928)) (= x820 (x2455 (+ 512 x3375))) (= x2504 (> x96 0)) (or (not x1382) (and x3196 x3087 x1382 (= (x2461 (x1157 274184521717934524641157099916833587200)) x1234) (< x2932 4294967296) (= (= x770 (x3544 (x1157 x1119))) x3196) (= (<= x1234 (x3544 (x1157 274184521717934524641157099916833587200))) x3087) (= (x2461 (x1157 x1119)) x770))) (= x2411 (x2455 (+ x3375 96))) (= x1119 (x1541 224)) x673 (= x3462 (x2455 (+ x3375 544))) (= x254 (x1128 288)) (= (> x809 0) x1704) (= (ite (< x2932 32) x2932 32) x2946) (= (x2455 (+ 32 x1762)) x2532) (or (and x2432 (> 4294967296 x891)) (not x2432)) (= (x2251 832) x2343) (or (not x2504) (and (= x2186 (x737 (- 32 x973))) (= (mod (* x2186 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x691) x2504 (= (x1261 x3540 x691) x3571) (= (x3031 384) x3540) (= (x3031 352) x973) (> x3571 0))) (< 0 x3016) (= x3373 (x2147 256)) (= x1762 (x2139 640)) (= (x737 (- x2961 x2343)) x1136)) (not x673)))) (not (= x3060 2988718581)) (= (x1895 832) x3204) (not (= 3567397854 x3060)) (not (= 1196925270 x3060)) (= x159 (= x1640 0)) (= x499 (x15 896)) (= (mod (* x71 x1640) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3135) (= (< 0 x2367) x1900) (not (= 2052391781 x3060)) (= x385 x2104) (= x1346 x2146) (or (and (= (x2455 (+ x1804 x2599)) x3021) (not (>= (+ x3224 x1205) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x868 (x1157 (x226 128)) (x1157 (x226 160)) 0) x3229) (= (x2842 (x2873 40)) x1804) x2676 (= (x1844 x3229 6) x2763) (= x1118 (x2455 (+ x3224 x1205))) (= x1205 (x2445 x2763)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1804 x2599))) (= x3224 (x226 832)) (= x2599 (x226 832))) (not x2676)) (not (= x3060 297566789)) (= x3101 (> x102 0)) (= x2469 x1799) (= x2656 (x2455 (+ x2682 x1379))) (>= x2628 0) (not (= x3060 4151200938)) (not (= x3060 596573372)) (not (= x3060 16192718)) (= x1977 (x1154 x510)) (= (x737 (- x2656 x2200)) x488) (< 99 x594) (<= x2628 1461501637330902918203684832716283019655932542975) (= x2522 x3238) (not (= 288104347 x3060)) (= x2682 (x2917 992)) (not (= x3060 4267106866)) (= (x3157 800) x3530) (not (= 2780307423 x3060)) (not (= 1977493762 x3060)) (not (= x3060 3613687827)) (not (= 2757214935 x3060)) (not (= 1401663147 x3060)) (> x1977 0) (<= 0 x2104) (or (and (or (and (= x2125 x1957) (not x501)) (and x501 (= x2125 1) (< x2092 4294967296))) (= false x1346) (= (< 0 x1957) x501) (> x2125 0) (< 31 x2092) (= x1843 false) x3101) (and (not x3101) (= x1346 false) (= x1843 false))) (<= 0 x2121) (= x2999 (> x3204 x885)) (not (= 961581905 x3060)) (not (> 4 x594)) (not (= 347398766 x3060)) (= (> x1351 0) x3590) (>= 1461501637330902918203684832716283019655932542975 x2104) (not (= x3060 3065339685)) (not (>= (+ x1697 x1367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< x326 x2898) x2037) (not (>= (+ x1367 x2682) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (= 599290589 x3060)) (not (= 348537858 x3060)) (or (and (= x1431 x3047) (not x2668)) (and x2668 (> 4294967296 x2357) (= x3047 1))) (= (or x3686 x159) x1081) (not (= 2699341722 x3060)) (= x2452 (x2107 832)) (= (x868 (x1157 (x3511 128)) (x1157 (x3511 160)) 0) x1912) (= x846 (x1844 x1912 7)) (not (= x3060 773487949)) (= (ite (< x1055 x3175) x1055 x3175) x2893) (= x956 x1601) (not (= x3060 1888058147)) (not (= x3060 1257916802)) (= x876 (x2597 896)) (not (= x3060 3296657447)) (= x510 (x1844 x1226 1)) (= (= x2484 0) x1753) (not (= 2681579215 x3060)) (not (= x3060 3862337480)) (= (< 0 x2833) x2676) (= (x1696 896) x3430) (= (x868 (x1157 (x460 128)) (x1157 (x460 160)) 0) x2933) (= x1258 (x2525 (x1157 274184521717934524641157099916833587200))) (> x3047 0) (= x2560 (x1844 x888 5)) (= (x229 (x2873 37)) x2575) (not (= 3544214205 x3060)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3439 x1367))) (not (= x3060 1823829273)) (= x2449 (x2751 x20)) (= x1472 (x1390 864)) (= (x737 (- x1869 x3173)) x1640) (= x3542 (x1844 x914 8)) (>= 1461501637330902918203684832716283019655932542975 x2832) (not (= 3208075701 x3060)) (= (x868 (x1157 (x915 128)) (x1157 (x915 160)) 0) x914) (= x2704 (div x3135 x1640)) (not (= 2835717307 x3060)) (= (x229 (x2873 39)) x1351) (= (x868 (x1157 (x715 128)) (x1157 (x715 160)) 0) x987) (= (x1844 x3195 6) x136) x3046 (= x2628 x3138) (or (and (not x1041) (= x102 x143) (= (x2751 (x2873 37)) x143)) (and (= 1 x102) x1041)) (not (= 2484372501 x3060)) (or (not x112) (and (not (> x3594 x375)) (= x480 (x737 (- x375 x3594))) (= (x868 (x1157 (x2056 128)) (x1157 (x2056 160)) 0) x2219) (not (> x308 x1317)) (= x340 (x1844 x2219 6)) (= x588 (x2056 896)) (= (x737 (- x1317 x308)) x2885) x112 (= x3594 (x2056 896)) (= (x229 x340) x2041) (= (x737 (- x2041 x588)) x1623) (= (x2056 864) x375) (= x1317 (x3550 (x2873 40))) (not (> x588 x2041)) (= (x2056 896) x308))) (= x2484 (x1154 (x2873 15))) (not (= x3060 629314576)) (not (= 157198259 x3060)) (not (< 0 x1436)) (= (x2751 x3554) x40) (= x3195 (x868 (x1157 (x2271 128)) (x1157 (x2271 160)) 0)) (= x742 x1155) (<= x1601 1461501637330902918203684832716283019655932542975) (= (x1895 928) x885) (= (ite x1081 1 0) x209) (not (= 3092021830 x3060)) (not (= x3060 1020253707)) (<= 0 x2832) (= x3403 (x2455 (+ x742 x1799))) (not (= x3060 3877814014)) (= x1697 (x1195 896)) (or (and (= x1703 (ite x2412 1 0)) (= x1630 (x1435 256)) (= (div x2945 1000000000000000000) x3020) (= (= x3685 x2809) x663) (= x2978 (x737 (- x1630 x3020))) x1887 (= (or x1736 x663) x2412) (not (= x1703 0)) (= x2614 (x1435 224)) (= x69 (x2018 (x2873 43))) (= x1736 (= 0 x2614)) (= x3685 (div x2945 x2614)) (not (< x1630 x3020)) (= x2809 (x1435 256)) (= (mod (* x2809 x2614) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2945)) (not x1887)) (not (= 2869116585 x3060)) (= x2832 x956) (= x1139 (x2455 (+ x1379 x1697))) (not (= 0 x209)) (or (not x1823) (and (= (x895 288) x1829) (not (= x773 0)) (or (not x1103) (and (not (< x649 x720)) (= x3376 (x737 (- x649 x720))) (= (x2810 384) x994) (= (x1220 416) x649) (> x511 31) (= (> x2797 x756) x735) (= x2605 (< 0 x2644)) (or (and (not x735) (= (x1789 512) x500) (= x2499 (x1789 544)) (= (ite (< x500 x2499) x500 x2499) x1943)) x735) (= x720 (x1220 448)) (= (x1789 544) x756) (not (< x985 x994)) (= x921 (ite (< x2881 x3302) x2881 x3302)) (= x3447 (ite (< x1501 x2255) x1501 x2255)) (= x1501 (x737 (- x985 x994))) (= (x2810 544) x2255) (= x985 (x2810 352)) (= x2797 (x1789 480)) x1103 (< 0 x2795) (= (x1748 544) x3302) (or (and (not x2605) (= x2644 x2795)) (and (> 4294967296 x511) (= x2795 1) x2605)) (= (x672 576) x2881))) (= x1053 (or x2220 x1054)) (= x2645 (div x2604 10000)) (= x3523 (x3582 352)) (= x2527 (div x3113 10000)) (= x1602 (x229 x278)) (= (mod (* x2577 x3579) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3113) (= x2027 (x3333 288)) (= (x1844 x583 4) x278) (= x3024 (x2455 (+ x1825 x3572))) (= x382 (x1220 416)) (= x1916 (div x3113 x2577)) (= (x1979 288) x1456) (= (div x2604 x2823) x1802) (not (= x1368 0)) (= (x229 (x2873 39)) x2823) (= x773 (ite x3388 1 0)) (= x1836 (x1844 x514 3)) (= (x868 (x1157 (x188 128)) (x1157 (x188 160)) 0) x583) (= (> x2710 0) x104) (= (x868 (x1157 (x215 128)) (x1157 (x215 160)) 0) x514) (= x2408 (x229 x1836)) (= (x2662 224) x1825) x1823 (= x3579 (x1016 320)) (= (x1220 448) x1885) (= (x229 x3003) x2658) (= (x229 x1632) x2577) (= x2941 (x868 (x1157 (x1016 128)) (x1157 (x1016 160)) 0)) (= x1427 (< x1885 x382)) (= (x868 (x1157 (x2057 128)) (x1157 (x2057 160)) 0) x3067) (= x617 (= 0 x2577)) (= (x2240 288) x1554) (= x3359 (x2212 320)) (= (x1844 x3067 6) x3003) (= x1054 (= x3359 x1802)) (= x2220 (= x2823 0)) (or (and x1427 (= x3650 (not x3048)) (= x3011 (x1220 352)) (= (ite x3650 1 0) x783) (= (x1220 384) x2292) (= (> x3011 x2292) x3048)) (and (not x1427) (= 1 x783))) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3572 x1825))) (= x2604 (mod (* x3359 x2823) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= x3579 x1916) x726) (= (= x783 0) x1103) (= (x229 (x2873 40)) x414) (or (and (> 4294967296 x1636) x104 (= x2526 1)) (and (not x104) (= x2710 x2526))) (< 31 x1636) (= (x229 (x2873 40)) x3572) (< 0 x2526) (= (ite x1053 1 0) x1368) (= x3388 (or x617 x726)) (= x1632 (x1844 x2941 2)))) (not (= 2316151882 x3060)) (= (x448 864) x1055) (not (= x3060 861432679)) (= x2328 (x1844 x576 7)) (= (x639 x2328) x3439) (= x1784 (x2751 x3542)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x594)) (> x1258 0) (not (= x3060 3504541104)) (= (x1939 960) x2898) (not (= x3060 3184473787)) (= x1887 (< x2288 1000000000000000000)) (= 2715400956 x3060) (= x71 (x2018 (x2873 44))) (= (x868 (x1157 (x3055 128)) (x1157 (x3055 160)) 0) x888) (not (= x3060 3339924076)) (= (x2018 (x2873 41)) x3173) (not (= x3060 3147386184)) (= x1850 x2731) (not (= 2087341860 x3060)) (= x1057 (x2751 x136)) (not (= 3491319510 x3060)) (not (= 464926286 x3060)) (= x2833 (x1644 832)) (= x1967 (x3555 832)) (not (= x3060 356263876)) (not (= 2209625481 x3060)) (= x3554 (x1844 x987 2)) (= x1041 (= 0 x40)) (= x385 x3744) (not x1346) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1155 x2469))) (= x112 (< 0 x3430)) (<= 0 x1601) (>= 1461501637330902918203684832716283019655932542975 x2121) (= (x868 (x1157 (x1924 128)) (x1157 (x1924 160)) 0) x1226) (= (x2751 x846) x2485) (= x3686 (= x71 x2704)) (not (> x3403 x3530))) x2420) x3711))
(assert (x1480 x3269))
(assert (= (x2002 x3105) (ite (= 640 x3105) 2388873442 (x2410 x3105))))
(assert (= (x1739 (x1844 x521 2)) (+ 2 (x1739 x521))))
(assert (=> (>= 10000 (x1016 160)) (= (x1157 (x1016 160)) (x2873 (x1016 160)))))
(assert (x2739 (x3428 128)))
(assert (x1480 x3176))
(assert (= (=> (and (< 0 x739) (not (< x3068 4)) (= (x2525 (x1157 274184521717934524641157099916833587200)) x739) (= (> x483 0) x1156)) (and (=> x1156 x1698) (=> (not x1156) x412))) x539))
(assert (x1480 x1162))
(assert (= (x1739 (x1157 (x170 128))) (x170 128)))
(assert (= (=> (and (= (x2455 (+ x3673 x29)) x1458) (= (x116 (x2873 40)) x29) (= x3673 (x173 224)) (= (< x1458 x3673) x3423)) (and (=> x3423 x1698) (=> (not x3423) x1654))) x3071))
(assert (= x1236 (or (and x2454 x767) x761)))
(assert (= (x1739 (x1844 x1187 2)) (+ (x1739 x1187) 2)))
(assert (x2739 x1446))
(assert (x1480 x1943))
(assert (x1480 x1559))
(assert (=> (<= (x2660 128) 10000) (= (x1157 (x2660 128)) (x2873 (x2660 128)))))
(assert (x1480 x2848))
(assert (x1480 x160))
(assert (= (x1641 704) (x1383 704)))
(assert (= (x1387 352) (x977 352)))
(assert (x1480 x2256))
(assert (x2739 (x2057 128)))
(assert (= (x1739 (x2873 773487949)) 773487949))
(assert (= (x107 128) (x1739 (x1157 (x107 128)))))
(assert (= (x1626 128) (x1739 (x1157 (x1626 128)))))
(assert (= x3278 (and (not x5) x2979)))
(assert (= (x333 x3472) (ite (= x3472 224) x316 (x1268 x3472))))
(assert (= (x3086 128) (x1739 (x1157 (x3086 128)))))
(assert (= (x522 224) (x2143 224)))
(assert (= (x2094 832) (x1400 832)))
(assert (= (x675 800) (x2139 800)))
(assert (= (x3177 352) (x2055 352)))
(assert (x1480 x2472))
(assert (= (x625 x3266) (ite (= x2140 x3266) x1719 (x2381 x3266))))
(assert (x1480 x3451))
(assert (= (x1106 832) (x3029 832)))
(assert (= (x1739 (x1157 (x188 160))) (x188 160)))
(assert (= (x1747 704) (x1833 704)))
(assert (= (x967 320) (x1213 320)))
(assert (x1480 x2610))
(assert (= (x1178 x733) (ite (= x3102 x733) x1095 (x578 x733))))
(assert (x1480 x3091))
(assert (x1480 x8))
(assert (= (and x621 x2707) x358))
(assert (= (ite (and (not x1942) x3581 x841) (x3059 512) (x3716 512)) (x1140 512)))
(assert (x1480 x2151))
(assert (= (ite (and x3717 (not x112)) (x229 (x2873 40)) (x3257 (x2873 40))) (x2445 (x2873 40))))
(assert (x2739 (x82 160)))
(assert (=> (<= (x938 160) 10000) (= (x2873 (x938 160)) (x1157 (x938 160)))))
(assert (= (x3721 384) (x3609 384)))
(assert (x1480 x2364))
(assert (= (x926 x1410) (ite (and x2661 (not x1907)) (x625 x1410) (x2349 x1410))))
(assert (x1480 x3391))
(assert (x1480 x2604))
(assert (=> (>= 10000 (x425 160)) (= (x2873 (x425 160)) (x1157 (x425 160)))))
(assert (= (x625 x3432) (ite (= x3432 x2140) x1719 (x2381 x3432))))
(assert (x1480 x3595))
(assert (x2739 (x2491 128)))
(assert (x1480 x3732))
(assert (x1480 x3630))
(assert (= (ite (= x202 576) x3109 (x2498 x202)) (x1972 x202)))
(assert (x1480 x916))
(assert (x1480 x727))
(assert (= (x1157 464926286) (x2873 464926286)))
(assert (x1480 x3498))
(assert (= (x936 x3397) (ite (= 832 x3397) x1850 (x2145 x3397))))
(assert (= (x1739 (x1157 (x1883 128))) (x1883 128)))
(assert (=> (<= (x1242 160) 10000) (= (x2873 (x1242 160)) (x1157 (x1242 160)))))
(assert (= (x1739 (x1157 (x65 128))) (x65 128)))
(assert (x1480 x2654))
(assert (= (x228 x202) (ite (= x202 128) 7 (x1073 x202))))
(assert (= (ite (= x930 224) x3731 (x1383 x930)) (x1641 x930)))
(assert (= (x3178 832) (x1915 832)))
(assert (= (x107 160) (x1739 (x1157 (x107 160)))))
(assert (= (ite (and (not x1907) x2661) (x625 (x2873 43)) (x2349 (x2873 43))) (x926 (x2873 43))))
(assert (= (x165 x848) (ite (= x848 320) x900 (x664 x848))))
(assert (= (x188 352) (x1220 352)))
(assert (= (x3061 x3292) (ite (= x3292 x1727) x2963 (x3316 x3292))))
(assert (= (=> (= (> x1561 0) x557) (and (=> x557 x3062) (=> (not x557) x1698))) x3695))
(assert (= x506 (or x3527 (and (not x2882) x3390) x2134)))
(assert (= (x1178 (x2873 10)) (ite (= (x2873 10) x3102) x1095 (x578 (x2873 10)))))
(assert (x1480 x1826))
(assert (= (x3726 704) x2155))
(assert (x1480 x588))
(assert (x1480 x293))
(assert (= x241 (x3059 704)))
(assert (= (x2726 448) (x713 448)))
(assert (= x1194 (and x3608 x182)))
(assert (x1480 x2950))
(assert (x2739 (x2056 160)))
(assert (= (ite (and x3717 (not x1900)) (x1154 x733) (x2416 x733)) (x1223 x733)))
(assert (= (x1782 320) (ite (and x1835 x1204) (x3092 320) (x936 320))))
(assert (= (x3190 x3471) (ite (and (not x2028) x2034) (x3340 x3471) (x2866 x3471))))
(assert (= (ite (= 128 x3397) 7 (x780 x3397)) (x3488 x3397)))
(assert (x1480 x1967))
(assert (= (ite (and (not x3564) x1835) (x1154 x604) (x2777 x604)) (x1089 x604)))
(assert (= (x1489 800) (ite (and x3577 (not x1753) x3717) (x1485 800) (x288 800))))
(assert (= (x1339 896) (ite (and x2034 (not x1300)) (x1074 896) (x3492 896))))
(assert (=> (>= 10000 (x3600 160)) (= (x2873 (x3600 160)) (x1157 (x3600 160)))))
(assert (= (ite (and (not x1900) x3717) (x1154 (x2873 47)) (x2416 (x2873 47))) (x1223 (x2873 47))))
(assert (x1480 x2575))
(assert (= (x1642 x3472) (ite (= 256 x3472) 274184521717934524641157099916833587200 (x1582 x3472))))
(assert (x1480 x3506))
(assert (=> (<= (x3301 160) 10000) (= (x2873 (x3301 160)) (x1157 (x3301 160)))))
(assert (= (x2387 160) (x1739 (x1157 (x2387 160)))))
(assert (x1480 x1136))
(assert (= (x1098 320) (x2249 320)))
(assert (= (ite (and (not x1907) x2661) (x625 (x2873 10)) (x2349 (x2873 10))) (x926 (x2873 10))))
(assert (= (x3354 224) (x1014 224)))
(assert (= (x1739 (x1157 (x1765 160))) (x1765 160)))
(assert (x1480 x353))
(assert (= (x3110 448) (x2806 448)))
(assert (= (x3007 160) (x1739 (x1157 (x3007 160)))))
(assert (x1480 x2048))
(assert (= 31576340 (x1739 (x2873 31576340))))
(assert (x1480 x3558))
(assert (= (x2699 160) (x1739 (x1157 (x2699 160)))))
(assert (x1480 x707))
(assert (x2739 (x2491 160)))
(assert (x2739 (x1216 160)))
(assert (x1480 x2006))
(assert (= (x1770 x772) (ite (= x772 128) 16 (x2911 x772))))
(assert (= (ite (= x1540 (x2873 41)) x2522 (x3516 x1540)) (x116 x1540)))
(assert (x1480 x204))
(assert (x1480 x2178))
(assert (= (x912 x846) (ite (= x3114 x846) x2558 (x1792 x846))))
(assert (= (x625 x1573) (ite (= x2140 x1573) x1719 (x2381 x1573))))
(assert (= (ite (and x2661 (not x1907)) (x625 x427) (x2349 x427)) (x926 x427)))
(assert (x1480 x1571))
(assert (= (x1605 x3472) (ite (= 288 x3472) x1850 (x1299 x3472))))
(assert (= (ite (and (not x2028) x2034) (x3340 (x2873 37)) (x2866 (x2873 37))) (x3190 (x2873 37))))
(assert (= (ite (and (not x2276) x2332) (x35 896) (x2397 896)) (x1533 896)))
(assert (= (x3443 384) (x234 384)))
(assert (= (ite (and (not x3564) x1835) (x1154 x1836) (x2777 x1836)) (x1089 x1836)))
(assert (x1480 x1396))
(assert (x1480 x316))
(assert (= x2409 (=> (and (= (x2508 352) x1588) (= x86 (x2508 320)) (= x2518 (> x86 x1588))) (and (=> x2518 x1698) (=> (and (not x2518) (= (x737 (- x1588 x86)) x2629)) x3056)))))
(assert (= (x977 512) (x1387 512)))
(assert (= (x100 224) (x2195 224)))
(assert (x2739 x582))
(assert (x2739 (x2660 160)))
(assert (= (ite (and x1835 x2211 (not x984)) (x2105 352) (x3404 352)) (x3013 352)))
(assert (= (x437 544) (x2856 544)))
(assert (x1480 x2513))
(assert (x2739 x3146))
(assert (x1480 x3623))
(assert (x2739 (x3372 128)))
(assert (x1480 x2946))
(assert (= (x229 x3542) (ite (= x3542 x2328) x1240 (x639 x3542))))
(assert (x1480 x1345))
(assert (= (x1223 (x2873 10)) (ite (and (not x1900) x3717) (x1154 (x2873 10)) (x2416 (x2873 10)))))
(check-sat)
