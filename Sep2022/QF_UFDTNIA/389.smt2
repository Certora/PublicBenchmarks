(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x249 0)) (((x11 (x1171 Int)) (x97 (x346 x249) (x1252 Int)) (x1228 (x541 x249) (x250 x249) (x275 Int)))))
(declare-fun x677 () Int)
(declare-fun x911 () x249)
(declare-fun x1164 () Bool)
(declare-fun x583 () Bool)
(declare-fun x513 () Bool)
(declare-fun x256 () Int)
(declare-fun x1051 () Bool)
(declare-fun x1232 () Int)
(declare-fun x56 () Int)
(declare-fun x795 () Bool)
(declare-fun x546 () Int)
(declare-fun x1297 () Int)
(declare-fun x264 () x249)
(declare-fun x570 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x1108 () x249)
(declare-fun x662 () Int)
(declare-fun x339 () Bool)
(declare-fun x683 () Bool)
(declare-fun x1044 () Int)
(declare-fun x99 () Int)
(declare-fun x982 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x504 (x249) Int)
(declare-fun x978 () Int)
(declare-fun x151 () Bool)
(declare-fun x925 () x249)
(declare-fun x210 () Int)
(declare-fun x450 () Int)
(declare-fun x1099 () Int)
(declare-fun x1065 () x249)
(declare-fun x700 () Int)
(declare-fun x497 () Int)
(declare-fun x1127 () Bool)
(declare-fun x1094 () Int)
(declare-fun x901 () Bool)
(declare-fun x661 (Int) Int)
(declare-fun x1177 () Int)
(declare-fun x650 () x249)
(declare-fun x929 () Int)
(declare-fun x524 () x249)
(declare-fun x785 () Bool)
(declare-fun x1145 () Int)
(declare-fun x632 () Int)
(declare-fun x65 () Int)
(declare-fun x277 () Int)
(declare-fun x694 () Bool)
(declare-fun x169 () Int)
(declare-fun x1182 () Bool)
(declare-fun x1196 (Int) Int)
(declare-fun x1091 () Int)
(declare-fun x474 () Int)
(declare-fun x806 () Int)
(declare-fun x612 () Bool)
(declare-fun x1286 () Int)
(declare-fun x241 () Int)
(declare-fun x29 () Int)
(declare-fun x1027 () Bool)
(declare-fun x1132 () x249)
(declare-fun x516 () Int)
(declare-fun x1137 () Int)
(declare-fun x816 () Int)
(declare-fun x1281 () Int)
(declare-fun x617 () Int)
(declare-fun x188 () Int)
(declare-fun x538 () x249)
(declare-fun x455 () x249)
(declare-fun x53 () Bool)
(declare-fun x648 () x249)
(declare-fun x373 () Int)
(declare-fun x1131 () Int)
(declare-fun x620 (x249) Int)
(declare-fun x1233 () Int)
(declare-fun x107 () x249)
(declare-fun x368 () Bool)
(declare-fun x934 () Int)
(declare-fun x1067 () Bool)
(declare-fun x594 () Bool)
(declare-fun x270 () Bool)
(declare-fun x1272 () Int)
(declare-fun x1086 () Int)
(declare-fun x93 () Int)
(declare-fun x690 () Bool)
(declare-fun x458 () Int)
(declare-fun x1011 () x249)
(declare-fun x6 () Bool)
(declare-fun x725 () Int)
(declare-fun x688 () Bool)
(declare-fun x1087 () Int)
(declare-fun x328 () Bool)
(declare-fun x351 () Int)
(declare-fun x1106 () Bool)
(declare-fun x3 () Bool)
(declare-fun x1261 () Int)
(declare-fun x860 () Int)
(declare-fun x562 () Bool)
(declare-fun x530 () x249)
(declare-fun x111 () Int)
(declare-fun x110 () Int)
(declare-fun x16 () Bool)
(declare-fun x1050 () Int)
(declare-fun x837 () Int)
(declare-fun x168 () x249)
(declare-fun x631 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x1070 () Int)
(declare-fun x404 () Int)
(declare-fun x1227 () Int)
(declare-fun x408 () Bool)
(declare-fun x845 () Int)
(declare-fun x120 (Int) Int)
(declare-fun x649 () Bool)
(declare-fun x70 () Int)
(declare-fun x449 () Bool)
(declare-fun x1153 () Int)
(declare-fun x1128 () Bool)
(declare-fun x42 () Bool)
(declare-fun x867 () Int)
(declare-fun x1206 () Int)
(declare-fun x559 () Int)
(declare-fun x543 () Bool)
(declare-fun x1191 () x249)
(declare-fun x225 () Int)
(declare-fun x1156 () Int)
(declare-fun x536 () Int)
(declare-fun x670 () Int)
(declare-fun x1107 () Int)
(declare-fun x627 () Bool)
(declare-fun x150 () x249)
(declare-fun x1082 () Int)
(declare-fun x407 () Int)
(declare-fun x73 () Bool)
(declare-fun x212 () x249)
(declare-fun x1236 () Int)
(declare-fun x974 () Int)
(declare-fun x534 () Int)
(declare-fun x251 () Int)
(declare-fun x492 () Int)
(declare-fun x45 () x249)
(declare-fun x470 () Bool)
(declare-fun x898 () Bool)
(declare-fun x238 (Int) Int)
(declare-fun x1199 () Int)
(declare-fun x664 () Int)
(declare-fun x336 () Int)
(declare-fun x742 (x249) Int)
(declare-fun x574 () Int)
(declare-fun x435 () Int)
(declare-fun x7 () Int)
(declare-fun x844 () Int)
(declare-fun x463 (Int Int) Int)
(declare-fun x12 () Int)
(declare-fun x545 () Int)
(declare-fun x162 () Int)
(declare-fun x908 () Bool)
(declare-fun x105 () Bool)
(declare-fun x1034 () Int)
(declare-fun x317 () x249)
(declare-fun x146 () Bool)
(declare-fun x62 () Bool)
(declare-fun x332 () Int)
(declare-fun x776 () x249)
(declare-fun x759 () Int)
(declare-fun x307 () x249)
(declare-fun x1120 () Bool)
(declare-fun x1042 () x249)
(declare-fun x446 () Int)
(declare-fun x171 () Int)
(declare-fun x647 () x249)
(declare-fun x827 () Bool)
(declare-fun x897 () Bool)
(declare-fun x746 () x249)
(declare-fun x548 () Int)
(declare-fun x1222 () Int)
(declare-fun x751 () Bool)
(declare-fun x387 () Int)
(declare-fun x331 () x249)
(declare-fun x1290 () Int)
(declare-fun x4 () x249)
(declare-fun x164 () Int)
(declare-fun x1193 () Bool)
(declare-fun x914 () x249)
(declare-fun x68 () Int)
(declare-fun x582 () Int)
(declare-fun x379 () Int)
(declare-fun x1225 () x249)
(declare-fun x442 () Int)
(declare-fun x532 () Int)
(declare-fun x1299 () Int)
(declare-fun x607 () Int)
(declare-fun x213 (Int) Int)
(declare-fun x854 () Int)
(declare-fun x660 () x249)
(declare-fun x856 () Bool)
(declare-fun x789 () Int)
(declare-fun x1123 () Int)
(declare-fun x994 () Bool)
(declare-fun x413 () Bool)
(declare-fun x305 () Int)
(declare-fun x129 () Bool)
(declare-fun x230 () Bool)
(declare-fun x933 () Int)
(declare-fun x986 () Bool)
(declare-fun x20 () x249)
(declare-fun x825 (Int) Int)
(declare-fun x1076 () Int)
(declare-fun x366 () Int)
(declare-fun x838 () Int)
(declare-fun x996 () x249)
(declare-fun x605 () Int)
(declare-fun x314 () Bool)
(declare-fun x655 () Bool)
(declare-fun x14 () Int)
(declare-fun x569 () Int)
(declare-fun x687 () Int)
(declare-fun x880 () Int)
(declare-fun x565 () Bool)
(declare-fun x134 () Bool)
(declare-fun x84 () Int)
(declare-fun x1006 () Int)
(declare-fun x496 () Int)
(declare-fun x1124 () Int)
(declare-fun x132 () Int)
(declare-fun x155 () Int)
(declare-fun x325 () Int)
(declare-fun x1221 () Int)
(declare-fun x500 () Bool)
(declare-fun x369 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x189 () Int)
(declare-fun x720 () Int)
(declare-fun x349 () Int)
(declare-fun x1134 () Int)
(declare-fun x411 () Int)
(declare-fun x1172 () Int)
(declare-fun x358 () Int)
(declare-fun x75 () Int)
(declare-fun x879 () Bool)
(declare-fun x625 () Bool)
(declare-fun x1167 () Int)
(declare-fun x175 () Bool)
(declare-fun x777 () Int)
(declare-fun x979 () Int)
(declare-fun x1080 (Int) Int)
(declare-fun x771 () x249)
(declare-fun x726 () Int)
(declare-fun x592 () Int)
(declare-fun x391 (x249) Int)
(declare-fun x1291 () Bool)
(declare-fun x1141 () Int)
(declare-fun x279 () Int)
(declare-fun x739 () x249)
(declare-fun x1224 () x249)
(declare-fun x452 () Int)
(declare-fun x61 () Int)
(declare-fun x887 () x249)
(declare-fun x1253 () Bool)
(declare-fun x1036 () Int)
(declare-fun x57 () Int)
(declare-fun x744 () Int)
(declare-fun x730 () Int)
(declare-fun x722 () Int)
(declare-fun x704 () Int)
(declare-fun x359 () Int)
(declare-fun x423 () x249)
(declare-fun x553 () x249)
(declare-fun x613 () Int)
(declare-fun x525 () Int)
(declare-fun x591 () Int)
(declare-fun x280 () Int)
(declare-fun x221 (Int) Int)
(declare-fun x998 () Int)
(declare-fun x859 () Bool)
(declare-fun x868 () Bool)
(declare-fun x472 () x249)
(declare-fun x66 () Int)
(declare-fun x1163 () Int)
(declare-fun x907 () Int)
(declare-fun x899 () Int)
(declare-fun x1033 () Bool)
(declare-fun x712 () Int)
(declare-fun x575 () Int)
(declare-fun x445 () x249)
(declare-fun x1025 () Int)
(declare-fun x1158 () Int)
(declare-fun x542 () Bool)
(declare-fun x622 () Int)
(declare-fun x680 () Bool)
(declare-fun x278 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x422 () Int)
(declare-fun x451 () Int)
(declare-fun x731 (x249) Int)
(declare-fun x710 (Int) Int)
(declare-fun x203 () Int)
(declare-fun x540 () x249)
(declare-fun x1208 () x249)
(declare-fun x802 () Int)
(declare-fun x127 () Bool)
(declare-fun x348 () Int)
(declare-fun x165 () x249)
(declare-fun x40 () x249)
(declare-fun x1161 (Int) Int)
(declare-fun x67 () Int)
(declare-fun x1194 () Int)
(declare-fun x1241 () Bool)
(declare-fun x312 () Int)
(declare-fun x1015 (x249) Int)
(declare-fun x1257 () Int)
(declare-fun x1079 () Int)
(declare-fun x935 () x249)
(declare-fun x482 () Int)
(declare-fun x382 () Int)
(declare-fun x227 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x1055 () Int)
(declare-fun x374 () Bool)
(declare-fun x861 () Int)
(declare-fun x8 () Bool)
(declare-fun x266 () Int)
(declare-fun x1049 () Int)
(declare-fun x448 () Bool)
(declare-fun x200 () Int)
(declare-fun x432 () Bool)
(declare-fun x958 () Int)
(declare-fun x321 () Int)
(declare-fun x846 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x1054 () x249)
(declare-fun x402 () Int)
(declare-fun x886 () Bool)
(declare-fun x1293 () Bool)
(declare-fun x773 () x249)
(declare-fun x126 () Bool)
(declare-fun x141 () Bool)
(declare-fun x922 () Bool)
(declare-fun x173 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x1063 () Int)
(declare-fun x913 () Bool)
(declare-fun x353 () Bool)
(declare-fun x1023 () Int)
(declare-fun x948 () Int)
(declare-fun x91 () Int)
(declare-fun x429 () Int)
(declare-fun x624 () Int)
(declare-fun x51 () x249)
(declare-fun x638 () Int)
(declare-fun x836 (Int) Int)
(declare-fun x1075 () Int)
(declare-fun x1259 () Int)
(declare-fun x293 () Int)
(declare-fun x381 () Int)
(declare-fun x271 () Bool)
(declare-fun x1117 () x249)
(declare-fun x1095 () Int)
(declare-fun x286 () Bool)
(declare-fun x1274 () Int)
(declare-fun x1058 () Int)
(declare-fun x506 () Bool)
(declare-fun x658 () Bool)
(declare-fun x114 () Int)
(declare-fun x461 () Int)
(declare-fun x443 () Int)
(declare-fun x1009 () Int)
(declare-fun x33 () Int)
(declare-fun x259 () Int)
(declare-fun x361 () Int)
(declare-fun x390 () Int)
(declare-fun x1246 () Bool)
(declare-fun x989 () Int)
(declare-fun x918 () Int)
(declare-fun x1032 () Bool)
(declare-fun x417 () Int)
(declare-fun x527 () Int)
(declare-fun x878 () Bool)
(declare-fun x734 () Int)
(declare-fun x724 () Int)
(declare-fun x239 () Int)
(declare-fun x909 () x249)
(declare-fun x526 () x249)
(declare-fun x774 () Bool)
(declare-fun x666 () Int)
(declare-fun x902 () Bool)
(declare-fun x135 () Bool)
(declare-fun x1048 () Int)
(declare-fun x356 () Bool)
(declare-fun x345 () Bool)
(declare-fun x1110 () Int)
(declare-fun x108 () Int)
(declare-fun x567 () Bool)
(declare-fun x657 () x249)
(declare-fun x636 () x249)
(declare-fun x1144 () Bool)
(declare-fun x642 () Int)
(declare-fun x365 () Int)
(declare-fun x403 (Int) Int)
(declare-fun x585 () Int)
(declare-fun x763 () Int)
(declare-fun x140 () x249)
(declare-fun x736 () Bool)
(declare-fun x44 () Int)
(declare-fun x1243 () Int)
(declare-fun x486 () x249)
(declare-fun x335 () Int)
(declare-fun x1280 () x249)
(declare-fun x682 () Int)
(declare-fun x956 () Bool)
(declare-fun x535 () Int)
(declare-fun x495 () Bool)
(declare-fun x883 () Bool)
(declare-fun x464 () Bool)
(declare-fun x1176 () Int)
(declare-fun x255 () x249)
(declare-fun x753 () Int)
(declare-fun x635 () Int)
(declare-fun x1077 () Int)
(declare-fun x1037 () Int)
(declare-fun x564 () Bool)
(declare-fun x1192 () x249)
(declare-fun x298 () x249)
(declare-fun x840 () Int)
(declare-fun x589 (Int) Int)
(declare-fun x770 () Int)
(declare-fun x833 () Bool)
(declare-fun x819 () Int)
(declare-fun x1305 () Int)
(declare-fun x938 () x249)
(declare-fun x235 () Int)
(declare-fun x940 () Int)
(declare-fun x340 () Int)
(declare-fun x483 () Int)
(declare-fun x511 () Int)
(declare-fun x457 () Int)
(declare-fun x1119 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x555 () Int)
(declare-fun x427 () Int)
(declare-fun x556 () Int)
(declare-fun x1260 () Bool)
(declare-fun x139 () x249)
(declare-fun x421 () Int)
(declare-fun x1092 () Bool)
(declare-fun x1012 () Int)
(declare-fun x372 () Int)
(declare-fun x835 () x249)
(declare-fun x242 () Int)
(declare-fun x338 () Int)
(declare-fun x640 () Int)
(declare-fun x190 () Bool)
(declare-fun x290 () Int)
(declare-fun x488 () Int)
(declare-fun x1277 () Int)
(declare-fun x1115 () x249)
(declare-fun x595 () Int)
(declare-fun x672 (Int) Int)
(declare-fun x1289 (x249) Int)
(declare-fun x1014 () Int)
(declare-fun x972 () Int)
(declare-fun x350 () Bool)
(declare-fun x508 () Int)
(declare-fun x17 () Bool)
(declare-fun x287 () Int)
(declare-fun x296 () Int)
(declare-fun x1111 () Bool)
(declare-fun x276 () Bool)
(declare-fun x1269 () x249)
(declare-fun x784 () Bool)
(declare-fun x285 () Int)
(declare-fun x824 () x249)
(declare-fun x1038 () Bool)
(declare-fun x686 () Int)
(declare-fun x728 () Int)
(declare-fun x822 () Int)
(declare-fun x1263 () Int)
(declare-fun x995 () Int)
(declare-fun x969 () Int)
(declare-fun x602 () Bool)
(declare-fun x1262 () Int)
(declare-fun x563 () Bool)
(declare-fun x718 () Bool)
(declare-fun x533 () Int)
(declare-fun x302 () Int)
(declare-fun x1148 () Bool)
(declare-fun x1074 () Int)
(declare-fun x1283 () Int)
(declare-fun x626 () x249)
(declare-fun x796 () Bool)
(declare-fun x520 () Int)
(declare-fun x980 () Int)
(declare-fun x1175 () Bool)
(declare-fun x1198 () Int)
(declare-fun x1040 () Int)
(declare-fun x47 () Bool)
(declare-fun x219 () Int)
(declare-fun x1265 () Int)
(declare-fun x487 () Int)
(declare-fun x1209 () Bool)
(declare-fun x900 () x249)
(declare-fun x809 () x249)
(declare-fun x618 () x249)
(declare-fun x1179 () x249)
(declare-fun x599 () x249)
(declare-fun x1237 () x249)
(declare-fun x892 () Bool)
(declare-fun x951 () x249)
(declare-fun x749 () x249)
(declare-fun x136 () Int)
(declare-fun x848 () Int)
(declare-fun x319 () Int)
(declare-fun x906 () Int)
(declare-fun x341 () Int)
(declare-fun x1288 (x249) Int)
(declare-fun x156 () Int)
(declare-fun x1150 () Int)
(declare-fun x2 () Int)
(declare-fun x515 () Int)
(declare-fun x876 () x249)
(declare-fun x782 () Int)
(declare-fun x810 () x249)
(declare-fun x1186 () Int)
(declare-fun x174 () Int)
(declare-fun x397 () Bool)
(declare-fun x1151 () Int)
(declare-fun x1010 () Int)
(declare-fun x975 () Bool)
(declare-fun x85 () Int)
(declare-fun x939 () Bool)
(declare-fun x864 () Int)
(declare-fun x1276 () Int)
(declare-fun x537 () Int)
(declare-fun x109 () Bool)
(declare-fun x233 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x362 () Int)
(declare-fun x752 () Bool)
(declare-fun x601 (x249) Int)
(declare-fun x27 (x249) Int)
(declare-fun x894 () x249)
(declare-fun x1008 () Int)
(declare-fun x337 () x249)
(declare-fun x1147 () Int)
(declare-fun x709 () Bool)
(declare-fun x405 () Bool)
(declare-fun x619 () Int)
(declare-fun x882 () Bool)
(declare-fun x344 () x249)
(declare-fun x281 () Int)
(declare-fun x817 () Int)
(declare-fun x179 () Int)
(declare-fun x1235 () Int)
(declare-fun x1116 () Int)
(declare-fun x465 () Int)
(declare-fun x790 () Int)
(declare-fun x199 () Int)
(declare-fun x106 () Int)
(declare-fun x547 () Bool)
(declare-fun x265 () Int)
(declare-fun x104 () Int)
(declare-fun x1160 () Bool)
(declare-fun x581 () Int)
(declare-fun x1053 (x249) Int)
(declare-fun x195 () Int)
(declare-fun x58 () Bool)
(declare-fun x138 () Bool)
(declare-fun x1298 (Int) Int)
(declare-fun x1129 () Int)
(declare-fun x197 () Int)
(declare-fun x1081 () x249)
(declare-fun x758 () Bool)
(declare-fun x192 (x249) Int)
(declare-fun x383 () x249)
(declare-fun x273 () Bool)
(declare-fun x147 () x249)
(declare-fun x959 () x249)
(declare-fun x115 () Int)
(declare-fun x663 (Int) Int)
(declare-fun x1112 () Int)
(declare-fun x521 () Int)
(declare-fun x780 () Int)
(declare-fun x208 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x185 () Int)
(declare-fun x652 () Int)
(declare-fun x713 () Int)
(declare-fun x1213 () Int)
(declare-fun x769 () Int)
(declare-fun x229 () Bool)
(declare-fun x262 () x249)
(declare-fun x665 () x249)
(declare-fun x22 () Bool)
(declare-fun x522 () Int)
(declare-fun x167 () x249)
(declare-fun x646 () Int)
(declare-fun x216 () Int)
(declare-fun x923 () Int)
(declare-fun x1102 () Int)
(declare-fun x600 () x249)
(declare-fun x77 () Bool)
(declare-fun x760 () Bool)
(declare-fun x741 () Bool)
(declare-fun x735 () Int)
(declare-fun x253 () x249)
(declare-fun x401 () x249)
(declare-fun x166 () x249)
(declare-fun x324 () Int)
(declare-fun x1197 (x249) Int)
(declare-fun x15 () x249)
(declare-fun x122 () Bool)
(declare-fun x18 () Int)
(declare-fun x721 () Bool)
(declare-fun x98 () x249)
(declare-fun x762 () Bool)
(declare-fun x915 () Int)
(declare-fun x48 () Int)
(declare-fun x1146 () Int)
(declare-fun x1022 () Bool)
(declare-fun x1294 () Int)
(declare-fun x38 () Int)
(declare-fun x518 () Int)
(declare-fun x475 () Int)
(declare-fun x1223 () Bool)
(declare-fun x754 () x249)
(declare-fun x740 () Int)
(declare-fun x355 () Bool)
(declare-fun x118 () Int)
(declare-fun x43 () Int)
(declare-fun x966 () Int)
(declare-fun x232 () Int)
(declare-fun x389 () Bool)
(declare-fun x874 () x249)
(declare-fun x893 () Int)
(declare-fun x695 () x249)
(declare-fun x363 () Bool)
(declare-fun x1004 () Int)
(declare-fun x352 () Int)
(declare-fun x380 () x249)
(declare-fun x28 () Bool)
(declare-fun x261 () Int)
(declare-fun x282 () Bool)
(declare-fun x707 () Bool)
(declare-fun x148 () Int)
(declare-fun x163 () x249)
(declare-fun x523 () Int)
(declare-fun x869 () x249)
(declare-fun x284 () Int)
(declare-fun x778 () x249)
(declare-fun x254 () Int)
(declare-fun x90 () Bool)
(declare-fun x675 () Bool)
(declare-fun x852 () Bool)
(declare-fun x568 () Int)
(declare-fun x454 () Int)
(declare-fun x571 () Int)
(declare-fun x123 () Int)
(declare-fun x865 () Int)
(declare-fun x198 () x249)
(declare-fun x291 () Int)
(declare-fun x322 () Int)
(declare-fun x79 () Bool)
(declare-fun x811 () Int)
(declare-fun x1200 () Bool)
(declare-fun x1201 () Int)
(declare-fun x1143 () Int)
(declare-fun x920 () Bool)
(declare-fun x1139 () Int)
(declare-fun x667 () Int)
(declare-fun x529 () Bool)
(declare-fun x292 () x249)
(declare-fun x623 () Bool)
(declare-fun x823 () Int)
(declare-fun x1122 () x249)
(declare-fun x473 () Int)
(declare-fun x133 () Bool)
(declare-fun x1155 () x249)
(declare-fun x384 () Int)
(declare-fun x593 () Bool)
(declare-fun x1270 () Int)
(declare-fun x1295 () Int)
(declare-fun x681 () Int)
(declare-fun x885 () Bool)
(declare-fun x103 (x249) Int)
(declare-fun x1273 () Int)
(declare-fun x944 () Int)
(declare-fun x1245 () Bool)
(declare-fun x468 () Int)
(declare-fun x258 () Bool)
(declare-fun x315 () Int)
(declare-fun x347 () Bool)
(declare-fun x946 () Int)
(declare-fun x609 () Bool)
(declare-fun x1271 () Int)
(declare-fun x1216 () Int)
(declare-fun x220 () Int)
(declare-fun x272 () x249)
(declare-fun x206 () Bool)
(declare-fun x703 () Bool)
(declare-fun x409 () x249)
(declare-fun x807 () x249)
(declare-fun x54 () Int)
(declare-fun x223 () Int)
(declare-fun x1162 () Int)
(declare-fun x1183 () Bool)
(declare-fun x812 () Int)
(declare-fun x431 () Int)
(declare-fun x629 () Int)
(declare-fun x399 () Bool)
(declare-fun x941 () x249)
(declare-fun x215 () x249)
(declare-fun x1234 () Bool)
(declare-fun x779 () Int)
(declare-fun x1000 () Bool)
(declare-fun x801 () Bool)
(declare-fun x673 () Int)
(declare-fun x34 () x249)
(declare-fun x1097 () Bool)
(declare-fun x257 () x249)
(declare-fun x1017 () Bool)
(declare-fun x1268 () x249)
(declare-fun x857 () Bool)
(declare-fun x214 () Int)
(declare-fun x566 () Int)
(declare-fun x671 () Int)
(declare-fun x927 () x249)
(declare-fun x1205 () Bool)
(declare-fun x888 () Int)
(declare-fun x410 () Int)
(declare-fun x1149 () Bool)
(declare-fun x1072 () x249)
(declare-fun x750 () Int)
(declare-fun x896 () Int)
(declare-fun x80 () Int)
(declare-fun x702 () x249)
(declare-fun x462 () Int)
(declare-fun x1296 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x588 () Bool)
(declare-fun x299 () Int)
(declare-fun x1140 () Int)
(declare-fun x318 (Int) Int)
(declare-fun x603 () Bool)
(declare-fun x990 () Int)
(declare-fun x157 () Int)
(declare-fun x415 () Int)
(declare-fun x370 () Int)
(declare-fun x1026 () Int)
(declare-fun x1217 () Int)
(declare-fun x507 () Int)
(declare-fun x558 () Int)
(declare-fun x804 () Int)
(declare-fun x755 (Int) Int)
(declare-fun x643 () Int)
(declare-fun x159 () x249)
(declare-fun x586 () Bool)
(declare-fun x1190 () Int)
(declare-fun x9 () Int)
(declare-fun x371 () Int)
(declare-fun x1043 () Int)
(declare-fun x578 () Int)
(declare-fun x376 () Int)
(declare-fun x226 () Bool)
(declare-fun x1256 () Int)
(declare-fun x963 () x249)
(declare-fun x831 () Bool)
(declare-fun x398 () Bool)
(declare-fun x246 () Bool)
(declare-fun x64 () x249)
(declare-fun x476 () x249)
(declare-fun x183 () x249)
(declare-fun x78 () Bool)
(declare-fun x797 () Int)
(declare-fun x217 () Bool)
(declare-fun x1016 () x249)
(declare-fun x800 (Int) Int)
(declare-fun x172 () x249)
(declare-fun x245 () Int)
(declare-fun x72 () Int)
(declare-fun x385 () Int)
(declare-fun x813 () Int)
(declare-fun x121 () Int)
(declare-fun x1069 () Int)
(declare-fun x676 () Int)
(declare-fun x343 () Bool)
(declare-fun x1302 () Int)
(declare-fun x297 () Int)
(declare-fun x689 () Int)
(declare-fun x1028 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x818 () x249)
(declare-fun x544 () Bool)
(declare-fun x37 () x249)
(declare-fun x124 () Int)
(declare-fun x1090 (Int) Int)
(declare-fun x137 () Int)
(declare-fun x1088 () x249)
(declare-fun x466 () Bool)
(declare-fun x830 () x249)
(declare-fun x267 (x249) Int)
(declare-fun x891 () Bool)
(declare-fun x952 () Int)
(declare-fun x999 () Int)
(declare-fun x87 () Int)
(declare-fun x997 () Bool)
(declare-fun x1187 () Int)
(declare-fun x1031 () Int)
(declare-fun x539 () Int)
(declare-fun x723 () Bool)
(declare-fun x35 () x249)
(declare-fun x983 () Int)
(declare-fun x870 () x249)
(declare-fun x471 () x249)
(declare-fun x1030 (Int) Int)
(declare-fun x576 (Int) Int)
(declare-fun x1024 () Int)
(declare-fun x945 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x10 () Int)
(declare-fun x984 () Bool)
(declare-fun x928 () Int)
(declare-fun x786 () x249)
(declare-fun x1138 () Bool)
(declare-fun x895 () Bool)
(declare-fun x679 (Int) Int)
(declare-fun x732 () Int)
(declare-fun x228 () Int)
(declare-fun x119 () Bool)
(declare-fun x1248 () Int)
(declare-fun x396 () Bool)
(declare-fun x551 () Bool)
(declare-fun x313 () Bool)
(declare-fun x1202 () Int)
(declare-fun x52 () Bool)
(declare-fun x419 () Int)
(declare-fun x766 () x249)
(declare-fun x560 () Int)
(declare-fun x1210 () Int)
(declare-fun x393 () Bool)
(declare-fun x970 () Bool)
(declare-fun x768 () x249)
(declare-fun x820 () Bool)
(declare-fun x791 () Bool)
(declare-fun x21 () Int)
(declare-fun x549 () Bool)
(declare-fun x964 () Int)
(declare-fun x1184 () x249)
(declare-fun x436 () Int)
(declare-fun x875 () Int)
(declare-fun x406 () x249)
(declare-fun x862 () Int)
(declare-fun x921 () Int)
(declare-fun x987 () Int)
(declare-fun x224 () Int)
(declare-fun x357 () Int)
(declare-fun x116 () Bool)
(declare-fun x715 () Bool)
(declare-fun x696 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x706 () Int)
(declare-fun x438 () Bool)
(declare-fun x630 () Int)
(declare-fun x608 () x249)
(declare-fun x236 () Int)
(declare-fun x842 () Bool)
(declare-fun x1247 () x249)
(declare-fun x1104 () Int)
(declare-fun x289 () Int)
(declare-fun x26 () Int)
(declare-fun x71 () Int)
(declare-fun x1152 () Int)
(declare-fun x400 () Int)
(declare-fun x628 () x249)
(declare-fun x1173 (x249) Int)
(declare-fun x501 () Int)
(declare-fun x1279 () Int)
(declare-fun x1189 () Int)
(declare-fun x161 () x249)
(declare-fun x288 () Int)
(declare-fun x196 () Bool)
(declare-fun x441 () Bool)
(declare-fun x218 () x249)
(declare-fun x95 () Int)
(declare-fun x930 () Int)
(declare-fun x453 () Int)
(declare-fun x311 () Int)
(declare-fun x1021 () Int)
(declare-fun x1066 () x249)
(declare-fun x1284 () Int)
(declare-fun x550 () Int)
(declare-fun x743 () x249)
(declare-fun x209 () Int)
(declare-fun x961 () Int)
(declare-fun x1084 (x249) Int)
(declare-fun x943 () Bool)
(declare-fun x572 () Int)
(declare-fun x528 () Int)
(declare-fun x1229 () Bool)
(declare-fun x428 () Int)
(declare-fun x1207 () Bool)
(declare-fun x125 () Int)
(declare-fun x767 () Int)
(declare-fun x32 () Bool)
(declare-fun x503 () Int)
(declare-fun x847 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x761 () Int)
(declare-fun x1029 () Bool)
(declare-fun x814 () Int)
(declare-fun x481 () Int)
(declare-fun x46 () x249)
(declare-fun x143 () Int)
(declare-fun x957 () Bool)
(declare-fun x803 () Int)
(declare-fun x1003 () Int)
(declare-fun x729 () Int)
(declare-fun x437 () x249)
(declare-fun x873 () Int)
(declare-fun x1113 () Int)
(declare-fun x1136 () x249)
(declare-fun x1101 () Int)
(declare-fun x323 () Bool)
(declare-fun x1005 () Int)
(declare-fun x477 () x249)
(declare-fun x484 () x249)
(declare-fun x1231 (Int) x249)
(declare-fun x877 () Int)
(declare-fun x697 () Int)
(declare-fun x577 () Int)
(declare-fun x367 () Int)
(declare-fun x1250 () Int)
(declare-fun x616 () Bool)
(declare-fun x326 () Int)
(declare-fun x19 () Bool)
(declare-fun x418 () x249)
(declare-fun x1181 () Int)
(declare-fun x826 () Int)
(declare-fun x668 () Int)
(declare-fun x916 () x249)
(declare-fun x936 () Int)
(declare-fun x60 () Int)
(declare-fun x204 () x249)
(declare-fun x1254 () Int)
(declare-fun x55 () Int)
(declare-fun x177 () Int)
(declare-fun x1105 () Int)
(declare-fun x606 () Int)
(declare-fun x89 () Int)
(declare-fun x1057 () Bool)
(declare-fun x39 () Int)
(declare-fun x485 () x249)
(declare-fun x247 () Bool)
(declare-fun x1219 () Int)
(declare-fun x855 () Bool)
(declare-fun x144 () Int)
(declare-fun x1096 () Bool)
(declare-fun x903 () Int)
(declare-fun x303 () Int)
(declare-fun x237 () Int)
(declare-fun x659 () Int)
(declare-fun x1109 (x249) Int)
(declare-fun x573 () Bool)
(declare-fun x1282 () Int)
(declare-fun x716 () Int)
(declare-fun x971 () Int)
(declare-fun x924 () Int)
(declare-fun x981 () Int)
(declare-fun x910 (Int) Int)
(declare-fun x1244 () Int)
(declare-fun x334 () Int)
(declare-fun x433 () Bool)
(declare-fun x654 () Int)
(declare-fun x414 () Bool)
(declare-fun x231 () Int)
(declare-fun x59 () x249)
(declare-fun x708 () Bool)
(declare-fun x1035 () x249)
(declare-fun x489 () Int)
(declare-fun x394 () Bool)
(declare-fun x656 () Int)
(declare-fun x1130 () Bool)
(declare-fun x881 () Int)
(declare-fun x1211 () Bool)
(declare-fun x1103 () Int)
(declare-fun x932 () Int)
(declare-fun x31 () Int)
(declare-fun x641 () Bool)
(declare-fun x243 () Int)
(declare-fun x775 () Int)
(declare-fun x69 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x926 () Int)
(declare-fun x1039 () Int)
(declare-fun x191 () Bool)
(declare-fun x113 () Int)
(declare-fun x92 () Int)
(declare-fun x1154 () Int)
(declare-fun x354 () Bool)
(declare-fun x498 () Int)
(declare-fun x469 () Int)
(declare-fun x834 (Int) Int)
(declare-fun x1068 () x249)
(declare-fun x829 () Bool)
(declare-fun x186 () Bool)
(declare-fun x747 () Int)
(declare-fun x1045 () Int)
(declare-fun x634 () Int)
(declare-fun x1121 () Bool)
(declare-fun x117 () Int)
(declare-fun x41 () Int)
(declare-fun x1258 () Int)
(declare-fun x519 () x249)
(declare-fun x552 () Int)
(declare-fun x388 () Int)
(declare-fun x557 () Bool)
(declare-fun x25 () Bool)
(declare-fun x669 () Bool)
(declare-fun x788 () Bool)
(declare-fun x310 () x249)
(declare-fun x1018 () Bool)
(declare-fun x202 () Bool)
(declare-fun x828 () Int)
(declare-fun x240 () Int)
(declare-fun x517 () Int)
(declare-fun x962 () Bool)
(declare-fun x102 () Int)
(declare-fun x955 () Bool)
(declare-fun x1239 () Int)
(declare-fun x378 () Int)
(declare-fun x1125 () Bool)
(declare-fun x268 () x249)
(declare-fun x764 () x249)
(declare-fun x269 () Int)
(declare-fun x745 () Int)
(declare-fun x960 () Int)
(declare-fun x953 (x249) Int)
(declare-fun x579 () Int)
(declare-fun x985 () Int)
(declare-fun x1300 () Bool)
(declare-fun x479 () Int)
(declare-fun x1135 () Int)
(declare-fun x968 () Int)
(declare-fun x787 () Int)
(declare-fun x1169 () Int)
(declare-fun x1089 () Bool)
(declare-fun x714 () x249)
(declare-fun x850 () Bool)
(declare-fun x799 () Int)
(declare-fun x950 () Bool)
(declare-fun x1285 () x249)
(declare-fun x1188 () Bool)
(declare-fun x300 () Bool)
(declare-fun x81 () x249)
(declare-fun x693 () Int)
(declare-fun x145 () Int)
(declare-fun x1047 () Int)
(declare-fun x1133 () Bool)
(declare-fun x1292 () Int)
(declare-fun x460 () Bool)
(declare-fun x63 () Bool)
(declare-fun x194 () Bool)
(declare-fun x205 () Bool)
(declare-fun x580 () x249)
(declare-fun x440 () Int)
(declare-fun x128 () x249)
(declare-fun x815 (Int Int) Int)
(declare-fun x182 () Int)
(declare-fun x425 () Int)
(declare-fun x260 () x249)
(declare-fun x727 () Bool)
(declare-fun x386 () Bool)
(declare-fun x866 () x249)
(declare-fun x889 () Bool)
(declare-fun x674 () Bool)
(declare-fun x467 () Int)
(declare-fun x872 () Int)
(declare-fun x309 () x249)
(declare-fun x639 (x249) Int)
(declare-fun x691 () x249)
(declare-fun x738 () Int)
(declare-fun x153 () x249)
(declare-fun x1195 () Int)
(declare-fun x360 () Int)
(declare-fun x531 () Int)
(declare-fun x447 () Int)
(declare-fun x329 () Int)
(declare-fun x5 () x249)
(declare-fun x459 () x249)
(declare-fun x705 () Int)
(declare-fun x794 () Int)
(declare-fun x733 () Bool)
(declare-fun x342 () x249)
(declare-fun x377 () Int)
(declare-fun x320 () Int)
(declare-fun x596 (x249) Int)
(declare-fun x1060 () x249)
(declare-fun x13 () Int)
(declare-fun x651 () x249)
(declare-fun x1085 () Int)
(declare-fun x587 () Int)
(declare-fun x1304 () Int)
(declare-fun x301 () Int)
(declare-fun x439 () Int)
(declare-fun x1126 () Int)
(declare-fun x756 () Int)
(declare-fun x201 () Bool)
(declare-fun x965 () Int)
(declare-fun x931 () Int)
(declare-fun x853 () Bool)
(declare-fun x101 () Bool)
(declare-fun x248 () x249)
(declare-fun x884 () x249)
(declare-fun x512 () Int)
(declare-fun x74 () Int)
(declare-fun x1264 () Int)
(declare-fun x653 () Int)
(declare-fun x94 () Bool)
(declare-fun x510 () Bool)
(declare-fun x152 () x249)
(declare-fun x434 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x808 () x249)
(declare-fun x793 () Bool)
(declare-fun x614 () Int)
(declare-fun x890 () Bool)
(declare-fun x772 () Bool)
(declare-fun x1061 () Int)
(declare-fun x176 () x249)
(declare-fun x490 () Bool)
(declare-fun x263 () Bool)
(declare-fun x598 () Int)
(declare-fun x1168 () Bool)
(declare-fun x947 () Int)
(declare-fun x149 () Bool)
(declare-fun x611 () Int)
(declare-fun x685 () Int)
(declare-fun x821 () Int)
(declare-fun x252 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x919 () x249)
(declare-fun x991 () Bool)
(declare-fun x76 () Int)
(declare-fun x1002 () Bool)
(declare-fun x719 () x249)
(declare-fun x112 () Int)
(declare-fun x711 () x249)
(declare-fun x502 () Bool)
(declare-fun x1174 (Int) Int)
(declare-fun x717 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x509 () Bool)
(declare-fun x505 () x249)
(declare-fun x364 () Bool)
(declare-fun x692 () Int)
(declare-fun x904 () Bool)
(declare-fun x131 () Int)
(declare-fun x420 () Bool)
(declare-fun x184 () Int)
(declare-fun x992 () Int)
(declare-fun x633 () Int)
(declare-fun x949 () Int)
(declare-fun x937 () Int)
(declare-fun x480 () Bool)
(declare-fun x83 () Bool)
(declare-fun x207 () Int)
(declare-fun x392 () x249)
(declare-fun x1267 () Int)
(declare-fun x36 () Int)
(declare-fun x1059 () Int)
(declare-fun x912 () Bool)
(define-fun x954 ((x249 x249) (x416 Int)) x249 (ite ((_ is x97) x249) (x97 (x346 x249) (+ (x1252 x249) x416)) (ite ((_ is x1228) x249) (x1228 (x541 x249) (x250 x249) (+ x416 (x275 x249))) (x11 (+ x416 (x1171 x249))))))
(define-fun x49 ((x621 Int)) Int (ite (and (< x621 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x621 0)) x621 (- x621 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x187 ((x621 Int)) Int (ite (and (> 0 x621) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x621)) (+ x621 115792089237316195423570985008687907853269984665640564039457584007913129639936) x621))
(define-fun x308 ((x456 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x456) (<= 0 x456)))
(define-fun x805 ((x456 Int)) Bool (and (= (x815 115792089237316195423570985008687907853269984665640564039457584007913129639935 x456) x456) (= (x815 x456 115792089237316195423570985008687907853269984665640564039457584007913129639935) x456)))
(define-fun x294 ((x456 Int)) Bool (and (= (x815 0 x456) 0) (= 0 (x815 x456 0))))
(define-fun x1214 ((x456 Int)) Bool (= (x815 x456 x456) x456))
(define-fun x610 ((x456 Int)) Bool (and (x805 x456) (x1214 x456) (x294 x456)))
(define-fun x863 ((x456 Int)) Bool (= (x815 1461501637330902918203684832716283019655932542975 x456) (x815 1461501637330902918203684832716283019655932542975 (x815 1461501637330902918203684832716283019655932542975 x456))))
(define-fun x1083 ((x456 Int)) Bool (=> (and (>= x456 0) (< x456 1461501637330902918203684832716283019655932542976)) (= (x815 1461501637330902918203684832716283019655932542975 x456) x456)))
(define-fun x554 ((x456 Int)) Bool (=> (= (x815 1461501637330902918203684832716283019655932542975 x456) x456) (and (>= x456 0) (< x456 1461501637330902918203684832716283019655932542976))))
(define-fun x430 ((x456 Int)) Bool (=> (and (< x456 2923003274661805836407369665432566039311865085952) (<= 1461501637330902918203684832716283019655932542976 x456)) (= (- x456 1461501637330902918203684832716283019655932542976) (x815 1461501637330902918203684832716283019655932542975 x456))))
(define-fun x306 ((x456 Int) (x330 Int)) Bool (and (= x456 (+ (x815 1461501637330902918203684832716283019655932542975 x456) (* 1461501637330902918203684832716283019655932542976 x330))) (<= 0 x330)))
(define-fun x988 ((x456 Int) (x1064 Int)) Bool (and (x306 x456 x1064) (x554 x456) (x430 x456) (x863 x456) (x1083 x456)))
(define-fun x160 ((x456 Int) (x330 Int)) Bool (= (x815 x456 x330) (x815 x330 x456)))
(define-fun x765 ((x456 Int) (x330 Int)) Bool (and (=> (<= 0 x456) (>= x456 (x815 x456 x330))) (<= 0 (x815 x456 x330)) (=> (<= 0 x330) (>= x330 (x815 x456 x330)))))
(define-fun x316 ((x456 Int) (x330 Int)) Bool (and (x160 x456 x330) (x765 x456 x330)))
(define-fun x295 ((x456 Int) (x1064 Int)) Bool (and (x316 x456 1461501637330902918203684832716283019655932542975) (x988 x456 x1064)))
(define-fun x917 ((x456 Int)) Bool (= (x815 26959946667150639794667015087019630673637144422540572481103610249215 (x815 26959946667150639794667015087019630673637144422540572481103610249215 x456)) (x815 26959946667150639794667015087019630673637144422540572481103610249215 x456)))
(define-fun x193 ((x456 Int)) Bool (=> (and (>= x456 0) (< x456 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x815 26959946667150639794667015087019630673637144422540572481103610249215 x456) x456)))
(define-fun x494 ((x456 Int)) Bool (=> (= x456 (x815 26959946667150639794667015087019630673637144422540572481103610249215 x456)) (and (< x456 26959946667150639794667015087019630673637144422540572481103610249216) (<= 0 x456))))
(define-fun x493 ((x456 Int)) Bool (=> (and (>= x456 26959946667150639794667015087019630673637144422540572481103610249216) (> 53919893334301279589334030174039261347274288845081144962207220498432 x456)) (= (x815 26959946667150639794667015087019630673637144422540572481103610249215 x456) (- x456 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x1226 ((x456 Int) (x330 Int)) Bool (and (= (+ (x815 26959946667150639794667015087019630673637144422540572481103610249215 x456) (* x330 26959946667150639794667015087019630673637144422540572481103610249216)) x456) (>= x330 0)))
(define-fun x1157 ((x456 Int) (x1064 Int)) Bool (and (x917 x456) (x493 x456) (x193 x456) (x1226 x456 x1064) (x494 x456)))
(define-fun x24 ((x456 Int) (x1064 Int)) Bool (and (x1157 x456 x1064) (x316 x456 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x832 ((x456 Int)) Bool (= (x815 115792089237316195423570985008687907853269984665640564039457584007913129639904 x456) (x815 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x815 115792089237316195423570985008687907853269984665640564039457584007913129639904 x456))))
(define-fun x1166 ((x456 Int)) Bool (=> (and (> 32 x456) (<= 0 x456)) (= 0 (x815 115792089237316195423570985008687907853269984665640564039457584007913129639904 x456))))
(define-fun x86 ((x456 Int) (x330 Int) (x678 Int) (x597 Int)) Bool (and (< x597 1) (= (+ x330 (* x678 32) (* x597 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x456) (>= x330 0) (= (* 32 x678) (x815 115792089237316195423570985008687907853269984665640564039457584007913129639904 x456)) (> 32 x330) (>= x597 0) (< x678 3618502788666131106986593281521497120414687020801267626233049500247285301248) (<= 0 x678)))
(define-fun x1062 ((x456 Int) (x1203 Int) (x1215 Int) (x967 Int)) Bool (and (x86 x456 x1203 x1215 x967) (x1166 x456) (x832 x456)))
(define-fun x1278 ((x456 Int) (x1203 Int) (x1215 Int) (x967 Int)) Bool (and (x1062 x456 x1203 x1215 x967) (x316 x456 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x514 ((x561 Int)) Int (x661 x561))
(define-fun x1 ((x561 Int)) Int (ite (= x561 128) x1082 (x1174 x561)))
(define-fun x1180 ((x561 Int)) Int (ite (and (> (+ x633 160) x561) (<= 160 x561)) (x661 (+ (- x561 160) x617)) (x1 x561)))
(define-fun x180 ((x561 Int)) Int (ite (= x422 x561) 0 (x1180 x561)))
(define-fun x905 ((x561 Int)) Int (ite (and (> (+ x131 x899) x561) (<= x131 x561)) (x661 (+ (- x561 x131) x378)) (x672 x561)))
(define-fun x88 ((x561 x249)) Int (ite (= x927 x561) x865 (x103 x561)))
(define-fun x851 ((x561 Int)) Int (ite (= x561 x421) x821 (x710 x561)))
(define-fun x1071 ((x561 Int)) Int (ite (= x561 x197) x713 (x851 x561)))
(define-fun x849 ((x561 x249)) Int (ite (= x561 x260) x516 (x27 x561)))
(define-fun x1118 ((x561 x249)) Int (ite (= x561 x1115) x865 (x103 x561)))
(define-fun x871 ((x561 x249)) Int (ite (= x168 x561) x865 (x103 x561)))
(define-fun x1165 ((x561 Int)) Int (ite (and x895 x950 (not x1188)) (x710 x561) (x1071 x561)))
(define-fun x645 ((x561 Int)) Int (ite (= x209 x561) x497 (x1165 x561)))
(define-fun x1218 ((x561 x249)) Int (ite (= x1072 x561) x1140 (x1053 x561)))
(define-fun x283 ((x561 x249)) Int (ite (= x561 x272) x865 (x1109 x561)))
(define-fun x637 ((x561 x249)) Int (ite (= x1192 x561) x865 (x1109 x561)))
(define-fun x234 ((x561 Int)) Int (ite (= x561 x1039) x1279 (x1196 x561)))
(define-fun x1046 ((x561 x249)) Int (ite (= x561 x107) x865 (x742 x561)))
(define-fun x181 ((x561 Int)) Int (ite (= x561 x1256) x706 (x403 x561)))
(define-fun x684 ((x561 Int)) Int (ite (= x662 x561) x1277 (x181 x561)))
(define-fun x1266 ((x561 x249)) Int (ite (= x561 x835) x865 (x742 x561)))
(define-fun x737 ((x561 x249)) Int (ite (= x81 x561) x512 (x596 x561)))
(define-fun x993 ((x561 x249)) Int (ite (= x524 x561) x865 (x742 x561)))
(define-fun x699 ((x561 Int)) Int (ite (and (not x1246) x950 (not x1142) (not x1073) (not x1188)) (x684 x561) (ite (and (not x1246) (not x1073) x950 x1142 (not x1188)) (x684 x561) (x403 x561))))
(define-fun x615 ((x561 x249)) Int (ite (and (not x1246) (not x1142) (not x1188) x950 (not x1073)) (x737 x561) (x596 x561)))
(define-fun x748 ((x561 Int)) Int (ite (= x189 x561) x1286 (x699 x561)))
(define-fun x977 ((x561 x249)) Int (ite (= x561 x691) x865 (x601 x561)))
(define-fun x142 ((x561 x249)) Int (ite (= x268 x561) x44 (x620 x561)))
(define-fun x798 ((x561 x249)) Int (ite (= x561 x344) x865 (x601 x561)))
(define-fun x841 ((x561 x249)) Int (ite (and x950 (not x945) (not x1246) (not x1188)) (x142 x561) (x620 x561)))
(define-fun x792 ((x561 Int)) Int (ite (= x561 x117) x682 (x679 x561)))
(define-fun x170 ((x561 Int)) Int (ite (and (not x674) x950 (not x77) (not x1188) x191 (not x1246)) (x679 x561) (ite (and (not x77) (not x1246) (not x1188) x950 (not x191)) (x221 x561) (x792 x561))))
(define-fun x1230 ((x561 x249)) Int (ite (and x950 (not x1188) x1246) (x620 x561) (ite (and x1188 x950) (x1053 x561) (x841 x561))))
(define-fun x375 ((x561 Int)) Int (ite (and (not x1188) x1246 x950) (x403 x561) (ite (and x950 x1188) (x710 x561) (ite (and x950 (not x77) (not x1188) (not x1246)) (x170 x561) (x221 x561)))))
(define-fun x304 ((x561 x249)) Int (ite (and (not x1188) x950 x1246) (x742 x561) (ite (and x950 x1188) (x103 x561) (ite (and (not x1188) x950 (not x1246) (not x1142) (not x1073)) (x993 x561) (ite (and x950 x1142 (not x1073) (not x1246) (not x1188)) (x1266 x561) (x1046 x561))))))
(define-fun x211 ((x561 x249)) Int (ite (and x1246 x950 (not x1188)) (x601 x561) (ite (and x1188 x950) (x1109 x561) (ite (and (not x1188) x950 (not x1246) (not x945)) (x798 x561) (x977 x561)))))
(define-fun x395 ((x561 x249)) Int (ite (= x561 x1224) 0 (x953 x561)))
(define-fun x50 ((x561 x249)) Int (ite (and x950 (not x655) x1001) (x953 x561) (ite (and x950 (not x1001)) (x731 x561) (x395 x561))))
(define-fun x1013 ((x561 x249)) Int (ite (= x561 x894) 0 (x50 x561)))
(define-fun x491 ((x561 Int)) Int (ite (= x1124 x561) x978 (x375 x561)))
(define-fun x1287 ((x561 Int)) Int (ite (= x861 x561) x720 (x491 x561)))
(define-fun x158 ((x561 Int)) Int (ite (= x1151 x561) x1061 (x1287 x561)))
(define-fun x1114 ((x561 Int)) Int (ite (= x561 x332) x577 (x158 x561)))
(define-fun x424 ((x561 Int)) Int (ite (= x1216 x561) 32 (x1114 x561)))
(define-fun x1301 ((x561 Int)) Int (ite (= x561 x216) x1199 (x1161 x561)))
(define-fun x96 ((x561 Int)) Int (ite (= x561 x520) 0 (x318 x561)))
(define-fun x327 ((x561 Int)) Int (ite (= 0 x561) 1 (x213 x561)))
(define-fun x499 ((x561 Int)) Int (ite (= x561 0) 1 (x213 x561)))
(define-fun x1255 ((x561 Int)) Int (ite (and x593 x707) (x327 x561) (x499 x561)))
(define-fun x244 ((x561 Int)) Int (ite (= x1297 x561) x1257 (x1080 x561)))
(define-fun x781 ((x561 Int)) Int (ite (= x1297 x561) x200 (x1080 x561)))
(define-fun x130 ((x561 Int)) Int (ite (= x561 x1297) x1014 (x834 x561)))
(define-fun x274 ((x561 Int)) Int (ite (and (< x561 (+ x1014 x903)) (<= x903 x561)) (x1255 (+ 0 (- x561 x903))) (x130 x561)))
(define-fun x942 ((x561 Int)) Int (ite (and (not x1133) x470) (x274 x561) (x834 x561)))
(define-fun x222 ((x561 Int)) Int (ite (= x632 x561) x978 (x942 x561)))
(define-fun x698 ((x561 Int)) Int (ite (= x561 x125) x277 (x222 x561)))
(define-fun x1249 ((x561 Int)) Int (ite (= x860 x561) x1276 (x698 x561)))
(define-fun x333 ((x561 Int)) Int (ite (= x561 x948) x373 (x1249 x561)))
(define-fun x1019 ((x561 Int)) Int (ite (= x1105 x561) 32 (x333 x561)))
(define-fun x757 ((x561 Int)) Int (ite (= x561 x770) x552 (x238 x561)))
(define-fun x1178 ((x561 Int)) Int (ite (= x561 x1113) 0 (x800 x561)))
(define-fun x843 ((x561 x249)) Int (ite (= x561 (x1231 274184521717934524641157099916833587206)) x1003 (x391 x561)))
(define-fun x604 ((x561 x249)) Int (ite (= (x1231 x341) x561) x961 (x843 x561)))
(define-fun x30 ((x561 x249)) Int (ite (= x561 (x1231 x341)) x95 (x604 x561)))
(define-fun x23 ((x561 x249)) Int (ite (= x561 (x1231 274184521717934524641157099916833587206)) x72 (x30 x561)))
(define-fun x783 ((x561 x249)) Int (ite (= (x1231 274184521717934524641157099916833587206) x561) x179 (x23 x561)))
(define-fun x82 ((x561 x249)) Int (ite (= x561 (x1231 x384)) x489 (x783 x561)))
(define-fun x154 ((x561 x249)) Int (ite (= x776 x561) x642 (x1289 x561)))
(define-fun x973 ((x561 x249)) Int (ite (= x561 x608) x697 (x154 x561)))
(define-fun x644 ((x561 x249)) Int (ite (and x593 x707) (x973 x561) (x1289 x561)))
(define-fun x1251 ((x561 x249)) Int (ite (= x218 x561) x279 (x644 x561)))
(define-fun x426 ((x561 Int)) Int (ite (= 0 x561) 1 (x755 x561)))
(define-fun x1093 ((x561 Int)) Int (ite (= x561 x1281) x1167 (x589 x561)))
(define-fun x701 ((x561 x249)) Int (ite (= x561 x45) x121 (x192 x561)))
(define-fun x976 ((x561 x249)) Int (ite (= x1068 x561) x521 (x701 x561)))
(define-fun x839 ((x561 x249)) Int (ite (and x593 x707) (x192 x561) (x976 x561)))
(define-fun x584 ((x561 x249)) Int (ite (= x128 x561) x185 (x839 x561)))
(define-fun x100 ((x561 Int)) Int (ite (= x561 0) 1 (x755 x561)))
(define-fun x590 ((x561 Int)) Int (ite (= x1281 x561) x1110 (x589 x561)))
(define-fun x858 ((x561 Int)) Int (ite (and x892 x194) (x426 x561) (x100 x561)))
(define-fun x412 ((x561 x249)) Int (ite (= (x1231 x384) x561) x1248 (x82 x561)))
(define-fun x444 ((x561 Int)) Int (ite (= x1281 x561) x759 (x120 x561)))
(define-fun x1170 ((x561 Int)) Int (ite (and (<= x777 x561) (< x561 (+ x759 x777))) (x858 (+ (- x561 x777) 0)) (x444 x561)))
(define-fun x478 ((x561 Int)) Int (ite (and x1100 x852) (x120 x561) (x1170 x561)))
(define-fun x178 ((x456 Int)) Bool (=> (and (not (= 2418364589 x456)) (not (= x456 2532887486)) (not (= x456 759532456)) (not (= 468353030 x456)) (not (= x456 2960351575)) (not (= 2061678023 x456)) (not (= x456 142201243)) (not (= 2743102681 x456)) (not (= 911411945 x456)) (not (= x456 115792089237316195423570985008687907853269984665640564039457)) (not (= 2514000705 x456)) (not (= x456 2798343961)) (not (= 87118632 x456)) (not (= x456 1986467848)) (not (= x456 2258409472)) (not (= x456 2512682246)) (not (= 2293535753 x456)) (not (= x456 18446744073709551615)) (> x456 10000) (not (= x456 2211524764)) (not (= x456 274184521717934524641157099916833587214)) (not (= x456 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 1889567281 x456)) (not (= x456 69947311)) (not (= 274184521717934524641157099916833587206 x456)) (not (= x456 2835717307)) (not (= 649617121 x456)) (not (= x456 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 1000000000000000000 x456)) (not (= 1461501637330902918203684832716283019655932542975 x456)) (not (= 604800 x456)) (not (= x456 826074471)) (not (= x456 635128645)) (not (= 2690754053 x456)) (not (= x456 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x456)) (not (= 274184521717934524641157099916833587218 x456)) (not (= x456 2764855426)) (not (= x456 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= x456 1968616202))) (not ((_ is x11) (x1231 x456)))))
(assert (= (x403 x61) (ite (and (not x1188) x950 x441) (x836 x61) (ite (and (not x363) (not x1188) (not x441) x276 x950) (x1196 x61) (ite (and x950 (not x276) (not x441) (not x1188)) (x836 x61) (x234 x61))))))
(assert (x308 x384))
(assert (x308 x123))
(assert (x308 x1143))
(assert (x178 x102))
(assert (= (x639 (x1231 x767)) x767))
(assert (= (x1030 x507) (ite (= x1036 x507) x1267 (x1298 x507))))
(assert (x308 x279))
(assert (x308 x577))
(assert (x308 x1201))
(assert (x178 x243))
(assert (x308 x802))
(assert (=> (<= x681 10000) (= (x1231 x681) (x11 x681))))
(assert (x308 x592))
(assert (x178 x1156))
(assert (x308 x155))
(assert (= (=> (= x721 (= x341 274184521717934524641157099916833587214)) (and (=> (not x721) x774) (=> (and (= (x1228 (x1231 274184521717934524641157099916833587206) (x11 1) 0) x45) (= x1284 76450787359836037641860180984291677749980919077056822294353438043884394381312) x721 (= x972 x745) (= x951 (x1228 (x1231 x666) (x11 1) 0)) (not (= 2514000705 x132)) (= 1 x1044) (not (= x132 1889567281)) (not (= 649617121 x132)) (= x549 (or (> x1190 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1190 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1190) true)))) (= (x267 (x1231 274184521717934524641157099916833587214)) x143) (= x453 x1152) (= x7 x71) (<= 0 x71) (= 32 x1014) (<= x43 1461501637330902918203684832716283019655932542975) (not (> 4 x972)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x71) (= (x815 1461501637330902918203684832716283019655932542975 x43) x666) (= (+ x7 x453) x521) (= x1158 x720) (= x132 2835717307) (= x71 (x701 x951)) (= x1159 (> x1158 x1213)) (not x1160) (= (x815 1461501637330902918203684832716283019655932542975 x43) x607) (>= x1213 0) (= (x187 (- x972 4)) x1190) (= x1068 (x1228 (x1231 x607) (x11 1) 0)) (<= x1213 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x972 68) (= x1213 (x192 x64)) (= x1158 x1152) (not x549) (= x121 (x187 (- x1213 x1158))) (not x1159) (not (= 826074471 x132)) (= x67 x200) (= x408 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x71 x1152))) (= x64 (x1228 (x1231 274184521717934524641157099916833587206) (x11 1) 0)) (= x862 x43) (not (< x132 649617121)) (not x408) (= 274184521717934524641157099916833587206 x370) (= (< x1213 x1152) x1160) (> x143 0) (< (+ x1152 x71) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x725 274184521717934524641157099916833587206)) x355))) x227))
(assert (x308 x454))
(assert (x24 x1049 x1103))
(assert (=> (<= x928 10000) (= (x11 x928) (x1231 x928))))
(assert (x308 x113))
(assert (x308 x622))
(assert (= (x1174 x1153) 0))
(assert (x308 x1163))
(assert (= 2835717307 (x639 (x11 2835717307))))
(assert (= (x576 x507) (ite (= x319 x507) x653 (x825 x507))))
(assert (x308 x440))
(assert (=> (<= x531 10000) (= (x11 x531) (x1231 x531))))
(assert (=> (<= x280 10000) (= (x11 x280) (x1231 x280))))
(assert (=> (>= 10000 x341) (= (x11 x341) (x1231 x341))))
(assert (= x772 (=> (and (not (= x1244 2512682246)) (< x1244 2960351575) (= x80 (x267 (x1231 274184521717934524641157099916833587206))) (not (= x1244 2418364589)) (not (> 2293535753 x1244)) (= x854 x60) (> x80 0) (>= 1461501637330902918203684832716283019655932542975 x137) (< x1244 2690754053) (= (x1228 (x1231 x664) x530 0) x477) (= (x1228 (x1231 x404) (x11 4) 0) x530) (= (x1228 (x1231 x907) x477 0) x916) (<= x854 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x907) (= (x1228 (x1231 x137) x916 0) x830) (<= 0 x854) (= 2532887486 x1244) (= x854 (x1288 x830)) (>= 1461501637330902918203684832716283019655932542975 x664) (not (= x1244 2293535753))) x509)))
(assert (x308 x111))
(assert (= (ite (= x915 x61) x535 (x836 x61)) (x1196 x61)))
(assert (= (x1231 1968616202) (x11 1968616202)))
(assert (x308 x425))
(assert (x308 x84))
(assert (x308 x296))
(assert (= x845 (x639 (x1231 x845))))
(assert (= (x639 (x1231 x704)) x704))
(assert (x308 x535))
(assert (x308 x613))
(assert (= (ite (= x640 x61) x87 (x645 x61)) (x836 x61)))
(assert (x178 x349))
(assert (= (x1174 224) 0))
(assert (= (x1196 x948) (ite (= x915 x948) x535 (x836 x948))))
(assert (x308 x404))
(assert (x308 x299))
(assert (x308 x926))
(assert (= (ite (and x593 x707) (x244 x1012) (x781 x1012)) (x834 x1012)))
(assert (= (ite (= x68 x334) x906 (x1090 x68)) (x1161 x68)))
(assert (x178 x881))
(assert (= (x672 x61) (ite (= x61 x1305) x1082 (x180 x61))))
(assert (x178 x473))
(assert (= (x318 x1012) (ite (and x1041 x356 x563 (not x883) x1000 x94) (x1161 x1012) (ite (and x563 x1000 x94 (not x1041) x356) (x1090 x1012) (ite (and x356 x563 (not x94) x1000) (x1030 x1012) (ite (and x563 (not x1000) x356) (x1298 x1012) (x1301 x1012)))))))
(assert (x308 x769))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x639 (x11 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (x178 x452))
(assert (x295 x488 x301))
(assert (x178 x415))
(assert (x178 x921))
(assert (= (x825 x68) (ite (= x68 x1186) x232 (x910 x68))))
(assert (x178 x1261))
(assert (= (x1196 x410) (ite (= x915 x410) x535 (x836 x410))))
(assert (= (x403 x1198) (ite (and (not x1188) x950 x441) (x836 x1198) (ite (and x276 (not x363) (not x441) (not x1188) x950) (x1196 x1198) (ite (and x950 (not x276) (not x441) (not x1188)) (x836 x1198) (x234 x1198))))))
(assert (= (ite (and x356 (not x986) x563) (x318 x722) (x96 x722)) (x1080 x722)))
(assert (= (ite (= x2 x1036) x1267 (x1298 x2)) (x1030 x2)))
(assert (x308 x992))
(assert (x178 x677))
(assert (x308 x400))
(assert (x308 x1254))
(assert (x308 x1244))
(assert (= 0 (x1174 x948)))
(assert (x308 x692))
(assert (= (x589 x1012) (ite (and x975 (not x73) x63) (x800 x1012) (x1178 x1012))))
(assert (x308 x457))
(assert (= (ite (and x441 x950 (not x1188)) (x836 x1305) (ite (and (not x1188) (not x441) (not x363) x950 x276) (x1196 x1305) (ite (and (not x1188) (not x441) x950 (not x276)) (x836 x1305) (x234 x1305)))) (x403 x1305)))
(assert (=> (<= x1195 10000) (= (x11 x1195) (x1231 x1195))))
(assert (x308 x1075))
(assert (x308 x670))
(assert (= (x834 x402) (ite (and x593 x707) (x244 x402) (x781 x402))))
(assert (x610 x385))
(assert (= (x836 x915) (ite (= x640 x915) x87 (x645 x915))))
(assert (x308 x429))
(assert (= x109 x339))
(assert (x610 x918))
(assert (= (x620 x215) (ite (and (not x1188) x950 x47) (x1053 x215) (x1218 x215))))
(assert (x308 x483))
(assert (=> (>= 10000 x790) (= (x1231 x790) (x11 x790))))
(assert (x178 x814))
(assert (x308 x1008))
(assert (= (x1196 x722) (ite (= x722 x915) x535 (x836 x722))))
(assert (x308 x634))
(assert (x308 x837))
(assert (x295 x787 x823))
(assert (=> (<= x436 10000) (= (x1231 x436) (x11 x436))))
(assert (= (x639 (x1231 x537)) x537))
(assert (x308 x1172))
(assert (= 2690754053 (x639 (x11 2690754053))))
(assert (=> (>= 10000 x1264) (= (x1231 x1264) (x11 x1264))))
(assert (= 759532456 (x639 (x11 759532456))))
(assert (x308 x903))
(assert (x308 x488))
(assert (x308 x1233))
(assert (= (ite (and x895 x950 (not x1188)) (x27 x472) (ite (and x950 x939 (not x895) (not x1188)) (x27 x472) (x849 x472))) (x596 x472)))
(assert (x308 x728))
(assert (= x563 x950))
(assert (= (x1090 x419) (ite (= x419 x1055) x1043 (x1030 x419))))
(assert (= (x1174 x117) 0))
(assert (=> (>= 10000 x239) (= (x1231 x239) (x11 x239))))
(assert (= (x639 (x1231 x1189)) x1189))
(assert (x308 x515))
(assert (x308 x1202))
(assert (= (x672 x402) (ite (= x402 x1305) x1082 (x180 x402))))
(assert (x308 x1294))
(assert (=> (<= x1217 10000) (= (x1231 x1217) (x11 x1217))))
(assert (x308 x732))
(assert (= (x639 (x1231 x979)) x979))
(assert (x178 x289))
(assert (x308 x812))
(assert (x308 x865))
(assert (x308 x654))
(assert (=> (<= x1112 10000) (= (x1231 x1112) (x11 x1112))))
(assert (x308 x629))
(assert (x178 x321))
(assert (x178 x157))
(assert (x308 x826))
(assert (x308 x1050))
(assert (x1278 x585 x311 x712 x527))
(assert (= (ite (= x150 x472) 0 (x731 x472)) (x953 x472)))
(assert (x178 x136))
(assert (x308 x121))
(assert (x308 x239))
(assert (= (x221 x189) (ite (= x189 x57) x1273 (x748 x189))))
(assert (= (x1030 x948) (ite (= x1036 x948) x1267 (x1298 x948))))
(assert (= (x639 (x1231 x1126)) x1126))
(assert (= (x836 x1198) (ite (= x640 x1198) x87 (x645 x1198))))
(assert (=> (<= x666 10000) (= (x1231 x666) (x11 x666))))
(assert (= x348 (x639 (x1231 x348))))
(assert (x308 x305))
(assert (x178 x750))
(assert (x308 x225))
(assert (=> (<= x1076 10000) (= (x11 x1076) (x1231 x1076))))
(assert (x308 x284))
(assert (x308 x1009))
(assert (= (ite (and x975 x63 (not x73)) (x800 x1198) (x1178 x1198)) (x589 x1198)))
(assert (= (ite (= x640 x1305) x87 (x645 x1305)) (x836 x1305)))
(assert (= (x221 x332) (ite (= x57 x332) x1273 (x748 x332))))
(assert (x610 x1181))
(assert (x308 x1222))
(assert (x308 x966))
(assert (= x289 (x639 (x1231 x289))))
(assert (=> (<= x417 10000) (= (x1231 x417) (x11 x417))))
(assert (x308 x1086))
(assert (x308 x640))
(assert (= (ite (= x640 x402) x87 (x645 x402)) (x836 x402)))
(assert (x308 x789))
(assert (= (x1231 2418364589) (x11 2418364589)))
(assert (= x1037 (x639 (x1231 x1037))))
(assert (x178 x91))
(assert (= (x1298 x1012) (ite (= x469 x1012) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x1012))))
(assert (= (ite (= x1305 x419) x1082 (x180 x419)) (x672 x419)))
(assert (x308 x241))
(assert (x178 x155))
(assert (= (x1196 x1012) (ite (= x1012 x915) x535 (x836 x1012))))
(assert (x308 x468))
(assert (= (ite (= x2 x915) x535 (x836 x2)) (x1196 x2)))
(assert (= (x1196 x332) (ite (= x332 x915) x535 (x836 x332))))
(assert (x308 x57))
(assert (= 274184521717934524641157099916833587214 (x639 (x11 274184521717934524641157099916833587214))))
(assert (x308 x753))
(assert (= (x639 (x1231 x155)) x155))
(assert (= x87 (x836 x640)))
(assert (x308 x60))
(assert (x178 x21))
(assert (x308 x676))
(assert (= x303 (x639 (x1231 x303))))
(assert (= (x953 x660) (ite (= x660 x150) 0 (x731 x660))))
(assert (x308 x681))
(assert (= (x11 2258409472) (x1231 2258409472)))
(assert (= x101 x127))
(assert (x308 x906))
(assert (x610 x804))
(assert (x308 x700))
(assert (= x991 (=> (and (= x852 (= 0 x759)) (or (and (not x852) (= x1281 x1198) (= (x49 (+ x1105 96)) x777)) (and x852 (= 96 x1198))) (= x559 (x478 x1198)) (= x386 (< (x412 (x1231 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x323) (or (not x1022) (and (= (x478 x1012) x265) (< 0 x265) (= (not x79) x898) (= x1012 (x49 (+ 32 x1198))) x1022 (= (= x265 0) x79) (= (x478 x1198) x169) (= x371 x265) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x169) (and (< x169 32) (= (<= x169 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (ite x898 1 0) x371))) (= x323 (< 2 x1082)) (not (= 0 x511)) (= (x82 (x1231 x384)) x1248) (= (< 0 x559) x1022) x386) x448)))
(assert (x308 x280))
(assert (x308 x359))
(assert (x308 x1139))
(assert (= (x672 x410) (ite (= x410 x1305) x1082 (x180 x410))))
(assert (= (x639 (x1231 x254)) x254))
(assert (x308 x469))
(assert (x178 x1221))
(assert (x308 x934))
(assert (x308 x978))
(assert (= (ite (= x1153 x57) x1273 (x748 x1153)) (x221 x1153)))
(assert (x308 x458))
(assert (= (or (and x859 x857) (and x892 x194)) x1100))
(assert (x308 x990))
(assert (x308 x516))
(assert (=> (>= 10000 x875) (= (x11 x875) (x1231 x875))))
(assert (x308 x893))
(assert (x308 x143))
(assert (x308 x1061))
(assert (x308 x881))
(assert (= (ite (= x1131 x469) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x1131)) (x1298 x1131)))
(assert (x295 x385 x1134))
(assert (x308 x569))
(assert (= (x836 x419) (ite (= x419 x640) x87 (x645 x419))))
(assert (= (x639 (x1231 x425)) x425))
(assert (= (ite (and x356 x94 x1000 x1041 x563 (not x883)) (x1161 x948) (ite (and x1000 (not x1041) x563 x94 x356) (x1090 x948) (ite (and x1000 (not x94) x563 x356) (x1030 x948) (ite (and (not x1000) x563 x356) (x1298 x948) (x1301 x948))))) (x318 x948)))
(assert (= (x679 x402) (ite (= x402 x1272) x474 (x221 x402))))
(assert (x308 x571))
(assert (x308 x937))
(assert (x308 x1070))
(assert (x308 x285))
(assert (= x293 (x639 (x1231 x293))))
(assert (=> (<= x732 10000) (= (x11 x732) (x1231 x732))))
(assert (x178 x450))
(assert (= (x836 x1039) (ite (= x1039 x640) x87 (x645 x1039))))
(assert (x308 x548))
(assert (x308 x560))
(assert (x308 x940))
(assert (= x91 (x639 (x1231 x91))))
(assert (= x21 (x639 (x1231 x21))))
(assert (= (x1174 x402) 0))
(assert (=> (>= 10000 x92) (= (x1231 x92) (x11 x92))))
(assert (x308 x1282))
(assert (=> (<= x845 10000) (= (x1231 x845) (x11 x845))))
(assert (= 826074471 (x639 (x11 826074471))))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x639 (x11 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (= x897 (=> (and (<= x880 1461501637330902918203684832716283019655932542975) (not (= 2211524764 x873)) (not (= 2061678023 x873)) (>= x1026 0) (not (> 911411945 x873)) (= x876 (x1228 (x1231 x700) (x11 6) 0)) (> x575 0) (not (< x873 1968616202)) (< x873 2293535753) (= (x211 x807) x1026) (= x582 x1026) (= (x267 (x1231 274184521717934524641157099916833587206)) x575) (= 2258409472 x873) (not (= 1986467848 x873)) (= (x1228 (x1231 x880) x876 0) x807) (<= x1026 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 1968616202 x873))) (=> (and (= x75 x582) (= x225 x968) (= x240 x85) (= x958 x983)) x1296))))
(assert (= x1078 x594))
(assert (= (x639 (x11 649617121)) 649617121))
(assert (= (x679 x68) (ite (= x68 x1272) x474 (x221 x68))))
(assert (x178 x1045))
(assert (=> (<= x921 10000) (= (x1231 x921) (x11 x921))))
(assert (=> (<= x522 10000) (= (x11 x522) (x1231 x522))))
(assert (= 911411945 (x639 (x11 911411945))))
(assert (x308 x390))
(assert (x610 x787))
(assert (= (x1231 1889567281) (x11 1889567281)))
(assert (x308 x539))
(assert (x308 x921))
(assert (x308 x598))
(assert (x308 x473))
(assert (=> (>= 10000 x978) (= (x11 x978) (x1231 x978))))
(assert (=> (<= x10 10000) (= (x1231 x10) (x11 x10))))
(assert (x308 x838))
(assert (x308 x1250))
(assert (x308 x617))
(assert (x308 x91))
(assert (x610 x312))
(assert (= (x1030 x1153) (ite (= x1036 x1153) x1267 (x1298 x1153))))
(assert (x308 x387))
(assert (x308 x1283))
(assert (=> (>= 10000 x789) (= (x1231 x789) (x11 x789))))
(assert (= x978 (x639 (x1231 x978))))
(assert (=> (<= x443 10000) (= (x11 x443) (x1231 x443))))
(assert (= x709 x127))
(assert (x610 x1086))
(assert (= (x1161 x1198) (ite (= x334 x1198) x906 (x1090 x1198))))
(assert (x178 x1077))
(assert (x308 x1277))
(assert (x308 x814))
(assert (=> (<= x533 10000) (= (x11 x533) (x1231 x533))))
(assert (= (x639 (x1231 x779)) x779))
(assert (= x122 (=> (and (= x627 true) (= (<= x376 x1206) x1212) (= x376 x156)) x627)))
(assert (= (x1231 2690754053) (x11 2690754053)))
(assert (= (ite (and (not x1188) x441 x950) (x836 x1153) (ite (and (not x1188) (not x441) (not x363) x276 x950) (x1196 x1153) (ite (and x950 (not x1188) (not x276) (not x441)) (x836 x1153) (x234 x1153)))) (x403 x1153)))
(assert (x308 x1104))
(assert (x178 274184521717934524641157099916833587218))
(assert (x308 x664))
(assert (= x619 (x639 (x1231 x619))))
(assert (= (x639 (x1231 x1104)) x1104))
(assert (x308 x888))
(assert (x308 x1048))
(assert (x178 x619))
(assert (x308 x1239))
(assert (= (x672 x915) (ite (= x1305 x915) x1082 (x180 x915))))
(assert (x308 x55))
(assert (= (x710 x68) (ite (and x950 x547) (x672 x68) (x905 x68))))
(assert (x308 x479))
(assert (x308 x349))
(assert (x308 x417))
(assert (= (x800 x1012) (ite (and x1111 x63 x975 x32 (not x347) x856) (x238 x1012) (ite (and x856 x32 x63 x975 (not x1111)) (x576 x1012) (ite (and x975 x32 (not x856) x63) (x825 x1012) (ite (and x975 x63 (not x32)) (x910 x1012) (x757 x1012)))))))
(assert (=> (<= x907 10000) (= (x11 x907) (x1231 x907))))
(assert (= (x710 x915) (ite (and x950 x547) (x672 x915) (x905 x915))))
(assert (=> (>= 10000 x704) (= (x1231 x704) (x11 x704))))
(assert (= x237 (x639 (x1231 x237))))
(assert (x295 x1181 x606))
(assert (x308 x1177))
(assert (= (x639 (x1231 x321)) x321))
(assert (= (ite (= x1012 x1186) x232 (x910 x1012)) (x825 x1012)))
(assert (= (ite (= x390 x507) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1019 x507)) (x910 x507)))
(assert (x308 x10))
(assert (= (x620 x884) (ite (and (not x1188) x47 x950) (x1053 x884) (x1218 x884))))
(assert (x308 x686))
(assert (x308 x240))
(assert (= (x836 x332) (ite (= x332 x640) x87 (x645 x332))))
(assert (=> (<= x21 10000) (= (x11 x21) (x1231 x21))))
(assert (=> (<= x157 10000) (= (x1231 x157) (x11 x157))))
(assert (x308 x1194))
(assert (= 0 (x1174 160)))
(assert (x308 x614))
(assert (x308 x582))
(assert (x308 x1186))
(assert (= (x318 x507) (ite (and x1000 x563 x356 x94 (not x883) x1041) (x1161 x507) (ite (and (not x1041) x356 x563 x1000 x94) (x1090 x507) (ite (and x356 x563 x1000 (not x94)) (x1030 x507) (ite (and x563 (not x1000) x356) (x1298 x507) (x1301 x507)))))))
(assert (= (ite (and x563 (not x986) x356) (x318 x1012) (x96 x1012)) (x1080 x1012)))
(assert (= x668 (x639 (x1231 x668))))
(assert (= x368 x1205))
(assert (x308 x410))
(assert (= (ite (and (not x986) x563 x356) (x318 x1153) (x96 x1153)) (x1080 x1153)))
(assert (= x19 (=> (and (= (x1288 x5) x569) (<= x1112 1461501637330902918203684832716283019655932542975) (= 2532887486 x461) (not (> 2293535753 x461)) (not (= 2418364589 x461)) (> 2960351575 x461) (= x156 x569) (= (x1228 (x1231 x522) (x11 4) 0) x331) (< x461 2690754053) (< 0 x93) (= (x267 (x1231 274184521717934524641157099916833587206)) x93) (>= 1461501637330902918203684832716283019655932542975 x479) (= x176 (x1228 (x1231 x1112) x248 0)) (>= x569 0) (= x5 (x1228 (x1231 x415) x176 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x569) (= x248 (x1228 (x1231 x479) x331 0)) (not (= x461 2293535753)) (<= x415 1461501637330902918203684832716283019655932542975) (not (= 2512682246 x461))) x122)))
(assert (= (x639 (x1231 x473)) x473))
(assert (= (x639 (x1231 x1085)) x1085))
(assert (x308 x1069))
(assert (= x1007 (=> (and (not (> 1968616202 x756)) (<= 0 x1137) (> x467 0) (= x771 (x1228 (x1231 x417) (x11 6) 0)) (not (= 2061678023 x756)) (not (< x756 911411945)) (= (x1228 (x1231 x928) x771 0) x383) (<= x928 1461501637330902918203684832716283019655932542975) (not (= x756 1968616202)) (= x467 (x267 (x1231 274184521717934524641157099916833587206))) (> 2293535753 x756) (= x756 2258409472) (= x1137 x1129) (not (= 2211524764 x756)) (= x1137 (x1109 x383)) (<= x1137 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 1986467848 x756))) (=> (and x1164 (= x144 x240) (= 0 x372) (= x352 x1129) (= x188 x983) (= x1164 (not (= 0 x352)))) x658))))
(assert (= (x639 (x1231 x732)) x732))
(assert (x308 x759))
(assert (x178 x880))
(assert (= x393 (=> (and (<= x171 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x501 2532887486) (<= x1045 1461501637330902918203684832716283019655932542975) (= x401 (x1228 (x1231 x881) (x11 4) 0)) (= (x1228 (x1231 x436) x1011 0) x257) (>= 1461501637330902918203684832716283019655932542975 x436) (= x462 (x267 (x1231 274184521717934524641157099916833587206))) (< x501 2690754053) (not (< x501 2293535753)) (= (x1228 (x1231 x1045) x257 0) x626) (not (= 2418364589 x501)) (= (x1288 x626) x171) (= x1011 (x1228 (x1231 x591) x401 0)) (< x501 2960351575) (>= 1461501637330902918203684832716283019655932542975 x591) (not (= x501 2512682246)) (< 0 x462) (>= x171 0) (not (= 2293535753 x501)) (= x171 x685)) (=> (and (= (mod (* 32 x1082) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x515) (not (< x378 x940)) (= (= 0 x1082) x547) (or (and x135 (not (> x571 1)) (= x571 (x187 (- x366 1))) (not (> 1 x366)) (= (< 1 x366) x694) (or (not x694) (and x694 (= x210 (x180 160)) (= (x180 192) x918) (= (x180 128) x728) (not (= x223 x428)) (= x223 (x815 1461501637330902918203684832716283019655932542975 x210)) (= (x815 1461501637330902918203684832716283019655932542975 x918) x428) (= (< 2 x366) x760) (or (and x760 (= (> x366 3) x397) (= (x180 128) x1294) (not x397) (= x1086 (x180 224)) (< 0 x1294) (= x1177 (x180 128)) (= x572 (x815 1461501637330902918203684832716283019655932542975 x1086)) (not (= x572 x744)) (= x744 (x815 1461501637330902918203684832716283019655932542975 x488)) (= (x180 160) x488) (< 2 x1177)) (not x760)) (< 1 x933) (= (x180 128) x933) (< 0 x728)))) (not x135)) (not (> 1 x366)) (not (= 69947311 x638)) (= x735 x787) (>= x862 0) (> x184 0) (<= 0 x1236) (= x1305 (x49 (+ 160 x164))) (= true (<= x378 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1221 x686) (not (< 18446744073709551615 x1150)) (= x826 0) (= x106 x1219) (= (x661 x431) x1082) (<= x862 1461501637330902918203684832716283019655932542975) (= (x180 128) x366) (< 131 x378) (= (x49 (+ x633 32)) x1222) (= x184 (x267 (x1231 274184521717934524641157099916833587206))) (= x1243 x1221) (= x940 (x49 (+ x617 x515))) (> 2293535753 x638) (= (x49 (+ 4 x1101)) x431) (= x451 x685) (= (>= x290 x451) x1238) (= x865 x26) (= (and x460 x1238) x891) (= (< x767 x1221) x1001) (= (mod (* 32 x1082) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x164) (= (x187 (- x366 1)) x1292) (= x1101 x1150) (<= 0 x686) (= x1236 x1219) (= x693 (x49 (+ 32 x164))) (or (and (= (mod (* 32 x1082) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x899) (not x547) (= (x49 (+ 160 x693)) x131)) x547) (< x638 911411945) (<= x787 1461501637330902918203684832716283019655932542975) (<= 0 x220) (or (and x1001 (= (x1228 (x1231 x978) x778 0) x150) (= (x1228 (x1231 x789) x869 0) x778) (= x789 (x815 1461501637330902918203684832716283019655932542975 x787)) (or (and (= x1096 (< x687 x1243)) (= x687 (x49 (+ 2 x767))) (not x1096) (= x766 (x1228 (x1231 x1263) (x11 3) 0)) (= (x815 1461501637330902918203684832716283019655932542975 x787) x280) (= x746 (x1228 (x1231 x280) x766 0)) (= (x815 1461501637330902918203684832716283019655932542975 x787) x1262) x655 (= x1224 (x1228 (x1231 x978) x746 0))) (not x655)) (= x869 (x1228 (x1231 x767) (x11 3) 0)) (= (> x1221 x1263) x655) (= (x815 1461501637330902918203684832716283019655932542975 x787) x811) (= x1263 (x49 (+ 1 x767)))) (not x1001)) (> 468353030 x638) (= x969 128) (not (> x1082 18446744073709551615)) (= (x49 (+ x1222 x1305)) x421) (= x978 x862) (= (x49 (+ 36 x1101)) x617) (= x848 (x187 (- x378 4))) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x848) (and (< x848 128) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x848))))) (= x587 x787) (not (> 4 x378)) (<= x686 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1236) (= x638 87118632) x891 (= x13 x767) (or (and (= x421 x1151) x1188) (and (= x1037 (x815 1461501637330902918203684832716283019655932542975 x787)) (= x979 (x815 1461501637330902918203684832716283019655932542975 x787)) (= x1117 (x1228 (x1231 x979) x941 0)) (= (x1228 (x1231 x14) x935 0) x392) (<= 0 x497) (= (x815 1461501637330902918203684832716283019655932542975 x787) x297) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x595) (= x497 (x504 x651)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x87) (= (x815 1461501637330902918203684832716283019655932542975 x787) x136) (= (x49 (+ x209 32)) x640) (or (and (= (x1228 (x1231 x473) x309 0) x1191) (= (x815 1461501637330902918203684832716283019655932542975 x787) x473) (= x309 (x1228 (x1231 x767) (x11 7) 0)) (= (x1228 (x1231 x978) x1191 0) x927) (= x209 x421) x895) (and (= (= x481 0) x939) (= (x103 x172) x1250) (= x713 (x1173 x719)) (= x1130 (< x1250 x326)) (or (and (= x714 (x1228 (x1231 x285) x46 0)) (= (x1228 (x1231 x978) x714 0) x168) x939 (= (x815 1461501637330902918203684832716283019655932542975 x787) x285) (= x209 x1232) (= x46 (x1228 (x1231 x767) (x11 7) 0))) (and (= (x1228 (x1231 x767) (x11 3) 0) x418) (= x1232 x209) (= x37 (x1228 (x1231 x767) (x11 7) 0)) (not x939) (= x546 (x815 1461501637330902918203684832716283019655932542975 x787)) (= x1115 (x1228 (x1231 x978) x1237 0)) (= x566 x516) (= x1237 (x1228 (x1231 x546) x37 0)) (= (x815 1461501637330902918203684832716283019655932542975 x787) x1156) (= (x1228 (x1231 x978) x380 0) x260) (= x566 (* x481 x592)) (= x380 (x1228 (x1231 x1156) x418 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x481 x592)))) (or (and (= x481 0) (not x1130)) (and (= x1127 (< x296 x865)) (or (and x1127 (= (x1071 x197) x926) (= x692 x926)) (and (= x865 x692) (not x1127))) (or (and (not (< x692 x1250)) (= x365 x481) (not x286) (= x365 (ite (> 604800 x1050) x1050 604800)) (= (x187 (- x692 x1250)) x1050) (= 604800 x574)) (and (= x41 x481) (not (< x692 x1282)) (= (x187 (- x692 x1282)) x41) x286 (= (x1071 x421) x1282))) (= (x1071 x197) x296) (= x286 (= x1250 0)) x1130)) (= x719 (x954 x34 1)) (= x1232 (x49 (+ 64 x421))) (>= x713 0) (>= x1250 0) (<= x1250 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x713) (= x724 (x815 1461501637330902918203684832716283019655932542975 x787)) (= x197 (x49 (+ x421 32))) (<= x821 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x895) (= (x1228 (x1231 x978) x204 0) x172) (= (x1228 (x1231 x767) (x11 7) 0) x919) (= (x1228 (x1231 x724) x919 0) x204) (= (x504 x34) x821) (= x34 (x1228 (x1231 x767) (x11 1) 0)) (>= x821 0) (= (x1071 x197) x326))) (= (x1228 (x1231 x767) (x11 1) 0) x651) (not (> x867 x686)) (= x810 (x1228 (x1231 x136) x505 0)) (or (and x1246 (= x1256 x1151)) (and (>= x686 0) (<= x998 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1102 (x841 x215)) (= (x1015 x152) x965) (= x161 (x1228 (x1231 x779) (x11 6) 0)) (<= x965 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1228 (x1231 x531) x198 0) x1184) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x923) (or (and (= x960 (x221 x57)) (or (and (= (x187 (- x1143 x1290)) x302) (= x611 x302) x878 (not (> x1290 x1143)) (= x1290 (x221 x189))) (and (= x12 (x187 (- x1143 x643))) (= x611 x1010) (not (< x1143 x643)) (= (ite (> 604800 x12) x12 604800) x1010) (not x878) (= 604800 x113))) (= x878 (= 0 x643)) (= x133 (< x960 x865)) x886 (or (and (= x865 x1143) (not x133)) (and (= x1031 (x221 x57)) x133 (= x1031 x1143)))) (and (= 0 x611) (not x886))) (>= x998 0) (= (x1228 (x1231 x779) (x11 9) 0) x198) (= (= x998 0) x77) (= x215 (x1228 (x1231 x734) x887 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1273) (>= x643 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1102) (= x887 (x1228 (x1231 x779) (x11 5) 0)) (= x538 (x1228 (x1231 x978) x1155 0)) (<= 0 x1286) (> x667 x1243) (= (x1084 x167) x923) (<= 0 x1273) (= (x601 x1136) x643) (= (x1173 x310) x1273) (not (< x686 x779)) (= (x1228 (x1231 x779) (x11 3) 0) x153) (= (= 0 x611) x945) (or (and x77 (= (x49 (+ x779 1)) x74) (= x74 x667)) (and (= x407 (x815 x804 x312)) (= x804 1) (= x966 (div x1023 x1102)) (= x312 (ite (> x998 115792089237316195423570985008687907853269984665640564039457) 1 0)) (or (not x191) (and x191 (= (x1228 (x1231 x779) (x11 11) 0) x1065) (= x177 (* x1299 x966)) (= x1008 0) (= (> x1082 1) x674) (= (x221 x1305) x457) (= (x661 x558) x452) (= x21 (x815 1461501637330902918203684832716283019655932542975 x787)) (= (x1228 (x1231 x348) x809 0) x711) (= x809 (x1228 (x1231 x779) (x11 4) 0)) (< 0 x1082) (= x1259 x1025) (> x457 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1299 x966)) (= x474 (+ x439 x1259)) (>= 1461501637330902918203684832716283019655932542975 x452) (<= 0 x1008) (<= 0 x1299) (= x51 (x1228 (x1231 x452) x540 0)) (= x617 x558) (= (x815 1461501637330902918203684832716283019655932542975 x787) x348) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1025 x281)) (= (x661 x558) x790) (= x445 (x1228 (x1231 x790) x1066 0)) (= (x1228 (x1231 x978) x711 0) x540) (= x1299 (x1197 x445)) (= x1025 (div x177 1000000000000000000)) (< 0 x1082) (= (x221 x1272) x281) (= (x1288 x51) x1008) (= (x1228 (x1231 x21) x1065 0) x1066) (= (x49 (+ x693 160)) x1272) (= x439 x281) (<= x1299 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (not x674) (and (= x911 (x1228 (x1231 x779) (x11 4) 0)) (= (x1228 (x1231 x978) x963 0) x342) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x929) (not x1119) (= (x1228 (x1231 x921) x911 0) x963) (= x1132 (x1228 (x1231 x1264) x702 0)) (= (x49 (+ 192 x693)) x117) x674 (= x630 (x1288 x768)) (= (x1228 (x1231 x779) (x11 11) 0) x59) (< 1 x1082) (= (x1228 (x1231 x289) x59 0) x702) (= (x679 x1305) x329) (> x1082 1) (= (x1197 x1132) x929) (= 0 x630) (= x794 x1063) (= x1119 (> x1082 2)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x929 x966)) (= x1162 (x49 (+ 64 x431))) (= (x661 x1162) x1264) (= (x1228 (x1231 x321) x342 0) x768) (>= 1461501637330902918203684832716283019655932542975 x321) (= (div x360 1000000000000000000) x1059) (< (+ x1059 x1063) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x630) (= (x661 x1162) x321) (>= x630 0) (= x360 (* x966 x929)) (= x1059 x261) (>= 1461501637330902918203684832716283019655932542975 x1264) (= x1063 (x679 x117)) (>= x929 0) (= (x815 1461501637330902918203684832716283019655932542975 x787) x289) (= x682 (+ x794 x261)) (= x921 (x815 1461501637330902918203684832716283019655932542975 x787)) (> x329 1))) (<= x1008 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x790))) (= 0 x407) (not x77) (< 0 x1102) (= x191 (< 0 x1082)) (= (x49 (+ 1 x779)) x256) (= x1023 (mod (* x998 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x256 x667))) (= x152 (x1228 (x1231 x978) x1184 0)) (= x349 (x815 1461501637330902918203684832716283019655932542975 x787)) (or (and (= (x815 1461501637330902918203684832716283019655932542975 x787) x157) (= x636 (x1228 (x1231 x779) (x11 6) 0)) x945 (= x691 (x1228 (x1231 x157) x636 0))) (and (= (x815 1461501637330902918203684832716283019655932542975 x787) x303) (= x166 (x1228 (x1231 x779) (x11 5) 0)) (= (x1228 (x1231 x779) (x11 6) 0) x20) (= (x815 1461501637330902918203684832716283019655932542975 x787) x732) (= (x1228 (x1231 x732) x20 0) x344) (= x579 (* x611 x923)) (= x268 (x1228 (x1231 x303) x166 0)) (not x945) (= x579 x44) (< (* x611 x923) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x615 x538) x998) (= x1254 (x221 x57)) (= (x49 (+ x189 32)) x57) (<= 0 x686) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1286) (= x531 (x815 1461501637330902918203684832716283019655932542975 x787)) (= (x1228 (x1231 x1087) x153 0) x1155) (= (x954 x1208 1) x310) (>= x1102 0) (<= 0 x923) (= x886 (> x1254 x643)) (<= 0 x965) (= x1151 x1047) (= x1208 (x1228 (x1231 x779) (x11 1) 0)) (= (x1228 (x1231 x779) (x11 10) 0) x739) (or (and (= x753 (x742 x648)) (= x648 (x1228 (x1231 x978) x900 0)) (= x900 (x1228 (x1231 x293) x183 0)) (>= x1277 0) (= x662 (x49 (+ x209 96))) (or (and (= (x1228 (x1231 x978) x337 0) x835) (= x337 (x1228 (x1231 x1034) x484 0)) (= x1034 (x815 1461501637330902918203684832716283019655932542975 x787)) (= (x1228 (x1231 x779) (x11 7) 0) x484) (= x189 x124) x1142) (and (= x124 x189) (= (x1228 (x1231 x779) (x11 7) 0) x140) (= x104 x512) (not x1142) (= x486 (x1228 (x1231 x239) x140 0)) (= x816 (x815 1461501637330902918203684832716283019655932542975 x787)) (= (x1228 (x1231 x978) x486 0) x524) (= (x815 1461501637330902918203684832716283019655932542975 x787) x239) (= (x1228 (x1231 x779) (x11 3) 0) x1108) (= x1247 (x1228 (x1231 x816) x1108 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x965 x458)) (= (x1228 (x1231 x978) x1247 0) x81) (= x104 (* x458 x965)))) (= x163 (x1228 (x1231 x779) (x11 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1277) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x706) (= (x1173 x292) x1277) (<= x753 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x753 0) (= (x684 x662) x236) (or (and (or (and (= x865 x992) (not x1240)) (and (= x992 x367) x1240 (= (x684 x662) x367))) x703 (or (and (= 604800 x39) (not (> x753 x992)) (= (ite (< x629 604800) x629 604800) x325) (not x1038) (= x458 x325) (= (x187 (- x992 x753)) x629)) (and (= x822 (x684 x1256)) (= x458 x54) (= (x187 (- x992 x822)) x54) x1038 (not (> x822 x992)))) (= (< x498 x865) x1240) (= x498 (x684 x662)) (= x1038 (= 0 x753))) (and (not x703) (= x458 0))) (= x1142 (= x458 0)) (= (x504 x163) x706) (= (x954 x163 1) x292) (= x183 (x1228 (x1231 x779) (x11 7) 0)) (= x124 (x49 (+ 128 x209))) (= (x815 1461501637330902918203684832716283019655932542975 x787) x293) (not x1073) (= x703 (< x753 x236)) (>= x706 0)) (and (= x875 (x815 1461501637330902918203684832716283019655932542975 x787)) (= x1256 x189) (= (x1228 (x1231 x779) (x11 7) 0) x307) x1073 (= (x1228 (x1231 x978) x15 0) x107) (= x15 (x1228 (x1231 x875) x307 0)))) (= x734 (x815 1461501637330902918203684832716283019655932542975 x787)) (not x1246) (<= x643 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x815 1461501637330902918203684832716283019655932542975 x787) x1087) (= x1047 (x49 (+ 64 x189))) (= x814 (x815 1461501637330902918203684832716283019655932542975 x787)) (= x167 (x1228 (x1231 x349) x739 0)) (= (x1228 (x1231 x814) x161 0) x1136) (not (< x686 x779)) (= x1073 (= x965 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x686) (= (x504 x1208) x1286) (<= x686 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x686) (= x47 (= x1123 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x592) (not (< x686 x867)) (>= x686 0) (= (x1015 x824) x592) (= x1280 (x1228 (x1231 x767) (x11 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x686) (= x935 (x1228 (x1231 x767) (x11 10) 0)) (= (x1228 (x1231 x767) (x11 5) 0) x754) (<= 0 x592) (or (and (= x235 (x815 x1021 x112)) (not x441) (or (not x276) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x844 x381)) (= (x1228 (x1231 x978) x695 0) x870) (= x476 (x1228 (x1231 x747) x870 0)) (>= 1461501637330902918203684832716283019655932542975 x747) (= (x815 1461501637330902918203684832716283019655932542975 x787) x681) (= (x1288 x476) x162) (or (and (> x1082 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x115) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x465 x1172)) (= x1069 (div x1005 1000000000000000000)) (= (x661 x673) x89) (= (x815 1461501637330902918203684832716283019655932542975 x787) x288) (= x533 (x815 1461501637330902918203684832716283019655932542975 x787)) (= (x1196 x1039) x946) (not x1220) (= (x1228 (x1231 x288) x165 0) x139) (= (x1196 x1305) x605) (= (+ x503 x1091) x1279) (> x1082 1) (= x749 (x1228 (x1231 x730) x212 0)) (>= x465 0) (= x730 (x661 x673)) (= (x1228 (x1231 x533) x264 0) x317) (= x465 (x1197 x657)) (= x673 (x49 (+ x431 64))) (= x115 (x1288 x749)) (<= x465 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1228 (x1231 x767) (x11 11) 0) x165) (= (x1228 (x1231 x767) (x11 4) 0) x264) x363 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1069 x946)) (= x212 (x1228 (x1231 x978) x317 0)) (= (< 2 x1082) x1220) (= (x1228 (x1231 x89) x139 0) x657) (<= x89 1461501637330902918203684832716283019655932542975) (= (x49 (+ 192 x693)) x1039) (>= x115 0) (< 1 x605) (= x115 0) (= x1091 x1069) (= (* x1172 x465) x1005) (= x946 x503) (<= x730 1461501637330902918203684832716283019655932542975)) (not x363)) (= (x1228 (x1231 x767) (x11 4) 0) x147) (= (x1197 x773) x340) (= (x1228 (x1231 x767) (x11 11) 0) x459) (> x1082 0) (= x773 (x1228 (x1231 x990) x159 0)) (= x508 x844) (= x980 (x836 x1305)) (<= x990 1461501637330902918203684832716283019655932542975) (< (* x340 x1172) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x381 (div x31 1000000000000000000)) (= x381 x813) (= x617 x1139) (= x915 (x49 (+ x693 160))) (= x990 (x661 x1139)) (<= 0 x162) (= 0 x162) (= (< 1 x1082) x363) (<= 0 x340) (= (+ x813 x508) x535) (= (x1228 (x1231 x681) x459 0) x159) (= (x836 x915) x844) x276 (= (x661 x1139) x747) (<= x340 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x162 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x695 (x1228 (x1231 x1076) x147 0)) (< 0 x980) (= (x815 1461501637330902918203684832716283019655932542975 x787) x1076) (= x31 (* x1172 x340)) (< 0 x1082))) (< 0 x361) (= x447 (x49 (+ 1 x767))) (= x1172 (div x1040 x361)) (= (ite (< 115792089237316195423570985008687907853269984665640564039457 x716) 1 0) x112) (= x779 x447) (= x276 (< 0 x1082)) (= x235 0) (= 1 x1021) (= (mod (* x716 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1040)) (and x441 (= (x49 (+ x767 1)) x518) (= x518 x779))) (= (x1228 (x1231 x978) x1117 0) x824) (= (x1228 (x1231 x767) (x11 9) 0) x941) (= (x596 x1060) x716) (>= x686 0) (not x1188) (<= 0 x361) (= x895 (= x592 0)) (<= 0 x716) (>= x595 0) (>= x87 0) (= x1246 (> x779 x1221)) (= (x836 x640) x305) (= (x1228 (x1231 x297) x1280 0) x818) (= (x49 (+ 64 x209)) x1256) (= (x815 1461501637330902918203684832716283019655932542975 x787) x14) (= x1094 (x1084 x392)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x716) (= (x1228 (x1231 x978) x810 0) x1060) (= (x954 x651 1) x874) (or (and (not x718) (= x1123 0)) (and (or (and (not x396) (= x865 x33)) (and (= (x836 x640) x1099) (= x33 x1099) x396)) (= (> x865 x534) x396) x718 (= (= x595 0) x1200) (= (x836 x640) x534) (or (and (not (< x33 x29)) (= x29 (x836 x209)) (= x1123 x199) x1200 (= (x187 (- x33 x29)) x199)) (and (= 604800 x269) (= (ite (> 604800 x1283) x1283 604800) x1258) (not x1200) (= (x187 (- x33 x595)) x1283) (= x1258 x1123) (not (< x33 x595)))))) (<= x1094 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1094) (<= x497 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x595 x305) x718) (= x595 (x1109 x818)) (= x87 (x1173 x874)) (= (x1228 (x1231 x1037) x754 0) x1179) (= x361 (x620 x1179)) (= x505 (x1228 (x1231 x767) (x11 3) 0)) (<= x361 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x716) x441) (or (and x47 (= (x1228 (x1231 x767) (x11 6) 0) x764) (= (x1228 (x1231 x1195) x764 0) x1192) (= (x815 1461501637330902918203684832716283019655932542975 x787) x1195)) (and (< (* x1123 x1094) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x866 (x1228 (x1231 x767) (x11 5) 0)) (= x1072 (x1228 (x1231 x155) x866 0)) (= x1235 (* x1123 x1094)) (= (x815 1461501637330902918203684832716283019655932542975 x787) x677) (= x272 (x1228 (x1231 x677) x1122 0)) (= x1140 x1235) (= (x1228 (x1231 x767) (x11 6) 0) x1122) (= x155 (x815 1461501637330902918203684832716283019655932542975 x787)) (not x47))))) (= x767 x867) (= x826 x1169) (>= 1461501637330902918203684832716283019655932542975 x220) (= (x49 (+ 35 x1101)) x837) (or (and (= (<= x378 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x837)) (> x378 x837)) (and (> x837 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x378))) (= (mod (* 32 x1082) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x633) (= x1188 (> x767 x1221)) (= (< 0 x1292) x135) (= x203 x1221) (= (x49 (+ x633 160)) x422) (not (< x1221 x767))) x1185))))
(assert (x178 x726))
(assert (= (ite (= x334 x419) x906 (x1090 x419)) (x1161 x419)))
(assert (x178 x89))
(assert (x308 x93))
(assert (= (ite (= x1036 x419) x1267 (x1298 x419)) (x1030 x419)))
(assert (= (x639 (x1231 x188)) x188))
(assert (x308 x321))
(assert (= (x1090 x61) (ite (= x1055 x61) x1043 (x1030 x61))))
(assert (x308 x1112))
(assert (x308 x747))
(assert (x178 x761))
(assert (= (x403 x948) (ite (and x950 x441 (not x1188)) (x836 x948) (ite (and (not x363) x276 (not x1188) (not x441) x950) (x1196 x948) (ite (and (not x276) (not x1188) x950 (not x441)) (x836 x948) (x234 x948))))))
(assert (x308 x214))
(assert (x308 x1079))
(assert (= x790 (x639 (x1231 x790))))
(assert (= (ite (and x47 (not x1188) x950) (x1053 x553) (x1218 x553)) (x620 x553)))
(assert (x308 x816))
(assert (= (x639 (x1231 x14)) x14))
(assert (= (ite (= x1272 x1198) x474 (x221 x1198)) (x679 x1198)))
(assert (= (x639 (x1231 x747)) x747))
(assert (=> (<= x1077 10000) (= (x11 x1077) (x1231 x1077))))
(assert (x308 x482))
(assert (= (x742 x1081) (ite (and (not x1188) x950 x895) (x88 x1081) (ite (and x939 x950 (not x895) (not x1188)) (x871 x1081) (x1118 x1081)))))
(assert (= (ite (= x640 x1153) x87 (x645 x1153)) (x836 x1153)))
(assert (= 2061678023 (x639 (x11 2061678023))))
(assert (x308 x875))
(assert (= (x11 26959946667150639794667015087019630673637144422540572481103610249215) (x1231 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x308 x770))
(assert (= (=> (and (<= 0 x357) (not (> 2293535753 x56)) (not (= x56 2690754053)) (<= x357 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x70 1461501637330902918203684832716283019655932542975) (> 2960351575 x56) (< 0 x1058) (<= x91 1461501637330902918203684832716283019655932542975) (= x472 (x1228 (x1231 x70) x471 0)) (= x429 x357) (= (x1228 (x1231 x845) (x11 3) 0) x1035) (not (> 2690754053 x56)) (= (x1013 x472) x357) (= x471 (x1228 (x1231 x91) x1035 0)) (= x1058 (x267 (x1231 274184521717934524641157099916833587206))) (= 2743102681 x56)) (=> (and (= x522 x983) (= x429 x1206) (= x1112 x968) (= x415 x1201) (= x479 x240)) x19)) x758))
(assert (x308 x1279))
(assert (x308 x979))
(assert (= (ite (= x57 x2) x1273 (x748 x2)) (x221 x2)))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x639 (x11 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= x726 (x639 (x1231 x726))))
(assert (x308 x1302))
(assert (= (x1231 759532456) (x11 759532456)))
(assert (= (ite (and x950 x441 (not x1188)) (x836 x936) (ite (and (not x363) (not x1188) (not x441) x276 x950) (x1196 x936) (ite (and (not x1188) (not x276) (not x441) x950) (x836 x936) (x234 x936)))) (x403 x936)))
(assert (x308 x607))
(assert (= (ite (and x707 x593) (x244 x948) (x781 x948)) (x834 x948)))
(assert (x308 x744))
(assert (x308 x415))
(assert (x308 x659))
(assert (x308 x947))
(assert (x308 x787))
(assert (= x975 x470))
(assert (x178 x10))
(assert (x308 x185))
(assert (= (x11 604800) (x1231 604800)))
(assert (=> (<= x14 10000) (= (x11 x14) (x1231 x14))))
(assert (= (ite (= x1272 x419) x474 (x221 x419)) (x679 x419)))
(assert (= 142201243 (x639 (x11 142201243))))
(assert (= (x836 x209) (ite (= x209 x640) x87 (x645 x209))))
(assert (x308 x89))
(assert (= (x1161 x1305) (ite (= x1305 x334) x906 (x1090 x1305))))
(assert (x308 x1263))
(assert (x308 x293))
(assert (x178 x1034))
(assert (x178 x1194))
(assert (x308 x125))
(assert (= (x639 (x1231 x816)) x816))
(assert (= (x221 x402) (ite (= x57 x402) x1273 (x748 x402))))
(assert (=> (<= x155 10000) (= (x1231 x155) (x11 x155))))
(assert (x308 x33))
(assert (= x681 (x639 (x1231 x681))))
(assert (x308 x74))
(assert (x308 x451))
(assert (x308 x1021))
(assert (= (x576 x1198) (ite (= x319 x1198) x653 (x825 x1198))))
(assert (x308 x517))
(assert (x308 x998))
(assert (x308 x961))
(assert (= (x1298 x410) (ite (= x469 x410) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x410))))
(assert (= (x1174 x61) 0))
(assert (= x436 (x639 (x1231 x436))))
(assert (= (x601 x807) (ite (and x47 (not x1188) x950) (x637 x807) (x283 x807))))
(assert (x308 x232))
(assert (x308 x44))
(assert (x308 x1151))
(assert (x308 x1137))
(assert (= (x639 (x1231 x1045)) x1045))
(assert (x308 x677))
(assert (= x736 x1245))
(assert (=> (>= 10000 x634) (= (x1231 x634) (x11 x634))))
(assert (= (x639 (x1231 x881)) x881))
(assert (= (x710 x1153) (ite (and x950 x547) (x672 x1153) (x905 x1153))))
(assert (x610 x1049))
(assert (x178 x254))
(assert (= (x639 (x1231 x1034)) x1034))
(assert (x178 x1126))
(assert (x308 x1270))
(assert (x308 x351))
(assert (x308 x1124))
(assert (x308 x117))
(assert (x178 x546))
(assert (x178 x907))
(assert (x308 x1195))
(assert (x178 x700))
(assert (=> (<= x880 10000) (= (x1231 x880) (x11 x880))))
(assert (= (x639 (x1231 x92)) x92))
(assert (x178 x237))
(assert (= (x1080 x419) (ite (and x356 (not x986) x563) (x318 x419) (x96 x419))))
(assert (x308 x687))
(assert (= (x679 x410) (ite (= x410 x1272) x474 (x221 x410))))
(assert (= (ite (and x950 x547) (x672 x1272) (x905 x1272)) (x710 x1272)))
(assert (x178 x1189))
(assert (= x349 (x639 (x1231 x349))))
(assert (= (ite (and x950 x547) (x672 x948) (x905 x948)) (x710 x948)))
(assert (= (x710 x1131) (ite (and x547 x950) (x672 x1131) (x905 x1131))))
(assert (x308 x1156))
(assert (= x1098 x1193))
(assert (x308 x1110))
(assert (= (ite (= x57 x68) x1273 (x748 x68)) (x221 x68)))
(assert (x178 x239))
(assert (= (=> (and (= x60 x622) (= x186 (and x263 x364)) (= (or x186 (not x1293)) x616) (= (<= x622 x797) x263)) (and (=> (and (= x968 x70) (= x240 x91) (= x983 x845) (= x138 false) (= 87118632 x1147) (= x671 87118632)) x758) x616)) x509))
(assert (= (ite (and (not x883) x94 x1041 x356 x563 x1000) (x1161 x722) (ite (and x1000 (not x1041) x563 x94 x356) (x1090 x722) (ite (and x356 (not x94) x563 x1000) (x1030 x722) (ite (and x356 (not x1000) x563) (x1298 x722) (x1301 x722))))) (x318 x722)))
(assert (x308 x99))
(assert (= (ite (= x419 x390) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1019 x419)) (x910 x419)))
(assert (x308 x1140))
(assert (= (+ 1 (x639 x651)) (x639 (x954 x651 1))))
(assert (x178 x928))
(assert (x308 x964))
(assert (x308 x750))
(assert (x308 x624))
(assert (x308 x266))
(assert (=> (<= x450 10000) (= (x11 x450) (x1231 x450))))
(assert (= (x710 x722) (ite (and x547 x950) (x672 x722) (x905 x722))))
(assert (= (x639 (x1231 x546)) x546))
(assert (x308 x578))
(assert (x308 x443))
(assert (x308 x931))
(assert (= (=> (and (= x700 x983) (= x240 x880)) x897) x448))
(assert (x308 x724))
(assert (= (x1196 x1198) (ite (= x1198 x915) x535 (x836 x1198))))
(assert (= (x11 1461501637330902918203684832716283019655932542975) (x1231 1461501637330902918203684832716283019655932542975)))
(assert (=> (>= 10000 x288) (= (x1231 x288) (x11 x288))))
(assert (= (ite (= x1272 x1012) x474 (x221 x1012)) (x679 x1012)))
(assert (= (x639 (x1231 x522)) x522))
(assert (x308 x325))
(assert (x308 x928))
(assert (x178 x1104))
(assert (x308 x14))
(assert (x308 x269))
(assert (= x513 x1098))
(assert (= (+ (x639 x1208) 1) (x639 (x954 x1208 1))))
(assert (= (x1231 2798343961) (x11 2798343961)))
(assert (x308 x182))
(assert (= (x639 (x1231 x814)) x814))
(assert (x308 x873))
(assert (x308 x520))
(assert (x308 x1059))
(assert (= (x1174 x410) 0))
(assert (x308 x48))
(assert (x308 x422))
(assert (x308 x237))
(assert (x308 x334))
(assert (= (ite (= x640 x68) x87 (x645 x68)) (x836 x68)))
(assert (x308 x385))
(assert (x308 x1141))
(assert (x178 x1107))
(assert (x308 x382))
(assert (x308 x1265))
(assert (x308 x259))
(assert (= (ite (= x640 x1272) x87 (x645 x1272)) (x836 x1272)))
(assert (= (=> (and (= (x1228 (x1231 x1077) x665 0) x526) (not (= x76 69947311)) (= x485 (x1228 (x1231 x92) x526 0)) (= x76 142201243) (not (= x76 87118632)) (= x379 (x1015 x485)) (= x111 x379) (< x76 468353030) (<= x379 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 911411945 x76) (> x487 0) (= (x1228 (x1231 x726) (x11 9) 0) x665) (>= 1461501637330902918203684832716283019655932542975 x92) (<= 0 x379) (< x76 2293535753) (= (x267 (x1231 274184521717934524641157099916833587206)) x487) (<= x1077 1461501637330902918203684832716283019655932542975)) (=> (and (= x1270 x111) (= 0 x555) (= x240 x1271) (= (< 0 x1270) x1125) (= x983 x704) (= x708 (and x683 x1125))) x1168)) x52))
(assert (= (x639 (x1231 x65)) x65))
(assert (x308 x1232))
(assert (x308 x1153))
(assert (=> (<= x207 10000) (= (x11 x207) (x1231 x207))))
(assert (x308 x511))
(assert (x308 x899))
(assert (x308 x381))
(assert (= x774 true))
(assert (x308 x174))
(assert (x308 x112))
(assert (= (ite (and x563 x356 (not x986)) (x318 x507) (x96 x507)) (x1080 x507)))
(assert (x308 x722))
(assert (x178 x978))
(assert (= (x639 (x1231 x1112)) x1112))
(assert (= (=> (and (= (x1228 (x1231 x425) x600 0) x298) (<= x769 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x769 0) (not (< x556 2690754053)) (= (x1228 (x1231 x613) (x11 3) 0) x600) (not (< x556 2293535753)) (>= 1461501637330902918203684832716283019655932542975 x425) (= x36 x769) (> x1141 0) (>= 1461501637330902918203684832716283019655932542975 x1146) (= x1141 (x267 (x1231 274184521717934524641157099916833587206))) (not (= 2690754053 x556)) (= x769 (x1013 x660)) (< x556 2960351575) (= (x1228 (x1231 x1146) x298 0) x660) (= 2743102681 x556)) (=> (and (= x240 x450) (= x983 x989) (= x931 x36) (= (>= x944 x931) x364)) x609)) x567))
(assert (= (ite (= x1272 x332) x474 (x221 x332)) (x679 x332)))
(assert (= (x825 x507) (ite (= x1186 x507) x232 (x910 x507))))
(assert (x308 x145))
(assert (x308 x312))
(assert (x308 x303))
(assert (= 1000000000000000000 (x639 (x11 1000000000000000000))))
(assert (= x634 (x639 (x1231 x634))))
(assert (= (x836 x1012) (ite (= x1012 x640) x87 (x645 x1012))))
(assert (x178 x613))
(assert (= (x11 2512682246) (x1231 2512682246)))
(assert (x178 x816))
(assert (x308 x157))
(assert (= (ite (and x441 x950 (not x1188)) (x836 x402) (ite (and (not x1188) x950 (not x363) (not x441) x276) (x1196 x402) (ite (and (not x1188) (not x276) x950 (not x441)) (x836 x402) (x234 x402)))) (x403 x402)))
(assert (x308 x987))
(assert (= (ite (= x1198 x390) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1019 x1198)) (x910 x1198)))
(assert (= (x679 x2) (ite (= x1272 x2) x474 (x221 x2))))
(assert (x178 x1076))
(assert (x308 x933))
(assert (x308 x200))
(assert (x308 x1107))
(assert (= 2512682246 (x639 (x11 2512682246))))
(assert (x308 x968))
(assert (= (x1174 x419) 0))
(assert (x308 x989))
(assert (x308 x915))
(assert (=> (<= x1034 10000) (= (x11 x1034) (x1231 x1034))))
(assert (x308 x207))
(assert (=> (>= 10000 x65) (= (x11 x65) (x1231 x65))))
(assert (x308 x332))
(assert (x178 x92))
(assert (x316 x804 x312))
(assert (= x341 (x639 (x1231 x341))))
(assert (= (x639 (x1231 x450)) x450))
(assert (= x1078 x1193))
(assert (= x1296 (=> (and (not (= x840 635128645)) (= (x304 x1081) x174) (<= x85 1461501637330902918203684832716283019655932542975) (= x799 x174) (not (= x840 468353030)) (= x659 (x267 (x1231 274184521717934524641157099916833587206))) (>= x174 0) (not (< x840 468353030)) (= (x1228 (x1231 x225) x1088 0) x1081) (= (x1228 (x1231 x958) (x11 7) 0) x996) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174) (> x659 0) (= x840 759532456) (> 2293535753 x840) (<= x225 1461501637330902918203684832716283019655932542975) (< x840 911411945) (= (x1228 (x1231 x85) x996 0) x1088)) (=> (and (= x983 x237) (= x799 x266) (= x443 x240) (= x1293 (<= x266 x75))) x25))))
(assert (= x892 (and x975 x63)))
(assert (= (ite (= x1272 x1153) x474 (x221 x1153)) (x679 x1153)))
(assert (x308 x446))
(assert (x308 x761))
(assert (x178 x1112))
(assert (x308 x9))
(assert (= (x1174 x1198) 0))
(assert (x178 x479))
(assert (= (x836 x1131) (ite (= x1131 x640) x87 (x645 x1131))))
(assert (= (ite (and x547 x950) (x672 x419) (x905 x419)) (x710 x419)))
(assert (= (x1090 x1305) (ite (= x1305 x1055) x1043 (x1030 x1305))))
(assert (x308 x864))
(assert (x308 x642))
(assert (= (x639 (x1231 x1146)) x1146))
(assert (= (x672 x1198) (ite (= x1198 x1305) x1082 (x180 x1198))))
(assert (x308 x668))
(assert (x308 x367))
(assert (x178 x767))
(assert (= 0 (x1174 x507)))
(assert (x308 x1221))
(assert (x308 x467))
(assert (x308 x867))
(assert (x178 x1087))
(assert (x308 x489))
(assert (x308 x581))
(assert (= x1185 (=> (and (= x743 (x1228 (x1231 x1104) x580 0)) (= (x1228 (x1231 x1221) (x11 3) 0) x580) (= (> x1082 0) x356) (= x894 (x1228 (x1231 x978) x743 0)) (= (x815 1461501637330902918203684832716283019655932542975 x787) x1104)) (and (=> (not x356) x448) (=> (and (= (x375 x1305) x110) (= x1216 (x49 (+ 100 x1151))) x356 (= (x49 (+ x693 160)) x322) (= x934 (x815 26959946667150639794667015087019630673637144422540572481103610249215 x1049)) (= (> x656 0) x1000) (= x332 (x49 (+ x1151 32))) (= x762 (> x1075 0)) (= (x1298 x1151) x656) (= (x187 (- x1176 32)) x1061) (= (x375 x322) x720) (= x469 (x49 (+ 96 x1124))) (= x1176 (x187 (- x1216 x1151))) (>= 1461501637330902918203684832716283019655932542975 x341) (= x861 (x49 (+ x1151 68))) (= x1124 (x49 (+ x1151 36))) x762 (= x986 (> x245 x656)) (= x1049 (x158 x332)) (= x812 0) (= (x49 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x934)) x577) (or (and (= 0 x245) (not x1000)) (and (= x1131 x332) (= x94 (< 32 x656)) x1000 (or (and (= 32 x245) (not x94)) (and (or (and (= (x49 (+ x1151 96)) x61) (or (and (= 96 x245) (not x883)) (and (= (x1161 x410) x1199) (= (x49 (+ 160 x1216)) x216) (= x690 (< 128 x656)) x883 (= x410 (x49 (+ x1151 128))) (not x690) (= x245 128))) (= (x49 (+ x1216 128)) x334) (= (< 96 x656) x883) (= (x1090 x61) x906) x1041) (and (not x1041) (= 64 x245))) (= (x49 (+ x1216 96)) x1055) (= x1041 (< 64 x656)) x94 (= (x49 (+ 64 x1151)) x936) (= x1043 (x1030 x936)))) (= (x1298 x1131) x1267) (= x1297 x1036))) (= x1075 (x267 (x1231 x341))) (= (x661 x446) x341) (= (x49 (+ x1124 128)) x1297) (> x110 0) (> x1082 0) (or (and (= (x49 (+ x1297 x656)) x520) x986) (not x986)) (= x446 x617)) x612)))))
(assert (x308 x114))
(assert (x178 x531))
(assert (= 274184521717934524641157099916833587206 (x639 (x1231 274184521717934524641157099916833587206))))
(assert (=> (<= x89 10000) (= (x1231 x89) (x11 x89))))
(assert (x308 x981))
(assert (x308 x235))
(assert (x178 x425))
(assert (= x623 (=> (and (not (< x532 2293535753)) (= (x1228 (x1231 x896) (x11 3) 0) x1268) (= x1163 (x267 (x1231 274184521717934524641157099916833587206))) (>= x228 0) (>= 1461501637330902918203684832716283019655932542975 x668) (<= x207 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x228) (not (> 2690754053 x532)) (> 2960351575 x532) (= x539 x228) (= x228 (x27 x959)) (= x808 (x1228 (x1231 x668) x1268 0)) (= (x1228 (x1231 x207) x808 0) x959) (> x1163 0) (= x532 2743102681) (not (= 2690754053 x532))) (=> (and (= x912 (>= x974 x1048)) (= x1189 x240) (= x1048 x539) (= x983 x102)) x1051))))
(assert (x295 x210 x18))
(assert (= (x1090 x507) (ite (= x507 x1055) x1043 (x1030 x507))))
(assert (x308 x568))
(assert (x178 x348))
(assert (x308 x1199))
(assert (x308 x199))
(assert (x308 x348))
(assert (=> (>= 10000 x425) (= (x11 x425) (x1231 x425))))
(assert (= (ite (and x950 x441 (not x1188)) (x836 x1012) (ite (and (not x363) x950 (not x441) x276 (not x1188)) (x1196 x1012) (ite (and (not x1188) (not x441) x950 (not x276)) (x836 x1012) (x234 x1012)))) (x403 x1012)))
(assert (= (x11 2835717307) (x1231 2835717307)))
(assert (x178 x989))
(assert (x178 x732))
(assert (x308 x162))
(assert (= (x639 (x1231 x89)) x89))
(assert (= (x672 x1131) (ite (= x1305 x1131) x1082 (x180 x1131))))
(assert (x308 x729))
(assert (x308 x379))
(assert (x178 x1037))
(assert (= (ite (= x419 x435) x930 (x576 x419)) (x238 x419)))
(assert (=> (<= x1271 10000) (= (x11 x1271) (x1231 x1271))))
(assert (=> (<= x1189 10000) (= (x1231 x1189) (x11 x1189))))
(assert (x308 x558))
(assert (= true x855))
(assert (x308 x70))
(assert (= (x639 (x1231 x730)) x730))
(assert (x295 x676 x525))
(assert (x178 x666))
(assert (x308 x496))
(assert (x308 x877))
(assert (= (x221 x722) (ite (= x722 x57) x1273 (x748 x722))))
(assert (= (x672 x322) (ite (= x1305 x322) x1082 (x180 x322))))
(assert (x178 x875))
(assert (= (ite (and x441 x950 (not x1188)) (x836 x419) (ite (and (not x1188) (not x441) x276 (not x363) x950) (x1196 x419) (ite (and (not x1188) (not x441) x950 (not x276)) (x836 x419) (x234 x419)))) (x403 x419)))
(assert (= (x403 x722) (ite (and x950 (not x1188) x441) (x836 x722) (ite (and (not x441) x950 (not x1188) (not x363) x276) (x1196 x722) (ite (and (not x1188) (not x276) x950 (not x441)) (x836 x722) (x234 x722))))))
(assert (= x1087 (x639 (x1231 x1087))))
(assert (= x415 (x639 (x1231 x415))))
(assert (x308 x164))
(assert (x308 x611))
(assert (x308 x231))
(assert (= (x11 2293535753) (x1231 2293535753)))
(assert (= (ite (= x322 x915) x535 (x836 x322)) (x1196 x322)))
(assert (= (x639 (x1231 x700)) x700))
(assert (x308 x1152))
(assert (x308 x236))
(assert (=> (<= x243 10000) (= (x11 x243) (x1231 x243))))
(assert (= x116 (and x857 (not x859))))
(assert (= (x1298 x936) (ite (= x469 x936) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x936))))
(assert (x610 x1021))
(assert (= x479 (x639 (x1231 x479))))
(assert (=> (<= x816 10000) (= (x11 x816) (x1231 x816))))
(assert (x308 x291))
(assert (= (x403 x68) (ite (and (not x1188) x950 x441) (x836 x68) (ite (and (not x1188) (not x441) x276 x950 (not x363)) (x1196 x68) (ite (and (not x276) (not x1188) (not x441) x950) (x836 x68) (x234 x68))))))
(assert (x308 x289))
(assert (= (ite (= x1272 x1131) x474 (x221 x1131)) (x679 x1131)))
(assert (x295 x43 x66))
(assert (=> (<= x297 10000) (= (x1231 x297) (x11 x297))))
(assert (x308 x1095))
(assert (= (=> (= (> x1082 1) x63) (and (=> (not x63) x448) (=> (and (= (x49 (+ 192 x693)) x402) (= (x942 x1305) x999) (<= x384 1461501637330902918203684832716283019655932542975) (= (x49 (+ x860 36)) x632) (= (x49 (+ 32 x860)) x948) (< 1 x1082) x751 (= (x49 (+ 100 x860)) x1105) x63 (= 0 x971) (= x384 (x661 x635)) (= (< x483 x947) x73) (= (x187 (- x1105 x860)) x48) (= (x942 x402) x277) (= (x815 26959946667150639794667015087019630673637144422540572481103610249215 x581) x624) (= (x910 x860) x483) (= x1116 (x267 (x1231 x384))) (or (and x32 (= x856 (> x483 32)) (= x1186 x1281) (or (and (= x947 32) (not x856)) (and (= x1111 (< 64 x483)) (= (x49 (+ 64 x860)) x68) (= (x825 x68) x653) (= (x49 (+ 96 x1105)) x319) (or (and (= x947 64) (not x1111)) (and (= (x49 (+ 128 x1105)) x435) (= (x576 x507) x930) x1111 (= x507 (x49 (+ 96 x860))) (= (> x483 96) x347) (or (and (not x347) (= 96 x947)) (and (= 128 x947) (= (x49 (+ 160 x1105)) x770) (= (x238 x419) x552) x347 (= (x49 (+ 128 x860)) x419) (not x229) (= x229 (> x483 128)))))) x856)) (= x948 x722) (= (x910 x722) x232)) (and (= 0 x947) (not x32))) (= x751 (< 0 x1116)) (= x373 (x49 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x624))) (= x581 (x1249 x948)) (= x1281 (x49 (+ 128 x632))) (< 1 x999) (or (not x73) (and (= x1113 (x49 (+ x1281 x483))) x73)) (= x1276 (x187 (- x48 32))) (= (< 0 x483) x32) (= x390 (x49 (+ x632 96))) (= x125 (x49 (+ x860 68))) (= x635 (x49 (+ x431 64)))) x943))) x588))
(assert (= (x1231 274184521717934524641157099916833587206) (x11 274184521717934524641157099916833587206)))
(assert (=> (>= 10000 x289) (= (x1231 x289) (x11 x289))))
(assert (x308 x944))
(assert (= (x1231 87118632) (x11 87118632)))
(assert (x308 x1047))
(assert (= (ite (= x2 x640) x87 (x645 x2)) (x836 x2)))
(assert (= (and x356 x563) x593))
(assert (x308 x475))
(assert (x308 x706))
(assert (=> (<= x1104 10000) (= (x1231 x1104) (x11 x1104))))
(assert (= (x834 x722) (ite (and x593 x707) (x244 x722) (x781 x722))))
(assert (x308 x932))
(assert (= (x318 x1305) (ite (and (not x883) x563 x356 x1041 x1000 x94) (x1161 x1305) (ite (and x563 x356 x1000 x94 (not x1041)) (x1090 x1305) (ite (and x1000 x563 (not x94) x356) (x1030 x1305) (ite (and x356 x563 (not x1000)) (x1298 x1305) (x1301 x1305)))))))
(assert (= (x1174 x2) 0))
(assert (= (x679 x507) (ite (= x1272 x507) x474 (x221 x507))))
(assert (x308 x1101))
(assert (= (ite (and x950 x895 (not x1188)) (x27 x1060) (ite (and (not x895) x939 x950 (not x1188)) (x27 x1060) (x849 x1060))) (x596 x1060)))
(assert (= (ite (= x507 x334) x906 (x1090 x507)) (x1161 x507)))
(assert (= (x639 (x1231 x417)) x417))
(assert (= x724 (x639 (x1231 x724))))
(assert (x308 x1295))
(assert (= (x710 x402) (ite (and x950 x547) (x672 x402) (x905 x402))))
(assert (=> (>= 10000 x188) (= (x1231 x188) (x11 x188))))
(assert (x308 x907))
(assert (= (x1090 x68) (ite (= x1055 x68) x1043 (x1030 x68))))
(assert (x308 x329))
(assert (x308 x948))
(assert (x178 x404))
(assert (x308 x219))
(assert (x610 x43))
(assert (x308 x87))
(assert (x308 x450))
(assert (x308 x1023))
(assert (x308 x697))
(assert (x308 x1026))
(assert (x308 x811))
(assert (= x750 (x639 (x1231 x750))))
(assert (=> (>= 10000 x700) (= (x11 x700) (x1231 x700))))
(assert (x308 x481))
(assert (x178 x297))
(assert (= x42 (=> (and (<= 0 x877) (= x877 (x1288 x262)) (not (> 2293535753 x338)) (> 2690754053 x338) (= x255 (x1228 (x1231 x761) x618 0)) (>= 1461501637330902918203684832716283019655932542975 x411) (>= 1461501637330902918203684832716283019655932542975 x761) (not (= 2512682246 x338)) (> x775 0) (= x775 (x267 (x1231 274184521717934524641157099916833587206))) (<= x877 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x338 2960351575) (not (= 2293535753 x338)) (= x262 (x1228 (x1231 x411) x1042 0)) (= x1042 (x1228 (x1231 x1085) x255 0)) (not (= x338 2418364589)) (= x338 2532887486) (>= 1461501637330902918203684832716283019655932542975 x1085) (= (x1228 (x1231 x537) (x11 4) 0) x618) (= x351 x877)) (=> (and (= x750 x983) (= x351 x1004) (= x173 (<= x1004 x1239)) (= (and x708 x173) x460) (= x968 x634) (= x1217 x240)) x562))))
(assert (= (x639 (x1231 x664)) x664))
(assert (=> (<= x1085 10000) (= (x11 x1085) (x1231 x1085))))
(assert (= (x679 x936) (ite (= x1272 x936) x474 (x221 x936))))
(assert (= 2743102681 (x639 (x11 2743102681))))
(assert (x308 x376))
(assert (=> (<= x237 10000) (= (x1231 x237) (x11 x237))))
(assert (x308 x848))
(assert (x308 x1273))
(assert (x178 x443))
(assert (=> (>= 10000 x137) (= (x1231 x137) (x11 x137))))
(assert (x610 x488))
(assert (x178 x607))
(assert (x308 x740))
(assert (= (x639 (x11 2418364589)) 2418364589))
(assert (x610 x581))
(assert (x178 x137))
(assert (= (ite (= x948 x1305) x1082 (x180 x948)) (x672 x948)))
(assert (x178 x384))
(assert (x178 x1264))
(assert (x308 x923))
(assert (= (x639 (x1231 x1221)) x1221))
(assert (= (ite (= x1305 x1039) x1082 (x180 x1039)) (x672 x1039)))
(assert (= (x1090 x948) (ite (= x948 x1055) x1043 (x1030 x948))))
(assert (= (ite (= x390 x68) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1019 x68)) (x910 x68)))
(assert (= (x601 x1136) (ite (and (not x1188) x47 x950) (x637 x1136) (x283 x1136))))
(assert (x308 x54))
(assert (x178 x1146))
(assert (= (ite (= x948 x469) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x948)) (x1298 x948)))
(assert (= (ite (and x950 (not x1188) x441) (x836 x410) (ite (and (not x441) x276 x950 (not x1188) (not x363)) (x1196 x410) (ite (and x950 (not x276) (not x1188) (not x441)) (x836 x410) (x234 x410)))) (x403 x410)))
(assert (x308 x370))
(assert (=> (>= 10000 x546) (= (x1231 x546) (x11 x546))))
(assert (= (=> (and (= x483 x1302) (= (< (x783 (x1231 x384)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x53) (= x194 (= x384 274184521717934524641157099916833587218)) x1106 (= (x23 (x1231 274184521717934524641157099916833587206)) x179) (= x489 (x783 (x1231 x384))) (= (x23 (x1231 274184521717934524641157099916833587206)) x99) x282 x53 (= (x23 (x1231 x384)) x981) (= x1106 (<= 0 x99)) (= (< x981 115792089237316195423570985008687907853269984665640564039457584007913129639936) x282)) (and (=> (not x194) x464) (=> (and (= x388 274184521717934524641157099916833587206) (= x1079 (x644 x409)) (< (+ x492 x932) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1187 x932) (= x862 x1181) x194 (not (= x536 826074471)) (= (x1228 (x1231 274184521717934524641157099916833587206) (x11 1) 0) x409) (= (< x1079 x145) x69) (= (x1228 (x1231 x1107) (x11 1) 0) x599) (= x218 (x1228 (x1231 274184521717934524641157099916833587206) (x11 1) 0)) (= (or (> x949 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x949 64) (= (<= x949 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x466) (not (< x536 649617121)) (> x468 0) (= (x187 (- x1079 x145)) x279) (= x759 32) (= x291 x1302) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x828) (not x69) (= x652 x492) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x492 x932)) x715) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1079) (= 68 x291) (= x1107 (x815 1461501637330902918203684832716283019655932542975 x1181)) (not x466) (>= 1461501637330902918203684832716283019655932542975 x1181) (= (x187 (- x291 4)) x949) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x492) (not (< x291 4)) (not (= 649617121 x536)) (= x482 x1167) (= x468 (x267 (x1231 274184521717934524641157099916833587218))) (= x1009 274184521717934524641157099916833587206) (= 1 x511) (<= 0 x492) (= x277 x145) (not (= 1889567281 x536)) (not x715) (= (+ x652 x1187) x1074) (= (x1251 x599) x492) (= x536 2835717307) (>= x1079 0) (= (< x1079 x932) x784) (not (= 2514000705 x536)) (= (x815 1461501637330902918203684832716283019655932542975 x1181) x964) (= x145 x932) (not x784)) x991))) x943))
(assert (= (ite (and (not x986) x563 x356) (x318 x948) (x96 x948)) (x1080 x948)))
(assert (x308 x462))
(assert (x308 x638))
(assert (=> (<= x668 10000) (= (x1231 x668) (x11 x668))))
(assert (= x246 x1057))
(assert (= (x221 x936) (ite (= x936 x57) x1273 (x748 x936))))
(assert (= (x639 (x1231 x384)) x384))
(assert (x308 x1063))
(assert (x308 x896))
(assert (= (ite (= x722 x1305) x1082 (x180 x722)) (x672 x722)))
(assert (x308 x378))
(assert (=> (>= 10000 x767) (= (x1231 x767) (x11 x767))))
(assert (=> (>= 10000 x293) (= (x1231 x293) (x11 x293))))
(assert (= (x910 x1012) (ite (= x390 x1012) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1019 x1012))))
(assert (x308 x1181))
(assert (x308 x184))
(assert (x308 x780))
(assert (= x1271 (x639 (x1231 x1271))))
(assert (x308 x1034))
(assert (=> (<= x779 10000) (= (x11 x779) (x1231 x779))))
(assert (x308 x1206))
(assert (x178 x634))
(assert (=> (>= 10000 x362) (= (x11 x362) (x1231 x362))))
(assert (x308 x936))
(assert (= (x1231 2960351575) (x11 2960351575)))
(assert (x178 x85))
(assert (= (x639 (x1231 x411)) x411))
(assert (x308 x689))
(assert (x308 x1045))
(assert (x308 x507))
(assert (x308 x1284))
(assert (= x658 (=> (and (not (= x359 2690754053)) (= x38 x738) (not (= x359 2743102681)) (<= x144 1461501637330902918203684832716283019655932542975) (= x938 (x1228 (x1231 x144) x455 0)) (= 2798343961 x359) (not (< x359 2690754053)) (= (x267 (x1231 274184521717934524641157099916833587206)) x560) (= (x1228 (x1231 x188) (x11 5) 0) x455) (> x560 0) (> 2960351575 x359) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x738) (<= 0 x738) (not (< x359 2293535753)) (not (= 2764855426 x359)) (= (x1053 x938) x738)) (=> (and (= x896 x983) (= x968 x207) (= x240 x668) (= x38 x974)) x623))))
(assert (x308 x108))
(assert (x308 x1102))
(assert (= (x639 (x1231 x285)) x285))
(assert (x308 x845))
(assert (x308 x734))
(assert (x178 x537))
(assert (= (=> (and (<= x1189 1461501637330902918203684832716283019655932542975) (< x937 911411945) (= 69947311 x937) (<= 0 x646) (= x646 (x1084 x1285)) (> 2293535753 x937) (= x646 x782) (= x893 (x267 (x1231 274184521717934524641157099916833587206))) (> x893 0) (= x1285 (x1228 (x1231 x1189) x423 0)) (< x937 468353030) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x646) (= (x1228 (x1231 x102) (x11 10) 0) x423)) (=> (and (= x782 x578) (= x983 x619) (= x1194 x968) (= x240 x864)) x394)) x1051))
(assert (= (x639 (x1231 x907)) x907))
(assert (x308 x1040))
(assert (x308 x461))
(assert (x308 x585))
(assert (=> (<= x750 10000) (= (x11 x750) (x1231 x750))))
(assert (= (ite (= x410 x640) x87 (x645 x410)) (x836 x410)))
(assert (x308 x452))
(assert (=> (<= x384 10000) (= (x1231 x384) (x11 x384))))
(assert (x308 x421))
(assert (= (ite (and x593 x707) (x244 x419) (x781 x419)) (x834 x419)))
(assert (= (x639 (x1231 x607)) x607))
(assert (= (x800 x1198) (ite (and x975 (not x347) x63 x856 x1111 x32) (x238 x1198) (ite (and x32 x975 (not x1111) x63 x856) (x576 x1198) (ite (and x63 x32 x975 (not x856)) (x825 x1198) (ite (and x63 x975 (not x32)) (x910 x1198) (x757 x1198)))))))
(assert (x178 x990))
(assert (x308 x361))
(assert (x308 x1261))
(assert (=> (>= 10000 x730) (= (x1231 x730) (x11 x730))))
(assert (x308 x497))
(assert (x308 x1276))
(assert (= (x1298 x402) (ite (= x469 x402) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x402))))
(assert (x308 x340))
(assert (= (x576 x419) (ite (= x419 x319) x653 (x825 x419))))
(assert (= x880 (x639 (x1231 x880))))
(assert (x308 x533))
(assert (x308 x1243))
(assert (= (x1231 274184521717934524641157099916833587214) (x11 274184521717934524641157099916833587214)))
(assert (= (x639 (x1231 x288)) x288))
(assert (= (ite (= x390 x722) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1019 x722)) (x910 x722)))
(assert (x308 x821))
(assert (x308 x969))
(assert (= (x710 x507) (ite (and x547 x950) (x672 x507) (x905 x507))))
(assert (x308 x56))
(assert (= (x1298 x1151) (ite (= x469 x1151) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x1151))))
(assert (= (x825 x419) (ite (= x419 x1186) x232 (x910 x419))))
(assert (x308 x148))
(assert (x610 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x452 (x639 (x1231 x452))))
(assert (= x958 (x639 (x1231 x958))))
(assert (= (x403 x1131) (ite (and x441 (not x1188) x950) (x836 x1131) (ite (and (not x1188) x276 (not x441) x950 (not x363)) (x1196 x1131) (ite (and x950 (not x441) (not x1188) (not x276)) (x836 x1131) (x234 x1131))))))
(assert (x308 x1025))
(assert (=> (>= 10000 x1221) (= (x1231 x1221) (x11 x1221))))
(assert (x308 x1305))
(assert (= x612 (=> (and x226 x1097 (= x1097 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x242)) (= x656 x745) x752 (= (x391 (x1231 x341)) x242) (= (>= x241 0) x226) (= x961 (x843 (x1231 x341))) (= x1003 (x391 (x1231 274184521717934524641157099916833587206))) (= (= 274184521717934524641157099916833587218 x341) x707) (= x752 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x843 (x1231 x341)))) (= (x391 (x1231 274184521717934524641157099916833587206)) x241)) (and (=> (and (= x253 (x1228 (x1231 x10) (x11 1) 0)) (= x251 x745) (= x350 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x568) true) (< x568 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x568))) (= x251 68) (= x506 (< x1070 x400)) (= (x154 x253) x819) (not x350) (not (= x729 826074471)) (= x720 x400) x707 (= x427 x952) (= x440 x1257) (= 1 x1044) (= (< x1070 x427) x842) (not x913) (= x287 274184521717934524641157099916833587206) (<= x385 1461501637330902918203684832716283019655932542975) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x819 x427)) x913) (= x1070 (x1289 x98)) (= x299 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x729 649617121)) (>= x819 0) (<= x819 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x952 x545) x697) (= 32 x1014) (= x776 (x1228 (x1231 274184521717934524641157099916833587206) (x11 1) 0)) (not (= x729 2514000705)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1070) (= x118 (x267 (x1231 274184521717934524641157099916833587218))) (= x55 274184521717934524641157099916833587206) (<= 0 x1070) (not x506) (not (< x729 649617121)) (not (< x251 4)) (= x427 x400) (= (x815 1461501637330902918203684832716283019655932542975 x385) x10) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x427 x819)) (> x118 0) (= x862 x385) (= x642 (x187 (- x1070 x400))) (= x568 (x187 (- x251 4))) (= x729 2835717307) (= x1126 (x815 1461501637330902918203684832716283019655932542975 x385)) (not (= x729 1889567281)) (= x545 x819) (= x98 (x1228 (x1231 274184521717934524641157099916833587206) (x11 1) 0)) (not x842) (= x608 (x1228 (x1231 x1126) (x11 1) 0))) x355) (=> (not x707) x227)))))
(assert (= x278 x879))
(assert (= (x639 (x1231 x297)) x297))
(assert (= (=> (and (= x148 (x267 (x1231 274184521717934524641157099916833587206))) (= x315 x1154) (= (x27 x914) x315) (not (> 2293535753 x995)) (not (= x995 2690754053)) (>= x315 0) (> x148 0) (= (x1228 (x1231 x1217) x437 0) x1054) (not (> 2690754053 x995)) (<= x315 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1217) (>= 1461501637330902918203684832716283019655932542975 x634) (= x437 (x1228 (x1231 x750) (x11 3) 0)) (> 2960351575 x995) (= (x1228 (x1231 x634) x1054 0) x914) (= x995 2743102681)) (=> (and (= x968 x436) (= x240 x591) (= x1201 x1045) (= x1154 x290) (= x983 x881)) x393)) x562))
(assert (= (x1231 2764855426) (x11 2764855426)))
(assert (= (ite (= x1272 x61) x474 (x221 x61)) (x679 x61)))
(assert (= (x596 x660) (ite (and x950 (not x1188) x895) (x27 x660) (ite (and (not x1188) x950 (not x895) x939) (x27 x660) (x849 x660)))))
(assert (= (ite (and x356 (not x986) x563) (x318 x1198) (x96 x1198)) (x1080 x1198)))
(assert (= (x221 x948) (ite (= x57 x948) x1273 (x748 x948))))
(assert (=> (>= 10000 x591) (= (x11 x591) (x1231 x591))))
(assert (= (ite (and x950 x547) (x672 x2) (x905 x2)) (x710 x2)))
(assert (=> (<= x619 10000) (= (x11 x619) (x1231 x619))))
(assert (x308 x156))
(assert (x308 x1304))
(assert (x308 x531))
(assert (= (x710 x322) (ite (and x950 x547) (x672 x322) (x905 x322))))
(assert (= 69947311 (x639 (x11 69947311))))
(assert (= x990 (x639 (x1231 x990))))
(assert (= (x1161 x1153) (ite (= x1153 x334) x906 (x1090 x1153))))
(assert (=> (>= 10000 x144) (= (x11 x144) (x1231 x144))))
(assert (x308 x630))
(assert (x308 x685))
(assert (x308 x251))
(assert (x308 x1176))
(assert (= (x639 (x11 1889567281)) 1889567281))
(assert (x308 x671))
(assert (x308 x522))
(assert (x308 x431))
(assert (= (x11 649617121) (x1231 649617121)))
(assert (x308 x735))
(assert (= x513 x669))
(assert (= (x710 x332) (ite (and x950 x547) (x672 x332) (x905 x332))))
(assert (= (x672 x1305) x1082))
(assert (= x1168 (=> (and (not (= x1135 2743102681)) (>= 1461501637330902918203684832716283019655932542975 x1271) (= x231 (x267 (x1231 274184521717934524641157099916833587206))) (< x1135 2960351575) (= x817 (x1053 x909)) (not (= 2764855426 x1135)) (= x817 x654) (not (> 2293535753 x1135)) (not (= 2690754053 x1135)) (<= x817 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x231 0) (= 2798343961 x1135) (not (< x1135 2690754053)) (= x909 (x1228 (x1231 x1271) x519 0)) (= (x1228 (x1231 x704) (x11 5) 0) x519) (<= 0 x817)) (=> (and (= x761 x240) (= x537 x983) (= x411 x1201) (= x654 x1239) (= x968 x1085)) x42))))
(assert (x308 x1014))
(assert (= (x1298 x1153) (ite (= x1153 x469) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x1153))))
(assert (= 2798343961 (x639 (x11 2798343961))))
(assert (= (x836 x117) (ite (= x117 x640) x87 (x645 x117))))
(assert (x308 x36))
(assert (= (x639 (x1231 x136)) x136))
(assert (= (x639 (x1231 x387)) x387))
(assert (x308 x521))
(assert (= (x1174 x68) 0))
(assert (x308 x862))
(assert (x178 x896))
(assert (=> (<= x1107 10000) (= (x11 x1107) (x1231 x1107))))
(assert (x308 x673))
(assert (x308 x965))
(assert (x308 x319))
(assert (x308 x633))
(assert (x308 x1162))
(assert (x308 x209))
(assert (x308 x1281))
(assert (=> (>= 10000 x91) (= (x11 x91) (x1231 x91))))
(assert (x308 x595))
(assert (= true x982))
(assert (x308 x666))
(assert (x308 x1087))
(assert (x308 x1217))
(assert (=> (<= x761 10000) (= (x11 x761) (x1231 x761))))
(assert (x308 x930))
(assert (x308 x188))
(assert (=> (>= 10000 x303) (= (x11 x303) (x1231 x303))))
(assert (x308 x281))
(assert (x308 x131))
(assert (x308 x216))
(assert (x610 x585))
(assert (x308 x995))
(assert (= (ite (= x722 x640) x87 (x645 x722)) (x836 x722)))
(assert (= (ite (= x915 x402) x535 (x836 x402)) (x1196 x402)))
(assert (x178 x790))
(assert (= (x238 x1012) (ite (= x435 x1012) x930 (x576 x1012))))
(assert (= x591 (x639 (x1231 x591))))
(assert (x178 x285))
(assert (= (x672 x1272) (ite (= x1305 x1272) x1082 (x180 x1272))))
(assert (= (ite (= x722 x334) x906 (x1090 x722)) (x1161 x722)))
(assert (x308 x436))
(assert (= (x910 x860) (ite (= x860 x390) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1019 x860))))
(assert (x178 x664))
(assert true)
(assert (= (x1174 192) 0))
(assert (x610 x112))
(assert (= x1245 x879))
(assert (x308 x447))
(assert (= x246 x785))
(assert (= (ite (and x356 (not x986) x563) (x318 x2) (x96 x2)) (x1080 x2)))
(assert (=> (>= 10000 x664) (= (x1231 x664) (x11 x664))))
(assert (= 2211524764 (x639 (x11 2211524764))))
(assert (= (ite (= x2 x334) x906 (x1090 x2)) (x1161 x2)))
(assert (x308 x324))
(assert (= (x639 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x639 (x954 x163 1)) (+ 1 (x639 x163))))
(assert (x308 x288))
(assert (x308 x662))
(assert (x308 x352))
(assert (=> (<= x225 10000) (= (x1231 x225) (x11 x225))))
(assert (x308 x501))
(assert (= x1195 (x639 (x1231 x1195))))
(assert (x308 x498))
(assert (x178 x144))
(assert (x178 x845))
(assert (x308 x85))
(assert (= (x710 x117) (ite (and x950 x547) (x672 x117) (x905 x117))))
(assert (= x1107 (x639 (x1231 x1107))))
(assert (x308 x435))
(assert (x308 x341))
(assert (x295 x1086 x1210))
(assert (x308 x534))
(assert (= (x672 x2) (ite (= x1305 x2) x1082 (x180 x2))))
(assert (x308 x806))
(assert (x178 x591))
(assert (x308 x656))
(assert (=> (<= x404 10000) (= (x1231 x404) (x11 x404))))
(assert (=> (<= x1045 10000) (= (x11 x1045) (x1231 x1045))))
(assert (x308 x92))
(assert (= (and (not x707) x593) x889))
(assert (x308 x1129))
(assert (= x339 x950))
(assert (x308 x1082))
(assert (x308 x371))
(assert (x308 x315))
(assert (= (x639 (x1231 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x308 x1004))
(assert (x308 x442))
(assert (x308 x777))
(assert (=> (<= x479 10000) (= (x1231 x479) (x11 x479))))
(assert (= (x1174 x915) 0))
(assert (= (x1231 826074471) (x11 826074471)))
(assert (x308 x1262))
(assert (= x78 x1057))
(assert (x308 x189))
(assert (= (x639 (x1231 x613)) x613))
(assert (=> (>= 10000 x452) (= (x1231 x452) (x11 x452))))
(assert (x308 x720))
(assert (x308 x38))
(assert (x308 x335))
(assert (x308 x523))
(assert (= (x1090 x410) (ite (= x1055 x410) x1043 (x1030 x410))))
(assert (x308 x242))
(assert (= (x1196 x1272) (ite (= x1272 x915) x535 (x836 x1272))))
(assert (x178 x1263))
(assert (x308 x983))
(assert (x308 x326))
(assert (= (ite (= x322 x57) x1273 (x748 x322)) (x221 x322)))
(assert (= (=> (and (= x717 (< 0 (x267 (x1231 274184521717934524641157099916833587206)))) (= false x820) (= x649 false) (= x240 x243) (= x320 4) (= false x1260) x583 (= x335 x1233) (>= x1201 0) (= x1265 (x391 (x1231 274184521717934524641157099916833587218))) x564 (<= 0 x968) (>= x114 0) (<= x968 1461501637330902918203684832716283019655932542975) (= false x885) (= x978 x803) (= x987 (x391 (x1231 274184521717934524641157099916833587206))) (<= 0 x803) (<= 0 x1265) (>= x240 0) (= x583 (< 0 (x267 (x1231 274184521717934524641157099916833587218)))) x717 (<= x240 1461501637330902918203684832716283019655932542975) (= 87118632 x9) (= x564 (< 0 (x267 (x1231 274184521717934524641157099916833587214)))) (<= x803 1461501637330902918203684832716283019655932542975) (= x114 (x391 (x1231 274184521717934524641157099916833587214))) (= x65 x983) (<= 0 x987) (<= 0 x1233) (<= x1201 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1233)) x90) x208))
(assert (= (x639 (x1231 x239)) x239))
(assert (x308 x102))
(assert (= (ite (= x469 x1198) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x1198)) (x1298 x1198)))
(assert (= (ite (= x410 x57) x1273 (x748 x410)) (x221 x410)))
(assert (x308 x860))
(assert (x178 x411))
(assert (= (x639 (x1231 x989)) x989))
(assert (x308 x756))
(assert (= (x639 (x1231 x734)) x734))
(assert (x308 x377))
(assert (x308 x646))
(assert (x308 x1076))
(assert (x308 x960))
(assert (x308 x946))
(assert (x308 x918))
(assert (=> (<= x814 10000) (= (x1231 x814) (x11 x814))))
(assert (= 0 (x1174 x936)))
(assert (x178 x779))
(assert (= x355 (=> (and (= (x30 (x1231 274184521717934524641157099916833587206)) x72) (= (= x1014 0) x1133) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x30 (x1231 274184521717934524641157099916833587206))) x1275) (= (x604 (x1231 x341)) x95) x1275 (not (= x1044 0)) (or (not x833) (and (= x2 (x49 (+ x1153 32))) (= x1223 (= x872 0)) (= (not x1223) x955) (< 0 x872) (= x872 x454) x833 (= x454 (ite x955 1 0)) (= (x942 x2) x872) (not (or (and (= (<= x442 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x442 32)) (> x442 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x442 (x942 x1153)))) (= (> x382 0) x833) (or (and x1133 (= x1297 x860) (= 96 x1153)) (and (not x1133) (= x1153 x1297) (= (x49 (+ x1216 96)) x903) (= x585 (x49 (+ 63 x1014))) (= x214 x860) (= (x815 115792089237316195423570985008687907853269984665640564039457584007913129639904 x585) x336) (= (x49 (+ x1297 x336)) x214))) (= x382 (x942 x1153))) x588)))
(assert (= x921 (x639 (x1231 x921))))
(assert (= 0 (x1174 x1272)))
(assert (= (ite (= x915 x1153) x535 (x836 x1153)) (x1196 x1153)))
(assert (= x1264 (x639 (x1231 x1264))))
(assert (x178 x979))
(assert (x178 x730))
(assert (x308 x804))
(assert (x308 x537))
(assert (x308 x136))
(assert (x308 x1256))
(assert (x308 x1190))
(assert (x308 x1264))
(assert (=> (<= x136 10000) (= (x1231 x136) (x11 x136))))
(assert (x308 x72))
(assert (= (ite (= x948 x1272) x474 (x221 x948)) (x679 x948)))
(assert (x308 x110))
(assert (x308 x1135))
(assert (= (ite (= x915 x936) x535 (x836 x936)) (x1196 x936)))
(assert (x308 x106))
(assert (x308 x790))
(assert (x308 x402))
(assert (= (x318 x419) (ite (and x356 x94 x1041 x563 x1000 (not x883)) (x1161 x419) (ite (and x94 x356 x563 x1000 (not x1041)) (x1090 x419) (ite (and x563 x356 (not x94) x1000) (x1030 x419) (ite (and x563 (not x1000) x356) (x1298 x419) (x1301 x419)))))))
(assert (x316 x1021 x112))
(assert (= (x1080 x1305) (ite (and (not x986) x563 x356) (x318 x1305) (x96 x1305))))
(assert (x308 x1085))
(assert (= x928 (x639 (x1231 x928))))
(assert (x610 x676))
(assert (x308 x290))
(assert (=> (>= 10000 x979) (= (x1231 x979) (x11 x979))))
(assert (x308 x1077))
(assert (x178 x1085))
(assert (= (x639 (x1231 x10)) x10))
(assert (= (ite (= x402 x1036) x1267 (x1298 x402)) (x1030 x402)))
(assert (x178 x522))
(assert (x308 x366))
(assert (x308 x1055))
(assert (x308 x76))
(assert (x178 x207))
(assert (x308 x1154))
(assert (= (x639 (x1231 x157)) x157))
(assert (= x1273 (x221 x57)))
(assert (x308 x13))
(assert (= x243 (x639 (x1231 x243))))
(assert (= (x639 (x1231 x875)) x875))
(assert (= (x11 115792089237316195423570985008687907853269984665640564039457) (x1231 115792089237316195423570985008687907853269984665640564039457)))
(assert (= (ite (= x1036 x1305) x1267 (x1298 x1305)) (x1030 x1305)))
(assert (= (x639 (x1231 x225)) x225))
(assert (x308 x726))
(assert (= (ite (and x547 x950) (x672 x1198) (x905 x1198)) (x710 x1198)))
(assert (x178 x225))
(assert (=> (>= 10000 x70) (= (x1231 x70) (x11 x70))))
(assert (x178 x14))
(assert (x308 x819))
(assert (= (x11 468353030) (x1231 468353030)))
(assert (x308 x1299))
(assert (= (x120 x1012) (ite (and x194 x892) (x1093 x1012) (x590 x1012))))
(assert (x308 x61))
(assert (x308 x297))
(assert (x308 x985))
(assert (=> (>= 10000 x1126) (= (x1231 x1126) (x11 x1126))))
(assert (= (ite (and x1246 x950 (not x1188)) (x596 x660) (ite (and x950 x1188) (x27 x660) (x615 x660))) (x731 x660)))
(assert (x308 x256))
(assert (= x1028 (=> (and (> 2293535753 x475) (= x548 x528) (= x4 (x1228 (x1231 x387) x40 0)) (= (x1228 (x1231 x362) x4 0) x406) (= (x267 (x1231 274184521717934524641157099916833587206)) x1202) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x548) (not (= 468353030 x475)) (<= 0 x548) (not (= 635128645 x475)) (= x475 759532456) (not (< x475 468353030)) (<= x362 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x387) (= (x1228 (x1231 x254) (x11 7) 0) x40) (> 911411945 x475) (= x548 (x103 x406)) (< 0 x1202)) (=> (and (= x417 x983) (= x1274 x528) (= (>= x1274 x670) x827) (= x928 x240) x827) x1007))))
(assert (x308 x1227))
(assert (= x761 (x639 (x1231 x761))))
(assert (=> (>= 10000 x387) (= (x11 x387) (x1231 x387))))
(assert (=> (>= 10000 x613) (= (x11 x613) (x1231 x613))))
(assert (= x278 x449))
(assert (x308 x844))
(assert (x308 x487))
(assert (=> (>= 10000 x747) (= (x1231 x747) (x11 x747))))
(assert (x308 x949))
(assert (= (x221 x1305) (ite (= x1305 x57) x1273 (x748 x1305))))
(assert (= (x1298 x419) (ite (= x469 x419) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x419))))
(assert (not x208))
(assert (= (x11 274184521717934524641157099916833587218) (x1231 274184521717934524641157099916833587218)))
(assert (= x1263 (x639 (x1231 x1263))))
(assert (x178 x958))
(assert (= (x679 x722) (ite (= x722 x1272) x474 (x221 x722))))
(assert (x308 x745))
(assert (x308 x302))
(assert (= (=> (and (= (x1228 (x1231 x65) (x11 6) 0) x786) (= x259 (x1109 x1269)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x259) (= (x1228 (x1231 x243) x786 0) x1269) (< x123 2293535753) (< 0 x1304) (not (= 2211524764 x123)) (not (< x123 1968616202)) (not (> 911411945 x123)) (= x123 2258409472) (>= x259 0) (not (= x123 2061678023)) (not (= x123 1968616202)) (= x1304 (x267 (x1231 274184521717934524641157099916833587206))) (<= x243 1461501637330902918203684832716283019655932542975) (= x598 x259) (not (= 1986467848 x123))) (=> (and (= x254 x983) (= x240 x387) (= x362 x968) (= x598 x670)) x1028)) x90))
(assert (x308 x1297))
(assert (x308 x1010))
(assert (x178 x1271))
(assert (=> (<= x734 10000) (= (x1231 x734) (x11 x734))))
(assert (x308 x555))
(assert (= (ite (and (not x1188) x950 x895) (x27 x538) (ite (and x950 x939 (not x1188) (not x895)) (x27 x538) (x849 x538))) (x596 x538)))
(assert (= x207 (x639 (x1231 x207))))
(assert (=> (<= x254 10000) (= (x11 x254) (x1231 x254))))
(assert (x178 x188))
(assert (=> (>= 10000 x349) (= (x11 x349) (x1231 x349))))
(assert (x610 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x308 x1146))
(assert (x308 x67))
(assert (= x1077 (x639 (x1231 x1077))))
(assert (x308 x974))
(assert (x308 x1236))
(assert (x308 x682))
(assert (x308 x643))
(assert (= (ite (= x57 x117) x1273 (x748 x117)) (x221 x117)))
(assert (x308 x118))
(assert (x308 x132))
(assert (= (ite (= x410 x1036) x1267 (x1298 x410)) (x1030 x410)))
(assert (= (ite (and x1000 x356 x94 x563 (not x883) x1041) (x1161 x402) (ite (and x356 x563 x94 x1000 (not x1041)) (x1090 x402) (ite (and x1000 x356 (not x94) x563) (x1030 x402) (ite (and x563 (not x1000) x356) (x1298 x402) (x1301 x402))))) (x318 x402)))
(assert (x308 x41))
(assert (x610 x210))
(assert (= (x1231 635128645) (x11 635128645)))
(assert (= (ite (= x1305 x936) x1082 (x180 x936)) (x672 x936)))
(assert (x308 x65))
(assert (= 604800 (x639 (x11 604800))))
(assert (x308 x43))
(assert (x308 x775))
(assert (=> (>= 10000 x990) (= (x11 x990) (x1231 x990))))
(assert (x308 x559))
(assert (=> (<= x864 10000) (= (x1231 x864) (x11 x864))))
(assert (= (x1196 x1039) (ite (= x1039 x915) x535 (x836 x1039))))
(assert (= (ite (= x1305 x469) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x1305)) (x1298 x1305)))
(assert (x308 x1290))
(assert (= (x710 x1305) (ite (and x950 x547) (x672 x1305) (x905 x1305))))
(assert (= (x1231 142201243) (x11 142201243)))
(assert (x308 x971))
(assert (= (ite (= x68 x469) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x68)) (x1298 x68)))
(assert (= (x1030 x936) (ite (= x1036 x936) x1267 (x1298 x936))))
(assert (x308 x532))
(assert (= 274184521717934524641157099916833587218 (x639 (x1231 274184521717934524641157099916833587218))))
(assert (= x85 (x639 (x1231 x85))))
(assert (x308 x124))
(assert (= (ite (= x68 x1305) x1082 (x180 x68)) (x672 x68)))
(assert (= (x11 18446744073709551615) (x1231 18446744073709551615)))
(assert (x308 x195))
(assert (= (ite (and x593 x707) (x244 x1153) (x781 x1153)) (x834 x1153)))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x1194) (= x924 (x1015 x35)) (not (= x224 69947311)) (= x888 x924) (< x224 468353030) (>= x924 0) (< x224 911411945) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x924) (not (= x224 87118632)) (= 142201243 x224) (= (x1228 (x1231 x1194) x1016 0) x35) (= x1024 (x267 (x1231 274184521717934524641157099916833587206))) (= (x1228 (x1231 x619) (x11 9) 0) x647) (> 2293535753 x224) (<= x864 1461501637330902918203684832716283019655932542975) (= (x1228 (x1231 x864) x647 0) x1016) (> x1024 0)) (=> (and (= x726 x983) (= x968 x92) (= x550 x888) (= x240 x1077) (= x683 (and x912 x846)) (= (>= x578 x550) x846)) x52)) x394))
(assert (= 2258409472 (x639 (x11 2258409472))))
(assert (x308 x872))
(assert (x178 x681))
(assert (x178 x747))
(assert (= (x825 x1198) (ite (= x1186 x1198) x232 (x910 x1198))))
(assert (x308 x12))
(assert (x308 x958))
(assert (= (ite (= x1036 x1012) x1267 (x1298 x1012)) (x1030 x1012)))
(assert (=> (>= 10000 x881) (= (x1231 x881) (x11 x881))))
(assert (= 468353030 (x639 (x11 468353030))))
(assert (x308 x388))
(assert (= (ite (and x950 x441 (not x1188)) (x836 x117) (ite (and (not x441) (not x363) (not x1188) x276 x950) (x1196 x117) (ite (and (not x1188) (not x276) x950 (not x441)) (x836 x117) (x234 x117)))) (x403 x117)))
(assert (= (x1174 x332) 0))
(assert (= (ite (and x593 x707) (x244 x1198) (x781 x1198)) (x834 x1198)))
(assert (x308 x2))
(assert (= (x11 1986467848) (x1231 1986467848)))
(assert (= x896 (x639 (x1231 x896))))
(assert (= 1968616202 (x639 (x11 1968616202))))
(assert (x308 x667))
(assert (= (x1298 x61) (ite (= x61 x469) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x61))))
(assert (x308 x619))
(assert (x308 x556))
(assert (x308 x782))
(assert (= x102 (x639 (x1231 x102))))
(assert (x308 x26))
(assert (= (x639 (x11 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (= (x1231 2211524764) (x11 2211524764)))
(assert (= (x1231 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x11 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x785 x368))
(assert (=> (>= 10000 x724) (= (x1231 x724) (x11 x724))))
(assert (x308 x1267))
(assert (= 2764855426 (x639 (x11 2764855426))))
(assert (= x1076 (x639 (x1231 x1076))))
(assert (= (x318 x68) (ite (and x1041 x94 x1000 x356 x563 (not x883)) (x1161 x68) (ite (and x1000 (not x1041) x563 x356 x94) (x1090 x68) (ite (and x563 x1000 x356 (not x94)) (x1030 x68) (ite (and (not x1000) x563 x356) (x1298 x68) (x1301 x68)))))))
(assert (= (x639 (x11 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= (x679 x322) (ite (= x1272 x322) x474 (x221 x322))))
(assert (= (x11 2532887486) (x1231 2532887486)))
(assert (= x1194 (x639 (x1231 x1194))))
(assert (= (ite (= x507 x1305) x1082 (x180 x507)) (x672 x507)))
(assert (x308 x1257))
(assert (x308 x1044))
(assert (x308 x518))
(assert (x308 x228))
(assert (= (ite (= x334 x948) x906 (x1090 x948)) (x1161 x948)))
(assert (= (x11 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x1231 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x308 x287))
(assert (x295 x918 x705))
(assert (= (x318 x2) (ite (and x1041 (not x883) x356 x1000 x94 x563) (x1161 x2) (ite (and x94 x356 x563 (not x1041) x1000) (x1090 x2) (ite (and (not x94) x563 x356 x1000) (x1030 x2) (ite (and x356 (not x1000) x563) (x1298 x2) (x1301 x2)))))))
(assert (x308 x75))
(assert (=> (>= 10000 x958) (= (x11 x958) (x1231 x958))))
(assert (= (ite (= x1272 x117) x474 (x221 x117)) (x679 x117)))
(assert (x308 x924))
(assert (x308 x1031))
(assert (x308 x427))
(assert (= (x1090 x402) (ite (= x402 x1055) x1043 (x1030 x402))))
(assert (= (x221 x419) (ite (= x419 x57) x1273 (x748 x419))))
(assert (x308 x1099))
(assert (= (x710 x61) (ite (and x547 x950) (x672 x61) (x905 x61))))
(assert (x308 x80))
(assert (x178 x303))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x639 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x308 x799))
(assert (x308 x1286))
(assert (= (x639 (x11 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (x308 x713))
(assert (x308 x1167))
(assert (x308 x68))
(assert (x308 x605))
(assert (= x144 (x639 (x1231 x144))))
(assert (x308 x546))
(assert (x24 x581 x1006))
(assert (x308 x203))
(assert (= (x1090 x1198) (ite (= x1055 x1198) x1043 (x1030 x1198))))
(assert (= (or (and x707 x593) (and x721 x889)) x470))
(assert (= (x834 x2) (ite (and x593 x707) (x244 x2) (x781 x2))))
(assert (x308 x980))
(assert (= (ite (= x1272 x57) x1273 (x748 x1272)) (x221 x1272)))
(assert (= (x731 x472) (ite (and x950 (not x1188) x1246) (x596 x472) (ite (and x1188 x950) (x27 x472) (x615 x472)))))
(assert (= (ite (= x1153 x1055) x1043 (x1030 x1153)) (x1090 x1153)))
(assert (= 0 (x1174 x1012)))
(assert (= x362 (x639 (x1231 x362))))
(assert (=> (>= 10000 x1087) (= (x11 x1087) (x1231 x1087))))
(assert (=> (<= x285 10000) (= (x1231 x285) (x11 x285))))
(assert (=> (<= x85 10000) (= (x11 x85) (x1231 x85))))
(assert (x308 x338))
(assert (x308 x632))
(assert (x308 x738))
(assert (= (=> (and (= x553 (x1228 (x1231 x443) x650 0)) (< x838 2960351575) (= (x1230 x553) x108) (not (= 2743102681 x838)) (< 0 x1227) (not (< x838 2690754053)) (not (= x838 2764855426)) (not (> 2293535753 x838)) (= (x1228 (x1231 x237) (x11 5) 0) x650) (= x108 x377) (= x1227 (x267 (x1231 274184521717934524641157099916833587206))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x108) (not (= 2690754053 x838)) (= x838 2798343961) (>= 1461501637330902918203684832716283019655932542975 x443) (<= 0 x108)) (=> (and (= x377 x944) (= x1146 x968) (= x613 x983) (= x425 x240)) x567)) x25))
(assert (x308 x1274))
(assert (x308 x322))
(assert (= (ite (= x640 x936) x87 (x645 x936)) (x836 x936)))
(assert (= (ite (and x593 x707) (x244 x1305) (x781 x1305)) (x834 x1305)))
(assert (=> (<= x415 10000) (= (x1231 x415) (x11 x415))))
(assert (x308 x575))
(assert (=> (<= x348 10000) (= (x11 x348) (x1231 x348))))
(assert (=> (<= x102 10000) (= (x1231 x102) (x11 x102))))
(assert (x308 x725))
(assert (= (x1196 x507) (ite (= x915 x507) x535 (x836 x507))))
(assert (x308 x817))
(assert (x308 x1126))
(assert (= (ite (= x61 x57) x1273 (x748 x61)) (x221 x61)))
(assert (x308 x763))
(assert (= (x639 (x1231 x677)) x677))
(assert (x178 x387))
(assert (= x109 x101))
(assert (x178 x65))
(assert (x308 x550))
(assert (= (x1231 2514000705) (x11 2514000705)))
(assert (x308 x39))
(assert (x178 x288))
(assert (x308 x243))
(assert (x308 x854))
(assert (x308 x1272))
(assert (x308 x591))
(assert (= (ite (= x469 x2) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x2)) (x1298 x2)))
(assert (x308 x512))
(assert (=> (>= 10000 x1194) (= (x1231 x1194) (x11 x1194))))
(assert (= (x221 x1198) (ite (= x1198 x57) x1273 (x748 x1198))))
(assert (x178 x70))
(assert (= 274184521717934524641157099916833587206 (x639 (x11 274184521717934524641157099916833587206))))
(assert (= (x120 x1198) (ite (and x194 x892) (x1093 x1198) (x590 x1198))))
(assert (x308 x492))
(assert (x308 x552))
(assert (x308 x587))
(assert (=> (>= 10000 x1146) (= (x1231 x1146) (x11 x1146))))
(assert (= x857 (and (not x194) x892)))
(assert (= (x639 (x1231 x666)) x666))
(assert (x308 x1037))
(assert (x308 x137))
(assert (=> (<= x473 10000) (= (x11 x473) (x1231 x473))))
(assert (x308 x169))
(assert (= x280 (x639 (x1231 x280))))
(assert (x178 x362))
(assert (x308 x320))
(assert (=> (>= 10000 x989) (= (x11 x989) (x1231 x989))))
(assert (= (ite (= x1055 x2) x1043 (x1030 x2)) (x1090 x2)))
(assert (= (x11 2061678023) (x1231 2061678023)))
(assert (= x78 x709))
(assert (x178 x864))
(assert (= 0 (x1174 x1131)))
(assert (= x443 (x639 (x1231 x443))))
(assert (= x1156 (x639 (x1231 x1156))))
(assert (= (x639 (x11 18446744073709551615)) 18446744073709551615))
(assert (= (x1090 x722) (ite (= x1055 x722) x1043 (x1030 x722))))
(assert (x308 x277))
(assert (= (x639 (x954 x34 1)) (+ (x639 x34) 1)))
(assert (= (x11 2743102681) (x1231 2743102681)))
(assert (= (=> (and (not (= 2743102681 x1095)) (= x1295 x689) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1295) (not (= x1095 2764855426)) (>= 1461501637330902918203684832716283019655932542975 x450) (= x884 (x1228 (x1231 x450) x1225 0)) (= (x1228 (x1231 x989) (x11 5) 0) x1225) (<= 0 x1295) (not (= x1095 2690754053)) (> 2960351575 x1095) (= x1295 (x1230 x884)) (= x740 (x267 (x1231 274184521717934524641157099916833587206))) (not (< x1095 2690754053)) (= x1095 2798343961) (not (< x1095 2293535753)) (< 0 x740)) (=> (and (= x404 x983) (= x797 x689) (= x137 x1201) (= x968 x907) (= x664 x240)) x772)) x609))
(assert (x308 x220))
(assert (x308 x693))
(assert (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1231 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x1261 (x639 (x1231 x1261))))
(assert (x308 x861))
(assert (= (x11 69947311) (x1231 69947311)))
(assert (x308 x144))
(assert (x308 x224))
(assert (x308 x474))
(assert (x308 x716))
(assert (= (x639 (x1231 x404)) x404))
(assert (x308 x1123))
(assert (=> (<= x537 10000) (= (x1231 x537) (x11 x537))))
(assert (x308 x171))
(assert (x308 x428))
(assert (x178 x436))
(assert (= x736 x669))
(assert (x308 x1150))
(assert (= (x639 (x11 2293535753)) 2293535753))
(assert (x308 x536))
(assert (x308 x407))
(assert (x308 x999))
(assert (x308 x197))
(assert (x308 x210))
(assert (x308 x357))
(assert (=> (<= x411 10000) (= (x1231 x411) (x11 x411))))
(assert (= x531 (x639 (x1231 x531))))
(assert (x308 x635))
(assert (= (ite (and x547 x950) (x672 x410) (x905 x410)) (x710 x410)))
(assert (= (ite (= x1305 x332) x1082 (x180 x332)) (x672 x332)))
(assert (x308 x21))
(assert (= 87118632 (x639 (x11 87118632))))
(assert (= 0 (x1174 x322)))
(assert (x308 x1258))
(assert (x308 x373))
(assert (x308 x1271))
(assert (= (ite (and (not x883) x1000 x356 x94 x1041 x563) (x1161 x1198) (ite (and x563 (not x1041) x1000 x94 x356) (x1090 x1198) (ite (and x356 x563 (not x94) x1000) (x1030 x1198) (ite (and (not x1000) x356 x563) (x1298 x1198) (x1301 x1198))))) (x318 x1198)))
(assert (= (x1174 x1039) 0))
(assert (=> (>= 10000 x677) (= (x1231 x677) (x11 x677))))
(assert (x308 x767))
(assert (x308 x1036))
(assert (=> (<= x321 10000) (= (x1231 x321) (x11 x321))))
(assert (= (x639 (x11 2514000705)) 2514000705))
(assert (= (x639 (x11 2532887486)) 2532887486))
(assert (x308 x528))
(assert (= (ite (= x402 x334) x906 (x1090 x402)) (x1161 x402)))
(assert (x178 x704))
(assert (=> (>= 10000 x726) (= (x11 x726) (x1231 x726))))
(assert (= (ite (= x1131 x57) x1273 (x748 x1131)) (x221 x1131)))
(assert (x178 x293))
(assert (x178 x280))
(assert (x308 x29))
(assert (x308 x419))
(assert (x308 x1189))
(assert (x308 x1131))
(assert (= (ite (= x419 x915) x535 (x836 x419)) (x1196 x419)))
(assert (= (x403 x332) (ite (and x950 (not x1188) x441) (x836 x332) (ite (and x276 x950 (not x441) (not x363) (not x1188)) (x1196 x332) (ite (and (not x441) x950 (not x276) (not x1188)) (x836 x332) (x234 x332))))))
(assert (=> (<= x1263 10000) (= (x1231 x1263) (x11 x1263))))
(assert (=> (<= x1156 10000) (= (x1231 x1156) (x11 x1156))))
(assert (x178 x734))
(assert (x178 x533))
(assert (x308 x1039))
(assert (= (ite (and (not x1188) x441 x950) (x836 x322) (ite (and (not x1188) (not x441) x950 (not x363) x276) (x1196 x322) (ite (and (not x276) (not x1188) (not x441) x950) (x836 x322) (x234 x322)))) (x403 x322)))
(assert (= x137 (x639 (x1231 x137))))
(assert (x308 x465))
(assert (x308 x803))
(assert (= (ite (= x1305 x1153) x1082 (x180 x1153)) (x672 x1153)))
(assert (x308 x71))
(assert (x308 x265))
(assert (x178 274184521717934524641157099916833587206))
(assert (= 0 (x1174 x722)))
(assert (x308 x880))
(assert (x178 x341))
(assert (x178 x417))
(assert (x308 x1169))
(assert (x308 x572))
(assert (x308 x1158))
(assert (x178 x668))
(assert (x610 1461501637330902918203684832716283019655932542975))
(assert (x178 x789))
(assert (= (ite (= x1198 x435) x930 (x576 x1198)) (x238 x1198)))
(assert (= (ite (and x441 (not x1188) x950) (x836 x2) (ite (and x276 (not x363) (not x1188) x950 (not x441)) (x1196 x2) (ite (and (not x276) (not x1188) x950 (not x441)) (x836 x2) (x234 x2)))) (x403 x2)))
(assert (x308 x574))
(assert (x178 x724))
(assert (=> (<= x896 10000) (= (x1231 x896) (x11 x896))))
(assert (= (x742 x648) (ite (and (not x1188) x950 x895) (x88 x648) (ite (and (not x1188) (not x895) x939 x950) (x871 x648) (x1118 x648)))))
(assert (= 1986467848 (x639 (x11 1986467848))))
(assert (= (x1161 x410) (ite (= x410 x334) x906 (x1090 x410))))
(assert (= (x1196 x117) (ite (= x117 x915) x535 (x836 x117))))
(assert (= x594 (or (and x975 (not x63)) (and x563 (not x356)) x1100)))
(assert (=> (<= x607 10000) (= (x1231 x607) (x11 x607))))
(assert (x308 x1058))
(assert (x308 x1113))
(assert (= (x639 (x1231 x864)) x864))
(assert (= (x834 x507) (ite (and x707 x593) (x244 x507) (x781 x507))))
(assert (= x313 (and x889 (not x721))))
(assert (x308 x245))
(assert (x308 x1094))
(assert (= (x1161 x1012) (ite (= x1012 x334) x906 (x1090 x1012))))
(assert (= (x1231 911411945) (x11 911411945)))
(assert (x308 x1049))
(assert (x308 x704))
(assert (= (ite (= x61 x1036) x1267 (x1298 x61)) (x1030 x61)))
(assert (x308 x822))
(assert (= (x318 x1153) (ite (and x356 x563 (not x883) x1000 x94 x1041) (x1161 x1153) (ite (and x563 (not x1041) x94 x356 x1000) (x1090 x1153) (ite (and x356 (not x94) x563 x1000) (x1030 x1153) (ite (and (not x1000) x356 x563) (x1298 x1153) (x1301 x1153)))))))
(assert (= (x1080 x68) (ite (and (not x986) x563 x356) (x318 x68) (x96 x68))))
(assert (= (x1090 x1012) (ite (= x1055 x1012) x1043 (x1030 x1012))))
(assert (= (x639 (x1231 x70)) x70))
(assert (= (ite (and x593 x707) (x244 x68) (x781 x68)) (x834 x68)))
(assert (x308 x254))
(assert (= (x639 (x1231 x1217)) x1217))
(assert (= x464 (=> (= x859 (= x384 274184521717934524641157099916833587214)) (and (=> (and (= x496 (x584 x925)) (= x358 x324) (not x922) (= x529 (or (> x523 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x523) true) (< x523 64)))) (= x1261 (x815 1461501637330902918203684832716283019655932542975 x676)) (= (>= (+ x324 x496) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x922) (= x676 x862) (<= x676 1461501637330902918203684832716283019655932542975) (not (< x195 4)) (= x517 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x496 x1145) (= x759 32) (<= x496 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x496 x324)) (= x284 x1110) (= (> x324 x614) x141) (= x185 (x187 (- x614 x763))) (not (= 2514000705 x802)) (not (= x802 649617121)) (not x994) (= 1 x511) (>= x614 0) (= (x815 1461501637330902918203684832716283019655932542975 x676) x182) (> x806 0) (= 274184521717934524641157099916833587206 x985) (= x763 x324) (= x195 x1302) (not (> 649617121 x802)) x859 (not x141) (= 68 x195) (= x802 2835717307) (= x780 274184521717934524641157099916833587206) (= (x267 (x1231 274184521717934524641157099916833587214)) x806) (= x523 (x187 (- x195 4))) (= (x1228 (x1231 274184521717934524641157099916833587206) (x11 1) 0) x628) (<= 0 x496) (= (< x614 x763) x994) (= x614 (x839 x628)) (not x529) (<= x614 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 826074471 x802)) (= x763 x277) (not (= 1889567281 x802)) (= x128 (x1228 (x1231 274184521717934524641157099916833587206) (x11 1) 0)) (= x219 (+ x358 x1145)) (= x925 (x1228 (x1231 x1261) (x11 1) 0))) x991) (=> (not x859) x855)))))
(assert (=> (<= x1261 10000) (= (x11 x1261) (x1231 x1261))))
(assert (= (x710 x1039) (ite (and x950 x547) (x672 x1039) (x905 x1039))))
(assert (= (x1030 x68) (ite (= x1036 x68) x1267 (x1298 x68))))
(assert (x308 x372))
(assert (= x533 (x639 (x1231 x533))))
(assert (= (x1080 x402) (ite (and x356 (not x986) x563) (x318 x402) (x96 x402))))
(assert (= (x1030 x1198) (ite (= x1036 x1198) x1267 (x1298 x1198))))
(assert (x308 x1074))
(assert (= (ite (= x640 x948) x87 (x645 x948)) (x836 x948)))
(assert (x178 x1195))
(assert (x308 x1024))
(assert (x308 x779))
(assert (= (ite (and x441 x950 (not x1188)) (x836 x1272) (ite (and (not x363) (not x441) (not x1188) x276 x950) (x1196 x1272) (ite (and (not x276) x950 (not x441) (not x1188)) (x836 x1272) (x234 x1272)))) (x403 x1272)))
(assert (= (ite (= x1131 x915) x535 (x836 x1131)) (x1196 x1131)))
(assert (= (x1196 x1305) (ite (= x1305 x915) x535 (x836 x1305))))
(assert (= x982 x1205))
(assert (= (x672 x117) (ite (= x117 x1305) x1082 (x180 x117))))
(assert (= (ite (= x1305 x1272) x474 (x221 x1305)) (x679 x1305)))
(assert (x308 x411))
(assert (x308 x1198))
(assert (x308 x929))
(assert (x308 x828))
(assert (= (ite (= x1036 x722) x1267 (x1298 x722)) (x1030 x722)))
(assert (= (x221 x1012) (ite (= x1012 x57) x1273 (x748 x1012))))
(assert (x308 x1147))
(assert (x308 x365))
(assert (= (ite (= x1012 x319) x653 (x825 x1012)) (x576 x1012)))
(assert (= (ite (= x915 x68) x535 (x836 x68)) (x1196 x68)))
(assert (x308 x1105))
(assert (x308 x115))
(assert (x308 x797))
(assert (= (x672 x1012) (ite (= x1012 x1305) x1082 (x180 x1012))))
(assert (= (ite (and (not x1188) x950 x441) (x836 x507) (ite (and (not x363) (not x441) x950 x276 (not x1188)) (x1196 x507) (ite (and (not x441) (not x276) x950 (not x1188)) (x836 x507) (x234 x507)))) (x403 x507)))
(assert (x308 x1213))
(assert (= (x639 (x1231 x789)) x789))
(assert (x178 x1217))
(assert (x308 x1292))
(assert (x308 x336))
(assert (x308 x1043))
(assert (x308 x653))
(assert (= (x11 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1231 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x308 x1216))
(assert (= (ite (= x507 x640) x87 (x645 x507)) (x836 x507)))
(assert (x308 x1116))
(assert (= (ite (= x640 x322) x87 (x645 x322)) (x836 x322)))
(assert (= (ite (= x469 x722) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x722)) (x1298 x722)))
(assert (x308 x362))
(assert (= (x1298 x507) (ite (= x469 x507) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x424 x507))))
(assert (= (x221 x507) (ite (= x57 x507) x1273 (x748 x507))))
(assert (= 635128645 (x639 (x11 635128645))))
(assert (= 2960351575 (x639 (x11 2960351575))))
(assert (=> (<= x1037 10000) (= (x1231 x1037) (x11 x1037))))
(assert (x308 x840))
(assert (x308 x1012))
(assert (= (x620 x1179) (ite (and (not x1188) x950 x47) (x1053 x1179) (x1218 x1179))))
(assert (x308 x1219))
(assert (x308 x223))
(assert (= (x710 x936) (ite (and x950 x547) (x672 x936) (x905 x936))))
(assert (= (ite (and x547 x950) (x672 x1012) (x905 x1012)) (x710 x1012)))
(assert (x308 x972))
(assert (= (x11 1000000000000000000) (x1231 1000000000000000000)))
(assert (x178 274184521717934524641157099916833587214))
(assert (x308 x730))
(check-sat)
