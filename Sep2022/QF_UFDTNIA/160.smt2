(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x223 0)) (((x1117 (x119 Int)) (x1245 (x248 x223) (x1450 Int)) (x964 (x163 x223) (x1548 x223) (x886 Int)))))
(declare-fun x208 () Bool)
(declare-fun x662 () Int)
(declare-fun x820 () Bool)
(declare-fun x1210 (Int) Int)
(declare-fun x1356 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x1490 () x223)
(declare-fun x165 () Bool)
(declare-fun x559 () Int)
(declare-fun x1228 () Int)
(declare-fun x534 () x223)
(declare-fun x360 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x417 () Int)
(declare-fun x1270 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x1537 () Bool)
(declare-fun x400 () Bool)
(declare-fun x244 () x223)
(declare-fun x1150 () Bool)
(declare-fun x167 () Bool)
(declare-fun x543 () x223)
(declare-fun x186 () Bool)
(declare-fun x73 () Int)
(declare-fun x1376 () Int)
(declare-fun x1426 () Int)
(declare-fun x993 () Int)
(declare-fun x362 () Bool)
(declare-fun x50 () Int)
(declare-fun x131 () Int)
(declare-fun x1078 () Bool)
(declare-fun x905 () Int)
(declare-fun x130 () Int)
(declare-fun x1527 () Int)
(declare-fun x1504 () Int)
(declare-fun x1294 () x223)
(declare-fun x498 () Int)
(declare-fun x1260 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x48 () x223)
(declare-fun x1060 () Bool)
(declare-fun x4 () Int)
(declare-fun x1131 () Int)
(declare-fun x990 () Bool)
(declare-fun x233 () x223)
(declare-fun x747 () x223)
(declare-fun x1080 () Bool)
(declare-fun x245 () x223)
(declare-fun x938 () Bool)
(declare-fun x777 () x223)
(declare-fun x1134 () x223)
(declare-fun x429 () Int)
(declare-fun x874 () Bool)
(declare-fun x49 () Int)
(declare-fun x840 () Int)
(declare-fun x902 () Int)
(declare-fun x1502 () x223)
(declare-fun x402 () Bool)
(declare-fun x1286 () Int)
(declare-fun x613 () Int)
(declare-fun x1155 () x223)
(declare-fun x582 () Int)
(declare-fun x179 () Int)
(declare-fun x389 () Bool)
(declare-fun x252 () Int)
(declare-fun x779 () x223)
(declare-fun x124 () Int)
(declare-fun x1109 () Int)
(declare-fun x630 () Int)
(declare-fun x1362 () Bool)
(declare-fun x23 () x223)
(declare-fun x291 () x223)
(declare-fun x305 () Int)
(declare-fun x51 () Int)
(declare-fun x1554 () x223)
(declare-fun x1544 () Int)
(declare-fun x1533 () Int)
(declare-fun x1431 () Int)
(declare-fun x1393 () Int)
(declare-fun x805 () Bool)
(declare-fun x1534 () Int)
(declare-fun x532 () Bool)
(declare-fun x622 () Int)
(declare-fun x421 () Int)
(declare-fun x569 () x223)
(declare-fun x683 () Int)
(declare-fun x540 () Int)
(declare-fun x1301 () Int)
(declare-fun x496 () Bool)
(declare-fun x106 () x223)
(declare-fun x332 () Int)
(declare-fun x1267 () Bool)
(declare-fun x640 () x223)
(declare-fun x1481 () Int)
(declare-fun x180 (Int Int) Int)
(declare-fun x535 () Bool)
(declare-fun x1522 () Int)
(declare-fun x1458 () Int)
(declare-fun x149 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x1103 () x223)
(declare-fun x1031 () Int)
(declare-fun x266 () Int)
(declare-fun x65 () Int)
(declare-fun x47 () x223)
(declare-fun x1028 () Int)
(declare-fun x20 () Int)
(declare-fun x1141 () Int)
(declare-fun x523 () Int)
(declare-fun x547 () Bool)
(declare-fun x812 () Bool)
(declare-fun x481 () Int)
(declare-fun x384 () x223)
(declare-fun x853 () Bool)
(declare-fun x1507 () Int)
(declare-fun x25 () Bool)
(declare-fun x443 () Int)
(declare-fun x973 () Bool)
(declare-fun x1002 () Int)
(declare-fun x798 () Bool)
(declare-fun x267 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x615 () x223)
(declare-fun x155 () Int)
(declare-fun x1400 () Int)
(declare-fun x177 () Bool)
(declare-fun x596 () Bool)
(declare-fun x974 () Int)
(declare-fun x1437 () Bool)
(declare-fun x1459 () x223)
(declare-fun x1374 () Bool)
(declare-fun x1293 () Bool)
(declare-fun x948 () Bool)
(declare-fun x1377 () Int)
(declare-fun x508 () Bool)
(declare-fun x525 () Bool)
(declare-fun x789 () Int)
(declare-fun x583 () Int)
(declare-fun x558 () Bool)
(declare-fun x240 () Bool)
(declare-fun x670 () Bool)
(declare-fun x633 () Bool)
(declare-fun x573 () Int)
(declare-fun x113 () Int)
(declare-fun x657 () Bool)
(declare-fun x1167 () x223)
(declare-fun x1433 () Bool)
(declare-fun x58 () Bool)
(declare-fun x907 () Bool)
(declare-fun x336 () Int)
(declare-fun x1275 () Int)
(declare-fun x574 () Int)
(declare-fun x99 () x223)
(declare-fun x1112 () Int)
(declare-fun x541 () Bool)
(declare-fun x1235 () Int)
(declare-fun x1487 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x345 () Bool)
(declare-fun x863 () Int)
(declare-fun x741 () x223)
(declare-fun x804 () Int)
(declare-fun x627 () Bool)
(declare-fun x832 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x844 () Bool)
(declare-fun x203 () Int)
(declare-fun x944 () Int)
(declare-fun x1269 () Int)
(declare-fun x1153 () Int)
(declare-fun x53 () Int)
(declare-fun x701 () Int)
(declare-fun x1285 () x223)
(declare-fun x1399 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x153 () Bool)
(declare-fun x1474 () x223)
(declare-fun x182 () Int)
(declare-fun x313 () x223)
(declare-fun x197 () Int)
(declare-fun x879 () Int)
(declare-fun x782 () Bool)
(declare-fun x459 () Bool)
(declare-fun x257 () Int)
(declare-fun x648 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x930 () Bool)
(declare-fun x187 () Int)
(declare-fun x1335 () Int)
(declare-fun x1558 () Int)
(declare-fun x1351 () Int)
(declare-fun x696 () Int)
(declare-fun x327 () Int)
(declare-fun x1345 () Bool)
(declare-fun x987 () Int)
(declare-fun x164 () x223)
(declare-fun x297 () x223)
(declare-fun x380 () Bool)
(declare-fun x708 () x223)
(declare-fun x1026 () Int)
(declare-fun x463 () x223)
(declare-fun x694 () Int)
(declare-fun x724 () Bool)
(declare-fun x564 (Int) Int)
(declare-fun x231 () Bool)
(declare-fun x931 () Int)
(declare-fun x950 () Bool)
(declare-fun x1250 () Int)
(declare-fun x497 () Int)
(declare-fun x1385 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x383 () Bool)
(declare-fun x1154 () Int)
(declare-fun x1549 () Int)
(declare-fun x999 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x315 () Int)
(declare-fun x838 () Int)
(declare-fun x765 () Bool)
(declare-fun x228 () Int)
(declare-fun x444 () Bool)
(declare-fun x1291 () Int)
(declare-fun x264 () x223)
(declare-fun x664 () Bool)
(declare-fun x323 () Bool)
(declare-fun x971 () Int)
(declare-fun x120 () x223)
(declare-fun x783 () Int)
(declare-fun x433 (Int) Int)
(declare-fun x455 () Int)
(declare-fun x1496 () Int)
(declare-fun x1375 () Int)
(declare-fun x638 () Bool)
(declare-fun x109 () Int)
(declare-fun x1276 () Int)
(declare-fun x471 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x531 () Int)
(declare-fun x1340 () Int)
(declare-fun x408 () x223)
(declare-fun x995 () Int)
(declare-fun x1173 () Int)
(declare-fun x849 () x223)
(declare-fun x857 () x223)
(declare-fun x594 () Int)
(declare-fun x527 () x223)
(declare-fun x703 () Int)
(declare-fun x16 () Bool)
(declare-fun x1503 () Int)
(declare-fun x74 (Int) Int)
(declare-fun x366 () Int)
(declare-fun x202 () x223)
(declare-fun x1553 () Bool)
(declare-fun x852 () Int)
(declare-fun x837 (Int) Int)
(declare-fun x1062 () Int)
(declare-fun x1254 () Int)
(declare-fun x277 () Int)
(declare-fun x1202 () x223)
(declare-fun x854 () Bool)
(declare-fun x321 () Int)
(declare-fun x97 () x223)
(declare-fun x1289 () x223)
(declare-fun x1307 () Bool)
(declare-fun x487 () Int)
(declare-fun x772 () x223)
(declare-fun x1087 () Bool)
(declare-fun x756 () x223)
(declare-fun x1408 () Bool)
(declare-fun x162 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x1168 () x223)
(declare-fun x859 (Int) Int)
(declare-fun x1020 () Int)
(declare-fun x221 () Int)
(declare-fun x511 () Int)
(declare-fun x1234 () Bool)
(declare-fun x458 () Bool)
(declare-fun x14 () Int)
(declare-fun x1406 () x223)
(declare-fun x1411 () Bool)
(declare-fun x688 () Bool)
(declare-fun x1403 () Int)
(declare-fun x817 () Int)
(declare-fun x1273 () Int)
(declare-fun x537 () Bool)
(declare-fun x600 () Int)
(declare-fun x232 () Int)
(declare-fun x52 () Bool)
(declare-fun x624 () x223)
(declare-fun x1192 () x223)
(declare-fun x1336 () Int)
(declare-fun x457 () Bool)
(declare-fun x1091 () Bool)
(declare-fun x928 () x223)
(declare-fun x811 () x223)
(declare-fun x159 () Bool)
(declare-fun x795 () Int)
(declare-fun x258 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x1423 () Int)
(declare-fun x1243 () Int)
(declare-fun x214 () Int)
(declare-fun x108 () Int)
(declare-fun x265 () Int)
(declare-fun x1022 () Bool)
(declare-fun x632 () Bool)
(declare-fun x260 () x223)
(declare-fun x642 () Int)
(declare-fun x278 () Int)
(declare-fun x757 (x223) Int)
(declare-fun x871 () Int)
(declare-fun x1183 () Int)
(declare-fun x898 () Int)
(declare-fun x171 () Bool)
(declare-fun x1452 () Int)
(declare-fun x731 () Bool)
(declare-fun x647 () Int)
(declare-fun x1510 () Bool)
(declare-fun x963 () Bool)
(declare-fun x1410 () Int)
(declare-fun x645 () Int)
(declare-fun x1053 () x223)
(declare-fun x1271 () x223)
(declare-fun x1115 () Int)
(declare-fun x1199 () Bool)
(declare-fun x1417 () Int)
(declare-fun x347 () Bool)
(declare-fun x30 () Bool)
(declare-fun x1138 () Int)
(declare-fun x437 () Bool)
(declare-fun x68 () Int)
(declare-fun x219 (x223) Int)
(declare-fun x1008 () Int)
(declare-fun x1224 () Bool)
(declare-fun x867 () Bool)
(declare-fun x1256 () Int)
(declare-fun x1215 () Int)
(declare-fun x254 () Int)
(declare-fun x514 () x223)
(declare-fun x1467 () Int)
(declare-fun x706 () x223)
(declare-fun x929 () Int)
(declare-fun x1089 () Int)
(declare-fun x1161 () Int)
(declare-fun x1208 () Bool)
(declare-fun x1551 () Int)
(declare-fun x193 () Int)
(declare-fun x588 () x223)
(declare-fun x262 () x223)
(declare-fun x136 () x223)
(declare-fun x512 () Int)
(declare-fun x1086 () Int)
(declare-fun x528 () Int)
(declare-fun x1349 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x477 () Bool)
(declare-fun x554 () Bool)
(declare-fun x919 () Int)
(declare-fun x1453 () Int)
(declare-fun x646 () Int)
(declare-fun x1211 () Bool)
(declare-fun x215 () Int)
(declare-fun x1257 () x223)
(declare-fun x986 () Int)
(declare-fun x205 () Int)
(declare-fun x560 () Bool)
(declare-fun x1536 () Int)
(declare-fun x183 () x223)
(declare-fun x166 () Bool)
(declare-fun x1395 () Int)
(declare-fun x1342 () Int)
(declare-fun x770 () Int)
(declare-fun x1482 () Bool)
(declare-fun x716 () Int)
(declare-fun x178 () x223)
(declare-fun x992 () Int)
(declare-fun x1232 () x223)
(declare-fun x887 () Int)
(declare-fun x1511 () Int)
(declare-fun x704 () Int)
(declare-fun x1304 () Bool)
(declare-fun x960 () Int)
(declare-fun x55 () Bool)
(declare-fun x1146 () Int)
(declare-fun x1118 () Int)
(declare-fun x1305 () Int)
(declare-fun x654 () Bool)
(declare-fun x1308 () Int)
(declare-fun x441 () Int)
(declare-fun x673 () Int)
(declare-fun x76 () Bool)
(declare-fun x343 () Bool)
(declare-fun x1 () Int)
(declare-fun x1088 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x785 () Bool)
(declare-fun x222 (Int) Int)
(declare-fun x261 () Int)
(declare-fun x729 () Int)
(declare-fun x800 () Bool)
(declare-fun x1036 () x223)
(declare-fun x544 () Bool)
(declare-fun x751 () x223)
(declare-fun x1136 () Int)
(declare-fun x639 () Int)
(declare-fun x1149 () Bool)
(declare-fun x1528 () Int)
(declare-fun x702 () Bool)
(declare-fun x911 () Bool)
(declare-fun x681 () Bool)
(declare-fun x172 () x223)
(declare-fun x943 () Int)
(declare-fun x96 () Bool)
(declare-fun x154 () x223)
(declare-fun x1077 () Int)
(declare-fun x209 (x223) Int)
(declare-fun x1394 () Int)
(declare-fun x842 () x223)
(declare-fun x679 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x226 () Int)
(declare-fun x565 () Bool)
(declare-fun x988 () Int)
(declare-fun x1013 () Int)
(declare-fun x855 () Int)
(declare-fun x691 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x1000 () Int)
(declare-fun x303 () x223)
(declare-fun x359 () Bool)
(declare-fun x962 () x223)
(declare-fun x1059 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x965 () Bool)
(declare-fun x1051 () x223)
(declare-fun x1310 (x223) Int)
(declare-fun x118 () Bool)
(declare-fun x1263 () x223)
(declare-fun x784 () Int)
(declare-fun x1520 () Int)
(declare-fun x904 () Int)
(declare-fun x70 () Bool)
(declare-fun x356 () x223)
(declare-fun x66 () Bool)
(declare-fun x1338 () x223)
(declare-fun x146 () Int)
(declare-fun x1025 (Int) Int)
(declare-fun x1194 () Bool)
(declare-fun x1425 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x1111 () Int)
(declare-fun x227 () Int)
(declare-fun x507 () Int)
(declare-fun x1009 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x659 () Int)
(declare-fun x726 () Int)
(declare-fun x1500 () Bool)
(declare-fun x1069 () Int)
(declare-fun x725 () Int)
(declare-fun x934 () Bool)
(declare-fun x1229 () Int)
(declare-fun x37 () Bool)
(declare-fun x628 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x1329 () x223)
(declare-fun x1366 () Bool)
(declare-fun x801 () Int)
(declare-fun x715 () Int)
(declare-fun x81 () x223)
(declare-fun x121 () Int)
(declare-fun x1347 () x223)
(declare-fun x484 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x1330 () x223)
(declare-fun x89 () x223)
(declare-fun x674 () Bool)
(declare-fun x280 () Int)
(declare-fun x1524 () Int)
(declare-fun x382 () Int)
(declare-fun x1326 () Bool)
(declare-fun x1343 () Int)
(declare-fun x1163 () Int)
(declare-fun x1390 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x1501 () Int)
(declare-fun x57 () x223)
(declare-fun x1506 () x223)
(declare-fun x420 () x223)
(declare-fun x572 () Int)
(declare-fun x1182 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x727 () Int)
(declare-fun x1470 () Int)
(declare-fun x143 () Int)
(declare-fun x326 () x223)
(declare-fun x284 () Int)
(declare-fun x395 () x223)
(declare-fun x8 () Bool)
(declare-fun x339 () x223)
(declare-fun x1055 () Int)
(declare-fun x440 () Int)
(declare-fun x1439 () Int)
(declare-fun x200 () x223)
(declare-fun x1384 () Int)
(declare-fun x797 () x223)
(declare-fun x1244 () Int)
(declare-fun x1186 () Int)
(declare-fun x1546 () Int)
(declare-fun x140 () Int)
(declare-fun x866 () x223)
(declare-fun x15 () Bool)
(declare-fun x235 () Int)
(declare-fun x610 () x223)
(declare-fun x1486 () Int)
(declare-fun x781 () Int)
(declare-fun x1079 () Bool)
(declare-fun x1427 () Int)
(declare-fun x418 () Int)
(declare-fun x1272 () Bool)
(declare-fun x1530 () Int)
(declare-fun x1156 () Bool)
(declare-fun x885 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x1325 () Bool)
(declare-fun x150 () Int)
(declare-fun x880 () Int)
(declare-fun x1532 () Int)
(declare-fun x1035 () Int)
(declare-fun x869 () Int)
(declare-fun x1196 () Int)
(declare-fun x466 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x1290 () Int)
(declare-fun x36 () x223)
(declare-fun x293 () Int)
(declare-fun x710 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x390 () Bool)
(declare-fun x1387 () Int)
(declare-fun x553 () Bool)
(declare-fun x196 () x223)
(declare-fun x1436 () Bool)
(declare-fun x835 () x223)
(declare-fun x256 () Int)
(declare-fun x790 () x223)
(declare-fun x997 () Int)
(declare-fun x1379 () Bool)
(declare-fun x810 () Int)
(declare-fun x1339 () Bool)
(declare-fun x619 () Bool)
(declare-fun x763 () Bool)
(declare-fun x184 () Int)
(declare-fun x322 () Int)
(declare-fun x358 () x223)
(declare-fun x1494 () Int)
(declare-fun x1526 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x370 () Int)
(declare-fun x899 () Int)
(declare-fun x1172 () Bool)
(declare-fun x1191 () Int)
(declare-fun x6 () x223)
(declare-fun x967 () x223)
(declare-fun x711 () Int)
(declare-fun x1498 () Int)
(declare-fun x517 () Int)
(declare-fun x439 () Int)
(declare-fun x415 () Bool)
(declare-fun x1373 () Int)
(declare-fun x377 () Bool)
(declare-fun x259 () Int)
(declare-fun x374 () Int)
(declare-fun x369 () Int)
(declare-fun x821 () x223)
(declare-fun x761 () Int)
(declare-fun x1247 () Bool)
(declare-fun x652 () Bool)
(declare-fun x945 () Int)
(declare-fun x744 () Bool)
(declare-fun x980 () Int)
(declare-fun x426 () x223)
(declare-fun x1049 () Bool)
(declare-fun x1034 () x223)
(declare-fun x1365 () Int)
(declare-fun x1388 () Bool)
(declare-fun x1419 () x223)
(declare-fun x1040 () Int)
(declare-fun x1140 () Int)
(declare-fun x1046 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x578 () Bool)
(declare-fun x1539 () x223)
(declare-fun x367 () Int)
(declare-fun x87 () Bool)
(declare-fun x1004 () Int)
(declare-fun x1328 () Int)
(declare-fun x983 () Int)
(declare-fun x132 () Int)
(declare-fun x431 () Int)
(declare-fun x169 (Int) Int)
(declare-fun x1495 () x223)
(declare-fun x1128 () Int)
(declare-fun x671 () x223)
(declare-fun x802 () Int)
(declare-fun x530 () Int)
(declare-fun x1313 () Int)
(declare-fun x1448 () x223)
(declare-fun x1296 () Int)
(declare-fun x831 () x223)
(declare-fun x901 () Int)
(declare-fun x1198 () x223)
(declare-fun x1085 () x223)
(declare-fun x892 () Int)
(declare-fun x755 () x223)
(declare-fun x941 () Int)
(declare-fun x133 () Int)
(declare-fun x700 () Int)
(declare-fun x5 () Int)
(declare-fun x147 () Int)
(declare-fun x176 () Int)
(declare-fun x843 () Int)
(declare-fun x9 () Int)
(declare-fun x396 () Int)
(declare-fun x211 () Int)
(declare-fun x399 () Bool)
(declare-fun x873 (Int) Int)
(declare-fun x940 () Bool)
(declare-fun x758 () x223)
(declare-fun x1119 () Int)
(declare-fun x891 () Int)
(declare-fun x998 () Bool)
(declare-fun x337 () x223)
(declare-fun x363 () Int)
(declare-fun x1455 () Bool)
(declare-fun x618 () Int)
(declare-fun x641 () x223)
(declare-fun x1550 () x223)
(declare-fun x138 () Bool)
(declare-fun x1538 () Int)
(declare-fun x616 () Int)
(declare-fun x216 () Int)
(declare-fun x188 () Int)
(declare-fun x753 () Int)
(declare-fun x449 () x223)
(declare-fun x1076 () x223)
(declare-fun x876 () x223)
(declare-fun x1542 () Int)
(declare-fun x424 () x223)
(declare-fun x1012 () Int)
(declare-fun x342 () x223)
(declare-fun x787 () Bool)
(declare-fun x1364 () Int)
(declare-fun x634 () Int)
(declare-fun x45 () Int)
(declare-fun x936 () Bool)
(declare-fun x1465 () Int)
(declare-fun x64 () Int)
(declare-fun x774 () Int)
(declare-fun x78 () Bool)
(declare-fun x1288 () x223)
(declare-fun x1454 () Bool)
(declare-fun x1312 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x1516 () Int)
(declare-fun x270 () x223)
(declare-fun x290 () Bool)
(declare-fun x111 () Int)
(declare-fun x1443 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x271 () Int)
(declare-fun x1207 () Int)
(declare-fun x1029 (x223) Int)
(declare-fun x895 () Int)
(declare-fun x1152 () Int)
(declare-fun x308 () Bool)
(declare-fun x577 () Int)
(declare-fun x372 () Int)
(declare-fun x1106 () Int)
(declare-fun x675 () Bool)
(declare-fun x649 () Int)
(declare-fun x589 () Int)
(declare-fun x827 () Bool)
(declare-fun x1094 (Int) Int)
(declare-fun x1299 () Int)
(declare-fun x1044 () Int)
(declare-fun x1386 () x223)
(declare-fun x470 () Int)
(declare-fun x742 () Bool)
(declare-fun x1370 (x223) Int)
(declare-fun x276 () Int)
(declare-fun x510 () Bool)
(declare-fun x1445 () Int)
(declare-fun x373 () Int)
(declare-fun x1185 () Int)
(declare-fun x1213 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x456 () Bool)
(declare-fun x334 () Int)
(declare-fun x1126 () Int)
(declare-fun x593 () Bool)
(declare-fun x1456 () Int)
(declare-fun x386 () Int)
(declare-fun x1475 () Bool)
(declare-fun x883 () Int)
(declare-fun x125 () Int)
(declare-fun x1158 () Bool)
(declare-fun x975 () Int)
(declare-fun x1014 () Int)
(declare-fun x890 () Int)
(declare-fun x1341 () Int)
(declare-fun x643 () Int)
(declare-fun x393 () Int)
(declare-fun x1319 () Int)
(declare-fun x1016 () Int)
(declare-fun x1320 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x1248 () Int)
(declare-fun x1352 () x223)
(declare-fun x368 () Int)
(declare-fun x1422 () Bool)
(declare-fun x1209 () Int)
(declare-fun x697 () Int)
(declare-fun x1124 () Bool)
(declare-fun x281 (Int) Int)
(declare-fun x917 () Int)
(declare-fun x750 () Bool)
(declare-fun x21 () Int)
(declare-fun x989 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x300 () Bool)
(declare-fun x815 () Int)
(declare-fun x483 () x223)
(declare-fun x448 () Bool)
(declare-fun x80 () Int)
(declare-fun x570 () Bool)
(declare-fun x552 () x223)
(declare-fun x329 () Int)
(declare-fun x1463 () x223)
(declare-fun x521 () Int)
(declare-fun x1438 () Bool)
(declare-fun x1116 () Bool)
(declare-fun x335 (x223) Int)
(declare-fun x567 () Int)
(declare-fun x77 () Int)
(declare-fun x1391 (Int) Int)
(declare-fun x721 () Bool)
(declare-fun x494 () Bool)
(declare-fun x31 () Int)
(declare-fun x1037 () Int)
(declare-fun x1018 () Bool)
(declare-fun x660 (x223) Int)
(declare-fun x903 () Bool)
(declare-fun x906 () Int)
(declare-fun x1555 () Int)
(declare-fun x201 () Int)
(declare-fun x1435 () Bool)
(declare-fun x462 () Bool)
(declare-fun x606 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x376 () Int)
(declare-fun x509 () Int)
(declare-fun x555 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x344 () Bool)
(declare-fun x189 () Int)
(declare-fun x1107 () Int)
(declare-fun x826 () Bool)
(declare-fun x454 () Int)
(declare-fun x105 () Int)
(declare-fun x1446 () Bool)
(declare-fun x403 () Int)
(declare-fun x739 () x223)
(declare-fun x1297 () Bool)
(declare-fun x946 () x223)
(declare-fun x26 () x223)
(declare-fun x1074 () Bool)
(declare-fun x71 () Bool)
(declare-fun x90 () Int)
(declare-fun x397 () Int)
(declare-fun x320 () Int)
(declare-fun x513 () x223)
(declare-fun x1057 () Bool)
(declare-fun x2 () Int)
(declare-fun x1397 () Int)
(declare-fun x394 () Bool)
(declare-fun x653 (Int) Int)
(declare-fun x1303 () Bool)
(declare-fun x956 () x223)
(declare-fun x882 () Int)
(declare-fun x453 () x223)
(declare-fun x504 () Int)
(declare-fun x1493 () x223)
(declare-fun x818 () x223)
(declare-fun x29 () x223)
(declare-fun x976 () Bool)
(declare-fun x92 () Int)
(declare-fun x522 () Int)
(declare-fun x1027 () Int)
(declare-fun x786 () Int)
(declare-fun x958 () Int)
(declare-fun x410 () Int)
(declare-fun x1176 () Int)
(declare-fun x191 () Bool)
(declare-fun x428 () Bool)
(declare-fun x740 () x223)
(declare-fun x1266 () Bool)
(declare-fun x952 () x223)
(declare-fun x114 () Int)
(declare-fun x1099 () Bool)
(declare-fun x579 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x346 () Bool)
(declare-fun x46 () Bool)
(declare-fun x213 () Int)
(declare-fun x1357 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x1418 () Int)
(declare-fun x1409 () Int)
(declare-fun x1509 () Int)
(declare-fun x1127 () x223)
(declare-fun x1396 () x223)
(declare-fun x1102 () x223)
(declare-fun x924 () Int)
(declare-fun x1483 () Bool)
(declare-fun x1222 () Int)
(declare-fun x1440 () Int)
(declare-fun x1484 () Int)
(declare-fun x348 () Int)
(declare-fun x932 () x223)
(declare-fun x422 () Int)
(declare-fun x687 () Int)
(declare-fun x682 () Bool)
(declare-fun x75 () Int)
(declare-fun x762 () Int)
(declare-fun x923 () Int)
(declare-fun x1212 () x223)
(declare-fun x845 () x223)
(declare-fun x1097 () Bool)
(declare-fun x1144 () Int)
(declare-fun x220 () Bool)
(declare-fun x712 () Int)
(declare-fun x1371 () Bool)
(declare-fun x479 () Bool)
(declare-fun x586 () Int)
(declare-fun x1540 () Bool)
(declare-fun x978 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x1120 () Int)
(declare-fun x1473 (x223) Int)
(declare-fun x1324 () x223)
(declare-fun x888 (x223) Int)
(declare-fun x450 () Bool)
(declare-fun x1521 () Int)
(declare-fun x661 () Bool)
(declare-fun x698 (Int) Int)
(declare-fun x1157 () Int)
(declare-fun x7 () Int)
(declare-fun x1214 () Int)
(declare-fun x1105 () Int)
(declare-fun x84 () Bool)
(declare-fun x1114 () Int)
(declare-fun x296 () Int)
(declare-fun x959 () Int)
(declare-fun x850 () Bool)
(declare-fun x830 () Bool)
(declare-fun x580 () Int)
(declare-fun x927 () Int)
(declare-fun x809 () Int)
(declare-fun x1479 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x1003 () Int)
(declare-fun x38 () Bool)
(declare-fun x491 () Bool)
(declare-fun x292 () x223)
(declare-fun x828 () Int)
(declare-fun x1369 () Int)
(declare-fun x413 () Int)
(declare-fun x1206 () x223)
(declare-fun x865 () Int)
(declare-fun x699 () Bool)
(declare-fun x768 () Int)
(declare-fun x767 () Int)
(declare-fun x283 () x223)
(declare-fun x41 () Int)
(declare-fun x922 () Int)
(declare-fun x794 () Bool)
(declare-fun x1333 () Int)
(declare-fun x1200 () Int)
(declare-fun x19 () Int)
(declare-fun x1175 () Int)
(declare-fun x524 () Int)
(declare-fun x324 () Int)
(declare-fun x241 () Int)
(declare-fun x1033 () Int)
(declare-fun x1322 () Bool)
(declare-fun x563 () x223)
(declare-fun x1344 () Int)
(declare-fun x316 () Int)
(declare-fun x168 (x223) Int)
(declare-fun x1383 () Int)
(declare-fun x289 () Int)
(declare-fun x597 () Int)
(declare-fun x1083 (Int Int) Int)
(declare-fun x1367 () x223)
(declare-fun x489 () x223)
(declare-fun x387 () Int)
(declare-fun x1488 () Int)
(declare-fun x1065 () Int)
(declare-fun x775 () Int)
(declare-fun x405 () Int)
(declare-fun x846 () Int)
(declare-fun x519 () Bool)
(declare-fun x1457 () Int)
(declare-fun x1241 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x759 () Bool)
(declare-fun x955 () Int)
(declare-fun x872 () Bool)
(declare-fun x713 () Int)
(declare-fun x851 () Int)
(declare-fun x474 () Int)
(declare-fun x550 (Int) Int)
(declare-fun x1514 () Bool)
(declare-fun x488 () Int)
(declare-fun x889 () Bool)
(declare-fun x562 () Int)
(declare-fun x195 () Bool)
(declare-fun x1404 () x223)
(declare-fun x406 () Bool)
(declare-fun x937 () Int)
(declare-fun x914 () x223)
(declare-fun x255 () Bool)
(declare-fun x333 () Bool)
(declare-fun x672 () Bool)
(declare-fun x913 () Int)
(declare-fun x442 () Bool)
(declare-fun x274 () Int)
(declare-fun x656 () Bool)
(declare-fun x44 () x223)
(declare-fun x194 () x223)
(declare-fun x1306 () Bool)
(declare-fun x1231 () Int)
(declare-fun x1024 () Bool)
(declare-fun x637 () Bool)
(declare-fun x813 () x223)
(declare-fun x806 () Int)
(declare-fun x237 () Bool)
(declare-fun x355 () Int)
(declare-fun x11 () Int)
(declare-fun x435 () Int)
(declare-fun x778 () Bool)
(declare-fun x833 () Int)
(declare-fun x667 () Int)
(declare-fun x571 () Int)
(declare-fun x319 () Int)
(declare-fun x847 () Int)
(declare-fun x824 () Int)
(declare-fun x341 (Int) Int)
(declare-fun x692 () Int)
(declare-fun x416 () Int)
(declare-fun x475 () Int)
(declare-fun x1518 () x223)
(declare-fun x312 (Int) Int)
(declare-fun x69 () Int)
(declare-fun x856 () Int)
(declare-fun x1529 () Int)
(declare-fun x1476 () Int)
(declare-fun x328 () Bool)
(declare-fun x1279 () Int)
(declare-fun x371 () Int)
(declare-fun x1557 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x1461 () x223)
(declare-fun x1353 () Int)
(declare-fun x263 () x223)
(declare-fun x730 () Int)
(declare-fun x860 () Int)
(declare-fun x409 () Bool)
(declare-fun x126 () Bool)
(declare-fun x722 () Bool)
(declare-fun x434 () Int)
(declare-fun x499 () x223)
(declare-fun x548 (x223) Int)
(declare-fun x1519 () Int)
(declare-fun x1218 () Int)
(declare-fun x1011 () Int)
(declare-fun x294 () Int)
(declare-fun x401 () Int)
(declare-fun x273 (Int) Int)
(declare-fun x127 () Int)
(declare-fun x909 () Int)
(declare-fun x59 () Int)
(declare-fun x858 () Bool)
(declare-fun x599 () x223)
(declare-fun x841 () Int)
(declare-fun x1137 () Bool)
(declare-fun x620 () Int)
(declare-fun x602 () x223)
(declare-fun x107 () x223)
(declare-fun x95 () Int)
(declare-fun x116 () x223)
(declare-fun x1165 () Bool)
(declare-fun x1021 () Int)
(declare-fun x1332 () Int)
(declare-fun x951 () x223)
(declare-fun x238 () x223)
(declare-fun x1201 () Bool)
(declare-fun x732 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x915 () Bool)
(declare-fun x693 () Bool)
(declare-fun x678 () Int)
(declare-fun x910 () Int)
(declare-fun x236 () x223)
(declare-fun x705 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x1372 () Int)
(declare-fun x88 () Bool)
(declare-fun x423 () Bool)
(declare-fun x900 () Int)
(declare-fun x438 () Int)
(declare-fun x160 () Int)
(declare-fun x735 () Int)
(declare-fun x251 () Bool)
(declare-fun x225 () Int)
(declare-fun x953 (x223) Int)
(declare-fun x158 () Bool)
(declare-fun x658 () Bool)
(declare-fun x112 () Int)
(declare-fun x516 () x223)
(declare-fun x381 () Int)
(declare-fun x1287 () x223)
(declare-fun x392 () Int)
(declare-fun x1178 () Int)
(declare-fun x776 () x223)
(declare-fun x1255 () Int)
(declare-fun x766 () Bool)
(declare-fun x823 () Int)
(declare-fun x982 () Int)
(declare-fun x799 () Int)
(declare-fun x611 () Int)
(declare-fun x506 () x223)
(declare-fun x490 () x223)
(declare-fun x452 () Int)
(declare-fun x110 () Int)
(declare-fun x1189 () Bool)
(declare-fun x128 () Bool)
(declare-fun x94 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x34 () Int)
(declare-fun x935 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x1264 () Int)
(declare-fun x350 () Int)
(declare-fun x1104 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x985 () Int)
(declare-fun x253 () Bool)
(declare-fun x603 (x223) Int)
(declare-fun x117 () x223)
(declare-fun x1188 (x223) Int)
(declare-fun x897 () x223)
(declare-fun x192 () Int)
(declare-fun x1038 () Bool)
(declare-fun x836 () Int)
(declare-fun x668 () Bool)
(declare-fun x137 () Bool)
(declare-fun x539 () Bool)
(declare-fun x1430 () Int)
(declare-fun x325 () x223)
(declare-fun x500 () Int)
(declare-fun x920 () Int)
(declare-fun x1398 () Int)
(declare-fun x1321 () x223)
(declare-fun x1174 () Int)
(declare-fun x1252 () Int)
(declare-fun x1432 () Bool)
(declare-fun x881 () Int)
(declare-fun x529 () Int)
(declare-fun x745 () Int)
(declare-fun x576 () Int)
(declare-fun x526 () x223)
(declare-fun x1169 () Int)
(declare-fun x285 () Int)
(declare-fun x1219 () Bool)
(declare-fun x666 () Bool)
(declare-fun x870 () Bool)
(declare-fun x631 () Bool)
(declare-fun x536 () Bool)
(declare-fun x173 () Bool)
(declare-fun x1466 () Int)
(declare-fun x533 () Int)
(declare-fun x896 (x223) Int)
(declare-fun x719 () x223)
(declare-fun x1090 () x223)
(declare-fun x411 () Bool)
(declare-fun x1281 () x223)
(declare-fun x432 () Bool)
(declare-fun x472 () Int)
(declare-fun x353 () Bool)
(declare-fun x650 () Int)
(declare-fun x1007 () Int)
(declare-fun x1428 () Int)
(declare-fun x1246 () x223)
(declare-fun x665 () Int)
(declare-fun x734 () Int)
(declare-fun x1223 () Bool)
(declare-fun x230 () Bool)
(declare-fun x60 () Int)
(declare-fun x1159 () Int)
(declare-fun x1170 () Int)
(declare-fun x302 () Int)
(declare-fun x1491 () Int)
(declare-fun x338 () Bool)
(declare-fun x482 () Int)
(declare-fun x309 () Bool)
(declare-fun x446 () Bool)
(declare-fun x1082 (Int) x223)
(declare-fun x1485 () x223)
(declare-fun x684 () Bool)
(declare-fun x1314 () Int)
(declare-fun x848 () Int)
(declare-fun x1382 () Bool)
(declare-fun x247 () Int)
(declare-fun x822 () Bool)
(declare-fun x301 () x223)
(declare-fun x279 () Int)
(declare-fun x145 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x1030 () Int)
(declare-fun x1043 () Int)
(declare-fun x175 () Int)
(declare-fun x404 () Int)
(declare-fun x349 (x223) Int)
(declare-fun x445 () Int)
(declare-fun x861 () Bool)
(declare-fun x3 () Int)
(declare-fun x425 () Int)
(declare-fun x709 () Bool)
(declare-fun x728 () Bool)
(declare-fun x82 () Int)
(declare-fun x714 () Int)
(declare-fun x204 () Int)
(declare-fun x868 () Int)
(declare-fun x1048 (Int) Int)
(declare-fun x1063 () Int)
(declare-fun x1121 () Bool)
(declare-fun x1197 () Bool)
(declare-fun x1354 (x223) Int)
(declare-fun x878 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x1323 () Int)
(declare-fun x608 () x223)
(declare-fun x1513 () x223)
(declare-fun x134 () Bool)
(declare-fun x505 () Int)
(declare-fun x984 (Int) Int)
(declare-fun x1280 () Bool)
(declare-fun x27 (x223) Int)
(declare-fun x86 () x223)
(declare-fun x501 (Int) Int)
(declare-fun x17 () x223)
(declare-fun x636 () Bool)
(declare-fun x663 () Int)
(declare-fun x942 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x436 () Bool)
(declare-fun x1205 () Int)
(declare-fun x981 () Bool)
(declare-fun x617 () Bool)
(declare-fun x807 () Int)
(declare-fun x1019 () Int)
(declare-fun x1350 () x223)
(declare-fun x1525 () x223)
(declare-fun x607 () Bool)
(declare-fun x748 () x223)
(declare-fun x1073 () Int)
(declare-fun x122 () Int)
(declare-fun x91 () Int)
(declare-fun x918 () x223)
(declare-fun x598 () Bool)
(declare-fun x718 () Bool)
(declare-fun x123 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x314 () Bool)
(declare-fun x32 () Bool)
(declare-fun x378 (Int) Int)
(declare-fun x680 () Int)
(declare-fun x1451 () Bool)
(declare-fun x62 () x223)
(declare-fun x1415 () Int)
(declare-fun x626 () Bool)
(declare-fun x862 () x223)
(declare-fun x788 () Int)
(declare-fun x357 () Int)
(declare-fun x354 () Int)
(declare-fun x814 () Int)
(declare-fun x239 () Bool)
(declare-fun x1023 () Int)
(declare-fun x1072 () Int)
(declare-fun x1460 () Int)
(declare-fun x1032 () Int)
(declare-fun x502 () Bool)
(declare-fun x375 () Bool)
(declare-fun x584 () Int)
(declare-fun x925 () Bool)
(declare-fun x307 () Int)
(declare-fun x916 () x223)
(declare-fun x250 () Int)
(declare-fun x1133 () Int)
(declare-fun x287 () Int)
(declare-fun x581 () x223)
(declare-fun x460 () x223)
(declare-fun x1148 () x223)
(declare-fun x957 () Int)
(declare-fun x720 () Int)
(declare-fun x1268 () x223)
(declare-fun x218 () Int)
(declare-fun x461 () Int)
(declare-fun x465 () Int)
(declare-fun x1462 () Int)
(declare-fun x1006 () Int)
(declare-fun x67 (Int) Int)
(declare-fun x242 () x223)
(declare-fun x1401 () Int)
(declare-fun x1499 () x223)
(declare-fun x1249 () Bool)
(declare-fun x614 () Int)
(declare-fun x1171 () Bool)
(declare-fun x949 () Int)
(declare-fun x198 () x223)
(declare-fun x1444 () x223)
(declare-fun x473 () x223)
(declare-fun x1056 () Int)
(declare-fun x549 () x223)
(declare-fun x676 () Int)
(declare-fun x22 () Int)
(declare-fun x1130 () Bool)
(declare-fun x1236 () Int)
(declare-fun x468 () x223)
(declare-fun x190 () x223)
(declare-fun x1239 () Bool)
(declare-fun x651 () x223)
(declare-fun x485 () Int)
(declare-fun x561 () Bool)
(declare-fun x733 () x223)
(declare-fun x246 () Int)
(declare-fun x764 () Int)
(declare-fun x1071 () Int)
(declare-fun x690 () Int)
(declare-fun x115 () Bool)
(declare-fun x480 () Int)
(declare-fun x884 (x223) Int)
(declare-fun x157 () Int)
(declare-fun x1204 () x223)
(declare-fun x24 () x223)
(declare-fun x54 () Int)
(declare-fun x1405 () Bool)
(declare-fun x585 () Bool)
(declare-fun x819 () Int)
(declare-fun x834 () Int)
(declare-fun x1108 () Int)
(declare-fun x686 () Int)
(declare-fun x689 () Int)
(declare-fun x414 () Bool)
(declare-fun x749 () Int)
(declare-fun x1066 () x223)
(declare-fun x1226 () Int)
(declare-fun x609 () x223)
(declare-fun x1469 () Bool)
(declare-fun x1125 () Bool)
(declare-fun x1064 () Int)
(declare-fun x1505 () x223)
(declare-fun x1095 () Int)
(declare-fun x306 () x223)
(declare-fun x912 (Int) Int)
(declare-fun x1274 () Int)
(declare-fun x591 () Int)
(declare-fun x685 () Bool)
(declare-fun x1068 () Int)
(declare-fun x148 () Int)
(declare-fun x1497 () Int)
(declare-fun x621 () Int)
(declare-fun x42 () x223)
(declare-fun x464 () Bool)
(declare-fun x595 () Int)
(declare-fun x1298 () Bool)
(declare-fun x156 () Bool)
(declare-fun x185 () Int)
(declare-fun x1316 () Int)
(declare-fun x551 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x1010 () Int)
(declare-fun x1216 () Bool)
(declare-fun x969 () Int)
(declare-fun x592 () Bool)
(declare-fun x875 () Int)
(declare-fun x268 () Int)
(declare-fun x129 () Bool)
(declare-fun x174 () Int)
(declare-fun x1278 () Bool)
(declare-fun x566 () Int)
(declare-fun x864 () Int)
(declare-fun x492 () Int)
(declare-fun x939 () Bool)
(declare-fun x1547 () Int)
(declare-fun x1151 () Int)
(declare-fun x229 () Int)
(declare-fun x961 () x223)
(declare-fun x575 () x223)
(declare-fun x385 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x1237 () x223)
(declare-fun x970 () Bool)
(declare-fun x249 () Int)
(declare-fun x419 () Int)
(declare-fun x72 () Int)
(declare-fun x1523 () Int)
(declare-fun x398 () Int)
(declare-fun x791 () Int)
(declare-fun x994 () Int)
(declare-fun x669 () Bool)
(declare-fun x677 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x1005 () Int)
(declare-fun x311 (Int) Int)
(declare-fun x1552 () Int)
(declare-fun x33 () x223)
(declare-fun x318 () Bool)
(declare-fun x1309 () x223)
(declare-fun x56 () Bool)
(declare-fun x35 () Bool)
(declare-fun x304 () Bool)
(declare-fun x793 () Int)
(declare-fun x1113 () Int)
(declare-fun x199 () x223)
(declare-fun x743 () Int)
(declare-fun x299 () Bool)
(declare-fun x635 () Bool)
(declare-fun x151 () Int)
(declare-fun x139 () Int)
(declare-fun x1184 () Int)
(declare-fun x736 () Bool)
(declare-fun x28 () Bool)
(declare-fun x217 () Bool)
(declare-fun x1392 () x223)
(declare-fun x330 () Bool)
(declare-fun x352 () Int)
(declare-fun x101 () x223)
(declare-fun x61 () Bool)
(declare-fun x792 () Int)
(declare-fun x947 () x223)
(declare-fun x210 () Bool)
(declare-fun x1129 () Int)
(declare-fun x98 () Int)
(declare-fun x135 () Int)
(declare-fun x1220 () Int)
(declare-fun x1300 () Bool)
(declare-fun x206 (x223) Int)
(declare-fun x695 () Int)
(declare-fun x388 () Bool)
(declare-fun x1100 () Int)
(declare-fun x1075 () Int)
(declare-fun x100 () Int)
(declare-fun x893 () Bool)
(declare-fun x427 () Bool)
(declare-fun x568 () Int)
(declare-fun x288 () Int)
(declare-fun x520 () Bool)
(declare-fun x1334 () Int)
(declare-fun x546 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x977 () Bool)
(declare-fun x1017 () Int)
(declare-fun x144 () Bool)
(declare-fun x587 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x825 () Bool)
(declare-fun x317 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x93 () Int)
(declare-fun x545 () Int)
(declare-fun x623 () Int)
(declare-fun x877 () Int)
(declare-fun x40 () Bool)
(declare-fun x737 () Bool)
(declare-fun x469 () Bool)
(declare-fun x13 () x223)
(declare-fun x451 () Int)
(declare-fun x972 () Int)
(declare-fun x1389 () Int)
(declare-fun x275 () Int)
(declare-fun x1001 () Int)
(declare-fun x1039 () x223)
(declare-fun x102 () Int)
(declare-fun x754 () Int)
(declare-fun x1360 () Int)
(declare-fun x933 () Bool)
(declare-fun x1480 () x223)
(declare-fun x1101 () Int)
(declare-fun x234 () Bool)
(declare-fun x655 () Int)
(declare-fun x63 () Int)
(declare-fun x310 () Bool)
(declare-fun x12 () Int)
(declare-fun x1359 () Int)
(declare-fun x796 () Bool)
(define-fun x1259 ((x223 x223) (x1295 Int)) x223 (ite ((_ is x1245) x223) (x1245 (x248 x223) (+ (x1450 x223) x1295)) (ite ((_ is x964) x223) (x964 (x163 x223) (x1548 x223) (+ x1295 (x886 x223))) (x1117 (+ (x119 x223) x1295)))))
(define-fun x966 ((x723 Int)) Int (ite (and (< x723 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x723 0)) x723 (- x723 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x18 ((x723 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x723) (> 0 x723)) (+ x723 115792089237316195423570985008687907853269984665640564039457584007913129639936) x723))
(define-fun x1381 ((x79 Int)) Bool (and (<= 0 x79) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x79)))
(define-fun x340 ((x79 Int)) Bool (and (= x79 (x180 x79 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x79 (x180 115792089237316195423570985008687907853269984665640564039457584007913129639935 x79))))
(define-fun x738 ((x79 Int)) Bool (and (= 0 (x180 x79 0)) (= (x180 0 x79) 0)))
(define-fun x557 ((x79 Int)) Bool (= x79 (x180 x79 x79)))
(define-fun x752 ((x79 Int)) Bool (and (x557 x79) (x340 x79) (x738 x79)))
(define-fun x351 ((x79 Int)) Bool (= (x180 1461501637330902918203684832716283019655932542975 (x180 1461501637330902918203684832716283019655932542975 x79)) (x180 1461501637330902918203684832716283019655932542975 x79)))
(define-fun x493 ((x79 Int)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x79) (>= x79 0)) (= (x180 1461501637330902918203684832716283019655932542975 x79) x79)))
(define-fun x407 ((x79 Int)) Bool (=> (= (x180 1461501637330902918203684832716283019655932542975 x79) x79) (and (<= 0 x79) (< x79 1461501637330902918203684832716283019655932542976))))
(define-fun x1355 ((x79 Int)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x79) (< x79 2923003274661805836407369665432566039311865085952)) (= (x180 1461501637330902918203684832716283019655932542975 x79) (- x79 1461501637330902918203684832716283019655932542976))))
(define-fun x996 ((x79 Int) (x476 Int)) Bool (and (= x79 (+ (* 1461501637330902918203684832716283019655932542976 x476) (x180 1461501637330902918203684832716283019655932542975 x79))) (>= x476 0)))
(define-fun x1047 ((x79 Int) (x1346 Int)) Bool (and (x351 x79) (x1355 x79) (x996 x79 x1346) (x407 x79) (x493 x79)))
(define-fun x295 ((x79 Int) (x476 Int)) Bool (= (x180 x79 x476) (x180 x476 x79)))
(define-fun x1327 ((x79 Int) (x476 Int)) Bool (and (=> (>= x79 0) (<= (x180 x79 x476) x79)) (>= (x180 x79 x476) 0) (=> (>= x476 0) (<= (x180 x79 x476) x476))))
(define-fun x1240 ((x79 Int) (x476 Int)) Bool (and (x295 x79 x476) (x1327 x79 x476)))
(define-fun x1193 ((x79 Int) (x1346 Int)) Bool (and (x1047 x79 x1346) (x1240 x79 1461501637330902918203684832716283019655932542975)))
(define-fun x495 ((x79 Int)) Bool (= (x180 26959946667150639794667015087019630673637144422540572481103610249215 x79) (x180 26959946667150639794667015087019630673637144422540572481103610249215 (x180 26959946667150639794667015087019630673637144422540572481103610249215 x79))))
(define-fun x629 ((x79 Int)) Bool (=> (and (<= 0 x79) (> 26959946667150639794667015087019630673637144422540572481103610249216 x79)) (= (x180 26959946667150639794667015087019630673637144422540572481103610249215 x79) x79)))
(define-fun x170 ((x79 Int)) Bool (=> (= x79 (x180 26959946667150639794667015087019630673637144422540572481103610249215 x79)) (and (< x79 26959946667150639794667015087019630673637144422540572481103610249216) (<= 0 x79))))
(define-fun x1416 ((x79 Int)) Bool (=> (and (<= 26959946667150639794667015087019630673637144422540572481103610249216 x79) (< x79 53919893334301279589334030174039261347274288845081144962207220498432)) (= (x180 26959946667150639794667015087019630673637144422540572481103610249215 x79) (- x79 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x1380 ((x79 Int) (x476 Int)) Bool (and (<= 0 x476) (= x79 (+ (x180 26959946667150639794667015087019630673637144422540572481103610249215 x79) (* 26959946667150639794667015087019630673637144422540572481103610249216 x476)))))
(define-fun x773 ((x79 Int) (x1346 Int)) Bool (and (x1380 x79 x1346) (x170 x79) (x495 x79) (x629 x79) (x1416 x79)))
(define-fun x625 ((x79 Int) (x1346 Int)) Bool (and (x773 x79 x1346) (x1240 x79 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x141 ((x79 Int)) Bool (= (x180 115792089237316195423570985008687907853269984665640564039457584007913129639904 x79) (x180 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x180 115792089237316195423570985008687907853269984665640564039457584007913129639904 x79))))
(define-fun x908 ((x79 Int)) Bool (=> (and (>= x79 0) (< x79 32)) (= 0 (x180 115792089237316195423570985008687907853269984665640564039457584007913129639904 x79))))
(define-fun x601 ((x79 Int) (x476 Int) (x769 Int) (x1545 Int)) Bool (and (<= 0 x769) (<= 0 x1545) (< x769 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= (x180 115792089237316195423570985008687907853269984665640564039457584007913129639904 x79) (* x769 32)) (< x476 32) (= x79 (+ (* 32 x769) (* x1545 115792089237316195423570985008687907853269984665640564039457584007913129639936) x476)) (> 1 x1545) (<= 0 x476)))
(define-fun x364 ((x79 Int) (x1096 Int) (x1258 Int) (x1054 Int)) Bool (and (x141 x79) (x908 x79) (x601 x79 x1096 x1258 x1054)))
(define-fun x83 ((x79 Int) (x1096 Int) (x1258 Int) (x1054 Int)) Bool (and (x1240 x79 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x364 x79 x1096 x1258 x1054)))
(define-fun x412 ((x503 Int)) Int (x281 x503))
(define-fun x467 ((x503 Int)) Int (ite (= 128 x503) x257 (x311 x503)))
(define-fun x926 ((x503 Int)) Int (ite (and (>= x503 160) (< x503 (+ x429 160))) (x281 (+ (- x503 160) x193)) (x467 x503)))
(define-fun x894 ((x503 Int)) Int (ite (= x1538 x503) 0 (x926 x503)))
(define-fun x1434 ((x503 Int)) Int (ite (and (> (+ x1131 x418) x503) (>= x503 x1131)) (x281 (+ x124 (- x503 x1131))) (x698 x503)))
(define-fun x1449 ((x503 x223)) Int (ite (= x1474 x503) x366 (x1310 x503)))
(define-fun x298 ((x503 x223)) Int (ite (= x719 x503) x366 (x1310 x503)))
(define-fun x1515 ((x503 x223)) Int (ite (= x154 x503) x366 (x1188 x503)))
(define-fun x717 ((x503 x223)) Int (ite (= x44 x503) x366 (x1188 x503)))
(define-fun x207 ((x503 x223)) Int (ite (and x128 x1443) (x1188 x503) (ite (and x1130 x785) (x1310 x503) (ite (and (not x822) x134) (x1515 x503) (x717 x503)))))
(define-fun x430 ((x503 x223)) Int (ite (= x503 x741) x366 (x206 x503)))
(define-fun x515 ((x503 x223)) Int (ite (= x503 x291) x366 (x206 x503)))
(define-fun x1477 ((x503 x223)) Int (ite (= x1459 x503) x366 (x206 x503)))
(define-fun x104 ((x503 x223)) Int (ite (= x503 x107) x366 (x335 x503)))
(define-fun x760 ((x503 x223)) Int (ite (= x24 x503) x366 (x335 x503)))
(define-fun x1147 ((x503 x223)) Int (ite (= x503 x89) x366 (x335 x503)))
(define-fun x644 ((x503 x223)) Int (ite (and x1443 x128) (x335 x503) (ite (and x785 x1130) (x206 x503) (ite (and (not x38) (not x1362) x1139) (x104 x503) (ite (and x1139 x1362 (not x38)) (x760 x503) (x1147 x503))))))
(define-fun x1145 ((x503 x223)) Int (ite (= x460 x503) x373 (x168 x503)))
(define-fun x803 ((x503 x223)) Int (ite (= x503 x609) x5 (x1370 x503)))
(define-fun x39 ((x503 x223)) Int (ite (and x134 (not x822)) (x803 x503) (x1370 x503)))
(define-fun x1420 ((x503 x223)) Int (ite (and x128 x1443) (x1370 x503) (ite (and x785 x1130) (x168 x503) (x39 x503))))
(define-fun x538 ((x503 x223)) Int (ite (= x503 x196) x1170 (x1029 x503)))
(define-fun x152 ((x503 x223)) Int (ite (= x503 x1485) x974 (x349 x503)))
(define-fun x968 ((x503 x223)) Int (ite (and x1139 (not x1362) (not x38)) (x152 x503) (x349 x503)))
(define-fun x447 ((x503 x223)) Int (ite (= x503 x1404) 0 (x27 x503)))
(define-fun x816 ((x503 x223)) Int (ite (and x144 x1475 (not x679)) (x27 x503) (ite (and x1475 (not x144)) (x660 x503) (x447 x503))))
(define-fun x1238 ((x503 x223)) Int (ite (= x503 x962) 0 (x816 x503)))
(define-fun x269 ((x503 x223)) Int (ite (= x503 x301) x1010 (x1354 x503)))
(define-fun x286 ((x503 x223)) Int (ite (and x1022 x462) (x1354 x503) (x269 x503)))
(define-fun x1132 ((x503 Int)) Int (ite (= x503 x734) x413 (x433 x503)))
(define-fun x1230 ((x503 Int)) Int (ite (= x503 x924) x639 (x1132 x503)))
(define-fun x604 ((x503 Int)) Int (ite (and x389 x1022) (x433 x503) (x1230 x503)))
(define-fun x103 ((x503 Int)) Int (ite (= x503 x7) x1014 (x604 x503)))
(define-fun x542 ((x503 Int)) Int (ite (= x1558 x503) x403 (x1094 x503)))
(define-fun x612 ((x503 Int)) Int (ite (= x667 x503) x1417 (x653 x503)))
(define-fun x771 ((x503 Int)) Int (ite (= x503 x646) x1205 (x612 x503)))
(define-fun x1110 ((x503 Int)) Int (ite (and x1139 (not x38) (not x1362)) (x771 x503) (ite (and x1362 x1139 (not x38)) (x771 x503) (x653 x503))))
(define-fun x1556 ((x503 Int)) Int (ite (= x503 x875) x204 (x1110 x503)))
(define-fun x1042 ((x503 Int)) Int (ite (= x455 x503) x21 (x550 x503)))
(define-fun x181 ((x503 Int)) Int (ite (and x134 (not x718) (not x1172) x844) (x550 x503) (ite (and (not x718) x134 (not x844)) (x273 x503) (x1042 x503))))
(define-fun x212 ((x503 Int)) Int (ite (and x128 x1443) (x653 x503) (ite (and x785 x1130) (x433 x503) (ite (and x134 (not x718)) (x181 x503) (x273 x503)))))
(define-fun x391 ((x503 Int)) Int (ite (= x1016 x503) x1547 (x212 x503)))
(define-fun x1441 ((x503 Int)) Int (ite (= x1290 x503) x1077 (x391 x503)))
(define-fun x991 ((x503 Int)) Int (ite (= x503 x1209) x1431 (x1441 x503)))
(define-fun x1045 ((x503 Int)) Int (ite (= x1095 x503) x148 (x991 x503)))
(define-fun x142 ((x503 Int)) Int (ite (= x259 x503) 32 (x1045 x503)))
(define-fun x10 ((x503 Int)) Int (ite (= x1314 x503) x1534 (x341 x503)))
(define-fun x808 ((x503 Int)) Int (ite (= x1279 x503) 0 (x74 x503)))
(define-fun x979 ((x503 x223)) Int (ite (= x503 x928) x451 (x209 x503)))
(define-fun x1180 ((x503 x223)) Int (ite (and x1451 x1500) (x209 x503) (x979 x503)))
(define-fun x486 ((x503 Int)) Int (ite (= 0 x503) 1 (x912 x503)))
(define-fun x707 ((x503 Int)) Int (ite (= x503 0) 1 (x912 x503)))
(define-fun x590 ((x503 Int)) Int (ite (and x978 x759) (x486 x503) (x707 x503)))
(define-fun x1283 ((x503 Int)) Int (ite (= x869 x503) x82 (x873 x503)))
(define-fun x1225 ((x503 Int)) Int (ite (= x869 x503) x1044 (x873 x503)))
(define-fun x365 ((x503 Int)) Int (ite (= x869 x503) x890 (x501 x503)))
(define-fun x605 ((x503 Int)) Int (ite (and (> (+ x890 x1428) x503) (>= x503 x1428)) (x590 (+ 0 (- x503 x1428))) (x365 x503)))
(define-fun x921 ((x503 Int)) Int (ite (and x171 (not x436)) (x605 x503) (x501 x503)))
(define-fun x780 ((x503 Int)) Int (ite (= x503 x146) x1547 (x921 x503)))
(define-fun x556 ((x503 Int)) Int (ite (= x503 x1509) x1222 (x780 x503)))
(define-fun x161 ((x503 Int)) Int (ite (= x1215 x503) x1062 (x556 x503)))
(define-fun x1531 ((x503 Int)) Int (ite (= x1504 x503) x1529 (x161 x503)))
(define-fun x331 ((x503 Int)) Int (ite (= x503 x441) 32 (x1531 x503)))
(define-fun x1242 ((x503 Int)) Int (ite (= x215 x503) x1101 (x169 x503)))
(define-fun x243 ((x503 Int)) Int (ite (= x503 x60) 0 (x1025 x503)))
(define-fun x379 ((x503 x223)) Int (ite (= (x1082 274184521717934524641157099916833587206) x503) x1491 (x896 x503)))
(define-fun x839 ((x503 x223)) Int (ite (= (x1082 x1250) x503) x1359 (x379 x503)))
(define-fun x1358 ((x503 x223)) Int (ite (= x503 (x1082 x1250)) x711 (x839 x503)))
(define-fun x1429 ((x503 x223)) Int (ite (= x503 (x1082 274184521717934524641157099916833587206)) x1341 (x1358 x503)))
(define-fun x361 ((x503 x223)) Int (ite (= (x1082 274184521717934524641157099916833587206) x503) x410 (x1429 x503)))
(define-fun x1407 ((x503 x223)) Int (ite (= x503 (x1082 x113)) x280 (x361 x503)))
(define-fun x518 ((x503 x223)) Int (ite (= x503 x1448) x1445 (x548 x503)))
(define-fun x1331 ((x503 x223)) Int (ite (= x503 x172) x695 (x518 x503)))
(define-fun x954 ((x503 x223)) Int (ite (and x978 x759) (x1331 x503) (x548 x503)))
(define-fun x43 ((x503 x223)) Int (ite (= x420 x503) x275 (x954 x503)))
(define-fun x746 ((x503 Int)) Int (ite (= x503 0) 1 (x1391 x503)))
(define-fun x1535 ((x503 Int)) Int (ite (= x284 x503) x482 (x837 x503)))
(define-fun x1464 ((x503 x223)) Int (ite (= x489 x503) x435 (x603 x503)))
(define-fun x272 ((x503 x223)) Int (ite (= x503 x1406) x817 (x1464 x503)))
(define-fun x282 ((x503 x223)) Int (ite (and x978 x759) (x603 x503) (x272 x503)))
(define-fun x1253 ((x503 x223)) Int (ite (= x857 x503) x1524 (x282 x503)))
(define-fun x1162 ((x503 Int)) Int (ite (= x503 0) 1 (x1391 x503)))
(define-fun x1512 ((x503 Int)) Int (ite (= x503 x284) x241 (x837 x503)))
(define-fun x478 ((x503 Int)) Int (ite (and x1241 x411) (x746 x503) (x1162 x503)))
(define-fun x224 ((x503 x223)) Int (ite (= x503 (x1082 x113)) x336 (x1407 x503)))
(define-fun x1318 ((x503 Int)) Int (ite (= x284 x503) x678 (x1210 x503)))
(define-fun x85 ((x503 Int)) Int (ite (and (<= x1229 x503) (< x503 (+ x678 x1229))) (x478 (+ 0 (- x503 x1229))) (x1318 x503)))
(define-fun x1421 ((x503 Int)) Int (ite (and x547 x826) (x1210 x503) (x85 x503)))
(define-fun x829 ((x79 Int)) Bool (=> (and (not (= 142201243 x79)) (not (= x79 274184521717934524641157099916833587206)) (not (= 115792089237316195423570985008687907853269984665640564039457 x79)) (not (= x79 2514000705)) (not (= 1986467848 x79)) (not (= x79 18446744073709551615)) (not (= 911411945 x79)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x79)) (not (= 2798343961 x79)) (not (= x79 2418364589)) (not (= x79 87118632)) (not (= 2512682246 x79)) (not (= 2258409472 x79)) (not (= x79 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 1461501637330902918203684832716283019655932542975 x79)) (not (= x79 2532887486)) (not (= 2743102681 x79)) (not (= 2293535753 x79)) (not (= 274184521717934524641157099916833587214 x79)) (not (= x79 1000000000000000000)) (not (= 2061678023 x79)) (< 10000 x79) (not (= x79 1968616202)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x79)) (not (= x79 2764855426)) (not (= x79 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 2960351575 x79)) (not (= x79 69947311)) (not (= x79 1889567281)) (not (= x79 468353030)) (not (= x79 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= x79 2835717307)) (not (= x79 635128645)) (not (= x79 826074471)) (not (= x79 604800)) (not (= x79 2690754053)) (not (= x79 759532456)) (not (= x79 649617121)) (not (= x79 2211524764)) (not (= x79 274184521717934524641157099916833587218))) (not ((_ is x1117) (x1082 x79)))))
(assert (=> (>= 10000 x1520) (= (x1117 x1520) (x1082 x1520))))
(assert (x1381 x440))
(assert (x1381 x439))
(assert (x1381 x1314))
(assert (=> (<= x247 10000) (= (x1117 x247) (x1082 x247))))
(assert (=> (>= 10000 x174) (= (x1082 x174) (x1117 x174))))
(assert (x1381 x1344))
(assert (x1381 x218))
(assert (= (ite (= x1387 x919) x899 (x103 x1387)) (x67 x1387)))
(assert (x1381 x1071))
(assert (x829 x1064))
(assert (= 0 (x311 192)))
(assert (x829 x174))
(assert (= x833 (x757 (x1082 x833))))
(assert (x829 x574))
(assert (=> (<= x1334 10000) (= (x1082 x1334) (x1117 x1334))))
(assert (x1381 x398))
(assert (= (ite (and x442 (not x1009) x304 x1320 x578 x239) (x341 x716) (ite (and x1320 x578 x442 (not x239) x304) (x564 x716) (ite (and x578 (not x304) x1320 x442) (x859 x716) (ite (and x442 (not x1320) x578) (x378 x716) (x10 x716))))) (x74 x716)))
(assert (x1381 x944))
(assert (x1381 x77))
(assert (= (ite (and x578 x442 (not x1435)) (x74 x1112) (x808 x1112)) (x873 x1112)))
(assert (= (ite (= x700 x1387) x673 (x859 x1387)) (x564 x1387)))
(assert (x1381 x1220))
(assert (x1381 x910))
(assert (= x454 (x757 (x1082 x454))))
(assert (= (ite (= x1373 x1207) x257 (x894 x1207)) (x698 x1207)))
(assert (x1381 x846))
(assert (=> (<= x1128 10000) (= (x1117 x1128) (x1082 x1128))))
(assert (x1381 x1286))
(assert (= (x757 (x1082 x100)) x100))
(assert (x829 x254))
(assert (x1381 x225))
(assert (x1381 x834))
(assert (= x52 (=> (and (= (= x882 0) x948) (or (and x948 (= x929 0) (= 0 x1010)) (and (= x1319 x1010) (>= x1319 0) (not x948) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1319) (= (x964 (x1082 x882) (x1117 9) 0) x1502) (= x1319 (x1354 x1036)) (= x1036 (x964 (x1082 x1547) x876 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x680) (= x929 1) (= x876 (x964 (x1082 x680) x1502 0))))) x126)))
(assert (x752 x1218))
(assert (x1381 x147))
(assert (x829 x157))
(assert (= (ite (= x1157 x1504) x1522 (x67 x1504)) (x1094 x1504)))
(assert (x1381 x461))
(assert (x829 x815))
(assert (x829 x838))
(assert (= 604800 (x757 (x1117 604800))))
(assert (= (ite (and (not x230) x137 x448) (x1025 x716) (x243 x716)) (x837 x716)))
(assert (x1381 x350))
(assert (= x372 (x757 (x1082 x372))))
(assert (x1381 x417))
(assert (= x267 (or (and x1408 (not x1124)) (and x664 x1208) (and (not x794) x724))))
(assert (x829 x1296))
(assert (x1381 x767))
(assert (= x838 (x757 (x1082 x838))))
(assert (x1381 x445))
(assert (= x1517 (and x165 (not x709))))
(assert (= (ite (= x1157 x690) x1522 (x67 x690)) (x1094 x690)))
(assert (x1381 x279))
(assert (x625 x1218 x621))
(assert (x1381 x1532))
(assert (= x1334 (x757 (x1082 x1334))))
(assert (= 2293535753 (x757 (x1117 2293535753))))
(assert (= (x311 x1157) 0))
(assert (= (=> (= x466 (> x247 0)) (and (=> (not x466) x55) (=> x466 x1104))) x510))
(assert (x1381 x924))
(assert (x1381 x1001))
(assert (= (ite (and x37 x1541) (x698 x474) (x1434 x474)) (x433 x474)))
(assert (x829 x616))
(assert (=> (<= x521 10000) (= (x1082 x521) (x1117 x521))))
(assert (= (=> (and (or (and x389 (= x23 (x964 (x1082 x806) x57 0)) (= x741 (x964 (x1082 x1547) x23 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x806) (= x734 x7) (= (x964 (x1082 x324) (x1117 7) 0) x57)) (and (or (and (= x1457 0) (not x159)) (and x159 (= (x1230 x924) x1019) (or (and (= (x1230 x734) x77) x1325 (not (< x246 x77)) (= x891 x1457) (= (x18 (- x246 x77)) x891)) (and (= x642 (ite (< x357 604800) x357 604800)) (= x1457 x642) (not (> x34 x246)) (= (x18 (- x246 x34)) x357) (not x1325) (= 604800 x955))) (= (= 0 x34) x1325) (or (and (= x3 (x1230 x924)) x1437 (= x246 x3)) (and (= x366 x246) (not x1437))) (= (> x366 x1019) x1437))) (not x389) (<= x413 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x924 (x966 (+ x734 32))) (= x1237 (x964 (x1082 x324) (x1117 7) 0)) (= x413 (x888 x640)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x639) (= x1197 (= x1457 0)) (>= x413 0) (= x895 (x1230 x924)) (= x563 (x964 (x1082 x1056) x1237 0)) (<= x34 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x966 (+ 64 x734)) x1174) (or (and (= (x180 1461501637330902918203684832716283019655932542975 x68) x1151) (= (x964 (x1082 x324) (x1117 3) 0) x48) (= (* x1010 x1457) x507) (= (x964 (x1082 x1151) x48 0) x337) (= x236 (x964 (x1082 x324) (x1117 7) 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x1109) (= x7 x1174) (= x196 (x964 (x1082 x1547) x337 0)) (= x1168 (x964 (x1082 x1109) x236 0)) (< (* x1010 x1457) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x964 (x1082 x1547) x1168 0) x1459) (not x1197) (= x1170 x507)) (and (= x291 (x964 (x1082 x1547) x961 0)) (= x920 (x180 1461501637330902918203684832716283019655932542975 x68)) (= x1174 x7) (= (x964 (x1082 x324) (x1117 7) 0) x1505) x1197 (= (x964 (x1082 x920) x1505 0) x961))) (= x640 (x964 (x1082 x324) (x1117 1) 0)) (>= x34 0) (= (x180 1461501637330902918203684832716283019655932542975 x68) x1056) (= (x206 x651) x34) (= x159 (< x34 x895)) (= (x964 (x1082 x1547) x563 0) x651) (>= x639 0) (= (x884 x772) x639) (= x772 (x1259 x640 1)))) (or x462 (and (= (x964 (x1082 x405) x473 0) x1066) (= x405 (x180 1461501637330902918203684832716283019655932542975 x68)) (= (x964 (x1082 x1547) x1066 0) x301) (not x462) (= (x964 (x1082 x324) (x1117 9) 0) x473))) (= x462 (= 0 x929)) (= (= x1010 0) x389)) x1181) x126))
(assert (= (x550 x455) (ite (= x455 x92) x686 (x273 x455))))
(assert (=> (<= x1308 10000) (= (x1117 x1308) (x1082 x1308))))
(assert (= 649617121 (x757 (x1117 649617121))))
(assert (x1381 x1360))
(assert (=> (>= 10000 x1393) (= (x1082 x1393) (x1117 x1393))))
(assert (x1381 x387))
(assert (= (ite (= x511 x988) x72 (x1048 x511)) (x169 x511)))
(assert (x1381 x214))
(assert (x1381 x150))
(assert (x1381 x824))
(assert (= x189 (x757 (x1082 x189))))
(assert (= (ite (and x1022 x389) (x430 x1329) (ite (and x1022 x1197 (not x389)) (x515 x1329) (x1477 x1329))) (x335 x1329)))
(assert (x829 x1004))
(assert (= (x222 x1089) (ite (= x1184 x1089) x1026 (x984 x1089))))
(assert (x752 x68))
(assert (= (ite (and x1451 x1079) (x67 x1089) (ite (and (not x606) x1451 x1091 (not x1079)) (x1094 x1089) (ite (and (not x1091) x1451 (not x1079)) (x67 x1089) (x542 x1089)))) (x653 x1089)))
(assert (= (ite (= x1095 x92) x686 (x273 x1095)) (x550 x1095)))
(assert (= true x632))
(assert (=> (>= 10000 x150) (= (x1117 x150) (x1082 x150))))
(assert (x1381 x418))
(assert (x1381 x559))
(assert (x1381 x1069))
(assert (x1381 x352))
(assert (x1381 x1544))
(assert (x1381 x892))
(assert (= (x311 x1387) 0))
(assert (x1381 x92))
(assert (x1381 x843))
(assert (= (ite (= x69 x445) x846 (x1556 x69)) (x273 x69)))
(assert (= x724 (and x1349 (not x525))))
(assert (= (ite (and (not x1435) x442 x578) (x74 x716) (x808 x716)) (x873 x716)))
(assert (= (x757 (x1259 x640 1)) (+ (x757 x640) 1)))
(assert (=> (<= x179 10000) (= (x1117 x179) (x1082 x179))))
(assert (x1381 x1498))
(assert (x1381 x1364))
(assert (= x632 x402))
(assert (x1381 x1313))
(assert (x1381 x836))
(assert (x1381 x287))
(assert (= (=> (and (<= 0 x321) (> 2293535753 x767) (= x1550 (x964 (x1082 x1530) x263 0)) (= (x209 x1550) x321) (> 911411945 x767) (= x321 x1286) (= (x964 (x1082 x1466) (x1117 10) 0) x263) (= x1000 (x219 (x1082 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x1530) (= 69947311 x767) (> 468353030 x767) (> x1000 0) (<= x321 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x396 x814) (= x278 x833) (= x735 x417) (= x1286 x1397)) x173)) x394))
(assert (= (x1082 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1117 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x829 x586))
(assert (x1381 x623))
(assert (= x108 (x757 (x1082 x108))))
(assert (x1381 x51))
(assert (= (ite (= x1387 x80) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x331 x1387)) (x984 x1387)))
(assert (= x737 (=> (and (= (x839 (x1082 x1250)) x711) (not (= x322 0)) (or (not x1099) (and (= x1523 (x966 (+ x1228 32))) (= x1293 (not x1469)) (= x9 (x921 x1523)) (= x1220 x9) (> x9 0) (= (= 0 x9) x1469) (not (or (> x1335 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1335 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1335 32)))) (= (ite x1293 1 0) x1220) (= (x921 x1228) x1335) x1099)) (= x1099 (< 0 x1037)) (or (and (= x1215 x869) (= x1228 96) x436) (and (not x436) (= x869 x1228) (= (x966 (+ x869 x650)) x583) (= (x966 (+ x259 96)) x1428) (= (x180 115792089237316195423570985008687907853269984665640564039457584007913129639904 x597) x650) (= x597 (x966 (+ x890 63))) (= x583 x1215))) (= x1341 (x1358 (x1082 274184521717934524641157099916833587206))) (= x990 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1358 (x1082 274184521717934524641157099916833587206)))) (= x1037 (x921 x1228)) x990 (= x436 (= 0 x890))) x1557)))
(assert (x1381 x1032))
(assert (= (ite (and x1079 x1451) (x67 x1228) (ite (and (not x606) x1091 (not x1079) x1451) (x1094 x1228) (ite (and (not x1091) x1451 (not x1079)) (x67 x1228) (x542 x1228)))) (x653 x1228)))
(assert (x752 x927))
(assert (= (x757 (x1117 2514000705)) 2514000705))
(assert (x1381 x1215))
(assert (=> (<= x201 10000) (= (x1117 x201) (x1082 x201))))
(assert (x1381 x302))
(assert (x1381 x983))
(assert (x1381 x1218))
(assert (x1381 x642))
(assert (=> (<= x913 10000) (= (x1082 x913) (x1117 x913))))
(assert (x1381 x761))
(assert (x1381 x452))
(assert (= (ite (= x801 x1089) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x1089)) (x378 x1089)))
(assert (=> (<= x1462 10000) (= (x1082 x1462) (x1117 x1462))))
(assert (=> (<= x228 10000) (= (x1117 x228) (x1082 x228))))
(assert (x1381 x957))
(assert (x1381 x704))
(assert (x1193 x623 x1264))
(assert (x1381 x1431))
(assert (x829 x188))
(assert (= (x757 (x1117 2258409472)) 2258409472))
(assert (= x1546 (x757 (x1082 x1546))))
(assert (= (x341 x1023) (ite (= x819 x1023) x197 (x564 x1023))))
(assert (= (x1117 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1082 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x1117 274184521717934524641157099916833587214) (x1082 274184521717934524641157099916833587214)))
(assert (x1381 x1170))
(assert (x1381 x108))
(assert (x829 x1119))
(assert (x1381 x454))
(assert (= x402 x153))
(assert (x1381 x1546))
(assert (x829 x1344))
(assert (x1381 x127))
(assert (= x393 (x757 (x1082 x393))))
(assert (= x877 (x757 (x1082 x877))))
(assert (= (=> (and (= x1011 (x219 (x1082 274184521717934524641157099916833587206))) (not (= x1120 1968616202)) (< 0 x1011) (<= 0 x63) (not (= x1120 1986467848)) (= x1294 (x964 (x1082 x307) (x1117 6) 0)) (not (< x1120 1968616202)) (= x63 x500) (<= x63 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1120 2061678023)) (> 2293535753 x1120) (not (= x1120 2211524764)) (= (x1310 x1324) x63) (= x1120 2258409472) (not (> 911411945 x1120)) (>= 1461501637330902918203684832716283019655932542975 x372) (= (x964 (x1082 x372) x1294 0) x1324)) (=> (and (= x500 x1043) (= x735 x643) (= x931 x278) (= x472 x814)) x705)) x617))
(assert (x829 x1334))
(assert (x829 x1035))
(assert (= x1137 (=> (= (= x1250 274184521717934524641157099916833587214) x709) (and (=> (and (> x941 0) (= x799 x1141) (= x238 (x964 (x1082 274184521717934524641157099916833587206) (x1117 1) 0)) (not (= 2514000705 x1527)) (= (> x1369 x252) x1084) (= x770 x683) (= x1044 x1313) (= x1527 2835717307) (= x51 x1369) (= x1077 x1369) (<= x252 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x1190) (= x299 (< x252 x51)) (= x440 274184521717934524641157099916833587206) (= x489 (x964 (x1082 274184521717934524641157099916833587206) (x1117 1) 0)) (<= x1383 1461501637330902918203684832716283019655932542975) (= (x18 (- x1141 4)) x50) (= x1057 (or (> x50 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x50 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x50 64)))) (= x890 32) (= (x603 x238) x252) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x770 x51)) (not (> 4 x1141)) (= x1383 x1544) (not (= 1889567281 x1527)) (= x630 x51) (<= 0 x252) (= (x964 (x1082 x815) (x1117 1) 0) x1392) (= x530 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x322 1) (= (x180 1461501637330902918203684832716283019655932542975 x1383) x815) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x770) (>= x770 0) (not x299) (= 274184521717934524641157099916833587206 x218) (not (= x1527 649617121)) (not (= 826074471 x1527)) (= (x180 1461501637330902918203684832716283019655932542975 x1383) x1393) (not (< x1527 649617121)) (not x1057) x709 (= x1141 68) (not x1084) (= x435 (x18 (- x252 x1369))) (= (x964 (x1082 x1393) (x1117 1) 0) x1406) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x770 x51)) x1190) (= (x219 (x1082 274184521717934524641157099916833587214)) x941) (= x817 (+ x683 x630)) (= x770 (x1464 x1392))) x737) (=> (not x709) x832)))))
(assert (= (x757 (x1117 2418364589)) 2418364589))
(assert (=> (>= 10000 x616) (= (x1082 x616) (x1117 x616))))
(assert (= x105 (x757 (x1082 x105))))
(assert (= (x341 x716) (ite (= x716 x819) x197 (x564 x716))))
(assert (x1381 x594))
(assert (x1381 x597))
(assert (x752 x789))
(assert (= (ite (= x69 x919) x899 (x103 x69)) (x67 x69)))
(assert (x1381 x1453))
(assert (x1381 x354))
(assert (x1381 x784))
(assert (x1381 x1389))
(assert (x1381 x98))
(assert (x1381 x511))
(assert (x1381 x1397))
(assert (= x1067 (=> (= x764 0) x519)))
(assert (= (x378 x690) (ite (= x801 x690) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x690))))
(assert (= (x1082 142201243) (x1117 142201243)))
(assert (x1381 x1494))
(assert (= x900 (x757 (x1082 x900))))
(assert (= (x757 (x1082 x1530)) x1530))
(assert (x1381 x14))
(assert (x1381 x1547))
(assert (= (x859 x1089) (ite (= x957 x1089) x54 (x378 x1089))))
(assert (x1381 x1511))
(assert (= (ite (and x37 x1541) (x698 x1095) (x1434 x1095)) (x433 x1095)))
(assert (= x920 (x757 (x1082 x920))))
(assert (x1381 x1010))
(assert (x1381 x823))
(assert (= x1466 (x757 (x1082 x1466))))
(assert (= (x501 x1089) (ite (and x978 x759) (x1283 x1089) (x1225 x1089))))
(assert (x1381 x573))
(assert (=> (<= x764 10000) (= (x1082 x764) (x1117 x764))))
(assert (= (ite (= x1373 x700) x673 (x859 x1373)) (x564 x1373)))
(assert (= (x757 (x1117 18446744073709551615)) 18446744073709551615))
(assert (= (ite (= x801 x1387) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x1387)) (x378 x1387)))
(assert (x829 x768))
(assert (x1381 x887))
(assert (x1381 x160))
(assert (= (x757 (x1082 x913)) x913))
(assert (= (x433 x1299) (ite (and x37 x1541) (x698 x1299) (x1434 x1299))))
(assert (= (=> (and (= (x964 (x1082 x949) x283 0) x244) (<= x404 1461501637330902918203684832716283019655932542975) (>= x1136 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1136) (not (< x1536 2690754053)) (= x1536 2743102681) (= x200 (x964 (x1082 x174) (x1117 3) 0)) (= x1136 (x1238 x244)) (not (> 2293535753 x1536)) (< x1536 2960351575) (<= x949 1461501637330902918203684832716283019655932542975) (> x786 0) (not (= x1536 2690754053)) (= (x219 (x1082 274184521717934524641157099916833587206)) x786) (= x443 x1136) (= x283 (x964 (x1082 x404) x200 0))) (=> (and (= x443 x276) (= x1336 x959) (= x41 x278) (= x572 x814) (= x735 x1528)) x693)) x1482))
(assert (x1381 x425))
(assert (= 0 (x311 x1504)))
(assert (x1381 x1456))
(assert (= (x859 x1387) (ite (= x1387 x957) x54 (x378 x1387))))
(assert (= (x1188 x543) (ite (and x1451 x1123) (x1449 x543) (x298 x543))))
(assert (x1381 x696))
(assert (= (ite (= x957 x1023) x54 (x378 x1023)) (x859 x1023)))
(assert (x1381 x687))
(assert (x1381 x890))
(assert (x1381 x1481))
(assert (x752 x226))
(assert (x1381 x254))
(assert (x829 x1252))
(assert (x829 x807))
(assert (x752 1461501637330902918203684832716283019655932542975))
(assert (= (x501 x1228) (ite (and x978 x759) (x1283 x1228) (x1225 x1228))))
(assert (= (ite (= x919 x1299) x899 (x103 x1299)) (x67 x1299)))
(assert (x829 x1462))
(assert (x1381 x1002))
(assert (= (x757 (x1082 x1236)) x1236))
(assert (=> (>= 10000 x807) (= (x1082 x807) (x1117 x807))))
(assert (x1381 x1291))
(assert (= (ite (and x37 x1541) (x698 x92) (x1434 x92)) (x433 x92)))
(assert (x1381 x1153))
(assert (x829 x572))
(assert (=> (>= 10000 x49) (= (x1117 x49) (x1082 x49))))
(assert (x1381 x1533))
(assert (x1381 x1035))
(assert (= (x1117 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x1082 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x1381 x1243))
(assert (x1381 x1542))
(assert (x1381 x795))
(assert (= (x757 (x1082 x1269)) x1269))
(assert (= (ite (= x1228 x819) x197 (x564 x1228)) (x341 x1228)))
(assert (=> (>= 10000 x1152) (= (x1117 x1152) (x1082 x1152))))
(assert (x1381 x64))
(assert (x829 x877))
(assert (x1381 x1476))
(assert (= x1265 (and (not x1223) x1382)))
(assert (= (x757 (x1082 x643)) x643))
(assert (x1381 x1063))
(assert (x1381 x663))
(assert (= (x335 x581) (ite (and x389 x1022) (x430 x581) (ite (and x1022 x1197 (not x389)) (x515 x581) (x1477 x581)))))
(assert (x1381 x289))
(assert (x1381 x1095))
(assert (= (x757 (x1117 2835717307)) 2835717307))
(assert (= 0 (x311 x69)))
(assert (x829 x943))
(assert (x829 x836))
(assert (= (=> (and (= x1427 (x180 1461501637330902918203684832716283019655932542975 x68)) (= x1321 (x964 (x1082 x1547) x1192 0)) (>= x1138 0) (= (x964 (x1082 x247) (x1117 7) 0) x342) (= x1192 (x964 (x1082 x1427) x342 0)) (= x1138 (x335 x1321)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1138) (= (= x1138 0) x942)) (and (=> (and (= x1498 x247) (not x942)) x78) (=> x942 x672))) x1104))
(assert (= (x1094 x1299) (ite (= x1157 x1299) x1522 (x67 x1299))))
(assert (= (ite (= x69 x1157) x1522 (x67 x69)) (x1094 x69)))
(assert (x1381 x512))
(assert (= (x757 (x1082 x836)) x836))
(assert (= (x698 x1228) (ite (= x1373 x1228) x257 (x894 x1228))))
(assert (= (ite (= x474 x1157) x1522 (x67 x474)) (x1094 x474)))
(assert (x1381 x1466))
(assert (x1381 x1423))
(assert (x1381 x720))
(assert (= x1277 x750))
(assert (x1381 x221))
(assert (=> (<= x815 10000) (= (x1117 x815) (x1082 x815))))
(assert (=> (>= 10000 x393) (= (x1082 x393) (x1117 x393))))
(assert (x1381 x1409))
(assert (x1381 x828))
(assert (x1381 x802))
(assert (=> (<= x726 10000) (= (x1082 x726) (x1117 x726))))
(assert (= x1114 (x757 (x1082 x1114))))
(assert (= (=> (= x1223 (= x113 274184521717934524641157099916833587214)) (and (=> (and (= x638 (>= (+ x1501 x1144) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (+ x562 x905) x715) (= (x219 (x1082 274184521717934524641157099916833587214)) x1161) (not (= x355 2514000705)) (= (x18 (- x1153 x1395)) x1524) (= x1222 x1395) (= x857 (x964 (x1082 274184521717934524641157099916833587206) (x1117 1) 0)) (= 274184521717934524641157099916833587206 x371) (not (= 649617121 x355)) (= x32 (> x1501 x1153)) (= (x964 (x1082 274184521717934524641157099916833587206) (x1117 1) 0) x1480) (= 1 x689) (= x1176 (x180 1461501637330902918203684832716283019655932542975 x855)) (= x386 (x18 (- x1494 4))) (= x1544 x855) (not x479) (= x1133 x241) (not (> 649617121 x355)) (not x638) (<= x1153 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1501 x1395) (= (> x1395 x1153) x8) (not (= x355 826074471)) (>= 1461501637330902918203684832716283019655932542975 x855) (= (x282 x1480) x1153) (= x1494 x305) (= (or (and (< x386 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x386) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x386)) x479) (not (> 4 x1494)) (= x678 32) (not x8) x1223 (= x421 274184521717934524641157099916833587206) (= (x180 1461501637330902918203684832716283019655932542975 x855) x586) (= (x1253 x33) x1144) (<= 0 x1153) (= x1494 68) (<= x1144 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1144 0) (< (+ x1144 x1501) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= x355 1889567281)) (= x1144 x562) (= x1501 x905) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1243) (not x32) (= (x964 (x1082 x586) (x1117 1) 0) x33) (< 0 x1161) (= x355 2835717307)) x1306) (=> (not x1223) x1471))) x1388))
(assert (= x680 (x757 (x1082 x680))))
(assert (= (=> (and (= x214 (x180 1461501637330902918203684832716283019655932542975 x68)) (>= x1460 0) (= (= x1460 0) x444) (= x453 (x964 (x1082 x247) (x1117 6) 0)) (= (x1188 x1396) x1460) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1460) (= (x964 (x1082 x214) x453 0) x1396)) (and (=> x444 x400) (=> (and (= x852 x247) (not x444)) x787))) x186))
(assert (x1381 x762))
(assert (x1381 x634))
(assert (x1381 x1112))
(assert (= (x757 (x1082 x806)) x806))
(assert (=> (>= 10000 x108) (= (x1117 x108) (x1082 x108))))
(assert (= (x757 (x1082 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= x448 x171))
(assert (=> (>= 10000 x1296) (= (x1117 x1296) (x1082 x1296))))
(assert (=> (<= x1250 10000) (= (x1082 x1250) (x1117 x1250))))
(assert (x1381 x686))
(assert (= (x859 x1112) (ite (= x957 x1112) x54 (x378 x1112))))
(assert (x829 x582))
(assert (=> (>= 10000 x1248) (= (x1117 x1248) (x1082 x1248))))
(assert (= (x757 (x1082 x807)) x807))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1551) (= x1551 (x207 x748)) (not (< x865 911411945)) (= x202 (x964 (x1082 x374) (x1117 6) 0)) (= x865 2258409472) (not (= x865 2061678023)) (not (= 1968616202 x865)) (not (= x865 1986467848)) (not (= 2211524764 x865)) (> 2293535753 x865) (= (x964 (x1082 x1152) x202 0) x748) (>= x1551 0) (> x1398 0) (>= 1461501637330902918203684832716283019655932542975 x1152) (not (> 1968616202 x865)) (= x1398 (x219 (x1082 274184521717934524641157099916833587206))) (= x517 x1551)) (=> (and (= x582 x278) (= x814 x109) (= x898 x517) (= x877 x735)) x930)) x872))
(assert (x1381 x1415))
(assert (x1381 x955))
(assert (x1381 x1169))
(assert true)
(assert (= (=> (= (< 1 x257) x137) (and (=> (not x137) x1479) (=> (and (< 1 x704) x137 (= (x18 (- x441 x1215)) x1032) (= x1222 (x921 x1112)) x669 (= (x966 (+ 192 x65)) x1112) (= x1333 (x219 (x1082 x113))) (= (x966 (+ 64 x203)) x151) (= (x966 (+ x804 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x1529) (= x699 (< 0 x1274)) (= x1504 (x966 (+ x1215 32))) (= (x966 (+ 68 x1215)) x1509) (= (< 0 x1333) x669) (= x804 (x180 26959946667150639794667015087019630673637144422540572481103610249215 x285)) (= (x966 (+ 36 x1215)) x146) (= (x966 (+ x1215 100)) x441) (= x1062 (x18 (- x1032 32))) (<= x113 1461501637330902918203684832716283019655932542975) (= (x921 x1373) x704) (= (x161 x1504) x285) (< 1 x257) (= x284 (x966 (+ 128 x146))) (or (and (= (x984 x1387) x1026) (= x284 x1184) (= x1284 (< 32 x1274)) x699 (or (and x1284 (= (x966 (+ 64 x1215)) x1023) (= (x222 x1023) x274) (= x802 (x966 (+ x441 96))) (or (and (= (x966 (+ x441 128)) x988) (= x1089 (x966 (+ x1215 96))) (= x72 (x1048 x1089)) x258 (= (< 96 x1274) x1422) (or (and (= 128 x1159) (= (x169 x511) x1101) (= (x966 (+ 128 x1215)) x511) (= x215 (x966 (+ 160 x441))) (= x541 (< 128 x1274)) x1422 (not x541)) (and (not x1422) (= 96 x1159)))) (and (not x258) (= x1159 64))) (= x258 (> x1274 64))) (and (= x1159 32) (not x1284))) (= x1387 x1504)) (and (not x699) (= 0 x1159))) (= (x984 x1215) x1274) (= x595 0) (= (x966 (+ 96 x146)) x80) (or (and (= (x966 (+ x1274 x284)) x60) x230) (not x230)) (= (> x1159 x1274) x230) (= (x281 x151) x113)) x415))) x1557))
(assert (= (x564 x511) (ite (= x511 x700) x673 (x859 x511))))
(assert (= (x757 (x1259 x967 1)) (+ 1 (x757 x967))))
(assert (= (x550 x1387) (ite (= x1387 x92) x686 (x273 x1387))))
(assert (x1381 x90))
(assert (x1381 x572))
(assert (x1381 x1044))
(assert (= x782 x338))
(assert (x1381 x133))
(assert (x1381 x280))
(assert (= (ite (= x819 x1504) x197 (x564 x1504)) (x341 x1504)))
(assert (x1381 x689))
(assert (x1381 x517))
(assert (= (x67 x919) x899))
(assert (= (x757 (x1082 x188)) x188))
(assert (= (x1188 x779) (ite (and x1451 x1123) (x1449 x779) (x298 x779))))
(assert (= (x1082 2418364589) (x1117 2418364589)))
(assert (= x1061 (=> (and (not (< x1496 2293535753)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1106) (not (< x1496 2690754053)) (not (= x1496 2764855426)) (> x783 0) (= x975 x1106) (= x1246 (x964 (x1082 x266) (x1117 5) 0)) (not (= x1496 2743102681)) (= x99 (x964 (x1082 x112) x1246 0)) (= (x219 (x1082 274184521717934524641157099916833587206)) x783) (= (x168 x99) x1106) (< x1496 2960351575) (>= x1106 0) (>= 1461501637330902918203684832716283019655932542975 x112) (= x1496 2798343961) (not (= 2690754053 x1496))) (=> (and (= x1226 x975) (= x814 x1344) (= x278 x135) (= x823 x735)) x1282))))
(assert (= x1055 (x757 (x1082 x1055))))
(assert (= (x660 x244) (ite (and x128 x1443) (x349 x244) (ite (and x785 x1130) (x1029 x244) (x968 x244)))))
(assert (=> (<= x877 10000) (= (x1082 x877) (x1117 x877))))
(assert (= x1261 (=> (and (= x777 (x964 (x1082 x913) x117 0)) (not (= 2418364589 x1071)) (= (x219 (x1082 274184521717934524641157099916833587206)) x972) (<= x913 1461501637330902918203684832716283019655932542975) (> 2690754053 x1071) (not (= x1071 2293535753)) (< x1071 2960351575) (not (< x1071 2293535753)) (= (x964 (x1082 x892) (x1117 4) 0) x199) (= x1071 2532887486) (= (x964 (x1082 x807) x777 0) x449) (= x370 x834) (>= 1461501637330902918203684832716283019655932542975 x807) (not (= x1071 2512682246)) (= x834 (x1473 x449)) (<= x316 1461501637330902918203684832716283019655932542975) (>= x834 0) (> x972 0) (= x117 (x964 (x1082 x316) x199 0)) (<= x834 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x579)))
(assert (x829 x1191))
(assert (= x388 (=> (and (= x302 (x273 x445)) (= (x968 x1148) x294) (or x587 (and (= x1497 (x180 1461501637330902918203684832716283019655932542975 x68)) (not x587))) (or (and (= x1183 (x180 x1186 x927)) (= (ite (< 115792089237316195423570985008687907853269984665640564039457 x294) 1 0) x927) (= x1186 1) (< 0 x1452) (or (not x844) (and (= x376 (* x887 x75)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x887 x75)) (>= 1461501637330902918203684832716283019655932542975 x1520) (= x192 x73) (>= x1163 0) (= (x273 x92) x73) (= (x964 (x1082 x1064) x1463 0) x356) (= x296 x193) (or (not x1172) (and (= x1212 (x964 (x1082 x1547) x818 0)) (= (x953 x790) x985) (< 1 x257) (= x1465 x492) x1172 (= x455 (x966 (+ x65 192))) (< 1 x31) (= x1506 (x964 (x1082 x1552) x1212 0)) (= x1219 (> x257 2)) (= (x550 x1373) x31) (>= x1028 0) (>= 1461501637330902918203684832716283019655932542975 x188) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x887 x985)) (= x133 (x966 (+ x203 64))) (= 0 x1028) (= x1503 x419) (= x279 (x180 1461501637330902918203684832716283019655932542975 x68)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x1119) (= (x1473 x1506) x1028) (= x188 (x281 x133)) (< (+ x1465 x1503) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x281 x133) x1552) (= (x964 (x1082 x247) (x1117 11) 0) x1204) (= (x550 x455) x1465) (>= x985 0) (= x790 (x964 (x1082 x188) x1167 0)) (<= x985 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x964 (x1082 x247) (x1117 4) 0) x120) (>= 1461501637330902918203684832716283019655932542975 x1552) (< 1 x257) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028) (not x1219) (= (div x155 1000000000000000000) x1503) (= (x964 (x1082 x279) x1204 0) x1167) (= (x964 (x1082 x1119) x120 0) x818) (= x21 (+ x419 x492)) (= (* x887 x985) x155))) (= (x281 x296) x1520) (= x393 (x180 1461501637330902918203684832716283019655932542975 x68)) (<= x75 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x257 0) (> x1343 0) (< (+ x232 x73) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1343 (x273 x1373)) (= x1064 (x281 x296)) (>= 1461501637330902918203684832716283019655932542975 x1064) (= (x964 (x1082 x1520) x245 0) x776) (= (x964 (x1082 x393) x527 0) x245) (= x1463 (x964 (x1082 x1547) x866 0)) (= x232 x753) (= x1163 0) (= x1172 (> x257 1)) (= x235 (x180 1461501637330902918203684832716283019655932542975 x68)) (= x866 (x964 (x1082 x235) x1281 0)) (= x232 (div x376 1000000000000000000)) (= (x964 (x1082 x247) (x1117 4) 0) x1281) (= (+ x192 x753) x686) (< 0 x257) (<= x1163 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x75) (= x1163 (x1473 x356)) (= (x964 (x1082 x247) (x1117 11) 0) x527) (= x75 (x953 x776)) x844 (= x92 (x966 (+ x65 160))))) (= x431 (mod (* x294 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x844 (< 0 x257)) (= x843 x102) (= x843 (x966 (+ x247 1))) (not x718) (= (div x431 x1452) x887) (= x1183 0)) (and x718 (= x687 (x966 (+ 1 x247))) (= x687 x102))) (= (x964 (x1082 x247) (x1117 3) 0) x101) (= (x964 (x1082 x247) (x1117 1) 0) x967) (= x445 (x966 (+ x875 32))) (= (x884 x358) x846) (= (= 0 x504) x587) (>= x846 0) (= x761 (x180 1461501637330902918203684832716283019655932542975 x68)) (>= x294 0) (= (= x294 0) x718) (<= x1452 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1452 (x39 x1127)) (> x102 x1488) (or (and (= x531 0) (not x934)) (and (= (> x366 x1173) x593) (or (and (not x593) (= x828 x366)) (and x593 (= x828 x647) (= x647 (x273 x445)))) (= x1173 (x273 x445)) (= (= 0 x662) x1468) x934 (or (and (= x531 x1316) (= (x18 (- x828 x662)) x1423) (not (> x662 x828)) (= 604800 x1021) (not x1468) (= (ite (< x1423 604800) x1423 604800) x1316)) (and (= x1516 (x273 x875)) x1468 (= x531 x1254) (not (< x828 x1516)) (= x1254 (x18 (- x828 x1516))))))) (= (x180 1461501637330902918203684832716283019655932542975 x68) x1555) (= x671 (x964 (x1082 x1555) x101 0)) (= x762 (x966 (+ 64 x875))) (<= 0 x1452) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x294) (= x1209 x762) (= (x964 (x1082 x247) (x1117 6) 0) x490) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x662) (= x358 (x1259 x967 1)) (= x822 (= 0 x531)) (or (and (not x822) (= (x964 (x1082 x150) x1268 0) x609) (= x179 (x180 1461501637330902918203684832716283019655932542975 x68)) (= x1285 (x964 (x1082 x247) (x1117 6) 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x150) (= (* x531 x91) x840) (= (x964 (x1082 x247) (x1117 5) 0) x1268) (= x840 x5) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x531 x91)) (= (x964 (x1082 x179) x1285 0) x154)) (and (= x44 (x964 (x1082 x122) x6 0)) x822 (= x6 (x964 (x1082 x247) (x1117 6) 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x122))) (= (x964 (x1082 x761) x1102 0) x1127) (= (> x302 x662) x934) (= x105 (x180 1461501637330902918203684832716283019655932542975 x68)) (>= x662 0) (= (x964 (x1082 x1547) x671 0) x1148) (= (x964 (x1082 x105) x490 0) x13) (= x1102 (x964 (x1082 x247) (x1117 5) 0)) (= (x888 x967) x204) (<= 0 x204) (<= x846 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x204 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1188 x13) x662)) x1312)))
(assert (= x949 (x757 (x1082 x949))))
(assert (=> (>= 10000 x792) (= (x1082 x792) (x1117 x792))))
(assert (x1381 x1274))
(assert (= (x859 x1504) (ite (= x1504 x957) x54 (x378 x1504))))
(assert (x1381 x9))
(assert (= x712 (x757 (x1082 x712))))
(assert (= (x873 x1023) (ite (and x578 (not x1435) x442) (x74 x1023) (x808 x1023))))
(assert (= 635128645 (x757 (x1117 635128645))))
(assert (x829 x405))
(assert (x829 x922))
(assert (x1381 x673))
(assert (x1381 x277))
(assert (x829 x417))
(assert (x1193 x1006 x465))
(assert (= (=> (and (not (> 2690754053 x1075)) (> 2960351575 x1075) (not (= x1075 2743102681)) (>= 1461501637330902918203684832716283019655932542975 x1255) (= 2798343961 x1075) (= (x964 (x1082 x864) (x1117 5) 0) x86) (= x505 (x219 (x1082 274184521717934524641157099916833587206))) (= x1113 (x168 x916)) (not (= x1075 2690754053)) (= x916 (x964 (x1082 x1255) x86 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1113) (not (> 2293535753 x1075)) (not (= x1075 2764855426)) (>= x1113 0) (= x1113 x1351) (> x505 0)) (=> (and (= x278 x64) (= x735 x332) (= x814 x838) (= x1426 x959) (= x566 x1351)) x1446)) x1116))
(assert (=> (>= 10000 x1100) (= (x1082 x1100) (x1117 x1100))))
(assert (= (ite (= x1207 x92) x686 (x273 x1207)) (x550 x1207)))
(assert (x829 x454))
(assert (= x434 (x757 (x1082 x434))))
(assert (=> (<= x266 10000) (= (x1117 x266) (x1082 x266))))
(assert (x829 x1549))
(assert (=> (>= 10000 x1552) (= (x1082 x1552) (x1117 x1552))))
(assert (x1381 x1387))
(assert (x1381 x157))
(assert (x1381 x135))
(assert (= (ite (= x80 x511) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x331 x511)) (x984 x511)))
(assert (= (x1082 2835717307) (x1117 2835717307)))
(assert (= (x378 x1373) (ite (= x801 x1373) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x1373))))
(assert (x1381 x1176))
(assert (x1381 x1144))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x757 (x1117 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x829 x472))
(assert (x1381 x132))
(assert (= (or (and x537 x70) (and (not x56) x1510) (and (not x1078) x830)) x406))
(assert (= (x74 x1373) (ite (and x239 x578 x304 x442 x1320 (not x1009)) (x341 x1373) (ite (and x304 x1320 (not x239) x578 x442) (x564 x1373) (ite (and x578 x1320 x442 (not x304)) (x859 x1373) (ite (and x578 x442 (not x1320)) (x378 x1373) (x10 x1373)))))))
(assert (= (x550 x1299) (ite (= x92 x1299) x686 (x273 x1299))))
(assert (x1381 x1072))
(assert (=> (<= x768 10000) (= (x1082 x768) (x1117 x768))))
(assert (x1381 x697))
(assert (x1381 x1027))
(assert (=> (<= x712 10000) (= (x1082 x712) (x1117 x712))))
(assert (x752 x720))
(assert (= (ite (= x1023 x80) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x331 x1023)) (x984 x1023)))
(assert (x1381 x1113))
(assert (x829 x348))
(assert (x1381 x1108))
(assert (=> (<= x572 10000) (= (x1117 x572) (x1082 x572))))
(assert (= (and (not x411) x1241) x1382))
(assert (x1381 x1555))
(assert (=> (>= 10000 x1064) (= (x1117 x1064) (x1082 x1064))))
(assert (x1381 x249))
(assert (x1381 x992))
(assert (= (x311 x1207) 0))
(assert (x1381 x1328))
(assert (x829 x109))
(assert (x752 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (ite (= x92 x511) x686 (x273 x511)) (x550 x511)))
(assert (= (=> (and (= x439 (x206 x751)) (>= x439 0) (= x615 (x964 (x1082 x324) (x1117 7) 0)) (= x751 (x964 (x1082 x1547) x914 0)) (<= x439 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x964 (x1082 x1430) x615 0) x914) (= x939 (= x439 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x1430)) (and (=> x939 x1390) (=> (and (not x939) (= x324 x139)) x1402))) x330))
(assert (x1381 x438))
(assert (x1381 x1028))
(assert (x1381 x274))
(assert (=> (>= 10000 x1056) (= (x1117 x1056) (x1082 x1056))))
(assert (= (=> (and (= x382 (x1310 x1034)) (= x980 (x180 1461501637330902918203684832716283019655932542975 x68)) (= (x964 (x1082 x324) (x1117 6) 0) x1444) (= (= 0 x382) x1483) (>= x382 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x382) (= (x964 (x1082 x980) x1444 0) x1034)) (and (=> (and (not x1483) (= x1400 x324)) x670) (=> x1483 x878))) x1489))
(assert (= (x564 x1228) (ite (= x700 x1228) x673 (x859 x1228))))
(assert (x1381 x1519))
(assert (= (ite (and x1541 x37) (x698 x1387) (x1434 x1387)) (x433 x1387)))
(assert (= x903 x681))
(assert (= (ite (and x37 x1541) (x698 x716) (x1434 x716)) (x433 x716)))
(assert (= (=> (and (not (< x868 x354)) (= x228 (x180 1461501637330902918203684832716283019655932542975 x68)) (= x525 (> x1301 0)) (= x918 (x964 (x1082 x228) x483 0)) (= (x964 (x1082 x324) (x1117 7) 0) x483) (<= x1301 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x868) (= x1301 (x206 x292)) (= (x964 (x1082 x1547) x918 0) x292) (>= x1301 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x868)) (and (=> (not x525) x1337) (=> (and (= x929 0) (= (x964 (x1082 x324) (x1117 9) 0) x1352) (= x1010 x185) (= x574 (x180 1461501637330902918203684832716283019655932542975 x68)) x525 (= (x1354 x845) x185) (= (x964 (x1082 x574) x1352 0) x956) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x185) (<= 0 x185) (= (x964 (x1082 x1547) x956 0) x845)) x126))) x1121))
(assert (=> (>= 10000 x100) (= (x1117 x100) (x1082 x100))))
(assert (= (x757 (x1082 x1151)) x1151))
(assert (=> (<= x279 10000) (= (x1117 x279) (x1082 x279))))
(assert (= (ite (= x92 x1373) x257 (x894 x92)) (x698 x92)))
(assert (x829 x225))
(assert (x829 x105))
(assert (x1381 x1296))
(assert (x1381 x997))
(assert (x1381 x530))
(assert (= 2764855426 (x757 (x1117 2764855426))))
(assert (=> (>= 10000 x980) (= (x1117 x980) (x1082 x980))))
(assert (x1381 x799))
(assert (= (x757 (x1117 1889567281)) 1889567281))
(assert (x1381 x1017))
(assert (x1381 x567))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x757 (x1117 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= x348 (x757 (x1082 x348))))
(assert (x1381 x1040))
(assert (x752 x855))
(assert (x1193 x855 x1068))
(assert (= (ite (and x304 (not x1009) x578 x1320 x442 x239) (x341 x1504) (ite (and x304 x1320 (not x239) x442 x578) (x564 x1504) (ite (and x578 x442 x1320 (not x304)) (x859 x1504) (ite (and x578 (not x1320) x442) (x378 x1504) (x10 x1504))))) (x74 x1504)))
(assert (x829 x1486))
(assert (= (or (and (not x466) x874) (and x626 (not x383)) (and x631 x1436)) x1217))
(assert (= x400 (=> (and (= (x18 (- x247 1)) x1100) (= x56 (< 0 x1100))) (and (=> x56 x1432) (=> (not x56) x1125)))))
(assert (= (ite (and x389 x1022) (x1029 x1148) (ite (and x1022 (not x389) x1197) (x1029 x1148) (x538 x1148))) (x349 x1148)))
(assert (x1381 x522))
(assert (x1381 x203))
(assert (= x892 (x757 (x1082 x892))))
(assert (x829 x1248))
(assert (= (x27 x81) (ite (= x575 x81) 0 (x660 x81))))
(assert (x1381 x695))
(assert (x1381 x73))
(assert (= (x1188 x1396) (ite (and x1123 x1451) (x1449 x1396) (x298 x1396))))
(assert (= (x698 x511) (ite (= x511 x1373) x257 (x894 x511))))
(assert (=> (>= 10000 x160) (= (x1117 x160) (x1082 x160))))
(assert (x1381 x1021))
(assert (x1381 x1118))
(assert (x1381 x1417))
(assert (= (x757 (x1082 x324)) x324))
(assert (x829 x806))
(assert (= (x757 (x1082 x214)) x214))
(assert (x1381 x1452))
(assert (x1381 x31))
(assert (x1381 x749))
(assert (x1381 x278))
(assert (= (x757 (x1117 826074471)) 826074471))
(assert (= (ite (= x1373 x1023) x257 (x894 x1023)) (x698 x1023)))
(assert (= (x653 x1023) (ite (and x1079 x1451) (x67 x1023) (ite (and x1091 x1451 (not x606) (not x1079)) (x1094 x1023) (ite (and (not x1079) x1451 (not x1091)) (x67 x1023) (x542 x1023))))))
(assert (= (ite (= x1207 x919) x899 (x103 x1207)) (x67 x1207)))
(assert (x1381 x595))
(assert (x1381 x1100))
(assert (= (x757 (x1117 87118632)) 87118632))
(assert (x829 x900))
(assert (x1381 x12))
(assert (x1381 x1254))
(assert (= (and x1311 (not x1041)) x874))
(assert (= (ite (and x1022 x389) (x430 x233) (ite (and (not x389) x1197 x1022) (x515 x233) (x1477 x233))) (x335 x233)))
(assert (=> (<= x1065 10000) (= (x1082 x1065) (x1117 x1065))))
(assert (x1381 x197))
(assert (=> (<= x1389 10000) (= (x1117 x1389) (x1082 x1389))))
(assert (= x1349 (and (not x785) x1130)))
(assert (x829 x680))
(assert (x1381 x531))
(assert (= (ite (and x1451 x1079) (x67 x1095) (ite (and (not x1079) (not x606) x1451 x1091) (x1094 x1095) (ite (and (not x1091) x1451 (not x1079)) (x67 x1095) (x542 x1095)))) (x653 x1095)))
(assert (=> (<= x1114 10000) (= (x1117 x1114) (x1082 x1114))))
(assert (= (x1117 1968616202) (x1082 1968616202)))
(assert (x829 x1056))
(assert (x1381 x1228))
(assert (x829 x404))
(assert (x1381 x1290))
(assert (x1381 x863))
(assert (x1381 x754))
(assert (=> (<= x327 10000) (= (x1082 x327) (x1117 x327))))
(assert (= (ite (= x802 x690) x274 (x222 x690)) (x1048 x690)))
(assert (= (ite (= x819 x1089) x197 (x564 x1089)) (x341 x1089)))
(assert (= x1451 x1443))
(assert (x1381 x819))
(assert (= 0 (x311 x1299)))
(assert (x829 x634))
(assert (x1381 x1351))
(assert (= (x1094 x1523) (ite (= x1157 x1523) x1522 (x67 x1523))))
(assert (x1381 x1439))
(assert (= (ite (and x37 x1541) (x698 x971) (x1434 x971)) (x433 x971)))
(assert (x1381 x1458))
(assert (x1381 x904))
(assert (= (and x942 x385) x626))
(assert (x1381 x140))
(assert (x1381 x1400))
(assert (x1381 x1335))
(assert (x1381 x1004))
(assert (x1381 x1530))
(assert (x1381 x922))
(assert (= x1049 x153))
(assert (= x714 (x757 (x1082 x714))))
(assert (= 274184521717934524641157099916833587206 (x757 (x1082 274184521717934524641157099916833587206))))
(assert (x1381 x131))
(assert (x1381 x649))
(assert (x1381 x864))
(assert (x1381 x373))
(assert (= x37 x210))
(assert (x1381 x1552))
(assert (= x1169 (x757 (x1082 x1169))))
(assert (=> (>= 10000 x422) (= (x1082 x422) (x1117 x422))))
(assert (x829 x90))
(assert (= x574 (x757 (x1082 x574))))
(assert (= x654 (and x1199 x657)))
(assert (= (ite (= x1112 x801) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x1112)) (x378 x1112)))
(assert (= (x501 x690) (ite (and x978 x759) (x1283 x690) (x1225 x690))))
(assert (x1381 x715))
(assert (x1381 x102))
(assert (= (x550 x1504) (ite (= x1504 x92) x686 (x273 x1504))))
(assert (x1381 x4))
(assert (x1381 x1527))
(assert (= (ite (and x1079 x1451) (x67 x1207) (ite (and (not x1079) (not x606) x1091 x1451) (x1094 x1207) (ite (and x1451 (not x1091) (not x1079)) (x67 x1207) (x542 x1207)))) (x653 x1207)))
(assert (x1381 x443))
(assert (= (x757 (x1117 2690754053)) 2690754053))
(assert (x1381 x1430))
(assert (= (ite (= x919 x92) x899 (x103 x92)) (x67 x92)))
(assert (= (x311 x1558) 0))
(assert (= (x74 x690) (ite (and x578 x304 x239 x1320 (not x1009) x442) (x341 x690) (ite (and x442 x578 (not x239) x1320 x304) (x564 x690) (ite (and x578 x442 x1320 (not x304)) (x859 x690) (ite (and (not x1320) x578 x442) (x378 x690) (x10 x690)))))))
(assert (x829 x1547))
(assert (= (ite (= x1387 x1157) x1522 (x67 x1387)) (x1094 x1387)))
(assert (x1381 x1129))
(assert (= (x757 (x1082 x725)) x725))
(assert (= (ite (and (not x1435) x578 x442) (x74 x1373) (x808 x1373)) (x873 x1373)))
(assert (= (x1094 x1095) (ite (= x1095 x1157) x1522 (x67 x1095))))
(assert (= (and x759 (not x978)) x165))
(assert (x1381 x1109))
(assert (= (ite (= x801 x716) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x716)) (x378 x716)))
(assert (x1381 x895))
(assert (x752 x597))
(assert (= x247 (x757 (x1082 x247))))
(assert (x1381 x176))
(assert (= x864 (x757 (x1082 x864))))
(assert (x1381 x319))
(assert (x829 x1055))
(assert (= (ite (and x1451 x1123) (x168 x1127) (x1145 x1127)) (x1370 x1127)))
(assert (x1381 x1470))
(assert (x1381 x322))
(assert (x1381 x105))
(assert (x1381 x1393))
(assert (= (x1117 2293535753) (x1082 2293535753)))
(assert (= x109 (x757 (x1082 x109))))
(assert (x1381 x327))
(assert (x752 x1383))
(assert (= (x1082 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1117 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x1381 x1551))
(assert (x1381 x1403))
(assert (x1381 x211))
(assert (= (x757 (x1082 x235)) x235))
(assert (x1381 x1077))
(assert (= (x433 x1023) (ite (and x1541 x37) (x698 x1023) (x1434 x1023))))
(assert (x1381 x382))
(assert (= x374 (x757 (x1082 x374))))
(assert (x1381 x987))
(assert (= (=> (and (or (not x144) (and (or (and (= (x964 (x1082 x422) (x1117 3) 0) x747) (= x271 (x180 1461501637330902918203684832716283019655932542975 x68)) (= x1166 (< x841 x1488)) (= x47 (x964 (x1082 x271) x747 0)) (not x1166) x679 (= x841 (x966 (+ 2 x324))) (= x1404 (x964 (x1082 x1547) x47 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x1007)) (not x679)) (= x821 (x964 (x1082 x1384) x1206 0)) (= (x966 (+ 1 x324)) x422) (= (< x422 x100) x679) (= (x180 1461501637330902918203684832716283019655932542975 x68) x745) x144 (= x575 (x964 (x1082 x1547) x821 0)) (= (x964 (x1082 x324) (x1117 3) 0) x1206) (= (x180 1461501637330902918203684832716283019655932542975 x68) x1384))) (= (> x100 x324) x144)) x71) x1312))
(assert (x829 x764))
(assert (= x1300 x565))
(assert (=> (>= 10000 x64) (= (x1082 x64) (x1117 x64))))
(assert (= (ite (= x1523 x919) x899 (x103 x1523)) (x67 x1523)))
(assert (x829 x422))
(assert (x1381 x871))
(assert (=> (<= x109 10000) (= (x1117 x109) (x1082 x109))))
(assert (= (x757 (x1082 x1128)) x1128))
(assert (= (x550 x1023) (ite (= x1023 x92) x686 (x273 x1023))))
(assert (x1381 x252))
(assert (= (x169 x690) (ite (= x988 x690) x72 (x1048 x690))))
(assert (= (x757 (x1082 x1065)) x1065))
(assert (= x827 (=> (and (<= 0 x701) (= x701 (x1188 x543)) (<= x868 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1035 (x180 1461501637330902918203684832716283019655932542975 x68)) (= x1198 (x964 (x1082 x247) (x1117 6) 0)) (>= x868 0) (not (> x247 x868)) (= x1307 (= 0 x701)) (<= x701 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x964 (x1082 x1035) x1198 0) x543)) (and (=> (and (not x1307) (<= 0 x749) (= (x1180 x262) x749) (= (x964 (x1082 x726) x198 0) x262) (= 0 x504) (= x91 x749) (<= x749 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x198 (x964 (x1082 x247) (x1117 10) 0)) (= x726 (x180 1461501637330902918203684832716283019655932542975 x68))) x388) (=> x1307 x1297)))))
(assert (= 274184521717934524641157099916833587214 (x757 (x1117 274184521717934524641157099916833587214))))
(assert (= (ite (= x971 x957) x54 (x378 x971)) (x859 x971)))
(assert (x829 x1073))
(assert (= (x1117 2690754053) (x1082 2690754053)))
(assert (= (x757 (x1117 69947311)) 69947311))
(assert (=> (>= 10000 x1055) (= (x1082 x1055) (x1117 x1055))))
(assert (x1381 x582))
(assert (= x320 (x757 (x1082 x320))))
(assert (x1381 x11))
(assert (= x768 (x757 (x1082 x768))))
(assert (x1381 x1161))
(assert (= x1547 (x757 (x1082 x1547))))
(assert (= x338 x353))
(assert (= (x873 x690) (ite (and x578 (not x1435) x442) (x74 x690) (x808 x690))))
(assert (= (x1094 x92) (ite (= x1157 x92) x1522 (x67 x92))))
(assert (x1381 x735))
(assert (= (x1082 87118632) (x1117 87118632)))
(assert (=> (>= 10000 x949) (= (x1082 x949) (x1117 x949))))
(assert (x1381 x63))
(assert (=> (>= 10000 x1073) (= (x1082 x1073) (x1117 x1073))))
(assert (=> (<= x189 10000) (= (x1117 x189) (x1082 x189))))
(assert (= x228 (x757 (x1082 x228))))
(assert (x1381 x700))
(assert (=> (>= 10000 x1119) (= (x1082 x1119) (x1117 x1119))))
(assert (= x1248 (x757 (x1082 x1248))))
(assert (x1381 x576))
(assert (x1381 x1008))
(assert (= (ite (and x1022 x389) (x1029 x244) (ite (and (not x389) x1197 x1022) (x1029 x244) (x538 x244))) (x349 x244)))
(assert (= (=> (= x1078 (> x247 0)) (and (=> x1078 x186) (=> (not x1078) x1125))) x1297))
(assert (x1381 x1200))
(assert (x1381 x296))
(assert (x1381 x868))
(assert (x1381 x714))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x757 (x1117 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x1381 x1336))
(assert (x1381 x1037))
(assert (x1381 x305))
(assert (x829 x521))
(assert (x1381 x647))
(assert (= (x273 x1373) (ite (= x445 x1373) x846 (x1556 x1373))))
(assert (x1381 x622))
(assert (= (=> (and (not (= x1111 2743102681)) (= (x1420 x534) x810) (<= x1533 1461501637330902918203684832716283019655932542975) (not (= x1111 2764855426)) (= x1111 2798343961) (= x534 (x964 (x1082 x1533) x116 0)) (= x810 x1008) (< x1111 2960351575) (= (x219 (x1082 274184521717934524641157099916833587206)) x45) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x810) (not (= x1111 2690754053)) (>= x810 0) (not (< x1111 2293535753)) (= (x964 (x1082 x1169) (x1117 5) 0) x116) (> x45 0) (not (> 2690754053 x1111))) (=> (and (= x1008 x1013) (= x521 x735) (= x814 x225) (= x768 x278)) x129)) x744))
(assert (x1381 x1484))
(assert (= (ite (= x445 x1112) x846 (x1556 x1112)) (x273 x1112)))
(assert (x829 x127))
(assert (x1381 x201))
(assert (= (x1082 274184521717934524641157099916833587218) (x1117 274184521717934524641157099916833587218)))
(assert (x1381 x1353))
(assert (= x645 (x757 (x1082 x645))))
(assert (= (x698 x716) (ite (= x1373 x716) x257 (x894 x716))))
(assert (= x314 (or x406 x940)))
(assert (x1381 x413))
(assert (=> (>= 10000 x643) (= (x1117 x643) (x1082 x643))))
(assert (x1381 x49))
(assert (= x396 (x757 (x1082 x396))))
(assert (x1381 x1111))
(assert (= x1379 x1363))
(assert (x752 x1005))
(assert (=> (<= x434 10000) (= (x1117 x434) (x1082 x434))))
(assert (x1381 x959))
(assert (x1381 x1226))
(assert (=> (>= 10000 x235) (= (x1082 x235) (x1117 x235))))
(assert (x1381 x91))
(assert (x1381 x774))
(assert (=> (<= x332 10000) (= (x1117 x332) (x1082 x332))))
(assert (x829 x980))
(assert (= 1986467848 (x757 (x1117 1986467848))))
(assert (= x1181 (=> (and (not (< x868 x354)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1129) (>= x1129 0) (= x1129 (x1310 x183)) (= x1199 (= 0 x1129)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x1296) (= x183 (x964 (x1082 x1296) x513 0)) (<= 0 x868) (<= x868 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x513 (x964 (x1082 x324) (x1117 6) 0))) (and (=> x1199 x1097) (=> (and (= x1118 x451) (= (x964 (x1082 x108) x1076 0) x468) (= x1118 (x209 x468)) (= x1076 (x964 (x1082 x324) (x1117 10) 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x108) (not x1199) (<= x1118 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1118) (= x540 0)) x362)))))
(assert (x1381 x1163))
(assert (x1381 x877))
(assert (x1381 x213))
(assert (x1381 x261))
(assert (x1381 x1159))
(assert (=> (>= 10000 x324) (= (x1117 x324) (x1082 x324))))
(assert (x1381 x82))
(assert (= (x550 x1228) (ite (= x92 x1228) x686 (x273 x1228))))
(assert (= (ite (= x819 x690) x197 (x564 x690)) (x341 x690)))
(assert (x829 x1308))
(assert (x1381 x1205))
(assert (= (x1370 x534) (ite (and x1123 x1451) (x168 x534) (x1145 x534))))
(assert (x829 x228))
(assert (x1381 x1457))
(assert (x1381 x694))
(assert (x1381 x182))
(assert (= x726 (x757 (x1082 x726))))
(assert (x1381 x662))
(assert (x829 x100))
(assert (= (x653 x1523) (ite (and x1451 x1079) (x67 x1523) (ite (and (not x1079) x1091 x1451 (not x606)) (x1094 x1523) (ite (and x1451 (not x1079) (not x1091)) (x67 x1523) (x542 x1523))))))
(assert (= (ite (= x1228 x801) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x1228)) (x378 x1228)))
(assert (x1381 x54))
(assert (=> (<= x892 10000) (= (x1117 x892) (x1082 x892))))
(assert (x1381 x1538))
(assert (x1381 x848))
(assert (x1381 x1236))
(assert (= (ite (= x92 x971) x686 (x273 x971)) (x550 x971)))
(assert (=> (>= 10000 x127) (= (x1117 x127) (x1082 x127))))
(assert (= (x1117 2960351575) (x1082 2960351575)))
(assert (x1381 x1534))
(assert (x1381 x1395))
(assert (x1381 x589))
(assert (x1381 x945))
(assert (x1381 x574))
(assert (x1381 x329))
(assert (x1381 x3))
(assert (= (=> (and (= x1539 (x964 (x1082 x417) (x1117 9) 0)) (= 142201243 x1072) (= x1276 (x219 (x1082 274184521717934524641157099916833587206))) (= (x964 (x1082 x833) x29 0) x499) (<= x833 1461501637330902918203684832716283019655932542975) (> x1276 0) (= (x1354 x499) x902) (<= 0 x902) (<= x396 1461501637330902918203684832716283019655932542975) (= x29 (x964 (x1082 x396) x1539 0)) (> 911411945 x1072) (<= x902 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x1072 468353030) (not (= 87118632 x1072)) (> 2293535753 x1072) (not (= 69947311 x1072)) (= x902 x1185)) (=> (and (= (<= x425 x1397) x685) (= (and x999 x685) x736) (= x485 x278) (= x814 x1269) (= x735 x1486) (= x425 x1185)) x323)) x173))
(assert (= (x757 (x1082 x254)) x254))
(assert (x1381 x1486))
(assert (= (x698 x1299) (ite (= x1373 x1299) x257 (x894 x1299))))
(assert (x829 274184521717934524641157099916833587206))
(assert (x1381 x246))
(assert (x1381 x487))
(assert (= (x1082 1889567281) (x1117 1889567281)))
(assert (x1381 x367))
(assert (x1381 x650))
(assert (= (ite (= x69 x92) x686 (x273 x69)) (x550 x69)))
(assert (x1381 x1376))
(assert (= (x653 x69) (ite (and x1451 x1079) (x67 x69) (ite (and x1451 x1091 (not x606) (not x1079)) (x1094 x69) (ite (and x1451 (not x1079) (not x1091)) (x67 x69) (x542 x69))))))
(assert (= (=> (= (< 0 x324) x539) (and (=> x539 x1489) (=> (not x539) x1067))) x1097))
(assert (= x565 x84))
(assert (= (ite (and x1541 x37) (x698 x1558) (x1434 x1558)) (x433 x1558)))
(assert (x1381 x1440))
(assert (x1381 x792))
(assert (x1381 x643))
(assert (= (x67 x511) (ite (= x511 x919) x899 (x103 x511))))
(assert (= (x1188 x748) (ite (and x1123 x1451) (x1449 x748) (x298 x748))))
(assert (x1381 x1558))
(assert (= (x273 x1095) (ite (= x1095 x445) x846 (x1556 x1095))))
(assert (x1381 x1244))
(assert (= x528 (x757 (x1082 x528))))
(assert (= (x1094 x1558) (ite (= x1157 x1558) x1522 (x67 x1558))))
(assert (=> (<= x1546 10000) (= (x1082 x1546) (x1117 x1546))))
(assert (x1381 x584))
(assert (= (ite (and x1451 x1079) (x67 x1387) (ite (and x1451 (not x1079) (not x606) x1091) (x1094 x1387) (ite (and (not x1091) x1451 (not x1079)) (x67 x1387) (x542 x1387)))) (x653 x1387)))
(assert (= (x984 x716) (ite (= x80 x716) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x331 x716))))
(assert (x1381 x646))
(assert (x1381 x1152))
(assert (= (ite (= x511 x445) x846 (x1556 x511)) (x273 x511)))
(assert (x1381 x1207))
(assert (= x287 (x757 (x1082 x287))))
(assert (x1381 x276))
(assert (= (x311 x1112) 0))
(assert (=> (<= x485 10000) (= (x1117 x485) (x1082 x485))))
(assert (= x1152 (x757 (x1082 x1152))))
(assert (x829 x485))
(assert (x1381 x381))
(assert (x1381 x1105))
(assert (= (x859 x1373) (ite (= x957 x1373) x54 (x378 x1373))))
(assert (= x903 x1270))
(assert (= (ite (= x1184 x716) x1026 (x984 x716)) (x222 x716)))
(assert (= (ite (= x1112 x819) x197 (x564 x1112)) (x341 x1112)))
(assert (x829 x1250))
(assert (=> (<= x568 10000) (= (x1082 x568) (x1117 x568))))
(assert (= (or (and (not x137) x448) (and x578 (not x442)) x547) x554))
(assert (= (ite (= x1373 x1112) x257 (x894 x1112)) (x698 x1112)))
(assert (x1381 x2))
(assert (x1381 x764))
(assert (x1381 x1019))
(assert (= (ite (= x445 x1387) x846 (x1556 x1387)) (x273 x1387)))
(assert (= (ite (= x801 x1207) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x1207)) (x378 x1207)))
(assert (= (x757 (x1082 x176)) x176))
(assert (x829 x833))
(assert (x829 x113))
(assert (= (x550 x690) (ite (= x690 x92) x686 (x273 x690))))
(assert (x1381 x1055))
(assert (x1381 x1497))
(assert (x1381 x332))
(assert (=> (>= 10000 x225) (= (x1082 x225) (x1117 x225))))
(assert (x1381 x1064))
(assert (= (x67 x716) (ite (= x716 x919) x899 (x103 x716))))
(assert (x1381 x1384))
(assert (= x30 (=> (and (= (x964 (x1082 x568) x408 0) x426) (= (x180 1461501637330902918203684832716283019655932542975 x68) x568) (= (x335 x526) x1410) (<= 0 x1410) (= x526 (x964 (x1082 x1547) x426 0)) (= (x964 (x1082 x189) (x1117 7) 0) x408) (= x631 (= x1410 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410)) (and (=> (and (= x189 x1498) (not x631)) x78) (=> (and x631 (= x559 (x18 (- x189 1))) (= x217 (> x559 0)) (not x217)) x55)))))
(assert (= (x757 (x1082 x1384)) x1384))
(assert (=> (>= 10000 x838) (= (x1117 x838) (x1082 x838))))
(assert (= x553 (=> (and (>= 1461501637330902918203684832716283019655932542975 x712) (>= x143 0) (= x143 x791) (= (x964 (x1082 x922) x1051 0) x599) (not (= x261 2512682246)) (<= x645 1461501637330902918203684832716283019655932542975) (= (x219 (x1082 274184521717934524641157099916833587206)) x1178) (< x261 2690754053) (= (x964 (x1082 x645) x797 0) x1051) (not (= 2418364589 x261)) (not (> 2293535753 x261)) (= (x964 (x1082 x712) x569 0) x797) (not (= x261 2293535753)) (= x569 (x964 (x1082 x1546) (x1117 4) 0)) (<= x143 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x261 2532887486) (> x1178 0) (>= 1461501637330902918203684832716283019655932542975 x922) (= x143 (x1473 x599)) (> 2960351575 x261)) (=> (and (= x1115 x366) (= x100 x1488) (= x1291 x1030) (= x68 x488) (= (mod (* 32 x257) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x429) (= x1456 (x219 (x1082 274184521717934524641157099916833587206))) (= x100 x125) (= (= x257 0) x1541) (= x1373 (x966 (+ 160 x509))) (>= x1544 0) (= x53 (x18 (- x1063 1))) (= x734 (x966 (+ x1332 x1373))) (= x14 x1126) (<= 0 x868) (= x1150 (< 0 x53)) (= x268 87118632) (< x268 2293535753) (not (= x268 69947311)) (not (< x124 x114)) (= x257 (x281 x203)) (>= 1461501637330902918203684832716283019655932542975 x68) (= (x966 (+ x111 35)) x1476) (= x193 (x966 (+ 36 x111))) (= (<= x175 x1175) x423) (not (> 1 x1063)) (= x114 (x966 (+ x193 x622))) (not (or (and (> 128 x649) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x649))) (> x649 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x966 (+ 32 x429)) x1332) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x124) true) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x124) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1476)) (and (< x1476 x124) (= (<= x1476 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x124 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x324 x354) (= x401 x68) (= (x18 (- x124 4)) x649) (= x529 x324) (= x221 x111) (= (x966 (+ x509 32)) x65) (or x1541 (and (not x1541) (= x1131 (x966 (+ x65 160))) (= (mod (* 32 x257) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x418))) (<= 0 x665) (<= x1126 1461501637330902918203684832716283019655932542975) (or (and (= x652 (< 1 x1063)) (not (> x132 1)) (or (not x652) (and (= (x894 128) x960) (or (not x208) (and (< 0 x567) (< 2 x591) (= x347 (< 3 x1063)) (= x1006 (x894 160)) (not x347) (= (x894 128) x591) (= (x894 128) x567) (= x1086 (x180 1461501637330902918203684832716283019655932542975 x1006)) (not (= x611 x1086)) x208 (= x611 (x180 1461501637330902918203684832716283019655932542975 x1005)) (= x1005 (x894 224)))) (= (x180 1461501637330902918203684832716283019655932542975 x623) x809) (not (= x809 x363)) (< 1 x1196) x652 (= x1196 (x894 128)) (= x720 (x894 192)) (= (x894 160) x623) (< 0 x960) (= x363 (x180 1461501637330902918203684832716283019655932542975 x720)) (= x208 (< 2 x1063)))) x1150 (not (> 1 x1063)) (= (x18 (- x1063 1)) x132)) (not x1150)) (< 131 x124) (= x622 (mod (* x257 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (> 4 x124)) (= x203 (x966 (+ x111 4))) (not (< 18446744073709551615 x221)) (<= x868 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x665) (< 0 x1456) (not (< x100 x324)) (= x509 (mod (* x257 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1063 (x894 128)) (<= x1544 1461501637330902918203684832716283019655932542975) (< x268 468353030) (= x14 x577) (> 911411945 x268) (not (< 18446744073709551615 x257)) (= x1547 x1544) (= (and x61 x423) x346) (= x175 x791) (= (x966 (+ 160 x429)) x1538) (= x1291 0) (> x868 x100) (>= x1126 0) x346 (= 128 x93)) x1447))))
(assert (x1381 x521))
(assert (= (x74 x1387) (ite (and x304 (not x1009) x239 x578 x1320 x442) (x341 x1387) (ite (and (not x239) x304 x1320 x442 x578) (x564 x1387) (ite (and x442 x1320 x578 (not x304)) (x859 x1387) (ite (and (not x1320) x442 x578) (x378 x1387) (x10 x1387)))))))
(assert (x829 x287))
(assert (x1381 x726))
(assert (x1381 x1033))
(assert (x1381 x1507))
(assert (x1381 x250))
(assert (x1381 x143))
(assert (x1381 x284))
(assert (=> (<= x454 10000) (= (x1082 x454) (x1117 x454))))
(assert (= (x757 (x1117 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (x829 x160))
(assert (x1381 x1273))
(assert (x1381 x1269))
(assert (x1381 x21))
(assert (=> (<= x1533 10000) (= (x1117 x1533) (x1082 x1533))))
(assert (x829 x434))
(assert (x829 x823))
(assert (=> (>= 10000 x586) (= (x1117 x586) (x1082 x586))))
(assert (x1381 x986))
(assert (x829 x176))
(assert (x1381 x974))
(assert (x1381 x1248))
(assert (= x1514 (=> (and (< x147 2293535753) (>= x1467 0) (= (x964 (x1082 x176) x1271 0) x1085) (= x1271 (x964 (x1082 x1191) (x1117 6) 0)) (not (= x147 2211524764)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1467) (= x573 x1467) (not (< x147 911411945)) (= (x1310 x1085) x1467) (not (= x147 2061678023)) (not (= x147 1968616202)) (not (< x147 1968616202)) (= x1200 (x219 (x1082 274184521717934524641157099916833587206))) (not (= 1986467848 x147)) (> x1200 0) (= 2258409472 x147) (>= 1461501637330902918203684832716283019655932542975 x176)) (=> (and (= x266 x735) (= x814 x112) (= x573 x4) (= x452 0) (= x1366 (not (= x4 0))) x1366) x1061))))
(assert (x1381 x228))
(assert (=> (>= 10000 x1530) (= (x1117 x1530) (x1082 x1530))))
(assert (= x721 (=> (and (= true x1092) (= x775 x131) (= x149 (>= x276 x775))) x1092)))
(assert (= x225 (x757 (x1082 x225))))
(assert (x752 x623))
(assert (=> (<= x1426 10000) (= (x1082 x1426) (x1117 x1426))))
(assert (= x112 (x757 (x1082 x112))))
(assert (= x1087 (and x724 x794)))
(assert (x1381 x1209))
(assert (x1381 x1115))
(assert (x1381 x1107))
(assert (x1381 x655))
(assert (= x1050 (and x539 x654)))
(assert (x1381 x1342))
(assert (= (ite (= x1373 x1095) x257 (x894 x1095)) (x698 x1095)))
(assert (x1381 x807))
(assert (x1381 x275))
(assert (= (x378 x1504) (ite (= x801 x1504) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x1504))))
(assert (= (=> (and x1303 (= x1540 false) (= 4 x1146) (= x788 87118632) (= x735 x307) (= x1203 false) (<= 0 x22) (<= x959 1461501637330902918203684832716283019655932542975) (= x1278 (< 0 (x219 (x1082 274184521717934524641157099916833587206)))) (<= x814 1461501637330902918203684832716283019655932542975) (<= x1458 1461501637330902918203684832716283019655932542975) (<= 0 x398) (= x696 (x896 (x1082 274184521717934524641157099916833587206))) (>= x814 0) (= false x535) (>= x620 0) (>= 1461501637330902918203684832716283019655932542975 x22) (>= 1461501637330902918203684832716283019655932542975 x278) (= x1272 false) x1278 (<= 0 x696) (= x997 x22) (>= x1458 0) (<= 0 x959) (= x372 x814) (= (> (x219 (x1082 274184521717934524641157099916833587214)) 0) x1189) x1189 (= (x896 (x1082 274184521717934524641157099916833587214)) x398) (<= 0 x278) (= (x896 (x1082 274184521717934524641157099916833587218)) x620) (= (> (x219 (x1082 274184521717934524641157099916833587218)) 0) x1303) (= x1547 x1458)) x617) x1371))
(assert (x1381 x431))
(assert (x829 x1528))
(assert (x1381 x789))
(assert (= x415 (=> (and (= (x1429 (x1082 274184521717934524641157099916833587206)) x993) (= x977 (>= x993 0)) (= x411 (= 274184521717934524641157099916833587218 x113)) (= x765 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x522)) (= x410 (x1429 (x1082 274184521717934524641157099916833587206))) x765 (= (x1429 (x1082 x113)) x522) (= x280 (x361 (x1082 x113))) x1356 (= x1274 x305) x977 (= x1356 (< (x361 (x1082 x113)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x411) x1388) (=> (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1484) (<= x594 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 649617121 x1364)) (not x1142) (= (or (> x944 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x944) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x944)))) x162) (not x162) (= (+ x1154 x1401) x523) (= x1353 (x180 1461501637330902918203684832716283019655932542975 x789)) (= x420 (x964 (x1082 274184521717934524641157099916833587206) (x1117 1) 0)) (not x963) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x487 x594)) (= 1 x689) (= x1154 x594) (= x944 (x18 (- x1107 4))) (= x487 x1439) (not (> 649617121 x1364)) (>= 1461501637330902918203684832716283019655932542975 x789) (= (x964 (x1082 x1236) (x1117 1) 0) x106) (<= 0 x594) x411 (= 2835717307 x1364) (= x1544 x789) (= x305 x1107) (not (> 4 x1107)) (= (> x1439 x982) x963) (= x982 (x954 x164)) (= x1142 (> x487 x982)) (not (= x1364 826074471)) (= x1222 x1439) (= 32 x678) (= x1033 274184521717934524641157099916833587206) (= x1401 x487) (= (x18 (- x982 x1439)) x275) (= x1107 68) (= x594 (x43 x106)) (= x1236 (x180 1461501637330902918203684832716283019655932542975 x789)) (= x1239 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x487 x594))) (not x1239) (> x937 0) (<= 0 x982) (= x482 x1360) (<= x982 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1364 1889567281)) (= x937 (x219 (x1082 274184521717934524641157099916833587218))) (not (= 2514000705 x1364)) (= 274184521717934524641157099916833587206 x945) (= (x964 (x1082 274184521717934524641157099916833587206) (x1117 1) 0) x164)) x1306)))))
(assert (x829 x645))
(assert (x1381 x801))
(assert (x829 x179))
(assert (x1381 x65))
(assert (= (ite (and (not x1435) x442 x578) (x74 x1387) (x808 x1387)) (x873 x1387)))
(assert (= x171 (or (and x165 x709) (and x759 x978))))
(assert (=> (<= x41 10000) (= (x1117 x41) (x1082 x41))))
(assert (x1381 x175))
(assert (=> (>= 10000 x545) (= (x1117 x545) (x1082 x545))))
(assert (x1381 x1014))
(assert (x1381 x856))
(assert (x1381 x139))
(assert (= x1510 (and x1433 x444)))
(assert (= (x311 224) 0))
(assert (x1381 x1191))
(assert (x829 x320))
(assert (= x1125 (=> (= x49 0) x1478)))
(assert (= (x433 x511) (ite (and x37 x1541) (x698 x511) (x1434 x511))))
(assert (x1381 x405))
(assert (= (ite (= x1157 x1112) x1522 (x67 x1112)) (x1094 x1112)))
(assert (= (=> (and (not (= x860 2512682246)) (= x36 (x964 (x1082 x838) x1330 0)) (= x1330 (x964 (x1082 x332) (x1117 4) 0)) (= (x1473 x932) x1481) (>= x1481 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1481) (> 2960351575 x860) (= x1419 (x964 (x1082 x64) x36 0)) (= (x219 (x1082 274184521717934524641157099916833587206)) x969) (> 2690754053 x860) (<= x1426 1461501637330902918203684832716283019655932542975) (not (= x860 2293535753)) (< 0 x969) (= x932 (x964 (x1082 x1426) x1419 0)) (<= x838 1461501637330902918203684832716283019655932542975) (not (= 2418364589 x860)) (<= x64 1461501637330902918203684832716283019655932542975) (= x860 2532887486) (not (< x860 2293535753)) (= x1481 x1012)) (=> (and (= (>= x566 x1511) x1233) (= x792 x278) (= x1511 x1012) (= x61 (and x1233 x35)) (= x814 x434) (= x348 x735)) x310)) x1446))
(assert (= (ite (and x442 (not x1435) x578) (x74 x1523) (x808 x1523)) (x873 x1523)))
(assert (= (x1082 18446744073709551615) (x1117 18446744073709551615)))
(assert (= (x660 x81) (ite (and x128 x1443) (x349 x81) (ite (and x785 x1130) (x1029 x81) (x968 x81)))))
(assert (= (x757 (x1082 x1004)) x1004))
(assert (= x353 x965))
(assert (= (ite (= x690 x1373) x257 (x894 x690)) (x698 x690)))
(assert (= x1471 true))
(assert (= (ite (and x1541 x37) (x698 x1523) (x1434 x1523)) (x433 x1523)))
(assert (= (x653 x1504) (ite (and x1079 x1451) (x67 x1504) (ite (and (not x606) x1091 (not x1079) x1451) (x1094 x1504) (ite (and (not x1091) x1451 (not x1079)) (x67 x1504) (x542 x1504))))))
(assert (x829 x725))
(assert (= x750 x1317))
(assert (= (x564 x1523) (ite (= x700 x1523) x673 (x859 x1523))))
(assert (= x1100 (x757 (x1082 x1100))))
(assert (x1381 x1178))
(assert (= x360 (=> (and (or (and (<= 0 x983) (= x692 (x771 x646)) (= x1288 (x964 (x1082 x247) (x1117 7) 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x754) (>= x1417 0) (or (and (not x409) (= 0 x265)) (and x409 (= (< x1069 x366) x636) (or (and (= x227 (x18 (- x730 x694))) (= (x771 x667) x694) (not (> x694 x730)) (= x265 x227) x619) (and (= (x18 (- x730 x983)) x987) (not x619) (= 604800 x923) (= x589 (ite (> 604800 x987) x987 604800)) (not (< x730 x983)) (= x589 x265))) (or (and (= x366 x730) (not x636)) (and x636 (= (x771 x646) x992) (= x730 x992))) (= (x771 x646) x1069) (= (= 0 x983) x619))) (= (= 0 x265) x1362) (>= x1205 0) (= (x964 (x1082 x754) x1288 0) x608) (= x581 (x964 (x1082 x1547) x608 0)) (= x1205 (x884 x264)) (<= x1205 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= x655 x875) (= (x964 (x1082 x160) x755 0) x1495) (= (x964 (x1082 x247) (x1117 7) 0) x755) x1362 (= (x964 (x1082 x1547) x1495 0) x24) (= x160 (x180 1461501637330902918203684832716283019655932542975 x68))) (and (= (x964 (x1082 x1547) x733 0) x1485) (= (x180 1461501637330902918203684832716283019655932542975 x68) x1114) (= x706 (x964 (x1082 x247) (x1117 3) 0)) (= (x964 (x1082 x1308) x706 0) x733) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x265 x369)) (not x1362) (= (* x265 x369) x95) (= x875 x655) (= x974 x95) (= x190 (x964 (x1082 x247) (x1117 7) 0)) (= x1308 (x180 1461501637330902918203684832716283019655932542975 x68)) (= (x964 (x1082 x1114) x190 0) x194) (= x107 (x964 (x1082 x1547) x194 0)))) (= (x1259 x1039 1) x264) (= x983 (x335 x581)) (= (x888 x1039) x1417) (= (x964 (x1082 x247) (x1117 1) 0) x1039) (= x646 (x966 (+ x7 96))) (<= x983 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x409 (> x692 x983)) (= (x966 (+ x7 128)) x655) (<= x1417 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x38)) (and (= x740 (x964 (x1082 x247) (x1117 7) 0)) (= x875 x667) (= (x180 1461501637330902918203684832716283019655932542975 x68) x254) (= x89 (x964 (x1082 x1547) x1309 0)) (= (x964 (x1082 x254) x740 0) x1309) x38)) (= (= x369 0) x38) (= (= x1027 0) x1399) (or (and (= x481 (x180 1461501637330902918203684832716283019655932542975 x68)) (not x1399)) x1399)) x827)))
(assert (= (or (and (not x631) x1436) (and (not x942) x385)) x536))
(assert (= (x757 (x1082 x1308)) x1308))
(assert (x1381 x100))
(assert (= (x757 (x1082 x1250)) x1250))
(assert (= x1363 x965))
(assert (= (ite (and x1451 x1079) (x67 x1112) (ite (and x1451 x1091 (not x1079) (not x606)) (x1094 x1112) (ite (and (not x1079) x1451 (not x1091)) (x67 x1112) (x542 x1112)))) (x653 x1112)))
(assert (x829 x1430))
(assert (x1381 x1528))
(assert (= x805 (or x592 x1081)))
(assert (=> (>= 10000 x1151) (= (x1117 x1151) (x1082 x1151))))
(assert (= x1277 x1074))
(assert (= (x757 (x1082 x64)) x64))
(assert (x1381 x791))
(assert (=> (>= 10000 x1336) (= (x1082 x1336) (x1117 x1336))))
(assert (x1381 x34))
(assert (= (ite (= x1373 x919) x899 (x103 x1373)) (x67 x1373)))
(assert (x1381 x75))
(assert (= x1306 (=> (and (or (and (= 96 x690) x826) (and (= x690 x284) (not x826) (= (x966 (+ 96 x441)) x1229))) (= x826 (= 0 x678)) (= x1135 (< 0 x580)) (= x336 (x1407 (x1082 x113))) (not x1179) (or (not x1135) (and (= (not x1292) x858) (< 0 x368) (= (x1421 x690) x213) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x213) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x213)) (< x213 32)))) (= (= x368 0) x1292) (= x716 (x966 (+ 32 x690))) (= x368 (x1421 x716)) (= x1256 x368) (= x1256 (ite x858 1 0)) x1135)) x973 (not (= 0 x689)) (= (x1421 x690) x580) (= x1179 (< 2 x257)) (= x973 (< (x224 (x1082 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1479)))
(assert (x1381 x363))
(assert (= x878 (=> (and (= x1526 (> x1128 0)) (= (x18 (- x324 1)) x1128)) (and (=> (not x1526) x1067) (=> x1526 x998)))))
(assert (= x754 (x757 (x1082 x754))))
(assert (= (or (and (not x1307) x344) x314) x134))
(assert (x1381 x368))
(assert (x1381 x988))
(assert (x1381 x616))
(assert (= (x757 (x1082 x634)) x634))
(assert (x1381 x146))
(assert (= (x757 (x1082 x327)) x327))
(assert (= (=> (= (< x100 x324) x785) (and (=> (not x785) x1121) (=> (and x785 (= x1209 x734)) x1312))) x1447))
(assert (x1381 x1013))
(assert (=> (<= x417 10000) (= (x1082 x417) (x1117 x417))))
(assert (x1381 x692))
(assert (x1381 x917))
(assert (x829 x112))
(assert (= (x757 (x1082 x157)) x157))
(assert (= (ite (= x1523 x819) x197 (x564 x1523)) (x341 x1523)))
(assert (=> (>= 10000 x920) (= (x1117 x920) (x1082 x920))))
(assert (= (x67 x1023) (ite (= x1023 x919) x899 (x103 x1023))))
(assert (x829 x64))
(assert (= (x1117 649617121) (x1082 649617121)))
(assert (= x84 x1122))
(assert (= (x1082 759532456) (x1117 759532456)))
(assert (= x998 (=> (and (= (= x1231 0) x596) (= x339 (x964 (x1082 x454) x641 0)) (>= x1231 0) (= x1231 (x1310 x339)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1231) (= x641 (x964 (x1082 x1128) (x1117 6) 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x454)) (and (=> (and (= x881 (x18 (- x1128 1))) (not x675) x596 (= x675 (< 0 x881))) x1067) (=> (and (= x1128 x1400) (not x596)) x670)))))
(assert (x1381 x523))
(assert (= (x550 x1112) (ite (= x92 x1112) x686 (x273 x1112))))
(assert (x1381 x321))
(assert (x829 x1520))
(assert (= (ite (= x716 x802) x274 (x222 x716)) (x1048 x716)))
(assert (x1381 x174))
(assert (= 1968616202 (x757 (x1117 1968616202))))
(assert (= (ite (and x304 x442 (not x1009) x1320 x239 x578) (x341 x1228) (ite (and x1320 (not x239) x304 x442 x578) (x564 x1228) (ite (and x442 x1320 x578 (not x304)) (x859 x1228) (ite (and x578 (not x1320) x442) (x378 x1228) (x10 x1228))))) (x74 x1228)))
(assert (= (x74 x1112) (ite (and x1320 x239 (not x1009) x578 x304 x442) (x341 x1112) (ite (and x578 x1320 (not x239) x304 x442) (x564 x1112) (ite (and x442 x578 (not x304) x1320) (x859 x1112) (ite (and x442 x578 (not x1320)) (x378 x1112) (x10 x1112)))))))
(assert (= (ite (= x1228 x445) x846 (x1556 x1228)) (x273 x1228)))
(assert (=> (>= 10000 x316) (= (x1117 x316) (x1082 x316))))
(assert (= (ite (and x759 x978) (x1283 x1387) (x1225 x1387)) (x501 x1387)))
(assert (x1381 x497))
(assert (x829 x396))
(assert (x1381 x1119))
(assert (x829 x372))
(assert (x1381 x498))
(assert (=> (<= x1252 10000) (= (x1117 x1252) (x1082 x1252))))
(assert (x1381 x371))
(assert (x1381 x370))
(assert (= (x873 x1089) (ite (and x442 (not x1435) x578) (x74 x1089) (x808 x1089))))
(assert (= x792 (x757 (x1082 x792))))
(assert (= (ite (= x1089 x919) x899 (x103 x1089)) (x67 x1089)))
(assert (x1381 x481))
(assert (= (x1048 x1089) (ite (= x1089 x802) x274 (x222 x1089))))
(assert (= (x757 (x1082 x1393)) x1393))
(assert (= (ite (and x37 x1541) (x698 x1228) (x1434 x1228)) (x433 x1228)))
(assert (= (x757 (x1117 2061678023)) 2061678023))
(assert (x829 x1530))
(assert (x1381 x768))
(assert (=> (<= x1384 10000) (= (x1117 x1384) (x1082 x1384))))
(assert (= (x1094 x1089) (ite (= x1157 x1089) x1522 (x67 x1089))))
(assert (x1381 x293))
(assert (x1381 x72))
(assert (= (x1117 911411945) (x1082 911411945)))
(assert (x1381 x1373))
(assert (x1381 x1114))
(assert (x1381 x1460))
(assert (=> (<= x135 10000) (= (x1117 x135) (x1082 x135))))
(assert (not x1371))
(assert (=> (<= x1169 10000) (= (x1082 x1169) (x1117 x1169))))
(assert (= 2798343961 (x757 (x1117 2798343961))))
(assert (= x1433 (and x1078 x830)))
(assert (x1381 x348))
(assert (x1381 x1030))
(assert (= (ite (= x1387 x1373) x257 (x894 x1387)) (x698 x1387)))
(assert (x1381 x148))
(assert (x829 x1236))
(assert (= 1000000000000000000 (x757 (x1117 1000000000000000000))))
(assert (= (ite (and (not x1422) x258 x1284 x448 x699 x137) (x169 x716) (ite (and x448 x1284 x699 x137 (not x258)) (x1048 x716) (ite (and (not x1284) x699 x137 x448) (x222 x716) (ite (and (not x699) x137 x448) (x984 x716) (x1242 x716))))) (x1025 x716)))
(assert (x829 x201))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x757 (x1117 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= x438 (x757 (x1082 x438))))
(assert (x1381 x257))
(assert (x1381 x1157))
(assert (x1381 x869))
(assert (= x323 (=> (and (= x512 x713) (= x334 (x219 (x1082 274184521717934524641157099916833587206))) (> x334 0) (<= x1269 1461501637330902918203684832716283019655932542975) (< x1017 2293535753) (>= 1461501637330902918203684832716283019655932542975 x485) (< x1017 911411945) (<= 0 x713) (= x708 (x964 (x1082 x485) x516 0)) (= x516 (x964 (x1082 x1269) x506 0)) (= (x964 (x1082 x1486) (x1117 9) 0) x506) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x713) (not (= 87118632 x1017)) (= (x1354 x708) x713) (= 142201243 x1017) (> 468353030 x1017) (not (= 69947311 x1017))) (=> (and (= x1255 x814) (= x1328 0) (= x35 (and x850 x736)) (= x850 (< 0 x727)) (= x735 x864) (= x727 x512)) x1116))))
(assert (= (x757 (x1082 x943)) x943))
(assert (x829 x714))
(assert (= x1122 x1270))
(assert (x1381 x1524))
(assert (=> (<= x112 10000) (= (x1082 x112) (x1117 x112))))
(assert (x1381 x993))
(assert (x1381 x734))
(assert (x1381 x1250))
(assert (x1381 x929))
(assert (x1381 x1410))
(assert (= x1549 (x757 (x1082 x1549))))
(assert (=> (<= x754 10000) (= (x1117 x754) (x1082 x754))))
(assert (= (x564 x1089) (ite (= x1089 x700) x673 (x859 x1089))))
(assert (= (ite (and x411 x1241) (x1535 x690) (x1512 x690)) (x1210 x690)))
(assert (= x1022 (or x1098 (and x525 x1349))))
(assert (x1381 x151))
(assert (= (ite (= x1299 x445) x846 (x1556 x1299)) (x273 x1299)))
(assert (x1381 x5))
(assert (x1381 x969))
(assert (x1381 x881))
(assert (x1381 x1))
(assert (=> (>= 10000 x1236) (= (x1117 x1236) (x1082 x1236))))
(assert (= (ite (and x1451 x1079) (x67 x1373) (ite (and x1091 (not x606) (not x1079) x1451) (x1094 x1373) (ite (and x1451 (not x1079) (not x1091)) (x67 x1373) (x542 x1373)))) (x653 x1373)))
(assert (=> (<= x1035 10000) (= (x1082 x1035) (x1117 x1035))))
(assert (x1381 x482))
(assert (x829 x1533))
(assert (x1381 x226))
(assert (= x521 (x757 (x1082 x521))))
(assert (= (x757 (x1082 x1389)) x1389))
(assert (x1381 x716))
(assert (= (ite (and x304 x1320 x239 x442 x578 (not x1009)) (x341 x1523) (ite (and (not x239) x304 x1320 x442 x578) (x564 x1523) (ite (and x1320 x578 x442 (not x304)) (x859 x1523) (ite (and x442 x578 (not x1320)) (x378 x1523) (x10 x1523))))) (x74 x1523)))
(assert (x1381 x316))
(assert (x1381 x1523))
(assert (x1381 x1006))
(assert (x1381 x982))
(assert (x1381 x1231))
(assert (=> (>= 10000 x1191) (= (x1117 x1191) (x1082 x1191))))
(assert (= (x698 x1558) (ite (= x1558 x1373) x257 (x894 x1558))))
(assert (x1381 x357))
(assert (x1381 x1521))
(assert (x1381 x1509))
(assert (x1381 x1011))
(assert (x1381 x1308))
(assert (x1381 x659))
(assert (= (x222 x690) (ite (= x1184 x690) x1026 (x984 x690))))
(assert (= (x1117 274184521717934524641157099916833587206) (x1082 274184521717934524641157099916833587206)))
(assert (x1381 x941))
(assert (x829 x892))
(assert (= (ite (and x1541 x37) (x698 x1157) (x1434 x1157)) (x433 x1157)))
(assert (x1381 x810))
(assert (x1381 x891))
(assert (= (ite (and x448 x137 (not x230)) (x1025 x690) (x243 x690)) (x837 x690)))
(assert (x1381 x875))
(assert (= (=> (and (= (x896 (x1082 274184521717934524641157099916833587206)) x781) x684 x907 (= x907 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1105)) (= (x896 (x1082 274184521717934524641157099916833587206)) x1491) (= x1359 (x379 (x1082 x1250))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x379 (x1082 x1250))) x1368) (= x978 (= 274184521717934524641157099916833587218 x1250)) (= x684 (>= x781 0)) (= x1105 (x896 (x1082 x1250))) x1368 (= x799 x1440)) (and (=> (not x978) x1137) (=> (and (= x800 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1305 x211))) (= x397 x1305) (= x943 (x180 1461501637330902918203684832716283019655932542975 x250)) (not x253) (= x1448 (x964 (x1082 274184521717934524641157099916833587206) (x1117 1) 0)) (not x484) (not (= x121 2514000705)) (not (= x121 1889567281)) (= x784 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1445 (x18 (- x381 x1214))) (= x1031 274184521717934524641157099916833587206) (= x480 68) (= (x219 (x1082 274184521717934524641157099916833587218)) x387) (not (> 4 x480)) (not (= x121 649617121)) (= x1507 274184521717934524641157099916833587206) (= x322 1) (not (< x121 649617121)) (<= x1305 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x180 1461501637330902918203684832716283019655932542975 x250) x438) (= x1077 x1214) (= (x548 x1525) x381) (= x799 x480) (<= 0 x1305) (< 0 x387) (<= x381 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x964 (x1082 x438) (x1117 1) 0) x172) x978 (= x1519 x82) (not x800) (= (+ x397 x793) x695) (not (= x121 826074471)) (= (x964 (x1082 274184521717934524641157099916833587206) (x1117 1) 0) x1525) (= (< x381 x1214) x253) (>= 1461501637330902918203684832716283019655932542975 x250) (= 2835717307 x121) (= (x18 (- x480 4)) x1001) (= (x518 x313) x1305) (= x211 x793) (>= x381 0) (= x484 (or (> x1001 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1001 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1001) true)))) (= x915 (< x381 x211)) (= x1214 x211) (= 32 x890) (= (x964 (x1082 x943) (x1117 1) 0) x313) (not x915) (= x250 x1544) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x211 x1305))) x737))) x933))
(assert (= (=> (= (< 0 x324) x794) (and (=> (not x794) x546) (=> x794 x330))) x1337))
(assert (= (ite (= x716 x988) x72 (x1048 x716)) (x169 x716)))
(assert (= x1064 (x757 (x1082 x1064))))
(assert (= (x433 x1112) (ite (and x37 x1541) (x698 x1112) (x1434 x1112))))
(assert (x829 x1393))
(assert (x829 x1552))
(assert (x1381 x187))
(assert (= (ite (= x1373 x69) x257 (x894 x69)) (x698 x69)))
(assert (x1381 x80))
(assert (= x787 (=> (= x49 x852) x1478)))
(assert (= x846 (x273 x445)))
(assert (=> (<= x761 10000) (= (x1117 x761) (x1082 x761))))
(assert (x829 x332))
(assert (x1381 x1120))
(assert (x1381 x923))
(assert (= x782 x1074))
(assert (x1381 x112))
(assert (= (ite (= x1373 x455) x257 (x894 x455)) (x698 x455)))
(assert (x1381 x540))
(assert (x1381 x366))
(assert (= (x67 x971) (ite (= x919 x971) x899 (x103 x971))))
(assert (x1381 x806))
(assert (= (ite (= x511 x1157) x1522 (x67 x511)) (x1094 x511)))
(assert (= (x74 x1089) (ite (and (not x1009) x1320 x239 x304 x442 x578) (x341 x1089) (ite (and x442 x1320 x578 x304 (not x239)) (x564 x1089) (ite (and x578 x442 x1320 (not x304)) (x859 x1089) (ite (and x578 x442 (not x1320)) (x378 x1089) (x10 x1089)))))))
(assert (x829 x1128))
(assert (= (x757 (x1082 x150)) x150))
(assert (x829 x1109))
(assert (=> (<= x271 10000) (= (x1117 x271) (x1082 x271))))
(assert (= x664 (and x1124 x1408)))
(assert (x1381 x59))
(assert (= 0 (x311 x1023)))
(assert (x829 274184521717934524641157099916833587214))
(assert (x1381 x188))
(assert (x1381 x1183))
(assert (= (x311 160) 0))
(assert (x1381 x1488))
(assert (x1381 x943))
(assert (x829 x864))
(assert (= (ite (= x1207 x445) x846 (x1556 x1207)) (x273 x1207)))
(assert (x1381 x324))
(assert (=> (<= x372 10000) (= (x1082 x372) (x1117 x372))))
(assert (x1381 x1522))
(assert (x1381 x111))
(assert (= (ite (and x1022 x389) (x1029 x81) (ite (and x1022 (not x389) x1197) (x1029 x81) (x538 x81))) (x349 x81)))
(assert (x1381 x403))
(assert (= x1408 (and x1087 x939)))
(assert (x1381 x1065))
(assert (= (ite (= x1373 x92) x686 (x273 x1373)) (x550 x1373)))
(assert (= (x757 (x1082 x1255)) x1255))
(assert (= (x757 (x1082 x568)) x568))
(assert (x1381 x937))
(assert (=> (>= 10000 x307) (= (x1117 x307) (x1082 x307))))
(assert (x1381 x307))
(assert (x1381 x184))
(assert (= (x757 (x1082 x572)) x572))
(assert (x1381 x235))
(assert (x1381 x620))
(assert (x1381 x315))
(assert (= (x757 (x1117 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x1381 x611))
(assert (= (ite (= x445 x1504) x846 (x1556 x1504)) (x273 x1504)))
(assert (= (x501 x1504) (ite (and x759 x978) (x1283 x1504) (x1225 x1504))))
(assert (x1381 x334))
(assert (= (x757 (x1082 x1119)) x1119))
(assert (= 0 (x311 x511)))
(assert (= (ite (= x1023 x1157) x1522 (x67 x1023)) (x1094 x1023)))
(assert (x1381 x815))
(assert (=> (<= x823 10000) (= (x1082 x823) (x1117 x823))))
(assert (= (ite (= x819 x511) x197 (x564 x511)) (x341 x511)))
(assert (= (x1082 1000000000000000000) (x1117 1000000000000000000)))
(assert (= (=> (and (not (= x498 635128645)) (<= x472 1461501637330902918203684832716283019655932542975) (= (x964 (x1082 x472) x424 0) x1103) (= x659 x871) (= x1232 (x964 (x1082 x931) x1103 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x871) (not (> 468353030 x498)) (= (x219 (x1082 274184521717934524641157099916833587206)) x256) (> 2293535753 x498) (< 0 x256) (<= x931 1461501637330902918203684832716283019655932542975) (<= 0 x871) (< x498 911411945) (= (x964 (x1082 x643) (x1117 7) 0) x424) (= (x206 x1232) x871) (= x498 759532456) (not (= 468353030 x498))) (=> (and (= x1191 x735) x938 (= x814 x176) (= (<= x1043 x2) x938) (= x659 x2)) x1514)) x705))
(assert (x1381 x727))
(assert (= (ite (and (not x1435) x578 x442) (x74 x1504) (x808 x1504)) (x873 x1504)))
(assert (=> (>= 10000 x188) (= (x1117 x188) (x1082 x188))))
(assert (= (ite (and x1079 x1451) (x67 x971) (ite (and (not x606) (not x1079) x1091 x1451) (x1094 x971) (ite (and (not x1079) (not x1091) x1451) (x67 x971) (x542 x971)))) (x653 x971)))
(assert (= (ite (= x700 x69) x673 (x859 x69)) (x564 x69)))
(assert (x829 x327))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x757 (x1117 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (x1381 x902))
(assert (= (=> (and (= (x1370 x1386) x11) (<= 0 x879) (or (and (= (x180 1461501637330902918203684832716283019655932542975 x68) x634) (= (x964 (x1082 x324) (x1117 10) 0) x951) (= x928 (x964 (x1082 x634) x951 0)) (not x1500)) x1500) (= (< x901 x663) x40) (= x1367 (x1259 x395 1)) (or (and (= x584 1) (not x1079) (> x11 0) (= x1273 (x180 x584 x226)) (= 0 x1273) (= x880 (x966 (+ x324 1))) (= x1091 (< 0 x257)) (= (mod (* 1000000000000000000 x879) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x182) (= x461 (div x182 x11)) (or (and (= x1549 (x281 x352)) (= x249 (x67 x1373)) (= (* x461 x1244) x1140) (= (x964 (x1082 x324) (x1117 11) 0) x1513) (= (x1473 x552) x140) (= x98 x1340) (= x1134 (x964 (x1082 x1547) x1347 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1244 x461)) (>= 1461501637330902918203684832716283019655932542975 x1549) (= (x180 1461501637330902918203684832716283019655932542975 x68) x1073) (= (x966 (+ x65 160)) x1157) (< 0 x249) (= x883 (div x1140 1000000000000000000)) (< 0 x257) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x98 x883)) (= x98 (x67 x1157)) (>= x140 0) (= (x964 (x1082 x1004) x514 0) x831) (= x514 (x964 (x1082 x1073) x1513 0)) (= (< 1 x257) x606) (< 0 x257) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1244) (= x1522 (+ x1340 x533)) (= x533 x883) (or (and (= (x964 (x1082 x1547) x242 0) x97) (= x201 (x180 1461501637330902918203684832716283019655932542975 x68)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x904) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x20) (= x756 (x964 (x1082 x157) x1155 0)) (= (x1094 x1558) x743) (>= 1461501637330902918203684832716283019655932542975 x1462) (= x1462 (x281 x1532)) (not x668) (>= x904 0) (= (+ x229 x614) x403) (= x743 x614) (= x1532 (x966 (+ x203 64))) (= (x953 x384) x904) (= 0 x20) (= x229 x1542) (= (x964 (x1082 x324) (x1117 11) 0) x1155) (< (+ x1542 x743) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (< 2 x257) x668) (> x367 1) (= (x964 (x1082 x201) x326 0) x242) (= (x964 (x1082 x324) (x1117 4) 0) x326) (= x327 (x281 x1532)) (= x1542 (div x571 1000000000000000000)) x606 (= (* x904 x461) x571) (= (x1473 x849) x20) (= (x966 (+ x65 192)) x1558) (= x849 (x964 (x1082 x327) x97 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x157) (< 1 x257) (> x257 1) (= (x1094 x1373) x367) (<= x327 1461501637330902918203684832716283019655932542975) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x904 x461)) (>= x20 0) (= (x964 (x1082 x1462) x756 0) x384)) (not x606)) (= (x964 (x1082 x1549) x1134 0) x552) (= x1518 (x964 (x1082 x324) (x1117 4) 0)) (<= x1004 1461501637330902918203684832716283019655932542975) (= x140 0) x1091 (<= 0 x1244) (= (x281 x352) x1004) (= x193 x352) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x140) (= x1244 (x953 x831)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x725) (= x1347 (x964 (x1082 x725) x1518 0))) (not x1091)) (= x226 (ite (> x879 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= x247 x880)) (and (= (x966 (+ x324 1)) x995) (= x995 x247) x1079)) (= x879 (x349 x610)) (= x899 (x884 x1367)) (= (x966 (+ x7 32)) x919) (= x1123 (= 0 x1470)) (>= x901 0) (= (x964 (x1082 x324) (x1117 5) 0) x17) (= (x964 (x1082 x1547) x842 0) x610) (<= x879 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= (x964 (x1082 x324) (x1117 6) 0) x306) (= x1474 (x964 (x1082 x1365) x306 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x1365) x1123) (and (= x1499 (x964 (x1082 x324) (x1117 5) 0)) (< (* x451 x1470) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x460 (x964 (x1082 x1248) x1499 0)) (= x618 (* x451 x1470)) (= x618 x373) (= (x180 1461501637330902918203684832716283019655932542975 x68) x1248) (= (x964 (x1082 x277) x588 0) x719) (not x1123) (= x277 (x180 1461501637330902918203684832716283019655932542975 x68)) (= (x964 (x1082 x324) (x1117 6) 0) x588))) (= x602 (x964 (x1082 x714) x42 0)) (>= x11 0) (= (x1310 x602) x901) (= x42 (x964 (x1082 x324) (x1117 6) 0)) (<= x11 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x964 (x1082 x1252) x1053 0) x842) (= x1500 (= x540 0)) (>= x899 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1014) (= x1079 (= x879 0)) (or (and (= 0 x1470) (not x40)) (and (or (and (= x824 x1470) (not (< x1418 x475)) (= (x67 x7) x475) (= x824 (x18 (- x1418 x475))) x1414) (and (not x1414) (= x986 x1470) (= (x18 (- x1418 x901)) x524) (= x986 (ite (< x524 604800) x524 604800)) (= 604800 x1275) (not (< x1418 x901)))) (or (and (= x366 x1418) (not x1412)) (and (= x205 (x67 x919)) (= x205 x1418) x1412)) x40 (= x613 (x67 x919)) (= (= 0 x901) x1414) (= x1412 (< x613 x366)))) (= (x964 (x1082 x324) (x1117 3) 0) x1053) (= x395 (x964 (x1082 x324) (x1117 1) 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x1252) (= x714 (x180 1461501637330902918203684832716283019655932542975 x68)) (= x1014 (x888 x395)) (<= x899 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x901 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1386 (x964 (x1082 x90) x17 0)) (= x663 (x67 x919)) (>= x1014 0) (= (x966 (+ 64 x7)) x667) (= (x180 1461501637330902918203684832716283019655932542975 x68) x90)) x1304) x362))
(assert (x1381 x1186))
(assert (= (x859 x69) (ite (= x69 x957) x54 (x378 x69))))
(assert (= (ite (= x1228 x919) x899 (x103 x1228)) (x67 x1228)))
(assert (= x547 (or (and x1223 x1382) (and x411 x1241))))
(assert (x83 x597 x851 x958 x216))
(assert (= (ite (= x445 x1523) x846 (x1556 x1523)) (x273 x1523)))
(assert (= x90 (x757 (x1082 x90))))
(assert (x1381 x53))
(assert (= (x757 (x1082 x485)) x485))
(assert (= (ite (= x92 x474) x686 (x273 x474)) (x550 x474)))
(assert (= (x859 x1228) (ite (= x957 x1228) x54 (x378 x1228))))
(assert (x1381 x1501))
(assert (x1381 x1445))
(assert (= (x1117 2764855426) (x1082 2764855426)))
(assert (x1381 x1214))
(assert (x1381 x1106))
(assert (x1381 x69))
(assert (= x1300 x210))
(assert (x829 x1065))
(assert (x1381 x528))
(assert (= x1139 x344))
(assert (= (=> (= 0 x882) x52) x546))
(assert (x1381 x472))
(assert (x829 x1114))
(assert (= x681 x1049))
(assert (=> (>= 10000 x1255) (= (x1082 x1255) (x1117 x1255))))
(assert (= 2743102681 (x757 (x1117 2743102681))))
(assert (=> (<= x574 10000) (= (x1117 x574) (x1082 x574))))
(assert (= x1552 (x757 (x1082 x1552))))
(assert (= (ite (= x445 x971) x846 (x1556 x971)) (x273 x971)))
(assert (= 2512682246 (x757 (x1117 2512682246))))
(assert (x1381 x1196))
(assert (x1381 x899))
(assert (x1381 x730))
(assert (=> (>= 10000 x725) (= (x1117 x725) (x1082 x725))))
(assert (x1381 x179))
(assert (= (x433 x69) (ite (and x37 x1541) (x698 x69) (x1434 x69))))
(assert (x1381 x1341))
(assert (=> (>= 10000 x157) (= (x1082 x157) (x1117 x157))))
(assert (x1381 x1426))
(assert (= x404 (x757 (x1082 x404))))
(assert (x829 x528))
(assert (x1381 x227))
(assert (= (ite (= x1373 x1157) x1522 (x67 x1373)) (x1094 x1373)))
(assert (= (x757 (x1082 x582)) x582))
(assert (=> (<= x90 10000) (= (x1117 x90) (x1082 x90))))
(assert (x829 x761))
(assert (= 142201243 (x757 (x1117 142201243))))
(assert (=> (>= 10000 x1555) (= (x1082 x1555) (x1117 x1555))))
(assert (=> (<= x1549 10000) (= (x1082 x1549) (x1117 x1549))))
(assert (= (ite (= x455 x1157) x1522 (x67 x455)) (x1094 x455)))
(assert (= x78 (=> (= x528 x1498) x1187)))
(assert (x1381 x577))
(assert (= (x27 x244) (ite (= x575 x244) 0 (x660 x244))))
(assert (= (x564 x1112) (ite (= x1112 x700) x673 (x859 x1112))))
(assert (= (=> (and (= (x964 (x1082 x1336) x62 0) x1461) (= (x964 (x1082 x41) x1263 0) x62) (not (= x1403 2293535753)) (= (x964 (x1082 x572) x270 0) x1263) (<= x41 1461501637330902918203684832716283019655932542975) (= x270 (x964 (x1082 x1528) (x1117 4) 0)) (> x329 0) (= 2532887486 x1403) (= x130 (x1473 x1461)) (not (= 2512682246 x1403)) (> 2960351575 x1403) (<= 0 x130) (not (< x1403 2293535753)) (<= x572 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1336) (= x131 x130) (not (= 2418364589 x1403)) (> 2690754053 x1403) (<= x130 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x219 (x1082 274184521717934524641157099916833587206)) x329)) x721) x693))
(assert (x1381 x1174))
(assert (x1381 x814))
(assert (x829 x266))
(assert (x1381 x256))
(assert (=> (<= x528 10000) (= (x1082 x528) (x1117 x528))))
(assert (=> (<= x348 10000) (= (x1117 x348) (x1082 x348))))
(assert (x1381 x124))
(assert (x829 x1555))
(assert (x1381 x1467))
(assert (= (x757 (x1082 x1109)) x1109))
(assert (= 759532456 (x757 (x1117 759532456))))
(assert (x1381 x900))
(assert (x752 x250))
(assert (x1381 x451))
(assert (x1381 x1334))
(assert (= (x1082 2798343961) (x1117 2798343961)))
(assert (x1381 x817))
(assert (= (x311 x1523) 0))
(assert (=> (>= 10000 x645) (= (x1082 x645) (x1117 x645))))
(assert (= (x1210 x716) (ite (and x411 x1241) (x1535 x716) (x1512 x716))))
(assert (x1381 x1128))
(assert (x752 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x757 (x1082 x122)) x122))
(assert (x1381 x1252))
(assert (=> (<= x404 10000) (= (x1082 x404) (x1117 x404))))
(assert (x1381 x1305))
(assert (=> (<= x836 10000) (= (x1082 x836) (x1117 x836))))
(assert (x1381 x265))
(assert (x1381 x114))
(assert (x1381 x1136))
(assert (x752 x1186))
(assert (= (x757 (x1082 x922)) x922))
(assert (= (ite (= x690 x919) x899 (x103 x690)) (x67 x690)))
(assert (= (x698 x474) (ite (= x1373 x474) x257 (x894 x474))))
(assert (=> (>= 10000 x1547) (= (x1082 x1547) (x1117 x1547))))
(assert (= x1451 (or x805 (and (not x1199) x657))))
(assert (x1381 x215))
(assert (= (x501 x716) (ite (and x978 x759) (x1283 x716) (x1225 x716))))
(assert (=> (>= 10000 x374) (= (x1082 x374) (x1117 x374))))
(assert (= (x757 (x1117 2960351575)) 2960351575))
(assert (= 0 (x311 x1095)))
(assert (=> (>= 10000 x1430) (= (x1117 x1430) (x1082 x1430))))
(assert (x1381 x783))
(assert (= (x757 (x1082 x1056)) x1056))
(assert (x829 x913))
(assert (x1381 x960))
(assert (= (or x1217 x536) x15))
(assert (x1381 x1151))
(assert (x1381 x568))
(assert (x829 x122))
(assert (= x1475 x578))
(assert (x1381 x586))
(assert (x1381 x505))
(assert (= (x757 (x1117 911411945)) 911411945))
(assert (= (x757 (x1082 x266)) x266))
(assert (x1381 x855))
(assert (= (x335 x526) (ite (and x389 x1022) (x430 x526) (ite (and x1022 x1197 (not x389)) (x515 x526) (x1477 x526)))))
(assert (x1381 x45))
(assert (x1381 x109))
(assert (= (x859 x1207) (ite (= x1207 x957) x54 (x378 x1207))))
(assert (= (x698 x1089) (ite (= x1089 x1373) x257 (x894 x1089))))
(assert (=> (>= 10000 x405) (= (x1082 x405) (x1117 x405))))
(assert (= (x984 x1215) (ite (= x80 x1215) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x331 x1215))))
(assert (x1381 x591))
(assert (x1381 x1365))
(assert (x829 x324))
(assert (= x766 (and x1526 x731)))
(assert (= (x311 x1228) 0))
(assert (x1381 x1496))
(assert (x1381 x901))
(assert (x1381 x121))
(assert (= (x757 (x1082 x49)) x49))
(assert (x829 x150))
(assert (= (x757 (x1082 x174)) x174))
(assert (x1381 x1428))
(assert (= (x757 (x1082 x1365)) x1365))
(assert (=> (<= x277 10000) (= (x1082 x277) (x1117 x277))))
(assert (=> (>= 10000 x254) (= (x1082 x254) (x1117 x254))))
(assert (= x257 (x698 x1373)))
(assert (x1240 x1186 x927))
(assert (x1381 x232))
(assert (x1381 x781))
(assert (= (ite (and x759 x978) (x1283 x1112) (x1225 x1112)) (x501 x1112)))
(assert (= (and x578 x442) x759))
(assert (x1381 x396))
(assert (x1381 x580))
(assert (= x930 (=> (and (= x994 (x219 (x1082 274184521717934524641157099916833587206))) (not (= x1002 468353030)) (> x994 0) (= x576 x1453) (= (x964 (x1082 x877) (x1117 7) 0) x260) (= 759532456 x1002) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1453) (= (x964 (x1082 x109) x260 0) x946) (not (< x1002 468353030)) (< x1002 911411945) (>= x1453 0) (not (= 635128645 x1002)) (< x1002 2293535753) (= (x644 x233) x1453) (<= x109 1461501637330902918203684832716283019655932542975) (= (x964 (x1082 x582) x946 0) x233) (<= x582 1461501637330902918203684832716283019655932542975)) (=> (and (= x648 (<= x1040 x898)) (= x1169 x735) (= x1040 x576) (= x814 x1533)) x744))))
(assert (= (=> (and (= x1289 (x964 (x1082 x434) x811 0)) (not (< x1 2690754053)) (= 2743102681 x1) (<= x184 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x792) (not (= x1 2690754053)) (= x1020 x184) (= x811 (x964 (x1082 x348) (x1117 3) 0)) (>= 1461501637330902918203684832716283019655932542975 x434) (<= 0 x184) (= (x219 (x1082 274184521717934524641157099916833587206)) x1415) (< 0 x1415) (= x184 (x1029 x1090)) (not (< x1 2293535753)) (> 2960351575 x1) (= (x964 (x1082 x792) x1289 0) x1090)) (=> (and (= x959 x922) (= x1020 x1175) (= x645 x278) (= x1546 x735) (= x814 x712)) x553)) x310))
(assert (= (x859 x716) (ite (= x716 x957) x54 (x378 x716))))
(assert (x1381 x1549))
(assert (= x545 (x757 (x1082 x545))))
(assert (x1381 x294))
(assert (=> (>= 10000 x1004) (= (x1117 x1004) (x1082 x1004))))
(assert (x1381 x1175))
(assert (= x1221 (=> (and (= x1493 (x964 (x1082 x287) x1490 0)) (< 0 x187) (= x350 2798343961) (>= x848 0) (not (= x350 2690754053)) (not (= 2764855426 x350)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x848) (not (= 2743102681 x350)) (not (< x350 2293535753)) (> 2960351575 x350) (= x1409 x848) (= x1490 (x964 (x1082 x320) (x1117 5) 0)) (>= 1461501637330902918203684832716283019655932542975 x287) (= (x219 (x1082 274184521717934524641157099916833587206)) x187) (= (x1420 x1493) x848) (not (< x350 2690754053))) (=> (and (= x814 x316) (= x959 x807) (= x913 x278) (= x735 x892) (= x697 x1409)) x1261))))
(assert (=> (>= 10000 x680) (= (x1117 x680) (x1082 x680))))
(assert (x1381 x288))
(assert (= (x1117 2211524764) (x1082 2211524764)))
(assert (x1381 x500))
(assert (= (x984 x690) (ite (= x690 x80) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x331 x690))))
(assert (x829 x41))
(assert (x1381 x429))
(assert (= x1187 (=> (and (= x666 (= x528 0)) (or (and (= 0 x1027) (= x369 0) x666) (and (= x862 (x964 (x1082 x528) (x1117 9) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x288) (= x952 (x964 (x1082 x616) x862 0)) (>= x288 0) (= x1027 1) (= x288 x369) (not x666) (= x616 (x180 1461501637330902918203684832716283019655932542975 x68)) (= (x286 x303) x288) (= (x964 (x1082 x1547) x952 0) x303)))) x360)))
(assert (x1381 x1131))
(assert (x829 x1384))
(assert (x829 x1255))
(assert (= (ite (= x1023 x801) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x1023)) (x378 x1023)))
(assert (= (x378 x971) (ite (= x971 x801) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x971))))
(assert (x1381 x441))
(assert (= (x1117 2061678023) (x1082 2061678023)))
(assert (x1381 x1299))
(assert (x1381 x690))
(assert (x829 x712))
(assert (x1193 x1005 x1394))
(assert (= (x984 x1089) (ite (= x80 x1089) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x331 x1089))))
(assert (x1381 x475))
(assert (x829 x235))
(assert (x1381 x1000))
(assert (x1381 x833))
(assert (x1381 x416))
(assert (x1381 x259))
(assert (= (ite (and x759 x978) (x1283 x511) (x1225 x511)) (x501 x511)))
(assert (= x160 (x757 (x1082 x160))))
(assert (= (ite (= x1112 x919) x899 (x103 x1112)) (x67 x1112)))
(assert (x829 x545))
(assert (x829 x214))
(assert (x1381 x1276))
(assert (x1381 x980))
(assert (x829 x1466))
(assert (x1381 x665))
(assert (= (x67 x1504) (ite (= x919 x1504) x899 (x103 x1504))))
(assert (=> (<= x122 10000) (= (x1082 x122) (x1117 x122))))
(assert (= x832 true))
(assert (=> (>= 10000 x1466) (= (x1082 x1466) (x1117 x1466))))
(assert (= (x1117 2512682246) (x1082 2512682246)))
(assert (= (x564 x1504) (ite (= x700 x1504) x673 (x859 x1504))))
(assert (=> (>= 10000 x922) (= (x1117 x922) (x1082 x922))))
(assert (= x135 (x757 (x1082 x135))))
(assert (x1381 x268))
(assert (x1381 x480))
(assert (x1193 x250 x1323))
(assert (= (ite (= x445 x1023) x846 (x1556 x1023)) (x273 x1023)))
(assert (x1381 x1418))
(assert (= (ite (and x1079 x1451) (x67 x1299) (ite (and x1091 (not x606) x1451 (not x1079)) (x1094 x1299) (ite (and (not x1079) x1451 (not x1091)) (x67 x1299) (x542 x1299)))) (x653 x1299)))
(assert (x829 x1151))
(assert (= (ite (= x971 x1157) x1522 (x67 x971)) (x1094 x971)))
(assert (x1381 x852))
(assert (x1381 x524))
(assert (= (x1370 x1493) (ite (and x1123 x1451) (x168 x1493) (x1145 x1493))))
(assert (x1381 x566))
(assert (= x71 (=> (and (= (x964 (x1082 x100) (x1117 3) 0) x1257) (= x442 (> x257 0)) (= (x180 1461501637330902918203684832716283019655932542975 x68) x545) (= x962 (x964 (x1082 x1547) x297 0)) (= (x964 (x1082 x545) x1257 0) x297)) (and (=> (not x442) x1479) (=> (and (= (x966 (+ 128 x1016)) x869) (= (x991 x1095) x1218) (= x1016 (x966 (+ x1209 36))) (= x795 0) (= x1250 (x281 x1342)) x442 x935 (= (x212 x1373) x1108) (= (x966 (+ x1209 32)) x1095) (= x148 (x966 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x315))) (= (x378 x1209) x1440) (= (> x1440 0) x1320) (= x856 (x18 (- x259 x1209))) (or (not x1435) (and (= x1279 (x966 (+ x1440 x869))) x1435)) (< 0 x1108) (= (< x1440 x910) x1435) (< 0 x257) (or (and (= x910 0) (not x1320)) (and x1320 (= x1299 x1095) (= (< 32 x1440) x304) (= x957 x869) (or (and (= (x966 (+ 64 x1209)) x1207) (or (and (= (x564 x971) x197) (or (and (not x722) (= (x966 (+ x1209 128)) x69) x1009 (= (> x1440 128) x722) (= x1534 (x341 x69)) (= 128 x910) (= (x966 (+ 160 x259)) x1314)) (and (= x910 96) (not x1009))) (= x971 (x966 (+ x1209 96))) x239 (= (x966 (+ x259 128)) x819) (= x1009 (< 96 x1440))) (and (not x239) (= 64 x910))) (= x700 (x966 (+ x259 96))) (= x673 (x859 x1207)) (= x239 (< 64 x1440)) x304) (and (not x304) (= 32 x910))) (= (x378 x1299) x54))) (= x259 (x966 (+ x1209 100))) (= (x180 26959946667150639794667015087019630673637144422540572481103610249215 x1218) x315) (= x1431 (x18 (- x856 32))) (= x474 (x966 (+ x65 160))) (= (> x289 0) x935) (= x289 (x219 (x1082 x1250))) (= (x966 (+ x1016 96)) x801) (= x1342 x193) (>= 1461501637330902918203684832716283019655932542975 x1250) (= x1290 (x966 (+ 68 x1209))) (= (x212 x474) x1077)) x933)))))
(assert (= (x433 x455) (ite (and x37 x1541) (x698 x455) (x1434 x455))))
(assert (= (x311 x971) 0))
(assert (= (x757 (x1082 x815)) x815))
(assert (= (x653 x455) (ite (and x1451 x1079) (x67 x455) (ite (and x1091 (not x606) (not x1079) x1451) (x1094 x455) (ite (and (not x1079) x1451 (not x1091)) (x67 x455) (x542 x455))))))
(assert (=> (<= x396 10000) (= (x1117 x396) (x1082 x396))))
(assert (x1381 x1255))
(assert (= (x757 (x1082 x332)) x332))
(assert (x1381 x1073))
(assert (= x519 (=> (and (or (and (= (x180 1461501637330902918203684832716283019655932542975 x68) x1055) (= (= 0 x470) x628) (= x26 (x964 (x1082 x1055) x835 0)) (= (x209 x26) x470) (or (and (= x451 x470) (not x628) (= x540 1)) (and x628 (= 0 x451) (= 0 x540))) (not x380) (<= 0 x470) (<= x470 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x835 (x964 (x1082 x764) (x1117 10) 0))) (and (= x451 0) (= x540 0) x380)) (= x380 (= 0 x764))) x362)))
(assert (= x1462 (x757 (x1082 x1462))))
(assert (x829 x1427))
(assert (x829 x49))
(assert (x1381 x93))
(assert (= (ite (and x1541 x37) (x698 x690) (x1434 x690)) (x433 x690)))
(assert (= x1430 (x757 (x1082 x1430))))
(assert (x1381 x1377))
(assert (x1381 x645))
(assert (x1381 x1089))
(assert (x1381 x676))
(assert (x1381 x386))
(assert (x1381 x7))
(assert (x829 x1389))
(assert (= 0 (x311 x1089)))
(assert (=> (<= x864 10000) (= (x1117 x864) (x1082 x864))))
(assert (x1381 x1222))
(assert (x1381 x68))
(assert (x1381 x285))
(assert (= x560 (or (and x664 (not x1208)) (and (not x939) x1087))))
(assert (x1381 x1279))
(assert (x829 x792))
(assert (= (x757 (x1082 x980)) x980))
(assert (= x1426 (x757 (x1082 x1426))))
(assert (x1381 x1101))
(assert (x1381 x185))
(assert (= (x550 x716) (ite (= x92 x716) x686 (x273 x716))))
(assert (= x761 (x757 (x1082 x761))))
(assert (=> (<= x1365 10000) (= (x1082 x1365) (x1117 x1365))))
(assert (= (=> (and (= x537 (= x1521 0)) (= x1389 (x180 1461501637330902918203684832716283019655932542975 x68)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1521) (>= x1521 0) (= x463 (x964 (x1082 x1100) (x1117 6) 0)) (= (x1188 x779) x1521) (= (x964 (x1082 x1389) x463 0) x779)) (and (=> (and (= x852 x1100) (not x537)) x787) (=> (and (not x867) x537 (= (x18 (- x1100 1)) x1003) (= x867 (> x1003 0))) x1125))) x1432))
(assert (= (x311 x474) 0))
(assert (x752 x285))
(assert (= (x757 (x1259 x1039 1)) (+ 1 (x757 x1039))))
(assert (x1381 x1003))
(assert (x1381 x41))
(assert (=> (>= 10000 x1427) (= (x1082 x1427) (x1117 x1427))))
(assert (x1381 x1536))
(assert (x1381 x110))
(assert (= x1478 (=> (and (or (and (>= x12 0) (= (= 0 x12) x1553) (= x127 (x180 1461501637330902918203684832716283019655932542975 x68)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x12) (= (x1180 x897) x12) (not x561) (= (x964 (x1082 x49) (x1117 10) 0) x813) (or (and x1553 (= 0 x91) (= x504 0)) (and (not x1553) (= x91 x12) (= 1 x504))) (= (x964 (x1082 x127) x813 0) x897)) (and (= x504 0) (= 0 x91) x561)) (= (= x49 0) x561)) x388)))
(assert (= (x1117 604800) (x1082 604800)))
(assert (= (ite (= x1523 x801) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x1523)) (x378 x1523)))
(assert (x752 x1006))
(assert (x1381 x745))
(assert (x1381 x882))
(assert (x1381 x404))
(assert (= (x1082 635128645) (x1117 635128645)))
(assert (x1381 x434))
(assert (= (x757 (x1082 x1520)) x1520))
(assert (= x1528 (x757 (x1082 x1528))))
(assert (x1193 x1383 x600))
(assert (= (ite (= x700 x690) x673 (x859 x690)) (x564 x690)))
(assert (x1381 x847))
(assert (x1381 x1185))
(assert (x1381 x1016))
(assert (x1381 x320))
(assert (= x271 (x757 (x1082 x271))))
(assert (x1381 x1359))
(assert (x1381 x435))
(assert (= x940 (or (and (not x444) x1433) (and (not x537) x70))))
(assert (= (ite (and x1079 x1451) (x67 x716) (ite (and (not x606) x1091 (not x1079) x1451) (x1094 x716) (ite (and x1451 (not x1079) (not x1091)) (x67 x716) (x542 x716)))) (x653 x716)))
(assert (= (ite (= x919 x1558) x899 (x103 x1558)) (x67 x1558)))
(assert (= (ite (and x1541 x37) (x698 x1504) (x1434 x1504)) (x433 x1504)))
(assert (x829 x374))
(assert (= x1252 (x757 (x1082 x1252))))
(assert (x1381 x204))
(assert (x1381 x60))
(assert (= (x67 x1095) (ite (= x919 x1095) x899 (x103 x1095))))
(assert (x1381 x1316))
(assert (x1381 x1333))
(assert (= (x74 x511) (ite (and x239 (not x1009) x304 x578 x442 x1320) (x341 x511) (ite (and (not x239) x1320 x442 x578 x304) (x564 x511) (ite (and x1320 x442 (not x304) x578) (x859 x511) (ite (and x578 (not x1320) x442) (x378 x511) (x10 x511)))))))
(assert (x1381 x1086))
(assert (= x1311 (and (not x128) x1443)))
(assert (= x1304 (=> (= x128 (> x247 x100)) (and (=> (and (= x1209 x667) x128) x1312) (=> (not x128) x464)))))
(assert (= (x1082 468353030) (x1117 468353030)))
(assert (x1381 x485))
(assert (x829 x949))
(assert (x1381 x880))
(assert (x829 x920))
(assert (x1381 x865))
(assert (x1381 x1332))
(assert (= (x757 (x1259 x395 1)) (+ (x757 x395) 1)))
(assert (= (x564 x971) (ite (= x700 x971) x673 (x859 x971))))
(assert (x1381 x804))
(assert (= (ite (= x445 x92) x846 (x1556 x92)) (x273 x92)))
(assert (=> (<= x943 10000) (= (x1117 x943) (x1082 x943))))
(assert (=> (>= 10000 x176) (= (x1082 x176) (x1117 x176))))
(assert (= (x1082 826074471) (x1117 826074471)))
(assert (x1381 x1075))
(assert (x1381 x1133))
(assert (x829 x1426))
(assert (x1381 x1343))
(assert (=> (<= x214 10000) (= (x1082 x214) (x1117 x214))))
(assert (x1381 x50))
(assert (x1381 x1007))
(assert (x1381 x122))
(assert (= (ite (= x716 x700) x673 (x859 x716)) (x564 x716)))
(assert (= (x433 x1089) (ite (and x1541 x37) (x698 x1089) (x1434 x1089))))
(assert (= x830 (and x1307 x344)))
(assert (= (x1082 69947311) (x1117 69947311)))
(assert (= (ite (= x919 x474) x899 (x103 x474)) (x67 x474)))
(assert (=> (>= 10000 x1528) (= (x1082 x1528) (x1117 x1528))))
(assert (x829 x1336))
(assert (= (x1082 2743102681) (x1117 2743102681)))
(assert (= x1336 (x757 (x1082 x1336))))
(assert (= (x757 (x1082 x1191)) x1191))
(assert (= (ite (and x137 x448 x1284 x258 x699 (not x1422)) (x169 x690) (ite (and (not x258) x1284 x448 x137 x699) (x1048 x690) (ite (and x699 (not x1284) x448 x137) (x222 x690) (ite (and (not x699) x137 x448) (x984 x690) (x1242 x690))))) (x1025 x690)))
(assert (= (x433 x1373) (ite (and x1541 x37) (x698 x1373) (x1434 x1373))))
(assert (=> (<= x900 10000) (= (x1117 x900) (x1082 x900))))
(assert (= x422 (x757 (x1082 x422))))
(assert (=> (>= 10000 x438) (= (x1082 x438) (x1117 x438))))
(assert (= (x311 x455) 0))
(assert (x829 274184521717934524641157099916833587218))
(assert (= x1296 (x757 (x1082 x1296))))
(assert (= (x1117 1986467848) (x1082 1986467848)))
(assert (= (x222 x511) (ite (= x511 x1184) x1026 (x984 x511))))
(assert (= (ite (= x1228 x1157) x1522 (x67 x1228)) (x1094 x1228)))
(assert (= (and x1510 x56) x70))
(assert (x1381 x1369))
(assert (x1381 x504))
(assert (=> (<= x1109 10000) (= (x1117 x1109) (x1082 x1109))))
(assert (= (ite (= x1184 x1023) x1026 (x984 x1023)) (x222 x1023)))
(assert (x1381 x1062))
(assert (= x113 (x757 (x1082 x113))))
(assert (x1381 x971))
(assert (x1381 x1503))
(assert (= (x757 (x1082 x279)) x279))
(assert (x1381 x372))
(assert (x1381 x529))
(assert (= (x698 x1157) (ite (= x1373 x1157) x257 (x894 x1157))))
(assert (x829 x316))
(assert (= (x757 (x1117 2211524764)) 2211524764))
(assert (x1381 x775))
(assert (= x1427 (x757 (x1082 x1427))))
(assert (= (or (and (not x1526) x731) (and x596 x766) (and (not x539) x654)) x1081))
(assert (= (x501 x1023) (ite (and x759 x978) (x1283 x1023) (x1225 x1023))))
(assert (x1381 x712))
(assert (x1381 x374))
(assert (x1381 x1383))
(assert (x1381 x266))
(assert (= (x378 x69) (ite (= x801 x69) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x69))))
(assert (x1381 x241))
(assert (x1381 x1184))
(assert (x1381 x725))
(assert (= x464 (=> (and (= (x335 x1329) x497) (<= x868 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x868) (= x947 (x964 (x1082 x247) (x1117 7) 0)) (= (x964 (x1082 x1547) x178 0) x1329) (= x178 (x964 (x1082 x836) x947 0)) (<= 0 x497) (not (< x868 x247)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x497) (= x836 (x180 1461501637330902918203684832716283019655932542975 x68)) (= x1041 (> x497 0))) (and (=> (and (= (x964 (x1082 x247) (x1117 9) 0) x758) (= (x964 (x1082 x1547) x739 0) x1350) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x319) (= x319 x369) x1041 (= x319 (x286 x1350)) (= (x964 (x1082 x1065) x758 0) x739) (= x1065 (x180 1461501637330902918203684832716283019655932542975 x68)) (= x1027 0) (>= x319 0)) x360) (=> (not x1041) x510)))))
(assert (x1381 x1126))
(assert (x1381 x1301))
(assert (= (x67 x455) (ite (= x919 x455) x899 (x103 x455))))
(assert (= x1130 x37))
(assert (= (x67 x1157) (ite (= x1157 x919) x899 (x103 x1157))))
(assert (x1381 x1375))
(assert (x1381 x422))
(assert (x1381 x1462))
(assert (x1381 x421))
(assert (= (ite (= x700 x1023) x673 (x859 x1023)) (x564 x1023)))
(assert (x829 x393))
(assert (= (=> (= x1400 x764) x519) x670))
(assert (= (x550 x1089) (ite (= x1089 x92) x686 (x273 x1089))))
(assert (= (x653 x690) (ite (and x1079 x1451) (x67 x690) (ite (and x1451 (not x606) x1091 (not x1079)) (x1094 x690) (ite (and (not x1079) x1451 (not x1091)) (x67 x690) (x542 x690))))))
(assert (= (x1048 x511) (ite (= x511 x802) x274 (x222 x511))))
(assert (= (ite (and x1022 x389) (x1029 x610) (ite (and x1022 x1197 (not x389)) (x1029 x610) (x538 x610))) (x349 x610)))
(assert (= (ite (= x801 x511) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x511)) (x378 x511)))
(assert (x829 x1269))
(assert (= (x757 (x1082 x586)) x586))
(assert (x1381 x113))
(assert (x1381 x667))
(assert (x1381 x1398))
(assert (= x731 (and x1483 x1050)))
(assert (x1381 x613))
(assert (= (x341 x69) (ite (= x819 x69) x197 (x564 x69))))
(assert (x829 x726))
(assert (= (x757 (x1082 x277)) x277))
(assert (= x472 (x757 (x1082 x472))))
(assert (x1381 x770))
(assert (x1381 x786))
(assert (= (x859 x1523) (ite (= x957 x1523) x54 (x378 x1523))))
(assert (x1381 x680))
(assert (x1381 x455))
(assert (= (x757 (x1082 x201)) x201))
(assert (x1381 x1138))
(assert (= (x757 (x1082 x1073)) x1073))
(assert (x1381 x838))
(assert (= (or x134 (and x128 x1443) (and x785 x1130)) x1475))
(assert (x829 x271))
(assert (= x129 (=> (and (= x676 (x1238 x81)) (= x1375 x676) (<= x225 1461501637330902918203684832716283019655932542975) (<= x768 1461501637330902918203684832716283019655932542975) (= x1338 (x964 (x1082 x225) x1287 0)) (not (< x729 2690754053)) (= x1287 (x964 (x1082 x521) (x1117 3) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x676) (= x917 (x219 (x1082 274184521717934524641157099916833587206))) (= x729 2743102681) (<= 0 x676) (< x729 2960351575) (> x917 0) (not (< x729 2293535753)) (not (= x729 2690754053)) (= (x964 (x1082 x768) x1338 0) x81)) (=> (and (= x287 x814) (= (>= x1013 x293) x1182) (= x320 x735) (= x1375 x293)) x1221))))
(assert (=> (>= 10000 x287) (= (x1082 x287) (x1117 x287))))
(assert (= (x1117 1461501637330902918203684832716283019655932542975) (x1082 1461501637330902918203684832716283019655932542975)))
(assert (= (x1082 2258409472) (x1117 2258409472)))
(assert (= x823 (x757 (x1082 x823))))
(assert (=> (<= x806 10000) (= (x1117 x806) (x1082 x806))))
(assert (x829 x135))
(assert (x1381 x639))
(assert (x1381 x909))
(assert (x829 x279))
(assert (= (x311 x92) 0))
(assert (x829 x754))
(assert (=> (>= 10000 x1344) (= (x1117 x1344) (x1082 x1344))))
(assert (x1381 x545))
(assert (x1240 x584 x226))
(assert (= (ite (= x445 x690) x846 (x1556 x690)) (x273 x690)))
(assert (=> (>= 10000 x1486) (= (x1117 x1486) (x1082 x1486))))
(assert (= (x757 (x1117 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x1381 x1319))
(assert (x1381 x913))
(assert (= (x757 (x1082 x307)) x307))
(assert (x1381 x1141))
(assert (= (x1094 x716) (ite (= x1157 x716) x1522 (x67 x716))))
(assert (=> (<= x113 10000) (= (x1082 x113) (x1117 x113))))
(assert (= (ite (= x957 x511) x54 (x378 x511)) (x859 x511)))
(assert (x1381 x22))
(assert (= x1022 x657))
(assert (x752 x584))
(assert (= (x757 (x1082 x1344)) x1344))
(assert (= (or x560 x267) x1098))
(assert (= (x1117 115792089237316195423570985008687907853269984665640564039457) (x1082 115792089237316195423570985008687907853269984665640564039457)))
(assert (x1381 x1005))
(assert (x1381 x583))
(assert (x1381 x1026))
(assert (= (x433 x1207) (ite (and x1541 x37) (x698 x1207) (x1434 x1207))))
(assert (=> (>= 10000 x833) (= (x1082 x833) (x1117 x833))))
(assert (x1381 x355))
(assert (x1381 x189))
(assert (= (x757 (x1082 x1555)) x1555))
(assert (x1381 x743))
(assert (x1381 x879))
(assert (x1381 x1256))
(assert (x1381 x949))
(assert (= (x757 (x1082 x1533)) x1533))
(assert (= x1379 x554))
(assert (x1381 x401))
(assert (= (x550 x1523) (ite (= x1523 x92) x686 (x273 x1523))))
(assert (=> (>= 10000 x1269) (= (x1082 x1269) (x1117 x1269))))
(assert (x1381 x713))
(assert (x1381 x703))
(assert (x1381 x860))
(assert (x625 x285 x392))
(assert (x829 x1365))
(assert (x1381 x972))
(assert (= (ite (= x1523 x1373) x257 (x894 x1523)) (x698 x1523)))
(assert (= x1402 (=> (= x882 x139) x52)))
(assert (x829 x643))
(assert (= (x757 (x1117 2532887486)) 2532887486))
(assert (=> (<= x882 10000) (= (x1117 x882) (x1082 x882))))
(assert (=> (>= 10000 x582) (= (x1082 x582) (x1117 x582))))
(assert (= (x698 x971) (ite (= x971 x1373) x257 (x894 x971))))
(assert (x829 x882))
(assert (=> (<= x105 10000) (= (x1082 x105) (x1117 x105))))
(assert (= (ite (= x445 x455) x846 (x1556 x455)) (x273 x455)))
(assert (x1381 x985))
(assert (x1381 x369))
(assert (= x1486 (x757 (x1082 x1486))))
(assert (x1381 x1020))
(assert (x829 x1546))
(assert (= (x757 (x1082 x417)) x417))
(assert (x1381 x247))
(assert (= (x273 x1089) (ite (= x1089 x445) x846 (x1556 x1089))))
(assert (x1381 x788))
(assert (= (x757 (x1117 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (x829 x568))
(assert (= (x757 (x1082 x179)) x179))
(assert (= (x273 x474) (ite (= x445 x474) x846 (x1556 x474))))
(assert (x1381 x920))
(assert (= (x1370 x1386) (ite (and x1451 x1123) (x168 x1386) (x1145 x1386))))
(assert (x1381 x678))
(assert (x829 x931))
(assert (= (x341 x1373) (ite (= x819 x1373) x197 (x564 x1373))))
(assert (= (x1117 2514000705) (x1082 2514000705)))
(assert (x1381 x841))
(assert (x1193 x68 x1372))
(assert (x829 x1100))
(assert (x1381 x1056))
(assert (= (and x137 x448) x1241))
(assert (= (ite (and x1451 x1123) (x1449 x13) (x298 x13)) (x1188 x13)))
(assert (= (ite (and x1079 x1451) (x67 x92) (ite (and (not x1079) x1451 (not x606) x1091) (x1094 x92) (ite (and (not x1091) (not x1079) x1451) (x67 x92) (x542 x92)))) (x653 x92)))
(assert (x829 x189))
(assert (= (x653 x511) (ite (and x1079 x1451) (x67 x511) (ite (and (not x1079) (not x606) x1091 x1451) (x1094 x511) (ite (and x1451 (not x1091) (not x1079)) (x67 x511) (x542 x511))))))
(assert (x1381 x1465))
(assert (x1381 x130))
(assert (= (x757 (x1082 x882)) x882))
(assert (= (x273 x716) (ite (= x445 x716) x846 (x1556 x716))))
(assert (x1381 x1520))
(assert (= (x873 x1228) (ite (and x442 (not x1435) x578) (x74 x1228) (x808 x1228))))
(assert (= (x757 (x1082 x127)) x127))
(assert (= (x1117 2532887486) (x1082 2532887486)))
(assert (x1381 x701))
(assert (= (x859 x690) (ite (= x957 x690) x54 (x378 x690))))
(assert (= (=> (and (= x374 x735) (= x814 x1152)) x872) x1479))
(assert (x829 x1169))
(assert (x1381 x1427))
(assert (x829 x307))
(assert (x829 x277))
(assert (x1381 x125))
(assert (x1381 x193))
(assert (x1381 x470))
(assert (= (or (and (not x1483) x1050) (and (not x596) x766)) x592))
(assert (= x1282 (=> (and (> x774 0) (not (> 2690754053 x59)) (not (= 2690754053 x59)) (>= 1461501637330902918203684832716283019655932542975 x135) (= x59 2743102681) (< x59 2960351575) (<= 0 x906) (= x909 x906) (= (x964 (x1082 x1344) x549 0) x624) (= (x219 (x1082 274184521717934524641157099916833587206)) x774) (= x1554 (x964 (x1082 x135) x624 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x906) (= x549 (x964 (x1082 x823) (x1117 3) 0)) (>= 1461501637330902918203684832716283019655932542975 x1344) (= x906 (x1029 x1554)) (not (> 2293535753 x59))) (=> (and (= x999 (>= x1226 x1376)) (= x1376 x909) (= x1466 x735) (= x1530 x814)) x394))))
(assert (x1381 x1031))
(assert (x1381 x1504))
(assert (= x316 (x757 (x1082 x316))))
(assert (x1381 x1529))
(assert (= (ite (= x801 x1299) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x1299)) (x378 x1299)))
(assert (x1193 x789 x1235))
(assert (x1381 x1229))
(assert (x1381 x1043))
(assert (x1193 x720 x19))
(assert (=> (>= 10000 x931) (= (x1117 x931) (x1082 x931))))
(assert (x1381 x271))
(assert (x1381 x994))
(assert (= x764 (x757 (x1082 x764))))
(assert (x1381 x1173))
(assert (= (ite (= x1157 x1207) x1522 (x67 x1207)) (x1094 x1207)))
(assert (= (x501 x1523) (ite (and x759 x978) (x1283 x1523) (x1225 x1523))))
(assert (x1381 x1023))
(assert (x1381 x205))
(assert (x1381 x809))
(assert (= (or x15 (and x1311 x1041)) x1139))
(assert (x1381 x393))
(assert (= x41 (x757 (x1082 x41))))
(assert (= (x757 (x1082 x1035)) x1035))
(assert (=> (<= x472 10000) (= (x1117 x472) (x1082 x472))))
(assert (x1381 x20))
(assert (x1381 x931))
(assert (x1381 x729))
(assert (= (x757 (x1117 468353030)) 468353030))
(assert (x1381 x509))
(assert (x829 x1152))
(assert (=> (>= 10000 x714) (= (x1117 x714) (x1082 x714))))
(assert (= (x311 x716) 0))
(assert (= (and x626 x383) x1436))
(assert (x829 x108))
(assert (= (x1117 26959946667150639794667015087019630673637144422540572481103610249215) (x1082 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1381 x488))
(assert (x1381 x1012))
(assert (x1381 x474))
(assert (= (ite (= x7 x919) x899 (x103 x7)) (x67 x7)))
(assert (= (ite (= x445 x875) x846 (x1556 x875)) (x273 x875)))
(assert (= (ite (and x978 x759) (x1283 x1373) (x1225 x1373)) (x501 x1373)))
(assert (= (x311 x690) 0))
(assert (x1381 x906))
(assert (= (ite (= x801 x1209) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x142 x1209)) (x378 x1209)))
(assert (= (=> (and (= x1334 (x18 (- x324 1))) (= x1124 (< 0 x1334))) (and (=> x1124 x414) (=> (not x1124) x546))) x1390))
(assert (x1381 x1146))
(assert (= (=> (and (= x900 (x180 1461501637330902918203684832716283019655932542975 x68)) (= (x964 (x1082 x900) x1202 0) x325) (= (x964 (x1082 x1334) (x1117 7) 0) x1202) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x416) (= (= x416 0) x1208) (= x136 (x964 (x1082 x1547) x325 0)) (= (x206 x136) x416) (<= 0 x416)) (and (=> (and (not x345) (= x1377 (x18 (- x1334 1))) (= x345 (< 0 x1377)) x1208) x546) (=> (and (= x1334 x139) (not x1208)) x1402))) x414))
(assert (x1381 x919))
(assert (=> (>= 10000 x320) (= (x1117 x320) (x1082 x320))))
(assert (x1381 x927))
(assert (= (x698 x1504) (ite (= x1504 x1373) x257 (x894 x1504))))
(assert (= (x341 x1387) (ite (= x819 x1387) x197 (x564 x1387))))
(assert (= x405 (x757 (x1082 x405))))
(assert (= (=> (= 0 x528) x1187) x55))
(assert (x1381 x1275))
(assert (= (ite (and x239 x1320 x578 x442 x304 (not x1009)) (x341 x1023) (ite (and x442 (not x239) x1320 x578 x304) (x564 x1023) (ite (and x1320 x442 x578 (not x304)) (x859 x1023) (ite (and (not x1320) x578 x442) (x378 x1023) (x10 x1023))))) (x74 x1023)))
(assert (= (=> (and (= x189 (x18 (- x247 1))) (= x383 (< 0 x189))) (and (=> (not x383) x55) (=> x383 x30))) x672))
(assert (= (=> (and (= x333 (>= x697 x863)) (= x863 x370) (= x532 (and x333 x1182)) (= x570 (or x532 (not x648)))) (and x570 (=> (and (= 87118632 x847) (= x278 x949) (= 87118632 x703) (= x404 x814) (= false x469) (= x174 x735)) x1482))) x579))
(assert (x1381 x1516))
(assert (x1381 x995))
(assert (= 274184521717934524641157099916833587214 (x757 (x1082 274184521717934524641157099916833587214))))
(assert (= (x653 x474) (ite (and x1079 x1451) (x67 x474) (ite (and (not x606) x1451 (not x1079) x1091) (x1094 x474) (ite (and (not x1091) (not x1079) x1451) (x67 x474) (x542 x474))))))
(assert (x1381 x898))
(assert (x829 x247))
(assert (x829 x438))
(assert (x1381 x883))
(assert (= (ite (and x1022 x389) (x430 x1321) (ite (and x1022 x1197 (not x389)) (x515 x1321) (x1477 x1321))) (x335 x1321)))
(assert (= x931 (x757 (x1082 x931))))
(assert (= x385 (and x874 x466)))
(assert (x1381 x975))
(assert (= (ite (and x442 (not x1435) x578) (x74 x511) (x808 x511)) (x873 x511)))
(assert (=> (<= x634 10000) (= (x1082 x634) (x1117 x634))))
(assert (= (x757 (x1082 x616)) x616))
(check-sat)
