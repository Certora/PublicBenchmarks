(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x964 0)) (((x860 (x1108 Int)) (x871 (x541 x964) (x693 Int)) (x587 (x422 x964) (x514 x964) (x1018 Int)))))
(declare-fun x695 () x964)
(declare-fun x1265 () Bool)
(declare-fun x1191 () x964)
(declare-fun x1132 () Int)
(declare-fun x675 () x964)
(declare-fun x211 () Bool)
(declare-fun x489 () Bool)
(declare-fun x99 () Int)
(declare-fun x1310 () Bool)
(declare-fun x375 () Int)
(declare-fun x1074 () Bool)
(declare-fun x516 () x964)
(declare-fun x1146 () Int)
(declare-fun x1137 () Bool)
(declare-fun x614 () x964)
(declare-fun x1208 () x964)
(declare-fun x1495 () x964)
(declare-fun x257 () Int)
(declare-fun x1352 () x964)
(declare-fun x482 () Int)
(declare-fun x1164 () Int)
(declare-fun x680 () Int)
(declare-fun x686 () Bool)
(declare-fun x358 () Int)
(declare-fun x1007 () Bool)
(declare-fun x1287 () Int)
(declare-fun x758 () Int)
(declare-fun x45 () x964)
(declare-fun x577 () Int)
(declare-fun x54 (x964) Int)
(declare-fun x1351 () Int)
(declare-fun x485 () x964)
(declare-fun x1084 () x964)
(declare-fun x1504 () x964)
(declare-fun x763 () x964)
(declare-fun x998 () Int)
(declare-fun x1064 () Bool)
(declare-fun x1046 () Int)
(declare-fun x157 () Int)
(declare-fun x58 () Int)
(declare-fun x622 () Int)
(declare-fun x714 () x964)
(declare-fun x918 () Int)
(declare-fun x418 () Bool)
(declare-fun x479 () Int)
(declare-fun x557 (x964) Int)
(declare-fun x527 () Bool)
(declare-fun x1114 (Int Int) Int)
(declare-fun x1410 () Int)
(declare-fun x333 () Bool)
(declare-fun x634 () Bool)
(declare-fun x1126 () Int)
(declare-fun x1072 (Int) Int)
(declare-fun x1024 () Int)
(declare-fun x649 () Int)
(declare-fun x25 () Int)
(declare-fun x764 () Int)
(declare-fun x1326 () Int)
(declare-fun x1323 (Int) Int)
(declare-fun x768 () Bool)
(declare-fun x678 () Int)
(declare-fun x1386 () Int)
(declare-fun x832 () Bool)
(declare-fun x572 () Int)
(declare-fun x1477 () Bool)
(declare-fun x596 () Bool)
(declare-fun x83 () Bool)
(declare-fun x97 () x964)
(declare-fun x1353 () Int)
(declare-fun x1311 () Bool)
(declare-fun x131 () x964)
(declare-fun x1271 () Bool)
(declare-fun x402 (x964) Int)
(declare-fun x66 () Int)
(declare-fun x33 () Int)
(declare-fun x788 () Bool)
(declare-fun x117 () x964)
(declare-fun x168 () x964)
(declare-fun x43 () Int)
(declare-fun x361 () x964)
(declare-fun x149 () x964)
(declare-fun x752 () Bool)
(declare-fun x162 () Int)
(declare-fun x455 () x964)
(declare-fun x1340 () x964)
(declare-fun x1096 () Int)
(declare-fun x5 () Int)
(declare-fun x1409 () Int)
(declare-fun x1406 () Int)
(declare-fun x743 () Bool)
(declare-fun x230 () Bool)
(declare-fun x672 () Bool)
(declare-fun x940 () Bool)
(declare-fun x55 () Int)
(declare-fun x84 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x1270 () Int)
(declare-fun x1026 () Bool)
(declare-fun x181 () Int)
(declare-fun x52 () Bool)
(declare-fun x628 () Int)
(declare-fun x227 () x964)
(declare-fun x962 () x964)
(declare-fun x1009 () Bool)
(declare-fun x870 () Bool)
(declare-fun x29 () Bool)
(declare-fun x21 () Int)
(declare-fun x1413 () Bool)
(declare-fun x345 () Bool)
(declare-fun x178 () Int)
(declare-fun x707 (Int) Int)
(declare-fun x56 () Bool)
(declare-fun x53 () x964)
(declare-fun x310 () Int)
(declare-fun x389 () x964)
(declare-fun x1358 () Bool)
(declare-fun x260 (Int) Int)
(declare-fun x1141 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x781 () Int)
(declare-fun x565 () Int)
(declare-fun x801 () Bool)
(declare-fun x816 () x964)
(declare-fun x1049 () x964)
(declare-fun x1081 () Int)
(declare-fun x488 () Bool)
(declare-fun x1434 () x964)
(declare-fun x676 () x964)
(declare-fun x506 () Int)
(declare-fun x1356 () Int)
(declare-fun x1394 () x964)
(declare-fun x251 () x964)
(declare-fun x854 () Bool)
(declare-fun x1150 () Int)
(declare-fun x563 () Int)
(declare-fun x720 () Int)
(declare-fun x1445 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x392 () x964)
(declare-fun x899 () Int)
(declare-fun x1320 () Int)
(declare-fun x138 () Int)
(declare-fun x1086 () Bool)
(declare-fun x670 () Int)
(declare-fun x833 () Int)
(declare-fun x760 () Bool)
(declare-fun x598 () Int)
(declare-fun x1325 () Int)
(declare-fun x1283 () Bool)
(declare-fun x700 () Bool)
(declare-fun x203 () x964)
(declare-fun x498 () Bool)
(declare-fun x604 () Int)
(declare-fun x892 () Int)
(declare-fun x562 () Bool)
(declare-fun x1365 () Int)
(declare-fun x1212 () Bool)
(declare-fun x129 () Int)
(declare-fun x91 () Bool)
(declare-fun x374 () Int)
(declare-fun x1223 () x964)
(declare-fun x897 (Int) Int)
(declare-fun x1324 () Int)
(declare-fun x393 () Int)
(declare-fun x842 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x279 () Int)
(declare-fun x959 () Bool)
(declare-fun x1056 () x964)
(declare-fun x681 () x964)
(declare-fun x167 () Int)
(declare-fun x907 () Bool)
(declare-fun x1249 () Int)
(declare-fun x876 () Int)
(declare-fun x972 () Int)
(declare-fun x806 (Int) Int)
(declare-fun x933 () Bool)
(declare-fun x1327 () Int)
(declare-fun x331 () Int)
(declare-fun x543 () Bool)
(declare-fun x1219 (x964) Int)
(declare-fun x528 () Int)
(declare-fun x1489 () Int)
(declare-fun x756 () Int)
(declare-fun x542 () x964)
(declare-fun x116 () Int)
(declare-fun x50 () Int)
(declare-fun x1465 () Bool)
(declare-fun x944 () Bool)
(declare-fun x1091 () Int)
(declare-fun x1360 () Int)
(declare-fun x277 () x964)
(declare-fun x689 (x964) Int)
(declare-fun x1078 () Int)
(declare-fun x190 () x964)
(declare-fun x973 (Int) Int)
(declare-fun x436 () Bool)
(declare-fun x950 () Bool)
(declare-fun x837 () Int)
(declare-fun x1500 (Int) Int)
(declare-fun x1149 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1234 () x964)
(declare-fun x770 () Int)
(declare-fun x112 () Bool)
(declare-fun x92 () Bool)
(declare-fun x1102 () Int)
(declare-fun x221 () Int)
(declare-fun x193 () x964)
(declare-fun x32 () x964)
(declare-fun x350 () Int)
(declare-fun x646 () Bool)
(declare-fun x879 () Bool)
(declare-fun x811 () Bool)
(declare-fun x78 () x964)
(declare-fun x929 () Bool)
(declare-fun x419 () Int)
(declare-fun x51 () Bool)
(declare-fun x893 () Int)
(declare-fun x140 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x846 () Int)
(declare-fun x144 () Int)
(declare-fun x3 () x964)
(declare-fun x1425 () Int)
(declare-fun x1422 () Bool)
(declare-fun x1403 () Int)
(declare-fun x16 () Int)
(declare-fun x223 () x964)
(declare-fun x1496 () Bool)
(declare-fun x1268 () Int)
(declare-fun x1430 () Int)
(declare-fun x796 () Int)
(declare-fun x905 () Bool)
(declare-fun x717 () Bool)
(declare-fun x263 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x225 () Bool)
(declare-fun x772 () x964)
(declare-fun x425 () x964)
(declare-fun x1001 () Bool)
(declare-fun x49 () x964)
(declare-fun x362 () Int)
(declare-fun x1397 () Int)
(declare-fun x229 () x964)
(declare-fun x607 () Bool)
(declare-fun x427 () Bool)
(declare-fun x1204 () x964)
(declare-fun x942 () Bool)
(declare-fun x1463 () Int)
(declare-fun x1197 () Int)
(declare-fun x328 () Bool)
(declare-fun x1435 () x964)
(declare-fun x1101 () Int)
(declare-fun x862 () Bool)
(declare-fun x698 () Int)
(declare-fun x864 () x964)
(declare-fun x552 () Bool)
(declare-fun x1307 () Int)
(declare-fun x1486 () Bool)
(declare-fun x46 () Bool)
(declare-fun x377 () Bool)
(declare-fun x706 () Int)
(declare-fun x234 () Bool)
(declare-fun x1116 () Int)
(declare-fun x746 (x964) Int)
(declare-fun x1045 () Bool)
(declare-fun x1000 () Int)
(declare-fun x839 () Int)
(declare-fun x915 () Int)
(declare-fun x100 () Int)
(declare-fun x431 () Bool)
(declare-fun x647 () x964)
(declare-fun x660 () Bool)
(declare-fun x852 () Bool)
(declare-fun x1129 () Int)
(declare-fun x354 () Bool)
(declare-fun x1127 () Int)
(declare-fun x1431 () Bool)
(declare-fun x86 () Bool)
(declare-fun x1128 () Int)
(declare-fun x494 () Int)
(declare-fun x739 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x620 () Int)
(declare-fun x356 () Int)
(declare-fun x1253 () Int)
(declare-fun x281 () Int)
(declare-fun x1372 () Bool)
(declare-fun x1281 () Int)
(declare-fun x922 () Bool)
(declare-fun x766 () x964)
(declare-fun x920 () Int)
(declare-fun x616 () Int)
(declare-fun x327 () x964)
(declare-fun x775 () Bool)
(declare-fun x382 () x964)
(declare-fun x398 () Int)
(declare-fun x609 () Int)
(declare-fun x979 (Int) Int)
(declare-fun x699 () Bool)
(declare-fun x163 () Int)
(declare-fun x1380 () Bool)
(declare-fun x170 () Bool)
(declare-fun x1107 () Int)
(declare-fun x349 () Int)
(declare-fun x1168 () Int)
(declare-fun x909 () Int)
(declare-fun x502 () Bool)
(declare-fun x1313 () Int)
(declare-fun x640 () Int)
(declare-fun x820 () Bool)
(declare-fun x1506 () x964)
(declare-fun x9 () Int)
(declare-fun x1389 () Bool)
(declare-fun x731 () Bool)
(declare-fun x61 () Bool)
(declare-fun x1328 () Int)
(declare-fun x987 () Int)
(declare-fun x1062 () Int)
(declare-fun x158 () x964)
(declare-fun x1337 (Int) Int)
(declare-fun x949 () Int)
(declare-fun x1073 () Int)
(declare-fun x708 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x592 () Bool)
(declare-fun x1511 () x964)
(declare-fun x1077 () x964)
(declare-fun x1211 () Bool)
(declare-fun x311 () x964)
(declare-fun x1123 () x964)
(declare-fun x872 () x964)
(declare-fun x658 () Int)
(declare-fun x1519 () Int)
(declare-fun x679 () Int)
(declare-fun x877 (x964) Int)
(declare-fun x985 () Int)
(declare-fun x323 () x964)
(declare-fun x412 () x964)
(declare-fun x1019 () Int)
(declare-fun x130 () Bool)
(declare-fun x961 () Bool)
(declare-fun x1369 () Bool)
(declare-fun x1011 () x964)
(declare-fun x104 () x964)
(declare-fun x1299 () Int)
(declare-fun x1278 () Int)
(declare-fun x1133 () Int)
(declare-fun x715 () x964)
(declare-fun x1076 () Int)
(declare-fun x8 () Bool)
(declare-fun x835 () x964)
(declare-fun x853 () Int)
(declare-fun x1497 () Int)
(declare-fun x87 () Bool)
(declare-fun x145 () Bool)
(declare-fun x895 () Int)
(declare-fun x1153 () Int)
(declare-fun x561 () x964)
(declare-fun x394 () Int)
(declare-fun x581 () Int)
(declare-fun x1344 () Int)
(declare-fun x843 () Int)
(declare-fun x724 () Bool)
(declare-fun x584 () Bool)
(declare-fun x186 () Int)
(declare-fun x1346 () Int)
(declare-fun x294 () Bool)
(declare-fun x991 () x964)
(declare-fun x1446 () Bool)
(declare-fun x217 () Int)
(declare-fun x1040 () Int)
(declare-fun x1350 () x964)
(declare-fun x1189 () Bool)
(declare-fun x226 () Bool)
(declare-fun x1184 () Int)
(declare-fun x493 () Bool)
(declare-fun x1385 () Int)
(declare-fun x790 () Int)
(declare-fun x809 () Bool)
(declare-fun x10 () Int)
(declare-fun x1493 () Int)
(declare-fun x999 () Int)
(declare-fun x478 () Int)
(declare-fun x666 (x964) Int)
(declare-fun x1494 (Int) Int)
(declare-fun x1316 () Bool)
(declare-fun x669 () Int)
(declare-fun x924 () Int)
(declare-fun x1037 () Int)
(declare-fun x210 () Bool)
(declare-fun x749 () Int)
(declare-fun x401 () Int)
(declare-fun x638 () Int)
(declare-fun x1118 () x964)
(declare-fun x831 () Bool)
(declare-fun x253 () Bool)
(declare-fun x1469 () Int)
(declare-fun x754 () Int)
(declare-fun x185 () Int)
(declare-fun x1404 () Int)
(declare-fun x1508 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x759 () Bool)
(declare-fun x1034 () x964)
(declare-fun x668 () x964)
(declare-fun x1499 () Int)
(declare-fun x648 (Int) Int)
(declare-fun x366 () Int)
(declare-fun x1359 () Int)
(declare-fun x1443 () Bool)
(declare-fun x438 () Bool)
(declare-fun x187 () Int)
(declare-fun x460 () Bool)
(declare-fun x72 () x964)
(declare-fun x1048 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x1185 (x964) Int)
(declare-fun x1140 () Int)
(declare-fun x1392 () Int)
(declare-fun x887 () Int)
(declare-fun x7 () Bool)
(declare-fun x1183 () x964)
(declare-fun x734 () Int)
(declare-fun x932 () Bool)
(declare-fun x1371 () Int)
(declare-fun x175 () Int)
(declare-fun x69 () Int)
(declare-fun x794 () Int)
(declare-fun x351 () Int)
(declare-fun x1245 () Int)
(declare-fun x1252 () Int)
(declare-fun x550 () Int)
(declare-fun x1104 () x964)
(declare-fun x850 () x964)
(declare-fun x578 () x964)
(declare-fun x396 () x964)
(declare-fun x791 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x630 () Bool)
(declare-fun x172 () Bool)
(declare-fun x888 () Int)
(declare-fun x1280 () Bool)
(declare-fun x919 () x964)
(declare-fun x477 () Int)
(declare-fun x27 () x964)
(declare-fun x684 () x964)
(declare-fun x337 () Int)
(declare-fun x364 () Int)
(declare-fun x405 () x964)
(declare-fun x1232 () Bool)
(declare-fun x318 () x964)
(declare-fun x755 () Int)
(declare-fun x1276 () Bool)
(declare-fun x1163 () x964)
(declare-fun x192 () Int)
(declare-fun x115 () Int)
(declare-fun x383 () Int)
(declare-fun x1159 () Int)
(declare-fun x650 () Bool)
(declare-fun x275 () Int)
(declare-fun x712 () Int)
(declare-fun x160 () Int)
(declare-fun x1349 () Int)
(declare-fun x1156 () Bool)
(declare-fun x519 () x964)
(declare-fun x1467 () Int)
(declare-fun x849 () Bool)
(declare-fun x602 () Int)
(declare-fun x1171 () Bool)
(declare-fun x1087 () Int)
(declare-fun x815 () Int)
(declare-fun x1364 () Bool)
(declare-fun x1115 () Int)
(declare-fun x1192 () Int)
(declare-fun x954 () Bool)
(declare-fun x194 () Bool)
(declare-fun x1335 () Int)
(declare-fun x914 () Int)
(declare-fun x36 () Int)
(declare-fun x132 () Bool)
(declare-fun x317 () Int)
(declare-fun x264 () Bool)
(declare-fun x1274 () Int)
(declare-fun x265 () Int)
(declare-fun x690 () Int)
(declare-fun x757 () Int)
(declare-fun x930 () Int)
(declare-fun x721 () x964)
(declare-fun x37 () x964)
(declare-fun x1033 () Int)
(declare-fun x500 () Int)
(declare-fun x246 () Bool)
(declare-fun x416 () Int)
(declare-fun x113 () Int)
(declare-fun x569 () x964)
(declare-fun x875 () Bool)
(declare-fun x1142 () Int)
(declare-fun x12 () x964)
(declare-fun x121 () x964)
(declare-fun x152 () Int)
(declare-fun x977 () x964)
(declare-fun x534 () Bool)
(declare-fun x953 () Bool)
(declare-fun x71 () Bool)
(declare-fun x247 () Bool)
(declare-fun x611 () Bool)
(declare-fun x727 () Bool)
(declare-fun x124 () x964)
(declare-fun x1420 () Int)
(declare-fun x330 () Bool)
(declare-fun x848 () x964)
(declare-fun x655 () Bool)
(declare-fun x276 () Int)
(declare-fun x776 () Bool)
(declare-fun x540 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x182 () Bool)
(declare-fun x14 () Bool)
(declare-fun x146 () Bool)
(declare-fun x828 () Int)
(declare-fun x567 () Bool)
(declare-fun x1262 () Int)
(declare-fun x859 () Int)
(declare-fun x1225 () x964)
(declare-fun x329 () Bool)
(declare-fun x882 () Int)
(declare-fun x580 () Int)
(declare-fun x1354 () Bool)
(declare-fun x1154 () Int)
(declare-fun x623 () Bool)
(declare-fun x1050 () x964)
(declare-fun x986 () Bool)
(declare-fun x612 (x964) Int)
(declare-fun x179 () Int)
(declare-fun x207 () x964)
(declare-fun x1412 () Bool)
(declare-fun x966 () x964)
(declare-fun x868 () Bool)
(declare-fun x780 () Int)
(declare-fun x1440 () Int)
(declare-fun x360 () Bool)
(declare-fun x1295 () Int)
(declare-fun x339 () Int)
(declare-fun x1099 () Int)
(declare-fun x102 () x964)
(declare-fun x320 () x964)
(declare-fun x997 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x1296 () Int)
(declare-fun x1070 () x964)
(declare-fun x262 () Bool)
(declare-fun x1065 () Bool)
(declare-fun x1419 () Int)
(declare-fun x135 () x964)
(declare-fun x63 () Bool)
(declare-fun x449 () Bool)
(declare-fun x740 () Int)
(declare-fun x553 () Int)
(declare-fun x363 () Int)
(declare-fun x212 () Int)
(declare-fun x558 () Int)
(declare-fun x559 () Int)
(declare-fun x417 () Int)
(declare-fun x1013 () Bool)
(declare-fun x631 (Int) Int)
(declare-fun x507 () Int)
(declare-fun x18 () Int)
(declare-fun x704 () Bool)
(declare-fun x334 () Int)
(declare-fun x1461 () Int)
(declare-fun x458 () Int)
(declare-fun x1402 () Bool)
(declare-fun x544 () Bool)
(declare-fun x302 () Bool)
(declare-fun x1514 () x964)
(declare-fun x971 () Int)
(declare-fun x823 () Int)
(declare-fun x274 () Bool)
(declare-fun x372 () Int)
(declare-fun x314 () x964)
(declare-fun x60 () Int)
(declare-fun x548 () Int)
(declare-fun x1210 () Int)
(declare-fun x549 () Int)
(declare-fun x1298 () Int)
(declare-fun x1286 () Int)
(declare-fun x747 (x964) Int)
(declare-fun x1059 () Bool)
(declare-fun x1357 () x964)
(declare-fun x443 () Bool)
(declare-fun x216 () Int)
(declare-fun x414 () Bool)
(declare-fun x324 () Int)
(declare-fun x547 () Int)
(declare-fun x1003 () Int)
(declare-fun x239 () Int)
(declare-fun x761 () Int)
(declare-fun x733 () Bool)
(declare-fun x1473 () Int)
(declare-fun x551 () Int)
(declare-fun x1361 () Int)
(declare-fun x1004 () Bool)
(declare-fun x31 () Int)
(declare-fun x711 () Int)
(declare-fun x342 () Int)
(declare-fun x1447 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x744 () Int)
(declare-fun x981 () Int)
(declare-fun x980 () Bool)
(declare-fun x415 () x964)
(declare-fun x696 () Int)
(declare-fun x657 () Bool)
(declare-fun x202 () Bool)
(declare-fun x410 () Bool)
(declare-fun x911 () x964)
(declare-fun x718 () Int)
(declare-fun x249 () Bool)
(declare-fun x164 () Bool)
(declare-fun x1147 () Int)
(declare-fun x67 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x381 () Int)
(declare-fun x803 () Int)
(declare-fun x671 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x555 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x6 () Int)
(declare-fun x88 () Bool)
(declare-fun x242 () x964)
(declare-fun x1288 () Bool)
(declare-fun x176 () Bool)
(declare-fun x588 () Bool)
(declare-fun x141 () Int)
(declare-fun x1169 () Bool)
(declare-fun x1244 () Int)
(declare-fun x517 () Bool)
(declare-fun x379 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x39 () Bool)
(declare-fun x673 () x964)
(declare-fun x171 (x964) Int)
(declare-fun x1400 () Bool)
(declare-fun x1067 () Int)
(declare-fun x1166 () Int)
(declare-fun x74 () Int)
(declare-fun x451 () Int)
(declare-fun x321 () Bool)
(declare-fun x1122 () Int)
(declare-fun x993 () x964)
(declare-fun x821 () Int)
(declare-fun x301 () x964)
(declare-fun x1231 () Int)
(declare-fun x571 () Int)
(declare-fun x508 () Int)
(declare-fun x1342 (x964) Int)
(declare-fun x200 () Int)
(declare-fun x1041 (Int) Int)
(declare-fun x573 () Int)
(declare-fun x183 () Bool)
(declare-fun x599 () Int)
(declare-fun x836 () Int)
(declare-fun x1329 () Int)
(declare-fun x1459 () Int)
(declare-fun x834 () Bool)
(declare-fun x1058 () x964)
(declare-fun x316 () Bool)
(declare-fun x470 (x964) Int)
(declare-fun x771 () Bool)
(declare-fun x173 () Int)
(declare-fun x444 () Bool)
(declare-fun x778 () Bool)
(declare-fun x703 () Int)
(declare-fun x1167 () Int)
(declare-fun x147 () Int)
(declare-fun x40 () Int)
(declare-fun x1318 () Bool)
(declare-fun x1451 () Int)
(declare-fun x1309 () Int)
(declare-fun x564 () Bool)
(declare-fun x441 () Int)
(declare-fun x353 () Int)
(declare-fun x568 () x964)
(declare-fun x1292 () Int)
(declare-fun x47 () Int)
(declare-fun x883 () Int)
(declare-fun x990 () Int)
(declare-fun x1053 () Int)
(declare-fun x1015 () Bool)
(declare-fun x499 () x964)
(declare-fun x466 () Int)
(declare-fun x153 () Bool)
(declare-fun x651 () Int)
(declare-fun x1109 () Bool)
(declare-fun x271 () Int)
(declare-fun x335 () Int)
(declare-fun x196 () x964)
(declare-fun x1023 () Bool)
(declare-fun x1379 () Int)
(declare-fun x62 () x964)
(declare-fun x390 () Int)
(declare-fun x421 () x964)
(declare-fun x273 () Int)
(declare-fun x867 () Int)
(declare-fun x1377 () Bool)
(declare-fun x844 () Bool)
(declare-fun x309 () x964)
(declare-fun x533 () Bool)
(declare-fun x490 () Bool)
(declare-fun x1398 () x964)
(declare-fun x902 () Bool)
(declare-fun x665 () Int)
(declare-fun x1030 () x964)
(declare-fun x591 () Int)
(declare-fun x231 () x964)
(declare-fun x618 () Bool)
(declare-fun x1246 () x964)
(declare-fun x1162 () Int)
(declare-fun x420 () x964)
(declare-fun x126 () Bool)
(declare-fun x1488 () Int)
(declare-fun x453 () Bool)
(declare-fun x994 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x1444 () x964)
(declare-fun x625 () Int)
(declare-fun x1209 () Int)
(declare-fun x439 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x471 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x535 () Int)
(declare-fun x474 () Int)
(declare-fun x926 () Int)
(declare-fun x65 () x964)
(declare-fun x1405 () x964)
(declare-fun x128 () Int)
(declare-fun x215 () Int)
(declare-fun x269 () Int)
(declare-fun x1339 () Int)
(declare-fun x166 () Int)
(declare-fun x1092 () Int)
(declare-fun x1455 () x964)
(declare-fun x252 () Int)
(declare-fun x1428 () Int)
(declare-fun x1213 () x964)
(declare-fun x487 () x964)
(declare-fun x42 () Int)
(declare-fun x286 () Int)
(declare-fun x593 () Bool)
(declare-fun x560 () Bool)
(declare-fun x1333 () Int)
(declare-fun x538 (Int) Int)
(declare-fun x1332 () Int)
(declare-fun x522 () Int)
(declare-fun x305 () Bool)
(declare-fun x22 () Bool)
(declare-fun x1180 () Int)
(declare-fun x1222 () x964)
(declare-fun x1426 () Int)
(declare-fun x965 () x964)
(declare-fun x159 () Int)
(declare-fun x570 () x964)
(declare-fun x1032 () Int)
(declare-fun x1501 () Int)
(declare-fun x975 () Bool)
(declare-fun x1432 (Int) Int)
(declare-fun x307 () Bool)
(declare-fun x889 () Bool)
(declare-fun x1302 () x964)
(declare-fun x1516 () Bool)
(declare-fun x1119 () Int)
(declare-fun x1317 () Int)
(declare-fun x988 () Int)
(declare-fun x597 () Bool)
(declare-fun x1008 () x964)
(declare-fun x880 () Bool)
(declare-fun x303 () Bool)
(declare-fun x589 () Int)
(declare-fun x1510 () Bool)
(declare-fun x108 () Int)
(declare-fun x737 () Bool)
(declare-fun x89 (x964) Int)
(declare-fun x774 () Int)
(declare-fun x765 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x1490 (Int) Int)
(declare-fun x992 () Int)
(declare-fun x1321 () Bool)
(declare-fun x1367 () Int)
(declare-fun x111 () Bool)
(declare-fun x468 () Int)
(declare-fun x1174 () Int)
(declare-fun x426 () Bool)
(declare-fun x529 () Int)
(declare-fun x896 () Bool)
(declare-fun x822 () Int)
(declare-fun x34 () Int)
(declare-fun x674 () Int)
(declare-fun x94 () Int)
(declare-fun x716 () Bool)
(declare-fun x96 () Int)
(declare-fun x545 () Bool)
(declare-fun x1044 () Int)
(declare-fun x19 () Bool)
(declare-fun x582 () Int)
(declare-fun x521 () Int)
(declare-fun x13 () Bool)
(declare-fun x1202 () Int)
(declare-fun x861 () Int)
(declare-fun x1117 () Int)
(declare-fun x1269 () Int)
(declare-fun x105 () Int)
(declare-fun x413 () Int)
(declare-fun x955 () Int)
(declare-fun x878 (x964) Int)
(declare-fun x28 () Int)
(declare-fun x1121 () Int)
(declare-fun x513 () x964)
(declare-fun x433 () Bool)
(declare-fun x385 () Int)
(declare-fun x338 () Int)
(declare-fun x174 () Int)
(declare-fun x322 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x267 () Bool)
(declare-fun x169 () Int)
(declare-fun x1120 () Int)
(declare-fun x107 () Int)
(declare-fun x1260 () Int)
(declare-fun x783 () Int)
(declare-fun x722 () x964)
(declare-fun x1085 () Int)
(declare-fun x429 () Bool)
(declare-fun x1110 () x964)
(declare-fun x586 () x964)
(declare-fun x406 () Bool)
(declare-fun x300 () Int)
(declare-fun x863 () Int)
(declare-fun x397 () Int)
(declare-fun x989 () Int)
(declare-fun x1387 (x964) Int)
(declare-fun x805 () x964)
(declare-fun x702 () x964)
(declare-fun x626 () Int)
(declare-fun x1481 () Int)
(declare-fun x156 () Int)
(declare-fun x1368 () Bool)
(declare-fun x996 () Bool)
(declare-fun x585 () Int)
(declare-fun x874 () Int)
(declare-fun x1236 () Int)
(declare-fun x1251 () Int)
(declare-fun x1363 () Int)
(declare-fun x134 () Bool)
(declare-fun x1507 () Int)
(declare-fun x432 () Int)
(declare-fun x241 () Int)
(declare-fun x1228 () Bool)
(declare-fun x1462 () Int)
(declare-fun x827 () Bool)
(declare-fun x1370 (Int) Int)
(declare-fun x613 () Int)
(declare-fun x456 () Bool)
(declare-fun x652 () Int)
(declare-fun x437 () Int)
(declare-fun x376 () Int)
(declare-fun x951 () Int)
(declare-fun x35 () Bool)
(declare-fun x143 () Bool)
(declare-fun x1224 () Int)
(declare-fun x931 () x964)
(declare-fun x1136 () Int)
(declare-fun x818 () Int)
(declare-fun x606 () x964)
(declare-fun x537 () Int)
(declare-fun x677 () Int)
(declare-fun x1215 () x964)
(declare-fun x539 () x964)
(declare-fun x503 () Int)
(declare-fun x312 () Int)
(declare-fun x627 () Int)
(declare-fun x272 () Bool)
(declare-fun x917 () Bool)
(declare-fun x1143 () Int)
(declare-fun x841 () x964)
(declare-fun x1216 () Bool)
(declare-fun x206 () Bool)
(declare-fun x118 () Bool)
(declare-fun x1207 () Int)
(declare-fun x343 () x964)
(declare-fun x1021 () Int)
(declare-fun x424 () Bool)
(declare-fun x250 () Int)
(declare-fun x1088 () Int)
(declare-fun x579 () x964)
(declare-fun x1031 () Bool)
(declare-fun x1100 () x964)
(declare-fun x81 () x964)
(declare-fun x824 () Int)
(declare-fun x486 () Int)
(declare-fun x1355 () x964)
(declare-fun x1384 () Bool)
(declare-fun x1248 () Int)
(declare-fun x968 () Int)
(declare-fun x90 () Int)
(declare-fun x1458 () Int)
(declare-fun x1196 () Int)
(declare-fun x1492 () Int)
(declare-fun x894 () Int)
(declare-fun x536 () Int)
(declare-fun x667 () Bool)
(declare-fun x687 () Int)
(declare-fun x575 () Int)
(declare-fun x122 () Int)
(declare-fun x830 () Bool)
(declare-fun x256 () Int)
(declare-fun x497 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x198 () x964)
(declare-fun x213 () Bool)
(declare-fun x1173 (x964) Int)
(declare-fun x336 () Int)
(declare-fun x789 () Bool)
(declare-fun x812 () Bool)
(declare-fun x947 () Int)
(declare-fun x1051 () x964)
(declare-fun x68 () x964)
(declare-fun x970 () x964)
(declare-fun x1315 () Int)
(declare-fun x296 () Int)
(declare-fun x1012 () x964)
(declare-fun x332 () Int)
(declare-fun x1131 () Bool)
(declare-fun x270 () Int)
(declare-fun x1343 () Int)
(declare-fun x26 () Bool)
(declare-fun x615 () Int)
(declare-fun x1517 () Bool)
(declare-fun x653 () Int)
(declare-fun x511 () Bool)
(declare-fun x644 () Int)
(declare-fun x448 () Int)
(declare-fun x974 () Int)
(declare-fun x691 () Int)
(declare-fun x956 () Int)
(declare-fun x1505 () Bool)
(declare-fun x219 () Bool)
(declare-fun x785 () Int)
(declare-fun x110 () Bool)
(declare-fun x976 () Int)
(declare-fun x1375 () Bool)
(declare-fun x1220 () x964)
(declare-fun x1055 () Bool)
(declare-fun x82 () Bool)
(declare-fun x285 () Bool)
(declare-fun x913 () Int)
(declare-fun x958 () Int)
(declare-fun x109 () Bool)
(declare-fun x259 () Int)
(declare-fun x891 () Int)
(declare-fun x495 () Bool)
(declare-fun x866 () Bool)
(declare-fun x523 () x964)
(declare-fun x370 () Int)
(declare-fun x594 () Int)
(declare-fun x177 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x692 () Bool)
(declare-fun x1482 () Int)
(declare-fun x1474 () Int)
(declare-fun x1028 () Int)
(declare-fun x1052 () x964)
(declare-fun x1294 (Int) Int)
(declare-fun x1487 () Bool)
(declare-fun x512 (x964) Int)
(declare-fun x446 () Int)
(declare-fun x1498 () x964)
(declare-fun x845 () Bool)
(declare-fun x1080 () x964)
(declare-fun x1179 () Int)
(declare-fun x1103 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x645 () Int)
(declare-fun x908 () x964)
(declare-fun x1300 () Int)
(declare-fun x1010 () Int)
(declare-fun x1203 () x964)
(declare-fun x120 () Int)
(declare-fun x829 () Int)
(declare-fun x304 () Int)
(declare-fun x461 () Int)
(declare-fun x1237 () Bool)
(declare-fun x1039 (Int Int) Int)
(declare-fun x873 () Bool)
(declare-fun x1418 () Int)
(declare-fun x1257 () Bool)
(declare-fun x1471 () Int)
(declare-fun x1172 () Int)
(declare-fun x574 () Bool)
(declare-fun x642 () Int)
(declare-fun x315 () x964)
(declare-fun x1416 () Bool)
(declare-fun x59 () Int)
(declare-fun x925 () Bool)
(declare-fun x697 () Int)
(declare-fun x813 () Int)
(declare-fun x233 () Int)
(declare-fun x205 () Int)
(declare-fun x881 () Int)
(declare-fun x491 () Bool)
(declare-fun x17 () Int)
(declare-fun x840 () Int)
(declare-fun x125 () Bool)
(declare-fun x384 () Int)
(declare-fun x268 () Bool)
(declare-fun x688 () Int)
(declare-fun x464 () x964)
(declare-fun x20 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x404 () Bool)
(declare-fun x1135 () Int)
(declare-fun x238 () Int)
(declare-fun x635 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x595 (Int) Int)
(declare-fun x1373 () Bool)
(declare-fun x123 () Bool)
(declare-fun x280 () x964)
(declare-fun x93 () x964)
(declare-fun x1057 () Bool)
(declare-fun x409 () Bool)
(declare-fun x797 () Int)
(declare-fun x298 () x964)
(declare-fun x1160 () Int)
(declare-fun x566 () Int)
(declare-fun x459 () Bool)
(declare-fun x255 () Int)
(declare-fun x232 () Int)
(declare-fun x912 () x964)
(declare-fun x1176 () Bool)
(declare-fun x371 () Int)
(declare-fun x656 () Int)
(declare-fun x531 () Bool)
(declare-fun x228 () Int)
(declare-fun x445 () x964)
(declare-fun x347 () Int)
(declare-fun x1483 () Int)
(declare-fun x1177 () Int)
(declare-fun x923 () Int)
(declare-fun x483 () Bool)
(declare-fun x44 () Int)
(declare-fun x800 () Bool)
(declare-fun x1479 () Int)
(declare-fun x1277 () Bool)
(declare-fun x98 () Bool)
(declare-fun x792 () x964)
(declare-fun x732 () Bool)
(declare-fun x76 () Bool)
(declare-fun x1254 () Int)
(declare-fun x476 () Bool)
(declare-fun x1061 () Int)
(declare-fun x1478 (Int) Int)
(declare-fun x1134 () Bool)
(declare-fun x819 () x964)
(declare-fun x621 () Bool)
(declare-fun x995 () Int)
(declare-fun x838 () Bool)
(declare-fun x1125 () Int)
(declare-fun x15 () x964)
(declare-fun x1304 () Int)
(declare-fun x1480 () Bool)
(declare-fun x127 () Bool)
(declare-fun x865 () Int)
(declare-fun x423 () Int)
(declare-fun x155 (x964) Int)
(declare-fun x1178 () Int)
(declare-fun x779 () Int)
(declare-fun x1247 () Int)
(declare-fun x1017 () Bool)
(declare-fun x735 () x964)
(declare-fun x1235 () Int)
(declare-fun x518 () Int)
(declare-fun x643 () Int)
(declare-fun x723 () x964)
(declare-fun x1006 () Bool)
(declare-fun x344 () Int)
(declare-fun x151 () Bool)
(declare-fun x4 (Int) Int)
(declare-fun x462 () Int)
(declare-fun x1042 () Bool)
(declare-fun x103 () Int)
(declare-fun x388 () Int)
(declare-fun x1186 () Int)
(declare-fun x769 () x964)
(declare-fun x1453 () Int)
(declare-fun x313 () Bool)
(declare-fun x136 () Int)
(declare-fun x1448 () x964)
(declare-fun x847 () Int)
(declare-fun x1509 () x964)
(declare-fun x1145 () Int)
(declare-fun x1063 () Int)
(declare-fun x380 () Int)
(declare-fun x287 () Bool)
(declare-fun x619 () Bool)
(declare-fun x1242 () Int)
(declare-fun x1272 () Int)
(declare-fun x473 () Int)
(declare-fun x1285 () Bool)
(declare-fun x30 () Bool)
(declare-fun x1151 () Int)
(declare-fun x1303 () Bool)
(declare-fun x885 () Int)
(declare-fun x1124 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x855 () x964)
(declare-fun x408 () Int)
(declare-fun x856 () Bool)
(declare-fun x1221 () Int)
(declare-fun x236 () Int)
(declare-fun x957 () Int)
(declare-fun x948 () x964)
(declare-fun x1148 () Int)
(declare-fun x373 () Bool)
(declare-fun x938 () Int)
(declare-fun x935 () Int)
(declare-fun x73 () Int)
(declare-fun x685 () Int)
(declare-fun x661 () Bool)
(declare-fun x189 () Bool)
(declare-fun x946 () x964)
(declare-fun x154 () Int)
(declare-fun x1090 () x964)
(declare-fun x1089 () Int)
(declare-fun x1297 (Int) Int)
(declare-fun x1264 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x1047 () Int)
(declare-fun x641 () Int)
(declare-fun x1170 (x964) Int)
(declare-fun x1319 () Bool)
(declare-fun x243 () Bool)
(declare-fun x2 () Bool)
(declare-fun x70 () x964)
(declare-fun x75 () x964)
(declare-fun x636 () Bool)
(declare-fun x629 () Int)
(declare-fun x240 () x964)
(declare-fun x457 () Int)
(declare-fun x341 () Int)
(declare-fun x1014 () Int)
(declare-fun x945 () Bool)
(declare-fun x750 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x662 () Int)
(declare-fun x1347 () Bool)
(declare-fun x199 () Int)
(declare-fun x101 () Bool)
(declare-fun x637 () Int)
(declare-fun x411 () Int)
(declare-fun x719 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x492 () Int)
(declare-fun x235 () Bool)
(declare-fun x348 () Int)
(declare-fun x452 () Bool)
(declare-fun x220 () x964)
(declare-fun x137 () Int)
(declare-fun x1256 () Bool)
(declare-fun x1305 () Int)
(declare-fun x1175 () Int)
(declare-fun x1291 () Int)
(declare-fun x1395 () Int)
(declare-fun x1233 () Bool)
(declare-fun x244 () Bool)
(declare-fun x1075 () Int)
(declare-fun x682 () Int)
(declare-fun x639 () x964)
(declare-fun x41 () Int)
(declare-fun x787 () x964)
(declare-fun x941 (Int) Int)
(declare-fun x1512 () x964)
(declare-fun x713 () x964)
(declare-fun x258 () Int)
(declare-fun x900 () Int)
(declare-fun x826 () Bool)
(declare-fun x886 (x964) Int)
(declare-fun x1218 () Int)
(declare-fun x1450 () Bool)
(declare-fun x748 () Int)
(declare-fun x725 () Bool)
(declare-fun x509 () Bool)
(declare-fun x1157 () Int)
(declare-fun x1452 () Int)
(declare-fun x1165 () x964)
(declare-fun x261 () Int)
(declare-fun x139 () Int)
(declare-fun x937 () x964)
(declare-fun x222 () Int)
(declare-fun x1391 () Int)
(declare-fun x77 () Int)
(declare-fun x299 () Int)
(declare-fun x288 () Bool)
(declare-fun x24 () Int)
(declare-fun x742 () x964)
(declare-fun x633 () x964)
(declare-fun x777 () Bool)
(declare-fun x1029 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x751 () Bool)
(declare-fun x1513 () Int)
(declare-fun x48 () Int)
(declare-fun x1193 () Int)
(declare-fun x254 () Int)
(declare-fun x295 () Int)
(declare-fun x524 () Bool)
(declare-fun x475 () Int)
(declare-fun x1182 () Int)
(declare-fun x1399 () Int)
(declare-fun x916 () Int)
(declare-fun x782 () Int)
(declare-fun x1408 () Int)
(declare-fun x1348 () Bool)
(declare-fun x346 () Bool)
(declare-fun x1002 () Int)
(declare-fun x1230 () Int)
(declare-fun x554 () x964)
(declare-fun x496 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x1484 () x964)
(declare-fun x289 () Bool)
(declare-fun x1079 () Int)
(declare-fun x869 () Int)
(declare-fun x472 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x978 () x964)
(declare-fun x928 () Bool)
(declare-fun x603 () x964)
(declare-fun x526 () Int)
(declare-fun x903 () Bool)
(declare-fun x1144 () Int)
(declare-fun x148 () Bool)
(declare-fun x142 () Bool)
(declare-fun x218 () Int)
(declare-fun x1214 () Int)
(declare-fun x1241 () Bool)
(declare-fun x368 () Int)
(declare-fun x1130 () x964)
(declare-fun x807 () x964)
(declare-fun x1376 (Int) x964)
(declare-fun x467 () Int)
(declare-fun x1503 () Int)
(declare-fun x469 () Int)
(declare-fun x224 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x1456 () Int)
(declare-fun x910 () Int)
(declare-fun x1054 () Int)
(declare-fun x180 () Int)
(declare-fun x1022 (x964) Int)
(declare-fun x1388 () Int)
(declare-fun x197 () Int)
(declare-fun x904 (x964) Int)
(declare-fun x1083 () Bool)
(declare-fun x890 () Int)
(declare-fun x188 () x964)
(declare-fun x407 () Int)
(declare-fun x728 () Int)
(declare-fun x306 () Int)
(declare-fun x1424 () Int)
(declare-fun x802 () Bool)
(declare-fun x858 () Int)
(declare-fun x960 () Int)
(declare-fun x1306 () Bool)
(declare-fun x984 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x133 () x964)
(declare-fun x1390 () Bool)
(declare-fun x730 () Int)
(declare-fun x884 () Bool)
(declare-fun x762 () x964)
(declare-fun x184 () Bool)
(declare-fun x214 () x964)
(declare-fun x501 () Int)
(declare-fun x1205 () x964)
(declare-fun x278 () Bool)
(declare-fun x1161 (Int) Int)
(declare-fun x857 () Int)
(declare-fun x319 () Int)
(declare-fun x664 () Bool)
(declare-fun x736 () Bool)
(declare-fun x505 () Int)
(declare-fun x906 () Bool)
(declare-fun x1069 () Int)
(declare-fun x814 () Int)
(declare-fun x556 () x964)
(declare-fun x793 () Int)
(declare-fun x898 (Int) Int)
(declare-fun x1464 () x964)
(declare-fun x741 () Int)
(declare-fun x532 () Bool)
(declare-fun x1378 () x964)
(declare-fun x430 () Int)
(declare-fun x1068 () Int)
(declare-fun x95 () Int)
(declare-fun x1 () Int)
(declare-fun x1454 () Bool)
(declare-fun x1331 () x964)
(declare-fun x237 () Int)
(declare-fun x1429 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x119 () Int)
(declare-fun x576 () Bool)
(declare-fun x1266 () Int)
(declare-fun x1475 () Int)
(declare-fun x530 () Bool)
(declare-fun x447 () Int)
(declare-fun x1417 () Int)
(declare-fun x939 () Int)
(declare-fun x1158 () Int)
(declare-fun x1155 () Bool)
(declare-fun x297 () Int)
(declare-fun x808 () Int)
(declare-fun x795 () x964)
(declare-fun x1111 () Bool)
(declare-fun x709 () Bool)
(declare-fun x201 () Bool)
(declare-fun x1502 () x964)
(declare-fun x357 () Bool)
(declare-fun x969 () Bool)
(declare-fun x663 () Bool)
(declare-fun x435 () x964)
(declare-fun x442 () Bool)
(declare-fun x79 () Int)
(declare-fun x1259 () Int)
(declare-fun x1016 () x964)
(declare-fun x1330 () Bool)
(declare-fun x1188 () Int)
(declare-fun x901 () Int)
(declare-fun x293 () Int)
(declare-fun x325 () Bool)
(declare-fun x1082 () Int)
(declare-fun x359 () Int)
(declare-fun x1334 () Int)
(declare-fun x510 () Int)
(declare-fun x395 () Int)
(declare-fun x520 () x964)
(declare-fun x266 () Int)
(declare-fun x608 () Int)
(declare-fun x463 () Int)
(declare-fun x1457 () Bool)
(declare-fun x701 (x964) Int)
(declare-fun x753 () Int)
(declare-fun x248 () Bool)
(declare-fun x767 () Int)
(declare-fun x705 () Bool)
(declare-fun x1020 () Int)
(declare-fun x983 () Int)
(declare-fun x799 () Bool)
(declare-fun x481 () Int)
(declare-fun x943 () Bool)
(declare-fun x1226 () x964)
(declare-fun x1308 () Int)
(declare-fun x605 () Bool)
(declare-fun x729 () Int)
(declare-fun x825 () Int)
(declare-fun x352 () x964)
(declare-fun x399 () x964)
(define-fun x851 ((x964 x964) (x195 Int)) x964 (ite ((_ is x871) x964) (x871 (x541 x964) (+ x195 (x693 x964))) (ite ((_ is x587) x964) (x587 (x422 x964) (x514 x964) (+ (x1018 x964) x195)) (x860 (+ (x1108 x964) x195)))))
(define-fun x204 ((x773 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x773) (<= 0 x773)) x773 (- x773 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1293 ((x773 Int)) Int (ite (and (>= x773 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x773 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x773) x773))
(define-fun x786 ((x1201 Int)) Bool (and (< x1201 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1201)))
(define-fun x1105 ((x1201 Int)) Bool (and (= (x1114 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1201) x1201) (= (x1114 x1201 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1201)))
(define-fun x391 ((x1201 Int)) Bool (and (= (x1114 0 x1201) 0) (= 0 (x1114 x1201 0))))
(define-fun x525 ((x1201 Int)) Bool (= (x1114 x1201 x1201) x1201))
(define-fun x817 ((x1201 Int)) Bool (and (x525 x1201) (x1105 x1201) (x391 x1201)))
(define-fun x450 ((x1201 Int)) Bool (= (x1114 1461501637330902918203684832716283019655932542975 x1201) (x1114 1461501637330902918203684832716283019655932542975 (x1114 1461501637330902918203684832716283019655932542975 x1201))))
(define-fun x403 ((x1201 Int)) Bool (=> (and (>= x1201 0) (> 1461501637330902918203684832716283019655932542976 x1201)) (= x1201 (x1114 1461501637330902918203684832716283019655932542975 x1201))))
(define-fun x982 ((x1201 Int)) Bool (=> (= (x1114 1461501637330902918203684832716283019655932542975 x1201) x1201) (and (>= x1201 0) (> 1461501637330902918203684832716283019655932542976 x1201))))
(define-fun x610 ((x1201 Int)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x1201) (<= 1461501637330902918203684832716283019655932542976 x1201)) (= (x1114 1461501637330902918203684832716283019655932542975 x1201) (- x1201 1461501637330902918203684832716283019655932542976))))
(define-fun x1470 ((x1201 Int) (x1199 Int)) Bool (and (= (+ (* x1199 1461501637330902918203684832716283019655932542976) (x1114 1461501637330902918203684832716283019655932542975 x1201)) x1201) (>= x1199 0)))
(define-fun x1275 ((x1201 Int) (x1485 Int)) Bool (and (x610 x1201) (x1470 x1201 x1485) (x403 x1201) (x982 x1201) (x450 x1201)))
(define-fun x601 ((x1201 Int) (x1199 Int)) Bool (= (x1114 x1199 x1201) (x1114 x1201 x1199)))
(define-fun x386 ((x1201 Int) (x1199 Int)) Bool (and (=> (>= x1201 0) (<= (x1114 x1201 x1199) x1201)) (=> (>= x1199 0) (>= x1199 (x1114 x1201 x1199))) (>= (x1114 x1201 x1199) 0)))
(define-fun x340 ((x1201 Int) (x1199 Int)) Bool (and (x386 x1201 x1199) (x601 x1201 x1199)))
(define-fun x23 ((x1201 Int) (x1485 Int)) Bool (and (x1275 x1201 x1485) (x340 x1201 1461501637330902918203684832716283019655932542975)))
(define-fun x378 ((x1201 Int)) Bool (= (x1114 26959946667150639794667015087019630673637144422540572481103610249215 (x1114 26959946667150639794667015087019630673637144422540572481103610249215 x1201)) (x1114 26959946667150639794667015087019630673637144422540572481103610249215 x1201)))
(define-fun x1263 ((x1201 Int)) Bool (=> (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x1201) (<= 0 x1201)) (= x1201 (x1114 26959946667150639794667015087019630673637144422540572481103610249215 x1201))))
(define-fun x284 ((x1201 Int)) Bool (=> (= (x1114 26959946667150639794667015087019630673637144422540572481103610249215 x1201) x1201) (and (>= x1201 0) (< x1201 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x1472 ((x1201 Int)) Bool (=> (and (< x1201 53919893334301279589334030174039261347274288845081144962207220498432) (>= x1201 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x1114 26959946667150639794667015087019630673637144422540572481103610249215 x1201) (- x1201 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x400 ((x1201 Int) (x1199 Int)) Bool (and (= x1201 (+ (* x1199 26959946667150639794667015087019630673637144422540572481103610249216) (x1114 26959946667150639794667015087019630673637144422540572481103610249215 x1201))) (<= 0 x1199)))
(define-fun x1250 ((x1201 Int) (x1485 Int)) Bool (and (x378 x1201) (x1472 x1201) (x284 x1201) (x400 x1201 x1485) (x1263 x1201)))
(define-fun x1066 ((x1201 Int) (x1485 Int)) Bool (and (x340 x1201 26959946667150639794667015087019630673637144422540572481103610249215) (x1250 x1201 x1485)))
(define-fun x434 ((x1201 Int)) Bool (= (x1114 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1201) (x1114 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1114 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1201))))
(define-fun x515 ((x1201 Int)) Bool (=> (and (< x1201 32) (>= x1201 0)) (= 0 (x1114 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1201))))
(define-fun x282 ((x1201 Int) (x1199 Int) (x936 Int) (x583 Int)) Bool (and (< x1199 32) (>= x583 0) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x936) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x583) x1199 (* x936 32)) x1201) (<= 0 x1199) (= (* 32 x936) (x1114 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1201)) (>= x936 0) (< x583 1)))
(define-fun x1217 ((x1201 Int) (x683 Int) (x1097 Int) (x1195 Int)) Bool (and (x282 x1201 x683 x1097 x1195) (x434 x1201) (x515 x1201)))
(define-fun x387 ((x1201 Int) (x683 Int) (x1097 Int) (x1195 Int)) Bool (and (x340 x1201 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1217 x1201 x683 x1097 x1195)))
(define-fun x726 ((x209 Int)) Int (x1494 x209))
(define-fun x659 ((x209 Int)) Int (ite (= 128 x209) x1467 (x4 x209)))
(define-fun x365 ((x209 Int)) Int (ite (and (>= x209 160) (> (+ x461 160) x209)) (x1494 (+ x1298 (- x209 160))) (x659 x209)))
(define-fun x106 ((x209 Int)) Int (ite (= x197 x209) 0 (x365 x209)))
(define-fun x798 ((x209 Int)) Int (ite (and (< x209 (+ x828 x1146)) (<= x1146 x209)) (x1494 (+ x846 (- x209 x1146))) (x973 x209)))
(define-fun x1381 ((x209 x964)) Int (ite (= x908 x209) x981 (x1387 x209)))
(define-fun x440 ((x209 x964)) Int (ite (= x513 x209) x981 (x1387 x209)))
(define-fun x64 ((x209 x964)) Int (ite (= x220 x209) x981 (x747 x209)))
(define-fun x1005 ((x209 x964)) Int (ite (= x396 x209) x981 (x747 x209)))
(define-fun x1112 ((x209 x964)) Int (ite (and x20 x123) (x747 x209) (ite (and x621 x661) (x1387 x209) (ite (and x1348 (not x567)) (x64 x209) (x1005 x209)))))
(define-fun x934 ((x209 x964)) Int (ite (= x1355 x209) x462 (x1170 x209)))
(define-fun x1441 ((x209 x964)) Int (ite (= x816 x209) x1307 (x1022 x209)))
(define-fun x38 ((x209 x964)) Int (ite (and (not x567) x1348) (x1441 x209) (x1022 x209)))
(define-fun x1027 ((x209 x964)) Int (ite (and x20 x123) (x1022 x209) (ite (and x661 x621) (x1170 x209) (x38 x209))))
(define-fun x1374 ((x209 x964)) Int (ite (= x1484 x209) x136 (x512 x209)))
(define-fun x1466 ((x209 x964)) Int (ite (= x209 x102) x217 (x557 x209)))
(define-fun x369 ((x209 x964)) Int (ite (and x123 x20) (x557 x209) (ite (and x661 x621) (x512 x209) (ite (and x1139 x1348) (x557 x209) (x1466 x209)))))
(define-fun x326 ((x209 x964)) Int (ite (= x188 x209) x981 (x904 x209)))
(define-fun x1279 ((x209 x964)) Int (ite (= x684 x209) x981 (x904 x209)))
(define-fun x1198 ((x209 x964)) Int (ite (= x1011 x209) x981 (x904 x209)))
(define-fun x1396 ((x209 x964)) Int (ite (= x1052 x209) x981 (x878 x209)))
(define-fun x161 ((x209 x964)) Int (ite (= x769 x209) x981 (x878 x209)))
(define-fun x465 ((x209 x964)) Int (ite (= x209 x675) x981 (x878 x209)))
(define-fun x504 ((x209 x964)) Int (ite (and x20 x123) (x878 x209) (ite (and x621 x661) (x904 x209) (ite (and x902 (not x844) (not x1060)) (x1396 x209) (ite (and (not x1060) x902 x844) (x161 x209) (x465 x209))))))
(define-fun x291 ((x209 x964)) Int (ite (= x209 x49) x408 (x402 x209)))
(define-fun x245 ((x209 x964)) Int (ite (= x209 x762) x960 (x171 x209)))
(define-fun x290 ((x209 x964)) Int (ite (= x240 x209) 0 (x155 x209)))
(define-fun x624 ((x209 x964)) Int (ite (and (not x646) x1171 x725) (x155 x209) (ite (and (not x725) x1171) (x612 x209) (x290 x209))))
(define-fun x1436 ((x209 x964)) Int (ite (= x209 x421) x178 (x89 x209)))
(define-fun x1025 ((x209 x964)) Int (ite (= x209 x298) x891 (x666 x209)))
(define-fun x1094 ((x209 x964)) Int (ite (and x902 (not x844) (not x1060)) (x1025 x209) (x666 x209)))
(define-fun x308 ((x209 x964)) Int (ite (= x209 x1357) 0 (x470 x209)))
(define-fun x85 ((x209 x964)) Int (ite (and (not x646) x725 x1171) (x470 x209) (ite (and (not x725) x1171) (x886 x209) (x308 x209))))
(define-fun x952 ((x209 x964)) Int (ite (= x420 x209) 0 (x85 x209)))
(define-fun x1258 ((x209 Int)) Int (ite (= x209 x510) x1142 (x1323 x209)))
(define-fun x480 ((x209 Int)) Int (ite (= x209 x47) x1127 (x1258 x209)))
(define-fun x57 ((x209 Int)) Int (ite (and x1006 x1389) (x1323 x209) (x480 x209)))
(define-fun x292 ((x209 Int)) Int (ite (= x209 x1419) x1410 (x57 x209)))
(define-fun x355 ((x209 Int)) Int (ite (= x157 x209) x955 (x707 x209)))
(define-fun x1229 ((x209 Int)) Int (ite (= x209 x1019) x380 (x1072 x209)))
(define-fun x1200 ((x209 Int)) Int (ite (= x1153 x209) x212 (x1229 x209)))
(define-fun x921 ((x209 Int)) Int (ite (and x902 (not x844) (not x1060)) (x1200 x209) (ite (and (not x1060) x844 x902) (x1200 x209) (x1072 x209))))
(define-fun x1382 ((x209 Int)) Int (ite (= x209 x691) x1188 (x921 x209)))
(define-fun x191 ((x209 Int)) Int (ite (= x209 x949) x55 (x806 x209)))
(define-fun x546 ((x209 Int)) Int (ite (and (not x1137) x576 (not x1048) x1348) (x806 x209) (ite (and (not x576) (not x1048) x1348) (x1500 x209) (x191 x209))))
(define-fun x1468 ((x209 Int)) Int (ite (and x123 x20) (x1072 x209) (ite (and x621 x661) (x1323 x209) (ite (and (not x1048) x1348) (x546 x209) (x1500 x209)))))
(define-fun x590 ((x209 Int)) Int (ite (= x209 x783) x1151 (x1468 x209)))
(define-fun x1314 ((x209 Int)) Int (ite (= x209 x295) x44 (x590 x209)))
(define-fun x804 ((x209 Int)) Int (ite (= x626 x209) x985 (x1314 x209)))
(define-fun x80 ((x209 Int)) Int (ite (= x913 x209) x1351 (x804 x209)))
(define-fun x600 ((x209 Int)) Int (ite (= x209 x814) 32 (x80 x209)))
(define-fun x810 ((x209 Int)) Int (ite (= x209 x175) x1116 (x1478 x209)))
(define-fun x484 ((x209 Int)) Int (ite (= x653 x209) 0 (x1370 x209)))
(define-fun x1138 ((x209 Int)) Int (ite (= 0 x209) 1 (x1294 x209)))
(define-fun x114 ((x209 Int)) Int (ite (= x209 0) 1 (x1294 x209)))
(define-fun x1036 ((x209 Int)) Int (ite (and x130 x750) (x1138 x209) (x114 x209)))
(define-fun x1187 ((x209 Int)) Int (ite (= x209 x976) x696 (x897 x209)))
(define-fun x1415 ((x209 Int)) Int (ite (= x976 x209) x349 (x897 x209)))
(define-fun x967 ((x209 Int)) Int (ite (= x976 x209) x437 (x1161 x209)))
(define-fun x1366 ((x209 Int)) Int (ite (and (> (+ x1458 x437) x209) (<= x1458 x209)) (x1036 (+ 0 (- x209 x1458))) (x967 x209)))
(define-fun x454 ((x209 Int)) Int (ite (and x1015 (not x1227)) (x1366 x209) (x1161 x209)))
(define-fun x283 ((x209 Int)) Int (ite (= x882 x209) x1151 (x454 x209)))
(define-fun x1113 ((x209 Int)) Int (ite (= x565 x209) x679 (x283 x209)))
(define-fun x1290 ((x209 Int)) Int (ite (= x1040 x209) x1332 (x1113 x209)))
(define-fun x1255 ((x209 Int)) Int (ite (= x209 x581) x300 (x1290 x209)))
(define-fun x1515 ((x209 Int)) Int (ite (= x599 x209) 32 (x1255 x209)))
(define-fun x208 ((x209 Int)) Int (ite (= x209 x336) x682 (x538 x209)))
(define-fun x1414 ((x209 Int)) Int (ite (= x209 x363) 0 (x1041 x209)))
(define-fun x1520 ((x209 x964)) Int (ite (= x209 (x1376 274184521717934524641157099916833587206)) x324 (x54 x209)))
(define-fun x745 ((x209 x964)) Int (ite (= (x1376 x894) x209) x1379 (x1520 x209)))
(define-fun x694 ((x209 x964)) Int (ite (= x209 (x1376 x894)) x754 (x745 x209)))
(define-fun x1312 ((x209 x964)) Int (ite (= x209 (x1376 274184521717934524641157099916833587206)) x1493 (x694 x209)))
(define-fun x784 ((x209 x964)) Int (ite (= x209 (x1376 274184521717934524641157099916833587206)) x332 (x1312 x209)))
(define-fun x11 ((x209 x964)) Int (ite (= (x1376 x711) x209) x1024 (x784 x209)))
(define-fun x367 ((x209 x964)) Int (ite (= x1220 x209) x258 (x877 x209)))
(define-fun x710 ((x209 x964)) Int (ite (= x209 x15) x478 (x367 x209)))
(define-fun x632 ((x209 x964)) Int (ite (and x130 x750) (x710 x209) (x877 x209)))
(define-fun x927 ((x209 x964)) Int (ite (= x795 x209) x645 (x632 x209)))
(define-fun x963 ((x209 Int)) Int (ite (= x209 0) 1 (x979 x209)))
(define-fun x1267 ((x209 Int)) Int (ite (= x1129 x209) x899 (x898 x209)))
(define-fun x1243 ((x209 x964)) Int (ite (= x209 x714) x559 (x689 x209)))
(define-fun x1240 ((x209 x964)) Int (ite (= x209 x1378) x441 (x1243 x209)))
(define-fun x654 ((x209 x964)) Int (ite (and x130 x750) (x689 x209) (x1240 x209)))
(define-fun x150 ((x209 x964)) Int (ite (= x1118 x209) x341 (x654 x209)))
(define-fun x165 ((x209 Int)) Int (ite (= 0 x209) 1 (x979 x209)))
(define-fun x1460 ((x209 Int)) Int (ite (= x1129 x209) x371 (x898 x209)))
(define-fun x1449 ((x209 Int)) Int (ite (and x826 x708) (x963 x209) (x165 x209)))
(define-fun x738 ((x209 x964)) Int (ite (= (x1376 x711) x209) x241 (x11 x209)))
(define-fun x1181 ((x209 Int)) Int (ite (= x209 x1129) x1125 (x1432 x209)))
(define-fun x428 ((x209 Int)) Int (ite (and (>= x209 x468) (< x209 (+ x1125 x468))) (x1449 (+ 0 (- x209 x468))) (x1181 x209)))
(define-fun x617 ((x209 Int)) Int (ite (and x1134 x177) (x1432 x209) (x428 x209)))
(define-fun x1341 ((x1201 Int)) Bool (=> (and (not (= x1201 468353030)) (not (= 142201243 x1201)) (not (= x1201 1461501637330902918203684832716283019655932542975)) (not (= 2293535753 x1201)) (not (= 2061678023 x1201)) (not (= 2798343961 x1201)) (not (= 2743102681 x1201)) (not (= 87118632 x1201)) (not (= x1201 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 2418364589 x1201)) (not (= x1201 2258409472)) (not (= 1968616202 x1201)) (not (= x1201 2514000705)) (> x1201 10000) (not (= 2512682246 x1201)) (not (= x1201 604800)) (not (= 649617121 x1201)) (not (= 2764855426 x1201)) (not (= 274184521717934524641157099916833587214 x1201)) (not (= x1201 2835717307)) (not (= x1201 759532456)) (not (= 2690754053 x1201)) (not (= x1201 911411945)) (not (= 274184521717934524641157099916833587218 x1201)) (not (= x1201 2960351575)) (not (= 2532887486 x1201)) (not (= x1201 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 18446744073709551615 x1201)) (not (= x1201 1000000000000000000)) (not (= x1201 69947311)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x1201)) (not (= x1201 274184521717934524641157099916833587206)) (not (= 1986467848 x1201)) (not (= x1201 1889567281)) (not (= 2211524764 x1201)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1201)) (not (= 635128645 x1201)) (not (= 115792089237316195423570985008687907853269984665640564039457 x1201)) (not (= x1201 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1201 826074471))) (not ((_ is x860) (x1376 x1201)))))
(assert (x1341 x1260))
(assert (x786 x1136))
(assert (= (x1072 x1184) (ite (and x660 x560) (x631 x1184) (ite (and x660 (not x560) x778 (not x1401)) (x707 x1184) (ite (and x660 (not x560) (not x778)) (x631 x1184) (x355 x1184))))))
(assert (=> (>= 10000 x1299) (= (x1376 x1299) (x860 x1299))))
(assert (x786 x66))
(assert (= x1202 (x1342 (x1376 x1202))))
(assert (= x543 (=> (and (= (x1219 (x1376 274184521717934524641157099916833587206)) x174) (not (> 2293535753 x558)) (= x766 (x587 (x1376 x1365) x713 0)) (= x580 x252) (<= x1157 1461501637330902918203684832716283019655932542975) (not (> 2690754053 x558)) (< x558 2960351575) (= x252 (x952 x805)) (>= 1461501637330902918203684832716283019655932542975 x1365) (>= x252 0) (not (= x558 2690754053)) (= x805 (x587 (x1376 x1157) x766 0)) (= 2743102681 x558) (= x713 (x587 (x1376 x1089) (x860 3) 0)) (> x174 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x252)) (=> (and (= x160 x1507) (= x518 x580) (= x337 x874) (= x1325 x563) (= x138 x238)) x490))))
(assert (= (x1342 (x1376 x821)) x821))
(assert (= 2532887486 (x1342 (x860 2532887486))))
(assert (x786 x271))
(assert (x1341 x1085))
(assert (= x116 (x1342 (x1376 x116))))
(assert (=> (>= 10000 x381) (= (x860 x381) (x1376 x381))))
(assert (x786 x930))
(assert (x1341 x1076))
(assert (x1341 x1160))
(assert (= (x941 x1184) (ite (= x228 x1184) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x1184))))
(assert (x786 x734))
(assert (=> (>= 10000 x549) (= (x1376 x549) (x860 x549))))
(assert (x786 x1037))
(assert (=> (<= x42 10000) (= (x860 x42) (x1376 x42))))
(assert (= (x941 x581) (ite (= x581 x228) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x581))))
(assert (x786 x572))
(assert (=> (>= 10000 x859) (= (x860 x859) (x1376 x859))))
(assert (= x764 (x1342 (x1376 x764))))
(assert (= (x1342 (x860 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x786 x1157))
(assert (= (x860 1461501637330902918203684832716283019655932542975) (x1376 1461501637330902918203684832716283019655932542975)))
(assert (= (=> (and (= (= x1385 0) x1505) (or (and (= x217 0) x1505 (= 0 x1102)) (and (= (x1114 1461501637330902918203684832716283019655932542975 x529) x1392) (not x1505) (= x850 (x587 (x1376 x1385) (x860 10) 0)) (or (and x302 (= x217 0) (= x1102 0)) (and (not x302) (= 1 x1102) (= x217 x1044))) (<= x1044 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x302 (= 0 x1044)) (= x133 (x587 (x1376 x1392) x850 0)) (>= x1044 0) (= x1044 (x557 x133))))) x502) x453))
(assert (x1341 x756))
(assert (x786 x413))
(assert (= (x1072 x128) (ite (and x560 x660) (x631 x128) (ite (and (not x1401) x778 (not x560) x660) (x707 x128) (ite (and x660 (not x560) (not x778)) (x631 x128) (x355 x128))))))
(assert (x786 x1262))
(assert (= (x1072 x888) (ite (and x660 x560) (x631 x888) (ite (and (not x1401) x660 x778 (not x560)) (x707 x888) (ite (and (not x778) x660 (not x560)) (x631 x888) (x355 x888))))))
(assert (x786 x1499))
(assert (= x521 (x1342 (x1376 x521))))
(assert (= (x4 x1184) 0))
(assert (x786 x167))
(assert (= (=> (and (= (x587 (x1376 x306) (x860 7) 0) x229) (= x940 (= 0 x1406)) (= (x587 (x1376 x1503) x229 0) x1405) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x1503) (>= x1406 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406) (= (x587 (x1376 x1151) x1405 0) x970) (= (x904 x970) x1406)) (and (=> x940 x1447) (=> (and (= x306 x299) (not x940)) x329))) x409))
(assert (= (x4 192) 0))
(assert (x786 x915))
(assert (= x1028 (x1342 (x1376 x1028))))
(assert (= (or (and x1086 x498) (and x8 (not x1477)) (and x611 (not x189))) x267))
(assert (= (x1342 (x860 2960351575)) 2960351575))
(assert (= (x1490 x1399) (ite (= x1399 x1471) x1481 (x648 x1399))))
(assert (x786 x147))
(assert (= (x1072 x1399) (ite (and x560 x660) (x631 x1399) (ite (and (not x1401) x660 x778 (not x560)) (x707 x1399) (ite (and (not x778) (not x560) x660) (x631 x1399) (x355 x1399))))))
(assert (=> (>= 10000 x411) (= (x860 x411) (x1376 x411))))
(assert (= (and x30 (not x1106)) x611))
(assert (=> (>= 10000 x383) (= (x860 x383) (x1376 x383))))
(assert (= (ite (= x419 x1397) x885 (x1382 x419)) (x1500 x419)))
(assert (x786 x643))
(assert (= (or (and x30 x1106) x1412) x1006))
(assert (x786 x869))
(assert (=> (<= x1160 10000) (= (x1376 x1160) (x860 x1160))))
(assert (x817 x276))
(assert (= (x595 x128) (ite (= x128 x120) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1515 x128))))
(assert (= (x1342 (x1376 x756)) x756))
(assert (x786 x348))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1342 (x860 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= (x1370 x419) (ite (and x219 x1358 x733 x1228 (not x1074) x511) (x1478 x419) (ite (and x219 (not x1358) x733 x1228 x511) (x1490 x419) (ite (and x733 x219 x1228 (not x511)) (x648 x419) (ite (and (not x219) x1228 x733) (x941 x419) (x810 x419)))))))
(assert (x786 x1147))
(assert (= (=> (= (> x507 x463) x20) (and (=> (not x20) x87) (=> (and x20 (= x1019 x626)) x67))) x35))
(assert (= (x1342 (x1376 x1299)) x1299))
(assert (=> (<= x730 10000) (= (x860 x730) (x1376 x730))))
(assert (= (x897 x900) (ite (and x733 (not x145) x1228) (x1370 x900) (x484 x900))))
(assert (= (x1342 (x1376 x1079)) x1079))
(assert (=> (>= 10000 x463) (= (x860 x463) (x1376 x463))))
(assert (x786 x1158))
(assert (= x1089 (x1342 (x1376 x1089))))
(assert (= (=> (and (<= x482 1461501637330902918203684832716283019655932542975) (> x1320 0) (= x1506 (x587 (x1376 x698) (x860 9) 0)) (< x376 911411945) (= x348 (x624 x203)) (= (x587 (x1376 x475) x75 0) x203) (not (= x376 87118632)) (= (x1219 (x1376 274184521717934524641157099916833587206)) x1320) (>= x348 0) (= 142201243 x376) (= x75 (x587 (x1376 x482) x1506 0)) (>= 1461501637330902918203684832716283019655932542975 x475) (not (= x376 69947311)) (= x348 x430) (< x376 2293535753) (<= x348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x376 468353030)) (=> (and (= x825 x430) (= x1507 x1157) (= x1365 x874) (= x1089 x238)) x543)) x1149))
(assert (= (=> (and (= x1509 (x587 (x1376 x563) x570 0)) (not (> 2293535753 x1305)) (<= x563 1461501637330902918203684832716283019655932542975) (= x323 (x587 (x1376 x138) (x860 4) 0)) (not (= x1305 2293535753)) (not (= 2418364589 x1305)) (> x1053 0) (= (x587 (x1376 x160) x639 0) x570) (>= 1461501637330902918203684832716283019655932542975 x337) (= (x746 x1509) x1033) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1033) (< x1305 2690754053) (>= x1033 0) (= x107 x1033) (= x639 (x587 (x1376 x337) x323 0)) (>= 1461501637330902918203684832716283019655932542975 x160) (> 2960351575 x1305) (= 2532887486 x1305) (= x1053 (x1219 (x1376 274184521717934524641157099916833587206))) (not (= 2512682246 x1305))) x574) x490))
(assert (x1341 x990))
(assert (x786 x1102))
(assert (x817 x1334))
(assert (x1341 x337))
(assert (x786 x199))
(assert (x786 x1332))
(assert (x786 x910))
(assert (= (ite (and x736 x832) (x973 x128) (x798 x128)) (x1323 x128)))
(assert (x786 x463))
(assert (= (x1342 (x851 x835 1)) (+ (x1342 x835) 1)))
(assert (x786 x1456))
(assert (x786 x395))
(assert (= (x4 x419) 0))
(assert (x786 x971))
(assert (= (=> (and (= (< 0 x16) x262) (= x16 (x1293 (- x306 1)))) (and (=> (not x262) x849) (=> x262 x1487))) x268))
(assert (x786 x105))
(assert (x786 x250))
(assert (= (ite (= x228 x718) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x718)) (x941 x718)))
(assert (x786 x1326))
(assert (=> (<= x958 10000) (= (x1376 x958) (x860 x958))))
(assert (x786 x1259))
(assert (x1341 x1151))
(assert (= (=> (and (= x238 x1076) (= x930 x874)) x456) x739))
(assert (x786 x356))
(assert (=> (<= x865 10000) (= (x860 x865) (x1376 x865))))
(assert (x786 x1168))
(assert (x786 x349))
(assert (= (ite (= x1247 x228) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x1247)) (x941 x1247)))
(assert (x786 x216))
(assert (= (x1342 (x1376 x563)) x563))
(assert (x786 x682))
(assert (x786 x479))
(assert (x786 x1073))
(assert (= (ite (and x660 x560) (x631 x1247) (ite (and x660 (not x1401) x778 (not x560)) (x707 x1247) (ite (and (not x560) (not x778) x660) (x631 x1247) (x355 x1247)))) (x1072 x1247)))
(assert (=> (<= x1392 10000) (= (x860 x1392) (x1376 x1392))))
(assert (= x1442 (=> (= x1087 x1385) x453)))
(assert (x786 x1463))
(assert (= (ite (and x660 x667) (x1381 x681) (x440 x681)) (x747 x681)))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x730) (= (x587 (x1376 x1079) (x860 3) 0) x962) (not (= x221 2690754053)) (= x121 (x587 (x1376 x974) x1123 0)) (= x1123 (x587 (x1376 x730) x962 0)) (= x221 2743102681) (not (> 2293535753 x221)) (< x221 2960351575) (> x492 0) (= x823 (x89 x121)) (<= x823 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1475 x823) (= (x1219 (x1376 274184521717934524641157099916833587206)) x492) (<= 0 x823) (<= x974 1461501637330902918203684832716283019655932542975) (not (< x221 2690754053))) (=> (and (= x1507 x90) (= x259 x238) (= x1475 x154) (= x916 x1325) (= x572 x874)) x1289)) x305))
(assert (x786 x1513))
(assert (x786 x989))
(assert (= x36 (x1342 (x1376 x36))))
(assert (= (ite (and x733 (not x1074) x1228 x219 x1358 x511) (x1478 x128) (ite (and x1228 x733 x511 (not x1358) x219) (x1490 x128) (ite (and x733 x1228 x219 (not x511)) (x648 x128) (ite (and (not x219) x1228 x733) (x941 x128) (x810 x128))))) (x1370 x128)))
(assert (x786 x1132))
(assert (= (x1342 (x860 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x1212 x98))
(assert (x786 x1346))
(assert (x786 x69))
(assert (= (x1376 2514000705) (x860 2514000705)))
(assert (x786 x698))
(assert (x1341 x370))
(assert (x786 x341))
(assert (x1341 x1063))
(assert (x786 x620))
(assert (x1341 x553))
(assert (x786 x1120))
(assert (= (x1337 x1247) (ite (= x1247 x1344) x351 (x260 x1247))))
(assert (x1341 x159))
(assert (x786 x658))
(assert (x786 x744))
(assert (x786 x1409))
(assert (x786 x279))
(assert (x786 x1210))
(assert (= (ite (= x718 x256) x1459 (x1500 x718)) (x806 x718)))
(assert (x786 x374))
(assert (= x709 (and x278 (not x235))))
(assert (x786 x1179))
(assert (x1341 x250))
(assert (x786 x522))
(assert (x786 x1360))
(assert (=> (<= x674 10000) (= (x1376 x674) (x860 x674))))
(assert (x786 x589))
(assert (=> (>= 10000 x1020) (= (x860 x1020) (x1376 x1020))))
(assert (= x1321 x743))
(assert (= x1292 (x1342 (x1376 x1292))))
(assert (x786 x1167))
(assert (x817 x1121))
(assert (= (x1342 (x860 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (=> (<= x1182 10000) (= (x1376 x1182) (x860 x1182))))
(assert (x786 x370))
(assert (x786 x255))
(assert (= (x1342 (x1376 x730)) x730))
(assert (x786 x1151))
(assert (= x1327 (x1342 (x1376 x1327))))
(assert (x786 x1254))
(assert (= (ite (= x901 x949) x239 (x631 x949)) (x707 x949)))
(assert (x786 x1196))
(assert (x786 x1403))
(assert (= 0 (x4 x1046)))
(assert (x786 x1315))
(assert (= x126 x98))
(assert (x786 x949))
(assert (x786 x609))
(assert (= (x1342 (x860 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (x860 142201243) (x1376 142201243)))
(assert (x817 x1317))
(assert (x786 x1069))
(assert (= (x860 1968616202) (x1376 1968616202)))
(assert (x786 x916))
(assert (= (x897 x581) (ite (and x1228 x733 (not x145)) (x1370 x581) (x484 x581))))
(assert (= (x171 x203) (ite (and x727 x1006) (x402 x203) (x291 x203))))
(assert (= (x1342 (x1376 x40)) x40))
(assert (= (x1342 (x860 37714057306076988483118529490347679105585116642029194716945419020321082336612)) 37714057306076988483118529490347679105585116642029194716945419020321082336612))
(assert (x1341 x1089))
(assert (= (x860 604800) (x1376 604800)))
(assert (= (x941 x900) (ite (= x900 x228) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x900))))
(assert (x786 x501))
(assert (x786 x74))
(assert (x786 x662))
(assert (x786 x1493))
(assert (= (x1342 (x1376 x616)) x616))
(assert (= x902 x2))
(assert (x786 x344))
(assert (x786 x1503))
(assert (= (=> (and (= x172 (< (x694 (x1376 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and (= x1150 x1040) (= (x204 (+ 96 x814)) x1458) (= x1399 x976) (= x222 (x204 (+ 63 x437))) (= (x1114 115792089237316195423570985008687907853269984665640564039457584007913129639904 x222) x992) (= (x204 (+ x976 x992)) x1150) (not x1227)) (and (= x976 x1040) x1227 (= x1399 96))) (= x1227 (= 0 x437)) (= (> x585 0) x71) (= (x745 (x1376 x894)) x754) x172 (or (and (= (x454 x1399) x815) (= x537 (x454 x718)) (= (ite x1001 1 0) x573) (= x537 x573) (= (not x1238) x1001) x71 (= (x204 (+ 32 x1399)) x718) (> x537 0) (= x1238 (= 0 x537)) (not (or (> x815 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x815 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x815) true))))) (not x71)) (= x1493 (x694 (x1376 274184521717934524641157099916833587206))) (= (x454 x1399) x585) (not (= 0 x1304))) x831) x1071))
(assert (x786 x885))
(assert (x786 x407))
(assert (x786 x40))
(assert (=> (<= x1425 10000) (= (x860 x1425) (x1376 x1425))))
(assert (= (x1342 (x860 2690754053)) 2690754053))
(assert (x817 x824))
(assert (x786 x319))
(assert (x786 x1032))
(assert (=> (<= x1513 10000) (= (x860 x1513) (x1376 x1513))))
(assert (x786 x42))
(assert (x1341 x160))
(assert (x786 x1162))
(assert (=> (<= x306 10000) (= (x860 x306) (x1376 x306))))
(assert (x786 x728))
(assert (x786 x909))
(assert (x786 x448))
(assert (x786 x526))
(assert (x1341 x1425))
(assert (= (and x82 x760) x91))
(assert (= (x1041 x128) (ite (and x1316 (not x605) x426 x1354 x777 x623) (x538 x128) (ite (and x1354 x1316 (not x426) x777 x623) (x1337 x128) (ite (and x623 (not x1316) x1354 x777) (x260 x128) (ite (and x623 x1354 (not x777)) (x595 x128) (x208 x128)))))))
(assert (x786 x337))
(assert (x786 x892))
(assert (x786 x296))
(assert (= x1109 (=> (and (= (x747 x966) x1180) (<= x1180 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x1180) x959) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x270) (<= 0 x1180) (= (x587 (x1376 x821) (x860 6) 0) x68) (= x966 (x587 (x1376 x270) x68 0))) (and (=> (and (not x125) (= (x1293 (- x821 1)) x1047) (= (> x1047 0) x125) x959) x1257) (=> (and (= x821 x1087) (not x959)) x1442)))))
(assert (= (ite (and x736 x832) (x973 x1399) (x798 x1399)) (x1323 x1399)))
(assert (= (x806 x1309) (ite (= x256 x1309) x1459 (x1500 x1309))))
(assert (= (ite (and x736 x832) (x973 x157) (x798 x157)) (x1323 x157)))
(assert (= (ite (= x128 x1471) x1481 (x648 x128)) (x1490 x128)))
(assert (x786 x803))
(assert (x786 x506))
(assert (=> (>= 10000 x703) (= (x860 x703) (x1376 x703))))
(assert (x1341 x482))
(assert (x786 x1474))
(assert (x786 x1164))
(assert (x786 x1296))
(assert (x786 x983))
(assert (= (x1342 (x860 826074471)) 826074471))
(assert (= (x1432 x128) (ite (and x826 x708) (x1267 x128) (x1460 x128))))
(assert (x786 x1351))
(assert (= x346 (=> (= (> x507 0) x176) (and (=> x176 x509) (=> (not x176) x1155)))))
(assert (= 635128645 (x1342 (x860 635128645))))
(assert (x786 x1099))
(assert (= x249 (or (and (not x940) x127) (and x498 (not x1086)))))
(assert (x786 x1329))
(assert (x786 x1143))
(assert (x1341 x475))
(assert (=> (>= 10000 x319) (= (x860 x319) (x1376 x319))))
(assert (= (x1342 (x860 2258409472)) 2258409472))
(assert (= (x1342 (x1376 x547)) x547))
(assert (x786 x173))
(assert (= (x973 x581) (ite (= x581 x180) x1467 (x106 x581))))
(assert (= (ite (and x832 x736) (x973 x581) (x798 x581)) (x1323 x581)))
(assert (x1341 x116))
(assert (= (x897 x734) (ite (and x733 x1228 (not x145)) (x1370 x734) (x484 x734))))
(assert (x786 x1160))
(assert (x786 x602))
(assert (=> (<= x160 10000) (= (x1376 x160) (x860 x160))))
(assert (= (=> (= 0 x892) x866) x1155))
(assert (x786 x144))
(assert (= (x4 x718) 0))
(assert (= (ite (and x750 x130) (x1187 x734) (x1415 x734)) (x1161 x734)))
(assert (x786 x6))
(assert (= x1054 (x1342 (x1376 x1054))))
(assert (x786 x1126))
(assert (=> (>= 10000 x756) (= (x1376 x756) (x860 x756))))
(assert (x786 x350))
(assert (x786 x1096))
(assert (x786 x585))
(assert (x23 x529 x347))
(assert (x817 x1128))
(assert (= (x631 x1143) (ite (= x254 x1143) x31 (x292 x1143))))
(assert (=> (>= 10000 x711) (= (x1376 x711) (x860 x711))))
(assert (x786 x1174))
(assert (= 0 (x4 x888)))
(assert (x786 x139))
(assert (= (x1161 x900) (ite (and x130 x750) (x1187 x900) (x1415 x900))))
(assert (x786 x192))
(assert (= x177 (or (and x708 x826) (and x235 x278))))
(assert (x786 x300))
(assert (= (x648 x128) (ite (= x1492 x128) x839 (x941 x128))))
(assert (= (x1490 x581) (ite (= x581 x1471) x1481 (x648 x581))))
(assert (= (x1342 (x1376 x526)) x526))
(assert (x786 x1471))
(assert (= x33 (x1342 (x1376 x33))))
(assert (= (x1342 (x860 2514000705)) 2514000705))
(assert (x786 x1180))
(assert (x786 x887))
(assert (x786 x1406))
(assert (= (ite (= x913 x901) x239 (x631 x913)) (x707 x913)))
(assert (x786 x824))
(assert (= (x1323 x180) (ite (and x832 x736) (x973 x180) (x798 x180))))
(assert (x786 x466))
(assert (=> (<= x547 10000) (= (x1376 x547) (x860 x547))))
(assert (=> (<= x1395 10000) (= (x1376 x1395) (x860 x1395))))
(assert (=> (>= 10000 x857) (= (x860 x857) (x1376 x857))))
(assert (x1341 x1371))
(assert (=> (<= x1503 10000) (= (x1376 x1503) (x860 x1503))))
(assert (= (=> (= x235 (= x711 274184521717934524641157099916833587214)) (and (=> (not x235) x1045) (=> (and (< 0 x1099) (= 274184521717934524641157099916833587206 x481) (<= 0 x366) (= (+ x467 x273) x782) (= x423 274184521717934524641157099916833587206) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x602) (= x1004 (< x366 x1353)) (= 1 x883) (= x1353 x467) (= x602 x273) (not (> 649617121 x34)) (= 2835717307 x34) (= x615 x679) (>= 1461501637330902918203684832716283019655932542975 x1148) (= x457 (x1114 1461501637330902918203684832716283019655932542975 x1148)) x235 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x366) (= (x1219 (x1376 274184521717934524641157099916833587214)) x1099) (not (= 1889567281 x34)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x602 x1353)) (not (= 649617121 x34)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x413) (not x164) (= x129 (x1293 (- x66 4))) (= (x1293 (- x366 x615)) x341) (= (< x366 x615) x788) (= x366 (x654 x207)) (= (x587 (x1376 x1461) (x860 1) 0) x569) (= (x587 (x1376 274184521717934524641157099916833587206) (x860 1) 0) x1118) (>= x602 0) (= x66 68) (= x164 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1353 x602))) (= x1148 x350) (not (= x34 826074471)) (= 32 x1125) (= x371 x890) (not x1095) (not x1004) (not (= 2514000705 x34)) (= x1463 x66) (= (x150 x569) x602) (= x207 (x587 (x1376 274184521717934524641157099916833587206) (x860 1) 0)) (not x788) (= x1095 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x129)) (< x129 64)) (> x129 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1114 1461501637330902918203684832716283019655932542975 x1148) x1461) (not (< x66 4)) (= x1353 x615)) x809))) x1194))
(assert (x23 x1269 x1281))
(assert (x786 x312))
(assert (= (ite (= x1143 x901) x239 (x631 x1143)) (x707 x1143)))
(assert (= (=> (and (= (x587 (x1376 x507) (x860 7) 0) x603) (= x327 (x587 (x1376 x269) x603 0)) (>= x17 0) (= x269 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= (x587 (x1376 x1151) x327 0) x135) (<= x17 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1256 (= 0 x17)) (= (x878 x135) x17)) (and (=> (and (= x507 x893) (not x1256)) x1390) (=> x1256 x404))) x509))
(assert (x786 x1089))
(assert (x786 x178))
(assert (x786 x642))
(assert (x786 x1324))
(assert (= (x1500 x718) (ite (= x1397 x718) x885 (x1382 x718))))
(assert (x786 x1075))
(assert (x1341 x730))
(assert (x1341 x40))
(assert (x786 x1140))
(assert (x786 x1062))
(assert (= (ite (and x1354 (not x56) x623) (x1041 x128) (x1414 x128)) (x898 x128)))
(assert (= (=> (and (= (x1114 1461501637330902918203684832716283019655932542975 x529) x988) (or (and (= (x587 (x1376 x1299) x561 0) x908) (= x1299 (x1114 1461501637330902918203684832716283019655932542975 x529)) x667 (= (x587 (x1376 x306) (x860 6) 0) x561)) (and (= (x587 (x1376 x1329) x523 0) x1355) (= x1329 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= (x587 (x1376 x306) (x860 6) 0) x647) (< (* x1221 x136) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x1221 x136) x528) (= x523 (x587 (x1376 x306) (x860 5) 0)) (= x528 x462) (= (x587 (x1376 x370) x647 0) x513) (= x370 (x1114 1461501637330902918203684832716283019655932542975 x529)) (not x667))) (= x840 (x666 x1234)) (= x1410 (x1173 x412)) (= (x587 (x1376 x1349) x1514 0) x695) (<= 0 x1410) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x31) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x205) (<= 0 x1037) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x1349) (= x1234 (x587 (x1376 x1151) x382 0)) (= (x587 (x1376 x306) (x860 5) 0) x772) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x958) (= (x204 (+ 64 x1419)) x1019) (= x405 (x587 (x1376 x958) x772 0)) (= (x587 (x1376 x306) (x860 3) 0) x807) (or (and (= x1270 (x631 x254)) (or (and (= x105 x1356) x452 (= x105 (x631 x254))) (and (= x981 x1356) (not x452))) (= (< x1270 x981) x452) (= (= 0 x1037) x732) x497 (or (and (not x732) (= (x1293 (- x1356 x1037)) x818) (= 604800 x28) (= x577 (ite (< x818 604800) x818 604800)) (= x1221 x577) (not (> x1037 x1356))) (and (= x393 (x1293 (- x1356 x620))) (= x1221 x393) (not (> x620 x1356)) x732 (= x620 (x631 x1419))))) (and (= x1221 0) (not x497))) (= (x587 (x1376 x306) (x860 6) 0) x1514) (= (= 0 x1221) x667) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1037) (= (> x281 x1037) x497) (= x412 (x587 (x1376 x306) (x860 1) 0)) (or (and (= x507 x1479) (= x869 1) (= (div x265 x205) x147) (not x560) (= 0 x1132) (= x265 (mod (* x840 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> x205 0) (= x778 (< 0 x1467)) (= (x1114 x869 x1317) x1132) (= x1317 (ite (> x840 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= x1479 (x204 (+ x306 1))) (or (and (= (x587 (x1376 x306) (x860 11) 0) x911) (> x1467 0) (= (* x147 x604) x232) (= 0 x649) (<= 0 x649) (= x81 (x587 (x1376 x36) x516 0)) (<= 0 x604) x778 (<= x36 1461501637330902918203684832716283019655932542975) (= x36 (x1494 x1078)) (= x458 x1166) (> x744 0) (= (x587 (x1376 x401) x911 0) x516) (= x1298 x1078) (> x1467 0) (= x1049 (x587 (x1376 x1151) x158 0)) (= x1226 (x587 (x1376 x306) (x860 4) 0)) (= (div x232 1000000000000000000) x1424) (= (+ x458 x665) x239) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x649) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1424 x1166)) (< (* x604 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x665 x1424) (= (x204 (+ x1061 160)) x901) (= x401 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= (x1494 x1078) x1062) (<= x604 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x631 x901) x1166) (= (> x1467 1) x1401) (= x649 (x746 x993)) (>= 1461501637330902918203684832716283019655932542975 x1062) (= x604 (x701 x81)) (or (and x1401 (< 1 x1467) (= x1197 (x1494 x446)) (= (x587 (x1376 x159) x542 0) x1008) (= (x701 x464) x385) (= (* x147 x385) x77) (= (x587 (x1376 x1073) x415 0) x464) (= (+ x767 x1178) x955) (>= 1461501637330902918203684832716283019655932542975 x1197) (= (> x1467 2) x1288) (<= 0 x271) (> x1467 1) (= (x204 (+ x1061 192)) x157) (= x446 (x204 (+ x169 64))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x296 x1456)) (= (x587 (x1376 x306) (x860 11) 0) x1203) (<= x1073 1461501637330902918203684832716283019655932542975) (= (div x77 1000000000000000000) x1456) (not x1288) (= x547 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x159) (<= x271 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x415 (x587 (x1376 x547) x1203 0)) (= x1504 (x587 (x1376 x1151) x1008 0)) (= x767 x1456) (= x227 (x587 (x1376 x1197) x1504 0)) (= x296 x1178) (< 1 x796) (= 0 x271) (= (x587 (x1376 x306) (x860 4) 0) x542) (< (* x147 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x296 (x707 x157)) (<= x385 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x385 0) (= (x1494 x446) x1073) (= x271 (x746 x227)) (= x796 (x707 x180))) (not x1401)) (= x993 (x587 (x1376 x1062) x1049 0)) (= (x587 (x1376 x749) x1226 0) x158) (= x744 (x631 x180)) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x749)) (not x778))) (and (= x1192 x507) (= x1192 (x204 (+ 1 x306))) x560)) (or (and (not x1031) (= (x587 (x1376 x306) (x860 10) 0) x231) (= x1484 (x587 (x1376 x914) x231 0)) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x914)) x1031) (= x1037 (x1387 x695)) (= x205 (x1022 x405)) (= x254 (x204 (+ 32 x1419))) (= x560 (= x840 0)) (<= 0 x840) (= x31 (x1185 x190)) (= x190 (x851 x412 1)) (>= x31 0) (<= x1410 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x382 (x587 (x1376 x988) x807 0)) (<= x840 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x631 x254) x281) (= x1031 (= x1135 0)) (>= x205 0)) x35) x1273))
(assert (x1341 x706))
(assert (= (x860 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1376 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1341 x859))
(assert (x786 x985))
(assert (x786 x1192))
(assert (= (and x148 x176) x151))
(assert (x23 x824 x236))
(assert (= (x941 x1399) (ite (= x1399 x228) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x1399))))
(assert (= (x860 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1376 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x786 x1424))
(assert (= (x1022 x405) (ite (and x667 x660) (x1170 x405) (x934 x405))))
(assert (= (x806 x1399) (ite (= x256 x1399) x1459 (x1500 x1399))))
(assert (= x892 (x1342 (x1376 x892))))
(assert (x786 x180))
(assert (x1341 x1251))
(assert (x786 x1182))
(assert (x786 x351))
(assert (x786 x258))
(assert (x786 x888))
(assert (=> (<= x974 10000) (= (x860 x974) (x1376 x974))))
(assert (x786 x492))
(assert (= (ite (and x560 x660) (x631 x734) (ite (and (not x1401) x778 (not x560) x660) (x707 x734) (ite (and (not x560) (not x778) x660) (x631 x734) (x355 x734)))) (x1072 x734)))
(assert (x786 x507))
(assert (x786 x780))
(assert (x786 x1451))
(assert (= (x941 x1343) (ite (= x228 x1343) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x1343))))
(assert (x786 x874))
(assert (= (ite (and x832 x736) (x973 x419) (x798 x419)) (x1323 x419)))
(assert (x786 x685))
(assert (= (and x611 x189) x127))
(assert (x1341 x988))
(assert (= x357 (=> (and (<= x688 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x688 0) x1362) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x48) (= x681 (x587 (x1376 x669) x633 0)) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x669) (not (> x507 x48)) (= x633 (x587 (x1376 x507) (x860 6) 0)) (>= x48 0) (= (x747 x681) x688) (<= 0 x688)) (and (=> x1362 x845) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x384) (not x1362) (= (x557 x93) x384) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x678) (= x217 x384) (= x1102 0) (= (x587 (x1376 x507) (x860 10) 0) x1213) (= (x587 (x1376 x678) x1213 0) x93) (<= 0 x384)) x502)))))
(assert (= (x897 x1399) (ite (and x1228 x733 (not x145)) (x1370 x1399) (x484 x1399))))
(assert (x786 x475))
(assert (= x706 (x1342 (x1376 x706))))
(assert (x786 x1028))
(assert (= (=> (and (= x1426 x622) (= (<= x1295 x1426) x14) (= x987 x107) (= x1295 x774)) (and x14 (=> (and (= x255 x951) (= (>= x255 x1177) x1491) (= x644 x1177)) (and (=> (and (= x780 x968) (= (>= x968 x312) x1413) (= x59 x312)) (and x1413 (=> (and (= x1359 x344) (= (>= x790 x1359) x1496) (= x987 x790)) (and x1496 (=> (and (= x94 87118632) (= (<= x397 x1367) x716) (= x449 true) (= x854 false) (= x486 87118632) (= x139 x1367) (= x364 x397)) x716))))) x1491)))) x574))
(assert (= (ite (= x128 x256) x1459 (x1500 x128)) (x806 x128)))
(assert (x786 x1078))
(assert (= x1390 (=> (= x892 x893) x866)))
(assert (x786 x1397))
(assert (x786 x304))
(assert (= (x1342 (x860 2293535753)) 2293535753))
(assert (x786 x1391))
(assert (x817 x995))
(assert (x786 x417))
(assert (x786 x1010))
(assert (x786 x882))
(assert (= (x1376 2690754053) (x860 2690754053)))
(assert (=> (<= x1260 10000) (= (x1376 x1260) (x860 x1260))))
(assert (= 649617121 (x1342 (x860 649617121))))
(assert (= (x1500 x1399) (ite (= x1397 x1399) x885 (x1382 x1399))))
(assert (x786 x867))
(assert (= (ite (= x1253 x900) x119 (x1490 x900)) (x1478 x900)))
(assert (x786 x44))
(assert (x817 x1148))
(assert (x786 x565))
(assert (=> (<= x563 10000) (= (x1376 x563) (x860 x563))))
(assert (x786 x1399))
(assert (= (x4 x157) 0))
(assert (= (x1342 (x860 604800)) 604800))
(assert (x786 x987))
(assert (x1341 x1409))
(assert (x786 x995))
(assert (x786 x1221))
(assert (x786 x186))
(assert (= (x1161 x1184) (ite (and x130 x750) (x1187 x1184) (x1415 x1184))))
(assert (x786 x1244))
(assert (= (x806 x1184) (ite (= x256 x1184) x1459 (x1500 x1184))))
(assert (= (x1342 (x1376 x857)) x857))
(assert (= x743 x126))
(assert (= (or (and x2 (not x1362)) x210) x1348))
(assert (x817 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (ite (= x180 x419) x1467 (x106 x419)) (x973 x419)))
(assert (x1341 x1327))
(assert (= (=> (and (= (= 0 x167) x727) (= x1389 (= 0 x408)) (or x727 (and (not x727) (= x1248 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= x49 (x587 (x1376 x1151) x742 0)) (= (x587 (x1376 x1248) x1034 0) x742) (= (x587 (x1376 x306) (x860 9) 0) x1034))) (or (and (= (x587 (x1376 x306) (x860 1) 0) x835) (= x69 (x204 (+ x510 64))) (= (x1185 x1030) x1127) (= (x587 (x1376 x720) x3 0) x931) (<= x1127 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= x731 (< x50 x981)) (= x50 (x480 x47)) (or (and (= x451 (ite (> 604800 x1168) x1168 604800)) (= x1168 (x1293 (- x935 x96))) (not x1508) (= x863 x451) (not (< x935 x96)) (= x1193 604800)) (and x1508 (not (< x935 x853)) (= (x1293 (- x935 x853)) x887) (= x853 (x480 x510)) (= x887 x863))) (= (= x96 0) x1508) x303 (or (and x731 (= x74 (x480 x47)) (= x74 x935)) (and (not x731) (= x981 x935)))) (and (= 0 x863) (not x303))) (<= x96 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x47 (x204 (+ x510 32))) (<= 0 x1127) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x720) (not x1389) (>= x96 0) (= (x904 x196) x96) (= (x587 (x1376 x1151) x931 0) x196) (= (= x863 0) x1098) (or (and (= (x587 (x1376 x306) (x860 7) 0) x1050) (= x715 (x587 (x1376 x60) x1050 0)) x1098 (= x60 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= x684 (x587 (x1376 x1151) x715 0)) (= x1419 x69)) (and (= x388 x178) (< (* x408 x863) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x1098) (= (x587 (x1376 x1151) x499 0) x421) (= (x587 (x1376 x250) x280 0) x499) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x1462) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x250) (= x1419 x69) (= x251 (x587 (x1376 x306) (x860 7) 0)) (= (x587 (x1376 x1462) x251 0) x97) (= (x587 (x1376 x306) (x860 3) 0) x280) (= (x587 (x1376 x1151) x97 0) x1011) (= (* x408 x863) x388))) (= (x587 (x1376 x306) (x860 7) 0) x3) (= x303 (< x96 x1096)) (= (x480 x47) x1096) (<= 0 x1142) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1142) (= x1030 (x851 x835 1)) (= (x1173 x835) x1142)) (and (= (x587 (x1376 x306) (x860 7) 0) x168) (= (x587 (x1376 x1327) x168 0) x309) (= x1327 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= (x587 (x1376 x1151) x309 0) x188) x1389 (= x510 x1419)))) x996) x316))
(assert (= (x1342 (x1376 x16)) x16))
(assert (= (x1500 x658) (ite (= x1397 x658) x885 (x1382 x658))))
(assert (= (ite (= x1471 x419) x1481 (x648 x419)) (x1490 x419)))
(assert (= (x1490 x1143) (ite (= x1471 x1143) x1481 (x648 x1143))))
(assert (=> (>= 10000 x40) (= (x1376 x40) (x860 x40))))
(assert (x1341 x1248))
(assert (= (=> (and (>= x1254 0) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x549) (= (x587 (x1376 x16) (x860 6) 0) x1302) (<= x1254 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1254 (x1387 x1130)) (= (x587 (x1376 x549) x1302 0) x1130) (= (= x1254 0) x92)) (and (=> (and x92 (= (x1293 (- x16 1)) x331) (not x52) (= x52 (< 0 x331))) x849) (=> (and (not x92) (= x16 x915)) x650))) x1487))
(assert (= x213 (or x377 x429)))
(assert (x786 x863))
(assert (x786 x626))
(assert (x786 x397))
(assert (x786 x100))
(assert (x786 x28))
(assert (x786 x1452))
(assert (x786 x703))
(assert (= (=> (and (= x868 false) (= x1092 x1346) (= x459 false) x1111 (>= 1461501637330902918203684832716283019655932542975 x1507) (= x636 (< 0 (x1219 (x1376 274184521717934524641157099916833587206)))) (= x589 (x54 (x1376 274184521717934524641157099916833587206))) (= false x83) (<= x874 1461501637330902918203684832716283019655932542975) (<= x1346 1461501637330902918203684832716283019655932542975) (= x1176 false) (= x1136 x874) (= x1395 x238) (= x1404 (x54 (x1376 274184521717934524641157099916833587214))) (>= 1461501637330902918203684832716283019655932542975 x1300) (>= x1404 0) (>= x1300 0) (>= x1032 0) x954 (= x1483 87118632) (>= x874 0) (= 4 x1218) (>= x589 0) (= (> (x1219 (x1376 274184521717934524641157099916833587218)) 0) x1111) (>= x1346 0) (= x1151 x1300) (= x954 (> (x1219 (x1376 274184521717934524641157099916833587214)) 0)) (<= 0 x1325) (<= 0 x1507) x636 (= x1032 (x54 (x1376 274184521717934524641157099916833587218))) (>= 1461501637330902918203684832716283019655932542975 x1325)) x724) x1206))
(assert (x786 x423))
(assert (= (x1342 (x1376 x138)) x138))
(assert (= (ite (= x805 x792) 0 (x886 x805)) (x470 x805)))
(assert (= x866 (=> (and (= (= x892 0) x969) (or (and x969 (= x1245 0) (= x960 0)) (and (<= x1266 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x587 (x1376 x892) (x860 9) 0) x72) (= x1204 (x587 (x1376 x1151) x70 0)) (>= x1266 0) (not x969) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x156) (= x1266 x960) (= x70 (x587 (x1376 x156) x72 0)) (= (x171 x1204) x1266) (= x1245 1)))) x1510)))
(assert (= (x1342 (x851 x27 1)) (+ (x1342 x27) 1)))
(assert (= (x707 x658) (ite (= x901 x658) x239 (x631 x658))))
(assert (x786 x486))
(assert (x786 x679))
(assert (x1341 x916))
(assert (= (=> (= x1453 0) x294) x1445))
(assert (= (x897 x128) (ite (and x1228 x733 (not x145)) (x1370 x128) (x484 x128))))
(assert (x1341 x547))
(assert (x786 x1327))
(assert (= (x1478 x581) (ite (= x581 x1253) x119 (x1490 x581))))
(assert (x786 x1153))
(assert (= (ite (= x254 x419) x31 (x292 x419)) (x631 x419)))
(assert (= (ite (= x1344 x1143) x351 (x260 x1143)) (x1337 x1143)))
(assert (x786 x1148))
(assert (= (x1342 (x1376 x115)) x115))
(assert (= (x1342 (x1376 x18)) x18))
(assert (= (x941 x1309) (ite (= x1309 x228) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x1309))))
(assert (= x269 (x1342 (x1376 x269))))
(assert (x1341 x821))
(assert (= (ite (and x130 x750) (x1187 x419) (x1415 x419)) (x1161 x419)))
(assert (= x306 (x1342 (x1376 x306))))
(assert (= (ite (= x1143 x1492) x839 (x941 x1143)) (x648 x1143)))
(assert (x817 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x1342 (x1376 x1462)) x1462))
(assert (=> (>= 10000 x821) (= (x1376 x821) (x860 x821))))
(assert (x1341 x259))
(assert (= (x631 x254) x31))
(assert (= (x1376 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x860 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (= (x860 468353030) (x1376 468353030)))
(assert (x786 x680))
(assert (= (x1342 (x1376 x21)) x21))
(assert (x786 x547))
(assert (= x329 (=> (= x1453 x299) x294)))
(assert (= (x1342 (x1376 x1136)) x1136))
(assert (= (x747 x1394) (ite (and x660 x667) (x1381 x1394) (x440 x1394))))
(assert (= (x973 x949) (ite (= x180 x949) x1467 (x106 x949))))
(assert (= (x1490 x900) (ite (= x900 x1471) x1481 (x648 x900))))
(assert (x1341 x1028))
(assert (x786 x581))
(assert (x786 x266))
(assert (x786 x740))
(assert (= (ite (and x660 x560) (x631 x718) (ite (and x660 x778 (not x560) (not x1401)) (x707 x718) (ite (and x660 (not x560) (not x778)) (x631 x718) (x355 x718)))) (x1072 x718)))
(assert (x1341 x1079))
(assert (x786 x1320))
(assert (x786 x31))
(assert (x786 x1417))
(assert (x786 x627))
(assert (= x1324 (x1342 (x1376 x1324))))
(assert (x786 x1328))
(assert (x1341 x21))
(assert (= (x1072 x581) (ite (and x660 x560) (x631 x581) (ite (and x778 x660 (not x560) (not x1401)) (x707 x581) (ite (and (not x560) (not x778) x660) (x631 x581) (x355 x581))))))
(assert (=> (>= 10000 x1371) (= (x860 x1371) (x1376 x1371))))
(assert (= (x631 x949) (ite (= x949 x254) x31 (x292 x949))))
(assert (x786 x548))
(assert (= (ite (= x254 x1419) x31 (x292 x1419)) (x631 x1419)))
(assert (= x775 x1212))
(assert (= x30 (and (not x621) x661)))
(assert (x786 x938))
(assert (=> (<= x749 10000) (= (x1376 x749) (x860 x749))))
(assert (= x820 (and (not x20) x123)))
(assert (x786 x813))
(assert (x786 x1236))
(assert (x786 x836))
(assert (= (ite (= x1247 x901) x239 (x631 x1247)) (x707 x1247)))
(assert (x1341 x1062))
(assert (x786 x10))
(assert (x786 x687))
(assert (x786 x1014))
(assert (x786 x1333))
(assert (= x958 (x1342 (x1376 x958))))
(assert (= (ite (and x130 x750) (x1187 x718) (x1415 x718)) (x1161 x718)))
(assert (=> (<= x1453 10000) (= (x1376 x1453) (x860 x1453))))
(assert (= (x1342 (x860 142201243)) 142201243))
(assert (= (x860 115792089237316195423570985008687907853269984665640564039457) (x1376 115792089237316195423570985008687907853269984665640564039457)))
(assert (x786 x364))
(assert (= (=> (and (<= x48 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x878 x1222) x79) (= (x587 (x1376 x116) x104 0) x554) (= (> x79 0) x112) (= x1222 (x587 (x1376 x1151) x554 0)) (not (> x507 x48)) (= (x587 (x1376 x507) (x860 7) 0) x104) (<= 0 x79) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x79) (>= x48 0) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x116)) (and (=> (and (= (x1114 1461501637330902918203684832716283019655932542975 x529) x837) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1236) (= x1080 (x587 (x1376 x837) x1104 0)) x112 (= 0 x1245) (= x1236 x960) (= (x587 (x1376 x1151) x1080 0) x606) (= (x171 x606) x1236) (= x1104 (x587 (x1376 x507) (x860 9) 0)) (>= x1236 0)) x1510) (=> (not x112) x346))) x87))
(assert (= (x666 x1234) (ite (and x1389 x1006) (x89 x1234) (ite (and (not x1389) x1006 x1098) (x89 x1234) (x1436 x1234)))))
(assert (= (x1323 x734) (ite (and x832 x736) (x973 x734) (x798 x734))))
(assert (x1341 x1385))
(assert (x786 x730))
(assert (x1341 x526))
(assert (x786 x1184))
(assert (= (or (and x959 x476) (and x272 (not x439)) (and (not x84) x46)) x330))
(assert (= (x1072 x658) (ite (and x560 x660) (x631 x658) (ite (and x660 x778 (not x560) (not x1401)) (x707 x658) (ite (and x660 (not x778) (not x560)) (x631 x658) (x355 x658))))))
(assert (= (x538 x128) (ite (= x128 x881) x551 (x1337 x128))))
(assert (= (ite (and x660 x560) (x631 x900) (ite (and x660 (not x1401) x778 (not x560)) (x707 x900) (ite (and x660 (not x778) (not x560)) (x631 x900) (x355 x900)))) (x1072 x900)))
(assert (= (ite (and x832 x736) (x973 x1184) (x798 x1184)) (x1323 x1184)))
(assert (=> (>= 10000 x1329) (= (x1376 x1329) (x860 x1329))))
(assert (x1341 x1513))
(assert (= (x707 x581) (ite (= x581 x901) x239 (x631 x581))))
(assert (x786 x796))
(assert (= 0 (x4 x1309)))
(assert (x1341 x1462))
(assert (x786 x651))
(assert (= (ite (= x1397 x913) x885 (x1382 x913)) (x1500 x913)))
(assert (x786 x1343))
(assert (= x885 (x1500 x1397)))
(assert (x786 x120))
(assert (x786 x957))
(assert (x786 x1307))
(assert (=> (>= 10000 x720) (= (x860 x720) (x1376 x720))))
(assert (= x433 (=> (= x621 (< x463 x306)) (and (=> (not x621) x274) (=> (and (= x510 x626) x621) x67)))))
(assert (= x264 (or (and (not x776) x906) (and x476 (not x959)))))
(assert (= (x973 x180) x1467))
(assert (x786 x259))
(assert (=> (>= 10000 x616) (= (x860 x616) (x1376 x616))))
(assert (x786 x797))
(assert (=> (<= x642 10000) (= (x1376 x642) (x860 x642))))
(assert (= (ite (= x1397 x1343) x885 (x1382 x1343)) (x1500 x1343)))
(assert (= (+ (x1342 x124) 1) (x1342 (x851 x124 1))))
(assert (= (x1376 87118632) (x860 87118632)))
(assert (= (x1342 (x860 2061678023)) 2061678023))
(assert (= (ite (= x120 x1247) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1515 x1247)) (x595 x1247)))
(assert (=> (<= x368 10000) (= (x860 x368) (x1376 x368))))
(assert (= (x1478 x419) (ite (= x1253 x419) x119 (x1490 x419))))
(assert (=> (<= x553 10000) (= (x860 x553) (x1376 x553))))
(assert (x786 x1339))
(assert (x786 x162))
(assert (x1341 x669))
(assert (= (x973 x913) (ite (= x180 x913) x1467 (x106 x913))))
(assert (x817 x822))
(assert (x786 x757))
(assert (= (x1342 (x860 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= (x1323 x900) (ite (and x832 x736) (x973 x900) (x798 x900))))
(assert (x786 x604))
(assert (= x460 x247))
(assert (x786 x1117))
(assert (x786 x297))
(assert (x786 x900))
(assert (x786 x1298))
(assert (= (x860 2258409472) (x1376 2258409472)))
(assert (= (x648 x1046) (ite (= x1046 x1492) x839 (x941 x1046))))
(assert (= x1461 (x1342 (x1376 x1461))))
(assert (x786 x1251))
(assert (x786 x591))
(assert (= (ite (and x736 x832) (x973 x888) (x798 x888)) (x1323 x888)))
(assert (= (and x8 x1477) x498))
(assert (x1341 x1365))
(assert (= (x1370 x581) (ite (and x733 x1358 (not x1074) x511 x219 x1228) (x1478 x581) (ite (and x1228 x511 (not x1358) x733 x219) (x1490 x581) (ite (and x219 x733 x1228 (not x511)) (x648 x581) (ite (and x733 (not x219) x1228) (x941 x581) (x810 x581)))))))
(assert (x786 x1224))
(assert (x786 x678))
(assert (= x86 (or (and x623 (not x1354)) x177 (and (not x733) x1228))))
(assert (x786 x163))
(assert (= 2835717307 (x1342 (x860 2835717307))))
(assert (=> (>= 10000 x60) (= (x1376 x60) (x860 x60))))
(assert (=> (>= 10000 x503) (= (x860 x503) (x1376 x503))))
(assert (= (x878 x1222) (ite (and x1389 x1006) (x326 x1222) (ite (and x1006 (not x1389) x1098) (x1279 x1222) (x1198 x1222)))))
(assert (= x130 (and x733 x1228)))
(assert (x1341 x383))
(assert (x786 x1116))
(assert (= x246 true))
(assert (=> (<= x1365 10000) (= (x1376 x1365) (x860 x1365))))
(assert (x1341 x703))
(assert (x1341 x1145))
(assert (= (x1342 (x1376 x383)) x383))
(assert (x786 x1159))
(assert (= (ite (and x733 x1228 (not x145)) (x1370 x1143) (x484 x1143)) (x897 x1143)))
(assert (= 0 (x4 x900)))
(assert (x1341 x720))
(assert (= (x707 x1309) (ite (= x901 x1309) x239 (x631 x1309))))
(assert (= (=> (= x132 (< 0 x306)) (and (=> x132 x202) (=> (not x132) x849))) x1280))
(assert (= 0 (x4 224)))
(assert (= (ite (and x560 x660) (x631 x419) (ite (and x660 x778 (not x1401) (not x560)) (x707 x419) (ite (and (not x560) (not x778) x660) (x631 x419) (x355 x419)))) (x1072 x419)))
(assert (x786 x1292))
(assert (x786 x1175))
(assert (= x692 (=> (and (>= 1461501637330902918203684832716283019655932542975 x381) (not (< x1 468353030)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x359) (not (= x1 635128645)) (< 0 x1296) (= x965 (x587 (x1376 x729) (x860 7) 0)) (= x1 759532456) (= (x587 (x1376 x381) x965 0) x1398) (= x1474 x359) (>= 1461501637330902918203684832716283019655932542975 x674) (= x1296 (x1219 (x1376 274184521717934524641157099916833587206))) (= (x587 (x1376 x674) x1398 0) x1502) (= (x904 x1502) x359) (> 2293535753 x1) (> 911411945 x1) (not (= 468353030 x1)) (>= x359 0)) (=> (and (= x1474 x644) (= x238 x1145) (= x21 x874) (= x1324 x1507)) x1276))))
(assert (x786 x697))
(assert (x786 x160))
(assert (= (+ 1 (x1342 x412)) (x1342 (x851 x412 1))))
(assert (= (x1376 2532887486) (x860 2532887486)))
(assert (= (x1370 x1143) (ite (and x511 x733 (not x1074) x1228 x1358 x219) (x1478 x1143) (ite (and (not x1358) x219 x511 x733 x1228) (x1490 x1143) (ite (and x1228 (not x511) x219 x733) (x648 x1143) (ite (and x733 x1228 (not x219)) (x941 x1143) (x810 x1143)))))))
(assert (x786 x711))
(assert (= (x1376 2798343961) (x860 2798343961)))
(assert (x786 x36))
(assert (= (x1376 2764855426) (x860 2764855426)))
(assert (x1341 x521))
(assert (= (x973 x658) (ite (= x658 x180) x1467 (x106 x658))))
(assert (x786 x1404))
(assert (x786 x729))
(assert (= (x860 26959946667150639794667015087019630673637144422540572481103610249215) (x1376 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (ite (= x900 x180) x1467 (x106 x900)) (x973 x900)))
(assert (x786 x1492))
(assert (x1341 x549))
(assert (x786 x625))
(assert (x786 x1274))
(assert (= (x1500 x888) (ite (= x1397 x888) x885 (x1382 x888))))
(assert (= (ite (= x1399 x1492) x839 (x941 x1399)) (x648 x1399)))
(assert (= (x4 x1143) 0))
(assert (x786 x1252))
(assert (x786 x1193))
(assert (= (x806 x1143) (ite (= x256 x1143) x1459 (x1500 x1143))))
(assert (= x1045 true))
(assert (=> (>= 10000 x1462) (= (x1376 x1462) (x860 x1462))))
(assert (= x429 (or (and x92 x410) (and (not x262) x856) (and (not x132) x91))))
(assert (= (x860 274184521717934524641157099916833587206) (x1376 274184521717934524641157099916833587206)))
(assert (=> (<= x156 10000) (= (x860 x156) (x1376 x156))))
(assert (x786 x829))
(assert (x786 x1385))
(assert (x1341 x36))
(assert (x786 x1101))
(assert (x1341 x1154))
(assert (x786 x761))
(assert (x23 x233 x926))
(assert (x786 x1462))
(assert (= (x707 x1399) (ite (= x901 x1399) x239 (x631 x1399))))
(assert (x786 x461))
(assert (x786 x411))
(assert (= (x1376 1000000000000000000) (x860 1000000000000000000)))
(assert (= (ite (= x1143 x120) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1515 x1143)) (x595 x1143)))
(assert (x786 x477))
(assert (x786 x669))
(assert (x1341 x1136))
(assert (x786 x566))
(assert (= (=> (and (< x758 468353030) (>= x1272 0) (= (x369 x1070) x1272) (= (x587 (x1376 x642) x1051 0) x1070) (<= x642 1461501637330902918203684832716283019655932542975) (= x58 (x1219 (x1376 274184521717934524641157099916833587206))) (< x758 911411945) (<= x1272 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x758 2293535753) (= x1147 x1272) (= 69947311 x758) (= x1051 (x587 (x1376 x1251) (x860 10) 0)) (> x58 0)) (=> (and (= x238 x40) (= x703 x874) (= x1054 x1507) (= x139 x1147)) x975)) x1216))
(assert (x786 x688))
(assert (=> (<= x990 10000) (= (x860 x990) (x1376 x990))))
(assert (x786 x1003))
(assert (= (x1342 (x1376 x1392)) x1392))
(assert (= (x1342 (x1376 x259)) x259))
(assert (x786 x839))
(assert (= x86 x552))
(assert (x786 x368))
(assert (= (ite (= x1399 x254) x31 (x292 x1399)) (x631 x1399)))
(assert (= x1412 (or x249 x267)))
(assert (x786 x494))
(assert (= (x1500 x256) (ite (= x1397 x256) x885 (x1382 x256))))
(assert (x786 x1425))
(assert (x786 x408))
(assert (= 2743102681 (x1342 (x860 2743102681))))
(assert (= (and x896 (not x1306)) x1013))
(assert (x786 x923))
(assert (= (x1342 (x1376 x1248)) x1248))
(assert (x786 x521))
(assert (x786 x252))
(assert (= (x973 x888) (ite (= x180 x888) x1467 (x106 x888))))
(assert (= (ite (= x1253 x718) x119 (x1490 x718)) (x1478 x718)))
(assert (=> (>= 10000 x401) (= (x860 x401) (x1376 x401))))
(assert (= (ite (= x1143 x228) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x1143)) (x941 x1143)))
(assert (x786 x372))
(assert (=> (<= x1085 10000) (= (x1376 x1085) (x860 x1085))))
(assert (x786 x843))
(assert (= (x1342 (x1376 x503)) x503))
(assert (x786 x1430))
(assert (= (ite (and x736 x832) (x973 x658) (x798 x658)) (x1323 x658)))
(assert (x786 x270))
(assert (x23 x995 x310))
(assert (x817 x222))
(assert (x786 x988))
(assert (x786 x1278))
(assert (x786 x638))
(assert (x786 x157))
(assert (= x501 (x1342 (x1376 x501))))
(assert (= x431 (=> (and (<= x25 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1069) (not (> 2690754053 x983)) (not (= x983 2764855426)) (>= x1069 0) (= (x1219 (x1376 274184521717934524641157099916833587206)) x1231) (= x1069 x761) (= x445 (x587 (x1376 x25) x117 0)) (not (= x983 2690754053)) (not (= x983 2743102681)) (= (x1170 x445) x1069) (not (< x983 2293535753)) (= 2798343961 x983) (< x983 2960351575) (= x117 (x587 (x1376 x1120) (x860 5) 0)) (> x1231 0)) (=> (and (= x874 x500) (= x503 x238) (= x761 x59)) x134))))
(assert (x786 x385))
(assert (= x831 (=> (= (> x1467 1) x1354) (and (=> (not x1354) x739) (=> (and (= 0 x505) (= (x204 (+ 68 x1040)) x565) (= (x1219 (x1376 x711)) x1235) (>= 1461501637330902918203684832716283019655932542975 x711) (or (and (= x1286 0) (not x777)) (and (= x1184 x581) (= (> x836 32) x1316) (= (x595 x1184) x1326) (= x608 x1129) (or (and (= x351 (x260 x900)) (= (> x836 64) x426) (= x1344 (x204 (+ 96 x599))) x1316 (or (and (= 64 x1286) (not x426)) (and (or (and (= x1286 96) (not x605)) (and (= x1156 (< 128 x836)) (= x336 (x204 (+ x599 160))) (= (x204 (+ 128 x1040)) x1247) (not x1156) x605 (= (x538 x1247) x682) (= x1286 128))) (= x419 (x204 (+ 96 x1040))) (= (x1337 x419) x551) (= x605 (< 96 x836)) (= x881 (x204 (+ x599 128))) x426)) (= x900 (x204 (+ 64 x1040)))) (and (not x1316) (= x1286 32))) x777)) (= (x595 x1040) x836) (= (x204 (+ 100 x1040)) x599) (= (x1494 x1122) x711) (= (x204 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1418)) x300) (= (x204 (+ x1061 192)) x734) (= (x1293 (- x356 32)) x1332) (= (x204 (+ x1040 36)) x882) (= x777 (< 0 x836)) (or (not x56) (and x56 (= (x204 (+ x836 x1129)) x363))) (= x1122 (x204 (+ x169 64))) x1354 (= x1418 (x1114 26959946667150639794667015087019630673637144422540572481103610249215 x971)) (= x120 (x204 (+ x882 96))) (> x1467 1) (= x1129 (x204 (+ 128 x882))) (= x971 (x1290 x581)) (> x803 1) (= x56 (> x1286 x836)) (= (x454 x734) x679) (= (x454 x180) x803) (= (x1293 (- x599 x1040)) x356) x183 (= (x204 (+ 32 x1040)) x581) (= x183 (< 0 x1235))) x1237)))))
(assert (= (=> (and (= x1174 (x1293 (- x507 1))) (= (< 0 x1174) x1303)) (and (=> (not x1303) x1155) (=> x1303 x244))) x404))
(assert (x786 x79))
(assert (=> (>= 10000 x482) (= (x860 x482) (x1376 x482))))
(assert (x1341 x1292))
(assert (= (x806 x949) (ite (= x256 x949) x1459 (x1500 x949))))
(assert (x1341 x42))
(assert (x786 x794))
(assert (= (ite (= x256 x419) x1459 (x1500 x419)) (x806 x419)))
(assert (x786 x342))
(assert (x786 x359))
(assert (= x377 (or (and (not x92) x410) (and x719 (not x801)))))
(assert (= (x1478 x1399) (ite (= x1399 x1253) x119 (x1490 x1399))))
(assert (= (x860 2835717307) (x1376 2835717307)))
(assert (=> (<= x669 10000) (= (x860 x669) (x1376 x669))))
(assert (= x711 (x1342 (x1376 x711))))
(assert (= (x1500 x581) (ite (= x581 x1397) x885 (x1382 x581))))
(assert (x1341 x857))
(assert (x786 x1408))
(assert (x786 x918))
(assert (x786 x645))
(assert (x786 x331))
(assert (x786 x608))
(assert (= (ite (= x180 x228) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x180)) (x941 x180)))
(assert (=> (>= 10000 x1409) (= (x1376 x1409) (x860 x1409))))
(assert (x786 x416))
(assert (=> (<= x187 10000) (= (x1376 x187) (x860 x187))))
(assert (= (ite (and x130 x750) (x1187 x581) (x1415 x581)) (x1161 x581)))
(assert (= (x1342 (x1376 x916)) x916))
(assert (= (x1342 (x860 911411945)) 911411945))
(assert (x817 1461501637330902918203684832716283019655932542975))
(assert (x786 x25))
(assert (x786 x478))
(assert (= x144 (x1342 (x1376 x144))))
(assert (= (x1342 (x1376 x749)) x749))
(assert (= (=> (and (= x673 (x587 (x1376 x463) (x860 3) 0)) (= (x587 (x1376 x939) x673 0) x487) (= x733 (< 0 x1467)) (= x939 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= (x587 (x1376 x1151) x487 0) x420)) (and (=> (and (= (x204 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1259)) x1351) (or (and (= 0 x876) (not x219)) (and (or (and (= x876 32) (not x511)) (and x511 (= (x204 (+ x626 64)) x658) (or (and (= x876 64) (not x1358)) (and (= x119 (x1490 x1046)) x1358 (= (x204 (+ 96 x626)) x1046) (= (> x629 96) x1074) (= x1253 (x204 (+ 128 x814))) (or (and (= x876 96) (not x1074)) (and (= x175 (x204 (+ 160 x814))) (not x997) (= x997 (< 128 x629)) (= x1116 (x1478 x1309)) x1074 (= 128 x876) (= (x204 (+ 128 x626)) x1309))))) (= (> x629 64) x1358) (= (x204 (+ x814 96)) x1471) (= x1481 (x648 x658)))) (= x1492 x976) x219 (= x913 x1343) (= x839 (x941 x1343)) (= x511 (< 32 x629)))) x733 (> x1101 0) (= (x1494 x1501) x894) (= x145 (< x629 x876)) (= (x204 (+ x783 128)) x976) (= (x204 (+ x783 96)) x228) (= x1259 (x1114 26959946667150639794667015087019630673637144422540572481103610249215 x185)) (= x1101 (x1468 x180)) (= (x941 x626) x629) (= (x204 (+ x626 100)) x814) (= x781 (x1293 (- x814 x626))) (= x783 (x204 (+ 36 x626))) (= x888 (x204 (+ x1061 160))) (= x295 (x204 (+ 68 x626))) (= (x1293 (- x781 32)) x985) (= x913 (x204 (+ 32 x626))) (= (x1219 (x1376 x894)) x395) (= (x1468 x888) x44) (= x6 0) (= x185 (x804 x913)) (= (> x395 0) x540) (<= x894 1461501637330902918203684832716283019655932542975) (= x1501 x1298) (or (not x145) (and (= (x204 (+ x629 x976)) x653) x145)) (< 0 x1467) (= (< 0 x629) x219) x540) x811) (=> (not x733) x739))) x1422))
(assert (x786 x1142))
(assert (x786 x914))
(assert (x786 x890))
(assert (= (=> (and (not (> 1968616202 x1175)) (= x1175 2258409472) (not (= x1175 2061678023)) (= x643 x390) (= x643 (x1112 x1455)) (not (= x1175 1986467848)) (not (= 1968616202 x1175)) (<= x643 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x643 0) (= x1455 (x587 (x1376 x930) x763 0)) (= (x1219 (x1376 274184521717934524641157099916833587206)) x895) (= x763 (x587 (x1376 x1076) (x860 6) 0)) (not (> 911411945 x1175)) (< 0 x895) (> 2293535753 x1175) (>= 1461501637330902918203684832716283019655932542975 x930) (not (= 2211524764 x1175))) (=> (and (= x874 x526) (= x238 x857) (= x622 x390)) x444)) x456))
(assert (x786 x1063))
(assert (x786 x924))
(assert (x786 x1481))
(assert (x786 x1379))
(assert (x1341 x1197))
(assert (x817 x971))
(assert (x786 x317))
(assert (= x368 (x1342 (x1376 x368))))
(assert (x786 x847))
(assert (= x1160 (x1342 (x1376 x1160))))
(assert (= (x941 x419) (ite (= x228 x419) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x419))))
(assert (x786 x1044))
(assert (= 18446744073709551615 (x1342 (x860 18446744073709551615))))
(assert (x786 x939))
(assert (x1341 x1021))
(assert (x1341 x1202))
(assert (=> (<= x250 10000) (= (x860 x250) (x1376 x250))))
(assert (= (x941 x734) (ite (= x734 x228) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x734))))
(assert (= x902 (or x984 (and x112 x820))))
(assert (x1341 x1020))
(assert (x786 x823))
(assert (x786 x474))
(assert (x786 x107))
(assert (= x1015 (or (and x1306 x896) (and x130 x750))))
(assert (= x708 (and x623 x1354)))
(assert (= (ite (= x718 x901) x239 (x631 x718)) (x707 x718)))
(assert (=> (<= x1075 10000) (= (x1376 x1075) (x860 x1075))))
(assert (x1341 x711))
(assert (= (ite (= x1143 x881) x551 (x1337 x1143)) (x538 x1143)))
(assert (x786 x1428))
(assert (=> (>= 10000 x1120) (= (x860 x1120) (x1376 x1120))))
(assert (= x148 (and x820 (not x112))))
(assert (=> (<= x1324 10000) (= (x1376 x1324) (x860 x1324))))
(assert (x786 x1115))
(assert (= (x1342 (x1376 x90)) x90))
(assert (x786 x712))
(assert (= (=> (and (>= x1417 0) (= x1512 (x587 (x1376 x1174) (x860 7) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1417) (= x787 (x587 (x1376 x1151) x912 0)) (= x771 (= x1417 0)) (= (x587 (x1376 x1408) x1512 0) x912) (= x1417 (x878 x787)) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x1408)) (and (=> (and (not x230) (= (< 0 x1291) x230) x771 (= (x1293 (- x1174 1)) x1291)) x1155) (=> (and (= x1174 x893) (not x771)) x1390))) x244))
(assert (= (x260 x128) (ite (= x608 x128) x1326 (x595 x128))))
(assert (= (x806 x734) (ite (= x256 x734) x1459 (x1500 x734))))
(assert (= (ite (= x888 x901) x239 (x631 x888)) (x707 x888)))
(assert (x786 x571))
(assert (x786 x275))
(assert (= (x631 x734) (ite (= x254 x734) x31 (x292 x734))))
(assert (x786 x1053))
(assert (x786 x1145))
(assert (x1341 x1299))
(assert (= 0 (x4 x658)))
(assert (= (x1342 (x1376 x677)) x677))
(assert (x786 x1092))
(assert (x786 x1054))
(assert (= (=> (and (= (x1114 1461501637330902918203684832716283019655932542975 x529) x99) (= (x587 (x1376 x306) (x860 6) 0) x1434) (<= x843 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x314 (x587 (x1376 x99) x1434 0)) (= x843 (x1387 x314)) (>= x843 0) (= (= 0 x843) x801)) (and (=> (and (not x801) (= x915 x306)) x650) (=> x801 x268))) x202))
(assert (= (ite (= x180 x1247) x1467 (x106 x1247)) (x973 x1247)))
(assert (= (ite (= x1343 x901) x239 (x631 x1343)) (x707 x1343)))
(assert (= x832 x1380))
(assert (= (ite (= x658 x256) x1459 (x1500 x658)) (x806 x658)))
(assert (=> (<= x337 10000) (= (x860 x337) (x1376 x337))))
(assert (x786 x17))
(assert (x786 x559))
(assert (x786 x73))
(assert (= (x860 1986467848) (x1376 1986467848)))
(assert (x786 x286))
(assert (x1341 x463))
(assert (= x507 (x1342 (x1376 x507))))
(assert (x786 x115))
(assert (x786 x770))
(assert (x1341 x503))
(assert (x786 x1024))
(assert (= (ite (and x1389 x1006) (x89 x805) (ite (and (not x1389) x1006 x1098) (x89 x805) (x1436 x805))) (x666 x805)))
(assert (x786 x1125))
(assert (x786 x822))
(assert (= (ite (and x1228 x733 (not x145)) (x1370 x419) (x484 x419)) (x897 x419)))
(assert (= (ite (= x1492 x1247) x839 (x941 x1247)) (x648 x1247)))
(assert (= (x1072 x256) (ite (and x560 x660) (x631 x256) (ite (and (not x560) (not x1401) x660 x778) (x707 x256) (ite (and (not x560) (not x778) x660) (x631 x256) (x355 x256))))))
(assert (= (x806 x1247) (ite (= x256 x1247) x1459 (x1500 x1247))))
(assert (x786 x1087))
(assert (=> (<= x159 10000) (= (x1376 x159) (x860 x159))))
(assert (x786 x974))
(assert (= (ite (= x256 x180) x1459 (x1500 x180)) (x806 x180)))
(assert (x786 x505))
(assert (x786 x238))
(assert (= (ite (= x608 x1143) x1326 (x595 x1143)) (x260 x1143)))
(assert (= x187 (x1342 (x1376 x187))))
(assert (= (x1342 (x1376 x250)) x250))
(assert (x786 x1218))
(assert (=> (<= x572 10000) (= (x860 x572) (x1376 x572))))
(assert (= (ite (= x1397 x1046) x885 (x1382 x1046)) (x1500 x1046)))
(assert (= (ite (= x1046 x228) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x1046)) (x941 x1046)))
(assert true)
(assert (x786 x1365))
(assert (x786 x48))
(assert (=> (>= 10000 x837) (= (x1376 x837) (x860 x837))))
(assert (= x1251 (x1342 (x1376 x1251))))
(assert (= (x1342 (x1376 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (= 759532456 (x1342 (x860 759532456))))
(assert (=> (<= x501 10000) (= (x1376 x501) (x860 x501))))
(assert (= x988 (x1342 (x1376 x988))))
(assert (x1341 x930))
(assert (= 274184521717934524641157099916833587218 (x1342 (x1376 274184521717934524641157099916833587218))))
(assert (= (ite (and x660 x667) (x1170 x1448) (x934 x1448)) (x1022 x1448)))
(assert (= (x595 x1184) (ite (= x120 x1184) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1515 x1184))))
(assert (x786 x222))
(assert (= (x1370 x1399) (ite (and x511 x1358 x733 x219 x1228 (not x1074)) (x1478 x1399) (ite (and x219 x733 x511 (not x1358) x1228) (x1490 x1399) (ite (and x733 x1228 (not x511) x219) (x648 x1399) (ite (and x1228 (not x219) x733) (x941 x1399) (x810 x1399)))))))
(assert (x786 x218))
(assert (= (ite (= x1492 x658) x839 (x941 x658)) (x648 x658)))
(assert (x786 x837))
(assert (= (ite (and x1006 x1389) (x89 x578) (ite (and x1006 x1098 (not x1389)) (x89 x578) (x1436 x578))) (x666 x578)))
(assert (x786 x21))
(assert (= (x1342 (x1376 x674)) x674))
(assert (x786 x481))
(assert (x786 x1268))
(assert (= (x1342 (x1376 x1365)) x1365))
(assert (x1341 x411))
(assert (x786 x1392))
(assert (x786 x1475))
(assert (= (=> (= x1306 (= 274184521717934524641157099916833587214 x894)) (and (=> (and (= x920 274184521717934524641157099916833587206) (= x1026 (< x957 x591)) (not (= x1451 649617121)) (= x483 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1499) (and (= (<= x1499 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1499 64)))) (= (< x957 x1308) x1233) (>= 1461501637330902918203684832716283019655932542975 x824) (not (= x1451 1889567281)) (= x757 (x1243 x1464)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x813) (= x1308 x44) (<= 0 x757) (= x1378 (x587 (x1376 x1513) (x860 1) 0)) (> x1363 0) (= x1308 x591) (not x483) (not x1026) (= (x587 (x1376 274184521717934524641157099916833587206) (x860 1) 0) x1191) (>= x957 0) (= x181 (x1114 1461501637330902918203684832716283019655932542975 x824)) (not (< x1451 649617121)) (= x559 (x1293 (- x957 x1308))) (not x1233) (= 1 x1304) (not (= 2514000705 x1451)) (= 32 x437) (= (x1219 (x1376 274184521717934524641157099916833587214)) x1363) (= x1464 (x587 (x1376 x181) (x860 1) 0)) (= x824 x350) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x957) (= x1224 x349) (= x441 (+ x972 x1002)) (not (< x162 4)) (= x957 (x689 x1191)) (= x972 x757) (= 2835717307 x1451) (= x1499 (x1293 (- x162 4))) x1306 (= x1002 x591) (not (= x1451 826074471)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x757 x591)) (= (x1114 1461501637330902918203684832716283019655932542975 x824) x1513) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x757) (= x680 x162) (= 274184521717934524641157099916833587206 x609) (not x944) (= 68 x162) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x757 x591)) x944) (= (x587 (x1376 274184521717934524641157099916833587206) (x860 1) 0) x714)) x1071) (=> (not x1306) x246))) x471))
(assert (x786 x116))
(assert (= (x1342 (x1376 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x786 x217))
(assert (= (x1072 x1143) (ite (and x560 x660) (x631 x1143) (ite (and (not x1401) x778 x660 (not x560)) (x707 x1143) (ite (and (not x560) x660 (not x778)) (x631 x1143) (x355 x1143))))))
(assert (x786 x808))
(assert (x786 x1269))
(assert (= (ite (and x733 x1228 (not x145)) (x1370 x1247) (x484 x1247)) (x897 x1247)))
(assert (= (x1500 x1143) (ite (= x1397 x1143) x885 (x1382 x1143))))
(assert (= x809 (=> (and x932 (= x101 (> x1467 2)) (= (> x447 0) x950) (= (x11 (x1376 x711)) x241) (not x101) (not (= x883 0)) (or (not x950) (and x950 (= x909 (x617 x128)) (= x909 x1081) (= (not x875) x555) (= (= 0 x909) x875) (not (or (and (= (<= x338 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x338)) (> x338 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x128 (x204 (+ x1143 32))) (< 0 x909) (= (ite x555 1 0) x1081) (= (x617 x1143) x338))) (or (and (not x1134) (= x1129 x1143) (= x468 (x204 (+ x599 96)))) (and x1134 (= 96 x1143))) (= (< (x738 (x1376 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x932) (= (= x1125 0) x1134) (= (x617 x1143) x447)) x739)))
(assert (= x990 (x1342 (x1376 x990))))
(assert (= (ite (= x900 x120) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1515 x900)) (x595 x900)))
(assert (= (x631 x913) (ite (= x254 x913) x31 (x292 x913))))
(assert (= (ite (and x832 x736) (x973 x949) (x798 x949)) (x1323 x949)))
(assert (x786 x644))
(assert (= (ite (= x1247 x881) x551 (x1337 x1247)) (x538 x1247)))
(assert (= (x860 2512682246) (x1376 2512682246)))
(assert (= (x973 x718) (ite (= x718 x180) x1467 (x106 x718))))
(assert (=> (>= 10000 x144) (= (x860 x144) (x1376 x144))))
(assert (= (x171 x606) (ite (and x727 x1006) (x402 x606) (x291 x606))))
(assert (= (ite (and x733 (not x145) x1228) (x1370 x718) (x484 x718)) (x897 x718)))
(assert (x786 x233))
(assert (x786 x1367))
(assert (x1341 x1054))
(assert (x786 x205))
(assert (= x661 x832))
(assert (= (ite (= x1399 x180) x1467 (x106 x1399)) (x973 x1399)))
(assert (=> (<= x1292 10000) (= (x1376 x1292) (x860 x1292))))
(assert (x786 x951))
(assert (=> (>= 10000 x1197) (= (x860 x1197) (x1376 x1197))))
(assert (x786 x582))
(assert (= (x1072 x1309) (ite (and x560 x660) (x631 x1309) (ite (and (not x1401) x660 (not x560) x778) (x707 x1309) (ite (and (not x778) (not x560) x660) (x631 x1309) (x355 x1309))))))
(assert (x1341 x1392))
(assert (x786 x58))
(assert (=> (<= x270 10000) (= (x1376 x270) (x860 x270))))
(assert (= (x631 x1309) (ite (= x1309 x254) x31 (x292 x1309))))
(assert (x1341 x894))
(assert (x786 x174))
(assert (= (ite (= x128 x901) x239 (x631 x128)) (x707 x128)))
(assert (= (x631 x658) (ite (= x658 x254) x31 (x292 x658))))
(assert (= (ite (= x691 x1397) x885 (x1382 x691)) (x1500 x691)))
(assert (x786 x34))
(assert (x786 x1129))
(assert (= (x1342 (x1376 x939)) x939))
(assert (x786 x159))
(assert (x1341 x187))
(assert (x786 x432))
(assert (= (x806 x900) (ite (= x256 x900) x1459 (x1500 x900))))
(assert (= (ite (= x901 x254) x31 (x292 x901)) (x631 x901)))
(assert (x786 x398))
(assert (= (ite (and x736 x832) (x973 x1247) (x798 x1247)) (x1323 x1247)))
(assert (= x1329 (x1342 (x1376 x1329))))
(assert (x786 x1353))
(assert (= (or x1348 (and x123 x20) (and x661 x621)) x1171))
(assert (x1341 x319))
(assert (= (x806 x913) (ite (= x256 x913) x1459 (x1500 x913))))
(assert (=> (>= 10000 x930) (= (x860 x930) (x1376 x930))))
(assert (x786 x1286))
(assert (x786 x1079))
(assert (= x76 x905))
(assert (x1341 274184521717934524641157099916833587218))
(assert (x1341 x33))
(assert (x786 x96))
(assert (x786 x1127))
(assert (= (ite (and x130 x750) (x1187 x128) (x1415 x128)) (x1161 x128)))
(assert (x1066 x971 x1473))
(assert (x786 x1046))
(assert (= (ite (= x1471 x718) x1481 (x648 x718)) (x1490 x718)))
(assert (x786 x1344))
(assert (= (x4 x1247) 0))
(assert (= (x1342 (x1376 x572)) x572))
(assert (x786 x375))
(assert (x786 x1483))
(assert (= (x4 x1343) 0))
(assert (x786 x510))
(assert (x786 x550))
(assert (x786 x833))
(assert (x786 x335))
(assert (= (x1376 2743102681) (x860 2743102681)))
(assert (= (ite (and x560 x660) (x631 x1343) (ite (and (not x560) x660 (not x1401) x778) (x707 x1343) (ite (and x660 (not x560) (not x778)) (x631 x1343) (x355 x1343)))) (x1072 x1343)))
(assert (=> (>= 10000 x1461) (= (x860 x1461) (x1376 x1461))))
(assert (x786 x1459))
(assert (= (ite (and x1006 x1389) (x326 x787) (ite (and x1006 x1098 (not x1389)) (x1279 x787) (x1198 x787))) (x878 x787)))
(assert (= (x1342 (x1376 x1062)) x1062))
(assert (= (x1072 x913) (ite (and x660 x560) (x631 x913) (ite (and (not x1401) x778 (not x560) x660) (x707 x913) (ite (and x660 (not x560) (not x778)) (x631 x913) (x355 x913))))))
(assert (= (x1022 x1444) (ite (and x660 x667) (x1170 x1444) (x934 x1444))))
(assert (x1341 x1075))
(assert (x786 x1000))
(assert (x786 x1040))
(assert (=> (<= x526 10000) (= (x860 x526) (x1376 x526))))
(assert (= (and x1362 x2) x272))
(assert (x786 x622))
(assert (x1341 x507))
(assert (= (x1370 x180) (ite (and x733 x511 x1358 x219 x1228 (not x1074)) (x1478 x180) (ite (and x219 x511 x1228 (not x1358) x733) (x1490 x180) (ite (and x1228 x733 x219 (not x511)) (x648 x180) (ite (and x1228 (not x219) x733) (x941 x180) (x810 x180)))))))
(assert (=> (>= 10000 x1230) (= (x1376 x1230) (x860 x1230))))
(assert (x786 x518))
(assert (= (ite (= x581 x256) x1459 (x1500 x581)) (x806 x581)))
(assert (= (ite (= x180 x1343) x1467 (x106 x1343)) (x973 x1343)))
(assert (x786 x376))
(assert (= (x1478 x1247) (ite (= x1253 x1247) x119 (x1490 x1247))))
(assert (= x1120 (x1342 (x1376 x1120))))
(assert (x786 x1146))
(assert (x786 x43))
(assert (= x463 (x1342 (x1376 x463))))
(assert (=> (>= 10000 x1157) (= (x1376 x1157) (x860 x1157))))
(assert (= (ite (and x130 x750) (x1187 x1399) (x1415 x1399)) (x1161 x1399)))
(assert (x786 x1308))
(assert (x786 x1154))
(assert (x1341 x1120))
(assert (not x1206))
(assert (x786 x237))
(assert (= (x1323 x1046) (ite (and x736 x832) (x973 x1046) (x798 x1046))))
(assert (= (ite (= x1309 x1397) x885 (x1382 x1309)) (x1500 x1309)))
(assert (x786 x968))
(assert (= x1174 (x1342 (x1376 x1174))))
(assert (= x160 (x1342 (x1376 x160))))
(assert (= (x1342 (x1376 x1145)) x1145))
(assert (= (ite (and x130 x750) (x1187 x1143) (x1415 x1143)) (x1161 x1143)))
(assert (x786 x1467))
(assert (x786 x228))
(assert (= (ite (= x1471 x734) x1481 (x648 x734)) (x1490 x734)))
(assert (x1341 x1408))
(assert (x786 x706))
(assert (x786 x1386))
(assert (= (ite (= x254 x581) x31 (x292 x581)) (x631 x581)))
(assert (=> (>= 10000 x1062) (= (x860 x1062) (x1376 x1062))))
(assert (x817 x233))
(assert (=> (<= x1174 10000) (= (x1376 x1174) (x860 x1174))))
(assert (= (x1342 (x1376 x1157)) x1157))
(assert (x786 x1121))
(assert (x786 x783))
(assert (= (x1342 (x1376 x1385)) x1385))
(assert (= x1257 (=> (= 0 x1385) x453)))
(assert (= x247 x700))
(assert (x786 x1150))
(assert (x786 x814))
(assert (= (ite (and x511 x1358 x733 x219 x1228 (not x1074)) (x1478 x1247) (ite (and x733 x219 x511 x1228 (not x1358)) (x1490 x1247) (ite (and x219 x733 (not x511) x1228) (x648 x1247) (ite (and x1228 x733 (not x219)) (x941 x1247) (x810 x1247))))) (x1370 x1247)))
(assert (= (ite (= x180 x128) x1467 (x106 x128)) (x973 x128)))
(assert (x786 x958))
(assert (= (=> (and (or (and x19 (= x136 0) (= 0 x1135)) (and (<= x286 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x587 (x1376 x1160) (x860 10) 0) x1225) (or (and (not x791) (= x286 x136) (= x1135 1)) (and (= 0 x136) (= 0 x1135) x791)) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x1202) (= x791 (= 0 x286)) (<= 0 x286) (= x614 (x587 (x1376 x1202) x1225 0)) (not x19) (= (x512 x614) x286))) (= (= 0 x1160) x19)) x1273) x704))
(assert (x786 x1304))
(assert (= (ite (= x120 x419) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1515 x419)) (x595 x419)))
(assert (= (x1342 (x1376 x1020)) x1020))
(assert (x786 x674))
(assert (=> (<= x521 10000) (= (x1376 x521) (x860 x521))))
(assert (= (x747 x966) (ite (and x667 x660) (x1381 x966) (x440 x966))))
(assert (x786 x1335))
(assert (= (x973 x1046) (ite (= x1046 x180) x1467 (x106 x1046))))
(assert (x1341 x572))
(assert (x786 x1166))
(assert (= (x806 x1046) (ite (= x256 x1046) x1459 (x1500 x1046))))
(assert (= x1073 (x1342 (x1376 x1073))))
(assert (x1341 x892))
(assert (x1341 x25))
(assert (x1341 x1324))
(assert (= (x4 x1399) 0))
(assert (=> (>= 10000 x1079) (= (x860 x1079) (x1376 x1079))))
(assert (= (ite (and x733 x511 (not x1074) x1228 x1358 x219) (x1478 x734) (ite (and x511 (not x1358) x733 x1228 x219) (x1490 x734) (ite (and x733 (not x511) x1228 x219) (x648 x734) (ite (and x733 (not x219) x1228) (x941 x734) (x810 x734))))) (x1370 x734)))
(assert (=> (>= 10000 x36) (= (x1376 x36) (x860 x36))))
(assert (= (ite (= x1184 x1253) x119 (x1490 x1184)) (x1478 x1184)))
(assert (x786 x473))
(assert (=> (>= 10000 x16) (= (x1376 x16) (x860 x16))))
(assert (=> (>= 10000 x914) (= (x860 x914) (x1376 x914))))
(assert (= 1889567281 (x1342 (x860 1889567281))))
(assert (= (ite (= x256 x254) x31 (x292 x256)) (x631 x256)))
(assert (x786 x1047))
(assert (x786 x779))
(assert (x786 x696))
(assert (=> (>= 10000 x988) (= (x1376 x988) (x860 x988))))
(assert (x786 x840))
(assert (= x411 (x1342 (x1376 x411))))
(assert (x786 x1325))
(assert (= (x878 x1100) (ite (and x1006 x1389) (x326 x1100) (ite (and (not x1389) x1006 x1098) (x1279 x1100) (x1198 x1100)))))
(assert (x786 x1186))
(assert (= x1510 (=> (and (= x699 (= x1245 0)) (= x1060 (= x960 0)) (or (and (<= 0 x212) (= x1333 (x1200 x1153)) (or (and (not x1465) (= x279 0)) (and (= (x1200 x1153) x1328) (= (> x981 x1328) x635) x1465 (or (and (= x279 x95) (= x95 (ite (< x73 604800) x73 604800)) (= x216 604800) (not x1152) (= x73 (x1293 (- x1003 x317))) (not (> x317 x1003))) (and (= (x1200 x1019) x215) (= x1249 x279) x1152 (not (< x1003 x215)) (= (x1293 (- x1003 x215)) x1249))) (= (= x317 0) x1152) (or (and (not x635) (= x981 x1003)) (and x635 (= x1003 x1107) (= (x1200 x1153) x1107))))) (= (x587 (x1376 x507) (x860 1) 0) x124) (or (and (= x764 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= (x587 (x1376 x1151) x1435 0) x769) x844 (= x1411 x691) (= x919 (x587 (x1376 x507) (x860 7) 0)) (= x1435 (x587 (x1376 x764) x919 0))) (and (= (x587 (x1376 x1151) x978 0) x1052) (= x1163 (x587 (x1376 x411) x735 0)) (= (x587 (x1376 x507) (x860 3) 0) x735) (= x864 (x587 (x1376 x507) (x860 7) 0)) (< (* x960 x279) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x411) (= x1411 x691) (= (x587 (x1376 x1151) x1163 0) x298) (= (x587 (x1376 x1075) x864 0) x978) (not x844) (= (* x279 x960) x652) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x1075) (= x891 x652))) (= x1058 (x587 (x1376 x706) x45 0)) (= (x1185 x214) x212) (= (x587 (x1376 x507) (x860 7) 0) x45) (not x1060) (<= 0 x317) (= x1465 (> x1333 x317)) (= (x851 x124 1) x214) (= x844 (= x279 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x212) (<= 0 x380) (= x991 (x587 (x1376 x1151) x1058 0)) (= x706 (x1114 1461501637330902918203684832716283019655932542975 x529)) (<= x317 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1153 (x204 (+ x1419 96))) (= (x878 x991) x317) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x380) (= x380 (x1173 x124)) (= x1411 (x204 (+ 128 x1419)))) (and (= x368 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= (x587 (x1376 x507) (x860 7) 0) x1084) x1060 (= (x587 (x1376 x1151) x586 0) x675) (= x1019 x691) (= x586 (x587 (x1376 x368) x1084 0)))) (or (and (= (x587 (x1376 x18) x53 0) x343) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x18) (= (x587 (x1376 x507) (x860 9) 0) x53) (not x699) (= x762 (x587 (x1376 x1151) x343 0))) x699)) x357)))
(assert (= x8 (and x940 x127)))
(assert (x786 x136))
(assert (x786 x894))
(assert (x1341 x156))
(assert (x786 x1209))
(assert (= x1197 (x1342 (x1376 x1197))))
(assert (x786 x649))
(assert (= (ite (= x658 x228) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x658)) (x941 x658)))
(assert (= (x973 x1309) (ite (= x1309 x180) x1467 (x106 x1309))))
(assert (x786 x876))
(assert (x786 x815))
(assert (x817 x1269))
(assert (x786 x1272))
(assert (x786 x551))
(assert (x1341 x594))
(assert (x786 x1231))
(assert (=> (<= x475 10000) (= (x860 x475) (x1376 x475))))
(assert (= (ite (= x581 x1492) x839 (x941 x581)) (x648 x581)))
(assert (= x1171 x1228))
(assert (x1341 x1329))
(assert (x786 x1214))
(assert (= (x1478 x128) (ite (= x1253 x128) x119 (x1490 x128))))
(assert (x786 x1020))
(assert (= x700 x206))
(assert (= (x1500 x949) (ite (= x949 x1397) x885 (x1382 x949))))
(assert (= 2512682246 (x1342 (x860 2512682246))))
(assert (x786 x215))
(assert (x786 x152))
(assert (= x1380 x1321))
(assert (x786 x1033))
(assert (=> (>= 10000 x698) (= (x860 x698) (x1376 x698))))
(assert (x786 x437))
(assert (=> (<= x1089 10000) (= (x1376 x1089) (x860 x1089))))
(assert (x1341 x563))
(assert (x786 x955))
(assert (x1341 274184521717934524641157099916833587214))
(assert (x786 x1334))
(assert (= 69947311 (x1342 (x860 69947311))))
(assert (x786 x1107))
(assert (= (x1337 x128) (ite (= x128 x1344) x351 (x260 x128))))
(assert (=> (>= 10000 x1349) (= (x860 x1349) (x1376 x1349))))
(assert (x23 x1121 x1488))
(assert (x786 x1287))
(assert (x786 x1453))
(assert (x786 x1482))
(assert (x786 x828))
(assert (x786 x758))
(assert (= (x4 x734) 0))
(assert (= (=> (and (= x567 (= 0 x1469)) (<= x885 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x38 x1444) x656) (or (and (or (and (= x797 x417) (= (x1500 x1397) x417) x438) (and (= x981 x797) (not x438))) (or (and (= 604800 x275) (not x842) (= x1067 x1469) (not (> x861 x797)) (= (x1293 (- x797 x861)) x1262) (= x1067 (ite (> 604800 x1262) x1262 604800))) (and x842 (= (x1293 (- x797 x466)) x1133) (= x1133 x1469) (= x466 (x1500 x691)) (not (< x797 x466)))) (= (= 0 x861) x842) (= x438 (< x342 x981)) x1043 (= x342 (x1500 x1397))) (and (= 0 x1469) (not x1043))) (<= 0 x885) (= x32 (x587 (x1376 x507) (x860 3) 0)) (= (x587 (x1376 x1085) x32 0) x948) (= (x1500 x1397) x5) (= x885 (x1185 x1090)) (= (x587 (x1376 x115) x425 0) x1223) (= (x1094 x578) x141) (= (x851 x27 1) x1090) (= (x587 (x1376 x507) (x860 5) 0) x318) (= (x587 (x1376 x1230) x318 0) x1444) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x115) (or (and (= (x587 (x1376 x865) x977 0) x396) (= (x587 (x1376 x507) (x860 6) 0) x977) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x865) x567) (and (= (x587 (x1376 x507) (x860 6) 0) x1498) (not x567) (= (x587 (x1376 x616) x1498 0) x220) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x594) (= x1307 x785) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1469 x217)) (= (x587 (x1376 x507) (x860 5) 0) x1012) (= (* x1469 x217) x785) (= x816 (x587 (x1376 x594) x1012 0)) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x616))) (= (= 0 x141) x1048) (= x1043 (< x861 x5)) (= x999 x626) (= x861 (x747 x1223)) (= x1397 (x204 (+ x691 32))) (or (and (= (x587 (x1376 x521) x1205 0) x102) (= (x587 (x1376 x507) (x860 10) 0) x1205) (not x1139) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x521)) x1139) (= x1230 (x1114 1461501637330902918203684832716283019655932542975 x529)) (>= x1188 0) (>= x656 0) (<= x656 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= x1388 x1242) (= x1242 (x204 (+ x507 1))) x1048) (and (= x779 0) (or (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1091 x266)) (= (x1494 x163) x677) (= x1165 (x587 (x1376 x756) x855 0)) (= x1183 (x587 (x1376 x1409) x519 0)) (= (div x536 1000000000000000000) x266) (or (and (= (x587 (x1376 x1020) x721 0) x277) (= x362 0) (= x394 (* x1440 x522)) (= (x587 (x1376 x1021) x78 0) x721) (= x1020 (x1494 x473)) (= x473 (x204 (+ 64 x169))) (= x1144 x1360) (= (x806 x949) x1360) (<= 0 x362) (= x362 (x746 x352)) (= (x587 (x1376 x187) x65 0) x352) (<= x1020 1461501637330902918203684832716283019655932542975) (= x372 (div x394 1000000000000000000)) (>= x1440 0) (= x187 (x1494 x473)) (= x949 (x204 (+ 192 x1061))) (not x524) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x362) (= x65 (x587 (x1376 x1151) x872 0)) (= (+ x1489 x1144) x55) (= x946 (x587 (x1376 x507) (x860 4) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1360 x372)) (< 1 x1467) (< 1 x1467) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x990) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1440 x522)) (> x641 1) x1137 (= x1021 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= x1440 (x701 x277)) (= x641 (x806 x180)) (<= x187 1461501637330902918203684832716283019655932542975) (= x1489 x372) (<= x1440 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x587 (x1376 x507) (x860 11) 0) x78) (= (< 2 x1467) x524) (= x872 (x587 (x1376 x990) x946 0))) (not x1137)) (= x519 (x587 (x1376 x507) (x860 4) 0)) (= (x587 (x1376 x33) x1165 0) x1350) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x1409) (= x108 (x1500 x180)) (< 0 x1467) (<= x33 1461501637330902918203684832716283019655932542975) (= x1137 (> x1467 1)) (= x1298 x163) (>= 1461501637330902918203684832716283019655932542975 x677) (= x41 x1091) (= (+ x41 x575) x1459) (<= 0 x1196) (= x33 (x1494 x163)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x522 x1196)) (= x575 x266) (= x1315 0) (= x256 (x204 (+ x1061 160))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1315) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1196) (> x108 0) (= (x701 x1350) x1196) (= (x587 (x1376 x1151) x1183 0) x435) (= x756 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= x1091 (x1500 x256)) (= (* x1196 x522) x536) (>= x1315 0) (= (x587 (x1376 x677) x435 0) x1511) (= (x587 (x1376 x507) (x860 11) 0) x855) (> x1467 0) x576 (= (x746 x1511) x1315)) (not x576)) (= x638 (x204 (+ 1 x507))) (not x1048) (= x576 (> x1467 0)) (= x1388 x638) (= x522 (div x1164 x656)) (= (ite (> x141 115792089237316195423570985008687907853269984665640564039457) 1 0) x822) (= (x1114 x1334 x822) x779) (= x1164 (mod (* x141 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1334 1) (> x656 0))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1188) (= (x1173 x27) x1188) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x861) (= (x587 (x1376 x507) (x860 6) 0) x425) (= (x587 (x1376 x1151) x948 0) x578) (= (x587 (x1376 x507) (x860 1) 0) x27) (> x1388 x122) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x1085) (= (x204 (+ x691 64)) x999) (<= 0 x141) (<= 0 x861) (= (= 0 x1102) x1139) (<= x141 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x67) x502))
(assert (x786 x781))
(assert (= x1503 (x1342 (x1376 x1503))))
(assert (x786 x599))
(assert (x786 x818))
(assert (x786 x960))
(assert (x786 x265))
(assert (x786 x1270))
(assert (x786 x641))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x48) (= x760 (= x989 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x989) (= x1056 (x587 (x1376 x1292) x668 0)) (= x1292 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= (x587 (x1376 x306) (x860 6) 0) x668) (>= x48 0) (= (x1387 x1056) x989) (<= 0 x989) (not (< x48 x571))) (and (=> (and (= x1287 (x512 x311)) (>= x1287 0) (= x311 (x587 (x1376 x1260) x568 0)) (not x760) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1287) (= x136 x1287) (= 0 x1135) (= x1260 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= (x587 (x1376 x306) (x860 10) 0) x568)) x1273) (=> x760 x1280))) x996))
(assert (= (x806 x1343) (ite (= x256 x1343) x1459 (x1500 x1343))))
(assert (= (x1478 x734) (ite (= x734 x1253) x119 (x1490 x734))))
(assert (x786 x956))
(assert (x786 x825))
(assert (x786 x1349))
(assert (=> (<= x1154 10000) (= (x1376 x1154) (x860 x1154))))
(assert (x786 x1363))
(assert (= (x973 x901) (ite (= x180 x901) x1467 (x106 x901))))
(assert (x1341 x16))
(assert (x786 x1067))
(assert (x23 x1148 x947))
(assert (x786 x976))
(assert (x786 x47))
(assert (x786 x891))
(assert (x786 x1291))
(assert (x786 x18))
(assert (x786 x549))
(assert (= (ite (and (not x1074) x219 x1358 x733 x511 x1228) (x1478 x1184) (ite (and x511 x219 x1228 (not x1358) x733) (x1490 x1184) (ite (and (not x511) x733 x219 x1228) (x648 x1184) (ite (and x733 (not x219) x1228) (x941 x1184) (x810 x1184))))) (x1370 x1184)))
(assert (=> (>= 10000 x1054) (= (x860 x1054) (x1376 x1054))))
(assert (= (x4 x128) 0))
(assert (= 0 (x4 160)))
(assert (x786 x1245))
(assert (=> (>= 10000 x1202) (= (x1376 x1202) (x860 x1202))))
(assert (= x99 (x1342 (x1376 x99))))
(assert (x786 x865))
(assert (x786 x1177))
(assert (= x1454 (or (and x1271 (not x1303)) (and (not x176) x148) (and x771 x768))))
(assert (= (x1072 x949) (ite (and x560 x660) (x631 x949) (ite (and x660 x778 (not x560) (not x1401)) (x707 x949) (ite (and (not x560) (not x778) x660) (x631 x949) (x355 x949))))))
(assert (= x975 (=> (and (= x193 (x587 (x1376 x40) (x860 7) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x712) (not (= x637 635128645)) (< x637 911411945) (= 759532456 x637) (>= 1461501637330902918203684832716283019655932542975 x703) (not (< x637 468353030)) (= (x587 (x1376 x703) x193 0) x1077) (= (x587 (x1376 x1054) x1077 0) x1100) (<= x1054 1461501637330902918203684832716283019655932542975) (= (x504 x1100) x712) (<= 0 x712) (= (x1219 (x1376 274184521717934524641157099916833587206)) x1313) (= x712 x1482) (> x1313 0) (> 2293535753 x637) (not (= 468353030 x637))) (=> (and (= x698 x238) (= x1482 x951) (= x475 x1507) (= x482 x874)) x1149))))
(assert (x786 x920))
(assert (x786 x363))
(assert (= (ite (= x1309 x1492) x839 (x941 x1309)) (x648 x1309)))
(assert (x786 x1197))
(assert (x786 x1313))
(assert (x786 x457))
(assert (x786 x913))
(assert (= (x860 2418364589) (x1376 2418364589)))
(assert (x23 x276 x1088))
(assert (x786 x1172))
(assert (x786 x390))
(assert (= (x260 x1247) (ite (= x608 x1247) x1326 (x595 x1247))))
(assert (= (x860 2960351575) (x1376 2960351575)))
(assert (x817 x869))
(assert (x1341 x500))
(assert (x1341 x144))
(assert (x786 x553))
(assert (= (x1342 (x1376 x1063)) x1063))
(assert (= x594 (x1342 (x1376 x594))))
(assert (= (x1342 (x860 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (= x961 (=> (= x189 (< 0 x306)) (and (=> (not x189) x1445) (=> x189 x409)))))
(assert (x1341 x1210))
(assert (x786 x857))
(assert (=> (<= x115 10000) (= (x860 x115) (x1376 x115))))
(assert (=> (<= x594 10000) (= (x860 x594) (x1376 x594))))
(assert (= 274184521717934524641157099916833587214 (x1342 (x860 274184521717934524641157099916833587214))))
(assert (= (or x330 x264) x210))
(assert (x786 x793))
(assert (x786 x212))
(assert (= (x747 x1223) (ite (and x660 x667) (x1381 x1223) (x440 x1223))))
(assert (= (ite (= x1046 x901) x239 (x631 x1046)) (x707 x1046)))
(assert (x786 x718))
(assert (= (ite (and x623 x1354 (not x56)) (x1041 x1143) (x1414 x1143)) (x898 x1143)))
(assert (= (ite (= x1184 x1397) x885 (x1382 x1184)) (x1500 x1184)))
(assert (= (ite (and x560 x660) (x631 x1046) (ite (and (not x1401) x778 x660 (not x560)) (x707 x1046) (ite (and (not x560) x660 (not x778)) (x631 x1046) (x355 x1046)))) (x1072 x1046)))
(assert (x786 x462))
(assert (x786 x293))
(assert (=> (<= x90 10000) (= (x860 x90) (x1376 x90))))
(assert (x1341 x642))
(assert (x786 x362))
(assert (= (ite (= x1492 x1184) x839 (x941 x1184)) (x648 x1184)))
(assert (x817 x185))
(assert (= (ite (= x180 x734) x1467 (x106 x734)) (x973 x734)))
(assert (x786 x616))
(assert (=> (>= 10000 x1251) (= (x860 x1251) (x1376 x1251))))
(assert (= (x1342 (x1376 x381)) x381))
(assert (x786 x59))
(assert (x1341 x616))
(assert (= (ite (= x1143 x180) x1467 (x106 x1143)) (x973 x1143)))
(assert (= x1513 (x1342 (x1376 x1513))))
(assert (x786 x981))
(assert (x786 x859))
(assert (= (x1342 (x1376 x549)) x549))
(assert (x786 x95))
(assert (= (and x151 x1256) x1271))
(assert (=> (>= 10000 x1145) (= (x1376 x1145) (x860 x1145))))
(assert (x1341 x674))
(assert (=> (<= x1327 10000) (= (x1376 x1327) (x860 x1327))))
(assert (= (x1500 x1247) (ite (= x1397 x1247) x885 (x1382 x1247))))
(assert (x786 x1305))
(assert (= x482 (x1342 (x1376 x482))))
(assert (x1066 x185 x1361))
(assert (x340 x869 x1317))
(assert (x786 x5))
(assert (= x410 (and x856 x262)))
(assert (= (and x776 x906) x46))
(assert (= x159 (x1342 (x1376 x159))))
(assert (x786 x1135))
(assert (= (x155 x203) (ite (= x242 x203) 0 (x612 x203))))
(assert (= (ite (and x832 x736) (x973 x1343) (x798 x1343)) (x1323 x1343)))
(assert (= (and x439 x272) x906))
(assert (x1341 x368))
(assert (= x1371 (x1342 (x1376 x1371))))
(assert (x1341 274184521717934524641157099916833587206))
(assert (x1341 x1073))
(assert (x786 x1299))
(assert (= x650 (=> (= x915 x1160) x704)))
(assert (x786 x1091))
(assert (x1341 x764))
(assert (x1341 x1453))
(assert (= (x1342 (x1376 x500)) x500))
(assert (=> (<= x706 10000) (= (x860 x706) (x1376 x706))))
(assert (= (x707 x734) (ite (= x901 x734) x239 (x631 x734))))
(assert (x786 x1235))
(assert (= (ite (= x734 x1492) x839 (x941 x734)) (x648 x734)))
(assert (x1341 x60))
(assert (x786 x1207))
(assert (x1341 x99))
(assert (x1341 x90))
(assert (x1341 x306))
(assert (= (x1342 (x1376 x60)) x60))
(assert (x786 x55))
(assert (=> (<= x269 10000) (= (x1376 x269) (x860 x269))))
(assert (x387 x222 x741 x261 x334))
(assert (x786 x1317))
(assert (x786 x1247))
(assert (= (x860 274184521717934524641157099916833587214) (x1376 274184521717934524641157099916833587214)))
(assert (x786 x881))
(assert (= x123 x660))
(assert (x786 x306))
(assert (=> (<= x1063 10000) (= (x1376 x1063) (x860 x1063))))
(assert (x786 x563))
(assert (= (and x130 (not x750)) x896))
(assert (x786 x774))
(assert (x786 x169))
(assert (= (x1376 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x860 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x786 x1266))
(assert (x786 x1188))
(assert (x786 x846))
(assert (x786 x338))
(assert (= (x860 649617121) (x1376 649617121)))
(assert (= (x707 x1184) (ite (= x1184 x901) x239 (x631 x1184))))
(assert (= 0 (x4 x581)))
(assert (x786 x1128))
(assert (x786 x537))
(assert (x786 x1230))
(assert (x786 x281))
(assert (= (ite (= x1397 x900) x885 (x1382 x900)) (x1500 x900)))
(assert (x786 x1253))
(assert (= (x860 274184521717934524641157099916833587218) (x1376 274184521717934524641157099916833587218)))
(assert (x786 x573))
(assert (x786 x1119))
(assert (= (x878 x991) (ite (and x1006 x1389) (x326 x991) (ite (and x1098 x1006 (not x1389)) (x1279 x991) (x1198 x991)))))
(assert (x786 x299))
(assert (x786 x893))
(assert (= (x1323 x1143) (ite (and x736 x832) (x973 x1143) (x798 x1143))))
(assert (x786 x992))
(assert (= x181 (x1342 (x1376 x181))))
(assert (= (x1342 (x860 1986467848)) 1986467848))
(assert (x786 x187))
(assert (= (x1342 (x1376 x642)) x642))
(assert (=> (<= x1136 10000) (= (x860 x1136) (x1376 x1136))))
(assert (x786 x1249))
(assert (x786 x1507))
(assert (=> (<= x1151 10000) (= (x860 x1151) (x1376 x1151))))
(assert (=> (<= x729 10000) (= (x1376 x729) (x860 x729))))
(assert (= (x897 x180) (ite (and x733 (not x145) x1228) (x1370 x180) (x484 x180))))
(assert (= (x4 x913) 0))
(assert (= (x631 x1247) (ite (= x1247 x254) x31 (x292 x1247))))
(assert (= (x1323 x718) (ite (and x832 x736) (x973 x718) (x798 x718))))
(assert (x786 x861))
(assert (= (x860 69947311) (x1376 69947311)))
(assert (x786 x1202))
(assert (x786 x441))
(assert (= x1230 (x1342 (x1376 x1230))))
(assert (x786 x1418))
(assert (= (x707 x157) (ite (= x901 x157) x239 (x631 x157))))
(assert (x786 x990))
(assert (=> (>= 10000 x25) (= (x1376 x25) (x860 x25))))
(assert (=> (<= x116 10000) (= (x1376 x116) (x860 x116))))
(assert (x786 x1309))
(assert (= x25 (x1342 (x1376 x25))))
(assert (x786 x756))
(assert (=> (>= 10000 x1076) (= (x860 x1076) (x1376 x1076))))
(assert (= (ite (= x256 x180) x1467 (x106 x256)) (x973 x256)))
(assert (= (x1342 (x1376 x1409)) x1409))
(assert (= (ite (and x123 x20) (x171 x203) (ite (and x621 x661) (x402 x203) (ite (and x902 x699) (x171 x203) (x245 x203)))) (x612 x203)))
(assert (x786 x94))
(assert (= x703 (x1342 (x1376 x703))))
(assert (x786 x185))
(assert (x786 x295))
(assert (x786 x276))
(assert (x786 x500))
(assert (x786 x383))
(assert (= (x860 826074471) (x1376 826074471)))
(assert (x786 x353))
(assert (= (x1342 (x860 2798343961)) 2798343961))
(assert (= (x1342 (x1376 x669)) x669))
(assert (=> (<= x1210 10000) (= (x1376 x1210) (x860 x1210))))
(assert (x1341 x401))
(assert (= x1260 (x1342 (x1376 x1260))))
(assert (x786 x637))
(assert (= (x260 x900) (ite (= x608 x900) x1326 (x595 x900))))
(assert (x786 x221))
(assert (= (x1342 (x1376 x1085)) x1085))
(assert (x1341 x1230))
(assert (=> (<= x678 10000) (= (x860 x678) (x1376 x678))))
(assert (= (and x1303 x1271) x768))
(assert (x786 x883))
(assert (= x294 (=> (and (or (and (= x167 0) (= x408 0) x1393) (and (= (x402 x937) x1167) (not x1393) (= x1028 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= x937 (x587 (x1376 x1151) x301 0)) (= x676 (x587 (x1376 x1453) (x860 9) 0)) (>= x1167 0) (= (x587 (x1376 x1028) x676 0) x301) (= x408 x1167) (= 1 x167) (<= x1167 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= x1393 (= 0 x1453))) x316)))
(assert (x786 x613))
(assert (x1341 x677))
(assert (x786 x1519))
(assert (=> (>= 10000 x892) (= (x1376 x892) (x860 x892))))
(assert (x1341 x1182))
(assert (x786 x1019))
(assert (= x724 (=> (and (not (= 2061678023 x829)) (< 0 x375) (= x690 (x1387 x848)) (>= x690 0) (= 2258409472 x829) (not (= x829 1986467848)) (= (x1219 (x1376 274184521717934524641157099916833587206)) x375) (= x848 (x587 (x1376 x1136) x819 0)) (= x819 (x587 (x1376 x1395) (x860 6) 0)) (= x690 x1119) (< x829 2293535753) (not (< x829 1968616202)) (not (> 911411945 x829)) (<= x690 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1136 1461501637330902918203684832716283019655932542975) (not (= 2211524764 x829)) (not (= 1968616202 x829))) (=> (and (= x25 x874) (= x1119 x774) (= x238 x1120)) x431))))
(assert (x786 x1295))
(assert (= (x1337 x419) (ite (= x1344 x419) x351 (x260 x419))))
(assert (= (x648 x419) (ite (= x419 x1492) x839 (x941 x419))))
(assert (= (x860 635128645) (x1376 635128645)))
(assert (x1341 x181))
(assert (x1341 x939))
(assert (x1341 x1174))
(assert (=> (>= 10000 x1248) (= (x1376 x1248) (x860 x1248))))
(assert (x786 x1133))
(assert (x786 x690))
(assert (x1341 x698))
(assert (x786 x175))
(assert (x786 x508))
(assert (= (ite (= x254 x718) x31 (x292 x718)) (x631 x718)))
(assert (= (x557 x1070) (ite (and x1031 x660) (x512 x1070) (x1374 x1070))))
(assert (= (x1041 x1143) (ite (and x426 x623 x1316 x777 (not x605) x1354) (x538 x1143) (ite (and x1354 x623 x1316 (not x426) x777) (x1337 x1143) (ite (and x1354 x777 x623 (not x1316)) (x260 x1143) (ite (and x623 x1354 (not x777)) (x595 x1143) (x208 x1143)))))))
(assert (= x278 (and x708 (not x826))))
(assert (= x1103 (=> (and (= (x747 x1394) x924) (= x1016 (x587 (x1376 x507) (x860 6) 0)) (>= x924 0) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x859) (= (= x924 0) x776) (<= x924 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1394 (x587 (x1376 x859) x1016 0))) (and (=> x776 x118) (=> (and (= x1087 x507) (not x776)) x1442)))))
(assert (= (x1342 (x1376 x1182)) x1182))
(assert (=> (<= x1385 10000) (= (x860 x1385) (x1376 x1385))))
(assert (= (x1323 x901) (ite (and x832 x736) (x973 x901) (x798 x901))))
(assert (x786 x999))
(assert (x786 x138))
(assert (x1341 x729))
(assert (x786 x1410))
(assert (=> (<= x21 10000) (= (x860 x21) (x1376 x21))))
(assert (= x1237 (=> (and x752 (= (x1312 (x1376 274184521717934524641157099916833587206)) x332) (= x728 (x1312 (x1376 274184521717934524641157099916833587206))) (= x495 (< x956 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (>= x728 0) x424) x424 (= x836 x1463) x495 (= (= 274184521717934524641157099916833587218 x711) x826) (= (< (x784 (x1376 x711)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x752) (= x1024 (x784 (x1376 x711))) (= x956 (x1312 (x1376 x711)))) (and (=> (and (= (x587 (x1376 274184521717934524641157099916833587206) (x860 1) 0) x795) (= x42 (x1114 1461501637330902918203684832716283019655932542975 x1269)) (= x179 x679) (= (x632 x1215) x416) (= 2835717307 x1420) (= 274184521717934524641157099916833587206 x662) (= x179 x237) (<= x416 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1420 649617121)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x748) (= x564 (or (> x474 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x474) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x474) true)))) (= (> x179 x416) x596) (not (= x1420 1889567281)) (= x1519 (x1114 1461501637330902918203684832716283019655932542975 x1269)) (< (+ x748 x237) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x826 (= (x1293 (- x479 4)) x474) (= x748 x755) (= x899 x1339) (not (= x1420 826074471)) (= (+ x1068 x755) x833) (= x1068 x237) (>= 1461501637330902918203684832716283019655932542975 x1269) (= x628 274184521717934524641157099916833587206) (not x933) (not x789) (not (= 2514000705 x1420)) (= (x1219 (x1376 274184521717934524641157099916833587218)) x293) (= x149 (x587 (x1376 x42) (x860 1) 0)) (= x789 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x748 x237))) (not x564) (not (< x1420 649617121)) (= x748 (x927 x149)) (= x933 (> x237 x416)) (= x1269 x350) (>= x748 0) (= x479 68) (not x596) (= (x1293 (- x416 x179)) x645) (= 32 x1125) (= x883 1) (= x1463 x479) (<= 0 x416) (< 0 x293) (not (> 4 x479)) (= (x587 (x1376 274184521717934524641157099916833587206) (x860 1) 0) x1215) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1430)) x809) (=> (not x826) x1194)))))
(assert (= (x1342 (x860 2418364589)) 2418364589))
(assert (x786 x122))
(assert (x786 x748))
(assert (= x1154 (x1342 (x1376 x1154))))
(assert (= x1349 (x1342 (x1376 x1349))))
(assert (x786 x254))
(assert (=> (>= 10000 x677) (= (x1376 x677) (x860 x677))))
(assert (= (=> (and (< x613 2293535753) (> x1082 0) (= x1082 (x1219 (x1376 274184521717934524641157099916833587206))) (> 468353030 x613) (= x841 (x587 (x1376 x1324) x579 0)) (= x1331 (x587 (x1376 x1145) (x860 9) 0)) (not (= x613 69947311)) (>= 1461501637330902918203684832716283019655932542975 x1324) (>= 1461501637330902918203684832716283019655932542975 x21) (= (x402 x841) x152) (not (= 87118632 x613)) (< x613 911411945) (= 142201243 x613) (<= x152 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x152) (= x152 x432) (= x579 (x587 (x1376 x21) x1331 0))) (=> (and (= x730 x874) (= x432 x685) (= x1507 x974) (= x238 x1079)) x305)) x1276))
(assert (= (x1323 x1309) (ite (and x832 x736) (x973 x1309) (x798 x1309))))
(assert (x786 x821))
(assert (x786 x895))
(assert (x786 x653))
(assert (= (x260 x419) (ite (= x419 x608) x1326 (x595 x419))))
(assert (= x553 (x1342 (x1376 x553))))
(assert (= x974 (x1342 (x1376 x974))))
(assert (x786 x181))
(assert (x786 x558))
(assert (= (ite (and x660 x560) (x631 x180) (ite (and x660 (not x560) (not x1401) x778) (x707 x180) (ite (and (not x560) x660 (not x778)) (x631 x180) (x355 x180)))) (x1072 x180)))
(assert (= (ite (and x130 x750) (x1187 x180) (x1415 x180)) (x1161 x180)))
(assert (x786 x899))
(assert (x1341 x138))
(assert (x786 x1085))
(assert (= x1076 (x1342 (x1376 x1076))))
(assert (= (x631 x1184) (ite (= x1184 x254) x31 (x292 x1184))))
(assert (=> (>= 10000 x259) (= (x1376 x259) (x860 x259))))
(assert (= x698 (x1342 (x1376 x698))))
(assert (= (ite (= x1253 x1143) x119 (x1490 x1143)) (x1478 x1143)))
(assert (= (x1342 (x1376 x1395)) x1395))
(assert (=> (<= x1073 10000) (= (x860 x1073) (x1376 x1073))))
(assert (= (ite (= x901 x900) x239 (x631 x900)) (x707 x900)))
(assert (= (ite (and x1228 (not x145) x733) (x1370 x1184) (x484 x1184)) (x897 x1184)))
(assert (= (x4 x901) 0))
(assert (x1341 x749))
(assert (x786 x1469))
(assert (=> (<= x764 10000) (= (x860 x764) (x1376 x764))))
(assert (x786 x629))
(assert (x786 x1420))
(assert (= x859 (x1342 (x1376 x859))))
(assert (x786 x535))
(assert (= (x1376 2211524764) (x860 2211524764)))
(assert (x1341 x1461))
(assert (x786 x598))
(assert (=> (>= 10000 x33) (= (x1376 x33) (x860 x33))))
(assert (x786 x790))
(assert (x786 x1122))
(assert (x1341 x678))
(assert (= x156 (x1342 (x1376 x156))))
(assert (=> (>= 10000 x181) (= (x1376 x181) (x860 x181))))
(assert (= (ite (= x1471 x1309) x1481 (x648 x1309)) (x1490 x1309)))
(assert (x786 x1458))
(assert (= (x1370 x900) (ite (and x1228 x1358 x733 (not x1074) x511 x219) (x1478 x900) (ite (and (not x1358) x733 x1228 x511 x219) (x1490 x900) (ite (and x733 x1228 x219 (not x511)) (x648 x900) (ite (and x733 (not x219) x1228) (x941 x900) (x810 x900)))))))
(assert (x786 x179))
(assert (= (x1342 (x1376 x729)) x729))
(assert (= x42 (x1342 (x1376 x42))))
(assert (= (x1376 18446744073709551615) (x860 18446744073709551615)))
(assert (x786 x119))
(assert (x786 x269))
(assert (= (x631 x1046) (ite (= x254 x1046) x31 (x292 x1046))))
(assert (x1341 x865))
(assert (= x67 (=> (and (or (not x725) (and (= x556 (x587 (x1376 x306) (x860 9) 0)) (= (x587 (x1376 x1151) x37 0) x242) (= (x204 (+ 1 x306)) x501) (= x37 (x587 (x1376 x1182) x556 0)) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x1425) (= x1182 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= x646 (> x463 x501)) (or (not x646) (and x646 (not x13) (= (x587 (x1376 x1151) x361 0) x1357) (= x13 (> x122 x651)) (= x240 (x587 (x1376 x1151) x320 0)) (= x651 (x204 (+ x306 2))) (= x320 (x587 (x1376 x1210) x485 0)) (= x1210 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= (x587 (x1376 x501) (x860 3) 0) x520) (= x485 (x587 (x1376 x501) (x860 9) 0)) (= x361 (x587 (x1376 x553) x520 0)) (= x553 (x1114 1461501637330902918203684832716283019655932542975 x529)))) x725 (= x722 (x587 (x1376 x306) (x860 3) 0)) (= x1352 (x587 (x1376 x1425) x722 0)) (= (x587 (x1376 x1151) x1352 0) x792))) (= x725 (> x463 x306))) x1422)))
(assert (= x476 (and x84 x46)))
(assert (x786 x358))
(assert (= (x1342 (x860 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x786 x1061))
(assert (x786 x482))
(assert (= (ite (= x1471 x1046) x1481 (x648 x1046)) (x1490 x1046)))
(assert (x786 x1371))
(assert (= (ite (and x826 x708) (x1267 x1143) (x1460 x1143)) (x1432 x1143)))
(assert (= x930 (x1342 (x1376 x930))))
(assert (= (x806 x888) (ite (= x256 x888) x1459 (x1500 x888))))
(assert (= (ite (= x1492 x180) x839 (x941 x180)) (x648 x180)))
(assert (x786 x197))
(assert (= (ite (and x130 x750) (x1187 x1247) (x1415 x1247)) (x1161 x1247)))
(assert (x786 x336))
(assert (= (x1342 (x1376 x319)) x319))
(assert (x786 x401))
(assert (= x1021 (x1342 (x1376 x1021))))
(assert (x786 x468))
(assert (=> (<= x894 10000) (= (x1376 x894) (x860 x894))))
(assert (x786 x764))
(assert (x786 x580))
(assert (x786 x670))
(assert (=> (<= x99 10000) (= (x1376 x99) (x860 x99))))
(assert (= (x171 x1204) (ite (and x1006 x727) (x402 x1204) (x291 x1204))))
(assert (x786 x1426))
(assert (= (=> (= 0 x1160) x704) x849))
(assert (= (x1342 (x1376 x1425)) x1425))
(assert (= (ite (= x228 x128) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x128)) (x941 x128)))
(assert (=> (<= x939 10000) (= (x860 x939) (x1376 x939))))
(assert (x786 x156))
(assert (= (=> (and (= x200 x1014) (>= x200 0) (= x539 (x587 (x1376 x857) (x860 5) 0)) (= x200 (x1027 x1448)) (not (= x923 2743102681)) (> 2960351575 x923) (< 0 x1126) (= 2798343961 x923) (not (< x923 2690754053)) (not (= 2764855426 x923)) (= (x587 (x1376 x526) x539 0) x1448) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x200) (not (> 2293535753 x923)) (not (= x923 2690754053)) (= x1126 (x1219 (x1376 274184521717934524641157099916833587206))) (<= x526 1461501637330902918203684832716283019655932542975)) (=> (and (= x1014 x780) (= x238 x1251) (= x874 x642)) x1216)) x444))
(assert (x786 x339))
(assert (= (ite (= x180 x254) x31 (x292 x180)) (x631 x180)))
(assert (= (x1376 911411945) (x860 911411945)))
(assert (= (x707 x419) (ite (= x901 x419) x239 (x631 x419))))
(assert (x786 x1419))
(assert (= (x1376 2293535753) (x860 2293535753)))
(assert (x786 x640))
(assert (x1341 x1503))
(assert (= x664 (or (and (not x771) x768) (and (not x1256) x151))))
(assert (= (=> (and (>= x1209 0) (= x1209 (x904 x12)) (= (x587 (x1376 x1151) x1110 0) x12) (= (x587 (x1376 x319) x223 0) x1110) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1209) (= x1086 (= 0 x1209)) (= x223 (x587 (x1376 x144) (x860 7) 0)) (= (x1114 1461501637330902918203684832716283019655932542975 x529) x319)) (and (=> (and (not x1310) x1086 (= x1452 (x1293 (- x144 1))) (= (< 0 x1452) x1310)) x1445) (=> (and (not x1086) (= x144 x299)) x329))) x838))
(assert (= (x1342 (x1376 x1408)) x1408))
(assert (x1341 x958))
(assert (= (or (and x82 (not x760)) x213) x660))
(assert (x786 x1359))
(assert (x786 x749))
(assert (x1341 x974))
(assert (x786 x1440))
(assert (= (x1478 x1309) (ite (= x1253 x1309) x119 (x1490 x1309))))
(assert (= (x1490 x1247) (ite (= x1247 x1471) x1481 (x648 x1247))))
(assert (x786 x200))
(assert (= x1210 (x1342 (x1376 x1210))))
(assert (x786 x154))
(assert (= (ite (and x733 x219 (not x1074) x511 x1228 x1358) (x1478 x718) (ite (and x733 x1228 (not x1358) x219 x511) (x1490 x718) (ite (and x1228 (not x511) x219 x733) (x648 x718) (ite (and (not x219) x1228 x733) (x941 x718) (x810 x718))))) (x1370 x718)))
(assert (x786 x529))
(assert (= (x595 x1040) (ite (= x1040 x120) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1515 x1040))))
(assert (= (x1323 x913) (ite (and x832 x736) (x973 x913) (x798 x913))))
(assert (x786 x166))
(assert (= x1151 (x1342 (x1376 x1151))))
(assert (x786 x1242))
(assert (=> (>= 10000 x1028) (= (x1376 x1028) (x860 x1028))))
(assert (= (x648 x718) (ite (= x718 x1492) x839 (x941 x718))))
(assert (= (ite (and x123 x20) (x666 x805) (ite (and x661 x621) (x89 x805) (x1094 x805))) (x886 x805)))
(assert (= x287 x460))
(assert (x786 x656))
(assert (x786 x16))
(assert (= (ite (= x1471 x180) x1481 (x648 x180)) (x1490 x180)))
(assert (= (ite (and x1006 x1389) (x326 x135) (ite (and x1006 x1098 (not x1389)) (x1279 x135) (x1198 x135))) (x878 x135)))
(assert (x1341 x18))
(assert (x786 x1479))
(assert (x786 x753))
(assert (x786 x1501))
(assert (x786 x384))
(assert (= true x775))
(assert (x786 x577))
(assert (x1341 x270))
(assert (= x865 (x1342 (x1376 x865))))
(assert (x786 x1497))
(assert (= (x1376 1889567281) (x860 1889567281)))
(assert (x786 x90))
(assert (x786 x380))
(assert (= x894 (x1342 (x1376 x894))))
(assert (= (=> (and (= x84 (< 0 x821)) (= (x1293 (- x507 1)) x821)) (and (=> x84 x1109) (=> (not x84) x1257))) x118))
(assert (x786 x108))
(assert (x786 x720))
(assert (= (x1342 (x1376 x370)) x370))
(assert (= x475 (x1342 (x1376 x475))))
(assert (= x1006 x82))
(assert (= (x1342 (x1376 x1075)) x1075))
(assert (= (and x91 x132) x719))
(assert (= (x1342 (x1376 x270)) x270))
(assert (x786 x1))
(assert (= (=> (and (<= 0 x335) (= x1154 (x1114 1461501637330902918203684832716283019655932542975 x529)) (<= x48 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x587 (x1376 x1151) x1246 0) x702) (not (> x571 x48)) (= x335 (x904 x702)) (<= 0 x48) (= (x587 (x1376 x1154) x723 0) x1246) (= x723 (x587 (x1376 x306) (x860 7) 0)) (= (< 0 x335) x1106) (<= x335 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (<= 0 x770) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x770) (= x770 x408) (= x167 0) (= x198 (x587 (x1376 x306) (x860 9) 0)) x1106 (= x399 (x587 (x1376 x1063) x198 0)) (= x1063 (x1114 1461501637330902918203684832716283019655932542975 x529)) (= x455 (x587 (x1376 x1151) x399 0)) (= (x402 x455) x770)) x316) (=> (not x1106) x961))) x274))
(assert (= (ite (and x667 x660) (x1381 x1455) (x440 x1455)) (x747 x1455)))
(assert (= (ite (= x888 x254) x31 (x292 x888)) (x631 x888)))
(assert (x786 x1411))
(assert (x786 x1076))
(assert (x786 x60))
(assert (=> (<= x138 10000) (= (x1376 x138) (x860 x138))))
(assert (= (x1490 x1184) (ite (= x1184 x1471) x1481 (x648 x1184))))
(assert (x786 x239))
(assert (x1341 x269))
(assert (x817 x529))
(assert (=> (<= x18 10000) (= (x860 x18) (x1376 x18))))
(assert (= (ite (= x1397 x128) x885 (x1382 x128)) (x1500 x128)))
(assert (x786 x419))
(assert (x786 x1082))
(assert (x786 x1395))
(assert (= x856 (and x801 x719)))
(assert (x786 x451))
(assert (x786 x393))
(assert (= x337 (x1342 (x1376 x337))))
(assert (= (x1342 (x1376 x720)) x720))
(assert (x340 x1334 x822))
(assert (x786 x50))
(assert (x786 x430))
(assert (x786 x691))
(assert (x786 x935))
(assert (= (x557 x133) (ite (and x660 x1031) (x512 x133) (x1374 x133))))
(assert (= (x4 x256) 0))
(assert (=> (<= x370 10000) (= (x860 x370) (x1376 x370))))
(assert (x1341 x1349))
(assert (= (x1342 (x1376 x1453)) x1453))
(assert (= x623 x1015))
(assert (= (x1500 x180) (ite (= x1397 x180) x885 (x1382 x180))))
(assert (x786 x1260))
(assert (= x287 x905))
(assert (= (x1342 (x1376 x401)) x401))
(assert (= (x1323 x256) (ite (and x832 x736) (x973 x256) (x798 x256))))
(assert (= (x1478 x180) (ite (= x180 x1253) x119 (x1490 x180))))
(assert (x23 x1128 x137))
(assert (x786 x901))
(assert (= x552 x76))
(assert (= (x1342 (x860 1968616202)) 1968616202))
(assert (x786 x256))
(assert (x786 x9))
(assert (x786 x469))
(assert (x1341 x914))
(assert (x786 x782))
(assert (= x1447 (=> (and (= (> x144 0) x1477) (= x144 (x1293 (- x306 1)))) (and (=> x1477 x838) (=> (not x1477) x1445)))))
(assert (x786 x381))
(assert (= (x1342 (x1376 x914)) x914))
(assert (=> (>= 10000 x1021) (= (x1376 x1021) (x860 x1021))))
(assert (x786 x853))
(assert (= (=> (and (= x1268 (x54 (x1376 274184521717934524641157099916833587206))) (= (< (x1520 (x1376 x894)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x313) x705 x313 (= (< x753 115792089237316195423570985008687907853269984665640564039457584007913129639936) x705) (= x629 x680) (= x1379 (x1520 (x1376 x894))) (= (x54 (x1376 x894)) x753) (= (x54 (x1376 274184521717934524641157099916833587206)) x324) (= (= x894 274184521717934524641157099916833587218) x750) (= x39 (>= x1268 0)) x39) (and (=> (not x750) x471) (=> (and (= (x1219 (x1376 274184521717934524641157099916833587218)) x173) (= x339 (x367 x315)) (= x566 x44) (= (> x566 x494) x862) (= x793 x696) (= x315 (x587 (x1376 x1371) (x860 1) 0)) (= x535 (x1293 (- x1244 4))) (= x630 (< x494 x1252)) (= x566 x1252) (not (< x1159 649617121)) (<= 0 x494) (= x1371 (x1114 1461501637330902918203684832716283019655932542975 x995)) (= 274184521717934524641157099916833587206 x582) (= (x587 (x1376 x383) (x860 1) 0) x15) (= x360 (>= (+ x339 x1252) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x494) (>= x339 0) (= x478 (+ x113 x858)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x598) (= x494 (x877 x62)) x750 (= x383 (x1114 1461501637330902918203684832716283019655932542975 x995)) (= 2835717307 x1159) (= x1252 x858) (not (= 649617121 x1159)) (not x630) (not x360) (not (= 826074471 x1159)) (not x1322) (= x680 x1244) (< (+ x339 x1252) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1220 (x587 (x1376 274184521717934524641157099916833587206) (x860 1) 0)) (>= 1461501637330902918203684832716283019655932542975 x995) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x339) (not (= 2514000705 x1159)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x535) (and (= (<= x535 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x535 64))) x1322) (= 32 x437) (= x339 x113) (= x1244 68) (not x862) (< 0 x173) (= x258 (x1293 (- x494 x566))) (= 274184521717934524641157099916833587206 x43) (= x350 x995) (not (> 4 x1244)) (= x62 (x587 (x1376 274184521717934524641157099916833587206) (x860 1) 0)) (= x1304 1) (not (= x1159 1889567281))) x1071))) x811))
(assert (= (x631 x157) (ite (= x157 x254) x31 (x292 x157))))
(assert (= x678 (x1342 (x1376 x678))))
(assert (= (x1342 (x860 1000000000000000000)) 1000000000000000000))
(assert (= (ite (= x734 x1397) x885 (x1382 x734)) (x1500 x734)))
(assert (= (x1342 (x860 468353030)) 468353030))
(assert (x1341 x1157))
(assert (x786 x371))
(assert (x786 x103))
(assert (x1341 x381))
(assert (= (ite (= x180 x1184) x1467 (x106 x1184)) (x973 x1184)))
(assert (= (=> (and (<= x500 1461501637330902918203684832716283019655932542975) (= (x512 x1208) x808) (< x166 2293535753) (<= x808 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1428 0) (<= 0 x808) (< x166 911411945) (= x1428 (x1219 (x1376 274184521717934524641157099916833587206))) (< x166 468353030) (= x808 x1010) (= x166 69947311) (= x392 (x587 (x1376 x503) (x860 10) 0)) (= (x587 (x1376 x500) x392 0) x1208)) (=> (and x953 (= x1117 0) (= x1377 (= x847 0)) (= x729 x238) (= x1450 (and x1038 x1377)) (= 0 x1172) (= x953 (or x1450 (not x1239))) (= 0 x218) (= x1010 x364) (= (= 0 x1207) x1239) (= x257 x774) (= x1038 (= x304 0)) (= x981 x10) (= x774 x1207) (= x847 x364) x889 (= x1507 x674) (= x381 x874) (= x889 (<= x257 x10)) (= x59 x304)) x692)) x134))
(assert (= x1289 (=> (and (not (= x625 2512682246)) (= (x1219 (x1376 274184521717934524641157099916833587206)) x938) (<= x910 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1340 (x587 (x1376 x259) (x860 4) 0)) (= (x746 x1495) x910) (not (= 2293535753 x625)) (= x131 (x587 (x1376 x572) x1340 0)) (= 2532887486 x625) (= x687 x910) (>= 1461501637330902918203684832716283019655932542975 x916) (>= x910 0) (> 2690754053 x625) (< x625 2960351575) (not (= x625 2418364589)) (not (> 2293535753 x625)) (= x389 (x587 (x1376 x90) x131 0)) (<= x90 1461501637330902918203684832716283019655932542975) (< 0 x938) (<= x572 1461501637330902918203684832716283019655932542975) (= (x587 (x1376 x916) x389 0) x1495)) (=> (and (= x192 0) (= x448 x477) (= (x1293 (- x846 4)) x548) x1007 (= x344 x1000) (< 0 x867) (= x918 0) (= x981 x297) (>= 1461501637330902918203684832716283019655932542975 x1391) (= x199 x1497) (not (< x846 4)) (= x1403 (mod (* x1467 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= 0 x1391) (= x1335 x529) (= x353 0) (= x1140 x685) (= x1214 x9) (= (> x640 0) x1372) (= x491 (= x1115 0)) (= x510 (x204 (+ x670 x180))) (<= 0 x469) (>= 1461501637330902918203684832716283019655932542975 x469) (= 128 x506) (<= 0 x48) (= (= x1467 0) x736) (< 131 x846) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x548) true) (> 128 x548)) (> x548 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= x350 0) (= x211 (= 0 x1140)) (= (= x1000 0) x765) x1427 (> 468353030 x1158) (not (= 69947311 x1158)) (<= x529 1461501637330902918203684832716283019655932542975) (= x640 (x1293 (- x103 1))) (= x180 (x204 (+ 160 x1403))) (= (<= x1186 x297) x1427) (= (x1219 (x1376 274184521717934524641157099916833587206)) x867) (> x48 x463) (= x1007 (or x143 (not x491))) (not (> x1467 18446744073709551615)) (not (> x9 18446744073709551615)) (= x1497 x1391) (not (> x794 x846)) (= (x204 (+ x1214 36)) x1298) (= x687 x344) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x627) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x846)) (and (> x846 x627) (= (<= x627 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x846)))) (= x508 x463) (= x571 x306) (= x398 x529) (> 911411945 x1158) (>= 1461501637330902918203684832716283019655932542975 x350) (= (and x765 x1261) x143) (= x197 (x204 (+ x461 160))) (= x1261 (and x496 x211)) (= (x204 (+ 4 x1214)) x169) (or (and (not x736) (= x1146 (x204 (+ x1061 160))) (= (mod (* x1467 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x828)) x736) (= 87118632 x1158) (= x1467 (x1494 x169)) (= x627 (x204 (+ x1214 35))) (= x644 x1186) (= (<= x846 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (= x644 x1115) (= 0 x1274) (= x1151 x350) (= x122 x463) (= x461 (mod (* 32 x1467) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= 0 x1162) x496) (or (and x1372 (not (< x103 1)) (not (> x374 1)) (= (< 1 x103) x1480) (= x374 (x1293 (- x103 1))) (or (and (< 1 x740) (= (x106 128) x550) x1480 (< 0 x550) (= (x1114 1461501637330902918203684832716283019655932542975 x233) x186) (= x1278 (x1114 1461501637330902918203684832716283019655932542975 x276)) (= (x106 160) x233) (= x740 (x106 128)) (or (and (= x1121 (x106 224)) (not x1437) (= x1437 (> x103 3)) (not (= x24 x100)) x531 (> x998 0) (= (x106 128) x1386) (= x100 (x1114 1461501637330902918203684832716283019655932542975 x1128)) (< 2 x1386) (= x24 (x1114 1461501637330902918203684832716283019655932542975 x1121)) (= x998 (x106 128)) (= x1128 (x106 160))) (not x531)) (= (> x103 2) x531) (= x276 (x106 192)) (not (= x186 x1278))) (not x1480))) (not x1372)) (<= x48 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x306 x407) (= x103 (x106 128)) (= x1061 (x204 (+ x1403 32))) (< x1158 2293535753) (not (> 1 x103)) (= 0 x477) (= x358 x981) (= x154 x1162) (= x697 (mod (* x1467 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x204 (+ 32 x461)) x670) (= x794 (x204 (+ x697 x1298))) (not (< x463 x306))) x433))))
(assert (=> (<= x916 10000) (= (x860 x916) (x1376 x916))))
(assert (x786 x447))
(assert (= (x4 x949) 0))
(assert (x786 x1081))
(assert (x786 x128))
(assert (x1341 x115))
(assert (x786 x141))
(assert (x786 x1021))
(assert (x786 x33))
(assert (x786 x99))
(assert (= (ite (= x900 x254) x31 (x292 x900)) (x631 x900)))
(assert (x1341 x501))
(assert (= (x707 x180) (ite (= x180 x901) x239 (x631 x180))))
(assert (=> (<= x500 10000) (= (x860 x500) (x1376 x500))))
(assert (x786 x1300))
(assert (= (x860 759532456) (x1376 759532456)))
(assert (= (x941 x626) (ite (= x228 x626) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x600 x626))))
(assert (x786 x446))
(assert (x1341 x837))
(assert (x786 x366))
(assert (= (or x664 x1454) x984))
(assert (= (x707 x256) (ite (= x256 x901) x239 (x631 x256))))
(assert (x786 x677))
(assert (= (ite (and x660 x1031) (x512 x93) (x1374 x93)) (x557 x93)))
(assert (= (ite (= x254 x128) x31 (x292 x128)) (x631 x128)))
(assert (x786 x129))
(assert (= (ite (= x157 x180) x1467 (x106 x157)) (x973 x157)))
(assert (x1341 x1395))
(assert (x786 x998))
(assert (= (=> (= x439 (< 0 x507)) (and (=> (not x439) x1257) (=> x439 x1103))) x845))
(assert (= (x860 2061678023) (x1376 2061678023)))
(assert (x786 x615))
(assert (=> (<= x507 10000) (= (x1376 x507) (x860 x507))))
(assert (x786 x628))
(assert (x786 x1388))
(assert (x786 x1356))
(assert (x786 x257))
(assert (x786 x1461))
(assert (x786 x594))
(assert (=> (>= 10000 x1408) (= (x860 x1408) (x1376 x1408))))
(assert (= (x631 x1343) (ite (= x254 x1343) x31 (x292 x1343))))
(assert (x786 x1248))
(assert (x786 x24))
(assert (= (x1342 (x860 2211524764)) 2211524764))
(assert (= (x648 x900) (ite (= x1492 x900) x839 (x941 x900))))
(assert (= (x1342 (x1376 x837)) x837))
(assert (= (x1342 (x860 2764855426)) 2764855426))
(assert (= 87118632 (x1342 (x860 87118632))))
(assert (x786 x503))
(check-sat)
