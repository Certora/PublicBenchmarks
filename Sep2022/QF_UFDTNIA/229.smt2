(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x57 0)) (((x342 (x24 Int)) (x1552 (x1143 x57) (x998 Int)) (x1227 (x1495 x57) (x300 x57) (x563 Int)))))
(declare-fun x1556 () Bool)
(declare-fun x709 () Bool)
(declare-fun x851 () x57)
(declare-fun x705 () Bool)
(declare-fun x1478 () Int)
(declare-fun x988 () Int)
(declare-fun x1566 () Int)
(declare-fun x136 () Int)
(declare-fun x1630 () Int)
(declare-fun x324 () Int)
(declare-fun x1192 () Int)
(declare-fun x1033 () Bool)
(declare-fun x44 () Int)
(declare-fun x1320 () Bool)
(declare-fun x1518 () Int)
(declare-fun x82 () Int)
(declare-fun x880 () x57)
(declare-fun x885 () Int)
(declare-fun x115 () Int)
(declare-fun x492 () Int)
(declare-fun x1515 () Int)
(declare-fun x1442 () Bool)
(declare-fun x411 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x1528 () Bool)
(declare-fun x1062 () Int)
(declare-fun x543 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x879 () Int)
(declare-fun x1125 () Int)
(declare-fun x1023 () Int)
(declare-fun x752 () Bool)
(declare-fun x707 () Int)
(declare-fun x593 () Int)
(declare-fun x500 () Int)
(declare-fun x521 () Int)
(declare-fun x1533 () x57)
(declare-fun x1161 () x57)
(declare-fun x1235 () Bool)
(declare-fun x128 () Int)
(declare-fun x1025 () Int)
(declare-fun x289 () Int)
(declare-fun x1069 () Int)
(declare-fun x1697 () Bool)
(declare-fun x255 (x57) Int)
(declare-fun x1334 () Int)
(declare-fun x1030 () Int)
(declare-fun x683 () Int)
(declare-fun x898 () Bool)
(declare-fun x1288 () Int)
(declare-fun x81 () Int)
(declare-fun x1535 () Int)
(declare-fun x1217 () Int)
(declare-fun x1640 () Int)
(declare-fun x379 () Int)
(declare-fun x957 () Int)
(declare-fun x1095 () Int)
(declare-fun x1638 () Int)
(declare-fun x946 () Bool)
(declare-fun x1404 () Int)
(declare-fun x85 () Bool)
(declare-fun x446 () Int)
(declare-fun x657 () Bool)
(declare-fun x1542 () Int)
(declare-fun x1186 () Int)
(declare-fun x26 () Bool)
(declare-fun x1363 () Int)
(declare-fun x409 () Bool)
(declare-fun x1406 () Int)
(declare-fun x86 () Int)
(declare-fun x1392 () Int)
(declare-fun x1521 () Int)
(declare-fun x635 () Bool)
(declare-fun x333 () Bool)
(declare-fun x98 () Int)
(declare-fun x1455 () Bool)
(declare-fun x499 () Int)
(declare-fun x1260 () Int)
(declare-fun x714 () Int)
(declare-fun x138 () Int)
(declare-fun x121 () Int)
(declare-fun x1568 () x57)
(declare-fun x436 () Int)
(declare-fun x1179 () Int)
(declare-fun x302 () x57)
(declare-fun x1172 () Int)
(declare-fun x861 () Int)
(declare-fun x931 () Int)
(declare-fun x997 () Int)
(declare-fun x1258 () Bool)
(declare-fun x1072 () Int)
(declare-fun x1523 () Bool)
(declare-fun x697 () Int)
(declare-fun x1633 () Int)
(declare-fun x223 () Int)
(declare-fun x362 (x57) Int)
(declare-fun x592 () Bool)
(declare-fun x1408 () Int)
(declare-fun x612 () Int)
(declare-fun x1427 () x57)
(declare-fun x645 () Int)
(declare-fun x1117 () Int)
(declare-fun x674 () Int)
(declare-fun x1081 () Int)
(declare-fun x596 () Int)
(declare-fun x350 (Int) Int)
(declare-fun x217 () Int)
(declare-fun x1373 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x980 (x57) Int)
(declare-fun x1437 () Int)
(declare-fun x1264 () Bool)
(declare-fun x729 () Bool)
(declare-fun x660 () Int)
(declare-fun x1028 () x57)
(declare-fun x518 () Int)
(declare-fun x1661 () Int)
(declare-fun x822 () Int)
(declare-fun x66 () Bool)
(declare-fun x1625 () Int)
(declare-fun x97 () Int)
(declare-fun x131 (Int) Int)
(declare-fun x337 () Int)
(declare-fun x7 () Bool)
(declare-fun x1382 () Int)
(declare-fun x112 (Int) Int)
(declare-fun x1082 () Int)
(declare-fun x1454 () Int)
(declare-fun x833 (Int) Int)
(declare-fun x193 (x57) Int)
(declare-fun x1038 () x57)
(declare-fun x1162 () x57)
(declare-fun x203 () Int)
(declare-fun x529 () Int)
(declare-fun x354 () Int)
(declare-fun x1012 () Int)
(declare-fun x738 () Bool)
(declare-fun x702 () Int)
(declare-fun x1657 () Int)
(declare-fun x457 () Int)
(declare-fun x235 () Int)
(declare-fun x398 () x57)
(declare-fun x269 () Int)
(declare-fun x475 (Int) x57)
(declare-fun x443 () Int)
(declare-fun x1029 () Int)
(declare-fun x1112 () Bool)
(declare-fun x365 () Int)
(declare-fun x1445 () Int)
(declare-fun x1189 () Int)
(declare-fun x731 () Int)
(declare-fun x1092 () Int)
(declare-fun x384 () Int)
(declare-fun x1049 () Int)
(declare-fun x1022 () Int)
(declare-fun x793 () Bool)
(declare-fun x1357 () Int)
(declare-fun x929 () Int)
(declare-fun x884 (Int Int) Int)
(declare-fun x1067 () Int)
(declare-fun x67 () Bool)
(declare-fun x345 () Int)
(declare-fun x147 () Bool)
(declare-fun x792 () Bool)
(declare-fun x453 () Int)
(declare-fun x1651 () Bool)
(declare-fun x1418 () Int)
(declare-fun x1337 () Int)
(declare-fun x501 () Int)
(declare-fun x572 (Int) Int)
(declare-fun x88 (x57) Int)
(declare-fun x1415 () Int)
(declare-fun x45 () Int)
(declare-fun x952 () Int)
(declare-fun x1150 () Int)
(declare-fun x1013 () Int)
(declare-fun x416 () Int)
(declare-fun x1388 () Int)
(declare-fun x1292 () Int)
(declare-fun x579 () Int)
(declare-fun x1219 () Bool)
(declare-fun x1279 () Int)
(declare-fun x1598 () Int)
(declare-fun x210 () Bool)
(declare-fun x293 () Int)
(declare-fun x956 () Int)
(declare-fun x271 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x1524 () Bool)
(declare-fun x53 () Int)
(declare-fun x1141 () Bool)
(declare-fun x883 () Bool)
(declare-fun x1559 () Int)
(declare-fun x92 () Int)
(declare-fun x1470 () Bool)
(declare-fun x719 () Int)
(declare-fun x137 () Int)
(declare-fun x1435 () Int)
(declare-fun x888 () Int)
(declare-fun x32 () Int)
(declare-fun x1546 () Int)
(declare-fun x846 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x1716 () Int)
(declare-fun x916 () Int)
(declare-fun x1005 () Bool)
(declare-fun x1554 () Int)
(declare-fun x868 () x57)
(declare-fun x355 () Int)
(declare-fun x663 () Int)
(declare-fun x242 () Int)
(declare-fun x650 () Bool)
(declare-fun x1247 () Int)
(declare-fun x1026 () x57)
(declare-fun x6 () Int)
(declare-fun x1563 () Int)
(declare-fun x800 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x1719 () Int)
(declare-fun x756 () Int)
(declare-fun x305 () Int)
(declare-fun x208 () Int)
(declare-fun x685 (Int) Int)
(declare-fun x537 () x57)
(declare-fun x545 () Int)
(declare-fun x993 () Bool)
(declare-fun x134 () x57)
(declare-fun x113 () x57)
(declare-fun x1327 () Int)
(declare-fun x834 () Int)
(declare-fun x1464 () Int)
(declare-fun x297 () Int)
(declare-fun x1466 () Int)
(declare-fun x1105 () Int)
(declare-fun x1041 () Int)
(declare-fun x1223 () Int)
(declare-fun x673 () Int)
(declare-fun x1576 () Bool)
(declare-fun x1196 () Int)
(declare-fun x778 () Int)
(declare-fun x15 () Int)
(declare-fun x791 () Int)
(declare-fun x1330 () Int)
(declare-fun x1181 (Int) Int)
(declare-fun x183 () Int)
(declare-fun x1209 () Int)
(declare-fun x1376 () Int)
(declare-fun x1265 () Int)
(declare-fun x1137 () Bool)
(declare-fun x399 () Int)
(declare-fun x1257 () Int)
(declare-fun x172 () Int)
(declare-fun x1108 () Int)
(declare-fun x1468 () Int)
(declare-fun x1225 () Int)
(declare-fun x582 () Int)
(declare-fun x1056 (Int) Int)
(declare-fun x969 () Int)
(declare-fun x936 () Int)
(declare-fun x1316 () Int)
(declare-fun x1501 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x917 () Int)
(declare-fun x1103 () Bool)
(declare-fun x214 () Int)
(declare-fun x314 () Int)
(declare-fun x723 () Bool)
(declare-fun x164 () Bool)
(declare-fun x854 () Int)
(declare-fun x204 () Bool)
(declare-fun x1228 () Int)
(declare-fun x1684 () Int)
(declare-fun x853 () Int)
(declare-fun x728 () Int)
(declare-fun x1709 () Int)
(declare-fun x1078 () Int)
(declare-fun x799 () Int)
(declare-fun x982 () Int)
(declare-fun x636 () Bool)
(declare-fun x4 () Int)
(declare-fun x169 () Bool)
(declare-fun x604 () Int)
(declare-fun x1220 () Int)
(declare-fun x1240 (Int) Int)
(declare-fun x828 () Bool)
(declare-fun x1399 () Int)
(declare-fun x14 () Int)
(declare-fun x971 () Int)
(declare-fun x472 () Int)
(declare-fun x1607 () Int)
(declare-fun x975 () Int)
(declare-fun x1704 () Int)
(declare-fun x1712 () Int)
(declare-fun x856 () Int)
(declare-fun x310 () Int)
(declare-fun x837 () Bool)
(declare-fun x1562 () Int)
(declare-fun x258 () Bool)
(declare-fun x288 (Int) Int)
(declare-fun x1706 () Bool)
(declare-fun x1073 () Int)
(declare-fun x1021 () Int)
(declare-fun x1221 () Int)
(declare-fun x1494 () Int)
(declare-fun x63 () Int)
(declare-fun x1097 () Bool)
(declare-fun x414 () Int)
(declare-fun x1165 () Int)
(declare-fun x200 () Bool)
(declare-fun x914 () Int)
(declare-fun x264 () Int)
(declare-fun x1447 () Int)
(declare-fun x1024 () Int)
(declare-fun x61 () Int)
(declare-fun x1460 () Bool)
(declare-fun x401 () Bool)
(declare-fun x1365 () Int)
(declare-fun x750 () Int)
(declare-fun x156 () x57)
(declare-fun x961 () Int)
(declare-fun x1250 () Bool)
(declare-fun x1287 () Int)
(declare-fun x852 () Bool)
(declare-fun x584 () Int)
(declare-fun x1241 () Int)
(declare-fun x1459 () x57)
(declare-fun x417 () Int)
(declare-fun x429 () Int)
(declare-fun x1035 () Int)
(declare-fun x1027 () Int)
(declare-fun x1622 () Bool)
(declare-fun x1689 () Int)
(declare-fun x747 () Int)
(declare-fun x1428 () Int)
(declare-fun x803 (Int) Int)
(declare-fun x444 () Int)
(declare-fun x174 () Int)
(declare-fun x361 () Bool)
(declare-fun x341 () Int)
(declare-fun x1505 () Bool)
(declare-fun x670 () Int)
(declare-fun x755 (Int) Int)
(declare-fun x1231 () Int)
(declare-fun x1296 () Int)
(declare-fun x994 () Int)
(declare-fun x1384 () Bool)
(declare-fun x1285 () Int)
(declare-fun x602 () Bool)
(declare-fun x696 () Int)
(declare-fun x1394 () Int)
(declare-fun x166 () Int)
(declare-fun x802 (Int) Int)
(declare-fun x190 () Int)
(declare-fun x1263 () Int)
(declare-fun x816 () Bool)
(declare-fun x75 () Bool)
(declare-fun x1500 () Int)
(declare-fun x461 () Int)
(declare-fun x1129 (x57) Int)
(declare-fun x1678 () Int)
(declare-fun x551 () Int)
(declare-fun x1063 () Int)
(declare-fun x1070 () Int)
(declare-fun x1360 () Int)
(declare-fun x1698 () Int)
(declare-fun x576 () Int)
(declare-fun x326 () Int)
(declare-fun x842 () x57)
(declare-fun x1453 () Int)
(declare-fun x1277 () Bool)
(declare-fun x1567 () Int)
(declare-fun x540 (x57) Int)
(declare-fun x218 () Int)
(declare-fun x1324 () Int)
(declare-fun x1212 () Int)
(declare-fun x1148 () Int)
(declare-fun x1076 () Int)
(declare-fun x1151 () Int)
(declare-fun x51 (Int) Int)
(declare-fun x1409 () Int)
(declare-fun x1479 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x1412 () Int)
(declare-fun x651 () Bool)
(declare-fun x934 (Int) Int)
(declare-fun x93 () Bool)
(declare-fun x459 () Int)
(declare-fun x1333 () Int)
(declare-fun x1131 () Int)
(declare-fun x985 () Int)
(declare-fun x643 () Int)
(declare-fun x1182 () Int)
(declare-fun x713 () Int)
(declare-fun x104 () Int)
(declare-fun x976 () Int)
(declare-fun x1104 () Bool)
(declare-fun x1467 () Int)
(declare-fun x79 () Int)
(declare-fun x1173 () Bool)
(declare-fun x855 () Int)
(declare-fun x523 () Int)
(declare-fun x1371 () Int)
(declare-fun x335 () Int)
(declare-fun x829 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x1266 () Int)
(declare-fun x130 () Bool)
(declare-fun x1555 () Int)
(declare-fun x1351 () Bool)
(declare-fun x999 () Bool)
(declare-fun x676 () x57)
(declare-fun x947 () Bool)
(declare-fun x484 () Int)
(declare-fun x35 () Int)
(declare-fun x209 () Int)
(declare-fun x186 () Int)
(declare-fun x901 () x57)
(declare-fun x1438 () Bool)
(declare-fun x90 () Int)
(declare-fun x757 () Int)
(declare-fun x442 () Int)
(declare-fun x704 () Int)
(declare-fun x1605 () Int)
(declare-fun x1204 () Int)
(declare-fun x178 () Int)
(declare-fun x1353 () Int)
(declare-fun x1102 () Bool)
(declare-fun x1232 () Int)
(declare-fun x1610 () Int)
(declare-fun x46 () Int)
(declare-fun x1246 () Int)
(declare-fun x780 () Int)
(declare-fun x1164 () Int)
(declare-fun x989 () Int)
(declare-fun x438 () Int)
(declare-fun x283 () Int)
(declare-fun x1262 (Int) Int)
(declare-fun x1066 () Int)
(declare-fun x745 () Int)
(declare-fun x1383 () x57)
(declare-fun x120 () Int)
(declare-fun x881 () Int)
(declare-fun x1516 () Int)
(declare-fun x1621 () Bool)
(declare-fun x1019 () Int)
(declare-fun x1527 () Int)
(declare-fun x168 () Int)
(declare-fun x598 () Int)
(declare-fun x50 () Int)
(declare-fun x806 () Int)
(declare-fun x1270 () Int)
(declare-fun x1203 () Int)
(declare-fun x196 (x57) Int)
(declare-fun x1168 () Int)
(declare-fun x824 () x57)
(declare-fun x1294 (x57) Int)
(declare-fun x205 () Int)
(declare-fun x1722 () Bool)
(declare-fun x340 () Bool)
(declare-fun x54 () Int)
(declare-fun x356 () Int)
(declare-fun x471 () x57)
(declare-fun x163 () Int)
(declare-fun x1206 () Int)
(declare-fun x116 () Int)
(declare-fun x605 () Bool)
(declare-fun x1636 () Int)
(declare-fun x292 () Bool)
(declare-fun x1617 () Int)
(declare-fun x814 () Int)
(declare-fun x101 () Int)
(declare-fun x808 () Int)
(declare-fun x62 () Int)
(declare-fun x832 () x57)
(declare-fun x867 (Int) Int)
(declare-fun x451 () Bool)
(declare-fun x165 () Int)
(declare-fun x228 () Bool)
(declare-fun x536 () x57)
(declare-fun x1047 () Int)
(declare-fun x381 () Int)
(declare-fun x122 () Int)
(declare-fun x1513 () Bool)
(declare-fun x420 () Int)
(declare-fun x794 () Int)
(declare-fun x1693 () Int)
(declare-fun x440 () Int)
(declare-fun x1367 () Bool)
(declare-fun x973 () Bool)
(declare-fun x678 () Int)
(declare-fun x415 () Bool)
(declare-fun x192 () Bool)
(declare-fun x773 () x57)
(declare-fun x149 () Int)
(declare-fun x1055 () Int)
(declare-fun x772 () Int)
(declare-fun x89 () Int)
(declare-fun x83 () Bool)
(declare-fun x315 () Int)
(declare-fun x646 () Bool)
(declare-fun x246 () Int)
(declare-fun x1295 () x57)
(declare-fun x477 () Int)
(declare-fun x1522 () Int)
(declare-fun x1583 () Int)
(declare-fun x30 () Bool)
(declare-fun x1618 () Int)
(declare-fun x1149 () Bool)
(declare-fun x1613 () Int)
(declare-fun x754 () Bool)
(declare-fun x1152 () Int)
(declare-fun x817 () Int)
(declare-fun x1389 () Int)
(declare-fun x522 () Int)
(declare-fun x1543 () Int)
(declare-fun x1405 () Bool)
(declare-fun x1694 () Int)
(declare-fun x844 () Int)
(declare-fun x599 () Int)
(declare-fun x1503 () Bool)
(declare-fun x1048 (Int) Int)
(declare-fun x359 () Int)
(declare-fun x790 () Int)
(declare-fun x1582 () Bool)
(declare-fun x962 () Bool)
(declare-fun x624 () Bool)
(declare-fun x571 () Int)
(declare-fun x1242 () Int)
(declare-fun x733 (x57) Int)
(declare-fun x1201 () Int)
(declare-fun x1526 () Bool)
(declare-fun x1637 () x57)
(declare-fun x1603 () Int)
(declare-fun x445 () Int)
(declare-fun x1398 () Int)
(declare-fun x1572 () Int)
(declare-fun x1600 () Int)
(declare-fun x413 () Bool)
(declare-fun x1338 () x57)
(declare-fun x990 () Int)
(declare-fun x221 () Int)
(declare-fun x870 () Int)
(declare-fun x539 () Bool)
(declare-fun x265 () Bool)
(declare-fun x749 () Int)
(declare-fun x11 () Int)
(declare-fun x679 () Bool)
(declare-fun x737 () Int)
(declare-fun x531 () Int)
(declare-fun x924 () Int)
(declare-fun x1032 () Int)
(declare-fun x275 () Int)
(declare-fun x295 () Int)
(declare-fun x925 () x57)
(declare-fun x394 () Bool)
(declare-fun x561 () Int)
(declare-fun x530 () Int)
(declare-fun x1007 () Int)
(declare-fun x544 () Int)
(declare-fun x1239 () Int)
(declare-fun x1703 () Bool)
(declare-fun x296 () Int)
(declare-fun x900 () Int)
(declare-fun x1525 () Int)
(declare-fun x1245 () Int)
(declare-fun x1652 () Bool)
(declare-fun x1558 () Int)
(declare-fun x835 () Int)
(declare-fun x1632 () Int)
(declare-fun x798 () Bool)
(declare-fun x1002 () Int)
(declare-fun x328 () Bool)
(declare-fun x520 () Bool)
(declare-fun x710 () Int)
(declare-fun x1003 () Int)
(declare-fun x391 () Bool)
(declare-fun x689 () Int)
(declare-fun x821 () Bool)
(declare-fun x432 (Int) Int)
(declare-fun x1487 () Int)
(declare-fun x1310 () Bool)
(declare-fun x22 () Int)
(declare-fun x711 () Int)
(declare-fun x1329 () Int)
(declare-fun x56 () Bool)
(declare-fun x150 (Int) Int)
(declare-fun x431 () Int)
(declare-fun x481 () Int)
(declare-fun x1485 () Bool)
(declare-fun x1200 () x57)
(declare-fun x644 () Int)
(declare-fun x143 () Int)
(declare-fun x1255 () Int)
(declare-fun x106 (Int Int) Int)
(declare-fun x1658 () Bool)
(declare-fun x1676 () Int)
(declare-fun x1512 () Int)
(declare-fun x68 () Int)
(declare-fun x418 () Bool)
(declare-fun x1259 () Int)
(declare-fun x3 () Int)
(declare-fun x282 () Int)
(declare-fun x767 (Int) Int)
(declare-fun x1469 () Bool)
(declare-fun x675 () Int)
(declare-fun x1599 () Int)
(declare-fun x1492 (x57) Int)
(declare-fun x234 () Int)
(declare-fun x1547 () Int)
(declare-fun x1116 () Int)
(declare-fun x1159 () Int)
(declare-fun x38 () Int)
(declare-fun x1457 () Bool)
(declare-fun x1249 () Int)
(declare-fun x987 () Int)
(declare-fun x655 () Int)
(declare-fun x923 () Int)
(declare-fun x157 () Int)
(declare-fun x1236 () Int)
(declare-fun x195 () Int)
(declare-fun x141 () Int)
(declare-fun x330 () Int)
(declare-fun x740 () Int)
(declare-fun x1574 () Int)
(declare-fun x197 () Int)
(declare-fun x1715 () Bool)
(declare-fun x170 () Int)
(declare-fun x1536 () Int)
(declare-fun x548 (x57) Int)
(declare-fun x618 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x1511 () Bool)
(declare-fun x144 () Int)
(declare-fun x230 () Int)
(declare-fun x118 () Int)
(declare-fun x765 () Int)
(declare-fun x1059 () Int)
(declare-fun x983 () Int)
(declare-fun x661 (x57) Int)
(declare-fun x1349 () Bool)
(declare-fun x262 () Int)
(declare-fun x78 () Int)
(declare-fun x1381 () Int)
(declare-fun x836 () Int)
(declare-fun x1509 () Int)
(declare-fun x470 () Int)
(declare-fun x505 () Int)
(declare-fun x759 () Int)
(declare-fun x181 () Int)
(declare-fun x1153 () Int)
(declare-fun x1721 () Int)
(declare-fun x1705 () Int)
(declare-fun x692 () Int)
(declare-fun x1663 () Int)
(declare-fun x372 () Int)
(declare-fun x1058 (x57) Int)
(declare-fun x564 () Int)
(declare-fun x736 () Int)
(declare-fun x383 () Int)
(declare-fun x389 () Int)
(declare-fun x763 () Int)
(declare-fun x486 () Bool)
(declare-fun x69 () Int)
(declare-fun x638 () Int)
(declare-fun x485 () Int)
(declare-fun x1710 () Int)
(declare-fun x494 () Int)
(declare-fun x848 () Int)
(declare-fun x613 () Int)
(declare-fun x1702 () Bool)
(declare-fun x1655 () Int)
(declare-fun x1372 () Bool)
(declare-fun x277 () Int)
(declare-fun x555 () Int)
(declare-fun x1052 () Int)
(declare-fun x511 () Int)
(declare-fun x1011 () Int)
(declare-fun x619 () Int)
(declare-fun x1421 () Bool)
(declare-fun x1135 () Int)
(declare-fun x140 () Int)
(declare-fun x1378 () Int)
(declare-fun x935 () Int)
(declare-fun x1577 () Int)
(declare-fun x517 () Int)
(declare-fun x727 () Int)
(declare-fun x610 () Int)
(declare-fun x606 () x57)
(declare-fun x220 () Int)
(declare-fun x1508 () Int)
(declare-fun x1342 () Int)
(declare-fun x594 () Int)
(declare-fun x1416 () x57)
(declare-fun x1154 () Int)
(declare-fun x308 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x777 () Bool)
(declare-fun x1707 () Bool)
(declare-fun x307 () Int)
(declare-fun x1623 () Int)
(declare-fun x1113 () Bool)
(declare-fun x1422 () Int)
(declare-fun x270 () Int)
(declare-fun x450 () Bool)
(declare-fun x809 () Int)
(declare-fun x465 () Int)
(declare-fun x1233 () Int)
(declare-fun x5 () Int)
(declare-fun x407 () Int)
(declare-fun x1169 () Int)
(declare-fun x1132 () Int)
(declare-fun x862 () Int)
(declare-fun x911 () Bool)
(declare-fun x872 () Bool)
(declare-fun x1686 () Int)
(declare-fun x591 () Int)
(declare-fun x1313 () Int)
(declare-fun x1314 (Int) Int)
(declare-fun x1507 () Int)
(declare-fun x1075 () Int)
(declare-fun x225 () Int)
(declare-fun x1359 () Int)
(declare-fun x552 () Int)
(declare-fun x1489 () Int)
(declare-fun x1520 () Int)
(declare-fun x64 () Int)
(declare-fun x1477 () Int)
(declare-fun x109 () Int)
(declare-fun x1293 () x57)
(declare-fun x1042 () Int)
(declare-fun x568 () Bool)
(declare-fun x351 (Int) Int)
(declare-fun x939 () Int)
(declare-fun x232 () Bool)
(declare-fun x797 (Int) Int)
(declare-fun x397 () Int)
(declare-fun x177 () Int)
(declare-fun x1098 () Int)
(declare-fun x603 () Bool)
(declare-fun x370 () Int)
(declare-fun x237 () x57)
(declare-fun x1302 () Int)
(declare-fun x1517 () Int)
(declare-fun x1675 () Int)
(declare-fun x1299 () Int)
(declare-fun x633 () Int)
(declare-fun x227 () Int)
(declare-fun x1001 () Int)
(declare-fun x534 () Int)
(declare-fun x1202 () x57)
(declare-fun x1193 () Bool)
(declare-fun x1654 () Int)
(declare-fun x788 () Int)
(declare-fun x1628 () x57)
(declare-fun x1190 () Bool)
(declare-fun x176 () Bool)
(declare-fun x1317 () Int)
(declare-fun x1339 () Int)
(declare-fun x396 () Int)
(declare-fun x1584 () Bool)
(declare-fun x1649 () Int)
(declare-fun x1608 () Int)
(declare-fun x1537 () Int)
(declare-fun x527 () Bool)
(declare-fun x1215 () Int)
(declare-fun x1045 () Int)
(declare-fun x725 () Int)
(declare-fun x1068 () Bool)
(declare-fun x304 () Bool)
(declare-fun x239 (Int) Int)
(declare-fun x377 () Int)
(declare-fun x875 () Int)
(declare-fun x1402 () Int)
(declare-fun x248 () Bool)
(declare-fun x758 () Int)
(declare-fun x701 () x57)
(declare-fun x202 () Bool)
(declare-fun x375 () Int)
(declare-fun x724 () Int)
(declare-fun x100 () Int)
(declare-fun x243 () Int)
(declare-fun x268 () Int)
(declare-fun x185 () Int)
(declare-fun x1488 () Bool)
(declare-fun x950 () x57)
(declare-fun x937 () Int)
(declare-fun x427 () Int)
(declare-fun x1205 (Int) Int)
(declare-fun x303 () Bool)
(declare-fun x1093 (Int) Int)
(declare-fun x955 () Int)
(declare-fun x526 () Int)
(declare-fun x1677 () Int)
(declare-fun x671 () Int)
(declare-fun x70 () Int)
(declare-fun x827 () Int)
(declare-fun x1496 () Int)
(declare-fun x152 () Int)
(declare-fun x374 (Int) Int)
(declare-fun x768 () Int)
(declare-fun x706 () Bool)
(declare-fun x632 () Int)
(declare-fun x866 () Int)
(declare-fun x786 () Int)
(declare-fun x387 () Int)
(declare-fun x1688 () Int)
(declare-fun x403 () Bool)
(declare-fun x769 () Bool)
(declare-fun x348 () Int)
(declare-fun x789 () Int)
(declare-fun x260 () Int)
(declare-fun x691 () Bool)
(declare-fun x1101 () Int)
(declare-fun x58 () Int)
(declare-fun x1163 () Int)
(declare-fun x1253 () Int)
(declare-fun x1519 () Int)
(declare-fun x909 () Int)
(declare-fun x393 () Bool)
(declare-fun x1425 (Int) Int)
(declare-fun x960 () Bool)
(declare-fun x1071 () Int)
(declare-fun x1020 () Int)
(declare-fun x105 () Int)
(declare-fun x343 () Int)
(declare-fun x1091 () Bool)
(declare-fun x20 () Int)
(declare-fun x1714 () Int)
(declare-fun x1557 () Int)
(declare-fun x963 () Int)
(declare-fun x1612 () Int)
(declare-fun x1311 () Int)
(declare-fun x1538 () Bool)
(declare-fun x287 () Int)
(declare-fun x219 () Int)
(declare-fun x721 () Int)
(declare-fun x1560 () Int)
(declare-fun x903 () Int)
(declare-fun x1642 () Int)
(declare-fun x831 () Int)
(declare-fun x1390 () Int)
(declare-fun x967 () Bool)
(declare-fun x1243 () Int)
(declare-fun x722 () Int)
(declare-fun x380 () Int)
(declare-fun x942 () x57)
(declare-fun x590 () Int)
(declare-fun x1629 () Int)
(declare-fun x1252 () Int)
(declare-fun x1634 () x57)
(declare-fun x1224 () x57)
(declare-fun x519 () Int)
(declare-fun x40 () Int)
(declare-fun x1167 () Bool)
(declare-fun x1545 () Int)
(declare-fun x1534 () Int)
(declare-fun x665 () Int)
(declare-fun x940 () Int)
(declare-fun x653 () Int)
(declare-fun x958 () Int)
(declare-fun x1297 (Int) Int)
(declare-fun x332 () Int)
(declare-fun x349 () Int)
(declare-fun x462 () Int)
(declare-fun x1207 () Int)
(declare-fun x516 () Int)
(declare-fun x1087 () Int)
(declare-fun x1411 () Int)
(declare-fun x318 () Int)
(declare-fun x887 () Int)
(declare-fun x981 () Bool)
(declare-fun x276 () Int)
(declare-fun x625 () Bool)
(declare-fun x782 () Int)
(declare-fun x1361 () Bool)
(declare-fun x124 () Int)
(declare-fun x1578 () Bool)
(declare-fun x1358 () Int)
(declare-fun x869 () x57)
(declare-fun x1648 () Int)
(declare-fun x1692 () Bool)
(declare-fun x1417 () Int)
(declare-fun x187 () Int)
(declare-fun x454 () Int)
(declare-fun x1426 () Int)
(declare-fun x173 () Int)
(declare-fun x1083 () Int)
(declare-fun x1696 () Int)
(declare-fun x627 () Int)
(declare-fun x611 () Int)
(declare-fun x236 () Int)
(declare-fun x317 () Int)
(declare-fun x1375 () Int)
(declare-fun x949 () Bool)
(declare-fun x480 (x57) Int)
(declare-fun x284 () Int)
(declare-fun x1016 () Int)
(declare-fun x1587 () Int)
(declare-fun x1602 () x57)
(declare-fun x94 () Int)
(declare-fun x1611 () Bool)
(declare-fun x1319 () Int)
(declare-fun x1119 () Int)
(declare-fun x907 () Int)
(declare-fun x1450 () Bool)
(declare-fun x285 () Int)
(declare-fun x426 () Int)
(declare-fun x549 (Int) Int)
(declare-fun x119 (Int) Int)
(declare-fun x1100 () Int)
(declare-fun x382 () Int)
(declare-fun x1631 () Int)
(declare-fun x1109 () Bool)
(declare-fun x226 () x57)
(declare-fun x84 () Int)
(declare-fun x1176 () Int)
(declare-fun x1155 () Int)
(declare-fun x1085 () Int)
(declare-fun x1699 () Int)
(declare-fun x1157 () Int)
(declare-fun x823 () Bool)
(declare-fun x161 () x57)
(declare-fun x1281 () Int)
(declare-fun x19 (Int) Int)
(declare-fun x1188 () Int)
(declare-fun x31 () Int)
(declare-fun x941 () Int)
(declare-fun x1099 () Int)
(declare-fun x1461 () Int)
(declare-fun x573 () Int)
(declare-fun x1312 () Int)
(declare-fun x496 () Int)
(declare-fun x825 () Bool)
(declare-fun x515 () Int)
(declare-fun x366 () Int)
(declare-fun x1673 () Int)
(declare-fun x1282 (Int) Int)
(declare-fun x905 () Int)
(declare-fun x978 () Int)
(declare-fun x762 () Bool)
(declare-fun x1004 () Int)
(declare-fun x257 () Int)
(declare-fun x338 () Int)
(declare-fun x241 () Int)
(declare-fun x344 () Bool)
(declare-fun x813 () Bool)
(declare-fun x919 () Int)
(declare-fun x1300 () Bool)
(declare-fun x1341 () Int)
(declare-fun x206 () Int)
(declare-fun x455 () Int)
(declare-fun x1328 () Int)
(declare-fun x1356 () Bool)
(declare-fun x760 () Int)
(declare-fun x424 () Int)
(declare-fun x1366 (x57) Int)
(declare-fun x559 () Int)
(declare-fun x107 () x57)
(declare-fun x575 () Int)
(declare-fun x565 () Int)
(declare-fun x1114 () Int)
(declare-fun x891 () Int)
(declare-fun x712 () Bool)
(declare-fun x585 () Int)
(declare-fun x1335 () Int)
(declare-fun x897 () Int)
(declare-fun x487 () Int)
(declare-fun x1553 () Int)
(declare-fun x322 () Int)
(declare-fun x535 () Int)
(declare-fun x865 () Int)
(declare-fun x820 () Int)
(declare-fun x364 () Int)
(declare-fun x473 () Int)
(declare-fun x1713 () Int)
(declare-fun x1419 () Int)
(declare-fun x1573 () Int)
(declare-fun x449 () Int)
(declare-fun x826 () Bool)
(declare-fun x629 () Int)
(declare-fun x735 () Bool)
(declare-fun x1639 () Int)
(declare-fun x469 () Int)
(declare-fun x1403 () Int)
(declare-fun x1433 (x57) Int)
(declare-fun x311 () Bool)
(declare-fun x103 () Int)
(declare-fun x1336 () Bool)
(declare-fun x325 () Int)
(declare-fun x547 () x57)
(declare-fun x508 () Int)
(declare-fun x1436 () Int)
(declare-fun x847 () Int)
(declare-fun x690 () Bool)
(declare-fun x478 () Bool)
(declare-fun x1053 () Int)
(declare-fun x1 () Int)
(declare-fun x1177 () Int)
(declare-fun x1393 () Bool)
(declare-fun x1504 () Int)
(declare-fun x741 () x57)
(declare-fun x1635 () Int)
(declare-fun x222 (Int) Int)
(declare-fun x439 () Bool)
(declare-fun x386 () Bool)
(declare-fun x766 () Int)
(declare-fun x1493 (x57) Int)
(declare-fun x1711 () Int)
(declare-fun x1662 () Int)
(declare-fun x1298 () Int)
(declare-fun x533 () Int)
(declare-fun x1592 (Int) Int)
(declare-fun x753 () Int)
(declare-fun x179 () Int)
(declare-fun x294 () Int)
(declare-fun x1443 () Int)
(declare-fun x1309 () x57)
(declare-fun x1548 () x57)
(declare-fun x76 () x57)
(declare-fun x922 () Int)
(declare-fun x162 () Int)
(declare-fun x876 () Int)
(declare-fun x77 () Int)
(declare-fun x687 (Int) Int)
(declare-fun x331 () Int)
(declare-fun x1054 () Int)
(declare-fun x1588 () Int)
(declare-fun x1086 () Int)
(declare-fun x1325 () Int)
(declare-fun x1008 () Int)
(declare-fun x1420 () Bool)
(declare-fun x1620 () Int)
(declare-fun x1462 () Int)
(declare-fun x334 () x57)
(declare-fun x1084 () Int)
(declare-fun x254 () Int)
(declare-fun x784 () Int)
(declare-fun x1187 () Int)
(declare-fun x463 () Int)
(declare-fun x316 () Int)
(declare-fun x1483 () Int)
(declare-fun x358 () Int)
(declare-fun x959 () Int)
(declare-fun x1708 (x57) Int)
(declare-fun x1452 () x57)
(declare-fun x1065 () Bool)
(declare-fun x423 () Int)
(declare-fun x841 () Bool)
(declare-fun x1550 () Int)
(declare-fun x938 () Int)
(declare-fun x129 () Int)
(declare-fun x684 () Int)
(declare-fun x639 () Bool)
(declare-fun x212 () Int)
(declare-fun x1396 () Int)
(declare-fun x1413 () Int)
(declare-fun x1248 () Int)
(declare-fun x566 (x57) Int)
(declare-fun x628 () Bool)
(declare-fun x412 () Int)
(declare-fun x1274 () Bool)
(declare-fun x1660 () Int)
(declare-fun x1355 () Int)
(declare-fun x1564 () Int)
(declare-fun x1430 () Int)
(declare-fun x346 () Int)
(declare-fun x290 () Int)
(declare-fun x1683 () Int)
(declare-fun x1289 () Int)
(declare-fun x1531 () Int)
(declare-fun x874 () Bool)
(declare-fun x873 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x502 () Int)
(declare-fun x1318 () Int)
(declare-fun x1641 () Int)
(declare-fun x682 () Int)
(declare-fun x369 () Bool)
(declare-fun x320 () Int)
(declare-fun x921 () Bool)
(declare-fun x59 () Int)
(declare-fun x313 () Int)
(declare-fun x1410 () Int)
(declare-fun x266 () Int)
(declare-fun x1432 () Int)
(declare-fun x1482 () Int)
(declare-fun x1195 () Int)
(declare-fun x859 () Int)
(declare-fun x490 () Int)
(declare-fun x1175 () Int)
(declare-fun x943 () Int)
(declare-fun x1323 () Int)
(declare-fun x649 () Int)
(declare-fun x1015 () Int)
(declare-fun x43 () Int)
(declare-fun x1440 () Int)
(declare-fun x588 () Int)
(declare-fun x280 () Bool)
(declare-fun x974 () Int)
(declare-fun x493 () Int)
(declare-fun x1619 () Int)
(declare-fun x498 () Int)
(declare-fun x1387 () Int)
(declare-fun x648 () Bool)
(declare-fun x1669 () Int)
(declare-fun x1674 (Int) Int)
(declare-fun x55 () Int)
(declare-fun x681 () Int)
(declare-fun x353 () Int)
(declare-fun x908 () Bool)
(declare-fun x329 () Int)
(declare-fun x857 (x57) Int)
(declare-fun x968 () Int)
(declare-fun x464 () Bool)
(declare-fun x1484 () Int)
(declare-fun x1551 () Int)
(declare-fun x1039 () Int)
(declare-fun x72 () Bool)
(declare-fun x838 () Int)
(declare-fun x1700 () Int)
(declare-fun x1284 () Int)
(declare-fun x920 () Int)
(declare-fun x1304 () Int)
(declare-fun x1723 () Int)
(declare-fun x48 () Bool)
(declare-fun x323 () Int)
(declare-fun x1596 (Int) Int)
(declare-fun x1718 () Int)
(declare-fun x1424 () x57)
(declare-fun x810 (Int) Int)
(declare-fun x560 () Int)
(declare-fun x1589 () Int)
(declare-fun x776 () Int)
(declare-fun x804 () Int)
(declare-fun x1594 () Bool)
(declare-fun x557 () Int)
(declare-fun x1051 () Int)
(declare-fun x155 () Int)
(declare-fun x652 () Int)
(declare-fun x1061 () Int)
(declare-fun x1370 () Int)
(declare-fun x1308 () Int)
(declare-fun x1579 () Bool)
(declare-fun x840 () Bool)
(declare-fun x1074 () Int)
(declare-fun x23 () Int)
(declare-fun x483 () Bool)
(declare-fun x291 () Int)
(declare-fun x899 () Bool)
(declare-fun x1303 () Int)
(declare-fun x1345 () Int)
(declare-fun x34 () Bool)
(declare-fun x1727 () Int)
(declare-fun x928 () Bool)
(declare-fun x1647 () Int)
(declare-fun x1251 () x57)
(declare-fun x849 () Bool)
(declare-fun x39 () Bool)
(declare-fun x509 () Int)
(declare-fun x631 () x57)
(declare-fun x1130 () Int)
(declare-fun x123 () Int)
(declare-fun x781 () Int)
(declare-fun x402 () Int)
(declare-fun x1180 () Int)
(declare-fun x371 () Int)
(declare-fun x1208 () Int)
(declare-fun x951 () x57)
(declare-fun x1171 () Int)
(declare-fun x954 () Int)
(declare-fun x357 () Int)
(declare-fun x479 (Int) Int)
(declare-fun x662 () Bool)
(declare-fun x1077 () Int)
(declare-fun x460 () Int)
(declare-fun x770 () Int)
(declare-fun x497 () Int)
(declare-fun x1216 () x57)
(declare-fun x273 () Int)
(declare-fun x1121 () Int)
(declare-fun x1213 (Int) Int)
(declare-fun x1423 () Int)
(declare-fun x658 () Int)
(declare-fun x249 () Int)
(declare-fun x1018 () Int)
(declare-fun x1502 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x614 () Int)
(declare-fun x1539 () Bool)
(declare-fun x1343 () Int)
(declare-fun x1218 () Int)
(declare-fun x1286 () Int)
(declare-fun x41 () Bool)
(declare-fun x385 () x57)
(declare-fun x188 () Int)
(declare-fun x1541 () Int)
(declare-fun x787 () Int)
(declare-fun x819 () Int)
(declare-fun x1158 () Bool)
(declare-fun x126 () Int)
(declare-fun x569 (x57) Int)
(declare-fun x1080 () Int)
(declare-fun x626 () Bool)
(declare-fun x708 () Bool)
(declare-fun x1701 () Bool)
(declare-fun x37 () Int)
(declare-fun x915 (Int) Int)
(declare-fun x1679 () Int)
(declare-fun x538 () Bool)
(declare-fun x1301 () Int)
(declare-fun x927 () Int)
(declare-fun x1514 () x57)
(declare-fun x9 () Int)
(declare-fun x1687 () Int)
(declare-fun x1146 () Int)
(declare-fun x1170 () Int)
(declare-fun x272 () Bool)
(declare-fun x1616 () Int)
(declare-fun x1691 () Int)
(declare-fun x1222 () Int)
(declare-fun x556 () Int)
(declare-fun x528 () Int)
(declare-fun x1458 () Int)
(declare-fun x882 () Int)
(declare-fun x1347 () Int)
(declare-fun x1650 () Int)
(declare-fun x984 () Int)
(declare-fun x1609 () Int)
(declare-fun x1604 () Int)
(declare-fun x634 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x669 () Int)
(declare-fun x595 () Int)
(declare-fun x1379 () Bool)
(declare-fun x668 () Bool)
(declare-fun x233 () x57)
(declare-fun x795 () Int)
(declare-fun x491 () Int)
(declare-fun x99 () Int)
(declare-fun x574 () Int)
(declare-fun x904 () Int)
(declare-fun x1261 () Int)
(declare-fun x1569 () Int)
(declare-fun x286 () Bool)
(declare-fun x1267 () Int)
(declare-fun x1591 () Int)
(declare-fun x250 () Int)
(declare-fun x96 () Int)
(declare-fun x1322 () Int)
(declare-fun x1214 () Int)
(declare-fun x476 () Int)
(declare-fun x659 () Int)
(declare-fun x894 () Int)
(declare-fun x785 () Int)
(declare-fun x211 () Int)
(declare-fun x945 () Int)
(declare-fun x965 () Bool)
(declare-fun x1185 () Int)
(declare-fun x715 () Int)
(declare-fun x1385 () Int)
(declare-fun x1272 () Int)
(declare-fun x726 () Bool)
(declare-fun x589 () Int)
(declare-fun x743 () Int)
(declare-fun x319 () Bool)
(declare-fun x347 () Int)
(declare-fun x1332 () Bool)
(declare-fun x256 () Bool)
(declare-fun x146 () Int)
(declare-fun x933 () Int)
(declare-fun x1670 () Int)
(declare-fun x251 () Int)
(declare-fun x1060 () Int)
(declare-fun x388 (Int) Int)
(declare-fun x578 (x57) Int)
(declare-fun x91 () Int)
(declare-fun x482 () Int)
(declare-fun x42 () Bool)
(declare-fun x616 () Int)
(declare-fun x1118 () Bool)
(declare-fun x1472 () Int)
(declare-fun x913 () Int)
(declare-fun x1191 () Bool)
(declare-fun x1290 () Int)
(declare-fun x1597 () Bool)
(declare-fun x742 () Int)
(declare-fun x1198 () Int)
(declare-fun x801 () Int)
(declare-fun x1210 () Int)
(declare-fun x1530 () Bool)
(declare-fun x918 () Int)
(declare-fun x932 () Bool)
(declare-fun x666 (x57) Int)
(declare-fun x238 () Int)
(declare-fun x860 () Int)
(declare-fun x301 () Int)
(declare-fun x1115 () Int)
(declare-fun x1134 () Int)
(declare-fun x703 () Int)
(declare-fun x1476 () Int)
(declare-fun x1444 () Int)
(declare-fun x843 () Int)
(declare-fun x321 () Int)
(declare-fun x1123 (Int) Int)
(declare-fun x642 () Bool)
(declare-fun x1017 () Int)
(declare-fun x1142 (Int) Int)
(declare-fun x1646 () Int)
(declare-fun x850 () Int)
(declare-fun x1369 () Int)
(declare-fun x1475 () Int)
(declare-fun x392 () Int)
(declare-fun x434 () Bool)
(declare-fun x224 () Int)
(declare-fun x422 () Bool)
(declare-fun x1040 () Int)
(declare-fun x1126 () Bool)
(declare-fun x1089 () Int)
(declare-fun x601 () Bool)
(declare-fun x764 () Bool)
(declare-fun x1664 () Int)
(declare-fun x608 () Int)
(declare-fun x744 () Int)
(declare-fun x1352 () Int)
(declare-fun x1668 () Int)
(declare-fun x972 () Bool)
(declare-fun x102 () Int)
(declare-fun x979 () Int)
(declare-fun x1364 () Int)
(declare-fun x525 () Int)
(declare-fun x507 () Bool)
(declare-fun x858 () Int)
(declare-fun x871 () Int)
(declare-fun x587 () Int)
(declare-fun x1429 () Int)
(declare-fun x1441 () Int)
(declare-fun x47 () Int)
(declare-fun x558 () Int)
(declare-fun x503 () x57)
(declare-fun x542 () Int)
(declare-fun x1271 () Int)
(declare-fun x1160 () Int)
(declare-fun x512 () Int)
(declare-fun x617 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x890 () Int)
(declare-fun x12 () Int)
(declare-fun x581 () Int)
(declare-fun x1046 () Bool)
(declare-fun x1377 () Int)
(declare-fun x368 () Int)
(declare-fun x27 () x57)
(declare-fun x510 () Int)
(declare-fun x609 () Int)
(declare-fun x336 () Int)
(declare-fun x1273 () x57)
(declare-fun x996 () Int)
(declare-fun x513 () Int)
(declare-fun x621 () Int)
(declare-fun x240 () Int)
(declare-fun x630 () Int)
(declare-fun x21 () x57)
(declare-fun x253 () Bool)
(declare-fun x677 () Int)
(declare-fun x586 () Int)
(declare-fun x1451 () Int)
(declare-fun x506 (Int) Int)
(declare-fun x1395 () x57)
(declare-fun x1010 () Int)
(declare-fun x1064 () Bool)
(declare-fun x1230 () Int)
(declare-fun x693 () Int)
(declare-fun x1122 () Int)
(declare-fun x1199 () Int)
(declare-fun x546 () Int)
(declare-fun x1111 () Int)
(declare-fun x615 () Int)
(declare-fun x1685 () Int)
(declare-fun x95 () Int)
(declare-fun x167 () Int)
(declare-fun x199 () Bool)
(declare-fun x159 (x57) Int)
(declare-fun x117 () Int)
(declare-fun x1725 () Int)
(declare-fun x567 () Int)
(declare-fun x1439 () Int)
(declare-fun x139 () Int)
(declare-fun x1268 () Int)
(declare-fun x1414 () Int)
(declare-fun x1306 () Int)
(declare-fun x468 () Int)
(declare-fun x863 () x57)
(declare-fun x948 () Bool)
(declare-fun x410 () Bool)
(declare-fun x1014 () Int)
(declare-fun x912 () Int)
(declare-fun x148 () Int)
(declare-fun x720 () Int)
(declare-fun x1606 () Int)
(declare-fun x8 () Int)
(declare-fun x142 () Int)
(declare-fun x1571 () Int)
(declare-fun x1110 () Int)
(declare-fun x1254 () Int)
(declare-fun x376 () Int)
(declare-fun x1644 () Int)
(declare-fun x213 () Bool)
(declare-fun x1575 () Int)
(declare-fun x864 () Int)
(declare-fun x775 () Int)
(declare-fun x132 () Int)
(declare-fun x944 () Int)
(declare-fun x667 () Int)
(declare-fun x1307 () Bool)
(declare-fun x18 () Int)
(declare-fun x1136 () Bool)
(declare-fun x60 () Int)
(declare-fun x541 () Bool)
(declare-fun x1044 () Int)
(declare-fun x1280 () Int)
(declare-fun x1354 () Bool)
(declare-fun x1138 (Int) Int)
(declare-fun x1183 () Int)
(declare-fun x966 () x57)
(declare-fun x970 () Int)
(declare-fun x1645 () Int)
(declare-fun x216 () Int)
(declare-fun x198 () Int)
(declare-fun x428 () Int)
(declare-fun x1090 () Int)
(declare-fun x1211 () Int)
(declare-fun x1407 () Int)
(declare-fun x278 () Int)
(declare-fun x281 () Int)
(declare-fun x1226 () Int)
(declare-fun x1431 () Int)
(declare-fun x191 () Int)
(declare-fun x771 () x57)
(declare-fun x452 () Int)
(declare-fun x29 () Int)
(declare-fun x1166 (Int) Int)
(declare-fun x488 () x57)
(declare-fun x259 (x57) Int)
(declare-fun x779 () Int)
(declare-fun x298 () Bool)
(declare-fun x25 () Bool)
(declare-fun x577 () Int)
(declare-fun x111 () Int)
(declare-fun x553 (x57) Int)
(declare-fun x839 () Bool)
(declare-fun x447 () Int)
(declare-fun x830 () Int)
(declare-fun x1480 () x57)
(declare-fun x1315 () Int)
(declare-fun x1127 () Int)
(declare-fun x640 () Int)
(declare-fun x261 () Int)
(declare-fun x1585 () Bool)
(define-fun x229 ((x57 x57) (x279 Int)) x57 (ite ((_ is x1552) x57) (x1552 (x1143 x57) (+ (x998 x57) x279)) (ite ((_ is x1227) x57) (x1227 (x1495 x57) (x300 x57) (+ (x563 x57) x279)) (x342 (+ (x24 x57) x279)))))
(define-fun x1474 ((x1133 Int)) Int (ite (and (>= x1133 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1133)) x1133 (- x1133 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x245 ((x1133 Int)) Int (ite (and (> 0 x1133) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1133)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1133) x1133))
(define-fun x495 ((x761 Int)) Bool (and (>= x761 0) (< x761 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x815 ((x761 Int)) Bool (and (= (x106 115792089237316195423570985008687907853269984665640564039457584007913129639935 x761) x761) (= x761 (x106 x761 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x818 ((x761 Int)) Bool (and (= (x106 0 x761) 0) (= 0 (x106 x761 0))))
(define-fun x748 ((x761 Int)) Bool (= x761 (x106 x761 x761)))
(define-fun x1276 ((x761 Int)) Bool (and (x748 x761) (x818 x761) (x815 x761)))
(define-fun x926 ((x761 Int)) Bool (= (x106 18446744073709551615 x761) (x106 18446744073709551615 (x106 18446744073709551615 x761))))
(define-fun x1229 ((x761 Int)) Bool (=> (and (<= 0 x761) (< x761 18446744073709551616)) (= x761 (x106 18446744073709551615 x761))))
(define-fun x145 ((x761 Int)) Bool (=> (= (x106 18446744073709551615 x761) x761) (and (<= 0 x761) (> 18446744073709551616 x761))))
(define-fun x1178 ((x761 Int)) Bool (=> (and (<= 18446744073709551616 x761) (< x761 36893488147419103232)) (= (- x761 18446744073709551616) (x106 18446744073709551615 x761))))
(define-fun x1724 ((x761 Int) (x1590 Int)) Bool (and (>= x1590 0) (= (+ (* x1590 18446744073709551616) (x106 18446744073709551615 x761)) x761)))
(define-fun x550 ((x761 Int) (x49 Int)) Bool (and (x1229 x761) (x1724 x761 x49) (x926 x761) (x145 x761) (x1178 x761)))
(define-fun x1340 ((x761 Int) (x1590 Int)) Bool (= (x106 x761 x1590) (x106 x1590 x761)))
(define-fun x1346 ((x761 Int) (x1590 Int)) Bool (and (<= 0 (x106 x761 x1590)) (=> (>= x1590 0) (<= (x106 x761 x1590) x1590)) (=> (<= 0 x761) (<= (x106 x761 x1590) x761))))
(define-fun x1680 ((x761 Int) (x1590 Int)) Bool (and (x1346 x761 x1590) (x1340 x761 x1590)))
(define-fun x207 ((x761 Int) (x49 Int)) Bool (and (x550 x761 x49) (x1680 x761 18446744073709551615)))
(define-fun x906 ((x761 Int)) Bool (= (x106 20282409603651670423947251286015 (x106 20282409603651670423947251286015 x761)) (x106 20282409603651670423947251286015 x761)))
(define-fun x1682 ((x761 Int)) Bool (=> (and (> 20282409603651670423947251286016 x761) (>= x761 0)) (= x761 (x106 20282409603651670423947251286015 x761))))
(define-fun x504 ((x761 Int)) Bool (=> (= (x106 20282409603651670423947251286015 x761) x761) (and (<= 0 x761) (> 20282409603651670423947251286016 x761))))
(define-fun x1194 ((x761 Int)) Bool (=> (and (> 40564819207303340847894502572032 x761) (>= x761 20282409603651670423947251286016)) (= (- x761 20282409603651670423947251286016) (x106 20282409603651670423947251286015 x761))))
(define-fun x171 ((x761 Int) (x1590 Int)) Bool (and (>= x1590 0) (= (+ (* 20282409603651670423947251286016 x1590) (x106 20282409603651670423947251286015 x761)) x761)))
(define-fun x774 ((x761 Int) (x49 Int)) Bool (and (x1682 x761) (x504 x761) (x1194 x761) (x906 x761) (x171 x761 x49)))
(define-fun x448 ((x761 Int) (x49 Int)) Bool (and (x774 x761 x49) (x1680 x761 20282409603651670423947251286015)))
(define-fun x456 ((x761 Int)) Bool (= (x106 1461501637330902918203684832716283019655932542975 (x106 1461501637330902918203684832716283019655932542975 x761)) (x106 1461501637330902918203684832716283019655932542975 x761)))
(define-fun x1720 ((x761 Int)) Bool (=> (and (<= 0 x761) (> 1461501637330902918203684832716283019655932542976 x761)) (= (x106 1461501637330902918203684832716283019655932542975 x761) x761)))
(define-fun x114 ((x761 Int)) Bool (=> (= x761 (x106 1461501637330902918203684832716283019655932542975 x761)) (and (> 1461501637330902918203684832716283019655932542976 x761) (<= 0 x761))))
(define-fun x474 ((x761 Int)) Bool (=> (and (>= x761 1461501637330902918203684832716283019655932542976) (> 2923003274661805836407369665432566039311865085952 x761)) (= (x106 1461501637330902918203684832716283019655932542975 x761) (- x761 1461501637330902918203684832716283019655932542976))))
(define-fun x664 ((x761 Int) (x1590 Int)) Bool (and (<= 0 x1590) (= x761 (+ (* 1461501637330902918203684832716283019655932542976 x1590) (x106 1461501637330902918203684832716283019655932542975 x761)))))
(define-fun x717 ((x761 Int) (x49 Int)) Bool (and (x664 x761 x49) (x474 x761) (x456 x761) (x114 x761) (x1720 x761)))
(define-fun x686 ((x761 Int) (x49 Int)) Bool (and (x717 x761 x49) (x1680 x761 1461501637330902918203684832716283019655932542975)))
(define-fun x1269 ((x761 Int)) Bool (= (x106 255 x761) (x106 255 (x106 255 x761))))
(define-fun x807 ((x761 Int)) Bool (=> (and (< x761 256) (>= x761 0)) (= x761 (x106 255 x761))))
(define-fun x1506 ((x761 Int)) Bool (=> (= x761 (x106 255 x761)) (and (< x761 256) (<= 0 x761))))
(define-fun x695 ((x761 Int)) Bool (=> (and (> 512 x761) (<= 256 x761)) (= (- x761 256) (x106 255 x761))))
(define-fun x404 ((x761 Int) (x1590 Int)) Bool (and (= (+ (* 256 x1590) (x106 255 x761)) x761) (>= x1590 0)))
(define-fun x158 ((x761 Int) (x49 Int)) Bool (and (x807 x761) (x404 x761 x49) (x1269 x761) (x695 x761) (x1506 x761)))
(define-fun x1601 ((x761 Int) (x49 Int)) Bool (and (x158 x761 x49) (x1680 x761 255)))
(define-fun x17 ((x761 Int)) Bool (= (x1596 x761) (ite (> 10141204801825835211973625643008 (x106 x761 20282409603651670423947251286015)) (x106 x761 20282409603651670423947251286015) (+ (x106 x761 20282409603651670423947251286015) 115792089237316195423570985008687907853269984645358154435805913583965878353920))))
(define-fun x367 ((x761 Int)) Bool (= (x106 340282366920938463463374607431768211455 (x106 340282366920938463463374607431768211455 x761)) (x106 340282366920938463463374607431768211455 x761)))
(define-fun x1256 ((x761 Int)) Bool (=> (and (> 340282366920938463463374607431768211456 x761) (>= x761 0)) (= x761 (x106 340282366920938463463374607431768211455 x761))))
(define-fun x28 ((x761 Int)) Bool (=> (= (x106 340282366920938463463374607431768211455 x761) x761) (and (< x761 340282366920938463463374607431768211456) (>= x761 0))))
(define-fun x65 ((x761 Int)) Bool (=> (and (> 680564733841876926926749214863536422912 x761) (<= 340282366920938463463374607431768211456 x761)) (= (- x761 340282366920938463463374607431768211456) (x106 340282366920938463463374607431768211455 x761))))
(define-fun x189 ((x761 Int) (x1590 Int)) Bool (and (= (+ (x106 340282366920938463463374607431768211455 x761) (* 340282366920938463463374607431768211456 x1590)) x761) (<= 0 x1590)))
(define-fun x1653 ((x761 Int) (x49 Int)) Bool (and (x28 x761) (x367 x761) (x1256 x761) (x189 x761 x49) (x65 x761)))
(define-fun x1036 ((x761 Int) (x49 Int)) Bool (and (x1653 x761 x49) (x1680 x761 340282366920938463463374607431768211455)))
(define-fun x953 ((x761 Int)) Bool (= (x106 1099511627775 (x106 1099511627775 x761)) (x106 1099511627775 x761)))
(define-fun x1465 ((x761 Int)) Bool (=> (and (< x761 1099511627776) (>= x761 0)) (= x761 (x106 1099511627775 x761))))
(define-fun x812 ((x761 Int)) Bool (=> (= (x106 1099511627775 x761) x761) (and (> 1099511627776 x761) (>= x761 0))))
(define-fun x583 ((x761 Int)) Bool (=> (and (<= 1099511627776 x761) (> 2199023255552 x761)) (= (x106 1099511627775 x761) (- x761 1099511627776))))
(define-fun x1368 ((x761 Int) (x1590 Int)) Bool (and (>= x1590 0) (= (+ (x106 1099511627775 x761) (* 1099511627776 x1590)) x761)))
(define-fun x1107 ((x761 Int) (x49 Int)) Bool (and (x953 x761) (x1368 x761 x49) (x1465 x761) (x812 x761) (x583 x761)))
(define-fun x1627 ((x761 Int) (x49 Int)) Bool (and (x1680 x761 1099511627775) (x1107 x761 x49)))
(define-fun x360 ((x761 Int)) Bool (= (x106 65535 (x106 65535 x761)) (x106 65535 x761)))
(define-fun x1532 ((x761 Int)) Bool (=> (and (< x761 65536) (>= x761 0)) (= x761 (x106 65535 x761))))
(define-fun x309 ((x761 Int)) Bool (=> (= (x106 65535 x761) x761) (and (< x761 65536) (<= 0 x761))))
(define-fun x299 ((x761 Int)) Bool (=> (and (>= x761 65536) (< x761 131072)) (= (x106 65535 x761) (- x761 65536))))
(define-fun x151 ((x761 Int) (x1590 Int)) Bool (and (>= x1590 0) (= (+ (x106 65535 x761) (* 65536 x1590)) x761)))
(define-fun x71 ((x761 Int) (x49 Int)) Bool (and (x1532 x761) (x360 x761) (x309 x761) (x299 x761) (x151 x761 x49)))
(define-fun x1050 ((x761 Int) (x49 Int)) Bool (and (x71 x761 x49) (x1680 x761 65535)))
(define-fun x1401 ((x761 Int)) Bool (= (x106 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x106 115792089237316195423570985008687907853269984665640564039457584007913129639904 x761)) (x106 115792089237316195423570985008687907853269984665640564039457584007913129639904 x761)))
(define-fun x466 ((x761 Int)) Bool (=> (and (> 32 x761) (>= x761 0)) (= 0 (x106 115792089237316195423570985008687907853269984665640564039457584007913129639904 x761))))
(define-fun x1079 ((x761 Int) (x1590 Int) (x1595 Int) (x1615 Int)) Bool (and (<= 0 x1590) (>= x1615 0) (= x761 (+ (* x1615 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1590 (* x1595 32))) (= (* x1595 32) (x106 115792089237316195423570985008687907853269984665640564039457584007913129639904 x761)) (> 1 x1615) (<= 0 x1595) (< x1590 32) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x1595)))
(define-fun x406 ((x761 Int) (x1144 Int) (x796 Int) (x1540 Int)) Bool (and (x1079 x761 x1144 x796 x1540) (x466 x761) (x1401 x761)))
(define-fun x1529 ((x761 Int) (x1144 Int) (x796 Int) (x1540 Int)) Bool (and (x406 x761 x1144 x796 x1540) (x1680 x761 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x201 ((x761 Int)) Bool (= (ite (< (x106 x761 340282366920938463463374607431768211455) 170141183460469231731687303715884105728) (x106 x761 340282366920938463463374607431768211455) (+ (x106 x761 340282366920938463463374607431768211455) 115792089237316195423570985008687907852929702298719625575994209400481361428480)) (x1282 x761)))
(define-fun x52 ((x1283 x57)) Int (ite (= x1283 x1416) x731 (x1493 x1283)))
(define-fun x656 ((x1283 x57)) Int (ite (= x1283 x951) x179 (x52 x1283)))
(define-fun x231 ((x1283 x57)) Int (ite (= x832 x1283) x296 (x1493 x1283)))
(define-fun x1057 ((x1283 x57)) Int (ite (= x1283 x107) x190 (x231 x1283)))
(define-fun x252 ((x1283 x57)) Int (ite x1455 (ite (and x1438 x1526) (x656 x1283) (x1493 x1283)) (x1057 x1283)))
(define-fun x74 ((x1283 Int)) Int (ite (= x1283 x1116) x1153 (x351 x1283)))
(define-fun x10 ((x1283 Int)) Int (ite (= x1283 x1334) x436 (x833 x1283)))
(define-fun x524 ((x1283 Int)) Int (ite (= x1051 x1283) x770 (x388 x1283)))
(define-fun x441 ((x1283 Int)) Int (ite (= x677 x1283) x610 (x1213 x1283)))
(define-fun x580 ((x1283 Int)) Int (ite (= x1283 x1404) x745 (x150 x1283)))
(define-fun x1481 ((x1283 Int)) Int (ite (= x1283 x1132) x1413 (x131 x1283)))
(define-fun x373 ((x1283 Int)) Int (ite (= x1283 x1605) x1024 (x288 x1283)))
(define-fun x554 ((x1283 Int)) Int (ite (= x1311 x1283) x399 (x1123 x1283)))
(define-fun x13 ((x1283 Int)) Int (ite (= 288 x1283) x1669 (x506 x1283)))
(define-fun x641 ((x1283 Int)) Int (ite (= 320 x1283) x60 (x13 x1283)))
(define-fun x458 ((x1283 Int)) Int (ite (= 352 x1283) x163 (x641 x1283)))
(define-fun x1456 ((x1283 Int)) Int (ite (= x1283 384) x1060 (x458 x1283)))
(define-fun x930 ((x1283 Int)) Int (ite (= 416 x1283) x1685 (x1456 x1283)))
(define-fun x739 ((x1283 Int)) Int (ite (= x1283 288) x779 (x506 x1283)))
(define-fun x395 ((x1283 Int)) Int (ite (= 320 x1283) x1325 (x739 x1283)))
(define-fun x698 ((x1283 Int)) Int (ite (= x1283 352) x148 (x395 x1283)))
(define-fun x1037 ((x1283 Int)) Int (ite (= 384 x1283) x922 (x698 x1283)))
(define-fun x1348 ((x1283 Int)) Int (ite (= 416 x1283) x442 (x1037 x1283)))
(define-fun x1580 ((x1283 Int)) Int (ite (= x1283 128) x427 (x1262 x1283)))
(define-fun x87 ((x1283 Int)) Int (ite (= 160 x1283) x675 (x1580 x1283)))
(define-fun x889 ((x1283 Int)) Int (ite (= 192 x1283) x282 (x87 x1283)))
(define-fun x1593 ((x1283 Int)) Int (ite (= 224 x1283) x206 (x889 x1283)))
(define-fun x1009 ((x1283 Int)) Int (ite (= 256 x1283) x924 (x1593 x1283)))
(define-fun x654 ((x1283 Int)) Int (ite (= x91 x1283) x1108 (x1048 x1283)))
(define-fun x1666 ((x1283 Int)) Int (ite (= x1489 x1283) x1687 (x654 x1283)))
(define-fun x1391 ((x1283 Int)) Int (ite (= x1283 x323) x301 (x1666 x1283)))
(define-fun x1561 ((x1283 Int)) Int (ite (= x1353 x1283) x117 (x1391 x1283)))
(define-fun x352 ((x1283 Int)) Int (ite (= x1283 x431) x325 (x1561 x1283)))
(define-fun x467 ((x1283 Int)) Int (ite (= x1283 0) x1298 (x239 x1283)))
(define-fun x688 ((x1283 Int)) Int (ite (= 32 x1283) x251 (x467 x1283)))
(define-fun x1471 ((x1283 Int)) Int (ite (= x1283 64) x831 (x688 x1283)))
(define-fun x1031 ((x1283 Int)) Int (ite (= 96 x1283) x1402 (x1471 x1283)))
(define-fun x1497 ((x1283 Int)) Int (ite (= x1283 128) x1389 (x1031 x1283)))
(define-fun x637 ((x1283 Int)) Int (ite (= x235 x1283) x485 (x1093 x1283)))
(define-fun x433 ((x1283 Int)) Int (ite (= x1210 x1283) x322 (x803 x1283)))
(define-fun x964 ((x1283 Int)) Int (ite (= x1704 x1283) x338 (x1056 x1283)))
(define-fun x1147 ((x1283 Int)) Int (ite (= x1550 x1283) x396 (x687 x1283)))
(define-fun x1234 ((x1283 Int)) Int (ite (= x1283 x938) x941 (x374 x1283)))
(define-fun x405 ((x1283 Int)) Int (ite (= x1283 x82) x678 (x767 x1283)))
(define-fun x1581 ((x1283 Int)) Int (ite (= x1283 x492) x1083 (x797 x1283)))
(define-fun x680 ((x1283 Int)) Int (ite (= x1283 x1247) x882 (x1205 x1283)))
(define-fun x421 ((x1283 x57)) Int (ite (= x1283 x773) x310 (x159 x1283)))
(define-fun x607 ((x1283 Int)) Int (ite (= 128 x1283) x1017 (x915 x1283)))
(define-fun x16 ((x1283 Int)) Int (ite (= x1283 160) x909 (x607 x1283)))
(define-fun x597 ((x1283 Int)) Int (ite (= 192 x1283) x1337 (x16 x1283)))
(define-fun x339 ((x1283 Int)) Int (ite (= x1283 224) x1324 (x597 x1283)))
(define-fun x1344 ((x1283 Int)) Int (ite (= x1283 256) x1618 (x339 x1283)))
(define-fun x1498 ((x1283 Int)) Int (ite (= x1283 128) x1411 (x915 x1283)))
(define-fun x699 ((x1283 Int)) Int (ite (= 160 x1283) x935 (x1498 x1283)))
(define-fun x895 ((x1283 Int)) Int (ite (= x1283 192) x459 (x699 x1283)))
(define-fun x400 ((x1283 Int)) Int (ite (= x1283 224) x1723 (x895 x1283)))
(define-fun x312 ((x1283 Int)) Int (ite (= x1283 256) x660 (x400 x1283)))
(define-fun x1106 ((x1283 Int)) Int (ite (= x1283 128) x427 (x350 x1283)))
(define-fun x700 ((x1283 Int)) Int (ite (= 160 x1283) x246 (x1106 x1283)))
(define-fun x363 ((x1283 Int)) Int (ite (= x1283 192) x282 (x700 x1283)))
(define-fun x408 ((x1283 Int)) Int (ite (= x1283 224) x206 (x363 x1283)))
(define-fun x1124 ((x1283 Int)) Int (ite (= 256 x1283) x924 (x408 x1283)))
(define-fun x992 ((x1283 Int)) Int (ite (= x329 x1283) x521 (x1297 x1283)))
(define-fun x73 ((x1283 Int)) Int (ite (= x1283 x1451) x817 (x992 x1283)))
(define-fun x1350 ((x1283 Int)) Int (ite (= x379 x1283) x15 (x73 x1283)))
(define-fun x1643 ((x1283 Int)) Int (ite (= x1562 x1283) x1110 (x1350 x1283)))
(define-fun x1156 ((x1283 Int)) Int (ite (= x1283 x1599) x63 (x1643 x1283)))
(define-fun x1237 ((x1283 Int)) Int (ite (= 0 x1283) x1718 (x112 x1283)))
(define-fun x1491 ((x1283 Int)) Int (ite (= 32 x1283) x249 (x1237 x1283)))
(define-fun x1278 ((x1283 Int)) Int (ite (= 64 x1283) x1406 (x1491 x1283)))
(define-fun x893 ((x1283 Int)) Int (ite (= 96 x1283) x1308 (x1278 x1283)))
(define-fun x977 ((x1283 Int)) Int (ite (= x1283 128) x1062 (x893 x1283)))
(define-fun x896 ((x1283 Int)) Int (ite (= x91 x1283) x460 (x1048 x1283)))
(define-fun x1321 ((x1283 Int)) Int (ite (= x1461 x1283) x1299 (x896 x1283)))
(define-fun x620 ((x1283 Int)) Int (ite (= x917 x1283) x1710 (x1321 x1283)))
(define-fun x108 ((x1283 Int)) Int (ite (= x1283 x784) x371 (x620 x1283)))
(define-fun x430 ((x1283 Int)) Int (ite (= x1283 x1417) x240 (x108 x1283)))
(define-fun x1305 ((x1283 Int)) Int (ite (and x1137 x527) (x352 x1283) (x430 x1283)))
(define-fun x1544 ((x1283 Int)) Int (ite x1300 (x1305 x1283) (x432 x1283)))
(define-fun x33 ((x1283 Int)) Int (ite (= x1283 x329) x530 (x1297 x1283)))
(define-fun x1624 ((x1283 Int)) Int (ite (= x1283 x1432) x1303 (x33 x1283)))
(define-fun x718 ((x1283 Int)) Int (ite (= x1283 x907) x220 (x1624 x1283)))
(define-fun x274 ((x1283 Int)) Int (ite (= x984 x1283) x420 (x718 x1283)))
(define-fun x1139 ((x1283 Int)) Int (ite (= x1283 x1287) x518 (x274 x1283)))
(define-fun x1586 ((x1283 Int)) Int (ite (and x543 x1351) (x1156 x1283) (x1139 x1283)))
(define-fun x1463 ((x1283 Int)) Int (ite x1367 (x1586 x1283) (x1166 x1283)))
(define-fun x1034 ((x1283 Int)) Int (ite (and x41 (not x1549)) (x432 x1283) (x1544 x1283)))
(define-fun x1197 ((x1283 Int)) Int (ite x1501 (ite (and x1372 (not x39)) (x1166 x1283) (x1463 x1283)) (x1166 x1283)))
(define-fun x1275 ((x1283 Int)) Int (ite (= x1302 x1283) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1197 x1283)))
(define-fun x80 ((x1283 Int)) Int (ite (= x1148 x1283) x3 (x1275 x1283)))
(define-fun x570 ((x1283 Int)) Int (ite (= x1283 0) 1 (x119 x1283)))
(define-fun x1448 ((x1283 Int)) Int (ite (= x1283 x1302) 1 (x1425 x1283)))
(define-fun x435 ((x1283 Int)) Int (ite (= 128 x1283) x427 (x549 x1283)))
(define-fun x263 ((x1283 Int)) Int (ite (= x1283 160) x1382 (x435 x1283)))
(define-fun x160 ((x1283 Int)) Int (ite (= 192 x1283) x282 (x263 x1283)))
(define-fun x995 ((x1283 Int)) Int (ite (= x1283 224) x206 (x160 x1283)))
(define-fun x600 ((x1283 Int)) Int (ite (= x1283 256) x924 (x995 x1283)))
(define-fun x986 ((x1283 Int)) Int (ite (= x1283 0) x1119 (x685 x1283)))
(define-fun x184 ((x1283 Int)) Int (ite (= x1283 32) x905 (x986 x1283)))
(define-fun x878 ((x1283 Int)) Int (ite (= 64 x1283) x1263 (x184 x1283)))
(define-fun x1000 ((x1283 Int)) Int (ite (= 96 x1283) x347 (x878 x1283)))
(define-fun x1665 ((x1283 Int)) Int (ite (= 128 x1283) x1018 (x1000 x1283)))
(define-fun x135 ((x1283 Int)) Int (ite (= x1283 128) x427 (x479 x1283)))
(define-fun x247 ((x1283 Int)) Int (ite (= 160 x1283) x1044 (x135 x1283)))
(define-fun x378 ((x1283 Int)) Int (ite (= x1283 192) x282 (x247 x1283)))
(define-fun x306 ((x1283 Int)) Int (ite (= x1283 224) x206 (x378 x1283)))
(define-fun x419 ((x1283 Int)) Int (ite (= 256 x1283) x924 (x306 x1283)))
(define-fun x811 ((x1283 Int)) Int (ite (= x1283 0) x1146 (x1674 x1283)))
(define-fun x1238 ((x1283 Int)) Int (ite (= x1283 32) x1705 (x811 x1283)))
(define-fun x133 ((x1283 Int)) Int (ite (= 64 x1283) x414 (x1238 x1283)))
(define-fun x125 ((x1283 Int)) Int (ite (= x1283 96) x1226 (x133 x1283)))
(define-fun x1096 ((x1283 Int)) Int (ite (= x1283 128) x318 (x125 x1283)))
(define-fun x1043 ((x1283 x57)) Int (ite (= x1514 x1283) x1660 (x733 x1283)))
(define-fun x672 ((x1283 Int)) Int (ite (= x1283 128) x714 (x810 x1283)))
(define-fun x1326 ((x1283 Int)) Int (ite (= x1283 224) x740 (x572 x1283)))
(define-fun x892 ((x1283 Int)) Int (ite (= 256 x1283) x20 (x1240 x1283)))
(define-fun x1140 ((x1283 Int)) Int (ite (= 128 x1283) x836 (x672 x1283)))
(define-fun x244 ((x1283 Int)) Int (ite (= x1283 192) x1429 (x19 x1283)))
(define-fun x327 ((x1283 Int)) Int (ite (= x1283 192) x1551 (x19 x1283)))
(define-fun x902 ((x1283 Int)) Int (ite (and x651 x333 x164) (x327 x1283) (x244 x1283)))
(define-fun x783 ((x1283 Int)) Int (ite (= 160 x1283) x599 (x1592 x1283)))
(define-fun x425 ((x1283 Int)) Int (ite (= x1283 160) x23 (x1592 x1283)))
(define-fun x1671 ((x1283 Int)) Int (ite (and x1336 (not x1579)) (x1181 x1283) (ite x1715 (x1034 x1283) (x432 x1283))))
(define-fun x845 ((x1283 Int)) Int (ite (= x1283 x1364) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1671 x1283)))
(define-fun x1434 ((x1283 Int)) Int (ite (= x1073 x1283) x283 (x845 x1283)))
(define-fun x805 ((x1283 Int)) Int (ite (= x1283 x1170) x1655 (x1434 x1283)))
(define-fun x110 ((x1283 Int)) Int (ite (= 0 x1283) 1 (x222 x1283)))
(define-fun x1174 ((x1283 Int)) Int (ite (= x1283 x1364) 1 (x805 x1283)))
(define-fun x1656 ((x1283 Int)) Int (ite (and x93 x651 x333) (x425 x1283) (x783 x1283)))
(define-fun x1128 ((x1283 x57)) Int (ite (= x1200 x1283) x512 (x661 x1283)))
(define-fun x514 ((x1283 x57)) Int (ite (= x1200 x1283) x879 (x733 x1283)))
(define-fun x622 ((x1283 Int)) Int (ite (= 128 x1283) x621 (x1314 x1283)))
(define-fun x1659 ((x1283 Int)) Int (ite (= 160 x1283) x574 (x622 x1283)))
(define-fun x1088 ((x1283 Int)) Int (ite (= x1283 192) x178 (x1659 x1283)))
(define-fun x730 ((x1283 Int)) Int (ite (= 224 x1283) x525 (x1088 x1283)))
(define-fun x623 ((x1283 Int)) Int (ite (= x1283 256) x1725 (x730 x1283)))
(define-fun x127 ((x1283 Int)) Int (ite (= 0 x1283) x885 (x239 x1283)))
(define-fun x886 ((x1283 Int)) Int (ite (= x1283 32) x389 (x127 x1283)))
(define-fun x182 ((x1283 Int)) Int (ite (= 64 x1283) x684 (x886 x1283)))
(define-fun x180 ((x1283 Int)) Int (ite (= x1283 96) x750 (x182 x1283)))
(define-fun x1400 ((x1283 Int)) Int (ite (= 128 x1283) x9 (x180 x1283)))
(define-fun x1374 ((x1283 Int)) Int (ite (= x1283 128) x621 (x1138 x1283)))
(define-fun x194 ((x1283 Int)) Int (ite (= x1283 160) x8 (x1374 x1283)))
(define-fun x1614 ((x1283 Int)) Int (ite (= x1283 192) x178 (x194 x1283)))
(define-fun x1486 ((x1283 Int)) Int (ite (= x1283 224) x525 (x1614 x1283)))
(define-fun x1499 ((x1283 Int)) Int (ite (= x1283 256) x1725 (x1486 x1283)))
(define-fun x1565 ((x1283 Int)) Int (ite (= 0 x1283) x1231 (x112 x1283)))
(define-fun x991 ((x1283 Int)) Int (ite (= 32 x1283) x1172 (x1565 x1283)))
(define-fun x489 ((x1283 Int)) Int (ite (= x1283 64) x515 (x991 x1283)))
(define-fun x1717 ((x1283 Int)) Int (ite (= 96 x1283) x372 (x489 x1283)))
(define-fun x734 ((x1283 Int)) Int (ite (= 128 x1283) x1649 (x1717 x1283)))
(define-fun x175 ((x1283 Int)) Int (ite (= 128 x1283) x621 (x934 x1283)))
(define-fun x910 ((x1283 Int)) Int (ite (= x1283 160) x1689 (x175 x1283)))
(define-fun x437 ((x1283 Int)) Int (ite (= 192 x1283) x178 (x910 x1283)))
(define-fun x751 ((x1283 Int)) Int (ite (= 224 x1283) x525 (x437 x1283)))
(define-fun x1695 ((x1283 Int)) Int (ite (= 256 x1283) x1725 (x751 x1283)))
(define-fun x36 ((x1283 Int)) Int (ite (= 0 x1283) x1082 (x685 x1283)))
(define-fun x732 ((x1283 Int)) Int (ite (= x1283 32) x655 (x36 x1283)))
(define-fun x1380 ((x1283 Int)) Int (ite (= 64 x1283) x760 (x732 x1283)))
(define-fun x1006 ((x1283 Int)) Int (ite (= x1283 96) x593 (x1380 x1283)))
(define-fun x2 ((x1283 Int)) Int (ite (= x1283 128) x1639 (x1006 x1283)))
(define-fun x215 ((x1283 Int)) Int (ite (= 128 x1283) x621 (x802 x1283)))
(define-fun x746 ((x1283 Int)) Int (ite (= x1283 160) x140 (x215 x1283)))
(define-fun x1386 ((x1283 Int)) Int (ite (= 192 x1283) x178 (x746 x1283)))
(define-fun x532 ((x1283 Int)) Int (ite (= x1283 224) x525 (x1386 x1283)))
(define-fun x1244 ((x1283 Int)) Int (ite (= 256 x1283) x1725 (x532 x1283)))
(define-fun x390 ((x1283 Int)) Int (ite (= x1283 0) x185 (x1674 x1283)))
(define-fun x647 ((x1283 Int)) Int (ite (= 32 x1283) x281 (x390 x1283)))
(define-fun x1726 ((x1283 Int)) Int (ite (= 64 x1283) x1500 (x647 x1283)))
(define-fun x1490 ((x1283 Int)) Int (ite (= 96 x1283) x577 (x1726 x1283)))
(define-fun x694 ((x1283 Int)) Int (ite (= 128 x1283) x1013 (x1490 x1283)))
(define-fun x154 ((x1283 x57)) Int (ite (= x302 x1283) x370 (x578 x1283)))
(define-fun x267 ((x1283 Int)) Int (ite (= 0 x1283) 1 (x119 x1283)))
(define-fun x1094 ((x1283 Int)) Int (ite (= x1302 x1283) 1 (x1425 x1283)))
(define-fun x877 ((x1283 x57)) Int (ite (= x1338 x1283) x1574 (x480 x1283)))
(define-fun x153 ((x1283 Int)) Int (ite (= 0 x1283) 1 (x119 x1283)))
(define-fun x716 ((x1283 Int)) Int (ite (= x1302 x1283) 1 (x1425 x1283)))
(define-fun x1667 ((x1283 Int)) Int (ite (and x1526 x1438) (x1448 x1283) (ite (and x1141 x418) (x716 x1283) (x1094 x1283))))
(define-fun x562 ((x761 Int)) Bool (=> (and (not (= 2348850734 x761)) (not (= 2000660004 x761)) (not (= x761 65535)) (not (= 1000000000000000 x761)) (not (= x761 10141204801825835211973625643007)) (not (= x761 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 1752364190 x761)) (not (= x761 950698303)) (not (= 4272920204 x761)) (not (= 340282366920938463463374607431768211456 x761)) (not (= 3638949393 x761)) (not (= x761 20282409603651670423947251286016)) (not (= 3257672857 x761)) (not (= 1099511627775 x761)) (not (= x761 65536)) (not (= x761 274184521717934524641157099916833587227)) (not (= x761 3075265556)) (not (= 614716962 x761)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x761)) (not (= 1736444767 x761)) (not (= 2325509075 x761)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x761)) (not (= x761 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not (= x761 1558726628)) (not (= x761 2879910238)) (not (= 274184521717934524641157099916833587233 x761)) (not (= 3319015721 x761)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x761)) (not (= x761 2055092157)) (not (= 340282366920938463463374607431768211455 x761)) (not (= x761 2059964113)) (not (= 635583253 x761)) (not (= x761 274184521717934524641157099916833587244)) (not (= 1168994686 x761)) (not (= 2834295333 x761)) (< 10000 x761) (not (= 480214969 x761)) (not (= x761 18446744073709551615)) (not (= x761 2419208567)) (not (= x761 1208925819614629174706175)) (not (= x761 18446744073709551616)) (not (= 754029363 x761)) (not (= 274184521717934524641157099916833587223 x761)) (not (= 1000000000000000000 x761)) (not (= 274184521717934524641157099916833587231 x761)) (not (= x761 2835717307)) (not (= x761 2514000705)) (not (= x761 2661915226)) (not (= x761 1099511627776)) (not (= 641995544 x761)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x761)) (not (= 2799315671 x761)) (not (= x761 2531764673)) (not (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x761)) (not (= x761 1208925819614629174706176)) (not (= x761 2362581449)) (not (= 1889567281 x761)) (not (= 826074471 x761)) (not (= 274184521717934524641157099916833587235 x761)) (not (= x761 2371715404)) (not (= 2867386960 x761)) (not (= x761 274184521717934524641157099916833587210)) (not (= 170141183460469231731687303715884105727 x761)) (not (= x761 4062139261)) (not (= x761 1461501637330902918203684832716283019655932542975)) (not (= 3253611544 x761)) (not (= 1461501637330902918203684832716283019655932542976 x761)) (not (= 2472862090 x761)) (not (= 20282409603651670423947251286015 x761))) (not ((_ is x342) (x475 x761)))))
(assert (= (x980 (x342 274184521717934524641157099916833587244)) 274184521717934524641157099916833587244))
(assert (= x650 (=> (and (< x591 2661915226) (not (= 2371715404 x591)) (>= 1461501637330902918203684832716283019655932542975 x297) (not (= 2419208567 x591)) (not (= x591 2472862090)) (>= 1461501637330902918203684832716283019655932542975 x86) (<= x1370 1461501637330902918203684832716283019655932542975) (>= x297 0) (= x591 2531764673) (= x64 x1683) (= x86 x64) (= x508 x788) (= 1000000000000000 x77) (not (= 2325509075 x591)) (= x397 (x196 (x475 274184521717934524641157099916833587210))) (= x508 0) (= 1000000000000000 x542) (<= 0 x1370) (>= x86 0) (= x671 x1370) (not (< x591 2325509075)) (> x397 0) (> 3253611544 x591) (not (= 2348850734 x591)) (not (< x591 2059964113))) (=> (and (= x846 (= 1000000000000000 x1151)) x846 (= 1000000000000000 x102)) x921))))
(assert (x686 x1215 x146))
(assert (x495 x1080))
(assert (x495 x1453))
(assert (= (x980 (x475 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x495 x1236))
(assert (x495 x939))
(assert (x562 274184521717934524641157099916833587210))
(assert (= (x475 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x342 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x495 x314))
(assert (x495 x719))
(assert (x1276 x604))
(assert (x448 x1396 x224))
(assert (x495 x315))
(assert (= (x150 x1600) 0))
(assert (= x668 true))
(assert (x495 x1170))
(assert (= x1479 (=> (and (not (> 3253611544 x1085)) (= x1211 x1504) (>= 20282409603651670423947251286015 x772) (< 0 x1535) (>= x772 0) (not (> 2059964113 x1085)) (not (> 3319015721 x1085)) (< x1085 3638949393) (= x1504 (x106 20282409603651670423947251286015 x772)) (= (x196 (x475 274184521717934524641157099916833587210)) x1535) (= 3319015721 x1085) (> 20282409603651670423947251286016 x772)) (=> (and (= x634 (= x1635 x594)) (= (- x983 x1280) x1635) x634 (= x1211 x1280)) x839))))
(assert (= (x475 4272920204) (x342 4272920204)))
(assert (x448 x1095 x1075))
(assert (x495 x18))
(assert (x686 x1345 x402))
(assert (x495 x671))
(assert (x495 x1222))
(assert (x562 274184521717934524641157099916833587233))
(assert (x1276 x715))
(assert (x495 x513))
(assert (= (=> (and (> x697 0) (= (x1474 (+ 36 x1302)) x1462) (= (x1474 (+ x1302 4)) x1148) (= x1554 (x245 (- x1329 x1302))) (= x1329 (x1474 (+ 68 x1302))) (= (x106 1461501637330902918203684832716283019655932542975 x254) x3) (= x1438 (= 274184521717934524641157099916833587231 x575)) (= (x106 1461501637330902918203684832716283019655932542975 x780) x575)) (and (=> (not x1438) x792) (=> (and (= x55 x658) (= (x245 (- x1257 4)) x423) (= 68 x1257) (not (= 826074471 x1709)) (= 274184521717934524641157099916833587210 x277) (= (+ x55 x689) x179) (>= x1157 0) (= 2835717307 x1709) (<= x1022 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1694 1461501637330902918203684832716283019655932542975) (= x1387 (x196 (x475 274184521717934524641157099916833587231))) x1438 (not (< x1257 4)) (not (= 2514000705 x1709)) (= (> x1696 x1022) x1405) (not x1405) (= x1416 (x1227 (x475 274184521717934524641157099916833587210) (x342 1) 0)) (= x1512 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> x1387 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157) (= x869 (x1227 (x475 274184521717934524641157099916833587210) (x342 1) 0)) (= (x1493 x869) x1022) (= x1694 x1423) (= x658 x1696) (= x1157 x689) (= x1157 (x52 x1251)) (not x1068) (= x731 (x245 (- x1022 x1655))) (= x1515 274184521717934524641157099916833587210) (= x3 x1694) (>= x1022 0) (= x951 (x1227 (x475 x1694) (x342 1) 0)) (= 32 x1076) (< (+ x658 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= 1889567281 x1709)) (= (x1227 (x475 x1694) (x342 1) 0) x1251) (= x1068 (or (and (= true (<= x423 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x423 64)) (> x423 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< x1709 826074471)) (= x132 1) (= x1554 x1257)) x30))) x434))
(assert (x495 x959))
(assert (x495 x173))
(assert (x495 x136))
(assert (x495 x250))
(assert (=> (<= x43 10000) (= (x475 x43) (x342 x43))))
(assert (x562 x1047))
(assert (x495 x1698))
(assert (x495 x251))
(assert (x495 x497))
(assert (x1529 x1517 x1289 x1 x316))
(assert (x495 x285))
(assert (x562 x90))
(assert (x495 x801))
(assert (= 754029363 (x980 (x342 754029363))))
(assert (x495 x974))
(assert (= x1660 (x980 (x475 x1660))))
(assert (x1276 x94))
(assert (x495 x1357))
(assert (x495 x9))
(assert (x495 x643))
(assert (x495 x750))
(assert (= (and (not x232) x394) x1570))
(assert (x495 x778))
(assert (x448 x1154 x143))
(assert (x495 x1189))
(assert (= x417 (x980 (x475 x417))))
(assert (x1276 x780))
(assert (x495 x1199))
(assert (x1276 x724))
(assert (x495 x77))
(assert (x495 x1376))
(assert (x495 x1087))
(assert (= (x342 10141204801825835211973625643007) (x475 10141204801825835211973625643007)))
(assert (x495 x1105))
(assert (= (x980 (x475 x848)) x848))
(assert (x495 x860))
(assert (x495 x426))
(assert (= 0 (x1181 x499)))
(assert (x495 x933))
(assert (x495 x1664))
(assert (x495 x659))
(assert (=> (<= x121 10000) (= (x475 x121) (x342 x121))))
(assert (x495 x358))
(assert (= (x980 (x342 2362581449)) 2362581449))
(assert (= x403 (=> (= x1097 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1301) (and (= (<= x1301 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1301 0)))) (and (=> x1097 x972) (=> (and (= x1260 x1575) (not x1097) (= x996 1)) x1485)))))
(assert (x1276 x254))
(assert (x495 x1472))
(assert (x495 x1535))
(assert (= (x980 (x342 340282366920938463463374607431768211455)) 340282366920938463463374607431768211455))
(assert (x495 x519))
(assert (x495 x900))
(assert (x495 x1069))
(assert (= x976 (x980 (x475 x976))))
(assert (not x679))
(assert (x495 x465))
(assert (x1276 20282409603651670423947251286015))
(assert (x495 x23))
(assert (= (x475 2000660004) (x342 2000660004)))
(assert (x495 x1324))
(assert (x495 x1084))
(assert (= (=> (= (= 274184521717934524641157099916833587223 x575) x328) (and (=> (not x328) x1349) (=> (and (not (= 1889567281 x519)) (= x616 274184521717934524641157099916833587210) (= x658 x835) (= x1602 (x1227 (x475 x343) (x342 1) 0)) (>= x1589 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x956) (= x3 x343) (= x1609 x658) (= x956 (x154 x1602)) (>= 1461501637330902918203684832716283019655932542975 x343) (<= x1589 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1392 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x196 (x475 274184521717934524641157099916833587223)) x331) (= (< x1589 x835) x1064) (not (< x1676 4)) (= x876 x956) (= x631 (x1227 (x475 274184521717934524641157099916833587210) (x342 1) 0)) (= x1699 274184521717934524641157099916833587210) (< 0 x331) x328 (= x343 x702) (= (x578 x631) x1589) (not (= 826074471 x519)) (= x990 (x245 (- x1676 4))) (= x132 1) (= x519 2835717307) (= x1192 (+ x876 x1609)) (not (> 826074471 x519)) (= 68 x1676) (not x1064) (= (or (and (= (<= x990 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x990)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x990)) x568) (not (= 2514000705 x519)) (= x1676 x1554) (<= 0 x956) (= (x1227 (x475 274184521717934524641157099916833587210) (x342 1) 0) x302) (= 32 x1076) (= (x245 (- x1589 x1655)) x370) (not x568) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x658 x956))) x30))) x1626))
(assert (= (x342 274184521717934524641157099916833587231) (x475 274184521717934524641157099916833587231)))
(assert (x495 x105))
(assert (x495 x1239))
(assert (x495 x1461))
(assert (x495 x163))
(assert (x495 x861))
(assert (x495 x770))
(assert (x495 x760))
(assert (x495 x627))
(assert (x495 x1435))
(assert (= (x342 2371715404) (x475 2371715404)))
(assert (x495 x1687))
(assert (x495 x356))
(assert (x495 x621))
(assert (x495 x417))
(assert (x495 x836))
(assert (= (x1166 x1284) (ite (and x1513 x1235) (x1344 x1284) (x312 x1284))))
(assert (x495 x944))
(assert (x495 x1639))
(assert (x495 x1164))
(assert (x495 x1325))
(assert (= (x342 4062139261) (x475 4062139261)))
(assert (x495 x848))
(assert (x17 x551))
(assert (x448 x29 x1070))
(assert (x495 x493))
(assert (x495 x220))
(assert (x495 x704))
(assert (x495 x1055))
(assert (x1276 x894))
(assert (x495 x817))
(assert (= (or x1005 (and (not x1579) x1336)) x1446))
(assert (= (x980 (x342 18446744073709551616)) 18446744073709551616))
(assert (= x1398 (x980 (x475 x1398))))
(assert (= (x475 2472862090) (x342 2472862090)))
(assert (x495 x560))
(assert (x495 x1404))
(assert (x495 x1067))
(assert (x495 x935))
(assert (x495 x246))
(assert (x495 x1660))
(assert (x495 x64))
(assert (x1276 x1215))
(assert (= (x432 x1245) (ite (and x1621 x286) (x930 x1245) (x1348 x1245))))
(assert (x448 x6 x931))
(assert (=> (<= x1047 10000) (= (x475 x1047) (x342 x1047))))
(assert (x495 x1477))
(assert (x495 x1245))
(assert (x495 x660))
(assert (x495 x31))
(assert (x495 x922))
(assert (= true x303))
(assert (= (x475 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x342 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x475 2835717307) (x342 2835717307)))
(assert (x1276 x1537))
(assert (x495 x104))
(assert (x1276 x512))
(assert (x495 x205))
(assert (=> (>= 10000 x90) (= (x342 x90) (x475 x90))))
(assert (x495 x338))
(assert (x495 x1134))
(assert (x495 x365))
(assert (x1601 x1254 x588))
(assert (= (x342 2799315671) (x475 2799315671)))
(assert (x495 x1061))
(assert (= (=> (and (> x1233 0) (= x183 3319015721) (> 3638949393 x183) (= x45 x1074) (<= 0 x865) (= (x106 20282409603651670423947251286015 x865) x45) (not (< x183 3253611544)) (not (< x183 2059964113)) (< x865 20282409603651670423947251286016) (= (x196 (x475 274184521717934524641157099916833587210)) x1233) (>= 20282409603651670423947251286015 x865) (not (< x183 3319015721))) x1091) x635))
(assert (x495 x542))
(assert (x495 x1327))
(assert (= (x980 (x342 2055092157)) 2055092157))
(assert (= true x712))
(assert (x495 x838))
(assert (x1276 x1154))
(assert (x448 x1655 x891))
(assert (=> (>= 10000 x737) (= (x475 x737) (x342 x737))))
(assert (x495 x1180))
(assert (= x1136 x668))
(assert (x1276 x469))
(assert (x495 x854))
(assert (x495 x281))
(assert (x495 x1646))
(assert (x448 x1625 x1642))
(assert (x1680 x1032 x1454))
(assert (x495 x779))
(assert (x495 x615))
(assert (x495 x494))
(assert (x495 x1454))
(assert (x495 x91))
(assert (x495 x1559))
(assert (= (=> (and (<= 0 x703) (>= x1441 0) (= x753 1000000000000000) (< x747 3253611544) (= 1000000000000000 x1371) (not (< x747 2325509075)) (not (= x747 2325509075)) (= x1683 x38) (= (x196 (x475 274184521717934524641157099916833587210)) x449) (not (= x747 2348850734)) (= 0 x1516) (not (= x747 2419208567)) (<= x703 1461501637330902918203684832716283019655932542975) (not (= x747 2371715404)) (<= 0 x1610) (<= x1441 1461501637330902918203684832716283019655932542975) (= x747 2531764673) (<= x1610 1461501637330902918203684832716283019655932542975) (not (> 2059964113 x747)) (= x38 x1610) (< x747 2661915226) (= x788 x1516) (> x449 0) (= x671 x1441) (not (= x747 2472862090))) (=> (and (= 1000000000000000 x141) x948 (= (= x510 1000000000000000) x948)) x1361)) x624))
(assert (x495 x1027))
(assert (= x1652 x1421))
(assert (x495 x715))
(assert (x495 x1555))
(assert (x495 x885))
(assert (x495 x844))
(assert (x1276 x1467))
(assert (x1276 x70))
(assert (x495 x528))
(assert (= (x980 (x475 x1453)) x1453))
(assert (x495 x1575))
(assert (= (x980 (x342 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x448 x512 x293))
(assert (x495 x1406))
(assert (x495 x1323))
(assert (x1529 x721 x1098 x166 x955))
(assert (x495 x890))
(assert (x1036 x157 x1679))
(assert (x17 x1195))
(assert (=> (<= x1306 10000) (= (x475 x1306) (x342 x1306))))
(assert (x495 x546))
(assert (x495 x1389))
(assert (= (x342 115792089237316195423570985008687907853269984655499359237631748795939503996928) (x475 115792089237316195423570985008687907853269984655499359237631748795939503996928)))
(assert (= 1000000000000000 (x980 (x342 1000000000000000))))
(assert (x495 x529))
(assert (= x1065 x1184))
(assert (x495 x633))
(assert (x207 x1204 x209))
(assert (x448 x496 x1437))
(assert (x495 x894))
(assert (x495 x759))
(assert (x495 x211))
(assert (x495 x1377))
(assert (= (=> (and (= (or (and (< x561 0) (= true (<= x561 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x561)) x852) (= (ite x967 1 0) x996) (= x967 (not x852)) (= x1575 x348)) x1485) x1274))
(assert (x495 x1271))
(assert (x495 x223))
(assert (= 18446744073709551615 (x980 (x342 18446744073709551615))))
(assert (x495 x753))
(assert (x495 x593))
(assert (= (x1166 128) (ite (and x1513 x1235) (x1344 128) (x312 128))))
(assert (= x789 (x1592 160)))
(assert (x495 x775))
(assert (x495 x1429))
(assert (= x921 (=> (and (>= 1461501637330902918203684832716283019655932542975 x1180) (not (= x1527 1558726628)) (not (= 1752364190 x1527)) (= x1527 2055092157) (<= x1347 1461501637330902918203684832716283019655932542975) (not (< x1527 1168994686)) (not (> 950698303 x1527)) (>= x1230 0) (not (= 2000660004 x1527)) (< x1089 18446744073709551616) (>= x1180 0) (= x609 (x196 (x475 274184521717934524641157099916833587210))) (= x573 (x106 18446744073709551615 x1089)) (= x671 x1230) (not (= 1736444767 x1527)) (= x788 x866) (> 2059964113 x1527) (not (> 1558726628 x1527)) (= x952 x573) (= x1683 x758) (<= 0 x1347) (<= 0 x1089) (= x866 0) (> x609 0) (>= 18446744073709551615 x1089) (<= x1230 1461501637330902918203684832716283019655932542975) (= x758 x1180)) (=> (= x952 x510) x624))))
(assert (x1276 x1396))
(assert (x495 x1705))
(assert (= (ite (and x1621 x286) (x930 288) (x1348 288)) (x432 288)))
(assert (x495 x1385))
(assert (x495 x381))
(assert (x207 x115 x586))
(assert (x448 x1214 x871))
(assert (x1680 x100 x526))
(assert (x495 x1003))
(assert (x495 x1399))
(assert (x495 x1119))
(assert (x495 x8))
(assert (x495 x54))
(assert (x495 x382))
(assert (x495 x923))
(assert (x495 x1566))
(assert (x1276 x961))
(assert (x562 x1534))
(assert (x495 x905))
(assert (x495 x638))
(assert (x495 x904))
(assert (= (x432 416) (ite (and x1621 x286) (x930 416) (x1348 416))))
(assert (x448 x979 x969))
(assert (x448 x653 x118))
(assert (x495 x341))
(assert (x17 x529))
(assert (x495 x822))
(assert (x1036 x720 x918))
(assert (x495 x1040))
(assert (x495 x1725))
(assert (x1276 x468))
(assert (= (x1166 256) (ite (and x1513 x1235) (x1344 256) (x312 256))))
(assert (x495 x102))
(assert (x495 x509))
(assert (x495 x1062))
(assert (x495 x283))
(assert (=> (>= 10000 x1160) (= (x342 x1160) (x475 x1160))))
(assert (x495 x1099))
(assert (= x839 (=> (and (>= x1661 0) (= 1889567281 x781) (not (< x781 826074471)) (> x137 0) (= x1661 (x1493 x701)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1661) (= (x196 (x475 274184521717934524641157099916833587231)) x137) (= x701 (x1227 (x475 274184521717934524641157099916833587210) (x342 1) 0)) (= x98 x1661) (= 274184521717934524641157099916833587210 x1640) (not (= 826074471 x781))) (=> (= x276 x98) x841))))
(assert (x495 x254))
(assert (x495 x230))
(assert (x495 x1426))
(assert (x495 x1301))
(assert (x495 x1288))
(assert (x495 x1063))
(assert (x495 x619))
(assert (x495 x1081))
(assert (= (or (and x1235 x1513) (and x709 x1585)) x1372))
(assert (= (=> (and (= x1284 (x1474 (+ x235 288))) (= 0 x858) (<= x278 1208925819614629174706175) (= x850 (x106 18446744073709551615 x1130)) (= (* x1268 x1369) x155) (not (> x598 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x227 x494) (= (x1474 (+ 64 x914)) x1115) (= (x245 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x766)) x1223) (= (and (= true (<= x426 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x426 0)) x899) (= x844 x365) (= x284 (x106 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1466)) (= x971 (x245 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x766))) (= (x1586 x1390) x727) (= (div x756 x850) x1268) (= x598 (div x155 1000000000000000000)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1268 x1369)) (= (x106 x100 x526) x858) (= x483 (not x899)) (= (ite (or (and (= (<= x766 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x766 0)) (> x766 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0) x923) (<= x727 1208925819614629174706175) (= x526 (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x598) (> x971 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x598 x971) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x598) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x971)))) 1 0)) (< 0 x850) (= x100 (ite (not x690) 1 0)) (= x546 (x1474 (+ 64 x329))) (not (= 0 x1675)) (= x1466 (x1474 (+ x1035 31))) (not (ite x483 x483 (and (> x426 170141183460469231731687303715884105727) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x426) true)))) (= (mod (* x18 x954) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x756) (= (x1474 (+ x598 x766)) x494) (= x365 (x1474 (+ x329 x284))) (= x1130 (x1147 x1115)) (= x262 0) (= x690 (or (and (< x766 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x766))) (> x766 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1369 (x106 18446744073709551615 x115)) (= (x1474 (+ 64 x546)) x1390) (= x426 (x1586 x1284)) (= x1571 (ite (or (and (< x598 x1223) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1223) (<= x598 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x598) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1223))) 1 0)) (= (x1586 x329) x278) (= (x106 x923 x1571) x262) (= x531 (x1474 (+ 64 x1285))) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1035) (and (< x1035 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1035) true)))) (= (x106 340282366920938463463374607431768211455 x426) x18) (= x115 (x1234 x531))) x1528) x840))
(assert (x495 x1153))
(assert (x495 x1266))
(assert (= (x980 (x342 2472862090)) 2472862090))
(assert (x495 x491))
(assert (x1276 x1010))
(assert (x448 x551 x1185))
(assert (x495 x1719))
(assert (x495 x862))
(assert (x495 x331))
(assert (x495 x1685))
(assert (x495 x1001))
(assert (x495 x1617))
(assert (= x737 (x980 (x475 x737))))
(assert (x495 x1175))
(assert (x495 x468))
(assert (= x1622 (=> (and (= x333 (= x790 274184521717934524641157099916833587231)) (= (x106 1461501637330902918203684832716283019655932542975 x780) x790) (< 0 x1678)) (and (=> (and (= (or (and (> 0 (x1596 x29)) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1596 x29)) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1596 x29))) x1460) (or (and (<= 0 x599) (not x93) (> 18446744073709551616 x599) (>= 18446744073709551615 x599)) (and (<= x23 18446744073709551615) (> 18446744073709551616 x23) (<= 0 x23) x93)) (<= x1360 18446744073709551615) (= (* x1322 x1613) x187) (= x912 (div x187 1000000000000000)) (= 128 x1546) (= x68 (x106 20282409603651670423947251286015 x104)) (or (and (< 0 x81) (= x14 (div x1243 x81)) (= (x245 (- x599 x12)) x587) (= x1243 (div x1014 x1563)) (< (+ x806 x14) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x599 18446744073709551616) (< 0 x1563) (= x14 x454) (= x1014 (* x1376 x1171)) (= x1429 (+ x35 x454)) (<= x1429 18446744073709551615) (= x12 (x106 18446744073709551615 x894)) (= x35 x806) (<= x599 18446744073709551615) (= x1204 (x19 192)) (not x164) (= (x1592 160) x894) (= x1376 (x106 18446744073709551615 x587)) (>= x599 0) (not (> x12 x599)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1171 x1376)) (not (> x14 18446744073709551615)) (= (x106 20282409603651670423947251286015 x6) x1171) (= x806 (x106 18446744073709551615 x1204))) (and (= (x106 18446744073709551615 x1591) x230) (= x1328 (x106 20282409603651670423947251286015 x961)) (= x94 (x245 (- x23 x230))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x173 x707)) (= x707 x1475) (not (= x736 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x707 (x106 18446744073709551615 x1246)) (not (> x173 18446744073709551615)) (<= 0 x23) (= x1591 (x1592 160)) (<= x23 18446744073709551615) (not (> x230 x23)) (< (* x1328 x1631) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1352 x173) (= x116 (div x958 x1563)) (= (x245 (- 0 x736)) x961) (= (x1596 x6) x736) (< x23 18446744073709551616) (> x1563 0) (= (x106 18446744073709551615 x94) x1631) (= x173 (div x116 x81)) (= (* x1631 x1328) x958) (<= x1551 18446744073709551615) (< 0 x81) (= (x19 192) x1246) (= x1551 (+ x1475 x1352)) x164)) (= (x106 20282409603651670423947251286015 x1272) x913) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x557 1000000000000000)) (= (* x1360 x772) x1478) (<= 0 x1304) (<= x638 18446744073709551615) (= x1272 (x245 (- x1655 x68))) (= (x1596 x653) x836) (>= 20282409603651670423947251286015 x557) (= (x106 x1315 x469) x1175) (= x469 (ite (or (and (= (<= x1521 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1189)) (< x1189 x1521)) (and (> x1189 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1521 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= x384 (x106 20282409603651670423947251286015 x234)) (= x29 (x245 (- x1521 x203))) (>= x1322 0) (= (div x1632 x1322) x604) (= (ite (or (and (< x1521 x138) (= (<= x138 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1521 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x138 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1521))) 1 0) x1483) (= x638 (x566 x1568)) (>= x740 0) (= (x106 20282409603651670423947251286015 x604) x168) (<= 0 x1360) (< x638 18446744073709551616) (= (* 1000000000000000 x557) x1279) (= (x733 x1568) x740) (>= x20 0) (< (+ x384 x913) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1613 0) (= 0 x1175) (= (x1227 (x475 x261) (x342 5) 0) x1568) (= x987 (ite (not x1707) 1 0)) (= (and (> (x1596 x1396) 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1596 x1396)))) x691) (> 1099511627776 x1183) (or (and (= x599 x704) (= x1360 x1089) (not x981) (= x1333 x23) (= x759 x1322)) (and (= x599 x1187) (>= 18446744073709551615 x1089) (= x1458 x313) (= x287 (* x776 x759)) (< x759 18446744073709551616) (<= x1613 20282409603651670423947251286015) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x313 x1089)) (= 0 x1719) (= x786 (ite (not x520) 1 0)) (= (* x772 x1089) x710) (<= x772 20282409603651670423947251286015) (not (> x1385 18446744073709551615)) (>= 20282409603651670423947251286015 x772) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x759 x776)) (<= 0 x772) (or (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x356 x1255)) (= x1252 (div x888 1000000000000000000)) (= (+ x1713 x1684) x1648) (< (+ x1648 x1252) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1648 x123) (= x888 (* x1027 x1101)) (not (> x1225 18446744073709551615)) (= x1519 (div x713 1000000000000000000)) (= x1519 x1684) (not (> x1255 x211)) (= x364 x1252) (< (+ x1519 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x1255 x356) x713) x829 (= x1225 (+ x123 x364)) (= x387 x1713) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1027 x1101)) (= x1101 (x245 (- x211 x1255))) (= x1271 x1225)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x356 x211)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1477 x387)) (not x829) (= (+ x444 x897) x808) (not (< 18446744073709551615 x808)) (= x1271 x808) (= (div x544 1000000000000000000) x1477) (= x897 x387) (= (* x211 x356) x544) (= x1477 x444))) (= x1719 (x106 x1629 x1209)) (= (= x1045 0) x83) (or (and x83 (= 0 x211)) (and (not x83) (= x1055 x211) (= (* x785 1000000000000000000) x1444) (= x1055 (div x1444 x1045)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x785)))) (< x759 18446744073709551616) (<= x830 18446744073709551615) (= x1089 x571) (> 18446744073709551616 x759) (>= x1613 0) (= (* x31 x1063) x864) (= (ite (> x759 x1281) 1 0) x715) (= (div x1186 1000000000000000) x1214) (= x1095 (div x576 1000000000000000)) (= x1080 (div x864 1000000000000000000)) (= (x106 20282409603651670423947251286015 x1069) x1377) (or (and (= x1187 x704) x319) (and (= (* x324 x919) x629) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x862 x165)) (<= 0 x1613) (= x765 x704) (= (x106 18446744073709551615 x416) x465) (<= x1613 20282409603651670423947251286015) (= x629 x165) (not (< 18446744073709551615 x1646)) (= (div x649 x1613) x1646) (= x416 (+ x765 x1644)) (= (* x862 x165) x649) (>= x704 0) (<= x416 18446744073709551615) (< x704 18446744073709551616) (< 0 x1613) (= x1644 x1646) (> 20282409603651670423947251286016 x1613) (< (+ x1646 x704) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1187 x860) (>= 18446744073709551615 x704) (= x860 (x106 18446744073709551615 x416)) (< (* x919 x324) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x319))) (< x1613 20282409603651670423947251286016) (= (x106 18446744073709551615 x830) x1217) (<= x1089 18446744073709551615) (= x1069 (div x710 1000000000000000)) (= x1186 (* x1089 x772)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x772) x633) (= (= 0 x772) x813) (= (x106 20282409603651670423947251286015 x1015) x54) (< x772 20282409603651670423947251286016) (<= x1613 20282409603651670423947251286015) (< x1613 20282409603651670423947251286016) (<= x772 20282409603651670423947251286015) (= x1385 x682) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1613) x1281) (< (* x31 x1063) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1089 0) (or (and (= x1721 x1063) (not x1469) (= x1468 (* 1000000000000000000 x1377)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x1377)) (= x1721 (div x1468 x54))) (and x1469 (= 0 x1063))) (= x445 x759) (or (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x387 x219)) (= x1603 (* x291 x1080)) (< (* x1255 x356) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1657 x219) (= x978 x1431) (= (div x1603 1000000000000000000) x1431) (< (* x1027 x1203) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (< 18446744073709551615 x1431)) (= x1673 x387) (= (div x1509 1000000000000000000) x1317) (= x1317 x1415) (= x1203 (x245 (- x1063 x1255))) (= x1633 x794) (= (div x1693 1000000000000000000) x219) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x291 x1080)) (= x1693 (* x1255 x356)) (= (+ x1415 x1633) x291) (= (* x1203 x1027) x1509) (= x794 (+ x1673 x1657)) x726 (< (+ x794 x1317) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (< x1063 x1255))) (and (= x978 x380) (not x726) (= x1616 (* x1343 x1080)) (= (+ x523 x997) x1343) (= (div x1616 1000000000000000000) x380) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1343 x1080)) (= (* x1063 x356) x1092) (< (* x1063 x356) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x523 x387) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1135 x387)) (= x1135 (div x1092 1000000000000000000)) (= x1135 x997) (not (> x380 18446744073709551615)))) (= x520 (= 0 x1613)) (= (+ x571 x682) x830) (<= x1613 20282409603651670423947251286015) (= x1182 x681) (<= x46 18446744073709551615) (= x31 (x245 (- 1000000000000000000 x1711))) (>= 18446744073709551615 x759) (> 20282409603651670423947251286016 x772) (<= 0 x759) (= (< x1613 x819) x319) (= (x106 x786 x715) x368) (= (x106 18446744073709551615 x46) x904) (<= 0 x1089) (<= 0 x759) (>= 18446744073709551615 x1089) (>= x759 0) (or (and (= x1071 x1507) (= x1727 x1242) (> 18446744073709551616 x1333) (= x1242 (div x225 x772)) (not (< 18446744073709551615 x1242)) (>= 18446744073709551615 x1333) (= x1630 (x106 18446744073709551615 x1164)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x862 x1071)) (= (* x919 x673) x1507) (= (* x1071 x862) x225) (> x772 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1333 x1242)) (>= 20282409603651670423947251286015 x772) (<= 0 x772) (< (* x673 x919) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x197 x619) (>= x1333 0) (>= 18446744073709551615 x1164) (= x820 x1333) (< x772 20282409603651670423947251286016) (= (+ x1727 x820) x1164) (not x1651) (= x197 (x106 18446744073709551615 x1164))) (and x1651 (= x619 x1333))) (= (* x759 x1613) x576) (= x776 x195) (> 20282409603651670423947251286016 x772) (= x1360 x1217) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x759 x1182)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1385 x1089)) (>= 18446744073709551615 x759) (> 18446744073709551616 x1089) (<= x1089 18446744073709551615) (>= 18446744073709551615 x759) (<= 0 x1613) (>= x1089 0) (= x785 (x106 20282409603651670423947251286015 x1214)) (<= 0 x772) (= x726 (< x1255 x1063)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x759 x1613)) (> 18446744073709551616 x759) (= (* x313 x1089) x856) (= (* x978 x919) x195) (>= x1613 0) (= x829 (< x1255 x211)) (= (= x54 0) x1469) (not (> x1711 1000000000000000000)) (< (* x1271 x919) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1385 (div x856 1000000000000000000)) (= x1522 (x106 18446744073709551615 x46)) (<= 0 x1089) (= x1458 (* x1271 x919)) (<= 0 x772) (>= 18446744073709551615 x759) (= x1629 (ite (not x813) 1 0)) (<= 0 x759) (< x1089 18446744073709551616) (> 18446744073709551616 x1089) (= (< x772 x819) x1651) (= x1182 (div x287 1000000000000000000)) (> 20282409603651670423947251286016 x1613) x981 (= (x106 20282409603651670423947251286015 x1095) x1045) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x772 x1089)) (= x1410 (x106 18446744073709551615 x830)) (= (div x804 1000000000000000) x1015) (> 18446744073709551616 x1089) (= x1322 x904) (= x1209 (ite (< x633 x1089) 1 0)) (< (* x919 x978) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 0 x368) (= (* x1613 x759) x804) (not (< 18446744073709551615 x1182)) (= x46 (+ x681 x445)) (= x23 x619))) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1596 x6)) true) (< (x1596 x6) 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1596 x6))) x164) (>= 18446744073709551615 x1322) (> 18446744073709551616 x1360) (< x772 20282409603651670423947251286016) (= x203 (x1596 x1655)) (or (and (not x691) (= 0 x104)) (and (not (or (and (< x1179 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1179) true)) (> x1179 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x691 (= x104 x1559) (= (ite (< x1131 x658) x1396 x1655) x1559) (= x1131 (x106 20282409603651670423947251286015 x1396)) (= x1179 (x1596 x1396)))) (> 1099511627776 x1304) (>= x1360 0) (= x1470 (or (> (x1596 x1537) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1596 x1537)) true) (< (x1596 x1537) 0)))) (> x1322 0) (> 20282409603651670423947251286016 x1613) (>= x789 0) (not (< x658 x68)) (<= 0 x1322) (= x981 (< 0 x919)) (= (x106 20282409603651670423947251286015 x604) x775) (not (> x749 x424)) (>= 18446744073709551615 x789) (> 256 x20) (= (x1474 (+ x203 115792089237316195423570985008687907853269984655499359237631748795939503996928)) x138) (<= x257 20282409603651670423947251286015) (>= 20282409603651670423947251286015 x1613) (= x1189 (x1474 (+ x203 10141204801825835211973625643007))) (= x1443 (x106 20282409603651670423947251286015 x1114)) (>= 18446744073709551615 x1360) (>= x772 0) (= x1588 0) (= (x106 1099511627775 x1239) x919) (<= x740 65535) (> 18446744073709551616 x789) (= x384 x1296) (not (< 10141204801825835211973625643007 x658)) (= (ite (or (> x203 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x203)) (< x203 0))) 1 0) x1315) (> 20282409603651670423947251286016 x257) (= x1435 (x106 20282409603651670423947251286015 x979)) (<= x20 255) (<= 0 x257) (>= 20282409603651670423947251286015 x772) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000 x1443)) (= x103 x913) (= x20 (x362 x1568)) (= (x106 x987 x1483) x1588) (= x979 (div x1279 x1360)) (= x93 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1596 x653)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1596 x653)) true) (< (x1596 x653) 0)))) (= x1537 (x672 128)) (= (x245 (- x665 x1304)) x1239) (= (* x1443 1000000000000000) x1632) (or (and (= x1566 x1396) (> 18446744073709551616 x1360) (not (> x1261 10141204801825835211973625643007)) (not (or (and (> 0 x1236) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1236) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1236))) (= x1261 (x106 20282409603651670423947251286015 x1206)) (= (x1596 x1206) x177) x1470 (not (= x242 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x1206 (div x534 1000000000000000)) (= (x245 (- 0 x177)) x1566) (<= x1360 18446744073709551615) (= x534 (* x1360 x191)) (= x1236 (x245 (- 0 x242))) (not (= x177 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (< (* x1360 x191) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x106 20282409603651670423947251286015 x1236) x191) (<= 0 x1360) (= x242 (x1596 x1537))) (and (< x1322 18446744073709551616) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1716) (and (= (<= x1716 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1716 0)))) (= (x106 20282409603651670423947251286015 x1537) x1365) (= (x106 20282409603651670423947251286015 x320) x1494) (= x1716 (x1596 x1537)) (not (> x1494 10141204801825835211973625643007)) (= x320 x1396) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1322 x1365)) (<= 0 x1322) (>= 18446744073709551615 x1322) (= x320 (div x407 1000000000000000)) (= (* x1365 x1322) x407) (not x1470))) (= x1707 (or (and (> 0 x203) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x203) true)) (> x203 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x740 65536) (>= x638 0) (= x257 (x661 x1568)) (= x1521 (x1596 x1396)) (= (x672 128) x6) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1322 x1613)) (= (x106 20282409603651670423947251286015 x979) x728) (= x234 (div x1478 1000000000000000)) (not (< x1183 x1304)) (= x1114 (x245 (- x424 x749))) (<= x1304 1099511627775) (= x749 (x106 20282409603651670423947251286015 x104)) (< 0 x1360) (>= 18446744073709551615 x1322) (or (and x1460 (not (= x982 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x963) true) (> 0 x963)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x963))) (= x152 (* x1270 1000000000000000)) (= (x245 (- 0 x982)) x963) (= x982 (x1596 x29)) (< 0 x1360) (not (> x643 10141204801825835211973625643007)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000 x1270)) (= x653 x584) (= x584 (x245 (- 0 x861))) (= x643 (x106 20282409603651670423947251286015 x496)) (>= 18446744073709551615 x1360) (= (div x152 x1360) x496) (> 18446744073709551616 x1360) (= (x106 20282409603651670423947251286015 x963) x1270) (<= 0 x1360) (= (x1596 x496) x861) (not (= x861 115792089237316195423570985008687907853269984655499359237631748795939503996928))) (and (> x1322 0) (= (* 1000000000000000 x1290) x1150) (>= x1322 0) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1265) (and (> 0 x1265) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1265))))) (= x653 x1099) (<= x1322 18446744073709551615) (= (div x1150 x1322) x1099) (= (x106 20282409603651670423947251286015 x29) x1290) (not x1460) (not (> x1105 10141204801825835211973625643007)) (= x1105 (x106 20282409603651670423947251286015 x1099)) (> 18446744073709551616 x1322) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1290 1000000000000000)) (= (x1596 x29) x1265))) (not (< 20282409603651670423947251286015 x658)) (= x789 (x548 x1568)) (< (* x772 x1360) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x106 20282409603651670423947251286015 x912) x424) (> 18446744073709551616 x1322) (= x261 (x106 1461501637330902918203684832716283019655932542975 x1067)) (> 18446744073709551616 x1322) (= x714 (x1596 x257)) x333 (> 18446744073709551616 x1360) (= x557 (+ x103 x1296))) x618) (=> (and (>= x1542 0) (< x1542 20282409603651670423947251286016) (>= x1426 0) (= (x1227 (x475 x847) (x342 12) 0) x1548) (= (x245 (- x522 x1655)) x614) (= x848 (x106 1461501637330902918203684832716283019655932542975 x1067)) (= x1258 (not x603)) (= x533 x612) (= (x245 (- x1426 x1655)) x683) (= x723 (not x1584)) (= x27 (x1227 (x475 x214) (x342 5) 0)) (<= x1426 340282366920938463463374607431768211455) (= (x106 1461501637330902918203684832716283019655932542975 x780) x121) (< x1160 65536) (>= 340282366920938463463374607431768211455 x533) (= x310 x470) (= (x106 1461501637330902918203684832716283019655932542975 x1067) x1534) (= x453 x90) (<= x1160 65535) (= x1453 (x106 1461501637330902918203684832716283019655932542975 x780)) (= (x1227 (x475 x1398) (x342 6) 0) x488) (= x556 (x106 340282366920938463463374607431768211455 x614)) (>= 65535 x1660) (= x214 (x106 1461501637330902918203684832716283019655932542975 x1067)) (>= x1660 0) (= (or (> x447 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x447) (= true (<= x447 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x413) (= (x1227 (x475 x1081) x771 0) x1480) (= x451 (ite (= 0 x1426) (not (= 0 (x106 340282366920938463463374607431768211455 x683))) (= 0 x1426))) (<= x522 340282366920938463463374607431768211455) (= x1628 (x1227 (x475 x1306) x1161 0)) (= (- x565 x612) x294) (= (x661 x824) x1542) (= (x1227 (x475 x1534) (x342 5) 0) x824) (< x1660 65536) (>= 20282409603651670423947251286015 x1542) (= x90 (x106 1461501637330902918203684832716283019655932542975 x780)) (= x1306 (x106 1461501637330902918203684832716283019655932542975 x780)) (= x976 (x106 1461501637330902918203684832716283019655932542975 x780)) (= x1584 (= 0 x1587)) (< x847 65536) (= x1160 (x1043 x27)) (= (x1227 (x475 x121) (x342 2) 0) x537) (= x533 (x159 x773)) (= (x867 x453) x565) (< x1253 256) (<= 0 x533) (= (x106 1461501637330902918203684832716283019655932542975 x1067) x1398) (= (x1227 (x475 x976) x113 0) x237) (= (x1596 x1542) x447) (= (x106 1461501637330902918203684832716283019655932542975 x1067) x59) (>= 255 x1253) (= (x1227 (x475 x90) x488 0) x773) (<= 0 x1160) (= x1161 (x1227 (x475 x843) (x342 6) 0)) (< x1426 340282366920938463463374607431768211456) (= x1452 (x1227 (x475 x848) (x342 5) 0)) (= x1514 (x1227 (x475 x59) (x342 5) 0)) (or (and (= x505 (x245 (- 0 x559))) (<= x1089 18446744073709551615) (= x1625 (x245 (- 0 x447))) (= (* x1089 x473) x1598) (= (div x1598 1000000000000000) x551) (>= x1089 0) (not (or (> x1625 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1625)) (> 0 x1625)))) (< x1089 18446744073709551616) (not (= x559 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (x106 20282409603651670423947251286015 x551) x516) (not (= x447 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x559 (x1596 x551)) (< (* x473 x1089) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x505 x529) x413 (= (x106 20282409603651670423947251286015 x1625) x473) (not (> x516 10141204801825835211973625643007))) (and (> 18446744073709551616 x759) (= x722 (x106 20282409603651670423947251286015 x447)) (= x285 (div x1484 1000000000000000)) (>= 18446744073709551615 x759) (>= x759 0) (= (x106 20282409603651670423947251286015 x285) x814) (= x285 x529) (= (* x722 x759) x1484) (< (* x759 x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x413) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x447) (and (< x447 0) (= (<= x447 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (> x814 10141204801825835211973625643007)))) (<= x847 65535) (or (and (= x1587 1) x451) (and (not x451) (= 0 x1587) (= (= x1426 0) x592) (= (not x592) x821) (= (ite x821 (= (x106 340282366920938463463374607431768211455 x683) 0) x821) x1384))) (not x333) (= x1408 x90) (= x310 (x106 340282366920938463463374607431768211455 x683)) (= x603 (= 0 x1253)) (= x522 (x540 x537)) (>= x522 0) (= (x159 x1628) x1426) (not (> x658 340282366920938463463374607431768211455)) (= (x1227 (x475 x1660) (x342 11) 0) x113) (not (< x522 x658)) (= x200 (not x538)) (not (< x1426 x658)) (= (x553 x237) x1253) (= x771 (x1227 (x475 x1453) x1548 0)) (= x843 (x106 1461501637330902918203684832716283019655932542975 x1067)) (= (= 0 x1587) x538) (< x522 340282366920938463463374607431768211456) (= (+ x294 x470) x78) (= (x733 x1452) x847) (= x1081 (ite (not x1320) 1 0)) (<= 0 x847) (= x1660 (x857 x1480)) (<= 0 x1253) (= x1258 x723) (= (not x200) x1320)) x816)))))
(assert (x495 x887))
(assert (= 3319015721 (x980 (x342 3319015721))))
(assert (x495 x834))
(assert (= 0 (x1213 x545)))
(assert (x495 x1159))
(assert (=> (<= x59 10000) (= (x475 x59) (x342 x59))))
(assert (x495 x1319))
(assert (x495 x1157))
(assert (x562 x1003))
(assert (= (x475 3638949393) (x342 3638949393)))
(assert (x495 x1370))
(assert (x495 x1265))
(assert (x495 x1312))
(assert (=> (>= 10000 x1453) (= (x475 x1453) (x342 x1453))))
(assert (x448 x1542 x795))
(assert (x495 x707))
(assert (= x1510 (=> (and (= x1254 (x637 x235)) (>= 1461501637330902918203684832716283019655932542975 x1341) (= (x259 x1637) x1083) (= x692 x1341) (= x1637 (x229 x1202 2)) (> 1461501637330902918203684832716283019655932542976 x1341) (= (x106 1461501637330902918203684832716283019655932542975 x579) x692) (= x938 (x1474 (+ x1704 64))) (= (x229 x606 2) x1295) (= (x1227 (x475 x1040) (x342 6) 0) x1533) (= (x421 x842) x954) (= x322 (x1433 x1202)) (> 1461501637330902918203684832716283019655932542976 x338) (<= x322 1461501637330902918203684832716283019655932542975) (<= 0 x1083) (= (x1227 (x342 0) (x342 10) 0) x1202) (= x914 (x1474 (+ 288 x1061))) (= x1439 0) (<= x882 340282366920938463463374607431768211455) (= x1704 (x1474 (+ 64 x235))) (= x485 (x1492 x1202)) (<= 0 x941) (= (x1474 (+ x122 384)) x235) (= (x106 1461501637330902918203684832716283019655932542975 x1067) x1040) (>= 255 x485) (< x1083 18446744073709551616) (= x1550 (x1474 (+ x1210 64))) (<= x396 18446744073709551615) (>= 1461501637330902918203684832716283019655932542975 x338) (<= 0 x322) (= x120 0) (= x82 (x1474 (+ x1550 64))) (< x322 1461501637330902918203684832716283019655932542976) (< x882 340282366920938463463374607431768211456) (> 256 x485) (> 18446744073709551616 x941) (>= x882 0) (= (x106 1461501637330902918203684832716283019655932542975 x589) x236) (= x1394 (x433 x914)) (= x543 (= x236 274184521717934524641157099916833587235)) (= x678 (x88 x1637)) (= (x666 x1273) x1341) (>= x678 0) (= 0 x335) (= x882 (x569 x1295)) (<= x678 18446744073709551615) (= (x1366 x606) x396) (= x1273 (x1227 (x342 0) (x342 9) 0)) (= (x229 x1202 1) x606) (> 18446744073709551616 x396) (= x903 4) (>= x954 0) (>= 340282366920938463463374607431768211455 x954) (= x329 (x1474 (+ x1061 512))) (>= x1341 0) (= x579 (x433 x1210)) (= (x964 x1285) x589) (= x43 (x106 1461501637330902918203684832716283019655932542975 x1394)) (<= 0 x396) (<= 0 x338) (= x1439 (x106 255 x1254)) (= x1285 (x1474 (+ x235 64))) (<= x941 18446744073709551615) (= x941 (x1058 x1637)) (= x492 (x1474 (+ x938 64))) (= (x1129 x606) x338) (= (x1474 (+ 288 x1061)) x1210) (< x678 18446744073709551616) (> 340282366920938463463374607431768211456 x954) (= x842 (x1227 (x475 x43) x1533 0)) (>= 18446744073709551615 x1083) (= x1247 (x1474 (+ x82 64))) (>= x485 0)) (and (=> (and (= (x1124 192) x15) (= x1718 (x1124 128)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x246) (>= x206 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x282) (<= 0 x427) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1286) (= (x1294 x156) x582) (= x1562 (x1474 (+ x235 352))) (< 0 x1577) (not (> 4 x315)) (= x1035 160) (not (= 2362581449 x659)) (= (x1227 (x475 x665) (x342 1) 0) x156) (= (x1124 256) x63) (= x817 (x1124 160)) (= (x196 (x475 274184521717934524641157099916833587235)) x1577) (= x1406 (x1124 192)) (= x379 (x1474 (+ 320 x235))) (= (x1474 (+ x235 384)) x1599) (= x1675 1) (= (x1227 (x475 x665) (x342 1) 0) x503) (>= 1208925819614629174706175 x427) (= 4 x315) (< 0 x582) (= x903 x315) (< x427 1208925819614629174706176) (<= x924 1208925819614629174706175) (= (x1294 x503) x246) (= 4272920204 x659) (not (= x659 3257672857)) (<= 0 x924) (= (x1124 224) x1110) (not (> 2362581449 x659)) (<= x582 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x249 (x1124 160)) (= (<= x582 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (= (x1474 (+ 288 x235)) x1451) (= x1308 (x1124 224)) x543 (not (= x659 4062139261)) (<= 0 x246) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x206) (= (x1124 256) x1062) (>= x282 0) (< x924 1208925819614629174706176) (>= x582 0) (= (x1124 128) x521)) x840) (=> (not x543) x605)))))
(assert (x495 x1688))
(assert (x562 x1160))
(assert (= (x980 (x342 2834295333)) 2834295333))
(assert (= x1393 (and x1191 (not x793))))
(assert (x495 x1163))
(assert (x495 x1557))
(assert (x495 x476))
(assert (x495 x423))
(assert (x495 x941))
(assert (= (x342 18446744073709551615) (x475 18446744073709551615)))
(assert (x495 x952))
(assert (x1276 x1688))
(assert (x495 x561))
(assert (x495 x1253))
(assert (x495 x1117))
(assert (= x927 (x980 (x475 x927))))
(assert (= (x475 340282366920938463463374607431768211455) (x342 340282366920938463463374607431768211455)))
(assert (x495 x1059))
(assert (x495 x266))
(assert (x495 x1439))
(assert (x495 x1146))
(assert (x495 x1203))
(assert (= x837 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1547) (= (x252 x21) x1547) (= 1889567281 x1541) (> x887 0) (= x1547 x974) (not (> 826074471 x1541)) (<= 0 x1547) (= x1312 274184521717934524641157099916833587210) (= x887 (x196 (x475 274184521717934524641157099916833587231))) (= (x1227 (x475 274184521717934524641157099916833587210) (x342 1) 0) x21) (not (= x1541 826074471))) (=> (= x974 x22) x130))))
(assert (x495 x185))
(assert (= 3075265556 (x980 (x342 3075265556))))
(assert (x562 x927))
(assert (x495 x909))
(assert (= (=> (= x1141 (= 274184521717934524641157099916833587227 x575)) (and (=> (and (= x1076 32) (= x84 x1428) (= x1395 (x1227 (x475 x84) (x342 1) 0)) (= x994 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x245 (- x560 x1655)) x1574) (= (x480 x1634) x560) (= (+ x799 x1078) x1447) (not x1354) (not (> 826074471 x358)) (= x768 (x245 (- x1355 4))) (= 274184521717934524641157099916833587210 x801) (= 1 x132) (= x799 x658) (> x345 0) (= x744 274184521717934524641157099916833587210) (= x1198 x1078) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1198) (= x358 2835717307) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x560) (not (= x358 1889567281)) (= x1354 (< x560 x53)) (not (= x358 2514000705)) (< (+ x1198 x658) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1198) x1141 (= x769 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x768) true) (< x768 64)) (> x768 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x358 826074471)) (= x658 x53) (= x1198 (x877 x1395)) (= x1355 68) (not (> 4 x1355)) (<= 0 x560) (= (x1227 (x475 274184521717934524641157099916833587210) (x342 1) 0) x1338) (= (x1227 (x475 274184521717934524641157099916833587210) (x342 1) 0) x1634) (= x3 x84) (= x1554 x1355) (not x769) (= (x196 (x475 274184521717934524641157099916833587227)) x345) (<= x84 1461501637330902918203684832716283019655932542975)) x30) (=> (not x1141) x1626))) x792))
(assert (x495 x855))
(assert (x1276 x923))
(assert (x17 x1542))
(assert (x495 x559))
(assert (x1276 x1067))
(assert (x495 x555))
(assert (x495 x1121))
(assert (= (x475 3319015721) (x342 3319015721)))
(assert (x495 x124))
(assert (x495 x740))
(assert (x495 x336))
(assert (x495 x275))
(assert (= (ite (and x286 x1621) (x930 320) (x1348 320)) (x432 320)))
(assert (x495 x1527))
(assert (= (x980 (x475 x665)) x665))
(assert (x495 x1464))
(assert (x562 x1694))
(assert (x495 x370))
(assert (x495 x590))
(assert (= 1168994686 (x980 (x342 1168994686))))
(assert (x495 x1051))
(assert (x495 x324))
(assert (x495 x531))
(assert (x495 x1641))
(assert (x686 x579 x346))
(assert (x495 x1042))
(assert (x1601 x1467 x1169))
(assert (= (x475 1000000000000000000) (x342 1000000000000000000)))
(assert (= x84 (x980 (x475 x84))))
(assert (= (x475 1208925819614629174706176) (x342 1208925819614629174706176)))
(assert (=> (>= 10000 x848) (= (x342 x848) (x475 x848))))
(assert (x495 x128))
(assert (= 10141204801825835211973625643007 (x980 (x342 10141204801825835211973625643007))))
(assert (x495 x1267))
(assert (x495 x172))
(assert (x495 x1364))
(assert (= (x980 (x342 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x495 x1589))
(assert (x448 x1569 x443))
(assert (x495 x1353))
(assert (x495 x827))
(assert (x1276 x205))
(assert (x495 x814))
(assert (x495 x89))
(assert (x495 x1285))
(assert (= (x980 (x342 3253611544)) 3253611544))
(assert (x495 x1574))
(assert (x495 x1116))
(assert (x495 x1211))
(assert (x495 x1663))
(assert (x495 x511))
(assert (x1276 x1345))
(assert (=> (>= 10000 x1534) (= (x475 x1534) (x342 x1534))))
(assert (x1276 x115))
(assert (x495 x1718))
(assert (x495 x1287))
(assert (x495 x1132))
(assert (x495 x1443))
(assert (x562 x848))
(assert (= (and x1097 x642) x1137))
(assert (x495 x1512))
(assert (= x1136 x1449))
(assert (x207 x94 x608))
(assert (x495 x1339))
(assert (x495 x357))
(assert (= 2531764673 (x980 (x342 2531764673))))
(assert (x495 x1044))
(assert (x495 x835))
(assert (x495 x14))
(assert (x562 x162))
(assert (x1276 x426))
(assert (= (x475 1168994686) (x342 1168994686)))
(assert (x448 x1069 x268))
(assert (x495 x711))
(assert (x562 x847))
(assert (x495 x809))
(assert (x1276 x720))
(assert (x495 x945))
(assert (= (ite (= x499 x91) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x432 x499)) (x1048 x499)))
(assert (= x1184 x1158))
(assert (x495 x1039))
(assert (x495 x552))
(assert (x495 x573))
(assert (x495 x677))
(assert (= 2348850734 (x980 (x342 2348850734))))
(assert (x495 x96))
(assert (x495 x4))
(assert (x562 274184521717934524641157099916833587227))
(assert (x495 x1417))
(assert (= (x475 1000000000000000) (x342 1000000000000000)))
(assert (x1276 x496))
(assert (= (x980 (x475 274184521717934524641157099916833587235)) 274184521717934524641157099916833587235))
(assert (x562 274184521717934524641157099916833587235))
(assert (x207 x759 x1440))
(assert (x495 x640))
(assert (x495 x470))
(assert (x495 x305))
(assert (x495 x1259))
(assert (x495 x968))
(assert (x495 x38))
(assert (= (or x849 (and x41 (not x1549))) x1715))
(assert (=> (>= 10000 x1003) (= (x342 x1003) (x475 x1003))))
(assert (x562 x827))
(assert (x495 x278))
(assert (x495 x725))
(assert (x495 x270))
(assert (x495 x674))
(assert (= (x980 (x475 x1534)) x1534))
(assert (x495 x1447))
(assert (x1276 x865))
(assert (= (x342 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x475 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x495 x1618))
(assert (x495 x1254))
(assert (x448 x975 x596))
(assert (x448 x463 x317))
(assert (= (x980 (x342 20282409603651670423947251286015)) 20282409603651670423947251286015))
(assert (= (x1181 x1390) 0))
(assert (x495 x1577))
(assert (x495 x492))
(assert (x495 x1496))
(assert (x495 x436))
(assert (x495 x693))
(assert (x495 x665))
(assert (x207 x830 x212))
(assert (x495 x956))
(assert (= x827 (x980 (x475 x827))))
(assert (= (=> (= (= x778 274184521717934524641157099916833587233) x1585) (and (=> (not x1585) x1120) (=> (and (> x341 0) (>= x1725 0) (not (= x144 2362581449)) (= x140 (x1708 x1038)) (<= x178 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1208925819614629174706176 x621) (not (< x1259 4)) (not (= 4062139261 x144)) (not (= x144 3257672857)) (= x185 (x1244 128)) (not (> 2362581449 x144)) (= x1293 (x1227 (x475 x665) (x342 1) 0)) (>= 1208925819614629174706175 x621) (= x459 (x1244 192)) (> 1208925819614629174706176 x1725) (= x1013 (x1244 256)) (= x935 (x1244 160)) (= x1196 1) (>= 1208925819614629174706175 x1725) (= x577 (x1244 224)) (= (x1244 256) x660) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x558) true) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1059) (<= x525 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1723 (x1244 224)) (>= x621 0) (= (x1244 192) x1500) (= x341 (x196 (x475 274184521717934524641157099916833587233))) (<= x140 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1411 (x1244 128)) (>= x558 0) (= x558 (x1708 x1293)) (<= x558 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1038 (x1227 (x475 x665) (x342 1) 0)) (= 4 x1259) x1585 (>= x178 0) (= 160 x1555) (<= 0 x140) (< 0 x558) (= (x1244 160) x281) (= 4 x1259) (>= x525 0) (= x144 4272920204)) x147))) x873))
(assert (x495 x1268))
(assert (x495 x692))
(assert (x495 x724))
(assert (= (x980 (x475 274184521717934524641157099916833587244)) 274184521717934524641157099916833587244))
(assert (= (x475 1889567281) (x342 1889567281)))
(assert (x495 x787))
(assert (= (x980 (x342 1099511627775)) 1099511627775))
(assert (= x1120 true))
(assert (x495 x1678))
(assert (= (and x1137 (not x527)) x394))
(assert (x495 x1004))
(assert (x495 x1430))
(assert (x1276 x234))
(assert (x495 x1182))
(assert (x495 x179))
(assert (x495 x214))
(assert (x495 x1683))
(assert (x495 x149))
(assert (x495 x335))
(assert (x495 x1587))
(assert (x495 x913))
(assert (x495 x453))
(assert (x495 x1095))
(assert (x1276 x463))
(assert (x495 x1522))
(assert (= (=> (and (= x766 (ite (or (= x1049 0) (= x1388 0)) 0 (ite (= (< x1049 57896044618658097711785492504343953926634992332820282019728792003956564819968) (< x1388 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (div (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1388) x1388 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x245 (- x1388 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1049) x1049 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x245 (- x1049 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div (ite (< x1388 57896044618658097711785492504343953926634992332820282019728792003956564819968) x1388 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x245 (- x1388 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1049) x1049 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x245 (- x1049 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x106 340282366920938463463374607431768211455 x157) x1165) (= x881 (x1166 128)) (>= 1208925819614629174706175 x881) (= x11 (x1166 256)) (= 0 x105) (= (x106 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1517) x122) (= x39 (> x1412 0)) (= (mod (* (x1282 x1647) x1165) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1388) (< 0 x1049) (<= x11 1208925819614629174706175) (not (= x1196 0)) (= x1412 (x106 255 x1467)) (= (x1166 160) x157) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1555) (and (> 160 x1555) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1555) true)))) (= (not x965) x393) (= x1517 (x1474 (+ 31 x1555))) (not (ite x393 x393 (and (> x157 170141183460469231731687303715884105727) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x157))))) (= (and (= (<= x157 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 0 x157)) x965) (= x1061 (x1474 (+ x122 128))) (= x1049 (x106 18446744073709551615 x862))) (and (=> x39 x705) (=> (and (not x39) (= x1378 x766) (= x1061 x652)) x411))) x147))
(assert (= 274184521717934524641157099916833587223 (x980 (x475 274184521717934524641157099916833587223))))
(assert (=> (<= x84 10000) (= (x475 x84) (x342 x84))))
(assert (x495 x776))
(assert (= (x342 635583253) (x475 635583253)))
(assert (x495 x1591))
(assert (x495 x1204))
(assert (x495 x1716))
(assert (= x1113 x1652))
(assert (x495 x831))
(assert (x495 x235))
(assert (x1276 x1001))
(assert (= (x980 (x475 x261)) x261))
(assert (x495 x469))
(assert (x495 x1519))
(assert (= (x980 (x342 1208925819614629174706176)) 1208925819614629174706176))
(assert (x495 x121))
(assert (x495 x510))
(assert (x495 x721))
(assert (= (x475 2514000705) (x342 2514000705)))
(assert (x495 x1588))
(assert (x495 x122))
(assert (x495 x611))
(assert (x495 x1412))
(assert (x495 x669))
(assert (x495 x1207))
(assert (x1601 x1688 x1686))
(assert (x495 x996))
(assert (x495 x1608))
(assert (= (=> (and (= x933 (x1326 224)) (= x1011 (ite (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x763) x763 (- x763 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= x1200 (x1227 (x475 x927) (x342 5) 0)) (= x1579 (or (and (= true (<= (x1596 x29) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 (x1596 x29))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1596 x29)))) (= x1199 (x106 18446744073709551615 x1001)) (= x1117 (x1140 128)) (= (+ x1248 x1011) x916) (>= 20282409603651670423947251286015 x487) (= x1221 x1248) (= x763 (x1596 x512)) (= x512 (x106 20282409603651670423947251286015 x481)) (= x468 (x902 192)) (= x1001 (x1656 160)) (= (x892 256) x502) (= x879 (x106 65535 x933)) (= x181 (x106 255 x502)) (>= x487 0) (= (x1596 x1117) x481) (= x1638 (ite (<= x332 57896044618658097711785492504343953926634992332820282019728792003956564819967) x332 (- x332 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x106 18446744073709551615 x468) x188) (= x927 (x106 1461501637330902918203684832716283019655932542975 x1067)) (= x487 (x661 x1200)) (= (x1596 x487) x332)) (and (=> (and (= x162 (x514 x851)) (<= x162 65535) x1579 (<= 0 x1195) (= (x106 20282409603651670423947251286015 x1569) x1645) (> 20282409603651670423947251286016 x1195) (= (x1596 x1195) x724) (> 65536 x162) (= (x1227 (x475 x1003) (x342 5) 0) x851) (or (and (not (< 10141204801825835211973625643007 x149)) (= (x106 20282409603651670423947251286015 x70) x149) (< (* x1403 x1322) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (or (and (> 0 x724) (= true (<= x724 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x724 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x1362) (< x1322 18446744073709551616) (<= x1322 18446744073709551615) (= (div x490 1000000000000000) x70) (>= x1322 0) (= x490 (* x1403 x1322)) (= x1403 (x106 20282409603651670423947251286015 x724)) (= x70 x975)) (and (= (* x1360 x217) x1620) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x463) (and (= true (<= x463 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x463)))) (not (= x724 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x1436 (x1596 x875)) (= (x245 (- 0 x724)) x463) (= x875 (div x1620 1000000000000000)) (not (> x270 10141204801825835211973625643007)) x1362 (not (= x1436 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (x106 20282409603651670423947251286015 x875) x270) (= x217 (x106 20282409603651670423947251286015 x463)) (> 18446744073709551616 x1360) (<= 0 x1360) (= x126 (x245 (- 0 x1436))) (< (* x217 x1360) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x126 x975) (>= 18446744073709551615 x1360))) (= x477 (x1596 x29)) (>= x162 0) (= x1026 (x1227 (x475 x827) (x342 5) 0)) (= (x245 (- 0 x477)) x1569) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x724) true) (> 0 x724)) (> x724 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1362) (not (= x477 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (x106 1461501637330902918203684832716283019655932542975 x1067) x827) (<= x1195 20282409603651670423947251286015) (= (x106 1461501637330902918203684832716283019655932542975 x1067) x1003) (not (< x1645 x482)) (= (x1128 x1026) x1195)) x75) (=> (and (= x1364 288) (not x1579)) x1442))) x618))
(assert (= (x980 (x342 4062139261)) 4062139261))
(assert (x495 x137))
(assert (x495 x1699))
(assert (x495 x768))
(assert (= (x980 (x342 274184521717934524641157099916833587233)) 274184521717934524641157099916833587233))
(assert (x495 x1341))
(assert (x495 x53))
(assert (x495 x84))
(assert (x495 x337))
(assert (x495 x6))
(assert (x448 x604 x564))
(assert (x495 x1252))
(assert (= x959 (x980 (x475 x959))))
(assert (x495 x1369))
(assert (= (ite (= 288 x1245) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1181 x1245)) (x506 x1245)))
(assert (x495 x1423))
(assert (x495 x1689))
(assert (x448 x724 x1125))
(assert (= x847 (x980 (x475 x847))))
(assert (x495 x1428))
(assert (x1276 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x495 x551))
(assert (x495 x917))
(assert (=> (<= x417 10000) (= (x342 x417) (x475 x417))))
(assert (= x1081 (x980 (x475 x1081))))
(assert (x495 x1329))
(assert (x1276 x46))
(assert (x495 x1035))
(assert (x1276 x502))
(assert (x495 x850))
(assert (x495 x1188))
(assert (x207 x1089 x109))
(assert (x495 x320))
(assert (x495 x920))
(assert (x495 x216))
(assert (x448 x1206 x1543))
(assert (= (x980 (x342 2419208567)) 2419208567))
(assert (x448 x529 x1714))
(assert (x495 x806))
(assert (x495 x1130))
(assert (x1276 x1204))
(assert (x1276 x1114))
(assert (= (x475 274184521717934524641157099916833587227) (x342 274184521717934524641157099916833587227)))
(assert (= x843 (x980 (x475 x843))))
(assert (x495 x1073))
(assert (x495 x1041))
(assert (x495 x1280))
(assert (= (x475 274184521717934524641157099916833587233) (x342 274184521717934524641157099916833587233)))
(assert (x495 x1284))
(assert (x495 x1228))
(assert (x495 x1613))
(assert (x495 x1648))
(assert (x562 x214))
(assert (x1276 x683))
(assert (x562 x261))
(assert (x495 x219))
(assert (= (x980 (x475 x1306)) x1306))
(assert (x1036 x382 x462))
(assert (= x581 (x980 (x475 x581))))
(assert (=> (<= x843 10000) (= (x342 x843) (x475 x843))))
(assert (=> (>= 10000 x162) (= (x475 x162) (x342 x162))))
(assert (x495 x1049))
(assert (x495 x790))
(assert (x495 x1441))
(assert (= x1351 (and x1393 x1379)))
(assert (x495 x512))
(assert (x495 x1604))
(assert (x1276 x1542))
(assert (= (x980 (x342 1752364190)) 1752364190))
(assert (x495 x45))
(assert (x1276 x721))
(assert (x495 x938))
(assert (x448 x1117 x782))
(assert (x495 x1072))
(assert (=> (<= x1694 10000) (= (x342 x1694) (x475 x1694))))
(assert (x495 x1476))
(assert (x495 x584))
(assert (= 65536 (x980 (x342 65536))))
(assert (x17 x1655))
(assert (x495 x1573))
(assert (= (x342 480214969) (x475 480214969)))
(assert (= 2835717307 (x980 (x342 2835717307))))
(assert (x495 x1418))
(assert (x495 x558))
(assert (x448 x447 x1607))
(assert (= (x342 2362581449) (x475 2362581449)))
(assert (x562 x1081))
(assert (= 1099511627776 (x980 (x342 1099511627776))))
(assert (x1276 x1069))
(assert (x495 x1675))
(assert (x495 x1411))
(assert (x495 x3))
(assert (x495 x1206))
(assert (x1276 x772))
(assert (x495 x487))
(assert (x495 x1599))
(assert (x207 x862 x32))
(assert (= (or x1501 (and (not x1379) x1393)) x1526))
(assert (x1276 x1130))
(assert (x562 x581))
(assert (x448 x257 x1052))
(assert (x495 x599))
(assert (= (x342 340282366920938463463374607431768211456) (x475 340282366920938463463374607431768211456)))
(assert (x495 x1669))
(assert (x495 x843))
(assert (= 20282409603651670423947251286016 (x980 (x342 20282409603651670423947251286016))))
(assert (x495 x1625))
(assert (x1036 x290 x326))
(assert (x1276 x1655))
(assert (= x72 x280))
(assert (x495 x929))
(assert (= 274184521717934524641157099916833587210 (x980 (x475 274184521717934524641157099916833587210))))
(assert (= 480214969 (x980 (x342 480214969))))
(assert (x495 x612))
(assert (= 3638949393 (x980 (x342 3638949393))))
(assert (x495 x1445))
(assert (x495 x1148))
(assert (x1276 x1517))
(assert (x495 x167))
(assert (x495 x591))
(assert (x495 x1342))
(assert (x495 x461))
(assert (x495 x1029))
(assert (= (=> (= x1103 (= x440 274184521717934524641157099916833587233)) (and (=> (and (not (< x359 2362581449)) (<= 0 x1476) x1103 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1476) (= x1639 (x1695 256)) (< 0 x1476) (not (= x359 4062139261)) (<= x1725 1208925819614629174706175) (>= x1689 0) (= 4 x1134) (= x1342 115197700812830431890159100217698998050002284567939525164234024451216521560064) (>= x1725 0) (= (x196 (x475 274184521717934524641157099916833587233)) x1430) (= (x1695 256) x442) (<= x1689 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x593 (x1695 224)) (<= x621 1208925819614629174706175) (< x621 1208925819614629174706176) (= (x1695 160) x1325) (= x148 (x1695 192)) (= true (<= x1476 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= 160 x630) (<= x525 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x525) (= x760 (x1695 192)) (not (> 4 x1134)) (<= 0 x178) (> 1208925819614629174706176 x1725) (= 1 x1668) (not (= x359 3257672857)) (not (= 2362581449 x359)) (= (x1227 (x475 x665) (x342 1) 0) x226) (= x922 (x1695 224)) (= x359 4272920204) (= x1689 (x1708 x226)) (= (x1695 128) x779) (<= 0 x621) (<= x178 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1134 4) (= x655 (x1695 160)) (< 0 x1430) (= x1224 (x1227 (x475 x665) (x342 1) 0)) (= x1476 (x1708 x1224)) (= x1082 (x1695 128))) x874) (=> (not x1103) x764))) x798))
(assert (x495 x1233))
(assert (x495 x1047))
(assert (x495 x1403))
(assert (x495 x168))
(assert (x495 x1563))
(assert (= (=> (and (= x632 (* x1012 x528)) (= (x106 x1032 x1454) x250) (= (ite (not x176) 1 0) x1604) (= x176 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1301) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1301) true) (< x1301 0)))) (= x640 (ite (or (and (> x1691 x1207) (= (<= x1207 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1691 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1207) (<= x1691 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= x1002 x349) (= (x1305 x499) x1121) (<= x1121 1208925819614629174706175) (= x509 (x1305 x91)) (= (ite (or (and (> 0 x1301) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1301) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1301)) 1 0) x1032) (not (= 0 x136)) (= (x245 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1301)) x1623) (= x1288 (x106 18446744073709551615 x37)) (= x1496 (x106 x1604 x640)) (< (* x528 x1012) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x545 (x1474 (+ x1025 64))) (= x1691 (div x632 1000000000000000000)) (= x513 (x1474 (+ 64 x91))) (= 0 x1496) (= x1600 (x1474 (+ 64 x69))) (= (not x25) x800) (= (ite (or (and (> x1623 x1691) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1691) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1623))) (and (> x1691 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1623))) 1 0) x1454) (= x499 (x1474 (+ x513 64))) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1691)) (= (x1474 (+ x139 31)) x721) (>= 1208925819614629174706175 x509) (= x37 (x441 x545)) (= x1335 x336) (not (or (> x139 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x139 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x139 160)))) (= x720 (x1305 x1245)) (= (x1474 (+ x429 x91)) x1002) (= (x106 18446744073709551615 x1010) x528) (= (and (< 0 x720) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x720) true)) x25) (= 0 x250) (= (x106 340282366920938463463374607431768211455 x720) x1241) (= (x1474 (+ x1301 x1691)) x1335) (not (ite x800 x800 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x720) true) (> x720 170141183460469231731687303715884105727)))) (= x429 (x106 115792089237316195423570985008687907853269984665640564039457584007913129639904 x721)) (> x1288 0) (= (x245 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1301)) x1207) (= (x580 x1600) x1010) (= (x1474 (+ 288 x1116)) x1245) (= x1012 (div x392 x1288)) (= (mod (* x937 x1241) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x392)) x1582) x1597))
(assert (x495 x954))
(assert (= (x980 (x475 x162)) x162))
(assert (= (x342 950698303) (x475 950698303)))
(assert (x495 x780))
(assert (x495 x431))
(assert (= (x342 2055092157) (x475 2055092157)))
(assert (x495 x794))
(assert (x562 x121))
(assert (x495 x349))
(assert (= (x475 641995544) (x342 641995544)))
(assert (x686 x589 x1358))
(assert (x495 x1409))
(assert (= (or (and x1523 x85) (and x543 x1351)) x1367))
(assert (=> (>= 10000 x847) (= (x475 x847) (x342 x847))))
(assert (x448 x1195 x1020))
(assert (x495 x500))
(assert (x1276 x1089))
(assert (x495 x743))
(assert (x495 x585))
(assert (= (x980 (x342 170141183460469231731687303715884105727)) 170141183460469231731687303715884105727))
(assert (x562 x417))
(assert (x17 x29))
(assert (x495 x1292))
(assert (x495 x414))
(assert (x562 x59))
(assert (x495 x343))
(assert (x495 x372))
(assert (= (x1181 x1284) 0))
(assert (= x30 (=> (and (= x486 (= x1176 0)) (= x865 x772) (not (= x132 0)) (= x1613 x1154) (> x1176 0) (= (not x486) x292) (= (ite x292 1 0) x1407) (= x1407 x1176) (= x1176 (x1667 x1302)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1076) (and (= (<= x1076 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1076))))) x1310)))
(assert (x495 x90))
(assert (x495 x882))
(assert (= (=> (= x1379 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x766) (and (< x766 0) (= (<= x766 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (and (=> (and (= x1302 x1061) (not x1379) (= 1 x697)) x434) (=> x1379 x1510))) x949))
(assert (x448 x234 x1053))
(assert (= 1558726628 (x980 (x342 1558726628))))
(assert (= (x980 (x342 2799315671)) 2799315671))
(assert (x495 x1537))
(assert (x207 x416 x101))
(assert (x17 x496))
(assert (x495 x442))
(assert (x495 x1723))
(assert (x495 x20))
(assert (= 641995544 (x980 (x342 641995544))))
(assert (x495 x1298))
(assert (x495 x1231))
(assert (x1276 x1613))
(assert (= (x980 (x342 2661915226)) 2661915226))
(assert (x17 x1396))
(assert (x1276 x1272))
(assert (= 2514000705 (x980 (x342 2514000705))))
(assert (x495 x1467))
(assert (x495 x722))
(assert (x495 x1013))
(assert (= (x342 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x475 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= x1672 x478))
(assert (x495 x866))
(assert (x495 x120))
(assert (x495 x261))
(assert (= (x980 (x342 3257672857)) 3257672857))
(assert (x495 x183))
(assert (x207 x37 x943))
(assert (x495 x59))
(assert (x495 x1017))
(assert (x495 x522))
(assert (x495 x174))
(assert (x495 x1407))
(assert (x495 x1179))
(assert (x1036 x683 x50))
(assert (x1276 x1254))
(assert (x495 x273))
(assert (= x605 (=> (= (= 274184521717934524641157099916833587233 x236) x1523) (and (=> (and (>= x621 0) (= x907 (x1474 (+ 320 x235))) (< 0 x1292) (>= x1292 0) (<= x1292 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x1725 1208925819614629174706176) (<= 0 x525) (not (= x627 3257672857)) (= x854 x903) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1292) true) (= x518 (x1499 256)) (= (x196 (x475 274184521717934524641157099916833587233)) x1414) (= (x1474 (+ x235 352)) x984) (<= 0 x1725) (not (< x627 2362581449)) (= x1231 (x1499 128)) (= (x1499 224) x372) (= x536 (x1227 (x475 x665) (x342 1) 0)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x985) (= (x1499 192) x220) (= x1303 (x1499 160)) (= (x1499 256) x1649) (= x1172 (x1499 160)) x1523 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x178) (= x530 (x1499 128)) (not (= x627 4062139261)) (= 1 x1675) (= (x1708 x1162) x1292) (<= 0 x8) (< 0 x1414) (<= x8 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1708 x536) x8) (<= 0 x178) (= x420 (x1499 224)) (>= 1208925819614629174706175 x621) (<= x525 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x854 4)) (not (= 2362581449 x627)) (= 4272920204 x627) (= (x1474 (+ 384 x235)) x1287) (= x854 4) (> 1208925819614629174706176 x621) (= (x1227 (x475 x665) (x342 1) 0) x1162) (= 160 x1035) (= x1432 (x1474 (+ 288 x235))) (>= 1208925819614629174706175 x1725) (= (x1499 192) x515)) x840) (=> (not x1523) x303)))))
(assert (x1276 x963))
(assert (= (x475 2059964113) (x342 2059964113)))
(assert (x495 x1115))
(assert (= (x980 (x342 4272920204)) 4272920204))
(assert (x495 x1303))
(assert (x495 x1110))
(assert (x495 x40))
(assert (x448 x320 x1201))
(assert (x495 x879))
(assert (x562 x295))
(assert (x495 x284))
(assert (x495 x1623))
(assert (= (or x1446 x1455) x1421))
(assert (x448 x487 x218))
(assert (x562 x1660))
(assert (x495 x714))
(assert (= 2059964113 (x980 (x342 2059964113))))
(assert (x495 x1016))
(assert (x495 x132))
(assert (= (x342 1099511627776) (x475 1099511627776)))
(assert (x495 x785))
(assert (= (x475 1208925819614629174706175) (x342 1208925819614629174706175)))
(assert (=> (>= 10000 x665) (= (x475 x665) (x342 x665))))
(assert (=> (>= 10000 x827) (= (x342 x827) (x475 x827))))
(assert (x495 x670))
(assert (x1276 x1195))
(assert (x448 x1236 x438))
(assert (x495 x463))
(assert (x495 x1242))
(assert (= (and (not x1356) x708) x642))
(assert (x495 x1183))
(assert (x495 x1631))
(assert (= (x342 614716962) (x475 614716962)))
(assert (= (ite (= 128 x1390) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1181 x1390)) (x915 x1390)))
(assert (x495 x1316))
(assert (x1276 x1246))
(assert (x495 x424))
(assert (= (x980 (x475 274184521717934524641157099916833587227)) 274184521717934524641157099916833587227))
(assert (x495 x243))
(assert (x495 x1504))
(assert (= (x475 1558726628) (x342 1558726628)))
(assert (x495 x1694))
(assert (x495 x1313))
(assert (x495 x1365))
(assert (x495 x1198))
(assert (x495 x1550))
(assert (= x1582 (=> (and (= x336 x561) (= x348 x349) (not x1611) (= x1617 (x106 255 x1467)) (= (> x1617 1) x1611)) x1274)))
(assert (x17 x653))
(assert (x495 x912))
(assert (= (and (not x286) x1621) x1503))
(assert (x495 x1710))
(assert (x495 x371))
(assert (x495 x1308))
(assert (= (x342 274184521717934524641157099916833587223) (x475 274184521717934524641157099916833587223)))
(assert (= x972 (=> (and (< x1024 18446744073709551616) (>= x1153 0) (= (x666 x741) x1445) (= (x524 x69) x1016) (= x535 (x106 255 x1688)) (= x1688 (x74 x1116)) (<= 0 x436) (= (x106 1461501637330902918203684832716283019655932542975 x1016) x129) (>= x610 0) (= x581 (x106 1461501637330902918203684832716283019655932542975 x205)) (<= x1445 1461501637330902918203684832716283019655932542975) (< x610 18446744073709551616) (>= x745 0) (= x1404 (x1474 (+ 64 x1051))) (< x937 340282366920938463463374607431768211456) (<= 0 x770) (= x1311 (x1474 (+ x1132 64))) (= x610 (x1366 x901)) (= (x1129 x901) x770) (< x1413 18446744073709551616) (= (x259 x398) x1024) (>= x1445 0) (= x174 0) (> 256 x1153) (= x1025 (x1474 (+ 288 x1260))) (= x1132 (x1474 (+ x677 64))) (>= 18446744073709551615 x745) (< x770 1461501637330902918203684832716283019655932542976) (>= x937 0) (= x1153 (x1492 x547)) (= (x10 x1334) x1345) (= x677 (x1474 (+ x1334 64))) (= (= 274184521717934524641157099916833587235 x129) x527) (= x357 x1445) (>= x1413 0) (= x357 (x106 1461501637330902918203684832716283019655932542975 x1345)) (<= x1024 18446744073709551615) (= (x159 x1309) x937) (= (x1058 x398) x745) (< x399 340282366920938463463374607431768211456) (> 18446744073709551616 x745) (= (x1227 (x475 x737) (x342 6) 0) x1216) (= 0 x535) (= (x229 x901 2) x966) (= x1698 4) (= (x1227 (x342 0) (x342 9) 0) x741) (= x167 0) (= (x88 x398) x1413) (= (x1433 x547) x436) (= (x1227 (x475 x581) x1216 0) x1309) (= x1051 (x1474 (+ 64 x1116))) (<= x610 18446744073709551615) (> 1461501637330902918203684832716283019655932542976 x1445) (= (x10 x1025) x205) (= x91 (x1474 (+ x1260 512))) (= (x1474 (+ x1116 64)) x69) (>= x1024 0) (<= x1153 255) (< x436 1461501637330902918203684832716283019655932542976) (= x737 (x106 1461501637330902918203684832716283019655932542975 x1067)) (= x547 (x1227 (x342 0) (x342 10) 0)) (= x399 (x569 x966)) (>= 18446744073709551615 x1413) (= (x1474 (+ 288 x1260)) x1334) (<= x399 340282366920938463463374607431768211455) (= (x1474 (+ x1404 64)) x1605) (>= x399 0) (= (x229 x547 2) x398) (= (x1474 (+ 544 x223)) x1116) (<= x937 340282366920938463463374607431768211455) (>= 1461501637330902918203684832716283019655932542975 x436) (= x901 (x229 x547 1)) (>= 1461501637330902918203684832716283019655932542975 x770)) (and (=> (not x527) x883) (=> (and (= 4 x970) (= 4272920204 x79) (= (x1009 128) x1108) (= x831 (x1009 192)) (>= x330 0) (= (x1474 (+ x1116 384)) x431) (not (< x970 4)) (= (x1009 224) x117) (>= 1208925819614629174706175 x427) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x206) (<= x675 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x139 160) (= true (<= x330 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (>= x675 0) (= x1353 (x1474 (+ x1116 352))) (<= x282 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1698 x970) (= (x1009 160) x1687) (<= x924 1208925819614629174706175) (not (= x79 4062139261)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x376) (= x161 (x1227 (x475 x665) (x342 1) 0)) (= x675 (x1294 x385)) (= x325 (x1009 256)) (= (x1227 (x475 x665) (x342 1) 0) x385) (> 1208925819614629174706176 x924) (= x476 (x196 (x475 274184521717934524641157099916833587235))) (= x1402 (x1009 224)) (< 0 x476) (> 1208925819614629174706176 x427) (= x1489 (x1474 (+ x1116 288))) (>= x427 0) (= (x1009 192) x301) (= (x1009 160) x251) (>= x282 0) (< 0 x330) (<= x330 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2362581449 x79)) (= x330 (x1294 x161)) (>= x206 0) x527 (>= x924 0) (not (> 2362581449 x79)) (= (x1009 128) x1298) (not (= x79 3257672857)) (= x323 (x1474 (+ x1116 320))) (= (x1009 256) x1389) (= x136 1)) x1597)))))
(assert (x495 x1721))
(assert (x495 x1489))
(assert (x495 x397))
(assert (x495 x203))
(assert (x495 x1018))
(assert (x495 x940))
(assert (x495 x325))
(assert (x495 x1160))
(assert (x495 x766))
(assert (= (x980 (x342 635583253)) 635583253))
(assert (x495 x616))
(assert (x495 x353))
(assert true)
(assert (x495 x1127))
(assert (x495 x742))
(assert (= (x342 65536) (x475 65536)))
(assert (x495 x1215))
(assert (x495 x1257))
(assert (x495 x238))
(assert (x495 x508))
(assert (x495 x354))
(assert (= (x342 1461501637330902918203684832716283019655932542976) (x475 1461501637330902918203684832716283019655932542976)))
(assert (x1276 x1315))
(assert (x495 x217))
(assert (x495 x1640))
(assert (x495 x1413))
(assert (x1276 x1099))
(assert (= (x980 (x475 274184521717934524641157099916833587233)) 274184521717934524641157099916833587233))
(assert (= 274184521717934524641157099916833587223 (x980 (x342 274184521717934524641157099916833587223))))
(assert (x686 x780 x95))
(assert (x1276 x100))
(assert (= x258 (and (not x1141) x418)))
(assert (x495 x148))
(assert (x495 x763))
(assert (x495 x521))
(assert (= (and x1579 x1336) x1621))
(assert (x495 x198))
(assert (= (x342 274184521717934524641157099916833587244) (x475 274184521717934524641157099916833587244)))
(assert (x1276 x1032))
(assert (x448 x481 x1572))
(assert (x1276 x487))
(assert (x495 x323))
(assert (x495 x459))
(assert (x495 x784))
(assert (= (+ (x980 x547) 1) (x980 (x229 x547 1))))
(assert (x495 x875))
(assert (x495 x277))
(assert (x495 x94))
(assert (x495 x819))
(assert (x562 x84))
(assert (x495 x1700))
(assert (x495 x1419))
(assert (x17 x6))
(assert (x495 x1600))
(assert (x495 x684))
(assert (x1276 x257))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x980 (x342 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(assert (x495 x416))
(assert (x495 x1218))
(assert (x495 x1151))
(assert (x495 x1390))
(assert (x1276 x1209))
(assert (x495 x655))
(assert (x495 x756))
(assert (= (x980 (x342 614716962)) 614716962))
(assert (x1276 x1015))
(assert (x495 x1025))
(assert (x495 x786))
(assert (x495 x630))
(assert (x495 x117))
(assert (x1276 x1454))
(assert (x495 x1610))
(assert (x495 x1696))
(assert (=> (<= x976 10000) (= (x342 x976) (x475 x976))))
(assert (x495 x957))
(assert (x495 x1482))
(assert (x1276 x1483))
(assert (x495 x575))
(assert (x686 x1394 x142))
(assert (x495 x1359))
(assert (= x1003 (x980 (x475 x1003))))
(assert (=> (<= x216 10000) (= (x475 x216) (x342 x216))))
(assert (x448 x961 x186))
(assert (x495 x1517))
(assert (x1050 x933 x1662))
(assert (x495 x446))
(assert (x1276 x589))
(assert (x495 x236))
(assert (x17 x487))
(assert (x448 x963 x62))
(assert (= (+ 2 (x980 x901)) (x980 (x229 x901 2))))
(assert (= (x980 (x342 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x495 x961))
(assert (x495 x1090))
(assert (x495 x1177))
(assert (x495 x914))
(assert (x1276 x285))
(assert (= (x980 (x342 826074471)) 826074471))
(assert (x495 x1071))
(assert (= x709 (and x1235 (not x1513))))
(assert (x495 x577))
(assert (x495 x1347))
(assert (x495 x976))
(assert (x495 x1569))
(assert (= 1461501637330902918203684832716283019655932542976 (x980 (x342 1461501637330902918203684832716283019655932542976))))
(assert (x495 x1381))
(assert (x495 x703))
(assert (x495 x530))
(assert (x495 x144))
(assert (x495 x1704))
(assert (x495 x982))
(assert (x495 x556))
(assert (x495 x1558))
(assert (x495 x115))
(assert (x495 x208))
(assert (x495 x808))
(assert (x1276 x1021))
(assert (x495 x1114))
(assert (= (x342 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x475 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x1276 x862))
(assert (x495 x1677))
(assert (x495 x1281))
(assert (x17 x1117))
(assert (x495 x1210))
(assert (x1276 x1629))
(assert (x495 x92))
(assert (x686 x1067 x613))
(assert (x495 x366))
(assert (= (x980 (x342 2000660004)) 2000660004))
(assert (= (x432 x499) (ite (and x1621 x286) (x930 x499) (x1348 x499))))
(assert (=> (<= x295 10000) (= (x475 x295) (x342 x295))))
(assert (x686 x254 x1030))
(assert (= (and x333 x651) x1336))
(assert (x495 x675))
(assert (x495 x1131))
(assert (x448 x1015 x1518))
(assert (x448 x772 x791))
(assert (x495 x1002))
(assert (x1680 x1315 x469))
(assert (x495 x731))
(assert (x1276 x640))
(assert (x495 x269))
(assert (x495 x98))
(assert (x201 x290))
(assert (x495 x1422))
(assert (= (and x41 x1549) x708))
(assert (x495 x1101))
(assert (x448 x1537 x375))
(assert (x495 x384))
(assert (x495 x533))
(assert (x495 x1487))
(assert (x495 x457))
(assert (x1529 x1466 x988 x1212 x595))
(assert (x495 x262))
(assert (x495 x29))
(assert (= (x342 115197700812830431890159100217698998050002284567939525164234024451216521560064) (x475 115197700812830431890159100217698998050002284567939525164234024451216521560064)))
(assert (x495 x100))
(assert (= (x980 (x475 x43)) x43))
(assert (x495 x937))
(assert (x495 x757))
(assert (x495 x129))
(assert (x495 x1318))
(assert (x495 x979))
(assert (x1276 x912))
(assert (= (x1056 x1285) 0))
(assert (x207 x894 x1363))
(assert (= (x980 (x229 x1202 2)) (+ (x980 x1202) 2)))
(assert (x207 x1246 x1567))
(assert (= x764 true))
(assert (= (ite (= x1245 x91) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x432 x1245)) (x1048 x1245)))
(assert (x495 x749))
(assert (x495 x1108))
(assert (x495 x1086))
(assert (= 2325509075 (x980 (x342 2325509075))))
(assert (x207 x1130 x170))
(assert (= (x980 (x342 115792089237316195423570985008687907853269984655499359237631748795939503996928)) 115792089237316195423570985008687907853269984655499359237631748795939503996928))
(assert (x1680 x1629 x1209))
(assert (x495 x987))
(assert (x495 x392))
(assert (=> (>= 10000 x1398) (= (x475 x1398) (x342 x1398))))
(assert (x495 x610))
(assert (x17 x875))
(assert (= (x475 18446744073709551616) (x342 18446744073709551616)))
(assert (x448 x1613 x452))
(assert (x495 x1241))
(assert (x495 x652))
(assert (= (x19 192) x638))
(assert (=> (<= x1040 10000) (= (x342 x1040) (x475 x1040))))
(assert (x1276 x614))
(assert (x1276 x1569))
(assert (x495 x1392))
(assert (x495 x1668))
(assert (x201 x1647))
(assert (= (x980 (x342 950698303)) 950698303))
(assert (x495 x1650))
(assert (x495 x574))
(assert (x1276 x157))
(assert (= 0 (x1181 x1245)))
(assert (x495 x1223))
(assert (x1276 x1239))
(assert (x1276 x1394))
(assert (= (x980 (x342 340282366920938463463374607431768211456)) 340282366920938463463374607431768211456))
(assert (= x883 (=> (= (= x129 274184521717934524641157099916833587233) x232) (and (=> (and (not (= x944 4062139261)) (>= x178 0) (<= x574 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1708 x925) x574) (> 1208925819614629174706176 x1725) (= (x623 192) x1710) (= (x623 128) x885) (>= x412 0) (not (< x1090 4)) (= 4272920204 x944) (= x240 (x623 256)) (< 0 x1464) (>= x1725 0) (= (x1708 x676) x412) (<= 0 x525) (= x1698 x1090) (= 4 x1090) (= x61 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x623 160) x389) (= x750 (x623 224)) (= x917 (x1474 (+ 320 x1116))) (= (x1474 (+ x1116 288)) x1461) (not (= x944 2362581449)) (= x460 (x623 128)) (not (= 3257672857 x944)) (= (x623 256) x9) x232 (>= x574 0) (= (x1227 (x475 x665) (x342 1) 0) x676) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x412) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x525) (<= 0 x621) (= x1299 (x623 160)) (<= x178 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (<= x412 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (= x684 (x623 192)) (not (> 2362581449 x944)) (= x784 (x1474 (+ 352 x1116))) (> x412 0) (= 1 x136) (= x925 (x1227 (x475 x665) (x342 1) 0)) (= x1464 (x196 (x475 274184521717934524641157099916833587233))) (= x139 160) (> 1208925819614629174706176 x621) (= x371 (x623 224)) (<= x1725 1208925819614629174706175) (= x1417 (x1474 (+ 384 x1116))) (>= 1208925819614629174706175 x621)) x1597) (=> (not x232) x712)))))
(assert (x495 x984))
(assert (x495 x1655))
(assert (x495 x498))
(assert (x495 x525))
(assert (= (or x1300 (and x708 x1356)) x849))
(assert (= (and (not x1585) x709) x762))
(assert (x495 x847))
(assert (= 274184521717934524641157099916833587231 (x980 (x342 274184521717934524641157099916833587231))))
(assert (x495 x206))
(assert (x495 x191))
(assert (x495 x653))
(assert (x495 x1315))
(assert (x1276 x529))
(assert (= x85 (and (not x543) x1351)))
(assert (x495 x1520))
(assert (x495 x181))
(assert (x495 x79))
(assert (x1276 x987))
(assert (x495 x1328))
(assert (x495 x1304))
(assert (x495 x881))
(assert (= 1889567281 (x980 (x342 1889567281))))
(assert (x495 x1545))
(assert (x562 x343))
(assert (x495 x329))
(assert (= (=> (and (= x1545 x1074) (= (= x22 x1583) x960) (= (- x1041 x1545) x1583)) x960) x1091))
(assert (x495 x983))
(assert (x562 274184521717934524641157099916833587231))
(assert (= x841 (=> (and (= x1318 1168994686) (not (< x1318 950698303)) (<= 0 x1613) (>= 20282409603651670423947251286015 x1613) (< 0 x124) (not (< x1318 1168994686)) (= x1330 (x106 20282409603651670423947251286015 x1613)) (= (x196 (x475 274184521717934524641157099916833587210)) x124) (> 1558726628 x1318) (= x1330 x484) (< x1613 20282409603651670423947251286016) (< x1318 2059964113)) (=> (= x484 x1208) x199))))
(assert (x495 x1322))
(assert (x495 x227))
(assert (x1276 x830))
(assert (x495 x1249))
(assert (x495 x1547))
(assert (x495 x1187))
(assert (= x130 (=> (and (not (< x1381 950698303)) (= x611 x968) (>= x1154 0) (= x968 (x106 20282409603651670423947251286015 x1154)) (= (x196 (x475 274184521717934524641157099916833587210)) x337) (> x337 0) (< x1381 2059964113) (> 20282409603651670423947251286016 x1154) (not (< x1381 1168994686)) (= x1381 1168994686) (<= x1154 20282409603651670423947251286015) (< x1381 1558726628)) (=> (= x1041 x611) x635))))
(assert (x495 x1082))
(assert (=> (>= 10000 x343) (= (x342 x343) (x475 x343))))
(assert (x495 x290))
(assert (= (=> (and (= x1424 (x1227 (x342 0) (x342 9) 0)) (= x134 (x1227 (x475 x295) x1459 0)) (>= 1461501637330902918203684832716283019655932542975 x295) (<= 0 x1557) (= (= x1557 0) x793) (= (x666 x1424) x295) (>= 255 x1557) (= (x1227 (x475 x1160) (x342 11) 0) x1459) (< x1557 256) (< x295 1461501637330902918203684832716283019655932542976) (= x321 0) (>= x295 0) (= (x553 x134) x1557)) (and (=> (and (= x227 x766) (= x1061 x844) x793) x1528) (=> (not x793) x949))) x705))
(assert (x495 x116))
(assert (x17 x257))
(assert (x495 x1612))
(assert (x562 274184521717934524641157099916833587223))
(assert (=> (>= 10000 x959) (= (x475 x959) (x342 x959))))
(assert (x495 x516))
(assert (x495 x1263))
(assert (x1276 x875))
(assert (= (x342 1736444767) (x475 1736444767)))
(assert (x495 x865))
(assert (x495 x1647))
(assert (x495 x379))
(assert (x495 x609))
(assert (x495 x1209))
(assert (x495 x396))
(assert (x562 x43))
(assert (x495 x449))
(assert (x495 x870))
(assert (x207 x1001 x1619))
(assert (x495 x61))
(assert (x1680 x786 x715))
(assert (= x90 (x980 (x475 x90))))
(assert (x448 x1114 x383))
(assert (x1276 1099511627775))
(assert (= 1736444767 (x980 (x342 1736444767))))
(assert (x495 x745))
(assert (x495 x1661))
(assert (x495 x1054))
(assert (x1276 x1164))
(assert (= (x803 x914) 0))
(assert (x495 x1709))
(assert (= (=> (and (not (< x669 826074471)) (= x511 274184521717934524641157099916833587210) (= x1427 (x1227 (x475 274184521717934524641157099916833587210) (x342 1) 0)) (= x900 (x196 (x475 274184521717934524641157099916833587231))) (<= x1663 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 826074471 x669)) (= x644 x1663) (> x900 0) (= x669 1889567281) (<= 0 x1663) (= x1663 (x1493 x1427))) (=> (= x594 x644) x646)) x1361))
(assert (x1276 x1117))
(assert (= (x506 x499) (ite (= 288 x499) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1181 x499))))
(assert (x495 x663))
(assert (= x679 (=> (and (>= 20282409603651670423947251286015 x1319) (= (< 0 (x196 (x475 274184521717934524641157099916833587223))) x1126) (<= 0 x1188) x26 (<= 0 x501) (= (> (x196 (x475 274184521717934524641157099916833587233)) 0) x947) (<= x498 20282409603651670423947251286015) (<= x1304 1099511627775) (<= 0 x1333) (= x671 x693) x256 (<= x1316 255) (= x34 (< 0 (x196 (x475 274184521717934524641157099916833587210)))) (= (x255 (x475 274184521717934524641157099916833587231)) x461) (>= x725 0) (<= 0 x1266) (= false x1457) (<= 0 x314) (>= 18446744073709551615 x1127) (>= x772 0) (= false x1722) (<= x1089 18446744073709551615) x1126 (>= x1089 0) (>= x924 0) (= x208 4) (<= x44 18446744073709551615) (= false x625) (>= x743 0) (<= 0 x693) (= (< 0 (x196 (x475 274184521717934524641157099916833587227))) x271) (>= x128 0) (= x959 x787) (<= x1188 255) (>= x1127 0) (= x353 (x255 (x475 274184521717934524641157099916833587227))) (= x957 (x255 (x475 274184521717934524641157099916833587223))) (<= x621 1208925819614629174706175) (= (> (x196 (x475 274184521717934524641157099916833587235)) 0) x256) x34 (<= x1613 20282409603651670423947251286015) (>= 255 x1122) (<= x1712 18446744073709551615) (= (< 0 (x196 (x475 274184521717934524641157099916833587231))) x26) (= x1525 641995544) (<= x1333 18446744073709551615) (= x743 x97) (>= x1316 0) (<= x693 1461501637330902918203684832716283019655932542975) x947 (>= 1208925819614629174706175 x924) (= x1046 false) (>= x1122 0) (= (x255 (x475 274184521717934524641157099916833587235)) x501) (<= x787 1461501637330902918203684832716283019655932542975) (<= x1725 1208925819614629174706175) (>= 255 x128) x272 (>= x957 0) (= x1608 x1375) (<= 0 x353) (>= x787 0) (<= x427 1208925819614629174706175) (= x725 (x255 (x475 274184521717934524641157099916833587210))) (>= x1319 0) (= (x255 (x475 274184521717934524641157099916833587244)) x945) (<= x314 18446744073709551615) (= (x255 (x475 274184521717934524641157099916833587233)) x1266) (<= 0 x498) (>= 1461501637330902918203684832716283019655932542975 x743) (<= 0 x427) (= (> (x196 (x475 274184521717934524641157099916833587244)) 0) x272) (<= 0 x1304) (>= 20282409603651670423947251286015 x772) (>= x704 0) (<= x704 18446744073709551615) (>= x1608 0) (>= 1099511627775 x1168) (<= x759 18446744073709551615) x271 (<= 0 x621) (<= 0 x1168) (>= x461 0) (<= 0 x1712) (<= 0 x1613) (<= 0 x44) (<= x1608 1461501637330902918203684832716283019655932542975) (<= 0 x1725) (<= 0 x945) (>= x759 0)) x369)))
(assert (= x369 (=> (and (< x834 3253611544) (<= 0 x1087) (= x1677 (x106 18446744073709551615 x759)) (= x1399 x1677) (<= x275 1461501637330902918203684832716283019655932542975) (not (> 2661915226 x834)) (not (= 2879910238 x834)) (= x834 3075265556) (not (= 2834295333 x834)) (not (> 2799315671 x834)) (= x1683 x1228) (= x377 0) (= x381 (x196 (x475 274184521717934524641157099916833587210))) (not (< x834 2059964113)) (< x759 18446744073709551616) (>= x275 0) (<= x266 1461501637330902918203684832716283019655932542975) (not (= x834 2867386960)) (< 0 x381) (>= x266 0) (>= x759 0) (<= x1087 1461501637330902918203684832716283019655932542975) (<= x759 18446744073709551615) (not (= x834 2799315671)) (= x788 x377) (= x275 x1228) (= x266 x671)) (=> (= x1151 x1399) x650))))
(assert (x495 x1375))
(assert (x17 x1206))
(assert (x495 x1085))
(assert (x495 x197))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x980 (x342 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= x59 (x980 (x475 x59))))
(assert (= (x980 (x475 x1160)) x1160))
(assert (= (=> (and (= x1524 (not x253)) (= (x1227 (x475 274184521717934524641157099916833587210) (x342 1) 0) x832) (= x719 68) (= x658 x99) (= (+ x99 x1564) x190) (= x663 x216) (= x283 (x106 1461501637330902918203684832716283019655932542975 x254)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1419) (= x491 x1359) (not (= x757 1889567281)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1313) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1313)) (< x1313 64))) x1511) (= x868 (x1227 (x475 274184521717934524641157099916833587210) (x342 1) 0)) (>= x366 0) (= x1422 (x1474 (+ x1364 68))) (= (x245 (- x1422 x1364)) x809) (= (x1174 x1364) x491) (> x1508 0) (= x1564 x1419) (= (< x366 x822) x932) (= x1073 (x1474 (+ 4 x1364))) (= (x196 (x475 274184521717934524641157099916833587231)) x1508) (not (= 2514000705 x757)) (= x366 (x1493 x868)) (= 274184521717934524641157099916833587210 x40) (= (x1474 (+ 36 x1364)) x1170) (<= 0 x1419) (not (< x757 826074471)) (= x296 (x245 (- x366 x1655))) (= x863 (x1227 (x475 x216) (x342 1) 0)) (= x168 x1154) (= x939 274184521717934524641157099916833587231) (= 2835717307 x757) (= x1359 (ite x1524 1 0)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x92) (= 274184521717934524641157099916833587231 x1152) (= x107 (x1227 (x475 x216) (x342 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x366) (= x253 (= x491 0)) (= (x231 x863) x1419) (not (> 4 x719)) (= x552 274184521717934524641157099916833587210) (= (x245 (- x719 4)) x1313) (not x1511) (not (= 826074471 x757)) (< (+ x1419 x658) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x719 x809) (= x728 x865) (not x932) (> x491 0) (= x822 x658) (= x283 x216)) x1310) x1442))
(assert (x495 x412))
(assert (x495 x788))
(assert (x495 x1333))
(assert (x495 x1516))
(assert (x17 x512))
(assert (x495 x1630))
(assert (= (ite (and x1513 x1235) (x1344 160) (x312 160)) (x1166 160)))
(assert (x495 x1483))
(assert (= (or (and x1438 x1526) (and x1141 x418) (and x258 x328)) x1455))
(assert (=> (>= 10000 x1081) (= (x342 x1081) (x475 x1081))))
(assert (x1036 x1647 x289))
(assert (x495 x321))
(assert (x495 x924))
(assert (= (x342 2834295333) (x475 2834295333)))
(assert (x495 x481))
(assert (x495 x1387))
(assert (= (and x39 x1372) x1191))
(assert (x495 x1089))
(assert (= (x475 826074471) (x342 826074471)))
(assert (= (x475 1461501637330902918203684832716283019655932542975) (x342 1461501637330902918203684832716283019655932542975)))
(assert (x495 x1466))
(assert (x495 x188))
(assert (x495 x589))
(assert (x495 x70))
(assert (x495 x1335))
(assert (x495 x1060))
(assert (= (or (and x394 x232) (and x527 x1137)) x1300))
(assert (x495 x234))
(assert (x495 x157))
(assert (x495 x429))
(assert (x562 x976))
(assert (x495 x1436))
(assert (x495 x1541))
(assert (= x1113 x415))
(assert (x1276 x1016))
(assert (= (=> (and (= (ite (or (= 0 x1159) (= x446 0)) 0 (ite (= (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x446) (< x1159 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (div (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x446) x446 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x245 (- x446 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (< x1159 57896044618658097711785492504343953926634992332820282019728792003956564819968) x1159 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x245 (- x1159 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x446) x446 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x245 (- x446 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1159) x1159 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x245 (- x1159 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1301) (= (x432 416) x1520) (= x238 (x106 255 x1467)) (= x940 (x106 340282366920938463463374607431768211455 x382)) (not (= x1668 0)) (= x223 (x106 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1021)) (not (or (and (> 160 x630) (= true (<= x630 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x630 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (not x169) x826) (= x260 0) (= (mod (* x940 (x1282 x290)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x446) (= x1159 (x106 18446744073709551615 x862)) (>= 1208925819614629174706175 x1520) (= (and (> x382 0) (= (<= x382 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x169) (= x1549 (< 0 x238)) (not (ite x826 x826 (and (> x382 170141183460469231731687303715884105727) (= true (<= x382 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x382 (x432 320)) (= (x432 288) x269) (>= 1208925819614629174706175 x269) (> x1159 0) (= x1260 (x1474 (+ 288 x223))) (= x1021 (x1474 (+ x630 31)))) (and (=> (and (not x1549) (= x1301 x561) (= x348 x1260)) x1274) (=> x1549 x1488))) x874))
(assert (x495 x126))
(assert (x448 x285 x1007))
(assert (= x1694 (x980 (x475 x1694))))
(assert (x495 x380))
(assert (= (or x777 (and (not x39) x1372)) x1501))
(assert (x495 x138))
(assert (x495 x557))
(assert (x495 x484))
(assert (= 0 (x374 x531)))
(assert (x1276 x29))
(assert (x495 x744))
(assert (x448 x1099 x1220))
(assert (x495 x1432))
(assert (x448 x865 x989))
(assert (x1627 x1239 x111))
(assert (x1276 18446744073709551615))
(assert (= x199 (=> (and (not (> 3253611544 x1163)) (not (< x1163 3319015721)) (= x172 (x106 20282409603651670423947251286015 x772)) (not (> 2059964113 x1163)) (> 3638949393 x1163) (< x772 20282409603651670423947251286016) (= x1100 x172) (= (x196 (x475 274184521717934524641157099916833587210)) x455) (> x455 0) (>= 20282409603651670423947251286015 x772) (= x1163 3319015721) (<= 0 x772)) (=> (and (= x920 641995544) (= x1054 (x245 (- x428 4))) (= x1084 x1267) (= x1332 x602) (< x920 2059964113) (<= x1249 1461501637330902918203684832716283019655932542975) (not (= x920 614716962)) (or (and x228 (= (ite x228 1 0) x1678)) (and (= x880 (x1227 (x475 x1047) (x342 3) 0)) (< x1222 256) (= x1028 (x1227 (x475 x959) x880 0)) (>= 255 x1222) (= (x106 1461501637330902918203684832716283019655932542975 x1067) x1047) (not x228) (<= 0 x1222) (= (x193 x1028) x1222) (= x1222 x1678))) (= x1606 (- x1208 x1086)) (= x711 x1039) (not (> 480214969 x920)) (= x1084 x243) (= x1109 x602) (not (= x920 480214969)) (= x1183 x665) (= x959 x1249) (< 0 x273) (= x1086 x1100) (> 754029363 x920) (<= 0 x890) (not (= 635583253 x920)) (>= 1461501637330902918203684832716283019655932542975 x1067) (>= 1461501637330902918203684832716283019655932542975 x890) (= x354 x1067) (> 950698303 x920) (not x602) (= (= x1606 x276) x1539) (not (or (> x1054 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1054)) (> 128 x1054)))) (< 131 x428) (not (> 4 x428)) x1539 (<= 0 x243) (= (x196 (x475 274184521717934524641157099916833587210)) x273) (= x1655 x1218) (= x1067 x590) (= x780 x1487) (>= 1461501637330902918203684832716283019655932542975 x254) (= (= x959 x1067) x228) (= true (<= x428 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x254 x1004) (= x711 0) (= x1339 x780) (= x254 x667) (<= x780 1461501637330902918203684832716283019655932542975) (>= x1249 0) (= x1655 x658) (<= x243 1461501637330902918203684832716283019655932542975)) x1622))))
(assert (x1276 x551))
(assert (x1529 x1021 x1531 x1077 x567))
(assert (x1276 1461501637330902918203684832716283019655932542975))
(assert (=> (>= 10000 x261) (= (x475 x261) (x342 x261))))
(assert (x495 x1022))
(assert (x1276 x526))
(assert (x495 x598))
(assert (x495 x1515))
(assert (x495 x1168))
(assert (x1276 x1571))
(assert (x495 x1334))
(assert (x495 x241))
(assert (= (x980 (x475 x1040)) x1040))
(assert (x1276 x759))
(assert (= (x687 x1115) 0))
(assert (x495 x971))
(assert (x495 x1024))
(assert (x495 x990))
(assert (x495 x12))
(assert (= (x980 (x342 2867386960)) 2867386960))
(assert (x207 x587 x1008))
(assert (x495 x1691))
(assert (= 2371715404 (x980 (x342 2371715404))))
(assert (x495 x1226))
(assert (= x1158 x280))
(assert (= (=> (and (not (< x497 950698303)) (not (< x497 1168994686)) (<= 0 x1613) (< 0 x1042) (= 1168994686 x497) (> 1558726628 x497) (<= x1613 20282409603651670423947251286015) (= x472 (x106 20282409603651670423947251286015 x1613)) (> 2059964113 x497) (> 20282409603651670423947251286016 x1613) (= x472 x555) (= x1042 (x196 (x475 274184521717934524641157099916833587210)))) (=> (= x983 x555) x1479)) x646))
(assert (x495 x376))
(assert (= (+ 2 (x980 x606)) (x980 (x229 x606 2))))
(assert (x562 274184521717934524641157099916833587244))
(assert (x495 x1074))
(assert (x1276 340282366920938463463374607431768211455))
(assert (x495 x535))
(assert (x495 x420))
(assert (x495 x472))
(assert (x448 x875 x264))
(assert (= (x475 2531764673) (x342 2531764673)))
(assert (=> (>= 10000 x214) (= (x475 x214) (x342 x214))))
(assert (x495 x658))
(assert (x495 x345))
(assert (x495 x1012))
(assert (x495 x69))
(assert (x495 x919))
(assert (x495 x1196))
(assert (= x56 x651))
(assert (= 1000000000000000000 (x980 (x342 1000000000000000000))))
(assert (x495 x604))
(assert (x495 x1525))
(assert (= x121 (x980 (x475 x121))))
(assert (x495 x1302))
(assert (= (x475 2419208567) (x342 2419208567)))
(assert (x495 x1645))
(assert (x207 x46 x58))
(assert (x1601 x502 x1636))
(assert (x448 x70 x853))
(assert (= (x980 (x475 x1047)) x1047))
(assert (x495 x1649))
(assert (x1276 x933))
(assert (x495 x582))
(assert (x1276 x1214))
(assert (x495 x501))
(assert (x1276 x579))
(assert (x495 x1670))
(assert (x495 x81))
(assert (= (x475 2348850734) (x342 2348850734)))
(assert (x495 x963))
(assert (= (x342 170141183460469231731687303715884105727) (x475 170141183460469231731687303715884105727)))
(assert (x495 x1337))
(assert (x495 x789))
(assert (x495 x1402))
(assert (x495 x1396))
(assert (x495 x1286))
(assert (x495 x1521))
(assert (x495 x1410))
(assert (= (+ (x980 x1202) 1) (x980 (x229 x1202 1))))
(assert (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x980 (x342 115197700812830431890159100217698998050002284567939525164234024451216521560064))))
(assert (x495 x1551))
(assert (x448 x104 x696))
(assert (x495 x482))
(assert (x562 x959))
(assert (x562 x665))
(assert (x495 x190))
(assert (x495 x1534))
(assert (x495 x455))
(assert (x495 x68))
(assert (x495 x1083))
(assert (x686 x205 x1023))
(assert (x495 x332))
(assert (x495 x359))
(assert (x1276 255))
(assert (x495 x1542))
(assert (x495 x667))
(assert (x495 x249))
(assert (= (x475 3075265556) (x342 3075265556)))
(assert (x207 x1164 x47))
(assert (x495 x322))
(assert (x495 x683))
(assert (x495 x1272))
(assert (x495 x1208))
(assert (x495 x1171))
(assert (x495 x1654))
(assert (x495 x1605))
(assert (= x214 (x980 (x475 x214))))
(assert (x495 x1560))
(assert (x495 x859))
(assert (x495 x720))
(assert (x495 x141))
(assert (x495 x1076))
(assert (x495 x86))
(assert (x495 x581))
(assert (x495 x355))
(assert (x495 x296))
(assert (x495 x1508))
(assert (x495 x43))
(assert (x495 x44))
(assert (x495 x63))
(assert (x1276 x1625))
(assert (= (=> (and (= (or (and (= true (<= x1378 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x1378)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1378)) x1576) (= x464 (not x1576)) (= (ite x464 1 0) x697) (= x1302 x652)) x434) x411))
(assert (x495 x477))
(assert (x495 x11))
(assert (x495 x460))
(assert (x1276 x653))
(assert (x1276 x481))
(assert (x495 x297))
(assert (x562 x737))
(assert (x17 x975))
(assert (x495 x1629))
(assert (x448 x1272 x1019))
(assert (x1276 x104))
(assert (= x1173 (and x85 (not x1523))))
(assert (= 65535 (x980 (x342 65535))))
(assert (x495 x1100))
(assert (x495 x1711))
(assert (x495 x526))
(assert (x495 x1494))
(assert (x495 x387))
(assert (= x343 (x980 (x475 x343))))
(assert (x495 x1255))
(assert (= 2879910238 (x980 (x342 2879910238))))
(assert (x1036 x614 x645))
(assert (x495 x644))
(assert (x495 x318))
(assert (x495 x517))
(assert (= (or (and x1621 x286) (and x1503 x1103)) x41))
(assert (x495 x1217))
(assert (= (ite (= x1284 x329) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1166 x1284)) (x1297 x1284)))
(assert (x495 x1225))
(assert (x495 x697))
(assert (x495 x858))
(assert (x495 x970))
(assert (x1276 x786))
(assert (x495 x1536))
(assert (x562 x1040))
(assert (x562 x1306))
(assert (x495 x994))
(assert (= x1449 x478))
(assert (x495 x975))
(assert (x495 x1045))
(assert (= (x475 1099511627775) (x342 1099511627775)))
(assert (x1276 x1604))
(assert (x495 x177))
(assert (x1276 x1466))
(assert (x495 x473))
(assert (x495 x1260))
(assert (x1276 65535))
(assert (x495 x139))
(assert (x495 x1451))
(assert (x495 x1122))
(assert (= 0 (x833 x1025)))
(assert (= (x342 2661915226) (x475 2661915226)))
(assert (x495 x1195))
(assert (= (or (and (not x1097) x642) x1715) x1005))
(assert (x495 x165))
(assert (x495 x614))
(assert (x495 x1246))
(assert (x207 x1010 x936))
(assert (=> (>= 10000 x927) (= (x342 x927) (x475 x927))))
(assert (x495 x1355))
(assert (= (x980 (x342 274184521717934524641157099916833587235)) 274184521717934524641157099916833587235))
(assert (x495 x399))
(assert (x495 x1546))
(assert (= x636 x415))
(assert (x495 x985))
(assert (x1680 x923 x1571))
(assert (x495 x758))
(assert (x495 x348))
(assert (x495 x1571))
(assert (x495 x428))
(assert (x1276 x37))
(assert (x495 x1388))
(assert (x495 x496))
(assert (x495 x1010))
(assert (x495 x747))
(assert (x495 x1015))
(assert (x495 x978))
(assert (x495 x1247))
(assert (x495 x1135))
(assert (x495 x545))
(assert (= (=> (and (= x1378 x227) (= (x106 255 x1467) x1670) (= (< 1 x1670) x1681) (not x1681) (= x652 x844)) x411) x1528))
(assert (x495 x447))
(assert (x1680 x1604 x640))
(assert (x495 x1192))
(assert (x1276 x6))
(assert (= (x475 274184521717934524641157099916833587235) (x342 274184521717934524641157099916833587235)))
(assert (= (=> (and (= x1575 x1364) (< 0 x996)) x1442) x1485))
(assert (= (x980 (x229 x547 2)) (+ (x980 x547) 2)))
(assert (x495 x1371))
(assert (x495 x1261))
(assert (= (x342 3257672857) (x475 3257672857)))
(assert (x495 x368))
(assert (= x418 (and (not x1438) x1526)))
(assert (x495 x1382))
(assert (= (x342 3253611544) (x475 3253611544)))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x980 (x342 57896044618658097711785492504343953926634992332820282019728792003956564819967))))
(assert (x495 x1431))
(assert (x495 x579))
(assert (x495 x1152))
(assert (x495 x673))
(assert (x1276 x979))
(assert (x207 x468 x221))
(assert (= (x1297 x1390) (ite (= x329 x1390) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1166 x1390))))
(assert (x495 x1066))
(assert (x207 x1591 x5))
(assert (x1036 x426 x1111))
(assert (x495 x291))
(assert (x495 x903))
(assert (x495 x1343))
(assert (x495 x313))
(assert (x495 x1554))
(assert (x495 x1270))
(assert (= (x388 x69) 0))
(assert (x495 x1712))
(assert (= (x342 2325509075) (x475 2325509075)))
(assert (x562 x216))
(assert (x495 x781))
(assert (x495 x1154))
(assert (x495 x1311))
(assert (x495 x1394))
(assert (= (x342 65535) (x475 65535)))
(assert (x495 x1330))
(assert (x495 x1345))
(assert (= (x342 20282409603651670423947251286015) (x475 20282409603651670423947251286015)))
(assert (x495 x1360))
(assert (x1680 x987 x1483))
(assert (x1276 x587))
(assert (x495 x15))
(assert (= (x342 2867386960) (x475 2867386960)))
(assert (x495 x301))
(assert (x495 x727))
(assert (x495 x1290))
(assert (= (x475 2879910238) (x342 2879910238)))
(assert (= x56 x1065))
(assert (x495 x737))
(assert (x495 x587))
(assert (= (x915 x1284) (ite (= 128 x1284) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1181 x1284))))
(assert (= x1488 (=> (and (= x334 (x1227 (x342 0) (x342 9) 0)) (= x950 (x1227 (x475 x162) (x342 11) 0)) (= (x553 x233) x1641) (<= x1641 255) (> 256 x1641) (= x1356 (= 0 x1641)) (= 0 x742) (< x417 1461501637330902918203684832716283019655932542976) (= x233 (x1227 (x475 x417) x950 0)) (>= x417 0) (= x417 (x666 x334)) (>= 1461501637330902918203684832716283019655932542975 x417) (<= 0 x1641)) (and (=> (and (= x1301 x336) (= x349 x1260) x1356) x1582) (=> (not x1356) x403)))))
(assert (x448 x912 x1553))
(assert (= (x475 1752364190) (x342 1752364190)))
(assert (x495 x1408))
(assert (= (x980 (x475 x295)) x295))
(assert (x495 x1306))
(assert (= x816 (=> (and (= (x1596 x529) x1647) (= x1513 (= x778 274184521717934524641157099916833587235)) (= x493 128) (= x778 (x106 1461501637330902918203684832716283019655932542975 x1215))) (and (=> (and (>= x1654 0) (= x1418 4) (= x1555 160) (= (x419 160) x1705) (= x318 (x419 256)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1044) (= x942 (x1227 (x475 x665) (x342 1) 0)) (= (x419 128) x1017) (= true (<= x1654 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= (x1294 x942) x1044) (>= x427 0) (= (x1294 x76) x1654) (= (x419 256) x1618) (<= x282 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1482 115197700812830431890159100217698998050002284567939525164234024451216521560064) (>= x206 0) (not (= x1650 2362581449)) (<= x924 1208925819614629174706175) (= x1337 (x419 192)) (not (= 4062139261 x1650)) (< x427 1208925819614629174706176) (= x1650 4272920204) (= x414 (x419 192)) (= x909 (x419 160)) (= x1196 1) x1513 (= (x419 128) x1146) (not (< x1650 2362581449)) (= (x419 224) x1324) (= (x1227 (x475 x665) (x342 1) 0) x76) (<= 0 x1044) (= (x419 224) x1226) (= x89 (x196 (x475 274184521717934524641157099916833587235))) (<= x427 1208925819614629174706175) (<= 0 x924) (= 4 x1418) (< 0 x89) (not (= 3257672857 x1650)) (< x924 1208925819614629174706176) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1654) (not (> 4 x1418)) (<= 0 x282) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x206) (> x1654 0)) x147) (=> (not x1513) x873)))))
(assert (x495 x518))
(assert (= true x1349))
(assert (x495 x282))
(assert (x495 x330))
(assert (x495 x97))
(assert (x495 x1562))
(assert (x495 x178))
(assert (x495 x702))
(assert (=> (>= 10000 x1660) (= (x475 x1660) (x342 x1660))))
(assert (x495 x1214))
(assert (x1276 x1095))
(assert (x495 x60))
(assert (x495 x37))
(assert (x1276 x1647))
(assert (x495 x1398))
(assert (x17 x1537))
(assert (x495 x830))
(assert (x495 x505))
(assert (= x75 (=> (and (= (x106 1461501637330902918203684832716283019655932542975 x1215) x440) (= x290 (x1596 x975)) (= 288 x1560) (= x286 (= 274184521717934524641157099916833587235 x440))) (and (=> (not x286) x798) (=> (and (not (= x674 2362581449)) (not (= x674 3257672857)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x282) (>= x206 0) (>= 1208925819614629174706175 x924) (> x1177 0) (> 1208925819614629174706176 x924) (<= x457 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x282 0) (= 1 x1668) (not (> 4 x198)) (= x347 (x600 224)) (<= 0 x1382) (= (x600 192) x1263) (= x1409 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x1177 (x196 (x475 274184521717934524641157099916833587235))) (= x198 4) (= x905 (x600 160)) (= x198 4) (= (x600 256) x1018) (= x163 (x600 192)) (not (= x674 4062139261)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x206) (< x427 1208925819614629174706176) (<= 0 x427) (> x457 0) (= x457 (x1294 x471)) (>= x457 0) (= (x1227 (x475 x665) (x342 1) 0) x471) (= (x600 128) x1669) (<= x427 1208925819614629174706175) (= x1685 (x600 256)) (= (x600 160) x60) (= (x600 224) x1060) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1382) (= (<= x457 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (not (> 2362581449 x674)) (= x1119 (x600 128)) (<= 0 x924) x286 (= (x1227 (x475 x665) (x342 1) 0) x1383) (= 160 x630) (= x674 4272920204) (= x1382 (x1294 x1383))) x874)))))
(assert (x495 x1230))
(assert (x495 x515))
(assert (= (ite (and x1513 x1235) (x1344 x1390) (x312 x1390)) (x1166 x1390)))
(assert (x562 x1398))
(assert (x495 x927))
(assert (x495 x307))
(assert (x495 x260))
(assert (= (x342 754029363) (x475 754029363)))
(assert (x1276 x382))
(assert (x495 x46))
(assert (x495 x907))
(assert (x495 x257))
(assert (x495 x242))
(assert (= 274184521717934524641157099916833587227 (x980 (x342 274184521717934524641157099916833587227))))
(assert (= (and (not x328) x258) x507))
(assert (x495 x240))
(assert (x562 x843))
(assert (= (x980 (x475 x216)) x216))
(assert (= (x980 (x342 274184521717934524641157099916833587210)) 274184521717934524641157099916833587210))
(assert (x495 x1378))
(assert (x1276 x1591))
(assert (x495 x772))
(assert (x495 x427))
(assert (x495 x162))
(assert (x686 x1016 x1232))
(assert (x495 x1032))
(assert (x495 x502))
(assert (x495 x728))
(assert (x495 x1021))
(assert (x495 x1317))
(assert (x1276 x1206))
(assert (= (x980 (x342 1208925819614629174706175)) 1208925819614629174706175))
(assert (x495 x1414))
(assert (x1276 x1236))
(assert (x495 x1165))
(assert (x495 x440))
(assert (x495 x389))
(assert (x495 x295))
(assert (= (or x1367 (and x1191 x793)) x777))
(assert (x495 x1155))
(assert (x495 x1299))
(assert (x1276 x975))
(assert (x1276 x416))
(assert (x1276 x290))
(assert (x495 x1500))
(assert (= x72 x1672))
(assert (x495 x140))
(assert (x495 x1176))
(assert (x495 x1172))
(assert (x495 x82))
(assert (x495 x499))
(assert (x1276 x447))
(assert (= x1235 (and (not x333) x651)))
(assert (x495 x678))
(assert (x495 x377))
(assert (= (x342 274184521717934524641157099916833587210) (x475 274184521717934524641157099916833587210)))
(assert (x495 x736))
(assert (x495 x310))
(assert (=> (<= x581 10000) (= (x475 x581) (x342 x581))))
(assert (= x837 x1310))
(assert (x495 x347))
(assert (= (and (not x1103) x1503) x639))
(assert (x495 x485))
(assert (x1276 x320))
(assert (x495 x1462))
(assert (x495 x1676))
(assert (= (x475 20282409603651670423947251286016) (x342 20282409603651670423947251286016)))
(assert (x495 x1243))
(assert (x562 x1453))
(check-sat)
