(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x810 0)) (((x96 (x293 x810) (x414 Int)) (x146 (x236 x810) (x940 x810) (x911 Int)) (x1522 (x898 Int)))))
(declare-fun x942 () Int)
(declare-fun x682 () x810)
(declare-fun x428 () Int)
(declare-fun x667 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x834 () Int)
(declare-fun x539 () Bool)
(declare-fun x639 () Int)
(declare-fun x98 () Int)
(declare-fun x718 () Int)
(declare-fun x53 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x403 () Int)
(declare-fun x893 (x810) Int)
(declare-fun x1264 () Bool)
(declare-fun x1500 () x810)
(declare-fun x665 () Int)
(declare-fun x205 () Bool)
(declare-fun x347 () Bool)
(declare-fun x1460 () Int)
(declare-fun x50 () Int)
(declare-fun x1548 () Int)
(declare-fun x1448 () Int)
(declare-fun x1160 () Int)
(declare-fun x1122 () Bool)
(declare-fun x54 () Int)
(declare-fun x886 (x810) Int)
(declare-fun x526 () Int)
(declare-fun x669 () Int)
(declare-fun x790 () Int)
(declare-fun x1442 () Int)
(declare-fun x117 () Int)
(declare-fun x231 () Int)
(declare-fun x24 () Bool)
(declare-fun x758 () Bool)
(declare-fun x1547 () Int)
(declare-fun x1133 () Bool)
(declare-fun x762 () Int)
(declare-fun x1057 () Int)
(declare-fun x1367 () Int)
(declare-fun x616 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x1215 () Int)
(declare-fun x575 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x465 () Int)
(declare-fun x157 () Int)
(declare-fun x1485 () Bool)
(declare-fun x1223 () x810)
(declare-fun x1347 () Int)
(declare-fun x631 () Int)
(declare-fun x671 () x810)
(declare-fun x867 () Int)
(declare-fun x870 () Int)
(declare-fun x89 () Bool)
(declare-fun x1415 () Int)
(declare-fun x1337 () Int)
(declare-fun x66 () Int)
(declare-fun x318 () Int)
(declare-fun x1284 () Int)
(declare-fun x355 () x810)
(declare-fun x364 () Int)
(declare-fun x807 () Int)
(declare-fun x941 () Int)
(declare-fun x413 () x810)
(declare-fun x806 () x810)
(declare-fun x1391 () Int)
(declare-fun x302 () x810)
(declare-fun x583 () x810)
(declare-fun x1409 () Int)
(declare-fun x1044 () Bool)
(declare-fun x885 () x810)
(declare-fun x532 () Bool)
(declare-fun x1029 () Int)
(declare-fun x1081 () Int)
(declare-fun x1495 () Int)
(declare-fun x130 () Bool)
(declare-fun x657 () Int)
(declare-fun x462 () Bool)
(declare-fun x1446 () Int)
(declare-fun x1128 () Int)
(declare-fun x276 () x810)
(declare-fun x61 () Int)
(declare-fun x46 () Int)
(declare-fun x1516 () Bool)
(declare-fun x1247 () x810)
(declare-fun x342 () x810)
(declare-fun x925 () Int)
(declare-fun x1361 () Int)
(declare-fun x85 () x810)
(declare-fun x472 () Bool)
(declare-fun x935 () Int)
(declare-fun x348 () x810)
(declare-fun x1288 (Int) Int)
(declare-fun x1509 () x810)
(declare-fun x1297 () Int)
(declare-fun x1280 () Bool)
(declare-fun x431 () Int)
(declare-fun x587 () Int)
(declare-fun x1221 () Bool)
(declare-fun x1265 () x810)
(declare-fun x981 () Int)
(declare-fun x249 () Int)
(declare-fun x119 () Int)
(declare-fun x1165 () x810)
(declare-fun x1400 () Bool)
(declare-fun x907 () Int)
(declare-fun x686 () Bool)
(declare-fun x646 () Int)
(declare-fun x198 () Int)
(declare-fun x1458 (x810) Int)
(declare-fun x772 () Int)
(declare-fun x1254 () x810)
(declare-fun x1313 () Bool)
(declare-fun x729 () x810)
(declare-fun x676 () Int)
(declare-fun x316 () Bool)
(declare-fun x1363 () Int)
(declare-fun x597 () Int)
(declare-fun x204 () Bool)
(declare-fun x1152 () x810)
(declare-fun x237 () Int)
(declare-fun x704 () x810)
(declare-fun x965 () Int)
(declare-fun x831 () Int)
(declare-fun x1398 () Int)
(declare-fun x121 () Int)
(declare-fun x880 () Bool)
(declare-fun x200 () Int)
(declare-fun x33 (x810) Int)
(declare-fun x985 () Bool)
(declare-fun x653 () Bool)
(declare-fun x1484 () Int)
(declare-fun x551 () Bool)
(declare-fun x1063 () Int)
(declare-fun x559 () Bool)
(declare-fun x1382 () Int)
(declare-fun x313 () Int)
(declare-fun x1295 () Int)
(declare-fun x365 () Int)
(declare-fun x804 () x810)
(declare-fun x153 () Bool)
(declare-fun x83 () Bool)
(declare-fun x828 () Bool)
(declare-fun x105 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x1039 () Int)
(declare-fun x1353 (Int) Int)
(declare-fun x1230 () Int)
(declare-fun x430 () Int)
(declare-fun x1200 () x810)
(declare-fun x434 () x810)
(declare-fun x137 () Bool)
(declare-fun x433 () Int)
(declare-fun x257 () Int)
(declare-fun x436 () Int)
(declare-fun x423 () x810)
(declare-fun x1464 () Bool)
(declare-fun x701 () Int)
(declare-fun x184 () Int)
(declare-fun x296 () Int)
(declare-fun x1354 () Int)
(declare-fun x362 () Int)
(declare-fun x585 () Bool)
(declare-fun x1317 () x810)
(declare-fun x207 () Bool)
(declare-fun x652 () Int)
(declare-fun x963 (Int) Int)
(declare-fun x976 () Int)
(declare-fun x361 () Bool)
(declare-fun x1012 () Int)
(declare-fun x1507 () Int)
(declare-fun x289 () Int)
(declare-fun x266 () Bool)
(declare-fun x1013 () Int)
(declare-fun x1084 () Int)
(declare-fun x512 () Int)
(declare-fun x1253 () Bool)
(declare-fun x691 () x810)
(declare-fun x1355 (x810) Int)
(declare-fun x135 () Bool)
(declare-fun x177 () Int)
(declare-fun x977 () Int)
(declare-fun x328 () Bool)
(declare-fun x999 () Int)
(declare-fun x1454 () Int)
(declare-fun x703 () Bool)
(declare-fun x120 () Int)
(declare-fun x271 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1125 () Int)
(declare-fun x390 () Bool)
(declare-fun x1451 () Int)
(declare-fun x1243 () Bool)
(declare-fun x464 () x810)
(declare-fun x901 () Int)
(declare-fun x92 () Int)
(declare-fun x962 () Bool)
(declare-fun x610 () Int)
(declare-fun x1097 () Int)
(declare-fun x16 () Int)
(declare-fun x602 () Int)
(declare-fun x311 () Bool)
(declare-fun x987 () Bool)
(declare-fun x824 () Int)
(declare-fun x1286 () Int)
(declare-fun x607 () Int)
(declare-fun x268 () Int)
(declare-fun x983 () Bool)
(declare-fun x166 () Int)
(declare-fun x476 () Int)
(declare-fun x277 () Int)
(declare-fun x872 () Int)
(declare-fun x317 () Int)
(declare-fun x679 () Int)
(declare-fun x1244 () Int)
(declare-fun x1115 () Bool)
(declare-fun x1242 () Int)
(declare-fun x412 () x810)
(declare-fun x1049 () Bool)
(declare-fun x1245 (x810) Int)
(declare-fun x1192 () Int)
(declare-fun x170 () Bool)
(declare-fun x986 () Int)
(declare-fun x645 () Int)
(declare-fun x1568 () Int)
(declare-fun x1326 () Int)
(declare-fun x421 () Int)
(declare-fun x67 () x810)
(declare-fun x450 () Int)
(declare-fun x768 () Int)
(declare-fun x1453 () Bool)
(declare-fun x494 () Bool)
(declare-fun x606 () x810)
(declare-fun x760 () Bool)
(declare-fun x648 () Int)
(declare-fun x72 () x810)
(declare-fun x868 () Int)
(declare-fun x952 () Int)
(declare-fun x140 () Int)
(declare-fun x989 (Int) Int)
(declare-fun x902 () Bool)
(declare-fun x769 () Int)
(declare-fun x215 () Int)
(declare-fun x1571 () Bool)
(declare-fun x528 () Int)
(declare-fun x876 () Int)
(declare-fun x128 () Bool)
(declare-fun x909 () Bool)
(declare-fun x920 () x810)
(declare-fun x1334 () Int)
(declare-fun x118 () Int)
(declare-fun x375 () Int)
(declare-fun x286 () Int)
(declare-fun x972 () x810)
(declare-fun x301 () Int)
(declare-fun x720 () Bool)
(declare-fun x578 () x810)
(declare-fun x623 () Int)
(declare-fun x376 () Bool)
(declare-fun x1328 () Int)
(declare-fun x1190 () Bool)
(declare-fun x1463 () Int)
(declare-fun x1523 () Int)
(declare-fun x1381 () x810)
(declare-fun x1372 () Bool)
(declare-fun x248 () Bool)
(declare-fun x845 () x810)
(declare-fun x1167 () x810)
(declare-fun x678 () Int)
(declare-fun x1090 () Int)
(declare-fun x299 () x810)
(declare-fun x586 () x810)
(declare-fun x626 () Bool)
(declare-fun x77 () Int)
(declare-fun x809 () Int)
(declare-fun x523 () Int)
(declare-fun x1410 () Bool)
(declare-fun x1103 () Int)
(declare-fun x1299 () Bool)
(declare-fun x567 () x810)
(declare-fun x4 () Int)
(declare-fun x180 () Bool)
(declare-fun x490 () x810)
(declare-fun x303 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x1129 () Int)
(declare-fun x732 () Int)
(declare-fun x429 () Int)
(declare-fun x129 () x810)
(declare-fun x282 () Int)
(declare-fun x395 () x810)
(declare-fun x1493 () Bool)
(declare-fun x304 () Int)
(declare-fun x1408 () Int)
(declare-fun x531 () Int)
(declare-fun x599 () x810)
(declare-fun x982 () x810)
(declare-fun x1294 () Int)
(declare-fun x491 () Int)
(declare-fun x1405 () x810)
(declare-fun x422 () x810)
(declare-fun x1079 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x979 () Bool)
(declare-fun x294 () x810)
(declare-fun x1392 () x810)
(declare-fun x1285 () Int)
(declare-fun x1042 () Int)
(declare-fun x388 () Int)
(declare-fun x770 () Int)
(declare-fun x515 () x810)
(declare-fun x1557 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x179 () Bool)
(declare-fun x1055 () Int)
(declare-fun x595 (Int) Int)
(declare-fun x694 () x810)
(declare-fun x228 () Bool)
(declare-fun x533 () Int)
(declare-fun x795 () Int)
(declare-fun x1301 () Int)
(declare-fun x1348 () x810)
(declare-fun x1218 () Int)
(declare-fun x1180 () Int)
(declare-fun x1276 () Bool)
(declare-fun x374 () Int)
(declare-fun x944 () Int)
(declare-fun x973 () Bool)
(declare-fun x233 () Int)
(declare-fun x570 () Int)
(declare-fun x789 () Bool)
(declare-fun x373 () Bool)
(declare-fun x169 () Bool)
(declare-fun x1082 () Int)
(declare-fun x218 () Bool)
(declare-fun x263 () Bool)
(declare-fun x1461 () Int)
(declare-fun x853 () Int)
(declare-fun x354 () x810)
(declare-fun x955 () Int)
(declare-fun x1443 () x810)
(declare-fun x750 () x810)
(declare-fun x793 (Int) Int)
(declare-fun x1434 () Int)
(declare-fun x1199 () Int)
(declare-fun x892 () Int)
(declare-fun x788 () x810)
(declare-fun x958 () Int)
(declare-fun x1369 () Bool)
(declare-fun x837 () Bool)
(declare-fun x545 () Int)
(declare-fun x1032 () Int)
(declare-fun x164 () Bool)
(declare-fun x510 () x810)
(declare-fun x1098 () Bool)
(declare-fun x801 () Bool)
(declare-fun x1390 () Int)
(declare-fun x1416 () Int)
(declare-fun x144 () Int)
(declare-fun x1555 () x810)
(declare-fun x183 () x810)
(declare-fun x601 () Bool)
(declare-fun x525 () Int)
(declare-fun x253 () x810)
(declare-fun x35 () Int)
(declare-fun x1178 () Int)
(declare-fun x31 () Int)
(declare-fun x1407 () Bool)
(declare-fun x859 () Int)
(declare-fun x759 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x340 () Bool)
(declare-fun x746 () Int)
(declare-fun x1435 () Bool)
(declare-fun x501 () Bool)
(declare-fun x1157 () Int)
(declare-fun x279 () Int)
(declare-fun x1450 () Int)
(declare-fun x351 () Bool)
(declare-fun x1534 () Int)
(declare-fun x1529 () Int)
(declare-fun x841 () Int)
(declare-fun x811 () x810)
(declare-fun x1342 () Bool)
(declare-fun x1308 () Bool)
(declare-fun x401 () Int)
(declare-fun x1163 () Bool)
(declare-fun x242 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x305 () x810)
(declare-fun x147 () Int)
(declare-fun x206 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x1466 () Int)
(declare-fun x196 () Bool)
(declare-fun x477 () Int)
(declare-fun x832 () Bool)
(declare-fun x928 () Int)
(declare-fun x193 () Bool)
(declare-fun x389 () Bool)
(declare-fun x44 () Int)
(declare-fun x352 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x637 () Int)
(declare-fun x356 () Bool)
(declare-fun x57 () Int)
(declare-fun x1475 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x887 () x810)
(declare-fun x188 () x810)
(declare-fun x381 () x810)
(declare-fun x1316 (x810) Int)
(declare-fun x953 () Int)
(declare-fun x229 () Bool)
(declare-fun x1540 () Int)
(declare-fun x386 () Bool)
(declare-fun x603 () Int)
(declare-fun x132 () Int)
(declare-fun x839 () Int)
(declare-fun x1497 () Int)
(declare-fun x604 () Int)
(declare-fun x333 () Int)
(declare-fun x649 () Bool)
(declare-fun x881 (Int Int) Int)
(declare-fun x846 () Int)
(declare-fun x827 () Int)
(declare-fun x197 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x88 () Int)
(declare-fun x73 () Bool)
(declare-fun x133 () Int)
(declare-fun x1239 () Int)
(declare-fun x134 () Int)
(declare-fun x1233 (Int) Int)
(declare-fun x538 (x810) Int)
(declare-fun x803 () Bool)
(declare-fun x755 () Int)
(declare-fun x761 () Bool)
(declare-fun x155 () x810)
(declare-fun x15 () Int)
(declare-fun x261 () Int)
(declare-fun x820 () Int)
(declare-fun x283 () Int)
(declare-fun x1273 () Int)
(declare-fun x1296 (x810) Int)
(declare-fun x749 () Int)
(declare-fun x1277 () Bool)
(declare-fun x56 () Bool)
(declare-fun x1457 () x810)
(declare-fun x149 () Bool)
(declare-fun x1399 () Int)
(declare-fun x321 () Int)
(declare-fun x1427 () Int)
(declare-fun x1375 (Int) Int)
(declare-fun x923 () x810)
(declare-fun x1422 () Int)
(declare-fun x407 () Bool)
(declare-fun x168 () Int)
(declare-fun x1272 () Int)
(declare-fun x1312 () Int)
(declare-fun x1365 () x810)
(declare-fun x1014 () Int)
(declare-fun x290 () Int)
(declare-fun x511 () Bool)
(declare-fun x572 () x810)
(declare-fun x1027 () Int)
(declare-fun x554 () Int)
(declare-fun x1250 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x90 (Int) Int)
(declare-fun x234 () Int)
(declare-fun x1020 () Int)
(declare-fun x627 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x931 () Int)
(declare-fun x1007 () Bool)
(declare-fun x618 () Bool)
(declare-fun x792 () x810)
(declare-fun x861 () Int)
(declare-fun x1174 (Int) Int)
(declare-fun x1061 () Int)
(declare-fun x172 () Int)
(declare-fun x1268 () x810)
(declare-fun x1017 () Int)
(declare-fun x138 () x810)
(declare-fun x1159 () Bool)
(declare-fun x895 () x810)
(declare-fun x1003 () Int)
(declare-fun x1340 () x810)
(declare-fun x116 () Bool)
(declare-fun x680 () Int)
(declare-fun x990 () Int)
(declare-fun x76 () Int)
(declare-fun x101 () x810)
(declare-fun x201 () Bool)
(declare-fun x256 () Int)
(declare-fun x747 () Int)
(declare-fun x1203 () x810)
(declare-fun x84 () Bool)
(declare-fun x875 () Bool)
(declare-fun x345 () x810)
(declare-fun x426 () Bool)
(declare-fun x484 () Bool)
(declare-fun x32 () Bool)
(declare-fun x17 () Int)
(declare-fun x1552 () Bool)
(declare-fun x921 () Int)
(declare-fun x851 () Int)
(declare-fun x778 () Int)
(declare-fun x62 () Int)
(declare-fun x1503 () Int)
(declare-fun x124 () Int)
(declare-fun x815 () Bool)
(declare-fun x269 (Int) x810)
(declare-fun x163 () Bool)
(declare-fun x86 () Int)
(declare-fun x719 () Bool)
(declare-fun x1131 () Int)
(declare-fun x69 () Bool)
(declare-fun x630 () Int)
(declare-fun x1008 () x810)
(declare-fun x1184 () Int)
(declare-fun x1302 () x810)
(declare-fun x65 () Int)
(declare-fun x1368 (Int) Int)
(declare-fun x926 (x810) Int)
(declare-fun x900 () x810)
(declare-fun x1324 () Bool)
(declare-fun x202 () Int)
(declare-fun x998 () Int)
(declare-fun x724 () Int)
(declare-fun x42 () Int)
(declare-fun x743 () Int)
(declare-fun x836 () Bool)
(declare-fun x244 () Int)
(declare-fun x335 () Int)
(declare-fun x1056 () Bool)
(declare-fun x992 (x810) Int)
(declare-fun x252 () Bool)
(declare-fun x393 () x810)
(declare-fun x435 () x810)
(declare-fun x1183 () x810)
(declare-fun x349 () Int)
(declare-fun x673 () Bool)
(declare-fun x488 () Bool)
(declare-fun x843 () Int)
(declare-fun x446 () Int)
(declare-fun x1140 () Int)
(declare-fun x409 () Bool)
(declare-fun x495 () x810)
(declare-fun x1483 () Bool)
(declare-fun x847 () Bool)
(declare-fun x424 () Bool)
(declare-fun x596 () Int)
(declare-fun x838 () Int)
(declare-fun x1278 () Int)
(declare-fun x771 (x810) Int)
(declare-fun x437 () Int)
(declare-fun x1309 () Int)
(declare-fun x556 () Int)
(declare-fun x30 () Int)
(declare-fun x800 () x810)
(declare-fun x530 () Bool)
(declare-fun x552 () Bool)
(declare-fun x262 () Int)
(declare-fun x957 () Int)
(declare-fun x670 () Int)
(declare-fun x122 () Int)
(declare-fun x359 () Int)
(declare-fun x1364 () Bool)
(declare-fun x850 () Int)
(declare-fun x1480 () Int)
(declare-fun x1246 () Bool)
(declare-fun x41 () x810)
(declare-fun x1553 () x810)
(declare-fun x225 () Int)
(declare-fun x1370 () Int)
(declare-fun x272 () Int)
(declare-fun x1171 () Int)
(declare-fun x1546 () Bool)
(declare-fun x48 () Int)
(declare-fun x945 () Int)
(declare-fun x1287 () Int)
(declare-fun x858 () Int)
(declare-fun x1173 () Bool)
(declare-fun x591 () x810)
(declare-fun x934 () x810)
(declare-fun x1564 () Int)
(declare-fun x213 (Int) Int)
(declare-fun x799 () Bool)
(declare-fun x1198 () Int)
(declare-fun x753 () Bool)
(declare-fun x765 () Bool)
(declare-fun x26 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x819 () Bool)
(declare-fun x683 () Int)
(declare-fun x1376 () Int)
(declare-fun x696 () Bool)
(declare-fun x227 () Int)
(declare-fun x1121 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x425 () Int)
(declare-fun x1141 () Bool)
(declare-fun x1329 () Int)
(declare-fun x1025 () Int)
(declare-fun x1156 () Int)
(declare-fun x444 () Int)
(declare-fun x306 () Int)
(declare-fun x674 () Int)
(declare-fun x1333 () Bool)
(declare-fun x798 () Int)
(declare-fun x18 () Int)
(declare-fun x1261 () Int)
(declare-fun x1346 () Int)
(declare-fun x141 () Int)
(declare-fun x553 () Int)
(declare-fun x159 () Bool)
(declare-fun x1511 () Int)
(declare-fun x151 () Int)
(declare-fun x1202 () Bool)
(declare-fun x794 () Bool)
(declare-fun x330 () Int)
(declare-fun x432 () Int)
(declare-fun x1343 () Int)
(declare-fun x910 () Int)
(declare-fun x487 () Bool)
(declare-fun x855 () Bool)
(declare-fun x1420 () Int)
(declare-fun x394 (x810) Int)
(declare-fun x1487 () Int)
(declare-fun x544 () x810)
(declare-fun x383 () Int)
(declare-fun x405 () Int)
(declare-fun x152 () Int)
(declare-fun x1570 () Int)
(declare-fun x1535 () x810)
(declare-fun x946 () Bool)
(declare-fun x833 () Bool)
(declare-fun x1371 () Int)
(declare-fun x1224 () x810)
(declare-fun x969 () Bool)
(declare-fun x781 () x810)
(declare-fun x908 () Int)
(declare-fun x1345 () Bool)
(declare-fun x1542 () Int)
(declare-fun x410 () Bool)
(declare-fun x904 () Bool)
(declare-fun x917 () Bool)
(declare-fun x310 () Bool)
(declare-fun x219 () Bool)
(declare-fun x217 () Int)
(declare-fun x1240 () Int)
(declare-fun x259 () Int)
(declare-fun x1137 () Int)
(declare-fun x956 () x810)
(declare-fun x1545 () Int)
(declare-fun x1508 () Int)
(declare-fun x36 (Int) Int)
(declare-fun x447 () Bool)
(declare-fun x1134 () Int)
(declare-fun x1414 () Bool)
(declare-fun x1455 () Int)
(declare-fun x43 () Bool)
(declare-fun x416 () Bool)
(declare-fun x1395 () x810)
(declare-fun x270 () Int)
(declare-fun x1429 () Int)
(declare-fun x486 () Int)
(declare-fun x1214 () Bool)
(declare-fun x568 () Int)
(declare-fun x883 () Int)
(declare-fun x1384 () Int)
(declare-fun x467 () Int)
(declare-fun x112 () x810)
(declare-fun x996 () x810)
(declare-fun x427 () Int)
(declare-fun x1209 () Int)
(declare-fun x1091 () Bool)
(declare-fun x419 () x810)
(declare-fun x726 () Int)
(declare-fun x840 () Int)
(declare-fun x802 () Bool)
(declare-fun x503 (x810) Int)
(declare-fun x232 () x810)
(declare-fun x399 () Bool)
(declare-fun x1149 () Int)
(declare-fun x660 () Bool)
(declare-fun x1037 () Int)
(declare-fun x1150 () Int)
(declare-fun x455 () Int)
(declare-fun x734 () Int)
(declare-fun x440 () Int)
(declare-fun x1050 () Int)
(declare-fun x787 () x810)
(declare-fun x1089 () Int)
(declare-fun x594 () Bool)
(declare-fun x1267 () Int)
(declare-fun x1491 () Int)
(declare-fun x1531 () x810)
(declare-fun x1321 () Int)
(declare-fun x1275 () Bool)
(declare-fun x1191 () x810)
(declare-fun x312 () Int)
(declare-fun x295 () Int)
(declare-fun x698 (Int) Int)
(declare-fun x34 () Bool)
(declare-fun x829 () Int)
(declare-fun x1403 () Bool)
(declare-fun x621 () Bool)
(declare-fun x1525 () Int)
(declare-fun x1143 () x810)
(declare-fun x710 () Int)
(declare-fun x482 () Int)
(declare-fun x943 () Bool)
(declare-fun x659 () Int)
(declare-fun x933 () x810)
(declare-fun x502 () x810)
(declare-fun x936 () Int)
(declare-fun x148 () Int)
(declare-fun x1123 () Int)
(declare-fun x1168 () Int)
(declare-fun x625 () Int)
(declare-fun x1204 () x810)
(declare-fun x655 () x810)
(declare-fun x297 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x589 () Bool)
(declare-fun x849 () Int)
(declare-fun x463 () x810)
(declare-fun x1000 () Int)
(declare-fun x1154 () Bool)
(declare-fun x947 () Bool)
(declare-fun x854 () Bool)
(declare-fun x344 (x810) Int)
(declare-fun x480 () Int)
(declare-fun x723 () Int)
(declare-fun x932 () Int)
(declare-fun x991 () Bool)
(declare-fun x1236 () Int)
(declare-fun x574 () Int)
(declare-fun x1270 () Int)
(declare-fun x123 () Int)
(declare-fun x1130 () x810)
(declare-fun x1147 () Int)
(declare-fun x1447 () Int)
(declare-fun x1169 () Int)
(declare-fun x308 () Int)
(declare-fun x1502 () Bool)
(declare-fun x1151 (Int) Int)
(declare-fun x1358 () Int)
(declare-fun x241 () Int)
(declare-fun x548 () Int)
(declare-fun x709 () Int)
(declare-fun x1124 () Int)
(declare-fun x513 () Bool)
(declare-fun x281 () x810)
(declare-fun x871 () Int)
(declare-fun x739 () Int)
(declare-fun x298 () Int)
(declare-fun x1459 () Int)
(declare-fun x1 () x810)
(declare-fun x897 () Bool)
(declare-fun x779 (Int) Int)
(declare-fun x194 () Bool)
(declare-fun x1106 (Int) Int)
(declare-fun x203 () x810)
(declare-fun x1402 () Int)
(declare-fun x1396 () Bool)
(declare-fun x319 () Int)
(declare-fun x353 () Int)
(declare-fun x1024 () Int)
(declare-fun x785 () Bool)
(declare-fun x1238 () x810)
(declare-fun x1210 () x810)
(declare-fun x598 () Bool)
(declare-fun x95 () x810)
(declare-fun x478 () Int)
(declare-fun x857 () Int)
(declare-fun x441 () Bool)
(declare-fun x742 () x810)
(declare-fun x64 () Int)
(declare-fun x1330 () x810)
(declare-fun x873 () x810)
(declare-fun x997 () Int)
(declare-fun x1127 () Bool)
(declare-fun x1472 () Int)
(declare-fun x752 () x810)
(declare-fun x158 () Int)
(declare-fun x402 () Bool)
(declare-fun x1011 () x810)
(declare-fun x300 () Int)
(declare-fun x1465 () Bool)
(declare-fun x145 () Int)
(declare-fun x584 () Int)
(declare-fun x181 () Bool)
(declare-fun x380 () Int)
(declare-fun x1559 () Bool)
(declare-fun x20 () Bool)
(declare-fun x274 () Bool)
(declare-fun x695 () x810)
(declare-fun x540 () Bool)
(declare-fun x535 () Int)
(declare-fun x563 () Bool)
(declare-fun x1052 () x810)
(declare-fun x812 () Int)
(declare-fun x960 () Bool)
(declare-fun x1255 () Int)
(declare-fun x291 () Int)
(declare-fun x1528 () Int)
(declare-fun x903 () Int)
(declare-fun x1193 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x292 () Int)
(declare-fun x327 () Bool)
(declare-fun x448 () Int)
(declare-fun x1225 (Int) Int)
(declare-fun x689 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x1023 () Int)
(declare-fun x14 () Int)
(declare-fun x1054 () Int)
(declare-fun x211 () Bool)
(declare-fun x518 () Int)
(declare-fun x185 () Int)
(declare-fun x777 () x810)
(declare-fun x350 () Int)
(declare-fun x1433 () Bool)
(declare-fun x1322 (Int) Int)
(declare-fun x617 () Bool)
(declare-fun x1120 () Int)
(declare-fun x783 (Int) Int)
(declare-fun x1536 () Bool)
(declare-fun x190 () x810)
(declare-fun x454 () x810)
(declare-fun x629 () x810)
(declare-fun x869 () Bool)
(declare-fun x684 () Bool)
(declare-fun x1331 () x810)
(declare-fun x1166 () Int)
(declare-fun x103 () Bool)
(declare-fun x150 () Int)
(declare-fun x1145 () x810)
(declare-fun x28 () Int)
(declare-fun x99 () Bool)
(declare-fun x571 () Int)
(declare-fun x1113 () Int)
(declare-fun x265 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x1532 () Int)
(declare-fun x80 () Bool)
(declare-fun x1292 () x810)
(declare-fun x877 () Bool)
(declare-fun x285 () Bool)
(declare-fun x930 () Int)
(declare-fun x878 () Int)
(declare-fun x1118 () Int)
(declare-fun x142 () Int)
(declare-fun x162 () Int)
(declare-fun x209 () Bool)
(declare-fun x505 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x731 () Int)
(declare-fun x94 () Int)
(declare-fun x527 () Int)
(declare-fun x1289 () Int)
(declare-fun x12 () Int)
(declare-fun x1164 () Bool)
(declare-fun x456 () x810)
(declare-fun x100 () Int)
(declare-fun x1060 () Bool)
(declare-fun x49 () Bool)
(declare-fun x1047 () Int)
(declare-fun x675 () x810)
(declare-fun x1078 () Bool)
(declare-fun x1397 (x810) Int)
(declare-fun x1045 () Int)
(declare-fun x1456 () x810)
(declare-fun x1219 () Int)
(declare-fun x634 () Int)
(declare-fun x550 () Int)
(declare-fun x592 () Bool)
(declare-fun x323 () Int)
(declare-fun x360 () Bool)
(declare-fun x1438 () Int)
(declare-fun x93 () Int)
(declare-fun x1360 () x810)
(declare-fun x1362 () Int)
(declare-fun x549 () x810)
(declare-fun x1222 () Bool)
(declare-fun x1138 () Int)
(declare-fun x39 () Bool)
(declare-fun x1201 () Int)
(declare-fun x573 () Int)
(declare-fun x620 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x473 () Bool)
(declare-fun x1444 () Int)
(declare-fun x506 (Int) Int)
(declare-fun x816 () Int)
(declare-fun x721 () Int)
(declare-fun x1021 () Bool)
(declare-fun x1263 (x810) Int)
(declare-fun x668 () Int)
(declare-fun x1234 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x178 () Int)
(declare-fun x569 () x810)
(declare-fun x396 () Bool)
(declare-fun x613 () Int)
(declare-fun x714 () Int)
(declare-fun x984 () Int)
(declare-fun x1359 () Int)
(declare-fun x776 (Int) Int)
(declare-fun x167 () Bool)
(declare-fun x408 () x810)
(declare-fun x560 () Int)
(declare-fun x385 () Bool)
(declare-fun x1477 () Int)
(declare-fun x216 () Int)
(declare-fun x315 () Int)
(declare-fun x255 () Bool)
(declare-fun x558 () Int)
(declare-fun x564 () x810)
(declare-fun x751 () Bool)
(declare-fun x964 () Int)
(declare-fun x1109 () Int)
(declare-fun x681 () Int)
(declare-fun x489 () Int)
(declare-fun x1074 () Int)
(declare-fun x1237 () Bool)
(declare-fun x288 () Int)
(declare-fun x1094 () Int)
(declare-fun x948 () Bool)
(declare-fun x369 () x810)
(declare-fun x745 () Int)
(declare-fun x97 () Int)
(declare-fun x537 () Int)
(declare-fun x927 () Bool)
(declare-fun x995 () x810)
(declare-fun x11 () Int)
(declare-fun x334 () Bool)
(declare-fun x156 () Int)
(declare-fun x1015 () x810)
(declare-fun x1344 () Bool)
(declare-fun x1419 () Int)
(declare-fun x1104 () x810)
(declare-fun x496 () Int)
(declare-fun x707 () Int)
(declare-fun x245 () x810)
(declare-fun x866 () x810)
(declare-fun x400 () Int)
(declare-fun x1439 () Int)
(declare-fun x715 () Int)
(declare-fun x246 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x160 () Bool)
(declare-fun x212 () Int)
(declare-fun x449 () x810)
(declare-fun x580 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x1469 () Int)
(declare-fun x224 () Int)
(declare-fun x1413 () Int)
(declare-fun x822 () Bool)
(declare-fun x1197 () Bool)
(declare-fun x111 () Int)
(declare-fun x406 () Int)
(declare-fun x22 () Bool)
(declare-fun x357 () Int)
(declare-fun x1519 () x810)
(declare-fun x79 () Bool)
(declare-fun x994 () Int)
(declare-fun x1386 () x810)
(declare-fun x821 () Int)
(declare-fun x1136 () x810)
(declare-fun x656 () Int)
(declare-fun x126 () Bool)
(declare-fun x614 () Int)
(declare-fun x1515 () Int)
(declare-fun x775 () Int)
(declare-fun x1506 () Int)
(declare-fun x1176 () Int)
(declare-fun x322 () x810)
(declare-fun x1494 () Int)
(declare-fun x899 () Bool)
(declare-fun x961 () Int)
(declare-fun x470 () Bool)
(declare-fun x884 (Int) Int)
(declare-fun x823 () x810)
(declare-fun x1441 () Int)
(declare-fun x384 () Int)
(declare-fun x748 () x810)
(declare-fun x63 () Int)
(declare-fun x1229 () Int)
(declare-fun x830 () Bool)
(declare-fun x210 () Bool)
(declare-fun x38 () Bool)
(declare-fun x536 () Int)
(declare-fun x1383 () Int)
(declare-fun x1126 () Int)
(declare-fun x1028 () Int)
(declare-fun x615 () Bool)
(declare-fun x763 () x810)
(declare-fun x1112 () Int)
(declare-fun x767 () x810)
(declare-fun x1066 () Int)
(declare-fun x452 () Int)
(declare-fun x1227 () Bool)
(declare-fun x522 () Bool)
(declare-fun x58 () Int)
(declare-fun x371 () Int)
(declare-fun x677 () Bool)
(declare-fun x70 () Bool)
(declare-fun x1187 () x810)
(declare-fun x104 () Int)
(declare-fun x338 () Int)
(declare-fun x1262 () x810)
(declare-fun x862 () x810)
(declare-fun x336 () Int)
(declare-fun x1235 () Int)
(declare-fun x5 () Int)
(declare-fun x125 () Bool)
(declare-fun x1379 () Int)
(declare-fun x439 () Int)
(declare-fun x143 () Int)
(declare-fun x642 () Int)
(declare-fun x1269 () Bool)
(declare-fun x993 () x810)
(declare-fun x442 () Bool)
(declare-fun x766 () x810)
(declare-fun x29 () x810)
(declare-fun x1471 () x810)
(declare-fun x966 () Bool)
(declare-fun x1116 () Int)
(declare-fun x1046 () Int)
(declare-fun x136 () Bool)
(declare-fun x254 () Int)
(declare-fun x517 () Bool)
(declare-fun x397 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x950 () Bool)
(declare-fun x51 () Int)
(declare-fun x420 () Int)
(declare-fun x1105 () Int)
(declare-fun x622 () Int)
(declare-fun x264 () Int)
(declare-fun x1040 () Bool)
(declare-fun x978 () Int)
(declare-fun x68 () Int)
(declare-fun x1194 () Int)
(declare-fun x367 () Int)
(declare-fun x852 () Bool)
(declare-fun x555 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x459 () x810)
(declare-fun x240 () Bool)
(declare-fun x499 () Int)
(declare-fun x1411 () Int)
(declare-fun x636 () Int)
(declare-fun x1001 () Bool)
(declare-fun x171 () x810)
(declare-fun x1212 () Int)
(declare-fun x756 () Bool)
(declare-fun x411 () Bool)
(declare-fun x890 () Int)
(declare-fun x524 () x810)
(declare-fun x888 () x810)
(declare-fun x874 () Int)
(declare-fun x863 () Int)
(declare-fun x372 () Bool)
(declare-fun x635 () x810)
(declare-fun x633 () Bool)
(declare-fun x579 () Bool)
(declare-fun x690 () Bool)
(declare-fun x10 () Bool)
(declare-fun x588 () Int)
(declare-fun x1352 () Int)
(declare-fun x757 () Bool)
(declare-fun x287 () Int)
(declare-fun x705 () Int)
(declare-fun x131 () Int)
(declare-fun x1196 () Int)
(declare-fun x557 () x810)
(declare-fun x492 () Int)
(declare-fun x1336 () x810)
(declare-fun x664 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x1179 () x810)
(declare-fun x967 () Bool)
(declare-fun x1537 () x810)
(declare-fun x108 () Int)
(declare-fun x817 () Bool)
(declare-fun x220 () Int)
(declare-fun x784 () Bool)
(declare-fun x1195 () Int)
(declare-fun x1252 () Int)
(declare-fun x702 () Int)
(declare-fun x1424 () Int)
(declare-fun x1327 () Int)
(declare-fun x737 () Bool)
(declare-fun x250 () Bool)
(declare-fun x23 () Bool)
(declare-fun x226 () Bool)
(declare-fun x1562 () Bool)
(declare-fun x445 () Int)
(declare-fun x208 () Int)
(declare-fun x1185 () x810)
(declare-fun x546 () Int)
(declare-fun x1226 () Bool)
(declare-fun x1387 () x810)
(declare-fun x9 () Int)
(declare-fun x699 () Int)
(declare-fun x641 (x810) Int)
(declare-fun x1513 () Int)
(declare-fun x1260 () Int)
(declare-fun x813 () Bool)
(declare-fun x1357 () Int)
(declare-fun x562 () x810)
(declare-fun x71 () Int)
(declare-fun x1406 () Bool)
(declare-fun x1146 () Bool)
(declare-fun x582 () Int)
(declare-fun x1111 () Int)
(declare-fun x1062 () Int)
(declare-fun x493 () Int)
(declare-fun x1319 () Bool)
(declare-fun x1083 () Int)
(declare-fun x461 () Int)
(declare-fun x774 () Bool)
(declare-fun x1349 () Int)
(declare-fun x728 () Bool)
(declare-fun x577 () Int)
(declare-fun x929 () Int)
(declare-fun x87 () Int)
(declare-fun x1565 () x810)
(declare-fun x672 (Int) Int)
(declare-fun x339 () x810)
(declare-fun x404 () Bool)
(declare-fun x55 () Int)
(declare-fun x647 () Bool)
(declare-fun x640 () Int)
(declare-fun x711 () Int)
(declare-fun x1257 () Int)
(declare-fun x1462 () Bool)
(declare-fun x382 () x810)
(declare-fun x805 () Bool)
(declare-fun x1086 () x810)
(declare-fun x1527 () Int)
(declare-fun x222 () Bool)
(declare-fun x736 () Int)
(declare-fun x415 () Int)
(declare-fun x1501 () Int)
(declare-fun x391 () Bool)
(declare-fun x922 () Int)
(declare-fun x988 () Int)
(declare-fun x1231 () Int)
(declare-fun x725 () Int)
(declare-fun x468 () Int)
(declare-fun x547 () x810)
(declare-fun x278 () Int)
(declare-fun x221 () x810)
(declare-fun x740 () x810)
(declare-fun x542 () Int)
(declare-fun x457 () Int)
(declare-fun x818 () Int)
(declare-fun x1132 () Bool)
(declare-fun x1256 () Int)
(declare-fun x590 () Bool)
(declare-fun x825 () Int)
(declare-fun x1478 () x810)
(declare-fun x329 () Int)
(declare-fun x1241 () x810)
(declare-fun x239 () Int)
(declare-fun x6 () Bool)
(declare-fun x1401 () Int)
(declare-fun x1031 () Bool)
(declare-fun x508 () Int)
(declare-fun x1560 () Int)
(declare-fun x1170 () Int)
(declare-fun x1034 () x810)
(declare-fun x1266 () Int)
(declare-fun x1258 () Int)
(declare-fun x520 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x195 () Int)
(declare-fun x1162 () x810)
(declare-fun x808 () Int)
(declare-fun x1291 () Int)
(declare-fun x638 () Int)
(declare-fun x735 () x810)
(declare-fun x1385 () Bool)
(declare-fun x1556 (x810) Int)
(declare-fun x451 () x810)
(declare-fun x541 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x106 () Int)
(declare-fun x658 () x810)
(declare-fun x1087 () Int)
(declare-fun x780 () Int)
(declare-fun x791 () Int)
(declare-fun x343 () Bool)
(declare-fun x916 (Int Int) Int)
(declare-fun x565 () Int)
(declare-fun x230 () x810)
(declare-fun x1490 () Int)
(declare-fun x1085 () Int)
(declare-fun x1290 () Int)
(declare-fun x612 () x810)
(declare-fun x744 () Int)
(declare-fun x1418 () Bool)
(declare-fun x643 () x810)
(declare-fun x504 () Bool)
(declare-fun x730 () Bool)
(declare-fun x1093 () Int)
(declare-fun x1088 () Bool)
(declare-fun x438 () Int)
(declare-fun x650 () x810)
(declare-fun x722 () Int)
(declare-fun x337 () Bool)
(declare-fun x706 () Bool)
(declare-fun x1310 () x810)
(declare-fun x693 () Int)
(declare-fun x661 () Bool)
(declare-fun x882 () x810)
(declare-fun x370 () Int)
(declare-fun x174 () Int)
(declare-fun x320 () Bool)
(declare-fun x915 () Int)
(declare-fun x235 () Int)
(declare-fun x1486 () Int)
(declare-fun x82 () Bool)
(declare-fun x189 () Bool)
(declare-fun x566 () Bool)
(declare-fun x187 () Int)
(declare-fun x516 () Int)
(declare-fun x1505 () Int)
(declare-fun x453 () Bool)
(declare-fun x474 () Bool)
(declare-fun x860 () Bool)
(declare-fun x176 () Bool)
(declare-fun x1070 () x810)
(declare-fun x727 () Bool)
(declare-fun x666 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x1492 (x810) Int)
(declare-fun x307 () Int)
(declare-fun x1468 () x810)
(declare-fun x906 () Bool)
(declare-fun x842 () x810)
(declare-fun x593 () Bool)
(declare-fun x280 () Bool)
(declare-fun x663 () Bool)
(declare-fun x937 () Bool)
(declare-fun x8 () Bool)
(declare-fun x1554 () Int)
(declare-fun x651 () Int)
(declare-fun x1374 () Bool)
(declare-fun x479 () Int)
(declare-fun x1339 () Int)
(declare-fun x519 () Int)
(declare-fun x1114 () Int)
(declare-fun x1440 () Bool)
(declare-fun x392 () Int)
(declare-fun x1067 () Bool)
(declare-fun x865 () Int)
(declare-fun x165 () Int)
(declare-fun x685 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x309 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x59 (x810) Int)
(declare-fun x1544 () Bool)
(declare-fun x332 () Bool)
(declare-fun x970 () Bool)
(declare-fun x1366 () Int)
(declare-fun x773 () Bool)
(declare-fun x1558 () Int)
(declare-fun x1489 () x810)
(declare-fun x741 () Int)
(declare-fun x37 () x810)
(declare-fun x127 () Bool)
(declare-fun x1467 () x810)
(declare-fun x1378 () x810)
(declare-fun x173 (Int) Int)
(declare-fun x247 () x810)
(declare-fun x107 () Int)
(declare-fun x796 () Int)
(declare-fun x959 () Bool)
(declare-fun x534 (x810) Int)
(declare-fun x1019 () Bool)
(declare-fun x844 () x810)
(declare-fun x1389 () Bool)
(declare-fun x182 () Bool)
(declare-fun x1425 () Int)
(declare-fun x1041 () Bool)
(declare-fun x1069 () x810)
(declare-fun x632 () Int)
(declare-fun x624 () x810)
(declare-fun x951 () Int)
(declare-fun x543 () Int)
(declare-fun x91 () Bool)
(declare-fun x379 () Int)
(declare-fun x1010 () Bool)
(declare-fun x418 () Int)
(declare-fun x1036 () Int)
(declare-fun x1009 () x810)
(declare-fun x314 () Bool)
(declare-fun x1498 () x810)
(declare-fun x1404 () Int)
(declare-fun x366 () Int)
(declare-fun x1274 () Bool)
(declare-fun x939 () Bool)
(declare-fun x267 () Int)
(declare-fun x363 () Int)
(declare-fun x905 () Bool)
(declare-fun x40 () Bool)
(declare-fun x469 () Bool)
(declare-fun x514 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x1282 () Int)
(declare-fun x398 () Bool)
(declare-fun x1002 () Int)
(declare-fun x764 () Int)
(declare-fun x47 () x810)
(declare-fun x716 () Int)
(declare-fun x1550 () Int)
(declare-fun x1539 () Int)
(declare-fun x914 () Int)
(declare-fun x1473 () Int)
(declare-fun x1551 () Bool)
(declare-fun x1538 () Int)
(declare-fun x912 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x919 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x1043 () Int)
(declare-fun x273 () Bool)
(declare-fun x1177 () Int)
(declare-fun x186 () Int)
(declare-fun x483 () Bool)
(declare-fun x1314 () Int)
(declare-fun x1051 () Int)
(declare-fun x654 () x810)
(declare-fun x78 () Bool)
(declare-fun x1470 () Int)
(declare-fun x1521 () Int)
(declare-fun x1412 () Int)
(declare-fun x1496 () x810)
(declare-fun x1437 () Bool)
(declare-fun x971 () Bool)
(declare-fun x1452 () Bool)
(declare-fun x466 () x810)
(declare-fun x1474 () Int)
(declare-fun x498 () Int)
(declare-fun x1476 () Bool)
(declare-fun x1281 () x810)
(declare-fun x1155 () Bool)
(declare-fun x786 () Int)
(declare-fun x1393 () Bool)
(declare-fun x974 () Bool)
(declare-fun x223 () Int)
(declare-fun x1426 () Bool)
(declare-fun x611 (Int) Int)
(declare-fun x1072 () Bool)
(declare-fun x708 () Bool)
(declare-fun x1320 () Int)
(declare-fun x662 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x139 () Bool)
(declare-fun x13 () Bool)
(declare-fun x1205 () Int)
(declare-fun x1071 () x810)
(declare-fun x507 () Int)
(declare-fun x1518 () Int)
(declare-fun x1482 () Int)
(declare-fun x913 () Int)
(declare-fun x1318 () Int)
(declare-fun x1153 () Int)
(declare-fun x826 () Int)
(declare-fun x1092 () Int)
(declare-fun x258 () Int)
(declare-fun x1279 () Bool)
(declare-fun x214 () x810)
(declare-fun x251 () Bool)
(declare-fun x7 () x810)
(declare-fun x949 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x688 () Bool)
(declare-fun x378 () Int)
(declare-fun x243 () Int)
(declare-fun x713 () Int)
(declare-fun x325 () Int)
(declare-fun x835 () Bool)
(declare-fun x81 () Int)
(declare-fun x341 (x810) Int)
(declare-fun x102 () Int)
(declare-fun x1006 () Bool)
(declare-fun x471 () Bool)
(declare-fun x1068 () Int)
(declare-fun x1431 (x810) Int)
(declare-fun x260 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x891 () Int)
(declare-fun x175 () Bool)
(declare-fun x1228 () x810)
(declare-fun x864 () Int)
(declare-fun x1514 () Int)
(declare-fun x1530 () Int)
(declare-fun x600 () Bool)
(declare-fun x25 () Int)
(declare-fun x1524 () Int)
(declare-fun x924 () Int)
(declare-fun x74 () x810)
(declare-fun x1311 () Int)
(declare-fun x1304 () Int)
(declare-fun x1323 () x810)
(declare-fun x113 () Int)
(declare-fun x1510 () Bool)
(declare-fun x856 () x810)
(declare-fun x1095 () x810)
(declare-fun x521 () Int)
(declare-fun x938 () Bool)
(declare-fun x1428 () Bool)
(define-fun x324 ((x810 x810) (x1293 Int)) x810 (ite ((_ is x96) x810) (x96 (x293 x810) (+ (x414 x810) x1293)) (ite ((_ is x146) x810) (x146 (x236 x810) (x940 x810) (+ x1293 (x911 x810))) (x1522 (+ (x898 x810) x1293)))))
(define-fun x1566 ((x2 Int)) Int (ite (and (< x2 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x2 0)) x2 (- x2 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1107 ((x2 Int)) Int (ite (and (< x2 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2)) (+ x2 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2))
(define-fun x387 ((x1016 Int)) Bool (and (< x1016 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1016)))
(define-fun x1144 ((x1016 Int)) Bool (and (= (x881 x1016 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1016) (= x1016 (x881 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1016))))
(define-fun x848 ((x1016 Int)) Bool (and (= (x881 x1016 0) 0) (= (x881 0 x1016) 0)))
(define-fun x1430 ((x1016 Int)) Bool (= x1016 (x881 x1016 x1016)))
(define-fun x700 ((x1016 Int)) Bool (and (x1144 x1016) (x848 x1016) (x1430 x1016)))
(define-fun x114 ((x1016 Int)) Bool (= (x881 1461501637330902918203684832716283019655932542975 x1016) (x881 1461501637330902918203684832716283019655932542975 (x881 1461501637330902918203684832716283019655932542975 x1016))))
(define-fun x346 ((x1016 Int)) Bool (=> (and (>= x1016 0) (> 1461501637330902918203684832716283019655932542976 x1016)) (= x1016 (x881 1461501637330902918203684832716283019655932542975 x1016))))
(define-fun x109 ((x1016 Int)) Bool (=> (= (x881 1461501637330902918203684832716283019655932542975 x1016) x1016) (and (>= x1016 0) (< x1016 1461501637330902918203684832716283019655932542976))))
(define-fun x628 ((x1016 Int)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x1016) (< x1016 2923003274661805836407369665432566039311865085952)) (= (- x1016 1461501637330902918203684832716283019655932542976) (x881 1461501637330902918203684832716283019655932542975 x1016))))
(define-fun x1172 ((x1016 Int) (x1479 Int)) Bool (and (= (+ (* 1461501637330902918203684832716283019655932542976 x1479) (x881 1461501637330902918203684832716283019655932542975 x1016)) x1016) (<= 0 x1479)))
(define-fun x3 ((x1016 Int) (x797 Int)) Bool (and (x109 x1016) (x114 x1016) (x628 x1016) (x346 x1016) (x1172 x1016 x797)))
(define-fun x1220 ((x1016 Int) (x1479 Int)) Bool (= (x881 x1479 x1016) (x881 x1016 x1479)))
(define-fun x1303 ((x1016 Int) (x1479 Int)) Bool (and (=> (>= x1016 0) (<= (x881 x1016 x1479) x1016)) (=> (<= 0 x1479) (>= x1479 (x881 x1016 x1479))) (<= 0 (x881 x1016 x1479))))
(define-fun x1526 ((x1016 Int) (x1479 Int)) Bool (and (x1220 x1016 x1479) (x1303 x1016 x1479)))
(define-fun x1101 ((x1016 Int) (x797 Int)) Bool (and (x3 x1016 x797) (x1526 x1016 1461501637330902918203684832716283019655932542975)))
(define-fun x1102 ((x1016 Int)) Bool (= (x881 26959946667150639794667015087019630673637144422540572481103610249215 (x881 26959946667150639794667015087019630673637144422540572481103610249215 x1016)) (x881 26959946667150639794667015087019630673637144422540572481103610249215 x1016)))
(define-fun x161 ((x1016 Int)) Bool (=> (and (<= 0 x1016) (< x1016 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x881 26959946667150639794667015087019630673637144422540572481103610249215 x1016) x1016)))
(define-fun x889 ((x1016 Int)) Bool (=> (= x1016 (x881 26959946667150639794667015087019630673637144422540572481103610249215 x1016)) (and (>= x1016 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1016))))
(define-fun x1517 ((x1016 Int)) Bool (=> (and (<= 26959946667150639794667015087019630673637144422540572481103610249216 x1016) (< x1016 53919893334301279589334030174039261347274288845081144962207220498432)) (= (x881 26959946667150639794667015087019630673637144422540572481103610249215 x1016) (- x1016 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x45 ((x1016 Int) (x1479 Int)) Bool (and (>= x1479 0) (= (+ (* x1479 26959946667150639794667015087019630673637144422540572481103610249216) (x881 26959946667150639794667015087019630673637144422540572481103610249215 x1016)) x1016)))
(define-fun x1432 ((x1016 Int) (x797 Int)) Bool (and (x161 x1016) (x45 x1016 x797) (x1102 x1016) (x889 x1016) (x1517 x1016)))
(define-fun x458 ((x1016 Int) (x797 Int)) Bool (and (x1526 x1016 26959946667150639794667015087019630673637144422540572481103610249215) (x1432 x1016 x797)))
(define-fun x417 ((x1016 Int)) Bool (= (x881 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1016) (x881 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x881 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1016))))
(define-fun x358 ((x1016 Int)) Bool (=> (and (<= 0 x1016) (< x1016 32)) (= (x881 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1016) 0)))
(define-fun x284 ((x1016 Int) (x1479 Int) (x1217 Int) (x1377 Int)) Bool (and (>= x1217 0) (>= x1479 0) (= (x881 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1016) (* x1217 32)) (< x1217 3618502788666131106986593281521497120414687020801267626233049500247285301248) (<= 0 x1377) (< x1479 32) (= x1016 (+ x1479 (* x1377 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 32 x1217))) (> 1 x1377)))
(define-fun x576 ((x1016 Int) (x1561 Int) (x697 Int) (x27 Int)) Bool (and (x284 x1016 x1561 x697 x27) (x417 x1016) (x358 x1016)))
(define-fun x481 ((x1016 Int) (x1561 Int) (x697 Int) (x27 Int)) Bool (and (x1526 x1016 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x576 x1016 x1561 x697 x27)))
(define-fun x1189 ((x879 Int)) Int (x1225 x879))
(define-fun x980 ((x879 Int)) Int (ite (= 128 x879) x493 (x90 x879)))
(define-fun x968 ((x879 Int)) Int (ite (and (<= 160 x879) (> (+ 160 x531) x879)) (x1225 (+ (- x879 160) x261)) (x980 x879)))
(define-fun x581 ((x879 Int)) Int (ite (= x879 x1455) 0 (x968 x879)))
(define-fun x331 ((x879 Int)) Int (ite (and (>= x879 x669) (> (+ x278 x669) x879)) (x1225 (+ x1209 (- x879 x669))) (x1353 x879)))
(define-fun x460 ((x879 x810)) Int (ite (= x879 x422) x1554 (x1458 x879)))
(define-fun x954 ((x879 x810)) Int (ite (= x879 x247) x1554 (x1458 x879)))
(define-fun x377 ((x879 x810)) Int (ite (= x606 x879) x1554 (x1316 x879)))
(define-fun x275 ((x879 x810)) Int (ite (= x188 x879) x1554 (x1316 x879)))
(define-fun x1445 ((x879 x810)) Int (ite (and x1410 x598) (x1316 x879) (ite (and x167 x1127) (x1458 x879) (ite (and x263 (not x105)) (x377 x879) (x275 x879)))))
(define-fun x509 ((x879 x810)) Int (ite (= x451 x879) x329 (x1245 x879)))
(define-fun x1208 ((x879 x810)) Int (ite (= x1531 x879) x523 (x1263 x879)))
(define-fun x1099 ((x879 x810)) Int (ite (and x263 (not x105)) (x1208 x879) (x1263 x879)))
(define-fun x692 ((x879 x810)) Int (ite (and x598 x1410) (x1263 x879) (ite (and x1127 x167) (x1245 x879) (x1099 x879))))
(define-fun x443 ((x879 x810)) Int (ite (= x1143 x879) x915 (x534 x879)))
(define-fun x1048 ((x879 x810)) Int (ite (= x591 x879) x1114 (x341 x879)))
(define-fun x191 ((x879 x810)) Int (ite (and x598 x1410) (x341 x879) (ite (and x167 x1127) (x534 x879) (ite (and x263 x416) (x341 x879) (x1048 x879)))))
(define-fun x1065 ((x879 x810)) Int (ite (= x844 x879) x1554 (x1556 x879)))
(define-fun x717 ((x879 x810)) Int (ite (= x993 x879) x1554 (x1556 x879)))
(define-fun x1080 ((x879 x810)) Int (ite (= x1478 x879) x1554 (x1556 x879)))
(define-fun x1018 ((x879 x810)) Int (ite (= x599 x879) x1554 (x992 x879)))
(define-fun x1181 ((x879 x810)) Int (ite (= x879 x549) x1554 (x992 x879)))
(define-fun x754 ((x879 x810)) Int (ite (= x395 x879) x1554 (x992 x879)))
(define-fun x1108 ((x879 x810)) Int (ite (and x598 x1410) (x992 x879) (ite (and x167 x1127) (x1556 x879) (ite (and (not x815) x1393 (not x135)) (x1018 x879) (ite (and x815 x1393 (not x135)) (x1181 x879) (x754 x879))))))
(define-fun x782 ((x879 x810)) Int (ite (= x408 x879) x736 (x1296 x879)))
(define-fun x1135 ((x879 x810)) Int (ite (= x879 x842) x1066 (x771 x879)))
(define-fun x608 ((x879 x810)) Int (ite (and x598 x1410) (x771 x879) (ite (and x1127 x167) (x1296 x879) (ite (and x1393 x1175) (x771 x879) (x1135 x879)))))
(define-fun x497 ((x879 x810)) Int (ite (= x129 x879) x834 (x1431 x879)))
(define-fun x1207 ((x879 x810)) Int (ite (= x1179 x879) x202 (x886 x879)))
(define-fun x1206 ((x879 x810)) Int (ite (and x1393 (not x815) (not x135)) (x1207 x879) (x886 x879)))
(define-fun x1335 ((x879 x810)) Int (ite (and x1410 x598) (x886 x879) (ite (and x167 x1127) (x1431 x879) (x1206 x879))))
(define-fun x500 ((x879 x810)) Int (ite (= x342 x879) x286 (x503 x879)))
(define-fun x115 ((x879 x810)) Int (ite (= x1210 x879) x380 (x538 x879)))
(define-fun x110 ((x879 x810)) Int (ite (and x598 x1410) (x33 x879) (ite (and x167 x1127) (x344 x879) (ite (and (not x1122) (not x727) x875 x263) (x538 x879) (ite (and (not x875) (not x727) x263) (x33 x879) (ite (and x727 x263) (x33 x879) (x115 x879)))))))
(define-fun x619 ((x879 Int)) Int (ite (= x879 x1337) x596 (x1375 x879)))
(define-fun x1488 ((x879 Int)) Int (ite (= x1046 x879) x827 (x619 x879)))
(define-fun x1004 ((x879 Int)) Int (ite (and x1319 x80) (x1375 x879) (x1488 x879)))
(define-fun x475 ((x879 Int)) Int (ite (= x879 x1362) x66 (x1004 x879)))
(define-fun x1569 ((x879 Int)) Int (ite (= x879 x1326) x602 (x506 x879)))
(define-fun x1119 ((x879 Int)) Int (ite (= x879 x1382) x998 (x36 x879)))
(define-fun x918 ((x879 Int)) Int (ite (= x879 x318) x1446 (x1119 x879)))
(define-fun x1315 ((x879 Int)) Int (ite (and (not x815) x1393 (not x135)) (x918 x879) (ite (and (not x135) x1393 x815) (x918 x879) (x36 x879))))
(define-fun x1449 ((x879 Int)) Int (ite (= x1045 x879) x778 (x1315 x879)))
(define-fun x1038 ((x879 Int)) Int (ite (= x383 x879) x1438 (x884 x879)))
(define-fun x529 ((x879 Int)) Int (ite (and x1410 x598) (x36 x879) (ite (and x167 x1127) (x1375 x879) (ite (and x875 x263 (not x1122) (not x727)) (x884 x879) (ite (and (not x875) (not x727) x263) (x698 x879) (ite (and x263 x727) (x698 x879) (x1038 x879)))))))
(define-fun x1022 ((x879 Int)) Int (ite (= x863 x879) x1205 (x529 x879)))
(define-fun x1300 ((x879 Int)) Int (ite (= x755 x879) x871 (x1022 x879)))
(define-fun x1033 ((x879 Int)) Int (ite (= x879 x1242) x928 (x1300 x879)))
(define-fun x19 ((x879 Int)) Int (ite (= x941 x879) x769 (x1033 x879)))
(define-fun x1110 ((x879 Int)) Int (ite (= x1231 x879) 32 (x19 x879)))
(define-fun x561 ((x879 Int)) Int (ite (= x1037 x879) x1027 (x1368 x879)))
(define-fun x368 ((x879 Int)) Int (ite (= x1147 x879) 0 (x963 x879)))
(define-fun x154 ((x879 Int)) Int (ite (= x879 0) 1 (x776 x879)))
(define-fun x975 ((x879 Int)) Int (ite (= 0 x879) 1 (x776 x879)))
(define-fun x192 ((x879 Int)) Int (ite (and x84 x852) (x154 x879) (x975 x879)))
(define-fun x1259 ((x879 Int)) Int (ite (= x879 x1320) x1318 (x793 x879)))
(define-fun x1248 ((x879 Int)) Int (ite (= x879 x1320) x1062 (x793 x879)))
(define-fun x1096 ((x879 Int)) Int (ite (= x879 x1320) x772 (x783 x879)))
(define-fun x1142 ((x879 Int)) Int (ite (and (>= x879 x812) (> (+ x772 x812) x879)) (x192 (+ 0 (- x879 x812))) (x1096 x879)))
(define-fun x21 ((x879 Int)) Int (ite (and (not x411) x917) (x1142 x879) (x783 x879)))
(define-fun x1100 ((x879 Int)) Int (ite (= x879 x148) x874 (x21 x879)))
(define-fun x52 ((x879 Int)) Int (ite (= x879 x1295) x1379 (x1100 x879)))
(define-fun x687 ((x879 Int)) Int (ite (= x997 x879) x679 (x52 x879)))
(define-fun x894 ((x879 Int)) Int (ite (= x879 x187) x693 (x687 x879)))
(define-fun x609 ((x879 Int)) Int (ite (= x879 x1328) 32 (x894 x879)))
(define-fun x733 ((x879 Int)) Int (ite (= x631 x879) x1153 (x1322 x879)))
(define-fun x75 ((x879 Int)) Int (ite (= x879 x425) 0 (x1174 x879)))
(define-fun x1423 ((x879 x810)) Int (ite (= x879 (x269 274184521717934524641157099916833587206)) x384 (x926 x879)))
(define-fun x326 ((x879 x810)) Int (ite (= (x269 x825) x879) x1376 (x1423 x879)))
(define-fun x1563 ((x879 x810)) Int (ite (= (x269 x825) x879) x1568 (x326 x879)))
(define-fun x1186 ((x879 x810)) Int (ite (= (x269 274184521717934524641157099916833587206) x879) x1128 (x1563 x879)))
(define-fun x199 ((x879 x810)) Int (ite (= x879 (x269 274184521717934524641157099916833587206)) x440 (x1186 x879)))
(define-fun x605 ((x879 x810)) Int (ite (= x879 (x269 x542)) x1157 (x199 x879)))
(define-fun x60 ((x879 x810)) Int (ite (= x1386 x879) x432 (x1355 x879)))
(define-fun x1058 ((x879 x810)) Int (ite (= x302 x879) x1409 (x60 x879)))
(define-fun x1307 ((x879 x810)) Int (ite (and x84 x852) (x1058 x879) (x1355 x879)))
(define-fun x1182 ((x879 x810)) Int (ite (= x253 x879) x1085 (x1307 x879)))
(define-fun x1421 ((x879 Int)) Int (ite (= x879 0) 1 (x1288 x879)))
(define-fun x1306 ((x879 Int)) Int (ite (= x1140 x879) x1291 (x1233 x879)))
(define-fun x1148 ((x879 x810)) Int (ite (= x1468 x879) x1194 (x1397 x879)))
(define-fun x238 ((x879 x810)) Int (ite (= x515 x879) x4 (x1148 x879)))
(define-fun x1325 ((x879 x810)) Int (ite (and x852 x84) (x1397 x879) (x238 x879)))
(define-fun x814 ((x879 x810)) Int (ite (= x879 x454) x217 (x1325 x879)))
(define-fun x1216 ((x879 Int)) Int (ite (= 0 x879) 1 (x1288 x879)))
(define-fun x712 ((x879 Int)) Int (ite (= x1140 x879) x1105 (x1233 x879)))
(define-fun x738 ((x879 Int)) Int (ite (and x1213 x1091) (x1421 x879) (x1216 x879)))
(define-fun x1549 ((x879 x810)) Int (ite (= x879 (x269 x542)) x1061 (x605 x879)))
(define-fun x644 ((x879 Int)) Int (ite (= x879 x1140) x945 (x611 x879)))
(define-fun x485 ((x879 Int)) Int (ite (and (>= x879 x282) (< x879 (+ x945 x282))) (x738 (+ (- x879 x282) 0)) (x644 x879)))
(define-fun x1077 ((x879 Int)) Int (ite (and x332 x1567) (x611 x879) (x485 x879)))
(define-fun x896 ((x1016 Int)) Bool (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457 x1016)) (not (= 18446744073709551615 x1016)) (not (= x1016 2743102681)) (not (= x1016 649617121)) (not (= x1016 2061678023)) (> x1016 10000) (not (= 69947311 x1016)) (not (= x1016 2960351575)) (not (= 2418364589 x1016)) (not (= x1016 2835717307)) (not (= x1016 2211524764)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x1016)) (not (= 142201243 x1016)) (not (= x1016 274184521717934524641157099916833587206)) (not (= x1016 1889567281)) (not (= x1016 635128645)) (not (= 2690754053 x1016)) (not (= 2532887486 x1016)) (not (= x1016 87118632)) (not (= x1016 911411945)) (not (= x1016 274184521717934524641157099916833587214)) (not (= 1461501637330902918203684832716283019655932542975 x1016)) (not (= x1016 2512682246)) (not (= x1016 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 1968616202 x1016)) (not (= 604800 x1016)) (not (= x1016 2258409472)) (not (= 468353030 x1016)) (not (= x1016 2764855426)) (not (= x1016 2868243304)) (not (= x1016 1000000000000000000)) (not (= 759532456 x1016)) (not (= 274184521717934524641157099916833587218 x1016)) (not (= x1016 2798343961)) (not (= x1016 826074471)) (not (= 1986467848 x1016)) (not (= x1016 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x1016 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x1016 2293535753)) (not (= x1016 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1016 2514000705)) (not (= x1016 1517119036)) (not (= 2939843472 x1016)) (not (= x1016 3123789364))) (not ((_ is x1522) (x269 x1016)))))
(assert (= x1064 (and x251 (not x1483))))
(assert (=> (>= 10000 x256) (= (x269 x256) (x1522 x256))))
(assert (x387 x1474))
(assert (= (x1375 x705) (ite (and x689 x89) (x1353 x705) (x331 x705))))
(assert (=> (>= 10000 x445) (= (x269 x445) (x1522 x445))))
(assert (x387 x370))
(assert (x387 x731))
(assert (x387 x1029))
(assert (= (x992 x1268) (ite (and x1319 x80) (x1065 x1268) (ite (and x390 (not x1319) x80) (x717 x1268) (x1080 x1268)))))
(assert (= (ite (= x705 x405) x63 (x173 x705)) (x506 x705)))
(assert (x387 x1229))
(assert (x896 x867))
(assert (= x493 (x1353 x1359)))
(assert (= 2514000705 (x59 (x1522 2514000705))))
(assert (= (x1522 3123789364) (x269 3123789364)))
(assert (= (or (and x1407 x563) (and (not x967) x1060) (and x447 (not x470))) x1341))
(assert (x387 x446))
(assert (= (x793 x187) (ite (and x1380 (not x159) x409) (x963 x187) (x368 x187))))
(assert (x387 x455))
(assert (x387 x81))
(assert (x387 x1051))
(assert (x896 x825))
(assert (=> (<= x1176 10000) (= (x1522 x1176) (x269 x1176))))
(assert (= (ite (and (not x905) x1406 (not x260) x1007) (x506 x746) (ite (and (not x260) (not x1406) x1007) (x173 x746) (ite (and x1007 x260) (x173 x746) (x1569 x746)))) (x36 x746)))
(assert (x387 x999))
(assert (= (x269 142201243) (x1522 142201243)))
(assert (x387 x542))
(assert (= (x783 x1359) (ite (and x852 x84) (x1259 x1359) (x1248 x1359))))
(assert (x896 x306))
(assert (= (x59 (x269 x1116)) x1116))
(assert (= (ite (= x150 x405) x63 (x173 x150)) (x506 x150)))
(assert (=> (<= x571 10000) (= (x269 x571) (x1522 x571))))
(assert (= x487 (=> (and (= x843 (x1107 (- x978 1))) (= x590 (> x843 0))) (and (=> (not x590) x1073) (=> x590 x869)))))
(assert (=> (<= x436 10000) (= (x269 x436) (x1522 x436))))
(assert (=> (>= 10000 x145) (= (x1522 x145) (x269 x145))))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1131) (= x222 (= 0 x1131)) (= x41 (x146 (x269 x872) (x1522 6) 0)) (= x1329 (x881 1461501637330902918203684832716283019655932542975 x944)) (= x856 (x146 (x269 x1329) x41 0)) (= (x1458 x856) x1131) (<= 0 x1131)) (and (=> (and (= x872 x908) (not x222)) x897) (=> (and (not x1475) (= x1494 (x1107 (- x872 1))) (= x1475 (< 0 x1494)) x222) x246))) x361))
(assert (x387 x18))
(assert (= (ite (= x1024 x405) x63 (x173 x1024)) (x506 x1024)))
(assert (x387 x357))
(assert (x387 x955))
(assert (= 18446744073709551615 (x59 (x1522 18446744073709551615))))
(assert (x387 x1125))
(assert (x387 x243))
(assert (x387 x1454))
(assert (=> (>= 10000 x964) (= (x269 x964) (x1522 x964))))
(assert (x896 x872))
(assert (= 0 (x90 x1413)))
(assert (= x603 (x59 (x269 x603))))
(assert (x896 x371))
(assert (x387 x168))
(assert (= (ite (and (not x1351) x983 x621) (x1174 x746) (x75 x746)) (x1233 x746)))
(assert (x387 x1027))
(assert (= x1533 (=> (and (= (x992 x695) x366) (= (x146 (x269 x349) (x1522 7) 0) x339) (= x1340 (x146 (x269 x1134) x339 0)) (= x1134 (x881 1461501637330902918203684832716283019655932542975 x944)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x366) (= x1437 (= 0 x366)) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x54) (<= 0 x366) (= x695 (x146 (x269 x54) x1340 0))) (and (=> (and (not x1437) (= x525 x349)) x426) (=> x1437 x274)))))
(assert (= (x538 x1210) (ite (= x1210 x1535) x336 (x33 x1210))))
(assert (= (x1522 2939843472) (x269 2939843472)))
(assert (x387 x68))
(assert (x387 x166))
(assert (=> (>= 10000 x507) (= (x1522 x507) (x269 x507))))
(assert (x387 x288))
(assert (x896 x1525))
(assert (= (x269 604800) (x1522 604800)))
(assert (= 0 (x90 x478)))
(assert (x387 x921))
(assert (= (ite (= x1402 x1359) x493 (x581 x1402)) (x1353 x1402)))
(assert (x387 x659))
(assert (x896 274184521717934524641157099916833587206))
(assert (x387 x1170))
(assert (= x1044 (=> (and (= x1453 (= x249 0)) (or (and x1453 (= 0 x736) (= x1518 0)) (and (= (x1296 x1519) x141) (= (x146 (x269 x876) x1191 0) x1317) (= (x146 (x269 x507) x1317 0) x1519) (not x1453) (= x876 (x881 1461501637330902918203684832716283019655932542975 x944)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x141) (= x736 x141) (<= 0 x141) (= x1518 1) (= x1191 (x146 (x269 x249) (x1522 9) 0)) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x507)))) x396)))
(assert (= (x793 x478) (ite (and (not x159) x409 x1380) (x963 x478) (x368 x478))))
(assert (= (ite (= x1402 x560) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x1402)) (x989 x1402)))
(assert (= (x59 (x269 x427)) x427))
(assert (x896 x1429))
(assert (= (ite (= x457 x558) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x609 x457)) (x1106 x457)))
(assert (= (x269 2764855426) (x1522 2764855426)))
(assert (x387 x14))
(assert (x387 x1260))
(assert (x896 x1529))
(assert (= (ite (= x405 x1413) x63 (x173 x1413)) (x506 x1413)))
(assert (= (ite (and x409 x163 x1385 (not x877) x1380 x410) (x1368 x746) (ite (and x1385 x1380 (not x163) x410 x409) (x1151 x746) (ite (and x1380 (not x1385) x410 x409) (x672 x746) (ite (and x409 (not x410) x1380) (x989 x746) (x561 x746))))) (x963 x746)))
(assert (= x1040 (=> (= x626 (= 274184521717934524641157099916833587214 x542)) (and (=> (not x626) x1173) (=> (and (>= x678 0) (= (x814 x629) x678) (<= x913 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x976) (= 32 x945) (= x913 (x1325 x650)) (= x678 x304) (= (x146 (x269 274184521717934524641157099916833587206) (x1522 1) 0) x454) (= x1342 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x678 x1450))) (= (x1492 (x269 274184521717934524641157099916833587214)) x117) (not (= x824 649617121)) (not (= 1889567281 x824)) (= (x146 (x269 274184521717934524641157099916833587206) (x1522 1) 0) x650) (not x1342) (= x796 x874) (not (< x1366 4)) (= 274184521717934524641157099916833587206 x637) (not (< x824 649617121)) (< 0 x117) (= x372 (< x913 x62)) (not x1214) (= (x1107 (- x1366 4)) x1454) (= 1 x1261) (= x824 2835717307) x626 (= x902 (< x913 x1450)) (not x372) (= (x1107 (- x913 x62)) x217) (= 274184521717934524641157099916833587206 x258) (= x1366 68) (not x902) (= x1201 x1366) (>= 1461501637330902918203684832716283019655932542975 x796) (= x629 (x146 (x269 x796) (x1522 1) 0)) (= x1042 (+ x790 x304)) (= x796 x744) (<= 0 x913) (= x1450 x790) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x678) (= x1214 (or (and (< x1454 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1454) true)) (> x1454 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x62 x1450) (not (= 2514000705 x824)) (not (= x824 826074471)) (= x62 x1379) (= x1105 x965) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x678 x1450))) x1211)))))
(assert (x896 x87))
(assert (x387 x25))
(assert (= (x1522 1986467848) (x269 1986467848)))
(assert (= (x698 x1402) (ite (= x1402 x1473) x548 (x1449 x1402))))
(assert (= (x59 (x269 x1425)) x1425))
(assert (x387 x525))
(assert (x387 x392))
(assert (= (x59 (x269 x362)) x362))
(assert (x387 x1160))
(assert (x387 x1309))
(assert (x896 x1329))
(assert (x387 x812))
(assert (x896 x957))
(assert (=> (>= 10000 x625) (= (x269 x625) (x1522 x625))))
(assert (x387 x936))
(assert (= x588 (x59 (x269 x588))))
(assert (x387 x1266))
(assert (x387 x818))
(assert (x700 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x387 x816))
(assert (= (ite (and x689 x89) (x1353 x455) (x331 x455)) (x1375 x455)))
(assert (x387 x271))
(assert (x387 x477))
(assert (= x272 (x59 (x269 x272))))
(assert (x896 x891))
(assert (x387 x1244))
(assert (= (ite (and x1380 (not x159) x409) (x963 x174) (x368 x174)) (x793 x174)))
(assert (= (=> (and (= (x1556 x995) x1160) (<= 0 x1160) (= x830 (= 0 x1160)) (= x323 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x625) (= x995 (x146 (x269 x625) x658 0)) (= (x146 (x269 x843) (x1522 7) 0) x1145) (= x658 (x146 (x269 x323) x1145 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1160)) (and (=> (and (= (x1107 (- x843 1)) x1258) (not x1277) (= (< 0 x1258) x1277) x830) x1073) (=> (and (= x843 x492) (not x830)) x343))) x869))
(assert (= (x173 x1362) (ite (= x1362 x446) x237 (x475 x1362))))
(assert (=> (<= x577 10000) (= (x269 x577) (x1522 x577))))
(assert (x387 x432))
(assert (x387 x1270))
(assert (= (x963 x1359) (ite (and x1380 (not x877) x410 x409 x1385 x163) (x1368 x1359) (ite (and (not x163) x409 x1380 x1385 x410) (x1151 x1359) (ite (and (not x1385) x410 x409 x1380) (x672 x1359) (ite (and (not x410) x1380 x409) (x989 x1359) (x561 x1359)))))))
(assert (x700 x1530))
(assert (x896 x1548))
(assert (= 2764855426 (x59 (x1522 2764855426))))
(assert (x896 x1090))
(assert (x387 x35))
(assert (= (ite (and x347 x80) (x1296 x787) (x782 x787)) (x771 x787)))
(assert (= (=> (and (<= x638 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1558 x638) (= x1524 (x1492 (x269 274184521717934524641157099916833587206))) (not (= 69947311 x184)) (= x638 (x1296 x1537)) (>= 1461501637330902918203684832716283019655932542975 x1068) (= x1537 (x146 (x269 x1068) x47 0)) (< 0 x1524) (= 142201243 x184) (<= 0 x638) (>= 1461501637330902918203684832716283019655932542975 x461) (< x184 468353030) (= (x146 (x269 x461) x203 0) x47) (< x184 2293535753) (= (x146 (x269 x614) (x1522 9) 0) x203) (not (= 87118632 x184)) (> 911411945 x184)) (=> (and (= x1558 x981) (= x1020 x1529) (= x775 x1383) (= x496 x1255)) x207)) x169))
(assert (x387 x1482))
(assert (= (x59 (x269 x507)) x507))
(assert (x387 x665))
(assert (=> (>= 10000 x1116) (= (x1522 x1116) (x269 x1116))))
(assert (= (x59 (x269 x249)) x249))
(assert (= 69947311 (x59 (x1522 69947311))))
(assert (x896 x17))
(assert (=> (<= x1134 10000) (= (x269 x1134) (x1522 x1134))))
(assert (x387 x174))
(assert (= (ite (and x1319 x80) (x1065 x1203) (ite (and x390 (not x1319) x80) (x717 x1203) (x1080 x1203))) (x992 x1203)))
(assert (x896 x1134))
(assert (x896 x1176))
(assert (=> (>= 10000 x364) (= (x1522 x364) (x269 x364))))
(assert (x387 x418))
(assert (x387 x77))
(assert (= (or (and (not x409) x1380) x332 (and (not x621) x983)) x789))
(assert (= (ite (= x157 x455) x1391 (x698 x157)) (x884 x157)))
(assert (x387 x44))
(assert (= (=> (and (= x1567 (= x945 0)) (= x35 (x1077 x746)) (or (not x616) (and (= x68 (x1077 x457)) (= (= 0 x68) x1264) (= (not x1264) x1041) (= x68 x120) (= (ite x1041 1 0) x120) (= (x1566 (+ x746 32)) x457) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x111) true) (> 32 x111)) (> x111 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1077 x746) x111) x616 (< 0 x68))) x127 (not x552) (= x127 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1549 (x269 274184521717934524641157099916833587206)))) (= (< 0 x35) x616) (= (< 2 x493) x552) (or (and (= x282 (x1566 (+ 96 x1328))) (= x1140 x746) (not x1567)) (and (= 96 x746) x1567)) (not (= 0 x1261)) (= (x605 (x269 x542)) x1061)) x1276) x1211))
(assert (= (ite (= x735 x1348) x1424 (x344 x1348)) (x503 x1348)))
(assert (x387 x990))
(assert (x387 x254))
(assert (x387 x507))
(assert (x387 x1447))
(assert (x896 x768))
(assert (x896 x272))
(assert (= (ite (= x1470 x405) x63 (x173 x1470)) (x506 x1470)))
(assert (= (ite (= x1242 x560) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x1242)) (x989 x1242)))
(assert (x387 x1256))
(assert (x387 x871))
(assert (= 2743102681 (x59 (x1522 2743102681))))
(assert (= (x59 (x269 x571)) x571))
(assert (x387 x808))
(assert (= (x779 x746) (ite (= x746 x986) x1097 (x213 x746))))
(assert (= (x59 (x269 x15)) x15))
(assert (x387 x380))
(assert (x387 x321))
(assert (=> (>= 10000 x216) (= (x1522 x216) (x269 x216))))
(assert (= (ite (= x157 x446) x237 (x475 x157)) (x173 x157)))
(assert (x387 x587))
(assert (x387 x142))
(assert (= (ite (= x941 x446) x237 (x475 x941)) (x173 x941)))
(assert (= (x1522 2293535753) (x269 2293535753)))
(assert (= (x1316 x67) (ite (and x1237 x1007) (x460 x67) (x954 x67))))
(assert (= (x793 x157) (ite (and x1380 x409 (not x159)) (x963 x157) (x368 x157))))
(assert (x896 x701))
(assert (x387 x349))
(assert (x387 x1198))
(assert (= x376 (and x1127 (not x167))))
(assert (x387 x1255))
(assert (= (ite (= x174 x1359) x493 (x581 x174)) (x1353 x174)))
(assert (=> (>= 10000 x349) (= (x1522 x349) (x269 x349))))
(assert (x387 x121))
(assert (x387 x1066))
(assert (x387 x157))
(assert (= 759532456 (x59 (x1522 759532456))))
(assert (x387 x537))
(assert (= (x698 x746) (ite (= x746 x1473) x548 (x1449 x746))))
(assert (x387 x158))
(assert (= (ite (= x560 x1024) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x1024)) (x989 x1024)))
(assert (= x1127 x89))
(assert (x387 x853))
(assert (x387 x978))
(assert (= (x672 x746) (ite (= x1480 x746) x1412 (x989 x746))))
(assert (x387 x533))
(assert (x387 x307))
(assert (= (x1522 2211524764) (x269 2211524764)))
(assert (x387 x1042))
(assert (x387 x1399))
(assert (x700 x1370))
(assert (x387 x65))
(assert (x387 x1470))
(assert (x387 x908))
(assert (x387 x239))
(assert (=> (>= 10000 x1460) (= (x269 x1460) (x1522 x1460))))
(assert (x387 x1014))
(assert (= x1057 (x59 (x269 x1057))))
(assert (x896 x625))
(assert (=> (>= 10000 x741) (= (x1522 x741) (x269 x741))))
(assert (x387 x150))
(assert (= (x59 (x1522 1986467848)) 1986467848))
(assert (= (=> (and (or (and (>= x859 0) (>= x827 0) (= (= 0 x165) x390) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x596) (= (x324 x459 1) x1365) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x1055) (= x596 (x641 x459)) (or (and x390 (= (x881 1461501637330902918203684832716283019655932542975 x1092) x450) (= (x146 (x269 x1477) x895 0) x1443) (= x895 (x146 (x269 x978) (x1522 7) 0)) (= x829 x1362) (= (x881 1461501637330902918203684832716283019655932542975 x944) x1477) (= (x146 (x269 x450) x1443 0) x993)) (and (= x1015 (x146 (x269 x978) (x1522 3) 0)) (= x768 (x881 1461501637330902918203684832716283019655932542975 x1092)) (= x85 (x146 (x269 x216) x1015 0)) (= x216 (x881 1461501637330902918203684832716283019655932542975 x944)) (= x1478 (x146 (x269 x768) x972 0)) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x1256) (not x390) (< (* x736 x165) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x829 x1362) (= x97 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x146 (x269 x97) x155 0) x972) (= x224 (* x165 x736)) (= x155 (x146 (x269 x978) (x1522 7) 0)) (= x834 x224) (= x129 (x146 (x269 x1256) x85 0)))) (= x178 (x881 1461501637330902918203684832716283019655932542975 x944)) (= x673 (> x279 x859)) (or (and (or (and (not (> x859 x220)) (= (ite (< x1126 604800) x1126 604800) x121) (= 604800 x1047) (= x1126 (x1107 (- x220 x859))) (= x165 x121) (not x1088)) (and (= x267 x165) (not (< x220 x166)) (= x166 (x1488 x1337)) x1088 (= x267 (x1107 (- x220 x166))))) x673 (or (and (not x136) (= x220 x1554)) (and (= (x1488 x1046) x1177) (= x220 x1177) x136)) (= x136 (> x1554 x1170)) (= (= 0 x859) x1088) (= x1170 (x1488 x1046))) (and (not x673) (= 0 x165))) (= (x146 (x269 x978) (x1522 7) 0) x322) (= x829 (x1566 (+ 64 x1337))) (<= x827 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x859 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x596 0) (= x279 (x1488 x1046)) (= (x146 (x269 x1055) x643 0) x1471) (= x1046 (x1566 (+ 32 x1337))) (= x459 (x146 (x269 x978) (x1522 1) 0)) (= x643 (x146 (x269 x178) x322 0)) (not x1319) (= (x893 x1365) x827) (= x859 (x1556 x1471))) (and (= (x146 (x269 x978) (x1522 7) 0) x544) (= x1337 x1362) x1319 (= (x881 1461501637330902918203684832716283019655932542975 x1092) x445) (= x844 (x146 (x269 x445) x1130 0)) (= x565 (x881 1461501637330902918203684832716283019655932542975 x944)) (= x1130 (x146 (x269 x565) x544 0)))) (or (and (= x502 (x146 (x269 x978) (x1522 9) 0)) (= x245 (x146 (x269 x1123) x502 0)) (not x347) (= x1123 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x731) (= (x146 (x269 x731) x245 0) x408)) x347) (= x347 (= 0 x1518)) (= x1319 (= x736 0))) x580) x396))
(assert (= x1290 (x59 (x269 x1290))))
(assert (x896 x565))
(assert (x387 x1020))
(assert (=> (>= 10000 x796) (= (x269 x796) (x1522 x796))))
(assert (= (x1353 x1326) (ite (= x1326 x1359) x493 (x581 x1326))))
(assert (= (x1522 911411945) (x269 911411945)))
(assert (x387 x1111))
(assert (x387 x1074))
(assert (= (x1522 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x269 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x387 x438))
(assert (x387 x296))
(assert (x387 x1505))
(assert (= x1059 x404))
(assert (x387 x1085))
(assert (x387 x120))
(assert (x387 x50))
(assert (x387 x428))
(assert (x387 x215))
(assert (x387 x674))
(assert (x387 x839))
(assert (= x582 (x59 (x269 x582))))
(assert (x896 x1290))
(assert (= (x59 (x269 x482)) x482))
(assert (x387 x1359))
(assert (= (ite (= x560 x1413) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x1413)) (x989 x1413)))
(assert (x387 x1530))
(assert (x387 x308))
(assert (x387 x768))
(assert (=> (>= 10000 x333) (= (x1522 x333) (x269 x333))))
(assert (x387 x57))
(assert (= (ite (= x1359 x1470) x493 (x581 x1470)) (x1353 x1470)))
(assert (x387 x187))
(assert (x387 x678))
(assert (x896 x1240))
(assert (x387 x1539))
(assert (= 826074471 (x59 (x1522 826074471))))
(assert (= (x59 (x269 x625)) x625))
(assert (x387 x914))
(assert (= (x59 (x1522 2690754053)) 2690754053))
(assert (x387 x1215))
(assert (= x1514 (x59 (x269 x1514))))
(assert (x387 x527))
(assert (x387 x262))
(assert (= x404 x686))
(assert (x700 x674))
(assert (= (x698 x187) (ite (= x187 x1473) x548 (x1449 x187))))
(assert (x387 x721))
(assert (x387 x521))
(assert (= (ite (= x746 x749) x636 (x672 x746)) (x1151 x746)))
(assert (x458 x674 x1311))
(assert (= x504 x70))
(assert (= (+ (x59 x1496) 1) (x59 (x324 x1496 1))))
(assert (x387 x565))
(assert (x387 x1013))
(assert (x387 x461))
(assert (x387 x421))
(assert (x387 x944))
(assert (= (x90 x705) 0))
(assert (= (x989 x478) (ite (= x560 x478) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x478))))
(assert (x387 x1451))
(assert (x387 x699))
(assert (x387 x1367))
(assert (x387 x930))
(assert (x387 x108))
(assert (x387 x1513))
(assert (=> (<= x249 10000) (= (x269 x249) (x1522 x249))))
(assert (x896 x30))
(assert (= x1485 (=> (and (< x1447 2690754053) (<= 0 x1050) (> 2960351575 x1447) (> x955 0) (= x1447 2532887486) (not (= 2293535753 x1447)) (not (= 2512682246 x1447)) (= x1050 x290) (= x1378 (x146 (x269 x958) (x1522 4) 0)) (not (< x1447 2293535753)) (not (= 2418364589 x1447)) (<= x1505 1461501637330902918203684832716283019655932542975) (<= x1050 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x742 (x146 (x269 x1505) x1500 0)) (>= 1461501637330902918203684832716283019655932542975 x957) (= x955 (x1492 (x269 274184521717934524641157099916833587206))) (= (x146 (x269 x1116) x742 0) x1034) (= (x344 x1034) x1050) (= x1500 (x146 (x269 x957) x1378 0)) (>= 1461501637330902918203684832716283019655932542975 x1116)) (=> (and (= x530 (= 0 x315)) (not (> 1 x231)) (not (< x452 2690754053)) (= (x1107 (- x1209 4)) x1043) (not (= 2743102681 x452)) (not (> x978 x743)) (= x1149 (x1566 (+ x261 x1312))) (= x546 (x1107 (- x231 1))) (= (or x833 (not x530)) x904) (or x689 (and (= (mod (* 32 x493) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x278) (not x689) (= x669 (x1566 (+ x313 160))))) (= (= 0 x493) x689) (<= 0 x1511) (= x335 x762) (not (> x493 18446744073709551615)) (<= 0 x468) (= x147 x630) (= x833 (and x1190 x540)) (= (<= x1209 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (= (x1566 (+ x122 36)) x261) (= x553 x406) (not (< 18446744073709551615 x77)) (not (< x1209 4)) (>= 1461501637330902918203684832716283019655932542975 x1092) (= (x1225 x321) x493) (>= x1463 0) (not (= x452 2798343961)) (= x321 (x1566 (+ 4 x122))) (= (x1566 (+ x531 160)) x1455) (= x743 x1229) (= x1190 (= 0 x298)) (= x808 x944) (not (> 2293535753 x452)) (not (= 2690754053 x452)) (= 2939843472 x452) (= x290 x1219) (= (x1566 (+ x122 35)) x1439) (< 163 x1209) (= x540 (and x255 x539)) x1476 (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1043) true) (< x1043 160)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1043))) (= 0 x1451) (= x122 x77) (= x406 x315) (= x531 (mod (* x493 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x734 x981) (not (< x1209 x1149)) (= x51 x978) (< x743 x468) (= x264 128) (= x1398 (x1492 (x269 274184521717934524641157099916833587206))) x904 (= x1304 (x1566 (+ x531 32))) (= x699 x944) (= 0 x535) (>= 1461501637330902918203684832716283019655932542975 x944) (= x1359 (x1566 (+ x227 160))) (= x118 0) (= x743 x325) (= x1219 x298) (= x978 x716) (= x46 x1554) (= x1511 x147) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x468) (= (mod (* 32 x493) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x227) (= x255 (= 0 x235)) (<= 0 x642) (not (= x452 2868243304)) (<= x642 1461501637330902918203684832716283019655932542975) (= x724 0) (= x268 x235) (= x707 x642) (= x632 x1092) (= (x1566 (+ x1304 x1359)) x1337) (= (mod (* x493 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1312) (= x1092 x722) (= x231 (x581 128)) (= x271 x1554) (<= x1463 1461501637330902918203684832716283019655932542975) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1209) (<= x1439 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1209 x1439)) (and (<= x1209 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1439 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x539 (= 0 x734)) (>= 1461501637330902918203684832716283019655932542975 x1511) (= x335 0) (> 2960351575 x452) (= x313 (x1566 (+ x227 32))) (or (not x1333) (and x1333 (= (> x231 1) x352) (or (and (not (= x597 x868)) (= x597 (x881 1461501637330902918203684832716283019655932542975 x839)) (< 1 x1082) (= (x881 1461501637330902918203684832716283019655932542975 x1530) x868) x352 (> x922 0) (= x720 (< 2 x231)) (= x839 (x581 160)) (= (x581 128) x1082) (= (x581 128) x922) (= (x581 192) x1530) (or (and (< 2 x1501) (not (= x1503 x935)) x720 (= x841 (x581 224)) (= (x881 1461501637330902918203684832716283019655932542975 x841) x1503) (< 0 x951) (not x505) (= x1093 (x581 160)) (= x505 (< 3 x231)) (= x935 (x881 1461501637330902918203684832716283019655932542975 x1093)) (= x951 (x581 128)) (= (x581 128) x1501)) (not x720))) (not x352)) (= x910 (x1107 (- x231 1))) (not (< x231 1)) (not (< 1 x910)))) (not (= 2764855426 x452)) (> x1398 0) (= x1476 (>= x271 x553)) (= (> x546 0) x1333)) x559))))
(assert (x387 x568))
(assert (x387 x1128))
(assert (x387 x1363))
(assert (=> (>= 10000 x317) (= (x269 x317) (x1522 x317))))
(assert (=> (<= x1570 10000) (= (x269 x1570) (x1522 x1570))))
(assert (x387 x152))
(assert (= x843 (x59 (x269 x843))))
(assert (= x1540 (x59 (x269 x1540))))
(assert (x700 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x577 (x59 (x269 x577))))
(assert (x896 x739))
(assert (= (x59 (x269 x54)) x54))
(assert (= (ite (= x65 x1538) x656 (x779 x65)) (x1322 x65)))
(assert (x387 x258))
(assert (x387 x1267))
(assert (x896 x676))
(assert (x896 x826))
(assert (= (x269 635128645) (x1522 635128645)))
(assert (x387 x553))
(assert (x896 x76))
(assert (x387 x851))
(assert (x387 x1484))
(assert (x387 x117))
(assert (= 0 (x90 x1024)))
(assert (x387 x1068))
(assert (x387 x769))
(assert (= (x59 (x269 x796)) x796))
(assert (x387 x367))
(assert (x387 x646))
(assert (x896 x223))
(assert (=> (<= x93 10000) (= (x269 x93) (x1522 x93))))
(assert (= (x59 (x269 x30)) x30))
(assert (= (x783 x1402) (ite (and x84 x852) (x1259 x1402) (x1248 x1402))))
(assert (x387 x707))
(assert (x387 x496))
(assert (= (ite (= x1309 x187) x64 (x1151 x187)) (x1368 x187)))
(assert (x387 x330))
(assert (x1526 x1287 x375))
(assert (= (x1522 26959946667150639794667015087019630673637144422540572481103610249215) (x269 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (>= 10000 x1017) (= (x1522 x1017) (x269 x1017))))
(assert (x896 x54))
(assert (= (ite (= x1535 x1348) x336 (x33 x1348)) (x538 x1348)))
(assert (= (x59 (x269 x1525)) x1525))
(assert (= (x989 x746) (ite (= x560 x746) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x746))))
(assert (x896 x1244))
(assert (=> (<= x1273 10000) (= (x269 x1273) (x1522 x1273))))
(assert (= (x1316 x777) (ite (and x1237 x1007) (x460 x777) (x954 x777))))
(assert (= (x1151 x1359) (ite (= x749 x1359) x636 (x672 x1359))))
(assert (x1101 x1092 x952))
(assert (x896 x1256))
(assert (= (x59 (x269 x364)) x364))
(assert (= (ite (and x689 x89) (x1353 x1413) (x331 x1413)) (x1375 x1413)))
(assert (x387 x1304))
(assert (= x206 x1006))
(assert (x387 x826))
(assert (x387 x732))
(assert (= (x59 (x269 x1442)) x1442))
(assert (x387 x300))
(assert (x387 x743))
(assert (x387 x772))
(assert (x387 x715))
(assert (= 274184521717934524641157099916833587206 (x59 (x269 274184521717934524641157099916833587206))))
(assert (= (ite (= x746 x446) x237 (x475 x746)) (x173 x746)))
(assert (x387 x1383))
(assert (x896 x1171))
(assert (x387 x702))
(assert (= (ite (= x88 x560) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x88)) (x989 x88)))
(assert (= x1028 (x59 (x269 x1028))))
(assert (=> (>= 10000 x450) (= (x269 x450) (x1522 x450))))
(assert (x387 x379))
(assert (x387 x998))
(assert (= (x884 x88) (ite (= x455 x88) x1391 (x698 x88))))
(assert (= (x269 2532887486) (x1522 2532887486)))
(assert (= (x36 x1402) (ite (and x1007 (not x905) x1406 (not x260)) (x506 x1402) (ite (and (not x260) (not x1406) x1007) (x173 x1402) (ite (and x260 x1007) (x173 x1402) (x1569 x1402))))))
(assert (=> (>= 10000 x1094) (= (x1522 x1094) (x269 x1094))))
(assert (=> (>= 10000 x323) (= (x1522 x323) (x269 x323))))
(assert (x896 x370))
(assert (= (ite (and x89 x689) (x1353 x187) (x331 x187)) (x1375 x187)))
(assert (x896 x1508))
(assert (= x1508 (x59 (x269 x1508))))
(assert (x896 x786))
(assert (x387 x1459))
(assert (= (x611 x746) (ite (and x1213 x1091) (x1306 x746) (x712 x746))))
(assert (= (ite (= x749 x705) x636 (x672 x705)) (x1151 x705)))
(assert (x387 x932))
(assert (= (x793 x705) (ite (and x409 x1380 (not x159)) (x963 x705) (x368 x705))))
(assert (x387 x1235))
(assert (= (=> (= x1161 (= x825 274184521717934524641157099916833587214)) (and (=> (not x1161) x522) (=> (and (not (= 2514000705 x144)) (= x14 (x1148 x1095)) (not x817) (= x57 68) (< 0 x574) x1161 (= x225 (x1397 x1152)) (= x1125 x87) (= x1515 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (+ x849 x104) x4) (not (= x144 826074471)) (>= 1461501637330902918203684832716283019655932542975 x87) (= x1152 (x146 (x269 274184521717934524641157099916833587206) (x1522 1) 0)) (= (< x225 x858) x592) (= x57 x613) (<= 0 x14) (not (> 4 x57)) (= 2835717307 x144) (= x1103 274184521717934524641157099916833587206) (not x592) (= x858 x849) (= x181 (>= (+ x14 x858) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (= x144 649617121)) (>= x225 0) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x770)) (< x770 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x770)) x1464) (not (= 1889567281 x144)) (= x574 (x1492 (x269 274184521717934524641157099916833587214))) (not x1464) (= (> x1416 x225) x817) (= x871 x1416) (= x14 x104) (<= x14 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x146 (x269 x87) (x1522 1) 0) x515) (not (> 649617121 x144)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x14 x858)) (= (x1107 (- x57 4)) x770) (= x1194 (x1107 (- x225 x1416))) (= 1 x809) (= x890 274184521717934524641157099916833587206) (not x181) (= x858 x1416) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x225) (= x1468 (x146 (x269 274184521717934524641157099916833587206) (x1522 1) 0)) (= (x146 (x269 x87) (x1522 1) 0) x1095) (= 32 x772) (= x1062 x319) (= x1205 x87)) x1222))) x297))
(assert (= (x269 1461501637330902918203684832716283019655932542975) (x1522 1461501637330902918203684832716283019655932542975)))
(assert (x387 x102))
(assert (x387 x9))
(assert (x387 x1196))
(assert (x387 x429))
(assert (= (or (and (not x960) x228) (and x373 (not x226)) (and x222 x1396)) x40))
(assert (= (x59 (x269 x143)) x143))
(assert (= (ite (and x1007 x1406 (not x260) (not x905)) (x506 x65) (ite (and x1007 (not x1406) (not x260)) (x173 x65) (ite (and x260 x1007) (x173 x65) (x1569 x65)))) (x36 x65)))
(assert (x387 x12))
(assert (x387 x317))
(assert (x387 x1231))
(assert (= (x672 x1359) (ite (= x1480 x1359) x1412 (x989 x1359))))
(assert (x387 x1446))
(assert (= (ite (= x986 x65) x1097 (x213 x65)) (x779 x65)))
(assert (x896 x958))
(assert (x387 x1412))
(assert (= (and x1437 x20) x1510))
(assert (x387 x961))
(assert (x896 x1477))
(assert (= (ite (and (not x877) x163 x409 x1380 x410 x1385) (x1368 x187) (ite (and (not x163) x409 x1380 x1385 x410) (x1151 x187) (ite (and (not x1385) x409 x410 x1380) (x672 x187) (ite (and x1380 (not x410) x409) (x989 x187) (x561 x187))))) (x963 x187)))
(assert (= (x1522 1889567281) (x269 1889567281)))
(assert (=> (>= 10000 x1508) (= (x269 x1508) (x1522 x1508))))
(assert (x387 x30))
(assert (= (=> (and (= x330 (x1316 x67)) (= (x146 (x269 x826) x1200 0) x67) (<= 0 x330) (= (= 0 x330) x1407) (<= x330 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x146 (x269 x1525) (x1522 6) 0) x1200) (= (x881 1461501637330902918203684832716283019655932542975 x944) x826)) (and (=> (and (= x82 (< 0 x1168)) x1407 (not x82) (= (x1107 (- x1525 1)) x1168)) x1552) (=> (and (= x1525 x1002) (not x1407)) x667))) x1227))
(assert (x387 x1116))
(assert (x387 x1017))
(assert (x387 x1137))
(assert (x387 x821))
(assert (= (x503 x138) (ite (= x138 x735) x1424 (x344 x138))))
(assert (x896 x400))
(assert (=> (<= x1525 10000) (= (x269 x1525) (x1522 x1525))))
(assert (x387 x965))
(assert (x387 x1082))
(assert (= (ite (= x558 x997) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x609 x997)) (x1106 x997)))
(assert (x387 x843))
(assert (= (ite (= x478 x749) x636 (x672 x478)) (x1151 x478)))
(assert (x387 x335))
(assert (x387 x329))
(assert (= (x59 (x269 x55)) x55))
(assert (= x1036 (x59 (x269 x1036))))
(assert (= (ite (= x1309 x746) x64 (x1151 x746)) (x1368 x746)))
(assert (= (x884 x174) (ite (= x174 x455) x1391 (x698 x174))))
(assert (x387 x225))
(assert (= (ite (= x455 x405) x63 (x173 x455)) (x506 x455)))
(assert (= (ite (= x446 x187) x237 (x475 x187)) (x173 x187)))
(assert (= (ite (= x405 x133) x63 (x173 x133)) (x506 x133)))
(assert (= (x59 (x269 x683)) x683))
(assert (= (ite (= x1309 x1402) x64 (x1151 x1402)) (x1368 x1402)))
(assert (x387 x261))
(assert (= (x90 x941) 0))
(assert (= x251 (and x598 (not x1410))))
(assert (x896 x445))
(assert (= (x59 (x1522 87118632)) 87118632))
(assert (= x353 (x59 (x269 x353))))
(assert (=> (<= x891 10000) (= (x269 x891) (x1522 x891))))
(assert (x896 x731))
(assert (x387 x746))
(assert (x896 x507))
(assert (x387 x223))
(assert (x387 x890))
(assert (= (ite (= x455 x150) x1391 (x698 x150)) (x884 x150)))
(assert (x387 x1334))
(assert (x387 x1195))
(assert (= (ite (= x1359 x1024) x493 (x581 x1024)) (x1353 x1024)))
(assert (x387 x613))
(assert (x387 x1408))
(assert (x387 x636))
(assert (= (x1368 x88) (ite (= x1309 x88) x64 (x1151 x88))))
(assert (= (ite (= x157 x1473) x548 (x1449 x157)) (x698 x157)))
(assert (x387 x1411))
(assert (x387 x1169))
(assert (= (or x26 (and x1483 x251)) x1393))
(assert (= (ite (and x84 x852) (x1259 x187) (x1248 x187)) (x783 x187)))
(assert (x387 x988))
(assert (= x447 (and x593 x1146)))
(assert (x387 x478))
(assert (= (or x1341 x10) x822))
(assert (= (ite (and (not x159) x1380 x409) (x963 x65) (x368 x65)) (x793 x65)))
(assert (= x1256 (x59 (x269 x1256))))
(assert (= (ite (= x446 x457) x237 (x475 x457)) (x173 x457)))
(assert (= (ite (= x405 x1359) x493 (x581 x405)) (x1353 x405)))
(assert (= (x59 (x269 x300)) x300))
(assert (x387 x1194))
(assert (=> (>= 10000 x818) (= (x269 x818) (x1522 x818))))
(assert (= x32 (or (and x1510 (not x1435)) (and (not x1283) x1064) (and x661 x854))))
(assert (x387 x1461))
(assert (x387 x433))
(assert (= (ite (and x89 x689) (x1353 x150) (x331 x150)) (x1375 x150)))
(assert (= (x59 (x269 x953)) x953))
(assert (x387 x1205))
(assert (x387 x642))
(assert (x896 x587))
(assert (= x1091 (and x983 x621)))
(assert (= (x59 (x269 x1134)) x1134))
(assert (= (x989 x174) (ite (= x560 x174) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x174))))
(assert (x387 x1361))
(assert (x387 x282))
(assert (=> (<= x362 10000) (= (x1522 x362) (x269 x362))))
(assert (=> (>= 10000 x178) (= (x1522 x178) (x269 x178))))
(assert (= (x33 x138) (ite (and x1406 (not x260) x1007 (not x905)) (x503 x138) (ite (and (not x260) x1007 (not x1406)) (x344 x138) (ite (and x260 x1007) (x344 x138) (x500 x138))))))
(assert (x896 x1054))
(assert (= (ite (= x1309 x705) x64 (x1151 x705)) (x1368 x705)))
(assert (x387 x388))
(assert (x896 x482))
(assert (x387 x365))
(assert (x387 x235))
(assert (x387 x870))
(assert (x387 x295))
(assert (= (x59 (x269 x1505)) x1505))
(assert (x896 x1425))
(assert true)
(assert (x896 x364))
(assert (x387 x1326))
(assert (=> (<= x786 10000) (= (x269 x786) (x1522 x786))))
(assert (x387 x639))
(assert (x387 x1286))
(assert (=> (>= 10000 x76) (= (x269 x76) (x1522 x76))))
(assert (= (ite (and x1007 (not x905) (not x260) x1406) (x506 x383) (ite (and (not x1406) x1007 (not x260)) (x173 x383) (ite (and x1007 x260) (x173 x383) (x1569 x383)))) (x36 x383)))
(assert (=> (<= x1448 10000) (= (x269 x1448) (x1522 x1448))))
(assert (= (ite (= x560 x65) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x65)) (x989 x65)))
(assert (x387 x1511))
(assert (= (ite (= x446 x65) x237 (x475 x65)) (x173 x65)))
(assert (x387 x468))
(assert (=> (>= 10000 x1425) (= (x1522 x1425) (x269 x1425))))
(assert (x387 x632))
(assert (= (x884 x1024) (ite (= x455 x1024) x1391 (x698 x1024))))
(assert (= (x59 (x269 x648)) x648))
(assert (x896 x953))
(assert (x387 x350))
(assert (= (ite (and (not x905) (not x260) x1007 x1406) (x506 x174) (ite (and (not x1406) (not x260) x1007) (x173 x174) (ite (and x1007 x260) (x173 x174) (x1569 x174)))) (x36 x174)))
(assert (x387 x1402))
(assert (=> (<= x461 10000) (= (x1522 x461) (x269 x461))))
(assert (x387 x872))
(assert (= (x59 (x269 x445)) x445))
(assert (= (ite (= x1359 x746) x493 (x581 x746)) (x1353 x746)))
(assert (= (and x189 x590) x1512))
(assert (x387 x1297))
(assert (= (x884 x457) (ite (= x457 x455) x1391 (x698 x457))))
(assert (x896 x1487))
(assert (x896 x323))
(assert (= (ite (and x689 x89) (x1353 x1359) (x331 x1359)) (x1375 x1359)))
(assert (= x731 (x59 (x269 x731))))
(assert (= x883 (x59 (x269 x883))))
(assert (=> (<= x1055 10000) (= (x269 x1055) (x1522 x1055))))
(assert (x387 x178))
(assert (= (x173 x446) x237))
(assert (= (x269 274184521717934524641157099916833587218) (x1522 274184521717934524641157099916833587218)))
(assert (x387 x338))
(assert (= x852 (and x409 x1380)))
(assert (= (x269 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1522 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1101 x1530 x1184))
(assert (= 2512682246 (x59 (x1522 2512682246))))
(assert (= x1329 (x59 (x269 x1329))))
(assert (x896 x249))
(assert (x387 x278))
(assert (= x580 (=> (and (<= 0 x468) (not (> x51 x468)) (= x320 (= x718 0)) (= (x146 (x269 x978) (x1522 6) 0) x682) (= x466 (x146 (x269 x186) x682 0)) (= (x881 1461501637330902918203684832716283019655932542975 x944) x186) (<= 0 x718) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x718) (= x718 (x1458 x466)) (<= x468 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> x320 x1115) (=> (and (= (x146 (x269 x978) (x1522 10) 0) x578) (= (x881 1461501637330902918203684832716283019655932542975 x944) x640) (>= x296 0) (not x320) (= (x146 (x269 x640) x578 0) x934) (= x915 x296) (<= x296 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x534 x934) x296) (= 0 x277)) x356)))))
(assert (x387 x718))
(assert (x896 x427))
(assert (= (ite (= x986 x1402) x1097 (x213 x1402)) (x779 x1402)))
(assert (x387 x202))
(assert (= (x269 2868243304) (x1522 2868243304)))
(assert (x896 x512))
(assert (= 0 (x90 x187)))
(assert (x387 x1337))
(assert (= (x884 x746) (ite (= x746 x455) x1391 (x698 x746))))
(assert (= (x59 (x269 x349)) x349))
(assert (= 604800 (x59 (x1522 604800))))
(assert (=> (>= 10000 x533) (= (x1522 x533) (x269 x533))))
(assert (= (x886 x1224) (ite (and x1319 x80) (x1431 x1224) (ite (and x390 (not x1319) x80) (x1431 x1224) (x497 x1224)))))
(assert (x387 x1314))
(assert (x387 x1497))
(assert (x387 x93))
(assert (x896 x796))
(assert (x387 x683))
(assert (= x450 (x59 (x269 x450))))
(assert (x896 x1539))
(assert (x387 x850))
(assert (x387 x111))
(assert (x387 x834))
(assert (= x1007 x598))
(assert (= (x1353 x478) (ite (= x478 x1359) x493 (x581 x478))))
(assert (= (x1368 x65) (ite (= x1309 x65) x64 (x1151 x65))))
(assert (= (x1375 x941) (ite (and x689 x89) (x1353 x941) (x331 x941))))
(assert (=> (>= 10000 x603) (= (x1522 x603) (x269 x603))))
(assert (= (ite (and x347 x80) (x1296 x1136) (x782 x1136)) (x771 x1136)))
(assert (x896 x1505))
(assert (x387 x1384))
(assert (= (x793 x1359) (ite (and (not x159) x409 x1380) (x963 x1359) (x368 x1359))))
(assert (x387 x714))
(assert (= 2258409472 (x59 (x1522 2258409472))))
(assert (= (x59 (x269 x178)) x178))
(assert (= (ite (= x1473 x133) x548 (x1449 x133)) (x698 x133)))
(assert (= (x341 x419) (ite (and x1007 x728) (x534 x419) (x443 x419))))
(assert (= (x90 x405) 0))
(assert (= (x59 (x269 x1235)) x1235))
(assert (x387 x97))
(assert (= (x1174 x457) (ite (and x1202 x621 x99 x1440 (not x1279) x983) (x1322 x457) (ite (and x99 x621 (not x1202) x1440 x983) (x779 x457) (ite (and x621 (not x1440) x983 x99) (x213 x457) (ite (and (not x99) x621 x983) (x1106 x457) (x733 x457)))))))
(assert (= x600 (and x228 x960)))
(assert (= x8 x206))
(assert (=> (>= 10000 x604) (= (x269 x604) (x1522 x604))))
(assert (= (x59 (x269 x1570)) x1570))
(assert (x387 x986))
(assert (= (x503 x1210) (ite (= x735 x1210) x1424 (x344 x1210))))
(assert (= (x1353 x150) (ite (= x150 x1359) x493 (x581 x150))))
(assert (=> (>= 10000 x582) (= (x1522 x582) (x269 x582))))
(assert (=> (>= 10000 x1547) (= (x1522 x1547) (x269 x1547))))
(assert (= (x59 (x269 x768)) x768))
(assert (= (ite (and x1007 x1406 (not x260) (not x905)) (x506 x478) (ite (and (not x1406) x1007 (not x260)) (x173 x478) (ite (and x1007 x260) (x173 x478) (x1569 x478)))) (x36 x478)))
(assert (= (and x909 x1067) x1163))
(assert (= (x698 x705) (ite (= x1473 x705) x548 (x1449 x705))))
(assert (x387 x486))
(assert (=> (<= x731 10000) (= (x269 x731) (x1522 x731))))
(assert (=> (<= x1290 10000) (= (x1522 x1290) (x269 x1290))))
(assert (=> (>= 10000 x1036) (= (x269 x1036) (x1522 x1036))))
(assert (x896 x1527))
(assert (x387 x277))
(assert (= (=> (and (= x292 x94) (= x42 x1314) (= x1332 (>= x94 x831)) (= x350 x831)) (and x1332 (=> (and (= x406 x1113) (= x134 x195) (= (>= x195 x1113) x6)) (and (=> (and (= (>= x58 x367) x73) (= x58 x48) (= x1032 x367)) (and (=> (and (= x1219 x365) (= x1372 (>= x1063 x365)) (= x1063 x42)) (and x1372 (=> (and (= x820 x929) (= x215 1517119036) (= x1559 true) (= x1411 2512682246) (= 2939843472 x401) (= x1358 2939843472) (= true x334) (= true x1133) (= 2939843472 x851) (= 2939843472 x1198) (= x212 3123789364) (= 87118632 x861) (= x828 true) (= true x1562) (= x1541 (>= x448 x820)) (= x106 x448)) (and (=> (and (= x981 x584) (= x28 x1180) (= x649 (<= x584 x1180))) (and x649 (=> (and (= x100 x268) (= x1000 2512682246) (= x634 2939843472) (= x240 false) (= x1551 true) (= false x1010) (= x1497 x1474) (= (>= x1497 x100) x756)) x756))) x1541)))) x73)) x6)))) x1428))
(assert (= 1968616202 (x59 (x1522 1968616202))))
(assert (x387 x1003))
(assert (= (x59 (x1522 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x387 x709))
(assert (x387 x1273))
(assert (x387 x681))
(assert (=> (>= 10000 x565) (= (x269 x565) (x1522 x565))))
(assert (=> (<= x978 10000) (= (x1522 x978) (x269 x978))))
(assert (x387 x217))
(assert (= (x59 (x1522 2868243304)) 2868243304))
(assert (=> (>= 10000 x1123) (= (x269 x1123) (x1522 x1123))))
(assert (= (ite (= x157 x1359) x493 (x581 x157)) (x1353 x157)))
(assert (x387 x1371))
(assert (x896 x709))
(assert (= x76 (x59 (x269 x76))))
(assert (= x1273 (x59 (x269 x1273))))
(assert (= (x963 x705) (ite (and (not x877) x163 x1380 x410 x1385 x409) (x1368 x705) (ite (and x410 x409 (not x163) x1385 x1380) (x1151 x705) (ite (and x409 x410 (not x1385) x1380) (x672 x705) (ite (and x409 x1380 (not x410)) (x989 x705) (x561 x705)))))))
(assert (= x587 (x59 (x269 x587))))
(assert (= (x59 (x269 x710)) x710))
(assert (x387 x1097))
(assert (x387 x1413))
(assert (x387 x545))
(assert (=> (<= x272 10000) (= (x1522 x272) (x269 x272))))
(assert (x896 x145))
(assert (x896 x876))
(assert (x387 x1564))
(assert (x387 x1547))
(assert (=> (>= 10000 x257) (= (x269 x257) (x1522 x257))))
(assert (x387 x512))
(assert (= (x59 (x269 x97)) x97))
(assert (x387 x1178))
(assert (=> (<= x25 10000) (= (x269 x25) (x1522 x25))))
(assert (= (x506 x187) (ite (= x187 x405) x63 (x173 x187))))
(assert (= (=> (and (<= x676 1461501637330902918203684832716283019655932542975) (= x243 (x692 x1509)) (not (> 2293535753 x479)) (= x102 (x1492 (x269 274184521717934524641157099916833587206))) (> 2960351575 x479) (not (= 2764855426 x479)) (<= 0 x243) (= x1384 x243) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x243) (not (> 2690754053 x479)) (not (= 2743102681 x479)) (= x1509 (x146 (x269 x676) x866 0)) (= (x146 (x269 x1054) (x1522 5) 0) x866) (not (= x479 2690754053)) (> x102 0) (= x479 2798343961)) (=> (and (= x1020 x1548) (= x48 x1384) (= x1255 x1429)) x1502)) x1493))
(assert (= (ite (and x410 (not x877) x1380 x163 x1385 x409) (x1368 x150) (ite (and x1385 x1380 x410 (not x163) x409) (x1151 x150) (ite (and (not x1385) x1380 x409 x410) (x672 x150) (ite (and x409 x1380 (not x410)) (x989 x150) (x561 x150))))) (x963 x150)))
(assert (= x1054 (x59 (x269 x1054))))
(assert (= (x59 (x269 x1012)) x1012))
(assert (= (x1522 2514000705) (x269 2514000705)))
(assert (= (ite (and x689 x89) (x1353 x383) (x331 x383)) (x1375 x383)))
(assert (= (x36 x455) (ite (and x1007 (not x905) x1406 (not x260)) (x506 x455) (ite (and (not x260) (not x1406) x1007) (x173 x455) (ite (and x1007 x260) (x173 x455) (x1569 x455))))))
(assert (= (ite (= x941 x405) x63 (x173 x941)) (x506 x941)))
(assert (x387 x1230))
(assert (= (x963 x1402) (ite (and x1380 x1385 (not x877) x410 x163 x409) (x1368 x1402) (ite (and x410 x409 x1385 x1380 (not x163)) (x1151 x1402) (ite (and x409 x410 x1380 (not x1385)) (x672 x1402) (ite (and x409 x1380 (not x410)) (x989 x1402) (x561 x1402)))))))
(assert (= (x59 (x269 x283)) x283))
(assert (x896 x710))
(assert (= (x1375 x405) (ite (and x689 x89) (x1353 x405) (x331 x405))))
(assert (= (x989 x705) (ite (= x705 x560) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x705))))
(assert (x387 x492))
(assert (= x912 (=> (and (= (x146 (x269 x145) x112 0) x888) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x168) (= x168 (x992 x888)) (>= x168 0) (= (x881 1461501637330902918203684832716283019655932542975 x944) x306) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x145) (= (x146 (x269 x556) (x1522 7) 0) x1553) (= x854 (= 0 x168)) (= x112 (x146 (x269 x306) x1553 0))) (and (=> (and (not x854) (= x556 x525)) x426) (=> (and (= (x1107 (- x556 1)) x467) (not x311) (= x311 (< 0 x467)) x854) x765)))))
(assert (x387 x249))
(assert (= x719 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1545) (< x1461 911411945) (= x7 (x146 (x269 x739) (x1522 9) 0)) (>= 1461501637330902918203684832716283019655932542975 x223) (> x1482 0) (= x1482 (x1492 (x269 274184521717934524641157099916833587206))) (= (x608 x787) x1545) (= (x146 (x269 x223) x7 0) x1498) (= x787 (x146 (x269 x143) x1498 0)) (< x1461 468353030) (<= 0 x1545) (not (= 69947311 x1461)) (not (= 87118632 x1461)) (>= 1461501637330902918203684832716283019655932542975 x143) (= x1545 x1521) (< x1461 2293535753) (= 142201243 x1461)) (=> (and (= x400 x1383) (= x28 x1521) (= x1255 x964) (= x1020 x701)) x1197))))
(assert (= (x59 (x269 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (x387 x283))
(assert (= (x1151 x65) (ite (= x749 x65) x636 (x672 x65))))
(assert (x387 x54))
(assert (x700 x841))
(assert (x387 x1438))
(assert (= 3123789364 (x59 (x1522 3123789364))))
(assert (x387 x1289))
(assert (x387 x780))
(assert (= (x698 x174) (ite (= x174 x1473) x548 (x1449 x174))))
(assert (=> (>= 10000 x640) (= (x269 x640) (x1522 x640))))
(assert (= (x59 (x1522 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (= (x59 (x1522 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x896 x283))
(assert (= (x506 x1359) (ite (= x1359 x405) x63 (x173 x1359))))
(assert (= (x59 (x1522 142201243)) 142201243))
(assert (= (x1233 x457) (ite (and (not x1351) x621 x983) (x1174 x457) (x75 x457))))
(assert (x387 x942))
(assert (= (x1375 x746) (ite (and x89 x689) (x1353 x746) (x331 x746))))
(assert (= x760 (=> (and (= (x926 (x269 274184521717934524641157099916833587206)) x92) x1154 (= x554 (x926 (x269 x825))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1423 (x269 x825))) x1164) (= x83 (<= 0 x92)) (= x1278 x613) x1164 (= (x1423 (x269 x825)) x1376) (= x384 (x926 (x269 274184521717934524641157099916833587206))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x554) x1154) x83 (= (= 274184521717934524641157099916833587218 x825) x84)) (and (=> (not x84) x297) (=> (and (< 0 x623) (= x302 (x146 (x269 x256) (x1522 1) 0)) (= x659 274184521717934524641157099916833587206) (= 2835717307 x723) (not (= x723 2514000705)) (= 1 x809) (= (x1355 x305) x357) (not x1193) (not (= 649617121 x723)) (= x86 x622) (= x613 x363) (not x589) (<= x256 1461501637330902918203684832716283019655932542975) (= x702 x1318) (= x256 x1205) (<= x357 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 826074471 x723)) (= x432 (x1107 (- x357 x1025))) (= x623 (x1492 (x269 274184521717934524641157099916833587218))) (= x1390 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x723 649617121)) (= x1418 (or (> x239 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x239) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x239))))) (= 274184521717934524641157099916833587206 x1118) (= (x1107 (- x363 4)) x239) (>= x357 0) (= x1178 (x60 x74)) (= x1193 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x622 x1178))) (not (< x363 4)) (= x1025 x871) (not x1418) (= (< x357 x622) x589) (= x74 (x146 (x269 x256) (x1522 1) 0)) (not (= 1889567281 x723)) (<= x1178 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1409 (+ x86 x1236)) (= x772 32) (not x620) (= x305 (x146 (x269 274184521717934524641157099916833587206) (x1522 1) 0)) (= x1025 x622) (= x620 (> x1025 x357)) (= x363 68) (= x132 x256) (= (x146 (x269 274184521717934524641157099916833587206) (x1522 1) 0) x1386) x84 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x622 x1178)) (= x1236 x1178) (>= x1178 0)) x1222)))))
(assert (x896 x444))
(assert (x387 x272))
(assert (= (x36 x150) (ite (and x1007 (not x905) x1406 (not x260)) (x506 x150) (ite (and (not x260) x1007 (not x1406)) (x173 x150) (ite (and x1007 x260) (x173 x150) (x1569 x150))))))
(assert (x896 x1540))
(assert (x387 x405))
(assert (x387 x528))
(assert (x387 x584))
(assert (x896 x543))
(assert (x387 x519))
(assert (= (x1368 x457) (ite (= x457 x1309) x64 (x1151 x457))))
(assert (x387 x913))
(assert (x387 x796))
(assert (=> (>= 10000 x353) (= (x269 x353) (x1522 x353))))
(assert (= (x698 x1470) (ite (= x1473 x1470) x548 (x1449 x1470))))
(assert (=> (<= x872 10000) (= (x1522 x872) (x269 x872))))
(assert (= x786 (x59 (x269 x786))))
(assert (= x932 (x59 (x269 x932))))
(assert (= (x59 (x1522 2532887486)) 2532887486))
(assert (x387 x315))
(assert (x896 x932))
(assert (x387 x1532))
(assert (x387 x736))
(assert (x387 x1487))
(assert (= (=> (and (= (< 0 x872) x226) (= x872 (x1107 (- x978 1)))) (and (=> x226 x361) (=> (not x226) x246))) x38))
(assert (=> (<= x990 10000) (= (x1522 x990) (x269 x990))))
(assert (= (and x1350 (not x626)) x340))
(assert (= (x59 (x269 x477)) x477))
(assert (= (=> (and (= (x1107 (- x349 1)) x556) (= (< 0 x556) x1435)) (and (=> (not x1435) x765) (=> x1435 x912))) x274))
(assert (x896 x1239))
(assert (x387 x536))
(assert (x896 x818))
(assert (= x370 (x59 (x269 x370))))
(assert (= x917 (or (and x973 x1161) (and x852 x84))))
(assert (x387 x1370))
(assert (= (x1368 x478) (ite (= x478 x1309) x64 (x1151 x478))))
(assert (x387 x1157))
(assert (x387 x859))
(assert (= (x793 x746) (ite (and (not x159) x1380 x409) (x963 x746) (x368 x746))))
(assert (=> (>= 10000 x709) (= (x1522 x709) (x269 x709))))
(assert (=> (>= 10000 x262) (= (x269 x262) (x1522 x262))))
(assert (= (=> (= (< x743 x978) x167) (and (=> (and (= x1242 x1337) x167) x462) (=> (not x167) x1030))) x559))
(assert (x387 x1429))
(assert (= (x90 x1326) 0))
(assert (x387 x1261))
(assert (x387 x184))
(assert (= (ite (= x941 x455) x1391 (x698 x941)) (x884 x941)))
(assert (x387 x1339))
(assert (= (x59 (x269 x223)) x223))
(assert (= x1299 (or x1019 x40)))
(assert (x387 x878))
(assert (x387 x1180))
(assert (x387 x124))
(assert (x896 x436))
(assert (x458 x1370 x123))
(assert (x387 x518))
(assert (x387 x1434))
(assert (= x12 (x59 (x269 x12))))
(assert (= (x59 (x324 x781 1)) (+ (x59 x781) 1)))
(assert (x896 x362))
(assert (x896 x1036))
(assert (= (x1522 826074471) (x269 826074471)))
(assert (x896 x438))
(assert (x387 x713))
(assert (= x543 (x59 (x269 x543))))
(assert (= (ite (= x65 x455) x1391 (x698 x65)) (x884 x65)))
(assert (= x1240 (x59 (x269 x1240))))
(assert (= x316 (=> (and (= x583 (x146 (x269 x257) x1467 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1401) (= (x881 1461501637330902918203684832716283019655932542975 x944) x257) (= x1401 (x1316 x583)) (= x1467 (x146 (x269 x349) (x1522 6) 0)) (= (= x1401 0) x1275) (<= 0 x1401)) (and (=> x1275 x219) (=> (and (= x349 x1002) (not x1275)) x667)))))
(assert (x896 x12))
(assert (= x1448 (x59 (x269 x1448))))
(assert (= (x59 (x269 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (= (x59 (x1522 1889567281)) 1889567281))
(assert (x387 x1092))
(assert (x387 x997))
(assert (x387 x1294))
(assert (= (ite (= x342 x735) x1424 (x344 x342)) (x503 x342)))
(assert (= (x59 (x269 x241)) x241))
(assert (x387 x66))
(assert (x387 x482))
(assert (x387 x267))
(assert (x896 x1094))
(assert (x387 x523))
(assert (x387 x924))
(assert (x387 x571))
(assert (x387 x313))
(assert (x1101 x839 x1528))
(assert (x387 x831))
(assert (x387 x1062))
(assert (x387 x607))
(assert (= (ite (= x133 x455) x1391 (x698 x133)) (x884 x133)))
(assert (x387 x1242))
(assert (= (x698 x65) (ite (= x1473 x65) x548 (x1449 x65))))
(assert (= (x506 x174) (ite (= x405 x174) x63 (x173 x174))))
(assert (x896 x1055))
(assert (= (x59 (x269 x795)) x795))
(assert (= (x269 2512682246) (x1522 2512682246)))
(assert (x387 x1138))
(assert (x387 x1012))
(assert (= (x672 x150) (ite (= x150 x1480) x1412 (x989 x150))))
(assert (= x116 (=> (and (= 759532456 x208) (<= x1230 1461501637330902918203684832716283019655932542975) (not (> 468353030 x208)) (not (= 635128645 x208)) (= x430 x878) (= (x1556 x806) x430) (<= x430 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x430 0) (= (x146 (x269 x1230) x423 0) x1008) (= (x1492 (x269 274184521717934524641157099916833587206)) x1399) (> 911411945 x208) (>= 1461501637330902918203684832716283019655932542975 x151) (= (x146 (x269 x151) x1008 0) x806) (not (= 468353030 x208)) (< 0 x1399) (> 2293535753 x208) (= x423 (x146 (x269 x1171) (x1522 7) 0))) (=> (and (= x878 x406) (= x461 x1020) (= x614 x1255) (= x1383 x1068)) x169))))
(assert (x387 x531))
(assert (=> (<= x1054 10000) (= (x269 x1054) (x1522 x1054))))
(assert (x387 x744))
(assert (x896 x256))
(assert (= x563 (and x967 x1060)))
(assert (x387 x227))
(assert (x387 x1318))
(assert (= x462 (=> (= (> x493 0) x409) (and (=> (and (= x410 (< 0 x1278)) (= (< x1278 x1112) x159) (= (x1566 (+ 32 x1242)) x941) x409 (= x769 (x1566 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x715))) (= x1320 (x1566 (+ x863 128))) (or (and (or (and (= x1112 32) (not x1385)) (and (= x1024 (x1566 (+ 64 x1242))) (or (and x163 (= x64 (x1151 x1470)) (= (x1566 (+ x1231 128)) x1309) (or (and (not x877) (= 96 x1112)) (and (not x784) (= x1027 (x1368 x88)) (= x1037 (x1566 (+ 160 x1231))) (= x784 (> x1278 128)) (= (x1566 (+ x1242 128)) x88) x877 (= x1112 128))) (= x877 (< 96 x1278)) (= (x1566 (+ 96 x1242)) x1470)) (and (= 64 x1112) (not x163))) (= (x1566 (+ 96 x1231)) x749) x1385 (= (x672 x1024) x636) (= (< 64 x1278) x163))) (= x941 x1413) (= x1320 x1480) (= (< 32 x1278) x1385) (= x1412 (x989 x1413)) x410) (and (= x1112 0) (not x410))) (= (x1107 (- x1513 32)) x928) (= (x529 x133) x871) (< 0 x493) (= x863 (x1566 (+ x1242 36))) (>= 1461501637330902918203684832716283019655932542975 x825) x194 (= x194 (> x499 0)) (= x1231 (x1566 (+ x1242 100))) (= (x1492 (x269 x825)) x499) (= (x1566 (+ x863 96)) x560) (= (x1107 (- x1231 x1242)) x1513) (= (x1566 (+ 160 x313)) x133) (> x1352 0) (= x755 (x1566 (+ x1242 68))) (= (x1033 x941) x1370) (or (not x159) (and (= (x1566 (+ x1278 x1320)) x1147) x159)) (= x1278 (x989 x1242)) (= x715 (x881 26959946667150639794667015087019630673637144422540572481103610249215 x1370)) (= x9 0) (= x1205 (x881 1461501637330902918203684832716283019655932542975 x1092)) (= x825 (x1225 x1404)) (= x1404 x261) (= x1352 (x529 x1359))) x760) (=> (not x409) x1276)))))
(assert (= (x90 x133) 0))
(assert (= 0 (x90 x1402)))
(assert (= (and x1510 x1435) x661))
(assert (x387 x323))
(assert (x387 x841))
(assert (x387 x425))
(assert (=> (>= 10000 x1028) (= (x1522 x1028) (x269 x1028))))
(assert (= x508 (x59 (x269 x508))))
(assert (= x789 x265))
(assert (= (x989 x157) (ite (= x157 x560) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x157))))
(assert (x387 x1090))
(assert (x387 x140))
(assert (x896 x1028))
(assert (= x867 (x59 (x269 x867))))
(assert (x387 x630))
(assert (= x333 (x59 (x269 x333))))
(assert (x387 x1398))
(assert (x387 x915))
(assert (=> (<= x1505 10000) (= (x269 x1505) (x1522 x1505))))
(assert (=> (<= x427 10000) (= (x269 x427) (x1522 x427))))
(assert (= (x672 x457) (ite (= x1480 x457) x1412 (x989 x457))))
(assert (= 2798343961 (x59 (x1522 2798343961))))
(assert (x387 x430))
(assert (= x1276 (=> (and (= x953 x1255) (= x1020 x76)) x566)))
(assert (x387 x820))
(assert (= x566 (=> (and (not (= x308 1968616202)) (<= x76 1461501637330902918203684832716283019655932542975) (<= 0 x1252) (= x1252 (x1445 x777)) (= (x146 (x269 x76) x900 0) x777) (= x308 2258409472) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1252) (> 2293535753 x308) (= (x146 (x269 x953) (x1522 6) 0) x900) (not (= 2061678023 x308)) (not (> 1968616202 x308)) (< 0 x977) (not (> 911411945 x308)) (not (= 1986467848 x308)) (not (= x308 2211524764)) (= x977 (x1492 (x269 274184521717934524641157099916833587206))) (= x1472 x1252)) (=> (and (= x1020 x676) (= x292 x1472) (= x1255 x1054)) x1493))))
(assert (= (and x799 x320) x228))
(assert (= (x59 (x269 x1529)) x1529))
(assert (x387 x775))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x59 (x1522 115792089237316195423570985008687907853269984665640564039457))))
(assert (x387 x558))
(assert (x387 x489))
(assert (= (ite (= x446 x1413) x237 (x475 x1413)) (x173 x1413)))
(assert (x387 x151))
(assert (x896 x571))
(assert (x387 x1120))
(assert (x387 x764))
(assert (x387 x1523))
(assert (=> (>= 10000 x1329) (= (x269 x1329) (x1522 x1329))))
(assert (= (x1522 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x269 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x387 x145))
(assert (x387 x827))
(assert (x700 x1287))
(assert (= 0 (x90 x383)))
(assert (x387 x705))
(assert (x387 x1542))
(assert (x387 x723))
(assert (x387 x945))
(assert (x387 x762))
(assert (x896 x300))
(assert (x387 x241))
(assert (= (x884 x1359) (ite (= x1359 x455) x1391 (x698 x1359))))
(assert (x387 x994))
(assert (x387 x1282))
(assert (= x751 (and x447 x470)))
(assert (x387 x634))
(assert (= (x59 (x269 x818)) x818))
(assert (= (ite (= x1309 x157) x64 (x1151 x157)) (x1368 x157)))
(assert (= (x173 x150) (ite (= x446 x150) x237 (x475 x150))))
(assert (=> (>= 10000 x477) (= (x1522 x477) (x269 x477))))
(assert (x387 x693))
(assert (=> (>= 10000 x1256) (= (x1522 x1256) (x269 x1256))))
(assert (x387 x1285))
(assert (= (x1263 x232) (ite (and x1237 x1007) (x1245 x232) (x509 x232))))
(assert (x387 x857))
(assert (x481 x857 x1257 x1415 x680))
(assert (x387 x17))
(assert (x387 x791))
(assert (x387 x596))
(assert (= x504 x1001))
(assert (=> (>= 10000 x234) (= (x269 x234) (x1522 x234))))
(assert (= x618 (=> (and (= x1213 (= x542 274184521717934524641157099916833587218)) (= (x1186 (x269 x542)) x44) x471 (= x1285 (x1186 (x269 274184521717934524641157099916833587206))) x1031 (= x471 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x44)) (= x1031 (<= 0 x1285)) (= x476 x1201) (= x939 (< (x199 (x269 x542)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1157 (x199 (x269 x542))) (= (x1186 (x269 274184521717934524641157099916833587206)) x440) x939) (and (=> (and (= x1379 x1218) (= (> x726 x1343) x1344) (not x1155) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x726 x1212)) (= (or (and (> 64 x518) (= (<= x518 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x518 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1504) (not x1504) (not x757) (= (x1107 (- x142 4)) x518) (= 274184521717934524641157099916833587206 x1294) (= x732 x317) (= (x146 (x269 274184521717934524641157099916833587206) (x1522 1) 0) x1) (< 0 x439) (not (= 826074471 x1267)) (= x1267 2835717307) (>= x1343 0) (= x1212 x670) (not (> 649617121 x1267)) (= x299 (x146 (x269 x317) (x1522 1) 0)) (not (= x1267 1889567281)) (= x61 x726) (= x846 x1291) (<= x1343 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1267 2514000705)) (= x317 x874) (= x420 274184521717934524641157099916833587206) (= x439 (x1492 (x269 274184521717934524641157099916833587218))) (= 68 x142) (not (> 4 x142)) x1213 (= x1218 x726) (>= x1212 0) (= x31 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not x1344) (<= x317 1461501637330902918203684832716283019655932542975) (= 1 x1261) (= x1085 (x1107 (- x1343 x1218))) (= x253 (x146 (x269 274184521717934524641157099916833587206) (x1522 1) 0)) (= x1212 (x1182 x299)) (= (x1307 x1) x1343) (<= x1212 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x1343 x1218) x757) (= 32 x945) (= x142 x1201) (not (= x1267 649617121)) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x726 x1212)) x1155) (= (+ x61 x670) x431)) x1211) (=> (not x1213) x1040)))))
(assert (x387 x1409))
(assert (x387 x1166))
(assert (x387 x928))
(assert (x387 x610))
(assert (x387 x1032))
(assert (= (x59 (x269 x1542)) x1542))
(assert (x387 x1156))
(assert (=> (>= 10000 x676) (= (x269 x676) (x1522 x676))))
(assert (=> (<= x283 10000) (= (x1522 x283) (x269 x283))))
(assert (= (x213 x478) (ite (= x108 x478) x1347 (x1106 x478))))
(assert (= (=> (and (= (x146 (x269 x978) (x1522 7) 0) x766) (= x69 (= 0 x999)) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x93) (= x1460 (x881 1461501637330902918203684832716283019655932542975 x944)) (= x1262 (x146 (x269 x1460) x766 0)) (= (x146 (x269 x93) x1262 0) x276) (<= x999 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x999) (= x999 (x1556 x276))) (and (=> x69 x487) (=> (and (= x492 x978) (not x69)) x343))) x802))
(assert (x387 x1295))
(assert (x896 x55))
(assert (x896 x1012))
(assert (x387 x259))
(assert (x387 x749))
(assert (x387 x31))
(assert (x896 x1235))
(assert (= (x59 (x269 x701)) x701))
(assert (x387 x1473))
(assert (= x204 (=> (and (= x747 (x1206 x1224)) (= (x146 (x269 x283) x564 0) x232) (<= x548 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x548) (= x1266 (x1566 (+ x1045 64))) (= x348 (x146 (x269 x353) x933 0)) (= (x1566 (+ x978 2)) x1363) (<= x778 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x325 x1363) (>= x747 0) (= (x146 (x269 x1235) x792 0) x873) (= x1448 (x881 1461501637330902918203684832716283019655932542975 x1092)) (= x416 (= 0 x1357)) (or (and (= x188 (x146 (x269 x1028) x1052 0)) x105 (= x1028 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x146 (x269 x349) (x1522 6) 0) x1052)) (and (= x1466 x523) (= (x146 (x269 x349) (x1522 5) 0) x1387) (= x370 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (* x1199 x1114) x1466) (< (* x1114 x1199) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x606 (x146 (x269 x370) x882 0)) (= (x146 (x269 x349) (x1522 6) 0) x882) (= (x881 1461501637330902918203684832716283019655932542975 x944) x262) (= (x146 (x269 x262) x1387 0) x1531) (not x105))) (= x792 (x146 (x269 x349) (x1522 3) 0)) (or x727 (and (= x1491 (x881 x1287 x375)) (= x379 (mod (* 1000000000000000000 x747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1491 0) (= (< 0 x493) x875) (or (and (>= x338 0) (= x1011 (x146 (x269 x15) x562 0)) x875 (>= x639 0) (= (x146 (x269 x349) (x1522 11) 0) x1331) (= (x146 (x269 x349) (x1522 4) 0) x562) (= (x33 x1535) x639) (= (x1225 x865) x1239) (<= x338 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (* x1150 x665) x1534) (<= x1239 1461501637330902918203684832716283019655932542975) (<= 0 x1150) (= (+ x359 x172) x1391) (= x508 (x881 1461501637330902918203684832716283019655932542975 x1092)) (< 0 x528) (= x1089 x639) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x639) (= x1535 (x146 (x269 x1057) x1457 0)) (= (div x1534 1000000000000000000) x850) (> x493 0) (= x1122 (> x493 1)) (= (x146 (x269 x508) x1011 0) x1070) (= (x881 1461501637330902918203684832716283019655932542975 x944) x15) (= (x1225 x865) x1057) (= (x698 x455) x1334) (= x691 (x146 (x269 x1239) x183 0)) (>= 1461501637330902918203684832716283019655932542975 x1057) (= x261 x865) (= (x146 (x269 x1442) x1331 0) x183) (= x338 0) (= (x394 x691) x1150) (or (and (= x1290 (x1225 x270)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x925) (= x138 (x146 (x269 x786) x1228 0)) (> x493 1) (not x1251) (> x1327 1) (= x1327 (x884 x1359)) (<= 0 x119) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x646 x1523)) (= x891 (x881 1461501637330902918203684832716283019655932542975 x1092)) (= (div x1346 1000000000000000000) x646) (= (x1566 (+ 192 x313)) x383) (= (x146 (x269 x349) (x1522 11) 0) x464) (= x903 (x1225 x270)) (> x493 1) (= x1438 (+ x465 x1419)) (= (x146 (x269 x891) x524 0) x1228) (>= x816 0) (= (+ x156 x745) x380) (= x270 (x1566 (+ x321 64))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x925 x747)) (= (x884 x383) x1523) (= (x538 x138) x816) (= x1381 (x146 (x269 x349) (x1522 4) 0)) (= (x146 (x269 x349) (x1522 4) 0) x1555) (> x493 1) (= x1210 (x146 (x269 x903) x1104 0)) (= x1104 (x146 (x269 x272) x752 0)) (= (x146 (x269 x1290) x345 0) x1360) (= x818 (x881 1461501637330902918203684832716283019655932542975 x944)) (= x345 (x146 (x269 x307) x464 0)) (<= x903 1461501637330902918203684832716283019655932542975) (= x786 (x1225 x270)) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x272) (= (x394 x1360) x119) (<= x786 1461501637330902918203684832716283019655932542975) (= x465 x646) (= (* x665 x119) x1346) (= x816 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x119) (= x745 x747) (= x1051 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x146 (x269 x1051) x1555 0) x524) (= (x146 (x269 x818) x1381 0) x752) (= (x538 x1210) x925) (<= x816 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x925 0) x1122 (= x156 x925) (= x307 (x881 1461501637330902918203684832716283019655932542975 x944)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x119 x665)) (>= 1461501637330902918203684832716283019655932542975 x1290) (= x1251 (> x493 2)) (= x1419 x1523)) (not x1122)) (<= x710 1461501637330902918203684832716283019655932542975) (= x359 x1334) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x795) (= x675 (x146 (x269 x349) (x1522 4) 0)) (= (x881 1461501637330902918203684832716283019655932542975 x944) x1442) (= (x146 (x269 x710) x1070 0) x510) (= (x146 (x269 x795) x635 0) x1457) (= (+ x1089 x491) x336) (= (x146 (x269 x198) x675 0) x635) (= x850 x172) (> x493 0) (= x491 x747) (< (* x1150 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1334 x850)) (<= x1150 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x747 x639) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1225 x865) x710) (= (x881 1461501637330902918203684832716283019655932542975 x944) x198) (= x528 (x698 x1359)) (< 0 x493) (= (x33 x510) x338) (= (x1566 (+ 160 x313)) x455)) (not x875)) (not x727) (= 1 x1287) (> x921 0) (= (div x379 x921) x665) (= x375 (ite (> x747 115792089237316195423570985008687907853269984665640564039457) 1 0)))) (>= x778 0) (= (= 0 x1199) x105) (<= x1156 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x781 (x146 (x269 x349) (x1522 1) 0)) (= (x881 1461501637330902918203684832716283019655932542975 x944) x1235) (= (< x1156 x486) x1035) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x349)) (= (x146 (x269 x349) (x1522 5) 0) x564) (= x778 (x641 x781)) (or (and (or (and (= (ite (> 604800 x961) x961 604800) x545) (= x1138 604800) (not x1132) (= x545 x1199) (not (> x1156 x421)) (= x961 (x1107 (- x421 x1156)))) (and (= x392 (x1107 (- x421 x152))) (not (< x421 x152)) (= x152 (x698 x1045)) (= x1199 x392) x1132)) (= x180 (< x610 x1554)) (= (x698 x1473) x610) x1035 (= x1132 (= x1156 0)) (or (and (= x421 x721) x180 (= x721 (x698 x1473))) (and (not x180) (= x421 x1554)))) (and (= x1199 0) (not x1035))) (<= x921 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1242 x1266) (<= x747 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1099 x232) x921) (= (x881 1461501637330902918203684832716283019655932542975 x944) x353) (= (x698 x1473) x486) (= x1473 (x1566 (+ 32 x1045))) (>= x1156 0) (<= 0 x921) (= (x324 x781 1) x612) (= (x1316 x348) x1156) (= (= x747 0) x727) (= (x146 (x269 x1448) x873 0) x1224) (= (x146 (x269 x349) (x1522 6) 0) x933) (or (and (= x1405 (x146 (x269 x349) (x1522 10) 0)) (= x988 (x881 1461501637330902918203684832716283019655932542975 x944)) (not x416) (= x591 (x146 (x269 x988) x1405 0))) x416) (= x548 (x893 x612)) (= x283 (x881 1461501637330902918203684832716283019655932542975 x944))) x462)))
(assert (= (x213 x65) (ite (= x108 x65) x1347 (x1106 x65))))
(assert (x896 x978))
(assert (x387 x141))
(assert (= (ite (= x446 x383) x237 (x475 x383)) (x173 x383)))
(assert (= (x672 x1024) (ite (= x1480 x1024) x1412 (x989 x1024))))
(assert (= (x59 (x1522 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (= x1564 (x59 (x269 x1564))))
(assert (x387 x1477))
(assert (x387 x55))
(assert (x387 x71))
(assert (=> (>= 10000 x588) (= (x1522 x588) (x269 x588))))
(assert (= (x269 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1522 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (ite (and x1007 x1237) (x1245 x434) (x509 x434)) (x1263 x434)))
(assert (x387 x439))
(assert (=> (>= 10000 x288) (= (x269 x288) (x1522 x288))))
(assert (= (x783 x478) (ite (and x852 x84) (x1259 x478) (x1248 x478))))
(assert (x387 x312))
(assert (x387 x1420))
(assert (x896 x614))
(assert (=> (<= x1548 10000) (= (x269 x1548) (x1522 x1548))))
(assert (= x917 x983))
(assert (= (x59 (x269 x1055)) x1055))
(assert (= (x672 x88) (ite (= x88 x1480) x1412 (x989 x88))))
(assert (x387 x1252))
(assert (= 2835717307 (x59 (x1522 2835717307))))
(assert (x387 x132))
(assert (x387 x645))
(assert (x1526 x480 x50))
(assert (= (x59 (x269 x533)) x533))
(assert (x896 x216))
(assert (= x565 (x59 (x269 x565))))
(assert (= (=> (and (= (x1492 (x269 274184521717934524641157099916833587206)) x162) (not (= 2690754053 x433)) (= x433 2798343961) (< x433 2960351575) (= x1167 (x146 (x269 x1090) x750 0)) (= (x1245 x1167) x568) (> x162 0) (not (> 2293535753 x433)) (<= x568 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x568 x289) (not (> 2690754053 x433)) (<= 0 x568) (not (= x433 2764855426)) (not (= x433 2743102681)) (= x750 (x146 (x269 x588) (x1522 5) 0)) (>= 1461501637330902918203684832716283019655932542975 x1090)) (=> (and (= x289 x1032) (= x288 x1020) (= x234 x1255)) x541)) x442))
(assert (= (x59 (x269 x876)) x876))
(assert (x387 x907))
(assert (= (x59 (x269 x1051)) x1051))
(assert (x387 x420))
(assert (= x1060 (and x1275 x751)))
(assert (= (x1322 x457) (ite (= x457 x1538) x656 (x779 x457))))
(assert (x387 x11))
(assert (x387 x195))
(assert (=> (>= 10000 x1012) (= (x1522 x1012) (x269 x1012))))
(assert (= (x90 x457) 0))
(assert (x700 x375))
(assert (= (x1106 x705) (ite (= x558 x705) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x609 x705))))
(assert (= (ite (= x1402 x405) x63 (x173 x1402)) (x506 x1402)))
(assert (=> (<= x932 10000) (= (x1522 x932) (x269 x932))))
(assert (=> (<= x957 10000) (= (x1522 x957) (x269 x957))))
(assert (x387 x1045))
(assert (x387 x1094))
(assert (= (or (and x1213 x1091) (and x626 x1350)) x332))
(assert (= (ite (and x689 x89) (x1353 x1024) (x331 x1024)) (x1375 x1024)))
(assert (= (x506 x157) (ite (= x157 x405) x63 (x173 x157))))
(assert (= x473 (=> (= (< 1 x493) x621) (and (=> (not x621) x1276) (=> (and (> x493 1) (= x1295 (x1566 (+ 68 x997))) (= x124 (x21 x1359)) (= x874 (x881 1461501637330902918203684832716283019655932542975 x1092)) (= x558 (x1566 (+ 96 x148))) (= x81 (x1492 (x269 x542))) (>= 1461501637330902918203684832716283019655932542975 x542) x1005 (= (x1566 (+ 64 x321)) x527) (= x1328 (x1566 (+ 100 x997))) (= x1140 (x1566 (+ x148 128))) (or (and (= (< 32 x476) x1440) (= x705 x187) x99 (= (x1106 x705) x1347) (= x108 x1140) (or (and (not x1440) (= x428 32)) (and (= x1097 (x213 x478)) (= x986 (x1566 (+ 96 x1328))) (= (x1566 (+ x997 64)) x478) x1440 (= x1202 (> x476 64)) (or (and (= x428 64) (not x1202)) (and x1202 (= (> x476 96) x1279) (= x1402 (x1566 (+ x997 96))) (or (and (not x1279) (= x428 96)) (and (= 128 x428) (= (x1566 (+ x997 128)) x65) (= (> x476 128) x1243) x1279 (= (x1566 (+ 160 x1328)) x631) (not x1243) (= x1153 (x1322 x65)))) (= (x1566 (+ x1328 128)) x1538) (= (x779 x1402) x656)))))) (and (= 0 x428) (not x99))) (= x187 (x1566 (+ x997 32))) (= x693 (x1566 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1084))) (= (< 0 x81) x1005) (= x1351 (> x428 x476)) (= x403 (x1107 (- x1328 x997))) (= (x687 x187) x674) (= x542 (x1225 x527)) (= x1379 (x21 x174)) (> x124 1) (= 0 x1349) x621 (= (x1566 (+ x313 192)) x174) (= (x881 26959946667150639794667015087019630673637144422540572481103610249215 x674) x1084) (= (> x476 0) x99) (or (and (= (x1566 (+ x476 x1140)) x425) x1351) (not x1351)) (= x476 (x1106 x997)) (= x148 (x1566 (+ x997 36))) (= x679 (x1107 (- x403 32)))) x618)))))
(assert (x387 x941))
(assert (=> (>= 10000 x371) (= (x1522 x371) (x269 x371))))
(assert (x387 x1118))
(assert (= (x59 (x1522 911411945)) 911411945))
(assert (x387 x1149))
(assert (x387 x951))
(assert (x387 x1494))
(assert (= (x59 (x269 x186)) x186))
(assert (x387 x701))
(assert (= x89 x601))
(assert (= (x506 x457) (ite (= x457 x405) x63 (x173 x457))))
(assert (= (x269 115792089237316195423570985008687907853269984665640564039457) (x1522 115792089237316195423570985008687907853269984665640564039457)))
(assert (= (ite (= x1470 x560) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x1470)) (x989 x1470)))
(assert (= (ite (= x446 x174) x237 (x475 x174)) (x173 x174)))
(assert (x387 x144))
(assert (= (x1522 274184521717934524641157099916833587206) (x269 274184521717934524641157099916833587206)))
(assert (=> (>= 10000 x151) (= (x1522 x151) (x269 x151))))
(assert (=> (>= 10000 x1068) (= (x1522 x1068) (x269 x1068))))
(assert (= (x884 x478) (ite (= x455 x478) x1391 (x698 x478))))
(assert (= (ite (and x1319 x80) (x1431 x1247) (ite (and x390 (not x1319) x80) (x1431 x1247) (x497 x1247))) (x886 x1247)))
(assert (x387 x1272))
(assert (= (x1375 x157) (ite (and x689 x89) (x1353 x157) (x331 x157))))
(assert (=> (<= x1429 10000) (= (x269 x1429) (x1522 x1429))))
(assert (= (ite (= x187 x455) x1391 (x698 x187)) (x884 x187)))
(assert (= (ite (and x84 x852) (x1259 x174) (x1248 x174)) (x783 x174)))
(assert (= x1477 (x59 (x269 x1477))))
(assert (= x555 (=> (= x470 (> x349 0)) (and (=> x470 x316) (=> (not x470) x1552)))))
(assert (x700 x839))
(assert (= (=> (and (or (and (= x1253 (= 0 x892)) (not x1324) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x892) (= (x146 (x269 x1017) (x1522 10) 0) x767) (= x17 (x881 1461501637330902918203684832716283019655932542975 x944)) (or (and x1253 (= 0 x915) (= 0 x277)) (and (= x277 1) (not x1253) (= x915 x892))) (= x892 (x534 x355)) (<= 0 x892) (= (x146 (x269 x17) x767 0) x355)) (and x1324 (= 0 x277) (= x915 0))) (= x1324 (= x1017 0))) x356) x1158))
(assert (x387 x922))
(assert (x387 x148))
(assert (= (x1375 x1402) (ite (and x89 x689) (x1353 x1402) (x331 x1402))))
(assert (x387 x570))
(assert (=> (>= 10000 x1514) (= (x1522 x1514) (x269 x1514))))
(assert (x387 x1545))
(assert (= 0 (x90 x65)))
(assert (= x400 (x59 (x269 x400))))
(assert (x387 x1495))
(assert (x387 x556))
(assert (= (=> (and (= (x1492 (x269 274184521717934524641157099916833587206)) x1081) (= (x146 (x269 x587) x1565 0) x412) (< x1014 2960351575) (< x1014 2690754053) (= x418 x1314) (= x418 (x110 x1348)) (not (= 2512682246 x1014)) (= (x146 (x269 x1539) x1395 0) x1348) (>= 1461501637330902918203684832716283019655932542975 x1425) (= (x146 (x269 x1240) (x1522 4) 0) x1565) (<= x587 1461501637330902918203684832716283019655932542975) (not (= x1014 2418364589)) (not (= 2293535753 x1014)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x418) (= (x146 (x269 x1425) x412 0) x1395) (= 2532887486 x1014) (>= 1461501637330902918203684832716283019655932542975 x1539) (> x1081 0) (<= 0 x418) (not (< x1014 2293535753))) x1428) x139))
(assert (= (x963 x65) (ite (and x409 x1380 (not x877) x163 x410 x1385) (x1368 x65) (ite (and x1380 x410 (not x163) x1385 x409) (x1151 x65) (ite (and (not x1385) x409 x1380 x410) (x672 x65) (ite (and x409 (not x410) x1380) (x989 x65) (x561 x65)))))))
(assert (x387 x318))
(assert (x387 x648))
(assert (x387 x1508))
(assert (= (x36 x187) (ite (and (not x260) (not x905) x1406 x1007) (x506 x187) (ite (and x1007 (not x260) (not x1406)) (x173 x187) (ite (and x1007 x260) (x173 x187) (x1569 x187))))))
(assert (=> (<= x198 10000) (= (x1522 x198) (x269 x198))))
(assert (=> (>= 10000 x1529) (= (x269 x1529) (x1522 x1529))))
(assert (= (ite (= x383 x1359) x493 (x581 x383)) (x1353 x383)))
(assert (= (ite (and x89 x689) (x1353 x457) (x331 x457)) (x1375 x457)))
(assert (=> (<= x438 10000) (= (x1522 x438) (x269 x438))))
(assert (x387 x1507))
(assert (= (=> (and (= (x1566 (+ 1 x978)) x349) (= (> x349 x743) x1410) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x51))) (and (=> (not x1410) x1079) (=> (and x1410 (= x1242 x1382)) x462))) x1250))
(assert (= x709 (x59 (x269 x709))))
(assert (x387 x325))
(assert (x896 x1273))
(assert (=> (<= x97 10000) (= (x269 x97) (x1522 x97))))
(assert (= (x269 649617121) (x1522 649617121)))
(assert (x387 x106))
(assert (= (x269 759532456) (x1522 759532456)))
(assert (x387 x770))
(assert (x387 x560))
(assert (x896 x508))
(assert (x387 x64))
(assert (x700 x480))
(assert (x896 x795))
(assert (x387 x739))
(assert (= (x59 (x269 x903)) x903))
(assert (= (x672 x1402) (ite (= x1402 x1480) x1412 (x989 x1402))))
(assert (=> (<= x306 10000) (= (x269 x306) (x1522 x306))))
(assert (x387 x1442))
(assert (= (ite (and x1007 (not x905) (not x260) x1406) (x503 x1210) (ite (and x1007 (not x1406) (not x260)) (x344 x1210) (ite (and x1007 x260) (x344 x1210) (x500 x1210)))) (x33 x1210)))
(assert (x896 x1448))
(assert (x387 x623))
(assert (=> (<= x958 10000) (= (x1522 x958) (x269 x958))))
(assert (= (x269 2835717307) (x1522 2835717307)))
(assert (x896 x317))
(assert (= 2418364589 (x59 (x1522 2418364589))))
(assert (=> (<= x543 10000) (= (x269 x543) (x1522 x543))))
(assert (= x356 (=> (and (= x1542 (x881 1461501637330902918203684832716283019655932542975 x944)) (= x1382 (x1566 (+ x1362 64))) (<= x840 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x107) (>= x66 0) (= x237 (x893 x369)) (>= x1506 0) (<= x237 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1506) (= (= x277 0) x728) (or (and (= x704 (x146 (x269 x978) (x1522 6) 0)) (= (x146 (x269 x741) x704 0) x422) (= x741 (x881 1461501637330902918203684832716283019655932542975 x944)) x1237) (and (= x329 x1490) (= x451 (x146 (x269 x1012) x281 0)) (= x571 (x881 1461501637330902918203684832716283019655932542975 x944)) (= x1012 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x146 (x269 x978) (x1522 5) 0) x281) (= (x146 (x269 x571) x1336 0) x247) (= (* x291 x915) x1490) (not x1237) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x915 x291)) (= (x146 (x269 x978) (x1522 6) 0) x1336))) (<= 0 x840) (<= 0 x237) (= (x881 1461501637330902918203684832716283019655932542975 x944) x438) (= x840 (x886 x1009)) (or (and (= x1564 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x146 (x269 x978) (x1522 10) 0) x1183) (= x1143 (x146 (x269 x1564) x1183 0)) (not x728)) x728) (<= x66 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x603 (x881 1461501637330902918203684832716283019655932542975 x1092)) (= (x173 x446) x5) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x107) (= x1237 (= x291 0)) (or x260 (and (= (x881 x480 x50) x1196) (> x107 0) (not x260) (= (> x493 0) x1406) (= x378 (mod (* 1000000000000000000 x840) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (not x1406) (and (>= x537 0) (= (x1566 (+ 160 x313)) x405) (= x259 (x1225 x1195)) (>= x71 0) (= x694 (x146 (x269 x978) (x1522 4) 0)) (<= x259 1461501637330902918203684832716283019655932542975) (= (x146 (x269 x978) (x1522 4) 0) x1185) (<= x71 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1292 (x146 (x269 x543) x804 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x537 x1550)) x1406 (= x71 (x344 x1292)) (= (x146 (x269 x651) x547 0) x569) (> x493 0) (= (< 1 x493) x905) (= x1260 x1427) (= x1260 (div x1469 1000000000000000000)) (= x1484 x287) (= x131 x1272) (<= x1272 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x146 (x269 x978) (x1522 11) 0) x449) (= x1195 x261) (or (not x905) (and (= x437 x930) (= x602 (+ x668 x437)) (= x286 (+ x374 x657)) (>= x536 0) (< (+ x521 x840) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x200 1) (<= 0 x521) (= (> x493 2) x1389) (<= x683 1461501637330902918203684832716283019655932542975) (>= x838 0) (not x1389) (= x1036 (x881 1461501637330902918203684832716283019655932542975 x944)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x901 x930)) (= (x146 (x269 x1036) x729 0) x221) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x536) (= x1540 (x881 1461501637330902918203684832716283019655932542975 x1092)) (= (x146 (x269 x482) x920 0) x342) (= x657 x521) (< 1 x493) (< (* x536 x1550) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x838 (x503 x456)) (= x512 (x881 1461501637330902918203684832716283019655932542975 x944)) x905 (= x381 (x146 (x269 x683) x1281 0)) (= (x1566 (+ x313 192)) x1326) (= x362 (x1225 x1083)) (= 0 x838) (<= x482 1461501637330902918203684832716283019655932542975) (<= x838 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x146 (x269 x978) (x1522 4) 0) x1223) (= x382 (x146 (x269 x512) x1223 0)) (= x1281 (x146 (x269 x1094) x463 0)) (<= x521 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x493 1) (= x840 x374) (= x788 (x146 (x269 x1540) x221 0)) (= (x146 (x269 x978) (x1522 4) 0) x729) (= x930 (div x16 1000000000000000000)) (= (x1225 x1083) x683) (= x463 (x146 (x269 x978) (x1522 11) 0)) (= (* x1550 x536) x16) (> x493 1) (= x1094 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x146 (x269 x932) x382 0) x920) (= (x394 x381) x536) (= (x1225 x1083) x482) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x932) (= (x1566 (+ 64 x321)) x1083) (= (x506 x1359) x200) (= x901 (x506 x1326)) (= x521 (x503 x342)) (= x668 x901) (= (x146 (x269 x362) x788 0) x456) (>= 1461501637330902918203684832716283019655932542975 x362))) (= (x394 x101) x537) (= x543 (x1225 x1195)) (< 0 x1109) (<= x537 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x881 1461501637330902918203684832716283019655932542975 x944) x25) (< (+ x1484 x1260) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x63 (+ x287 x1427)) (< (+ x1272 x840) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x444 1461501637330902918203684832716283019655932542975) (= x651 (x881 1461501637330902918203684832716283019655932542975 x1092)) (= x1272 (x344 x735)) (= x526 x840) (> x493 0) (= x1469 (* x537 x1550)) (>= x1272 0) (= x101 (x146 (x269 x259) x1187 0)) (>= 1461501637330902918203684832716283019655932542975 x543) (= (x1225 x1195) x444) (= (x146 (x269 x648) x694 0) x763) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x1547) (= (+ x526 x131) x1424) (= x804 (x146 (x269 x1547) x763 0)) (= x1109 (x173 x1359)) (= x427 (x881 1461501637330902918203684832716283019655932542975 x944)) (= x735 (x146 (x269 x444) x569 0)) (= x1484 (x173 x405)) (= x71 0) (= x1187 (x146 (x269 x25) x449 0)) (< 0 x493) (= x648 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x146 (x269 x427) x1185 0) x547))) (= (div x378 x107) x1550) (= x480 1) (= x1196 0) (= (ite (> x840 115792089237316195423570985008687907853269984665640564039457) 1 0) x50))) (or (and (= (< x244 x1554) x78) (= (= 0 x1506) x615) (or (and (not x78) (= x1554 x1137)) (and (= (x173 x446) x645) (= x645 x1137) x78)) (= x244 (x173 x446)) (or (and (= (x1107 (- x1137 x798)) x1361) (= (x173 x1362) x798) (not (< x1137 x798)) x615 (= x291 x1361)) (and (= (ite (> 604800 x936) x936 604800) x870) (not x615) (= (x1107 (- x1137 x1506)) x936) (= 604800 x1297) (not (< x1137 x1506)) (= x291 x870))) x389) (and (not x389) (= 0 x291))) (= x671 (x146 (x269 x1542) x230 0)) (= (x146 (x269 x978) (x1522 5) 0) x354) (= (x146 (x269 x603) x671 0) x1009) (= (x146 (x269 x438) x354 0) x434) (= (x146 (x269 x978) (x1522 3) 0) x230) (= x369 (x324 x1392 1)) (= (x1263 x434) x107) (= x241 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x1566 (+ 32 x1362)) x446) (= x393 (x146 (x269 x978) (x1522 6) 0)) (= x1392 (x146 (x269 x978) (x1522 1) 0)) (= x66 (x641 x1392)) (= (x146 (x269 x241) x393 0) x823) (= x260 (= x840 0)) (= x389 (< x1506 x5)) (= x1506 (x1458 x823))) x1250)))
(assert (x387 x1439))
(assert (x387 x279))
(assert (= (ite (= x1535 x735) x1424 (x344 x1535)) (x503 x1535)))
(assert (= (x59 (x269 x1487)) x1487))
(assert (= (x59 (x1522 2293535753)) 2293535753))
(assert (x896 x241))
(assert (= (or (and x830 x1512) (and x189 (not x590)) (and x909 (not x1067))) x664))
(assert (= (x1151 x1402) (ite (= x1402 x749) x636 (x672 x1402))))
(assert (x387 x4))
(assert (= x441 (or (and (not x1437) x20) (and x661 (not x854)))))
(assert (= (x672 x705) (ite (= x705 x1480) x1412 (x989 x705))))
(assert (x387 x256))
(assert (= x741 (x59 (x269 x741))))
(assert (= (x269 1517119036) (x1522 1517119036)))
(assert (= (x59 (x269 x496)) x496))
(assert (= (ite (= x478 x405) x63 (x173 x478)) (x506 x478)))
(assert (= (x59 (x269 x1301)) x1301))
(assert (x387 x1218))
(assert (=> (<= x512 10000) (= (x1522 x512) (x269 x512))))
(assert (= x897 (=> (= x908 x1017) x1158)))
(assert (= (x90 192) 0))
(assert (= (x33 x1535) (ite (and (not x260) (not x905) x1007 x1406) (x503 x1535) (ite (and x1007 (not x260) (not x1406)) (x344 x1535) (ite (and x1007 x260) (x344 x1535) (x500 x1535))))))
(assert (= (x1174 x746) (ite (and x99 x1202 x1440 (not x1279) x621 x983) (x1322 x746) (ite (and x983 x1440 x99 x621 (not x1202)) (x779 x746) (ite (and x621 (not x1440) x99 x983) (x213 x746) (ite (and (not x99) x621 x983) (x1106 x746) (x733 x746)))))))
(assert (= x436 (x59 (x269 x436))))
(assert (x387 x1347))
(assert (x896 x1289))
(assert (x387 x1327))
(assert (x700 x1093))
(assert (x896 x1230))
(assert (=> (<= x300 10000) (= (x1522 x300) (x269 x300))))
(assert (=> (>= 10000 x903) (= (x269 x903) (x1522 x903))))
(assert (=> (>= 10000 x1477) (= (x1522 x1477) (x269 x1477))))
(assert (x387 x1382))
(assert (x387 x604))
(assert (= x686 x970))
(assert (=> (>= 10000 x556) (= (x269 x556) (x1522 x556))))
(assert (= (x59 (x269 x25)) x25))
(assert (= (x59 (x1522 2211524764)) 2211524764))
(assert (x1101 x841 x415))
(assert (= (x59 (x269 x1017)) x1017))
(assert (x896 x964))
(assert (=> (<= x953 10000) (= (x1522 x953) (x269 x953))))
(assert (= x978 (x59 (x269 x978))))
(assert (x387 x444))
(assert (x896 x1460))
(assert (x387 x1320))
(assert (= x948 x1078))
(assert (x387 x725))
(assert (x387 x1219))
(assert (=> (<= x775 10000) (= (x269 x775) (x1522 x775))))
(assert (= (ite (= x1480 x157) x1412 (x989 x157)) (x672 x157)))
(assert (=> (<= x710 10000) (= (x1522 x710) (x269 x710))))
(assert (x387 x1039))
(assert (=> (>= 10000 x587) (= (x1522 x587) (x269 x587))))
(assert (x896 x186))
(assert (x387 x1192))
(assert (x387 x614))
(assert (= (ite (= x457 x108) x1347 (x1106 x457)) (x213 x457)))
(assert (= (=> (= x1514 0) x126) x765))
(assert (x387 x548))
(assert (= x257 (x59 (x269 x257))))
(assert (x896 x683))
(assert (x1101 x1093 x185))
(assert (=> (<= x87 10000) (= (x1522 x87) (x269 x87))))
(assert (x387 x711))
(assert (= (x793 x457) (ite (and x409 (not x159) x1380) (x963 x457) (x368 x457))))
(assert (x387 x165))
(assert (x387 x622))
(assert (x387 x1463))
(assert (= 0 (x90 x455)))
(assert (x387 x874))
(assert (= x764 (x59 (x269 x764))))
(assert (x387 x403))
(assert (= (x90 x174) 0))
(assert (x387 x1150))
(assert (= (x783 x746) (ite (and x84 x852) (x1259 x746) (x1248 x746))))
(assert (x387 x1376))
(assert (x387 x436))
(assert (x387 x1000))
(assert (= (ite (and x1319 x80) (x1065 x557) (ite (and (not x1319) x80 x390) (x717 x557) (x1080 x557))) (x992 x557)))
(assert (x387 x1046))
(assert (x387 x1025))
(assert (= (=> (and x39 (not (= x809 0)) (= (x1563 (x269 274184521717934524641157099916833587206)) x1128) (or (not x1465) (and (= (x21 x150) x1371) (= x1286 (x21 x157)) (= x150 (x1566 (+ 32 x157))) (= (ite x23 1 0) x295) x1465 (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1286) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1286)) (< x1286 32)))) (= (not x761) x23) (= x1371 x295) (< 0 x1371) (= (= 0 x1371) x761))) (or (and (= x725 (x1566 (+ x1320 x1420))) (= (x1566 (+ x772 63)) x857) (= (x1566 (+ x1231 96)) x812) (not x411) (= x157 x1320) (= x725 x997) (= x1420 (x881 115792089237316195423570985008687907853269984665640564039457584007913129639904 x857))) (and x411 (= x157 96) (= x1320 x997))) (= x1568 (x326 (x269 x825))) (= x711 (x21 x157)) (= x39 (< (x1563 (x269 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< 0 x711) x1465) (= (= x772 0) x411)) x473) x1222))
(assert (x387 x143))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x59 (x1522 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (= x1090 (x59 (x269 x1090))))
(assert (x387 x200))
(assert (=> (<= x55 10000) (= (x269 x55) (x1522 x55))))
(assert (= (x59 (x269 x556)) x556))
(assert (= x91 (=> (= x1067 (< 0 x978)) (and (=> x1067 x802) (=> (not x1067) x1073)))))
(assert (= (x1353 x705) (ite (= x1359 x705) x493 (x581 x705))))
(assert (x387 x1290))
(assert (x387 x353))
(assert (x896 x588))
(assert (= (ite (= x1359 x455) x493 (x581 x455)) (x1353 x455)))
(assert (x387 x28))
(assert (= (ite (and (not x260) x1406 x1007 (not x905)) (x506 x1359) (ite (and (not x260) (not x1406) x1007) (x173 x1359) (ite (and x260 x1007) (x173 x1359) (x1569 x1359)))) (x36 x1359)))
(assert (x387 x846))
(assert (x387 x1524))
(assert (x387 x981))
(assert (= (x173 x478) (ite (= x478 x446) x237 (x475 x478))))
(assert (= (=> (and (>= x468 0) (= (x146 (x269 x604) x567 0) x1265) (= x577 (x881 1461501637330902918203684832716283019655932542975 x1092)) (<= x1444 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1203 (x146 (x269 x577) x1265 0)) (not (> x349 x468)) (= x567 (x146 (x269 x349) (x1522 7) 0)) (= x1483 (< 0 x1444)) (= x604 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x992 x1203) x1444) (<= x468 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1444)) (and (=> (and (= (x146 (x269 x364) x1330 0) x1136) (>= x1284 0) (= x883 (x881 1461501637330902918203684832716283019655932542975 x944)) (= x1330 (x146 (x269 x883) x654 0)) (= x1284 (x771 x1136)) (= (x146 (x269 x349) (x1522 9) 0) x654) (= x1066 x1284) (= x364 (x881 1461501637330902918203684832716283019655932542975 x1092)) (<= x1284 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1483 (= x1367 0)) x579) (=> (not x1483) x627))) x1079))
(assert (x387 x1480))
(assert (x387 x51))
(assert (x387 x162))
(assert (x387 x1087))
(assert (= x80 (or (and x1557 x376) x1139)))
(assert (x700 1461501637330902918203684832716283019655932542975))
(assert (x387 x383))
(assert (= (x59 (x269 x614)) x614))
(assert (= (x59 (x269 x234)) x234))
(assert (x387 x864))
(assert (= 274184521717934524641157099916833587218 (x59 (x1522 274184521717934524641157099916833587218))))
(assert (= (ite (and x1007 x728) (x534 x572) (x443 x572)) (x341 x572)))
(assert (= (x793 x150) (ite (and x1380 (not x159) x409) (x963 x150) (x368 x150))))
(assert (=> (<= x1239 10000) (= (x1522 x1239) (x269 x1239))))
(assert (= (ite (and x1007 x1406 (not x260) (not x905)) (x506 x1024) (ite (and x1007 (not x1406) (not x260)) (x173 x1024) (ite (and x260 x1007) (x173 x1024) (x1569 x1024)))) (x36 x1024)))
(assert (=> (>= 10000 x143) (= (x1522 x143) (x269 x143))))
(assert (x387 x1112))
(assert (x387 x1515))
(assert (= (ite (= x746 x108) x1347 (x1106 x746)) (x213 x746)))
(assert (x387 x5))
(assert (x387 x450))
(assert (= (x1316 x1162) (ite (and x1237 x1007) (x460 x1162) (x954 x1162))))
(assert (= (x59 (x269 x198)) x198))
(assert (x387 x1057))
(assert (=> (>= 10000 x768) (= (x269 x768) (x1522 x768))))
(assert (= (ite (= x455 x1470) x1391 (x698 x1470)) (x884 x1470)))
(assert (=> (>= 10000 x867) (= (x269 x867) (x1522 x867))))
(assert (= (x173 x1402) (ite (= x446 x1402) x237 (x475 x1402))))
(assert (x387 x498))
(assert (x896 x775))
(assert (= (ite (= x1359 x1473) x548 (x1449 x1359)) (x698 x1359)))
(assert (x387 x1081))
(assert (= (x90 x1470) 0))
(assert (x387 x237))
(assert (= (ite (= x558 x65) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x609 x65)) (x1106 x65)))
(assert (x387 x457))
(assert (x387 x499))
(assert (x387 x1129))
(assert (=> (>= 10000 x1244) (= (x269 x1244) (x1522 x1244))))
(assert (= (x783 x705) (ite (and x852 x84) (x1259 x705) (x1248 x705))))
(assert (= x1246 (=> (and (<= x1495 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1458 x586) x1495) (= x294 (x146 (x269 x978) (x1522 6) 0)) (= x30 (x881 1461501637330902918203684832716283019655932542975 x944)) (= x586 (x146 (x269 x30) x294 0)) (= (= 0 x1495) x706) (<= 0 x1495)) (and (=> x706 x38) (=> (and (not x706) (= x908 x978)) x897)))))
(assert (= (x1368 x1359) (ite (= x1309 x1359) x64 (x1151 x1359))))
(assert (x387 x1124))
(assert (x896 x450))
(assert (x387 x865))
(assert (= (ite (and x80 x1319) (x1431 x1009) (ite (and x80 x390 (not x1319)) (x1431 x1009) (x497 x1009))) (x886 x1009)))
(assert (x896 x903))
(assert (x387 x582))
(assert (x387 x1054))
(assert (= (x59 (x269 x1548)) x1548))
(assert (x387 x1047))
(assert (= (=> (and (<= 0 x233) (= 2743102681 x1532) (= x233 (x1431 x996)) (not (> 2293535753 x1532)) (>= 1461501637330902918203684832716283019655932542975 x1529) (<= x775 1461501637330902918203684832716283019655932542975) (not (= 2690754053 x1532)) (= x996 (x146 (x269 x775) x1310 0)) (= x1310 (x146 (x269 x1529) x1069 0)) (= x1087 x233) (not (< x1532 2690754053)) (= (x146 (x269 x496) (x1522 3) 0) x1069) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233) (= x1434 (x1492 (x269 274184521717934524641157099916833587206))) (< x1532 2960351575) (> x1434 0)) (=> (and (= x1383 x1505) (= x957 x1020) (= x1087 x268) (= x1408 x1116) (= x1255 x958)) x1485)) x207))
(assert (= (x884 x383) (ite (= x455 x383) x1391 (x698 x383))))
(assert (x387 x336))
(assert (x387 x476))
(assert (=> (>= 10000 x30) (= (x269 x30) (x1522 x30))))
(assert (x387 x535))
(assert (x896 x307))
(assert (x387 x964))
(assert (= (ite (= x478 x1480) x1412 (x989 x478)) (x672 x478)))
(assert (= (=> (and (= (= x1273 0) x483) (or (and (= x1357 0) (= 0 x1114) x483) (and (= x1124 (x341 x419)) (>= x1124 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1124) (not x483) (= (x146 (x269 x300) x956 0) x419) (= (x146 (x269 x1273) (x1522 10) 0) x956) (or (and x949 (= x1357 0) (= x1114 0)) (and (not x949) (= 1 x1357) (= x1124 x1114))) (= x949 (= x1124 0)) (= (x881 1461501637330902918203684832716283019655932542975 x944) x300)))) x204) x774))
(assert (x387 x362))
(assert (= (x173 x1326) (ite (= x446 x1326) x237 (x475 x1326))))
(assert (=> (<= x15 10000) (= (x269 x15) (x1522 x15))))
(assert (= (x59 (x269 x958)) x958))
(assert (x700 x50))
(assert (= (x90 224) 0))
(assert (= x891 (x59 (x269 x891))))
(assert (x896 x353))
(assert (x387 x550))
(assert (= x1173 true))
(assert (x387 x1301))
(assert (x387 x366))
(assert (x387 x400))
(assert (x387 x1113))
(assert (= (x779 x457) (ite (= x986 x457) x1097 (x213 x457))))
(assert (x896 x259))
(assert (= x1094 (x59 (x269 x1094))))
(assert (= (x1522 2258409472) (x269 2258409472)))
(assert (x896 x234))
(assert (= x548 (x698 x1473)))
(assert (x387 x840))
(assert (x387 x1083))
(assert (= x1176 (x59 (x269 x1176))))
(assert (=> (>= 10000 x307) (= (x1522 x307) (x269 x307))))
(assert (= (ite (= x455 x705) x1391 (x698 x705)) (x884 x705)))
(assert (x387 x809))
(assert (x896 x1301))
(assert (= (x1106 x746) (ite (= x746 x558) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x609 x746))))
(assert (x387 x508))
(assert (x387 x58))
(assert (= (ite (= x1024 x1473) x548 (x1449 x1024)) (x698 x1024)))
(assert (x896 x651))
(assert (= (x506 x746) (ite (= x746 x405) x63 (x173 x746))))
(assert (= (=> (and (= x1525 (x1107 (- x349 1))) (= (> x1525 0) x967)) (and (=> x967 x1227) (=> (not x967) x1552))) x219))
(assert (= (x59 (x269 x256)) x256))
(assert (x387 x286))
(assert (= (x1353 x133) (ite (= x133 x1359) x493 (x581 x133))))
(assert (x896 x1542))
(assert (x896 x262))
(assert (x387 x1352))
(assert (x387 x638))
(assert (=> (<= x400 10000) (= (x1522 x400) (x269 x400))))
(assert (= (x173 x405) (ite (= x405 x446) x237 (x475 x405))))
(assert (= (x269 2743102681) (x1522 2743102681)))
(assert (= (x59 (x269 x1003)) x1003))
(assert (=> (<= x795 10000) (= (x1522 x795) (x269 x795))))
(assert (x387 x94))
(assert (= (and x852 (not x84)) x973))
(assert (= x652 (x59 (x269 x652))))
(assert (x387 x1050))
(assert (= (x36 x1413) (ite (and (not x905) (not x260) x1406 x1007) (x506 x1413) (ite (and (not x1406) x1007 (not x260)) (x173 x1413) (ite (and x1007 x260) (x173 x1413) (x1569 x1413))))))
(assert (=> (<= x1057 10000) (= (x269 x1057) (x1522 x1057))))
(assert (x387 x231))
(assert (x387 x929))
(assert (= (x59 (x269 x1068)) x1068))
(assert (x387 x577))
(assert (=> (<= x301 10000) (= (x269 x301) (x1522 x301))))
(assert (= x438 (x59 (x269 x438))))
(assert (= (x59 (x1522 635128645)) 635128645))
(assert (= x1006 x265))
(assert (= (and x376 (not x1557)) x909))
(assert (= (ite (and x89 x689) (x1353 x133) (x331 x133)) (x1375 x133)))
(assert (= (x1316 x348) (ite (and x1007 x1237) (x460 x348) (x954 x348))))
(assert (x387 x741))
(assert (x387 x679))
(assert (= x667 (=> (= x1002 x1273) x774)))
(assert (=> (>= 10000 x652) (= (x269 x652) (x1522 x652))))
(assert (x387 x431))
(assert (= x26 (or x441 x32)))
(assert (= (x59 (x269 x444)) x444))
(assert (= (x90 x88) 0))
(assert (x387 x87))
(assert (= (=> (= (< 0 x978) x960) (and (=> (not x960) x246) (=> x960 x1246))) x1115))
(assert (x387 x755))
(assert (= x1078 x1059))
(assert (= x301 (x59 (x269 x301))))
(assert (= (x173 x1470) (ite (= x446 x1470) x237 (x475 x1470))))
(assert (= 0 (x90 x746)))
(assert (= (ite (= x446 x133) x237 (x475 x133)) (x173 x133)))
(assert (x387 x76))
(assert (= (x36 x941) (ite (and x1007 (not x905) (not x260) x1406) (x506 x941) (ite (and x1007 (not x260) (not x1406)) (x173 x941) (ite (and x1007 x260) (x173 x941) (x1569 x941))))))
(assert (x896 x533))
(assert (= (ite (= x1473 x455) x548 (x1449 x455)) (x698 x455)))
(assert (x700 x944))
(assert (= (x963 x174) (ite (and x163 x1385 x410 (not x877) x1380 x409) (x1368 x174) (ite (and x1380 x409 x1385 (not x163) x410) (x1151 x174) (ite (and x1380 x410 (not x1385) x409) (x672 x174) (ite (and x409 x1380 (not x410)) (x989 x174) (x561 x174)))))))
(assert (= (x1522 69947311) (x269 69947311)))
(assert (x387 x868))
(assert (= (ite (and x410 x1385 x409 x1380 x163 (not x877)) (x1368 x457) (ite (and x1380 (not x163) x1385 x409 x410) (x1151 x457) (ite (and x409 (not x1385) x1380 x410) (x672 x457) (ite (and x1380 x409 (not x410)) (x989 x457) (x561 x457))))) (x963 x457)))
(assert (= x1239 (x59 (x269 x1239))))
(assert (x387 x268))
(assert (= (x783 x65) (ite (and x852 x84) (x1259 x65) (x1248 x65))))
(assert (x387 x1278))
(assert (= (ite (and x689 x89) (x1353 x65) (x331 x65)) (x1375 x65)))
(assert (= x604 (x59 (x269 x604))))
(assert (= (ite (= x1024 x446) x237 (x475 x1024)) (x173 x1024)))
(assert (x387 x244))
(assert (=> (<= x1003 10000) (= (x269 x1003) (x1522 x1003))))
(assert (x387 x1529))
(assert (x387 x113))
(assert (x896 x883))
(assert (= (x698 x1045) (ite (= x1473 x1045) x548 (x1449 x1045))))
(assert (= (ite (and x89 x689) (x1353 x174) (x331 x174)) (x1375 x174)))
(assert (x387 x1548))
(assert (x387 x935))
(assert (x896 x582))
(assert (= (x59 (x1522 649617121)) 649617121))
(assert (= (x59 (x269 x1527)) x1527))
(assert (x387 x1043))
(assert (x896 x556))
(assert (= (x59 (x269 x1289)) x1289))
(assert (= (x59 (x269 x1539)) x1539))
(assert (x1101 x944 x1560))
(assert (x896 x542))
(assert (= (x269 18446744073709551615) (x1522 18446744073709551615)))
(assert (x387 x554))
(assert (x387 x264))
(assert (= (x269 87118632) (x1522 87118632)))
(assert (x387 x234))
(assert (= (x59 (x269 x1244)) x1244))
(assert (= (ite (= x749 x457) x636 (x672 x457)) (x1151 x457)))
(assert (= (x783 x457) (ite (and x84 x852) (x1259 x457) (x1248 x457))))
(assert (= (ite (= x749 x187) x636 (x672 x187)) (x1151 x187)))
(assert (x387 x63))
(assert (= (x59 (x269 x1123)) x1123))
(assert (x387 x401))
(assert (x387 x958))
(assert (= (=> (= x249 x492) x1044) x343))
(assert (=> (>= 10000 x1540) (= (x269 x1540) (x1522 x1540))))
(assert (= (ite (= x749 x1470) x636 (x672 x1470)) (x1151 x1470)))
(assert (x896 x741))
(assert (x387 x1103))
(assert (= (x506 x65) (ite (= x65 x405) x63 (x173 x65))))
(assert (x387 x298))
(assert (=> (>= 10000 x1564) (= (x1522 x1564) (x269 x1564))))
(assert (=> (<= x825 10000) (= (x269 x825) (x1522 x825))))
(assert (=> (<= x1169 10000) (= (x269 x1169) (x1522 x1169))))
(assert (= (x59 (x1522 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= x1230 (x59 (x269 x1230))))
(assert (x387 x625))
(assert (= (and x1163 x69) x189))
(assert (x387 x1390))
(assert (= x990 (x59 (x269 x990))))
(assert (= (x59 (x269 x1429)) x1429))
(assert (=> (<= x482 10000) (= (x269 x482) (x1522 x482))))
(assert (= x216 (x59 (x269 x216))))
(assert (= (x59 (x269 x825)) x825))
(assert (= (and x706 x600) x373))
(assert (x387 x371))
(assert (= x1380 (or x263 (and x1127 x167) (and x598 x1410))))
(assert (x896 x1123))
(assert (x387 x1239))
(assert (x387 x824))
(assert (= 0 (x90 x150)))
(assert (=> (<= x542 10000) (= (x269 x542) (x1522 x542))))
(assert (x387 x1501))
(assert (= x145 (x59 (x269 x145))))
(assert (= (x992 x695) (ite (and x80 x1319) (x1065 x695) (ite (and (not x1319) x390 x80) (x717 x695) (x1080 x695)))))
(assert (= x1197 (=> (and (= x413 (x146 (x269 x964) (x1522 3) 0)) (not (= 2690754053 x1270)) (< 0 x158) (= (x146 (x269 x400) x490 0) x1247) (= x158 (x1492 (x269 274184521717934524641157099916833587206))) (<= x11 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x11 0) (= 2743102681 x1270) (not (< x1270 2690754053)) (<= x701 1461501637330902918203684832716283019655932542975) (= x490 (x146 (x269 x701) x413 0)) (not (< x1270 2293535753)) (>= 1461501637330902918203684832716283019655932542975 x400) (= x821 x11) (= x11 (x1335 x1247)) (> 2960351575 x1270)) (=> (and (= x1474 x821) (= x1408 x1539) (= x1020 x587) (= x1425 x1383) (= x1240 x1255)) x139))))
(assert (x387 x1486))
(assert (= (ite (= x150 x560) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x150)) (x989 x150)))
(assert (x387 x867))
(assert (x387 x1028))
(assert (=> (<= x444 10000) (= (x269 x444) (x1522 x444))))
(assert (x387 x208))
(assert (= (=> (and (= x1422 (x1556 x171)) (not (< x468 x51)) (= x171 (x146 (x269 x436) x435 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x468) (= x301 (x881 1461501637330902918203684832716283019655932542975 x944)) (= x435 (x146 (x269 x301) x37 0)) (= x37 (x146 (x269 x978) (x1522 7) 0)) (>= x1422 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1422) (<= 0 x468) (= x436 (x881 1461501637330902918203684832716283019655932542975 x1092)) (= (> x1422 0) x1557)) (and (=> (not x1557) x91) (=> (and (= x887 (x146 (x269 x1244) x72 0)) (= x72 (x146 (x269 x1003) x811 0)) (= x573 x736) (<= 0 x573) (= (x881 1461501637330902918203684832716283019655932542975 x944) x1003) (= x573 (x1296 x887)) (= x811 (x146 (x269 x978) (x1522 9) 0)) (= x1518 0) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x1244) x1557 (<= x573 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x396))) x1030))
(assert (x387 x747))
(assert (= (x173 x455) (ite (= x455 x446) x237 (x475 x455))))
(assert (x387 x656))
(assert (=> (<= x1442 10000) (= (x1522 x1442) (x269 x1442))))
(assert (x387 x48))
(assert (= (x1522 1968616202) (x269 1968616202)))
(assert (x896 x93))
(assert (x387 x1540))
(assert (= x512 (x59 (x269 x512))))
(assert (= 2960351575 (x59 (x1522 2960351575))))
(assert (x387 x147))
(assert (= (ite (= x187 x1359) x493 (x581 x187)) (x1353 x187)))
(assert (= (=> (and (= x1459 (x1108 x557)) (<= x1487 1461501637330902918203684832716283019655932542975) (>= x1459 0) (>= 1461501637330902918203684832716283019655932542975 x867) (= (x146 (x269 x533) (x1522 7) 0) x800) (<= x1459 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1111 0) (= (x1492 (x269 274184521717934524641157099916833587206)) x1111) (< x714 2293535753) (= x1459 x312) (= (x146 (x269 x867) x800 0) x748) (not (= 468353030 x714)) (not (< x714 468353030)) (= (x146 (x269 x1487) x748 0) x557) (= 759532456 x714) (< x714 911411945) (not (= 635128645 x714))) (=> (and (= x1383 x143) (= x223 x1020) (= x134 x312) (= x739 x1255)) x719)) x1543))
(assert (x896 x288))
(assert (=> (>= 10000 x614) (= (x1522 x614) (x269 x614))))
(assert (x387 x1450))
(assert (= x87 (x59 (x269 x87))))
(assert (=> (>= 10000 x826) (= (x269 x826) (x1522 x826))))
(assert (= (x59 (x269 x306)) x306))
(assert (= (x1522 468353030) (x269 468353030)))
(assert (= (x59 (x1522 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (=> (<= x683 10000) (= (x1522 x683) (x269 x683))))
(assert (= (and x1064 x1283) x20))
(assert (=> (<= x1235 10000) (= (x269 x1235) (x1522 x1235))))
(assert (x896 x1169))
(assert (= (x173 x1359) (ite (= x1359 x446) x237 (x475 x1359))))
(assert (= x676 (x59 (x269 x676))))
(assert (x387 x984))
(assert (= (ite (= x174 x749) x636 (x672 x174)) (x1151 x174)))
(assert (x896 x1570))
(assert (= (x1522 2418364589) (x269 2418364589)))
(assert (= (ite (= x88 x446) x237 (x475 x88)) (x173 x88)))
(assert (= x988 (x59 (x269 x988))))
(assert (=> (>= 10000 x739) (= (x1522 x739) (x269 x739))))
(assert (= (x1263 x1509) (ite (and x1007 x1237) (x1245 x1509) (x509 x1509))))
(assert (= (x59 (x269 x775)) x775))
(assert (=> (>= 10000 x1289) (= (x1522 x1289) (x269 x1289))))
(assert (=> (>= 10000 x1090) (= (x269 x1090) (x1522 x1090))))
(assert (=> (<= x17 10000) (= (x269 x17) (x1522 x17))))
(assert (x387 x1084))
(assert (= x872 (x59 (x269 x872))))
(assert (x387 x42))
(assert (= (ite (and x1406 (not x260) (not x905) x1007) (x506 x457) (ite (and x1007 (not x260) (not x1406)) (x173 x457) (ite (and x260 x1007) (x173 x457) (x1569 x457)))) (x36 x457)))
(assert (x387 x1209))
(assert (= (x1522 274184521717934524641157099916833587214) (x269 274184521717934524641157099916833587214)))
(assert (= x426 (=> (= x1514 x525) x126)))
(assert (= (ite (and (not x159) x409 x1380) (x963 x1402) (x368 x1402)) (x793 x1402)))
(assert (= x307 (x59 (x269 x307))))
(assert (x387 x406))
(assert (x387 x1258))
(assert (x387 x363))
(assert (= (=> (and (or (and (= x1029 (x771 x1302)) (= (x146 (x269 x764) x495 0) x1302) (= 1 x1367) (= (x881 1461501637330902918203684832716283019655932542975 x944) x333) (not x1075) (= (x146 (x269 x1514) (x1522 9) 0) x923) (<= x1029 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x495 (x146 (x269 x333) x923 0)) (= x1029 x1066) (<= 0 x1029) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x764)) (and x1075 (= 0 x1066) (= 0 x1367))) (= (= 0 x1514) x1075)) x579) x126))
(assert (= (x36 x133) (ite (and (not x260) x1007 (not x905) x1406) (x506 x133) (ite (and x1007 (not x1406) (not x260)) (x173 x133) (ite (and x1007 x260) (x173 x133) (x1569 x133))))))
(assert (x896 x1116))
(assert (x387 x778))
(assert (= (ite (and (not x260) x1007 (not x905) x1406) (x506 x157) (ite (and x1007 (not x260) (not x1406)) (x173 x157) (ite (and x1007 x260) (x173 x157) (x1569 x157)))) (x36 x157)))
(assert (= (x269 2798343961) (x1522 2798343961)))
(assert (x387 x829))
(assert (x896 x764))
(assert (=> (>= 10000 x370) (= (x269 x370) (x1522 x370))))
(assert (= (x213 x1402) (ite (= x1402 x108) x1347 (x1106 x1402))))
(assert (x387 x1425))
(assert (= (x1522 2690754053) (x269 2690754053)))
(assert (= (x36 x88) (ite (and (not x260) x1406 (not x905) x1007) (x506 x88) (ite (and (not x1406) x1007 (not x260)) (x173 x88) (ite (and x260 x1007) (x173 x88) (x1569 x88))))))
(assert (=> (<= x223 10000) (= (x1522 x223) (x269 x223))))
(assert (= (x59 (x1522 2939843472)) 2939843472))
(assert (x896 x604))
(assert (= x1139 (or x1313 x664)))
(assert (=> (<= x186 10000) (= (x1522 x186) (x269 x186))))
(assert (= x970 true))
(assert (x387 x838))
(assert (= (x1353 x1413) (ite (= x1359 x1413) x493 (x581 x1413))))
(assert (= (x59 (x269 x17)) x17))
(assert (= x579 (=> (and (or (and (= x318 (x1566 (+ 96 x1362))) (= x489 (x992 x1268)) (>= x998 0) (= x1446 (x893 x214)) (= (x641 x1496) x998) (= (= 0 x388) x815) (not x135) (= (x146 (x269 x349) (x1522 1) 0) x1496) (>= x489 0) (or (and (= x864 x1045) (= (x146 (x269 x1508) x624 0) x549) (= (x146 (x269 x349) (x1522 7) 0) x1204) (= x624 (x146 (x269 x582) x1204 0)) (= x1508 (x881 1461501637330902918203684832716283019655932542975 x1092)) x815 (= x582 (x881 1461501637330902918203684832716283019655932542975 x944))) (and (= (x146 (x269 x477) x982 0) x1179) (= x709 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x477) (= (x146 (x269 x709) x1238 0) x982) (= x864 x1045) (= (x146 (x269 x371) x1071 0) x29) (= x1238 (x146 (x269 x349) (x1522 3) 0)) (= (* x388 x1066) x516) (= x202 x516) (= (x146 (x269 x349) (x1522 7) 0) x1071) (not x815) (= x371 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x1570) (= x599 (x146 (x269 x1570) x29 0)) (< (* x388 x1066) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (> x1120 x489) x594) (= x1169 (x881 1461501637330902918203684832716283019655932542975 x1092)) (>= x1446 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x998) (= (x324 x1496 1) x214) (= x740 (x146 (x269 x1301) x1165 0)) (= x864 (x1566 (+ 128 x1362))) (or (and (= 0 x388) (not x594)) (and (= (> x1554 x1486) x1338) (= x1486 (x918 x318)) (or (and (= x931 (x918 x318)) (= x942 x931) x1338) (and (not x1338) (= x1554 x942))) x594 (or (and (not (< x942 x791)) (= (x918 x1382) x791) (= x98 (x1107 (- x942 x791))) x532 (= x388 x98)) (and (= (x1107 (- x942 x489)) x607) (not (< x942 x489)) (= x550 (ite (< x607 604800) x607 604800)) (= x388 x550) (= 604800 x498) (not x532))) (= x532 (= 0 x489)))) (= x1268 (x146 (x269 x1169) x740 0)) (<= x1446 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x146 (x269 x349) (x1522 7) 0) x1165) (= (x918 x318) x1120) (= x1301 (x881 1461501637330902918203684832716283019655932542975 x944)) (<= x489 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (= x429 (x881 1461501637330902918203684832716283019655932542975 x944)) (= (x146 (x269 x429) x95 0) x190) (= x95 (x146 (x269 x349) (x1522 7) 0)) (= (x146 (x269 x1527) x190 0) x395) x135 (= x1382 x1045) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x1527))) (= x1175 (= 0 x1367)) (= x135 (= 0 x1066)) (or x1175 (and (not x1175) (= (x881 1461501637330902918203684832716283019655932542975 x944) x1176) (= (x146 (x269 x349) (x1522 9) 0) x1323) (= (x881 1461501637330902918203684832716283019655932542975 x1092) x55) (= (x146 (x269 x1176) x1323 0) x885) (= x842 (x146 (x269 x55) x885 0))))) x1356)))
(assert (x387 x427))
(assert (=> (>= 10000 x651) (= (x269 x651) (x1522 x651))))
(assert (= (or x822 (and x593 (not x1146))) x263))
(assert (= x1171 (x59 (x269 x1171))))
(assert (x387 x953))
(assert (x896 274184521717934524641157099916833587218))
(assert (=> (>= 10000 x764) (= (x1522 x764) (x269 x764))))
(assert (x387 x957))
(assert (x896 x349))
(assert (x387 x46))
(assert (= x1234 (and x973 (not x1161))))
(assert (= (+ (x59 x459) 1) (x59 (x324 x459 1))))
(assert (x387 x724))
(assert (x387 x220))
(assert (x387 x1416))
(assert (x387 x925))
(assert (= (ite (= x560 x187) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x187)) (x989 x187)))
(assert (x387 x976))
(assert (x387 x467))
(assert (= (x1522 2960351575) (x269 2960351575)))
(assert (x387 x574))
(assert (x896 x25))
(assert (x896 x1547))
(assert (= (x59 (x269 x317)) x317))
(assert (= (ite (and x80 x347) (x1296 x1302) (x782 x1302)) (x771 x1302)))
(assert (=> (>= 10000 x241) (= (x1522 x241) (x269 x241))))
(assert (x387 x198))
(assert (x387 x1093))
(assert (=> (>= 10000 x508) (= (x269 x508) (x1522 x508))))
(assert (x387 x290))
(assert (x387 x1491))
(assert (x387 x1284))
(assert (x387 x1063))
(assert (x387 x863))
(assert (x896 x257))
(assert (x896 x652))
(assert (x387 x883))
(assert (x387 x1037))
(assert (= (x698 x383) (ite (= x383 x1473) x548 (x1449 x383))))
(assert (= x964 (x59 (x269 x964))))
(assert (x387 x1126))
(assert (x387 x375))
(assert (= (x1353 x88) (ite (= x1359 x88) x493 (x581 x88))))
(assert (= (ite (and (not x260) x1007 (not x905) x1406) (x503 x1348) (ite (and x1007 (not x260) (not x1406)) (x344 x1348) (ite (and x260 x1007) (x344 x1348) (x500 x1348)))) (x33 x1348)))
(assert (x387 x445))
(assert (x387 x588))
(assert (= (x503 x510) (ite (= x735 x510) x1424 (x344 x510))))
(assert (x387 x1514))
(assert (x387 x891))
(assert (= x1007 (or x1299 (and x799 (not x320)))))
(assert (x387 x722))
(assert (x387 x270))
(assert (x387 x1321))
(assert (x700 x857))
(assert (x387 x378))
(assert (= (x1106 x478) (ite (= x558 x478) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x609 x478))))
(assert (= (x59 (x269 x739)) x739))
(assert (= x288 (x59 (x269 x288))))
(assert (=> (<= x496 10000) (= (x1522 x496) (x269 x496))))
(assert (x387 x15))
(assert (x387 x452))
(assert (x896 x603))
(assert (= (ite (and x689 x89) (x1353 x1326) (x331 x1326)) (x1375 x1326)))
(assert (x387 x1554))
(assert (= (x59 (x1522 1517119036)) 1517119036))
(assert (x387 x1153))
(assert (=> (<= x259 10000) (= (x1522 x259) (x269 x259))))
(assert (=> (<= x883 10000) (= (x269 x883) (x1522 x883))))
(assert (= (ite (= x1538 x746) x656 (x779 x746)) (x1322 x746)))
(assert (x387 x807))
(assert (x387 x479))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x59 (x1522 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (x896 x301))
(assert (x896 x1442))
(assert (x387 x216))
(assert (= (ite (= x1359 x457) x493 (x581 x457)) (x1353 x457)))
(assert (x387 x98))
(assert (= x1001 x517))
(assert (= (x1368 x150) (ite (= x1309 x150) x64 (x1151 x150))))
(assert (= (x1151 x88) (ite (= x749 x88) x636 (x672 x88))))
(assert (x387 x1024))
(assert (= (x783 x157) (ite (and x84 x852) (x1259 x157) (x1248 x157))))
(assert (x387 x640))
(assert (= (x1375 x88) (ite (and x689 x89) (x1353 x88) (x331 x88))))
(assert (x387 x1422))
(assert (x387 x903))
(assert (= x1019 (or (and (not x222) x1396) (and (not x706) x600))))
(assert (x387 x1527))
(assert (x387 x861))
(assert (x387 x177))
(assert (x387 x319))
(assert (x896 x333))
(assert (= x130 (=> (and (not (> 1968616202 x177)) (= (x146 (x269 x990) x1456 0) x655) (not (= 2211524764 x177)) (= x1354 x1339) (> x1282 0) (not (= 1968616202 x177)) (not (= x177 1986467848)) (= x177 2258409472) (not (= x177 2061678023)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1354) (>= 1461501637330902918203684832716283019655932542975 x990) (= (x1492 (x269 274184521717934524641157099916833587206)) x1282) (not (< x177 911411945)) (< x177 2293535753) (>= x1354 0) (= x1456 (x146 (x269 x12) (x1522 6) 0)) (= (x1458 x655) x1354)) (=> (and (= x350 x1339) (= x1020 x1090) (= x588 x1255)) x442))))
(assert (x387 x1201))
(assert (=> (<= x1240 10000) (= (x269 x1240) (x1522 x1240))))
(assert (x387 x716))
(assert (x387 x1240))
(assert (= (x611 x457) (ite (and x1213 x1091) (x1306 x457) (x712 x457))))
(assert (x896 x1564))
(assert (x896 x1003))
(assert (x896 x178))
(assert (= x8 x70))
(assert (= x1393 x593))
(assert (x387 x1401))
(assert (x387 x798))
(assert (x896 274184521717934524641157099916833587214))
(assert (x387 x364))
(assert (= (ite (and x1237 x1007) (x460 x583) (x954 x583)) (x1316 x583)))
(assert (x387 x1525))
(assert (= (x698 x1413) (ite (= x1413 x1473) x548 (x1449 x1413))))
(assert (= (x672 x1470) (ite (= x1480 x1470) x1412 (x989 x1470))))
(assert (= x542 (x59 (x269 x542))))
(assert (= (x59 (x1522 2061678023)) 2061678023))
(assert (x896 x461))
(assert (x387 x543))
(assert (x387 x306))
(assert (=> (<= x429 10000) (= (x1522 x429) (x269 x429))))
(assert (x387 x118))
(assert (x387 x1448))
(assert (x387 x1366))
(assert (= (x59 (x269 x259)) x259))
(assert (= (ite (and x1319 x80) (x1065 x888) (ite (and (not x1319) x80 x390) (x717 x888) (x1080 x888))) (x992 x888)))
(assert (x896 x577))
(assert (= (ite (= x455 x1402) x1391 (x698 x1402)) (x884 x1402)))
(assert (x387 x603))
(assert (x700 x1092))
(assert (= (x59 (x269 x461)) x461))
(assert (= (ite (= x735 x456) x1424 (x344 x456)) (x503 x456)))
(assert (= (x59 (x1522 1000000000000000000)) 1000000000000000000))
(assert (= (x672 x65) (ite (= x1480 x65) x1412 (x989 x65))))
(assert (= (=> (= x249 0) x1044) x1073))
(assert (= (ite (and x89 x689) (x1353 x1470) (x331 x1470)) (x1375 x1470)))
(assert (x387 x1176))
(assert (=> (<= x1487 10000) (= (x269 x1487) (x1522 x1487))))
(assert (x896 x429))
(assert (= (x59 (x269 x323)) x323))
(assert (x387 x546))
(assert (= (x698 x88) (ite (= x88 x1473) x548 (x1449 x88))))
(assert (x387 x1328))
(assert (x387 x1391))
(assert (= (x506 x1326) (ite (= x1326 x405) x63 (x173 x1326))))
(assert (x387 x858))
(assert (x387 x1550))
(assert (x387 x493))
(assert (x387 x292))
(assert (x387 x1460))
(assert (= (x698 x478) (ite (= x1473 x478) x548 (x1449 x478))))
(assert (x896 x477))
(assert (= x1396 (and x226 x373)))
(assert (= (x59 (x269 x262)) x262))
(assert (= (or (and (not x69) x1163) (and (not x830) x1512)) x1313))
(assert (not x310))
(assert (x387 x1506))
(assert (= (x90 x157) 0))
(assert (x387 x977))
(assert (= x93 (x59 (x269 x93))))
(assert (x387 x786))
(assert (x896 x988))
(assert (= (x1151 x157) (ite (= x157 x749) x636 (x672 x157))))
(assert (= (ite (= x749 x150) x636 (x672 x150)) (x1151 x150)))
(assert (x387 x1472))
(assert (x387 x186))
(assert (=> (<= x876 10000) (= (x1522 x876) (x269 x876))))
(assert (x387 x1199))
(assert (x387 x1105))
(assert (x387 x92))
(assert (= (ite (and x852 x84) (x1259 x150) (x1248 x150)) (x783 x150)))
(assert (x387 x1404))
(assert (x387 x1362))
(assert (= (=> (= x1283 (< 0 x349)) (and (=> x1283 x1533) (=> (not x1283) x765))) x627))
(assert (x896 x640))
(assert (= (x36 x1470) (ite (and (not x260) x1007 x1406 (not x905)) (x506 x1470) (ite (and (not x260) x1007 (not x1406)) (x173 x1470) (ite (and x1007 x260) (x173 x1470) (x1569 x1470))))))
(assert (x896 x97))
(assert (x387 x910))
(assert (= (x1353 x65) (ite (= x65 x1359) x493 (x581 x65))))
(assert (=> (<= x1527 10000) (= (x1522 x1527) (x269 x1527))))
(assert (= (ite (and x1007 (not x905) x1406 (not x260)) (x503 x510) (ite (and (not x1406) (not x260) x1007) (x344 x510) (ite (and x1007 x260) (x344 x510) (x500 x510)))) (x33 x510)))
(assert (x387 x1140))
(assert (x387 x1023))
(assert (= (x884 x1413) (ite (= x1413 x455) x1391 (x698 x1413))))
(assert (x387 x1123))
(assert (= x799 x80))
(assert (x387 x1177))
(assert (= (x59 (x1522 468353030)) 468353030))
(assert (x387 x1168))
(assert (= (x698 x941) (ite (= x1473 x941) x548 (x1449 x941))))
(assert (x387 x1287))
(assert (= x651 (x59 (x269 x651))))
(assert (x896 x990))
(assert (x387 x122))
(assert (x387 x1444))
(assert (x896 x151))
(assert (x387 x734))
(assert (= (ite (= x446 x705) x237 (x475 x705)) (x173 x705)))
(assert (= (ite (= x138 x1535) x336 (x33 x138)) (x538 x138)))
(assert (x896 x1051))
(assert (x387 x1518))
(assert (=> (<= x1301 10000) (= (x1522 x1301) (x269 x1301))))
(assert (= (x1522 1000000000000000000) (x269 1000000000000000000)))
(assert (= (x672 x174) (ite (= x174 x1480) x1412 (x989 x174))))
(assert (= x246 (=> (= x1017 0) x1158)))
(assert (x387 x212))
(assert (x896 x843))
(assert (=> (<= x701 10000) (= (x1522 x701) (x269 x701))))
(assert (= (x36 x705) (ite (and (not x260) x1007 (not x905) x1406) (x506 x705) (ite (and (not x1406) x1007 (not x260)) (x173 x705) (ite (and x260 x1007) (x173 x705) (x1569 x705))))))
(assert (=> (>= 10000 x843) (= (x1522 x843) (x269 x843))))
(assert (x896 x143))
(assert (x387 x652))
(assert (x387 x133))
(assert (x896 x496))
(assert (x387 x1349))
(assert (x387 x876))
(assert (x896 x1514))
(assert (= (=> (and (= (x881 1461501637330902918203684832716283019655932542975 x944) x1289) (= (x146 (x269 x1289) x1254 0) x1162) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x468) (<= x994 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1316 x1162) x994) (>= x994 0) (not (< x468 x349)) (= x1254 (x146 (x269 x349) (x1522 6) 0)) (>= x468 0) (= (= x994 0) x1146)) (and (=> (and (<= 0 x1013) (= x1013 x1114) (= (x146 (x269 x652) x845 0) x572) (<= x1013 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x881 1461501637330902918203684832716283019655932542975 x944) x652) (= x1357 0) (not x1146) (= x1013 (x341 x572)) (= x845 (x146 (x269 x349) (x1522 10) 0))) x204) (=> x1146 x555))) x1356))
(assert (x387 x1570))
(assert (x387 x1036))
(assert (= (ite (= x941 x1359) x493 (x581 x941)) (x1353 x941)))
(assert (x387 x448))
(assert (= x948 x601))
(assert (=> (<= x988 10000) (= (x1522 x988) (x269 x988))))
(assert (x387 x1354))
(assert (= x1502 (=> (and (> 2293535753 x681) (= (x146 (x269 x1429) (x1522 10) 0) x1489) (<= 0 x984) (< x681 911411945) (>= 1461501637330902918203684832716283019655932542975 x1548) (= x1321 (x1492 (x269 274184521717934524641157099916833587206))) (= x924 x984) (> x1321 0) (= (x191 x1086) x984) (> 468353030 x681) (= (x146 (x269 x1548) x1489 0) x1086) (= 69947311 x681) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x984)) (=> (and (= x1020 x867) (= x106 x924) (= x1255 x533) (= x1383 x1487)) x1543))))
(assert (= (x59 (x324 x1392 1)) (+ (x59 x1392) 1)))
(assert (=> (<= x1539 10000) (= (x1522 x1539) (x269 x1539))))
(assert (= (x90 160) 0))
(assert (= (ite (= x457 x1473) x548 (x1449 x457)) (x698 x457)))
(assert (x387 x1055))
(assert (= (or (and (not x1407) x563) (and x751 (not x1275))) x10))
(assert (= (=> (= 0 x1273) x774) x1552))
(assert (x387 x1538))
(assert (= (ite (= x1402 x558) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x609 x1402)) (x1106 x1402)))
(assert (x387 x710))
(assert (= (ite (and x728 x1007) (x534 x1086) (x443 x1086)) (x341 x1086)))
(assert (x387 x676))
(assert (= x1547 (x59 (x269 x1547))))
(assert (=> (<= x1051 10000) (= (x1522 x1051) (x269 x1051))))
(assert (= x371 (x59 (x269 x371))))
(assert (x387 x1114))
(assert (= (x59 (x269 x1169)) x1169))
(assert (x387 x301))
(assert (= (x59 (x269 x151)) x151))
(assert (x387 x931))
(assert (x387 x1521))
(assert (x387 x597))
(assert (x387 x333))
(assert (x387 x631))
(assert (x387 x573))
(assert (x896 x1057))
(assert (x896 x648))
(assert (x387 x901))
(assert (x387 x134))
(assert (x387 x1002))
(assert (x387 x1424))
(assert (x387 x1134))
(assert (= (ite (and x410 x1380 (not x877) x409 x1385 x163) (x1368 x478) (ite (and x409 x410 x1385 x1380 (not x163)) (x1151 x478) (ite (and x1380 x409 (not x1385) x410) (x672 x478) (ite (and x409 x1380 (not x410)) (x989 x478) (x561 x478))))) (x963 x478)))
(assert (= (x59 (x269 x429)) x429))
(assert (x387 x669))
(assert (x387 x119))
(assert (x387 x726))
(assert (x387 x1291))
(assert (= (ite (= x88 x405) x63 (x173 x88)) (x506 x88)))
(assert (x387 x651))
(assert (x387 x1131))
(assert (= true x522))
(assert (x387 x62))
(assert (= (x989 x457) (ite (= x457 x560) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x457))))
(assert (x896 x1017))
(assert (x387 x1357))
(assert (x387 x107))
(assert (x387 x602))
(assert (x387 x88))
(assert (x387 x480))
(assert (x387 x1441))
(assert (x387 x100))
(assert (=> (<= x54 10000) (= (x1522 x54) (x269 x54))))
(assert (= (ite (and x410 x1380 (not x877) x163 x409 x1385) (x1368 x157) (ite (and (not x163) x409 x410 x1385 x1380) (x1151 x157) (ite (and x409 x1380 (not x1385) x410) (x672 x157) (ite (and x409 x1380 (not x410)) (x989 x157) (x561 x157))))) (x963 x157)))
(assert (= (x269 2061678023) (x1522 2061678023)))
(assert (x387 x233))
(assert (= (ite (= x1480 x187) x1412 (x989 x187)) (x672 x187)))
(assert (= (ite (= x1309 x174) x64 (x1151 x174)) (x1368 x174)))
(assert (= x957 (x59 (x269 x957))))
(assert (x387 x1212))
(assert (= x1460 (x59 (x269 x1460))))
(assert (= x826 (x59 (x269 x826))))
(assert (= (x59 (x269 x640)) x640))
(assert (x387 x1312))
(assert (x387 x1379))
(assert (x387 x1503))
(assert (x387 x289))
(assert (x896 x198))
(assert (= (ite (= x405 x383) x63 (x173 x383)) (x506 x383)))
(assert (= (x1375 x478) (ite (and x689 x89) (x1353 x478) (x331 x478))))
(assert (= (=> (and (= x113 (x926 (x269 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x1383) (<= 0 x907) (<= x907 1461501637330902918203684832716283019655932542975) (= x242 false) (>= x1408 0) (>= 1461501637330902918203684832716283019655932542975 x1020) x128 (= false x819) (<= x1408 1461501637330902918203684832716283019655932542975) (>= x1383 0) (>= x1020 0) (<= 0 x1507) (= x853 x907) (= (x926 (x269 274184521717934524641157099916833587214)) x1507) (= x12 x1255) (<= 0 x807) (>= x113 0) (= 2939843472 x1215) (= x24 false) (<= 0 x519) (= x519 (x926 (x269 274184521717934524641157099916833587218))) (= x807 x707) (= (> (x1492 (x269 274184521717934524641157099916833587206)) 0) x128) (= (> (x1492 (x269 274184521717934524641157099916833587218)) 0) x1403) (= (< 0 (x1492 (x269 274184521717934524641157099916833587214))) x176) x1403 (= false x314) (<= x807 1461501637330902918203684832716283019655932542975) x176 (= x1023 5) (= x990 x1020)) x130) x310))
(assert (=> (<= x12 10000) (= (x269 x12) (x1522 x12))))
(assert (= x1350 (and (not x1213) x1091)))
(assert (x896 x1068))
(assert (x387 x825))
(assert (=> (<= x1171 10000) (= (x1522 x1171) (x269 x1171))))
(assert (x387 x892))
(assert (x387 x637))
(assert (x387 x1171))
(assert (x387 x1329))
(assert (=> (<= x1542 10000) (= (x1522 x1542) (x269 x1542))))
(assert (x387 x1343))
(assert (= (x989 x1359) (ite (= x560 x1359) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1110 x1359))))
(assert (x387 x1558))
(assert (x387 x1147))
(assert (=> (<= x648 10000) (= (x269 x648) (x1522 x648))))
(assert (= (x698 x150) (ite (= x1473 x150) x548 (x1449 x150))))
(assert (x896 x15))
(assert (= x541 (=> (and (<= x1441 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1441 x1129) (<= x288 1461501637330902918203684832716283019655932542975) (> 911411945 x1192) (= x1192 69947311) (= x862 (x146 (x269 x288) x1241 0)) (< 0 x780) (>= x1441 0) (= (x534 x862) x1441) (= (x1492 (x269 274184521717934524641157099916833587206)) x780) (= x1241 (x146 (x269 x234) (x1522 10) 0)) (< x1192 468353030) (< x1192 2293535753)) (=> (and (= x1020 x1230) (= x929 x570) (= x350 x914) (= x713 x1032) (= x218 (and x617 x855)) (= (>= x18 x914) x801) (= x350 x1074) x801 (= x688 (or x218 (not x1571))) (= x1166 0) (= x1554 x18) x688 (= x617 (= 0 x570)) (= 0 x254) (= x855 (= x713 0)) (= x1255 x1171) (= x1129 x929) (= (= 0 x1074) x1571) (= 0 x140) (= x1383 x151)) x116))))
(assert (x387 x1455))
(assert (=> (<= x1230 10000) (= (x1522 x1230) (x269 x1230))))
(assert (x387 x795))
(assert (x387 x1358))
(assert (x387 x291))
(assert (x387 x257))
(assert (x387 x1109))
(check-sat)
