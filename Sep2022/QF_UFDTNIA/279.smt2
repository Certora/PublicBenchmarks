(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x2765 0)) (((x747 (x487 Int)) (x4659 (x4220 x2765) (x3872 Int)) (x4708 (x1675 x2765) (x1855 x2765) (x5218 Int)))))
(declare-fun x3647 () Bool)
(declare-fun x4829 () Int)
(declare-fun x3000 () Int)
(declare-fun x3926 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x4443 () Bool)
(declare-fun x3424 () Int)
(declare-fun x4056 () Bool)
(declare-fun x5308 () Bool)
(declare-fun x2693 (Int) Int)
(declare-fun x2925 () Int)
(declare-fun x3713 () Int)
(declare-fun x1521 () Int)
(declare-fun x3082 () Bool)
(declare-fun x5102 () Int)
(declare-fun x943 () Int)
(declare-fun x4069 () Int)
(declare-fun x1153 () Bool)
(declare-fun x4544 () Bool)
(declare-fun x2113 () Int)
(declare-fun x113 () Int)
(declare-fun x2244 () Bool)
(declare-fun x1877 () Int)
(declare-fun x2955 (Int) Int)
(declare-fun x4000 () Int)
(declare-fun x341 () Int)
(declare-fun x2909 () Int)
(declare-fun x1117 () Int)
(declare-fun x1868 () Bool)
(declare-fun x1507 () Int)
(declare-fun x4428 () Bool)
(declare-fun x2568 () Int)
(declare-fun x4996 () Bool)
(declare-fun x4848 () Bool)
(declare-fun x588 () Int)
(declare-fun x5170 () Int)
(declare-fun x3642 () Bool)
(declare-fun x5231 () Int)
(declare-fun x2796 () Bool)
(declare-fun x2479 () Int)
(declare-fun x4155 () Int)
(declare-fun x4895 () Bool)
(declare-fun x1894 () Int)
(declare-fun x544 () Bool)
(declare-fun x1536 () Int)
(declare-fun x4959 () Bool)
(declare-fun x3552 () Bool)
(declare-fun x4447 () Bool)
(declare-fun x568 () Bool)
(declare-fun x3560 () Int)
(declare-fun x4046 () Bool)
(declare-fun x4274 () Bool)
(declare-fun x363 () Int)
(declare-fun x4440 () Bool)
(declare-fun x5137 () Int)
(declare-fun x950 () Bool)
(declare-fun x5198 () Bool)
(declare-fun x3709 () Bool)
(declare-fun x1723 () Bool)
(declare-fun x171 () Bool)
(declare-fun x3790 () Int)
(declare-fun x3784 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x4608 () Int)
(declare-fun x497 () Bool)
(declare-fun x3051 () Bool)
(declare-fun x840 () Bool)
(declare-fun x354 () Bool)
(declare-fun x1583 () Int)
(declare-fun x3078 () Int)
(declare-fun x736 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x4594 () Bool)
(declare-fun x2590 () Int)
(declare-fun x2915 () Int)
(declare-fun x3691 (Int) Int)
(declare-fun x3441 (Int) Int)
(declare-fun x4467 () Int)
(declare-fun x3699 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x5178 () Bool)
(declare-fun x4665 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x3951 () Bool)
(declare-fun x5148 () Bool)
(declare-fun x4633 () Int)
(declare-fun x1578 () Int)
(declare-fun x4710 () Int)
(declare-fun x2870 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x3658 (Int) Int)
(declare-fun x4816 () Bool)
(declare-fun x2278 () Bool)
(declare-fun x2970 () Bool)
(declare-fun x4469 () Bool)
(declare-fun x676 () Int)
(declare-fun x365 () Bool)
(declare-fun x3908 () Int)
(declare-fun x1475 () Int)
(declare-fun x2754 () Int)
(declare-fun x3759 () Int)
(declare-fun x2150 () Bool)
(declare-fun x3751 () Bool)
(declare-fun x2507 () Bool)
(declare-fun x3360 () Int)
(declare-fun x2037 () Int)
(declare-fun x5160 () Bool)
(declare-fun x4441 () Bool)
(declare-fun x4821 () Int)
(declare-fun x4397 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x3866 () Int)
(declare-fun x4744 () Bool)
(declare-fun x5259 () Int)
(declare-fun x1477 () Bool)
(declare-fun x4621 () Bool)
(declare-fun x3634 () Bool)
(declare-fun x3334 () Int)
(declare-fun x3896 () Bool)
(declare-fun x2381 (Int) Int)
(declare-fun x4892 (Int) Int)
(declare-fun x4413 () Int)
(declare-fun x3525 () Bool)
(declare-fun x2734 () Bool)
(declare-fun x5001 () Int)
(declare-fun x831 () Int)
(declare-fun x305 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x3304 (Int) Int)
(declare-fun x4751 () Int)
(declare-fun x2763 () Int)
(declare-fun x627 () Bool)
(declare-fun x3846 () Bool)
(declare-fun x420 () Int)
(declare-fun x1334 () Bool)
(declare-fun x4825 () Int)
(declare-fun x3233 () Int)
(declare-fun x1907 () Int)
(declare-fun x175 () Int)
(declare-fun x643 () Bool)
(declare-fun x2013 () Int)
(declare-fun x5097 () Int)
(declare-fun x2157 () Bool)
(declare-fun x787 () Bool)
(declare-fun x5294 () Bool)
(declare-fun x47 () Bool)
(declare-fun x4586 () Bool)
(declare-fun x663 () Bool)
(declare-fun x2273 () Bool)
(declare-fun x4606 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x4301 (Int) Int)
(declare-fun x4663 () Int)
(declare-fun x4683 () Bool)
(declare-fun x2052 () Bool)
(declare-fun x1151 () Bool)
(declare-fun x4871 () Int)
(declare-fun x3418 (Int) Int)
(declare-fun x4913 () Bool)
(declare-fun x5096 () Int)
(declare-fun x3992 () Int)
(declare-fun x3819 () Bool)
(declare-fun x2625 () Int)
(declare-fun x2589 () Bool)
(declare-fun x2353 () Int)
(declare-fun x3248 () Bool)
(declare-fun x3503 () Int)
(declare-fun x1289 () Int)
(declare-fun x4566 () Int)
(declare-fun x2493 () Int)
(declare-fun x4416 () Bool)
(declare-fun x881 () Bool)
(declare-fun x2981 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x4006 () Bool)
(declare-fun x3996 () Int)
(declare-fun x3131 () Bool)
(declare-fun x3031 () Int)
(declare-fun x882 () Int)
(declare-fun x2993 () Int)
(declare-fun x3501 () Int)
(declare-fun x2234 () Int)
(declare-fun x1608 () Int)
(declare-fun x2797 (Int) Int)
(declare-fun x3102 () Int)
(declare-fun x2549 () Int)
(declare-fun x1326 (Int) Int)
(declare-fun x955 () Int)
(declare-fun x4883 (x2765) Int)
(declare-fun x2744 (Int) Int)
(declare-fun x4317 () Int)
(declare-fun x3843 () Bool)
(declare-fun x2178 () Bool)
(declare-fun x4453 () Bool)
(declare-fun x452 () Bool)
(declare-fun x4353 () Int)
(declare-fun x4423 () Int)
(declare-fun x3101 () Bool)
(declare-fun x4529 () Int)
(declare-fun x4967 () Bool)
(declare-fun x1717 () Int)
(declare-fun x2202 () Bool)
(declare-fun x5183 () Bool)
(declare-fun x2911 () Bool)
(declare-fun x3126 () Bool)
(declare-fun x407 () Int)
(declare-fun x1857 () Bool)
(declare-fun x1333 () Int)
(declare-fun x2399 () Bool)
(declare-fun x4589 () Bool)
(declare-fun x2104 () Bool)
(declare-fun x2235 () Int)
(declare-fun x1411 () Int)
(declare-fun x4545 () Bool)
(declare-fun x4450 () Bool)
(declare-fun x4585 () Bool)
(declare-fun x5245 () Int)
(declare-fun x1932 () Int)
(declare-fun x2192 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x2240 () Int)
(declare-fun x1744 () Bool)
(declare-fun x3044 () Bool)
(declare-fun x3108 () Int)
(declare-fun x4163 () Int)
(declare-fun x4226 () Int)
(declare-fun x4190 () Int)
(declare-fun x1514 () Bool)
(declare-fun x952 () Int)
(declare-fun x2809 () Bool)
(declare-fun x333 () Int)
(declare-fun x2128 () Bool)
(declare-fun x4707 () Int)
(declare-fun x4654 () Bool)
(declare-fun x519 () Int)
(declare-fun x3989 () x2765)
(declare-fun x945 () Int)
(declare-fun x366 () Int)
(declare-fun x380 (Int) Int)
(declare-fun x3621 () Int)
(declare-fun x4268 () Int)
(declare-fun x1976 () Bool)
(declare-fun x3444 () Bool)
(declare-fun x3310 () Int)
(declare-fun x177 () Int)
(declare-fun x1361 () Bool)
(declare-fun x2163 () Bool)
(declare-fun x3613 () Bool)
(declare-fun x521 () x2765)
(declare-fun x465 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x1556 () x2765)
(declare-fun x1010 () Int)
(declare-fun x250 () Int)
(declare-fun x3720 () Bool)
(declare-fun x3432 () Bool)
(declare-fun x2746 () Bool)
(declare-fun x4893 () Bool)
(declare-fun x972 () Bool)
(declare-fun x5284 () Bool)
(declare-fun x2348 () Bool)
(declare-fun x4060 () Bool)
(declare-fun x3865 () Bool)
(declare-fun x4076 () Int)
(declare-fun x3935 () Bool)
(declare-fun x3584 () Bool)
(declare-fun x1540 () Int)
(declare-fun x2716 () Int)
(declare-fun x4839 () Int)
(declare-fun x5169 () Bool)
(declare-fun x692 () Int)
(declare-fun x2541 () Bool)
(declare-fun x1898 () Int)
(declare-fun x1922 () Int)
(declare-fun x4284 () Bool)
(declare-fun x776 () Int)
(declare-fun x1150 () Int)
(declare-fun x2253 () Int)
(declare-fun x2608 () Int)
(declare-fun x4283 () Int)
(declare-fun x223 () Int)
(declare-fun x1111 () Int)
(declare-fun x492 () Int)
(declare-fun x2215 () Int)
(declare-fun x5127 () Bool)
(declare-fun x526 () Int)
(declare-fun x4798 () Bool)
(declare-fun x5273 () Int)
(declare-fun x5057 () Int)
(declare-fun x683 () Int)
(declare-fun x2918 () Bool)
(declare-fun x1183 () Int)
(declare-fun x3920 () Bool)
(declare-fun x3197 () Bool)
(declare-fun x1461 (Int) Int)
(declare-fun x4801 () Int)
(declare-fun x3932 () Int)
(declare-fun x2002 () Int)
(declare-fun x879 () Int)
(declare-fun x782 () Int)
(declare-fun x1041 () Int)
(declare-fun x235 () Int)
(declare-fun x749 (x2765) Int)
(declare-fun x2517 () Int)
(declare-fun x4915 () Bool)
(declare-fun x2070 () Bool)
(declare-fun x3912 (Int) Int)
(declare-fun x3416 () Bool)
(declare-fun x3112 () Int)
(declare-fun x4746 () Bool)
(declare-fun x975 () Int)
(declare-fun x3543 () Bool)
(declare-fun x4427 () Int)
(declare-fun x4626 () Bool)
(declare-fun x4402 () Int)
(declare-fun x3326 () Int)
(declare-fun x4987 () Bool)
(declare-fun x1031 () Int)
(declare-fun x4390 () Bool)
(declare-fun x775 () Bool)
(declare-fun x1198 () Int)
(declare-fun x3019 () Int)
(declare-fun x1745 () Bool)
(declare-fun x4923 (Int) Int)
(declare-fun x2410 (Int) Int)
(declare-fun x3795 () Bool)
(declare-fun x2106 () Int)
(declare-fun x3633 () Int)
(declare-fun x2327 () Bool)
(declare-fun x4856 () Int)
(declare-fun x4148 () Bool)
(declare-fun x4081 () Bool)
(declare-fun x3725 () Bool)
(declare-fun x1626 () Int)
(declare-fun x4601 () Bool)
(declare-fun x4229 () Bool)
(declare-fun x3049 () Bool)
(declare-fun x3434 () Bool)
(declare-fun x1325 () Bool)
(declare-fun x96 () Bool)
(declare-fun x3296 () Int)
(declare-fun x385 () Bool)
(declare-fun x2649 () Bool)
(declare-fun x1208 (Int) Int)
(declare-fun x2415 () Bool)
(declare-fun x3682 () Int)
(declare-fun x2100 () Bool)
(declare-fun x14 () Int)
(declare-fun x3614 () Bool)
(declare-fun x2440 () Bool)
(declare-fun x4336 () Int)
(declare-fun x2488 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x3788 () Int)
(declare-fun x4047 () Int)
(declare-fun x2201 () Int)
(declare-fun x3520 () Bool)
(declare-fun x4776 () Bool)
(declare-fun x691 () Bool)
(declare-fun x910 () Bool)
(declare-fun x4513 () Int)
(declare-fun x2665 () Bool)
(declare-fun x1827 () Int)
(declare-fun x876 () Int)
(declare-fun x4666 () Bool)
(declare-fun x255 () Int)
(declare-fun x2748 () Int)
(declare-fun x3121 () Int)
(declare-fun x3679 () Bool)
(declare-fun x871 () Int)
(declare-fun x1928 () Int)
(declare-fun x1352 () Int)
(declare-fun x4514 () Int)
(declare-fun x4506 () Int)
(declare-fun x5113 () Bool)
(declare-fun x476 () Bool)
(declare-fun x5219 () Int)
(declare-fun x4990 () Bool)
(declare-fun x485 () Int)
(declare-fun x3889 () Bool)
(declare-fun x4089 () Int)
(declare-fun x477 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x3164 () Bool)
(declare-fun x3119 () Bool)
(declare-fun x3474 () Bool)
(declare-fun x1622 () Int)
(declare-fun x1388 () Bool)
(declare-fun x4314 () Int)
(declare-fun x3826 () Bool)
(declare-fun x5140 () Bool)
(declare-fun x5128 () Bool)
(declare-fun x897 () Bool)
(declare-fun x609 () Bool)
(declare-fun x4574 () Bool)
(declare-fun x3283 (Int) Int)
(declare-fun x1682 () Bool)
(declare-fun x2125 () Bool)
(declare-fun x91 () Bool)
(declare-fun x338 () Int)
(declare-fun x1434 () Bool)
(declare-fun x1522 () Int)
(declare-fun x3198 () Int)
(declare-fun x4434 () Bool)
(declare-fun x5052 () Bool)
(declare-fun x3612 () Int)
(declare-fun x1396 () Bool)
(declare-fun x2382 () Int)
(declare-fun x4255 () Int)
(declare-fun x2819 () Bool)
(declare-fun x4879 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x3644 () Int)
(declare-fun x1699 () Bool)
(declare-fun x2031 () Bool)
(declare-fun x3405 () Int)
(declare-fun x1929 () Bool)
(declare-fun x4576 () Int)
(declare-fun x2442 () Bool)
(declare-fun x144 () Bool)
(declare-fun x2987 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x1841 () Int)
(declare-fun x2495 () Int)
(declare-fun x708 () Bool)
(declare-fun x3514 () Bool)
(declare-fun x2349 () Bool)
(declare-fun x4516 () Int)
(declare-fun x4097 () Bool)
(declare-fun x3744 () Bool)
(declare-fun x5299 () Int)
(declare-fun x2752 () Int)
(declare-fun x4063 () Int)
(declare-fun x2583 () Int)
(declare-fun x1777 (Int) Int)
(declare-fun x4072 () Int)
(declare-fun x3077 () Int)
(declare-fun x2780 () Bool)
(declare-fun x4341 () Int)
(declare-fun x2146 () Int)
(declare-fun x1736 () Bool)
(declare-fun x4622 () Int)
(declare-fun x4343 (Int) Int)
(declare-fun x2576 () Bool)
(declare-fun x84 () x2765)
(declare-fun x650 () Bool)
(declare-fun x1003 () Int)
(declare-fun x1271 () Bool)
(declare-fun x1359 () Int)
(declare-fun x4112 () Int)
(declare-fun x5051 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x3217 () Int)
(declare-fun x995 () Int)
(declare-fun x1006 () Int)
(declare-fun x3239 () Int)
(declare-fun x2392 () Bool)
(declare-fun x1748 () Int)
(declare-fun x1225 () Bool)
(declare-fun x4102 () Bool)
(declare-fun x2533 () x2765)
(declare-fun x3848 () Int)
(declare-fun x329 () Int)
(declare-fun x5030 (x2765) Int)
(declare-fun x3205 () Bool)
(declare-fun x4723 () Bool)
(declare-fun x3676 () Bool)
(declare-fun x4790 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x4451 () Int)
(declare-fun x934 () Int)
(declare-fun x3252 () Bool)
(declare-fun x2791 () Int)
(declare-fun x2671 () Bool)
(declare-fun x2439 () Bool)
(declare-fun x4362 () Bool)
(declare-fun x3863 () Int)
(declare-fun x90 () Int)
(declare-fun x1716 () Int)
(declare-fun x2123 () Int)
(declare-fun x2795 () Int)
(declare-fun x4944 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x4630 () Int)
(declare-fun x849 () Int)
(declare-fun x5061 () Int)
(declare-fun x1270 (Int) Int)
(declare-fun x4531 (Int) Int)
(declare-fun x3884 () Int)
(declare-fun x5175 () Int)
(declare-fun x3061 () Int)
(declare-fun x3756 () Bool)
(declare-fun x3067 () Bool)
(declare-fun x1770 () Int)
(declare-fun x571 () Bool)
(declare-fun x1769 () Int)
(declare-fun x1145 () Bool)
(declare-fun x3278 () Int)
(declare-fun x3037 () Int)
(declare-fun x2893 () Bool)
(declare-fun x1341 (Int) Int)
(declare-fun x3048 () Bool)
(declare-fun x3919 () Int)
(declare-fun x414 () Bool)
(declare-fun x2905 () Int)
(declare-fun x4264 () Int)
(declare-fun x4477 () Bool)
(declare-fun x4556 (Int) Int)
(declare-fun x4528 () Bool)
(declare-fun x1033 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x948 (Int) Int)
(declare-fun x5168 () Int)
(declare-fun x62 (Int) Int)
(declare-fun x3483 () Bool)
(declare-fun x1298 (Int) Int)
(declare-fun x3366 () Int)
(declare-fun x1696 () Bool)
(declare-fun x5074 () Bool)
(declare-fun x353 () Bool)
(declare-fun x2365 () Bool)
(declare-fun x302 () Bool)
(declare-fun x3752 () Bool)
(declare-fun x2897 () Bool)
(declare-fun x795 () Bool)
(declare-fun x5258 () Bool)
(declare-fun x2604 () Bool)
(declare-fun x4624 () Bool)
(declare-fun x3315 () Int)
(declare-fun x3299 () Bool)
(declare-fun x4246 () Int)
(declare-fun x493 () Int)
(declare-fun x3223 () Int)
(declare-fun x118 () Int)
(declare-fun x5014 () Bool)
(declare-fun x4772 () Bool)
(declare-fun x900 () Bool)
(declare-fun x762 () Bool)
(declare-fun x1741 () x2765)
(declare-fun x4241 () Int)
(declare-fun x1731 () Bool)
(declare-fun x4446 () Bool)
(declare-fun x2434 () Bool)
(declare-fun x3125 () Int)
(declare-fun x1059 () Int)
(declare-fun x3705 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x162 () Int)
(declare-fun x1518 () Int)
(declare-fun x4169 () Int)
(declare-fun x4565 (Int) Int)
(declare-fun x2127 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x3538 () Int)
(declare-fun x2758 () Bool)
(declare-fun x4344 () Int)
(declare-fun x2170 () Int)
(declare-fun x4679 () Int)
(declare-fun x3481 () Bool)
(declare-fun x3378 () Int)
(declare-fun x3146 (Int) Int)
(declare-fun x2051 () Bool)
(declare-fun x2508 () Int)
(declare-fun x1906 () Int)
(declare-fun x1563 () Bool)
(declare-fun x752 () Bool)
(declare-fun x4080 () Int)
(declare-fun x308 () Bool)
(declare-fun x3268 () Bool)
(declare-fun x3941 () Int)
(declare-fun x4732 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x1512 () Int)
(declare-fun x3765 () Int)
(declare-fun x570 () Int)
(declare-fun x2372 () Bool)
(declare-fun x2857 () Int)
(declare-fun x4286 () Bool)
(declare-fun x2531 () Int)
(declare-fun x2270 () Int)
(declare-fun x922 () Bool)
(declare-fun x3336 () Bool)
(declare-fun x481 () Bool)
(declare-fun x591 () Bool)
(declare-fun x2171 () Int)
(declare-fun x4859 () Bool)
(declare-fun x4273 () Bool)
(declare-fun x475 () Int)
(declare-fun x3522 () Bool)
(declare-fun x4448 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x2015 () Bool)
(declare-fun x694 () Bool)
(declare-fun x4326 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x3003 () Int)
(declare-fun x3783 () Bool)
(declare-fun x368 () Bool)
(declare-fun x1487 () Int)
(declare-fun x4257 () Bool)
(declare-fun x3680 () Int)
(declare-fun x4828 () Int)
(declare-fun x1549 () Bool)
(declare-fun x4999 () Int)
(declare-fun x5157 () Int)
(declare-fun x3789 () Bool)
(declare-fun x4012 () Int)
(declare-fun x525 (Int) Int)
(declare-fun x1465 () Bool)
(declare-fun x718 () Bool)
(declare-fun x5171 () Int)
(declare-fun x2091 () x2765)
(declare-fun x429 () Bool)
(declare-fun x2149 () Int)
(declare-fun x4671 () Int)
(declare-fun x2095 () Int)
(declare-fun x152 () Int)
(declare-fun x1874 () Bool)
(declare-fun x4920 () Int)
(declare-fun x4178 () Int)
(declare-fun x1273 () Bool)
(declare-fun x4300 () Int)
(declare-fun x4720 () Bool)
(declare-fun x3138 () Bool)
(declare-fun x4936 () Bool)
(declare-fun x3697 () Int)
(declare-fun x3224 () Bool)
(declare-fun x165 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x5009 () Int)
(declare-fun x3893 () Int)
(declare-fun x3916 () Bool)
(declare-fun x2081 (Int) Int)
(declare-fun x2212 () Bool)
(declare-fun x3414 () Int)
(declare-fun x183 () Int)
(declare-fun x2936 () Int)
(declare-fun x1210 () Bool)
(declare-fun x1628 () Bool)
(declare-fun x2505 () Bool)
(declare-fun x1322 () Int)
(declare-fun x3667 () Bool)
(declare-fun x2866 (x2765) Int)
(declare-fun x1825 () Bool)
(declare-fun x2741 () Int)
(declare-fun x2858 () Int)
(declare-fun x4954 () Bool)
(declare-fun x1902 () Bool)
(declare-fun x447 () Bool)
(declare-fun x506 () Int)
(declare-fun x5112 () Int)
(declare-fun x4906 () Int)
(declare-fun x3510 () Int)
(declare-fun x523 () Int)
(declare-fun x2522 () Bool)
(declare-fun x4715 () Bool)
(declare-fun x1070 () Int)
(declare-fun x4697 () Int)
(declare-fun x4158 () Bool)
(declare-fun x4914 () Bool)
(declare-fun x1107 () Int)
(declare-fun x1842 () Int)
(declare-fun x652 () Int)
(declare-fun x1519 () Bool)
(declare-fun x4325 () Int)
(declare-fun x289 () Bool)
(declare-fun x4051 () Int)
(declare-fun x3656 () Bool)
(declare-fun x2363 () Int)
(declare-fun x469 () Int)
(declare-fun x3298 () Bool)
(declare-fun x697 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x259 () Bool)
(declare-fun x2483 () Bool)
(declare-fun x870 () Int)
(declare-fun x2899 () Int)
(declare-fun x4291 () Int)
(declare-fun x2890 () Int)
(declare-fun x4593 () Int)
(declare-fun x1991 () Int)
(declare-fun x5003 () x2765)
(declare-fun x872 () Bool)
(declare-fun x4476 () Int)
(declare-fun x5212 () Int)
(declare-fun x3847 () Int)
(declare-fun x3393 () Bool)
(declare-fun x2526 () Bool)
(declare-fun x3840 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x362 () Int)
(declare-fun x1905 () Int)
(declare-fun x4658 () Int)
(declare-fun x4432 () Bool)
(declare-fun x4740 () Int)
(declare-fun x1379 () Bool)
(declare-fun x3094 (Int) Int)
(declare-fun x2454 () Bool)
(declare-fun x1832 () Int)
(declare-fun x520 () Int)
(declare-fun x379 () Bool)
(declare-fun x1238 () Int)
(declare-fun x2891 () x2765)
(declare-fun x213 () Bool)
(declare-fun x2321 () Int)
(declare-fun x4724 () Int)
(declare-fun x2546 () Bool)
(declare-fun x2513 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x4596 () Bool)
(declare-fun x1895 () Int)
(declare-fun x3853 () Bool)
(declare-fun x4495 () Bool)
(declare-fun x1659 () Int)
(declare-fun x3262 () x2765)
(declare-fun x1227 () Int)
(declare-fun x103 () Int)
(declare-fun x4573 (Int) Int)
(declare-fun x1358 () Int)
(declare-fun x20 () Int)
(declare-fun x3036 () Int)
(declare-fun x4976 () Int)
(declare-fun x2301 () Bool)
(declare-fun x1098 () Int)
(declare-fun x844 () Bool)
(declare-fun x4534 () Bool)
(declare-fun x3190 () Bool)
(declare-fun x1587 () Int)
(declare-fun x4296 () Bool)
(declare-fun x4212 () Int)
(declare-fun x1105 () Bool)
(declare-fun x1733 (Int) Int)
(declare-fun x940 () Int)
(declare-fun x2831 () Bool)
(declare-fun x398 () Bool)
(declare-fun x3029 () Int)
(declare-fun x3646 () Bool)
(declare-fun x3331 () Int)
(declare-fun x4356 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x4008 (x2765) Int)
(declare-fun x3420 () Int)
(declare-fun x4285 () Bool)
(declare-fun x2007 () Int)
(declare-fun x758 () Int)
(declare-fun x2829 () Bool)
(declare-fun x545 () Bool)
(declare-fun x2976 () Bool)
(declare-fun x3561 () Bool)
(declare-fun x3439 () Int)
(declare-fun x408 () Int)
(declare-fun x4713 () Int)
(declare-fun x2426 () Bool)
(declare-fun x4119 () Int)
(declare-fun x2652 () Bool)
(declare-fun x5251 () Int)
(declare-fun x4116 () Int)
(declare-fun x3948 (Int) Int)
(declare-fun x2690 () Bool)
(declare-fun x1061 () Int)
(declare-fun x558 (Int) Int)
(declare-fun x2599 () Bool)
(declare-fun x3225 () Int)
(declare-fun x4389 () Int)
(declare-fun x3910 (x2765) Int)
(declare-fun x3677 () Int)
(declare-fun x1652 () Bool)
(declare-fun x816 () Int)
(declare-fun x1618 () Bool)
(declare-fun x2867 () Bool)
(declare-fun x2064 () Int)
(declare-fun x180 () Int)
(declare-fun x4034 () Int)
(declare-fun x4 (Int) Int)
(declare-fun x4465 () Int)
(declare-fun x1610 () Int)
(declare-fun x5087 () Bool)
(declare-fun x4278 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x2624 () Bool)
(declare-fun x2788 () Bool)
(declare-fun x3701 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x2289 () Int)
(declare-fun x2455 () Bool)
(declare-fun x4258 () Bool)
(declare-fun x4191 () Bool)
(declare-fun x4306 () Int)
(declare-fun x4417 () x2765)
(declare-fun x884 () Bool)
(declare-fun x3063 (x2765) Int)
(declare-fun x555 () Int)
(declare-fun x3135 () Bool)
(declare-fun x668 () Bool)
(declare-fun x4650 () Bool)
(declare-fun x722 () Int)
(declare-fun x214 () Int)
(declare-fun x4061 () Bool)
(declare-fun x5101 () Int)
(declare-fun x2681 () Bool)
(declare-fun x3917 () Bool)
(declare-fun x2409 () Bool)
(declare-fun x550 () Int)
(declare-fun x5287 () Int)
(declare-fun x4272 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x243 () Bool)
(declare-fun x841 () Bool)
(declare-fun x2933 () Int)
(declare-fun x5017 () Int)
(declare-fun x416 () Bool)
(declare-fun x3194 (Int) Int)
(declare-fun x4064 () Int)
(declare-fun x3050 () Bool)
(declare-fun x4649 (Int) Int)
(declare-fun x3157 () Bool)
(declare-fun x1166 (Int) Int)
(declare-fun x2822 () Bool)
(declare-fun x4686 () Bool)
(declare-fun x409 () Int)
(declare-fun x4819 () Bool)
(declare-fun x2138 (x2765) Int)
(declare-fun x1517 () Int)
(declare-fun x1362 () Int)
(declare-fun x4330 () Bool)
(declare-fun x4352 () Bool)
(declare-fun x2180 () Bool)
(declare-fun x5049 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x1840 () Bool)
(declare-fun x2357 () Bool)
(declare-fun x1649 () Bool)
(declare-fun x2641 () Int)
(declare-fun x4855 () Int)
(declare-fun x3761 () Int)
(declare-fun x2268 () Int)
(declare-fun x462 () Bool)
(declare-fun x3243 () Int)
(declare-fun x2089 () Bool)
(declare-fun x3173 () Bool)
(declare-fun x2585 () Bool)
(declare-fun x411 () Bool)
(declare-fun x2097 () Int)
(declare-fun x2525 () Int)
(declare-fun x3782 () Bool)
(declare-fun x222 () Int)
(declare-fun x2344 () Bool)
(declare-fun x1988 () Bool)
(declare-fun x2471 () Bool)
(declare-fun x410 () Int)
(declare-fun x5242 () x2765)
(declare-fun x3472 () Bool)
(declare-fun x2818 () Bool)
(declare-fun x3567 () Bool)
(declare-fun x72 () Bool)
(declare-fun x4138 () Int)
(declare-fun x5213 () Int)
(declare-fun x3486 () Int)
(declare-fun x4475 () Bool)
(declare-fun x3043 () Bool)
(declare-fun x2206 () Bool)
(declare-fun x4994 () Bool)
(declare-fun x5184 () Bool)
(declare-fun x4227 () Bool)
(declare-fun x3881 () Int)
(declare-fun x2119 () Bool)
(declare-fun x3786 () Int)
(declare-fun x4925 () Bool)
(declare-fun x3901 () Int)
(declare-fun x5240 () Bool)
(declare-fun x2684 () Bool)
(declare-fun x968 () x2765)
(declare-fun x5047 () Int)
(declare-fun x4867 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x2355 () Int)
(declare-fun x3222 () Int)
(declare-fun x2577 () Int)
(declare-fun x2607 () Bool)
(declare-fun x903 () Bool)
(declare-fun x4218 () Bool)
(declare-fun x3957 () Int)
(declare-fun x767 () Int)
(declare-fun x4636 () Int)
(declare-fun x2580 () Int)
(declare-fun x4018 () Int)
(declare-fun x3839 () Int)
(declare-fun x5283 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x4750 () x2765)
(declare-fun x3122 () Bool)
(declare-fun x3321 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x3821 () Bool)
(declare-fun x3508 () Bool)
(declare-fun x383 () Int)
(declare-fun x3747 () Int)
(declare-fun x4277 () Bool)
(declare-fun x4234 () Int)
(declare-fun x4694 () Int)
(declare-fun x449 () Bool)
(declare-fun x2364 () Int)
(declare-fun x3433 () Bool)
(declare-fun x4126 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x3311 () Int)
(declare-fun x738 () Bool)
(declare-fun x5144 () Int)
(declare-fun x474 () Bool)
(declare-fun x2078 () Bool)
(declare-fun x1805 (Int) Int)
(declare-fun x5008 () Int)
(declare-fun x2444 () Int)
(declare-fun x4719 () Bool)
(declare-fun x2571 () Bool)
(declare-fun x1911 (Int) Int)
(declare-fun x5254 () Int)
(declare-fun x4899 () Int)
(declare-fun x60 (Int) Int)
(declare-fun x3478 () Bool)
(declare-fun x4454 (Int) Int)
(declare-fun x1939 () Bool)
(declare-fun x2879 () Bool)
(declare-fun x196 () Int)
(declare-fun x3467 () Bool)
(declare-fun x273 () Int)
(declare-fun x2453 () Int)
(declare-fun x278 () Bool)
(declare-fun x4170 () Bool)
(declare-fun x2815 () Bool)
(declare-fun x2662 () Int)
(declare-fun x2540 (x2765) Int)
(declare-fun x4210 () Bool)
(declare-fun x1063 () Int)
(declare-fun x1529 () Int)
(declare-fun x4206 () Bool)
(declare-fun x4192 () Bool)
(declare-fun x3609 () Int)
(declare-fun x4327 () Int)
(declare-fun x3413 () Int)
(declare-fun x1348 () Int)
(declare-fun x2554 () Int)
(declare-fun x678 () Bool)
(declare-fun x450 () Bool)
(declare-fun x2053 () Bool)
(declare-fun x5167 () Int)
(declare-fun x3358 () Int)
(declare-fun x1904 () Bool)
(declare-fun x2997 () Int)
(declare-fun x2074 () Int)
(declare-fun x18 () Int)
(declare-fun x695 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x1599 () Bool)
(declare-fun x4722 () Int)
(declare-fun x271 () Int)
(declare-fun x2808 () Bool)
(declare-fun x766 () Int)
(declare-fun x824 () Bool)
(declare-fun x3531 () Bool)
(declare-fun x731 () Bool)
(declare-fun x756 () Int)
(declare-fun x172 () Int)
(declare-fun x3281 () Bool)
(declare-fun x2159 () Int)
(declare-fun x3806 () Int)
(declare-fun x535 () Bool)
(declare-fun x4928 (Int) Int)
(declare-fun x4768 () Bool)
(declare-fun x2452 () Int)
(declare-fun x3961 () Int)
(declare-fun x662 () Bool)
(declare-fun x4876 () Int)
(declare-fun x4294 () x2765)
(declare-fun x2124 () Int)
(declare-fun x2644 () Int)
(declare-fun x3139 () Int)
(declare-fun x2130 () Bool)
(declare-fun x4254 () Bool)
(declare-fun x1771 () Int)
(declare-fun x3626 () Int)
(declare-fun x369 () Bool)
(declare-fun x1823 () Bool)
(declare-fun x3748 () Bool)
(declare-fun x4986 () Bool)
(declare-fun x4216 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x960 () Bool)
(declare-fun x301 () Int)
(declare-fun x4093 () Bool)
(declare-fun x4478 () Int)
(declare-fun x4752 () Int)
(declare-fun x4858 () Int)
(declare-fun x4924 () Bool)
(declare-fun x582 () Bool)
(declare-fun x5046 () Bool)
(declare-fun x1009 () Int)
(declare-fun x698 () Bool)
(declare-fun x1160 () Int)
(declare-fun x4812 () Bool)
(declare-fun x2111 () Int)
(declare-fun x3669 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x3230 () Int)
(declare-fun x3891 () Bool)
(declare-fun x1617 () Int)
(declare-fun x2904 () Bool)
(declare-fun x2854 () Int)
(declare-fun x4079 () x2765)
(declare-fun x1139 () Int)
(declare-fun x3606 () Int)
(declare-fun x2393 () Bool)
(declare-fun x2708 (Int) Int)
(declare-fun x516 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x2600 () Bool)
(declare-fun x1602 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x2704 () Bool)
(declare-fun x4705 () Bool)
(declare-fun x401 () Int)
(declare-fun x3657 () Bool)
(declare-fun x5081 () Bool)
(declare-fun x4822 () Int)
(declare-fun x2982 () Bool)
(declare-fun x287 () Bool)
(declare-fun x896 () Bool)
(declare-fun x803 () Int)
(declare-fun x4105 () Int)
(declare-fun x704 () Bool)
(declare-fun x1555 () Int)
(declare-fun x4370 () Int)
(declare-fun x3777 () Bool)
(declare-fun x3469 () Int)
(declare-fun x5135 () Int)
(declare-fun x620 () x2765)
(declare-fun x1720 () Bool)
(declare-fun x2884 () Bool)
(declare-fun x2082 () Int)
(declare-fun x2056 () Bool)
(declare-fun x4830 () Bool)
(declare-fun x209 () Bool)
(declare-fun x4371 () Int)
(declare-fun x1590 () Int)
(declare-fun x5034 () Bool)
(declare-fun x2164 () Bool)
(declare-fun x151 () Bool)
(declare-fun x5194 () Int)
(declare-fun x211 () Int)
(declare-fun x874 () Bool)
(declare-fun x811 () Int)
(declare-fun x4510 () Bool)
(declare-fun x3732 () Int)
(declare-fun x4009 () Int)
(declare-fun x1606 () Int)
(declare-fun x5217 () Int)
(declare-fun x725 () Bool)
(declare-fun x4850 () Bool)
(declare-fun x4103 () Bool)
(declare-fun x3447 () Int)
(declare-fun x4771 () Bool)
(declare-fun x4363 () Int)
(declare-fun x2996 (Int) Int)
(declare-fun x5079 () Bool)
(declare-fun x4039 () Bool)
(declare-fun x4809 () Bool)
(declare-fun x3372 () Bool)
(declare-fun x2277 () Int)
(declare-fun x4392 () Int)
(declare-fun x619 () Int)
(declare-fun x5257 () x2765)
(declare-fun x3458 () Bool)
(declare-fun x1305 () Int)
(declare-fun x4031 () Int)
(declare-fun x2813 () Int)
(declare-fun x2673 () Bool)
(declare-fun x4372 () Bool)
(declare-fun x730 () Bool)
(declare-fun x2061 () Int)
(declare-fun x125 () Int)
(declare-fun x1263 () Bool)
(declare-fun x3924 () Int)
(declare-fun x2661 () Int)
(declare-fun x522 () Bool)
(declare-fun x2605 () Int)
(declare-fun x3236 () Bool)
(declare-fun x2648 () Int)
(declare-fun x783 (Int) Int)
(declare-fun x413 () Int)
(declare-fun x3925 () Int)
(declare-fun x4298 () Bool)
(declare-fun x4342 () Int)
(declare-fun x3746 () Bool)
(declare-fun x1679 () Bool)
(declare-fun x890 () Bool)
(declare-fun x5173 () Bool)
(declare-fun x382 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x5197 () Int)
(declare-fun x1673 () Int)
(declare-fun x3291 () Int)
(declare-fun x5306 () Bool)
(declare-fun x4597 () Bool)
(declare-fun x245 () Int)
(declare-fun x1077 () Int)
(declare-fun x4896 () Bool)
(declare-fun x1158 () Int)
(declare-fun x3186 () Bool)
(declare-fun x2115 () Int)
(declare-fun x63 () Int)
(declare-fun x1817 () Bool)
(declare-fun x2501 () Int)
(declare-fun x4245 () Int)
(declare-fun x2248 () Bool)
(declare-fun x1930 () Bool)
(declare-fun x1625 () Int)
(declare-fun x4598 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x1112 (Int) Int)
(declare-fun x1375 () Bool)
(declare-fun x451 (Int) Int)
(declare-fun x3824 () Int)
(declare-fun x4602 () Int)
(declare-fun x1979 () Bool)
(declare-fun x2077 () x2765)
(declare-fun x3915 (x2765) Int)
(declare-fun x2678 () Int)
(declare-fun x3070 () Int)
(declare-fun x1315 () Int)
(declare-fun x1134 () Int)
(declare-fun x3485 () Bool)
(declare-fun x1819 () Int)
(declare-fun x649 () Int)
(declare-fun x2388 () Int)
(declare-fun x785 () Int)
(declare-fun x3312 () Bool)
(declare-fun x4563 () Int)
(declare-fun x458 () Int)
(declare-fun x1903 () Bool)
(declare-fun x120 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x3276 (Int) Int)
(declare-fun x5013 () Bool)
(declare-fun x2492 () Bool)
(declare-fun x4799 () Bool)
(declare-fun x3251 () Int)
(declare-fun x1407 () Bool)
(declare-fun x5199 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x700 () Bool)
(declare-fun x2591 (Int) Int)
(declare-fun x3356 () Int)
(declare-fun x3132 () Int)
(declare-fun x4437 () Int)
(declare-fun x208 () Bool)
(declare-fun x3763 () Bool)
(declare-fun x5313 () Bool)
(declare-fun x796 (Int) Int)
(declare-fun x1914 () Int)
(declare-fun x4988 () Int)
(declare-fun x1786 () Int)
(declare-fun x4718 () Bool)
(declare-fun x4805 () Bool)
(declare-fun x4842 () Int)
(declare-fun x746 () Bool)
(declare-fun x5023 () Int)
(declare-fun x263 () Int)
(declare-fun x4125 () Bool)
(declare-fun x4421 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x4165 () Int)
(declare-fun x1090 () Bool)
(declare-fun x3319 () Int)
(declare-fun x1128 () Bool)
(declare-fun x2820 () Int)
(declare-fun x1011 () Bool)
(declare-fun x3995 (Int) Int)
(declare-fun x4910 () Bool)
(declare-fun x1676 () Bool)
(declare-fun x4493 () Bool)
(declare-fun x3443 () Int)
(declare-fun x1747 () Int)
(declare-fun x3277 () Int)
(declare-fun x2735 () Int)
(declare-fun x2602 () Bool)
(declare-fun x3100 () Bool)
(declare-fun x1089 () Int)
(declare-fun x1103 () Bool)
(declare-fun x2732 () Bool)
(declare-fun x4248 () Int)
(declare-fun x2049 () Bool)
(declare-fun x1232 () Int)
(declare-fun x2065 () Int)
(declare-fun x230 () Bool)
(declare-fun x3185 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x651 () Int)
(declare-fun x3737 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x4682 () Bool)
(declare-fun x5005 () Bool)
(declare-fun x4189 () Int)
(declare-fun x2296 () Bool)
(declare-fun x1655 () Bool)
(declare-fun x3352 () Bool)
(declare-fun x5271 () Bool)
(declare-fun x2305 () Int)
(declare-fun x4287 () Int)
(declare-fun x2173 () Int)
(declare-fun x4520 () Int)
(declare-fun x3665 () Int)
(declare-fun x2631 (Int) Int)
(declare-fun x1656 () Int)
(declare-fun x85 () Int)
(declare-fun x2030 () Int)
(declare-fun x4964 () x2765)
(declare-fun x1700 () Bool)
(declare-fun x3421 () Int)
(declare-fun x3579 () Bool)
(declare-fun x5208 () Int)
(declare-fun x4912 () Int)
(declare-fun x4634 (Int) Int)
(declare-fun x2484 () Bool)
(declare-fun x5265 () Bool)
(declare-fun x1921 () Bool)
(declare-fun x4310 () Bool)
(declare-fun x2886 () Bool)
(declare-fun x4309 () Int)
(declare-fun x2979 () Int)
(declare-fun x1889 () Int)
(declare-fun x3723 () Int)
(declare-fun x2969 () Bool)
(declare-fun x4058 () Bool)
(declare-fun x2947 () Int)
(declare-fun x4322 () Int)
(declare-fun x402 () Int)
(declare-fun x2542 () Int)
(declare-fun x3165 (Int) Int)
(declare-fun x19 () Int)
(declare-fun x2181 () Int)
(declare-fun x124 () Int)
(declare-fun x1908 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x4007 () Int)
(declare-fun x4188 (x2765) Int)
(declare-fun x1896 () Int)
(declare-fun x168 () Int)
(declare-fun x1118 () Int)
(declare-fun x931 () Int)
(declare-fun x843 () Bool)
(declare-fun x5295 () Int)
(declare-fun x2417 () Int)
(declare-fun x4113 () Bool)
(declare-fun x2932 () Bool)
(declare-fun x3392 () Int)
(declare-fun x4833 () Int)
(declare-fun x4815 () Int)
(declare-fun x4419 () Bool)
(declare-fun x2499 (Int) Int)
(declare-fun x1497 () Int)
(declare-fun x1726 () Bool)
(declare-fun x4993 () Int)
(declare-fun x1909 () Int)
(declare-fun x2991 () Bool)
(declare-fun x974 () Int)
(declare-fun x5241 () Bool)
(declare-fun x2651 () Int)
(declare-fun x1613 () Bool)
(declare-fun x1634 () Int)
(declare-fun x4408 () x2765)
(declare-fun x3852 () Int)
(declare-fun x1029 () Bool)
(declare-fun x3237 () Int)
(declare-fun x5045 () Int)
(declare-fun x4122 () Int)
(declare-fun x1265 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x454 () Bool)
(declare-fun x3465 () Int)
(declare-fun x2988 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x322 () Bool)
(declare-fun x3707 () Int)
(declare-fun x990 () Bool)
(declare-fun x4114 () Bool)
(declare-fun x3339 () Bool)
(declare-fun x2952 () Int)
(declare-fun x3755 () Int)
(declare-fun x1438 () Int)
(declare-fun x4157 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x2214 () Bool)
(declare-fun x2022 () Bool)
(declare-fun x3601 () Int)
(declare-fun x4003 () Bool)
(declare-fun x4263 () Int)
(declare-fun x2653 () Int)
(declare-fun x3338 () Bool)
(declare-fun x2855 () Bool)
(declare-fun x1530 () Int)
(declare-fun x2863 () Int)
(declare-fun x1860 () Bool)
(declare-fun x4458 () Int)
(declare-fun x3536 () Bool)
(declare-fun x3604 () Bool)
(declare-fun x10 () x2765)
(declare-fun x2194 () Bool)
(declare-fun x2850 (Int) Int)
(declare-fun x4087 () x2765)
(declare-fun x1967 () Bool)
(declare-fun x4456 () Bool)
(declare-fun x1091 () Int)
(declare-fun x3670 () Int)
(declare-fun x4716 () x2765)
(declare-fun x1762 () Bool)
(declare-fun x3159 () Int)
(declare-fun x4640 () Bool)
(declare-fun x3 () Int)
(declare-fun x1395 () Bool)
(declare-fun x356 () Bool)
(declare-fun x560 (Int) Int)
(declare-fun x3757 () Int)
(declare-fun x4577 () Bool)
(declare-fun x1997 () Bool)
(declare-fun x5210 () Int)
(declare-fun x3818 () Bool)
(declare-fun x1489 (Int) Int)
(declare-fun x4410 () Int)
(declare-fun x4431 (Int) Int)
(declare-fun x770 (Int) Int)
(declare-fun x1223 () Bool)
(declare-fun x5032 () Int)
(declare-fun x666 (Int) Int)
(declare-fun x3346 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x2817 () Int)
(declare-fun x1848 () Bool)
(declare-fun x1794 () Int)
(declare-fun x3602 () Bool)
(declare-fun x4985 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x547 () Bool)
(declare-fun x190 () Int)
(declare-fun x3357 () Int)
(declare-fun x3545 () Bool)
(declare-fun x2596 () Bool)
(declare-fun x2967 (Int) Int)
(declare-fun x3202 () Int)
(declare-fun x4921 () Int)
(declare-fun x4444 () Int)
(declare-fun x907 () Bool)
(declare-fun x4162 () Int)
(declare-fun x1366 () Bool)
(declare-fun x3153 () Int)
(declare-fun x4981 () Bool)
(declare-fun x3369 (Int) Int)
(declare-fun x5011 () Bool)
(declare-fun x249 () Int)
(declare-fun x4584 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x2612 () x2765)
(declare-fun x4088 () Int)
(declare-fun x887 () Int)
(declare-fun x3245 () Int)
(declare-fun x4878 () Bool)
(declare-fun x491 () Int)
(declare-fun x3275 () Int)
(declare-fun x2294 () Int)
(declare-fun x2177 () Bool)
(declare-fun x4674 () Bool)
(declare-fun x31 () Int)
(declare-fun x2166 () Bool)
(declare-fun x1688 () Int)
(declare-fun x137 () Bool)
(declare-fun x470 () Int)
(declare-fun x5007 () Bool)
(declare-fun x2844 () Int)
(declare-fun x104 () Int)
(declare-fun x1591 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x4546 () Int)
(declare-fun x4604 () Bool)
(declare-fun x1705 () Int)
(declare-fun x1915 () Bool)
(declare-fun x220 () Bool)
(declare-fun x5220 () Int)
(declare-fun x3235 () Bool)
(declare-fun x2836 () Bool)
(declare-fun x4949 () Int)
(declare-fun x4894 () Int)
(declare-fun x4783 () Int)
(declare-fun x3574 (Int) Int)
(declare-fun x1773 () Int)
(declare-fun x1661 () Bool)
(declare-fun x5289 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x3900 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x3798 () Bool)
(declare-fun x4181 () Bool)
(declare-fun x2283 () Bool)
(declare-fun x2587 () Int)
(declare-fun x1331 () Bool)
(declare-fun x1439 () Int)
(declare-fun x3072 () Bool)
(declare-fun x2810 () Bool)
(declare-fun x3015 () Int)
(declare-fun x2422 () Int)
(declare-fun x4145 () Bool)
(declare-fun x1557 () Int)
(declare-fun x1355 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x2062 () Bool)
(declare-fun x3974 () Int)
(declare-fun x293 () Bool)
(declare-fun x1399 () Int)
(declare-fun x1034 () Bool)
(declare-fun x3523 () Int)
(declare-fun x4037 () Int)
(declare-fun x1124 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x3035 () Bool)
(declare-fun x4627 () Int)
(declare-fun x2983 () Int)
(declare-fun x1505 (Int Int) Int)
(declare-fun x4761 (x2765) Int)
(declare-fun x5193 () Int)
(declare-fun x3993 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x1949 (Int) Int)
(declare-fun x4338 () Bool)
(declare-fun x494 () Int)
(declare-fun x3541 () Int)
(declare-fun x2959 () Int)
(declare-fun x584 () Bool)
(declare-fun x4042 () Bool)
(declare-fun x5136 () Int)
(declare-fun x2379 () Int)
(declare-fun x1869 () Bool)
(declare-fun x721 () Int)
(declare-fun x1758 () Int)
(declare-fun x2055 () Bool)
(declare-fun x2059 () Bool)
(declare-fun x15 () Bool)
(declare-fun x4411 () Bool)
(declare-fun x1826 () Int)
(declare-fun x3792 () Int)
(declare-fun x991 () Bool)
(declare-fun x4537 () Int)
(declare-fun x3627 () Bool)
(declare-fun x453 () Bool)
(declare-fun x3463 () Bool)
(declare-fun x3871 () Bool)
(declare-fun x2536 () Bool)
(declare-fun x4632 () x2765)
(declare-fun x52 () Int)
(declare-fun x1969 () Bool)
(declare-fun x3982 () Int)
(declare-fun x2985 () Bool)
(declare-fun x3244 () Int)
(declare-fun x3750 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x1707 () Bool)
(declare-fun x4318 () Int)
(declare-fun x2578 () Bool)
(declare-fun x4502 () Int)
(declare-fun x1749 () Int)
(declare-fun x3002 () Int)
(declare-fun x3386 () Bool)
(declare-fun x2945 () Int)
(declare-fun x2964 () Int)
(declare-fun x1539 () Bool)
(declare-fun x5165 () Int)
(declare-fun x5152 () Int)
(declare-fun x3107 (Int) Int)
(declare-fun x1923 (Int) Int)
(declare-fun x744 () Bool)
(declare-fun x2487 () Bool)
(declare-fun x1791 () Int)
(declare-fun x4927 () Bool)
(declare-fun x2811 () Int)
(declare-fun x2394 () Bool)
(declare-fun x3034 () Bool)
(declare-fun x2129 () Int)
(declare-fun x1957 () Bool)
(declare-fun x2448 () Int)
(declare-fun x5181 () Int)
(declare-fun x79 () Int)
(declare-fun x2723 () Bool)
(declare-fun x2560 () x2765)
(declare-fun x2586 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x764 () Int)
(declare-fun x3903 () Int)
(declare-fun x2545 () Bool)
(declare-fun x3374 () Bool)
(declare-fun x3632 () Bool)
(declare-fun x2040 () Bool)
(declare-fun x4542 () Bool)
(declare-fun x5145 () Bool)
(declare-fun x1643 () Int)
(declare-fun x1627 () Bool)
(declare-fun x3694 () Int)
(declare-fun x5089 () Int)
(declare-fun x4497 () Bool)
(declare-fun x2402 () Int)
(declare-fun x1658 () Bool)
(declare-fun x3643 () Int)
(declare-fun x2747 () Int)
(declare-fun x2742 () Int)
(declare-fun x4617 () Bool)
(declare-fun x1706 () Int)
(declare-fun x3577 () Int)
(declare-fun x1962 () Bool)
(declare-fun x4266 () Int)
(declare-fun x1261 () Int)
(declare-fun x2429 () Int)
(declare-fun x2303 () Int)
(declare-fun x2821 () Int)
(declare-fun x3309 () Bool)
(declare-fun x3482 () Int)
(declare-fun x4033 () Int)
(declare-fun x3524 () Int)
(declare-fun x3938 () x2765)
(declare-fun x3878 () Bool)
(declare-fun x3830 () Bool)
(declare-fun x1971 () Int)
(declare-fun x438 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x2189 () Int)
(declare-fun x2509 () Int)
(declare-fun x717 () Int)
(declare-fun x640 () Bool)
(declare-fun x432 () Int)
(declare-fun x2329 () Bool)
(declare-fun x2352 () Int)
(declare-fun x4730 () Int)
(declare-fun x270 () Bool)
(declare-fun x801 () Int)
(declare-fun x2389 () Bool)
(declare-fun x4834 () Bool)
(declare-fun x3537 () Int)
(declare-fun x1162 (Int) Int)
(declare-fun x2999 () Int)
(declare-fun x3058 () Bool)
(declare-fun x3365 () Bool)
(declare-fun x4846 () Bool)
(declare-fun x1559 () Int)
(declare-fun x2603 () Bool)
(declare-fun x2230 () Bool)
(declare-fun x1689 () x2765)
(declare-fun x478 () Bool)
(declare-fun x513 () Int)
(declare-fun x4965 () Int)
(declare-fun x533 () Bool)
(declare-fun x3080 () Bool)
(declare-fun x2898 () Bool)
(declare-fun x1337 () Int)
(declare-fun x3254 () Bool)
(declare-fun x2080 () Int)
(declare-fun x1030 () Int)
(declare-fun x4455 () Bool)
(declare-fun x2263 () Int)
(declare-fun x3671 () x2765)
(declare-fun x4525 (x2765) Int)
(declare-fun x836 () Bool)
(declare-fun x4335 () Bool)
(declare-fun x1739 () Int)
(declare-fun x2200 () Int)
(declare-fun x2556 () Bool)
(declare-fun x3942 () Bool)
(declare-fun x1377 () Bool)
(declare-fun x3539 () Bool)
(declare-fun x4951 () Int)
(declare-fun x2386 () Bool)
(declare-fun x2764 () Bool)
(declare-fun x2238 () Int)
(declare-fun x1884 () Int)
(declare-fun x4094 () Bool)
(declare-fun x2470 () Bool)
(declare-fun x2914 () Bool)
(declare-fun x4308 () x2765)
(declare-fun x2233 () Int)
(declare-fun x496 () Int)
(declare-fun x4045 () Int)
(declare-fun x546 () Bool)
(declare-fun x512 () Bool)
(declare-fun x464 () Bool)
(declare-fun x2769 () Bool)
(declare-fun x2927 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x298 () Bool)
(declare-fun x2772 () Bool)
(declare-fun x979 () Bool)
(declare-fun x3562 () Bool)
(declare-fun x3968 () Int)
(declare-fun x1402 () Bool)
(declare-fun x1417 () Bool)
(declare-fun x311 () Int)
(declare-fun x5092 (Int) Int)
(declare-fun x3389 () Bool)
(declare-fun x3760 () Bool)
(declare-fun x4980 () Int)
(declare-fun x1279 () Bool)
(declare-fun x4129 () Int)
(declare-fun x833 (Int) Int)
(declare-fun x2318 () Int)
(declare-fun x4320 (Int) Int)
(declare-fun x1481 () Int)
(declare-fun x4360 () Bool)
(declare-fun x4115 () Int)
(declare-fun x4201 () Int)
(declare-fun x2755 () Int)
(declare-fun x4197 () Bool)
(declare-fun x2047 () Int)
(declare-fun x2990 () Int)
(declare-fun x394 () Int)
(declare-fun x932 () Bool)
(declare-fun x2003 () Int)
(declare-fun x1701 () Int)
(declare-fun x707 () Int)
(declare-fun x3994 () Int)
(declare-fun x2725 () Bool)
(declare-fun x3851 () Bool)
(declare-fun x4500 () Bool)
(declare-fun x566 () Bool)
(declare-fun x3404 () Bool)
(declare-fun x4430 () Int)
(declare-fun x2466 () Bool)
(declare-fun x1218 (Int) Int)
(declare-fun x55 () Int)
(declare-fun x3438 () Bool)
(declare-fun x919 () Bool)
(declare-fun x2476 () Int)
(declare-fun x4110 () Bool)
(declare-fun x1871 () Int)
(declare-fun x902 () Bool)
(declare-fun x4505 (Int) Int)
(declare-fun x3133 () Int)
(declare-fun x4887 () Bool)
(declare-fun x4217 () Bool)
(declare-fun x621 () Bool)
(declare-fun x3161 () Bool)
(declare-fun x3215 () Int)
(declare-fun x5260 () Bool)
(declare-fun x3220 () Int)
(declare-fun x51 () Bool)
(declare-fun x655 () Int)
(declare-fun x2774 () Int)
(declare-fun x1746 () Int)
(declare-fun x5095 () Bool)
(declare-fun x4961 () Bool)
(declare-fun x1974 () Int)
(declare-fun x231 (Int) Int)
(declare-fun x4969 () Bool)
(declare-fun x2807 () Bool)
(declare-fun x1371 () Int)
(declare-fun x2751 () Bool)
(declare-fun x3593 () Int)
(declare-fun x3831 () Bool)
(declare-fun x3285 () Int)
(declare-fun x4184 () Bool)
(declare-fun x39 () Bool)
(declare-fun x1250 () Int)
(declare-fun x4591 (Int) Int)
(declare-fun x4078 () Bool)
(declare-fun x4062 () Bool)
(declare-fun x2141 () Bool)
(declare-fun x4743 (Int) Int)
(declare-fun x4540 () Bool)
(declare-fun x3648 () Int)
(declare-fun x5138 () Int)
(declare-fun x2174 () Bool)
(declare-fun x357 () Bool)
(declare-fun x166 () Bool)
(declare-fun x5115 () Int)
(declare-fun x9 () Bool)
(declare-fun x1503 () Int)
(declare-fun x786 () Int)
(declare-fun x3869 () Int)
(declare-fun x112 () Int)
(declare-fun x23 () Int)
(declare-fun x264 () Int)
(declare-fun x2252 () Int)
(declare-fun x3104 () Bool)
(declare-fun x4171 () Int)
(declare-fun x845 () Bool)
(declare-fun x2966 () Int)
(declare-fun x5055 () Int)
(declare-fun x1597 () Bool)
(declare-fun x4439 () Int)
(declare-fun x1485 () Bool)
(declare-fun x2737 () Int)
(declare-fun x689 () Int)
(declare-fun x1283 () Int)
(declare-fun x2336 () Int)
(declare-fun x3700 () Bool)
(declare-fun x4460 () Int)
(declare-fun x3089 () Int)
(declare-fun x2186 () Int)
(declare-fun x300 () Int)
(declare-fun x3335 () Bool)
(declare-fun x813 () Int)
(declare-fun x3816 () Bool)
(declare-fun x1048 () Int)
(declare-fun x2121 () Bool)
(declare-fun x3120 () Bool)
(declare-fun x2205 () Bool)
(declare-fun x4779 () Int)
(declare-fun x3532 () Int)
(declare-fun x78 () Int)
(declare-fun x3812 (Int) Int)
(declare-fun x2711 () Int)
(declare-fun x3791 () Bool)
(declare-fun x4349 () Bool)
(declare-fun x2657 () Bool)
(declare-fun x3502 () Int)
(declare-fun x1102 () Bool)
(declare-fun x1752 () Int)
(declare-fun x4139 () Bool)
(declare-fun x1479 () Int)
(declare-fun x3867 (Int) Int)
(declare-fun x3521 () Int)
(declare-fun x1080 () Int)
(declare-fun x5 () Int)
(declare-fun x203 () Int)
(declare-fun x4599 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x5133 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x2299 () Int)
(declare-fun x4870 () Int)
(declare-fun x2286 () Bool)
(declare-fun x921 () Bool)
(declare-fun x2710 () Bool)
(declare-fun x3659 () Bool)
(declare-fun x4613 () Bool)
(declare-fun x3156 () Bool)
(declare-fun x4629 () Bool)
(declare-fun x4672 () Int)
(declare-fun x3803 () Bool)
(declare-fun x358 () Bool)
(declare-fun x3255 () Bool)
(declare-fun x1558 () Bool)
(declare-fun x2411 () Int)
(declare-fun x1574 () Int)
(declare-fun x3116 (Int) Int)
(declare-fun x5067 () Bool)
(declare-fun x2367 () Int)
(declare-fun x3923 () Int)
(declare-fun x2087 () Int)
(declare-fun x1809 () Int)
(declare-fun x2458 () Int)
(declare-fun x1363 () Int)
(declare-fun x2924 () Int)
(declare-fun x2293 () Bool)
(declare-fun x2221 () Int)
(declare-fun x3625 () Bool)
(declare-fun x4753 () Bool)
(declare-fun x2335 () Bool)
(declare-fun x2972 () Bool)
(declare-fun x3074 () Int)
(declare-fun x2597 () x2765)
(declare-fun x2432 () Int)
(declare-fun x2005 () Int)
(declare-fun x1942 () Int)
(declare-fun x2478 () Bool)
(declare-fun x2647 () Bool)
(declare-fun x5016 () Int)
(declare-fun x4756 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x2099 () Int)
(declare-fun x1194 () Int)
(declare-fun x505 () Int)
(declare-fun x1240 () Bool)
(declare-fun x3810 () Bool)
(declare-fun x131 () Bool)
(declare-fun x1385 () Int)
(declare-fun x3970 () Bool)
(declare-fun x3023 () Bool)
(declare-fun x735 () Bool)
(declare-fun x95 () Int)
(declare-fun x1498 () Int)
(declare-fun x4646 () Bool)
(declare-fun x2953 () Int)
(declare-fun x3397 () Bool)
(declare-fun x4407 () Int)
(declare-fun x4107 () Bool)
(declare-fun x4492 () Bool)
(declare-fun x233 () Int)
(declare-fun x606 () Bool)
(declare-fun x1985 (Int) Int)
(declare-fun x604 () Bool)
(declare-fun x4404 () Int)
(declare-fun x4029 () Int)
(declare-fun x5018 () Int)
(declare-fun x4813 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x4989 () Int)
(declare-fun x2862 () x2765)
(declare-fun x3738 () Bool)
(declare-fun x1120 () Int)
(declare-fun x3879 () Bool)
(declare-fun x2397 () Int)
(declare-fun x2645 () Bool)
(declare-fun x4760 (Int) Int)
(declare-fun x1464 () Bool)
(declare-fun x1807 () Int)
(declare-fun x3526 () Bool)
(declare-fun x2613 () Int)
(declare-fun x1455 () Int)
(declare-fun x645 () Bool)
(declare-fun x43 () Int)
(declare-fun x3466 () Bool)
(declare-fun x5215 () Int)
(declare-fun x726 () Bool)
(declare-fun x3242 () Int)
(declare-fun x2706 () Bool)
(declare-fun x3020 () Int)
(declare-fun x2034 () Int)
(declare-fun x58 () Int)
(declare-fun x4290 () Bool)
(declare-fun x68 () Bool)
(declare-fun x1768 () Int)
(declare-fun x2609 () x2765)
(declare-fun x5275 () Int)
(declare-fun x4442 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x3940 () Bool)
(declare-fun x4452 () Bool)
(declare-fun x3704 () Bool)
(declare-fun x2472 () Bool)
(declare-fun x2573 () Int)
(declare-fun x3114 () Int)
(declare-fun x1670 () Bool)
(declare-fun x810 () Bool)
(declare-fun x3422 () Bool)
(declare-fun x3382 () Bool)
(declare-fun x3174 () Bool)
(declare-fun x5139 () Bool)
(declare-fun x4156 () Bool)
(declare-fun x460 () Int)
(declare-fun x1370 () Bool)
(declare-fun x5276 () Bool)
(declare-fun x3797 () Bool)
(declare-fun x1347 () Int)
(declare-fun x42 () Bool)
(declare-fun x4837 () Bool)
(declare-fun x4393 () Int)
(declare-fun x4276 () Int)
(declare-fun x1191 () Bool)
(declare-fun x4605 () Bool)
(declare-fun x1729 () Bool)
(declare-fun x4814 () Bool)
(declare-fun x3181 () Int)
(declare-fun x978 () Int)
(declare-fun x920 () Bool)
(declare-fun x1083 () Int)
(declare-fun x4571 () Int)
(declare-fun x284 () Bool)
(declare-fun x4347 (Int) Int)
(declare-fun x4369 () Int)
(declare-fun x49 () Bool)
(declare-fun x549 () Int)
(declare-fun x3828 () Int)
(declare-fun x4811 (Int Int) Int)
(declare-fun x4150 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x5072 () Bool)
(declare-fun x5117 (Int) Int)
(declare-fun x1743 () Int)
(declare-fun x5196 () Bool)
(declare-fun x56 () Int)
(declare-fun x188 () Bool)
(declare-fun x73 () Bool)
(declare-fun x136 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x4714 (Int) Int)
(declare-fun x1601 () Int)
(declare-fun x4223 () Int)
(declare-fun x2139 () Bool)
(declare-fun x1913 () Int)
(declare-fun x4737 () Int)
(declare-fun x4891 () Bool)
(declare-fun x2675 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x635 () Bool)
(declare-fun x4511 () Bool)
(declare-fun x2485 () Bool)
(declare-fun x1977 () Int)
(declare-fun x946 () Int)
(declare-fun x3210 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x888 () Bool)
(declare-fun x5243 () Bool)
(declare-fun x1644 () Int)
(declare-fun x2063 () Int)
(declare-fun x5223 () Bool)
(declare-fun x4709 () Int)
(declare-fun x3429 () Bool)
(declare-fun x4807 () Int)
(declare-fun x4106 () Bool)
(declare-fun x861 () Int)
(declare-fun x3491 () Bool)
(declare-fun x3183 () Int)
(declare-fun x2362 () Bool)
(declare-fun x904 () Int)
(declare-fun x4401 () Int)
(declare-fun x1984 () Int)
(declare-fun x3246 () Int)
(declare-fun x3175 () Int)
(declare-fun x3462 () Bool)
(declare-fun x3876 () Int)
(declare-fun x135 () Bool)
(declare-fun x3945 () Bool)
(declare-fun x1122 () Int)
(declare-fun x472 () Int)
(declare-fun x343 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x4977 () Int)
(declare-fun x1796 () Int)
(declare-fun x3717 () Int)
(declare-fun x659 (Int) Int)
(declare-fun x3300 () Bool)
(declare-fun x2908 () Bool)
(declare-fun x5002 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x3442 () Bool)
(declare-fun x2575 (x2765) Int)
(declare-fun x5244 () Bool)
(declare-fun x4777 (Int) Int)
(declare-fun x1152 () Bool)
(declare-fun x3666 () Bool)
(declare-fun x608 () Int)
(declare-fun x2167 (Int) Int)
(declare-fun x1721 () Bool)
(declare-fun x2368 () Int)
(declare-fun x1007 () Int)
(declare-fun x5037 () Bool)
(declare-fun x5154 () Bool)
(declare-fun x1789 () Int)
(declare-fun x1450 () Bool)
(declare-fun x1054 () Int)
(declare-fun x3731 () Int)
(declare-fun x1301 () Bool)
(declare-fun x4968 () Bool)
(declare-fun x1242 () Int)
(declare-fun x1087 () Int)
(declare-fun x4960 () Int)
(declare-fun x4068 () Bool)
(declare-fun x2018 () Int)
(declare-fun x2413 () Int)
(declare-fun x45 () Bool)
(declare-fun x880 () Bool)
(declare-fun x625 () Int)
(declare-fun x3605 (Int) Int)
(declare-fun x3834 () Int)
(declare-fun x854 () Bool)
(declare-fun x433 () Bool)
(declare-fun x4675 () Int)
(declare-fun x4010 () Bool)
(declare-fun x4239 () Int)
(declare-fun x3039 () x2765)
(declare-fun x4262 () Int)
(declare-fun x1353 () Int)
(declare-fun x3693 () Bool)
(declare-fun x424 () Int)
(declare-fun x3152 () Int)
(declare-fun x2012 () Int)
(declare-fun x1562 () Bool)
(declare-fun x3314 () Bool)
(declare-fun x5021 () Int)
(declare-fun x2103 () Bool)
(declare-fun x4711 () Bool)
(declare-fun x2951 () Bool)
(declare-fun x3427 () Bool)
(declare-fun x3118 () Bool)
(declare-fun x2295 () Bool)
(declare-fun x1570 () Int)
(declare-fun x3547 () Int)
(declare-fun x2162 () Bool)
(declare-fun x5085 () Bool)
(declare-fun x2154 () x2765)
(declare-fun x1642 () Int)
(declare-fun x5216 () Bool)
(declare-fun x2561 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x2024 () Bool)
(declare-fun x269 (x2765) Int)
(declare-fun x1504 () Bool)
(declare-fun x3914 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x2287 () Int)
(declare-fun x4351 () Int)
(declare-fun x2042 () Int)
(declare-fun x3214 () Bool)
(declare-fun x3934 () Int)
(declare-fun x25 () Bool)
(declare-fun x5188 () Int)
(declare-fun x3395 () Int)
(declare-fun x5255 () Bool)
(declare-fun x713 () Int)
(declare-fun x4901 () Bool)
(declare-fun x314 () Int)
(declare-fun x2887 () Bool)
(declare-fun x2076 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x4482 () x2765)
(declare-fun x2837 () Int)
(declare-fun x2036 () Bool)
(declare-fun x4668 () Bool)
(declare-fun x4376 () Int)
(declare-fun x163 () Int)
(declare-fun x2935 () Bool)
(declare-fun x2840 () Int)
(declare-fun x5141 (Int) Int)
(declare-fun x3445 () Bool)
(declare-fun x3687 () Bool)
(declare-fun x3854 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x543 (Int) Int)
(declare-fun x2490 () Bool)
(declare-fun x2628 () Bool)
(declare-fun x2112 () Int)
(declare-fun x349 () Bool)
(declare-fun x1458 () Int)
(declare-fun x1751 () Bool)
(declare-fun x3227 () Bool)
(declare-fun x2241 () Bool)
(declare-fun x4052 () Int)
(declare-fun x5304 () Bool)
(declare-fun x3631 () Int)
(declare-fun x504 (Int) Int)
(declare-fun x2067 () Int)
(declare-fun x3130 () Bool)
(declare-fun x4729 () Int)
(declare-fun x1737 () Bool)
(declare-fun x389 (Int) Int)
(declare-fun x3134 () Int)
(declare-fun x1143 () Bool)
(declare-fun x5172 () Bool)
(declare-fun x2729 () Bool)
(declare-fun x71 () Int)
(declare-fun x2014 () Int)
(declare-fun x3998 () Int)
(declare-fun x1685 (Int) Int)
(declare-fun x1356 () Int)
(declare-fun x1260 () Bool)
(declare-fun x251 () Int)
(declare-fun x4297 () Int)
(declare-fun x3294 (Int) Int)
(declare-fun x4147 () Bool)
(declare-fun x3490 () Bool)
(declare-fun x3329 () Int)
(declare-fun x3040 () Int)
(declare-fun x2250 () Bool)
(declare-fun x257 () Bool)
(declare-fun x1327 () Int)
(declare-fun x3571 () Bool)
(declare-fun x1619 () Int)
(declare-fun x3983 () Int)
(declare-fun x318 () Int)
(declare-fun x3446 () Int)
(declare-fun x1469 () Bool)
(declare-fun x819 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x4706 () Int)
(declare-fun x1882 () Int)
(declare-fun x198 () Bool)
(declare-fun x1859 () Int)
(declare-fun x3615 () x2765)
(declare-fun x5262 () Bool)
(declare-fun x2698 () Int)
(declare-fun x1975 () Bool)
(declare-fun x734 () Int)
(declare-fun x1340 () Int)
(declare-fun x108 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x2378 () Int)
(declare-fun x2396 () Bool)
(declare-fun x4422 () Bool)
(declare-fun x93 () Bool)
(declare-fun x823 () Bool)
(declare-fun x4572 () Int)
(declare-fun x5305 () Bool)
(declare-fun x834 () Bool)
(declare-fun x2948 () Int)
(declare-fun x1947 () Int)
(declare-fun x4026 () Bool)
(declare-fun x2842 () Int)
(declare-fun x2500 () Int)
(declare-fun x1838 () Int)
(declare-fun x3111 () Int)
(declare-fun x5239 () Bool)
(declare-fun x4496 () Int)
(declare-fun x297 () Int)
(declare-fun x3295 () Bool)
(declare-fun x2830 () Int)
(declare-fun x3056 () Bool)
(declare-fun x176 () Int)
(declare-fun x4507 () Bool)
(declare-fun x763 () Int)
(declare-fun x3440 () Bool)
(declare-fun x1278 () Bool)
(declare-fun x3799 () Bool)
(declare-fun x1020 () Int)
(declare-fun x2687 () Int)
(declare-fun x821 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x1386 () Int)
(declare-fun x2210 () Bool)
(declare-fun x2026 () Int)
(declare-fun x653 () Bool)
(declare-fun x5293 () Bool)
(declare-fun x2400 () Bool)
(declare-fun x378 () Bool)
(declare-fun x4304 () Int)
(declare-fun x765 () Int)
(declare-fun x1419 () Int)
(declare-fun x2341 () Int)
(declare-fun x567 () Int)
(declare-fun x2903 () Int)
(declare-fun x2251 () Bool)
(declare-fun x4792 () Bool)
(declare-fun x2611 () Bool)
(declare-fun x1653 () Bool)
(declare-fun x799 () Int)
(declare-fun x3599 () Int)
(declare-fun x140 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x4638 () Bool)
(declare-fun x1648 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x3999 () Int)
(declare-fun x5263 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x838 () Int)
(declare-fun x524 () Bool)
(declare-fun x4699 () Bool)
(declare-fun x4527 () Bool)
(declare-fun x1621 () Bool)
(declare-fun x4698 () Int)
(declare-fun x924 () Bool)
(declare-fun x1436 () Int)
(declare-fun x266 () Int)
(declare-fun x4764 () Bool)
(declare-fun x195 () Int)
(declare-fun x5090 () Bool)
(declare-fun x3192 () Bool)
(declare-fun x5027 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x3802 () Bool)
(declare-fun x2562 () Int)
(declare-fun x1312 () Bool)
(declare-fun x3608 () Bool)
(declare-fun x3207 () Bool)
(declare-fun x2184 () Int)
(declare-fun x807 () Bool)
(declare-fun x3149 () Int)
(declare-fun x2196 () Bool)
(declare-fun x2896 () Bool)
(declare-fun x3820 () Bool)
(declare-fun x4027 () Bool)
(declare-fun x4806 () Bool)
(declare-fun x2274 () Bool)
(declare-fun x3553 () Int)
(declare-fun x4662 (Int) Int)
(declare-fun x597 () Int)
(declare-fun x441 () Int)
(declare-fun x1415 () Bool)
(declare-fun x3979 () Bool)
(declare-fun x3449 () Int)
(declare-fun x710 () Int)
(declare-fun x2839 () Bool)
(declare-fun x4946 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x59 () Int)
(declare-fun x631 () Bool)
(declare-fun x674 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x2227 () Int)
(declare-fun x1129 () Int)
(declare-fun x3712 () Bool)
(declare-fun x325 () Int)
(declare-fun x3406 () Bool)
(declare-fun x202 () Int)
(declare-fun x2498 () Int)
(declare-fun x5279 () Int)
(declare-fun x723 () Int)
(declare-fun x2001 () Bool)
(declare-fun x3464 () Bool)
(declare-fun x5129 () Int)
(declare-fun x4690 () Bool)
(declare-fun x3714 () Int)
(declare-fun x1245 () Bool)
(declare-fun x36 () Int)
(declare-fun x3807 () Int)
(declare-fun x2199 (Int) Int)
(declare-fun x83 () Int)
(declare-fun x2552 () Bool)
(declare-fun x439 () Int)
(declare-fun x3425 (Int) Int)
(declare-fun x3055 () Int)
(declare-fun x638 () Int)
(declare-fun x781 () Int)
(declare-fun x1531 () Int)
(declare-fun x3776 () Bool)
(declare-fun x2592 () Bool)
(declare-fun x66 () Bool)
(declare-fun x4864 () Int)
(declare-fun x320 () Int)
(declare-fun x1403 () Bool)
(declare-fun x2010 () Bool)
(declare-fun x242 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x4767 () Int)
(declare-fun x2176 () Bool)
(declare-fun x3906 () Int)
(declare-fun x1776 () Bool)
(declare-fun x239 () Int)
(declare-fun x115 () Bool)
(declare-fun x4457 () Bool)
(declare-fun x951 () Int)
(declare-fun x3898 () Bool)
(declare-fun x2256 () Int)
(declare-fun x1811 () Int)
(declare-fun x5028 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x3337 () Int)
(declare-fun x3635 () Int)
(declare-fun x2639 () Int)
(declare-fun x1959 () Bool)
(declare-fun x1215 () Int)
(declare-fun x2182 (Int) Int)
(declare-fun x455 () Int)
(declare-fun x1728 (Int) Int)
(declare-fun x4731 () Int)
(declare-fun x2334 () Int)
(declare-fun x342 () Bool)
(declare-fun x3313 () Int)
(declare-fun x1938 () Bool)
(declare-fun x435 () Bool)
(declare-fun x2456 () Bool)
(declare-fun x2249 () Int)
(declare-fun x2579 () Bool)
(declare-fun x490 () Int)
(declare-fun x3749 () Int)
(declare-fun x4005 () Bool)
(declare-fun x3451 () Bool)
(declare-fun x5158 () Int)
(declare-fun x3745 () Int)
(declare-fun x2701 () Int)
(declare-fun x4889 () x2765)
(declare-fun x4140 () Int)
(declare-fun x3902 () Bool)
(declare-fun x690 () Bool)
(declare-fun x4488 () Int)
(declare-fun x2474 () Int)
(declare-fun x65 () Bool)
(declare-fun x3754 () Int)
(declare-fun x1219 () Bool)
(declare-fun x3768 () Bool)
(declare-fun x1588 () Bool)
(declare-fun x2658 () Int)
(declare-fun x3340 () Int)
(declare-fun x862 () Int)
(declare-fun x53 () Int)
(declare-fun x1738 () Bool)
(declare-fun x5180 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x2046 () Bool)
(declare-fun x2160 () Int)
(declare-fun x1764 () Bool)
(declare-fun x2802 () Bool)
(declare-fun x3762 () Int)
(declare-fun x4655 () Int)
(declare-fun x1569 () Int)
(declare-fun x820 () Int)
(declare-fun x184 () Bool)
(declare-fun x976 () Bool)
(declare-fun x4055 () Int)
(declare-fun x646 () Int)
(declare-fun x2288 () Bool)
(declare-fun x1730 () Bool)
(declare-fun x5237 () Bool)
(declare-fun x4580 () Bool)
(declare-fun x4151 () Int)
(declare-fun x3013 () Bool)
(declare-fun x3368 () Bool)
(declare-fun x552 (Int) Int)
(declare-fun x3892 () Int)
(declare-fun x1066 () Bool)
(declare-fun x965 () Bool)
(declare-fun x1163 () Bool)
(declare-fun x1935 () Int)
(declare-fun x4355 () Int)
(declare-fun x1016 () Int)
(declare-fun x2559 () Bool)
(declare-fun x889 () Bool)
(declare-fun x3533 () Bool)
(declare-fun x4426 () Bool)
(declare-fun x4271 () Bool)
(declare-fun x1258 (Int Int) Int)
(declare-fun x989 () Bool)
(declare-fun x377 () Int)
(declare-fun x2464 () Bool)
(declare-fun x2021 () Int)
(declare-fun x1872 () Bool)
(declare-fun x3087 () Bool)
(declare-fun x3832 () Int)
(declare-fun x1828 () Int)
(declare-fun x4794 () Bool)
(declare-fun x4302 () Int)
(declare-fun x1897 () Bool)
(declare-fun x2567 () Bool)
(declare-fun x4727 () Int)
(declare-fun x999 () x2765)
(declare-fun x3886 () Bool)
(declare-fun x4873 () Int)
(declare-fun x4661 () Bool)
(declare-fun x1603 () Int)
(declare-fun x1952 () Int)
(declare-fun x1156 () Int)
(declare-fun x3407 () Bool)
(declare-fun x3073 () Int)
(declare-fun x1100 () Bool)
(declare-fun x5249 () Bool)
(declare-fun x107 () Int)
(declare-fun x1182 () x2765)
(declare-fun x4588 () Bool)
(declare-fun x3069 () Int)
(declare-fun x1565 () Int)
(declare-fun x1081 () Bool)
(declare-fun x3827 (Int) Int)
(declare-fun x4804 () Bool)
(declare-fun x1920 () Int)
(declare-fun x3572 () Int)
(declare-fun x1944 () Bool)
(declare-fun x355 () Int)
(declare-fun x5281 () Bool)
(declare-fun x415 () Bool)
(declare-fun x4141 () Int)
(declare-fun x1264 () Bool)
(declare-fun x3771 () Int)
(declare-fun x4653 () x2765)
(declare-fun x5151 () Int)
(declare-fun x3099 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x3085 () Int)
(declare-fun x1964 () Bool)
(declare-fun x1188 () Int)
(declare-fun x3629 () Bool)
(declare-fun x1408 () Int)
(declare-fun x116 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x2497 () Int)
(declare-fun x1187 () Bool)
(declare-fun x4934 () Bool)
(declare-fun x440 (Int) Int)
(declare-fun x1978 () Bool)
(declare-fun x594 () Bool)
(declare-fun x3259 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x1178 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x686 () Bool)
(declare-fun x4656 () Bool)
(declare-fun x4685 () Int)
(declare-fun x11 () Int)
(declare-fun x2781 () Int)
(declare-fun x5126 (x2765) Int)
(declare-fun x1806 () Int)
(declare-fun x3857 () Int)
(declare-fun x2511 () Int)
(declare-fun x2465 () Int)
(declare-fun x3363 () Bool)
(declare-fun x4991 () Bool)
(declare-fun x998 () Bool)
(declare-fun x4774 () Bool)
(declare-fun x4282 () Bool)
(declare-fun x323 (Int) Int)
(declare-fun x1300 () Bool)
(declare-fun x403 () Bool)
(declare-fun x3128 () Bool)
(declare-fun x2912 () Int)
(declare-fun x1528 () Int)
(declare-fun x154 () Int)
(declare-fun x2621 () Bool)
(declare-fun x1290 () Int)
(declare-fun x1937 () Bool)
(declare-fun x423 () Bool)
(declare-fun x5038 () Bool)
(declare-fun x3822 () Bool)
(declare-fun x114 () Bool)
(declare-fun x1784 () Bool)
(declare-fun x4269 () Bool)
(declare-fun x4340 () Int)
(declare-fun x3576 () x2765)
(declare-fun x1718 () Bool)
(declare-fun x1252 () Int)
(declare-fun x1203 () Bool)
(declare-fun x3349 () Int)
(declare-fun x2798 () Bool)
(declare-fun x1850 () Bool)
(declare-fun x3949 () Bool)
(declare-fun x5203 () Bool)
(declare-fun x648 () Int)
(declare-fun x4847 () Bool)
(declare-fun x3053 () Int)
(declare-fun x891 () Int)
(declare-fun x2622 () Int)
(declare-fun x3288 () Bool)
(declare-fun x2101 () Int)
(declare-fun x5075 () Int)
(declare-fun x1986 (Int) Int)
(declare-fun x5309 () Int)
(declare-fun x4331 () Int)
(declare-fun x3322 () Bool)
(declare-fun x4890 () Int)
(declare-fun x4553 () Int)
(declare-fun x2137 () Bool)
(declare-fun x2110 () Bool)
(declare-fun x3897 () Bool)
(declare-fun x4345 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x4299 () Bool)
(declare-fun x3066 () Bool)
(declare-fun x3566 () Int)
(declare-fun x3398 () Int)
(declare-fun x299 () Bool)
(declare-fun x5211 () Bool)
(declare-fun x4261 () Bool)
(declare-fun x2889 () Bool)
(declare-fun x2222 () Bool)
(declare-fun x1015 () Int)
(declare-fun x2745 () Int)
(declare-fun x5010 () Bool)
(declare-fun x4623 () Bool)
(declare-fun x3718 () Int)
(declare-fun x1303 () Int)
(declare-fun x1630 () Bool)
(declare-fun x1724 () Int)
(declare-fun x3766 () Int)
(declare-fun x3860 () Int)
(declare-fun x3140 (x2765) Int)
(declare-fun x886 () Bool)
(declare-fun x2801 () Bool)
(declare-fun x4379 () Int)
(declare-fun x1996 () Bool)
(declare-fun x4781 () Bool)
(declare-fun x3267 () Bool)
(declare-fun x3578 () Int)
(declare-fun x2902 () Int)
(declare-fun x2873 () Int)
(declare-fun x5256 () Int)
(declare-fun x2994 () Int)
(declare-fun x1526 () Int)
(declare-fun x3068 () Bool)
(declare-fun x3793 () Int)
(declare-fun x3127 () Int)
(declare-fun x174 () Bool)
(declare-fun x2521 () x2765)
(declare-fun x2169 (Int) Int)
(declare-fun x5261 () Int)
(declare-fun x3348 () Int)
(declare-fun x1266 () Int)
(declare-fun x612 () Int)
(declare-fun x3649 () Bool)
(declare-fun x5130 () Bool)
(declare-fun x2475 () Bool)
(declare-fun x2375 () Int)
(declare-fun x5147 () Bool)
(declare-fun x839 () Bool)
(declare-fun x2851 () Int)
(declare-fun x751 () Bool)
(declare-fun x2789 () Bool)
(declare-fun x4945 () Int)
(declare-fun x4657 (Int) Int)
(declare-fun x4071 () Int)
(declare-fun x336 () Bool)
(declare-fun x2107 () Int)
(declare-fun x3504 (Int) Int)
(declare-fun x2954 () Int)
(declare-fun x4631 () x2765)
(declare-fun x1035 () Int)
(declare-fun x1199 () Int)
(declare-fun x1467 () Bool)
(declare-fun x4754 () Bool)
(declare-fun x431 () Int)
(declare-fun x3937 () Bool)
(declare-fun x4174 () Bool)
(declare-fun x4757 () Int)
(declare-fun x1646 () Bool)
(declare-fun x1734 () Int)
(declare-fun x4391 (Int) Int)
(declare-fun x2315 () Bool)
(declare-fun x2469 () Bool)
(declare-fun x2771 () Bool)
(declare-fun x3663 () Bool)
(declare-fun x46 () Bool)
(declare-fun x3147 () Int)
(declare-fun x1633 () Int)
(declare-fun x742 () Bool)
(declare-fun x4796 () Int)
(declare-fun x291 () Int)
(declare-fun x2978 () Bool)
(declare-fun x4256 () Int)
(declare-fun x1755 () Bool)
(declare-fun x5268 () Int)
(declare-fun x3171 () Bool)
(declare-fun x3813 () Bool)
(declare-fun x3038 () Bool)
(declare-fun x2165 () Int)
(declare-fun x3088 () Bool)
(declare-fun x3455 () Int)
(declare-fun x3461 (Int) Int)
(declare-fun x1820 () Bool)
(declare-fun x4997 () Int)
(declare-fun x2239 () Int)
(declare-fun x3047 () Int)
(declare-fun x1318 (Int) Int)
(declare-fun x2175 () Bool)
(declare-fun x3060 () Int)
(declare-fun x4173 () Bool)
(declare-fun x804 () Bool)
(declare-fun x916 () Int)
(declare-fun x1142 () Int)
(declare-fun x4688 () x2765)
(declare-fun x2028 () Int)
(declare-fun x3610 () Bool)
(declare-fun x1462 () Int)
(declare-fun x2187 () Int)
(declare-fun x2419 () Bool)
(declare-fun x5278 () Int)
(declare-fun x1161 () Int)
(declare-fun x1926 () Bool)
(declare-fun x3105 () Int)
(declare-fun x421 () Int)
(declare-fun x885 () Bool)
(declare-fun x1901 () Int)
(declare-fun x4569 () Int)
(declare-fun x3221 () Int)
(declare-fun x3384 () Bool)
(declare-fun x528 () Int)
(declare-fun x4323 () Int)
(declare-fun x1049 () Bool)
(declare-fun x4481 () Bool)
(declare-fun x4186 () Bool)
(declare-fun x4154 () Bool)
(declare-fun x4386 () Int)
(declare-fun x5098 () Int)
(declare-fun x4789 () Int)
(declare-fun x150 () Bool)
(declare-fun x586 () x2765)
(declare-fun x1277 () Bool)
(declare-fun x303 () Int)
(declare-fun x101 () Int)
(declare-fun x4374 () Int)
(declare-fun x1697 () Int)
(declare-fun x1650 () Int)
(declare-fun x4420 () Bool)
(declare-fun x4644 () Bool)
(declare-fun x4701 () Int)
(declare-fun x2965 (Int) Int)
(declare-fun x3426 () Int)
(declare-fun x5316 () Int)
(declare-fun x4394 () Bool)
(declare-fun x2339 () Int)
(declare-fun x3619 () Bool)
(declare-fun x500 () Int)
(declare-fun x24 () Bool)
(declare-fun x1440 () Bool)
(declare-fun x3721 () Int)
(declare-fun x3216 () Int)
(declare-fun x2740 () Bool)
(declare-fun x4786 (Int) Int)
(declare-fun x1885 () Bool)
(declare-fun x4086 () Bool)
(declare-fun x4117 () Bool)
(declare-fun x1332 () Int)
(declare-fun x3377 () Int)
(declare-fun x642 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x3247 () Int)
(declare-fun x4023 (Int) Int)
(declare-fun x1916 () Int)
(declare-fun x514 () Int)
(declare-fun x5123 () Bool)
(declare-fun x847 () Bool)
(declare-fun x4637 () Int)
(declare-fun x5282 () Int)
(declare-fun x1691 () Int)
(declare-fun x2532 () Int)
(declare-fun x4067 () Int)
(declare-fun x2308 () Bool)
(declare-fun x387 () Bool)
(declare-fun x5302 () Int)
(declare-fun x4288 () Bool)
(declare-fun x699 () Int)
(declare-fun x4101 () Bool)
(declare-fun x4498 () Bool)
(declare-fun x127 () Bool)
(declare-fun x4489 () Bool)
(declare-fun x3651 () Bool)
(declare-fun x1185 () Int)
(declare-fun x1551 () Bool)
(declare-fun x3591 () Int)
(declare-fun x2931 () Bool)
(declare-fun x5156 () Int)
(declare-fun x1667 () Bool)
(declare-fun x875 (x2765) Int)
(declare-fun x618 () Int)
(declare-fun x1299 () x2765)
(declare-fun x2971 () Int)
(declare-fun x295 () Bool)
(declare-fun x248 () Int)
(declare-fun x3592 () Bool)
(declare-fun x4618 () Bool)
(declare-fun x1114 () Int)
(declare-fun x371 () Bool)
(declare-fun x4090 () Bool)
(declare-fun x2934 () Bool)
(declare-fun x5019 () Int)
(declare-fun x3690 () Int)
(declare-fun x1039 () Bool)
(declare-fun x4827 () Int)
(declare-fun x4941 () Bool)
(declare-fun x4845 () Int)
(declare-fun x5024 () Int)
(declare-fun x614 () Bool)
(declare-fun x3200 () Bool)
(declare-fun x234 () Int)
(declare-fun x2090 () Int)
(declare-fun x1184 () Int)
(declare-fun x1409 () Int)
(declare-fun x3958 () Bool)
(declare-fun x4019 () Bool)
(declare-fun x2195 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x3145 () Bool)
(declare-fun x158 () Bool)
(declare-fun x194 () x2765)
(declare-fun x4098 () Bool)
(declare-fun x573 () Int)
(declare-fun x2975 () Int)
(declare-fun x3129 () Bool)
(declare-fun x926 () Bool)
(declare-fun x4849 () Bool)
(declare-fun x1714 () Int)
(declare-fun x3151 () Int)
(declare-fun x2992 () Int)
(declare-fun x247 () Bool)
(declare-fun x4244 () Int)
(declare-fun x2883 (Int) Int)
(declare-fun x5106 () Int)
(declare-fun x2705 (Int) Int)
(declare-fun x981 () Bool)
(declare-fun x4084 () Int)
(declare-fun x3939 () Int)
(declare-fun x3774 () Int)
(declare-fun x973 () Int)
(declare-fun x1394 () Bool)
(declare-fun x3722 () Int)
(declare-fun x164 () Bool)
(declare-fun x2680 () Bool)
(declare-fun x2700 (Int) Int)
(declare-fun x1444 () Bool)
(declare-fun x32 () Int)
(declare-fun x4473 () Bool)
(declare-fun x4592 () Bool)
(declare-fun x576 () Bool)
(declare-fun x1750 () Bool)
(declare-fun x1878 () Int)
(declare-fun x634 () Int)
(declare-fun x3014 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x74 () Int)
(declare-fun x2494 () Int)
(declare-fun x4083 () Bool)
(declare-fun x292 () Bool)
(declare-fun x3359 (Int) Int)
(declare-fun x1253 () Int)
(declare-fun x316 () Bool)
(declare-fun x279 (Int) Int)
(declare-fun x2323 () Bool)
(declare-fun x918 () Bool)
(declare-fun x628 () Int)
(declare-fun x4712 (Int) Int)
(declare-fun x2361 (Int) Int)
(declare-fun x4048 () Bool)
(declare-fun x2148 () Int)
(declare-fun x1073 () Bool)
(declare-fun x2377 () Int)
(declare-fun x5042 () Int)
(declare-fun x2938 () Int)
(declare-fun x754 () Int)
(declare-fun x2190 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x3489 () Int)
(declare-fun x4281 (Int) Int)
(declare-fun x2792 () Bool)
(declare-fun x3779 () Int)
(declare-fun x2547 () Bool)
(declare-fun x4838 () Int)
(declare-fun x4558 () Bool)
(declare-fun x1018 () Bool)
(declare-fun x2963 () Bool)
(declare-fun x3549 () Int)
(declare-fun x670 () Int)
(declare-fun x912 () Int)
(declare-fun x4916 () Bool)
(declare-fun x901 () Bool)
(declare-fun x4551 () Int)
(declare-fun x395 () Int)
(declare-fun x1918 () Bool)
(declare-fun x4295 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x3302 () Bool)
(declare-fun x3978 () Int)
(declare-fun x2825 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x2088 () Int)
(declare-fun x3868 () Int)
(declare-fun x3976 () Bool)
(declare-fun x1950 () Bool)
(declare-fun x2213 () Bool)
(declare-fun x2330 () Bool)
(declare-fun x1709 (Int) Int)
(declare-fun x5069 () Int)
(declare-fun x2424 () Int)
(declare-fun x1140 () Int)
(declare-fun x4382 () Int)
(declare-fun x3026 () Bool)
(declare-fun x2314 () Bool)
(declare-fun x217 () Bool)
(declare-fun x2564 () Int)
(declare-fun x2292 () Int)
(declare-fun x2328 () Bool)
(declare-fun x1460 () Int)
(declare-fun x1216 () Bool)
(declare-fun x4183 () Bool)
(declare-fun x2847 () Int)
(declare-fun x5285 () Bool)
(declare-fun x696 () Bool)
(declare-fun x530 () Int)
(declare-fun x1251 () Int)
(declare-fun x748 () Int)
(declare-fun x1506 () Bool)
(declare-fun x4831 () Bool)
(declare-fun x2354 () Int)
(declare-fun x1520 () Int)
(declare-fun x3652 () Int)
(declare-fun x4383 () Int)
(declare-fun x4907 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x2035 () Bool)
(declare-fun x4742 () Bool)
(declare-fun x5269 () Int)
(declare-fun x4504 () Bool)
(declare-fun x4385 () Bool)
(declare-fun x5303 () Bool)
(declare-fun x4001 () Int)
(declare-fun x2102 () Bool)
(declare-fun x507 () Int)
(declare-fun x2203 () Int)
(declare-fun x2395 () Int)
(declare-fun x743 () Int)
(declare-fun x4700 () Int)
(declare-fun x5036 () Bool)
(declare-fun x3212 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x3683 () Int)
(declare-fun x64 () Bool)
(declare-fun x705 () Int)
(declare-fun x5121 () Int)
(declare-fun x3261 () Int)
(declare-fun x437 () Int)
(declare-fun x3987 () Int)
(declare-fun x1204 () Int)
(declare-fun x4435 () Bool)
(declare-fun x2247 () Int)
(declare-fun x2615 () Int)
(declare-fun x1021 () Int)
(declare-fun x4797 () Int)
(declare-fun x3913 () Bool)
(declare-fun x4166 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x1524 () Int)
(declare-fun x2514 () Int)
(declare-fun x5022 () Int)
(declare-fun x4543 () Bool)
(declare-fun x138 (Int) Int)
(declare-fun x2143 () Bool)
(declare-fun x2881 () Bool)
(declare-fun x4861 () Bool)
(declare-fun x3303 () Bool)
(declare-fun x4204 () Int)
(declare-fun x1447 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x4738 () Bool)
(declare-fun x2738 () Int)
(declare-fun x4992 () Bool)
(declare-fun x2279 () Int)
(declare-fun x4853 () Bool)
(declare-fun x4628 () Bool)
(declare-fun x2743 () Int)
(declare-fun x2503 () Int)
(declare-fun x548 () Int)
(declare-fun x1230 () Int)
(declare-fun x2449 () Int)
(declare-fun x3668 () Int)
(declare-fun x574 () Bool)
(declare-fun x1702 (x2765) Int)
(declare-fun x2126 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x3715 () Bool)
(declare-fun x1910 () Bool)
(declare-fun x1453 () Int)
(declare-fun x1170 () Int)
(declare-fun x294 () Int)
(declare-fun x3597 () Bool)
(declare-fun x2900 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x2778 () Int)
(declare-fun x434 () Int)
(declare-fun x4823 () Int)
(declare-fun x1766 () Bool)
(declare-fun x3361 () Int)
(declare-fun x335 () Bool)
(declare-fun x3033 () Bool)
(declare-fun x784 () Int)
(declare-fun x2859 () Bool)
(declare-fun x977 () Bool)
(declare-fun x467 () Int)
(declare-fun x5012 () Int)
(declare-fun x2588 () Bool)
(declare-fun x867 () Int)
(declare-fun x3143 () Int)
(declare-fun x4065 () Bool)
(declare-fun x4561 () Bool)
(declare-fun x709 () Int)
(declare-fun x3169 () Bool)
(declare-fun x1968 (Int) Int)
(declare-fun x1000 () Bool)
(declare-fun x5026 () Bool)
(declare-fun x3396 () Bool)
(declare-fun x224 () Bool)
(declare-fun x1864 () Int)
(declare-fun x4643 (x2765) Int)
(declare-fun x852 () Bool)
(declare-fun x3930 () Bool)
(declare-fun x2401 () Bool)
(declare-fun x44 () Bool)
(declare-fun x4911 () Bool)
(declare-fun x4522 () Int)
(declare-fun x2917 () Int)
(declare-fun x5105 () Bool)
(declare-fun x384 () Int)
(declare-fun x2387 () Int)
(declare-fun x3907 () Int)
(declare-fun x1452 () Bool)
(declare-fun x1316 () Int)
(declare-fun x417 (Int) Int)
(declare-fun x5300 () Int)
(declare-fun x1502 () Int)
(declare-fun x2152 () Int)
(declare-fun x1126 () Bool)
(declare-fun x2557 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x4660 () Bool)
(declare-fun x1631 () Int)
(declare-fun x5272 () Int)
(declare-fun x3596 () Bool)
(declare-fun x2973 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x1940 () Bool)
(declare-fun x2197 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x2623 () Int)
(declare-fun x3059 () x2765)
(declare-fun x3430 () Bool)
(declare-fun x228 () Bool)
(declare-fun x3004 () Int)
(declare-fun x1837 () Int)
(declare-fun x1078 () Int)
(declare-fun x345 () Int)
(declare-fun x672 () Bool)
(declare-fun x3476 () Int)
(declare-fun x390 () Bool)
(declare-fun x2385 () Int)
(declare-fun x3297 (Int) Int)
(declare-fun x6 () Int)
(declare-fun x3317 () x2765)
(declare-fun x5298 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x4696 () Bool)
(declare-fun x167 () Bool)
(declare-fun x671 () x2765)
(declare-fun x3142 () Int)
(declare-fun x2155 () Int)
(declare-fun x2694 () Int)
(declare-fun x1214 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x3468 () Int)
(declare-fun x3010 () Bool)
(declare-fun x337 () Int)
(declare-fun x1632 () Int)
(declare-fun x1951 () Bool)
(declare-fun x3918 () Bool)
(declare-fun x1064 () Int)
(declare-fun x1084 () Int)
(declare-fun x2794 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x739 () Int)
(declare-fun x2224 () Bool)
(declare-fun x997 () Bool)
(declare-fun x2627 () Bool)
(declare-fun x3947 () Int)
(declare-fun x87 () Int)
(declare-fun x5142 () Int)
(declare-fun x3388 () Bool)
(declare-fun x70 () Bool)
(declare-fun x4978 () Bool)
(declare-fun x4583 () Bool)
(declare-fun x2510 () Bool)
(declare-fun x1772 (Int) Int)
(declare-fun x22 () Int)
(declare-fun x4956 () Int)
(declare-fun x4123 () Int)
(declare-fun x4095 () Bool)
(declare-fun x4471 () Int)
(declare-fun x4874 () Int)
(declare-fun x4620 () Bool)
(declare-fun x2151 () Bool)
(declare-fun x4231 () Bool)
(declare-fun x850 () Int)
(declare-fun x4400 () Bool)
(declare-fun x4635 () Int)
(declare-fun x1888 () Int)
(declare-fun x1943 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x1624 () Bool)
(declare-fun x3639 () Bool)
(declare-fun x4684 () Int)
(declare-fun x3473 () Bool)
(declare-fun x212 () Int)
(declare-fun x3764 () Bool)
(declare-fun x109 () Int)
(declare-fun x1900 () Bool)
(declare-fun x2848 (Int) Int)
(declare-fun x1990 () Int)
(declare-fun x1422 () Bool)
(declare-fun x2009 () Int)
(declare-fun x2553 () Int)
(declare-fun x282 () Bool)
(declare-fun x3558 () Int)
(declare-fun x461 () Bool)
(declare-fun x312 () Bool)
(declare-fun x3603 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x4021 () Int)
(declare-fun x4568 () Bool)
(declare-fun x4549 () Int)
(declare-fun x4418 () Bool)
(declare-fun x5186 () Bool)
(declare-fun x229 () Int)
(declare-fun x3158 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x4280 () Int)
(declare-fun x4077 () Bool)
(declare-fun x4303 () Int)
(declare-fun x2309 (Int) Int)
(declare-fun x4085 () Int)
(declare-fun x1075 () Int)
(declare-fun x1125 () Bool)
(declare-fun x459 () Bool)
(declare-fun x33 () Bool)
(declare-fun x3228 () Int)
(declare-fun x1636 () Bool)
(declare-fun x48 () Int)
(declare-fun x4035 () Int)
(declare-fun x2845 () Bool)
(declare-fun x4175 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x817 () Bool)
(declare-fun x753 () Bool)
(declare-fun x906 () Int)
(declare-fun x4869 () Int)
(declare-fun x7 (Int) Int)
(declare-fun x340 () Int)
(declare-fun x27 () Int)
(declare-fun x1235 () Int)
(declare-fun x1086 () Bool)
(declare-fun x3927 () Bool)
(declare-fun x2872 () Int)
(declare-fun x1350 (Int) Int)
(declare-fun x3199 () Bool)
(declare-fun x3115 () Int)
(declare-fun x1314 () Int)
(declare-fun x2756 () Bool)
(declare-fun x3877 () Int)
(declare-fun x2940 () Int)
(declare-fun x3808 () Bool)
(declare-fun x4099 () Bool)
(declare-fun x3630 () Bool)
(declare-fun x3778 () Int)
(declare-fun x1013 () Int)
(declare-fun x1881 () Bool)
(declare-fun x2258 (Int) Int)
(declare-fun x3092 () Int)
(declare-fun x216 () Bool)
(declare-fun x1241 () Int)
(declare-fun x2324 () Bool)
(declare-fun x3498 () Bool)
(declare-fun x5288 () Bool)
(declare-fun x3160 () Int)
(declare-fun x4168 () Int)
(declare-fun x654 () Bool)
(declare-fun x110 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x3367 () Int)
(declare-fun x2956 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x2968 () Bool)
(declare-fun x4196 () Int)
(declare-fun x1580 (Int) Int)
(declare-fun x4835 () Int)
(declare-fun x3148 () Bool)
(declare-fun x3380 () Bool)
(declare-fun x4044 () Int)
(declare-fun x1389 () Bool)
(declare-fun x4639 () Int)
(declare-fun x4548 () Int)
(declare-fun x1821 () Int)
(declare-fun x1592 () Int)
(declare-fun x583 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x2428 () Bool)
(declare-fun x1065 () Bool)
(declare-fun x4161 () Bool)
(declare-fun x1727 () Bool)
(declare-fun x139 () Int)
(declare-fun x3943 () Int)
(declare-fun x4354 () Int)
(declare-fun x4733 () Int)
(declare-fun x376 () Int)
(declare-fun x3959 () Bool)
(declare-fun x3083 () Bool)
(declare-fun x4202 () Int)
(declare-fun x3240 () Bool)
(declare-fun x4222 () Bool)
(declare-fun x4863 (Int) Int)
(declare-fun x3719 () Bool)
(declare-fun x8 () Bool)
(declare-fun x542 () Int)
(declare-fun x4412 () Int)
(declare-fun x4486 () Int)
(declare-fun x4483 () Int)
(declare-fun x1609 () Int)
(declare-fun x1965 () Int)
(declare-fun x985 () Bool)
(declare-fun x1704 () Int)
(declare-fun x677 () Int)
(declare-fun x772 () Bool)
(declare-fun x1376 () Int)
(declare-fun x4575 (Int) Int)
(declare-fun x130 () Bool)
(declare-fun x4747 () Bool)
(declare-fun x680 () Bool)
(declare-fun x1960 () Int)
(declare-fun x2685 () Int)
(declare-fun x3286 () Bool)
(declare-fun x3249 () Int)
(declare-fun x2337 () Bool)
(declare-fun x4973 () Bool)
(declare-fun x4134 () Int)
(declare-fun x598 () Bool)
(declare-fun x4075 () Int)
(declare-fun x702 () Bool)
(declare-fun x503 () Bool)
(declare-fun x3274 () Bool)
(declare-fun x4515 () Int)
(declare-fun x3292 () Int)
(declare-fun x3323 () Bool)
(declare-fun x4032 () Bool)
(declare-fun x4070 () Bool)
(declare-fun x4795 () Int)
(declare-fun x339 () Bool)
(declare-fun x3271 () Bool)
(declare-fun x808 () Int)
(declare-fun x3519 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x326 () Int)
(declare-fun x2079 () Bool)
(declare-fun x4205 () Int)
(declare-fun x306 () Int)
(declare-fun x4509 () Bool)
(declare-fun x4398 () Bool)
(declare-fun x181 () Int)
(declare-fun x4669 () Bool)
(declare-fun x4769 () Int)
(declare-fun x1231 () Bool)
(declare-fun x3123 () Bool)
(declare-fun x3981 () Int)
(declare-fun x2692 () Bool)
(declare-fun x5116 () Bool)
(declare-fun x4932 () Bool)
(declare-fun x2117 () Int)
(declare-fun x2634 () Int)
(declare-fun x1858 () Int)
(declare-fun x4758 () Int)
(declare-fun x958 () Bool)
(declare-fun x4972 () Int)
(declare-fun x2833 () Bool)
(declare-fun x2759 () Int)
(declare-fun x210 () Bool)
(declare-fun x589 () Int)
(declare-fun x2520 () Int)
(declare-fun x182 () Bool)
(declare-fun x957 () Int)
(declare-fun x4238 () Bool)
(declare-fun x2144 () Int)
(declare-fun x842 () Bool)
(declare-fun x2601 () Int)
(declare-fun x4179 () Bool)
(declare-fun x3410 () Bool)
(declare-fun x4600 () Bool)
(declare-fun x1095 () Int)
(declare-fun x826 () x2765)
(declare-fun x1516 () Bool)
(declare-fun x160 () Int)
(declare-fun x215 () Bool)
(declare-fun x2319 () Int)
(declare-fun x1816 () Bool)
(declare-fun x3975 () Int)
(declare-fun x4677 () Int)
(declare-fun x4862 (Int) Int)
(declare-fun x2713 () Int)
(declare-fun x5204 () Bool)
(declare-fun x206 () Int)
(declare-fun x4337 () Bool)
(declare-fun x3341 () Int)
(declare-fun x1861 () Bool)
(declare-fun x3842 () Bool)
(declare-fun x2172 () Int)
(declare-fun x75 () Int)
(declare-fun x1852 () Int)
(declare-fun x1256 () Bool)
(declare-fun x1527 () Int)
(declare-fun x1660 (Int) Int)
(declare-fun x1002 (Int) Int)
(declare-fun x3637 () Bool)
(declare-fun x2371 () Bool)
(declare-fun x3905 () Int)
(declare-fun x2502 (Int) Int)
(declare-fun x1870 () Bool)
(declare-fun x877 () Int)
(declare-fun x1917 () Int)
(declare-fun x1740 () Int)
(declare-fun x4100 (Int) Int)
(declare-fun x2937 () Bool)
(declare-fun x557 () Int)
(declare-fun x3548 () Int)
(declare-fun x1616 () Int)
(declare-fun x5162 () Int)
(declare-fun x1197 () Bool)
(declare-fun x2961 () Int)
(declare-fun x3328 () Int)
(declare-fun x657 () Int)
(declare-fun x4512 () Int)
(declare-fun x2094 () Int)
(declare-fun x1082 () Int)
(declare-fun x5155 () Bool)
(declare-fun x2156 () x2765)
(declare-fun x1176 () Int)
(declare-fun x3565 () Int)
(declare-fun x4464 () Bool)
(declare-fun x4480 () Int)
(declare-fun x2226 () Int)
(declare-fun x1435 () Int)
(declare-fun x128 () Int)
(declare-fun x3696 (Int) Int)
(declare-fun x1473 () Int)
(declare-fun x4619 () Bool)
(declare-fun x3110 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x4124 () Int)
(declare-fun x3739 () Bool)
(declare-fun x1537 () Bool)
(declare-fun x4603 () Int)
(declare-fun x4748 () Int)
(declare-fun x4030 () Bool)
(declare-fun x5185 () Int)
(declare-fun x3529 () Int)
(declare-fun x4785 () Bool)
(declare-fun x4902 (Int) Int)
(declare-fun x563 () Bool)
(declare-fun x3880 () Bool)
(declare-fun x105 () Int)
(declare-fun x5035 () Int)
(declare-fun x4557 () Bool)
(declare-fun x4974 () Bool)
(declare-fun x4979 () Int)
(declare-fun x883 () Int)
(declare-fun x4194 () Int)
(declare-fun x2861 () Int)
(declare-fun x3770 () Bool)
(declare-fun x244 () Int)
(declare-fun x4538 () Bool)
(declare-fun x1941 () Int)
(declare-fun x802 () Bool)
(declare-fun x2942 () x2765)
(declare-fun x835 () Bool)
(declare-fun x4143 () Bool)
(declare-fun x370 () Int)
(declare-fun x1274 (x2765) Int)
(declare-fun x2480 () Int)
(declare-fun x2216 () Bool)
(declare-fun x537 () Bool)
(declare-fun x3163 () Bool)
(declare-fun x935 () Int)
(declare-fun x658 () Bool)
(declare-fun x1833 () Int)
(declare-fun x3899 () Int)
(declare-fun x857 () Int)
(declare-fun x4152 () Int)
(declare-fun x5226 () Int)
(declare-fun x4793 () Int)
(declare-fun x4050 () Int)
(declare-fun x1344 () Int)
(declare-fun x1863 () Int)
(declare-fun x12 () Bool)
(declare-fun x1062 () Int)
(declare-fun x3527 () Int)
(declare-fun x629 () Int)
(declare-fun x3282 () Bool)
(declare-fun x3495 () Int)
(declare-fun x1846 () Bool)
(declare-fun x4425 () Bool)
(declare-fun x5310 () Bool)
(declare-fun x4059 () Int)
(declare-fun x2534 () Int)
(declare-fun x1879 (Int) Int)
(declare-fun x4153 () Bool)
(declare-fun x5056 () Bool)
(declare-fun x3343 () Bool)
(declare-fun x565 () Int)
(declare-fun x3170 () Int)
(declare-fun x2776 () Int)
(declare-fun x2727 () Int)
(declare-fun x864 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x556 () Int)
(declare-fun x4689 () Bool)
(declare-fun x2739 () Bool)
(declare-fun x2188 () Bool)
(declare-fun x937 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x4800 () Bool)
(declare-fun x3972 () Int)
(declare-fun x970 () Bool)
(declare-fun x2731 () Int)
(declare-fun x832 () Bool)
(declare-fun x771 () Bool)
(declare-fun x3681 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x4952 () Bool)
(declare-fun x1544 () Int)
(declare-fun x1037 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x330 () Bool)
(declare-fun x4311 () Bool)
(declare-fun x4121 () Int)
(declare-fun x1963 () Int)
(declare-fun x3253 () Bool)
(declare-fun x123 () Bool)
(declare-fun x4681 () Bool)
(declare-fun x2910 () Bool)
(declare-fun x4406 () Int)
(declare-fun x5071 () Bool)
(declare-fun x1414 () x2765)
(declare-fun x375 () Bool)
(declare-fun x2783 () Int)
(declare-fun x286 () Bool)
(declare-fun x1382 () Int)
(declare-fun x5179 (Int) Int)
(declare-fun x4508 () Bool)
(declare-fun x479 () x2765)
(declare-fun x2642 () Bool)
(declare-fun x133 () Bool)
(declare-fun x4610 () Bool)
(declare-fun x2636 (Int) Int)
(declare-fun x2901 () Int)
(declare-fun x4249 () Bool)
(declare-fun x3203 () Int)
(declare-fun x3931 () Int)
(declare-fun x2667 () Bool)
(declare-fun x290 (Int) Int)
(declare-fun x551 () Int)
(declare-fun x5111 () Bool)
(declare-fun x2570 () Bool)
(declare-fun x3882 () Int)
(declare-fun x2356 () Int)
(declare-fun x4230 () Int)
(declare-fun x1686 () Bool)
(declare-fun x3997 () Int)
(declare-fun x4547 () Bool)
(declare-fun x1782 () Int)
(declare-fun x2543 () Bool)
(declare-fun x4552 () Int)
(declare-fun x915 () Bool)
(declare-fun x2803 () Int)
(declare-fun x2875 () Int)
(declare-fun x908 () Bool)
(declare-fun x2431 () Int)
(declare-fun x2342 () Bool)
(declare-fun x755 () Bool)
(declare-fun x186 () Bool)
(declare-fun x3823 () Bool)
(declare-fun x77 () Int)
(declare-fun x1554 () Bool)
(declare-fun x895 () Int)
(declare-fun x1778 () Int)
(declare-fun x5068 () Bool)
(declare-fun x962 () Bool)
(declare-fun x509 () Bool)
(declare-fun x2114 () Bool)
(declare-fun x285 () Int)
(declare-fun x4040 () Bool)
(declare-fun x232 () Int)
(declare-fun x3272 (Int) x2765)
(declare-fun x2011 () Int)
(declare-fun x2158 () Bool)
(declare-fun x3692 (Int Int) Int)
(declare-fun x2376 () Bool)
(declare-fun x4016 () Bool)
(declare-fun x3428 () Bool)
(declare-fun x3638 () Int)
(declare-fun x3780 () Int)
(declare-fun x3540 () Int)
(declare-fun x445 () Int)
(declare-fun x4017 () Bool)
(declare-fun x4908 () Int)
(declare-fun x1641 () Int)
(declare-fun x3391 () Int)
(declare-fun x2380 () Bool)
(declare-fun x3318 () Int)
(declare-fun x3985 () Int)
(declare-fun x5114 () Int)
(declare-fun x632 () Int)
(declare-fun x119 () Int)
(declare-fun x947 () Int)
(declare-fun x2529 () Bool)
(declare-fun x4517 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x2343 () Bool)
(declare-fun x100 () Int)
(declare-fun x2655 () Bool)
(declare-fun x426 () Bool)
(declare-fun x4357 () Bool)
(declare-fun x4348 () Int)
(declare-fun x1779 () Bool)
(declare-fun x927 () Bool)
(declare-fun x630 () Bool)
(declare-fun x4664 () Int)
(declare-fun x4704 () Int)
(declare-fun x3229 (Int) Int)
(declare-fun x2320 () Bool)
(declare-fun x575 () Int)
(declare-fun x2057 () Int)
(declare-fun x2285 () Int)
(declare-fun x4208 () Bool)
(declare-fun x448 () Int)
(declare-fun x2838 () Bool)
(declare-fun x3062 () Bool)
(declare-fun x1133 () Int)
(declare-fun x2593 () Bool)
(declare-fun x3716 () Int)
(declare-fun x3191 () Bool)
(declare-fun x3686 () Bool)
(declare-fun x797 () Bool)
(declare-fun x4240 () Bool)
(declare-fun x4438 () Bool)
(declare-fun x3219 () Bool)
(declare-fun x1483 () Int)
(declare-fun x2369 () Int)
(declare-fun x1360 () Bool)
(declare-fun x4305 () Int)
(declare-fun x3460 () Int)
(declare-fun x2333 () Bool)
(declare-fun x3057 () Int)
(declare-fun x1267 () Int)
(declare-fun x5039 () Int)
(declare-fun x2350 () Int)
(declare-fun x792 () Bool)
(declare-fun x2029 () Bool)
(declare-fun x2445 () Bool)
(declare-fun x2812 () x2765)
(declare-fun x400 () Int)
(declare-fun x4607 () Bool)
(declare-fun x1392 () Int)
(declare-fun x2257 () Bool)
(declare-fun x732 () Bool)
(declare-fun x4167 () Int)
(declare-fun x2096 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x2630 () Int)
(declare-fun x5149 (Int) Int)
(declare-fun x4919 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x3620 () Bool)
(declare-fun x2853 () Int)
(declare-fun x4957 () Bool)
(declare-fun x3894 () Int)
(declare-fun x1560 () Int)
(declare-fun x2207 () Int)
(declare-fun x562 () Int)
(declare-fun x3188 () Int)
(declare-fun x1116 () Int)
(declare-fun x4049 () Int)
(declare-fun x3622 () Int)
(declare-fun x2584 () Int)
(declare-fun x3837 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x1463 () Int)
(declare-fun x2620 () Int)
(declare-fun x3741 (Int) Int)
(declare-fun x2865 () Bool)
(declare-fun x2702 () Bool)
(declare-fun x3805 () Int)
(declare-fun x2332 () Int)
(declare-fun x3417 () Bool)
(declare-fun x925 () Int)
(declare-fun x5064 () Bool)
(declare-fun x2460 () Bool)
(declare-fun x933 () Bool)
(declare-fun x3984 () Int)
(declare-fun x4562 () Bool)
(declare-fun x3450 () Bool)
(declare-fun x3497 () Bool)
(declare-fun x2814 () Bool)
(declare-fun x3862 () Int)
(declare-fun x4387 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x3289 () Int)
(declare-fun x4570 () Int)
(declare-fun x5201 () Bool)
(declare-fun x2804 () Int)
(declare-fun x4900 (Int) Int)
(declare-fun x1797 () Int)
(declare-fun x4614 () Int)
(declare-fun x4128 () Bool)
(declare-fun x473 () Bool)
(declare-fun x4013 () Bool)
(declare-fun x5124 () Int)
(declare-fun x1433 () Int)
(declare-fun x3557 () Bool)
(declare-fun x660 () Int)
(declare-fun x3258 () Int)
(declare-fun x2766 () Int)
(declare-fun x769 () Int)
(declare-fun x1493 () Bool)
(declare-fun x1933 () Int)
(declare-fun x5314 () Int)
(declare-fun x99 () Int)
(declare-fun x1788 () Bool)
(declare-fun x3684 () Int)
(declare-fun x3726 () Bool)
(declare-fun x5065 () Int)
(declare-fun x399 () Int)
(declare-fun x5004 () Bool)
(declare-fun x3379 (Int) Int)
(declare-fun x1567 () Int)
(declare-fun x2168 () Int)
(declare-fun x334 () Int)
(declare-fun x2254 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x1668 () Bool)
(declare-fun x2450 () Bool)
(declare-fun x193 () Int)
(declare-fun x2672 () Int)
(declare-fun x2261 () Bool)
(declare-fun x2555 () Int)
(declare-fun x5066 () Bool)
(declare-fun x928 () Int)
(declare-fun x471 () Int)
(declare-fun x539 () x2765)
(declare-fun x2135 () Int)
(declare-fun x5291 () Bool)
(declare-fun x4590 () Bool)
(declare-fun x3306 () Int)
(declare-fun x5033 () Bool)
(declare-fun x4695 () Bool)
(declare-fun x1144 () Int)
(declare-fun x3431 () Int)
(declare-fun x4066 () Bool)
(declare-fun x603 () Int)
(declare-fun x2779 () Bool)
(declare-fun x2 () Int)
(declare-fun x3580 () Bool)
(declare-fun x2598 () Bool)
(declare-fun x4836 () Int)
(declare-fun x4735 () Int)
(declare-fun x427 () Bool)
(declare-fun x1234 () Int)
(declare-fun x1042 (Int) Int)
(declare-fun x3685 () Bool)
(declare-fun x679 (Int) Int)
(declare-fun x4579 () Bool)
(declare-fun x4267 () Int)
(declare-fun x2421 () Bool)
(declare-fun x3588 () Bool)
(declare-fun x644 () x2765)
(declare-fun x966 () Int)
(declare-fun x372 () Bool)
(declare-fun x993 () Bool)
(declare-fun x4366 () Bool)
(declare-fun x13 () Bool)
(declare-fun x1074 () Int)
(declare-fun x587 () Bool)
(declare-fun x4118 () Int)
(declare-fun x673 () Int)
(declare-fun x2728 () Bool)
(declare-fun x669 () Bool)
(declare-fun x2131 () Int)
(declare-fun x253 () Bool)
(declare-fun x1992 () Int)
(declare-fun x199 () Bool)
(declare-fun x4726 () x2765)
(declare-fun x373 () Bool)
(declare-fun x5143 () Bool)
(declare-fun x1097 () Int)
(declare-fun x3664 () Bool)
(declare-fun x3772 () Int)
(declare-fun x3977 () Bool)
(declare-fun x2679 () Int)
(declare-fun x1293 () Bool)
(declare-fun x1294 () Int)
(declare-fun x1470 () Bool)
(declare-fun x3213 () Int)
(declare-fun x2423 (Int) Int)
(declare-fun x4530 () Int)
(declare-fun x3950 () Int)
(declare-fun x3743 () Int)
(declare-fun x3769 () Bool)
(declare-fun x254 () Int)
(declare-fun x572 () Bool)
(declare-fun x4770 () Bool)
(declare-fun x178 () Bool)
(declare-fun x2290 () Bool)
(declare-fun x5048 () Int)
(declare-fun x2926 (Int) Int)
(declare-fun x3308 () Int)
(declare-fun x3032 () Bool)
(declare-fun x1515 () Int)
(declare-fun x1722 () Bool)
(declare-fun x149 () Int)
(declare-fun x393 () Bool)
(declare-fun x2828 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x3180 () Bool)
(declare-fun x3195 (Int) Int)
(declare-fun x2358 () Bool)
(declare-fun x2544 () Bool)
(declare-fun x661 () Bool)
(declare-fun x3773 () Int)
(declare-fun x930 () Bool)
(declare-fun x4875 () Int)
(declare-fun x4971 () Int)
(declare-fun x3570 () Int)
(declare-fun x1272 () Int)
(declare-fun x828 () Bool)
(declare-fun x2962 () Bool)
(declare-fun x3500 () Int)
(declare-fun x4939 () Int)
(declare-fun x3736 () Bool)
(declare-fun x3511 () Bool)
(declare-fun x141 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x3955 () Bool)
(declare-fun x541 () Bool)
(declare-fun x2730 () Bool)
(declare-fun x4560 () Bool)
(declare-fun x1966 () Int)
(declare-fun x3641 () Int)
(declare-fun x185 () Bool)
(declare-fun x4810 () Bool)
(declare-fun x4185 () Bool)
(declare-fun x2291 () x2765)
(declare-fun x3162 () Int)
(declare-fun x1193 () Int)
(declare-fun x1663 () Bool)
(declare-fun x986 () Int)
(declare-fun x4519 () Int)
(declare-fun x4260 () Int)
(declare-fun x2650 () Bool)
(declare-fun x1292 (Int) Int)
(declare-fun x684 () Int)
(declare-fun x4251 () Bool)
(declare-fun x4503 () Bool)
(declare-fun x4749 () Bool)
(declare-fun x1004 () Int)
(declare-fun x944 () Int)
(declare-fun x5286 () Int)
(declare-fun x4405 () Int)
(declare-fun x3403 () Int)
(declare-fun x3373 (Int) Int)
(declare-fun x327 () Bool)
(declare-fun x5063 (Int) Int)
(declare-fun x4224 () Int)
(declare-fun x2516 () Int)
(declare-fun x4581 () Int)
(declare-fun x3106 () Bool)
(declare-fun x1045 () Int)
(declare-fun x4243 () Bool)
(declare-fun x2528 () Int)
(declare-fun x2572 () Bool)
(declare-fun x579 () Bool)
(declare-fun x595 () Bool)
(declare-fun x4270 () Int)
(declare-fun x1284 () Bool)
(declare-fun x1192 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x5280 () Int)
(declare-fun x4237 () Bool)
(declare-fun x3859 () Int)
(declare-fun x4479 () Bool)
(declare-fun x601 () Int)
(declare-fun x788 () Int)
(declare-fun x425 (Int) Int)
(declare-fun x4909 () Bool)
(declare-fun x3986 () Bool)
(declare-fun x2259 () Int)
(declare-fun x2928 () Bool)
(declare-fun x929 () Bool)
(declare-fun x4904 () Int)
(declare-fun x310 () Int)
(declare-fun x617 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x3052 (Int) Int)
(declare-fun x1998 () Bool)
(declare-fun x5060 () Bool)
(declare-fun x553 () Bool)
(declare-fun x5195 () Bool)
(declare-fun x4857 () Bool)
(declare-fun x2496 () Int)
(declare-fun x3487 () Bool)
(declare-fun x3354 () Bool)
(declare-fun x2646 () Int)
(declare-fun x4265 () Int)
(declare-fun x3137 () Bool)
(declare-fun x3550 () Int)
(declare-fun x987 () Bool)
(declare-fun x2272 () Bool)
(declare-fun x442 () Bool)
(declare-fun x1800 () Int)
(declare-fun x4766 () Bool)
(declare-fun x1432 () Int)
(declare-fun x4014 () x2765)
(declare-fun x4378 () Bool)
(declare-fun x4228 () Int)
(declare-fun x4131 () Int)
(declare-fun x1830 () Int)
(declare-fun x2038 () Bool)
(declare-fun x2721 () Int)
(declare-fun x4652 () Bool)
(declare-fun x1012 () Int)
(declare-fun x706 () Bool)
(declare-fun x2298 () Bool)
(declare-fun x5235 () Int)
(declare-fun x4578 () Int)
(declare-fun x4763 () Int)
(declare-fun x2116 () Bool)
(declare-fun x1687 () Int)
(declare-fun x4667 () Bool)
(declare-fun x3353 () Int)
(declare-fun x2551 () Int)
(declare-fun x3401 () Int)
(declare-fun x800 (Int) Int)
(declare-fun x3201 () Bool)
(declare-fun x4929 () Bool)
(declare-fun x29 () Bool)
(declare-fun x2280 () Int)
(declare-fun x262 () Bool)
(declare-fun x2535 () Bool)
(declare-fun x5108 () Int)
(declare-fun x1364 () Int)
(declare-fun x1023 () Int)
(declare-fun x825 () Bool)
(declare-fun x1892 () Bool)
(declare-fun x2153 () Bool)
(declare-fun x1725 (Int) Int)
(declare-fun x5076 () Bool)
(declare-fun x716 () Bool)
(declare-fun x5118 () Int)
(declare-fun x5073 () Bool)
(declare-fun x3091 () Bool)
(declare-fun x76 () Bool)
(declare-fun x3724 () Int)
(declare-fun x4651 () Bool)
(declare-fun x2939 () Bool)
(declare-fun x2491 () x2765)
(declare-fun x585 () Int)
(declare-fun x1324 () Bool)
(declare-fun x2398 () Bool)
(declare-fun x446 () Bool)
(declare-fun x5202 () Int)
(declare-fun x227 () Bool)
(declare-fun x3836 () Bool)
(declare-fun x3628 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x622 () Int)
(declare-fun x3728 () Bool)
(declare-fun x3211 () Bool)
(declare-fun x2674 () Int)
(declare-fun x4358 () Bool)
(declare-fun x969 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x4922 () Bool)
(declare-fun x2548 () Bool)
(declare-fun x3515 () Int)
(declare-fun x3054 (Int) Int)
(declare-fun x3007 () Int)
(declare-fun x4550 () Bool)
(declare-fun x3730 () Int)
(declare-fun x2438 () Bool)
(declare-fun x1880 () Bool)
(declare-fun x3027 () Bool)
(declare-fun x3967 () Int)
(declare-fun x1873 () Int)
(declare-fun x3617 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x4041 () Bool)
(declare-fun x2619 () x2765)
(declare-fun x1494 () Int)
(declare-fun x4886 () Int)
(declare-fun x5107 () Int)
(declare-fun x4984 () Bool)
(declare-fun x82 () Int)
(declare-fun x3333 () Int)
(declare-fun x3551 () Int)
(declare-fun x729 () Bool)
(declare-fun x5119 (Int) Int)
(declare-fun x3962 () Bool)
(declare-fun x3095 (Int) Int)
(declare-fun x3370 () Int)
(declare-fun x4678 (Int) Int)
(declare-fun x894 () Bool)
(declare-fun x3963 () Int)
(declare-fun x4020 () Bool)
(declare-fun x2793 () Int)
(declare-fun x2834 () Bool)
(declare-fun x129 () Bool)
(declare-fun x4898 () Int)
(declare-fun x2390 () Int)
(declare-fun x1666 () Bool)
(declare-fun x4880 () Int)
(declare-fun x1401 () Int)
(declare-fun x2724 () Bool)
(declare-fun x3193 () Bool)
(declare-fun x1276 () Int)
(declare-fun x3028 () Int)
(declare-fun x1614 () Bool)
(declare-fun x768 () Int)
(declare-fun x4313 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x607 () Int)
(declare-fun x4339 () Int)
(declare-fun x1623 () Bool)
(declare-fun x3672 () Bool)
(declare-fun x1509 () Bool)
(declare-fun x2016 () Int)
(declare-fun x1678 () Bool)
(declare-fun x2209 () Bool)
(declare-fun x145 () Bool)
(declare-fun x2998 () Int)
(declare-fun x5080 () Bool)
(declare-fun x685 () Bool)
(declare-fun x94 () Int)
(declare-fun x4832 () Bool)
(declare-fun x2880 () x2765)
(declare-fun x4703 () Int)
(declare-fun x1912 () Bool)
(declare-fun x2414 () Bool)
(declare-fun x1404 () Int)
(declare-fun x4164 () Bool)
(declare-fun x3086 () Int)
(declare-fun x3616 () Bool)
(declare-fun x4462 () Int)
(declare-fun x869 () Bool)
(declare-fun x4755 () Int)
(declare-fun x3390 () Int)
(declare-fun x637 () Int)
(declare-fun x2133 () Int)
(declare-fun x3182 () Bool)
(declare-fun x1209 () Bool)
(declare-fun x5225 () Int)
(declare-fun x2489 () Bool)
(declare-fun x2020 () Int)
(declare-fun x858 () Bool)
(declare-fun x4881 () Bool)
(declare-fun x5070 () Int)
(declare-fun x2245 () Bool)
(declare-fun x2761 () Int)
(declare-fun x936 () Int)
(declare-fun x1708 () Int)
(declare-fun x909 () Int)
(declare-fun x486 () Bool)
(declare-fun x5229 () Int)
(declare-fun x3364 (Int) Int)
(declare-fun x3727 () Int)
(declare-fun x3260 () Int)
(declare-fun x2659 () Bool)
(declare-fun x2826 () Int)
(declare-fun x2695 () Int)
(declare-fun x3234 () Int)
(declare-fun x2360 () Int)
(declare-fun x2506 () Bool)
(declare-fun x488 () Int)
(declare-fun x2565 () Bool)
(declare-fun x4172 () Bool)
(declare-fun x2198 (Int) Int)
(declare-fun x2403 () Int)
(declare-fun x4645 () Int)
(declare-fun x1501 () Int)
(declare-fun x2048 () Bool)
(declare-fun x3971 () Bool)
(declare-fun x489 () Int)
(declare-fun x1925 () Int)
(declare-fun x4817 () Int)
(declare-fun x1446 () Bool)
(declare-fun x3076 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x1584 (x2765) Int)
(declare-fun x1865 () Int)
(declare-fun x2666 () Int)
(declare-fun x1982 () Bool)
(declare-fun x983 () Bool)
(declare-fun x5266 () Bool)
(declare-fun x3858 () Int)
(declare-fun x682 () Bool)
(declare-fun x2477 () Bool)
(declare-fun x923 () Bool)
(declare-fun x2179 () Bool)
(declare-fun x2316 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x623 (Int) Int)
(declare-fun x2043 () Int)
(declare-fun x3729 () Bool)
(declare-fun x4004 (Int) Int)
(declare-fun x5209 () Int)
(declare-fun x5094 () Int)
(declare-fun x3530 () Int)
(declare-fun x2616 () Bool)
(declare-fun x132 (Int) Int)
(declare-fun x5150 () Bool)
(declare-fun x1795 () Int)
(declare-fun x1924 () Bool)
(declare-fun x142 () Int)
(declare-fun x258 () Int)
(declare-fun x2311 () Bool)
(declare-fun x2008 () Int)
(declare-fun x4130 () Int)
(declare-fun x647 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x367 () Bool)
(declare-fun x219 () Bool)
(declare-fun x2486 (Int) Int)
(declare-fun x191 () Int)
(declare-fun x3703 (Int) Int)
(declare-fun x3264 () Bool)
(declare-fun x3494 () Int)
(declare-fun x2876 () Bool)
(declare-fun x853 () Int)
(declare-fun x988 () Bool)
(declare-fun x3279 () Int)
(declare-fun x3835 () Int)
(declare-fun x3016 () Int)
(declare-fun x2714 (Int) Int)
(declare-fun x1853 () Int)
(declare-fun x2310 (Int) Int)
(declare-fun x790 () Bool)
(declare-fun x1490 () Int)
(declare-fun x2255 () Bool)
(declare-fun x1835 () Int)
(declare-fun x3785 () Int)
(declare-fun x3179 () Int)
(declare-fun x252 () Int)
(declare-fun x1496 () Bool)
(declare-fun x3287 () Int)
(declare-fun x1829 () Int)
(declare-fun x4595 () Bool)
(declare-fun x5315 () Int)
(declare-fun x3150 () Bool)
(declare-fun x2943 () Int)
(declare-fun x3678 () Int)
(declare-fun x2757 () Int)
(declare-fun x1474 () Bool)
(declare-fun x4784 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x4198 () Int)
(declare-fun x2860 () Bool)
(declare-fun x3196 () Bool)
(declare-fun x4851 () Bool)
(declare-fun x3064 () Bool)
(declare-fun x2913 () Bool)
(declare-fun x2686 (Int) Int)
(declare-fun x296 () Int)
(declare-fun x2338 () Bool)
(declare-fun x814 (Int) Int)
(declare-fun x2697 () Bool)
(declare-fun x1511 () Int)
(declare-fun x3030 () Bool)
(declare-fun x315 () Bool)
(declare-fun x3640 () Int)
(declare-fun x1373 () Int)
(declare-fun x2242 () Bool)
(declare-fun x236 () Int)
(declare-fun x1970 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x106 () Int)
(declare-fun x4526 () Bool)
(declare-fun x444 (Int) Int)
(declare-fun x1956 () Int)
(declare-fun x2767 () Int)
(declare-fun x954 () Int)
(declare-fun x317 () Int)
(declare-fun x3864 () Int)
(declare-fun x2654 () Int)
(declare-fun x1374 () Bool)
(declare-fun x656 () Bool)
(declare-fun x4884 () Bool)
(declare-fun x1961 () Bool)
(declare-fun x3594 () Int)
(declare-fun x3477 () Int)
(declare-fun x321 () Bool)
(declare-fun x3506 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x2326 () Bool)
(declare-fun x1057 () Int)
(declare-fun x1222 () Bool)
(declare-fun x2467 () Int)
(declare-fun x4739 () Bool)
(declare-fun x2849 () Int)
(declare-fun x3454 () Int)
(declare-fun x3136 () Bool)
(declare-fun x1767 () Int)
(declare-fun x600 () Int)
(declare-fun x724 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x1508 () Int)
(declare-fun x3733 (Int) Int)
(declare-fun x4926 () Bool)
(declare-fun x616 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x1757 () Int)
(declare-fun x4038 (Int) Int)
(declare-fun x2120 () Bool)
(declare-fun x2098 () Bool)
(declare-fun x518 () Bool)
(declare-fun x1541 () Int)
(declare-fun x914 () Int)
(declare-fun x805 () Bool)
(declare-fun x938 () Int)
(declare-fun x3655 (Int) Int)
(declare-fun x5134 () Int)
(declare-fun x4615 () Int)
(declare-fun x4501 () x2765)
(declare-fun x5059 (Int) Int)
(declare-fun x1067 () Int)
(declare-fun x4361 () Bool)
(declare-fun x641 (Int Int) Int)
(declare-fun x2558 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x2719 () Bool)
(declare-fun x760 () Int)
(declare-fun x711 () Int)
(declare-fun x5228 () Int)
(declare-fun x2073 () Bool)
(declare-fun x4225 () Int)
(declare-fun x1552 () Int)
(declare-fun x3861 () Int)
(declare-fun x2823 () Bool)
(declare-fun x4215 () Int)
(declare-fun x829 () Bool)
(declare-fun x86 () Int)
(declare-fun x3113 () Bool)
(declare-fun x5274 () Int)
(declare-fun x4160 () Bool)
(declare-fun x4470 () Int)
(declare-fun x2032 () Bool)
(declare-fun x97 () Bool)
(declare-fun x2132 () Int)
(declare-fun x3988 (Int) Int)
(declare-fun x1008 () Int)
(declare-fun x1735 () Int)
(declare-fun x3563 () Bool)
(declare-fun x3290 (x2765) Int)
(declare-fun x1983 () Int)
(declare-fun x1845 () Bool)
(declare-fun x3518 () Int)
(declare-fun x2183 () Int)
(declare-fun x272 () Int)
(declare-fun x1851 () Int)
(declare-fun x4824 () Int)
(declare-fun x4111 () Int)
(declare-fun x3586 () Int)
(declare-fun x3589 () Bool)
(declare-fun x2217 () Bool)
(declare-fun x580 () Bool)
(declare-fun x201 (Int) Int)
(declare-fun x5000 () Bool)
(declare-fun x1093 () Int)
(declare-fun x4942 () Bool)
(declare-fun x3042 () Bool)
(declare-fun x4219 (Int) Int)
(declare-fun x1329 () Bool)
(declare-fun x1812 () Int)
(declare-fun x1418 () Int)
(declare-fun x1989 () Int)
(declare-fun x4043 () Int)
(declare-fun x309 () Int)
(declare-fun x2995 () Int)
(declare-fun x3459 () Int)
(declare-fun x1028 () Bool)
(declare-fun x3475 () Bool)
(declare-fun x3973 () Int)
(declare-fun x4676 () Int)
(declare-fun x3394 () x2765)
(declare-fun x3098 () Bool)
(declare-fun x5062 () Bool)
(declare-fun x3753 () Int)
(declare-fun x192 () Int)
(declare-fun x581 () Int)
(declare-fun x2437 () Bool)
(declare-fun x2537 () Bool)
(declare-fun x2610 () Bool)
(declare-fun x3025 () Bool)
(declare-fun x846 () Bool)
(declare-fun x2108 () Bool)
(declare-fun x773 () Bool)
(declare-fun x4213 () Bool)
(declare-fun x1545 () Int)
(declare-fun x4524 () Bool)
(declare-fun x4461 () Bool)
(declare-fun x3787 () Bool)
(declare-fun x3507 () Bool)
(declare-fun x5205 () Int)
(declare-fun x3400 () Bool)
(declare-fun x5132 () Bool)
(declare-fun x267 () Bool)
(declare-fun x4844 () Bool)
(declare-fun x1391 () Int)
(declare-fun x2832 () Bool)
(declare-fun x1026 () Int)
(declare-fun x4146 () x2765)
(declare-fun x3075 () Bool)
(declare-fun x443 (Int) Int)
(declare-fun x5234 () Bool)
(declare-fun x3706 () Int)
(declare-fun x3008 () Int)
(declare-fun x4247 () Bool)
(declare-fun x457 () Bool)
(declare-fun x3172 () Bool)
(declare-fun x2660 () Bool)
(declare-fun x913 () Int)
(declare-fun x1890 () Int)
(declare-fun x4931 () Bool)
(declare-fun x1302 () Int)
(declare-fun x3654 () Int)
(declare-fun x1472 () Bool)
(declare-fun x388 () Bool)
(declare-fun x3505 () Bool)
(declare-fun x3204 (x2765) Int)
(declare-fun x4466 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x4877 () Int)
(declare-fun x2574 () Int)
(declare-fun x3952 () Int)
(declare-fun x3875 () Int)
(declare-fun x1849 () Bool)
(declare-fun x468 () Bool)
(declare-fun x2045 () Int)
(declare-fun x3350 () Bool)
(declare-fun x1043 () Int)
(declare-fun x143 () Bool)
(declare-fun x4221 () Bool)
(declare-fun x2799 () Bool)
(declare-fun x5025 () Int)
(declare-fun x2447 () Bool)
(declare-fun x2787 () Int)
(declare-fun x1810 () Int)
(declare-fun x815 () Bool)
(declare-fun x5246 () Int)
(declare-fun x1612 () Int)
(declare-fun x3452 () Int)
(declare-fun x5120 () Int)
(declare-fun x2451 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x1480 () Int)
(declare-fun x3607 () Int)
(declare-fun x2208 () Int)
(declare-fun x117 () Int)
(declare-fun x3232 () Bool)
(declare-fun x1927 () Bool)
(declare-fun x3327 (Int) Int)
(declare-fun x561 () Bool)
(declare-fun x4133 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x2984 () Bool)
(declare-fun x2736 () Int)
(declare-fun x3208 () Int)
(declare-fun x949 () Bool)
(declare-fun x406 () x2765)
(declare-fun x3888 () Bool)
(declare-fun x359 () Bool)
(declare-fun x2923 () Bool)
(declare-fun x4491 () Bool)
(declare-fun x1101 () Int)
(declare-fun x30 () Bool)
(declare-fun x4693 () Bool)
(declare-fun x5296 () Int)
(declare-fun x3735 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x2906 () Int)
(declare-fun x3011 () x2765)
(declare-fun x1186 () Bool)
(declare-fun x26 () Int)
(declare-fun x2418 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x1426 () Int)
(declare-fun x2656 () Int)
(declare-fun x865 () Bool)
(declare-fun x5247 () Bool)
(declare-fun x2306 () Bool)
(declare-fun x1051 (Int) Int)
(declare-fun x4329 () Bool)
(declare-fun x2669 () Int)
(declare-fun x2325 () Int)
(declare-fun x155 () Int)
(declare-fun x3804 () Int)
(declare-fun x5207 () Bool)
(declare-fun x3556 () Bool)
(declare-fun x4938 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x2888 () Bool)
(declare-fun x3568 () Int)
(declare-fun x4918 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x3991 () Bool)
(declare-fun x3600 () Bool)
(declare-fun x1710 () Bool)
(declare-fun x639 () Bool)
(declare-fun x2643 () Int)
(declare-fun x2614 (Int) Int)
(declare-fun x3307 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x3742 () Bool)
(declare-fun x2331 () Bool)
(declare-fun x3922 () Int)
(declare-fun x3611 () Bool)
(declare-fun x3546 () Int)
(declare-fun x2707 () Int)
(declare-fun x4612 () Bool)
(declare-fun x3081 () Bool)
(declare-fun x3423 () Int)
(declare-fun x1482 () Int)
(declare-fun x3965 () Bool)
(declare-fun x3415 (Int) Int)
(declare-fun x5182 () Bool)
(declare-fun x3883 () Int)
(declare-fun x4843 () Bool)
(declare-fun x1803 () Bool)
(declare-fun x1774 () Bool)
(declare-fun x2232 () Int)
(declare-fun x2841 () Int)
(declare-fun x2427 () Bool)
(declare-fun x4642 () Bool)
(declare-fun x3437 () Int)
(declare-fun x4091 () Bool)
(declare-fun x4872 () Bool)
(declare-fun x2092 (Int) Int)
(declare-fun x1862 () Int)
(declare-fun x3587 () Int)
(declare-fun x2142 () Bool)
(declare-fun x564 () Bool)
(declare-fun x2920 () Bool)
(declare-fun x4888 () Int)
(declare-fun x780 () Bool)
(declare-fun x3270 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x2907 () Int)
(declare-fun x5301 () Bool)
(declare-fun x3408 () Bool)
(declare-fun x502 () Bool)
(declare-fun x2949 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x964 (Int) Int)
(declare-fun x4554 () Int)
(declare-fun x4279 () Bool)
(declare-fun x1123 () Int)
(declare-fun x5153 () Int)
(declare-fun x2384 () Int)
(declare-fun x4472 () Int)
(declare-fun x34 () Bool)
(declare-fun x4741 () Bool)
(declare-fun x3645 () Int)
(declare-fun x1297 () x2765)
(declare-fun x939 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x1571 () Int)
(declare-fun x3929 () Bool)
(declare-fun x712 () Int)
(declare-fun x2816 (Int) Int)
(declare-fun x1 () Bool)
(declare-fun x4953 () Bool)
(declare-fun x1050 () Int)
(declare-fun x5109 () Int)
(declare-fun x2265 () Bool)
(declare-fun x3650 () Bool)
(declare-fun x159 () Int)
(declare-fun x2025 (Int) Int)
(declare-fun x3332 () Bool)
(declare-fun x3141 () Bool)
(declare-fun x2407 () Int)
(declare-fun x3829 (Int) Int)
(declare-fun x4057 () Bool)
(declare-fun x2463 () Bool)
(declare-fun x2004 () Int)
(declare-fun x2262 () Bool)
(declare-fun x386 () Bool)
(declare-fun x2806 () Bool)
(declare-fun x3355 () Int)
(declare-fun x170 () Bool)
(declare-fun x701 () Int)
(declare-fun x4109 () Int)
(declare-fun x1405 () x2765)
(declare-fun x1309 () Int)
(declare-fun x4321 () Bool)
(declare-fun x1456 () Int)
(declare-fun x2140 () Int)
(declare-fun x3399 () Bool)
(declare-fun x4523 () Bool)
(declare-fun x35 (Int) Int)
(declare-fun x2147 () Int)
(declare-fun x4962 () Bool)
(declare-fun x774 () Bool)
(declare-fun x2664 () Int)
(declare-fun x1887 () Int)
(declare-fun x1449 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x2373 () Int)
(declare-fun x4930 () Bool)
(declare-fun x1154 (Int) Int)
(declare-fun x4725 () Bool)
(declare-fun x4144 () Int)
(declare-fun x2846 () Bool)
(declare-fun x1711 () Int)
(declare-fun x728 () Int)
(declare-fun x5164 () Int)
(declare-fun x761 (x2765) Int)
(declare-fun x688 () Bool)
(declare-fun x3895 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x578 () Int)
(declare-fun x2582 () Bool)
(declare-fun x866 () Bool)
(declare-fun x4943 () Int)
(declare-fun x1420 (Int) Int)
(declare-fun x2618 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x4852 () Bool)
(declare-fun x4396 () Int)
(declare-fun x3265 () Bool)
(declare-fun x5041 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x5082 () Int)
(declare-fun x3412 () Int)
(declare-fun x1412 () Int)
(declare-fun x134 (Int) Int)
(declare-fun x3079 () Int)
(declare-fun x4289 () Bool)
(declare-fun x3825 () Bool)
(declare-fun x3911 () x2765)
(declare-fun x3583 () Bool)
(declare-fun x5222 () Int)
(declare-fun x2161 () Int)
(declare-fun x1381 () Int)
(declare-fun x4316 () Int)
(declare-fun x5232 () Int)
(declare-fun x2824 () Int)
(declare-fun x4717 () Bool)
(declare-fun x1488 () Bool)
(declare-fun x5029 () Bool)
(declare-fun x3269 () Bool)
(declare-fun x430 () Bool)
(declare-fun x3065 () Int)
(declare-fun x3849 () Int)
(declare-fun x3844 () Bool)
(declare-fun x911 () Bool)
(declare-fun x3226 () Bool)
(declare-fun x4882 () Int)
(declare-fun x5177 () Bool)
(declare-fun x3293 () Bool)
(declare-fun x5088 () Int)
(declare-fun x4200 () Int)
(declare-fun x899 (Int) Int)
(declare-fun x2633 () Bool)
(declare-fun x4375 () Bool)
(declare-fun x4233 () Bool)
(declare-fun x959 () Bool)
(declare-fun x4780 () Bool)
(declare-fun x3702 () Bool)
(declare-fun x331 () Int)
(declare-fun x5192 () Bool)
(declare-fun x4214 () Int)
(declare-fun x3904 () Bool)
(declare-fun x2958 () Bool)
(declare-fun x4011 () Int)
(declare-fun x1698 () Int)
(declare-fun x265 () Bool)
(declare-fun x4897 () Int)
(declare-fun x1174 () Int)
(declare-fun x1220 () Bool)
(declare-fun x2481 () Bool)
(declare-fun x4015 () Int)
(declare-fun x153 () Bool)
(declare-fun x4380 () Int)
(declare-fun x4108 () Int)
(declare-fun x3238 () Bool)
(declare-fun x4670 () Int)
(declare-fun x3325 () Bool)
(declare-fun x2800 () Bool)
(declare-fun x3362 () Int)
(declare-fun x207 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x1946 () Bool)
(declare-fun x4485 () Bool)
(declare-fun x569 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x4180 () Bool)
(declare-fun x693 () Bool)
(declare-fun x4641 () Int)
(declare-fun x2408 () Int)
(declare-fun x1257 () Bool)
(declare-fun x3838 () Int)
(declare-fun x3815 () Int)
(declare-fun x2563 () Bool)
(declare-fun x5077 () Int)
(declare-fun x2626 () Int)
(declare-fun x2733 () Bool)
(declare-fun x2760 () Bool)
(declare-fun x4293 () Int)
(declare-fun x2921 () Bool)
(declare-fun x1844 () Bool)
(declare-fun x2304 () Int)
(declare-fun x5125 () Bool)
(declare-fun x283 () Bool)
(declare-fun x3885 () Int)
(declare-fun x3946 () Bool)
(declare-fun x1785 () Bool)
(declare-fun x2773 () Int)
(declare-fun x1478 () Int)
(declare-fun x5166 () Bool)
(declare-fun x3960 () Int)
(declare-fun x4970 () Bool)
(declare-fun x92 () Bool)
(declare-fun x868 () Bool)
(declare-fun x3969 () Bool)
(declare-fun x2550 () Int)
(declare-fun x4673 () Bool)
(declare-fun x5253 () Bool)
(declare-fun x3409 () Int)
(declare-fun x1423 () Int)
(declare-fun x1836 () Bool)
(declare-fun x2699 () Int)
(declare-fun x3809 () Int)
(declare-fun x126 () Int)
(declare-fun x5086 () Int)
(declare-fun x3598 () Bool)
(declare-fun x5290 () Int)
(declare-fun x1775 () Int)
(declare-fun x5190 () Int)
(declare-fun x4195 () Int)
(declare-fun x1372 () Int)
(declare-fun x2566 () Bool)
(declare-fun x256 (x2765) Int)
(declare-fun x1108 () Int)
(declare-fun x615 () Int)
(declare-fun x466 () Int)
(declare-fun x4950 () Int)
(declare-fun x1993 () Bool)
(declare-fun x2346 () Int)
(declare-fun x483 () Int)
(declare-fun x4187 () Int)
(declare-fun x2688 () Bool)
(declare-fun x1165 () Int)
(declare-fun x3041 () Int)
(declare-fun x1600 () Int)
(declare-fun x2446 () Bool)
(declare-fun x5248 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x4841 () Bool)
(declare-fun x3305 () Int)
(declare-fun x240 () Int)
(declare-fun x226 () Bool)
(declare-fun x404 () Int)
(declare-fun x3301 () Int)
(declare-fun x1684 () Bool)
(declare-fun x1843 () Bool)
(declare-fun x737 () Int)
(declare-fun x4328 () Bool)
(declare-fun x4403 () Int)
(declare-fun x3618 () Bool)
(declare-fun x2512 () Int)
(declare-fun x2084 () Int)
(declare-fun x1425 () Int)
(declare-fun x3936 () Bool)
(declare-fun x5083 () Bool)
(declare-fun x3573 () Int)
(declare-fun x280 () Int)
(declare-fun x3256 () Int)
(declare-fun x2750 () Bool)
(declare-fun x4555 () Bool)
(declare-fun x4054 () Int)
(declare-fun x577 () Int)
(declare-fun x361 () Int)
(declare-fun x3435 () Bool)
(declare-fun x276 () Int)
(declare-fun x4808 () Bool)
(declare-fun x2345 () Bool)
(declare-fun x4787 () Bool)
(declare-fun x1955 () Bool)
(declare-fun x1237 (Int) Int)
(declare-fun x3316 () Int)
(declare-fun x4535 () Bool)
(declare-fun x5050 () Bool)
(declare-fun x4350 () Int)
(declare-fun x4250 () Bool)
(declare-fun x5189 () Bool)
(declare-fun x2974 () Bool)
(declare-fun x3178 () Int)
(declare-fun x499 () Int)
(declare-fun x5104 () Int)
(declare-fun x860 () Int)
(declare-fun x2871 () Bool)
(declare-fun x2717 () Int)
(declare-fun x793 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x2946 () x2765)
(declare-fun x1886 () Bool)
(declare-fun x5236 () Int)
(declare-fun x4259 () Bool)
(declare-fun x3470 () Bool)
(declare-fun x3155 () Bool)
(declare-fun x1808 (Int) Int)
(declare-fun x3662 () Bool)
(declare-fun x5078 () Int)
(declare-fun x4885 () Bool)
(declare-fun x346 () Bool)
(declare-fun x5227 () Int)
(declare-fun x205 () Int)
(declare-fun x953 () Int)
(declare-fun x3933 () Int)
(declare-fun x4532 () Int)
(declare-fun x3387 () Bool)
(declare-fun x1605 () Int)
(declare-fun x16 () x2765)
(declare-fun x1945 () Int)
(declare-fun x4728 () Int)
(declare-fun x2718 () Int)
(declare-fun x2892 () Bool)
(declare-fun x3856 () Bool)
(declare-fun x3280 () Bool)
(declare-fun x2236 () Int)
(declare-fun x41 () Bool)
(declare-fun x4998 () Int)
(declare-fun x2284 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x5054 () Int)
(declare-fun x69 () Int)
(declare-fun x5221 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x2300 () Int)
(declare-fun x81 () Int)
(declare-fun x3117 () Bool)
(declare-fun x169 () Int)
(declare-fun x1611 () Bool)
(declare-fun x2366 () Bool)
(declare-fun x3708 () Bool)
(declare-fun x4564 () Int)
(declare-fun x856 () Bool)
(declare-fun x3187 () Int)
(declare-fun x4940 () Bool)
(declare-fun x4053 () Int)
(declare-fun x1594 () Bool)
(declare-fun x1308 () Int)
(declare-fun x260 () Int)
(declare-fun x3513 () Bool)
(declare-fun x2322 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x274 () Int)
(declare-fun x1019 () Bool)
(declare-fun x5252 () Int)
(declare-fun x197 () Int)
(declare-fun x2916 () Bool)
(declare-fun x508 () Int)
(declare-fun x3582 () Bool)
(declare-fun x4616 () Bool)
(declare-fun x3484 () Bool)
(declare-fun x2359 () Int)
(declare-fun x1995 () Bool)
(declare-fun x1328 () Int)
(declare-fun x218 () Int)
(declare-fun x1783 () Int)
(declare-fun x2869 () Int)
(declare-fun x4209 () Bool)
(declare-fun x667 () Bool)
(declare-fun x2193 () Int)
(declare-fun x397 () Bool)
(declare-fun x1761 () Bool)
(declare-fun x4587 () Bool)
(declare-fun x5307 (Int) Int)
(declare-fun x3012 () Int)
(declare-fun x5311 () Int)
(declare-fun x2668 () Int)
(declare-fun x4415 () Int)
(declare-fun x2635 () Int)
(declare-fun x2595 () Bool)
(declare-fun x720 (Int) Int)
(declare-fun x3006 () Int)
(declare-fun x146 () Int)
(declare-fun x1254 () Int)
(declare-fun x2504 () Bool)
(declare-fun x324 () Int)
(declare-fun x3097 () Int)
(declare-fun x3045 () Bool)
(declare-fun x4721 () Bool)
(declare-fun x332 () Int)
(declare-fun x1410 () Bool)
(declare-fun x304 () Bool)
(declare-fun x2412 () Bool)
(declare-fun x2874 () Bool)
(declare-fun x277 (Int) Int)
(declare-fun x1866 () Bool)
(declare-fun x5264 () Int)
(declare-fun x4142 () Int)
(declare-fun x351 () Int)
(declare-fun x1369 () Int)
(declare-fun x2374 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x633 () Int)
(declare-fun x2204 () Bool)
(declare-fun x956 () Bool)
(declare-fun x498 () Int)
(declare-fun x4802 () Bool)
(declare-fun x626 () Bool)
(declare-fun x4958 () Int)
(declare-fun x1189 () Bool)
(declare-fun x2231 () Bool)
(declare-fun x517 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x2676 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x3456 () Bool)
(declare-fun x4199 () Bool)
(declare-fun x2929 () Int)
(declare-fun x2663 () Bool)
(declare-fun x4826 () Int)
(declare-fun x4082 () Int)
(declare-fun x3241 () Bool)
(declare-fun x4242 () Int)
(declare-fun x2726 () Int)
(declare-fun x1680 () Int)
(declare-fun x2340 () Int)
(declare-fun x1958 () Int)
(declare-fun x422 () Int)
(declare-fun x971 () Int)
(declare-fun x984 () x2765)
(declare-fun x822 () Int)
(declare-fun x3845 () Bool)
(declare-fun x4176 () Bool)
(declare-fun x2703 () Bool)
(declare-fun x980 () Int)
(declare-fun x1354 () Bool)
(declare-fun x3071 () Int)
(declare-fun x3870 () Int)
(declare-fun x3980 () Int)
(declare-fun x4324 () Int)
(declare-fun x4609 () Bool)
(declare-fun x4424 () Bool)
(declare-fun x3887 () x2765)
(declare-fun x2441 () Bool)
(declare-fun x1281 (Int) Int)
(declare-fun x4381 () Int)
(declare-fun x3209 () Bool)
(declare-fun x4955 () Int)
(declare-fun x5053 (Int) Int)
(declare-fun x463 (Int) Int)
(declare-fun x148 (Int) Int)
(declare-fun x2269 () Bool)
(declare-fun x2922 () Bool)
(declare-fun x1792 () Int)
(declare-fun x348 () Bool)
(declare-fun x818 () Bool)
(declare-fun x4803 () Bool)
(declare-fun x50 () Int)
(declare-fun x2689 () Int)
(declare-fun x3890 () Int)
(declare-fun x1181 () Bool)
(declare-fun x1596 () Int)
(declare-fun x878 () Int)
(declare-fun x511 () Bool)
(declare-fun x3001 () x2765)
(declare-fun x664 () Bool)
(declare-fun x1640 () Bool)
(declare-fun x4778 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x4334 () Int)
(declare-fun x1713 () Int)
(declare-fun x624 () Int)
(declare-fun x1136 () Int)
(declare-fun x1543 () Bool)
(declare-fun x5015 () Int)
(declare-fun x4127 (Int) Int)
(declare-fun x1798 () Bool)
(declare-fun x4948 () Int)
(declare-fun x4203 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x1104 () Int)
(declare-fun x4765 () Int)
(declare-fun x428 () Int)
(declare-fun x791 () Int)
(declare-fun x4159 () Int)
(declare-fun x1847 () Int)
(declare-fun x3841 () Bool)
(declare-fun x3330 () Bool)
(declare-fun x2629 () Int)
(declare-fun x1654 () Bool)
(declare-fun x3411 () Bool)
(declare-fun x2720 () Bool)
(declare-fun x745 () Bool)
(declare-fun x5224 () Int)
(declare-fun x3345 () Int)
(declare-fun x1416 () Int)
(declare-fun x538 (x2765) Int)
(declare-fun x3710 () Bool)
(declare-fun x2638 () Bool)
(declare-fun x531 () Int)
(declare-fun x261 () Int)
(declare-fun x3555 () Int)
(declare-fun x893 () Bool)
(declare-fun x3144 () Int)
(declare-fun x613 () Bool)
(declare-fun x495 () Int)
(declare-fun x1645 () Bool)
(declare-fun x2136 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x3569 () Int)
(declare-fun x4104 () Int)
(declare-fun x4736 () Bool)
(declare-fun x2749 () Int)
(declare-fun x5174 () Int)
(declare-fun x1147 () x2765)
(declare-fun x4149 () Int)
(declare-fun x4860 (Int) Int)
(declare-fun x3689 () Int)
(declare-fun x1542 () Bool)
(declare-fun x5214 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x4359 () Int)
(declare-fun x1115 () Bool)
(declare-fun x1295 (Int) Int)
(declare-fun x3740 () Bool)
(declare-fun x3575 () Bool)
(declare-fun x1113 () Int)
(declare-fun x3493 (Int) Int)
(declare-fun x4232 (x2765) Int)
(declare-fun x2677 () Int)
(declare-fun x593 () Int)
(declare-fun x636 () Int)
(declare-fun x67 () Int)
(declare-fun x480 () Int)
(declare-fun x527 () Bool)
(declare-fun x741 () Bool)
(declare-fun x5131 () Bool)
(declare-fun x2416 () Int)
(declare-fun x917 () Bool)
(declare-fun x1342 () Int)
(declare-fun x1196 () Bool)
(declare-fun x412 () Bool)
(declare-fun x4207 () Int)
(declare-fun x204 () Int)
(declare-fun x4963 () Int)
(declare-fun x436 () Int)
(declare-fun x2271 () Bool)
(declare-fun x5110 () Int)
(declare-fun x2058 () Bool)
(declare-fun x5200 () Int)
(declare-fun x4702 () Int)
(declare-fun x1092 () Int)
(declare-fun x4820 (Int) Int)
(declare-fun x3347 () Int)
(declare-fun x2523 () Int)
(declare-fun x5146 () Int)
(declare-fun x719 () Bool)
(declare-fun x2786 () Int)
(declare-fun x4625 () Bool)
(declare-fun x3581 () Int)
(declare-fun x3544 () Bool)
(declare-fun x4935 () Bool)
(declare-fun x1132 () Int)
(declare-fun x510 () Bool)
(declare-fun x3492 () Bool)
(declare-fun x4429 () Bool)
(declare-fun x3850 () Int)
(declare-fun x221 () Int)
(declare-fun x3103 () Bool)
(declare-fun x3090 () Int)
(declare-fun x2228 () Int)
(declare-fun x5297 () Bool)
(declare-fun x4868 () Int)
(declare-fun x3675 () Bool)
(declare-fun x21 () Int)
(declare-fun x1201 () Int)
(declare-fun x2696 () Int)
(declare-fun x1760 () Bool)
(declare-fun x3964 () Bool)
(declare-fun x28 () x2765)
(declare-fun x1175 () Int)
(declare-fun x2317 () Bool)
(declare-fun x1732 () Bool)
(declare-fun x3176 () Bool)
(declare-fun x3018 () Bool)
(declare-fun x3021 () Bool)
(declare-fun x3636 () Int)
(declare-fun x456 () Bool)
(declare-fun x3660 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x3559 () Bool)
(declare-fun x2882 () Int)
(declare-fun x5233 () Bool)
(declare-fun x2515 () Int)
(declare-fun x1044 (Int) Int)
(declare-fun x3796 () Bool)
(declare-fun x5267 () Int)
(declare-fun x4315 () Bool)
(declare-fun x2790 () Int)
(declare-fun x4518 () Bool)
(declare-fun x2617 () Bool)
(declare-fun x1135 () Int)
(declare-fun x794 () Int)
(declare-fun x2539 () Bool)
(declare-fun x5006 () Int)
(declare-fun x2275 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x559 () Bool)
(declare-fun x590 () Bool)
(declare-fun x1638 () Int)
(declare-fun x2770 () Int)
(declare-fun x4734 () Int)
(declare-fun x2784 () Bool)
(declare-fun x3623 () Bool)
(declare-fun x187 () Int)
(declare-fun x5161 () Bool)
(declare-fun x3480 () Bool)
(declare-fun x3814 () Bool)
(declare-fun x4073 () Bool)
(declare-fun x2709 () Int)
(declare-fun x4745 () Bool)
(declare-fun x3590 () Bool)
(declare-fun x2461 () Bool)
(declare-fun x2246 () Bool)
(declare-fun x4312 () Int)
(declare-fun x4539 (Int) Int)
(declare-fun x1442 () Bool)
(declare-fun x4966 () Bool)
(declare-fun x3177 () Bool)
(declare-fun x4373 () Bool)
(declare-fun x2569 () Int)
(declare-fun x4692 () Int)
(declare-fun x3585 () Bool)
(declare-fun x38 () Bool)
(declare-fun x381 () x2765)
(declare-fun x1538 () Bool)
(declare-fun x5206 () Bool)
(declare-fun x4947 () Bool)
(declare-fun x1306 () Bool)
(declare-fun x4384 () Int)
(declare-fun x3595 () Int)
(declare-fun x2370 () Int)
(declare-fun x5277 () Int)
(declare-fun x5044 () Bool)
(declare-fun x2243 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x941 () Int)
(declare-fun x5099 () Bool)
(declare-fun x4865 () Int)
(declare-fun x1085 () Int)
(declare-fun x1313 () Int)
(declare-fun x2519 () Int)
(declare-fun x360 () Int)
(declare-fun x3758 () Int)
(declare-fun x2843 () Int)
(declare-fun x809 () Int)
(declare-fun x3624 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x4937 () Int)
(declare-fun x5187 () Int)
(declare-fun x3284 () x2765)
(declare-fun x5084 () Bool)
(declare-fun x2715 (Int) Int)
(declare-fun x2977 () Int)
(declare-fun x2482 () Int)
(declare-fun x2307 () Int)
(declare-fun x2237 () x2765)
(declare-fun x1430 () Int)
(declare-fun x3909 () Int)
(declare-fun x2468 () Int)
(declare-fun x3534 () Bool)
(declare-fun x996 () Int)
(declare-fun x3263 () Bool)
(declare-fun x5163 () Int)
(declare-fun x2218 () Bool)
(declare-fun x418 () Int)
(declare-fun x2868 () Int)
(declare-fun x1831 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x1546 () Int)
(declare-fun x3383 () Int)
(declare-fun x3436 () Int)
(declare-fun x268 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x4364 () Int)
(declare-fun x2071 () Int)
(declare-fun x848 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x3351 () Bool)
(declare-fun x757 () Int)
(declare-fun x1818 () Int)
(declare-fun x798 () Int)
(declare-fun x3873 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x2260 () Bool)
(declare-fun x1349 () Int)
(declare-fun x605 () Bool)
(declare-fun x1148 () Int)
(declare-fun x313 () Int)
(declare-fun x2538 () Int)
(declare-fun x4484 () Int)
(declare-fun x1471 () Bool)
(declare-fun x3273 () Int)
(declare-fun x3801 () Bool)
(declare-fun x3009 () Int)
(declare-fun x3479 () Bool)
(declare-fun x536 () Int)
(define-fun x307 ((x2765 x2765) (x812 Int)) x2765 (ite ((_ is x4659) x2765) (x4659 (x4220 x2765) (+ x812 (x3872 x2765))) (ite ((_ is x4708) x2765) (x4708 (x1675 x2765) (x1855 x2765) (+ (x5218 x2765) x812)) (x747 (+ (x487 x2765) x812)))))
(define-fun x2276 ((x994 Int)) Int (ite (and (>= x994 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x994)) x994 (- x994 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x529 ((x994 Int)) Int (ite (and (< x994 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x994)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x994) x994))
(define-fun x1672 ((x98 Int)) Bool (and (<= 0 x98) (< x98 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1171 ((x98 Int)) Bool (and (= x98 (x1505 x98 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x98 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639935 x98))))
(define-fun x4377 ((x98 Int)) Bool (and (= 0 (x1505 x98 0)) (= 0 (x1505 0 x98))))
(define-fun x3517 ((x98 Int)) Bool (= x98 (x1505 x98 x98)))
(define-fun x963 ((x98 Int)) Bool (and (x1171 x98) (x4377 x98) (x3517 x98)))
(define-fun x2785 ((x98 Int)) Bool (= (x1505 1461501637330902918203684832716283019655932542975 (x1505 1461501637330902918203684832716283019655932542975 x98)) (x1505 1461501637330902918203684832716283019655932542975 x98)))
(define-fun x4818 ((x98 Int)) Bool (=> (and (<= 0 x98) (< x98 1461501637330902918203684832716283019655932542976)) (= x98 (x1505 1461501637330902918203684832716283019655932542975 x98))))
(define-fun x2682 ((x98 Int)) Bool (=> (= (x1505 1461501637330902918203684832716283019655932542975 x98) x98) (and (< x98 1461501637330902918203684832716283019655932542976) (<= 0 x98))))
(define-fun x5159 ((x98 Int)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x98) (>= x98 1461501637330902918203684832716283019655932542976)) (= (- x98 1461501637330902918203684832716283019655932542976) (x1505 1461501637330902918203684832716283019655932542975 x98))))
(define-fun x2777 ((x98 Int) (x1014 Int)) Bool (and (<= 0 x1014) (= (+ (* x1014 1461501637330902918203684832716283019655932542976) (x1505 1461501637330902918203684832716283019655932542975 x98)) x98)))
(define-fun x1138 ((x98 Int) (x1390 Int)) Bool (and (x2777 x98 x1390) (x4818 x98) (x2682 x98) (x2785 x98) (x5159 x98)))
(define-fun x1476 ((x98 Int) (x1014 Int)) Bool (= (x1505 x98 x1014) (x1505 x1014 x98)))
(define-fun x3944 ((x98 Int) (x1014 Int)) Bool (and (=> (<= 0 x1014) (>= x1014 (x1505 x98 x1014))) (<= 0 (x1505 x98 x1014)) (=> (<= 0 x98) (<= (x1505 x98 x1014) x98))))
(define-fun x4680 ((x98 Int) (x1014 Int)) Bool (and (x3944 x98 x1014) (x1476 x98 x1014)))
(define-fun x1814 ((x98 Int) (x1390 Int)) Bool (and (x1138 x98 x1390) (x4680 x98 1461501637330902918203684832716283019655932542975)))
(define-fun x3218 ((x98 Int)) Bool (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x98)) (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x98)))
(define-fun x4788 ((x98 Int)) Bool (=> (and (< x98 32) (<= 0 x98)) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x98) 0)))
(define-fun x2072 ((x98 Int) (x1014 Int) (x4333 Int) (x1437 Int)) Bool (and (< x1014 32) (= x98 (+ (* x1437 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1014 (* 32 x4333))) (<= 0 x1014) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x4333) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x98) (* x4333 32)) (>= x1437 0) (< x1437 1) (<= 0 x4333)))
(define-fun x5230 ((x98 Int) (x4367 Int) (x364 Int) (x2805 Int)) Bool (and (x4788 x98) (x3218 x98) (x2072 x98 x4367 x364 x2805)))
(define-fun x4494 ((x98 Int) (x4367 Int) (x364 Int) (x2805 Int)) Bool (and (x5230 x98 x4367 x364 x2805) (x4680 x98 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1550 ((x98 Int)) Bool (= (x1505 255 (x1505 255 x98)) (x1505 255 x98)))
(define-fun x3448 ((x98 Int)) Bool (=> (and (<= 0 x98) (< x98 256)) (= (x1505 255 x98) x98)))
(define-fun x5292 ((x98 Int)) Bool (=> (= x98 (x1505 255 x98)) (and (<= 0 x98) (< x98 256))))
(define-fun x5103 ((x98 Int)) Bool (=> (and (> 512 x98) (>= x98 256)) (= (- x98 256) (x1505 255 x98))))
(define-fun x391 ((x98 Int) (x1014 Int)) Bool (and (<= 0 x1014) (= x98 (+ (* x1014 256) (x1505 255 x98)))))
(define-fun x3674 ((x98 Int) (x1390 Int)) Bool (and (x3448 x98) (x5292 x98) (x5103 x98) (x1550 x98) (x391 x98 x1390)))
(define-fun x3419 ((x98 Int) (x1390 Int)) Bool (and (x3674 x98 x1390) (x4680 x98 255)))
(define-fun x4319 ((x98 Int)) Bool (= (x1505 26959946667150639794667015087019630673637144422540572481103610249215 x98) (x1505 26959946667150639794667015087019630673637144422540572481103610249215 (x1505 26959946667150639794667015087019630673637144422540572481103610249215 x98))))
(define-fun x4252 ((x98 Int)) Bool (=> (and (>= x98 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x98)) (= (x1505 26959946667150639794667015087019630673637144422540572481103610249215 x98) x98)))
(define-fun x241 ((x98 Int)) Bool (=> (= x98 (x1505 26959946667150639794667015087019630673637144422540572481103610249215 x98)) (and (< x98 26959946667150639794667015087019630673637144422540572481103610249216) (>= x98 0))))
(define-fun x4762 ((x98 Int)) Bool (=> (and (>= x98 26959946667150639794667015087019630673637144422540572481103610249216) (< x98 53919893334301279589334030174039261347274288845081144962207220498432)) (= (x1505 26959946667150639794667015087019630673637144422540572481103610249215 x98) (- x98 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x122 ((x98 Int) (x1014 Int)) Bool (and (= x98 (+ (x1505 26959946667150639794667015087019630673637144422540572481103610249215 x98) (* 26959946667150639794667015087019630673637144422540572481103610249216 x1014))) (<= 0 x1014)))
(define-fun x5100 ((x98 Int) (x1390 Int)) Bool (and (x4252 x98) (x241 x98) (x4319 x98) (x122 x98 x1390) (x4762 x98)))
(define-fun x2722 ((x98 Int) (x1390 Int)) Bool (and (x5100 x98 x1390) (x4680 x98 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x2281 ((x98 Int)) Bool (and (= (x4811 x98 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4811 115792089237316195423570985008687907853269984665640564039457584007913129639935 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x2435 ((x98 Int)) Bool (and (= x98 (x4811 0 x98)) (= (x4811 x98 0) x98)))
(define-fun x1424 ((x98 Int)) Bool (= x98 (x4811 x98 x98)))
(define-fun x2960 ((x98 Int)) Bool (and (x2435 x98) (x1424 x98) (x2281 x98)))
(define-fun x3024 ((x98 Int) (x1014 Int)) Bool (= (x4811 x98 x1014) (x4811 x1014 x98)))
(define-fun x1787 ((x98 Int) (x1014 Int)) Bool (and (=> (>= x98 0) (<= x98 (x4811 x98 x1014))) (=> (<= 0 x1014) (<= x1014 (x4811 x98 x1014))) (>= (+ x1014 x98) (x4811 x98 x1014))))
(define-fun x1055 ((x98 Int) (x1014 Int)) Bool (and (x3024 x98 x1014) (x1787 x98 x1014)))
(define-fun x2944 ((x98 Int)) Bool (= (x1505 1 (x1505 1 x98)) (x1505 1 x98)))
(define-fun x4028 ((x98 Int)) Bool (=> (and (>= x98 0) (> 2 x98)) (= (x1505 1 x98) x98)))
(define-fun x4132 ((x98 Int)) Bool (=> (= x98 (x1505 1 x98)) (and (> 2 x98) (<= 0 x98))))
(define-fun x602 ((x98 Int)) Bool (=> (and (> 4 x98) (>= x98 2)) (= (x1505 1 x98) (- x98 2))))
(define-fun x715 ((x98 Int) (x1014 Int)) Bool (and (= (+ (x1505 1 x98) (* 2 x1014)) x98) (<= 0 x1014)))
(define-fun x687 ((x98 Int) (x1390 Int)) Bool (and (x715 x98 x1390) (x2944 x98) (x4132 x98) (x602 x98) (x4028 x98)))
(define-fun x2083 ((x98 Int) (x1390 Int)) Bool (and (x4680 x98 1) (x687 x98 x1390)))
(define-fun x3266 ((x1790 Int)) Int (x5063 x1790))
(define-fun x3189 ((x1790 Int)) Int (ite (= x1790 x4280) x1835 (x4760 x1790)))
(define-fun x1681 ((x1790 Int)) Int (ite (and (not x1071) x3845 (not x453)) (x4760 x1790) (ite (and x453 x3845) (x4431 x1790) (x3189 x1790))))
(define-fun x2391 ((x1790 Int)) Int (ite (= x1790 x59) x1404 (x3461 x1790)))
(define-fun x1753 ((x1790 Int)) Int (ite (= x1790 x4734) x2382 (x2614 x1790)))
(define-fun x4691 ((x1790 Int)) Int (ite (= x3329 x1790) 0 (x3054 x1790)))
(define-fun x4235 ((x1790 Int)) Int (ite (= x3774 x1790) 0 (x659 x1790)))
(define-fun x3874 ((x1790 Int)) Int (ite (= x1790 x3213) 0 (x1270 x1790)))
(define-fun x1532 ((x1790 Int)) Int (ite (= x1616 x1790) 0 (x3658 x1790)))
(define-fun x3124 ((x1790 Int)) Int (ite (= x4402 x1790) 0 (x1318 x1790)))
(define-fun x179 ((x1790 Int)) Int (ite (= x181 x1790) 0 (x4649 x1790)))
(define-fun x898 ((x1790 Int)) Int (ite (= x634 x1790) x3329 (x4531 x1790)))
(define-fun x1589 ((x1790 Int)) Int (ite (= x1790 x421) x1050 (x2182 x1790)))
(define-fun x17 ((x1790 Int)) Int (ite (= x1790 x1158) x105 (x5307 x1790)))
(define-fun x4468 ((x1790 Int)) Int (ite (= x333 x1790) x5296 (x3276 x1790)))
(define-fun x4582 ((x1790 Int)) Int (ite (= x3849 x1790) x4088 (x1709 x1790)))
(define-fun x1387 ((x1790 Int)) Int (ite (= x1790 x4302) x2577 (x1772 x1790)))
(define-fun x1427 ((x1790 x2765)) Int (ite (= x1790 x4408) x2844 (x761 x1790)))
(define-fun x2302 ((x1790 Int)) Int (ite (= x1111 x1790) x332 (x3691 x1790)))
(define-fun x5031 ((x1790 Int)) Int (ite (= x1790 x5197) x421 (x4281 x1790)))
(define-fun x675 ((x1790 Int)) Int (ite (and (not x4583) x1602) (x3691 x1790) (x2302 x1790)))
(define-fun x88 ((x1790 Int)) Int (ite (and x1602 (not x4583)) (x4281 x1790) (x5031 x1790)))
(define-fun x4002 ((x1790 Int)) Int (ite (and (not x4583) x1602) (x3276 x1790) (x4468 x1790)))
(define-fun x4840 ((x1790 Int)) Int (ite (and (not x4583) x1602) (x1772 x1790) (x1387 x1790)))
(define-fun x80 ((x1790 Int)) Int (ite (and (not x4583) x1602) (x1709 x1790) (x4582 x1790)))
(define-fun x2524 ((x1790 Int)) Int (ite (and (not x4583) x1602) (x5307 x1790) (x17 x1790)))
(define-fun x2019 ((x1790 Int)) Int (ite (and (not x4583) x1602) (x2182 x1790) (x1589 x1790)))
(define-fun x611 ((x1790 Int)) Int (ite (= x1790 x1342) x3424 (x3655 x1790)))
(define-fun x4791 ((x1790 Int)) Int (ite (= x1790 x575) 274184521717934524641157099916833587231 (x138 x1790)))
(define-fun x3231 ((x1790 Int)) Int (ite (= x1007 x1790) x59 (x2708 x1790)))
(define-fun x4459 ((x1790 Int)) Int (ite (= x1790 x4309) x4734 (x290 x1790)))
(define-fun x288 ((x1790 Int)) Int (ite (= x1790 x4888) x2115 (x964 x1790)))
(define-fun x3385 ((x1790 Int)) Int (ite (= 128 x1790) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1051 x1790)))
(define-fun x3402 ((x1790 Int)) Int (ite (= x1790 128) x4200 (x4038 x1790)))
(define-fun x3953 ((x1790 Int)) Int (ite (= x1790 128) x3640 (x4038 x1790)))
(define-fun x4096 ((x1790 Int)) Int (ite (= x1790 x3757) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x3229 x1790)))
(define-fun x3257 ((x1790 Int)) Int (ite (= x3757 x1790) x4520 (x666 x1790)))
(define-fun x54 ((x1790 Int)) Int (ite (= x1790 x3757) x2573 (x666 x1790)))
(define-fun x4445 ((x1790 Int)) Int (ite x2706 (ite x5052 (x666 x1790) (x3257 x1790)) (ite x219 (x666 x1790) (x54 x1790))))
(define-fun x2069 ((x1790 Int)) Int (ite (and (not x3637) x349) (x3229 x1790) (x4445 x1790)))
(define-fun x3542 ((x1790 Int)) Int (ite (= x1633 x1790) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2069 x1790)))
(define-fun x778 ((x1790 Int)) Int (ite (= x1633 x1790) x1942 (x389 x1790)))
(define-fun x1585 ((x1790 Int)) Int (ite (= x1790 x1633) x1783 (x389 x1790)))
(define-fun x2044 ((x1790 Int)) Int (ite (and x3254 (not x965) x5196) (x778 x1790) (ite (and x965 x5196 x3254) (x389 x1790) (ite (and (not x993) x846 x4249) (x1585 x1790) (x389 x1790)))))
(define-fun x501 ((x1790 Int)) Int (ite (and (<= x303 x1790) (> (+ 32 x303) x1790)) (x3733 (+ (- x1790 x303) 0)) (x4634 x1790)))
(define-fun x352 ((x1790 Int)) Int (ite (and (not x2338) x1172 x4766) (x501 x1790) (x4634 x1790)))
(define-fun x157 ((x1790 Int)) Int (ite (= x1790 x3876) x1708 (x3194 x1790)))
(define-fun x2436 ((x1790 Int)) Int (ite (= x3876 x1790) x3449 (x3194 x1790)))
(define-fun x2050 ((x1790 Int)) Int (ite (and x4896 x1539) (x157 x1790) (x2436 x1790)))
(define-fun x350 ((x1790 Int)) Int (ite (= x4082 x1790) 29289127993025145568725129057828671567744754166070328588094505464281371246592 (x2050 x1790)))
(define-fun x2118 ((x1790 Int)) Int (ite (= x2065 x1790) x2115 (x350 x1790)))
(define-fun x3084 ((x1790 Int)) Int (ite (and (>= x1790 x4082) (< x1790 (+ x4082 0))) (x1489 (+ 0 (- x1790 x4082))) (x5053 x1790)))
(define-fun x5122 ((x1790 Int)) Int (ite (and x4953 x571 (not x1143)) (x3084 x1790) (x5053 x1790)))
(define-fun x3168 ((x1790 Int)) Int (ite (= x1790 x2590) x2061 (x623 x1790)))
(define-fun x859 ((x1790 Int)) Int (ite (= x1790 x3530) 0 (x4820 x1790)))
(define-fun x2229 ((x1790 Int)) Int (ite (= x1790 x4303) x340 (x796 x1790)))
(define-fun x4975 ((x1790 Int)) Int (ite x3299 (x796 x1790) (x2229 x1790)))
(define-fun x681 ((x1790 Int)) Int (ite (= x4303 x1790) x2003 (x796 x1790)))
(define-fun x405 ((x1790 Int)) Int (ite x1407 (x796 x1790) (x681 x1790)))
(define-fun x1248 ((x1790 Int)) Int (ite (= x2341 x1790) 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x2499 x1790)))
(define-fun x1310 ((x1790 Int)) Int (ite (= x4168 x1790) x4196 (x1248 x1790)))
(define-fun x4647 ((x1790 Int)) Int (ite (and (>= x1790 x2341) (> (+ 32 x2341) x1790)) (x1728 (+ (- x1790 x2341) 0)) (x679 x1790)))
(define-fun x89 ((x1790 Int)) Int (ite (and x1682 x2104 (not x1325)) (x4647 x1790) (x679 x1790)))
(define-fun x3166 ((x1790 Int)) Int (ite (= x1790 x1359) 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x89 x1790)))
(define-fun x3109 ((x1790 Int)) Int (ite (= x3260 x1790) x1743 (x3166 x1790)))
(define-fun x5043 ((x1790 Int)) Int (ite (= x1790 x4702) x3939 (x3109 x1790)))
(define-fun x2075 ((x1790 Int)) Int (ite (and (<= x1359 x1790) (> (+ 32 x1359) x1790)) (x3373 (+ (- x1790 x1359) 0)) (x3165 x1790)))
(define-fun x2941 ((x1790 Int)) Int (ite (and x2389 (not x642) x227) (x2075 x1790) (x3165 x1790)))
(define-fun x830 ((x1790 Int)) Int (ite (= x3832 x1790) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2941 x1790)))
(define-fun x4474 ((x1790 Int)) Int (ite (= x1790 x3832) x5137 (x3304 x1790)))
(define-fun x2989 ((x1790 Int)) Int (ite (= x1790 x3832) x4512 (x3304 x1790)))
(define-fun x1883 ((x1790 Int)) Int (ite (= x5097 x1790) x766 (x4573 x1790)))
(define-fun x2312 ((x1790 Int)) Int (ite (= x5097 x1790) x445 (x4573 x1790)))
(define-fun x2606 ((x1790 Int)) Int (ite (and x2035 x4646) (x1883 x1790) (x2312 x1790)))
(define-fun x4136 ((x1790 Int)) Int (ite (and x3760 (not x3397)) (x2499 x1790) (ite (and x841 x3739) (x4556 x1790) (x2606 x1790))))
(define-fun x4982 ((x1790 Int)) Int (ite (and (< x1790 (+ 32 x3412)) (<= x3412 x1790)) (x134 (+ (- x1790 x3412) 0)) (x1985 x1790)))
(define-fun x102 ((x1790 Int)) Int (ite (= x1790 x3982) x4515 (x1986 x1790)))
(define-fun x2023 ((x1790 Int)) Int (ite (= x1790 0) x1708 (x4662 x1790)))
(define-fun x1854 ((x1790 Int)) Int (ite (= x1641 x1790) x2630 (x5092 x1790)))
(define-fun x3734 ((x1790 Int)) Int (ite (and (> (+ x4178 x973) x1790) (<= x4178 x1790)) (x5063 (+ x4266 (- x1790 x4178))) (x899 x1790)))
(define-fun x892 ((x1790 Int)) Int (ite (= x3957 x1790) x5158 (x3283 x1790)))
(define-fun x2919 ((x1790 Int)) Int (ite (and x3760 (not x3397)) (x3283 x1790) (x892 x1790)))
(define-fun x2691 ((x1790 Int)) Int (ite (= x1790 x3638) x3153 (x2025 x1790)))
(define-fun x4368 ((x1790 Int)) Int (ite (and (<= x4976 x1790) (< x1790 (+ x4976 x3607))) (x5063 (+ x4266 (- x1790 x4976))) (x444 x1790)))
(define-fun x1824 ((x1790 Int)) Int (ite (= x3073 x1790) x1971 (x3359 x1790)))
(define-fun x3371 ((x1790 Int)) Int (ite (and (not x379) x2788) (x3359 x1790) (ite (and x4660 x497) (x1824 x1790) (x3359 x1790))))
(define-fun x3990 ((x1790 Int)) Int (ite (and (<= x3848 x1790) (< x1790 (+ x914 x3848))) (x5063 (+ (- x1790 x3848) x4266)) (x3948 x1790)))
(define-fun x4533 ((x1790 Int)) Int (ite (= x1790 x887) x4050 (x1281 x1790)))
(define-fun x173 ((x1790 Int)) Int (ite (and (not x4741) x1192) (x1281 x1790) (ite (and x2052 x3130) (x4533 x1790) (x1281 x1790))))
(define-fun x1564 ((x1790 Int)) Int (ite (= x1790 x470) x3437 (x443 x1790)))
(define-fun x961 ((x1790 Int)) Int (ite (and (>= x1790 x363) (> (+ x3682 x363) x1790)) (x5063 (+ x4266 (- x1790 x363))) (x3574 x1790)))
(define-fun x873 ((x1790 Int)) Int (ite (= x4471 x1790) x1185 (x1002 x1790)))
(define-fun x347 ((x1790 Int)) Int (ite (and (not x468) x645) (x1002 x1790) (ite (and x2558 x4778) (x873 x1790) (x1002 x1790))))
(define-fun x4541 ((x1790 Int)) Int (ite (= x5261 x1790) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2486 x1790)))
(define-fun x1413 ((x1790 Int)) Int (ite (and (<= x5261 x1790) (> (+ x5261 32) x1790)) (x231 (+ 0 (- x1790 x5261))) (x2310 x1790)))
(define-fun x5091 ((x1790 Int)) Int (ite (and x2796 x2746 (not x2251)) (x1413 x1790) (x2310 x1790)))
(define-fun x1027 ((x1790 Int)) Int (ite (= x1790 x1644) x3426 (x380 x1790)))
(define-fun x5093 ((x1790 Int)) Int (ite (= x1790 x1644) x4622 (x380 x1790)))
(define-fun x2670 ((x1790 Int)) Int (ite (and x1776 x4229) (x1027 x1790) (x5093 x1790)))
(define-fun x374 ((x1790 Int)) Int (ite (= x1790 x3973) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x4860 x1790)))
(define-fun x1781 ((x1790 Int)) Int (ite (= x3973 x1790) x1925 (x1420 x1790)))
(define-fun x2712 ((x1790 Int)) Int (ite (= x3973 x1790) x2664 (x1420 x1790)))
(define-fun x789 ((x1790 Int)) Int (ite x2588 (ite x1802 (x1420 x1790) (x1781 x1790)) (ite x903 (x1420 x1790) (x2712 x1790))))
(define-fun x3698 ((x1790 Int)) Int (ite (= x1790 x222) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x789 x1790)))
(define-fun x396 ((x1790 Int)) Int (ite (= x1790 x222) x3061 (x3493 x1790)))
(define-fun x5312 ((x1790 Int)) Int (ite (= x1790 x222) x1642 (x3493 x1790)))
(define-fun x1919 ((x1790 Int)) Int (ite (= x1790 x1381) 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x4219 x1790)))
(define-fun x4866 ((x1790 Int)) Int (ite (= x1790 x2252) x420 (x1919 x1790)))
(define-fun x779 ((x1790 Int)) Int (ite (and (<= x1381 x1790) (< x1790 (+ 32 x1381))) (x2693 (+ 0 (- x1790 x1381))) (x2092 x1790)))
(define-fun x3928 ((x1790 Int)) Int (ite (and x1200 (not x2298) x4261) (x779 x1790) (x2092 x1790)))
(define-fun x4365 ((x1790 Int)) Int (ite (= x409 x1790) 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x3928 x1790)))
(define-fun x4782 ((x1790 Int)) Int (ite (= x2674 x1790) x3593 (x4365 x1790)))
(define-fun x419 ((x1790 Int)) Int (ite (= x3518 x1790) x424 (x4782 x1790)))
(define-fun x2105 ((x1790 Int)) Int (ite (and (>= x1790 x409) (> (+ x409 32) x1790)) (x2410 (+ (- x1790 x409) 0)) (x2816 x1790)))
(define-fun x733 ((x1790 Int)) Int (ite (and (> (+ 32 x4571) x1790) (>= x1790 x4571)) (x1685 (+ (- x1790 x4571) 0)) (x2700 x1790)))
(define-fun x3800 ((x1790 Int)) Int (ite (and x832 x1953 (not x2073)) (x733 x1790) (x2700 x1790)))
(define-fun x4759 ((x1790 Int)) Int (ite (= x400 x1790) x766 (x948 x1790)))
(define-fun x532 ((x1790 Int)) Int (ite (= x400 x1790) x445 (x948 x1790)))
(define-fun x4211 ((x1790 Int)) Int (ite (and x1039 x2978) (x4759 x1790) (x532 x1790)))
(define-fun x161 ((x1790 Int)) Int (ite (= x2538 x1790) x766 (x1042 x1790)))
(define-fun x3375 ((x1790 Int)) Int (ite (= x2538 x1790) x445 (x1042 x1790)))
(define-fun x4177 ((x1790 Int)) Int (ite (and x4650 x1324) (x161 x1790) (x3375 x1790)))
(define-fun x2530 ((x1790 Int)) Int (ite (and x3679 x969) (x783 x1790) (x4177 x1790)))
(define-fun x2980 ((x1790 Int)) Int (ite (= x5018 x1790) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x3827 x1790)))
(define-fun x665 ((x1790 Int)) Int (ite (and (>= x1790 x5018) (< x1790 (+ x5018 32))) (x3415 (+ 0 (- x1790 x5018))) (x1461 x1790)))
(define-fun x759 ((x1790 Int)) Int (ite (and x3442 x2127 (not x2492)) (x665 x1790) (x1461 x1790)))
(define-fun x3457 ((x1790 Int)) Int (ite (= x1790 0) x3426 (x5141 x1790)))
(define-fun x827 ((x1790 Int)) Int (ite (= x1790 x4263) x3426 (x3116 x1790)))
(define-fun x392 ((x1790 Int)) Int (ite (= 0 x1790) x3426 (x425 x1790)))
(define-fun x1637 ((x1790 Int)) Int (ite (= x1790 x4263) x4622 (x3116 x1790)))
(define-fun x3496 ((x1790 Int)) Int (ite (and x5211 x4771) (x827 x1790) (x1637 x1790)))
(define-fun x4436 ((x1790 Int)) Int (ite (and x2788 (not x379)) (x3827 x1790) (ite (and x497 x4660) (x3496 x1790) (x3827 x1790))))
(define-fun x4332 ((x1790 Int)) Int (ite (= x2171 x1790) 88191208983996609870514743494480291812870855255587790976526977987464101101568 (x4436 x1790)))
(define-fun x5250 ((x1790 Int)) Int (ite (= x2321 x1790) x3793 (x4332 x1790)))
(define-fun x3093 ((x1790 Int)) Int (ite (and (>= x1790 x2171) (< x1790 (+ x2171 32))) (x1112 (+ 0 (- x1790 x2171))) (x2996 x1790)))
(define-fun x4487 ((x1790 Int)) Int (ite (= 0 x1790) x1942 (x3812 x1790)))
(define-fun x4120 ((x1790 Int)) Int (ite (= x4303 x1790) x1821 (x1350 x1790)))
(define-fun x1459 ((x1790 Int)) Int (ite (and x4764 x2921) (x1350 x1790) (x4120 x1790)))
(define-fun x863 ((x1790 Int)) Int (ite (= 0 x1790) x766 (x5179 x1790)))
(define-fun x2930 ((x1790 Int)) Int (ite (= 0 x1790) x766 (x3696 x1790)))
(define-fun x4275 ((x1790 Int)) Int (ite (= 0 x1790) x766 (x3327 x1790)))
(define-fun x727 ((x1790 x2765)) Int (ite (and x1141 x1368) (x3915 x1790) (ite (and x2254 x1815) (x4188 x1790) (ite (and x4017 (not x4361)) (x4188 x1790) (ite (and x3742 x2702) (x4188 x1790) (ite (and x123 x312) (x4188 x1790) (x3915 x1790)))))))
(define-fun x4024 ((x1790 x2765)) Int (ite (= x2491 x1790) x2268 (x3915 x1790)))
(define-fun x2878 ((x1790 x2765)) Int (ite x1407 (x727 x1790) (x4024 x1790)))
(define-fun x2986 ((x1790 x2765)) Int (ite x4485 (ite x732 (x4188 x1790) (x2878 x1790)) (x4188 x1790)))
(define-fun x2457 ((x1790 Int)) Int (ite (= 0 x1790) 1 (x7 x1790)))
(define-fun x2041 ((x1790 Int)) Int (ite x3299 (x7 x1790) (x2457 x1790)))
(define-fun x2443 ((x1790 Int)) Int (ite (= 0 x1790) 1 (x7 x1790)))
(define-fun x3017 ((x1790 Int)) Int (ite x1407 (x7 x1790) (x2443 x1790)))
(define-fun x2425 ((x1790 Int)) Int (ite x4485 (ite x732 (x2041 x1790) (x3017 x1790)) (x4902 x1790)))
(define-fun x714 ((x1790 x2765)) Int (ite (and x4330 x1509) (x2866 x1790) (ite (and x1857 x1103) (x5030 x1790) (ite (and (not x2010) x3113) (x5030 x1790) (ite (and x2157 x3417) (x5030 x1790) (ite (and x357 x752) (x5030 x1790) (x2866 x1790)))))))
(define-fun x610 ((x1790 x2765)) Int (ite (= x4294 x1790) x3806 (x2866 x1790)))
(define-fun x2852 ((x1790 x2765)) Int (ite x3299 (x714 x1790) (x610 x1790)))
(define-fun x599 ((x1790 x2765)) Int (ite x4485 (ite x732 (x2852 x1790) (x5030 x1790)) (x5030 x1790)))
(define-fun x147 ((x1790 Int)) Int (ite (and (>= x1790 x100) (> (+ x1821 x100) x1790)) (x2425 (+ (- x1790 x100) 0)) (x2955 x1790)))
(define-fun x982 ((x1790 x2765)) Int (ite (and (not x1143) x571 x4953) (x2575 x1790) (x4008 x1790)))
(define-fun x2775 ((x1790 x2765)) Int (ite (= (x3272 274184521717934524641157099916833587231) x1790) x1758 (x982 x1790)))
(define-fun x740 ((x1790 x2765)) Int (ite (= x1790 (x3272 x1878)) x4264 (x2775 x1790)))
(define-fun x1336 ((x1790 Int)) Int (ite (and x2921 x4764) (x2955 x1790) (x147 x1790)))
(define-fun x967 ((x1790 Int)) Int (ite (and (not x2487) x3681 x2464) (x3093 x1790) (x2996 x1790)))
(define-fun x2762 ((x1790 Int)) Int (ite (= x1826 x1790) x2115 (x2883 x1790)))
(define-fun x777 ((x1790 Int)) Int (ite (= x2193 x1790) x3551 (x2762 x1790)))
(define-fun x3833 ((x1790 Int)) Int (ite (= x4082 x1790) x2947 (x3912 x1790)))
(define-fun x2894 ((x1790 Int)) Int (ite (= x1790 x2084) x341 (x777 x1790)))
(define-fun x3921 ((x1790 Int)) Int (x4928 x1790))
(define-fun x3005 ((x1790 Int)) Int (ite (= x3565 x1790) x2902 (x4391 x1790)))
(define-fun x750 ((x1790 Int)) Int (ite (and (not x1278) (not x698) x5079) (x4391 x1790) (ite (and x1278 x5079) (x2169 x1790) (x3005 x1790))))
(define-fun x40 ((x1790 Int)) Int (ite (= x1790 x1175) x1404 (x552 x1790)))
(define-fun x2957 ((x1790 Int)) Int (ite (= x2270 x1790) x329 (x417 x1790)))
(define-fun x238 ((x1790 Int)) Int (ite (= x4566 x1790) 0 (x525 x1790)))
(define-fun x4135 ((x1790 Int)) Int (ite (= x1790 x112) 0 (x60 x1790)))
(define-fun x3781 ((x1790 Int)) Int (ite (= x1782 x1790) 0 (x1733 x1790)))
(define-fun x4933 ((x1790 Int)) Int (ite (= x1790 x2453) 0 (x560 x1790)))
(define-fun x484 ((x1790 Int)) Int (ite (= x1790 x4364) 0 (x2850 x1790)))
(define-fun x1025 ((x1790 Int)) Int (ite (= x1790 x2666) 0 (x279 x1790)))
(define-fun x1146 ((x1790 Int)) Int (ite (= x1790 x2189) x4566 (x1292 x1790)))
(define-fun x4022 ((x1790 Int)) Int (ite (= x1790 x493) x1862 (x35 x1790)))
(define-fun x1671 ((x1790 Int)) Int (ite (= x1790 x4684) x3594 (x1808 x1790)))
(define-fun x2264 ((x1790 Int)) Int (ite (= x1790 x20) x309 (x2502 x1790)))
(define-fun x4395 ((x1790 Int)) Int (ite (= x4149 x1790) x5185 (x4743 x1790)))
(define-fun x837 ((x1790 Int)) Int (ite (= x428 x1790) x81 (x1968 x1790)))
(define-fun x1221 ((x1790 x2765)) Int (ite (= x999 x1790) x1369 (x761 x1790)))
(define-fun x3488 ((x1790 Int)) Int (ite (= x5224 x1790) x4537 (x4 x1790)))
(define-fun x2753 ((x1790 Int)) Int (ite (= x1790 x345) x493 (x1949 x1790)))
(define-fun x275 ((x1790 Int)) Int (ite (and (not x2507) x4269) (x4 x1790) (x3488 x1790)))
(define-fun x2225 ((x1790 Int)) Int (ite (and x4269 (not x2507)) (x2502 x1790) (x2264 x1790)))
(define-fun x1763 ((x1790 Int)) Int (ite (and (not x2507) x4269) (x1968 x1790) (x837 x1790)))
(define-fun x2950 ((x1790 Int)) Int (ite (and x4269 (not x2507)) (x1808 x1790) (x1671 x1790)))
(define-fun x3320 ((x1790 Int)) Int (ite (and (not x2507) x4269) (x4743 x1790) (x4395 x1790)))
(define-fun x1443 ((x1790 Int)) Int (ite (and (not x2507) x4269) (x35 x1790) (x4022 x1790)))
(define-fun x3695 ((x1790 Int)) Int (ite (and (not x2507) x4269) (x1949 x1790) (x2753 x1790)))
(define-fun x4490 ((x1790 Int)) Int (ite (= x1790 x4242) x119 (x3425 x1790)))
(define-fun x1598 ((x1790 Int)) Int (ite (= x4051 x1790) 274184521717934524641157099916833587231 (x1162 x1790)))
(define-fun x554 ((x1790 Int)) Int (ite (= x1790 x4937) x1175 (x2381 x1790)))
(define-fun x5238 ((x1790 Int)) Int (ite (= x1790 x149) x2270 (x4777 x1790)))
(define-fun x1856 ((x1790 Int)) Int (ite (= x3690 x1790) x2767 (x2926 x1790)))
(define-fun x2459 ((x1790 Int)) Int (ite (= x1790 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x277 x1790)))
(define-fun x2527 ((x1790 Int)) Int (ite (= 128 x1790) x4355 (x3195 x1790)))
(define-fun x3564 ((x1790 Int)) Int (ite (= 128 x1790) x1789 (x3195 x1790)))
(define-fun x992 ((x1790 Int)) Int (ite (= x1401 x1790) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x4343 x1790)))
(define-fun x3096 ((x1790 Int)) Int (ite (= x1790 x1401) x5290 (x5119 x1790)))
(define-fun x1169 ((x1790 Int)) Int (ite (= x1401 x1790) x2990 (x5119 x1790)))
(define-fun x237 ((x1790 Int)) Int (ite x4808 (ite x2162 (x5119 x1790) (x3096 x1790)) (ite x308 (x5119 x1790) (x1169 x1790))))
(define-fun x942 ((x1790 Int)) Int (ite (and (not x991) x1365) (x4343 x1790) (x237 x1790)))
(define-fun x3688 ((x1790 Int)) Int (ite (= x3648 x1790) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x942 x1790)))
(define-fun x3956 ((x1790 Int)) Int (ite (= x1790 x3648) x1643 (x1923 x1790)))
(define-fun x806 ((x1790 Int)) Int (ite (= x1790 x3648) x4980 (x1923 x1790)))
(define-fun x344 ((x1790 Int)) Int (ite (and (not x2475) x1206 x3056) (x3956 x1790) (ite (and x3056 x1206 x2475) (x1923 x1790) (ite (and x511 (not x1813) x1421) (x806 x1790) (x1923 x1790)))))
(define-fun x2430 ((x1790 Int)) Int (ite (and (<= x813 x1790) (< x1790 (+ x813 32))) (x3364 (+ 0 (- x1790 x813))) (x2967 x1790)))
(define-fun x2313 ((x1790 Int)) Int (ite (and x1304 x4911 (not x1613)) (x2430 x1790) (x2967 x1790)))
(define-fun x4449 ((x1790 Int)) Int (ite (= x472 x1790) x1708 (x2361 x1790)))
(define-fun x3471 ((x1790 Int)) Int (ite (= x472 x1790) x3449 (x2361 x1790)))
(define-fun x3344 ((x1790 Int)) Int (ite (and x3853 x462) (x4449 x1790) (x3471 x1790)))
(define-fun x1393 ((x1790 Int)) Int (ite (= x18 x1790) 29289127993025145568725129057828671567744754166070328588094505464281371246592 (x3344 x1790)))
(define-fun x2211 ((x1790 Int)) Int (ite (= x3357 x1790) x2767 (x1393 x1790)))
(define-fun x1876 ((x1790 Int)) Int (ite (and (<= x18 x1790) (< x1790 (+ 0 x18))) (x4657 (+ (- x1790 x18) 0)) (x1777 x1790)))
(define-fun x3046 ((x1790 Int)) Int (ite (and x1825 (not x1383) x4277) (x1876 x1790) (x1777 x1790)))
(define-fun x1674 ((x1790 Int)) Int (ite (= x1790 x3805) x1941 (x5117 x1790)))
(define-fun x1987 ((x1790 Int)) Int (ite (= x1790 x4380) 0 (x1805 x1790)))
(define-fun x2223 ((x1790 Int)) Int (ite (= x1790 x2826) x4144 (x4862 x1790)))
(define-fun x4025 ((x1790 Int)) Int (ite x2213 (x4862 x1790) (x2223 x1790)))
(define-fun x3342 ((x1790 Int)) Int (ite (= x2826 x1790) x1989 (x4862 x1790)))
(define-fun x851 ((x1790 Int)) Int (ite x2825 (x4862 x1790) (x3342 x1790)))
(define-fun x1058 ((x1790 Int)) Int (ite (= x1790 x4870) 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x504 x1790)))
(define-fun x4775 ((x1790 Int)) Int (ite (= x1790 x4529) x3745 (x1058 x1790)))
(define-fun x2191 ((x1790 Int)) Int (ite (and (> (+ 32 x4870) x1790) (<= x4870 x1790)) (x4320 (+ (- x1790 x4870) 0)) (x4565 x1790)))
(define-fun x2827 ((x1790 Int)) Int (ite (and x4881 (not x2137) x3103) (x2191 x1790) (x4565 x1790)))
(define-fun x4995 ((x1790 Int)) Int (ite (= x1438 x1790) 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x2827 x1790)))
(define-fun x4854 ((x1790 Int)) Int (ite (= x5232 x1790) x2903 (x4995 x1790)))
(define-fun x2347 ((x1790 Int)) Int (ite (= x3413 x1790) x5215 (x4854 x1790)))
(define-fun x3376 ((x1790 Int)) Int (ite (and (< x1790 (+ 32 x1438)) (>= x1790 x1438)) (x1208 (+ (- x1790 x1438) 0)) (x2744 x1790)))
(define-fun x3711 ((x1790 Int)) Int (ite (and x1951 x4770 (not x4172)) (x3376 x1790) (x2744 x1790)))
(define-fun x1311 ((x1790 Int)) Int (ite (= x1790 x1552) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x3711 x1790)))
(define-fun x2581 ((x1790 Int)) Int (ite (= x1552 x1790) x3383 (x3369 x1790)))
(define-fun x5058 ((x1790 Int)) Int (ite (= x1790 x1552) x3706 (x3369 x1790)))
(define-fun x1317 ((x1790 Int)) Int (ite (= x1333 x1790) x1771 (x148 x1790)))
(define-fun x2632 ((x1790 Int)) Int (ite (= x1790 x1333) x3008 (x148 x1790)))
(define-fun x3535 ((x1790 Int)) Int (ite (and x3736 x3030) (x1317 x1790) (x2632 x1790)))
(define-fun x4903 ((x1790 Int)) Int (ite (and x4753 (not x165)) (x504 x1790) (ite (and x359 x1651) (x323 x1790) (x3535 x1790))))
(define-fun x2782 ((x1790 Int)) Int (ite (and (>= x1790 x3187) (< x1790 (+ x3187 32))) (x814 (+ 0 (- x1790 x3187))) (x1879 x1790)))
(define-fun x1799 ((x1790 Int)) Int (ite (= x5 x1790) x2718 (x2199 x1790)))
(define-fun x4559 ((x1790 Int)) Int (ite (= x1790 0) x1708 (x5059 x1790)))
(define-fun x3453 ((x1790 Int)) Int (ite (= x1790 x3550) x399 (x1218 x1790)))
(define-fun x592 ((x1790 Int)) Int (ite (and (< x1790 (+ x2711 x1901)) (<= x1901 x1790)) (x4928 (+ (- x1790 x1901) x3285)) (x770 x1790)))
(define-fun x3499 ((x1790 Int)) Int (ite (= x5101 x1790) x52 (x2309 x1790)))
(define-fun x57 ((x1790 Int)) Int (ite (and x4753 (not x165)) (x2309 x1790) (x3499 x1790)))
(define-fun x3966 ((x1790 Int)) Int (ite (= x2292 x1790) x2384 (x2631 x1790)))
(define-fun x4036 ((x1790 Int)) Int (ite (and (< x1790 (+ x2476 x3635)) (<= x2476 x1790)) (x4928 (+ (- x1790 x2476) x3285)) (x3052 x1790)))
(define-fun x2085 ((x1790 Int)) Int (ite (= x313 x1790) x4670 (x4900 x1790)))
(define-fun x2267 ((x1790 Int)) Int (ite (and x1229 (not x3756)) (x4900 x1790) (ite (and x900 x3271) (x2085 x1790) (x4900 x1790))))
(define-fun x4567 ((x1790 Int)) Int (ite (and (<= x1632 x1790) (< x1790 (+ x551 x1632))) (x4928 (+ (- x1790 x1632) x3285)) (x3441 x1790)))
(define-fun x4346 ((x1790 Int)) Int (ite (= x2713 x1790) x4608 (x1154 x1790)))
(define-fun x3767 ((x1790 Int)) Int (ite (and (not x1296) x4170) (x1154 x1790) (ite (and x4027 x2466) (x4346 x1790) (x1154 x1790))))
(define-fun x1972 ((x1790 Int)) Int (ite (= x2355 x1790) x4956 (x463 x1790)))
(define-fun x1288 ((x1790 Int)) Int (ite (and (> (+ x5069 x1770) x1790) (<= x1770 x1790)) (x4928 (+ x3285 (- x1790 x1770))) (x3867 x1790)))
(define-fun x596 ((x1790 Int)) Int (ite (= x1790 x1016) x3102 (x3504 x1790)))
(define-fun x3206 ((x1790 Int)) Int (ite (and x2939 (not x1730)) (x3504 x1790) (ite (and x2454 x129) (x596 x1790) (x3504 x1790))))
(define-fun x855 ((x1790 Int)) Int (ite (= x1790 x2397) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2686 x1790)))
(define-fun x1694 ((x1790 Int)) Int (ite (and (> (+ x2397 32) x1790) (>= x1790 x2397)) (x2705 (+ 0 (- x1790 x2397))) (x4863 x1790)))
(define-fun x1801 ((x1790 Int)) Int (ite (and x5073 (not x70) x4329) (x1694 x1790) (x4863 x1790)))
(define-fun x1719 ((x1790 Int)) Int (ite (= x1790 x906) x2155 (x3146 x1790)))
(define-fun x703 ((x1790 Int)) Int (ite (= x1790 x906) x3019 (x3146 x1790)))
(define-fun x2856 ((x1790 Int)) Int (ite (and x4421 x3685) (x1719 x1790) (x703 x1790)))
(define-fun x3324 ((x1790 Int)) Int (ite (= x1790 x934) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2198 x1790)))
(define-fun x482 ((x1790 Int)) Int (ite (= x1790 x934) x2498 (x2797 x1790)))
(define-fun x2405 ((x1790 Int)) Int (ite (= x934 x1790) x3249 (x2797 x1790)))
(define-fun x2835 ((x1790 Int)) Int (ite x1999 (ite x924 (x2797 x1790) (x482 x1790)) (ite x4284 (x2797 x1790) (x2405 x1790))))
(define-fun x3817 ((x1790 Int)) Int (ite (= x1790 x5208) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2835 x1790)))
(define-fun x5191 ((x1790 Int)) Int (ite (= x1790 x5208) x85 (x4539 x1790)))
(define-fun x3855 ((x1790 Int)) Int (ite (= x1790 x5208) x2912 (x4539 x1790)))
(define-fun x3661 ((x1790 Int)) Int (ite (= x953 x1790) 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x4786 x1790)))
(define-fun x4983 ((x1790 Int)) Int (ite (= x1790 x1283) x2416 (x3661 x1790)))
(define-fun x2351 ((x1790 Int)) Int (ite (and (<= x953 x1790) (< x1790 (+ x953 32))) (x4714 (+ (- x1790 x953) 0)) (x201 x1790)))
(define-fun x328 ((x1790 Int)) Int (ite (and (not x5060) x2720 x4060) (x2351 x1790) (x201 x1790)))
(define-fun x1534 ((x1790 Int)) Int (ite (= x2377 x1790) 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x328 x1790)))
(define-fun x1669 ((x1790 Int)) Int (ite (= x1316 x1790) x4894 (x1534 x1790)))
(define-fun x37 ((x1790 Int)) Int (ite (= x4664 x1790) x5272 (x1669 x1790)))
(define-fun x515 ((x1790 Int)) Int (ite (and (< x1790 (+ 32 x2377)) (<= x2377 x1790)) (x3107 (+ 0 (- x1790 x2377))) (x1044 x1790)))
(define-fun x4917 ((x1790 Int)) Int (ite (and (> (+ x3975 32) x1790) (<= x3975 x1790)) (x2714 (+ (- x1790 x3975) 0)) (x5149 x1790)))
(define-fun x4687 ((x1790 Int)) Int (ite (and x4558 x2801 (not x1124)) (x4917 x1790) (x5149 x1790)))
(define-fun x3250 ((x1790 Int)) Int (ite (= x3482 x1790) x1771 (x451 x1790)))
(define-fun x5270 ((x1790 Int)) Int (ite (= x3482 x1790) x3008 (x451 x1790)))
(define-fun x1693 ((x1790 Int)) Int (ite (and x3343 x516) (x3250 x1790) (x5270 x1790)))
(define-fun x1275 ((x1790 Int)) Int (ite (= x4948 x1790) x1771 (x2258 x1790)))
(define-fun x225 ((x1790 Int)) Int (ite (= x1790 x4948) x3008 (x2258 x1790)))
(define-fun x2060 ((x1790 Int)) Int (ite (and x2987 x1684) (x1275 x1790) (x225 x1790)))
(define-fun x3154 ((x1790 Int)) Int (ite (and x4931 x3557) (x1237 x1790) (x2060 x1790)))
(define-fun x540 ((x1790 Int)) Int (ite (= x2830 x1790) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x543 x1790)))
(define-fun x4137 ((x1790 Int)) Int (ite (and (<= x2830 x1790) (> (+ 32 x2830) x1790)) (x4023 (+ 0 (- x1790 x2830))) (x4100 x1790)))
(define-fun x1024 ((x1790 Int)) Int (ite (and x2297 (not x3253) x2611) (x4137 x1790) (x4100 x1790)))
(define-fun x319 ((x1790 Int)) Int (ite (= 0 x1790) x2155 (x2848 x1790)))
(define-fun x3167 ((x1790 Int)) Int (ite (= x1790 x485) x2155 (x3988 x1790)))
(define-fun x246 ((x1790 Int)) Int (ite (= x1790 0) x2155 (x3829 x1790)))
(define-fun x4414 ((x1790 Int)) Int (ite (= x485 x1790) x3019 (x3988 x1790)))
(define-fun x4521 ((x1790 Int)) Int (ite (and x545 x2471) (x3167 x1790) (x4414 x1790)))
(define-fun x905 ((x1790 Int)) Int (ite (and x1229 (not x3756)) (x543 x1790) (ite (and x3271 x900) (x4521 x1790) (x543 x1790))))
(define-fun x1036 ((x1790 Int)) Int (ite (= x1790 x1021) 88191208983996609870514743494480291812870855255587790976526977987464101101568 (x905 x1790)))
(define-fun x3528 ((x1790 Int)) Int (ite (= x1790 x4248) x4880 (x1036 x1790)))
(define-fun x1280 ((x1790 Int)) Int (ite (and (<= x1021 x1790) (< x1790 (+ x1021 32))) (x3294 (+ (- x1790 x1021) 0)) (x1326 x1790)))
(define-fun x4648 ((x1790 Int)) Int (ite (= x1790 0) x1643 (x3995 x1790)))
(define-fun x3022 ((x1790 Int)) Int (ite (= x2826 x1790) x1977 (x800 x1790)))
(define-fun x4399 ((x1790 Int)) Int (ite (and x9 x1834) (x800 x1790) (x3022 x1790)))
(define-fun x4193 ((x1790 Int)) Int (ite (= 0 x1790) x1771 (x4678 x1790)))
(define-fun x2433 ((x1790 Int)) Int (ite (= 0 x1790) x1771 (x2423 x1790)))
(define-fun x2683 ((x1790 Int)) Int (ite (= x1790 0) x1771 (x2715 x1790)))
(define-fun x3653 ((x1790 x2765)) Int (ite (and x1223 x1196) (x1584 x1790) (ite (and x4857 x3796) (x4883 x1790) (ite (and x1131 (not x2628)) (x4883 x1790) (ite (and x3603 x2832) (x4883 x1790) (ite (and x4213 x2120) (x4883 x1790) (x1584 x1790)))))))
(define-fun x2885 ((x1790 x2765)) Int (ite (= x1790 x28) x3755 (x1584 x1790)))
(define-fun x2462 ((x1790 x2765)) Int (ite x2213 (x3653 x1790) (x2885 x1790)))
(define-fun x3516 ((x1790 x2765)) Int (ite x2684 (ite x3624 (x2462 x1790) (x4883 x1790)) (x4883 x1790)))
(define-fun x3381 ((x1790 Int)) Int (ite (= x1790 0) 1 (x3094 x1790)))
(define-fun x2864 ((x1790 Int)) Int (ite x2213 (x3094 x1790) (x3381 x1790)))
(define-fun x1226 ((x1790 Int)) Int (ite (= 0 x1790) 1 (x3094 x1790)))
(define-fun x4074 ((x1790 Int)) Int (ite x2825 (x3094 x1790) (x1226 x1790)))
(define-fun x2518 ((x1790 Int)) Int (ite x2684 (ite x3624 (x2864 x1790) (x4074 x1790)) (x1911 x1790)))
(define-fun x4463 ((x1790 x2765)) Int (ite (and x4667 x3965) (x269 x1790) (ite (and x4507 x3764) (x2138 x1790) (ite (and x2889 (not x795)) (x2138 x1790) (ite (and x3628 x3240) (x2138 x1790) (ite (and x1256 x4466) (x2138 x1790) (x269 x1790)))))))
(define-fun x4905 ((x1790 x2765)) Int (ite (= x1790 x4014) x1460 (x269 x1790)))
(define-fun x3954 ((x1790 x2765)) Int (ite x2825 (x4463 x1790) (x4905 x1790)))
(define-fun x3811 ((x1790 x2765)) Int (ite x2684 (ite x3624 (x2138 x1790) (x3954 x1790)) (x2138 x1790)))
(define-fun x1647 ((x1790 Int)) Int (ite (and (< x1790 (+ x1977 x1811)) (<= x1811 x1790)) (x2518 (+ 0 (- x1790 x1811))) (x4347 x1790)))
(define-fun x2895 ((x1790 x2765)) Int (ite (and x1825 (not x1383) x4277) (x1274 x1790) (x4008 x1790)))
(define-fun x189 ((x1790 x2765)) Int (ite (= x1790 (x3272 274184521717934524641157099916833587231)) x4152 (x2895 x1790)))
(define-fun x2877 ((x1790 x2765)) Int (ite (= x1790 (x3272 x2042)) x4740 (x189 x1790)))
(define-fun x1765 ((x1790 Int)) Int (ite (and x1834 x9) (x4347 x1790) (x1647 x1790)))
(define-fun x3673 ((x1790 Int)) Int (ite (and x3791 x682 (not x3737)) (x1280 x1790) (x1326 x1790)))
(define-fun x5040 ((x1790 Int)) Int (ite (= x2203 x1790) x2767 (x3741 x1790)))
(define-fun x121 ((x1790 Int)) Int (ite (= x1230 x1790) x1933 (x5040 x1790)))
(define-fun x4433 ((x1790 Int)) Int (ite (= x18 x1790) x244 (x4591 x1790)))
(define-fun x4409 ((x1790 Int)) Int (ite (= x2280 x1790) x3716 (x121 x1790)))
(define-fun x3184 ((x1790 Int)) Int (ite (= x1790 0) x3449 (x4662 x1790)))
(define-fun x5020 ((x1790 Int)) Int (ite (= 0 x1790) x4622 (x5141 x1790)))
(define-fun x4236 ((x1790 Int)) Int (ite (= x1790 0) x4622 (x425 x1790)))
(define-fun x3512 ((x1790 Int)) Int (ite (= x1790 0) x1783 (x3812 x1790)))
(define-fun x4388 ((x1790 Int)) Int (ite (= x1790 0) x445 (x5179 x1790)))
(define-fun x2185 ((x1790 Int)) Int (ite (= x1790 0) x445 (x3696 x1790)))
(define-fun x1454 ((x1790 Int)) Int (ite (= x1790 0) x445 (x3327 x1790)))
(define-fun x3509 ((x1790 x2765)) Int (ite (= (x3272 x1878) x1790) x2528 (x740 x1790)))
(define-fun x4773 ((x1790 Int)) Int (ite (= 0 x1790) x3449 (x5059 x1790)))
(define-fun x5176 ((x1790 Int)) Int (ite (= 0 x1790) x3019 (x2848 x1790)))
(define-fun x111 ((x1790 Int)) Int (ite (= 0 x1790) x3019 (x3829 x1790)))
(define-fun x1167 ((x1790 Int)) Int (ite (= x1790 0) x4980 (x3995 x1790)))
(define-fun x156 ((x1790 Int)) Int (ite (= 0 x1790) x3008 (x4678 x1790)))
(define-fun x1130 ((x1790 Int)) Int (ite (= x1790 0) x3008 (x2423 x1790)))
(define-fun x61 ((x1790 Int)) Int (ite (= x1790 0) x3008 (x2715 x1790)))
(define-fun x1573 ((x1790 x2765)) Int (ite (= x1790 (x3272 x2042)) x912 (x2877 x1790)))
(define-fun x2768 ((x1790 Int)) Int (ite (= 0 x1790) x3640 (x4301 x1790)))
(define-fun x3794 ((x1790 Int)) Int (ite (= 0 x1790) x4200 (x4301 x1790)))
(define-fun x1213 ((x1790 Int)) Int (ite (= 0 x1790) x2573 (x4127 x1790)))
(define-fun x4292 ((x1790 Int)) Int (ite (= 0 x1790) x4520 (x4127 x1790)))
(define-fun x4307 ((x1790 Int)) Int (ite (= 0 x1790) x4512 (x1580 x1790)))
(define-fun x2017 ((x1790 Int)) Int (ite (= x1790 0) x5137 (x1580 x1790)))
(define-fun x4611 ((x1790 Int)) Int (ite (= 0 x1790) x2664 (x4892 x1790)))
(define-fun x1954 ((x1790 Int)) Int (ite (= x1790 0) x1925 (x4892 x1790)))
(define-fun x200 ((x1790 Int)) Int (ite (= x1790 0) x1642 (x720 x1790)))
(define-fun x3775 ((x1790 Int)) Int (ite (= x1790 0) x3061 (x720 x1790)))
(define-fun x1205 ((x1790 Int)) Int (ite (= 0 x1790) x1789 (x558 x1790)))
(define-fun x4499 ((x1790 Int)) Int (ite (= 0 x1790) x4355 (x558 x1790)))
(define-fun x281 ((x1790 Int)) Int (ite (= x1790 0) x2990 (x2081 x1790)))
(define-fun x4092 ((x1790 Int)) Int (ite (= 0 x1790) x5290 (x2081 x1790)))
(define-fun x534 ((x1790 Int)) Int (ite (= x1790 0) x3706 (x1166 x1790)))
(define-fun x1893 ((x1790 Int)) Int (ite (= x1790 0) x3383 (x1166 x1790)))
(define-fun x4253 ((x1790 Int)) Int (ite (= x1790 0) x3249 (x3095 x1790)))
(define-fun x2134 ((x1790 Int)) Int (ite (= 0 x1790) x2498 (x3095 x1790)))
(define-fun x4536 ((x1790 Int)) Int (ite (= 0 x1790) x2912 (x1660 x1790)))
(define-fun x1406 ((x1790 Int)) Int (ite (= 0 x1790) x85 (x1660 x1790)))
(define-fun x4182 ((x98 Int)) Bool (=> (and (not (= 1082367153 x98)) (not (= x98 42459404708690159261654315324267577519400883839135586425952143822324095778816)) (not (= 1267348777 x98)) (not (= x98 32884410799705633174121290916597065681711743008034783737682747490404042539008)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x98)) (not (= x98 22270923681254677845691103109158760375340177724800803888364822332811285364736)) (not (= 274184521717934524641157099916833587231 x98)) (not (= x98 2835717307)) (not (= 1684360437 x98)) (not (= x98 1889567281)) (not (= 274184521717934524641157099916833587202 x98)) (not (= 2743638299 x98)) (not (= x98 1000000000000000000)) (not (= x98 3248611349834744311580729226515044654865681148386811760331698647898072809472)) (not (= x98 18446744073709551615)) (not (= x98 404098525)) (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 x98)) (not (= 4294967296 x98)) (not (= 29289127993025145568725129057828671567744754166070328588094505464281371246592 x98)) (not (= x98 274184521717934524641157099916833587206)) (not (= x98 1159839769)) (not (= x98 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x98 17154740991736861046558774992177620686056526479738507590741468237373194108928)) (not (= x98 157198259)) (not (= x98 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= x98 2514000705)) (not (= x98 1054675240)) (not (= x98 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 x98)) (not (= 826074471 x98)) (not (= x98 10894474682274239493831243662817379401261526446360622092269559273883068006400)) (not (= 1461501637330902918203684832716283019655932542976 x98)) (< 10000 x98) (not (= 117300739 x98)) (not (= x98 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x98 88191208983996609870514743494480291812870855255587790976526977987464101101568)) (not (= 1461501637330902918203684832716283019655932542975 x98))) (not ((_ is x747) (x3272 x98)))))
(assert (x963 x734))
(assert (= x3075 (=> (and (= x2552 (< 18446744073709551615 x2382)) (= x2382 (x2391 x59))) (and (=> x2552 x4032) (=> (and (= (x2276 (+ x2679 32)) x5135) (not x2552) (= (x2276 (+ x5135 x4734)) x876) (= x2679 (mod (* 32 x2382) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= x2382 0) x5010) (or (and x5010 (= x876 x421)) (and (= (< 0 x1142) x327) (= x4709 (x2276 (+ x876 32))) (or (and (not x327) (= x5015 x3329)) (and (= x3774 (x2276 (+ x876 224))) (= x3213 (x2276 (+ 64 x3329))) (= x5015 x3313) (not x930) x327 (= (x2276 (+ x3774 64)) x1616) (= x181 (x2276 (+ x1616 64))) (= x3313 (x2276 (+ 384 x876))) (= (x2276 (+ 64 x3213)) x4402) (= x1531 (x529 (- x1142 1))) (= (< 0 x1531) x930))) (= (x2276 (+ x4734 32)) x3908) (= x4875 (x2276 (+ 64 x876))) (= x126 (x2276 (+ 64 x4875))) (= (x2276 (+ 64 x4734)) x634) (= x2375 (x2276 (+ 64 x4709))) (not x5010) (= (x529 (- x2382 1)) x1142) (= x272 (x2276 (+ x2375 64))) (= x421 x5015) (= (x2276 (+ x876 192)) x3329)))) x4837)))))
(assert (= (=> (= x3027 (= x4085 274184521717934524641157099916833587206)) (and (=> x3027 x1153) (=> (not x3027) x1973))) x2600))
(assert (x4680 x3573 x384))
(assert (= x3456 (=> (and (or (and (= x2826 x1175) x9 (= x4822 96)) (and (= x1490 (x2276 (+ x3581 x2826))) (not x9) (= (x2276 (+ x1977 63)) x113) (= x3581 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x113)) (= x4822 x2826) (= x1811 (x2276 (+ 96 x3243))) (= x1490 x1175))) (= (= 0 x1977) x9)) x2617)))
(assert (= x2840 (x4643 (x3272 x2840))))
(assert (x4182 x2515))
(assert (= (=> (and (= (x2391 x1612) x2574) (= (> x2574 0) x3397) (= (x3231 x1007) x1612)) (and (=> (and (not x3397) (= x2341 x3412)) x1271) (=> x3397 x1367))) x1431))
(assert (x1814 x2497 x3743))
(assert (= (and (not x4229) x1776) x1429))
(assert (= x5085 (and x668 x1908)))
(assert (x1672 x4141))
(assert (= x644 (x3272 (x4643 x644))))
(assert (x1672 x2452))
(assert (x1672 x1015))
(assert (x1672 x1515))
(assert (x1672 x1067))
(assert (x4494 x523 x2181 x3348 x1896))
(assert (x1672 x3460))
(assert (x1672 x5019))
(assert (x963 x2821))
(assert (= (and (not x4646) x2035) x2920))
(assert (= x5084 (and x1611 (not x2062))))
(assert (= (ite (and (not x2552) x1100 x5010) (x4712 x3723) (ite (and x1100 (not x327) (not x2552) (not x5010)) (x4531 x3723) (x898 x3723))) (x4281 x3723)))
(assert (= x1872 (or x4372 (and x1651 x359))))
(assert (x1672 x3591))
(assert (= (=> (and (= (x1505 1461501637330902918203684832716283019655932542975 x4129) x5315) (= x1101 (x529 (- x2448 x4123))) (= (x269 x539) x2875) (>= x2875 0) (= x3506 (< x2678 x2875)) (= x3901 274184521717934524641157099916833587231) (= x381 (x4708 (x3272 274184521717934524641157099916833587231) (x747 1) 0)) (= x539 (x4708 (x3272 x5315) (x747 1) 0)) (<= x2875 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2678 (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4123)))) (and (=> x3506 x663) (=> (not x3506) x3100))) x2723))
(assert (x1672 x5277))
(assert (x1672 x4396))
(assert (= x841 (and (not x3042) x1500)))
(assert (x1672 x5163))
(assert (x1672 x4486))
(assert (= (=> (and (not (> 826074471 x3933)) (not (= x3933 826074471)) (= x3933 1889567281) (= x1545 x1828) (not (> 4 x300)) (= x3265 (or (and (= (<= x3144 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3144 32)) (> x3144 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x3144 (x529 (- x300 4))) (> x56 0) (= x300 36) (= x2074 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= 36 x300) (= x56 (x4232 (x3272 274184521717934524641157099916833587206)))) (and (=> x3265 x4227) (=> (not x3265) x716))) x2973))
(assert (x1672 x5110))
(assert (x1672 x3875))
(assert (x1672 x4873))
(assert (x4182 x996))
(assert (= (x1949 x63) (ite (and x4784 (not x793) x5145) (x4923 x63) (ite (and (not x1447) (not x793) x4784 (not x5145)) (x1292 x63) (x1146 x63)))))
(assert (x1672 x2804))
(assert (x1672 x1608))
(assert (= (x899 x212) 0))
(assert (= x3464 (=> (and (= x3717 (x40 x1250)) (= (x1598 x4051) x3753) (= (> x3717 0) x639) (= (x554 x4937) x1250) (= (x4490 x4242) x2555)) (and (=> x639 x3865) (=> (not x639) x4498)))))
(assert (x1672 x2554))
(assert (x1672 x2653))
(assert (x1672 x3301))
(assert (x1672 x1084))
(assert (x1672 x1250))
(assert (= (=> (and (= x4824 x2097) (= (= x4824 x58) x158)) (and (=> (and (= (x4708 (x3272 x4824) (x747 1) 0) x406) (>= x1642 0) x158 (= x1083 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1642) (= x1642 (x2986 x406)) (= x3500 32)) x1897) (=> (not x158) x4183))) x3712))
(assert (x1672 x1314))
(assert (= (=> (and (= x4991 (= x2117 0)) (= x3079 (x1505 x2803 x573)) (= x3744 (= 0 x3079)) (= (ite (< x2368 x4483) 1 0) x573) (= (ite (not x4991) 1 0) x2803) (= x2368 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1933))) (and (=> (not x3744) x4498) (=> (and (= x2107 x475) (= x475 (div x5136 1000000000000000000)) x3744 (= (mod (* x4483 x1933) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5136)) x1287))) x4157))
(assert (= x1843 (=> (and (= (x2276 (+ x1479 128)) x1401) (= x1479 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1091)) (= x3088 (or (> x2953 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2953) true) (> 32 x2953)))) (= (x2276 (+ x2953 31)) x1091)) (and (=> x3088 x4498) (=> (not x3088) x2220)))))
(assert (= x2248 (and x847 x3639)))
(assert (x1672 x3828))
(assert (x1672 x3732))
(assert (x1672 x737))
(assert (x1672 x489))
(assert (x4182 x3546))
(assert (x4494 x2012 x4645 x4998 x362))
(assert (= x3533 (or (and x1467 x3744) (and x5313 x1938))))
(assert (x1672 x3718))
(assert (= (x4643 (x747 1159839769)) 1159839769))
(assert (= x2320 x1246))
(assert (= (=> (and (= (ite (> 32 x1520) 1 0) x1806) (= x3999 (x1505 x734 x1294)) (= 1 x3360) (= x4383 (x1505 x3360 x1806)) (= (ite (< x1520 78) 1 0) x1294) (= (= (x4811 x3999 x4383) 0) x1639) (= 1 x734)) (and (=> (and (or (and (not x1848) (= (x1505 1 x1520) x4063) (= x3408 (= x4063 0)) (= x2465 (ite x3408 1 10)) x414 (= (x3692 x1520 1) x3007) (= x3115 100) (= x1848 (> x3007 1))) (and (not x414) (= 10 x3115) (= x2465 1))) x1639 (= (< 1 x1520) x414)) x358) (=> (and (not x1639) (= x2319 (x641 10 x1520))) x230))) x4173))
(assert (x1672 x3881))
(assert (x1672 x5197))
(assert (x1672 x4713))
(assert (= (and x970 x2640) x1492))
(assert (x1672 x56))
(assert (x963 x4876))
(assert (x1672 x20))
(assert (x1672 x326))
(assert (x1672 x1230))
(assert (=> (<= x4722 10000) (= (x747 x4722) (x3272 x4722))))
(assert (= (x747 80455309404869098397086765254582893697288411140986131472514049311582516674560) (x3272 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (x4182 x1600))
(assert (x1672 x5098))
(assert (= (=> (and (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2786) x2763) (= x2604 (or (> x492 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x492 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x492)))) (= (x2276 (+ x934 x2763)) x5208) (= (x2276 (+ x492 31)) x2786)) (and (=> x2604 x4498) (=> (not x2604) x3958))) x3182))
(assert (= x3729 (and x932 x4916)))
(assert (x1672 x4108))
(assert (x1672 x498))
(assert (x1672 x3465))
(assert (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x5149 x3975)))
(assert (= x960 (or (and x4030 (not x3672)) (and x2066 x2393))))
(assert (= x752 (and x1103 (not x1857))))
(assert (x1672 x1482))
(assert (x1672 x1631))
(assert (x1672 x850))
(assert (x963 x383))
(assert (x1672 x3749))
(assert (x1672 x4138))
(assert (x1672 x3832))
(assert (= (x4565 x4870) (ite (= x1095 x4870) x4839 (x4775 x4870))))
(assert (x1814 x4570 x2634))
(assert (x1672 x5158))
(assert (= x2728 (=> (and x170 (= x4291 x432) (= x1821 x4033) (= x2528 (x740 (x3272 x1878))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3509 (x3272 274184521717934524641157099916833587231))) x170)) x5041)))
(assert (= (=> (and (= (x4188 x3262) x1752) (= x1815 (> x2360 x1752)) (= x3262 (x4708 (x3272 274184521717934524641157099916833587231) (x747 1) 0)) (<= 0 x1752) (= x4300 x549) (= 274184521717934524641157099916833587231 x3925) (<= x1752 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (not x1815) x4832) (=> x1815 x34))) x3192))
(assert (= (and (not x4987) x2962) x247))
(assert (= x3191 (=> (and (= (or (> x1117 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1117) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1117) true))) x5289) (= x1120 (x2276 (+ x1117 31))) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1120) x3537) (= (x2276 (+ x5018 x3537)) x4263)) (and (=> (not x5289) x1666) (=> x5289 x4032)))))
(assert (x1672 x4793))
(assert (x4494 x3366 x2994 x2028 x5061))
(assert (= (=> (and (= (= x1313 x58) x3314) (= x1184 x1313)) (and (=> (and x3314 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3061) (= 1 x146) (= (x599 x586) x3061) (<= 0 x3061) (= x586 (x4708 (x3272 x1313) (x747 1) 0)) (= x3636 32)) x5067) (=> (not x3314) x2188))) x151))
(assert (x963 x2608))
(assert (= (and x2485 x5284) x2265))
(assert (x1672 x2387))
(assert (= (or (and x3056 x1206) (and x511 x1421)) x2610))
(assert (x1672 x904))
(assert (x1672 x2549))
(assert (= x3382 (and (not x4809) x2343)))
(assert (x963 x1314))
(assert (x4494 x2550 x3683 x4021 x3469))
(assert (= (=> (= x1137 (= 0 x895)) (and (=> x1137 x4032) (=> (not x1137) x3642))) x807))
(assert (x1672 x2236))
(assert (x1672 x4865))
(assert (x1672 x1536))
(assert (=> (<= x2668 10000) (= (x747 x2668) (x3272 x2668))))
(assert (x963 x4945))
(assert (x4182 x2201))
(assert (x1672 x2253))
(assert (x1672 x3973))
(assert (x1672 x338))
(assert (x1672 x1478))
(assert (= (+ 1 (x4643 x3887)) (x4643 (x307 x3887 1))))
(assert (= x3293 (=> (and (= 2835717307 x1070) (= 68 x271) (not (= 2514000705 x1070)) (> x4223 0) (= x2497 x252) (not (> 4 x271)) (= x2832 (or (and (> 64 x82) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x82) true)) (> x82 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 1889567281 x1070)) (not (= x1070 826074471)) (= (x529 (- x271 4)) x82) (= x318 x2117) (= x3221 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1078 x271) (not (> 826074471 x1070)) (= (x4232 (x3272 274184521717934524641157099916833587206)) x4223)) (and (=> (not x2832) x1558) (=> x2832 x989)))))
(assert (= (ite (and x2372 x5285 (not x2681)) (x3574 x5264) (x961 x5264)) (x1002 x5264)))
(assert (x1055 x2622 x5086))
(assert (= (or (and x1700 x2794) (and x1514 x286) (and x1338 x2284) (and x1119 x3580) (and x2556 x4609) (and x2389 x642) (and x3145 (not x2582)) (and (not x3212) x1678) (and (not x3582) x2461) (and x888 x4274) (and x3478 x5130) (and x1653 x4128) (and x4985 x1445) (and (not x4738) x3026) (and x5011 x4944) (and x2506 (not x569)) (and (not x2665) x3561) (and x2062 x1611) (and x1493 x2548) (and x4774 x1903) (and (not x4026) x1946) (and x1870 x96) (and x1001 x5029) (and x2317 x869) (and x5293 (not x2673)) (and x3363 (not x1468)) (and (not x2780) x4961) (and x15 x456) (and x2489 (not x5007)) (and x474 x1618) (and x2153 x2136) (and x4809 x2343) (and x2272 (not x2335)) (and (not x2893) x1072) (and x5233 x38) (and x2052 (not x3130)) (and x1975 x4497) (and (not x918) x2216) (and x2870 x4438) (and x2301 x5304) (and x4258 x3598) (and x4337 x3842) (and x2739 (not x736)) (and (not x3955) x5260) (and (not x2342) x3951) (and x3298 x4257) (and x4495 (not x2323)) (and x226 x5084) (and x3176 (not x3445)) (and x4895 x5002) (and x76 x1563) (and (not x283) x1246) (and (not x215) x3255) (and x4754 x1181) (and x3274 x1731) (and (not x4208) x1323) (and (not x1011) x656) (and x1729 x2836) (and x4475 x3120) (and x4799 x700) (and x5258 (not x2537)) (and x613 x5195) (and x247 x1760) (and x3971 x4780) (and (not x2398) x724) (and x704 (not x4461)) (and x2298 x1200) (and x1224 x1033) (and x3411 x1595) (and x2485 (not x5284)) (and x4273 (not x4321)) (and x2688 x3816) (and x2073 x832) (and x4286 x2968) (and x1784 x2724) (and x2585 x1127) (and x5289 x4243) (and x2386 (not x73)) (and x4191 x1137) (and x64 x1997) (and (not x24) x553) (and (not x302) x2680) (and (not x2659) x2265) (and x430 x3479) (and (not x688) x3281) (and x1779 (not x5214)) (and (not x4914) x3810) (and x4987 x2962) (and x2487 x2464) (and x3444 (not x3480)) (and x956 (not x2055)) (and x1450 x4742) (and x2845 x3675) (and x1028 x2928) (and (not x2640) x970) (and x2484 x3485) (and x2251 x2796) (and x3664 x2244) (and x3735 x4924) (and x4625 x3062) (and (not x4660) x497) (and (not x541) x5000) (and (not x4778) x2558) (and (not x864) x1187) (and x2451 x731) (and x2104 x1325) (and x3035 x3072) (and x654 x1994) (and x2592 x3597) (and x5285 x2681) (and x411 (not x2266)) (and (not x3776) x3667) (and x2286 x108) (and x4673 x3525) (and x3081 x2122) (and x2911 x449) (and (not x2834) x915) (and x4299 x3588) (and x1844 x278) (and x1277 x3440) (and x1533 (not x2366)) (and x3826 x3224) (and x1100 x2552) (and (not x4600) x3374) (and x2222 (not x2922)) (and x2667 x3770) (and x2121 x3416) (and x2314 x2376) (and x2627 x1866) (and x626 (not x4538)) (and x5056 (not x1576)) (and x4605 (not x5288)) (and x546 x4443) (and x4192 x1375) (and (not x3821) x3365) (and x1750 x4039) (and x4640 x116) (and x858 x1804) (and x2492 x3442) (and x595 (not x3602)) (and (not x5050) x2178) (and x4844 (not x1320)) (and x178 (not x835)) (and x4953 x1143) (and (not x2982) x3536) (and x2119 x446) (and (not x4879) x606) (and x4091 x2076) (and x1500 x3042) (and (not x1389) x4739) (and x3784 x4090) (and x3382 x4313) (and x2338 x4766) (and x4233 x3463) (and x2974 x2810) (and x1846 x949)) x627))
(assert (x1672 x2239))
(assert (x4182 x4190))
(assert (x1672 x4130))
(assert (x1672 x2160))
(assert (= (ite (and x4784 (not x793) x5145) (x4923 x214) (ite (and (not x5145) x4784 (not x1447) (not x793)) (x1292 x214) (x1146 x214))) (x1949 x214)))
(assert (x1672 x4519))
(assert (= (x3272 (x4643 x4146)) x4146))
(assert (= x188 (=> (and (= x2787 (x352 x303)) (= (= x2787 0) x4560)) (and (=> (and x4560 (= 0 x3447)) x3751) (=> (not x4560) x2331)))))
(assert (= (and x5160 x2806) x3064))
(assert (x1672 x5290))
(assert (= x2455 (and x4206 (not x3067))))
(assert (= (and (not x4421) x3685) x4020))
(assert (= (and x2455 x4518) x3649))
(assert (=> (>= 10000 x557) (= (x747 x557) (x3272 x557))))
(assert (x1672 x3541))
(assert (= (=> (and (= x531 x1909) (= x3804 0)) x5095) x4922))
(assert (x1672 x3706))
(assert (= (=> (and (= (x2775 (x3272 x1878)) x4264) (= x1094 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2775 (x3272 x1878)))) x1094 (= (= x1878 274184521717934524641157099916833587206) x321) (= x1758 (x982 (x3272 274184521717934524641157099916833587231)))) (and (=> x321 x1504) (=> (not x321) x2472))) x4930))
(assert (x1672 x1708))
(assert (x1672 x5045))
(assert (= (+ (x4643 x2154) 2) (x4643 (x307 x2154 2))))
(assert (x1672 x1487))
(assert (x1672 x4827))
(assert (= x5033 (=> (= (= x455 274184521717934524641157099916833587202) x3135) (and (=> (not x3135) x1982) (=> (and (not (= 117300739 x1865)) (= x1328 32) (< x1865 826074471) (= x1928 1) (= 4 x1148) (not (< x1148 4)) (> x5220 0) (<= x3008 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x229 x1148) (not (= x1865 157198259)) x3135 (>= x3008 0) (= x1865 404098525) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x709) (= x5220 (x4232 (x3272 274184521717934524641157099916833587202)))) x950)))))
(assert (= (or (and x3830 x706) x4723) x2596))
(assert (x2960 x5086))
(assert (x1672 x4496))
(assert (= (x4281 x4789) (ite (and x1100 x5010 (not x2552)) (x4712 x4789) (ite (and (not x5010) (not x327) (not x2552) x1100) (x4531 x4789) (x898 x4789)))))
(assert (= (=> (and (= x3549 x811) (= x1020 (x529 (- x3641 4))) (= x4254 (or (and (= (<= x1020 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1020)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1020))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4676) (not (= 826074471 x4950)) (= x3641 x4955) (not (> 826074471 x4950)) (= 1889567281 x4950) (not (> 4 x3641)) (> x4484 0) (= 36 x3641) (= x4484 (x4232 (x3272 274184521717934524641157099916833587202)))) (and (=> x4254 x1970) (=> (not x4254) x1892))) x3201))
(assert (= (x2965 x409) (ite (and x3267 (not x446) x2119) (x2105 x409) (x2816 x409))))
(assert (= 0 (x3461 x5187)))
(assert (x1672 x2534))
(assert (x1672 x3792))
(assert (= x4329 (and x908 x3676)))
(assert (x1672 x1150))
(assert (= x1355 (and (not x137) x4629)))
(assert (= 0 (x4505 x1480)))
(assert (x1672 x4470))
(assert (= x4780 (and x2272 x2335)))
(assert (= (=> (and (= x399 (x40 x361)) (= (x554 x4937) x361) (= x1635 (> x399 18446744073709551615))) (and (=> x1635 x4498) (=> (and (or x3916 (and (= x1901 (x2276 (+ x4242 192))) (= x2711 (mod (* x399 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x3916))) (= x4870 (x2276 (+ x2773 x3550))) (= x3916 (= 0 x399)) (not x1635) (= (x2276 (+ 32 x2184)) x2773) (= x2184 (mod (* 32 x399) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x522))) x2505))
(assert (= x1037 (=> (and (= (x2391 x53) x2630) (= x613 (> x2630 18446744073709551615)) (= x53 (x3231 x1007))) (and (=> x613 x4032) (=> (and (not x613) (= x646 (x2276 (+ x3277 32))) (= x2910 (= 0 x2630)) (= (x2276 (+ x1641 x646)) x2341) (or x2910 (and (= x973 (mod (* x2630 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x2910) (= (x2276 (+ 192 x1342)) x4178))) (= (mod (* 32 x2630) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3277)) x1431)))))
(assert (= x1533 (and x2266 x411)))
(assert (= (=> (and (= x1852 (x2276 (+ x4242 192))) (= x2429 (x57 x1852)) (= x2039 (> 0 x2795)) (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2429)) x2795)) (and (=> x2039 x4498) (=> (and (= x809 x2429) (not x2039) (= x489 x809) (= x1057 (x3453 x3550)) (not x465) (= x465 (< 1 x1057))) x3400))) x354))
(assert (x4182 x1829))
(assert (= (=> (and (= x995 x1305) (= x4287 x1884)) x4800) x4378))
(assert (= (and x4681 x2392) x5099))
(assert (x963 x3495))
(assert (= x2485 (and (not x3051) x1980)))
(assert (x1672 x329))
(assert (x963 x221))
(assert (x1672 x1294))
(assert (x4494 x3455 x205 x2346 x1748))
(assert (x1672 x520))
(assert (x1672 x23))
(assert (x963 x118))
(assert (x1672 x655))
(assert (x1672 x809))
(assert (x1672 x2384))
(assert (= (x3379 x5175) 0))
(assert (= (=> (and (= (x4556 x3832) x2933) (= x3739 (= x2933 0))) (and (=> (and (= x5158 0) x3739 (= x3443 x5097)) x3825) (=> (not x3739) x2102))) x4804))
(assert (= x1951 (and x3101 x2027)))
(assert (= x1595 (and (not x5130) x3478)))
(assert (x1672 x26))
(assert (x1672 x2584))
(assert (= x1734 (x4643 (x3272 x1734))))
(assert (= (=> (and (= (< 0 x3134) x2871) (= (mod (* x4829 x5222) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x769)) (and (=> (not x2871) x4498) (=> x2871 x1690))) x1764))
(assert (x1672 x882))
(assert (x1672 x870))
(assert (= (=> (and (= x1952 (x1459 x2644)) (= x4090 (or (and (< x1952 32) (= true (<= x1952 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1952)))) (and (=> x4090 x4032) (=> (not x4090) x3171))) x1086))
(assert (x963 x4821))
(assert (= x3913 (=> (and (= x2584 (x4687 x3975)) (= (> x2584 1000000000000000000) x4661)) (and (=> x4661 x4498) (=> (not x4661) x2330)))))
(assert (x4494 x2824 x4207 x458 x2146))
(assert (= (=> (and (= (= 0 x4075) x2266) (= (ite (< x2995 1000000000000000000) 1 0) x1118) (= x4075 (x1505 x4439 x1118)) (= (ite (not x2802) 1 0) x4439) (= x2995 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4703)) (= (= 0 x4703) x2802)) (and (=> (not x2266) x4032) (=> x2266 x4580))) x4620))
(assert (= x1229 (and x397 (not x45))))
(assert (= (x4643 (x3272 x2201)) x2201))
(assert (x1672 x1768))
(assert (= (=> (= x1844 (= x4864 0)) (and (=> (not x1844) x1754) (=> x1844 x4032))) x1379))
(assert (x1672 x1524))
(assert (x1672 x2304))
(assert (x1672 x1907))
(assert (x963 x2187))
(assert (x1672 x3963))
(assert (x1672 x5142))
(assert (= (=> (= x3986 (= 0 x4637)) (and (=> (not x3986) x4527) (=> x3986 x4498))) x5199))
(assert (x1672 x2097))
(assert (= true x4574))
(assert (= (ite (= x1716 x1408) x3960 (x4431 x1408)) (x4760 x1408)))
(assert (= x2529 (=> (and (= x4904 x101) (= x3090 x945)) x1222)))
(assert (x1672 x692))
(assert (= x4962 (or (and x3087 x3384) (and x1668 x4544))))
(assert (x4182 x3549))
(assert (x1672 x1520))
(assert (= x4285 (=> (and (= x3982 x14) (= (< 1 x5254) x3701) (not x3701) (= x4513 (x3231 x1007)) (= (x2391 x4513) x5254)) x4503)))
(assert (x1672 x940))
(assert (x1672 x1502))
(assert (x1672 x4506))
(assert (x1672 x3765))
(assert (= x3021 (and x868 (not x3552))))
(assert (x1672 x3510))
(assert (= x1618 (or x2488 x4315)))
(assert (x1672 x1458))
(assert (= (x3272 1889567281) (x747 1889567281)))
(assert (x1672 x118))
(assert (x1672 x2741))
(assert (x4182 x4697))
(assert (x1672 x1381))
(assert (x1672 x4260))
(assert (x1672 x1810))
(assert (x1672 x313))
(assert (x1672 x2590))
(assert (x1672 x3097))
(assert (x1672 x244))
(assert (x1672 x394))
(assert (x1672 x794))
(assert (x1672 x4353))
(assert (= (and (not x847) x3639) x4298))
(assert (= (=> (= x5130 (= 0 x2648)) (and (=> (not x5130) x2040) (=> x5130 x4032))) x735))
(assert (x1672 x3220))
(assert (x1814 x1828 x2857))
(assert (x1672 x22))
(assert (x963 x2641))
(assert (x1672 x3537))
(assert (= (and x2739 x736) x4924))
(assert (x1672 x4165))
(assert (x963 x4899))
(assert (x1672 x4370))
(assert (x4182 x2752))
(assert (= x34 (=> (and (= x177 x5259) (= x2239 0)) x2865)))
(assert (x1672 x3392))
(assert (= (=> (and (= x4305 x5278) (= x1416 x3644)) x4326) x939))
(assert (x1672 x3222))
(assert (x1672 x1570))
(assert (x1672 x3892))
(assert (x1672 x944))
(assert (x1672 x1734))
(assert (= x553 (and (not x1338) x2284)))
(assert (= x1803 (=> (and (= x453 (= x1404 0)) (= (x2276 (+ 32 x59)) x1716) (= (x2276 (+ 32 x4111)) x5114) (= (x2276 (+ x59 x5114)) x4734) (= (mod (* x1404 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4111) (or x453 (and (= (div (mod (- (x4643 x3989) (x4643 x3615)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) x2554) (= (x2276 (+ x59 64)) x4280) (= (x4659 (x747 1) 0) x3989) (or (and (not x2409) (= (> x2140 x608) x2409) x1071 (<= x1835 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x1835) (= x3576 (x4659 (x747 1) 0)) (= (x5126 x4146) x1835) (= (div (mod (- (x4643 x4146) (x4643 x3576)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) x4389) (<= 0 x1835) (= x608 (x2276 (+ x1716 64)))) (not x1071)) (>= x3960 0) (> 1461501637330902918203684832716283019655932542976 x3960) (= (< x4280 x2140) x1071) (= x2149 (mod (* 32 x1404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x453) (= x3615 (x4659 (x747 1) 0)) (= (x307 x3989 1) x4146) (= (x2276 (+ x1716 x2149)) x2140) (>= 1461501637330902918203684832716283019655932542975 x3960) (= x3960 (x5126 x3989))))) x3075)))
(assert (x1672 x935))
(assert (x1672 x32))
(assert (= (and x2386 x73) x4994))
(assert (x1672 x4031))
(assert (= (x747 1054675240) (x3272 1054675240)))
(assert (= (=> (and (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3306) x3409) (= (x2276 (+ x3409 x906)) x3356) (= x3306 (x2276 (+ 31 x377))) (= (or (> x377 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x377 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x377 32))) x3235)) (and (=> (not x3235) x4446) (=> x3235 x4498))) x429))
(assert (x1672 x4833))
(assert (x1672 x4906))
(assert (x1672 x4297))
(assert (x1672 x3208))
(assert (x3419 x4949 x2999))
(assert (= (and x545 (not x2471)) x2179))
(assert (x1672 x3503))
(assert (x1672 x2842))
(assert (x1672 x1113))
(assert (=> (>= 10000 x4697) (= (x747 x4697) (x3272 x4697))))
(assert (x1672 x2043))
(assert (x1672 x2550))
(assert (= (=> (= (= x2817 0) x2317) (and (=> x2317 x4032) (=> (not x2317) x1370))) x1624))
(assert (x963 x3654))
(assert (x4182 x4165))
(assert (x1672 x2503))
(assert (x1672 x548))
(assert (x1672 x2074))
(assert (= (+ 2 (x4643 x3284)) (x4643 (x307 x3284 2))))
(assert (= (=> (= (= x2840 274184521717934524641157099916833587202) x4209) (and (=> (not x4209) x695) (=> x4209 x3201))) x5180))
(assert (x1672 x3731))
(assert (x1672 x4729))
(assert (= x2192 (and x4249 (not x846))))
(assert (= (=> (and (= x4716 (x4708 (x3272 x1634) (x747 2) 0)) (= x107 (x4232 (x3272 x1521))) (= (x1505 1461501637330902918203684832716283019655932542975 x589) x1521) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4727) (>= x4727 0) (= x4727 (x761 x999)) (= x999 (x307 x4716 5)) (= x1634 (x1505 1461501637330902918203684832716283019655932542975 x2411)) (= (= x107 0) x1613)) (and (=> (and (not x1613) (or (and (< x4532 4294967296) x4911 (= x1502 1)) (and (not x4911) (= x1104 x1502))) (= x4911 (> x1104 0))) x680) (=> x1613 x4498))) x2876))
(assert (= (=> (and (= (= 0 x3609) x3637) (= (x3229 128) x3609)) (and (=> (and (not x3637) (= x3637 x4184) (= x3757 x1633)) x4584) (=> x3637 x4289))) x390))
(assert (= (x4643 (x747 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x1672 x317))
(assert (x1672 x1530))
(assert (x1672 x4548))
(assert (x4182 x276))
(assert (x1672 x3405))
(assert (= x1640 (or (and x5253 x1927) (and (not x5297) x4398))))
(assert (= (=> (= (= 274184521717934524641157099916833587206 x4351) x4771) (and (=> (not x4771) x3346) (=> (and (= 1 x2817) (= x3403 x1773) (<= x3426 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1302 0) (<= 0 x3426) (not (> 4 x3403)) (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 x1348) (= x2842 32) (= x3403 4) (= 826074471 x4838) x4771 (= (x4232 (x3272 274184521717934524641157099916833587206)) x1302) (not (< x4838 826074471))) x1624))) x3929))
(assert (= (x4760 x1426) (ite (= x1716 x1426) x3960 (x4431 x1426))))
(assert (x1672 x3869))
(assert (x1672 x3870))
(assert (= x3034 (=> (= (= 274184521717934524641157099916833587206 x2983) x2471) (and (=> (not x2471) x5140) (=> (and (not (> 826074471 x4951)) (not (< x3454 4)) (= x3162 1) (= x31 (x4232 (x3272 274184521717934524641157099916833587206))) (>= x2155 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2155) (< 0 x31) (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 x5021) (= x1626 x3454) (= 4 x3454) (= x218 32) (= x4951 826074471) x2471) x2725)))))
(assert (x4182 x4363))
(assert (x1672 x3566))
(assert (x1672 x4364))
(assert (x963 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1672 x2512))
(assert (= x2807 (=> (and (= (= x5016 0) x4321) (= x4335 (= x2367 0)) (= x5016 (x1505 x4615 x5025)) (= (ite (not x4335) 1 0) x4615) (= (ite (< x5300 x326) 1 0) x5025) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2367) x5300) (= (x529 (- 1000000000000000000 x506)) x618)) (and (=> (not x4321) x4032) (=> x4321 x3018)))))
(assert (= x3044 (=> (and (= x5133 (< 0 x5035)) (= x23 (x1801 x2397)) (= x5035 (x40 x2672))) (and (=> x5133 x3831) (=> (not x5133) x4498)))))
(assert (x1672 x4593))
(assert (x1672 x1769))
(assert (= x1897 (=> (and (= x1740 x1083) (= x3500 x2467)) x1588)))
(assert (x1672 x4993))
(assert (x1672 x1713))
(assert (x1672 x5032))
(assert (= x2257 (and (not x1099) x1047)))
(assert (x1672 x2917))
(assert (= (and x1998 (not x315)) x1509))
(assert (x1672 x2912))
(assert (= (=> (and (= x2943 x1842) (= x895 x4163)) x807) x2547))
(assert (x1672 x4530))
(assert (x1672 x2574))
(assert (= 0 (x3461 x53)))
(assert (= (=> (and (<= x2577 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x105 0) (= x3060 (x2276 (+ 32 x59))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x332) (>= 1461501637330902918203684832716283019655932542975 x105) (= x3849 (x2276 (+ x1158 64))) (= (x307 x3887 2) x10) (= x4302 (x2276 (+ x333 64))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4088) (= (x307 x3887 1) x620) (= x4821 (x1681 x3060)) (= (x2276 (+ 64 x421)) x333) (>= x2577 0) (> 1461501637330902918203684832716283019655932542976 x105) (= (x538 x620) x105) (>= x332 0) (<= 0 x4088) (>= x5296 0) (>= 1461501637330902918203684832716283019655932542975 x5296) (= (x4761 x3317) x4088) (> 1461501637330902918203684832716283019655932542976 x5296) (= (x2276 (+ 192 x421)) x4226) (= x4631 (x307 x3317 2)) (= x2373 (x1753 x4734)) (= x1050 (x3063 x3887)) (= (x1427 x4631) x332) (= (x749 x2891) x2577) (= x3317 (x307 x620 2)) (= x3887 (x4708 (x3272 x577) (x747 2) 0)) (= (x1505 1461501637330902918203684832716283019655932542975 x4821) x577) (<= 0 x1050) (= (x2276 (+ x3849 64)) x1111) (= x5296 (x2540 x10)) (>= 1461501637330902918203684832716283019655932542975 x1050) (> 1461501637330902918203684832716283019655932542976 x1050) (= x1158 (x2276 (+ 32 x421))) (= (< 0 x2373) x2982) (= (x307 x10 2) x2891)) (and (=> (not x2982) x4032) (=> (and (= x2651 (x2391 x59)) (not x4654) (= x5197 (x2276 (+ 32 x4734))) x2982 (= (< 1 x2651) x4654) (= x4226 x1342)) x3614))) x3799))
(assert (= x1195 (=> (= (= x109 0) x640) (and (=> (not x640) x854) (=> x640 x4498)))))
(assert (= 0 (x417 x496)))
(assert (= (x3915 x3394) (ite (= x479 x3394) x408 (x4188 x3394))))
(assert (x1672 x526))
(assert (x1672 x754))
(assert (x1672 x1888))
(assert (x1672 x418))
(assert (x963 x5168))
(assert (= x2637 (=> (and (= x2217 (= 0 x3809)) (= x240 (x2276 (+ 32 x4327))) (= x5163 (x4490 x4242)) (= x3792 (x3695 x240))) (and (=> (and (= x3975 x4948) (= x4230 0) x2217) x2918) (=> (not x2217) x2566)))))
(assert (= x1467 (and x1938 (not x5313))))
(assert (x1814 x2124 x4779))
(assert (x1672 x4189))
(assert (x4182 x4516))
(assert (= x3026 (and x4233 (not x3463))))
(assert (= x1029 (and (not x4771) x5211)))
(assert (x1672 x4537))
(assert (x1672 x3859))
(assert (x4680 x152 x1227))
(assert (x963 x2201))
(assert (x1672 x5165))
(assert (x1672 x264))
(assert (= (x4643 (x3272 x2853)) x2853))
(assert (x4680 x3360 x1806))
(assert (x1672 x2221))
(assert (x1814 x3152 x1529))
(assert (x1672 x3443))
(assert (= x2162 (or (and (not x1164) x1207) (and x461 x4019))))
(assert (x1672 x3978))
(assert (=> (<= x3395 10000) (= (x747 x3395) (x3272 x3395))))
(assert (= x4816 (=> (and (= x3225 (x2276 (+ x4655 x3316))) (= (x4002 x2067) x4945) (= x1569 (x4232 (x3272 x660))) (= x660 (x1505 1461501637330902918203684832716283019655932542975 x4945)) (= x2662 4) (= x2585 (= 0 x1569))) (and (=> x2585 x4032) (=> (not x2585) x609)))))
(assert (= 0 (x4923 x3931)))
(assert (x1672 x3395))
(assert (x4680 x2959 x1371))
(assert (x4182 x1592))
(assert (x1672 x1714))
(assert (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1879 x3187)))
(assert (x1672 x3515))
(assert (x1672 x673))
(assert (= (ite (and x4277 x1825 (not x1383)) (x3204 x2560) (x3910 x2560)) (x4883 x2560)))
(assert (= (and x645 x468) x915))
(assert (= (or x1286 (and x3739 x841)) x5258))
(assert (= (ite (and (not x45) x3219 x397) (x3052 x3208) (x4036 x3208)) (x4900 x3208)))
(assert (=> (<= x1894 10000) (= (x3272 x1894) (x747 x1894))))
(assert (= (x35 x1608) (ite (and (not x793) x4784 x5145) (x1298 x1608) (ite (and (not x1447) x4784 (not x5145) (not x793)) (x525 x1608) (x238 x1608)))))
(assert (= (or (and x1602 (not x4583)) (and x2982 x3536)) x4961))
(assert (= x4295 (=> (and (= (x4232 (x3272 x2983)) x180) (= x3300 (= x180 0)) (= x1626 4) (= x2983 (x1505 1461501637330902918203684832716283019655932542975 x1527)) (= x1527 (x750 x860))) (and (=> x3300 x4498) (=> (not x3300) x3034)))))
(assert (x1672 x734))
(assert (x1672 x3292))
(assert (x1672 x2277))
(assert (= x2158 (=> (and (= (< 0 x4871) x2834) (= (x4459 x4309) x4658) (= x4871 (x1753 x4658))) (and (=> x2834 x1516) (=> (not x2834) x4032)))))
(assert (x1672 x5077))
(assert (x1672 x1188))
(assert (x1672 x550))
(assert (x1672 x337))
(assert (x1672 x4334))
(assert (x1672 x1142))
(assert (x963 x2497))
(assert (x1672 x2509))
(assert (x963 x1806))
(assert (= (=> (and (= x2659 (< 0 x4971)) (= (mod (* x4478 x2493) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4318)) (and (=> (and (= (div x4318 x4971) x4641) (= x4641 x2232) x2659) x3979) (=> (not x2659) x4032))) x2164))
(assert (= (and x1296 x4170) x3823))
(assert (x1672 x2696))
(assert (x963 x4241))
(assert (x1672 x4989))
(assert (= (x4643 (x307 x4716 5)) (+ 5 (x4643 x4716))))
(assert (x1672 x2945))
(assert (x1672 x785))
(assert (x1672 x577))
(assert (=> (>= 10000 x1832) (= (x3272 x1832) (x747 x1832))))
(assert (x963 x2759))
(assert (= (=> (and (= (x40 x3919) x5001) (= (< 0 x5001) x1730) (= x3919 (x554 x4937))) (and (=> (and (not x1730) (= x934 x5)) x828) (=> x1730 x1464))) x4686))
(assert (x1672 x1974))
(assert (x963 x2770))
(assert (x1672 x3778))
(assert (= (=> (and (= x2101 x196) (= x1650 x401)) x49) x1159))
(assert (= (or (and (not x4852) x4540) (and x1468 x3363)) x3845))
(assert (= (and x1029 (not x4181)) x1513))
(assert (and (= 10000000000000000000000 (x641 10 22)) (= 100000000000000000000000000 (x641 10 26)) (= (x641 10 1) 10) (= 100000000 (x641 10 8)) (= (x641 10 13) 10000000000000) (= (x641 10 15) 1000000000000000) (= (x641 10 4) 10000) (= (x641 10 9) 1000000000) (= 1000000000000000000000 (x641 10 21)) (= (x641 10 17) 100000000000000000) (= (x641 10 24) 1000000000000000000000000) (= (x641 10 10) 10000000000) (= 1000000000000000000000000000000 (x641 10 30)) (= 100000000000000000000000 (x641 10 23)) (= (x641 10 0) 1) (= 100000 (x641 10 5)) (= (x641 10 28) 10000000000000000000000000000) (= 1000000000000 (x641 10 12)) (= 100000000000 (x641 10 11)) (= 100000000000000000000000000000 (x641 10 29)) (= 10000000 (x641 10 7)) (= 1000000 (x641 10 6)) (= (x641 10 14) 100000000000000) (= (x641 10 25) 10000000000000000000000000) (= (x641 10 19) 10000000000000000000) (= 1000 (x641 10 3)) (= 1000000000000000000000000000 (x641 10 27)) (= 100 (x641 10 2)) (= (x641 10 18) 1000000000000000000) (= (x641 10 20) 100000000000000000000) (= 10000000000000000 (x641 10 16))))
(assert (x1672 x1004))
(assert (x1672 x1116))
(assert (= (x4431 x3861) 0))
(assert (= x5263 (or (and x3080 x2439) (and x4778 x2558))))
(assert (x1672 x2817))
(assert (x1672 x2569))
(assert (= (and (not x3770) x2667) x1542))
(assert (= (=> (and (= (x2486 x3412) x2623) (= x4738 (= x311 x2623)) (= (x1505 1461501637330902918203684832716283019655932542975 x2623) x311)) (and (=> x4738 x4158) (=> (not x4738) x4032))) x4107))
(assert (= x2829 (and x3886 (not x1885))))
(assert (= x802 (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x355) (and (= true (<= x355 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x355 32))) x226) (= x1041 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2495)) (= (x2276 (+ x1633 x1041)) x303) (= x2495 (x2276 (+ x355 31)))) (and (=> x226 x4032) (=> (not x226) x284)))))
(assert (= x3685 (and (not x316) x4929)))
(assert (x1672 x4082))
(assert (x1672 x4515))
(assert (x1672 x3310))
(assert (x1672 x300))
(assert (x1672 x925))
(assert (x1672 x853))
(assert (x1672 x3577))
(assert (= x433 (and x3350 (not x741))))
(assert (x1672 x5107))
(assert (x1672 x4204))
(assert (x1672 x2339))
(assert (= (=> (and (= (or (and (< x5078 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5078) true)) (> x5078 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3840) (= x2377 (x2276 (+ x953 x2669))) (= x4256 (x2276 (+ x5078 31))) (= x2669 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4256))) (and (=> x3840 x4498) (=> (not x3840) x1330))) x2815))
(assert (= (x4188 x3262) (ite (and x4953 (not x1143) x571) (x256 x3262) (x3290 x3262))))
(assert (= (and x2371 x5310) x4613))
(assert (= (x4643 (x307 x1147 4)) (+ 4 (x4643 x1147))))
(assert (= (x4643 (x3272 x1332)) x1332))
(assert (x1672 x3102))
(assert (= (and x4213 (not x2120)) x1707))
(assert (x1672 x2240))
(assert (x1672 x5138))
(assert (x4680 x2803 x573))
(assert (= x4345 (=> (and (= x908 (> x2961 0)) (= (x40 x2672) x2961)) (and (=> (not x908) x4498) (=> x908 x2734)))))
(assert (x1672 x1132))
(assert (= x617 (=> (and (= (x2276 (+ x1401 x1851)) x192) (= (x2276 (+ 31 x1416)) x523) (= x3045 (or (and (< x1416 32) (= true (<= x1416 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1416 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x523) x1851)) (and (=> (and (= x192 x3648) (not x3045) (= x3111 (x237 x1401)) (= (= 0 x3111) x2567)) x1686) (=> x3045 x4498)))))
(assert (= (and (not x2649) x840) x2036))
(assert (x1672 x303))
(assert (x1672 x83))
(assert (= x5221 (and x4065 (not x2572))))
(assert (= (and x3480 x3444) x5291))
(assert (= (x3272 (x4643 x3989)) x3989))
(assert (x963 x3981))
(assert (x1672 x2493))
(assert (x1672 x5246))
(assert (= (=> (and (= (ite (< x3247 x4908) 1 0) x2770) (= (= x2021 0) x835) (= (x1505 x4713 x2770) x2021) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3572) x3247) (= (= 0 x3572) x1774) (= x4713 (ite (not x1774) 1 0))) (and (=> x835 x2290) (=> (not x835) x4032))) x305))
(assert (x1672 x2737))
(assert (= (=> (and (= x4245 (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2101))) (= x1001 (< x4245 x2747))) (and (=> x1001 x4032) (=> (not x1001) x2219))) x49))
(assert (= (and x3131 x4606) x2230))
(assert (= (and x2548 (not x1493)) x4540))
(assert (= x30 (=> (and (= x4076 x2938) (= x1619 x3390)) x852)))
(assert (x1672 x248))
(assert (x1672 x4163))
(assert (x1672 x1527))
(assert (= x4516 (x4643 (x3272 x4516))))
(assert (x1672 x1266))
(assert (x1672 x1129))
(assert (x1672 x978))
(assert (x1672 x638))
(assert (= (x747 26959946667150639794667015087019630673637144422540572481103610249215) (x3272 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1672 x3568))
(assert (x1672 x1080))
(assert (= (=> (and (= x5170 (x2276 (+ 160 x99))) (= (= x4655 0) x4623) (= x152 (ite (not x4623) 1 0)) (= (= 0 x3612) x918) (= x3612 (x1505 x152 x1227)) (= x4255 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4655)) (= x1227 (ite (> x2014 x4255) 1 0)) (= (x675 x5170) x4655)) (and (=> x918 x2288) (=> (not x918) x4032))) x2102))
(assert (x1672 x5024))
(assert (= x4607 (=> (= x2845 (or (and (= (<= x4548 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4548 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4548))) (and (=> x2845 x4032) (=> (not x2845) x1126)))))
(assert (= (=> (and (= x2207 x2953) (= x5144 x2615)) x3043) x1225))
(assert (x1672 x1267))
(assert (x1672 x608))
(assert (x1672 x87))
(assert (x1672 x254))
(assert (x1672 x4807))
(assert (x1672 x149))
(assert (= 0 (x2169 x721)))
(assert (x2722 x2300 x3085))
(assert (x1672 x2608))
(assert (x963 x5194))
(assert (x1672 x4949))
(assert (x1672 x2749))
(assert (x1672 x2458))
(assert (x1672 x1773))
(assert (=> (>= 10000 x4167) (= (x747 x4167) (x3272 x4167))))
(assert (x1672 x3866))
(assert (x1672 x2018))
(assert (= (ite (and x817 x3916 (not x1635)) (x770 x1852) (x592 x1852)) (x2309 x1852)))
(assert (= (x747 88191208983996609870514743494480291812870855255587790976526977987464101101568) (x3272 88191208983996609870514743494480291812870855255587790976526977987464101101568)))
(assert (= (x4643 (x3272 x4007)) x4007))
(assert (= x2710 (=> (= (= 274184521717934524641157099916833587202 x1089) x3338) (and (=> x3338 x2638) (=> (not x3338) x3659)))))
(assert (x1672 x3071))
(assert (x1672 x4943))
(assert (x1672 x1739))
(assert (x1814 x87 x1385))
(assert (= x4931 (or (and x1422 x2217) x2937)))
(assert (x1672 x195))
(assert (x1672 x5101))
(assert (= (x4760 x2517) (ite (= x1716 x2517) x3960 (x4431 x2517))))
(assert (x1672 x2373))
(assert (x1672 x5225))
(assert (x963 x555))
(assert (x1672 x3459))
(assert (x1672 x3020))
(assert (=> (<= x2515 10000) (= (x3272 x2515) (x747 x2515))))
(assert (x1672 x4323))
(assert (x1672 x1807))
(assert (= x133 (and x5298 x216)))
(assert (= x3642 (=> (and (= (or (and (> 32 x2943) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2943))) (> x2943 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4443) (= (x2276 (+ x4502 x3757)) x2356) (= x4502 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3028)) (= (x2276 (+ x2943 31)) x3028)) (and (=> (and (= (= 0 x4807) x4184) (not x4443) (= x4807 (x4445 x3757)) (= x1633 x2356)) x4584) (=> x4443 x4032)))))
(assert (x1672 x85))
(assert (= x1394 (and x1257 x4665)))
(assert (= x3760 (and (not x613) x5195)))
(assert (x1672 x235))
(assert (x1672 x1411))
(assert (x1672 x3494))
(assert (x4494 x935 x280 x593 x556))
(assert (= x2732 (=> (= (= 0 x5102) x4585) (and (=> (not x4585) x5027) (=> x4585 x4498)))))
(assert (x1672 x2995))
(assert (x1672 x1565))
(assert (x1672 x4958))
(assert (x1672 x2902))
(assert (= (=> (and (= x619 (x3453 x3550)) (= (> x619 0) x5169)) (and (=> (not x5169) x4498) (=> x5169 x354))) x3164))
(assert (= (and x3081 (not x2122)) x1039))
(assert (= (x747 42459404708690159261654315324267577519400883839135586425952143822324095778816) (x3272 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (x1672 x1481))
(assert (x1814 x5163 x2568))
(assert (x963 x1241))
(assert (= x1684 (and (not x140) x4557)))
(assert (x1672 x3894))
(assert (x1672 x1650))
(assert (= (=> (and (= (x1505 1461501637330902918203684832716283019655932542975 x2497) x2325) (= (= x2325 x2497) x1939)) (and (=> (not x1939) x3232) (=> (and (<= x4355 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4355) (= x2020 (x1505 1461501637330902918203684832716283019655932542975 x2954)) (= 32 x2207) (= x2615 1) (= (x4708 (x3272 x2020) (x747 1) 0) x5003) (= x4355 (x3910 x5003)) x1939) x1225))) x3917))
(assert (x1672 x3179))
(assert (= (=> (and (= x2305 (ite (< x1113 x1372) 1 0)) (= (x1505 x4707 x2305) x3992) (= x3158 (= x4496 0)) (= (x2276 (+ x3151 160)) x3089) (= (ite (not x3158) 1 0) x4707) (= (= 0 x3992) x3082) (= x4496 (x275 x3089)) (= x1113 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4496))) (and (=> (not x3082) x4498) (=> x3082 x5305))) x4768))
(assert (= (x2182 x2123) (ite (and (not x2552) x5010 x1100) (x4004 x2123) (ite (and (not x327) (not x2552) (not x5010) x1100) (x3054 x2123) (x4691 x2123)))))
(assert (x1672 x3518))
(assert (= (x1295 x3291) 0))
(assert (x1672 x5220))
(assert (x963 x2550))
(assert (x1672 x4162))
(assert (x1672 x2067))
(assert (x1672 x5102))
(assert (x1672 x4710))
(assert (x1672 x4751))
(assert (x1672 x214))
(assert (x1672 x1463))
(assert (x1672 x4242))
(assert (x1672 x5274))
(assert (= (and (not x2445) x2058) x5248))
(assert (x1672 x1494))
(assert (x1672 x2695))
(assert (x1672 x2743))
(assert (x1672 x2071))
(assert (x1672 x1135))
(assert (x1672 x1826))
(assert (= (=> (and (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5167)) x250) (= (> x4230 x250) x3562)) (and (=> (not x3562) x2704) (=> x3562 x4498))) x4628))
(assert (x1672 x4088))
(assert (=> (>= 10000 x1132) (= (x747 x1132) (x3272 x1132))))
(assert (x1672 x212))
(assert (x1672 x3132))
(assert (x1672 x4336))
(assert (= (x552 x176) 0))
(assert (x1672 x4142))
(assert (= x4498 (=> (= x4394 true) x8)))
(assert (x1672 x2992))
(assert (x1672 x1332))
(assert (= x208 (=> (and (= x3012 x2727) (= x5297 (= x1706 x3012))) (and (=> (not x5297) x4922) (=> (and (= (x4708 (x3272 x3012) (x747 1) 0) x4964) (= x3804 1) (<= 0 x85) (= x85 (x3516 x4964)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x85) x5297 (= x1909 32)) x5095)))))
(assert (= (x4643 (x3272 x3362)) x3362))
(assert (= (+ (x4643 x4716) 2) (x4643 (x307 x4716 2))))
(assert (= x3012 (x4643 (x3272 x3012))))
(assert (x1672 x2350))
(assert (= (and (not x4985) x1445) x2284))
(assert (= (and x4924 (not x3735)) x1776))
(assert (= (x4643 (x3272 x577)) x577))
(assert (x1672 x3868))
(assert (x1672 x3275))
(assert (= 0 (x3461 x2757)))
(assert (x1672 x2186))
(assert (= (x4643 (x747 3248611349834744311580729226515044654865681148386811760331698647898072809472)) 3248611349834744311580729226515044654865681148386811760331698647898072809472))
(assert (= x447 (and x114 x3027)))
(assert (x1672 x710))
(assert (=> (>= 10000 x4516) (= (x3272 x4516) (x747 x4516))))
(assert (= (x552 x3621) 0))
(assert (x1672 x871))
(assert (= x4693 (=> (and (= (x2957 x3222) x4105) (= (x3711 x1438) x1372) (= x3451 (> x4105 0)) (= (x5238 x149) x3222)) (and (=> x3451 x2271) (=> (not x3451) x4498)))))
(assert (x1672 x651))
(assert (x4680 x4713 x2770))
(assert (x1672 x4876))
(assert (x1672 x1061))
(assert (= x454 (and (not x3030) x3736)))
(assert (= (=> (= (= x4047 0) x2076) (and (=> (not x2076) x3014) (=> x2076 x4032))) x4907))
(assert (= (and x2248 (not x3782)) x2633))
(assert (= (and x1403 x4385) x2720))
(assert (x1672 x202))
(assert (x1672 x345))
(assert (x1814 x2449 x4072))
(assert (= x382 (and (not x1421) x511)))
(assert (x1672 x314))
(assert (= (=> (and (= x4741 (< 0 x3000)) (= x3000 (x2391 x78))) (and (=> x4741 x4360) (=> (and (= x5261 x470) (not x4741)) x2150))) x4098))
(assert (x1672 x4633))
(assert (= x1737 (or (and x3853 x462) (and x868 x3552))))
(assert (x1672 x2005))
(assert (= x4073 (=> (= (= x469 0) x116) (and (=> (not x116) x3280) (=> x116 x4032)))))
(assert (= (x4643 (x747 80455309404869098397086765254582893697288411140986131472514049311582516674560)) 80455309404869098397086765254582893697288411140986131472514049311582516674560))
(assert (= x4191 (or x2032 x2706)))
(assert (= x3035 (and (not x474) x1618)))
(assert (x963 x2449))
(assert (x1672 x4512))
(assert (= x4681 (and (not x4362) x773)))
(assert (x1672 x3007))
(assert (x4494 x4256 x245 x1349 x2689))
(assert (= (=> (= x1028 (= x1358 0)) (and (=> (not x1028) x3611) (=> x1028 x4032))) x369))
(assert (= x2534 (x4643 (x3272 x2534))))
(assert (x1672 x233))
(assert (= x674 true))
(assert (x1672 x2726))
(assert (= x3880 x1374))
(assert (x963 x3877))
(assert (x1672 x505))
(assert (= (=> (and (= (x3453 x3550) x1691) (= (< 0 x1691) x289)) (and (=> (and (= x176 (x554 x4937)) (= (x2276 (+ x4242 192)) x5101) x289 (not x730) (= x3187 x4212) (= x730 (> x3503 1)) (= x3503 (x40 x176))) x3354) (=> (not x289) x4498))) x2571))
(assert (= (and (not x4192) x1375) x1181))
(assert (= (=> (and (= x629 1889567281) (= 36 x2016) (= x3242 (x4232 (x3272 274184521717934524641157099916833587206))) (= (x529 (- x2016 4)) x1991) (not (< x2016 4)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1991) (and (> 32 x1991) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1991) true))) x4970) (= x4955 x2016) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1150) (not (> 826074471 x629)) (not (= 826074471 x629)) (< 0 x3242) (= x3863 x811)) (and (=> x4970 x1319) (=> (not x4970) x3693))) x3434))
(assert (x4182 x407))
(assert (x963 x3366))
(assert (x1672 x768))
(assert (x1814 x3981 x3414))
(assert (x1672 x5222))
(assert (= x1346 (=> (= x267 (= x2840 274184521717934524641157099916833587206)) (and (=> (not x267) x5180) (=> x267 x3434)))))
(assert (= (=> (and (= x124 x3839) (= 0 x4530)) x3138) x4493))
(assert (x1672 x2641))
(assert (x1672 x2369))
(assert (= (x3461 x5088) 0))
(assert (x1672 x763))
(assert (= (=> (and (= x4412 (x40 x2672)) (= (< 1 x4412) x4221) (= x2355 x4159) (not x4221)) x1300) x5080))
(assert (= x3043 (=> (= x5037 (= 0 x5144)) (and (=> x5037 x4498) (=> (not x5037) x1843)))))
(assert (x1672 x5096))
(assert (= x4836 (x4643 (x3272 x4836))))
(assert (x963 x1889))
(assert (= (x1154 x3198) (ite (and (not x792) x4919 x3822) (x3441 x3198) (x4567 x3198))))
(assert (x1672 x4663))
(assert (x1672 x3529))
(assert (x1672 x1578))
(assert (x1672 x4404))
(assert (x1672 x71))
(assert (= (x4643 (x3272 x996)) x996))
(assert (x1672 x2795))
(assert (x4494 x4015 x3987 x168 x676))
(assert (x963 x3759))
(assert (x1672 x4267))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4643 (x747 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (and x3667 x3776) x2688))
(assert (= x4764 (or x4485 (and (not x4973) x4994))))
(assert (= x4604 (and x2446 x3451)))
(assert (= x2676 (=> (and (= (> x2319 0) x2833) (= (mod (* x23 x338) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x728)) (and (=> (not x2833) x4498) (=> x2833 x3571)))))
(assert (x1672 x2993))
(assert (x1672 x2064))
(assert (= x621 (=> (and (= (x2276 (+ x4727 x1933)) x2378) (= x4781 (< x1067 x2378))) (and (=> x4781 x4498) (=> (not x4781) x1756)))))
(assert (x1672 x3882))
(assert (x1672 x4305))
(assert (x963 x877))
(assert (x1672 x1059))
(assert (x1672 x1101))
(assert (= (ite (= x968 x2077) x794 (x5030 x968)) (x2866 x968)))
(assert (x4182 x2983))
(assert (x1672 x5115))
(assert (x963 x4439))
(assert (x1672 x542))
(assert (x1672 x3540))
(assert (= (=> (and (= 0 x5278) (= x5022 x3644)) x939) x1038))
(assert (x1672 x2685))
(assert (= 0 (x4004 x2123)))
(assert (= x694 (=> (and (= (x554 x4937) x2735) (= (x2276 (+ x4937 64)) x3690) (= x2756 (= x1074 x791)) (= (x1505 1461501637330902918203684832716283019655932542975 x589) x119) (= 0 x5245) (= x791 (x40 x2735)) (= (x5238 x149) x536) (= (x2957 x536) x1074) (= (x2276 (+ 64 x4242)) x4937) (= x4051 (x2276 (+ 32 x4242))) (= x3550 (x2276 (+ 160 x4242))) (= x149 (x2276 (+ x4051 64)))) (and (=> (not x2756) x4498) (=> x2756 x2505)))))
(assert (x1672 x2635))
(assert (x1672 x3876))
(assert (x1672 x891))
(assert (x1672 x3341))
(assert (= (=> (and (= (x2044 x1633) x4865) (= x1975 (> x4783 x4865))) (and (=> x1975 x4032) (=> (not x1975) x1823))) x284))
(assert (x1814 x996 x5269))
(assert (x1672 x4306))
(assert (x1672 x2905))
(assert (= x2760 (=> (= x357 (< x1455 x4052)) (and (=> (not x357) x1) (=> x357 x1979)))))
(assert (= x2838 (=> (and (<= 0 x4071) (= x2533 (x307 x4501 1)) (= x4071 (x4525 x2533)) (= (x2276 (+ x3447 x258)) x2844) (= x4501 (x4708 (x3272 x4104) (x747 3) 0)) (= x4754 (> x4071 x649)) (<= x4071 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1505 1461501637330902918203684832716283019655932542975 x3495) x4104)) (and (=> x4754 x4032) (=> (not x4754) x5204)))))
(assert (x1672 x2924))
(assert (= x3207 true))
(assert (= (=> (= (= x2580 0) x4185) (and (=> (not x4185) x4618) (=> x4185 x4498))) x1495))
(assert (= (ite x774 (ite x1662 (x4038 128) (x3402 128)) (ite x960 (x4038 128) (x3953 128))) (x3229 128)))
(assert (= (and x3099 (not x171)) x1047))
(assert (= (and x5285 (not x2681)) x645))
(assert (= x1313 (x4643 (x3272 x1313))))
(assert (x1672 x146))
(assert (x4182 x455))
(assert (x1672 x1114))
(assert (x1672 x4276))
(assert (= x4974 (=> (and (= x3097 (x40 x3621)) (= (x1024 x2830) x4829) (= x1993 (< 0 x3097))) (and (=> x1993 x4295) (=> (not x1993) x4498)))))
(assert (= (x2866 x1405) (ite (= x2077 x1405) x794 (x5030 x1405))))
(assert (= (x747 1082367153) (x3272 1082367153)))
(assert (x963 x1847))
(assert (= (=> (and (= x326 (x2965 x409)) (= (x1753 x5151) x490) (= (x4459 x4309) x5151) (= x569 (< 0 x490))) (and (=> (not x569) x4032) (=> x569 x1449))) x2657))
(assert (x1672 x2844))
(assert (x4182 x2020))
(assert (x1672 x764))
(assert (x1672 x1821))
(assert (x1672 x3061))
(assert (x963 x3869))
(assert (x1672 x4697))
(assert (= x4094 (=> (and (= (x2060 x4948) x4748) (= (ite (= x4748 0) (= 0 x4748) (= x5008 0)) x4544)) (and (=> (and (= x2562 0) x4544) x1000) (=> (not x4544) x3136)))))
(assert (x1672 x475))
(assert (= (=> (and (= x1812 x4948) (= x1920 x4230)) x2918) x5244))
(assert (= (=> (and (= (x967 x2171) x2407) (= x2335 (= 0 x5120)) (= x1483 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x95)) (= (ite (not x3801) 1 0) x1541) (= x2952 (ite (> x2407 x1483) 1 0)) (= x3801 (= x95 0)) (= x5120 (x1505 x1541 x2952))) (and (=> (not x2335) x4032) (=> x2335 x4915))) x1126))
(assert (x1672 x1956))
(assert (x1672 x119))
(assert (x1672 x4075))
(assert (= (ite x3169 (ite x141 (x3195 128) (x2527 128)) (ite x3715 (x3195 128) (x3564 128))) (x4343 128)))
(assert (x1672 x3999))
(assert (= (=> (= (= x2080 0) x388) (and (=> x388 x4498) (=> (not x388) x5074))) x2900))
(assert (= (x4643 (x3272 x3315)) x3315))
(assert (x1672 x2482))
(assert (x1672 x3908))
(assert (x1672 x1863))
(assert (x1672 x1303))
(assert (x963 x3036))
(assert (x1672 x1633))
(assert (x1672 x3527))
(assert (x1672 x5170))
(assert (x1672 x334))
(assert (= x1998 (and x752 (not x357))))
(assert (= x2859 (=> (and (= x4265 (x1681 x2517)) (= (x2276 (+ 32 x2215)) x2517) (= x5106 (x102 x3982)) (= x3582 (> x5106 0))) (and (=> x3582 x4853) (=> (not x3582) x4032)))))
(assert (x1814 x4369 x2233))
(assert (= (=> (and (= x3835 (x529 (- x3754 x1552))) (= x2754 (x1856 x3690)) (= (= x3786 0) x4203) (= x214 (x2276 (+ 32 x3222))) (= (x1505 1461501637330902918203684832716283019655932542975 x4876) x4085) (= (x4232 (x3272 x4085)) x3786) (= (x2276 (+ x3151 64)) x3291) (= x4876 (x2225 x3291)) (= x3754 (x2276 (+ 36 x1552))) (= (x3695 x214) x3151) (= (x1505 1461501637330902918203684832716283019655932542975 x2754) x2698) (= x4882 (x2276 (+ 4 x1552)))) (and (=> x4203 x4498) (=> (not x4203) x2600))) x2271))
(assert (x1672 x2026))
(assert (x1672 x2289))
(assert (= (ite (= x1381 x4382) x4729 (x4866 x1381)) (x2092 x1381)))
(assert (x4182 x2277))
(assert (= x888 (and x4640 (not x116))))
(assert (x1672 x3848))
(assert (=> (>= 10000 x1592) (= (x3272 x1592) (x747 x1592))))
(assert (x2083 x2011 x585))
(assert (x1672 x2622))
(assert (= (=> (and (= x2238 (x2276 (+ 32 x1250))) (= x2137 (= x3905 0)) (= x4529 (x2276 (+ x4870 4))) (= x3905 (x4232 (x3272 x5231))) (= (x1505 1461501637330902918203684832716283019655932542975 x5168) x4839) (= x1095 (x2276 (+ x4870 36))) (= (x1505 1461501637330902918203684832716283019655932542975 x3753) x3745) (= x5231 (x1505 1461501637330902918203684832716283019655932542975 x2555)) (= x5168 (x750 x2238))) (and (=> x2137 x4498) (=> (and (or (and (= x5102 x2452) (not x3103)) (and (= x5102 1) x3103 (> 4294967296 x2687))) (= x3103 (> x2452 0)) (not x2137)) x2732))) x3865))
(assert (x1672 x916))
(assert (x1672 x1705))
(assert (= (x1985 x3412) 42459404708690159261654315324267577519400883839135586425952143822324095778816))
(assert (= (and (not x5253) x1927) x4398))
(assert (= true x650))
(assert (= (and (not x821) x1915) x1304))
(assert (x1055 x3999 x4383))
(assert (= (=> (and (= x736 (> x3731 0)) (= x4350 (x5091 x5261)) (= (x2391 x78) x3731)) (and (=> x736 x3321) (=> (not x736) x4032))) x4562))
(assert (= (x2614 x4407) 0))
(assert (= (x3272 18446744073709551615) (x747 18446744073709551615)))
(assert (= x4935 (=> (and (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x980) x5188) (= (x2276 (+ x2377 x5188)) x3975) (= (or (and (= (<= x1376 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1376)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1376)) x2406) (= (x2276 (+ 31 x1376)) x980)) (and (=> x2406 x4498) (=> (not x2406) x3288)))))
(assert (x963 x3677))
(assert (x1672 x4920))
(assert (= x2548 x4764))
(assert (x1672 x424))
(assert (x1672 x1990))
(assert (= x3263 (and x829 (not x267))))
(assert (x1672 x3754))
(assert (= x3281 (or (and x645 (not x468)) x5263)))
(assert (x963 x1347))
(assert (x1672 x3040))
(assert (x1672 x2227))
(assert (= (x1584 x16) (ite (= x16 x984) x2646 (x4883 x16))))
(assert (x1672 x5175))
(assert (x1672 x1183))
(assert (= (and (not x3579) x576) x656))
(assert (x1672 x549))
(assert (x1672 x2417))
(assert (x963 x2512))
(assert (x1672 x2975))
(assert (x1672 x3984))
(assert (= x44 (=> (= (= 274184521717934524641157099916833587206 x276) x4421) (and (=> (not x4421) x1816) (=> (and (< 0 x4868) (= 4 x3170) (= x377 32) (= x5082 x3170) (not (> 4 x3170)) (<= 0 x2155) (not (> 826074471 x4341)) (= x4341 826074471) (= (x4232 (x3272 274184521717934524641157099916833587206)) x4868) (= x1508 22270923681254677845691103109158760375340177724800803888364822332811285364736) (= x4323 1) x4421 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2155)) x2563)))))
(assert (= (and x4772 (not x1582)) x359))
(assert (= (=> (and (= x257 (> x1215 0)) (= (mod (* x4049 x3809) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4001)) (and (=> (and x257 (= x1528 x1920) (= (div x4001 x1215) x1528)) x5244) (=> (not x257) x4498))) x412))
(assert (x1672 x612))
(assert (= (and x293 (not x2578)) x2446))
(assert (= (and (not x3072) x3035) x2451))
(assert (= x5140 (=> (= (= 274184521717934524641157099916833587202 x2983) x3699) (and (=> (not x3699) x2570) (=> (and (<= x3019 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x218 32) (= x1966 x1626) (= x2948 22270923681254677845691103109158760375340177724800803888364822332811285364736) (>= x3019 0) (= x1966 4) (not (< x1966 4)) x3699 (not (> 826074471 x748)) (= (x4232 (x3272 274184521717934524641157099916833587202)) x632) (< 0 x632) (= x748 826074471) (= x3162 1)) x2725)))))
(assert (= x3902 (or (and x4747 x1388) (and x4435 x4666) (and x1474 x1538) (and x3554 x3534))))
(assert (=> (>= 10000 x1837) (= (x747 x1837) (x3272 x1837))))
(assert (x1672 x1853))
(assert (= x1973 (=> (= x4156 (= x4085 274184521717934524641157099916833587202)) (and (=> (not x4156) x3207) (=> x4156 x3945)))))
(assert (= (and x1284 (not x2729)) x2337))
(assert (= (or (and x1664 (not x4078)) (and x2434 x3475)) x219))
(assert (x1672 x4976))
(assert (x1672 x5006))
(assert (= x3619 (=> (= (= 274184521717934524641157099916833587202 x175) x1457) (and (=> x1457 x4749) (=> (not x1457) x674)))))
(assert (= x4927 (=> (and (= x4912 (x4232 (x3272 x3950))) (<= 0 x3950) (= x2597 (x307 x5242 1)) (= x3907 (x1505 1461501637330902918203684832716283019655932542975 x2411)) (= x1063 (x529 (- x3788 x1401))) (= (x4708 (x3272 x3907) (x747 2) 0) x5242) (= x3788 (x2276 (+ 36 x1401))) (= (x2276 (+ 132 x1479)) x3684) (> 1461501637330902918203684832716283019655932542976 x3950) (<= x3950 1461501637330902918203684832716283019655932542975) (= (= x4912 0) x4934) (= x3950 (x538 x2597))) (and (=> x4934 x4498) (=> (not x4934) x1940)))))
(assert (= (x4431 x3060) 0))
(assert (x1672 x3641))
(assert (x1672 x3121))
(assert (x963 x4793))
(assert (= (=> (and (= (x1972 x2355) x710) (= (< 0 x710) x129) (= x3102 (x2276 (+ x5167 x4230)))) (and (=> (not x129) x4498) (=> (and (= x1016 (x2276 (+ x2355 32))) x129 (= x3305 x4195)) x450))) x2704))
(assert (x963 x1294))
(assert (=> (<= x117 10000) (= (x747 x117) (x3272 x117))))
(assert (= (=> (and (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3847) x978) (= (x2276 (+ x978 x3648)) x813) (= x3847 (x2276 (+ x3882 31))) (= x4400 (or (and (> 32 x3882) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3882))) (> x3882 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> x4400 x4498) (=> (not x4400) x1068))) x1484))
(assert (x1672 x1238))
(assert (x1672 x5065))
(assert (x963 x3326))
(assert (= (x747 157198259) (x3272 157198259)))
(assert (= x1206 (and x927 (not x1736))))
(assert (x1672 x5311))
(assert (x963 x27))
(assert (x1672 x1174))
(assert (x1672 x4520))
(assert (= (=> (and (= (x2276 (+ x2341 4)) x4168) (= x1325 (= x1188 0)) (= x1188 (x4232 (x3272 x4201))) (= (x1505 1461501637330902918203684832716283019655932542975 x67) x94) (= (x2276 (+ 36 x2341)) x4415) (= (x1505 1461501637330902918203684832716283019655932542975 x2551) x4201) (= x1426 (x2276 (+ 32 x5088))) (= (x1505 1461501637330902918203684832716283019655932542975 x351) x4196) (= x67 (x1681 x1426))) (and (=> x1325 x4032) (=> (and (or (and (not x1682) (= x1183 x3924)) (and x1682 (= x3924 1) (> 4294967296 x1023))) (= (< 0 x1183) x1682) (not x1325)) x614))) x2951))
(assert (x963 x3127))
(assert (= (=> (and (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5110) x334) (= (or (> x1884 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1884) true) (< x1884 32))) x1582) (= x5110 (x2276 (+ 31 x1884))) (= x1333 (x2276 (+ x334 x1552)))) (and (=> (not x1582) x4272) (=> x1582 x4498))) x1899))
(assert (x1672 x434))
(assert (x1672 x3143))
(assert (= x643 (=> (and (= (= 0 x5054) x4250) (= (x2276 (+ x2355 32)) x2165) (= (x3206 x2165) x5054)) (and (=> (not x4250) x4550) (=> (and x4250 (= x2830 x3749)) x672)))))
(assert (= x4039 (and (not x1975) x4497)))
(assert (=> (<= x1048 10000) (= (x747 x1048) (x3272 x1048))))
(assert (x1672 x222))
(assert (x1672 x5280))
(assert (= (=> (and (= x3004 (x2267 x3208)) (= x2173 (x2276 (+ 36 x1021))) (= x4880 (x1505 1461501637330902918203684832716283019655932542975 x877)) (= x4248 (x2276 (+ x1021 4))) (= x4262 (x1505 1461501637330902918203684832716283019655932542975 x3941)) (= (x1505 1461501637330902918203684832716283019655932542975 x757) x1501) (= (= 0 x1412) x3737) (= (x4232 (x3272 x1501)) x1412) (= x3208 (x2276 (+ 32 x5)))) (and (=> x3737 x4498) (=> (and (or (and (> 4294967296 x5124) (= x2580 1) x682) (and (= x4283 x2580) (not x682))) (= x682 (< 0 x4283)) (not x3737)) x1495))) x4510))
(assert (x1672 x5208))
(assert (x1672 x5252))
(assert (= x1414 (x3272 (x4643 x1414))))
(assert (x1672 x3029))
(assert (x1672 x2378))
(assert (= x1867 (=> (and (= x4971 (x4211 x400)) (= (ite (= 0 x4971) (= x4971 0) (= x4478 0)) x3051)) (and (=> (not x3051) x4555) (=> (and x3051 (= 0 x2232)) x3979)))))
(assert (x1672 x2325))
(assert (x1672 x3251))
(assert (= x1738 (=> (and (= (x789 x3973) x2493) (= (x4459 x4309) x2861) (= x722 (x1753 x2861)) (= (< 0 x722) x2582)) (and (=> x2582 x2719) (=> (not x2582) x4032)))))
(assert (=> (>= 10000 x2201) (= (x747 x2201) (x3272 x2201))))
(assert (x1672 x2658))
(assert (x1672 x2003))
(assert (x1814 x5228 x4752))
(assert (x1672 x1501))
(assert (= (=> (and (= x3377 (x2276 (+ x1933 x2107))) (= (ite (= x763 0) (= x763 0) (= x4727 0)) x1099)) (and (=> (not x1099) x1761) (=> (and (= x3377 x2240) x1099) x2245))) x2956))
(assert (= (ite (and x3219 (not x45) x397) (x3052 x904) (x4036 x904)) (x4900 x904)))
(assert (= (x4643 (x307 x3989 1)) (+ 1 (x4643 x3989))))
(assert (x1672 x1596))
(assert (x963 x2279))
(assert (x1672 x1348))
(assert (x1672 x1347))
(assert (x1814 x1853 x4801))
(assert (x1672 x4897))
(assert (x1672 x3008))
(assert (= (=> (and (= x2458 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2696)) (= (x2276 (+ 31 x3758)) x2696) (= x4337 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3758) true) (> 32 x3758)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3758))) (= (x2276 (+ x2458 x5097)) x3121)) (and (=> x4337 x4032) (=> (not x4337) x3205))) x1754))
(assert (= (x3461 x78) 0))
(assert (= (=> (and (= (x2391 x2215) x3217) (= x4616 (> x3217 0))) (and (=> (and (= 0 x1567) (not x4616)) x4620) (=> x4616 x2750))) x669))
(assert (x1672 x3436))
(assert (= x1588 (=> (= (= x1740 0) x474) (and (=> (not x474) x3497) (=> x474 x4032)))))
(assert (= 0 (x3461 x2215)))
(assert (= (and x4695 x3196) x2586))
(assert (x1672 x4569))
(assert (= x3844 (=> (and (= (ite (not x1978) 1 0) x2279) (= (x1505 x2279 x1889) x3040) (= x1978 (= x971 0)) (= x1889 (ite (< x2992 x4350) 1 0)) (= (= 0 x3040) x4026) (= x2992 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x971))) (and (=> (not x4026) x4032) (=> x4026 x3873)))))
(assert (x963 x1545))
(assert (= (and x4738 x3026) x4605))
(assert (x1672 x3279))
(assert (x1672 x624))
(assert (= (or x3715 (and x2110 x836)) x3623))
(assert (x1672 x2149))
(assert (x1672 x309))
(assert (x1672 x2087))
(assert (x1672 x1063))
(assert (= (=> (= x4097 (= x4151 0)) (and (=> (not x4097) x2815) (=> x4097 x4498))) x3617))
(assert (= (=> (and (= (x3535 x1333) x2766) (= x2729 (ite (= x2766 0) (= x2766 0) (= x622 0)))) (and (=> (and (= x360 0) x2729) x2048) (=> (not x2729) x4238))) x93))
(assert (x1672 x3644))
(assert (= (x4643 (x307 x5242 1)) (+ (x4643 x5242) 1)))
(assert (x1672 x971))
(assert (x1672 x2826))
(assert (= (=> (= x1264 (= x3162 0)) (and (=> x1264 x4498) (=> (not x1264) x3332))) x2725))
(assert (= x3478 (or (and x1428 x4150) (and x1039 x2978))))
(assert (x1672 x4064))
(assert (= 274184521717934524641157099916833587206 (x4643 (x747 274184521717934524641157099916833587206))))
(assert (x963 x467))
(assert (x1672 x3334))
(assert (=> (<= x2752 10000) (= (x747 x2752) (x3272 x2752))))
(assert (x1672 x2766))
(assert (x1672 x4702))
(assert (x1672 x1928))
(assert (= (or x3325 x3473) x2928))
(assert (x1672 x4244))
(assert (= (and x2297 (not x3253)) x922))
(assert (x963 x1170))
(assert (= (x4643 (x307 x620 2)) (+ 2 (x4643 x620))))
(assert (=> (>= 10000 x3548) (= (x3272 x3548) (x747 x3548))))
(assert (= x557 (x4643 (x3272 x557))))
(assert (x1672 x467))
(assert (x1672 x2123))
(assert (= (and (not x286) x1514) x4243))
(assert (x1672 x4051))
(assert (x1672 x234))
(assert (x1672 x4055))
(assert (= (and x2463 x3900) x461))
(assert (= x663 (=> (and (= x195 0) (= x5017 x4055)) x2046)))
(assert (= x2703 (=> (and (= x2863 (x1443 x1608)) (= x1608 (x3695 x3931)) (= (x2276 (+ x437 32)) x3931) (= (x2276 (+ 36 x934)) x285) (= x4955 (x529 (- x285 x934))) (= x1704 (x4232 (x3272 x2840))) (= (= x1704 0) x1396) (= x2553 (x2276 (+ x934 4))) (= x2840 (x1505 1461501637330902918203684832716283019655932542975 x2863)) (= (x1856 x3690) x2387) (= (x1505 1461501637330902918203684832716283019655932542975 x2387) x811)) (and (=> (not x1396) x1346) (=> x1396 x4498)))))
(assert (= (=> (= x1903 (= x4089 0)) (and (=> (not x1903) x4358) (=> x1903 x4032))) x4981))
(assert (= x4849 (=> (and (= (< 0 x232) x379) (= (x2391 x3881) x232)) (and (=> (and (not x379) (= x2171 x5018)) x4925) (=> x379 x1321)))))
(assert (= (or (and x158 x3387) x1380) x4315))
(assert (= (and (not x3816) x2688) x3597))
(assert (= x2110 (and x1712 (not x5105))))
(assert (= x1979 (=> (and (= 0 x1392) (= x177 x739)) x1629)))
(assert (x1672 x112))
(assert (x1672 x557))
(assert (= (x4643 (x3272 x1254)) x1254))
(assert (x963 x2160))
(assert (= (and x4605 x5288) x4799))
(assert (= (x3741 x3707) 0))
(assert (= (x4643 (x747 274184521717934524641157099916833587202)) 274184521717934524641157099916833587202))
(assert (x4182 x1734))
(assert (x963 x2012))
(assert (x1672 x2363))
(assert (x1672 x420))
(assert (x963 x4369))
(assert (x1672 x163))
(assert (x1672 x1917))
(assert (= x3197 (and (not x5206) x4500)))
(assert (x1672 x172))
(assert (x4680 x4241 x3677))
(assert (x1672 x4262))
(assert (x1672 x3147))
(assert (x1672 x5109))
(assert (x1672 x3907))
(assert (= x2904 (=> (and (= (x4708 (x3272 274184521717934524641157099916833587231) (x747 1) 0) x3011) (= (> x2360 x1455) x1857) (>= x1455 0) (= x404 274184521717934524641157099916833587231) (= x4052 x3261) (= (x5030 x3011) x1455) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1455)) (and (=> x1857 x1979) (=> (not x1857) x2760)))))
(assert (x4494 x2786 x1935 x3149 x2408))
(assert (= x937 (or (and x1755 x2053) (and x4027 x2466))))
(assert (x1672 x2183))
(assert (x1672 x878))
(assert (x1672 x2501))
(assert (x4182 x557))
(assert (= (x2614 x1363) 0))
(assert (= x1732 (=> (and (= 0 x2938) (= x2929 x1619)) x30)))
(assert (x1672 x2498))
(assert (= x3618 (or (and x4479 (not x1549)) (and (not x1639) x725) (and (not x3519) x5207))))
(assert (x1672 x2605))
(assert (= x3571 (=> (and (= (x3966 x2292) x3906) (= (> x3906 0) x2466) (= (div x728 x2319) x4608)) (and (=> (not x2466) x4498) (=> (and (= x2713 (x2276 (+ x2292 32))) x2466 (= x3356 x4159)) x5080)))))
(assert (x1672 x625))
(assert (x1672 x1235))
(assert (= (x4923 x63) 0))
(assert (x1672 x2099))
(assert (= 274184521717934524641157099916833587231 (x4643 (x3272 274184521717934524641157099916833587231))))
(assert (= x3559 (=> (= (< x1399 x891) x2261) (and (=> (and (= false x4394) (not x2261)) x8) (=> x2261 x4498)))))
(assert (x1672 x500))
(assert (x1672 x4740))
(assert (= (and x527 (not x3300)) x545))
(assert (= 0 (x1911 (- x2731 x1811))))
(assert (= x322 (or (and x3467 x4020) (and x3685 x4421))))
(assert (=> (<= x3012 10000) (= (x3272 x3012) (x747 x3012))))
(assert (x1814 x4129 x2971))
(assert (x1672 x5088))
(assert (= (and x24 x553) x970))
(assert (x1672 x3377))
(assert (= (x3272 274184521717934524641157099916833587206) (x747 274184521717934524641157099916833587206)))
(assert (x1672 x2132))
(assert (= x3813 (and x1304 (not x1613))))
(assert (= x4425 (=> (and (= (< 18446744073709551615 x3437) x2681) (= x3437 (x2391 x5187)) (= x5187 (x3231 x1007))) (and (=> (and (= x2372 (= x3437 0)) (= x3973 (x2276 (+ x4384 x470))) (= (mod (* 32 x3437) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4997) (not x2681) (= x4384 (x2276 (+ x4997 32))) (or x2372 (and (= x363 (x2276 (+ 32 x470))) (not x2372) (= (mod (* 32 x3437) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3682)))) x5182) (=> x2681 x4032)))))
(assert (x1814 x3941 x2200))
(assert (x1672 x3361))
(assert (= (=> (and (= x3181 (x2606 x5097)) (= x2981 (ite (= x3181 0) (= x3181 0) (= 0 x3225)))) (and (=> (not x2981) x568) (=> (and x2981 (= x3278 0)) x772))) x3205))
(assert (x4494 x3306 x2352 x3246 x1830))
(assert (= (=> (and (= (x40 x2672) x1659) (= x253 (= x1659 x4724)) (= x2672 (x554 x4937)) (= (x3453 x3550) x4724)) (and (=> x253 x979) (=> (not x253) x4498))) x5203))
(assert (x1672 x1140))
(assert (= (=> (and (= x1604 (> x1947 x1067)) (= (x2276 (+ x2107 x2378)) x1369) (= x1947 (x4525 x4688)) (>= x1947 0) (= (x307 x2862 1) x4688) (= (x4708 (x3272 x1795) (x747 3) 0) x2862) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1947) (= x1795 (x1505 1461501637330902918203684832716283019655932542975 x2411))) (and (=> x1604 x4498) (=> (not x1604) x3959))) x1756))
(assert (x1672 x1261))
(assert (x1672 x717))
(assert (= (x2614 x2480) 0))
(assert (x1672 x1199))
(assert (x1672 x4484))
(assert (= (x444 x4119) 0))
(assert (x1672 x1920))
(assert (x4494 x555 x2144 x4037 x3398))
(assert (= (ite (and x4784 (not x793) x5145) (x1341 x4403) (ite (and (not x793) (not x1447) x4784 (not x5145)) (x2850 x4403) (x484 x4403))) (x1968 x4403)))
(assert (= (x4219 x222) (ite x2488 (ite x2800 (x3493 x222) (x396 x222)) (ite x1380 (x3493 x222) (x5312 x222)))))
(assert (x4182 x1313))
(assert (x1672 x5235))
(assert (= (and x3118 x3728) x919))
(assert (x1672 x5215))
(assert (x1672 x3793))
(assert (x1672 x4054))
(assert (= (and x639 x3161) x4881))
(assert (x1672 x4769))
(assert (= x2174 (=> (and (= x3196 (< 0 x2444)) (= (x1972 x2355) x2444)) (and (=> x3196 x643) (=> (not x3196) x4498)))))
(assert (= (=> (and (= x657 (x1681 x1408)) (= x3289 (x4232 (x3272 x2623))) (= x2251 (= 0 x3289)) (= (x2276 (+ x78 32)) x1408) (= (x2276 (+ x5261 4)) x3452) (= x3601 (x1505 1461501637330902918203684832716283019655932542975 x657))) (and (=> (and (= x2746 (< 0 x2172)) (or (and (< x3974 4294967296) x2746 (= 1 x3047)) (and (= x3047 x2172) (not x2746))) (not x2251)) x1988) (=> x2251 x4032))) x3200))
(assert (x1672 x2654))
(assert (x1672 x2124))
(assert (x1672 x1165))
(assert (x1672 x2661))
(assert (x1672 x3968))
(assert (x1672 x2790))
(assert (x1672 x1234))
(assert (= x1944 (=> (and (= x624 68) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1990) (and (> 64 x1990) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1990)))) x2702) (not (< x756 826074471)) (= (x4232 (x3272 274184521717934524641157099916833587202)) x3577) (= x1003 x1545) (< 0 x3577) (not (= 826074471 x756)) (not (< x624 4)) (= x2360 x549) (not (= 2514000705 x756)) (= 2835717307 x756) (= x5024 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x529 (- x624 4)) x1990) (= x624 x4735) (not (= 1889567281 x756))) (and (=> (not x2702) x3177) (=> x2702 x34)))))
(assert (x1672 x3420))
(assert (x1672 x3403))
(assert (x1672 x1771))
(assert (x1672 x3223))
(assert (= (x4391 x721) (ite (= x1697 x721) x4578 (x2169 x721))))
(assert (= (x35 x3792) (ite (and x4784 (not x793) x5145) (x1298 x3792) (ite (and (not x1447) (not x793) x4784 (not x5145)) (x525 x3792) (x238 x3792)))))
(assert (= (and x1654 x4156) x4966))
(assert (x1672 x1890))
(assert (x1672 x2943))
(assert (x1672 x1043))
(assert (= x3100 (=> (and (= (x2276 (+ x4123 x2875)) x1460) (= (< x1460 x2875) x3965)) (and (=> (and (= (x1505 1461501637330902918203684832716283019655932542975 x4129) x2668) (not x3965) (= (x4708 (x3272 x2668) (x747 1) 0) x4014) (= x4055 32) (= x1989 x1739) (= x195 1)) x2046) (=> x3965 x663)))))
(assert (x1672 x2830))
(assert (= (x4643 (x3272 x1795)) x1795))
(assert (x1672 x1026))
(assert (x4182 x4836))
(assert (= (x747 1684360437) (x3272 1684360437)))
(assert (x1672 x4980))
(assert (x1672 x4608))
(assert (x1672 x3187))
(assert (= (x4643 (x747 1000000000000000000)) 1000000000000000000))
(assert (x1672 x3972))
(assert (= (and x753 x41) x1554))
(assert (= x1060 (=> (and (= (x4232 (x3272 x4167)) x3436) (= (x1505 1461501637330902918203684832716283019655932542975 x2709) x4167) (= (x2276 (+ 32 x4835)) x63) (= (x529 (- x4108 x5208)) x410) (= (x1856 x3690) x4404) (= (x2276 (+ 32 x4344)) x588) (= (x2276 (+ x5208 4)) x3996) (= x2709 (x2950 x588)) (= (x1505 1461501637330902918203684832716283019655932542975 x4404) x1706) (= (x3695 x63) x4344) (= (x2276 (+ x5208 36)) x4108) (= x4841 (= x3436 0))) (and (=> (not x4841) x2125) (=> x4841 x4498)))))
(assert (= (=> (and (= (= 0 x3501) x140) (= (x2276 (+ x3792 128)) x4403) (= (x2950 x4993) x1853) (= x5008 (x1763 x4403)) (= x3501 (x4232 (x3272 x455))) (= x229 4) (= (x1505 1461501637330902918203684832716283019655932542975 x1853) x455) (= (x2276 (+ 32 x3792)) x4993)) (and (=> (not x140) x4813) (=> x140 x4498))) x299))
(assert (= (+ 2 (x4643 x3317)) (x4643 (x307 x3317 2))))
(assert (x1672 x3967))
(assert (= (x4431 x1426) 0))
(assert (x1672 x2467))
(assert (= x1539 (and x2724 (not x1784))))
(assert (x1672 x483))
(assert (= (ite (and x1825 x4277 (not x1383)) (x3204 x84) (x3910 x84)) (x4883 x84)))
(assert (= (x3658 x1480) (ite (= x1480 x2375) 0 (x4505 x1480))))
(assert (x1672 x1884))
(assert (= 3248611349834744311580729226515044654865681148386811760331698647898072809472 (x4634 x303)))
(assert (= (x1292 x214) (ite (= x214 x1713) x1680 (x4923 x214))))
(assert (x1672 x3108))
(assert (= x5029 (or x5240 (and x969 x3679))))
(assert (x1814 x3877 x1123))
(assert (=> (<= x1600 10000) (= (x747 x1600) (x3272 x1600))))
(assert (= (or x2771 x774) x4091))
(assert (x1672 x4563))
(assert (x1672 x3285))
(assert (x1672 x1344))
(assert (x1814 x5121 x4572))
(assert (= x4500 (and (not x321) x5303)))
(assert (x1672 x4614))
(assert (x1672 x1909))
(assert (x1672 x4202))
(assert (= x1664 (and (not x3475) x2434)))
(assert (= x2988 (=> (and (<= 0 x1322) (= 274184521717934524641157099916833587231 x3779) (= (> x2117 x1322) x3796) (= x84 (x4708 (x3272 274184521717934524641157099916833587231) (x747 1) 0)) (<= x1322 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x318 x3547) (= (x4883 x84) x1322)) (and (=> x3796 x989) (=> (not x3796) x1537)))))
(assert (= x4357 (=> (and (= (x750 x721) x3275) (= x4109 (x4232 (x3272 x4672))) (= x1858 (x2276 (+ 36 x953))) (= (x1505 1461501637330902918203684832716283019655932542975 x3275) x3439) (= x4672 (x1505 1461501637330902918203684832716283019655932542975 x3869)) (= (x1505 1461501637330902918203684832716283019655932542975 x3981) x2416) (= x721 (x2276 (+ x1430 32))) (= x1283 (x2276 (+ 4 x953))) (= x5060 (= 0 x4109))) (and (=> x5060 x4498) (=> (and (= (> x1364 0) x4060) (not x5060) (or (and x4060 (= x4151 1) (> 4294967296 x5078)) (and (= x4151 x1364) (not x4060)))) x3617)))))
(assert (x4182 x5315))
(assert (x1672 x258))
(assert (= (=> (and (= x3750 (< 0 x2717)) (= x971 (x2919 x169))) (and (=> x3750 x1354) (=> (and (not x3750) (= 1 x870)) x3844))) x3726))
(assert (= (and x1186 (not x4585)) x4910))
(assert (= (x4643 (x747 42459404708690159261654315324267577519400883839135586425952143822324095778816)) 42459404708690159261654315324267577519400883839135586425952143822324095778816))
(assert (x1672 x3922))
(assert (= 0 (x1298 x1608)))
(assert (x1672 x2238))
(assert (x1672 x3834))
(assert (= (x2486 x3412) (ite (and x594 (not x4987) x2962) (x4982 x3412) (x1985 x3412))))
(assert (= x4588 (and x787 x4210)))
(assert (x1672 x2368))
(assert (= x2246 true))
(assert (= (+ (x4643 x2812) 2) (x4643 (x307 x2812 2))))
(assert (= x3700 (=> (= (= x4516 274184521717934524641157099916833587206) x4362) (and (=> (not x4362) x3050) (=> x4362 x1929)))))
(assert (x963 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1672 x4552))
(assert (x1672 x1642))
(assert (x1672 x4011))
(assert (=> (>= 10000 x5089) (= (x747 x5089) (x3272 x5089))))
(assert (= (and x2464 (not x2487)) x4475))
(assert (x1672 x3899))
(assert (x1672 x1035))
(assert (= x903 (or (and x4523 x213) (and x2879 (not x746)))))
(assert (x1672 x1782))
(assert (x1672 x1796))
(assert (= (x679 x2341) (ite (= x2341 x4415) x94 (x1310 x2341))))
(assert (x1672 x2869))
(assert (= x1500 (and (not x1028) x2928)))
(assert (x1672 x3423))
(assert (x1672 x3992))
(assert (x4182 x4722))
(assert (x4182 x5009))
(assert (x1672 x2983))
(assert (= 0 (x2955 x3909)))
(assert (x963 x384))
(assert (= (and x1131 x2628) x4857))
(assert (x1672 x4828))
(assert (x1672 x1688))
(assert (= x3588 (and x5056 x1576)))
(assert (x1672 x1175))
(assert (= (=> (and (= (x2276 (+ 31 x2007)) x221) (= x485 (x2276 (+ x2830 x310))) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x221) x310) (= (or (and (< x2007 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2007))) (> x2007 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4626)) (and (=> x4626 x4498) (=> (not x4626) x4974))) x4736))
(assert (= x718 (=> (and (= (> x689 0) x3130) (= x4050 (div x1114 x870)) (= (x2691 x3638) x689)) (and (=> (not x3130) x4032) (=> (and x3130 (= (x2276 (+ 32 x3638)) x887) (= x1546 x1749)) x3422)))))
(assert (x1672 x5251))
(assert (x1672 x4044))
(assert (= x4722 (x4643 (x3272 x4722))))
(assert (= (and x516 (not x3343)) x4986))
(assert (= x3264 (and (not x2595) x4199)))
(assert (x1672 x4212))
(assert (= x2781 (x4643 (x3272 x2781))))
(assert (= x2970 (or (and (not x4489) x115) (and x2618 x447))))
(assert (x963 x1905))
(assert (x1672 x3019))
(assert (= (=> (and (= (x1505 1461501637330902918203684832716283019655932542975 x4369) x5089) (= (= 0 x160) x3735) (= 4 x3524) (= (x1681 x1408) x4369) (= (x4232 (x3272 x5089)) x160)) (and (=> x3735 x4032) (=> (not x3735) x4426))) x3321))
(assert (= 2835717307 (x4643 (x747 2835717307))))
(assert (= (x269 x539) (ite (= x381 x539) x1101 (x2138 x539))))
(assert (x1672 x2938))
(assert (= x2301 (and x2556 (not x4609))))
(assert (x1672 x4287))
(assert (x4182 x3870))
(assert (x1672 x3357))
(assert (= x1049 (and x2647 (not x4781))))
(assert (x1672 x2407))
(assert (= x3227 (=> (and (= x409 (x2276 (+ x1381 x1043))) (= (x2276 (+ 31 x5065)) x2187) (= x1043 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2187)) (= (or (and (< x5065 32) (= true (<= x5065 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5065)) x3298)) (and (=> (not x3298) x1351) (=> x3298 x4032)))))
(assert (= (=> (and (= x1215 (x1693 x3482)) (= x174 (ite (= x1215 0) (= x1215 0) (= x4049 0)))) (and (=> (and (= 0 x1920) x174) x5244) (=> (not x174) x1921))) x897))
(assert (= (x3692 x2011 1) (div x2011 2)))
(assert (x1672 x3237))
(assert (= (=> (and (= (x1753 x3223) x163) (= x3223 (x4459 x4309)) (= x2014 (x2941 x1359)) (= (> x163 0) x5050)) (and (=> x5050 x3575) (=> (not x5050) x4032))) x3507))
(assert (= x927 (and x4745 x4696)))
(assert (= (=> (= x5081 (= x995 0)) (and (=> x5081 x4498) (=> (not x5081) x1899))) x4800))
(assert (x1672 x2411))
(assert (= (x5030 x3011) (ite (and x4953 x571 (not x1143)) (x1702 x3011) (x3910 x3011))))
(assert (x1672 x4134))
(assert (x1672 x3501))
(assert (= x2218 (=> (and (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3366) x955) (= (x2276 (+ x3390 31)) x3366) (= (x2276 (+ x3973 x955)) x222) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3390) (and (= (<= x3390 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x3390))) x4895)) (and (=> x4895 x4032) (=> (not x4895) x1738)))))
(assert (x1672 x472))
(assert (x1672 x4045))
(assert (x1672 x3638))
(assert (= (x1420 x3973) (ite (= x909 x3973) x223 (x374 x3973))))
(assert (x1672 x4795))
(assert (x1672 x1309))
(assert (= x1900 (=> (= (= x4009 0) x1760) (and (=> x1760 x4032) (=> (not x1760) x3854)))))
(assert (= (and x5303 x321) x3417))
(assert (x1672 x2189))
(assert (x1672 x1794))
(assert (x4494 x4614 x2496 x3086 x600))
(assert (x1672 x4112))
(assert (x4680 x1473 x3761))
(assert (x1672 x628))
(assert (=> (>= 10000 x2534) (= (x3272 x2534) (x747 x2534))))
(assert (= 0 (x3461 x3353)))
(assert (x4494 x3780 x2906 x2113 x601))
(assert (x1672 x906))
(assert (x1672 x1600))
(assert (= (and (not x199) x1017) x832))
(assert (x1672 x2429))
(assert (= (x3461 x4692) 0))
(assert (x1672 x4472))
(assert (x1672 x1156))
(assert (= (and x4604 (not x4203)) x114))
(assert (x1672 x3413))
(assert (x1672 x683))
(assert (= (ite (and (not x2552) x1100 x5010) (x132 x422) (ite (and (not x327) (not x2552) (not x5010) x1100) (x659 x422) (x4235 x422))) (x5307 x422)))
(assert (x1672 x2356))
(assert (= (x3272 3248611349834744311580729226515044654865681148386811760331698647898072809472) (x747 3248611349834744311580729226515044654865681148386811760331698647898072809472)))
(assert (= (and x2506 x569) x1017))
(assert (x1672 x4988))
(assert (x1672 x2668))
(assert (x4182 x5089))
(assert (x1672 x4354))
(assert (= x1145 (or (and (not x4916) x932) (and (not x2923) x2230))))
(assert (x1672 x488))
(assert (= x486 (and x3946 (not x3238))))
(assert (x963 x1478))
(assert (x1672 x2899))
(assert (= (=> (and (= (x1765 x2731) x251) (= x2806 (= x251 (ite x4356 1 0))) (= (x2276 (+ 32 x4822)) x2731) (= x4356 (not x4397)) (= x4397 (= x251 0))) (and (=> (not x2806) x4498) (=> x2806 x127))) x1018))
(assert (x1672 x4241))
(assert (= (x2866 x521) (ite (= x521 x2077) x794 (x5030 x521))))
(assert (x1672 x3326))
(assert (= (or x4284 (and x3846 x1742)) x220))
(assert (= (x2614 x3223) 0))
(assert (= (=> (and (= x266 36) (not (= 826074471 x4763)) (= x4763 1889567281) (= x2422 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (> 826074471 x4763)) (> x2170 0) (= x2497 x1625) (not (> 4 x266)) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1786)) (< x1786 32)) (> x1786 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3782) (= x1786 (x529 (- x266 4))) (= x1063 x266) (= (x4232 (x3272 274184521717934524641157099916833587202)) x2170)) (and (=> (not x3782) x2056) (=> x3782 x1038))) x4851))
(assert (x4494 x1253 x3349 x1391 x3586))
(assert (= (x747 29289127993025145568725129057828671567744754166070328588094505464281371246592) (x3272 29289127993025145568725129057828671567744754166070328588094505464281371246592)))
(assert (= (and x3417 (not x2157)) x3113))
(assert (x1672 x2542))
(assert (x1672 x3931))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x1332) x3156) (and (=> x3156 x4690) (=> (not x3156) x3472))) x4469))
(assert (x1672 x2644))
(assert (= (=> (= (= x1084 0) x4535) (and (=> (and (= x6 0) x4535 (= 0 x325)) x4349) (=> (not x4535) x3309))) x744))
(assert (x1672 x43))
(assert (= x2752 (x4643 (x3272 x2752))))
(assert (x1672 x808))
(assert (= (=> (and (>= x4960 0) (= x1933 x2117) (= (= 2 x4960) x2772) (<= x4960 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> x2772 x4498) (=> (not x2772) x4617))) x4621))
(assert (x1672 x1977))
(assert (x1672 x1093))
(assert (x1814 x2754 x4324))
(assert (x1672 x2840))
(assert (= (x4004 x1176) 0))
(assert (x1672 x2613))
(assert (= (=> (and (= x4949 (x4521 x485)) (= x2311 (= x395 x4949)) (= (x1505 255 x4949) x395)) (and (=> (not x2311) x4498) (=> x2311 x4133))) x72))
(assert (x1672 x941))
(assert (= x4625 (and (not x108) x2286)))
(assert (x1672 x1359))
(assert (x1672 x251))
(assert (= x2616 (and x4062 (not x3608))))
(assert (= x3050 (=> (= (= x4516 274184521717934524641157099916833587202) x2392) (and (=> (not x2392) x650) (=> x2392 x564)))))
(assert (x1672 x3885))
(assert (x1672 x1557))
(assert (x1672 x3245))
(assert (= (x4643 (x747 10894474682274239493831243662817379401261526446360622092269559273883068006400)) 10894474682274239493831243662817379401261526446360622092269559273883068006400))
(assert (x1672 x107))
(assert (x963 x1544))
(assert (x1672 x1545))
(assert (x1672 x218))
(assert (x1672 x1818))
(assert (x1672 x3707))
(assert (x1672 x3181))
(assert (= (ite (and (not x2552) x5010 x1100) (x4712 x206) (ite (and (not x2552) (not x327) (not x5010) x1100) (x4531 x206) (x898 x206))) (x4281 x206)))
(assert (= x4218 (and x4020 (not x3467))))
(assert (= (x4643 (x3272 x455)) x455))
(assert (x4182 x1521))
(assert (x963 x4015))
(assert (x1672 x1503))
(assert (x963 x2717))
(assert (= (and x278 (not x1844)) x3842))
(assert (= x2684 (or x4442 x3624)))
(assert (x1672 x5188))
(assert (= x987 (and x5051 x3720)))
(assert (x1672 x1711))
(assert (= (x4643 (x3272 x1089)) x1089))
(assert (x4680 x467 x1847))
(assert (x1672 x1003))
(assert (= (x1292 x240) (ite (= x1713 x240) x1680 (x4923 x240))))
(assert (= x2295 (or (and x4250 x2586) (and x3271 x900))))
(assert (= x4547 (and (not x5201) x1260)))
(assert (x1672 x2745))
(assert (x1672 x3943))
(assert (x4494 x5110 x1701 x1373 x4458))
(assert (= x3066 (and (not x3336) x4884)))
(assert (x1672 x4427))
(assert (x1672 x4376))
(assert (x1672 x1460))
(assert (= (or (and x1099 x1047) (and x2914 x959)) x4277))
(assert (x1672 x867))
(assert (x1672 x2701))
(assert (= (and x3263 x4209) x3993))
(assert (=> (<= x4194 10000) (= (x747 x4194) (x3272 x4194))))
(assert (x1672 x1010))
(assert (= (=> (= x1695 (= 274184521717934524641157099916833587202 x1767)) (and (=> (and (= x1458 x1435) x1695 (= 404098525 x5287) (= x699 32) (= 1 x4155) (not (= x5287 117300739)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3008) (<= 0 x3008) (= x1009 10894474682274239493831243662817379401261526446360622092269559273883068006400) (> x1030 0) (> 826074471 x5287) (not (> 4 x1435)) (= 4 x1435) (not (= 157198259 x5287)) (= (x4232 (x3272 274184521717934524641157099916833587202)) x1030)) x2324) (=> (not x1695) x4725))) x1293))
(assert (x1672 x1252))
(assert (= (x3272 1000000000000000000) (x747 1000000000000000000)))
(assert (= (ite (= x206 x3908) x876 (x4712 x206)) (x4531 x206)))
(assert (= x3400 (=> (= (= x489 0) x4747) (and (=> (and (= x891 0) x4747 (= x1399 0)) x3559) (=> (not x4747) x503)))))
(assert (= (x4643 (x3272 x5315)) x5315))
(assert (= (and (not x65) x5192) x1368))
(assert (= (=> (and (= x5264 (x2276 (+ 32 x470))) (= x1568 (= x597 0)) (= x597 (x347 x5264))) (and (=> (and (= x5018 x26) x1568) x3746) (=> (not x1568) x4166))) x1721))
(assert (x1672 x5104))
(assert (x1672 x3779))
(assert (x1672 x3530))
(assert (x1672 x4615))
(assert (x1814 x2387 x4359))
(assert (= x3484 (and x3686 (not x2470))))
(assert (= (and x724 x2398) x3442))
(assert (= x511 (and (not x3056) x1206)))
(assert (= (and x4545 x842) x3365))
(assert (x4680 x3031 x2821))
(assert (= x3624 (or (and (not x1223) x1196) x2213)))
(assert (x1672 x2448))
(assert (x1672 x1942))
(assert (= x3751 (=> (and (= (x307 x3671 2) x2156) (= x4215 (x4232 (x3272 x1574))) (>= x1574 0) (>= 1461501637330902918203684832716283019655932542975 x1574) (= (x2540 x2156) x1574) (= 4 x3308) (= x1784 (= 0 x4215)) (< x1574 1461501637330902918203684832716283019655932542976)) (and (=> x1784 x4032) (=> (not x1784) x375)))))
(assert (x1672 x1747))
(assert (= (and (not x2949) x4006) x4338))
(assert (= (=> (and (= x18 (x2276 (+ x21 x472))) (= x3998 (x2276 (+ x1794 31))) (= (or (and (< x1794 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1794))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1794)) x3920) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3998) x21)) (and (=> (not x3920) x5243) (=> x3920 x4498))) x658))
(assert (= (=> (and (= x3909 (x2276 (+ x2644 32))) (= x1961 (not x4847)) (= (= 0 x1235) x4847) (= (x1336 x3909) x1235) (= (= (ite x1961 1 0) x1235) x541)) (and (=> x541 x3657) (=> (not x541) x4032))) x3171))
(assert (= x397 (and x339 x2510)))
(assert (= (x4643 (x3272 x3468)) x3468))
(assert (x4182 x1574))
(assert (= (=> (and (= (x2276 (+ x2493 x3633)) x4331) (= x3080 (= 0 x4331))) (and (=> (and x3080 (= x14 x1381)) x4285) (=> (not x3080) x2315))) x457))
(assert (= (x525 x3792) (ite (= x1680 x3792) 0 (x1298 x3792))))
(assert (x963 x252))
(assert (x1672 x1098))
(assert (x1672 x2748))
(assert (x1672 x1117))
(assert (x1672 x4971))
(assert (x1672 x2133))
(assert (= (ite (and x4277 (not x1383) x1825) (x3140 x1689) (x3290 x1689)) (x2138 x1689)))
(assert (x1672 x4140))
(assert (x1672 x5256))
(assert (x1672 x5094))
(assert (x1672 x943))
(assert (=> (>= 10000 x5315) (= (x3272 x5315) (x747 x5315))))
(assert (= x4753 (and (not x1635) x817)))
(assert (= (=> (and (= x2532 (x1505 1461501637330902918203684832716283019655932542975 x2026)) (= (x2276 (+ 32 x3621)) x860) (= (x750 x860) x2026) (= x3253 (= x2776 0)) (= x2776 (x4232 (x3272 x3152))) (= x1515 (x2276 (+ x2830 4)))) (and (=> x3253 x4498) (=> (and (= (< 0 x3159) x2611) (or (and (> 4294967296 x2007) x2611 (= x4823 1)) (and (= x3159 x4823) (not x2611))) (not x3253)) x4106))) x1996))
(assert (x4494 x383 x5075 x2531 x4856))
(assert (= (x417 x3222) 0))
(assert (= x3900 (and x4867 (not x4934))))
(assert (x1672 x274))
(assert (= x3891 (and x4681 (not x2392))))
(assert (x1672 x5134))
(assert (= (x4902 (- x3909 x100)) 0))
(assert (x1672 x1716))
(assert (= (ite (= x5018 x4564) x3486 (x2980 x5018)) (x1461 x5018)))
(assert (x1672 x1625))
(assert (= 0 (x2169 x2238)))
(assert (= x704 (or (and (not x4184) x464) (and x3598 (not x4258)))))
(assert (x1672 x2580))
(assert (= x4485 (or x732 x3808)))
(assert (x1814 x4265 x2395))
(assert (x1672 x622))
(assert (x1672 x95))
(assert (x1672 x5275))
(assert (x1672 x2259))
(assert (x963 x4404))
(assert (x1672 x1770))
(assert (x1672 x276))
(assert (x1672 x3412))
(assert (= 0 (x4431 x2517)))
(assert (= (and (not x1396) x2166) x829))
(assert (x963 x3152))
(assert (x4680 x4615 x5025))
(assert (= x407 (x4643 (x3272 x407))))
(assert (x1672 x4230))
(assert (x1672 x3785))
(assert (x1672 x5086))
(assert (= x4884 (and x958 (not x920))))
(assert (= (ite (= x984 x194) x2646 (x4883 x194)) (x1584 x194)))
(assert (= x4742 (or x2588 x755)))
(assert (= x1621 true))
(assert (x963 x3306))
(assert (x1672 x5212))
(assert (x1672 x4546))
(assert (= x367 (=> (and (= x5233 (< x2508 x1242)) (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3551)) x2508)) (and (=> (not x5233) x4595) (=> x5233 x4032)))))
(assert (x1672 x1952))
(assert (x1055 x3815 x1917))
(assert (x1672 x1136))
(assert (= x2054 (=> (= (= x4167 274184521717934524641157099916833587202) x1053) (and (=> (not x1053) x2089) (=> x1053 x3302)))))
(assert (x1672 x1632))
(assert (x1672 x3884))
(assert (= (=> (= x3554 (= 0 x2748)) (and (=> (not x3554) x1723) (=> (and x3554 (= x891 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1399 0)) x3559))) x662))
(assert (x1672 x2252))
(assert (=> (>= 10000 x4672) (= (x747 x4672) (x3272 x4672))))
(assert (x1672 x709))
(assert (x1672 x3249))
(assert (x1672 x1215))
(assert (x1672 x2431))
(assert (x1672 x3486))
(assert (x1672 x2131))
(assert (x1672 x4972))
(assert (= (and x5076 x1510) x1804))
(assert (x1672 x811))
(assert (x1672 x2947))
(assert (= x336 (=> (and (= x106 (ite (not x5266) 1 0)) (= (= x3838 0) x1011) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3633) x883) (= x5266 (= 0 x3633)) (= x3838 (x1505 x106 x2512)) (= (ite (< x883 x946) 1 0) x2512)) (and (=> (not x1011) x4032) (=> x1011 x4720)))))
(assert (x4182 x3468))
(assert (= x2150 (=> (and (= (> x743 0) x616) (= x743 (x2691 x3638))) (and (=> (and (not x616) (= 0 x4703)) x3410) (=> x616 x1212)))))
(assert (=> (>= 10000 x996) (= (x747 x996) (x3272 x996))))
(assert (= x2974 (and x3365 x3821)))
(assert (x1672 x4318))
(assert (= (and (not x3826) x3224) x3667))
(assert (x1672 x117))
(assert (x1672 x5118))
(assert (= (and x4026 x1946) x606))
(assert (= (x4923 x240) 0))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x4643 (x747 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x1672 x1371))
(assert (x1672 x4266))
(assert (x1672 x3114))
(assert (= (and (not x4507) x3764) x4466))
(assert (= (x2169 x2737) 0))
(assert (x1672 x5025))
(assert (x4182 x4824))
(assert (x1672 x5254))
(assert (x963 x3455))
(assert (x4182 x3591))
(assert (x1672 x402))
(assert (= x1561 (=> (and (= (< 0 x4748) x3384) (= x1522 (mod (* x4204 x5008) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x3384) x4498) (=> (and (= x1327 x2562) (= (div x1522 x4748) x1327) x3384) x1000)))))
(assert (x4182 274184521717934524641157099916833587202))
(assert (x963 x3459))
(assert (= (ite (= x1716 x3060) x3960 (x4431 x3060)) (x4760 x3060)))
(assert (x4680 x1241 x765))
(assert (=> (>= 10000 x3863) (= (x3272 x3863) (x747 x3863))))
(assert (= x673 (x4643 (x3272 x673))))
(assert (x963 x106))
(assert (= (and x4583 x1602) x2222))
(assert (x1672 x294))
(assert (x1672 x5202))
(assert (x1672 x5171))
(assert (x1672 x2936))
(assert (= x3657 (=> (= (> x1235 0) x1468) (and (=> x1468 x1803) (=> (not x1468) x4032)))))
(assert (x1672 x4451))
(assert (x1672 x4115))
(assert (= (=> (and (= (ite (not x3702) 1 0) x1473) (= (x1505 x1473 x3761) x3228) (= (ite (> x5008 x2133) 1 0) x3761) (= (= x4204 0) x3702) (= (= x3228 0) x843) (= x2133 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4204))) (and (=> x843 x1561) (=> (not x843) x4498))) x3136))
(assert (x1672 x1013))
(assert (x1672 x3012))
(assert (x1672 x2754))
(assert (= (=> (and (= x2106 (x3371 x4119)) (= x255 (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2106))) (= (x2276 (+ x3982 32)) x4119) (= (> 0 x255) x2810)) (and (=> (and (= x5139 (> x4506 1)) (not x2810) (= (x102 x3982) x4506) (= x2761 x4701) (not x5139) (= x2106 x4701)) x372) (=> x2810 x4032))) x4251))
(assert (x1672 x1392))
(assert (= (x4038 128) (x3385 128)))
(assert (x1672 x4089))
(assert (=> (>= 10000 x3907) (= (x3272 x3907) (x747 x3907))))
(assert (x1672 x3006))
(assert (x4182 x3003))
(assert (= (and x3484 x2311) x5051))
(assert (= x1834 (or (and x1599 (not x3837)) x2684)))
(assert (= x706 (and x4966 (not x4288))))
(assert (x1672 x1170))
(assert (x1672 x3291))
(assert (= (x3272 1159839769) (x747 1159839769)))
(assert (= x4005 (and (not x5172) x3600)))
(assert (= true x1982))
(assert (= x2647 (and x3264 (not x1190))))
(assert (x963 x3074))
(assert (= (or (and x3130 x2052) (and x3935 x1793)) x559))
(assert (x1672 x1322))
(assert (= x2882 (x4643 (x3272 x2882))))
(assert (x4680 x3850 x5251))
(assert (= (ite (= x3757 x5246) x2115 (x4096 x3757)) (x666 x3757)))
(assert (x963 x2696))
(assert (x1672 x2666))
(assert (x1672 x1118))
(assert (= (ite (= x2658 x4403) 0 (x1341 x4403)) (x2850 x4403)))
(assert (= (and (not x3298) x4257) x595))
(assert (x1672 x1483))
(assert (= (=> (= (= x455 274184521717934524641157099916833587206) x2987) (and (=> (not x2987) x5033) (=> (and (not (= x86 157198259)) (not (= 117300739 x86)) (<= 0 x1771) (= 404098525 x86) (< 0 x4554) x2987 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1771) (= (x4232 (x3272 274184521717934524641157099916833587206)) x4554) (= x1328 32) (= 4 x2699) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x4977) (= x1928 1) (< x86 826074471) (not (> 4 x2699)) (= x229 x2699)) x950))) x4813))
(assert (= x4102 (=> (= (= 274184521717934524641157099916833587202 x1574) x823) (and (=> (and (= x5019 x3308) (not (= 117300739 x4029)) (= 1 x469) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3449) (not (< x5019 4)) (= (x4232 (x3272 274184521717934524641157099916833587202)) x3875) (= x4029 404098525) (>= x3449 0) (= x3114 10894474682274239493831243662817379401261526446360622092269559273883068006400) (= 32 x2643) (< x4029 826074471) (= 4 x5019) x823 (> x3875 0) (not (= x4029 157198259))) x4073) (=> (not x823) x977)))))
(assert (x1672 x2664))
(assert (x1672 x3609))
(assert (x1672 x877))
(assert (x1672 x3569))
(assert (= x725 (and x5207 x3519)))
(assert (x1672 x1185))
(assert (= x2032 (or x219 (and x4078 x1664))))
(assert (x1672 x1847))
(assert (= x3629 (or x1999 x220)))
(assert (x1672 x1922))
(assert (x1672 x4155))
(assert (= x1592 (x4643 (x3272 x1592))))
(assert (x1672 x4684))
(assert (x1672 x3144))
(assert (x1672 x3151))
(assert (x1672 x4159))
(assert (=> (>= 10000 x3549) (= (x3272 x3549) (x747 x3549))))
(assert (x963 x1118))
(assert (x1672 x3547))
(assert (x1672 x1706))
(assert (= (and x2893 x1072) x626))
(assert (= (=> (and (= x4317 0) (= x294 x434)) x2059) x387))
(assert (x1672 x1644))
(assert (= x2939 (and x130 (not x5271))))
(assert (x1672 x2228))
(assert (x1672 x1372))
(assert (x4182 x4342))
(assert (= x1924 (or (and x4237 x1568) (and x497 x4660))))
(assert (x963 x2495))
(assert (x1672 x4386))
(assert (= (and (not x4172) x1951) x1950))
(assert (x1672 x2699))
(assert (= (=> (= x3030 (= 274184521717934524641157099916833587206 x1767)) (and (=> (not x3030) x1293) (=> (and (not (= 157198259 x2998)) (> 826074471 x2998) (= x3668 4) (>= x1771 0) x3030 (= x3108 (x4232 (x3272 274184521717934524641157099916833587206))) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x1818) (= x699 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1771) (> x3108 0) (= x2998 404098525) (= x4155 1) (not (< x3668 4)) (= x3668 x1458) (not (= x2998 117300739))) x2324))) x4145))
(assert (= (and x2414 x561) x2836))
(assert (x1672 x1242))
(assert (x4182 x1832))
(assert (= (=> (and (= (x1681 x3861) x5228) (= x4988 (x4232 (x3272 x2623))) (= (x1505 1461501637330902918203684832716283019655932542975 x5228) x3486) (= (= x4988 0) x2492) (= (x2276 (+ 4 x5018)) x4564) (= (x2276 (+ x3881 32)) x3861)) (and (=> x2492 x4032) (=> (and (= x2127 (> x4462 0)) (or (and (not x2127) (= x4462 x5210)) (and (> 4294967296 x1117) x2127 (= x5210 1))) (not x2492)) x1831))) x502))
(assert (= (ite (= x876 x1176) 0 (x4004 x1176)) (x3054 x1176)))
(assert (x963 x4570))
(assert (x1672 x2013))
(assert (= x3169 (or x141 (and x1939 x2036))))
(assert (x1672 x5245))
(assert (x1672 x4280))
(assert (= x1703 (and x3438 x2214)))
(assert (= (and x3709 x2329) x745))
(assert (= (=> (and (= x4530 x1358) (= x2186 x124)) x369) x3138))
(assert (= (x3272 (x4643 x3615)) x3615))
(assert (x963 x3847))
(assert (x963 x2411))
(assert (x4182 x2534))
(assert (=> (<= x3315 10000) (= (x747 x3315) (x3272 x3315))))
(assert (= x4766 (and (not x1750) x4039)))
(assert (x1672 x4602))
(assert (= (and x4461 x704) x4286))
(assert (x1672 x4317))
(assert (= x4617 (=> (and (= (x4708 (x3272 x2534) (x747 2) 0) x2521) (= 128 x4706) (= (= 0 x3015) x5072) (> 1461501637330902918203684832716283019655932542976 x175) (= x3015 (x4232 (x3272 x175))) (= (x1505 1461501637330902918203684832716283019655932542975 x2411) x2534) (= (x3063 x2521) x175) (>= x175 0) (<= x175 1461501637330902918203684832716283019655932542975)) (and (=> x5072 x4498) (=> (not x5072) x512)))))
(assert (x1672 x395))
(assert (= (x4643 (x747 826074471)) 826074471))
(assert (x1672 x351))
(assert (= 0 (x3441 x3198)))
(assert (x1672 x3550))
(assert (= (x3272 17154740991736861046558774992177620686056526479738507590741468237373194108928) (x747 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (= (=> (and (= (> x1673 0) x1389) (= (x4791 x575) x351) (= x5088 (x3231 x1007)) (= (x2391 x5088) x1673) (= x2551 (x611 x1342))) (and (=> (not x1389) x4032) (=> x1389 x2951))) x1367))
(assert (= x3325 (or (and x2544 x298) x3888)))
(assert (x1672 x4483))
(assert (x1672 x1966))
(assert (= (x3272 4294967296) (x747 4294967296)))
(assert (x4680 x4439 x1118))
(assert (= x3177 (=> (and (= (= x1545 x5153) x4361) (= (x1505 1461501637330902918203684832716283019655932542975 x1545) x5153)) (and (=> (not x4361) x34) (=> x4361 x3192)))))
(assert (x1672 x3366))
(assert (= x3590 (and (not x3338) x804)))
(assert (x1672 x4224))
(assert (= (=> (and (= x2537 (< 0 x3132)) (= x3132 (x1854 x1641))) (and (=> (and (= (x3231 x1007) x2757) (= x3412 x3443) (not x1652) (= (x2276 (+ x1342 192)) x3957) x2537 (= (< 1 x2482) x1652) (= (x2391 x2757) x2482)) x1271) (=> (not x2537) x4032))) x3825))
(assert (= (and x1822 (not x4841)) x3886))
(assert (= (and (not x700) x4799) x1192))
(assert (x1672 x2625))
(assert (= x773 (and x2376 (not x2314))))
(assert (x1672 x3772))
(assert (x963 x2716))
(assert (= x3416 (and x3679 (not x969))))
(assert (= (=> (= (= x5089 274184521717934524641157099916833587206) x4229) (and (=> (not x4229) x2206) (=> (and (= x4267 (x4232 (x3272 274184521717934524641157099916833587206))) (= x3328 826074471) (< 0 x4267) (= x1161 22270923681254677845691103109158760375340177724800803888364822332811285364736) x4229 (= 1 x1606) (= x1922 x3524) (= x1922 4) (not (< x1922 4)) (not (> 826074471 x3328)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3426) (= x1698 32) (<= 0 x3426)) x2814))) x4426))
(assert (x963 x4129))
(assert (= (x4431 x5109) 0))
(assert (x1672 x913))
(assert (= x4830 (=> (and (not (= x1800 1159839769)) (not (= 1054675240 x1800)) (not (< x1800 1054675240)) (> 1684360437 x1800) (< x1800 2743638299) (not (< x4266 4)) (not (= x1800 1082367153)) (= (x529 (- x4266 4)) x526) (= x3826 (or (and (> 64 x526) (= true (<= x526 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x526))) (= 1267348777 x1800)) (and (=> (not x3826) x3768) (=> x3826 x4032)))))
(assert (= (=> (and (not (> 826074471 x3367)) (= x1590 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x4118 x633) (> x3773 0) (not (> 4 x4118)) (= x3367 1889567281) (= 36 x4118) (not (= 826074471 x3367)) (= x1313 x58) (= x3773 (x4232 (x3272 274184521717934524641157099916833587206))) (= (or (and (> 32 x3922) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3922))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3922)) x5172) (= (x529 (- x4118 4)) x3922)) (and (=> (not x5172) x151) (=> x5172 x2188))) x1929))
(assert (x963 x4134))
(assert (= (x4643 (x747 1684360437)) 1684360437))
(assert (x1672 x799))
(assert (= x1662 (or (and x1554 x3265) (and (not x4674) x2273))))
(assert (x1672 x1016))
(assert (= x522 (=> (and (= (< 0 x2263) x165) (= x331 (x554 x4937)) (= (x40 x331) x2263)) (and (=> (and (= x4870 x3187) (not x165)) x3354) (=> x165 x3464)))))
(assert (= 0 (x62 x4451)))
(assert (x1672 x5316))
(assert (x1672 x721))
(assert (x1814 x2709 x2340))
(assert (x1672 x2173))
(assert (= (and x1049 (not x1604)) x1995))
(assert (= (x4643 (x747 1054675240)) 1054675240))
(assert (= (and x2051 x987) x3185))
(assert (x1672 x31))
(assert (= (or (and (not x1141) x1368) x1407) x3808))
(assert (x1672 x4071))
(assert (= (ite (= x1697 x860) x4578 (x2169 x860)) (x4391 x860)))
(assert (= (x2138 x539) (ite (and x1825 (not x1383) x4277) (x3140 x539) (x3290 x539))))
(assert (x1672 x5152))
(assert (x4494 x4234 x565 x4392 x2979))
(assert (x1672 x4636))
(assert (x1672 x383))
(assert (x1672 x3439))
(assert (x1672 x271))
(assert (x1672 x4196))
(assert (x1672 x1783))
(assert (= x686 (=> (and (= x2002 x4047) (= x5138 x1705)) x4907)))
(assert (= (and (not x2438) x1614) x3131))
(assert (x1672 x6))
(assert (= (=> (and (= x2161 (x3966 x2292)) (= (> x2161 0) x598)) (and (=> (and (not x598) (= 0 x3029)) x3663) (=> x598 x3662))) x1300))
(assert (= (=> (and (= (x57 x2549) x5213) (= (x2276 (+ x4242 192)) x2549) (= x2053 (= 0 x5213))) (and (=> (and (= x4159 x2397) x2053) x5080) (=> (not x2053) x4345))) x605))
(assert (= x2814 (=> (= (= 0 x1606) x4985) (and (=> x4985 x4032) (=> (not x4985) x1228)))))
(assert (x1672 x2101))
(assert (x1672 x3079))
(assert (= (or (and (not x4741) x1192) x559) x265))
(assert (x1672 x1541))
(assert (x2722 x5118 x4121))
(assert (x963 x2300))
(assert (x1672 x296))
(assert (x1672 x3864))
(assert (x1672 x2014))
(assert (x1672 x2742))
(assert (= 0 (x2883 x2084)))
(assert (= (x3272 1267348777) (x747 1267348777)))
(assert (x1672 x531))
(assert (= (x4760 x5109) (ite (= x5109 x1716) x3960 (x4431 x5109))))
(assert (= x2724 (or (and x4560 x3937) (and x864 x1187))))
(assert (= (x3915 x406) (ite (= x479 x406) x408 (x4188 x406))))
(assert (x4680 x1478 x2790))
(assert (x1672 x3677))
(assert (= x375 (=> (= x4896 (= x1574 274184521717934524641157099916833587206)) (and (=> (and (= 404098525 x3721) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1708) (not (< x3747 4)) (= x2643 32) (= 4 x3747) (not (= 117300739 x3721)) (> 826074471 x3721) (< 0 x5042) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x1252) (<= 0 x1708) (= x5042 (x4232 (x3272 274184521717934524641157099916833587206))) (not (= x3721 157198259)) x4896 (= 1 x469) (= x3308 x3747)) x4073) (=> (not x4896) x4102)))))
(assert (x1672 x670))
(assert (x1814 x882 x4406))
(assert (x1672 x2953))
(assert (x1672 x957))
(assert (x1672 x3242))
(assert (x1672 x1552))
(assert (x4182 x1837))
(assert (x1672 x3153))
(assert (x1672 x4581))
(assert (= (and x4844 x1320) x2153))
(assert (= (x4643 (x747 117300739)) 117300739))
(assert (= (or (and x2799 x2981) (and x2055 x956)) x1286))
(assert (= (=> (and (= (= x3626 x2497) x1164) (= (x1505 1461501637330902918203684832716283019655932542975 x2497) x3626)) (and (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5290) x1164 (= (x3910 x2612) x5290) (= x2612 (x4708 (x3272 x2781) (x747 1) 0)) (= x2781 (x1505 1461501637330902918203684832716283019655932542975 x3127)) (<= 0 x5290) (= 32 x4576) (= x2569 1)) x3173) (=> (not x1164) x819))) x4504))
(assert (x1672 x4735))
(assert (= (and x915 x2834) x1870))
(assert (= (=> (and (= x2470 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x218) (and (= (<= x218 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x218)))) (= x935 (x2276 (+ x218 31))) (= (x2276 (+ x485 x324)) x1557) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x935) x324)) (and (=> (not x2470) x72) (=> x2470 x4498))) x3332))
(assert (x1672 x756))
(assert (x1672 x3975))
(assert (x1672 x838))
(assert (x1672 x3213))
(assert (x1672 x3905))
(assert (x1672 x3358))
(assert (= (and x2794 (not x1700)) x1072))
(assert (x1672 x2279))
(assert (x963 x2623))
(assert (x1672 x2948))
(assert (x963 x4265))
(assert (= x2125 (=> (= x1885 (= 274184521717934524641157099916833587206 x4167)) (and (=> x1885 x1233) (=> (not x1885) x2054)))))
(assert (x1672 x272))
(assert (x1672 x4124))
(assert (x1672 x1889))
(assert (x1672 x4838))
(assert (x963 x2221))
(assert (= (and x4742 (not x1450)) x5002))
(assert (x1672 x5021))
(assert (x1672 x1592))
(assert (x1672 x2959))
(assert (x1672 x2674))
(assert (x1672 x2553))
(assert (x1672 x2117))
(assert (x1672 x975))
(assert (= (or x2825 (and (not x3965) x4667)) x4442))
(assert (x1672 x3755))
(assert (x1672 x1852))
(assert (x1672 x3555))
(assert (x1814 x193 x2837))
(assert (= (and (not x2073) x832) x4774))
(assert (x963 x3237))
(assert (x1672 x2203))
(assert (= (=> (and (= x1943 (> x2047 0)) (= (x1799 x5) x2047)) (and (=> x1943 x4016) (=> (not x1943) x4498))) x5066))
(assert (x4494 x2289 x301 x4034 x2148))
(assert (= x4183 (=> (and (= 0 x1083) (= x3500 x1433)) x1897)))
(assert (x963 x1315))
(assert (x1672 x1276))
(assert (x1672 x3961))
(assert (= (or (and x2659 x2265) (and x3051 x1980)) x2316))
(assert (x963 x3899))
(assert (x1672 x4842))
(assert (= (x2169 x1583) 0))
(assert (x1672 x4084))
(assert (x1672 x240))
(assert (x963 x657))
(assert (= (=> (and (= x3718 (x1972 x2355)) (= (< 0 x3718) x3720)) (and (=> (not x3720) x4498) (=> x3720 x708))) x4133))
(assert (= (and x4475 (not x3120)) x3675))
(assert (= x4534 (or (and x4338 (not x751)) (and x2949 x4006))))
(assert (= x1501 (x4643 (x3272 x1501))))
(assert (= (x747 2743638299) (x3272 2743638299)))
(assert (=> (>= 10000 x4104) (= (x747 x4104) (x3272 x4104))))
(assert (= x3269 (or (and (not x3045) x486) (and (not x991) x1365))))
(assert (= (=> (and (= (x2391 x3881) x4515) (= (> x4515 18446744073709551615) x1846)) (and (=> x1846 x4032) (=> (and (= x1135 (mod (* 32 x4515) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2358 (= 0 x4515)) (or x2358 (and (= x3607 (mod (* x4515 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x2358) (= x4976 (x2276 (+ 32 x3982))))) (= x1234 (x2276 (+ x1135 32))) (not x1846) (= (x2276 (+ x1234 x3982)) x5018)) x4849))) x3330))
(assert (x4182 x5231))
(assert (x1672 x4001))
(assert (= (ite (= x4882 x1552) x2698 (x1311 x1552)) (x3369 x1552)))
(assert (= (and x656 x1011) x5260))
(assert (x1672 x4748))
(assert (x1672 x3861))
(assert (=> (>= 10000 x1313) (= (x747 x1313) (x3272 x1313))))
(assert (x4494 x2736 x1290 x3722 x3595))
(assert (=> (>= 10000 x1089) (= (x3272 x1089) (x747 x1089))))
(assert (x963 x1120))
(assert (x1672 x3599))
(assert (= x4158 (=> (and (= x2868 (x2391 x78)) (= x5288 (= x2868 x3866)) (= (x3231 x1007) x78) (= (x1854 x1641) x3866)) (and (=> x5288 x228) (=> (not x5288) x4032)))))
(assert (x963 x3753))
(assert (x963 x1853))
(assert (= (=> (= x4117 true) x2250) x4032))
(assert (x1672 x4384))
(assert (= x1551 (=> (= (= 274184521717934524641157099916833587202 x4007) x4885) (and (=> (not x4885) x544) (=> (and (= x1418 x3994) (= x3994 4) (not (= 117300739 x4064)) x4885 (>= x3008 0) (= x4064 404098525) (not (= x4064 157198259)) (> x3203 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3008) (not (> 4 x3994)) (= 32 x947) (< x4064 826074471) (= x2 1) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x651) (= (x4232 (x3272 274184521717934524641157099916833587202)) x3203)) x1081)))))
(assert (= (+ (x4643 x3671) 2) (x4643 (x307 x3671 2))))
(assert (x1672 x1878))
(assert (x4680 x3654 x233))
(assert (=> (<= x1521 10000) (= (x3272 x1521) (x747 x1521))))
(assert (= (=> (= x3336 (= x2042 274184521717934524641157099916833587202)) (and (=> x3336 x1488) (=> (not x3336) x4574))) x3710))
(assert (= (and x1127 (not x2585)) x2035))
(assert (= (=> (and (= (ite (< x3890 x763) 1 0) x384) (= x3890 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3377)) (= x3573 (ite (not x2109) 1 0)) (= x5236 (x1505 x3573 x384)) (= x1817 (= 0 x5236)) (= x2109 (= x3377 0))) (and (=> (not x1817) x4498) (=> x1817 x780))) x1761))
(assert (x1672 x4488))
(assert (= x2331 (=> (and (= (= x5277 0) x864) (= x5277 (x1505 x3326 x2087)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3551) x607) (= x2087 (ite (> x2787 x607) 1 0)) (= x834 (= 0 x2360)) (= (ite (not x834) 1 0) x3326)) (and (=> (not x864) x4032) (=> (and (= (div x625 1000000000000000000) x5235) (= x3447 x5235) x864 (= x625 (mod (* x2787 x3551) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x3751)))))
(assert (x1672 x3723))
(assert (= (=> (and (= (or (and (= (<= x1107 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1107)) (> x1107 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4947) (= x2402 (x2276 (+ x1107 31))) (= x3482 (x2276 (+ x5146 x3975))) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2402) x5146)) (and (=> x4947 x4498) (=> (not x4947) x3913))) x1155))
(assert (= x2288 (=> (and (= x1352 (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3316))) (= (div x5302 1000000000000000000) x3316) (= x1033 (< x1352 x4655)) (= (mod (* x4655 x2014) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5302)) (and (=> (not x1033) x4816) (=> x1033 x4032)))))
(assert (x1672 x1083))
(assert (x963 x2503))
(assert (= x979 (=> (and (= (< 18446744073709551615 x2384) x792) (= (x40 x2672) x2384)) (and (=> (and (= x3515 (mod (* x2384 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and (not x3822) (= x551 (mod (* 32 x2384) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1632 (x2276 (+ x2292 32)))) x3822) (= (= x2384 0) x3822) (not x792) (= x2397 (x2276 (+ x5209 x2292))) (= x5209 (x2276 (+ x3515 32)))) x1249) (=> x792 x4498)))))
(assert (= x2277 (x4643 (x3272 x2277))))
(assert (x4182 x1795))
(assert (= (=> (= (= 0 x570) x3580) (and (=> x3580 x4032) (=> (not x3580) x3227))) x2231))
(assert (x963 x3892))
(assert (= (and x2396 (not x4683)) x3176))
(assert (= (x4883 x194) (ite (and x4277 x1825 (not x1383)) (x3204 x194) (x3910 x194))))
(assert (x1672 x2573))
(assert (x1672 x4167))
(assert (= (x4643 (x3272 x3549)) x3549))
(assert (= (and x2627 (not x1866)) x4673))
(assert (= (=> (and (= (> x3862 0) x2398) (= (x2391 x3881) x3862)) (and (=> (not x2398) x4032) (=> x2398 x502))) x4166))
(assert (x1672 x1984))
(assert (x2960 x2622))
(assert (x1672 x4248))
(assert (= x1665 (=> (and (= x3631 (x1505 1461501637330902918203684832716283019655932542975 x1545)) (= x4078 (= x1545 x3631))) (and (=> (and (= x2609 (x4708 (x3272 x2277) (x747 1) 0)) (= (x3290 x2609) x2573) (>= x2573 0) (= x1842 32) (= x4163 1) (= x2277 (x1505 1461501637330902918203684832716283019655932542975 x1587)) x4078 (<= x2573 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x2547) (=> (not x4078) x929)))))
(assert (x1672 x3553))
(assert (= x3951 (and x1192 x4741)))
(assert (= (x4643 (x3272 x4104)) x4104))
(assert (x1672 x4888))
(assert (x1672 x4734))
(assert (= (ite (= x3861 x1716) x3960 (x4431 x3861)) (x4760 x3861)))
(assert (x1672 x3090))
(assert (= x1422 (and x4419 x167)))
(assert (x1672 x3974))
(assert (x963 x765))
(assert (x1672 x4880))
(assert (= 0 (x3741 x4189)))
(assert (x1672 x3468))
(assert (x1672 x175))
(assert (x4182 x4201))
(assert (x1672 x1342))
(assert (x1672 x4187))
(assert (x1672 x1490))
(assert (= x1464 (=> (and (= x437 (x5238 x149)) (= x2006 (> x1481 0)) (= (x2957 x437) x1481)) (and (=> x2006 x2703) (=> (not x2006) x4498)))))
(assert (x963 x523))
(assert (= x4744 (and x3106 (not x4661))))
(assert (x1814 x3714 x2721))
(assert (x1672 x636))
(assert (x1672 x3773))
(assert (= x2972 (=> (and (= x4852 (< 0 x944)) (= x944 (x1459 x2644))) (and (=> x4852 x1086) (=> (not x4852) x1803)))))
(assert (x1672 x2791))
(assert (= x368 (=> (and (= (x4232 (x3272 274184521717934524641157099916833587231)) x3678) (= x5036 (= 0 x520)) (> x3678 0)) (and (=> x5036 x3462) (=> (not x5036) x4498)))))
(assert (x1672 x1797))
(assert (x1672 x633))
(assert (x1672 x2669))
(assert (x1672 x3565))
(assert (x4680 x2279 x1889))
(assert (x1672 x1031))
(assert (x1672 x2698))
(assert (= x3351 (=> (and (= (div x3391 1000000000000000000) x4205) (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4205)) x5157) (= x3391 (div x2063 1000000000000000000)) (= x2063 (mod (* x19 x125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2958 (< x5157 x1482))) (and (=> (not x2958) x1912) (=> x2958 x4498)))))
(assert (x4494 x113 x2307 x1555 x3983))
(assert (x1672 x1064))
(assert (= (x4923 x214) 0))
(assert (x1672 x4912))
(assert (x1672 x310))
(assert (= x2506 (and x449 (not x2911))))
(assert (= x4959 (=> (and (= (= x2168 0) x4914) (= (x1505 x5006 x118) x2168) (= (ite (not x3851) 1 0) x5006) (= (= x77 0) x3851) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x77) x3147) (= x118 (ite (> x5096 x3147) 1 0))) (and (=> (not x4914) x4032) (=> x4914 x68)))))
(assert (= 0 (x444 x966)))
(assert (= x4901 (and (not x3964) x1240)))
(assert (x1672 x1512))
(assert (x1672 x361))
(assert (= x4580 (=> (and (= (x1505 x3654 x233) x2318) (= (ite (< x2129 1000000000000000000) 1 0) x233) (= (ite (not x47) 1 0) x3654) (= x2366 (= 0 x2318)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1567) x2129) (= x47 (= 0 x1567)) (= (div x4767 x2761) x2249) (= (mod (* x4703 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4767)) (and (=> (and (= x1888 (mod (* x1567 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x1888 x2761) x2869) (= x2869 x6) x2366 (= x325 x2249)) x4349) (=> (not x2366) x4032)))))
(assert (x1672 x4393))
(assert (x1672 x3482))
(assert (x1672 x4105))
(assert (x1672 x4302))
(assert (x2960 x1917))
(assert (x1672 x2711))
(assert (= (and x4547 (not x452)) x2190))
(assert (x1672 x5089))
(assert (x1672 x5042))
(assert (= x3173 (=> (and (= x2569 x4305) (= x1416 x4576)) x4326)))
(assert (= (=> (and (= x3778 x945) x4624 (= x4904 x1977) (= (< (x1573 (x3272 274184521717934524641157099916833587231)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4624) (= x912 (x2877 (x3272 x2042)))) x3456) x1222))
(assert (= (=> (and (= x2013 (x2391 x59)) (= x2922 (< 0 x2013))) (and (=> (not x2922) x4032) (=> x2922 x3799))) x2478))
(assert (x1672 x1362))
(assert (x1672 x3111))
(assert (x1672 x5016))
(assert (x1672 x862))
(assert (x963 x1587))
(assert (= x4446 (=> (and (= x1520 (x2856 x906)) (= x1139 (x1505 255 x1520)) (= x2329 (= x1139 x1520))) (and (=> (not x2329) x4498) (=> x2329 x3669)))))
(assert (= (ite (= x4979 x588) 0 (x2591 x588)) (x60 x588)))
(assert (= (=> (and (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2759) x4825) (= x3832 (x2276 (+ x4825 x1359))) (= x2484 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3985) true) (> 32 x3985)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3985))) (= x2759 (x2276 (+ 31 x3985)))) (and (=> x2484 x4032) (=> (not x2484) x3507))) x818))
(assert (x1672 x4939))
(assert (= (x2182 x1176) (ite (and x5010 (not x2552) x1100) (x4004 x1176) (ite (and x1100 (not x327) (not x5010) (not x2552)) (x3054 x1176) (x4691 x1176)))))
(assert (x1672 x4413))
(assert (= (and x4099 (not x4834)) x216))
(assert (= x1119 (and x1200 (not x2298))))
(assert (x1814 x757 x128))
(assert (x4182 x1634))
(assert (= (and x3900 (not x2463)) x3639))
(assert (x1672 x4823))
(assert (= x729 x1402))
(assert (x1672 x3883))
(assert (x1672 x3313))
(assert (x1672 x1871))
(assert (= x1471 (and x4329 (not x70))))
(assert (x1814 x657 x4228))
(assert (= x5195 (and x2780 x4961)))
(assert (= (and (not x4400) x4366) x3763))
(assert (= (=> (= x2463 (= 274184521717934524641157099916833587206 x3950)) (and (=> (not x2463) x5223) (=> x2463 x2886))) x1940))
(assert (x963 x1541))
(assert (x963 x5118))
(assert (= (=> (and (= (x3453 x3550) x4999) (= (< 0 x4999) x4665)) (and (=> (and (= 0 x489) (not x4665)) x3400) (=> x4665 x3164))) x3354))
(assert (x1672 x1062))
(assert (= (=> (and (= x2002 0) (= x5138 x1882)) x686) x2483))
(assert (= (=> (and (not (= x3142 2514000705)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1913) (< 0 x5181) (= (or (and (= (<= x2018 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x2018)) (> x2018 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2157) (= x4735 x2385) (= x2385 68) (not (= x3142 826074471)) (= x2018 (x529 (- x2385 4))) (not (= x3142 1889567281)) (not (< x3142 826074471)) (= 2835717307 x3142) (= (x4232 (x3272 274184521717934524641157099916833587206)) x5181) (not (< x2385 4)) (= x2360 x4052) (= x2124 x1545)) (and (=> x2157 x1979) (=> (not x2157) x2839))) x1504))
(assert (x1672 x3362))
(assert (= x5041 (=> (and (or (and (= (x2276 (+ x4303 x2945)) x3968) (= x100 (x2276 (+ x4045 96))) (= x3968 x59) (= x555 (x2276 (+ 63 x1821))) (not x2921) (= x4303 x2644) (= x2945 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x555))) (and (= x4303 x59) x2921 (= x2644 96))) (= x2921 (= 0 x1821))) x2898)))
(assert (= x3764 (and x795 x2889)))
(assert (x1672 x1333))
(assert (= x3444 (and x1745 (not x2142))))
(assert (=> (<= x1767 10000) (= (x3272 x1767) (x747 x1767))))
(assert (x1672 x1426))
(assert (= x1912 (=> (and (= (x1443 x3792) x3877) (= (= x1873 0) x3802) (= x1873 (x4232 (x3272 x4007))) (= (x1505 1461501637330902918203684832716283019655932542975 x3877) x4007) (= x4049 (x2276 (+ x1482 x4205))) (= 4 x1418)) (and (=> (not x3802) x926) (=> x3802 x4498)))))
(assert (= (=> (and (= (= x1439 x2497) x5044) (= x1439 (x1505 1461501637330902918203684832716283019655932542975 x2497))) (and (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2990) x5044 (>= x2990 0) (= x4836 (x1505 1461501637330902918203684832716283019655932542975 x1625)) (= 1 x5278) (= (x4708 (x3272 x4836) (x747 1) 0) x4889) (= x3644 32) (= x2990 (x3290 x4889))) x939) (=> (not x5044) x1038))) x2056))
(assert (x1672 x58))
(assert (= 0 (x552 x737)))
(assert (= (and (not x1090) x4910) x2027))
(assert (x963 1461501637330902918203684832716283019655932542975))
(assert (= (and (not x5233) x38) x1375))
(assert (x1672 x513))
(assert (= x3911 (x3272 (x4643 x3911))))
(assert (= (and (not x3240) x3628) x2889))
(assert (= x3791 (and x4282 x5071)))
(assert (= x3614 (=> (and (= (x2276 (+ x1007 64)) x4888) (= x3037 0) (= x2780 (= x3057 x1511)) (= x581 (x3231 x1007)) (= (x2276 (+ x1342 160)) x1641) (= x1007 (x2276 (+ x1342 64))) (= (x2276 (+ x1342 32)) x575) (= (x1753 x2480) x3057) (= (x4459 x4309) x2480) (= x3424 (x1505 1461501637330902918203684832716283019655932542975 x589)) (= x1511 (x2391 x581)) (= x4309 (x2276 (+ x575 64)))) (and (=> (not x2780) x4032) (=> x2780 x1037)))))
(assert (x1672 x36))
(assert (x1672 x4122))
(assert (x963 x5251))
(assert (x1672 x1752))
(assert (x1672 x2159))
(assert (x1672 x822))
(assert (= x1880 (=> (and (= x1697 (x2276 (+ x1175 32))) (= (x2276 (+ 32 x2285)) x1097) (= (mod (* 32 x1404) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2285) (= x1278 (= x1404 0)) (or x1278 (and (not x1278) (= x4546 (mod (* 32 x1404) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x4842 (x2276 (+ x4546 x1697))) (< x4578 1461501637330902918203684832716283019655932542976) (= (x4659 (x747 1) 0) x644) (= x3565 (x2276 (+ 64 x1175))) (= x1414 (x307 x3911 1)) (<= x4578 1461501637330902918203684832716283019655932542975) (>= x4578 0) (= (x4659 (x747 1) 0) x3911) (= (div (mod (- (x4643 x3911) (x4643 x644)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) x2749) (or (and (= x2902 (x5126 x1414)) (= (x2276 (+ x1697 64)) x1475) x698 (< x2902 1461501637330902918203684832716283019655932542976) (= x4653 (x4659 (x747 1) 0)) (<= 0 x2902) (not x476) (= (div (mod (- (x4643 x1414) (x4643 x4653)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) x4817) (<= x2902 1461501637330902918203684832716283019655932542975) (= x476 (> x4842 x1475))) (not x698)) (= (> x4842 x3565) x698) (= x4578 (x5126 x3911)))) (= (x2276 (+ x1097 x1175)) x2270)) x1105)))
(assert (x963 x351))
(assert (= x2447 (and x1881 (not x1976))))
(assert (= x1593 (=> (and (= x986 (x1505 1461501637330902918203684832716283019655932542975 x4134)) (= (= x1087 0) x2298) (= x420 (x1505 1461501637330902918203684832716283019655932542975 x4570)) (= x2479 (x1681 x5109)) (= x4382 (x2276 (+ x1381 36))) (= (x2276 (+ 32 x3353)) x5109) (= x2252 (x2276 (+ x1381 4))) (= x1087 (x4232 (x3272 x986))) (= x4729 (x1505 1461501637330902918203684832716283019655932542975 x2479))) (and (=> x2298 x4032) (=> (and (= x4261 (> x916 0)) (not x2298) (or (and (= x570 1) x4261 (< x5065 4294967296)) (and (not x4261) (= x570 x916)))) x2231)))))
(assert (= x1646 (and (not x1236) x2963)))
(assert (x1672 x1865))
(assert (= (and (not x4250) x2586) x2412))
(assert (x963 x314))
(assert (x1672 x2851))
(assert (x1672 x1432))
(assert (x1672 x400))
(assert (= x576 (and (not x3062) x4625)))
(assert (x1814 x5168 x79))
(assert (x1672 x104))
(assert (= (ite (= x953 x1858) x3439 (x4983 x953)) (x201 x953)))
(assert (x1672 x1497))
(assert (x1672 x428))
(assert (x1814 x4404 x4314))
(assert (x1672 x82))
(assert (= 0 (x552 x361)))
(assert (= (x747 117300739) (x3272 117300739)))
(assert (= (and x2779 (not x1312)) x4099))
(assert (= x3946 (or x4808 x4447)))
(assert (x1672 x2360))
(assert (= (x4643 (x3272 x1574)) x1574))
(assert (= (x4643 (x747 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x1672 x2497))
(assert (= x3422 (=> (and (= x4411 (< 1 x1198)) (not x4411) (= x1749 x470) (= (x2391 x78) x1198)) x2150)))
(assert (= x4473 (or (and x661 x4588) (and (not x2507) x4269))))
(assert (x1672 x421))
(assert (= (or (and x2974 (not x2810)) (and x4545 (not x842))) x1745))
(assert (x1672 x4502))
(assert (= (ite (and x571 x4953 (not x1143)) (x256 x4750) (x3290 x4750)) (x4188 x4750)))
(assert (x1672 x2940))
(assert (x1672 x2413))
(assert (= (=> (and (= (x2276 (+ x4297 x5208)) x953) (= x5202 (x2276 (+ 31 x4465))) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5202) x4297) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4465) true) (< x4465 32)) (> x4465 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1236)) (and (=> x1236 x4498) (=> (not x1236) x1715))) x5074))
(assert (x1672 x4948))
(assert (x1672 x1254))
(assert (x963 x87))
(assert (x1672 x3606))
(assert (=> (<= x2020 10000) (= (x747 x2020) (x3272 x2020))))
(assert (=> (>= 10000 x276) (= (x3272 x276) (x747 x276))))
(assert (x1814 x2503 x2778))
(assert (= x660 (x4643 (x3272 x660))))
(assert (x4182 x117))
(assert (= (x269 x1689) (ite (= x381 x1689) x1101 (x2138 x1689))))
(assert (x1672 x4763))
(assert (= x2739 (and (not x5304) x2301)))
(assert (x1814 x351 x3587))
(assert (= (and x5099 (not x3427)) x3387))
(assert (x1814 x3127 x4522))
(assert (x4494 x3287 x857 x4059 x297))
(assert (x1672 x2234))
(assert (x1672 x1097))
(assert (x1672 x2747))
(assert (= (x4100 x2830) (ite (= x1515 x2830) x2532 (x540 x2830))))
(assert (x1672 x5137))
(assert (= x2290 (=> (and (= (mod (* x4908 x3572) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2695) (= (> x1242 0) x2673)) (and (=> (not x2673) x4032) (=> (and x2673 (= (div x2695 x1242) x1309) (= x1309 x4354)) x2935)))))
(assert (= 1889567281 (x4643 (x747 1889567281))))
(assert (= x5071 (and x5026 x3729)))
(assert (x1814 x2716 x74))
(assert (= (=> (and (< x309 1461501637330902918203684832716283019655932542976) (>= x81 0) (= (x307 x3039 2) x4482) (<= x4537 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1862 (x3063 x3039)) (= x4537 (x1221 x1741)) (= (x2540 x4482) x309) (<= x81 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x5185) (= (x750 x1583) x3892) (= (x2276 (+ x1175 32)) x1583) (<= x3594 1461501637330902918203684832716283019655932542975) (<= 0 x1862) (>= 1461501637330902918203684832716283019655932542975 x1862) (<= 0 x3594) (= (x749 x2946) x81) (= x3059 (x307 x3284 2)) (= x3284 (x307 x3039 1)) (= x5224 (x2276 (+ x4149 64))) (= x4684 (x2276 (+ 32 x493))) (= (x2957 x2270) x1578) (= x2946 (x307 x4482 2)) (= x1741 (x307 x3059 2)) (= x4149 (x2276 (+ 64 x4684))) (= (x4761 x3059) x5185) (>= x309 0) (= x3594 (x538 x3284)) (> 1461501637330902918203684832716283019655932542976 x1862) (> 1461501637330902918203684832716283019655932542976 x3594) (= x428 (x2276 (+ 64 x20))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5185) (= x2882 (x1505 1461501637330902918203684832716283019655932542975 x3892)) (= (x2276 (+ x493 192)) x3555) (= (x4708 (x3272 x2882) (x747 2) 0) x3039) (= x661 (< 0 x1578)) (= x20 (x2276 (+ x493 64))) (<= x309 1461501637330902918203684832716283019655932542975) (>= x4537 0)) (and (=> (and (= x4242 x3555) (not x702) (= x345 (x2276 (+ 32 x2270))) (= (x40 x1175) x1116) (= x702 (< 1 x1116)) x661) x694) (=> (not x661) x4498))) x1868))
(assert (= x2809 (=> (and (= x1382 (x2391 x78)) (= (> x1382 0) x3212)) (and (=> (not x3212) x4032) (=> x3212 x3200)))))
(assert (x1672 x4963))
(assert (=> (<= x455 10000) (= (x747 x455) (x3272 x455))))
(assert (= (and x2756 x4473) x817))
(assert (x1672 x1412))
(assert (= x3662 (=> (and (= (> x4312 0) x990) (= (x3966 x2292) x4312)) (and (=> (not x990) x4498) (=> x990 x1079)))))
(assert (= x2376 (and x2582 x3145)))
(assert (x4494 x1347 x3070 x701 x1193))
(assert (x1672 x4639))
(assert (x1672 x2319))
(assert (x1672 x3909))
(assert (= (=> (and (= x2239 x4291) (= x4033 x5259)) x2728) x2865))
(assert (x963 x5110))
(assert (= (=> (and (= (x2276 (+ x683 x4052)) x3806) (= x4330 (< x3806 x683))) (and (=> (and (= x4294 (x4708 (x3272 x1048) (x747 1) 0)) (not x4330) (= (x1505 1461501637330902918203684832716283019655932542975 x2124) x1048) (= 1 x1392) (= x4470 x340) (= x739 32)) x1629) (=> x4330 x1979))) x1239))
(assert (= (=> (and (= (x1505 1461501637330902918203684832716283019655932542975 x2497) x3071) (= x2628 (= x3071 x2497))) (and (=> (not x2628) x989) (=> x2628 x2988))) x1558))
(assert (= (x4643 (x307 x10 2)) (+ 2 (x4643 x10))))
(assert (x1672 x3331))
(assert (x1672 x2757))
(assert (x1672 x1139))
(assert (x1672 x4728))
(assert (x1672 x3308))
(assert (x1672 x1089))
(assert (= (and x888 (not x4274)) x2667))
(assert (x963 x3031))
(assert (x963 x2387))
(assert (x1672 x5114))
(assert (= (or (and x2036 (not x1939)) (and x2649 x840)) x141))
(assert (= x2576 (=> (and (= 0 x370) (= x2929 x2413)) x3630)))
(assert (x1672 x3340))
(assert (x1672 x3315))
(assert (x1672 x3318))
(assert (=> (<= x5231 10000) (= (x3272 x5231) (x747 x5231))))
(assert (= (and (not x3562) x1149) x2454))
(assert (x4182 x4167))
(assert (x1672 x75))
(assert (= (=> (= x5206 (= x1878 274184521717934524641157099916833587202)) (and (=> x5206 x1944) (=> (not x5206) x5113))) x2472))
(assert (x1672 x3622))
(assert true)
(assert (= x3591 (x4643 (x3272 x3591))))
(assert (= x929 (=> (and (= x4163 0) (= x1842 x692)) x2547)))
(assert (x1672 x4955))
(assert (x1672 x94))
(assert (x1672 x4104))
(assert (x4182 x1332))
(assert (x1672 x4444))
(assert (x1672 x2929))
(assert (x963 x2289))
(assert (x1672 x2718))
(assert (= true x2089))
(assert (= (=> (and (= x2214 (= x557 x3857)) (= x557 (x328 x953)) (= x3857 (x1505 1461501637330902918203684832716283019655932542975 x557))) (and (=> x2214 x385) (=> (not x2214) x4498))) x1330))
(assert (= x3435 (=> (and (= x4413 (mod (* x2620 x622) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3708 (< 0 x2766))) (and (=> (and (= x360 x1841) (= x1841 (div x4413 x2766)) x3708) x2048) (=> (not x3708) x4498)))))
(assert (x1672 x493))
(assert (= (x4643 (x3272 x5089)) x5089))
(assert (= x3485 (and x456 (not x15))))
(assert (=> (>= 10000 x1501) (= (x3272 x1501) (x747 x1501))))
(assert (x1672 x3500))
(assert (x1672 x1511))
(assert (x1814 x202 x1498))
(assert (x1672 x3524))
(assert (x1672 x14))
(assert (x4182 x3012))
(assert (= x117 (x4643 (x3272 x117))))
(assert (= x4913 (and (not x174) x2190)))
(assert (x1672 x126))
(assert (x1672 x4348))
(assert (x1672 x946))
(assert (= (x1318 x5175) (ite (= x5175 x126) 0 (x3379 x5175))))
(assert (= x1634 (x4643 (x3272 x1634))))
(assert (x963 x3360))
(assert (=> (<= x4165 10000) (= (x3272 x4165) (x747 x4165))))
(assert (=> (<= x4322 10000) (= (x3272 x4322) (x747 x4322))))
(assert (x1672 x3757))
(assert (= true x2320))
(assert (= (and x4237 (not x1568)) x724))
(assert (x1672 x2626))
(assert (= (and x2022 (not x3241)) x2779))
(assert (x1672 x1475))
(assert (x1672 x1789))
(assert (= x2680 (and x4321 x4273)))
(assert (= (=> (and (= x2907 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)) (= (> x2465 x2907) x1549)) (and (=> (and (= (mod (* x3115 x2465) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4897) (= x4897 x2319) (not x1549)) x230) (=> x1549 x4498))) x358))
(assert (x1672 x4194))
(assert (= (or (and x668 (not x1908)) (and x3889 (not x427))) x3534))
(assert (= 0 (x1298 x3792)))
(assert (x1672 x1386))
(assert (x1672 x945))
(assert (= x697 (and x2442 (not x3156))))
(assert (=> (<= x2840 10000) (= (x747 x2840) (x3272 x2840))))
(assert (x1672 x3621))
(assert (x1672 x4007))
(assert (x1672 x1430))
(assert (x4182 x2840))
(assert (= (=> (and (<= x1332 1461501637330902918203684832716283019655932542975) (<= 0 x1332) (= x1132 (x1505 1461501637330902918203684832716283019655932542975 x3495)) (= (= x4225 0) x2592) (= (x4232 (x3272 x1332)) x4225) (= 128 x4467) (> 1461501637330902918203684832716283019655932542976 x1332) (= (x4708 (x3272 x1132) (x747 2) 0) x2619) (= x1332 (x3063 x2619))) (and (=> x2592 x4032) (=> (not x2592) x4802))) x3492))
(assert (= x4819 (and (not x5037) x2663)))
(assert (x1672 x4225))
(assert (= (and x5029 (not x1001)) x2558))
(assert (= (and x1554 (not x3265)) x2273))
(assert (= (=> (= (= x670 0) x108) (and (=> (not x108) x3128) (=> x108 x4032))) x1217))
(assert (= x2216 (and x841 (not x3739))))
(assert (= x3742 (and x4500 x5206)))
(assert (x1814 x2479 x3532))
(assert (x1672 x252))
(assert (= (and x1224 (not x1033)) x1127))
(assert (x1672 x3758))
(assert (x1672 x4513))
(assert (x1672 x3449))
(assert (= x1779 (and x616 x265)))
(assert (= x3959 (=> (and (= (x529 (- x4758 32)) x244) (= (x529 (- x3243 x18)) x4758) (= (x1505 26959946667150639794667015087019630673637144422540572481103610249215 x2300) x3002) (= x3716 (x2276 (+ x3002 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= (x4232 (x3272 x2042)) x1013) (= (x2276 (+ x18 100)) x3243) (= (x2276 (+ 32 x18)) x2280) (= (x121 x2280) x2300) (= (x2276 (+ x18 68)) x1230) (= (> x1013 0) x1722) (= (x2276 (+ x2203 128)) x2826) (= x2042 (x1505 1461501637330902918203684832716283019655932542975 x2411)) (= x4700 (x2276 (+ x1947 x2107))) (= x2203 (x2276 (+ x18 36))) (= 0 x2208)) (and (=> (and (= (< 0 x3112) x1525) x1722 (or (not x815) (and (= x4380 (x2276 (+ x3112 x2826))) x815)) (= (> x3790 x3112) x815) (= x3112 (x4433 x18)) (or (and (= x3790 0) (not x1525)) (and (= x1796 x2826) (= (< 32 x3112) x4432) (= x4710 x2280) x1525 (= x4116 (x4409 x4710)) (or (and (= 32 x3790) (not x4432)) (and (= x3707 (x2276 (+ x18 64))) (or (and (or (and (not x3487) (= 96 x3790)) (and (= (x2276 (+ x3243 160)) x3805) (= 128 x3790) x3487 (= x1941 (x4409 x4189)) (= x4189 (x2276 (+ 128 x18))) (= x4526 (< 128 x3112)) (not x4526))) (= (x2276 (+ x3243 128)) x5057) (= (x2276 (+ 96 x18)) x943) (= (> x3112 96) x3487) (= (x4409 x943) x3923) x3725) (and (not x3725) (= x3790 64))) (= x3725 (< 64 x3112)) (= x1688 (x4409 x3707)) (= (x2276 (+ x3243 96)) x3967) x4432))))) x3795) (=> (not x1722) x4498)))))
(assert (= x1323 (and x3664 (not x2244))))
(assert (x1672 x711))
(assert (x1814 x589 x4325))
(assert (= (and x3338 x804) x213))
(assert (x1672 x410))
(assert (=> (<= x3468 10000) (= (x747 x3468) (x3272 x3468))))
(assert (x963 x3978))
(assert (x1672 x3581))
(assert (= x1211 (=> (and (= (x1505 255 x2717) x508) (= x24 (= x2717 x508)) (= x2717 (x2670 x1644))) (and (=> (not x24) x4032) (=> x24 x664)))))
(assert (x1672 x1425))
(assert (x1672 x4722))
(assert (x963 x2952))
(assert (= (=> (and (= x4299 (= x4826 0)) (= x4351 (x1505 1461501637330902918203684832716283019655932542975 x3074)) (= x4826 (x4232 (x3272 x4351))) (= x3074 (x1681 x3861)) (= x1773 4)) (and (=> x4299 x4032) (=> (not x4299) x3929))) x3584))
(assert (x963 x3670))
(assert (= (or (and x1788 x3506) (and x2889 (not x795)) (and x3240 x3628) (and x4667 x3965) (and x4507 x3764) (and x4466 x1256)) x2825))
(assert (x963 x573))
(assert (x1672 x1363))
(assert (x1814 x4165 x2694))
(assert (= x4725 true))
(assert (x1672 x384))
(assert (= (=> (and (= (< x5226 x5094) x858) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1289) x5226)) (and (=> x858 x4032) (=> (and (= x2494 (mod (* x5094 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x858) (= x2494 x850)) x4959))) x2692))
(assert (= (or (and x751 x4338) x4534) x3473))
(assert (= x4527 (=> (and (= x2445 (or (and (< x2005 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2005) true)) (> x2005 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4268) x1303) (= (x2276 (+ 31 x2005)) x4268) (= (x2276 (+ x1303 x2397)) x906)) (and (=> (not x2445) x3044) (=> x2445 x4498)))))
(assert (= (or (and x3387 (not x158)) (and x5099 x3427)) x1380))
(assert (x1672 x4480))
(assert (x1672 x5194))
(assert (x1672 x1253))
(assert (x1672 x2453))
(assert (x1672 x1528))
(assert (x1672 x1161))
(assert (= (or (and x823 x459) (and x4896 x1539)) x4640))
(assert (x4182 x3315))
(assert (=> (<= x1574 10000) (= (x3272 x1574) (x747 x1574))))
(assert (= x3309 (=> (and (= (x1505 1461501637330902918203684832716283019655932542975 x3759) x4194) (= (x611 x1342) x3759) (= (x4232 (x3272 x4194)) x3724) (= (= 0 x3724) x4987)) (and (=> (and (not x4987) (or (and x594 (< x1735 4294967296) (= x4009 1)) (and (= x4939 x4009) (not x594))) (= (< 0 x4939) x594)) x1900) (=> x4987 x4032)))))
(assert (x963 x2754))
(assert (x1672 x27))
(assert (x4494 x221 x5039 x3355 x142))
(assert (x1672 x11))
(assert (x1672 x1638))
(assert (x1672 x2672))
(assert (x1672 x4264))
(assert (= (=> (= x1450 (= 0 x4076)) (and (=> x1450 x4032) (=> (not x1450) x2218))) x852))
(assert (= (=> (and (= (x40 x1175) x329) (= (< 18446744073709551615 x329) x793)) (and (=> (and (or (and (= x3570 (x529 (- x329 1))) (= (x2276 (+ x1680 64)) x2045) (= (x2276 (+ x2045 64)) x2658) (= x1447 (< 0 x3570)) (= x4979 (x2276 (+ 32 x1680))) (= x1713 (x2276 (+ x2270 32))) (= (x2276 (+ x3510 64)) x5048) (not x5145) (= x4566 (x2276 (+ x1680 192))) (= (x2276 (+ 64 x2270)) x2189) (= x3510 (x2276 (+ 64 x4979))) (or (and (= x3599 x4566) (not x1447)) (and (= x1463 x3599) (= (x2276 (+ x2453 64)) x2666) (= x112 (x2276 (+ x1680 224))) (= (x529 (- x3570 1)) x3952) (not x3083) x1447 (= (x2276 (+ x1680 384)) x1463) (= x2453 (x2276 (+ x112 64))) (= x3083 (> x3952 0)) (= x4364 (x2276 (+ 64 x1782))) (= (x2276 (+ x4566 64)) x1782))) (= x3599 x493)) (and (= x1680 x493) x5145)) (= (mod (* 32 x329) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4202) (= x5145 (= x329 0)) (= x1680 (x2276 (+ x2270 x1965))) (not x793) (= x1965 (x2276 (+ x4202 32)))) x4785) (=> x793 x4498))) x1105))
(assert (x1672 x3092))
(assert (= x1000 (=> (and (= x4142 x4195) (= x5167 x2562)) x4628)))
(assert (= (=> (and (= (< 0 x1409) x3209) (= (x3453 x3550) x1409)) (and (=> x3209 x605) (=> (not x3209) x4498))) x3634))
(assert (= x3232 (=> (and (= x2615 0) (= x1165 x2207)) x1225)))
(assert (x1672 x5217))
(assert (= (and x949 (not x1846)) x2788))
(assert (x1672 x3721))
(assert (x1672 x1045))
(assert (x1672 x261))
(assert (= x3380 (and (not x3539) x1429)))
(assert (x963 x4615))
(assert (x1672 x5287))
(assert (x1672 x1778))
(assert (= (=> (and (= x3198 (x2276 (+ 32 x2292))) (= x4375 (< x235 0)) (= x1077 (x3767 x3198)) (= x235 (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1077)))) (and (=> x4375 x4498) (=> (and (not x4375) (= x3029 x530) (not x386) (= (< 1 x4080) x386) (= x4080 (x3966 x2292)) (= x530 x1077)) x3663))) x1079))
(assert (= x1196 (and (not x5125) x1707)))
(assert (= (x4643 (x3272 x1767)) x1767))
(assert (= (x5307 x4187) (ite (and (not x2552) x5010 x1100) (x132 x4187) (ite (and (not x327) (not x5010) (not x2552) x1100) (x659 x4187) (x4235 x4187)))))
(assert (x1672 x5054))
(assert (x1672 x786))
(assert (x1672 x2514))
(assert (x1672 x3028))
(assert (x4494 x4012 x1605 x1419 x4000))
(assert (x1672 x1916))
(assert (x1672 x4350))
(assert (= (=> (and (= x787 (> x1536 0)) (= x1536 (x40 x1175))) (and (=> (not x787) x4498) (=> x787 x1868))) x1969))
(assert (x1672 x4035))
(assert (= x4249 (and (not x3254) x5196)))
(assert (= (ite (and (not x1143) x4953 x571) (x256 x406) (x3290 x406)) (x4188 x406)))
(assert (= (or x2316 (and x1017 x199)) x3679))
(assert (x1672 x3452))
(assert (= x2022 (and (not x4747) x1388)))
(assert (= (x747 274184521717934524641157099916833587202) (x3272 274184521717934524641157099916833587202)))
(assert (x1672 x2287))
(assert (x1672 x2933))
(assert (= 0 (x132 x4187)))
(assert (= (=> (and (= (= 0 x2933) x2024) (= (= 0 x1864) x215) (= (ite (> x3225 x2843) 1 0) x3237) (= (ite (not x2024) 1 0) x4793) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933) x2843) (= x1864 (x1505 x4793 x3237))) (and (=> (not x215) x4032) (=> x215 x1378))) x568))
(assert (= x5079 (or (and x3064 x1331) (and (not x4518) x2455))))
(assert (x1672 x4123))
(assert (x1672 x1691))
(assert (x1672 x5018))
(assert (x1672 x938))
(assert (x1672 x4950))
(assert (x963 x913))
(assert (= x2440 true))
(assert (= x5160 (and x3649 (not x3393))))
(assert (x1672 x1914))
(assert (x1672 x3178))
(assert (x1672 x1020))
(assert (= (and (not x1695) x454) x5148))
(assert (x1672 x1622))
(assert (= (+ (x4643 x3039) 1) (x4643 (x307 x3039 1))))
(assert (= x1723 (=> (and (= x1918 (= x1778 x1453)) (= x2037 (x554 x4937)) (= (x40 x2037) x1453) (= x877 (x1598 x4051)) (= (x1799 x5) x1778) (= (x4490 x4242) x757)) (and (=> (not x1918) x4498) (=> x1918 x1179)))))
(assert (x1672 x3495))
(assert (x4494 x3847 x1877 x4553 x684))
(assert (= x4447 (or (and x5044 x2633) x308)))
(assert (x1672 x3502))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x4643 (x747 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x1672 x291))
(assert (= (and x4652 x207) x2434))
(assert (= (and x2697 x3432) x4006))
(assert (x1672 x3835))
(assert (x1672 x4658))
(assert (= (x4643 (x3272 x2020)) x2020))
(assert (= (ite (= x234 x1697) x4578 (x2169 x234)) (x4391 x234)))
(assert (=> (<= x3362 10000) (= (x3272 x3362) (x747 x3362))))
(assert (= (=> (and (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4234) x2364) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1735) (and (= (<= x1735 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1735 32))) x3463) (= (x2276 (+ x2364 x3412)) x3638) (= x4234 (x2276 (+ 31 x1735)))) (and (=> x3463 x4032) (=> (not x3463) x4107))) x3854))
(assert (= (=> (and (= x258 (x2276 (+ x1242 x3551))) (= (> x258 x649) x4192)) (and (=> (not x4192) x2838) (=> x4192 x4032))) x4595))
(assert (= (and x2421 (not x5072)) x3350))
(assert (= (or (and x3579 x576) (and x3955 x5260)) x5240))
(assert (x963 x3998))
(assert (= (=> (and (= (x2276 (+ x4496 x5032)) x622) (= 4 x1458) (= x2608 (x2225 x3291)) (= (x1505 1461501637330902918203684832716283019655932542975 x2608) x1767) (= x5155 (= 0 x5229)) (= (x4232 (x3272 x1767)) x5229)) (and (=> (not x5155) x4145) (=> x5155 x4498))) x4579))
(assert (x4680 x711 x3568))
(assert (=> (>= 10000 x3546) (= (x3272 x3546) (x747 x3546))))
(assert (= (x3741 x4710) 0))
(assert (= (=> (and (= x206 (x2276 (+ x5151 32))) (= x1315 (x611 x1342)) (= x199 (= x2493 0)) (= (x88 x206) x1176)) (and (=> (not x199) x3819) (=> (and (= x4571 x2538) (= 0 x2747) x199) x2561))) x1449))
(assert (x1672 x4789))
(assert (x1672 x5008))
(assert (= (=> (and (= x2851 (x4232 (x3272 274184521717934524641157099916833587206))) (not (= 826074471 x1140)) (= x1487 x2514) (= x2160 x1545) (= x2514 36) (not (> 4 x2514)) (= 1889567281 x1140) (not (> 826074471 x1140)) (> x2851 0) (= x976 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x513) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x513)) (> 32 x513)))) (= x513 (x529 (- x2514 4))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2924)) (and (=> (not x976) x1357) (=> x976 x1931))) x884))
(assert (= x3897 (=> (= (= 274184521717934524641157099916833587202 x4124) x846) (and (=> (and (= (x529 (- x5314 4)) x4694) x846 (not (= x1133 826074471)) (not (< x5314 4)) (> x4815 0) (or (and x993 (= x197 0) (= x1526 x355)) (and (= (x3290 x2942) x1783) (>= x1783 0) (not x993) (= 274184521717934524641157099916833587231 x3053) (= 1 x197) (= 32 x355) (= (x4708 (x3272 274184521717934524641157099916833587231) (x747 1) 0) x2942) (<= x1783 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (or (and (= true (<= x4694 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4694 32)) (> x4694 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x993) (= x4815 (x4232 (x3272 274184521717934524641157099916833587202))) (not (< x1133 826074471)) (= x483 x5314) (= 36 x5314) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2899) (= x1133 1889567281)) x5128) (=> (not x846) x2456)))))
(assert (x1672 x3697))
(assert (x1672 x3578))
(assert (= (x2866 x586) (ite (= x586 x2077) x794 (x5030 x586))))
(assert (= x2001 true))
(assert (x1672 x69))
(assert (x1672 x4283))
(assert (= 0 (x2883 x1092)))
(assert (= (=> (and (= (x4232 (x3272 274184521717934524641157099916833587206)) x1898) (= 1889567281 x3292) (not (< x2791 4)) (= x5190 (x529 (- x2791 4))) (not (< x3292 826074471)) (< 0 x1898) (= x2654 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x3395 x2698) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5190) true) (< x5190 32)) (> x5190 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2618) (not (= x3292 826074471)) (= 36 x2791) (= x2791 x3835)) (and (=> x2618 x1076) (=> (not x2618) x2038))) x1153))
(assert (x1672 x4200))
(assert (x4182 x4194))
(assert (x1672 x4783))
(assert (x1672 x791))
(assert (x1672 x1989))
(assert (=> (>= 10000 x2623) (= (x747 x2623) (x3272 x2623))))
(assert (x1672 x3998))
(assert (= (=> (and (= x1510 (= (x4811 x2622 x5086) 0)) (= 1 x711) (= x2622 (x1505 x711 x3568)) (= 1 x3850) (= (x1505 x3850 x5251) x5086) (= x5251 (ite (> 32 x2011) 1 0)) (= (ite (< x2011 78) 1 0) x3568)) (and (=> (and x1510 (= x3508 (> x2011 1)) (or (and (= x1289 10) (= 1 x5094) (not x3508)) (and (= (ite x5183 1 10) x5094) (= x5183 (= 0 x2793)) (not x771) (= x771 (< 1 x3256)) (= (x3692 x2011 1) x3256) (= 100 x1289) x3508 (= x2793 (x1505 1 x2011))))) x2692) (=> (and (= (x641 10 x2011) x850) (not x1510)) x4959))) x3818))
(assert (= (=> (and (= (< x1974 x2493) x731) (= (x4219 x222) x3633) (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3633)) x1974)) (and (=> x731 x4032) (=> (not x731) x457))) x3268))
(assert (x1672 x2820))
(assert (x1672 x4937))
(assert (x1672 x3858))
(assert (= (and x3281 x688) x949))
(assert (= x2733 (=> (and (= x4437 x1592) (= (= x1592 x2698) x3830)) (and (=> (and (= 1 x4317) (= x434 32) (>= x3706 0) x3830 (= (x3811 x1689) x3706) (= x1689 (x4708 (x3272 x1592) (x747 1) 0)) (<= x3706 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x2059) (=> (not x3830) x387)))))
(assert (= (and (not x4337) x3842) x2799))
(assert (x1672 x506))
(assert (x1672 x3002))
(assert (x1672 x3607))
(assert (= (and (not x823) x459) x3991))
(assert (= (=> (and (= x1751 (or (and (> 32 x4532) (= (<= x4532 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x4532 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3780) x1895) (= (x2276 (+ 31 x4532)) x3780) (= (x2276 (+ x1895 x813)) x472)) (and (=> x1751 x4498) (=> (not x1751) x403))) x4848))
(assert (=> (<= x4824 10000) (= (x747 x4824) (x3272 x4824))))
(assert (x1672 x2824))
(assert (= (=> (and (= x204 x2411) (= (= x202 x1992) x3814) (= x1992 (x1505 1461501637330902918203684832716283019655932542975 x202))) (and (=> x3814 x4621) (=> (not x3814) x4498))) x1726))
(assert (x1672 x2511))
(assert (x1672 x139))
(assert (x1672 x409))
(assert (= x2456 true))
(assert (x1672 x5227))
(assert (= (and (not x3620) x1737) x1648))
(assert (= x2706 (or (and x1216 x3430) x5052)))
(assert (x1672 x2402))
(assert (= (x4643 (x3272 x3395)) x3395))
(assert (x1672 x2875))
(assert (= x1163 (=> (and (= x5232 (x2276 (+ 4 x1438))) (= x2903 (x1505 1461501637330902918203684832716283019655932542975 x3753)) (= (= x3864 0) x4172) (= x3824 (x2276 (+ 64 x5232))) (= x5215 (x1505 1461501637330902918203684832716283019655932542975 x5168)) (= (x4232 (x3272 x996)) x3864) (= (x2276 (+ 36 x1438)) x3413)) (and (=> (and (not x4172) (= (> x1362 0) x4770) (or (and (= x1362 x109) (not x4770)) (and (> 4294967296 x1622) (= x109 1) x4770))) x1195) (=> x4172 x4498)))))
(assert (= (x269 x1299) (ite (= x1299 x381) x1101 (x2138 x1299))))
(assert (= (=> (= x889 (= 0 x1502)) (and (=> (not x889) x4848) (=> x889 x4498))) x680))
(assert (x1672 x5035))
(assert (= (=> (and (= (x4232 (x3272 x276)) x3009) (= x316 (= 0 x3009)) (= x276 (x1505 1461501637330902918203684832716283019655932542975 x2449)) (= x5082 4) (= x2449 (x750 x2737))) (and (=> (not x316) x44) (=> x316 x4498))) x3831))
(assert (= (x2700 x4571) 17154740991736861046558774992177620686056526479738507590741468237373194108928))
(assert (x1672 x370))
(assert (x1672 x4882))
(assert (x1672 x1531))
(assert (= (x4643 (x3272 x1521)) x1521))
(assert (= x4652 (and x3728 (not x3118))))
(assert (= (and x1335 (not x4787)) x2650))
(assert (x1672 x4382))
(assert (= (x747 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x3272 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (ite (and (not x1143) x4953 x571) (x1702 x521) (x3910 x521)) (x5030 x521)))
(assert (= x3979 (=> (and (= x2232 x2747) (= x2538 x1958)) x2561)))
(assert (x1672 x3367))
(assert (x4182 x986))
(assert (x1672 x3538))
(assert (= 0 (x1350 x2644)))
(assert (x1672 x3786))
(assert (x1672 x1078))
(assert (= x3873 (=> (and (= (mod (* x4350 x971) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1114) (= x4879 (> x870 0))) (and (=> x4879 x718) (=> (not x4879) x4032)))))
(assert (x1672 x3234))
(assert (= x464 (or (and (not x4443) x546) (and (not x3637) x349))))
(assert (x1672 x4603))
(assert (x1672 x1404))
(assert (x1672 x3031))
(assert (x1672 x109))
(assert (x1672 x4965))
(assert (x963 x2402))
(assert (= (=> (and (= (x4232 (x3272 x2752)) x1353) (= x3241 (= 0 x1353)) (= (x1505 1461501637330902918203684832716283019655932542975 x1544) x2752) (= (x4490 x4242) x1544)) (and (=> (and (= (> x11 0) x2383) (or (and (= 1 x2583) (< x3697 4294967296) x2383) (and (= x2583 x11) (not x2383))) (not x3241)) x583) (=> x3241 x4498))) x503))
(assert (= x1994 (or (and x2142 x1745) (and x4535 x4590) (and x4683 x2396) (and x2366 x1533))))
(assert (= (=> (and (= (= x811 x3863) x2789) (= x3863 x1251)) (and (=> (and x2789 (= (x3516 x2560) x2498) (= 32 x2088) (= (x4708 (x3272 x3863) (x747 1) 0) x2560) (= x4488 1) (<= x2498 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2498 0)) x4390) (=> (not x2789) x1319))) x3693))
(assert (= x1630 (=> (and (= x77 (x347 x5264)) (= (> x2011 0) x4597)) (and (=> x4597 x3818) (=> (and (= 1 x850) (not x4597)) x4959)))))
(assert (x1672 x5047))
(assert (x1672 x3277))
(assert (x1672 x2432))
(assert (x4182 x957))
(assert (x1672 x432))
(assert (x1672 x4532))
(assert (x1672 x4410))
(assert (x4182 x2668))
(assert (x1672 x4627))
(assert (x1672 x5112))
(assert (= x4844 (and x164 x1597)))
(assert (x1672 x1898))
(assert (= (and x4613 x2871) x3271))
(assert (= (x1292 x3931) (ite (= x3931 x1713) x1680 (x4923 x3931))))
(assert (= x3472 true))
(assert (= x2365 (=> (and (= (x307 x2154 2) x4087) (= (x4708 (x3272 x2853) (x747 3) 0) x2154) (= x4258 (< 2 x1565)) (< x1565 256) (= x2853 (x1505 1461501637330902918203684832716283019655932542975 x3495)) (= (x875 x4087) x1565)) (and (=> (and (= (= 1 x1565) x4461) (not x4258)) x2969) (=> x4258 x4032)))))
(assert (x1672 x5286))
(assert (x1672 x4824))
(assert (= x4653 (x3272 (x4643 x4653))))
(assert (= x3686 (and x5255 (not x1264))))
(assert (x1672 x3198))
(assert (x1672 x2012))
(assert (x1672 x2247))
(assert (x1672 x1862))
(assert (x1672 x1971))
(assert (x963 x1386))
(assert (x1672 x3009))
(assert (= (=> (and (= x3091 (or (> x3529 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x3529) (= (<= x3529 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= 36 x3732) (not (= x499 826074471)) (= (x529 (- x3732 4)) x3529) (= x410 x3732) (not (< x499 826074471)) (< 0 x4873) (= x499 1889567281) (= x1706 x4342) (= x1045 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (x4232 (x3272 274184521717934524641157099916833587202)) x4873) (not (> 4 x3732))) (and (=> x3091 x342) (=> (not x3091) x2931))) x3302))
(assert (x1672 x1462))
(assert (= x1247 (and x3629 (not x1157))))
(assert (x1672 x3952))
(assert (= (=> (and (= (= x5222 0) x1022) (= x913 (ite (< x4963 x4829) 1 0)) (= (x1505 x4869 x913) x3340) (= x4869 (ite (not x1022) 1 0)) (= x4963 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5222)) (= (= x3340 0) x2371)) (and (=> (not x2371) x4498) (=> x2371 x1764))) x2180))
(assert (= (=> (and (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2542) x4581) (= x2542 (x2276 (+ 31 x1023))) (= (x2276 (+ x2341 x4581)) x1359) (= x2244 (or (and (> 32 x1023) (= true (<= x1023 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1023 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> x2244 x4032) (=> (not x2244) x1936))) x2599))
(assert (x1672 x766))
(assert (x1672 x491))
(assert (= (x4643 (x307 x3039 2)) (+ 2 (x4643 x3039))))
(assert (= x2898 (=> (= x1493 (= x432 0)) (and (=> (not x1493) x2972) (=> x1493 x4032)))))
(assert (= x4802 (=> (= (= x1332 274184521717934524641157099916833587206) x41) (and (=> x41 x2973) (=> (not x41) x4469)))))
(assert (x1814 x2641 x1963))
(assert (= (x4643 (x747 29289127993025145568725129057828671567744754166070328588094505464281371246592)) 29289127993025145568725129057828671567744754166070328588094505464281371246592))
(assert (x1672 x5070))
(assert (x1672 x2997))
(assert (x1814 x3753 x760))
(assert (x1814 x2201 x1232))
(assert (x1672 x4868))
(assert (= (and x4913 x1345) x2808))
(assert (x1672 x3806))
(assert (x1672 x5210))
(assert (x1672 x333))
(assert (x1672 x4339))
(assert (= x1052 (=> (and (not (> 826074471 x4276)) (= 1889567281 x4276) (> x2847 0) (= x460 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= 36 x655) (= x4370 (x529 (- x655 4))) (= x1587 x1545) (= x1487 x655) (= x3475 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4370) true) (> 32 x4370)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4370))) (= x2847 (x4232 (x3272 274184521717934524641157099916833587202))) (not (< x655 4)) (not (= x4276 826074471))) (and (=> (not x3475) x1665) (=> x3475 x929)))))
(assert (x4182 x2623))
(assert (x1672 x4069))
(assert (x1672 x285))
(assert (x4494 x3899 x2601 x2112 x1746))
(assert (x1672 x1134))
(assert (=> (<= x2853 10000) (= (x3272 x2853) (x747 x2853))))
(assert (x1814 x2954 x4630))
(assert (= 0 (x3574 x5264)))
(assert (= x2481 (=> (= (= x3055 0) x3769) (and (=> (not x3769) x1484) (=> x3769 x4498)))))
(assert (x1672 x1656))
(assert (= x3033 (=> (and (= x5156 x48) (= x5156 36) (= x2949 (or (and (< x2745 32) (= true (<= x2745 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2745))) (< 0 x5129) (not (= 826074471 x514)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2432) (= 1889567281 x514) (= x5129 (x4232 (x3272 274184521717934524641157099916833587202))) (= x2745 (x529 (- x5156 4))) (= x1600 x3785) (not (> 826074471 x514)) (not (< x5156 4))) (and (=> (not x2949) x4936) (=> x2949 x2932)))))
(assert (x1814 x252 x3477))
(assert (x1672 x4815))
(assert (x1672 x1842))
(assert (x1672 x2353))
(assert (= (or (and x4213 x2120) (and x1196 x1223) (and x2832 x3603) (and x3796 x4857) (and x1707 x5125) (and x1131 (not x2628))) x2213))
(assert (x963 x980))
(assert (= (or (and x2415 (not x2039)) (and (not x4665) x1257)) x1388))
(assert (= (=> (and (= (x2957 x4835) x3358) (= x3809 (x2835 x934)) (= (> x3358 0) x3705) (= x4835 (x5238 x149))) (and (=> (not x3705) x4498) (=> x3705 x1060))) x3958))
(assert (= x4124 (x4643 (x3272 x4124))))
(assert (= x1110 (and x626 x4538)))
(assert (x1672 x4300))
(assert (x1672 x2321))
(assert (x1672 x2476))
(assert (x1672 x4239))
(assert (= x2730 (=> (and (= x1485 (not x217)) (= x217 x4394) (= x3286 (and x3049 x1759)) (= x1759 x1485) (= x1263 (not x3286)) (= x3049 x3531)) x1263)))
(assert (x1672 x860))
(assert (x1672 x1837))
(assert (x1672 x2235))
(assert (x1672 x3055))
(assert (x4680 x3978 x3036))
(assert (= x5310 (or (and (not x3918) x3185) (and x987 (not x2051)) (and x4577 (not x5265)))))
(assert (x1672 x1617))
(assert (x1672 x1023))
(assert (x963 255))
(assert (x1672 x263))
(assert (x1672 x5200))
(assert (x1672 x192))
(assert (= (=> (and (= (< 0 x3852) x1403) (= x3981 (x1598 x4051)) (= (x40 x1430) x3852) (= (x4490 x4242) x3869) (= x1430 (x554 x4937))) (and (=> x1403 x4357) (=> (not x1403) x4498))) x738))
(assert (x1672 x2082))
(assert (= x3659 true))
(assert (x2960 x1015))
(assert (= (ite (and (not x1143) x4953 x571) (x256 x3394) (x3290 x3394)) (x4188 x3394)))
(assert (x1672 x3594))
(assert (= (x4643 (x3272 x1132)) x1132))
(assert (= (and x2461 x3582) x2464))
(assert (= (=> (and (= (x2276 (+ 4 x3648)) x436) (= (x1505 1461501637330902918203684832716283019655932542975 x2411) x3591) (<= x3502 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587231 x43) (= (x1505 1461501637330902918203684832716283019655932542975 x2411) x1254) (= x3502 (x749 x4726)) (= (x529 (- x1724 x3648)) x1006) (= x1147 (x4708 (x3272 x3591) (x747 2) 0)) (= (x4232 (x3272 x1254)) x4921) (= (= 0 x4921) x1736) (<= 0 x3502) (= x4726 (x307 x1147 4)) (= x1724 (x2276 (+ x3648 36)))) (and (=> x1736 x4498) (=> (not x1736) x2896))) x1197))
(assert (x1672 x5213))
(assert (=> (<= x3950 10000) (= (x3272 x3950) (x747 x3950))))
(assert (= x1881 (and (not x1124) x4558)))
(assert (= (ite (= x1021 x2173) x4262 (x3528 x1021)) (x1326 x1021)))
(assert (x1672 x3455))
(assert (= x3752 (and x3190 (not x2958))))
(assert (= (=> (and (= (x4786 x5208) x4204) (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4204)) x4795) (= (< x4795 x3809) x2822)) (and (=> (not x2822) x1259) (=> x2822 x4498))) x1715))
(assert (x1672 x4351))
(assert (x1814 x1386 x4890))
(assert (x1672 x2551))
(assert (x4182 x2781))
(assert (= 0 (x552 x4569)))
(assert (x1672 x4677))
(assert (x1672 x3421))
(assert (x1672 x1960))
(assert (= (or (and (not x4330) x1509) x3299) x732))
(assert (= 0 (x552 x331)))
(assert (= x719 (=> (and (= (div x5104 x2748) x3476) (= x5104 (mod (* x3029 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (< x236 1000000000000000000) 1 0) x4899) (= x5090 (= x519 0)) (= x3125 (x1505 x4316 x4899)) (= (ite (not x5090) 1 0) x4316) (= x236 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x519)) (= (= 0 x3125) x4666)) (and (=> (not x4666) x4498) (=> (and (= x891 x3476) (= x1887 (mod (* x519 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1906 x1399) x4666 (= (div x1887 x2748) x1906)) x3559)))))
(assert (x4680 x1170 x27))
(assert (= x4558 (and x1422 (not x2217))))
(assert (x1672 x5151))
(assert (= (=> (= (= 0 x4155) x4787) (and (=> (not x4787) x5178) (=> x4787 x4498))) x2324))
(assert (x963 x5025))
(assert (x1814 x1315 x1983))
(assert (x1672 x4118))
(assert (x1672 x1832))
(assert (x4182 x3950))
(assert (= 0 (x3461 x4513)))
(assert (x1672 x820))
(assert (x1672 x3716))
(assert (x1672 x3065))
(assert (= (x5030 x586) (ite (and x4953 (not x1143) x571) (x1702 x586) (x3910 x586))))
(assert (x1672 x1659))
(assert (x1672 x5124))
(assert (x1672 x4407))
(assert (= x1999 (or (and x2789 x3505) x924)))
(assert (x1672 x634))
(assert (= x1076 (=> (and (= x1305 0) (= x4287 x294)) x4378)))
(assert (x1672 x3115))
(assert (x1672 x973))
(assert (x1672 x1030))
(assert (=> (>= 10000 x1878) (= (x3272 x1878) (x747 x1878))))
(assert (x1672 x1610))
(assert (= (and x1539 (not x4896)) x459))
(assert (x1672 x4415))
(assert (= x68 (=> (and (= x5007 (< 0 x850)) (= x4685 (mod (* x5096 x77) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x5007) x4032) (=> x5007 x3544)))))
(assert (x1672 x59))
(assert (= x3155 (=> (= (= x5009 274184521717934524641157099916833587202) x198) (and (=> (not x198) x4887) (=> (and (> x2256 0) (= 1 x670) (not (= 117300739 x4728)) (not (> 4 x3220)) x198 (= x3220 4) (= x1631 x3220) (not (= x4728 157198259)) (= x32 32) (= (x4232 (x3272 274184521717934524641157099916833587202)) x2256) (< x4728 826074471) (<= x445 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x445) (= x4224 10894474682274239493831243662817379401261526446360622092269559273883068006400) (= x4728 404098525)) x1217)))))
(assert (x1672 x1574))
(assert (x963 x2959))
(assert (x1672 x3560))
(assert (x1672 x3631))
(assert (x1672 x4462))
(assert (=> (>= 10000 x1098) (= (x747 x1098) (x3272 x1098))))
(assert (x1672 x5309))
(assert (x4182 274184521717934524641157099916833587231))
(assert (= x840 (and x741 x3350)))
(assert (= x4577 (and x3918 x3185)))
(assert (x1672 x887))
(assert (x963 x193))
(assert (= (=> (= x4181 (= x4351 274184521717934524641157099916833587202)) (and (=> (not x4181) x2246) (=> (and (not (< x5165 4)) x4181 (= 4 x5165) (= 1 x2817) (< 0 x548) (not (> 826074471 x3566)) (= x5165 x1773) (<= x4622 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4622 0) (= x3566 826074471) (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 x1656) (= x548 (x4232 (x3272 274184521717934524641157099916833587202))) (= x2842 32)) x1624))) x3346))
(assert (= (=> (and (= (x4399 x4822) x5023) (= x4518 (> x5023 0))) (and (=> x4518 x4160) (=> (not x4518) x1880))) x4940))
(assert (x1672 x3923))
(assert (x1672 x1735))
(assert (x1672 x3139))
(assert (x1672 x2034))
(assert (= (x560 x4451) (ite (= x4451 x3510) 0 (x62 x4451))))
(assert (x1672 x4309))
(assert (= x2418 (=> (and (= x4396 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3899)) (= (x2276 (+ x409 x4396)) x4571) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x139) (and (= (<= x139 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x139 32))) x2911) (= (x2276 (+ 31 x139)) x3899)) (and (=> (not x2911) x2657) (=> x2911 x4032)))))
(assert (x1672 x2187))
(assert (x1672 x1941))
(assert (x4494 x2187 x3980 x1272 x3523))
(assert (x963 x5121))
(assert (= x372 (=> (= x2142 (= x2761 0)) (and (=> (and (= x325 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 0 x6) x2142) x4349) (=> (not x2142) x4126)))))
(assert (x1672 x4664))
(assert (x4182 x1501))
(assert (= (x747 274184521717934524641157099916833587231) (x3272 274184521717934524641157099916833587231)))
(assert (= x435 (=> (= (= x4190 274184521717934524641157099916833587206) x3118) (and (=> (not x3118) x881) (=> x3118 x884)))))
(assert (x1672 x341))
(assert (=> (<= x4007 10000) (= (x3272 x4007) (x747 x4007))))
(assert (= x4349 (=> (= x654 (< x6 x325)) (and (=> x654 x4032) (=> (and (not x654) (= false x4117)) x2250)))))
(assert (x1672 x3807))
(assert (x963 x1266))
(assert (x3419 x2717 x4845))
(assert (= (and (not x462) x3853) x868))
(assert (x1672 x3127))
(assert (x1672 x2047))
(assert (x1672 x5174))
(assert (= x92 (=> (and (= x821 (> x1933 x1494)) (= (x529 (- x2841 x3502)) x1494)) (and (=> (not x821) x2876) (=> x821 x4498)))))
(assert (x1672 x2385))
(assert (x1672 x4571))
(assert (x1672 x1767))
(assert (x1672 x2495))
(assert (= x1357 (=> (and (= x261 (x1505 1461501637330902918203684832716283019655932542975 x1545)) (= x1216 (= x261 x1545))) (and (=> (and (= x1829 (x1505 1461501637330902918203684832716283019655932542975 x2160)) (= 32 x867) (>= x4520 0) (= (x4708 (x3272 x1829) (x747 1) 0) x2880) (<= x4520 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x4757) (= (x3910 x2880) x4520) x1216) x981) (=> (not x1216) x1931)))))
(assert (x1814 x1544 x2656))
(assert (x1672 x2562))
(assert (x1672 x21))
(assert (x1672 x699))
(assert (x1672 x849))
(assert (= (x417 x291) 0))
(assert (x1672 x3684))
(assert (x1814 x1003 x3230))
(assert (x1672 x4979))
(assert (x1672 x4169))
(assert (x4680 x413 x1960))
(assert (x1672 x19))
(assert (x1672 x5001))
(assert (x1672 x4029))
(assert (x1672 x3714))
(assert (x1672 x3000))
(assert (x1672 x4767))
(assert (= (=> (= x1976 (= 0 x1769)) (and (=> x1976 x4498) (=> (not x1976) x1155))) x1243))
(assert (x1672 x3982))
(assert (x963 x4614))
(assert (x1672 x2115))
(assert (x1814 x2221 x3713))
(assert (= x1921 (=> (and (= x4906 (x1505 x3978 x3036)) (= (= 0 x4906) x1345) (= (= 0 x3809) x1361) (= x3036 (ite (> x4049 x1507) 1 0)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3809) x1507) (= x3978 (ite (not x1361) 1 0))) (and (=> (not x1345) x4498) (=> x1345 x412)))))
(assert (= (ite (and x1825 (not x1383) x4277) (x3140 x5257) (x3290 x5257)) (x2138 x5257)))
(assert (x1672 x1800))
(assert (= x130 (and x1210 x3878)))
(assert (=> (<= x2042 10000) (= (x747 x2042) (x3272 x2042))))
(assert (= 0 (x4712 x4789)))
(assert (x1672 x2620))
(assert (= (=> (and (= x4488 0) (= x2088 x1914)) x4390) x1319))
(assert (= x4040 (and x1428 (not x4150))))
(assert (= (x747 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x3272 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= (=> (and (= x2767 x2497) (>= 1461501637330902918203684832716283019655932542975 x4730) (= x4117 x2130) (= (not (= x2417 x3894)) x1699) (<= x3807 1461501637330902918203684832716283019655932542975) (= x2993 x3807) (= x2936 x776) (< 67 x3285) (= x1933 x2236) (>= x1687 0) (= x4730 x2767) (= x4679 x1054) x1699 (= x2417 x3333) (<= x1687 1461501637330902918203684832716283019655932542975) (>= x4730 0) (= x3531 (not x2130)) (<= 0 x2497) (= x1687 x4679) (<= 0 x3540) (>= 1461501637330902918203684832716283019655932542975 x3540) (>= x3807 0) (= x2767 x3894) (= x2411 x202) (<= x2497 1461501637330902918203684832716283019655932542975) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3285) true)) x368) x2250))
(assert (= (or (and x5211 x4771) (and x4181 x1029)) x869))
(assert (= (ite (and (not x2552) x1100 x5010) (x4575 x2067) (ite (and (not x327) (not x5010) (not x2552) x1100) (x1270 x2067) (x3874 x2067))) (x3276 x2067)))
(assert (= (and (not x2772) x1661) x2421))
(assert (= (and (not x3010) x42) x3432))
(assert (= x2042 (x4643 (x3272 x2042))))
(assert (= x3576 (x3272 (x4643 x3576))))
(assert (= (and x2428 (not x1751)) x1938))
(assert (x1672 x4080))
(assert (x1672 x4215))
(assert (x1672 x320))
(assert (= (=> (and (= x2000 (ite (= 0 x4908) (= x4908 0) (= 0 x1242))) (= x3572 (x2276 (+ x3447 x3551)))) (and (=> (and x2000 (= x3572 x4354)) x2935) (=> (not x2000) x305))) x5247))
(assert (x1672 x573))
(assert (x1672 x4109))
(assert (x1672 x4076))
(assert (x1672 x4265))
(assert (x1672 x5185))
(assert (x1672 x490))
(assert (= (x3052 x3208) 0))
(assert (= x2437 (=> (and (= (x4232 (x3272 x2201)) x799) (= x446 (= x799 0)) (= x2674 (x2276 (+ x409 4))) (= (x2276 (+ 64 x2674)) x3730) (= x424 (x1505 1461501637330902918203684832716283019655932542975 x2479)) (= x3593 (x1505 1461501637330902918203684832716283019655932542975 x4570)) (= x3518 (x2276 (+ 36 x409)))) (and (=> (and (or (and x3267 (= 1 x320) (> 4294967296 x139)) (and (= x320 x4379) (not x3267))) (not x446) (= x3267 (< 0 x4379))) x330) (=> x446 x4032)))))
(assert (= (and x1648 (not x3920)) x3099))
(assert (x963 x1960))
(assert (x1814 x3759 x4704))
(assert (x1814 x2608 x1423))
(assert (x1672 x408))
(assert (x1672 x3239))
(assert (x1672 x4383))
(assert (x4680 x734 x1294))
(assert (= x5095 (=> (and (= x3804 x2080) (= x1909 x4465)) x2900)))
(assert (= x956 (and x215 x3255)))
(assert (= x3600 (and x773 x4362)))
(assert (= x3433 (or x937 (and (not x1296) x4170))))
(assert (= (=> (= (= x3950 274184521717934524641157099916833587202) x847) (and (=> (not x847) x3406) (=> x847 x4851))) x5223))
(assert (= 0 (x2169 x860)))
(assert (= 1461501637330902918203684832716283019655932542976 (x4643 (x747 1461501637330902918203684832716283019655932542976))))
(assert (= (ite x5038 (ite x1640 (x4539 x5208) (x5191 x5208)) (ite x4587 (x4539 x5208) (x3855 x5208))) (x4786 x5208)))
(assert (x1672 x1091))
(assert (x1672 x4129))
(assert (= (=> (and (= x4455 (= x1308 0)) (= (= 0 x3029) x2116) (= x4031 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3029)) (= (x1505 x2959 x1371) x1308) (= x1371 (ite (< x4031 1000000000000000000) 1 0)) (= x2959 (ite (not x2116) 1 0))) (and (=> x4455 x719) (=> (not x4455) x4498))) x5111))
(assert (= (and (not x3088) x4819) x1365))
(assert (= (and x4651 (not x1891)) x804))
(assert (x1672 x4797))
(assert (x4494 x3670 x3041 x1085 x4731))
(assert (x1672 x4190))
(assert (= x563 (=> (= x2697 (= x3362 274184521717934524641157099916833587202)) (and (=> x2697 x3033) (=> (not x2697) x886)))))
(assert (= (x3692 x4949 1) (div x4949 2)))
(assert (x1672 x3690))
(assert (= (=> (and (= x991 (= x1134 0)) (= (x4343 128) x1134)) (and (=> (and (= x991 x2567) (not x991) (= x1401 x3648)) x1686) (=> x991 x4927))) x2220))
(assert (x1672 x3105))
(assert (= x4190 (x4643 (x3272 x4190))))
(assert (x1672 x495))
(assert (x4182 x4104))
(assert (x1672 x3788))
(assert (x1672 x5272))
(assert (= x772 (=> (and (= x5158 x3278) (= x3443 x3121)) x3825)))
(assert (x1672 x3003))
(assert (x1672 x4796))
(assert (= x609 (=> (= (= 274184521717934524641157099916833587206 x660) x4646) (and (=> (not x4646) x110) (=> (and (= x2661 x2662) (= x4864 1) (= x4386 10894474682274239493831243662817379401261526446360622092269559273883068006400) (< 0 x1136) (= x1603 404098525) (not (> 4 x2661)) (= (x4232 (x3272 274184521717934524641157099916833587206)) x1136) (= 32 x3758) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x766) (= x2661 4) (<= 0 x766) x4646 (> 826074471 x1603) (not (= x1603 117300739)) (not (= x1603 157198259))) x1379)))))
(assert (= x3603 (and x958 x920)))
(assert (= 0 (x552 x2735)))
(assert (x1672 x4529))
(assert (x1672 x470))
(assert (= x4672 (x4643 (x3272 x4672))))
(assert (x1672 x1697))
(assert (= (and (not x4511) x4509) x2544))
(assert (= x2750 (=> (and (= (< 0 x782) x4600) (= (x2391 x2215) x782)) (and (=> x4600 x2859) (=> (not x4600) x4032)))))
(assert (x1672 x1521))
(assert (x1672 x4369))
(assert (x1672 x471))
(assert (x1672 x3215))
(assert (x1672 x784))
(assert (= 0 (x3867 x2165)))
(assert (= (div x2717 2) (x3692 x2717 1)))
(assert (x1672 x4703))
(assert (x1672 x1522))
(assert (x1672 x2341))
(assert (= (=> (and (= (mod (* x4496 x1372) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1559) (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5032)) x2901) (= (div x1559 1000000000000000000) x5032) (= (> x4496 x2901) x3964)) (and (=> (not x3964) x4579) (=> x3964 x4498))) x5305))
(assert (x2960 x172))
(assert (x1672 x3636))
(assert (= x3950 (x4643 (x3272 x3950))))
(assert (= x2315 (=> (and (= x4134 (x611 x1342)) (= (x2391 x3353) x3652) (= x2665 (< 0 x3652)) (= (x3231 x1007) x3353) (= x4570 (x4791 x575))) (and (=> (not x2665) x4032) (=> x2665 x1593)))))
(assert (x1672 x3296))
(assert (= x2386 (and x1181 (not x4754))))
(assert (= (x4556 x3832) (ite x3325 (ite x3888 (x3304 x3832) (x4474 x3832)) (ite x4534 (x3304 x3832) (x2989 x3832)))))
(assert (= (ite (= x2553 x934) x811 (x3324 x934)) (x2797 x934)))
(assert (= x4106 (=> (= x3592 (= 0 x4823)) (and (=> (not x3592) x4736) (=> x3592 x4498)))))
(assert (x963 x2786))
(assert (= (x747 10894474682274239493831243662817379401261526446360622092269559273883068006400) (x3272 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x1672 x637))
(assert (x1672 x4757))
(assert (x963 x274))
(assert (= x2896 (=> (= (= 274184521717934524641157099916833587206 x1254) x3056) (and (=> (not x3056) x1377) (=> (and (= 1889567281 x187) (= (x529 (- x4833 4)) x3578) (not (= 826074471 x187)) (= 36 x4833) x3056 (< 0 x636) (not (< x187 826074471)) (= (or (and (> 32 x3578) (= true (<= x3578 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3578 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2475) (= x4833 x1006) (not (< x4833 4)) (or (and (= x5205 x3882) (= x3055 0) x2475) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1643) (= x3938 (x4708 (x3272 274184521717934524641157099916833587231) (x747 1) 0)) (= 32 x3882) (= (x3910 x3938) x1643) (= 274184521717934524641157099916833587231 x5152) (= x3055 1) (<= 0 x1643) (not x2475))) (= (x4232 (x3272 274184521717934524641157099916833587206)) x636) (= x5200 50942633119752846454219349998365661925608737367104304655302372697894809501696)) x2481)))))
(assert (= (+ 2 (x4643 x3059)) (x4643 (x307 x3059 2))))
(assert (=> (>= 10000 x4190) (= (x747 x4190) (x3272 x4190))))
(assert (x1672 x551))
(assert (= x1516 (=> (and (= x3251 (x4232 (x3272 x1089))) (= x822 (x2276 (+ 32 x4658))) (= x5217 (x529 (- x3077 x3973))) (= x3077 (x2276 (+ x3973 36))) (= x223 (x1505 1461501637330902918203684832716283019655932542975 x5121)) (= (x1505 1461501637330902918203684832716283019655932542975 x2503) x1089) (= x2503 (x2019 x2123)) (= (x88 x822) x2123) (= x5121 (x288 x4888)) (= (= 0 x3251) x96) (= (x2276 (+ x3973 4)) x909)) (and (=> x96 x4032) (=> (not x96) x2209)))))
(assert (x1672 x4977))
(assert (= x2343 (and x4766 (not x2338))))
(assert (= (ite (= x713 x3832) x3785 (x830 x3832)) (x3304 x3832)))
(assert (x1672 x2752))
(assert (x1672 x3724))
(assert (= x4363 (x4643 (x3272 x4363))))
(assert (x1672 x124))
(assert (x963 x1371))
(assert (x1672 x1795))
(assert (x1672 x4655))
(assert (x1672 x5))
(assert (x1672 x3069))
(assert (x1672 x689))
(assert (x1672 x1399))
(assert (x1672 x2480))
(assert (= x135 (=> (= (= 274184521717934524641157099916833587202 x4169) x3552) (and (=> (not x3552) x2440) (=> (and (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x3331) (= x1932 404098525) (<= x3449 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 32 x1794) (= x2509 4) (= x4405 (x4232 (x3272 274184521717934524641157099916833587202))) x3552 (> x4405 0) (not (= x1932 157198259)) (= x4828 1) (not (< x2509 4)) (= x2509 x3622) (> 826074471 x1932) (not (= 117300739 x1932)) (>= x3449 0)) x844)))))
(assert (x963 x4949))
(assert (= (=> (and (= (x2267 x904) x2639) (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2639)) x2287) (= x904 (x2276 (+ x5 32))) (= (> 0 x2287) x427)) (and (=> x427 x4498) (=> (and (= x2966 x2639) (not x1860) (= x2966 x2748) (= (> x248 1) x1860) (not x427) (= (x1799 x5) x248)) x662))) x4016))
(assert (= (x4643 (x307 x3911 1)) (+ 1 (x4643 x3911))))
(assert (= (and x990 x5083) x1446))
(assert (x4182 x3548))
(assert (x1672 x1057))
(assert (x4182 x577))
(assert (x1672 x4570))
(assert (x1672 x1835))
(assert (x4680 x1541 x2952))
(assert (x1672 x5315))
(assert (x963 x589))
(assert (x1672 x5164))
(assert (x1672 x1786))
(assert (x1672 x2925))
(assert (= (and (not x976) x919) x3430))
(assert (= (=> (= x312 (< x1752 x549)) (and (=> x312 x34) (=> (not x312) x3180))) x4832))
(assert (= x672 (=> (and (= x3749 x1021) (= (x40 x3621) x4460) (not x4125) (= x4125 (> x4460 1))) x667)))
(assert (x1672 x2849))
(assert (= (or (and x3902 (not x2261)) x1499) x1374))
(assert (x1672 x3863))
(assert (x1672 x1559))
(assert (x1672 x1184))
(assert (x1672 x2011))
(assert (x1672 x974))
(assert (= x1103 (and x3113 x2010)))
(assert (x1672 x3437))
(assert (= (and x4561 (not x3840)) x3438))
(assert (x963 x1473))
(assert (x1672 x3680))
(assert (x1672 x4256))
(assert (= (ite (and x4277 x1825 (not x1383)) (x3140 x1182) (x3290 x1182)) (x2138 x1182)))
(assert (x1672 x203))
(assert (x1672 x1571))
(assert (= (and x2389 (not x642)) x456))
(assert (= x4509 (and x42 x3010)))
(assert (=> (<= x660 10000) (= (x3272 x660) (x747 x660))))
(assert (= (=> (and (= (x2276 (+ x303 x3016)) x3876) (= x3016 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2012)) (= x4313 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4334) (and (< x4334 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4334) true)))) (= x2012 (x2276 (+ x4334 31)))) (and (=> x4313 x4032) (=> (not x4313) x188))) x580))
(assert (= x5038 (or (and x4398 x5297) x1640)))
(assert (x1672 x4322))
(assert (= (or (and x3760 (not x3397)) (and x2537 x5258)) x1597))
(assert (= 0 (x552 x3919)))
(assert (x1672 x176))
(assert (= (and x4466 (not x1256)) x1788))
(assert (x1672 x2256))
(assert (x1672 x2249))
(assert (x963 x4316))
(assert (x1672 x5205))
(assert (x1672 x4730))
(assert (x1672 x5069))
(assert (= (or (and x454 x1695) (and x3736 x3030)) x1335))
(assert (x1814 x67 x1204))
(assert (= x2119 (and x3602 x595)))
(assert (x1672 x4692))
(assert (x1672 x485))
(assert (x1672 x3426))
(assert (= (=> (and (= (> x5047 0) x468) (= (x3231 x1007) x4692) (= (x2391 x4692) x5047)) (and (=> (and (= x3982 x3973) (not x468)) x4503) (=> x468 x2158))) x5182))
(assert (x1672 x2226))
(assert (x1672 x2890))
(assert (x1672 x3815))
(assert (x1672 x3546))
(assert (= (and x1535 x3618) x1032))
(assert (x1672 x1008))
(assert (= x4227 (=> (and (= 0 x2094) (= x2964 x1882)) x5154)))
(assert (= (=> (and (>= x683 0) (= x683 (x2866 x968)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x683) (= 274184521717934524641157099916833587231 x4636) (= (x529 (- x1455 x4052)) x794) (= x968 (x4708 (x3272 x3003) (x747 1) 0)) (= (x1505 1461501637330902918203684832716283019655932542975 x2124) x3003) (= (< x3139 x683) x315) (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4052)) x3139) (= (x4708 (x3272 274184521717934524641157099916833587231) (x747 1) 0) x2077)) (and (=> (not x315) x1239) (=> x315 x1979))) x1))
(assert (x1672 x3347))
(assert (x1672 x2861))
(assert (x963 x3780))
(assert (x1672 x229))
(assert (x963 x4593))
(assert (= x1339 (=> (and (= (x5238 x149) x496) (= (x2957 x496) x3092) (= x291 (x5238 x149)) (= (= x3092 x55) x3878) (= (x2957 x291) x55)) (and (=> x3878 x4061) (=> (not x3878) x4498)))))
(assert (x1672 x77))
(assert (x1672 x3670))
(assert (= 0 (x3461 x1612)))
(assert (= (and x2507 x4269) x4210))
(assert (= x3926 (=> (and (= (x1564 x470) x3665) (= x4538 (< 0 x3665))) (and (=> (not x4538) x4032) (=> x4538 x1630)))))
(assert (=> (>= 10000 x3870) (= (x3272 x3870) (x747 x3870))))
(assert (x1672 x3160))
(assert (x1672 x3941))
(assert (x1672 x3682))
(assert (= (x3272 22270923681254677845691103109158760375340177724800803888364822332811285364736) (x747 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (x1672 x2285))
(assert (x1672 x1792))
(assert (x1672 x159))
(assert (x1672 x2107))
(assert (x1672 x2909))
(assert (x1672 x3077))
(assert (= (and x3082 x2490) x1240))
(assert (x1672 x197))
(assert (= x1287 (=> (and (= (x2540 x1556) x4169) (= x1556 (x307 x4716 2)) (> 1461501637330902918203684832716283019655932542976 x4169) (= x3322 (= x1512 0)) (<= 0 x4169) (= x3622 4) (<= x4169 1461501637330902918203684832716283019655932542975) (= (x4232 (x3272 x4169)) x1512)) (and (=> x3322 x4498) (=> (not x3322) x66)))))
(assert (x963 x5228))
(assert (x1672 x508))
(assert (x1672 x1074))
(assert (= x3935 (and x2342 x3951)))
(assert (x1672 x2300))
(assert (= (=> (and (not x2655) (= (> x3943 1) x2655) (= x26 x2171) (= x3943 (x2391 x3881))) x4925) x3746))
(assert (x1672 x1567))
(assert (x1672 x4355))
(assert (= (=> (= (= x2 0) x5201) (and (=> (not x5201) x1955) (=> x5201 x4498))) x1081))
(assert (x1672 x5209))
(assert (x1672 x4737))
(assert (x1672 x1841))
(assert (x1672 x363))
(assert (x1672 x3060))
(assert (x1672 x4765))
(assert (= (x552 x1430) 0))
(assert (= (and (not x3592) x922) x2194))
(assert (= x1048 (x4643 (x3272 x1048))))
(assert (x1672 x1289))
(assert (x1672 x2042))
(assert (x1672 x2538))
(assert (x1672 x4412))
(assert (x4182 x4124))
(assert (= x1692 (=> (= x2978 (= x1832 274184521717934524641157099916833587206)) (and (=> (and (not (> 4 x2925)) (not (= x2111 117300739)) (= x2369 x2925) (< 0 x2977) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x1768) (>= x766 0) x2978 (not (= 157198259 x2111)) (= (x4232 (x3272 274184521717934524641157099916833587206)) x2977) (= 404098525 x2111) (= 1 x2648) (<= x766 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1276 32) (= 4 x2925) (> 826074471 x2111)) x735) (=> (not x2978) x4792)))))
(assert (x1672 x3762))
(assert (x1672 x2084))
(assert (= (or x2596 x423) x4942))
(assert (x1672 x1315))
(assert (x1672 x2821))
(assert (= (x3052 x904) 0))
(assert (x1672 x4641))
(assert (= x4194 (x4643 (x3272 x4194))))
(assert (= x3299 (or (and x1857 x1103) (and x357 x752) (and x2157 x3417) (and x4330 x1509) (and x315 x1998) (and x3113 (not x2010)))))
(assert (x1672 x2678))
(assert (x1672 x106))
(assert (x963 x557))
(assert (x963 x3941))
(assert (= (ite (and (not x793) x5145 x4784) (x2591 x4993) (ite (and (not x1447) (not x793) x4784 (not x5145)) (x60 x4993) (x4135 x4993))) (x1808 x4993)))
(assert (x1672 x4554))
(assert (= x2962 (and x4590 (not x4535))))
(assert (x1672 x3780))
(assert (= x981 (=> (and (= x895 x4757) (= x867 x2943)) x807)))
(assert (= (=> (and (= x2336 (x2276 (+ 36 x2171))) (= (x1505 1461501637330902918203684832716283019655932542975 x4265) x705) (= (x1505 1461501637330902918203684832716283019655932542975 x193) x4671) (= (x1505 1461501637330902918203684832716283019655932542975 x2716) x3793) (= (= x104 0) x2487) (= (x4232 (x3272 x4671)) x104) (= x966 (x2276 (+ x3982 32))) (= x95 (x3371 x966)) (= x2321 (x2276 (+ x2171 4)))) (and (=> x2487 x4032) (=> (and (not x2487) (or (and (= x2363 1) x3681 (< x4548 4294967296)) (and (not x3681) (= x2363 x2131))) (= x3681 (< 0 x2131))) x2602))) x4853))
(assert (x1672 x4437))
(assert (x4182 x1098))
(assert (x1672 x951))
(assert (x1672 x480))
(assert (x1672 x3260))
(assert (x4182 x1894))
(assert (x1672 x1009))
(assert (x1672 x3047))
(assert (= (and x1731 (not x3274)) x38))
(assert (= (=> (and (= x842 (< 0 x4765)) (= x4765 (x102 x3982))) (and (=> (and (= 0 x2761) (not x842)) x372) (=> x842 x4352))) x4925))
(assert (= (=> (and (= (< x5275 x3551) x1750) (= x5275 (x529 (- x4865 x4783)))) (and (=> x1750 x4032) (=> (not x1750) x4179))) x1823))
(assert (x1672 x1308))
(assert (= x4561 (and (not x4097) x3843)))
(assert (x963 x3765))
(assert (x1672 x1095))
(assert (x1672 x3))
(assert (=> (<= x957 10000) (= (x3272 x957) (x747 x957))))
(assert (x1672 x3612))
(assert (= (=> (and (= x2367 (x80 x1480)) (= (x1505 1461501637330902918203684832716283019655932542975 x1315) x957) (= (x4232 (x3272 x957)) x5212) (= x2073 (= 0 x5212)) (= (x2276 (+ x1176 96)) x1480)) (and (=> x2073 x4032) (=> (and (not x2073) (= x1953 (> x2235 0)) (or (and (not x1953) (= x4089 x2235)) (and (= x4089 1) x1953 (< x5174 4294967296)))) x4981))) x3819))
(assert (=> (>= 10000 x2781) (= (x3272 x2781) (x747 x2781))))
(assert (x963 x757))
(assert (x1672 x4839))
(assert (x1672 x788))
(assert (x1672 x4514))
(assert (= (and x1993 x3339) x527))
(assert (= x270 (and x3791 (not x3737))))
(assert (= x2046 (=> (and (= x4055 x4904) (= x945 x195)) x1222)))
(assert (not x3252))
(assert (x1672 x2847))
(assert (= x3161 (and x4753 x165)))
(assert (x1672 x980))
(assert (= x901 (and x5262 x4744)))
(assert (= (=> (and (= x4737 x1358) (= x296 x2186)) x369) x2469))
(assert (= (and (not x2702) x3742) x4017))
(assert (= (x3461 x3881) 0))
(assert (= x3190 (and x1262 x901)))
(assert (= (ite (= x1697 x1583) x4578 (x2169 x1583)) (x4391 x1583)))
(assert (= x3598 (and x464 x4184)))
(assert (x1672 x2170))
(assert (x1672 x53))
(assert (x1672 x3601))
(assert (x1672 x3727))
(assert (x1672 x2379))
(assert (= x4199 (and (not x1383) x4277)))
(assert (x4182 x2042))
(assert (x4182 x175))
(assert (x1672 x947))
(assert (x1672 x649))
(assert (x1672 x67))
(assert (x1672 x266))
(assert (= 0 (x4575 x2067)))
(assert (= x3728 (and x4944 (not x5011))))
(assert (x1672 x2643))
(assert (x1672 x4566))
(assert (x1672 x1401))
(assert (x1672 x160))
(assert (x1672 x103))
(assert (x1672 x1775))
(assert (x963 x413))
(assert (= (or (and x3600 x5172) (and x4005 (not x3314))) x2800))
(assert (x1672 x1418))
(assert (= 157198259 (x4643 (x747 157198259))))
(assert (x1672 x5264))
(assert (x1672 x2007))
(assert (x1672 x3134))
(assert (x1672 x4724))
(assert (= (ite (= x381 x1182) x1101 (x2138 x1182)) (x269 x1182)))
(assert (x1814 x4821 x1108))
(assert (= x127 (=> (= x1331 (< 0 x251)) (and (=> x1331 x1880) (=> (not x1331) x4498)))))
(assert (x1672 x2717))
(assert (= x4596 (=> (and (= (x4232 (x3272 274184521717934524641157099916833587206)) x1530) (= (x529 (- x785 4)) x3006) (< 0 x1530) (= 36 x785) (= x4511 (or (> x3006 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3006 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3006) true)))) (not (> 826074471 x3234)) (= x3234 1889567281) (not (= x3234 826074471)) (not (> 4 x785)) (= x3785 x1792) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4444) (= x785 x48)) (and (=> (not x4511) x3740) (=> x4511 x4493)))))
(assert (x1672 x3261))
(assert (= x512 (=> (= (= x175 274184521717934524641157099916833587206) x741) (and (=> (not x741) x3619) (=> x741 x1269)))))
(assert (= (x3741 x943) 0))
(assert (x1672 x2813))
(assert (= (and x3534 (not x3554)) x3803))
(assert (x1672 x125))
(assert (= x986 (x4643 (x3272 x986))))
(assert (= (ite (= x3723 x3908) x876 (x4712 x3723)) (x4531 x3723)))
(assert (= 0 (x2614 x4658)))
(assert (= (=> (and (= x117 (x1505 1461501637330902918203684832716283019655932542975 x2411)) (= x2812 (x4708 (x3272 x117) (x747 3) 0)) (> 256 x50) (= (x875 x4308) x50) (= x2260 (< 2 x50)) (= (x307 x2812 2) x4308)) (and (=> x2260 x4498) (=> (and (= x4696 (= x50 1)) (not x2260)) x1577))) x373))
(assert (x1672 x952))
(assert (x1672 x3175))
(assert (x1672 x5295))
(assert (= (=> (and (= (= x2620 0) x2828) (= x3421 (ite (not x2828) 1 0)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2620) x1337) (= x471 (ite (> x622 x1337) 1 0)) (= (x1505 x3421 x471) x1411) (= (= x1411 0) x3895)) (and (=> x3895 x3435) (=> (not x3895) x4498))) x4238))
(assert (x1672 x1740))
(assert (x1672 x494))
(assert (x1672 x455))
(assert (= x533 (=> (and (= x4834 (or (> x3697 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3697) true) (< x3697 32)))) (= (x2276 (+ x3694 x3187)) x2292) (= (x2276 (+ x3697 31)) x2550) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2550) x3694)) (and (=> x4834 x4498) (=> (not x4834) x5234)))))
(assert (x963 x4012))
(assert (= (=> (and (= x1381 (x2276 (+ x5171 x222))) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1253) x5171) (= x3072 (or (and (= (<= x2467 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2467)) (> x2467 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x2276 (+ 31 x2467)) x1253)) (and (=> x3072 x4032) (=> (not x3072) x3268))) x3497))
(assert (x1672 x2735))
(assert (x1672 x2646))
(assert (x1672 x1104))
(assert (x1672 x5231))
(assert (x1672 x4894))
(assert (x1672 x1077))
(assert (= 2743638299 (x4643 (x747 2743638299))))
(assert (= (or (and x2153 (not x2136)) (and x1597 (not x164))) x4590))
(assert (x1672 x4234))
(assert (= (and x4942 (not x5081)) x4772))
(assert (x1672 x4149))
(assert (x963 x5006))
(assert (= (or (and x1324 x4650) (and x198 x1214)) x2286))
(assert (x1672 x4116))
(assert (=> (<= x1829 10000) (= (x3272 x1829) (x747 x1829))))
(assert (x1672 x5136))
(assert (x1672 x52))
(assert (= (x1733 x3291) (ite (= x3291 x2045) 0 (x1295 x3291))))
(assert (= x3870 (x4643 (x3272 x3870))))
(assert (= x3406 true))
(assert (x1672 x3548))
(assert (x1672 x555))
(assert (= (x4643 (x3272 x4085)) x4085))
(assert (x1672 x1133))
(assert (= x3180 (=> (and (= x2811 (x3915 x2091)) (= x2091 (x4708 (x3272 x1734) (x747 1) 0)) (= 274184521717934524641157099916833587231 x2501) (= x479 (x4708 (x3272 274184521717934524641157099916833587231) (x747 1) 0)) (= (< x1601 x2811) x65) (= (x1505 1461501637330902918203684832716283019655932542975 x1003) x1734) (>= x2811 0) (= (x529 (- x1752 x549)) x408) (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x549)) x1601) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2811)) (and (=> x65 x34) (=> (not x65) x4812)))))
(assert (= (x4643 (x747 50942633119752846454219349998365661925608737367104304655302372697894809501696)) 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (= (and (not x4453) x1703) x4065))
(assert (x4680 x3421 x471))
(assert (= x950 (=> (= x3608 (= 0 x1928)) (and (=> (not x3608) x4669) (=> x3608 x4498)))))
(assert (= (=> (and (= x531 x1797) (= x491 0)) x3650) x342))
(assert (= x1602 (and (not x2552) x1100)))
(assert (x1672 x1806))
(assert (= (x4712 x206) 0))
(assert (x1672 x4226))
(assert (= (and (=> x4461 x3076) (=> (not x4461) x4032)) x2969))
(assert (= x2526 (and x3269 x2567)))
(assert (=> (>= 10000 x4201) (= (x747 x4201) (x3272 x4201))))
(assert (x1672 x496))
(assert (x1672 x441))
(assert (= (or x1802 (and x4271 x3930)) x2588))
(assert (= (and x447 (not x2618)) x115))
(assert (x1672 x492))
(assert (x1672 x2903))
(assert (x1672 x1227))
(assert (= x4479 (and x1639 x725)))
(assert (x1672 x514))
(assert (x1672 x2165))
(assert (= (=> (= (= x5009 274184521717934524641157099916833587206) x4650) (and (=> (not x4650) x3155) (=> (and (= x1497 404098525) (= x4162 x1631) (= x4162 4) (= x32 32) (> 826074471 x1497) (= x439 (x4232 (x3272 274184521717934524641157099916833587206))) (= x670 1) (not (> 4 x4162)) x4650 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x766) (< 0 x439) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x4989) (not (= x1497 157198259)) (not (= 117300739 x1497)) (<= 0 x766)) x1217))) x4048))
(assert (x1672 x2193))
(assert (x1672 x3183))
(assert (x1672 x3356))
(assert (x1672 x4875))
(assert (x1672 x1945))
(assert (= (and x1032 x2833) x4027))
(assert (x1672 x4675))
(assert (= (ite (= x4187 x4709) 0 (x132 x4187)) (x659 x4187)))
(assert (x1672 x2208))
(assert (= x276 (x4643 (x3272 x276))))
(assert (x1672 x4908))
(assert (x1672 x3996))
(assert (x1672 x2516))
(assert (= x2488 (or x2800 (and x3314 x4005))))
(assert (x1672 x769))
(assert (= x4289 (=> (and (= x5011 (= 0 x1144)) (= x4190 (x538 x4079)) (= (x307 x4417 1) x4079) (= x3315 (x1505 1461501637330902918203684832716283019655932542975 x3495)) (= (x4232 (x3272 x4190)) x1144) (= (x529 (- x2064 x3757)) x1487) (< x4190 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x4190) (<= 0 x4190) (= (x4708 (x3272 x3315) (x747 2) 0) x4417) (= x2064 (x2276 (+ x3757 36))) (= x5246 (x2276 (+ x1199 132)))) (and (=> x5011 x4032) (=> (not x5011) x435)))))
(assert (= x1228 (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1698) (and (= (<= x1698 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1698))) x1338) (= (x2276 (+ x155 x1644)) x1546) (= x3670 (x2276 (+ 31 x1698))) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3670) x155)) (and (=> (not x1338) x1211) (=> x1338 x4032)))))
(assert (= (x1292 x63) (ite (= x63 x1713) x1680 (x4923 x63))))
(assert (x963 x67))
(assert (= x774 (or (and x2273 x4674) x1662)))
(assert (x1672 x1965))
(assert (x1672 x1358))
(assert (= (=> (and (>= x211 0) (= x878 (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x318))) (= (x4708 (x3272 x4363) (x747 1) 0) x16) (= (x4708 (x3272 274184521717934524641157099916833587231) (x747 1) 0) x984) (= (x1505 1461501637330902918203684832716283019655932542975 x252) x4363) (= (< x878 x211) x5125) (= x1344 274184521717934524641157099916833587231) (= x211 (x1584 x16)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x211) (= x2646 (x529 (- x1322 x318)))) (and (=> x5125 x989) (=> (not x5125) x3474))) x3798))
(assert (= (x4643 (x3272 274184521717934524641157099916833587202)) 274184521717934524641157099916833587202))
(assert (= (or (and x2879 x746) x903) x755))
(assert (x1672 x2679))
(assert (x963 x4707))
(assert (= (and x1119 (not x3580)) x4257))
(assert (x1672 x196))
(assert (x1672 x723))
(assert (= (x3272 2835717307) (x747 2835717307)))
(assert (x1672 x1050))
(assert (x4182 x4085))
(assert (= x2490 (and x359 (not x1651))))
(assert (= x4723 (or (and x706 (not x3830)) (and x4288 x4966))))
(assert (x1672 x765))
(assert (= x178 (and x1542 (not x2000))))
(assert (= (=> (and (= x1223 (> x211 x3755)) (= x3755 (x2276 (+ x318 x211)))) (and (=> (and (= 32 x101) (= x3090 1) (= (x1505 1461501637330902918203684832716283019655932542975 x252) x3548) (not x1223) (= x2909 x4144) (= x28 (x4708 (x3272 x3548) (x747 1) 0))) x2529) (=> x1223 x989))) x3474))
(assert (x1672 x1809))
(assert (x1672 x4303))
(assert (= (or (and (not x1730) x2939) x1910) x339))
(assert (= (x4643 (x747 2514000705)) 2514000705))
(assert (= (=> (and (= (= x2201 x2905) x3602) (= x2905 (x1505 1461501637330902918203684832716283019655932542975 x2201)) (= x2201 (x3928 x1381))) (and (=> (not x3602) x4032) (=> x3602 x2437))) x1351))
(assert (x1672 x3225))
(assert (= (x417 x437) 0))
(assert (x1672 x782))
(assert (x1672 x3353))
(assert (x1672 x404))
(assert (x963 x1091))
(assert (x1672 x3774))
(assert (= x957 (x4643 (x3272 x957))))
(assert (= (and x1722 x1995) x1599))
(assert (x1672 x2334))
(assert (= (=> (and (= 36 x3361) (= x87 x2497) (= 36 x3361) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x871) (= x4677 (x4232 (x3272 274184521717934524641157099916833587202))) (not (= x4374 826074471)) (= 1889567281 x4374) (= (x529 (- x3361 4)) x190) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x190) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x190)) (< x190 32))) x5105) (not (> 4 x3361)) (not (> 826074471 x4374)) (> x4677 0)) (and (=> x5105 x46) (=> (not x5105) x1981))) x4749))
(assert (= (x4643 (x3272 x1098)) x1098))
(assert (x1672 x1120))
(assert (x4182 x1254))
(assert (= (=> (and (= x2379 274184521717934524641157099916833587231) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2448) (= (x2138 x5257) x2448) (= x4123 x1462) (<= 0 x2448) (= (x4708 (x3272 274184521717934524641157099916833587231) (x747 1) 0) x5257) (= x4507 (< x2448 x2117))) (and (=> x4507 x663) (=> (not x4507) x473))) x3651))
(assert (x1672 x4245))
(assert (x1672 x4476))
(assert (x1672 x2587))
(assert (x1672 x4870))
(assert (= x4169 (x4643 (x3272 x4169))))
(assert (x1672 x1433))
(assert (x1672 x1606))
(assert (x1672 x5055))
(assert (x1672 x2990))
(assert (x963 x996))
(assert (x1672 x1603))
(assert (x1672 x2639))
(assert (= (=> (and (= (x1505 255 x2011) x1596) (= x2011 (x3496 x4263)) (= (= x1596 x2011) x2893)) (and (=> x2893 x3926) (=> (not x2893) x4032))) x398))
(assert (x1672 x2727))
(assert (x1672 x570))
(assert (x1672 x1364))
(assert (x1672 x5273))
(assert (= x2272 (and x3675 (not x2845))))
(assert (x1672 x1416))
(assert (x1672 x523))
(assert (= (x4391 x2737) (ite (= x1697 x2737) x4578 (x2169 x2737))))
(assert (= x4360 (=> (and (= (> x2095 0) x2342) (= x2095 (x1854 x1641))) (and (=> (not x2342) x4032) (=> x2342 x209)))))
(assert (x1672 x3549))
(assert (x1672 x1612))
(assert (x1672 x1544))
(assert (x1672 x5261))
(assert (= x4517 true))
(assert (= x1491 (=> (and (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4769) x2677) (= x1729 (> x2228 x2677))) (and (=> x1729 x4032) (=> (and (= x5274 (mod (* x4769 x2228) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x1729) (= x5274 x870)) x3844)))))
(assert (= (and x3176 x3445) x5285))
(assert (x1672 x2763))
(assert (x1672 x3626))
(assert (= (=> (and (<= x4960 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3816 (= 2 x4960)) (>= x4960 0) (= x2360 x3551)) (and (=> x3816 x4032) (=> (not x3816) x3492))) x4440))
(assert (x1672 x407))
(assert (x1672 x562))
(assert (x1672 x401))
(assert (x1672 x2662))
(assert (x1672 x3665))
(assert (= (ite (= x1026 x1359) x3175 (x5043 x1359)) (x3165 x1359)))
(assert (= (x1281 x2334) (ite (and x4799 (not x700) x2079) (x3948 x2334) (x3990 x2334))))
(assert (= (and x5291 x4616) x3374))
(assert (x1672 x953))
(assert (= x3563 (=> (and (= x1644 (x2276 (+ x1004 x5261))) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2289) x1004) (= (or (and (< x3974 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3974) true)) (> x3974 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x5304) (= x2289 (x2276 (+ x3974 31)))) (and (=> x5304 x4032) (=> (not x5304) x4562)))))
(assert (= (ite (and x4277 (not x1383) x1825) (x3204 x4964) (x3910 x4964)) (x4883 x4964)))
(assert (x1814 x1545 x1012))
(assert (x4494 x1945 x3766 x3431 x3258))
(assert (x1672 x2853))
(assert (x1672 x1749))
(assert (= (x4643 (x3272 x5231)) x5231))
(assert (x4680 x4316 x4899))
(assert (= (x5030 x1405) (ite (and x4953 (not x1143) x571) (x1702 x1405) (x3910 x1405))))
(assert (x1672 x3221))
(assert (x1672 x2424))
(assert (= (=> (and (= x383 (x2276 (+ x699 31))) (= x838 (x2276 (+ x931 x1333))) (= x1440 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x699) (and (< x699 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x699))))) (= x931 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x383))) (and (=> (not x1440) x93) (=> x1440 x4498))) x5178))
(assert (x1672 x1198))
(assert (= (and (not x2484) x3485) x2178))
(assert (x1672 x1316))
(assert (x4182 x660))
(assert (x1672 x3112))
(assert (x1672 x3652))
(assert (x4182 x1878))
(assert (x1672 x3401))
(assert (x4182 x1767))
(assert (x1672 x931))
(assert (x1672 x1546))
(assert (= (or (and (not x1216) x3430) (and x976 x919)) x5052))
(assert (= (x3272 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x747 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1672 x3824))
(assert (x1672 x1107))
(assert (= 274184521717934524641157099916833587206 (x4643 (x3272 274184521717934524641157099916833587206))))
(assert (x4182 x3152))
(assert (x1672 x2294))
(assert (x4182 x3863))
(assert (x1672 x2709))
(assert (= (x2310 x5261) (ite (= x5261 x3452) x3601 (x4541 x5261))))
(assert (x1672 x3839))
(assert (x1672 x340))
(assert (x1672 x4758))
(assert (= (x2614 x2861) 0))
(assert (x1672 x2761))
(assert (=> (<= x4085 10000) (= (x3272 x4085) (x747 x4085))))
(assert (x1672 x1757))
(assert (x1672 x3016))
(assert (x1672 x448))
(assert (= x1762 (=> (and (= x71 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2359)) (= (< x71 x3215) x5265)) (and (=> (and (= (mod (* x3215 x2359) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2742) (= x3134 x2742) (not x5265)) x2180) (=> x5265 x4498)))))
(assert (= (x4643 (x3272 x4351)) x4351))
(assert (x1672 x3078))
(assert (= (and (not x2697) x3432) x353))
(assert (= x4342 (x4643 (x3272 x4342))))
(assert (x1672 x5299))
(assert (= x1755 (and x3823 x3209)))
(assert (= (x747 826074471) (x3272 826074471)))
(assert (x1672 x4268))
(assert (= x2668 (x4643 (x3272 x2668))))
(assert (x1672 x3960))
(assert (x1672 x3761))
(assert (x1672 x2095))
(assert (= (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1705) (and (> 32 x1705) (= true (<= x1705 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1997) (= x3757 (x2276 (+ x1199 128))) (= x1199 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1314)) (= (x2276 (+ 31 x1705)) x1314)) (and (=> x1997 x4032) (=> (not x1997) x390))) x3014))
(assert (x1672 x955))
(assert (x1672 x5048))
(assert (x1672 x3142))
(assert (x1672 x4864))
(assert (= (x3461 x581) 0))
(assert (x1672 x657))
(assert (= (x1270 x2067) (ite (= x2067 x4875) 0 (x4575 x2067))))
(assert (x1672 x4951))
(assert (=> (>= 10000 x1254) (= (x747 x1254) (x3272 x1254))))
(assert (x1672 x5314))
(assert (x1814 x2411 x603))
(assert (= x668 (or x2295 (and x1229 (not x3756)))))
(assert (x1672 x325))
(assert (=> (>= 10000 x1332) (= (x3272 x1332) (x747 x1332))))
(assert (x1672 x1901))
(assert (= (=> (and (= (> x3392 0) x4916) (= (x40 x2037) x3392)) (and (=> x4916 x5308) (=> (and (= 0 x519) (not x4916)) x5111))) x1179))
(assert (x1672 x260))
(assert (x1672 x776))
(assert (=> (<= x3003 10000) (= (x747 x3003) (x3272 x3003))))
(assert (x1672 x1518))
(assert (= x4070 (and (not x2604) x1247)))
(assert (x1672 x3939))
(assert (x1672 x519))
(assert (x1672 x249))
(assert (x963 x3573))
(assert (x1672 x4168))
(assert (= (and (not x3322) x3533) x3853))
(assert (= x1981 (=> (and (= x3245 (x1505 1461501637330902918203684832716283019655932542975 x2497)) (= x836 (= x2497 x3245))) (and (=> (and (= (x4708 (x3272 x1098) (x747 1) 0) x4632) (<= 0 x1789) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1789) x836 (= 1 x1062) (= x2071 32) (= x1098 (x1505 1461501637330902918203684832716283019655932542975 x87)) (= (x3290 x4632) x1789)) x3777) (=> (not x836) x46)))))
(assert (x1672 x2172))
(assert (= (=> (and (= x1810 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1775)) (= x3062 (or (and (> 32 x32) (= true (<= x32 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x32))) (= (x2276 (+ x32 31)) x1775) (= (x2276 (+ x1810 x2538)) x401)) (and (=> (not x3062) x1273) (=> x3062 x4032))) x3128))
(assert (x1672 x5078))
(assert (= x1178 (=> (and (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x767)) x2009) (= x767 (div x4393 1000000000000000000)) (= x2923 (> 0 x2009)) (= (mod (* x4602 x3004) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4393)) (and (=> (and (not x39) (= x1807 (x40 x2037)) (not x2923) (= x578 x767) (= x519 x578) (= (> x1807 1) x39)) x5111) (=> x2923 x4498)))))
(assert (x963 x4268))
(assert (x1672 x5279))
(assert (x1672 x63))
(assert (x1672 x3446))
(assert (x1672 x3228))
(assert (x1672 x530))
(assert (x1672 x3717))
(assert (x1672 x3593))
(assert (x1672 x221))
(assert (x1672 x629))
(assert (x1672 x5153))
(assert (= (and (not x2592) x3597) x753))
(assert (x1672 x652))
(assert (x1672 x2155))
(assert (x1672 x4111))
(assert (x1672 x2449))
(assert (= (=> (and (= (= x1545 x1436) x3672) (= (x1505 1461501637330902918203684832716283019655932542975 x1545) x1436)) (and (=> (and (= (x3290 x826) x3640) (= (x4708 (x3272 x1894) (x747 1) 0) x826) (= x5138 32) x3672 (= 1 x2002) (<= x3640 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1505 1461501637330902918203684832716283019655932542975 x1266) x1894) (>= x3640 0)) x686) (=> (not x3672) x2483))) x4543))
(assert (x1672 x5167))
(assert (x1672 x1435))
(assert (= (x4643 (x3272 x4165)) x4165))
(assert (= (=> (and (= x2653 (x833 x2377)) (= x4327 (x5238 x149)) (= (< 0 x3885) x167) (= x3885 (x2957 x4327))) (and (=> (not x167) x4498) (=> x167 x2637))) x3288))
(assert (x963 x1625))
(assert (x1814 x877 x2783))
(assert (= (and (not x2053) x1755) x3676))
(assert (= x4584 (and (=> x4184 x2365) (=> (and (not x4184) (= x4184 x4461)) x2969))))
(assert (x1672 x3654))
(assert (x1672 x318))
(assert (x1672 x499))
(assert (= (or x1562 x5038) x3323))
(assert (x1672 x2061))
(assert (x1672 x48))
(assert (= (=> (and (= x3240 (or (and (= (<= x816 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x816)) (> x816 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x4232 (x3272 274184521717934524641157099916833587202)) x2183) (not (< x1432 826074471)) (= x3188 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 1889567281 x1432)) (< 0 x2183) (= x1432 2835717307) (= x1078 x394) (not (= x1432 826074471)) (= x4123 x2117) (= x4129 x2497) (= x394 68) (not (> 4 x394)) (not (= 2514000705 x1432)) (= x816 (x529 (- x394 4)))) (and (=> x3240 x663) (=> (not x3240) x3962))) x1488))
(assert (x1814 x4134 x4858))
(assert (= (x4643 (x3272 x4201)) x4201))
(assert (x1814 x1587 x4340))
(assert (x1672 x3947))
(assert (= x708 (=> (and (= x2051 (< 0 x4949)) (= (x3206 x2165) x5222)) (and (=> (and (= 1 x3134) (not x2051)) x2180) (=> x2051 x3977)))))
(assert (= x3863 (x4643 (x3272 x3863))))
(assert (x1672 x2207))
(assert (= x828 (=> (and (= (= x4635 x3538) x2510) (= (x40 x3621) x4635) (= (x554 x4937) x3621) (= (x1972 x2355) x3538)) (and (=> x2510 x5064) (=> (not x2510) x4498)))))
(assert (x1672 x3243))
(assert (x1672 x1438))
(assert (x1672 x1905))
(assert (x1672 x3217))
(assert (x1672 x4049))
(assert (x4182 x2882))
(assert (= x4867 (and x1365 x991)))
(assert (= (x132 x422) 0))
(assert (= (x4643 (x747 88191208983996609870514743494480291812870855255587790976526977987464101101568)) 88191208983996609870514743494480291812870855255587790976526977987464101101568))
(assert (x1672 x1587))
(assert (x2083 x2717 x712))
(assert (x1672 x2716))
(assert (x1672 x4899))
(assert (= (and (not x2981) x2799) x3255))
(assert (x1672 x5121))
(assert (x1672 x1122))
(assert (x4680 x4869 x913))
(assert (x1672 x2736))
(assert (= x4984 (=> (and (= x3519 (> x1520 0)) (= (x57 x2549) x338)) (and (=> (and (= 1 x2319) (not x3519)) x230) (=> x3519 x4173)))))
(assert (= x1875 (and x3895 x2337)))
(assert (x1672 x4403))
(assert (= x3575 (=> (and (= (x2276 (+ 32 x3223)) x4789) (= x2067 (x2276 (+ 64 x99))) (= x4306 (x2276 (+ 36 x3832))) (= x3785 (x1505 1461501637330902918203684832716283019655932542975 x3765)) (= (= x402 0) x76) (= (x529 (- x4306 x3832)) x48) (= (x4002 x2067) x4593) (= (x1505 1461501637330902918203684832716283019655932542975 x4593) x3362) (= x3765 (x288 x4888)) (= (x4232 (x3272 x3362)) x402) (= (x88 x4789) x99) (= x713 (x2276 (+ 4 x3832)))) (and (=> x76 x4032) (=> (not x76) x1902)))))
(assert (x1672 x4119))
(assert (x1672 x2002))
(assert (x1672 x2280))
(assert (x1672 x2397))
(assert (x1672 x1241))
(assert (= (=> (and (= x1124 (= 0 x5273)) (= (x1505 1461501637330902918203684832716283019655932542975 x5163) x3546) (= x4451 (x2276 (+ x3792 96))) (= (x3320 x4451) x1482) (= x5273 (x4232 (x3272 x3546)))) (and (=> (and (or (and (> 4294967296 x1107) x2801 (= 1 x1769)) (and (= x1267 x1769) (not x2801))) (= x2801 (< 0 x1267)) (not x1124)) x1243) (=> x1124 x4498))) x2566))
(assert (= (and x2922 x2222) x3536))
(assert (x1672 x3877))
(assert (=> (<= x4671 10000) (= (x3272 x4671) (x747 x4671))))
(assert (x1672 x2961))
(assert (x1672 x2303))
(assert (x1672 x3906))
(assert (x1672 x3925))
(assert (x1672 x4312))
(assert (x1672 x646))
(assert (= x1654 (and (not x3027) x114)))
(assert (= (and (not x792) x4919) x4170))
(assert (x1672 x1894))
(assert (x1672 x2318))
(assert (= (or (and x2673 x5293) (and x1542 x2000)) x4953))
(assert (x1672 x3933))
(assert (x1672 x4945))
(assert (= x4746 (=> (and (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x495)) x928) (= (x2919 x212) x495) (= x2136 (< x928 0)) (= x212 (x2276 (+ x1342 192)))) (and (=> x2136 x4032) (=> (and (= x4084 x495) (= x5301 (> x317 1)) (not x2136) (= (x1854 x1641) x317) (= x4084 x1084) (not x5301)) x744)))))
(assert (=> (<= x4124 10000) (= (x3272 x4124) (x747 x4124))))
(assert (x1672 x2377))
(assert (= (=> (and (= (x1505 x1905 x5194) x1917) (= x3815 (x1505 x467 x1847)) (= 1 x467) (= x1847 (ite (< x2717 78) 1 0)) (= x561 (= 0 (x4811 x3815 x1917))) (= (ite (> 32 x2717) 1 0) x5194) (= x1905 1)) (and (=> (and (not x561) (= x870 (x641 10 x2717))) x3844) (=> (and x561 (= (> x2717 1) x5005) (or (and (= x4769 10) (not x5005) (= x2228 1)) (and (= (= 0 x3884) x2100) x5005 (= (x1505 1 x2717) x3884) (not x5131) (= (ite x2100 1 10) x2228) (= (x3692 x2717 1) x3645) (= x4769 100) (= (> x3645 1) x5131)))) x1491))) x1354))
(assert (= x2627 (and x4774 (not x1903))))
(assert (x1672 x4195))
(assert (x1672 x1054))
(assert (x1672 x5229))
(assert (x1672 x4622))
(assert (= x4503 (=> (and (= (= x615 x1984) x688) (= x1984 (x2391 x3881)) (= (x3231 x1007) x3881) (= x615 (x1564 x470))) (and (=> (not x688) x4032) (=> x688 x3330)))))
(assert (= x4497 (and (not x226) x5084)))
(assert (=> (<= x407 10000) (= (x3272 x407) (x747 x407))))
(assert (x963 x1775))
(assert (= true x2262))
(assert (x1672 x4956))
(assert (x1814 x274 x1160))
(assert (= x42 (and x1563 (not x76))))
(assert (x1672 x3668))
(assert (x963 x4713))
(assert (= x2963 (and (not x388) x3323)))
(assert (x1672 x1526))
(assert (x1672 x436))
(assert (x1672 x4052))
(assert (x1672 x996))
(assert (x1672 x2147))
(assert (x1672 x3890))
(assert (= (x2591 x588) 0))
(assert (= (x4743 x4451) (ite (and x4784 x5145 (not x793)) (x62 x4451) (ite (and (not x5145) x4784 (not x793) (not x1447)) (x560 x4451) (x4933 x4451)))))
(assert (x1672 x2270))
(assert (x1672 x86))
(assert (x1672 x81))
(assert (x1672 x3004))
(assert (x1672 x2998))
(assert (x1672 x705))
(assert (x1672 x1194))
(assert (x4182 x3395))
(assert (x1672 x5302))
(assert (=> (>= 10000 x1634) (= (x3272 x1634) (x747 x1634))))
(assert (= (=> (and (= x3179 x4488) (= x492 x2088)) x4859) x4390))
(assert (= x2461 (and x4600 x3374)))
(assert (x1672 x713))
(assert (= (=> (= (= 0 x2583) x1312) (and (=> (not x1312) x533) (=> x1312 x4498))) x583))
(assert (= (and x2616 (not x1329)) x1668))
(assert (x1672 x5017))
(assert (x1672 x4374))
(assert (=> (<= x577 10000) (= (x747 x577) (x3272 x577))))
(assert (x3419 x1520 x4018))
(assert (x1672 x1409))
(assert (= x780 (=> (and (= (< 0 x4727) x959) (= x2820 (mod (* x763 x3377) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (and (= (div x2820 x4727) x2234) (= x2234 x2240) x959) x2245) (=> (not x959) x4498)))))
(assert (=> (>= 10000 x3591) (= (x747 x3591) (x3272 x3591))))
(assert (= x2796 (and x1678 x3212)))
(assert (x1672 x2793))
(assert (x4494 x1314 x1201 x781 x2915))
(assert (= true x2570))
(assert (= (or x1924 (and x2788 (not x379))) x4545))
(assert (= (x3283 x169) (ite (and (not x613) x5195 x2910) (x899 x169) (x3734 x169))))
(assert (x1672 x928))
(assert (x1672 x3852))
(assert (= 0 (x1341 x4403)))
(assert (= (and (not x4626) x2194) x3339))
(assert (= (=> (and (= (x2391 x59) x5227) (= (> x5227 0) x4583)) (and (=> x4583 x2478) (=> (and (not x4583) (= x1342 x421)) x3614))) x4837))
(assert (x1672 x3383))
(assert (x1672 x567))
(assert (x1672 x206))
(assert (x1672 x3572))
(assert (= (x4643 (x747 1082367153)) 1082367153))
(assert (= (=> (= (= x4007 274184521717934524641157099916833587206) x3343) (and (=> (not x3343) x1551) (=> (and (>= x1771 0) (= x4270 (x4232 (x3272 274184521717934524641157099916833587206))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1771) (not (= x1008 117300739)) (= x2 1) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x3868) (> 826074471 x1008) (< 0 x4270) (= x4244 x1418) x3343 (= x1008 404098525) (= x947 32) (not (= 157198259 x1008)) (not (> 4 x4244)) (= x4244 4)) x1081))) x926))
(assert (= x1210 (and x1538 (not x1474))))
(assert (= (=> (and (= 0 x146) (= x3636 x1433)) x5067) x2188))
(assert (x1672 x4516))
(assert (x963 x3275))
(assert (= (x3692 x1520 1) (div x1520 2)))
(assert (x963 x2551))
(assert (= (and x1110 x4597) x5076))
(assert (= x2638 (=> (and (> x820 0) (not (= 826074471 x22)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4427) (= x4523 (or (and (< x260 32) (= (<= x260 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x260 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2353 36) (= (x4232 (x3272 274184521717934524641157099916833587202)) x820) (not (< x22 826074471)) (= x5217 x2353) (not (< x2353 4)) (= x2515 x223) (= (x529 (- x2353 4)) x260) (= 1889567281 x22)) (and (=> (not x4523) x2539) (=> x4523 x1732)))))
(assert (x1672 x3678))
(assert (= x716 (=> (and (= x4674 (= x254 x1545)) (= (x1505 1461501637330902918203684832716283019655932542975 x1545) x254)) (and (=> (and (= x1837 (x1505 1461501637330902918203684832716283019655932542975 x1828)) (>= x4200 0) (= x2094 1) (<= x4200 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x671 (x4708 (x3272 x1837) (x747 1) 0)) (= (x3910 x671) x4200) x4674 (= 32 x2964)) x5154) (=> (not x4674) x4227)))))
(assert (= (and x2920 (not x4164)) x1845))
(assert (= (x3359 x966) (ite (and (not x1846) x2358 x949) (x444 x966) (x4368 x966))))
(assert (= (=> (and (= (= 0 x4112) x283) (= x1093 (x4232 (x3272 274184521717934524641157099916833587231))) (< 0 x1093)) (and (=> x283 x4830) (=> (not x283) x4032))) x2205))
(assert (x1672 x1583))
(assert (x1672 x4635))
(assert (x963 x1828))
(assert (x1672 x4047))
(assert (x4494 x2402 x5282 x4430 x2520))
(assert (x1672 x3089))
(assert (x1672 x1251))
(assert (x963 x4256))
(assert (x1672 x1626))
(assert (x1672 x4821))
(assert (x1672 x2479))
(assert (x3419 x2011 x4401))
(assert (x1672 x360))
(assert (= x450 (=> (and (not x4424) (= x3311 (x40 x737)) (= (> x3311 1) x4424) (= x5 x3305) (= x737 (x554 x4937))) x828)))
(assert (= (=> (and (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3447)) x649) (= (> x3551 x649) x3770) (= x4908 (x2050 x3876))) (and (=> (not x3770) x5247) (=> x3770 x4032))) x3748))
(assert (x1672 x100))
(assert (= x4372 (or (and x2729 x1284) (and x3708 x1875))))
(assert (= x4322 (x4643 (x3272 x4322))))
(assert (x963 x3028))
(assert (x1672 x3329))
(assert (x1672 x2468))
(assert (= 404098525 (x4643 (x747 404098525))))
(assert (x1672 x3857))
(assert (x1672 x2651))
(assert (x1672 x2382))
(assert (x4680 x4793 x3237))
(assert (x4182 x1048))
(assert (x1672 x1087))
(assert (= x3462 (=> (and (> 1684360437 x4627) (= x4627 1267348777) (not (= 1159839769 x4627)) (= (x529 (- x3285 4)) x941) (= x137 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x941) (and (< x941 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x941) true)))) (not (< x3285 4)) (not (= x4627 1082367153)) (not (= 1054675240 x4627)) (< x4627 2743638299) (not (< x4627 1054675240))) (and (=> (not x137) x1726) (=> x137 x4498)))))
(assert (x1672 x3809))
(assert (x1672 x5146))
(assert (x1672 x3159))
(assert (x1672 x3919))
(assert (= 0 (x2883 x3239)))
(assert (x1672 x4921))
(assert (x1672 x1507))
(assert (x1672 x4877))
(assert (x1672 x4379))
(assert (= x5241 (=> (and (= x3930 (= x3468 x223)) (= x3468 x418)) (and (=> (not x3930) x2576) (=> (and (= x370 1) (= x521 (x4708 (x3272 x3468) (x747 1) 0)) (= 32 x2413) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1925) (<= 0 x1925) (= x1925 (x599 x521)) x3930) x3630)))))
(assert (x4494 x3998 x2873 x2858 x1838))
(assert (x4494 x1120 x3319 x191 x2370))
(assert (x1672 x190))
(assert (=> (>= 10000 x4342) (= (x747 x4342) (x3272 x4342))))
(assert (= x3777 (=> (and (= x2953 x2071) (= x5144 x1062)) x3043)))
(assert (x1672 x1851))
(assert (x1672 x1006))
(assert (x1672 x4205))
(assert (= (and x3784 (not x4090)) x5000))
(assert (x1672 x1439))
(assert (x1672 x536))
(assert (= (=> (= x2062 (= x197 0)) (and (=> (not x2062) x802) (=> x2062 x4032))) x5128))
(assert (= x1676 (and (not x207) x4652)))
(assert (= (and x1145 x4455) x4435))
(assert (= x1802 (or (and x1594 x4594) (and (not x3930) x4271))))
(assert (x1672 x4198))
(assert (= (=> (and (= (or (and (< x2339 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2339))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2339)) x3393) (= (x4399 x4822) x2339)) (and (=> (not x3393) x1018) (=> x3393 x4498))) x4160))
(assert (x1672 x5259))
(assert (x1672 x431))
(assert (x1672 x1828))
(assert (x1672 x3203))
(assert (= (and (not x96) x1870) x4651))
(assert (= x1200 (and x3561 x2665)))
(assert (x963 x3714))
(assert (x963 x882))
(assert (x1672 x2021))
(assert (x1672 x2517))
(assert (x1672 x2882))
(assert (x1672 x4131))
(assert (x1672 x1369))
(assert (x1672 x1704))
(assert (= x1678 (and (not x1793) x3935)))
(assert (= (and x3837 x1599) x958))
(assert (x1672 x2))
(assert (= x5243 (=> (and (= x171 (> x1933 x1067)) (= (x3344 x472) x763) (= x1067 (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2107)))) (and (=> x171 x4498) (=> (not x171) x2956)))))
(assert (x1814 x4593 x1717))
(assert (x1672 x4270))
(assert (x1672 x2299))
(assert (= (ite x423 (ite x2970 (x3369 x1552) (x2581 x1552)) (ite x4723 (x3369 x1552) (x5058 x1552))) (x323 x1552)))
(assert (x1672 x1643))
(assert (x1672 x439))
(assert (= (and x1324 (not x4650)) x1214))
(assert (x1672 x2577))
(assert (x1672 x4835))
(assert (= (or (and x174 x2190) (and x2808 x257)) x2937))
(assert (x1672 x2776))
(assert (x1672 x5022))
(assert (x1672 x4151))
(assert (x1814 x3892 x154))
(assert (= x3843 (and (not x5060) x2720)))
(assert (= 3248611349834744311580729226515044654865681148386811760331698647898072809472 (x2967 x813)))
(assert (x1672 x3994))
(assert (x1672 x1873))
(assert (= (x4531 x4789) (ite (= x4789 x3908) x876 (x4712 x4789))))
(assert (=> (>= 10000 x4363) (= (x747 x4363) (x3272 x4363))))
(assert (x1672 x1913))
(assert (= x209 (=> (and (= x169 (x2276 (+ 192 x1342))) (= x1793 (= x5107 0)) (= x5107 (x2919 x169))) (and (=> (and (= x5261 x1749) x1793) x3422) (=> (not x1793) x2809)))))
(assert (= (x659 x422) (ite (= x4709 x422) 0 (x132 x422))))
(assert (= (ite (and x3916 x817 (not x1635)) (x770 x2549) (x592 x2549)) (x2309 x2549)))
(assert (x1672 x1408))
(assert (= (and x5221 (not x2406)) x4419))
(assert (x1814 x1625 x4381))
(assert (and (= 374144419156711147060143317175368453031918731001856 (x641 2 168)) (= (x641 2 160) 1461501637330902918203684832716283019655932542976) (= (x641 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= 72057594037927936 (x641 2 56)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x641 2 256)) (= 6277101735386680763835789423207666416102355444464034512896 (x641 2 192)) (= 281474976710656 (x641 2 48)) (= 1 (x641 2 0)) (= (x641 2 96) 79228162514264337593543950336) (= (x641 2 80) 1208925819614629174706176) (= (x641 2 176) 95780971304118053647396689196894323976171195136475136) (= (x641 2 112) 5192296858534827628530496329220096) (= 105312291668557186697918027683670432318895095400549111254310977536 (x641 2 216)) (= (x641 2 208) 411376139330301510538742295639337626245683966408394965837152256) (= 309485009821345068724781056 (x641 2 88)) (= 1329227995784915872903807060280344576 (x641 2 120)) (= (x641 2 200) 1606938044258990275541962092341162602522202993782792835301376) (= (x641 2 24) 16777216) (= (x641 2 136) 87112285931760246646623899502532662132736) (= 340282366920938463463374607431768211456 (x641 2 128)) (= 5708990770823839524233143877797980545530986496 (x641 2 152)) (= (x641 2 104) 20282409603651670423947251286016) (= 65536 (x641 2 16)) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x641 2 232)) (= 4722366482869645213696 (x641 2 72)) (= (x641 2 64) 18446744073709551616) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x641 2 240)) (= (x641 2 144) 22300745198530623141535718272648361505980416) (= 24519928653854221733733552434404946937899825954937634816 (x641 2 184)) (= (x641 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= 256 (x641 2 8)) (= 4294967296 (x641 2 32)) (= 1099511627776 (x641 2 40))))
(assert (x1672 x18))
(assert (x1672 x3305))
(assert (= (=> (= (= x4323 0) x2070) (and (=> x2070 x4498) (=> (not x2070) x429))) x2563))
(assert (= true x544))
(assert (= (x5119 x1401) (ite (= x1401 x3684) x2767 (x992 x1401))))
(assert (= x5234 (=> (and (= x5298 (= x5311 x3152)) (= x3152 (x2686 x3187)) (= (x1505 1461501637330902918203684832716283019655932542975 x3152) x5311)) (and (=> x5298 x5203) (=> (not x5298) x4498)))))
(assert (x1672 x1882))
(assert (= (and x4286 (not x2968)) x5196))
(assert (x1814 x2863 x1827))
(assert (x1672 x3640))
(assert (= x4352 (=> (and (= (x102 x3982) x2253) (= x3821 (< 0 x2253))) (and (=> (not x3821) x4032) (=> x3821 x4251)))))
(assert (= 0 (x2614 x5151)))
(assert (x1672 x1680))
(assert (x1672 x1991))
(assert (x1672 x2868))
(assert (= (=> (and (= x4015 (x2276 (+ x1622 31))) (= (or (and (< x1622 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1622))) (> x1622 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2578) (= (x2276 (+ x974 x1438)) x1552) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4015) x974)) (and (=> x2578 x4498) (=> (not x2578) x4693))) x854))
(assert (= (=> (and (= x2726 (x40 x1175)) (= (< 0 x2726) x2507)) (and (=> (and (not x2507) (= x4242 x493)) x694) (=> x2507 x1969))) x4785))
(assert (= x1666 (=> (and (= x5096 (x759 x5018)) (= x1576 (> x3143 0)) (= x3143 (x2391 x3881))) (and (=> x1576 x3584) (=> (not x1576) x4032)))))
(assert (= x4495 (and x379 x2788)))
(assert (x1672 x2232))
(assert (= (ite (and (not x793) x4784 x5145) (x4923 x3931) (ite (and x4784 (not x793) (not x1447) (not x5145)) (x1292 x3931) (x1146 x3931))) (x1949 x3931)))
(assert (= x2389 (and x4208 x1323)))
(assert (x1672 x3730))
(assert (x4494 x2542 x5012 x4423 x4043))
(assert (x1672 x3860))
(assert (x1672 x4178))
(assert (x1672 x250))
(assert (= (x2686 x3187) (ite (and (not x3241) x2383 x2022) (x2782 x3187) (x1879 x3187))))
(assert (x1672 x2803))
(assert (= (and x1471 (not x3986)) x2058))
(assert (= (x4643 (x747 1267348777)) 1267348777))
(assert (= (=> (and (= (or (and (< x5174 32) (= (<= x5174 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x5174 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1866) (= x400 (x2276 (+ x861 x4571))) (= x3455 (x2276 (+ 31 x5174))) (= x861 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3455))) (and (=> (not x1866) x4464) (=> x1866 x4032))) x4358))
(assert (x1672 x1327))
(assert (= x695 true))
(assert (x1672 x5296))
(assert (= x664 (=> (and (= (x1854 x1641) x4067) (= (< 0 x4067) x2640)) (and (=> (not x2640) x4032) (=> x2640 x3726)))))
(assert (= x1577 (and (=> x4696 x1197) (=> (not x4696) x4498))))
(assert (x1672 x3390))
(assert (x1672 x1041))
(assert (x1672 x861))
(assert (= x4271 (and (not x1594) x4594)))
(assert (= x2245 (=> (and (= x4697 (x2540 x1556)) (= x4115 (x4232 (x3272 x4697))) (= x1383 (= x4115 0)) (= x2135 (x2276 (+ 36 x18))) (> 1461501637330902918203684832716283019655932542976 x4697) (>= 1461501637330902918203684832716283019655932542975 x4697) (>= x4697 0) (= x3357 (x2276 (+ 4 x18)))) (and (=> (and (not x1383) (= (< 0 x637) x1825) (or (and (not x1825) (= x3008 x3449) (= x2155 x4972) (= x3019 x337) (= x1708 x1771)) (and (= (x4008 (x3272 274184521717934524641157099916833587231)) x90) (= x3065 x1771) (= x2155 x1080) x4968 x1825 (= x3019 x4130) (= x4968 (= (x1274 (x3272 x4697)) x505)) (= x4476 x3008) (> 4294967296 x951) x3567 (= (<= x90 (x1274 (x3272 274184521717934524641157099916833587231))) x3567) (= x505 (x4008 (x3272 x4697)))))) x4042) (=> x1383 x4498)))))
(assert (x1672 x4822))
(assert (x1672 x3573))
(assert (= (=> (and (= x1320 (< 0 x1156)) (= x1156 (x1854 x1641))) (and (=> (not x1320) x4032) (=> x1320 x4746))) x2927))
(assert (x963 x1003))
(assert (= (+ 5 (x4643 x3671)) (x4643 (x307 x3671 5))))
(assert (= x5154 (=> (and (= x4047 x2094) (= x2964 x1705)) x4907)))
(assert (x1672 x2305))
(assert (x963 x2736))
(assert (= (or (and x516 x3343) (and x4986 x4885)) x1260))
(assert (= (and x2104 (not x1325)) x430))
(assert (= (x4643 (x307 x4482 2)) (+ 2 (x4643 x4482))))
(assert (= (=> (and (= x360 x52) (= x838 x4212)) x2571) x2048))
(assert (x1672 x1473))
(assert (= (ite (= x3908 x822) x876 (x4712 x822)) (x4531 x822)))
(assert (= (=> (and (= (= x125 0) x4954) (= x1262 (= 0 x764)) (= x125 (mod (* x2653 x1482) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1505 x1478 x2790) x764) (= x4131 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125)) (= (ite (> x19 x4131) 1 0) x2790) (= x1478 (ite (not x4954) 1 0))) (and (=> (not x1262) x4498) (=> x1262 x3351))) x2029))
(assert (x1672 x4331))
(assert (x1672 x2811))
(assert (x1672 x801))
(assert (x1672 x3036))
(assert (x4494 x980 x2525 x758 x2629))
(assert (x1672 x113))
(assert (= x1600 (x4643 (x3272 x1600))))
(assert (x1672 x4363))
(assert (= (and x4017 x4361) x2254))
(assert (x1672 x3360))
(assert (= (=> (and (= (or (> x1276 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1276 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1276))) x3411) (= (x2276 (+ x400 x3378)) x1958) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4614) x3378) (= x4614 (x2276 (+ x1276 31)))) (and (=> (not x3411) x1867) (=> x3411 x4032))) x2040))
(assert (x1814 x3495 x376))
(assert (x963 x711))
(assert (x963 x233))
(assert (x1672 x2292))
(assert (= x989 (=> (and (= x3090 0) (= x101 x5017)) x2529)))
(assert (= (x3418 x3089) 0))
(assert (x1672 x4733))
(assert (= x1629 (=> (and (= x1392 x4291) (= x739 x4033)) x2728)))
(assert (x1672 x4700))
(assert (x1672 x934))
(assert (x4494 x4268 x3932 x4304 x3521))
(assert (x1672 x831))
(assert (= true x977))
(assert (= (x747 404098525) (x3272 404098525)))
(assert (= (x4863 x2397) (ite (= x2397 x4965) x5252 (x855 x2397))))
(assert (x1672 x3934))
(assert (x1672 x3345))
(assert (= x2557 (and x1668 (not x4544))))
(assert (= x1207 (and x461 (not x4019))))
(assert (x1672 x2773))
(assert (x1672 x4389))
(assert (= (=> (and (= x2323 (> x3558 0)) (= x3558 (x1564 x470))) (and (=> x2323 x1721) (=> (not x2323) x4032))) x1321))
(assert (x1814 x2026 x1540))
(assert (= x510 (=> (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x189 (x3272 x2042))) x4186) (= (x189 (x3272 x2042)) x4740) x4186 (= x4152 (x2895 (x3272 274184521717934524641157099916833587231))) (= (= x2042 274184521717934524641157099916833587206) x920)) (and (=> x920 x3293) (=> (not x920) x3710)))))
(assert (= x3896 (=> (and (= x3553 x492) (= x494 x3179)) x4859)))
(assert (x1672 x4960))
(assert (= (=> (and (= (x323 x1552) x2620) (= (= x2620 0) x1651)) (and (=> (not x1651) x4768) (=> (and x1651 (= x52 0) (= x1333 x4212)) x2571))) x4272))
(assert (x1672 x331))
(assert (= (=> (and (= (x1753 x1363) x4348) (= (x4459 x4309) x1363) (= x3445 (= x831 x4348)) (= (x1753 x4407) x831) (= x4407 (x4459 x4309))) (and (=> x3445 x4425) (=> (not x3445) x4032))) x2349))
(assert (= (ite (and (not x1143) x571 x4953) (x1702 x968) (x3910 x968)) (x5030 x968)))
(assert (x1672 x2966))
(assert (= x5027 (=> (and (= x2736 (x2276 (+ 31 x2687))) (= x1438 (x2276 (+ x4870 x4054))) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2736) x4054) (= x1090 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2687)) (< x2687 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2687)))) (and (=> (not x1090) x4996) (=> x1090 x4498)))))
(assert (x1672 x4085))
(assert (x1672 x767))
(assert (x4494 x1775 x2332 x1356 x3771))
(assert (x1672 x3570))
(assert (x963 x5163))
(assert (x1672 x2555))
(assert (= (and x3814 x1355) x1661))
(assert (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x4643 (x747 22270923681254677845691103109158760375340177724800803888364822332811285364736))))
(assert (=> (>= 10000 x4351) (= (x747 x4351) (x3272 x4351))))
(assert (=> (>= 10000 x5009) (= (x747 x5009) (x3272 x5009))))
(assert (= x3522 (=> (and (= (div x2741 1000000000000000000) x203) (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4239)) x3420) (= (< x3420 x2367) x1277) (= x2741 (mod (* x1031 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x203 1000000000000000000) x4239)) (and (=> x1277 x4032) (=> (not x1277) x12)))))
(assert (x1672 x5057))
(assert (= x497 (and x2489 x5007)))
(assert (x1672 x377))
(assert (x4182 274184521717934524641157099916833587206))
(assert (x1672 x3244))
(assert (= (x800 x4822) 0))
(assert (= (x4643 (x3272 x4824)) x4824))
(assert (= (or (and (not x5044) x2633) (and x3782 x2248)) x308))
(assert (= (ite (= x984 x4964) x2646 (x4883 x4964)) (x1584 x4964)))
(assert (x4182 x673))
(assert (x1672 x3337))
(assert (x1672 x876))
(assert (x1672 x1641))
(assert (x1672 x4999))
(assert (= x4206 x1834))
(assert (x1672 x2037))
(assert (x1672 x101))
(assert (=> (>= 10000 x1792) (= (x747 x1792) (x3272 x1792))))
(assert (x1814 x2160 x4551))
(assert (= x4669 (=> (and (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1945) x69) (= x4142 (x2276 (+ x4948 x69))) (= (x2276 (+ 31 x1328)) x1945) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1328) (and (= (<= x1328 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1328 32))) x1329)) (and (=> x1329 x4498) (=> (not x1329) x4094)))))
(assert (= x5308 (=> (and (= (x40 x2037) x938) (= x5026 (< 0 x938))) (and (=> (not x5026) x4498) (=> x5026 x4843)))))
(assert (= (x3272 32884410799705633174121290916597065681711743008034783737682747490404042539008) (x747 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (= (=> (and (= (x1505 1461501637330902918203684832716283019655932542975 x3495) x673) (= (= 0 x2350) x2338) (= x1242 (x761 x4408)) (= (x4708 (x3272 x673) (x747 2) 0) x3671) (<= 0 x1242) (= (x4232 (x3272 x4722)) x2350) (<= x1242 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1505 1461501637330902918203684832716283019655932542975 x589) x4722) (= (x307 x3671 5) x4408)) (and (=> (and (not x2338) (or (and (< x4334 4294967296) (= x4514 1) x1172) (and (= x263 x4514) (not x1172))) (= (< 0 x263) x1172)) x348) (=> x2338 x4032))) x4179))
(assert (= (=> (and (= (x4008 (x3272 274184521717934524641157099916833587202)) x2004) (>= 1461501637330902918203684832716283019655932542975 x1545) (= x2685 (x4008 (x3272 274184521717934524641157099916833587231))) x4598 (= 2 x4140) (= x2099 x2605) (= x3551 x925) (= (> (x4232 (x3272 274184521717934524641157099916833587231)) 0) x2473) (= x3714 x3495) x4114 (= x5077 (x4008 (x3272 274184521717934524641157099916833587206))) (= false x4457) (= x466 x3175) (= x4480 x2115) x2473 (= (= x4480 x3997) x4598) (>= x3334 0) (>= x3333 0) (<= 0 x1545) (<= 0 x2685) (= (< 0 (x4232 (x3272 274184521717934524641157099916833587206))) x4114) (<= x3333 1461501637330902918203684832716283019655932542975) (= x579 false) (>= x2390 0) (< 67 x4266) x962 (<= x3334 1461501637330902918203684832716283019655932542975) (<= 0 x4920) (= x3606 x2390) (= false x1839) (>= x4336 0) (>= x5077 0) (<= 0 x2004) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4266) true) (= x2115 x1545) (>= 1461501637330902918203684832716283019655932542975 x2390) (= x2115 x4920) (= x2099 x4336) (<= x4920 1461501637330902918203684832716283019655932542975) (= (> (x4232 (x3272 274184521717934524641157099916833587202)) 0) x962) (<= x4336 1461501637330902918203684832716283019655932542975) (= x3997 x3333) (= false x2535) (= x2247 1267348777)) x2205) x3252))
(assert (x1672 x4826))
(assert (= x123 (and (not x1815) x2254)))
(assert (= x4213 (and (not x3796) x4857)))
(assert (x1672 x239))
(assert (x1672 x5082))
(assert (= x2297 (and x797 x2412)))
(assert (= (x4643 (x3272 x4697)) x4697))
(assert (= (or (and x846 x4249) (and x5196 x3254)) x1611))
(assert (= (x4643 (x3272 x3907)) x3907))
(assert (= (=> (and (= x952 (x2691 x3638)) (= x5214 (< 0 x952))) (and (=> (not x5214) x4032) (=> x5214 x3368))) x1212))
(assert (x1672 x155))
(assert (= x1816 (=> (= x3467 (= 274184521717934524641157099916833587202 x276)) (and (=> (not x3467) x893) (=> (and x3467 (= x3762 4) (= 32 x377) (= x3762 x5082) (< 0 x2804) (<= 0 x3019) (not (< x3762 4)) (= (x4232 (x3272 274184521717934524641157099916833587202)) x2804) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3019) (= 826074471 x4044) (= x5098 22270923681254677845691103109158760375340177724800803888364822332811285364736) (not (< x4044 826074471)) (= 1 x4323)) x2563)))))
(assert (= (ite (and x1100 (not x2552) x5010) (x4505 x1480) (ite (and (not x5010) (not x327) (not x2552) x1100) (x3658 x1480) (x1532 x1480))) (x1709 x1480)))
(assert (x1672 x2964))
(assert (x2960 x4383))
(assert (x1672 x4676))
(assert (= 0 (x3741 x2280)))
(assert (x1672 x1932))
(assert (= x4667 (and x1788 (not x3506))))
(assert (= x2794 (and x869 (not x2317))))
(assert (x1672 x3551))
(assert (= (x747 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x3272 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (=> (and (= (< 0 x4663) x4612) (= x4663 (x3453 x3550))) (and (=> (not x4612) x4498) (=> x4612 x4984))) x3669))
(assert (= (and (not x3769) x2610) x4366))
(assert (x1672 x2759))
(assert (x1672 x2016))
(assert (= x3845 x1100))
(assert (= x4915 (=> (and (= x2613 (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4639))) (= (> 0 x2613) x3971) (= (mod (* x95 x2407) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4410) (= (div x4410 1000000000000000000) x4639)) (and (=> (and (= x4639 x3860) (not x4918) (= x4918 (< 1 x940)) (not x3971) (= x3860 x1567) (= x940 (x2391 x2215))) x4620) (=> x3971 x4032)))))
(assert (x1672 x90))
(assert (x1672 x4144))
(assert (=> (>= 10000 x1734) (= (x3272 x1734) (x747 x1734))))
(assert (x963 x1527))
(assert (x1672 x3133))
(assert (x1672 x2359))
(assert (= x729 (or x627 (and (not x654) x1994))))
(assert (x963 x5202))
(assert (x1672 x3287))
(assert (x1672 x2508))
(assert (x1672 x2354))
(assert (= (=> (and (= x5068 (< x2841 x3502)) (= x2841 (x344 x3648))) (and (=> x5068 x4498) (=> (not x5068) x92))) x1068))
(assert (x1672 x1313))
(assert (=> (<= x4169 10000) (= (x747 x4169) (x3272 x4169))))
(assert (x1672 x4402))
(assert (x1672 x5278))
(assert (x1672 x445))
(assert (= x2330 (=> (and (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1482) x3069) (= (ite (< x3069 x2653) 1 0) x3677) (= (x529 (- 1000000000000000000 x2584)) x19) (= x4241 (ite (not x2792) 1 0)) (= x5262 (= 0 x4246)) (= x2792 (= 0 x1482)) (= (x1505 x4241 x3677) x4246)) (and (=> x5262 x2029) (=> (not x5262) x4498)))))
(assert (x1672 x4214))
(assert (x1672 x204))
(assert (x1672 x2465))
(assert (x1672 x5015))
(assert (x1672 x4709))
(assert (x1672 x50))
(assert (x1672 x3950))
(assert (x1672 x3476))
(assert (x1672 x2767))
(assert (= x46 (=> (and (= x2071 x1165) (= x1062 0)) x3777)))
(assert (= (and x3763 (not x5068)) x1915))
(assert (= (ite (and (not x5271) x3904 x130) (x3867 x2165) (x1288 x2165)) (x3504 x2165)))
(assert (x1672 x2623))
(assert (x1814 x3074 x954))
(assert (x1672 x1148))
(assert (= (and x3442 (not x2492)) x1514))
(assert (x963 x2087))
(assert (= (x4643 (x3272 x1792)) x1792))
(assert (x1055 x1015 x172))
(assert (x1672 x5097))
(assert (x1814 x3765 x2388))
(assert (= (=> (= x3067 (= 0 x3778)) (and (=> x3067 x4498) (=> (not x3067) x4940))) x2617))
(assert (= (=> (= (= x1089 274184521717934524641157099916833587206) x1891) (and (=> (not x1891) x2710) (=> x1891 x4456))) x2209))
(assert (= x2602 (=> (= x3120 (= x2363 0)) (and (=> x3120 x4032) (=> (not x3120) x4607)))))
(assert (= (x1584 x2560) (ite (= x984 x2560) x2646 (x4883 x2560))))
(assert (x1672 x1992))
(assert (= (=> (= (= x4169 274184521717934524641157099916833587206) x462) (and (=> (and (= x4828 1) (<= x1708 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 404098525 x1560) (not (< x264 4)) (not (= x1560 117300739)) (= x1794 32) (not (= 157198259 x1560)) (= x2743 (x4232 (x3272 274184521717934524641157099916833587206))) (= x264 4) (= x4751 10894474682274239493831243662817379401261526446360622092269559273883068006400) (> 826074471 x1560) (<= 0 x1708) x462 (= x264 x3622) (> x2743 0)) x844) (=> (not x462) x135))) x66))
(assert (x1672 x5226))
(assert (x1672 x2738))
(assert (= (=> (and (= (x554 x4937) x4569) (= (< 18446744073709551615 x4956) x5271) (= x4956 (x40 x4569))) (and (=> (and (= x934 (x2276 (+ x2355 x4198))) (not x5271) (= x4198 (x2276 (+ 32 x4563))) (or x3904 (and (not x3904) (= (x2276 (+ x2355 32)) x1770) (= (mod (* 32 x4956) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5069))) (= (mod (* x4956 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4563) (= x3904 (= x4956 0))) x4686) (=> x5271 x4498))) x4061))
(assert (x1672 x2263))
(assert (x1672 x3850))
(assert (x1672 x105))
(assert (x1672 x5156))
(assert (x1672 x5168))
(assert (= (x3493 x222) (ite (= x222 x5115) x58 (x3698 x222))))
(assert (x1672 x193))
(assert (x1672 x4201))
(assert (x1672 x3391))
(assert (x1672 x4460))
(assert (x1672 x3981))
(assert (= x228 (=> (and (= (x2391 x78) x3153) (= x700 (> x3153 18446744073709551615))) (and (=> (and (not x700) (= (x2276 (+ x3638 x1714)) x5261) (= x2079 (= x3153 0)) (= (mod (* x3153 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2625) (or (and (= x3848 (x2276 (+ x3638 32))) (not x2079) (= x914 (mod (* x3153 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2079) (= x1714 (x2276 (+ x2625 32)))) x4098) (=> x700 x4032)))))
(assert (x1672 x1479))
(assert (x1672 x5135))
(assert (x1672 x1075))
(assert (x963 x2954))
(assert (= true x5113))
(assert (x1672 x4836))
(assert (x1672 x422))
(assert (= (x4431 x1408) 0))
(assert (= x2052 (and x606 x4879)))
(assert (= x1233 (=> (and (= x4069 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (< x5112 826074471)) (= 1889567281 x5112) (= (or (and (= true (<= x5268 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x5268 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5268)) x5253) (= x1706 x3012) (not (< x36 4)) (= (x529 (- x36 4)) x5268) (not (= 826074471 x5112)) (= 36 x36) (= (x4232 (x3272 274184521717934524641157099916833587206)) x5055) (= x36 x410) (< 0 x5055)) (and (=> x5253 x4922) (=> (not x5253) x208)))))
(assert (x1672 x597))
(assert (x1814 x2555 x2008))
(assert (x1672 x1619))
(assert (= (x4643 (x747 29667888499431518244405524310122331055235727797159756471206109933501488824320)) 29667888499431518244405524310122331055235727797159756471206109933501488824320))
(assert (= x4887 true))
(assert (= x385 (=> (and (= (x1505 1461501637330902918203684832716283019655932542975 x3275) x5272) (= x1316 (x2276 (+ x2377 4))) (= (x2276 (+ 64 x1316)) x2564) (= (= 0 x2474) x4453) (= (x4232 (x3272 x557)) x2474) (= (x2276 (+ x2377 36)) x4664) (= x4894 (x1505 1461501637330902918203684832716283019655932542975 x3981))) (and (=> (and (or (and (not x547) (= x3963 x717)) (and x547 (= x3963 1) (< x1376 4294967296))) (not x4453) (= x547 (< 0 x717))) x988) (=> x4453 x4498)))))
(assert (x1672 x2201))
(assert (= x1892 (=> (and (= x3549 x2626) (= x3846 (= x3549 x811))) (and (=> (and (= x494 1) (= (x4708 (x3272 x3549) (x747 1) 0) x1299) (= x3553 32) (>= x3249 0) (= (x3811 x1299) x3249) x3846 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3249)) x3896) (=> (not x3846) x1970)))))
(assert (= (and x1394 x5169) x2415))
(assert (x1672 x1453))
(assert (x1672 x4467))
(assert (x1672 x466))
(assert (x963 x1261))
(assert (x1672 x223))
(assert (x1672 x4855))
(assert (= (x4643 (x747 18446744073709551615)) 18446744073709551615))
(assert (x1672 x177))
(assert (= (and x2323 x4495) x4237))
(assert (= x1066 (=> (= (= x4877 0) x15) (and (=> (not x15) x818) (=> x15 x4032)))))
(assert (= x5192 (and (not x312) x123)))
(assert (= (x4188 x2091) (ite (and (not x1143) x4953 x571) (x256 x2091) (x3290 x2091))))
(assert (= x614 (=> (= (= x3924 0) x3479) (and (=> x3479 x4032) (=> (not x3479) x2599)))))
(assert (x1672 x2648))
(assert (= (ite (= x1633 x4011) 274184521717934524641157099916833587231 (x3542 x1633)) (x389 x1633)))
(assert (x963 x4234))
(assert (x1672 x4706))
(assert (=> (<= x1795 10000) (= (x747 x1795) (x3272 x1795))))
(assert (x1672 x1436))
(assert (x1814 x4876 x2152))
(assert (x1672 x4342))
(assert (= (and x5002 (not x4895)) x3145))
(assert (= x3561 (and (not x3080) x2439)))
(assert (= x4792 (=> (= (= x1832 274184521717934524641157099916833587202) x4150) (and (=> (not x4150) x1621) (=> (and (= 32 x1276) (= x3178 10894474682274239493831243662817379401261526446360622092269559273883068006400) (not (= 157198259 x4603)) (= x5164 4) (= x2648 1) (< x4603 826074471) x4150 (= x4603 404098525) (not (< x5164 4)) (>= x445 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x445) (< 0 x788) (= (x4232 (x3272 274184521717934524641157099916833587202)) x788) (not (= x4603 117300739)) (= x2369 x5164)) x735)))))
(assert (= (=> (and (= x5118 (x777 x2084)) (= (x1505 1461501637330902918203684832716283019655932542975 x3495) x1878) (= (x529 (- x3961 32)) x2947) (= x2084 (x2276 (+ x4082 32))) (= 0 x3883) (= (x4232 (x3272 x1878)) x1890) (= x73 (> x1890 0)) (= (x1505 26959946667150639794667015087019630673637144422540572481103610249215 x5118) x3460) (= x4045 (x2276 (+ x4082 100))) (= (x2276 (+ x1826 128)) x4303) (= (x529 (- x4045 x4082)) x3961) (= (x2276 (+ x3447 x4071)) x3834) (= x2193 (x2276 (+ 68 x4082))) (= x341 (x2276 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3460))) (= x1826 (x2276 (+ 36 x4082)))) (and (=> (not x73) x4032) (=> (and (= (x3833 x4082) x3345) (= x4601 (> x1711 x3345)) (= x872 (< 0 x3345)) x73 (or (and (not x872) (= 0 x1711)) (and (or (and (or (and (= (x2276 (+ 128 x4045)) x1010) (or (and (= 96 x1711) (not x1203)) (and (= x1092 (x2276 (+ 128 x4082))) (not x1869) (= x2590 (x2276 (+ x4045 160))) (= 128 x1711) x1203 (= (x2894 x1092) x2061) (= (> x3345 128) x1869))) (= x4472 (x2276 (+ 96 x4082))) (= x306 (x2894 x4472)) (= x1203 (> x3345 96)) x972) (and (= x1711 64) (not x972))) (= x1819 (x2894 x3239)) x184 (= (x2276 (+ 64 x4082)) x3239) (= x3984 (x2276 (+ 96 x4045))) (= x972 (> x3345 64))) (and (not x184) (= x1711 32))) (= x2975 (x2894 x5225)) (= x4303 x707) (= x184 (> x3345 32)) (= x5225 x2084) x872)) (or (and x4601 (= (x2276 (+ x3345 x4303)) x3530)) (not x4601))) x911))) x5204))
(assert (= x2108 (and (not x1053) x2829)))
(assert (x1672 x1616))
(assert (x1672 x3849))
(assert (x1672 x399))
(assert (x1672 x2111))
(assert (x1672 x5224))
(assert (x1672 x619))
(assert (= (and x4540 x4852) x3784))
(assert (x1672 x1887))
(assert (x1672 x739))
(assert (x1672 x2954))
(assert (= x3646 (=> (= (= 0 x1194) x3274) (and (=> (not x3274) x367) (=> x3274 x4032)))))
(assert (= (and x3382 (not x4313)) x3937))
(assert (= (x4643 (x747 4294967296)) 4294967296))
(assert (x1672 x162))
(assert (= (x4643 (x3272 x3548)) x3548))
(assert (= (=> (and (= x3947 (x2895 (x3272 274184521717934524641157099916833587231))) (= (x2895 (x3272 x2042)) x2354) (= x3112 x1078) (= (and (< x2354 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x3947 0)) x3837)) (and (=> (and (= 0 x3778) (not x3837) (= 0 x1977)) x3456) (=> x3837 x510))) x3795))
(assert (= x4555 (=> (and (= (= x2493 0) x25) (= (= x3347 0) x5284) (= (ite (> x4478 x4138) 1 0) x765) (= x1241 (ite (not x25) 1 0)) (= x3347 (x1505 x1241 x765)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2493) x4138)) (and (=> (not x5284) x4032) (=> x5284 x2164)))))
(assert (= x1131 (and (not x2832) x3603)))
(assert (x1672 x3125))
(assert (= (and (not x889) x3813) x2428))
(assert (= (x4643 (x307 x4417 1)) (+ (x4643 x4417) 1)))
(assert (= (or (and x3539 x1429) (and x4229 x1776)) x1445))
(assert (x963 x3287))
(assert (x1672 x4564))
(assert (x1672 x4637))
(assert (x1672 x2786))
(assert (= x1149 (or x4962 (and x3557 x4931))))
(assert (= (and x742 (not x4970)) x3505))
(assert (= x3032 (and x1646 (not x2822))))
(assert (x1672 x883))
(assert (x1672 x3311))
(assert (= x1378 (=> (and (= x2055 (< 0 x3181)) (= x1035 (mod (* x2933 x3225) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (and (= x3278 x2034) x2055 (= x2034 (div x1035 x3181))) x772) (=> (not x2055) x4032)))))
(assert (= (x1923 x3648) (ite (= x436 x3648) 274184521717934524641157099916833587231 (x3688 x3648))))
(assert (x1672 x2713))
(assert (x1672 x99))
(assert (x1672 x4171))
(assert (= (and x2257 x1817) x2914))
(assert (= x449 (and (not x2870) x4438)))
(assert (= x988 (=> (= x2572 (= x3963 0)) (and (=> (not x2572) x4935) (=> x2572 x4498)))))
(assert (= (x4643 (x3272 x3546)) x3546))
(assert (x1672 x255))
(assert (x4494 x2495 x798 x1082 x528))
(assert (= (=> (and (= x70 (= x3337 0)) (= (x1505 1461501637330902918203684832716283019655932542975 x1386) x5252) (= (x4232 (x3272 x3152)) x3337) (= (x750 x2737) x1386) (= x4965 (x2276 (+ x2397 4))) (= x2737 (x2276 (+ x2672 32)))) (and (=> x70 x4498) (=> (and (not x70) (or (and (= x4637 1) x5073 (< x2005 4294967296)) (and (= x801 x4637) (not x5073))) (= (> x801 0) x5073)) x5199))) x2734))
(assert (= (and x4091 (not x2076)) x64))
(assert (x963 x1227))
(assert (x1672 x2872))
(assert (x1672 x3903))
(assert (x1672 x2583))
(assert (= (x4643 (x307 x4501 1)) (+ (x4643 x4501) 1)))
(assert (x1672 x3333))
(assert (x1672 x748))
(assert (x4182 x4671))
(assert (x1672 x1376))
(assert (= (x417 x536) 0))
(assert (x1672 x3489))
(assert (x1672 x1302))
(assert (= (=> (and (= x3636 x2467) (= x146 x1740)) x1588) x5067))
(assert (= x5207 (and x4612 x745)))
(assert (= x292 (and (not x4885) x4986)))
(assert (x4494 x2759 x879 x803 x2403))
(assert (= (ite (and x5010 (not x2552) x1100) (x3379 x5175) (ite (and x1100 (not x2552) (not x5010) (not x327)) (x1318 x5175) (x3124 x5175))) (x1772 x5175)))
(assert (x1672 x2474))
(assert (x1672 x1480))
(assert (x1672 x169))
(assert (= (x3915 x2091) (ite (= x479 x2091) x408 (x4188 x2091))))
(assert (x1672 x2615))
(assert (x4182 x2853))
(assert (x1672 x1111))
(assert (x1672 x1021))
(assert (= x4557 (and (not x3557) x4931)))
(assert (x4494 x1091 x273 x1456 x4053))
(assert (x963 x152))
(assert (= (x525 x1608) (ite (= x1608 x1680) 0 (x1298 x1608))))
(assert (x1672 x3694))
(assert (= x2918 (=> (= x3557 (= 0 x4204)) (and (=> (and (= x4195 x4948) x3557 (= x5167 0)) x4628) (=> (not x3557) x299)))))
(assert (x1672 x1353))
(assert (=> (>= 10000 x2882) (= (x747 x2882) (x3272 x2882))))
(assert (= x4671 (x4643 (x3272 x4671))))
(assert (x1672 x5236))
(assert (x1672 x4672))
(assert (x1672 x3997))
(assert (= (x3054 x2123) (ite (= x2123 x876) 0 (x4004 x2123))))
(assert (x963 x3421))
(assert (= (x3948 x2334) 0))
(assert (x1672 x1906))
(assert (x1672 x4694))
(assert (x1672 x3247))
(assert (x1672 x3273))
(assert (x1672 x4679))
(assert (x963 x1520))
(assert (x1672 x5120))
(assert (= x4629 (and x1402 x5036)))
(assert (x1672 x355))
(assert (x1672 x707))
(assert (= x2489 (and x3810 x4914)))
(assert (= x2442 (and x753 (not x41))))
(assert (x1672 x3074))
(assert (x1672 x2630))
(assert (= (=> (and (= (x3673 x1021) x4602) (= (ite (< x5162 x4602) 1 0) x3459) (= x5162 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3004)) (= x862 (x1505 x1261 x3459)) (= x4606 (= 0 x862)) (= x1261 (ite (not x5062) 1 0)) (= (= x3004 0) x5062)) (and (=> (not x4606) x4498) (=> x4606 x1178))) x1798))
(assert (= x278 (or (and x4646 x2035) (and x2920 x4164))))
(assert (= x4784 x5079))
(assert (= x3076 (=> (and (= x3279 (x4232 (x3272 x4124))) (= x4124 (x1505 1461501637330902918203684832716283019655932542975 x3495)) (= x4783 (x749 x3001)) (= x4011 (x2276 (+ 4 x1633))) (= (x1505 1461501637330902918203684832716283019655932542975 x3495) x3870) (= (x4708 (x3272 x3870) (x747 2) 0) x2291) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4783) (= x4214 274184521717934524641157099916833587231) (= (= x3279 0) x2968) (= x2587 (x2276 (+ x1633 36))) (>= x4783 0) (= x3001 (x307 x2291 4)) (= x483 (x529 (- x2587 x1633)))) (and (=> x2968 x4032) (=> (not x2968) x356)))))
(assert (x1672 x1337))
(assert (= (or (and x3269 (not x2567)) (and x2526 (not x2260))) x4745))
(assert (= x3106 (and x2447 (not x4947))))
(assert (x1672 x3188))
(assert (x1672 x5228))
(assert (= (x3703 x5170) 0))
(assert (x1672 x1687))
(assert (= (=> (= (= x3047 0) x4609) (and (=> x4609 x4032) (=> (not x4609) x3563))) x1988))
(assert (= (=> (and (= x2334 (x2276 (+ 32 x3638))) (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3527)) x3903) (= x4128 (< x3903 0)) (= x3527 (x173 x2334))) (and (=> (and (= x3310 x3527) (= x1581 (< 1 x3160)) (= (x2691 x3638) x3160) (= x3310 x4703) (not x1581) (not x4128)) x3410) (=> x4128 x4032))) x3368))
(assert (= (=> (and (= 36 x5134) (= x1594 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4855)) (< x4855 32)) (> x4855 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x4232 (x3272 274184521717934524641157099916833587206)) x5070) (= x567 1889567281) (= x3468 x223) (not (= 826074471 x567)) (not (> 4 x5134)) (not (> 826074471 x567)) (> x5070 0) (= x4855 (x529 (- x5134 4))) (= x2082 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x5217 x5134)) (and (=> (not x1594) x5241) (=> x1594 x2576))) x4456))
(assert (x1672 x1560))
(assert (= x3797 (and x322 (not x2070))))
(assert (x1672 x324))
(assert (= (x3272 2514000705) (x747 2514000705)))
(assert (= (and x4739 x1389) x2104))
(assert (= (=> (and (= (x529 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1933)) x2813) (= x1190 (> x4727 x2813))) (and (=> (not x1190) x621) (=> x1190 x4498))) x4161))
(assert (x1672 x4291))
(assert (x1672 x2390))
(assert (x1672 x1352))
(assert (= x1407 (or (and x65 x5192) (and x3742 x2702) (and x1368 x1141) (and x123 x312) (and x2254 x1815) (and x4017 (not x4361)))))
(assert (= x348 (=> (= (= 0 x4514) x4809) (and (=> x4809 x4032) (=> (not x4809) x580)))))
(assert (x1672 x2677))
(assert (x1672 x2687))
(assert (x1672 x4012))
(assert (x1672 x3424))
(assert (= x2166 (and x2006 x2690)))
(assert (= (=> (and (= (x2276 (+ 31 x2643)) x4012) (= (x2276 (+ x3876 x5309)) x4082) (= x5309 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4012)) (= x4274 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2643) (and (> 32 x2643) (= (<= x2643 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))))) (and (=> x4274 x4032) (=> (not x4274) x3748))) x3280))
(assert (x4680 x3326 x2087))
(assert (x1672 x1283))
(assert (= x5009 (x4643 (x3272 x5009))))
(assert (x1672 x4825))
(assert (= x4594 (and x4651 x1891)))
(assert (x1672 x4478))
(assert (= (x4643 (x3272 x2623)) x2623))
(assert (= (=> (= x969 (= x3633 0)) (and (=> (not x969) x1073) (=> (and (= x2538 x1650) x969 (= 0 x2101)) x49))) x2561))
(assert (= (x4 x3089) (ite (and x5145 (not x793) x4784) (x3418 x3089) (ite (and (not x793) (not x1447) x4784 (not x5145)) (x279 x3089) (x1025 x3089)))))
(assert (x1672 x4255))
(assert (= x2771 (or (and x4030 x3672) x960)))
(assert (= (=> (= x3254 (= 274184521717934524641157099916833587206 x4124)) (and (=> (not x3254) x3897) (=> (and (= (or (and (< x3370 32) (= true (<= x3370 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3370 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x965) (not (< x3341 4)) (or (and (= x197 0) (= x1526 x355) x965) (and (= (x3910 x2237) x1942) (= (x4708 (x3272 274184521717934524641157099916833587231) (x747 1) 0) x2237) (<= x1942 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x197) (= 274184521717934524641157099916833587231 x5279) (= x355 32) (not x965) (<= 0 x1942))) x3254 (= 36 x3341) (not (< x5295 826074471)) (> x480 0) (not (= 826074471 x5295)) (= 1889567281 x5295) (= (x4232 (x3272 274184521717934524641157099916833587206)) x480) (= x3370 (x529 (- x3341 4))) (= x3341 x483) (= x1425 50942633119752846454219349998365661925608737367104304655302372697894809501696)) x5128))) x356))
(assert (x1672 x4439))
(assert (x1672 x5009))
(assert (x1672 x4471))
(assert (= x1538 (or (and (not x598) x3433) (and x1446 (not x4375)))))
(assert (x1672 x4904))
(assert (x1672 x3924))
(assert (x1672 x5144))
(assert (= (=> (and (= x642 (= 0 x1617)) (= x1743 (x1505 1461501637330902918203684832716283019655932542975 x351)) (= x1026 (x2276 (+ x3260 64))) (= (x1505 1461501637330902918203684832716283019655932542975 x67) x3939) (= x4702 (x2276 (+ 36 x1359))) (= (x4232 (x3272 x4165)) x1617) (= (x2276 (+ x1359 4)) x3260)) (and (=> x642 x4032) (=> (and (= (< 0 x431) x227) (or (and (> 4294967296 x3985) x227 (= x4877 1)) (and (not x227) (= x4877 x431))) (not x642)) x1066))) x3389))
(assert (= (=> (and (= x795 (= x2497 x507)) (= x507 (x1505 1461501637330902918203684832716283019655932542975 x2497))) (and (=> (not x795) x663) (=> x795 x3651))) x3962))
(assert (= x1377 (=> (= (= x1254 274184521717934524641157099916833587202) x1421) (and (=> (not x1421) x2545) (=> (and (= x1813 (or (and (= (<= x4943 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4943 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4943))) (not (> 4 x1059)) (= x500 1889567281) (= (x4232 (x3272 274184521717934524641157099916833587202)) x1518) (< 0 x1518) (= (x529 (- x1059 4)) x4943) x1421 (= x1059 36) (= x3465 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (< x500 826074471)) (or (and (= x3882 x5205) (= x3055 0) x1813) (and (<= x4980 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3296 274184521717934524641157099916833587231) (= (x3290 x1297) x4980) (not x1813) (= x1297 (x4708 (x3272 274184521717934524641157099916833587231) (x747 1) 0)) (= x3055 1) (<= 0 x4980) (= x3882 32))) (= x1006 x1059) (not (= x500 826074471))) x2481)))))
(assert (= (=> (and (= (x1854 x1641) x1524) (= x164 (> x1524 0))) (and (=> (and (not x164) (= 0 x1084)) x744) (=> x164 x2927))) x1271))
(assert (x1672 x1859))
(assert (= (=> (and (= x3101 (= x996 x3934)) (= (x1505 1461501637330902918203684832716283019655932542975 x996) x3934) (= (x2827 x4870) x996)) (and (=> x3101 x1163) (=> (not x3101) x4498))) x4996))
(assert (= (=> (= (= 0 x4828) x3620) (and (=> (not x3620) x658) (=> x3620 x4498))) x844))
(assert (x4494 x3028 x183 x3216 x3233))
(assert (x1672 x3847))
(assert (=> (>= 10000 x986) (= (x747 x986) (x3272 x986))))
(assert (x963 x3568))
(assert (= (x3272 29667888499431518244405524310122331055235727797159756471206109933501488824320) (x747 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= (x279 x3089) (ite (= x5048 x3089) 0 (x3418 x3089))))
(assert (= (x833 x2377) (ite (and x547 x1703 (not x4453)) (x515 x2377) (x1044 x2377))))
(assert (x1672 x1724))
(assert (x1672 x3328))
(assert (x1672 x995))
(assert (= (and x3705 x4070) x1822))
(assert (= x2690 (and x1730 x2939)))
(assert (x1672 x3862))
(assert (= x3611 (=> (and (= (x2276 (+ x4122 x3832)) x5097) (= (or (> x2186 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2186)) (< x2186 32))) x3042) (= x3287 (x2276 (+ 31 x2186))) (= x4122 (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3287))) (and (=> (not x3042) x4804) (=> x3042 x4032)))))
(assert (x1672 x1743))
(assert (x2083 x1520 x1609))
(assert (= (ite (and x2910 x5195 (not x613)) (x899 x212) (x3734 x212)) (x3283 x212)))
(assert (= x3087 (and x843 x2557)))
(assert (x1672 x1925))
(assert (x1672 x2854))
(assert (x1672 x1305))
(assert (x1672 x1569))
(assert (x4680 x1905 x5194))
(assert (= (x4643 (x3272 x4167)) x4167))
(assert (= (or (and (not x165) x4753) (and x1872 x289)) x1257))
(assert (= (=> (and (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2824) x2468) (= (or (> x2842 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x2842) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2842) true))) x1700) (= x2824 (x2276 (+ 31 x2842))) (= (x2276 (+ x4263 x2468)) x1129)) (and (=> x1700 x4032) (=> (not x1700) x398))) x1370))
(assert (= x3977 (=> (and (= x1015 (x1505 x3031 x2821)) (= (ite (> 32 x4949) 1 0) x1960) (= (= 0 (x4811 x1015 x172)) x3918) (= x2821 (ite (< x4949 78) 1 0)) (= 1 x413) (= x3031 1) (= x172 (x1505 x413 x1960))) (and (=> (and (not x3918) (= x3134 (x641 10 x4949))) x2180) (=> (and (= x1667 (> x4949 1)) x3918 (or (and (= x2359 10) (= 1 x3215) (not x1667)) (and (= x1075 (x1505 1 x4949)) (= (x3692 x4949 1) x3446) (not x3123) x1667 (= (ite x4938 1 10) x3215) (= (= 0 x1075) x4938) (= 100 x2359) (= (> x3446 1) x3123)))) x1762)))))
(assert (= (x1044 x2377) (ite (= x2564 x2377) x2936 (x37 x2377))))
(assert (x1672 x3256))
(assert (= x1731 (and x4953 (not x1143))))
(assert (= (or x2970 (and x115 x4489)) x423))
(assert (x1672 x3759))
(assert (x4182 x4007))
(assert (x1672 x2045))
(assert (= x1273 (=> (and (= x2701 (x4177 x2538)) (= x3579 (ite (= 0 x2701) (= 0 x2701) (= x946 0)))) (and (=> (not x3579) x336) (=> (and x3579 (= x196 0)) x1159)))))
(assert (= (ite (= x2171 x2336) x705 (x5250 x2171)) (x2996 x2171)))
(assert (= (ite (and x1100 (not x2552) x5010) (x3703 x5170) (ite (and (not x2552) (not x327) x1100 (not x5010)) (x4649 x5170) (x179 x5170))) (x3691 x5170)))
(assert (x1672 x816))
(assert (= x3888 (or (and (not x298) x2544) (and x4509 x4511))))
(assert (= (and x2179 (not x3699)) x3119))
(assert (= (=> (and (= (div x769 x3134) x4670) (= (x1799 x5) x366) (= (> x366 0) x900)) (and (=> (not x900) x4498) (=> (and (= x313 (x2276 (+ x5 32))) (= x3749 x1557) x900) x672))) x1690))
(assert (x1672 x1812))
(assert (= x4859 (=> (= (= x3179 0) x1157) (and (=> (not x1157) x3182) (=> x1157 x4498)))))
(assert (= (and (not x2987) x1684) x4492))
(assert (x1672 x3289))
(assert (= x932 (and x3803 x1918)))
(assert (= x4126 (=> (and (= (x3231 x1007) x2215) (= (x4791 x575) x2716) (= x2997 (x102 x3982)) (= (x611 x1342) x193) (= (= x2997 x1503) x3480) (= (x2391 x2215) x1503)) (and (=> (not x3480) x4032) (=> x3480 x669)))))
(assert (x1672 x4050))
(assert (= x473 (=> (= x1256 (> x4123 x2448)) (and (=> (not x1256) x2723) (=> x1256 x663)))))
(assert (= (or (and x1440 x2650) (and x4435 (not x4666)) (and x1549 x4479) (and x2923 x2230) (and x4781 x2647) (and x4929 x316) (and x3763 x5068) (and x130 x5271) (and (not x3082) x2490) (and x4745 (not x4696)) (and x3802 x3752) (and x889 x3813) (and x2663 x5037) (and x1582 x4772) (and x4819 x3088) (and x1471 x3986) (and x4626 x2194) (and x1394 (not x5169)) (and x4695 (not x3196)) (and (not x3705) x4070) (and x2438 x1614) (and x4585 x1186) (and x1383 x4277) (and x1145 (not x4455)) (and x793 x4784) (and x4099 x4834) (and x3235 x3797) (and x1049 x1604) (and x1236 x2963) (and x3840 x4561) (and x2137 x4881) (and x4172 x1951) (and x5155 x4901) (and x3729 (not x5026)) (and x2610 x3769) (and x3843 x4097) (and x2406 x5221) (and x452 x4547) (and x4744 (not x5262)) (and x1355 (not x3814)) (and x3946 x3238) (and x2257 (not x1817)) (and (not x959) x2914) (and x1157 x3629) (and x1950 x640) (and (not x3720) x5051) (and x2297 x3253) (and x1736 x927) (and x4919 x792) (and x3608 x4062) (and x2595 x4199) (and x3131 (not x4606)) (and x4910 x1090) (and (not x1993) x3339) (and x216 (not x5298)) (and (not x2371) x5310) (and x1329 x2616) (and x3322 x3533) (and x4027 (not x2466)) (and x293 x2578) (and x3620 x1737) (and x1240 x3964) (and x4206 x3067) (and x4065 x2572) (and (not x1943) x5085) (and x4588 (not x661)) (and x3241 x2022) (and x3737 x3791) (and x4203 x4604) (and x5081 x4942) (and x1264 x5255) (and x2720 x5060) (and x4661 x3106) (and x1976 x1881) (and x1822 x4841) (and (not x797) x2412) (and x5248 (not x5133)) (and x2446 (not x3451)) (and x4185 x270) (and (not x3209) x3823) (and x3161 (not x639)) (and x2039 x2415) (and x2337 (not x3895)) (and x2958 x3190) (and x821 x1915) (and x1304 x1613) (and x339 (not x2510)) (and x4385 (not x1403)) (and x4613 (not x2871)) (and x3323 x388) (and x3920 x1648) (and x922 x3592) (and x1661 x2772) (and x3045 x486) (and x1260 x5201) (and x1312 x2779) (and x2454 (not x129)) (and x2027 (not x3101)) (and x3271 (not x900)) (and x5083 (not x990)) (and (not x3708) x1875) (and x4366 x4400) (and (not x1331) x3064) (and x1190 x3264) (and x2470 x3686) (and (not x1722) x1995) (and x4947 x2447) (and (not x908) x3676) (and (not x4612) x745) (and x901 (not x1262)) (and x140 x4557) (and x4913 (not x1345)) (and x45 x397) (and x3902 x2261) (and (not x2214) x3438) (and x4558 x1124) (and (not x1918) x3803) (and x2822 x1646) (and x2058 x2445) (and (not x843) x2557) (and x1446 x4375) (and (not x2329) x3709) (and (not x2806) x5160) (and x3393 x3649) (and (not x3744) x1467) (and x1402 (not x5036)) (and x2421 x5072) (and x171 x3099) (and (not x257) x2808) (and x4210 (not x787)) (and x4419 (not x167)) (and x2690 (not x2006)) (and x4934 x4867) (and x4453 x1703) (and x137 x4629) (and x4329 x70) (and x817 x1635) (and x3562 x1149) (and x527 x3300) (and (not x2756) x4473) (and x2526 x2260) (and x427 x3889) (and x1396 x2166) (and (not x3384) x3087) (and x322 x2070) (and x3618 (not x1535)) (and x2428 x1751) (and (not x3878) x1210) (and x1032 (not x2833)) (and (not x253) x133) (and x4577 x5265) (and x3484 (not x2311)) (and x2604 x1247) (and x4787 x1335) (and (not x289) x1872) (and x5071 (not x4282))) x1499))
(assert (x1672 x2088))
(assert (=> (>= 10000 x2277) (= (x747 x2277) (x3272 x2277))))
(assert (x1672 x1144))
(assert (x1672 x3648))
(assert (= x3889 (and x1943 x5085)))
(assert (x1672 x5193))
(assert (= x742 (and x267 x829)))
(assert (x1672 x1833))
(assert (x1672 x909))
(assert (= x349 (and x64 (not x1997))))
(assert (x4680 x4707 x2305))
(assert (x1672 x2009))
(assert (x1672 x4871))
(assert (x1672 x181))
(assert (x1672 x3645))
(assert (x1672 x5187))
(assert (x1672 x2168))
(assert (x1672 x4685))
(assert (x1672 x1601))
(assert (=> (<= x673 10000) (= (x3272 x673) (x747 x673))))
(assert (= (=> (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5124) (and (> 32 x5124) (= (<= x5124 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x2438) (and (=> x2438 x4498) (=> (not x2438) x1798))) x4618))
(assert (x1672 x4223))
(assert (= (and (not x4299) x3588) x5211))
(assert (= 0 (x552 x1250)))
(assert (= x4464 (=> (and (= (< 1000000000000000000 x506) x3525) (= (x3800 x4571) x506)) (and (=> x3525 x4032) (=> (not x3525) x2807)))))
(assert (= x2935 (=> (and (>= 1461501637330902918203684832716283019655932542975 x407) (<= 0 x407) (= x1143 (= x5256 0)) (= x2065 (x2276 (+ x4082 4))) (= (x2540 x2156) x407) (= (x4232 (x3272 x407)) x5256) (> 1461501637330902918203684832716283019655932542976 x407) (= x4698 (x2276 (+ 36 x4082)))) (and (=> (and (not x1143) (or (and (= x4622 x337) (= x4972 x3426) (not x571) (= x1708 x766) (= x445 x3449)) (and x1591 x3545 (= x1591 (= (x2575 (x3272 x407)) x2516)) (= x445 x723) (= (x4008 (x3272 274184521717934524641157099916833587231)) x3689) (< x1747 4294967296) (= (>= (x2575 (x3272 274184521717934524641157099916833587231)) x3689) x3545) (= x2043 x3426) (= (x4008 (x3272 x407)) x2516) (= x766 x4552) (= x3105 x4622) x571)) (= (> x1194 0) x571)) x3646) (=> x1143 x4032)))))
(assert (x1672 x469))
(assert (x1672 x581))
(assert (x1672 x4829))
(assert (= x3224 (and x1246 x283)))
(assert (x963 x113))
(assert (x1672 x1829))
(assert (x1672 x895))
(assert (x1672 x3753))
(assert (x1672 x4009))
(assert (x1672 x3316))
(assert (x4182 x3362))
(assert (x1672 x2184))
(assert (x1672 x3152))
(assert (= (or (and (not x4128) x1653) (and (not x616) x265)) x2396))
(assert (= x330 (=> (= x2870 (= x320 0)) (and (=> x2870 x4032) (=> (not x2870) x2418)))))
(assert (x1672 x2977))
(assert (x1672 x152))
(assert (= (and x2650 (not x1440)) x1284))
(assert (= (or (and (not x836) x2110) (and x5105 x1712)) x3715))
(assert (x1672 x757))
(assert (= (and (not x2137) x4881) x1186))
(assert (x1672 x5162))
(assert (x1672 x2843))
(assert (= x4936 (=> (and (= x751 (= x3785 x1600)) (= x1600 x2854)) (and (=> (not x751) x2932) (=> (and (<= 0 x4512) x751 (= (x4708 (x3272 x1600) (x747 1) 0) x3394) (<= x4512 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x4737) (= 32 x296) (= x4512 (x2986 x3394))) x2469)))))
(assert (= (x417 x4327) 0))
(assert (x1672 x4578))
(assert (x1672 x1048))
(assert (x963 x2305))
(assert (x4182 x4672))
(assert (x1672 x3804))
(assert (x1672 x2057))
(assert (x1672 x3633))
(assert (x1814 x3869 x4293))
(assert (= x3945 (=> (and (= x1517 36) (not (= x1571 826074471)) (> x4260 0) (= x2698 x1592) (= x3835 x1517) (not (> 4 x1517)) (= 1889567281 x1571) (not (> 826074471 x1571)) (= (x4232 (x3272 274184521717934524641157099916833587202)) x4260) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3405) (= x4288 (or (> x1238 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1238 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1238))))) (= (x529 (- x1517 4)) x1238)) (and (=> (not x4288) x2733) (=> x4288 x387)))))
(assert (x1672 x2161))
(assert (x1672 x4671))
(assert (x1672 x2416))
(assert (x1672 x2515))
(assert (x1672 x3790))
(assert (x4680 x975 x314))
(assert (= x517 (and x2829 x1053)))
(assert (= 274184521717934524641157099916833587231 (x4643 (x747 274184521717934524641157099916833587231))))
(assert (x1672 x2135))
(assert (x963 1))
(assert (x1672 x1508))
(assert (x1672 x4246))
(assert (= (or (and x2987 x1684) (and x3135 x4492)) x4062))
(assert (x1672 x4997))
(assert (= x3081 (and x3440 (not x1277))))
(assert (= x1259 (=> (and (= (= 0 x4141) x5150) (= x4141 (x2276 (+ x4204 x3809)))) (and (=> (not x5150) x738) (=> (and (= x3305 x953) x5150) x450)))))
(assert (= 0 (x2169 x234)))
(assert (= x1970 (=> (and (= 0 x494) (= x1914 x3553)) x3896)))
(assert (=> (<= x3152 10000) (= (x3272 x3152) (x747 x3152))))
(assert (= 0 (x4347 x2731)))
(assert (=> (<= x2983 10000) (= (x3272 x2983) (x747 x2983))))
(assert (x1672 x2907))
(assert (x1672 x3635))
(assert (= (=> (and (= (= x338 0) x426) (= x2755 (x1505 x975 x314)) (= x1535 (= x2755 0)) (= (ite (< x3244 x23) 1 0) x314) (= x975 (ite (not x426) 1 0)) (= x3244 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x338))) (and (=> x1535 x2676) (=> (not x1535) x4498))) x230))
(assert (= (=> (= (= 274184521717934524641157099916833587206 x3362) x3010) (and (=> x3010 x4596) (=> (not x3010) x563))) x1902))
(assert (= (and (=> (and (= x2567 x4696) (not x2567)) x1577) (=> x2567 x373)) x1686))
(assert (x1672 x3901))
(assert (x1672 x1158))
(assert (x1672 x2787))
(assert (= (x2883 x4472) 0))
(assert (= x4739 (and x3397 x3760)))
(assert (x1672 x3370))
(assert (x1672 x180))
(assert (x1672 x236))
(assert (x1814 x4945 x5267))
(assert (= x12 (=> (and (= x4478 (x2276 (+ x4239 x2367))) (= (= x5280 0) x2122) (= (x4232 (x3272 x1832)) x5280) (= x2641 (x2019 x1176)) (= x1832 (x1505 1461501637330902918203684832716283019655932542975 x2641)) (= 4 x2369)) (and (=> (not x2122) x1692) (=> x2122 x4032)))))
(assert (= 0 (x770 x2549)))
(assert (= x1831 (=> (= (= 0 x5210) x286) (and (=> (not x286) x3191) (=> x286 x4032)))))
(assert (x963 x2542))
(assert (x4182 x4351))
(assert (= (x4643 (x3272 x1878)) x1878))
(assert (x1672 x5232))
(assert (= x5064 (=> (and (= (x40 x3621) x2718) (= (> x2718 18446744073709551615) x45)) (and (=> (and (= (mod (* x2718 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4675) (or x3219 (and (not x3219) (= (mod (* 32 x2718) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3635) (= x2476 (x2276 (+ 32 x5))))) (= x2830 (x2276 (+ x5286 x5))) (= (= 0 x2718) x3219) (not x45) (= (x2276 (+ x4675 32)) x5286)) x1615) (=> x45 x4498)))))
(assert (= x546 (and x4191 (not x1137))))
(assert (= (ite (and x5010 x1100 (not x2552)) (x4712 x822) (ite (and (not x327) (not x5010) (not x2552) x1100) (x4531 x822) (x898 x822))) (x4281 x822)))
(assert (x963 x975))
(assert (x4680 x5006 x118))
(assert (= x1946 (or (and x1492 (not x3750)) (and (not x561) x2414) (and (not x1729) x2836))))
(assert (x1672 x1811))
(assert (x963 x1945))
(assert (x1672 x2367))
(assert (= (and x3263 (not x4209)) x2394))
(assert (x1672 x55))
(assert (x1672 x2171))
(assert (x963 x3761))
(assert (x1672 x589))
(assert (= (x4712 x3723) 0))
(assert (= x2059 (=> (and (= x434 x1884) (= x995 x4317)) x4800)))
(assert (= (and x5248 x5133) x4929))
(assert (x963 x2026))
(assert (x1672 x1007))
(assert (= x5303 (and x4973 x4994)))
(assert (x1672 x2422))
(assert (x2960 x3815))
(assert (= (ite (= x409 x3730) x3175 (x419 x409)) (x2816 x409)))
(assert (x1672 x5219))
(assert (= (=> (and (= x867 x692) (= 0 x4757)) x981) x1931))
(assert (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x4643 (x747 32884410799705633174121290916597065681711743008034783737682747490404042539008))))
(assert (x1672 x5190))
(assert (x1672 x588))
(assert (x1672 x5268))
(assert (= (x1949 x240) (ite (and (not x793) x5145 x4784) (x4923 x240) (ite (and (not x793) x4784 (not x1447) (not x5145)) (x1292 x240) (x1146 x240)))))
(assert (x1672 x460))
(assert (x1672 x1070))
(assert (= x1400 (and (not x3135) x4492)))
(assert (x1672 x4371))
(assert (x1672 x4576))
(assert (= (=> (and (= (x1505 1461501637330902918203684832716283019655932542975 x3714) x3202) (= (= x3714 x3202) x3776) (= x2303 x3495)) (and (=> (not x3776) x4032) (=> x3776 x4440))) x3768))
(assert (x1672 x660))
(assert (x1672 x1328))
(assert (x1672 x3745))
(assert (x1672 x1340))
(assert (= (x4539 x5208) (ite (= x5208 x3996) x1706 (x3817 x5208))))
(assert (x1672 x3447))
(assert (x1672 x366))
(assert (= (ite (= x4993 x4979) 0 (x2591 x4993)) (x60 x4993)))
(assert (= (=> (and (= x1908 (< 0 x1907)) (= x1907 (x1799 x5))) (and (=> x1908 x5066) (=> (and (not x1908) (= x2748 0)) x662))) x667))
(assert (= x3709 (and x3797 (not x3235))))
(assert (= (and x1214 (not x198)) x4448))
(assert (x1672 x2094))
(assert (x1814 x2551 x2774))
(assert (x4182 x4322))
(assert (x1672 x211))
(assert (= x3410 (=> (= (= x4703 0) x4683) (and (=> (not x4683) x2349) (=> (and (= x325 0) (= 0 x6) x4683) x4349)))))
(assert (x4494 x5202 x5108 x4898 x3643))
(assert (= (and (not x4523) x213) x2879))
(assert (x1672 x2781))
(assert (x1672 x1864))
(assert (= x4284 (or (and x4254 x3993) (and (not x3846) x1742))))
(assert (= (=> (and (= (= x4371 x4165) x4208) (= x4371 (x1505 1461501637330902918203684832716283019655932542975 x4165)) (= x4165 (x89 x2341))) (and (=> x4208 x3389) (=> (not x4208) x4032))) x1936))
(assert (= x4326 (=> (= x3238 (= 0 x4305)) (and (=> x3238 x4498) (=> (not x3238) x617)))))
(assert (x963 x202))
(assert (= (ite (= x1697 x2238) x4578 (x2169 x2238)) (x4391 x2238)))
(assert (x1672 x4727))
(assert (x1672 x3409))
(assert (= x3440 (and x302 x2680)))
(assert (x1672 x3689))
(assert (x1672 x722))
(assert (x4182 x1089))
(assert (x1672 x2375))
(assert (= x881 (=> (= x207 (= 274184521717934524641157099916833587202 x4190)) (and (=> x207 x1052) (=> (not x207) x4517)))))
(assert (= (=> (and (= (= x4342 x1706) x1069) (= x498 x4342)) (and (=> (and (<= x2912 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2912 0) (= x2912 (x3811 x1182)) (= 1 x491) (= 32 x1797) (= (x4708 (x3272 x4342) (x747 1) 0) x1182) x1069) x3650) (=> (not x1069) x342))) x2931))
(assert (= (x4883 x16) (ite (and x1825 (not x1383) x4277) (x3204 x16) (x3910 x16))))
(assert (= (or (and x742 x4970) (and (not x2789) x3505)) x924))
(assert (x1672 x2355))
(assert (x1672 x2500))
(assert (= x4919 (and x253 x133)))
(assert (= 0 (x552 x2037)))
(assert (x1672 x2364))
(assert (= (=> (= x2595 (= 0 x637)) (and (=> x2595 x4498) (=> (not x2595) x4161))) x4042))
(assert (x1672 x413))
(assert (= (x1808 x588) (ite (and x5145 x4784 (not x793)) (x2591 x588) (ite (and (not x5145) (not x793) (not x1447) x4784) (x60 x588) (x4135 x588)))))
(assert (x1672 x332))
(assert (x1672 x3073))
(assert (x1672 x3306))
(assert (= (and x1457 x433) x1712))
(assert (x1672 x2707))
(assert (= x293 (and (not x640) x1950)))
(assert (x1672 x5106))
(assert (x1672 x1092))
(assert (x1672 x5181))
(assert (x1672 x4701))
(assert (= (=> (= x1474 (= 0 x3029)) (and (=> (and (= x891 0) (= x1399 0) x1474) x3559) (=> (not x1474) x1339))) x3663))
(assert (= (+ 4 (x4643 x2291)) (x4643 (x307 x2291 4))))
(assert (= x2932 (=> (and (= x4737 0) (= x3839 x296)) x2469)))
(assert (x1672 x813))
(assert (x2960 x3999))
(assert (= x4438 (and (not x446) x2119)))
(assert (x963 x2709))
(assert (x1672 x3805))
(assert (= x4273 (and x4673 (not x3525))))
(assert (= (=> (and (not (= 826074471 x1570)) (not (< x2424 4)) (= x4958 (x529 (- x2424 4))) (< 0 x4171) (= x4824 x58) (= x633 x2424) (= 36 x2424) (not (> 826074471 x1570)) (= (or (and (> 32 x4958) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4958))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4958)) x3427) (= x4171 (x4232 (x3272 274184521717934524641157099916833587202))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2890) (= x1570 1889567281)) (and (=> x3427 x4183) (=> (not x3427) x3712))) x564))
(assert (x1672 x2841))
(assert (= (ite (and x4784 (not x793) x5145) (x1295 x3291) (ite (and (not x793) x4784 (not x1447) (not x5145)) (x1733 x3291) (x3781 x3291))) (x2502 x3291)))
(assert (= 0 (x417 x4835)))
(assert (x1672 x4263))
(assert (x1672 x2129))
(assert (x1672 x4063))
(assert (= x4812 (=> (and (= x2268 (x2276 (+ x549 x2811))) (= x1141 (> x2811 x2268))) (and (=> x1141 x34) (=> (and (= 32 x5259) (= x5299 x2003) (= x2239 1) (= x4322 (x1505 1461501637330902918203684832716283019655932542975 x1003)) (not x1141) (= (x4708 (x3272 x4322) (x747 1) 0) x2491)) x2865)))))
(assert (x1672 x3202))
(assert (x4182 x3907))
(assert (= 0 (x770 x1852)))
(assert (= (=> (and (= (x1505 1461501637330902918203684832716283019655932542975 x2221) x58) (= (x2276 (+ x222 4)) x5115) (= (x88 x3723) x1757) (= (x2276 (+ 32 x1757)) x422) (= (x529 (- x2940 x222)) x633) (= x3723 (x2276 (+ x2861 32))) (= x274 (x2524 x422)) (= (x1505 1461501637330902918203684832716283019655932542975 x274) x4516) (= (x2276 (+ 36 x222)) x2940) (= (= x3133 0) x2314) (= x2221 (x288 x4888)) (= x3133 (x4232 (x3272 x4516)))) (and (=> (not x2314) x3700) (=> x2314 x4032))) x2719))
(assert (x1814 x557 x2519))
(assert (= (and (not x3479) x430) x3664))
(assert (x1672 x1819))
(assert (= (x2138 x1299) (ite (and x4277 x1825 (not x1383)) (x3140 x1299) (x3290 x1299))))
(assert (x1672 x3378))
(assert (x1672 x1382))
(assert (x1672 x3985))
(assert (= (x552 x2672) 0))
(assert (=> (<= x175 10000) (= (x3272 x175) (x747 x175))))
(assert (x1672 x2063))
(assert (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x4643 (x747 17154740991736861046558774992177620686056526479738507590741468237373194108928))))
(assert (= x1249 (=> (and (= (> x4827 0) x1296) (= x4827 (x40 x2672))) (and (=> (and (not x1296) (= x2397 x2355)) x1300) (=> x1296 x3634)))))
(assert (= (and x3886 x1885) x1927))
(assert (= x1614 (and x270 (not x4185))))
(assert (x1672 x4405))
(assert (x1672 x232))
(assert (x1672 x1791))
(assert (= (=> (and (= (= x223 x2515) x746) (= x2515 x1863)) (and (=> (not x746) x1732) (=> (and (<= x2664 115792089237316195423570985008687907853269984665640564039457584007913129639935) x746 (= x2938 1) (<= 0 x2664) (= 32 x1619) (= x4750 (x4708 (x3272 x2515) (x747 1) 0)) (= (x2986 x4750) x2664)) x30))) x2539))
(assert (x1672 x1933))
(assert (x1672 x2065))
(assert (= (and x3750 x1492) x2414))
(assert (x1672 x4067))
(assert (= x1742 (and x3993 (not x4254))))
(assert (x1672 x4316))
(assert (x963 x2803))
(assert (x1672 x5300))
(assert (x1814 x2623 x4874))
(assert (= x1537 (=> (= (> x318 x1322) x2120) (and (=> (not x2120) x3798) (=> x2120 x989)))))
(assert (= x1562 (or x4587 (and x839 x1069))))
(assert (= x893 true))
(assert (= (or (and x3091 x517) (and x839 (not x1069))) x4587))
(assert (= (x899 x169) 0))
(assert (x1672 x3170))
(assert (x1672 x4670))
(assert (x1672 x986))
(assert (= x4843 (=> (and (= x3941 (x750 x234)) (= x234 (x2276 (+ 32 x2037))) (= (x1799 x5) x542) (= (> x542 0) x4282)) (and (=> (not x4282) x4498) (=> x4282 x4510)))))
(assert (= x4720 (=> (and (= x3423 (mod (* x946 x3633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3955 (< 0 x2701))) (and (=> (not x3955) x4032) (=> (and (= x4755 x196) (= x4755 (div x3423 x2701)) x3955) x1159)))))
(assert (= (x3195 128) (x2459 128)))
(assert (= (=> (= x3539 (= x5089 274184521717934524641157099916833587202)) (and (=> (and (= x1698 32) (<= x4622 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x1606) (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 x768) (<= 0 x4622) (= x1833 826074471) (= x2090 4) x3539 (not (> 4 x2090)) (not (< x1833 826074471)) (= x3524 x2090) (= (x4232 (x3272 274184521717934524641157099916833587202)) x849) (> x849 0)) x2814) (=> (not x3539) x2001))) x2206))
(assert (= x2886 (=> (and (= x628 (x529 (- x4035 4))) (> x1064 0) (= x4019 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x628) true) (> 32 x628)) (> x628 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x3127 x2497) (not (< x652 826074471)) (= x652 1889567281) (not (> 4 x4035)) (= x1064 (x4232 (x3272 274184521717934524641157099916833587206))) (= x4035 36) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2431) (= x1063 x4035) (not (= 826074471 x652))) (and (=> x4019 x819) (=> (not x4019) x4504)))))
(assert (x963 x471))
(assert (= x4385 (and x3032 (not x5150))))
(assert (x1672 x1517))
(assert (= (and x3336 x4884) x3628))
(assert (x1672 x2004))
(assert (x1672 x2494))
(assert (= x1832 (x4643 (x3272 x1832))))
(assert (= (and x835 x178) x5293))
(assert (= x3003 (x4643 (x3272 x3003))))
(assert (x1672 x2564))
(assert (x1672 x966))
(assert (x1672 x1455))
(assert (= true x2545))
(assert (= (and x5050 x2178) x1563))
(assert (x1672 x2532))
(assert (= x3018 (=> (and (= (ite (not x2589) 1 0) x1170) (= x3273 (x1505 x1170 x27)) (= x302 (= x3273 0)) (= x27 (ite (< x3078 x618) 1 0)) (= (mod (* x326 x2367) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1031) (= x2589 (= 0 x1031)) (= x3078 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1031))) (and (=> (not x302) x4032) (=> x302 x3522)))))
(assert (x1672 x632))
(assert (= (=> (and (= x3489 (x102 x3982)) (= x4660 (< 0 x3489)) (= (div x4685 x850) x1971)) (and (=> (and (= (x2276 (+ 32 x3982)) x3073) (= x26 x1129) x4660) x3746) (=> (not x4660) x4032))) x3544))
(assert (x1672 x437))
(assert (= (=> (and (= (= x3395 x2698) x4489) (= x2500 x3395)) (and (=> (not x4489) x1076) (=> (and x4489 (= x3383 (x3516 x194)) (<= 0 x3383) (= 32 x4287) (= x1305 1) (<= x3383 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x194 (x4708 (x3272 x3395) (x747 1) 0))) x4378))) x2038))
(assert (= x1224 (and x918 x2216)))
(assert (x1672 x507))
(assert (x1672 x2444))
(assert (x1672 x311))
(assert (= x3736 (and x4901 (not x5155))))
(assert (= (+ (x4643 x2862) 1) (x4643 (x307 x2862 1))))
(assert (x4182 x4169))
(assert (x1672 x578))
(assert (= x2515 (x4643 (x3272 x2515))))
(assert (= (and (not x2251) x2796) x2556))
(assert (x1672 x2770))
(assert (x1672 x4380))
(assert (x1672 x2215))
(assert (x1672 x4033))
(assert (x1672 x4327))
(assert (x1672 x2106))
(assert (x1672 x5129))
(assert (x1672 x3015))
(assert (= (x4712 x822) 0))
(assert (= (or x3623 x3169) x2663))
(assert (x1672 x2755))
(assert (x1672 x1590))
(assert (= x690 (and (not x1457) x433)))
(assert (= (x747 1461501637330902918203684832716283019655932542976) (x3272 1461501637330902918203684832716283019655932542976)))
(assert (= (x4643 (x3272 x1894)) x1894))
(assert (x1672 x3747))
(assert (= (x4649 x5170) (ite (= x272 x5170) 0 (x3703 x5170))))
(assert (= x4550 (=> (and (= (> x2304 0) x797) (= x2304 (x40 x3621))) (and (=> x797 x1996) (=> (not x797) x4498)))))
(assert (x1672 x78))
(assert (x1672 x618))
(assert (x1672 x1698))
(assert (x1672 x2863))
(assert (= x1187 (and x3937 (not x4560))))
(assert (x1672 x5157))
(assert (= x2066 (and x2442 x3156)))
(assert (= (x4643 (x3272 x1829)) x1829))
(assert (= (or (and x2179 x3699) (and x2471 x545)) x5255))
(assert (= (=> (and (= (x1564 x470) x1871) (= (x2276 (+ x2747 x2101)) x1185) (= x4778 (> x1871 0))) (and (=> (and (= x4471 (x2276 (+ x470 32))) (= x14 x1650) x4778) x4285) (=> (not x4778) x4032))) x2219))
(assert (x963 x4165))
(assert (= x886 true))
(assert (x4182 x1792))
(assert (x1672 x2020))
(assert (= x3740 (=> (and (= (= x3785 x1792) x298) (= x75 x1792)) (and (=> (and (<= x5137 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4708 (x3272 x1792) (x747 1) 0) x1405) x298 (<= 0 x5137) (= (x599 x1405) x5137) (= 32 x124) (= x4530 1)) x3138) (=> (not x298) x4493)))))
(assert (x1672 x3454))
(assert (= x2839 (=> (and (= x2872 (x1505 1461501637330902918203684832716283019655932542975 x1545)) (= (= x2872 x1545) x2010)) (and (=> (not x2010) x1979) (=> x2010 x2904)))))
(assert (x1672 x914))
(assert (x1672 x3558))
(assert (x1672 x2080))
(assert (= (x2883 x5225) 0))
(assert (x1672 x4465))
(assert (x1672 x1947))
(assert (= (=> (and (= x1797 x4465) (= x491 x2080)) x2900) x3650))
(assert (x963 x2479))
(assert (x1672 x187))
(assert (x1672 x2090))
(assert (= (x4643 (x3272 x1837)) x1837))
(assert (= (x4643 (x3272 x175)) x175))
(assert (x1672 x615))
(assert (x1672 x5023))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x660) x4164) (and (=> (and (> 826074471 x2511) (not (> 4 x3772)) (= x4733 10894474682274239493831243662817379401261526446360622092269559273883068006400) (not (= x2511 157198259)) (<= 0 x445) (= 4 x3772) (= x3858 (x4232 (x3272 274184521717934524641157099916833587202))) (= x2511 404098525) (> x3858 0) (= 32 x3758) (= 1 x4864) (<= x445 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3772 x2662) x4164 (not (= 117300739 x2511))) x1379) (=> (not x4164) x2262))) x110))
(assert (x1672 x4707))
(assert (= x516 (and x3752 (not x3802))))
(assert (= (ite (and x949 x2358 (not x1846)) (x444 x4119) (x4368 x4119)) (x3359 x4119)))
(assert (x963 x2124))
(assert (= x819 (=> (and (= x5022 x4576) (= x2569 0)) x3173)))
(assert (= (ite (= x1438 x3824) x2936 (x2347 x1438)) (x2744 x1438)))
(assert (= x4233 (and (not x1760) x247)))
(assert (x963 x2011))
(assert (x1672 x743))
(assert (x963 x2824))
(assert (= (or x2162 (and x1207 x1164)) x4808))
(assert (x1672 x4015))
(assert (x1672 x4817))
(assert (= (+ 2 (x4643 x3887)) (x4643 (x307 x3887 2))))
(assert (x1672 x2030))
(assert (x1814 x1266 x2523))
(assert (x1672 x1858))
(assert (= (=> (and (= x2030 36) (= (or (and (= (<= x2299 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2299)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2299)) x2393) (> x1809 0) (= x5193 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (= x2132 826074471)) (= 1889567281 x2132) (= x2030 36) (= (x4232 (x3272 274184521717934524641157099916833587202)) x1809) (not (< x2030 4)) (= (x529 (- x2030 4)) x2299) (= x1266 x1545) (not (< x2132 826074471))) (and (=> x2393 x2483) (=> (not x2393) x4543))) x4690))
(assert (x963 x3850))
(assert (= x1910 (or (and x129 x2454) (and x3032 x5150))))
(assert (x1672 x3037))
(assert (x1672 x607))
(assert (= x4695 (and x1229 x3756)))
(assert (= (ite (= x479 x4750) x408 (x4188 x4750)) (x3915 x4750)))
(assert (= x1980 (and (not x3411) x1595)))
(assert (= (x4643 (x3272 x2983)) x2983))
(assert (x1672 x728))
(assert (x963 x4869))
(assert (x4182 x1132))
(assert (= x3810 (or (and x1110 (not x4597)) (and (not x858) x1804) (and x5076 (not x1510)))))
(assert (= (and x5000 x541) x3363))
(assert (= (and x5214 x1779) x1653))
(assert (x2083 x4949 x3893))
(assert (x1672 x3278))
(assert (= x4269 (and x4784 (not x793))))
(assert (x1814 x3275 x4549))
(assert (= (=> (and (= x2259 (x40 x3621)) (= (< 0 x2259) x3756)) (and (=> (and (= x2830 x1021) (not x3756)) x667) (=> x3756 x2174))) x1615))
(assert (x1672 x1673))
(assert (x1672 x4869))
(assert (= (and x1654 (not x4156)) x2624))
(assert (= 0 (x2591 x4993)))
(assert (x963 x935))
(assert (= (and x349 x3637) x4944))
(assert (x1672 x3957))
(assert (= (=> (and (= x452 (or (and (> 32 x947) (= true (<= x947 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x947 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1505 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1347) x1610) (= x1812 (x2276 (+ x3482 x1610))) (= (x2276 (+ 31 x947)) x1347)) (and (=> x452 x4498) (=> (not x452) x897))) x1955))
(assert (x1672 x575))
(assert (x963 x2790))
(assert (= (and x598 x3433) x5083))
(assert (= (=> (and (= x1122 (x982 (x3272 274184521717934524641157099916833587231))) (= x4735 x3345) (= (x982 (x3272 x1878)) x2159) (= x4973 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2159) (>= x1122 0)))) (and (=> x4973 x4930) (=> (and (= 0 x1821) (not x4973) (= x432 0)) x5041))) x911))
(assert (x1672 x1176))
(assert (x1672 x1958))
(assert (x1672 x1895))
(assert (x4494 x2696 x4886 x648 x936))
(assert (= (and x2066 (not x2393)) x4030))
(assert (x1672 x4755))
(assert (x963 x2555))
(assert (x963 x2863))
(assert (x1672 x2140))
(assert (x4680 x106 x2512))
(assert (= x1428 (and (not x2978) x1039)))
(assert (x1672 x4344))
(assert (x1672 x3057))
(assert (x1672 x1634))
(assert (= x3630 (=> (and (= x3390 x2413) (= x4076 x370)) x852)))
(assert (x1672 x2336))
(assert (x1672 x2731))
(assert (= (x747 1461501637330902918203684832716283019655932542975) (x3272 1461501637330902918203684832716283019655932542975)))
(assert (= x2439 (and x2451 (not x731))))
(assert (x1672 x3162))
(assert (x1672 x3838))
(assert (x1672 x2952))
(assert (x1672 x4341))
(assert (= (or (and (not x4616) x5291) (and (not x3971) x4780)) x411))
(assert (x1814 x1527 x677))
(assert (= (=> (and (= x2121 (= x3301 0)) (= (x1505 1461501637330902918203684832716283019655932542975 x882) x5009) (= (x4840 x5175) x946) (= (x2524 x4187) x882) (= x1631 4) (= (x2276 (+ 32 x1176)) x4187) (= x5175 (x2276 (+ 128 x1176))) (= (x4232 (x3272 x5009)) x3301)) (and (=> x2121 x4032) (=> (not x2121) x4048))) x1073))
(assert (= (and (not x3091) x517) x839))
(assert (= (=> (and (= x5313 (= x4483 0)) (= (x2313 x813) x4483)) (and (=> (not x5313) x4157) (=> (and (= 0 x2107) x5313) x1287))) x403))
(assert (x1672 x4698))
(assert (x1672 x306))
(assert (=> (>= 10000 x4836) (= (x747 x4836) (x3272 x4836))))
(assert (= x1324 (and (not x2121) x3416)))
(assert (= x5056 (and x4243 (not x5289))))
(assert (x4680 x1261 x3459))
(assert (x1672 x2268))
(assert (= (x4643 (x3272 x3152)) x3152))
(assert (x1672 x2901))
(assert (= (=> (and (= x2497 x2954) (not (> 4 x808)) (= 1889567281 x3828) (> x2294 0) (= 36 x808) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1061) (= x239 (x529 (- x808 4))) (= 36 x808) (= x2294 (x4232 (x3272 274184521717934524641157099916833587206))) (= x2649 (or (and (> 32 x239) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x239))) (> x239 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 826074471 x3828)) (not (< x3828 826074471))) (and (=> (not x2649) x3917) (=> x2649 x3232))) x1269))
(assert (= x8 x2730))
(assert (x963 x1253))
(assert (x1672 x3053))
(check-sat)
