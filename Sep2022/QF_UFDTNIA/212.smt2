(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x322 0)) (((x188 (x183 Int)) (x30 (x136 x322) (x146 x322) (x257 Int)) (x309 (x392 x322) (x388 Int)))))
(declare-fun x336 () Int)
(declare-fun x242 () Int)
(declare-fun x396 () Int)
(declare-fun x400 () Int)
(declare-fun x369 () Int)
(declare-fun x228 (x322) Int)
(declare-fun x331 () Int)
(declare-fun x165 () Int)
(declare-fun x381 () Int)
(declare-fun x86 () Bool)
(declare-fun x166 () Int)
(declare-fun x266 () Int)
(declare-fun x234 () Bool)
(declare-fun x271 () Int)
(declare-fun x84 () Int)
(declare-fun x87 () Int)
(declare-fun x181 () Int)
(declare-fun x80 () Int)
(declare-fun x285 () Bool)
(declare-fun x29 () Int)
(declare-fun x101 () Bool)
(declare-fun x193 () Int)
(declare-fun x259 () Int)
(declare-fun x254 () Int)
(declare-fun x23 () Int)
(declare-fun x121 () Int)
(declare-fun x240 () Int)
(declare-fun x243 () Int)
(declare-fun x308 () Int)
(declare-fun x24 () Int)
(declare-fun x147 () Int)
(declare-fun x47 () Bool)
(declare-fun x276 () Int)
(declare-fun x72 () Int)
(declare-fun x4 () Bool)
(declare-fun x50 () Bool)
(declare-fun x77 () Int)
(declare-fun x174 (Int Int) Int)
(declare-fun x341 (x322) Int)
(declare-fun x227 (Int Int) Int)
(declare-fun x290 () Bool)
(declare-fun x120 () Int)
(declare-fun x345 () Int)
(declare-fun x157 () Int)
(declare-fun x171 () Int)
(declare-fun x112 () Int)
(declare-fun x342 (x322) Int)
(declare-fun x137 () Int)
(declare-fun x247 () Int)
(declare-fun x150 () Int)
(declare-fun x159 () Bool)
(declare-fun x138 () Int)
(declare-fun x202 () Int)
(declare-fun x74 () Bool)
(declare-fun x81 () Int)
(declare-fun x41 () Bool)
(declare-fun x281 () Int)
(declare-fun x319 () Int)
(declare-fun x272 () Int)
(declare-fun x374 () Int)
(declare-fun x226 () Bool)
(declare-fun x311 () Int)
(declare-fun x258 () Bool)
(declare-fun x189 () Bool)
(declare-fun x116 () Int)
(declare-fun x296 () Int)
(declare-fun x196 () Int)
(declare-fun x264 () Bool)
(declare-fun x366 () Int)
(declare-fun x7 () Bool)
(declare-fun x191 () Bool)
(declare-fun x307 () Int)
(declare-fun x262 () Int)
(declare-fun x219 () Bool)
(declare-fun x59 () Int)
(declare-fun x125 () Int)
(declare-fun x160 () Int)
(declare-fun x256 () Int)
(declare-fun x85 () Int)
(declare-fun x380 () Int)
(declare-fun x9 () Int)
(declare-fun x213 () Int)
(declare-fun x19 () Int)
(declare-fun x37 () Int)
(declare-fun x123 () Int)
(declare-fun x305 () Bool)
(declare-fun x8 () Int)
(declare-fun x113 () Bool)
(declare-fun x384 () Int)
(declare-fun x325 () Int)
(declare-fun x57 () Int)
(declare-fun x210 () Int)
(declare-fun x352 () Int)
(declare-fun x315 () Int)
(declare-fun x334 () Int)
(declare-fun x132 () Int)
(declare-fun x230 () Int)
(declare-fun x378 () Int)
(declare-fun x5 () Bool)
(declare-fun x248 () Int)
(declare-fun x357 () Int)
(declare-fun x232 () Int)
(declare-fun x401 () Bool)
(declare-fun x340 () Int)
(declare-fun x143 () Int)
(declare-fun x185 () Int)
(declare-fun x314 () Int)
(declare-fun x377 () Int)
(declare-fun x133 () Int)
(declare-fun x2 () Bool)
(declare-fun x194 () Int)
(declare-fun x279 () Int)
(declare-fun x204 () Int)
(declare-fun x60 () Int)
(declare-fun x144 () Int)
(declare-fun x92 () Int)
(declare-fun x195 () Int)
(declare-fun x20 () Int)
(declare-fun x38 () Int)
(declare-fun x176 (x322) Int)
(declare-fun x177 () Int)
(declare-fun x339 () Int)
(declare-fun x391 () Int)
(declare-fun x326 () Int)
(declare-fun x395 () Int)
(declare-fun x15 () Int)
(declare-fun x383 () Int)
(declare-fun x203 () Int)
(declare-fun x124 () Int)
(declare-fun x295 () Int)
(declare-fun x61 () Int)
(declare-fun x327 () Int)
(declare-fun x205 () Int)
(declare-fun x168 () Int)
(declare-fun x250 () Int)
(declare-fun x346 () Int)
(declare-fun x76 () Int)
(declare-fun x114 () Int)
(declare-fun x26 () Int)
(declare-fun x88 () Int)
(declare-fun x178 () Bool)
(declare-fun x155 () Int)
(declare-fun x3 () Int)
(declare-fun x278 () Int)
(declare-fun x11 () Int)
(declare-fun x201 () Int)
(declare-fun x182 () Int)
(declare-fun x355 () Int)
(declare-fun x398 () Int)
(declare-fun x28 () Bool)
(declare-fun x269 () Int)
(declare-fun x154 () Int)
(declare-fun x93 () Int)
(declare-fun x218 () Int)
(declare-fun x18 () Int)
(declare-fun x187 () Int)
(declare-fun x246 () Int)
(declare-fun x222 () Bool)
(declare-fun x95 () Int)
(declare-fun x343 () Int)
(declare-fun x49 () Int)
(declare-fun x110 () Int)
(declare-fun x302 () Int)
(declare-fun x239 () Int)
(declare-fun x1 () Int)
(declare-fun x62 () Int)
(declare-fun x362 () Int)
(declare-fun x236 () Int)
(declare-fun x289 () Int)
(declare-fun x16 () Int)
(declare-fun x238 () Int)
(declare-fun x69 () Int)
(declare-fun x293 () Int)
(declare-fun x397 () Int)
(declare-fun x48 () Bool)
(declare-fun x98 () Int)
(declare-fun x394 () Int)
(declare-fun x56 () Int)
(declare-fun x167 () Int)
(declare-fun x35 () Int)
(declare-fun x324 () Int)
(declare-fun x356 () Int)
(declare-fun x33 () Int)
(declare-fun x139 () Int)
(declare-fun x350 () Int)
(declare-fun x32 () Int)
(declare-fun x312 () Int)
(declare-fun x299 () Int)
(declare-fun x237 () Int)
(declare-fun x17 () Int)
(declare-fun x173 () Int)
(declare-fun x365 (x322) Int)
(declare-fun x224 () Int)
(declare-fun x328 () Int)
(declare-fun x207 () Int)
(declare-fun x323 () Int)
(declare-fun x70 () Int)
(declare-fun x287 () Int)
(declare-fun x65 () Bool)
(declare-fun x71 () Int)
(declare-fun x364 () Int)
(declare-fun x216 () Int)
(declare-fun x122 () Int)
(declare-fun x131 () Int)
(declare-fun x280 () Int)
(declare-fun x368 () Int)
(declare-fun x151 () Int)
(declare-fun x367 () Int)
(declare-fun x206 () Int)
(declare-fun x192 () Int)
(declare-fun x149 () Int)
(declare-fun x200 () Int)
(declare-fun x152 () Int)
(declare-fun x387 () Int)
(declare-fun x22 () Int)
(declare-fun x148 () Int)
(declare-fun x351 () Int)
(declare-fun x270 () Int)
(declare-fun x34 () Int)
(declare-fun x353 () Bool)
(declare-fun x375 () Bool)
(declare-fun x172 () Int)
(declare-fun x129 () Int)
(declare-fun x158 (Int) x322)
(declare-fun x329 () Bool)
(declare-fun x130 () Int)
(declare-fun x25 () Int)
(declare-fun x108 () Int)
(declare-fun x46 () Bool)
(declare-fun x282 () Bool)
(declare-fun x235 () Int)
(declare-fun x379 () Int)
(declare-fun x337 () Int)
(declare-fun x294 () Int)
(declare-fun x66 () Int)
(declare-fun x94 () Int)
(declare-fun x90 () Int)
(declare-fun x10 () Int)
(declare-fun x253 () Int)
(declare-fun x407 () Int)
(declare-fun x175 (Int) Int)
(declare-fun x141 () Int)
(declare-fun x360 () Int)
(declare-fun x303 () Int)
(declare-fun x382 () Int)
(declare-fun x13 () Bool)
(declare-fun x31 () Bool)
(declare-fun x67 () Bool)
(declare-fun x390 () Bool)
(declare-fun x320 () Int)
(declare-fun x54 () Int)
(declare-fun x53 () Int)
(declare-fun x105 () Int)
(declare-fun x358 () Bool)
(declare-fun x348 () Int)
(declare-fun x220 () Int)
(declare-fun x55 () Bool)
(declare-fun x225 () Int)
(declare-fun x186 () Bool)
(declare-fun x115 () Int)
(declare-fun x103 () Int)
(declare-fun x156 () Int)
(declare-fun x370 () Int)
(declare-fun x27 () Int)
(declare-fun x68 () Int)
(declare-fun x217 () Int)
(declare-fun x233 () Int)
(declare-fun x91 () Int)
(declare-fun x79 () Int)
(declare-fun x162 () Int)
(declare-fun x263 () Int)
(declare-fun x265 () Int)
(declare-fun x82 () Int)
(declare-fun x170 () Int)
(declare-fun x321 () Int)
(declare-fun x221 () Int)
(declare-fun x373 () Bool)
(declare-fun x209 () Int)
(declare-fun x363 () Int)
(declare-fun x104 () Int)
(declare-fun x78 () Bool)
(declare-fun x292 () Bool)
(declare-fun x301 () Int)
(declare-fun x261 () Int)
(declare-fun x268 () Bool)
(declare-fun x12 () Bool)
(declare-fun x274 () Int)
(declare-fun x102 () Bool)
(declare-fun x275 (x322) Int)
(declare-fun x223 () Int)
(declare-fun x260 () Int)
(declare-fun x208 () Int)
(declare-fun x252 () Bool)
(declare-fun x111 () Int)
(declare-fun x333 () Int)
(declare-fun x190 () Int)
(declare-fun x344 () Bool)
(declare-fun x371 () Int)
(declare-fun x58 () Int)
(declare-fun x100 () Int)
(declare-fun x389 () Int)
(declare-fun x291 () Bool)
(declare-fun x406 () Bool)
(declare-fun x21 () Int)
(declare-fun x386 () Int)
(define-fun x184 ((x322 x322) (x45 Int)) x322 (ite ((_ is x30) x322) (x30 (x136 x322) (x146 x322) (+ (x257 x322) x45)) (ite ((_ is x309) x322) (x309 (x392 x322) (+ x45 (x388 x322))) (x188 (+ (x183 x322) x45)))))
(define-fun x215 ((x284 Int)) Int (ite (and (<= 0 x284) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x284)) x284 (- x284 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x63 ((x284 Int)) Int (ite (and (> 0 x284) (>= x284 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x284 115792089237316195423570985008687907853269984665640564039457584007913129639936) x284))
(define-fun x354 ((x316 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x316) (>= x316 0)))
(define-fun x135 ((x316 Int)) Bool (and (= x316 (x227 x316 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x316 (x227 115792089237316195423570985008687907853269984665640564039457584007913129639935 x316))))
(define-fun x163 ((x316 Int)) Bool (and (= 0 (x227 0 x316)) (= (x227 x316 0) 0)))
(define-fun x255 ((x316 Int)) Bool (= x316 (x227 x316 x316)))
(define-fun x300 ((x316 Int)) Bool (and (x135 x316) (x163 x316) (x255 x316)))
(define-fun x89 ((x316 Int)) Bool (= (x227 18446744073709551615 (x227 18446744073709551615 x316)) (x227 18446744073709551615 x316)))
(define-fun x306 ((x316 Int)) Bool (=> (and (< x316 18446744073709551616) (<= 0 x316)) (= (x227 18446744073709551615 x316) x316)))
(define-fun x214 ((x316 Int)) Bool (=> (= (x227 18446744073709551615 x316) x316) (and (<= 0 x316) (< x316 18446744073709551616))))
(define-fun x97 ((x316 Int)) Bool (=> (and (< x316 36893488147419103232) (<= 18446744073709551616 x316)) (= (- x316 18446744073709551616) (x227 18446744073709551615 x316))))
(define-fun x127 ((x316 Int) (x14 Int)) Bool (and (>= x14 0) (= (+ (* x14 18446744073709551616) (x227 18446744073709551615 x316)) x316)))
(define-fun x197 ((x316 Int) (x44 Int)) Bool (and (x89 x316) (x97 x316) (x306 x316) (x214 x316) (x127 x316 x44)))
(define-fun x399 ((x316 Int) (x14 Int)) Bool (= (x227 x14 x316) (x227 x316 x14)))
(define-fun x283 ((x316 Int) (x14 Int)) Bool (and (=> (<= 0 x316) (>= x316 (x227 x316 x14))) (<= 0 (x227 x316 x14)) (=> (<= 0 x14) (<= (x227 x316 x14) x14))))
(define-fun x83 ((x316 Int) (x14 Int)) Bool (and (x283 x316 x14) (x399 x316 x14)))
(define-fun x140 ((x316 Int) (x44 Int)) Bool (and (x83 x316 18446744073709551615) (x197 x316 x44)))
(define-fun x153 ((x316 Int)) Bool (= (x227 1099511627775 x316) (x227 1099511627775 (x227 1099511627775 x316))))
(define-fun x40 ((x316 Int)) Bool (=> (and (> 1099511627776 x316) (>= x316 0)) (= x316 (x227 1099511627775 x316))))
(define-fun x96 ((x316 Int)) Bool (=> (= x316 (x227 1099511627775 x316)) (and (> 1099511627776 x316) (>= x316 0))))
(define-fun x338 ((x316 Int)) Bool (=> (and (>= x316 1099511627776) (> 2199023255552 x316)) (= (- x316 1099511627776) (x227 1099511627775 x316))))
(define-fun x349 ((x316 Int) (x14 Int)) Bool (and (= (+ (* x14 1099511627776) (x227 1099511627775 x316)) x316) (>= x14 0)))
(define-fun x118 ((x316 Int) (x44 Int)) Bool (and (x40 x316) (x96 x316) (x338 x316) (x153 x316) (x349 x316 x44)))
(define-fun x106 ((x316 Int) (x44 Int)) Bool (and (x118 x316 x44) (x83 x316 1099511627775)))
(define-fun x64 ((x316 Int)) Bool (= (x227 20282409603651670423947251286015 (x227 20282409603651670423947251286015 x316)) (x227 20282409603651670423947251286015 x316)))
(define-fun x145 ((x316 Int)) Bool (=> (and (> 20282409603651670423947251286016 x316) (>= x316 0)) (= x316 (x227 20282409603651670423947251286015 x316))))
(define-fun x119 ((x316 Int)) Bool (=> (= (x227 20282409603651670423947251286015 x316) x316) (and (<= 0 x316) (< x316 20282409603651670423947251286016))))
(define-fun x179 ((x316 Int)) Bool (=> (and (<= 20282409603651670423947251286016 x316) (> 40564819207303340847894502572032 x316)) (= (x227 20282409603651670423947251286015 x316) (- x316 20282409603651670423947251286016))))
(define-fun x317 ((x316 Int) (x14 Int)) Bool (and (= (+ (x227 20282409603651670423947251286015 x316) (* x14 20282409603651670423947251286016)) x316) (>= x14 0)))
(define-fun x6 ((x316 Int) (x44 Int)) Bool (and (x317 x316 x44) (x145 x316) (x64 x316) (x119 x316) (x179 x316)))
(define-fun x393 ((x316 Int) (x44 Int)) Bool (and (x6 x316 x44) (x83 x316 20282409603651670423947251286015)))
(define-fun x198 ((x316 Int)) Bool (= (x227 115792089237316195423570985008687907853269984665640564039439137263839420088320 x316) (x227 115792089237316195423570985008687907853269984665640564039439137263839420088320 (x227 115792089237316195423570985008687907853269984665640564039439137263839420088320 x316))))
(define-fun x297 ((x316 Int)) Bool (=> (and (<= 0 x316) (< x316 18446744073709551616)) (= 0 (x227 115792089237316195423570985008687907853269984665640564039439137263839420088320 x316))))
(define-fun x109 ((x316 Int) (x14 Int) (x403 Int) (x249 Int)) Bool (and (= (* 18446744073709551616 x403) (x227 115792089237316195423570985008687907853269984665640564039439137263839420088320 x316)) (>= x249 0) (= (+ (* 18446744073709551616 x403) x14 (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249)) x316) (>= x403 0) (> 6277101735386680763835789423207666416102355444464034512896 x403) (<= 0 x14) (< x14 18446744073709551616) (< x249 1)))
(define-fun x372 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x109 x316 x169 x212 x126) (x297 x316) (x198 x316)))
(define-fun x313 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x83 x316 115792089237316195423570985008687907853269984665640564039439137263839420088320) (x372 x316 x169 x212 x126)))
(define-fun x142 ((x316 Int)) Bool (= (x227 115792089237316195423570985008687907852929702298719625576012656144555070980095 (x227 115792089237316195423570985008687907852929702298719625576012656144555070980095 x316)) (x227 115792089237316195423570985008687907852929702298719625576012656144555070980095 x316)))
(define-fun x251 ((x316 Int)) Bool (=> (and (< x316 18446744073709551616) (<= 0 x316)) (= (x227 115792089237316195423570985008687907852929702298719625576012656144555070980095 x316) x316)))
(define-fun x199 ((x316 Int) (x14 Int) (x403 Int) (x249 Int)) Bool (and (>= x403 0) (= (+ x14 (* 340282366920938463463374607431768211456 x249) (* x403 18446744073709551616)) x316) (<= 0 x249) (>= x14 0) (> 18446744073709551616 x14) (> 340282366920938463463374607431768211456 x249) (= (+ x14 (* x249 340282366920938463463374607431768211456)) (x227 115792089237316195423570985008687907852929702298719625576012656144555070980095 x316)) (> 18446744073709551616 x403)))
(define-fun x404 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x142 x316) (x199 x316 x169 x212 x126) (x251 x316)))
(define-fun x134 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x83 x316 115792089237316195423570985008687907852929702298719625576012656144555070980095) (x404 x316 x169 x212 x126)))
(define-fun x318 ((x316 Int)) Bool (= (x227 340282366920938463444927863358058659840 x316) (x227 340282366920938463444927863358058659840 (x227 340282366920938463444927863358058659840 x316))))
(define-fun x359 ((x316 Int)) Bool (=> (and (> 18446744073709551616 x316) (<= 0 x316)) (= (x227 340282366920938463444927863358058659840 x316) 0)))
(define-fun x107 ((x316 Int) (x14 Int) (x403 Int) (x249 Int)) Bool (and (> 18446744073709551616 x403) (> 340282366920938463463374607431768211456 x249) (<= 0 x14) (<= 0 x403) (= (* 18446744073709551616 x403) (x227 340282366920938463444927863358058659840 x316)) (> 18446744073709551616 x14) (= (+ (* x403 18446744073709551616) (* x249 340282366920938463463374607431768211456) x14) x316) (>= x249 0)))
(define-fun x51 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x107 x316 x169 x212 x126) (x318 x316) (x359 x316)))
(define-fun x402 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x83 x316 340282366920938463444927863358058659840) (x51 x316 x169 x212 x126)))
(define-fun x288 ((x316 Int)) Bool (= (x227 115792089237316195417293883273301227089774477609353836086818603170880863338495 x316) (x227 115792089237316195417293883273301227089774477609353836086818603170880863338495 (x227 115792089237316195417293883273301227089774477609353836086818603170880863338495 x316))))
(define-fun x36 ((x316 Int)) Bool (=> (and (< x316 340282366920938463463374607431768211456) (<= 0 x316)) (= x316 (x227 115792089237316195417293883273301227089774477609353836086818603170880863338495 x316))))
(define-fun x298 ((x316 Int) (x14 Int) (x403 Int) (x249 Int)) Bool (and (> 18446744073709551616 x403) (> 340282366920938463463374607431768211456 x14) (>= x249 0) (= (x227 115792089237316195417293883273301227089774477609353836086818603170880863338495 x316) (+ x14 (* x249 6277101735386680763835789423207666416102355444464034512896))) (>= x14 0) (= x316 (+ x14 (* x249 6277101735386680763835789423207666416102355444464034512896) (* x403 340282366920938463463374607431768211456))) (< x249 18446744073709551616) (>= x403 0)))
(define-fun x117 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x36 x316) (x298 x316 x169 x212 x126) (x288 x316)))
(define-fun x229 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x117 x316 x169 x212 x126) (x83 x316 115792089237316195417293883273301227089774477609353836086818603170880863338495)))
(define-fun x310 ((x316 Int)) Bool (= (x227 6277101735386680763495507056286727952638980837032266301440 x316) (x227 6277101735386680763495507056286727952638980837032266301440 (x227 6277101735386680763495507056286727952638980837032266301440 x316))))
(define-fun x211 ((x316 Int)) Bool (=> (and (<= 0 x316) (> 340282366920938463463374607431768211456 x316)) (= 0 (x227 6277101735386680763495507056286727952638980837032266301440 x316))))
(define-fun x332 ((x316 Int) (x14 Int) (x403 Int) (x249 Int)) Bool (and (< x14 340282366920938463463374607431768211456) (= (x227 6277101735386680763495507056286727952638980837032266301440 x316) (* x403 340282366920938463463374607431768211456)) (= x316 (+ x14 (* x403 340282366920938463463374607431768211456) (* 6277101735386680763835789423207666416102355444464034512896 x249))) (<= 0 x14) (< x249 18446744073709551616) (>= x249 0) (< x403 18446744073709551616) (>= x403 0)))
(define-fun x241 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x310 x316) (x332 x316 x169 x212 x126) (x211 x316)))
(define-fun x267 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x241 x316 x169 x212 x126) (x83 x316 6277101735386680763495507056286727952638980837032266301440)))
(define-fun x52 ((x316 Int)) Bool (= (x227 6277101735386680763835789423207666416102355444464034512895 (x227 6277101735386680763835789423207666416102355444464034512895 x316)) (x227 6277101735386680763835789423207666416102355444464034512895 x316)))
(define-fun x244 ((x316 Int)) Bool (=> (and (> 6277101735386680763835789423207666416102355444464034512896 x316) (<= 0 x316)) (= x316 (x227 6277101735386680763835789423207666416102355444464034512895 x316))))
(define-fun x164 ((x316 Int)) Bool (=> (= (x227 6277101735386680763835789423207666416102355444464034512895 x316) x316) (and (<= 0 x316) (< x316 6277101735386680763835789423207666416102355444464034512896))))
(define-fun x128 ((x316 Int)) Bool (=> (and (>= x316 6277101735386680763835789423207666416102355444464034512896) (> 12554203470773361527671578846415332832204710888928069025792 x316)) (= (x227 6277101735386680763835789423207666416102355444464034512895 x316) (- x316 6277101735386680763835789423207666416102355444464034512896))))
(define-fun x385 ((x316 Int) (x14 Int)) Bool (and (= (+ (* 6277101735386680763835789423207666416102355444464034512896 x14) (x227 6277101735386680763835789423207666416102355444464034512895 x316)) x316) (>= x14 0)))
(define-fun x75 ((x316 Int) (x44 Int)) Bool (and (x244 x316) (x128 x316) (x164 x316) (x385 x316 x44) (x52 x316)))
(define-fun x335 ((x316 Int) (x44 Int)) Bool (and (x75 x316 x44) (x83 x316 6277101735386680763835789423207666416102355444464034512895)))
(define-fun x180 ((x316 Int)) Bool (= (x227 115339776388733340411336991150008259455513788125666651270144861215348056129535 (x227 115339776388733340411336991150008259455513788125666651270144861215348056129535 x316)) (x227 115339776388733340411336991150008259455513788125666651270144861215348056129535 x316)))
(define-fun x161 ((x316 Int)) Bool (=> (and (> 411376139330301510538742295639337626245683966408394965837152256 x316) (<= 0 x316)) (= x316 (x227 115339776388733340411336991150008259455513788125666651270144861215348056129535 x316))))
(define-fun x304 ((x316 Int) (x14 Int) (x403 Int) (x249 Int)) Bool (and (= (+ (* x249 452312848583266388373324160190187140051835877600158453279131187530910662656) x14) (x227 115339776388733340411336991150008259455513788125666651270144861215348056129535 x316)) (<= 0 x403) (> 411376139330301510538742295639337626245683966408394965837152256 x14) (= x316 (+ x14 (* x249 452312848583266388373324160190187140051835877600158453279131187530910662656) (* x403 411376139330301510538742295639337626245683966408394965837152256))) (>= x14 0) (< x249 256) (> 1099511627776 x403) (>= x249 0)))
(define-fun x42 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x180 x316) (x304 x316 x169 x212 x126) (x161 x316)))
(define-fun x245 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x83 x316 115339776388733340411336991150008259455513788125666651270144861215348056129535) (x42 x316 x169 x212 x126)))
(define-fun x361 ((x316 Int)) Bool (= (x227 452312848582855012233993858679648397756196539973912769312722792565073510400 x316) (x227 452312848582855012233993858679648397756196539973912769312722792565073510400 (x227 452312848582855012233993858679648397756196539973912769312722792565073510400 x316))))
(define-fun x43 ((x316 Int)) Bool (=> (and (> 411376139330301510538742295639337626245683966408394965837152256 x316) (>= x316 0)) (= (x227 452312848582855012233993858679648397756196539973912769312722792565073510400 x316) 0)))
(define-fun x231 ((x316 Int) (x14 Int) (x403 Int) (x249 Int)) Bool (and (< x14 411376139330301510538742295639337626245683966408394965837152256) (<= 0 x403) (> 1099511627776 x403) (>= x249 0) (= x316 (+ (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x249) (* x403 411376139330301510538742295639337626245683966408394965837152256) x14)) (> 256 x249) (= (x227 452312848582855012233993858679648397756196539973912769312722792565073510400 x316) (* x403 411376139330301510538742295639337626245683966408394965837152256)) (>= x14 0)))
(define-fun x273 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x361 x316) (x231 x316 x169 x212 x126) (x43 x316)))
(define-fun x330 ((x316 Int) (x169 Int) (x212 Int) (x126 Int)) Bool (and (x83 x316 452312848582855012233993858679648397756196539973912769312722792565073510400) (x273 x316 x169 x212 x126)))
(define-fun x39 ((x73 x322)) Int (ite (= (x188 0) x73) x237 (x176 x73)))
(define-fun x286 ((x73 x322)) Int (ite (= (x188 0) x73) x378 (x341 x73)))
(define-fun x347 ((x73 x322)) Int (ite (= x73 (x188 0)) x209 (x228 x73)))
(define-fun x277 ((x73 x322)) Int (ite (and x226 x41 x67) (x228 x73) (x347 x73)))
(define-fun x376 ((x73 x322)) Int (ite (= (x188 1) x73) x307 (x277 x73)))
(define-fun x99 ((x73 x322)) Int (ite (and (not x41) x226) (x176 x73) (x376 x73)))
(define-fun x405 ((x316 Int)) Bool (=> (and (not (= x316 2834295333)) (not (= 1208925819614629174706175 x316)) (not (= x316 3075265556)) (not (= 2055092157 x316)) (not (= x316 6277101735386680763835789423207666416102355444464034512896)) (not (= 274184521717934524641157099916833587223 x316)) (not (= 3122421376 x316)) (not (= 340282366920938463463374607431768211456 x316)) (< 10000 x316) (not (= 411376139330301510538742295639337626245683966408394965837152256 x316)) (not (= 1157571613 x316)) (not (= x316 115792089237316195423570985008687907853269984665640564039439137263839420088320)) (not (= 274184521717934524641157099916833587211 x316)) (not (= 1000000000000000000 x316)) (not (= 274184521717934524641157099916833587221 x316)) (not (= 3889878717 x316)) (not (= x316 1000000000000000)) (not (= 2867386960 x316)) (not (= 1490534272 x316)) (not (= 1099511627776 x316)) (not (= x316 115792089237316195417293883273301227089774477609353836086818603170880863338495)) (not (= x316 2059964113)) (not (= 2758797371 x316)) (not (= 4033150093 x316)) (not (= 2799315671 x316)) (not (= 1736444767 x316)) (not (= 18446744073709551615 x316)) (not (= 3638949393 x316)) (not (= 6277101735386680763835789423207666416102355444464034512895 x316)) (not (= x316 2531764673)) (not (= 1099511627775 x316)) (not (= x316 1507858365)) (not (= 2879910238 x316)) (not (= x316 115792089237316195423570985008687907852929702298719625576012656144555070980095)) (not (= 20282409603651670423947251286015 x316)) (not (= 20282409603651670423947251286016 x316)) (not (= 115339776388733340411336991150008259455513788125666651270144861215348056129535 x316)) (not (= x316 840395849)) (not (= 18446744073709551616 x316)) (not (= x316 1752364190)) (not (= x316 1461501637330902918203684832716283019655932542975))) (not ((_ is x188) (x158 x316)))))
(assert (x354 x289))
(assert (x354 x235))
(assert (x354 x35))
(assert (x300 x206))
(assert (x354 x87))
(assert (x354 x76))
(assert (x354 x120))
(assert (x354 x380))
(assert (x300 x389))
(assert (x354 x362))
(assert (x300 x165))
(assert (x354 x23))
(assert (x354 x391))
(assert (x354 x77))
(assert (x354 x81))
(assert (x354 x154))
(assert (= (x275 (x188 1736444767)) 1736444767))
(assert (x354 x150))
(assert (= (x188 1736444767) (x158 1736444767)))
(assert (x300 x71))
(assert (= (x275 (x188 411376139330301510538742295639337626245683966408394965837152256)) 411376139330301510538742295639337626245683966408394965837152256))
(assert (= (x275 (x188 1000000000000000000)) 1000000000000000000))
(assert (x354 x337))
(assert (x354 x194))
(assert (x354 x88))
(assert (x354 x247))
(assert (x354 x53))
(assert (x354 x58))
(assert (= (x158 2059964113) (x188 2059964113)))
(assert (= (x275 (x188 1157571613)) 1157571613))
(assert (x354 x207))
(assert (= 2758797371 (x275 (x188 2758797371))))
(assert (= (x275 (x188 340282366920938463463374607431768211456)) 340282366920938463463374607431768211456))
(assert (= 2059964113 (x275 (x188 2059964113))))
(assert (x354 x85))
(assert (x354 x302))
(assert (x354 x366))
(assert (x354 x24))
(assert (= (x158 2799315671) (x188 2799315671)))
(assert (= (x275 (x188 2867386960)) 2867386960))
(assert (x140 x165 x265))
(assert (x354 x200))
(assert (= (x275 (x188 20282409603651670423947251286015)) 20282409603651670423947251286015))
(assert (x354 x400))
(assert (x393 x70 x108))
(assert (= 1461501637330902918203684832716283019655932542975 (x275 (x188 1461501637330902918203684832716283019655932542975))))
(assert (x354 x382))
(assert (x354 x104))
(assert (x354 x346))
(assert (x300 x315))
(assert (x354 x364))
(assert (x300 x90))
(assert (x393 x217 x17))
(assert (x354 x100))
(assert (x354 x190))
(assert (= 18446744073709551616 (x275 (x188 18446744073709551616))))
(assert (x354 x206))
(assert (x354 x225))
(assert (x354 x230))
(assert (x300 340282366920938463444927863358058659840))
(assert (x354 x57))
(assert (x354 x114))
(assert (x354 x70))
(assert (= (x158 1752364190) (x188 1752364190)))
(assert (x354 x192))
(assert (x354 x62))
(assert (x300 x137))
(assert (x300 1099511627775))
(assert (x354 x281))
(assert (= (x275 (x188 115339776388733340411336991150008259455513788125666651270144861215348056129535)) 115339776388733340411336991150008259455513788125666651270144861215348056129535))
(assert (= (x188 2758797371) (x158 2758797371)))
(assert (= (x188 840395849) (x158 840395849)))
(assert (x354 x216))
(assert (x354 x196))
(assert (x354 x112))
(assert (= (x275 (x158 274184521717934524641157099916833587211)) 274184521717934524641157099916833587211))
(assert (= 18446744073709551615 (x275 (x188 18446744073709551615))))
(assert (x300 x196))
(assert (= x222 (=> (and (= 3075265556 x156) (not (< x156 2758797371)) (not (= x156 2799315671)) (> 3122421376 x156) (not (< x156 2531764673)) (not (= 2834295333 x156)) (= (x176 (x188 0)) x181) (= (x342 (x158 274184521717934524641157099916833587211)) x201) (< 0 x201) (not (< x156 2059964113)) (not (= x156 2867386960)) (not (= x156 2879910238)) (= x22 x56) (not (= 2758797371 x156)) (= x22 (x227 18446744073709551615 x181))) (=> (= x221 x56) x375))))
(assert (x354 x311))
(assert (= (x158 2055092157) (x188 2055092157)))
(assert (= (x158 115792089237316195423570985008687907853269984665640564039439137263839420088320) (x188 115792089237316195423570985008687907853269984665640564039439137263839420088320)))
(assert (x354 x8))
(assert (x354 x122))
(assert (x405 274184521717934524641157099916833587211))
(assert (x354 x351))
(assert (x354 x356))
(assert (= 1099511627775 (x275 (x188 1099511627775))))
(assert (x354 x239))
(assert (x354 x250))
(assert (x354 x315))
(assert (x300 x391))
(assert (x300 x181))
(assert (x354 x328))
(assert (x140 x311 x202))
(assert (= (x188 115792089237316195417293883273301227089774477609353836086818603170880863338495) (x158 115792089237316195417293883273301227089774477609353836086818603170880863338495)))
(assert (x140 x206 x325))
(assert (x354 x224))
(assert (x300 x66))
(assert (x300 x217))
(assert (x300 6277101735386680763495507056286727952638980837032266301440))
(assert (= (x188 411376139330301510538742295639337626245683966408394965837152256) (x158 411376139330301510538742295639337626245683966408394965837152256)))
(assert (x300 x247))
(assert (= x50 (=> (and (not (= 2758797371 x105)) (not (= 2879910238 x105)) (= x23 (x227 18446744073709551615 x206)) (= x23 x15) (not (= x105 2867386960)) (not (> 2531764673 x105)) (= 3075265556 x105) (> 3122421376 x105) (= x206 (x99 (x188 0))) (> x207 0) (not (> 2059964113 x105)) (not (> 2758797371 x105)) (= x207 (x342 (x158 274184521717934524641157099916833587211))) (not (= 2834295333 x105)) (not (= 2799315671 x105))) (=> (= x224 x15) x102))))
(assert (x140 x71 x205))
(assert (= (x275 (x188 1507858365)) 1507858365))
(assert (x354 x378))
(assert (x354 x110))
(assert (x354 x210))
(assert (x354 x352))
(assert (= (x188 6277101735386680763835789423207666416102355444464034512896) (x158 6277101735386680763835789423207666416102355444464034512896)))
(assert (x354 x33))
(assert (x354 x394))
(assert (= (x341 (x188 0)) x35))
(assert (x354 x368))
(assert (x354 x357))
(assert (x300 115792089237316195423570985008687907852929702298719625576012656144555070980095))
(assert (x354 x397))
(assert (x354 x10))
(assert (= (=> (and (= x182 x221) (= x53 x187) (= x5 (>= x88 x182)) (= x88 x224)) (and (=> (and (= x204 x187) (= x268 (>= x204 x328)) (= x115 x328)) x268) x5)) x285))
(assert (x300 x242))
(assert (= x48 true))
(assert (x393 x90 x254))
(assert (x300 x60))
(assert (x245 x138 x143 x111 x123))
(assert (x354 x9))
(assert (x354 x172))
(assert (x354 x333))
(assert (= x258 x86))
(assert (x354 x156))
(assert (= (=> (and (<= 0 x139) (= x287 (x365 (x158 274184521717934524641157099916833587211))) (= (x365 (x158 274184521717934524641157099916833587221)) x95) (<= x87 1461501637330902918203684832716283019655932542975) (>= x87 0) x31 (<= 0 x95) (>= x400 0) (>= x337 0) (= x400 (x365 (x158 274184521717934524641157099916833587223))) (>= 255 x110) (>= 255 x139) (>= x339 0) (<= 0 x110) (>= 1208925819614629174706175 x299) x282 (>= x62 0) (<= 0 x287) (>= 1208925819614629174706175 x62) (= (< 0 (x342 (x158 274184521717934524641157099916833587223))) x282) (= (< 0 (x342 (x158 274184521717934524641157099916833587221))) x31) (>= 1208925819614629174706175 x339) (>= x357 0) (>= 1208925819614629174706175 x337) x186 (>= 1461501637330902918203684832716283019655932542975 x357) (= x186 (< 0 (x342 (x158 274184521717934524641157099916833587211)))) (<= 0 x299)) x222) x373))
(assert (= x329 x48))
(assert (x354 x327))
(assert (x354 x293))
(assert (x300 x230))
(assert (x354 x133))
(assert (x354 x61))
(assert (x300 x166))
(assert (x354 x49))
(assert (x354 x59))
(assert (x335 x348 x243))
(assert (x300 18446744073709551615))
(assert (x354 x218))
(assert (x354 x387))
(assert true)
(assert (= (x158 115792089237316195423570985008687907852929702298719625576012656144555070980095) (x188 115792089237316195423570985008687907852929702298719625576012656144555070980095)))
(assert (= (x158 274184521717934524641157099916833587221) (x188 274184521717934524641157099916833587221)))
(assert (x354 x22))
(assert (x134 x232 x195 x27 x38))
(assert (= (x341 (x188 1)) (ite (= (x188 1) (x188 0)) x35 (x39 (x188 1)))))
(assert (= (x275 (x188 115792089237316195423570985008687907852929702298719625576012656144555070980095)) 115792089237316195423570985008687907852929702298719625576012656144555070980095))
(assert (= (x158 1208925819614629174706175) (x188 1208925819614629174706175)))
(assert (x393 x196 x213))
(assert (x354 x262))
(assert (x354 x84))
(assert (= (x158 1507858365) (x188 1507858365)))
(assert (= 6277101735386680763835789423207666416102355444464034512895 (x275 (x188 6277101735386680763835789423207666416102355444464034512895))))
(assert (x354 x340))
(assert (x300 x232))
(assert (x402 x232 x236 x350 x396))
(assert (x354 x34))
(assert (x393 x218 x25))
(assert (x106 x66 x324))
(assert (x300 x11))
(assert (= 1752364190 (x275 (x188 1752364190))))
(assert (x393 x208 x320))
(assert (x300 x395))
(assert (= (x158 274184521717934524641157099916833587211) (x188 274184521717934524641157099916833587211)))
(assert (x354 x238))
(assert (= 1099511627776 (x275 (x188 1099511627776))))
(assert (x354 x261))
(assert (x300 115792089237316195417293883273301227089774477609353836086818603170880863338495))
(assert (x354 x323))
(assert (= (x275 (x188 2879910238)) 2879910238))
(assert (x354 x173))
(assert (= (x158 3638949393) (x188 3638949393)))
(assert (x354 x26))
(assert (x354 x367))
(assert (x354 x69))
(assert (= (x158 18446744073709551615) (x188 18446744073709551615)))
(assert (= (x275 (x188 115792089237316195417293883273301227089774477609353836086818603170880863338495)) 115792089237316195417293883273301227089774477609353836086818603170880863338495))
(assert (x393 x315 x370))
(assert (= (x188 1157571613) (x158 1157571613)))
(assert (= (x158 115339776388733340411336991150008259455513788125666651270144861215348056129535) (x188 115339776388733340411336991150008259455513788125666651270144861215348056129535)))
(assert (x354 x1))
(assert (x354 x181))
(assert (x300 20282409603651670423947251286015))
(assert (= (x158 3075265556) (x188 3075265556)))
(assert (x354 x139))
(assert (x313 x377 x82 x398 x168))
(assert (x267 x60 x345 x279 x98))
(assert (x354 x272))
(assert (x300 x377))
(assert (= (x188 18446744073709551616) (x158 18446744073709551616)))
(assert (x300 x33))
(assert (x354 x336))
(assert (x354 x299))
(assert (x393 x230 x269))
(assert (x354 x54))
(assert (x300 6277101735386680763835789423207666416102355444464034512895))
(assert (x354 x242))
(assert (x354 x201))
(assert (x405 274184521717934524641157099916833587223))
(assert (= 6277101735386680763835789423207666416102355444464034512896 (x275 (x188 6277101735386680763835789423207666416102355444464034512896))))
(assert (x354 x37))
(assert (x140 x242 x185))
(assert (x300 x32))
(assert (x354 x177))
(assert (x354 x389))
(assert (x354 x276))
(assert (x354 x144))
(assert (x354 x278))
(assert (x354 x232))
(assert (x354 x105))
(assert (x354 x155))
(assert (= 1490534272 (x275 (x188 1490534272))))
(assert (x354 x115))
(assert (= 3122421376 (x275 (x188 3122421376))))
(assert (= 274184521717934524641157099916833587223 (x275 (x188 274184521717934524641157099916833587223))))
(assert (x354 x363))
(assert (x354 x221))
(assert (x354 x307))
(assert (x354 x66))
(assert (x354 x270))
(assert (x354 x137))
(assert (= (ite (and x47 x41 x226) (x341 (x188 1)) (x286 (x188 1))) (x228 (x188 1))))
(assert (= (x158 1461501637330902918203684832716283019655932542975) (x188 1461501637330902918203684832716283019655932542975)))
(assert (= (x188 2867386960) (x158 2867386960)))
(assert (x354 x308))
(assert (= 274184521717934524641157099916833587221 (x275 (x158 274184521717934524641157099916833587221))))
(assert (x354 x203))
(assert (x140 x386 x240))
(assert (x140 x166 x334))
(assert (x354 x162))
(assert (x300 x380))
(assert (= 1000000000000000 (x275 (x188 1000000000000000))))
(assert (x354 x208))
(assert (x354 x125))
(assert (x300 x70))
(assert (= (x158 20282409603651670423947251286016) (x188 20282409603651670423947251286016)))
(assert (x354 x95))
(assert (x393 x32 x72))
(assert (x140 x389 x116))
(assert (x140 x137 x80))
(assert (x300 x208))
(assert (= (x158 1099511627775) (x188 1099511627775)))
(assert (x354 x160))
(assert (= (x188 2879910238) (x158 2879910238)))
(assert (= 840395849 (x275 (x188 840395849))))
(assert (= (x275 (x188 1208925819614629174706175)) 1208925819614629174706175))
(assert (x354 x131))
(assert (x354 x253))
(assert (x354 x92))
(assert (x354 x165))
(assert (= 2834295333 (x275 (x188 2834295333))))
(assert (x140 x33 x141))
(assert (x300 x218))
(assert (= 2531764673 (x275 (x188 2531764673))))
(assert (x354 x94))
(assert (x354 x56))
(assert (= (x188 4033150093) (x158 4033150093)))
(assert (x354 x138))
(assert (x354 x259))
(assert (= 274184521717934524641157099916833587221 (x275 (x188 274184521717934524641157099916833587221))))
(assert (x300 452312848582855012233993858679648397756196539973912769312722792565073510400))
(assert (= (=> (and (= (x342 (x158 274184521717934524641157099916833587211)) x200) (not (= x81 1752364190)) (not (< x81 1490534272)) (not (> 1157571613 x81)) (not (= 1507858365 x81)) (not (= x81 1736444767)) (= (div x233 18446744073709551616) x137) (= x81 2055092157) (> x200 0) (= x233 (x176 (x188 0))) (not (< x81 840395849)) (= x171 x363) (< x81 2059964113) (= x363 (x227 18446744073709551615 x137)) (not (= 1490534272 x81))) (=> (and (= x203 x355) (< 0 x223) (not (> 3122421376 x100)) (= x131 x278) (= x239 (div x210 411376139330301510538742295639337626245683966408394965837152256)) (not (> x155 x355)) (not (> 2059964113 x100)) (<= 0 x61) (= x210 (x176 (x188 1))) (or (and (= (x63 (- 1000000000000000000 x77)) x120) (= x323 (x227 18446744073709551615 x165)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x352 x91)) (= (x227 20282409603651670423947251286015 x70) x261) (= (* x331 x125) x68) (= (x341 (x188 1)) x218) (= (x227 20282409603651670423947251286015 x315) x281) (= x2 (> x122 x394)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x122 x120)) (= (mod (* 18446744073709551616 x84) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x362) (or (and (= 0 x122) x28) (and (not x28) (= x343 (div x151 x250)) (< (* x261 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x261 1000000000000000000) x151) (= x343 x122))) (= x166 (x176 (x188 0))) (= x336 (x176 (x188 1))) (= x165 (div x314 18446744073709551616)) (or (and (= (mod (* 6277101735386680763835789423207666416102355444464034512896 x192) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x92) (> x360 0) (= (div x93 x360) x49) (= (* x274 x384) x93) (= (x227 20282409603651670423947251286015 x32) x360) (= x33 (div x24 6277101735386680763835789423207666416102355444464034512896)) (not (> x49 18446744073709551615)) (= x24 (x228 (x188 0))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x49 x29)) (= (+ x29 x49) x192) (< (* x356 x253) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x192 18446744073709551615) (= x209 (x215 (+ x57 x92))) (= (* x356 x253) x129) (not x67) (= (div x256 20282409603651670423947251286016) x32) (= x348 (x228 (x188 0))) (= x384 x129) (< (* x274 x384) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x227 6277101735386680763835789423207666416102355444464034512895 x348) x57) (= (x227 18446744073709551615 x33) x29) (= x256 (x228 (x188 1)))) x67) (= x232 (x39 (x188 0))) (= (* x58 x323) x148) (= x346 (x227 115792089237316195423570985008687907852929702298719625576012656144555070980095 x232)) (= (x176 (x188 0)) x391) (= (* x120 x122) x312) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x281 x238)) (= (> x246 x303) x47) (= (div x312 1000000000000000000) x351) (= (x176 (x188 0)) x377) (= (x176 (x188 1)) x395) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x216 x121)) (< (* x366 x263) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x84 (+ x177 x293)) (= (div x157 1000000000000000) x247) (= x289 (x228 (x188 1))) x41 (= (div x8 18446744073709551616) x242) (= x326 (* x150 x253)) (= (div x271 1000000000000000) x70) (= (x39 (x188 0)) x94) (= x401 (< x394 x294)) (= x177 (div x148 1000000000000000000)) (= x366 (x227 18446744073709551615 x26)) (= (x227 18446744073709551615 x391) x216) (= x382 (x227 115792089237316195423570985008687907853269984665640564039439137263839420088320 x377)) (< (+ x177 x293) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x340 (+ x91 x352)) (= x307 (x215 (+ x367 x133))) (= (x176 (x188 1)) x104) (= x125 x326) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x173 x112)) (or (and (= x69 x294) (not x113) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x364)) (= x167 (* 1000000000000000000 x364)) (= (div x167 x259) x69)) (and x113 (= x294 0))) (= (x227 18446744073709551615 x242) x173) (= (x227 18446744073709551615 x380) x238) (= x303 (x227 20282409603651670423947251286015 x218)) (= (* x121 x216) x319) (< (* x150 x253) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (or (and (= x270 (+ x114 x1)) (not (> x76 18446744073709551615)) x2 (= x114 (div x280 1000000000000000000)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x308 x302)) (not (< x122 x394)) (= (div x149 1000000000000000000) x266) (= x280 (* x154 x394)) (= (* x351 x10) x20) (= x149 (* x308 x302)) (< (* x351 x10) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x308 (x63 (- x122 x394))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x266 x270)) (= x10 (+ x270 x266)) (= (div x20 1000000000000000000) x76) (= x150 x76) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1 x114)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x154 x394))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1 x225)) (= x172 (div x3 1000000000000000000)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x351 x144)) (not (> x172 18446744073709551615)) (= x79 (* x122 x154)) (= x144 (+ x225 x1)) (= x150 x172) (< (* x122 x154) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x225 (div x79 1000000000000000000)) (not x2) (= x3 (* x144 x351)))) (= x237 (x215 (+ x340 x382))) (= x16 (* x238 x281)) (or (and (= x162 x368) (not (< 18446744073709551615 x162)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1 x272)) (< (* x294 x154) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x371 (* x154 x294)) (not x401) (= (+ x1 x272) x162) (= x272 (div x371 1000000000000000000))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x59 x85)) (= (div x19 1000000000000000000) x85) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x302 x193)) (not (> x394 x294)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1 x333)) (not (> x194 18446744073709551615)) (= x194 (+ x85 x59)) (= (+ x333 x1) x59) (= x301 (* x394 x154)) (= x194 x368) x401 (= (div x301 1000000000000000000) x333) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x154 x394)) (= (* x302 x193) x19) (= (x63 (- x294 x394)) x193))) (= x352 (div x68 1000000000000000000)) (= (x39 (x188 0)) x314) (= (x227 20282409603651670423947251286015 x230) x112) (= x250 (x227 20282409603651670423947251286015 x217)) (= x26 (x176 (x188 0))) (= x380 (div x160 18446744073709551616)) (not (> x352 18446744073709551615)) (= x160 (x176 (x188 0))) (= (x227 115339776388733340411336991150008259455513788125666651270144861215348056129535 x138) x367) (= (< x54 x246) x67) (= x271 (* x112 x173)) (= x28 (= 0 x250)) (<= x84 18446744073709551615) (= (mod (* x355 411376139330301510538742295639337626245683966408394965837152256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x133) (= (x215 (+ x346 x362)) x35) (= x121 (x227 20282409603651670423947251286015 x395)) (= x8 (x176 (x188 0))) (= (x176 (x188 1)) x90) (= x364 (x227 20282409603651670423947251286015 x196)) (= (div x104 20282409603651670423947251286016) x315) (= x196 (div x16 1000000000000000)) (= (div x289 20282409603651670423947251286016) x208) (= (div x319 1000000000000000) x217) (= (* x253 x368) x374) (= x386 (div x94 18446744073709551616)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x368 x253)) (= x54 (x227 20282409603651670423947251286015 x208)) (= (div x336 20282409603651670423947251286016) x230) (= x331 (x227 18446744073709551615 x166)) (>= 18446744073709551615 x340) (not (> x177 18446744073709551615)) (= (x227 18446744073709551615 x389) x91) (= x389 (x176 (x188 0))) (= x113 (= 0 x259)) (= (* x366 x263) x157) (= (x227 18446744073709551615 x386) x293) (< (* x125 x331) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x227 20282409603651670423947251286015 x90) x263) (< (* x323 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x374 x58) (not (< 1000000000000000000 x77)) (= x259 (x227 20282409603651670423947251286015 x247)) (= x138 (x277 (x188 1))) (or (and (= x378 (x215 (+ x9 x407))) (= (div x34 340282366920938463463374607431768211456) x71) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x253 x327)) (= x407 (mod (* x321 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (* x220 x274) x130) (= x11 (x341 (x188 1))) (= x103 (* x253 x327)) (= (x227 20282409603651670423947251286015 x11) x381) (not x47) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x220 x274)) (= (+ x37 x387) x321) (= (div x130 x381) x387) (= x60 (x341 (x188 0))) (= (x341 (x188 0)) x34) (< (+ x37 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x381 0) (not (> x387 18446744073709551615)) (<= x321 18446744073709551615) (= (x227 115792089237316195417293883273301227089774477609353836086818603170880863338495 x60) x9) (= x103 x220) (= (x227 18446744073709551615 x71) x37)) x47)) (not x41)) (= (x342 (x158 274184521717934524641157099916833587211)) x223) (= (< 0 x253) x41) (= 4033150093 x100) (= x115 x171) (= (x227 1099511627775 x66) x253) (not (> 3889878717 x100)) (<= 0 x357) (>= 1461501637330902918203684832716283019655932542975 x278) (<= x357 1461501637330902918203684832716283019655932542975) (= (x227 1099511627775 x239) x155) (not (> 3638949393 x100)) (>= x278 0) (<= x61 1461501637330902918203684832716283019655932542975) (= (x63 (- x355 x155)) x66) (= 0 x235) (< x355 1099511627776) (not (= 3889878717 x100))) x50)) x375))
(assert (= 3638949393 (x275 (x188 3638949393))))
(assert (x354 x29))
(assert (x354 x121))
(assert (x300 115792089237316195423570985008687907853269984665640564039439137263839420088320))
(assert (= (ite (and x226 x47 x41) (x341 (x188 0)) (x286 (x188 0))) (x228 (x188 0))))
(assert (x354 x321))
(assert (= (x158 2531764673) (x188 2531764673)))
(assert (x300 x348))
(assert (x354 x343))
(assert (= 2055092157 (x275 (x188 2055092157))))
(assert (x354 x355))
(assert (x354 x348))
(assert (= (x158 6277101735386680763835789423207666416102355444464034512895) (x188 6277101735386680763835789423207666416102355444464034512895)))
(assert (x140 x181 x170))
(assert (x354 x314))
(assert (x354 x90))
(assert (= 2799315671 (x275 (x188 2799315671))))
(assert (x393 x11 x369))
(assert (x140 x26 x248))
(assert (= (x188 340282366920938463463374607431768211456) (x158 340282366920938463463374607431768211456)))
(assert (= (x188 20282409603651670423947251286015) (x158 20282409603651670423947251286015)))
(assert (x354 x171))
(assert (x354 x407))
(assert (x354 x256))
(assert (x393 x395 x379))
(assert (= (x158 3889878717) (x188 3889878717)))
(assert (x354 x386))
(assert (x354 x209))
(assert (x229 x60 x147 x152 x132))
(assert (x354 x360))
(assert (= (x275 (x188 4033150093)) 4033150093))
(assert (x300 x386))
(assert (x354 x263))
(assert (x354 x15))
(assert (x354 x220))
(assert (x405 274184521717934524641157099916833587221))
(assert (x354 x187))
(assert (= (x158 2834295333) (x188 2834295333)))
(assert (x354 x246))
(assert (= x55 x86))
(assert (= (x188 3122421376) (x158 3122421376)))
(assert (= 115792089237316195423570985008687907853269984665640564039439137263839420088320 (x275 (x188 115792089237316195423570985008687907853269984665640564039439137263839420088320))))
(assert (x300 x239))
(assert (x354 x166))
(assert (x354 x395))
(assert (x354 x223))
(assert (x330 x138 x383 x124 x260))
(assert (x354 x204))
(assert (x393 x247 x21))
(assert (x354 x303))
(assert (x354 x237))
(assert (x354 x339))
(assert (x354 x60))
(assert (x300 x26))
(assert (= x226 x55))
(assert (x140 x391 x295))
(assert (x354 x294))
(assert (x354 x71))
(assert (= (x188 1099511627776) (x158 1099511627776)))
(assert (= (=> (and (= (x342 (x158 274184521717934524641157099916833587211)) x276) (= x190 x53) (not (= x397 1752364190)) (not (= 1507858365 x397)) (= (x227 18446744073709551615 x311) x190) (= x262 (x99 (x188 0))) (= 2055092157 x397) (not (= 1490534272 x397)) (not (= x397 1736444767)) (> x276 0) (< x397 2059964113) (not (> 1490534272 x397)) (not (< x397 840395849)) (= x311 (div x262 18446744073709551616)) (not (> 1157571613 x397))) x285) x102))
(assert (x354 x266))
(assert (x354 x11))
(assert (x354 x377))
(assert (x140 x380 x18))
(assert (= 3075265556 (x275 (x188 3075265556))))
(assert (x354 x217))
(assert (= x226 x329))
(assert (= (x275 (x158 274184521717934524641157099916833587223)) 274184521717934524641157099916833587223))
(assert (x300 x138))
(assert (x354 x233))
(assert (x300 115339776388733340411336991150008259455513788125666651270144861215348056129535))
(assert (x354 x193))
(assert (x354 x331))
(assert (= (x158 1000000000000000000) (x188 1000000000000000000)))
(assert (x354 x32))
(assert (= (x275 (x188 3889878717)) 3889878717))
(assert (x300 x311))
(assert (x354 x381))
(assert (= 274184521717934524641157099916833587211 (x275 (x188 274184521717934524641157099916833587211))))
(assert (x354 x274))
(assert (x354 x182))
(assert (x354 x287))
(assert (= (x275 (x188 20282409603651670423947251286016)) 20282409603651670423947251286016))
(assert (x354 x91))
(assert (not x373))
(assert (= (x158 274184521717934524641157099916833587223) (x188 274184521717934524641157099916833587223)))
(assert (= (x158 1000000000000000) (x188 1000000000000000)))
(assert (x106 x239 x296))
(assert (= (x188 1490534272) (x158 1490534272)))
(assert (x354 x384))
(check-sat)
