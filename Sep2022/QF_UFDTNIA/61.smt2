(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x901 0)) (((x923 (x192 x901) (x1425 x901) (x1313 Int)) (x727 (x588 x901) (x341 Int)) (x1567 (x1207 Int)))))
(declare-fun x723 () Int)
(declare-fun x268 () x901)
(declare-fun x1540 () x901)
(declare-fun x1464 () Bool)
(declare-fun x1392 () x901)
(declare-fun x796 () Bool)
(declare-fun x830 () Int)
(declare-fun x1172 () Bool)
(declare-fun x54 () Int)
(declare-fun x887 () Int)
(declare-fun x1494 () Int)
(declare-fun x1513 () Int)
(declare-fun x882 () Int)
(declare-fun x801 () Bool)
(declare-fun x1112 () Int)
(declare-fun x1292 () Int)
(declare-fun x971 () Int)
(declare-fun x1328 () Int)
(declare-fun x580 () Int)
(declare-fun x320 () Int)
(declare-fun x97 () Bool)
(declare-fun x286 () Int)
(declare-fun x1435 () Int)
(declare-fun x811 () Int)
(declare-fun x652 (x901) Int)
(declare-fun x1331 () Bool)
(declare-fun x1542 () Int)
(declare-fun x1397 () Bool)
(declare-fun x32 () Int)
(declare-fun x1537 () Int)
(declare-fun x1285 () Int)
(declare-fun x1146 () Bool)
(declare-fun x886 () x901)
(declare-fun x1070 () Int)
(declare-fun x599 () x901)
(declare-fun x214 () Bool)
(declare-fun x1236 () Int)
(declare-fun x711 () Int)
(declare-fun x184 () Int)
(declare-fun x1554 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x1325 () x901)
(declare-fun x93 () Int)
(declare-fun x1262 () Int)
(declare-fun x636 () x901)
(declare-fun x498 () x901)
(declare-fun x453 (x901) Int)
(declare-fun x936 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x818 () Bool)
(declare-fun x13 () x901)
(declare-fun x1185 () Int)
(declare-fun x625 () Int)
(declare-fun x475 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x607 () Int)
(declare-fun x668 (Int) x901)
(declare-fun x1571 () x901)
(declare-fun x705 () Int)
(declare-fun x1057 () Int)
(declare-fun x1359 () Int)
(declare-fun x860 () Int)
(declare-fun x933 () Int)
(declare-fun x767 () Bool)
(declare-fun x1000 () Int)
(declare-fun x1367 () x901)
(declare-fun x1100 () Bool)
(declare-fun x81 (x901) Int)
(declare-fun x1181 () Int)
(declare-fun x21 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x1053 () Int)
(declare-fun x439 (Int) Int)
(declare-fun x640 () Bool)
(declare-fun x501 () Int)
(declare-fun x1033 () Int)
(declare-fun x14 () Int)
(declare-fun x139 () Int)
(declare-fun x344 () Int)
(declare-fun x168 () Bool)
(declare-fun x1405 (x901) Int)
(declare-fun x708 () Int)
(declare-fun x484 () Int)
(declare-fun x716 () Bool)
(declare-fun x683 () Int)
(declare-fun x1068 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x737 () Bool)
(declare-fun x740 () Int)
(declare-fun x739 () Bool)
(declare-fun x589 () Int)
(declare-fun x113 () Bool)
(declare-fun x52 () x901)
(declare-fun x1349 () Bool)
(declare-fun x427 () Int)
(declare-fun x462 () Int)
(declare-fun x1298 () Int)
(declare-fun x1318 () x901)
(declare-fun x1253 () Int)
(declare-fun x1283 () Bool)
(declare-fun x1086 () Int)
(declare-fun x554 () Int)
(declare-fun x85 () Int)
(declare-fun x1129 () Int)
(declare-fun x1223 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x1287 () Int)
(declare-fun x183 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x355 () Int)
(declare-fun x688 () Bool)
(declare-fun x1558 () Bool)
(declare-fun x735 () x901)
(declare-fun x412 () x901)
(declare-fun x1140 () Int)
(declare-fun x163 () Int)
(declare-fun x1117 () x901)
(declare-fun x862 () x901)
(declare-fun x670 () Int)
(declare-fun x814 () Bool)
(declare-fun x553 () x901)
(declare-fun x1281 () x901)
(declare-fun x729 () Int)
(declare-fun x799 () x901)
(declare-fun x1159 () Int)
(declare-fun x1423 () Int)
(declare-fun x397 () Int)
(declare-fun x1543 () Int)
(declare-fun x365 () Int)
(declare-fun x746 () Bool)
(declare-fun x363 () Int)
(declare-fun x1402 () Int)
(declare-fun x508 () Bool)
(declare-fun x766 () Int)
(declare-fun x764 () Int)
(declare-fun x856 (Int) Int)
(declare-fun x1373 () Int)
(declare-fun x743 () Bool)
(declare-fun x781 () Int)
(declare-fun x902 () Bool)
(declare-fun x1335 () Int)
(declare-fun x1196 () Bool)
(declare-fun x809 () Int)
(declare-fun x992 () Bool)
(declare-fun x58 () Int)
(declare-fun x362 () Bool)
(declare-fun x1274 () x901)
(declare-fun x522 () Int)
(declare-fun x540 () Int)
(declare-fun x1354 () Bool)
(declare-fun x310 () Bool)
(declare-fun x447 () Bool)
(declare-fun x4 () Int)
(declare-fun x261 () x901)
(declare-fun x1184 (Int) Int)
(declare-fun x1125 () Int)
(declare-fun x87 () Int)
(declare-fun x340 () Int)
(declare-fun x1294 () Bool)
(declare-fun x623 () Bool)
(declare-fun x321 () Bool)
(declare-fun x377 (Int) Int)
(declare-fun x835 () Bool)
(declare-fun x302 () Int)
(declare-fun x1059 (Int) Int)
(declare-fun x975 () Int)
(declare-fun x1548 () x901)
(declare-fun x1233 () Int)
(declare-fun x1027 () Int)
(declare-fun x752 () Bool)
(declare-fun x359 () Bool)
(declare-fun x1460 () Int)
(declare-fun x283 () Int)
(declare-fun x398 () Int)
(declare-fun x1515 () Bool)
(declare-fun x336 () Bool)
(declare-fun x446 () Int)
(declare-fun x1098 () Int)
(declare-fun x709 () Bool)
(declare-fun x494 () Bool)
(declare-fun x1040 () Int)
(declare-fun x255 () Bool)
(declare-fun x1352 () Int)
(declare-fun x654 () Bool)
(declare-fun x1137 () Int)
(declare-fun x1014 () Bool)
(declare-fun x1126 () Int)
(declare-fun x186 () Int)
(declare-fun x1531 () Bool)
(declare-fun x757 () Int)
(declare-fun x617 () Int)
(declare-fun x1147 () Bool)
(declare-fun x810 () Bool)
(declare-fun x972 () Int)
(declare-fun x893 () Int)
(declare-fun x1372 () Bool)
(declare-fun x1105 () x901)
(declare-fun x921 () x901)
(declare-fun x1507 () Int)
(declare-fun x621 () Int)
(declare-fun x221 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x1430 () x901)
(declare-fun x1045 () Int)
(declare-fun x1497 () Bool)
(declare-fun x1213 () Int)
(declare-fun x1149 () Int)
(declare-fun x34 () Int)
(declare-fun x957 () Bool)
(declare-fun x461 () x901)
(declare-fun x109 () Int)
(declare-fun x466 () Int)
(declare-fun x1252 () Int)
(declare-fun x440 () Int)
(declare-fun x499 () Bool)
(declare-fun x212 () Int)
(declare-fun x103 () Int)
(declare-fun x342 () Bool)
(declare-fun x428 () Int)
(declare-fun x630 () Bool)
(declare-fun x797 () Int)
(declare-fun x573 () Int)
(declare-fun x976 () Int)
(declare-fun x1160 () Int)
(declare-fun x1224 () Int)
(declare-fun x41 () Bool)
(declare-fun x578 () Int)
(declare-fun x1535 () Bool)
(declare-fun x1258 () Int)
(declare-fun x985 () Bool)
(declare-fun x1210 () Int)
(declare-fun x993 () Bool)
(declare-fun x380 () Int)
(declare-fun x125 () Int)
(declare-fun x1562 () Int)
(declare-fun x854 () Int)
(declare-fun x520 () Bool)
(declare-fun x783 () Int)
(declare-fun x909 () Bool)
(declare-fun x1356 () Int)
(declare-fun x1017 () Int)
(declare-fun x1247 () x901)
(declare-fun x351 () Bool)
(declare-fun x401 () Int)
(declare-fun x1151 () Int)
(declare-fun x1514 () Int)
(declare-fun x550 () Bool)
(declare-fun x1454 () Int)
(declare-fun x1408 () Int)
(declare-fun x560 () Int)
(declare-fun x1130 (x901) Int)
(declare-fun x1228 () Bool)
(declare-fun x1019 () x901)
(declare-fun x1277 () Int)
(declare-fun x1013 () x901)
(declare-fun x1212 (x901) Int)
(declare-fun x383 () Int)
(declare-fun x1444 () x901)
(declare-fun x891 () Int)
(declare-fun x1477 () Int)
(declare-fun x792 () Bool)
(declare-fun x430 () Int)
(declare-fun x1417 () Int)
(declare-fun x658 () Int)
(declare-fun x233 () Int)
(declare-fun x789 (Int) Int)
(declare-fun x470 () x901)
(declare-fun x323 () Int)
(declare-fun x117 () x901)
(declare-fun x712 () Int)
(declare-fun x1300 () Int)
(declare-fun x27 () Int)
(declare-fun x181 () Bool)
(declare-fun x1276 () Int)
(declare-fun x400 () Int)
(declare-fun x609 () Int)
(declare-fun x1073 () Int)
(declare-fun x598 () Bool)
(declare-fun x1487 () Int)
(declare-fun x1034 () x901)
(declare-fun x563 () Bool)
(declare-fun x312 () Bool)
(declare-fun x569 () Int)
(declare-fun x1485 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x583 () Bool)
(declare-fun x619 () Bool)
(declare-fun x191 () x901)
(declare-fun x948 () Int)
(declare-fun x1018 () Int)
(declare-fun x1492 () Bool)
(declare-fun x1470 () Int)
(declare-fun x785 () Int)
(declare-fun x1150 () Bool)
(declare-fun x770 () Bool)
(declare-fun x1447 () Int)
(declare-fun x828 () Int)
(declare-fun x9 () Bool)
(declare-fun x1171 () Int)
(declare-fun x1458 () Int)
(declare-fun x1237 () Int)
(declare-fun x871 () Int)
(declare-fun x1307 () Int)
(declare-fun x386 () Int)
(declare-fun x345 () Int)
(declare-fun x1362 () Bool)
(declare-fun x628 () Bool)
(declare-fun x1475 () Int)
(declare-fun x771 () Bool)
(declare-fun x293 () Bool)
(declare-fun x331 () Bool)
(declare-fun x1006 () Bool)
(declare-fun x795 () Int)
(declare-fun x507 () Int)
(declare-fun x178 () Int)
(declare-fun x348 () x901)
(declare-fun x1192 () Bool)
(declare-fun x960 () Bool)
(declare-fun x1065 () Int)
(declare-fun x1368 () Bool)
(declare-fun x200 () Int)
(declare-fun x885 () Bool)
(declare-fun x732 () Int)
(declare-fun x661 () Int)
(declare-fun x552 () Bool)
(declare-fun x1138 () Int)
(declare-fun x1012 () x901)
(declare-fun x63 () Int)
(declare-fun x1225 () x901)
(declare-fun x1188 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x1242 () Int)
(declare-fun x533 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x1544 () Int)
(declare-fun x210 () x901)
(declare-fun x60 () Int)
(declare-fun x45 () x901)
(declare-fun x1080 () x901)
(declare-fun x335 () Bool)
(declare-fun x226 () Int)
(declare-fun x211 (Int) Int)
(declare-fun x486 () Int)
(declare-fun x850 () Int)
(declare-fun x435 () Bool)
(declare-fun x1432 () Int)
(declare-fun x1239 () Bool)
(declare-fun x1089 () x901)
(declare-fun x44 () Int)
(declare-fun x915 () Int)
(declare-fun x1478 () Int)
(declare-fun x852 () Int)
(declare-fun x305 () Bool)
(declare-fun x1472 () Int)
(declare-fun x1182 () Int)
(declare-fun x313 () Int)
(declare-fun x102 () Int)
(declare-fun x791 () x901)
(declare-fun x483 () Bool)
(declare-fun x40 () x901)
(declare-fun x442 () Int)
(declare-fun x851 () x901)
(declare-fun x1075 () Bool)
(declare-fun x111 () Int)
(declare-fun x311 () Int)
(declare-fun x1403 () x901)
(declare-fun x839 () Int)
(declare-fun x329 () Int)
(declare-fun x1504 () Int)
(declare-fun x1241 () Bool)
(declare-fun x648 () Bool)
(declare-fun x720 () Bool)
(declare-fun x425 () Bool)
(declare-fun x945 () x901)
(declare-fun x736 () x901)
(declare-fun x1360 () Bool)
(declare-fun x436 () Int)
(declare-fun x56 (x901) Int)
(declare-fun x1209 () Int)
(declare-fun x775 () Bool)
(declare-fun x980 () Bool)
(declare-fun x502 () Int)
(declare-fun x1358 () Bool)
(declare-fun x68 () Int)
(declare-fun x1467 () Int)
(declare-fun x1378 () x901)
(declare-fun x421 () Int)
(declare-fun x1154 () Int)
(declare-fun x51 () Bool)
(declare-fun x378 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x205 () Bool)
(declare-fun x966 () Bool)
(declare-fun x544 () x901)
(declare-fun x1441 () Bool)
(declare-fun x1489 () x901)
(declare-fun x1204 () Bool)
(declare-fun x171 () Int)
(declare-fun x744 () Int)
(declare-fun x955 () x901)
(declare-fun x653 () Int)
(declare-fun x152 () Int)
(declare-fun x1190 () Bool)
(declare-fun x1340 () Int)
(declare-fun x1517 () x901)
(declare-fun x647 () Bool)
(declare-fun x1437 () x901)
(declare-fun x820 () x901)
(declare-fun x8 () x901)
(declare-fun x306 () Bool)
(declare-fun x542 () Bool)
(declare-fun x725 () Bool)
(declare-fun x265 () Int)
(declare-fun x314 () Bool)
(declare-fun x1143 () Int)
(declare-fun x524 () Int)
(declare-fun x1427 () Int)
(declare-fun x1509 () x901)
(declare-fun x1566 () x901)
(declare-fun x203 () Bool)
(declare-fun x951 () Int)
(declare-fun x868 () x901)
(declare-fun x620 () Int)
(declare-fun x1128 () x901)
(declare-fun x570 () Int)
(declare-fun x368 () Int)
(declare-fun x927 () Int)
(declare-fun x108 () Int)
(declare-fun x964 () Int)
(declare-fun x910 () Int)
(declare-fun x1486 () Int)
(declare-fun x1220 () Int)
(declare-fun x1415 () Int)
(declare-fun x1465 () Int)
(declare-fun x584 () Bool)
(declare-fun x778 () Int)
(declare-fun x155 (x901) Int)
(declare-fun x1222 () Bool)
(declare-fun x565 () Bool)
(declare-fun x395 () Bool)
(declare-fun x707 () Int)
(declare-fun x1388 () Int)
(declare-fun x1291 (Int) Int)
(declare-fun x83 () Int)
(declare-fun x1508 () Int)
(declare-fun x963 () Bool)
(declare-fun x278 () Int)
(declare-fun x474 () Bool)
(declare-fun x243 () Int)
(declare-fun x947 () Int)
(declare-fun x1363 () Bool)
(declare-fun x309 () Int)
(declare-fun x1552 () Int)
(declare-fun x173 () Int)
(declare-fun x747 () Int)
(declare-fun x1315 () Bool)
(declare-fun x256 () Int)
(declare-fun x1254 () Int)
(declare-fun x900 () Bool)
(declare-fun x130 () Int)
(declare-fun x150 () Int)
(declare-fun x870 () Int)
(declare-fun x253 () Int)
(declare-fun x719 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x650 () Bool)
(declare-fun x337 () Int)
(declare-fun x521 () Int)
(declare-fun x402 () Bool)
(declare-fun x1081 () x901)
(declare-fun x1084 () Bool)
(declare-fun x1357 () Int)
(declare-fun x1413 () Int)
(declare-fun x881 () Int)
(declare-fun x333 () Bool)
(declare-fun x78 () Int)
(declare-fun x1193 () Bool)
(declare-fun x1176 (Int) Int)
(declare-fun x1555 () Bool)
(declare-fun x285 () Int)
(declare-fun x46 () Bool)
(declare-fun x632 () Int)
(declare-fun x685 () Int)
(declare-fun x1173 () Int)
(declare-fun x162 (Int) Int)
(declare-fun x391 () Int)
(declare-fun x480 () Bool)
(declare-fun x610 () Int)
(declare-fun x815 () Int)
(declare-fun x745 () Bool)
(declare-fun x120 () Int)
(declare-fun x1446 (Int) Int)
(declare-fun x1411 () Int)
(declare-fun x1422 () Int)
(declare-fun x977 () x901)
(declare-fun x488 () Bool)
(declare-fun x1064 () Int)
(declare-fun x24 () Int)
(declare-fun x225 () Int)
(declare-fun x1496 () Int)
(declare-fun x176 () Int)
(declare-fun x180 () Int)
(declare-fun x760 () x901)
(declare-fun x1351 () Bool)
(declare-fun x1178 () x901)
(declare-fun x193 () x901)
(declare-fun x1282 () Bool)
(declare-fun x468 () Int)
(declare-fun x1268 () Int)
(declare-fun x215 () Int)
(declare-fun x31 () Bool)
(declare-fun x407 () Int)
(declare-fun x1545 () Int)
(declare-fun x326 () Bool)
(declare-fun x381 () x901)
(declare-fun x1522 () Int)
(declare-fun x1269 () Bool)
(declare-fun x596 () Bool)
(declare-fun x693 () Int)
(declare-fun x1556 () Bool)
(declare-fun x1563 () Int)
(declare-fun x420 () Int)
(declare-fun x228 () Int)
(declare-fun x940 () Int)
(declare-fun x297 () Int)
(declare-fun x913 () Bool)
(declare-fun x635 () x901)
(declare-fun x547 () x901)
(declare-fun x288 () Int)
(declare-fun x325 () Int)
(declare-fun x26 () x901)
(declare-fun x464 () Bool)
(declare-fun x1539 () Int)
(declare-fun x135 () Int)
(declare-fun x89 () Bool)
(declare-fun x1042 () Int)
(declare-fun x209 () Int)
(declare-fun x1320 () Int)
(declare-fun x877 () Int)
(declare-fun x101 () Int)
(declare-fun x545 () Int)
(declare-fun x840 () Int)
(declare-fun x431 () Int)
(declare-fun x1516 () Bool)
(declare-fun x1312 () Int)
(declare-fun x756 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x1133 (x901) Int)
(declare-fun x986 () Bool)
(declare-fun x644 () x901)
(declare-fun x160 () Bool)
(declare-fun x42 () Int)
(declare-fun x1050 () x901)
(declare-fun x1 () x901)
(declare-fun x633 () Bool)
(declare-fun x866 () Bool)
(declare-fun x888 () Bool)
(declare-fun x624 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x316 () Int)
(declare-fun x1319 () x901)
(declare-fun x938 () Int)
(declare-fun x686 () Bool)
(declare-fun x28 () Bool)
(declare-fun x1479 () Int)
(declare-fun x1308 () x901)
(declare-fun x1142 (Int) Int)
(declare-fun x649 () Int)
(declare-fun x424 () Int)
(declare-fun x131 () Bool)
(declare-fun x450 () Bool)
(declare-fun x1263 () Int)
(declare-fun x217 () Int)
(declare-fun x476 () Bool)
(declare-fun x1407 (Int Int) Int)
(declare-fun x422 () Int)
(declare-fun x267 () Bool)
(declare-fun x1505 () Bool)
(declare-fun x1249 () Int)
(declare-fun x199 () x901)
(declare-fun x137 () x901)
(declare-fun x1060 () x901)
(declare-fun x1091 () Bool)
(declare-fun x1106 () Int)
(declare-fun x1332 () Bool)
(declare-fun x562 () x901)
(declare-fun x346 () Int)
(declare-fun x655 () Int)
(declare-fun x213 () x901)
(declare-fun x357 () Int)
(declare-fun x538 () Bool)
(declare-fun x426 () Int)
(declare-fun x308 () Int)
(declare-fun x700 () Bool)
(declare-fun x944 () Int)
(declare-fun x1240 () x901)
(declare-fun x1375 () Bool)
(declare-fun x123 () Bool)
(declare-fun x751 (x901) Int)
(declare-fun x1076 () Int)
(declare-fun x704 () Int)
(declare-fun x479 () Int)
(declare-fun x879 () Bool)
(declare-fun x678 () Bool)
(declare-fun x294 () x901)
(declare-fun x549 () Int)
(declare-fun x343 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x572 () Int)
(declare-fun x219 () x901)
(declare-fun x1463 () x901)
(declare-fun x676 () x901)
(declare-fun x477 () Bool)
(declare-fun x748 () Bool)
(declare-fun x755 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x942 () Int)
(declare-fun x10 () Bool)
(declare-fun x754 () Bool)
(declare-fun x258 () Bool)
(declare-fun x1381 () Int)
(declare-fun x303 () x901)
(declare-fun x1164 () Int)
(declare-fun x481 () Bool)
(declare-fun x989 () Int)
(declare-fun x845 () Int)
(declare-fun x132 () Bool)
(declare-fun x1549 () x901)
(declare-fun x1219 () Int)
(declare-fun x703 () Bool)
(declare-fun x1119 () Int)
(declare-fun x561 () Int)
(declare-fun x1026 () x901)
(declare-fun x541 () Int)
(declare-fun x414 () Bool)
(declare-fun x1251 () Int)
(declare-fun x1451 () Bool)
(declare-fun x330 () Int)
(declare-fun x1391 () Int)
(declare-fun x1526 () Bool)
(declare-fun x821 () Int)
(declare-fun x300 () x901)
(declare-fun x916 () Int)
(declare-fun x497 () Bool)
(declare-fun x452 () x901)
(declare-fun x1275 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x534 () Int)
(declare-fun x379 () Int)
(declare-fun x157 () Int)
(declare-fun x185 () Bool)
(declare-fun x1202 () x901)
(declare-fun x6 () Bool)
(declare-fun x590 () Int)
(declare-fun x721 () Int)
(declare-fun x247 () Bool)
(declare-fun x1502 () Int)
(declare-fun x404 () Bool)
(declare-fun x65 () Bool)
(declare-fun x1090 () x901)
(declare-fun x277 () Int)
(declare-fun x1161 () Bool)
(declare-fun x1039 () Int)
(declare-fun x473 () Int)
(declare-fun x722 () x901)
(declare-fun x1259 () Int)
(declare-fun x1324 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x855 () x901)
(declare-fun x681 () Bool)
(declare-fun x166 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x824 () Bool)
(declare-fun x1385 () Int)
(declare-fun x890 () x901)
(declare-fun x608 () Int)
(declare-fun x1512 () Bool)
(declare-fun x922 () Int)
(declare-fun x696 () Int)
(declare-fun x158 () x901)
(declare-fun x962 () Int)
(declare-fun x16 () Bool)
(declare-fun x1261 () Int)
(declare-fun x574 () Int)
(declare-fun x1569 (Int) Int)
(declare-fun x1499 () Int)
(declare-fun x995 () x901)
(declare-fun x1468 () x901)
(declare-fun x1054 () Bool)
(declare-fun x281 () Int)
(declare-fun x1550 () Int)
(declare-fun x1369 () x901)
(declare-fun x772 () Int)
(declare-fun x490 () Int)
(declare-fun x844 (Int) Int)
(declare-fun x1265 () Int)
(declare-fun x1456 () Bool)
(declare-fun x526 () Bool)
(declare-fun x823 () Bool)
(declare-fun x423 () Int)
(declare-fun x257 () Int)
(declare-fun x1187 () Bool)
(declare-fun x1024 (x901) Int)
(declare-fun x1104 () Bool)
(declare-fun x1449 () Int)
(declare-fun x622 () Bool)
(declare-fun x1005 () x901)
(declare-fun x642 () Int)
(declare-fun x1547 () Bool)
(declare-fun x48 () x901)
(declare-fun x794 () Int)
(declare-fun x1376 (Int) Int)
(declare-fun x1330 () Int)
(declare-fun x140 () Int)
(declare-fun x1211 () Bool)
(declare-fun x582 () Int)
(declare-fun x1082 () x901)
(declare-fun x1004 () Int)
(declare-fun x843 (x901) Int)
(declare-fun x983 () Int)
(declare-fun x1110 () Bool)
(declare-fun x290 () Int)
(declare-fun x898 (x901) Int)
(declare-fun x1038 (x901) Int)
(declare-fun x237 () Int)
(declare-fun x813 () Bool)
(declare-fun x2 () Int)
(declare-fun x1306 () Int)
(declare-fun x172 () Int)
(declare-fun x129 () Int)
(declare-fun x504 () Int)
(declare-fun x825 () Bool)
(declare-fun x998 () x901)
(declare-fun x863 () x901)
(declare-fun x806 () Int)
(declare-fun x1063 () x901)
(declare-fun x195 () Int)
(declare-fun x849 (x901) Int)
(declare-fun x1099 () Int)
(declare-fun x646 () x901)
(declare-fun x1339 () Int)
(declare-fun x49 () Int)
(declare-fun x1309 (x901) Int)
(declare-fun x950 () x901)
(declare-fun x979 () Bool)
(declare-fun x687 () Int)
(declare-fun x904 () Bool)
(declare-fun x57 () Int)
(declare-fun x816 () Int)
(declare-fun x1037 () Int)
(declare-fun x366 (x901) Int)
(declare-fun x990 () x901)
(declare-fun x487 () Bool)
(declare-fun x272 () Bool)
(declare-fun x543 () Int)
(declare-fun x350 () Int)
(declare-fun x235 () Int)
(declare-fun x242 () Bool)
(declare-fun x829 () Int)
(declare-fun x1028 () Bool)
(declare-fun x1177 () Int)
(declare-fun x800 () x901)
(declare-fun x669 () Int)
(declare-fun x894 () x901)
(declare-fun x174 () x901)
(declare-fun x118 () Int)
(declare-fun x90 () Bool)
(declare-fun x138 () x901)
(declare-fun x408 () Bool)
(declare-fun x1067 () x901)
(declare-fun x37 () x901)
(declare-fun x1141 () Int)
(declare-fun x1216 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1473 () x901)
(declare-fun x897 () Int)
(declare-fun x1429 () Int)
(declare-fun x1387 () Int)
(declare-fun x220 () Bool)
(declare-fun x899 () Bool)
(declare-fun x699 () Bool)
(declare-fun x1156 () Int)
(declare-fun x1023 () Bool)
(declare-fun x749 () Int)
(declare-fun x145 () x901)
(declare-fun x165 () x901)
(declare-fun x299 () x901)
(declare-fun x595 () Bool)
(declare-fun x1131 () Int)
(declare-fun x961 () Int)
(declare-fun x133 () Int)
(declare-fun x717 () Int)
(declare-fun x238 () Int)
(declare-fun x532 () Bool)
(declare-fun x953 () Int)
(declare-fun x1066 () Bool)
(declare-fun x643 () Int)
(declare-fun x472 () x901)
(declare-fun x77 () Bool)
(declare-fun x613 () Int)
(declare-fun x1520 () Int)
(declare-fun x1440 () Bool)
(declare-fun x224 () Int)
(declare-fun x339 () Bool)
(declare-fun x848 () x901)
(declare-fun x946 () x901)
(declare-fun x244 () Bool)
(declare-fun x53 () Bool)
(declare-fun x409 () Int)
(declare-fun x1174 () Bool)
(declare-fun x932 () Bool)
(declare-fun x523 () Int)
(declare-fun x1488 () Int)
(declare-fun x23 () Int)
(declare-fun x177 () x901)
(declare-fun x896 () Int)
(declare-fun x413 () Int)
(declare-fun x1433 () Int)
(declare-fun x382 () Int)
(declare-fun x1085 () Int)
(declare-fun x914 () Bool)
(declare-fun x1048 () x901)
(declare-fun x1353 () x901)
(declare-fun x17 () Bool)
(declare-fun x836 () x901)
(declare-fun x456 () Int)
(declare-fun x1270 () Bool)
(declare-fun x660 () x901)
(declare-fun x187 () Int)
(declare-fun x690 () x901)
(declare-fun x455 () Bool)
(declare-fun x1257 (x901) Int)
(declare-fun x1078 () Int)
(declare-fun x1218 () Bool)
(declare-fun x988 () Bool)
(declare-fun x189 () x901)
(declare-fun x347 () Bool)
(declare-fun x356 (Int) Int)
(declare-fun x1135 () x901)
(declare-fun x667 () Int)
(declare-fun x928 () x901)
(declare-fun x999 () Int)
(declare-fun x1334 () x901)
(declare-fun x465 () Int)
(declare-fun x438 () Int)
(declare-fun x146 () Bool)
(declare-fun x318 () x901)
(declare-fun x656 () Int)
(declare-fun x218 () Int)
(declare-fun x1077 () Int)
(declare-fun x1471 () Bool)
(declare-fun x726 () x901)
(declare-fun x1113 () Int)
(declare-fun x241 () Bool)
(declare-fun x338 () Int)
(declare-fun x954 () Bool)
(declare-fun x837 () Bool)
(declare-fun x530 () Bool)
(declare-fun x1010 () x901)
(declare-fun x1155 () Int)
(declare-fun x958 () Int)
(declare-fun x1072 () Int)
(declare-fun x1256 () Int)
(declare-fun x296 () Int)
(declare-fun x249 () Int)
(declare-fun x1046 () Int)
(declare-fun x638 () Int)
(declare-fun x861 () Int)
(declare-fun x535 () Int)
(declare-fun x1244 () Int)
(declare-fun x1343 () Bool)
(declare-fun x1266 () Int)
(declare-fun x1500 () Int)
(declare-fun x605 () Int)
(declare-fun x689 () x901)
(declare-fun x469 () Int)
(declare-fun x865 () Int)
(declare-fun x1183 () x901)
(declare-fun x1166 () x901)
(declare-fun x375 () x901)
(declare-fun x1293 () Int)
(declare-fun x1290 () Bool)
(declare-fun x1148 () Int)
(declare-fun x788 () Int)
(declare-fun x1530 () Bool)
(declare-fun x1245 () Int)
(declare-fun x838 () x901)
(declare-fun x79 () Bool)
(declare-fun x1348 (Int) Int)
(declare-fun x1561 () Int)
(declare-fun x1326 () Int)
(declare-fun x1248 () Bool)
(declare-fun x779 () x901)
(declare-fun x154 () x901)
(declare-fun x1136 (Int) Int)
(declare-fun x867 () Int)
(declare-fun x1092 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x1546 () x901)
(declare-fun x295 () Int)
(declare-fun x912 () Bool)
(declare-fun x728 () x901)
(declare-fun x405 () Int)
(declare-fun x251 () Bool)
(declare-fun x1412 () x901)
(declare-fun x25 () Int)
(declare-fun x787 () Int)
(declare-fun x1396 () Bool)
(declare-fun x434 () Int)
(declare-fun x551 () Int)
(declare-fun x641 () Bool)
(declare-fun x1214 () Int)
(declare-fun x1480 () Int)
(declare-fun x1399 () Bool)
(declare-fun x859 () Bool)
(declare-fun x246 () Bool)
(declare-fun x80 () Int)
(declare-fun x1087 () Bool)
(declare-fun x194 () x901)
(declare-fun x1483 () Bool)
(declare-fun x706 () x901)
(declare-fun x759 () Int)
(declare-fun x1230 () Bool)
(declare-fun x284 () Int)
(declare-fun x1366 () Bool)
(declare-fun x659 () Int)
(declare-fun x1107 () x901)
(declare-fun x443 () x901)
(declare-fun x576 () Int)
(declare-fun x637 () Bool)
(declare-fun x925 () Int)
(declare-fun x230 () Int)
(declare-fun x1344 () Int)
(declare-fun x1401 () Int)
(declare-fun x271 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x1452 () x901)
(declare-fun x510 () Bool)
(declare-fun x803 () Int)
(declare-fun x1088 () x901)
(declare-fun x1134 (Int) Int)
(declare-fun x943 () Bool)
(declare-fun x201 () Int)
(declare-fun x1158 () Bool)
(declare-fun x115 () Bool)
(declare-fun x1069 () Int)
(declare-fun x1529 () Int)
(declare-fun x392 () Int)
(declare-fun x1394 () Bool)
(declare-fun x1406 () x901)
(declare-fun x61 () Bool)
(declare-fun x875 () Int)
(declare-fun x1355 () Bool)
(declare-fun x280 () Bool)
(declare-fun x50 () Bool)
(declare-fun x984 () Int)
(declare-fun x458 () x901)
(declare-fun x1327 () Int)
(declare-fun x941 () Int)
(declare-fun x1382 () x901)
(declare-fun x949 () Int)
(declare-fun x1304 () Bool)
(declare-fun x601 () Bool)
(declare-fun x353 () x901)
(declare-fun x577 () Int)
(declare-fun x482 () x901)
(declare-fun x1197 () Bool)
(declare-fun x1029 () x901)
(declare-fun x1329 () Int)
(declare-fun x127 () Bool)
(declare-fun x1217 () Int)
(declare-fun x874 () Int)
(declare-fun x939 (Int) Int)
(declare-fun x514 () Int)
(declare-fun x216 () Int)
(declare-fun x1570 () Bool)
(declare-fun x449 () Bool)
(declare-fun x1453 () Int)
(declare-fun x1096 () x901)
(declare-fun x1167 () Int)
(declare-fun x516 () Int)
(declare-fun x738 () Int)
(declare-fun x926 () Int)
(declare-fun x911 () Bool)
(declare-fun x110 () Int)
(declare-fun x1493 () Int)
(declare-fun x1289 () x901)
(declare-fun x627 () Int)
(declare-fun x987 () x901)
(declare-fun x606 () Bool)
(declare-fun x1278 () x901)
(declare-fun x307 () Int)
(declare-fun x509 () Int)
(declare-fun x1337 () Bool)
(declare-fun x388 () Bool)
(declare-fun x275 () Bool)
(declare-fun x188 () x901)
(declare-fun x492 () Int)
(declare-fun x1434 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x684 () Int)
(declare-fun x529 () Int)
(declare-fun x629 () Int)
(declare-fun x827 () Int)
(declare-fun x765 () Int)
(declare-fun x106 () Bool)
(declare-fun x1056 () Int)
(declare-fun x35 () Int)
(declare-fun x724 () x901)
(declare-fun x1390 () Int)
(declare-fun x1016 () Int)
(declare-fun x3 () x901)
(declare-fun x415 () Bool)
(declare-fun x196 () Int)
(declare-fun x1418 () Int)
(declare-fun x1523 () Int)
(declare-fun x1445 () x901)
(declare-fun x1428 () Int)
(declare-fun x254 () Bool)
(declare-fun x833 () Bool)
(declare-fun x1124 () Int)
(declare-fun x857 () Int)
(declare-fun x1442 () Int)
(declare-fun x758 () Int)
(declare-fun x1398 () Int)
(declare-fun x1272 () Bool)
(declare-fun x671 () Bool)
(declare-fun x1491 () Int)
(declare-fun x527 () x901)
(declare-fun x873 () x901)
(declare-fun x768 () Bool)
(declare-fun x88 () x901)
(declare-fun x917 () Bool)
(declare-fun x315 () Bool)
(declare-fun x1469 () Int)
(declare-fun x575 () Bool)
(declare-fun x1123 () Int)
(declare-fun x289 () Int)
(declare-fun x74 () Int)
(declare-fun x287 () x901)
(declare-fun x1527 () Int)
(declare-fun x1194 () Int)
(declare-fun x495 () Int)
(declare-fun x33 () x901)
(declare-fun x437 () Int)
(declare-fun x970 () Int)
(declare-fun x82 () Int)
(declare-fun x1311 () Bool)
(declare-fun x973 () Int)
(declare-fun x496 () Bool)
(declare-fun x1482 () Int)
(declare-fun x291 (x901) Int)
(declare-fun x777 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x485 () Int)
(declare-fun x141 () x901)
(declare-fun x107 () Bool)
(declare-fun x908 () Bool)
(declare-fun x864 () Int)
(declare-fun x15 () Bool)
(declare-fun x418 () Int)
(declare-fun x156 () Bool)
(declare-fun x206 () Int)
(declare-fun x70 () Int)
(declare-fun x869 () Bool)
(declare-fun x1393 () Int)
(declare-fun x600 () Int)
(declare-fun x159 () x901)
(declare-fun x834 () Int)
(declare-fun x805 () Int)
(declare-fun x12 () Int)
(declare-fun x394 () Int)
(declare-fun x645 () Int)
(declare-fun x776 () Int)
(declare-fun x1528 () Int)
(declare-fun x352 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x75 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x934 () Bool)
(declare-fun x36 () Int)
(declare-fun x558 () Bool)
(declare-fun x390 () Int)
(declare-fun x112 () Bool)
(declare-fun x274 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x611 () Int)
(declare-fun x1322 () x901)
(declare-fun x697 () Bool)
(declare-fun x528 () Int)
(declare-fun x505 () Int)
(declare-fun x250 () Int)
(declare-fun x304 () Bool)
(declare-fun x372 () Bool)
(declare-fun x593 () Bool)
(declare-fun x124 () Bool)
(declare-fun x204 () Bool)
(declare-fun x105 () Int)
(declare-fun x616 () Bool)
(declare-fun x1001 () Int)
(declare-fun x47 () x901)
(declare-fun x1466 () Bool)
(declare-fun x807 () Int)
(declare-fun x997 () Int)
(declare-fun x279 () Bool)
(declare-fun x457 () Bool)
(declare-fun x878 () Int)
(declare-fun x1400 () Bool)
(declare-fun x1115 () Int)
(declare-fun x64 () Int)
(declare-fun x1301 () Int)
(declare-fun x1111 () x901)
(declare-fun x182 () Bool)
(declare-fun x416 () Int)
(declare-fun x349 (x901) Int)
(declare-fun x149 () Int)
(declare-fun x1316 () Int)
(declare-fun x38 () Int)
(declare-fun x1121 () Bool)
(declare-fun x651 () Int)
(declare-fun x30 () Bool)
(declare-fun x1145 () x901)
(declare-fun x994 () Int)
(declare-fun x1345 () Int)
(declare-fun x876 () Int)
(declare-fun x328 () Bool)
(declare-fun x489 () Bool)
(declare-fun x604 () Bool)
(declare-fun x548 () Int)
(declare-fun x153 () Int)
(declare-fun x537 () Int)
(declare-fun x614 () Int)
(declare-fun x906 () x901)
(declare-fun x1286 () Int)
(declare-fun x564 () Int)
(declare-fun x798 () Int)
(declare-fun x663 () Bool)
(declare-fun x364 () Bool)
(declare-fun x1426 () x901)
(declare-fun x169 () Bool)
(declare-fun x1044 () Int)
(declare-fun x327 () Int)
(declare-fun x556 () Int)
(declare-fun x503 () Bool)
(declare-fun x231 () Int)
(declare-fun x1191 (x901) Int)
(declare-fun x1041 () Int)
(declare-fun x1288 () Int)
(declare-fun x1321 () Int)
(declare-fun x793 () x901)
(declare-fun x892 () Bool)
(declare-fun x903 () Int)
(declare-fun x762 () Int)
(declare-fun x665 () Int)
(declare-fun x1122 () Bool)
(declare-fun x252 () Int)
(declare-fun x1443 () Int)
(declare-fun x500 () Bool)
(declare-fun x567 () x901)
(declare-fun x1103 () Int)
(declare-fun x515 () Bool)
(declare-fun x666 () Int)
(declare-fun x626 () Bool)
(declare-fun x930 () x901)
(declare-fun x581 (Int) Int)
(declare-fun x1295 () Bool)
(declare-fun x419 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x513 () Int)
(declare-fun x301 () Bool)
(declare-fun x1186 () Int)
(declare-fun x525 () Bool)
(declare-fun x445 () Int)
(declare-fun x586 () Bool)
(declare-fun x753 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x1384 () Int)
(declare-fun x370 () Int)
(declare-fun x1347 () Int)
(declare-fun x1035 () Int)
(declare-fun x741 () Int)
(declare-fun x841 () Int)
(declare-fun x519 () Int)
(declare-fun x1461 () Int)
(declare-fun x142 () Int)
(declare-fun x373 () Int)
(declare-fun x324 () Bool)
(declare-fun x429 () Int)
(declare-fun x1284 () Int)
(declare-fun x207 () Int)
(declare-fun x761 () Int)
(declare-fun x1420 () Bool)
(declare-fun x208 () x901)
(declare-fun x119 () Int)
(declare-fun x1506 () x901)
(declare-fun x1557 () Bool)
(declare-fun x234 () Bool)
(declare-fun x675 () Bool)
(declare-fun x802 () Int)
(declare-fun x276 () Int)
(declare-fun x1238 () x901)
(declare-fun x393 () Int)
(declare-fun x1431 () Bool)
(declare-fun x780 () Int)
(declare-fun x411 () Int)
(declare-fun x399 () Int)
(declare-fun x1215 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x259 () Int)
(declare-fun x459 () x901)
(declare-fun x935 () x901)
(declare-fun x742 () Bool)
(declare-fun x918 () Bool)
(declare-fun x104 () Int)
(declare-fun x931 () Bool)
(declare-fun x319 () Int)
(declare-fun x634 () Bool)
(declare-fun x467 () Int)
(declare-fun x808 () Bool)
(declare-fun x981 () Int)
(declare-fun x126 () Int)
(declare-fun x1036 () Bool)
(declare-fun x1501 () Bool)
(declare-fun x924 () x901)
(declare-fun x674 () Int)
(declare-fun x39 () Int)
(declare-fun x1536 () Int)
(declare-fun x1108 () Int)
(declare-fun x360 (Int) Int)
(declare-fun x448 () Int)
(declare-fun x239 () x901)
(declare-fun x1095 () Int)
(declare-fun x774 () Bool)
(declare-fun x1333 (x901) Int)
(declare-fun x72 () x901)
(declare-fun x1380 () Int)
(declare-fun x812 () Bool)
(declare-fun x175 () x901)
(declare-fun x98 () x901)
(declare-fun x298 () Int)
(declare-fun x240 () x901)
(declare-fun x1031 () Int)
(declare-fun x1490 () Int)
(declare-fun x907 () Int)
(declare-fun x1267 () Int)
(declare-fun x76 () Int)
(declare-fun x959 () Int)
(declare-fun x91 () x901)
(declare-fun x229 () Int)
(declare-fun x1049 () Int)
(declare-fun x223 () Int)
(declare-fun x433 () Int)
(declare-fun x978 () Bool)
(declare-fun x602 () Int)
(declare-fun x506 () Int)
(declare-fun x672 () Bool)
(declare-fun x1071 () x901)
(declare-fun x536 () Int)
(declare-fun x227 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x967 () x901)
(declare-fun x43 () x901)
(declare-fun x1297 () Int)
(declare-fun x1302 () x901)
(declare-fun x451 () x901)
(declare-fun x733 () Int)
(declare-fun x846 () x901)
(declare-fun x260 () Int)
(declare-fun x631 () Bool)
(declare-fun x730 () Int)
(declare-fun x62 () Int)
(declare-fun x99 () Bool)
(declare-fun x67 () Bool)
(declare-fun x94 () Bool)
(declare-fun x86 () Bool)
(declare-fun x695 () Int)
(declare-fun x1250 (Int) Int)
(declare-fun x410 () Int)
(declare-fun x1565 () Int)
(declare-fun x571 () Int)
(declare-fun x1510 () Int)
(declare-fun x618 () Int)
(declare-fun x1008 () Int)
(declare-fun x1109 () x901)
(declare-fun x1317 () x901)
(declare-fun x1495 () Int)
(declare-fun x518 () Int)
(declare-fun x1052 () Bool)
(declare-fun x952 () Int)
(declare-fun x594 () Int)
(declare-fun x1564 () Bool)
(declare-fun x128 () Int)
(declare-fun x847 () Bool)
(declare-fun x1079 () x901)
(declare-fun x539 () Int)
(declare-fun x371 () Int)
(declare-fun x1336 () Int)
(declare-fun x1395 () Int)
(declare-fun x1341 () Bool)
(declare-fun x1025 () Int)
(declare-fun x444 () Int)
(declare-fun x1521 (x901) Int)
(declare-fun x369 () Bool)
(declare-fun x245 () x901)
(declare-fun x1524 () Int)
(declare-fun x406 () Bool)
(declare-fun x597 () Int)
(declare-fun x546 () x901)
(declare-fun x639 () Bool)
(declare-fun x880 () Int)
(declare-fun x919 () Int)
(declare-fun x1350 () Int)
(declare-fun x512 () Int)
(declare-fun x782 () Int)
(declare-fun x905 () Bool)
(declare-fun x292 (Int Int) Int)
(declare-fun x702 () Bool)
(declare-fun x1414 (Int) Int)
(declare-fun x1410 () Int)
(declare-fun x786 () Bool)
(declare-fun x1438 () x901)
(declare-fun x956 () x901)
(declare-fun x264 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x143 () Bool)
(declare-fun x1533 () Int)
(declare-fun x883 () Int)
(declare-fun x1560 () Int)
(declare-fun x566 () x901)
(declare-fun x965 () x901)
(declare-fun x701 () Int)
(declare-fun x202 () Bool)
(declare-fun x1200 () x901)
(declare-fun x603 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x84 () x901)
(declare-fun x664 () Bool)
(declare-fun x996 () x901)
(declare-fun x361 () Int)
(declare-fun x1189 () Bool)
(declare-fun x1101 () Int)
(declare-fun x471 () Bool)
(declare-fun x432 () Int)
(declare-fun x531 () x901)
(declare-fun x322 () Bool)
(declare-fun x587 () Int)
(declare-fun x585 () Int)
(declare-fun x136 () Int)
(declare-fun x1011 () Bool)
(declare-fun x763 () Bool)
(declare-fun x1377 () Int)
(declare-fun x1058 () Int)
(declare-fun x384 () Int)
(declare-fun x1260 () Bool)
(declare-fun x273 () x901)
(declare-fun x579 () Int)
(declare-fun x1436 () Bool)
(declare-fun x612 () Int)
(declare-fun x69 () x901)
(declare-fun x1255 () Int)
(declare-fun x95 () Bool)
(declare-fun x1175 () Int)
(declare-fun x1374 () Int)
(declare-fun x715 () Int)
(declare-fun x853 () Bool)
(declare-fun x1116 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x826 () Int)
(declare-fun x417 () Bool)
(declare-fun x1132 () Int)
(declare-fun x164 () x901)
(declare-fun x5 () x901)
(declare-fun x1264 () Int)
(declare-fun x822 () Bool)
(declare-fun x790 () Int)
(declare-fun x282 () Bool)
(declare-fun x317 () Int)
(declare-fun x819 () x901)
(declare-fun x248 () Int)
(declare-fun x96 () Bool)
(declare-fun x1179 () Int)
(declare-fun x591 () Bool)
(declare-fun x1450 (Int) Int)
(declare-fun x18 () Int)
(declare-fun x19 () Int)
(declare-fun x491 () Int)
(declare-fun x269 () Int)
(declare-fun x555 () Int)
(declare-fun x1168 () Int)
(declare-fun x1538 () Bool)
(declare-fun x121 () Int)
(declare-fun x493 () x901)
(declare-fun x20 () Bool)
(declare-fun x1114 () Int)
(declare-fun x116 () Int)
(declare-fun x29 () Bool)
(declare-fun x1226 () Int)
(declare-fun x463 () Bool)
(declare-fun x657 () Int)
(declare-fun x385 () x901)
(declare-fun x1338 () Int)
(declare-fun x1227 () Int)
(declare-fun x1198 () Int)
(declare-fun x1386 () Bool)
(declare-fun x982 () Int)
(declare-fun x968 () Int)
(declare-fun x1002 (Int) Int)
(declare-fun x1280 () Int)
(declare-fun x1163 (x901) Int)
(declare-fun x66 () Bool)
(declare-fun x1047 () Int)
(declare-fun x1170 () Int)
(declare-fun x1043 () Int)
(declare-fun x1094 () Bool)
(declare-fun x1118 () Int)
(declare-fun x167 () x901)
(declare-fun x1551 () x901)
(declare-fun x22 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x1525 () x901)
(declare-fun x662 () Int)
(declare-fun x454 () Int)
(declare-fun x682 () Int)
(declare-fun x920 () Int)
(define-fun x262 ((x901 x901) (x1416 Int)) x901 (ite ((_ is x727) x901) (x727 (x588 x901) (+ (x341 x901) x1416)) (ite ((_ is x923) x901) (x923 (x192 x901) (x1425 x901) (+ (x1313 x901) x1416)) (x1567 (+ (x1207 x901) x1416)))))
(define-fun x511 ((x1457 Int)) Int (ite (and (<= 0 x1457) (< x1457 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1457 (- x1457 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x198 ((x1457 Int)) Int (ite (and (>= x1457 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x1457)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1457) x1457))
(define-fun x55 ((x92 Int)) Bool (and (>= x92 0) (< x92 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x236 ((x92 Int)) Bool (and (= (x1407 115792089237316195423570985008687907853269984665640564039457584007913129639935 x92) x92) (= (x1407 x92 115792089237316195423570985008687907853269984665640564039457584007913129639935) x92)))
(define-fun x148 ((x92 Int)) Bool (and (= (x1407 0 x92) 0) (= (x1407 x92 0) 0)))
(define-fun x1074 ((x92 Int)) Bool (= (x1407 x92 x92) x92))
(define-fun x929 ((x92 Int)) Bool (and (x236 x92) (x1074 x92) (x148 x92)))
(define-fun x677 ((x92 Int)) Bool (= (x1407 1461501637330902918203684832716283019655932542975 (x1407 1461501637330902918203684832716283019655932542975 x92)) (x1407 1461501637330902918203684832716283019655932542975 x92)))
(define-fun x679 ((x92 Int)) Bool (=> (and (>= x92 0) (< x92 1461501637330902918203684832716283019655932542976)) (= x92 (x1407 1461501637330902918203684832716283019655932542975 x92))))
(define-fun x179 ((x92 Int)) Bool (=> (= (x1407 1461501637330902918203684832716283019655932542975 x92) x92) (and (<= 0 x92) (< x92 1461501637330902918203684832716283019655932542976))))
(define-fun x71 ((x92 Int)) Bool (=> (and (>= x92 1461501637330902918203684832716283019655932542976) (> 2923003274661805836407369665432566039311865085952 x92)) (= (x1407 1461501637330902918203684832716283019655932542975 x92) (- x92 1461501637330902918203684832716283019655932542976))))
(define-fun x517 ((x92 Int) (x731 Int)) Bool (and (<= 0 x731) (= (+ (x1407 1461501637330902918203684832716283019655932542975 x92) (* 1461501637330902918203684832716283019655932542976 x731)) x92)))
(define-fun x1201 ((x92 Int) (x147 Int)) Bool (and (x679 x92) (x71 x92) (x517 x92 x147) (x677 x92) (x179 x92)))
(define-fun x354 ((x92 Int) (x731 Int)) Bool (= (x1407 x92 x731) (x1407 x731 x92)))
(define-fun x403 ((x92 Int) (x731 Int)) Bool (and (=> (<= 0 x92) (>= x92 (x1407 x92 x731))) (=> (>= x731 0) (>= x731 (x1407 x92 x731))) (>= (x1407 x92 x731) 0)))
(define-fun x1157 ((x92 Int) (x731 Int)) Bool (and (x354 x92 x731) (x403 x92 x731)))
(define-fun x144 ((x92 Int) (x147 Int)) Bool (and (x1157 x92 1461501637330902918203684832716283019655932542975) (x1201 x92 x147)))
(define-fun x59 ((x92 Int)) Bool (= (x1407 26959946667150639794667015087019630673637144422540572481103610249215 x92) (x1407 26959946667150639794667015087019630673637144422540572481103610249215 (x1407 26959946667150639794667015087019630673637144422540572481103610249215 x92))))
(define-fun x769 ((x92 Int)) Bool (=> (and (<= 0 x92) (< x92 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x1407 26959946667150639794667015087019630673637144422540572481103610249215 x92) x92)))
(define-fun x396 ((x92 Int)) Bool (=> (= (x1407 26959946667150639794667015087019630673637144422540572481103610249215 x92) x92) (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x92) (>= x92 0))))
(define-fun x1009 ((x92 Int)) Bool (=> (and (> 53919893334301279589334030174039261347274288845081144962207220498432 x92) (<= 26959946667150639794667015087019630673637144422540572481103610249216 x92)) (= (x1407 26959946667150639794667015087019630673637144422540572481103610249215 x92) (- x92 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x889 ((x92 Int) (x731 Int)) Bool (and (<= 0 x731) (= x92 (+ (x1407 26959946667150639794667015087019630673637144422540572481103610249215 x92) (* x731 26959946667150639794667015087019630673637144422540572481103610249216)))))
(define-fun x197 ((x92 Int) (x147 Int)) Bool (and (x59 x92) (x396 x92) (x769 x92) (x1009 x92) (x889 x92 x147)))
(define-fun x895 ((x92 Int) (x147 Int)) Bool (and (x197 x92 x147) (x1157 x92 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x114 ((x92 Int)) Bool (= (x1407 115792089237316195423570985008687907853269984665640564039457584007913129639904 x92) (x1407 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1407 115792089237316195423570985008687907853269984665640564039457584007913129639904 x92))))
(define-fun x1404 ((x92 Int)) Bool (=> (and (> 32 x92) (<= 0 x92)) (= 0 (x1407 115792089237316195423570985008687907853269984665640564039457584007913129639904 x92))))
(define-fun x1102 ((x92 Int) (x731 Int) (x1511 Int) (x441 Int)) Bool (and (>= x441 0) (= (x1407 115792089237316195423570985008687907853269984665640564039457584007913129639904 x92) (* x1511 32)) (>= x1511 0) (> 32 x731) (> 1 x441) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x1511) (= (+ (* 32 x1511) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x441) x731) x92) (<= 0 x731)))
(define-fun x557 ((x92 Int) (x1206 Int) (x784 Int) (x334 Int)) Bool (and (x1404 x92) (x114 x92) (x1102 x92 x1206 x784 x334)))
(define-fun x1234 ((x92 Int) (x1206 Int) (x784 Int) (x334 Int)) Bool (and (x557 x92 x1206 x784 x334) (x1157 x92 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1021 ((x1462 Int)) Int (x1184 x1462))
(define-fun x773 ((x1462 Int)) Int (ite (= 128 x1462) x248 (x439 x1462)))
(define-fun x1323 ((x1462 Int)) Int (ite (and (> (+ x594 160) x1462) (>= x1462 160)) (x1184 (+ x93 (- x1462 160))) (x773 x1462)))
(define-fun x1153 ((x1462 Int)) Int (ite (= x1462 x411) 0 (x1323 x1462)))
(define-fun x568 ((x1462 Int)) Int (ite (and (> (+ x1329 x1344) x1462) (>= x1462 x1329)) (x1184 (+ (- x1462 x1329) x772)) (x856 x1462)))
(define-fun x1503 ((x1462 x901)) Int (ite (= x1462 x381) x587 (x291 x1462)))
(define-fun x387 ((x1462 x901)) Int (ite (= x1462 x930) x587 (x291 x1462)))
(define-fun x376 ((x1462 x901)) Int (ite (= x1462 x158) x587 (x1333 x1462)))
(define-fun x1015 ((x1462 x901)) Int (ite (= x676 x1462) x587 (x1333 x1462)))
(define-fun x750 ((x1462 x901)) Int (ite (and x752 x475) (x1333 x1462) (ite (and x892 x904) (x291 x1462) (ite (and x1003 (not x678)) (x376 x1462) (x1015 x1462)))))
(define-fun x1097 ((x1462 x901)) Int (ite (= x1462 x1117) x632 (x652 x1462)))
(define-fun x1518 ((x1462 x901)) Int (ite (= x1178 x1462) x548 (x843 x1462)))
(define-fun x1055 ((x1462 x901)) Int (ite (and (not x678) x1003) (x1518 x1462) (x843 x1462)))
(define-fun x1481 ((x1462 x901)) Int (ite (and x752 x475) (x843 x1462) (ite (and x892 x904) (x652 x1462) (x1055 x1462))))
(define-fun x222 ((x1462 x901)) Int (ite (= x851 x1462) x1293 (x1163 x1462)))
(define-fun x374 ((x1462 x901)) Int (ite (= x1462 x412) x1442 (x1405 x1462)))
(define-fun x1296 ((x1462 x901)) Int (ite (and x475 x752) (x1405 x1462) (ite (and x892 x904) (x1163 x1462) (ite (and x1003 x1211) (x1405 x1462) (x374 x1462)))))
(define-fun x1455 ((x1462 x901)) Int (ite (= x1462 x1406) x587 (x1038 x1462)))
(define-fun x1205 ((x1462 x901)) Int (ite (= x1462 x928) x587 (x1038 x1462)))
(define-fun x367 ((x1462 x901)) Int (ite (= x1111 x1462) x587 (x1038 x1462)))
(define-fun x332 ((x1462 x901)) Int (ite (= x1430 x1462) x587 (x898 x1462)))
(define-fun x1342 ((x1462 x901)) Int (ite (= x1462 x452) x587 (x898 x1462)))
(define-fun x1459 ((x1462 x901)) Int (ite (= x1462 x145) x587 (x898 x1462)))
(define-fun x842 ((x1462 x901)) Int (ite (and x475 x752) (x898 x1462) (ite (and x892 x904) (x1038 x1462) (ite (and (not x301) x792 (not x1358)) (x332 x1462) (ite (and x1358 x792 (not x301)) (x1342 x1462) (x1459 x1462))))))
(define-fun x969 ((x1462 x901)) Int (ite (= x1462 x1005) x416 (x349 x1462)))
(define-fun x134 ((x1462 x901)) Int (ite (= x635 x1462) x778 (x81 x1462)))
(define-fun x692 ((x1462 x901)) Int (ite (and x752 x475) (x81 x1462) (ite (and x892 x904) (x349 x1462) (ite (and x1192 x792) (x81 x1462) (x134 x1462)))))
(define-fun x358 ((x1462 x901)) Int (ite (= x1082 x1462) x357 (x1133 x1462)))
(define-fun x698 ((x1462 x901)) Int (ite (= x1462 x470) x589 (x1191 x1462)))
(define-fun x1062 ((x1462 x901)) Int (ite (and (not x1358) x792 (not x301)) (x698 x1462) (x1191 x1462)))
(define-fun x1195 ((x1462 x901)) Int (ite (and x475 x752) (x1191 x1462) (ite (and x892 x904) (x1133 x1462) (x1062 x1462))))
(define-fun x1568 ((x1462 x901)) Int (ite (= x1462 x318) x445 (x1212 x1462)))
(define-fun x1020 ((x1462 x901)) Int (ite (= x1462 x736) x1065 (x56 x1462)))
(define-fun x718 ((x1462 x901)) Int (ite (and x752 x475) (x1521 x1462) (ite (and x892 x904) (x366 x1462) (ite (and x1100 x1003 (not x362) (not x322)) (x56 x1462) (ite (and x1003 (not x322) (not x1100)) (x1521 x1462) (ite (and x322 x1003) (x1521 x1462) (x1020 x1462)))))))
(define-fun x263 ((x1462 Int)) Int (ite (= x1462 x325) x1112 (x1376 x1462)))
(define-fun x832 ((x1462 Int)) Int (ite (= x70 x1462) x807 (x263 x1462)))
(define-fun x1162 ((x1462 Int)) Int (ite (and x499 x954) (x1376 x1462) (x832 x1462)))
(define-fun x991 ((x1462 Int)) Int (ite (= x1462 x1137) x1249 (x1162 x1462)))
(define-fun x151 ((x1462 Int)) Int (ite (= x1462 x1443) x1415 (x844 x1462)))
(define-fun x190 ((x1462 Int)) Int (ite (= x543 x1462) x1070 (x356 x1462)))
(define-fun x673 ((x1462 Int)) Int (ite (= x1462 x1210) x926 (x190 x1462)))
(define-fun x559 ((x1462 Int)) Int (ite (and (not x301) x792 (not x1358)) (x673 x1462) (ite (and x1358 x792 (not x301)) (x673 x1462) (x356 x1462))))
(define-fun x734 ((x1462 Int)) Int (ite (= x337 x1462) x893 (x559 x1462)))
(define-fun x713 ((x1462 Int)) Int (ite (= x1462 x256) x1057 (x581 x1462)))
(define-fun x161 ((x1462 Int)) Int (ite (and x752 x475) (x356 x1462) (ite (and x892 x904) (x1376 x1462) (ite (and x1100 x1003 (not x322) (not x362)) (x581 x1462) (ite (and (not x322) (not x1100) x1003) (x1348 x1462) (ite (and x1003 x322) (x1348 x1462) (x713 x1462)))))))
(define-fun x1310 ((x1462 Int)) Int (ite (= x1462 x257) x1073 (x161 x1462)))
(define-fun x1152 ((x1462 Int)) Int (ite (= x1151 x1462) x23 (x1310 x1462)))
(define-fun x232 ((x1462 Int)) Int (ite (= x612 x1462) x1177 (x1152 x1462)))
(define-fun x1476 ((x1462 Int)) Int (ite (= x1462 x1470) x1119 (x232 x1462)))
(define-fun x694 ((x1462 Int)) Int (ite (= x1462 x1312) 32 (x1476 x1462)))
(define-fun x100 ((x1462 Int)) Int (ite (= x486 x1462) x1263 (x1176 x1462)))
(define-fun x73 ((x1462 Int)) Int (ite (= x1462 x556) 0 (x1136 x1462)))
(define-fun x1180 ((x1462 Int)) Int (ite (= 0 x1462) 1 (x1569 x1462)))
(define-fun x266 ((x1462 Int)) Int (ite (= 0 x1462) 1 (x1569 x1462)))
(define-fun x1534 ((x1462 Int)) Int (ite (and x918 x1232) (x1180 x1462) (x266 x1462)))
(define-fun x1421 ((x1462 Int)) Int (ite (= x1462 x1453) x827 (x1059 x1462)))
(define-fun x270 ((x1462 Int)) Int (ite (= x1462 x1453) x259 (x1059 x1462)))
(define-fun x1474 ((x1462 Int)) Int (ite (= x1453 x1462) x1220 (x211 x1462)))
(define-fun x680 ((x1462 Int)) Int (ite (and (< x1462 (+ x1214 x1220)) (>= x1462 x1214)) (x1534 (+ 0 (- x1462 x1214))) (x1474 x1462)))
(define-fun x460 ((x1462 Int)) Int (ite (and (not x471) x1147) (x680 x1462) (x211 x1462)))
(define-fun x1165 ((x1462 Int)) Int (ite (= x1462 x1345) x329 (x460 x1462)))
(define-fun x691 ((x1462 Int)) Int (ite (= x302 x1462) x1561 (x1165 x1462)))
(define-fun x1061 ((x1462 Int)) Int (ite (= x1462 x1408) x708 (x691 x1462)))
(define-fun x858 ((x1462 Int)) Int (ite (= x864 x1462) x128 (x1061 x1462)))
(define-fun x389 ((x1462 Int)) Int (ite (= x1350 x1462) 32 (x858 x1462)))
(define-fun x1127 ((x1462 Int)) Int (ite (= x1462 x27) x683 (x1291 x1462)))
(define-fun x710 ((x1462 Int)) Int (ite (= x1462 x265) 0 (x1134 x1462)))
(define-fun x1364 ((x1462 x901)) Int (ite (= (x668 274184521717934524641157099916833587206) x1462) x1194 (x849 x1462)))
(define-fun x1424 ((x1462 x901)) Int (ite (= (x668 x225) x1462) x491 (x1364 x1462)))
(define-fun x170 ((x1462 x901)) Int (ite (= x1462 (x668 x225)) x1035 (x1424 x1462)))
(define-fun x478 ((x1462 x901)) Int (ite (= (x668 274184521717934524641157099916833587206) x1462) x1533 (x170 x1462)))
(define-fun x1370 ((x1462 x901)) Int (ite (= x1462 (x668 274184521717934524641157099916833587206)) x44 (x478 x1462)))
(define-fun x937 ((x1462 x901)) Int (ite (= x1462 (x668 x1326)) x1209 (x1370 x1462)))
(define-fun x1419 ((x1462 x901)) Int (ite (= x965 x1462) x1422 (x1309 x1462)))
(define-fun x1235 ((x1462 x901)) Int (ite (= x193 x1462) x1076 (x1419 x1462)))
(define-fun x884 ((x1462 x901)) Int (ite (and x1232 x918) (x1235 x1462) (x1309 x1462)))
(define-fun x1379 ((x1462 x901)) Int (ite (= x1081 x1462) x821 (x884 x1462)))
(define-fun x7 ((x1462 Int)) Int (ite (= x1462 0) 1 (x939 x1462)))
(define-fun x714 ((x1462 Int)) Int (ite (= x1462 x1167) x1008 (x1142 x1462)))
(define-fun x11 ((x1462 x901)) Int (ite (= x1308 x1462) x380 (x155 x1462)))
(define-fun x1305 ((x1462 x901)) Int (ite (= x1289 x1462) x1046 (x11 x1462)))
(define-fun x592 ((x1462 x901)) Int (ite (and x1232 x918) (x155 x1462) (x1305 x1462)))
(define-fun x1199 ((x1462 x901)) Int (ite (= x141 x1462) x1529 (x592 x1462)))
(define-fun x1243 ((x1462 Int)) Int (ite (= x1462 0) 1 (x939 x1462)))
(define-fun x817 ((x1462 Int)) Int (ite (= x1462 x1167) x484 (x1142 x1462)))
(define-fun x974 ((x1462 Int)) Int (ite (and x306 x419) (x7 x1462) (x1243 x1462)))
(define-fun x804 ((x1462 x901)) Int (ite (= (x668 x1326) x1462) x12 (x937 x1462)))
(define-fun x831 ((x1462 Int)) Int (ite (= x1167 x1462) x431 (x1450 x1462)))
(define-fun x122 ((x1462 Int)) Int (ite (and (<= x410 x1462) (< x1462 (+ x431 x410))) (x974 (+ 0 (- x1462 x410))) (x831 x1462)))
(define-fun x615 ((x1462 Int)) Int (ite (and x745 x1066) (x1450 x1462) (x122 x1462)))
(define-fun x872 ((x92 Int)) Bool (=> (and (not (= x92 759532456)) (not (= x92 1968616202)) (not (= 69947311 x92)) (not (= 2868243304 x92)) (not (= x92 2514000705)) (not (= 1461501637330902918203684832716283019655932542975 x92)) (not (= x92 2532887486)) (not (= 2690754053 x92)) (not (= 2211524764 x92)) (not (= x92 468353030)) (not (= x92 826074471)) (not (= x92 2258409472)) (not (= 2939843472 x92)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x92)) (not (= x92 2960351575)) (not (= x92 635128645)) (not (= x92 142201243)) (not (= x92 1986467848)) (not (= x92 604800)) (not (= x92 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x92)) (not (= 18446744073709551615 x92)) (not (= 2764855426 x92)) (not (= x92 911411945)) (not (= x92 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x92 274184521717934524641157099916833587214)) (not (= x92 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= 274184521717934524641157099916833587218 x92)) (not (= 2293535753 x92)) (not (= 2061678023 x92)) (not (= x92 1889567281)) (> x92 10000) (not (= 649617121 x92)) (not (= x92 2512682246)) (not (= x92 2798343961)) (not (= x92 3123789364)) (not (= x92 2418364589)) (not (= 2835717307 x92)) (not (= 274184521717934524641157099916833587206 x92)) (not (= x92 115792089237316195423570985008687907853269984665640564039457)) (not (= 1517119036 x92)) (not (= x92 1000000000000000000)) (not (= x92 87118632)) (not (= x92 2743102681))) (not ((_ is x1567) (x668 x92)))))
(assert (x55 x135))
(assert (x55 x1316))
(assert (x872 x938))
(assert (=> (>= 10000 x674) (= (x668 x674) (x1567 x674))))
(assert (x55 x1411))
(assert (=> (<= x327 10000) (= (x668 x327) (x1567 x327))))
(assert (= (x751 (x668 x1168)) x1168))
(assert (= (ite (and x499 x954) (x1133 x1489) (ite (and x954 (not x499) x1497) (x1133 x1489) (x358 x1489))) (x1191 x1489)))
(assert (x55 x444))
(assert (x872 x1069))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x751 (x1567 115792089237316195423570985008687907853269984665640564039457))))
(assert (x55 x528))
(assert (= x1215 (or (and x1204 (not x763)) (and x1311 (not x1361)))))
(assert (x55 x1237))
(assert (x929 x1393))
(assert (x55 x363))
(assert (x55 x524))
(assert (x55 x405))
(assert (x55 x1025))
(assert (= (x1059 x1428) (ite (and x314 x756 (not x75)) (x1136 x1428) (x73 x1428))))
(assert (x55 x176))
(assert (= (x751 (x668 x528)) x528))
(assert (x872 x253))
(assert (= x792 (or (and x279 x1564) x1434)))
(assert (x872 x590))
(assert (x872 x1316))
(assert (= (x356 x1217) (ite (and x628 (not x1386) x1420 (not x1208)) (x844 x1217) (ite (and (not x1208) x628 (not x1420)) (x1446 x1217) (ite (and x1208 x628) (x1446 x1217) (x151 x1217))))))
(assert (x929 x765))
(assert (x55 x1044))
(assert (x872 x802))
(assert (= (ite (and x1331 x1223) (x856 x505) (x568 x505)) (x1376 x505)))
(assert (x55 x416))
(assert (=> (<= x1103 10000) (= (x668 x1103) (x1567 x1103))))
(assert (= 0 (x439 224)))
(assert (=> (>= 10000 x319) (= (x1567 x319) (x668 x319))))
(assert (=> (<= x572 10000) (= (x668 x572) (x1567 x572))))
(assert (x55 x785))
(assert (= x565 (or (and x1246 (not x640)) (and (not x500) x508))))
(assert (x55 x852))
(assert (x55 x397))
(assert (= (x360 x309) (ite (= x1253 x309) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x309))))
(assert (x55 x602))
(assert (= x1284 (x751 (x668 x1284))))
(assert (x55 x721))
(assert (= (x844 x787) (ite (= x787 x605) x1301 (x1446 x787))))
(assert (=> (<= x1287 10000) (= (x1567 x1287) (x668 x1287))))
(assert (=> (>= 10000 x238) (= (x668 x238) (x1567 x238))))
(assert (= (x1059 x744) (ite (and x756 (not x75) x314) (x1136 x744) (x73 x744))))
(assert (=> (<= x590 10000) (= (x1567 x590) (x668 x590))))
(assert (x872 x865))
(assert (= (ite (= x109 x150) x68 (x1348 x109)) (x581 x109)))
(assert (x55 x120))
(assert (=> (>= 10000 x1245) (= (x668 x1245) (x1567 x1245))))
(assert (x55 x1508))
(assert (=> (<= x1528 10000) (= (x668 x1528) (x1567 x1528))))
(assert (= (x1002 x426) (ite (= x281 x426) x139 (x789 x426))))
(assert (x55 x1401))
(assert (x55 x215))
(assert (=> (<= x1377 10000) (= (x1567 x1377) (x668 x1377))))
(assert (= (x1567 1889567281) (x668 1889567281)))
(assert (=> (<= x537 10000) (= (x1567 x537) (x668 x537))))
(assert (x55 x109))
(assert (= (ite (= x1335 x744) x645 (x1414 x744)) (x1291 x744)))
(assert (x55 x393))
(assert (= (x789 x521) (ite (= x521 x421) x338 (x360 x521))))
(assert (x55 x1439))
(assert (x55 x927))
(assert (= (x439 x505) 0))
(assert (x55 x815))
(assert (= x1122 x77))
(assert (x55 x1085))
(assert (= x508 (and x328 x1121)))
(assert (x55 x617))
(assert (x55 x1058))
(assert (= (x1446 x1470) (ite (= x297 x1470) x429 (x991 x1470))))
(assert (x872 x1565))
(assert (=> (<= x759 10000) (= (x668 x759) (x1567 x759))))
(assert (= (x751 (x668 x407)) x407))
(assert (x55 x184))
(assert (x55 x1537))
(assert (= x811 (x751 (x668 x811))))
(assert (x55 x108))
(assert (= (or (and (not x1557) x1093) x1547) x628))
(assert (x55 x1114))
(assert (x55 x717))
(assert (x55 x997))
(assert (= (x1414 x1428) (ite (= x1428 x571) x427 (x377 x1428))))
(assert (x55 x201))
(assert (x55 x223))
(assert (= (x751 (x668 x1186)) x1186))
(assert (= (ite (= x188 x736) x1429 (x1521 x736)) (x56 x736)))
(assert (= x1537 (x751 (x668 x1537))))
(assert (x55 x484))
(assert (x55 x413))
(assert (x55 x1033))
(assert (= (x751 (x668 x1417)) x1417))
(assert (x872 x788))
(assert (= (ite (and (not x1386) (not x1208) x628 x1420) (x844 x744) (ite (and (not x1208) (not x1420) x628) (x1446 x744) (ite (and x628 x1208) (x1446 x744) (x151 x744)))) (x356 x744)))
(assert (x55 x207))
(assert (= (x751 (x668 x1124)) x1124))
(assert (= (x751 (x1567 826074471)) 826074471))
(assert (= (ite (and x1420 x628 (not x1386) (not x1208)) (x844 x1428) (ite (and x628 (not x1208) (not x1420)) (x1446 x1428) (ite (and x1208 x628) (x1446 x1428) (x151 x1428)))) (x356 x1428)))
(assert (x55 x732))
(assert (x55 x655))
(assert (= x662 (x751 (x668 x662))))
(assert (x55 x707))
(assert (x55 x876))
(assert (= x572 (x751 (x668 x572))))
(assert (= (x439 x605) 0))
(assert (= (x439 x1179) 0))
(assert (x55 x712))
(assert (x872 x972))
(assert (= (ite (= x390 x150) x68 (x1348 x390)) (x581 x390)))
(assert (=> (>= 10000 x925) (= (x668 x925) (x1567 x925))))
(assert (x872 x1524))
(assert (x872 x1141))
(assert (x55 x1177))
(assert (= (ite (= x1179 x316) x248 (x1153 x1179)) (x856 x1179)))
(assert (= (x856 x1443) (ite (= x316 x1443) x248 (x1153 x1443))))
(assert (x872 x103))
(assert (= (x1567 635128645) (x668 635128645)))
(assert (x872 x621))
(assert (= x308 (x751 (x668 x308))))
(assert (= (x356 x1262) (ite (and (not x1386) x628 (not x1208) x1420) (x844 x1262) (ite (and (not x1420) x628 (not x1208)) (x1446 x1262) (ite (and x1208 x628) (x1446 x1262) (x151 x1262))))))
(assert (= (x1376 x1217) (ite (and x1331 x1223) (x856 x1217) (x568 x1217))))
(assert (x55 x1258))
(assert (= x1479 (x751 (x668 x1479))))
(assert (= x1266 (x751 (x668 x1266))))
(assert (= x1524 (x751 (x668 x1524))))
(assert (x55 x1017))
(assert (x55 x807))
(assert (= (x668 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1567 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x872 x1286))
(assert (x55 x252))
(assert (x929 x927))
(assert (= 2258409472 (x751 (x1567 2258409472))))
(assert (x872 x922))
(assert (= x430 (x751 (x668 x430))))
(assert (= (ite (= x787 x1335) x645 (x1414 x787)) (x1291 x787)))
(assert (= (x1376 x426) (ite (and x1223 x1331) (x856 x426) (x568 x426))))
(assert (x55 x1276))
(assert (=> (>= 10000 x1499) (= (x1567 x1499) (x668 x1499))))
(assert (x55 x684))
(assert (= (x581 x316) (ite (= x316 x150) x68 (x1348 x316))))
(assert (= x960 true))
(assert (= (x856 x864) (ite (= x864 x316) x248 (x1153 x864))))
(assert (x55 x608))
(assert (=> (<= x133 10000) (= (x1567 x133) (x668 x133))))
(assert (= (ite (= x323 x521) x762 (x1002 x521)) (x1176 x521)))
(assert (=> (<= x972 10000) (= (x1567 x972) (x668 x972))))
(assert (=> (>= 10000 x1044) (= (x1567 x1044) (x668 x1044))))
(assert (= (x751 (x668 x865)) x865))
(assert (x55 x1040))
(assert (x55 x621))
(assert (= (x1136 x521) (ite (and (not x395) x221 x1466 x1006 x756 x314) (x1176 x521) (ite (and x1006 x1466 x314 (not x221) x756) (x1002 x521) (ite (and (not x1466) x1006 x314 x756) (x789 x521) (ite (and x314 x756 (not x1006)) (x360 x521) (x100 x521)))))))
(assert (x55 x632))
(assert (x872 x400))
(assert (= x654 (=> (= x976 x867) x1239)))
(assert (x55 x368))
(assert (x55 x78))
(assert (x55 x893))
(assert (x144 x1125 x209))
(assert (x55 x386))
(assert (= (x751 (x668 x554)) x554))
(assert (= (x844 x505) (ite (= x605 x505) x1301 (x1446 x505))))
(assert (= (x1446 x256) (ite (= x256 x297) x429 (x991 x256))))
(assert (x55 x1495))
(assert (x55 x42))
(assert (x872 x63))
(assert (= (x439 x1262) 0))
(assert (x55 x1293))
(assert (=> (<= x340 10000) (= (x1567 x340) (x668 x340))))
(assert (x55 x228))
(assert (x895 x927 x1086))
(assert (x55 x1043))
(assert (= x454 (x751 (x668 x454))))
(assert (= x746 (or (and x1532 x1531) (and x1023 (not x603)) (and x264 (not x1471)))))
(assert (= x947 (x751 (x668 x947))))
(assert (=> (<= x1132 10000) (= (x668 x1132) (x1567 x1132))))
(assert (x55 x685))
(assert (= (x751 (x668 x1465)) x1465))
(assert (x55 x24))
(assert (x55 x916))
(assert (x872 x1224))
(assert (x872 x1513))
(assert (x55 x438))
(assert (=> (<= x58 10000) (= (x1567 x58) (x668 x58))))
(assert (x55 x572))
(assert (x55 x224))
(assert (x55 x1286))
(assert (x55 x561))
(assert (= (ite (= x1253 x505) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x505)) (x360 x505)))
(assert (= x630 (=> (and (or (and (= x208 (x923 (x668 x108) x1473 0)) (= x145 (x923 (x668 x572) x208 0)) (= x572 (x1407 1461501637330902918203684832716283019655932542975 x765)) x301 (= x337 x543) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x108) (= x1473 (x923 (x668 x1286) (x1567 7) 0))) (and (= (x923 (x668 x1124) x1089 0) x98) (= x926 (x1130 x154)) (>= x1545 0) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x1140) (= x1545 (x898 x98)) (= (= x602 0) x1358) (not x301) (or (and (or (and (= x733 604800) (= x717 (x198 (- x549 x1545))) (= x666 (ite (> 604800 x717) x717 604800)) (not x220) (not (> x1545 x549)) (= x602 x666)) (and x220 (= x602 x514) (not (< x549 x1004)) (= x514 (x198 (- x549 x1004))) (= (x673 x543) x1004))) (= x642 (x673 x1210)) (= (> x587 x642) x616) (or (and x616 (= x850 (x673 x1210)) (= x850 x549)) (and (= x549 x587) (not x616))) (= x220 (= 0 x1545)) x591) (and (= 0 x602) (not x591))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1070) (= x1382 (x923 (x668 x1286) (x1567 7) 0)) (= (x453 x793) x1070) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1545) (= x1124 (x1407 1461501637330902918203684832716283019655932542975 x765)) (= (x511 (+ 128 x1137)) x448) (= x1210 (x511 (+ x1137 96))) (<= 0 x926) (= (x262 x793 1) x154) (= x591 (> x289 x1545)) (= x793 (x923 (x668 x1286) (x1567 1) 0)) (>= x1070 0) (= (x673 x1210) x289) (= (x923 (x668 x1140) x1382 0) x1089) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x926) (or (and (= x317 x589) (= (x923 (x668 x284) x451 0) x470) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x778 x602)) (= x998 (x923 (x668 x1286) (x1567 3) 0)) (= x317 (* x778 x602)) (= x961 (x1407 1461501637330902918203684832716283019655932542975 x765)) (= x284 (x1407 1461501637330902918203684832716283019655932542975 x765)) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x876) (= (x923 (x668 x922) x546 0) x855) (= x1430 (x923 (x668 x961) x855 0)) (= (x923 (x668 x1286) (x1567 7) 0) x546) (= x922 (x1407 1461501637330902918203684832716283019655932542975 x393)) (= x451 (x923 (x668 x876) x998 0)) (not x1358) (= x448 x337)) (and (= (x1407 1461501637330902918203684832716283019655932542975 x393) x1479) (= (x923 (x668 x1316) x890 0) x452) (= x337 x448) (= (x923 (x668 x1286) (x1567 7) 0) x1278) (= (x923 (x668 x1479) x1278 0) x890) x1358 (= (x1407 1461501637330902918203684832716283019655932542975 x765) x1316))))) (= (= 0 x778) x301) (= x1192 (= 0 x638)) (or (and (= (x1407 1461501637330902918203684832716283019655932542975 x765) x440) (= x635 (x923 (x668 x440) x84 0)) (= x726 (x923 (x668 x1286) (x1567 9) 0)) (= x149 (x1407 1461501637330902918203684832716283019655932542975 x393)) (= (x923 (x668 x149) x726 0) x84) (not x1192)) x1192)) x168)))
(assert (x55 x556))
(assert (x55 x1220))
(assert (= (x751 (x668 x1402)) x1402))
(assert (x55 x1255))
(assert (x55 x150))
(assert (x55 x27))
(assert (= (x856 x256) (ite (= x316 x256) x248 (x1153 x256))))
(assert (x929 x201))
(assert (x55 x1480))
(assert (= (ite (= x256 x1401) x1359 (x734 x256)) (x1348 x256)))
(assert (x55 x1001))
(assert (= (ite (= x297 x1428) x429 (x991 x1428)) (x1446 x1428)))
(assert (x55 x1423))
(assert (x55 x514))
(assert (x55 x947))
(assert (x872 x576))
(assert (x929 x180))
(assert (= x777 (=> (= (= 274184521717934524641157099916833587214 x1326) x1092) (and (=> (not x1092) x960) (=> (and (= x1490 x136) (= x1490 x1561) (not x702) (= (x923 (x668 274184521717934524641157099916833587206) (x1567 1) 0) x690) (= x962 x1418) (not x53) x1092 (= x624 (> x136 x1398)) (= (x198 (- x1292 4)) x1255) (= x329 x730) (not (= x1522 649617121)) (>= x1398 0) (not (= 826074471 x1522)) (= x431 32) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1255) (and (> 64 x1255) (= (<= x1255 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1054) (= x1522 2835717307) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x136 x962)) (= x135 x484) (= x230 274184521717934524641157099916833587206) (= x766 x730) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1398) (< 0 x1552) (= x283 x1292) (not (= x1522 1889567281)) (= (x1199 x636) x962) (not x624) (<= x962 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x141 (x923 (x668 274184521717934524641157099916833587206) (x1567 1) 0)) (= x636 (x923 (x668 x730) (x1567 1) 0)) (not x1054) (= (x198 (- x1398 x1490)) x1529) (= 68 x1292) (= (+ x1418 x80) x469) (>= 1461501637330902918203684832716283019655932542975 x730) (= x53 (>= (+ x962 x136) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (< x1292 4)) (= (> x1490 x1398) x702) (= (x1024 (x668 274184521717934524641157099916833587214)) x1552) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1475) (not (= 2514000705 x1522)) (= x1398 (x592 x690)) (= x386 274184521717934524641157099916833587206) (not (< x1522 649617121)) (<= 0 x962) (= x80 x136) (= 1 x1078)) x449)))))
(assert (x55 x830))
(assert (= (x751 (x668 x1160)) x1160))
(assert (x872 x1101))
(assert (x872 x1449))
(assert (= (ite (and x918 x1232) (x1421 x744) (x270 x744)) (x211 x744)))
(assert (x55 x1552))
(assert (= (ite (and x1331 x1223) (x856 x316) (x568 x316)) (x1376 x316)))
(assert (x55 x346))
(assert (= x1400 x1273))
(assert (x55 x142))
(assert (= (ite (= x1179 x1335) x645 (x1414 x1179)) (x1291 x1179)))
(assert (x55 x319))
(assert (x55 x1285))
(assert (= (ite (= x1428 x150) x68 (x1348 x1428)) (x581 x1428)))
(assert (x55 x521))
(assert (x872 x867))
(assert (x872 x1124))
(assert (= (x360 x864) (ite (= x1253 x864) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x864))))
(assert (=> (>= 10000 x564) (= (x1567 x564) (x668 x564))))
(assert (= x359 (=> (and (= (x923 (x668 x401) (x1567 9) 0) x1128) (= x941 x705) (= (x1024 (x668 274184521717934524641157099916833587206)) x502) (<= 0 x941) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x941) (>= 1461501637330902918203684832716283019655932542975 x519) (>= 1461501637330902918203684832716283019655932542975 x1488) (< x171 468353030) (> 2293535753 x171) (not (= x171 87118632)) (= 142201243 x171) (not (= x171 69947311)) (= (x692 x1378) x941) (> x502 0) (> 911411945 x171) (= x1013 (x923 (x668 x519) x1128 0)) (= x1378 (x923 (x668 x1488) x1013 0))) (=> (and (= x130 x1053) (= x1268 x1103) (= x705 x653) (= x880 x1160)) x824))))
(assert (x55 x543))
(assert (x55 x1179))
(assert (x872 x1261))
(assert (x55 x1119))
(assert (= x1513 (x751 (x668 x1513))))
(assert (= 2418364589 (x751 (x1567 2418364589))))
(assert (x55 x845))
(assert (x55 x105))
(assert (= (ite (and x499 x954) (x1133 x1566) (ite (and x954 x1497 (not x499)) (x1133 x1566) (x358 x1566))) (x1191 x1566)))
(assert (x55 x1156))
(assert (=> (>= 10000 x738) (= (x668 x738) (x1567 x738))))
(assert (=> (<= x1186 10000) (= (x1567 x1186) (x668 x1186))))
(assert (x55 x281))
(assert (= (or x1431 x1007) x1547))
(assert (x55 x607))
(assert (= (x751 (x1567 87118632)) 87118632))
(assert (x55 x327))
(assert (x55 x1504))
(assert (x55 x1118))
(assert (= (x751 (x1567 649617121)) 649617121))
(assert (x55 x238))
(assert (x55 x384))
(assert (= 0 (x439 x256)))
(assert (= (ite (= x529 x316) x248 (x1153 x529)) (x856 x529)))
(assert (x55 x656))
(assert (= (=> (= (= 274184521717934524641157099916833587214 x225) x905) (and (=> (and (= x574 x1467) (>= 1461501637330902918203684832716283019655932542975 x400) (= x770 (>= (+ x574 x1237) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x116 274184521717934524641157099916833587206) (= (x11 x303) x1237) (<= x249 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x963 (> x574 x249)) (= 68 x35) (= x1276 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1113 x574) (= x23 x1113) (not (= 826074471 x57)) (>= x1237 0) (not (> 649617121 x57)) (<= 0 x249) (= (x923 (x668 274184521717934524641157099916833587206) (x1567 1) 0) x245) (<= x1237 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x272 (or (> x1156 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1156 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1156) true)))) (not (= x57 1889567281)) (= x259 x195) (= (> x1113 x249) x598) (= x57 2835717307) (not x598) (= (x923 (x668 x400) (x1567 1) 0) x303) (not x963) (= (x923 (x668 x400) (x1567 1) 0) x1289) (not x272) (= (x923 (x668 274184521717934524641157099916833587206) (x1567 1) 0) x1308) (= 274184521717934524641157099916833587206 x1181) (= x35 x104) (= (x198 (- x35 4)) x1156) (< (+ x574 x1237) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (< x35 4)) (= 1 x1143) (= (x155 x245) x249) x905 (not x770) (not (= x57 2514000705)) (= x1220 32) (= (x198 (- x249 x1113)) x380) (> x18 0) (= x1237 x1041) (= x1073 x400) (= (+ x1467 x1041) x1046) (not (= x57 649617121)) (= (x1024 (x668 274184521717934524641157099916833587214)) x18) (= x400 x1256)) x94) (=> (not x905) x943))) x113))
(assert (=> (>= 10000 x400) (= (x668 x400) (x1567 x400))))
(assert (x55 x1350))
(assert (=> (>= 10000 x920) (= (x668 x920) (x1567 x920))))
(assert (x1157 x187 x1001))
(assert (x55 x297))
(assert (= x970 (x751 (x668 x970))))
(assert (x55 x235))
(assert (= (x211 x521) (ite (and x1232 x918) (x1421 x521) (x270 x521))))
(assert (x55 x226))
(assert (x55 x401))
(assert (= x712 (x751 (x668 x712))))
(assert (= x168 (=> (and (= x841 (x1407 1461501637330902918203684832716283019655932542975 x393)) (<= x951 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x597 0) (= x597 (x1333 x800)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x597) (= (x923 (x668 x1286) (x1567 6) 0) x1063) (<= 0 x951) (= x800 (x923 (x668 x841) x1063 0)) (= (= 0 x597) x888) (not (> x1286 x951))) (and (=> x888 x1158) (=> (and (= x1539 (x1407 1461501637330902918203684832716283019655932542975 x393)) (= x868 (x923 (x668 x1286) (x1567 10) 0)) (<= 0 x1486) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1486) (= 0 x1182) (= x1486 (x1405 x194)) (= x194 (x923 (x668 x1539) x868 0)) (= x1486 x1442) (not x888)) x351)))))
(assert (x872 x617))
(assert (x55 x669))
(assert (x872 x555))
(assert (x55 x1047))
(assert (= x1337 (and x892 (not x904))))
(assert (x55 x1377))
(assert (= (ite (= x571 x787) x427 (x377 x787)) (x1414 x787)))
(assert (x55 x289))
(assert (x55 x1461))
(assert (=> (<= x554 10000) (= (x1567 x554) (x668 x554))))
(assert (= (and x763 x1204) x22))
(assert (x55 x658))
(assert (= (x1059 x864) (ite (and x314 (not x75) x756) (x1136 x864) (x73 x864))))
(assert (x55 x456))
(assert (= (x751 (x668 x920)) x920))
(assert (x872 x1537))
(assert (x55 x1244))
(assert (= (=> (and (= (= 0 x379) x763) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x379) (= (x923 (x668 x1286) (x1567 6) 0) x547) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x1402) (= (x923 (x668 x1402) x547 0) x1080) (<= 0 x379) (= x379 (x1333 x1080))) (and (=> (and (= x1286 x413) (not x763)) x650) (=> x763 x305))) x331))
(assert (=> (<= x704 10000) (= (x668 x704) (x1567 x704))))
(assert (x55 x759))
(assert (= (or (and x1121 (not x328)) (and (not x583) x183) (and x1246 x640)) x1366))
(assert (=> (<= x87 10000) (= (x1567 x87) (x668 x87))))
(assert (=> (>= 10000 x1321) (= (x668 x1321) (x1567 x1321))))
(assert (= (ite (and x1331 x1223) (x856 x744) (x568 x744)) (x1376 x744)))
(assert (= (ite (= x1401 x529) x1359 (x734 x529)) (x1348 x529)))
(assert (= (x856 x109) (ite (= x316 x109) x248 (x1153 x109))))
(assert (x55 x70))
(assert (x55 x454))
(assert (=> (>= 10000 x1244) (= (x668 x1244) (x1567 x1244))))
(assert (x55 x1182))
(assert (x55 x765))
(assert (= (x751 (x668 x401)) x401))
(assert (x55 x1478))
(assert (= (x856 x309) (ite (= x316 x309) x248 (x1153 x309))))
(assert (=> (<= x1326 10000) (= (x668 x1326) (x1567 x1326))))
(assert (x55 x968))
(assert (= x1244 (x751 (x668 x1244))))
(assert (x55 x383))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x751 (x1567 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= (ite (= x787 x1507) x806 (x162 x787)) (x377 x787)))
(assert (x55 x392))
(assert (x872 x298))
(assert (=> (>= 10000 x973) (= (x668 x973) (x1567 x973))))
(assert (x55 x102))
(assert (x55 x229))
(assert (=> (<= x512 10000) (= (x1567 x512) (x668 x512))))
(assert (= x910 (x751 (x668 x910))))
(assert (x55 x1490))
(assert (x55 x834))
(assert (x55 x850))
(assert (x55 x984))
(assert (x55 x733))
(assert (x55 x129))
(assert (x55 x971))
(assert (= (x81 x1525) (ite (and x954 x1349) (x349 x1525) (x969 x1525))))
(assert (= (x856 x1262) (ite (= x316 x1262) x248 (x1153 x1262))))
(assert (x55 x1046))
(assert (x55 x1185))
(assert (=> (<= x783 10000) (= (x668 x783) (x1567 x783))))
(assert (x55 x1494))
(assert (= (x1348 x1401) x1359))
(assert (x872 x834))
(assert (x872 x108))
(assert (= (x668 2514000705) (x1567 2514000705)))
(assert (= (ite (and x314 (not x75) x756) (x1136 x521) (x73 x521)) (x1059 x521)))
(assert (x872 x611))
(assert (x55 x1236))
(assert (x55 x430))
(assert (= x1231 (=> (= x1471 (> x1286 0)) (and (=> x1471 x879) (=> (not x1471) x1172)))))
(assert (x55 x961))
(assert (= x496 (or x1366 x565)))
(assert (x872 x758))
(assert (x872 x876))
(assert (x55 x571))
(assert (= (x751 (x668 x1499)) x1499))
(assert (= (x360 x426) (ite (= x1253 x426) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x426))))
(assert (x55 x1487))
(assert (x55 x787))
(assert (=> (<= x1524 10000) (= (x668 x1524) (x1567 x1524))))
(assert (= x481 (or (and (not x30) x22) (and x1311 x1361) (and (not x310) x1556))))
(assert (=> (>= 10000 x1286) (= (x1567 x1286) (x668 x1286))))
(assert (=> (<= x1233 10000) (= (x1567 x1233) (x668 x1233))))
(assert (x55 x429))
(assert (=> (<= x501 10000) (= (x1567 x501) (x668 x501))))
(assert (x55 x1347))
(assert (x872 x1465))
(assert (= x802 (x751 (x668 x802))))
(assert (= (x439 192) 0))
(assert (= (x751 (x668 x1496)) x1496))
(assert (= x398 (x751 (x668 x398))))
(assert (=> (<= x528 10000) (= (x1567 x528) (x668 x528))))
(assert (x55 x1502))
(assert (x55 x1113))
(assert (x872 x712))
(assert (= (x751 (x1567 2512682246)) 2512682246))
(assert (x55 x666))
(assert (x55 x370))
(assert (x55 x421))
(assert (x55 x180))
(assert (x55 x307))
(assert (x55 x507))
(assert (= (x751 (x668 x173)) x173))
(assert (x872 x501))
(assert (= (x360 x744) (ite (= x744 x1253) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x744))))
(assert (x55 x1181))
(assert (x55 x433))
(assert (=> (>= 10000 x569) (= (x668 x569) (x1567 x569))))
(assert (x55 x25))
(assert (= (x356 x1470) (ite (and x1420 (not x1208) x628 (not x1386)) (x844 x1470) (ite (and x628 (not x1420) (not x1208)) (x1446 x1470) (ite (and x628 x1208) (x1446 x1470) (x151 x1470))))))
(assert (= (x360 x1217) (ite (= x1217 x1253) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x1217))))
(assert (x55 x933))
(assert (= 3123789364 (x751 (x1567 3123789364))))
(assert (x872 x910))
(assert (= (x581 x529) (ite (= x150 x529) x68 (x1348 x529))))
(assert (= 0 (x439 x426)))
(assert (x55 x682))
(assert (= (x1567 468353030) (x668 468353030)))
(assert (x55 x409))
(assert (= (=> (and (= x603 (> x749 0)) (= (x198 (- x1286 1)) x749)) (and (=> (not x603) x1172) (=> x603 x835))) x1188))
(assert (=> (<= x555 10000) (= (x668 x555) (x1567 x555))))
(assert (x55 x518))
(assert (= (x668 115792089237316195423570985008687907853269984665640564039457) (x1567 115792089237316195423570985008687907853269984665640564039457)))
(assert (=> (<= x749 10000) (= (x1567 x749) (x668 x749))))
(assert (x55 x1170))
(assert (=> (>= 10000 x776) (= (x1567 x776) (x668 x776))))
(assert (x55 x426))
(assert (= (+ 1 (x751 x1109)) (x751 (x262 x1109 1))))
(assert (= (x751 (x668 x501)) x501))
(assert (x55 x424))
(assert (x872 x173))
(assert (x872 x440))
(assert (= (x1136 x426) (ite (and x314 x1466 (not x395) x1006 x221 x756) (x1176 x426) (ite (and x314 x1466 x756 (not x221) x1006) (x1002 x426) (ite (and (not x1466) x1006 x756 x314) (x789 x426) (ite (and (not x1006) x314 x756) (x360 x426) (x100 x426)))))))
(assert (x55 x87))
(assert (= x1245 (x751 (x668 x1245))))
(assert (= x1527 (x751 (x668 x1527))))
(assert (= (ite (and x499 x954) (x1133 x862) (ite (and (not x499) x954 x1497) (x1133 x862) (x358 x862))) (x1191 x862)))
(assert (= (=> (and (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x732) (<= 0 x807) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x537) (<= x1112 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x923 (x668 x537) x33 0) x189) (= (x923 (x668 x133) x820 0) x33) (= x874 (x511 (+ 64 x325))) (>= x1112 0) (or (and (= x1306 (x1407 1461501637330902918203684832716283019655932542975 x393)) (= x1137 x874) (= x357 x854) (= (x923 (x668 x76) x1549 0) x1111) (= x1513 (x1407 1461501637330902918203684832716283019655932542975 x765)) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x76) (= (* x416 x1544) x854) (= x174 (x923 (x668 x1306) x1318 0)) (= x531 (x923 (x668 x58) (x1567 7) 0)) (= (x923 (x668 x58) (x1567 3) 0) x1318) (= (x923 (x668 x1513) x174 0) x1082) (not x1497) (= x1549 (x923 (x668 x1524) x531 0)) (< (* x416 x1544) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x1524)) (and x1497 (= x43 (x923 (x668 x58) (x1567 7) 0)) (= x874 x1137) (= x1240 (x923 (x668 x811) x43 0)) (= x811 (x1407 1461501637330902918203684832716283019655932542975 x393)) (= x928 (x923 (x668 x173) x1240 0)) (= x173 (x1407 1461501637330902918203684832716283019655932542975 x765)))) (= x1112 (x453 x1109)) (= (x1038 x189) x732) (= x32 (x832 x70)) (= (x511 (+ 32 x325)) x70) (= (x923 (x668 x58) (x1567 7) 0) x820) (= (< x732 x32) x1190) (= x807 (x1130 x1445)) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x133) (or (and (= x1544 0) (not x1190)) (and (or (and (= x655 (x832 x70)) x476 (= x507 x655)) (and (not x476) (= x587 x507))) (or (and (not x1110) (= 604800 x1164) (not (< x507 x732)) (= x959 (x198 (- x507 x732))) (= x600 x1544) (= x600 (ite (< x959 604800) x959 604800))) (and (not (> x285 x507)) (= (x198 (- x507 x285)) x582) (= (x832 x325) x285) (= x582 x1544) x1110)) x1190 (= x476 (> x587 x432)) (= (= x732 0) x1110) (= (x832 x70) x432))) (>= x732 0) (= x1497 (= x1544 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x807) (= x1109 (x923 (x668 x58) (x1567 1) 0)) (not x499) (= (x262 x1109 1) x1445)) (and (= (x1407 1461501637330902918203684832716283019655932542975 x393) x63) (= (x923 (x668 x63) x459 0) x567) (= (x923 (x668 x58) (x1567 7) 0) x459) x499 (= (x923 (x668 x665) x567 0) x1406) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x665) (= x325 x1137))) (or (and (= x1183 (x923 (x668 x58) (x1567 9) 0)) (= x611 (x1407 1461501637330902918203684832716283019655932542975 x765)) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x528) (= x1096 (x923 (x668 x528) x1183 0)) (not x1349) (= x1005 (x923 (x668 x611) x1096 0))) x1349) (= x499 (= 0 x416)) (= (= 0 x218) x1349)) x46) x575))
(assert (= x1277 (x751 (x668 x1277))))
(assert (x55 x829))
(assert (= (ite (and x628 (not x1208) (not x1386) x1420) (x1212 x188) (ite (and (not x1208) (not x1420) x628) (x366 x188) (ite (and x1208 x628) (x366 x188) (x1568 x188)))) (x1521 x188)))
(assert (=> (<= x1417 10000) (= (x1567 x1417) (x668 x1417))))
(assert (= x729 (x751 (x668 x729))))
(assert (= x1224 (x751 (x668 x1224))))
(assert (x55 x1312))
(assert (= (ite (= x240 x188) x1429 (x1521 x240)) (x56 x240)))
(assert (= (x360 x1428) (ite (= x1428 x1253) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x1428))))
(assert (= (x751 (x668 x922)) x922))
(assert (= x1232 (and x314 x756)))
(assert (= x1258 (x751 (x668 x1258))))
(assert (= (x668 911411945) (x1567 911411945)))
(assert (= x1538 (=> (= x975 x1047) x1144)))
(assert (= (x668 69947311) (x1567 69947311)))
(assert (= (ite (= x281 x787) x139 (x789 x787)) (x1002 x787)))
(assert (= (ite (= x1262 x150) x68 (x1348 x1262)) (x581 x1262)))
(assert (= (x1446 x19) (ite (= x297 x19) x429 (x991 x19))))
(assert (x872 x200))
(assert (x55 x1479))
(assert (x872 x925))
(assert (= (or x1541 x746) x1434))
(assert (= (x439 x744) 0))
(assert (x55 x187))
(assert (x55 x875))
(assert (= (x360 x390) (ite (= x1253 x390) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x390))))
(assert (= (x751 (x668 x738)) x738))
(assert (= x617 (x751 (x668 x617))))
(assert (x55 x880))
(assert (= (x668 604800) (x1567 604800)))
(assert (= x1397 x900))
(assert (x55 x23))
(assert (x872 x721))
(assert (x55 x32))
(assert (= (ite (and (not x1208) (not x1386) x628 x1420) (x1212 x736) (ite (and x628 (not x1420) (not x1208)) (x366 x736) (ite (and x1208 x628) (x366 x736) (x1568 x736)))) (x1521 x736)))
(assert (x55 x1429))
(assert (x55 x1253))
(assert (x55 x1186))
(assert (x55 x1065))
(assert (= x1115 (x751 (x668 x1115))))
(assert (= x282 (=> (and (= (x1481 x1325) x231) (<= x759 1461501637330902918203684832716283019655932542975) (not (= 2764855426 x1500)) (not (> 2293535753 x1500)) (not (< x1500 2690754053)) (not (= x1500 2743102681)) (not (= 2690754053 x1500)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x231) (= (x923 (x668 x925) (x1567 5) 0) x52) (<= 0 x231) (= x1325 (x923 (x668 x759) x52 0)) (= x1500 2798343961) (> 2960351575 x1500) (= x231 x223) (> x524 0) (= (x1024 (x668 274184521717934524641157099916833587206)) x524)) (=> (and (= x880 x1527) (= x130 x865) (= x1562 x223)) x515))))
(assert (=> (<= x870 10000) (= (x668 x870) (x1567 x870))))
(assert (= (x1567 274184521717934524641157099916833587214) (x668 274184521717934524641157099916833587214)))
(assert (= (x856 x1428) (ite (= x1428 x316) x248 (x1153 x1428))))
(assert (x872 x1390))
(assert (x872 x970))
(assert (x55 x618))
(assert (x55 x1045))
(assert (x929 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x55 x1301))
(assert (x55 x157))
(assert (= (or (and x918 x1232) (and x980 x905)) x1147))
(assert (= x1248 (=> (and (= x373 x121) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x373) (<= 0 x373) (> x981 0) (= x1317 (x923 (x668 x712) x69 0)) (> 468353030 x64) (= (x1163 x1317) x373) (= x69 (x923 (x668 x1543) (x1567 10) 0)) (= x981 (x1024 (x668 274184521717934524641157099916833587206))) (<= x712 1461501637330902918203684832716283019655932542975) (> 911411945 x64) (< x64 2293535753) (= 69947311 x64)) (=> (and (= 0 x438) x914 (= 0 x891) (= x1186 x1268) (= x1236 x840) (= (<= x585 x462) x914) (= x587 x462) (= x919 x121) (= x871 x1491) (= x518 x919) (= x633 (= 0 x871)) (= x157 0) x202 (= x254 (and x181 x633)) (= x880 x1536) (= x130 x1233) (= x585 x1236) (= (= 0 x518) x181) (= (or (not x1451) x254) x202) (= (= 0 x840) x1451)) x1362))))
(assert (x55 x1560))
(assert (x872 x1488))
(assert (x55 x121))
(assert (x55 x260))
(assert (= (or (and x752 x475) x1003 (and x892 x904)) x756))
(assert (x55 x811))
(assert (x55 x972))
(assert (= x590 (x751 (x668 x590))))
(assert (=> (<= x661 10000) (= (x668 x661) (x1567 x661))))
(assert (x872 x811))
(assert (= (ite (and (not x1386) x1420 (not x1208) x628) (x844 x521) (ite (and (not x1420) (not x1208) x628) (x1446 x521) (ite (and x628 x1208) (x1446 x521) (x151 x521)))) (x356 x521)))
(assert (=> (>= 10000 x802) (= (x668 x802) (x1567 x802))))
(assert (x55 x1443))
(assert (= (x751 (x668 x87)) x87))
(assert (x55 x340))
(assert (x55 x723))
(assert (x55 x101))
(assert (x55 x952))
(assert (= (and x1570 x1030) x1023))
(assert (x55 x110))
(assert (= (x1348 x1179) (ite (= x1401 x1179) x1359 (x734 x1179))))
(assert (x929 x795))
(assert (x55 x2))
(assert (x872 x238))
(assert (x55 x740))
(assert (= (x898 x98) (ite (and x499 x954) (x1455 x98) (ite (and x1497 x954 (not x499)) (x1205 x98) (x367 x98)))))
(assert (= (x356 x787) (ite (and x1420 (not x1386) (not x1208) x628) (x844 x787) (ite (and (not x1208) x628 (not x1420)) (x1446 x787) (ite (and x1208 x628) (x1446 x787) (x151 x787))))))
(assert (= (x1376 x605) (ite (and x1331 x1223) (x856 x605) (x568 x605))))
(assert (x55 x1561))
(assert (= (x751 (x1567 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x55 x1149))
(assert (x872 x1433))
(assert (x55 x590))
(assert (x55 x1209))
(assert (x872 x669))
(assert (= (ite (= x323 x1428) x762 (x1002 x1428)) (x1176 x1428)))
(assert (x872 x1528))
(assert (= (ite (= x787 x421) x338 (x360 x787)) (x789 x787)))
(assert (x55 x1056))
(assert (x872 x1306))
(assert (x55 x989))
(assert (x872 x512))
(assert (x55 x212))
(assert (x55 x797))
(assert (x55 x466))
(assert (= (x1212 x736) (ite (= x950 x736) x207 (x366 x736))))
(assert (x872 x1288))
(assert (x55 x35))
(assert (=> (<= x961 10000) (= (x1567 x961) (x668 x961))))
(assert (= (x356 x309) (ite (and x628 (not x1208) (not x1386) x1420) (x844 x309) (ite (and x628 (not x1420) (not x1208)) (x1446 x309) (ite (and x1208 x628) (x1446 x309) (x151 x309))))))
(assert (= (x1134 x744) (ite (and x241 x1315 x1505 x185 x637 (not x1139)) (x1291 x744) (ite (and x185 x1315 (not x637) x1505 x241) (x1414 x744) (ite (and (not x1315) x1505 x241 x185) (x377 x744) (ite (and x241 (not x185) x1505) (x162 x744) (x1127 x744)))))))
(assert (x55 x1000))
(assert (= 2835717307 (x751 (x1567 2835717307))))
(assert (x55 x380))
(assert (x55 x256))
(assert (=> (>= 10000 x729) (= (x668 x729) (x1567 x729))))
(assert (x55 x64))
(assert (x55 x541))
(assert (= (x668 26959946667150639794667015087019630673637144422540572481103610249215) (x1567 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= 0 (x439 x864)))
(assert (= x200 (x751 (x668 x200))))
(assert (x55 x216))
(assert (x929 1461501637330902918203684832716283019655932542975))
(assert (x55 x1300))
(assert (= (x439 x390) 0))
(assert (= (x789 x426) (ite (= x426 x421) x338 (x360 x426))))
(assert (x55 x233))
(assert (x55 x828))
(assert (= x674 (x751 (x668 x674))))
(assert (= (and x310 x1556) x1204))
(assert (x55 x539))
(assert (x55 x953))
(assert (= (x581 x256) (ite (= x150 x256) x68 (x1348 x256))))
(assert (x55 x1137))
(assert (= (ite (and x1505 x241 (not x1229)) (x1134 x744) (x710 x744)) (x1142 x744)))
(assert (x55 x1435))
(assert (x55 x427))
(assert (= (x1348 x521) (ite (= x521 x1401) x1359 (x734 x521))))
(assert (x55 x762))
(assert (x55 x878))
(assert (= (and x30 x22) x1311))
(assert (x55 x1327))
(assert (x55 x1124))
(assert (= (x1567 2061678023) (x668 2061678023)))
(assert (= x621 (x751 (x668 x621))))
(assert (x55 x399))
(assert (x872 x430))
(assert (= 0 (x439 x150)))
(assert (= 2690754053 (x751 (x1567 2690754053))))
(assert (= (ite (= x521 x281) x139 (x789 x521)) (x1002 x521)))
(assert (= (x751 (x1567 2798343961)) 2798343961))
(assert (= (x668 2939843472) (x1567 2939843472)))
(assert (x872 x572))
(assert (= (x751 (x668 x253)) x253))
(assert (= (x1376 x1428) (ite (and x1331 x1223) (x856 x1428) (x568 x1428))))
(assert (x55 x926))
(assert (= (or x1196 (and x169 (not x888))) x1003))
(assert (x55 x104))
(assert (x55 x1098))
(assert (x55 x764))
(assert (x55 x178))
(assert (x872 274184521717934524641157099916833587218))
(assert (x55 x422))
(assert (x55 x1031))
(assert (= x280 (=> (and (= x566 (x923 (x668 x103) x47 0)) (<= x570 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x570) x480) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x103) (>= x570 0) (= (x291 x566) x570) (= (x923 (x668 x58) (x1567 6) 0) x47)) (and (=> (and (= x1047 x58) (not x480)) x1538) (=> x480 x1441)))))
(assert (=> (<= x1543 10000) (= (x1567 x1543) (x668 x1543))))
(assert (= x279 (and (not x752) x475)))
(assert (= (x581 x864) (ite (= x864 x150) x68 (x1348 x864))))
(assert (x55 x1321))
(assert (= (ite (= x337 x1401) x1359 (x734 x337)) (x1348 x337)))
(assert (=> (>= 10000 x1488) (= (x1567 x1488) (x668 x1488))))
(assert (= (=> (= (> x1286 0) x310) (and (=> (not x310) x90) (=> x310 x331))) x1158))
(assert (x55 x355))
(assert (= (ite (= x1179 x571) x427 (x377 x1179)) (x1414 x1179)))
(assert (x55 x1254))
(assert (= x133 (x751 (x668 x133))))
(assert (= (x789 x316) (ite (= x316 x421) x338 (x360 x316))))
(assert (= (x751 (x668 x1132)) x1132))
(assert (=> (>= 10000 x576) (= (x1567 x576) (x668 x576))))
(assert (x55 x1410))
(assert (= (x751 (x668 x238)) x238))
(assert (= (x1348 x744) (ite (= x744 x1401) x1359 (x734 x744))))
(assert (x55 x57))
(assert (x55 x1126))
(assert (= (x668 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1567 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x55 x612))
(assert (=> (>= 10000 x865) (= (x668 x865) (x1567 x865))))
(assert (x55 x1140))
(assert (= (x1446 x1217) (ite (= x1217 x297) x429 (x991 x1217))))
(assert (x55 x569))
(assert (x55 x1143))
(assert (= x16 x488))
(assert (x872 x776))
(assert true)
(assert (= (x1567 2764855426) (x668 2764855426)))
(assert (= x841 (x751 (x668 x841))))
(assert (x55 x1374))
(assert (x55 x864))
(assert (x55 x423))
(assert (= x321 (=> (and x1197 (= 2939843472 x1126) (= (< 0 (x1024 (x668 274184521717934524641157099916833587218))) x737) (= 5 x1138) (>= x394 0) (>= 1461501637330902918203684832716283019655932542975 x880) (= x1356 x105) (= false x107) x979 (>= 1461501637330902918203684832716283019655932542975 x140) (>= x140 0) x737 (= x979 (> (x1024 (x668 274184521717934524641157099916833587206)) 0)) (<= 0 x880) (= x394 x433) (= false x985) (= x1197 (< 0 (x1024 (x668 274184521717934524641157099916833587214)))) (<= 0 x1454) (= (x849 (x668 274184521717934524641157099916833587218)) x1478) (>= x1268 0) (= (x849 (x668 274184521717934524641157099916833587214)) x1454) (>= x1478 0) (<= x1268 1461501637330902918203684832716283019655932542975) (= x771 false) (>= x878 0) (= x1377 x880) (<= x1356 1461501637330902918203684832716283019655932542975) (= x130 x1390) (>= x1356 0) (= (x849 (x668 274184521717934524641157099916833587206)) x878) (= false x1515) (<= x394 1461501637330902918203684832716283019655932542975)) x716)))
(assert (x55 x442))
(assert (x55 x687))
(assert (=> (<= x816 10000) (= (x1567 x816) (x668 x816))))
(assert (x872 x1320))
(assert (= (x789 x864) (ite (= x421 x864) x338 (x360 x864))))
(assert (= (x1567 2293535753) (x668 2293535753)))
(assert (= x446 (x751 (x668 x446))))
(assert (= (ite (and x1006 x221 x314 (not x395) x1466 x756) (x1176 x316) (ite (and x756 (not x221) x314 x1006 x1466) (x1002 x316) (ite (and (not x1466) x314 x756 x1006) (x789 x316) (ite (and (not x1006) x314 x756) (x360 x316) (x100 x316))))) (x1136 x316)))
(assert (= (x356 x1179) (ite (and x1420 (not x1208) (not x1386) x628) (x844 x1179) (ite (and (not x1208) (not x1420) x628) (x1446 x1179) (ite (and x628 x1208) (x1446 x1179) (x151 x1179))))))
(assert (= (x1136 x1262) (ite (and x314 x221 x756 x1006 (not x395) x1466) (x1176 x1262) (ite (and x314 x756 (not x221) x1466 x1006) (x1002 x1262) (ite (and x756 (not x1466) x314 x1006) (x789 x1262) (ite (and x314 x756 (not x1006)) (x360 x1262) (x100 x1262)))))))
(assert (= (x751 (x668 x1326)) x1326))
(assert (x55 x1486))
(assert (= (x751 (x668 x896)) x896))
(assert (x55 x1352))
(assert (x55 x574))
(assert (= 0 (x439 x787)))
(assert (= x488 x77))
(assert (x55 x570))
(assert (= x834 (x751 (x668 x834))))
(assert (x55 x1125))
(assert (x55 x1259))
(assert (= (x439 x1217) 0))
(assert (x55 x896))
(assert (x55 x962))
(assert (= (x751 (x668 x661)) x661))
(assert (= (ite (= x309 x421) x338 (x360 x309)) (x789 x309)))
(assert (x55 x1072))
(assert (=> (<= x876 10000) (= (x668 x876) (x1567 x876))))
(assert (x55 x1073))
(assert (x55 x1280))
(assert (= (ite (and x1466 x221 x1006 (not x395) x314 x756) (x1176 x864) (ite (and (not x221) x756 x1006 x314 x1466) (x1002 x864) (ite (and x756 x1006 (not x1466) x314) (x789 x864) (ite (and x314 x756 (not x1006)) (x360 x864) (x100 x864))))) (x1136 x864)))
(assert (= x1141 (x751 (x668 x1141))))
(assert (= (ite (and x31 x628) (x652 x1325) (x1097 x1325)) (x843 x1325)))
(assert (= (ite (and (not x1208) x628 x1420 (not x1386)) (x844 x19) (ite (and x628 (not x1208) (not x1420)) (x1446 x19) (ite (and x628 x1208) (x1446 x19) (x151 x19)))) (x356 x19)))
(assert (x55 x783))
(assert (x55 x1496))
(assert (x55 x259))
(assert (= x1223 x182))
(assert (= x619 (=> (and (= x247 (< x882 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x276 (x849 (x668 274184521717934524641157099916833587206))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1364 (x668 x225))) x810) x810 (= (x1364 (x668 x225)) x491) (= (<= 0 x276) x315) x315 x247 (= x1194 (x849 (x668 274184521717934524641157099916833587206))) (= x110 x104) (= (x849 (x668 x225)) x882) (= x918 (= 274184521717934524641157099916833587218 x225))) (and (=> (and (= (x923 (x668 x1277) (x1567 1) 0) x1050) (not (= 826074471 x953)) (= x1351 (or (> x345 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x345) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x345))))) (> x370 0) (= x311 x944) (>= 1461501637330902918203684832716283019655932542975 x1277) (= x1143 1) (= (x923 (x668 x1277) (x1567 1) 0) x193) (= x965 (x923 (x668 274184521717934524641157099916833587206) (x1567 1) 0)) (= x311 (x1419 x1050)) (= x1220 32) (= (x923 (x668 274184521717934524641157099916833587206) (x1567 1) 0) x863) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x933 x311)) (= x23 x217) (not (= x953 649617121)) (= x1373 x827) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x933 x311)) x885) (not (< x953 649617121)) (= (x1309 x863) x620) (= x1277 x971) (= x61 (> x933 x620)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x620) x918 (= x1073 x1277) (not x61) (not x1351) (= x1385 x104) (= x345 (x198 (- x1385 4))) (<= 0 x311) (not (= x953 2514000705)) (= (x1024 (x668 274184521717934524641157099916833587218)) x370) (= x1385 68) (= x1300 274184521717934524641157099916833587206) (not (= x953 1889567281)) (= x933 x217) (not x885) (= (+ x944 x278) x1076) (= x388 (> x217 x620)) (= x940 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x1385 4)) (= 274184521717934524641157099916833587206 x1327) (not x388) (= 2835717307 x953) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311) (>= x620 0) (= x278 x933) (= x1422 (x198 (- x620 x217)))) x94) (=> (not x918) x113)))))
(assert (x872 x133))
(assert (= 1968616202 (x751 (x1567 1968616202))))
(assert (= (x751 (x668 x1449)) x1449))
(assert (x872 x1284))
(assert (=> (>= 10000 x200) (= (x668 x200) (x1567 x200))))
(assert (= (x1059 x505) (ite (and x314 (not x75) x756) (x1136 x505) (x73 x505))))
(assert (= (ite (= x1217 x316) x248 (x1153 x1217)) (x856 x1217)))
(assert (x55 x704))
(assert (x55 x1524))
(assert (= (x1567 2743102681) (x668 2743102681)))
(assert (x55 x545))
(assert (= x1565 (x751 (x668 x1565))))
(assert (= x1441 (=> (and (= x275 (> x253 0)) (= x253 (x198 (- x58 1)))) (and (=> (not x275) x1051) (=> x275 x274)))))
(assert (x1234 x1393 x391 x163 x860))
(assert (x872 274184521717934524641157099916833587214))
(assert (x872 x58))
(assert (x872 x528))
(assert (= (x1521 x873) (ite (and (not x1208) x628 x1420 (not x1386)) (x1212 x873) (ite (and x628 (not x1420) (not x1208)) (x366 x873) (ite (and x628 x1208) (x366 x873) (x1568 x873))))))
(assert (x55 x1123))
(assert (x55 x976))
(assert (x55 x738))
(assert (= (=> (and (= x646 (x923 (x668 x1565) x544 0)) (= x643 (x1407 1461501637330902918203684832716283019655932542975 x765)) (>= x233 0) (or (and (not x1208) (= (< 0 x248) x1420) (= x1495 0) (= x444 (div x120 x233)) (= 1 x187) (or (not x1420) (and (= x1426 (x923 (x668 x1115) x1247 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x142 x444)) (= x886 (x923 (x668 x58) (x1567 11) 0)) (= x1542 (x366 x995)) (> x248 0) (= (x923 (x668 x58) (x1567 4) 0) x1247) (= x152 x1226) (= x1258 (x1184 x346)) (= x894 (x923 (x668 x1433) x955 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x142) (or (and (= x445 (+ x1095 x1018)) (= (x1184 x350) x590) (< 1 x436) (< 1 x248) (= (x844 x1443) x129) (< 1 x248) (= x165 (x923 (x668 x58) (x1567 4) 0)) (>= x1550 0) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x200) (= x989 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1550) (not x1174) (< (* x560 x444) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x37 (x923 (x668 x58) (x1567 4) 0)) (= (x511 (+ x24 192)) x1443) (< 1 x248) (= x1174 (> x248 2)) (= (* x560 x444) x479) (= x1415 (+ x1427 x579)) (>= 1461501637330902918203684832716283019655932542975 x590) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x560) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1413 x129)) (= (x511 (+ x1411 64)) x350) (= x72 (x923 (x668 x1288) x838 0)) (= (x844 x316) x436) (= (x1212 x318) x1550) (<= x989 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x989 (x1212 x72)) (= x1413 (div x479 1000000000000000000)) (= (x1184 x350) x1288) (= (x923 (x668 x58) (x1567 11) 0) x164) (= x300 (x923 (x668 x506) x165 0)) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x545) (= x1018 x1550) (= x1321 (x1184 x350)) (>= 1461501637330902918203684832716283019655932542975 x1321) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x1261) (= x1095 x409) (<= x1288 1461501637330902918203684832716283019655932542975) (= (x923 (x668 x1261) x482 0) x1403) (= x838 (x923 (x668 x545) x300 0)) (= x579 x1413) (<= 0 x560) (= x560 (x1257 x1322)) (= x129 x1427) (= (x923 (x668 x1321) x159 0) x1322) (>= x989 0) (= (x923 (x668 x590) x1403 0) x318) (= x482 (x923 (x668 x758) x37 0)) (= x506 (x1407 1461501637330902918203684832716283019655932542975 x393)) (= x159 (x923 (x668 x200) x164 0)) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x758) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1550 x409)) x1386) (not x1386)) (<= x1226 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x923 (x668 x669) x956 0) x955) (= x605 (x511 (+ x24 160))) (<= x621 1461501637330902918203684832716283019655932542975) (>= x142 0) (= x1225 (x923 (x668 x1168) x990 0)) (= (x1184 x346) x621) (= (x923 (x668 x87) x1426 0) x273) (<= x1258 1461501637330902918203684832716283019655932542975) (>= x1226 0) (= x495 x409) (<= 0 x1542) (= x1226 (x366 x950)) (= (x1446 x605) x952) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x49) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x1433) (= x990 (x923 (x668 x49) x886 0)) (= x1168 (x1184 x346)) (= x87 (x1407 1461501637330902918203684832716283019655932542975 x765)) (= (+ x4 x1171) x1301) (= (x923 (x668 x1258) x273 0) x950) (> x248 0) x1420 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1347 x952)) (= (x1446 x316) x997) (> x997 0) (= (+ x495 x152) x207) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1542) (= x956 (x923 (x668 x58) (x1567 4) 0)) (= x4 x1347) (= x1171 x952) (= 0 x1542) (= (x923 (x668 x621) x894 0) x995) (< (+ x1226 x409) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (> x248 1) x1386) (= x669 (x1407 1461501637330902918203684832716283019655932542975 x393)) (> x248 0) (= x1347 (div x54 1000000000000000000)) (= (* x444 x142) x54) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x1115) (= x346 x93) (>= 1461501637330902918203684832716283019655932542975 x1168) (= (x1257 x1225) x142))) (= x120 (mod (* x409 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< 0 x233) (= (ite (> x409 115792089237316195423570985008687907853269984665640564039457) 1 0) x1001) (= (x1407 x187 x1001) x1495)) x1208) (= (x923 (x668 x783) x137 0) x1029) (<= x233 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x544 (x923 (x668 x58) (x1567 3) 0)) (= (= x723 0) x31) (= (x291 x1029) x2) (= x862 (x923 (x668 x643) x646 0)) (= (x843 x1071) x233) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x1565) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2) (= x429 (x1130 x219)) (= x1249 (x453 x946)) (= x137 (x923 (x668 x58) (x1567 6) 0)) (<= 0 x2) (<= x429 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x392 (x1446 x297)) (= x1071 (x923 (x668 x308) x846 0)) (= (x511 (+ 32 x1137)) x297) (or x786 (and (= (x923 (x668 x576) x1506 0) x851) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x576) (= (x923 (x668 x58) (x1567 10) 0) x1506) (not x786))) (<= x1249 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1396 (> x392 x2)) (= x219 (x262 x946 1)) (= (x923 (x668 x58) (x1567 1) 0) x946) (<= 0 x429) (or (and (= x238 (x1407 1461501637330902918203684832716283019655932542975 x393)) (= x632 x1523) (= x644 (x923 (x668 x58) (x1567 5) 0)) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x320) (= (x923 (x668 x238) x1012 0) x930) (not x31) (= (* x1293 x723) x1523) (= x1012 (x923 (x668 x58) (x1567 6) 0)) (= (x923 (x668 x320) x644 0) x1117) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x723 x1293))) (and (= x760 (x923 (x668 x58) (x1567 6) 0)) x31 (= (x923 (x668 x1395) x760 0) x381) (= x1395 (x1407 1461501637330902918203684832716283019655932542975 x393)))) (or (and (= x1017 (x1446 x297)) x1396 (or (and x808 (= x723 x1056) (= (x1446 x1137) x224) (not (> x224 x536)) (= x1056 (x198 (- x536 x224)))) (and (= 604800 x102) (not x808) (= x723 x1357) (= (x198 (- x536 x2)) x741) (not (> x2 x536)) (= x1357 (ite (< x741 604800) x741 604800)))) (= x808 (= 0 x2)) (or (and (not x1440) (= x587 x536)) (and x1440 (= x1460 x536) (= x1460 (x1446 x297)))) (= x1440 (> x587 x1017))) (and (= 0 x723) (not x1396))) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x783) (= (= x423 0) x786) (= (x1191 x862) x409) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x409) (= x308 (x1407 1461501637330902918203684832716283019655932542975 x393)) (= x1208 (= 0 x409)) (= x543 (x511 (+ x1137 64))) (>= x409 0) (= x846 (x923 (x668 x58) (x1567 5) 0)) (>= x1249 0)) x986) x1241))
(assert (= (ite (and x1331 x1223) (x856 x1179) (x568 x1179)) (x1376 x1179)))
(assert (x55 x922))
(assert (= (ite (= x605 x19) x1301 (x1446 x19)) (x844 x19)))
(assert (= (ite (and x314 (not x75) x756) (x1136 x787) (x73 x787)) (x1059 x787)))
(assert (x55 x741))
(assert (= (ite (and x1232 x918) (x1421 x1262) (x270 x1262)) (x211 x1262)))
(assert (x55 x1224))
(assert (x872 x662))
(assert (=> (<= x610 10000) (= (x668 x610) (x1567 x610))))
(assert (= (x1176 x1179) (ite (= x323 x1179) x762 (x1002 x1179))))
(assert (= (ite (= x297 x150) x429 (x991 x150)) (x1446 x150)))
(assert (x55 x548))
(assert (= (x1376 x529) (ite (and x1223 x1331) (x856 x529) (x568 x529))))
(assert (= x1007 (or (and x1269 x1260) (and (not x275) x6) (and (not x41) x1303))))
(assert (x872 x1432))
(assert (= (ite (= x297 x787) x429 (x991 x787)) (x1446 x787)))
(assert (= (=> (and (> 2293535753 x625) (= x1034 (x923 (x668 x947) x1517 0)) (= x1200 (x923 (x668 x1044) x1034 0)) (<= x1044 1461501637330902918203684832716283019655932542975) (= x485 x1352) (not (= x625 69947311)) (< 0 x658) (> 468353030 x625) (not (= 87118632 x625)) (= (x349 x1200) x1352) (= 142201243 x625) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1352) (>= x1352 0) (<= x947 1461501637330902918203684832716283019655932542975) (= x658 (x1024 (x668 274184521717934524641157099916833587206))) (< x625 911411945) (= (x923 (x668 x729) (x1567 9) 0) x1517)) (=> (and (= x130 x1388) (= x1264 x1268) (= x485 x74) (= x880 x802)) x899)) x132))
(assert (x55 x1233))
(assert (x872 x1277))
(assert (x55 x431))
(assert (x55 x1284))
(assert (x55 x973))
(assert (= (x668 759532456) (x1567 759532456)))
(assert (=> (<= x1388 10000) (= (x1567 x1388) (x668 x1388))))
(assert (x55 x1042))
(assert (= (ite (and x786 x628) (x1163 x1438) (x222 x1438)) (x1405 x1438)))
(assert (= (x1521 x240) (ite (and (not x1208) (not x1386) x628 x1420) (x1212 x240) (ite (and (not x1208) x628 (not x1420)) (x366 x240) (ite (and x628 x1208) (x366 x240) (x1568 x240))))))
(assert (= (=> (and (= 759532456 x1098) (= (x923 (x668 x1233) (x1567 7) 0) x91) (not (= 468353030 x1098)) (>= 1461501637330902918203684832716283019655932542975 x1186) (= (x923 (x668 x1536) x91 0) x88) (not (= 635128645 x1098)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1520) (<= 0 x1520) (= x1520 (x1038 x191)) (not (> 468353030 x1098)) (> 2293535753 x1098) (<= x1536 1461501637330902918203684832716283019655932542975) (= x36 x1520) (= x191 (x923 (x668 x1186) x88 0)) (= (x1024 (x668 274184521717934524641157099916833587206)) x805) (> 911411945 x1098) (< 0 x805)) (=> (and (= x947 x880) (= x36 x25) (= x130 x729) (= x1268 x1044)) x132)) x1362))
(assert (x55 x36))
(assert (x55 x502))
(assert (x55 x172))
(assert (= x204 (=> (and (= x177 (x923 (x668 x964) x40 0)) (= (x923 (x668 x896) (x1567 6) 0) x40) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x964) (<= x785 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1333 x177) x785) (>= x785 0) (= x1361 (= x785 0))) (and (=> (and (not x1361) (= x896 x413)) x650) (=> (and (= (> x613 0) x408) x1361 (not x408) (= (x198 (- x896 1)) x613)) x90)))))
(assert (=> (<= x1284 10000) (= (x1567 x1284) (x668 x1284))))
(assert (= x1093 x954))
(assert (= (x668 1986467848) (x1567 1986467848)))
(assert (x872 x1321))
(assert (x55 x505))
(assert (= (x162 x1179) (ite (= x1179 x696) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x389 x1179))))
(assert (x55 x661))
(assert (x55 x907))
(assert (x872 x537))
(assert (x55 x1345))
(assert (x55 x512))
(assert (= (x751 (x668 x319)) x319))
(assert (x55 x308))
(assert (= (ite (and x1331 x1223) (x856 x1443) (x568 x1443)) (x1376 x1443)))
(assert (x872 x1132))
(assert (x55 x1078))
(assert (= (ite (and x628 x31) (x1503 x199) (x387 x199)) (x1333 x199)))
(assert (=> (>= 10000 x1340) (= (x1567 x1340) (x668 x1340))))
(assert (x872 x783))
(assert (x55 x657))
(assert (= (x1002 x529) (ite (= x529 x281) x139 (x789 x529))))
(assert (x55 x780))
(assert (x55 x1138))
(assert (x55 x1214))
(assert (x872 x1377))
(assert (x55 x701))
(assert (x55 x1053))
(assert (= (x1567 826074471) (x668 826074471)))
(assert (x55 x186))
(assert (= 0 (x439 x529)))
(assert (= (x211 x316) (ite (and x918 x1232) (x1421 x316) (x270 x316))))
(assert (x55 x1245))
(assert (x55 x695))
(assert (x55 x436))
(assert (= (x751 (x668 x1069)) x1069))
(assert (= (x1348 x19) (ite (= x19 x1401) x1359 (x734 x19))))
(assert (x55 x320))
(assert (= (x439 x309) 0))
(assert (x55 x576))
(assert (x55 x1522))
(assert (x55 x1106))
(assert (x55 x1016))
(assert (x55 x994))
(assert (= 1461501637330902918203684832716283019655932542975 (x751 (x1567 1461501637330902918203684832716283019655932542975))))
(assert (= (x751 (x1567 468353030)) 468353030))
(assert (x55 x1129))
(assert (x55 x747))
(assert (x872 x340))
(assert (= (ite (and (not x1208) x628 x1420 (not x1386)) (x844 x426) (ite (and x628 (not x1420) (not x1208)) (x1446 x426) (ite (and x628 x1208) (x1446 x426) (x151 x426)))) (x356 x426)))
(assert (x55 x667))
(assert (= (x439 x521) 0))
(assert (x55 x1008))
(assert (x55 x1380))
(assert (x872 x1499))
(assert (x872 x1053))
(assert (x872 x1186))
(assert (x55 x473))
(assert (= (x856 x521) (ite (= x316 x521) x248 (x1153 x521))))
(assert (=> (<= x1537 10000) (= (x668 x1537) (x1567 x1537))))
(assert (= (x211 x505) (ite (and x1232 x918) (x1421 x505) (x270 x505))))
(assert (x872 x407))
(assert (= (x1567 2868243304) (x668 2868243304)))
(assert (x55 x171))
(assert (= x400 (x751 (x668 x400))))
(assert (= 604800 (x751 (x1567 604800))))
(assert (= (x1446 x1137) (ite (= x1137 x297) x429 (x991 x1137))))
(assert (x55 x139))
(assert (x55 x218))
(assert (= (x360 x316) (ite (= x316 x1253) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x316))))
(assert (= (x751 (x668 x749)) x749))
(assert (= (x211 x390) (ite (and x1232 x918) (x1421 x390) (x270 x390))))
(assert (= 0 (x439 x1428)))
(assert (= (x1212 x443) (ite (= x950 x443) x207 (x366 x443))))
(assert (= (ite (= x426 x297) x429 (x991 x426)) (x1446 x426)))
(assert (x55 x1164))
(assert (= (ite (= x1401 x316) x1359 (x734 x316)) (x1348 x316)))
(assert (x55 x130))
(assert (=> (>= 10000 x1320) (= (x1567 x1320) (x668 x1320))))
(assert (= (x1446 x109) (ite (= x297 x109) x429 (x991 x109))))
(assert (= (x1002 x1179) (ite (= x281 x1179) x139 (x789 x1179))))
(assert (x55 x231))
(assert (= (x751 (x668 x49)) x49))
(assert (= (x1567 2798343961) (x668 2798343961)))
(assert (x55 x14))
(assert (x55 x1357))
(assert (x872 x1395))
(assert (x55 x925))
(assert (= (x56 x443) (ite (= x188 x443) x1429 (x1521 x443))))
(assert (x55 x283))
(assert (=> (<= x1536 10000) (= (x668 x1536) (x1567 x1536))))
(assert (x872 x973))
(assert (x55 x1442))
(assert (=> (<= x867 10000) (= (x1567 x867) (x668 x867))))
(assert (x872 x1244))
(assert (x872 x1527))
(assert (x55 x18))
(assert (= x555 (x751 (x668 x555))))
(assert (= (x789 x1262) (ite (= x1262 x421) x338 (x360 x1262))))
(assert (x872 x284))
(assert (= (x1567 142201243) (x668 142201243)))
(assert (= 635128645 (x751 (x1567 635128645))))
(assert (= (x789 x505) (ite (= x505 x421) x338 (x360 x505))))
(assert (x872 x1168))
(assert (= (ite (= x571 x744) x427 (x377 x744)) (x1414 x744)))
(assert (= (x751 (x262 x8 1)) (+ 1 (x751 x8))))
(assert (x55 x1249))
(assert (x55 x1536))
(assert (x55 x1155))
(assert (x55 x344))
(assert (= (ite (= x316 x297) x429 (x991 x316)) (x1446 x316)))
(assert (x872 x215))
(assert (= x1269 (and x6 x275)))
(assert (x55 x1330))
(assert (x55 x1385))
(assert (= (ite (= x605 x1262) x1301 (x1446 x1262)) (x844 x1262)))
(assert (x55 x446))
(assert (x55 x580))
(assert (= (=> (and (= (x460 x390) x34) (or (and (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x382) (and (= true (<= x382 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x382 32)))) (= x38 x466) (> x38 0) (= x1262 (x511 (+ 32 x390))) x1436 (= (x460 x390) x382) (= x1169 (= 0 x38)) (= x38 (x460 x1262)) (= (ite x719 1 0) x466) (= (not x1169) x719)) (not x1436)) (= x1035 (x1424 (x668 x225))) (not (= 0 x1143)) (or (and (= (x511 (+ x1220 63)) x1393) (= (x511 (+ x290 x1453)) x839) (not x471) (= (x511 (+ x1312 96)) x1214) (= (x1407 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1393) x290) (= x1453 x390) (= x839 x1408)) (and (= x1453 x1408) (= 96 x390) x471)) (= x1533 (x170 (x668 274184521717934524641157099916833587206))) x1275 (= (= 0 x1220) x471) (= (< (x170 (x668 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1275) (= x1436 (< 0 x34))) x29) x94))
(assert (x872 x1264))
(assert (x55 x798))
(assert (= (x1333 x177) (ite (and x628 x31) (x1503 x177) (x387 x177))))
(assert (x55 x711))
(assert (= x108 (x751 (x668 x108))))
(assert (x55 x554))
(assert (x55 x795))
(assert (x55 x941))
(assert (= x1536 (x751 (x668 x1536))))
(assert (x872 x1563))
(assert (x55 x964))
(assert (=> (<= x401 10000) (= (x1567 x401) (x668 x401))))
(assert (x55 x1268))
(assert (x872 x1536))
(assert (x55 x826))
(assert (= x1264 (x751 (x668 x1264))))
(assert (x872 x643))
(assert (= (ite (= x390 x323) x762 (x1002 x390)) (x1176 x390)))
(assert (x872 x1259))
(assert (=> (<= x1258 10000) (= (x668 x1258) (x1567 x1258))))
(assert (=> (>= 10000 x1101) (= (x668 x1101) (x1567 x1101))))
(assert (= (ite (and (not x1208) x1420 (not x1386) x628) (x844 x316) (ite (and (not x1420) x628 (not x1208)) (x1446 x316) (ite (and x628 x1208) (x1446 x316) (x151 x316)))) (x356 x316)))
(assert (= (ite (= x426 x1401) x1359 (x734 x426)) (x1348 x426)))
(assert (= x42 (x751 (x668 x42))))
(assert (x144 x180 x999))
(assert (x929 x1125))
(assert (= x1316 (x751 (x668 x1316))))
(assert (=> (<= x740 10000) (= (x1567 x740) (x668 x740))))
(assert (= (ite (and x628 x786) (x1163 x458) (x222 x458)) (x1405 x458)))
(assert (= (ite (= x864 x605) x1301 (x1446 x864)) (x844 x864)))
(assert (x872 x1543))
(assert (= (ite (= x505 x150) x68 (x1348 x505)) (x581 x505)))
(assert (x872 x1043))
(assert (= (ite (= x744 x281) x139 (x789 x744)) (x1002 x744)))
(assert (= (x751 (x668 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (= 2743102681 (x751 (x1567 2743102681))))
(assert (x55 x891))
(assert (= x149 (x751 (x668 x149))))
(assert (= (x211 x864) (ite (and x1232 x918) (x1421 x864) (x270 x864))))
(assert (= (x751 (x668 x1321)) x1321))
(assert (x872 x1326))
(assert (=> (>= 10000 x1402) (= (x668 x1402) (x1567 x1402))))
(assert (= (ite (= x505 x281) x139 (x789 x505)) (x1002 x505)))
(assert (= x1340 (x751 (x668 x1340))))
(assert (x55 x58))
(assert (= x327 (x751 (x668 x327))))
(assert (x55 x506))
(assert (x55 x371))
(assert (x55 x1336))
(assert (x872 x319))
(assert (= 2061678023 (x751 (x1567 2061678023))))
(assert (x55 x465))
(assert (= x716 (=> (and (not (= x1149 2211524764)) (not (= x1149 1986467848)) (>= x915 0) (>= 1461501637330902918203684832716283019655932542975 x1377) (not (= x1149 1968616202)) (= x819 (x923 (x668 x1390) (x1567 6) 0)) (not (= x1149 2061678023)) (= x915 (x291 x294)) (= x1374 x915) (= x294 (x923 (x668 x1377) x819 0)) (< x1149 2293535753) (<= x915 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x1439) (= x1439 (x1024 (x668 274184521717934524641157099916833587206))) (= 2258409472 x1149) (not (< x1149 1968616202)) (not (< x1149 911411945))) (=> (and (= x1132 x880) (= x1528 x130) (= x1374 x1236)) x1409))))
(assert (= (ite (= x426 x150) x68 (x1348 x426)) (x581 x426)))
(assert (= (ite (= x281 x390) x139 (x789 x390)) (x1002 x390)))
(assert (= x1372 x1553))
(assert (= (or (and x756 (not x314)) (and (not x1505) x241) x1066) x1094))
(assert (x55 x1262))
(assert (= (ite (= x1470 x316) x248 (x1153 x1470)) (x856 x1470)))
(assert (= (x1136 x505) (ite (and x1006 x221 x756 x1466 (not x395) x314) (x1176 x505) (ite (and (not x221) x1006 x756 x1466 x314) (x1002 x505) (ite (and x756 x314 x1006 (not x1466)) (x789 x505) (ite (and (not x1006) x756 x314) (x360 x505) (x100 x505)))))))
(assert (= x248 (x856 x316)))
(assert (=> (>= 10000 x922) (= (x668 x922) (x1567 x922))))
(assert (x55 x781))
(assert (x55 x468))
(assert (=> (<= x454 10000) (= (x668 x454) (x1567 x454))))
(assert (= (ite (and x1232 x918) (x1421 x787) (x270 x787)) (x211 x787)))
(assert (= (x789 x1179) (ite (= x1179 x421) x338 (x360 x1179))))
(assert (= 911411945 (x751 (x1567 911411945))))
(assert (x55 x445))
(assert (= (x751 (x1567 2532887486)) 2532887486))
(assert (x55 x1356))
(assert (x872 x87))
(assert (= x304 (=> (and (= (x923 (x668 x1320) x45 0) x1090) (= x798 2532887486) (= (x366 x167) x667) (= x715 (x1024 (x668 274184521717934524641157099916833587206))) (> 2960351575 x798) (= (x923 (x668 x662) (x1567 4) 0) x45) (>= 1461501637330902918203684832716283019655932542975 x1432) (not (= x798 2293535753)) (> 2690754053 x798) (= (x923 (x668 x42) x1090 0) x1319) (< 0 x715) (>= 1461501637330902918203684832716283019655932542975 x1320) (not (> 2293535753 x798)) (not (= x798 2418364589)) (<= x667 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x42 1461501637330902918203684832716283019655932542975) (= x667 x1267) (= x167 (x923 (x668 x1432) x1319 0)) (<= 0 x667) (not (= 2512682246 x798))) (=> (and (not (= 2764855426 x830)) x1355 (= x887 (mod (* x248 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1508 (x511 (+ 32 x594))) (<= 0 x711) (= (mod (* 32 x248) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1504) (not (< x707 x58)) (= x58 x473) (<= 0 x428) (not (= 2690754053 x830)) (= x442 x58) (not (< x772 4)) (= (< 0 x307) x697) (= x397 0) (= (x511 (+ 4 x845)) x1411) (= (x511 (+ 35 x845)) x809) (= x1494 x711) (= x1123 x765) (<= 0 x951) (not (= 2798343961 x830)) (= x437 x216) (< x830 2960351575) (= (x511 (+ x1508 x316)) x325) (= x1148 0) (= x93 (x511 (+ x845 36))) (= 128 x629) (> x772 163) (or (and (= (< 1 x1447) x584) (or (not x584) (and (= (x1407 1461501637330902918203684832716283019655932542975 x180) x313) (= (x1153 160) x180) (= x62 (x1407 1461501637330902918203684832716283019655932542975 x243)) (> x907 0) (= x1423 (x1153 128)) (not (= x62 x313)) (= (x1153 192) x243) (= x533 (> x1447 2)) (= x907 (x1153 128)) (> x1423 1) x584 (or (and (= x1045 (x1407 1461501637330902918203684832716283019655932542975 x857)) (not (= x228 x1045)) (< 0 x1391) (= x1391 (x1153 128)) (< 2 x982) (= (x1153 160) x1125) (= x228 (x1407 1461501637330902918203684832716283019655932542975 x1125)) x533 (= x982 (x1153 128)) (= x857 (x1153 224)) (= (< 3 x1447) x966) (not x966)) (not x533)))) (= (x198 (- x1447 1)) x1049) (not (> x1049 1)) (not (> 1 x1447)) x697) (not x697)) (>= 1461501637330902918203684832716283019655932542975 x949) (not (or (and (< x355 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x355) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x355))) (= (and x837 x97) x931) (= x765 x1033) (not (> 2293535753 x830)) (= x948 x1494) (= x25 x39) (= x949 x433) (= x1000 x1267) (= x1000 x693) (= x837 (= 0 x216)) (not (> x424 x772)) (< x707 x951) (= x826 x74) (= (= x826 0) x97) (= (x1184 x1411) x248) (= (<= x772 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (= x1338 0) (= x1290 (<= x39 x286)) (>= 1461501637330902918203684832716283019655932542975 x711) (= x587 x286) (= x24 (x511 (+ x1504 32))) (= x594 (mod (* 32 x248) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x587 x942) (>= x949 0) (= (x198 (- x1447 1)) x307) (= (= x248 0) x1331) (= x627 0) (= x424 (x511 (+ x93 x887))) (<= x428 1461501637330902918203684832716283019655932542975) (not (< x830 2690754053)) (= x51 (and x931 x1346)) (= x845 x1040) (= x316 (x511 (+ 160 x1504))) (= x1514 x1338) (not (> x1040 18446744073709551615)) (or (and (not x1331) (= (x511 (+ x24 160)) x1329) (= (mod (* x248 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1344)) x1331) (<= x951 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1355 (or x51 (not x347))) (>= 1461501637330902918203684832716283019655932542975 x765) (= x344 x393) (= (= 0 x1131) x347) (not (> 1 x1447)) (= x707 x418) (not (= 2743102681 x830)) (>= 1461501637330902918203684832716283019655932542975 x393) (= x1447 (x1153 128)) (= x707 x1477) (= (x1024 (x668 274184521717934524641157099916833587206)) x828) (< 0 x828) (= (x198 (- x772 4)) x355) (= x1131 x25) (or (and (> x809 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x772)) (and (= (<= x772 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x809)) (< x809 x772))) (= x1346 (= 0 x693)) (not (= x830 2868243304)) (= x411 (x511 (+ x594 160))) (= 0 x492) x1290 (not (> x248 18446744073709551615)) (= 2939843472 x830) (= x393 x1173)) x774))))
(assert (= x1094 x1400))
(assert (= x1101 (x751 (x668 x1101))))
(assert (= (x668 1517119036) (x1567 1517119036)))
(assert (= (ite (= x787 x1253) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x787)) (x360 x787)))
(assert (= (=> (and (= (x198 (- x58 1)) x501) (= x583 (< 0 x501))) (and (=> (not x583) x510) (=> x583 x1399))) x324))
(assert (x55 x794))
(assert (x55 x585))
(assert (=> (<= x1513 10000) (= (x1567 x1513) (x668 x1513))))
(assert (= (x844 x521) (ite (= x521 x605) x1301 (x1446 x521))))
(assert (x929 x187))
(assert (x55 x577))
(assert (= x90 (=> (= 0 x1101) x205)))
(assert (x55 x670))
(assert (= x447 (=> (and (= x880 x1141) (= x130 x1340)) x336)))
(assert (= (x1567 2418364589) (x668 2418364589)))
(assert (=> (<= x1433 10000) (= (x668 x1433) (x1567 x1433))))
(assert (= x1273 x1122))
(assert (x55 x437))
(assert (x55 x874))
(assert (= x1147 x241))
(assert (= (and x169 x888) x1556))
(assert (x55 x1415))
(assert (x872 x1417))
(assert (x55 x1210))
(assert (x55 x330))
(assert (=> (>= 10000 x643) (= (x1567 x643) (x668 x643))))
(assert (x55 x1173))
(assert (x872 x554))
(assert (x55 x1141))
(assert (= (and (not x905) x980) x106))
(assert (= (ite (and x31 x628) (x1503 x800) (x387 x800)) (x1333 x800)))
(assert (x55 x1433))
(assert (x55 x809))
(assert (= (x856 x150) (ite (= x316 x150) x248 (x1153 x150))))
(assert (= (x898 x1468) (ite (and x499 x954) (x1455 x1468) (ite (and x1497 (not x499) x954) (x1205 x1468) (x367 x1468)))))
(assert (=> (<= x1115 10000) (= (x668 x1115) (x1567 x1115))))
(assert (x55 x840))
(assert (= (x751 (x668 x298)) x298))
(assert (=> (<= x1277 10000) (= (x1567 x1277) (x668 x1277))))
(assert (= (x751 (x668 x1286)) x1286))
(assert (= (ite (and x1420 x628 (not x1208) (not x1386)) (x844 x505) (ite (and (not x1420) x628 (not x1208)) (x1446 x505) (ite (and x1208 x628) (x1446 x505) (x151 x505)))) (x356 x505)))
(assert (x55 x38))
(assert (x55 x629))
(assert (x55 x1542))
(assert (=> (<= x721 10000) (= (x1567 x721) (x668 x721))))
(assert (=> (<= x63 10000) (= (x1567 x63) (x668 x63))))
(assert (=> (<= x1254 10000) (= (x1567 x1254) (x668 x1254))))
(assert (= (x751 (x668 x973)) x973))
(assert (= (ite (and x628 (not x1386) (not x1208) x1420) (x844 x256) (ite (and x628 (not x1420) (not x1208)) (x1446 x256) (ite (and x628 x1208) (x1446 x256) (x151 x256)))) (x356 x256)))
(assert (x872 x730))
(assert (x55 x230))
(assert (x55 x1391))
(assert (=> (>= 10000 x782) (= (x1567 x782) (x668 x782))))
(assert (= x824 (=> (and (= x685 2743102681) (= x1265 (x1195 x1489)) (= x1105 (x923 (x668 x1160) x1551 0)) (= x1265 x1482) (<= x1265 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x923 (x668 x1103) x1105 0) x1489) (>= 1461501637330902918203684832716283019655932542975 x1160) (not (= x685 2690754053)) (not (> 2690754053 x685)) (> x184 0) (>= x1265 0) (< x685 2960351575) (not (> 2293535753 x685)) (= (x923 (x668 x1053) (x1567 3) 0) x1551) (>= 1461501637330902918203684832716283019655932542975 x1103) (= (x1024 (x668 274184521717934524641157099916833587206)) x184)) (=> (and (= x1496 x140) (= x1482 x1213) (= x1268 x1284) (= x1449 x880) (= x130 x446)) x913))))
(assert (= (x751 (x1567 1517119036)) 1517119036))
(assert (x55 x390))
(assert (=> (<= x1224 10000) (= (x1567 x1224) (x668 x1224))))
(assert (x872 x401))
(assert (= (x1348 x787) (ite (= x787 x1401) x1359 (x734 x787))))
(assert (x55 x597))
(assert (= (x789 x1428) (ite (= x1428 x421) x338 (x360 x1428))))
(assert (=> (<= x440 10000) (= (x1567 x440) (x668 x440))))
(assert (= (ite (= x150 x1470) x68 (x1348 x1470)) (x581 x1470)))
(assert (x144 x243 x1159))
(assert (x55 x982))
(assert (= (x1567 1968616202) (x668 1968616202)))
(assert (=> (>= 10000 x284) (= (x1567 x284) (x668 x284))))
(assert (= x1172 (=> (= 0 x816) x754)))
(assert (x1157 x795 x201))
(assert (= (x751 (x668 x1044)) x1044))
(assert (x55 x440))
(assert (x55 x420))
(assert (=> (<= x1043 10000) (= (x668 x1043) (x1567 x1043))))
(assert (= x58 (x751 (x668 x58))))
(assert (x872 x519))
(assert (= x76 (x751 (x668 x76))))
(assert (= (x751 (x668 x669)) x669))
(assert (= (=> (and (= x983 (x478 (x668 x1326))) (= x1209 (x1370 (x668 x1326))) (= (x478 (x668 274184521717934524641157099916833587206)) x44) x1116 (= x419 (= x1326 274184521717934524641157099916833587218)) (= x1116 (< x983 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x478 (x668 274184521717934524641157099916833587206)) x1285) x812 (= (>= x1285 0) x1028) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1370 (x668 x1326))) x812) x1028 (= x283 x1252)) (and (=> (and (not x530) (= (x1379 x175) x83) (not x1492) x419 (= 274184521717934524641157099916833587206 x1085) (= x125 x1069) (not x686) (= x780 2835717307) (= x1198 x83) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x994) (= x1078 1) (= 68 x468) (= (x1024 (x668 274184521717934524641157099916833587218)) x1118) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x657) (= x821 (x198 (- x994 x1031))) (= (x923 (x668 274184521717934524641157099916833587206) (x1567 1) 0) x1081) (= x175 (x923 (x668 x1069) (x1567 1) 0)) (= 274184521717934524641157099916833587206 x153) (= (>= (+ x83 x651) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x686) (= (x198 (- x468 4)) x1185) (= x283 x468) (not (= 826074471 x780)) (not (= 649617121 x780)) (= x651 x1227) (not (< x468 4)) (< 0 x1118) (= x1083 (> x1031 x994)) (not (= 1889567281 x780)) (not (> 649617121 x780)) (>= x83 0) (= 32 x431) (= (+ x1227 x1198) x1330) (not x1083) (not (= 2514000705 x780)) (= x1561 x1031) (= (x923 (x668 274184521717934524641157099916833587206) (x1567 1) 0) x1367) (= x329 x1069) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1185) true) (< x1185 64)) (> x1185 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1492) (<= x83 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x884 x1367) x994) (= x651 x1031) (<= x1069 1461501637330902918203684832716283019655932542975) (= x530 (> x651 x994)) (= x695 x1008) (<= 0 x994) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x83 x651))) x449) (=> (not x419) x777))) x1554))
(assert (x872 x704))
(assert (x55 x1465))
(assert (x55 x1219))
(assert (= (x668 1000000000000000000) (x1567 1000000000000000000)))
(assert (= (=> (and (= x1328 (x1133 x1048)) (>= x1328 0) (= x85 (x1024 (x668 274184521717934524641157099916833587206))) (<= x802 1461501637330902918203684832716283019655932542975) (= (x923 (x668 x1264) x799 0) x1048) (not (= 2690754053 x1461)) (> x85 0) (= x1328 x1155) (not (> 2293535753 x1461)) (= 2743102681 x1461) (> 2960351575 x1461) (= x799 (x923 (x668 x802) x1202 0)) (not (< x1461 2690754053)) (>= 1461501637330902918203684832716283019655932542975 x1264) (<= x1328 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1202 (x923 (x668 x1388) (x1567 3) 0))) (=> (and (= x42 x1268) (= x130 x662) (= x880 x1320) (= x1155 x437) (= x140 x1432)) x304)) x899))
(assert (x872 x782))
(assert (= x20 x1075))
(assert (x55 x1384))
(assert (= (x1176 x505) (ite (= x323 x505) x762 (x1002 x505))))
(assert (x55 x1168))
(assert (x55 x970))
(assert (x55 x665))
(assert (=> (>= 10000 x1381) (= (x1567 x1381) (x668 x1381))))
(assert (= (ite (= x19 x316) x248 (x1153 x19)) (x856 x19)))
(assert (= (and x1557 x1093) x1303))
(assert (x55 x536))
(assert (= x816 (x751 (x668 x816))))
(assert (x872 x984))
(assert (= (x751 (x1567 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x55 x959))
(assert (= (ite (= x323 x787) x762 (x1002 x787)) (x1176 x787)))
(assert (x872 x674))
(assert (x55 x744))
(assert (x55 x821))
(assert (= (x856 x390) (ite (= x390 x316) x248 (x1153 x390))))
(assert (= (x751 (x668 x1233)) x1233))
(assert (= x449 (=> (and (= x65 (< 2 x248)) (or (and (= x410 (x511 (+ 96 x1350))) (not x745) (= x1167 x744)) (and x745 (= 96 x744))) (= x745 (= x431 0)) (= x12 (x937 (x668 x1326))) (not (= x1078 0)) (or (and (= (= 0 x399) x1555) (> x399 0) (= x250 (x615 x744)) (= (ite x768 1 0) x539) (= (x615 x787) x399) (= (x511 (+ 32 x744)) x787) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x250) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x250) true) (< x250 32)))) (= (not x1555) x768) x908 (= x399 x539)) (not x908)) (= x494 (< (x804 (x668 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x65) x494 (= x908 (> x118 0)) (= x118 (x615 x744))) x447)))
(assert (= (x751 (x668 x867)) x867))
(assert (= x1223 x892))
(assert (= (x1376 x521) (ite (and x1331 x1223) (x856 x521) (x568 x521))))
(assert (= x783 (x751 (x668 x783))))
(assert (x55 x1115))
(assert (x55 x432))
(assert (=> (>= 10000 x834) (= (x668 x834) (x1567 x834))))
(assert (= x440 (x751 (x668 x440))))
(assert (x55 x560))
(assert (x55 x133))
(assert (x55 x485))
(assert (x55 x295))
(assert (= x169 x792))
(assert (= (x1376 x1262) (ite (and x1223 x1331) (x856 x1262) (x568 x1262))))
(assert (= x1432 (x751 (x668 x1432))))
(assert (= (x1176 x864) (ite (= x864 x323) x762 (x1002 x864))))
(assert (x55 x492))
(assert (=> (>= 10000 x970) (= (x1567 x970) (x668 x970))))
(assert (= (ite (= x744 x1507) x806 (x162 x744)) (x377 x744)))
(assert (x872 x961))
(assert (= (and x508 x500) x183))
(assert (x929 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (and (not x1564) x279) x264))
(assert (x55 x1251))
(assert (= x1058 (x751 (x668 x1058))))
(assert (x55 x778))
(assert (= (x668 2532887486) (x1567 2532887486)))
(assert (x55 x1387))
(assert (x55 x627))
(assert (x55 x920))
(assert (= (x1446 x521) (ite (= x521 x297) x429 (x991 x521))))
(assert (x872 x327))
(assert (= (x1059 x1262) (ite (and (not x75) x314 x756) (x1136 x1262) (x73 x1262))))
(assert (=> (<= x49 10000) (= (x1567 x49) (x668 x49))))
(assert (= (=> (= (< 0 x58) x328) (and (=> (not x328) x510) (=> x328 x1332))) x1375))
(assert (x55 x534))
(assert (x55 x1529))
(assert (x55 x1340))
(assert (= (x751 (x1567 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x872 x916))
(assert (x55 x418))
(assert (= x755 (=> (= x314 (< 0 x248)) (and (=> (not x314) x447) (=> (and (= (x511 (+ x24 160)) x19) (= (x511 (+ x612 68)) x1151) (= x252 (x1024 (x668 x225))) (>= 1461501637330902918203684832716283019655932542975 x225) (= x1177 (x198 (- x509 32))) (= (x232 x1470) x78) (or (and (not x1006) (= x757 0)) (and (or (and (= (x511 (+ 64 x612)) x1217) (= x221 (< 64 x110)) (or (and (= x757 64) (not x221)) (and (or (and (= (x1176 x529) x1263) x395 (= 128 x757) (= x486 (x511 (+ 160 x1312))) (= (x511 (+ x612 128)) x529) (= x775 (> x110 128)) (not x775)) (and (not x395) (= 96 x757))) (= (x511 (+ 128 x1312)) x323) (= (x511 (+ x612 96)) x309) x221 (= (x1002 x309) x762) (= x395 (< 96 x110)))) (= x139 (x789 x1217)) x1466 (= (x511 (+ 96 x1312)) x281)) (and (= x757 32) (not x1466))) (= (x360 x109) x338) (= x109 x1470) x1006 (= x1453 x421) (= x1466 (> x110 32)))) (or (not x75) (and (= (x511 (+ x110 x1453)) x556) x75)) (= (x511 (+ 96 x257)) x1253) (= x225 (x1184 x609)) x86 (= (> x110 0) x1006) (= (x1407 26959946667150639794667015087019630673637144422540572481103610249215 x78) x1106) (= x577 (x161 x316)) (= x23 (x161 x19)) (< 0 x248) (= x257 (x511 (+ 36 x612))) (= (x511 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1106)) x1119) (< 0 x577) x314 (= (x1407 1461501637330902918203684832716283019655932542975 x765) x1073) (= x1453 (x511 (+ x257 128))) (= x93 x609) (= x110 (x360 x612)) (= x509 (x198 (- x1312 x612))) (= (x511 (+ x612 100)) x1312) (= x75 (> x757 x110)) (= x86 (> x252 0)) (= x1470 (x511 (+ 32 x612))) (= x764 0)) x619)))))
(assert (x55 x549))
(assert (= (=> (and (= x385 (x923 (x668 x1286) (x1567 7) 0)) (= (= 0 x176) x1570) (= x239 (x923 (x668 x1417) x385 0)) (<= x176 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x1381) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x1417) (= x176 (x898 x5)) (= (x923 (x668 x1381) x239 0) x5) (<= 0 x176)) (and (=> (and (not x1570) (= x172 x1286)) x675) (=> x1570 x1188))) x879))
(assert (x55 x350))
(assert (= (x751 (x668 x876)) x876))
(assert (= (ite (= x1253 x1179) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x1179)) (x360 x1179)))
(assert (x55 x651))
(assert (x55 x313))
(assert (x55 x60))
(assert (x55 x1563))
(assert (=> (>= 10000 x730) (= (x1567 x730) (x668 x730))))
(assert (x55 x288))
(assert (x55 x1507))
(assert (x55 x140))
(assert (= (or (and (not x480) x595) (and (not x1260) x1269)) x1431))
(assert (=> (<= x1527 10000) (= (x1567 x1527) (x668 x1527))))
(assert (= (x789 x529) (ite (= x421 x529) x338 (x360 x529))))
(assert (x55 x128))
(assert (x55 x149))
(assert (=> (>= 10000 x430) (= (x1567 x430) (x668 x430))))
(assert (= (ite (= x316 x605) x1301 (x1446 x316)) (x844 x316)))
(assert (x55 x683))
(assert (x55 x625))
(assert (= x1381 (x751 (x668 x1381))))
(assert (x55 x1252))
(assert (x872 x398))
(assert (= (ite (= x787 x316) x248 (x1153 x787)) (x856 x787)))
(assert (= 142201243 (x751 (x1567 142201243))))
(assert (x55 x1069))
(assert (not x321))
(assert (= (ite (and x1223 x1331) (x856 x390) (x568 x390)) (x1376 x390)))
(assert (= (x1405 x194) (ite (and x786 x628) (x1163 x194) (x222 x194))))
(assert (=> (>= 10000 x811) (= (x668 x811) (x1567 x811))))
(assert (x55 x83))
(assert (x55 x311))
(assert (x55 x253))
(assert (= (x1176 x316) (ite (= x323 x316) x762 (x1002 x316))))
(assert (= x215 (x751 (x668 x215))))
(assert (=> (<= x712 10000) (= (x668 x712) (x1567 x712))))
(assert (= (ite (= x309 x605) x1301 (x1446 x309)) (x844 x309)))
(assert (= 18446744073709551615 (x751 (x1567 18446744073709551615))))
(assert (x929 x857))
(assert (x144 x765 x1154))
(assert (= (x1450 x744) (ite (and x306 x419) (x714 x744) (x817 x744))))
(assert (= (x751 (x1567 2868243304)) 2868243304))
(assert (x55 x1393))
(assert (= (x751 (x668 x1480)) x1480))
(assert (= x776 (x751 (x668 x776))))
(assert (x55 x509))
(assert (=> (>= 10000 x1496) (= (x1567 x1496) (x668 x1496))))
(assert (x55 x1398))
(assert (=> (<= x173 10000) (= (x1567 x173) (x668 x173))))
(assert (x55 x243))
(assert (= (ite (= x1401 x150) x1359 (x734 x150)) (x1348 x150)))
(assert (x55 x1306))
(assert (= x870 (x751 (x668 x870))))
(assert (=> (>= 10000 x320) (= (x668 x320) (x1567 x320))))
(assert (= (x843 x213) (ite (and x628 x31) (x652 x213) (x1097 x213))))
(assert (x872 x149))
(assert (x55 x867))
(assert (= (x844 x744) (ite (= x744 x605) x1301 (x1446 x744))))
(assert (x55 x1070))
(assert (= x628 x475))
(assert (=> (<= x1124 10000) (= (x668 x1124) (x1567 x1124))))
(assert (= (x844 x150) (ite (= x605 x150) x1301 (x1446 x150))))
(assert (x55 x1562))
(assert (= (ite (and x1223 x1331) (x856 x19) (x568 x19)) (x1376 x19)))
(assert (x55 x653))
(assert (x872 x308))
(assert (= (x751 (x1567 1986467848)) 1986467848))
(assert (=> (<= x1449 10000) (= (x668 x1449) (x1567 x1449))))
(assert (x872 x569))
(assert (x872 x42))
(assert (x55 x284))
(assert (= (x856 x426) (ite (= x316 x426) x248 (x1153 x426))))
(assert (x55 x1460))
(assert (x55 x1510))
(assert (= (ite (= x318 x950) x207 (x366 x318)) (x1212 x318)))
(assert (x55 x620))
(assert (x55 x1167))
(assert (x55 x1057))
(assert (= x336 (=> (and (= (x923 (x668 x1141) x1548 0) x1463) (> 2293535753 x1510) (not (> 911411945 x1510)) (= x1510 2258409472) (not (= 1968616202 x1510)) (= x1548 (x923 (x668 x1340) (x1567 6) 0)) (= x330 (x1024 (x668 274184521717934524641157099916833587206))) (not (= x1510 1986467848)) (<= 0 x861) (<= x861 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2061678023 x1510)) (>= 1461501637330902918203684832716283019655932542975 x1141) (not (> 1968616202 x1510)) (< 0 x330) (= x861 (x750 x1463)) (not (= 2211524764 x1510)) (= x111 x861)) (=> (and (= x759 x880) (= x111 x260) (= x130 x925)) x282))))
(assert (x55 x316))
(assert (x55 x265))
(assert (= (x581 x787) (ite (= x787 x150) x68 (x1348 x787))))
(assert (= (x356 x150) (ite (and (not x1386) x1420 x628 (not x1208)) (x844 x150) (ite (and (not x1208) (not x1420) x628) (x1446 x150) (ite (and x1208 x628) (x1446 x150) (x151 x150))))))
(assert (x55 x1292))
(assert (x55 x85))
(assert (= (ite (and (not x1208) x628 x1420 (not x1386)) (x844 x864) (ite (and (not x1208) x628 (not x1420)) (x1446 x864) (ite (and x1208 x628) (x1446 x864) (x151 x864)))) (x356 x864)))
(assert (x55 x1488))
(assert (x55 x1447))
(assert (x55 x195))
(assert (= (x1136 x390) (ite (and x1006 x314 (not x395) x1466 x756 x221) (x1176 x390) (ite (and x314 (not x221) x1006 x756 x1466) (x1002 x390) (ite (and x1006 (not x1466) x756 x314) (x789 x390) (ite (and (not x1006) x314 x756) (x360 x390) (x100 x390)))))))
(assert (x55 x382))
(assert (= (x581 x521) (ite (= x521 x150) x68 (x1348 x521))))
(assert (= (x1142 x787) (ite (and x1505 x241 (not x1229)) (x1134 x787) (x710 x787))))
(assert (= (x1446 x864) (ite (= x297 x864) x429 (x991 x864))))
(assert (= (ite (= x521 x1253) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x521)) (x360 x521)))
(assert (x55 x1320))
(assert (= (x751 (x668 x721)) x721))
(assert (= (x1446 x309) (ite (= x309 x297) x429 (x991 x309))))
(assert (= (x1059 x390) (ite (and (not x75) x314 x756) (x1136 x390) (x73 x390))))
(assert (= 0 (x439 x1443)))
(assert (x55 x504))
(assert (= (ite (= x281 x316) x139 (x789 x316)) (x1002 x316)))
(assert (x55 x250))
(assert (x55 x1454))
(assert (= (ite (= x529 x605) x1301 (x1446 x529)) (x844 x529)))
(assert (= x1543 (x751 (x668 x1543))))
(assert (= (ite (= x787 x696) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x389 x787)) (x162 x787)))
(assert (=> (>= 10000 x916) (= (x668 x916) (x1567 x916))))
(assert (= (x81 x1378) (ite (and x954 x1349) (x349 x1378) (x969 x1378))))
(assert (= (x1446 x529) (ite (= x529 x297) x429 (x991 x529))))
(assert (= (x1212 x240) (ite (= x240 x950) x207 (x366 x240))))
(assert (= (ite (= x1179 x1507) x806 (x162 x1179)) (x377 x1179)))
(assert (= x759 (x751 (x668 x759))))
(assert (=> (>= 10000 x76) (= (x668 x76) (x1567 x76))))
(assert (x55 x693))
(assert (= x1488 (x751 (x668 x1488))))
(assert (= (ite (= x1401 x1428) x1359 (x734 x1428)) (x1348 x1428)))
(assert (x55 x600))
(assert (x55 x1242))
(assert (= 0 (x439 x19)))
(assert (= (x1333 x1080) (ite (and x31 x628) (x1503 x1080) (x387 x1080))))
(assert (= (=> (and (= x30 (> x896 0)) (= x896 (x198 (- x1286 1)))) (and (=> (not x30) x90) (=> x30 x204))) x305))
(assert (= (ite (= x605 x1217) x1301 (x1446 x1217)) (x844 x1217)))
(assert (= (x751 (x668 x1259)) x1259))
(assert (x55 x705))
(assert (x929 x243))
(assert (x55 x361))
(assert (x872 x947))
(assert (= x6 (and x595 x480)))
(assert (= (ite (and (not x1386) (not x1208) x1420 x628) (x844 x109) (ite (and (not x1208) (not x1420) x628) (x1446 x109) (ite (and x628 x1208) (x1446 x109) (x151 x109)))) (x356 x109)))
(assert (x55 x298))
(assert (x55 x1395))
(assert (=> (<= x1069 10000) (= (x668 x1069) (x1567 x1069))))
(assert (x872 x1388))
(assert (=> (>= 10000 x910) (= (x668 x910) (x1567 x910))))
(assert (x55 x1226))
(assert (x872 x1266))
(assert (x55 x578))
(assert (= (x1567 2960351575) (x668 2960351575)))
(assert (x144 x393 x1493))
(assert (x55 x788))
(assert (=> (<= x841 10000) (= (x668 x841) (x1567 x841))))
(assert (x55 x249))
(assert (x55 x949))
(assert (x55 x975))
(assert (= (x1446 x744) (ite (= x297 x744) x429 (x991 x744))))
(assert (= (x751 (x668 x1254)) x1254))
(assert (x55 x467))
(assert (= (x751 (x668 x1287)) x1287))
(assert (= (ite (= x297 x1179) x429 (x991 x1179)) (x1446 x1179)))
(assert (x55 x119))
(assert (= x284 (x751 (x668 x284))))
(assert (x55 x1453))
(assert (x55 x302))
(assert (= (x1348 x1217) (ite (= x1401 x1217) x1359 (x734 x1217))))
(assert (x55 x407))
(assert (x55 x642))
(assert (= (ite (= x605 x256) x1301 (x1446 x256)) (x844 x256)))
(assert (= x943 true))
(assert (x55 x329))
(assert (= x740 (x751 (x668 x740))))
(assert (= (x751 (x668 x537)) x537))
(assert (= x66 (=> (and (< 0 x178) (= (x923 (x668 x970) x1135 0) x1238) (< x561 911411945) (not (= 635128645 x561)) (<= x970 1461501637330902918203684832716283019655932542975) (<= x834 1461501637330902918203684832716283019655932542975) (< x561 2293535753) (= x1135 (x923 (x668 x1254) (x1567 7) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x803) (not (< x561 468353030)) (= (x1024 (x668 274184521717934524641157099916833587206)) x178) (= x803 (x842 x599)) (= (x923 (x668 x834) x1238 0) x599) (= x803 x968) (= x561 759532456) (>= x803 0) (not (= x561 468353030))) (=> (and (= x519 x880) (= x1488 x1268) (= x401 x130) (= x968 x434)) x359))))
(assert (x55 x49))
(assert (= x1030 (and x1471 x264)))
(assert (= (x751 (x1567 1000000000000000000)) 1000000000000000000))
(assert (= (x668 274184521717934524641157099916833587206) (x1567 274184521717934524641157099916833587206)))
(assert (= (x360 x109) (ite (= x1253 x109) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x109))))
(assert (x55 x766))
(assert (= (ite (= x1217 x150) x68 (x1348 x1217)) (x581 x1217)))
(assert (= (x81 x268) (ite (and x1349 x954) (x349 x268) (x969 x268))))
(assert (x55 x1328))
(assert (=> (>= 10000 x788) (= (x1567 x788) (x668 x788))))
(assert (= (x162 x1428) (ite (= x1428 x696) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x389 x1428))))
(assert (x55 x1217))
(assert (x55 x365))
(assert (x55 x1298))
(assert (= x730 (x751 (x668 x730))))
(assert (= x1196 (or x481 x1215)))
(assert (x872 x76))
(assert (= (x439 x109) 0))
(assert (x872 x920))
(assert (= x17 x900))
(assert (x55 x1543))
(assert (= (x1348 x1470) (ite (= x1401 x1470) x1359 (x734 x1470))))
(assert (= (ite (and (not x1386) (not x1208) x628 x1420) (x844 x390) (ite (and x628 (not x1208) (not x1420)) (x1446 x390) (ite (and x1208 x628) (x1446 x390) (x151 x390)))) (x356 x390)))
(assert (x55 x257))
(assert (x55 x1449))
(assert (x55 x1326))
(assert (x55 x126))
(assert (= (x844 x1179) (ite (= x1179 x605) x1301 (x1446 x1179))))
(assert (= (x751 (x668 x938)) x938))
(assert (= x519 (x751 (x668 x519))))
(assert (x872 x1103))
(assert (x55 x400))
(assert (x55 x1101))
(assert (x872 x1233))
(assert (=> (>= 10000 x519) (= (x668 x519) (x1567 x519))))
(assert (=> (<= x1479 10000) (= (x1567 x1479) (x668 x1479))))
(assert (= (=> (and (or (and (= x423 0) (= 0 x1293) x709) (and (or (and (= x423 1) (not x1084) (= x649 x1293)) (and (= 0 x1293) (= x423 0) x1084)) (<= x649 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x649 (x1163 x1444)) (= (x923 (x668 x975) (x1567 10) 0) x1060) (= (x923 (x668 x1287) x1060 0) x1444) (>= x649 0) (= x1084 (= 0 x649)) (not x709) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x1287))) (= x709 (= x975 0))) x1241) x1144))
(assert (x55 x410))
(assert (=> (>= 10000 x1259) (= (x1567 x1259) (x668 x1259))))
(assert (x872 x320))
(assert (x55 x225))
(assert (x55 x1422))
(assert (x55 x1263))
(assert (= (ite (= x696 x1408) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x389 x1408)) (x162 x1408)))
(assert (x55 x940))
(assert (x55 x881))
(assert (x55 x1500))
(assert (x55 x516))
(assert (= (ite (= x1217 x421) x338 (x360 x1217)) (x789 x1217)))
(assert (= (x751 (x668 x1306)) x1306))
(assert (x55 x1267))
(assert (= (x668 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1567 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x55 x1520))
(assert (=> (>= 10000 x1387) (= (x1567 x1387) (x668 x1387))))
(assert (x55 x1527))
(assert (= x29 (=> (= (> x248 1) x1505) (and (=> (and (= x864 (x511 (+ x1408 32))) x1505 (= x302 (x511 (+ 68 x1408))) (= x1229 (< x1252 x101)) (= x516 (x511 (+ x1411 64))) (< 1 x578) (or (and (= 0 x101) (not x185)) (and (= x864 x505) x185 (= x1315 (> x1252 32)) (or (and (= (x511 (+ 64 x1408)) x426) (= x571 (x511 (+ x1350 96))) (= (x377 x426) x427) (or (and (not x637) (= x101 64)) (and (= (x511 (+ x1408 96)) x1428) (= x645 (x1414 x1428)) (= (x511 (+ 128 x1350)) x1335) (or (and (not x1139) (= 96 x101)) (and (= x1179 (x511 (+ 128 x1408))) x1139 (= (x1291 x1179) x683) (not x542) (= x27 (x511 (+ x1350 160))) (= x101 128) (= x542 (> x1252 128)))) x637 (= x1139 (> x1252 96)))) (= x637 (< 64 x1252)) x1315) (and (not x1315) (= 32 x101))) (= (x162 x505) x806) (= x1167 x1507))) (= x708 (x198 (- x815 32))) (= (x1184 x516) x1326) (>= 1461501637330902918203684832716283019655932542975 x1326) (or (and x1229 (= x265 (x511 (+ x1252 x1167)))) (not x1229)) (= x242 (< 0 x490)) (= x490 (x1024 (x668 x1326))) (= 0 x235) (= x1345 (x511 (+ x1408 36))) x242 (= x927 (x1061 x864)) (= (x511 (+ 96 x1345)) x696) (= (x460 x316) x578) (= (x198 (- x1350 x1408)) x815) (= x60 (x1407 26959946667150639794667015087019630673637144422540572481103610249215 x927)) (= x329 (x1407 1461501637330902918203684832716283019655932542975 x765)) (> x248 1) (= (< 0 x1252) x185) (= x1167 (x511 (+ 128 x1345))) (= x521 (x511 (+ 192 x24))) (= x1252 (x162 x1408)) (= (x460 x521) x1561) (= (x511 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x60)) x128) (= (x511 (+ 100 x1408)) x1350)) x1554) (=> (not x1505) x447)))))
(assert (= (ite (= x426 x605) x1301 (x1446 x426)) (x844 x426)))
(assert (x55 x1112))
(assert (=> (>= 10000 x617) (= (x668 x617) (x1567 x617))))
(assert (= x225 (x751 (x668 x225))))
(assert (x55 x1027))
(assert (x55 x1307))
(assert (= (x668 2258409472) (x1567 2258409472)))
(assert (= (x751 (x668 x1395)) x1395))
(assert (= x595 (and x1303 x41)))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x751 (x1567 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (=> (>= 10000 x1316) (= (x668 x1316) (x1567 x1316))))
(assert (=> (<= x1563 10000) (= (x668 x1563) (x1567 x1563))))
(assert (x55 x1359))
(assert (x872 x975))
(assert (x55 x1287))
(assert (x872 x870))
(assert (x55 x269))
(assert (= (x751 (x668 x1539)) x1539))
(assert (= x986 (=> (and (= x752 (< x707 x1286)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x442)) (= x1286 (x511 (+ 1 x58)))) (and (=> (not x752) x415) (=> (and (= x612 x543) x752) x755)))))
(assert (x55 x605))
(assert (= (x668 18446744073709551615) (x1567 18446744073709551615)))
(assert (= (x377 x1428) (ite (= x1428 x1507) x806 (x162 x1428))))
(assert (= (and x1232 (not x918)) x980))
(assert (= (x360 x1262) (ite (= x1262 x1253) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x1262))))
(assert (= (x843 x1071) (ite (and x628 x31) (x652 x1071) (x1097 x1071))))
(assert (= (x751 (x668 x1288)) x1288))
(assert (= (ite (= x1428 x605) x1301 (x1446 x1428)) (x844 x1428)))
(assert (= x665 (x751 (x668 x665))))
(assert (= (ite (and x1223 x1331) (x856 x787) (x568 x787)) (x1376 x787)))
(assert (x872 x964))
(assert (= 0 (x439 160)))
(assert (x55 x816))
(assert (= (x1333 x1463) (ite (and x31 x628) (x1503 x1463) (x387 x1463))))
(assert (= (ite (= x72 x950) x207 (x366 x72)) (x1212 x72)))
(assert (x872 x1160))
(assert (x55 x173))
(assert (= x1140 (x751 (x668 x1140))))
(assert (= (=> (and (= x661 (x1407 1461501637330902918203684832716283019655932542975 x765)) (= (x923 (x668 x58) (x1567 7) 0) x722) (= (x923 (x668 x661) x1281 0) x1546) (= (x923 (x668 x973) x722 0) x1281) (= x973 (x1407 1461501637330902918203684832716283019655932542975 x393)) (>= x607 0) (<= x607 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1038 x1546) x607) (= x500 (= x607 0))) (and (=> (and (= x976 x58) (not x500)) x654) (=> x500 x324))) x1332))
(assert (= (x1376 x150) (ite (and x1331 x1223) (x856 x150) (x568 x150))))
(assert (x55 x373))
(assert (x55 x915))
(assert (x55 x1344))
(assert (x55 x1432))
(assert (x55 x74))
(assert (x55 x111))
(assert (=> (<= x938 10000) (= (x1567 x938) (x668 x938))))
(assert (=> (<= x1160 10000) (= (x668 x1160) (x1567 x1160))))
(assert (= (x668 274184521717934524641157099916833587218) (x1567 274184521717934524641157099916833587218)))
(assert (x929 x78))
(assert (= (x751 (x668 x758)) x758))
(assert (= (x668 2835717307) (x1567 2835717307)))
(assert (= (x751 (x668 x643)) x643))
(assert (x55 x345))
(assert (= (x162 x505) (ite (= x505 x696) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x389 x505))))
(assert (=> (>= 10000 x42) (= (x1567 x42) (x668 x42))))
(assert (x55 x883))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x951) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x610) (not (> x1286 x951)) (= x383 (x898 x1468)) (>= x951 0) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x1058) (= (x923 (x668 x1286) (x1567 7) 0) x1) (= (x923 (x668 x1058) x906 0) x1468) (= (x923 (x668 x610) x1 0) x906) (= x1564 (< 0 x383)) (<= 0 x383) (<= x383 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and x1564 (= x1016 (x81 x1525)) (= x638 0) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x298) (>= x1016 0) (<= x1016 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1016 x778) (= x1525 (x923 (x668 x738) x836 0)) (= x738 (x1407 1461501637330902918203684832716283019655932542975 x765)) (= (x923 (x668 x298) x348 0) x836) (= (x923 (x668 x1286) (x1567 9) 0) x348)) x630) (=> (not x1564) x1231))) x415))
(assert (= x961 (x751 (x668 x961))))
(assert (= (x751 (x1567 759532456)) 759532456))
(assert (x55 x1277))
(assert (x55 x1103))
(assert (= (x1567 2211524764) (x668 2211524764)))
(assert (x55 x758))
(assert (x55 x1477))
(assert (x55 x323))
(assert (x55 x589))
(assert (=> (<= x1264 10000) (= (x1567 x1264) (x668 x1264))))
(assert (x55 x125))
(assert (x55 x93))
(assert (= (x1567 3123789364) (x668 3123789364)))
(assert (= 1889567281 (x751 (x1567 1889567281))))
(assert (x55 x1132))
(assert (x55 x206))
(assert (x55 x696))
(assert (x55 x434))
(assert (x55 x841))
(assert (= (x162 x744) (ite (= x744 x696) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x389 x744))))
(assert (x55 x582))
(assert (=> (<= x1465 10000) (= (x668 x1465) (x1567 x1465))))
(assert (x55 x1533))
(assert (x55 x882))
(assert (= x972 (x751 (x668 x972))))
(assert (= (ite (= x1428 x281) x139 (x789 x1428)) (x1002 x1428)))
(assert (= (x751 (x1567 2514000705)) 2514000705))
(assert (=> (<= x253 10000) (= (x668 x253) (x1567 x253))))
(assert (= (ite (and x756 x314 x1466 x1006 x221 (not x395)) (x1176 x744) (ite (and x1006 (not x221) x1466 x756 x314) (x1002 x744) (ite (and x314 x756 x1006 (not x1466)) (x789 x744) (ite (and x314 x756 (not x1006)) (x360 x744) (x100 x744))))) (x1136 x744)))
(assert (x872 x545))
(assert (=> (>= 10000 x108) (= (x668 x108) (x1567 x108))))
(assert (= (ite (and x499 x954) (x1455 x5) (ite (and (not x499) x1497 x954) (x1205 x5) (x367 x5))) (x898 x5)))
(assert (x55 x948))
(assert (=> (>= 10000 x149) (= (x668 x149) (x1567 x149))))
(assert (= (x1059 x1179) (ite (and (not x75) x756 x314) (x1136 x1179) (x73 x1179))))
(assert (x872 x1402))
(assert (= (x751 (x668 x1377)) x1377))
(assert (x55 x486))
(assert (x55 x337))
(assert (= (x751 (x668 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (=> (>= 10000 x308) (= (x668 x308) (x1567 x308))))
(assert (= (x1348 x864) (ite (= x1401 x864) x1359 (x734 x864))))
(assert (=> (>= 10000 x1565) (= (x1567 x1565) (x668 x1565))))
(assert (= (ite (= x529 x323) x762 (x1002 x529)) (x1176 x529)))
(assert (= x1121 (and x1337 (not x1161))))
(assert (= (x360 x529) (ite (= x529 x1253) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x529))))
(assert (x55 x674))
(assert (x55 x1160))
(assert (x55 x217))
(assert (= x650 (=> (= x1101 x413) x205)))
(assert (= (=> (= 0 x975) x1144) x1051))
(assert (x872 x1258))
(assert (=> (>= 10000 x669) (= (x1567 x669) (x668 x669))))
(assert (=> (>= 10000 x947) (= (x1567 x947) (x668 x947))))
(assert (= (ite (= x696 x426) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x389 x426)) (x162 x426)))
(assert (= 69947311 (x751 (x1567 69947311))))
(assert (x55 x1428))
(assert (x55 x587))
(assert (= (ite (= x316 x505) x248 (x1153 x505)) (x856 x505)))
(assert (= (ite (= x150 x309) x68 (x1348 x309)) (x581 x309)))
(assert (x55 x643))
(assert (x872 x1480))
(assert (x55 x1550))
(assert (x55 x1049))
(assert (x55 x1335))
(assert (x55 x776))
(assert (x872 x729))
(assert (x55 x116))
(assert (x55 x537))
(assert (= (ite (= x1401 x1262) x1359 (x734 x1262)) (x1348 x1262)))
(assert (x55 x462))
(assert (x55 x411))
(assert (= (ite (= x316 x605) x248 (x1153 x605)) (x856 x605)))
(assert (x55 x1131))
(assert (= x1397 x1087))
(assert (x55 x1004))
(assert (x872 x759))
(assert (= (x1136 x1179) (ite (and (not x395) x221 x314 x1466 x1006 x756) (x1176 x1179) (ite (and x1466 (not x221) x1006 x314 x756) (x1002 x1179) (ite (and x756 x314 (not x1466) x1006) (x789 x1179) (ite (and (not x1006) x314 x756) (x360 x1179) (x100 x1179)))))))
(assert (x55 x1499))
(assert (= (x751 (x668 x545)) x545))
(assert (x55 x68))
(assert (x144 x857 x1297))
(assert (=> (>= 10000 x1140) (= (x1567 x1140) (x668 x1140))))
(assert (x55 x1470))
(assert (x55 x662))
(assert (= (x1567 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x668 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x55 x428))
(assert (x55 x276))
(assert (= x1036 (and (not x1092) x425)))
(assert (x55 x573))
(assert (=> (>= 10000 x984) (= (x668 x984) (x1567 x984))))
(assert (x872 x1479))
(assert (x872 x1245))
(assert (= (ite (= x188 x950) x207 (x366 x188)) (x1212 x188)))
(assert (=> (>= 10000 x621) (= (x668 x621) (x1567 x621))))
(assert (= (x668 649617121) (x1567 649617121)))
(assert (= (x751 (x1567 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (=> (<= x758 10000) (= (x1567 x758) (x668 x758))))
(assert (= (x751 (x668 x340)) x340))
(assert (x872 x1140))
(assert (= (ite (= x744 x150) x68 (x1348 x744)) (x581 x744)))
(assert (= (x1212 x873) (ite (= x950 x873) x207 (x366 x873))))
(assert (= (ite (= x297 x505) x429 (x991 x505)) (x1446 x505)))
(assert (x872 x816))
(assert (= (=> (and (< x747 2960351575) (not (< x747 2293535753)) (= x384 (x1024 (x668 274184521717934524641157099916833587206))) (<= x1132 1461501637330902918203684832716283019655932542975) (not (= 2690754053 x747)) (= x829 (x652 x493)) (> x384 0) (not (= x747 2743102681)) (= x456 x829) (= (x923 (x668 x1528) (x1567 5) 0) x996) (not (= 2764855426 x747)) (= x493 (x923 (x668 x1132) x996 0)) (<= x829 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2798343961 x747) (<= 0 x829) (not (< x747 2690754053))) (=> (and (= x130 x1543) (= x880 x712) (= x1491 x456)) x1248)) x1409))
(assert (= (x1348 x390) (ite (= x390 x1401) x1359 (x734 x390))))
(assert (= (=> (= x41 (> x58 0)) (and (=> (not x41) x1051) (=> x41 x280))) x532))
(assert (=> (<= x407 10000) (= (x668 x407) (x1567 x407))))
(assert (= (x751 (x668 x704)) x704))
(assert (= x1390 (x751 (x668 x1390))))
(assert (= (=> (and (= x553 (x923 (x668 x58) (x1567 6) 0)) (>= x951 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1458) (= (x923 (x668 x407) x553 0) x921) (not (< x951 x442)) (= (= x1458 0) x1557) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x951) (= (x291 x921) x1458) (>= x1458 0) (= x407 (x1407 1461501637330902918203684832716283019655932542975 x393))) (and (=> (and (= (x923 (x668 x58) (x1567 10) 0) x1369) (<= x541 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x541 (x1163 x1019)) (>= x541 0) (= (x923 (x668 x1043) x1369 0) x1019) (= 0 x423) (= x1293 x541) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x1043) (not x1557)) x1241) (=> x1557 x532))) x46))
(assert (x55 x76))
(assert (=> (<= x1261 10000) (= (x668 x1261) (x1567 x1261))))
(assert (= x1387 (x751 (x668 x1387))))
(assert (x55 x757))
(assert (x872 x1496))
(assert (= x774 (=> (= (< x707 x58) x904) (and (=> (and (= x325 x612) x904) x755) (=> (not x904) x10)))))
(assert (= (x751 (x668 x564)) x564))
(assert (= (ite (and x1232 x918) (x1421 x1428) (x270 x1428)) (x211 x1428)))
(assert (x55 x248))
(assert (x55 x897))
(assert (x872 x1539))
(assert (= x1399 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x126) (= x945 (x923 (x668 x454) x1540 0)) (= x126 (x1038 x299)) (= x454 (x1407 1461501637330902918203684832716283019655932542975 x393)) (= x299 (x923 (x668 x554) x945 0)) (= (x923 (x668 x501) (x1567 7) 0) x1540) (= x640 (= 0 x126)) (>= x126 0) (= x554 (x1407 1461501637330902918203684832716283019655932542975 x765))) (and (=> (and (not x640) (= x976 x501)) x654) (=> (and (not x1091) (= x363 (x198 (- x501 1))) (= x1091 (> x363 0)) x640) x510)))))
(assert (x872 x841))
(assert (= (x1176 x744) (ite (= x323 x744) x762 (x1002 x744))))
(assert (= (x751 (x668 x103)) x103))
(assert (x55 x357))
(assert (= (x1176 x1262) (ite (= x323 x1262) x762 (x1002 x1262))))
(assert (= (x751 (x668 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x55 x535))
(assert (x55 x609))
(assert (x55 x761))
(assert (= (ite (and x1223 x1331) (x856 x1470) (x568 x1470)) (x1376 x1470)))
(assert (x55 x857))
(assert (x55 x1544))
(assert (= (and x241 x1505) x306))
(assert (x55 x1528))
(assert (x55 x1264))
(assert (= (x751 (x668 x1563)) x1563))
(assert (=> (<= x1480 10000) (= (x1567 x1480) (x668 x1480))))
(assert (x55 x649))
(assert (= x610 (x751 (x668 x610))))
(assert (x55 x1288))
(assert (x55 x865))
(assert (= (x751 (x668 x611)) x611))
(assert (x55 x938))
(assert (x55 x1413))
(assert (x55 x1108))
(assert (=> (<= x964 10000) (= (x1567 x964) (x668 x964))))
(assert (= (x1446 x297) x429))
(assert (x55 x870))
(assert (= (ite (and (not x1139) x241 x637 x185 x1315 x1505) (x1291 x787) (ite (and x241 x1315 x185 x1505 (not x637)) (x1414 x787) (ite (and (not x1315) x241 x1505 x185) (x377 x787) (ite (and x1505 x241 (not x185)) (x162 x787) (x1127 x787))))) (x1134 x787)))
(assert (x872 x738))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1170) (= (x291 x26) x1170) (>= x1170 0) (= x1260 (= 0 x1170)) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x916) (= x26 (x923 (x668 x916) x3 0)) (= (x923 (x668 x253) (x1567 6) 0) x3)) (and (=> (and (not x1260) (= x1047 x253)) x1538) (=> (and x1260 (= x993 (< 0 x368)) (= x368 (x198 (- x253 1))) (not x993)) x1051))) x274))
(assert (x55 x1513))
(assert (=> (<= x1288 10000) (= (x1567 x1288) (x668 x1288))))
(assert (x55 x729))
(assert (= (x1176 x426) (ite (= x426 x323) x762 (x1002 x426))))
(assert (x55 x1373))
(assert (x55 x1329))
(assert (x55 x1266))
(assert (= (x751 (x262 x793 1)) (+ (x751 x793) 1)))
(assert (x55 x803))
(assert (= (ite (and x1223 x1331) (x856 x109) (x568 x109)) (x1376 x109)))
(assert (=> (<= x506 10000) (= (x668 x506) (x1567 x506))))
(assert (=> (<= x225 10000) (= (x1567 x225) (x668 x225))))
(assert (= x1087 x1372))
(assert (= (ite (and x918 x1232) (x1421 x426) (x270 x426)) (x211 x426)))
(assert (= x1541 (or (and x1030 (not x1570)) (and x1531 (not x1532)))))
(assert (= x835 (=> (and (= x740 (x1407 1461501637330902918203684832716283019655932542975 x393)) (<= x701 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x701 0) (= x1392 (x923 (x668 x749) (x1567 7) 0)) (= x1532 (= 0 x701)) (= x261 (x923 (x668 x740) x1392 0)) (= x674 (x1407 1461501637330902918203684832716283019655932542975 x765)) (= (x898 x353) x701) (= x353 (x923 (x668 x674) x261 0))) (and (=> (and (= x172 x749) (not x1532)) x675) (=> (and (not x1365) (= x1365 (> x618 0)) x1532 (= x618 (x198 (- x749 1)))) x1172)))))
(assert (= (or (and x306 x419) (and x425 x1092)) x1066))
(assert (=> (>= 10000 x611) (= (x1567 x611) (x668 x611))))
(assert (= (x1136 x1428) (ite (and x221 x1006 x314 (not x395) x1466 x756) (x1176 x1428) (ite (and x756 x1466 (not x221) x314 x1006) (x1002 x1428) (ite (and x756 x314 (not x1466) x1006) (x789 x1428) (ite (and (not x1006) x756 x314) (x360 x1428) (x100 x1428)))))))
(assert (x55 x877))
(assert (x872 x49))
(assert (= x754 (=> (and (or (and (= x704 (x1407 1461501637330902918203684832716283019655932542975 x765)) (<= x1472 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x81 x268) x1472) (not x688) (= x778 x1472) (= (x923 (x668 x704) x724 0) x268) (= x638 1) (= x375 (x923 (x668 x816) (x1567 9) 0)) (<= 0 x1472) (= (x923 (x668 x617) x375 0) x724) (= x617 (x1407 1461501637330902918203684832716283019655932542975 x393))) (and (= x778 0) (= 0 x638) x688)) (= (= x816 0) x688)) x630)))
(assert (= 2764855426 (x751 (x1567 2764855426))))
(assert (= x782 (x751 (x668 x782))))
(assert (x55 x1151))
(assert (= (ite (and x756 (not x75) x314) (x1136 x426) (x73 x426)) (x1059 x426)))
(assert (= (ite (= x605 x109) x1301 (x1446 x109)) (x844 x109)))
(assert (x929 x1001))
(assert (= (x1446 x1443) (ite (= x1443 x297) x429 (x991 x1443))))
(assert (x55 x19))
(assert (x55 x983))
(assert (x55 x1390))
(assert (x895 x78 x540))
(assert (= (x581 x19) (ite (= x19 x150) x68 (x1348 x19))))
(assert (x55 x951))
(assert (= (x668 1461501637330902918203684832716283019655932542975) (x1567 1461501637330902918203684832716283019655932542975)))
(assert (= x1103 (x751 (x668 x1103))))
(assert (= x510 (=> (= x867 0) x1239)))
(assert (x55 x1261))
(assert (=> (>= 10000 x1432) (= (x1567 x1432) (x668 x1432))))
(assert (x55 x136))
(assert (= (=> (and (= x260 x656) (= (<= x119 x656) x859) (= x523 x1339) (= x1236 x119)) (and (=> (and (= x875 x434) (= (>= x875 x1280) x450) (= x25 x1280)) (and (=> (and (= (>= x1307 x1410) x753) (= x1562 x1307) (= x1410 x1491)) (and x753 (=> (and (= x1339 x797) (= x1000 x580) (= (>= x797 x580) x1193)) (and (=> (and (= x361 x883) (= true x526) (= x1559 true) (= x420 1517119036) (= 2939843472 x614) (= x1242 2939843472) (= 3123789364 x897) (= true x909) (= 2512682246 x534) (= x796 true) (= 2939843472 x903) (= x919 x877) (= x131 true) (= 87118632 x212) (= x1072 2939843472) (= x50 (>= x361 x877))) (and (=> (and (= x463 (<= x687 x14)) (= x653 x14) (= x74 x687)) (and (=> (and (= x28 true) (= x1341 (<= x269 x761)) (= x67 false) (= x474 false) (= 2939843472 x186) (= x229 2512682246) (= x269 x437) (= x1213 x761)) x1341) x463)) x50)) x1193)))) x450)) x859)) x1299))
(assert (x55 x1339))
(assert (= (x856 x744) (ite (= x744 x316) x248 (x1153 x744))))
(assert (x55 x611))
(assert (=> (>= 10000 x1390) (= (x668 x1390) (x1567 x1390))))
(assert (= (=> (and (or (and (= (x1407 1461501637330902918203684832716283019655932542975 x393) x327) (= (x923 (x668 x327) x1302 0) x412) (not x1211) (= x1302 (x923 (x668 x1286) (x1567 10) 0))) x1211) (= x1211 (= x1182 0)) (<= 0 x682) (= x1502 (x511 (+ x58 2))) (not (= x1286 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x1387 (x1407 1461501637330902918203684832716283019655932542975 x393)) (or (and (or (and (= (x1348 x1401) x1384) x455 (= x1384 x1108)) (and (not x455) (= x587 x1108))) (= (= x573 0) x1501) (= (< x288 x587) x455) (or (and (not (> x608 x1108)) (= (x1348 x337) x608) x1501 (= x504 (x198 (- x1108 x608))) (= x504 x295)) (and (= (x198 (- x1108 x573)) x1336) (= 604800 x1380) (not (< x1108 x573)) (= x659 (ite (> 604800 x1336) x1336 604800)) (= x659 x295) (not x1501))) (= x288 (x1348 x1401)) x435) (and (not x435) (= x295 0))) (= (x511 (+ 32 x337)) x1401) (= x1224 (x1407 1461501637330902918203684832716283019655932542975 x393)) (<= 0 x1359) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x893) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x555) (= (= x682 0) x322) (= x1099 (x511 (+ x337 64))) (>= x670 0) (or (and (= (ite (> x682 115792089237316195423570985008687907853269984665640564039457) 1 0) x201) (> x670 0) (= 1 x795) (= x1100 (> x248 0)) (= x1298 (x1407 x795 x201)) (= 0 x1298) (not x322) (= (mod (* 1000000000000000000 x682) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1560) (or (not x1100) (and (= x296 x682) (= (+ x513 x277) x68) (< (+ x682 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x117 (x923 (x668 x1286) (x1567 11) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x226) (= (x923 (x668 x1563) x1452 0) x1166) (<= x1563 1461501637330902918203684832716283019655932542975) (= (* x465 x226) x790) (= (x923 (x668 x1286) (x1567 4) 0) x779) (= (> x248 1) x362) (<= x782 1461501637330902918203684832716283019655932542975) (= x365 (div x790 1000000000000000000)) (< 0 x248) (= (x923 (x668 x430) x987 0) x1509) (< (* x226 x465) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x422 x1039) (= x881 (x1348 x150)) (>= x422 0) (= x781 (x1348 x316)) (> x781 0) (= (x1521 x873) x551) (= (x923 (x668 x1244) x977 0) x461) (= x277 x365) (= (x511 (+ 160 x24)) x150) (>= x226 0) (= x721 (x1407 1461501637330902918203684832716283019655932542975 x393)) (= (x923 (x668 x1465) x461 0) x188) (or (and (= (x923 (x668 x1259) x791 0) x138) (= x1245 (x1184 x522)) (= (x1184 x522) x972) (= x1010 (x923 (x668 x1499) x1274 0)) (= (* x465 x794) x1077) (<= x852 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x923 (x668 x398) x967 0) x660) (= x794 (x1257 x1010)) (<= x794 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x923 (x668 x972) x1334 0) x240) (<= 0 x794) x362 (= (+ x1469 x1175) x1057) (>= 1461501637330902918203684832716283019655932542975 x972) (= (x923 (x668 x1286) (x1567 4) 0) x791) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x938) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x398) (<= 0 x1487) (<= x1499 1461501637330902918203684832716283019655932542975) (= (x56 x240) x1487) (= x1026 (x923 (x668 x1286) (x1567 11) 0)) (= (div x1077 1000000000000000000) x1251) (not x1282) (<= x1487 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x923 (x668 x1245) x660 0) x736) (= x852 x82) (< 1 x248) (= x535 x1175) (= (x581 x256) x535) (< 1 x248) (= x852 (x56 x736)) (= (< 2 x248) x1282) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x682 x852)) (< (+ x1251 x535) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x923 (x668 x1286) (x1567 4) 0) x735) (= (+ x82 x958) x1065) (= (x511 (+ x24 192)) x256) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x1259) (> x1219 1) (= (x511 (+ x1411 64)) x522) (= x1487 0) (< (* x794 x465) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x215) (= x958 x682) (= x1274 (x923 (x668 x569) x1026 0)) (= (x1184 x522) x1499) (>= 1461501637330902918203684832716283019655932542975 x1245) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x569) (= x1334 (x923 (x668 x215) x138 0)) (= (x923 (x668 x938) x735 0) x967) (= (x581 x316) x1219) (< 1 x248) (>= x852 0) (= x1251 x1469)) (not x362)) x1100 (>= 1461501637330902918203684832716283019655932542975 x1465) (= x1465 (x1184 x371)) (>= x551 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x551) (= (x923 (x668 x776) x117 0) x1452) (= x873 (x923 (x668 x782) x1509 0)) (= (x923 (x668 x910) x779 0) x977) (= x910 (x1407 1461501637330902918203684832716283019655932542975 x393)) (< 0 x248) (= (x1184 x371) x1563) (> x248 0) (= (x923 (x668 x721) x527 0) x987) (= (x1184 x371) x782) (= x551 0) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x430) (= x226 (x1257 x1166)) (= x93 x371) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x1244) (= x513 x881) (< (+ x365 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1521 x188) x422) (= x776 (x1407 1461501637330902918203684832716283019655932542975 x393)) (= x527 (x923 (x668 x1286) (x1567 4) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x422) (= x1429 (+ x1039 x296)))) (= (div x1560 x670) x465)) x322) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x1266) (< x1477 x1502) (= (x1055 x213) x670) (= (x1130 x1145) x1359) (= (x923 (x668 x1286) (x1567 1) 0) x8) (= (x923 (x668 x1286) (x1567 6) 0) x1067) (= (x923 (x668 x1387) x1067 0) x199) (= x1145 (x262 x8 1)) (= x924 (x923 (x668 x1286) (x1567 3) 0)) (= x1435 (x1348 x1401)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x682) (= (x923 (x668 x1286) (x1567 5) 0) x13) (= (x923 (x668 x1266) x728 0) x1566) (<= x573 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x435 (> x1435 x573)) (>= x893 0) (= x213 (x923 (x668 x555) x13 0)) (= (x923 (x668 x1224) x924 0) x728) (= x893 (x453 x8)) (= (x1062 x1566) x682) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1359) (= (= 0 x295) x678) (>= x573 0) (or (and (= x984 (x1407 1461501637330902918203684832716283019655932542975 x393)) (= (x923 (x668 x1286) (x1567 6) 0) x48) x678 (= x676 (x923 (x668 x984) x48 0))) (and (= x1037 (* x295 x1442)) (= x1178 (x923 (x668 x1480) x1107 0)) (< (* x1442 x295) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x548 x1037) (= (x923 (x668 x1286) (x1567 6) 0) x1412) (= x1107 (x923 (x668 x1286) (x1567 5) 0)) (not x678) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x920) (= x1480 (x1407 1461501637330902918203684832716283019655932542975 x393)) (= (x923 (x668 x920) x1412 0) x158))) (= x1099 x612) (= (x1333 x199) x573) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x670)) x755) x351))
(assert (= (x1567 87118632) (x668 87118632)))
(assert (x55 x285))
(assert (= (ite (and x954 x499) (x1455 x353) (ite (and x1497 x954 (not x499)) (x1205 x353) (x367 x353))) (x898 x353)))
(assert (x55 x523))
(assert (= (ite (and x419 x306) (x714 x787) (x817 x787)) (x1450 x787)))
(assert (= (x789 x390) (ite (= x390 x421) x338 (x360 x390))))
(assert (= x205 (=> (and (= x1011 (= 0 x1101)) (or (and (<= x196 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x196 0) (= x870 (x1407 1461501637330902918203684832716283019655932542975 x393)) (not x1011) (= (= x196 0) x95) (or (and (not x95) (= 1 x1182) (= x1442 x196)) (and (= x1182 0) (= x1442 0) x95)) (= x1438 (x923 (x668 x870) x706 0)) (= x706 (x923 (x668 x1101) (x1567 10) 0)) (= x196 (x1405 x1438))) (and x1011 (= x1182 0) (= x1442 0)))) x351)))
(assert (x55 x1458))
(assert (x55 x398))
(assert (= x16 x20))
(assert (x872 x446))
(assert (=> (>= 10000 x975) (= (x668 x975) (x1567 x975))))
(assert (x55 x63))
(assert (= (x751 (x668 x916)) x916))
(assert (x872 x1115))
(assert (x872 x454))
(assert (= (x751 (x262 x946 1)) (+ 1 (x751 x946))))
(assert (x929 x393))
(assert (=> (>= 10000 x1168) (= (x1567 x1168) (x668 x1168))))
(assert (=> (<= x103 10000) (= (x668 x103) (x1567 x103))))
(assert (= (x1376 x256) (ite (and x1223 x1331) (x856 x256) (x568 x256))))
(assert (x55 x1064))
(assert (x55 x1338))
(assert (= (ite (and x1006 x314 (not x395) x1466 x221 x756) (x1176 x787) (ite (and x1006 (not x221) x1466 x756 x314) (x1002 x787) (ite (and x1006 (not x1466) x756 x314) (x789 x787) (ite (and (not x1006) x314 x756) (x360 x787) (x100 x787))))) (x1136 x787)))
(assert (x55 x659))
(assert (= (x751 (x668 x1261)) x1261))
(assert (x55 x903))
(assert (= (x1446 x1262) (ite (= x1262 x297) x429 (x991 x1262))))
(assert (x55 x861))
(assert (= (ite (= x390 x297) x429 (x991 x390)) (x1446 x390)))
(assert (=> (>= 10000 x1053) (= (x1567 x1053) (x668 x1053))))
(assert (= (x751 (x668 x320)) x320))
(assert (= (ite (and x1331 x1223) (x856 x864) (x568 x864)) (x1376 x864)))
(assert (= (x751 (x1567 2960351575)) 2960351575))
(assert (x872 x1254))
(assert (x55 x1472))
(assert (x55 x522))
(assert (= x1531 (and x603 x1023)))
(assert (x55 x290))
(assert (=> (<= x298 10000) (= (x1567 x298) (x668 x298))))
(assert (x872 x1058))
(assert (= x975 (x751 (x668 x975))))
(assert (x55 x839))
(assert (x55 x551))
(assert (x872 x564))
(assert (x872 x1287))
(assert (x872 x506))
(assert (= (x751 (x1567 2293535753)) 2293535753))
(assert (= x964 (x751 (x668 x964))))
(assert (= x515 (=> (and (<= 0 x1042) (< x1114 2293535753) (= x458 (x923 (x668 x1527) x472 0)) (< x1114 911411945) (= x1114 69947311) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1042) (> 468353030 x1114) (= x467 (x1024 (x668 274184521717934524641157099916833587206))) (= (x923 (x668 x865) (x1567 10) 0) x472) (= x1042 (x1296 x458)) (< 0 x467) (= x1042 x1025) (<= x1527 1461501637330902918203684832716283019655932542975)) (=> (and (= x1268 x834) (= x1025 x883) (= x970 x880) (= x130 x1254)) x66))))
(assert (x55 x871))
(assert (x55 x1408))
(assert (= (x1348 x505) (ite (= x505 x1401) x1359 (x734 x505))))
(assert (= x182 x17))
(assert (x55 x564))
(assert (x55 x1482))
(assert (x55 x749))
(assert (x55 x981))
(assert (x872 274184521717934524641157099916833587206))
(assert (=> (>= 10000 x215) (= (x668 x215) (x1567 x215))))
(assert (x55 x730))
(assert (= (x1059 x316) (ite (and x756 x314 (not x75)) (x1136 x316) (x73 x316))))
(assert (x55 x614))
(assert (x55 x309))
(assert (x872 x740))
(assert (= (x751 (x668 x1433)) x1433))
(assert (= (x377 x426) (ite (= x426 x1507) x806 (x162 x426))))
(assert (= (x789 x744) (ite (= x744 x421) x338 (x360 x744))))
(assert (x872 x661))
(assert (= (ite (= x109 x1401) x1359 (x734 x109)) (x1348 x109)))
(assert (x55 x942))
(assert (=> (<= x1141 10000) (= (x1567 x1141) (x668 x1141))))
(assert (x55 x529))
(assert (x55 x1148))
(assert (x55 x237))
(assert (= (x751 (x1567 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x55 x325))
(assert (= (x581 x1179) (ite (= x1179 x150) x68 (x1348 x1179))))
(assert (x55 x448))
(assert (x55 x338))
(assert (= x984 (x751 (x668 x984))))
(assert (x55 x715))
(assert (= (ite (and x1223 x1331) (x856 x309) (x568 x309)) (x1376 x309)))
(assert (x55 x103))
(assert (x872 x896))
(assert (= (ite (= x605 x297) x429 (x991 x605)) (x1446 x605)))
(assert (= (ite (and x918 x1232) (x1421 x1179) (x270 x1179)) (x211 x1179)))
(assert (x55 x613))
(assert (= (x751 (x668 x1528)) x1528))
(assert (= x788 (x751 (x668 x788))))
(assert (x55 x196))
(assert (x55 x555))
(assert (x872 x665))
(assert (= (x1002 x1262) (ite (= x1262 x281) x139 (x789 x1262))))
(assert (= (ite (and (not x1386) (not x1208) x628 x1420) (x1212 x443) (ite (and x628 (not x1420) (not x1208)) (x366 x443) (ite (and x1208 x628) (x366 x443) (x1568 x443)))) (x1521 x443)))
(assert (x55 x1388))
(assert (= (and x306 (not x419)) x425))
(assert (x55 x1545))
(assert (=> (>= 10000 x665) (= (x668 x665) (x1567 x665))))
(assert (= (ite (= x1443 x605) x1301 (x1446 x1443)) (x844 x1443)))
(assert (= (x751 (x668 x1053)) x1053))
(assert (= (x751 (x668 x512)) x512))
(assert (= (x1002 x864) (ite (= x864 x281) x139 (x789 x864))))
(assert (= x913 (=> (and (<= x1284 1461501637330902918203684832716283019655932542975) (= (x923 (x668 x1496) x1079 0) x443) (= x1079 (x923 (x668 x1284) x848 0)) (= x237 (x718 x443)) (< x206 2960351575) (= x523 x237) (= x405 (x1024 (x668 274184521717934524641157099916833587206))) (= (x923 (x668 x1449) x1437 0) x848) (not (= 2418364589 x206)) (>= 1461501637330902918203684832716283019655932542975 x1496) (not (> 2293535753 x206)) (< x206 2690754053) (<= 0 x237) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x237) (not (= 2293535753 x206)) (<= x1449 1461501637330902918203684832716283019655932542975) (= 2532887486 x206) (> x405 0) (not (= x206 2512682246)) (= (x923 (x668 x446) (x1567 4) 0) x1437)) x1299)))
(assert (= (x1567 2690754053) (x668 2690754053)))
(assert (= (x751 (x668 x569)) x569))
(assert (x55 x519))
(assert (=> (>= 10000 x1395) (= (x1567 x1395) (x668 x1395))))
(assert (x55 x887))
(assert (x55 x772))
(assert (= x1553 true))
(assert (x55 x802))
(assert (= (=> (= x816 x172) x754) x675))
(assert (x872 x749))
(assert (= (x360 x612) (ite (= x612 x1253) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x694 x612))))
(assert (x55 x1475))
(assert (= (x751 (x668 x925)) x925))
(assert (= 0 (x439 x1470)))
(assert (x55 x1213))
(assert (= x506 (x751 (x668 x506))))
(assert (x55 x200))
(assert (x872 x1340))
(assert (x55 x1265))
(assert (x55 x1565))
(assert (x55 x782))
(assert (x55 x638))
(assert (x55 x594))
(assert (= (x844 x1470) (ite (= x1470 x605) x1301 (x1446 x1470))))
(assert (x55 x1417))
(assert (x872 x610))
(assert (x55 x1076))
(assert (x55 x394))
(assert (= (x1567 2512682246) (x668 2512682246)))
(assert (x55 x62))
(assert (x55 x118))
(assert (= (x898 x599) (ite (and x954 x499) (x1455 x599) (ite (and x1497 x954 (not x499)) (x1205 x599) (x367 x599)))))
(assert (= (and x183 x583) x1246))
(assert (x55 x1099))
(assert (x55 x491))
(assert (= (ite (= x1401 x309) x1359 (x734 x309)) (x1348 x309)))
(assert (= (=> (and (= (x923 (x668 x788) x935 0) x210) (= x498 (x923 (x668 x58) (x1567 7) 0)) (= x788 (x1407 1461501637330902918203684832716283019655932542975 x765)) (not (> x442 x951)) (= (> x1027 0) x1161) (<= 0 x1027) (= (x1038 x210) x1027) (= x935 (x923 (x668 x1537) x498 0)) (= x1537 (x1407 1461501637330902918203684832716283019655932542975 x393)) (<= x1027 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x951) (<= x951 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (not x1161) x1375) (=> (and (= x689 (x923 (x668 x340) x287 0)) (<= x684 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x684) (= x218 0) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x319) (= x1571 (x923 (x668 x319) x689 0)) (= x287 (x923 (x668 x58) (x1567 9) 0)) (= (x1407 1461501637330902918203684832716283019655932542975 x393) x340) (= (x349 x1571) x684) (= x416 x684) x1161) x575))) x10))
(assert (=> (>= 10000 x1306) (= (x668 x1306) (x1567 x1306))))
(assert (= (x751 (x1567 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (x55 x1402))
(assert (=> (>= 10000 x1058) (= (x1567 x1058) (x668 x1058))))
(assert (= (x356 x529) (ite (and (not x1386) x628 x1420 (not x1208)) (x844 x529) (ite (and (not x1208) (not x1420) x628) (x1446 x529) (ite (and x628 x1208) (x1446 x529) (x151 x529))))))
(assert (x55 x1381))
(assert (x55 x1514))
(assert (= (ite (= x281 x309) x139 (x789 x309)) (x1002 x309)))
(assert (= (x844 x390) (ite (= x605 x390) x1301 (x1446 x390))))
(assert (=> (<= x446 10000) (= (x668 x446) (x1567 x446))))
(assert (x55 x806))
(assert (=> (<= x398 10000) (= (x1567 x398) (x668 x398))))
(assert (x55 x469))
(assert (x55 x34))
(assert (x55 x39))
(assert (x55 x645))
(assert (= (=> (and (= x464 (= 0 x867)) (or (and (= x416 0) x464 (= 0 x218)) (and (= x512 (x1407 1461501637330902918203684832716283019655932542975 x393)) (<= 0 x1064) (= x562 (x923 (x668 x564) x1353 0)) (= x1064 (x349 x562)) (<= x1064 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x218) (= (x1407 1461501637330902918203684832716283019655932542975 x765) x564) (= x416 x1064) (= (x923 (x668 x512) x1088 0) x1353) (not x464) (= x1088 (x923 (x668 x867) (x1567 9) 0))))) x575) x1239))
(assert (=> (>= 10000 x1539) (= (x668 x1539) (x1567 x1539))))
(assert (=> (<= x1266 10000) (= (x1567 x1266) (x668 x1266))))
(assert (=> (>= 10000 x662) (= (x668 x662) (x1567 x662))))
(assert (x55 x610))
(assert (x55 x708))
(assert (x55 x1256))
(assert (x55 x490))
(assert (x55 x910))
(assert (= (x751 (x668 x63)) x63))
(assert (x55 x153))
(assert (= (x751 (x1567 2939843472)) 2939843472))
(assert (x55 x379))
(assert (x872 x1387))
(assert (=> (>= 10000 x896) (= (x1567 x896) (x668 x896))))
(assert (= x576 (x751 (x668 x576))))
(assert (x55 x1539))
(assert (x55 x827))
(assert (x55 x501))
(assert (= (x751 (x668 x1043)) x1043))
(assert (x55 x1491))
(assert (= x1320 (x751 (x668 x1320))))
(assert (x55 x286))
(assert (= (x751 (x668 x1388)) x1388))
(assert (= (or x496 (and x1337 x1161)) x954))
(assert (x872 x225))
(assert (x55 x805))
(assert (x872 x1044))
(assert (x55 x919))
(assert (x872 x1381))
(assert (=> (<= x545 10000) (= (x1567 x545) (x668 x545))))
(assert (= 2211524764 (x751 (x1567 2211524764))))
(check-sat)
