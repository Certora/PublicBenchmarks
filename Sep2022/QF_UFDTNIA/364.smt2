(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x1066 0)) (((x351 (x463 x1066) (x313 x1066) (x330 Int)) (x1265 (x40 x1066) (x1346 Int)) (x1106 (x34 Int)))))
(declare-fun x936 () Int)
(declare-fun x522 () Bool)
(declare-fun x874 () Bool)
(declare-fun x632 () Bool)
(declare-fun x78 () Int)
(declare-fun x570 () Bool)
(declare-fun x758 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x781 () Int)
(declare-fun x558 () Int)
(declare-fun x1286 () x1066)
(declare-fun x452 () x1066)
(declare-fun x561 () Int)
(declare-fun x1014 () Int)
(declare-fun x1112 () Int)
(declare-fun x206 (x1066) Int)
(declare-fun x1394 () Int)
(declare-fun x1392 () x1066)
(declare-fun x654 () Int)
(declare-fun x1004 () Int)
(declare-fun x1551 () Int)
(declare-fun x678 () Bool)
(declare-fun x608 () Int)
(declare-fun x955 () Int)
(declare-fun x1093 () Bool)
(declare-fun x1519 () Int)
(declare-fun x1523 () Bool)
(declare-fun x806 () Int)
(declare-fun x63 () Int)
(declare-fun x154 () Bool)
(declare-fun x1039 () Int)
(declare-fun x79 () Int)
(declare-fun x163 () Int)
(declare-fun x932 () Bool)
(declare-fun x1377 () Bool)
(declare-fun x810 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x355 () Int)
(declare-fun x221 () Int)
(declare-fun x487 () x1066)
(declare-fun x873 () Int)
(declare-fun x1259 () Bool)
(declare-fun x1312 () x1066)
(declare-fun x645 () Bool)
(declare-fun x48 () x1066)
(declare-fun x825 () Bool)
(declare-fun x273 () Int)
(declare-fun x1125 () Bool)
(declare-fun x1034 () x1066)
(declare-fun x198 () Int)
(declare-fun x1319 () Int)
(declare-fun x1441 () Int)
(declare-fun x1036 () Int)
(declare-fun x1257 () Int)
(declare-fun x978 () Int)
(declare-fun x1408 () Bool)
(declare-fun x951 () Int)
(declare-fun x1261 () Bool)
(declare-fun x679 () Int)
(declare-fun x817 () Int)
(declare-fun x866 () Int)
(declare-fun x1470 () Int)
(declare-fun x379 () Int)
(declare-fun x150 () Bool)
(declare-fun x60 () Bool)
(declare-fun x38 () Int)
(declare-fun x1574 () Bool)
(declare-fun x443 () Bool)
(declare-fun x51 () Int)
(declare-fun x625 () Int)
(declare-fun x1081 () Int)
(declare-fun x1582 () Int)
(declare-fun x1591 () x1066)
(declare-fun x1245 () Int)
(declare-fun x1243 () Int)
(declare-fun x1001 () Int)
(declare-fun x280 () Bool)
(declare-fun x14 () Bool)
(declare-fun x1126 () Int)
(declare-fun x1458 () Bool)
(declare-fun x474 () Int)
(declare-fun x641 () Bool)
(declare-fun x696 () Int)
(declare-fun x1354 () Int)
(declare-fun x692 () x1066)
(declare-fun x1437 () Int)
(declare-fun x940 () Int)
(declare-fun x1435 () Int)
(declare-fun x402 () Int)
(declare-fun x126 () x1066)
(declare-fun x727 () Bool)
(declare-fun x775 () Int)
(declare-fun x1170 () Int)
(declare-fun x1546 () Bool)
(declare-fun x172 () x1066)
(declare-fun x1524 () Int)
(declare-fun x1585 (Int) x1066)
(declare-fun x1288 () Bool)
(declare-fun x236 (x1066) Int)
(declare-fun x1406 () Int)
(declare-fun x233 () Int)
(declare-fun x1417 () Bool)
(declare-fun x184 () Int)
(declare-fun x513 () Int)
(declare-fun x965 () Int)
(declare-fun x1503 () Bool)
(declare-fun x683 () Int)
(declare-fun x151 () Bool)
(declare-fun x744 () Int)
(declare-fun x976 () Bool)
(declare-fun x1121 () x1066)
(declare-fun x1567 () Int)
(declare-fun x798 () Bool)
(declare-fun x1122 () Int)
(declare-fun x716 () x1066)
(declare-fun x815 () Int)
(declare-fun x1253 () Bool)
(declare-fun x863 () Int)
(declare-fun x275 () x1066)
(declare-fun x1157 () Bool)
(declare-fun x824 () Bool)
(declare-fun x809 () Bool)
(declare-fun x555 () Bool)
(declare-fun x16 () Int)
(declare-fun x1416 () Int)
(declare-fun x458 () Bool)
(declare-fun x728 () x1066)
(declare-fun x1472 () Int)
(declare-fun x174 (Int) Int)
(declare-fun x505 () Int)
(declare-fun x857 () x1066)
(declare-fun x270 (x1066) Int)
(declare-fun x528 () x1066)
(declare-fun x159 () x1066)
(declare-fun x448 () Bool)
(declare-fun x1442 () Int)
(declare-fun x861 () x1066)
(declare-fun x42 () x1066)
(declare-fun x1086 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x1493 () Int)
(declare-fun x774 () Bool)
(declare-fun x284 () x1066)
(declare-fun x1418 () Bool)
(declare-fun x720 () Int)
(declare-fun x969 () x1066)
(declare-fun x241 () Int)
(declare-fun x617 () Int)
(declare-fun x374 () Bool)
(declare-fun x1557 (Int) Int)
(declare-fun x1282 () Int)
(declare-fun x1322 () Int)
(declare-fun x862 () Bool)
(declare-fun x876 () Bool)
(declare-fun x708 () Int)
(declare-fun x691 () Int)
(declare-fun x390 () Int)
(declare-fun x176 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x1525 () Int)
(declare-fun x131 () x1066)
(declare-fun x1487 () Int)
(declare-fun x70 () x1066)
(declare-fun x427 () Int)
(declare-fun x503 () Bool)
(declare-fun x864 () Int)
(declare-fun x266 () x1066)
(declare-fun x604 () Int)
(declare-fun x898 () Bool)
(declare-fun x1533 () x1066)
(declare-fun x35 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x1139 () Int)
(declare-fun x596 () Int)
(declare-fun x869 () x1066)
(declare-fun x935 () Int)
(declare-fun x227 () Int)
(declare-fun x76 () x1066)
(declare-fun x1535 () Bool)
(declare-fun x239 () Int)
(declare-fun x220 () Int)
(declare-fun x847 () Bool)
(declare-fun x574 () Int)
(declare-fun x102 (x1066) Int)
(declare-fun x1373 () Bool)
(declare-fun x149 () x1066)
(declare-fun x1332 () Bool)
(declare-fun x801 () Bool)
(declare-fun x137 () Bool)
(declare-fun x550 () Int)
(declare-fun x966 () Bool)
(declare-fun x575 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x710 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x486 () x1066)
(declare-fun x1477 () Int)
(declare-fun x870 () Int)
(declare-fun x818 () Bool)
(declare-fun x125 () Int)
(declare-fun x1438 () x1066)
(declare-fun x986 () Bool)
(declare-fun x1031 () Bool)
(declare-fun x321 () Int)
(declare-fun x831 () x1066)
(declare-fun x269 () x1066)
(declare-fun x1531 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x1457 () Int)
(declare-fun x333 () x1066)
(declare-fun x1 () x1066)
(declare-fun x109 (x1066) Int)
(declare-fun x1185 () x1066)
(declare-fun x1011 () Int)
(declare-fun x1146 () Int)
(declare-fun x1165 () Int)
(declare-fun x871 () Bool)
(declare-fun x440 () Int)
(declare-fun x1506 () Int)
(declare-fun x232 () Bool)
(declare-fun x1459 () Int)
(declare-fun x903 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x694 () Int)
(declare-fun x1138 () Int)
(declare-fun x1090 () Int)
(declare-fun x223 () Int)
(declare-fun x177 () Bool)
(declare-fun x41 () x1066)
(declare-fun x420 () Int)
(declare-fun x507 () x1066)
(declare-fun x1111 () x1066)
(declare-fun x603 () Bool)
(declare-fun x849 () x1066)
(declare-fun x865 () Int)
(declare-fun x97 () Int)
(declare-fun x1451 () Int)
(declare-fun x970 () Int)
(declare-fun x637 () x1066)
(declare-fun x956 () Int)
(declare-fun x301 () Int)
(declare-fun x1433 () x1066)
(declare-fun x639 (Int) Int)
(declare-fun x1215 () Bool)
(declare-fun x1403 () Int)
(declare-fun x698 () x1066)
(declare-fun x729 () Bool)
(declare-fun x577 () Int)
(declare-fun x1562 () Bool)
(declare-fun x1067 () Int)
(declare-fun x1167 () Int)
(declare-fun x583 () Int)
(declare-fun x10 () Bool)
(declare-fun x747 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x304 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x423 () Int)
(declare-fun x950 () Int)
(declare-fun x20 () x1066)
(declare-fun x1141 () Int)
(declare-fun x595 () Int)
(declare-fun x146 () Int)
(declare-fun x480 () Int)
(declare-fun x1143 () Int)
(declare-fun x143 () Bool)
(declare-fun x308 () Bool)
(declare-fun x90 () Int)
(declare-fun x1495 () x1066)
(declare-fun x985 () Int)
(declare-fun x681 () Bool)
(declare-fun x326 () Int)
(declare-fun x94 () Int)
(declare-fun x73 () Bool)
(declare-fun x341 () Bool)
(declare-fun x469 () Int)
(declare-fun x746 () Int)
(declare-fun x485 () Int)
(declare-fun x231 () x1066)
(declare-fun x105 () Bool)
(declare-fun x1295 () x1066)
(declare-fun x253 () Bool)
(declare-fun x897 () Bool)
(declare-fun x813 () Int)
(declare-fun x1123 () Bool)
(declare-fun x858 () Bool)
(declare-fun x258 () Int)
(declare-fun x837 () Bool)
(declare-fun x688 () Int)
(declare-fun x827 () Bool)
(declare-fun x763 () Int)
(declare-fun x1181 () Bool)
(declare-fun x428 () Bool)
(declare-fun x211 () Bool)
(declare-fun x157 () Int)
(declare-fun x1110 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x1554 () Int)
(declare-fun x906 () Int)
(declare-fun x538 () x1066)
(declare-fun x1488 () x1066)
(declare-fun x547 () Int)
(declare-fun x407 () Int)
(declare-fun x37 () Int)
(declare-fun x1426 () Int)
(declare-fun x665 () Int)
(declare-fun x1316 () x1066)
(declare-fun x1109 () Bool)
(declare-fun x1133 () Int)
(declare-fun x350 () Int)
(declare-fun x1309 () Int)
(declare-fun x1427 () Int)
(declare-fun x811 () Int)
(declare-fun x393 () Bool)
(declare-fun x658 () Int)
(declare-fun x278 () Int)
(declare-fun x404 () Int)
(declare-fun x134 () Bool)
(declare-fun x1356 () Int)
(declare-fun x612 () Int)
(declare-fun x1550 () Int)
(declare-fun x918 () x1066)
(declare-fun x904 () x1066)
(declare-fun x169 () x1066)
(declare-fun x1026 () Bool)
(declare-fun x80 () x1066)
(declare-fun x843 () Int)
(declare-fun x1365 () Int)
(declare-fun x130 () x1066)
(declare-fun x539 (x1066) Int)
(declare-fun x542 () x1066)
(declare-fun x1247 () Int)
(declare-fun x887 () Int)
(declare-fun x496 () Int)
(declare-fun x387 () x1066)
(declare-fun x834 () Int)
(declare-fun x418 () Bool)
(declare-fun x1320 () Int)
(declare-fun x1387 () x1066)
(declare-fun x83 () Int)
(declare-fun x296 () Bool)
(declare-fun x930 () Bool)
(declare-fun x702 () x1066)
(declare-fun x557 () Int)
(declare-fun x1152 () Int)
(declare-fun x767 () Int)
(declare-fun x416 () Bool)
(declare-fun x1411 () Int)
(declare-fun x391 () Int)
(declare-fun x628 () Bool)
(declare-fun x1137 () Int)
(declare-fun x267 () Bool)
(declare-fun x111 () x1066)
(declare-fun x317 () Int)
(declare-fun x1401 () Bool)
(declare-fun x960 () Bool)
(declare-fun x581 () Bool)
(declare-fun x911 () Bool)
(declare-fun x314 () Bool)
(declare-fun x254 () Int)
(declare-fun x322 () Int)
(declare-fun x335 () Int)
(declare-fun x1127 () Bool)
(declare-fun x779 () x1066)
(declare-fun x1584 () x1066)
(declare-fun x141 () Bool)
(declare-fun x787 () Int)
(declare-fun x1504 () Int)
(declare-fun x302 () Int)
(declare-fun x1436 () x1066)
(declare-fun x1328 () Int)
(declare-fun x549 () Int)
(declare-fun x1480 () Bool)
(declare-fun x277 () Int)
(declare-fun x319 () Bool)
(declare-fun x607 () Bool)
(declare-fun x1252 () Int)
(declare-fun x310 () Int)
(declare-fun x1561 () Int)
(declare-fun x593 () x1066)
(declare-fun x1402 () Bool)
(declare-fun x1318 () Bool)
(declare-fun x947 () Bool)
(declare-fun x972 () Bool)
(declare-fun x1134 () x1066)
(declare-fun x719 (Int) Int)
(declare-fun x563 () Bool)
(declare-fun x345 () Bool)
(declare-fun x21 () Bool)
(declare-fun x1502 () Int)
(declare-fun x1552 () Int)
(declare-fun x705 () Int)
(declare-fun x619 () Bool)
(declare-fun x25 () Int)
(declare-fun x1521 () Bool)
(declare-fun x352 () Int)
(declare-fun x1153 () Bool)
(declare-fun x764 () Bool)
(declare-fun x29 () Int)
(declare-fun x249 () x1066)
(declare-fun x1422 () Int)
(declare-fun x312 () Bool)
(declare-fun x1172 () x1066)
(declare-fun x1085 () Int)
(declare-fun x1205 (Int) Int)
(declare-fun x899 () Int)
(declare-fun x208 () Int)
(declare-fun x948 () Bool)
(declare-fun x928 () Int)
(declare-fun x1301 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x1083 (x1066) Int)
(declare-fun x879 () Int)
(declare-fun x325 () Bool)
(declare-fun x701 () Int)
(declare-fun x543 () Int)
(declare-fun x142 () Bool)
(declare-fun x439 () Int)
(declare-fun x785 () Bool)
(declare-fun x912 () Bool)
(declare-fun x909 () Int)
(declare-fun x11 () Int)
(declare-fun x1095 () Int)
(declare-fun x1268 () Bool)
(declare-fun x1028 () Int)
(declare-fun x271 () Bool)
(declare-fun x213 () Bool)
(declare-fun x1560 () Bool)
(declare-fun x1237 () x1066)
(declare-fun x451 () Bool)
(declare-fun x72 () Int)
(declare-fun x292 () Bool)
(declare-fun x1107 () x1066)
(declare-fun x188 () Bool)
(declare-fun x908 () Int)
(declare-fun x1412 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x44 () Int)
(declare-fun x537 () Int)
(declare-fun x450 () Int)
(declare-fun x971 () Int)
(declare-fun x476 () Int)
(declare-fun x506 () Bool)
(declare-fun x830 () x1066)
(declare-fun x1395 () Int)
(declare-fun x1389 () Int)
(declare-fun x1570 () Bool)
(declare-fun x789 (x1066) Int)
(declare-fun x1361 () Int)
(declare-fun x890 () Int)
(declare-fun x677 () Int)
(declare-fun x786 () Int)
(declare-fun x252 () Int)
(declare-fun x234 () x1066)
(declare-fun x1453 () Bool)
(declare-fun x892 () x1066)
(declare-fun x1532 () Bool)
(declare-fun x1500 () Int)
(declare-fun x1491 () x1066)
(declare-fun x894 () x1066)
(declare-fun x1367 () Int)
(declare-fun x1166 () Int)
(declare-fun x1545 () Bool)
(declare-fun x1056 () Int)
(declare-fun x264 () Int)
(declare-fun x332 () Int)
(declare-fun x445 () Bool)
(declare-fun x642 () Int)
(declare-fun x438 () Int)
(declare-fun x276 () Bool)
(declare-fun x46 () Int)
(declare-fun x1255 () Bool)
(declare-fun x156 () x1066)
(declare-fun x661 () Int)
(declare-fun x512 () Int)
(declare-fun x568 () x1066)
(declare-fun x915 () Int)
(declare-fun x1539 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x1415 () Int)
(declare-fun x675 () Bool)
(declare-fun x1455 (Int) Int)
(declare-fun x1062 () x1066)
(declare-fun x1000 () Bool)
(declare-fun x1447 () x1066)
(declare-fun x1486 () Int)
(declare-fun x551 () Int)
(declare-fun x605 () Int)
(declare-fun x953 () Bool)
(declare-fun x196 () Int)
(declare-fun x495 () Int)
(declare-fun x840 () Int)
(declare-fun x75 () Bool)
(declare-fun x87 () x1066)
(declare-fun x1249 () Bool)
(declare-fun x1027 () Int)
(declare-fun x1030 () x1066)
(declare-fun x877 () Int)
(declare-fun x833 () Int)
(declare-fun x1241 () Int)
(declare-fun x1115 () x1066)
(declare-fun x1565 () x1066)
(declare-fun x760 () Int)
(declare-fun x1357 () Bool)
(declare-fun x298 () Int)
(declare-fun x793 () x1066)
(declare-fun x693 () Bool)
(declare-fun x749 () Int)
(declare-fun x856 () Int)
(declare-fun x392 () Bool)
(declare-fun x778 () Int)
(declare-fun x1270 () Bool)
(declare-fun x672 () x1066)
(declare-fun x738 () Bool)
(declare-fun x606 () x1066)
(declare-fun x1420 () x1066)
(declare-fun x1071 () Int)
(declare-fun x1293 () Int)
(declare-fun x425 () x1066)
(declare-fun x517 () Int)
(declare-fun x1077 () Bool)
(declare-fun x878 () Bool)
(declare-fun x1538 () Int)
(declare-fun x804 () Int)
(declare-fun x77 () x1066)
(declare-fun x66 () Int)
(declare-fun x366 () x1066)
(declare-fun x1475 () x1066)
(declare-fun x395 () x1066)
(declare-fun x530 () Int)
(declare-fun x578 () Int)
(declare-fun x1044 () Int)
(declare-fun x1368 () Int)
(declare-fun x1032 () Bool)
(declare-fun x994 () Int)
(declare-fun x246 () Bool)
(declare-fun x1178 () Int)
(declare-fun x306 () x1066)
(declare-fun x88 () Int)
(declare-fun x1445 () Int)
(declare-fun x519 () Int)
(declare-fun x1499 () Int)
(declare-fun x500 () Int)
(declare-fun x256 () Int)
(declare-fun x57 () x1066)
(declare-fun x1547 (x1066) Int)
(declare-fun x4 () Bool)
(declare-fun x1425 () Bool)
(declare-fun x348 () x1066)
(declare-fun x71 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x422 () Bool)
(declare-fun x346 (x1066) Int)
(declare-fun x84 () Bool)
(declare-fun x754 () Int)
(declare-fun x135 () x1066)
(declare-fun x1325 () Int)
(declare-fun x265 () Int)
(declare-fun x882 () Int)
(declare-fun x115 () Int)
(declare-fun x800 () Int)
(declare-fun x110 () Int)
(declare-fun x1575 () Int)
(declare-fun x279 () Int)
(declare-fun x286 () x1066)
(declare-fun x183 () Int)
(declare-fun x191 (x1066) Int)
(declare-fun x1482 () x1066)
(declare-fun x45 () Int)
(declare-fun x118 () x1066)
(declare-fun x516 () Int)
(declare-fun x1132 () x1066)
(declare-fun x442 (Int) Int)
(declare-fun x1359 () Int)
(declare-fun x990 () x1066)
(declare-fun x1197 () Int)
(declare-fun x618 () Int)
(declare-fun x1335 () Bool)
(declare-fun x92 () x1066)
(declare-fun x585 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x842 () Bool)
(declare-fun x1342 () x1066)
(declare-fun x967 () Bool)
(declare-fun x1573 () x1066)
(declare-fun x771 () Bool)
(declare-fun x1161 () x1066)
(declare-fun x1037 () Bool)
(declare-fun x975 () Int)
(declare-fun x212 () Bool)
(declare-fun x1251 () Int)
(declare-fun x707 () Int)
(declare-fun x1228 () Bool)
(declare-fun x268 () Int)
(declare-fun x927 () Bool)
(declare-fun x47 () Int)
(declare-fun x1501 () x1066)
(declare-fun x1424 () Bool)
(declare-fun x1543 () Int)
(declare-fun x977 () Int)
(declare-fun x983 () Int)
(declare-fun x85 () Bool)
(declare-fun x1287 () Int)
(declare-fun x525 () Bool)
(declare-fun x375 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x1304 () Int)
(declare-fun x477 () Int)
(declare-fun x1405 () Int)
(declare-fun x937 () Bool)
(declare-fun x107 () Int)
(declare-fun x508 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x441 () Int)
(declare-fun x610 () Int)
(declare-fun x357 () Int)
(declare-fun x475 () x1066)
(declare-fun x922 (Int) Int)
(declare-fun x945 () Int)
(declare-fun x761 () Int)
(declare-fun x359 () Int)
(declare-fun x484 () x1066)
(declare-fun x829 () Int)
(declare-fun x216 () Int)
(declare-fun x1269 () Int)
(declare-fun x364 () Int)
(declare-fun x1063 () Int)
(declare-fun x217 () Int)
(declare-fun x582 () Bool)
(declare-fun x687 () Int)
(declare-fun x1465 () Int)
(declare-fun x730 () Int)
(declare-fun x1440 () Bool)
(declare-fun x1384 () Int)
(declare-fun x1045 () Int)
(declare-fun x515 () x1066)
(declare-fun x859 () x1066)
(declare-fun x1130 () x1066)
(declare-fun x1351 () Bool)
(declare-fun x1323 () Int)
(declare-fun x1089 () Int)
(declare-fun x1347 () Bool)
(declare-fun x1593 () x1066)
(declare-fun x331 () Int)
(declare-fun x1070 () Int)
(declare-fun x919 () Int)
(declare-fun x931 () Int)
(declare-fun x900 () Bool)
(declare-fun x147 () Int)
(declare-fun x925 () Bool)
(declare-fun x207 () Bool)
(declare-fun x1264 () x1066)
(declare-fun x891 () Int)
(declare-fun x536 () x1066)
(declare-fun x896 () Bool)
(declare-fun x564 () Int)
(declare-fun x689 () x1066)
(declare-fun x748 () Bool)
(declare-fun x1443 () Int)
(declare-fun x1324 () Int)
(declare-fun x243 () Bool)
(declare-fun x1145 () Int)
(declare-fun x1595 () Int)
(declare-fun x1248 () x1066)
(declare-fun x723 () Int)
(declare-fun x1075 () Bool)
(declare-fun x1507 () Int)
(declare-fun x158 () Int)
(declare-fun x752 () Bool)
(declare-fun x1549 () Int)
(declare-fun x545 () x1066)
(declare-fun x836 () Bool)
(declare-fun x128 () Bool)
(declare-fun x553 () Bool)
(declare-fun x962 () Bool)
(declare-fun x1103 () Int)
(declare-fun x684 () Int)
(declare-fun x53 () x1066)
(declare-fun x1508 () Int)
(declare-fun x435 () Int)
(declare-fun x586 () Int)
(declare-fun x262 () Bool)
(declare-fun x472 () Int)
(declare-fun x1462 () Bool)
(declare-fun x1035 () Int)
(declare-fun x155 () Int)
(declare-fun x30 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x657 () Int)
(declare-fun x591 () Int)
(declare-fun x98 () Int)
(declare-fun x854 (x1066) Int)
(declare-fun x1182 () Bool)
(declare-fun x797 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x1534 () x1066)
(declare-fun x378 () Int)
(declare-fun x454 () Int)
(declare-fun x1250 () Int)
(declare-fun x1227 () Bool)
(declare-fun x408 () Bool)
(declare-fun x721 () Int)
(declare-fun x108 () Bool)
(declare-fun x210 () Bool)
(declare-fun x624 () Int)
(declare-fun x984 () Int)
(declare-fun x1580 (Int) Int)
(declare-fun x199 () Int)
(declare-fun x86 () Bool)
(declare-fun x465 () Bool)
(declare-fun x1329 () Int)
(declare-fun x850 () Int)
(declare-fun x1360 (x1066) Int)
(declare-fun x160 () Int)
(declare-fun x1059 () Int)
(declare-fun x526 () Int)
(declare-fun x9 () Int)
(declare-fun x1038 () x1066)
(declare-fun x1510 () Int)
(declare-fun x1176 () Bool)
(declare-fun x674 () Bool)
(declare-fun x914 () Bool)
(declare-fun x556 () x1066)
(declare-fun x855 () Bool)
(declare-fun x1207 () x1066)
(declare-fun x235 () Bool)
(declare-fun x602 () Int)
(declare-fun x1467 () Int)
(declare-fun x1456 (Int Int) Int)
(declare-fun x910 (x1066) Int)
(declare-fun x514 () Bool)
(declare-fun x3 () Bool)
(declare-fun x565 () Int)
(declare-fun x750 () Int)
(declare-fun x905 () x1066)
(declare-fun x488 () Bool)
(declare-fun x1583 () Bool)
(declare-fun x201 () Bool)
(declare-fun x288 () Int)
(declare-fun x50 () Int)
(declare-fun x363 () Int)
(declare-fun x571 () Bool)
(declare-fun x995 () Bool)
(declare-fun x766 () x1066)
(declare-fun x1337 () Int)
(declare-fun x494 () Int)
(declare-fun x1225 () Bool)
(declare-fun x690 () Bool)
(declare-fun x933 () Bool)
(declare-fun x1492 () Int)
(declare-fun x1494 () Bool)
(declare-fun x1113 () x1066)
(declare-fun x1463 () Int)
(declare-fun x225 () Int)
(declare-fun x165 () Bool)
(declare-fun x432 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x166 () x1066)
(declare-fun x572 () Int)
(declare-fun x453 () Bool)
(declare-fun x938 () Int)
(declare-fun x709 () x1066)
(declare-fun x1064 (Int) Int)
(declare-fun x339 () Bool)
(declare-fun x99 () Int)
(declare-fun x1054 () Int)
(declare-fun x1213 () Int)
(declare-fun x1159 () x1066)
(declare-fun x1163 () Int)
(declare-fun x281 () Int)
(declare-fun x1556 () Int)
(declare-fun x943 () Int)
(declare-fun x1381 () Bool)
(declare-fun x598 (x1066) Int)
(declare-fun x534 () x1066)
(declare-fun x1101 () Bool)
(declare-fun x527 () Bool)
(declare-fun x790 () Bool)
(declare-fun x772 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x1307 () Int)
(declare-fun x287 () Bool)
(declare-fun x627 () Int)
(declare-fun x1082 (Int) Int)
(declare-fun x31 () Int)
(declare-fun x589 () x1066)
(declare-fun x459 () Int)
(declare-fun x1372 () Bool)
(declare-fun x303 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x1483 () Int)
(declare-fun x535 () x1066)
(declare-fun x244 () x1066)
(declare-fun x1260 (x1066) Int)
(declare-fun x1196 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x1388 () x1066)
(declare-fun x735 () x1066)
(declare-fun x24 () Int)
(declare-fun x1527 () x1066)
(declare-fun x796 () Bool)
(declare-fun x1298 () x1066)
(declare-fun x1190 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x1040 () Int)
(declare-fun x490 () Int)
(declare-fun x554 () x1066)
(declare-fun x1164 () Bool)
(declare-fun x1327 () Int)
(declare-fun x1490 () Int)
(declare-fun x819 () Bool)
(declare-fun x1224 () Int)
(declare-fun x447 () Int)
(declare-fun x697 () Int)
(declare-fun x1497 () Int)
(declare-fun x1240 () Int)
(declare-fun x1311 () Bool)
(declare-fun x736 () Int)
(declare-fun x1429 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x552 () Int)
(declare-fun x544 () Bool)
(declare-fun x1505 () Int)
(declare-fun x893 () Bool)
(declare-fun x2 () Int)
(declare-fun x867 () x1066)
(declare-fun x1208 () Int)
(declare-fun x597 () Int)
(declare-fun x290 () Bool)
(declare-fun x1476 () Int)
(declare-fun x762 () Bool)
(declare-fun x999 () x1066)
(declare-fun x1084 () x1066)
(declare-fun x1468 () Int)
(declare-fun x117 () Int)
(declare-fun x851 () Bool)
(declare-fun x140 () x1066)
(declare-fun x979 () Bool)
(declare-fun x250 () Int)
(declare-fun x504 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x1217 (Int) Int)
(declare-fun x1428 () Bool)
(declare-fun x770 () Int)
(declare-fun x1452 () Int)
(declare-fun x272 () Int)
(declare-fun x1484 () Int)
(declare-fun x1579 () Bool)
(declare-fun x1104 () x1066)
(declare-fun x656 (Int) Int)
(declare-fun x1509 () x1066)
(declare-fun x309 () Int)
(declare-fun x601 () Int)
(declare-fun x336 (Int) Int)
(declare-fun x127 () Int)
(declare-fun x1404 () Int)
(declare-fun x880 () Int)
(declare-fun x185 () Int)
(declare-fun x1080 () Bool)
(declare-fun x740 () Int)
(declare-fun x224 () Bool)
(declare-fun x1276 () Int)
(declare-fun x1421 () Int)
(declare-fun x623 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x700 () Int)
(declare-fun x386 () x1066)
(declare-fun x580 () Int)
(declare-fun x1204 () Int)
(declare-fun x1530 (Int) Int)
(declare-fun x1198 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x15 () Bool)
(declare-fun x205 () Int)
(declare-fun x1189 () Int)
(declare-fun x576 () Int)
(declare-fun x129 () Int)
(declare-fun x799 (x1066) Int)
(declare-fun x424 () Int)
(declare-fun x961 () Int)
(declare-fun x884 () Int)
(declare-fun x941 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x12 () Int)
(declare-fun x695 () x1066)
(declare-fun x1528 () Bool)
(declare-fun x1336 () Int)
(declare-fun x1297 () Int)
(declare-fun x1118 () Int)
(declare-fun x1194 () Int)
(declare-fun x997 () Int)
(declare-fun x1047 () x1066)
(declare-fun x397 () Bool)
(declare-fun x403 () Bool)
(declare-fun x398 () Bool)
(declare-fun x821 () Int)
(declare-fun x1461 () x1066)
(declare-fun x396 () x1066)
(declare-fun x845 () Int)
(declare-fun x434 () Int)
(declare-fun x349 () Int)
(declare-fun x1117 () Int)
(declare-fun x807 () Int)
(declare-fun x1209 () Int)
(declare-fun x1444 () Int)
(declare-fun x1299 () Bool)
(declare-fun x173 () Int)
(declare-fun x1513 () Bool)
(declare-fun x499 () x1066)
(declare-fun x114 () Int)
(declare-fun x1192 () Int)
(declare-fun x19 () Int)
(declare-fun x540 () x1066)
(declare-fun x1597 () Int)
(declare-fun x1310 (Int) Int)
(declare-fun x1188 () Bool)
(declare-fun x1400 () Int)
(declare-fun x187 () Bool)
(declare-fun x902 () Int)
(declare-fun x944 () Bool)
(declare-fun x1306 () x1066)
(declare-fun x907 () Int)
(declare-fun x1220 () Int)
(declare-fun x533 (Int) Int)
(declare-fun x1239 () Int)
(declare-fun x1242 () Bool)
(declare-fun x26 () Int)
(declare-fun x725 () x1066)
(declare-fun x1016 () x1066)
(declare-fun x1108 () Bool)
(declare-fun x17 () Int)
(declare-fun x200 () Int)
(declare-fun x783 () Int)
(declare-fun x745 () Bool)
(declare-fun x251 () Bool)
(declare-fun x433 () Int)
(declare-fun x520 () Int)
(declare-fun x646 () Int)
(declare-fun x968 () Bool)
(declare-fun x993 () Int)
(declare-fun x1471 () x1066)
(declare-fun x1281 () Bool)
(declare-fun x839 () Bool)
(declare-fun x635 () Bool)
(declare-fun x410 () Int)
(declare-fun x1120 () x1066)
(declare-fun x307 () Int)
(declare-fun x1061 () Int)
(declare-fun x718 () Int)
(declare-fun x95 () Int)
(declare-fun x473 () Int)
(declare-fun x1314 () Int)
(declare-fun x669 () x1066)
(declare-fun x685 () x1066)
(declare-fun x91 () Int)
(declare-fun x1029 () Int)
(declare-fun x481 () Int)
(declare-fun x13 () Bool)
(declare-fun x192 () x1066)
(declare-fun x1334 () Bool)
(declare-fun x1076 () Int)
(declare-fun x653 () Bool)
(declare-fun x1370 () Int)
(declare-fun x974 () x1066)
(declare-fun x1315 (Int Int) Int)
(declare-fun x1169 () Bool)
(declare-fun x255 () Bool)
(declare-fun x560 () Bool)
(declare-fun x704 () Int)
(declare-fun x1199 () Int)
(declare-fun x741 () Int)
(declare-fun x144 () Bool)
(declare-fun x731 () Int)
(declare-fun x289 () x1066)
(declare-fun x248 () x1066)
(declare-fun x917 () Bool)
(declare-fun x340 () x1066)
(declare-fun x638 () x1066)
(declare-fun x822 () Int)
(declare-fun x1160 () Bool)
(declare-fun x106 () Bool)
(declare-fun x659 () Int)
(declare-fun x1140 () Bool)
(declare-fun x846 () Int)
(declare-fun x1518 () x1066)
(declare-fun x1331 () Int)
(declare-fun x1382 () Int)
(declare-fun x844 () Int)
(declare-fun x121 () x1066)
(declare-fun x548 (Int) Int)
(declare-fun x1479 () Int)
(declare-fun x1068 () x1066)
(declare-fun x1229 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x875 () x1066)
(declare-fun x1581 () Int)
(declare-fun x954 () Int)
(declare-fun x426 () Int)
(declare-fun x1303 () Int)
(declare-fun x260 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x987 () Bool)
(declare-fun x202 () Int)
(declare-fun x1290 () Int)
(declare-fun x1397 () x1066)
(declare-fun x263 () Int)
(declare-fun x518 () Int)
(declare-fun x562 () Int)
(declare-fun x247 () Bool)
(declare-fun x1454 () Int)
(declare-fun x901 () Int)
(declare-fun x662 () Bool)
(declare-fun x643 () Int)
(declare-fun x963 () Int)
(declare-fun x431 () Int)
(declare-fun x949 () Int)
(declare-fun x1235 () Int)
(declare-fun x347 () Int)
(declare-fun x64 () Bool)
(declare-fun x1432 () Int)
(declare-fun x153 () Bool)
(declare-fun x43 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x888 () Int)
(declare-fun x1049 () Int)
(declare-fun x338 () x1066)
(declare-fun x466 () Bool)
(declare-fun x413 () x1066)
(declare-fun x1119 () x1066)
(declare-fun x471 () Int)
(declare-fun x1344 () Int)
(declare-fun x320 () x1066)
(declare-fun x305 () x1066)
(declare-fun x1221 () x1066)
(declare-fun x1594 () Bool)
(declare-fun x1578 () Int)
(declare-fun x1448 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x924 () Int)
(declare-fun x792 () Int)
(declare-fun x916 () Bool)
(declare-fun x193 () Int)
(declare-fun x1586 () Int)
(declare-fun x39 () x1066)
(declare-fun x1226 () Bool)
(declare-fun x1179 () Int)
(declare-fun x1012 () Bool)
(declare-fun x647 () Bool)
(declare-fun x509 () Bool)
(declare-fun x964 () Int)
(declare-fun x186 () Int)
(declare-fun x726 () Int)
(declare-fun x1258 () Int)
(declare-fun x860 () Bool)
(declare-fun x170 () Bool)
(declare-fun x56 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x356 () Int)
(declare-fun x1013 () Int)
(declare-fun x437 () Bool)
(declare-fun x421 () Bool)
(declare-fun x334 () Int)
(declare-fun x482 () Int)
(declare-fun x742 () Int)
(declare-fun x203 () Int)
(declare-fun x238 () Int)
(declare-fun x780 () Bool)
(declare-fun x1046 () Int)
(declare-fun x808 () Bool)
(declare-fun x132 () Bool)
(declare-fun x1413 () Int)
(declare-fun x524 () Bool)
(declare-fun x1540 () x1066)
(declare-fun x1065 (Int) Int)
(declare-fun x1496 () Int)
(declare-fun x820 () Int)
(declare-fun x1100 () Int)
(declare-fun x297 () Bool)
(declare-fun x1434 () Int)
(declare-fun x417 () Int)
(declare-fun x1466 () Int)
(declare-fun x382 () x1066)
(declare-fun x103 () Int)
(declare-fun x532 () x1066)
(declare-fun x1273 () Int)
(declare-fun x55 () Int)
(declare-fun x343 () Int)
(declare-fun x180 () Int)
(declare-fun x1041 () Int)
(declare-fun x921 () Int)
(declare-fun x631 () Bool)
(declare-fun x615 () Int)
(declare-fun x295 () Bool)
(declare-fun x739 () x1066)
(declare-fun x546 () x1066)
(declare-fun x67 () Bool)
(declare-fun x123 () Int)
(declare-fun x162 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x414 () Int)
(declare-fun x1350 () Bool)
(declare-fun x1144 () Int)
(declare-fun x1079 () Int)
(declare-fun x1291 () Int)
(declare-fun x724 () Int)
(declare-fun x65 () Int)
(declare-fun x946 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x733 () Bool)
(declare-fun x401 () Int)
(declare-fun x652 () Bool)
(declare-fun x462 () Bool)
(declare-fun x381 () Int)
(declare-fun x182 () Bool)
(declare-fun x470 () Int)
(declare-fun x189 () Int)
(declare-fun x101 () Int)
(declare-fun x388 () Int)
(declare-fun x1391 () x1066)
(declare-fun x1091 () Int)
(declare-fun x895 () Int)
(declare-fun x853 () Int)
(declare-fun x1308 () Int)
(declare-fun x1576 () x1066)
(declare-fun x1414 () Bool)
(declare-fun x133 (Int) Int)
(declare-fun x706 () Int)
(declare-fun x1498 () Int)
(declare-fun x1018 () Int)
(declare-fun x219 () Int)
(declare-fun x1092 () x1066)
(declare-fun x1271 () Bool)
(declare-fun x1489 () Int)
(declare-fun x611 () Int)
(declare-fun x664 () Int)
(declare-fun x1202 () Bool)
(declare-fun x1124 () Int)
(declare-fun x666 () Int)
(declare-fun x1266 () Int)
(declare-fun x655 () Bool)
(declare-fun x1358 () Int)
(declare-fun x274 () Int)
(declare-fun x1526 () Int)
(declare-fun x1369 (x1066) Int)
(declare-fun x32 (Int) Int)
(declare-fun x62 () Int)
(declare-fun x124 () Bool)
(declare-fun x1078 () Int)
(declare-fun x300 () Int)
(declare-fun x215 () Int)
(declare-fun x1566 () x1066)
(declare-fun x541 () Int)
(declare-fun x179 () Int)
(declare-fun x1223 () Int)
(declare-fun x1105 () Int)
(declare-fun x841 () x1066)
(declare-fun x1363 () Int)
(declare-fun x620 () Int)
(declare-fun x717 () Int)
(declare-fun x588 () Int)
(declare-fun x406 () Bool)
(declare-fun x1072 () Int)
(declare-fun x671 () Int)
(declare-fun x1073 () Bool)
(declare-fun x464 () Int)
(declare-fun x467 () Int)
(declare-fun x756 () Int)
(declare-fun x1375 () Int)
(declare-fun x1399 () Int)
(declare-fun x52 () Int)
(declare-fun x365 () Int)
(declare-fun x1150 () Int)
(declare-fun x100 () Int)
(declare-fun x630 () Int)
(declare-fun x703 () Int)
(declare-fun x168 () Bool)
(declare-fun x942 () x1066)
(declare-fun x282 () Int)
(declare-fun x22 (Int) Int)
(declare-fun x329 () Bool)
(declare-fun x479 () x1066)
(declare-fun x1449 () Int)
(declare-fun x732 () Bool)
(declare-fun x1333 () Int)
(declare-fun x1174 () x1066)
(declare-fun x881 () Int)
(declare-fun x648 () Bool)
(declare-fun x926 () Int)
(declare-fun x1060 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x240 () Int)
(declare-fun x89 () Int)
(declare-fun x1008 () Bool)
(declare-fun x1345 () x1066)
(declare-fun x759 () Int)
(declare-fun x337 () Int)
(declare-fun x952 () x1066)
(declare-fun x768 () Int)
(declare-fun x197 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x245 () Int)
(declare-fun x794 () Int)
(declare-fun x457 () x1066)
(declare-fun x1069 () Bool)
(declare-fun x373 () Int)
(declare-fun x1002 () x1066)
(declare-fun x1558 () Int)
(declare-fun x852 () Int)
(declare-fun x929 () Int)
(declare-fun x178 (Int) Int)
(declare-fun x122 () x1066)
(declare-fun x1151 () Int)
(declare-fun x1216 () x1066)
(declare-fun x394 () x1066)
(declare-fun x293 () Int)
(declare-fun x712 () Int)
(declare-fun x1544 () x1066)
(declare-fun x1280 () Int)
(declare-fun x569 () Bool)
(declare-fun x660 () Int)
(declare-fun x120 () Int)
(declare-fun x599 () Bool)
(declare-fun x152 () Bool)
(declare-fun x667 () Bool)
(declare-fun x644 () Bool)
(declare-fun x1485 () x1066)
(declare-fun x1088 () Bool)
(declare-fun x1033 () Bool)
(declare-fun x1341 () Int)
(declare-fun x1439 () Int)
(declare-fun x686 () Int)
(declare-fun x715 () x1066)
(declare-fun x82 () x1066)
(declare-fun x711 () x1066)
(declare-fun x1231 () x1066)
(declare-fun x259 () Int)
(declare-fun x1340 () Int)
(declare-fun x1430 () Int)
(declare-fun x1284 () x1066)
(declare-fun x1587 () Bool)
(declare-fun x23 () Int)
(declare-fun x1212 () Int)
(declare-fun x613 () Int)
(declare-fun x1148 () Int)
(declare-fun x1520 () Int)
(declare-fun x367 () Int)
(declare-fun x380 () Bool)
(declare-fun x1481 () x1066)
(declare-fun x1409 () Int)
(declare-fun x590 () Int)
(declare-fun x456 () Int)
(declare-fun x1238 () x1066)
(declare-fun x1343 () x1066)
(declare-fun x567 () Bool)
(declare-fun x594 () Bool)
(declare-fun x228 () Int)
(declare-fun x1099 () Bool)
(declare-fun x1058 () x1066)
(declare-fun x497 () Int)
(declare-fun x1529 () Int)
(declare-fun x399 () Int)
(declare-fun x74 () Int)
(declare-fun x1514 () x1066)
(declare-fun x1023 () Int)
(declare-fun x376 () Int)
(declare-fun x1005 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x498 () Bool)
(declare-fun x649 () Bool)
(declare-fun x1407 () Int)
(declare-fun x412 () Bool)
(declare-fun x989 () Int)
(declare-fun x195 () Bool)
(declare-fun x828 () Bool)
(declare-fun x1352 () Int)
(declare-fun x28 () Bool)
(declare-fun x361 () Int)
(declare-fun x1128 () Bool)
(declare-fun x1020 () Int)
(declare-fun x1149 () x1066)
(declare-fun x377 () x1066)
(declare-fun x802 () Bool)
(declare-fun x1206 () Int)
(declare-fun x311 () Bool)
(declare-fun x93 () Int)
(declare-fun x626 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x1537 () Int)
(declare-fun x1074 () Bool)
(declare-fun x1210 () x1066)
(declare-fun x1512 () Int)
(declare-fun x1042 () Int)
(declare-fun x1515 () Bool)
(declare-fun x1186 () Int)
(declare-fun x1136 () Int)
(declare-fun x1021 () x1066)
(declare-fun x1317 () Int)
(declare-fun x354 (x1066) Int)
(declare-fun x36 () Bool)
(declare-fun x455 () x1066)
(declare-fun x446 () Int)
(declare-fun x1254 () x1066)
(declare-fun x49 () Int)
(declare-fun x342 () Bool)
(declare-fun x592 () x1066)
(declare-fun x622 () Int)
(declare-fun x353 () Bool)
(declare-fun x832 () Int)
(declare-fun x765 () x1066)
(declare-fun x959 () Int)
(declare-fun x1349 () x1066)
(declare-fun x429 () Int)
(declare-fun x713 () Bool)
(declare-fun x68 () Int)
(declare-fun x621 () Int)
(declare-fun x242 () x1066)
(declare-fun x383 () Int)
(declare-fun x1419 () x1066)
(declare-fun x812 () Bool)
(declare-fun x299 () Int)
(declare-fun x1292 () x1066)
(declare-fun x181 () Int)
(declare-fun x214 () Int)
(declare-fun x501 () Int)
(declare-fun x1272 () Bool)
(declare-fun x1022 () Int)
(declare-fun x400 () Int)
(declare-fun x579 () Bool)
(declare-fun x636 () Int)
(declare-fun x1279 () Bool)
(declare-fun x788 () Int)
(declare-fun x668 () Int)
(declare-fun x1446 () Bool)
(declare-fun x1230 () Int)
(declare-fun x148 () Bool)
(declare-fun x324 () Int)
(declare-fun x59 () Bool)
(declare-fun x1087 () x1066)
(declare-fun x405 () Int)
(declare-fun x1355 (x1066) Int)
(declare-fun x883 () Int)
(declare-fun x529 (Int) Int)
(declare-fun x510 (x1066) Int)
(declare-fun x670 () Bool)
(declare-fun x1003 () x1066)
(declare-fun x175 () Bool)
(declare-fun x1390 () Int)
(declare-fun x1006 () Int)
(declare-fun x327 () Int)
(declare-fun x981 () Int)
(declare-fun x1155 () Int)
(declare-fun x1469 () Bool)
(declare-fun x1180 () Int)
(declare-fun x848 () Bool)
(declare-fun x5 () Int)
(declare-fun x777 () Int)
(declare-fun x939 () x1066)
(declare-fun x1191 () Int)
(declare-fun x358 () Int)
(declare-fun x629 () Bool)
(declare-fun x886 () x1066)
(declare-fun x1171 () Bool)
(declare-fun x237 () Bool)
(declare-fun x663 (Int) Int)
(declare-fun x18 () Int)
(declare-fun x1096 () Int)
(declare-fun x492 () Int)
(declare-fun x1097 () Int)
(declare-fun x139 () Int)
(declare-fun x1193 () Int)
(declare-fun x1116 () Int)
(declare-fun x226 () Int)
(declare-fun x1348 () Bool)
(declare-fun x489 () Int)
(declare-fun x980 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x1522 () Int)
(declare-fun x461 () Bool)
(declare-fun x323 () Bool)
(declare-fun x283 () x1066)
(declare-fun x982 () x1066)
(declare-fun x1338 () Bool)
(declare-fun x998 () Int)
(declare-fun x1460 () Int)
(declare-fun x230 () Bool)
(declare-fun x204 () Bool)
(declare-fun x316 () Int)
(declare-fun x1569 () Int)
(declare-fun x676 () Bool)
(declare-fun x344 () Bool)
(declare-fun x1294 () Int)
(declare-fun x609 () Int)
(declare-fun x1330 () Int)
(declare-fun x112 () Bool)
(declare-fun x8 () Bool)
(declare-fun x96 () Bool)
(declare-fun x1366 () Int)
(declare-fun x651 () x1066)
(declare-fun x1274 () Int)
(declare-fun x633 () Int)
(declare-fun x209 (x1066) Int)
(declare-fun x1175 () Bool)
(declare-fun x699 () x1066)
(declare-fun x751 () Bool)
(declare-fun x449 () Int)
(declare-fun x934 () x1066)
(declare-fun x27 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x1321 () Int)
(declare-fun x531 () Int)
(declare-fun x868 () x1066)
(declare-fun x784 () x1066)
(declare-fun x1364 () Int)
(declare-fun x460 () Bool)
(declare-fun x370 () Int)
(declare-fun x261 () Int)
(declare-fun x1053 () Int)
(declare-fun x1019 () Bool)
(declare-fun x1232 () Int)
(declare-fun x493 () Bool)
(declare-fun x6 () x1066)
(declare-fun x737 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x923 () Int)
(declare-fun x389 () Int)
(declare-fun x81 () Bool)
(declare-fun x194 () Bool)
(declare-fun x257 () Bool)
(declare-fun x1277 () Int)
(declare-fun x372 () Int)
(declare-fun x1263 () Int)
(declare-fun x1553 () x1066)
(declare-fun x1396 () Int)
(declare-fun x1285 () Int)
(declare-fun x468 () Bool)
(declare-fun x430 () Bool)
(declare-fun x826 () Int)
(declare-fun x973 () Int)
(declare-fun x835 () Bool)
(declare-fun x714 () Bool)
(declare-fun x7 () Int)
(declare-fun x164 () Int)
(declare-fun x991 () Int)
(declare-fun x511 () Int)
(declare-fun x573 () Bool)
(declare-fun x1219 (Int) Int)
(declare-fun x1147 () Int)
(declare-fun x1464 () x1066)
(declare-fun x1313 () x1066)
(declare-fun x1278 () Bool)
(declare-fun x753 () Int)
(declare-fun x722 () Int)
(define-fun x584 ((x1066 x1066) (x814 Int)) x1066 (ite ((_ is x1265) x1066) (x1265 (x40 x1066) (+ (x1346 x1066) x814)) (ite ((_ is x351) x1066) (x351 (x463 x1066) (x313 x1066) (+ (x330 x1066) x814)) (x1106 (+ (x34 x1066) x814)))))
(define-fun x1010 ((x167 Int)) Int (ite (and (>= x167 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167)) x167 (- x167 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1015 ((x167 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x167) (> 0 x167)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167) x167))
(define-fun x1052 ((x1289 Int)) Bool (and (< x1289 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1289 0)))
(define-fun x1300 ((x1289 Int)) Bool (and (= (x1315 x1289 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1289) (= x1289 (x1315 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1289))))
(define-fun x1378 ((x1289 Int)) Bool (and (= 0 (x1315 x1289 0)) (= (x1315 0 x1289) 0)))
(define-fun x491 ((x1289 Int)) Bool (= (x1315 x1289 x1289) x1289))
(define-fun x285 ((x1289 Int)) Bool (and (x1378 x1289) (x1300 x1289) (x491 x1289)))
(define-fun x1572 ((x1289 Int)) Bool (= (x1315 1461501637330902918203684832716283019655932542975 (x1315 1461501637330902918203684832716283019655932542975 x1289)) (x1315 1461501637330902918203684832716283019655932542975 x1289)))
(define-fun x957 ((x1289 Int)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x1289) (<= 0 x1289)) (= (x1315 1461501637330902918203684832716283019655932542975 x1289) x1289)))
(define-fun x988 ((x1289 Int)) Bool (=> (= (x1315 1461501637330902918203684832716283019655932542975 x1289) x1289) (and (< x1289 1461501637330902918203684832716283019655932542976) (<= 0 x1289))))
(define-fun x682 ((x1289 Int)) Bool (=> (and (>= x1289 1461501637330902918203684832716283019655932542976) (< x1289 2923003274661805836407369665432566039311865085952)) (= (x1315 1461501637330902918203684832716283019655932542975 x1289) (- x1289 1461501637330902918203684832716283019655932542976))))
(define-fun x1478 ((x1289 Int) (x743 Int)) Bool (and (= (+ (x1315 1461501637330902918203684832716283019655932542975 x1289) (* x743 1461501637330902918203684832716283019655932542976)) x1289) (<= 0 x743)))
(define-fun x119 ((x1289 Int) (x1302 Int)) Bool (and (x682 x1289) (x957 x1289) (x1572 x1289) (x988 x1289) (x1478 x1289 x1302)))
(define-fun x436 ((x1289 Int) (x743 Int)) Bool (= (x1315 x1289 x743) (x1315 x743 x1289)))
(define-fun x755 ((x1289 Int) (x743 Int)) Bool (and (=> (<= 0 x1289) (>= x1289 (x1315 x1289 x743))) (=> (>= x743 0) (>= x743 (x1315 x1289 x743))) (<= 0 (x1315 x1289 x743))))
(define-fun x294 ((x1289 Int) (x743 Int)) Bool (and (x436 x1289 x743) (x755 x1289 x743)))
(define-fun x521 ((x1289 Int) (x1302 Int)) Bool (and (x119 x1289 x1302) (x294 x1289 1461501637330902918203684832716283019655932542975)))
(define-fun x1267 ((x1289 Int)) Bool (= (x1315 26959946667150639794667015087019630673637144422540572481103610249215 x1289) (x1315 26959946667150639794667015087019630673637144422540572481103610249215 (x1315 26959946667150639794667015087019630673637144422540572481103610249215 x1289))))
(define-fun x171 ((x1289 Int)) Bool (=> (and (>= x1289 0) (< x1289 26959946667150639794667015087019630673637144422540572481103610249216)) (= x1289 (x1315 26959946667150639794667015087019630673637144422540572481103610249215 x1289))))
(define-fun x1296 ((x1289 Int)) Bool (=> (= x1289 (x1315 26959946667150639794667015087019630673637144422540572481103610249215 x1289)) (and (< x1289 26959946667150639794667015087019630673637144422540572481103610249216) (<= 0 x1289))))
(define-fun x1050 ((x1289 Int)) Bool (=> (and (< x1289 53919893334301279589334030174039261347274288845081144962207220498432) (>= x1289 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x1315 26959946667150639794667015087019630673637144422540572481103610249215 x1289) (- x1289 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x328 ((x1289 Int) (x743 Int)) Bool (and (<= 0 x743) (= (+ (x1315 26959946667150639794667015087019630673637144422540572481103610249215 x1289) (* 26959946667150639794667015087019630673637144422540572481103610249216 x743)) x1289)))
(define-fun x1244 ((x1289 Int) (x1302 Int)) Bool (and (x1267 x1289) (x1296 x1289) (x328 x1289 x1302) (x1050 x1289) (x171 x1289)))
(define-fun x805 ((x1289 Int) (x1302 Int)) Bool (and (x1244 x1289 x1302) (x294 x1289 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1431 ((x1289 Int)) Bool (= (x1315 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1289) (x1315 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1315 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1289))))
(define-fun x996 ((x1289 Int)) Bool (=> (and (< x1289 32) (<= 0 x1289)) (= 0 (x1315 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1289))))
(define-fun x889 ((x1289 Int) (x743 Int) (x116 Int) (x823 Int)) Bool (and (< x823 1) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x116) (= (* x116 32) (x1315 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1289)) (= (+ x743 (* x823 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* x116 32)) x1289) (>= x823 0) (< x743 32) (<= 0 x743) (>= x116 0)))
(define-fun x161 ((x1289 Int) (x69 Int) (x145 Int) (x104 Int)) Bool (and (x889 x1289 x69 x145 x104) (x1431 x1289) (x996 x1289)))
(define-fun x58 ((x1289 Int) (x69 Int) (x145 Int) (x104 Int)) Bool (and (x161 x1289 x69 x145 x104) (x294 x1289 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x680 ((x218 Int)) Int (x1219 x218))
(define-fun x795 ((x218 Int)) Int (ite (= x218 128) x1013 (x1064 x218)))
(define-fun x803 ((x218 Int)) Int (ite (and (> (+ 160 x846) x218) (>= x218 160)) (x1219 (+ (- x218 160) x1291)) (x795 x218)))
(define-fun x650 ((x218 Int)) Int (ite (= x264 x218) 0 (x803 x218)))
(define-fun x409 ((x218 Int)) Int (ite (and (<= x622 x218) (> (+ x622 x1224) x218)) (x1219 (+ x495 (- x218 x622))) (x336 x218)))
(define-fun x913 ((x218 x1066)) Int (ite (= x849 x218) x379 (x1369 x218)))
(define-fun x1129 ((x218 x1066)) Int (ite (= x1461 x218) x379 (x1369 x218)))
(define-fun x782 ((x218 x1066)) Int (ite (= x1119 x218) x379 (x799 x218)))
(define-fun x958 ((x218 x1066)) Int (ite (= x1509 x218) x379 (x799 x218)))
(define-fun x1571 ((x218 x1066)) Int (ite (and x1228 x1125) (x799 x218) (ite (and x509 x581) (x1369 x218) (ite (and x84 (not x1592)) (x782 x218) (x958 x218)))))
(define-fun x1473 ((x218 x1066)) Int (ite (= x218 x1343) x379 (x206 x218)))
(define-fun x1393 ((x218 x1066)) Int (ite (= x218 x784) x379 (x206 x218)))
(define-fun x1275 ((x218 x1066)) Int (ite (= x861 x218) x379 (x206 x218)))
(define-fun x1183 ((x218 x1066)) Int (ite (= x218 x1566) x379 (x1260 x218)))
(define-fun x587 ((x218 x1066)) Int (ite (= x1292 x218) x379 (x1260 x218)))
(define-fun x634 ((x218 x1066)) Int (ite (= x218 x1284) x379 (x1260 x218)))
(define-fun x1423 ((x218 x1066)) Int (ite (and x1228 x1125) (x1260 x218) (ite (and x581 x509) (x206 x218) (ite (and x1268 (not x1098) (not x188)) (x1183 x218) (ite (and x1268 x188 (not x1098)) (x587 x218) (x634 x218))))))
(define-fun x673 ((x218 x1066)) Int (ite (= x218 x1111) x1293 (x1360 x218)))
(define-fun x1024 ((x218 x1066)) Int (ite (= x218 x536) x405 (x1355 x218)))
(define-fun x1577 ((x218 x1066)) Int (ite (and (not x1592) x84) (x1024 x218) (x1355 x218)))
(define-fun x559 ((x218 x1066)) Int (ite (and x1228 x1125) (x1355 x218) (ite (and x509 x581) (x1360 x218) (x1577 x218))))
(define-fun x773 ((x218 x1066)) Int (ite (= x1387 x218) x624 (x910 x218)))
(define-fun x1536 ((x218 x1066)) Int (ite (= x218 x1544) x1314 (x854 x218)))
(define-fun x419 ((x218 x1066)) Int (ite (and (not x1098) x1268 (not x188)) (x1536 x218) (x854 x218)))
(define-fun x360 ((x218 x1066)) Int (ite (and x1125 x1228) (x854 x218) (ite (and x509 x581) (x910 x218) (x419 x218))))
(define-fun x222 ((x218 x1066)) Int (ite (= x1295 x218) x706 (x346 x218)))
(define-fun x483 ((x218 x1066)) Int (ite (= x1345 x218) x227 (x789 x218)))
(define-fun x190 ((x218 x1066)) Int (ite (and x1125 x1228) (x1547 x218) (ite (and x581 x509) (x109 x218) (ite (and x84 (not x1019) x748 (not x900)) (x789 x218) (ite (and (not x1019) x84 (not x748)) (x1547 x218) (ite (and x84 x1019) (x1547 x218) (x483 x218)))))))
(define-fun x1564 ((x218 Int)) Int (ite (= x218 x63) x707 (x442 x218)))
(define-fun x1353 ((x218 Int)) Int (ite (= x218 x44) x961 (x1564 x218)))
(define-fun x885 ((x218 Int)) Int (ite (and x1160 x412) (x442 x218) (x1353 x218)))
(define-fun x734 ((x218 Int)) Int (ite (= x1449 x218) x1411 (x885 x218)))
(define-fun x1156 ((x218 Int)) Int (ite (= x268 x218) x928 (x1310 x218)))
(define-fun x1326 ((x218 Int)) Int (ite (= x301 x218) x856 (x548 x218)))
(define-fun x369 ((x218 Int)) Int (ite (= x218 x822) x633 (x1326 x218)))
(define-fun x992 ((x218 Int)) Int (ite (and (not x1098) (not x188) x1268) (x369 x218) (ite (and x1268 (not x1098) x188) (x369 x218) (x548 x218))))
(define-fun x616 ((x218 x1066)) Int (ite (= x166 x218) x390 (x354 x218)))
(define-fun x1385 ((x218 x1066)) Int (ite (and x629 x897) (x354 x218) (x616 x218)))
(define-fun x1386 ((x218 x1066)) Int (ite (= x218 x999) x1457 (x598 x218)))
(define-fun x291 ((x218 x1066)) Int (ite (and x1160 x142) (x598 x218) (x1386 x218)))
(define-fun x113 ((x218 Int)) Int (ite (= x218 x359) x1352 (x992 x218)))
(define-fun x371 ((x218 Int)) Int (ite (= x1165 x218) x520 (x133 x218)))
(define-fun x1376 ((x218 Int)) Int (ite (and x1228 x1125) (x548 x218) (ite (and x509 x581) (x442 x218) (ite (and x84 (not x900) x748 (not x1019)) (x133 x218) (ite (and (not x1019) x84 (not x748)) (x1082 x218) (ite (and x1019 x84) (x1082 x218) (x371 x218)))))))
(define-fun x614 ((x218 Int)) Int (ite (= x449 x218) x238 (x1376 x218)))
(define-fun x838 ((x218 Int)) Int (ite (= x873 x218) x761 (x614 x218)))
(define-fun x1374 ((x218 Int)) Int (ite (= x97 x218) x890 (x838 x218)))
(define-fun x757 ((x218 Int)) Int (ite (= x723 x218) x1054 (x1374 x218)))
(define-fun x138 ((x218 Int)) Int (ite (= x218 x844) 32 (x757 x218)))
(define-fun x1187 ((x218 Int)) Int (ite (= x218 x472) x110 (x656 x218)))
(define-fun x444 ((x218 Int)) Int (ite (= x218 x1489) 0 (x174 x218)))
(define-fun x61 ((x218 Int)) Int (ite (= 0 x218) 1 (x719 x218)))
(define-fun x1588 ((x218 Int)) Int (ite (= x218 0) 1 (x719 x218)))
(define-fun x769 ((x218 Int)) Int (ite (and x75 x644) (x61 x218) (x1588 x218)))
(define-fun x1195 ((x218 Int)) Int (ite (= x218 x147) x526 (x1455 x218)))
(define-fun x816 ((x218 Int)) Int (ite (= x147 x218) x1384 (x1455 x218)))
(define-fun x1177 ((x218 Int)) Int (ite (= x218 x147) x1193 (x1580 x218)))
(define-fun x1511 ((x218 Int)) Int (ite (and (< x218 (+ x1027 x1193)) (>= x218 x1027)) (x769 (+ (- x218 x1027) 0)) (x1177 x218)))
(define-fun x523 ((x218 Int)) Int (ite (and (not x662) x1429) (x1511 x218) (x1580 x218)))
(define-fun x791 ((x218 Int)) Int (ite (= x218 x1273) x259 (x523 x218)))
(define-fun x920 ((x218 Int)) Int (ite (= x218 x1023) x940 (x791 x218)))
(define-fun x315 ((x218 Int)) Int (ite (= x218 x978) x239 (x920 x218)))
(define-fun x872 ((x218 Int)) Int (ite (= x218 x931) x877 (x315 x218)))
(define-fun x1371 ((x218 Int)) Int (ite (= x218 x410) 32 (x872 x218)))
(define-fun x1542 ((x218 Int)) Int (ite (= x218 x1144) x1117 (x639 x218)))
(define-fun x415 ((x218 Int)) Int (ite (= x218 x1095) 0 (x529 x218)))
(define-fun x136 ((x218 x1066)) Int (ite (= (x1585 274184521717934524641157099916833587206) x218) x1490 (x191 x218)))
(define-fun x1135 ((x218 x1066)) Int (ite (= x218 (x1585 x250)) x477 (x136 x218)))
(define-fun x1168 ((x218 x1066)) Int (ite (= x218 (x1585 x250)) x621 (x1135 x218)))
(define-fun x318 ((x218 x1066)) Int (ite (= (x1585 274184521717934524641157099916833587206) x218) x497 (x1168 x218)))
(define-fun x1283 ((x218 x1066)) Int (ite (= x218 (x1585 274184521717934524641157099916833587206)) x485 (x318 x218)))
(define-fun x776 ((x218 x1066)) Int (ite (= (x1585 x826) x218) x696 (x1283 x218)))
(define-fun x600 ((x218 x1066)) Int (ite (= x218 x568) x467 (x209 x218)))
(define-fun x368 ((x218 x1066)) Int (ite (= x1034 x218) x1550 (x600 x218)))
(define-fun x33 ((x218 x1066)) Int (ite (and x75 x644) (x368 x218) (x209 x218)))
(define-fun x1450 ((x218 x1066)) Int (ite (= x1447 x218) x997 (x33 x218)))
(define-fun x362 ((x218 Int)) Int (ite (= 0 x218) 1 (x533 x218)))
(define-fun x566 ((x218 Int)) Int (ite (= x218 x435) x754 (x22 x218)))
(define-fun x54 ((x218 x1066)) Int (ite (= x218 x765) x307 (x539 x218)))
(define-fun x1057 ((x218 x1066)) Int (ite (= x218 x1130) x1567 (x54 x218)))
(define-fun x502 ((x218 x1066)) Int (ite (and x644 x75) (x539 x218) (x1057 x218)))
(define-fun x1236 ((x218 x1066)) Int (ite (= x218 x711) x1011 (x502 x218)))
(define-fun x384 ((x218 Int)) Int (ite (= x218 0) 1 (x533 x218)))
(define-fun x229 ((x218 Int)) Int (ite (= x218 x435) x200 (x22 x218)))
(define-fun x640 ((x218 Int)) Int (ite (and x1196 x729) (x362 x218) (x384 x218)))
(define-fun x1362 ((x218 x1066)) Int (ite (= (x1585 x826) x218) x612 (x776 x218)))
(define-fun x385 ((x218 Int)) Int (ite (= x435 x218) x490 (x1065 x218)))
(define-fun x411 ((x218 Int)) Int (ite (and (> (+ x490 x1028) x218) (<= x1028 x218)) (x640 (+ 0 (- x218 x1028))) (x385 x218)))
(define-fun x1048 ((x218 Int)) Int (ite (and x462 x1339) (x1065 x218) (x411 x218)))
(define-fun x478 ((x1289 Int)) Bool (=> (and (not (= 1889567281 x1289)) (not (= 635128645 x1289)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1289)) (not (= x1289 2061678023)) (not (= 1000000000000000000 x1289)) (not (= 2514000705 x1289)) (not (= 2258409472 x1289)) (not (= 18446744073709551615 x1289)) (not (= 115792089237316195423570985008687907853269984665640564039457 x1289)) (not (= x1289 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= x1289 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 142201243 x1289)) (not (= x1289 1968616202)) (not (= x1289 2960351575)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1289)) (not (= x1289 274184521717934524641157099916833587206)) (not (= 2512682246 x1289)) (not (= 2211524764 x1289)) (not (= x1289 87118632)) (not (= 2835717307 x1289)) (not (= 2868243304 x1289)) (not (= x1289 69947311)) (not (= x1289 649617121)) (not (= x1289 1986467848)) (not (= 2690754053 x1289)) (not (= x1289 604800)) (< 10000 x1289) (not (= 1461501637330902918203684832716283019655932542975 x1289)) (not (= x1289 468353030)) (not (= 2798343961 x1289)) (not (= 274184521717934524641157099916833587218 x1289)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1289)) (not (= 2293535753 x1289)) (not (= 274184521717934524641157099916833587214 x1289)) (not (= 826074471 x1289)) (not (= x1289 911411945)) (not (= x1289 2764855426)) (not (= x1289 2939843472)) (not (= x1289 2532887486)) (not (= x1289 2418364589)) (not (= x1289 2743102681)) (not (= x1289 759532456))) (not ((_ is x1106) (x1585 x1289)))))
(assert (x1052 x613))
(assert (x478 x216))
(assert (x478 x482))
(assert (= (x1585 1000000000000000000) (x1106 1000000000000000000)))
(assert (x1052 x120))
(assert (= (ite (and (not x1127) (not x1060) x375 x897) (x1310 x977) (ite (and x897 (not x1060) (not x375)) (x32 x977) (ite (and x897 x1060) (x32 x977) (x1156 x977)))) (x548 x977)))
(assert (x1052 x882))
(assert (= (+ (x510 x1591) 1) (x510 (x584 x1591 1))))
(assert (x1052 x688))
(assert (x285 x1554))
(assert (= (ite (= x1165 x1413) x1013 (x650 x1165)) (x336 x1165)))
(assert (= 468353030 (x510 (x1106 468353030))))
(assert (= (=> (= (< 0 x1013) x1440) (and (=> (not x1440) x1281) (=> (and (or (not x818) (and (= (x1010 (+ x147 x1085)) x1489) x818)) (= x1039 (x1083 (x1585 x250))) (= (x1010 (+ x1395 160)) x884) (< 0 x349) (< 0 x1013) (>= 1461501637330902918203684832716283019655932542975 x250) (= x370 x1291) (= x1054 (x1010 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x407))) (= (x1010 (+ 100 x97)) x844) (= (x1217 x97) x1085) (= x818 (> x845 x1085)) (= x108 (> x1039 0)) (= (x1015 (- x1437 32)) x890) (= (x1010 (+ 68 x97)) x873) (= x407 (x1315 26959946667150639794667015087019630673637144422540572481103610249215 x9)) (= (x1374 x723) x9) (= (x1015 (- x844 x97)) x1437) (or (and (= (x1217 x731) x686) x392 (= (< 32 x1085) x1164) (= x723 x731) (or (and (= x619 (> x1085 64)) (= (x1010 (+ x844 96)) x1375) (= x977 (x1010 (+ 64 x97))) (or (and (not x619) (= x845 64)) (and (= x505 (x1530 x25)) (or (and (not x675) (= x845 96)) (and (= x110 (x656 x473)) x675 (= x472 (x1010 (+ x844 160))) (= x1523 (> x1085 128)) (= 128 x845) (not x1523) (= (x1010 (+ x97 128)) x473))) (= (< 96 x1085) x675) (= (x1010 (+ x97 96)) x25) (= x1036 (x1010 (+ x844 128))) x619)) (= (x922 x977) x1118) x1164) (and (= x845 32) (not x1164))) (= x887 x147)) (and (not x392) (= x845 0))) (= (x1010 (+ 32 x97)) x723) (= x740 (x1010 (+ x449 96))) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x238) (= (x1010 (+ x97 36)) x449) (= x392 (> x1085 0)) (= x349 (x1376 x1413)) (= x250 (x1219 x370)) (= x761 (x1376 x884)) (= x147 (x1010 (+ x449 128))) (= x38 0) x1440 x108) x1131))) x1545))
(assert (x1052 x1457))
(assert (x285 x9))
(assert (= x1363 (x510 (x1585 x1363))))
(assert (x1052 x38))
(assert (= (x1585 2418364589) (x1106 2418364589)))
(assert (x1052 x572))
(assert (= x106 (=> (= x980 (= x826 274184521717934524641157099916833587214)) (and (=> (not x980) x1017) (=> (and (= x963 x259) (= x1199 x123) (= x123 x940) (= x49 x786) (= (x1015 (- x300 x123)) x1011) (= x490 32) (not x1181) (= (x1015 (- x786 4)) x265) (not (> 4 x786)) (= x553 (< x300 x1199)) (>= x300 0) (not x553) (= 1 x1146) (not x1037) (= x1432 (x1083 (x1585 274184521717934524641157099916833587214))) (= (x351 (x1585 274184521717934524641157099916833587206) (x1106 1) 0) x266) (= (x351 (x1585 x963) (x1106 1) 0) x348) (= x1037 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1199 x1239))) (not (> 649617121 x511)) (= x959 274184521717934524641157099916833587206) (= 2835717307 x511) (= 274184521717934524641157099916833587206 x185) (= (or (and (= (<= x265 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x265 64)) (> x265 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1181) (<= 0 x1239) x980 (= (< x300 x123) x1587) (= x1451 x1239) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1199 x1239)) (= x1239 (x1236 x348)) (not (= 826074471 x511)) (>= 1461501637330902918203684832716283019655932542975 x963) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1239) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x300) (= x1507 x1199) (= x711 (x351 (x1585 274184521717934524641157099916833587206) (x1106 1) 0)) (= x200 x364) (> x1432 0) (not x1587) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1124) (not (= x511 2514000705)) (= x300 (x502 x266)) (= x101 (+ x1507 x1451)) (not (= x511 1889567281)) (= 68 x786) (not (= x511 649617121)) (= x963 x1582)) x1494)))))
(assert (x1052 x1018))
(assert (x1052 x1359))
(assert (x1052 x78))
(assert (= 0 (x1064 x731)))
(assert (x478 x400))
(assert (= x527 (=> (and (not (< x2 2690754053)) (>= x1044 0) (not (= x2 2764855426)) (= (x351 (x1585 x256) (x1106 5) 0) x1216) (= x1163 x1044) (< 0 x1426) (>= 1461501637330902918203684832716283019655932542975 x389) (= x1426 (x1083 (x1585 274184521717934524641157099916833587206))) (= x1044 (x1360 x542)) (< x2 2960351575) (= 2798343961 x2) (= (x351 (x1585 x389) x1216 0) x542) (<= x1044 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> 2293535753 x2)) (not (= x2 2743102681)) (not (= x2 2690754053))) (=> (and (= x258 x1506) (= x817 x66) (= x749 x852) (= x347 x1163)) x647))))
(assert (= (x1064 x1512) 0))
(assert (= (x32 x550) (ite (= x550 x718) x921 (x734 x550))))
(assert (= (x1557 x464) (ite (= x464 x666) x52 (x178 x464))))
(assert (x1052 x45))
(assert (= (ite (= x887 x335) x686 (x1217 x335)) (x922 x335)))
(assert (=> (<= x117 10000) (= (x1106 x117) (x1585 x117))))
(assert (= (x32 x884) (ite (= x884 x718) x921 (x734 x884))))
(assert (= x824 (=> (and (= (x206 x1104) x501) (= x1245 (x1315 1461501637330902918203684832716283019655932542975 x217)) (= x303 (< 0 x501)) (= x1040 (x1315 1461501637330902918203684832716283019655932542975 x215)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x981) (not (> x1468 x981)) (>= x501 0) (= (x351 (x1585 x1040) x532 0) x990) (<= 0 x981) (<= x501 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x532 (x351 (x1585 x1366) (x1106 7) 0)) (= (x351 (x1585 x1245) x990 0) x1104)) (and (=> (and (= x450 0) (= (x351 (x1585 x99) x867 0) x1087) (= (x351 (x1585 x1363) x382 0) x867) (= x99 (x1315 1461501637330902918203684832716283019655932542975 x217)) x303 (= (x598 x1087) x664) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x1363) (<= 0 x664) (= x1457 x664) (= x382 (x351 (x1585 x1366) (x1106 9) 0))) x64) (=> (not x303) x848)))))
(assert (=> (>= 10000 x1191) (= (x1106 x1191) (x1585 x1191))))
(assert (x1052 x123))
(assert (=> (<= x1105 10000) (= (x1106 x1105) (x1585 x1105))))
(assert (= (x1082 x550) (ite (= x233 x550) x454 (x113 x550))))
(assert (x1052 x200))
(assert (= x357 (x510 (x1585 x357))))
(assert (x1052 x707))
(assert (= (x510 (x1106 2764855426)) 2764855426))
(assert (= (=> (= x445 (< 0 x1366)) (and (=> (not x445) x1418) (=> x445 x933))) x848))
(assert (= x1551 (x510 (x1585 x1551))))
(assert (x478 x971))
(assert (x1052 x1327))
(assert (x478 x1479))
(assert (x1052 x1454))
(assert (x1052 x1136))
(assert (x1052 x763))
(assert (x478 x1266))
(assert (x478 x870))
(assert (= (x1260 x289) (ite (and x1160 x412) (x1473 x289) (ite (and (not x412) x197 x1160) (x1393 x289) (x1275 x289)))))
(assert (= 0 (x1064 x335)))
(assert (= x883 (x510 (x1585 x883))))
(assert (x1052 x954))
(assert (= (ite (= x718 x25) x921 (x734 x25)) (x32 x25)))
(assert (= x1268 (or x124 (and x1158 x461))))
(assert (=> (>= 10000 x1137) (= (x1585 x1137) (x1106 x1137))))
(assert (= 2532887486 (x510 (x1106 2532887486))))
(assert (x1052 x928))
(assert (=> (<= x250 10000) (= (x1585 x250) (x1106 x250))))
(assert (= (x1530 x335) (ite (= x335 x1375) x1118 (x922 x335))))
(assert (= (x1106 87118632) (x1585 87118632)))
(assert (x1052 x591))
(assert (= x826 (x510 (x1585 x826))))
(assert (= (x922 x476) (ite (= x887 x476) x686 (x1217 x476))))
(assert (x1052 x72))
(assert (= (ite (= x811 x1036) x505 (x1530 x811)) (x656 x811)))
(assert (x1052 x880))
(assert (x1052 x1344))
(assert (= (ite (and x246 x855) (x336 x476) (x409 x476)) (x442 x476)))
(assert (= x1408 x1429))
(assert (x1052 x1538))
(assert (= (x1585 635128645) (x1106 635128645)))
(assert (x1052 x921))
(assert (= (ite (= x1165 x718) x921 (x734 x1165)) (x32 x1165)))
(assert (= (x1585 604800) (x1106 604800)))
(assert (= (x510 (x1585 x433)) x433))
(assert (x1052 x1004))
(assert (= (ite (= x1180 x863) x367 (x32 x863)) (x1310 x863)))
(assert (= (x1585 2061678023) (x1106 2061678023)))
(assert (x1052 x414))
(assert (x1052 x1558))
(assert (x1052 x1146))
(assert (x1052 x405))
(assert (x1052 x359))
(assert (=> (<= x1282 10000) (= (x1585 x1282) (x1106 x1282))))
(assert (x1052 x440))
(assert (x1052 x44))
(assert (= (x510 (x1585 x496)) x496))
(assert (x521 x217 x677))
(assert (= 604800 (x510 (x1106 604800))))
(assert (x1052 x1072))
(assert (x478 x65))
(assert (x1052 x683))
(assert (x1052 x259))
(assert (x1052 x79))
(assert (=> (<= x880 10000) (= (x1106 x880) (x1585 x880))))
(assert (= x7 (x510 (x1585 x7))))
(assert (= (or (and (not x652) x645) (and x508 (not x204))) x207))
(assert (x478 x602))
(assert (x1052 x1496))
(assert (= (=> (and (= x806 (x1015 (- x1558 1))) (= x681 (< 0 x806))) (and (=> x681 x524) (=> (not x681) x798))) x582))
(assert (x1052 x407))
(assert (x1052 x665))
(assert (= (ite (= x723 x718) x921 (x734 x723)) (x32 x723)))
(assert (= (x510 (x1585 x180)) x180))
(assert (= (ite (= x383 x1285) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1371 x1285)) (x178 x1285)))
(assert (= (x1082 x1165) (ite (= x233 x1165) x454 (x113 x1165))))
(assert (x1052 x1097))
(assert (= x668 (x510 (x1585 x668))))
(assert (x478 x547))
(assert (x1052 x659))
(assert (= 0 (x1064 x268)))
(assert (x1052 x364))
(assert (x1052 x155))
(assert (= x1493 (x510 (x1585 x1493))))
(assert (= (x1310 x884) (ite (= x884 x1180) x367 (x32 x884))))
(assert (x1052 x1549))
(assert (x478 x1524))
(assert (x1052 x1394))
(assert (= (x1064 x476) 0))
(assert (x478 x1529))
(assert (x1052 x355))
(assert (= (ite (= x1180 x473) x367 (x32 x473)) (x1310 x473)))
(assert (= (x510 (x1106 142201243)) 142201243))
(assert (x1052 x51))
(assert (x1052 x731))
(assert (x1052 x1413))
(assert (x1052 x1251))
(assert (=> (>= 10000 x512) (= (x1585 x512) (x1106 x512))))
(assert (= (x32 x863) (ite (= x863 x718) x921 (x734 x863))))
(assert (x1052 x700))
(assert (= (x1585 2512682246) (x1106 2512682246)))
(assert (= (x510 (x1585 x1366)) x1366))
(assert (= (x1082 x931) (ite (= x931 x233) x454 (x113 x931))))
(assert (=> (>= 10000 x935) (= (x1585 x935) (x1106 x935))))
(assert (=> (<= x446 10000) (= (x1106 x446) (x1585 x446))))
(assert (x1052 x1078))
(assert (x1052 x300))
(assert (= (x922 x464) (ite (= x464 x887) x686 (x1217 x464))))
(assert (= (=> (= (> x1366 0) x86) (and (=> x86 x150) (=> (not x86) x458))) x917))
(assert (= x139 (x510 (x1585 x139))))
(assert (= x458 (=> (= x139 0) x15)))
(assert (= (ite (= x863 x1375) x1118 (x922 x863)) (x1530 x863)))
(assert (= x258 (x510 (x1585 x258))))
(assert (x1052 x367))
(assert (= 0 (x1064 x884)))
(assert (x1052 x1151))
(assert (x478 x1105))
(assert (= 274184521717934524641157099916833587214 (x510 (x1106 274184521717934524641157099916833587214))))
(assert (= (x1310 x335) (ite (= x335 x1180) x367 (x32 x335))))
(assert (= x432 true))
(assert (= (x133 x704) (ite (= x704 x550) x1492 (x1082 x704))))
(assert (x521 x611 x1179))
(assert (x1052 x1199))
(assert (= (x1585 274184521717934524641157099916833587218) (x1106 274184521717934524641157099916833587218)))
(assert (= (x510 (x1585 x602)) x602))
(assert (= (x1585 115792089237316195423570985008687907853269984665640564039457) (x1106 115792089237316195423570985008687907853269984665640564039457)))
(assert (x478 x919))
(assert (x1052 x163))
(assert (= x771 (and x344 x896)))
(assert (x1052 x1209))
(assert (=> (<= x94 10000) (= (x1585 x94) (x1106 x94))))
(assert (x1052 x1477))
(assert (x1052 x1212))
(assert (= (x336 x977) (ite (= x1413 x977) x1013 (x650 x977))))
(assert (= (x510 (x1585 x29)) x29))
(assert (x1052 x1512))
(assert (x1052 x24))
(assert (x478 x687))
(assert (= x1007 x790))
(assert (x285 x1194))
(assert (x1052 x273))
(assert (= x1131 (=> (and x448 (= (x191 (x1585 x250)) x1409) (= x75 (= x250 274184521717934524641157099916833587218)) (= x448 (< x1409 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x653 (= x653 (< (x136 (x1585 x250)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x191 (x1585 274184521717934524641157099916833587206)) x703) (= (x136 (x1585 x250)) x477) (= x1085 x1445) x1334 (= (<= 0 x703) x1334) (= (x191 (x1585 274184521717934524641157099916833587206)) x1490)) (and (=> (and x75 (not (> 649617121 x1277)) (= x480 x334) (= x579 (>= (+ x1014 x31) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x1014 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1277 2514000705)) (<= 0 x1014) (= (x209 x396) x1053) (not x213) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x31 x1014)) (= x568 (x351 (x1585 274184521717934524641157099916833587206) (x1106 1) 0)) (not (= x1277 1889567281)) (= x738 (< x1053 x1526)) (= (> x31 x1053) x168) (= x31 x1406) (not x738) (= x1014 (x600 x939)) (= x480 x238) (= x761 x1526) (= x1034 (x351 (x1585 x480) (x1106 1) 0)) (= x1049 x526) (not (= x1277 649617121)) (not (> 4 x907)) (<= 0 x1053) (= (x1015 (- x907 4)) x1220) (= x730 1) (= x78 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x351 (x1585 x480) (x1106 1) 0) x939) (>= 1461501637330902918203684832716283019655932542975 x480) (= x1445 x907) (not (= x1277 826074471)) (= 2835717307 x1277) (<= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1526 x31) (= x829 274184521717934524641157099916833587206) (> x186 0) (= 274184521717934524641157099916833587206 x1001) (= x186 (x1083 (x1585 274184521717934524641157099916833587218))) (= (x351 (x1585 274184521717934524641157099916833587206) (x1106 1) 0) x396) (= (x1015 (- x1053 x1526)) x467) (not x579) (= (or (> x1220 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1220) true) (> 64 x1220))) x213) (= x1550 (+ x588 x1406)) (= x1193 32) (= x588 x1014) (not x168) (= x907 68)) x860) (=> (not x75) x380)))))
(assert (=> (>= 10000 x89) (= (x1585 x89) (x1106 x89))))
(assert (x1052 x834))
(assert (x1052 x1028))
(assert (=> (<= x924 10000) (= (x1106 x924) (x1585 x924))))
(assert (= x1079 (x510 (x1585 x1079))))
(assert (x1052 x37))
(assert true)
(assert (=> (>= 10000 x1040) (= (x1585 x1040) (x1106 x1040))))
(assert (x478 x1141))
(assert (x1052 x1148))
(assert (= (x510 (x1585 x1137)) x1137))
(assert (= (ite (= x1413 x1180) x367 (x32 x1413)) (x1310 x1413)))
(assert (x1052 x1070))
(assert (x1052 x390))
(assert (x521 x1192 x1459))
(assert (=> (<= x840 10000) (= (x1106 x840) (x1585 x840))))
(assert (x1052 x1382))
(assert (= (x336 x863) (ite (= x1413 x863) x1013 (x650 x863))))
(assert (= x423 (x510 (x1585 x423))))
(assert (x1052 x1112))
(assert (= (ite (and (not x1060) (not x1127) x375 x897) (x346 x169) (ite (and (not x375) x897 (not x1060)) (x109 x169) (ite (and x1060 x897) (x109 x169) (x222 x169)))) (x1547 x169)))
(assert (= (ite (= x1413 x25) x1013 (x650 x25)) (x336 x25)))
(assert (x1052 x434))
(assert (x1052 x203))
(assert (=> (<= x1266 10000) (= (x1106 x1266) (x1585 x1266))))
(assert (x1052 x322))
(assert (x1052 x1122))
(assert (x1052 x888))
(assert (x1052 x196))
(assert (x1052 x497))
(assert (=> (>= 10000 x777) (= (x1585 x777) (x1106 x777))))
(assert (= (x1580 x1413) (ite (and x75 x644) (x1195 x1413) (x816 x1413))))
(assert (x1052 x1323))
(assert (x1052 x202))
(assert (x478 x164))
(assert (x1052 x256))
(assert (= (=> (and (= (= 0 x1035) x809) (or (and (= 0 x401) x809 (= x1209 0)) (and (<= x1189 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= 1 x401) (not x737) (= x1209 x1189)) (and (= x401 0) (= x1209 0) x737)) (= (x1385 x969) x1189) (= x969 (x351 (x1585 x1529) x715 0)) (= x1529 (x1315 1461501637330902918203684832716283019655932542975 x215)) (= (x351 (x1585 x1035) (x1106 10) 0) x715) (= (= x1189 0) x737) (not x809) (<= 0 x1189)))) x1201) x871))
(assert (x1052 x1096))
(assert (x1052 x1437))
(assert (x1052 x1224))
(assert (x1052 x1543))
(assert (= (x133 x473) (ite (= x550 x473) x1492 (x1082 x473))))
(assert (=> (>= 10000 x1399) (= (x1585 x1399) (x1106 x1399))))
(assert (x1052 x233))
(assert (= (ite (= x268 x718) x921 (x734 x268)) (x32 x268)))
(assert (x1052 x519))
(assert (= 2868243304 (x510 (x1106 2868243304))))
(assert (= x603 (=> (and (not (= 2690754053 x659)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x792) (> 2960351575 x659) (> x1138 0) (= x1138 (x1083 (x1585 274184521717934524641157099916833587206))) (= (x910 x545) x792) (<= 0 x792) (not (< x659 2690754053)) (>= 1461501637330902918203684832716283019655932542975 x712) (= x545 (x351 (x1585 x951) x484 0)) (>= 1461501637330902918203684832716283019655932542975 x951) (not (> 2293535753 x659)) (= x484 (x351 (x1585 x712) x140 0)) (= x140 (x351 (x1585 x804) (x1106 3) 0)) (= x1407 x792) (= x659 2743102681)) (=> (and (= x840 x66) (= x326 x1407) (= x1477 x1191) (= x433 x852) (= x1022 x1506)) x141))))
(assert (x1052 x1307))
(assert (x1052 x1241))
(assert (= x157 (x510 (x1585 x157))))
(assert (x478 x712))
(assert (x1052 x1046))
(assert (= x1032 true))
(assert (= (ite (and x1160 x412) (x910 x918) (ite (and x197 x1160 (not x412)) (x910 x918) (x773 x918))) (x854 x918)))
(assert (= x74 (x510 (x1585 x74))))
(assert (= x1329 (x510 (x1585 x1329))))
(assert (x1052 x754))
(assert (=> (>= 10000 x1004) (= (x1106 x1004) (x1585 x1004))))
(assert (x1052 x686))
(assert (x1052 x970))
(assert (=> (<= x164 10000) (= (x1585 x164) (x1106 x164))))
(assert (= (ite (= x884 x550) x1492 (x1082 x884)) (x133 x884)))
(assert (=> (<= x983 10000) (= (x1585 x983) (x1106 x983))))
(assert (x1052 x473))
(assert (=> (<= x469 10000) (= (x1585 x469) (x1106 x469))))
(assert (x1052 x557))
(assert (x1052 x454))
(assert (= (x178 x863) (ite (= x863 x383) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1371 x863))))
(assert (= x8 (=> (and (= x73 (>= x1136 x613)) (= x756 x613) (= (and x73 x341) x1528) (= x690 (or x1528 (not x893)))) (and x690 (=> (and (= x1484 2939843472) (= x1297 x852) (= x1123 true) (= x688 87118632) (= x241 x1506) (= x1240 x66)) x1256)))))
(assert (x1052 x829))
(assert (= (and x323 x1596) x176))
(assert (= x963 (x510 (x1585 x963))))
(assert (= (=> (and (= x1175 (< 0 x1258)) (= (x1015 (- x1366 1)) x1258)) (and (=> (not x1175) x1418) (=> x1175 x914))) x1153))
(assert (x285 x1096))
(assert (= (x1310 x977) (ite (= x1180 x977) x367 (x32 x977))))
(assert (= (x510 (x1585 x1266)) x1266))
(assert (= (x1580 x931) (ite (and x75 x644) (x1195 x931) (x816 x931))))
(assert (x285 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1052 x383))
(assert (x1052 x265))
(assert (x1052 x884))
(assert (= (ite (and x412 x1160) (x910 x698) (ite (and x197 (not x412) x1160) (x910 x698) (x773 x698))) (x854 x698)))
(assert (= (or x1348 (and x764 (not x762))) x84))
(assert (= (x1064 x1165) 0))
(assert (= (ite (and x635 (not x818) x1440) (x174 x1512) (x444 x1512)) (x1455 x1512)))
(assert (x1052 x526))
(assert (x1052 x549))
(assert (x1052 x697))
(assert (= (x1106 911411945) (x1585 911411945)))
(assert (x1052 x881))
(assert (= (ite (= x1413 x1375) x1118 (x922 x1413)) (x1530 x1413)))
(assert (x1052 x1235))
(assert (x1052 x301))
(assert (=> (<= x971 10000) (= (x1585 x971) (x1106 x971))))
(assert (= (x510 (x1585 x781)) x781))
(assert (=> (>= 10000 x11) (= (x1585 x11) (x1106 x11))))
(assert (=> (<= x1483 10000) (= (x1585 x1483) (x1106 x1483))))
(assert (x1052 x618))
(assert (x1052 x239))
(assert (x1052 x547))
(assert (= (x442 x811) (ite (and x246 x855) (x336 x811) (x409 x811))))
(assert (x1052 x240))
(assert (= (x510 (x1585 x572)) x572))
(assert (= (=> (and (= x1454 x1396) (= x912 x655) (= (<= x1396 x881) x655)) x912) x632))
(assert (x294 x125 x1096))
(assert (= (ite (and x897 x649) (x913 x1115) (x1129 x1115)) (x799 x1115)))
(assert (= x1546 x874))
(assert (x1052 x989))
(assert (x1052 x951))
(assert (= (ite (and x644 x75) (x1195 x464) (x816 x464)) (x1580 x464)))
(assert (x1052 x959))
(assert (=> (>= 10000 x107) (= (x1585 x107) (x1106 x107))))
(assert (=> (<= x1204 10000) (= (x1106 x1204) (x1585 x1204))))
(assert (x1052 x299))
(assert (= (ite (= x740 x476) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x476)) (x1217 x476)))
(assert (= (x510 (x1585 x1105)) x1105))
(assert (= (x510 (x1585 x1072)) x1072))
(assert (=> (<= x1297 10000) (= (x1585 x1297) (x1106 x1297))))
(assert (x478 x202))
(assert (x1052 x530))
(assert (x1052 x517))
(assert (= (x346 x974) (ite (= x1030 x974) x1487 (x109 x974))))
(assert (= (x639 x811) (ite (= x811 x1508) x1538 (x663 x811))))
(assert (x1052 x1143))
(assert (=> (>= 10000 x23) (= (x1585 x23) (x1106 x23))))
(assert (x1052 x469))
(assert (= x288 (x510 (x1585 x288))))
(assert (x1052 x1139))
(assert (x1052 x1337))
(assert (x1052 x49))
(assert (= (ite (and (not x1060) x375 (not x1127) x897) (x1310 x931) (ite (and x897 (not x375) (not x1060)) (x32 x931) (ite (and x897 x1060) (x32 x931) (x1156 x931)))) (x548 x931)))
(assert (x1052 x277))
(assert (= (x799 x269) (ite (and x897 x649) (x913 x269) (x1129 x269))))
(assert (x1052 x427))
(assert (= (ite (and x635 x1440 (not x818)) (x174 x704) (x444 x704)) (x1455 x704)))
(assert (x478 x671))
(assert (= (x548 x335) (ite (and x375 (not x1127) x897 (not x1060)) (x1310 x335) (ite (and (not x375) (not x1060) x897) (x32 x335) (ite (and x1060 x897) (x32 x335) (x1156 x335))))))
(assert (x1052 x1155))
(assert (= x1103 (x510 (x1585 x1103))))
(assert (x478 x1304))
(assert (x1052 x115))
(assert (= (ite (= x740 x977) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x977)) (x1217 x977)))
(assert (x478 x293))
(assert (= (x1217 x25) (ite (= x25 x740) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x25))))
(assert (= (x510 (x1106 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x1052 x1550))
(assert (= (x510 (x1585 x923)) x923))
(assert (= (x510 (x1585 x832)) x832))
(assert (x1052 x181))
(assert (x1052 x147))
(assert (= x635 (or (and x509 x581) (and x1125 x1228) x84)))
(assert (x1052 x379))
(assert (x478 x1483))
(assert (=> (<= x494 10000) (= (x1585 x494) (x1106 x494))))
(assert (= (ite (and x635 x619 x392 x1164 x1440 (not x675)) (x656 x1512) (ite (and x1440 x1164 x635 x392 (not x619)) (x1530 x1512) (ite (and x635 (not x1164) x392 x1440) (x922 x1512) (ite (and x635 x1440 (not x392)) (x1217 x1512) (x1187 x1512))))) (x174 x1512)))
(assert (x1052 x1049))
(assert (= x1279 (or (and x1408 (not x287)) x1339 (and x635 (not x1440)))))
(assert (x1052 x730))
(assert (= x855 x1401))
(assert (x1052 x975))
(assert (= (x548 x1165) (ite (and x375 x897 (not x1060) (not x1127)) (x1310 x1165) (ite (and x897 (not x375) (not x1060)) (x32 x1165) (ite (and x1060 x897) (x32 x1165) (x1156 x1165))))))
(assert (= (x1064 192) 0))
(assert (x478 x438))
(assert (= (x346 x1345) (ite (= x1345 x1030) x1487 (x109 x1345))))
(assert (x1052 x184))
(assert (x1052 x908))
(assert (=> (>= 10000 x1046) (= (x1106 x1046) (x1585 x1046))))
(assert (= x1474 (=> (and (= (x559 x739) x1578) (= x118 (x351 (x1585 x90) (x1106 5) 0)) (= (x1083 (x1585 274184521717934524641157099916833587206)) x800) (not (= x630 2743102681)) (<= x1578 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x439 x1578) (not (= x630 2690754053)) (= 2798343961 x630) (= (x351 (x1585 x665) x118 0) x739) (< x630 2960351575) (> x800 0) (not (< x630 2293535753)) (not (= x630 2764855426)) (not (< x630 2690754053)) (<= 0 x1578) (>= 1461501637330902918203684832716283019655932542975 x665)) (=> (and (= x1477 x164) (= x202 x1506) (= x852 x1304) (= x293 x66) (= x439 x1136)) x1383))))
(assert (=> (<= x99 10000) (= (x1585 x99) (x1106 x99))))
(assert (x478 x691))
(assert (x1052 x720))
(assert (= x1299 (=> (and (= (= 0 x1537) x1098) (= x1173 (= 0 x199)) (or (and (= (x1315 1461501637330902918203684832716283019655932542975 x215) x970) (not x1173) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x620)) x1173) (or (and (= x856 (x102 x1591)) (= (x351 (x1585 x1365) x695 0) x1068) (= x535 (x584 x1591 1)) (<= x633 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1260 x1501) x1076) (= x986 (> x679 x1076)) (= (x1010 (+ x1449 128)) x642) (<= x856 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x369 x822) x679) (= (x351 (x1585 x1558) (x1106 7) 0) x695) (= x188 (= x1549 0)) (not x1098) (= (x236 x535) x633) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x945) (<= 0 x1076) (= x822 (x1010 (+ 96 x1449))) (= x1501 (x351 (x1585 x945) x1068 0)) (= x1365 (x1315 1461501637330902918203684832716283019655932542975 x215)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1076) (or (and (= (> x379 x767) x1453) (or (and (not (> x1359 x736)) x930 (= (x369 x301) x1359) (= x1116 (x1015 (- x736 x1359))) (= x1116 x1549)) (and (= x331 604800) (= x1549 x1197) (= x1045 (x1015 (- x736 x1076))) (= x1197 (ite (> 604800 x1045) x1045 604800)) (not (> x1076 x736)) (not x930))) x986 (= x930 (= x1076 0)) (= (x369 x822) x767) (or (and (= x379 x736) (not x1453)) (and (= x736 x558) x1453 (= x558 (x369 x822))))) (and (= 0 x1549) (not x986))) (= (x351 (x1585 x1558) (x1106 1) 0) x1591) (or (and (= (x1315 1461501637330902918203684832716283019655932542975 x217) x496) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x74) (= x275 (x351 (x1585 x1558) (x1106 3) 0)) (= (* x1549 x1537) x956) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1537 x1549)) (= (x351 (x1585 x74) x275 0) x57) (= (x351 (x1585 x1390) x692 0) x859) (= x1390 (x1315 1461501637330902918203684832716283019655932542975 x215)) (= (x351 (x1585 x1558) (x1106 7) 0) x692) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x708) (= (x351 (x1585 x496) x859 0) x1566) (= x359 x642) (= (x351 (x1585 x708) x57 0) x1544) (not x188) (= x956 x1314)) (and (= x359 x642) (= (x351 (x1585 x1041) x1248 0) x1292) (= x1248 (x351 (x1585 x832) x1464 0)) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x1041) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x832) x188 (= x1464 (x351 (x1585 x1558) (x1106 7) 0)))) (<= 0 x633) (>= x856 0)) (and (= (x1315 1461501637330902918203684832716283019655932542975 x215) x1329) (= x499 (x351 (x1585 x1558) (x1106 7) 0)) (= x359 x301) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x446) x1098 (= x395 (x351 (x1585 x1329) x499 0)) (= (x351 (x1585 x446) x395 0) x1284)))) x210)))
(assert (= (x510 (x1106 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= (x510 (x1585 x665)) x665))
(assert (x1052 x9))
(assert (x1052 x701))
(assert (=> (<= x1529 10000) (= (x1585 x1529) (x1106 x1529))))
(assert (= (x510 (x1585 x627)) x627))
(assert (= x170 (or (and x148 x1088) (and x323 (not x1596)) (and x460 (not x514)))))
(assert (= x482 (x510 (x1585 x482))))
(assert (x285 x1192))
(assert (= (ite (= x811 x550) x1492 (x1082 x811)) (x133 x811)))
(assert (x1052 x1403))
(assert (x1052 x205))
(assert (= (and (not x75) x644) x271))
(assert (= (ite (= x464 x383) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1371 x464)) (x178 x464)))
(assert (x478 x1434))
(assert (=> (<= x480 10000) (= (x1585 x480) (x1106 x480))))
(assert (= x11 (x510 (x1585 x11))))
(assert (= x1040 (x510 (x1585 x1040))))
(assert (= x59 (=> (and (< 0 x1394) (<= x1243 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x351 (x1585 x278) (x1106 5) 0) x77) (not (> 2293535753 x906)) (>= x1243 0) (> 2960351575 x906) (= (x351 (x1585 x180) x77 0) x1313) (= x1394 (x1083 (x1585 274184521717934524641157099916833587206))) (not (= 2690754053 x906)) (= x1243 x298) (= x1243 (x1360 x1313)) (>= 1461501637330902918203684832716283019655932542975 x180) (not (= 2743102681 x906)) (not (< x906 2690754053)) (not (= 2764855426 x906)) (= x906 2798343961)) (=> (and (= x66 x1178) (= x376 x1477) (= x1004 x852) (= x1506 x1103) (= x115 x298)) x1188))))
(assert (x1052 x1416))
(assert (x478 x1366))
(assert (x1052 x950))
(assert (= x152 x1402))
(assert (x1052 x574))
(assert (= (x548 x863) (ite (and x897 (not x1127) x375 (not x1060)) (x1310 x863) (ite (and (not x375) x897 (not x1060)) (x32 x863) (ite (and x897 x1060) (x32 x863) (x1156 x863))))))
(assert (= (x510 (x1585 x1340)) x1340))
(assert (=> (>= 10000 x1493) (= (x1585 x1493) (x1106 x1493))))
(assert (x478 x1504))
(assert (x1052 x794))
(assert (x1052 x586))
(assert (=> (>= 10000 x1294) (= (x1585 x1294) (x1106 x1294))))
(assert (=> (<= x7 10000) (= (x1106 x7) (x1585 x7))))
(assert (= (x510 (x1585 x99)) x99))
(assert (x1052 x198))
(assert (x478 x258))
(assert (x1052 x1304))
(assert (= (x1355 x1593) (ite (and x649 x897) (x1360 x1593) (x673 x1593))))
(assert (x1052 x691))
(assert (x1052 x749))
(assert (x1052 x370))
(assert (x1052 x578))
(assert (x1052 x853))
(assert (= (x510 (x1585 x741)) x741))
(assert (= (x1585 18446744073709551615) (x1106 18446744073709551615)))
(assert (= (=> (and (= x831 (x351 (x1585 x184) x592 0)) (= x592 (x351 (x1585 x1399) (x1106 6) 0)) (= x17 (x1083 (x1585 274184521717934524641157099916833587206))) (<= 0 x1152) (< 0 x17) (> 2293535753 x936) (>= 1461501637330902918203684832716283019655932542975 x184) (not (= x936 1986467848)) (not (= x936 2211524764)) (not (< x936 911411945)) (not (= x936 2061678023)) (= x936 2258409472) (<= x1152 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1152 (x1369 x831)) (not (= 1968616202 x936)) (not (< x936 1968616202)) (= x1152 x95)) (=> (and (= x29 x66) (= x95 x1063) (= x551 x852) (= x654 x1506)) x292)) x774))
(assert (x1052 x786))
(assert (x1052 x1466))
(assert (= x764 x1268))
(assert (= x141 (=> (and (= x577 (x1083 (x1585 274184521717934524641157099916833587206))) (>= x1235 0) (= (x351 (x1585 x1191) x1254 0) x283) (>= 1461501637330902918203684832716283019655932542975 x433) (< x470 2960351575) (not (< x470 2293535753)) (= x1325 x1235) (> 2690754053 x470) (> x577 0) (<= x1022 1461501637330902918203684832716283019655932542975) (= (x351 (x1585 x433) x131 0) x1254) (= (x109 x283) x1235) (= (x351 (x1585 x1022) x425 0) x131) (= (x351 (x1585 x840) (x1106 4) 0) x425) (not (= x470 2293535753)) (= x470 2532887486) (not (= 2418364589 x470)) (not (= x470 2512682246)) (<= x1191 1461501637330902918203684832716283019655932542975) (<= x1235 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (or (and (= (> x50 1) x1246) (or (and (not (= x1230 x597)) x1246 (or (not x1140) (and (not (= x742 x813)) (= x742 (x1315 1461501637330902918203684832716283019655932542975 x1192)) x1140 (= x813 (x1315 1461501637330902918203684832716283019655932542975 x611)) (= (x650 224) x1192) (= x968 (< 3 x50)) (> x1441 2) (not x968) (= (x650 160) x611) (= x1441 (x650 128)) (= x189 (x650 128)) (> x189 0))) (= (x650 128) x1421) (= (x650 160) x1554) (= (x650 128) x196) (> x196 0) (= x1140 (> x50 2)) (= (x650 192) x591) (= x597 (x1315 1461501637330902918203684832716283019655932542975 x1554)) (= (x1315 1461501637330902918203684832716283019655932542975 x591) x1230) (< 1 x1421)) (not x1246)) x1225 (= x214 (x1015 (- x50 1))) (not (> x214 1)) (not (< x50 1))) (not x1225)) (= x601 x636) (not (= x282 2798343961)) (<= 0 x981) (= (x1015 (- x50 1)) x1323) (not (< x1382 x1366)) (= x282 2939843472) (not (< x282 2293535753)) (not (> 4 x495)) (= x834 (x1010 (+ x846 32))) (= (x1010 (+ x127 160)) x1413) (or (and (= x1224 (mod (* x1013 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x246) (= (x1010 (+ x1395 160)) x622)) x246) (= x1505 x1366) (not (= 2690754053 x282)) (= (x1010 (+ 35 x899)) x513) (= x1364 x1382) (= x1225 (> x1323 0)) (not (< 18446744073709551615 x1013)) (not (> 2690754053 x282)) (= x1232 x701) (= x1018 (x1010 (+ 4 x899))) (>= x424 0) (>= x1232 0) (= x850 x379) (= x794 x1325) (<= x981 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x601 0) (>= x879 0) (not (= x282 2743102681)) (not (= x282 2868243304)) (not (< x495 x1213)) (= x565 x899) (= x657 x215) (>= 1461501637330902918203684832716283019655932542975 x879) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x495) true) (= x114 x217) (= x50 (x650 128)) (= x264 (x1010 (+ x846 160))) (> x495 163) (= x1468 x1366) (= (x1219 x1018) x1013) (= x590 x424) (not (< x50 1)) (or (and (= (<= x513 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x495 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x513 x495)) (and (<= x495 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x513 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x590 x37) (= x208 128) (>= 1461501637330902918203684832716283019655932542975 x217) (> x1006 0) (> 2960351575 x282) (<= x215 1461501637330902918203684832716283019655932542975) (= x63 (x1010 (+ x834 x1413))) (= x902 (x1015 (- x495 4))) (= x246 (= 0 x1013)) (= x1081 x1382) (= (mod (* 32 x1013) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x127) (= x471 (mod (* 32 x1013) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1213 (x1010 (+ x1291 x471))) (= (>= x326 x794) x1480) (< x1382 x981) (= x1006 (x1083 (x1585 274184521717934524641157099916833587206))) (= (x1010 (+ 36 x899)) x1291) (not (= 2764855426 x282)) (= x1395 (x1010 (+ x127 32))) (= x217 x954) (<= x424 1461501637330902918203684832716283019655932542975) (not (< 18446744073709551615 x565)) (>= 1461501637330902918203684832716283019655932542975 x1232) (= x573 (and x1480 x827)) (not (or (and (= true (<= x902 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 160 x902)) (> x902 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x746 x215) (= x846 (mod (* x1013 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x573) x693))))
(assert (= x1429 (or (and x644 x75) (and x898 x271))))
(assert (x1052 x541))
(assert (=> (<= x1439 10000) (= (x1106 x1439) (x1585 x1439))))
(assert (x1052 x2))
(assert (x1052 x357))
(assert (= x19 (x510 (x1585 x19))))
(assert (x1052 x1194))
(assert (x1052 x929))
(assert (= (=> (and (not (= x1581 2690754053)) (= x735 (x351 (x1585 x749) x42 0)) (= (x351 (x1585 x817) (x1106 3) 0) x1392) (< x1581 2960351575) (<= x749 1461501637330902918203684832716283019655932542975) (= (x910 x735) x79) (<= x258 1461501637330902918203684832716283019655932542975) (= 2743102681 x1581) (not (> 2293535753 x1581)) (= (x1083 (x1585 274184521717934524641157099916833587206)) x181) (not (> 2690754053 x1581)) (= x42 (x351 (x1585 x258) x1392 0)) (<= 0 x79) (< 0 x181) (= x763 x79) (<= x79 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x537 x763) (= x1506 x512) (= x1305 (>= x347 x537)) (= x1460 x66)) x151)) x647))
(assert (x1052 x580))
(assert (x1052 x1103))
(assert (x1052 x1404))
(assert (x1052 x1245))
(assert (x1052 x1022))
(assert (=> (<= x1340 10000) (= (x1106 x1340) (x1585 x1340))))
(assert (= (x1585 1461501637330902918203684832716283019655932542975) (x1106 1461501637330902918203684832716283019655932542975)))
(assert (x1052 x1358))
(assert (= (=> (and (= x638 (x351 (x1585 x1072) (x1106 7) 0)) (<= x226 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x226) x1088) (<= 0 x226) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x240) (= (x1260 x952) x226) (= x952 (x351 (x1585 x1303) x894 0)) (= x1303 (x1315 1461501637330902918203684832716283019655932542975 x217)) (= (x351 (x1585 x240) x638 0) x894)) (and (=> (and (= (< 0 x1269) x1102) (= x1269 (x1015 (- x1072 1))) x1088 (not x1102)) x1005) (=> (and (= x1072 x1145) (not x1088)) x1142))) x304))
(assert (x1052 x1011))
(assert (x1052 x617))
(assert (= (x510 (x1106 2512682246)) 2512682246))
(assert (= (ite (= x731 x233) x454 (x113 x731)) (x1082 x731)))
(assert (x1052 x52))
(assert (x1052 x472))
(assert (x1052 x164))
(assert (x1052 x1468))
(assert (=> (<= x572 10000) (= (x1585 x572) (x1106 x572))))
(assert (= (x510 (x1585 x1569)) x1569))
(assert (= x380 (=> (= (= x250 274184521717934524641157099916833587214) x898) (and (=> (not x898) x1032) (=> (and (not x397) (>= 1461501637330902918203684832716283019655932542975 x157) (not (> 649617121 x1331)) (not x1272) (= x759 x1445) (= x157 x1307) x898 (= x1321 x519) (not (= 826074471 x1331)) (= x775 x219) (= (x54 x1312) x775) (= x866 (x1015 (- x759 4))) (not x1515) (= (> x1321 x399) x732) (= (< x399 x519) x1515) (= x413 (x351 (x1585 274184521717934524641157099916833587206) (x1106 1) 0)) (= x1312 (x351 (x1585 x157) (x1106 1) 0)) (= x238 x157) (>= x399 0) (= x730 1) (= x1280 x1321) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x399) (= x519 x761) (< 0 x864) (= (x351 (x1585 274184521717934524641157099916833587206) (x1106 1) 0) x765) (= x397 (or (> x866 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x866) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x866) true)))) (= x1427 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1193 32) (= x759 68) (= x1567 (+ x1280 x219)) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x775 x1321)) x1272) (= x1331 2835717307) (= (x351 (x1585 x157) (x1106 1) 0) x1130) (not x732) (<= x775 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587206 x617) (= x1384 x322) (<= 0 x775) (not (= 2514000705 x1331)) (= x864 (x1083 (x1585 274184521717934524641157099916833587214))) (not (= x1331 649617121)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x775 x1321)) (not (= x1331 1889567281)) (not (> 4 x759)) (= (x539 x413) x399) (= x307 (x1015 (- x399 x519))) (= x583 274184521717934524641157099916833587206)) x860)))))
(assert (= (x346 x1295) (ite (= x1295 x1030) x1487 (x109 x1295))))
(assert (x1052 x1165))
(assert (= x821 (x510 (x1585 x821))))
(assert (x1052 x753))
(assert (= (x510 (x1585 x870)) x870))
(assert (x478 x945))
(assert (= (x510 (x1585 x216)) x216))
(assert (= x1539 x312))
(assert (= (x510 (x1585 x1524)) x1524))
(assert (= (x1455 x335) (ite (and (not x818) x635 x1440) (x174 x335) (x444 x335))))
(assert (x1052 x495))
(assert (x478 x1041))
(assert (x1052 x750))
(assert (x1052 x372))
(assert (= x1204 (x510 (x1585 x1204))))
(assert (= (ite (and (not x818) x635 x1440) (x174 x811) (x444 x811)) (x1455 x811)))
(assert (x1052 x1352))
(assert (x1052 x361))
(assert (= (ite (= x931 x1180) x367 (x32 x931)) (x1310 x931)))
(assert (x1052 x245))
(assert (= (ite (and x897 (not x1127) (not x1060) x375) (x1310 x704) (ite (and (not x375) (not x1060) x897) (x32 x704) (ite (and x1060 x897) (x32 x704) (x1156 x704)))) (x548 x704)))
(assert (x1052 x551))
(assert (x1052 x420))
(assert (x1052 x1287))
(assert (= (ite (= x1508 x464) x1538 (x663 x464)) (x639 x464)))
(assert (x1052 x1411))
(assert (x1052 x68))
(assert (= (x510 (x1585 x804)) x804))
(assert (x1052 x389))
(assert (= 69947311 (x510 (x1106 69947311))))
(assert (x1052 x609))
(assert (=> (<= x574 10000) (= (x1585 x574) (x1106 x574))))
(assert (x1052 x426))
(assert (x1052 x1192))
(assert (=> (>= 10000 x433) (= (x1585 x433) (x1106 x433))))
(assert (x478 x901))
(assert (x1052 x1013))
(assert (= (ite (and (not x1127) (not x1060) x897 x375) (x346 x766) (ite (and (not x1060) (not x375) x897) (x109 x766) (ite (and x897 x1060) (x109 x766) (x222 x766)))) (x1547 x766)))
(assert (x478 x1022))
(assert (= (ite (= x977 x887) x686 (x1217 x977)) (x922 x977)))
(assert (x1052 x840))
(assert (= (x510 (x1585 x355)) x355))
(assert (x1052 x474))
(assert (=> (>= 10000 x870) (= (x1585 x870) (x1106 x870))))
(assert (x1052 x1409))
(assert (= (ite (= x977 x233) x454 (x113 x977)) (x1082 x977)))
(assert (= x531 (x510 (x1585 x531))))
(assert (x1052 x777))
(assert (x1052 x470))
(assert (x1052 x625))
(assert (x1052 x450))
(assert (x1052 x17))
(assert (x285 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x478 x929))
(assert (x1052 x388))
(assert (=> (<= x1079 10000) (= (x1585 x1079) (x1106 x1079))))
(assert (= (ite (= x811 x383) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1371 x811)) (x178 x811)))
(assert (x1052 x447))
(assert (x1052 x1039))
(assert (x1052 x1276))
(assert (= x1110 x1402))
(assert (= x645 (and x1214 x1026)))
(assert (= x1258 (x510 (x1585 x1258))))
(assert (= (x1064 x704) 0))
(assert (=> (>= 10000 x741) (= (x1585 x741) (x1106 x741))))
(assert (=> (>= 10000 x288) (= (x1585 x288) (x1106 x288))))
(assert (x1052 x919))
(assert (= (x1310 x550) (ite (= x1180 x550) x367 (x32 x550))))
(assert (x478 x158))
(assert (= x667 x1318))
(assert (x1052 x23))
(assert (=> (>= 10000 x1597) (= (x1106 x1597) (x1585 x1597))))
(assert (=> (<= x1304 10000) (= (x1585 x1304) (x1106 x1304))))
(assert (= x1541 (=> (and (not (< x1497 468353030)) (= x1159 (x351 (x1585 x741) (x1106 7) 0)) (= x500 (x1083 (x1585 274184521717934524641157099916833587206))) (= (x351 (x1585 x355) x1159 0) x159) (<= 0 x1415) (>= 1461501637330902918203684832716283019655932542975 x547) (< 0 x500) (= (x351 (x1585 x547) x159 0) x289) (< x1497 2293535753) (not (= x1497 635128645)) (= 759532456 x1497) (<= x1415 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 911411945 x1497) (= x1415 (x1423 x289)) (= x1415 x1405) (not (= 468353030 x1497)) (<= x355 1461501637330902918203684832716283019655932542975)) (=> (and (= x1506 x668) (= x1510 x1405) (= x893 (>= x277 x1510)) (= x66 x7)) x1521))))
(assert (= (ite (and x635 x1440 (not x818)) (x174 x1285) (x444 x1285)) (x1455 x1285)))
(assert (x478 x241))
(assert (=> (>= 10000 x1586) (= (x1106 x1586) (x1585 x1586))))
(assert (x1052 x1504))
(assert (x478 x1460))
(assert (x1052 x1505))
(assert (x1052 x1484))
(assert (x478 x665))
(assert (x478 x572))
(assert (=> (>= 10000 x1365) (= (x1106 x1365) (x1585 x1365))))
(assert (x1052 x736))
(assert (= (x1106 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1585 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x547 (x510 (x1585 x547))))
(assert (x478 x74))
(assert (= (x1106 759532456) (x1585 759532456)))
(assert (= (x1355 x41) (ite (and x649 x897) (x1360 x41) (x673 x41))))
(assert (=> (>= 10000 x256) (= (x1585 x256) (x1106 x256))))
(assert (= x1188 (=> (and (= (x1083 (x1585 274184521717934524641157099916833587206)) x1251) (not (= 2512682246 x658)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1150) (< x658 2690754053) (<= x1004 1461501637330902918203684832716283019655932542975) (< 0 x1251) (= (x109 x149) x1150) (= x1150 x989) (<= x1103 1461501637330902918203684832716283019655932542975) (= (x351 (x1585 x1178) (x1106 4) 0) x111) (not (= x658 2418364589)) (>= 1461501637330902918203684832716283019655932542975 x376) (< x658 2960351575) (= x658 2532887486) (not (< x658 2293535753)) (= (x351 (x1585 x1103) x111 0) x728) (= x149 (x351 (x1585 x376) x455 0)) (= (x351 (x1585 x1004) x728 0) x455) (>= x1150 0) (not (= 2293535753 x658))) (=> (and (= x626 (<= x888 x115)) (= x1506 x712) (= x951 x852) (= x66 x804) (= x888 x989) (= x827 (and x626 x1381))) x603))))
(assert (x1052 x1036))
(assert (x1052 x31))
(assert (= (x510 (x1585 x202)) x202))
(assert (x1052 x935))
(assert (x1052 x811))
(assert (x1052 x404))
(assert (x1052 x482))
(assert (= (x510 (x1585 x1041)) x1041))
(assert (=> (<= x643 10000) (= (x1106 x643) (x1585 x643))))
(assert (x1052 x973))
(assert (=> (>= 10000 x241) (= (x1106 x241) (x1585 x241))))
(assert (= (ite (and x649 x897) (x1360 x739) (x673 x739)) (x1355 x739)))
(assert (= (x510 (x1585 x117)) x117))
(assert (=> (<= x1524 10000) (= (x1106 x1524) (x1585 x1524))))
(assert (x1052 x1208))
(assert (x478 x358))
(assert (x1052 x423))
(assert (= (x1585 649617121) (x1106 649617121)))
(assert (= (x548 x550) (ite (and (not x1060) x375 (not x1127) x897) (x1310 x550) (ite (and (not x375) x897 (not x1060)) (x32 x550) (ite (and x897 x1060) (x32 x550) (x1156 x550))))))
(assert (= (x789 x6) (ite (= x6 x974) x93 (x1547 x6))))
(assert (x1052 x281))
(assert (= x1242 x837))
(assert (= (ite (and x855 x246) (x336 x1180) (x409 x1180)) (x442 x1180)))
(assert (x1052 x1274))
(assert (= x1017 true))
(assert (x478 x880))
(assert (= (ite (= x233 x25) x454 (x113 x25)) (x1082 x25)))
(assert (x478 x117))
(assert (x1052 x971))
(assert (=> (<= x293 10000) (= (x1106 x293) (x1585 x293))))
(assert (x1052 x254))
(assert (= (x510 (x1585 x1356)) x1356))
(assert (x478 x1258))
(assert (= x516 (x510 (x1585 x516))))
(assert (= (x174 x1285) (ite (and x635 x619 x1164 x392 (not x675) x1440) (x656 x1285) (ite (and x635 x1440 (not x619) x1164 x392) (x1530 x1285) (ite (and (not x1164) x635 x1440 x392) (x922 x1285) (ite (and x635 (not x392) x1440) (x1217 x1285) (x1187 x1285)))))))
(assert (x1052 x923))
(assert (= (x548 x476) (ite (and (not x1060) (not x1127) x375 x897) (x1310 x476) (ite (and x897 (not x375) (not x1060)) (x32 x476) (ite (and x897 x1060) (x32 x476) (x1156 x476))))))
(assert (x1052 x1486))
(assert (x1052 x845))
(assert (x478 x1399))
(assert (x478 x1558))
(assert (= (ite (and (not x818) x635 x1440) (x174 x931) (x444 x931)) (x1455 x931)))
(assert (x1052 x726))
(assert (x1052 x446))
(assert (= (x1530 x704) (ite (= x1375 x704) x1118 (x922 x704))))
(assert (x1052 x832))
(assert (= (x510 (x1585 x173)) x173))
(assert (=> (>= 10000 x51) (= (x1585 x51) (x1106 x51))))
(assert (= x1330 (x510 (x1585 x1330))))
(assert (=> (>= 10000 x806) (= (x1106 x806) (x1585 x806))))
(assert (x1052 x1152))
(assert (x478 x983))
(assert (x1052 x1502))
(assert (x1052 x949))
(assert (= (ite (and x649 x897) (x913 x457) (x1129 x457)) (x799 x457)))
(assert (x1052 x343))
(assert (x1052 x98))
(assert (= (ite (= x476 x233) x454 (x113 x476)) (x1082 x476)))
(assert (x1052 x978))
(assert (= (ite (= x1165 x550) x1492 (x1082 x1165)) (x133 x1165)))
(assert (= (=> (= x949 x139) x15) x60))
(assert (x478 x935))
(assert (x478 x926))
(assert (= (ite (= x335 x718) x921 (x734 x335)) (x32 x335)))
(assert (x1052 x852))
(assert (x1052 x101))
(assert (x1052 x1487))
(assert (x1052 x103))
(assert (x1052 x843))
(assert (x285 x660))
(assert (= (x1557 x811) (ite (= x811 x666) x52 (x178 x811))))
(assert (x1052 x1366))
(assert (x1052 x846))
(assert (x1052 x630))
(assert (= (x510 (x1106 2293535753)) 2293535753))
(assert (= (x510 (x1585 x1141)) x1141))
(assert (x1052 x708))
(assert (x1052 x376))
(assert (x478 x332))
(assert (x1052 x1230))
(assert (= (=> (and (not (= 2690754053 x1430)) (> x1089 0) (= (x351 (x1585 x1240) (x1106 3) 0) x305) (<= 0 x1143) (= x1573 (x351 (x1585 x241) x305 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1143) (< x1430 2960351575) (= x1089 (x1083 (x1585 274184521717934524641157099916833587206))) (not (< x1430 2293535753)) (= x1491 (x351 (x1585 x1297) x1573 0)) (<= x1297 1461501637330902918203684832716283019655932542975) (= x1143 (x360 x1491)) (= x1143 x129) (>= 1461501637330902918203684832716283019655932542975 x241) (= 2743102681 x1430) (not (> 2690754053 x1430))) (=> (and (= x1263 x852) (= x1340 x1477) (= x881 x129) (= x1575 x1506) (= x919 x66)) x1563)) x1256))
(assert (= (x32 x473) (ite (= x718 x473) x921 (x734 x473))))
(assert (= (ite (and x635 x1164 x392 (not x675) x619 x1440) (x656 x476) (ite (and x1440 x635 (not x619) x1164 x392) (x1530 x476) (ite (and x635 x1440 (not x1164) x392) (x922 x476) (ite (and x1440 x635 (not x392)) (x1217 x476) (x1187 x476))))) (x174 x476)))
(assert (x478 x1327))
(assert (=> (<= x781 10000) (= (x1585 x781) (x1106 x781))))
(assert (x1052 x350))
(assert (x1052 x924))
(assert (x1052 x1329))
(assert (= (ite (= x887 x931) x686 (x1217 x931)) (x922 x931)))
(assert (=> (>= 10000 x332) (= (x1106 x332) (x1585 x332))))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x510 (x1106 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (=> (<= x749 10000) (= (x1585 x749) (x1106 x749))))
(assert (= (x1064 x25) 0))
(assert (x1052 x1492))
(assert (= (ite (= x977 x718) x921 (x734 x977)) (x32 x977)))
(assert (= 0 (x1064 x473)))
(assert (= x1046 (x510 (x1585 x1046))))
(assert (x1052 x293))
(assert (x1052 x326))
(assert (=> (<= x1103 10000) (= (x1106 x1103) (x1585 x1103))))
(assert (x1052 x88))
(assert (=> (<= x963 10000) (= (x1106 x963) (x1585 x963))))
(assert (x478 x423))
(assert (= (x510 (x1585 x1463)) x1463))
(assert (=> (>= 10000 x1479) (= (x1585 x1479) (x1106 x1479))))
(assert (x1052 x909))
(assert (= x524 (=> (and (<= x429 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x482) (= (x799 x457) x429) (<= 0 x429) (= x457 (x351 (x1585 x482) x1021 0)) (= x204 (= 0 x429)) (= (x351 (x1585 x806) (x1106 6) 0) x1021)) (and (=> (and (not x204) (= x865 x806)) x1012) (=> (and (= (< 0 x700) x144) x204 (= (x1015 (- x806 1)) x700) (not x144)) x798)))))
(assert (x1052 x1479))
(assert (x478 x1297))
(assert (= (=> (and (= x1590 (= x155 0)) (or (and (= x450 0) x1590 (= 0 x1457)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x697) (= (x598 x1231) x697) (<= 0 x697) (= x891 (x1315 1461501637330902918203684832716283019655932542975 x217)) (= x744 (x1315 1461501637330902918203684832716283019655932542975 x215)) (= (x351 (x1585 x155) (x1106 9) 0) x1518) (= x450 1) (= x697 x1457) (= x1231 (x351 (x1585 x891) x92 0)) (= (x351 (x1585 x744) x1518 0) x92) (not x1590)))) x64) x641))
(assert (x1052 x19))
(assert (= x509 x855))
(assert (= (ite (= x931 x718) x921 (x734 x931)) (x32 x931)))
(assert (x1052 x1330))
(assert (x478 x183))
(assert (x478 x240))
(assert (x1052 x1089))
(assert (= (ite (= x473 x1375) x1118 (x922 x473)) (x1530 x473)))
(assert (x1052 x264))
(assert (= (=> (= x1308 0) x137) x1005))
(assert (=> (>= 10000 x551) (= (x1106 x551) (x1585 x551))))
(assert (= 2061678023 (x510 (x1106 2061678023))))
(assert (x1052 x746))
(assert (= (x442 x335) (ite (and x246 x855) (x336 x335) (x409 x335))))
(assert (x1052 x1059))
(assert (= (ite (= x233 x473) x454 (x113 x473)) (x1082 x473)))
(assert (=> (<= x327 10000) (= (x1585 x327) (x1106 x327))))
(assert (=> (>= 10000 x744) (= (x1585 x744) (x1106 x744))))
(assert (= (x510 (x1585 x1365)) x1365))
(assert (x1052 x46))
(assert (= (x510 (x1585 x372)) x372))
(assert (x1052 x1575))
(assert (=> (<= x74 10000) (= (x1106 x74) (x1585 x74))))
(assert (= (x442 x1165) (ite (and x246 x855) (x336 x1165) (x409 x1165))))
(assert (= (ite (= x464 x740) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x464)) (x1217 x464)))
(assert (x1052 x29))
(assert (x1052 x1489))
(assert (x478 x90))
(assert (= (x510 (x1585 x65)) x65))
(assert (= x1586 (x510 (x1585 x1586))))
(assert (x1052 x983))
(assert (= (x442 x473) (ite (and x855 x246) (x336 x473) (x409 x473))))
(assert (= 2211524764 (x510 (x1106 2211524764))))
(assert (x478 x372))
(assert (= (x174 x811) (ite (and x1440 x635 x619 x1164 (not x675) x392) (x656 x811) (ite (and (not x619) x1440 x1164 x635 x392) (x1530 x811) (ite (and x392 (not x1164) x635 x1440) (x922 x811) (ite (and (not x392) x635 x1440) (x1217 x811) (x1187 x811)))))))
(assert (x478 x963))
(assert (x1052 x238))
(assert (= x3 (=> (and (= x344 (< 0 x1327)) (= x1327 (x1015 (- x1366 1)))) (and (=> x344 x563) (=> (not x344) x458)))))
(assert (x1052 x1220))
(assert (x1052 x117))
(assert (x1052 x1133))
(assert (x1052 x1341))
(assert (x1052 x193))
(assert (x1052 x597))
(assert (= (ite (= x473 x887) x686 (x1217 x473)) (x922 x473)))
(assert (x1052 x47))
(assert (x478 x1586))
(assert (= x1022 (x510 (x1585 x1022))))
(assert (= (x1530 x931) (ite (= x1375 x931) x1118 (x922 x931))))
(assert (x1052 x429))
(assert (x1052 x742))
(assert (x1052 x1395))
(assert (= (x510 (x1585 x184)) x184))
(assert (= (and x652 x645) x112))
(assert (=> (>= 10000 x1041) (= (x1106 x1041) (x1585 x1041))))
(assert (x1052 x1333))
(assert (x1052 x324))
(assert (x1052 x1045))
(assert (x1052 x481))
(assert (=> (>= 10000 x1522) (= (x1585 x1522) (x1106 x1522))))
(assert (= (x1585 468353030) (x1106 468353030)))
(assert (x1052 x1063))
(assert (= x94 (x510 (x1585 x94))))
(assert (=> (<= x1551 10000) (= (x1106 x1551) (x1585 x1551))))
(assert (x478 x184))
(assert (= (x510 (x1585 x469)) x469))
(assert (x478 x1103))
(assert (=> (<= x1556 10000) (= (x1585 x1556) (x1106 x1556))))
(assert (= (x1217 x863) (ite (= x740 x863) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x863))))
(assert (x1052 x1308))
(assert (= (x1065 x1208) (ite (and x1196 x729) (x566 x1208) (x229 x1208))))
(assert (= (x336 x731) (ite (= x1413 x731) x1013 (x650 x731))))
(assert (= (x510 (x1585 x51)) x51))
(assert (=> (>= 10000 x595) (= (x1106 x595) (x1585 x595))))
(assert (x478 x708))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x510 (x1106 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= (x1310 x1285) (ite (= x1180 x1285) x367 (x32 x1285))))
(assert (= (x346 x766) (ite (= x766 x1030) x1487 (x109 x766))))
(assert (= (ite (= x718 x1512) x921 (x734 x1512)) (x32 x1512)))
(assert (= (ite (and x897 (not x1127) (not x1060) x375) (x1310 x1413) (ite (and (not x1060) (not x375) x897) (x32 x1413) (ite (and x1060 x897) (x32 x1413) (x1156 x1413)))) (x548 x1413)))
(assert (= x432 x790))
(assert (= (ite (and x246 x855) (x336 x884) (x409 x884)) (x442 x884)))
(assert (= (x1082 x1413) (ite (= x233 x1413) x454 (x113 x1413))))
(assert (x1052 x565))
(assert (x478 x1522))
(assert (x1052 x807))
(assert (x1052 x1390))
(assert (= 2960351575 (x510 (x1106 2960351575))))
(assert (= x1517 (and (not x898) x271)))
(assert (=> (<= x1035 10000) (= (x1585 x1035) (x1106 x1035))))
(assert (= (ite (= x476 x1375) x1118 (x922 x476)) (x1530 x476)))
(assert (x1052 x327))
(assert (= (x1585 2514000705) (x1106 2514000705)))
(assert (= x951 (x510 (x1585 x951))))
(assert (x1052 x1363))
(assert (x1052 x1365))
(assert (=> (<= x376 10000) (= (x1106 x376) (x1585 x376))))
(assert (=> (<= x482 10000) (= (x1585 x482) (x1106 x482))))
(assert (x1052 x278))
(assert (=> (>= 10000 x687) (= (x1106 x687) (x1585 x687))))
(assert (x478 x821))
(assert (= (x1260 x875) (ite (and x412 x1160) (x1473 x875) (ite (and (not x412) x197 x1160) (x1393 x875) (x1275 x875)))))
(assert (x478 x99))
(assert (x1052 x1506))
(assert (= (x548 x473) (ite (and x897 x375 (not x1060) (not x1127)) (x1310 x473) (ite (and (not x375) (not x1060) x897) (x32 x473) (ite (and x1060 x897) (x32 x473) (x1156 x473))))))
(assert (= 2690754053 (x510 (x1106 2690754053))))
(assert (= (x1064 x977) 0))
(assert (x1052 x129))
(assert (=> (<= x973 10000) (= (x1106 x973) (x1585 x973))))
(assert (x1052 x217))
(assert (= (ite (= x1208 x666) x52 (x178 x1208)) (x1557 x1208)))
(assert (= (ite (= x1512 x1036) x505 (x1530 x1512)) (x656 x1512)))
(assert (x1052 x744))
(assert (x1052 x844))
(assert (= x1520 (x510 (x1585 x1520))))
(assert (x1052 x1442))
(assert (= (or (and (not x681) x112) (and x1214 (not x1026)) (and x204 x508)) x1008))
(assert (x1052 x1472))
(assert (x1052 x1163))
(assert (x478 x1112))
(assert (=> (>= 10000 x1390) (= (x1106 x1390) (x1585 x1390))))
(assert (x1052 x496))
(assert (= x1191 (x510 (x1585 x1191))))
(assert (x478 x288))
(assert (= (x1310 x723) (ite (= x1180 x723) x367 (x32 x723))))
(assert (= (x442 x723) (ite (and x855 x246) (x336 x723) (x409 x723))))
(assert (x1052 x955))
(assert (x521 x1554 x279))
(assert (x1052 x471))
(assert (= x1434 (x510 (x1585 x1434))))
(assert (= 0 (x1064 x1180)))
(assert (x1052 x107))
(assert (=> (<= x1072 10000) (= (x1585 x1072) (x1106 x1072))))
(assert (= (x510 (x1585 x155)) x155))
(assert (= x1304 (x510 (x1585 x1304))))
(assert (x1052 x1126))
(assert (= (x1310 x476) (ite (= x1180 x476) x367 (x32 x476))))
(assert (= (x1580 x476) (ite (and x644 x75) (x1195 x476) (x816 x476))))
(assert (=> (>= 10000 x1322) (= (x1585 x1322) (x1106 x1322))))
(assert (= 1889567281 (x510 (x1106 1889567281))))
(assert (= (ite (= x1208 x233) x454 (x113 x1208)) (x1082 x1208)))
(assert (= x798 (=> (= x1035 0) x871)))
(assert (x478 x973))
(assert (= x749 (x510 (x1585 x749))))
(assert (= (x133 x476) (ite (= x550 x476) x1492 (x1082 x476))))
(assert (x1052 x577))
(assert (x478 x155))
(assert (x1052 x1250))
(assert (x1052 x1375))
(assert (x1052 x661))
(assert (= x1322 (x510 (x1585 x1322))))
(assert (= (x510 (x1585 x1529)) x1529))
(assert (x478 x643))
(assert (= x708 (x510 (x1585 x708))))
(assert (x1052 x856))
(assert (= x1574 (and x729 (not x1196))))
(assert (= (x663 x1285) (ite (= x1133 x1285) x724 (x1557 x1285))))
(assert (x1052 x767))
(assert (x1052 x1290))
(assert (x478 x1365))
(assert (x478 x180))
(assert (= (ite (and x246 x855) (x336 x464) (x409 x464)) (x442 x464)))
(assert (= (x1082 x359) (ite (= x359 x233) x454 (x113 x359))))
(assert (x1052 x985))
(assert (= (x510 (x1585 x1004)) x1004))
(assert (x1052 x1524))
(assert (x1052 x1319))
(assert (x1052 x679))
(assert (= x1522 (x510 (x1585 x1522))))
(assert (= x1546 x1110))
(assert (=> (>= 10000 x1330) (= (x1106 x1330) (x1585 x1330))))
(assert (= x1255 x1242))
(assert (x1052 x114))
(assert (x1052 x792))
(assert (x1052 x146))
(assert (x1052 x687))
(assert (x1052 x11))
(assert (= (ite (= x718 x476) x921 (x734 x476)) (x32 x476)))
(assert (x1052 x226))
(assert (= (x133 x731) (ite (= x731 x550) x1492 (x1082 x731))))
(assert (= x644 (and x635 x1440)))
(assert (=> (<= x654 10000) (= (x1106 x654) (x1585 x654))))
(assert (= (ite (= x718 x1413) x921 (x734 x1413)) (x32 x1413)))
(assert (= (x922 x1285) (ite (= x1285 x887) x686 (x1217 x1285))))
(assert (x1052 x335))
(assert (= (ite (= x718 x1285) x921 (x734 x1285)) (x32 x1285)))
(assert (=> (>= 10000 x516) (= (x1585 x516) (x1106 x516))))
(assert (x1052 x158))
(assert (x1052 x1023))
(assert (x1052 x1361))
(assert (x1052 x1071))
(assert (x478 x94))
(assert (= (x442 x704) (ite (and x246 x855) (x336 x704) (x409 x704))))
(assert (x1052 x813))
(assert (=> (>= 10000 x1460) (= (x1585 x1460) (x1106 x1460))))
(assert (= (x133 x335) (ite (= x335 x550) x1492 (x1082 x335))))
(assert (x478 x1322))
(assert (= (x32 x464) (ite (= x464 x718) x921 (x734 x464))))
(assert (= (x510 (x584 x76 1)) (+ 1 (x510 x76))))
(assert (x1052 x668))
(assert (x1052 x991))
(assert (x1052 x215))
(assert (= (x174 x704) (ite (and x619 (not x675) x1164 x635 x392 x1440) (x656 x704) (ite (and x635 x1440 (not x619) x1164 x392) (x1530 x704) (ite (and x392 x635 (not x1164) x1440) (x922 x704) (ite (and x635 x1440 (not x392)) (x1217 x704) (x1187 x704)))))))
(assert (x1052 x531))
(assert (= (x510 (x1585 x240)) x240))
(assert (= x1142 (=> (= x1308 x1145) x137)))
(assert (x1052 x1595))
(assert (= (ite (= x1030 x1388) x1487 (x109 x1388)) (x346 x1388)))
(assert (x1052 x646))
(assert (x1052 x1293))
(assert (= (ite (and x897 (not x1060) x375 (not x1127)) (x1310 x1208) (ite (and x897 (not x1060) (not x375)) (x32 x1208) (ite (and x897 x1060) (x32 x1208) (x1156 x1208)))) (x548 x1208)))
(assert (= x973 (x510 (x1585 x973))))
(assert (x1052 x1432))
(assert (= (ite (= x1375 x1208) x1118 (x922 x1208)) (x1530 x1208)))
(assert (= x880 (x510 (x1585 x880))))
(assert (= (ite (and x1440 x635 (not x818)) (x174 x476) (x444 x476)) (x1455 x476)))
(assert (= (ite (= x718 x704) x921 (x734 x704)) (x32 x704)))
(assert (= (ite (and x375 (not x1127) (not x1060) x897) (x346 x1388) (ite (and x897 (not x375) (not x1060)) (x109 x1388) (ite (and x1060 x897) (x109 x1388) (x222 x1388)))) (x1547 x1388)))
(assert (= (x1580 x335) (ite (and x75 x644) (x1195 x335) (x816 x335))))
(assert (x1052 x865))
(assert (x1052 x703))
(assert (= (x656 x476) (ite (= x1036 x476) x505 (x1530 x476))))
(assert (=> (<= x157 10000) (= (x1585 x157) (x1106 x157))))
(assert (= (x133 x863) (ite (= x863 x550) x1492 (x1082 x863))))
(assert (= 0 (x1064 x550)))
(assert (= (x32 x1180) (ite (= x1180 x718) x921 (x734 x1180))))
(assert (x1052 x307))
(assert (x1052 x435))
(assert (= x30 (=> (and (= x842 false) (>= x1477 0) (>= x272 0) (<= 0 x223) (<= x1020 1461501637330902918203684832716283019655932542975) x594 (>= 1461501637330902918203684832716283019655932542975 x852) (<= 0 x1506) (= x701 x1020) (<= 0 x1241) (= false x1069) (<= 0 x852) (<= x1506 1461501637330902918203684832716283019655932542975) (= x594 (> (x1083 (x1585 274184521717934524641157099916833587214)) 0)) x1568 (= x1568 (< 0 (x1083 (x1585 274184521717934524641157099916833587206)))) (= false x466) (= 5 x1274) (= x420 2939843472) (<= 0 x1020) (<= x1477 1461501637330902918203684832716283019655932542975) (= (x191 (x1585 274184521717934524641157099916833587218)) x272) (= false x1200) (= x223 (x191 (x1585 274184521717934524641157099916833587206))) (= x66 x1399) (= (x191 (x1585 274184521717934524641157099916833587214)) x1241) (= x1506 x184) (= x586 x1155) x1462 (= (< 0 (x1083 (x1585 274184521717934524641157099916833587218))) x1462) (>= x1155 0) (<= x1155 1461501637330902918203684832716283019655932542975)) x774)))
(assert (= (and x153 x607) x1347))
(assert (x1052 x464))
(assert (x1052 x850))
(assert (=> (<= x602 10000) (= (x1106 x602) (x1585 x602))))
(assert (=> (<= x65 10000) (= (x1106 x65) (x1585 x65))))
(assert (x1052 x1354))
(assert (x1052 x459))
(assert (x1052 x439))
(assert (= x607 x1160))
(assert (x1052 x1314))
(assert (x1052 x1258))
(assert (= x512 (x510 (x1585 x512))))
(assert (x1052 x1400))
(assert (= (=> (and (= (x1083 (x1585 274184521717934524641157099916833587206)) x815) (> x815 0) (<= x274 1461501637330902918203684832716283019655932542975) (not (= 2690754053 x1370)) (not (> 2293535753 x1370)) (not (< x1370 2690754053)) (> 2960351575 x1370) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x530) (= x530 x1328) (= x1370 2743102681) (<= x574 1461501637330902918203684832716283019655932542975) (<= 0 x530) (= (x351 (x1585 x274) x122 0) x1471) (= (x360 x1471) x530) (= (x351 (x1585 x1330) (x1106 3) 0) x685) (= x122 (x351 (x1585 x574) x685 0))) (=> (and (= x90 x66) (= x341 (<= x1319 x578)) (= x1319 x1328) (= x665 x1506)) x1474)) x1262))
(assert (x1052 x250))
(assert (= (x1585 2939843472) (x1106 2939843472)))
(assert (=> (<= x1575 10000) (= (x1106 x1575) (x1585 x1575))))
(assert (x1052 x1520))
(assert (=> (<= x817 10000) (= (x1106 x817) (x1585 x817))))
(assert (= (ite (= x1512 x1375) x1118 (x922 x1512)) (x1530 x1512)))
(assert (x478 x840))
(assert (= x1182 (=> (and (= (x351 (x1585 x1558) (x1106 6) 0) x1488) (= (x351 (x1585 x643) x1488 0) x1553) (= (= 0 x1470) x652) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x643) (= (x799 x1553) x1470) (<= x1470 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1470)) (and (=> (and (not x652) (= x1558 x865)) x1012) (=> x652 x582)))))
(assert (=> (<= x883 10000) (= (x1585 x883) (x1106 x883))))
(assert (x1052 x431))
(assert (x478 x512))
(assert (= (ite (= x1180 x731) x367 (x32 x731)) (x1310 x731)))
(assert (=> (>= 10000 x1022) (= (x1106 x1022) (x1585 x1022))))
(assert (= (x1310 x1512) (ite (= x1512 x1180) x367 (x32 x1512))))
(assert (=> (>= 10000 x183) (= (x1106 x183) (x1585 x183))))
(assert (x1052 x1178))
(assert (x1052 x883))
(assert (=> (>= 10000 x843) (= (x1106 x843) (x1585 x843))))
(assert (x1052 x1054))
(assert (= (x1082 x335) (ite (= x233 x335) x454 (x113 x335))))
(assert (= (=> (= x865 x1035) x871) x1012))
(assert (= (ite (and x75 x644) (x1195 x1512) (x816 x1512)) (x1580 x1512)))
(assert (= (=> (and (= x469 x66) (= x1506 x870)) x10) x1281))
(assert (x1052 x636))
(assert (= x840 (x510 (x1585 x840))))
(assert (= (x1082 x1512) (ite (= x233 x1512) x454 (x113 x1512))))
(assert (x1052 x778))
(assert (= (x510 (x1585 x1460)) x1460))
(assert (=> (>= 10000 x278) (= (x1106 x278) (x1585 x278))))
(assert (x1052 x722))
(assert (x478 x1046))
(assert (x1052 x1239))
(assert (= (ite (and x897 x649) (x913 x1107) (x1129 x1107)) (x799 x1107)))
(assert (x1052 x1027))
(assert (= 2835717307 (x510 (x1106 2835717307))))
(assert (x1052 x718))
(assert (x1052 x595))
(assert (= x712 (x510 (x1585 x712))))
(assert (=> (<= x1112 10000) (= (x1585 x1112) (x1106 x1112))))
(assert (x1052 x494))
(assert (= (ite (= x887 x704) x686 (x1217 x704)) (x922 x704)))
(assert (x1052 x1138))
(assert (x1052 x615))
(assert (x1052 x1040))
(assert (= (x510 (x1585 x438)) x438))
(assert (= x1318 x953))
(assert (x478 274184521717934524641157099916833587218))
(assert (= x332 (x510 (x1585 x332))))
(assert (= (x510 (x1106 826074471)) 826074471))
(assert (x1052 x227))
(assert (= x451 x874))
(assert (= (x346 x868) (ite (= x1030 x868) x1487 (x109 x868))))
(assert (x1052 x467))
(assert (x1052 x866))
(assert (x1052 x1321))
(assert (x1052 x1325))
(assert (= (x1217 x1512) (ite (= x1512 x740) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x1512))))
(assert (x1052 x583))
(assert (= (ite (and x644 x75) (x1195 x863) (x816 x863)) (x1580 x863)))
(assert (x1052 x91))
(assert (x478 x923))
(assert (= x460 (and x176 x1190)))
(assert (= (ite (and x287 (not x1357) x1408) (x529 x1208) (x415 x1208)) (x22 x1208)))
(assert (x1052 x94))
(assert (= (x510 (x1106 2798343961)) 2798343961))
(assert (= (x1310 x811) (ite (= x1180 x811) x367 (x32 x811))))
(assert (= (x1585 1889567281) (x1106 1889567281)))
(assert (x1052 x157))
(assert (= (ite (and x1196 x729) (x566 x811) (x229 x811)) (x1065 x811)))
(assert (=> (<= x1463 10000) (= (x1585 x1463) (x1106 x1463))))
(assert (= (x510 (x1585 x1294)) x1294))
(assert (x1052 x907))
(assert (= (x1585 274184521717934524641157099916833587214) (x1106 274184521717934524641157099916833587214)))
(assert (x478 x469))
(assert (x1052 x997))
(assert (x1052 x282))
(assert (x478 x11))
(assert (= (ite (= x974 x1388) x93 (x1547 x1388)) (x789 x1388)))
(assert (x285 x217))
(assert (x1052 x1001))
(assert (= (x510 (x1585 x691)) x691))
(assert (x478 x985))
(assert (x1052 x438))
(assert (= x914 (=> (and (= x1172 (x351 (x1585 x1524) x725 0)) (= (x206 x387) x1368) (= (= 0 x1368) x1351) (>= x1368 0) (= (x351 (x1585 x288) x1172 0) x387) (= x288 (x1315 1461501637330902918203684832716283019655932542975 x217)) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x1524) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1368) (= (x351 (x1585 x1258) (x1106 7) 0) x725)) (and (=> (and (not x1351) (= x1258 x492)) x416) (=> (and (not x796) (= x796 (< 0 x1148)) x1351 (= (x1015 (- x1258 1)) x1148)) x1418)))))
(assert (= (x1547 x6) (ite (and (not x1127) x375 (not x1060) x897) (x346 x6) (ite (and x897 (not x375) (not x1060)) (x109 x6) (ite (and x897 x1060) (x109 x6) (x222 x6))))))
(assert (= (x336 x1180) (ite (= x1413 x1180) x1013 (x650 x1180))))
(assert (= (ite (and x1408 (not x1357) x287) (x529 x811) (x415 x811)) (x22 x811)))
(assert (x478 x1340))
(assert (= (x1082 x464) (ite (= x464 x233) x454 (x113 x464))))
(assert (= x1125 x897))
(assert (x1052 x26))
(assert (= x381 (x510 (x1585 x381))))
(assert (= (or (and x488 (not x674)) (and (not x780) x771)) x212))
(assert (not x30))
(assert (= (x510 (x584 x1058 1)) (+ (x510 x1058) 1)))
(assert (= (ite (= x666 x1285) x52 (x178 x1285)) (x1557 x1285)))
(assert (x1052 x550))
(assert (x1052 x1232))
(assert (=> (<= x1327 10000) (= (x1585 x1327) (x1106 x1327))))
(assert (x1052 x1240))
(assert (x1052 x879))
(assert (x1052 x356))
(assert (x478 x381))
(assert (x1052 x1006))
(assert (x1052 x500))
(assert (x1052 x1091))
(assert (x1052 x352))
(assert (= (x510 (x1585 x687)) x687))
(assert (x478 x1191))
(assert (x478 x446))
(assert (x1052 x1430))
(assert (x478 x389))
(assert (x478 x924))
(assert (x478 x89))
(assert (x1052 x433))
(assert (= x1332 x56))
(assert (= (x510 (x1106 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= x1335 (or (and x176 (not x1190)) (and (not x1088) x148))))
(assert (= (ite (and (not x1127) (not x1060) x897 x375) (x1310 x811) (ite (and (not x375) (not x1060) x897) (x32 x811) (ite (and x1060 x897) (x32 x811) (x1156 x811)))) (x548 x811)))
(assert (= 2514000705 (x510 (x1106 2514000705))))
(assert (x1052 x936))
(assert (=> (>= 10000 x400) (= (x1106 x400) (x1585 x400))))
(assert (= (x510 (x1585 x480)) x480))
(assert (x1052 x1497))
(assert (= (x656 x931) (ite (= x1036 x931) x505 (x1530 x931))))
(assert (= (x510 (x1106 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x478 x668))
(assert (= x921 (x32 x718)))
(assert (x1052 x1581))
(assert (x1052 x820))
(assert (x1052 x55))
(assert (= (x1310 x1165) (ite (= x1165 x1180) x367 (x32 x1165))))
(assert (x1052 x1100))
(assert (x478 x29))
(assert (x478 x19))
(assert (= (x1217 x731) (ite (= x740 x731) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x731))))
(assert (x478 x274))
(assert (x1052 x399))
(assert (= (x789 x766) (ite (= x766 x974) x93 (x1547 x766))))
(assert (x1052 x1578))
(assert (= (ite (= x1285 x550) x1492 (x1082 x1285)) (x133 x1285)))
(assert (= (x510 (x1585 x935)) x935))
(assert (x1052 x518))
(assert (x1052 x1586))
(assert (= x1428 (and x235 x995)))
(assert (x1052 x610))
(assert (x1052 x723))
(assert (=> (<= x945 10000) (= (x1106 x945) (x1585 x945))))
(assert (= (x510 (x1106 1000000000000000000)) 1000000000000000000))
(assert (x1052 x1322))
(assert (x285 1461501637330902918203684832716283019655932542975))
(assert (= (x1106 142201243) (x1585 142201243)))
(assert (x478 x551))
(assert (=> (>= 10000 x547) (= (x1106 x547) (x1585 x547))))
(assert (= (ite (= x718 x1449) x921 (x734 x1449)) (x32 x1449)))
(assert (= (ite (= x704 x1413) x1013 (x650 x704)) (x336 x704)))
(assert (x1052 x1081))
(assert (=> (>= 10000 x708) (= (x1585 x708) (x1106 x708))))
(assert (=> (<= x929 10000) (= (x1106 x929) (x1585 x929))))
(assert (x1052 x1407))
(assert (x1052 x480))
(assert (= (ite (= x1285 x1375) x1118 (x922 x1285)) (x1530 x1285)))
(assert (= (x336 x268) (ite (= x268 x1413) x1013 (x650 x268))))
(assert (= (x133 x723) (ite (= x723 x550) x1492 (x1082 x723))))
(assert (= (ite (= x233 x1285) x454 (x113 x1285)) (x1082 x1285)))
(assert (= x1214 (and x762 x764)))
(assert (x1052 x1399))
(assert (= (ite (and (not x678) x393 x287 x911 x1408 x752) (x639 x811) (ite (and x911 x1408 (not x393) x287 x752) (x663 x811) (ite (and x752 x1408 x287 (not x911)) (x1557 x811) (ite (and x1408 x287 (not x752)) (x178 x811) (x1542 x811))))) (x529 x811)))
(assert (= x1479 (x510 (x1585 x1479))))
(assert (=> (>= 10000 x1363) (= (x1585 x1363) (x1106 x1363))))
(assert (x1052 x1439))
(assert (= x1439 (x510 (x1585 x1439))))
(assert (x1052 x516))
(assert (= (x510 (x1585 x1297)) x1297))
(assert (= (ite (and x855 x246) (x336 x977) (x409 x977)) (x442 x977)))
(assert (= (ite (= x1036 x1413) x505 (x1530 x1413)) (x656 x1413)))
(assert (=> (>= 10000 x202) (= (x1585 x202) (x1106 x202))))
(assert (x1052 x658))
(assert (= (x1455 x863) (ite (and x635 (not x818) x1440) (x174 x863) (x444 x863))))
(assert (x1052 x228))
(assert (=> (>= 10000 x414) (= (x1106 x414) (x1585 x414))))
(assert (= (x1106 2532887486) (x1585 2532887486)))
(assert (= (x510 (x1585 x1308)) x1308))
(assert (x1052 x298))
(assert (x1052 x25))
(assert (x1052 x943))
(assert (= (x1530 x25) (ite (= x25 x1375) x1118 (x922 x25))))
(assert (= (ite (= x1413 x884) x1013 (x650 x884)) (x336 x884)))
(assert (= (x656 x1208) (ite (= x1036 x1208) x505 (x1530 x1208))))
(assert (x478 x1329))
(assert (x1052 x660))
(assert (x1052 x1090))
(assert (= (=> (and (< x1466 2293535753) (<= x661 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1466 2061678023)) (<= x870 1461501637330902918203684832716283019655932542975) (> x1042 0) (>= x661 0) (not (= x1466 2211524764)) (not (= x1466 1968616202)) (= x661 (x1571 x269)) (= 2258409472 x1466) (= x269 (x351 (x1585 x870) x486 0)) (not (< x1466 911411945)) (= (x1083 (x1585 274184521717934524641157099916833587206)) x1042) (= x1170 x661) (= x486 (x351 (x1585 x469) (x1106 6) 0)) (not (= 1986467848 x1466)) (not (< x1466 1968616202))) (=> (and (= x852 x547) (= x1506 x355) (= x277 x1170) (= x741 x66)) x1541)) x10))
(assert (= (x336 x550) (ite (= x550 x1413) x1013 (x650 x550))))
(assert (= (x510 (x1585 x557)) x557))
(assert (x478 x139))
(assert (x1052 x1510))
(assert (= (x922 x1512) (ite (= x887 x1512) x686 (x1217 x1512))))
(assert (x1052 x1053))
(assert (= (ite (= x1208 x1508) x1538 (x663 x1208)) (x639 x1208)))
(assert (x1052 x18))
(assert (=> (>= 10000 x372) (= (x1585 x372) (x1106 x372))))
(assert (x1052 x424))
(assert (=> (<= x240 10000) (= (x1585 x240) (x1106 x240))))
(assert (x478 x654))
(assert (= (x1217 x473) (ite (= x473 x740) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x473))))
(assert (= (x510 (x1585 x945)) x945))
(assert (x478 x804))
(assert (x478 x107))
(assert (x478 x496))
(assert (x1052 x537))
(assert (x1052 x490))
(assert (= x293 (x510 (x1585 x293))))
(assert (=> (<= x1258 10000) (= (x1106 x1258) (x1585 x1258))))
(assert (= (ite (and x1440 x635 x1164 x619 x392 (not x675)) (x656 x863) (ite (and x392 x1440 (not x619) x1164 x635) (x1530 x863) (ite (and x1440 (not x1164) x635 x392) (x922 x863) (ite (and x635 (not x392) x1440) (x1217 x863) (x1187 x863))))) (x174 x863)))
(assert (x1052 x310))
(assert (x1052 x761))
(assert (= x256 (x510 (x1585 x256))))
(assert (= (x1585 2798343961) (x1106 2798343961)))
(assert (x478 x1137))
(assert (= x414 (x510 (x1585 x414))))
(assert (= (ite (= x1413 x476) x1013 (x650 x476)) (x336 x476)))
(assert (x478 x1463))
(assert (x1052 x1320))
(assert (= (=> (and (= x434 (x1083 (x1585 274184521717934524641157099916833587206))) (= x1062 (x351 (x1585 x202) x651 0)) (= x543 (x190 x6)) (not (= 2293535753 x45)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x543) (>= 1461501637330902918203684832716283019655932542975 x1304) (not (= 2418364589 x45)) (< x45 2690754053) (> 2960351575 x45) (<= x202 1461501637330902918203684832716283019655932542975) (>= x543 0) (= x1514 (x351 (x1585 x1304) x1062 0)) (= x543 x756) (not (= x45 2512682246)) (>= 1461501637330902918203684832716283019655932542975 x164) (> x434 0) (= (x351 (x1585 x293) (x1106 4) 0) x651) (= x45 2532887486) (= x6 (x351 (x1585 x164) x1514 0)) (not (< x45 2293535753))) x8) x1383))
(assert (= (x1585 69947311) (x1106 69947311)))
(assert (= x23 (x510 (x1585 x23))))
(assert (x1052 x1317))
(assert (=> (<= x541 10000) (= (x1106 x541) (x1585 x541))))
(assert (x1052 x1124))
(assert (= x274 (x510 (x1585 x274))))
(assert (x1052 x963))
(assert (= (x510 (x1585 x494)) x494))
(assert (x1052 x1014))
(assert (x1052 x1569))
(assert (= x976 (=> (and (>= x981 0) (<= x981 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x1294) (>= x193 0) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x1137) (= (x1260 x366) x193) (<= x193 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x351 (x1585 x1558) (x1106 7) 0) x1264) (not (> x1558 x981)) (= x1158 (> x193 0)) (= x1540 (x351 (x1585 x1137) x1264 0)) (= x366 (x351 (x1585 x1294) x1540 0))) (and (=> (not x1158) x1128) (=> (and (= x386 (x351 (x1585 x687) x942 0)) (= x687 (x1315 1461501637330902918203684832716283019655932542975 x215)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1404) (>= x1404 0) (= x1479 (x1315 1461501637330902918203684832716283019655932542975 x217)) (= (x351 (x1585 x1479) x386 0) x779) x1158 (= x942 (x351 (x1585 x1558) (x1106 9) 0)) (= (x291 x779) x1404) (= x1404 x1537) (= x199 0)) x1299)))))
(assert (= x358 (x510 (x1585 x358))))
(assert (x1052 x781))
(assert (x478 x1004))
(assert (= (x336 x931) (ite (= x1413 x931) x1013 (x650 x931))))
(assert (x1052 x800))
(assert (= x563 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x481) (= (= 0 x481) x780) (= (x1369 x126) x481) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x357) (>= x481 0) (= x126 (x351 (x1585 x357) x1316 0)) (= (x351 (x1585 x1327) (x1106 6) 0) x1316)) (and (=> (and (= (x1015 (- x1327 1)) x1126) (not x962) (= (> x1126 0) x962) x780) x458) (=> (and (= x949 x1327) (not x780)) x60)))))
(assert (x478 x1245))
(assert (x1052 x696))
(assert (x1052 x1035))
(assert (x1052 x1243))
(assert (= (x510 (x1585 x1499)) x1499))
(assert (x1052 x1282))
(assert (x1052 x768))
(assert (x1052 x1463))
(assert (= x210 (=> (and (= x394 (x351 (x1585 x1558) (x1106 6) 0)) (= x762 (= 0 x694)) (= x1107 (x351 (x1585 x120) x394 0)) (<= 0 x694) (>= x981 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x981) (not (< x981 x1558)) (= x120 (x1315 1461501637330902918203684832716283019655932542975 x215)) (<= x694 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x799 x1107) x694)) (and (=> x762 x421) (=> (and (<= 0 x1139) (= x1139 (x1385 x507)) (<= x1139 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1139 x1209) (= (x351 (x1585 x1558) (x1106 10) 0) x1397) (= x507 (x351 (x1585 x1356) x1397 0)) (= x401 0) (= x1356 (x1315 1461501637330902918203684832716283019655932542975 x215)) (not x762)) x1201)))))
(assert (x1052 x965))
(assert (x1052 x66))
(assert (x478 x256))
(assert (=> (>= 10000 x1303) (= (x1106 x1303) (x1585 x1303))))
(assert (x1052 x1147))
(assert (x1052 x365))
(assert (= (x174 x335) (ite (and x1164 x1440 (not x675) x392 x619 x635) (x656 x335) (ite (and x1164 x635 x1440 x392 (not x619)) (x1530 x335) (ite (and x635 x392 x1440 (not x1164)) (x922 x335) (ite (and x635 (not x392) x1440) (x1217 x335) (x1187 x335)))))))
(assert (= (x510 (x1585 x843)) x843))
(assert (= (x1106 2743102681) (x1585 2743102681)))
(assert (= (x510 (x1585 x376)) x376))
(assert (x1052 x1552))
(assert (= x1013 (x336 x1413)))
(assert (x1052 x1415))
(assert (x1052 x1467))
(assert (= (ite (= x740 x704) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x704)) (x1217 x704)))
(assert (= (ite (= x811 x718) x921 (x734 x811)) (x32 x811)))
(assert (x1052 x93))
(assert (x478 x951))
(assert (x1052 x127))
(assert (=> (<= x951 10000) (= (x1106 x951) (x1585 x951))))
(assert (=> (<= x1499 10000) (= (x1106 x1499) (x1585 x1499))))
(assert (= (x510 (x1585 x1390)) x1390))
(assert (x285 x125))
(assert (= (x510 (x1585 x1504)) x1504))
(assert (=> (>= 10000 x391) (= (x1585 x391) (x1106 x391))))
(assert (x1052 x926))
(assert (= (x1260 x952) (ite (and x1160 x412) (x1473 x952) (ite (and x197 (not x412) x1160) (x1393 x952) (x1275 x952)))))
(assert (x1052 x476))
(assert (x1052 x1522))
(assert (=> (>= 10000 x826) (= (x1585 x826) (x1106 x826))))
(assert (= (ite (= x25 x1180) x367 (x32 x25)) (x1310 x25)))
(assert (x478 x1204))
(assert (x1052 x961))
(assert (= (x510 (x1585 x1399)) x1399))
(assert (x1052 x994))
(assert (x1052 x984))
(assert (x1052 x456))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x1575) (= x333 (x351 (x1585 x1575) x1298 0)) (= 2532887486 x1147) (< x1147 2690754053) (<= x1340 1461501637330902918203684832716283019655932542975) (> x853 0) (= x807 (x190 x1388)) (= x1298 (x351 (x1585 x919) (x1106 4) 0)) (not (= x1147 2512682246)) (not (< x1147 2293535753)) (<= x807 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1388 (x351 (x1585 x1340) x534 0)) (not (= 2418364589 x1147)) (not (= x1147 2293535753)) (< x1147 2960351575) (= x853 (x1083 (x1585 274184521717934524641157099916833587206))) (= x807 x1454) (<= 0 x807) (= (x351 (x1585 x1263) x333 0) x534) (>= 1461501637330902918203684832716283019655932542975 x1263)) x632) x1563))
(assert (x1052 x331))
(assert (x1052 x241))
(assert (= (x510 (x1585 x241)) x241))
(assert (x478 x541))
(assert (x1052 x642))
(assert (=> (>= 10000 x423) (= (x1585 x423) (x1106 x423))))
(assert (x1052 x1117))
(assert (= x654 (x510 (x1585 x654))))
(assert (x478 x72))
(assert (= 2939843472 (x510 (x1106 2939843472))))
(assert (x1052 x1291))
(assert (x1052 x605))
(assert (x1052 x611))
(assert (= (x1355 x1527) (ite (and x649 x897) (x1360 x1527) (x673 x1527))))
(assert (= (x336 x723) (ite (= x1413 x723) x1013 (x650 x723))))
(assert (= 649617121 (x510 (x1106 649617121))))
(assert (=> (>= 10000 x1308) (= (x1585 x1308) (x1106 x1308))))
(assert (= (x799 x1553) (ite (and x897 x649) (x913 x1553) (x1129 x1553))))
(assert (= x1597 (x510 (x1585 x1597))))
(assert (x478 x1072))
(assert (x478 x51))
(assert (x1052 x1554))
(assert (= (x510 (x1585 x389)) x389))
(assert (x1052 x1519))
(assert (= (x346 x6) (ite (= x6 x1030) x1487 (x109 x6))))
(assert (x1052 x1193))
(assert (= (x854 x1471) (ite (and x1160 x412) (x910 x1471) (ite (and x1160 x197 (not x412)) (x910 x1471) (x773 x1471)))))
(assert (= (ite (= x1133 x1208) x724 (x1557 x1208)) (x663 x1208)))
(assert (x1052 x63))
(assert (= x391 (x510 (x1585 x391))))
(assert (= 2743102681 (x510 (x1106 2743102681))))
(assert (= x90 (x510 (x1585 x90))))
(assert (= x120 (x510 (x1585 x120))))
(assert (x1052 x1368))
(assert (x478 x595))
(assert (= (=> (and (= (x206 x1342) x1472) (> 2293535753 x1444) (= x1237 (x351 (x1585 x654) x1576 0)) (= x1444 759532456) (= (x351 (x1585 x551) x1237 0) x1342) (<= x1472 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1083 (x1585 274184521717934524641157099916833587206)) x441) (not (> 468353030 x1444)) (< x1444 911411945) (= x1576 (x351 (x1585 x29) (x1106 7) 0)) (>= x1472 0) (<= x551 1461501637330902918203684832716283019655932542975) (not (= 468353030 x1444)) (= x1472 x1059) (< 0 x441) (not (= 635128645 x1444)) (<= x654 1461501637330902918203684832716283019655932542975)) (=> (and (= (>= x564 x1063) x201) (= x66 x777) (= x564 x1059) x201 (= x1506 x926)) x785)) x292))
(assert (x1052 x1508))
(assert (= (ite (= x1375 x464) x1118 (x922 x464)) (x1530 x464)))
(assert (x478 x376))
(assert (x1052 x705))
(assert (x1052 x1029))
(assert (x1052 x666))
(assert (= (x510 (x1585 x833)) x833))
(assert (x1052 x1247))
(assert (= (ite (= x1512 x550) x1492 (x1082 x1512)) (x133 x1512)))
(assert (= (x1585 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x1106 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x1052 x890))
(assert (= (=> (and (= x696 (x1283 (x1585 x826))) (= x485 (x318 (x1585 274184521717934524641157099916833587206))) (= (<= 0 x26) x810) (= x195 (< (x1283 (x1585 x826)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< x55 115792089237316195423570985008687907853269984665640564039457584007913129639936) x506) (= x26 (x318 (x1585 274184521717934524641157099916833587206))) (= (x318 (x1585 x826)) x55) x810 x506 x195 (= x1552 x49) (= x1196 (= 274184521717934524641157099916833587218 x826))) (and (=> (not x1196) x106) (=> (and (= x1465 x1525) (= x49 x610) (= (x1083 (x1585 274184521717934524641157099916833587218)) x1422) (= x1154 (< x431 x1465)) (> x1422 0) (= (x351 (x1585 274184521717934524641157099916833587206) (x1106 1) 0) x130) (= x753 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x33 x130) x431) (<= x431 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (or (> x549 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x549 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x549))) x398) (= (x351 (x1585 x973) (x1106 1) 0) x1420) (= x997 (x1015 (- x431 x310))) (= x1146 1) (not (= x1122 826074471)) (= (+ x83 x1525) x955) (= x1465 x310) (not x1301) (not x1154) (= (x351 (x1585 274184521717934524641157099916833587206) (x1106 1) 0) x1447) (<= 0 x431) (= x610 68) (not x398) (not (= x1122 1889567281)) (= x1496 (x1450 x1420)) (= x754 x1502) (= x83 x1496) (<= 0 x1496) (not x1114) (= x1467 x973) (= 274184521717934524641157099916833587206 x228) x1196 (not (> 4 x610)) (= x973 x259) (not (= x1122 649617121)) (= x549 (x1015 (- x610 4))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1496) (= x1301 (> x310 x431)) (<= x973 1461501637330902918203684832716283019655932542975) (= x1122 2835717307) (= x940 x310) (not (= x1122 2514000705)) (= x1114 (>= (+ x1465 x1496) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x720 274184521717934524641157099916833587206) (not (< x1122 649617121)) (< (+ x1465 x1496) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x490 32)) x1494))) x465))
(assert (x1052 x1041))
(assert (= (x1217 x1208) (ite (= x740 x1208) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x1208))))
(assert (= (x1585 1968616202) (x1106 1968616202)))
(assert (x1052 x964))
(assert (= (ite (and x855 x246) (x336 x1512) (x409 x1512)) (x442 x1512)))
(assert (x478 x777))
(assert (x1052 x899))
(assert (x1052 x1137))
(assert (=> (>= 10000 x985) (= (x1106 x985) (x1585 x985))))
(assert (x1052 x1529))
(assert (= (x1082 x884) (ite (= x884 x233) x454 (x113 x884))))
(assert (x1052 x887))
(assert (x1052 x1370))
(assert (x478 x516))
(assert (x478 x1263))
(assert (x1052 x1085))
(assert (= (x510 (x1585 x183)) x183))
(assert (x478 x531))
(assert (x1052 x173))
(assert (= (x1580 x1208) (ite (and x75 x644) (x1195 x1208) (x816 x1208))))
(assert (x521 x215 x100))
(assert (= (=> (= (< 0 x1558) x1026) (and (=> x1026 x1182) (=> (not x1026) x798))) x421))
(assert (= (ite (and x246 x855) (x336 x931) (x409 x931)) (x442 x931)))
(assert (= (x178 x476) (ite (= x476 x383) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1371 x476))))
(assert (= (x336 x1512) (ite (= x1413 x1512) x1013 (x650 x1512))))
(assert (x1052 x1076))
(assert (= x926 (x510 (x1585 x926))))
(assert (= (x656 x863) (ite (= x863 x1036) x505 (x1530 x863))))
(assert (= (x1106 2868243304) (x1585 2868243304)))
(assert (= (x1310 x464) (ite (= x464 x1180) x367 (x32 x464))))
(assert (= (ite (and x392 x1164 x1440 (not x675) x619 x635) (x656 x931) (ite (and x1440 x1164 x392 (not x619) x635) (x1530 x931) (ite (and (not x1164) x635 x392 x1440) (x922 x931) (ite (and x635 x1440 (not x392)) (x1217 x931) (x1187 x931))))) (x174 x931)))
(assert (x478 x120))
(assert (= (x510 (x1585 x1245)) x1245))
(assert (= (ite (= x550 x1208) x1492 (x1082 x1208)) (x133 x1208)))
(assert (= (x922 x25) (ite (= x25 x887) x686 (x1217 x25))))
(assert (x1052 x258))
(assert (x1052 x99))
(assert (= x1401 x667))
(assert (= (ite (= x811 x1375) x1118 (x922 x811)) (x1530 x811)))
(assert (x1052 x1145))
(assert (= (x1064 224) 0))
(assert (=> (>= 10000 x691) (= (x1106 x691) (x1585 x691))))
(assert (x1052 x1551))
(assert (= (and x509 (not x581)) x428))
(assert (x478 x1520))
(assert (x1052 x833))
(assert (x1052 x74))
(assert (x1052 x654))
(assert (= (x510 (x1585 x72)) x72))
(assert (=> (<= x389 10000) (= (x1585 x389) (x1106 x389))))
(assert (=> (>= 10000 x926) (= (x1585 x926) (x1106 x926))))
(assert (x478 274184521717934524641157099916833587214))
(assert (= x89 (x510 (x1585 x89))))
(assert (x1052 x1421))
(assert (x1052 x1263))
(assert (= x137 (=> (and (or (and (= 0 x199) (= 0 x1537) x1031) (and (not x1031) (= x1419 (x351 (x1585 x1308) (x1106 9) 0)) (= (x351 (x1585 x245) x1481 0) x452) (>= x552 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x552) (= (x291 x452) x552) (= x245 (x1315 1461501637330902918203684832716283019655932542975 x217)) (= x552 x1537) (= 1 x199) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x381) (= x1481 (x351 (x1585 x381) x1419 0)))) (= x1031 (= x1308 0))) x1299)))
(assert (x1052 x381))
(assert (=> (>= 10000 x155) (= (x1585 x155) (x1106 x155))))
(assert (= x985 (x510 (x1585 x985))))
(assert (=> (>= 10000 x919) (= (x1106 x919) (x1585 x919))))
(assert (x1052 x1526))
(assert (x1052 x513))
(assert (x1052 x449))
(assert (x1052 x89))
(assert (x1052 x1384))
(assert (x1052 x895))
(assert (= x15 (=> (and (= x408 (= 0 x139)) (or (and (= (x351 (x1585 x1282) x1149 0) x340) (>= x1442 0) (<= x1442 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1442 (x354 x340)) (= (= 0 x1442) x851) (not x408) (= x1282 (x1315 1461501637330902918203684832716283019655932542975 x215)) (or (and (= x447 0) x851 (= 0 x390)) (and (not x851) (= 1 x447) (= x1442 x390))) (= (x351 (x1585 x139) (x1106 10) 0) x1149)) (and (= 0 x390) x408 (= 0 x447)))) x1583)))
(assert (=> (>= 10000 x531) (= (x1106 x531) (x1585 x531))))
(assert (= x1035 (x510 (x1585 x1035))))
(assert (x478 x23))
(assert (= x1007 x1255))
(assert (= (=> (and (= x662 (= x1193 0)) (= (< 0 x160) x308) (= x621 (x1135 (x1585 x250))) x1099 (= (x1168 (x1585 274184521717934524641157099916833587206)) x497) (= x160 (x523 x1512)) (or (and (= (ite x1425 1 0) x1498) (= x203 x1498) (> x203 0) (= (= 0 x203) x132) (= x1425 (not x132)) x308 (= (x1010 (+ x1512 32)) x335) (= (x523 x335) x203) (= (x523 x1512) x895) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x895) (and (= (<= x895 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x895))))) (not x308)) (or (and (= x147 x1512) (not x662) (= x1027 (x1010 (+ 96 x844))) (= x1287 (x1315 115792089237316195423570985008687907853269984665640564039457584007913129639904 x660)) (= x252 x978) (= (x1010 (+ x147 x1287)) x252) (= x660 (x1010 (+ 63 x1193)))) (and (= x1512 96) x662 (= x978 x147))) (= x1099 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1168 (x1585 274184521717934524641157099916833587206)))) (not (= x730 0))) x1350) x860))
(assert (= (=> (and (<= 0 x1290) (not (= x1317 2061678023)) (> x373 0) (= x528 (x351 (x1585 x777) (x1106 6) 0)) (= (x1369 x982) x1290) (not (= 2211524764 x1317)) (<= x1290 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1317 1986467848)) (not (> 911411945 x1317)) (= x982 (x351 (x1585 x926) x528 0)) (<= x926 1461501637330902918203684832716283019655932542975) (not (= 1968616202 x1317)) (= x1317 2258409472) (= x1290 x163) (not (< x1317 1968616202)) (> 2293535753 x1317) (= (x1083 (x1585 274184521717934524641157099916833587206)) x373)) (=> (and x1516 (= (not (= x321 0)) x1516) (= x389 x1506) (= x256 x66) (= x163 x321) (= 0 x1320)) x527)) x785))
(assert (x1052 x1556))
(assert (x1052 x1561))
(assert (x1052 x1144))
(assert (x1052 x179))
(assert (x1052 x1297))
(assert (x1052 x1294))
(assert (= (x1455 x1413) (ite (and x1440 (not x818) x635) (x174 x1413) (x444 x1413))))
(assert (x1052 x1434))
(assert (= (x548 x731) (ite (and x375 (not x1127) x897 (not x1060)) (x1310 x731) (ite (and (not x375) x897 (not x1060)) (x32 x731) (ite (and x897 x1060) (x32 x731) (x1156 x731))))))
(assert (=> (>= 10000 x90) (= (x1106 x90) (x1585 x90))))
(assert (= (x442 x863) (ite (and x246 x855) (x336 x863) (x409 x863))))
(assert (x1052 x358))
(assert (= (ite (and x412 x1160) (x910 x1491) (ite (and x197 (not x412) x1160) (x910 x1491) (x773 x1491))) (x854 x1491)))
(assert (x478 x1575))
(assert (= (ite (= x704 x233) x454 (x113 x704)) (x1082 x704)))
(assert (= (x510 (x1106 1968616202)) 1968616202))
(assert (=> (<= x891 10000) (= (x1106 x891) (x1585 x891))))
(assert (=> (<= x901 10000) (= (x1106 x901) (x1585 x901))))
(assert (x1052 x180))
(assert (= x451 x232))
(assert (=> (>= 10000 x1366) (= (x1585 x1366) (x1106 x1366))))
(assert (= (x1106 2835717307) (x1585 2835717307)))
(assert (x1052 x12))
(assert (=> (<= x381 10000) (= (x1106 x381) (x1585 x381))))
(assert (x478 x788))
(assert (= x1348 (or x1008 x207)))
(assert (= (ite (and x644 x75) (x1195 x811) (x816 x811)) (x1580 x811)))
(assert (=> (>= 10000 x258) (= (x1585 x258) (x1106 x258))))
(assert (x1052 x627))
(assert (x478 x355))
(assert (= (x510 (x1106 18446744073709551615)) 18446744073709551615))
(assert (x478 x833))
(assert (x1052 x7))
(assert (= (x656 x473) (ite (= x473 x1036) x505 (x1530 x473))))
(assert (= (x789 x1345) (ite (= x974 x1345) x93 (x1547 x1345))))
(assert (x1052 x1499))
(assert (x1052 x62))
(assert (x1052 x1223))
(assert (x478 x891))
(assert (= (x1106 2764855426) (x1585 2764855426)))
(assert (= (x510 (x1585 x1483)) x1483))
(assert (x1052 x694))
(assert (= (x548 x1512) (ite (and (not x1127) x375 (not x1060) x897) (x1310 x1512) (ite (and (not x1060) x897 (not x375)) (x32 x1512) (ite (and x897 x1060) (x32 x1512) (x1156 x1512))))))
(assert (= x643 (x510 (x1585 x643))))
(assert (x478 x741))
(assert (= x541 (x510 (x1585 x541))))
(assert (x1052 x601))
(assert (x478 x1294))
(assert (x1052 x160))
(assert (x285 x591))
(assert (= (or x1109 x211) x1570))
(assert (x1052 x402))
(assert (x1052 x347))
(assert (= (x510 (x1585 x278)) x278))
(assert (x478 x357))
(assert (x1052 x1493))
(assert (x1052 x125))
(assert (= x924 (x510 (x1585 x924))))
(assert (x1052 x804))
(assert (x1052 x50))
(assert (=> (<= x274 10000) (= (x1106 x274) (x1585 x274))))
(assert (x1052 x622))
(assert (x1052 x1389))
(assert (x1052 x373))
(assert (x1052 x1396))
(assert (x1052 x624))
(assert (= (=> (and (= (x351 (x1585 x343) x1084 0) x80) (< x103 911411945) (<= x1463 1461501637330902918203684832716283019655932542975) (<= x91 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 142201243 x103) (not (= x103 69947311)) (<= 0 x91) (= x1084 (x351 (x1585 x821) (x1106 9) 0)) (>= 1461501637330902918203684832716283019655932542975 x343) (< x103 468353030) (= x841 (x351 (x1585 x1463) x80 0)) (not (= x103 87118632)) (= x402 x91) (< x103 2293535753) (= x91 (x598 x841)) (= x1443 (x1083 (x1585 274184521717934524641157099916833587206))) (> x1443 0)) (=> (and (= (and x1305 x1559) x1227) (= x402 x489) (= x1559 (>= x1276 x489)) (= x66 x691) (= x1506 x414) (= x852 x1504)) x1270)) x498))
(assert (= (x510 (x1585 x1178)) x1178))
(assert (x1052 x590))
(assert (x478 x1493))
(assert (= (or x1570 (and x303 x428)) x1160))
(assert (= x1332 x953))
(assert (x1052 x1118))
(assert (x478 x1439))
(assert (x1052 x1167))
(assert (x1052 x1443))
(assert (x478 x806))
(assert (=> (<= x1240 10000) (= (x1106 x1240) (x1585 x1240))))
(assert (x1052 x1444))
(assert (x1052 x1191))
(assert (x1052 x1309))
(assert (x1052 x826))
(assert (= (x510 (x1585 x1282)) x1282))
(assert (x1052 x1582))
(assert (x478 x883))
(assert (x478 x7))
(assert (=> (>= 10000 x180) (= (x1585 x180) (x1106 x180))))
(assert (= x1109 (or (and (not x235) x995) (and x175 (not x1351)))))
(assert (= (x1064 x464) 0))
(assert (=> (>= 10000 x19) (= (x1585 x19) (x1106 x19))))
(assert (x478 x250))
(assert (x1052 x821))
(assert (= 911411945 (x510 (x1106 911411945))))
(assert (x1052 x770))
(assert (= (and x488 x674) x896))
(assert (=> (<= x627 10000) (= (x1585 x627) (x1106 x627))))
(assert (x1052 x558))
(assert (x1052 x477))
(assert (= (x1064 x1285) 0))
(assert (x1052 x1285))
(assert (x1052 x263))
(assert (x1052 x97))
(assert (x1052 x208))
(assert (x478 x1390))
(assert (= x551 (x510 (x1585 x551))))
(assert (x1052 x1537))
(assert (=> (>= 10000 x355) (= (x1106 x355) (x1585 x355))))
(assert (= x1128 (=> (= (< 0 x1558) x1596) (and (=> (not x1596) x1005) (=> x1596 x713)))))
(assert (x1052 x902))
(assert (= (=> (and (<= x1078 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x882 x62) x1229) (= x921 (x236 x284)) (= x1499 (x1315 1461501637330902918203684832716283019655932542975 x215)) (or (and (= x1439 (x1315 1461501637330902918203684832716283019655932542975 x215)) (= (x351 (x1585 x1439) x1002 0) x849) x649 (= (x351 (x1585 x1366) (x1106 6) 0) x1002)) (and (= x1293 x1452) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x390 x309)) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x332) (not x649) (= x833 (x1315 1461501637330902918203684832716283019655932542975 x215)) (= x1092 (x351 (x1585 x1366) (x1106 6) 0)) (= x1452 (* x390 x309)) (= x793 (x351 (x1585 x1366) (x1106 5) 0)) (= x1111 (x351 (x1585 x833) x793 0)) (= x1461 (x351 (x1585 x332) x1092 0)))) (= x361 (x1355 x1593)) (= (x102 x1058) x1411) (<= 0 x921) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x62) (or x1060 (and (= (< 0 x1013) x375) (or (not x375) (and (= x1078 x1067) (= x1252 (* x683 x1543)) (= x1487 (+ x1186 x1067)) (= x546 (x351 (x1585 x1079) x1003 0)) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x94) (= (x1219 x1336) x1079) (= x1186 x1167) (= (x351 (x1585 x1434) x892 0) x1030) (= (div x1252 1000000000000000000) x299) (> x198 0) (= x709 (x351 (x1585 x1322) x1433 0)) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x1105) (>= 1461501637330902918203684832716283019655932542975 x1079) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x646) (= (x109 x1030) x1167) (<= 0 x683) (= x475 (x351 (x1585 x1204) x244 0)) (= x646 0) (= x615 x787) (= x683 (x270 x546)) (= x248 (x351 (x1585 x1366) (x1106 11) 0)) (= x156 (x351 (x1585 x1105) x475 0)) (or (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x350 x1543)) (= x1533 (x351 (x1585 x924) x1349 0)) (= x886 (x351 (x1585 x1141) x338 0)) (>= x350 0) (= (x351 (x1585 x65) x1 0) x338) (= x1056 (div x1206 1000000000000000000)) (= (x351 (x1585 x880) x320 0) x540) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1056 x1097)) (= x1295 (x351 (x1585 x216) x1533 0)) (<= x216 1461501637330902918203684832716283019655932542975) (= x1 (x351 (x1585 x1366) (x1106 11) 0)) (<= 0 x909) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x935) (< 1 x1013) (<= x909 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x998 x625) (= 0 x909) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1078 x625)) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x65) (= x319 (> x1013 2)) (= x320 (x351 (x1585 x1366) (x1106 4) 0)) (= x868 (x351 (x1585 x400) x589 0)) (= x1056 x302) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x924) (= x216 (x1219 x984)) (= x400 (x1219 x984)) (< 1 x1416) (= (x1010 (+ 192 x1395)) x268) (= x1584 (x351 (x1585 x1366) (x1106 4) 0)) (= x589 (x351 (x1585 x935) x540 0)) (= x984 (x1010 (+ x1018 64))) x1127 (= x1097 x562) (<= 0 x625) (= (x1310 x268) x1097) (>= 1461501637330902918203684832716283019655932542975 x400) (= x880 (x1315 1461501637330902918203684832716283019655932542975 x215)) (> x1013 1) (= x760 x1078) (= (x346 x868) x909) (= x625 (x346 x1295)) (= (+ x562 x302) x928) (= x971 (x1315 1461501637330902918203684832716283019655932542975 x215)) (= x706 (+ x998 x760)) (< 1 x1013) (not x319) (= (x351 (x1585 x971) x1584 0) x1349) (= x1416 (x1310 x1413)) (= (x1219 x984) x1141) (= (* x350 x1543) x1206) (<= x350 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1141) (= (x270 x886) x350) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)) (not x1127)) (= x244 (x351 (x1585 x1366) (x1106 4) 0)) (= x1003 (x351 (x1585 x94) x248 0)) (= x1291 x1336) (<= x494 1461501637330902918203684832716283019655932542975) (= x1433 (x351 (x1585 x1366) (x1106 4) 0)) (= (x109 x1174) x646) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x1112) (= x198 (x32 x1413)) (= x1174 (x351 (x1585 x494) x156 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1167 x1078)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1543 x683)) (= (x1219 x1336) x494) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1167) (= x615 (x32 x1180)) (= x892 (x351 (x1585 x1112) x709 0)) (= x1180 (x1010 (+ x1395 160))) (> x1013 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x299 x615)) (>= x646 0) (< 0 x1013) (< 0 x1013) (<= x1434 1461501637330902918203684832716283019655932542975) (= x225 x299) (= x1322 (x1315 1461501637330902918203684832716283019655932542975 x215)) (= (x1219 x1336) x1434) x375 (= (< 1 x1013) x1127) (= x1204 (x1315 1461501637330902918203684832716283019655932542975 x215)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x683) (= (+ x225 x787) x367) (>= x1167 0))) (= x975 (x1315 x618 x474)) (= x618 1) (= (mod (* x1078 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x459) (= x474 (ite (> x1078 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= 0 x975) (> x361 0) (not x1060) (= x1543 (div x459 x361)))) (= x1565 (x351 (x1585 x1366) (x1106 3) 0)) (= x284 (x584 x1058 1)) (= x901 (x1315 1461501637330902918203684832716283019655932542975 x215)) (>= x1411 0) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x372) (= (x351 (x1585 x327) x286 0) x698) (= x1060 (= 0 x1078)) (>= x361 0) (= x1593 (x351 (x1585 x901) x515 0)) (= x327 (x1315 1461501637330902918203684832716283019655932542975 x217)) (= (x351 (x1585 x1366) (x1106 6) 0) x689) (= x1016 (x351 (x1585 x1499) x689 0)) (or (and (= x309 0) (not x1229)) (and x1229 (or (and (= x378 (x1015 (- x943 x62))) (= x993 604800) (not x1562) (not (< x943 x62)) (= x820 (ite (> 604800 x378) x378 604800)) (= x309 x820)) (and x1562 (= x1212 x309) (= x908 (x32 x1449)) (= (x1015 (- x943 x908)) x1212) (not (> x908 x943)))) (= x1562 (= x62 0)) (or (and (= x943 x1341) x1094 (= x1341 (x32 x718))) (and (= x943 x379) (not x1094))) (= (x32 x718) x1361) (= (> x379 x1361) x1094))) (= (x1010 (+ 64 x1449)) x301) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x361) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1411) (= (= 0 x447) x629) (= x1078 (x854 x698)) (= (x1369 x1016) x62) (>= x1078 0) (<= 0 x62) (= x515 (x351 (x1585 x1366) (x1106 5) 0)) (or (and (not x629) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x1586) (= x166 (x351 (x1585 x1586) x1134 0)) (= x1134 (x351 (x1585 x1366) (x1106 10) 0))) x629) (= x1058 (x351 (x1585 x1366) (x1106 1) 0)) (= x882 (x32 x718)) (= x286 (x351 (x1585 x372) x1565 0)) (= x649 (= x309 0)) (<= x921 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1010 (+ 32 x1449)) x718)) x727) x1583))
(assert (=> (>= 10000 x821) (= (x1585 x821) (x1106 x821))))
(assert (x1052 x806))
(assert (x1052 x906))
(assert (x1052 x199))
(assert (= (x1260 x1501) (ite (and x1160 x412) (x1473 x1501) (ite (and x1160 x197 (not x412)) (x1393 x1501) (x1275 x1501)))))
(assert (x1052 x223))
(assert (= 635128645 (x510 (x1106 635128645))))
(assert (= (ite (and x1164 x619 x635 (not x675) x392 x1440) (x656 x464) (ite (and (not x619) x1440 x392 x1164 x635) (x1530 x464) (ite (and x392 x1440 (not x1164) x635) (x922 x464) (ite (and x635 (not x392) x1440) (x1217 x464) (x1187 x464))))) (x174 x464)))
(assert (= (x336 x1285) (ite (= x1285 x1413) x1013 (x650 x1285))))
(assert (x1052 x505))
(assert (= (x133 x25) (ite (= x25 x550) x1492 (x1082 x25))))
(assert (=> (<= x833 10000) (= (x1106 x833) (x1585 x833))))
(assert (=> (<= x923 10000) (= (x1106 x923) (x1585 x923))))
(assert (x1052 x756))
(assert (x1052 x309))
(assert (x1052 x1095))
(assert (= x158 (x510 (x1585 x158))))
(assert (x1052 x401))
(assert (= (x133 x464) (ite (= x550 x464) x1492 (x1082 x464))))
(assert (= (x442 x550) (ite (and x246 x855) (x336 x550) (x409 x550))))
(assert (x1052 x520))
(assert (x1052 x1170))
(assert (x1052 x349))
(assert (= (ite (= x550 x931) x1492 (x1082 x931)) (x133 x931)))
(assert (x1052 x214))
(assert (= x574 (x510 (x1585 x574))))
(assert (x478 x343))
(assert (x1052 x863))
(assert (=> (<= x496 10000) (= (x1106 x496) (x1585 x496))))
(assert (= x671 (x510 (x1585 x671))))
(assert (x478 x433))
(assert (x1052 x1331))
(assert (x1052 x288))
(assert (x1052 x981))
(assert (x1052 x332))
(assert (x1052 x1340))
(assert (= x944 (or x1594 x212)))
(assert (= x56 x837))
(assert (= x454 (x1082 x233)))
(assert (= 0 (x1064 160)))
(assert (x805 x1194 x1500))
(assert (x1052 x817))
(assert (= (ite (and x375 (not x1127) x897 (not x1060)) (x1310 x723) (ite (and (not x1060) x897 (not x375)) (x32 x723) (ite (and x1060 x897) (x32 x723) (x1156 x723)))) (x548 x723)))
(assert (x1052 x1079))
(assert (= (x1106 274184521717934524641157099916833587206) (x1585 274184521717934524641157099916833587206)))
(assert (= x211 (or (and x1351 x175) (and (not x1175) x1428) (and x1086 (not x445)))))
(assert (x1052 x1405))
(assert (= (ite (and x246 x855) (x336 x1413) (x409 x1413)) (x442 x1413)))
(assert (= (x1585 2211524764) (x1106 2211524764)))
(assert (=> (<= x665 10000) (= (x1585 x665) (x1106 x665))))
(assert (x1052 x822))
(assert (= x446 (x510 (x1585 x446))))
(assert (x1052 x741))
(assert (x1052 x501))
(assert (x805 x9 x576))
(assert (x478 x1597))
(assert (x1052 x1213))
(assert (x1052 x1042))
(assert (= (x510 (x1585 x107)) x107))
(assert (x478 x245))
(assert (x1052 x1445))
(assert (= x713 (=> (and (= x538 (x351 (x1585 x1558) (x1106 7) 0)) (= (x351 (x1585 x923) x538 0) x1438) (= x923 (x1315 1461501637330902918203684832716283019655932542975 x215)) (= x107 (x1315 1461501637330902918203684832716283019655932542975 x217)) (>= x1561 0) (= (x1260 x875) x1561) (= x875 (x351 (x1585 x107) x1438 0)) (<= x1561 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x1561 0) x1190)) (and (=> x1190 x960) (=> (and (= x1558 x1145) (not x1190)) x1142)))))
(assert (x1052 x274))
(assert (= (ite (= x550 x1413) x1492 (x1082 x1413)) (x133 x1413)))
(assert (= x151 (=> (and (>= x1344 0) (> 911411945 x1324) (< x1324 468353030) (= x1344 x47) (= (x1083 (x1585 274184521717934524641157099916833587206)) x705) (= (x351 (x1585 x512) x637 0) x1286) (>= 1461501637330902918203684832716283019655932542975 x512) (<= x1344 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1324 69947311) (< x1324 2293535753) (= x637 (x351 (x1585 x1460) (x1106 10) 0)) (= (x354 x1286) x1344) (> x705 0)) (=> (and (= x47 x1276) (= x66 x821) (= x1463 x852) (= x1506 x343)) x498))))
(assert (x58 x660 x221 x684 x608))
(assert (x1052 x1189))
(assert (x478 x1079))
(assert (= 759532456 (x510 (x1106 759532456))))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x510 (x1106 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (x294 x618 x474))
(assert (=> (<= x668 10000) (= (x1106 x668) (x1585 x668))))
(assert (= (x663 x464) (ite (= x1133 x464) x724 (x1557 x464))))
(assert (x1052 x945))
(assert (= (ite (= x811 x740) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x811)) (x1217 x811)))
(assert (x478 x173))
(assert (=> (>= 10000 x1520) (= (x1585 x1520) (x1106 x1520))))
(assert (x1052 x252))
(assert (x1052 x1056))
(assert (x478 x1499))
(assert (x1052 x788))
(assert (=> (<= x1569 10000) (= (x1106 x1569) (x1585 x1569))))
(assert (x1052 x543))
(assert (x1052 x1204))
(assert (x1052 x633))
(assert (= (ite (= x550 x977) x1492 (x1082 x977)) (x133 x977)))
(assert (x1052 x268))
(assert (= (x1260 x366) (ite (and x412 x1160) (x1473 x366) (ite (and (not x412) x197 x1160) (x1393 x366) (x1275 x366)))))
(assert (x285 x618))
(assert (= x1240 (x510 (x1585 x1240))))
(assert (= (x510 (x1585 x929)) x929))
(assert (x478 x843))
(assert (= (x1455 x1208) (ite (and (not x818) x1440 x635) (x174 x1208) (x444 x1208))))
(assert (= (ite (and (not x675) x1440 x635 x619 x1164 x392) (x656 x1208) (ite (and x1164 x1440 (not x619) x392 x635) (x1530 x1208) (ite (and (not x1164) x1440 x635 x392) (x922 x1208) (ite (and x1440 (not x392) x635) (x1217 x1208) (x1187 x1208))))) (x174 x1208)))
(assert (x478 x1303))
(assert (x478 x832))
(assert (x1052 x1141))
(assert (x1052 x1460))
(assert (= x729 (and x1408 x287)))
(assert (x478 x749))
(assert (= (=> (and (> x1247 x1364) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1558)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1367) (or (and x1592 (= (x351 (x1585 x358) x192 0) x1509) (= x192 (x351 (x1585 x1558) (x1106 6) 0)) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x358)) (and (= (x1315 1461501637330902918203684832716283019655932542975 x215) x843) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x11) (< (* x722 x1209) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x1209 x722) x604) (= x604 x405) (= x536 (x351 (x1585 x843) x699 0)) (= x1119 (x351 (x1585 x11) x1185 0)) (= (x351 (x1585 x1558) (x1106 5) 0) x699) (not x1592) (= (x351 (x1585 x1558) (x1106 6) 0) x1185))) (= x41 (x351 (x1585 x985) x716 0)) (>= x1091 0) (= x918 (x351 (x1585 x51) x487 0)) (= (x584 x76 1) x1047) (= (x236 x1047) x454) (= (< x1091 x778) x194) (or (and (= 0 x722) (not x194)) (and (= x16 (x1082 x233)) (= x1075 (> x379 x16)) (or (and (= x722 x991) (= 604800 x417) (not x1532) (= (x1015 (- x783 x1091)) x273) (= (ite (< x273 604800) x273 604800) x991) (not (> x1091 x783))) (and x1532 (= x580 (x1082 x359)) (= x1519 x722) (not (< x783 x580)) (= (x1015 (- x783 x580)) x1519))) x194 (or (and (= x379 x783) (not x1075)) (and (= x205 x783) (= x205 (x1082 x233)) x1075)) (= (= 0 x1091) x1532))) (= x1115 (x351 (x1585 x19) x479 0)) (= x1091 (x799 x1115)) (= x1592 (= x722 0)) (= (x419 x918) x561) (= (= x401 0) x947) (<= x1091 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x454 0) (= (x351 (x1585 x602) x53 0) x487) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x561) (= (x351 (x1585 x1558) (x1106 3) 0) x53) (= x1019 (= x561 0)) (= x76 (x351 (x1585 x1558) (x1106 1) 0)) (<= 0 x1352) (= (x102 x76) x1352) (= x51 (x1315 1461501637330902918203684832716283019655932542975 x217)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1352) (= (x351 (x1585 x1558) (x1106 6) 0) x479) (<= 0 x561) (>= x1367 0) (= x1090 x97) (<= x454 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x985 (x1315 1461501637330902918203684832716283019655932542975 x215)) (or (and (= x146 (x1315 x125 x1096)) (= x98 (div x427 x1367)) (not x1019) (= 1 x125) (= 0 x146) (or (not x748) (and (= (x351 (x1585 x1597) x82 0) x1221) (>= 1461501637330902918203684832716283019655932542975 x788) (= (x351 (x1585 x1558) (x1106 11) 0) x135) (= x1061 (* x98 x254)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x609) (= (x351 (x1585 x183) x857 0) x974) (< (+ x561 x605) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x605) (= x605 x1435) (< 0 x1013) (= x550 (x1010 (+ x1395 160))) (= (+ x5 x938) x1492) (= x965 (x1082 x550)) (= x1483 (x1315 1461501637330902918203684832716283019655932542975 x215)) (= (x351 (x1585 x516) x869 0) x857) (= x516 (x1315 1461501637330902918203684832716283019655932542975 x217)) (or (not x900) (and (= (x270 x121) x1250) (<= x1250 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x158 (x1219 x1166)) (= (x1219 x1166) x1520) (= (x133 x1413) x220) (= (+ x1257 x261) x520) (= (x351 (x1585 x1569) x669 0) x766) (= x306 (x351 (x1585 x983) x377 0)) (= x227 (+ x337 x915)) (= (x351 (x1585 x1558) (x1106 4) 0) x377) (= (x351 (x1585 x1558) (x1106 4) 0) x1534) (< (+ x1595 x561) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< 1 x1013) (< 1 x1013) (= x1257 x68) (= (div x721 1000000000000000000) x68) (> x220 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1476 x68)) (= (x351 (x1585 x158) x1161 0) x1345) (= x721 (* x98 x1250)) x900 (= (x351 (x1585 x883) x1534 0) x1495) (= x1493 (x1315 1461501637330902918203684832716283019655932542975 x217)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1595) (>= 1461501637330902918203684832716283019655932542975 x1569) (= x1161 (x351 (x1585 x1493) x1495 0)) (>= 1461501637330902918203684832716283019655932542975 x158) (= x669 (x351 (x1585 x627) x306 0)) (<= x1520 1461501637330902918203684832716283019655932542975) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x883) (= x1486 0) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x983) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x98 x1250)) (<= 0 x1250) (= x121 (x351 (x1585 x1520) x1210 0)) (= x1595 (x789 x1345)) (= (> x1013 2) x1278) (= x1165 (x1010 (+ 192 x1395))) (= x1486 (x789 x766)) (= (x1010 (+ 64 x1018)) x1166) (< 1 x1013) (<= 0 x1595) (= (x133 x1165) x1476) (= x1476 x261) (<= x1486 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x351 (x1585 x1558) (x1106 11) 0) x1113) (= x915 x1595) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x423) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x627) (= (x351 (x1585 x423) x1113 0) x1210) (= x337 x561) (<= 0 x1486) (not x1278) (= (x1219 x1166) x1569))) (= x938 x356) (= (x351 (x1585 x391) x135 0) x1485) (< 0 x1013) (> x1013 0) (< (+ x356 x965) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1291 x317) (= 0 x609) (= x1333 (x1082 x1413)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x605) (= (x1547 x974) x605) (<= x254 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x183) (= x1207 (x351 (x1585 x1558) (x1106 4) 0)) (= (x1219 x317) x788) (= (x351 (x1585 x1558) (x1106 4) 0) x172) (= (x351 (x1585 x788) x1485 0) x1436) x748 (< 0 x1333) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x391) (= x609 (x1547 x169)) (= (x1219 x317) x1551) (= (div x1061 1000000000000000000) x356) (= x363 x561) (= x93 (+ x1435 x363)) (= (x351 (x1585 x1483) x172 0) x82) (= (< 1 x1013) x900) (<= 0 x254) (= x183 (x1219 x317)) (= x1597 (x1315 1461501637330902918203684832716283019655932542975 x217)) (< (* x254 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x72 (x1315 1461501637330902918203684832716283019655932542975 x215)) (= x169 (x351 (x1585 x1551) x1221 0)) (>= x609 0) (= x869 (x351 (x1585 x72) x1207 0)) (= (x270 x1436) x254) (>= 1461501637330902918203684832716283019655932542975 x1551) (= x965 x5))) (< 0 x1367) (= (ite (> x561 115792089237316195423570985008687907853269984665640564039457) 1 0) x1096) (= (< 0 x1013) x748) (= x427 (mod (* x561 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1019) (= (x1010 (+ 32 x359)) x233) (or x947 (and (not x947) (= x770 (x1315 1461501637330902918203684832716283019655932542975 x215)))) (= x778 (x1082 x233)) (= (x1577 x41) x1367) (= (x351 (x1585 x1558) (x1106 5) 0) x716) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x19) (= x1090 (x1010 (+ x359 64))) (= (x1010 (+ x1366 2)) x1247) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x602)) x1545) x1201))
(assert (= (x442 x731) (ite (and x855 x246) (x336 x731) (x409 x731))))
(assert (= 0 (x1064 x811)))
(assert (= (x1310 x268) (ite (= x268 x1180) x367 (x32 x268))))
(assert (=> (>= 10000 x158) (= (x1106 x158) (x1585 x158))))
(assert (x1052 x877))
(assert (x478 x1356))
(assert (x1052 x712))
(assert (= x245 (x510 (x1585 x245))))
(assert (= (x656 x464) (ite (= x464 x1036) x505 (x1530 x464))))
(assert (x478 x414))
(assert (= (=> (= (< x1382 x1366) x581) (and (=> (not x581) x824) (=> (and (= x97 x63) x581) x1545))) x693))
(assert (= (x32 x731) (ite (= x718 x731) x921 (x734 x731))))
(assert (= x312 x1377))
(assert (= (x656 x1285) (ite (= x1285 x1036) x505 (x1530 x1285))))
(assert (= (=> (= x287 (< 1 x1013)) (and (=> (not x287) x1281) (=> (and (= (x1219 x994) x826) (= x1023 (x1010 (+ 68 x978))) (= x259 (x1315 1461501637330902918203684832716283019655932542975 x217)) (< 1 x440) (= (x1010 (+ x978 100)) x410) (= (x1015 (- x1071 32)) x239) (= x1071 (x1015 (- x410 x978))) (= x994 (x1010 (+ 64 x1018))) (= (x178 x978) x1552) (= (> x456 0) x1222) (= (x1010 (+ x978 36)) x1273) (= x435 (x1010 (+ x1273 128))) (>= 1461501637330902918203684832716283019655932542975 x826) (= x752 (> x1552 0)) (= (x315 x931) x1194) (= (x523 x1413) x440) x1222 (= (x1010 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x12)) x877) (= 0 x24) (= (x1083 (x1585 x826)) x456) x287 (= (x1010 (+ x978 32)) x931) (= (< x1552 x263) x1357) (> x1013 1) (or (and (= x1095 (x1010 (+ x1552 x435))) x1357) (not x1357)) (= x383 (x1010 (+ x1273 96))) (or (and (= x476 x931) x752 (= x52 (x178 x476)) (= x435 x666) (or (and (= (x1010 (+ x410 96)) x1133) (= x393 (< 64 x1552)) (= (x1557 x863) x724) x911 (= x863 (x1010 (+ x978 64))) (or (and (= x678 (< 96 x1552)) (= (x663 x1285) x1538) x393 (= (x1010 (+ x978 96)) x1285) (or (and (= x1144 (x1010 (+ x410 160))) (= x263 128) (= (> x1552 128) x345) x678 (= (x1010 (+ 128 x978)) x464) (= (x639 x464) x1117) (not x345)) (and (= x263 96) (not x678))) (= (x1010 (+ x410 128)) x1508)) (and (not x393) (= 64 x263)))) (and (= 32 x263) (not x911))) (= (< 32 x1552) x911)) (and (= x263 0) (not x752))) (= (x1315 26959946667150639794667015087019630673637144422540572481103610249215 x1194) x12) (= (x1010 (+ 192 x1395)) x704) (= (x523 x704) x940)) x465))) x1350))
(assert (= (x1106 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1585 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1052 x334))
(assert (= x250 (x510 (x1585 x250))))
(assert (x478 x494))
(assert (=> (<= x357 10000) (= (x1106 x357) (x1585 x357))))
(assert (x1052 x864))
(assert (= (x510 (x1106 87118632)) 87118632))
(assert (x1052 x1116))
(assert (= (=> (and (<= 0 x518) (= (x351 (x1585 x781) x1306 0) x905) (= x781 (x1315 1461501637330902918203684832716283019655932542975 x215)) (= (= 0 x518) x153) (= x1306 (x351 (x1585 x1366) (x1106 6) 0)) (= (x1369 x905) x518) (<= x981 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x981) (not (> x1468 x981)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x518)) (and (=> (and (= (x351 (x1585 x557) x1475 0) x1482) (= (x354 x1482) x1151) (not x153) (>= x1151 0) (= x390 x1151) (= x557 (x1315 1461501637330902918203684832716283019655932542975 x215)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1151) (= x1475 (x351 (x1585 x1366) (x1106 10) 0)) (= 0 x447)) x1583) (=> x153 x917))) x105))
(assert (x1052 x1597))
(assert (= (x510 (x1585 x343)) x343))
(assert (= (x510 (x1585 x400)) x400))
(assert (= x806 (x510 (x1585 x806))))
(assert (= (ite (and (not x1060) x375 x897 (not x1127)) (x1310 x884) (ite (and (not x1060) (not x375) x897) (x32 x884) (ite (and x897 x1060) (x32 x884) (x1156 x884)))) (x548 x884)))
(assert (x1052 x1449))
(assert (= (and x1574 (not x980)) x1448))
(assert (x285 x611))
(assert (x1052 x512))
(assert (x478 x1178))
(assert (x478 x557))
(assert (= (x1106 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1585 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (or (and x729 x1196) (and x980 x1574)) x1339))
(assert (x1052 x664))
(assert (x1052 x65))
(assert (=> (<= x173 10000) (= (x1585 x173) (x1106 x173))))
(assert (x1052 x564))
(assert (x285 x215))
(assert (=> (<= x184 10000) (= (x1585 x184) (x1106 x184))))
(assert (x1052 x216))
(assert (x478 x1363))
(assert (x1052 x90))
(assert (= (=> (and (= x964 (x206 x830)) (= x830 (x351 (x1585 x595) x1121 0)) (<= 0 x964) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x595) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x964) (= x23 (x1315 1461501637330902918203684832716283019655932542975 x215)) (= x235 (= 0 x964)) (= x70 (x351 (x1585 x1366) (x1106 7) 0)) (= (x351 (x1585 x23) x70 0) x1121)) (and (=> x235 x1153) (=> (and (= x1366 x492) (not x235)) x416))) x933))
(assert (= x1539 x152))
(assert (x1052 x1328))
(assert (x1052 x1427))
(assert (= (x510 (x1585 x744)) x744))
(assert (x1052 x1364))
(assert (x1052 x95))
(assert (= (x510 (x1585 x971)) x971))
(assert (x478 x480))
(assert (x1052 x417))
(assert (= (ite (= x887 x863) x686 (x1217 x863)) (x922 x863)))
(assert (=> (<= x804 10000) (= (x1585 x804) (x1106 x804))))
(assert (x478 x574))
(assert (=> (<= x1356 10000) (= (x1585 x1356) (x1106 x1356))))
(assert (= (x1106 1986467848) (x1585 1986467848)))
(assert (= x891 (x510 (x1585 x891))))
(assert (x1052 x704))
(assert (= 2418364589 (x510 (x1106 2418364589))))
(assert (=> (>= 10000 x1504) (= (x1106 x1504) (x1585 x1504))))
(assert (= x1575 (x510 (x1585 x1575))))
(assert (= x777 (x510 (x1585 x777))))
(assert (= (x1557 x863) (ite (= x666 x863) x52 (x178 x863))))
(assert (x1052 x1483))
(assert (= (ite (= x464 x1413) x1013 (x650 x464)) (x336 x464)))
(assert (= (or x1335 x170) x124))
(assert (= (=> (and (= x1228 (< x1382 x1558)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1468)) (= (x1010 (+ x1366 1)) x1558)) (and (=> (not x1228) x976) (=> (and (= x301 x97) x1228) x1545))) x727))
(assert (= (x174 x1413) (ite (and x1440 (not x675) x392 x619 x1164 x635) (x656 x1413) (ite (and x1164 (not x619) x635 x392 x1440) (x1530 x1413) (ite (and x635 x1440 (not x1164) x392) (x922 x1413) (ite (and x635 (not x392) x1440) (x1217 x1413) (x1187 x1413)))))))
(assert (x478 x1330))
(assert (= (x548 x25) (ite (and (not x1060) (not x1127) x375 x897) (x1310 x25) (ite (and (not x375) (not x1060) x897) (x32 x25) (ite (and x897 x1060) (x32 x25) (x1156 x25))))))
(assert (= x508 (and x112 x681)))
(assert (= x1270 (=> (and (< x179 468353030) (= x388 (x598 x1038)) (= x48 (x351 (x1585 x691) (x1106 9) 0)) (= x1070 (x1083 (x1585 274184521717934524641157099916833587206))) (< x179 2293535753) (= (x351 (x1585 x414) x48 0) x556) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x388) (< 0 x1070) (not (= x179 69947311)) (< x179 911411945) (>= 1461501637330902918203684832716283019655932542975 x414) (not (= 87118632 x179)) (>= x388 0) (= x1038 (x351 (x1585 x1504) x556 0)) (= x388 x365) (<= x1504 1461501637330902918203684832716283019655932542975) (= x179 142201243)) (=> (and (= x180 x1506) (= 0 x1100) (= x862 (< 0 x768)) (= x66 x278) (= x365 x768) (= (and x862 x1227) x1381)) x59))))
(assert (=> (<= x1329 10000) (= (x1106 x1329) (x1585 x1329))))
(assert (= 0 (x1064 x863)))
(assert (= (x510 (x1585 x919)) x919))
(assert (x1052 x977))
(assert (x478 x781))
(assert (x1052 x16))
(assert (x1052 x391))
(assert (= (x529 x1208) (ite (and (not x678) x1408 x287 x752 x393 x911) (x639 x1208) (ite (and x1408 x287 x752 (not x393) x911) (x663 x1208) (ite (and x287 x1408 (not x911) x752) (x1557 x1208) (ite (and x287 (not x752) x1408) (x178 x1208) (x1542 x1208)))))))
(assert (x1052 x1441))
(assert (x1052 x1356))
(assert (= (x922 x811) (ite (= x811 x887) x686 (x1217 x811))))
(assert (x1052 x1020))
(assert (= x1112 (x510 (x1585 x1112))))
(assert (x1052 x775))
(assert (=> (<= x343 10000) (= (x1106 x343) (x1585 x343))))
(assert (x1052 x940))
(assert (= (x548 x464) (ite (and (not x1127) x897 (not x1060) x375) (x1310 x464) (ite (and (not x375) x897 (not x1060)) (x32 x464) (ite (and x1060 x897) (x32 x464) (x1156 x464))))))
(assert (= (x1082 x723) (ite (= x723 x233) x454 (x113 x723))))
(assert (x1052 x489))
(assert (=> (<= x29 10000) (= (x1585 x29) (x1106 x29))))
(assert (x478 x278))
(assert (x478 x1308))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x510 (x1106 115792089237316195423570985008687907853269984665640564039457))))
(assert (= x327 (x510 (x1585 x327))))
(assert (=> (>= 10000 x1434) (= (x1585 x1434) (x1106 x1434))))
(assert (=> (<= x1141 10000) (= (x1585 x1141) (x1106 x1141))))
(assert (= x488 (and x1347 x86)))
(assert (=> (<= x671 10000) (= (x1106 x671) (x1585 x671))))
(assert (x1052 x441))
(assert (= x595 (x510 (x1585 x595))))
(assert (x1052 x671))
(assert (x1052 x870))
(assert (=> (>= 10000 x1245) (= (x1106 x1245) (x1585 x1245))))
(assert (=> (<= x438 10000) (= (x1585 x438) (x1106 x438))))
(assert (=> (>= 10000 x216) (= (x1106 x216) (x1585 x216))))
(assert (= (ite (= x383 x978) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1371 x978)) (x178 x978)))
(assert (x1052 x139))
(assert (= x1279 x1377))
(assert (= (x1217 x335) (ite (= x335 x740) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x335))))
(assert (x1052 x1277))
(assert (= (and x445 x1086) x995))
(assert (x1052 x815))
(assert (= (ite (= x335 x1036) x505 (x1530 x335)) (x656 x335)))
(assert (= (or x944 (and (not x153) x607)) x897))
(assert (= (ite (= x1036 x704) x505 (x1530 x704)) (x656 x704)))
(assert (x1052 x378))
(assert (x1052 x643))
(assert (= (ite (= x1413 x811) x1013 (x650 x811)) (x336 x811)))
(assert (= (ite (= x335 x1413) x1013 (x650 x335)) (x336 x335)))
(assert (=> (>= 10000 x712) (= (x1106 x712) (x1585 x712))))
(assert (x478 274184521717934524641157099916833587206))
(assert (x521 x591 x596))
(assert (x1052 x783))
(assert (x1052 x1197))
(assert (x1052 x901))
(assert (x1052 x724))
(assert (= (and x1175 x1428) x175))
(assert (x478 x1551))
(assert (= (ite (= x740 x97) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x97)) (x1217 x97)))
(assert (=> (<= x1178 10000) (= (x1585 x1178) (x1106 x1178))))
(assert (= (x510 (x1106 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x510 (x1585 x1327)) x1327))
(assert (=> (<= x557 10000) (= (x1106 x557) (x1585 x557))))
(assert (= (=> (and (<= 0 x46) (= x904 (x351 (x1585 x1046) x1120 0)) (= x674 (= x46 0)) (= x1120 (x351 (x1585 x1366) (x1106 6) 0)) (= (x1369 x904) x46) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x1046) (<= x46 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (= x949 x1366) (not x674)) x60) (=> x674 x3))) x150))
(assert (= (ite (and (not x1060) x375 x897 (not x1127)) (x346 x1345) (ite (and (not x1060) x897 (not x375)) (x109 x1345) (ite (and x1060 x897) (x109 x1345) (x222 x1345)))) (x1547 x1345)))
(assert (x1052 x1150))
(assert (= (x442 x268) (ite (and x246 x855) (x336 x268) (x409 x268))))
(assert (= (x510 (x1106 1986467848)) 1986467848))
(assert (x1052 x189))
(assert (= (ite (= x1133 x811) x724 (x1557 x811)) (x663 x811)))
(assert (= (=> (and (= x747 (< 0 x517)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1362 (x1585 274184521717934524641157099916833587206))) x878) (not (= 0 x1146)) (= (= x490 0) x462) (= x517 (x1048 x811)) x878 (not x1412) (= (x776 (x1585 x826)) x612) (or (and (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x950) true) (> 32 x950)) (> x950 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (= x316 0) x1555) (= (not x1555) x503) (= x1337 (ite x503 1 0)) x747 (= x1208 (x1010 (+ 32 x811))) (= x316 (x1048 x1208)) (= x950 (x1048 x811)) (= x316 x1337) (< 0 x316)) (not x747)) (= (< 2 x1013) x1412) (or (and (not x462) (= x811 x435) (= x1028 (x1010 (+ 96 x410)))) (and x462 (= x811 96)))) x1281) x1494))
(assert (=> (>= 10000 x120) (= (x1585 x120) (x1106 x120))))
(assert (= (x1064 x931) 0))
(assert (= (x1585 2258409472) (x1106 2258409472)))
(assert (= x1558 (x510 (x1585 x1558))))
(assert (x1052 x602))
(assert (x478 x1035))
(assert (x1052 x1476))
(assert (=> (>= 10000 x245) (= (x1106 x245) (x1585 x245))))
(assert (= (x510 (x584 x1238 1)) (+ (x510 x1238) 1)))
(assert (= (x1585 26959946667150639794667015087019630673637144422540572481103610249215) (x1106 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= 2258409472 (x510 (x1106 2258409472))))
(assert (= (x922 x1208) (ite (= x887 x1208) x686 (x1217 x1208))))
(assert (= (x1585 2690754053) (x1106 2690754053)))
(assert (= (ite (= x1180 x1208) x367 (x32 x1208)) (x1310 x1208)))
(assert (x478 x1282))
(assert (x1052 x993))
(assert (=> (<= x72 10000) (= (x1585 x72) (x1106 x72))))
(assert (x1052 x1470))
(assert (= (ite (= x931 x740) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x931)) (x1217 x931)))
(assert (x478 x327))
(assert (= (ite (and x897 x375 (not x1127) (not x1060)) (x1310 x1285) (ite (and x897 (not x1060) (not x375)) (x32 x1285) (ite (and x897 x1060) (x32 x1285) (x1156 x1285)))) (x548 x1285)))
(assert (x1052 x1273))
(assert (x478 x391))
(assert (x478 x157))
(assert (x1052 x873))
(assert (= (x1580 x704) (ite (and x644 x75) (x1195 x704) (x816 x704))))
(assert (= x1303 (x510 (x1585 x1303))))
(assert (= x64 (=> (and (= (= 0 x1457) x412) (or (and (<= 0 x1029) (= x961 (x236 x231)) (<= x961 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1010 (+ x63 32)) x44) (or (and (= x717 x624) (= x606 (x351 (x1585 x1366) (x1106 3) 0)) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x1266) (= x702 (x351 (x1585 x1366) (x1106 7) 0)) (= x717 (* x1358 x1457)) (= x1387 (x351 (x1585 x531) x554 0)) (= x1449 x18) (not x197) (= x671 (x1315 1461501637330902918203684832716283019655932542975 x217)) (= x861 (x351 (x1585 x671) x242 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1457 x1358)) (= (x351 (x1585 x1266) x702 0) x242) (= x554 (x351 (x1585 x572) x606 0)) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x572) (= x531 (x1315 1461501637330902918203684832716283019655932542975 x217))) (and (= (x1315 1461501637330902918203684832716283019655932542975 x215) x89) (= x784 (x351 (x1585 x173) x234 0)) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x173) x197 (= x87 (x351 (x1585 x1366) (x1106 7) 0)) (= x18 x1449) (= (x351 (x1585 x89) x87 0) x234))) (= (x1010 (+ x63 64)) x18) (not x412) (<= 0 x707) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x438) (= (x1353 x44) x1400) (= x249 (x351 (x1585 x438) x1391 0)) (= x707 (x102 x1238)) (or (and (not x406) (= x1358 0)) (and (= x187 (= 0 x1029)) (or (and x297 (= x726 x352) (= x726 (x1353 x44))) (and (= x379 x352) (not x297))) (= (x1353 x44) x750) (= (< x750 x379) x297) (or (and (not (< x352 x404)) (= x404 (x1353 x63)) x187 (= x281 (x1015 (- x352 x404))) (= x281 x1358)) (and (= 604800 x426) (= (x1015 (- x352 x1029)) x1403) (not x187) (= x88 x1358) (= x88 (ite (< x1403 604800) x1403 604800)) (not (< x352 x1029)))) x406)) (= x593 (x351 (x1585 x1366) (x1106 7) 0)) (= (x351 (x1585 x1366) (x1106 1) 0) x1238) (>= x961 0) (= (x1315 1461501637330902918203684832716283019655932542975 x215) x1556) (= (< x1029 x1400) x406) (= x1391 (x351 (x1585 x1556) x593 0)) (= x197 (= 0 x1358)) (<= x707 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1029) (= (x206 x249) x1029) (= (x584 x1238 1) x231)) (and (= (x1315 1461501637330902918203684832716283019655932542975 x217) x929) (= (x351 (x1585 x929) x20 0) x1343) (= x1449 x63) (= x934 (x351 (x1585 x1366) (x1106 7) 0)) (= (x351 (x1585 x117) x934 0) x20) x412 (= x117 (x1315 1461501637330902918203684832716283019655932542975 x215)))) (or x142 (and (= x541 (x1315 1461501637330902918203684832716283019655932542975 x215)) (= (x351 (x1585 x1522) x39 0) x999) (= (x1315 1461501637330902918203684832716283019655932542975 x217) x1522) (not x142) (= x672 (x351 (x1585 x1366) (x1106 9) 0)) (= x39 (x351 (x1585 x541) x672 0)))) (= (= 0 x450) x142)) x105)))
(assert (x1052 x552))
(assert (x1052 x1426))
(assert (= (ite (and x644 x75) (x1195 x1285) (x816 x1285)) (x1580 x1285)))
(assert (x1052 x321))
(assert (x1052 x1336))
(assert (= (x336 x1208) (ite (= x1208 x1413) x1013 (x650 x1208))))
(assert (= (and x461 (not x1158)) x323))
(assert (=> (>= 10000 x358) (= (x1585 x358) (x1106 x358))))
(assert (= (x510 (x1585 x901)) x901))
(assert (= (x510 (x1585 x817)) x817))
(assert (= (x442 x25) (ite (and x246 x855) (x336 x25) (x409 x25))))
(assert (x1052 x317))
(assert (x1052 x620))
(assert (x1052 x1303))
(assert (x1052 x1105))
(assert (x478 x1569))
(assert (x478 x1040))
(assert (= (x1547 x974) (ite (and (not x1060) x897 (not x1127) x375) (x346 x974) (ite (and (not x375) x897 (not x1060)) (x109 x974) (ite (and x897 x1060) (x109 x974) (x222 x974))))))
(assert (x1052 x220))
(assert (x285 x474))
(assert (= (x510 (x1585 x788)) x788))
(assert (x1052 x1266))
(assert (x478 x826))
(assert (= 274184521717934524641157099916833587214 (x510 (x1585 274184521717934524641157099916833587214))))
(assert (x1052 x1044))
(assert (=> (<= x788 10000) (= (x1106 x788) (x1585 x788))))
(assert (= (ite (= x887 x1413) x686 (x1217 x1413)) (x922 x1413)))
(assert (= (x1064 x723) 0))
(assert (x478 x1240))
(assert (= x960 (=> (and (= (< 0 x1072) x514) (= x1072 (x1015 (- x1558 1)))) (and (=> x514 x304) (=> (not x514) x1005)))))
(assert (= x148 (and x460 x514)))
(assert (x1052 x561))
(assert (= (x510 (x1585 x164)) x164))
(assert (x1052 x511))
(assert (x1052 x1498))
(assert (x1052 x1465))
(assert (= (x510 (x1585 x1556)) x1556))
(assert (x1052 x706))
(assert (= (x510 (x1585 x983)) x983))
(assert (x1052 x186))
(assert (x1052 x1180))
(assert (= x1418 (=> (= x155 0) x641)))
(assert (x1052 x316))
(assert (x478 x744))
(assert (= (x510 (x1585 x1263)) x1263))
(assert (x1052 x759))
(assert (= (x178 x1208) (ite (= x1208 x383) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1371 x1208))))
(assert (= (ite (= x233 x863) x454 (x113 x863)) (x1082 x863)))
(assert (x1052 x1422))
(assert (=> (<= x1263 10000) (= (x1106 x1263) (x1585 x1263))))
(assert (x478 x627))
(assert (x1052 x1269))
(assert (x1052 x1166))
(assert (x1052 x891))
(assert (=> (<= x139 10000) (= (x1106 x139) (x1585 x139))))
(assert (= (ite (= x740 x1413) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x1413)) (x1217 x1413)))
(assert (= (x510 (x1585 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= (x1585 2960351575) (x1106 2960351575)))
(assert (= x461 (and (not x1228) x1125)))
(assert (x1052 x1324))
(assert (x478 x1556))
(assert (= (x1585 826074471) (x1106 826074471)))
(assert (x1052 x1367))
(assert (x1052 x400))
(assert (x1052 x410))
(assert (x1052 x272))
(assert (= x416 (=> (= x155 x492) x641)))
(assert (= (ite (and x1440 x635 (not x818)) (x174 x464) (x444 x464)) (x1455 x464)))
(assert (x1052 x183))
(assert (= (x336 x473) (ite (= x1413 x473) x1013 (x650 x473))))
(assert (x1052 x492))
(assert (= x1521 (=> (and (= x1354 x1389) (not (< x324 2293535753)) (= x1389 (x559 x1527)) (= x1132 (x351 (x1585 x7) (x1106 5) 0)) (= (x1083 (x1585 274184521717934524641157099916833587206)) x1309) (not (= x324 2690754053)) (>= 1461501637330902918203684832716283019655932542975 x668) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1389) (< 0 x1309) (not (= 2743102681 x324)) (> 2960351575 x324) (= (x351 (x1585 x668) x1132 0) x1527) (not (= 2764855426 x324)) (>= x1389 0) (not (> 2690754053 x324)) (= x324 2798343961)) (=> (and (= x578 x1354) (= x574 x1506) (= x1330 x66) (= x274 x852)) x1262))))
(assert (x1052 x1567))
(assert (=> (>= 10000 x832) (= (x1106 x832) (x1585 x832))))
(assert (= (ite (= x811 x233) x454 (x113 x811)) (x1082 x811)))
(assert (= (x442 x1208) (ite (and x855 x246) (x336 x1208) (x409 x1208))))
(assert (x1052 x657))
(assert (= 274184521717934524641157099916833587206 (x510 (x1585 274184521717934524641157099916833587206))))
(assert (x478 x817))
(assert (= (ite (= x1208 x718) x921 (x734 x1208)) (x32 x1208)))
(assert (= (x1217 x1285) (ite (= x740 x1285) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x138 x1285))))
(assert (= (ite (and x246 x855) (x336 x1285) (x409 x1285)) (x442 x1285)))
(assert (= (x1064 x1208) 0))
(assert (= (x1106 2293535753) (x1585 2293535753)))
(assert (x1052 x110))
(assert (= (x1310 x704) (ite (= x704 x1180) x367 (x32 x704))))
(assert (= x1594 (or (and (not x344) x896) (and x771 x780) (and (not x86) x1347))))
(assert (= (ite (= x1030 x169) x1487 (x109 x169)) (x346 x169)))
(assert (x1052 x185))
(assert (= x1086 (and (not x303) x428)))
(assert (x1052 x740))
(assert (x1052 x931))
(assert (=> (>= 10000 x1558) (= (x1106 x1558) (x1585 x1558))))
(check-sat)
