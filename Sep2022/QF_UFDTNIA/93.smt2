(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x1282 0)) (((x505 (x954 x1282) (x643 x1282) (x838 Int)) (x869 (x1348 Int)) (x674 (x818 x1282) (x409 Int)))))
(declare-fun x1505 () Int)
(declare-fun x911 () Int)
(declare-fun x436 () Int)
(declare-fun x617 () Bool)
(declare-fun x269 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x1192 () Int)
(declare-fun x961 () Bool)
(declare-fun x227 () Int)
(declare-fun x434 () Int)
(declare-fun x29 () Int)
(declare-fun x649 () Bool)
(declare-fun x693 () Int)
(declare-fun x473 () Int)
(declare-fun x1366 () Bool)
(declare-fun x680 () Int)
(declare-fun x1107 () Bool)
(declare-fun x614 () Int)
(declare-fun x496 () Int)
(declare-fun x1159 () Bool)
(declare-fun x1137 () Int)
(declare-fun x460 () Bool)
(declare-fun x561 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x1517 () Int)
(declare-fun x123 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x187 () Int)
(declare-fun x1486 () Bool)
(declare-fun x475 () x1282)
(declare-fun x595 () Int)
(declare-fun x458 () Int)
(declare-fun x1220 () x1282)
(declare-fun x1378 () Int)
(declare-fun x1551 () Int)
(declare-fun x1212 () x1282)
(declare-fun x1309 () Int)
(declare-fun x1514 () Int)
(declare-fun x1497 () Int)
(declare-fun x1447 () Int)
(declare-fun x230 () Bool)
(declare-fun x699 () Bool)
(declare-fun x1112 () Int)
(declare-fun x1073 () Int)
(declare-fun x574 () Bool)
(declare-fun x747 () Bool)
(declare-fun x1164 () Int)
(declare-fun x1089 () Int)
(declare-fun x26 () Int)
(declare-fun x583 () Int)
(declare-fun x1469 () Bool)
(declare-fun x568 () Int)
(declare-fun x854 () Int)
(declare-fun x444 () Int)
(declare-fun x324 () Int)
(declare-fun x361 () x1282)
(declare-fun x1546 () Int)
(declare-fun x65 () Bool)
(declare-fun x763 () x1282)
(declare-fun x1078 () Int)
(declare-fun x388 () Int)
(declare-fun x821 () Int)
(declare-fun x916 () Int)
(declare-fun x1319 () Bool)
(declare-fun x1254 () Bool)
(declare-fun x1246 () Int)
(declare-fun x1492 () Int)
(declare-fun x626 () x1282)
(declare-fun x189 () Bool)
(declare-fun x756 () Int)
(declare-fun x1215 () Bool)
(declare-fun x853 () Int)
(declare-fun x1385 () Int)
(declare-fun x323 () Int)
(declare-fun x1303 () Int)
(declare-fun x1389 () x1282)
(declare-fun x1242 () Int)
(declare-fun x615 () x1282)
(declare-fun x1219 () Bool)
(declare-fun x137 () Bool)
(declare-fun x167 () Bool)
(declare-fun x694 () Int)
(declare-fun x34 () Bool)
(declare-fun x1557 () Int)
(declare-fun x1418 () x1282)
(declare-fun x873 () Bool)
(declare-fun x1522 () x1282)
(declare-fun x109 () x1282)
(declare-fun x555 () x1282)
(declare-fun x1056 () x1282)
(declare-fun x708 () Int)
(declare-fun x611 () Bool)
(declare-fun x286 () x1282)
(declare-fun x381 () Bool)
(declare-fun x228 () Bool)
(declare-fun x132 (Int Int) Int)
(declare-fun x476 () Int)
(declare-fun x1037 () Int)
(declare-fun x609 () Bool)
(declare-fun x144 () Bool)
(declare-fun x1406 () Bool)
(declare-fun x1226 (Int) Int)
(declare-fun x1160 () Bool)
(declare-fun x932 (Int) Int)
(declare-fun x1007 () Bool)
(declare-fun x1498 () x1282)
(declare-fun x1343 () Int)
(declare-fun x200 () x1282)
(declare-fun x949 () Bool)
(declare-fun x7 () Int)
(declare-fun x924 () Int)
(declare-fun x1392 () Int)
(declare-fun x1150 () x1282)
(declare-fun x1196 () x1282)
(declare-fun x550 () Bool)
(declare-fun x564 () x1282)
(declare-fun x652 () x1282)
(declare-fun x1050 () Int)
(declare-fun x1141 () Bool)
(declare-fun x1199 () Int)
(declare-fun x808 () Bool)
(declare-fun x1305 () Int)
(declare-fun x816 () Int)
(declare-fun x533 () Int)
(declare-fun x1207 () Int)
(declare-fun x224 () x1282)
(declare-fun x1464 () Bool)
(declare-fun x668 () Int)
(declare-fun x1230 () Int)
(declare-fun x1156 () Int)
(declare-fun x1461 () Int)
(declare-fun x105 () x1282)
(declare-fun x209 () Bool)
(declare-fun x852 () Int)
(declare-fun x1161 () x1282)
(declare-fun x107 () Bool)
(declare-fun x839 () Bool)
(declare-fun x370 () x1282)
(declare-fun x82 () Int)
(declare-fun x1496 () Int)
(declare-fun x1091 () Bool)
(declare-fun x96 () Bool)
(declare-fun x390 () Bool)
(declare-fun x1435 () Bool)
(declare-fun x1173 () Int)
(declare-fun x653 () x1282)
(declare-fun x1398 () Int)
(declare-fun x1155 () x1282)
(declare-fun x1292 () x1282)
(declare-fun x435 () Bool)
(declare-fun x1484 () Int)
(declare-fun x1223 () Int)
(declare-fun x276 () Int)
(declare-fun x1133 () Bool)
(declare-fun x956 () Bool)
(declare-fun x1168 () Int)
(declare-fun x166 () x1282)
(declare-fun x639 () Int)
(declare-fun x287 () Bool)
(declare-fun x602 () Bool)
(declare-fun x620 () Bool)
(declare-fun x576 (Int) Int)
(declare-fun x1339 () Int)
(declare-fun x92 () Bool)
(declare-fun x886 () Int)
(declare-fun x451 () Int)
(declare-fun x31 () Int)
(declare-fun x525 () x1282)
(declare-fun x1467 () Int)
(declare-fun x308 () Int)
(declare-fun x1400 () Bool)
(declare-fun x1359 () x1282)
(declare-fun x891 () Bool)
(declare-fun x234 () Int)
(declare-fun x453 () Int)
(declare-fun x374 () Int)
(declare-fun x934 () x1282)
(declare-fun x463 () Bool)
(declare-fun x193 () Int)
(declare-fun x1029 () Int)
(declare-fun x691 () Int)
(declare-fun x717 () Bool)
(declare-fun x366 () Int)
(declare-fun x153 () Bool)
(declare-fun x813 () x1282)
(declare-fun x1368 () Bool)
(declare-fun x30 () x1282)
(declare-fun x1323 () x1282)
(declare-fun x51 () Int)
(declare-fun x1332 () Int)
(declare-fun x441 () Bool)
(declare-fun x1066 () x1282)
(declare-fun x941 () Int)
(declare-fun x321 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x246 () x1282)
(declare-fun x640 () Int)
(declare-fun x697 () Int)
(declare-fun x1521 () Int)
(declare-fun x1120 () Int)
(declare-fun x702 () Int)
(declare-fun x477 () Bool)
(declare-fun x513 () Int)
(declare-fun x1314 () Int)
(declare-fun x1320 () Int)
(declare-fun x979 () Bool)
(declare-fun x1316 () Int)
(declare-fun x1453 () Bool)
(declare-fun x459 () Bool)
(declare-fun x710 () Int)
(declare-fun x462 () Int)
(declare-fun x663 (x1282) Int)
(declare-fun x156 () Bool)
(declare-fun x671 () Bool)
(declare-fun x421 () Int)
(declare-fun x1039 () Int)
(declare-fun x1470 () Bool)
(declare-fun x551 (x1282) Int)
(declare-fun x256 () Int)
(declare-fun x1128 () Bool)
(declare-fun x1325 () x1282)
(declare-fun x1451 () Int)
(declare-fun x291 () Int)
(declare-fun x605 () Bool)
(declare-fun x791 () Bool)
(declare-fun x61 () Bool)
(declare-fun x138 () Bool)
(declare-fun x1096 () x1282)
(declare-fun x983 () Bool)
(declare-fun x1426 () x1282)
(declare-fun x1342 () Bool)
(declare-fun x531 () Bool)
(declare-fun x805 () Bool)
(declare-fun x923 () x1282)
(declare-fun x491 () x1282)
(declare-fun x524 () Bool)
(declare-fun x1468 () Int)
(declare-fun x1224 () Bool)
(declare-fun x867 () Bool)
(declare-fun x402 () Int)
(declare-fun x778 () Int)
(declare-fun x248 () Bool)
(declare-fun x736 () x1282)
(declare-fun x598 () Bool)
(declare-fun x33 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x864 () x1282)
(declare-fun x536 () Int)
(declare-fun x1136 (x1282) Int)
(declare-fun x783 () Int)
(declare-fun x1084 () Int)
(declare-fun x231 () Int)
(declare-fun x1510 () x1282)
(declare-fun x101 () Bool)
(declare-fun x126 () Int)
(declare-fun x878 () Int)
(declare-fun x1131 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x304 () Bool)
(declare-fun x49 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x863 () Int)
(declare-fun x375 () Bool)
(declare-fun x515 () Bool)
(declare-fun x1095 () x1282)
(declare-fun x912 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x507 () Bool)
(declare-fun x183 () Int)
(declare-fun x1506 () Bool)
(declare-fun x584 () Bool)
(declare-fun x1117 () Int)
(declare-fun x881 () Int)
(declare-fun x178 () Int)
(declare-fun x135 () Int)
(declare-fun x679 () Int)
(declare-fun x832 () Int)
(declare-fun x405 () Bool)
(declare-fun x334 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x871 () Int)
(declare-fun x1427 () Int)
(declare-fun x1157 () x1282)
(declare-fun x331 () Bool)
(declare-fun x1225 () Int)
(declare-fun x1129 () Int)
(declare-fun x1274 () Bool)
(declare-fun x1310 () x1282)
(declare-fun x1513 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x50 () x1282)
(declare-fun x367 () x1282)
(declare-fun x349 () Int)
(declare-fun x1177 () Bool)
(declare-fun x701 () Bool)
(declare-fun x1417 () Int)
(declare-fun x819 () Int)
(declare-fun x450 () Bool)
(declare-fun x1253 () x1282)
(declare-fun x174 () Int)
(declare-fun x545 () Int)
(declare-fun x68 () Int)
(declare-fun x1374 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x499 () Bool)
(declare-fun x1410 () Int)
(declare-fun x1326 () Int)
(declare-fun x955 () Bool)
(declare-fun x382 () Int)
(declare-fun x414 () Int)
(declare-fun x316 () Bool)
(declare-fun x243 () Int)
(declare-fun x1023 () Bool)
(declare-fun x927 () Int)
(declare-fun x1424 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x739 () Int)
(declare-fun x1165 () Int)
(declare-fun x580 () Int)
(declare-fun x67 () Int)
(declare-fun x1380 () x1282)
(declare-fun x1027 () Int)
(declare-fun x483 () Int)
(declare-fun x69 () x1282)
(declare-fun x66 () Bool)
(declare-fun x1503 () x1282)
(declare-fun x1482 () Int)
(declare-fun x1259 () Bool)
(declare-fun x356 () Bool)
(declare-fun x695 () Int)
(declare-fun x168 () Bool)
(declare-fun x1369 () Int)
(declare-fun x428 () Int)
(declare-fun x722 () Int)
(declare-fun x522 () Bool)
(declare-fun x558 () Int)
(declare-fun x875 () Bool)
(declare-fun x110 (Int) Int)
(declare-fun x281 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x1318 () Bool)
(declare-fun x412 () Bool)
(declare-fun x1064 () x1282)
(declare-fun x1006 () Bool)
(declare-fun x817 () x1282)
(declare-fun x1279 () x1282)
(declare-fun x1004 () Bool)
(declare-fun x889 () Int)
(declare-fun x358 () Bool)
(declare-fun x581 () Bool)
(declare-fun x1455 () x1282)
(declare-fun x393 () Int)
(declare-fun x47 () x1282)
(declare-fun x1149 () Int)
(declare-fun x160 () Bool)
(declare-fun x265 (Int) Int)
(declare-fun x322 () Int)
(declare-fun x645 () Int)
(declare-fun x1030 () Int)
(declare-fun x1495 () Int)
(declare-fun x646 () Int)
(declare-fun x678 () Int)
(declare-fun x1201 () Int)
(declare-fun x1489 () Bool)
(declare-fun x735 () Int)
(declare-fun x1097 () Bool)
(declare-fun x284 () Int)
(declare-fun x1466 () Bool)
(declare-fun x726 (x1282) Int)
(declare-fun x1035 (Int) Int)
(declare-fun x353 () Int)
(declare-fun x1352 () Int)
(declare-fun x1074 () Int)
(declare-fun x1478 () Int)
(declare-fun x1233 () x1282)
(declare-fun x995 () x1282)
(declare-fun x1221 () Int)
(declare-fun x765 () Int)
(declare-fun x920 (Int) Int)
(declare-fun x466 () Int)
(declare-fun x546 () Int)
(declare-fun x764 () Bool)
(declare-fun x119 () Bool)
(declare-fun x115 () Bool)
(declare-fun x1191 () Int)
(declare-fun x181 () Int)
(declare-fun x399 () Int)
(declare-fun x858 () Int)
(declare-fun x117 () x1282)
(declare-fun x1280 () x1282)
(declare-fun x997 () Int)
(declare-fun x235 () Bool)
(declare-fun x28 () Int)
(declare-fun x1197 () Bool)
(declare-fun x310 () x1282)
(declare-fun x378 () Int)
(declare-fun x855 () Int)
(declare-fun x469 () Int)
(declare-fun x495 () Int)
(declare-fun x976 () Int)
(declare-fun x299 () Int)
(declare-fun x1519 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x176 (Int) Int)
(declare-fun x83 () Int)
(declare-fun x1001 () Int)
(declare-fun x1301 () Int)
(declare-fun x182 () Bool)
(declare-fun x1174 () x1282)
(declare-fun x296 () Bool)
(declare-fun x908 () Int)
(declare-fun x967 () Int)
(declare-fun x1516 () Bool)
(declare-fun x1248 () Int)
(declare-fun x242 () x1282)
(declare-fun x1152 () Bool)
(declare-fun x490 () Int)
(declare-fun x27 () Bool)
(declare-fun x9 () Int)
(declare-fun x512 () Bool)
(declare-fun x529 () Int)
(declare-fun x999 () Int)
(declare-fun x143 (Int) Int)
(declare-fun x732 () Bool)
(declare-fun x874 () Bool)
(declare-fun x716 () x1282)
(declare-fun x656 () Int)
(declare-fun x606 () Int)
(declare-fun x1358 () Bool)
(declare-fun x398 () Int)
(declare-fun x566 () Int)
(declare-fun x534 () x1282)
(declare-fun x292 () Int)
(declare-fun x1245 () Int)
(declare-fun x665 () Int)
(declare-fun x1229 () Int)
(declare-fun x204 () Int)
(declare-fun x1337 () x1282)
(declare-fun x433 () Bool)
(declare-fun x946 () Int)
(declare-fun x141 () Bool)
(declare-fun x1061 () Int)
(declare-fun x20 () Bool)
(declare-fun x455 () x1282)
(declare-fun x1183 () x1282)
(declare-fun x659 () Bool)
(declare-fun x1344 () Int)
(declare-fun x1093 () Bool)
(declare-fun x673 () x1282)
(declare-fun x1249 () Int)
(declare-fun x293 () Int)
(declare-fun x8 () Int)
(declare-fun x185 () Bool)
(declare-fun x748 () Bool)
(declare-fun x401 () Int)
(declare-fun x549 (x1282) Int)
(declare-fun x415 () Int)
(declare-fun x884 () Bool)
(declare-fun x623 () Int)
(declare-fun x180 () Int)
(declare-fun x1539 () Int)
(declare-fun x202 () Bool)
(declare-fun x264 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x157 () Bool)
(declare-fun x1235 () Int)
(declare-fun x302 () x1282)
(declare-fun x1080 () Int)
(declare-fun x442 () x1282)
(declare-fun x1415 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x1524 () Int)
(declare-fun x528 () Int)
(declare-fun x152 () Int)
(declare-fun x196 () x1282)
(declare-fun x1151 (x1282) Int)
(declare-fun x1480 () Int)
(declare-fun x1351 () Bool)
(declare-fun x845 () x1282)
(declare-fun x357 () Int)
(declare-fun x1000 () x1282)
(declare-fun x1103 () Bool)
(declare-fun x772 () Bool)
(declare-fun x1189 () x1282)
(declare-fun x1217 () Bool)
(declare-fun x85 () Int)
(declare-fun x654 () Int)
(declare-fun x1118 () Bool)
(declare-fun x16 () Int)
(declare-fun x102 () Int)
(declare-fun x760 () x1282)
(declare-fun x872 () Int)
(declare-fun x1465 () Int)
(declare-fun x1383 () Bool)
(declare-fun x371 () Int)
(declare-fun x629 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x1070 () Int)
(declare-fun x121 () x1282)
(declare-fun x461 () Int)
(declare-fun x631 () Int)
(declare-fun x1291 () Bool)
(declare-fun x535 () Int)
(declare-fun x826 () x1282)
(declare-fun x540 () Int)
(declare-fun x1024 () Int)
(declare-fun x1054 () Int)
(declare-fun x1088 () Int)
(declare-fun x1315 () Int)
(declare-fun x1493 () Int)
(declare-fun x44 () Bool)
(declare-fun x1040 () Int)
(declare-fun x1333 () Int)
(declare-fun x364 () Int)
(declare-fun x127 () Int)
(declare-fun x91 () Int)
(declare-fun x417 () Int)
(declare-fun x205 () Int)
(declare-fun x1182 (x1282) Int)
(declare-fun x1545 () Int)
(declare-fun x400 () Int)
(declare-fun x1300 () Bool)
(declare-fun x1028 () Int)
(declare-fun x198 (Int) Int)
(declare-fun x655 () Bool)
(declare-fun x411 () Int)
(declare-fun x552 () Bool)
(declare-fun x24 () Bool)
(declare-fun x448 () Int)
(declare-fun x1375 () Bool)
(declare-fun x244 () Int)
(declare-fun x81 () Bool)
(declare-fun x1525 () Int)
(declare-fun x608 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x803 () Int)
(declare-fun x1462 () Int)
(declare-fun x621 () x1282)
(declare-fun x484 () Bool)
(declare-fun x718 () Int)
(declare-fun x419 () Bool)
(declare-fun x757 () Int)
(declare-fun x1143 () Bool)
(declare-fun x978 () Int)
(declare-fun x116 () x1282)
(declare-fun x579 () x1282)
(declare-fun x742 () Int)
(declare-fun x526 () Int)
(declare-fun x1268 () Bool)
(declare-fun x1527 () Int)
(declare-fun x1454 () Bool)
(declare-fun x289 () Bool)
(declare-fun x328 () Int)
(declare-fun x155 () Int)
(declare-fun x642 () Int)
(declare-fun x472 () Int)
(declare-fun x616 () Int)
(declare-fun x1278 () Bool)
(declare-fun x974 () Int)
(declare-fun x846 (Int) Int)
(declare-fun x1512 () Int)
(declare-fun x75 () Int)
(declare-fun x114 () Bool)
(declare-fun x158 () x1282)
(declare-fun x84 () Int)
(declare-fun x754 () x1282)
(declare-fun x913 () Int)
(declare-fun x619 (Int) Int)
(declare-fun x593 () Int)
(declare-fun x1544 () Int)
(declare-fun x1376 () Int)
(declare-fun x232 () Bool)
(declare-fun x494 () Int)
(declare-fun x1026 () x1282)
(declare-fun x971 () Int)
(declare-fun x40 () Int)
(declare-fun x1294 () x1282)
(declare-fun x190 () Int)
(declare-fun x1146 () Bool)
(declare-fun x740 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x58 (Int Int) Int)
(declare-fun x612 () x1282)
(declare-fun x865 () x1282)
(declare-fun x1459 () Int)
(declare-fun x880 () Bool)
(declare-fun x929 () Bool)
(declare-fun x298 () Int)
(declare-fun x1429 () Int)
(declare-fun x1038 () Int)
(declare-fun x457 () Bool)
(declare-fun x1508 () Int)
(declare-fun x686 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x1528 () Int)
(declare-fun x1550 () Bool)
(declare-fun x918 () x1282)
(declare-fun x1537 () Bool)
(declare-fun x807 () Bool)
(declare-fun x274 () Bool)
(declare-fun x538 () Bool)
(declare-fun x437 () Bool)
(declare-fun x122 () Int)
(declare-fun x1334 () x1282)
(declare-fun x464 () Int)
(declare-fun x1067 () Bool)
(declare-fun x1371 () Int)
(declare-fun x372 () x1282)
(declare-fun x162 () x1282)
(declare-fun x1016 () Int)
(declare-fun x22 () Bool)
(declare-fun x342 () Bool)
(declare-fun x504 () Int)
(declare-fun x560 () Int)
(declare-fun x59 () Bool)
(declare-fun x1270 () x1282)
(declare-fun x601 () Bool)
(declare-fun x521 () Bool)
(declare-fun x658 () Int)
(declare-fun x975 () Int)
(declare-fun x210 () Int)
(declare-fun x111 () Int)
(declare-fun x1116 () Int)
(declare-fun x5 () Int)
(declare-fun x443 () Bool)
(declare-fun x633 () Int)
(declare-fun x810 () Int)
(declare-fun x1523 () Bool)
(declare-fun x335 () Bool)
(declare-fun x1171 () Int)
(declare-fun x876 () x1282)
(declare-fun x271 () Int)
(declare-fun x547 () Int)
(declare-fun x280 () Int)
(declare-fun x1232 (Int) Int)
(declare-fun x628 () Int)
(declare-fun x344 () Int)
(declare-fun x696 () Bool)
(declare-fun x965 () Int)
(declare-fun x165 () Int)
(declare-fun x1433 (x1282) Int)
(declare-fun x780 () Bool)
(declare-fun x1452 () Int)
(declare-fun x1425 () Bool)
(declare-fun x1055 () x1282)
(declare-fun x213 () Bool)
(declare-fun x603 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x745 () x1282)
(declare-fun x309 () Int)
(declare-fun x1350 () Int)
(declare-fun x1346 () Int)
(declare-fun x1213 () Bool)
(declare-fun x835 () Bool)
(declare-fun x124 () Int)
(declare-fun x217 () Int)
(declare-fun x1287 () x1282)
(declare-fun x768 () Int)
(declare-fun x1298 () Int)
(declare-fun x1393 (x1282) Int)
(declare-fun x1457 () Int)
(declare-fun x360 () Int)
(declare-fun x684 (x1282) Int)
(declare-fun x931 () Bool)
(declare-fun x261 () Int)
(declare-fun x485 () Bool)
(declare-fun x487 () x1282)
(declare-fun x1 () Bool)
(declare-fun x723 () x1282)
(declare-fun x794 () Int)
(declare-fun x915 () Int)
(declare-fun x936 () Int)
(declare-fun x1104 () Int)
(declare-fun x600 () Bool)
(declare-fun x319 () Bool)
(declare-fun x241 () Bool)
(declare-fun x403 () Bool)
(declare-fun x951 () x1282)
(declare-fun x100 () x1282)
(declare-fun x1338 () Int)
(declare-fun x787 () Int)
(declare-fun x1474 () Bool)
(declare-fun x418 () Int)
(declare-fun x266 () Bool)
(declare-fun x1290 () Int)
(declare-fun x820 () Int)
(declare-fun x667 () Int)
(declare-fun x440 () Bool)
(declare-fun x563 () Int)
(declare-fun x73 () x1282)
(declare-fun x988 () Bool)
(declare-fun x1363 () x1282)
(declare-fun x636 () Int)
(declare-fun x362 () x1282)
(declare-fun x914 () x1282)
(declare-fun x13 () Int)
(declare-fun x829 () Int)
(declare-fun x1227 () Int)
(declare-fun x1085 () x1282)
(declare-fun x78 () Bool)
(declare-fun x1042 () Int)
(declare-fun x919 () x1282)
(declare-fun x1105 () Int)
(declare-fun x1555 () Int)
(declare-fun x930 () x1282)
(declare-fun x842 () Bool)
(declare-fun x592 () Int)
(declare-fun x753 (Int) Int)
(declare-fun x439 () x1282)
(declare-fun x1271 () Bool)
(declare-fun x268 () Int)
(declare-fun x318 () Bool)
(declare-fun x1266 () Bool)
(declare-fun x46 () Bool)
(declare-fun x170 () Int)
(declare-fun x329 () Int)
(declare-fun x972 () Bool)
(declare-fun x899 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x94 () Int)
(declare-fun x11 () Int)
(declare-fun x192 () Bool)
(declare-fun x1373 () x1282)
(declare-fun x727 () Int)
(declare-fun x937 () Int)
(declare-fun x18 () Int)
(declare-fun x294 () Bool)
(declare-fun x870 () Bool)
(declare-fun x489 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x385 () Bool)
(declare-fun x672 () Int)
(declare-fun x1529 () Bool)
(declare-fun x624 () Bool)
(declare-fun x804 () x1282)
(declare-fun x1021 () Int)
(declare-fun x1396 () Int)
(declare-fun x488 () Int)
(declare-fun x368 () Bool)
(declare-fun x199 () Int)
(declare-fun x962 () Int)
(declare-fun x682 () Bool)
(declare-fun x260 () Int)
(declare-fun x1272 () x1282)
(declare-fun x822 () Int)
(declare-fun x1483 () Int)
(declare-fun x1440 () Int)
(declare-fun x1126 () Bool)
(declare-fun x776 () Bool)
(declare-fun x1311 () Int)
(declare-fun x1002 () Int)
(declare-fun x1281 () x1282)
(declare-fun x793 () Int)
(declare-fun x255 () x1282)
(declare-fun x338 () Int)
(declare-fun x861 () Int)
(declare-fun x1296 () Bool)
(declare-fun x594 () x1282)
(declare-fun x19 () Int)
(declare-fun x720 () x1282)
(declare-fun x468 () x1282)
(declare-fun x866 () Bool)
(declare-fun x802 () Int)
(declare-fun x909 () Bool)
(declare-fun x1047 () Int)
(declare-fun x384 () Int)
(declare-fun x218 () Bool)
(declare-fun x527 () x1282)
(declare-fun x939 () Int)
(declare-fun x112 () Bool)
(declare-fun x685 () Bool)
(declare-fun x901 () Int)
(declare-fun x973 () Int)
(declare-fun x771 () Int)
(declare-fun x681 () Int)
(declare-fun x195 () Int)
(declare-fun x341 () Int)
(declare-fun x565 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x207 () x1282)
(declare-fun x966 () Int)
(declare-fun x63 () Bool)
(declare-fun x801 () x1282)
(declare-fun x1386 () Int)
(declare-fun x539 () Int)
(declare-fun x45 () x1282)
(declare-fun x480 () Int)
(declare-fun x1541 (x1282) Int)
(declare-fun x503 () Int)
(declare-fun x333 () x1282)
(declare-fun x770 () Int)
(declare-fun x325 () Int)
(declare-fun x1114 () Bool)
(declare-fun x1422 () Int)
(declare-fun x445 () Bool)
(declare-fun x1010 () x1282)
(declare-fun x1353 () Int)
(declare-fun x404 () Int)
(declare-fun x675 () Bool)
(declare-fun x481 () x1282)
(declare-fun x775 () Int)
(declare-fun x394 () Bool)
(declare-fun x347 () Int)
(declare-fun x1162 () x1282)
(declare-fun x1518 () Int)
(declare-fun x1122 () Int)
(declare-fun x1019 () x1282)
(declare-fun x420 () Int)
(declare-fun x910 (x1282) Int)
(declare-fun x1154 () Int)
(declare-fun x1200 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x438 () Int)
(declare-fun x99 () Int)
(declare-fun x969 () Int)
(declare-fun x734 () x1282)
(declare-fun x175 () Bool)
(declare-fun x423 () Bool)
(declare-fun x943 () Int)
(declare-fun x1526 () x1282)
(declare-fun x782 () x1282)
(declare-fun x352 () Int)
(declare-fun x556 () x1282)
(declare-fun x1077 () Int)
(declare-fun x898 () Bool)
(declare-fun x1214 () Int)
(declare-fun x933 () Int)
(declare-fun x588 () x1282)
(declare-fun x1477 () Bool)
(declare-fun x1542 () x1282)
(declare-fun x572 () Int)
(declare-fun x446 () Int)
(declare-fun x1391 () Bool)
(declare-fun x154 () Bool)
(declare-fun x613 () Bool)
(declare-fun x76 () Int)
(declare-fun x738 () Int)
(declare-fun x1520 () Bool)
(declare-fun x297 () Bool)
(declare-fun x986 () x1282)
(declare-fun x1501 () Bool)
(declare-fun x60 () Int)
(declare-fun x39 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x777 () Int)
(declare-fun x1036 () Int)
(declare-fun x1045 () x1282)
(declare-fun x1163 () Int)
(declare-fun x1402 () x1282)
(declare-fun x56 () x1282)
(declare-fun x1034 () Int)
(declare-fun x1473 () Bool)
(declare-fun x104 () Bool)
(declare-fun x1044 () x1282)
(declare-fun x1187 () Bool)
(declare-fun x868 () Bool)
(declare-fun x345 () Int)
(declare-fun x1428 () Bool)
(declare-fun x641 () Int)
(declare-fun x128 () Int)
(declare-fun x917 () Bool)
(declare-fun x758 (Int) x1282)
(declare-fun x2 () Int)
(declare-fun x514 () Int)
(declare-fun x692 () Int)
(declare-fun x637 () Int)
(declare-fun x392 () Bool)
(declare-fun x987 () Int)
(declare-fun x1269 (Int) Int)
(declare-fun x1289 () Bool)
(declare-fun x359 () Bool)
(declare-fun x890 (Int) Int)
(declare-fun x4 () Int)
(declare-fun x139 () Bool)
(declare-fun x698 () Int)
(declare-fun x62 () Bool)
(declare-fun x365 () Int)
(declare-fun x247 (Int) Int)
(declare-fun x622 () Bool)
(declare-fun x1017 () Int)
(declare-fun x300 () x1282)
(declare-fun x963 () Int)
(declare-fun x630 () Int)
(declare-fun x1124 () Bool)
(declare-fun x406 () Int)
(declare-fun x795 () Int)
(declare-fun x1438 () Bool)
(declare-fun x1198 () Int)
(declare-fun x896 () Bool)
(declare-fun x537 () Int)
(declare-fun x1252 () Int)
(declare-fun x1511 () Int)
(declare-fun x303 () Int)
(declare-fun x666 () Int)
(declare-fun x1041 () Bool)
(declare-fun x1092 () Int)
(declare-fun x326 () Int)
(declare-fun x851 () Bool)
(declare-fun x587 () Int)
(declare-fun x77 () Bool)
(declare-fun x647 () Int)
(declare-fun x834 () Bool)
(declare-fun x25 () x1282)
(declare-fun x1209 () Int)
(declare-fun x510 () Int)
(declare-fun x147 () Int)
(declare-fun x93 () Bool)
(declare-fun x888 () x1282)
(declare-fun x773 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x750 () Int)
(declare-fun x1499 () Bool)
(declare-fun x992 () Int)
(declare-fun x769 () Int)
(declare-fun x151 () Bool)
(declare-fun x263 () Int)
(declare-fun x700 () Int)
(declare-fun x215 () Int)
(declare-fun x1190 (Int) Int)
(declare-fun x1195 () Int)
(declare-fun x662 () Int)
(declare-fun x1099 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x1008 () Int)
(declare-fun x1286 () Bool)
(declare-fun x779 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x585 () Int)
(declare-fun x557 () Int)
(declare-fun x1283 () Bool)
(declare-fun x991 () Bool)
(declare-fun x240 () Int)
(declare-fun x14 () Bool)
(declare-fun x211 () Int)
(declare-fun x129 () Int)
(declare-fun x1414 () x1282)
(declare-fun x53 () Bool)
(declare-fun x350 () x1282)
(declare-fun x1556 () x1282)
(declare-fun x942 () Bool)
(declare-fun x219 () Int)
(declare-fun x57 () x1282)
(declare-fun x1132 () Int)
(declare-fun x1267 () x1282)
(declare-fun x847 () Bool)
(declare-fun x1432 () Int)
(declare-fun x741 () x1282)
(declare-fun x1475 () Bool)
(declare-fun x1098 () Int)
(declare-fun x1360 () Bool)
(declare-fun x676 () Int)
(declare-fun x543 () Int)
(declare-fun x239 () Int)
(declare-fun x1394 () Bool)
(declare-fun x1178 () Bool)
(declare-fun x90 () Int)
(declare-fun x1490 () Int)
(declare-fun x1437 () x1282)
(declare-fun x424 () Int)
(declare-fun x1015 () Bool)
(declare-fun x895 () x1282)
(declare-fun x471 () Bool)
(declare-fun x904 () Bool)
(declare-fun x363 () Int)
(declare-fun x1003 () Bool)
(declare-fun x604 () Int)
(declare-fun x996 () Int)
(declare-fun x731 () Int)
(declare-fun x1046 () Int)
(declare-fun x79 () x1282)
(declare-fun x990 () Bool)
(declare-fun x430 () Int)
(declare-fun x799 () Int)
(declare-fun x989 () Int)
(declare-fun x1485 () Bool)
(declare-fun x1299 () Int)
(declare-fun x644 () Int)
(declare-fun x632 (x1282) Int)
(declare-fun x254 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x841 () Int)
(declare-fun x1412 () Int)
(declare-fun x454 () Bool)
(declare-fun x926 () Bool)
(declare-fun x1313 () Int)
(declare-fun x590 () Bool)
(declare-fun x749 () x1282)
(declare-fun x87 () Int)
(declare-fun x282 () Bool)
(declare-fun x730 () Int)
(declare-fun x1086 () x1282)
(declare-fun x1043 () Int)
(declare-fun x64 () Int)
(declare-fun x687 () Int)
(declare-fun x849 () Int)
(declare-fun x1329 () x1282)
(declare-fun x677 () Bool)
(declare-fun x530 () Bool)
(declare-fun x1211 () Int)
(declare-fun x216 () Int)
(declare-fun x573 () x1282)
(declare-fun x1288 () Bool)
(declare-fun x800 () Int)
(declare-fun x1113 () Int)
(declare-fun x1404 () Bool)
(declare-fun x311 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x449 () Int)
(declare-fun x1238 () Int)
(declare-fun x511 () x1282)
(declare-fun x330 () x1282)
(declare-fun x1205 () Bool)
(declare-fun x610 () Int)
(declare-fun x1297 () Bool)
(declare-fun x707 () x1282)
(declare-fun x859 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x1208 () Int)
(declare-fun x172 () Int)
(declare-fun x541 () Bool)
(declare-fun x413 () Int)
(declare-fun x728 () x1282)
(declare-fun x1076 () Int)
(declare-fun x1012 () Bool)
(declare-fun x812 () x1282)
(declare-fun x1434 () x1282)
(declare-fun x223 () Bool)
(declare-fun x1138 () Int)
(declare-fun x1547 () x1282)
(declare-fun x940 (Int) Int)
(declare-fun x273 () Bool)
(declare-fun x1471 () Int)
(declare-fun x1185 () x1282)
(declare-fun x397 () x1282)
(declare-fun x994 () Int)
(declare-fun x1176 () Int)
(declare-fun x1048 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x1538 () x1282)
(declare-fun x467 () x1282)
(declare-fun x1186 () Bool)
(declare-fun x279 () x1282)
(declare-fun x1145 () x1282)
(declare-fun x1335 () Int)
(declare-fun x1167 () Bool)
(declare-fun x1387 () x1282)
(declare-fun x856 () Bool)
(declare-fun x1241 () Int)
(declare-fun x1367 () Int)
(declare-fun x830 () x1282)
(declare-fun x544 () Int)
(declare-fun x1110 () Bool)
(declare-fun x825 () x1282)
(declare-fun x1106 () Int)
(declare-fun x354 () x1282)
(declare-fun x729 () Bool)
(declare-fun x369 () Bool)
(declare-fun x376 () Int)
(declare-fun x1395 () x1282)
(declare-fun x245 () x1282)
(declare-fun x1100 () Int)
(declare-fun x35 () Int)
(declare-fun x705 () Int)
(declare-fun x885 () Bool)
(declare-fun x257 () Int)
(declare-fun x532 () Int)
(declare-fun x88 () Bool)
(declare-fun x1488 () Int)
(declare-fun x651 () Int)
(declare-fun x1540 () Int)
(declare-fun x1065 () Int)
(declare-fun x474 () Int)
(declare-fun x1439 () Int)
(declare-fun x1025 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x55 () Int)
(declare-fun x1431 () x1282)
(declare-fun x1554 () Int)
(declare-fun x108 () Int)
(declare-fun x947 () Bool)
(declare-fun x337 () x1282)
(declare-fun x985 () x1282)
(declare-fun x905 () Int)
(declare-fun x373 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x1202 () x1282)
(declare-fun x493 () x1282)
(declare-fun x305 () Bool)
(declare-fun x1504 () Int)
(declare-fun x968 () Bool)
(declare-fun x1533 () Int)
(declare-fun x944 () x1282)
(declare-fun x237 () Int)
(declare-fun x857 () Bool)
(declare-fun x887 () Int)
(declare-fun x669 () Int)
(declare-fun x567 () x1282)
(declare-fun x1491 () x1282)
(declare-fun x1460 () Int)
(declare-fun x792 () Bool)
(declare-fun x761 () Bool)
(declare-fun x657 () x1282)
(declare-fun x277 () x1282)
(declare-fun x226 (Int) Int)
(declare-fun x145 () Int)
(declare-fun x1534 () x1282)
(declare-fun x607 () Bool)
(declare-fun x186 () Bool)
(declare-fun x957 () Int)
(declare-fun x1147 () Int)
(declare-fun x1081 () Int)
(declare-fun x980 () Bool)
(declare-fun x343 (x1282) Int)
(declare-fun x690 () Bool)
(declare-fun x1257 () Int)
(declare-fun x332 () Bool)
(declare-fun x516 () Bool)
(declare-fun x714 () Bool)
(declare-fun x1388 () Int)
(declare-fun x1430 () Bool)
(declare-fun x272 () Int)
(declare-fun x1355 () Bool)
(declare-fun x1125 (x1282) Int)
(declare-fun x1062 (Int) Int)
(declare-fun x133 () x1282)
(declare-fun x212 () x1282)
(declare-fun x410 () Int)
(declare-fun x37 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x12 () Int)
(declare-fun x229 () Bool)
(declare-fun x982 () Int)
(declare-fun x1347 () Bool)
(declare-fun x625 () x1282)
(declare-fun x312 () Int)
(declare-fun x1553 () Int)
(declare-fun x1479 () x1282)
(declare-fun x314 () x1282)
(declare-fun x221 () Int)
(declare-fun x570 () Int)
(declare-fun x953 () Int)
(declare-fun x844 () Int)
(declare-fun x1258 () Bool)
(declare-fun x548 () Int)
(declare-fun x1543 () Int)
(declare-fun x948 () x1282)
(declare-fun x877 () Bool)
(declare-fun x339 () x1282)
(declare-fun x935 () x1282)
(declare-fun x1304 () Int)
(declare-fun x959 () Int)
(declare-fun x1382 () Bool)
(declare-fun x220 () Int)
(declare-fun x709 () Int)
(declare-fun x907 () Bool)
(declare-fun x1251 () x1282)
(declare-fun x1322 () Int)
(declare-fun x704 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x21 () Int)
(declare-fun x952 (Int) Int)
(declare-fun x1448 () x1282)
(declare-fun x1090 () Int)
(declare-fun x850 () Int)
(declare-fun x578 () Bool)
(declare-fun x1079 () Int)
(declare-fun x798 () Int)
(declare-fun x1255 () Int)
(declare-fun x120 () Int)
(declare-fun x1381 (x1282) Int)
(declare-fun x422 () Int)
(declare-fun x648 () Int)
(declare-fun x1069 () Bool)
(declare-fun x1444 () Int)
(declare-fun x1421 () Bool)
(declare-fun x396 () Int)
(declare-fun x478 () Int)
(declare-fun x315 () Int)
(declare-fun x635 () Bool)
(declare-fun x197 () Int)
(declare-fun x1275 () Int)
(declare-fun x391 () Int)
(declare-fun x1419 () Int)
(declare-fun x387 () Bool)
(declare-fun x660 () Bool)
(declare-fun x618 () Int)
(declare-fun x1020 () Bool)
(declare-fun x150 () Int)
(declare-fun x575 () Int)
(declare-fun x1115 () Int)
(declare-fun x831 () x1282)
(declare-fun x429 () Int)
(declare-fun x766 () Int)
(declare-fun x836 () Bool)
(declare-fun x1308 () Int)
(declare-fun x214 () Bool)
(declare-fun x6 () Bool)
(declare-fun x1321 () Int)
(declare-fun x301 () x1282)
(declare-fun x70 (Int) Int)
(declare-fun x902 () Int)
(declare-fun x712 () Int)
(declare-fun x837 () Int)
(declare-fun x848 (x1282) Int)
(declare-fun x1349 () x1282)
(declare-fun x1384 () Bool)
(declare-fun x784 () x1282)
(declare-fun x523 () x1282)
(declare-fun x998 () Int)
(declare-fun x203 () Int)
(declare-fun x1411 () Bool)
(declare-fun x508 () x1282)
(declare-fun x1312 () Int)
(declare-fun x1377 () Int)
(declare-fun x146 () x1282)
(declare-fun x1127 () Int)
(declare-fun x1552 () Int)
(declare-fun x313 () Int)
(declare-fun x10 () Int)
(declare-fun x1276 () Int)
(declare-fun x1263 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x1260 () Int)
(declare-fun x733 () Int)
(declare-fun x840 () Bool)
(declare-fun x788 () Int)
(declare-fun x1175 () Bool)
(declare-fun x713 () Bool)
(declare-fun x1111 (x1282) Int)
(declare-fun x921 () Int)
(declare-fun x52 () Int)
(declare-fun x554 () Bool)
(declare-fun x823 () Bool)
(declare-fun x164 () Bool)
(declare-fun x177 () Int)
(declare-fun x383 () Int)
(declare-fun x596 () Int)
(declare-fun x1237 () Int)
(declare-fun x416 () Int)
(declare-fun x1295 () Int)
(declare-fun x1256 () Int)
(declare-fun x1293 () Int)
(declare-fun x796 () Int)
(declare-fun x1210 () Bool)
(declare-fun x48 () Int)
(declare-fun x1261 () Int)
(declare-fun x251 () Int)
(declare-fun x892 () Int)
(declare-fun x1463 () Bool)
(declare-fun x500 () Int)
(declare-fun x118 () Int)
(declare-fun x1060 () Int)
(declare-fun x724 () Bool)
(declare-fun x283 () x1282)
(declare-fun x1330 () x1282)
(declare-fun x1262 () Int)
(declare-fun x1361 () Int)
(declare-fun x981 () Bool)
(declare-fun x759 () Bool)
(declare-fun x258 () Int)
(declare-fun x380 () Bool)
(declare-fun x582 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x894 () Bool)
(declare-fun x161 () Int)
(declare-fun x1031 () Int)
(declare-fun x970 () Int)
(declare-fun x744 () x1282)
(declare-fun x786 () Int)
(declare-fun x1058 () Bool)
(declare-fun x23 () Bool)
(declare-fun x767 () Int)
(declare-fun x262 () Int)
(declare-fun x1356 () Int)
(declare-fun x470 () Bool)
(declare-fun x290 () Bool)
(declare-fun x1401 () x1282)
(declare-fun x993 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x1059 () Int)
(declare-fun x721 () x1282)
(declare-fun x130 () Int)
(declare-fun x1558 () Int)
(declare-fun x751 () x1282)
(declare-fun x743 () Int)
(declare-fun x1166 () x1282)
(declare-fun x191 () Bool)
(declare-fun x498 () Bool)
(declare-fun x506 () Int)
(declare-fun x1407 () Bool)
(declare-fun x253 () Bool)
(declare-fun x1535 () Int)
(declare-fun x1372 () Bool)
(declare-fun x683 () Bool)
(declare-fun x238 () Int)
(declare-fun x432 () Bool)
(declare-fun x379 () Int)
(declare-fun x706 () Bool)
(declare-fun x1441 (x1282) Int)
(declare-fun x456 () Int)
(declare-fun x389 () Bool)
(declare-fun x72 () Bool)
(declare-fun x553 () Int)
(declare-fun x113 (x1282) Int)
(declare-fun x1362 () Int)
(declare-fun x447 () Bool)
(declare-fun x482 () Bool)
(declare-fun x938 () Bool)
(declare-fun x945 () Int)
(declare-fun x577 () x1282)
(declare-fun x1184 () Int)
(declare-fun x142 () x1282)
(declare-fun x32 () Bool)
(declare-fun x1194 () Int)
(declare-fun x1022 () Int)
(declare-fun x897 () Int)
(declare-fun x173 () Int)
(declare-fun x351 () Bool)
(declare-fun x288 () Bool)
(declare-fun x97 () x1282)
(declare-fun x1009 () Int)
(declare-fun x752 () Int)
(declare-fun x71 (Int) Int)
(declare-fun x790 () x1282)
(declare-fun x98 () Int)
(declare-fun x252 () x1282)
(declare-fun x815 () Int)
(declare-fun x1072 () Int)
(declare-fun x1158 () Int)
(declare-fun x15 () Int)
(declare-fun x1075 () x1282)
(declare-fun x689 () x1282)
(declare-fun x80 () Int)
(declare-fun x586 () Int)
(declare-fun x3 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x781 () Int)
(declare-fun x188 () Bool)
(declare-fun x275 () Bool)
(declare-fun x670 () Bool)
(declare-fun x259 () Int)
(declare-fun x1013 () Bool)
(declare-fun x1456 () x1282)
(declare-fun x194 () Bool)
(declare-fun x179 () x1282)
(declare-fun x1218 () Int)
(declare-fun x569 () Bool)
(declare-fun x1357 () Int)
(declare-fun x1265 () Int)
(declare-fun x1180 (x1282) Int)
(declare-fun x922 () Int)
(declare-fun x1306 () Int)
(declare-fun x1336 () Int)
(declare-fun x1390 () Int)
(declare-fun x225 () Int)
(declare-fun x171 () Bool)
(declare-fun x1487 () x1282)
(declare-fun x317 () Int)
(declare-fun x627 () Bool)
(declare-fun x320 () x1282)
(declare-fun x797 () Bool)
(declare-fun x562 () Bool)
(declare-fun x452 () Bool)
(declare-fun x814 () Int)
(declare-fun x492 () Int)
(declare-fun x843 () Int)
(declare-fun x977 () Bool)
(declare-fun x95 () Int)
(declare-fun x1442 () Bool)
(declare-fun x134 () Int)
(declare-fun x879 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x755 () x1282)
(declare-fun x355 () Bool)
(declare-fun x307 () x1282)
(declare-fun x1449 () Bool)
(declare-fun x501 () x1282)
(declare-fun x41 () Int)
(declare-fun x74 () Int)
(declare-fun x1345 () Int)
(declare-fun x785 () Int)
(declare-fun x136 () Bool)
(declare-fun x1423 () Int)
(declare-fun x1052 () Int)
(declare-fun x925 () Int)
(declare-fun x1236 () Int)
(declare-fun x348 () Int)
(declare-fun x906 () Int)
(declare-fun x964 () Int)
(declare-fun x346 () Bool)
(declare-fun x589 () x1282)
(declare-fun x1014 () Int)
(declare-fun x149 () Int)
(declare-fun x737 () Int)
(declare-fun x425 () Int)
(declare-fun x502 () x1282)
(declare-fun x638 () Bool)
(declare-fun x206 () Int)
(declare-fun x497 () Bool)
(declare-fun x715 () x1282)
(declare-fun x984 (Int) Int)
(declare-fun x950 () Bool)
(declare-fun x597 () Int)
(declare-fun x827 () Int)
(declare-fun x650 () Bool)
(declare-fun x1328 () Int)
(declare-fun x828 () x1282)
(declare-fun x1130 () Int)
(declare-fun x340 () Bool)
(declare-fun x1413 () Int)
(declare-fun x1063 () Int)
(declare-fun x591 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x833 () Bool)
(declare-fun x518 () Int)
(declare-fun x1049 (Int) Int)
(declare-fun x1509 () Int)
(define-fun x1179 ((x1282 x1282) (x1204 Int)) x1282 (ite ((_ is x674) x1282) (x674 (x818 x1282) (+ x1204 (x409 x1282))) (ite ((_ is x505) x1282) (x505 (x954 x1282) (x643 x1282) (+ x1204 (x838 x1282))) (x869 (+ (x1348 x1282) x1204)))))
(define-fun x479 ((x89 Int)) Int (ite (and (<= 0 x89) (< x89 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x89 (- x89 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x295 ((x89 Int)) Int (ite (and (< x89 0) (>= x89 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x89 115792089237316195423570985008687907853269984665640564039457584007913129639936) x89))
(define-fun x106 ((x1181 Int)) Bool (and (<= 0 x1181) (< x1181 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1420 ((x1181 Int)) Bool (and (= x1181 (x58 x1181 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x58 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1181) x1181)))
(define-fun x1370 ((x1181 Int)) Bool (and (= (x58 0 x1181) 0) (= (x58 x1181 0) 0)))
(define-fun x1102 ((x1181 Int)) Bool (= (x58 x1181 x1181) x1181))
(define-fun x719 ((x1181 Int)) Bool (and (x1102 x1181) (x1370 x1181) (x1420 x1181)))
(define-fun x1397 ((x1181 Int)) Bool (= (x58 1461501637330902918203684832716283019655932542975 x1181) (x58 1461501637330902918203684832716283019655932542975 (x58 1461501637330902918203684832716283019655932542975 x1181))))
(define-fun x1033 ((x1181 Int)) Bool (=> (and (< x1181 1461501637330902918203684832716283019655932542976) (>= x1181 0)) (= x1181 (x58 1461501637330902918203684832716283019655932542975 x1181))))
(define-fun x661 ((x1181 Int)) Bool (=> (= (x58 1461501637330902918203684832716283019655932542975 x1181) x1181) (and (<= 0 x1181) (> 1461501637330902918203684832716283019655932542976 x1181))))
(define-fun x958 ((x1181 Int)) Bool (=> (and (>= x1181 1461501637330902918203684832716283019655932542976) (> 2923003274661805836407369665432566039311865085952 x1181)) (= (- x1181 1461501637330902918203684832716283019655932542976) (x58 1461501637330902918203684832716283019655932542975 x1181))))
(define-fun x1285 ((x1181 Int) (x1135 Int)) Bool (and (>= x1135 0) (= x1181 (+ (x58 1461501637330902918203684832716283019655932542975 x1181) (* 1461501637330902918203684832716283019655932542976 x1135)))))
(define-fun x893 ((x1181 Int) (x688 Int)) Bool (and (x1285 x1181 x688) (x1397 x1181) (x958 x1181) (x661 x1181) (x1033 x1181)))
(define-fun x509 ((x1181 Int) (x1135 Int)) Bool (= (x58 x1181 x1135) (x58 x1135 x1181)))
(define-fun x1108 ((x1181 Int) (x1135 Int)) Bool (and (=> (<= 0 x1135) (<= (x58 x1181 x1135) x1135)) (=> (<= 0 x1181) (>= x1181 (x58 x1181 x1135))) (>= (x58 x1181 x1135) 0)))
(define-fun x725 ((x1181 Int) (x1135 Int)) Bool (and (x509 x1181 x1135) (x1108 x1181 x1135)))
(define-fun x1450 ((x1181 Int) (x688 Int)) Bool (and (x893 x1181 x688) (x725 x1181 1461501637330902918203684832716283019655932542975)))
(define-fun x571 ((x1181 Int)) Bool (= (x58 26959946667150639794667015087019630673637144422540572481103610249215 (x58 26959946667150639794667015087019630673637144422540572481103610249215 x1181)) (x58 26959946667150639794667015087019630673637144422540572481103610249215 x1181)))
(define-fun x163 ((x1181 Int)) Bool (=> (and (<= 0 x1181) (< x1181 26959946667150639794667015087019630673637144422540572481103610249216)) (= x1181 (x58 26959946667150639794667015087019630673637144422540572481103610249215 x1181))))
(define-fun x1011 ((x1181 Int)) Bool (=> (= (x58 26959946667150639794667015087019630673637144422540572481103610249215 x1181) x1181) (and (>= x1181 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1181))))
(define-fun x236 ((x1181 Int)) Bool (=> (and (>= x1181 26959946667150639794667015087019630673637144422540572481103610249216) (> 53919893334301279589334030174039261347274288845081144962207220498432 x1181)) (= (- x1181 26959946667150639794667015087019630673637144422540572481103610249216) (x58 26959946667150639794667015087019630673637144422540572481103610249215 x1181))))
(define-fun x278 ((x1181 Int) (x1135 Int)) Bool (and (>= x1135 0) (= (+ (x58 26959946667150639794667015087019630673637144422540572481103610249215 x1181) (* 26959946667150639794667015087019630673637144422540572481103610249216 x1135)) x1181)))
(define-fun x762 ((x1181 Int) (x688 Int)) Bool (and (x278 x1181 x688) (x236 x1181) (x163 x1181) (x571 x1181) (x1011 x1181)))
(define-fun x1549 ((x1181 Int) (x688 Int)) Bool (and (x762 x1181 x688) (x725 x1181 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1109 ((x1181 Int)) Bool (= (x58 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1181) (x58 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x58 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1181))))
(define-fun x407 ((x1181 Int)) Bool (=> (and (> 32 x1181) (<= 0 x1181)) (= 0 (x58 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1181))))
(define-fun x250 ((x1181 Int) (x1135 Int) (x1018 Int) (x960 Int)) Bool (and (= x1181 (+ x1135 (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x960) (* 32 x1018))) (= (x58 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1181) (* x1018 32)) (>= x1018 0) (<= 0 x960) (> 32 x1135) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x1018) (>= x1135 0) (< x960 1)))
(define-fun x42 ((x1181 Int) (x386 Int) (x43 Int) (x517 Int)) Bool (and (x250 x1181 x386 x43 x517) (x1109 x1181) (x407 x1181)))
(define-fun x903 ((x1181 Int) (x386 Int) (x43 Int) (x517 Int)) Bool (and (x42 x1181 x386 x43 x517) (x725 x1181 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x103 ((x267 Int)) Int (x143 x267))
(define-fun x306 ((x267 Int)) Int (ite (= 128 x267) x84 (x1232 x267)))
(define-fun x711 ((x267 Int)) Int (ite (and (>= x267 160) (> (+ x237 160) x267)) (x143 (+ (- x267 160) x129)) (x306 x267)))
(define-fun x1507 ((x267 Int)) Int (ite (= x267 x722) 0 (x711 x267)))
(define-fun x1364 ((x267 Int)) Int (ite (and (< x267 (+ x1104 x911)) (<= x911 x267)) (x143 (+ x398 (- x267 x911))) (x753 x267)))
(define-fun x1403 ((x267 x1282)) Int (ite (= x166 x267) x51 (x1381 x267)))
(define-fun x86 ((x267 x1282)) Int (ite (= x1196 x267) x51 (x1381 x267)))
(define-fun x1188 ((x267 x1282)) Int (ite (= x715 x267) x51 (x1136 x267)))
(define-fun x1531 ((x267 x1282)) Int (ite (= x361 x267) x51 (x1136 x267)))
(define-fun x36 ((x267 x1282)) Int (ite (and x1133 x1103) (x1136 x267) (ite (and x609 x137) (x1381 x267) (ite (and (not x650) x896) (x1188 x267) (x1531 x267)))))
(define-fun x1222 ((x267 x1282)) Int (ite (= x267 x736) x51 (x1441 x267)))
(define-fun x184 ((x267 x1282)) Int (ite (= x267 x594) x51 (x1441 x267)))
(define-fun x1247 ((x267 x1282)) Int (ite (= x267 x1426) x51 (x1441 x267)))
(define-fun x542 ((x267 x1282)) Int (ite (= x760 x267) x51 (x848 x267)))
(define-fun x336 ((x267 x1282)) Int (ite (= x267 x1086) x51 (x848 x267)))
(define-fun x1500 ((x267 x1282)) Int (ite (= x1287 x267) x51 (x848 x267)))
(define-fun x1228 ((x267 x1282)) Int (ite (and x1103 x1133) (x848 x267) (ite (and x609 x137) (x1441 x267) (ite (and (not x659) x1470 (not x1146)) (x542 x267) (ite (and x1470 x1146 (not x659)) (x336 x267) (x1500 x267))))))
(define-fun x1250 ((x267 x1282)) Int (ite (= x100 x267) x543 (x663 x267)))
(define-fun x811 ((x267 x1282)) Int (ite (= x267 x615) x1432 (x1151 x267)))
(define-fun x1409 ((x267 x1282)) Int (ite (and x896 (not x650)) (x811 x267) (x1151 x267)))
(define-fun x1206 ((x267 x1282)) Int (ite (and x1103 x1133) (x1151 x267) (ite (and x609 x137) (x663 x267) (x1409 x267))))
(define-fun x1083 ((x267 x1282)) Int (ite (= x267 x1155) x404 (x726 x267)))
(define-fun x169 ((x267 x1282)) Int (ite (= x826 x267) x563 (x1180 x267)))
(define-fun x1548 ((x267 x1282)) Int (ite (and x1470 (not x1146) (not x659)) (x169 x267) (x1180 x267)))
(define-fun x824 ((x267 x1282)) Int (ite (= x283 x267) 0 (x343 x267)))
(define-fun x125 ((x267 x1282)) Int (ite (and x1178 (not x334) x1454) (x343 x267) (ite (and (not x1454) x1178) (x113 x267) (x824 x267))))
(define-fun x327 ((x267 x1282)) Int (ite (= x556 x267) 0 (x125 x267)))
(define-fun x520 ((x267 x1282)) Int (ite (= x267 x721) x1043 (x1125 x267)))
(define-fun x789 ((x267 x1282)) Int (ite (and x119 x1358) (x1125 x267) (x520 x267)))
(define-fun x1193 ((x267 Int)) Int (ite (= x267 x1386) x606 (x940 x267)))
(define-fun x806 ((x267 Int)) Int (ite (= x267 x1022) x853 (x1193 x267)))
(define-fun x882 ((x267 Int)) Int (ite (and x1485 x119) (x940 x267) (x806 x267)))
(define-fun x17 ((x267 Int)) Int (ite (= x267 x1052) x545 (x882 x267)))
(define-fun x427 ((x267 Int)) Int (ite (= x267 x697) x118 (x198 x267)))
(define-fun x664 ((x267 Int)) Int (ite (= x267 x953) x1350 (x890 x267)))
(define-fun x862 ((x267 Int)) Int (ite (= x1459 x267) x777 (x664 x267)))
(define-fun x159 ((x267 Int)) Int (ite (and x1470 (not x659) (not x1146)) (x862 x267) (ite (and (not x659) x1470 x1146) (x862 x267) (x890 x267))))
(define-fun x222 ((x267 Int)) Int (ite (= x881 x267) x658 (x159 x267)))
(define-fun x1087 ((x267 Int)) Int (ite (= x74 x267) x1070 (x952 x267)))
(define-fun x1121 ((x267 Int)) Int (ite (and (not x1383) (not x470) x1020 x896) (x952 x267) (ite (and (not x470) (not x1020) x896) (x619 x267) (x1087 x267))))
(define-fun x519 ((x267 Int)) Int (ite (and x1133 x1103) (x890 x267) (ite (and x137 x609) (x940 x267) (ite (and x896 (not x470)) (x1121 x267) (x619 x267)))))
(define-fun x860 ((x267 Int)) Int (ite (= x267 x1452) x1517 (x519 x267)))
(define-fun x208 ((x267 Int)) Int (ite (= x267 x819) x366 (x860 x267)))
(define-fun x1216 ((x267 Int)) Int (ite (= x267 x1076) x739 (x208 x267)))
(define-fun x54 ((x267 Int)) Int (ite (= x338 x267) x1343 (x1216 x267)))
(define-fun x1239 ((x267 Int)) Int (ite (= x827 x267) 32 (x54 x267)))
(define-fun x900 ((x267 Int)) Int (ite (= x648 x267) x799 (x71 x267)))
(define-fun x1057 ((x267 Int)) Int (ite (= x924 x267) 0 (x576 x267)))
(define-fun x634 ((x267 x1282)) Int (ite (= x267 x1389) x10 (x1111 x267)))
(define-fun x486 ((x267 x1282)) Int (ite (and x1167 x729) (x1111 x267) (x634 x267)))
(define-fun x1317 ((x267 Int)) Int (ite (= x267 0) 1 (x846 x267)))
(define-fun x431 ((x267 Int)) Int (ite (= x267 0) 1 (x846 x267)))
(define-fun x809 ((x267 Int)) Int (ite (and x807 x1128) (x1317 x267) (x431 x267)))
(define-fun x201 ((x267 Int)) Int (ite (= x586 x267) x973 (x70 x267)))
(define-fun x928 ((x267 Int)) Int (ite (= x267 x586) x546 (x70 x267)))
(define-fun x774 ((x267 Int)) Int (ite (= x586 x267) x383 (x265 x267)))
(define-fun x559 ((x267 Int)) Int (ite (and (> (+ x383 x1552) x267) (<= x1552 x267)) (x809 (+ (- x267 x1552) 0)) (x774 x267)))
(define-fun x233 ((x267 Int)) Int (ite (and (not x419) x351) (x559 x267) (x265 x267)))
(define-fun x1365 ((x267 Int)) Int (ite (= x244 x267) x1517 (x233 x267)))
(define-fun x285 ((x267 Int)) Int (ite (= x267 x1073) x999 (x1365 x267)))
(define-fun x1476 ((x267 Int)) Int (ite (= x267 x800) x1209 (x285 x267)))
(define-fun x599 ((x267 Int)) Int (ite (= x267 x425) x1059 (x1476 x267)))
(define-fun x746 ((x267 Int)) Int (ite (= x967 x267) 32 (x599 x267)))
(define-fun x395 ((x267 Int)) Int (ite (= x267 x438) x365 (x1190 x267)))
(define-fun x883 ((x267 Int)) Int (ite (= x267 x1484) 0 (x226 x267)))
(define-fun x1302 ((x267 x1282)) Int (ite (= (x758 274184521717934524641157099916833587206) x267) x210 (x684 x267)))
(define-fun x703 ((x267 x1282)) Int (ite (= (x758 x1338) x267) x540 (x1302 x267)))
(define-fun x1277 ((x267 x1282)) Int (ite (= x267 (x758 x1338)) x1332 (x703 x267)))
(define-fun x131 ((x267 x1282)) Int (ite (= (x758 274184521717934524641157099916833587206) x267) x68 (x1277 x267)))
(define-fun x1502 ((x267 x1282)) Int (ite (= (x758 274184521717934524641157099916833587206) x267) x29 (x131 x267)))
(define-fun x38 ((x267 x1282)) Int (ite (= (x758 x855) x267) x1042 (x1502 x267)))
(define-fun x1240 ((x267 x1282)) Int (ite (= x267 x801) x1072 (x551 x267)))
(define-fun x140 ((x267 x1282)) Int (ite (= x267 x567) x7 (x1240 x267)))
(define-fun x426 ((x267 x1282)) Int (ite (and x807 x1128) (x140 x267) (x551 x267)))
(define-fun x148 ((x267 x1282)) Int (ite (= x1455 x267) x1535 (x426 x267)))
(define-fun x1148 ((x267 Int)) Int (ite (= 0 x267) 1 (x1269 x267)))
(define-fun x270 ((x267 Int)) Int (ite (= x267 x769) x1092 (x920 x267)))
(define-fun x377 ((x267 x1282)) Int (ite (= x267 x1189) x783 (x1541 x267)))
(define-fun x1094 ((x267 x1282)) Int (ite (= x1000 x267) x1050 (x377 x267)))
(define-fun x1139 ((x267 x1282)) Int (ite (and x807 x1128) (x1541 x267) (x1094 x267)))
(define-fun x249 ((x267 x1282)) Int (ite (= x267 x1437) x326 (x1139 x267)))
(define-fun x1273 ((x267 Int)) Int (ite (= x267 0) 1 (x1269 x267)))
(define-fun x1134 ((x267 Int)) Int (ite (= x769 x267) x402 (x920 x267)))
(define-fun x465 ((x267 Int)) Int (ite (and x507 x1097) (x1148 x267) (x1273 x267)))
(define-fun x1172 ((x267 x1282)) Int (ite (= x267 (x758 x855)) x849 (x38 x267)))
(define-fun x1144 ((x267 Int)) Int (ite (= x769 x267) x1314 (x1062 x267)))
(define-fun x1458 ((x267 Int)) Int (ite (and (<= x528 x267) (> (+ x1314 x528) x267)) (x465 (+ (- x267 x528) 0)) (x1144 x267)))
(define-fun x1443 ((x267 Int)) Int (ite (and x440 x66) (x1062 x267) (x1458 x267)))
(define-fun x408 ((x1181 Int)) Bool (=> (and (not (= x1181 2293535753)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1181)) (not (= x1181 2514000705)) (not (= x1181 2743102681)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1181)) (not (= x1181 87118632)) (not (= 911411945 x1181)) (not (= 115792089237316195423570985008687907853269984665640564039457 x1181)) (not (= 2835717307 x1181)) (not (= x1181 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 274184521717934524641157099916833587214 x1181)) (not (= 1000000000000000000 x1181)) (not (= x1181 69947311)) (not (= 759532456 x1181)) (not (= x1181 2960351575)) (not (= 826074471 x1181)) (not (= 2418364589 x1181)) (not (= x1181 1968616202)) (not (= x1181 2258409472)) (not (= x1181 649617121)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x1181)) (< 10000 x1181) (not (= x1181 274184521717934524641157099916833587206)) (not (= x1181 18446744073709551615)) (not (= x1181 2690754053)) (not (= x1181 2798343961)) (not (= 468353030 x1181)) (not (= x1181 1461501637330902918203684832716283019655932542975)) (not (= x1181 604800)) (not (= x1181 142201243)) (not (= 2764855426 x1181)) (not (= 2512682246 x1181)) (not (= x1181 635128645)) (not (= x1181 1889567281)) (not (= x1181 2061678023)) (not (= x1181 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= 2532887486 x1181)) (not (= x1181 2211524764)) (not (= 274184521717934524641157099916833587218 x1181)) (not (= x1181 1986467848))) (not ((_ is x869) (x758 x1181)))))
(assert (=> (<= x855 10000) (= (x869 x855) (x758 x855))))
(assert (x106 x8))
(assert (x106 x1262))
(assert (x408 x1014))
(assert (= x188 x690))
(assert (x106 x10))
(assert (= x531 (=> (and (= x790 (x505 (x758 x48) (x869 6) 0)) (= x204 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= (x505 (x758 x204) x790 0) x158) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x623) (= (= x623 0) x282) (>= x623 0) (= (x1381 x158) x623)) (and (=> (and (= x48 x35) (not x282)) x139) (=> (and (= x75 (x295 (- x48 1))) (= x499 (> x75 0)) x282 (not x499)) x154)))))
(assert (= (x71 x770) (ite (= x1158 x770) x966 (x1226 x770))))
(assert (= (x1433 (x758 x94)) x94))
(assert (x106 x647))
(assert (= (x1035 x946) (ite (= x1137 x946) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x746 x946))))
(assert (x106 x532))
(assert (= true x931))
(assert (x408 x788))
(assert (x106 x1077))
(assert (= (x619 x74) (ite (= x74 x399) x1345 (x222 x74))))
(assert (x106 x9))
(assert (= (x1433 (x1179 x350 1)) (+ 1 (x1433 x350))))
(assert (= (x753 x697) (ite (= x697 x1444) x84 (x1507 x697))))
(assert (x106 x1001))
(assert (= 1986467848 (x1433 (x869 1986467848))))
(assert (x106 x858))
(assert (x106 x708))
(assert (x106 x1369))
(assert (= (x869 826074471) (x758 826074471)))
(assert (= (and x6 x78) x1475))
(assert (= (ite (= x478 x211) x1295 (x1049 x478)) (x1226 x478)))
(assert (x106 x936))
(assert (=> (<= x396 10000) (= (x869 x396) (x758 x396))))
(assert (= x839 (=> (and (= (= x1098 0) x355) (or (and (or (and (= x10 x1539) (not x961) (= x1299 1)) (and x961 (= 0 x1299) (= 0 x10))) (= x370 (x505 (x758 x1098) (x869 10) 0)) (= x1202 (x505 (x758 x1353) x370 0)) (not x355) (>= x1539 0) (<= x1539 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x961 (= 0 x1539)) (= x1539 (x1111 x1202)) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1353)) (and x355 (= 0 x10) (= x1299 0)))) x622)))
(assert (= (ite (= x127 x415) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x127)) (x932 x127)))
(assert (x106 x837))
(assert (x106 x271))
(assert (x106 x1392))
(assert (x106 x1427))
(assert (= (x1151 x914) (ite (and x1167 x980) (x663 x914) (x1250 x914))))
(assert (=> (<= x85 10000) (= (x758 x85) (x869 x85))))
(assert (x106 x225))
(assert (x106 x280))
(assert (x106 x1376))
(assert (x106 x1514))
(assert (x408 x514))
(assert (= (x619 x127) (ite (= x127 x399) x1345 (x222 x127))))
(assert (=> (>= 10000 x1338) (= (x758 x1338) (x869 x1338))))
(assert (= (x198 x1262) (ite (= x1262 x768) x303 (x110 x1262))))
(assert (x408 x396))
(assert (x106 x85))
(assert (x106 x633))
(assert (= (ite (and (not x27) x655 x1324) (x576 x478) (x1057 x478)) (x70 x478)))
(assert (= (x1433 (x869 69947311)) 69947311))
(assert (x106 x802))
(assert (x106 x667))
(assert (x106 x1138))
(assert (x106 x55))
(assert (= (x1433 (x758 x1356)) x1356))
(assert (x106 x1098))
(assert (x408 x422))
(assert (= x52 (x1433 (x758 x52))))
(assert (x106 x1467))
(assert (= (=> (and (= (x505 (x758 x1517) x1064 0) x502) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x240) (= x1064 (x505 (x758 x268) x207 0)) (= x268 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= x207 (x505 (x758 x1061) (x869 7) 0)) (= (x1441 x502) x240) (= (= 0 x240) x37) (>= x240 0)) (and (=> x37 x168) (=> (and (not x37) (= x1061 x1488)) x482))) x101))
(assert (x106 x418))
(assert (x408 x1493))
(assert (x106 x665))
(assert (=> (<= x1322 10000) (= (x869 x1322) (x758 x1322))))
(assert (=> (<= x771 10000) (= (x758 x771) (x869 x771))))
(assert (x903 x676 x1154 x821 x352))
(assert (= (ite (and x1449 x759 (not x498) x1300 x655 x1324) (x71 x1444) (ite (and (not x1449) x655 x759 x1300 x1324) (x1226 x1444) (ite (and x655 (not x1300) x1324 x759) (x1049 x1444) (ite (and x655 (not x759) x1324) (x932 x1444) (x900 x1444))))) (x576 x1444)))
(assert (= (x619 x752) (ite (= x752 x399) x1345 (x222 x752))))
(assert (x106 x388))
(assert (x106 x1207))
(assert (x106 x775))
(assert (= (ite (and x1519 x1210) (x753 x695) (x1364 x695)) (x940 x695)))
(assert (= (ite (= x1298 x425) x1275 (x619 x425)) (x952 x425)))
(assert (x106 x630))
(assert (= (ite (= x399 x173) x1345 (x222 x173)) (x619 x173)))
(assert (x106 x48))
(assert (= (x265 x752) (ite (and x807 x1128) (x201 x752) (x928 x752))))
(assert (x106 x1061))
(assert (= x1338 (x1433 (x758 x1338))))
(assert (x106 x293))
(assert (x106 x593))
(assert (=> (<= x94 10000) (= (x758 x94) (x869 x94))))
(assert (= x1320 (x1433 (x758 x1320))))
(assert (= x1428 (and x1283 (not x331))))
(assert (= (x619 x338) (ite (= x399 x338) x1345 (x222 x338))))
(assert (= (x198 x127) (ite (= x768 x127) x303 (x110 x127))))
(assert (x408 x1089))
(assert (= x532 (x1433 (x758 x532))))
(assert (= (or (and (not x269) x512) x1529) x1167))
(assert (x106 x227))
(assert (=> (<= x1276 10000) (= (x758 x1276) (x869 x1276))))
(assert (=> (<= x388 10000) (= (x758 x388) (x869 x388))))
(assert (x106 x518))
(assert (= x1175 (=> (and (= x358 (< 0 x1514)) (= x1514 (x295 (- x1257 1)))) (and (=> (not x358) x764) (=> x358 x732)))))
(assert (=> (>= 10000 x1321) (= (x758 x1321) (x869 x1321))))
(assert (= (ite (and x1128 x807) (x201 x1248) (x928 x1248)) (x265 x1248)))
(assert (= (x70 x1248) (ite (and x1324 (not x27) x655) (x576 x1248) (x1057 x1248))))
(assert (= (x1433 (x869 1000000000000000000)) 1000000000000000000))
(assert (x719 x1336))
(assert (=> (>= 10000 x1467) (= (x758 x1467) (x869 x1467))))
(assert (= (x1232 192) 0))
(assert (= x1536 x1404))
(assert (x106 x1105))
(assert (= (x1433 (x869 1968616202)) 1968616202))
(assert (x106 x1305))
(assert (x408 x1218))
(assert (x106 x404))
(assert (x408 x52))
(assert (x106 x1493))
(assert (x106 x173))
(assert (= (x940 x1262) (ite (and x1519 x1210) (x753 x1262) (x1364 x1262))))
(assert (x106 x40))
(assert (x408 x1467))
(assert (= (x619 x1029) (ite (= x399 x1029) x1345 (x222 x1029))))
(assert (x106 x618))
(assert (x408 x1543))
(assert (= (x1433 (x758 x692)) x692))
(assert (= (ite (and x1519 x1210) (x753 x697) (x1364 x697)) (x940 x697)))
(assert (x106 x722))
(assert (x106 x251))
(assert (=> (>= 10000 x837) (= (x869 x837) (x758 x837))))
(assert (= (x932 x695) (ite (= x415 x695) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x695))))
(assert (= x672 (x1433 (x758 x672))))
(assert (= (ite (and x373 x1167) (x110 x64) (ite (and x1167 x1499 (not x373) (not x273)) (x198 x64) (ite (and (not x373) x1167 (not x1499)) (x110 x64) (x427 x64)))) (x890 x64)))
(assert (x106 x1512))
(assert (= (x198 x1444) (ite (= x1444 x768) x303 (x110 x1444))))
(assert (x106 x1034))
(assert (x106 x1191))
(assert (= (ite (= x1390 x211) x1295 (x1049 x1390)) (x1226 x1390)))
(assert (= (x1433 (x758 x126)) x126))
(assert (= x1001 (x1433 (x758 x1001))))
(assert (= x1100 (x1433 (x758 x1100))))
(assert (= (=> (and (= x949 (< 0 x292)) (= (x295 (- x1257 1)) x292)) (and (=> (not x949) x524) (=> x949 x1015))) x1486))
(assert (x106 x1002))
(assert (= (x1433 (x758 x1440)) x1440))
(assert (x719 x1265))
(assert (x106 x545))
(assert (= x204 (x1433 (x758 x204))))
(assert (=> (<= x1326 10000) (= (x869 x1326) (x758 x1326))))
(assert (= (ite (= x695 x211) x1295 (x1049 x695)) (x1226 x695)))
(assert (x106 x1335))
(assert (= (x753 x1390) (ite (= x1390 x1444) x84 (x1507 x1390))))
(assert (= x978 (x1433 (x758 x978))))
(assert (x408 x1326))
(assert (= x1170 x1278))
(assert (x106 x544))
(assert (= (x869 142201243) (x758 142201243)))
(assert (x106 x691))
(assert (x106 x1509))
(assert (= (x1433 (x758 x1557)) x1557))
(assert (=> (>= 10000 x268) (= (x758 x268) (x869 x268))))
(assert (x106 x16))
(assert (= (x110 x1248) (ite (= x1301 x1248) x21 (x17 x1248))))
(assert (= x382 (x1433 (x758 x382))))
(assert (x106 x326))
(assert (x408 x494))
(assert (= (+ 1 (x1433 x1233)) (x1433 (x1179 x1233 1))))
(assert (= (ite (and x373 x1167) (x110 x173) (ite (and (not x273) x1167 x1499 (not x373)) (x198 x173) (ite (and (not x373) (not x1499) x1167) (x110 x173) (x427 x173)))) (x890 x173)))
(assert (= (ite (= x1298 x1168) x1275 (x619 x1168)) (x952 x1168)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1433 (x869 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (=> (>= 10000 x1176) (= (x869 x1176) (x758 x1176))))
(assert (= (x176 x1029) (ite (= x1029 x9) x702 (x984 x1029))))
(assert (x408 x1074))
(assert (x106 x915))
(assert (x106 x998))
(assert (=> (<= x1163 10000) (= (x758 x1163) (x869 x1163))))
(assert (= (x1433 (x869 2061678023)) 2061678023))
(assert (= (x940 x768) (ite (and x1210 x1519) (x753 x768) (x1364 x768))))
(assert (x106 x547))
(assert (x106 x488))
(assert (x408 x414))
(assert (=> (<= x180 10000) (= (x869 x180) (x758 x180))))
(assert (x106 x770))
(assert (= (x1433 (x758 x1417)) x1417))
(assert (x106 x95))
(assert (x106 x1106))
(assert (x106 x1517))
(assert (= x510 (x1433 (x758 x510))))
(assert (= (x1190 x478) (ite (= x478 x1047) x1081 (x176 x478))))
(assert (x106 x76))
(assert (x106 x1385))
(assert (= (ite (= x415 x173) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x173)) (x932 x173)))
(assert (= x982 (x1433 (x758 x982))))
(assert (= x977 x1288))
(assert (= (x984 x1029) (ite (= x513 x1029) x239 (x1035 x1029))))
(assert (x106 x959))
(assert (x408 x1385))
(assert (= (ite (and x1210 x1519) (x753 x1029) (x1364 x1029)) (x940 x1029)))
(assert (x106 x276))
(assert (= x512 x119))
(assert (x106 x348))
(assert (= (or (and x137 x609) (and x1103 x1133) x896) x1178))
(assert (x106 x962))
(assert (x106 x94))
(assert (= x188 x1278))
(assert (= (x869 468353030) (x758 468353030)))
(assert (= (x1433 (x758 x1191)) x1191))
(assert (=> (>= 10000 x259) (= (x758 x259) (x869 x259))))
(assert (x106 x669))
(assert (= x1276 (x1433 (x758 x1276))))
(assert (x106 x798))
(assert (x106 x1390))
(assert (x408 x1546))
(assert (= (x265 x1029) (ite (and x807 x1128) (x201 x1029) (x928 x1029))))
(assert (x106 x128))
(assert (= x1468 (x1433 (x758 x1468))))
(assert (= (x619 x881) (ite (= x881 x399) x1345 (x222 x881))))
(assert (= (x1433 (x758 x1326)) x1326))
(assert (= (ite (and x1167 x373) (x110 x695) (ite (and (not x373) x1499 x1167 (not x273)) (x198 x695) (ite (and (not x373) x1167 (not x1499)) (x110 x695) (x427 x695)))) (x890 x695)))
(assert (x106 x1328))
(assert (x106 x1505))
(assert (x106 x1338))
(assert (= 2512682246 (x1433 (x869 2512682246))))
(assert (= x1259 (or (and x282 x1093) (and (not x332) x1355) (and (not x780) x1475))))
(assert (= (or x899 x463) x24))
(assert (x106 x345))
(assert (x408 x1371))
(assert (= x1430 (and x1103 (not x1133))))
(assert (x106 x1257))
(assert (x106 x795))
(assert (x106 x1059))
(assert (= (x110 x127) (ite (= x127 x1301) x21 (x17 x127))))
(assert (= 1461501637330902918203684832716283019655932542975 (x1433 (x869 1461501637330902918203684832716283019655932542975))))
(assert (x106 x656))
(assert (= x1061 (x1433 (x758 x1061))))
(assert (= x884 (=> (and (<= 0 x1413) (not (= 2743102681 x802)) (not (> 2690754053 x802)) (= x782 (x505 (x758 x1385) (x869 5) 0)) (= 2798343961 x802) (not (= 2764855426 x802)) (= x597 x1413) (< 0 x570) (not (< x802 2293535753)) (> 2960351575 x802) (>= 1461501637330902918203684832716283019655932542975 x382) (= (x549 (x758 274184521717934524641157099916833587206)) x570) (<= x1413 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x914 (x505 (x758 x382) x782 0)) (= x1413 (x1206 x914)) (not (= 2690754053 x802))) (=> (and (= x1511 x597) (= x1249 x180) (= x1546 x324) (= x680 x897) (= x234 x503)) x194))))
(assert (= (x1433 (x869 759532456)) 759532456))
(assert (x106 x925))
(assert (=> (>= 10000 x1115) (= (x758 x1115) (x869 x1115))))
(assert (= (x265 x946) (ite (and x1128 x807) (x201 x946) (x928 x946))))
(assert (x106 x966))
(assert (= (ite (= x127 x878) x1492 (x932 x127)) (x1049 x127)))
(assert (= x1257 (x1433 (x758 x1257))))
(assert (=> (>= 10000 x1353) (= (x758 x1353) (x869 x1353))))
(assert (= (x1433 (x758 x388)) x388))
(assert (x408 x1544))
(assert (= x289 (=> (and (or (and (= x1522 (x505 (x758 x422) x830 0)) (= (x505 (x758 x1214) (x869 10) 0) x830) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x422) (or (and (= 1 x887) (not x1069) (= x803 x428)) (and (= x803 0) (= x887 0) x1069)) (= x1069 (= 0 x428)) (>= x428 0) (<= x428 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x991) (= x428 (x486 x1522))) (and (= x803 0) x991 (= 0 x887))) (= x991 (= x1214 0))) x696)))
(assert (x106 x537))
(assert (= (x952 x1029) (ite (= x1298 x1029) x1275 (x619 x1029))))
(assert (x106 x1468))
(assert (x408 x1261))
(assert (= (x198 x946) (ite (= x946 x768) x303 (x110 x946))))
(assert (= (ite (and x373 x1167) (x110 x127) (ite (and (not x373) x1499 x1167 (not x273)) (x198 x127) (ite (and (not x373) (not x1499) x1167) (x110 x127) (x427 x127)))) (x890 x127)))
(assert (= (ite (= x697 x1301) x21 (x17 x697)) (x110 x697)))
(assert (= x33 (=> (and (not (= 2512682246 x102)) (not (< x102 2293535753)) (>= 1461501637330902918203684832716283019655932542975 x28) (< x102 2960351575) (= (x549 (x758 274184521717934524641157099916833587206)) x1344) (>= 1461501637330902918203684832716283019655932542975 x962) (= x391 x822) (= x1292 (x505 (x758 x341) (x869 4) 0)) (< x102 2690754053) (not (= x102 2293535753)) (<= 0 x391) (= (x1393 x367) x391) (> x1344 0) (= (x505 (x758 x28) x310 0) x69) (= (x505 (x758 x1369) x69 0) x367) (= 2532887486 x102) (= (x505 (x758 x962) x1292 0) x310) (<= x391 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1369 1461501637330902918203684832716283019655932542975) (not (= 2418364589 x102))) (=> (and (= x1356 x324) (= x1354 (<= x411 x679)) (= x1249 x414) (= x234 x1392) (= (and x1266 x1354) x229) (= x411 x822)) x1099))))
(assert (x408 x111))
(assert (= (ite (and x373 x1167) (x110 x74) (ite (and x1499 x1167 (not x273) (not x373)) (x198 x74) (ite (and (not x373) (not x1499) x1167) (x110 x74) (x427 x74)))) (x890 x74)))
(assert (= x154 (=> (= 0 x1098) x839)))
(assert (x106 x827))
(assert (= (ite (and x1128 x807) (x201 x1444) (x928 x1444)) (x265 x1444)))
(assert (= (x1433 (x758 x1014)) x1014))
(assert (x106 x1038))
(assert (= x1421 (=> (= (< x1238 x1257) x1133) (and (=> (and (= x953 x1076) x1133) x907) (=> (not x1133) x866)))))
(assert (=> (>= 10000 x962) (= (x869 x962) (x758 x962))))
(assert (=> (>= 10000 x743) (= (x758 x743) (x869 x743))))
(assert (= (=> (and (= x1415 (= x669 0)) (or (and (= x1316 1) (= (x1125 x439) x1113) (= (x505 (x758 x1517) x1401 0) x439) (>= x1113 0) (= x1043 x1113) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1115) (<= x1113 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1281 (x505 (x758 x669) (x869 9) 0)) (not x1415) (= (x505 (x758 x1115) x1281 0) x1401)) (and x1415 (= 0 x1316) (= 0 x1043)))) x340) x620))
(assert (x106 x694))
(assert (x106 x60))
(assert (= (x110 x1301) x21))
(assert (= (and x859 x192) x1442))
(assert (x106 x1361))
(assert (= (=> (and (not (< x1524 1968616202)) (= x1524 2258409472) (= x810 (x1381 x1534)) (= x957 x810) (= x496 (x549 (x758 274184521717934524641157099916833587206))) (not (< x1524 911411945)) (>= x810 0) (> x496 0) (<= x810 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1534 (x505 (x758 x1016) x1363 0)) (< x1524 2293535753) (>= 1461501637330902918203684832716283019655932542975 x1016) (not (= x1524 1986467848)) (not (= 1968616202 x1524)) (= (x505 (x758 x692) (x869 6) 0) x1363) (not (= x1524 2061678023)) (not (= x1524 2211524764))) (=> (and (= x850 x1249) (= x324 x504) (= x234 x1328) (= x91 x957)) x160)) x454))
(assert (= (x1226 x946) (ite (= x211 x946) x1295 (x1049 x946))))
(assert (x408 x832))
(assert (x408 x85))
(assert (x106 x606))
(assert (x725 x1265 x434))
(assert (= (x110 x1444) (ite (= x1301 x1444) x21 (x17 x1444))))
(assert (x106 x1488))
(assert (= (ite (= x338 x1444) x84 (x1507 x338)) (x753 x338)))
(assert (= (ite (= x752 x878) x1492 (x932 x752)) (x1049 x752)))
(assert (x106 x1227))
(assert (x106 x800))
(assert (x106 x338))
(assert (=> (<= x26 10000) (= (x869 x26) (x758 x26))))
(assert (x106 x7))
(assert (x106 x1072))
(assert (x106 x1543))
(assert (=> (<= x872 10000) (= (x869 x872) (x758 x872))))
(assert (x106 x1557))
(assert (= (ite (= x752 x1444) x84 (x1507 x752)) (x753 x752)))
(assert (= (ite (= x1158 x1390) x966 (x1226 x1390)) (x71 x1390)))
(assert (= x1028 (x1433 (x758 x1028))))
(assert (x106 x453))
(assert (= (x576 x1248) (ite (and x1300 x759 x1324 x1449 x655 (not x498)) (x71 x1248) (ite (and x655 (not x1449) x759 x1324 x1300) (x1226 x1248) (ite (and (not x1300) x655 x759 x1324) (x1049 x1248) (ite (and x1324 (not x759) x655) (x932 x1248) (x900 x1248)))))))
(assert (= (x869 26959946667150639794667015087019630673637144422540572481103610249215) (x758 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (=> (and (<= x181 1461501637330902918203684832716283019655932542975) (= (x505 (x758 x1312) x986 0) x337) (>= 1461501637330902918203684832716283019655932542975 x1312) (= (x505 (x758 x1163) (x869 3) 0) x255) (not (= x733 2690754053)) (< x733 2960351575) (not (< x733 2690754053)) (<= x1132 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x549 (x758 274184521717934524641157099916833587206)) x1309) (= x1132 x757) (not (< x733 2293535753)) (<= 0 x1132) (= (x327 x337) x1132) (= x986 (x505 (x758 x181) x255 0)) (= 2743102681 x733) (> x1309 0)) (=> (and (= x126 x680) (= x771 x1249) (= x757 x216) (= x1191 x234) (= x324 x1419)) x823)) x1466))
(assert (x1549 x453 x636))
(assert (= (x1433 (x758 x1371)) x1371))
(assert (= x732 (=> (and (= (x505 (x758 x1517) x728 0) x1056) (= x1457 (x848 x1056)) (= (x505 (x758 x1514) (x869 7) 0) x1251) (= (= x1457 0) x713) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1293) (<= x1457 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1457) (= (x505 (x758 x1293) x1251 0) x728)) (and (=> (and (not x713) (= x902 x1514)) x63) (=> (and (not x1082) (= (< 0 x1171) x1082) x713 (= (x295 (- x1514 1)) x1171)) x764)))))
(assert (= (x1433 (x869 37714057306076988483118529490347679105585116642029194716945419020321082336612)) 37714057306076988483118529490347679105585116642029194716945419020321082336612))
(assert (x1450 x31 x1192))
(assert (x106 x259))
(assert (=> (>= 10000 x126) (= (x869 x126) (x758 x126))))
(assert (=> (<= x897 10000) (= (x869 x897) (x758 x897))))
(assert (x106 x1553))
(assert (= (ite (and (not x1268) x281 x1141) (x226 x1390) (x883 x1390)) (x920 x1390)))
(assert (x106 x700))
(assert (= (x1232 x64) 0))
(assert (= (x952 x64) (ite (= x1298 x64) x1275 (x619 x64))))
(assert (=> (>= 10000 x982) (= (x869 x982) (x758 x982))))
(assert (x106 x1315))
(assert (= (x848 x1267) (ite (and x119 x1485) (x1222 x1267) (ite (and x584 (not x1485) x119) (x184 x1267) (x1247 x1267)))))
(assert (x106 x411))
(assert (=> (<= x963 10000) (= (x758 x963) (x869 x963))))
(assert (x106 x341))
(assert (= (x1232 x1262) 0))
(assert (= x582 (=> (and (= (= x681 0) x369) (= x525 (x505 (x758 x111) x1349 0)) (= x111 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= (x505 (x758 x1517) x525 0) x1045) (= x1349 (x505 (x758 x587) (x869 7) 0)) (= (x1441 x1045) x681) (<= x681 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x681 0)) (and (=> (and (= x1488 x587) (not x369)) x482) (=> (and (= x171 (< 0 x593)) x369 (= (x295 (- x587 1)) x593) (not x171)) x275)))))
(assert (x106 x1314))
(assert (x106 x74))
(assert (= (+ 1 (x1433 x162)) (x1433 (x1179 x162 1))))
(assert (x408 x547))
(assert (x106 x662))
(assert (x106 x1016))
(assert (x106 x771))
(assert (x106 x1084))
(assert (x106 x788))
(assert (= 0 (x1232 x770)))
(assert (x106 x398))
(assert (= (=> (and (not (= 2690754053 x1480)) (<= x892 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2798343961 x1480) (not (= x1480 2764855426)) (= x892 (x663 x555)) (not (> 2690754053 x1480)) (< x1480 2960351575) (not (= 2743102681 x1480)) (= x50 (x505 (x758 x982) (x869 5) 0)) (= x892 x215) (= (x505 (x758 x1014) x50 0) x555) (= (x549 (x758 274184521717934524641157099916833587206)) x225) (<= x1014 1461501637330902918203684832716283019655932542975) (>= x892 0) (not (> 2293535753 x1480)) (< 0 x225)) (=> (and (= x1156 x324) (= x215 x298) (= x379 x1249) (= x4 x234)) x1481)) x296))
(assert (x106 x756))
(assert (= (x1232 x946) 0))
(assert (x106 x1345))
(assert (= (x1433 (x758 x1312)) x1312))
(assert (= (x343 x1547) (ite (= x1547 x831) 0 (x113 x1547))))
(assert (= x896 (or x1058 (and (not x1291) x898))))
(assert (= x134 (x1433 (x758 x134))))
(assert (= (ite (and x1324 (not x27) x655) (x576 x1029) (x1057 x1029)) (x70 x1029)))
(assert (=> (>= 10000 x765) (= (x869 x765) (x758 x765))))
(assert (x106 x678))
(assert (= (x576 x64) (ite (and x1300 x1324 x1449 (not x498) x759 x655) (x71 x64) (ite (and x759 (not x1449) x655 x1324 x1300) (x1226 x64) (ite (and x759 x655 (not x1300) x1324) (x1049 x64) (ite (and (not x759) x1324 x655) (x932 x64) (x900 x64)))))))
(assert (x106 x640))
(assert (=> (>= 10000 x1001) (= (x758 x1001) (x869 x1001))))
(assert (x106 x889))
(assert (x408 x388))
(assert (= (x71 x1248) (ite (= x1158 x1248) x966 (x1226 x1248))))
(assert (= (=> (= (< 0 x1257) x578) (and (=> (not x578) x524) (=> x578 x660))) x857))
(assert (= (ite (and x1167 x373) (x110 x752) (ite (and x1499 x1167 (not x273) (not x373)) (x198 x752) (ite (and (not x1499) x1167 (not x373)) (x110 x752) (x427 x752)))) (x890 x752)))
(assert (= x1374 x1170))
(assert (= (x753 x1444) x84))
(assert (= (x619 x1390) (ite (= x399 x1390) x1345 (x222 x1390))))
(assert (x106 x1356))
(assert (x106 x126))
(assert (x106 x1511))
(assert (x106 x1309))
(assert (x106 x1460))
(assert (x106 x943))
(assert (x106 x658))
(assert (x106 x641))
(assert (= (x1433 (x758 x503)) x503))
(assert (= x1384 x392))
(assert (x106 x51))
(assert (x106 x5))
(assert (x408 x532))
(assert (x106 x1357))
(assert (x719 x738))
(assert (x106 x244))
(assert (=> (>= 10000 x1089) (= (x758 x1089) (x869 x1089))))
(assert (x106 x1461))
(assert (= (x576 x1029) (ite (and x759 x1300 x1324 (not x498) x655 x1449) (x71 x1029) (ite (and x1324 x655 (not x1449) x759 x1300) (x1226 x1029) (ite (and x759 (not x1300) x1324 x655) (x1049 x1029) (ite (and x1324 (not x759) x655) (x932 x1029) (x900 x1029)))))))
(assert (x106 x1080))
(assert (x106 x543))
(assert (= (ite (= x74 x768) x303 (x110 x74)) (x198 x74)))
(assert (x106 x1238))
(assert (= (x1433 (x758 x26)) x26))
(assert (= (ite (= x425 x415) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x425)) (x932 x425)))
(assert (x106 x1120))
(assert (x106 x416))
(assert (x106 x410))
(assert (=> (<= x1427 10000) (= (x869 x1427) (x758 x1427))))
(assert (x408 x503))
(assert (= (x110 x770) (ite (= x770 x1301) x21 (x17 x770))))
(assert (= x1519 x1406))
(assert (= (x71 x695) (ite (= x695 x1158) x966 (x1226 x695))))
(assert (x106 x639))
(assert (x106 x822))
(assert (x106 x718))
(assert (= (ite (and x1210 x1519) (x753 x425) (x1364 x425)) (x940 x425)))
(assert (= (ite (and x1167 x980) (x663 x467) (x1250 x467)) (x1151 x467)))
(assert (= (x1433 (x758 x743)) x743))
(assert (=> (<= x504 10000) (= (x758 x504) (x869 x504))))
(assert (x106 x1014))
(assert (= (x110 x1168) (ite (= x1168 x1301) x21 (x17 x1168))))
(assert (x106 x1156))
(assert (= (x952 x74) (ite (= x74 x1298) x1275 (x619 x74))))
(assert (= (ite (= x1195 x1298) x1275 (x619 x1195)) (x952 x1195)))
(assert (x408 x1514))
(assert (x106 x1398))
(assert (= (x869 274184521717934524641157099916833587218) (x758 274184521717934524641157099916833587218)))
(assert (x408 x1016))
(assert (x106 x996))
(assert (= (x890 x338) (ite (and x1167 x373) (x110 x338) (ite (and x1499 (not x273) x1167 (not x373)) (x198 x338) (ite (and (not x1499) (not x373) x1167) (x110 x338) (x427 x338))))))
(assert (= (x1433 (x758 x727)) x727))
(assert (=> (<= x293 10000) (= (x758 x293) (x869 x293))))
(assert (x106 x878))
(assert (x106 x134))
(assert (x106 x861))
(assert (= 274184521717934524641157099916833587206 (x1433 (x869 274184521717934524641157099916833587206))))
(assert (= (x1433 (x758 x219)) x219))
(assert (x408 x231))
(assert (= x956 x1374))
(assert (x106 x969))
(assert (= x202 (and (not x1023) x704)))
(assert (x106 x31))
(assert (x106 x503))
(assert (x106 x672))
(assert (x106 x1221))
(assert (x408 x1173))
(assert (x106 x850))
(assert (= (x1433 (x758 x1419)) x1419))
(assert (x106 x378))
(assert (=> (>= 10000 x1016) (= (x758 x1016) (x869 x1016))))
(assert (x106 x580))
(assert (= x401 (x1433 (x758 x401))))
(assert (=> (<= x150 10000) (= (x869 x150) (x758 x150))))
(assert (=> (<= x927 10000) (= (x758 x927) (x869 x927))))
(assert (x106 x646))
(assert (= (x576 x1390) (ite (and x1449 (not x498) x1324 x655 x759 x1300) (x71 x1390) (ite (and x1324 x1300 x655 (not x1449) x759) (x1226 x1390) (ite (and x759 x655 x1324 (not x1300)) (x1049 x1390) (ite (and x1324 x655 (not x759)) (x932 x1390) (x900 x1390)))))))
(assert (x106 x738))
(assert (x106 x1344))
(assert (x106 x1147))
(assert (x1450 x1039 x548))
(assert (= (x869 2960351575) (x758 2960351575)))
(assert (=> (>= 10000 x16) (= (x869 x16) (x758 x16))))
(assert (x106 x1163))
(assert (x106 x328))
(assert (= (x576 x752) (ite (and x1300 x655 x759 x1324 (not x498) x1449) (x71 x752) (ite (and x1300 (not x1449) x655 x759 x1324) (x1226 x752) (ite (and x655 (not x1300) x1324 x759) (x1049 x752) (ite (and x1324 x655 (not x759)) (x932 x752) (x900 x752)))))))
(assert (=> (<= x382 10000) (= (x869 x382) (x758 x382))))
(assert (=> (>= 10000 x257) (= (x758 x257) (x869 x257))))
(assert (=> (<= x1312 10000) (= (x869 x1312) (x758 x1312))))
(assert (= x1091 (=> (= x968 (< 0 x1257)) (and (=> x968 x706) (=> (not x968) x764)))))
(assert (x106 x494))
(assert (=> (<= x832 10000) (= (x758 x832) (x869 x832))))
(assert (x106 x1115))
(assert (=> (>= 10000 x1293) (= (x758 x1293) (x869 x1293))))
(assert (x106 x466))
(assert (x408 x1357))
(assert (= (=> (= x290 (= 274184521717934524641157099916833587214 x1338)) (and (=> (not x290) x840) (=> (and (= x1440 (x58 1461501637330902918203684832716283019655932542975 x1303)) (not x1438) x290 (= (x549 (x758 274184521717934524641157099916833587214)) x258) (= (+ x492 x221) x1050) (= (x295 (- x328 x124)) x783) (= 274184521717934524641157099916833587206 x580) (= x1189 (x505 (x758 274184521717934524641157099916833587206) (x869 1) 0)) (= x546 x841) (= 274184521717934524641157099916833587206 x785) (= x291 68) (= x614 1) (= x1423 x1303) (= x199 (x377 x116)) (not (> 649617121 x98)) (= x1000 (x505 (x758 x257) (x869 1) 0)) (= (x505 (x758 274184521717934524641157099916833587206) (x869 1) 0) x1055) (not (= 1889567281 x98)) (< 0 x258) (= x124 x366) (= x834 (< x328 x124)) (not (= x98 649617121)) (= x773 (> x1352 x328)) (= x199 x492) (< (+ x199 x1352) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x199 0) (= x187 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x116 (x505 (x758 x1440) (x869 1) 0)) (= x535 x291) (<= 0 x328) (not (> 4 x291)) (= x257 (x58 1461501637330902918203684832716283019655932542975 x1303)) (= (>= (+ x1352 x199) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1438) (= x221 x1352) (= (x1541 x1055) x328) (= x383 32) (= x98 2835717307) (not (= 826074471 x98)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x199) (= x124 x1352) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x120) (and (> 64 x120) (= true (<= x120 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x874) (not (= 2514000705 x98)) (<= x328 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1303) (not x874) (not x773) (not x834) (= x120 (x295 (- x291 4)))) x1013))) x1445))
(assert (x408 x837))
(assert (= (ite (= x64 x1444) x84 (x1507 x64)) (x753 x64)))
(assert (= (x758 1986467848) (x869 1986467848)))
(assert (= x1238 (x1433 (x758 x1238))))
(assert (x106 x1440))
(assert (x106 x260))
(assert (= x4 (x1433 (x758 x4))))
(assert (= (x110 x752) (ite (= x752 x1301) x21 (x17 x752))))
(assert (= (x1049 x946) (ite (= x878 x946) x1492 (x932 x946))))
(assert (x106 x291))
(assert (= (x198 x425) (ite (= x768 x425) x303 (x110 x425))))
(assert (x106 x234))
(assert (x106 x461))
(assert (x1450 x992 x263))
(assert (x408 x1246))
(assert (x106 x429))
(assert (x106 x325))
(assert (x106 x422))
(assert (= (x753 x1248) (ite (= x1444 x1248) x84 (x1507 x1248))))
(assert (x106 x444))
(assert (x106 x679))
(assert (= (x753 x1029) (ite (= x1444 x1029) x84 (x1507 x1029))))
(assert (x408 x1322))
(assert (x106 x785))
(assert (x408 x180))
(assert (=> (<= x908 10000) (= (x869 x908) (x758 x908))))
(assert (= x228 x690))
(assert (= (x110 x173) (ite (= x173 x1301) x21 (x17 x173))))
(assert (=> (>= 10000 x1517) (= (x869 x1517) (x758 x1517))))
(assert (x106 x666))
(assert (= (ite (= x768 x770) x303 (x110 x770)) (x198 x770)))
(assert (x408 x1115))
(assert (x106 x90))
(assert (= (ite (and (not x27) x1324 x655) (x576 x1390) (x1057 x1390)) (x70 x1390)))
(assert (= (x1433 (x758 x421)) x421))
(assert (= (=> (and (= (>= x1511 x969) x1286) (= (or x385 (not x151)) x699) (= x309 x969) (= (and x1286 x791) x385)) (and (=> (and (= x1219 false) (= x1163 x324) (= 87118632 x197) (= x181 x234) (= x1312 x1249) (= 87118632 x820)) x1466) x699)) x342))
(assert (= (x1433 (x758 x1392)) x1392))
(assert (x408 x401))
(assert (= x587 (x1433 (x758 x587))))
(assert (= 2532887486 (x1433 (x869 2532887486))))
(assert (=> (>= 10000 x587) (= (x758 x587) (x869 x587))))
(assert (= (=> (and (= (x505 (x758 x18) x1526 0) x1547) (= (x505 (x758 x388) (x869 3) 0) x45) (<= x913 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x854) (= x858 2743102681) (<= x18 1461501637330902918203684832716283019655932542975) (<= x1100 1461501637330902918203684832716283019655932542975) (< x858 2960351575) (= x905 x913) (= x1526 (x505 (x758 x1100) x45 0)) (not (< x858 2690754053)) (<= 0 x913) (not (> 2293535753 x858)) (= x854 (x549 (x758 274184521717934524641157099916833587206))) (not (= x858 2690754053)) (= x913 (x327 x1547))) (=> (and (= x905 x778) (= x1385 x324) (= x234 x382) (= (<= x778 x1077) x791)) x884)) x779))
(assert (= (x984 x752) (ite (= x752 x513) x239 (x1035 x752))))
(assert (x106 x1465))
(assert (=> (>= 10000 x1074) (= (x758 x1074) (x869 x1074))))
(assert (= (x1433 (x869 2514000705)) 2514000705))
(assert (x106 x28))
(assert (x408 x1040))
(assert (= (x869 115792089237316195423570985008687907853269984665640564039457) (x758 115792089237316195423570985008687907853269984665640564039457)))
(assert (x408 x1001))
(assert (= (x869 18446744073709551615) (x758 18446744073709551615)))
(assert (x408 x259))
(assert (= (x1226 x127) (ite (= x211 x127) x1295 (x1049 x127))))
(assert (= (ite (and x1519 x1210) (x753 x64) (x1364 x64)) (x940 x64)))
(assert (=> (>= 10000 x181) (= (x869 x181) (x758 x181))))
(assert (= (x110 x425) (ite (= x1301 x425) x21 (x17 x425))))
(assert (x106 x1081))
(assert (x106 x1429))
(assert (= (x619 x425) (ite (= x399 x425) x1345 (x222 x425))))
(assert (x106 x83))
(assert (x106 x560))
(assert (= (or (and x713 x685) (and x241 (not x968)) (and x1284 (not x358))) x463))
(assert (x106 x528))
(assert (= x186 (or (and (not x282) x1093) (and (not x78) x6))))
(assert (= x947 (and x297 x136)))
(assert (= (x1433 (x758 x396)) x396))
(assert (= 0 (x1232 x752)))
(assert (x106 x976))
(assert (x106 x906))
(assert (= x908 (x1433 (x758 x908))))
(assert (x106 x18))
(assert (x408 x94))
(assert (= (or (and x807 x1128) (and x290 x683)) x351))
(assert (= x1427 (x1433 (x758 x1427))))
(assert (x106 x953))
(assert (=> (>= 10000 x461) (= (x758 x461) (x869 x461))))
(assert (x106 x292))
(assert (= (x869 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x758 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x753 x1168) (ite (= x1168 x1444) x84 (x1507 x1168))))
(assert (x106 x1022))
(assert (= (ite (= x513 x1390) x239 (x1035 x1390)) (x984 x1390)))
(assert (= x748 (=> (and (= x994 (x36 x1556)) (not (< x970 1968616202)) (not (= x970 2061678023)) (>= 1461501637330902918203684832716283019655932542975 x727) (<= x994 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x970 1986467848)) (not (= 1968616202 x970)) (<= 0 x994) (not (< x970 911411945)) (= (x549 (x758 274184521717934524641157099916833587206)) x360) (= (x505 (x758 x727) x1294 0) x1556) (> x360 0) (= x994 x1235) (not (= x970 2211524764)) (= 2258409472 x970) (= (x505 (x758 x461) (x869 6) 0) x1294) (< x970 2293535753)) (=> (and (= x1235 x666) (= x656 x1249) (= x234 x1322) (= x26 x324)) x638))))
(assert (x408 x908))
(assert (= (x1433 (x758 x855)) x855))
(assert (x106 x26))
(assert (= (x1433 (x758 x414)) x414))
(assert (= x1078 (x1433 (x758 x1078))))
(assert (=> (>= 10000 x349) (= (x758 x349) (x869 x349))))
(assert (x106 x401))
(assert (x106 x1313))
(assert (= x130 (x1433 (x758 x130))))
(assert (x106 x118))
(assert (x408 x1557))
(assert (= (=> (and (= (x632 x1431) x658) (= x79 (x505 (x758 x1371) x812 0)) (or (and x470 (= x108 x975) (= x108 (x479 (+ 1 x1257)))) (and (= x738 (ite (> x644 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= (x58 x1336 x738) x544) (= (< 0 x84) x1020) (not x470) (= x544 0) (= x1065 (x479 (+ 1 x1257))) (= x1336 1) (= x975 x1065) (= (div x1447 x1038) x122) (or (and (= (div x41 1000000000000000000) x844) (<= x1398 1461501637330902918203684832716283019655932542975) (= (* x122 x448) x41) (= 0 x183) (> x84 0) (= x1166 (x505 (x758 x1517) x1542 0)) (= (+ x737 x87) x1275) (= x1395 (x505 (x758 x1257) (x869 11) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x122 x448)) (= x844 x737) (= (x619 x1298) x1429) (= x87 x1429) (= (x505 (x758 x1257) (x869 4) 0) x1085) (= (< 1 x84) x1383) (<= 0 x183) (= (x505 (x758 x1545) x1166 0) x300) (= (x505 (x758 x1028) x1395 0) x744) (= x129 x1290) (= (x619 x1444) x1221) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x183) (= (x143 x1290) x1398) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x448) (= x951 (x505 (x758 x1398) x744 0)) (or (and (<= x315 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x479 (+ 64 x344)) x537) (= x1329 (x505 (x758 x1257) (x869 11) 0)) (not x1203) (= x814 (x143 x537)) (= (x143 x537) x363) (= x985 (x505 (x758 x1517) x745 0)) (= x220 x705) (= x55 x490) (> x84 1) (>= x430 0) (<= x814 1461501637330902918203684832716283019655932542975) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x122 x315)) (= (x1182 x1162) x315) (>= x315 0) (= (x505 (x758 x1257) (x869 4) 0) x1150) x1383 (= (x58 1461501637330902918203684832716283019655932542975 x1039) x532) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x430) (= x146 (x505 (x758 x150) x1329 0)) (= (x505 (x758 x363) x985 0) x47) (= x150 (x58 1461501637330902918203684832716283019655932542975 x1039)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x55 x705)) (< 1 x84) (= (* x122 x315) x922) (= x55 (x952 x74)) (> x67 1) (= x74 (x479 (+ 192 x1483))) (= (+ x220 x490) x1070) (>= 1461501637330902918203684832716283019655932542975 x363) (= (div x922 1000000000000000000) x705) (= (< 2 x84) x1203) (= x67 (x952 x1444)) (= (x505 (x758 x532) x1150 0) x745) (= 0 x430) (= (x1393 x47) x430) (= x1162 (x505 (x758 x814) x146 0))) (not x1383)) (= (x505 (x758 x843) x1085 0) x1542) x1020 (= x1298 (x479 (+ x1483 160))) (< (+ x844 x1429) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1028 (x58 1461501637330902918203684832716283019655932542975 x1039)) (> x84 0) (= (x1182 x951) x448) (<= x1545 1461501637330902918203684832716283019655932542975) (> x1221 0) (= (x1393 x300) x183) (= x1545 (x143 x1290)) (>= x448 0) (= x843 (x58 1461501637330902918203684832716283019655932542975 x1039))) (not x1020)) (= x1447 (mod (* x644 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< 0 x1038))) (<= 0 x1038) (= x1142 (= x887 0)) (<= x644 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1431 (x505 (x758 x1257) (x869 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x203) (= x533 x1076) (= (= 0 x488) x650) (<= x1038 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x505 (x758 x1517) x79 0) x534) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x658) (<= 0 x1345) (>= x203 0) (= (x1179 x1431 1) x1402) (= x508 (x505 (x758 x1208) x995 0)) (= (x1136 x508) x203) (= x1270 (x505 (x758 x1257) (x869 5) 0)) (or (and (= x1525 (x58 1461501637330902918203684832716283019655932542975 x1039)) (not x1142)) x1142) (= (= x644 0) x470) (= x467 (x505 (x758 x1236) x1270 0)) (or (and x1382 (= (x619 x399) x566) (= (< x566 x51) x917) (or (and x917 (= x604 x95) (= x95 (x619 x399))) (and (= x51 x604) (not x917))) (= (= 0 x203) x191) (or (and (not x191) (not (> x203 x604)) (= x1112 (x295 (- x604 x203))) (= (ite (> 604800 x1112) x1112 604800) x1120) (= x1120 x488) (= x939 604800)) (and (= x145 (x619 x881)) x191 (= x631 (x295 (- x604 x145))) (not (< x604 x145)) (= x631 x488)))) (and (= x488 0) (not x1382))) (>= x644 0) (< x1165 x975) (= x1038 (x1409 x467)) (= x995 (x505 (x758 x1257) (x869 6) 0)) (= x1236 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= (x505 (x758 x1257) (x869 3) 0) x812) (= x533 (x479 (+ 64 x881))) (= x644 (x1548 x534)) (= x1345 (x910 x1402)) (= x1371 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= (x619 x399) x1410) (<= 0 x658) (= x1382 (< x203 x1410)) (= x399 (x479 (+ 32 x881))) (or (and (= x1357 (x58 1461501637330902918203684832716283019655932542975 x1039)) x650 (= x1272 (x505 (x758 x1257) (x869 6) 0)) (= (x505 (x758 x1357) x1272 0) x361)) (and (= (x505 (x758 x1257) (x869 5) 0) x475) (= x743 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= x1432 x1439) (= x615 (x505 (x758 x401) x475 0)) (= x401 (x58 1461501637330902918203684832716283019655932542975 x1039)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x488 x803)) (= x397 (x505 (x758 x1257) (x869 6) 0)) (= x1439 (* x488 x803)) (not x650) (= (x505 (x758 x743) x397 0) x715))) (= x1208 (x58 1461501637330902918203684832716283019655932542975 x1039)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1345)) x907) x696))
(assert (x408 x1353))
(assert (x106 x1350))
(assert (x408 x587))
(assert (= (x932 x1390) (ite (= x1390 x415) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x1390))))
(assert (x408 x672))
(assert (= (x265 x1390) (ite (and x1128 x807) (x201 x1390) (x928 x1390))))
(assert (x106 x1508))
(assert (x106 x1078))
(assert (= (x1226 x425) (ite (= x211 x425) x1295 (x1049 x425))))
(assert (x408 x897))
(assert (x106 x887))
(assert (= (x940 x946) (ite (and x1210 x1519) (x753 x946) (x1364 x946))))
(assert (x719 1461501637330902918203684832716283019655932542975))
(assert (x106 x219))
(assert (= (x1433 (x758 x1098)) x1098))
(assert (x106 x1326))
(assert (x408 x1276))
(assert (= (x952 x946) (ite (= x946 x1298) x1275 (x619 x946))))
(assert (x106 x1042))
(assert (x106 x170))
(assert (= (ite (and x1271 (not x608) x1141 x96 x356 x281) (x1190 x1390) (ite (and x1141 (not x96) x281 x1271 x356) (x176 x1390) (ite (and x1141 (not x1271) x281 x356) (x984 x1390) (ite (and x1141 (not x356) x281) (x1035 x1390) (x395 x1390))))) (x226 x1390)))
(assert (x106 x1017))
(assert (x408 x872))
(assert (= x1152 x185))
(assert (= (x1433 (x869 1889567281)) 1889567281))
(assert (x106 x84))
(assert (= (ite (= x1262 x1298) x1275 (x619 x1262)) (x952 x1262)))
(assert (= x1411 (=> (and (= x1554 (x549 (x758 274184521717934524641157099916833587206))) (= (x505 (x758 x293) x865 0) x720) (= x195 (x1125 x689)) (<= 0 x195) (< 0 x1554) (< x708 911411945) (>= 1461501637330902918203684832716283019655932542975 x1467) (>= 1461501637330902918203684832716283019655932542975 x293) (> 2293535753 x708) (= 142201243 x708) (< x708 468353030) (= x536 x195) (= x865 (x505 (x758 x765) (x869 9) 0)) (not (= x708 69947311)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x195) (= (x505 (x758 x1467) x720 0) x689) (not (= x708 87118632))) (=> (and (= (> x1079 0) x389) (= x234 x272) (= x324 x94) (= x1266 (and x389 x432)) (= x536 x1079) (= x610 0)) x435))))
(assert (x106 x794))
(assert (x106 x1352))
(assert (x106 x1301))
(assert (= (x198 x752) (ite (= x752 x768) x303 (x110 x752))))
(assert (x106 x651))
(assert (= (x1232 x1195) 0))
(assert (= (x1433 (x758 x927)) x927))
(assert (= (x198 x173) (ite (= x173 x768) x303 (x110 x173))))
(assert (= (ite (= x1262 x415) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x1262)) (x932 x1262)))
(assert (= (ite (and x980 x1167) (x1403 x895) (x86 x895)) (x1136 x895)))
(assert (= (x576 x770) (ite (and (not x498) x655 x1449 x759 x1300 x1324) (x71 x770) (ite (and x759 x1300 (not x1449) x655 x1324) (x1226 x770) (ite (and x1324 x655 x759 (not x1300)) (x1049 x770) (ite (and x1324 x655 (not x759)) (x932 x770) (x900 x770)))))))
(assert (= (x1180 x1547) (ite (and x1485 x119) (x726 x1547) (ite (and x584 x119 (not x1485)) (x726 x1547) (x1083 x1547)))))
(assert (= (x71 x425) (ite (= x425 x1158) x966 (x1226 x425))))
(assert (= (x869 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x758 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (=> (and (= (= x396 0) x1366) (or (and (= x755 (x505 (x758 x231) x511 0)) (= x418 x1223) (= x1223 (x789 x117)) (= x231 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= x117 (x505 (x758 x1517) x755 0)) (= 1 x678) (<= x1223 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x1366) (>= x1223 0) (= x511 (x505 (x758 x396) (x869 9) 0))) (and (= 0 x418) (= x678 0) x1366))) x1264) x457))
(assert (= (x758 274184521717934524641157099916833587214) (x869 274184521717934524641157099916833587214)))
(assert (= (ite (= x1301 x1052) x21 (x17 x1052)) (x110 x1052)))
(assert (x106 x1130))
(assert (= (=> (and (= x1068 (= 0 x678)) (or (and (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1218) (= x1044 (x505 (x758 x1257) (x869 7) 0)) (= (x505 (x758 x1517) x320 0) x1287) (= x953 x881) x659 (= (x505 (x758 x1218) x1044 0) x320)) (and (<= x777 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1350) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x886) (= x162 (x505 (x758 x1257) (x869 1) 0)) (or (and (not x1391) (= x786 0)) (and (or (and (not (> x1339 x60)) (= x786 x735) (= (x295 (- x60 x1339)) x735) x1126 (= (x862 x953) x1339)) (and (= (x295 (- x60 x886)) x446) (= x786 x712) (not (< x60 x886)) (not x1126) (= (ite (< x446 604800) x446 604800) x712) (= 604800 x1255))) (= x1515 (> x51 x312)) (= (= x886 0) x1126) x1391 (= x312 (x862 x1459)) (or (and (= x1465 x60) (= x1465 (x862 x1459)) x1515) (and (= x51 x60) (not x1515))))) (or (and (= x626 (x505 (x758 x1557) x1373 0)) (= x881 x313) (= x563 x322) (= x1373 (x505 (x758 x1257) (x869 7) 0)) (= (x505 (x758 x1517) x626 0) x760) (= (x505 (x758 x1257) (x869 3) 0) x527) (= x322 (* x418 x786)) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1557) (= x974 (x58 1461501637330902918203684832716283019655932542975 x1039)) (not x1146) (= x372 (x505 (x758 x974) x527 0)) (= x826 (x505 (x758 x1517) x372 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x786 x418))) (and x1146 (= x1334 (x505 (x758 x1493) x30 0)) (= (x505 (x758 x1517) x1334 0) x1086) (= x1493 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= x30 (x505 (x758 x1257) (x869 7) 0)) (= x881 x313))) (>= x886 0) (>= x777 0) (= x1418 (x505 (x758 x1257) (x869 7) 0)) (= x886 (x848 x362)) (= x313 (x479 (+ 128 x1052))) (= x196 (x1179 x162 1)) (= x816 (x862 x1459)) (= (x479 (+ x1052 96)) x1459) (= (x632 x162) x1350) (= x52 (x58 1461501637330902918203684832716283019655932542975 x1039)) (not x659) (= x1146 (= 0 x786)) (= (< x886 x816) x1391) (= x354 (x505 (x758 x52) x1418 0)) (<= x1350 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x777 (x910 x196)) (= x362 (x505 (x758 x1517) x354 0)))) (or (and (= (x58 1461501637330902918203684832716283019655932542975 x1039) x989) (not x1068)) x1068) (= (= 0 x418) x659)) x868) x1264))
(assert (=> (<= x205 10000) (= (x758 x205) (x869 x205))))
(assert (= x1236 (x1433 (x758 x1236))))
(assert (x106 x853))
(assert (x106 x363))
(assert (= (=> (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 (x758 x855))) x1131) (= x128 x243) (= (x131 (x758 274184521717934524641157099916833587206)) x1090) (= (x131 (x758 274184521717934524641157099916833587206)) x29) x274 (= x937 (x131 (x758 x855))) x1131 (= (= 274184521717934524641157099916833587218 x855) x507) (= x32 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x937)) x32 (= (x1502 (x758 x855)) x1042) (= x274 (<= 0 x1090))) (and (=> (not x507) x321) (=> (and (= x1544 (x58 1461501637330902918203684832716283019655932542975 x251)) (= x243 x1305) (= x1455 (x505 (x758 274184521717934524641157099916833587206) (x869 1) 0)) (= (< x742 x329) x1446) (= 2835717307 x915) (= x308 (x295 (- x1305 4))) (not (> 4 x1305)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x329 x1461)) (not x1446) (= x630 274184521717934524641157099916833587206) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x742) (not x346) (= x12 (x549 (x758 274184521717934524641157099916833587218))) (= 1 x665) (not (= 649617121 x915)) (>= 1461501637330902918203684832716283019655932542975 x251) (not (= x915 2514000705)) (not (= x915 1889567281)) (not x671) (> x12 0) (= x999 x436) (= x436 x329) (>= x1461 0) (= x1461 x19) (= x1471 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 826074471 x915)) (= (x505 (x758 274184521717934524641157099916833587206) (x869 1) 0) x246) (= x1092 x378) x507 (not x423) (>= x742 0) (= x172 x329) (= 68 x1305) (= x588 (x505 (x758 x1544) (x869 1) 0)) (= 32 x1314) (= (x148 x588) x1461) (= (x295 (- x742 x436)) x1535) (= (or (and (= (<= x308 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x308 64)) (> x308 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x671) (= x1021 (x58 1461501637330902918203684832716283019655932542975 x251)) (= (> x436 x742) x346) (= x251 x1423) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1461) (not (< x915 649617121)) (= 274184521717934524641157099916833587206 x238) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x329 x1461)) x423) (= (+ x19 x172) x256) (= x742 (x426 x246))) x550))) x761))
(assert (x106 x298))
(assert (x106 x1070))
(assert (= (x110 x768) (ite (= x768 x1301) x21 (x17 x768))))
(assert (=> (>= 10000 x850) (= (x758 x850) (x869 x850))))
(assert (x106 x572))
(assert (x719 x434))
(assert (x408 x1236))
(assert (= x971 (x1433 (x758 x971))))
(assert (x106 x1396))
(assert (=> (>= 10000 x1061) (= (x758 x1061) (x869 x1061))))
(assert (x106 x1137))
(assert (x408 x1369))
(assert (x106 x1265))
(assert (x106 x1525))
(assert (x106 x730))
(assert (=> (<= x422 10000) (= (x758 x422) (x869 x422))))
(assert (= (x1433 (x758 x1176)) x1176))
(assert (= (x1433 (x869 142201243)) 142201243))
(assert (= (x758 2514000705) (x869 2514000705)))
(assert (x106 x814))
(assert (x106 x1009))
(assert (=> (<= x1546 10000) (= (x758 x1546) (x869 x1546))))
(assert (=> (<= x669 10000) (= (x869 x669) (x758 x669))))
(assert (x408 x1478))
(assert (x106 x777))
(assert (x106 x187))
(assert (= (x1232 x695) 0))
(assert (x106 x256))
(assert (= (ite (and x1167 x980) (x1403 x1556) (x86 x1556)) (x1136 x1556)))
(assert (= x180 (x1433 (x758 x180))))
(assert (x106 x908))
(assert (= x1474 x1288))
(assert (x106 x1545))
(assert (x106 x399))
(assert (x408 x1440))
(assert (= (x940 x127) (ite (and x1519 x1210) (x753 x127) (x1364 x127))))
(assert (x106 x130))
(assert (= (x343 x337) (ite (= x831 x337) 0 (x113 x337))))
(assert (x106 x1371))
(assert (= x1173 (x1433 (x758 x1173))))
(assert (x408 x1130))
(assert (x106 x4))
(assert (x106 x750))
(assert (= (ite (and x119 x1485) (x726 x534) (ite (and (not x1485) x584 x119) (x726 x534) (x1083 x534))) (x1180 x534)))
(assert (x106 x204))
(assert (= (ite (and x655 (not x27) x1324) (x576 x1444) (x1057 x1444)) (x70 x1444)))
(assert (= x1025 (=> (and (<= 0 x680) (<= 0 x1225) (>= x1249 0) (<= 0 x234) x235 (= x998 x693) (= x1517 x731) (= x1361 87118632) (= (x684 (x758 274184521717934524641157099916833587214)) x462) (= x1496 (x684 (x758 274184521717934524641157099916833587206))) (= x1225 (x684 (x758 274184521717934524641157099916833587218))) x450 (= x234 x1016) (>= x462 0) (>= 1461501637330902918203684832716283019655932542975 x1249) (= false x740) x1472 (>= 1461501637330902918203684832716283019655932542975 x693) (<= x680 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x731) (= x450 (< 0 (x549 (x758 274184521717934524641157099916833587218)))) (= x1462 4) (>= 1461501637330902918203684832716283019655932542975 x234) (>= x731 0) (= false x1464) (= x235 (> (x549 (x758 274184521717934524641157099916833587206)) 0)) (= x324 x692) (<= 0 x1496) (= false x1405) (>= x693 0) (= false x562) (= (> (x549 (x758 274184521717934524641157099916833587214)) 0) x1472)) x454)))
(assert (= (x758 2798343961) (x869 2798343961)))
(assert (x106 x1112))
(assert (x106 x1246))
(assert (x106 x927))
(assert (x106 x203))
(assert (= (x70 x752) (ite (and x655 (not x27) x1324) (x576 x752) (x1057 x752))))
(assert (x106 x476))
(assert (= (x890 x1262) (ite (and x1167 x373) (x110 x1262) (ite (and (not x373) (not x273) x1499 x1167) (x198 x1262) (ite (and (not x373) (not x1499) x1167) (x110 x1262) (x427 x1262))))))
(assert (x106 x458))
(assert (= (x869 2258409472) (x758 2258409472)))
(assert (= (x1433 (x758 x1467)) x1467))
(assert (= (x1035 x1390) (ite (= x1137 x1390) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x746 x1390))))
(assert (x106 x892))
(assert (x106 x1413))
(assert (x719 x1164))
(assert (x106 x786))
(assert (x106 x680))
(assert (=> (>= 10000 x1208) (= (x758 x1208) (x869 x1208))))
(assert (x408 x669))
(assert (x106 x1164))
(assert (= (ite (and x980 x1167) (x1403 x508) (x86 x508)) (x1136 x508)))
(assert (x408 x126))
(assert (= x403 (=> (and x981 (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1302 (x758 x1338))) x1012) (= x2 x535) x1012 x1041 (= (x684 (x758 x1338)) x750) (= (<= 0 x500) x981) (= x210 (x684 (x758 274184521717934524641157099916833587206))) (= (x684 (x758 274184521717934524641157099916833587206)) x500) (= x540 (x1302 (x758 x1338))) (= x807 (= x1338 274184521717934524641157099916833587218)) (= (< x750 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1041)) (and (=> (not x807) x1445) (=> (and (not x1107) (= (x1240 x1491) x795) (= x371 x535) (not (= 649617121 x40)) (not (= x40 1889567281)) (= x871 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x700 x795)) (= x700 x317) (= x645 (x549 (x758 274184521717934524641157099916833587218))) (not (= x40 826074471)) (= 2835717307 x40) (= x1423 x1333) (= (< x539 x647) x836) (<= x795 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x383 32) (= (x551 x1220) x539) (= (< x539 x700) x1051) (= x801 (x505 (x758 274184521717934524641157099916833587206) (x869 1) 0)) (not (> 649617121 x40)) (not (= 2514000705 x40)) (= x469 274184521717934524641157099916833587206) (= x130 (x58 1461501637330902918203684832716283019655932542975 x1333)) (= x1491 (x505 (x758 x978) (x869 1) 0)) (= x1220 (x505 (x758 274184521717934524641157099916833587206) (x869 1) 0)) (= x766 x795) (not x836) (= x978 (x58 1461501637330902918203684832716283019655932542975 x1333)) (not x1342) (not (< x371 4)) (= x614 1) (= x567 (x505 (x758 x130) (x869 1) 0)) x807 (> x645 0) (= x1106 274184521717934524641157099916833587206) (= (>= (+ x700 x795) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1342) (= (x295 (- x371 4)) x410) (= x647 x366) (= 68 x371) (= x1107 (or (and (< x410 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x410) true)) (> x410 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x1051) (<= x539 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x539) (= x1072 (x295 (- x539 x647))) (= x7 (+ x317 x766)) (<= x1333 1461501637330902918203684832716283019655932542975) (= x647 x700) (<= 0 x795) (= x1117 x973)) x1013)))))
(assert (= x1504 (x1433 (x758 x1504))))
(assert (= (and x578 x381) x192))
(assert (x408 x814))
(assert (= (x940 x1390) (ite (and x1519 x1210) (x753 x1390) (x1364 x1390))))
(assert (x106 x1551))
(assert (x106 x1171))
(assert (= x963 (x1433 (x758 x963))))
(assert (x106 x844))
(assert (= (ite (= x1444 x127) x84 (x1507 x127)) (x753 x127)))
(assert (x106 x145))
(assert (x106 x424))
(assert (x106 x237))
(assert (= (=> (= 0 x669) x620) x275))
(assert (= 2798343961 (x1433 (x869 2798343961))))
(assert (= (ite (and x281 x1141 (not x1268)) (x226 x1029) (x883 x1029)) (x920 x1029)))
(assert (x408 274184521717934524641157099916833587218))
(assert (=> (<= x292 10000) (= (x758 x292) (x869 x292))))
(assert (x408 x257))
(assert (=> (<= x4 10000) (= (x758 x4) (x869 x4))))
(assert true)
(assert (= (x1062 x1390) (ite (and x1097 x507) (x270 x1390) (x1134 x1390))))
(assert (x106 x2))
(assert (x408 x1517))
(assert (x106 x180))
(assert (= (x1049 x695) (ite (= x878 x695) x1492 (x932 x695))))
(assert (= (ite (and x373 x1167) (x110 x946) (ite (and (not x273) x1167 (not x373) x1499) (x198 x946) (ite (and x1167 (not x1499) (not x373)) (x110 x946) (x427 x946)))) (x890 x946)))
(assert (=> (>= 10000 x227) (= (x758 x227) (x869 x227))))
(assert (x106 x1452))
(assert (x106 x366))
(assert (x106 x1235))
(assert (= x138 x1404))
(assert (= (ite (= x173 x878) x1492 (x932 x173)) (x1049 x173)))
(assert (= (x110 x1262) (ite (= x1262 x1301) x21 (x17 x1262))))
(assert (x106 x199))
(assert (= (x1433 (x758 x1517)) x1517))
(assert (x106 x1322))
(assert (= x20 (or (and x979 x1123) (and (not x578) x381) (and x1442 (not x949)))))
(assert (x408 x1417))
(assert (x106 x1236))
(assert (= (x71 x478) (ite (= x478 x1158) x966 (x1226 x478))))
(assert (x106 x1211))
(assert (x106 x1024))
(assert (= (ite (and x1300 x1449 x1324 x655 (not x498) x759) (x71 x695) (ite (and x1324 x1300 (not x1449) x759 x655) (x1226 x695) (ite (and x655 x759 x1324 (not x1300)) (x1049 x695) (ite (and x655 x1324 (not x759)) (x932 x695) (x900 x695))))) (x576 x695)))
(assert (= (x758 911411945) (x869 911411945)))
(assert (= x541 (=> (and (= (x505 (x758 x788) (x869 10) 0) x212) (= x152 (x1111 x1387)) (<= x152 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x1060 911411945) (> x353 0) (> 468353030 x1060) (< x1060 2293535753) (= x1060 69947311) (>= 1461501637330902918203684832716283019655932542975 x510) (<= 0 x152) (= x1063 x152) (= (x505 (x758 x510) x212 0) x1387) (= (x549 (x758 274184521717934524641157099916833587206)) x353)) (=> (and (= x1249 x1504) (= x963 x324) (= x1063 x261) (= x85 x234)) x157))))
(assert (x106 x743))
(assert (x106 x1339))
(assert (= x764 (=> (= 0 x396) x457)))
(assert (x106 x1497))
(assert (x106 x533))
(assert (x408 x906))
(assert (x106 x637))
(assert (x106 x872))
(assert (x408 x1008))
(assert (x106 x434))
(assert (= (=> (and (= (= 0 x383) x419) (= x675 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1277 (x758 274184521717934524641157099916833587206)))) (= (x703 (x758 x1338)) x1332) (= (x233 x770) x1509) (or (and (= (x479 (+ x827 96)) x1552) (not x419) (= (x58 115792089237316195423570985008687907853269984665640564039457584007913129639904 x676) x901) (= x1508 x800) (= x676 (x479 (+ 63 x383))) (= x770 x586) (= (x479 (+ x901 x586)) x1508)) (and (= 96 x770) x419 (= x586 x800))) (not (= 0 x614)) x675 (= x115 (< 0 x1509)) (= x68 (x1277 (x758 274184521717934524641157099916833587206))) (or (and (= (= x1540 0) x1489) (= (ite x1006 1 0) x793) (= (not x1489) x1006) (< 0 x1540) (= x1540 x793) (= x1147 (x233 x770)) (= x1540 (x233 x695)) (not (or (> x1147 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1147 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1147))))) x115 (= x695 (x479 (+ x770 32)))) (not x115))) x873) x1013))
(assert (x106 x474))
(assert (=> (>= 10000 x401) (= (x869 x401) (x758 x401))))
(assert (= (x1433 (x758 x268)) x268))
(assert (= (ite (= x770 x399) x1345 (x222 x770)) (x619 x770)))
(assert (x106 x1275))
(assert (x719 x1303))
(assert (= (ite (and x1167 x980) (x1403 x468) (x86 x468)) (x1136 x468)))
(assert (x106 x654))
(assert (x408 x963))
(assert (x106 x438))
(assert (= (x70 x425) (ite (and x655 (not x27) x1324) (x576 x425) (x1057 x425))))
(assert (= (ite (= x878 x1168) x1492 (x932 x1168)) (x1049 x1168)))
(assert (x719 x1333))
(assert (x408 x227))
(assert (=> (<= x111 10000) (= (x869 x111) (x758 x111))))
(assert (= (x1035 x478) (ite (= x1137 x478) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x746 x478))))
(assert (= x1481 (=> (and (< x206 2960351575) (= x815 (x549 (x758 274184521717934524641157099916833587206))) (= (x726 x919) x583) (not (< x206 2690754053)) (= (x505 (x758 x1156) (x869 3) 0) x1498) (< 0 x815) (= x572 x583) (>= 1461501637330902918203684832716283019655932542975 x379) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x583) (= x845 (x505 (x758 x4) x1498 0)) (not (= x206 2690754053)) (not (> 2293535753 x206)) (>= 1461501637330902918203684832716283019655932542975 x4) (= x206 2743102681) (<= 0 x583) (= (x505 (x758 x379) x845 0) x919)) (=> (and (= x234 x510) (= (>= x298 x1505) x776) (= x1505 x572) (= x324 x788)) x541))))
(assert (= x1245 (x1433 (x758 x1245))))
(assert (x719 x453))
(assert (= 0 (x1232 x1248)))
(assert (= x1127 (x1433 (x758 x1127))))
(assert (x408 x204))
(assert (= x979 (and x1442 x949)))
(assert (x106 x1546))
(assert (= (ite (= x1444 x173) x84 (x1507 x173)) (x753 x173)))
(assert (= (and (not x290) x683) x605))
(assert (= (x753 x1298) (ite (= x1444 x1298) x84 (x1507 x1298))))
(assert (x106 x810))
(assert (x106 x402))
(assert (= (ite (and x980 x1167) (x663 x589) (x1250 x589)) (x1151 x589)))
(assert (= (x1433 (x758 x259)) x259))
(assert (= (x869 274184521717934524641157099916833587206) (x758 274184521717934524641157099916833587206)))
(assert (x106 x863))
(assert (x106 x472))
(assert (= x624 (=> (= x332 (< 0 x1061)) (and (=> (not x332) x154) (=> x332 x1254)))))
(assert (= x977 x39))
(assert (= (x71 x64) (ite (= x64 x1158) x966 (x1226 x64))))
(assert (x106 x239))
(assert (= x974 (x1433 (x758 x974))))
(assert (= x1178 x1324))
(assert (=> (>= 10000 x1130) (= (x869 x1130) (x758 x1130))))
(assert (x106 x448))
(assert (x106 x127))
(assert (= (x1433 (x1179 x1431 1)) (+ 1 (x1433 x1431))))
(assert (x1450 x654 x1054))
(assert (x106 x504))
(assert (= (x758 1461501637330902918203684832716283019655932542975) (x869 1461501637330902918203684832716283019655932542975)))
(assert (x106 x1073))
(assert (= (x848 x888) (ite (and x119 x1485) (x1222 x888) (ite (and x584 x119 (not x1485)) (x184 x888) (x1247 x888)))))
(assert (=> (<= x1545 10000) (= (x758 x1545) (x869 x1545))))
(assert (= (ite (= x415 x478) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x478)) (x932 x478)))
(assert (= (x932 x752) (ite (= x752 x415) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x752))))
(assert (x106 x767))
(assert (x106 x425))
(assert (x106 x1321))
(assert (=> (>= 10000 x814) (= (x758 x814) (x869 x814))))
(assert (x408 x1545))
(assert (= (ite (= x1029 x878) x1492 (x932 x1029)) (x1049 x1029)))
(assert (= (x758 69947311) (x869 69947311)))
(assert (x106 x303))
(assert (x106 x1295))
(assert (= (ite (= x878 x1248) x1492 (x932 x1248)) (x1049 x1248)))
(assert (x106 x536))
(assert (x106 x526))
(assert (x106 x1484))
(assert (= (x1433 (x758 x962)) x962))
(assert (x106 x1412))
(assert (x408 x16))
(assert (=> (<= x1261 10000) (= (x758 x1261) (x869 x1261))))
(assert (x106 x365))
(assert (x106 x1090))
(assert (= (x758 649617121) (x869 649617121)))
(assert (= (ite (= x1444 x74) x84 (x1507 x74)) (x753 x74)))
(assert (x408 x1412))
(assert (= (x576 x478) (ite (and x1324 x1449 x1300 x759 (not x498) x655) (x71 x478) (ite (and x1324 x655 x759 (not x1449) x1300) (x1226 x478) (ite (and x1324 x655 x759 (not x1300)) (x1049 x478) (ite (and (not x759) x655 x1324) (x932 x478) (x900 x478)))))))
(assert (=> (<= x1385 10000) (= (x869 x1385) (x758 x1385))))
(assert (x106 x1362))
(assert (x408 x382))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1009) (= x784 (x505 (x758 x1061) (x869 6) 0)) (not (> x1558 x473)) (= (x505 (x758 x1176) x784 0) x612) (>= x473 0) (= x1009 (x1381 x612)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x473) (<= 0 x1009) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1176) (= (= 0 x1009) x269)) (and (=> x269 x624) (=> (and (= 0 x1299) (= x97 (x505 (x758 x1061) (x869 10) 0)) (= x347 (x1111 x109)) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x227) (= x10 x347) (not x269) (= (x505 (x758 x227) x97 0) x109) (>= x347 0) (<= x347 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x622))) x264))
(assert (=> (<= x1440 10000) (= (x869 x1440) (x758 x1440))))
(assert (x106 x1132))
(assert (x106 x1079))
(assert (x106 x206))
(assert (x106 x1540))
(assert (= (=> (and (= (x295 (- x1061 1)) x48) (= x780 (< 0 x48))) (and (=> (not x780) x154) (=> x780 x531))) x123))
(assert (x408 x974))
(assert (= x638 (=> (and (< x633 911411945) (>= x155 0) (= (x549 (x758 274184521717934524641157099916833587206)) x174) (= x945 x155) (<= x656 1461501637330902918203684832716283019655932542975) (> 2293535753 x633) (not (= x633 468353030)) (= x633 759532456) (= x934 (x505 (x758 x26) (x869 7) 0)) (not (> 468353030 x633)) (>= 1461501637330902918203684832716283019655932542975 x1322) (= x825 (x505 (x758 x1322) x934 0)) (= (x1228 x888) x155) (not (= 635128645 x633)) (> x174 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x155) (= (x505 (x758 x656) x825 0) x888)) (=> (and (= x945 x560) (= (<= x560 x666) x151) (= x971 x234) (= x324 x514)) x955))))
(assert (x408 x1028))
(assert (x106 x478))
(assert (x106 x752))
(assert (= (x1433 (x758 x1261)) x1261))
(assert (x106 x1482))
(assert (= (ite (= x1298 x399) x1345 (x222 x1298)) (x619 x1298)))
(assert (x106 x1422))
(assert (x408 x765))
(assert (= (or x186 x1259) x1529))
(assert (x106 x529))
(assert (= (x890 x1298) (ite (and x1167 x373) (x110 x1298) (ite (and (not x273) x1499 (not x373) x1167) (x198 x1298) (ite (and (not x373) (not x1499) x1167) (x110 x1298) (x427 x1298))))))
(assert (= (x1232 x1298) 0))
(assert (x106 x181))
(assert (x106 x843))
(assert (= x1089 (x1433 (x758 x1089))))
(assert (x106 x108))
(assert (= true x840))
(assert (x408 x4))
(assert (= (x1049 x64) (ite (= x878 x64) x1492 (x932 x64))))
(assert (x408 x293))
(assert (x106 x648))
(assert (x106 x628))
(assert (x106 x642))
(assert (x106 x1316))
(assert (x1450 x1303 x1201))
(assert (= (ite (and x1167 x373) (x110 x770) (ite (and x1167 x1499 (not x373) (not x273)) (x198 x770) (ite (and (not x373) (not x1499) x1167) (x110 x770) (x427 x770)))) (x890 x770)))
(assert (x106 x147))
(assert (x719 x251))
(assert (=> (<= x363 10000) (= (x758 x363) (x869 x363))))
(assert (= x669 (x1433 (x758 x669))))
(assert (x106 x1027))
(assert (x106 x970))
(assert (= x341 (x1433 (x758 x341))))
(assert (x106 x946))
(assert (x106 x1129))
(assert (x408 x850))
(assert (= (x1049 x1390) (ite (= x1390 x878) x1492 (x932 x1390))))
(assert (x106 x1377))
(assert (not x1025))
(assert (x408 x272))
(assert (x725 x1336 x738))
(assert (= (x1433 (x758 x379)) x379))
(assert (x106 x586))
(assert (x408 x971))
(assert (x106 x102))
(assert (= (x1433 (x758 x1546)) x1546))
(assert (= (x1049 x1444) (ite (= x1444 x878) x1492 (x932 x1444))))
(assert (= (ite (and x1167 x373) (x110 x1168) (ite (and x1167 x1499 (not x373) (not x273)) (x198 x1168) (ite (and x1167 (not x373) (not x1499)) (x110 x1168) (x427 x1168)))) (x890 x1168)))
(assert (= (x869 1889567281) (x758 1889567281)))
(assert (= (x758 2293535753) (x869 2293535753)))
(assert (x106 x832))
(assert (= (x1433 (x758 x16)) x16))
(assert (x106 x535))
(assert (= x349 (x1433 (x758 x349))))
(assert (= x1003 x230))
(assert (x106 x379))
(assert (= (x940 x478) (ite (and x1519 x1210) (x753 x478) (x1364 x478))))
(assert (=> (<= x341 10000) (= (x869 x341) (x758 x341))))
(assert (x106 x1043))
(assert (x106 x881))
(assert (x106 x1492))
(assert (= (=> (and (= (= 0 x1316) x1358) (or x1358 (and (= x721 (x505 (x758 x1517) x944 0)) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1261) (= x944 (x505 (x758 x1261) x734 0)) (= (x505 (x758 x1061) (x869 9) 0) x734) (not x1358))) (or (and (= x736 (x505 (x758 x1517) x653 0)) (= x1052 x1386) x1485 (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1412) (= x653 (x505 (x758 x1412) x707 0)) (= (x505 (x758 x1061) (x869 7) 0) x707)) (and (<= x606 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x279 (x1179 x1233 1)) (= x596 (x1441 x1503)) (= x1503 (x505 (x758 x1517) x716 0)) (= (x505 (x758 x1061) (x869 7) 0) x200) (= (x806 x1022) x1116) (= x1022 (x479 (+ x1386 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x596) (or (and (= x832 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= x421 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= x1155 (x505 (x758 x1517) x673 0)) (= x1388 (* x1043 x147)) (= x918 (x505 (x758 x421) x621 0)) (= x621 (x505 (x758 x1061) (x869 7) 0)) (= (x505 (x758 x832) x25 0) x673) (= x1388 x404) (= x25 (x505 (x758 x1061) (x869 3) 0)) (not x584) (= (x505 (x758 x1517) x918 0) x1426) (= x472 x1052) (< (* x1043 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (= (x505 (x758 x1517) x301 0) x594) x584 (= x472 x1052) (= x301 (x505 (x758 x906) x1448 0)) (= (x505 (x758 x1061) (x869 7) 0) x1448) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x906))) (= (x632 x1233) x606) (= x164 (> x1116 x596)) (= (x910 x279) x853) (= (x505 (x758 x1074) x200 0) x716) (= (x505 (x758 x1061) (x869 1) 0) x1233) (<= 0 x853) (<= 0 x596) (= (x479 (+ x1386 64)) x472) (= x1074 (x58 1461501637330902918203684832716283019655932542975 x1039)) (not x1485) (= x584 (= 0 x147)) (<= x853 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (not x164) (= 0 x147)) (and (= x1477 (= x596 0)) (= (< x149 x51) x359) (= (x806 x1022) x149) (or (and (= x1555 (x295 (- x495 x596))) (= x775 (ite (< x1555 604800) x1555 604800)) (not x1477) (= 604800 x1084) (not (< x495 x596)) (= x147 x775)) (and (= (x806 x1386) x557) (= x1362 x147) (= (x295 (- x495 x557)) x1362) (not (< x495 x557)) x1477)) x164 (or (and (= x798 (x806 x1022)) x359 (= x798 x495)) (and (not x359) (= x495 x51))))) (>= x606 0))) (= (= 0 x1043) x1485)) x264) x340))
(assert (x106 x415))
(assert (= x524 (=> (= 0 x1214) x289)))
(assert (x1549 x1229 x1367))
(assert (= (ite (and x1449 x1324 x1300 x655 (not x498) x759) (x71 x425) (ite (and x1324 (not x1449) x655 x759 x1300) (x1226 x425) (ite (and x655 (not x1300) x759 x1324) (x1049 x425) (ite (and x655 x1324 (not x759)) (x932 x425) (x900 x425))))) (x576 x425)))
(assert (= (ite (= x1137 x1248) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x746 x1248)) (x1035 x1248)))
(assert (= (x1035 x800) (ite (= x1137 x800) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x746 x800))))
(assert (x408 x1504))
(assert (= (x1226 x1444) (ite (= x1444 x211) x1295 (x1049 x1444))))
(assert (x106 x604))
(assert (= (x869 759532456) (x758 759532456)))
(assert (x408 x323))
(assert (x408 x1208))
(assert (x106 x710))
(assert (= (ite (= x1168 x399) x1345 (x222 x1168)) (x619 x1168)))
(assert (x106 x1252))
(assert (x106 x1060))
(assert (x106 x852))
(assert (x106 x496))
(assert (= (x758 2764855426) (x869 2764855426)))
(assert (x106 x469))
(assert (= (ite (= x9 x478) x702 (x984 x478)) (x176 x478)))
(assert (x106 x742))
(assert (x106 x592))
(assert (= x139 (=> (= x35 x1098) x839)))
(assert (= (x932 x770) (ite (= x415 x770) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x770))))
(assert (= (x1035 x1029) (ite (= x1029 x1137) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x746 x1029))))
(assert (= (x1433 (x758 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (=> (<= x219 10000) (= (x869 x219) (x758 x219))))
(assert (x106 x1419))
(assert (= (x753 x770) (ite (= x1444 x770) x84 (x1507 x770))))
(assert (= (ite (= x946 x399) x1345 (x222 x946)) (x619 x946)))
(assert (x106 x421))
(assert (= (ite (= x878 x425) x1492 (x932 x425)) (x1049 x425)))
(assert (= (x1433 (x869 2293535753)) 2293535753))
(assert (= (x1232 x768) 0))
(assert (x106 x765))
(assert (= x160 (=> (and (< x284 911411945) (= 759532456 x284) (<= x1328 1461501637330902918203684832716283019655932542975) (= (x549 (x758 274184521717934524641157099916833587206)) x1378) (= x339 (x505 (x758 x1328) x442 0)) (< x284 2293535753) (= x523 (x505 (x758 x850) x339 0)) (= x1230 x976) (not (= x284 635128645)) (> x1378 0) (not (> 468353030 x284)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1230) (>= 1461501637330902918203684832716283019655932542975 x850) (= x442 (x505 (x758 x504) (x869 7) 0)) (not (= x284 468353030)) (= (x1441 x523) x1230) (<= 0 x1230)) (=> (and (= x1114 (<= x91 x1198)) (= x324 x1326) x1114 (= x976 x1198) (= x234 x872)) x1118))))
(assert (= (x869 635128645) (x758 635128645)))
(assert (x106 x1457))
(assert (x106 x997))
(assert (x408 x656))
(assert (x106 x623))
(assert (x106 x1343))
(assert (= (x1433 (x869 2211524764)) 2211524764))
(assert (= x814 (x1433 (x758 x814))))
(assert (x106 x414))
(assert (x106 x315))
(assert (= (x71 x946) (ite (= x946 x1158) x966 (x1226 x946))))
(assert (x408 x727))
(assert (x106 x820))
(assert (= (x984 x478) (ite (= x478 x513) x239 (x1035 x478))))
(assert (x106 x161))
(assert (= (x1433 (x758 x1514)) x1514))
(assert (=> (<= x28 10000) (= (x758 x28) (x869 x28))))
(assert (= (or (and x507 x1097) (and x1023 x704)) x440))
(assert (=> (<= x788 10000) (= (x869 x788) (x758 x788))))
(assert (x106 x989))
(assert (= x1097 (and x1141 x281)))
(assert (= (ite (and x1519 x1210) (x753 x1298) (x1364 x1298)) (x940 x1298)))
(assert (x106 x739))
(assert (x106 x190))
(assert (x106 x1480))
(assert (x106 x91))
(assert (x106 x1074))
(assert (x106 x563))
(assert (x106 x13))
(assert (=> (>= 10000 x514) (= (x758 x514) (x869 x514))))
(assert (=> (>= 10000 x1356) (= (x758 x1356) (x869 x1356))))
(assert (x106 x135))
(assert (x106 x799))
(assert (x106 x1544))
(assert (x106 x309))
(assert (x408 x1321))
(assert (x106 x1199))
(assert (= (x110 x1195) (ite (= x1195 x1301) x21 (x17 x1195))))
(assert (= (ite (and x1519 x1210) (x753 x1195) (x1364 x1195)) (x940 x1195)))
(assert (=> (<= x1514 10000) (= (x758 x1514) (x869 x1514))))
(assert (= x899 (or (and x685 (not x713)) (and x1307 (not x938)))))
(assert (=> (<= x974 10000) (= (x758 x974) (x869 x974))))
(assert (x408 x26))
(assert (= (x848 x1066) (ite (and x119 x1485) (x1222 x1066) (ite (and x584 x119 (not x1485)) (x184 x1066) (x1247 x1066)))))
(assert (= (ite (and x119 x1485) (x726 x337) (ite (and x584 x119 (not x1485)) (x726 x337) (x1083 x337))) (x1180 x337)))
(assert (x106 x68))
(assert (x106 x347))
(assert (x106 x1245))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x1433 (x869 115792089237316195423570985008687907853269984665640564039457))))
(assert (x106 x757))
(assert (x106 x924))
(assert (= (ite (= x1248 x768) x303 (x110 x1248)) (x198 x1248)))
(assert (= (x1433 (x869 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x106 x329))
(assert (= (x952 x1390) (ite (= x1390 x1298) x1275 (x619 x1390))))
(assert (= (=> (= x34 (> x1061 0)) (and (=> x34 x101) (=> (not x34) x275))) x904))
(assert (x106 x1241))
(assert (= (x1433 (x758 x293)) x293))
(assert (x106 x585))
(assert (x106 x391))
(assert (=> (<= x1100 10000) (= (x758 x1100) (x869 x1100))))
(assert (x408 x504))
(assert (= (x110 x338) (ite (= x338 x1301) x21 (x17 x338))))
(assert (=> (<= x272 10000) (= (x869 x272) (x758 x272))))
(assert (x106 x1008))
(assert (x106 x15))
(assert (x106 x120))
(assert (= (ite (= x1248 x211) x1295 (x1049 x1248)) (x1226 x1248)))
(assert (x408 x1078))
(assert (= x1544 (x1433 (x758 x1544))))
(assert (x106 x1444))
(assert (x106 x217))
(assert (=> (>= 10000 x1245) (= (x758 x1245) (x869 x1245))))
(assert (x106 x360))
(assert (=> (>= 10000 x1557) (= (x758 x1557) (x869 x1557))))
(assert (= (and x938 x1307) x1284))
(assert (x106 x413))
(assert (= (ite (= x211 x64) x1295 (x1049 x64)) (x1226 x64)))
(assert (= x1470 x898))
(assert (= (x110 x1390) (ite (= x1301 x1390) x21 (x17 x1390))))
(assert (x408 x349))
(assert (= (x1226 x1029) (ite (= x1029 x211) x1295 (x1049 x1029))))
(assert (=> (>= 10000 x672) (= (x758 x672) (x869 x672))))
(assert (= 2835717307 (x1433 (x869 2835717307))))
(assert (x106 x768))
(assert (x106 x583))
(assert (= (x1151 x1096) (ite (and x1167 x980) (x663 x1096) (x1250 x1096))))
(assert (= (x1433 (x869 2690754053)) 2690754053))
(assert (x106 x495))
(assert (= (or (and (not x369) x947) (and (not x37) x701)) x1530))
(assert (x106 x1092))
(assert (x106 x941))
(assert (x408 x510))
(assert (x408 x927))
(assert (= (x1433 (x869 468353030)) 468353030))
(assert (x408 x1468))
(assert (=> (<= x1098 10000) (= (x758 x1098) (x869 x1098))))
(assert (x106 x357))
(assert (= (x758 2061678023) (x869 2061678023)))
(assert (x106 x1248))
(assert (= (x1433 (x758 x205)) x205))
(assert (x106 x1533))
(assert (= 0 (x1232 x338)))
(assert (= x1254 (=> (and (= x662 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= (x505 (x758 x1061) (x869 6) 0) x501) (= x1330 (x505 (x758 x662) x501 0)) (= x1207 (x1381 x1330)) (<= x1207 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1207 0) (= x78 (= x1207 0))) (and (=> (and (not x78) (= x35 x1061)) x139) (=> x78 x123)))))
(assert (= x230 x185))
(assert (= (x940 x1248) (ite (and x1519 x1210) (x753 x1248) (x1364 x1248))))
(assert (x408 x692))
(assert (= (x940 x770) (ite (and x1210 x1519) (x753 x770) (x1364 x770))))
(assert (= (x869 2211524764) (x758 2211524764)))
(assert (x106 x353))
(assert (= (x1433 (x758 x906)) x906))
(assert (x408 x1176))
(assert (x106 x384))
(assert (=> (>= 10000 x414) (= (x758 x414) (x869 x414))))
(assert (x408 x1392))
(assert (= x59 (=> (and (= (x505 (x758 x1061) (x869 7) 0) x1075) (= x1161 (x505 (x758 x1517) x314 0)) (= x852 (x1441 x1161)) (= (> x852 0) x331) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1078) (= x314 (x505 (x758 x1078) x1075 0)) (not (> x1558 x473)) (>= x852 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x852) (>= x473 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x473)) (and (=> (not x331) x904) (=> (and (= x417 (x1125 x330)) (<= x417 115792089237316195423570985008687907853269984665640564039457584007913129639935) x331 (= x1130 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= x1280 (x505 (x758 x1130) x481 0)) (= x481 (x505 (x758 x1061) (x869 9) 0)) (= x417 x1043) (= 0 x1316) (>= x417 0) (= (x505 (x758 x1517) x1280 0) x330)) x340)))))
(assert (= x765 (x1433 (x758 x765))))
(assert (x106 x1218))
(assert (x408 x1098))
(assert (x106 x500))
(assert (x106 x974))
(assert (= (and (not x137) x609) x1283))
(assert (=> (<= x130 10000) (= (x869 x130) (x758 x130))))
(assert (= (x1433 (x758 x837)) x837))
(assert (x106 x596))
(assert (= x272 (x1433 (x758 x272))))
(assert (x408 x1356))
(assert (x106 x1276))
(assert (= (ite (and x1133 x1103) (x1180 x1547) (ite (and x609 x137) (x726 x1547) (x1548 x1547))) (x113 x1547)))
(assert (x106 x897))
(assert (x106 x787))
(assert (x106 x1031))
(assert (= (=> (= (> x84 1) x281) (and (=> (and (= x1497 (x549 (x758 x855))) (= (< 0 x128) x356) x1274 (= (x233 x64) x999) (= (x479 (+ x800 32)) x425) (= (x295 (- x458 32)) x1209) (= x967 (x479 (+ x800 100))) (= (x233 x1444) x787) (= x1137 (x479 (+ x244 96))) (= (x1476 x425) x453) (= x458 (x295 (- x967 x800))) (>= 1461501637330902918203684832716283019655932542975 x855) (= x1268 (> x1396 x128)) (= (x1035 x800) x128) (or (and (= 0 x1396) (not x356)) (and (= x1271 (< 32 x128)) x356 (= x513 x769) (= (x1035 x946) x239) (or (and (= x1396 32) (not x1271)) (and (= x9 (x479 (+ 96 x967))) (= x702 (x984 x1248)) (or (and (not x96) (= x1396 64)) (and (or (and (= 96 x1396) (not x608)) (and x608 (= (x1190 x478) x365) (= 128 x1396) (= (x479 (+ 128 x800)) x478) (= (< 128 x128) x1053) (not x1053) (= x438 (x479 (+ 160 x967))))) (= x1081 (x176 x752)) (= x608 (< 96 x128)) x96 (= x752 (x479 (+ x800 96))) (= x1047 (x479 (+ 128 x967))))) x1271 (= (< 64 x128) x96) (= (x479 (+ x800 64)) x1248))) (= x946 x425))) (= (x479 (+ x244 128)) x769) (= (x479 (+ 64 x344)) x364) (= (x143 x364) x855) (= (x479 (+ x800 36)) x244) (= (x58 26959946667150639794667015087019630673637144422540572481103610249215 x453) x474) (> x84 1) (= 0 x1377) (= (x479 (+ x474 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x1059) (= x64 (x479 (+ x1483 192))) (= (x479 (+ 68 x800)) x1073) (= x1274 (< 0 x1497)) x281 (or (not x1268) (and x1268 (= (x479 (+ x769 x128)) x1484))) (< 1 x787)) x761) (=> (not x281) x1550))) x873))
(assert (x106 x735))
(assert (= (x619 x1248) (ite (= x399 x1248) x1345 (x222 x1248))))
(assert (= x1008 (x1433 (x758 x1008))))
(assert (= (ite (= x695 x1301) x21 (x17 x695)) (x110 x695)))
(assert (x106 x150))
(assert (x408 274184521717934524641157099916833587206))
(assert (x408 x1419))
(assert (x106 x313))
(assert (x106 x1353))
(assert (x106 x1229))
(assert (= x482 (=> (= x669 x1488) x620)))
(assert (x106 x1308))
(assert (x106 x1214))
(assert (= x363 (x1433 (x758 x363))))
(assert (x408 x130))
(assert (x106 x396))
(assert (x106 x1256))
(assert (x106 x462))
(assert (x106 x695))
(assert (= (ite (= x127 x1158) x966 (x1226 x127)) (x71 x127)))
(assert (=> (<= x1544 10000) (= (x869 x1544) (x758 x1544))))
(assert (= (x1433 (x758 x461)) x461))
(assert (x719 x1229))
(assert (x106 x480))
(assert (x106 x211))
(assert (=> (<= x547 10000) (= (x758 x547) (x869 x547))))
(assert (= 274184521717934524641157099916833587218 (x1433 (x869 274184521717934524641157099916833587218))))
(assert (= (x1433 (x758 x111)) x111))
(assert (x106 x1554))
(assert (= (x1433 (x758 x1478)) x1478))
(assert (= (=> (and (not (= 0 x665)) (or (and (= (x479 (+ 96 x967)) x528) (= x1029 x769) (not x66)) (and (= 96 x1029) x66)) (= (= x1314 0) x66) (= x842 (> x5 0)) (not x93) (or (not x842) (and (= x1408 (= 0 x1527)) x842 (= x553 x1527) (= (ite x443 1 0) x553) (= x1024 (x1443 x1029)) (= (x479 (+ 32 x1029)) x1390) (> x1527 0) (= x1527 (x1443 x1390)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1024) (and (< x1024 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1024) true)))) (= (not x1408) x443))) (= (x38 (x758 x855)) x849) (= x5 (x1443 x1029)) x1319 (= (> x84 2) x93) (= x1319 (< (x1172 (x758 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1550) x550))
(assert (= (ite (= x478 x1301) x21 (x17 x478)) (x110 x478)))
(assert (x106 x129))
(assert (= (ite (= x1248 x415) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x1248)) (x932 x1248)))
(assert (x106 x124))
(assert (x106 x1194))
(assert (x106 x616))
(assert (x106 x1524))
(assert (= (=> (and (not (= x640 87118632)) (<= 0 x178) (>= 1461501637330902918203684832716283019655932542975 x1504) (= (x505 (x758 x1504) x1479 0) x864) (< x640 911411945) (= x616 (x549 (x758 274184521717934524641157099916833587206))) (not (= x640 69947311)) (= x876 (x505 (x758 x963) (x869 9) 0)) (= (x505 (x758 x85) x876 0) x1479) (<= x85 1461501637330902918203684832716283019655932542975) (> x616 0) (= x640 142201243) (= x178 x1184) (= (x1125 x864) x178) (< x640 2293535753) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x178) (> 468353030 x640)) (=> (and (= (and x635 x776) x432) (= x635 (<= x1242 x261)) (= x324 x765) (= x1467 x1249) (= x293 x234) (= x1242 x1184)) x1411)) x157))
(assert (=> (>= 10000 x1371) (= (x869 x1371) (x758 x1371))))
(assert (=> (>= 10000 x1173) (= (x758 x1173) (x869 x1173))))
(assert (x106 x1122))
(assert (x106 x781))
(assert (x106 x284))
(assert (x408 x855))
(assert (= (x1226 x752) (ite (= x211 x752) x1295 (x1049 x752))))
(assert (x408 x325))
(assert (=> (>= 10000 x1214) (= (x758 x1214) (x869 x1214))))
(assert (= 0 (x1232 224)))
(assert (=> (<= x1419 10000) (= (x758 x1419) (x869 x1419))))
(assert (= (=> (and (< 0 x1199) (= (x505 (x758 x514) (x869 5) 0) x948) (not (> 2293535753 x262)) (= (x549 (x758 274184521717934524641157099916833587206)) x1199) (= x639 x13) (> 2960351575 x262) (>= x13 0) (not (< x262 2690754053)) (not (= x262 2764855426)) (<= x971 1461501637330902918203684832716283019655932542975) (not (= x262 2690754053)) (not (= 2743102681 x262)) (<= x13 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x13 (x1206 x1096)) (= (x505 (x758 x971) x948 0) x1096) (= x262 2798343961)) (=> (and (= x1100 x234) (= x639 x1077) (= x1249 x18) (= x388 x324)) x779)) x955))
(assert (x106 x553))
(assert (=> (<= x325 10000) (= (x758 x325) (x869 x325))))
(assert (x106 x216))
(assert (x408 x1338))
(assert (x106 x712))
(assert (x106 x21))
(assert (= (ite (= x1301 x74) x21 (x17 x74)) (x110 x74)))
(assert (= (ite (= x415 x946) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x946)) (x932 x946)))
(assert (= (ite (and x1485 x119) (x1222 x362) (ite (and x119 (not x1485) x584) (x184 x362) (x1247 x362))) (x848 x362)))
(assert (=> (<= x1014 10000) (= (x869 x1014) (x758 x1014))))
(assert (=> (>= 10000 x656) (= (x758 x656) (x869 x656))))
(assert (x408 x637))
(assert (x106 x698))
(assert (= (x1433 (x758 x28)) x28))
(assert (= (x110 x64) (ite (= x64 x1301) x21 (x17 x64))))
(assert (= x1307 (and x968 x241)))
(assert (=> (<= x1238 10000) (= (x758 x1238) (x869 x1238))))
(assert (= (x1433 (x758 x1398)) x1398))
(assert (= (x952 x1248) (ite (= x1298 x1248) x1275 (x619 x1248))))
(assert (x106 x514))
(assert (= (x198 x64) (ite (= x768 x64) x303 (x110 x64))))
(assert (x106 x67))
(assert (x106 x1242))
(assert (x106 x376))
(assert (= (x1433 (x869 826074471)) 826074471))
(assert (= (ite (= x1029 x768) x303 (x110 x1029)) (x198 x1029)))
(assert (= (ite (= x415 x1444) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x1444)) (x932 x1444)))
(assert (x106 x937))
(assert (x106 x1021))
(assert (= x622 (=> (and (= (x505 (x758 x1089) x1510 0) x1026) (= (x479 (+ 32 x1052)) x1301) (= (x1180 x930) x15) (= x589 (x505 (x758 x1417) x1310 0)) (= x828 (x505 (x758 x1478) x754 0)) (<= x545 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1089) (= x299 (x110 x1301)) (= (= x730 0) x980) (= (x910 x56) x21) (= x350 (x505 (x758 x1061) (x869 1) 0)) (= x754 (x505 (x758 x1061) (x869 3) 0)) (= (= 0 x1299) x729) (<= x8 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= 0 x730) (not x380)) (and x380 (= x1372 (= x1252 0)) (= x104 (> x51 x429)) (or (and (= x1311 x730) (= 604800 x384) (not x1372) (= (ite (> 604800 x641) x641 604800) x1311) (= (x295 (- x767 x1252)) x641) (not (> x1252 x767))) (and x1372 (= (x295 (- x767 x529)) x987) (not (< x767 x529)) (= x987 x730) (= (x110 x1052) x529))) (or (and (= x767 x51) (not x104)) (and (= x767 x925) (= (x110 x1301) x925) x104)) (= x429 (x110 x1301)))) (= (x479 (+ x1052 64)) x953) (= (x1151 x589) x8) (<= x1252 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1252 (x1381 x1026)) (or (and (= (x505 (x758 x1061) (x869 6) 0) x224) (= x1040 (x58 1461501637330902918203684832716283019655932542975 x1039)) x980 (= x166 (x505 (x758 x1040) x224 0))) (and (= x1010 (x505 (x758 x1061) (x869 5) 0)) (not x980) (= (x505 (x758 x16) x1010 0) x100) (< (* x10 x730) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x505 (x758 x1320) x487 0) x1196) (= x543 x668) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1320) (= x487 (x505 (x758 x1061) (x869 6) 0)) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x16) (= x668 (* x730 x10)))) (= x1478 (x58 1461501637330902918203684832716283019655932542975 x1039)) (<= 0 x15) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x15) (= x1310 (x505 (x758 x1061) (x869 5) 0)) (<= 0 x1252) (<= 0 x21) (= (x632 x350) x545) (<= 0 x545) (= x1417 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= (x505 (x758 x1061) (x869 6) 0) x1510) (= x930 (x505 (x758 x1517) x828 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x21) (or x729 (and (= (x505 (x758 x1061) (x869 10) 0) x564) (= x672 (x58 1461501637330902918203684832716283019655932542975 x1039)) (not x729) (= x1389 (x505 (x758 x672) x564 0)))) (= (= x15 0) x373) (= (> x299 x1252) x380) (>= x8 0) (or (and x373 (= x1257 x161) (= x161 (x479 (+ x1061 1)))) (and (= 1 x1265) (= (x479 (+ 1 x1061)) x466) (< 0 x8) (= (x58 x1265 x434) x1313) (= x1499 (< 0 x84)) (= x466 x1257) (= x1528 (div x1315 x8)) (not x373) (= 0 x1313) (= x434 (ite (< 115792089237316195423570985008687907853269984665640564039457 x15) 1 0)) (or (and (>= 1461501637330902918203684832716283019655932542975 x1543) (= (x505 (x758 x1517) x1434 0) x333) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x651 x1528)) (= x651 (x1182 x302)) (= 0 x710) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x710) (or (not x273) (and (= x80 (div x393 1000000000000000000)) (= (x1182 x455) x1037) (>= x1037 0) (= x107 (< 2 x84)) (= x817 (x505 (x758 x1061) (x869 4) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1037 x1528)) (= (x505 (x758 x1127) x817 0) x804) (< 1 x84) (< 1 x84) (= x697 (x479 (+ x1483 192))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x781) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1001) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x667 x80)) (= (x479 (+ 64 x344)) x1034) (= (x143 x1034) x1427) (<= x494 1461501637330902918203684832716283019655932542975) (= x667 x406) x273 (= x1185 (x505 (x758 x1427) x813 0)) (> x1482 1) (= (* x1037 x1528) x393) (= x813 (x505 (x758 x1517) x804 0)) (>= x781 0) (= x455 (x505 (x758 x494) x751 0)) (not x107) (= x751 (x505 (x758 x1001) x121 0)) (= x667 (x198 x697)) (<= x1037 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1427 1461501637330902918203684832716283019655932542975) (= x781 0) (= x1482 (x198 x1444)) (= x494 (x143 x1034)) (= (+ x406 x1451) x118) (= x1451 x80) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1127) (= (x1393 x1185) x781) (= (x505 (x758 x1061) (x869 11) 0) x121))) (<= x1468 1461501637330902918203684832716283019655932542975) (= (x505 (x758 x349) x723 0) x252) (= x303 (+ x1304 x921)) (= x1304 x280) (= x302 (x505 (x758 x1468) x252 0)) (<= x651 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x84 0) (= (x505 (x758 x134) x1157 0) x1434) (= x585 x129) (= (x143 x585) x1468) (= x1157 (x505 (x758 x1061) (x869 4) 0)) (= x273 (< 1 x84)) (= (x479 (+ x1483 160)) x768) (<= 0 x710) (= (* x651 x1528) x933) (> x416 0) (= x280 (x110 x768)) (= x723 (x505 (x758 x1061) (x869 11) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x413 x280)) (= (x1393 x245) x710) (= x413 (div x933 1000000000000000000)) (= x349 (x58 1461501637330902918203684832716283019655932542975 x1039)) (<= 0 x651) (= (x143 x585) x1543) (= x245 (x505 (x758 x1543) x333 0)) x1499 (= x413 x921) (= (x110 x1444) x416) (= x134 (x58 1461501637330902918203684832716283019655932542975 x1039)) (< 0 x84)) (not x1499)) (= x1315 (mod (* 1000000000000000000 x15) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1179 x350 1) x56)) x1421)))
(assert (= (x1433 (x758 x1016)) x1016))
(assert (= (x1232 x697) 0))
(assert (= (ite (and (not x27) x655 x1324) (x576 x946) (x1057 x946)) (x70 x946)))
(assert (x106 x939))
(assert (= (x1190 x1390) (ite (= x1390 x1047) x1081 (x176 x1390))))
(assert (x719 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x1328 (x1433 (x758 x1328))))
(assert (x408 x743))
(assert (x106 x1063))
(assert (x106 x231))
(assert (= true x392))
(assert (= (ite (= x1158 x1029) x966 (x1226 x1029)) (x71 x1029)))
(assert (= x868 (=> (and (<= x473 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x468 (x505 (x758 x219) x577 0)) (= (x1136 x468) x1346) (= x1291 (= 0 x1346)) (<= 0 x473) (not (< x473 x1257)) (>= x1346 0) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x219) (<= x1346 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x577 (x505 (x758 x1257) (x869 6) 0))) (and (=> (and (= x374 x803) (= x374 (x486 x57)) (>= x374 0) (= x57 (x505 (x758 x1173) x179 0)) (<= x374 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x179 (x505 (x758 x1257) (x869 10) 0)) (= x1173 (x58 1461501637330902918203684832716283019655932542975 x1039)) (not x1291) (= x887 0)) x696) (=> x1291 x857)))))
(assert (=> (<= x204 10000) (= (x869 x204) (x758 x204))))
(assert (x106 x1558))
(assert (x106 x540))
(assert (= x832 (x1433 (x758 x832))))
(assert (x106 x1459))
(assert (= (x1035 x752) (ite (= x1137 x752) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x746 x752))))
(assert (x106 x299))
(assert (=> (<= x1417 10000) (= (x869 x1417) (x758 x1417))))
(assert (x408 x962))
(assert (x106 x1208))
(assert (x408 x341))
(assert (=> (>= 10000 x52) (= (x758 x52) (x869 x52))))
(assert (x106 x1478))
(assert (x106 x539))
(assert (= (x952 x127) (ite (= x1298 x127) x1275 (x619 x127))))
(assert (x1450 x1164 x456))
(assert (=> (>= 10000 x727) (= (x758 x727) (x869 x727))))
(assert (=> (<= x1493 10000) (= (x758 x1493) (x869 x1493))))
(assert (x106 x963))
(assert (x106 x312))
(assert (= (x869 1968616202) (x758 1968616202)))
(assert (= (ite (and x1167 x373) (x110 x1444) (ite (and (not x373) x1499 (not x273) x1167) (x198 x1444) (ite (and x1167 (not x373) (not x1499)) (x110 x1444) (x427 x1444)))) (x890 x1444)))
(assert (x106 x566))
(assert (x106 x240))
(assert (x106 x344))
(assert (= (x1049 x478) (ite (= x478 x878) x1492 (x932 x478))))
(assert (x1450 x251 x1260))
(assert (= (x1433 (x869 87118632)) 87118632))
(assert (= x1355 (and x512 x269)))
(assert (x106 x1030))
(assert (x106 x1176))
(assert (=> (<= x510 10000) (= (x758 x510) (x869 x510))))
(assert (x408 x379))
(assert (x408 x771))
(assert (x106 x702))
(assert (x106 x1209))
(assert (x106 x819))
(assert (= x1118 (=> (and (= (x505 (x758 x1326) (x869 6) 0) x741) (not (> 911411945 x480)) (>= 1461501637330902918203684832716283019655932542975 x872) (not (< x480 1968616202)) (> 2293535753 x480) (not (= 1968616202 x480)) (<= x1518 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x480 2258409472) (not (= x480 1986467848)) (= (x549 (x758 274184521717934524641157099916833587206)) x276) (<= 0 x1518) (= x1518 x756) (> x276 0) (not (= 2211524764 x480)) (= x1518 (x1381 x923)) (= x923 (x505 (x758 x872) x741 0)) (not (= x480 2061678023))) (=> (and (= x1194 x756) (= (not (= 0 x1194)) x1360) (= x324 x982) (= x1014 x234) (= x11 0) x1360) x296))))
(assert (x719 x31))
(assert (= (x1433 (x869 2960351575)) 2960351575))
(assert (x106 x1173))
(assert (x106 x783))
(assert (x106 x645))
(assert (= (ite (and x1097 x507) (x270 x1029) (x1134 x1029)) (x1062 x1029)))
(assert (= x150 (x1433 (x758 x150))))
(assert (= x561 x956))
(assert (= (x1433 (x869 911411945)) 911411945))
(assert (x106 x349))
(assert (= x1545 (x1433 (x758 x1545))))
(assert (x106 x1089))
(assert (x106 x1539))
(assert (=> (<= x1468 10000) (= (x758 x1468) (x869 x1468))))
(assert (x106 x1230))
(assert (= x1159 (or (and x947 x369) (and (not x34) x1428) (and x136 (not x297)))))
(assert (= (x940 x1168) (ite (and x1210 x1519) (x753 x1168) (x1364 x1168))))
(assert (= (x198 x1195) (ite (= x1195 x768) x303 (x110 x1195))))
(assert (x106 x901))
(assert (=> (<= x379 10000) (= (x758 x379) (x869 x379))))
(assert (x408 x1257))
(assert (x106 x854))
(assert (= x1152 x983))
(assert (= x1550 (=> (and (= x324 x461) (= x727 x234)) x748)))
(assert (= x325 (x1433 (x758 x325))))
(assert (x106 x971))
(assert (x106 x364))
(assert (x106 x546))
(assert (= (x113 x337) (ite (and x1133 x1103) (x1180 x337) (ite (and x137 x609) (x726 x337) (x1548 x337)))))
(assert (=> (>= 10000 x1257) (= (x869 x1257) (x758 x1257))))
(assert (= x907 (=> (and (= x1454 (> x1238 x1061)) (or (not x1454) (and (= x652 (x505 (x758 x1061) (x869 3) 0)) (= x334 (> x1238 x205)) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x863) x1454 (or (and (= (< x1036 x1165) x521) (= (x505 (x758 x205) (x869 3) 0) x307) (not x521) (= x283 (x505 (x758 x1517) x1019 0)) (= x483 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= (x479 (+ x1061 2)) x1036) (= (x505 (x758 x547) x307 0) x1019) x334 (= (x58 1461501637330902918203684832716283019655932542975 x1039) x547)) (not x334)) (= x831 (x505 (x758 x1517) x1414 0)) (= x323 (x58 1461501637330902918203684832716283019655932542975 x1039)) (= x205 (x479 (+ 1 x1061))) (= (x505 (x758 x323) x652 0) x1414)))) x912)))
(assert (= (and x1284 x358) x685))
(assert (= x1130 (x1433 (x758 x1130))))
(assert (x408 x1191))
(assert (= (x869 2418364589) (x758 2418364589)))
(assert (=> (>= 10000 x1328) (= (x758 x1328) (x869 x1328))))
(assert (x106 x436))
(assert (= x843 (x1433 (x758 x843))))
(assert (x106 x382))
(assert (= x1519 x609))
(assert (x106 x992))
(assert (x408 x292))
(assert (x106 x308))
(assert (= (x110 x946) (ite (= x946 x1301) x21 (x17 x946))))
(assert (x106 x1303))
(assert (x106 x676))
(assert (x106 x483))
(assert (x1450 x1333 x1088))
(assert (x106 x697))
(assert (= x788 (x1433 (x758 x788))))
(assert (x106 x52))
(assert (x106 x999))
(assert (x719 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (x869 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x758 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x719 x345))
(assert (x719 x1039))
(assert (= (x198 x695) (ite (= x695 x768) x303 (x110 x695))))
(assert (=> (<= x421 10000) (= (x758 x421) (x869 x421))))
(assert (x106 x973))
(assert (x106 x1047))
(assert (= x866 (=> (and (= x1066 (x505 (x758 x1517) x657 0)) (<= 0 x473) (= x657 (x505 (x758 x1246) x491 0)) (= x964 (x848 x1066)) (= x491 (x505 (x758 x1257) (x869 7) 0)) (= x1246 (x58 1461501637330902918203684832716283019655932542975 x1039)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x473) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x964) (<= 0 x964) (= x1187 (< 0 x964)) (not (> x1257 x473))) (and (=> (and (= (x505 (x758 x1517) x277 0) x1279) (= x1323 (x505 (x758 x1257) (x869 9) 0)) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x637) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1129) (= 0 x678) (= (x789 x1279) x1129) (>= x1129 0) (= (x505 (x758 x637) x1323 0) x277) x1187 (= x1129 x418)) x1264) (=> (not x1187) x1091)))))
(assert (x106 x510))
(assert (x106 x978))
(assert (x106 x1490))
(assert (x408 x1061))
(assert (= (x940 x338) (ite (and x1210 x1519) (x753 x338) (x1364 x338))))
(assert (x106 x205))
(assert (x106 x1127))
(assert (= (x176 x752) (ite (= x9 x752) x702 (x984 x752))))
(assert (= x194 (=> (and (= (x505 (x758 x503) x935 0) x1095) (>= 1461501637330902918203684832716283019655932542975 x503) (not (= 2293535753 x83)) (= x309 x698) (> 2960351575 x83) (not (> 2293535753 x83)) (= (x505 (x758 x180) x1095 0) x105) (>= x698 0) (<= x897 1461501637330902918203684832716283019655932542975) (<= x698 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2532887486 x83) (= x698 (x1393 x763)) (= (x505 (x758 x897) x105 0) x763) (= x935 (x505 (x758 x1546) (x869 4) 0)) (= x400 (x549 (x758 274184521717934524641157099916833587206))) (<= x180 1461501637330902918203684832716283019655932542975) (not (= x83 2418364589)) (> 2690754053 x83) (< 0 x400) (not (= 2512682246 x83))) x342)))
(assert (x106 x1336))
(assert (= (x619 x695) (ite (= x399 x695) x1345 (x222 x695))))
(assert (= x701 (and x1428 x34)))
(assert (=> (>= 10000 x971) (= (x869 x971) (x758 x971))))
(assert (x106 x1518))
(assert (x106 x64))
(assert (= (x1433 (x869 2764855426)) 2764855426))
(assert (= (ite (and x373 x1167) (x110 x478) (ite (and x1499 x1167 (not x273) (not x373)) (x198 x478) (ite (and (not x1499) (not x373) x1167) (x110 x478) (x427 x478)))) (x890 x478)))
(assert (x106 x1037))
(assert (x106 x1299))
(assert (= (x758 2835717307) (x869 2835717307)))
(assert (x106 x165))
(assert (= x1246 (x1433 (x758 x1246))))
(assert (x106 x506))
(assert (x106 x913))
(assert (= (and x1128 (not x807)) x683))
(assert (= x136 (and x37 x701)))
(assert (= x471 (=> (and (<= x927 1461501637330902918203684832716283019655932542975) (= (x505 (x758 x1245) x1487 0) x493) (= x506 2532887486) (< x506 2960351575) (< 0 x170) (= x170 (x549 (x758 274184521717934524641157099916833587206))) (<= x424 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1245) (>= 1461501637330902918203684832716283019655932542975 x1321) (= x424 x357) (not (= 2293535753 x506)) (>= x424 0) (= x242 (x505 (x758 x1321) x493 0)) (not (> 2293535753 x506)) (not (= 2418364589 x506)) (not (= 2512682246 x506)) (= (x505 (x758 x325) (x869 4) 0) x1487) (= x424 (x1393 x133)) (= (x505 (x758 x927) x242 0) x133) (> 2690754053 x506)) (=> (and (= x260 x628) (<= 0 x1423) (= x936 x260) (= x476 x357) (= x1386 (x479 (+ x1444 x646))) (= x1423 x1517) (= x829 x1376) (or (and x1532 (or (and x1506 (or (not x405) (and (= (x58 1461501637330902918203684832716283019655932542975 x992) x1027) (= (x1507 128) x618) (= x568 (x1507 128)) (= x992 (x1507 224)) (> x618 0) (= x941 (x58 1461501637330902918203684832716283019655932542975 x345)) (not (= x941 x1027)) (= (x1507 160) x345) (not x649) x405 (< 2 x568) (= x649 (< 3 x1237)))) (= (x1507 192) x654) (= (x58 1461501637330902918203684832716283019655932542975 x31) x959) (< 0 x1031) (< 1 x1495) (= (x1507 128) x1031) (= x1495 (x1507 128)) (= (x1507 160) x31) (= x90 (x58 1461501637330902918203684832716283019655932542975 x654)) (not (= x959 x90)) (= x405 (> x1237 2))) (not x1506)) (not (< 1 x420)) (= (< 1 x1237) x1506) (not (> 1 x1237)) (= x420 (x295 (- x1237 1)))) (not x1532)) (not (> x84 18446744073709551615)) (= x1238 x1165) (= x646 (x479 (+ 32 x237))) (= (mod (* x84 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x237) (= (mod (* 32 x84) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x348) (<= x1046 1461501637330902918203684832716283019655932542975) x607 (> 911411945 x135) (not (< x398 4)) (= (x479 (+ 160 x237)) x722) (= x1533 x1080) (= 128 x943) (not (< x398 x165)) (= true (<= x398 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (>= x473 0) (= x916 x51) (= (x295 (- x398 4)) x190) (= (= 0 x84) x1210) (or (and (= (<= x398 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1521)) (> x398 x1521)) (and (<= x398 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1521 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (< 0 x1551) x1532) (<= x628 1461501637330902918203684832716283019655932542975) (not (< 18446744073709551615 x829)) (= (x295 (- x1237 1)) x1551) (= x1061 x1138) (< 0 x1490) (>= x628 0) (= x129 (x479 (+ 36 x1376))) (= x344 (x479 (+ x1376 4))) (= x1039 x76) (> 468353030 x135) (= x1521 (x479 (+ x1376 35))) (= x1483 (x479 (+ x376 32))) (= (x479 (+ x129 x348)) x165) (= (mod (* x84 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x376) (<= 0 x1046) (not (or (> x190 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x190 128) (= true (<= x190 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x479 (+ 160 x376)) x1444) (= (<= x476 x1002) x387) (< x135 2293535753) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x473) (= (and x387 x229) x607) (= x1558 x1061) (or x1210 (and (= (mod (* 32 x84) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1104) (not x1210) (= (x479 (+ x1483 160)) x911))) (>= 1461501637330902918203684832716283019655932542975 x1423) (= x135 87118632) (= x1039 x1256) (= (x549 (x758 274184521717934524641157099916833587206)) x1490) (= x1241 x1238) (>= 1461501637330902918203684832716283019655932542975 x1039) (= x1080 0) (= (x143 x344) x84) (> x398 131) (not (< x1238 x1061)) (< x1238 x473) (= x1237 (x1507 128)) (not (= x135 69947311)) (not (> 1 x1237))) x497))))
(assert (x106 x1504))
(assert (= (x110 x1029) (ite (= x1301 x1029) x21 (x17 x1029))))
(assert (x408 x205))
(assert (x106 x1158))
(assert (= (x1433 (x758 x292)) x292))
(assert (= (x1433 (x869 635128645)) 635128645))
(assert (x106 x258))
(assert (x106 x1290))
(assert (=> (>= 10000 x494) (= (x758 x494) (x869 x494))))
(assert (x106 x257))
(assert (x408 x18))
(assert (= (x869 2512682246) (x758 2512682246)))
(assert (=> (<= x18 10000) (= (x758 x18) (x869 x18))))
(assert (x408 x134))
(assert (x106 x905))
(assert (= x6 (and x1355 x332)))
(assert (= x323 (x1433 (x758 x323))))
(assert (x106 x1333))
(assert (= (x753 x1262) (ite (= x1444 x1262) x84 (x1507 x1262))))
(assert (x106 x1311))
(assert (= 0 (x1232 x1029)))
(assert (= (x1433 (x869 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (= (ite (= x878 x770) x1492 (x932 x770)) (x1049 x770)))
(assert (x106 x1261))
(assert (x408 x1312))
(assert (x408 x982))
(assert (= (x619 x399) x1345))
(assert (=> (>= 10000 x1398) (= (x758 x1398) (x869 x1398))))
(assert (x106 x793))
(assert (= (x1433 (x758 x1156)) x1156))
(assert (= (x1433 (x758 x1357)) x1357))
(assert (= (x952 x1444) (ite (= x1298 x1444) x1275 (x619 x1444))))
(assert (x408 x363))
(assert (x106 x1028))
(assert (x106 x731))
(assert (x106 x98))
(assert (= x514 (x1433 (x758 x514))))
(assert (= (x758 1000000000000000000) (x869 1000000000000000000)))
(assert (= (x1433 (x869 2418364589)) 2418364589))
(assert (=> (<= x503 10000) (= (x869 x503) (x758 x503))))
(assert (x106 x916))
(assert (x408 x662))
(assert (x106 x987))
(assert (x106 x769))
(assert (x106 x886))
(assert (x106 x238))
(assert (x719 x676))
(assert (= x1321 (x1433 (x758 x1321))))
(assert (x106 x1312))
(assert (= (=> (= x396 x902) x457) x63))
(assert (= (or x20 x1513) x1058))
(assert (= (and x655 x1324) x1128))
(assert (x106 x197))
(assert (= (x1433 (x758 x1412)) x1412))
(assert (x106 x967))
(assert (= (x619 x478) (ite (= x478 x399) x1345 (x222 x478))))
(assert (x106 x570))
(assert (= x1208 (x1433 (x758 x1208))))
(assert (= (=> (and (not (= 2690754053 x796)) (<= 0 x718) (< x796 2960351575) (not (= 2743102681 x796)) (= x718 x996) (= (x663 x1456) x718) (= x796 2798343961) (< 0 x687) (= (x549 (x758 274184521717934524641157099916833587206)) x687) (not (< x796 2293535753)) (= (x505 (x758 x272) x573 0) x1456) (= x573 (x505 (x758 x94) (x869 5) 0)) (not (= x796 2764855426)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x718) (not (> 2690754053 x796)) (>= 1461501637330902918203684832716283019655932542975 x272)) (=> (and (= x1369 x680) (= x962 x234) (= x996 x679) (= x324 x341) (= x1249 x28)) x33)) x435))
(assert (= (ite (= x1298 x752) x1275 (x619 x752)) (x952 x752)))
(assert (= x351 x1141))
(assert (= (x198 x1390) (ite (= x1390 x768) x303 (x110 x1390))))
(assert (x408 x219))
(assert (= (x952 x695) (ite (= x695 x1298) x1275 (x619 x695))))
(assert (x408 x843))
(assert (=> (>= 10000 x1040) (= (x758 x1040) (x869 x1040))))
(assert (= (x1433 (x758 x85)) x85))
(assert (= x48 (x1433 (x758 x48))))
(assert (= x704 (and x1097 (not x507))))
(assert (= (x1433 (x758 x662)) x662))
(assert (= x1385 (x1433 (x758 x1385))))
(assert (= (ite (and x1167 x980) (x1403 x749) (x86 x749)) (x1136 x749)))
(assert (x106 x75))
(assert (x106 x1100))
(assert (= x912 (=> (and (= x556 (x505 (x758 x1517) x286 0)) (= (x505 (x758 x1238) (x869 3) 0) x625) (= x655 (> x84 0)) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x259) (= (x505 (x758 x259) x625 0) x286)) (and (=> (and (= (x58 26959946667150639794667015087019630673637144422540572481103610249215 x1229) x1122) (= (x479 (+ 32 x1076)) x338) (= (x295 (- x827 x1076)) x709) (or (and (or (and (not x1300) (= 32 x1553)) (and (= (x1049 x173) x1295) (or (and (not x1449) (= 64 x1553)) (and (or (and (= x1553 96) (not x498)) (and (not x591) (= x127 (x479 (+ 128 x1076))) x498 (= x1553 128) (= x799 (x71 x127)) (= (< 128 x2) x591) (= x648 (x479 (+ 160 x827))))) (= x1168 (x479 (+ 96 x1076))) (= x498 (< 96 x2)) (= (x1226 x1168) x966) x1449 (= x1158 (x479 (+ 128 x827))))) (= (x479 (+ 96 x827)) x211) (= x1449 (> x2 64)) x1300 (= x173 (x479 (+ x1076 64))))) (= x878 x586) x759 (= x338 x1262) (= (x932 x1262) x1492) (= (> x2 32) x1300)) (and (not x759) (= 0 x1553))) (= x193 0) (= x694 (x549 (x758 x1338))) (= x819 (x479 (+ 68 x1076))) (= (x519 x1444) x1211) x1331 (or (and (= (x479 (+ x586 x2)) x924) x27) (not x27)) (= (x479 (+ x1122 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x1343) (> x1211 0) (= x27 (> x1553 x2)) (< 0 x84) (= x1195 (x479 (+ 160 x1483))) (= x759 (< 0 x2)) (= (x479 (+ 128 x1452)) x586) (= x415 (x479 (+ 96 x1452))) (= (x932 x1076) x2) (= x827 (x479 (+ 100 x1076))) (= (x295 (- x709 32)) x739) (= x129 x518) (<= x1338 1461501637330902918203684832716283019655932542975) x655 (= x1338 (x143 x518)) (= (> x694 0) x1331) (= (x479 (+ x1076 36)) x1452) (= x366 (x519 x1195)) (= x1229 (x1216 x338))) x403) (=> (not x655) x1550)))))
(assert (x106 x597))
(assert (x106 x464))
(assert (=> (<= x1127 10000) (= (x758 x1127) (x869 x1127))))
(assert (=> (>= 10000 x1320) (= (x758 x1320) (x869 x1320))))
(assert (= (or (and (not x859) x192) (and x979 (not x1123))) x1513))
(assert (x106 x681))
(assert (= (ite (= x338 x1298) x1275 (x619 x338)) (x952 x338)))
(assert (x106 x1552))
(assert (= x1231 (or x1530 x1159)))
(assert (= (ite (and (not x27) x655 x1324) (x576 x770) (x1057 x770)) (x70 x770)))
(assert (= (x890 x1195) (ite (and x373 x1167) (x110 x1195) (ite (and x1499 (not x373) (not x273) x1167) (x198 x1195) (ite (and x1167 (not x373) (not x1499)) (x110 x1195) (x427 x1195))))))
(assert (x106 x513))
(assert (x106 x1483))
(assert (x408 x1100))
(assert (x106 x80))
(assert (= (and x1291 x898) x381))
(assert (= (x758 2690754053) (x869 2690754053)))
(assert (x106 x965))
(assert (= (x619 x64) (ite (= x64 x399) x1345 (x222 x64))))
(assert (x106 x152))
(assert (x106 x261))
(assert (= (x265 x770) (ite (and x1128 x807) (x201 x770) (x928 x770))))
(assert (x408 x1214))
(assert (x106 x177))
(assert (=> (>= 10000 x323) (= (x869 x323) (x758 x323))))
(assert (x106 x1195))
(assert (x106 x1039))
(assert (x106 x400))
(assert (x106 x122))
(assert (= (x1433 (x758 x227)) x227))
(assert (= 0 (x1232 x127)))
(assert (x106 x449))
(assert (= 0 (x1232 x173)))
(assert (x106 x1065))
(assert (x106 x994))
(assert (= (ite (= x425 x1444) x84 (x1507 x425)) (x753 x425)))
(assert (x408 x1398))
(assert (=> (>= 10000 x1543) (= (x758 x1543) (x869 x1543))))
(assert (x106 x964))
(assert (= (x1433 (x758 x18)) x18))
(assert (= x1040 (x1433 (x758 x1040))))
(assert (= (x1433 (x758 x181)) x181))
(assert (x106 x705))
(assert (= x1015 (=> (and (= (= 0 x444) x1123) (<= x444 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x749 (x505 (x758 x1276) x1183 0)) (= x444 (x1136 x749)) (<= 0 x444) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x1276) (= x1183 (x505 (x758 x292) (x869 6) 0))) (and (=> (and (not x627) (= (x295 (- x292 1)) x642) x1123 (= (> x642 0) x627)) x524) (=> (and (not x1123) (= x271 x292)) x1244)))))
(assert (x106 x446))
(assert (=> (>= 10000 x978) (= (x869 x978) (x758 x978))))
(assert (x106 x644))
(assert (= (x1433 (x758 x504)) x504))
(assert (=> (>= 10000 x532) (= (x758 x532) (x869 x532))))
(assert (= (or x24 (and x1187 x1430)) x1470))
(assert (= (x758 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x869 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x106 x1555))
(assert (x106 x1046))
(assert (= (ite (and x1128 x807) (x201 x478) (x928 x478)) (x265 x478)))
(assert (= (and x1430 (not x1187)) x241))
(assert (=> (<= x637 10000) (= (x758 x637) (x869 x637))))
(assert (= x228 x138))
(assert (= (ite (and x1485 x119) (x1222 x1056) (ite (and x584 (not x1485) x119) (x184 x1056) (x1247 x1056))) (x848 x1056)))
(assert (= (ite (= x1298 x173) x1275 (x619 x173)) (x952 x173)))
(assert (x106 x557))
(assert (x106 x1410))
(assert (= x1493 (x1433 (x758 x1493))))
(assert (x106 x82))
(assert (x106 x631))
(assert (= (x1433 (x758 x1543)) x1543))
(assert (x106 x902))
(assert (x408 x1320))
(assert (=> (<= x1246 10000) (= (x758 x1246) (x869 x1246))))
(assert (= (=> (and (= (x505 (x758 x1356) (x869 3) 0) x1145) (>= 1461501637330902918203684832716283019655932542975 x1392) (not (= 2690754053 x965)) (= (x505 (x758 x414) x1538 0) x142) (not (> 2690754053 x965)) (= x1030 x1306) (not (< x965 2293535753)) (= x965 2743102681) (<= x414 1461501637330902918203684832716283019655932542975) (< 0 x889) (< x965 2960351575) (= (x726 x142) x1030) (>= x1030 0) (= x889 (x549 (x758 274184521717934524641157099916833587206))) (= (x505 (x758 x1392) x1145 0) x1538) (<= x1030 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x1249 x1321) (= x1245 x234) (= x680 x927) (= x1306 x1002) (= x325 x324)) x471)) x1099))
(assert (x106 x1040))
(assert (= x1244 (=> (= x1214 x271) x289)))
(assert (x106 x1113))
(assert (= (ite (= x1029 x415) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x1029)) (x932 x1029)))
(assert (= (x1433 (x758 x656)) x656))
(assert (x106 x1237))
(assert (= (x1433 (x869 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (=> (>= 10000 x692) (= (x758 x692) (x869 x692))))
(assert (= x39 x1003))
(assert (= x897 (x1433 (x758 x897))))
(assert (x106 x796))
(assert (= 274184521717934524641157099916833587218 (x1433 (x758 274184521717934524641157099916833587218))))
(assert (x408 x421))
(assert (= (x890 x1029) (ite (and x373 x1167) (x110 x1029) (ite (and x1499 x1167 (not x373) (not x273)) (x198 x1029) (ite (and (not x1499) x1167 (not x373)) (x110 x1029) (x427 x1029))))))
(assert (x106 x1116))
(assert (= (x940 x74) (ite (and x1210 x1519) (x753 x74) (x1364 x74))))
(assert (x106 x1165))
(assert (x106 x193))
(assert (= (ite (and x1167 x373) (x110 x1390) (ite (and (not x373) x1499 x1167 (not x273)) (x198 x1390) (ite (and x1167 (not x373) (not x1499)) (x110 x1390) (x427 x1390)))) (x890 x1390)))
(assert (=> (<= x1392 10000) (= (x869 x1392) (x758 x1392))))
(assert (=> (>= 10000 x906) (= (x869 x906) (x758 x906))))
(assert (x106 x975))
(assert (x106 x1249))
(assert (= (ite (= x1047 x1029) x1081 (x176 x1029)) (x1190 x1029)))
(assert (x106 x272))
(assert (= (x1433 (x758 x231)) x231))
(assert (= (x71 x752) (ite (= x752 x1158) x966 (x1226 x752))))
(assert (x106 x430))
(assert (= (x198 x1298) (ite (= x1298 x768) x303 (x110 x1298))))
(assert (= (x198 x697) (ite (= x697 x768) x303 (x110 x697))))
(assert (= (x932 x1076) (ite (= x415 x1076) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x1076))))
(assert (x106 x1184))
(assert (x106 x855))
(assert (x106 x417))
(assert (= 649617121 (x1433 (x869 649617121))))
(assert (x106 x1386))
(assert (= (x952 x770) (ite (= x770 x1298) x1275 (x619 x770))))
(assert (x106 x1117))
(assert (= (x198 x338) (ite (= x768 x338) x303 (x110 x338))))
(assert (x106 x324))
(assert (= x823 (=> (and (not (= 2418364589 x691)) (not (= x691 2512682246)) (= x1337 (x505 (x758 x1419) (x869 4) 0)) (= x1359 (x505 (x758 x126) x1174 0)) (<= x126 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x771) (>= x1335 0) (<= x1335 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x579 (x505 (x758 x1191) x1337 0)) (= x1174 (x505 (x758 x771) x579 0)) (= x1335 x177) (not (= x691 2293535753)) (= (x549 (x758 274184521717934524641157099916833587206)) x464) (> x464 0) (= 2532887486 x691) (= (x1393 x1359) x1335) (< x691 2960351575) (>= 1461501637330902918203684832716283019655932542975 x1191) (not (> 2293535753 x691)) (> 2690754053 x691)) x602)))
(assert (x106 x1076))
(assert (= (x984 x1248) (ite (= x513 x1248) x239 (x1035 x1248))))
(assert (= x1093 (and x1475 x780)))
(assert (x106 x1417))
(assert (= (x1433 (x758 x1214)) x1214))
(assert (x408 x1127))
(assert (x408 x181))
(assert (= (ite (and (not x608) x356 x1271 x96 x281 x1141) (x1190 x1029) (ite (and x1271 (not x96) x356 x1141 x281) (x176 x1029) (ite (and (not x1271) x1141 x356 x281) (x984 x1029) (ite (and x1141 x281 (not x356)) (x1035 x1029) (x395 x1029))))) (x226 x1029)))
(assert (=> (<= x1218 10000) (= (x869 x1218) (x758 x1218))))
(assert (= x1406 x1474))
(assert (x106 x268))
(assert (= (x753 x478) (ite (= x1444 x478) x84 (x1507 x478))))
(assert (=> (<= x1156 10000) (= (x869 x1156) (x758 x1156))))
(assert (=> (<= x1357 10000) (= (x758 x1357) (x869 x1357))))
(assert (= (=> (and (= x587 (x295 (- x1061 1))) (= x297 (< 0 x587))) (and (=> x297 x582) (=> (not x297) x275))) x168))
(assert (= (x1433 (x758 x494)) x494))
(assert (= (ite (= x768 x478) x303 (x110 x478)) (x198 x478)))
(assert (x106 x1255))
(assert (= (ite (and x1167 x373) (x110 x1248) (ite (and x1167 x1499 (not x373) (not x273)) (x198 x1248) (ite (and x1167 (not x1499) (not x373)) (x110 x1248) (x427 x1248)))) (x890 x1248)))
(assert (= x1322 (x1433 (x758 x1322))))
(assert (x408 x1156))
(assert (x106 x262))
(assert (x408 x1163))
(assert (= (ite (= x1168 x768) x303 (x110 x1168)) (x198 x1168)))
(assert (= x1293 (x1433 (x758 x1293))))
(assert (= x660 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1105) (= x1380 (x505 (x758 x1257) (x869 6) 0)) (= (= x1105 0) x859) (= (x1136 x895) x1105) (= x895 (x505 (x758 x1008) x1380 0)) (<= 0 x1105) (= x1008 (x58 1461501637330902918203684832716283019655932542975 x1039))) (and (=> x859 x1486) (=> (and (= x1257 x271) (not x859)) x1244)))))
(assert (= (ite (= x415 x1168) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x1168)) (x932 x1168)))
(assert (= (x758 604800) (x869 604800)))
(assert (= (x940 x173) (ite (and x1210 x1519) (x753 x173) (x1364 x173))))
(assert (x106 x215))
(assert (= x983 x1384))
(assert (x106 x1223))
(assert (= (x110 x1298) (ite (= x1298 x1301) x21 (x17 x1298))))
(assert (= x1536 (or (and (not x281) x1141) (and x1324 (not x655)) x440)))
(assert (x106 x587))
(assert (= (ite (and x1210 x1519) (x753 x1444) (x1364 x1444)) (x940 x1444)))
(assert (x408 x1245))
(assert (= 274184521717934524641157099916833587206 (x1433 (x758 274184521717934524641157099916833587206))))
(assert (x106 x982))
(assert (= (x753 x768) (ite (= x1444 x768) x84 (x1507 x768))))
(assert (x106 x1168))
(assert (= x1369 (x1433 (x758 x1369))))
(assert (x106 x733))
(assert (x106 x12))
(assert (= (=> (and (= x938 (= x217 0)) (= x1253 (x505 (x758 x837) x73 0)) (= x1267 (x505 (x758 x1517) x1253 0)) (= (x58 1461501637330902918203684832716283019655932542975 x1039) x837) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x217) (= (x505 (x758 x1257) (x869 7) 0) x73) (<= 0 x217) (= (x848 x1267) x217)) (and (=> (and (not x938) (= x902 x1257)) x63) (=> x938 x1175))) x706))
(assert (x106 x371))
(assert (= x1103 x1167))
(assert (x106 x841))
(assert (x106 x1052))
(assert (x106 x1198))
(assert (x106 x610))
(assert (=> (<= x1478 10000) (= (x758 x1478) (x869 x1478))))
(assert (x719 x992))
(assert (x106 x1471))
(assert (x106 x195))
(assert (= (x869 2743102681) (x758 2743102681)))
(assert (x106 x1527))
(assert (x106 x1495))
(assert (= x321 (=> (= (= 274184521717934524641157099916833587214 x855) x1023) (and (=> (not x1023) x931) (=> (and (= (x58 1461501637330902918203684832716283019655932542975 x1164) x99) (<= x1460 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x72) (not x288) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1422) (= x82 x997) (= x997 x1149) (not (< x526 4)) (= x1460 (x249 x1325)) (= x1017 x402) (= x1164 x1423) (= x449 274184521717934524641157099916833587206) (= 68 x526) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1308) (not (= 1889567281 x592)) (not (= x592 826074471)) (= (x295 (- x1422 x82)) x326) (= x526 x243) (= (x58 1461501637330902918203684832716283019655932542975 x1164) x908) (not (< x592 649617121)) (= (+ x1149 x575) x794) (not x988) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1460 x997)) (= 2835717307 x592) (= (x549 (x758 274184521717934524641157099916833587214)) x1227) (= x665 1) (= (x295 (- x526 4)) x1512) (= (> x82 x1422) x288) (= (x505 (x758 274184521717934524641157099916833587206) (x869 1) 0) x1212) x1023 (>= x1460 0) (= x1325 (x505 (x758 x908) (x869 1) 0)) (not (= 649617121 x592)) (= 32 x1314) (= (x1139 x1212) x1422) (= 274184521717934524641157099916833587206 x861) (= x999 x82) (not (= 2514000705 x592)) (= x575 x1460) (= x988 (> x997 x1422)) (= x1501 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1460 x997))) (= x1437 (x505 (x758 274184521717934524641157099916833587206) (x869 1) 0)) (= (or (> x1512 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1512 64) (= true (<= x1512 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x72) (> x1227 0) (<= 0 x1422) (<= x1164 1461501637330902918203684832716283019655932542975) (not x1501)) x550)))))
(assert (x106 x111))
(assert (= (x932 x64) (ite (= x64 x415) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1239 x64))))
(assert (= 0 (x1232 x1390)))
(assert (= x547 (x1433 (x758 x547))))
(assert (= (x265 x425) (ite (and x807 x1128) (x201 x425) (x928 x425))))
(assert (x106 x1225))
(assert (= (x1232 x74) 0))
(assert (x106 x1346))
(assert (= x497 (=> (= x137 (> x1061 x1238)) (and (=> (not x137) x59) (=> (and (= x1076 x1386) x137) x907)))))
(assert (= (ite (= x1390 x9) x702 (x984 x1390)) (x176 x1390)))
(assert (x408 x1427))
(assert (x408 x1328))
(assert (x106 x1535))
(assert (x719 x654))
(assert (= (ite (and x1324 (not x27) x655) (x576 x64) (x1057 x64)) (x70 x64)))
(assert (x106 x945))
(assert (x106 x1050))
(assert (x106 x1528))
(assert (x106 x692))
(assert (x106 x1447))
(assert (= (x1433 (x869 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= (x1226 x770) (ite (= x770 x211) x1295 (x1049 x770))))
(assert (x106 x149))
(assert (x408 x461))
(assert (x106 x155))
(assert (= (ite (= x1444 x695) x84 (x1507 x695)) (x753 x695)))
(assert (= (x1433 (x758 x257)) x257))
(assert (= 604800 (x1433 (x869 604800))))
(assert (x106 x183))
(assert (= (x890 x425) (ite (and x1167 x373) (x110 x425) (ite (and x1499 (not x273) (not x373) x1167) (x198 x425) (ite (and (not x373) x1167 (not x1499)) (x110 x425) (x427 x425))))))
(assert (=> (<= x1078 10000) (= (x869 x1078) (x758 x1078))))
(assert (=> (>= 10000 x1504) (= (x869 x1504) (x758 x1504))))
(assert (= x872 (x1433 (x758 x872))))
(assert (x106 x815))
(assert (= x637 (x1433 (x758 x637))))
(assert (= (ite (= x1298 x478) x1275 (x619 x478)) (x952 x478)))
(assert (=> (>= 10000 x1008) (= (x758 x1008) (x869 x1008))))
(assert (= (ite (= x211 x1168) x1295 (x1049 x1168)) (x1226 x1168)))
(assert (= (ite (and x1519 x1210) (x753 x752) (x1364 x752)) (x940 x752)))
(assert (x106 x1029))
(assert (= (x1232 160) 0))
(assert (=> (<= x134 10000) (= (x758 x134) (x869 x134))))
(assert (x106 x243))
(assert (= (x1433 (x758 x771)) x771))
(assert (x106 x911))
(assert (= (x1232 x478) 0))
(assert (x106 x99))
(assert (=> (>= 10000 x231) (= (x758 x231) (x869 x231))))
(assert (x106 x709))
(assert (= (x1232 x425) 0))
(assert (x408 x978))
(assert (= (ite (and x807 x1128) (x201 x695) (x928 x695)) (x265 x695)))
(assert (x408 x1238))
(assert (= x602 (=> (and (= x598 (>= x216 x451)) (= x156 true) (= x451 x177)) x156)))
(assert (= (x869 87118632) (x758 87118632)))
(assert (x106 x778))
(assert (x106 x614))
(assert (= (ite (= x1195 x399) x1345 (x222 x1195)) (x619 x1195)))
(assert (= x1163 (x1433 (x758 x1163))))
(assert (=> (<= x1236 10000) (= (x758 x1236) (x869 x1236))))
(assert (= (x1232 x1168) 0))
(assert (x106 x871))
(assert (x106 x1423))
(assert (= (x1433 (x869 18446744073709551615)) 18446744073709551615))
(assert (= (ite (= x1444 x1195) x84 (x1507 x1195)) (x753 x1195)))
(assert (x106 x383))
(assert (= (ite (and x1485 x119) (x726 x930) (ite (and (not x1485) x584 x119) (x726 x930) (x1083 x930))) (x1180 x930)))
(assert (x106 x174))
(assert (=> (<= x48 10000) (= (x758 x48) (x869 x48))))
(assert (= (x1433 (x758 x850)) x850))
(assert (x106 x1104))
(assert (x1450 x345 x558))
(assert (x106 x1298))
(assert (= (ite (= x946 x1444) x84 (x1507 x946)) (x753 x946)))
(assert (x106 x1320))
(assert (x106 x1432))
(assert (x106 x428))
(assert (x106 x816))
(assert (x106 x693))
(assert (x408 x28))
(assert (x106 x178))
(assert (=> (>= 10000 x843) (= (x758 x843) (x869 x843))))
(assert (x408 274184521717934524641157099916833587214))
(assert (= (x758 2532887486) (x869 2532887486)))
(assert (= (or x1231 (and x1283 x331)) x119))
(assert (x106 x727))
(assert (= (ite (and x1300 (not x498) x1324 x759 x1449 x655) (x71 x946) (ite (and x1300 (not x1449) x759 x655 x1324) (x1226 x946) (ite (and x1324 x759 x655 (not x1300)) (x1049 x946) (ite (and x655 x1324 (not x759)) (x932 x946) (x900 x946))))) (x576 x946)))
(assert (= (x1433 (x758 x1074)) x1074))
(assert (x106 x323))
(assert (x106 x11))
(assert (x106 x1378))
(assert (x106 x687))
(assert (=> (<= x1369 10000) (= (x758 x1369) (x869 x1369))))
(assert (x408 x150))
(assert (x106 x420))
(assert (= (x1433 (x758 x422)) x422))
(assert (x106 x1462))
(assert (= (ite (and x1324 x655 (not x27)) (x576 x695) (x1057 x695)) (x70 x695)))
(assert (x106 x1521))
(assert (x106 x1496))
(assert (= (ite (= x399 x1262) x1345 (x222 x1262)) (x619 x1262)))
(assert (=> (>= 10000 x1412) (= (x869 x1412) (x758 x1412))))
(assert (= (x1433 (x758 x1218)) x1218))
(assert (= x1115 (x1433 (x758 x1115))))
(assert (x106 x1036))
(assert (= (x265 x64) (ite (and x1128 x807) (x201 x64) (x928 x64))))
(assert (x106 x568))
(assert (= (ite (= x1444 x399) x1345 (x222 x1444)) (x619 x1444)))
(assert (x106 x829))
(assert (=> (>= 10000 x662) (= (x869 x662) (x758 x662))))
(assert (x106 x473))
(assert (x408 x48))
(assert (x106 x957))
(assert (x408 x268))
(assert (x106 x451))
(assert (x106 x1306))
(assert (= 2258409472 (x1433 (x869 2258409472))))
(assert (= (x71 x1444) (ite (= x1444 x1158) x966 (x1226 x1444))))
(assert (x106 x1293))
(assert (=> (<= x1191 10000) (= (x869 x1191) (x758 x1191))))
(assert (= (x1433 (x869 2743102681)) 2743102681))
(assert (x106 x803))
(assert (x106 x35))
(assert (x408 x1293))
(assert (= x1353 (x1433 (x758 x1353))))
(assert (x106 x595))
(assert (=> (<= x1028 10000) (= (x758 x1028) (x869 x1028))))
(assert (x106 x374))
(check-sat)
