(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x529 0)) (((x10 (x37 Int)) (x581 (x229 x529) (x706 x529) (x14 Int)) (x600 (x343 x529) (x586 Int)))))
(declare-fun x185 (Int) x529)
(declare-fun x672 () Int)
(declare-fun x650 () Bool)
(declare-fun x198 () Int)
(declare-fun x536 () Bool)
(declare-fun x593 () x529)
(declare-fun x625 () x529)
(declare-fun x710 () Int)
(declare-fun x4 () Int)
(declare-fun x487 () Int)
(declare-fun x15 () Bool)
(declare-fun x228 () Int)
(declare-fun x34 () Int)
(declare-fun x604 () Int)
(declare-fun x542 () Int)
(declare-fun x304 () Bool)
(declare-fun x70 () Int)
(declare-fun x162 () Bool)
(declare-fun x497 () Bool)
(declare-fun x388 () Int)
(declare-fun x312 () Int)
(declare-fun x347 () Int)
(declare-fun x253 () Int)
(declare-fun x236 () x529)
(declare-fun x551 () Int)
(declare-fun x264 () Int)
(declare-fun x560 () Int)
(declare-fun x448 () Int)
(declare-fun x654 () Int)
(declare-fun x402 () Bool)
(declare-fun x111 () Int)
(declare-fun x421 () Int)
(declare-fun x515 () Int)
(declare-fun x278 () Int)
(declare-fun x160 () Bool)
(declare-fun x489 () Int)
(declare-fun x269 () Int)
(declare-fun x480 (x529) Int)
(declare-fun x3 () Int)
(declare-fun x8 () Bool)
(declare-fun x642 () Bool)
(declare-fun x76 () Int)
(declare-fun x268 () x529)
(declare-fun x431 () Bool)
(declare-fun x680 (Int) Int)
(declare-fun x407 () Bool)
(declare-fun x336 () Bool)
(declare-fun x255 () Int)
(declare-fun x88 () Int)
(declare-fun x641 () Int)
(declare-fun x410 () Int)
(declare-fun x702 () Int)
(declare-fun x557 () Int)
(declare-fun x251 () Int)
(declare-fun x387 () Int)
(declare-fun x17 () Int)
(declare-fun x19 () Int)
(declare-fun x390 () Int)
(declare-fun x669 (Int Int) Int)
(declare-fun x439 () Int)
(declare-fun x245 () Int)
(declare-fun x113 () Bool)
(declare-fun x478 () Int)
(declare-fun x114 () Bool)
(declare-fun x325 () Int)
(declare-fun x179 () Int)
(declare-fun x33 () Int)
(declare-fun x47 (x529) Int)
(declare-fun x436 () Int)
(declare-fun x685 () Int)
(declare-fun x288 () Int)
(declare-fun x121 () Int)
(declare-fun x83 () x529)
(declare-fun x270 () Bool)
(declare-fun x209 () Int)
(declare-fun x632 () Int)
(declare-fun x212 () Int)
(declare-fun x263 () Bool)
(declare-fun x172 () Int)
(declare-fun x420 () Int)
(declare-fun x9 (Int) Int)
(declare-fun x222 () Bool)
(declare-fun x307 () Bool)
(declare-fun x157 () Bool)
(declare-fun x425 () Int)
(declare-fun x661 () Int)
(declare-fun x273 () Int)
(declare-fun x294 () Int)
(declare-fun x62 () Int)
(declare-fun x144 () Int)
(declare-fun x603 () Bool)
(declare-fun x357 () Bool)
(declare-fun x316 () Int)
(declare-fun x691 () Int)
(declare-fun x474 () Int)
(declare-fun x13 () Int)
(declare-fun x332 () Int)
(declare-fun x193 () Int)
(declare-fun x488 () x529)
(declare-fun x552 () Int)
(declare-fun x289 () Int)
(declare-fun x232 () Int)
(declare-fun x658 (Int) Int)
(declare-fun x475 () Int)
(declare-fun x277 () Int)
(declare-fun x398 () Bool)
(declare-fun x616 () Int)
(declare-fun x655 () Int)
(declare-fun x131 () Bool)
(declare-fun x247 () Int)
(declare-fun x541 () Int)
(declare-fun x110 () Int)
(declare-fun x403 () Int)
(declare-fun x612 () Int)
(declare-fun x353 () Int)
(declare-fun x484 () Int)
(declare-fun x539 () Int)
(declare-fun x589 () Int)
(declare-fun x554 () Int)
(declare-fun x400 () Int)
(declare-fun x688 () Int)
(declare-fun x466 () Bool)
(declare-fun x574 () Int)
(declare-fun x652 () Int)
(declare-fun x437 () Int)
(declare-fun x281 () Bool)
(declare-fun x584 () Int)
(declare-fun x71 () Int)
(declare-fun x30 () Int)
(declare-fun x485 () Int)
(declare-fun x483 () Int)
(declare-fun x234 () Int)
(declare-fun x424 () Int)
(declare-fun x75 () Int)
(declare-fun x538 () Int)
(declare-fun x18 () Int)
(declare-fun x99 () Int)
(declare-fun x266 () Int)
(declare-fun x665 () Int)
(declare-fun x610 () Bool)
(declare-fun x523 () Int)
(declare-fun x170 () Int)
(declare-fun x180 () Bool)
(declare-fun x476 () Bool)
(declare-fun x12 () Int)
(declare-fun x256 () Int)
(declare-fun x440 () Bool)
(declare-fun x450 () Bool)
(declare-fun x104 () Int)
(declare-fun x628 () Int)
(declare-fun x563 () Bool)
(declare-fun x276 () Int)
(declare-fun x208 () Int)
(declare-fun x568 () Int)
(declare-fun x659 () Int)
(declare-fun x248 () Int)
(declare-fun x173 () Int)
(declare-fun x94 () Int)
(declare-fun x105 () Int)
(declare-fun x28 () Int)
(declare-fun x598 () Int)
(declare-fun x85 () Int)
(declare-fun x103 () Bool)
(declare-fun x583 () Int)
(declare-fun x418 () Bool)
(declare-fun x528 () Int)
(declare-fun x142 () Int)
(declare-fun x39 () x529)
(declare-fun x168 () Int)
(declare-fun x309 () Int)
(declare-fun x22 () Int)
(declare-fun x413 () Bool)
(declare-fun x412 () Int)
(declare-fun x106 () Int)
(declare-fun x548 () Int)
(declare-fun x284 () Int)
(declare-fun x525 () Bool)
(declare-fun x386 () Bool)
(declare-fun x516 () Bool)
(declare-fun x588 (Int) Int)
(declare-fun x408 () Int)
(declare-fun x374 () Int)
(declare-fun x567 () Int)
(declare-fun x364 () x529)
(declare-fun x298 () Int)
(declare-fun x451 () Bool)
(declare-fun x213 () Int)
(declare-fun x217 () Int)
(declare-fun x218 () Bool)
(declare-fun x344 () Int)
(declare-fun x401 () Bool)
(declare-fun x138 () Int)
(declare-fun x592 () Int)
(declare-fun x430 () Int)
(declare-fun x471 () Int)
(declare-fun x210 () Int)
(declare-fun x31 () Int)
(declare-fun x287 () Int)
(declare-fun x324 () Int)
(declare-fun x492 () Int)
(declare-fun x171 () Bool)
(declare-fun x373 () Int)
(declare-fun x383 () Int)
(declare-fun x392 () Int)
(declare-fun x660 () Int)
(declare-fun x627 () Int)
(declare-fun x442 () Int)
(declare-fun x522 () Int)
(declare-fun x317 () Bool)
(declare-fun x635 () Bool)
(declare-fun x299 () Int)
(declare-fun x605 () Bool)
(declare-fun x305 () Int)
(declare-fun x189 () Bool)
(declare-fun x102 () Int)
(declare-fun x145 () Int)
(declare-fun x697 () Int)
(declare-fun x141 () Bool)
(declare-fun x453 () Bool)
(declare-fun x602 () Int)
(declare-fun x644 () Int)
(declare-fun x130 () Int)
(declare-fun x575 () Bool)
(declare-fun x241 () Int)
(declare-fun x249 () Bool)
(declare-fun x257 () Bool)
(declare-fun x259 () Int)
(declare-fun x194 () Int)
(declare-fun x626 () Int)
(declare-fun x86 () Int)
(declare-fun x399 () Int)
(declare-fun x406 () Bool)
(declare-fun x238 () Int)
(declare-fun x91 () Int)
(declare-fun x676 () Int)
(declare-fun x93 () Int)
(declare-fun x285 () Bool)
(declare-fun x199 () Int)
(declare-fun x366 () Int)
(declare-fun x371 () Bool)
(declare-fun x426 () Int)
(declare-fun x394 () Int)
(declare-fun x634 () Int)
(declare-fun x11 () Bool)
(declare-fun x97 () Int)
(declare-fun x553 () Bool)
(declare-fun x561 () Int)
(declare-fun x52 () Int)
(declare-fun x326 () Int)
(declare-fun x585 () Int)
(declare-fun x607 () Bool)
(declare-fun x692 () Int)
(declare-fun x404 () Bool)
(declare-fun x490 () Int)
(declare-fun x623 () Bool)
(declare-fun x363 () Int)
(declare-fun x700 () Int)
(declare-fun x629 () Int)
(declare-fun x146 () x529)
(declare-fun x446 () Int)
(declare-fun x159 () x529)
(declare-fun x123 () Bool)
(declare-fun x283 () Int)
(declare-fun x271 () Int)
(declare-fun x381 () Int)
(declare-fun x310 () Int)
(declare-fun x163 () Int)
(declare-fun x235 () Int)
(declare-fun x127 () Int)
(declare-fun x631 () Bool)
(declare-fun x395 () Bool)
(declare-fun x346 () Int)
(declare-fun x559 () Int)
(declare-fun x675 () Bool)
(declare-fun x68 () Int)
(declare-fun x46 () Int)
(declare-fun x318 () Int)
(declare-fun x108 () Bool)
(declare-fun x16 () Int)
(declare-fun x233 () Bool)
(declare-fun x51 () Int)
(declare-fun x535 () Int)
(declare-fun x158 () Bool)
(declare-fun x619 () Bool)
(declare-fun x429 () Bool)
(declare-fun x460 () Int)
(declare-fun x154 () Int)
(declare-fun x570 () Bool)
(declare-fun x361 () Bool)
(declare-fun x473 () Bool)
(declare-fun x694 () Int)
(declare-fun x227 () Int)
(declare-fun x341 () Int)
(declare-fun x202 () Int)
(declare-fun x187 (Int) Int)
(declare-fun x290 () Bool)
(declare-fun x80 () Int)
(declare-fun x472 () Int)
(declare-fun x41 () Int)
(declare-fun x267 () Bool)
(declare-fun x653 () Int)
(declare-fun x547 () Int)
(declare-fun x649 () Bool)
(declare-fun x161 () Int)
(declare-fun x125 () Int)
(declare-fun x432 () Int)
(declare-fun x646 () Int)
(declare-fun x261 () Int)
(declare-fun x624 () Int)
(declare-fun x690 () Int)
(declare-fun x414 () Int)
(declare-fun x330 () Int)
(declare-fun x350 () Int)
(declare-fun x59 () Int)
(declare-fun x591 () Int)
(declare-fun x147 () Bool)
(declare-fun x327 () Bool)
(declare-fun x129 () Bool)
(declare-fun x119 () Int)
(declare-fun x176 () Int)
(declare-fun x331 () Int)
(declare-fun x511 () Int)
(declare-fun x368 () Bool)
(declare-fun x355 () Bool)
(declare-fun x521 () Int)
(declare-fun x49 () Int)
(declare-fun x571 () Int)
(declare-fun x423 () Int)
(declare-fun x668 () Bool)
(declare-fun x207 () Int)
(declare-fun x54 () Int)
(declare-fun x92 () Int)
(declare-fun x303 () Bool)
(declare-fun x444 () Int)
(declare-fun x520 () Bool)
(declare-fun x359 () Bool)
(declare-fun x262 () Int)
(declare-fun x328 () Bool)
(declare-fun x282 () Int)
(declare-fun x192 (Int) Int)
(declare-fun x391 () Int)
(declare-fun x311 () x529)
(declare-fun x566 () Bool)
(declare-fun x556 () Int)
(declare-fun x419 () Int)
(declare-fun x670 () Int)
(declare-fun x701 () Int)
(declare-fun x55 () Int)
(declare-fun x151 () Int)
(declare-fun x139 () Int)
(declare-fun x44 () Bool)
(declare-fun x452 () Int)
(declare-fun x301 () Bool)
(declare-fun x149 () Int)
(declare-fun x293 () Int)
(declare-fun x537 () Int)
(declare-fun x221 () Int)
(declare-fun x275 () Int)
(declare-fun x155 () x529)
(declare-fun x576 () Int)
(declare-fun x565 () Bool)
(declare-fun x411 () Bool)
(declare-fun x417 () Int)
(declare-fun x274 () Int)
(declare-fun x481 (x529) Int)
(declare-fun x143 () Bool)
(declare-fun x595 () Int)
(declare-fun x96 () Int)
(declare-fun x1 () Int)
(declare-fun x226 () Int)
(declare-fun x296 () Int)
(declare-fun x351 () Int)
(declare-fun x375 () Bool)
(declare-fun x454 () Int)
(declare-fun x183 () Int)
(declare-fun x120 () Int)
(declare-fun x43 () Int)
(declare-fun x178 () Int)
(declare-fun x573 () Bool)
(declare-fun x378 () Int)
(declare-fun x503 () Bool)
(declare-fun x449 () Int)
(declare-fun x87 () Int)
(declare-fun x596 () Int)
(declare-fun x211 () Bool)
(declare-fun x98 () Bool)
(declare-fun x136 () x529)
(declare-fun x459 () Int)
(declare-fun x514 () Int)
(declare-fun x50 () Bool)
(declare-fun x224 () Int)
(declare-fun x195 () Int)
(declare-fun x435 () Int)
(declare-fun x647 () Int)
(declare-fun x657 () Int)
(declare-fun x509 () Bool)
(declare-fun x550 () Int)
(declare-fun x313 () Int)
(declare-fun x370 () Int)
(declare-fun x645 () Int)
(declare-fun x486 () Int)
(declare-fun x107 () Int)
(declare-fun x465 () Bool)
(declare-fun x455 () Int)
(declare-fun x73 () Int)
(declare-fun x292 () Int)
(declare-fun x504 () Int)
(declare-fun x239 () Int)
(declare-fun x78 () Bool)
(declare-fun x360 () Bool)
(declare-fun x470 () Bool)
(declare-fun x205 () Int)
(declare-fun x512 () x529)
(declare-fun x617 () Int)
(declare-fun x306 () Int)
(declare-fun x367 () x529)
(declare-fun x69 () Bool)
(declare-fun x128 () Int)
(declare-fun x32 () Int)
(declare-fun x231 (Int) Int)
(declare-fun x169 (x529) Int)
(declare-fun x502 () Bool)
(declare-fun x499 (Int) Int)
(declare-fun x621 () Bool)
(declare-fun x467 () Int)
(declare-fun x546 () Int)
(declare-fun x140 () Int)
(declare-fun x356 () Int)
(declare-fun x109 () Int)
(declare-fun x216 () Int)
(declare-fun x65 () Int)
(declare-fun x441 () Int)
(declare-fun x369 (x529) Int)
(declare-fun x35 () Int)
(declare-fun x416 () Int)
(declare-fun x122 () Int)
(declare-fun x175 () Bool)
(declare-fun x513 () Int)
(declare-fun x53 () Int)
(declare-fun x671 () Bool)
(declare-fun x223 () Int)
(declare-fun x396 () Int)
(declare-fun x517 () Int)
(declare-fun x681 () Int)
(declare-fun x242 () Int)
(declare-fun x577 () Int)
(declare-fun x100 () Int)
(declare-fun x152 () Bool)
(declare-fun x77 () Int)
(declare-fun x89 () x529)
(declare-fun x533 () Int)
(declare-fun x614 () Int)
(declare-fun x606 (Int) Int)
(declare-fun x135 () Int)
(declare-fun x201 () Bool)
(declare-fun x544 () Int)
(declare-fun x494 () Int)
(declare-fun x578 () Int)
(declare-fun x495 () Int)
(declare-fun x182 () x529)
(declare-fun x21 () Int)
(declare-fun x126 () Bool)
(declare-fun x477 () Int)
(declare-fun x664 () Bool)
(declare-fun x133 () Int)
(declare-fun x703 () Bool)
(declare-fun x280 () Int)
(declare-fun x319 () Int)
(declare-fun x82 () Int)
(declare-fun x409 () Int)
(declare-fun x252 () Bool)
(declare-fun x677 () Int)
(declare-fun x572 () Int)
(declare-fun x422 () Int)
(declare-fun x636 () Int)
(declare-fun x549 () Int)
(declare-fun x329 () Int)
(declare-fun x372 () Int)
(declare-fun x295 () Int)
(declare-fun x496 () Int)
(declare-fun x464 () Int)
(declare-fun x708 () Int)
(declare-fun x244 () Int)
(declare-fun x214 () Int)
(declare-fun x545 () Int)
(declare-fun x698 () Int)
(declare-fun x530 () Int)
(declare-fun x186 () Int)
(declare-fun x594 () Int)
(declare-fun x265 () Int)
(declare-fun x674 () Bool)
(declare-fun x164 () Bool)
(declare-fun x181 () Int)
(declare-fun x297 () Bool)
(declare-fun x679 () Int)
(declare-fun x433 () Bool)
(declare-fun x272 () Int)
(declare-fun x60 () Int)
(declare-fun x479 () Bool)
(declare-fun x534 (x529) Int)
(declare-fun x101 () Int)
(declare-fun x666 () Int)
(declare-fun x469 () Int)
(declare-fun x165 () Int)
(declare-fun x95 () Int)
(declare-fun x569 () Int)
(declare-fun x115 () Int)
(declare-fun x587 () Int)
(declare-fun x48 () x529)
(declare-fun x5 () Int)
(declare-fun x352 () Int)
(declare-fun x90 () Int)
(declare-fun x540 () Int)
(declare-fun x427 () Int)
(declare-fun x40 () Int)
(declare-fun x582 () Int)
(declare-fun x508 () Bool)
(declare-fun x29 () Int)
(declare-fun x2 () Int)
(declare-fun x67 () Int)
(declare-fun x206 () x529)
(declare-fun x689 () Int)
(declare-fun x291 () Int)
(declare-fun x230 () Int)
(declare-fun x462 () Bool)
(declare-fun x42 (Int) Int)
(declare-fun x219 () Int)
(declare-fun x377 () Bool)
(declare-fun x458 () Bool)
(declare-fun x345 () Int)
(declare-fun x300 () Int)
(declare-fun x667 () Bool)
(declare-fun x457 () Int)
(declare-fun x382 () Bool)
(declare-fun x134 () Int)
(declare-fun x428 () Int)
(declare-fun x196 () Bool)
(declare-fun x191 () Bool)
(declare-fun x246 () Bool)
(declare-fun x709 () Int)
(declare-fun x678 () Int)
(declare-fun x579 () Bool)
(declare-fun x611 (x529) Int)
(declare-fun x36 () Int)
(declare-fun x220 () Int)
(declare-fun x531 () Int)
(declare-fun x338 () x529)
(declare-fun x491 () Int)
(declare-fun x463 () Int)
(declare-fun x56 () Int)
(declare-fun x153 () Int)
(declare-fun x79 () Int)
(declare-fun x637 () Int)
(declare-fun x322 () Int)
(declare-fun x613 () Int)
(declare-fun x519 () Int)
(declare-fun x167 () Int)
(declare-fun x580 () Int)
(declare-fun x45 () Int)
(declare-fun x384 () Int)
(declare-fun x385 () Int)
(declare-fun x365 () Int)
(declare-fun x137 () Int)
(declare-fun x393 () Bool)
(declare-fun x447 () Int)
(declare-fun x456 () Int)
(declare-fun x279 () Bool)
(declare-fun x615 () Int)
(declare-fun x20 () Int)
(declare-fun x461 () Int)
(declare-fun x532 () Bool)
(declare-fun x258 () Bool)
(declare-fun x639 () Int)
(declare-fun x380 () Int)
(declare-fun x320 () Bool)
(declare-fun x707 () Int)
(declare-fun x638 () Bool)
(declare-fun x302 () Int)
(declare-fun x118 () Int)
(declare-fun x27 () Int)
(declare-fun x26 () Int)
(declare-fun x240 () Bool)
(declare-fun x74 () Int)
(declare-fun x333 () Bool)
(declare-fun x308 () Int)
(declare-fun x348 () Int)
(declare-fun x704 () Int)
(declare-fun x507 () Int)
(declare-fun x38 () Bool)
(declare-fun x203 () Bool)
(declare-fun x618 () Int)
(declare-fun x687 () Bool)
(declare-fun x24 () Int)
(declare-fun x376 () Int)
(declare-fun x622 () Bool)
(declare-fun x415 () Int)
(declare-fun x498 () Int)
(declare-fun x177 () Int)
(declare-fun x562 () Int)
(declare-fun x339 () Int)
(declare-fun x66 () Bool)
(declare-fun x397 () Int)
(declare-fun x354 () Int)
(declare-fun x445 () Bool)
(declare-fun x254 () Int)
(define-fun x434 ((x529 x529) (x150 Int)) x529 (ite ((_ is x600) x529) (x600 (x343 x529) (+ (x586 x529) x150)) (ite ((_ is x581) x529) (x581 (x229 x529) (x706 x529) (+ (x14 x529) x150)) (x10 (+ (x37 x529) x150)))))
(define-fun x148 ((x225 Int)) Int (ite (and (>= x225 0) (< x225 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x225 (- x225 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x601 ((x225 Int)) Int (ite (and (< x225 0) (>= x225 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x225) x225))
(define-fun x482 ((x57 Int)) Bool (and (<= 0 x57) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x57)))
(define-fun x640 ((x57 Int)) Bool (and (= x57 (x669 115792089237316195423570985008687907853269984665640564039457584007913129639935 x57)) (= x57 (x669 x57 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x443 ((x57 Int)) Bool (and (= 0 (x669 x57 0)) (= 0 (x669 0 x57))))
(define-fun x379 ((x57 Int)) Bool (= (x669 x57 x57) x57))
(define-fun x630 ((x57 Int)) Bool (and (x379 x57) (x443 x57) (x640 x57)))
(define-fun x116 ((x57 Int)) Bool (= (x669 1461501637330902918203684832716283019655932542975 x57) (x669 1461501637330902918203684832716283019655932542975 (x669 1461501637330902918203684832716283019655932542975 x57))))
(define-fun x204 ((x57 Int)) Bool (=> (and (< x57 1461501637330902918203684832716283019655932542976) (>= x57 0)) (= (x669 1461501637330902918203684832716283019655932542975 x57) x57)))
(define-fun x61 ((x57 Int)) Bool (=> (= x57 (x669 1461501637330902918203684832716283019655932542975 x57)) (and (> 1461501637330902918203684832716283019655932542976 x57) (>= x57 0))))
(define-fun x620 ((x57 Int)) Bool (=> (and (< x57 2923003274661805836407369665432566039311865085952) (>= x57 1461501637330902918203684832716283019655932542976)) (= (x669 1461501637330902918203684832716283019655932542975 x57) (- x57 1461501637330902918203684832716283019655932542976))))
(define-fun x358 ((x57 Int) (x25 Int)) Bool (and (>= x25 0) (= x57 (+ (* x25 1461501637330902918203684832716283019655932542976) (x669 1461501637330902918203684832716283019655932542975 x57)))))
(define-fun x527 ((x57 Int) (x197 Int)) Bool (and (x358 x57 x197) (x61 x57) (x116 x57) (x204 x57) (x620 x57)))
(define-fun x693 ((x57 Int) (x25 Int)) Bool (= (x669 x25 x57) (x669 x57 x25)))
(define-fun x648 ((x57 Int) (x25 Int)) Bool (and (=> (>= x25 0) (>= x25 (x669 x57 x25))) (<= 0 (x669 x57 x25)) (=> (>= x57 0) (>= x57 (x669 x57 x25)))))
(define-fun x510 ((x57 Int) (x25 Int)) Bool (and (x693 x57 x25) (x648 x57 x25)))
(define-fun x597 ((x57 Int) (x197 Int)) Bool (and (x510 x57 1461501637330902918203684832716283019655932542975) (x527 x57 x197)))
(define-fun x340 ((x57 Int)) Bool (= (x669 20282409603651670423947251286015 (x669 20282409603651670423947251286015 x57)) (x669 20282409603651670423947251286015 x57)))
(define-fun x493 ((x57 Int)) Bool (=> (and (>= x57 0) (< x57 20282409603651670423947251286016)) (= x57 (x669 20282409603651670423947251286015 x57))))
(define-fun x705 ((x57 Int)) Bool (=> (= (x669 20282409603651670423947251286015 x57) x57) (and (<= 0 x57) (< x57 20282409603651670423947251286016))))
(define-fun x7 ((x57 Int)) Bool (=> (and (> 40564819207303340847894502572032 x57) (<= 20282409603651670423947251286016 x57)) (= (x669 20282409603651670423947251286015 x57) (- x57 20282409603651670423947251286016))))
(define-fun x558 ((x57 Int) (x25 Int)) Bool (and (>= x25 0) (= (+ (x669 20282409603651670423947251286015 x57) (* x25 20282409603651670423947251286016)) x57)))
(define-fun x349 ((x57 Int) (x197 Int)) Bool (and (x493 x57) (x340 x57) (x7 x57) (x705 x57) (x558 x57 x197)))
(define-fun x323 ((x57 Int) (x197 Int)) Bool (and (x349 x57 x197) (x510 x57 20282409603651670423947251286015)))
(define-fun x682 ((x57 Int)) Bool (= (ite (< (x669 x57 20282409603651670423947251286015) 10141204801825835211973625643008) (x669 x57 20282409603651670423947251286015) (+ (x669 x57 20282409603651670423947251286015) 115792089237316195423570985008687907853269984645358154435805913583965878353920)) (x9 x57)))
(define-fun x405 ((x57 Int)) Bool (= (x669 115792089237316195423570985008687907853269984665640564039457584007913129639904 x57) (x669 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x669 115792089237316195423570985008687907853269984665640564039457584007913129639904 x57))))
(define-fun x506 ((x57 Int)) Bool (=> (and (< x57 32) (<= 0 x57)) (= 0 (x669 115792089237316195423570985008687907853269984665640564039457584007913129639904 x57))))
(define-fun x609 ((x57 Int) (x25 Int) (x58 Int) (x215 Int)) Bool (and (= (+ x25 (* x58 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x215)) x57) (< x58 3618502788666131106986593281521497120414687020801267626233049500247285301248) (<= 0 x215) (<= 0 x58) (> 32 x25) (= (* x58 32) (x669 115792089237316195423570985008687907853269984665640564039457584007913129639904 x57)) (< x215 1) (<= 0 x25)))
(define-fun x23 ((x57 Int) (x438 Int) (x337 Int) (x260 Int)) Bool (and (x506 x57) (x405 x57) (x609 x57 x438 x337 x260)))
(define-fun x501 ((x57 Int) (x438 Int) (x337 Int) (x260 Int)) Bool (and (x510 x57 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x23 x57 x438 x337 x260)))
(define-fun x686 ((x57 Int)) Bool (= (x669 1099511627775 (x669 1099511627775 x57)) (x669 1099511627775 x57)))
(define-fun x684 ((x57 Int)) Bool (=> (and (< x57 1099511627776) (<= 0 x57)) (= x57 (x669 1099511627775 x57))))
(define-fun x564 ((x57 Int)) Bool (=> (= (x669 1099511627775 x57) x57) (and (<= 0 x57) (< x57 1099511627776))))
(define-fun x200 ((x57 Int)) Bool (=> (and (>= x57 1099511627776) (> 2199023255552 x57)) (= (x669 1099511627775 x57) (- x57 1099511627776))))
(define-fun x174 ((x57 Int) (x25 Int)) Bool (and (>= x25 0) (= x57 (+ (* x25 1099511627776) (x669 1099511627775 x57)))))
(define-fun x663 ((x57 Int) (x197 Int)) Bool (and (x686 x57) (x174 x57 x197) (x684 x57) (x564 x57) (x200 x57)))
(define-fun x633 ((x57 Int) (x197 Int)) Bool (and (x510 x57 1099511627775) (x663 x57 x197)))
(define-fun x683 ((x57 Int)) Bool (= (x669 18446744073709551615 (x669 18446744073709551615 x57)) (x669 18446744073709551615 x57)))
(define-fun x695 ((x57 Int)) Bool (=> (and (> 18446744073709551616 x57) (>= x57 0)) (= x57 (x669 18446744073709551615 x57))))
(define-fun x84 ((x57 Int)) Bool (=> (= (x669 18446744073709551615 x57) x57) (and (<= 0 x57) (> 18446744073709551616 x57))))
(define-fun x237 ((x57 Int)) Bool (=> (and (>= x57 18446744073709551616) (> 36893488147419103232 x57)) (= (x669 18446744073709551615 x57) (- x57 18446744073709551616))))
(define-fun x389 ((x57 Int) (x25 Int)) Bool (and (= (+ (* 18446744073709551616 x25) (x669 18446744073709551615 x57)) x57) (<= 0 x25)))
(define-fun x124 ((x57 Int) (x197 Int)) Bool (and (x84 x57) (x683 x57) (x695 x57) (x389 x57 x197) (x237 x57)))
(define-fun x524 ((x57 Int) (x197 Int)) Bool (and (x124 x57 x197) (x510 x57 18446744073709551615)))
(define-fun x156 ((x555 Int)) Int (ite (= 128 x555) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x680 x555)))
(define-fun x314 ((x555 Int)) Int (ite (= x555 0) x341 (x192 x555)))
(define-fun x112 ((x555 Int)) Int (ite (= 128 x555) x341 (x42 x555)))
(define-fun x518 ((x555 Int)) Int (ite (= x555 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x187 x555)))
(define-fun x505 ((x555 x529)) Int (ite (= x555 x39) x372 (x534 x555)))
(define-fun x166 ((x555 x529)) Int (ite (= x83 x555) x540 (x505 x555)))
(define-fun x651 ((x555 x529)) Int (ite (and x579 x333) (x166 x555) (x534 x555)))
(define-fun x315 ((x555 Int)) Int (ite (= x555 0) x299 (x588 x555)))
(define-fun x6 ((x555 Int)) Int (ite (= 128 x555) x299 (x231 x555)))
(define-fun x81 ((x555 Int)) Int (ite (= x555 0) x417 (x192 x555)))
(define-fun x342 ((x555 Int)) Int (ite (= 128 x555) x417 (x42 x555)))
(define-fun x526 ((x555 Int)) Int (ite (= x555 0) x559 (x192 x555)))
(define-fun x72 ((x555 Int)) Int (ite (= 128 x555) x559 (x42 x555)))
(define-fun x321 ((x555 Int)) Int (ite (= x555 0) x594 (x192 x555)))
(define-fun x468 ((x555 Int)) Int (ite (= x555 128) x594 (x42 x555)))
(define-fun x334 ((x555 x529)) Int (ite (= x159 x555) x305 (x480 x555)))
(define-fun x63 ((x555 x529)) Int (ite (= x555 x512) x707 (x334 x555)))
(define-fun x132 ((x555 Int)) Int (ite (= 0 x555) 1 (x606 x555)))
(define-fun x500 ((x555 Int)) Int (ite (and x15 x327) (x112 x555) (ite (and x458 x462) (x468 x555) (ite (and x222 x465) (x72 x555) (x342 x555)))))
(define-fun x250 ((x555 Int)) Int (ite (= x555 x356) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x500 x555)))
(define-fun x117 ((x555 Int)) Int (ite (= x439 x555) x287 (x250 x555)))
(define-fun x188 ((x555 Int)) Int (ite (= x555 x356) 1 (x499 x555)))
(define-fun x184 ((x555 x529)) Int (ite (= x555 x236) x161 (x481 x555)))
(define-fun x543 ((x555 x529)) Int (ite (= x155 x555) x624 (x184 x555)))
(define-fun x286 ((x555 Int)) Int (ite (= x555 0) 1 (x606 x555)))
(define-fun x696 ((x555 Int)) Int (ite (= x555 x356) 1 (x499 x555)))
(define-fun x599 ((x555 Int)) Int (ite (= x555 0) x269 (x588 x555)))
(define-fun x608 ((x555 Int)) Int (ite (= x555 128) x269 (x231 x555)))
(define-fun x362 ((x555 x529)) Int (ite (and x579 x333) (x480 x555) (ite (and x411 x129) (x480 x555) (x63 x555))))
(define-fun x673 ((x555 Int)) Int (ite (= x555 0) x75 (x588 x555)))
(define-fun x190 ((x555 Int)) Int (ite (= x555 128) x75 (x231 x555)))
(define-fun x590 ((x555 x529)) Int (ite (and x579 x333) (x481 x555) (ite (and x129 x411) (x543 x555) (x481 x555))))
(define-fun x64 ((x555 Int)) Int (ite (= 0 x555) x498 (x588 x555)))
(define-fun x662 ((x555 Int)) Int (ite (= 128 x555) x498 (x231 x555)))
(define-fun x656 ((x555 Int)) Int (ite (= 0 x555) 1 (x606 x555)))
(define-fun x335 ((x555 Int)) Int (ite (= x356 x555) 1 (x499 x555)))
(define-fun x243 ((x555 Int)) Int (ite (and x333 x579) (x335 x555) (ite (and x411 x129) (x696 x555) (x188 x555))))
(define-fun x643 ((x555 Int)) Int (ite (and x668 x418) (x6 x555) (ite (and x520 x257) (x662 x555) (ite (and x180 x240) (x190 x555) (x608 x555)))))
(define-fun x699 ((x57 Int)) Bool (=> (and (not (= x57 274184521717934524641157099916833587231)) (not (= 3695885053 x57)) (not (= 1099511627775 x57)) (not (= x57 2514000705)) (not (= x57 3638949393)) (not (= 3833100637 x57)) (not (= x57 1461501637330902918203684832716283019655932542975)) (not (= x57 274184521717934524641157099916833587211)) (not (= x57 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x57 204737060)) (not (= x57 70124239)) (not (= x57 480214969)) (> x57 10000) (not (= 18446744073709551616 x57)) (not (= 4033150093 x57)) (not (= x57 3795249780)) (not (= 18446744073709551615 x57)) (not (= 10141204801825835211973625643007 x57)) (not (= 20282409603651670423947251286015 x57)) (not (= x57 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= x57 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x57 950698303)) (not (= x57 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (not (= x57 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x57)) (not (= 1208925819614629174706175 x57)) (not (= x57 274184521717934524641157099916833587235)) (not (= 1099511627776 x57)) (not (= 20282409603651670423947251286016 x57)) (not (= 274184521717934524641157099916833587244 x57)) (not (= 2835717307 x57)) (not (= x57 2068668150)) (not (= 98097205 x57)) (not (= x57 3889878717)) (not (= x57 274184521717934524641157099916833587227)) (not (= 826074471 x57)) (not (= x57 3253611544)) (not (= x57 274184521717934524641157099916833587223)) (not (= x57 3119561463)) (not (= x57 151187884)) (not (= x57 11269569)) (not (= x57 274184521717934524641157099916833587233)) (not (= x57 1889567281))) (not ((_ is x10) (x185 x57)))))
(assert (x630 x430))
(assert (x482 x75))
(assert (= (x10 274184521717934524641157099916833587211) (x185 274184521717934524641157099916833587211)))
(assert (x482 x383))
(assert (x510 x1 x469))
(assert (= (x10 18446744073709551615) (x185 18446744073709551615)))
(assert (x482 x341))
(assert (= (and (not x333) x579) x411))
(assert (x630 x230))
(assert (x482 x577))
(assert (x482 x425))
(assert (x682 x634))
(assert (x482 x322))
(assert (x482 x93))
(assert (= x607 (and (not x222) x465)))
(assert (x482 x253))
(assert (x482 x2))
(assert (x682 x504))
(assert (x482 x363))
(assert (x482 x80))
(assert (x630 x653))
(assert (x482 x591))
(assert (x482 x373))
(assert (x510 x531 x230))
(assert (x482 x541))
(assert (x630 x551))
(assert (x482 x67))
(assert (x482 x275))
(assert (x482 x101))
(assert (x482 x271))
(assert (= x635 true))
(assert (x630 x293))
(assert (x482 x30))
(assert (x482 x661))
(assert (x323 x109 x448))
(assert (x630 x223))
(assert (x482 x513))
(assert (x482 x172))
(assert (x482 x76))
(assert (= (x185 3253611544) (x10 3253611544)))
(assert (x323 x353 x256))
(assert (x482 x409))
(assert (x630 x16))
(assert (x630 x478))
(assert (x482 x209))
(assert (x630 x353))
(assert (x482 x326))
(assert (x482 x498))
(assert (x482 x299))
(assert (x482 x647))
(assert (x482 x344))
(assert (x482 x348))
(assert (x630 x452))
(assert (x482 x701))
(assert (x482 x627))
(assert (= (x10 826074471) (x185 826074471)))
(assert (x699 274184521717934524641157099916833587233))
(assert (x482 x690))
(assert (= (x10 1099511627776) (x185 1099511627776)))
(assert (x482 x138))
(assert (x482 x54))
(assert (x630 x167))
(assert (x482 x422))
(assert (x482 x710))
(assert (= x687 (=> (and (<= 0 x226) (<= 0 x383) x141 (<= 0 x370) (= (> (x169 (x185 274184521717934524641157099916833587235)) 0) x141) (<= 0 x51) x113 (>= x449 0) (>= 1208925819614629174706175 x370) (<= 0 x228) (= x446 x475) (>= x363 0) (>= x96 0) (<= 0 x153) (<= x412 18446744073709551615) (>= x614 0) (>= 255 x614) (= x307 (< 0 (x169 (x185 274184521717934524641157099916833587244)))) (>= 1208925819614629174706175 x59) (<= 0 x412) (<= x153 1461501637330902918203684832716283019655932542975) x453 (<= 0 x385) (<= 0 x414) (>= x295 0) (<= x135 255) (<= x96 18446744073709551615) (= x453 (< 0 (x169 (x185 274184521717934524641157099916833587233)))) (= (x47 (x185 274184521717934524641157099916833587211)) x234) (<= 0 x208) x171 (= (x47 (x185 274184521717934524641157099916833587235)) x552) x252 (>= x176 0) (>= x59 0) (<= 0 x227) (= x420 x380) (>= 20282409603651670423947251286015 x363) (<= x702 1099511627775) (= x295 (x47 (x185 274184521717934524641157099916833587223))) (= (x47 (x185 274184521717934524641157099916833587233)) x626) (= x420 x62) (>= x626 0) (<= 0 x475) (= x393 (> (x169 (x185 274184521717934524641157099916833587223)) 0)) x451 (>= 18446744073709551615 x632) (= (> (x169 (x185 274184521717934524641157099916833587231)) 0) x171) (<= 0 x234) (= x70 x153) (<= x644 20282409603651670423947251286015) (>= x552 0) (<= 0 x135) (<= x420 1461501637330902918203684832716283019655932542975) (>= x487 0) (= x176 (x47 (x185 274184521717934524641157099916833587231))) (<= x383 18446744073709551615) (= x645 274184521717934524641157099916833587211) (>= x698 0) (<= x228 1208925819614629174706175) (= (< 0 (x169 (x185 274184521717934524641157099916833587211))) x113) (= x547 x541) (>= 20282409603651670423947251286015 x385) (>= 255 x698) (= (x47 (x185 274184521717934524641157099916833587244)) x178) (<= x318 18446744073709551615) (<= 0 x701) (>= x420 0) (>= x632 0) x307 (>= x178 0) (<= x226 1099511627775) (>= x702 0) (= (> (x169 (x185 274184521717934524641157099916833587227)) 0) x451) (>= 20282409603651670423947251286015 x208) (= x380 x223) (<= x475 1461501637330902918203684832716283019655932542975) (<= 0 x644) (<= x449 18446744073709551615) (= x396 x547) (<= 0 x318) (= x701 (x47 (x185 274184521717934524641157099916833587227))) (>= 255 x227) (<= x51 18446744073709551615) (<= x414 1208925819614629174706175) (<= x487 18446744073709551615) (= (not (= x62 274184521717934524641157099916833587211)) x252) x393) x603)))
(assert (x482 x604))
(assert (x482 x584))
(assert (x482 x176))
(assert (= x407 (and (not x667) x607)))
(assert (x482 x632))
(assert (x482 x264))
(assert (x482 x424))
(assert (x482 x213))
(assert (x482 x95))
(assert (x630 x181))
(assert (x482 x125))
(assert (x482 x614))
(assert (x482 x700))
(assert (x630 x560))
(assert (x323 x93 x410))
(assert (x482 x5))
(assert (x482 x578))
(assert (x482 x247))
(assert (x482 x134))
(assert (x482 x615))
(assert (x630 x447))
(assert (= 1461501637330902918203684832716283019655932542975 (x369 (x10 1461501637330902918203684832716283019655932542975))))
(assert (x482 x616))
(assert (x482 x678))
(assert (x482 x144))
(assert (= (x369 (x10 204737060)) 204737060))
(assert (x482 x20))
(assert (x482 x22))
(assert (x482 x170))
(assert (x482 x552))
(assert (x482 x707))
(assert (= (x369 (x185 274184521717934524641157099916833587227)) 274184521717934524641157099916833587227))
(assert (x482 x417))
(assert (x510 x36 x436))
(assert (= (x185 950698303) (x10 950698303)))
(assert (x482 x55))
(assert (x482 x439))
(assert (x524 x484 x165))
(assert (x482 x676))
(assert (x482 x688))
(assert (x482 x167))
(assert (= 1208925819614629174706175 (x369 (x10 1208925819614629174706175))))
(assert (=> (>= 10000 x326) (= (x185 x326) (x10 x326))))
(assert (x630 x504))
(assert (x482 x91))
(assert (x482 x220))
(assert (x633 x578 x210))
(assert (x482 x259))
(assert (x699 x35))
(assert (x482 x380))
(assert (x482 x29))
(assert (= (x369 (x10 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x482 x652))
(assert (x482 x121))
(assert (x482 x97))
(assert (= (x369 (x185 274184521717934524641157099916833587235)) 274184521717934524641157099916833587235))
(assert (x482 x430))
(assert (x630 x324))
(assert (x482 x248))
(assert (= (x10 274184521717934524641157099916833587231) (x185 274184521717934524641157099916833587231)))
(assert (x482 x228))
(assert (x482 x49))
(assert (= x15 x635))
(assert (= true x386))
(assert (x482 x207))
(assert (x482 x34))
(assert (x482 x273))
(assert (x482 x384))
(assert (= (x369 (x10 274184521717934524641157099916833587223)) 274184521717934524641157099916833587223))
(assert (x482 x43))
(assert (x482 x449))
(assert (x482 x330))
(assert (x482 x294))
(assert (x482 x59))
(assert (x482 x183))
(assert (= 3833100637 (x369 (x10 3833100637))))
(assert (x482 x208))
(assert (x524 x456 x239))
(assert (x323 x454 x617))
(assert (x482 x394))
(assert (x482 x456))
(assert (= 1099511627775 (x369 (x10 1099511627775))))
(assert (x630 x484))
(assert (x482 x16))
(assert (x482 x255))
(assert (x482 x370))
(assert (x482 x199))
(assert (x482 x698))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x369 (x10 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(assert (x482 x194))
(assert (x630 x277))
(assert (x323 x167 x366))
(assert (x482 x272))
(assert (= (=> (= (= 274184521717934524641157099916833587227 x521) x129) (and (=> (not x129) x570) (=> (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x115) (= x45 x639) (= x130 x408) (= x492 x408) (= 274184521717934524641157099916833587211 x125) (= (x184 x136) x639) (= (x601 (- x74 4)) x19) (= 274184521717934524641157099916833587211 x105) (= 1 x94) (= x74 68) (= x565 (< x221 x130)) (not (= 2514000705 x419)) (not (> 4 x74)) (= (+ x45 x492) x624) (= x287 x35) (< 0 x199) (= x613 x74) (= x136 (x581 (x185 x35) (x10 1) 0)) (= x48 (x581 (x185 274184521717934524641157099916833587211) (x10 1) 0)) (< (+ x408 x639) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x161 (x601 (- x221 x130))) (<= x639 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x35 x580) (= x618 32) (>= x639 0) (not (= 1889567281 x419)) (= x44 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x19) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x19)) (< x19 64)))) (= x199 (x169 (x185 274184521717934524641157099916833587227))) (= x236 (x581 (x185 274184521717934524641157099916833587211) (x10 1) 0)) (<= x35 1461501637330902918203684832716283019655932542975) (>= x221 0) (not x44) (<= x221 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 826074471 x419)) (= (x481 x48) x221) (= x568 x130) x129 (not (> 826074471 x419)) (= x419 2835717307) (not x565) (= (x581 (x185 x35) (x10 1) 0) x155)) x525))) x281))
(assert (x482 x490))
(assert (x482 x420))
(assert (x482 x454))
(assert (x482 x308))
(assert (x482 x689))
(assert (x482 x31))
(assert (x482 x626))
(assert (x482 x216))
(assert (x630 x93))
(assert (x482 x145))
(assert (x482 x560))
(assert (x482 x514))
(assert (x510 x273 x461))
(assert (x482 x53))
(assert (x482 x287))
(assert (x482 x130))
(assert (x682 x40))
(assert (x482 x515))
(assert (x482 x522))
(assert (= (x369 (x185 274184521717934524641157099916833587244)) 274184521717934524641157099916833587244))
(assert (x482 x60))
(assert (x630 x121))
(assert (x482 x478))
(assert (= 950698303 (x369 (x10 950698303))))
(assert (x482 x154))
(assert (= 18446744073709551616 (x369 (x10 18446744073709551616))))
(assert (x630 x578))
(assert (x682 x52))
(assert true)
(assert (x524 x447 x421))
(assert (x482 x318))
(assert (= (x369 (x10 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x482 x319))
(assert (x597 x538 x140))
(assert (x482 x346))
(assert (x482 x135))
(assert (x482 x4))
(assert (x630 20282409603651670423947251286015))
(assert (= (x369 (x185 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x482 x296))
(assert (x482 x73))
(assert (x482 x351))
(assert (x482 x96))
(assert (x630 x306))
(assert (= (x369 (x10 2068668150)) 2068668150))
(assert (x482 x547))
(assert (x482 x230))
(assert (x482 x618))
(assert (x482 x517))
(assert (= x525 (=> (and (= (not x263) x249) (or (and (< x363 20282409603651670423947251286016) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x644) x274) (= x346 (x669 20282409603651670423947251286015 x676)) (= x666 (ite (< x274 x51) 1 0)) (>= 18446744073709551615 x51) (= x232 x122) (> 18446744073709551616 x449) (= (+ x679 x708) x604) (>= 18446744073709551615 x604) (>= x363 0) (>= 18446744073709551615 x51) (= (= 0 x363) x466) (= (* x363 x449) x548) (or (and x395 (= 0 x390)) (and (= x296 (mod x346 x80)) (not x395) (= 0 x296) (= x351 (div x346 x80)) (= x351 x390))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x272 x51)) (= x102 (* x363 x449)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x644) x550) (= x316 (x669 20282409603651670423947251286015 x109)) (not (> x437 1)) (= (x669 x273 x461) x282) (>= 18446744073709551615 x51) (or (and x147 (= 0 x100)) (and (= x655 0) (= x655 (mod x316 x530)) (= x195 (div x316 x530)) (= x195 x100) (not x147))) (= x98 (> x100 x49)) (< x449 18446744073709551616) (< x644 20282409603651670423947251286016) (< x449 18446744073709551616) (= x211 (< x644 x556)) (or (and (<= x644 20282409603651670423947251286015) (< 0 x644) (= x18 x545) (not x211) (<= x484 18446744073709551615) (= x318 x391) (< (+ x318 x18) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x670 (mod x266 x644)) (= (x669 18446744073709551615 x447) x18) (<= 0 x644) (= 0 x670) (= (x669 18446744073709551615 x484) x308) (= x484 (+ x391 x545)) (>= 18446744073709551615 x318) (<= 0 x318) (= x447 (div x266 x644)) (> 20282409603651670423947251286016 x644) (< x318 18446744073709551616)) x211) (< x644 20282409603651670423947251286016) (= (* x272 x51) x496) (= x151 x254) (>= 18446744073709551615 x449) (= x109 x85) (= x664 (< x49 x390)) (= (x669 18446744073709551615 x653) x32) (= x51 x708) (>= 20282409603651670423947251286015 x644) (>= 18446744073709551615 x302) (= (* x266 x217) x585) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x179 x266)) (= x436 (ite (> x449 x584) 1 0)) (= x530 (x669 20282409603651670423947251286015 x629)) (<= 0 x449) (= x331 (x669 18446744073709551615 x302)) (>= 18446744073709551615 x51) (<= 0 x644) (or (and (= x68 (+ x589 x139)) (not x98) (= x68 x121) (= x139 x491) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x491 x490)) (= x491 x681) (= (* x278 x100) x681) (= x490 x589) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x278 x100))) (and (= x137 x86) (= x571 (+ x332 x198)) (= x571 x251) (= x490 x198) (= x546 (x601 (- x100 x49))) (= (* x278 x49) x442) x98 (< (+ x549 x490) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x549 x442) (< (+ x137 x571) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (* x49 x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (* x546 x97) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (< x100 x49)) (= x121 x459) (= x90 x137) (= x549 x332) (= x86 (* x546 x97)) (= x459 (+ x251 x90)))) (= x127 (x669 18446744073709551615 x604)) (= (x669 18446744073709551615 x302) x477) (>= 20282409603651670423947251286015 x363) (= x179 (x669 18446744073709551615 x121)) (<= 0 x644) (= (x669 18446744073709551615 x29) x697) (>= x644 0) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x363) x557) (> 20282409603651670423947251286016 x644) (<= 0 x51) (>= 18446744073709551615 x449) (>= x51 0) (< x51 18446744073709551616) (>= x51 0) (< x51 18446744073709551616) (= (ite (> x51 x550) 1 0) x461) (>= x449 0) (= x654 x697) (= x523 x585) (= 0 x467) (<= x363 20282409603651670423947251286015) x508 (= x467 (x669 x205 x666)) (< (+ x32 x51) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 18446744073709551615 x449) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x523 x449)) (= x36 (ite (not x466) 1 0)) (> 18446744073709551616 x449) (>= 20282409603651670423947251286015 x644) (= x535 (* x449 x523)) (= (ite (not x361) 1 0) x273) (= x232 (* x172 x390)) (= x282 0) (= (> x556 x363) x375) (= x535 x29) (= x172 (x601 (- 1 x437))) (= (ite (< x557 x449) 1 0) x469) (< (* x390 x172) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x395 (= x80 0)) (>= x363 0) (<= 0 x51) (or (and (= x659 x562) (= x392 x403) (= x330 x460) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x278 x49)) (< (+ x403 x330) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x253 x637) (= x472 x637) (= (* x122 x120) x472) (= x659 x511) (= x636 x403) (< (* x120 x122) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x664 (= (x601 (- x390 x49)) x3) (not (< x390 x49)) (= x120 (+ x460 x392)) (= x636 (* x97 x3)) (= x330 (+ x485 x511)) (= x562 (* x49 x278)) (< (* x97 x3) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x490 x485) (< (+ x490 x659) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (= (+ x241 x416) x700) (= x416 x24) (= x598 (* x390 x278)) (= x24 x598) (< (+ x24 x490) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x700 x122)) (= (* x700 x122) x309) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x278 x390)) (= x309 x312) (= x241 x490) (= x253 x312) (not x664))) (= x32 x679) (= (x669 18446744073709551615 x253) x217) (= (= 0 x644) x361) (= x537 (* x179 x266)) (= x205 (ite (not x638) 1 0)) (= (x669 20282409603651670423947251286015 x306) x80) (< x51 18446744073709551616) (= x596 0) (> 18446744073709551616 x51) (or (and (<= x412 18446744073709551615) (< 0 x363) (= (x669 18446744073709551615 x456) x247) (= x657 x412) (= x212 x247) (not x375) (<= x602 18446744073709551615) (<= 0 x363) (= (div x266 x363) x456) (<= x363 20282409603651670423947251286015) (< (+ x247 x412) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 0 x22) (= x602 (+ x212 x657)) (> 18446744073709551616 x412) (= (mod x266 x363) x22) (= x394 (x669 18446744073709551615 x602)) (<= 0 x412) (< x363 20282409603651670423947251286016)) x375) (= x628 (x669 x1 x469)) (= (* x51 x644) x219) (<= x644 20282409603651670423947251286015) (= x85 (* x644 x51)) (= x254 (x669 18446744073709551615 x604)) (< (+ x697 x449) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x449 0) (= (x669 x36 x436) x596) (= x653 x496) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x363) x584) (= x548 x306) (= x302 (+ x654 x325)) (= 0 x628) (= x629 x102) (> 20282409603651670423947251286016 x363) (<= 0 x363) (= x272 x537) (= (= x530 0) x147) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x217 x266)) (>= 18446744073709551615 x449) (= x477 x242) (<= 0 x449) (< x363 20282409603651670423947251286016) (= x219 x676) (= (ite (not x703) 1 0) x1) (= x638 (= 0 x644)) (<= x363 20282409603651670423947251286015) (= x325 x449) (= (= 0 x363) x703)) (and (= x51 x151) (not x508) (= x242 x449))) (= x288 x265) (not (= 3889878717 x554)) (>= 1461501637330902918203684832716283019655932542975 x265) (= (x601 (- x647 x702)) x578) (not (> 3889878717 x554)) (>= x702 0) (<= 0 x265) (= x67 (x169 (x185 274184521717934524641157099916833587211))) (not (> 3638949393 x554)) (not (< x554 3253611544)) (= x263 (= 0 x515)) (not (< x554 2068668150)) (>= x209 0) (= x554 4033150093) (= x515 x426) (>= 1461501637330902918203684832716283019655932542975 x209) (= x288 x119) (= x647 x463) (= (x243 x356) x515) (= (ite x249 1 0) x426) (>= 1099511627775 x702) (= x678 0) (> x515 0) (< x463 1099511627776) (= x678 x173) (<= x587 1461501637330902918203684832716283019655932542975) (not (= x94 0)) (not (< x463 x702)) (= x508 (> x266 0)) (<= 0 x587) (< x702 1099511627776) (= x587 x446) (= x266 (x669 1099511627775 x578)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x618) (and (< x618 32) (= (<= x618 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (< 0 x67)) x297)))
(assert (= (x10 480214969) (x185 480214969)))
(assert (= x458 (and x15 (not x327))))
(assert (x323 x40 x235))
(assert (x482 x179))
(assert (x482 x441))
(assert (x482 x428))
(assert (not x687))
(assert (x482 x546))
(assert (x630 x29))
(assert (= 480214969 (x369 (x10 480214969))))
(assert (x482 x612))
(assert (x482 x27))
(assert (x482 x540))
(assert (= (x10 3119561463) (x185 3119561463)))
(assert (= (or (and x108 x371) (and x668 x418) (and x520 x257) (and x180 x240)) x476))
(assert (x482 x426))
(assert (x482 x672))
(assert (x699 x216))
(assert (x630 x253))
(assert (x482 x24))
(assert (= (x10 3695885053) (x185 3695885053)))
(assert (x524 x602 x193))
(assert (x482 x634))
(assert (x482 x173))
(assert (x482 x36))
(assert (x482 x624))
(assert (= (x369 (x185 x35)) x35))
(assert (x630 x109))
(assert (= (x185 151187884) (x10 151187884)))
(assert (= 274184521717934524641157099916833587211 (x369 (x10 274184521717934524641157099916833587211))))
(assert (x482 x110))
(assert (x699 274184521717934524641157099916833587231))
(assert (x482 x494))
(assert (x482 x709))
(assert (x630 x107))
(assert (x630 x40))
(assert (= x157 (and x411 (not x129))))
(assert (x482 x459))
(assert (x482 x68))
(assert (= (x10 3833100637) (x185 3833100637)))
(assert (x482 x128))
(assert (x482 x435))
(assert (x482 x580))
(assert (x482 x542))
(assert (x482 x17))
(assert (x699 274184521717934524641157099916833587235))
(assert (x630 x456))
(assert (x682 x93))
(assert (x482 x437))
(assert (= (or (and x15 x327) (and x458 x462) (and x222 x465) (and x607 x667)) x579))
(assert (x482 x115))
(assert (= x674 true))
(assert (x482 x71))
(assert (= (x185 10141204801825835211973625643007) (x10 10141204801825835211973625643007)))
(assert (= x450 (=> (and (= x87 (x148 (+ x264 57896044618658097711785492504343953926634992332820282019728792003956564819968))) (= (x148 (+ 128 x238)) x356) (= x404 (or (> x444 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x444 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x444))))) (= x567 (x148 (+ x356 68))) (>= 18446744073709551615 x51) (>= x449 0) (= (x669 1461501637330902918203684832716283019655932542975 x223) x287) (= (x9 x52) x106) (= (x148 (+ x264 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x574) (= (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x264) true) (> 0 x264)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x264)) 1 0) x194) (>= x363 0) (= (ite (or (> x444 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x444 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x444))) 1 0) x293) (= (x669 20282409603651670423947251286015 x52) x168) (not (> x168 10141204801825835211973625643007)) (= x52 x92) (= x144 0) (= x619 (or (and (> 0 x264) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x264))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x264))) (> 20282409603651670423947251286016 x644) (= x441 (x669 20282409603651670423947251286015 x40)) (= x439 (x148 (+ x238 132))) (= (ite (or (and (= (<= x106 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x348 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x106 x348)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x106) (<= x348 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x245) (= (x669 115792089237316195423570985008687907853269984665640564039457584007913129639904 x464) x238) (= (= 274184521717934524641157099916833587231 x521) x333) (not (< x21 x568)) (= 0 x486) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x646)) (= (x500 128) x646) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x449 x363)) (= x79 (x601 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x444))) (= x144 (x669 x154 x16)) (= (ite (or (and (> x646 x574) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x574) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x646))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x574) (<= x646 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x220) (= x544 x40) (= (ite (not x619) 1 0) x154) (= (x148 (+ 36 x356)) x533) (= x514 0) (= x20 0) (= (x148 (+ x91 31)) x464) (= x452 (ite (or (and (< x79 x106) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x106) (<= x79 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x79 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x106))) 1 0)) (= (ite (or (and (<= x87 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x646 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x87 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x646 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x87 x646))) 1 0) x16) (= (ite (not x404) 1 0) x551) (< x363 20282409603651670423947251286016) (<= x449 18446744073709551615) (>= 20282409603651670423947251286015 x644) (= x444 (x601 (- x646 x264))) (= x21 (x148 (+ x106 x444))) (not (= 0 x329)) (= x514 (x669 x551 x452)) (= x613 (x601 (- x567 x356))) (< x51 18446744073709551616) (not (> x441 10141204801825835211973625643007)) (not (or (and (= true (<= x21 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x21)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21))) (not (or (and (= (<= x91 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x91 32)) (> x91 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x9 x40) x264) (= (x669 x293 x245) x20) (= x486 (x669 x194 x220)) (> 18446744073709551616 x449) (= (* x363 x449) x544) (>= 20282409603651670423947251286015 x363) (= (* x51 x644) x92) (>= x51 0) (= x348 (x601 (- x87 x646))) (>= x644 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x51 x644)) (= (x669 1461501637330902918203684832716283019655932542975 x275) x521)) (and (=> (and x333 (= x542 (x505 x182)) (not (> 826074471 x457)) (= x692 x207) (> x56 0) (= x162 (or (and (> 64 x612) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x612))) (> x612 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x326 x576) (< (+ x542 x207) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x542 x46) (= x142 76450787359836037641860180984291677749980919077056822294353438043884394381312) (>= 1461501637330902918203684832716283019655932542975 x326) (= x326 x287) (not (> 4 x422)) (= x372 (x601 (- x435 x292))) (= x422 x613) (= (x581 (x185 x326) (x10 1) 0) x182) (= 1 x94) (= (x169 (x185 274184521717934524641157099916833587231)) x56) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x435) (= (x601 (- x422 4)) x612) (= (> x292 x435) x431) (= x207 x292) (= x214 274184521717934524641157099916833587211) (= x457 2835717307) (= (x581 (x185 274184521717934524641157099916833587211) (x10 1) 0) x39) (<= 0 x542) (= (+ x46 x692) x540) (not (= 2514000705 x457)) (not (= 826074471 x457)) (<= 0 x435) (not (= 1889567281 x457)) (not x431) (not x162) (= (x581 (x185 x326) (x10 1) 0) x83) (= x344 274184521717934524641157099916833587211) (= x593 (x581 (x185 274184521717934524641157099916833587211) (x10 1) 0)) (= 68 x422) (= x435 (x534 x593)) (= x292 x568) (<= x542 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x618 32)) x525) (=> (not x333) x281)))))
(assert (= (and (not x240) x180) x108))
(assert (x323 x489 x28))
(assert (x630 x275))
(assert (x482 x475))
(assert (x482 x70))
(assert (x482 x87))
(assert (x482 x99))
(assert (x630 x604))
(assert (x482 x595))
(assert (x482 x142))
(assert (x630 1461501637330902918203684832716283019655932542975))
(assert (x482 x312))
(assert (x482 x489))
(assert (x482 x483))
(assert (x482 x120))
(assert (= 3795249780 (x369 (x10 3795249780))))
(assert (x482 x331))
(assert (x482 x118))
(assert (= 3638949393 (x369 (x10 3638949393))))
(assert (= 274184521717934524641157099916833587233 (x369 (x185 274184521717934524641157099916833587233))))
(assert (x482 x519))
(assert (x482 x300))
(assert (x482 x670))
(assert (x482 x3))
(assert (= (x369 (x10 274184521717934524641157099916833587244)) 274184521717934524641157099916833587244))
(assert (x482 x310))
(assert (= (x185 274184521717934524641157099916833587244) (x10 274184521717934524641157099916833587244)))
(assert (x699 x326))
(assert (= (x185 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x10 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x482 x550))
(assert (= (x185 98097205) (x10 98097205)))
(assert (x482 x161))
(assert (x482 x447))
(assert (x630 x36))
(assert (x630 x1))
(assert (x482 x119))
(assert (x482 x467))
(assert (= (x185 1099511627775) (x10 1099511627775)))
(assert (= (x369 (x10 18446744073709551615)) 18446744073709551615))
(assert (x482 x436))
(assert (x699 274184521717934524641157099916833587223))
(assert (x482 x122))
(assert (x482 x504))
(assert (x482 x412))
(assert (= 11269569 (x369 (x10 11269569))))
(assert (x482 x217))
(assert (x323 x504 x276))
(assert (x482 x106))
(assert (x510 x107 x181))
(assert (x482 x245))
(assert (x630 x531))
(assert (x524 x302 x387))
(assert (x630 x602))
(assert (x482 x538))
(assert (x482 x694))
(assert (x482 x269))
(assert (x482 x487))
(assert (x482 x302))
(assert (= 1099511627776 (x369 (x10 1099511627776))))
(assert (x482 x178))
(assert (x482 x396))
(assert (= x297 (=> (and (>= x399 0) (= (x169 (x185 274184521717934524641157099916833587211)) x259) (< x400 950698303) (< x400 480214969) (= x583 0) (>= x709 0) (<= 0 x43) (< x400 204737060) (= (x669 1461501637330902918203684832716283019655932542975 x275) x694) (<= x399 1461501637330902918203684832716283019655932542975) (= 151187884 x400) (= x418 (= 274184521717934524641157099916833587231 x694)) (= x709 x572) (not (= x400 98097205)) (= x173 x583) (not (= x400 11269569)) (not (= 70124239 x400)) (< 0 x259) (= x710 128) (= x572 x119) (>= 1461501637330902918203684832716283019655932542975 x709) (> 2068668150 x400) (>= 1461501637330902918203684832716283019655932542975 x43) (= x591 274184521717934524641157099916833587211) (= x446 x399)) (and (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x299) (not (> 4 x352)) (= x76 (x169 (x185 274184521717934524641157099916833587231))) (= (x581 (x185 274184521717934524641157099916833587211) (x10 1) 0) x311) (= 274184521717934524641157099916833587211 x170) (= x536 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x33) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x33)) (> 32 x33)))) (= x4 32) (= (x601 (- x352 4)) x33) (<= 0 x299) (= 36 x352) (not x536) (> x76 0) (= 36 x352) (= x374 1889567281) (not (= x374 826074471)) (= (x651 x311) x299) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x284) (= 1 x186) x418 (not (> 826074471 x374))) x553) (=> (not x418) x573)))))
(assert (= (x185 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x10 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x10 20282409603651670423947251286015) (x185 20282409603651670423947251286015)))
(assert (= (x369 (x10 274184521717934524641157099916833587233)) 274184521717934524641157099916833587233))
(assert (= 4033150093 (x369 (x10 4033150093))))
(assert (x482 x388))
(assert (x482 x280))
(assert (= (x369 (x10 20282409603651670423947251286015)) 20282409603651670423947251286015))
(assert (x699 274184521717934524641157099916833587211))
(assert (x630 x464))
(assert (x510 x551 x452))
(assert (= (x369 (x185 274184521717934524641157099916833587211)) 274184521717934524641157099916833587211))
(assert (x482 x666))
(assert (x482 x378))
(assert (x482 x234))
(assert (x482 x339))
(assert (x482 x602))
(assert (= (x10 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x185 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x482 x242))
(assert (x482 x576))
(assert (= (=> (= x462 (= x428 274184521717934524641157099916833587227)) (and (=> (not x462) x189) (=> (and (= x54 274184521717934524641157099916833587211) (not (> 4 x595)) (= x329 1) (= x364 (x581 (x185 274184521717934524641157099916833587211) (x10 1) 0)) x462 (= 36 x595) (not (= x313 826074471)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x594) (not x402) (= x425 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (x481 x364) x594) (= x91 32) (= x313 1889567281) (= 36 x595) (= (x601 (- x595 4)) x373) (= (x169 (x185 274184521717934524641157099916833587227)) x2) (> x2 0) (>= x594 0) (not (> 826074471 x313)) (= (or (and (> 32 x373) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x373))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x373)) x402)) x450))) x233))
(assert (x482 x223))
(assert (x630 x205))
(assert (x482 x133))
(assert (= (and x458 (not x462)) x465))
(assert (x323 x676 x455))
(assert (= 3695885053 (x369 (x10 3695885053))))
(assert (x482 x107))
(assert (x323 x629 x104))
(assert (x482 x419))
(assert (x482 x427))
(assert (x630 x52))
(assert (= (x185 274184521717934524641157099916833587235) (x10 274184521717934524641157099916833587235)))
(assert (x482 x305))
(assert (= (x185 3795249780) (x10 3795249780)))
(assert (= (=> (= (= 274184521717934524641157099916833587223 x428) x222) (and (=> (not x222) x675) (=> (and (= (x169 (x185 274184521717934524641157099916833587223)) x110) (= 36 x513) (= (x581 (x185 274184521717934524641157099916833587211) (x10 1) 0) x268) (= (or (and (> 32 x415) (= true (<= x415 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x415 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x328) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x354) (= x519 1889567281) (= x91 32) (= x415 (x601 (- x513 4))) (< 0 x110) (<= 0 x559) (= 1 x329) (= x494 274184521717934524641157099916833587211) (not (> 4 x513)) (= 36 x513) (not x328) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x559) (not (> 826074471 x519)) (not (= x519 826074471)) (= (x480 x268) x559) x222) x450))) x189))
(assert (= (x369 (x185 274184521717934524641157099916833587223)) 274184521717934524641157099916833587223))
(assert (= x675 (=> (= (= 274184521717934524641157099916833587244 x428) x667) (and (=> (not x667) x473) (=> (and (not (> 1889567281 x255)) (= x532 (or (> x339 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x339) (= (<= x339 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x489) true) (< 0 x489)) x317) (not (> 4 x365)) (= x365 36) (= (x169 (x185 274184521717934524641157099916833587244)) x60) (= 274184521717934524641157099916833587211 x294) (= x489 (x9 x93)) (= x255 1889567281) (= (x611 x146) x93) x667 (= x329 1) (<= 0 x93) (= x339 (x601 (- x365 4))) (or (and (= (or (> x489 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x489 0) (= true (<= x489 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x66) (>= x383 0) (= x661 (x669 20282409603651670423947251286015 x489)) (= x424 x149) (= (* x661 x383) x149) (> 18446744073709551616 x383) x317 (not x66) (>= 18446744073709551615 x383) (< (* x661 x383) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x353 x424)) (and (not x317) (= 0 x353))) (= x417 (x669 20282409603651670423947251286015 x353)) (= x41 50942633119752846454219349998365661925608737367104304655302372697894809501696) (> x60 0) (= 36 x365) (not x532) (>= 20282409603651670423947251286015 x93) (< x93 20282409603651670423947251286016) (> 3119561463 x255) (= 32 x91) (= x146 (x581 (x185 274184521717934524641157099916833587211) (x10 5) 0))) x450)))))
(assert (=> (<= x216 10000) (= (x10 x216) (x185 x216))))
(assert (x482 x659))
(assert (x482 x18))
(assert (= (x369 (x10 10141204801825835211973625643007)) 10141204801825835211973625643007))
(assert (x630 x461))
(assert (x482 x295))
(assert (x482 x685))
(assert (= (x10 4033150093) (x185 4033150093)))
(assert (x630 x629))
(assert (x482 x353))
(assert (= (x369 (x10 274184521717934524641157099916833587235)) 274184521717934524641157099916833587235))
(assert (x482 x354))
(assert (= (x185 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x10 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x482 x385))
(assert (x482 x660))
(assert (x510 x478 x430))
(assert (x482 x316))
(assert (x482 x205))
(assert (= (and (not x201) x157) x336))
(assert (x482 x221))
(assert (x482 x491))
(assert (x630 1099511627775))
(assert (x482 x567))
(assert (x482 x381))
(assert (x482 x533))
(assert (x630 x194))
(assert (x482 x583))
(assert (x630 x273))
(assert (x482 x691))
(assert (x630 x454))
(assert (= (x369 (x10 826074471)) 826074471))
(assert (x630 x469))
(assert (x482 x19))
(assert (x682 x167))
(assert (x482 x278))
(assert (= (x185 11269569) (x10 11269569)))
(assert (x323 x560 x539))
(assert (x482 x469))
(assert (x323 x634 x82))
(assert (x482 x244))
(assert (= (x10 18446744073709551616) (x185 18446744073709551616)))
(assert (= 1889567281 (x369 (x10 1889567281))))
(assert (= (x10 2835717307) (x185 2835717307)))
(assert (x323 x306 x592))
(assert (x482 x74))
(assert (x630 x489))
(assert (x482 x495))
(assert (= (x369 (x10 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x482 x594))
(assert (x482 x637))
(assert (x482 x464))
(assert (x482 x284))
(assert (x482 x21))
(assert (x482 x52))
(assert (= (x10 3638949393) (x185 3638949393)))
(assert (x482 x151))
(assert (x482 x79))
(assert (x524 x653 x12))
(assert (x482 x452))
(assert (x482 x77))
(assert (x482 x262))
(assert (x510 x324 x277))
(assert (= (x369 (x10 50942633119752846454219349998365661925608737367104304655302372697894809501696)) 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (= x429 (=> (= (= 274184521717934524641157099916833587244 x694) x371) (and (=> (and (= x689 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (< x163 4)) (= 1 x186) (not x671) (<= 0 x504) (= 36 x163) (= (x9 x504) x454) (= x163 36) (> 20282409603651670423947251286016 x504) (not (< x582 1889567281)) (= (x601 (- x163 4)) x27) (= 1889567281 x582) (> 3119561463 x582) (= (x669 20282409603651670423947251286015 x560) x269) (= x4 32) (>= 20282409603651670423947251286015 x504) (= x5 (x169 (x185 274184521717934524641157099916833587244))) (= x301 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x454)) (< 0 x454))) (= 274184521717934524641157099916833587211 x145) (or (and (not x301) (= 0 x560)) (and (= x522 (x669 20282409603651670423947251286015 x454)) (= x291 (* x383 x522)) (>= x383 0) (= (or (> x454 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x454 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x454 0))) x175) (<= x383 18446744073709551615) x301 (< (* x383 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 18446744073709551616 x383) (not x175) (= x560 x95) (= x95 x291))) (= (x581 (x185 274184521717934524641157099916833587211) (x10 5) 0) x89) (= x671 (or (and (< x27 32) (= (<= x27 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x27))) (= x504 (x611 x89)) (> x5 0) x371) x553) (=> (not x371) x674)))))
(assert (x482 x551))
(assert (x482 x282))
(assert (= (x185 274184521717934524641157099916833587223) (x10 274184521717934524641157099916833587223)))
(assert (x482 x523))
(assert (x482 x646))
(assert (x630 x154))
(assert (x524 x121 x397))
(assert (x482 x596))
(assert (x630 x666))
(assert (x482 x571))
(assert (= (x369 (x185 x326)) x326))
(assert (x510 x194 x220))
(assert (x482 x40))
(assert (= (x185 274184521717934524641157099916833587233) (x10 274184521717934524641157099916833587233)))
(assert (= (x10 1889567281) (x185 1889567281)))
(assert (x482 x298))
(assert (x482 x313))
(assert (x482 x329))
(assert (x482 x444))
(assert (x482 x653))
(assert (x482 x568))
(assert (= (x369 (x10 151187884)) 151187884))
(assert (x482 x486))
(assert (x323 x52 x704))
(assert (= (x369 (x10 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= (x185 1461501637330902918203684832716283019655932542975) (x10 1461501637330902918203684832716283019655932542975)))
(assert (x510 x293 x245))
(assert (x482 x289))
(assert (= (x185 3889878717) (x10 3889878717)))
(assert (x482 x62))
(assert (x482 x507))
(assert (x482 x274))
(assert (= x566 x668))
(assert (x482 x629))
(assert (x482 x400))
(assert (x482 x277))
(assert (x482 x628))
(assert (x630 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x482 x94))
(assert (x630 18446744073709551615))
(assert (x482 x356))
(assert (x482 x365))
(assert (= x570 (=> (= x201 (= 274184521717934524641157099916833587223 x521)) (and (=> (and (<= x216 1461501637330902918203684832716283019655932542975) (= x305 (x601 (- x615 x690))) (= x613 x427) (not (> 826074471 x561)) (= x625 (x581 (x185 x216) (x10 1) 0)) (= (x581 (x185 274184521717934524641157099916833587211) (x10 1) 0) x206) (= 2835717307 x561) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x688) (not (= 1889567281 x561)) (= x216 x577) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x248 x688)) (= (+ x65 x569) x707) (= x34 (x169 (x185 274184521717934524641157099916833587223))) (= (x581 (x185 274184521717934524641157099916833587211) (x10 1) 0) x159) (= 32 x618) (= 68 x427) (not x158) (= 274184521717934524641157099916833587211 x55) (= (x601 (- x427 4)) x244) (= x615 (x480 x206)) (= x134 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not x516) (not (= x561 826074471)) (= x65 x248) (= x688 (x334 x625)) (= (< x615 x690) x158) (= 274184521717934524641157099916833587211 x495) (= x690 x568) (= (or (> x244 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x244 64) (= true (<= x244 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x516) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615) (>= x688 0) (= x690 x248) (= x512 (x581 (x185 x216) (x10 1) 0)) (= x688 x569) (= x216 x287) (not (= x561 2514000705)) (= x94 1) (not (< x427 4)) (> x34 0) (>= x615 0) x201) x525) (=> (not x201) x386)))))
(assert (x482 x127))
(assert (x482 x613))
(assert (= x622 (=> (= x240 (= x694 274184521717934524641157099916833587223)) (and (=> (and (not (> 826074471 x77)) (= 36 x691) (= 1889567281 x77) (= (x362 x367) x75) (= x271 (x169 (x185 274184521717934524641157099916833587223))) (> x271 0) x240 (= x367 (x581 (x185 274184521717934524641157099916833587211) (x10 1) 0)) (>= x75 0) (= x303 (or (and (= (<= x677 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x677)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x677))) (= x186 1) (= (x601 (- x691 4)) x677) (= 36 x691) (<= x75 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 826074471 x77)) (not x303) (= x4 32) (= x111 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= 274184521717934524641157099916833587211 x517) (not (< x691 4))) x553) (=> (not x240) x429)))))
(assert (x482 x224))
(assert (x482 x254))
(assert (= (x369 (x10 2835717307)) 2835717307))
(assert (x482 x109))
(assert (x482 x214))
(assert (x482 x163))
(assert (= (x185 2514000705) (x10 2514000705)))
(assert (x482 x556))
(assert (x482 x549))
(assert (x482 x111))
(assert (x482 x202))
(assert (x482 x32))
(assert (= (x185 20282409603651670423947251286016) (x10 20282409603651670423947251286016)))
(assert (x597 x223 x88))
(assert (x482 x461))
(assert (x482 x168))
(assert (= (and x668 (not x418)) x257))
(assert (x482 x677))
(assert (= (x369 (x10 3889878717)) 3889878717))
(assert (x482 x639))
(assert (x482 x137))
(assert (x482 x561))
(assert (x524 x253 x347))
(assert (x482 x293))
(assert (x630 x634))
(assert (= x603 (=> (and (= x327 (= 274184521717934524641157099916833587231 x428)) (not (> 2068668150 x388)) (not (= x388 3795249780)) (= x262 x384) (not (< x388 3638949393)) (= x388 3833100637) (= x13 128) (< 0 x409) (<= x262 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x376) (<= x223 1461501637330902918203684832716283019655932542975) (not (= 3638949393 x388)) (= x262 x446) (= (x669 1461501637330902918203684832716283019655932542975 x275) x428) (<= 0 x262) (= x381 274184521717934524641157099916833587211) (= x119 x616) (= x568 x541) (= x322 0) (>= x31 0) (not (= 3695885053 x388)) (>= 1461501637330902918203684832716283019655932542975 x31) (= x322 x173) (= x223 x310) (= x616 x376) (= x409 (x169 (x185 274184521717934524641157099916833587211))) (< x388 3889878717) (= (x669 1461501637330902918203684832716283019655932542975 x538) x384) (not (< x388 3253611544)) (>= x376 0)) (and (=> (and (not (> 826074471 x30)) (= x319 36) (= 274184521717934524641157099916833587211 x298) (= (or (and (< x213 32) (= (<= x213 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x213 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x445) x327 (< 0 x289) (= x329 1) (= 36 x319) (not (= 826074471 x30)) (= x338 (x581 (x185 274184521717934524641157099916833587211) (x10 1) 0)) (<= x341 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x601 (- x319 4)) x213) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x685) (not (> 4 x319)) (not x445) (= 32 x91) (= 1889567281 x30) (= x289 (x169 (x185 274184521717934524641157099916833587231))) (= (x534 x338) x341) (<= 0 x341)) x450) (=> (not x327) x233)))))
(assert (x482 x376))
(assert (x482 x13))
(assert (x482 x574))
(assert (x501 x464 x641 x423 x350))
(assert (x510 x154 x16))
(assert (x482 x477))
(assert (x482 x306))
(assert (x524 x29 x261))
(assert (= (and (not x520) x257) x180))
(assert (x482 x181))
(assert (x482 x582))
(assert (x482 x390))
(assert (x482 x374))
(assert (x482 x414))
(assert (x630 x676))
(assert (= (x185 2068668150) (x10 2068668150)))
(assert (x482 x530))
(assert (= x553 (=> (and (= (x601 (- x224 x345)) x507) (>= x363 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x644 x151)) (not (or (> x4 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4) true) (> 32 x4)))) (= x483 0) (> 20282409603651670423947251286016 x644) (= 0 x378) (<= 0 x151) (= (x601 (- x345 x99)) x528) (= (x9 x167) x99) (= (x669 20282409603651670423947251286015 x167) x73) (= x53 (x9 x634)) (>= 18446744073709551615 x151) (= (* x151 x644) x26) (= x181 (ite (or (and (> x507 x53) (= (<= x507 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x53))) (and (> x53 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x507 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= x128 (x148 (+ x53 x528))) (not (= x186 0)) (= (ite (not x623) 1 0) x531) (= x26 x634) (<= x242 18446744073709551615) (= (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x345) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x118)) (and (> x345 x118) (= (<= x118 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x345)))) 1 0) x277) (< x363 20282409603651670423947251286016) (= x483 (x669 x107 x181)) (not (> x71 10141204801825835211973625643007)) (= x177 (* x242 x363)) (not (> x73 10141204801825835211973625643007)) (= x101 (x601 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x528))) (< x151 18446744073709551616) (= x430 (ite (or (and (<= x53 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x101 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x53) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x101)) (< x101 x53))) 1 0)) (= (x669 x531 x230) x133) (<= 0 x242) (>= 20282409603651670423947251286015 x363) (= x623 (or (and (> 0 x99) (= true (<= x99 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x99))) (> 18446744073709551616 x242) (= x652 x128) (= (x148 (+ 57896044618658097711785492504343953926634992332820282019728792003956564819967 x99)) x118) (<= x644 20282409603651670423947251286015) (= x324 (ite (or (and (> 0 x99) (= (<= x99 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x99)) 1 0)) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x345)) (= x167 x177) (= (or (> x528 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x528) true) (> 0 x528))) x642) (= 0 x133) (= (x669 x324 x277) x378) (>= x644 0) (= (ite (or (and (<= x224 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x345 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x345 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x224)) (> x224 x345))) 1 0) x230) (= x300 (x669 x478 x430)) (= (ite (or (> x528 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x528)) (> 0 x528))) 1 0) x107) (= (x669 20282409603651670423947251286015 x634) x71) (= 0 x300) (= (x643 128) x345) (= (ite (not x642) 1 0) x478) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x363 x242)) (= (x148 (+ x99 57896044618658097711785492504343953926634992332820282019728792003956564819968)) x224)) x290)))
(assert (x482 x697))
(assert (x630 x436))
(assert (= (or (and x411 x129) (and x579 x333) (and x157 x201)) x566))
(assert (x482 x372))
(assert (= x473 true))
(assert (x482 x572))
(assert (= x290 (=> (and (= x660 x652) (= 0 x17) (= x279 (and (<= 0 x471) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x471) true))) (= x660 x471)) x279)))
(assert (= x573 (=> (= x520 (= 274184521717934524641157099916833587227 x694)) (and (=> (and (= x280 36) (= (x169 (x185 274184521717934524641157099916833587227)) x183) (> x183 0) (not x377) (not (= x665 826074471)) (= (x581 (x185 274184521717934524641157099916833587211) (x10 1) 0) x488) (= x186 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x498) (not (< x280 4)) (= (x590 x488) x498) (<= 0 x498) (= 32 x4) (= x377 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x202) true) (< x202 32)) (> x202 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< x665 826074471)) (= x202 (x601 (- x280 4))) (= x672 274184521717934524641157099916833587211) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x474) x520 (= 36 x280) (= x665 1889567281)) x553) (=> (not x520) x622)))))
(assert (= (x185 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x10 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (<= x35 10000) (= (x185 x35) (x10 x35))))
(assert (x482 x105))
(assert (= 20282409603651670423947251286016 (x369 (x10 20282409603651670423947251286016))))
(assert (x482 x33))
(assert (x482 x474))
(assert (= 98097205 (x369 (x10 98097205))))
(assert (x482 x265))
(assert (= (x10 70124239) (x185 70124239)))
(assert (x482 x288))
(assert (x699 274184521717934524641157099916833587227))
(assert (x482 x100))
(assert (x482 x292))
(assert (x630 x538))
(assert (= x216 (x369 (x185 x216))))
(assert (x699 274184521717934524641157099916833587244))
(assert (x597 x275 x283))
(assert (x482 x1))
(assert (x482 x227))
(assert (= 3119561463 (x369 (x10 3119561463))))
(assert (x482 x557))
(assert (= (x185 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x10 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x482 x345))
(assert (= (x10 1208925819614629174706175) (x185 1208925819614629174706175)))
(assert (x482 x702))
(assert (= x11 x476))
(assert (x482 x399))
(assert (x630 x220))
(assert (= (x369 (x10 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x482 x324))
(assert (= (x369 (x10 274184521717934524641157099916833587227)) 274184521717934524641157099916833587227))
(assert (x482 x352))
(assert (x482 x41))
(assert (x482 x415))
(assert (x482 x457))
(assert (x524 x604 x432))
(assert (= x191 (and x108 (not x371))))
(assert (x482 x665))
(assert (x482 x226))
(assert (x482 x587))
(assert (x482 x471))
(assert (= 70124239 (x369 (x10 70124239))))
(assert (x482 x655))
(assert (x482 x559))
(assert (x482 x153))
(assert (x482 x35))
(assert (x482 x408))
(assert (x482 x531))
(assert (x482 x528))
(assert (x482 x266))
(assert (x630 x245))
(assert (= (x185 204737060) (x10 204737060)))
(assert (x482 x645))
(assert (x630 x302))
(assert (= 2514000705 (x369 (x10 2514000705))))
(assert (x482 x554))
(assert (x482 x521))
(assert (x482 x644))
(assert (x482 x403))
(assert (x510 x205 x666))
(assert (x482 x446))
(assert (x482 x51))
(assert (x482 x484))
(assert (x482 x195))
(assert (x482 x56))
(assert (x482 x186))
(assert (= (x185 274184521717934524641157099916833587227) (x10 274184521717934524641157099916833587227)))
(assert (= (x369 (x10 3253611544)) 3253611544))
(assert (x482 x238))
(assert (x482 x463))
(check-sat)
