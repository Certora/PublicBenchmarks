(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x1401 0)) (((x1727 (x190 x1401) (x2012 x1401) (x2264 Int)) (x1245 (x337 x1401) (x939 Int)) (x331 (x2324 Int)))))
(declare-fun x1100 () Int)
(declare-fun x1705 () Int)
(declare-fun x1856 () x1401)
(declare-fun x736 (Int) Int)
(declare-fun x1196 () x1401)
(declare-fun x1344 () Bool)
(declare-fun x1242 () Int)
(declare-fun x2360 () Bool)
(declare-fun x1084 () Int)
(declare-fun x1249 (Int) Int)
(declare-fun x2327 () x1401)
(declare-fun x1889 () Bool)
(declare-fun x1931 () Int)
(declare-fun x2061 () Int)
(declare-fun x405 () Int)
(declare-fun x1938 () Int)
(declare-fun x686 () Int)
(declare-fun x1248 () Int)
(declare-fun x67 () Int)
(declare-fun x1722 () Int)
(declare-fun x1681 () x1401)
(declare-fun x1383 () Bool)
(declare-fun x1652 () Int)
(declare-fun x1665 () Int)
(declare-fun x647 () Bool)
(declare-fun x2108 () Bool)
(declare-fun x1412 () Int)
(declare-fun x1606 () Bool)
(declare-fun x2258 () x1401)
(declare-fun x315 () Bool)
(declare-fun x1916 () Int)
(declare-fun x1693 () Int)
(declare-fun x249 () Int)
(declare-fun x2027 () Bool)
(declare-fun x822 () Bool)
(declare-fun x2271 () Int)
(declare-fun x2336 () Int)
(declare-fun x1955 () Bool)
(declare-fun x584 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x2267 () Bool)
(declare-fun x1706 () Bool)
(declare-fun x1777 () Int)
(declare-fun x1033 () Int)
(declare-fun x1723 () Bool)
(declare-fun x42 () Bool)
(declare-fun x586 () Int)
(declare-fun x1262 (Int) Int)
(declare-fun x1767 () x1401)
(declare-fun x1330 () x1401)
(declare-fun x404 () Int)
(declare-fun x2091 () Int)
(declare-fun x1150 () Int)
(declare-fun x1515 () Int)
(declare-fun x1920 () Int)
(declare-fun x746 () x1401)
(declare-fun x1668 () Bool)
(declare-fun x8 () Int)
(declare-fun x857 () Int)
(declare-fun x920 () Int)
(declare-fun x81 () Int)
(declare-fun x2020 () Bool)
(declare-fun x133 () Int)
(declare-fun x171 () Int)
(declare-fun x1994 () Int)
(declare-fun x1505 (Int) Int)
(declare-fun x1997 () Bool)
(declare-fun x785 () Int)
(declare-fun x1042 () Int)
(declare-fun x2015 () Int)
(declare-fun x1551 () Bool)
(declare-fun x224 () Bool)
(declare-fun x177 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x935 () Int)
(declare-fun x1851 () Bool)
(declare-fun x1234 () Int)
(declare-fun x1939 () Bool)
(declare-fun x869 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x951 () Int)
(declare-fun x1025 () Int)
(declare-fun x478 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x10 () x1401)
(declare-fun x2080 () Int)
(declare-fun x1429 () Int)
(declare-fun x1317 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x202 () Bool)
(declare-fun x1390 () Int)
(declare-fun x930 () Int)
(declare-fun x987 () Int)
(declare-fun x1703 () Int)
(declare-fun x1454 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x1732 () Int)
(declare-fun x671 () Int)
(declare-fun x1725 () Int)
(declare-fun x253 () Bool)
(declare-fun x2163 () Bool)
(declare-fun x199 () x1401)
(declare-fun x301 () Int)
(declare-fun x2179 () Int)
(declare-fun x60 () Bool)
(declare-fun x2042 () x1401)
(declare-fun x1644 () Bool)
(declare-fun x78 () Int)
(declare-fun x741 (Int) Int)
(declare-fun x1252 () Bool)
(declare-fun x1353 () Int)
(declare-fun x275 () x1401)
(declare-fun x290 () x1401)
(declare-fun x1697 () Int)
(declare-fun x1148 () Int)
(declare-fun x1992 () Bool)
(declare-fun x328 () Int)
(declare-fun x1804 () Bool)
(declare-fun x17 () Int)
(declare-fun x2055 () Int)
(declare-fun x1894 () Bool)
(declare-fun x1757 () Bool)
(declare-fun x1422 () Int)
(declare-fun x2010 () Bool)
(declare-fun x2184 () Int)
(declare-fun x2188 () x1401)
(declare-fun x1700 () x1401)
(declare-fun x823 () Int)
(declare-fun x2087 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x904 () Int)
(declare-fun x1427 () Int)
(declare-fun x767 () x1401)
(declare-fun x416 () Bool)
(declare-fun x469 () x1401)
(declare-fun x178 () Int)
(declare-fun x2081 () Int)
(declare-fun x483 () Bool)
(declare-fun x623 () Int)
(declare-fun x688 () x1401)
(declare-fun x2052 () Bool)
(declare-fun x1861 () Int)
(declare-fun x271 () Bool)
(declare-fun x1729 () Int)
(declare-fun x2148 () Bool)
(declare-fun x95 () x1401)
(declare-fun x833 () Int)
(declare-fun x1220 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x515 () Bool)
(declare-fun x35 () Int)
(declare-fun x2147 () Bool)
(declare-fun x2229 () Int)
(declare-fun x1438 () Int)
(declare-fun x1308 () Int)
(declare-fun x1896 () x1401)
(declare-fun x1544 () x1401)
(declare-fun x1718 (x1401) Int)
(declare-fun x614 () Int)
(declare-fun x11 () Int)
(declare-fun x332 () Int)
(declare-fun x649 () Bool)
(declare-fun x1882 () x1401)
(declare-fun x662 () Bool)
(declare-fun x763 () Int)
(declare-fun x1345 () Int)
(declare-fun x1659 () Bool)
(declare-fun x1162 () Int)
(declare-fun x398 (Int) Int)
(declare-fun x1687 () Int)
(declare-fun x1867 () Bool)
(declare-fun x1630 () Int)
(declare-fun x928 () Int)
(declare-fun x1858 () Int)
(declare-fun x1582 () Int)
(declare-fun x1188 () Bool)
(declare-fun x1296 () Int)
(declare-fun x1893 () Int)
(declare-fun x488 () Int)
(declare-fun x1205 () Bool)
(declare-fun x122 () Bool)
(declare-fun x1044 () Int)
(declare-fun x1264 () Bool)
(declare-fun x1801 () Bool)
(declare-fun x179 () x1401)
(declare-fun x1380 () x1401)
(declare-fun x138 () Int)
(declare-fun x1432 () Int)
(declare-fun x1884 () Int)
(declare-fun x1945 () Bool)
(declare-fun x1934 () Int)
(declare-fun x1419 () Int)
(declare-fun x958 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x1738 () Int)
(declare-fun x415 () x1401)
(declare-fun x941 () Bool)
(declare-fun x2323 () Bool)
(declare-fun x556 () Int)
(declare-fun x446 () Int)
(declare-fun x1372 () Int)
(declare-fun x949 () Int)
(declare-fun x2196 () Bool)
(declare-fun x377 () Bool)
(declare-fun x1325 () Bool)
(declare-fun x1498 () Int)
(declare-fun x1755 () Bool)
(declare-fun x447 () Bool)
(declare-fun x2016 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x1825 () x1401)
(declare-fun x2237 () Int)
(declare-fun x536 () Int)
(declare-fun x33 () Bool)
(declare-fun x368 () Int)
(declare-fun x1083 () Int)
(declare-fun x1654 () x1401)
(declare-fun x1600 () Bool)
(declare-fun x725 () Bool)
(declare-fun x58 () Int)
(declare-fun x1618 () Bool)
(declare-fun x304 () Int)
(declare-fun x1199 () Bool)
(declare-fun x1323 (x1401) Int)
(declare-fun x2160 () Bool)
(declare-fun x2304 () Bool)
(declare-fun x960 () x1401)
(declare-fun x521 () x1401)
(declare-fun x604 () Int)
(declare-fun x197 () Int)
(declare-fun x1807 () Bool)
(declare-fun x126 () Int)
(declare-fun x2155 () Int)
(declare-fun x1824 () Int)
(declare-fun x250 () Int)
(declare-fun x2303 () Int)
(declare-fun x1491 () Int)
(declare-fun x1662 () Int)
(declare-fun x1450 () Bool)
(declare-fun x1832 () Int)
(declare-fun x1638 (Int) Int)
(declare-fun x1364 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x312 () Int)
(declare-fun x1211 () Int)
(declare-fun x317 () Int)
(declare-fun x761 () Int)
(declare-fun x75 () Bool)
(declare-fun x2019 () x1401)
(declare-fun x1645 () Int)
(declare-fun x796 () Int)
(declare-fun x961 () Int)
(declare-fun x628 () Int)
(declare-fun x350 () x1401)
(declare-fun x1009 () Bool)
(declare-fun x2173 () Int)
(declare-fun x2341 () Int)
(declare-fun x1720 () Int)
(declare-fun x877 () Int)
(declare-fun x2084 () Int)
(declare-fun x1065 () Int)
(declare-fun x2001 () Int)
(declare-fun x1610 () Int)
(declare-fun x527 () Bool)
(declare-fun x335 () Int)
(declare-fun x1354 () Int)
(declare-fun x1835 () Bool)
(declare-fun x410 () Int)
(declare-fun x2288 () Int)
(declare-fun x354 () Bool)
(declare-fun x2013 () Int)
(declare-fun x1692 () x1401)
(declare-fun x2090 (Int) Int)
(declare-fun x553 () Int)
(declare-fun x971 () Int)
(declare-fun x459 () Int)
(declare-fun x1564 () Int)
(declare-fun x255 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x762 () Bool)
(declare-fun x120 () x1401)
(declare-fun x1385 () Int)
(declare-fun x1698 () Int)
(declare-fun x1946 () Int)
(declare-fun x444 () Bool)
(declare-fun x811 () Bool)
(declare-fun x897 () x1401)
(declare-fun x47 () Int)
(declare-fun x1466 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x1306 () Int)
(declare-fun x548 (Int) Int)
(declare-fun x1940 () Int)
(declare-fun x1303 () Int)
(declare-fun x1918 () Int)
(declare-fun x1223 () Int)
(declare-fun x445 () Int)
(declare-fun x2106 () Int)
(declare-fun x1152 (x1401) Int)
(declare-fun x1548 () Int)
(declare-fun x1979 () Int)
(declare-fun x1360 () Int)
(declare-fun x2127 () Int)
(declare-fun x1395 () Bool)
(declare-fun x2180 () Int)
(declare-fun x988 () x1401)
(declare-fun x2290 () Bool)
(declare-fun x1228 (Int) Int)
(declare-fun x927 () Bool)
(declare-fun x819 () Int)
(declare-fun x2017 (Int) Int)
(declare-fun x1635 () Bool)
(declare-fun x940 () Bool)
(declare-fun x2217 () x1401)
(declare-fun x754 () Bool)
(declare-fun x1753 () Int)
(declare-fun x391 () x1401)
(declare-fun x2226 () x1401)
(declare-fun x2254 () x1401)
(declare-fun x1218 () x1401)
(declare-fun x834 () Int)
(declare-fun x803 () Bool)
(declare-fun x1135 () Int)
(declare-fun x1710 () x1401)
(declare-fun x1179 () Int)
(declare-fun x501 () Bool)
(declare-fun x921 () x1401)
(declare-fun x62 () Int)
(declare-fun x1149 () Int)
(declare-fun x1545 () Int)
(declare-fun x153 () Bool)
(declare-fun x963 () Int)
(declare-fun x1628 () Int)
(declare-fun x2166 () Int)
(declare-fun x1341 () Int)
(declare-fun x289 () Int)
(declare-fun x2128 () Bool)
(declare-fun x2215 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x2089 () Int)
(declare-fun x1090 () Int)
(declare-fun x1031 () Int)
(declare-fun x764 () x1401)
(declare-fun x1885 () x1401)
(declare-fun x310 () Bool)
(declare-fun x734 () Int)
(declare-fun x2247 () Bool)
(declare-fun x771 () Int)
(declare-fun x1761 () x1401)
(declare-fun x1552 () Bool)
(declare-fun x130 () x1401)
(declare-fun x2034 (Int) Int)
(declare-fun x229 () Int)
(declare-fun x20 () Int)
(declare-fun x2352 () Int)
(declare-fun x355 (x1401) Int)
(declare-fun x2191 () Int)
(declare-fun x724 () Int)
(declare-fun x1166 () Bool)
(declare-fun x1300 () Int)
(declare-fun x1991 () Bool)
(declare-fun x373 () Bool)
(declare-fun x160 () Int)
(declare-fun x1104 () Int)
(declare-fun x1558 () Int)
(declare-fun x579 () Int)
(declare-fun x2115 () Bool)
(declare-fun x2156 () Int)
(declare-fun x1301 (x1401) Int)
(declare-fun x1024 () x1401)
(declare-fun x1411 (Int) Int)
(declare-fun x1673 () Bool)
(declare-fun x539 () x1401)
(declare-fun x287 () Bool)
(declare-fun x1846 () x1401)
(declare-fun x1604 () Int)
(declare-fun x1460 () Bool)
(declare-fun x798 () Int)
(declare-fun x1316 () Bool)
(declare-fun x997 () Bool)
(declare-fun x1271 () Int)
(declare-fun x1297 () Int)
(declare-fun x1526 () Int)
(declare-fun x1153 () Int)
(declare-fun x321 () x1401)
(declare-fun x1321 () Int)
(declare-fun x569 () Int)
(declare-fun x2250 () Int)
(declare-fun x2024 () Int)
(declare-fun x917 () Int)
(declare-fun x493 () Bool)
(declare-fun x1844 () Bool)
(declare-fun x1788 () Int)
(declare-fun x2253 () Int)
(declare-fun x2246 () Int)
(declare-fun x2347 () Bool)
(declare-fun x505 () Int)
(declare-fun x558 () Int)
(declare-fun x1570 () x1401)
(declare-fun x846 (Int) Int)
(declare-fun x2045 () Int)
(declare-fun x770 () Int)
(declare-fun x14 () Int)
(declare-fun x1476 () Bool)
(declare-fun x2321 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x2112 () Int)
(declare-fun x1081 () Bool)
(declare-fun x1822 () Int)
(declare-fun x1273 () Bool)
(declare-fun x638 (x1401) Int)
(declare-fun x1114 () Int)
(declare-fun x252 () Bool)
(declare-fun x1926 (Int) Int)
(declare-fun x132 () Int)
(declare-fun x1838 () Int)
(declare-fun x1634 () Bool)
(declare-fun x1554 () Int)
(declare-fun x97 () Int)
(declare-fun x441 () x1401)
(declare-fun x710 (Int) Int)
(declare-fun x427 () Int)
(declare-fun x2241 () Int)
(declare-fun x2272 () Int)
(declare-fun x1701 () x1401)
(declare-fun x701 () Bool)
(declare-fun x2314 () x1401)
(declare-fun x948 () Int)
(declare-fun x2270 () Int)
(declare-fun x2021 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x407 () Bool)
(declare-fun x411 () Bool)
(declare-fun x196 () Bool)
(declare-fun x341 () Int)
(declare-fun x1366 () Bool)
(declare-fun x2094 () x1401)
(declare-fun x2060 () x1401)
(declare-fun x1446 () Bool)
(declare-fun x861 () Bool)
(declare-fun x3 () Int)
(declare-fun x1976 () Int)
(declare-fun x201 () Int)
(declare-fun x1311 () Bool)
(declare-fun x1816 (Int) Int)
(declare-fun x797 () Int)
(declare-fun x508 () x1401)
(declare-fun x1141 () Bool)
(declare-fun x627 () Bool)
(declare-fun x867 () Bool)
(declare-fun x2348 () Int)
(declare-fun x547 () Int)
(declare-fun x1655 () Bool)
(declare-fun x1122 () Int)
(declare-fun x114 () Bool)
(declare-fun x2033 () Int)
(declare-fun x1987 () Int)
(declare-fun x1752 () Int)
(declare-fun x330 () Bool)
(declare-fun x1583 () Int)
(declare-fun x2309 (Int Int) Int)
(declare-fun x392 () Int)
(declare-fun x257 () Bool)
(declare-fun x385 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x463 () Int)
(declare-fun x1501 () Int)
(declare-fun x2189 () Bool)
(declare-fun x48 () Int)
(declare-fun x942 () Int)
(declare-fun x70 () Bool)
(declare-fun x925 () Int)
(declare-fun x644 () Bool)
(declare-fun x2076 () Int)
(declare-fun x1812 () Int)
(declare-fun x622 () Int)
(declare-fun x434 () Int)
(declare-fun x295 () x1401)
(declare-fun x1403 () Bool)
(declare-fun x598 () Int)
(declare-fun x908 () Int)
(declare-fun x1901 () Bool)
(declare-fun x937 () Bool)
(declare-fun x1833 () Bool)
(declare-fun x1682 () Bool)
(declare-fun x1173 () Int)
(declare-fun x1170 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x585 () Int)
(declare-fun x1650 () Int)
(declare-fun x1737 () Int)
(declare-fun x1415 () Int)
(declare-fun x1813 () x1401)
(declare-fun x1565 () Int)
(declare-fun x347 () x1401)
(declare-fun x1711 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x1191 (Int) Int)
(declare-fun x2224 () Int)
(declare-fun x845 () Bool)
(declare-fun x192 () Bool)
(declare-fun x2073 () Bool)
(declare-fun x1908 () Bool)
(declare-fun x1538 () x1401)
(declare-fun x1113 () Int)
(declare-fun x2276 () Int)
(declare-fun x1891 (Int) Int)
(declare-fun x1533 () Int)
(declare-fun x566 () Bool)
(declare-fun x667 () Int)
(declare-fun x453 () Bool)
(declare-fun x470 () Bool)
(declare-fun x1664 () x1401)
(declare-fun x2037 () Int)
(declare-fun x696 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x402 () Int)
(declare-fun x452 () Bool)
(declare-fun x2014 () Int)
(declare-fun x1097 () Bool)
(declare-fun x1256 () Int)
(declare-fun x752 () Int)
(declare-fun x327 () Int)
(declare-fun x685 () Int)
(declare-fun x86 () Int)
(declare-fun x2260 () Int)
(declare-fun x1529 () Int)
(declare-fun x1274 () Int)
(declare-fun x1749 () Int)
(declare-fun x491 () Int)
(declare-fun x482 () Bool)
(declare-fun x1773 () Int)
(declare-fun x1530 () Int)
(declare-fun x236 () x1401)
(declare-fun x1054 () Bool)
(declare-fun x1663 () Int)
(declare-fun x1909 () x1401)
(declare-fun x2157 () Int)
(declare-fun x2131 () x1401)
(declare-fun x1416 () Int)
(declare-fun x30 () x1401)
(declare-fun x311 () Int)
(declare-fun x53 () Int)
(declare-fun x703 () Int)
(declare-fun x1762 () Bool)
(declare-fun x1556 () Int)
(declare-fun x157 () Bool)
(declare-fun x574 () Int)
(declare-fun x1324 () Bool)
(declare-fun x84 () Int)
(declare-fun x128 () Int)
(declare-fun x1743 () Int)
(declare-fun x2302 () Int)
(declare-fun x788 () Bool)
(declare-fun x2008 () Int)
(declare-fun x533 () x1401)
(declare-fun x390 () Bool)
(declare-fun x2263 () Int)
(declare-fun x1190 () Int)
(declare-fun x2356 (Int) Int)
(declare-fun x1294 () Int)
(declare-fun x1958 () Bool)
(declare-fun x1142 () x1401)
(declare-fun x1941 () x1401)
(declare-fun x2123 () Int)
(declare-fun x174 () x1401)
(declare-fun x34 () Bool)
(declare-fun x1671 () Int)
(declare-fun x1581 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x981 () Bool)
(declare-fun x883 () Bool)
(declare-fun x889 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x1922 () Int)
(declare-fun x1053 (Int) Int)
(declare-fun x1637 () x1401)
(declare-fun x565 () Bool)
(declare-fun x1678 () Int)
(declare-fun x1003 () Bool)
(declare-fun x1887 () Int)
(declare-fun x387 () Int)
(declare-fun x893 () Int)
(declare-fun x522 () x1401)
(declare-fun x1356 () Int)
(declare-fun x278 () Int)
(declare-fun x651 () Int)
(declare-fun x692 () Int)
(declare-fun x815 () Int)
(declare-fun x2177 () x1401)
(declare-fun x1157 () Bool)
(declare-fun x2125 () Int)
(declare-fun x431 () Int)
(declare-fun x2026 () Bool)
(declare-fun x535 () Int)
(declare-fun x1250 () Int)
(declare-fun x1184 () Int)
(declare-fun x1075 () Bool)
(declare-fun x15 () x1401)
(declare-fun x233 () Int)
(declare-fun x340 () Bool)
(declare-fun x262 () Int)
(declare-fun x1167 () Bool)
(declare-fun x2219 () x1401)
(declare-fun x1599 () Bool)
(declare-fun x1647 () x1401)
(declare-fun x1760 () Int)
(declare-fun x36 () Bool)
(declare-fun x2232 () Int)
(declare-fun x1409 () x1401)
(declare-fun x2134 () Int)
(declare-fun x1506 () Bool)
(declare-fun x866 () Bool)
(declare-fun x1333 () Int)
(declare-fun x2138 () Int)
(declare-fun x1037 () Int)
(declare-fun x1094 () Int)
(declare-fun x151 () Int)
(declare-fun x117 () Int)
(declare-fun x748 () Bool)
(declare-fun x1197 () Int)
(declare-fun x1070 () Bool)
(declare-fun x241 () Int)
(declare-fun x1953 () x1401)
(declare-fun x1642 () Int)
(declare-fun x2009 (Int) Int)
(declare-fun x344 () Bool)
(declare-fun x2063 () Int)
(declare-fun x169 () Bool)
(declare-fun x2218 () Int)
(declare-fun x496 () Int)
(declare-fun x749 () Bool)
(declare-fun x2083 () Int)
(declare-fun x1593 () x1401)
(declare-fun x962 () Int)
(declare-fun x643 () Bool)
(declare-fun x1929 () Bool)
(declare-fun x630 () Int)
(declare-fun x1623 () Int)
(declare-fun x1477 () x1401)
(declare-fun x1121 () Int)
(declare-fun x1328 () Bool)
(declare-fun x1363 () x1401)
(declare-fun x1214 () Int)
(declare-fun x2192 () Int)
(declare-fun x2040 () Bool)
(declare-fun x322 (Int) Int)
(declare-fun x1566 () Int)
(declare-fun x2266 () Int)
(declare-fun x28 () Int)
(declare-fun x2201 () Bool)
(declare-fun x617 () Int)
(declare-fun x808 () x1401)
(declare-fun x116 () Int)
(declare-fun x1814 () Bool)
(declare-fun x1872 () x1401)
(declare-fun x511 (Int) Int)
(declare-fun x2059 () Int)
(declare-fun x106 () Bool)
(declare-fun x2252 () Int)
(declare-fun x2170 () Int)
(declare-fun x186 () Bool)
(declare-fun x2069 () Int)
(declare-fun x858 () x1401)
(declare-fun x1000 (Int) Int)
(declare-fun x2291 () Int)
(declare-fun x760 () x1401)
(declare-fun x1012 () Int)
(declare-fun x324 () Int)
(declare-fun x1913 () Bool)
(declare-fun x827 () x1401)
(declare-fun x903 () Bool)
(declare-fun x843 () Int)
(declare-fun x1963 () Int)
(declare-fun x1200 () Int)
(declare-fun x581 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x943 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x2126 () Int)
(declare-fun x362 () Int)
(declare-fun x9 (Int) Int)
(declare-fun x1237 () Int)
(declare-fun x2358 () Int)
(declare-fun x1109 () Int)
(declare-fun x2066 () Int)
(declare-fun x7 () Bool)
(declare-fun x1034 () x1401)
(declare-fun x2262 () Bool)
(declare-fun x1589 () Int)
(declare-fun x1675 () Int)
(declare-fun x1799 () Int)
(declare-fun x500 () Int)
(declare-fun x693 () Bool)
(declare-fun x2227 () Bool)
(declare-fun x972 () Int)
(declare-fun x648 () x1401)
(declare-fun x1820 () Bool)
(declare-fun x912 (Int) Int)
(declare-fun x918 () Int)
(declare-fun x1741 () Bool)
(declare-fun x844 () Int)
(declare-fun x2278 () Bool)
(declare-fun x66 () Int)
(declare-fun x792 () Int)
(declare-fun x1077 () Int)
(declare-fun x2025 () Int)
(declare-fun x2178 () x1401)
(declare-fun x826 () Int)
(declare-fun x1346 (Int) Int)
(declare-fun x544 () Int)
(declare-fun x878 () Bool)
(declare-fun x518 () Bool)
(declare-fun x2057 () Int)
(declare-fun x1609 () Int)
(declare-fun x1691 () Bool)
(declare-fun x550 () Int)
(declare-fun x1145 () Int)
(declare-fun x394 () Bool)
(declare-fun x246 () Int)
(declare-fun x1040 () Int)
(declare-fun x1674 (x1401) Int)
(declare-fun x1806 () Int)
(declare-fun x2005 () Bool)
(declare-fun x1980 () x1401)
(declare-fun x1007 () x1401)
(declare-fun x1288 () Bool)
(declare-fun x1479 () Int)
(declare-fun x1763 () Bool)
(declare-fun x2018 () x1401)
(declare-fun x582 () Int)
(declare-fun x208 () Int)
(declare-fun x1690 () Bool)
(declare-fun x1247 () Int)
(declare-fun x2030 () Int)
(declare-fun x276 () Bool)
(declare-fun x575 () x1401)
(declare-fun x993 () Int)
(declare-fun x1347 () Int)
(declare-fun x1966 () Bool)
(declare-fun x1277 () x1401)
(declare-fun x351 () Int)
(declare-fun x45 () Bool)
(declare-fun x1736 () Int)
(declare-fun x1641 () Bool)
(declare-fun x242 () Int)
(declare-fun x1999 () Int)
(declare-fun x2344 () x1401)
(declare-fun x358 () Bool)
(declare-fun x195 () Int)
(declare-fun x2213 () Bool)
(declare-fun x1398 () Int)
(declare-fun x1217 () Int)
(declare-fun x2044 () x1401)
(declare-fun x1704 () x1401)
(declare-fun x1462 () x1401)
(declare-fun x2145 () Int)
(declare-fun x929 () Int)
(declare-fun x673 (Int) Int)
(declare-fun x2049 () x1401)
(declare-fun x1254 () Int)
(declare-fun x655 () Bool)
(declare-fun x370 () Int)
(declare-fun x172 () Int)
(declare-fun x772 () Int)
(declare-fun x323 () Int)
(declare-fun x740 () Int)
(declare-fun x2240 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x959 () Int)
(declare-fun x718 () Bool)
(declare-fun x54 () x1401)
(declare-fun x376 () Int)
(declare-fun x2103 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x2075 (x1401) Int)
(declare-fun x523 () Int)
(declare-fun x209 () Int)
(declare-fun x2295 () Int)
(declare-fun x975 () x1401)
(declare-fun x2085 () Bool)
(declare-fun x1079 (x1401) Int)
(declare-fun x2113 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x1225 () x1401)
(declare-fun x934 () Bool)
(declare-fun x2074 () Int)
(declare-fun x1022 () Int)
(declare-fun x187 () Int)
(declare-fun x2280 (Int) Int)
(declare-fun x931 () x1401)
(declare-fun x509 () x1401)
(declare-fun x435 () Int)
(declare-fun x1337 () Bool)
(declare-fun x1452 () Int)
(declare-fun x572 () Bool)
(declare-fun x266 () Int)
(declare-fun x1989 () Bool)
(declare-fun x63 (Int) Int)
(declare-fun x107 () Bool)
(declare-fun x1112 () Int)
(declare-fun x268 () Int)
(declare-fun x98 () Int)
(declare-fun x1667 () Int)
(declare-fun x1139 () x1401)
(declare-fun x1291 () x1401)
(declare-fun x61 () x1401)
(declare-fun x894 () Int)
(declare-fun x21 () Int)
(declare-fun x1101 () Bool)
(declare-fun x2110 () Bool)
(declare-fun x320 () Int)
(declare-fun x1428 () x1401)
(declare-fun x1287 () Int)
(declare-fun x1006 () Int)
(declare-fun x2208 () Int)
(declare-fun x1977 () Int)
(declare-fun x1815 () Int)
(declare-fun x1714 () Bool)
(declare-fun x318 () x1401)
(declare-fun x1685 () Bool)
(declare-fun x1688 () Bool)
(declare-fun x164 () Bool)
(declare-fun x1935 () Int)
(declare-fun x474 () Bool)
(declare-fun x1933 () x1401)
(declare-fun x1251 () Bool)
(declare-fun x801 () Bool)
(declare-fun x1614 () Bool)
(declare-fun x905 () Int)
(declare-fun x422 () Int)
(declare-fun x1973 () x1401)
(declare-fun x559 () Int)
(declare-fun x886 () Bool)
(declare-fun x1158 () Int)
(declare-fun x218 () Bool)
(declare-fun x896 () Bool)
(declare-fun x1742 () Int)
(declare-fun x1592 () Int)
(declare-fun x860 () Bool)
(declare-fun x2176 (Int) Int)
(declare-fun x829 () Bool)
(declare-fun x1326 () x1401)
(declare-fun x1971 () Int)
(declare-fun x1026 () x1401)
(declare-fun x2350 () Int)
(declare-fun x1059 () Bool)
(declare-fun x127 () x1401)
(declare-fun x369 () Bool)
(declare-fun x1914 () Int)
(declare-fun x683 () Int)
(declare-fun x852 () Bool)
(declare-fun x306 () Int)
(declare-fun x162 () Int)
(declare-fun x68 () Bool)
(declare-fun x915 (x1401) Int)
(declare-fun x1768 () Int)
(declare-fun x591 () Bool)
(declare-fun x2011 () Int)
(declare-fun x1464 () x1401)
(declare-fun x1585 () Int)
(declare-fun x2235 () Int)
(declare-fun x1624 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x1507 () Bool)
(declare-fun x1514 () Int)
(declare-fun x592 () Int)
(declare-fun x2351 () Int)
(declare-fun x994 () Int)
(declare-fun x660 () Int)
(declare-fun x1307 () Bool)
(declare-fun x721 () Bool)
(declare-fun x891 () Bool)
(declare-fun x221 () x1401)
(declare-fun x1089 () Int)
(declare-fun x1365 () Int)
(declare-fun x261 () Int)
(declare-fun x653 () Bool)
(declare-fun x1905 () Int)
(declare-fun x1883 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x504 () Bool)
(declare-fun x494 () Int)
(declare-fun x2053 () Int)
(declare-fun x974 () Bool)
(declare-fun x832 () Int)
(declare-fun x2307 (Int) Int)
(declare-fun x1374 () Bool)
(declare-fun x2239 () Bool)
(declare-fun x1967 () Int)
(declare-fun x1636 () Int)
(declare-fun x1862 () Int)
(declare-fun x938 () Int)
(declare-fun x2000 () Int)
(declare-fun x2023 () Bool)
(declare-fun x851 () x1401)
(declare-fun x383 () x1401)
(declare-fun x1221 () Int)
(declare-fun x147 () Int)
(declare-fun x308 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x498 (Int) Int)
(declare-fun x2043 () x1401)
(declare-fun x1511 () Int)
(declare-fun x1099 () Int)
(declare-fun x804 () x1401)
(declare-fun x2003 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x2248 () Bool)
(declare-fun x1577 (x1401) Int)
(declare-fun x105 () Int)
(declare-fun x839 () Bool)
(declare-fun x273 () Int)
(declare-fun x1076 () Int)
(declare-fun x32 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x1292 () Int)
(declare-fun x745 () Int)
(declare-fun x2342 () Bool)
(declare-fun x1019 () Int)
(declare-fun x665 () Int)
(declare-fun x1156 () Int)
(declare-fun x260 () Bool)
(declare-fun x2300 () Int)
(declare-fun x1051 () Int)
(declare-fun x1246 () Int)
(declare-fun x1669 () Bool)
(declare-fun x1144 () Int)
(declare-fun x176 () Int)
(declare-fun x433 () Int)
(declare-fun x682 () Bool)
(declare-fun x1836 () Int)
(declare-fun x573 () Int)
(declare-fun x1658 (Int) Int)
(declare-fun x1930 () Int)
(declare-fun x1626 () Bool)
(declare-fun x2233 () Bool)
(declare-fun x716 () x1401)
(declare-fun x602 () Bool)
(declare-fun x2320 () Bool)
(declare-fun x1890 () x1401)
(declare-fun x424 () Int)
(declare-fun x223 () Int)
(declare-fun x2197 () Bool)
(declare-fun x1322 () x1401)
(declare-fun x1629 () Bool)
(declare-fun x837 () Int)
(declare-fun x297 () Bool)
(declare-fun x2289 () Bool)
(declare-fun x457 () Bool)
(declare-fun x799 () Bool)
(declare-fun x180 () Bool)
(declare-fun x486 () Int)
(declare-fun x1445 () Bool)
(declare-fun x1066 () x1401)
(declare-fun x243 () Bool)
(declare-fun x813 (Int) Int)
(declare-fun x2328 () Int)
(declare-fun x1970 () Bool)
(declare-fun x1789 () Int)
(declare-fun x892 () Int)
(declare-fun x782 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x1293 () Int)
(declare-fun x1045 () Int)
(declare-fun x1095 () Bool)
(declare-fun x1839 () Int)
(declare-fun x836 () Int)
(declare-fun x175 () Int)
(declare-fun x380 () Bool)
(declare-fun x2107 () Bool)
(declare-fun x1803 () x1401)
(declare-fun x1912 () Bool)
(declare-fun x1553 () Int)
(declare-fun x1362 () x1401)
(declare-fun x1560 () Bool)
(declare-fun x2322 () Int)
(declare-fun x781 () Bool)
(declare-fun x294 () Bool)
(declare-fun x1309 () Int)
(declare-fun x831 () Int)
(declare-fun x2 () Int)
(declare-fun x1608 () Int)
(declare-fun x2122 () Int)
(declare-fun x471 () Int)
(declare-fun x1962 () Int)
(declare-fun x2120 () Bool)
(declare-fun x309 () Int)
(declare-fun x1780 () x1401)
(declare-fun x1373 () Bool)
(declare-fun x1783 () Bool)
(declare-fun x850 () Bool)
(declare-fun x284 () Int)
(declare-fun x713 () Int)
(declare-fun x2101 () Bool)
(declare-fun x1198 () Int)
(declare-fun x2022 () Int)
(declare-fun x2355 () Int)
(declare-fun x552 () Bool)
(declare-fun x1116 () x1401)
(declare-fun x1518 () Bool)
(declare-fun x1728 (Int) Int)
(declare-fun x1853 () Bool)
(declare-fun x990 () Bool)
(declare-fun x2306 () Bool)
(declare-fun x82 () x1401)
(declare-fun x956 () Int)
(declare-fun x1458 () Bool)
(declare-fun x695 () Int)
(declare-fun x1512 () Bool)
(declare-fun x1969 () x1401)
(declare-fun x458 () x1401)
(declare-fun x1430 () Int)
(declare-fun x885 () Int)
(declare-fun x39 () Int)
(declare-fun x210 () x1401)
(declare-fun x1143 () Int)
(declare-fun x1625 () Int)
(declare-fun x992 () Bool)
(declare-fun x611 () Bool)
(declare-fun x513 () Int)
(declare-fun x1263 () Bool)
(declare-fun x1378 () x1401)
(declare-fun x1646 () Bool)
(declare-fun x624 () Int)
(declare-fun x1532 () Int)
(declare-fun x1965 (x1401) Int)
(declare-fun x1376 () Int)
(declare-fun x568 () Bool)
(declare-fun x690 () Int)
(declare-fun x884 () Int)
(declare-fun x1842 () Int)
(declare-fun x841 () Int)
(declare-fun x2150 () Int)
(declare-fun x1791 () Int)
(declare-fun x519 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x96 () Bool)
(declare-fun x621 () Bool)
(declare-fun x1708 () x1401)
(declare-fun x1426 () Int)
(declare-fun x1982 () Int)
(declare-fun x1492 (Int) Int)
(declare-fun x1396 () Int)
(declare-fun x1172 () Int)
(declare-fun x812 (Int) Int)
(declare-fun x1381 () Bool)
(declare-fun x955 () Int)
(declare-fun x663 () Bool)
(declare-fun x77 () x1401)
(declare-fun x612 () Int)
(declare-fun x794 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x37 () Bool)
(declare-fun x1447 () x1401)
(declare-fun x1255 () Int)
(declare-fun x1202 () Int)
(declare-fun x2165 () Int)
(declare-fun x1774 () Bool)
(declare-fun x910 () Int)
(declare-fun x1336 () Bool)
(declare-fun x1855 () x1401)
(declare-fun x409 () Int)
(declare-fun x1481 () Bool)
(declare-fun x870 () Bool)
(declare-fun x600 () Bool)
(declare-fun x1151 (Int) Int)
(declare-fun x666 () Int)
(declare-fun x526 () Bool)
(declare-fun x641 () Int)
(declare-fun x899 (x1401) Int)
(declare-fun x657 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x2203 () Int)
(declare-fun x1954 () Int)
(declare-fun x1340 () Int)
(declare-fun x430 () Int)
(declare-fun x1178 () Bool)
(declare-fun x1227 () Int)
(declare-fun x371 () Bool)
(declare-fun x378 () x1401)
(declare-fun x1368 () x1401)
(declare-fun x952 (Int) Int)
(declare-fun x473 () Int)
(declare-fun x1305 () Bool)
(declare-fun x560 () Bool)
(declare-fun x2181 () Bool)
(declare-fun x413 () Bool)
(declare-fun x731 () Bool)
(declare-fun x954 () x1401)
(declare-fun x2171 () Int)
(declare-fun x1187 () Int)
(declare-fun x412 () Bool)
(declare-fun x528 () Int)
(declare-fun x1865 () Int)
(declare-fun x670 () Int)
(declare-fun x2200 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x484 () Int)
(declare-fun x1278 () Bool)
(declare-fun x720 () x1401)
(declare-fun x115 () x1401)
(declare-fun x419 () x1401)
(declare-fun x1486 () Bool)
(declare-fun x2174 () Bool)
(declare-fun x2354 () x1401)
(declare-fun x1016 () x1401)
(declare-fun x634 () Int)
(declare-fun x702 () Int)
(declare-fun x1159 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x906 () Bool)
(declare-fun x879 () Bool)
(declare-fun x758 () Bool)
(declare-fun x443 () Int)
(declare-fun x2162 () Bool)
(declare-fun x240 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x256 () x1401)
(declare-fun x1875 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x2231 () Bool)
(declare-fun x226 () Int)
(declare-fun x439 () x1401)
(declare-fun x2077 () Bool)
(declare-fun x1866 (Int) Int)
(declare-fun x1951 () x1401)
(declare-fun x687 () x1401)
(declare-fun x1895 () x1401)
(declare-fun x2195 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x408 (Int) Int)
(declare-fun x722 () Int)
(declare-fun x455 () Bool)
(declare-fun x1602 () Bool)
(declare-fun x707 () Bool)
(declare-fun x137 () Bool)
(declare-fun x1180 () x1401)
(declare-fun x1136 () Int)
(declare-fun x1219 () Bool)
(declare-fun x456 () Int)
(declare-fun x1972 () Int)
(declare-fun x576 () Bool)
(declare-fun x1936 (Int) Int)
(declare-fun x824 () Int)
(declare-fun x1758 () Int)
(declare-fun x1923 () x1401)
(declare-fun x1208 () x1401)
(declare-fun x40 () Bool)
(declare-fun x1457 () x1401)
(declare-fun x1295 () Bool)
(declare-fun x205 () Bool)
(declare-fun x2118 (x1401) Int)
(declare-fun x1877 () Bool)
(declare-fun x2078 () x1401)
(declare-fun x230 () Int)
(declare-fun x1847 () Bool)
(declare-fun x633 () Bool)
(declare-fun x1434 () x1401)
(declare-fun x464 () x1401)
(declare-fun x1215 () Bool)
(declare-fun x1919 () Bool)
(declare-fun x1917 () Int)
(declare-fun x1827 () Bool)
(declare-fun x56 () Int)
(declare-fun x1631 () Int)
(declare-fun x1845 () Int)
(declare-fun x705 () Bool)
(declare-fun x2047 () Int)
(declare-fun x227 () Bool)
(declare-fun x1513 () Int)
(declare-fun x1244 () Int)
(declare-fun x146 () Bool)
(declare-fun x1775 () x1401)
(declare-fun x1504 () Bool)
(declare-fun x853 () Int)
(declare-fun x650 () Bool)
(declare-fun x1746 () Bool)
(declare-fun x570 () x1401)
(declare-fun x991 () Bool)
(declare-fun x353 () Int)
(declare-fun x79 () Int)
(declare-fun x1679 () Int)
(declare-fun x2317 () Int)
(declare-fun x2046 () Int)
(declare-fun x1733 () Int)
(declare-fun x396 () Int)
(declare-fun x1105 () x1401)
(declare-fun x1964 () Int)
(declare-fun x872 () Int)
(declare-fun x272 (Int) Int)
(declare-fun x2335 () x1401)
(declare-fun x1639 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x2212 () Int)
(declare-fun x2330 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x2287 () Bool)
(declare-fun x194 () Int)
(declare-fun x1500 () Bool)
(declare-fun x2051 () Int)
(declare-fun x460 (x1401) Int)
(declare-fun x2035 (Int) Int)
(declare-fun x360 () Int)
(declare-fun x109 () Bool)
(declare-fun x31 () Bool)
(declare-fun x580 () Bool)
(declare-fun x1809 () Int)
(declare-fun x1903 () Int)
(declare-fun x1312 () Bool)
(declare-fun x2132 () Int)
(declare-fun x756 () Bool)
(declare-fun x1689 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x616 () Int)
(declare-fun x753 () x1401)
(declare-fun x2236 () Bool)
(declare-fun x932 () x1401)
(declare-fun x27 () Int)
(declare-fun x1186 () Int)
(declare-fun x759 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1764 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x1048 () Int)
(declare-fun x13 () Bool)
(declare-fun x2036 () Int)
(declare-fun x1201 (Int) x1401)
(declare-fun x1680 () x1401)
(declare-fun x1651 () Int)
(declare-fun x2338 () x1401)
(declare-fun x1369 () Int)
(declare-fun x1352 () Bool)
(declare-fun x1418 () Int)
(declare-fun x167 () Int)
(declare-fun x669 () x1401)
(declare-fun x1632 () Int)
(declare-fun x291 () x1401)
(declare-fun x2333 () Bool)
(declare-fun x984 () Int)
(declare-fun x564 () Bool)
(declare-fun x1996 (Int) Int)
(declare-fun x989 () Bool)
(declare-fun x22 () x1401)
(declare-fun x403 () Int)
(declare-fun x1876 () Int)
(declare-fun x1591 (Int) Int)
(declare-fun x400 () Int)
(declare-fun x87 () Bool)
(declare-fun x217 () Int)
(declare-fun x1776 () Int)
(declare-fun x1049 () Bool)
(declare-fun x2339 () Int)
(declare-fun x420 () Int)
(declare-fun x2259 () Int)
(declare-fun x1892 () Bool)
(declare-fun x859 () Int)
(declare-fun x1160 () Bool)
(declare-fun x700 () Bool)
(declare-fun x512 () x1401)
(declare-fun x1275 () x1401)
(declare-fun x1388 () Int)
(declare-fun x270 () Int)
(declare-fun x184 () Int)
(declare-fun x864 () Int)
(declare-fun x125 () x1401)
(declare-fun x1448 () Int)
(declare-fun x1062 () Bool)
(declare-fun x2167 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x933 () Bool)
(declare-fun x198 () Int)
(declare-fun x244 () Bool)
(declare-fun x1686 () Bool)
(declare-fun x750 () Bool)
(declare-fun x231 () Bool)
(declare-fun x110 () x1401)
(declare-fun x618 () Int)
(declare-fun x1808 () Int)
(declare-fun x1694 () Bool)
(declare-fun x1286 () Int)
(declare-fun x1108 () Bool)
(declare-fun x1549 () Int)
(declare-fun x352 () Int)
(declare-fun x818 () Bool)
(declare-fun x2064 () Bool)
(declare-fun x18 () Int)
(declare-fun x1617 () Int)
(declare-fun x213 () x1401)
(declare-fun x1414 () Int)
(declare-fun x2311 () Int)
(declare-fun x1269 () x1401)
(declare-fun x1677 () x1401)
(declare-fun x2152 () x1401)
(declare-fun x642 () Int)
(declare-fun x1597 () Int)
(declare-fun x555 () Bool)
(declare-fun x895 () Bool)
(declare-fun x1766 (Int) Int)
(declare-fun x2004 () Int)
(declare-fun x2234 () Int)
(declare-fun x542 () x1401)
(declare-fun x49 () Bool)
(declare-fun x571 () Bool)
(declare-fun x325 (Int) Int)
(declare-fun x1117 () Int)
(declare-fun x2296 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x1355 () Int)
(declare-fun x950 () Bool)
(declare-fun x2326 () Int)
(declare-fun x1375 () Int)
(declare-fun x1120 () Bool)
(declare-fun x1319 () Int)
(declare-fun x2211 () Int)
(declare-fun x681 () Bool)
(declare-fun x1441 (Int) Int)
(declare-fun x689 () x1401)
(declare-fun x744 () x1401)
(declare-fun x965 (Int) Int)
(declare-fun x557 () Int)
(declare-fun x1613 () Int)
(declare-fun x806 () Int)
(declare-fun x166 () Int)
(declare-fun x1575 () Int)
(declare-fun x1239 () Int)
(declare-fun x305 () Bool)
(declare-fun x2293 () Int)
(declare-fun x1653 () Int)
(declare-fun x274 () x1401)
(declare-fun x1541 () Bool)
(declare-fun x825 () Int)
(declare-fun x475 () Int)
(declare-fun x2175 () x1401)
(declare-fun x1327 () Bool)
(declare-fun x239 () Bool)
(declare-fun x2142 () Bool)
(declare-fun x2141 () Int)
(declare-fun x1387 () x1401)
(declare-fun x1080 () Int)
(declare-fun x998 () x1401)
(declare-fun x1267 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x835 () Int)
(declare-fun x888 () Int)
(declare-fun x1657 () Int)
(declare-fun x668 () Bool)
(declare-fun x968 () Bool)
(declare-fun x1282 () Int)
(declare-fun x1830 () Int)
(declare-fun x1302 () Int)
(declare-fun x1805 () Int)
(declare-fun x632 () Bool)
(declare-fun x382 () Int)
(declare-fun x65 () Bool)
(declare-fun x2283 () Bool)
(declare-fun x2313 () Int)
(declare-fun x2007 () Int)
(declare-fun x1440 () Int)
(declare-fun x659 () Int)
(declare-fun x517 () Bool)
(declare-fun x1276 () Int)
(declare-fun x538 () Bool)
(declare-fun x654 () Int)
(declare-fun x1829 (Int) Int)
(declare-fun x1499 () Int)
(declare-fun x678 () Bool)
(declare-fun x259 () x1401)
(declare-fun x529 () Int)
(declare-fun x922 () Int)
(declare-fun x561 () Int)
(declare-fun x204 () x1401)
(declare-fun x1030 () Bool)
(declare-fun x694 () Bool)
(declare-fun x2105 () Int)
(declare-fun x2255 () Int)
(declare-fun x810 () Int)
(declare-fun x675 () Int)
(declare-fun x181 () Int)
(declare-fun x2124 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x1649 () Int)
(declare-fun x1640 () Bool)
(declare-fun x461 () Int)
(declare-fun x1796 () Int)
(declare-fun x1516 () Int)
(declare-fun x2238 () Int)
(declare-fun x2357 () Int)
(declare-fun x2223 () Bool)
(declare-fun x986 () x1401)
(declare-fun x1519 () Int)
(declare-fun x1616 () x1401)
(declare-fun x374 () x1401)
(declare-fun x2006 () Bool)
(declare-fun x43 () Int)
(declare-fun x765 () Bool)
(declare-fun x1265 () x1401)
(declare-fun x1826 () Bool)
(declare-fun x103 () Int)
(declare-fun x1563 () Int)
(declare-fun x1900 () Bool)
(declare-fun x372 () Bool)
(declare-fun x1129 () Int)
(declare-fun x596 (x1401) Int)
(declare-fun x1342 () Int)
(declare-fun x577 () Int)
(declare-fun x1823 () Int)
(declare-fun x704 () Bool)
(declare-fun x1854 () x1401)
(declare-fun x345 () Int)
(declare-fun x384 () Int)
(declare-fun x2284 () Bool)
(declare-fun x2104 () Bool)
(declare-fun x26 () Bool)
(declare-fun x757 () Bool)
(declare-fun x1318 () Bool)
(declare-fun x2071 () Int)
(declare-fun x2161 () x1401)
(declare-fun x2202 () Int)
(declare-fun x712 (Int) Int)
(declare-fun x1064 () Int)
(declare-fun x359 (Int) Int)
(declare-fun x207 () Int)
(declare-fun x2065 () Int)
(declare-fun x334 () Int)
(declare-fun x1043 () Bool)
(declare-fun x1817 () Bool)
(declare-fun x1082 () Int)
(declare-fun x1523 () Bool)
(declare-fun x191 () Int)
(declare-fun x338 () Bool)
(declare-fun x2294 () x1401)
(declare-fun x2359 () Int)
(declare-fun x1770 () Bool)
(declare-fun x2285 () Int)
(declare-fun x2093 () Int)
(declare-fun x996 () Bool)
(declare-fun x1487 () Int)
(declare-fun x1769 () Int)
(declare-fun x144 () Bool)
(declare-fun x1750 () x1401)
(declare-fun x2032 () Int)
(declare-fun x1828 () Int)
(declare-fun x316 () x1401)
(declare-fun x1192 () Int)
(declare-fun x145 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x1183 () x1401)
(declare-fun x1797 () x1401)
(declare-fun x395 () Int)
(declare-fun x537 () Int)
(declare-fun x2216 () Bool)
(declare-fun x2135 () x1401)
(declare-fun x2345 () Int)
(declare-fun x1233 () Bool)
(declare-fun x421 () Int)
(declare-fun x874 () Bool)
(declare-fun x637 () Bool)
(declare-fun x2070 () Int)
(declare-fun x2209 () Bool)
(declare-fun x1850 () Int)
(declare-fun x1852 () Int)
(declare-fun x674 () x1401)
(declare-fun x2159 () x1401)
(declare-fun x1490 () Int)
(declare-fun x99 () x1401)
(declare-fun x2092 () Int)
(declare-fun x936 () Int)
(declare-fun x1404 (x1401) Int)
(declare-fun x401 () x1401)
(declare-fun x2111 () Int)
(declare-fun x887 () Int)
(declare-fun x551 () Int)
(declare-fun x2146 () Int)
(declare-fun x1493 () Int)
(declare-fun x777 () Int)
(declare-fun x1147 () Bool)
(declare-fun x1382 () Int)
(declare-fun x1189 () Int)
(declare-fun x1927 () Bool)
(declare-fun x766 () Int)
(declare-fun x1874 () Bool)
(declare-fun x1793 () Int)
(declare-fun x1036 () Bool)
(declare-fun x727 () Int)
(declare-fun x1266 () Int)
(declare-fun x1240 () Bool)
(declare-fun x1921 () Int)
(declare-fun x442 () Bool)
(declare-fun x738 () Bool)
(declare-fun x72 () Bool)
(declare-fun x609 () x1401)
(declare-fun x1406 () x1401)
(declare-fun x1093 () Int)
(declare-fun x472 () Int)
(declare-fun x1130 () Int)
(declare-fun x1118 () Bool)
(declare-fun x414 () Int)
(declare-fun x2315 (Int) Int)
(declare-fun x1543 () Bool)
(declare-fun x1497 () Int)
(declare-fun x1161 () Bool)
(declare-fun x1521 () Int)
(declare-fun x254 () Int)
(declare-fun x664 () Int)
(declare-fun x631 () Int)
(declare-fun x1002 () Bool)
(declare-fun x2249 () Bool)
(declare-fun x2343 () x1401)
(declare-fun x2102 () Bool)
(declare-fun x1906 () Int)
(declare-fun x973 () Int)
(declare-fun x365 () Int)
(declare-fun x805 () Int)
(declare-fun x1547 () Int)
(declare-fun x73 () Int)
(declare-fun x1719 () x1401)
(declare-fun x1005 () Bool)
(declare-fun x248 () Bool)
(declare-fun x64 () Int)
(declare-fun x902 () Bool)
(declare-fun x2151 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x1573 () x1401)
(declare-fun x2334 () Bool)
(declare-fun x924 () Bool)
(declare-fun x619 () x1401)
(declare-fun x134 () Int)
(declare-fun x855 () Int)
(declare-fun x2054 () Bool)
(declare-fun x245 () Int)
(declare-fun x1185 () Int)
(declare-fun x1709 () Int)
(declare-fun x2318 () Bool)
(declare-fun x477 () Int)
(declare-fun x1621 () Int)
(declare-fun x1656 () Int)
(declare-fun x1588 () Bool)
(declare-fun x123 () Bool)
(declare-fun x71 () x1401)
(declare-fun x729 () Bool)
(declare-fun x658 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x265 () x1401)
(declare-fun x677 () Int)
(declare-fun x945 () x1401)
(declare-fun x2114 () Int)
(declare-fun x828 () x1401)
(declare-fun x672 () Int)
(declare-fun x1041 () x1401)
(declare-fun x1456 () Int)
(declare-fun x1576 () Int)
(declare-fun x613 () Int)
(declare-fun x1786 () Int)
(declare-fun x2274 () x1401)
(declare-fun x281 () Int)
(declare-fun x1915 () Bool)
(declare-fun x399 () Int)
(declare-fun x1195 () Bool)
(declare-fun x1015 () Int)
(declare-fun x2137 () Bool)
(declare-fun x1063 () Int)
(declare-fun x593 () Bool)
(declare-fun x158 () x1401)
(declare-fun x80 () Int)
(declare-fun x735 () Int)
(declare-fun x1463 () x1401)
(declare-fun x1465 () Int)
(declare-fun x1986 () Bool)
(declare-fun x2281 () Bool)
(declare-fun x562 () Bool)
(declare-fun x2129 () Bool)
(declare-fun x1072 () Int)
(declare-fun x2031 () Bool)
(declare-fun x313 () Int)
(declare-fun x856 () Int)
(declare-fun x1509 () Bool)
(declare-fun x898 () Int)
(declare-fun x946 () Int)
(declare-fun x1535 () Bool)
(declare-fun x1028 () Int)
(declare-fun x2068 () Bool)
(declare-fun x188 (Int) Int)
(declare-fun x1253 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x1459 () Int)
(declare-fun x778 () x1401)
(declare-fun x697 () Int)
(declare-fun x1280 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x2312 () x1401)
(declare-fun x59 () Int)
(declare-fun x1748 () Bool)
(declare-fun x776 () Bool)
(declare-fun x150 () Int)
(declare-fun x1279 () Bool)
(declare-fun x1134 () Int)
(declare-fun x366 () Int)
(declare-fun x1115 () Int)
(declare-fun x1988 () Int)
(declare-fun x1888 () Int)
(declare-fun x2319 () Bool)
(declare-fun x1304 () Int)
(declare-fun x779 () Int)
(declare-fun x437 () Bool)
(declare-fun x148 (x1401) Int)
(declare-fun x1579 () Int)
(declare-fun x646 () Bool)
(declare-fun x346 () Int)
(declare-fun x652 () Bool)
(declare-fun x802 () Int)
(declare-fun x1258 () Int)
(declare-fun x1238 () Bool)
(declare-fun x1086 () x1401)
(declare-fun x620 () Int)
(declare-fun x41 () x1401)
(declare-fun x495 () Bool)
(declare-fun x1568 (Int) Int)
(declare-fun x1627 () Bool)
(declare-fun x840 () Int)
(declare-fun x790 () Int)
(declare-fun x1598 () Int)
(declare-fun x173 () Int)
(declare-fun x1660 () x1401)
(declare-fun x589 () Int)
(declare-fun x969 () Int)
(declare-fun x283 () Bool)
(declare-fun x751 () Int)
(declare-fun x1377 () Int)
(declare-fun x219 () Int)
(declare-fun x1878 () Bool)
(declare-fun x964 () Int)
(declare-fun x1085 () Bool)
(declare-fun x516 () Int)
(declare-fun x1204 () x1401)
(declare-fun x520 () Bool)
(declare-fun x1993 () x1401)
(declare-fun x2325 () Int)
(declare-fun x2086 () Int)
(declare-fun x1320 () Int)
(declare-fun x1206 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x2353 () Int)
(declare-fun x1313 () Bool)
(declare-fun x1781 () Int)
(declare-fun x393 () Int)
(declare-fun x168 () Int)
(declare-fun x1790 () Int)
(declare-fun x2041 () Int)
(declare-fun x680 () Int)
(declare-fun x1948 () Bool)
(declare-fun x1503 () x1401)
(declare-fun x1670 () x1401)
(declare-fun x1957 () Int)
(declare-fun x1696 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x862 () Int)
(declare-fun x2199 () Int)
(declare-fun x1857 () Bool)
(declare-fun x1483 () x1401)
(declare-fun x615 () Int)
(declare-fun x880 () Bool)
(declare-fun x1334 () Int)
(declare-fun x1684 () Bool)
(declare-fun x733 () Int)
(declare-fun x1611 () Bool)
(declare-fun x159 () Int)
(declare-fun x450 () Int)
(declare-fun x485 () Bool)
(declare-fun x364 () x1401)
(declare-fun x1455 () x1401)
(declare-fun x599 () Int)
(declare-fun x1174 () Bool)
(declare-fun x454 () Int)
(declare-fun x326 () Bool)
(declare-fun x1747 () Int)
(declare-fun x916 () Int)
(declare-fun x46 () Int)
(declare-fun x425 () Int)
(declare-fun x817 () Int)
(declare-fun x112 () Int)
(declare-fun x2275 () Int)
(declare-fun x379 (Int) Int)
(declare-fun x119 () x1401)
(declare-fun x185 () Int)
(declare-fun x1522 () x1401)
(declare-fun x1069 () Int)
(declare-fun x2361 () Int)
(declare-fun x1482 () Bool)
(declare-fun x1067 () x1401)
(declare-fun x1394 () x1401)
(declare-fun x1984 () Int)
(declare-fun x1648 () Int)
(declare-fun x1794 () x1401)
(declare-fun x510 () Int)
(declare-fun x863 () x1401)
(declare-fun x83 () Bool)
(declare-fun x588 () Int)
(declare-fun x1622 () Int)
(declare-fun x149 () Int)
(declare-fun x1057 () Bool)
(declare-fun x465 () Bool)
(declare-fun x2243 () Bool)
(declare-fun x438 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x769 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x1567 () Int)
(declare-fun x838 () Int)
(declare-fun x1949 () Int)
(declare-fun x1537 () Bool)
(declare-fun x1879 () Int)
(declare-fun x285 () Bool)
(declare-fun x25 () Int)
(declare-fun x2116 () Int)
(declare-fun x348 () x1401)
(declare-fun x1572 () Int)
(declare-fun x865 (x1401) Int)
(declare-fun x336 () Bool)
(declare-fun x468 () Int)
(declare-fun x2140 () Bool)
(declare-fun x215 () x1401)
(declare-fun x1098 () x1401)
(declare-fun x676 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x1379 () Int)
(declare-fun x1010 () Bool)
(declare-fun x2183 () Bool)
(declare-fun x709 () Int)
(declare-fun x263 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x848 () x1401)
(declare-fun x1633 (x1401) Int)
(declare-fun x2221 () Int)
(declare-fun x1995 () Int)
(declare-fun x161 () Int)
(declare-fun x481 () Int)
(declare-fun x76 () Bool)
(declare-fun x2088 () Int)
(declare-fun x1525 () x1401)
(declare-fun x1975 () Int)
(declare-fun x2119 () Bool)
(declare-fun x1605 () x1401)
(declare-fun x2079 () x1401)
(declare-fun x1014 () Bool)
(declare-fun x1603 () x1401)
(declare-fun x1 () Int)
(declare-fun x911 () Int)
(declare-fun x2349 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x1863 () Bool)
(declare-fun x607 () x1401)
(declare-fun x947 () Int)
(declare-fun x1859 () Bool)
(declare-fun x234 (x1401) Int)
(declare-fun x280 () Bool)
(declare-fun x292 () x1401)
(declare-fun x699 () Bool)
(declare-fun x1397 () x1401)
(declare-fun x19 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x467 () Bool)
(declare-fun x2225 () Bool)
(declare-fun x820 () x1401)
(declare-fun x50 () Bool)
(declare-fun x182 () Int)
(declare-fun x1123 () Int)
(declare-fun x909 () Bool)
(declare-fun x821 () Bool)
(declare-fun x211 () Int)
(declare-fun x69 () Bool)
(declare-fun x487 (x1401) Int)
(declare-fun x1880 () Int)
(declare-fun x269 () Int)
(declare-fun x978 () Bool)
(declare-fun x1925 () Int)
(declare-fun x386 () Int)
(declare-fun x773 () Bool)
(declare-fun x293 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x38 () Int)
(declare-fun x2297 () x1401)
(declare-fun x85 () x1401)
(declare-fun x1990 () Int)
(declare-fun x440 () Int)
(declare-fun x357 () Int)
(declare-fun x136 () x1401)
(declare-fun x1424 () Bool)
(declare-fun x1734 () x1401)
(declare-fun x1285 (Int) Int)
(declare-fun x546 () Bool)
(declare-fun x12 () Int)
(declare-fun x388 () Int)
(declare-fun x142 () Int)
(declare-fun x101 () Bool)
(declare-fun x1897 () Int)
(declare-fun x104 () Int)
(declare-fun x1474 () x1401)
(declare-fun x1932 () Int)
(declare-fun x1870 () Bool)
(declare-fun x1443 () x1401)
(declare-fun x605 () x1401)
(declare-fun x549 () Bool)
(declare-fun x1840 () Bool)
(declare-fun x502 () Int)
(declare-fun x807 () Bool)
(declare-fun x5 () Int)
(declare-fun x711 () Bool)
(declare-fun x1699 () Int)
(declare-fun x1270 () x1401)
(declare-fun x626 () Int)
(declare-fun x2204 () x1401)
(declare-fun x89 () Bool)
(declare-fun x1140 () Int)
(declare-fun x2187 () Bool)
(declare-fun x2109 () Int)
(declare-fun x944 () Bool)
(declare-fun x780 () Int)
(declare-fun x1451 () x1401)
(declare-fun x57 () Int)
(declare-fun x999 () Int)
(declare-fun x2242 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x1021 () Int)
(declare-fun x1391 () Bool)
(declare-fun x755 () Int)
(declare-fun x2230 () Bool)
(declare-fun x2279 () Bool)
(declare-fun x1004 () x1401)
(declare-fun x901 () Int)
(declare-fun x1289 () Bool)
(declare-fun x1222 (x1401) Int)
(declare-fun x595 () Int)
(declare-fun x1716 () Int)
(declare-fun x868 (Int) Int)
(declare-fun x1260 () Bool)
(declare-fun x2121 () Bool)
(declare-fun x1421 () Int)
(declare-fun x2301 () Int)
(declare-fun x1470 () Int)
(declare-fun x329 () Bool)
(declare-fun x691 () Int)
(declare-fun x1047 () Bool)
(declare-fun x698 () Int)
(declare-fun x1078 () Bool)
(declare-fun x1578 () Int)
(declare-fun x489 () Bool)
(declare-fun x1423 () Int)
(declare-fun x1869 () Int)
(declare-fun x507 () Int)
(declare-fun x1338 () Int)
(declare-fun x118 () Bool)
(declare-fun x606 () Int)
(declare-fun x1756 (Int) Int)
(declare-fun x1942 () Int)
(declare-fun x524 () Int)
(declare-fun x2261 () x1401)
(declare-fun x1013 () Bool)
(declare-fun x1968 () Int)
(declare-fun x1088 () Int)
(declare-fun x1367 () Int)
(declare-fun x2058 () Int)
(declare-fun x1601 () Bool)
(declare-fun x1371 () Int)
(declare-fun x1163 () Bool)
(declare-fun x2185 () Int)
(declare-fun x152 () Bool)
(declare-fun x1868 () x1401)
(declare-fun x1785 () Int)
(declare-fun x1528 () x1401)
(declare-fun x479 () Int)
(declare-fun x349 () x1401)
(declare-fun x784 () Int)
(declare-fun x2298 () Int)
(declare-fun x183 () Int)
(declare-fun x730 () Bool)
(declare-fun x2182 () Bool)
(declare-fun x1730 () x1401)
(declare-fun x2207 () x1401)
(declare-fun x2143 () Int)
(declare-fun x2228 () Bool)
(declare-fun x2130 () Int)
(declare-fun x1765 () Int)
(declare-fun x258 () Bool)
(declare-fun x1800 () x1401)
(declare-fun x2139 () Int)
(declare-fun x814 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x1489 () Int)
(declare-fun x1165 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x1821 () x1401)
(declare-fun x1193 () Int)
(declare-fun x2096 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x156 () Bool)
(declare-fun x1715 () x1401)
(declare-fun x1524 () x1401)
(declare-fun x1721 () Int)
(declare-fun x809 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x1226 () Int)
(declare-fun x342 () x1401)
(declare-fun x2299 () Bool)
(declare-fun x747 () Int)
(declare-fun x1436 () Bool)
(declare-fun x708 () Int)
(declare-fun x1787 () x1401)
(declare-fun x791 () Int)
(declare-fun x4 () Int)
(declare-fun x597 () Bool)
(declare-fun x743 () Int)
(declare-fun x1339 () Int)
(declare-fun x2028 (Int) Int)
(declare-fun x953 () Int)
(declare-fun x563 () Int)
(declare-fun x645 () Int)
(declare-fun x1350 () Int)
(declare-fun x800 () Bool)
(declare-fun x816 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x277 () Int)
(declare-fun x303 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x51 () Int)
(declare-fun x871 () x1401)
(declare-fun x2082 () x1401)
(declare-fun x93 () Bool)
(declare-fun x1536 () Int)
(declare-fun x1520 () Int)
(declare-fun x640 () Int)
(declare-fun x1595 () Int)
(declare-fun x719 () Int)
(declare-fun x545 () x1401)
(declare-fun x514 () Bool)
(declare-fun x2256 () Int)
(declare-fun x1473 () Bool)
(declare-fun x2136 () x1401)
(declare-fun x1461 () Int)
(declare-fun x926 () x1401)
(declare-fun x406 () Int)
(declare-fun x890 () x1401)
(declare-fun x603 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x55 () x1401)
(declare-fun x154 () Bool)
(declare-fun x1974 () Int)
(declare-fun x913 () Int)
(declare-fun x554 () Int)
(declare-fun x1562 () Int)
(declare-fun x923 () Int)
(declare-fun x466 () Int)
(declare-fun x1018 () Int)
(declare-fun x970 () Bool)
(declare-fun x426 () Int)
(declare-fun x1111 () Bool)
(declare-fun x131 () Int)
(declare-fun x1137 () x1401)
(declare-fun x854 () Bool)
(declare-fun x982 (Int) Int)
(declare-fun x1235 () Bool)
(declare-fun x124 () Int)
(declare-fun x286 () Int)
(declare-fun x742 () Bool)
(declare-fun x423 () Bool)
(declare-fun x881 () x1401)
(declare-fun x1386 () Int)
(declare-fun x1550 () Int)
(declare-fun x279 () Bool)
(declare-fun x2067 () Bool)
(declare-fun x715 () Int)
(declare-fun x787 (Int) Int)
(declare-fun x480 () Bool)
(declare-fun x1569 () Int)
(declare-fun x1194 () Int)
(declare-fun x717 () Int)
(declare-fun x100 () Bool)
(declare-fun x1091 () Int)
(declare-fun x1449 () Int)
(declare-fun x2149 () Int)
(declare-fun x1074 () Int)
(declare-fun x1029 () x1401)
(declare-fun x2144 () Int)
(declare-fun x1998 () Int)
(declare-fun x1707 () Int)
(declare-fun x957 () Int)
(declare-fun x2277 () Int)
(declare-fun x2305 () Int)
(declare-fun x251 () Bool)
(declare-fun x849 () Int)
(declare-fun x203 () x1401)
(declare-fun x44 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x1370 (Int) Int)
(declare-fun x1417 () Int)
(declare-fun x448 () Bool)
(declare-fun x1534 () Bool)
(declare-fun x1425 () x1401)
(declare-fun x726 () Int)
(declare-fun x1899 () x1401)
(declare-fun x1127 () Bool)
(declare-fun x995 () x1401)
(declare-fun x339 () x1401)
(declare-fun x1181 () Bool)
(declare-fun x1864 () Bool)
(declare-fun x497 () Int)
(declare-fun x1902 () x1401)
(declare-fun x976 () Bool)
(declare-fun x919 () Int)
(declare-fun x1978 () Bool)
(declare-fun x1983 () Int)
(declare-fun x16 () x1401)
(declare-fun x92 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x540 () Int)
(declare-fun x1283 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x639 () x1401)
(declare-fun x492 () Int)
(declare-fun x1510 () Bool)
(declare-fun x52 () Int)
(declare-fun x1811 () x1401)
(declare-fun x1433 () Int)
(declare-fun x1672 (Int) Int)
(declare-fun x2292 () Int)
(declare-fun x1061 () x1401)
(declare-fun x610 () Bool)
(declare-fun x1594 () Int)
(declare-fun x2072 () Int)
(declare-fun x1393 () Int)
(declare-fun x1724 (Int Int) Int)
(declare-fun x1496 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x343 () Int)
(declare-fun x875 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x2245 () x1401)
(declare-fun x1055 () Int)
(declare-fun x1008 () Bool)
(declare-fun x2340 () Int)
(declare-fun x525 () Int)
(declare-fun x1726 () Bool)
(declare-fun x656 () x1401)
(declare-fun x1834 () Int)
(declare-fun x333 () x1401)
(declare-fun x2244 () Int)
(declare-fun x140 () Int)
(declare-fun x1666 () Int)
(declare-fun x1039 () Int)
(declare-fun x1329 () x1401)
(declare-fun x1392 () Int)
(declare-fun x842 () Int)
(declare-fun x1848 () Bool)
(declare-fun x381 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x635 () Int)
(declare-fun x1182 () Int)
(declare-fun x732 () Int)
(declare-fun x1612 () Int)
(declare-fun x1508 () Int)
(declare-fun x907 () Bool)
(declare-fun x237 () Int)
(declare-fun x739 () Int)
(declare-fun x288 () Int)
(declare-fun x264 () Bool)
(declare-fun x714 () Int)
(declare-fun x2029 () Bool)
(declare-fun x2097 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x789 () Int)
(declare-fun x1257 () Bool)
(declare-fun x1943 () Int)
(declare-fun x2100 () Int)
(declare-fun x587 () Int)
(declare-fun x795 () Int)
(declare-fun x1124 () Int)
(declare-fun x1494 () x1401)
(declare-fun x1125 () Int)
(declare-fun x783 () Int)
(declare-fun x206 () Int)
(declare-fun x389 () Int)
(declare-fun x307 () Bool)
(declare-fun x141 () x1401)
(declare-fun x238 () Int)
(declare-fun x214 () x1401)
(declare-fun x1819 () Int)
(declare-fun x1389 () Bool)
(declare-fun x356 () Bool)
(declare-fun x1818 () Int)
(declare-fun x684 () Int)
(declare-fun x625 () Bool)
(declare-fun x2269 () Int)
(declare-fun x1241 () Int)
(declare-fun x1495 () x1401)
(declare-fun x534 () Int)
(declare-fun x967 () Int)
(declare-fun x1343 () Bool)
(declare-fun x367 () Bool)
(declare-fun x90 () Int)
(declare-fun x706 () Int)
(declare-fun x1272 () Bool)
(declare-fun x1351 () Int)
(declare-fun x1615 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x189 () Int)
(declare-fun x1384 () x1401)
(define-fun x1131 ((x1401 x1401) (x1232 Int)) x1401 (ite ((_ is x1245) x1401) (x1245 (x337 x1401) (+ x1232 (x939 x1401))) (ite ((_ is x1727) x1401) (x1727 (x190 x1401) (x2012 x1401) (+ x1232 (x2264 x1401))) (x331 (+ (x2324 x1401) x1232)))))
(define-fun x1952 ((x1027 Int)) Int (ite (and (<= 0 x1027) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1027)) x1027 (- x1027 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1259 ((x1027 Int)) Int (ite (and (> 0 x1027) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1027)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1027) x1027))
(define-fun x2220 ((x1607 Int)) Bool (and (<= 0 x1607) (< x1607 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1011 ((x1607 Int)) Bool (and (= x1607 (x2309 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1607)) (= x1607 (x2309 x1607 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x2048 ((x1607 Int)) Bool (and (= (x2309 0 x1607) 0) (= (x2309 x1607 0) 0)))
(define-fun x165 ((x1607 Int)) Bool (= (x2309 x1607 x1607) x1607))
(define-fun x1546 ((x1607 Int)) Bool (and (x165 x1607) (x1011 x1607) (x2048 x1607)))
(define-fun x636 ((x1607 Int)) Bool (= (x2309 1461501637330902918203684832716283019655932542975 x1607) (x2309 1461501637330902918203684832716283019655932542975 (x2309 1461501637330902918203684832716283019655932542975 x1607))))
(define-fun x1236 ((x1607 Int)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x1607) (>= x1607 0)) (= x1607 (x2309 1461501637330902918203684832716283019655932542975 x1607))))
(define-fun x2099 ((x1607 Int)) Bool (=> (= (x2309 1461501637330902918203684832716283019655932542975 x1607) x1607) (and (< x1607 1461501637330902918203684832716283019655932542976) (>= x1607 0))))
(define-fun x793 ((x1607 Int)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x1607) (< x1607 2923003274661805836407369665432566039311865085952)) (= (x2309 1461501637330902918203684832716283019655932542975 x1607) (- x1607 1461501637330902918203684832716283019655932542976))))
(define-fun x1735 ((x1607 Int) (x1073 Int)) Bool (and (<= 0 x1073) (= x1607 (+ (* x1073 1461501637330902918203684832716283019655932542976) (x2309 1461501637330902918203684832716283019655932542975 x1607)))))
(define-fun x590 ((x1607 Int) (x2062 Int)) Bool (and (x1735 x1607 x2062) (x636 x1607) (x1236 x1607) (x793 x1607) (x2099 x1607)))
(define-fun x2222 ((x1607 Int) (x1073 Int)) Bool (= (x2309 x1073 x1607) (x2309 x1607 x1073)))
(define-fun x302 ((x1607 Int) (x1073 Int)) Bool (and (=> (>= x1607 0) (>= x1607 (x2309 x1607 x1073))) (<= 0 (x2309 x1607 x1073)) (=> (<= 0 x1073) (>= x1073 (x2309 x1607 x1073)))))
(define-fun x247 ((x1607 Int) (x1073 Int)) Bool (and (x2222 x1607 x1073) (x302 x1607 x1073)))
(define-fun x2337 ((x1607 Int) (x2062 Int)) Bool (and (x590 x1607 x2062) (x247 x1607 1461501637330902918203684832716283019655932542975)))
(define-fun x914 ((x1607 Int)) Bool (= (x2309 26959946667150639794667015087019630673637144422540572481103610249215 (x2309 26959946667150639794667015087019630673637144422540572481103610249215 x1607)) (x2309 26959946667150639794667015087019630673637144422540572481103610249215 x1607)))
(define-fun x979 ((x1607 Int)) Bool (=> (and (>= x1607 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1607)) (= (x2309 26959946667150639794667015087019630673637144422540572481103610249215 x1607) x1607)))
(define-fun x1314 ((x1607 Int)) Bool (=> (= x1607 (x2309 26959946667150639794667015087019630673637144422540572481103610249215 x1607)) (and (<= 0 x1607) (< x1607 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x222 ((x1607 Int)) Bool (=> (and (> 53919893334301279589334030174039261347274288845081144962207220498432 x1607) (<= 26959946667150639794667015087019630673637144422540572481103610249216 x1607)) (= (x2309 26959946667150639794667015087019630673637144422540572481103610249215 x1607) (- x1607 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x235 ((x1607 Int) (x1073 Int)) Bool (and (>= x1073 0) (= (+ (* x1073 26959946667150639794667015087019630673637144422540572481103610249216) (x2309 26959946667150639794667015087019630673637144422540572481103610249215 x1607)) x1607)))
(define-fun x1584 ((x1607 Int) (x2062 Int)) Bool (and (x914 x1607) (x222 x1607) (x1314 x1607) (x979 x1607) (x235 x1607 x2062)))
(define-fun x1960 ((x1607 Int) (x2062 Int)) Bool (and (x247 x1607 26959946667150639794667015087019630673637144422540572481103610249215) (x1584 x1607 x2062)))
(define-fun x299 ((x1607 Int)) Bool (= (x2309 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2309 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1607)) (x2309 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1607)))
(define-fun x661 ((x1607 Int)) Bool (=> (and (< x1607 32) (>= x1607 0)) (= (x2309 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1607) 0)))
(define-fun x980 ((x1607 Int) (x1073 Int) (x375 Int) (x1540 Int)) Bool (and (>= x375 0) (= (* x375 32) (x2309 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1607)) (< x375 3618502788666131106986593281521497120414687020801267626233049500247285301248) (>= x1073 0) (= x1607 (+ x1073 (* 32 x375) (* x1540 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (< x1540 1) (<= 0 x1540) (> 32 x1073)))
(define-fun x417 ((x1607 Int) (x200 Int) (x1959 Int) (x1467 Int)) Bool (and (x980 x1607 x200 x1959 x1467) (x661 x1607) (x299 x1607)))
(define-fun x2190 ((x1607 Int) (x200 Int) (x1959 Int) (x1467 Int)) Bool (and (x417 x1607 x200 x1959 x1467) (x247 x1607 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1420 ((x1335 Int)) Int (ite (< x1335 x910) (x1285 x1335) 0))
(define-fun x163 ((x1335 Int)) Int (x1936 x1335))
(define-fun x2153 ((x1335 Int)) Int (x1936 x1335))
(define-fun x774 ((x1335 Int)) Int (x2315 x1335))
(define-fun x1596 ((x1335 Int)) Int (x2315 x1335))
(define-fun x2002 ((x1335 Int)) Int (x1672 x1335))
(define-fun x2172 ((x1335 Int)) Int (x1672 x1335))
(define-fun x1268 ((x1335 Int)) Int (x272 x1335))
(define-fun x1937 ((x1335 Int)) Int (x272 x1335))
(define-fun x102 ((x1335 x1401)) Int (ite (= (x1201 274184521717934524641157099916833587206) x1335) x2072 (x355 x1335)))
(define-fun x129 ((x1335 x1401)) Int (ite (= (x1201 x963) x1335) x2173 (x102 x1335)))
(define-fun x2164 ((x1335 x1401)) Int (ite (= x1335 (x1201 x963)) x942 (x129 x1335)))
(define-fun x225 ((x1335 x1401)) Int (ite (= (x1201 274184521717934524641157099916833587206) x1335) x1786 (x2164 x1335)))
(define-fun x212 ((x1335 x1401)) Int (ite x495 (x225 x1335) (x355 x1335)))
(define-fun x1561 ((x1335 x1401)) Int (ite (= x1335 x778) x739 (x865 x1335)))
(define-fun x449 ((x1335 x1401)) Int (ite (= x1335 x1787) x1852 (x1561 x1335)))
(define-fun x530 ((x1335 x1401)) Int (ite (= x1335 x1464) x1738 (x1965 x1335)))
(define-fun x88 ((x1335 x1401)) Int (ite (= x1208 x1335) x677 (x530 x1335)))
(define-fun x2273 ((x1335 x1401)) Int (ite (= x1335 x1872) x685 (x596 x1335)))
(define-fun x1802 ((x1335 x1401)) Int (ite x495 (x2273 x1335) (x596 x1335)))
(define-fun x1169 ((x1335 x1401)) Int (ite (= x1335 x1041) x142 (x1301 x1335)))
(define-fun x1754 ((x1335 x1401)) Int (ite (= x318 x1335) x142 (x1301 x1335)))
(define-fun x786 ((x1335 x1401)) Int (ite (and x707 (not x1512)) (x1169 x1335) (x1754 x1335)))
(define-fun x567 ((x1335 x1401)) Int (ite (= x1335 x1483) x1592 (x915 x1335)))
(define-fun x1928 ((x1335 x1401)) Int (ite (= x1335 x609) x1040 (x1222 x1335)))
(define-fun x1471 ((x1335 Int)) Int (ite (= x2145 x1335) x1736 (x812 x1335)))
(define-fun x363 ((x1335 Int)) Int (ite (= x1347 x1335) x893 (x1471 x1335)))
(define-fun x216 ((x1335 Int)) Int (ite (= x613 x1335) x563 (x1756 x1335)))
(define-fun x2308 ((x1335 Int)) Int (ite (= x475 x1335) x735 (x363 x1335)))
(define-fun x436 ((x1335 Int)) Int (ite (= x1335 x715) x1594 (x498 x1335)))
(define-fun x2154 ((x1335 Int)) Int (ite (= x1099 x1335) 0 (x1262 x1335)))
(define-fun x1881 ((x1335 x1401)) Int (ite (= x1335 x347) x142 (x487 x1335)))
(define-fun x1795 ((x1335 x1401)) Int (ite (= x2049 x1335) x142 (x487 x1335)))
(define-fun x1119 ((x1335 x1401)) Int (ite (= x1142 x1335) x142 (x487 x1335)))
(define-fun x1771 ((x1335 x1401)) Int (ite (and x1070 (not x1062) (not x903)) (x1881 x1335) (ite (and x1070 x903 (not x1062)) (x1795 x1335) (x1119 x1335))))
(define-fun x397 ((x1335 x1401)) Int (ite (= x1335 x890) x1693 (x1404 x1335)))
(define-fun x1284 ((x1335 x1401)) Int (ite (and x1070 x1702) (x1404 x1335) (x397 x1335)))
(define-fun x983 ((x1335 Int)) Int (ite (= x1335 128) x2130 (x1591 x1335)))
(define-fun x1661 ((x1335 Int)) Int (ite (= x1335 160) x1334 (x2034 x1335)))
(define-fun x2098 ((x1335 x1401)) Int (ite (= x1335 x349) x1292 (x1633 x1335)))
(define-fun x170 ((x1335 x1401)) Int (ite (and x65 x707) (x1633 x1335) (x2098 x1335)))
(define-fun x298 ((x1335 Int)) Int (ite (= x1335 x1237) x427 (x1658 x1335)))
(define-fun x1924 ((x1335 Int)) Int (ite (= x386 x1335) x604 (x1411 x1335)))
(define-fun x543 ((x1335 Int)) Int (ite (and (not x1989) x2064 (not x1444)) (x1262 x1335) (x2154 x1335)))
(define-fun x1586 ((x1335 Int)) Int (ite (= 0 x1335) 1 (x9 x1335)))
(define-fun x1001 ((x1335 x1401)) Int (ite (= x521 x1335) x2202 (x638 x1335)))
(define-fun x6 ((x1335 x1401)) Int (ite (= x1335 x265) x1988 (x1001 x1335)))
(define-fun x2329 ((x1335 x1401)) Int (ite x1588 (ite (and x224 x1883) (x638 x1335) (x6 x1335)) (x638 x1335)))
(define-fun x737 ((x1335 x1401)) Int (ite (= x767 x1335) x1355 (x1079 x1335)))
(define-fun x1132 ((x1335 x1401)) Int (ite (= x2079 x1335) x1609 (x737 x1335)))
(define-fun x1399 ((x1335 x1401)) Int (ite x1588 (ite (and x1883 x224) (x1132 x1335) (x1079 x1335)) (x1079 x1335)))
(define-fun x193 ((x1335 x1401)) Int (ite (= x1335 x1291) x623 (x460 x1335)))
(define-fun x1020 ((x1335 x1401)) Int (ite (and x625 (not x107)) (x193 x1335) (x460 x1335)))
(define-fun x94 ((x1335 x1401)) Int (ite (= x1335 x1899) x270 (x2118 x1335)))
(define-fun x91 ((x1335 x1401)) Int (ite (and (not x867) x1068 (not x367)) (x94 x1335) (x2118 x1335)))
(define-fun x1961 ((x1335 Int)) Int (ite (= x43 x1335) x862 (x1228 x1335)))
(define-fun x876 ((x1335 Int)) Int (ite (= x1622 x1335) x2253 (x1961 x1335)))
(define-fun x1261 ((x1335 Int)) Int (ite (= x1564 x1335) x994 (x846 x1335)))
(define-fun x985 ((x1335 Int)) Int (ite (= x1335 x2134) x1998 (x876 x1335)))
(define-fun x121 ((x1335 Int)) Int (ite (= x1104 x1335) x1117 (x965 x1335)))
(define-fun x1146 ((x1335 Int)) Int (ite (= x488 x1335) 0 (x952 x1335)))
(define-fun x531 ((x1335 Int)) Int (ite (= x1335 128) x1433 (x2090 x1335)))
(define-fun x1224 ((x1335 Int)) Int (ite (= x1335 160) x73 (x1891 x1335)))
(define-fun x1676 ((x1335 Int)) Int (ite (= x523 x1335) x1304 (x1000 x1335)))
(define-fun x1898 ((x1335 Int)) Int (ite (= x1335 x78) x1962 (x1249 x1335)))
(define-fun x2169 ((x1335 Int)) Int (ite (and (not x1473) (not x1904) x293) (x952 x1335) (x1146 x1335)))
(define-fun x1126 ((x1335 x1401)) Int (ite (= x1335 (x1201 274184521717934524641157099916833587206)) x1567 (x212 x1335)))
(define-fun x1778 ((x1335 x1401)) Int (ite (= (x1201 x864) x1335) x1031 (x1126 x1335)))
(define-fun x220 ((x1335 Int)) Int (ite (= x1335 0) 1 (x787 x1335)))
(define-fun x723 ((x1335 Int)) Int (ite (= x1335 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2356 x1335)))
(define-fun x2268 ((x1335 Int)) Int (ite (= x1335 0) x779 (x2176 x1335)))
(define-fun x2133 ((x1335 Int)) Int (ite (= x1335 128) x779 (x1370 x1335)))
(define-fun x1751 ((x1335 Int)) Int (ite (= x1335 4) 128 (x1420 x1335)))
(define-fun x429 ((x1335 Int)) Int (ite (= 36 x1335) x2238 (x1751 x1335)))
(define-fun x506 ((x1335 Int)) Int (ite (= 68 x1335) x1371 (x429 x1335)))
(define-fun x2251 ((x1335 Int)) Int (ite (= 100 x1335) x888 (x506 x1335)))
(define-fun x1779 ((x1335 Int)) Int (ite (= 132 x1335) x1994 (x2251 x1335)))
(define-fun x1349 ((x1335 Int)) Int (ite (and (> (+ 164 x370) x1335) (>= x1335 164)) (x712 (+ 0 (- x1335 164))) (x1779 x1335)))
(define-fun x2346 ((x1335 Int)) Int (ite (= x1897 x1335) x1077 (x1349 x1335)))
(define-fun x451 ((x1335 Int)) Int (ite (and (>= x1335 x492) (> (+ x353 x492) x1335)) (x673 (+ 0 (- x1335 x492))) (x2346 x1335)))
(define-fun x1886 ((x1335 Int)) Int (ite (= x1335 x660) x953 (x451 x1335)))
(define-fun x74 ((x1335 Int)) Int (ite (and (>= x1335 x1021) (> (+ x1021 x1497) x1335)) (x1346 (+ (- x1335 x1021) 0)) (x1886 x1335)))
(define-fun x1792 ((x1335 Int)) Int (ite (= x402 x1335) x917 (x74 x1335)))
(define-fun x1950 ((x1335 Int)) Int (ite (and (> (+ x422 x500) x1335) (>= x1335 x422)) (x1053 (+ 0 (- x1335 x422))) (x1792 x1335)))
(define-fun x2206 ((x1335 x1401)) Int (ite (= x85 x1335) x142 (x487 x1335)))
(define-fun x594 ((x1335 x1401)) Int (ite (= x533 x1335) x142 (x487 x1335)))
(define-fun x2056 ((x1335 x1401)) Int (ite (= x1335 x1882) x142 (x487 x1335)))
(define-fun x1023 ((x1335 x1401)) Int (ite (and x315 x70) (x2206 x1335) (ite (and x70 x811 (not x315)) (x594 x1335) (x2056 x1335))))
(define-fun x476 ((x1335 x1401)) Int (ite (= x1335 x1895) x1880 (x1404 x1335)))
(define-fun x1128 ((x1335 x1401)) Int (ite (and x1446 x70) (x1404 x1335) (x476 x1335)))
(define-fun x1849 ((x1335 x1401)) Int (ite (= x464 x1335) x1737 (x865 x1335)))
(define-fun x1745 ((x1335 x1401)) Int (ite (= x1335 x136) x1392 (x1849 x1335)))
(define-fun x1106 ((x1335 x1401)) Int (ite (= x1335 x2178) x1932 (x1152 x1335)))
(define-fun x679 ((x1335 x1401)) Int (ite (= x1524 x1335) x1499 (x1106 x1335)))
(define-fun x2186 ((x1335 x1401)) Int (ite (and x1476 x759) (x1152 x1335) (x679 x1335)))
(define-fun x1740 ((x1335 x1401)) Int (ite (and x611 (not x518)) (x1152 x1335) (ite (and x1403 (not x485)) (x865 x1335) (ite x7 (x2186 x1335) (x1152 x1335)))))
(define-fun x1871 ((x1335 x1401)) Int (ite (= x931 x1335) x134 (x1965 x1335)))
(define-fun x900 ((x1335 x1401)) Int (ite (= x1335 x2019) x2234 (x1871 x1335)))
(define-fun x1488 ((x1335 x1401)) Int (ite (= x1335 x415) x1303 (x1674 x1335)))
(define-fun x1810 ((x1335 x1401)) Int (ite (= x22 x1335) x2015 (x1488 x1335)))
(define-fun x768 ((x1335 x1401)) Int (ite (and x759 x1476) (x1810 x1335) (x1674 x1335)))
(define-fun x432 ((x1335 x1401)) Int (ite (and x611 (not x518)) (x1674 x1335) (ite (and (not x485) x1403) (x1965 x1335) (ite x7 (x768 x1335) (x1674 x1335)))))
(define-fun x830 ((x1335 x1401)) Int (ite (= x1813 x1335) x967 (x915 x1335)))
(define-fun x2193 ((x1335 x1401)) Int (ite (= x1335 x744) x2100 (x1577 x1335)))
(define-fun x2331 ((x1335 x1401)) Int (ite (and (not x742) x369) (x2193 x1335) (x1577 x1335)))
(define-fun x1843 ((x1335 x1401)) Int (ite (= x881 x1335) x2047 (x1222 x1335)))
(define-fun x2039 ((x1335 x1401)) Int (ite (= x1335 x921) x2292 (x148 x1335)))
(define-fun x1873 ((x1335 x1401)) Int (ite (and x2137 (not x1272) (not x2347)) (x2039 x1335) (x148 x1335)))
(define-fun x267 ((x1335 x1401)) Int (ite (= x1335 x1803) x856 (x596 x1335)))
(define-fun x601 ((x1335 x1401)) Int (ite (and x1317 x1820) (x596 x1335) (x267 x1335)))
(define-fun x966 ((x1335 Int)) Int (ite (= x1335 x1716) x717 (x188 x1335)))
(define-fun x629 ((x1335 Int)) Int (ite (= x17 x1335) x2336 (x966 x1335)))
(define-fun x1531 ((x1335 Int)) Int (ite (= x2317 x1335) x973 (x629 x1335)))
(define-fun x228 ((x1335 Int)) Int (ite (and x1317 x1820) (x188 x1335) (x1531 x1335)))
(define-fun x1837 ((x1335 Int)) Int (ite (= x12 x1335) x426 (x228 x1335)))
(define-fun x418 ((x1335 Int)) Int (ite (= x86 x1335) x400 (x1837 x1335)))
(define-fun x2168 ((x1335 Int)) Int (ite (= x1861 x1335) x1356 (x2307 x1335)))
(define-fun x155 ((x1335 Int)) Int (ite (and x1317 x1820) (x2307 x1335) (x2168 x1335)))
(define-fun x1860 ((x1335 Int)) Int (ite (= x1335 x969) x178 (x155 x1335)))
(define-fun x1956 ((x1335 Int)) Int (ite (= x159 x1335) x1135 (x418 x1335)))
(define-fun x29 ((x1335 Int)) Int (ite (= x2057 x1335) x117 (x408 x1335)))
(define-fun x1542 ((x1335 Int)) Int (ite (= x1335 x1045) 0 (x912 x1335)))
(define-fun x532 ((x1335 Int)) Int (ite (= x2263 x1335) x766 (x511 x1335)))
(define-fun x1574 ((x1335 Int)) Int (ite (= x2263 x1335) x587 (x511 x1335)))
(define-fun x1831 ((x1335 Int)) Int (ite (= x1156 x1335) x1858 (x1766 x1335)))
(define-fun x1110 ((x1335 Int)) Int (ite (= x1335 x1888) 0 (x1151 x1335)))
(define-fun x2265 ((x1335 x1401)) Int (ite (= x77 x1335) x142 (x1301 x1335)))
(define-fun x1071 ((x1335 x1401)) Int (ite (= x1335 x2354) x142 (x1301 x1335)))
(define-fun x490 ((x1335 x1401)) Int (ite (and x2231 x2287) (x2265 x1335) (x1071 x1335)))
(define-fun x882 ((x1335 x1401)) Int (ite (= x1335 x1061) x1604 (x1633 x1335)))
(define-fun x1281 ((x1335 x1401)) Int (ite (and x1278 x2287) (x1633 x1335) (x882 x1335)))
(define-fun x775 ((x1335 Int)) Int (ite (= 128 x1335) x1051 (x982 x1335)))
(define-fun x111 ((x1335 Int)) Int (ite (and x315 x70) (x982 x1335) (x775 x1335)))
(define-fun x2316 ((x1335 Int)) Int (ite (= x1335 x706) x2303 (x111 x1335)))
(define-fun x1216 ((x1335 Int)) Int (ite (= 160 x1335) x138 (x548 x1335)))
(define-fun x300 ((x1335 Int)) Int (ite (and x315 x70) (x548 x1335) (x1216 x1335)))
(define-fun x282 ((x1335 Int)) Int (ite (= x1335 x1967) x837 (x300 x1335)))
(define-fun x2158 ((x1335 Int)) Int (ite (= x1335 x2132) x2091 (x736 x1335)))
(define-fun x1744 ((x1335 Int)) Int (ite (= x2221 x1335) x1287 (x2158 x1335)))
(define-fun x728 ((x1335 Int)) Int (ite (= x52 x1335) x8 (x741 x1335)))
(define-fun x2257 ((x1335 Int)) Int (ite (= x2111 x1335) x1456 (x728 x1335)))
(define-fun x296 ((x1335 Int)) Int (ite (and (not x538) x2031 (not x1154)) (x1151 x1335) (x1110 x1335)))
(define-fun x873 ((x1335 x1401)) Int (ite (= x1335 (x1201 274184521717934524641157099916833587206)) x1665 (x355 x1335)))
(define-fun x1315 ((x1335 x1401)) Int (ite (= x1335 (x1201 x1935)) x1226 (x873 x1335)))
(define-fun x2117 ((x1335 x1401)) Int (ite (= (x1201 x1935) x1335) x2288 (x1315 x1335)))
(define-fun x314 ((x1335 x1401)) Int (ite (= x1335 (x1201 274184521717934524641157099916833587206)) x805 (x2117 x1335)))
(define-fun x2095 ((x1335 x1401)) Int (ite (and x1317 x1820) (x355 x1335) (x314 x1335)))
(define-fun x608 ((x1335 x1401)) Int (ite (= (x1201 274184521717934524641157099916833587206) x1335) x1390 (x2095 x1335)))
(define-fun x143 ((x1335 x1401)) Int (ite (= x1335 (x1201 x404)) x1963 (x608 x1335)))
(define-fun x1177 ((x1335 Int)) Int (ite (= x1335 0) 1 (x1816 x1335)))
(define-fun x1435 ((x1335 Int)) Int (ite (= x1335 x2263) x2036 (x325 x1335)))
(define-fun x2194 ((x1335 Int)) Int (ite (and (not x1188) x1507) (x1435 x1335) (x325 x1335)))
(define-fun x1713 ((x1335 Int)) Int (ite (= 0 x1335) 1 (x63 x1335)))
(define-fun x428 ((x1335 Int)) Int (ite (= 0 x1335) 1 (x63 x1335)))
(define-fun x1231 ((x1335 Int)) Int (ite (and x1600 x1646) (x1713 x1335) (x428 x1335)))
(define-fun x2050 ((x1335 Int)) Int (ite (and (> (+ x223 x2036) x1335) (<= x223 x1335)) (x1231 (+ (- x1335 x223) 0)) (x1568 x1335)))
(define-fun x1437 ((x1335 Int)) Int (ite (and (not x1188) x1507) (x2050 x1335) (x1568 x1335)))
(define-fun x1171 ((x1335 Int)) Int (ite (= x1335 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x379 x1335)))
(define-fun x1587 ((x1335 Int)) Int (ite (= x1335 0) x1608 (x1866 x1335)))
(define-fun x583 ((x1335 Int)) Int (ite (= x1335 128) x1608 (x2280 x1335)))
(define-fun x108 ((x1335 Int)) Int (ite (= 0 x1335) 1 (x9 x1335)))
(define-fun x1784 ((x1335 Int)) Int (ite (= 0 x1335) 1 (x787 x1335)))
(define-fun x847 ((x1335 Int)) Int (ite (= 0 x1335) x640 (x2176 x1335)))
(define-fun x1209 ((x1335 Int)) Int (ite (= 128 x1335) x640 (x1370 x1335)))
(define-fun x232 ((x1335 Int)) Int (ite (= 0 x1335) 1 (x1816 x1335)))
(define-fun x2286 ((x1335 Int)) Int (ite (= 0 x1335) x2076 (x1866 x1335)))
(define-fun x1176 ((x1335 Int)) Int (ite (= 128 x1335) x2076 (x2280 x1335)))
(define-fun x319 ((x1335 Int)) Int (ite (and x1138 x861) (x1586 x1335) (x108 x1335)))
(define-fun x1299 ((x1335 Int)) Int (ite (= x2180 x1335) x833 (x2017 x1335)))
(define-fun x1571 ((x1335 Int)) Int (ite (and (>= x1335 x161) (> (+ x833 x161) x1335)) (x319 (+ (- x1335 x161) 0)) (x359 x1335)))
(define-fun x2210 ((x1335 Int)) Int (ite (and x1590 x495) (x2017 x1335) (x1299 x1335)))
(define-fun x361 ((x1335 Int)) Int (ite (and x495 x1590) (x359 x1335) (x1571 x1335)))
(define-fun x2310 ((x1335 Int)) Int (ite (and x1883 x224) (x220 x1335) (x1784 x1335)))
(define-fun x24 ((x1335 x1401)) Int (ite (= x1335 (x1201 x864)) x1094 (x1778 x1335)))
(define-fun x578 ((x1335 Int)) Int (ite (= x1335 x1585) x1808 (x868 x1335)))
(define-fun x113 ((x1335 Int)) Int (ite (and (>= x1335 x382) (> (+ x1808 x382) x1335)) (x2310 (+ (- x1335 x382) 0)) (x1996 x1335)))
(define-fun x541 ((x1335 Int)) Int (ite (and x1782 x1588) (x868 x1335) (x578 x1335)))
(define-fun x462 ((x1335 Int)) Int (ite (and x1588 x1782) (x1996 x1335) (x113 x1335)))
(define-fun x1559 ((x1335 Int)) Int (ite (and x255 x1046) (x2133 x1335) (x1209 x1335)))
(define-fun x1910 ((x1335 Int)) Int (x712 x1335))
(define-fun x503 ((x1335 Int)) Int (x673 x1335))
(define-fun x499 ((x1335 Int)) Int (x1346 x1335))
(define-fun x139 ((x1335 Int)) Int (x1053 x1335))
(define-fun x2205 ((x1335 Int)) Int (ite (and x1476 x759) (x1177 x1335) (x232 x1335)))
(define-fun x2332 ((x1335 x1401)) Int (ite (= x1335 (x1201 x404)) x2126 (x143 x1335)))
(define-fun x2038 ((x1335 Int)) Int (ite (= x1335 x1271) x1943 (x2028 x1335)))
(define-fun x2214 ((x1335 Int)) Int (ite (and (<= x1515 x1335) (> (+ x1515 x1943) x1335)) (x2205 (+ 0 (- x1335 x1515))) (x1441 x1335)))
(define-fun x977 ((x1335 Int)) Int (ite (and x7 x2029) (x1441 x1335) (x2214 x1335)))
(define-fun x1985 ((x1335 Int)) Int (ite (and x7 x2029) (x2028 x1335) (x2038 x1335)))
(define-fun x135 ((x1335 Int)) Int (ite (and x560 x889) (x583 x1335) (x1176 x1335)))
(define-fun x23 ((x1607 Int)) Bool (=> (and (not (= x1607 635128645)) (not (= x1607 274184521717934524641157099916833587214)) (not (= 649617121 x1607)) (not (= 826074471 x1607)) (not (= 2835717307 x1607)) (> x1607 10000) (not (= x1607 1968616202)) (not (= x1607 759532456)) (not (= 142201243 x1607)) (not (= 243137395 x1607)) (not (= x1607 87118632)) (not (= 274184521717934524641157099916833587218 x1607)) (not (= 911411945 x1607)) (not (= 1461501637330902918203684832716283019655932542976 x1607)) (not (= 2293535753 x1607)) (not (= 604800 x1607)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x1607)) (not (= x1607 1000000000000000000)) (not (= 468353030 x1607)) (not (= 18446744073709551615 x1607)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1607)) (not (= x1607 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 842085797 x1607)) (not (= x1607 2061678023)) (not (= x1607 2514000705)) (not (= x1607 115792089237316195423570985008687907853269984665640564039457)) (not (= x1607 2258409472)) (not (= x1607 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1607)) (not (= 1889567281 x1607)) (not (= x1607 69947311)) (not (= x1607 274184521717934524641157099916833587206)) (not (= 2211524764 x1607)) (not (= 1986467848 x1607)) (not (= 1461501637330902918203684832716283019655932542975 x1607))) (not ((_ is x331) (x1201 x1607)))))
(assert (= x568 (=> (and (= (= x2063 0) x1863) (= x2302 (x2309 1461501637330902918203684832716283019655932542975 x819)) (= (x2309 1461501637330902918203684832716283019655932542975 x510) x1398) (<= x2063 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2258 (x1727 (x1201 x1398) x2044 0)) (<= 0 x2063) (= x2063 (x1771 x2258)) (= (x1727 (x1201 x430) (x331 7) 0) x753) (= (x1727 (x1201 x2302) x753 0) x2044)) (and (=> (and (not x1863) (= x430 x908)) x996) (=> (and (not x2198) (= x2198 (< 0 x2305)) x1863 (= (x1259 (- x430 1)) x2305)) x762)))))
(assert (x2220 x80))
(assert (= (=> (and (= x1094 (x1778 (x1201 x864))) (not (= 0 x1721)) (= x425 (x541 x834)) (= x1782 (= 0 x1808)) (= (< (x24 (x1201 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1210) (or (not x154) (and (= x1641 (not x566)) (= (= x2074 0) x566) (= (x1952 (+ x834 32)) x667) (< 0 x2074) (= x409 (ite x1641 1 0)) (= (x541 x834) x80) (= x2074 x409) x154 (= (x462 x667) x2074) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x80) true) (< x80 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x80))))) (= x154 (< 0 x425)) (or (and x1782 (= 96 x834)) (and (not x1782) (= x834 x1585) (= (x1952 (+ x796 96)) x382))) x1210) x1358) x373))
(assert (x2220 x1415))
(assert (=> (>= 10000 x198) (= (x331 x198) (x1201 x198))))
(assert (x2220 x2001))
(assert (x23 x1242))
(assert (= x1551 (=> (= x1075 (< 0 x1971)) (and (=> (not x1075) x701) (=> x1075 x940)))))
(assert (= (=> (and (= (x1259 (- x312 1)) x241) (= (< 0 x241) x280)) (and (=> (not x280) x1043) (=> x280 x1078))) x1195))
(assert (x2220 x893))
(assert (= x241 (x1323 (x1201 x241))))
(assert (x2220 x1040))
(assert (= (x1323 (x1201 x2229)) x2229))
(assert (x2220 x1983))
(assert (=> (<= x388 10000) (= (x1201 x388) (x331 x388))))
(assert (x2220 x838))
(assert (= true x1389))
(assert (x2220 x1521))
(assert (= (=> (= 0 x2025) x514) x1364))
(assert (x1546 x466))
(assert (= x1009 (=> (and (= (x1727 (x1201 x312) (x331 6) 0) x1902) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2053) (<= 0 x2053) (not (< x2053 x312)) (= x1979 (x490 x1544)) (= (= x1979 0) x2021) (= (x1727 (x1201 x98) x1902 0) x1544) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1979) (<= 0 x1979)) (and (=> (and (= x167 (x1281 x1494)) (<= x167 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1494 (x1727 (x1201 x98) x986 0)) (not x2021) (= x277 x167) (= (x1727 (x1201 x312) (x331 10) 0) x986) (<= 0 x167) (= 0 x2359)) x1402) (=> x2021 x1161)))))
(assert (x2220 x1100))
(assert (x23 x1918))
(assert (= x546 (=> (and (= x680 (x355 (x1201 274184521717934524641157099916833587206))) (= (x355 (x1201 x1935)) x946) x2182 (= x368 x1946) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x946) x2182) (= (x355 (x1201 274184521717934524641157099916833587206)) x1665) (= (>= x680 0) x1889) x1889 x340 (= (= x1935 274184521717934524641157099916833587218) x1646) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x873 (x1201 x1935))) x340) (= (x873 (x1201 x1935)) x1226)) (and (=> (not x1646) x2197) (=> (and (= x491 x1879) (= 274184521717934524641157099916833587206 x2088) (= (x1727 (x1201 x717) (x331 1) 0) x1004) (= x446 x1946) (= (or (and (= true (<= x311 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x311 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x311)) x1992) (= x1350 x1968) (= x2036 32) (= (x1727 (x1201 x717) (x331 1) 0) x2019) x1646 (= x956 x1879) (= x14 x717) (>= x1350 0) (= (x899 (x1201 274184521717934524641157099916833587218)) x617) (not x694) (= x2007 274184521717934524641157099916833587206) (not (> 649617121 x304)) (= (+ x1968 x956) x2234) (not x2240) (= x2336 x491) (not (= 826074471 x304)) (= x2240 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1879 x1350))) (= (x1871 x1004) x1350) (<= x1350 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1387 (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0)) (not (= x304 1889567281)) (= (x1965 x1387) x1136) (< 0 x617) (= 1 x473) (= 68 x446) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x226) (not x968) (= x931 (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0)) (>= x1136 0) (= x2157 x766) (= (< x1136 x1879) x694) (not (= 649617121 x304)) (not (< x446 4)) (= (x1259 (- x446 4)) x311) (not (= x304 2514000705)) (not x1992) (= 2835717307 x304) (<= x14 1461501637330902918203684832716283019655932542975) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1350 x1879)) (= (< x1136 x491) x968) (<= x1136 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1259 (- x1136 x491)) x134)) x1118)))))
(assert (x2220 x2007))
(assert (x2220 x888))
(assert (x23 x39))
(assert (x2220 x905))
(assert (x2220 x345))
(assert (=> (>= 10000 x1650) (= (x1201 x1650) (x331 x1650))))
(assert (= (x1323 (x1201 x1423)) x1423))
(assert (x2220 x2145))
(assert (= 274184521717934524641157099916833587214 (x1323 (x1201 274184521717934524641157099916833587214))))
(assert (x2220 x399))
(assert (= (x1323 (x1201 x2170)) x2170))
(assert (x2220 x1707))
(assert (x2220 x1297))
(assert (= (x1323 (x1201 x2070)) x2070))
(assert (x2220 x1805))
(assert (x2220 x440))
(assert (=> (>= 10000 x207) (= (x331 x207) (x1201 x207))))
(assert (x2220 x1304))
(assert (= x26 (and x1168 x649)))
(assert (x2220 x2036))
(assert (x2220 x1987))
(assert (= (x1323 (x1201 x1918)) x1918))
(assert (x2220 x388))
(assert (x23 x1823))
(assert (x2220 x105))
(assert (x2220 x1604))
(assert (= x1920 (x1323 (x1201 x1920))))
(assert (= x1876 (x1323 (x1201 x1876))))
(assert (x2220 x261))
(assert (x2220 x677))
(assert (= x1332 (=> (and (not (or (> x922 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x922 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x922 32)))) (= x1839 (x135 128)) (= x217 x1839) (not (= x1186 0))) x2040)))
(assert (= x1068 (or (and x1395 x1798) x1655)))
(assert (x23 x2229))
(assert (= x477 (x1323 (x1201 x477))))
(assert (= x1478 (=> (and (= (x1727 (x1201 x510) x275 0) x828) (= x450 x2150) (= (x1727 (x1201 x1971) (x331 7) 0) x316) (<= x1025 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2053) (= x1072 x2293) (<= 0 x1072) (< x392 2293535753) (= x1625 x1197) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2053) (<= 0 x450) (>= x714 0) (= x1777 (x899 (x1201 274184521717934524641157099916833587206))) (>= x1025 0) (>= 1461501637330902918203684832716283019655932542975 x714) (> 911411945 x392) (= x142 x1090) (= 243137395 x392) (>= 1461501637330902918203684832716283019655932542975 x1072) (not (= 69947311 x392)) (<= x510 1461501637330902918203684832716283019655932542975) (= x877 x2293) (< 0 x1777) (= x1197 0) (<= 0 x2053) (<= x3 1461501637330902918203684832716283019655932542975) (= x275 (x1727 (x1201 x819) x316 0)) (> 468353030 x392) (= x1025 (x1771 x828)) (not (> x1971 x2053)) (<= x450 1461501637330902918203684832716283019655932542975) (= (< 0 x1025) x1395) (not (= x392 87118632)) (<= x2053 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x2053 x1971)) (>= 1461501637330902918203684832716283019655932542975 x819) (not (= x392 142201243))) (and (=> (not x1395) x1280) (=> (and (= (x1727 (x1201 x1179) x130 0) x1455) (= (x2309 1461501637330902918203684832716283019655932542975 x819) x1179) (= x615 0) (= x463 (x1284 x1105)) (= (x1727 (x1201 x1971) (x331 9) 0) x130) (>= x463 0) (= x463 x1223) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x463) (= x1105 (x1727 (x1201 x904) x1455 0)) x1395 (= x904 (x2309 1461501637330902918203684832716283019655932542975 x510))) x2227)))))
(assert (x2220 x241))
(assert (x2220 x791))
(assert (x2220 x362))
(assert (= (x1201 842085797) (x331 842085797)))
(assert (= x2200 (=> (and (= (x490 x1362) x1562) (= (x1727 (x1201 x98) x932 0) x1362) (= x932 (x1727 (x1201 x312) (x331 6) 0)) (>= x1562 0) (<= x1562 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1178 (= x1562 0))) (and (=> x1178 x1195) (=> (and (= x726 x312) (not x1178)) x1213)))))
(assert (= (x812 x1241) 0))
(assert (=> (>= 10000 x389) (= (x1201 x389) (x331 x389))))
(assert (x2220 x1140))
(assert (x2220 x1636))
(assert (= x701 (=> (= 0 x751) x1864)))
(assert (x1546 x510))
(assert (x2220 x1533))
(assert (=> (>= 10000 x547) (= (x331 x547) (x1201 x547))))
(assert (= (x673 (- x131 x492)) (x2315 (- x131 x492))))
(assert (x2220 x327))
(assert (= 842085797 (x1323 (x331 842085797))))
(assert (= x2137 (or (and x297 x1706) x696)))
(assert (x2220 x51))
(assert (x2220 x1246))
(assert (=> (>= 10000 x431) (= (x331 x431) (x1201 x431))))
(assert (= x2138 (x1323 (x1201 x2138))))
(assert (x2220 x335))
(assert (= x2148 x549))
(assert (x2220 x2305))
(assert (= (x1323 (x331 468353030)) 468353030))
(assert (x23 x266))
(assert (= (x1323 (x331 2835717307)) 2835717307))
(assert (= x411 (=> (and (> x1221 0) (>= 1461501637330902918203684832716283019655932542975 x266) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2053) (< 0 x1339) (= (x1727 (x1201 x266) x1701 0) x820) (= x1935 (x1950 x1520)) (= (x1950 x1511) x717) (>= 1461501637330902918203684832716283019655932542975 x1935) (< 0 x579) (= x1755 (< 0 x507)) (= x127 (x1727 (x1201 x717) x820 0)) (= (x1950 164) x1113) (= x1520 x2105) (= x507 (x487 x127)) (<= x2053 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1727 (x1201 x1113) (x331 7) 0) x1701) (= x1698 x1511) (<= 0 x507) (<= 0 x2053) (<= 0 x2053) (> x659 0) (<= x717 1461501637330902918203684832716283019655932542975) (<= x507 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> x1113 x2053)) (not (> x1113 x2053)) (= (x1950 x131) x266) (= x955 x131)) (and (=> (and (= x1503 (x1727 (x1201 x717) x1525 0)) (= (x1727 (x1201 x266) x82 0) x1525) (= (x1404 x1503) x1479) (= (x1727 (x1201 x1113) (x331 9) 0) x82) (= x1083 0) x1755 (<= 0 x1479) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1479) (= x1479 x1880)) x1958) (=> (not x1755) x264)))))
(assert (x2220 x947))
(assert (x2220 x1074))
(assert (= (x1346 (- x2357 x1021)) (x1672 (- x2357 x1021))))
(assert (x2220 x1042))
(assert (x2220 x1990))
(assert (x2220 x43))
(assert (= x1312 x1475))
(assert (x2220 x309))
(assert (x2220 x1967))
(assert (x2220 x286))
(assert (= (x1228 x925) 0))
(assert (x2220 x138))
(assert (= x2006 (=> (and (= x1945 (< 0 x1650)) (= x1650 (x1259 (- x312 1)))) (and (=> x1945 x310) (=> (not x1945) x1364)))))
(assert (x2220 x387))
(assert (x2220 x1808))
(assert (x2220 x159))
(assert (x2220 x1211))
(assert (=> (>= 10000 x510) (= (x331 x510) (x1201 x510))))
(assert (x2220 x2112))
(assert (x23 x1293))
(assert (x2220 x1921))
(assert (x2220 x675))
(assert (= x255 x308))
(assert (= x1170 (=> (and (= x1495 (x1727 (x1201 x717) x15 0)) (= (x1727 (x1201 x266) x1428 0) x15) (= (x487 x1495) x2259) (= (= 0 x2259) x663) (>= x2259 0) (<= x2259 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1727 (x1201 x1113) (x331 7) 0) x1428)) (and (=> x663 x1844) (=> (and (not x663) (= x1113 x1513)) x1500)))))
(assert (x2220 x1375))
(assert (x2220 x160))
(assert (x2220 x792))
(assert (x2220 x1609))
(assert (= (x2315 (- x2357 x492)) (x673 (- x2357 x492))))
(assert (x2220 x150))
(assert (x2220 x726))
(assert (= (x272 (- x1520 x422)) (x1053 (- x1520 x422))))
(assert (= x1163 (=> (and (<= x46 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1727 (x1201 x612) (x331 7) 0) x687) (<= 0 x46) (= x1637 (x1727 (x1201 x266) x687 0)) (= x988 (x1727 (x1201 x717) x1637 0)) (= (= 0 x46) x1081) (= x46 (x487 x988))) (and (=> (and (= x1251 (> x727 0)) x1081 (not x1251) (= x727 (x1259 (- x612 1)))) x1685) (=> (and (= x612 x1513) (not x1081)) x1500)))))
(assert (x2220 x1429))
(assert (= x621 (or (and (not x1640) x941) (and (not x933) x371) (and x1874 x1103))))
(assert (x2220 x2116))
(assert (= x574 (x1323 (x1201 x574))))
(assert (x2220 x97))
(assert (= (x1323 (x1201 x1493)) x1493))
(assert (x2220 x920))
(assert (x2220 x1648))
(assert (= x2093 (x1323 (x1201 x2093))))
(assert (=> (<= x819 10000) (= (x331 x819) (x1201 x819))))
(assert (= (x1323 (x1201 x1439)) x1439))
(assert (x2220 x784))
(assert (x2220 x2259))
(assert (= (=> (and (= (x1727 (x1201 x241) (x331 6) 0) x1180) (= (x1727 (x1201 x98) x1180 0) x2131) (= x2113 (= x1342 0)) (<= 0 x1342) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1342) (= x1342 (x490 x2131))) (and (=> (and (= x241 x726) (not x2113)) x1213) (=> (and (= x2353 (x1259 (- x241 1))) (not x2334) (= x2334 (< 0 x2353)) x2113) x1043))) x1078))
(assert (=> (>= 10000 x795) (= (x331 x795) (x1201 x795))))
(assert (= x1864 (=> (and (= (= 0 x751) x2020) (or (and x2020 (= 0 x1088) (= 0 x1302)) (and (= (x1727 (x1201 x751) (x331 10) 0) x119) (= x2279 (= 0 x1470)) (= x648 (x1727 (x1201 x586) x119 0)) (= (x170 x648) x1470) (or (and x2279 (= 0 x1302) (= 0 x1088)) (and (= x1470 x1088) (not x2279) (= 1 x1302))) (not x2020) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1470) (>= x1470 0) (= (x2309 1461501637330902918203684832716283019655932542975 x819) x586)))) x1013)))
(assert (= (and x1206 x2054) x1431))
(assert (x2220 x1977))
(assert (= (x1323 (x1201 x1887)) x1887))
(assert (=> (>= 10000 x1823) (= (x1201 x1823) (x331 x1823))))
(assert (= (x1053 (- 164 x422)) (x272 (- 164 x422))))
(assert (x2220 x972))
(assert (=> (>= 10000 x1293) (= (x1201 x1293) (x331 x1293))))
(assert (x23 x66))
(assert (x2220 x1760))
(assert (x2220 x1250))
(assert (x2220 x1508))
(assert (x2220 x1149))
(assert (x2220 x964))
(assert (=> (>= 10000 x1613) (= (x331 x1613) (x1201 x1613))))
(assert (= x1823 (x1323 (x1201 x1823))))
(assert (x2220 x2313))
(assert (x2220 x405))
(assert (x2220 x1145))
(assert (x2220 x475))
(assert (x2220 x1198))
(assert (x2220 x1))
(assert (x2220 x1459))
(assert (x2220 x195))
(assert (x2220 x743))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x1323 (x331 115792089237316195423570985008687907853269984665640564039457))))
(assert (= 243137395 (x1323 (x331 243137395))))
(assert (= (x1323 (x331 1000000000000000000)) 1000000000000000000))
(assert (x23 x1920))
(assert (x2220 x433))
(assert (x2220 x4))
(assert (x2220 x1838))
(assert (= (and x1835 x258) x1005))
(assert (= (ite (and x1820 x1317) (x1965 x364) (ite (and x1646 x1600) (x900 x364) (x1965 x364))) (x1674 x364)))
(assert (x2220 x1698))
(assert (x2220 x2246))
(assert (= x684 (x1323 (x1201 x684))))
(assert (x2220 x660))
(assert (x2220 x755))
(assert (x2220 x1376))
(assert (x2220 x389))
(assert (x2220 x2357))
(assert (x2220 x777))
(assert (= (=> (= x1640 (> x1113 0)) (and (=> x1640 x1060) (=> (not x1640) x526))) x1469))
(assert (= (x1323 (x1201 x1266)) x1266))
(assert (= x886 (and (not x1646) x1600)))
(assert (= x1403 x493))
(assert (x2220 x587))
(assert (x2220 x3))
(assert (x2220 x184))
(assert (x2220 x1575))
(assert (x23 x324))
(assert (x1546 x1076))
(assert (= (x1323 (x331 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= x1220 (and x1348 (not x1383))))
(assert (=> (<= x434 10000) (= (x331 x434) (x1201 x434))))
(assert (x23 x98))
(assert (x1546 x634))
(assert (x2220 x1789))
(assert (x2220 x1823))
(assert (x2220 x2180))
(assert (x2220 x1487))
(assert (x2220 x1382))
(assert (=> (>= 10000 x1113) (= (x1201 x1113) (x331 x1113))))
(assert (x2220 x1758))
(assert (= (x812 x836) 0))
(assert (x2220 x1031))
(assert (= x696 (or x1619 x2162)))
(assert (x2220 x2157))
(assert (= (x1053 (- x2208 x422)) (x272 (- x2208 x422))))
(assert (= (x1323 (x1201 x547)) x547))
(assert (x2220 x2272))
(assert (= (or (and (not x390) x1431) (and x657 (not x2228))) x1203))
(assert (= x1408 (=> (= x303 (< 0 x684)) (and (=> (not x303) x682) (=> x303 x1486)))))
(assert (= (x1936 (- x825 164)) (x712 (- x825 164))))
(assert (x2220 x1651))
(assert (x2220 x341))
(assert (= (x1323 (x1201 x789)) x789))
(assert (x2220 x1742))
(assert (x2220 x459))
(assert (= (x1323 (x1201 x2322)) x2322))
(assert (= (x1201 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x331 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x2220 x486))
(assert (= 142201243 (x1323 (x331 142201243))))
(assert (not x2278))
(assert (= 0 (x188 x1145)))
(assert (= (=> (and (<= x1548 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2053) (not (> x1971 x2053)) (= (x2309 1461501637330902918203684832716283019655932542975 x819) x1439) (<= 0 x1548) (= x258 (= 0 x1548)) (= (x1727 (x1201 x1439) x2314 0) x439) (= (x786 x439) x1548) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2053) (= (x1727 (x1201 x1971) (x331 6) 0) x2314)) (and (=> x258 x1551) (=> (and (= x2322 (x2309 1461501637330902918203684832716283019655932542975 x819)) (= x1969 (x1727 (x1201 x1971) (x331 10) 0)) (not x258) (= x1130 (x170 x804)) (= x1088 x1130) (= x804 (x1727 (x1201 x2322) x1969 0)) (<= x1130 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1130 0) (= 0 x1302)) x1013))) x1783))
(assert (=> (>= 10000 x1048) (= (x331 x1048) (x1201 x1048))))
(assert (x2220 x1526))
(assert (= (x1201 69947311) (x331 69947311)))
(assert (= 635128645 (x1323 (x331 635128645))))
(assert (= (=> (= x2077 (> x312 0)) (and (=> x2077 x874) (=> (not x2077) x1364))) x1361))
(assert (=> (>= 10000 x864) (= (x1201 x864) (x331 x864))))
(assert (x2220 x365))
(assert (x2220 x1548))
(assert (x2220 x2084))
(assert (x2220 x2328))
(assert (x2220 x884))
(assert (= x1360 (x1323 (x1201 x1360))))
(assert (= (and x227 x2087) x941))
(assert (= x264 (=> (= x649 (> x1113 0)) (and (=> x649 x1170) (=> (not x649) x1685)))))
(assert (=> (>= 10000 x622) (= (x1201 x622) (x331 x622))))
(assert (= (x1201 649617121) (x331 649617121)))
(assert (x2220 x1452))
(assert (x2220 x2361))
(assert (x2220 x2291))
(assert (x2220 x1367))
(assert (x2220 x2171))
(assert (= (x1323 (x331 2211524764)) 2211524764))
(assert (= (x1323 (x331 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x2220 x176))
(assert (x2220 x837))
(assert (= x62 (x1323 (x1201 x62))))
(assert (x2220 x1449))
(assert (x2220 x1592))
(assert (x2220 x551))
(assert (=> (>= 10000 x574) (= (x1201 x574) (x331 x574))))
(assert (x2220 x1845))
(assert (= (ite (and x707 (not x1512)) (x567 x1909) (x915 x1909)) (x460 x1909)))
(assert (x2220 x1822))
(assert (x2220 x2348))
(assert (= (x1201 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x331 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x2220 x370))
(assert (x23 x434))
(assert (=> (<= x2093 10000) (= (x1201 x2093) (x331 x2093))))
(assert (= (or (and x192 (not x1945)) (and x2319 x285) (and x455 (not x2077))) x2162))
(assert (=> (<= x266 10000) (= (x1201 x266) (x331 x266))))
(assert (= (or x1746 x1840) x1655))
(assert (= x707 x2064))
(assert (= x1601 (=> (and (= x1272 (= x671 0)) (or (and (= x706 x2221) x1272) (and (<= x1630 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1630) (= (x234 x1570) x837) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2303) (= (x1023 x292) x1630) (= x2311 (x1952 (+ x706 64))) (>= x837 0) (<= 0 x2303) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x837) (or (and (= x921 (x1727 (x1201 x426) x1750 0)) (= x559 x2004) (= x1742 (x148 x921)) (<= 0 x1742) (= x2221 x2311) (= (x1727 (x1201 x98) x1434 0) x1750) (= (* x671 x1396) x559) (= x2292 (+ x2141 x2266)) (= (x1727 (x1201 x312) (x331 3) 0) x1434) (< (* x1396 x671) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x2347) (= x1742 x2266) (< (+ x1742 x2004) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2004 x2141) (<= x1742 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (= x2221 x2311) x2347)) (= x437 (> x1193 x1630)) (or (and (not x437) (= x1396 0)) (and (= x2281 (= x1630 0)) (= x598 (x282 x1967)) (or (and (= x1185 (x282 x1967)) x1626 (= x1185 x1006)) (and (not x1626) (= x142 x1006))) (= (> x142 x598) x1626) x437 (or (and (= x1042 x1396) (= (ite (> 604800 x1836) x1836 604800) x1042) (not x2281) (= x1836 (x1259 (- x1006 x1630))) (not (< x1006 x1630)) (= x887 604800)) (and (not (< x1006 x1949)) (= x913 x1396) x2281 (= x913 (x1259 (- x1006 x1949))) (= x1949 (x2316 x706)))))) (= x1570 (x1131 x2274 1)) (= (x1952 (+ 32 x706)) x1967) (= x2344 (x1727 (x1201 x98) x746 0)) (= x292 (x1727 (x1201 x426) x2344 0)) (not x1272) (= x2274 (x1727 (x1201 x312) (x331 1) 0)) (= (x1718 x2274) x2303) (= (x1727 (x1201 x312) (x331 7) 0) x746) (= (x282 x1967) x1193) (= x2347 (= 0 x1396)))) (= x1523 (= x1415 0))) x1009)))
(assert (x2220 x2069))
(assert (x2220 x763))
(assert (x2220 x208))
(assert (x23 x684))
(assert (= x2195 (and x1475 (not x1318))))
(assert (= (or (and x1307 (not x413)) (and x1913 (not x1391))) x943))
(assert (x23 x426))
(assert (=> (>= 10000 x1360) (= (x1201 x1360) (x331 x1360))))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2022) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1675) (= x1675 (x2118 x321)) (= (x1727 (x1201 x547) x2254 0) x204) (<= 0 x1149) (= x1918 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (= (x1727 (x1201 x684) (x331 5) 0) x2226) (= (x460 x1700) x2022) (= x105 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (= x54 (x1727 (x1201 x684) (x331 3) 0)) (= (x2309 1461501637330902918203684832716283019655932542975 x1448) x1123) (= (x1727 (x1201 x1) x95 0) x2254) (= (x1727 (x1201 x105) x54 0) x851) (= x95 (x1727 (x1201 x1918) x2207 0)) (= x547 (x2309 1461501637330902918203684832716283019655932542975 x2123)) (<= 0 x2022) (<= 0 x1675) (= (x2309 1461501637330902918203684832716283019655932542975 x1793) x622) (= x1700 (x1727 (x1201 x622) x2226 0)) (not (< x1675 x1149)) (= x1149 (x596 x204)) (<= x1149 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1 (x2309 1461501637330902918203684832716283019655932542975 x1448)) (= (x1727 (x1201 x1123) x851 0) x321) (= (= 0 x185) x1989) (= (x1259 (- x1675 x1149)) x185) (= (x1727 (x1201 x684) (x331 4) 0) x2207)) (and (=> (and (<= x2341 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1727 (x1201 x684) (x331 4) 0) x1477) (or (and x1096 (= (> x1459 32) x580) (= x1241 x475) (= (x2308 x1241) x187) (or (and (not x580) (= x1648 32)) (and (or (and (= (> x1459 96) x276) (= x191 (x1952 (+ 128 x486))) (= (x1952 (+ 96 x613)) x1818) (or (and (= x1594 (x2308 x836)) (= x715 (x1952 (+ x486 160))) (not x1181) (= x836 (x1952 (+ 128 x613))) (= (> x1459 128) x1181) (= x1648 128) x276) (and (= x1648 96) (not x276))) (= x1162 (x2308 x1818)) x1748) (and (= 64 x1648) (not x1748))) (= x1563 (x1952 (+ x613 64))) x580 (= x1063 (x2308 x1563)) (= (x1952 (+ 96 x486)) x1884) (= x1748 (> x1459 64)))) (= x2180 x824)) (and (not x1096) (= x1648 0))) (= x1150 (x2309 1461501637330902918203684832716283019655932542975 x2123)) x970 (= 0 x740) (= (x1952 (+ x613 100)) x486) (= 1 x1084) (= x141 (x1727 (x1201 x1321) x522 0)) (= (x2309 26959946667150639794667015087019630673637144422540572481103610249215 x466) x1576) (= (x1727 (x1201 x620) x1477 0) x2327) (= (+ x410 x81) x685) (= (x1727 (x1201 x684) (x331 11) 0) x522) (= (x1952 (+ 100 x1237)) x2145) (= x66 (x2309 1461501637330902918203684832716283019655932542975 x2123)) (<= 0 x2127) (= x2127 (x596 x1872)) (= (x2075 x688) x2341) (= x1096 (< 0 x1459)) (= x563 (x1259 (- x525 32))) (= x2180 (x1952 (+ 128 x2145))) (= x853 0) (> x2022 0) (= (x1952 (+ 96 x1237)) x475) (= (div x35 x2022) x497) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2341 x497)) (= (x2309 1461501637330902918203684832716283019655932542975 x1448) x388) (= (x1952 (+ 68 x613)) x1347) (= x466 (x363 x475)) (= (x1727 (x1201 x66) x656 0) x1872) (< (+ x2127 x185) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x2127 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x899 (x1201 x963)) x1747) (= (x1727 (x1201 x1150) x141 0) x688) (= x970 (< 0 x1747)) (= x893 (div x2199 1000000000000000000)) (= (x2309 1461501637330902918203684832716283019655932542975 x1793) x1321) (= x410 x185) (= (x2309 1461501637330902918203684832716283019655932542975 x2123) x963) (or (not x1444) (and (= (x1952 (+ x2180 x1459)) x1099) x1444)) (= x2199 (* x2341 x497)) (= (x216 x613) x1459) (= x2127 x81) (= x634 (ite (< 115792089237316195423570985008687907853269984665640564039457 x185) 1 0)) (= x525 (x1259 (- x486 x613))) (= x620 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (= (< x1459 x1648) x1444) (= (x2309 x1084 x634) x853) (= (x2309 1461501637330902918203684832716283019655932542975 x1448) x1736) (<= 0 x2341) (= (x1952 (+ x1576 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x735) (= (x1727 (x1201 x388) x2327 0) x656) (= x35 (mod (* 1000000000000000000 x185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x1989)) x1058) (=> x1989 x1981))) x483))
(assert (x2220 x1916))
(assert (= (x1323 (x1201 x2081)) x2081))
(assert (= x1560 true))
(assert (x2220 x892))
(assert (x2220 x1015))
(assert (x2220 x1501))
(assert (x23 x1642))
(assert (= (or (and x2236 (not x2021)) x1002) x369))
(assert (x2220 x2253))
(assert (= (=> (and (= x2244 (x2309 1461501637330902918203684832716283019655932542975 x510)) (<= x916 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x916) (= x916 (x1771 x1846)) (= x1920 (x2309 1461501637330902918203684832716283019655932542975 x819)) (= (x1727 (x1201 x1920) x2261 0) x1016) (= (x1727 (x1201 x1971) (x331 7) 0) x2261) (= x1846 (x1727 (x1201 x2244) x1016 0)) (= x1915 (= x916 0))) (and (=> (and (= x1971 x908) (not x1915)) x996) (=> x1915 x1436))) x2284))
(assert (x2220 x1321))
(assert (= (or x7 (and x1154 x2031)) x2333))
(assert (x2220 x2191))
(assert (x2220 x219))
(assert (= (x1323 (x1201 x1200)) x1200))
(assert (x2220 x2045))
(assert (x2220 x815))
(assert (x2220 x481))
(assert (x2220 x1083))
(assert (x2220 x1976))
(assert (x2220 x586))
(assert (x2220 x1999))
(assert (x2220 x1790))
(assert (= (x1323 (x1201 x612)) x612))
(assert (=> (<= x1439 10000) (= (x1201 x1439) (x331 x1439))))
(assert (=> (<= x149 10000) (= (x1201 x149) (x331 x149))))
(assert (x2220 x864))
(assert (= x230 (x1323 (x1201 x230))))
(assert (x2220 x277))
(assert (x2220 x2351))
(assert (x2220 x2292))
(assert (x2220 x739))
(assert (x2220 x1334))
(assert (= (x712 32) (x1936 32)))
(assert (x23 x1125))
(assert (x23 274184521717934524641157099916833587218))
(assert (=> (<= x128 10000) (= (x331 x128) (x1201 x128))))
(assert (x2220 x1392))
(assert (x2220 x2053))
(assert (= x1500 (=> (= x2070 x1513) x489)))
(assert (x2220 x665))
(assert (x2220 x713))
(assert (x2220 x857))
(assert (= (x1323 (x1201 x1842)) x1842))
(assert (x2220 x692))
(assert (x2220 x537))
(assert (x2220 x1022))
(assert (x2220 x1583))
(assert (x2220 x2252))
(assert (= (x1346 (- x1788 x1021)) (x1672 (- x1788 x1021))))
(assert (= (x188 x159) 0))
(assert (x2220 x172))
(assert (= (x1053 (- x131 x422)) (x272 (- x131 x422))))
(assert (x23 x905))
(assert (x23 x2070))
(assert (= (=> (= (= 274184521717934524641157099916833587214 x864) x49) (and (=> (and (not (= x1412 826074471)) (= 274184521717934524641157099916833587206 x1015) (= (>= (+ x745 x53) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1331) (= (x899 (x1201 274184521717934524641157099916833587214)) x1828) (= x1359 (> x745 x1822)) (not (> 4 x550)) (<= 0 x53) (not x1331) (= x1491 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 2514000705 x1412)) (= x745 x1529) (= 1 x1721) (= x1808 32) (not (= 649617121 x1412)) (= x2253 x1529) (= x1822 (x638 x110)) (= x110 (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0)) (not (= x1412 1889567281)) (not (> 649617121 x1412)) (= x2276 x53) (= (x1727 (x1201 x27) (x331 1) 0) x295) (= x265 (x1727 (x1201 x27) (x331 1) 0)) (= x262 x550) (= x27 x862) (= x1955 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x838) (and (< x838 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x838) true)))) (= x1841 (< x1822 x1529)) (= x27 x743) (= 68 x550) (not x1955) (= (x1259 (- x550 4)) x838) (= x521 (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0)) (= 2835717307 x1412) (<= x27 1461501637330902918203684832716283019655932542975) (<= x53 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x1359) (= (x1001 x295) x53) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x745 x53)) (<= x1822 115792089237316195423570985008687907853269984665640564039457584007913129639935) x49 (= (+ x2276 x278) x1988) (>= x1822 0) (not x1841) (< 0 x1828) (= 274184521717934524641157099916833587206 x414) (= x2202 (x1259 (- x1822 x1529))) (= x745 x278)) x373) (=> (not x49) x1731))) x907))
(assert (= (x331 243137395) (x1201 243137395)))
(assert (= x1179 (x1323 (x1201 x1179))))
(assert (= (and x1915 x2067) x1726))
(assert (x2220 x1465))
(assert (x2220 x1490))
(assert (= (=> (= x157 (= 274184521717934524641157099916833587214 x1309)) (and (=> (and (<= x1656 1461501637330902918203684832716283019655932542975) (not (< x2348 649617121)) (= x440 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x2348 1889567281) (not (= x2348 826074471)) (> x1809 0) (= 36 x2218) (= (x899 (x1201 274184521717934524641157099916833587214)) x1809) (not (= x2348 649617121)) (= (x1259 (- x2218 4)) x1536) (= 36 x2218) (= x1186 1) x157 (= x97 x1656) (= x2076 (x1740 x1821)) (<= 0 x2076) (= 32 x922) (= x1482 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1536) (and (= true (<= x1536 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1536)))) (not (< x2218 4)) (<= x2076 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1727 (x1201 x97) (x331 1) 0) x1821) (not x1482)) x1332) (=> (not x157) x1389))) x240))
(assert (= (x1936 0) (x712 0)))
(assert (x2220 x273))
(assert (x2220 x573))
(assert (x23 x1113))
(assert (= (x1323 (x1201 x510)) x510))
(assert (=> (>= 10000 x312) (= (x1201 x312) (x331 x312))))
(assert (x2220 x697))
(assert (x2220 x1356))
(assert (= (x1323 (x1201 x717)) x717))
(assert (= (x1996 x667) 0))
(assert (x2220 x664))
(assert (x2220 x1815))
(assert (x2220 x2149))
(assert (= x514 (=> (and (= (= 0 x2025) x1696) (or (and x1696 (= 0 x671) (= 0 x1415)) (and (not x1696) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1954) (<= 0 x1954) (= (x1128 x458) x1954) (= x1954 x671) (= 1 x1415) (= x71 (x1727 (x1201 x98) x1664 0)) (= x458 (x1727 (x1201 x426) x71 0)) (= x1664 (x1727 (x1201 x2025) (x331 9) 0))))) x1601)))
(assert (=> (<= x1449 10000) (= (x1201 x1449) (x331 x1449))))
(assert (x2220 x346))
(assert (x2220 x2127))
(assert (x2220 x400))
(assert (= true x2102))
(assert (x2220 x569))
(assert (= x317 (x1323 (x1201 x317))))
(assert (x2220 x445))
(assert (= true x1731))
(assert (x2220 x2093))
(assert (x2220 x1076))
(assert (x2220 x117))
(assert (=> (<= x1140 10000) (= (x1201 x1140) (x331 x1140))))
(assert (x2220 x1572))
(assert (= (x1323 (x1201 x149)) x149))
(assert (x2220 x2150))
(assert (x2220 x1972))
(assert (= (x1346 (- x825 x1021)) (x1672 (- x825 x1021))))
(assert (x2220 x2212))
(assert (x2220 x250))
(assert (x2220 x2089))
(assert (x2220 x2058))
(assert (x2220 x434))
(assert (x247 x2212 x1461))
(assert (x2220 x536))
(assert (= (x331 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1201 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x2220 x844))
(assert (= (x1323 (x331 87118632)) 87118632))
(assert (= (or (and (not x227) x2087) x1804) x2287))
(assert (x2220 x1190))
(assert (x2220 x1743))
(assert (x2220 x2350))
(assert (x2220 x1897))
(assert (x2220 x1347))
(assert (x2220 x691))
(assert (=> (<= x1493 10000) (= (x331 x1493) (x1201 x1493))))
(assert (x2220 x421))
(assert (x2220 x654))
(assert (x2220 x1345))
(assert (x2220 x771))
(assert (= (x1674 x2297) (ite (and x1317 x1820) (x1965 x2297) (ite (and x1600 x1646) (x900 x2297) (x1965 x2297)))))
(assert (x2220 x561))
(assert (= (=> (and (= x413 (= x2350 0)) (= (x1301 x1474) x2350) (= (x1727 (x1201 x1903) x2135 0) x1474) (= x1903 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (<= 0 x2350) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2350) (= x2135 (x1727 (x1201 x1048) (x331 6) 0))) (and (=> (and (= x722 (x1259 (- x1048 1))) (not x2023) (= (< 0 x722) x2023) x413) x682) (=> (and (= x1048 x2352) (not x413)) x467))) x442))
(assert (x2220 x116))
(assert (= (ite (and x70 x315) (x1222 x1708) (ite (and x811 x70 (not x315)) (x1222 x1708) (x1843 x1708))) (x148 x1708)))
(assert (x2220 x1776))
(assert (x23 x1179))
(assert (x2220 x1025))
(assert (x2220 x2185))
(assert (x2220 x936))
(assert (x2220 x2221))
(assert (x2220 x529))
(assert (x2220 x1006))
(assert (= x2102 x1030))
(assert (= (=> (= 0 x2070) x489) x1685))
(assert (=> (>= 10000 x905) (= (x1201 x905) (x331 x905))))
(assert (x2220 x2271))
(assert (= (x1323 (x1201 x2275)) x2275))
(assert (= (x331 18446744073709551615) (x1201 18446744073709551615)))
(assert (= (x1323 (x331 69947311)) 69947311))
(assert (= (x1346 (- x1511 x1021)) (x1672 (- x1511 x1021))))
(assert (x2220 x1144))
(assert (x2220 x1858))
(assert (x2220 x384))
(assert (= x39 (x1323 (x1201 x39))))
(assert (x2220 x456))
(assert (x2220 x229))
(assert (x2220 x715))
(assert (= (x1323 (x1201 x864)) x864))
(assert (x2220 x431))
(assert (= (x331 26959946667150639794667015087019630673637144422540572481103610249215) (x1201 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (x1201 2293535753) (x331 2293535753)))
(assert (x2220 x1736))
(assert (x2220 x2024))
(assert (=> (<= x1125 10000) (= (x331 x1125) (x1201 x1125))))
(assert (x1546 x1793))
(assert (x2220 x1998))
(assert (x23 x2322))
(assert (x2220 x1197))
(assert (x2220 x59))
(assert (x2220 x1355))
(assert (x2220 x1975))
(assert (= x2008 (x1323 (x1201 x2008))))
(assert (= (x1323 (x331 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x2220 x1300))
(assert (= x97 (x1323 (x1201 x97))))
(assert (x23 x784))
(assert (= x1103 (and x371 x933)))
(assert (x2220 x645))
(assert (x2220 x690))
(assert (x2220 x52))
(assert (x2220 x836))
(assert (= x123 (and x650 x757)))
(assert (=> (<= x317 10000) (= (x1201 x317) (x331 x317))))
(assert (x23 x2275))
(assert (x2220 x2004))
(assert (x2220 x1292))
(assert (x2220 x680))
(assert (x2220 x496))
(assert (x2220 x477))
(assert (x2220 x740))
(assert (= (or x1686 x571) x1002))
(assert (x2220 x2100))
(assert (= (x1323 (x1201 x1650)) x1650))
(assert (x2220 x911))
(assert (= x1580 (=> (and (= x1225 (x1727 (x1201 x1266) x158 0)) (>= 1461501637330902918203684832716283019655932542975 x1266) (= x1394 (x1727 (x1201 x784) x1225 0)) (> 911411945 x2024) (> 2293535753 x2024) (not (= 468353030 x2024)) (>= 1461501637330902918203684832716283019655932542975 x784) (= x158 (x1727 (x1201 x2255) (x331 7) 0)) (= x551 x641) (= (x487 x1394) x641) (not (> 468353030 x2024)) (= x702 (x899 (x1201 274184521717934524641157099916833587206))) (= 759532456 x2024) (>= x641 0) (< 0 x702) (<= x641 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 635128645 x2024))) (=> (and (= x734 x1377) (= x90 x1743) x976 (= (= 2 x209) x860) (= x2300 (x1937 32)) (= x691 x792) x860 (= x1732 x1514) (= x2295 32) (= (= x2013 x132) x801) (< x1037 1461501637330902918203684832716283019655932542976) x637 (= x1498 0) (= x1101 (= x1514 2)) (= x806 2) (= 0 x1707) (= (= x57 x1705) x1485) (= x668 (= (mod (* 32 x691) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x588)) (> 1461501637330902918203684832716283019655932542976 x57) (= x920 2) (= 0 x1248) (= x686 2) (= x771 x268) (= x90 x406) (= x783 x1533) x381 (= x672 x1448) x854 x253 (= x684 x1377) (= x281 x1582) (= x1227 x1386) x118 (= x551 x2037) (= 32 x2144) (= x1705 x672) (= x534 274184521717934524641157099916833587214) (= (x1268 0) x57) x801 x800 x705 (= x672 x930) (= x600 (= x150 x1758)) (= x637 (= x2112 2)) (= x268 x2123) (= x253 (= x2300 x930)) (= x2033 x857) (= x206 0) (= (x2153 32) x1758) (= (= (mod (* 32 x1732) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x90) x705) (= x1582 x1793) (= x346 32) (= 0 x2045) (= x857 x197) (= x1760 x1227) (= (= x554 x1921) x1111) (= 2 x1906) (< x2300 1461501637330902918203684832716283019655932542976) (= x554 x1582) (= (x774 0) x1921) (= x1416 x791) (= x780 (x163 0)) x1054 (= x1037 (x1596 32)) x1502 (= x209 x791) x600 (= x1732 x2001) (= x2013 (x2172 32)) x1485 (= x1506 (= x2051 x1687)) (= x1377 x150) x1101 (= x132 x268) (= x763 x588) (= (x2002 0) x2051) (= x1617 x588) x1111 (= x948 32) (> 1461501637330902918203684832716283019655932542976 x1921) x668 (= x1246 x691) (= x1687 x268) (= x854 (= x780 x734)) (= x691 x1158) (= x2112 x1227) (< x2013 1461501637330902918203684832716283019655932542976) (= x976 (= 274184521717934524641157099916833587214 x771)) (= (> x2037 0) x1502) (= (= (mod (* x791 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x783) x1054) (= x1554 x1732) (= x403 x783) (= (= x857 (mod (* 32 x1227) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x381) (= x791 x1114) (= x118 (= x281 x1037)) (= (= 2 x792) x800) (> 1461501637330902918203684832716283019655932542976 x2051) x1506) x1107))))
(assert (= (x673 (- x616 x492)) (x2315 (- x616 x492))))
(assert (= (x1323 (x1201 x1776)) x1776))
(assert (x2220 x2300))
(assert (x23 x1805))
(assert (x2220 x717))
(assert (x2220 x938))
(assert (= (x1323 (x1201 x494)) x494))
(assert (= (x1568 x1074) 0))
(assert (x2220 x1869))
(assert (x2220 x955))
(assert (= true x704))
(assert (= 0 (x1228 x1508)))
(assert (x23 x963))
(assert (=> (<= x1920 10000) (= (x1201 x1920) (x331 x1920))))
(assert (x2220 x949))
(assert (x2220 x589))
(assert (x2220 x917))
(assert (= 274184521717934524641157099916833587218 (x1323 (x1201 274184521717934524641157099916833587218))))
(assert (= (or (and x1407 (not x869)) (and x1081 x1400) (and x1168 (not x649))) x1929))
(assert (x2220 x885))
(assert (=> (>= 10000 x25) (= (x1201 x25) (x331 x25))))
(assert (= (=> (= x1673 (> x1971 0)) (and (=> (not x1673) x762) (=> x1673 x2284))) x1280))
(assert (=> (>= 10000 x1905) (= (x1201 x1905) (x331 x1905))))
(assert (= (x1323 (x1201 x388)) x388))
(assert (= (x1323 (x1201 x168)) x168))
(assert (x2220 x872))
(assert (x2220 x1879))
(assert (= (and x927 x280) x1264))
(assert (x2220 x630))
(assert (= 0 (x359 x540)))
(assert (= (ite x495 (ite (and x1138 x861) (x88 x1380) (x1965 x1380)) (x1965 x1380)) (x1079 x1380)))
(assert (x2220 x734))
(assert (x2220 x1091))
(assert (= (x1323 (x331 2514000705)) 2514000705))
(assert (x2220 x1545))
(assert (x2220 x2192))
(assert (x2220 x20))
(assert (= (x1672 (- 196 x1021)) (x1346 (- 196 x1021))))
(assert (= x1125 (x1323 (x1201 x1125))))
(assert (= (x812 x1818) 0))
(assert (= (x331 274184521717934524641157099916833587214) (x1201 274184521717934524641157099916833587214)))
(assert (x2220 x613))
(assert (x2220 x1306))
(assert (x2220 x334))
(assert (=> (<= x2302 10000) (= (x1201 x2302) (x331 x2302))))
(assert (x23 274184521717934524641157099916833587206))
(assert (x2220 x1563))
(assert (x2220 x1579))
(assert (= (x1201 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x331 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (<= x1353 10000) (= (x1201 x1353) (x331 x1353))))
(assert (x2220 x238))
(assert (x2220 x1398))
(assert (x2220 x90))
(assert (x2220 x961))
(assert (x2220 x79))
(assert (x2220 x1084))
(assert (x2220 x2138))
(assert (x2220 x624))
(assert (x2220 x1565))
(assert (= x1293 (x1323 (x1201 x1293))))
(assert (x2220 x1513))
(assert (x2220 x1932))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x795) (> x1184 0) (= x1184 (x899 (x1201 274184521717934524641157099916833587206))) (= x1977 128) (> 2293535753 x1530) (not (> 468353030 x1530)) (>= 1461501637330902918203684832716283019655932542975 x51) (= x1046 (= 274184521717934524641157099916833587218 x51)) (= x1530 468353030) (< x1530 911411945)) (and (=> (and (not (> 649617121 x2106)) (not (= x2106 649617121)) (< 0 x1663) (not (< x1612 4)) (= x1109 32) (= x1975 1) (= 36 x1612) (not x1337) (= (x1727 (x1201 x795) (x331 1) 0) x1380) (>= 1461501637330902918203684832716283019655932542975 x1440) (>= x779 0) (not (= 826074471 x2106)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x606) (and (< x606 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x606) true))) x1337) (= x795 x1440) x1046 (<= x779 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x987 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= 1889567281 x2106) (= x606 (x1259 (- x1612 4))) (= x1612 36) (= x1663 (x899 (x1201 274184521717934524641157099916833587218))) (= x779 (x1399 x1380))) x1763) (=> (not x1046) x593))) x1059))
(assert (x2220 x162))
(assert (x2220 x1088))
(assert (= x44 (=> (and (= x2126 (x143 (x1201 x404))) (= x1167 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2332 (x1201 274184521717934524641157099916833587206)))) (not (= 0 x1134)) x1167 (or (and (not (or (> x2192 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2192 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2192))))) x287 (< 0 x384) (= x2192 (x1985 x1069)) (= x172 (ite x1543 1 0)) (= x906 (= 0 x384)) (= (x977 x1074) x384) (= (x1952 (+ 32 x1069)) x1074) (= x384 x172) (= (not x906) x1543)) (not x287)) (= x2029 (= x1943 0)) (or (and (= 96 x1069) x2029) (and (= (x1952 (+ 96 x1345)) x1515) (= x1271 x1069) (not x2029))) (= x287 (< 0 x1153)) (= (x1985 x1069) x1153)) x251)))
(assert (x2220 x843))
(assert (x23 x2203))
(assert (x2220 x923))
(assert (= (=> (and (= (x1259 (- x335 x1429)) x1089) (= (= x1089 0) x1317) (not (< x335 x1429)) (<= x38 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x441 (x1727 (x1201 x266) x975 0)) (= x1538 (x1727 (x1201 x266) x1397 0)) (= x339 (x1727 (x1201 x1113) (x331 3) 0)) (= (x596 x125) x1429) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1429) (= (x1727 (x1201 x266) x339 0) x391) (<= 0 x38) (<= 0 x335) (= (x148 x1329) x335) (= (x1727 (x1201 x1113) (x331 4) 0) x975) (= x125 (x1727 (x1201 x1935) x1378 0)) (= (x1727 (x1201 x1113) (x331 5) 0) x1397) (= x1329 (x1727 (x1201 x717) x391 0)) (= (x1577 x1538) x38) (<= 0 x1429) (= (x1727 (x1201 x717) x441 0) x1378) (<= x335 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (= x1861 x706) x1317) x1711) (=> (and (or (and (= 0 x1752) (not x2267)) (and x2267 (= x630 x2263) (= (x1531 x1145) x631) (= (> x368 32) x1215) (= x2317 x1145) (or (and (= x1752 32) (not x1215)) (and (= (< 64 x368) x2215) (= x171 (x1952 (+ x859 96))) (= x2143 (x1952 (+ x1861 64))) (or (and (= 64 x1752) (not x2215)) (and (= (x1952 (+ 128 x859)) x160) x2215 (= (> x368 96) x1527) (= x1678 (x1952 (+ 96 x1861))) (= x957 (x1531 x1678)) (or (and (= x338 (< 128 x368)) (= (x1952 (+ 160 x859)) x2057) (not x338) (= x117 (x1531 x1990)) (= 128 x1752) (= (x1952 (+ x1861 128)) x1990) x1527) (and (not x1527) (= 96 x1752))))) (= x1234 (x1531 x2143)) x1215)))) x1757 (= x1356 (x1259 (- x2032 32))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2339 x1089)) (= x810 0) (= (x2075 x2060) x1351) (= (x1727 (x1201 x1935) x203 0) x1803) (= (ite (> x1089 115792089237316195423570985008687907853269984665640564039457) 1 0) x1461) (= (x596 x1803) x2339) (= x1144 (mod (* 1000000000000000000 x1089) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x973 (x1952 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x445))) (<= x2339 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1247 0) (= (+ x1984 x357) x856) (= (x1952 (+ 100 x1861)) x859) (< (* x133 x1351) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2159 (x1727 (x1201 x266) x236 0)) (= x368 (x2168 x1861)) (= (x1259 (- x859 x1861)) x2032) (= x1089 x1984) (<= x1351 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (div x1144 x38) x133) (= (x1727 (x1201 x266) x1363 0) x508) (= x1652 (x899 (x1201 x1935))) (= 1 x2212) (= x445 (x2309 26959946667150639794667015087019630673637144422540572481103610249215 x1122)) (= (x1727 (x1201 x1113) (x331 4) 0) x1363) (>= x1351 0) (= (x2309 x2212 x1461) x810) (= x1757 (< 0 x1652)) (= x203 (x1727 (x1201 x717) x508 0)) (= (< x368 x1752) x1875) (= x2263 (x1952 (+ x1716 128))) (= (x1727 (x1201 x1935) x2159 0) x2060) (= x2267 (> x368 0)) (= x2317 (x1952 (+ x2132 96))) (not x1317) (= x1122 (x629 x2317)) (= x236 (x1727 (x1201 x1113) (x331 11) 0)) (= (* x1351 x133) x183) (= (x1952 (+ 100 x2132)) x1716) (>= x2339 0) (< 0 x38) (= (div x183 1000000000000000000) x2336) (= x357 x2339) (= (x1952 (+ 68 x1861)) x17) (or (and x1875 (= x1045 (x1952 (+ x2263 x368)))) (not x1875))) x546))) x2108))
(assert (x2220 x1498))
(assert (x2220 x497))
(assert (x2220 x2046))
(assert (x2220 x1632))
(assert (x23 x1842))
(assert (= x657 (and x1056 x2195)))
(assert (x23 x128))
(assert (x2220 x351))
(assert (x2220 x1834))
(assert (= x905 (x1323 (x1201 x905))))
(assert (x2220 x2132))
(assert (= (x1323 (x331 649617121)) 649617121))
(assert (x2220 x2301))
(assert (= x1336 (or x495 (and x1989 x2064))))
(assert (x2220 x714))
(assert (= (or x1588 (and x1904 x293)) x308))
(assert (= (=> (and (= (= x334 0) x1141) (= x1730 (x1727 (x1201 x198) (x331 6) 0)) (= (x2309 1461501637330902918203684832716283019655932542975 x819) x665) (= (x1727 (x1201 x665) x1730 0) x863) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x334) (= x334 (x786 x863)) (>= x334 0)) (and (=> (and (not x1141) (= x198 x1679)) x1581) (=> (and x1141 (= x478 (> x140 0)) (not x478) (= x140 (x1259 (- x198 1)))) x701))) x1947))
(assert (= x1140 (x1323 (x1201 x1140))))
(assert (x2220 x1223))
(assert (x2220 x798))
(assert (x23 x388))
(assert (x2220 x623))
(assert (= (=> (= x1454 (< 0 x312)) (and (=> (not x1454) x1043) (=> x1454 x2200))) x1161))
(assert (x23 x665))
(assert (x2220 x2155))
(assert (=> (<= x2138 10000) (= (x1201 x2138) (x331 x2138))))
(assert (= x707 (or x1690 (and (not x1085) x1460))))
(assert (x23 274184521717934524641157099916833587214))
(assert (x2220 x1550))
(assert (= (and x889 (not x560)) x2073))
(assert (x2220 x430))
(assert (= x1206 (and x657 x2228)))
(assert (= (or (and x2067 (not x1915)) (and x1682 (not x1863))) x1746))
(assert (x1546 x3))
(assert (= 0 (x1228 x2134)))
(assert (x2220 x1432))
(assert (x2220 x1012))
(assert (x23 x404))
(assert (x2220 x513))
(assert (x2220 x1812))
(assert (x2220 x901))
(assert (= x1981 (=> (and (= x3 x268) (= x510 x672) (= x1377 x1971) (= x1582 x819)) x1478)))
(assert (= (x331 468353030) (x1201 468353030)))
(assert (=> (<= x586 10000) (= (x331 x586) (x1201 x586))))
(assert (=> (<= x1333 10000) (= (x1201 x1333) (x331 x1333))))
(assert (x2220 x1578))
(assert (= (or (and x1431 x390) (and x1206 (not x2054)) (and (not x1056) x2195)) x412))
(assert (x2220 x191))
(assert (= (ite (and x1070 (not x903) (not x1062)) (x1928 x321) (x1222 x321)) (x2118 x321)))
(assert (x23 x717))
(assert (x2220 x922))
(assert (= (x331 87118632) (x1201 87118632)))
(assert (x2220 x612))
(assert (x2220 x304))
(assert (= (=> (and (= x1309 x268) (= x672 x97)) x2010) x1668))
(assert (x2220 x929))
(assert (= x1487 (x1323 (x1201 x1487))))
(assert (x2337 x819 x1286))
(assert (=> (<= x168 10000) (= (x331 x168) (x1201 x168))))
(assert (= (=> (and (= (x1259 (- x352 4)) x362) (= (mod (* x1221 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1806) (= (x1952 (+ x11 35)) x2155) (= x898 (x1952 (+ 35 x443))) (not (> 4 x352)) (= x825 (x1952 (+ 4 x1722))) (= (x1952 (+ 32 (x1952 (+ (mod (* 32 x953) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x918)))) x1790) (= (mod (- (x1952 (+ 32 (mod (* 32 x917) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x500) (= (= x1221 x579) x1991) (= x1419 x2150) (= x877 x112) (= (x1952 (+ x2000 164)) x1636) (= x286 (x1952 (+ x955 x1806))) (= (x1259 (- x402 4)) x888) (= x2000 (mod (* 32 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (mod (* 32 x1339) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1667) (not (= 635128645 x698)) (not (< 18446744073709551615 x659)) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2155) (<= x352 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x2155 x352) (= (<= x352 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2155 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x443 (x1259 (- x1897 4))) (> x352 163) (not (= x698 759532456)) (= (x1950 132) x579) (= x492 (x1952 (+ 196 (mod (* 32 x1994) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1625 x1773) (= (x1952 (+ 32 x1294)) x352) (= x485 (> x579 0)) (not (> x366 x352)) (= (x1952 (+ x1698 x1824)) x561) (= x1698 (x1952 (+ x11 36))) (= x1339 (x1950 x825)) (= (x1952 (+ x1667 x2105)) x366) (< x698 911411945) (= x1497 (mod (- (x1952 (+ (mod (* x953 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x112 x1033) (= x579 x659) (<= x1033 1461501637330902918203684832716283019655932542975) (not (> x579 18446744073709551615)) (= x918 (x1952 (+ 32 x1388))) (= x1221 (x1950 x616)) (not (= x698 468353030)) (= (mod (- (x1952 (+ 32 (mod (* x1077 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x353) (not (< x352 x286)) (= 0 x1773) (not (< 18446744073709551615 x11)) (= 842085797 x698) (not (< 18446744073709551615 x1339)) (> x1549 0) (not (< 18446744073709551615 x1221)) (= x59 (x1952 (+ x1790 32))) (= x628 (x1952 (+ 4 x11))) (= x370 (mod (- (x1952 (+ (mod (* x1994 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x660 (x1952 (+ (x1952 (+ (mod (* 32 x1077) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1897)) 32))) (= (x1259 (- x660 4)) x1722) (>= x1427 0) (not (< 18446744073709551615 x443)) (= (x1952 (+ 68 (mod (* x1994 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x732) (= x2105 (x1952 (+ x1722 36))) (= (x1259 (- x660 4)) x1371) (<= x1419 1461501637330902918203684832716283019655932542975) (= x1897 (x1952 (+ 164 (mod (* 32 x1994) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (mod (* x659 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1824) (>= 1461501637330902918203684832716283019655932542975 x1427) (ite x1991 (= x1339 x579) x1991) (not (or (and (= (<= x362 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x362 128)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x362))) (= x1021 (x1952 (+ 32 x660))) (<= 0 x1033) (or (and (<= x352 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x898 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x898) (<= x352 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x898 x352))) (= x659 (x1950 x628)) (<= 0 x1419) (= (x1952 (+ x443 4)) x616) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1850) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x352)) (and (= (<= x352 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1850 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x352 x1850))) (not (> x1636 x352)) (= true (<= x352 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= (x1259 (- x1897 4)) x2238) (= x11 (x1259 (- x402 4))) (not (> x561 x352)) (= (x1952 (+ (x1952 (+ x732 (mod (* 32 x1077) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32)) x1388) (= (x1952 (+ (x1952 (+ (mod (* x917 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x59)) 32)) x1294) (= (x1952 (+ 35 x1722)) x1850) (= x955 (x1952 (+ x443 36))) (= (x1952 (+ 32 x402)) x422) (= (x899 (x1201 274184521717934524641157099916833587206)) x1549) (> 2293535753 x698) (= x142 x1569) (not (< x698 468353030)) (= x402 (x1952 (+ (x1952 (+ (mod (* x953 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x660)) 32))) (not (> x1722 18446744073709551615))) (and (=> x485 x411) (=> (not x485) x1668))) x1155))
(assert (x2220 x2071))
(assert (x2220 x2250))
(assert (x2220 x842))
(assert (x2220 x1461))
(assert (x2220 x856))
(assert (x2220 x772))
(assert (x2220 x1377))
(assert (x2220 x1617))
(assert (x2220 x1511))
(assert (x2220 x582))
(assert (x23 x1493))
(assert (x2220 x353))
(assert (=> (>= 10000 x404) (= (x331 x404) (x1201 x404))))
(assert (x2220 x557))
(assert (=> (<= x2170 10000) (= (x331 x2170) (x1201 x2170))))
(assert (x2220 x789))
(assert (x23 x481))
(assert (x2220 x1293))
(assert (=> (>= 10000 x789) (= (x1201 x789) (x331 x789))))
(assert (= (x1053 (- x1788 x422)) (x272 (- x1788 x422))))
(assert (=> (<= x755 10000) (= (x1201 x755) (x331 x755))))
(assert (x2220 x1747))
(assert (= (=> (and (= x706 x582) x1900 (or (and (= (x2309 115792089237316195423570985008687907853269984665640564039457584007913129639904 x901) x1572) (= x1769 (x1952 (+ x1572 x2263))) (= x582 x1769) (= x223 (x1952 (+ x859 96))) (= (x1952 (+ 63 x2036)) x901) (not x1188) (= x2083 x2263)) (and x1188 (= x2263 x582) (= 96 x2083))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2117 (x1201 274184521717934524641157099916833587206))) x1900) (= (= 0 x2036) x1188) (not (= 0 x473)) (= x1182 (x2194 x2083)) (= x2288 (x1315 (x1201 x1935))) (= x805 (x2117 (x1201 274184521717934524641157099916833587206))) (or (not x895) (and (= (x2194 x2083) x1214) (= x709 (x1952 (+ x2083 32))) (= x1365 x433) (not (or (and (> 32 x1214) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1214))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1214))) x895 (= (ite x974 1 0) x433) (= x974 (not x447)) (= x1365 (x1437 x709)) (= (= 0 x1365) x447) (> x1365 0))) (= x895 (< 0 x1182))) x1711) x1118))
(assert (x2220 x670))
(assert (x2220 x1150))
(assert (x2220 x1202))
(assert (= x1229 (=> (and (= x613 (x1952 (+ x1237 64))) (= x1768 (x1924 x386)) (= (= x841 0) x1512) (= (x1718 x1425) x427) (= (< x1621 x1768) x1602) (= x1642 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x604) (>= x1621 0) (<= 0 x427) (= x604 (x234 x1368)) (<= x1621 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x995 (x1727 (x1201 x1642) x174 0)) (or (and (= (x1727 (x1201 x1842) x1692 0) x318) (= x1692 (x1727 (x1201 x684) (x331 6) 0)) (= (x2309 1461501637330902918203684832716283019655932542975 x1793) x1842) x1512) (and (= (+ x1112 x124) x1592) (= x1483 (x1727 (x1201 x1905) x2043 0)) (= x2069 (x915 x1483)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1372 x2069)) (= x1905 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (< (* x1292 x841) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1610 (* x841 x1292)) (= x2043 (x1727 (x1201 x684) (x331 5) 0)) (<= 0 x2069) (= x1610 x1372) (= (x1727 (x1201 x2008) x348 0) x1041) (= (x2309 1461501637330902918203684832716283019655932542975 x1793) x2008) (= (x1727 (x1201 x684) (x331 6) 0) x348) (<= x2069 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2069 x124) (= x1112 x1372) (not x1512))) (= (= 0 x1930) x65) (= x174 (x1727 (x1201 x684) (x331 6) 0)) (or x65 (and (not x65) (= (x1727 (x1201 x684) (x331 10) 0) x290) (= x168 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (= (x1727 (x1201 x168) x290 0) x349))) (>= x604 0) (or (and x1602 (or (and (not x2115) (= x189 x142)) (and (= x1254 (x1924 x386)) (= x189 x1254) x2115)) (= (> x142 x1703) x2115) (= (x1924 x386) x1703) (= x989 (= x1621 0)) (or (and (not (< x189 x1621)) (= x1785 x841) (= (ite (> 604800 x938) x938 604800) x1785) (= x1255 604800) (not x989) (= x938 (x1259 (- x189 x1621)))) (and x989 (= x1781 (x298 x1237)) (not (< x189 x1781)) (= (x1259 (- x189 x1781)) x254) (= x841 x254)))) (and (= x841 0) (not x1602))) (= (x1131 x1425 1) x1368) (<= x427 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1952 (+ x1237 32)) x386) (= x1621 (x1301 x995)) (= x1425 (x1727 (x1201 x684) (x331 1) 0))) x483)))
(assert (x2220 x2270))
(assert (= x27 (x1323 (x1201 x27))))
(assert (x2220 x1271))
(assert (x2220 x198))
(assert (x2220 x131))
(assert (x2220 x672))
(assert (x2220 x908))
(assert (x2220 x987))
(assert (x2220 x2000))
(assert (= (x331 826074471) (x1201 826074471)))
(assert (x2220 x2081))
(assert (x2220 x1793))
(assert (x1546 x1084))
(assert (= (and (not x1476) x759) x1348))
(assert (= (or (and x1102 (not x1178)) (and (not x2113) x1264)) x1686))
(assert (x2220 x245))
(assert (x2220 x2325))
(assert (= (x331 1986467848) (x1201 1986467848)))
(assert (= x2302 (x1323 (x1201 x2302))))
(assert (= (x331 2835717307) (x1201 2835717307)))
(assert (x23 x1971))
(assert (x2220 x1354))
(assert (x2220 x1888))
(assert (x2220 x841))
(assert (x2220 x1516))
(assert (x2220 x1414))
(assert (x23 x168))
(assert (x2220 x313))
(assert (= x1327 (or (and (not x518) x611) x2333 (and (not x485) x1403))))
(assert (= (x188 x1012) 0))
(assert (x2220 x140))
(assert (x2220 x563))
(assert (= (x1323 (x1201 x573)) x573))
(assert (x2220 x1244))
(assert (x1546 x1122))
(assert (x2220 x1906))
(assert (x23 x198))
(assert (x2220 x1693))
(assert (x2220 x2255))
(assert (= (x1323 (x1201 x1353)) x1353))
(assert (x2220 x2057))
(assert (x2220 x1194))
(assert (= (x1323 (x1201 x324)) x324))
(assert (= x662 (and x455 x2077)))
(assert (x1546 x892))
(assert (x2220 x1192))
(assert (x23 x1423))
(assert (= (x1323 (x1201 x430)) x430))
(assert (=> (<= x327 10000) (= (x1201 x327) (x331 x327))))
(assert (x2220 x2025))
(assert (= x1242 (x1323 (x1201 x1242))))
(assert (= (ite (and x1317 x1820) (x1965 x1980) (ite (and x1646 x1600) (x900 x1980) (x1965 x1980))) (x1674 x1980)))
(assert (=> (<= x1150 10000) (= (x1201 x1150) (x331 x1150))))
(assert (x23 x1266))
(assert (= (x673 (- x1520 x492)) (x2315 (- x1520 x492))))
(assert (= (or x1507 (and x1317 x1820)) x611))
(assert (= (=> (= x25 0) x92) x519))
(assert (x2220 x790))
(assert (x2220 x1340))
(assert (x2220 x953))
(assert (x2220 x323))
(assert (x2220 x1569))
(assert (x2220 x1082))
(assert (=> (>= 10000 x324) (= (x1201 x324) (x331 x324))))
(assert (x2220 x1865))
(assert (= (x331 115792089237316195423570985008687907853269984665640564039457) (x1201 115792089237316195423570985008687907853269984665640564039457)))
(assert (= (x331 2061678023) (x1201 2061678023)))
(assert (= x1402 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1306) (= x1456 (x234 x1734)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1287) (= (x1952 (+ 32 x2221)) x2111) (= x808 (x1727 (x1201 x312) (x331 1) 0)) (= (> x365 x1306) x1691) (= x13 (= 0 x2359)) (or (and (= x1566 (x2257 x2111)) x1691 (or (and (= (x1744 x2221) x817) x990 (= x2084 x1697) (not (> x817 x1893)) (= x2084 (x1259 (- x1893 x817)))) (and (= x1697 x242) (= (x1259 (- x1893 x1306)) x2) (not (> x1306 x1893)) (= (ite (> 604800 x2) x2 604800) x242) (not x990) (= 604800 x2252))) (or (and (= x142 x1893) (not x576)) (and (= x1173 x1893) x576 (= x1173 (x2257 x2111)))) (= (> x142 x1566) x576) (= (= 0 x1306) x990)) (and (not x1691) (= 0 x1697))) (= x1734 (x1131 x808 1)) (= (x1727 (x1201 x312) (x331 6) 0) x1409) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1456) (= x969 (x1952 (+ x2221 64))) (= (x2257 x2111) x365) (= (x490 x1896) x1306) (= x1896 (x1727 (x1201 x98) x1409 0)) (= (x1718 x808) x1287) (>= x1456 0) (or x742 (and (not x742) (= x2100 (+ x2345 x1729)) (= (* x1697 x277) x454) (= x1341 x2345) (= x1729 x2055) (= x1341 x454) (= (x1577 x744) x2055) (<= x2055 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (* x1697 x277) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x744 (x1727 (x1201 x98) x1139 0)) (>= x2055 0) (< (+ x2055 x1341) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1139 (x1727 (x1201 x312) (x331 5) 0)))) (= x742 (= x1697 0)) (<= 0 x1287) (>= x1306 0)) x2160)))
(assert (x23 x207))
(assert (= (x1323 (x1201 x1526)) x1526))
(assert (x23 x62))
(assert (x2220 x1594))
(assert (x2220 x2047))
(assert (= (x1323 (x1201 x1903)) x1903))
(assert (= x562 (=> (= x1056 (< 0 x684)) (and (=> x1056 x1814) (=> (not x1056) x519)))))
(assert (x2220 x802))
(assert (x2220 x766))
(assert (= x1097 (=> (= x1383 (= x404 274184521717934524641157099916833587214)) (and (=> (not x1383) x1295) (=> (and (= x2178 (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0)) (not (< x535 4)) (= 274184521717934524641157099916833587206 x250) (= (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0) x2204) (not x958) (not x883) (= x683 x1055) (= (>= (+ x1055 x20) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x883) (not x109) x1383 (>= x1432 0) (= (x1727 (x1201 x426) (x331 1) 0) x1524) (= 68 x535) (<= x1055 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1055 (x1106 x259)) (= x323 x426) (= x173 x535) (= (x1259 (- x535 4)) x343) (= x1932 (x1259 (- x1432 x468))) (not x2242) (not (= x1039 2514000705)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1432) (= (< x1432 x20) x2242) (not (= x1039 649617121)) (= x259 (x1727 (x1201 x426) (x331 1) 0)) (= (x1152 x2204) x1432) (= x1499 (+ x683 x2114)) (<= x323 1461501637330902918203684832716283019655932542975) (= 274184521717934524641157099916833587206 x1545) (not (= 1889567281 x1039)) (= x400 x468) (= x958 (> x468 x1432)) (< (+ x20 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 2835717307 x1039) (= (or (and (> 64 x343) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x343))) (> x343 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x109) (= 32 x1943) (>= x1055 0) (= 1 x1134) (not (> 649617121 x1039)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x592) (= x2114 x20) (= x468 x20) (= x2059 (x899 (x1201 274184521717934524641157099916833587214))) (< 0 x2059) (not (= x1039 826074471))) x44)))))
(assert (x2220 x1547))
(assert (x2220 x1072))
(assert (= (x1568 x709) 0))
(assert (x2220 x1319))
(assert (x2220 x132))
(assert (x2220 x1266))
(assert (= (x1053 (- 196 x422)) (x272 (- 196 x422))))
(assert (x2220 x211))
(assert (x2220 x806))
(assert (x2220 x855))
(assert (x2220 x1379))
(assert (= (x712 (- x1511 164)) (x1936 (- x1511 164))))
(assert (x1546 x929))
(assert (x2220 x1963))
(assert (= x1398 (x1323 (x1201 x1398))))
(assert (x2220 x173))
(assert (=> (<= x2081 10000) (= (x331 x2081) (x1201 x2081))))
(assert (x2337 x1448 x1819))
(assert (x2220 x1687))
(assert (x2220 x659))
(assert (= (x1323 (x1131 x383 1)) (+ 1 (x1323 x383))))
(assert (x2220 x709))
(assert (x23 x1282))
(assert (x2220 x2059))
(assert (x1546 x396))
(assert (x2220 x761))
(assert (x2220 x706))
(assert (x2220 x2111))
(assert (=> (>= 10000 x39) (= (x331 x39) (x1201 x39))))
(assert (x23 x635))
(assert (x2220 x1920))
(assert (x2220 x1109))
(assert (x2220 x640))
(assert (x2220 x473))
(assert (x2220 x1556))
(assert (x2220 x25))
(assert (= (x1228 x1662) 0))
(assert (x2220 x1287))
(assert (x247 x892 x502))
(assert (x2220 x1597))
(assert (x2220 x1738))
(assert (x2220 x1234))
(assert (x2220 x1949))
(assert (= x1804 (or x1374 x621)))
(assert (= x1436 (=> (and (= (< 0 x430) x380) (= x430 (x1259 (- x1971 1)))) (and (=> x380 x568) (=> (not x380) x762)))))
(assert (= (x331 1889567281) (x1201 1889567281)))
(assert (x2220 x1930))
(assert (= (x1672 (- x131 x1021)) (x1346 (- x131 x1021))))
(assert (x2220 x1497))
(assert (= (+ 1 (x1323 x1425)) (x1323 (x1131 x1425 1))))
(assert (x2220 x206))
(assert (x23 x819))
(assert (= (x1201 1000000000000000000) (x331 1000000000000000000)))
(assert (x23 x175))
(assert (= x1035 (=> (and (or (and (= 0 x2359) (= x277 0) x602) (and (= x935 (x1281 x10)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935) (= x385 (= x935 0)) (= x10 (x1727 (x1201 x98) x926 0)) (<= 0 x935) (= x926 (x1727 (x1201 x1293) (x331 10) 0)) (not x602) (or (and (= 0 x2359) x385 (= x277 0)) (and (= x2359 1) (not x385) (= x277 x935))))) (= (= x1293 0) x602)) x1402)))
(assert (x2220 x1193))
(assert (x2220 x1679))
(assert (x2220 x1156))
(assert (x2220 x1221))
(assert (x23 x789))
(assert (x23 x1887))
(assert (x2220 x1412))
(assert (=> (<= x477 10000) (= (x331 x477) (x1201 x477))))
(assert (x2220 x17))
(assert (x23 x573))
(assert (=> (<= x230 10000) (= (x331 x230) (x1201 x230))))
(assert (= true x1939))
(assert (x2220 x770))
(assert (x2220 x1044))
(assert (= (+ 1 (x1323 x1800)) (x1323 (x1131 x1800 1))))
(assert (x2220 x598))
(assert (x2220 x534))
(assert (x2220 x1788))
(assert (= (or x937 (and x1755 x153)) x70))
(assert (= (or (and (not x981) x96) (and x1103 (not x1874))) x1374))
(assert (= x1901 (=> (and (= (x1259 (- x1971 1)) x198) (= (> x198 0) x2052)) (and (=> x2052 x1947) (=> (not x2052) x701)))))
(assert (x2220 x1388))
(assert (x2220 x1115))
(assert (x2220 x2014))
(assert (= (and x2064 (not x1989)) x1138))
(assert (x2220 x1422))
(assert (=> (<= x1448 10000) (= (x331 x1448) (x1201 x1448))))
(assert (x2220 x1699))
(assert (=> (>= 10000 x2025) (= (x331 x2025) (x1201 x2025))))
(assert (x2220 x366))
(assert (x2220 x2170))
(assert (x2220 x622))
(assert (x2220 x242))
(assert (=> (>= 10000 x1123) (= (x331 x1123) (x1201 x1123))))
(assert (x2220 x751))
(assert (x2220 x382))
(assert (x2220 x722))
(assert (= (x1323 (x1201 x665)) x665))
(assert (x2220 x488))
(assert (= (x188 x1838) 0))
(assert (= (and x380 x1726) x1682))
(assert (x2220 x422))
(assert (x2220 x112))
(assert (x2220 x2063))
(assert (x2220 x666))
(assert (= 1461501637330902918203684832716283019655932542976 (x1323 (x331 1461501637330902918203684832716283019655932542976))))
(assert (=> (>= 10000 x2255) (= (x331 x2255) (x1201 x2255))))
(assert (x2220 x2353))
(assert (= x467 (=> (= x2352 x1526) x2128)))
(assert (x23 x230))
(assert (x23 x105))
(assert (x2220 x142))
(assert (=> (<= x1200 10000) (= (x1201 x1200) (x331 x1200))))
(assert (x2220 x1309))
(assert (= (x712 (- x2208 164)) (x1936 (- x2208 164))))
(assert (= (or x75 (and x1318 x1475)) x1070))
(assert (x2220 x957))
(assert (x2220 x1124))
(assert (= (=> (and (or (and (= x175 (x2309 1461501637330902918203684832716283019655932542975 x1448)) (= x1823 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (= (x1727 (x1201 x1823) x954 0) x210) (= x890 (x1727 (x1201 x175) x210 0)) (= (x1727 (x1201 x684) (x331 9) 0) x954) (not x1702)) x1702) (or (and (= (= x387 0) x903) (not x1062) (= x2078 (x1727 (x1201 x684) (x331 7) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2130) (<= 0 x1334) (or (and (or (and (= x675 (x1259 (- x569 x1917))) (= (ite (> 604800 x675) x675 604800) x1194) (not (> x1917 x569)) (not x60) (= x1194 x387) (= x949 604800)) (and (= x2241 x387) x60 (= (x983 128) x405) (not (> x405 x569)) (= x2241 (x1259 (- x569 x405))))) x257 (= (= 0 x1917) x60) (= x2225 (> x142 x2269)) (= x2269 (x1661 160)) (or (and (= x2285 x569) x2225 (= (x1661 160) x2285)) (and (not x2225) (= x142 x569)))) (and (not x257) (= x387 0))) (= x574 (x2309 1461501637330902918203684832716283019655932542975 x1448)) (<= 0 x1917) (= x257 (> x1845 x1917)) (= (x2309 1461501637330902918203684832716283019655932542975 x1793) x1887) (= (x1727 (x1201 x1887) x2078 0) x1265) (= x998 (x1727 (x1201 x574) x1265 0)) (= x2130 (x1718 x1462)) (= x215 (x1131 x1462 1)) (<= 0 x2130) (= x1462 (x1727 (x1201 x684) (x331 1) 0)) (<= x1917 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1334) (or (and (= (x1727 (x1201 x481) x1811 0) x1868) (= (x2309 1461501637330902918203684832716283019655932542975 x1448) x431) (= x481 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (= (x1727 (x1201 x684) (x331 7) 0) x1811) x903 (= x2049 (x1727 (x1201 x431) x1868 0)) (= x1237 192)) (and (= x79 x151) (= (x1727 (x1201 x684) (x331 7) 0) x1681) (= x2191 (x2309 1461501637330902918203684832716283019655932542975 x1448)) (= x884 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (not x903) (= x1854 (x1727 (x1201 x884) x848 0)) (= x347 (x1727 (x1201 x2191) x99 0)) (< (+ x79 x849) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (* x387 x1693) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x79 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x609 (x1727 (x1201 x789) x1854 0)) (= (* x387 x1693) x1028) (= x1423 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (= (x2309 1461501637330902918203684832716283019655932542975 x1448) x789) (= x849 x1733) (= x848 (x1727 (x1201 x684) (x331 3) 0)) (= x1237 192) (= x1028 x849) (= x79 (x1222 x609)) (<= 0 x79) (= (+ x1733 x151) x1040) (= x99 (x1727 (x1201 x1423) x1681 0)))) (= (x234 x215) x1334) (= (x1661 160) x1845) (= x1917 (x487 x998))) (and (= x1237 128) (= x858 (x1727 (x1201 x128) x1993 0)) x1062 (= (x1727 (x1201 x684) (x331 7) 0) x1993) (= (x2309 1461501637330902918203684832716283019655932542975 x1448) x1140) (= x128 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (= (x1727 (x1201 x1140) x858 0) x1142))) (= x1702 (= 0 x1556)) (= x1062 (= x1693 0))) x902) x1279))
(assert (x2220 x1905))
(assert (x2220 x1282))
(assert (x23 x1487))
(assert (= x327 (x1323 (x1201 x327))))
(assert (= (or (and (not x1684) x662) (and (not x285) x2319)) x1619))
(assert (x2220 x1045))
(assert (x2220 x2234))
(assert (x2220 x2105))
(assert (x2220 x1065))
(assert (x2220 x588))
(assert (x2220 x2179))
(assert (x2220 x1237))
(assert (= x1289 (=> (and (= x2093 (x1259 (- x684 1))) (= (< 0 x2093) x2054)) (and (=> x2054 x944) (=> (not x2054) x519)))))
(assert (x2220 x1130))
(assert (= x1820 x2287))
(assert (x2220 x182))
(assert (= (x1323 (x331 18446744073709551615)) 18446744073709551615))
(assert (x2220 x1705))
(assert (= x1600 (and (not x1317) x1820)))
(assert (x2220 x1942))
(assert (x2220 x1613))
(assert (= (or (and x1307 x413) (and x807 (not x416)) (and (not x303) x1634)) x1927))
(assert (= (x2315 (- x825 x492)) (x673 (- x825 x492))))
(assert (= (=> (and (or (and (= x615 0) (= 0 x1223) x818) (and (= (x1727 (x1201 x905) x760 0) x1406) (<= 0 x993) (= x615 1) (= x494 (x2309 1461501637330902918203684832716283019655932542975 x819)) (not x818) (= x760 (x1727 (x1201 x494) x1275 0)) (<= x993 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2309 1461501637330902918203684832716283019655932542975 x510) x905) (= x1223 x993) (= x1275 (x1727 (x1201 x1449) (x331 9) 0)) (= (x1284 x1406) x993))) (= x818 (= 0 x1449))) x2227) x718))
(assert (x2220 x1842))
(assert (x2220 x898))
(assert (=> (<= x1642 10000) (= (x1201 x1642) (x331 x1642))))
(assert (x2220 x2173))
(assert (x23 x1353))
(assert (x2220 x2202))
(assert (= (x1323 (x331 826074471)) 826074471))
(assert (= (x1323 (x1201 x312)) x312))
(assert (x2220 x1227))
(assert (= (ite x495 (ite (and x861 x1138) (x88 x214) (x1965 x214)) (x1965 x214)) (x1079 x214)))
(assert (x2220 x1852))
(assert (x2220 x1530))
(assert (=> (<= x62 10000) (= (x1201 x62) (x331 x62))))
(assert (x2220 x343))
(assert (x2220 x2237))
(assert (x2220 x1625))
(assert (x2220 x178))
(assert (= (ite x495 (ite (and x1138 x861) (x865 x1704) (x449 x1704)) (x865 x1704)) (x638 x1704)))
(assert (= x1517 (=> (and (= x1048 (x1259 (- x684 1))) (= x416 (< 0 x1048))) (and (=> (not x416) x682) (=> x416 x442)))))
(assert (= (=> (= x726 x1293) x1035) x1213))
(assert (= x2278 (=> (and x2243 (>= x1582 0) (= x755 x1582) (>= x1338 0) (= x826 (x355 (x1201 274184521717934524641157099916833587218))) x809 (= x809 (< 0 (x899 (x1201 274184521717934524641157099916833587214)))) (<= 0 x672) (= (x355 (x1201 274184521717934524641157099916833587214)) x1338) (= (< 0 (x899 (x1201 274184521717934524641157099916833587218))) x2289) (<= x1258 1461501637330902918203684832716283019655932542975) (<= 0 x1258) (<= 0 x2313) (>= x268 0) (<= x1582 1461501637330902918203684832716283019655932542975) (<= x268 1461501637330902918203684832716283019655932542975) (= (> (x899 (x1201 274184521717934524641157099916833587206)) 0) x2243) (<= 0 x936) (= x1258 x2150) (= x1699 x936) (= (x355 (x1201 274184521717934524641157099916833587206)) x2313) x2289 (<= 0 x826) (<= x672 1461501637330902918203684832716283019655932542975) (<= x936 1461501637330902918203684832716283019655932542975) (= x39 x1377)) x1643)))
(assert (= (=> (and (<= x360 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1923 (x1727 (x1201 x230) x1183 0)) (= (x2309 1461501637330902918203684832716283019655932542975 x1448) x635) (= x230 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (= (x1727 (x1201 x684) (x331 7) 0) x1183) (= (x1727 (x1201 x635) x1923 0) x2217) (= x2228 (= x360 0)) (= (x487 x2217) x360) (<= 0 x360)) (and (=> (and (not x2228) (= x684 x690)) x693) (=> x2228 x1289))) x1814))
(assert (= (and (not x49) x721) x565))
(assert (= (x1323 (x331 759532456)) 759532456))
(assert (x2220 x946))
(assert (= x1798 x1336))
(assert (= x1068 x1835))
(assert (x2220 x463))
(assert (=> (<= x1398 10000) (= (x1201 x1398) (x331 x1398))))
(assert (x2220 x1493))
(assert (x2220 x223))
(assert (x2220 x288))
(assert (x2220 x615))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1323 (x331 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x2220 x269))
(assert (= (ite (and x1820 x1317) (x325 x1069) (x2194 x1069)) (x2028 x1069)))
(assert (x2220 x1258))
(assert (= (x2315 (- x1788 x492)) (x673 (- x1788 x492))))
(assert (= (=> (and (= x1767 (x1727 (x1201 x426) x1522 0)) (= x342 (x1727 (x1201 x98) x1797 0)) (= x2271 (x1873 x1708)) (= (x1727 (x1201 x312) (x331 5) 0) x179) (= x350 (x1727 (x1201 x312) (x331 4) 0)) (<= x964 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1727 (x1201 x98) x350 0) x1522) (= (x1727 (x1201 x312) (x331 3) 0) x1797) (= x835 (x2331 x2161)) (not (> x964 x2271)) (= x1154 (= x306 0)) (= (x1259 (- x2271 x964)) x306) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2271) (= (x601 x674) x964) (>= x835 0) (>= x2271 0) (= x674 (x1727 (x1201 x404) x1767 0)) (= (x1727 (x1201 x426) x342 0) x1708) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x835) (<= 0 x964) (= x2161 (x1727 (x1201 x98) x179 0))) (and (=> x1154 x251) (=> (and (= 0 x459) (= (x1727 (x1201 x312) (x331 11) 0) x945) (= (+ x1064 x1938) x843) (= x538 (< x1934 x147)) (= x892 1) (= (mod (* x306 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x237) (= (x1860 x969) x1934) (= (ite (> x306 115792089237316195423570985008687907853269984665640564039457) 1 0) x502) (= (x1259 (- x840 32)) x178) (= x1938 x306) (= (> x2122 0) x501) (< (* x18 x1645) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1579 115792089237316195423570985008687907853269984665640564039457584007913129639935) x501 (<= x1645 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (* x18 x1645) x2146) (= (> x1934 0) x1618) (= (x1727 (x1201 x404) x1593 0) x2245) (= (x1727 (x1201 x404) x1204 0) x897) (= (x1952 (+ x969 68)) x86) (= x159 (x1952 (+ x2221 96))) (> x835 0) (= x400 (div x2146 1000000000000000000)) (= (x1727 (x1201 x98) x945 0) x1204) (= (x1952 (+ 100 x969)) x1345) (or (and x538 (= (x1952 (+ x1934 x1271)) x1888)) (not x538)) (< (+ x306 x1579) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1952 (+ x12 128)) x1271) (= x12 (x1952 (+ 100 x2221))) (or (and (not x1618) (= x147 0)) (and (or (and (not x196) (= 32 x147)) (and (= x2325 (x1952 (+ x969 64))) (= x1205 (> x1934 64)) x196 (= (x1956 x2325) x1834) (or (and (= (x1956 x2224) x320) x1205 (or (and (= 96 x147) (not x169)) (and x169 (= x1156 (x1952 (+ 160 x1345))) (not x356) (= 128 x147) (= (x1952 (+ 128 x969)) x1012) (= x1858 (x1956 x1012)) (= x356 (< 128 x1934)))) (= (x1952 (+ x1345 128)) x1589) (= x2224 (x1952 (+ 96 x969))) (= x169 (< 96 x1934))) (and (= 64 x147) (not x1205))) (= x104 (x1952 (+ 96 x1345))))) (= (> x1934 32) x196) (= x1375 x1271) x1618 (= (x1956 x1838) x544) (= x1838 x159))) (= x1710 (x1727 (x1201 x98) x639 0)) (<= 0 x1645) (= (x1952 (+ x1976 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x1135) (= (x2309 x892 x502) x459) (= 0 x166) (= (x1727 (x1201 x312) (x331 4) 0) x639) (not x1154) (= (x418 x159) x1076) (= (x2309 26959946667150639794667015087019630673637144422540572481103610249215 x1076) x1976) (= (x899 (x1201 x404)) x2122) (= (div x237 x835) x18) (= (x1727 (x1201 x426) x1710 0) x1593) (= x1064 x1579) (= x1645 (x2075 x897)) (= (x1259 (- x1345 x969)) x840) (= x1579 (x601 x2245)) (<= 0 x1579)) x776))) x2160))
(assert (=> (>= 10000 x162) (= (x1201 x162) (x331 x162))))
(assert (x2220 x505))
(assert (= (and x1005 x1075) x650))
(assert (x2220 x2263))
(assert (x2220 x1440))
(assert (x1546 x708))
(assert (=> (<= x241 10000) (= (x331 x241) (x1201 x241))))
(assert (x2220 x1621))
(assert (x23 x2302))
(assert (x2220 x540))
(assert (x23 x241))
(assert (= (x188 x1990) 0))
(assert (x2220 x1765))
(assert (x2220 x1722))
(assert (x2220 x745))
(assert (x2220 x840))
(assert (x2220 x1861))
(assert (x2220 x167))
(assert (x2220 x604))
(assert (x2220 x187))
(assert (x2220 x395))
(assert (= x2301 (x1323 (x1201 x2301))))
(assert (x2220 x1129))
(assert (=> (>= 10000 x1282) (= (x1201 x1282) (x331 x1282))))
(assert (= x2227 (=> (and (or (and (= (= x2358 0) x367) (= (> x1202 x524) x2247) (= (x2309 1461501637330902918203684832716283019655932542975 x510) x1200) (<= x524 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (not x2247) (= x2358 0)) (and x2247 (= (< x589 x142) x457) (= x589 (x1224 160)) (or (and x457 (= x2041 x984) (= x984 (x1224 160))) (and (not x457) (= x2041 x142))) (= x1537 (= x524 0)) (or (and (= x2358 x2260) (= (x1259 (- x2041 x524)) x855) (= x2165 604800) (not x1537) (not (> x524 x2041)) (= (ite (> 604800 x855) x855 604800) x2260)) (and (= (x1259 (- x2041 x84)) x2092) (= x2092 x2358) x1537 (= x84 (x531 128)) (not (< x2041 x84)))))) (= x1457 (x1727 (x1201 x1971) (x331 1) 0)) (= x524 (x1771 x1603)) (= (x1727 (x1201 x1971) (x331 7) 0) x1605) (or (and (= (x2309 1461501637330902918203684832716283019655932542975 x819) x1812) (= 192 x523) (= (x2309 1461501637330902918203684832716283019655932542975 x510) x1489) x367) (and (<= 0 x1709) (= (x2118 x1899) x1709) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1709 x2328)) (= (x1727 (x1201 x1971) (x331 3) 0) x1660) (= (x2309 1461501637330902918203684832716283019655932542975 x510) x2326) (not x367) (= (x1727 (x1201 x62) x1660 0) x764) (= x523 192) (= x2328 x971) (= (x2309 1461501637330902918203684832716283019655932542975 x819) x62) (= x1649 x1709) (= x2328 x1148) (= x971 (* x1223 x2358)) (= x270 (+ x1148 x1649)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1223 x2358)) (= x1899 (x1727 (x1201 x317) x764 0)) (= (x2309 1461501637330902918203684832716283019655932542975 x819) x1753) (<= x1709 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x317 (x2309 1461501637330902918203684832716283019655932542975 x510)))) (= x619 (x1727 (x1201 x1353) x1605 0)) (= (x1718 x1457) x1433) (= x1202 (x1224 160)) (= (x234 x539) x73) (not x867) (= x1353 (x2309 1461501637330902918203684832716283019655932542975 x819)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1433) (= x539 (x1131 x1457 1)) (>= x1433 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x73) (>= x524 0) (= (x1727 (x1201 x1200) x619 0) x1603) (<= 0 x73)) (and (= x523 128) x867 (= (x2309 1461501637330902918203684832716283019655932542975 x510) x1376) (= (x2309 1461501637330902918203684832716283019655932542975 x819) x273))) (or (and (= x420 (x2309 1461501637330902918203684832716283019655932542975 x510)) (= (x2309 1461501637330902918203684832716283019655932542975 x819) x1019) (not x852)) x852) (= x867 (= x1223 0)) (= (= 0 x615) x852)) x1783)))
(assert (= (x1323 (x331 2258409472)) 2258409472))
(assert (x2220 x502))
(assert (x2220 x1946))
(assert (= x2067 (and x564 x1673)))
(assert (= (x272 (- x2357 x422)) (x1053 (- x2357 x422))))
(assert (= (x1053 (- x1511 x422)) (x272 (- x1511 x422))))
(assert (= (=> (= (= 274184521717934524641157099916833587214 x963) x700) (and (=> (not x700) x1560) (=> (and (= x928 x1369) (= (> x2355 x245) x633) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x219) (and (= true (<= x219 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x219))) x1263) (= x1933 (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0)) (<= 0 x928) (= x788 (>= (+ x928 x2355) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1862 274184521717934524641157099916833587206) (= x1651 x2355) (= x833 32) (= x324 x1720) (= x1651 x893) (<= x245 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 649617121 x1297)) (= (x1727 (x1201 x324) (x331 1) 0) x1787) x700 (= x219 (x1259 (- x479 4))) (= x790 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1565 x479) (not (< x1297 649617121)) (not (= x1297 1889567281)) (= x245 (x865 x1933)) (not (= x1297 2514000705)) (= x1297 2835717307) (<= x324 1461501637330902918203684832716283019655932542975) (not x1694) (not (< x479 4)) (not x788) (= x1736 x324) (= x911 274184521717934524641157099916833587206) (= x2355 x194) (not x633) (= x607 (x1727 (x1201 x324) (x331 1) 0)) (= 1 x1300) (= x739 (x1259 (- x245 x1651))) (= (x899 (x1201 274184521717934524641157099916833587214)) x1789) (= (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0) x778) (= (x1561 x607) x928) (= (> x1651 x245) x1694) (not x1263) (= x479 68) (< (+ x928 x2355) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< 0 x1789) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x928) (>= x245 0) (not (= x1297 826074471)) (= (+ x1369 x194) x1852)) x1147))) x782))
(assert (x2220 x1642))
(assert (x2220 x1720))
(assert (x2220 x1954))
(assert (x2220 x2))
(assert (x2220 x819))
(assert (= (and x662 x1684) x192))
(assert (x2220 x2358))
(assert (x2220 x574))
(assert (= (x1323 (x1201 x963)) x963))
(assert (= (x673 (- 132 x492)) (x2315 (- 132 x492))))
(assert (=> (>= 10000 x1) (= (x331 x1) (x1201 x1))))
(assert (x1546 x819))
(assert (x2220 x2302))
(assert (x2220 x396))
(assert (x23 x1793))
(assert (= x2148 (or (and x889 x560) (and x2073 x157))))
(assert (x2220 x1663))
(assert (x2220 x832))
(assert (x2220 x1093))
(assert (x23 x620))
(assert (= (x331 2258409472) (x1201 2258409472)))
(assert (x2220 x1187))
(assert (x2220 x1529))
(assert (x2220 x2144))
(assert (= (x1201 2211524764) (x331 2211524764)))
(assert (x2220 x133))
(assert (= x874 (=> (and (= (x1727 (x1201 x426) x1855 0) x55) (= x1855 (x1727 (x1201 x98) x1269 0)) (= x1765 (x1023 x55)) (= (= 0 x1765) x1684) (= x1269 (x1727 (x1201 x312) (x331 7) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1765) (>= x1765 0)) (and (=> (and (= x842 x312) (not x1684)) x1057) (=> x1684 x2006)))))
(assert (x2220 x2295))
(assert (x2220 x78))
(assert (x2220 x618))
(assert (= x2010 (=> (and (= x719 128) (= 468353030 x1143) (>= 1461501637330902918203684832716283019655932542975 x1309) (> 2293535753 x1143) (<= x97 1461501637330902918203684832716283019655932542975) (= x560 (= x1309 274184521717934524641157099916833587218)) (> x182 0) (> 911411945 x1143) (not (> 468353030 x1143)) (= x182 (x899 (x1201 274184521717934524641157099916833587206)))) (and (=> (not x560) x240) (=> (and (= (x432 x364) x1608) (not (= x1354 649617121)) (= x407 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1987) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1987) true) (< x1987 32)))) (not x407) (not (< x1354 649617121)) (= (x899 (x1201 274184521717934524641157099916833587218)) x1983) (not (> 4 x2179)) (< 0 x1983) (= x599 50942633119752846454219349998365661925608737367104304655302372697894809501696) (<= x1608 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1608) (not (= x1354 826074471)) x560 (= x1186 1) (<= x558 1461501637330902918203684832716283019655932542975) (= 1889567281 x1354) (= 36 x2179) (= (x1727 (x1201 x97) (x331 1) 0) x364) (= 36 x2179) (= (x1259 (- x2179 4)) x1987) (= 32 x922) (= x558 x97)) x1332)))))
(assert (x2220 x1962))
(assert (x2220 x686))
(assert (=> (>= 10000 x904) (= (x1201 x904) (x331 x904))))
(assert (x2220 x1063))
(assert (x2220 x409))
(assert (x2220 x1653))
(assert (= (x1323 (x331 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x2220 x835))
(assert (x2220 x919))
(assert (x2220 x1515))
(assert (x2220 x1341))
(assert (=> (<= x1321 10000) (= (x331 x1321) (x1201 x1321))))
(assert (= x1307 (and x416 x807)))
(assert (x2220 x2355))
(assert (x2220 x916))
(assert (x2220 x2083))
(assert (x2220 x1308))
(assert (x2220 x171))
(assert (x23 x2191))
(assert (= x481 (x1323 (x1201 x481))))
(assert (x2220 x525))
(assert (x2220 x1302))
(assert (x2220 x168))
(assert (= (x1936 (- x131 164)) (x712 (- x131 164))))
(assert (= x1333 (x1323 (x1201 x1333))))
(assert (x1546 x901))
(assert (x2220 x1887))
(assert (= (and x123 x2052) x520))
(assert (x2220 x1777))
(assert (x2220 x703))
(assert (=> (>= 10000 x494) (= (x331 x494) (x1201 x494))))
(assert (x23 x327))
(assert (= (=> (and (or (and x799 (= x1556 0) (= x1693 0)) (and (= x2219 (x1727 (x1201 x162) x2335 0)) (= x823 (x1404 x2219)) (= x2335 (x1727 (x1201 x477) x401 0)) (not x799) (= x823 x1693) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x823) (= 1 x1556) (= (x2309 1461501637330902918203684832716283019655932542975 x1448) x162) (= (x2309 1461501637330902918203684832716283019655932542975 x1793) x477) (<= 0 x823) (= x401 (x1727 (x1201 x25) (x331 9) 0)))) (= (= 0 x25) x799)) x1279) x92))
(assert (= (x1323 (x1201 x1321)) x1321))
(assert (x2220 x289))
(assert (x23 x574))
(assert (x2220 x376))
(assert (x2220 x1549))
(assert (x2220 x1055))
(assert (= (=> (and (= x268 x51) (= x672 x795)) x1059) x1358))
(assert (=> (<= x2008 10000) (= (x331 x2008) (x1201 x2008))))
(assert (= x162 (x1323 (x1201 x162))))
(assert (x23 x795))
(assert (x2220 x1576))
(assert (= (x1323 (x1201 x1452)) x1452))
(assert (x2220 x826))
(assert (x2220 x1018))
(assert (x2220 x181))
(assert (x2337 x3 x126))
(assert (x2220 x1994))
(assert (x2220 x1768))
(assert (x23 x1048))
(assert (x23 x1140))
(assert (x23 x1526))
(assert (= (=> (and (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x28) (not x1160) (or (and x1552 (= 0 x1604) (= 0 x1815)) (and (= x1815 1) (not x1552) (= x28 x1604))) (<= 0 x28) (= x605 (x1727 (x1201 x266) x1034 0)) (= (x1727 (x1201 x207) (x331 10) 0) x1034) (= (= 0 x28) x1552) (= x28 (x1633 x605))) (and (= 0 x1604) (= x1815 0) x1160)) (= x1160 (= 0 x207))) x452) x1424))
(assert (x23 x149))
(assert (= (x1323 (x1201 x207)) x207))
(assert (= (=> (and (= x1199 (= 0 x2070)) (or (and (= (x1727 (x1201 x266) x1098 0) x1384) (= (x1727 (x1201 x717) x1384 0) x333) (not x1199) (= x1880 x923) (= (x1404 x333) x923) (= x1083 1) (= (x1727 (x1201 x2070) (x331 9) 0) x1098) (<= 0 x923) (<= x923 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and x1199 (= 0 x1083) (= 0 x1880)))) x1958) x489))
(assert (= (=> (and (not (> x484 x399)) (<= x393 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x399 (x91 x2152)) (= x1904 (= 0 x2185)) (= x2175 (x1727 (x1201 x1805) x2018 0)) (<= 0 x484) (= (x1802 x1218) x484) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x399) (= x1322 (x1727 (x1201 x1971) (x331 3) 0)) (= (x2309 1461501637330902918203684832716283019655932542975 x510) x1532) (= x2185 (x1259 (- x399 x484))) (= (x1727 (x1201 x149) x1322 0) x1794) (= (x2309 1461501637330902918203684832716283019655932542975 x510) x2203) (= (x1727 (x1201 x2138) x419 0) x1218) (<= 0 x393) (<= 0 x399) (= x2138 (x2309 1461501637330902918203684832716283019655932542975 x3)) (= x393 (x1020 x1909)) (= (x1727 (x1201 x1242) x1066 0) x1909) (= x419 (x1727 (x1201 x2203) x2175 0)) (= (x2309 1461501637330902918203684832716283019655932542975 x819) x1805) (= x2018 (x1727 (x1201 x1971) (x331 4) 0)) (= (x2309 1461501637330902918203684832716283019655932542975 x819) x149) (<= x484 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2152 (x1727 (x1201 x1532) x1794 0)) (= x1066 (x1727 (x1201 x1971) (x331 5) 0)) (= (x2309 1461501637330902918203684832716283019655932542975 x819) x1242)) (and (=> x1904 x1358) (=> (and (= x120 (x1727 (x1201 x1971) (x331 11) 0)) (= (x1727 (x1201 x1613) x1719 0) x1086) (or (not x1473) (and (= (x1952 (+ x595 x1585)) x488) x1473)) (= (x1259 (- x1192 32)) x994) (= x796 (x1952 (+ x1564 100))) (= (x1727 (x1201 x327) x689 0) x2042) (= (x1259 (- x796 x1564)) x1192) (= (x1727 (x1201 x1452) x1086 0) x1951) (= (div x2080 1000000000000000000) x2253) (= (x1727 (x1201 x1876) x1067 0) x1719) (= 1 x929) (<= 0 x1417) (= x1585 (x1952 (+ x43 128))) (< (+ x1430 x2185) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (> x595 0) x1235) (< (* x1417 x1575) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x2309 1461501637330902918203684832716283019655932542975 x3) x1452) (= x536 (x2309 26959946667150639794667015087019630673637144422540572481103610249215 x396)) (= (x1952 (+ 68 x1564)) x1622) (or (and x1235 (or (and (not x1772) (= x692 32)) (and (= x1018 (x985 x1662)) (= x36 (< 64 x595)) x1772 (or (and (= x1414 (x1952 (+ 128 x796))) (= (< 96 x595) x1283) x36 (= x747 (x985 x925)) (or (and (not x1283) (= x692 96)) (and (not x1555) x1283 (= x1104 (x1952 (+ x796 160))) (= (< 128 x595) x1555) (= (x985 x1508) x1117) (= 128 x692) (= (x1952 (+ 128 x1564)) x1508))) (= x925 (x1952 (+ x1564 96)))) (and (not x36) (= x692 64))) (= x1662 (x1952 (+ 64 x1564))) (= (x1952 (+ 96 x796)) x1256))) (= x1585 x1999) (= x1422 x2134) (= (x985 x1422) x1521) (= (< 32 x595) x1772)) (and (= x692 0) (not x1235))) (<= 0 x1430) (= x2061 (+ x2109 x246)) (= (* x1417 x1575) x2080) x1827 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1430) (= x184 (x899 (x1201 x864))) (= (ite (> x2185 115792089237316195423570985008687907853269984665640564039457) 1 0) x708) (= (x1727 (x1201 x1971) (x331 4) 0) x1067) (= (x2309 1461501637330902918203684832716283019655932542975 x819) x2081) (= x1595 (x2309 x929 x708)) (> x393 0) (= x595 (x1261 x1564)) (= x862 (x2309 1461501637330902918203684832716283019655932542975 x510)) (= (x1952 (+ x536 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x1998) (= x1417 (x2075 x2042)) (= x246 x1430) (= 0 x1595) (= (div x2250 x393) x1575) (= (x1952 (+ 100 x523)) x43) (= 0 x1598) (= (mod (* x2185 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2250) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1417) (not x1904) (= (x2309 1461501637330902918203684832716283019655932542975 x3) x327) (= x1876 (x2309 1461501637330902918203684832716283019655932542975 x819)) (= x2109 x2185) (= (x2309 1461501637330902918203684832716283019655932542975 x3) x864) (= (> x692 x595) x1473) (= x1613 (x2309 1461501637330902918203684832716283019655932542975 x510)) (= x1430 (x1802 x1951)) (= x396 (x876 x2134)) (= x689 (x1727 (x1201 x2081) x120 0)) (= (x1952 (+ x523 96)) x2134) (= x1827 (< 0 x184))) x1087))) x997))
(assert (= (x1323 (x1201 x1113)) x1113))
(assert (x2220 x1125))
(assert (x2220 x724))
(assert (=> (<= x1242 10000) (= (x1201 x1242) (x331 x1242))))
(assert (x2220 x1828))
(assert (=> (<= x1887 10000) (= (x331 x1887) (x1201 x1887))))
(assert (x2220 x810))
(assert (x2220 x1732))
(assert (=> (<= x1876 10000) (= (x331 x1876) (x1201 x1876))))
(assert (x2220 x1697))
(assert (x2220 x446))
(assert (x2220 x197))
(assert (= (and x96 x981) x371))
(assert (= (x331 2514000705) (x1201 2514000705)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1323 (x331 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x2220 x547))
(assert (x2220 x585))
(assert (x2220 x2139))
(assert (=> (<= x635 10000) (= (x1201 x635) (x331 x635))))
(assert (= (or (and x1646 x1600) (and x886 x2290)) x1507))
(assert (x2220 x2317))
(assert (x2220 x1934))
(assert (x23 x27))
(assert (x2220 x406))
(assert (= x902 (=> (and (= (= x341 0) x1085) (= x341 (x1301 x1680)) (>= x341 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2053) (not (> x684 x2053)) (= x1007 (x1727 (x1201 x684) (x331 6) 0)) (>= x2053 0) (= x434 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x341) (= x1680 (x1727 (x1201 x434) x1007 0))) (and (=> (and (= (x1633 x1856) x1490) (= 0 x1930) (= (x1727 (x1201 x1360) x61 0) x1856) (= (x2309 1461501637330902918203684832716283019655932542975 x1793) x1360) (<= x1490 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1490 x1292) (= (x1727 (x1201 x684) (x331 10) 0) x61) (not x1085) (<= 0 x1490)) x1229) (=> x1085 x1408)))))
(assert (= (x2315 (- x1511 x492)) (x673 (- x1511 x492))))
(assert (x2220 x1809))
(assert (x2220 x849))
(assert (= (or x1978 (and (not x258) x1835)) x625))
(assert (x2220 x149))
(assert (x2220 x599))
(assert (= (=> (and (= (>= x1308 0) x72) x83 (= x1308 (x2095 (x1201 274184521717934524641157099916833587206))) (= x1963 (x608 (x1201 x404))) (= x1476 (= x404 274184521717934524641157099916833587218)) (= x1934 x173) x1092 (= x1390 (x2095 (x1201 274184521717934524641157099916833587206))) x72 (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x201) x83) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x608 (x1201 x404))) x1092) (= (x2095 (x1201 x404)) x201)) (and (=> (and (not x2110) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x301 x395)) (= x2066 (x1674 x2297)) (= x2166 274184521717934524641157099916833587206) (>= x2066 0) (>= 1461501637330902918203684832716283019655932542975 x1628) (= x395 x785) (not x992) (not (= 2514000705 x1044)) (not x68) (= x1628 x426) (not (= 826074471 x1044)) (not (< x1044 649617121)) (= (< x2066 x301) x681) (= (x1727 (x1201 x426) (x331 1) 0) x22) (= x2015 (+ x785 x1964)) (= x1943 32) (= x1791 (x1259 (- x516 4))) (<= x2066 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x68 (< x2066 x1974)) (= x992 (or (and (> 64 x1791) (= true (<= x1791 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1791))) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x301 x395)) x2110) (= x772 76450787359836037641860180984291677749980919077056822294353438043884394381312) (>= x395 0) x1476 (not (= 649617121 x1044)) (= (x899 (x1201 274184521717934524641157099916833587218)) x1382) (= x173 x516) (= x1044 2835717307) (= (x1727 (x1201 x426) (x331 1) 0) x1980) (not (= 1889567281 x1044)) (= x1974 x400) (= x415 (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0)) (= x301 x1964) (= x1974 x301) (= x516 68) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x395) (= (x1488 x1980) x395) (= x1134 1) (= x797 274184521717934524641157099916833587206) (< 0 x1382) (not (> 4 x516)) (not x681) (= (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0) x2297) (= (x1259 (- x2066 x1974)) x1303)) x44) (=> (not x1476) x1097))) x776))
(assert (x2220 x86))
(assert (= (=> (and (= x1029 (x1727 (x1201 x266) x2082 0)) (<= 0 x2091) (= (> x614 x2071) x646) (= (x728 x52) x614) (= (x1131 x383 1) x16) (= x8 (x234 x16)) (= (= x56 0) x2231) (= (x1718 x383) x2091) (or (and (not x1278) (= x1061 (x1727 (x1201 x266) x256 0)) (= x256 (x1727 (x1201 x1113) (x331 10) 0))) x1278) (= x1278 (= 0 x1815)) (<= 0 x2071) (<= x8 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= x2030 (* x56 x1604)) (= x2086 x1276) (= x1024 (x1727 (x1201 x1113) (x331 6) 0)) (not x2231) (= (x1727 (x1201 x266) x1677 0) x1813) (= (x915 x1813) x58) (< (+ x58 x2086) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x58 x999) (= (+ x1276 x999) x967) (>= x58 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58) (< (* x56 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1727 (x1201 x266) x1024 0) x2354) (= (x1727 (x1201 x1113) (x331 5) 0) x1677) (= x2086 x2030)) (and (= (x1727 (x1201 x266) x1116 0) x77) x2231 (= (x1727 (x1201 x1113) (x331 6) 0) x1116))) (= x2082 (x1727 (x1201 x1113) (x331 6) 0)) (<= x2071 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x8 0) (or (and (not x646) (= 0 x56)) (and (or (and (= x142 x2270) (not x448)) (and (= x951 (x728 x52)) (= x951 x2270) x448)) x646 (= x470 (= 0 x2071)) (= (x728 x52) x1631) (or (and (= x211 (x1259 (- x2270 x2272))) (= x56 x211) x470 (not (< x2270 x2272)) (= x2272 (x2158 x2132))) (and (= (ite (< x345 604800) x345 604800) x1516) (= (x1259 (- x2270 x2071)) x345) (= 604800 x1519) (not x470) (= x56 x1516) (not (< x2270 x2071)))) (= x448 (< x1631 x142)))) (= (x1952 (+ 32 x2132)) x52) (= (x1301 x1029) x2071) (<= x2091 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1952 (+ x2132 64)) x1861) (= (x1727 (x1201 x1113) (x331 1) 0) x383)) x2108) x452))
(assert (x2220 x959))
(assert (x2220 x1553))
(assert (= x904 (x1323 (x1201 x904))))
(assert (x2220 x2260))
(assert (=> (>= 10000 x1793) (= (x1201 x1793) (x331 x1793))))
(assert (x2220 x1162))
(assert (=> (>= 10000 x2275) (= (x331 x2275) (x1201 x2275))))
(assert (x23 x2244))
(assert (x23 x1903))
(assert (x23 x1200))
(assert (x2220 x1536))
(assert (= (x1577 x1538) (ite (and x2287 x2231) (x915 x1538) (x830 x1538))))
(assert (x2220 x324))
(assert (= (and (not x157) x2073) x244))
(assert (= (=> (= x2025 x842) x514) x1057))
(assert (= (=> (and (= (x786 x1941) x1190) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1962) (= x1962 (x234 x1326)) (= (= x1302 0) x2142) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1190) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1304) (<= 0 x1190) (= (x1727 (x1201 x1125) x213 0) x1941) (= (= 0 x1320) x107) (or (and (= (x2309 1461501637330902918203684832716283019655932542975 x819) x5) (not x2142)) x2142) (= x731 (> x1250 x1190)) (or (and (not x731) (= 0 x1320)) (and (= (x1898 x78) x116) (or (and (= x2139 x376) (= x2139 (x1898 x78)) x2167) (and (= x376 x142) (not x2167))) x731 (= (> x142 x116) x2167) (or (and x597 (= x1211 (x1676 x523)) (= x2246 x1320) (not (> x1211 x376)) (= x2246 (x1259 (- x376 x1211)))) (and (= x1367 (x1259 (- x376 x1190))) (= (ite (< x1367 604800) x1367 604800) x1832) (= x1129 604800) (not (> x1190 x376)) (not x597) (= x1320 x1832))) (= (= 0 x1190) x597))) (= (x1898 x78) x1250) (= x213 (x1727 (x1201 x1971) (x331 6) 0)) (= x1326 (x1131 x1137 1)) (= (x1718 x1137) x1304) (= x1125 (x2309 1461501637330902918203684832716283019655932542975 x819)) (= (x1952 (+ 32 x523)) x78) (= (x1952 (+ 64 x523)) x1564) (or (and (= (x2309 1461501637330902918203684832716283019655932542975 x819) x770) (= (x1727 (x1201 x1333) x1616 0) x1291) (= x1916 (x460 x1291)) (= x21 x1916) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1916) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1088 x1320)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1065 x1916)) (= (* x1320 x1088) x47) (= x47 x1065) (>= x1916 0) (= (x2309 1461501637330902918203684832716283019655932542975 x819) x1333) (not x107) (= (+ x21 x1438) x623) (= x1616 (x1727 (x1201 x1971) (x331 5) 0)) (= x1065 x1438)) (and x107 (= x585 (x2309 1461501637330902918203684832716283019655932542975 x819)))) (<= 0 x1304) (= (x1727 (x1201 x1971) (x331 1) 0) x1137) (<= 0 x1962)) x997) x1013))
(assert (x2220 x733))
(assert (x2220 x1418))
(assert (x23 x1360))
(assert (= (x1577 x744) (ite (and x2287 x2231) (x915 x744) (x830 x744))))
(assert (x2220 x450))
(assert (x23 x494))
(assert (= 911411945 (x1323 (x331 911411945))))
(assert (x2220 x39))
(assert (= (=> (= x690 x25) x92) x693))
(assert (x1546 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x2220 x1918))
(assert (=> (<= x751 10000) (= (x1201 x751) (x331 x751))))
(assert (x2220 x2065))
(assert (= (x1053 (- x825 x422)) (x272 (- x825 x422))))
(assert (x2220 x628))
(assert (x2220 x1134))
(assert (x2220 x262))
(assert (x2220 x550))
(assert (=> (<= x430 10000) (= (x331 x430) (x1201 x430))))
(assert (x2220 x1499))
(assert (= (x331 759532456) (x1201 759532456)))
(assert (x2220 x732))
(assert (x2220 x779))
(assert (x2220 x1417))
(assert (x2220 x134))
(assert (x2220 x1439))
(assert (x2220 x671))
(assert (x2220 x1182))
(assert (x2220 x685))
(assert (x2220 x2184))
(assert (x2220 x1931))
(assert (x2220 x1136))
(assert (=> (>= 10000 x1487) (= (x331 x1487) (x1201 x1487))))
(assert (= (ite (and x70 x315) (x1222 x1329) (ite (and x811 (not x315) x70) (x1222 x1329) (x1843 x1329))) (x148 x1329)))
(assert (= (=> (and (= (x2309 1461501637330902918203684832716283019655932542975 x1793) x2275) (= (= 0 x2351) x1391) (= x1780 (x1727 (x1201 x2275) x716 0)) (>= x2351 0) (= (x1727 (x1201 x684) (x331 6) 0) x716) (<= x2351 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1301 x1780) x2351)) (and (=> x1391 x1517) (=> (and (not x1391) (= x2352 x684)) x467))) x1486))
(assert (x23 x2255))
(assert (x2220 x1769))
(assert (= (and x1403 x485) x153))
(assert (= (x2315 (- x628 x492)) (x673 (- x628 x492))))
(assert (= x889 x1327))
(assert (= (x812 x475) 0))
(assert (x2220 x2033))
(assert (x2220 x1876))
(assert (x2220 x1564))
(assert (=> (<= x2203 10000) (= (x1201 x2203) (x331 x2203))))
(assert (= (x1346 (- 132 x1021)) (x1672 (- 132 x1021))))
(assert (x2220 x2051))
(assert (= (x1323 (x1201 x2191)) x2191))
(assert (= (and (not x1154) x2031) x759))
(assert (= 0 (x188 x2317)))
(assert (x2220 x1254))
(assert (x23 x884))
(assert (x2220 x1248))
(assert (x2220 x281))
(assert (=> (>= 10000 x2244) (= (x1201 x2244) (x331 x2244))))
(assert (= (=> (= x1449 x908) x718) x996))
(assert (x2220 x1470))
(assert (x2220 x727))
(assert (= (x1323 (x1201 x1642)) x1642))
(assert (= (and (not x700) x2283) x1133))
(assert (= x1588 (or (and x49 x721) (and x224 x1883))))
(assert (x23 x864))
(assert (x2220 x1365))
(assert (x2220 x2311))
(assert (x2220 x1519))
(assert (= x814 (and x2021 x2236)))
(assert (x2220 x510))
(assert (x2220 x2352))
(assert (x2220 x1628))
(assert (= x2025 (x1323 (x1201 x2025))))
(assert (x2220 x1839))
(assert (x2220 x1214))
(assert (= x1763 (=> (and (not (or (> x1109 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1109 32) (= true (<= x1109 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x1559 128) x528) (= x528 x777) (not (= x1975 0))) (=> (and (= x691 x1994) (= x1227 x917) (= x328 x777) (= x953 x1732) (= x1426 x588) (= x791 x1077) (= x1124 x783) (= x90 x208) (= x857 x1558)) x1155))))
(assert (= x1058 (=> (and (= (x355 (x1201 274184521717934524641157099916833587206)) x2072) x803 (= x1459 x1565) (= x2173 (x102 (x1201 x963))) (= x76 (< x195 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x195 (x355 (x1201 x963))) x1741 x76 (= x1741 (>= x289 0)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x102 (x1201 x963))) x803) (= x289 (x355 (x1201 274184521717934524641157099916833587206))) (= (= 274184521717934524641157099916833587218 x963) x861)) (and (=> (not x861) x782) (=> (and (= 274184521717934524641157099916833587206 x2058) (= x269 x556) (= (< x733 x556) x2306) (= x844 x2170) (= x733 (x1965 x2136)) x861 (= 32 x833) (not x1049) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2256) true) (< x2256 64)) (> x2256 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1049) (= x713 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1736 x2170) (= (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0) x1464) (not (< x959 649617121)) (= (x1259 (- x802 4)) x2256) (= x1647 (x1727 (x1201 x2170) (x331 1) 0)) (not (< x802 4)) (not (= 2514000705 x959)) (= (x1259 (- x733 x269)) x1738) (not x1695) (= x269 x893) (= x1695 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x556 x1972))) (>= x733 0) (= x556 x1393) (= x553 x1972) (= x959 2835717307) (not x1892) (not x2306) (= x2136 (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0)) (not (= 826074471 x959)) (>= x1972 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1972 x556)) (<= x733 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x530 x1647) x1972) (= x1892 (> x269 x733)) (< 0 x2089) (= 274184521717934524641157099916833587206 x176) (= x1208 (x1727 (x1201 x2170) (x331 1) 0)) (= (+ x553 x1393) x677) (>= 1461501637330902918203684832716283019655932542975 x2170) (= 68 x802) (= x1300 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1972) (= x2089 (x899 (x1201 274184521717934524641157099916833587218))) (not (= 1889567281 x959)) (= x802 x1565) (not (= x959 649617121))) x1147)))))
(assert (x2220 x524))
(assert (= (x1346 (- x628 x1021)) (x1672 (- x628 x1021))))
(assert (= (=> (and (<= 0 x1022) (= (x1727 (x1201 x426) x41 0) x2188) (<= x1022 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1727 (x1201 x98) x1715 0) x41) (= x1022 (x1023 x2188)) (= (= x1022 0) x285) (= (x1727 (x1201 x1650) (x331 7) 0) x1715)) (and (=> (and (= (> x894 0) x781) (= (x1259 (- x1650 1)) x894) (not x781) x285) x1364) (=> (and (not x285) (= x842 x1650)) x1057))) x310))
(assert (=> (<= x1918 10000) (= (x331 x1918) (x1201 x1918))))
(assert (x23 x2138))
(assert (x2220 x1786))
(assert (x2220 x2055))
(assert (= x2244 (x1323 (x1201 x2244))))
(assert (x2220 x2074))
(assert (= (and x1407 x869) x1400))
(assert (x2220 x435))
(assert (x2220 x862))
(assert (x2220 x2218))
(assert (x23 x2093))
(assert (x2220 x2241))
(assert (x2220 x1832))
(assert (x2220 x56))
(assert (x2220 x1749))
(assert (x2220 x1241))
(assert (x2220 x12))
(assert (x2220 x1631))
(assert (= 0 (x812 x1563)))
(assert (x2220 x1799))
(assert (x2220 x614))
(assert (= (x2315 (- 196 x492)) (x673 (- 196 x492))))
(assert (x2220 x1430))
(assert (x2220 x249))
(assert (= x1905 (x1323 (x1201 x1905))))
(assert (= (ite x495 (ite (and x861 x1138) (x88 x1463) (x1965 x1463)) (x1965 x1463)) (x1079 x1463)))
(assert (=> (>= 10000 x1971) (= (x331 x1971) (x1201 x1971))))
(assert (= 0 (x868 x834)))
(assert (x2220 x523))
(assert (= x751 (x1323 (x1201 x751))))
(assert (= x1883 (and x293 (not x1904))))
(assert (x2220 x1622))
(assert (x23 x510))
(assert (x2220 x494))
(assert (= x944 (=> (and (= x1775 (x1727 (x1201 x2093) (x331 7) 0)) (= x509 (x1727 (x1201 x2229) x1775 0)) (>= x2156 0) (= x2156 (x487 x2094)) (= x2229 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (= x1776 (x2309 1461501637330902918203684832716283019655932542975 x1448)) (<= x2156 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x2156) x390) (= x2094 (x1727 (x1201 x1776) x509 0))) (and (=> (and (= x690 x2093) (not x390)) x693) (=> (and (not x749) x390 (= x919 (x1259 (- x2093 1))) (= x749 (< 0 x919))) x519)))))
(assert (x2220 x230))
(assert (x2220 x516))
(assert (x2220 x617))
(assert (= x75 (or x412 x1203)))
(assert (x2220 x1893))
(assert (x2220 x1419))
(assert (x23 x751))
(assert (x2220 x1117))
(assert (x23 x162))
(assert (x247 x1084 x634))
(assert (= (and x1454 x814) x1102))
(assert (x2220 x48))
(assert (x2220 x2076))
(assert (x2220 x951))
(assert (=> (>= 10000 x97) (= (x331 x97) (x1201 x97))))
(assert (= (=> (= x1293 0) x1035) x1043))
(assert (x2220 x1173))
(assert (x2220 x2208))
(assert (x2220 x1037))
(assert (x2220 x1423))
(assert (x2220 x2061))
(assert (x2220 x1433))
(assert (= (or (and x1138 x861) (and x700 x2283)) x495))
(assert (x2220 x1988))
(assert (= 0 (x2017 x815)))
(assert (x23 x1452))
(assert (x2220 x1716))
(assert (= x1978 (or x100 x909)))
(assert (x2220 x1656))
(assert (x23 x2008))
(assert (= (ite x495 (ite (and x1138 x861) (x865 x295) (x449 x295)) (x865 x295)) (x638 x295)))
(assert (= (=> (and (= x545 (x1727 (x1201 x1487) x291 0)) (= x2014 (x786 x545)) (= x757 (= x2014 0)) (<= 0 x2014) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2014) (= (x1727 (x1201 x1971) (x331 6) 0) x291) (= x1487 (x2309 1461501637330902918203684832716283019655932542975 x819))) (and (=> (and (not x757) (= x1679 x1971)) x1581) (=> x757 x1901))) x940))
(assert (=> (>= 10000 x66) (= (x1201 x66) (x331 x66))))
(assert (= x493 (or (and x255 x1046) (and x1288 x1468))))
(assert (= (or x750 x1929) x937))
(assert (x2220 x887))
(assert (x23 x1905))
(assert (x2220 x973))
(assert (= (=> (and (= x1198 x328) (= x1653 x217) (= x1480 (= x2340 x1198)) (= x2340 x1653)) x1480) x2040))
(assert (= (x673 (- 164 x492)) (x2315 (- 164 x492))))
(assert (= (x1323 (x1201 x98)) x98))
(assert (x2220 x2013))
(assert (x2220 x783))
(assert (= x682 (=> (= 0 x1526) x2128)))
(assert (x2220 x1585))
(assert (x23 x755))
(assert (= (or x1927 x943) x1690))
(assert (x1960 x466 x2235))
(assert (=> (>= 10000 x175) (= (x1201 x175) (x331 x175))))
(assert (= 274184521717934524641157099916833587206 (x1323 (x331 274184521717934524641157099916833587206))))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1323 (x331 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (x2220 x468))
(assert (x2220 x1979))
(assert (x1546 x1461))
(assert (x2220 x1143))
(assert (x2220 x1179))
(assert (x2220 x46))
(assert (x2220 x2298))
(assert (= (=> (= (> x579 1) x518) (and (=> x518 x2216) (=> (not x518) x1668))) x1711))
(assert (x2220 x1598))
(assert (x2190 x901 x1796 x1925 x471))
(assert (=> (<= x481 10000) (= (x1201 x481) (x331 x481))))
(assert (= 604800 (x1323 (x331 604800))))
(assert (x2220 x1342))
(assert (x2220 x1448))
(assert (x2220 x795))
(assert (x2220 x14))
(assert (=> (<= x1526 10000) (= (x1201 x1526) (x331 x1526))))
(assert (= (x1323 (x1201 x1448)) x1448))
(assert (x2220 x1675))
(assert (x2220 x1566))
(assert (x2220 x189))
(assert (x23 x97))
(assert (x2220 x708))
(assert (= (x1323 (x331 1968616202)) 1968616202))
(assert (= (=> (and (= x869 (> x612 0)) (= (x1259 (- x1113 1)) x612)) (and (=> x869 x1163) (=> (not x869) x1685))) x1844))
(assert (x2220 x311))
(assert (x2220 x1995))
(assert (x2220 x426))
(assert (x2337 x2123 x1274))
(assert (= (x1323 (x1201 x819)) x819))
(assert (x2220 x1791))
(assert (x2220 x2015))
(assert (= (x1672 (- x1520 x1021)) (x1346 (- x1520 x1021))))
(assert (x2220 x2165))
(assert (x2220 x1491))
(assert (x2220 x824))
(assert (x1960 x396 x1239))
(assert (= (ite (and x70 x315) (x1222 x921) (ite (and x811 x70 (not x315)) (x1222 x921) (x1843 x921))) (x148 x921)))
(assert (x2220 x53))
(assert (x2220 x1824))
(assert (x2220 x967))
(assert (x2220 x626))
(assert (x2220 x1880))
(assert (x2220 x1069))
(assert (= (x1323 (x1201 x620)) x620))
(assert (x23 x1650))
(assert (=> (<= x2322 10000) (= (x1201 x2322) (x331 x2322))))
(assert (x2220 x1114))
(assert (= (x1936 (- x1520 164)) (x712 (- x1520 164))))
(assert (x2220 x1608))
(assert (x2220 x5))
(assert (x2220 x1785))
(assert (x2220 x104))
(assert (x2220 x2277))
(assert (x2220 x8))
(assert (x2220 x1725))
(assert (x2220 x201))
(assert (x2220 x1033))
(assert (x2220 x500))
(assert (x2220 x2086))
(assert (x23 x2301))
(assert (x2220 x270))
(assert (= x431 (x1323 (x1201 x431))))
(assert (= (=> (and (= x330 (= 0 x1526)) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2125) (not x330) (>= x2125 0) (= (= 0 x2125) x891) (= (x2309 1461501637330902918203684832716283019655932542975 x1793) x1282) (= (x1727 (x1201 x1526) (x331 10) 0) x1196) (= x1447 (x1727 (x1201 x1282) x1196 0)) (= x2125 (x1633 x1447)) (or (and (= x1930 0) (= 0 x1292) x891) (and (not x891) (= x1292 x2125) (= x1930 1)))) (and x330 (= x1292 0) (= x1930 0)))) x1229) x2128))
(assert (x2220 x913))
(assert (= (ite (and x1317 x1820) (x865 x1821) (ite (and x1600 x1646) (x865 x1821) (x1745 x1821))) (x1152 x1821)))
(assert (= (and x303 x1634) x1913))
(assert (x23 x586))
(assert (= x526 (=> (= 0 x207) x1424)))
(assert (x2220 x1080))
(assert (= x2087 x70))
(assert (x2220 x424))
(assert (= (+ 1 (x1323 x1457)) (x1323 (x1131 x1457 1))))
(assert (= x927 (and x1178 x1102)))
(assert (x2220 x1957))
(assert (= (=> (and (not x1458) (= (< 2 x579) x1458)) x1668) x251))
(assert (x2220 x558))
(assert (= (x1577 x2161) (ite (and x2287 x2231) (x915 x2161) (x830 x2161))))
(assert (x2220 x2011))
(assert (= x1613 (x1323 (x1201 x1613))))
(assert (x2220 x535))
(assert true)
(assert (= (x1201 604800) (x331 604800)))
(assert (x2220 x1255))
(assert (x2220 x606))
(assert (= x1634 (and x1085 x1460)))
(assert (x2220 x825))
(assert (= x2197 (=> (= x2290 (= x1935 274184521717934524641157099916833587214)) (and (=> (and (>= 1461501637330902918203684832716283019655932542975 x703) (= x64 x2149) (< 0 x472) (not x2223) (= x472 (x899 (x1201 274184521717934524641157099916833587214))) (not x1157) (= (x1259 (- x313 x1465)) x1737) (= x2336 x1465) (not (= 1889567281 x577)) (= x1825 (x1727 (x1201 x717) (x331 1) 0)) (= x1550 (x1849 x1825)) (not (= 826074471 x577)) (<= 0 x313) (not x1688) (= (x1259 (- x557 4)) x309) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1550 x2149)) x2223) (= x587 x618) (= 1 x473) (= x136 (x1727 (x1201 x717) (x331 1) 0)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x309) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x309) true) (< x309 64))) x1688) (<= 0 x1550) (= x1995 274184521717934524641157099916833587206) (= 68 x557) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1550 x2149)) (= x1465 x2149) (= x695 x1550) (= x717 x703) (= (> x1465 x313) x1328) (not (< x577 649617121)) (= 2835717307 x577) x2290 (= x1946 x557) (= x464 (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0)) (not x1328) (not (= 649617121 x577)) (= x2177 (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0)) (= (< x313 x2149) x1157) (not (< x557 4)) (= 32 x2036) (= x238 76450787359836037641860180984291677749980919077056822294353438043884394381312) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x313) (not (= 2514000705 x577)) (= x313 (x865 x2177)) (= x1392 (+ x695 x64)) (<= x1550 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587206 x1547)) x1118) (=> (not x2290) x1939)))))
(assert (x2220 x877))
(assert (= x1048 (x1323 (x1201 x1048))))
(assert (x2220 x2229))
(assert (=> (<= x1423 10000) (= (x1201 x1423) (x331 x1423))))
(assert (x2220 x2224))
(assert (= (x1323 (x1201 x175)) x175))
(assert (x2220 x948))
(assert (= (=> (and (= (x1727 (x1201 x1113) (x331 6) 0) x469) (= (x1301 x542) x947) (= (x1727 (x1201 x266) x469 0) x542) (<= x947 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x947) (= (= 0 x947) x981)) (and (=> (and (not x981) (= x666 x1113)) x2124) (=> x981 x1164))) x1060))
(assert (x2220 x1172))
(assert (x2220 x735))
(assert (x2220 x1048))
(assert (x2220 x472))
(assert (x2220 x2340))
(assert (x2220 x360))
(assert (x2220 x930))
(assert (x2220 x859))
(assert (x2220 x320))
(assert (x2220 x620))
(assert (x2220 x1339))
(assert (x2220 x62))
(assert (x2220 x1122))
(assert (x2220 x1703))
(assert (= x7 (or (and x759 x1476) (and x1348 x1383))))
(assert (x2220 x1862))
(assert (x2220 x57))
(assert (= (and x1468 (not x1288)) x1535))
(assert (x2220 x1657))
(assert (= x762 (=> (= 0 x1449) x718)))
(assert (=> (>= 10000 x1842) (= (x1201 x1842) (x331 x1842))))
(assert (x2220 x817))
(assert (x2220 x1090))
(assert (x2220 x1935))
(assert (= (=> (and (= (x1952 (+ 64 x616)) x1788) (<= 0 x2053) (<= x2053 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x288 (x1023 x575)) (not (< x2053 x312)) (<= 0 x2053) (= x2208 (x1952 (+ 64 x628))) (>= 1461501637330902918203684832716283019655932542975 x98) (>= 1461501637330902918203684832716283019655932542975 x404) (>= 1461501637330902918203684832716283019655932542975 x426) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2053) (= (x1950 x2208) x426) (= x2357 (x1952 (+ x825 64))) (not (< x2053 x312)) (= x575 (x1727 (x1201 x426) x669 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x288) (= (x1950 x1788) x98) (> x659 1) (= (x1950 x2357) x404) (= (x1727 (x1201 x98) x871 0) x669) (= x871 (x1727 (x1201 x312) (x331 7) 0)) (< 1 x579) (= (x1950 196) x312) (< 1 x1339) (<= 0 x288) (= x297 (< 0 x288)) (> x1221 1)) (and (=> (and (= x720 (x1727 (x1201 x312) (x331 9) 0)) x297 (>= x496 0) (= (x1727 (x1201 x426) x1761 0) x1953) (= x496 (x1128 x1953)) (= x1761 (x1727 (x1201 x98) x720 0)) (= x671 x496) (= x1415 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x496)) x1601) (=> (not x297) x1361))) x2216))
(assert (x2220 x631))
(assert (= x807 (and x1913 x1391)))
(assert (x2220 x427))
(assert (=> (<= x1179 10000) (= (x331 x1179) (x1201 x1179))))
(assert (= (x1323 (x1201 x66)) x66))
(assert (x2220 x719))
(assert (x1546 x2212))
(assert (x2220 x2203))
(assert (x2220 x1489))
(assert (= true x1295))
(assert (= (or (and (not x1141) x520) (and x650 (not x757))) x909))
(assert (x23 x1333))
(assert (= (x712 (- x1788 164)) (x1936 (- x1788 164))))
(assert (= (x188 x1678) 0))
(assert (x1960 x1076 x1830))
(assert (x2220 x2336))
(assert (x23 x547))
(assert (x2220 x1737))
(assert (x2220 x592))
(assert (= x1107 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2053) (= x752 (x487 x378)) (< 0 x2232) (<= 0 x505) (<= 0 x461) (> 468353030 x1749) (>= 1461501637330902918203684832716283019655932542975 x505) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2053) (<= x461 1461501637330902918203684832716283019655932542975) (> 911411945 x1749) (>= x1093 0) (not (< x2053 x684)) (= x378 (x1727 (x1201 x1448) x30 0)) (= x1244 x505) (<= 0 x752) (not (= 142201243 x1749)) (= x2232 (x899 (x1201 274184521717934524641157099916833587206))) (<= 0 x2053) (= x1318 (< 0 x752)) (<= x752 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1727 (x1201 x1793) x1890 0) x30) (not (= 87118632 x1749)) (<= 0 x2053) (not (< x2053 x684)) (>= 1461501637330902918203684832716283019655932542975 x2123) (<= x1448 1461501637330902918203684832716283019655932542975) (= x1869 x142) (<= x1793 1461501637330902918203684832716283019655932542975) (= (x1727 (x1201 x684) (x331 7) 0) x1890) (= x798 x1625) (= x1093 x2150) (< x1749 2293535753) (= x798 0) (>= 1461501637330902918203684832716283019655932542975 x1093) (= 243137395 x1749) (not (= x1749 69947311)) (= x1244 x877)) (and (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1942) (= x1493 (x2309 1461501637330902918203684832716283019655932542975 x1793)) (= x2301 (x2309 1461501637330902918203684832716283019655932542975 x1448)) x1318 (= x1270 (x1727 (x1201 x684) (x331 9) 0)) (= x1443 (x1727 (x1201 x2301) x2343 0)) (= x1942 x1693) (= x2343 (x1727 (x1201 x1493) x1270 0)) (= x1556 0) (>= x1942 0) (= (x1404 x1443) x1942)) x1279) (=> (not x1318) x562)))))
(assert (x2220 x2293))
(assert (= (or (and x1005 (not x1075)) (and (not x2052) x123) (and x520 x1141)) x100))
(assert (= (x2315 (- x2208 x492)) (x673 (- x2208 x492))))
(assert (x1546 x2123))
(assert (=> (>= 10000 x1776) (= (x1201 x1776) (x331 x1776))))
(assert (x2220 x1753))
(assert (x2220 x1652))
(assert (= (x1323 (x1131 x2274 1)) (+ 1 (x1323 x2274))))
(assert (x2220 x595))
(assert (x2220 x2339))
(assert (= 1889567281 (x1323 (x331 1889567281))))
(assert (x23 x2081))
(assert (x2220 x66))
(assert (x2220 x1520))
(assert (x2220 x479))
(assert (x2220 x1021))
(assert (x2220 x443))
(assert (x23 x1123))
(assert (= x564 (and (not x1395) x1798)))
(assert (x2220 x1479))
(assert (x2220 x1320))
(assert (x2220 x2032))
(assert (x2220 x1773))
(assert (x2220 x392))
(assert (x2220 x1650))
(assert (x2220 x1099))
(assert (x2220 x301))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1323 (x331 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x2220 x984))
(assert (= x1150 (x1323 (x1201 x1150))))
(assert (= (x1323 (x1131 x1462 1)) (+ 1 (x1323 x1462))))
(assert (x2220 x1514))
(assert (x2220 x579))
(assert (x2220 x35))
(assert (x2220 x928))
(assert (= (and (not x224) x1883) x721))
(assert (= (x1323 (x331 2293535753)) 2293535753))
(assert (= 0 (x188 x2325)))
(assert (= (=> (and (= x1277 (x1727 (x1201 x573) (x331 6) 0)) (= x724 (x1301 x1670)) (<= x724 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x724) x1874) (= (x1727 (x1201 x266) x1277 0) x1670) (<= 0 x724)) (and (=> (and (= x573 x666) (not x1874)) x2124) (=> (and (= x1712 (> x1914 0)) (= x1914 (x1259 (- x573 1))) x1874 (not x1712)) x526))) x655))
(assert (= (x1441 x1074) (ite (and x1820 x1317) (x1568 x1074) (x1437 x1074))))
(assert (x2220 x352))
(assert (= x622 (x1323 (x1201 x622))))
(assert (=> (<= x620 10000) (= (x331 x620) (x1201 x620))))
(assert (x2220 x1595))
(assert (= (and x1640 x941) x96))
(assert (= (or (and x1400 (not x1081)) (and x26 (not x663))) x750))
(assert (x2220 x1338))
(assert (x2220 x404))
(assert (x2220 x805))
(assert (x2220 x312))
(assert (=> (<= x1532 10000) (= (x331 x1532) (x1201 x1532))))
(assert (x2220 x18))
(assert (x2220 x1371))
(assert (x2220 x491))
(assert (= (x325 x1069) 0))
(assert (= (x1936 (- x616 164)) (x712 (- x616 164))))
(assert (x2220 x1623))
(assert (= x1123 (x1323 (x1201 x1123))))
(assert (x2220 x393))
(assert (x2220 x73))
(assert (x2220 x1666))
(assert (x2220 x1850))
(assert (= (x1323 (x1201 x1282)) x1282))
(assert (x2220 x1532))
(assert (= x1468 (and (not x1046) x255)))
(assert (x2220 x918))
(assert (x2220 x2232))
(assert (x2220 x1153))
(assert (= (x1323 (x1201 x635)) x635))
(assert (x23 x25))
(assert (x2220 x166))
(assert (= (x1053 (- 132 x422)) (x272 (- 132 x422))))
(assert (x2220 x185))
(assert (x23 x317))
(assert (x2220 x1456))
(assert (=> (<= x612 10000) (= (x1201 x612) (x331 x612))))
(assert (x2220 x1971))
(assert (x2220 x11))
(assert (= x2283 (and (not x861) x1138)))
(assert (x2220 x98))
(assert (x2220 x752))
(assert (x2220 x1914))
(assert (= 1986467848 (x1323 (x331 1986467848))))
(assert (x2220 x1186))
(assert (x2220 x1589))
(assert (x2220 x1226))
(assert (x2220 x284))
(assert (x1546 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (=> (<= x98 10000) (= (x331 x98) (x1201 x98))))
(assert (x2220 x1818))
(assert (= (x460 x1700) (ite (and (not x1512) x707) (x567 x1700) (x915 x1700))))
(assert (= (or (and x814 (not x1454)) (and x1264 x2113) (and x927 (not x280))) x571))
(assert (= (x1323 (x1201 x784)) x784))
(assert (x2220 x1582))
(assert (x2220 x1242))
(assert (x2220 x747))
(assert (= x1935 (x1323 (x1201 x1935))))
(assert (x23 x2170))
(assert (x2220 x831))
(assert (x2220 x1294))
(assert (= (x1152 x2204) (ite (and x1820 x1317) (x865 x2204) (ite (and x1600 x1646) (x865 x2204) (x1745 x2204)))))
(assert (= (x1323 (x1131 x1137 1)) (+ 1 (x1323 x1137))))
(assert (x2220 x1836))
(assert (x23 x1321))
(assert (x2220 x2134))
(assert (x1546 1461501637330902918203684832716283019655932542975))
(assert (= x2236 x2137))
(assert (x23 x430))
(assert (x2220 x684))
(assert (x23 x1439))
(assert (x2220 x1351))
(assert (x2220 x27))
(assert (x2220 x2022))
(assert (= (x1323 (x1201 x434)) x434))
(assert (x23 x1776))
(assert (= x1971 (x1323 (x1201 x1971))))
(assert (x2220 x1360))
(assert (=> (>= 10000 x1452) (= (x1201 x1452) (x331 x1452))))
(assert (x2220 x1558))
(assert (x2220 x2143))
(assert (x2220 x1089))
(assert (= 0 (x1228 x1422)))
(assert (x2220 x386))
(assert (= (x712 (- x2357 164)) (x1936 (- x2357 164))))
(assert (= x1805 (x1323 (x1201 x1805))))
(assert (x2220 x925))
(assert (x23 x312))
(assert (= x25 (x1323 (x1201 x25))))
(assert (=> (<= x426 10000) (= (x331 x426) (x1201 x426))))
(assert (= (x272 (- x616 x422)) (x1053 (- x616 x422))))
(assert (x2220 x1217))
(assert (x2220 x1922))
(assert (x2220 x237))
(assert (x2220 x780))
(assert (x2220 x894))
(assert (=> (>= 10000 x884) (= (x1201 x884) (x331 x884))))
(assert (x2220 x1372))
(assert (x2220 x1158))
(assert (x2220 x317))
(assert (x2337 x510 x67))
(assert (x2220 x1781))
(assert (x2220 x702))
(assert (=> (<= x963 10000) (= (x1201 x963) (x331 x963))))
(assert (=> (<= x684 10000) (= (x331 x684) (x1201 x684))))
(assert (x2220 x1135))
(assert (x2220 x161))
(assert (=> (>= 10000 x2229) (= (x1201 x2229) (x331 x2229))))
(assert (= (=> (= x751 x1679) x1864) x1581))
(assert (x2220 x1709))
(assert (= (ite (and x1070 (not x903) (not x1062)) (x1928 x1899) (x1222 x1899)) (x2118 x1899)))
(assert (= (+ 1 (x1323 x808)) (x1323 (x1131 x808 1))))
(assert (x2220 x209))
(assert (x2220 x1303))
(assert (= x239 (and (not x2290) x886)))
(assert (x2220 x2037))
(assert (= (x331 911411945) (x1201 911411945)))
(assert (x2220 x1721))
(assert (x2220 x38))
(assert (=> (>= 10000 x784) (= (x331 x784) (x1201 x784))))
(assert (x23 x1532))
(assert (= 0 (x325 x2083)))
(assert (x23 x1150))
(assert (=> (>= 10000 x2301) (= (x331 x2301) (x1201 x2301))))
(assert (x2220 x1974))
(assert (x23 x1))
(assert (x2220 x175))
(assert (x2220 x1884))
(assert (x2220 x556))
(assert (x2220 x1396))
(assert (x2220 x2066))
(assert (= x884 (x1323 (x1201 x884))))
(assert (= (x1323 (x1201 x1532)) x1532))
(assert (x2220 x2092))
(assert (x2220 x796))
(assert (x2220 x420))
(assert (x2220 x1427))
(assert (=> (<= x2070 10000) (= (x1201 x2070) (x331 x2070))))
(assert (x2220 x2303))
(assert (x2220 x2070))
(assert (x2220 x254))
(assert (x2220 x1421))
(assert (= (ite (and (not x1062) (not x903) x1070) (x1928 x2152) (x1222 x2152)) (x2118 x2152)))
(assert (=> (>= 10000 x27) (= (x331 x27) (x1201 x27))))
(assert (=> (>= 10000 x1935) (= (x331 x1935) (x1201 x1935))))
(assert (x2220 x2322))
(assert (x2220 x1671))
(assert (= (x331 1968616202) (x1201 1968616202)))
(assert (x2220 x1554))
(assert (x2220 x1667))
(assert (= x1407 (and x663 x26)))
(assert (= x1312 x1030))
(assert (x2220 x1416))
(assert (x2220 x634))
(assert (x2220 x1189))
(assert (x2220 x1943))
(assert (x2220 x935))
(assert (x2220 x616))
(assert (x23 x1398))
(assert (x2220 x28))
(assert (x2220 x2106))
(assert (= (x1323 (x1201 x1449)) x1449))
(assert (x2220 x698))
(assert (= x755 (x1323 (x1201 x755))))
(assert (x23 x1876))
(assert (x23 x612))
(assert (= (x1323 (x1201 x128)) x128))
(assert (x2220 x1113))
(assert (= (=> (= (= x51 274184521717934524641157099916833587214) x1288) (and (=> (and (<= x421 1461501637330902918203684832716283019655932542975) (= x48 36) (= x795 x421) (< 0 x761) x1288 (= x504 (or (> x1379 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1379) true) (> 32 x1379)))) (= x1100 1889567281) (not x504) (= x640 (x2329 x1704)) (= x2361 50942633119752846454219349998365661925608737367104304655302372697894809501696) (<= 0 x640) (= x48 36) (= (x1259 (- x48 4)) x1379) (not (= 649617121 x1100)) (= x1109 32) (= x1975 1) (not (< x1100 649617121)) (= x1704 (x1727 (x1201 x795) (x331 1) 0)) (not (< x48 4)) (<= x640 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x899 (x1201 274184521717934524641157099916833587214)) x761) (not (= x1100 826074471))) x1763) (=> (not x1288) x704))) x593))
(assert (= (x712 (- x628 164)) (x1936 (- x628 164))))
(assert (x2220 x2359))
(assert (= x586 (x1323 (x1201 x586))))
(assert (x2220 x2156))
(assert (x2220 x651))
(assert (x2220 x1903))
(assert (x2220 x425))
(assert (= x1706 (and x518 x611)))
(assert (x2220 x1612))
(assert (x2220 x962))
(assert (x2220 x528))
(assert (x2220 x2125))
(assert (x2220 x1353))
(assert (= (x1346 (- 164 x1021)) (x1672 (- 164 x1021))))
(assert (x23 x1448))
(assert (= x1147 (=> (and (= x942 (x129 (x1201 x963))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2164 (x1201 274184521717934524641157099916833587206))) x1230) (not (= x1300 0)) (= (x2210 x815) x284) (= (< 0 x284) x2026) (or (and (not (or (and (< x624 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x624) true)) (> x624 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x754 (not x1614)) (= x249 (x361 x540)) (= x624 (x2210 x815)) (= (ite x754 1 0) x424) (< 0 x249) (= x424 x249) (= x540 (x1952 (+ x815 32))) (= x1614 (= 0 x249)) x2026) (not x2026)) (= (x2164 (x1201 274184521717934524641157099916833587206)) x1786) (= x1590 (= x833 0)) x1230 (or (and (= (x1952 (+ 96 x486)) x161) (not x1590) (= x2180 x815)) (and x1590 (= x815 96)))) x1981)))
(assert (=> (<= x1805 10000) (= (x1201 x1805) (x331 x1805))))
(assert (= (x331 142201243) (x1201 142201243)))
(assert (= (x331 274184521717934524641157099916833587218) (x1201 274184521717934524641157099916833587218)))
(assert (x2220 x2008))
(assert (= (x331 1461501637330902918203684832716283019655932542976) (x1201 1461501637330902918203684832716283019655932542976)))
(assert (= (x1323 (x1201 x2255)) x2255))
(assert (x2220 x1806))
(assert (x2220 x853))
(assert (=> (<= x665 10000) (= (x1201 x665) (x331 x665))))
(assert (x2220 x544))
(assert (x2220 x993))
(assert (x2220 x1051))
(assert (= (x1323 (x1201 x105)) x105))
(assert (x2220 x2088))
(assert (x2220 x266))
(assert (x23 x622))
(assert (= 274184521717934524641157099916833587206 (x1323 (x1201 274184521717934524641157099916833587206))))
(assert (x2220 x492))
(assert (x2220 x1104))
(assert (x2220 x414))
(assert (x2220 x2130))
(assert (= x1 (x1323 (x1201 x1))))
(assert (= x1793 (x1323 (x1201 x1793))))
(assert (x2220 x58))
(assert (= (=> (= x207 x666) x1424) x2124))
(assert (= x1460 x1070))
(assert (x2220 x1562))
(assert (x2220 x2123))
(assert (x2220 x226))
(assert (x1546 x1448))
(assert (= x1087 (=> (and (= x1583 (x212 (x1201 274184521717934524641157099916833587206))) (= (x212 (x1201 274184521717934524641157099916833587206)) x1567) (= (x212 (x1201 x864)) x654) (= x1311 (<= 0 x1583)) (= x603 (< (x1126 (x1201 x864)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x603 x1311 x1481 (= x224 (= 274184521717934524641157099916833587218 x864)) (= x1031 (x1126 (x1201 x864))) (= x1481 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x654)) (= x595 x262)) (and (=> (not x224) x907) (=> (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2116) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1553) (not x1324) (= (< x1597 x1319) x1324) (= (x737 x214) x1553) (= x1319 x1922) (= x1127 (or (> x1865 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1865) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1865) true)))) (= x642 x1553) (= (x1259 (- x1597 x1922)) x1355) (not x438) (= (x1727 (x1201 x389) (x331 1) 0) x2079) (not (> 649617121 x626)) (= x626 2835717307) (> x2011 0) (not (= 1889567281 x626)) (not (= 2514000705 x626)) (>= x1597 0) (= (x1259 (- x229 4)) x1865) (>= 1461501637330902918203684832716283019655932542975 x389) (= 68 x229) (= x697 274184521717934524641157099916833587206) (< (+ x1553 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1079 x1463) x1597) (not (= 649617121 x626)) (= (+ x1385 x642) x1609) (= x389 x1725) (= x862 x389) (= x2011 (x899 (x1201 274184521717934524641157099916833587218))) (= x1463 (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0)) (not (< x229 4)) (= x1808 32) (= x229 x262) (= (x1727 (x1201 x389) (x331 1) 0) x214) (= x438 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1553 x1319))) (= 1 x1721) x224 (not x1120) (= x1922 x2253) (= x1385 x1319) (not x1127) (not (= x626 826074471)) (= 274184521717934524641157099916833587206 x832) (= (< x1597 x1922) x1120) (= (x1727 (x1201 274184521717934524641157099916833587206) (x331 1) 0) x767) (>= x1553 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1597)) x373)))))
(assert (x2220 x128))
(assert (x23 x2025))
(assert (x2220 x577))
(assert (= x1003 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2053) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x351) (= (x1727 (x1201 x266) x1451 0) x1973) (>= x2053 0) (= x351 (x1301 x1973)) (not (< x2053 x1113)) (<= 0 x351) (= (= x351 0) x227) (= x1451 (x1727 (x1201 x1113) (x331 6) 0))) (and (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x537) (= (x1727 (x1201 x266) x1330 0) x570) (= x1604 x537) (= x1330 (x1727 (x1201 x1113) (x331 10) 0)) (not x227) (= 0 x1815) (>= x537 0) (= x537 (x1633 x570))) x452) (=> x227 x1469)))))
(assert (x2220 x1184))
(assert (x2220 x1982))
(assert (x2220 x1019))
(assert (x2220 x332))
(assert (= (x1346 (- x616 x1021)) (x1672 (- x616 x1021))))
(assert (x2220 x834))
(assert (x2337 x1793 x233))
(assert (= x1164 (=> (and (= x573 (x1259 (- x1113 1))) (= x933 (> x573 0))) (and (=> (not x933) x526) (=> x933 x655)))))
(assert (x2220 x2166))
(assert (x23 x477))
(assert (=> (>= 10000 x1903) (= (x331 x1903) (x1201 x1903))))
(assert (= (ite x495 (ite (and x861 x1138) (x865 x110) (x449 x110)) (x865 x110)) (x638 x110)))
(assert (x2220 x2238))
(assert (x2220 x84))
(assert (= (x1152 x259) (ite (and x1820 x1317) (x865 x259) (ite (and x1600 x1646) (x865 x259) (x1745 x259)))))
(assert (x23 x389))
(assert (x2220 x461))
(assert (x2220 x1426))
(assert (x2220 x2326))
(assert (x2220 x1185))
(assert (= (x1053 (- x628 x422)) (x272 (- x628 x422))))
(assert (x2220 x1752))
(assert (x2220 x484))
(assert (x23 x431))
(assert (x2220 x1247))
(assert (x2220 x207))
(assert (x1960 x1122 x1121))
(assert (x2220 x2244))
(assert (= (x1323 (x1201 x266)) x266))
(assert (= x455 (and (not x297) x1706)))
(assert (=> (>= 10000 x2191) (= (x331 x2191) (x1201 x2191))))
(assert (x2220 x1039))
(assert (= (x331 635128645) (x1201 635128645)))
(assert (= (x1201 1461501637330902918203684832716283019655932542975) (x331 1461501637330902918203684832716283019655932542975)))
(assert (= (or (and x1863 x1682) (and (not x380) x1726) (and (not x1673) x564)) x1840))
(assert (x2220 x554))
(assert (x2220 x641))
(assert (x2220 x403))
(assert (x2220 x1917))
(assert (x2220 x2122))
(assert (x2220 x1678))
(assert (= x2031 x369))
(assert (x2220 x2091))
(assert (x2220 x1350))
(assert (x2220 x402))
(assert (x2220 x103))
(assert (= (x1323 (x1201 x389)) x389))
(assert (x2220 x969))
(assert (x2220 x823))
(assert (x2220 x328))
(assert (=> (>= 10000 x717) (= (x331 x717) (x1201 x717))))
(assert (= x198 (x1323 (x1201 x198))))
(assert (x2220 x910))
(assert (x1546 x502))
(assert (= x1168 (and x153 (not x1755))))
(assert (x2220 x2341))
(assert (x2220 x1662))
(assert (= (x1323 (x1201 x426)) x426))
(assert (= x404 (x1323 (x1201 x404))))
(assert (= x1643 (=> (and (= x1026 (x1727 (x1201 x755) x374 0)) (>= x2065 0) (not (< x664 1968616202)) (= x374 (x1727 (x1201 x39) (x331 6) 0)) (not (= 1968616202 x664)) (not (= 2061678023 x664)) (< x664 2293535753) (= (x899 (x1201 274184521717934524641157099916833587206)) x456) (not (= x664 1986467848)) (= x2065 x831) (= 2258409472 x664) (not (= x664 2211524764)) (= (x1301 x1026) x2065) (not (< x664 911411945)) (< 0 x456) (<= x2065 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x755 1461501637330902918203684832716283019655932542975)) (=> (and x653 (= x831 x872) (= x784 x672) (= x670 0) (= x2255 x1377) (= (< 0 x872) x653) (= x1266 x1582)) x1580))))
(assert (x2220 x797))
(assert (x2220 x306))
(assert (= (x188 x2224) 0))
(assert (x2220 x994))
(assert (= (x188 x2143) 0))
(assert (=> (<= x573 10000) (= (x331 x573) (x1201 x573))))
(assert (x2220 x268))
(assert (= (x1323 (x1201 x2203)) x2203))
(assert (x2220 x2041))
(assert (x2220 x507))
(assert (x2220 x2275))
(assert (x23 x1449))
(assert (x23 x1613))
(assert (x2220 x1256))
(assert (x2220 x667))
(assert (= (x460 x1291) (ite (and x707 (not x1512)) (x567 x1291) (x915 x1291))))
(assert (= x1958 (=> (and (= x315 (= x1880 0)) (or x1446 (and (= x221 (x1727 (x1201 x1113) (x331 9) 0)) (not x1446) (= x827 (x1727 (x1201 x266) x221 0)) (= x1895 (x1727 (x1201 x717) x827 0)))) (or (and (= x1051 (x1718 x1800)) (or (and (= (x1216 160) x181) x1911 (or (and (= x4 (x1259 (- x1666 x529))) (= x1217 x332) (= x332 (ite (< x4 604800) x4 604800)) (not x336) (not (> x529 x1666)) (= 604800 x2046)) (and (= x1217 x961) (not (> x1578 x1666)) x336 (= x961 (x1259 (- x1666 x1578))) (= (x775 128) x1578))) (= x336 (= x529 0)) (or (and (= x142 x1666) (not x2151)) (and x2151 (= x885 x1666) (= x885 (x1216 160)))) (= (> x142 x181) x2151)) (and (not x1911) (= 0 x1217))) (= (x1131 x1800 1) x960) (= x138 (x234 x960)) (= (x1216 160) x962) (= (x1727 (x1201 x1113) (x331 1) 0) x1800) (>= x529 0) (= (x1727 (x1201 x717) x2294 0) x115) (= x1528 (x1727 (x1201 x1113) (x331 7) 0)) (<= x138 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1051) (= (= x1217 0) x811) (or (and (= x1940 x2277) (= (+ x1296 x2211) x2047) (= (x1727 (x1201 x1113) (x331 3) 0) x1654) (= (x1727 (x1201 x266) x1654 0) x1885) (= (x1727 (x1201 x717) x1885 0) x881) (< (+ x1091 x2277) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2211 x1091) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1217 x1880)) (= x2277 x1296) (= (x1222 x881) x1091) (= (* x1880 x1217) x1940) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1091) (= x2132 192) (= (x1727 (x1201 x1113) (x331 7) 0) x2312) (>= x1091 0) (= (x1727 (x1201 x266) x2312 0) x199) (not x811) (= (x1727 (x1201 x717) x199 0) x1882)) (and (= (x1727 (x1201 x266) x2338 0) x512) (= x533 (x1727 (x1201 x717) x512 0)) x811 (= x2132 192) (= (x1727 (x1201 x1113) (x331 7) 0) x2338))) (= x2294 (x1727 (x1201 x266) x1528 0)) (= x529 (x487 x115)) (= (> x962 x529) x1911) (<= x529 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x315) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1051) (>= x138 0)) (and x315 (= x1573 (x1727 (x1201 x1113) (x331 7) 0)) (= 128 x2132) (= (x1727 (x1201 x266) x1573 0) x274) (= x85 (x1727 (x1201 x717) x274 0)))) (= (= x1083 0) x1446)) x1003)))
(assert (=> (<= x1266 10000) (= (x1201 x1266) (x331 x1266))))
(assert (x23 x904))
(assert (x2220 x833))
(assert (x2220 x1645))
(assert (x2220 x1077))
(assert (x2220 x2256))
(assert (x2220 x217))
(assert (x2220 x1123))
(assert (x2220 x2285))
(assert (= 2061678023 (x1323 (x331 2061678023))))
(assert (= (x331 274184521717934524641157099916833587206) (x1201 274184521717934524641157099916833587206)))
(assert (x2220 x1386))
(assert (x23 x1935))
(assert (x2220 x2269))
(assert (x247 x929 x708))
(assert (x2220 x368))
(assert (=> (>= 10000 x105) (= (x1201 x105) (x331 x105))))
(assert (= (x1672 (- x2208 x1021)) (x1346 (- x2208 x1021))))
(assert (x2220 x1333))
(assert (x2220 x1200))
(assert (x2220 x963))
(assert (= (x1323 (x1201 x795)) x795))
(assert (= x293 x625))
(assert (x2220 x1630))
(assert (x2220 x147))
(assert (= (and x192 x1945) x2319))
(assert (x2220 x466))
(assert (x2220 x904))
(assert (x2220 x635))
(check-sat)
