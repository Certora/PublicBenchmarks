(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x1283 0)) (((x828 (x1400 x1283) (x277 Int)) (x1085 (x1398 x1283) (x941 x1283) (x524 Int)) (x299 (x151 Int)))))
(declare-fun x67 () Int)
(declare-fun x709 () Bool)
(declare-fun x1416 () Int)
(declare-fun x1280 () x1283)
(declare-fun x725 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x47 () Int)
(declare-fun x113 () Bool)
(declare-fun x1363 () Int)
(declare-fun x842 () Int)
(declare-fun x1145 () Bool)
(declare-fun x761 () Int)
(declare-fun x882 () Bool)
(declare-fun x810 () Bool)
(declare-fun x610 () Bool)
(declare-fun x1515 () Int)
(declare-fun x1327 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x817 () Bool)
(declare-fun x5 () Int)
(declare-fun x783 () Int)
(declare-fun x57 () Bool)
(declare-fun x1331 () x1283)
(declare-fun x1213 (Int) Int)
(declare-fun x972 () Int)
(declare-fun x176 () Int)
(declare-fun x217 (Int) Int)
(declare-fun x1205 () Int)
(declare-fun x49 () Int)
(declare-fun x259 () Bool)
(declare-fun x985 () Int)
(declare-fun x1017 () Int)
(declare-fun x71 () Int)
(declare-fun x582 () Int)
(declare-fun x1469 () x1283)
(declare-fun x448 () Bool)
(declare-fun x1243 () x1283)
(declare-fun x727 () Bool)
(declare-fun x804 () Bool)
(declare-fun x624 () Int)
(declare-fun x1248 () Int)
(declare-fun x835 (Int) Int)
(declare-fun x55 () Int)
(declare-fun x435 () Int)
(declare-fun x1473 () Int)
(declare-fun x1455 () Bool)
(declare-fun x832 () Int)
(declare-fun x982 () Int)
(declare-fun x56 () Bool)
(declare-fun x763 () Int)
(declare-fun x53 () Bool)
(declare-fun x78 () Bool)
(declare-fun x876 () x1283)
(declare-fun x1055 () Bool)
(declare-fun x756 () Bool)
(declare-fun x670 () Bool)
(declare-fun x1443 () Int)
(declare-fun x400 () Int)
(declare-fun x1325 () Int)
(declare-fun x370 () x1283)
(declare-fun x598 () Int)
(declare-fun x321 () Bool)
(declare-fun x1225 () Int)
(declare-fun x1193 () Int)
(declare-fun x1324 () Int)
(declare-fun x565 () Int)
(declare-fun x887 () Int)
(declare-fun x278 () Int)
(declare-fun x369 () Int)
(declare-fun x284 () Int)
(declare-fun x1452 () Bool)
(declare-fun x958 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x581 () x1283)
(declare-fun x1308 () Int)
(declare-fun x42 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x1041 () Int)
(declare-fun x152 () Bool)
(declare-fun x591 () Int)
(declare-fun x830 () x1283)
(declare-fun x736 () Bool)
(declare-fun x1456 () Int)
(declare-fun x548 (x1283) Int)
(declare-fun x220 () Bool)
(declare-fun x427 () Bool)
(declare-fun x1095 () x1283)
(declare-fun x1242 () Int)
(declare-fun x1525 () Bool)
(declare-fun x682 () Int)
(declare-fun x1181 () Bool)
(declare-fun x755 () Bool)
(declare-fun x353 () Int)
(declare-fun x697 () Int)
(declare-fun x470 () Bool)
(declare-fun x295 () Int)
(declare-fun x1180 () x1283)
(declare-fun x1132 () Bool)
(declare-fun x551 () Bool)
(declare-fun x1534 () Int)
(declare-fun x1448 () Int)
(declare-fun x243 () Bool)
(declare-fun x112 (Int) Int)
(declare-fun x1104 () Int)
(declare-fun x988 () x1283)
(declare-fun x1298 () Int)
(declare-fun x338 () Int)
(declare-fun x349 () Int)
(declare-fun x206 () Int)
(declare-fun x895 () Int)
(declare-fun x718 () x1283)
(declare-fun x699 () Int)
(declare-fun x1086 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x808 () x1283)
(declare-fun x1358 () Bool)
(declare-fun x461 () Int)
(declare-fun x1152 () x1283)
(declare-fun x421 () Int)
(declare-fun x38 (Int) Int)
(declare-fun x601 () Int)
(declare-fun x1151 () Bool)
(declare-fun x856 () Bool)
(declare-fun x931 () Int)
(declare-fun x1022 () Int)
(declare-fun x964 () Bool)
(declare-fun x1415 () Bool)
(declare-fun x1141 () Int)
(declare-fun x205 () Int)
(declare-fun x1220 () Bool)
(declare-fun x285 () Int)
(declare-fun x706 () x1283)
(declare-fun x290 (Int Int) Int)
(declare-fun x1249 () Int)
(declare-fun x397 () Int)
(declare-fun x1262 () Int)
(declare-fun x934 () Bool)
(declare-fun x274 () Int)
(declare-fun x1087 () Bool)
(declare-fun x1281 () Int)
(declare-fun x1279 () Int)
(declare-fun x812 () Bool)
(declare-fun x721 () Int)
(declare-fun x1329 () Int)
(declare-fun x90 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x943 () Int)
(declare-fun x651 () x1283)
(declare-fun x1046 () Bool)
(declare-fun x852 () Int)
(declare-fun x163 () x1283)
(declare-fun x51 (Int) Int)
(declare-fun x1305 () Int)
(declare-fun x1361 () Int)
(declare-fun x558 () Bool)
(declare-fun x603 () x1283)
(declare-fun x363 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x949 () Bool)
(declare-fun x717 () Int)
(declare-fun x898 () Bool)
(declare-fun x672 () Int)
(declare-fun x449 () Int)
(declare-fun x368 () Int)
(declare-fun x1476 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x1146 () Int)
(declare-fun x20 () Int)
(declare-fun x309 () x1283)
(declare-fun x872 () Int)
(declare-fun x987 () Int)
(declare-fun x1316 () Int)
(declare-fun x1347 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x323 () Int)
(declare-fun x1012 () Bool)
(declare-fun x758 () Bool)
(declare-fun x226 () Int)
(declare-fun x1168 () Int)
(declare-fun x341 () x1283)
(declare-fun x382 () Int)
(declare-fun x408 () Bool)
(declare-fun x589 () Bool)
(declare-fun x1368 () Int)
(declare-fun x683 () Bool)
(declare-fun x1093 () x1283)
(declare-fun x1344 () Int)
(declare-fun x850 () Int)
(declare-fun x705 () Int)
(declare-fun x1540 () Int)
(declare-fun x1011 () Int)
(declare-fun x846 () Int)
(declare-fun x704 () x1283)
(declare-fun x572 () Bool)
(declare-fun x757 () x1283)
(declare-fun x613 () Int)
(declare-fun x1506 () Int)
(declare-fun x1210 (Int) Int)
(declare-fun x1401 () Int)
(declare-fun x775 () Int)
(declare-fun x782 () Bool)
(declare-fun x765 () Int)
(declare-fun x231 () Int)
(declare-fun x563 (Int) Int)
(declare-fun x680 () x1283)
(declare-fun x1222 () Bool)
(declare-fun x1370 () x1283)
(declare-fun x570 () x1283)
(declare-fun x25 () Int)
(declare-fun x422 () Bool)
(declare-fun x1364 () x1283)
(declare-fun x1009 () Int)
(declare-fun x66 () Bool)
(declare-fun x10 () Bool)
(declare-fun x415 () Int)
(declare-fun x1513 () Int)
(declare-fun x92 () Bool)
(declare-fun x453 () Bool)
(declare-fun x1340 () Int)
(declare-fun x445 () Int)
(declare-fun x773 () x1283)
(declare-fun x1063 () Int)
(declare-fun x58 () Int)
(declare-fun x1101 () Bool)
(declare-fun x915 () Int)
(declare-fun x1258 () Int)
(declare-fun x37 () Bool)
(declare-fun x63 () Int)
(declare-fun x1204 (x1283) Int)
(declare-fun x1240 () Bool)
(declare-fun x632 () Bool)
(declare-fun x649 () Bool)
(declare-fun x178 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x800 () Bool)
(declare-fun x14 () x1283)
(declare-fun x1015 () Int)
(declare-fun x578 () Bool)
(declare-fun x318 () Bool)
(declare-fun x179 () Bool)
(declare-fun x998 () x1283)
(declare-fun x1509 () Int)
(declare-fun x85 (x1283) Int)
(declare-fun x921 () Bool)
(declare-fun x418 () Bool)
(declare-fun x29 () Int)
(declare-fun x416 () Bool)
(declare-fun x723 () Int)
(declare-fun x568 () Bool)
(declare-fun x664 () Int)
(declare-fun x746 () Int)
(declare-fun x1550 () Int)
(declare-fun x948 () Int)
(declare-fun x1317 () Int)
(declare-fun x128 () Int)
(declare-fun x315 () Int)
(declare-fun x19 () Int)
(declare-fun x504 () Bool)
(declare-fun x204 () Int)
(declare-fun x270 () Int)
(declare-fun x1139 () Int)
(declare-fun x1410 () Bool)
(declare-fun x1330 () Int)
(declare-fun x916 () Bool)
(declare-fun x614 () Int)
(declare-fun x1277 () Int)
(declare-fun x380 () Int)
(declare-fun x668 () x1283)
(declare-fun x1060 (x1283) Int)
(declare-fun x1524 () Bool)
(declare-fun x33 () Bool)
(declare-fun x560 () Bool)
(declare-fun x294 () x1283)
(declare-fun x1440 () x1283)
(declare-fun x1106 () Int)
(declare-fun x825 () Int)
(declare-fun x899 () x1283)
(declare-fun x455 () Int)
(declare-fun x459 () Int)
(declare-fun x762 () Bool)
(declare-fun x1245 () Int)
(declare-fun x1378 () Bool)
(declare-fun x126 () Int)
(declare-fun x816 () x1283)
(declare-fun x68 () x1283)
(declare-fun x271 () x1283)
(declare-fun x1094 () Bool)
(declare-fun x177 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x465 () Int)
(declare-fun x968 () x1283)
(declare-fun x813 () x1283)
(declare-fun x1133 () Int)
(declare-fun x1108 () Int)
(declare-fun x1267 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x1498 () x1283)
(declare-fun x745 () Bool)
(declare-fun x793 () Int)
(declare-fun x999 () Int)
(declare-fun x246 () Int)
(declare-fun x1215 () x1283)
(declare-fun x1554 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x272 () x1283)
(declare-fun x1439 () Int)
(declare-fun x157 () Bool)
(declare-fun x484 () Int)
(declare-fun x41 () Bool)
(declare-fun x104 () Int)
(declare-fun x471 () Int)
(declare-fun x1472 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x595 () Int)
(declare-fun x258 () Int)
(declare-fun x398 () Bool)
(declare-fun x1045 () Int)
(declare-fun x308 () Int)
(declare-fun x106 () Int)
(declare-fun x740 () Int)
(declare-fun x913 () Int)
(declare-fun x60 () Int)
(declare-fun x250 () Int)
(declare-fun x1295 () Bool)
(declare-fun x401 () Int)
(declare-fun x83 () x1283)
(declare-fun x1241 () Int)
(declare-fun x1453 () Int)
(declare-fun x371 () x1283)
(declare-fun x541 () Int)
(declare-fun x909 () x1283)
(declare-fun x739 () Bool)
(declare-fun x1044 () Int)
(declare-fun x1140 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x660 () Int)
(declare-fun x884 () Bool)
(declare-fun x1090 () x1283)
(declare-fun x1255 () Int)
(declare-fun x464 () Bool)
(declare-fun x676 () Int)
(declare-fun x1359 () x1283)
(declare-fun x537 () x1283)
(declare-fun x457 () Int)
(declare-fun x158 () Bool)
(declare-fun x287 () Bool)
(declare-fun x73 () Bool)
(declare-fun x1435 () x1283)
(declare-fun x183 () Bool)
(declare-fun x358 () Int)
(declare-fun x1018 () Bool)
(declare-fun x947 () Int)
(declare-fun x11 () x1283)
(declare-fun x1362 () Int)
(declare-fun x1107 () Int)
(declare-fun x261 () Int)
(declare-fun x1051 () Bool)
(declare-fun x347 () Int)
(declare-fun x297 () x1283)
(declare-fun x518 () x1283)
(declare-fun x359 () Bool)
(declare-fun x393 () Bool)
(declare-fun x732 () x1283)
(declare-fun x622 () Bool)
(declare-fun x1179 () Int)
(declare-fun x334 () Int)
(declare-fun x1029 () Int)
(declare-fun x1286 () Int)
(declare-fun x248 (Int) Int)
(declare-fun x1192 () Int)
(declare-fun x515 () x1283)
(declare-fun x472 () Int)
(declare-fun x117 () Bool)
(declare-fun x801 () Int)
(declare-fun x1301 () x1283)
(declare-fun x144 () Bool)
(declare-fun x809 () Int)
(declare-fun x1366 () Int)
(declare-fun x1444 () Int)
(declare-fun x234 () Int)
(declare-fun x857 () Int)
(declare-fun x364 () Int)
(declare-fun x1414 () Int)
(declare-fun x365 () x1283)
(declare-fun x1526 () Int)
(declare-fun x774 () Bool)
(declare-fun x693 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x502 () Bool)
(declare-fun x1049 () Int)
(declare-fun x1501 () Bool)
(declare-fun x192 () Bool)
(declare-fun x726 () Int)
(declare-fun x1035 () x1283)
(declare-fun x1247 () Bool)
(declare-fun x1553 () Int)
(declare-fun x394 () x1283)
(declare-fun x1217 () Bool)
(declare-fun x1212 () Int)
(declare-fun x869 (Int) x1283)
(declare-fun x429 () Int)
(declare-fun x95 () Int)
(declare-fun x577 () Int)
(declare-fun x724 () Int)
(declare-fun x326 () Int)
(declare-fun x84 () x1283)
(declare-fun x1475 () Int)
(declare-fun x440 () Int)
(declare-fun x1429 () Int)
(declare-fun x494 () x1283)
(declare-fun x395 () Int)
(declare-fun x1199 () x1283)
(declare-fun x795 () Int)
(declare-fun x621 () x1283)
(declare-fun x1162 (Int) Int)
(declare-fun x992 () Int)
(declare-fun x174 () Int)
(declare-fun x467 (Int) Int)
(declare-fun x920 () Bool)
(declare-fun x392 () Int)
(declare-fun x743 () Int)
(declare-fun x945 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x742 () x1283)
(declare-fun x963 () x1283)
(declare-fun x1432 () x1283)
(declare-fun x1070 () Bool)
(declare-fun x32 () Bool)
(declare-fun x904 () Int)
(declare-fun x432 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x186 () x1283)
(declare-fun x460 () x1283)
(declare-fun x1183 () Int)
(declare-fun x207 () Bool)
(declare-fun x639 () x1283)
(declare-fun x466 () Int)
(declare-fun x698 () Bool)
(declare-fun x978 () Bool)
(declare-fun x997 () Int)
(declare-fun x528 () x1283)
(declare-fun x1374 () Int)
(declare-fun x715 () x1283)
(declare-fun x631 () Int)
(declare-fun x268 () Int)
(declare-fun x1270 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x768 () Bool)
(declare-fun x23 () Bool)
(declare-fun x269 () Bool)
(declare-fun x141 () Bool)
(declare-fun x1291 () x1283)
(declare-fun x331 () Int)
(declare-fun x377 () Int)
(declare-fun x549 () Int)
(declare-fun x81 () Bool)
(declare-fun x616 () Int)
(declare-fun x300 () Int)
(declare-fun x1486 () Int)
(declare-fun x1479 (Int) Int)
(declare-fun x169 () Int)
(declare-fun x332 () Int)
(declare-fun x227 () Int)
(declare-fun x1084 () x1283)
(declare-fun x838 () Int)
(declare-fun x387 () x1283)
(declare-fun x1268 () x1283)
(declare-fun x1409 () Int)
(declare-fun x1457 () x1283)
(declare-fun x1253 (Int) Int)
(declare-fun x105 () Int)
(declare-fun x977 () Bool)
(declare-fun x974 () x1283)
(declare-fun x946 () Bool)
(declare-fun x984 () Int)
(declare-fun x641 () Int)
(declare-fun x919 () Int)
(declare-fun x628 () Int)
(declare-fun x1137 () Bool)
(declare-fun x626 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x735 () Bool)
(declare-fun x110 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x580 () Int)
(declare-fun x769 () Int)
(declare-fun x593 () Int)
(declare-fun x979 () x1283)
(declare-fun x1252 () Int)
(declare-fun x389 () x1283)
(declare-fun x734 () Int)
(declare-fun x478 () Bool)
(declare-fun x1053 () Int)
(declare-fun x818 () Int)
(declare-fun x103 () Int)
(declare-fun x604 () Int)
(declare-fun x213 () Int)
(declare-fun x203 () Int)
(declare-fun x711 () Int)
(declare-fun x907 () Int)
(declare-fun x211 () Bool)
(declare-fun x1019 () Int)
(declare-fun x1387 () Int)
(declare-fun x609 () Bool)
(declare-fun x140 () Int)
(declare-fun x405 () Bool)
(declare-fun x957 () Int)
(declare-fun x44 () Bool)
(declare-fun x216 () Int)
(declare-fun x1214 () Int)
(declare-fun x1082 () Int)
(declare-fun x1384 () Bool)
(declare-fun x1136 () Int)
(declare-fun x910 () Int)
(declare-fun x973 () Int)
(declare-fun x46 () Int)
(declare-fun x1074 () Int)
(declare-fun x1057 (x1283) Int)
(declare-fun x1118 () Int)
(declare-fun x426 () Int)
(declare-fun x929 () Int)
(declare-fun x230 () x1283)
(declare-fun x1494 () Bool)
(declare-fun x265 () Int)
(declare-fun x820 () Bool)
(declare-fun x666 () Int)
(declare-fun x794 () Int)
(declare-fun x1124 () Int)
(declare-fun x780 () Int)
(declare-fun x160 () Int)
(declare-fun x64 () Bool)
(declare-fun x858 () x1283)
(declare-fun x1176 () Int)
(declare-fun x1454 () Bool)
(declare-fun x456 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x691 () Int)
(declare-fun x193 () Bool)
(declare-fun x1466 () Int)
(declare-fun x933 () Bool)
(declare-fun x446 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x646 () x1283)
(declare-fun x875 () Bool)
(declare-fun x346 () Bool)
(declare-fun x1521 () Int)
(declare-fun x911 () x1283)
(declare-fun x1517 () Int)
(declare-fun x1321 () Int)
(declare-fun x123 (Int) Int)
(declare-fun x469 () Bool)
(declare-fun x714 () Bool)
(declare-fun x912 () Int)
(declare-fun x82 () Int)
(declare-fun x752 () Bool)
(declare-fun x822 () x1283)
(declare-fun x1467 () Int)
(declare-fun x692 () Int)
(declare-fun x597 () Bool)
(declare-fun x263 () Int)
(declare-fun x1537 () x1283)
(declare-fun x1233 () Bool)
(declare-fun x1047 () Int)
(declare-fun x729 () x1283)
(declare-fun x212 () x1283)
(declare-fun x1037 () Bool)
(declare-fun x447 () Int)
(declare-fun x1 () Int)
(declare-fun x851 () x1283)
(declare-fun x655 () Int)
(declare-fun x304 () Int)
(declare-fun x282 () Int)
(declare-fun x497 () Bool)
(declare-fun x1377 () Int)
(declare-fun x1251 () Int)
(declare-fun x1438 () Bool)
(declare-fun x1535 () Int)
(declare-fun x489 () Int)
(declare-fun x901 () Int)
(declare-fun x1171 () Int)
(declare-fun x39 () x1283)
(declare-fun x251 () Int)
(declare-fun x673 () Bool)
(declare-fun x1369 () Int)
(declare-fun x588 () x1283)
(declare-fun x296 () Bool)
(declare-fun x689 () Int)
(declare-fun x886 () Int)
(declare-fun x1170 () x1283)
(declare-fun x1468 () Int)
(declare-fun x65 () x1283)
(declare-fun x1219 () Int)
(declare-fun x1014 () Int)
(declare-fun x1433 () Bool)
(declare-fun x1186 () Int)
(declare-fun x1551 () Int)
(declare-fun x720 () Bool)
(declare-fun x1558 () Bool)
(declare-fun x719 () Int)
(declare-fun x625 () Int)
(declare-fun x1048 () Int)
(declare-fun x1522 () x1283)
(declare-fun x525 () x1283)
(declare-fun x885 () Bool)
(declare-fun x826 () Int)
(declare-fun x937 () Int)
(declare-fun x8 () Int)
(declare-fun x935 () Int)
(declare-fun x615 () Bool)
(declare-fun x292 () Int)
(declare-fun x361 () Bool)
(declare-fun x1528 () Int)
(declare-fun x69 () Bool)
(declare-fun x350 () x1283)
(declare-fun x867 () x1283)
(declare-fun x390 () Int)
(declare-fun x1103 () Int)
(declare-fun x836 () Int)
(declare-fun x522 () x1283)
(declare-fun x545 () Bool)
(declare-fun x566 () x1283)
(declare-fun x520 () Bool)
(declare-fun x343 () Int)
(declare-fun x109 () x1283)
(declare-fun x754 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x501 () Bool)
(declare-fun x1023 () Int)
(declare-fun x146 () Int)
(declare-fun x1293 () Int)
(declare-fun x1399 () Bool)
(declare-fun x634 () x1283)
(declare-fun x1323 () Bool)
(declare-fun x172 () Int)
(declare-fun x991 () Int)
(declare-fun x772 () Int)
(declare-fun x1314 () Bool)
(declare-fun x1043 () x1283)
(declare-fun x925 () Int)
(declare-fun x482 () x1283)
(declare-fun x902 (x1283) Int)
(declare-fun x889 () x1283)
(declare-fun x1555 () Bool)
(declare-fun x900 () Bool)
(declare-fun x1505 () x1283)
(declare-fun x860 () Int)
(declare-fun x687 () Int)
(declare-fun x224 () x1283)
(declare-fun x1480 () Int)
(declare-fun x1236 () Bool)
(declare-fun x1431 () Int)
(declare-fun x635 () Int)
(declare-fun x896 () Int)
(declare-fun x821 () Int)
(declare-fun x701 () Int)
(declare-fun x26 () x1283)
(declare-fun x86 () Int)
(declare-fun x1297 () Int)
(declare-fun x9 () Bool)
(declare-fun x314 () x1283)
(declare-fun x1154 (Int) Int)
(declare-fun x362 () x1283)
(declare-fun x1117 () Int)
(declare-fun x1514 () Int)
(declare-fun x633 () Bool)
(declare-fun x824 () Bool)
(declare-fun x239 () x1283)
(declare-fun x1290 () Int)
(declare-fun x781 () Int)
(declare-fun x35 () Bool)
(declare-fun x996 () x1283)
(declare-fun x955 () Int)
(declare-fun x319 () x1283)
(declare-fun x1040 () x1283)
(declare-fun x1335 () Bool)
(declare-fun x108 () Int)
(declare-fun x1197 () Bool)
(declare-fun x142 () x1283)
(declare-fun x1426 () Bool)
(declare-fun x458 () Int)
(declare-fun x153 () Int)
(declare-fun x1080 () Bool)
(declare-fun x805 () Bool)
(declare-fun x1263 () Bool)
(declare-fun x155 () Int)
(declare-fun x12 () Bool)
(declare-fun x1508 () Int)
(declare-fun x1500 () x1283)
(declare-fun x154 () Int)
(declare-fun x210 () Int)
(declare-fun x1167 () x1283)
(declare-fun x1484 () Bool)
(declare-fun x386 () Int)
(declare-fun x125 () Int)
(declare-fun x486 () Bool)
(declare-fun x279 () Int)
(declare-fun x135 () Int)
(declare-fun x1079 () x1283)
(declare-fun x91 () Bool)
(declare-fun x1196 () x1283)
(declare-fun x562 (Int) Int)
(declare-fun x441 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x960 () Int)
(declare-fun x1269 () Bool)
(declare-fun x310 () x1283)
(declare-fun x378 () x1283)
(declare-fun x1161 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x657 () Int)
(declare-fun x890 () Int)
(declare-fun x1211 () Int)
(declare-fun x1373 () Int)
(declare-fun x483 (x1283) Int)
(declare-fun x74 () x1283)
(declare-fun x529 () Int)
(declare-fun x173 () x1283)
(declare-fun x665 () Int)
(declare-fun x1464 () Int)
(declare-fun x247 () Bool)
(declare-fun x993 () x1283)
(declare-fun x506 () Int)
(declare-fun x136 () Bool)
(declare-fun x1557 () Int)
(declare-fun x36 () Int)
(declare-fun x367 () Bool)
(declare-fun x514 () Bool)
(declare-fun x623 () Bool)
(declare-fun x1164 () Int)
(declare-fun x642 () Int)
(declare-fun x1097 () Bool)
(declare-fun x1356 () Int)
(declare-fun x546 () Bool)
(declare-fun x381 () Int)
(declare-fun x600 () Int)
(declare-fun x1302 () x1283)
(declare-fun x399 () Int)
(declare-fun x1237 () x1283)
(declare-fun x1461 () Bool)
(declare-fun x1201 () Int)
(declare-fun x402 () Int)
(declare-fun x1056 () x1283)
(declare-fun x722 () Int)
(declare-fun x905 () x1283)
(declare-fun x1446 () Int)
(declare-fun x590 () Int)
(declare-fun x1089 () x1283)
(declare-fun x573 () Int)
(declare-fun x1232 () Int)
(declare-fun x728 () Bool)
(declare-fun x322 () Bool)
(declare-fun x1244 () Int)
(declare-fun x654 () Bool)
(declare-fun x351 () Bool)
(declare-fun x547 () Int)
(declare-fun x834 () x1283)
(declare-fun x1278 () Int)
(declare-fun x454 () Bool)
(declare-fun x630 () Int)
(declare-fun x1272 () Bool)
(declare-fun x275 () Bool)
(declare-fun x344 () Bool)
(declare-fun x1385 () Int)
(declare-fun x1507 () Bool)
(declare-fun x98 () Int)
(declare-fun x870 () x1283)
(declare-fun x1100 () Bool)
(declare-fun x1518 () x1283)
(declare-fun x1284 () Int)
(declare-fun x311 () Int)
(declare-fun x266 () Bool)
(declare-fun x420 () Int)
(declare-fun x1026 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x637 () Int)
(declare-fun x1450 () x1283)
(declare-fun x130 () Int)
(declare-fun x1121 () Bool)
(declare-fun x1445 () Int)
(declare-fun x1008 () Int)
(declare-fun x414 () Bool)
(declare-fun x656 () Bool)
(declare-fun x688 () x1283)
(declare-fun x540 () Int)
(declare-fun x1312 () Int)
(declare-fun x659 () Int)
(declare-fun x863 () Int)
(declare-fun x375 () Bool)
(declare-fun x430 () Int)
(declare-fun x197 () Int)
(declare-fun x388 () Int)
(declare-fun x1206 () Int)
(declare-fun x425 () x1283)
(declare-fun x677 () Int)
(declare-fun x970 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x1274 () Int)
(declare-fun x1396 () Int)
(declare-fun x1148 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x508 () Bool)
(declare-fun x132 () Bool)
(declare-fun x1105 () x1283)
(declare-fun x1235 () Int)
(declare-fun x871 () Int)
(declare-fun x1147 () Int)
(declare-fun x583 () Int)
(declare-fun x892 () Int)
(declare-fun x918 () Bool)
(declare-fun x1311 () Int)
(declare-fun x684 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1065 () Bool)
(declare-fun x384 () Int)
(declare-fun x215 () x1283)
(declare-fun x99 () Int)
(declare-fun x1310 () Int)
(declare-fun x928 () Bool)
(declare-fun x552 () x1283)
(declare-fun x658 () Int)
(declare-fun x165 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x662 () Bool)
(declare-fun x1129 () Int)
(declare-fun x1447 () Bool)
(declare-fun x1386 () x1283)
(declare-fun x567 (x1283) Int)
(declare-fun x926 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x839 () x1283)
(declare-fun x77 () Bool)
(declare-fun x553 () Int)
(declare-fun x34 () x1283)
(declare-fun x473 () Bool)
(declare-fun x784 () Int)
(declare-fun x1491 () Int)
(declare-fun x594 () Bool)
(declare-fun x927 () Int)
(declare-fun x1059 () Int)
(declare-fun x366 () Int)
(declare-fun x307 () x1283)
(declare-fun x1260 () Int)
(declare-fun x1488 () Bool)
(declare-fun x137 () Bool)
(declare-fun x1512 () Int)
(declare-fun x31 (x1283) Int)
(declare-fun x1427 () Bool)
(declare-fun x1150 () Int)
(declare-fun x257 () Int)
(declare-fun x1510 () Bool)
(declare-fun x463 () Int)
(declare-fun x980 () Int)
(declare-fun x428 () Int)
(declare-fun x1502 () x1283)
(declare-fun x195 () Int)
(declare-fun x1099 (Int) Int)
(declare-fun x1000 () Int)
(declare-fun x148 () Bool)
(declare-fun x894 () Int)
(declare-fun x1138 () Bool)
(declare-fun x1073 () Int)
(declare-fun x219 () Int)
(declare-fun x1081 () Bool)
(declare-fun x182 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x994 () Bool)
(declare-fun x924 () x1283)
(declare-fun x1024 () Bool)
(declare-fun x539 () x1283)
(declare-fun x48 () Bool)
(declare-fun x1315 () Int)
(declare-fun x967 () Bool)
(declare-fun x317 () x1283)
(declare-fun x1495 (x1283) Int)
(declare-fun x1493 () Bool)
(declare-fun x477 () Int)
(declare-fun x1109 () Int)
(declare-fun x592 () Int)
(declare-fun x1436 () Int)
(declare-fun x779 () Bool)
(declare-fun x444 () Int)
(declare-fun x690 () Bool)
(declare-fun x1413 () Int)
(declare-fun x1208 () Int)
(declare-fun x1336 () Bool)
(declare-fun x1471 () Int)
(declare-fun x1423 () Int)
(declare-fun x579 () Bool)
(declare-fun x342 () x1283)
(declare-fun x1173 () Bool)
(declare-fun x855 () Int)
(declare-fun x523 () Int)
(declare-fun x18 () Int)
(declare-fun x534 () Int)
(declare-fun x303 () Int)
(declare-fun x1407 () x1283)
(declare-fun x1143 () Int)
(declare-fun x379 () Bool)
(declare-fun x1372 () Int)
(declare-fun x236 () Int)
(declare-fun x538 () Int)
(declare-fun x792 () Bool)
(declare-fun x199 () Int)
(declare-fun x584 () Bool)
(declare-fun x1465 () Bool)
(declare-fun x516 () Int)
(declare-fun x681 () Int)
(declare-fun x1276 () x1283)
(declare-fun x1459 () Bool)
(declare-fun x30 () Bool)
(declare-fun x831 () Int)
(declare-fun x1001 () x1283)
(declare-fun x1326 () x1283)
(declare-fun x161 () Bool)
(declare-fun x823 () Int)
(declare-fun x40 () x1283)
(declare-fun x1485 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x333 () x1283)
(declare-fun x969 () Bool)
(declare-fun x1127 () Int)
(declare-fun x180 () Int)
(declare-fun x1030 () Int)
(declare-fun x237 () Bool)
(declare-fun x938 () x1283)
(declare-fun x373 () Int)
(declare-fun x452 () Bool)
(declare-fun x348 () Bool)
(declare-fun x312 () Int)
(declare-fun x1337 () Int)
(declare-fun x1405 () Bool)
(declare-fun x100 () Bool)
(declare-fun x866 () x1283)
(declare-fun x114 () Bool)
(declare-fun x897 () Bool)
(declare-fun x859 () Int)
(declare-fun x200 () Int)
(declare-fun x1411 () Int)
(declare-fun x1483 (x1283) Int)
(declare-fun x166 () x1283)
(declare-fun x283 () Int)
(declare-fun x1529 () Int)
(declare-fun x527 () Bool)
(declare-fun x280 () x1283)
(declare-fun x88 (x1283) Int)
(declare-fun x102 () Bool)
(declare-fun x164 () Bool)
(declare-fun x438 () Int)
(declare-fun x618 () Int)
(declare-fun x620 () Bool)
(declare-fun x305 () Int)
(declare-fun x1113 () Int)
(declare-fun x493 () x1283)
(declare-fun x1112 () x1283)
(declare-fun x1216 () Bool)
(declare-fun x645 () Int)
(declare-fun x22 () Int)
(declare-fun x1091 () Int)
(declare-fun x249 () Bool)
(declare-fun x936 () Int)
(declare-fun x731 () Int)
(declare-fun x771 () Int)
(declare-fun x1547 () Bool)
(declare-fun x1548 (Int) Int)
(declare-fun x1102 () Int)
(declare-fun x245 () Int)
(declare-fun x1068 () Int)
(declare-fun x80 () x1283)
(declare-fun x1442 () Bool)
(declare-fun x952 () Int)
(declare-fun x252 () Int)
(declare-fun x1350 () Bool)
(declare-fun x352 () Int)
(declare-fun x1226 () Int)
(declare-fun x865 () Int)
(declare-fun x944 () x1283)
(declare-fun x1067 () Bool)
(declare-fun x87 () Int)
(declare-fun x1497 () Int)
(declare-fun x175 () Int)
(declare-fun x1536 () x1283)
(declare-fun x1052 () Int)
(declare-fun x1231 () Int)
(declare-fun x1076 () Int)
(declare-fun x289 () Int)
(declare-fun x652 () Int)
(declare-fun x561 () x1283)
(declare-fun x1390 () Int)
(declare-fun x240 () Int)
(declare-fun x703 (Int) Int)
(declare-fun x442 () Int)
(declare-fun x1428 () Int)
(declare-fun x917 () Bool)
(declare-fun x617 () Int)
(declare-fun x376 () Int)
(declare-fun x1013 () Int)
(declare-fun x708 () x1283)
(declare-fun x70 () Bool)
(declare-fun x760 () Int)
(declare-fun x298 (Int) Int)
(declare-fun x492 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x209 () Int)
(declare-fun x1319 () x1283)
(declare-fun x776 () Int)
(declare-fun x1209 () Int)
(declare-fun x741 () Bool)
(declare-fun x345 () Int)
(declare-fun x1318 () Int)
(declare-fun x79 () Int)
(declare-fun x930 () Int)
(declare-fun x802 () Bool)
(declare-fun x629 () Int)
(declare-fun x1271 () Bool)
(declare-fun x96 () x1283)
(declare-fun x1389 () Int)
(declare-fun x121 () Bool)
(declare-fun x1412 () Int)
(declare-fun x431 () Int)
(declare-fun x1355 () x1283)
(declare-fun x1134 (x1283) Int)
(declare-fun x1523 () Int)
(declare-fun x1273 () Bool)
(declare-fun x669 () Bool)
(declare-fun x1259 () Int)
(declare-fun x602 () Int)
(declare-fun x638 () Int)
(declare-fun x170 () Int)
(declare-fun x1288 () Bool)
(declare-fun x532 (x1283) Int)
(declare-fun x748 () Int)
(declare-fun x238 () Bool)
(declare-fun x1006 () Int)
(declare-fun x596 () Bool)
(declare-fun x874 () Bool)
(declare-fun x519 () x1283)
(declare-fun x1300 () x1283)
(declare-fun x43 () Int)
(declare-fun x1463 () Int)
(declare-fun x1420 () Int)
(declare-fun x1552 () Int)
(declare-fun x1126 () Int)
(declare-fun x184 () Int)
(declare-fun x410 () Bool)
(declare-fun x360 () Int)
(declare-fun x1351 () Int)
(declare-fun x1303 (x1283) Int)
(declare-fun x7 () Bool)
(declare-fun x712 () Int)
(declare-fun x1062 () Bool)
(declare-fun x759 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x799 () Int)
(declare-fun x966 () Bool)
(declare-fun x223 () x1283)
(declare-fun x1072 () Int)
(declare-fun x3 () x1283)
(declare-fun x612 () Bool)
(declare-fun x778 () Int)
(declare-fun x1393 () Bool)
(declare-fun x481 () Int)
(declare-fun x76 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x1038 () Int)
(declare-fun x787 () Int)
(declare-fun x571 () Int)
(declare-fun x1496 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x605 () Int)
(declare-fun x1078 () Int)
(declare-fun x1309 () Bool)
(declare-fun x503 () Int)
(declare-fun x468 () Bool)
(declare-fun x650 () Int)
(declare-fun x1462 () Int)
(declare-fun x1123 () Bool)
(declare-fun x17 () Bool)
(declare-fun x833 () Bool)
(declare-fun x878 () Int)
(declare-fun x1042 () Bool)
(declare-fun x1083 (x1283) Int)
(declare-fun x385 () Int)
(declare-fun x1404 () Bool)
(declare-fun x214 () Int)
(declare-fun x1434 () x1283)
(declare-fun x119 () Bool)
(declare-fun x139 () Bool)
(declare-fun x354 (Int) Int)
(declare-fun x45 (Int) Int)
(declare-fun x191 () Bool)
(declare-fun x1549 () Int)
(declare-fun x59 () Bool)
(declare-fun x2 () Bool)
(declare-fun x864 () x1283)
(declare-fun x127 () Int)
(declare-fun x881 () x1283)
(declare-fun x474 () x1283)
(declare-fun x1256 () Int)
(declare-fun x281 () Int)
(declare-fun x1322 () Bool)
(declare-fun x1033 () Int)
(declare-fun x848 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x678 () Bool)
(declare-fun x819 () Int)
(declare-fun x995 () x1283)
(declare-fun x52 () Int)
(declare-fun x1157 () x1283)
(declare-fun x1221 () x1283)
(declare-fun x619 () x1283)
(declare-fun x1418 () Int)
(declare-fun x115 () Int)
(declare-fun x228 () Bool)
(declare-fun x93 () Bool)
(declare-fun x134 () Int)
(declare-fun x786 () Int)
(declare-fun x355 () Bool)
(declare-fun x149 (x1283) Int)
(declare-fun x190 () x1283)
(declare-fun x198 () x1283)
(declare-fun x1328 () Bool)
(declare-fun x674 () Int)
(declare-fun x1380 () Int)
(declare-fun x827 () Int)
(declare-fun x1257 () Bool)
(declare-fun x15 () Int)
(declare-fun x1490 () Int)
(declare-fun x232 () Bool)
(declare-fun x730 () Int)
(declare-fun x695 () Bool)
(declare-fun x733 () Int)
(declare-fun x713 () Int)
(declare-fun x122 () Int)
(declare-fun x1156 () Bool)
(declare-fun x495 () Bool)
(declare-fun x1261 () x1283)
(declare-fun x168 () x1283)
(declare-fun x185 (x1283) Int)
(declare-fun x1425 () Bool)
(declare-fun x147 () x1283)
(declare-fun x509 () x1283)
(declare-fun x891 (Int Int) Int)
(declare-fun x737 () x1283)
(declare-fun x196 () Bool)
(declare-fun x685 () Int)
(declare-fun x1160 () Bool)
(declare-fun x983 () Bool)
(declare-fun x521 () Bool)
(declare-fun x1430 () x1283)
(declare-fun x1163 () Bool)
(declare-fun x574 () Bool)
(declare-fun x1346 () Int)
(declare-fun x1353 () Bool)
(declare-fun x1027 () Int)
(declare-fun x1556 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x608 () Int)
(declare-fun x853 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x951 () Bool)
(declare-fun x1188 () Int)
(declare-fun x254 () x1283)
(declare-fun x1120 () Int)
(declare-fun x1477 () Int)
(declare-fun x940 () Bool)
(declare-fun x202 () Int)
(declare-fun x961 () Int)
(declare-fun x256 () Bool)
(declare-fun x747 () Int)
(declare-fun x1511 () Bool)
(declare-fun x559 () Bool)
(declare-fun x607 () x1283)
(declare-fun x437 () Bool)
(declare-fun x329 () x1283)
(declare-fun x868 () x1283)
(declare-fun x1516 () Int)
(declare-fun x403 () Int)
(declare-fun x225 () Int)
(declare-fun x510 () Int)
(declare-fun x396 () x1283)
(declare-fun x255 () Bool)
(declare-fun x116 () Bool)
(declare-fun x507 () Int)
(declare-fun x686 () Int)
(declare-fun x1264 () Bool)
(declare-fun x770 () Int)
(declare-fun x1239 () Bool)
(declare-fun x21 () Int)
(declare-fun x883 () x1283)
(declare-fun x829 () Int)
(declare-fun x201 () Int)
(declare-fun x663 () Int)
(declare-fun x1379 () x1283)
(declare-fun x636 () Bool)
(declare-fun x544 () Int)
(declare-fun x815 () x1283)
(declare-fun x13 () Bool)
(declare-fun x675 () Bool)
(declare-fun x404 () Int)
(declare-fun x1250 () Int)
(declare-fun x167 () Int)
(declare-fun x111 () Int)
(declare-fun x710 () Int)
(declare-fun x1266 () Int)
(declare-fun x575 () Int)
(declare-fun x932 () Int)
(declare-fun x1402 () x1283)
(declare-fun x133 () x1283)
(declare-fun x500 () x1283)
(declare-fun x162 () Bool)
(declare-fun x1166 () Int)
(declare-fun x1545 () Int)
(declare-fun x1224 () x1283)
(declare-fun x1382 () Int)
(declare-fun x372 () Int)
(declare-fun x443 () Int)
(declare-fun x233 () x1283)
(declare-fun x419 () x1283)
(declare-fun x62 () Bool)
(declare-fun x586 () Int)
(declare-fun x1333 () x1283)
(declare-fun x357 () Int)
(declare-fun x1307 () x1283)
(declare-fun x950 () Int)
(declare-fun x1227 () Int)
(declare-fun x1342 () x1283)
(declare-fun x293 () Int)
(declare-fun x990 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x335 () Bool)
(declare-fun x16 () Bool)
(declare-fun x844 () x1283)
(declare-fun x753 () Int)
(declare-fun x702 () Int)
(declare-fun x599 () Int)
(declare-fun x640 () Int)
(declare-fun x1544 () Bool)
(declare-fun x535 () Int)
(declare-fun x1020 () Int)
(declare-fun x1125 () Bool)
(declare-fun x413 () Int)
(declare-fun x1114 () Bool)
(declare-fun x643 () Int)
(declare-fun x880 () Int)
(declare-fun x235 () Int)
(declare-fun x120 () x1283)
(declare-fun x939 () Int)
(declare-fun x1546 () Int)
(declare-fun x1238 () Bool)
(declare-fun x953 () x1283)
(declare-fun x383 () x1283)
(declare-fun x1098 () Bool)
(declare-fun x27 () Int)
(declare-fun x700 () x1283)
(declare-fun x316 () Bool)
(declare-fun x1028 () Int)
(declare-fun x513 () Int)
(declare-fun x796 () Int)
(declare-fun x738 () Bool)
(declare-fun x1395 () x1283)
(declare-fun x1282 () Bool)
(declare-fun x1165 (x1283) Int)
(declare-fun x971 () Bool)
(declare-fun x138 () Int)
(declare-fun x1474 () Int)
(declare-fun x491 () Int)
(declare-fun x433 () x1283)
(declare-fun x288 () Bool)
(declare-fun x1203 () x1283)
(declare-fun x241 () Bool)
(declare-fun x480 () Bool)
(declare-fun x807 () Int)
(declare-fun x1530 () Int)
(declare-fun x337 () Bool)
(declare-fun x253 () Int)
(declare-fun x302 () Bool)
(declare-fun x1131 () Int)
(declare-fun x1254 () Bool)
(declare-fun x647 () Int)
(declare-fun x744 () Int)
(declare-fun x129 () Int)
(declare-fun x749 () Bool)
(declare-fun x1504 () Int)
(declare-fun x330 () Bool)
(declare-fun x434 () Int)
(declare-fun x777 () x1283)
(declare-fun x61 () x1283)
(declare-fun x1229 () Bool)
(declare-fun x533 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x1200 () Int)
(declare-fun x814 () x1283)
(declare-fun x1381 () Int)
(declare-fun x264 () Bool)
(declare-fun x327 () Bool)
(declare-fun x1354 () Int)
(declare-fun x1441 () Int)
(declare-fun x487 () Int)
(declare-fun x908 () Int)
(declare-fun x50 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x893 () Int)
(declare-fun x320 () Int)
(declare-fun x671 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x156 () x1283)
(declare-fun x1352 () Bool)
(declare-fun x750 () Int)
(declare-fun x1191 () Int)
(declare-fun x476 (Int) Int)
(declare-fun x1481 () Int)
(declare-fun x854 () Int)
(declare-fun x1349 () Int)
(declare-fun x1360 () Int)
(declare-fun x530 () x1283)
(declare-fun x208 () Int)
(declare-fun x1066 () Bool)
(declare-fun x976 () Int)
(declare-fun x922 () Int)
(declare-fun x1489 () Int)
(declare-fun x1482 () Int)
(declare-fun x1034 () Bool)
(declare-fun x1304 () Int)
(declare-fun x806 () Int)
(declare-fun x554 () Bool)
(declare-fun x94 () Bool)
(declare-fun x661 () Bool)
(declare-fun x845 () Int)
(declare-fun x526 () x1283)
(declare-fun x1275 () Int)
(declare-fun x1153 () Bool)
(declare-fun x260 () Int)
(declare-fun x1285 () Int)
(declare-fun x1190 () Bool)
(declare-fun x764 () x1283)
(declare-fun x262 () Bool)
(declare-fun x1539 () Int)
(declare-fun x1159 (x1283) Int)
(declare-fun x1182 () Int)
(declare-fun x576 (Int) Int)
(declare-fun x6 () Int)
(declare-fun x1010 () Int)
(declare-fun x1292 () Int)
(declare-fun x194 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x424 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x843 () Int)
(declare-fun x1519 () Int)
(declare-fun x1460 () Int)
(declare-fun x517 () Int)
(declare-fun x512 (Int) Int)
(declare-fun x301 () x1283)
(declare-fun x785 () x1283)
(declare-fun x751 () Int)
(declare-fun x488 () Bool)
(declare-fun x244 () Int)
(declare-fun x490 () Bool)
(declare-fun x954 () Int)
(declare-fun x975 () x1283)
(declare-fun x564 () x1283)
(declare-fun x221 (Int) Int)
(declare-fun x667 () Int)
(declare-fun x803 () Bool)
(declare-fun x536 () Bool)
(declare-fun x606 () Bool)
(declare-fun x89 (x1283) Int)
(declare-fun x479 () Bool)
(declare-fun x798 () x1283)
(declare-fun x267 () Int)
(declare-fun x707 () x1283)
(declare-fun x291 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x313 () Int)
(declare-fun x959 () Int)
(declare-fun x1296 () Bool)
(declare-fun x942 () Int)
(declare-fun x1451 () Bool)
(declare-fun x188 () Int)
(declare-fun x222 () Int)
(declare-fun x766 () Bool)
(declare-fun x956 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x791 () Int)
(declare-fun x107 () Int)
(declare-fun x276 () Bool)
(declare-fun x788 () Bool)
(declare-fun x1313 () Int)
(declare-fun x1367 () Bool)
(declare-fun x696 () Bool)
(declare-fun x75 () Int)
(declare-fun x181 () x1283)
(declare-fun x101 () Bool)
(declare-fun x906 () Int)
(declare-fun x451 () x1283)
(declare-fun x879 () Int)
(declare-fun x840 () Bool)
(declare-fun x325 () Bool)
(declare-fun x797 () Bool)
(declare-fun x118 () Int)
(declare-fun x1421 () x1283)
(declare-fun x159 () Int)
(declare-fun x767 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x587 () Int)
(declare-fun x499 () x1283)
(declare-fun x72 () Int)
(declare-fun x1169 () Int)
(declare-fun x498 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x888 () Int)
(define-fun x1110 ((x1283 x1283) (x837 Int)) x1283 (ite ((_ is x828) x1283) (x828 (x1400 x1283) (+ x837 (x277 x1283))) (ite ((_ is x1085) x1283) (x1085 (x1398 x1283) (x941 x1283) (+ (x524 x1283) x837)) (x299 (+ x837 (x151 x1283))))))
(define-fun x1458 ((x1375 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1375) (>= x1375 0)) x1375 (- x1375 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x286 ((x1375 Int)) Int (ite (and (< x1375 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1375)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1375) x1375))
(define-fun x218 ((x861 Int)) Bool (and (>= x861 0) (< x861 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1265 ((x861 Int)) Bool (and (= (x891 x861 115792089237316195423570985008687907853269984665640564039457584007913129639935) x861) (= x861 (x891 115792089237316195423570985008687907853269984665640564039457584007913129639935 x861))))
(define-fun x849 ((x861 Int)) Bool (and (= (x891 x861 0) 0) (= (x891 0 x861) 0)))
(define-fun x1345 ((x861 Int)) Bool (= (x891 x861 x861) x861))
(define-fun x1391 ((x861 Int)) Bool (and (x849 x861) (x1265 x861) (x1345 x861)))
(define-fun x543 ((x861 Int)) Bool (= (x891 1461501637330902918203684832716283019655932542975 x861) (x891 1461501637330902918203684832716283019655932542975 (x891 1461501637330902918203684832716283019655932542975 x861))))
(define-fun x790 ((x861 Int)) Bool (=> (and (< x861 1461501637330902918203684832716283019655932542976) (<= 0 x861)) (= x861 (x891 1461501637330902918203684832716283019655932542975 x861))))
(define-fun x965 ((x861 Int)) Bool (=> (= (x891 1461501637330902918203684832716283019655932542975 x861) x861) (and (< x861 1461501637330902918203684832716283019655932542976) (<= 0 x861))))
(define-fun x511 ((x861 Int)) Bool (=> (and (>= x861 1461501637330902918203684832716283019655932542976) (> 2923003274661805836407369665432566039311865085952 x861)) (= (x891 1461501637330902918203684832716283019655932542975 x861) (- x861 1461501637330902918203684832716283019655932542976))))
(define-fun x1021 ((x861 Int) (x877 Int)) Bool (and (= x861 (+ (* x877 1461501637330902918203684832716283019655932542976) (x891 1461501637330902918203684832716283019655932542975 x861))) (<= 0 x877)))
(define-fun x811 ((x861 Int) (x412 Int)) Bool (and (x543 x861) (x965 x861) (x790 x861) (x511 x861) (x1021 x861 x412)))
(define-fun x1178 ((x861 Int) (x877 Int)) Bool (= (x891 x877 x861) (x891 x861 x877)))
(define-fun x24 ((x861 Int) (x877 Int)) Bool (and (=> (>= x861 0) (<= (x891 x861 x877) x861)) (>= (x891 x861 x877) 0) (=> (>= x877 0) (>= x877 (x891 x861 x877)))))
(define-fun x306 ((x861 Int) (x877 Int)) Bool (and (x24 x861 x877) (x1178 x861 x877)))
(define-fun x862 ((x861 Int) (x412 Int)) Bool (and (x811 x861 x412) (x306 x861 1461501637330902918203684832716283019655932542975)))
(define-fun x873 ((x861 Int)) Bool (= (x891 26959946667150639794667015087019630673637144422540572481103610249215 x861) (x891 26959946667150639794667015087019630673637144422540572481103610249215 (x891 26959946667150639794667015087019630673637144422540572481103610249215 x861))))
(define-fun x1088 ((x861 Int)) Bool (=> (and (<= 0 x861) (> 26959946667150639794667015087019630673637144422540572481103610249216 x861)) (= (x891 26959946667150639794667015087019630673637144422540572481103610249215 x861) x861)))
(define-fun x550 ((x861 Int)) Bool (=> (= (x891 26959946667150639794667015087019630673637144422540572481103610249215 x861) x861) (and (<= 0 x861) (> 26959946667150639794667015087019630673637144422540572481103610249216 x861))))
(define-fun x1175 ((x861 Int)) Bool (=> (and (>= x861 26959946667150639794667015087019630673637144422540572481103610249216) (> 53919893334301279589334030174039261347274288845081144962207220498432 x861)) (= (x891 26959946667150639794667015087019630673637144422540572481103610249215 x861) (- x861 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x273 ((x861 Int) (x877 Int)) Bool (and (<= 0 x877) (= x861 (+ (* x877 26959946667150639794667015087019630673637144422540572481103610249216) (x891 26959946667150639794667015087019630673637144422540572481103610249215 x861)))))
(define-fun x1119 ((x861 Int) (x412 Int)) Bool (and (x1088 x861) (x273 x861 x412) (x1175 x861) (x550 x861) (x873 x861)))
(define-fun x124 ((x861 Int) (x412 Int)) Bool (and (x1119 x861 x412) (x306 x861 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x145 ((x861 Int)) Bool (= (x891 115792089237316195423570985008687907853269984665640564039457584007913129639904 x861) (x891 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x891 115792089237316195423570985008687907853269984665640564039457584007913129639904 x861))))
(define-fun x406 ((x861 Int)) Bool (=> (and (>= x861 0) (> 32 x861)) (= (x891 115792089237316195423570985008687907853269984665640564039457584007913129639904 x861) 0)))
(define-fun x1198 ((x861 Int) (x877 Int) (x557 Int) (x1144 Int)) Bool (and (= (* x557 32) (x891 115792089237316195423570985008687907853269984665640564039457584007913129639904 x861)) (> 32 x877) (<= 0 x877) (<= 0 x1144) (= x861 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1144) x877 (* 32 x557))) (< x557 3618502788666131106986593281521497120414687020801267626233049500247285301248) (< x1144 1) (>= x557 0)))
(define-fun x1294 ((x861 Int) (x1487 Int) (x1499 Int) (x841 Int)) Bool (and (x1198 x861 x1487 x1499 x841) (x406 x861) (x145 x861)))
(define-fun x1406 ((x861 Int) (x1487 Int) (x1499 Int) (x841 Int)) Bool (and (x1294 x861 x1487 x1499 x841) (x306 x861 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x981 ((x1228 Int)) Int (x354 x1228))
(define-fun x542 ((x1228 Int)) Int (ite (= 128 x1228) x586 (x1162 x1228)))
(define-fun x97 ((x1228 Int)) Int (ite (and (>= x1228 160) (< x1228 (+ x75 160))) (x354 (+ (- x1228 160) x906)) (x542 x1228)))
(define-fun x1207 ((x1228 Int)) Int (ite (= x1228 x955) 0 (x97 x1228)))
(define-fun x531 ((x1228 Int)) Int (ite (and (>= x1228 x1545) (> (+ x1411 x1545) x1228)) (x354 (+ (- x1228 x1545) x1428)) (x562 x1228)))
(define-fun x1437 ((x1228 x1283)) Int (ite (= x868 x1228) x1381 (x483 x1228)))
(define-fun x914 ((x1228 x1283)) Int (ite (= x742 x1228) x1381 (x483 x1228)))
(define-fun x417 ((x1228 x1283)) Int (ite (= x1228 x864) x1381 (x1495 x1228)))
(define-fun x1478 ((x1228 x1283)) Int (ite (= x889 x1228) x1381 (x1495 x1228)))
(define-fun x1177 ((x1228 x1283)) Int (ite (and x918 x977) (x1495 x1228) (ite (and x66 x288) (x483 x1228) (ite (and (not x275) x1039) (x417 x1228) (x1478 x1228)))))
(define-fun x28 ((x1228 x1283)) Int (ite (= x333 x1228) x1381 (x548 x1228)))
(define-fun x54 ((x1228 x1283)) Int (ite (= x1228 x526) x1381 (x548 x1228)))
(define-fun x324 ((x1228 x1283)) Int (ite (= x816 x1228) x1381 (x548 x1228)))
(define-fun x485 ((x1228 x1283)) Int (ite (= x834 x1228) x1381 (x149 x1228)))
(define-fun x1408 ((x1228 x1283)) Int (ite (= x1228 x798) x1381 (x149 x1228)))
(define-fun x171 ((x1228 x1283)) Int (ite (= x1228 x120) x1381 (x149 x1228)))
(define-fun x436 ((x1228 x1283)) Int (ite (and x918 x977) (x149 x1228) (ite (and x66 x288) (x548 x1228) (ite (and x1417 (not x800) (not x1217)) (x485 x1228) (ite (and x1417 (not x1217) x800) (x1408 x1228) (x171 x1228))))))
(define-fun x611 ((x1228 x1283)) Int (ite (= x1228 x297) x1126 (x1057 x1228)))
(define-fun x1383 ((x1228 x1283)) Int (ite (= x1228 x1432) x1467 (x902 x1228)))
(define-fun x328 ((x1228 x1283)) Int (ite (and (not x275) x1039) (x1383 x1228) (x902 x1228)))
(define-fun x496 ((x1228 x1283)) Int (ite (and x977 x918) (x902 x1228) (ite (and x66 x288) (x1057 x1228) (x328 x1228))))
(define-fun x356 ((x1228 x1283)) Int (ite (= x1228 x905) x1385 (x89 x1228)))
(define-fun x585 ((x1228 x1283)) Int (ite (= x518 x1228) x513 (x567 x1228)))
(define-fun x1332 ((x1228 x1283)) Int (ite (and (not x800) x1417 (not x1217)) (x585 x1228) (x567 x1228)))
(define-fun x242 ((x1228 x1283)) Int (ite (= x1307 x1228) 0 (x1165 x1228)))
(define-fun x1388 ((x1228 x1283)) Int (ite (and (not x427) x545 x76) (x1165 x1228) (ite (and x76 (not x545)) (x1134 x1228) (x242 x1228))))
(define-fun x505 ((x1228 x1283)) Int (ite (= x1228 x1089) 0 (x1388 x1228)))
(define-fun x1195 ((x1228 x1283)) Int (ite (= x1228 x813) x664 (x1204 x1228)))
(define-fun x439 ((x1228 x1283)) Int (ite (and x322 x69) (x1204 x1228) (x1195 x1228)))
(define-fun x450 ((x1228 Int)) Int (ite (= x771 x1228) x1211 (x703 x1228)))
(define-fun x1470 ((x1228 Int)) Int (ite (= x1129 x1228) x1305 (x450 x1228)))
(define-fun x1115 ((x1228 Int)) Int (ite (and x1438 x69) (x703 x1228) (x1470 x1228)))
(define-fun x150 ((x1228 Int)) Int (ite (= x1540 x1228) x1030 (x1115 x1228)))
(define-fun x903 ((x1228 Int)) Int (ite (= x1228 x47) x369 (x51 x1228)))
(define-fun x1111 ((x1228 Int)) Int (ite (= x614 x1228) x915 (x1253 x1228)))
(define-fun x986 ((x1228 Int)) Int (ite (= x313 x1228) x372 (x1111 x1228)))
(define-fun x1532 ((x1228 Int)) Int (ite (and (not x1217) x1417 (not x800)) (x986 x1228) (ite (and (not x1217) x800 x1417) (x986 x1228) (x1253 x1228))))
(define-fun x1376 ((x1228 Int)) Int (ite (= x1063 x1228) x796 (x1532 x1228)))
(define-fun x789 ((x1228 Int)) Int (ite (= x1228 x1041) x385 (x467 x1228)))
(define-fun x229 ((x1228 Int)) Int (ite (and x1037 (not x470) (not x669) x1039) (x467 x1228) (ite (and (not x1037) (not x669) x1039) (x45 x1228) (x789 x1228))))
(define-fun x1538 ((x1228 Int)) Int (ite (and x977 x918) (x1253 x1228) (ite (and x66 x288) (x703 x1228) (ite (and x1039 (not x669)) (x229 x1228) (x45 x1228)))))
(define-fun x339 ((x1228 Int)) Int (ite (= x1228 x216) x234 (x1538 x1228)))
(define-fun x189 ((x1228 Int)) Int (ite (= x1228 x434) x647 (x339 x1228)))
(define-fun x694 ((x1228 Int)) Int (ite (= x829 x1228) x305 (x189 x1228)))
(define-fun x1306 ((x1228 Int)) Int (ite (= x1212 x1228) x135 (x694 x1228)))
(define-fun x962 ((x1228 Int)) Int (ite (= x1139 x1228) 32 (x1306 x1228)))
(define-fun x411 ((x1228 Int)) Int (ite (= x25 x1228) x125 (x1548 x1228)))
(define-fun x644 ((x1228 Int)) Int (ite (= x1228 x506) 0 (x563 x1228)))
(define-fun x1287 ((x1228 x1283)) Int (ite (= x1469 x1228) x523 (x1159 x1228)))
(define-fun x1419 ((x1228 x1283)) Int (ite (and x916 x1194) (x1159 x1228) (x1287 x1228)))
(define-fun x1116 ((x1228 Int)) Int (ite (= 0 x1228) 1 (x1479 x1228)))
(define-fun x1189 ((x1228 Int)) Int (ite (= x1228 0) 1 (x1479 x1228)))
(define-fun x1158 ((x1228 Int)) Int (ite (and x35 x574) (x1116 x1228) (x1189 x1228)))
(define-fun x1184 ((x1228 Int)) Int (ite (= x52 x1228) x544 (x1154 x1228)))
(define-fun x1075 ((x1228 Int)) Int (ite (= x1228 x52) x710 (x1154 x1228)))
(define-fun x1174 ((x1228 Int)) Int (ite (= x1228 x52) x865 (x576 x1228)))
(define-fun x475 ((x1228 Int)) Int (ite (and (< x1228 (+ x952 x865)) (>= x1228 x952)) (x1158 (+ (- x1228 x952) 0)) (x1174 x1228)))
(define-fun x1403 ((x1228 Int)) Int (ite (and (not x1247) x945) (x475 x1228) (x576 x1228)))
(define-fun x555 ((x1228 Int)) Int (ite (= x1228 x134) x234 (x1403 x1228)))
(define-fun x556 ((x1228 Int)) Int (ite (= x1228 x268) x976 (x555 x1228)))
(define-fun x1339 ((x1228 Int)) Int (ite (= x1228 x1103) x1311 (x556 x1228)))
(define-fun x1155 ((x1228 Int)) Int (ite (= x1228 x534) x205 (x1339 x1228)))
(define-fun x131 ((x1228 Int)) Int (ite (= x1228 x1256) 32 (x1155 x1228)))
(define-fun x340 ((x1228 Int)) Int (ite (= x744 x1228) x1244 (x248 x1228)))
(define-fun x423 ((x1228 Int)) Int (ite (= x1228 x246) 0 (x835 x1228)))
(define-fun x989 ((x1228 x1283)) Int (ite (= x1228 (x869 274184521717934524641157099916833587206)) x711 (x1483 x1228)))
(define-fun x653 ((x1228 x1283)) Int (ite (= (x869 x227) x1228) x283 (x989 x1228)))
(define-fun x1234 ((x1228 x1283)) Int (ite (= x1228 (x869 x227)) x43 (x653 x1228)))
(define-fun x569 ((x1228 x1283)) Int (ite (= (x869 274184521717934524641157099916833587206) x1228) x260 (x1234 x1228)))
(define-fun x4 ((x1228 x1283)) Int (ite (= (x869 274184521717934524641157099916833587206) x1228) x984 (x569 x1228)))
(define-fun x409 ((x1228 x1283)) Int (ite (= x1228 (x869 x750)) x1429 (x4 x1228)))
(define-fun x1054 ((x1228 x1283)) Int (ite (= x509 x1228) x1255 (x1303 x1228)))
(define-fun x187 ((x1228 x1283)) Int (ite (= x1537 x1228) x167 (x1054 x1228)))
(define-fun x143 ((x1228 x1283)) Int (ite (and x574 x35) (x187 x1228) (x1303 x1228)))
(define-fun x336 ((x1228 x1283)) Int (ite (= x777 x1228) x765 (x143 x1228)))
(define-fun x847 ((x1228 Int)) Int (ite (= 0 x1228) 1 (x123 x1228)))
(define-fun x407 ((x1228 Int)) Int (ite (= x1274 x1228) x122 (x1210 x1228)))
(define-fun x374 ((x1228 x1283)) Int (ite (= x1228 x365) x599 (x85 x1228)))
(define-fun x679 ((x1228 x1283)) Int (ite (= x1196 x1228) x334 (x374 x1228)))
(define-fun x716 ((x1228 x1283)) Int (ite (and x574 x35) (x85 x1228) (x679 x1228)))
(define-fun x1365 ((x1228 x1283)) Int (ite (= x680 x1228) x27 (x716 x1228)))
(define-fun x923 ((x1228 Int)) Int (ite (= 0 x1228) 1 (x123 x1228)))
(define-fun x462 ((x1228 Int)) Int (ite (= x1274 x1228) x987 (x1210 x1228)))
(define-fun x627 ((x1228 Int)) Int (ite (and x897 x1005) (x847 x1228) (x923 x1228)))
(define-fun x1527 ((x1228 x1283)) Int (ite (= x1228 (x869 x750)) x49 (x409 x1228)))
(define-fun x1142 ((x1228 Int)) Int (ite (= x1228 x1274) x1073 (x476 x1228)))
(define-fun x1031 ((x1228 Int)) Int (ite (and (<= x1113 x1228) (< x1228 (+ x1073 x1113))) (x627 (+ (- x1228 x1113) 0)) (x1142 x1228)))
(define-fun x391 ((x1228 Int)) Int (ite (and x584 x1061) (x476 x1228) (x1031 x1228)))
(define-fun x648 ((x861 Int)) Bool (=> (and (< 10000 x861) (not (= x861 2512682246)) (not (= x861 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 1000000000000000000 x861)) (not (= 2293535753 x861)) (not (= 759532456 x861)) (not (= x861 468353030)) (not (= x861 142201243)) (not (= x861 2061678023)) (not (= x861 1889567281)) (not (= x861 1461501637330902918203684832716283019655932542975)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x861)) (not (= x861 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x861 18446744073709551615)) (not (= x861 1986467848)) (not (= 2960351575 x861)) (not (= x861 274184521717934524641157099916833587206)) (not (= x861 2532887486)) (not (= x861 649617121)) (not (= x861 911411945)) (not (= 87118632 x861)) (not (= 826074471 x861)) (not (= x861 2743102681)) (not (= 2514000705 x861)) (not (= x861 115792089237316195423570985008687907853269984665640564039457)) (not (= 2764855426 x861)) (not (= x861 2418364589)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x861)) (not (= x861 2835717307)) (not (= x861 2798343961)) (not (= x861 1968616202)) (not (= 69947311 x861)) (not (= x861 604800)) (not (= x861 274184521717934524641157099916833587214)) (not (= x861 2258409472)) (not (= x861 635128645)) (not (= 274184521717934524641157099916833587218 x861)) (not (= 2211524764 x861)) (not (= x861 2690754053)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x861))) (not ((_ is x299) (x869 x861)))))
(assert (= 274184521717934524641157099916833587206 (x1083 (x869 274184521717934524641157099916833587206))))
(assert (x218 x1310))
(assert (= (x1083 (x869 x590)) x590))
(assert (x218 x1047))
(assert (x218 x674))
(assert (x218 x1078))
(assert (= (=> (= (> x997 x535) x918) (and (=> (and x918 (= x614 x829)) x12) (=> (not x918) x589))) x1378))
(assert (=> (>= 10000 x1330) (= (x299 x1330) (x869 x1330))))
(assert (x218 x47))
(assert (=> (>= 10000 x838) (= (x869 x838) (x299 x838))))
(assert (x218 x1028))
(assert (x218 x895))
(assert (= (ite (and x1135 x504) (x562 x489) (x531 x489)) (x703 x489)))
(assert (x218 x236))
(assert (x1391 x602))
(assert (= (x1083 (x869 x477)) x477))
(assert (x648 x234))
(assert (x218 x481))
(assert (x218 x401))
(assert (x218 x1014))
(assert (x218 x664))
(assert (x218 x733))
(assert (x648 x1557))
(assert (x218 x1117))
(assert (=> (>= 10000 x1516) (= (x869 x1516) (x299 x1516))))
(assert (= (x45 x772) (ite (= x772 x935) x1008 (x1376 x772))))
(assert (x218 x796))
(assert (x218 x347))
(assert (= (ite (and x35 x574) (x1184 x772) (x1075 x772)) (x576 x772)))
(assert (x218 x86))
(assert (x218 x1041))
(assert (x218 x930))
(assert (x218 x1188))
(assert (=> (>= 10000 x426) (= (x869 x426) (x299 x426))))
(assert (= x504 x70))
(assert (=> (>= 10000 x1078) (= (x869 x1078) (x299 x1078))))
(assert (x218 x660))
(assert (= (x1083 (x869 x859)) x859))
(assert (=> (>= 10000 x188) (= (x299 x188) (x869 x188))))
(assert (=> (>= 10000 x1136) (= (x869 x1136) (x299 x1136))))
(assert (x218 x435))
(assert (= x1160 (=> (and (= x1552 (x891 1461501637330902918203684832716283019655932542975 x540)) (= x993 (x1085 (x869 x234) x198 0)) (= (x1085 (x869 x1552) x3 0) x198) (<= 0 x384) (<= x384 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x384) x1036) (= x3 (x1085 (x869 x1557) (x299 7) 0)) (= x384 (x548 x993))) (and (=> (and (not x1036) (= x1508 x1557)) x739) (=> (and (not x1341) (= (x286 (- x1557 1)) x1214) x1036 (= (> x1214 0) x1341)) x632)))))
(assert (= (x1083 (x869 x368)) x368))
(assert (= (ite (= x421 x935) x1008 (x1376 x421)) (x45 x421)))
(assert (= (ite (and x69 x1438) (x28 x963) (ite (and (not x1438) x994 x69) (x54 x963) (x324 x963))) (x149 x963)))
(assert (x218 x71))
(assert (x218 x214))
(assert (x218 x1368))
(assert (x218 x465))
(assert (x218 x1473))
(assert (x218 x1191))
(assert (x218 x1551))
(assert (x218 x1521))
(assert (x648 x629))
(assert (=> (>= 10000 x1251) (= (x869 x1251) (x299 x1251))))
(assert (= (x51 x47) (ite (= x47 x1) x347 (x112 x47))))
(assert (x218 x1373))
(assert (= (ite (= x489 x1166) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x489)) (x1213 x489)))
(assert (= (x1213 x1474) (ite (= x1166 x1474) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x1474))))
(assert (= (x467 x1310) (ite (= x1310 x565) x107 (x45 x1310))))
(assert (= (ite (and x1194 x683) (x1437 x1199) (x914 x1199)) (x1495 x1199)))
(assert (= (ite (= x667 x534) x770 (x512 x534)) (x1099 x534)))
(assert (= (x869 1889567281) (x299 1889567281)))
(assert (= (ite (and x934 x1194) (x112 x1150) (ite (and (not x840) x1194 (not x934) x1503) (x51 x1150) (ite (and x1194 (not x1503) (not x934)) (x112 x1150) (x903 x1150)))) (x1253 x1150)))
(assert (x218 x1344))
(assert (x218 x819))
(assert (x218 x1106))
(assert (x218 x765))
(assert (= (x299 2764855426) (x869 2764855426)))
(assert (= (=> (and (= x289 (x483 x528)) (= (x1085 (x869 x1078) x61 0) x528) (= x1078 (x891 1461501637330902918203684832716283019655932542975 x540)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x289) (>= x289 0) (= (= 0 x289) x958) (= (x1085 (x869 x1068) (x299 6) 0) x61)) (and (=> (and (= (x286 (- x1068 1)) x79) x958 (not x714) (= x714 (> x79 0))) x393) (=> (and (not x958) (= x1068 x1176)) x1547))) x768))
(assert (x218 x1464))
(assert (= (x1213 x731) (ite (= x1166 x731) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x731))))
(assert (= (and (not x288) x66) x949))
(assert (x218 x955))
(assert (x648 x465))
(assert (= (ite (= x628 x1150) x1044 (x1213 x1150)) (x512 x1150)))
(assert (= (x51 x565) (ite (= x565 x1) x347 (x112 x565))))
(assert (=> (<= x227 10000) (= (x869 x227) (x299 x227))))
(assert (x218 x667))
(assert (x648 x459))
(assert (= (ite (= x935 x203) x1008 (x1376 x203)) (x45 x203)))
(assert (x218 x201))
(assert (= (or (and x779 (not x521)) (and x194 (not x1173)) (and x797 x958)) x1138))
(assert (x648 x645))
(assert (= (x576 x534) (ite (and x574 x35) (x1184 x534) (x1075 x534))))
(assert (= (x1083 (x869 x888)) x888))
(assert (=> (>= 10000 x1374) (= (x299 x1374) (x869 x1374))))
(assert (=> (<= x1109 10000) (= (x869 x1109) (x299 x1109))))
(assert (x218 x1108))
(assert (= (ite (= x1310 x1164) x292 (x150 x1310)) (x112 x1310)))
(assert (x648 x1048))
(assert (x218 x1514))
(assert (= (ite (= x1212 x565) x107 (x45 x1212)) (x467 x1212)))
(assert (x218 x892))
(assert (x218 x388))
(assert (x218 x1171))
(assert (x218 x126))
(assert (x218 x602))
(assert (= 2835717307 (x1083 (x299 2835717307))))
(assert (x218 x106))
(assert (= (x1083 (x869 x1516)) x1516))
(assert (=> (>= 10000 x1321) (= (x869 x1321) (x299 x1321))))
(assert (= (ite (= x1164 x421) x292 (x150 x421)) (x112 x421)))
(assert (x218 x160))
(assert (= (x869 826074471) (x299 826074471)))
(assert (= x645 (x1083 (x869 x645))))
(assert (x648 x250))
(assert (x1391 x415))
(assert (= (x562 x203) (ite (= x203 x388) x586 (x1207 x203))))
(assert (x218 x1044))
(assert (= x41 (=> (and (<= x87 1461501637330902918203684832716283019655932542975) (not (= 635128645 x1313)) (< 0 x1131) (= x807 x823) (not (< x1313 468353030)) (> 911411945 x1313) (= x1313 759532456) (not (= 468353030 x1313)) (> 2293535753 x1313) (>= 1461501637330902918203684832716283019655932542975 x1360) (= (x1085 (x869 x1360) x1395 0) x173) (<= x823 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x909 (x1085 (x869 x87) x173 0)) (= (x548 x909) x823) (= x1131 (x532 (x869 274184521717934524641157099916833587206))) (>= x823 0) (= x1395 (x1085 (x869 x859) (x299 7) 0))) (=> (and (= x781 x20) x946 (= x807 x364) (= x1475 x71) (= x946 (<= x919 x364))) x157))))
(assert (= x750 (x1083 (x869 x750))))
(assert (= x118 (x1083 (x869 x118))))
(assert (= (and x792 x337) x597))
(assert (x218 x345))
(assert (x218 x1244))
(assert (x218 x1517))
(assert (x218 x730))
(assert (x218 x770))
(assert (x218 x1113))
(assert (x218 x1550))
(assert (= (x1210 x772) (ite (and (not x102) x1492 x1145) (x835 x772) (x423 x772))))
(assert (= (ite (= x565 x1474) x107 (x45 x1474)) (x467 x1474)))
(assert (x218 x1466))
(assert (= (ite (= x628 x1053) x1044 (x1213 x1053)) (x512 x1053)))
(assert (= (ite (= x1 x772) x347 (x112 x772)) (x51 x772)))
(assert (= x681 (x1083 (x869 x681))))
(assert (= (x562 x127) (ite (= x127 x388) x586 (x1207 x127))))
(assert (x218 x1453))
(assert (= (x1083 (x869 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (=> (<= x730 10000) (= (x869 x730) (x299 x730))))
(assert (x218 x372))
(assert (x648 x1025))
(assert (= (ite (and (not x1026) x62 x1271 x1322 x1002 x1485) (x1548 x388) (ite (and x62 x1485 x1322 x1002 (not x1271)) (x1099 x388) (ite (and (not x1485) x62 x1322 x1002) (x512 x388) (ite (and x1002 (not x62) x1322) (x1213 x388) (x411 x388))))) (x563 x388)))
(assert (x218 x705))
(assert (x648 x1120))
(assert (x218 x1292))
(assert (x218 x618))
(assert (x1391 x929))
(assert (x218 x261))
(assert (= (ite (= x489 x628) x1044 (x1213 x489)) (x512 x489)))
(assert (= (x1213 x203) (ite (= x203 x1166) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x203))))
(assert (= (x1253 x203) (ite (and x1194 x934) (x112 x203) (ite (and (not x840) x1194 x1503 (not x934)) (x51 x203) (ite (and (not x1503) x1194 (not x934)) (x112 x203) (x903 x203))))))
(assert (x648 x901))
(assert (= (ite (and x897 x1005) (x407 x772) (x462 x772)) (x476 x772)))
(assert (x218 x1413))
(assert (=> (<= x285 10000) (= (x299 x285) (x869 x285))))
(assert (= (and (not x486) x695) x792))
(assert (x648 x781))
(assert (=> (<= x1209 10000) (= (x299 x1209) (x869 x1209))))
(assert (=> (<= x1312 10000) (= (x299 x1312) (x869 x1312))))
(assert (= (x45 x731) (ite (= x935 x731) x1008 (x1376 x731))))
(assert (=> (<= x195 10000) (= (x869 x195) (x299 x195))))
(assert (= (=> (and (= (x891 1461501637330902918203684832716283019655932542975 x540) x184) (>= x1324 0) (<= 0 x323) (= x373 (x112 x1164)) (= x1030 (x31 x822)) (= (x88 x603) x292) (= (= 0 x360) x683) (= x822 (x1085 (x869 x799) (x299 1) 0)) (= (x1085 (x869 x184) x858 0) x1084) (= x323 (x483 x1319)) (= (x1085 (x869 x234) x1084 0) x1170) (<= x1324 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x567 x1170) x1324) (= (x1458 (+ 64 x1540)) x614) (= (= x1412 0) x916) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1030) (<= x380 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1463) (<= 0 x1030) (= x830 (x1085 (x869 x799) (x299 6) 0)) (= (= 0 x1324) x934) (or (and (= (x1085 (x869 x799) (x299 5) 0) x433) (not x683) (= x995 (x1085 (x869 x799) (x299 6) 0)) (= (x891 1461501637330902918203684832716283019655932542975 x540) x590) (= x297 (x1085 (x869 x590) x433 0)) (= x635 (x891 1461501637330902918203684832716283019655932542975 x540)) (< (* x360 x523) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x226 x1126) (= (* x523 x360) x226) (= (x1085 (x869 x635) x995 0) x742)) (and (= x868 (x1085 (x869 x1206) x561 0)) x683 (= (x891 1461501637330902918203684832716283019655932542975 x540) x1206) (= (x1085 (x869 x799) (x299 6) 0) x561))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x323) (= (> x373 x323) x884) (or (and (= x360 0) (not x884)) (and (= (= 0 x323) x1433) (or (and (= x722 x360) (= x244 (x112 x1540)) (= x722 (x286 (- x1038 x244))) x1433 (not (< x1038 x244))) (and (= x360 x831) (not (< x1038 x323)) (= 604800 x1011) (= (x286 (- x1038 x323)) x1277) (not x1433) (= x831 (ite (> 604800 x1277) x1277 604800)))) (or (and (= x209 (x112 x1164)) x330 (= x209 x1038)) (and (not x330) (= x1381 x1038))) (= (> x1381 x172) x330) (= x172 (x112 x1164)) x884)) (= (x1085 (x869 x799) (x299 3) 0) x858) (<= 0 x292) (or (and (= (x891 1461501637330902918203684832716283019655932542975 x540) x593) (not x916) (= x233 (x1085 (x869 x799) (x299 10) 0)) (= (x1085 (x869 x593) x233 0) x1469)) x916) (= (x1085 (x869 x1463) x830 0) x1319) (or (and (= (x1458 (+ 1 x799)) x1072) (= x1072 x997) x934) (and (= (mod (* x1324 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x278) (= (< 0 x586) x1503) (= 1 x929) (= (x891 x929 x1349) x1340) (< 0 x380) (or (not x1503) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x931) (= x503 x791) (= x1401 0) (= x347 (+ x503 x925)) (= x1022 (x891 1461501637330902918203684832716283019655932542975 x540)) x1503 (= x1023 (* x931 x1504)) (= x631 (x112 x388)) (< (* x1504 x931) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1095 (x1085 (x869 x784) x1215 0)) (< 0 x586) (= (div x1023 1000000000000000000) x600) (= (x112 x1) x791) (= (x185 x499) x1401) (< 0 x586) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x600 x791)) (= x931 (x1060 x1095)) (> x631 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1401) (= x784 (x354 x219)) (= x1171 (x354 x219)) (= (x1085 (x869 x799) (x299 11) 0) x718) (= (x1458 (+ x1521 160)) x1) (= x1293 (x891 1461501637330902918203684832716283019655932542975 x540)) (>= 1461501637330902918203684832716283019655932542975 x1171) (= x906 x219) (= x651 (x1085 (x869 x799) (x299 4) 0)) (= x621 (x1085 (x869 x234) x515 0)) (= x515 (x1085 (x869 x1022) x651 0)) (or (not x840) (and (= (x354 x1444) x595) (= x1505 (x1085 (x869 x776) x310 0)) (= x15 (* x910 x1504)) (= x163 (x1085 (x869 x1489) x1261 0)) (= x1201 (x51 x388)) (<= 0 x1482) (= (x1085 (x869 x799) (x299 11) 0) x223) (<= 0 x910) (< 1 x586) (= x910 (x1060 x1505)) (= x47 (x1458 (+ 192 x1521))) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1489) (= x154 (x51 x47)) (= (x891 1461501637330902918203684832716283019655932542975 x540) x368) (= (< 2 x586) x1125) (> x1201 1) (= (x1085 (x869 x234) x163 0) x715) (= x225 x108) (= x1261 (x1085 (x869 x799) (x299 4) 0)) (< (* x1504 x910) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (div x15 1000000000000000000) x225) (= x369 (+ x538 x108)) (< (+ x154 x225) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x840 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1482) (= (x354 x1444) x776) (< 1 x586) (not x1125) (= x1444 (x1458 (+ x1477 64))) (= x1482 0) (= (x1085 (x869 x368) x223 0) x310) (>= 1461501637330902918203684832716283019655932542975 x776) (<= x910 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x595 1461501637330902918203684832716283019655932542975) (= (x185 x109) x1482) (= x538 x154) (= x109 (x1085 (x869 x595) x715 0)))) (>= 1461501637330902918203684832716283019655932542975 x784) (= x600 x925) (>= x1401 0) (= (x1085 (x869 x1171) x621 0) x499) (= x1215 (x1085 (x869 x1293) x718 0)) (= (< 1 x586) x840) (>= x931 0))) (= x1349 (ite (> x1324 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= (div x278 x380) x1504) (not x934) (= x638 x997) (= x638 (x1458 (+ x799 1))) (= 0 x1340))) (= (x891 1461501637330902918203684832716283019655932542975 x540) x465) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x292) (= x380 (x902 x844)) (= x1164 (x1458 (+ 32 x1540))) (= x844 (x1085 (x869 x465) x1268 0)) (= x1268 (x1085 (x869 x799) (x299 5) 0)) (= (x1110 x822 1) x603) (<= 0 x380)) x1378) x610))
(assert (= (x298 x1150) (ite (= x1150 x1258) x1278 (x38 x1150))))
(assert (= (ite (= x252 x127) x893 (x1099 x127)) (x1548 x127)))
(assert (= (x467 x489) (ite (= x565 x489) x107 (x45 x489))))
(assert (= x492 x1394))
(assert (= (x1083 (x299 2512682246)) 2512682246))
(assert (= x304 (x1083 (x869 x304))))
(assert (x218 x1513))
(assert (x218 x326))
(assert (= (x869 2512682246) (x299 2512682246)))
(assert (x218 x1456))
(assert (x218 x1208))
(assert (= (x1083 (x869 x465)) x465))
(assert (= x759 (or (and (not x398) x259) (and (not x56) x1267) (and x752 x1240))))
(assert (=> (>= 10000 x827) (= (x869 x827) (x299 x827))))
(assert (=> (<= x1068 10000) (= (x869 x1068) (x299 x1068))))
(assert (= (ite (and x1271 x1002 x62 (not x1026) x1485 x1322) (x1548 x489) (ite (and x62 (not x1271) x1485 x1322 x1002) (x1099 x489) (ite (and x1322 (not x1485) x62 x1002) (x512 x489) (ite (and x1322 (not x62) x1002) (x1213 x489) (x411 x489))))) (x563 x489)))
(assert (=> (<= x180 10000) (= (x299 x180) (x869 x180))))
(assert (= (x1083 (x299 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x1391 x540))
(assert (x218 x353))
(assert (x218 x1401))
(assert (x218 x315))
(assert (= (x1083 (x869 x1025)) x1025))
(assert (x218 x1313))
(assert (= (x467 x937) (ite (= x565 x937) x107 (x45 x937))))
(assert (x648 x1516))
(assert (= x733 (x1083 (x869 x733))))
(assert (= 0 (x1162 x489)))
(assert (= x1151 (=> (and (= (x286 (- x799 1)) x1068) (= x521 (> x1068 0))) (and (=> (not x521) x393) (=> x521 x768)))))
(assert (= x508 (=> (= x438 x801) x754)))
(assert (= (x1083 (x869 x1251)) x1251))
(assert (x218 x129))
(assert (x218 x640))
(assert (= (ite (= x618 x127) x1481 (x221 x127)) (x38 x127)))
(assert (x218 x950))
(assert (x218 x942))
(assert (= x1172 (=> (= x626 (> x799 0)) (and (=> x626 x502) (=> (not x626) x632)))))
(assert (x218 x666))
(assert (x218 x624))
(assert (= (ite (= x1468 x731) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x131 x731)) (x221 x731)))
(assert (= (x703 x1474) (ite (and x1135 x504) (x562 x1474) (x531 x1474))))
(assert (= x504 x66))
(assert (= x1360 (x1083 (x869 x1360))))
(assert (= x824 (or (and (not x1289) x191) (and (not x359) x597))))
(assert (=> (<= x1206 10000) (= (x299 x1206) (x869 x1206))))
(assert (= (ite (and x504 x1135) (x562 x534) (x531 x534)) (x703 x534)))
(assert (= (x1083 (x869 x188)) x188))
(assert (x218 x1260))
(assert (= (=> (and (= x33 (= x300 0)) (or (and x33 (= 0 x1412) (= 0 x523)) (and (<= x1387 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x33) (= x280 (x1085 (x869 x300) (x299 10) 0)) (= x1386 (x1085 (x869 x358) x280 0)) (= (x891 1461501637330902918203684832716283019655932542975 x540) x358) (= (= 0 x1387) x1034) (>= x1387 0) (or (and (not x1034) (= 1 x1412) (= x1387 x523)) (and (= x523 0) (= 0 x1412) x1034)) (= x1387 (x1159 x1386))))) x610) x1153))
(assert (= x1556 (=> (and (>= 1461501637330902918203684832716283019655932542975 x730) (= x957 2532887486) (= x493 (x1085 (x869 x730) x1440 0)) (= x1430 (x1085 (x869 x1262) (x299 4) 0)) (>= 1461501637330902918203684832716283019655932542975 x1409) (= (x1085 (x869 x686) x230 0) x1440) (= x230 (x1085 (x869 x1409) x1430 0)) (< x957 2960351575) (>= 1461501637330902918203684832716283019655932542975 x686) (<= x257 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x957 2512682246)) (not (< x957 2293535753)) (= x86 (x532 (x869 274184521717934524641157099916833587206))) (= x257 x1286) (not (= 2293535753 x957)) (< 0 x86) (< x957 2690754053) (not (= 2418364589 x957)) (= (x185 x493) x257) (>= x257 0)) x848)))
(assert (= (ite (and x1135 x504) (x562 x47) (x531 x47)) (x703 x47)))
(assert (= (=> (and (= x239 (x1085 (x869 x608) (x299 3) 0)) (>= x783 0) (< 0 x769) (= x72 x783) (= (x1085 (x869 x472) x911 0) x619) (not (= x146 2690754053)) (= 2743102681 x146) (<= x783 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x911 (x1085 (x869 x896) x239 0)) (> 2960351575 x146) (= x769 (x532 (x869 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x896) (not (< x146 2690754053)) (not (< x146 2293535753)) (<= x472 1461501637330902918203684832716283019655932542975) (= (x505 x619) x783)) (=> (and (= x20 x645) (= x751 x1475) (= x19 x72) (= (>= x753 x19) x78)) x1058)) x1081))
(assert (x218 x79))
(assert (x218 x1025))
(assert (x218 x82))
(assert (= (x1083 (x299 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x648 x1489))
(assert (x218 x227))
(assert (x218 x1091))
(assert (= (x1083 (x869 x553)) x553))
(assert (x218 x219))
(assert (= (x869 2293535753) (x299 2293535753)))
(assert (x648 x403))
(assert (= x536 (=> (and (>= 1461501637330902918203684832716283019655932542975 x733) (> x445 0) (> 2690754053 x1029) (not (> 2293535753 x1029)) (not (= x1029 2512682246)) (<= 0 x1466) (= x341 (x1085 (x869 x1551) x1522 0)) (<= x426 1461501637330902918203684832716283019655932542975) (= (x1085 (x869 x426) x181 0) x1522) (= (x1085 (x869 x733) x341 0) x870) (= (x1085 (x869 x105) (x299 4) 0) x181) (= (x532 (x869 274184521717934524641157099916833587206)) x445) (not (= 2418364589 x1029)) (< x1029 2960351575) (<= x1551 1461501637330902918203684832716283019655932542975) (= 2532887486 x1029) (not (= 2293535753 x1029)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1466) (= x1466 (x185 x870)) (= x1466 x913)) x1282)))
(assert (x218 x771))
(assert (= (x1083 (x299 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (ite (and x1135 x504) (x562 x937) (x531 x937)) (x703 x937)))
(assert (x218 x1029))
(assert (x648 x1497))
(assert (= (or (and x736 x949) x117) x69))
(assert (x648 274184521717934524641157099916833587214))
(assert (= x843 (x1083 (x869 x843))))
(assert (x218 x332))
(assert (=> (>= 10000 x645) (= (x299 x645) (x869 x645))))
(assert (x218 x1015))
(assert (x648 x776))
(assert (= x184 (x1083 (x869 x184))))
(assert (x218 x1515))
(assert (x218 x1250))
(assert (= x936 (x1083 (x869 x936))))
(assert (= (x51 x1150) (ite (= x1 x1150) x347 (x112 x1150))))
(assert (=> (>= 10000 x105) (= (x869 x105) (x299 x105))))
(assert (x218 x458))
(assert (= x1094 (and x398 x259)))
(assert (= x717 (x1083 (x869 x717))))
(assert (x218 x311))
(assert (= (x1083 (x869 x1321)) x1321))
(assert (= (=> (and (= x474 (x1085 (x869 x535) (x299 3) 0)) (= (x1085 (x869 x234) x396 0) x1089) (= (< 0 x586) x1002) (= (x1085 (x869 x1464) x474 0) x396) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1464)) (and (=> (and (= x62 (< 0 x1118)) (or (not x497) (and x497 (= x506 (x1458 (+ x52 x1118))))) (= x1118 (x1213 x829)) (or (and (= x628 x52) (= x1474 x1212) (or (and (not x1485) (= x1193 32)) (and (= x1310 (x1458 (+ 64 x829))) (= (> x1118 64) x1271) (= x770 (x512 x1310)) (= x667 (x1458 (+ x1139 96))) (or (and (not x1271) (= x1193 64)) (and (= x1026 (> x1118 96)) (= x252 (x1458 (+ x1139 128))) x1271 (= x893 (x1099 x203)) (= x203 (x1458 (+ 96 x829))) (or (and (not x73) (= (> x1118 128) x73) (= 128 x1193) x1026 (= x25 (x1458 (+ x1139 160))) (= (x1458 (+ 128 x829)) x1053) (= (x1548 x1053) x125)) (and (not x1026) (= x1193 96))))) x1485)) x62 (= (> x1118 32) x1485) (= x1044 (x1213 x1474))) (and (not x62) (= 0 x1193))) (= x332 (x891 26959946667150639794667015087019630673637144422540572481103610249215 x404)) (= x1141 (x1458 (+ x1521 160))) (= (< 0 x1168) x1077) (= x227 (x354 x199)) (= (< x1118 x1193) x497) x1002 (= x216 (x1458 (+ x829 36))) (= x906 x199) (= x1212 (x1458 (+ 32 x829))) (= (x532 (x869 x227)) x1168) (= (x1458 (+ 128 x216)) x52) (= (x1458 (+ 68 x829)) x434) (= (x1458 (+ 100 x829)) x1139) x1077 (= x1019 (x286 (- x1139 x829))) (= (x1458 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x332)) x135) (< 0 x586) (= (x694 x1212) x404) (= (x1538 x388) x357) (>= 1461501637330902918203684832716283019655932542975 x227) (= (x1458 (+ 96 x216)) x1166) (> x357 0) (= (x1538 x1141) x647) (= (x286 (- x1019 32)) x305) (= x401 0)) x1555) (=> (not x1002) x1472))) x408))
(assert (= x848 (=> (and (= x9 (or (not x745) x1018)) (= (>= x386 x1279) x344) (= (and x78 x344) x1018) (= x1279 x1286)) (and x9 (=> (and (= x1015 x1475) (= 87118632 x985) (= x1347 false) (= x20 x231) (= x202 x1308) (= 87118632 x806)) x1404)))))
(assert (x218 x846))
(assert (= x712 (x1083 (x869 x712))))
(assert (x218 x1349))
(assert (= (x1083 (x869 x1557)) x1557))
(assert (=> (>= 10000 x1104) (= (x869 x1104) (x299 x1104))))
(assert (x218 x721))
(assert (= (x1083 (x869 x1489)) x1489))
(assert (x648 x1219))
(assert (x218 x1329))
(assert (=> (>= 10000 x304) (= (x869 x304) (x299 x304))))
(assert (= (=> (and (< x850 2960351575) (= x240 x1460) (not (= x850 2512682246)) (>= x1460 0) (>= 1461501637330902918203684832716283019655932542975 x236) (= (x1085 (x869 x1209) x342 0) x646) (not (= x850 2293535753)) (> 2690754053 x850) (= x938 (x1085 (x869 x236) x646 0)) (not (> 2293535753 x850)) (<= x1460 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1183 (x532 (x869 274184521717934524641157099916833587206))) (= 2532887486 x850) (>= 1461501637330902918203684832716283019655932542975 x1025) (= x1460 (x185 x147)) (= x147 (x1085 (x869 x1025) x938 0)) (> x1183 0) (= x342 (x1085 (x869 x1136) (x299 4) 0)) (not (= x850 2418364589)) (>= 1461501637330902918203684832716283019655932542975 x1209)) (=> (and (= x232 (> x591 0)) (= (x1458 (+ x836 35)) x1266) (not (< x1428 4)) (= x637 x1027) (= x1009 x535) (= x771 (x1458 (+ x463 x388))) (= x153 0) (= (= 0 x586) x1135) (= x799 x1010) (= x540 x1227) (= (x286 (- x1428 4)) x726) (= x1231 (mod (* 32 x586) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x702 x799) (<= x1318 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (<= x942 x887) x363) (>= 1461501637330902918203684832716283019655932542975 x279) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1266) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1428)) (< x1266 x1428)) (and (> x1266 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1428))) (>= x279 0) (= x535 x1006) (= x115 x1027) (= x955 (x1458 (+ x75 160))) (not (> x799 x535)) (= x906 (x1458 (+ 36 x836))) (= x591 (x286 (- x235 1))) (< x535 x1318) (not (< x235 1)) (= x1521 (x1458 (+ x1284 32))) (not (= 69947311 x640)) (= x463 (x1458 (+ 32 x75))) (= x586 (x354 x1477)) (= (x1458 (+ x836 4)) x1477) (< x640 911411945) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x726) (and (= true (<= x726 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 128 x726)))) (= 87118632 x640) (= (mod (* x586 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1284) (not (> x1290 18446744073709551615)) (= x75 (mod (* x586 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1298 x153) (< 131 x1428) (= x674 (x1458 (+ x906 x1231))) (= (x1207 128) x235) (= 128 x959) (or x1135 (and (= x1545 (x1458 (+ 160 x1521))) (not x1135) (= (mod (* x586 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1411))) x520 (< 0 x1260) (not (> x674 x1428)) (not (< 18446744073709551615 x586)) (= x520 (and x1488 x363)) (= x240 x942) (= (x532 (x869 274184521717934524641157099916833587206)) x1260) (>= x115 0) (= x279 x234) (< x640 468353030) (or (and (= (> x235 1) x1424) (or (and (= (x1207 128) x734) (= x894 (x891 1461501637330902918203684832716283019655932542975 x201)) (not (= x894 x1526)) x1424 (= (x1207 128) x1045) (= x1426 (> x235 2)) (> x1045 0) (or (not x1426) (and (= x1413 (x1207 160)) (not (= x267 x1146)) (= x443 (x1207 128)) x1426 (= (x1207 128) x904) (= x885 (< 3 x235)) (= x1389 (x1207 224)) (not x885) (> x443 2) (= x267 (x891 1461501637330902918203684832716283019655932542975 x1389)) (= (x891 1461501637330902918203684832716283019655932542975 x1413) x1146) (> x904 0))) (> x734 1) (= (x891 1461501637330902918203684832716283019655932542975 x415) x1526) (= x201 (x1207 192)) (= (x1207 160) x415)) (not x1424)) (not (> x517 1)) (not (< x235 1)) x232 (= (x286 (- x235 1)) x517)) (not x232)) (> 2293535753 x640) (>= x1318 0) (= x943 x540) (>= 1461501637330902918203684832716283019655932542975 x1414) (= x200 x1381) (= x1290 x836) (>= 1461501637330902918203684832716283019655932542975 x115) (<= x540 1461501637330902918203684832716283019655932542975) (= (<= x1428 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (<= 0 x1414) (= (x1458 (+ 160 x1284)) x388)) x220)) x1071))
(assert (x218 x1192))
(assert (x218 x1540))
(assert (x218 x1164))
(assert (x648 x1179))
(assert (= (=> (and (= (x1495 x1199) x1106) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1106) (>= x1106 0) (= x1199 (x1085 (x869 x888) x552 0)) (= (x1085 (x869 x106) (x299 6) 0) x552) (= x888 (x891 1461501637330902918203684832716283019655932542975 x540)) (= x752 (= 0 x1106))) (and (=> (and (not x752) (= x106 x778)) x162) (=> (and (not x1454) x752 (= (x286 (- x106 1)) x58) (= x1454 (< 0 x58))) x966))) x1123))
(assert (= x593 (x1083 (x869 x593))))
(assert (= (x1083 (x869 x1082)) x1082))
(assert (x218 x751))
(assert (x218 x719))
(assert (= x615 (=> (and (= (x391 x731) x825) (or (not x1132) (and (= (not x416) x514) (not (or (and (= (<= x1346 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1346)) (> x1346 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x303 (x391 x772)) x1132 (= (ite x514 1 0) x395) (= (x391 x731) x1346) (= (= x303 0) x416) (> x303 0) (= x395 x303) (= x772 (x1458 (+ 32 x731))))) (not x437) (= x1061 (= 0 x1073)) (= (x409 (x869 x750)) x49) (not (= 0 x890)) (= (< (x1527 (x869 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1238) (or (and x1061 (= 96 x731)) (and (= x731 x1274) (= (x1458 (+ x1256 96)) x1113) (not x1061))) (= x1132 (> x825 0)) (= (> x586 2) x437) x1238) x1472)))
(assert (x218 x599))
(assert (x648 x1519))
(assert (x218 x1439))
(assert (= (x221 x127) (ite (= x127 x1468) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x131 x127))))
(assert (x218 x713))
(assert (x648 x1366))
(assert (=> (<= x1463 10000) (= (x869 x1463) (x299 x1463))))
(assert (x648 x676))
(assert (=> (<= x1308 10000) (= (x299 x1308) (x869 x1308))))
(assert (= (ite (= x421 x252) x893 (x1099 x421)) (x1548 x421)))
(assert (= (x1083 (x299 2690754053)) 2690754053))
(assert (= x1486 (x1083 (x869 x1486))))
(assert (x648 x1074))
(assert (x1391 x1413))
(assert (x218 x1193))
(assert (= x282 (x1083 (x869 x282))))
(assert (= x390 (x1083 (x869 x390))))
(assert (x218 x52))
(assert (x218 x1048))
(assert (= x320 (x1083 (x869 x320))))
(assert (x218 x947))
(assert (x218 x235))
(assert (x218 x676))
(assert (x648 x936))
(assert (= (x1213 x1150) (ite (= x1166 x1150) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x1150))))
(assert (= (x112 x1150) (ite (= x1164 x1150) x292 (x150 x1150))))
(assert (= x162 (=> (= x1076 x778) x16)))
(assert (= (ite (= x731 x618) x1481 (x221 x731)) (x38 x731)))
(assert (x218 x1006))
(assert (x218 x323))
(assert (x648 x799))
(assert (= (=> (and (<= x431 1461501637330902918203684832716283019655932542975) (= x1169 x471) (= (x1085 (x869 x431) x166 0) x706) (= 142201243 x863) (= x529 (x532 (x869 274184521717934524641157099916833587206))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x471) (= x370 (x1085 (x869 x118) (x299 9) 0)) (not (= 69947311 x863)) (>= 1461501637330902918203684832716283019655932542975 x685) (not (= x863 87118632)) (> 468353030 x863) (> 2293535753 x863) (= (x1085 (x869 x685) x370 0) x166) (= (x1204 x706) x471) (< x863 911411945) (< 0 x529) (<= 0 x471)) (=> (and (= x1229 (> x1373 0)) (= 0 x947) (= x399 x20) (= x1104 x1475) (= x1169 x1373) (= (and x1229 x933) x749)) x255)) x454))
(assert (= (=> (= (< x535 x799) x288) (and (=> (and x288 (= x829 x771)) x12) (=> (not x288) x141))) x220))
(assert (x218 x1553))
(assert (= (x1162 x1150) 0))
(assert (x218 x206))
(assert (= (=> (and (or (and (= x664 0) x678 (= 0 x665)) (and (= (x1085 (x869 x827) (x299 9) 0) x133) (>= x1250 0) (= 1 x665) (= (x1085 (x869 x1242) x133 0) x425) (= x1242 (x891 1461501637330902918203684832716283019655932542975 x540)) (not x678) (= x389 (x1085 (x869 x234) x425 0)) (= x1250 (x1204 x389)) (= x1250 x664) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250))) (= (= x827 0) x678)) x148) x1476))
(assert (x218 x787))
(assert (x218 x915))
(assert (x648 x784))
(assert (x218 x253))
(assert (x218 x338))
(assert (x218 x225))
(assert (= (x567 x1170) (ite (and x69 x1438) (x89 x1170) (ite (and x69 (not x1438) x994) (x89 x1170) (x356 x1170)))))
(assert (= 69947311 (x1083 (x299 69947311))))
(assert (= (x45 x491) (ite (= x491 x935) x1008 (x1376 x491))))
(assert (= (ite (and x1135 x504) (x562 x1) (x531 x1)) (x703 x1)))
(assert (x218 x1508))
(assert (x218 x821))
(assert (x218 x6))
(assert (x218 x1258))
(assert (x218 x461))
(assert (= (x1162 x421) 0))
(assert (=> (>= 10000 x399) (= (x869 x399) (x299 x399))))
(assert (x218 x63))
(assert (x648 x1206))
(assert (x218 x415))
(assert (x218 x240))
(assert (x218 x641))
(assert (x218 x1363))
(assert (x1391 x201))
(assert (= 826074471 (x1083 (x299 826074471))))
(assert (= x1357 x1097))
(assert (x218 x604))
(assert (=> (<= x1133 10000) (= (x869 x1133) (x299 x1133))))
(assert (x218 x717))
(assert (x218 x438))
(assert (=> (<= x781 10000) (= (x299 x781) (x869 x781))))
(assert (= (x1210 x731) (ite (and x1492 (not x102) x1145) (x835 x731) (x423 x731))))
(assert (x648 x320))
(assert (=> (>= 10000 x859) (= (x299 x859) (x869 x859))))
(assert (=> (>= 10000 x950) (= (x869 x950) (x299 x950))))
(assert (= (x51 x315) (ite (= x1 x315) x347 (x112 x315))))
(assert (x218 x1008))
(assert (= x1022 (x1083 (x869 x1022))))
(assert (x218 x58))
(assert (x218 x1420))
(assert (x648 x871))
(assert (=> (<= x403 10000) (= (x299 x403) (x869 x403))))
(assert (x648 274184521717934524641157099916833587218))
(assert (= x676 (x1083 (x869 x676))))
(assert (= (x1154 x421) (ite (and x1322 (not x497) x1002) (x563 x421) (x644 x421))))
(assert (= (and x597 x359) x64))
(assert (= (ite (= x1166 x388) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x388)) (x1213 x388)))
(assert (x218 x943))
(assert (x218 x400))
(assert (= x326 (x1083 (x869 x326))))
(assert (=> (<= x250 10000) (= (x299 x250) (x869 x250))))
(assert (x218 x1278))
(assert (x648 x827))
(assert (= (ite (= x935 x1063) x1008 (x1376 x1063)) (x45 x1063)))
(assert (x218 x710))
(assert (=> (<= x1022 10000) (= (x869 x1022) (x299 x1022))))
(assert (= (ite (= x1468 x421) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x131 x421)) (x221 x421)))
(assert (=> (<= x1171 10000) (= (x869 x1171) (x299 x1171))))
(assert (= (x51 x491) (ite (= x1 x491) x347 (x112 x491))))
(assert (x218 x726))
(assert (x218 x455))
(assert (=> (<= x1523 10000) (= (x869 x1523) (x299 x1523))))
(assert (x648 x1523))
(assert (= x358 (x1083 (x869 x358))))
(assert (= (x1083 (x869 x1551)) x1551))
(assert (= (ite (and x1271 x1002 x1322 (not x1026) x62 x1485) (x1548 x127) (ite (and x62 (not x1271) x1002 x1485 x1322) (x1099 x127) (ite (and x1322 x62 (not x1485) x1002) (x512 x127) (ite (and x1322 (not x62) x1002) (x1213 x127) (x411 x127))))) (x563 x127)))
(assert (= (=> (and (= (x483 x309) x1259) (= x293 2258409472) (= (x1085 (x869 x345) (x299 6) 0) x839) (= x1182 (x532 (x869 274184521717934524641157099916833587206))) (> 2293535753 x293) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1259) (not (= x293 1986467848)) (= x1259 x444) (>= x1259 0) (not (= 1968616202 x293)) (>= 1461501637330902918203684832716283019655932542975 x311) (not (= 2061678023 x293)) (= (x1085 (x869 x311) x839 0) x309) (not (= 2211524764 x293)) (not (> 911411945 x293)) (not (< x293 1968616202)) (< 0 x1182)) (=> (and (= x202 x87) (= x1360 x20) (= x919 x444) (= x859 x1475)) x41)) x132))
(assert (x218 x19))
(assert (=> (>= 10000 x1127) (= (x299 x1127) (x869 x1127))))
(assert (x218 x434))
(assert (= (x1253 x1141) (ite (and x934 x1194) (x112 x1141) (ite (and (not x840) (not x934) x1503 x1194) (x51 x1141) (ite (and (not x934) x1194 (not x1503)) (x112 x1141) (x903 x1141))))))
(assert (= 2514000705 (x1083 (x299 2514000705))))
(assert (x218 x699))
(assert (x218 x783))
(assert (=> (<= x593 10000) (= (x869 x593) (x299 x593))))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1083 (x299 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x218 x896))
(assert (x218 x1126))
(assert (= (ite (= x1166 x1053) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x1053)) (x1213 x1053)))
(assert (= (x1083 (x869 x896)) x896))
(assert (x218 x586))
(assert (x862 x697 x1354))
(assert (x648 x1107))
(assert (x218 x1124))
(assert (= (x1083 (x869 x236)) x236))
(assert (x218 x107))
(assert (= (ite (= x1164 x1212) x292 (x150 x1212)) (x112 x1212)))
(assert (x218 x382))
(assert (x218 x216))
(assert (x648 x472))
(assert (x218 x430))
(assert (= (=> (and (= (x286 (- x799 1)) x1557) (= x196 (> x1557 0))) (and (=> x196 x1160) (=> (not x196) x632))) x1533))
(assert (= (x512 x315) (ite (= x315 x628) x1044 (x1213 x315))))
(assert (= (x1099 x772) (ite (= x667 x772) x770 (x512 x772))))
(assert (x218 x1214))
(assert (x218 x894))
(assert (=> (<= x1464 10000) (= (x869 x1464) (x299 x1464))))
(assert (= (x869 2211524764) (x299 2211524764)))
(assert (x218 x222))
(assert (x218 x1225))
(assert (x862 x540 x747))
(assert (x648 x1551))
(assert (x218 x657))
(assert (x218 x879))
(assert (x218 x601))
(assert (= (x1083 (x869 x1519)) x1519))
(assert (x218 x1))
(assert (= x422 (=> (and (< x481 468353030) (= (x532 (x869 274184521717934524641157099916833587206)) x1200) (> 2293535753 x481) (<= x1014 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 69947311 x481) (= (x1085 (x869 x250) (x299 10) 0) x1435) (<= 0 x1014) (< x481 911411945) (>= 1461501637330902918203684832716283019655932542975 x320) (= x577 x1014) (= (x1085 (x869 x320) x1435 0) x1457) (< 0 x1200) (= (x1159 x1457) x1014)) (=> (and (= x1251 x20) (= x1475 x155) (= x1186 x577) (= x1219 x202)) x636))))
(assert (x218 x130))
(assert (x218 x1304))
(assert (x218 x1120))
(assert (x648 x1133))
(assert (= (ite (= x731 x1258) x1278 (x38 x731)) (x298 x731)))
(assert (x218 x1020))
(assert (= (ite (= x1164 x1474) x292 (x150 x1474)) (x112 x1474)))
(assert (x648 x1104))
(assert (x218 x1297))
(assert (= (=> (and (= x558 (> (x532 (x869 274184521717934524641157099916833587206)) 0)) (<= x20 1461501637330902918203684832716283019655932542975) (= (x1483 (x869 274184521717934524641157099916833587218)) x1362) x490 (>= 1461501637330902918203684832716283019655932542975 x442) (= x490 (> (x532 (x869 274184521717934524641157099916833587214)) 0)) (<= x202 1461501637330902918203684832716283019655932542975) (<= 0 x20) (<= 0 x442) x558 x1007 (= false x1149) (<= 0 x202) (= x234 x723) (= x1367 false) (= (x1483 (x869 274184521717934524641157099916833587214)) x961) (= x1439 87118632) (= x1337 x549) (>= x723 0) (>= 1461501637330902918203684832716283019655932542975 x1337) (<= 0 x507) (= x1475 x345) (= x377 4) (= x100 false) (= (x1483 (x869 274184521717934524641157099916833587206)) x507) (= x1007 (> (x532 (x869 274184521717934524641157099916833587218)) 0)) (>= 1461501637330902918203684832716283019655932542975 x723) (= false x228) (>= x1337 0) (<= 0 x1362) (<= 0 x961) (= x311 x20)) x132) x684))
(assert (x218 x1462))
(assert (x648 x188))
(assert (= (x1083 (x869 x67)) x67))
(assert (x218 x105))
(assert (x218 x1325))
(assert (x218 x647))
(assert (x218 x195))
(assert (x218 x421))
(assert (=> (<= x681 10000) (= (x299 x681) (x869 x681))))
(assert (= (=> (and (<= 0 x263) (= x878 (x891 1461501637330902918203684832716283019655932542975 x540)) (= x26 (x1085 (x869 x878) x1402 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x263) (= x623 (= x263 0)) (= (x1085 (x869 x799) (x299 6) 0) x1402) (= x263 (x483 x26))) (and (=> x623 x1151) (=> (and (= x799 x1176) (not x623)) x1547))) x488))
(assert (= 2293535753 (x1083 (x299 2293535753))))
(assert (= (=> (and (<= 0 x516) (= (x1085 (x869 x799) (x299 7) 0) x186) (not (< x1318 x1010)) (<= 0 x1318) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x516) (= (x891 1461501637330902918203684832716283019655932542975 x540) x719) (= x979 (x1085 (x869 x719) x186 0)) (= (x1085 (x869 x234) x979 0) x1167) (= x736 (> x516 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1318) (= x516 (x548 x1167))) (and (=> (and (= (x1085 (x869 x234) x522 0) x899) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625) (= (x1085 (x869 x799) (x299 9) 0) x494) (= x664 x625) x736 (= (x891 1461501637330902918203684832716283019655932542975 x540) x60) (= (x1085 (x869 x60) x494 0) x522) (= 0 x665) (= x625 (x1204 x899)) (>= x625 0)) x148) (=> (not x736) x1172))) x141))
(assert (x218 x1219))
(assert (= x966 (=> (= x1076 0) x16)))
(assert (=> (>= 10000 x1120) (= (x869 x1120) (x299 x1120))))
(assert (=> (<= x535 10000) (= (x299 x535) (x869 x535))))
(assert (= x249 (=> (= (> x997 0) x337) (and (=> x337 x110) (=> (not x337) x1187)))))
(assert (= (ite (and x504 x1135) (x562 x1150) (x531 x1150)) (x703 x1150)))
(assert (x218 x832))
(assert (= (x1253 x127) (ite (and x934 x1194) (x112 x127) (ite (and (not x934) (not x840) x1194 x1503) (x51 x127) (ite (and x1194 (not x1503) (not x934)) (x112 x127) (x903 x127))))))
(assert (x218 x878))
(assert (= (ite (= x534 x1164) x292 (x150 x534)) (x112 x534)))
(assert (= (or (and x1254 x91) (and x574 x35)) x945))
(assert (x1391 x1316))
(assert (= 87118632 (x1083 (x299 87118632))))
(assert (x648 x733))
(assert (x218 x992))
(assert (= x1312 (x1083 (x869 x1312))))
(assert (x218 x595))
(assert (x218 x1315))
(assert (= (x1083 (x869 x960)) x960))
(assert (not x684))
(assert (x218 x203))
(assert (x218 x1256))
(assert (x218 x1275))
(assert (= x164 (and x949 (not x736))))
(assert (x648 x67))
(assert (= (=> (and (= x82 (x569 (x869 x750))) (= x262 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4 (x869 x750)))) x527 (= x1005 (= x750 274184521717934524641157099916833587218)) x262 (= x879 x672) (= (<= 0 x402) x675) (= x1429 (x4 (x869 x750))) (= x527 (< x82 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x984 (x569 (x869 274184521717934524641157099916833587206))) (= x402 (x569 (x869 274184521717934524641157099916833587206))) x675) (and (=> (not x1005) x1327) (=> (and (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1446 x809)) x1197) (not (= 2514000705 x461)) (= x1188 68) (= x927 (x143 x1536)) (= 2835717307 x461) (= 274184521717934524641157099916833587206 x999) (>= 1461501637330902918203684832716283019655932542975 x860) (= x809 x1423) (not (= x461 1889567281)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1049) (not x241) (= (x286 (- x927 x1423)) x765) x1005 (<= x927 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1188 x879) (= (x891 1461501637330902918203684832716283019655932542975 x860) x98) (= 1 x890) (= x1133 (x891 1461501637330902918203684832716283019655932542975 x860)) (> x1431 0) (= x852 (x286 (- x1188 4))) (not x1197) (not x1128) (<= 0 x1446) (< (+ x809 x1446) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1059 x809) (= x279 x860) (= (x336 x212) x1446) (= x976 x1423) (= (or (> x852 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x852 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x852))) x1128) (= x1536 (x1085 (x869 274184521717934524641157099916833587206) (x299 1) 0)) (<= x1446 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x809 x927) x241) (= x777 (x1085 (x869 274184521717934524641157099916833587206) (x299 1) 0)) (= x122 x1363) (>= x927 0) (= x991 x1446) (= x212 (x1085 (x869 x1133) (x299 1) 0)) (not (= 826074471 x461)) (= x1431 (x532 (x869 274184521717934524641157099916833587218))) (= x170 (+ x1059 x991)) (not (> 649617121 x461)) (not (= 649617121 x461)) (not x1520) (= 274184521717934524641157099916833587206 x1225) (= 32 x1073) (= (> x1423 x927) x1520) (not (> 4 x1188))) x615))) x418))
(assert (x648 x477))
(assert (x648 x426))
(assert (x218 x506))
(assert (= (x1083 (x869 x1497)) x1497))
(assert (x218 x29))
(assert (= (x512 x772) (ite (= x628 x772) x1044 (x1213 x772))))
(assert (= (ite (and (not x497) x1002 x1322) (x563 x731) (x644 x731)) (x1154 x731)))
(assert (x218 x850))
(assert (x862 x860 x1356))
(assert (x648 x87))
(assert (= (ite (= x731 x388) x586 (x1207 x731)) (x562 x731)))
(assert (=> (<= x175 10000) (= (x869 x175) (x299 x175))))
(assert (= (x1213 x937) (ite (= x937 x1166) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x937))))
(assert (= (x467 x388) (ite (= x565 x388) x107 (x45 x388))))
(assert (x218 x1285))
(assert (x218 x292))
(assert (x648 x821))
(assert (=> (<= x1219 10000) (= (x869 x1219) (x299 x1219))))
(assert (x218 x1052))
(assert (x218 x906))
(assert (x218 x491))
(assert (x648 x326))
(assert (x218 x1305))
(assert (x648 x308))
(assert (= (x45 x534) (ite (= x935 x534) x1008 (x1376 x534))))
(assert (x218 x278))
(assert (x218 x22))
(assert (=> (<= x1107 10000) (= (x299 x1107) (x869 x1107))))
(assert (= x735 (=> (and (= x106 (x286 (- x997 1))) (= x56 (< 0 x106))) (and (=> x56 x1123) (=> (not x56) x966)))))
(assert (x218 x912))
(assert (x218 x457))
(assert (x218 x645))
(assert (x648 x71))
(assert (x648 x431))
(assert (=> (<= x776 10000) (= (x869 x776) (x299 x776))))
(assert (= (x1083 (x869 x345)) x345))
(assert (x218 x27))
(assert (x218 x513))
(assert (= 0 (x1162 x772)))
(assert (= (x576 x489) (ite (and x35 x574) (x1184 x489) (x1075 x489))))
(assert (x648 x686))
(assert (= (x567 x619) (ite (and x69 x1438) (x89 x619) (ite (and x994 x69 (not x1438)) (x89 x619) (x356 x619)))))
(assert (= (x1083 (x869 x629)) x629))
(assert (= x175 (x1083 (x869 x175))))
(assert (= (x1253 x1474) (ite (and x1194 x934) (x112 x1474) (ite (and (not x840) x1503 x1194 (not x934)) (x51 x1474) (ite (and (not x1503) x1194 (not x934)) (x112 x1474) (x903 x1474))))))
(assert (= (x869 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x299 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x218 x529))
(assert (= x1194 (or x559 (and x10 (not x802)))))
(assert (= (x1083 (x869 x195)) x195))
(assert (x218 x772))
(assert (x218 x104))
(assert (x218 x1486))
(assert (x218 x857))
(assert (= (x1083 (x869 x1242)) x1242))
(assert (x648 x1015))
(assert (x648 x888))
(assert (=> (<= x936 10000) (= (x299 x936) (x869 x936))))
(assert (= (x703 x1041) (ite (and x1135 x504) (x562 x1041) (x531 x1041))))
(assert (= (x1083 (x299 468353030)) 468353030))
(assert (x648 x1463))
(assert (=> (<= x1076 10000) (= (x869 x1076) (x299 x1076))))
(assert (= (ite (and x1322 (not x497) x1002) (x563 x388) (x644 x388)) (x1154 x388)))
(assert (= (ite (= x491 x667) x770 (x512 x491)) (x1099 x491)))
(assert (= (x562 x937) (ite (= x937 x388) x586 (x1207 x937))))
(assert (= (ite (= x388 x1164) x292 (x150 x388)) (x112 x388)))
(assert (= (ite (= x491 x388) x586 (x1207 x491)) (x562 x491)))
(assert (=> (<= x300 10000) (= (x869 x300) (x299 x300))))
(assert (= (x1083 (x869 x459)) x459))
(assert (= 0 (x1162 x565)))
(assert (x218 x959))
(assert (x218 x1049))
(assert (= (x1083 (x869 x1015)) x1015))
(assert (= (x1083 (x299 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (=> (>= 10000 x843) (= (x299 x843) (x869 x843))))
(assert (x218 x1460))
(assert (= (x299 2743102681) (x869 2743102681)))
(assert (x218 x999))
(assert (x218 x403))
(assert (= (x835 x772) (ite (and (not x568) x1145 x1511 x670 x1024 x1492) (x248 x772) (ite (and x1145 x1492 (not x1511) x670 x1024) (x298 x772) (ite (and x1492 (not x670) x1145 x1024) (x38 x772) (ite (and (not x1024) x1492 x1145) (x221 x772) (x340 x772)))))))
(assert (x218 x1428))
(assert (= (ite (= x388 x534) x586 (x1207 x534)) (x562 x534)))
(assert (x218 x293))
(assert (= (x221 x1150) (ite (= x1468 x1150) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x131 x1150))))
(assert (= x1417 x1233))
(assert (x648 x129))
(assert (x862 x457 x980))
(assert (= x801 (x1083 (x869 x801))))
(assert (= (x1083 (x869 x399)) x399))
(assert (= (x869 87118632) (x299 87118632)))
(assert (= x191 (and x1531 x64)))
(assert (= x194 (and x802 x10)))
(assert (= (ite (= x1164 x1141) x292 (x150 x1141)) (x112 x1141)))
(assert (= x886 (x1083 (x869 x886))))
(assert (=> (>= 10000 x1275) (= (x299 x1275) (x869 x1275))))
(assert (= (x703 x421) (ite (and x1135 x504) (x562 x421) (x531 x421))))
(assert (= (x149 x65) (ite (and x1438 x69) (x28 x65) (ite (and x69 x994 (not x1438)) (x54 x65) (x324 x65)))))
(assert (= x351 (=> (and (>= x1297 0) (>= 1461501637330902918203684832716283019655932542975 x908) (not (< x954 2690754053)) (= x40 (x1085 (x869 x326) x319 0)) (= x319 (x1085 (x869 x908) x968 0)) (= x1297 (x89 x40)) (<= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x326) (= x1297 x22) (< 0 x575) (= (x532 (x869 274184521717934524641157099916833587206)) x575) (< x954 2960351575) (= (x1085 (x869 x1107) (x299 3) 0) x968) (= x954 2743102681) (not (= 2690754053 x954)) (not (< x954 2293535753))) (=> (and (= x320 x20) (= x1239 (<= x763 x1553)) (= x1475 x250) (= x763 x22)) x422))))
(assert (x218 x274))
(assert (= (x248 x127) (ite (= x127 x6) x222 (x298 x127))))
(assert (x648 x608))
(assert (x218 x385))
(assert (x218 x516))
(assert (=> (>= 10000 x821) (= (x299 x821) (x869 x821))))
(assert (x648 x598))
(assert (= (x562 x489) (ite (= x388 x489) x586 (x1207 x489))))
(assert (x218 x199))
(assert (= (x112 x47) (ite (= x47 x1164) x292 (x150 x47))))
(assert (= x608 (x1083 (x869 x608))))
(assert (x218 x1381))
(assert (= (and x533 x193) x709))
(assert (= (ite (= x772 x565) x107 (x45 x772)) (x467 x772)))
(assert (x218 x582))
(assert (= x1222 x379))
(assert (= (=> (and (> x176 0) (not (= 2512682246 x1514)) (= x1344 x140) (= x176 (x532 (x869 274184521717934524641157099916833587206))) (not (= x1514 2418364589)) (= x998 (x1085 (x869 x1109) (x299 4) 0)) (= x140 (x185 x371)) (<= x140 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x843 1461501637330902918203684832716283019655932542975) (= 2532887486 x1514) (not (> 2293535753 x1514)) (= (x1085 (x869 x843) x998 0) x1370) (not (= 2293535753 x1514)) (<= x180 1461501637330902918203684832716283019655932542975) (= x1421 (x1085 (x869 x180) x1370 0)) (< x1514 2960351575) (<= 0 x140) (<= x195 1461501637330902918203684832716283019655932542975) (> 2690754053 x1514) (= (x1085 (x869 x195) x1421 0) x371)) (=> (and (= x950 x202) (= x1335 (<= x1539 x746)) (= x553 x20) (= x282 x1475) (= (and x1335 x749) x1488) (= x1539 x1344)) x119)) x414))
(assert (= (x299 2418364589) (x869 2418364589)))
(assert (x218 x845))
(assert (= (ite (and x504 x1135) (x562 x772) (x531 x772)) (x703 x772)))
(assert (= (x299 649617121) (x869 649617121)))
(assert (x218 x1107))
(assert (x218 x1136))
(assert (x648 x1102))
(assert (= (=> (and (= x1475 x175) (= x20 x676)) x803) x1472))
(assert (= (ite (= x127 x1164) x292 (x150 x127)) (x112 x127)))
(assert (x648 274184521717934524641157099916833587206))
(assert (x218 x1227))
(assert (=> (>= 10000 x71) (= (x869 x71) (x299 x71))))
(assert (= (ite (= x564 x619) 0 (x1134 x619)) (x1165 x619)))
(assert (x648 x685))
(assert (= x632 (=> (= x827 0) x1476)))
(assert (x218 x1477))
(assert (= (x45 x388) (ite (= x935 x388) x1008 (x1376 x388))))
(assert (= (x51 x1041) (ite (= x1 x1041) x347 (x112 x1041))))
(assert (= (x869 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x299 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1391 x697))
(assert (= x977 x1194))
(assert (x218 x257))
(assert (x218 x827))
(assert (=> (<= x1025 10000) (= (x299 x1025) (x869 x1025))))
(assert (x218 x46))
(assert (= (x1083 (x869 x821)) x821))
(assert (x218 x270))
(assert (x648 x227))
(assert (= (x1154 x937) (ite (and x1322 x1002 (not x497)) (x563 x937) (x644 x937))))
(assert (= x114 x1004))
(assert (x648 x236))
(assert (= x751 (x1083 (x869 x751))))
(assert (= (x51 x731) (ite (= x731 x1) x347 (x112 x731))))
(assert (= x1267 (and x1096 x1094)))
(assert (= (x299 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x869 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x862 x1389 x95))
(assert (= x453 x741))
(assert (= (x567 x74) (ite (and x1438 x69) (x89 x74) (ite (and x69 (not x1438) x994) (x89 x74) (x356 x74)))))
(assert (= (x869 1461501637330902918203684832716283019655932542975) (x299 1461501637330902918203684832716283019655932542975)))
(assert (x218 x1549))
(assert (x218 x98))
(assert (= x1192 (x1083 (x869 x1192))))
(assert (x218 x205))
(assert (= x234 (x1083 (x869 x234))))
(assert (=> (<= x801 10000) (= (x869 x801) (x299 x801))))
(assert (= x901 (x1083 (x869 x901))))
(assert (= (x1099 x489) (ite (= x489 x667) x770 (x512 x489))))
(assert (= (x1162 160) 0))
(assert (= (x1083 (x299 18446744073709551615)) 18446744073709551615))
(assert (= 142201243 (x1083 (x299 142201243))))
(assert (=> (<= x431 10000) (= (x299 x431) (x869 x431))))
(assert (= (x869 635128645) (x299 635128645)))
(assert (= x875 x42))
(assert (= (ite (and x1135 x504) (x562 x127) (x531 x127)) (x703 x127)))
(assert (x218 x635))
(assert (= (x299 142201243) (x869 142201243)))
(assert (x218 x826))
(assert (x218 x1385))
(assert (=> (>= 10000 x663) (= (x869 x663) (x299 x663))))
(assert (x218 x1409))
(assert (x1391 x1389))
(assert (x218 x1179))
(assert (= (and x56 x1267) x1240))
(assert (= (x51 x203) (ite (= x203 x1) x347 (x112 x203))))
(assert (= (x1083 (x869 x1523)) x1523))
(assert (=> (>= 10000 x598) (= (x299 x598) (x869 x598))))
(assert (x218 x1127))
(assert (x218 x1445))
(assert (x218 x871))
(assert (=> (<= x888 10000) (= (x869 x888) (x299 x888))))
(assert (= (=> (= (= x750 274184521717934524641157099916833587214) x1328) (and (=> (not x1328) x287) (=> (and x1328 (not (> 4 x692)) (= 274184521717934524641157099916833587206 x174) (= (>= (+ x1550 x1515) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x969) (= x976 x197) (= 274184521717934524641157099916833587206 x912) (= x1285 (x891 1461501637330902918203684832716283019655932542975 x854)) (> x159 0) (= x197 x1550) (>= x1515 0) (= (x1085 (x869 274184521717934524641157099916833587206) (x299 1) 0) x680) (= (x532 (x869 274184521717934524641157099916833587214)) x159) (not x971) (not (< x1473 649617121)) (<= 0 x1534) (>= 1461501637330902918203684832716283019655932542975 x854) (= x188 (x891 1461501637330902918203684832716283019655932542975 x854)) (= (+ x429 x1396) x29) (= (x1085 (x869 274184521717934524641157099916833587206) (x299 1) 0) x707) (= x1108 (x286 (- x692 4))) (= x692 68) (not (= 649617121 x1473)) (= x1355 (x1085 (x869 x188) (x299 1) 0)) (= x879 x692) (not x178) (not (= x1473 1889567281)) (= x295 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x987 x689) (not (= 826074471 x1473)) (= (x286 (- x1534 x197)) x27) (<= x1534 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x874) (= (< x1534 x197) x971) (not x969) (< (+ x1515 x1550) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1515 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x1534 x1550) x178) (= x874 (or (and (= (<= x1108 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1108 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1108))) (= 32 x1073) (= x890 1) (not (= 2514000705 x1473)) (= x1550 x1396) (= (x1365 x1355) x1515) (= x1473 2835717307) (= x1515 x429) (= (x716 x707) x1534) (= x279 x854)) x615))) x1327))
(assert (= (ite (= x1150 x935) x1008 (x1376 x1150)) (x45 x1150)))
(assert (= (ite (= x667 x1150) x770 (x512 x1150)) (x1099 x1150)))
(assert (x218 x1133))
(assert (= 0 (x1162 x937)))
(assert (x218 x1506))
(assert (x218 x855))
(assert (x648 x358))
(assert (= (x299 2798343961) (x869 2798343961)))
(assert (= x393 (=> (= x300 0) x1153)))
(assert (x218 x209))
(assert (x218 x1361))
(assert (=> (>= 10000 x326) (= (x299 x326) (x869 x326))))
(assert (x218 x775))
(assert (=> (<= x472 10000) (= (x299 x472) (x869 x472))))
(assert (= (ite (and x1194 x934) (x112 x565) (ite (and (not x840) x1194 x1503 (not x934)) (x51 x565) (ite (and (not x1503) (not x934) x1194) (x112 x565) (x903 x565)))) (x1253 x565)))
(assert (x218 x246))
(assert (x648 x1082))
(assert (= (ite (= x1212 x388) x586 (x1207 x1212)) (x562 x1212)))
(assert (x648 x750))
(assert (x218 x1529))
(assert (x218 x809))
(assert (x218 x489))
(assert (x218 x784))
(assert (= x1219 (x1083 (x869 x1219))))
(assert (= (and x626 x164) x193))
(assert (x218 x285))
(assert (= (or (and x164 (not x626)) (and (not x196) x709) (and x1036 x238)) x671))
(assert (x218 x1286))
(assert (= (ite (and x683 x1194) (x1057 x1342) (x611 x1342)) (x902 x1342)))
(assert (= (ite (and x1322 (not x1026) x1002 x1485 x62 x1271) (x1548 x772) (ite (and x1322 x1485 x62 (not x1271) x1002) (x1099 x772) (ite (and x1322 x62 (not x1485) x1002) (x512 x772) (ite (and x1322 x1002 (not x62)) (x1213 x772) (x411 x772))))) (x563 x772)))
(assert (= x1409 (x1083 (x869 x1409))))
(assert (= (x112 x491) (ite (= x491 x1164) x292 (x150 x491))))
(assert (x218 x565))
(assert (x218 x268))
(assert (=> (<= x118 10000) (= (x299 x118) (x869 x118))))
(assert (= (ite (= x565 x1164) x292 (x150 x565)) (x112 x565)))
(assert (= (ite (= x565 x127) x107 (x45 x127)) (x467 x127)))
(assert (x218 x1226))
(assert (x218 x1131))
(assert (= 0 (x1162 x127)))
(assert (x218 x1468))
(assert (=> (>= 10000 x1102) (= (x869 x1102) (x299 x1102))))
(assert (x648 x155))
(assert (= (x476 x731) (ite (and x897 x1005) (x407 x731) (x462 x731))))
(assert (x218 x753))
(assert (= (x51 x489) (ite (= x1 x489) x347 (x112 x489))))
(assert (= (x703 x565) (ite (and x1135 x504) (x562 x565) (x531 x565))))
(assert (= (x1083 (x869 x1275)) x1275))
(assert (=> (>= 10000 x1551) (= (x299 x1551) (x869 x1551))))
(assert (x218 x1182))
(assert (x648 x1418))
(assert (= (ite (= x1310 x1) x347 (x112 x1310)) (x51 x1310)))
(assert (x648 x1033))
(assert (x218 x1539))
(assert (= x719 (x1083 (x869 x719))))
(assert (x218 x744))
(assert (x218 x957))
(assert (= (x1083 (x869 x285)) x285))
(assert (x218 x295))
(assert (x218 x334))
(assert (= (x51 x937) (ite (= x1 x937) x347 (x112 x937))))
(assert (x218 x791))
(assert (=> (<= x780 10000) (= (x869 x780) (x299 x780))))
(assert (x218 x781))
(assert (= (ite (= x731 x252) x893 (x1099 x731)) (x1548 x731)))
(assert (x218 x1109))
(assert (= (ite (= x388 x315) x586 (x1207 x315)) (x562 x315)))
(assert (=> (>= 10000 x234) (= (x299 x234) (x869 x234))))
(assert (= (x1083 (x869 x1127)) x1127))
(assert (x218 x1446))
(assert (x218 x761))
(assert (x218 x308))
(assert (= (x1162 x1310) 0))
(assert (= x819 (x1083 (x869 x819))))
(assert (= (x298 x127) (ite (= x1258 x127) x1278 (x38 x127))))
(assert (= (ite (and x1322 (not x497) x1002) (x563 x489) (x644 x489)) (x1154 x489)))
(assert (x648 x175))
(assert (= (=> (and (<= x553 1461501637330902918203684832716283019655932542975) (< 0 x1382) (not (> 2293535753 x160)) (not (= 2690754053 x160)) (<= x950 1461501637330902918203684832716283019655932542975) (= x1333 (x1085 (x869 x553) x383 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028) (< x160 2960351575) (not (> 2690754053 x160)) (= (x89 x500) x1028) (= x1028 x1448) (= (x532 (x869 274184521717934524641157099916833587206)) x1382) (>= x1028 0) (= x500 (x1085 (x869 x950) x1333 0)) (= 2743102681 x160) (= (x1085 (x869 x282) (x299 3) 0) x383)) (=> (and (= x442 x1025) (= x887 x1448) (= x1475 x1136) (= x20 x1209) (= x202 x236)) x1071)) x119))
(assert (= x739 (=> (= x1508 x827) x1476)))
(assert (x218 x1436))
(assert (x218 x1274))
(assert (x218 x614))
(assert (x218 x125))
(assert (= (x299 468353030) (x869 468353030)))
(assert (= x1330 (x1083 (x869 x1330))))
(assert (= (ite (= x127 x628) x1044 (x1213 x127)) (x512 x127)))
(assert (x218 x677))
(assert (= (x1083 (x869 x353)) x353))
(assert (= (x1083 (x869 x1374)) x1374))
(assert (= x1216 true))
(assert (x218 x927))
(assert (= (x562 x388) x586))
(assert (x648 x1374))
(assert (x218 x1146))
(assert (= (x1083 (x299 1889567281)) 1889567281))
(assert (x218 x55))
(assert (=> (<= x390 10000) (= (x869 x390) (x299 x390))))
(assert (=> (<= x733 10000) (= (x299 x733) (x869 x733))))
(assert (=> (>= 10000 x1192) (= (x869 x1192) (x299 x1192))))
(assert (x218 x380))
(assert (x218 x172))
(assert (x218 x25))
(assert (= (=> (and (= (x532 (x869 274184521717934524641157099916833587206)) x655) (= (x1085 (x869 x712) x757 0) x539) (<= x712 1461501637330902918203684832716283019655932542975) (= 759532456 x1304) (>= 1461501637330902918203684832716283019655932542975 x681) (< x1304 911411945) (= (x436 x272) x855) (not (< x1304 468353030)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x855) (<= 0 x855) (= x272 (x1085 (x869 x681) x539 0)) (= x757 (x1085 (x869 x1366) (x299 7) 0)) (> 2293535753 x1304) (= x818 x855) (> x655 0) (not (= 468353030 x1304)) (not (= x1304 635128645))) (=> (and (= x20 x353) (= x871 x1475) (= x818 x338) (= (<= x338 x682) x745)) x766)) x1338))
(assert (= (=> (= x1492 (< 1 x586)) (and (=> (not x1492) x1472) (=> (and (or (and (= x846 0) (not x1024)) (and x1024 (= x1274 x618) (= x1481 (x221 x421)) (= x534 x421) (= x670 (< 32 x672)) (or (and (= (x38 x937) x1278) (= (x1458 (+ x1256 96)) x1258) (= x1511 (> x672 64)) (= x937 (x1458 (+ x1103 64))) x670 (or (and (= x846 64) (not x1511)) (and (= (x1458 (+ x1103 96)) x1150) (= x568 (< 96 x672)) (= (x1458 (+ 128 x1256)) x6) (or (and (not x568) (= x846 96)) (and x568 (= x1295 (> x672 128)) (= 128 x846) (not x1295) (= (x1458 (+ 128 x1103)) x127) (= (x248 x127) x1244) (= (x1458 (+ x1256 160)) x744))) (= (x298 x1150) x222) x1511))) (and (= x846 32) (not x670))))) (= x972 (x891 26959946667150639794667015087019630673637144422540572481103610249215 x602)) (= (x1458 (+ 32 x1103)) x534) (or (not x102) (and x102 (= x246 (x1458 (+ x672 x1274))))) (= (x1458 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x972)) x205) (= (x221 x1103) x672) (= x489 (x1458 (+ 192 x1521))) (= x750 (x354 x1091)) (= (x532 (x869 x750)) x138) (= x1468 (x1458 (+ 96 x134))) (= (x1403 x388) x721) (= x976 (x1403 x489)) (= 0 x111) (= (x1458 (+ 68 x1103)) x268) (= (< 0 x672) x1024) (= x102 (< x672 x846)) (= x602 (x1339 x534)) (>= 1461501637330902918203684832716283019655932542975 x750) (> x586 1) (> x721 1) (= (x1458 (+ 64 x1477)) x1091) (= x930 (x286 (- x1256 x1103))) (= (x1458 (+ 100 x1103)) x1256) (= (x1458 (+ x1103 36)) x134) (= (x1458 (+ x134 128)) x1274) (= (> x138 0) x291) x291 x1492 (= x1311 (x286 (- x930 32)))) x418))) x622))
(assert (= (ite (= x252 x388) x893 (x1099 x388)) (x1548 x388)))
(assert (x218 x251))
(assert (= (x1162 x1041) 0))
(assert (=> (>= 10000 x1486) (= (x299 x1486) (x869 x1486))))
(assert (x218 x665))
(assert (=> (<= x901 10000) (= (x299 x901) (x869 x901))))
(assert (x218 x954))
(assert (x218 x807))
(assert (x218 x1480))
(assert (= x535 (x1083 (x869 x535))))
(assert (x218 x1104))
(assert (= (ite (and x504 x1135) (x562 x1310) (x531 x1310)) (x703 x1310)))
(assert (= x70 x432))
(assert (x218 x1372))
(assert (=> (<= x1557 10000) (= (x299 x1557) (x869 x1557))))
(assert (=> (<= x155 10000) (= (x869 x155) (x299 x155))))
(assert (= (x562 x47) (ite (= x388 x47) x586 (x1207 x47))))
(assert (x648 x886))
(assert (= (x1154 x315) (ite (and x1322 x1002 (not x497)) (x563 x315) (x644 x315))))
(assert (x218 x931))
(assert (=> (>= 10000 x1489) (= (x299 x1489) (x869 x1489))))
(assert (x218 x549))
(assert (=> (<= x231 10000) (= (x869 x231) (x299 x231))))
(assert (= (=> (and (not (< x1443 2293535753)) (= x1443 2798343961) (< x1443 2960351575) (not (= 2690754053 x1443)) (= x104 (x532 (x869 274184521717934524641157099916833587206))) (not (= 2743102681 x1443)) (= x1221 (x1085 (x869 x960) (x299 5) 0)) (not (> 2690754053 x1443)) (<= x1329 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1443 2764855426)) (> x104 0) (<= x1082 1461501637330902918203684832716283019655932542975) (= x1329 (x1057 x1359)) (= x1359 (x1085 (x869 x1082) x1221 0)) (= x36 x1329) (>= x1329 0)) (=> (and (= x908 x20) (= x1553 x36) (= x1475 x1107) (= x202 x326)) x351)) x1185))
(assert (x648 x368))
(assert (= (x1495 x974) (ite (and x1194 x683) (x1437 x974) (x914 x974))))
(assert (x218 x939))
(assert (x218 x1418))
(assert (= (x1083 (x869 x1552)) x1552))
(assert (x218 x686))
(assert (x218 x1072))
(assert (x218 x724))
(assert (= x361 x1222))
(assert (= x727 (=> (and (or (and (= (x1085 (x869 x234) x1498 0) x120) (= (x1085 (x869 x1033) x314 0) x1498) (= x314 (x1085 (x869 x997) (x299 7) 0)) (= x1063 x614) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1033) x1217) (and (= (x1458 (+ x1540 128)) x1490) (<= x915 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x313 (x1458 (+ x1540 96))) (= x1079 (x1085 (x869 x234) x96 0)) (= (< x601 x213) x1353) (= x1035 (x1085 (x869 x997) (x299 7) 0)) (<= 0 x601) (= (= x376 0) x800) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1312) (= (x1085 (x869 x997) (x299 1) 0) x704) (or (and (= 0 x376) (not x1353)) (and (= (< x208 x1381) x1246) x1353 (or (and (not x1246) (= x1381 x251)) (and (= (x986 x313) x1315) (= x251 x1315) x1246)) (or (and x572 (= x724 (x986 x614)) (= x258 (x286 (- x251 x724))) (not (> x724 x251)) (= x258 x376)) (and (= x376 x857) (= 604800 x617) (= x857 (ite (< x312 604800) x312 604800)) (not (> x601 x251)) (not x572) (= (x286 (- x251 x601)) x312))) (= (x986 x313) x208) (= (= x601 0) x572))) (>= x372 0) (= x601 (x149 x1079)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x601) (= (x986 x313) x213) (<= 0 x915) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x372) (= (x1085 (x869 x1312) x1035 0) x96) (not x1217) (or (and (= x1302 (x1085 (x869 x1275) x451 0)) (= x390 (x891 1461501637330902918203684832716283019655932542975 x540)) (not x800) (= x834 (x1085 (x869 x234) x1302 0)) (= x1490 x1063) (= x224 (x1085 (x869 x390) x581 0)) (= x451 (x1085 (x869 x997) (x299 7) 0)) (= x1546 x513) (= (* x1052 x376) x1546) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1275) (= x581 (x1085 (x869 x997) (x299 3) 0)) (< (* x376 x1052) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x518 (x1085 (x869 x234) x224 0))) (and x800 (= (x1085 (x869 x234) x634 0) x798) (= x1490 x1063) (= (x1085 (x869 x997) (x299 7) 0) x530) (= (x891 1461501637330902918203684832716283019655932542975 x540) x129) (= x634 (x1085 (x869 x129) x530 0)))) (= x372 (x88 x1518)) (= x915 (x31 x704)) (= x1518 (x1110 x704 1)))) (or x182 (and (not x182) (= x270 (x891 1461501637330902918203684832716283019655932542975 x540)))) (= x1217 (= 0 x1052)) (= (= 0 x1506) x182)) x661)))
(assert (x218 x987))
(assert (x218 x852))
(assert (x218 x471))
(assert (x218 x1414))
(assert (= x1078 (x1083 (x869 x1078))))
(assert (= x321 x1384))
(assert (x218 x1316))
(assert (x218 x1206))
(assert (x648 x245))
(assert (x218 x366))
(assert (x218 x159))
(assert (= (ite (= x491 x565) x107 (x45 x491)) (x467 x491)))
(assert (= 0 (x1162 x203)))
(assert (x218 x305))
(assert (x218 x1030))
(assert (= x1104 (x1083 (x869 x1104))))
(assert (x218 x701))
(assert (= (x1083 (x869 x458)) x458))
(assert (= x661 (=> (and (= x403 (x891 1461501637330902918203684832716283019655932542975 x540)) (= (= 0 x1208) x1558) (= x924 (x1085 (x869 x997) (x299 6) 0)) (<= x1318 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> x997 x1318)) (= x1208 (x1495 x974)) (>= x1318 0) (>= x1208 0) (<= x1208 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x974 (x1085 (x869 x403) x924 0))) (and (=> x1558 x1352) (=> (and (= (x1085 (x869 x997) (x299 10) 0) x168) (>= x1281 0) (= (x1085 (x869 x1074) x168 0) x732) (= x1281 x1377) (= x1528 0) (<= x1281 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x1558) (= x1074 (x891 1461501637330902918203684832716283019655932542975 x540)) (= x1281 (x1419 x732))) x1494)))))
(assert (= (x221 x1103) (ite (= x1468 x1103) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x131 x1103))))
(assert (= (x221 x772) (ite (= x772 x1468) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x131 x772))))
(assert (= (=> (and (= (x891 1461501637330902918203684832716283019655932542975 x540) x1330) (= (x1458 (+ 64 x1063)) x55) (= (x1495 x537) x130) (= x11 (x1085 (x869 x717) x785 0)) (= x605 (x1332 x74)) (<= 0 x130) (<= x265 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x605) (= (x891 1461501637330902918203684832716283019655932542975 x540) x717) (<= 0 x605) (or (and (= x1070 (= x130 0)) x424 (= (< x948 x1381) x728) (or (and (not x728) (= x1381 x487)) (and (= x1390 (x45 x935)) (= x487 x1390) x728)) (= x948 (x45 x935)) (or (and (= (ite (> 604800 x435) x435 604800) x1491) (not (< x487 x130)) (= x103 x1491) (not x1070) (= (x286 (- x487 x130)) x435) (= 604800 x381)) (and (= x973 (x286 (- x487 x786))) x1070 (= x103 x973) (= (x45 x1063) x786) (not (> x786 x487))))) (and (not x424) (= x103 0))) (= x1415 (= 0 x1528)) (= x796 (x31 x570)) (= x317 (x1085 (x869 x997) (x299 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x796) (>= x265 0) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1523) (= (x1085 (x869 x1330) x317 0) x537) (<= 0 x796) (= x570 (x1085 (x869 x997) (x299 1) 0)) (= (x1085 (x869 x997) (x299 3) 0) x378) (= (= x605 0) x669) (= x275 (= 0 x103)) (= x424 (< x130 x677)) (= x1008 (x88 x1112)) (or (and (= (x891 1461501637330902918203684832716283019655932542975 x540) x775) (not x1415)) x1415) (= (x45 x935) x677) (or (and (= (x1085 (x869 x780) x254 0) x1432) (= x1467 x169) (= x864 (x1085 (x869 x245) x215 0)) (= (* x103 x1377) x169) (= x780 (x891 1461501637330902918203684832716283019655932542975 x540)) (not x275) (= (x891 1461501637330902918203684832716283019655932542975 x540) x245) (= (x1085 (x869 x997) (x299 5) 0) x254) (= (x1085 (x869 x997) (x299 6) 0) x215) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1377 x103))) (and x275 (= x1237 (x1085 (x869 x997) (x299 6) 0)) (= (x891 1461501637330902918203684832716283019655932542975 x540) x819) (= x889 (x1085 (x869 x819) x1237 0)))) (= (x1085 (x869 x997) (x299 5) 0) x785) (= x1112 (x1110 x570 1)) (= x935 (x1458 (+ x1063 32))) (<= x1008 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1085 (x869 x234) x1500 0) x74) (< x1009 x21) (= x265 (x328 x11)) (<= 0 x1008) (<= x130 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x55 x829) (or (and (= x400 (x1458 (+ x997 1))) (= x21 x400) x669) (and (not x669) (= 1 x510) (= (x1458 (+ x997 1)) x1317) (= (mod (* 1000000000000000000 x605) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1462) (= x1369 (div x1462 x265)) (= (> x586 0) x1037) (= x1512 (ite (> x605 115792089237316195423570985008687907853269984665640564039457) 1 0)) (or (not x1037) (and (= x1364 (x1085 (x869 x997) (x299 4) 0)) (= x616 x642) (= x1374 (x891 1461501637330902918203684832716283019655932542975 x540)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x616 x1351)) x1037 (> x713 0) (= (x1085 (x869 x234) x876 0) x362) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1369 x5)) (= x470 (< 1 x586)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5) (<= x936 1461501637330902918203684832716283019655932542975) (= x1351 x630) (= (* x5 x1369) x580) (or (and (= x99 (x467 x388)) (= x466 x1000) (= x700 (x1085 (x869 x1321) x996 0)) (= (x1085 (x869 x1120) x975 0) x996) (= (x1085 (x869 x234) x988 0) x944) (< (+ x832 x466) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1458 (+ x1521 192)) x1041) (= x975 (x1085 (x869 x997) (x299 11) 0)) (= x1321 (x354 x1245)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1369 x582)) (= (div x793 1000000000000000000) x832) (not x673) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1120) (= (x1085 (x869 x598) x419 0) x988) (<= 0 x281) (= (< 2 x586) x673) (= x598 (x891 1461501637330902918203684832716283019655932542975 x540)) (= x1040 (x1085 (x869 x1486) x944 0)) x470 (= x1245 (x1458 (+ 64 x1477))) (= (x467 x1041) x466) (< 1 x99) (= x582 (x1060 x700)) (< 1 x586) (<= x281 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x582 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1085 (x869 x997) (x299 4) 0) x419) (<= x1486 1461501637330902918203684832716283019655932542975) (= 0 x281) (= x687 x832) (>= x582 0) (< 1 x586) (= (+ x1000 x687) x385) (= x793 (* x1369 x582)) (= (x185 x1040) x281) (= (x354 x1245) x1486) (>= 1461501637330902918203684832716283019655932542975 x1321)) (not x470)) (= x1497 (x354 x261)) (= x107 (+ x642 x630)) (= x1203 (x1085 (x869 x1102) x83 0)) (= x616 (x45 x565)) (= (x1085 (x869 x1497) x362 0) x851) (< 0 x586) (= (x1458 (+ x1521 160)) x565) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x826) (= (div x580 1000000000000000000) x1351) (= x83 (x1085 (x869 x997) (x299 11) 0)) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1102) (<= 0 x5) (> x586 0) (= x5 (x1060 x1001)) (= (x185 x851) x826) (= (x1085 (x869 x936) x1203 0) x1001) (= (x354 x261) x936) (>= x826 0) (>= 1461501637330902918203684832716283019655932542975 x1497) (= x876 (x1085 (x869 x1374) x1364 0)) (= (x45 x388) x713) (= x826 0) (= x906 x261))) (= x1456 0) (= (x891 x510 x1512) x1456) (= x1317 x21) (< 0 x265))) (= (x1085 (x869 x1523) x378 0) x1500)) x12) x1494))
(assert (= (ite (= x127 x1166) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x127)) (x1213 x127)))
(assert (x648 x593))
(assert (x648 x1068))
(assert (x218 x111))
(assert (x218 x1530))
(assert (=> (>= 10000 x368) (= (x869 x368) (x299 x368))))
(assert (x218 x258))
(assert (x218 x1073))
(assert (=> (<= x1262 10000) (= (x299 x1262) (x869 x1262))))
(assert (x218 x1129))
(assert (= x1394 x1452))
(assert (= (x512 x937) (ite (= x937 x628) x1044 (x1213 x937))))
(assert (= (x299 2514000705) (x869 2514000705)))
(assert (= 2532887486 (x1083 (x299 2532887486))))
(assert (= (x562 x1150) (ite (= x1150 x388) x586 (x1207 x1150))))
(assert (x218 x1441))
(assert (x218 x685))
(assert (= (ite (= x6 x731) x222 (x298 x731)) (x248 x731)))
(assert (= x426 (x1083 (x869 x426))))
(assert (= x908 (x1083 (x869 x908))))
(assert (x218 x865))
(assert (= x1179 (x1083 (x869 x1179))))
(assert (= (ite (= x937 x618) x1481 (x221 x937)) (x38 x937)))
(assert (x218 x413))
(assert (= x1343 (or (and (not x958) x797) (and x1422 (not x623)))))
(assert (=> (<= x590 10000) (= (x869 x590) (x299 x590))))
(assert (= (x112 x772) (ite (= x1164 x772) x292 (x150 x772))))
(assert (x218 x880))
(assert (= (x1083 (x869 x1262)) x1262))
(assert (= (x512 x421) (ite (= x421 x628) x1044 (x1213 x421))))
(assert (x218 x593))
(assert (= (x1083 (x869 x472)) x472))
(assert (= x1039 (or x211 (and (not x1558) x1233))))
(assert (= x636 (=> (and (> 911411945 x352) (> x430 0) (< x352 2293535753) (= (x532 (x869 274184521717934524641157099916833587206)) x430) (> 468353030 x352) (= (x1085 (x869 x1251) x1280 0) x1043) (<= x1251 1461501637330902918203684832716283019655932542975) (>= x660 0) (<= x1219 1461501637330902918203684832716283019655932542975) (= (x1204 x808) x660) (not (= x352 69947311)) (not (= 87118632 x352)) (= x1280 (x1085 (x869 x155) (x299 9) 0)) (= x808 (x1085 (x869 x1219) x1043 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x660) (= x352 142201243) (= x1191 x660)) (=> (and (= x20 x685) (= x431 x202) (= (<= x1517 x1186) x1465) (= x1517 x1191) (= (and x1465 x1239) x933) (= x1475 x118)) x454))))
(assert (x648 x1078))
(assert (x648 x195))
(assert (x218 x997))
(assert (= (=> (and (= x533 (= 0 x343)) (= (x891 1461501637330902918203684832716283019655932542975 x540) x67) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x343) (= (x1085 (x869 x67) x1300 0) x1093) (= (x1085 (x869 x234) x1093 0) x737) (= (x1085 (x869 x799) (x299 7) 0) x1300) (= x343 (x548 x737)) (<= 0 x343)) (and (=> (and (not x533) (= x799 x1508)) x739) (=> x533 x1533))) x502))
(assert (= (x51 x1141) (ite (= x1 x1141) x347 (x112 x1141))))
(assert true)
(assert (x218 x331))
(assert (= (x1548 x1150) (ite (= x1150 x252) x893 (x1099 x1150))))
(assert (= (ite (= x315 x1164) x292 (x150 x315)) (x112 x315)))
(assert (= (ite (= x1 x1474) x347 (x112 x1474)) (x51 x1474)))
(assert (= (ite (and (not x497) x1002 x1322) (x563 x534) (x644 x534)) (x1154 x534)))
(assert (x218 x886))
(assert (x218 x913))
(assert (x218 x1443))
(assert (= (x1083 (x299 2258409472)) 2258409472))
(assert (x218 x1277))
(assert (x1391 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x218 x250))
(assert (=> (<= x908 10000) (= (x299 x908) (x869 x908))))
(assert (x218 x1463))
(assert (= (ite (= x1 x127) x347 (x112 x127)) (x51 x127)))
(assert (x218 x312))
(assert (x648 x730))
(assert (x648 x1262))
(assert (x218 x1489))
(assert (=> (<= x459 10000) (= (x869 x459) (x299 x459))))
(assert (x218 x1429))
(assert (= (x1083 (x869 x635)) x635))
(assert (= (x1253 x1310) (ite (and x934 x1194) (x112 x1310) (ite (and (not x934) (not x840) x1194 x1503) (x51 x1310) (ite (and (not x1503) x1194 (not x934)) (x112 x1310) (x903 x1310))))))
(assert (= x180 (x1083 (x869 x180))))
(assert (= (x1548 x534) (ite (= x534 x252) x893 (x1099 x534))))
(assert (x218 x591))
(assert (x218 x447))
(assert (=> (<= x129 10000) (= (x299 x129) (x869 x129))))
(assert (= (x1154 x127) (ite (and (not x497) x1322 x1002) (x563 x127) (x644 x127))))
(assert (= x595 (x1083 (x869 x595))))
(assert (= x1048 (x1083 (x869 x1048))))
(assert (= x1463 (x1083 (x869 x1463))))
(assert (= (ite (and x934 x1194) (x112 x1212) (ite (and (not x840) (not x934) x1194 x1503) (x51 x1212) (ite (and (not x1503) (not x934) x1194) (x112 x1212) (x903 x1212)))) (x1253 x1212)))
(assert (x218 x1318))
(assert (x218 x281))
(assert (= (x45 x565) (ite (= x565 x935) x1008 (x1376 x565))))
(assert (=> (<= x685 10000) (= (x869 x685) (x299 x685))))
(assert (x218 x484))
(assert (= (ite (and x934 x1194) (x112 x491) (ite (and x1503 x1194 (not x840) (not x934)) (x51 x491) (ite (and (not x1503) x1194 (not x934)) (x112 x491) (x903 x491)))) (x1253 x491)))
(assert (x218 x442))
(assert (=> (<= x245 10000) (= (x869 x245) (x299 x245))))
(assert (= (x1162 x315) 0))
(assert (x218 x1311))
(assert (= x321 x1097))
(assert (= x878 (x1083 (x869 x878))))
(assert (x218 x734))
(assert (x218 x153))
(assert (= x71 (x1083 (x869 x71))))
(assert (= (ite (= x315 x1166) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x315)) (x1213 x315)))
(assert (= (ite (and x1485 x1271 (not x1026) x1002 x62 x1322) (x1548 x421) (ite (and x1485 x1322 x62 x1002 (not x1271)) (x1099 x421) (ite (and (not x1485) x1002 x1322 x62) (x512 x421) (ite (and (not x62) x1322 x1002) (x1213 x421) (x411 x421))))) (x563 x421)))
(assert (= (ite (= x127 x935) x1008 (x1376 x127)) (x45 x127)))
(assert (= (x38 x1150) (ite (= x1150 x618) x1481 (x221 x1150))))
(assert (= (x45 x1041) (ite (= x935 x1041) x1008 (x1376 x1041))))
(assert (x218 x960))
(assert (= (x1083 (x869 x685)) x685))
(assert (x218 x1362))
(assert (= (x1083 (x869 x871)) x871))
(assert (= (x1548 x937) (ite (= x937 x252) x893 (x1099 x937))))
(assert (x218 x682))
(assert (x218 x778))
(assert (x648 x447))
(assert (= (ite (= x667 x421) x770 (x512 x421)) (x1099 x421)))
(assert (x218 x1118))
(assert (x218 x1068))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1083 (x299 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (x218 x1390))
(assert (x218 x1366))
(assert (= (x1083 (x869 x300)) x300))
(assert (x218 x352))
(assert (x218 x1205))
(assert (= (ite (= x388 x1) x586 (x1207 x1)) (x562 x1)))
(assert (= (and x897 (not x1005)) x696))
(assert (x218 x122))
(assert (=> (>= 10000 x320) (= (x299 x320) (x869 x320))))
(assert (=> (>= 10000 x635) (= (x869 x635) (x299 x635))))
(assert (x218 x1444))
(assert (x218 x952))
(assert (x218 x838))
(assert (x218 x628))
(assert (x218 x901))
(assert (x648 x1241))
(assert (x218 x175))
(assert (x218 x1346))
(assert (x218 x1200))
(assert (x218 x1186))
(assert (x218 x541))
(assert (x862 x1413 x748))
(assert (=> (>= 10000 x282) (= (x869 x282) (x299 x282))))
(assert (= x379 x875))
(assert (x218 x72))
(assert (= (x1548 x315) (ite (= x252 x315) x893 (x1099 x315))))
(assert (=> (>= 10000 x1048) (= (x299 x1048) (x869 x1048))))
(assert (=> (>= 10000 x750) (= (x299 x750) (x869 x750))))
(assert (x218 x935))
(assert (x218 x234))
(assert (x218 x750))
(assert (x218 x1176))
(assert (x218 x658))
(assert (= (ite (= x667 x203) x770 (x512 x203)) (x1099 x203)))
(assert (x648 x285))
(assert (x218 x1076))
(assert (x218 x1169))
(assert (x218 x872))
(assert (x218 x672))
(assert (= (x1253 x731) (ite (and x1194 x934) (x112 x731) (ite (and x1194 (not x934) (not x840) x1503) (x51 x731) (ite (and x1194 (not x934) (not x1503)) (x112 x731) (x903 x731))))))
(assert (x218 x605))
(assert (x218 x1552))
(assert (x218 x1534))
(assert (x218 x1448))
(assert (= (ite (= x1166 x491) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x491)) (x1213 x491)))
(assert (= (ite (= x1474 x935) x1008 (x1376 x1474)) (x45 x1474)))
(assert (x218 x208))
(assert (x218 x780))
(assert (x218 x386))
(assert (= (x299 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x869 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x431 (x1083 (x869 x431))))
(assert (x218 x1340))
(assert (=> (>= 10000 x353) (= (x869 x353) (x299 x353))))
(assert (x218 x1166))
(assert (= (x576 x1150) (ite (and x574 x35) (x1184 x1150) (x1075 x1150))))
(assert (x218 x357))
(assert (x218 x87))
(assert (x648 x105))
(assert (= x1510 x243))
(assert (= x117 (or x671 x1148)))
(assert (= x432 x276))
(assert (x648 x1022))
(assert (= (x567 x729) (ite (and x69 x1438) (x89 x729) (ite (and x69 (not x1438) x994) (x89 x729) (x356 x729)))))
(assert (x218 x283))
(assert (=> (>= 10000 x595) (= (x299 x595) (x869 x595))))
(assert (x218 x1523))
(assert (x218 x722))
(assert (x218 x613))
(assert (x648 x859))
(assert (x648 x712))
(assert (= (and x623 x1422) x779))
(assert (x218 x245))
(assert (x218 x507))
(assert (= (ite (= x667 x731) x770 (x512 x731)) (x1099 x731)))
(assert (= (x299 759532456) (x869 759532456)))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x624) (= x1179 (x891 1461501637330902918203684832716283019655932542975 x540)) (= x624 (x483 x519)) (<= 0 x624) (= (x1085 (x869 x799) (x299 6) 0) x1331) (<= x1318 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x1318 x1010)) (>= x1318 0) (= (= x624 0) x802) (= (x1085 (x869 x1179) x1331 0) x519)) (and (=> x802 x812) (=> (and (= x592 x523) (= x663 (x891 1461501637330902918203684832716283019655932542975 x540)) (<= x592 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x802) (= x592 (x1159 x387)) (= x866 (x1085 (x869 x799) (x299 10) 0)) (= (x1085 (x869 x663) x866 0) x387) (= 0 x1412) (<= 0 x592)) x610))) x1524))
(assert (x648 x652))
(assert (x218 x887))
(assert (x218 x1013))
(assert (x218 x1431))
(assert (= x76 (or (and x66 x288) x1039 (and x977 x918))))
(assert (x218 x36))
(assert (x218 x304))
(assert (x218 x5))
(assert (= (x703 x315) (ite (and x1135 x504) (x562 x315) (x531 x315))))
(assert (x218 x1245))
(assert (= (ite (= x1164 x937) x292 (x150 x937)) (x112 x937)))
(assert (x218 x842))
(assert (x218 x1491))
(assert (x218 x1312))
(assert (= (ite (= x388 x667) x770 (x512 x388)) (x1099 x388)))
(assert (x218 x1074))
(assert (x1391 x1512))
(assert (x218 x381))
(assert (= (x1083 (x869 x250)) x250))
(assert (x218 x140))
(assert (= (x149 x272) (ite (and x69 x1438) (x28 x272) (ite (and (not x1438) x69 x994) (x54 x272) (x324 x272)))))
(assert (= 0 (x1162 x1053)))
(assert (= (x45 x315) (ite (= x935 x315) x1008 (x1376 x315))))
(assert (x648 x180))
(assert (=> (>= 10000 x553) (= (x299 x553) (x869 x553))))
(assert (= x695 (and x977 (not x918))))
(assert (= (or (and (not x752) x1240) (and (not x1096) x1094)) x1397))
(assert (=> (>= 10000 x719) (= (x869 x719) (x299 x719))))
(assert (x218 x1284))
(assert (= (x1548 x489) (ite (= x489 x252) x893 (x1099 x489))))
(assert (x218 x776))
(assert (x218 x1360))
(assert (x218 x590))
(assert (= (x1253 x1041) (ite (and x934 x1194) (x112 x1041) (ite (and x1194 (not x934) x1503 (not x840)) (x51 x1041) (ite (and (not x1503) (not x934) x1194) (x112 x1041) (x903 x1041))))))
(assert (x648 x997))
(assert (= (ite (and x1194 x683) (x1437 x537) (x914 x537)) (x1495 x537)))
(assert (= (ite (= x565 x388) x586 (x1207 x565)) (x562 x565)))
(assert (x218 x440))
(assert (x218 x75))
(assert (= 2960351575 (x1083 (x299 2960351575))))
(assert (x218 x937))
(assert (=> (<= x345 10000) (= (x869 x345) (x299 x345))))
(assert (=> (>= 10000 x871) (= (x869 x871) (x299 x871))))
(assert (x648 x801))
(assert (= (x1083 (x869 x1293)) x1293))
(assert (= x574 (and x1322 x1002)))
(assert (=> (>= 10000 x896) (= (x869 x896) (x299 x896))))
(assert (x648 x282))
(assert (= (x869 911411945) (x299 911411945)))
(assert (x218 x1019))
(assert (x218 x1212))
(assert (= x1352 (=> (= x398 (< 0 x997)) (and (=> (not x398) x966) (=> x398 x1042)))))
(assert (= (x299 1000000000000000000) (x869 1000000000000000000)))
(assert (= x87 (x1083 (x869 x87))))
(assert (=> (<= x717 10000) (= (x869 x717) (x299 x717))))
(assert (x218 x303))
(assert (x218 x598))
(assert (= (+ 1 (x1083 x704)) (x1083 (x1110 x704 1))))
(assert (= (x1083 (x869 x1068)) x1068))
(assert (x648 x541))
(assert (= x940 (and x696 (not x1328))))
(assert (x218 x592))
(assert (x218 x1103))
(assert (x218 x420))
(assert (x218 x1266))
(assert (x218 x922))
(assert (= x1384 x1092))
(assert (x218 x364))
(assert (= (x1162 x1212) 0))
(assert (x648 x1464))
(assert (x218 x99))
(assert (x648 x106))
(assert (x218 x1262))
(assert (= (ite (and x934 x1194) (x112 x937) (ite (and x1503 (not x934) (not x840) x1194) (x51 x937) (ite (and (not x934) (not x1503) x1194) (x112 x937) (x903 x937)))) (x1253 x937)))
(assert (= (x112 x1164) x292))
(assert (= x827 (x1083 (x869 x827))))
(assert (x218 x60))
(assert (x218 x67))
(assert (x218 x472))
(assert (x218 x510))
(assert (x1391 x860))
(assert (= (x1083 (x869 x1308)) x1308))
(assert (x218 x1082))
(assert (=> (<= x106 10000) (= (x869 x106) (x299 x106))))
(assert (x648 x595))
(assert (x1391 x457))
(assert (= x1109 (x1083 (x869 x1109))))
(assert (= (ite (= x829 x1166) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x829)) (x1213 x829)))
(assert (=> (>= 10000 x236) (= (x299 x236) (x869 x236))))
(assert (= (x299 604800) (x869 604800)))
(assert (x862 x201 x204))
(assert (= x255 (=> (and (= (x532 (x869 274184521717934524641157099916833587206)) x331) (= 2798343961 x587) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1535) (< 0 x331) (= x1535 x699) (= (x1085 (x869 x399) x1326 0) x68) (= (x1057 x68) x1535) (= x1326 (x1085 (x869 x1104) (x299 5) 0)) (not (= x587 2690754053)) (not (= x587 2764855426)) (>= x1535 0) (<= x399 1461501637330902918203684832716283019655932542975) (not (> 2690754053 x587)) (> 2960351575 x587) (not (= x587 2743102681)) (not (> 2293535753 x587))) (=> (and (= x195 x442) (= x1109 x1475) (= x843 x20) (= x202 x180) (= x746 x699)) x414))))
(assert (x218 x1330))
(assert (=> (>= 10000 x799) (= (x869 x799) (x299 x799))))
(assert (= x1547 (=> (= x1176 x300) x1153)))
(assert (= (x1083 (x869 x997)) x997))
(assert (x218 x1241))
(assert (x1391 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1391 x510))
(assert (= x231 (x1083 (x869 x231))))
(assert (x648 x1127))
(assert (x218 x282))
(assert (x218 x154))
(assert (= (x467 x1141) (ite (= x565 x1141) x107 (x45 x1141))))
(assert (=> (<= x358 10000) (= (x869 x358) (x299 x358))))
(assert (= (x1083 (x869 x227)) x227))
(assert (= (and x194 x1173) x1422))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1083 (x299 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (=> (>= 10000 x712) (= (x869 x712) (x299 x712))))
(assert (= x1187 (=> (= 0 x801) x754)))
(assert (x218 x1535))
(assert (= x361 x453))
(assert (= (x1083 (x869 x781)) x781))
(assert (=> (>= 10000 x184) (= (x299 x184) (x869 x184))))
(assert (x218 x213))
(assert (x648 x878))
(assert (x218 x1147))
(assert (= x784 (x1083 (x869 x784))))
(assert (= (ite (and x1194 x934) (x112 x1053) (ite (and (not x840) (not x934) x1194 x1503) (x51 x1053) (ite (and (not x1503) (not x934) x1194) (x112 x1053) (x903 x1053)))) (x1253 x1053)))
(assert (x218 x477))
(assert (=> (>= 10000 x878) (= (x869 x878) (x299 x878))))
(assert (x648 x1552))
(assert (= x327 (or x179 x824)))
(assert (=> (>= 10000 x1074) (= (x299 x1074) (x869 x1074))))
(assert (x218 x799))
(assert (x218 x20))
(assert (= x1004 x741))
(assert (=> (<= x629 10000) (= (x869 x629) (x299 x629))))
(assert (x218 x888))
(assert (= (x562 x772) (ite (= x772 x388) x586 (x1207 x772))))
(assert (x218 x689))
(assert (= x16 (=> (and (= (= x1076 0) x177) (or (and x177 (= 0 x1377) (= x1528 0)) (and (= (x1419 x1502) x1325) (= x271 (x1085 (x869 x1076) (x299 10) 0)) (<= 0 x1325) (= x1502 (x1085 (x869 x459) x271 0)) (= x1012 (= x1325 0)) (or (and (= x1377 x1325) (= 1 x1528) (not x1012)) (and (= 0 x1377) (= 0 x1528) x1012)) (= x459 (x891 1461501637330902918203684832716283019655932542975 x540)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1325) (not x177)))) x1494)))
(assert (x218 x818))
(assert (x648 x1171))
(assert (x218 x202))
(assert (x218 x170))
(assert (x218 x1201))
(assert (= (x902 x1090) (ite (and x1194 x683) (x1057 x1090) (x611 x1090))))
(assert (x218 x358))
(assert (= (x1083 (x299 2211524764)) 2211524764))
(assert (= (x1083 (x299 604800)) 604800))
(assert (x218 x1143))
(assert (=> (>= 10000 x1366) (= (x299 x1366) (x869 x1366))))
(assert (x218 x1545))
(assert (=> (>= 10000 x1293) (= (x869 x1293) (x299 x1293))))
(assert (x218 x1298))
(assert (x218 x932))
(assert (x218 x300))
(assert (=> (<= x1033 10000) (= (x869 x1033) (x299 x1033))))
(assert (x218 x643))
(assert (= 2764855426 (x1083 (x299 2764855426))))
(assert (= x69 x10))
(assert (x218 x1526))
(assert (= x776 (x1083 (x869 x776))))
(assert (x218 x1141))
(assert (x218 x1038))
(assert (= x1418 (x1083 (x869 x1418))))
(assert (x648 x1409))
(assert (= (x869 2258409472) (x299 2258409472)))
(assert (x218 x794))
(assert (= (x869 274184521717934524641157099916833587206) (x299 274184521717934524641157099916833587206)))
(assert (= (x299 1986467848) (x869 1986467848)))
(assert (= (=> (and (= (x891 1461501637330902918203684832716283019655932542975 x540) x304) (= (= x46 0) x359) (= x607 (x1085 (x869 x997) (x299 7) 0)) (>= x46 0) (= x65 (x1085 (x869 x234) x1157 0)) (= (x1085 (x869 x304) x607 0) x1157) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x46) (= x46 (x149 x65))) (and (=> x359 x1296) (=> (and (= x438 x997) (not x359)) x508))) x110))
(assert (= x42 x276))
(assert (x218 x825))
(assert (x218 x1011))
(assert (= x589 (=> (and (= (x1085 (x869 x234) x588 0) x963) (= x1224 (x1085 (x869 x997) (x299 7) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1318) (<= 0 x1318) (= x486 (< 0 x382)) (>= x382 0) (= x588 (x1085 (x869 x652) x1224 0)) (not (> x997 x1318)) (= (x891 1461501637330902918203684832716283019655932542975 x540) x652) (<= x382 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x382 (x149 x963))) (and (=> (and (= 0 x1506) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1192) x486 (= x1379 (x1085 (x869 x234) x80 0)) (= x1529 (x439 x1379)) (<= 0 x1529) (= x1052 x1529) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529) (= x80 (x1085 (x869 x1192) x34 0)) (= (x1085 (x869 x997) (x299 9) 0) x34)) x727) (=> (not x486) x249)))))
(assert (=> (>= 10000 x751) (= (x299 x751) (x869 x751))))
(assert (x218 x608))
(assert (x218 x553))
(assert (x218 x184))
(assert (= (ite (= x628 x388) x1044 (x1213 x388)) (x512 x388)))
(assert (= (x299 2690754053) (x869 2690754053)))
(assert (= x652 (x1083 (x869 x652))))
(assert (= (ite (and x35 x574) (x1184 x491) (x1075 x491)) (x576 x491)))
(assert (x218 x616))
(assert (= (ite (and x1135 x504) (x562 x203) (x531 x203)) (x703 x203)))
(assert (x648 x960))
(assert (x218 x260))
(assert (x218 x1033))
(assert (x862 x854 x284))
(assert (x218 x1259))
(assert (x218 x1423))
(assert (x218 x629))
(assert (= (ite (and x574 x35) (x1184 x388) (x1075 x388)) (x576 x388)))
(assert (= (x512 x1310) (ite (= x1310 x628) x1044 (x1213 x1310))))
(assert (= (ite (= x628 x491) x1044 (x1213 x491)) (x512 x491)))
(assert (x1391 x404))
(assert (= (x299 69947311) (x869 69947311)))
(assert (x218 x712))
(assert (x218 x313))
(assert (= (x1083 (x869 x730)) x730))
(assert (x648 x1312))
(assert (= (ite (= x203 x628) x1044 (x1213 x203)) (x512 x203)))
(assert (= x559 (or x1343 x1138)))
(assert (x648 x353))
(assert (x648 x60))
(assert (= (x1083 (x299 911411945)) 911411945))
(assert (=> (<= x819 10000) (= (x869 x819) (x299 x819))))
(assert (=> (>= 10000 x308) (= (x869 x308) (x299 x308))))
(assert (= 2798343961 (x1083 (x299 2798343961))))
(assert (= (x467 x1041) (ite (= x1041 x565) x107 (x45 x1041))))
(assert (x218 x1235))
(assert (x218 x961))
(assert (x218 x860))
(assert (= (x1083 (x869 x105)) x105))
(assert (= (x1083 (x869 x1076)) x1076))
(assert (= (x1083 (x869 x1107)) x1107))
(assert (= (x1083 (x869 x1171)) x1171))
(assert (= (ite (= x388 x1041) x586 (x1207 x1041)) (x562 x1041)))
(assert (= (x703 x731) (ite (and x1135 x504) (x562 x731) (x531 x731))))
(assert (x218 x1490))
(assert (= (x1083 (x869 x1241)) x1241))
(assert (x218 x1481))
(assert (x648 x311))
(assert (=> (>= 10000 x1241) (= (x299 x1241) (x869 x1241))))
(assert (= (x1083 (x869 x245)) x245))
(assert (x218 x637))
(assert (= (ite (= x388 x421) x586 (x1207 x421)) (x562 x421)))
(assert (= (x512 x731) (ite (= x628 x731) x1044 (x1213 x731))))
(assert (= (x1083 (x869 x686)) x686))
(assert (x218 x547))
(assert (x218 x1380))
(assert (x218 x823))
(assert (x218 x625))
(assert (x218 x373))
(assert (x218 x392))
(assert (x218 x985))
(assert (x218 x534))
(assert (x218 x577))
(assert (x218 x1063))
(assert (= (ite (and (not x1026) x1485 x62 x1002 x1271 x1322) (x1548 x937) (ite (and x62 x1485 x1002 x1322 (not x1271)) (x1099 x937) (ite (and x62 x1002 (not x1485) x1322) (x512 x937) (ite (and (not x62) x1002 x1322) (x1213 x937) (x411 x937))))) (x563 x937)))
(assert (=> (>= 10000 x1015) (= (x869 x1015) (x299 x1015))))
(assert (= (ite (= x534 x1) x347 (x112 x534)) (x51 x534)))
(assert (x218 x631))
(assert (x218 x1150))
(assert (x218 x1482))
(assert (x218 x146))
(assert (x218 x731))
(assert (= (x1495 x350) (ite (and x683 x1194) (x1437 x350) (x914 x350))))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x1083 (x299 115792089237316195423570985008687907853269984665640564039457))))
(assert (= (ite (= x203 x1164) x292 (x150 x203)) (x112 x203)))
(assert (= (x1083 (x869 x308)) x308))
(assert (x218 x859))
(assert (= x106 (x1083 (x869 x106))))
(assert (x648 x819))
(assert (x218 x1232))
(assert (=> (<= x1497 10000) (= (x869 x1497) (x299 x1497))))
(assert (x218 x1290))
(assert (x218 x445))
(assert (x218 x1281))
(assert (x218 x1519))
(assert (= (x1253 x489) (ite (and x934 x1194) (x112 x489) (ite (and (not x934) x1503 x1194 (not x840)) (x51 x489) (ite (and (not x1503) (not x934) x1194) (x112 x489) (x903 x489))))))
(assert (= (x1162 x1) 0))
(assert (= (x902 x844) (ite (and x683 x1194) (x1057 x844) (x611 x844))))
(assert (= (x112 x731) (ite (= x731 x1164) x292 (x150 x731))))
(assert (x218 x786))
(assert (=> (>= 10000 x87) (= (x869 x87) (x299 x87))))
(assert (x218 x681))
(assert (x218 x1387))
(assert (=> (>= 10000 x686) (= (x869 x686) (x299 x686))))
(assert (x218 x399))
(assert (= (ite (= x1164 x1041) x292 (x150 x1041)) (x112 x1041)))
(assert (x648 x780))
(assert (= (x576 x315) (ite (and x574 x35) (x1184 x315) (x1075 x315))))
(assert (= x403 (x1083 (x869 x403))))
(assert (x218 x1321))
(assert (= (and (not x35) x574) x91))
(assert (= (ite (= x667 x937) x770 (x512 x937)) (x1099 x937)))
(assert (=> (<= x886 10000) (= (x869 x886) (x299 x886))))
(assert (= (x1083 (x299 635128645)) 635128645))
(assert (= (ite (and x934 x1194) (x112 x315) (ite (and x1194 x1503 (not x840) (not x934)) (x51 x315) (ite (and (not x1503) (not x934) x1194) (x112 x315) (x903 x315)))) (x1253 x315)))
(assert (= (x112 x1053) (ite (= x1164 x1053) x292 (x150 x1053))))
(assert (= (ite (= x935 x489) x1008 (x1376 x489)) (x45 x489)))
(assert (x218 x463))
(assert (x218 x831))
(assert (x218 x426))
(assert (x218 x402))
(assert (= (x512 x534) (ite (= x628 x534) x1044 (x1213 x534))))
(assert (= (x112 x1540) (ite (= x1540 x1164) x292 (x150 x1540))))
(assert (x648 x1293))
(assert (= (x1083 (x869 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x218 x431))
(assert (= (x467 x1150) (ite (= x565 x1150) x107 (x45 x1150))))
(assert (= (x1548 x491) (ite (= x491 x252) x893 (x1099 x491))))
(assert (= (x1134 x729) (ite (and x977 x918) (x567 x729) (ite (and x288 x66) (x89 x729) (x1332 x729)))))
(assert (x218 x973))
(assert (= (x703 x1141) (ite (and x504 x1135) (x562 x1141) (x531 x1141))))
(assert (x218 x743))
(assert (x1391 x854))
(assert (x306 x510 x1512))
(assert (x218 x1168))
(assert (x218 x1027))
(assert (= (x1083 (x869 x1074)) x1074))
(assert (= (x1154 x491) (ite (and x1002 (not x497) x1322) (x563 x491) (x644 x491))))
(assert (x218 x1231))
(assert (x218 x638))
(assert (x218 x118))
(assert (x218 x573))
(assert (= x1464 (x1083 (x869 x1464))))
(assert (= (x1083 (x869 x1120)) x1120))
(assert (= x238 (and x196 x709)))
(assert (=> (<= x1360 10000) (= (x869 x1360) (x299 x1360))))
(assert (x218 x697))
(assert (x218 x1045))
(assert (x218 x155))
(assert (x218 x1009))
(assert (= 0 (x1162 x731)))
(assert (x218 x919))
(assert (x218 x1337))
(assert (x218 x368))
(assert (= (x1083 (x869 x129)) x129))
(assert (x218 x449))
(assert (= (ite (and x1135 x504) (x562 x491) (x531 x491)) (x703 x491)))
(assert (= (x562 x1053) (ite (= x1053 x388) x586 (x1207 x1053))))
(assert (= (x1548 x1053) (ite (= x252 x1053) x893 (x1099 x1053))))
(assert (x218 x617))
(assert (x218 x1377))
(assert (= (x45 x1212) (ite (= x1212 x935) x1008 (x1376 x1212))))
(assert (= (x1162 224) 0))
(assert (x218 x1411))
(assert (= (ite (and x1194 x934) (x112 x772) (ite (and x1194 x1503 (not x934) (not x840)) (x51 x772) (ite (and (not x934) (not x1503) x1194) (x112 x772) (x903 x772)))) (x1253 x772)))
(assert (= x1133 (x1083 (x869 x1133))))
(assert (x218 x1248))
(assert (x648 x1076))
(assert (=> (>= 10000 x1082) (= (x869 x1082) (x299 x1082))))
(assert (x124 x602 x1017))
(assert (x218 x197))
(assert (x218 x854))
(assert (= (ite (= x1 x388) x347 (x112 x388)) (x51 x388)))
(assert (=> (<= x960 10000) (= (x869 x960) (x299 x960))))
(assert (= (x467 x203) (ite (= x203 x565) x107 (x45 x203))))
(assert (x648 x681))
(assert (x218 x976))
(assert (x218 x904))
(assert (x218 x320))
(assert (x218 x180))
(assert (= (=> (and (= x1205 (x496 x1342)) (>= 1461501637330902918203684832716283019655932542975 x353) (not (> 2690754053 x1124)) (> 2960351575 x1124) (= x1276 (x1085 (x869 x871) (x299 5) 0)) (= x1342 (x1085 (x869 x353) x1276 0)) (not (= 2743102681 x1124)) (not (= x1124 2764855426)) (>= x1205 0) (= x1205 x547) (not (= x1124 2690754053)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1205) (= x1124 2798343961) (not (> 2293535753 x1124)) (> x659 0) (= (x532 (x869 274184521717934524641157099916833587206)) x659)) (=> (and (= x20 x896) (= x547 x753) (= x202 x472) (= x608 x1475)) x1081)) x766))
(assert (= (=> (and (or (and (<= 0 x1211) (= (x891 1461501637330902918203684832716283019655932542975 x540) x838) (<= 0 x982) (= (x1085 (x869 x234) x294 0) x1152) (= (< x982 x1513) x698) (= x1305 (x88 x708)) (not x1438) (= (= 0 x666) x994) (= (x1085 (x869 x799) (x299 7) 0) x867) (= (x1085 (x869 x799) (x299 1) 0) x525) (= x1129 (x1458 (+ x771 32))) (= x982 (x548 x1152)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1305) (= x1211 (x31 x525)) (= x1513 (x1470 x1129)) (>= x1305 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982) (= (x1085 (x869 x838) x867 0) x294) (or (and (= x1540 x613) (= x447 (x891 1461501637330902918203684832716283019655932542975 x540)) (= (x1085 (x869 x799) (x299 7) 0) x1291) (= x688 (x1085 (x869 x447) x1291 0)) (= x526 (x1085 (x869 x234) x688 0)) x994) (and (= x764 (x1085 (x869 x799) (x299 3) 0)) (= x760 x1385) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1418) (= (x1085 (x869 x234) x881 0) x816) (= (x1085 (x869 x234) x883 0) x905) (not x994) (= (* x664 x666) x760) (= x613 x1540) (= (x1085 (x869 x799) (x299 7) 0) x156) (= (x1085 (x869 x629) x156 0) x881) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x666 x664)) (= x883 (x1085 (x869 x1418) x764 0)) (= x629 (x891 1461501637330902918203684832716283019655932542975 x540)))) (= x613 (x1458 (+ 64 x771))) (= x708 (x1110 x525 1)) (or (and (or (and (not x480) (= x1381 x872)) (and (= x845 (x1470 x1129)) x480 (= x872 x845))) (= (> x1381 x1380) x480) (= x1380 (x1470 x1129)) x698 (= x90 (= x982 0)) (or (and (= x392 (x286 (- x872 x895))) (= (x1470 x771) x895) (= x666 x392) (not (> x895 x872)) x90) (and (not x90) (not (< x872 x982)) (= x992 x666) (= x1235 604800) (= x992 (ite (< x658 604800) x658 604800)) (= x658 (x286 (- x872 x982)))))) (and (= 0 x666) (not x698))) (<= x1211 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (= x771 x1540) (= x814 (x1085 (x869 x799) (x299 7) 0)) (= (x1085 (x869 x234) x84 0) x333) (= x84 (x1085 (x869 x1241) x814 0)) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1241) x1438)) (= x322 (= x665 0)) (or x322 (and (= x1056 (x1085 (x869 x799) (x299 9) 0)) (= x1519 (x891 1461501637330902918203684832716283019655932542975 x540)) (not x322) (= x394 (x1085 (x869 x1519) x1056 0)) (= (x1085 (x869 x234) x394 0) x813))) (= (= 0 x664) x1438)) x1524) x148))
(assert (= (ite (and x1135 x504) (x562 x1212) (x531 x1212)) (x703 x1212)))
(assert (= (=> (and (not (> 1968616202 x1549)) (< x1549 2293535753) (<= x781 1461501637330902918203684832716283019655932542975) (not (= x1549 2211524764)) (not (= 1986467848 x1549)) (not (= x1549 2061678023)) (< 0 x1471) (not (= x1549 1968616202)) (<= x253 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1530 x253) (= (x483 x1180) x253) (= x1471 (x532 (x869 274184521717934524641157099916833587206))) (= (x1085 (x869 x71) (x299 6) 0) x39) (= x1549 2258409472) (= (x1085 (x869 x781) x39 0) x1180) (not (< x1549 911411945)) (>= x253 0)) (=> (and x951 (= x1530 x794) (= x20 x1082) (= 0 x128) (= x1475 x960) (= x951 (not (= 0 x794)))) x1185)) x157))
(assert (=> (>= 10000 x60) (= (x869 x60) (x299 x60))))
(assert (x218 x443))
(assert (= (and x1558 x1233) x259))
(assert (x218 x487))
(assert (x218 x801))
(assert (x1391 x1349))
(assert (x648 x663))
(assert (x218 x1308))
(assert (= (x1083 (x869 x155)) x155))
(assert (= 0 (x1162 192)))
(assert (= x1145 x945))
(assert (x218 x252))
(assert (x218 x1022))
(assert (x218 x127))
(assert (= (x1495 x329) (ite (and x683 x1194) (x1437 x329) (x914 x329))))
(assert (= x754 (=> (and (= x1121 (= 0 x801)) (or (and (= x1372 x1052) (<= 0 x1372) (= x1301 (x1085 (x869 x886) x1243 0)) (not x1121) (= x1243 (x1085 (x869 x801) (x299 9) 0)) (= x815 (x1085 (x869 x234) x1301 0)) (= x1372 (x439 x815)) (= x1506 1) (= (x891 1461501637330902918203684832716283019655932542975 x540) x886) (<= x1372 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (= 0 x1052) x1121 (= x1506 0)))) x727)))
(assert (= (x563 x491) (ite (and x1271 (not x1026) x1322 x1002 x1485 x62) (x1548 x491) (ite (and x1002 x62 (not x1271) x1485 x1322) (x1099 x491) (ite (and x1322 (not x1485) x62 x1002) (x512 x491) (ite (and (not x62) x1322 x1002) (x1213 x491) (x411 x491)))))))
(assert (= (x1213 x772) (ite (= x1166 x772) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x772))))
(assert (= (x902 x11) (ite (and x1194 x683) (x1057 x11) (x611 x11))))
(assert (x218 x459))
(assert (= (x1083 (x299 649617121)) 649617121))
(assert (= (x51 x421) (ite (= x1 x421) x347 (x112 x421))))
(assert (x648 x1275))
(assert (=> (<= x784 10000) (= (x869 x784) (x299 x784))))
(assert (x648 x719))
(assert (x648 x399))
(assert (= x1357 x492))
(assert (= x1417 (or (and x486 x695) x327)))
(assert (x648 x304))
(assert (= (ite (= x388 x1474) x586 (x1207 x1474)) (x562 x1474)))
(assert (= x266 x1092))
(assert (= (x298 x772) (ite (= x772 x1258) x1278 (x38 x772))))
(assert (x648 x1109))
(assert (x218 x929))
(assert (x648 x231))
(assert (x218 x1324))
(assert (x648 x590))
(assert (x218 x1251))
(assert (x218 x948))
(assert (x218 x523))
(assert (= (and x1492 x1145) x897))
(assert (= (or (and (not x1002) x1322) (and x1145 (not x1492)) x584) x1510))
(assert (x218 x1351))
(assert (= (x563 x534) (ite (and x1271 x1485 x1002 x62 x1322 (not x1026)) (x1548 x534) (ite (and x1322 x1485 x1002 x62 (not x1271)) (x1099 x534) (ite (and x62 x1002 x1322 (not x1485)) (x512 x534) (ite (and (not x62) x1322 x1002) (x1213 x534) (x411 x534)))))))
(assert (x218 x1242))
(assert (x648 x635))
(assert (=> (>= 10000 x1179) (= (x299 x1179) (x869 x1179))))
(assert (x648 x1251))
(assert (x648 x1242))
(assert (= (x869 26959946667150639794667015087019630673637144422540572481103610249215) (x299 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x218 x540))
(assert (= x1206 (x1083 (x869 x1206))))
(assert (x218 x893))
(assert (= (x1083 (x299 1968616202)) 1968616202))
(assert (x218 x806))
(assert (x218 x135))
(assert (= (ite (= x1310 x935) x1008 (x1376 x1310)) (x45 x1310)))
(assert (x218 x702))
(assert (= (ite (= x388 x1310) x586 (x1207 x1310)) (x562 x1310)))
(assert (x648 x300))
(assert (= x803 (=> (and (= (x1085 (x869 x676) x668 0) x350) (= (x1085 (x869 x175) (x299 6) 0) x668) (> 2293535753 x604) (<= 0 x1436) (not (= x604 1986467848)) (not (> 1968616202 x604)) (= x604 2258409472) (>= 1461501637330902918203684832716283019655932542975 x676) (< 0 x210) (= (x532 (x869 274184521717934524641157099916833587206)) x210) (not (> 911411945 x604)) (not (= 2211524764 x604)) (= x1436 (x1177 x350)) (not (= 2061678023 x604)) (= x1117 x1436) (not (= x604 1968616202)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1436)) (=> (and (= x682 x1117) (= x712 x20) (= x1366 x1475) (= x681 x202)) x1338))))
(assert (x218 x663))
(assert (=> (<= x1552 10000) (= (x869 x1552) (x299 x1552))))
(assert (x218 x397))
(assert (x218 x1255))
(assert (x648 x1308))
(assert (= (x1099 x1053) (ite (= x667 x1053) x770 (x512 x1053))))
(assert (x648 x950))
(assert (= (ite (and x1194 x934) (x112 x388) (ite (and x1194 (not x934) x1503 (not x840)) (x51 x388) (ite (and (not x1503) (not x934) x1194) (x112 x388) (x903 x388)))) (x1253 x388)))
(assert (=> (<= x447 10000) (= (x869 x447) (x299 x447))))
(assert (= (x1083 (x869 x447)) x447))
(assert (= (x45 x1053) (ite (= x1053 x935) x1008 (x1376 x1053))))
(assert (= (x869 2835717307) (x299 2835717307)))
(assert (x218 x377))
(assert (= (x1083 (x1110 x570 1)) (+ 1 (x1083 x570))))
(assert (x218 x982))
(assert (= (ite (and x1194 x934) (x112 x421) (ite (and x1194 x1503 (not x840) (not x934)) (x51 x421) (ite (and x1194 (not x1503) (not x934)) (x112 x421) (x903 x421)))) (x1253 x421)))
(assert (=> (>= 10000 x997) (= (x299 x997) (x869 x997))))
(assert (x218 x1293))
(assert (x218 x18))
(assert (x218 x267))
(assert (x218 x936))
(assert (= (or (and x193 (not x533)) (and x238 (not x1036))) x1148))
(assert (x648 x717))
(assert (= true x114))
(assert (x862 x415 x1509))
(assert (= 2418364589 (x1083 (x299 2418364589))))
(assert (x124 x404 x740))
(assert (= (=> (and (= x1531 (> x458 0)) (= (x286 (- x997 1)) x458)) (and (=> (not x1531) x1187) (=> x1531 x817))) x1296))
(assert (=> (<= x608 10000) (= (x299 x608) (x869 x608))))
(assert (= (ite (= x565 x315) x107 (x45 x315)) (x467 x315)))
(assert (= x663 (x1083 (x869 x663))))
(assert (x218 x1504))
(assert (x218 x395))
(assert (x218 x535))
(assert (x218 x1382))
(assert (= (=> (and (= (>= x701 0) x594) (= x701 (x1483 (x869 274184521717934524641157099916833587206))) x1223 x594 (= x711 (x1483 (x869 274184521717934524641157099916833587206))) x452 (= (x989 (x869 x227)) x283) (= x657 (x1483 (x869 x227))) (= (= x227 274184521717934524641157099916833587218) x35) (= (< (x989 (x869 x227)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x452) (= x1223 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x657)) (= x880 x1118)) (and (=> (and (= 274184521717934524641157099916833587206 x206) (= x573 x892) (not (> 4 x571)) (= x1350 (or (and (< x1226 64) (= true (<= x1226 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1226))) (>= 1461501637330902918203684832716283019655932542975 x457) (not (= x428 826074471)) (= (x891 1461501637330902918203684832716283019655932542975 x457) x1048) (not (= 2514000705 x428)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x761) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x413) (= (+ x650 x349) x167) (= x953 (x1085 (x869 274184521717934524641157099916833587206) (x299 1) 0)) (= x1226 (x286 (- x571 4))) (<= 0 x761) (= 68 x571) (< 0 x484) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x413 x892)) (not x805) (= (< x761 x892) x1156) (= 2835717307 x428) (= x650 x413) (= x349 x892) (>= x413 0) (= x285 (x891 1461501637330902918203684832716283019655932542975 x457)) (= (x1085 (x869 274184521717934524641157099916833587206) (x299 1) 0) x509) (= (x1303 x953) x761) (= x413 (x1054 x1434)) (= x805 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x892 x413))) (= x571 x880) (= x1255 (x286 (- x761 x573))) (= x8 1) (= 32 x865) (not (= x428 1889567281)) (= x647 x573) x35 (not x1350) (= (x1085 (x869 x1048) (x299 1) 0) x1434) (not x1334) (not x1156) (not (= 649617121 x428)) (= x544 x18) (= x449 274184521717934524641157099916833587206) (= x1537 (x1085 (x869 x285) (x299 1) 0)) (not (< x428 649617121)) (= x1441 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1334 (< x761 x573)) (= x279 x457) (= x484 (x532 (x869 274184521717934524641157099916833587218)))) x762) (=> (not x35) x1269))) x1555))
(assert (= (x576 x937) (ite (and x574 x35) (x1184 x937) (x1075 x937))))
(assert (x218 x369))
(assert (= (x1083 (x869 x541)) x541))
(assert (= x12 (=> (and (or (and (= (x891 1461501637330902918203684832716283019655932542975 x540) x1516) x545 (= x477 (x1458 (+ 1 x799))) (= (x1085 (x869 x799) (x299 3) 0) x639) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1013) (= x427 (< x477 x535)) (= (x1085 (x869 x1516) x639 0) x460) (= x564 (x1085 (x869 x234) x460 0)) (or (and (= (x1085 (x869 x234) x307 0) x1307) (= (x1458 (+ x799 2)) x643) (= (x1085 (x869 x308) x1105 0) x307) (= (x891 1461501637330902918203684832716283019655932542975 x540) x308) (not x1257) (= (< x643 x1009) x1257) (= (x1085 (x869 x477) (x299 3) 0) x1105) (= (x891 1461501637330902918203684832716283019655932542975 x540) x1140) x427) (not x427))) (not x545)) (= (< x799 x535) x545)) x408)))
(assert (x218 x134))
(assert (= (ite (= x1053 x565) x107 (x45 x1053)) (x467 x1053)))
(assert (x218 x763))
(assert (= x1058 (=> (and (= x1090 (x1085 (x869 x645) x142 0)) (<= x645 1461501637330902918203684832716283019655932542975) (= (x1085 (x869 x751) (x299 5) 0) x142) (not (= 2764855426 x440)) (not (< x440 2690754053)) (not (= x440 2743102681)) (not (= x440 2690754053)) (= 2798343961 x440) (= x1020 x1420) (= (x532 (x869 274184521717934524641157099916833587206)) x939) (= x1020 (x496 x1090)) (not (< x440 2293535753)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1020) (> 2960351575 x440) (> x939 0) (<= 0 x1020)) (=> (and (= x1409 x20) (= x1420 x386) (= x730 x442) (= x1262 x1475) (= x202 x686)) x1556))))
(assert (= (ite (= x1164 x489) x292 (x150 x489)) (x112 x489)))
(assert (= (x1083 (x869 x1366)) x1366))
(assert (= (x1165 x729) (ite (= x564 x729) 0 (x1134 x729))))
(assert (x648 x1330))
(assert (= (x248 x772) (ite (= x772 x6) x222 (x298 x772))))
(assert (x218 x1140))
(assert (x218 x289))
(assert (=> (<= x1242 10000) (= (x869 x1242) (x299 x1242))))
(assert (x218 x836))
(assert (x218 x188))
(assert (x1406 x1316 x691 x583 x1249))
(assert (= (x1083 (x869 x838)) x838))
(assert (=> (>= 10000 x465) (= (x869 x465) (x299 x465))))
(assert (= x1452 x243))
(assert (= 0 (x1162 x1474)))
(assert (= (x1083 (x869 x1209)) x1209))
(assert (x218 x659))
(assert (= (ite (= x618 x772) x1481 (x221 x772)) (x38 x772)))
(assert (= (x1162 x534) 0))
(assert (x218 x265))
(assert (x218 x21))
(assert (x218 x466))
(assert (x218 x390))
(assert (x218 x723))
(assert (= (x869 274184521717934524641157099916833587214) (x299 274184521717934524641157099916833587214)))
(assert (x218 x174))
(assert (= (ite (= x937 x1468) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x131 x937)) (x221 x937)))
(assert (x218 x1317))
(assert (= (ite (= x534 x1166) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x534)) (x1213 x534)))
(assert (= (x299 274184521717934524641157099916833587218) (x869 274184521717934524641157099916833587218)))
(assert (x648 x1209))
(assert (= (ite (and x35 x574) (x1184 x421) (x1075 x421)) (x576 x421)))
(assert (x648 x896))
(assert (=> (>= 10000 x652) (= (x869 x652) (x299 x652))))
(assert (= 0 (x1162 x491)))
(assert (= (x51 x1212) (ite (= x1212 x1) x347 (x112 x1212))))
(assert (= (x1083 (x1110 x525 1)) (+ 1 (x1083 x525))))
(assert (x218 x1557))
(assert (x648 x838))
(assert (= (ite (= x667 x127) x770 (x512 x127)) (x1099 x127)))
(assert (x218 x343))
(assert (x218 x769))
(assert (= (x562 x1141) (ite (= x388 x1141) x586 (x1207 x1141))))
(assert (= (ite (= x935 x1141) x1008 (x1376 x1141)) (x45 x1141)))
(assert (x218 x1474))
(assert (x648 x553))
(assert (= x817 (=> (and (= (x1085 (x869 x234) x1407 0) x1450) (<= 0 x1143) (= (= 0 x1143) x1289) (= (x149 x1450) x1143) (= x541 (x891 1461501637330902918203684832716283019655932542975 x540)) (= x1407 (x1085 (x869 x541) x14 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1143) (= (x1085 (x869 x458) (x299 7) 0) x14)) (and (=> (and (= x438 x458) (not x1289)) x508) (=> (and (not x1323) x1289 (= x1323 (< 0 x907)) (= (x286 (- x458 1)) x907)) x1187)))))
(assert (x218 x600))
(assert (= (x1154 x772) (ite (and (not x497) x1322 x1002) (x563 x772) (x644 x772))))
(assert (= (x45 x935) x1008))
(assert (= (or (and x191 x1289) (and x792 (not x337)) (and (not x1531) x64)) x179))
(assert (=> (<= x1409 10000) (= (x869 x1409) (x299 x1409))))
(assert (x218 x376))
(assert (x218 x907))
(assert (= (ite (and x1438 x69) (x28 x1450) (ite (and x994 x69 (not x1438)) (x54 x1450) (x324 x1450))) (x149 x1450)))
(assert (= x1064 (and (not x1254) x91)))
(assert (= x797 (and x521 x779)))
(assert (= (x1083 (x299 759532456)) 759532456))
(assert (= (x563 x315) (ite (and (not x1026) x1002 x62 x1485 x1271 x1322) (x1548 x315) (ite (and x1002 x1322 (not x1271) x1485 x62) (x1099 x315) (ite (and x1322 x1002 x62 (not x1485)) (x512 x315) (ite (and x1002 x1322 (not x62)) (x1213 x315) (x411 x315)))))))
(assert (x218 x1209))
(assert (x218 x517))
(assert (x218 x244))
(assert (= 0 (x1162 x1141)))
(assert (= (ite (and x1002 x1322 (not x497)) (x563 x1150) (x644 x1150)) (x1154 x1150)))
(assert (x218 x404))
(assert (x218 x972))
(assert (=> (>= 10000 x458) (= (x869 x458) (x299 x458))))
(assert (=> (>= 10000 x67) (= (x869 x67) (x299 x67))))
(assert (= (x1083 (x299 1986467848)) 1986467848))
(assert (x218 x1475))
(assert (x648 x184))
(assert (x218 x8))
(assert (= 2743102681 (x1083 (x299 2743102681))))
(assert (= 0 (x1162 x47)))
(assert (x218 x1102))
(assert (x648 x1321))
(assert (x218 x746))
(assert (=> (>= 10000 x541) (= (x869 x541) (x299 x541))))
(assert (= (ite (= x421 x1166) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x421)) (x1213 x421)))
(assert (x218 x1279))
(assert (= (x1083 (x299 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= (x299 115792089237316195423570985008687907853269984665640564039457) (x869 115792089237316195423570985008687907853269984665640564039457)))
(assert (= (x1548 x772) (ite (= x252 x772) x893 (x1099 x772))))
(assert (x218 x115))
(assert (= (x1083 (x869 x1136)) x1136))
(assert (x218 x263))
(assert (x218 x444))
(assert (= (x1083 (x1110 x822 1)) (+ 1 (x1083 x822))))
(assert (x218 x655))
(assert (= (x1083 (x869 x1033)) x1033))
(assert (= x762 (=> (and (= x43 (x653 (x869 x227))) (or (not x1541) (and x1541 (= x1480 x922) (= (ite x93 1 0) x922) (= x315 (x1458 (+ 32 x491))) (= (= x1480 0) x1455) (= x743 (x1403 x491)) (= (x1403 x315) x1480) (= x93 (not x1455)) (> x1480 0) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x743) (and (> 32 x743) (= true (<= x743 57896044618658097711785492504343953926634992332820282019728792003956564819967))))))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1234 (x869 274184521717934524641157099916833587206))) x898) (not (= x8 0)) x898 (= x420 (x1403 x491)) (= (> x420 0) x1541) (= (x1234 (x869 274184521717934524641157099916833587206)) x260) (or (and x1247 (= x491 96) (= x52 x1103)) (and (= (x1458 (+ x52 x932)) x1453) (= x1453 x1103) (not x1247) (= (x1458 (+ x865 63)) x1316) (= (x1458 (+ 96 x1139)) x952) (= (x891 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1316) x932) (= x52 x491))) (= x1247 (= 0 x865))) x622)))
(assert (= (ite (= x1164 x1) x292 (x150 x1)) (x112 x1)))
(assert (x648 x535))
(assert (= (ite (and x62 x1485 x1271 x1002 (not x1026) x1322) (x1548 x1150) (ite (and x1322 (not x1271) x62 x1485 x1002) (x1099 x1150) (ite (and x1322 x1002 (not x1485) x62) (x512 x1150) (ite (and (not x62) x1002 x1322) (x1213 x1150) (x411 x1150))))) (x563 x1150)))
(assert (x218 x360))
(assert (x648 x908))
(assert (x218 x587))
(assert (x218 x1183))
(assert (= (x467 x731) (ite (= x731 x565) x107 (x45 x731))))
(assert (= (x299 2960351575) (x869 2960351575)))
(assert (x218 x279))
(assert (x648 x118))
(assert (x1391 1461501637330902918203684832716283019655932542975))
(assert (x648 x1486))
(assert (= (x1083 (x869 x799)) x799))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1147) (<= 0 x1147) (not (> 2293535753 x397)) (>= 1461501637330902918203684832716283019655932542975 x231) (= 2743102681 x397) (<= x1308 1461501637330902918203684832716283019655932542975) (< 0 x366) (not (< x397 2690754053)) (= (x1085 (x869 x1015) (x299 3) 0) x301) (= (x1085 (x869 x1308) x190 0) x729) (= x1147 x1232) (= x1147 (x505 x729)) (< x397 2960351575) (not (= 2690754053 x397)) (= (x532 (x869 274184521717934524641157099916833587206)) x366) (= x190 (x1085 (x869 x231) x301 0))) (=> (and (= x442 x733) (= x202 x1551) (= x20 x426) (= x105 x1475) (= x1232 x842)) x536)) x1404))
(assert (= 2061678023 (x1083 (x299 2061678023))))
(assert (x648 x1192))
(assert (= (x51 x1053) (ite (= x1053 x1) x347 (x112 x1053))))
(assert (x218 x1010))
(assert (x218 x167))
(assert (= (x869 2061678023) (x299 2061678023)))
(assert (x218 x384))
(assert (=> (>= 10000 x1519) (= (x869 x1519) (x299 x1519))))
(assert (= (x703 x1053) (ite (and x504 x1135) (x562 x1053) (x531 x1053))))
(assert (= (x299 18446744073709551615) (x869 18446744073709551615)))
(assert (= (x1083 (x299 1000000000000000000)) 1000000000000000000))
(assert (= (x563 x731) (ite (and x62 x1271 x1485 x1322 (not x1026) x1002) (x1548 x731) (ite (and (not x1271) x1002 x62 x1485 x1322) (x1099 x731) (ite (and x1002 x62 x1322 (not x1485)) (x512 x731) (ite (and x1002 (not x62) x1322) (x1213 x731) (x411 x731)))))))
(assert (x218 x829))
(assert (x218 x1369))
(assert (x218 x1412))
(assert (x218 x1497))
(assert (x218 x231))
(assert (x218 x1528))
(assert (= x1042 (=> (and (= (= x1361 0) x1096) (<= x1361 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1127 (x891 1461501637330902918203684832716283019655932542975 x540)) (= x566 (x1085 (x869 x997) (x299 6) 0)) (<= 0 x1361) (= x329 (x1085 (x869 x1127) x566 0)) (= x1361 (x1495 x329))) (and (=> x1096 x735) (=> (and (not x1096) (= x778 x997)) x162)))))
(assert (x218 x200))
(assert (=> (>= 10000 x1418) (= (x299 x1418) (x869 x1418))))
(assert (x218 x1139))
(assert (x218 x863))
(assert (= true x287))
(assert (x218 x1211))
(assert (= (ite (= x667 x315) x770 (x512 x315)) (x1099 x315)))
(assert (x218 x571))
(assert (= (ite (and x69 x1438) (x28 x1079) (ite (and x994 x69 (not x1438)) (x54 x1079) (x324 x1079))) (x149 x1079)))
(assert (x218 x575))
(assert (x218 x795))
(assert (x218 x1374))
(assert (x648 x458))
(assert (x218 x910))
(assert (x218 x692))
(assert (= (ite (and x977 x918) (x567 x619) (ite (and x66 x288) (x89 x619) (x1332 x619))) (x1134 x619)))
(assert (x218 x128))
(assert (x218 x138))
(assert (= x950 (x1083 (x869 x950))))
(assert (= (=> (= (= 274184521717934524641157099916833587214 x227) x1254) (and (=> (not x1254) x1216) (=> (and (= (x374 x773) x795) (= (x85 x482) x1248) (<= x697 1461501637330902918203684832716283019655932542975) (<= 0 x1248) (= x865 32) (= (x532 (x869 274184521717934524641157099916833587214)) x214) (not x1554) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1368) (and (= (<= x1368 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1368 64))) x1554) (= x279 x697) (= x1416 x1445) (= (x891 1461501637330902918203684832716283019655932542975 x697) x821) (not (= x1047 826074471)) (not (= 1889567281 x1047)) (not x1314) (= (x286 (- x1248 x705)) x599) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x795 x1445)) (= x880 x455) (= x1445 x705) (<= 0 x795) (= (x286 (- x455 4)) x1368) (<= x795 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x1047 649617121)) (= x1292 274184521717934524641157099916833587206) (= x647 x705) (= x455 68) (< 0 x214) (= x126 274184521717934524641157099916833587206) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1248) x1254 (not (< x455 4)) (= x8 1) (not (= x1047 649617121)) (= x274 x710) (= x1314 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x795 x1445))) (= x365 (x1085 (x869 274184521717934524641157099916833587206) (x299 1) 0)) (= x1047 2835717307) (= x1252 x795) (= x901 (x891 1461501637330902918203684832716283019655932542975 x697)) (= x334 (+ x1416 x1252)) (= (x1085 (x869 x821) (x299 1) 0) x773) (not x633) (not x1137) (= x641 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x1047 2514000705)) (= (> x705 x1248) x1137) (= (< x1248 x1445) x633) (= (x1085 (x869 x901) (x299 1) 0) x1196) (= x482 (x1085 (x869 274184521717934524641157099916833587206) (x299 1) 0))) x762))) x1269))
(assert (x218 x210))
(assert (= (x869 1968616202) (x299 1968616202)))
(assert (= x598 (x1083 (x869 x598))))
(assert (= (x467 x534) (ite (= x534 x565) x107 (x45 x534))))
(assert (= (x1083 (x869 x1102)) x1102))
(assert (x648 x345))
(assert (= x1322 x76))
(assert (x218 x843))
(assert (x218 x103))
(assert (x218 x428))
(assert (= (ite (= x565 x421) x107 (x45 x421)) (x467 x421)))
(assert (x218 x908))
(assert (=> (<= x676 10000) (= (x299 x676) (x869 x676))))
(assert (x306 x929 x1349))
(assert (= (ite (= x937 x935) x1008 (x1376 x937)) (x45 x937)))
(assert (= (=> (and (= x913 x63) (= x1065 true) (= (>= x842 x63) x446)) x1065) x1282))
(assert (= (x576 x731) (ite (and x35 x574) (x1184 x731) (x1075 x731))))
(assert (= (x869 2532887486) (x299 2532887486)))
(assert (x648 x751))
(assert (x218 x544))
(assert (x218 x652))
(assert (x218 x1389))
(assert (= x60 (x1083 (x869 x60))))
(assert (=> (>= 10000 x477) (= (x299 x477) (x869 x477))))
(assert (= (=> (= (< 0 x799) x1173) (and (=> (not x1173) x393) (=> x1173 x488))) x812))
(assert (= (x835 x731) (ite (and x1024 x1145 (not x568) x1492 x670 x1511) (x248 x731) (ite (and x1145 x1492 x670 x1024 (not x1511)) (x298 x731) (ite (and x1145 x1492 (not x670) x1024) (x38 x731) (ite (and x1492 x1145 (not x1024)) (x221 x731) (x340 x731)))))))
(assert (= (or (and x696 x1328) (and x1005 x897)) x584))
(assert (x218 x1471))
(assert (x648 x843))
(assert (= (x1083 (x299 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x648 x1136))
(assert (x218 x1053))
(assert (= x211 (or x759 x1397)))
(assert (x648 x390))
(assert (= (ite (and x35 x574) (x1184 x127) (x1075 x127)) (x576 x127)))
(assert (=> (<= x311 10000) (= (x869 x311) (x299 x311))))
(assert (x218 x1512))
(assert (x648 x1360))
(assert (x218 x1516))
(assert (= (x1213 x1310) (ite (= x1166 x1310) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x962 x1310))))
(assert (x218 x1467))
(assert (x218 x176))
(assert (= x780 (x1083 (x869 x780))))
(assert (= (x1083 (x869 x311)) x311))
(assert (= (x1253 x534) (ite (and x1194 x934) (x112 x534) (ite (and (not x840) x1194 x1503 (not x934)) (x51 x534) (ite (and (not x1503) (not x934) x1194) (x112 x534) (x903 x534))))))
(assert (x218 x890))
(assert (= (ite (and x504 x1135) (x562 x388) (x531 x388)) (x703 x388)))
(check-sat)
