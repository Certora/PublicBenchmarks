(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x594 0)) (((x1034 (x1520 x594) (x1423 Int)) (x123 (x1024 x594) (x1421 x594) (x1531 Int)) (x856 (x672 Int)))))
(declare-fun x1301 () x594)
(declare-fun x1022 () Int)
(declare-fun x1054 () Int)
(declare-fun x1216 () x594)
(declare-fun x921 () Bool)
(declare-fun x644 () Int)
(declare-fun x897 () Int)
(declare-fun x727 () Bool)
(declare-fun x415 () Int)
(declare-fun x191 () Int)
(declare-fun x1360 () Int)
(declare-fun x1227 () Bool)
(declare-fun x99 () Bool)
(declare-fun x884 () x594)
(declare-fun x959 () Bool)
(declare-fun x480 (x594) Int)
(declare-fun x609 () Int)
(declare-fun x1521 () Int)
(declare-fun x328 () x594)
(declare-fun x818 () Bool)
(declare-fun x1132 () Int)
(declare-fun x1475 () Int)
(declare-fun x1242 () x594)
(declare-fun x596 () Bool)
(declare-fun x1083 () Int)
(declare-fun x772 () Int)
(declare-fun x294 () Bool)
(declare-fun x567 () Bool)
(declare-fun x768 () Bool)
(declare-fun x484 () Int)
(declare-fun x1304 () Int)
(declare-fun x400 () Bool)
(declare-fun x290 () Int)
(declare-fun x132 () Int)
(declare-fun x1146 () Bool)
(declare-fun x1261 () x594)
(declare-fun x323 () x594)
(declare-fun x227 () x594)
(declare-fun x1345 () Int)
(declare-fun x969 () Int)
(declare-fun x1450 () Int)
(declare-fun x1110 () Bool)
(declare-fun x397 () Bool)
(declare-fun x189 () Int)
(declare-fun x1561 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x566 () Int)
(declare-fun x820 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x473 () Int)
(declare-fun x1010 () Bool)
(declare-fun x285 () Int)
(declare-fun x255 () Bool)
(declare-fun x1253 () Int)
(declare-fun x173 () Int)
(declare-fun x802 () Int)
(declare-fun x833 () Bool)
(declare-fun x649 () Int)
(declare-fun x1095 () Bool)
(declare-fun x7 () Int)
(declare-fun x248 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x561 () Int)
(declare-fun x982 () Int)
(declare-fun x101 () Int)
(declare-fun x1406 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x740 () Bool)
(declare-fun x1532 () Int)
(declare-fun x737 () x594)
(declare-fun x821 () x594)
(declare-fun x899 () Bool)
(declare-fun x1372 () Int)
(declare-fun x1545 () Int)
(declare-fun x5 () Int)
(declare-fun x974 () Bool)
(declare-fun x936 () Bool)
(declare-fun x966 () Bool)
(declare-fun x1160 () Int)
(declare-fun x1340 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1380 () Int)
(declare-fun x502 () Int)
(declare-fun x549 () Bool)
(declare-fun x330 () Bool)
(declare-fun x198 () Int)
(declare-fun x1526 () Int)
(declare-fun x86 () Bool)
(declare-fun x1198 () Int)
(declare-fun x760 () Bool)
(declare-fun x733 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x1105 () x594)
(declare-fun x853 () Bool)
(declare-fun x659 () Bool)
(declare-fun x595 () x594)
(declare-fun x810 () Int)
(declare-fun x1437 () x594)
(declare-fun x1374 () x594)
(declare-fun x949 () Bool)
(declare-fun x647 () x594)
(declare-fun x1171 () Int)
(declare-fun x179 () Int)
(declare-fun x1503 (Int) Int)
(declare-fun x1145 () Int)
(declare-fun x1317 () Int)
(declare-fun x266 () Int)
(declare-fun x1364 () Bool)
(declare-fun x183 () Int)
(declare-fun x1368 () x594)
(declare-fun x1202 () Int)
(declare-fun x640 () Bool)
(declare-fun x699 () Int)
(declare-fun x241 () Int)
(declare-fun x105 () Int)
(declare-fun x622 () Int)
(declare-fun x1112 () x594)
(declare-fun x926 () x594)
(declare-fun x603 () Int)
(declare-fun x1029 (x594) Int)
(declare-fun x69 () Int)
(declare-fun x1254 () Int)
(declare-fun x1268 () Int)
(declare-fun x245 () Int)
(declare-fun x1199 () Bool)
(declare-fun x892 () Bool)
(declare-fun x1351 () x594)
(declare-fun x410 () Int)
(declare-fun x337 (Int) Int)
(declare-fun x1332 (x594) Int)
(declare-fun x289 () x594)
(declare-fun x1348 () Int)
(declare-fun x479 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x1292 () Int)
(declare-fun x1191 () Int)
(declare-fun x1271 () Bool)
(declare-fun x384 () Int)
(declare-fun x1014 () Bool)
(declare-fun x642 () Bool)
(declare-fun x992 () Int)
(declare-fun x1458 () Int)
(declare-fun x1260 () Int)
(declare-fun x167 () Int)
(declare-fun x653 () Int)
(declare-fun x256 () Int)
(declare-fun x1090 () Bool)
(declare-fun x1454 () Int)
(declare-fun x186 () Bool)
(declare-fun x1040 () Int)
(declare-fun x496 () Bool)
(declare-fun x753 () Int)
(declare-fun x1186 () x594)
(declare-fun x85 () Bool)
(declare-fun x625 () Int)
(declare-fun x1069 () Int)
(declare-fun x339 () Int)
(declare-fun x1173 () Bool)
(declare-fun x375 () Int)
(declare-fun x1506 () x594)
(declare-fun x513 (x594) Int)
(declare-fun x91 () Int)
(declare-fun x604 () x594)
(declare-fun x654 () Bool)
(declare-fun x1220 () Int)
(declare-fun x770 () Int)
(declare-fun x489 () Bool)
(declare-fun x224 () Bool)
(declare-fun x576 () x594)
(declare-fun x1386 () Int)
(declare-fun x1251 () Int)
(declare-fun x253 () x594)
(declare-fun x454 () x594)
(declare-fun x1125 () Bool)
(declare-fun x377 () Bool)
(declare-fun x1407 () Int)
(declare-fun x1456 () Int)
(declare-fun x813 () x594)
(declare-fun x1226 () Int)
(declare-fun x129 () Int)
(declare-fun x21 () Bool)
(declare-fun x419 () Bool)
(declare-fun x134 () x594)
(declare-fun x938 () Int)
(declare-fun x1343 () x594)
(declare-fun x694 () x594)
(declare-fun x1550 () Int)
(declare-fun x1247 () Int)
(declare-fun x1320 () Int)
(declare-fun x1286 () x594)
(declare-fun x246 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x78 () Bool)
(declare-fun x873 () Int)
(declare-fun x864 () Bool)
(declare-fun x460 () Int)
(declare-fun x316 () x594)
(declare-fun x181 () Int)
(declare-fun x1373 () Int)
(declare-fun x881 () x594)
(declare-fun x749 () Int)
(declare-fun x1243 () Int)
(declare-fun x335 () Int)
(declare-fun x563 () Int)
(declare-fun x1150 () Bool)
(declare-fun x960 () Int)
(declare-fun x363 () Bool)
(declare-fun x318 () Bool)
(declare-fun x291 () Int)
(declare-fun x18 () Int)
(declare-fun x1067 () Bool)
(declare-fun x859 () Int)
(declare-fun x320 () Int)
(declare-fun x427 () Bool)
(declare-fun x1217 () Int)
(declare-fun x63 () Int)
(declare-fun x687 () x594)
(declare-fun x1319 () Int)
(declare-fun x1331 () Int)
(declare-fun x819 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x118 () Int)
(declare-fun x1167 () Bool)
(declare-fun x115 () Int)
(declare-fun x149 () Int)
(declare-fun x493 () Bool)
(declare-fun x665 () Bool)
(declare-fun x536 () Int)
(declare-fun x1483 () Int)
(declare-fun x1163 () Int)
(declare-fun x564 () Bool)
(declare-fun x70 () Int)
(declare-fun x1477 () Int)
(declare-fun x1356 () Int)
(declare-fun x1175 () Int)
(declare-fun x1361 (Int) Int)
(declare-fun x837 () Int)
(declare-fun x868 () x594)
(declare-fun x1045 () Int)
(declare-fun x29 () Int)
(declare-fun x1209 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x1284 () Int)
(declare-fun x271 () Int)
(declare-fun x1136 () Int)
(declare-fun x369 () Int)
(declare-fun x1321 () Int)
(declare-fun x1089 (x594) Int)
(declare-fun x243 () Bool)
(declare-fun x720 () Int)
(declare-fun x514 () Int)
(declare-fun x1449 () Int)
(declare-fun x1554 () Int)
(declare-fun x1293 (x594) Int)
(declare-fun x944 (x594) Int)
(declare-fun x1017 () Int)
(declare-fun x846 () Int)
(declare-fun x257 () Int)
(declare-fun x1542 () Bool)
(declare-fun x683 (x594) Int)
(declare-fun x867 () Int)
(declare-fun x1410 () x594)
(declare-fun x53 () Int)
(declare-fun x735 () Bool)
(declare-fun x1393 () x594)
(declare-fun x60 () Int)
(declare-fun x185 () Bool)
(declare-fun x1009 () Int)
(declare-fun x107 () Bool)
(declare-fun x1549 () Int)
(declare-fun x357 () Bool)
(declare-fun x1229 () Int)
(declare-fun x1381 () Int)
(declare-fun x67 () Int)
(declare-fun x688 () Int)
(declare-fun x630 () x594)
(declare-fun x141 () Int)
(declare-fun x1272 () Int)
(declare-fun x1453 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x503 () Int)
(declare-fun x476 () Int)
(declare-fun x1099 () Int)
(declare-fun x1100 () Int)
(declare-fun x1288 () x594)
(declare-fun x378 () x594)
(declare-fun x557 () Int)
(declare-fun x287 () x594)
(declare-fun x696 () Int)
(declare-fun x406 () Int)
(declare-fun x370 () Int)
(declare-fun x1481 () Int)
(declare-fun x1094 () Int)
(declare-fun x968 () Int)
(declare-fun x797 () Bool)
(declare-fun x135 () Int)
(declare-fun x1081 () Bool)
(declare-fun x546 () Bool)
(declare-fun x66 () Int)
(declare-fun x160 () Int)
(declare-fun x839 () Int)
(declare-fun x757 () x594)
(declare-fun x176 () x594)
(declare-fun x1149 () Bool)
(declare-fun x962 () Bool)
(declare-fun x235 () Int)
(declare-fun x274 () Bool)
(declare-fun x1278 () Int)
(declare-fun x1385 () Int)
(declare-fun x311 () Int)
(declare-fun x1 () Int)
(declare-fun x1349 () Int)
(declare-fun x632 () Int)
(declare-fun x913 () Bool)
(declare-fun x791 () Int)
(declare-fun x831 () Bool)
(declare-fun x343 () Int)
(declare-fun x470 () Int)
(declare-fun x695 () Int)
(declare-fun x1333 () Int)
(declare-fun x1354 () x594)
(declare-fun x1336 () x594)
(declare-fun x655 () Int)
(declare-fun x850 () Int)
(declare-fun x903 () Bool)
(declare-fun x139 () Int)
(declare-fun x523 () Bool)
(declare-fun x301 () Bool)
(declare-fun x1223 () Int)
(declare-fun x680 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x758 () Int)
(declare-fun x1543 () Bool)
(declare-fun x216 () Int)
(declare-fun x441 () Int)
(declare-fun x1224 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x372 () x594)
(declare-fun x428 () Int)
(declare-fun x1174 () Bool)
(declare-fun x472 () Int)
(declare-fun x1097 () Bool)
(declare-fun x780 () Int)
(declare-fun x785 () Int)
(declare-fun x1465 () Int)
(declare-fun x1114 () Int)
(declare-fun x1259 (Int) Int)
(declare-fun x204 () Int)
(declare-fun x388 () Int)
(declare-fun x689 () Int)
(declare-fun x1397 () Int)
(declare-fun x95 () Int)
(declare-fun x217 () Int)
(declare-fun x356 () x594)
(declare-fun x738 () Int)
(declare-fun x1528 () Int)
(declare-fun x1412 () Int)
(declare-fun x531 () Bool)
(declare-fun x130 () Int)
(declare-fun x1219 () Int)
(declare-fun x1154 () Bool)
(declare-fun x1464 () Int)
(declare-fun x1296 () x594)
(declare-fun x38 () x594)
(declare-fun x1218 () x594)
(declare-fun x838 () Int)
(declare-fun x1033 () Bool)
(declare-fun x510 () Int)
(declare-fun x783 () Bool)
(declare-fun x1164 () Int)
(declare-fun x355 () Bool)
(declare-fun x905 () Int)
(declare-fun x1200 () x594)
(declare-fun x1008 () Int)
(declare-fun x1168 () Int)
(declare-fun x188 () Int)
(declare-fun x723 () Bool)
(declare-fun x592 () x594)
(declare-fun x715 () Int)
(declare-fun x1290 () Bool)
(declare-fun x907 () Int)
(declare-fun x646 () x594)
(declare-fun x272 () Int)
(declare-fun x1281 () Int)
(declare-fun x128 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x925 () Int)
(declare-fun x1233 () Int)
(declare-fun x300 () x594)
(declare-fun x1042 () Bool)
(declare-fun x411 () Int)
(declare-fun x247 () Bool)
(declare-fun x779 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x366 () Int)
(declare-fun x1235 () x594)
(declare-fun x405 () x594)
(declare-fun x967 () Bool)
(declare-fun x401 () Int)
(declare-fun x698 () Bool)
(declare-fun x165 () Bool)
(declare-fun x1558 () Int)
(declare-fun x900 () Int)
(declare-fun x525 () Int)
(declare-fun x725 () Int)
(declare-fun x1066 () x594)
(declare-fun x1377 () Bool)
(declare-fun x39 () Bool)
(declare-fun x697 () Bool)
(declare-fun x705 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x79 () Int)
(declare-fun x494 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x971 () Bool)
(declare-fun x895 (x594) Int)
(declare-fun x92 () Int)
(declare-fun x222 () Int)
(declare-fun x645 () Bool)
(declare-fun x1514 () Int)
(declare-fun x250 () Bool)
(declare-fun x1070 (Int) Int)
(declare-fun x83 () Int)
(declare-fun x1470 () Bool)
(declare-fun x277 () Bool)
(declare-fun x1353 () Int)
(declare-fun x1047 () Bool)
(declare-fun x184 () x594)
(declare-fun x1315 () Int)
(declare-fun x1159 () Bool)
(declare-fun x1151 () x594)
(declare-fun x935 () x594)
(declare-fun x627 () Bool)
(declare-fun x763 () Bool)
(declare-fun x36 () Int)
(declare-fun x1282 () x594)
(declare-fun x336 () Bool)
(declare-fun x72 () Int)
(declare-fun x1188 () Int)
(declare-fun x934 () Int)
(declare-fun x27 () Bool)
(declare-fun x1139 () Int)
(declare-fun x158 () x594)
(declare-fun x666 () Bool)
(declare-fun x841 (x594) Int)
(declare-fun x616 () x594)
(declare-fun x973 () Int)
(declare-fun x1463 () Bool)
(declare-fun x1206 () Int)
(declare-fun x225 () Int)
(declare-fun x520 () Bool)
(declare-fun x446 () Bool)
(declare-fun x755 () x594)
(declare-fun x588 () Int)
(declare-fun x1222 () Int)
(declare-fun x732 () Int)
(declare-fun x722 () Bool)
(declare-fun x331 () Bool)
(declare-fun x1203 () x594)
(declare-fun x1197 () x594)
(declare-fun x827 () Bool)
(declare-fun x299 () Int)
(declare-fun x1129 () Int)
(declare-fun x985 () Int)
(declare-fun x1308 () Bool)
(declare-fun x120 (x594) Int)
(declare-fun x794 () Int)
(declare-fun x1300 () Bool)
(declare-fun x150 () Bool)
(declare-fun x1152 () Int)
(declare-fun x685 () Int)
(declare-fun x467 () x594)
(declare-fun x533 () Int)
(declare-fun x752 (x594) Int)
(declare-fun x585 () Bool)
(declare-fun x939 () Bool)
(declare-fun x1269 () Int)
(declare-fun x1289 () Int)
(declare-fun x1457 () Int)
(declare-fun x886 () Int)
(declare-fun x1312 () Bool)
(declare-fun x932 () Int)
(declare-fun x144 () Int)
(declare-fun x709 () x594)
(declare-fun x1529 () Int)
(declare-fun x1357 () Bool)
(declare-fun x1057 () x594)
(declare-fun x267 () Int)
(declare-fun x1276 () x594)
(declare-fun x423 (Int Int) Int)
(declare-fun x788 () x594)
(declare-fun x965 () Int)
(declare-fun x888 () x594)
(declare-fun x1489 () Bool)
(declare-fun x1038 () x594)
(declare-fun x718 () Int)
(declare-fun x424 () Bool)
(declare-fun x226 () Bool)
(declare-fun x1020 () Int)
(declare-fun x635 () Int)
(declare-fun x552 () Bool)
(declare-fun x918 (Int) Int)
(declare-fun x283 () Int)
(declare-fun x68 () Int)
(declare-fun x684 () Int)
(declare-fun x1130 () Int)
(declare-fun x1485 () Int)
(declare-fun x156 () Int)
(declare-fun x790 () Int)
(declare-fun x1230 () Int)
(declare-fun x1539 () x594)
(declare-fun x1408 () Int)
(declare-fun x804 () Int)
(declare-fun x383 () Bool)
(declare-fun x880 () x594)
(declare-fun x855 () Int)
(declare-fun x233 () Bool)
(declare-fun x1513 () Int)
(declare-fun x1566 (Int) Int)
(declare-fun x560 () Int)
(declare-fun x307 () x594)
(declare-fun x1335 () Int)
(declare-fun x1571 () x594)
(declare-fun x916 () Int)
(declare-fun x24 () Int)
(declare-fun x885 () Int)
(declare-fun x1560 () Bool)
(declare-fun x1250 () x594)
(declare-fun x615 () Bool)
(declare-fun x1211 () Int)
(declare-fun x678 () Int)
(declare-fun x1444 () Int)
(declare-fun x1079 () Bool)
(declare-fun x203 () Int)
(declare-fun x517 () Bool)
(declare-fun x1195 () Int)
(declare-fun x860 () Int)
(declare-fun x75 () Int)
(declare-fun x109 () x594)
(declare-fun x675 () Bool)
(declare-fun x1517 () Int)
(declare-fun x296 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x96 () Int)
(declare-fun x93 () x594)
(declare-fun x1401 () Int)
(declare-fun x1563 () Int)
(declare-fun x902 () Int)
(declare-fun x1434 () Bool)
(declare-fun x1056 () x594)
(declare-fun x1131 () Int)
(declare-fun x987 () x594)
(declare-fun x341 () x594)
(declare-fun x358 () Bool)
(declare-fun x923 () x594)
(declare-fun x1035 () Bool)
(declare-fun x478 () Bool)
(declare-fun x402 () Bool)
(declare-fun x453 (x594) Int)
(declare-fun x637 () Int)
(declare-fun x325 () Bool)
(declare-fun x1007 (Int Int) Int)
(declare-fun x499 () Int)
(declare-fun x14 () x594)
(declare-fun x638 () Bool)
(declare-fun x1476 () Int)
(declare-fun x463 () Int)
(declare-fun x602 () x594)
(declare-fun x894 () Bool)
(declare-fun x138 () Int)
(declare-fun x660 () Int)
(declare-fun x1127 () Bool)
(declare-fun x1495 () Int)
(declare-fun x436 () Int)
(declare-fun x521 () Int)
(declare-fun x374 () Bool)
(declare-fun x866 () Int)
(declare-fun x1547 () x594)
(declare-fun x731 () Int)
(declare-fun x37 () Bool)
(declare-fun x775 () Int)
(declare-fun x527 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x157 () Bool)
(declare-fun x1201 () Int)
(declare-fun x656 () Bool)
(declare-fun x1013 () Int)
(declare-fun x381 () Int)
(declare-fun x1256 () Bool)
(declare-fun x390 () x594)
(declare-fun x955 () Int)
(declare-fun x127 () x594)
(declare-fun x1118 () x594)
(declare-fun x34 () Bool)
(declare-fun x614 () Int)
(declare-fun x1413 () x594)
(declare-fun x466 () Bool)
(declare-fun x808 () Bool)
(declare-fun x1225 () Int)
(declare-fun x1194 () Int)
(declare-fun x1414 () Int)
(declare-fun x31 () Int)
(declare-fun x805 () Bool)
(declare-fun x1366 () Int)
(declare-fun x1192 () Bool)
(declare-fun x950 () x594)
(declare-fun x747 () Int)
(declare-fun x761 () Int)
(declare-fun x1430 () x594)
(declare-fun x940 () Int)
(declare-fun x961 () Bool)
(declare-fun x1138 () Int)
(declare-fun x108 () Int)
(declare-fun x1011 () x594)
(declare-fun x792 () x594)
(declare-fun x631 () Int)
(declare-fun x964 () x594)
(declare-fun x431 () Int)
(declare-fun x498 () Int)
(declare-fun x360 () Int)
(declare-fun x1461 () Bool)
(declare-fun x1411 () Int)
(declare-fun x394 () Int)
(declare-fun x152 () Bool)
(declare-fun x577 () Int)
(declare-fun x1469 () Bool)
(declare-fun x824 () Bool)
(declare-fun x1568 (Int) Int)
(declare-fun x1263 () x594)
(declare-fun x840 () Int)
(declare-fun x136 () x594)
(declare-fun x153 () Bool)
(declare-fun x42 () Int)
(declare-fun x49 () x594)
(declare-fun x44 () x594)
(declare-fun x953 () Bool)
(declare-fun x420 () Int)
(declare-fun x1468 () Int)
(declare-fun x1018 () Bool)
(declare-fun x842 () Bool)
(declare-fun x854 () Bool)
(declare-fun x776 () Int)
(declare-fun x617 () Int)
(declare-fun x674 () Bool)
(declare-fun x409 () Bool)
(declare-fun x1399 () Int)
(declare-fun x306 () Int)
(declare-fun x1002 () Int)
(declare-fun x1086 () Bool)
(declare-fun x945 () Int)
(declare-fun x131 () x594)
(declare-fun x238 () Bool)
(declare-fun x1330 () Int)
(declare-fun x207 () x594)
(declare-fun x589 () Int)
(declare-fun x62 () Int)
(declare-fun x551 () Int)
(declare-fun x580 () Int)
(declare-fun x324 () x594)
(declare-fun x293 (x594) Int)
(declare-fun x491 () x594)
(declare-fun x706 () x594)
(declare-fun x1068 () Bool)
(declare-fun x464 (x594) Int)
(declare-fun x1441 (Int) Int)
(declare-fun x414 () Int)
(declare-fun x482 () Bool)
(declare-fun x286 () Bool)
(declare-fun x1006 () x594)
(declare-fun x898 () Bool)
(declare-fun x1525 () Int)
(declare-fun x117 () Int)
(declare-fun x1266 () Int)
(declare-fun x707 () x594)
(declare-fun x50 () Bool)
(declare-fun x719 () Int)
(declare-fun x795 () x594)
(declare-fun x346 () Int)
(declare-fun x858 () Int)
(declare-fun x1103 () Bool)
(declare-fun x1264 () x594)
(declare-fun x430 () Bool)
(declare-fun x495 () Bool)
(declare-fun x769 () Int)
(declare-fun x524 () Int)
(declare-fun x312 () x594)
(declare-fun x914 () Int)
(declare-fun x425 () x594)
(declare-fun x634 () x594)
(declare-fun x759 () Bool)
(declare-fun x1082 () Int)
(declare-fun x1350 () Int)
(declare-fun x1527 () Bool)
(declare-fun x751 () Int)
(declare-fun x1334 () Bool)
(declare-fun x975 () x594)
(declare-fun x793 () Bool)
(declare-fun x1283 () Int)
(declare-fun x1516 () x594)
(declare-fun x663 () x594)
(declare-fun x606 () Int)
(declare-fun x302 () Bool)
(declare-fun x1447 () x594)
(declare-fun x1455 () Int)
(declare-fun x942 (Int) Int)
(declare-fun x906 () Int)
(declare-fun x1116 () x594)
(declare-fun x1295 () Int)
(declare-fun x17 () Int)
(declare-fun x825 () x594)
(declare-fun x80 () Int)
(declare-fun x1494 () Int)
(declare-fun x1074 () Int)
(declare-fun x1096 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x448 () Bool)
(declare-fun x240 () Int)
(declare-fun x1355 () Int)
(declare-fun x807 () Int)
(declare-fun x1310 () Int)
(declare-fun x148 () Int)
(declare-fun x708 () Int)
(declare-fun x1359 () Int)
(declare-fun x767 () Int)
(declare-fun x1280 () Int)
(declare-fun x1378 (Int) Int)
(declare-fun x1273 () Bool)
(declare-fun x449 () Int)
(declare-fun x889 () Int)
(declare-fun x1236 () Bool)
(declare-fun x177 () Int)
(declare-fun x1367 () Bool)
(declare-fun x1491 () Int)
(declare-fun x1187 () Int)
(declare-fun x930 () Bool)
(declare-fun x822 () Bool)
(declare-fun x317 () Bool)
(declare-fun x219 () Int)
(declare-fun x483 () Int)
(declare-fun x766 (x594) Int)
(declare-fun x1484 () Bool)
(declare-fun x232 () Bool)
(declare-fun x154 () Int)
(declare-fun x1077 () Bool)
(declare-fun x1275 () Int)
(declare-fun x931 () x594)
(declare-fun x605 () Int)
(declare-fun x1104 () Int)
(declare-fun x1107 () x594)
(declare-fun x568 () x594)
(declare-fun x413 () Int)
(declare-fun x1544 () Int)
(declare-fun x922 () Int)
(declare-fun x550 () Int)
(declare-fun x736 () Int)
(declare-fun x214 () Bool)
(declare-fun x342 () x594)
(declare-fun x32 () Bool)
(declare-fun x657 () Int)
(declare-fun x295 () Int)
(declare-fun x1427 () Bool)
(declare-fun x458 () Int)
(declare-fun x978 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x876 () Int)
(declare-fun x639 () Bool)
(declare-fun x540 () Bool)
(declare-fun x89 () Int)
(declare-fun x1059 () Int)
(declare-fun x1471 () x594)
(declare-fun x28 () Bool)
(declare-fun x23 () Int)
(declare-fun x915 () x594)
(declare-fun x412 () Bool)
(declare-fun x539 () Bool)
(declare-fun x426 () Int)
(declare-fun x815 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x268 () Int)
(declare-fun x229 () Int)
(declare-fun x1384 () x594)
(declare-fun x1442 () Bool)
(declare-fun x1016 () Int)
(declare-fun x1063 () Bool)
(declare-fun x111 (Int) Int)
(declare-fun x835 () Int)
(declare-fun x340 () Int)
(declare-fun x418 () Int)
(declare-fun x1055 () Bool)
(declare-fun x16 () Int)
(declare-fun x459 () x594)
(declare-fun x682 () Int)
(declare-fun x998 (Int) x594)
(declare-fun x1446 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1342 () Int)
(declare-fun x35 () Int)
(declare-fun x882 () Int)
(declare-fun x1505 () Int)
(declare-fun x161 () x594)
(declare-fun x739 () Bool)
(declare-fun x353 () Bool)
(declare-fun x492 () Int)
(declare-fun x587 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x1030 () Int)
(declare-fun x57 () Bool)
(declare-fun x547 () x594)
(declare-fun x746 () Int)
(declare-fun x265 () Bool)
(declare-fun x1058 () Int)
(declare-fun x351 () Int)
(declare-fun x1298 () Int)
(declare-fun x702 () Int)
(declare-fun x1134 () x594)
(declare-fun x1388 () Int)
(declare-fun x991 () Int)
(declare-fun x636 () Bool)
(declare-fun x1087 () x594)
(declare-fun x1183 () Int)
(declare-fun x1462 () Int)
(declare-fun x1352 () Int)
(declare-fun x1424 () Int)
(declare-fun x76 () x594)
(declare-fun x823 (Int) Int)
(declare-fun x125 () Int)
(declare-fun x608 () Bool)
(declare-fun x519 () x594)
(declare-fun x447 () Bool)
(declare-fun x1546 () Int)
(declare-fun x995 () Int)
(declare-fun x77 () Bool)
(declare-fun x534 () Int)
(declare-fun x919 () Int)
(declare-fun x1302 () Int)
(declare-fun x506 () Int)
(declare-fun x970 () Int)
(declare-fun x195 () x594)
(declare-fun x1443 () Bool)
(declare-fun x784 () Bool)
(declare-fun x1435 () Int)
(declare-fun x334 () Bool)
(declare-fun x212 () x594)
(declare-fun x1460 () Bool)
(declare-fun x1196 () Int)
(declare-fun x601 () Int)
(declare-fun x1390 () Int)
(declare-fun x651 () Int)
(declare-fun x352 () Bool)
(declare-fun x619 () Bool)
(declare-fun x1111 () Int)
(declare-fun x487 () Bool)
(declare-fun x516 () Int)
(declare-fun x385 () Bool)
(declare-fun x947 () x594)
(declare-fun x442 () x594)
(declare-fun x455 () Bool)
(declare-fun x404 () Int)
(declare-fun x194 () Int)
(declare-fun x1369 () x594)
(declare-fun x87 () Bool)
(declare-fun x852 () Bool)
(declare-fun x1085 () Int)
(declare-fun x1395 () Bool)
(declare-fun x948 () Bool)
(declare-fun x376 () Int)
(declare-fun x1486 () Int)
(declare-fun x262 (x594) Int)
(declare-fun x313 () Int)
(declare-fun x1108 () x594)
(declare-fun x1501 () Int)
(declare-fun x1524 () Bool)
(declare-fun x692 () Bool)
(declare-fun x298 () Int)
(declare-fun x584 () Int)
(declare-fun x989 () Int)
(declare-fun x1252 (Int) Int)
(declare-fun x1322 () Int)
(declare-fun x972 () Int)
(declare-fun x1313 () Bool)
(declare-fun x571 () Int)
(declare-fun x851 () Int)
(declare-fun x332 () Bool)
(declare-fun x1147 () Int)
(declare-fun x345 () x594)
(declare-fun x941 () Bool)
(declare-fun x175 () Int)
(declare-fun x1212 () Bool)
(declare-fun x110 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x1452 () Int)
(declare-fun x1556 () Int)
(declare-fun x1207 () Bool)
(declare-fun x691 () Int)
(declare-fun x329 () Bool)
(declare-fun x908 () Bool)
(declare-fun x182 () x594)
(declare-fun x244 () Int)
(declare-fun x30 () Bool)
(declare-fun x817 () Bool)
(declare-fun x51 () Bool)
(declare-fun x147 () x594)
(declare-fun x673 () x594)
(declare-fun x857 () Bool)
(declare-fun x1479 () Int)
(declare-fun x239 () Bool)
(declare-fun x40 () Int)
(declare-fun x565 (Int) Int)
(declare-fun x354 () Bool)
(declare-fun x754 () Bool)
(declare-fun x469 () Bool)
(declare-fun x633 () Int)
(declare-fun x1232 () Int)
(declare-fun x600 () Bool)
(declare-fun x1075 () Int)
(declare-fun x1181 () Int)
(declare-fun x1323 () Bool)
(declare-fun x94 () Int)
(declare-fun x145 () Int)
(declare-fun x26 () Int)
(declare-fun x114 () Int)
(declare-fun x102 () x594)
(declare-fun x1115 () Bool)
(declare-fun x1555 () Int)
(declare-fun x270 () Int)
(declare-fun x1032 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x192 () Bool)
(declare-fun x1365 () x594)
(declare-fun x509 () Bool)
(declare-fun x671 () Bool)
(declare-fun x1459 () Int)
(declare-fun x713 () Int)
(declare-fun x1044 () Int)
(declare-fun x717 () Int)
(declare-fun x994 () Int)
(declare-fun x1279 () Int)
(declare-fun x1472 () Int)
(declare-fun x468 () Bool)
(declare-fun x215 () Int)
(declare-fun x65 () x594)
(declare-fun x273 () Int)
(declare-fun x196 () Bool)
(declare-fun x391 () Int)
(declare-fun x890 () Bool)
(declare-fun x1426 () x594)
(declare-fun x612 () Bool)
(declare-fun x1522 () x594)
(declare-fun x773 () Int)
(declare-fun x8 () Int)
(declare-fun x326 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x88 () Int)
(declare-fun x1027 () Int)
(declare-fun x535 () x594)
(declare-fun x126 () Int)
(declare-fun x304 () Int)
(declare-fun x591 () Int)
(declare-fun x626 () Int)
(declare-fun x389 () Int)
(declare-fun x724 () Int)
(declare-fun x559 () Bool)
(declare-fun x43 () Bool)
(declare-fun x263 () Bool)
(declare-fun x1338 () x594)
(declare-fun x54 () Bool)
(declare-fun x983 () Int)
(declare-fun x528 () Int)
(declare-fun x180 () Int)
(declare-fun x403 () x594)
(declare-fun x1473 () Bool)
(declare-fun x834 () Bool)
(declare-fun x1064 () Int)
(declare-fun x1429 (Int) Int)
(declare-fun x438 () Int)
(declare-fun x508 () x594)
(declare-fun x1240 () Bool)
(declare-fun x607 () Int)
(declare-fun x164 (Int) Int)
(declare-fun x862 () Int)
(declare-fun x745 () Bool)
(declare-fun x81 () Int)
(declare-fun x386 () Int)
(declare-fun x488 () Int)
(declare-fun x582 () Bool)
(declare-fun x829 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x976 () x594)
(declare-fun x1523 () x594)
(declare-fun x1339 () Int)
(declare-fun x121 () x594)
(declare-fun x500 () Int)
(declare-fun x1249 () Int)
(declare-fun x1141 () Bool)
(declare-fun x957 () Int)
(declare-fun x548 () Int)
(declare-fun x1231 () Int)
(declare-fun x1257 () Int)
(declare-fun x1382 () Bool)
(declare-fun x662 () Bool)
(declare-fun x590 () Bool)
(declare-fun x314 () Bool)
(declare-fun x786 () Int)
(declare-fun x137 () Int)
(declare-fun x714 () Bool)
(declare-fun x1504 () Int)
(declare-fun x728 () Int)
(declare-fun x201 () x594)
(declare-fun x830 () x594)
(declare-fun x1433 () Int)
(declare-fun x10 () Int)
(declare-fun x1538 () Bool)
(declare-fun x522 () Int)
(declare-fun x64 () Bool)
(declare-fun x437 () x594)
(declare-fun x1299 () Int)
(declare-fun x41 () Int)
(declare-fun x1005 () Bool)
(declare-fun x1143 () x594)
(declare-fun x1363 () Bool)
(declare-fun x956 () Int)
(declare-fun x171 () Bool)
(declare-fun x690 () Int)
(declare-fun x532 () Bool)
(declare-fun x490 () x594)
(declare-fun x927 () Int)
(declare-fun x803 () Int)
(declare-fun x1080 () Int)
(declare-fun x1246 () Bool)
(declare-fun x650 (x594) Int)
(declare-fun x310 () Bool)
(declare-fun x677 () x594)
(declare-fun x2 () Bool)
(declare-fun x726 () x594)
(declare-fun x741 () Int)
(declare-fun x996 () Int)
(declare-fun x362 () x594)
(declare-fun x231 () Int)
(declare-fun x1285 () Int)
(declare-fun x1248 () Bool)
(declare-fun x435 () Int)
(declare-fun x1182 () Bool)
(declare-fun x993 () Int)
(declare-fun x380 () x594)
(declare-fun x279 () Int)
(declare-fun x159 () Int)
(declare-fun x504 () Int)
(declare-fun x1241 () Int)
(declare-fun x151 () x594)
(declare-fun x1265 () Int)
(declare-fun x1113 () Int)
(declare-fun x1392 () Bool)
(declare-fun x200 () Bool)
(declare-fun x544 () Int)
(declare-fun x512 () x594)
(declare-fun x327 () x594)
(declare-fun x1102 () Int)
(declare-fun x871 () Int)
(declare-fun x814 () Bool)
(declare-fun x1234 () Int)
(declare-fun x1519 () Bool)
(declare-fun x124 () Bool)
(declare-fun x610 () Int)
(declare-fun x1098 () Bool)
(declare-fun x734 () Bool)
(declare-fun x218 () Int)
(declare-fun x958 () Bool)
(declare-fun x481 () Int)
(declare-fun x661 () Int)
(declare-fun x811 () x594)
(declare-fun x1239 () x594)
(declare-fun x1140 () Int)
(declare-fun x166 () x594)
(declare-fun x712 () Int)
(declare-fun x648 () Bool)
(declare-fun x621 () Int)
(declare-fun x205 () Int)
(declare-fun x771 () Int)
(declare-fun x1053 () Int)
(declare-fun x408 () Bool)
(declare-fun x668 () Int)
(declare-fun x1420 () Bool)
(declare-fun x112 () Bool)
(declare-fun x586 () Bool)
(declare-fun x1169 () Int)
(declare-fun x800 () Int)
(declare-fun x986 () Bool)
(declare-fun x1073 () x594)
(declare-fun x1157 () Bool)
(declare-fun x1172 () x594)
(declare-fun x58 () Bool)
(declare-fun x1037 () Int)
(declare-fun x990 () Bool)
(declare-fun x1428 () Int)
(declare-fun x875 () x594)
(declare-fun x700 () Int)
(declare-fun x1028 () Int)
(declare-fun x847 () Int)
(declare-fun x1508 () Int)
(declare-fun x917 () Bool)
(declare-fun x750 () Int)
(declare-fun x904 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x1327 () Int)
(declare-fun x1487 () x594)
(declare-fun x526 () Bool)
(declare-fun x554 () Bool)
(declare-fun x1551 () x594)
(declare-fun x1341 () Bool)
(declare-fun x558 () Int)
(declare-fun x416 () Bool)
(declare-fun x284 () Int)
(declare-fun x798 () Int)
(declare-fun x597 () Bool)
(declare-fun x292 () x594)
(declare-fun x1062 (Int) Int)
(declare-fun x46 () Int)
(declare-fun x1515 () Int)
(declare-fun x103 () Int)
(declare-fun x782 () Int)
(declare-fun x796 () Bool)
(declare-fun x1376 () Int)
(declare-fun x781 () Int)
(declare-fun x3 () Bool)
(declare-fun x676 () Bool)
(declare-fun x670 () Int)
(declare-fun x826 () Bool)
(declare-fun x912 () Int)
(declare-fun x223 () Int)
(declare-fun x1156 () Int)
(declare-fun x305 () Bool)
(declare-fun x398 () Int)
(declare-fun x620 () Int)
(declare-fun x13 () Int)
(declare-fun x371 () Bool)
(declare-fun x1451 () Int)
(declare-fun x629 () Int)
(declare-fun x1023 () Bool)
(declare-fun x280 () Bool)
(declare-fun x98 () Bool)
(declare-fun x1415 () Int)
(declare-fun x515 () x594)
(declare-fun x667 () Bool)
(declare-fun x543 () Int)
(declare-fun x861 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x1362 () Int)
(declare-fun x1122 () Int)
(declare-fun x278 () Int)
(declare-fun x48 () x594)
(declare-fun x97 () Int)
(declare-fun x361 () Int)
(declare-fun x190 () Bool)
(declare-fun x877 () Int)
(declare-fun x251 () Bool)
(declare-fun x1389 () Int)
(declare-fun x836 () x594)
(declare-fun x641 (Int) Int)
(declare-fun x1534 () x594)
(declare-fun x178 () Int)
(declare-fun x1176 () Int)
(declare-fun x1076 () Bool)
(declare-fun x1314 () Int)
(declare-fun x1391 () Int)
(declare-fun x1565 () Int)
(declare-fun x168 () Bool)
(declare-fun x1294 () Int)
(declare-fun x193 () Bool)
(declare-fun x19 () Bool)
(declare-fun x542 () Int)
(declare-fun x1133 () Int)
(declare-fun x55 () Bool)
(declare-fun x349 () Bool)
(declare-fun x210 () Bool)
(declare-fun x1072 (x594) Int)
(declare-fun x711 () Bool)
(declare-fun x155 () Int)
(declare-fun x1153 () Bool)
(declare-fun x6 () Int)
(declare-fun x1000 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x703 () x594)
(declare-fun x429 () Int)
(declare-fun x878 () x594)
(declare-fun x977 () x594)
(declare-fun x984 (Int) Int)
(declare-fun x497 () Int)
(declare-fun x1060 () x594)
(declare-fun x658 () Int)
(declare-fun x843 () Int)
(declare-fun x1012 () Int)
(declare-fun x954 () Bool)
(declare-fun x485 () Bool)
(declare-fun x206 () x594)
(declare-fun x221 () Int)
(declare-fun x392 () Int)
(declare-fun x259 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x618 () Bool)
(declare-fun x202 () Bool)
(declare-fun x230 () Int)
(declare-fun x382 () Int)
(declare-fun x456 () Bool)
(declare-fun x1019 () Int)
(declare-fun x937 () Int)
(declare-fun x462 () Int)
(declare-fun x213 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x943 () Bool)
(declare-fun x887 () Bool)
(declare-fun x276 () x594)
(declare-fun x315 () Int)
(declare-fun x1036 () x594)
(declare-fun x1166 () Int)
(declare-fun x799 () Int)
(declare-fun x1026 () Bool)
(declare-fun x572 () Bool)
(declare-fun x365 () Bool)
(declare-fun x450 () x594)
(declare-fun x701 () Bool)
(declare-fun x288 () Int)
(declare-fun x541 (Int) Int)
(declare-fun x379 () Bool)
(declare-fun x208 () Bool)
(declare-fun x1530 () Int)
(declare-fun x729 () Int)
(declare-fun x344 () Int)
(declare-fun x260 () Int)
(declare-fun x774 () x594)
(declare-fun x12 () Int)
(declare-fun x681 () x594)
(declare-fun x570 () Int)
(declare-fun x471 () x594)
(declare-fun x82 () Int)
(declare-fun x1311 () Bool)
(declare-fun x56 () Int)
(declare-fun x452 () Bool)
(declare-fun x169 () Int)
(declare-fun x308 () Int)
(declare-fun x1417 () Int)
(declare-fun x116 () Bool)
(declare-fun x933 () Bool)
(declare-fun x1394 () Int)
(declare-fun x1370 () Int)
(declare-fun x475 () Bool)
(declare-fun x832 () Int)
(declare-fun x143 () Int)
(declare-fun x518 () Bool)
(declare-fun x721 () Int)
(declare-fun x764 () x594)
(declare-fun x319 (Int) Int)
(declare-fun x347 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x828 () Bool)
(declare-fun x359 () Int)
(declare-fun x1144 () Bool)
(declare-fun x556 () Bool)
(declare-fun x254 () Int)
(declare-fun x321 () Int)
(declare-fun x1316 () Int)
(declare-fun x863 () Int)
(declare-fun x1262 () Int)
(declare-fun x765 () Int)
(declare-fun x457 () Bool)
(declare-fun x569 () Int)
(declare-fun x322 () Bool)
(declare-fun x236 () x594)
(declare-fun x1109 () x594)
(declare-fun x199 () Int)
(declare-fun x777 () Int)
(declare-fun x812 () Int)
(declare-fun x1120 () Int)
(declare-fun x624 () Int)
(declare-fun x1052 () Int)
(declare-fun x997 (Int) Int)
(declare-fun x47 () x594)
(declare-fun x598 () x594)
(declare-fun x679 () Bool)
(declare-fun x71 () Int)
(declare-fun x45 (Int) Int)
(declare-fun x1237 () Int)
(declare-fun x1043 () Int)
(declare-fun x924 () x594)
(declare-fun x20 () Int)
(declare-fun x209 () x594)
(declare-fun x1255 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x133 () Int)
(declare-fun x743 () Int)
(declare-fun x1078 () Int)
(declare-fun x1179 () Int)
(declare-fun x197 () Int)
(declare-fun x1185 () Int)
(declare-fun x1228 () Bool)
(declare-fun x399 () x594)
(declare-fun x669 () Int)
(declare-fun x174 () x594)
(declare-fun x451 () Int)
(declare-fun x1562 () Int)
(declare-fun x422 (x594) Int)
(declare-fun x1497 () x594)
(declare-fun x1474 () Int)
(declare-fun x61 () Int)
(declare-fun x845 (Int) Int)
(declare-fun x1190 () Int)
(declare-fun x1084 () Bool)
(declare-fun x333 () x594)
(declare-fun x1305 () Int)
(declare-fun x1488 () Int)
(declare-fun x999 () Bool)
(declare-fun x555 () Int)
(declare-fun x395 () x594)
(declare-fun x789 () Bool)
(declare-fun x744 () Int)
(declare-fun x848 () Int)
(declare-fun x228 () Int)
(declare-fun x1204 (x594) Int)
(declare-fun x1329 () Int)
(declare-fun x1003 () Bool)
(declare-fun x417 () Bool)
(declare-fun x611 () Int)
(declare-fun x1403 () Int)
(declare-fun x1193 (Int) Int)
(declare-fun x1375 () Int)
(declare-fun x929 () Int)
(declare-fun x1536 () x594)
(declare-fun x981 () x594)
(declare-fun x511 () Bool)
(declare-fun x1178 () Int)
(declare-fun x778 () x594)
(declare-fun x33 () Int)
(declare-fun x1004 (x594) Int)
(declare-fun x891 () Int)
(declare-fun x1214 () Int)
(declare-fun x461 () Int)
(declare-fun x303 () Int)
(declare-fun x106 () Int)
(declare-fun x432 () Int)
(declare-fun x1041 () Bool)
(declare-fun x350 () Int)
(declare-fun x1326 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x4 () Int)
(declare-fun x1402 () Int)
(declare-fun x988 () Int)
(declare-fun x1287 () Int)
(declare-fun x1137 () Int)
(declare-fun x1502 () Int)
(declare-fun x1337 () x594)
(declare-fun x1540 () Bool)
(declare-fun x1440 () Int)
(declare-fun x652 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x579 () x594)
(declare-fun x883 () Int)
(declare-fun x553 () Int)
(declare-fun x1347 () Int)
(declare-fun x893 () x594)
(declare-fun x910 () x594)
(declare-fun x1496 () Bool)
(declare-fun x710 () Int)
(declare-fun x756 () Bool)
(declare-fun x730 () Bool)
(declare-fun x338 () Int)
(declare-fun x1379 () Int)
(declare-fun x1170 () Bool)
(declare-fun x901 () Bool)
(declare-fun x1324 () Int)
(declare-fun x583 () Int)
(declare-fun x870 () Int)
(declare-fun x1106 () Bool)
(declare-fun x643 () x594)
(declare-fun x387 () Bool)
(declare-fun x1121 () Int)
(declare-fun x22 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x844 () x594)
(declare-fun x874 () x594)
(declare-fun x440 () Int)
(declare-fun x348 () x594)
(declare-fun x1436 () x594)
(declare-fun x562 () Bool)
(declare-fun x801 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x1493 () Bool)
(declare-fun x465 () Bool)
(declare-fun x872 () Int)
(declare-fun x1541 () Int)
(declare-fun x869 () x594)
(declare-fun x187 () Int)
(declare-fun x113 () Int)
(declare-fun x1245 () Int)
(declare-fun x242 () Int)
(declare-fun x1510 () Bool)
(declare-fun x1328 () x594)
(declare-fun x1091 () Bool)
(declare-fun x1049 () Int)
(declare-fun x1142 () Bool)
(declare-fun x170 (x594) Int)
(declare-fun x264 () Int)
(declare-fun x1155 () Int)
(declare-fun x613 () Int)
(declare-fun x1419 () Bool)
(declare-fun x1119 () Int)
(declare-fun x1124 () Int)
(declare-fun x59 () x594)
(declare-fun x806 () x594)
(declare-fun x1039 () Int)
(declare-fun x445 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x407 () Int)
(declare-fun x963 () x594)
(declare-fun x1117 () Int)
(declare-fun x909 () Int)
(declare-fun x220 () Int)
(declare-fun x762 (x594) Int)
(declare-fun x1482 () Bool)
(declare-fun x951 () Int)
(declare-fun x928 () Int)
(declare-fun x748 () Bool)
(declare-fun x486 () x594)
(declare-fun x578 () Int)
(declare-fun x1210 () Int)
(define-fun x146 ((x594 x594) (x530 Int)) x594 (ite ((_ is x1034) x594) (x1034 (x1520 x594) (+ x530 (x1423 x594))) (ite ((_ is x123) x594) (x123 (x1024 x594) (x1421 x594) (+ (x1531 x594) x530)) (x856 (+ (x672 x594) x530)))))
(define-fun x477 ((x90 Int)) Int (ite (and (>= x90 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x90)) x90 (- x90 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1126 ((x90 Int)) Int (ite (and (>= x90 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x90)) (+ x90 115792089237316195423570985008687907853269984665640564039457584007913129639936) x90))
(define-fun x74 ((x84 Int)) Bool (and (>= x84 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x84)))
(define-fun x237 ((x84 Int)) Bool (and (= (x423 115792089237316195423570985008687907853269984665640564039457584007913129639935 x84) x84) (= x84 (x423 x84 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1344 ((x84 Int)) Bool (and (= (x423 x84 0) 0) (= 0 (x423 0 x84))))
(define-fun x716 ((x84 Int)) Bool (= x84 (x423 x84 x84)))
(define-fun x1303 ((x84 Int)) Bool (and (x1344 x84) (x716 x84) (x237 x84)))
(define-fun x573 ((x84 Int)) Bool (= (x423 1461501637330902918203684832716283019655932542975 x84) (x423 1461501637330902918203684832716283019655932542975 (x423 1461501637330902918203684832716283019655932542975 x84))))
(define-fun x1001 ((x84 Int)) Bool (=> (and (<= 0 x84) (> 1461501637330902918203684832716283019655932542976 x84)) (= (x423 1461501637330902918203684832716283019655932542975 x84) x84)))
(define-fun x816 ((x84 Int)) Bool (=> (= x84 (x423 1461501637330902918203684832716283019655932542975 x84)) (and (> 1461501637330902918203684832716283019655932542976 x84) (>= x84 0))))
(define-fun x1511 ((x84 Int)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x84) (>= x84 1461501637330902918203684832716283019655932542976)) (= (- x84 1461501637330902918203684832716283019655932542976) (x423 1461501637330902918203684832716283019655932542975 x84))))
(define-fun x946 ((x84 Int) (x1158 Int)) Bool (and (<= 0 x1158) (= (+ (* x1158 1461501637330902918203684832716283019655932542976) (x423 1461501637330902918203684832716283019655932542975 x84)) x84)))
(define-fun x368 ((x84 Int) (x1512 Int)) Bool (and (x946 x84 x1512) (x573 x84) (x1001 x84) (x1511 x84) (x816 x84)))
(define-fun x693 ((x84 Int) (x1158 Int)) Bool (= (x423 x1158 x84) (x423 x84 x1158)))
(define-fun x163 ((x84 Int) (x1158 Int)) Bool (and (=> (<= 0 x1158) (>= x1158 (x423 x84 x1158))) (<= 0 (x423 x84 x1158)) (=> (<= 0 x84) (>= x84 (x423 x84 x1158)))))
(define-fun x787 ((x84 Int) (x1158 Int)) Bool (and (x693 x84 x1158) (x163 x84 x1158)))
(define-fun x1548 ((x84 Int) (x1512 Int)) Bool (and (x787 x84 1461501637330902918203684832716283019655932542975) (x368 x84 x1512)))
(define-fun x421 ((x84 Int)) Bool (= (x423 26959946667150639794667015087019630673637144422540572481103610249215 (x423 26959946667150639794667015087019630673637144422540572481103610249215 x84)) (x423 26959946667150639794667015087019630673637144422540572481103610249215 x84)))
(define-fun x1306 ((x84 Int)) Bool (=> (and (>= x84 0) (< x84 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x423 26959946667150639794667015087019630673637144422540572481103610249215 x84) x84)))
(define-fun x73 ((x84 Int)) Bool (=> (= (x423 26959946667150639794667015087019630673637144422540572481103610249215 x84) x84) (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x84) (>= x84 0))))
(define-fun x52 ((x84 Int)) Bool (=> (and (> 53919893334301279589334030174039261347274288845081144962207220498432 x84) (<= 26959946667150639794667015087019630673637144422540572481103610249216 x84)) (= (x423 26959946667150639794667015087019630673637144422540572481103610249215 x84) (- x84 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x865 ((x84 Int) (x1158 Int)) Bool (and (>= x1158 0) (= x84 (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x1158) (x423 26959946667150639794667015087019630673637144422540572481103610249215 x84)))))
(define-fun x1537 ((x84 Int) (x1512 Int)) Bool (and (x52 x84) (x73 x84) (x421 x84) (x865 x84 x1512) (x1306 x84)))
(define-fun x443 ((x84 Int) (x1512 Int)) Bool (and (x1537 x84 x1512) (x787 x84 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1065 ((x84 Int)) Bool (= (x423 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x423 115792089237316195423570985008687907853269984665640564039457584007913129639904 x84)) (x423 115792089237316195423570985008687907853269984665640564039457584007913129639904 x84)))
(define-fun x433 ((x84 Int)) Bool (=> (and (>= x84 0) (> 32 x84)) (= 0 (x423 115792089237316195423570985008687907853269984665640564039457584007913129639904 x84))))
(define-fun x623 ((x84 Int) (x1158 Int) (x538 Int) (x574 Int)) Bool (and (<= 0 x574) (= (* x538 32) (x423 115792089237316195423570985008687907853269984665640564039457584007913129639904 x84)) (<= 0 x1158) (>= x538 0) (= x84 (+ x1158 (* 32 x538) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x574))) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x538) (< x574 1) (> 32 x1158)))
(define-fun x1404 ((x84 Int) (x1309 Int) (x1480 Int) (x11 Int)) Bool (and (x1065 x84) (x433 x84) (x623 x84 x1309 x1480 x11)))
(define-fun x1438 ((x84 Int) (x1309 Int) (x1480 Int) (x11 Int)) Bool (and (x1404 x84 x1309 x1480 x11) (x787 x84 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x252 ((x505 Int)) Int (x45 x505))
(define-fun x474 ((x505 Int)) Int (ite (= 128 x505) x601 (x1361 x505)))
(define-fun x1409 ((x505 Int)) Int (ite (and (<= 160 x505) (< x505 (+ x668 160))) (x45 (+ (- x505 160) x613)) (x474 x505)))
(define-fun x686 ((x505 Int)) Int (ite (= x505 x1104) 0 (x1409 x505)))
(define-fun x1400 ((x505 Int)) Int (ite (and (> (+ x502 x685) x505) (<= x502 x505)) (x45 (+ (- x505 x502) x863)) (x565 x505)))
(define-fun x297 ((x505 x594)) Int (ite (= x505 x1057) x991 (x683 x505)))
(define-fun x849 ((x505 x594)) Int (ite (= x505 x209) x991 (x683 x505)))
(define-fun x1499 ((x505 x594)) Int (ite (= x505 x1282) x991 (x170 x505)))
(define-fun x537 ((x505 x594)) Int (ite (= x681 x505) x991 (x170 x505)))
(define-fun x1467 ((x505 x594)) Int (ite (and x77 x447) (x170 x505) (ite (and x1311 x1103) (x683 x505) (ite (and (not x487) x953) (x1499 x505) (x537 x505)))))
(define-fun x211 ((x505 x594)) Int (ite (= x1288 x505) x1132 (x841 x505)))
(define-fun x501 ((x505 x594)) Int (ite (= x505 x806) x31 (x944 x505)))
(define-fun x1318 ((x505 x594)) Int (ite (and x953 (not x487)) (x501 x505) (x944 x505)))
(define-fun x9 ((x505 x594)) Int (ite (and x77 x447) (x944 x505) (ite (and x1103 x1311) (x841 x505) (x1318 x505))))
(define-fun x879 ((x505 x594)) Int (ite (= x868 x505) x1488 (x762 x505)))
(define-fun x249 ((x505 x594)) Int (ite (= x505 x328) x1565 (x1089 x505)))
(define-fun x275 ((x505 x594)) Int (ite (and x77 x447) (x1089 x505) (ite (and x1103 x1311) (x762 x505) (ite (and x1498 x953) (x1089 x505) (x249 x505)))))
(define-fun x979 ((x505 x594)) Int (ite (= x774 x505) x991 (x293 x505)))
(define-fun x628 ((x505 x594)) Int (ite (= x630 x505) x991 (x293 x505)))
(define-fun x1509 ((x505 x594)) Int (ite (= x830 x505) x991 (x293 x505)))
(define-fun x140 ((x505 x594)) Int (ite (= x505 x467) x991 (x650 x505)))
(define-fun x664 ((x505 x594)) Int (ite (= x1365 x505) x991 (x650 x505)))
(define-fun x980 ((x505 x594)) Int (ite (= x505 x312) x991 (x650 x505)))
(define-fun x234 ((x505 x594)) Int (ite (and x77 x447) (x650 x505) (ite (and x1103 x1311) (x293 x505) (ite (and x730 (not x899) (not x224)) (x140 x505) (ite (and (not x899) x224 x730) (x664 x505) (x980 x505))))))
(define-fun x172 ((x505 x594)) Int (ite (= x505 x1369) x905 (x1293 x505)))
(define-fun x599 ((x505 x594)) Int (ite (= x505 x403) x222 (x513 x505)))
(define-fun x1396 ((x505 x594)) Int (ite (and x77 x447) (x513 x505) (ite (and x1103 x1311) (x1293 x505) (ite (and x730 x1021) (x513 x505) (x599 x505)))))
(define-fun x162 ((x505 x594)) Int (ite (= x924 x505) x1417 (x1072 x505)))
(define-fun x1135 ((x505 x594)) Int (ite (= x348 x505) x1331 (x1332 x505)))
(define-fun x1046 ((x505 x594)) Int (ite (and x730 (not x899) (not x224)) (x1135 x505) (x1332 x505)))
(define-fun x1371 ((x505 x594)) Int (ite (and x77 x447) (x1332 x505) (ite (and x1311 x1103) (x1072 x505) (x1046 x505))))
(define-fun x1128 ((x505 x594)) Int (ite (= x616 x505) x799 (x1204 x505)))
(define-fun x1123 ((x505 x594)) Int (ite (= x505 x341) x851 (x453 x505)))
(define-fun x1291 ((x505 x594)) Int (ite (and x447 x77) (x422 x505) (ite (and x1103 x1311) (x766 x505) (ite (and (not x666) x1460 (not x1192) x953) (x453 x505) (ite (and x953 (not x666) (not x1460)) (x422 x505) (ite (and x666 x953) (x422 x505) (x1123 x505)))))))
(define-fun x1050 ((x505 Int)) Int (ite (= x1435 x505) x1386 (x1566 x505)))
(define-fun x1270 ((x505 Int)) Int (ite (= x589 x505) x503 (x1050 x505)))
(define-fun x1500 ((x505 Int)) Int (ite (and x314 x808) (x1566 x505) (x1270 x505)))
(define-fun x1088 ((x505 Int)) Int (ite (= x928 x505) x724 (x1500 x505)))
(define-fun x704 ((x505 Int)) Int (ite (= x1198 x505) x1513 (x942 x505)))
(define-fun x1567 ((x505 Int)) Int (ite (= x505 x436) x848 (x337 x505)))
(define-fun x364 ((x505 Int)) Int (ite (= x669 x505) x767 (x1567 x505)))
(define-fun x309 ((x505 Int)) Int (ite (and x730 (not x899) (not x224)) (x364 x505) (ite (and (not x899) x224 x730) (x364 x505) (x337 x505))))
(define-fun x367 ((x505 Int)) Int (ite (= x505 x218) x876 (x309 x505)))
(define-fun x142 ((x505 Int)) Int (ite (= x505 x386) x175 (x1503 x505)))
(define-fun x282 ((x505 Int)) Int (ite (and x447 x77) (x337 x505) (ite (and x1103 x1311) (x1566 x505) (ite (and (not x1192) x953 x1460 (not x666)) (x1503 x505) (ite (and x953 (not x666) (not x1460)) (x319 x505) (ite (and x666 x953) (x319 x505) (x142 x505)))))))
(define-fun x920 ((x505 Int)) Int (ite (= x33 x505) x1315 (x282 x505)))
(define-fun x1165 ((x505 Int)) Int (ite (= x8 x505) x1269 (x920 x505)))
(define-fun x1031 ((x505 Int)) Int (ite (= x505 x366) x696 (x1165 x505)))
(define-fun x119 ((x505 Int)) Int (ite (= x505 x187) x1249 (x1031 x505)))
(define-fun x122 ((x505 Int)) Int (ite (= x505 x308) 32 (x119 x505)))
(define-fun x261 ((x505 Int)) Int (ite (= x728 x505) x847 (x984 x505)))
(define-fun x593 ((x505 Int)) Int (ite (= x571 x505) 0 (x918 x505)))
(define-fun x1325 ((x505 Int)) Int (ite (= 0 x505) 1 (x1193 x505)))
(define-fun x444 ((x505 Int)) Int (ite (= x505 0) 1 (x1193 x505)))
(define-fun x742 ((x505 Int)) Int (ite (and x196 x711) (x1325 x505) (x444 x505)))
(define-fun x373 ((x505 Int)) Int (ite (= x1514 x505) x1317 (x1252 x505)))
(define-fun x1533 ((x505 Int)) Int (ite (= x505 x1514) x695 (x1252 x505)))
(define-fun x952 ((x505 Int)) Int (ite (= x505 x1514) x528 (x1441 x505)))
(define-fun x545 ((x505 Int)) Int (ite (and (<= x1272 x505) (> (+ x528 x1272) x505)) (x742 (+ 0 (- x505 x1272))) (x952 x505)))
(define-fun x809 ((x505 Int)) Int (ite (and (not x1535) x1560) (x545 x505) (x1441 x505)))
(define-fun x1208 ((x505 Int)) Int (ite (= x505 x267) x744 (x809 x505)))
(define-fun x1258 ((x505 Int)) Int (ite (= x649 x505) x563 (x1208 x505)))
(define-fun x1418 ((x505 Int)) Int (ite (= x505 x229) x1452 (x1258 x505)))
(define-fun x1507 ((x505 Int)) Int (ite (= x505 x900) x782 (x1418 x505)))
(define-fun x1425 ((x505 Int)) Int (ite (= x505 x1122) 32 (x1507 x505)))
(define-fun x575 ((x505 Int)) Int (ite (= x505 x295) x968 (x541 x505)))
(define-fun x396 ((x505 Int)) Int (ite (= x505 x710) 0 (x164 x505)))
(define-fun x1189 ((x505 x594)) Int (ite (= (x998 274184521717934524641157099916833587206) x505) x929 (x1004 x505)))
(define-fun x281 ((x505 x594)) Int (ite (= (x998 x413) x505) x882 (x1189 x505)))
(define-fun x1205 ((x505 x594)) Int (ite (= (x998 x413) x505) x1350 (x281 x505)))
(define-fun x1448 ((x505 x594)) Int (ite (= x505 (x998 274184521717934524641157099916833587206)) x982 (x1205 x505)))
(define-fun x507 ((x505 x594)) Int (ite (= x505 (x998 274184521717934524641157099916833587206)) x969 (x1448 x505)))
(define-fun x104 ((x505 x594)) Int (ite (= x505 (x998 x625)) x957 (x507 x505)))
(define-fun x1398 ((x505 x594)) Int (ite (= x307 x505) x80 (x120 x505)))
(define-fun x25 ((x505 x594)) Int (ite (= x505 x923) x313 (x1398 x505)))
(define-fun x15 ((x505 x594)) Int (ite (and x196 x711) (x25 x505) (x120 x505)))
(define-fun x100 ((x505 x594)) Int (ite (= x505 x454) x113 (x15 x505)))
(define-fun x1048 ((x505 Int)) Int (ite (= 0 x505) 1 (x997 x505)))
(define-fun x393 ((x505 Int)) Int (ite (= x505 x1008) x886 (x641 x505)))
(define-fun x896 ((x505 x594)) Int (ite (= x212 x505) x506 (x752 x505)))
(define-fun x911 ((x505 x594)) Int (ite (= x505 x1301) x1444 (x896 x505)))
(define-fun x1092 ((x505 x594)) Int (ite (and x711 x196) (x752 x505) (x911 x505)))
(define-fun x434 ((x505 x594)) Int (ite (= x881 x505) x260 (x1092 x505)))
(define-fun x439 ((x505 Int)) Int (ite (= 0 x505) 1 (x997 x505)))
(define-fun x258 ((x505 Int)) Int (ite (= x1008 x505) x1310 (x641 x505)))
(define-fun x1177 ((x505 Int)) Int (ite (and x379 x1093) (x1048 x505) (x439 x505)))
(define-fun x269 ((x505 x594)) Int (ite (= x505 (x998 x625)) x1532 (x104 x505)))
(define-fun x1445 ((x505 Int)) Int (ite (= x505 x1008) x230 (x823 x505)))
(define-fun x529 ((x505 Int)) Int (ite (and (<= x1275 x505) (< x505 (+ x1275 x230))) (x1177 (+ 0 (- x505 x1275))) (x1445 x505)))
(define-fun x1101 ((x505 Int)) Int (ite (and x913 x1180) (x823 x505) (x529 x505)))
(define-fun x581 ((x84 Int)) Bool (=> (and (not (= x84 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x84)) (not (= x84 2743102681)) (not (= x84 2418364589)) (not (= x84 649617121)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x84)) (not (= 2868243304 x84)) (not (= 87118632 x84)) (not (= x84 2512682246)) (not (= x84 1517119036)) (not (= 1986467848 x84)) (not (= 274184521717934524641157099916833587214 x84)) (not (= 3123789364 x84)) (not (= 1000000000000000000 x84)) (not (= 274184521717934524641157099916833587218 x84)) (not (= x84 2960351575)) (not (= 69947311 x84)) (not (= x84 635128645)) (not (= x84 2764855426)) (not (= 2532887486 x84)) (not (= 2835717307 x84)) (not (= 274184521717934524641157099916833587206 x84)) (not (= 1461501637330902918203684832716283019655932542975 x84)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x84)) (not (= 604800 x84)) (not (= x84 142201243)) (not (= x84 826074471)) (not (= 2258409472 x84)) (not (= 2798343961 x84)) (not (= 2939843472 x84)) (not (= 18446744073709551615 x84)) (not (= x84 468353030)) (not (= 115792089237316195423570985008687907853269984665640564039457 x84)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x84)) (not (= x84 1968616202)) (not (= x84 2514000705)) (< 10000 x84) (not (= x84 2211524764)) (not (= 2690754053 x84)) (not (= x84 759532456)) (not (= 2061678023 x84)) (not (= x84 911411945)) (not (= x84 2293535753)) (not (= x84 1889567281))) (not ((_ is x856) (x998 x84)))))
(assert (x74 x1362))
(assert (x74 x320))
(assert (x74 x578))
(assert (x1303 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x74 x303))
(assert (x74 x1247))
(assert (= (x1361 x712) 0))
(assert (= (x823 x1379) (ite (and x1093 x379) (x393 x1379) (x258 x1379))))
(assert (x581 x278))
(assert (x74 x555))
(assert (x74 x1474))
(assert (= (ite (= x897 x569) x1247 (x1088 x569)) (x1062 x569)))
(assert (= (=> (and (= (x683 x947) x183) (<= x183 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x183) x586) (<= 0 x183) (= x947 (x123 (x998 x463) x1337 0)) (= x1337 (x123 (x998 x885) (x856 6) 0)) (= (x423 1461501637330902918203684832716283019655932542975 x60) x463)) (and (=> (and (not x586) (= x885 x415)) x1207) (=> x586 x1489))) x457))
(assert (x74 x957))
(assert (= (ite (= x1433 x386) x514 (x319 x386)) (x1503 x386)))
(assert (= (x480 (x998 x198)) x198))
(assert (x74 x219))
(assert (x74 x1058))
(assert (x74 x20))
(assert (= (x480 (x998 x1458)) x1458))
(assert (= (x111 x776) (ite (= x776 x1030) x81 (x1429 x776))))
(assert (= (x944 x158) (ite (and x1542 x854) (x841 x158) (x211 x158))))
(assert (= (x984 x1379) (ite (= x231 x1379) x1075 (x111 x1379))))
(assert (x581 x1408))
(assert (= (ite (= x1379 x1397) x219 (x845 x1379)) (x1568 x1379)))
(assert (x74 x463))
(assert (x74 x1485))
(assert (= (ite (= x897 x900) x1247 (x1088 x900)) (x1062 x900)))
(assert (= (x480 (x998 x1298)) x1298))
(assert (x74 x1190))
(assert (x74 x1152))
(assert (= (ite (and x962 x901 (not x526) x852 x1527 x1146) (x541 x391) (ite (and x962 x1146 (not x1527) x852 x901) (x1568 x391) (ite (and x962 (not x901) x852 x1146) (x845 x391) (ite (and x962 (not x1146) x852) (x1070 x391) (x575 x391))))) (x164 x391)))
(assert (= (x856 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x998 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x353 (=> (= (> x885 0) x818) (and (=> (not x818) x921) (=> x818 x1442)))))
(assert (x74 x177))
(assert (= (x1062 x361) (ite (= x897 x361) x1247 (x1088 x361))))
(assert (=> (<= x191 10000) (= (x998 x191) (x856 x191))))
(assert (= (=> (= x609 x1120) x190) x1221))
(assert (x74 x873))
(assert (=> (<= x1339 10000) (= (x998 x1339) (x856 x1339))))
(assert (x74 x89))
(assert (x74 x876))
(assert (x74 x272))
(assert (x74 x1027))
(assert (x74 x1175))
(assert (= x903 x250))
(assert (x581 x438))
(assert (x74 x306))
(assert (x74 x1554))
(assert (= (x918 x1379) (ite (and (not x1267) x1432 x1434 x961 x1090 x1569) (x984 x1379) (ite (and (not x1090) x1432 x1569 x961 x1434) (x111 x1379) (ite (and x1432 (not x961) x1434 x1569) (x1429 x1379) (ite (and x1569 (not x1434) x1432) (x1378 x1379) (x261 x1379)))))))
(assert (= (ite (and x1542 x1538 (not x549) (not x1125)) (x1204 x341) (ite (and (not x549) x1542 (not x1538)) (x766 x341) (ite (and x1542 x549) (x766 x341) (x1128 x341)))) (x422 x341)))
(assert (= (x998 2532887486) (x856 2532887486)))
(assert (x74 x10))
(assert (x74 x989))
(assert (x581 x125))
(assert (=> (<= x94 10000) (= (x998 x94) (x856 x94))))
(assert (= (x984 x1526) (ite (= x1526 x231) x1075 (x111 x1526))))
(assert (x74 x279))
(assert (= (x998 2798343961) (x856 2798343961)))
(assert (x74 x712))
(assert (x74 x907))
(assert (x74 x1464))
(assert (x74 x500))
(assert (= (x1252 x1529) (ite (and x1569 (not x1244) x1432) (x918 x1529) (x593 x1529))))
(assert (x74 x148))
(assert (= (x1566 x1526) (ite (and x1238 x523) (x565 x1526) (x1400 x1526))))
(assert (x74 x553))
(assert (= (x480 (x998 x635)) x635))
(assert (x74 x870))
(assert (x74 x1049))
(assert (=> (>= 10000 x1285) (= (x998 x1285) (x856 x1285))))
(assert (x581 x738))
(assert (= x1364 x193))
(assert (= (x480 (x998 x870)) x870))
(assert (= (x1361 x765) 0))
(assert (= (ite (and (not x1244) x1432 x1569) (x918 x75) (x593 x75)) (x1252 x75)))
(assert (= (x480 (x998 x203)) x203))
(assert (= x1542 (or (and (not x520) x1419) x1463)))
(assert (= x675 (=> (and (= x1209 (= 0 x470)) (<= 0 x470) (= (x423 1461501637330902918203684832716283019655932542975 x60) x1223) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x470) (= (x423 1461501637330902918203684832716283019655932542975 x772) x79) (= x59 (x123 (x998 x79) x182 0)) (= (x123 (x998 x1223) x287 0) x182) (= x470 (x650 x59)) (= (x123 (x998 x786) (x856 7) 0) x287)) (and (=> (and (not x1209) (= x786 x609)) x1221) (=> (and (not x779) x1209 (= x779 (< 0 x1327)) (= (x1126 (- x786 1)) x1327)) x329)))))
(assert (= (x1566 x361) (ite (and x523 x1238) (x565 x361) (x1400 x361))))
(assert (x74 x143))
(assert (=> (>= 10000 x88) (= (x998 x88) (x856 x88))))
(assert (x74 x626))
(assert (= (x1503 x713) (ite (= x713 x1433) x514 (x319 x713))))
(assert (= (=> (and (or (and (= x543 0) x759 (= x222 0)) (and (<= x1232 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x558 (x423 1461501637330902918203684832716283019655932542975 x60)) (= x874 (x123 (x998 x558) x405 0)) (= (x423 1461501637330902918203684832716283019655932542975 x772) x1201) (= x1232 (x513 x519)) (= x222 x1232) (= x543 1) (not x759) (<= 0 x1232) (= x405 (x123 (x998 x1120) (x856 9) 0)) (= (x123 (x998 x1201) x874 0) x519))) (= (= x1120 0) x759)) x943) x190))
(assert (x74 x1160))
(assert (= (x998 2690754053) (x856 2690754053)))
(assert (x581 274184521717934524641157099916833587218))
(assert (= (x480 (x856 1986467848)) 1986467848))
(assert (x74 x516))
(assert (x74 x1253))
(assert (= x315 (x480 (x998 x315))))
(assert (x74 x1388))
(assert (= (x1089 x875) (ite (and x1542 x265) (x762 x875) (x879 x875))))
(assert (x74 x909))
(assert (x74 x1304))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x480 (x856 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (= (ite (= x1030 x361) x81 (x1429 x361)) (x111 x361)))
(assert (= x971 (=> (= x1023 (< 0 x885)) (and (=> x1023 x457) (=> (not x1023) x1519)))))
(assert (= 274184521717934524641157099916833587214 (x480 (x856 274184521717934524641157099916833587214))))
(assert (x74 x1132))
(assert (= x171 x336))
(assert (x74 x1257))
(assert (x74 x1225))
(assert (x74 x1171))
(assert (=> (>= 10000 x870) (= (x856 x870) (x998 x870))))
(assert (x74 x885))
(assert (= (ite (= x229 x1403) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1425 x229)) (x1070 x229)))
(assert (= (ite (= x1526 x1403) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1425 x1526)) (x1070 x1526)))
(assert (=> (<= x553 10000) (= (x998 x553) (x856 x553))))
(assert (x74 x392))
(assert (x74 x1164))
(assert (x74 x260))
(assert (= (x1252 x713) (ite (and x1569 x1432 (not x1244)) (x918 x713) (x593 x713))))
(assert (x74 x1458))
(assert (x74 x589))
(assert (x74 x1266))
(assert (x74 x534))
(assert (= (or (and (not x1240) x1142) (and x539 (not x302))) x494))
(assert (x74 x1279))
(assert (=> (>= 10000 x431) (= (x998 x431) (x856 x431))))
(assert (x581 x1168))
(assert (= x527 (=> (and (= x1240 (= x620 0)) (<= x620 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x123 (x998 x1111) (x856 7) 0) x1354) (= x620 (x293 x300)) (>= x620 0) (= x878 (x123 (x998 x1179) x1354 0)) (= x300 (x123 (x998 x83) x878 0)) (= (x423 1461501637330902918203684832716283019655932542975 x772) x83) (= x1179 (x423 1461501637330902918203684832716283019655932542975 x60))) (and (=> (and (= x239 (> x1243 0)) (not x239) x1240 (= (x1126 (- x1111 1)) x1243)) x921) (=> (and (not x1240) (= x1111 x89)) x986)))))
(assert (= (ite (= x897 x713) x1247 (x1088 x713)) (x1062 x713)))
(assert (x74 x1104))
(assert (=> (>= 10000 x1130) (= (x998 x1130) (x856 x1130))))
(assert (x74 x1272))
(assert (x74 x996))
(assert (x74 x678))
(assert (x74 x533))
(assert (x1303 x772))
(assert (x581 x983))
(assert (= (x422 x825) (ite (and x1542 (not x549) (not x1125) x1538) (x1204 x825) (ite (and (not x1538) x1542 (not x549)) (x766 x825) (ite (and x549 x1542) (x766 x825) (x1128 x825))))))
(assert (= 3123789364 (x480 (x856 3123789364))))
(assert (x74 x889))
(assert (= (=> (and (= x115 (x1291 x825)) (= (x123 (x998 x655) (x856 4) 0) x757) (<= x1160 1461501637330902918203684832716283019655932542975) (not (= x629 2293535753)) (>= 1461501637330902918203684832716283019655932542975 x560) (= x1060 (x123 (x998 x1160) x757 0)) (< x629 2690754053) (= 2532887486 x629) (> x603 0) (not (< x629 2293535753)) (not (= 2512682246 x629)) (= x115 x1376) (= x825 (x123 (x998 x1164) x893 0)) (not (= 2418364589 x629)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x115) (< x629 2960351575) (<= x1164 1461501637330902918203684832716283019655932542975) (= (x895 (x998 274184521717934524641157099916833587206)) x603) (= (x123 (x998 x560) x1060 0) x893) (>= x115 0)) x739) x978))
(assert (= x19 (=> (and (> x985 x1117) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1279) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x906) (= (x262 x1497) x876) (= x626 (x423 1461501637330902918203684832716283019655932542975 x60)) (= x937 (x1318 x1426)) (= (x423 1461501637330902918203684832716283019655932542975 x772) x1019) (>= x1279 0) (= (x319 x1550) x1230) (= (= 0 x451) x666) (= (x477 (+ 32 x218)) x1550) (= (x477 (+ 2 x885)) x985) (= (= 0 x1119) x487) (= x880 (x123 (x998 x129) x399 0)) (or x1498 (and (= (x423 1461501637330902918203684832716283019655932542975 x60) x114) (not x1498) (= x328 (x123 (x998 x114) x1216 0)) (= x1216 (x123 (x998 x1237) (x856 10) 0)))) (or x666 (and (= x578 (x423 x95 x70)) (= x1195 (mod (* 1000000000000000000 x451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 0 x578) (> x937 0) (= x497 (div x1195 x937)) (= x95 1) (= x70 (ite (> x451 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= x1460 (> x601 0)) (or (not x1460) (and (= x935 (x123 (x998 x10) x964 0)) (= x451 x803) (= x1107 (x123 (x998 x1237) (x856 4) 0)) (= x708 x242) (= (x123 (x998 x1237) (x856 11) 0) x1276) (= x338 (x422 x935)) (= x20 (x422 x1571)) (> x1074 0) (= (x423 1461501637330902918203684832716283019655932542975 x60) x407) (= (> x601 1) x1192) (= x38 (x123 (x998 x1002) x195 0)) (= x1002 (x45 x16)) (= (x123 (x998 x916) x1239 0) x1571) (< 0 x601) (>= 1461501637330902918203684832716283019655932542975 x916) (= (x423 1461501637330902918203684832716283019655932542975 x772) x1458) (= x221 x1185) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1185 x708)) (= x613 x16) (= (x123 (x998 x751) x1261 0) x964) (or (not x1192) (and (= x175 (+ x871 x1401)) (= (x477 (+ 64 x1454)) x1477) (= x1333 (x45 x1477)) (= x299 (x45 x1477)) (< (+ x118 x624) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x263 (> x601 2)) (<= x1333 1461501637330902918203684832716283019655932542975) (= (x123 (x998 x299) x547 0) x136) (= x568 (x123 (x998 x335) x253 0)) (<= x270 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 1 x601) (>= x382 0) (= x915 (x123 (x998 x1333) x869 0)) (= x253 (x123 (x998 x1237) (x856 4) 0)) (= x382 0) x1192 (= (x123 (x998 x35) x1087 0) x547) (= x215 (x453 x341)) (= (x423 1461501637330902918203684832716283019655932542975 x772) x35) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x270 x497)) (= (x123 (x998 x810) x1523 0) x869) (= x345 (x123 (x998 x418) x568 0)) (= (x423 1461501637330902918203684832716283019655932542975 x60) x1289) (= x1523 (x123 (x998 x1237) (x856 11) 0)) (not x263) (= x46 x215) (= (x464 x915) x270) (= x384 (* x270 x497)) (<= x435 1461501637330902918203684832716283019655932542975) (= x851 (+ x1166 x46)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x382) (< 1 x601) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x215) (= (x123 (x998 x1289) x535 0) x1087) (= x418 (x423 1461501637330902918203684832716283019655932542975 x772)) (<= x299 1461501637330902918203684832716283019655932542975) (= x535 (x123 (x998 x1237) (x856 4) 0)) (= x624 (div x384 1000000000000000000)) (= x341 (x123 (x998 x435) x345 0)) (= x624 x871) (= x382 (x453 x136)) (= (x45 x1477) x435) (= x1166 x451) (< (+ x215 x451) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x335 (x423 1461501637330902918203684832716283019655932542975 x60)) (= x223 (x1503 x713)) (> x601 1) (= x1401 x118) (<= 0 x270) (> x223 1) (= x810 (x423 1461501637330902918203684832716283019655932542975 x60)) (<= 0 x215) (= x386 (x477 (+ x837 192))) (= (x1503 x386) x118))) (= (* x381 x497) x846) (= x10 (x45 x16)) (= x514 (+ x242 x221)) (>= x20 0) (= (x464 x38) x381) (= (x123 (x998 x862) x1276 0) x195) x1460 (>= x381 0) (= x1261 (x123 (x998 x148) x1107 0)) (< (* x497 x381) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x148 (x423 1461501637330902918203684832716283019655932542975 x60)) (>= 1461501637330902918203684832716283019655932542975 x1002) (= x1296 (x123 (x998 x407) x598 0)) (= 0 x338) (= x339 x20) (= (x319 x1433) x1185) (= x1239 (x123 (x998 x1458) x1296 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x381) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x338) (= x1074 (x319 x713)) (<= x20 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x601 0) (>= x338 0) (= (x423 1461501637330902918203684832716283019655932542975 x60) x862) (= x708 (div x846 1000000000000000000)) (<= x10 1461501637330902918203684832716283019655932542975) (= x751 (x423 1461501637330902918203684832716283019655932542975 x772)) (> x601 0) (= (+ x339 x803) x1226) (= (x45 x16) x916) (= (x123 (x998 x1237) (x856 4) 0) x598) (= x1433 (x477 (+ x837 160))) (< (+ x20 x451) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x666))) (>= x906 0) (= (x123 (x998 x1237) (x856 5) 0) x292) (= (x423 1461501637330902918203684832716283019655932542975 x60) x340) (or (and (not x1518) (= 0 x1119)) (and x1518 (or (and (not x185) (= x1349 x991)) (and x185 (= x1349 x637) (= x637 (x319 x1550)))) (= x1049 (x319 x1550)) (= (> x991 x1049) x185) (or (and (= x700 (x319 x218)) (not (< x1349 x700)) (= (x1126 (- x1349 x700)) x989) (= x1119 x989) x783) (and (= (ite (> 604800 x126) x126 604800) x351) (not x783) (= x1119 x351) (= x240 604800) (not (> x1279 x1349)) (= (x1126 (- x1349 x1279)) x126))) (= (= 0 x1279) x783))) (= (x146 x1497 1) x1430) (or (and (= x127 (x123 (x998 x1237) (x856 6) 0)) x487 (= (x123 (x998 x155) x127 0) x681) (= (x423 1461501637330902918203684832716283019655932542975 x60) x155)) (and (= (x123 (x998 x804) x1471 0) x1282) (= (* x1119 x1565) x912) (= x912 x31) (= (x423 1461501637330902918203684832716283019655932542975 x60) x804) (= (x423 1461501637330902918203684832716283019655932542975 x60) x1305) (= (x123 (x998 x1305) x176 0) x806) (= x1471 (x123 (x998 x1237) (x856 6) 0)) (= x176 (x123 (x998 x1237) (x856 5) 0)) (not x487) (< (* x1119 x1565) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x123 (x998 x340) x292 0) x1426) (= x981 (x123 (x998 x1237) (x856 6) 0)) (<= x937 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1046 x987) x451) (<= x876 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x477 (+ x218 64)) x859) (= x906 (x1029 x1430)) (>= x451 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x451) (= (x123 (x998 x1237) (x856 3) 0) x399) (= x129 (x423 1461501637330902918203684832716283019655932542975 x60)) (= (= x169 0) x1498) (= x1497 (x123 (x998 x1237) (x856 1) 0)) (= x1264 (x123 (x998 x626) x981 0)) (= x987 (x123 (x998 x1019) x880 0)) (= x1518 (< x1279 x1230)) (<= 0 x937) (not (= x1237 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x366 x859) (= (x170 x1264) x1279) (>= x876 0)) x1482)))
(assert (x74 x290))
(assert (=> (>= 10000 x1456) (= (x998 x1456) (x856 x1456))))
(assert (x581 x1223))
(assert (x74 x832))
(assert (x74 x1083))
(assert (x74 x389))
(assert (x74 x79))
(assert (x74 x542))
(assert (=> (<= x1388 10000) (= (x998 x1388) (x856 x1388))))
(assert (x74 x391))
(assert (= 0 (x1361 x516)))
(assert (x1438 x1028 x1082 x1541 x1504))
(assert (x74 x1321))
(assert (x74 x1450))
(assert (x581 x108))
(assert (x74 x769))
(assert (= (x845 x1379) (ite (= x1379 x1390) x1439 (x1070 x1379))))
(assert (= x605 (x480 (x998 x605))))
(assert (x74 x717))
(assert (x581 x304))
(assert (= (x480 (x856 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x480 (x856 2061678023)) 2061678023))
(assert (= (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1147)) (= (> x1237 x394) x77) (= x1237 (x477 (+ x885 1)))) (and (=> (and (= x366 x436) x77) x1482) (=> (not x77) x1341))) x1340))
(assert (= x314 x1419))
(assert (=> (>= 10000 x179) (= (x998 x179) (x856 x179))))
(assert (= (and x1081 x110) x892))
(assert (x74 x1069))
(assert (x581 x160))
(assert (x74 x6))
(assert (=> (>= 10000 x298) (= (x856 x298) (x998 x298))))
(assert (x74 x386))
(assert (=> (>= 10000 x885) (= (x856 x885) (x998 x885))))
(assert (x74 x420))
(assert (x74 x351))
(assert (= (x170 x844) (ite (and x1542 x854) (x297 x844) (x849 x844))))
(assert (x74 x218))
(assert (= (x998 2835717307) (x856 2835717307)))
(assert (= (x1252 x1379) (ite (and (not x1244) x1432 x1569) (x918 x1379) (x593 x1379))))
(assert (= (x998 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x856 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x74 x278))
(assert (x74 x266))
(assert (x74 x321))
(assert (x74 x1486))
(assert (x74 x1211))
(assert (= (=> (and (not (> 468353030 x536)) (>= 1461501637330902918203684832716283019655932542975 x1012) (= x473 (x895 (x998 274184521717934524641157099916833587206))) (= 759532456 x536) (<= x1266 1461501637330902918203684832716283019655932542975) (= (x293 x755) x1136) (>= x1136 0) (< x536 2293535753) (< 0 x473) (= (x123 (x998 x1012) x227 0) x276) (= (x123 (x998 x1266) x276 0) x755) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1136) (not (= x536 635128645)) (= x1302 x1136) (not (= 468353030 x536)) (> 911411945 x536) (= x227 (x123 (x998 x960) (x856 7) 0))) (=> (and (= x761 x605) (= x69 x1302) (= x909 x179) (= x1175 x1229)) x233)) x674))
(assert (x74 x851))
(assert (x74 x426))
(assert (= (ite (and (not x549) (not x1125) x1542 x1538) (x942 x1424) (ite (and (not x1538) (not x549) x1542) (x1062 x1424) (ite (and x1542 x549) (x1062 x1424) (x704 x1424)))) (x337 x1424)))
(assert (=> (<= x804 10000) (= (x998 x804) (x856 x804))))
(assert (x443 x785 x343))
(assert (x74 x1327))
(assert (= (x541 x1529) (ite (= x633 x1529) x1124 (x1568 x1529))))
(assert (= (x1252 x1526) (ite (and (not x1244) x1432 x1569) (x918 x1526) (x593 x1526))))
(assert (= x407 (x480 (x998 x407))))
(assert (x74 x267))
(assert (x1303 x736))
(assert (x74 x688))
(assert (= (x480 (x998 x1554)) x1554))
(assert (x74 x689))
(assert (x74 x240))
(assert (x74 x1052))
(assert (= (x337 x765) (ite (and (not x549) x1542 x1538 (not x1125)) (x942 x765) (ite (and x1542 (not x549) (not x1538)) (x1062 x765) (ite (and x1542 x549) (x1062 x765) (x704 x765))))))
(assert (= (x1441 x178) (ite (and x711 x196) (x373 x178) (x1533 x178))))
(assert (= x559 (=> (and (< x614 911411945) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x321) (<= 0 x321) (< x614 468353030) (> x1407 0) (= x395 (x123 (x998 x1102) x1368 0)) (= x327 (x123 (x998 x553) x395 0)) (not (= 87118632 x614)) (= 142201243 x614) (= x891 x321) (not (= x614 69947311)) (> 2293535753 x614) (= (x123 (x998 x1388) (x856 9) 0) x1368) (<= x1102 1461501637330902918203684832716283019655932542975) (= (x1396 x327) x321) (<= x553 1461501637330902918203684832716283019655932542975) (= x1407 (x895 (x998 274184521717934524641157099916833587206)))) (=> (and (= x1016 x909) (= x891 x1450) (= x761 x738) (= x160 x1229)) x967))))
(assert (= x1044 (x480 (x998 x1044))))
(assert (= (x480 (x998 x1102)) x1102))
(assert (= (x480 (x998 x1456)) x1456))
(assert (x74 x61))
(assert (x74 x945))
(assert (=> (<= x1164 10000) (= (x998 x1164) (x856 x1164))))
(assert (= (ite (= x1550 x178) x906 (x367 x178)) (x319 x178)))
(assert (x74 x1037))
(assert (x74 x1331))
(assert (= (x480 (x998 x1408)) x1408))
(assert (x581 x129))
(assert (= x1432 (or x953 (and x1311 x1103) (and x447 x77))))
(assert (x74 x1181))
(assert (x74 x713))
(assert (= (x1429 x75) (ite (= x75 x1251) x484 (x1378 x75))))
(assert (= x1560 (or (and x711 x196) (and x1115 x1106))))
(assert (x74 x560))
(assert (x74 x60))
(assert (x581 x1210))
(assert (x581 x548))
(assert (= (=> (and (= x1478 (< 0 x420)) (= x420 (x1126 (- x1237 1)))) (and (=> (not x1478) x1157) (=> x1478 x1564))) x417))
(assert (=> (<= x780 10000) (= (x998 x780) (x856 x780))))
(assert (= (ite (= x1379 x897) x1247 (x1088 x1379)) (x1062 x1379)))
(assert (x581 x632))
(assert (= x583 (x480 (x998 x583))))
(assert (x74 x1231))
(assert (x74 x113))
(assert (= (ite (= x712 x1251) x484 (x1378 x712)) (x1429 x712)))
(assert (= (x337 x713) (ite (and (not x1125) (not x549) x1542 x1538) (x942 x713) (ite (and (not x1538) x1542 (not x549)) (x1062 x713) (ite (and x549 x1542) (x1062 x713) (x704 x713))))))
(assert (x74 x1195))
(assert (=> (>= 10000 x655) (= (x998 x655) (x856 x655))))
(assert (x74 x241))
(assert (= x1519 (=> (= 0 x315) x1227)))
(assert (= (ite (= x753 x366) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x366)) (x1378 x366)))
(assert (= x139 (x480 (x998 x139))))
(assert (= (ite (= x499 x391) x235 (x1062 x391)) (x942 x391)))
(assert (= (ite (= x1550 x75) x906 (x367 x75)) (x319 x75)))
(assert (= (x650 x59) (ite (and x808 x314) (x979 x59) (ite (and x314 (not x808) x1277) (x628 x59) (x1509 x59)))))
(assert (x74 x632))
(assert (x74 x138))
(assert (x74 x1455))
(assert (= 2868243304 (x480 (x856 2868243304))))
(assert (x74 x83))
(assert (= (x480 (x998 x1237)) x1237))
(assert (= (x998 2939843472) (x856 2939843472)))
(assert (x74 x1234))
(assert (= x810 (x480 (x998 x810))))
(assert (= x627 (and (not x379) x1093)))
(assert (x74 x1043))
(assert (= (x337 x516) (ite (and x1542 (not x549) x1538 (not x1125)) (x942 x516) (ite (and (not x1538) x1542 (not x549)) (x1062 x516) (ite (and x1542 x549) (x1062 x516) (x704 x516))))))
(assert (x74 x1411))
(assert (x74 x605))
(assert (=> (>= 10000 x1544) (= (x856 x1544) (x998 x1544))))
(assert (x74 x114))
(assert (= (x1361 x386) 0))
(assert (x74 x88))
(assert (x74 x1495))
(assert (x74 x1013))
(assert (x74 x1187))
(assert (=> (>= 10000 x1111) (= (x998 x1111) (x856 x1111))))
(assert (= (or (and x962 (not x852)) x913 (and (not x1569) x1432)) x296))
(assert (x74 x1156))
(assert (x74 x715))
(assert (= (x480 (x998 x438)) x438))
(assert (x74 x635))
(assert (x74 x1260))
(assert (=> (<= x932 10000) (= (x856 x932) (x998 x932))))
(assert (x74 x17))
(assert (x74 x436))
(assert (= (and (not x1273) x1150) x735))
(assert (= (x480 (x998 x431)) x431))
(assert (x581 x114))
(assert (= (ite (= x1403 x391) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1425 x391)) (x1070 x391)))
(assert (x581 x1544))
(assert (= (x942 x712) (ite (= x712 x499) x235 (x1062 x712))))
(assert (x74 x1283))
(assert (x74 x458))
(assert (= (x998 2293535753) (x856 2293535753)))
(assert (= (x1429 x1526) (ite (= x1526 x1251) x484 (x1378 x1526))))
(assert (= (ite (= x1379 x633) x1124 (x1568 x1379)) (x541 x1379)))
(assert (x74 x428))
(assert (x74 x381))
(assert (x74 x1251))
(assert (x74 x781))
(assert (x581 x144))
(assert (= x861 (=> (= (> x601 1) x852) (and (=> (and (= x1211 (x1126 (- x1122 x229))) (= x744 (x423 1461501637330902918203684832716283019655932542975 x772)) (= (< 0 x189) x1367) (= x189 (x895 (x998 x625))) x852 (or (and (= x1163 0) (not x1146)) (and x1146 (= x900 x1424) (= x1439 (x1070 x1424)) (= x1008 x1390) (= x901 (> x691 32)) (or (and (= 32 x1163) (not x901)) (and (= (> x691 64) x1527) x901 (or (and (= x1163 64) (not x1527)) (and (= x1526 (x477 (+ 96 x229))) (= (> x691 96) x526) (or (and (not x526) (= 96 x1163)) (and (= x214 (< 128 x691)) (= x295 (x477 (+ 160 x1122))) x526 (= x1529 (x477 (+ x229 128))) (= x1163 128) (= (x541 x1529) x968) (not x214))) x1527 (= x633 (x477 (+ x1122 128))) (= x1124 (x1568 x1526)))) (= x1397 (x477 (+ 96 x1122))) (= x219 (x845 x178)) (= x178 (x477 (+ x229 64))))))) (= x625 (x45 x133)) (= x794 (x423 26959946667150639794667015087019630673637144422540572481103610249215 x1495)) x1367 (= x712 (x477 (+ 192 x837))) (= (x477 (+ 64 x1454)) x133) (or (not x326) (and (= (x477 (+ x1008 x691)) x710) x326)) (= x1495 (x1418 x900)) (> x835 1) (= (x477 (+ 36 x229)) x267) (= x326 (> x1163 x691)) (<= x625 1461501637330902918203684832716283019655932542975) (= x649 (x477 (+ x229 68))) (= x1314 0) (= (x1126 (- x1211 32)) x1452) (> x601 1) (= x1008 (x477 (+ 128 x267))) (= x1403 (x477 (+ 96 x267))) (= (x809 x713) x835) (= x782 (x477 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x794))) (= x900 (x477 (+ 32 x229))) (= x1122 (x477 (+ x229 100))) (= x563 (x809 x712)) (= x1146 (> x691 0)) (= (x1070 x229) x691)) x1297) (=> (not x852) x27)))))
(assert (= (x480 (x998 x1329)) x1329))
(assert (x74 x288))
(assert (=> (>= 10000 x605) (= (x998 x605) (x856 x605))))
(assert (= (ite (= x372 x825) x973 (x766 x825)) (x1204 x825)))
(assert (x787 x180 x736))
(assert (x74 x1316))
(assert (= x1341 (=> (and (= (x123 (x998 x1217) x1200 0) x1263) (= (< 0 x1491) x597) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x721) (= (x650 x1263) x1491) (= x1200 (x123 (x998 x414) x201 0)) (<= 0 x1491) (<= 0 x721) (= (x123 (x998 x1237) (x856 7) 0) x201) (<= x1491 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x721 x1237)) (= (x423 1461501637330902918203684832716283019655932542975 x60) x414) (= (x423 1461501637330902918203684832716283019655932542975 x772) x1217)) (and (=> (not x597) x322) (=> (and (= x197 (x423 1461501637330902918203684832716283019655932542975 x772)) (= (x123 (x998 x1245) x1116 0) x1343) (= x1530 (x513 x508)) (>= x1530 0) (= x508 (x123 (x998 x197) x1343 0)) x597 (= (x423 1461501637330902918203684832716283019655932542975 x60) x1245) (= x1530 x222) (= x1116 (x123 (x998 x1237) (x856 9) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1530) (= x543 0)) x943)))))
(assert (= (ite (= x1550 x776) x906 (x367 x776)) (x319 x776)))
(assert (= 1968616202 (x480 (x856 1968616202))))
(assert (= (x565 x178) (ite (= x713 x178) x601 (x686 x178))))
(assert (x74 x1020))
(assert (= (x1062 x712) (ite (= x712 x897) x1247 (x1088 x712))))
(assert (x1303 1461501637330902918203684832716283019655932542975))
(assert (x74 x203))
(assert (= (x337 x361) (ite (and x1538 x1542 (not x549) (not x1125)) (x942 x361) (ite (and (not x549) x1542 (not x1538)) (x1062 x361) (ite (and x1542 x549) (x1062 x361) (x704 x361))))))
(assert (=> (>= 10000 x548) (= (x998 x548) (x856 x548))))
(assert (x74 x919))
(assert (= (ite (= x713 x1550) x906 (x367 x713)) (x319 x713)))
(assert (x74 x1454))
(assert (=> (>= 10000 x117) (= (x856 x117) (x998 x117))))
(assert (=> (<= x751 10000) (= (x856 x751) (x998 x751))))
(assert (x74 x1563))
(assert (x74 x375))
(assert (x74 x522))
(assert (= (ite (= x1526 x1390) x1439 (x1070 x1526)) (x845 x1526)))
(assert (x74 x497))
(assert (x74 x215))
(assert (= (x1503 x765) (ite (= x1433 x765) x514 (x319 x765))))
(assert (x581 x1554))
(assert (=> (<= x463 10000) (= (x856 x463) (x998 x463))))
(assert (= x1463 (or x50 x671)))
(assert (x74 x53))
(assert (= (x480 (x998 x1479)) x1479))
(assert (x581 x191))
(assert (x581 x1485))
(assert (=> (<= x426 10000) (= (x856 x426) (x998 x426))))
(assert (=> (>= 10000 x83) (= (x998 x83) (x856 x83))))
(assert (= (x984 x178) (ite (= x178 x231) x1075 (x111 x178))))
(assert (x74 x36))
(assert (x74 x173))
(assert (=> (<= x542 10000) (= (x856 x542) (x998 x542))))
(assert (x74 x217))
(assert (= (ite (= x1397 x391) x219 (x845 x391)) (x1568 x391)))
(assert (=> (>= 10000 x257) (= (x998 x257) (x856 x257))))
(assert (x74 x315))
(assert (=> (>= 10000 x155) (= (x856 x155) (x998 x155))))
(assert (x74 x1456))
(assert (= 0 (x1361 x776)))
(assert (= x430 (=> (and (= x654 (< 0 x786)) (= x786 (x1126 (- x1237 1)))) (and (=> x654 x675) (=> (not x654) x329)))))
(assert (=> (<= x719 10000) (= (x998 x719) (x856 x719))))
(assert (= (x480 (x998 x533)) x533))
(assert (= (ite (and (not x549) (not x1125) x1538 x1542) (x1204 x136) (ite (and (not x1538) (not x549) x1542) (x766 x136) (ite (and x1542 x549) (x766 x136) (x1128 x136)))) (x422 x136)))
(assert (x74 x361))
(assert (= (x319 x1424) (ite (= x1550 x1424) x906 (x367 x1424))))
(assert (= x906 (x319 x1550)))
(assert (x74 x548))
(assert (= x1412 (x480 (x998 x1412))))
(assert (x581 x413))
(assert (= (ite (= x499 x1198) x235 (x1062 x1198)) (x942 x1198)))
(assert (=> (>= 10000 x689) (= (x856 x689) (x998 x689))))
(assert (x74 x1147))
(assert (x74 x510))
(assert (x581 x960))
(assert (= 2211524764 (x480 (x856 2211524764))))
(assert (= 1000000000000000000 (x480 (x856 1000000000000000000))))
(assert (=> (<= x6 10000) (= (x998 x6) (x856 x6))))
(assert (= (x480 (x998 x1179)) x1179))
(assert (x74 x18))
(assert (= (ite (= x897 x56) x1247 (x1088 x56)) (x1062 x56)))
(assert (x74 x1349))
(assert (x74 x1275))
(assert (x74 x1168))
(assert (x74 x800))
(assert (x74 x68))
(assert (x74 x1210))
(assert (= (ite (= x897 x928) x1247 (x1088 x928)) (x1062 x928)))
(assert (= x626 (x480 (x998 x626))))
(assert (= (x856 1517119036) (x998 1517119036)))
(assert (x74 x925))
(assert (= (ite (and x852 x962 (not x326)) (x164 x391) (x396 x391)) (x641 x391)))
(assert (x581 x1521))
(assert (= x943 (=> (and (= x899 (= x222 0)) (or (and (= (x123 (x998 x521) x356 0) x403) (not x1021) (= x741 (x423 1461501637330902918203684832716283019655932542975 x60)) (= (x123 (x998 x741) x963 0) x356) (= (x423 1461501637330902918203684832716283019655932542975 x772) x521) (= x963 (x123 (x998 x1237) (x856 9) 0))) x1021) (= (= 0 x543) x1021) (or (and (= (x477 (+ 128 x928)) x103) (>= x534 0) (= x1547 (x123 (x998 x1237) (x856 1) 0)) (= x1011 (x123 (x998 x278) x1006 0)) (or (and (= x94 (x423 1461501637330902918203684832716283019655932542975 x60)) (= (x123 (x998 x1156) x1534 0) x1365) (= (x423 1461501637330902918203684832716283019655932542975 x772) x1156) (= x218 x103) (= x1516 (x123 (x998 x1237) (x856 7) 0)) x224 (= (x123 (x998 x94) x1516 0) x1534)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x222 x1380)) (= x955 (* x1380 x222)) (= x1331 x955) (= (x123 (x998 x428) x174 0) x977) (= (x423 1461501637330902918203684832716283019655932542975 x60) x932) (= x843 (x423 1461501637330902918203684832716283019655932542975 x772)) (= (x423 1461501637330902918203684832716283019655932542975 x60) x428) (= (x123 (x998 x149) x703 0) x348) (= (x123 (x998 x1237) (x856 7) 0) x174) (= x103 x218) (= x703 (x123 (x998 x932) x811 0)) (not x224) (= x811 (x123 (x998 x1237) (x856 3) 0)) (= (x423 1461501637330902918203684832716283019655932542975 x772) x149) (= x467 (x123 (x998 x843) x977 0)))) (= (x146 x1547 1) x1056) (<= x767 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x899) (= x375 (x364 x669)) (<= 0 x767) (= x767 (x1029 x1056)) (or (and x1255 (or (and x1097 (= x1362 x855) (= x1362 (x364 x669))) (and (= x855 x991) (not x1097))) (= x1097 (> x991 x1284)) (= x1284 (x364 x669)) (= x1383 (= x534 0)) (or (and (= x1037 (x1126 (- x855 x534))) (= 604800 x303) (= (ite (> 604800 x1037) x1037 604800) x12) (= x12 x1380) (not x1383) (not (< x855 x534))) (and (= (x364 x436) x1234) x1383 (= (x1126 (- x855 x1234)) x1139) (= x1380 x1139) (not (> x1234 x855))))) (and (= x1380 0) (not x1255))) (>= x848 0) (= (x262 x1547) x848) (= (x423 1461501637330902918203684832716283019655932542975 x60) x1329) (= x224 (= x1380 0)) (<= x534 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x669 (x477 (+ 96 x928))) (= x976 (x123 (x998 x1237) (x856 7) 0)) (= (> x375 x534) x1255) (= (x423 1461501637330902918203684832716283019655932542975 x772) x278) (= (x123 (x998 x1329) x976 0) x1006) (= x534 (x650 x1011)) (<= x848 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (= x689 (x423 1461501637330902918203684832716283019655932542975 x772)) (= (x423 1461501637330902918203684832716283019655932542975 x60) x533) (= (x123 (x998 x689) x1143 0) x312) (= (x123 (x998 x1237) (x856 7) 0) x316) (= x218 x436) (= x1143 (x123 (x998 x533) x316 0)) x899))) x55)))
(assert (x74 x382))
(assert (= (x337 x75) (ite (and x1538 x1542 (not x549) (not x1125)) (x942 x75) (ite (and (not x549) x1542 (not x1538)) (x1062 x75) (ite (and x549 x1542) (x1062 x75) (x704 x75))))))
(assert (= x148 (x480 (x998 x148))))
(assert (= (x1503 x1379) (ite (= x1433 x1379) x514 (x319 x1379))))
(assert (=> (<= x960 10000) (= (x998 x960) (x856 x960))))
(assert (x74 x670))
(assert (x74 x105))
(assert (= (x337 x1379) (ite (and x1538 (not x549) (not x1125) x1542) (x942 x1379) (ite (and (not x549) (not x1538) x1542) (x1062 x1379) (ite (and x549 x1542) (x1062 x1379) (x704 x1379))))))
(assert (= (x480 (x998 x916)) x916))
(assert (= (x565 x1198) (ite (= x713 x1198) x601 (x686 x1198))))
(assert (= (ite (= x499 x713) x235 (x1062 x713)) (x942 x713)))
(assert true)
(assert (=> (<= x1152 10000) (= (x998 x1152) (x856 x1152))))
(assert (x74 x1525))
(assert (= (ite (= x1526 x1433) x514 (x319 x1526)) (x1503 x1526)))
(assert (x74 x1372))
(assert (x74 x63))
(assert (x74 x268))
(assert (x74 x1113))
(assert (= (x480 (x856 2532887486)) 2532887486))
(assert (= (or (and x110 (not x1081)) (and x1496 (not x511))) x1561))
(assert (x74 x840))
(assert (= (x480 (x998 x10)) x10))
(assert (x581 x1016))
(assert (x74 x1136))
(assert (x581 x885))
(assert (x74 x1508))
(assert (= (x1361 x75) 0))
(assert (=> (>= 10000 x1245) (= (x856 x1245) (x998 x1245))))
(assert (x74 x180))
(assert (= (ite (and x1538 (not x549) (not x1125) x1542) (x942 x56) (ite (and x1542 (not x1538) (not x549)) (x1062 x56) (ite (and x549 x1542) (x1062 x56) (x704 x56)))) (x337 x56)))
(assert (= x1521 (x480 (x998 x1521))))
(assert (= (=> (and (= x1381 x97) (= x241 (x895 (x998 274184521717934524641157099916833587206))) (<= 0 x97) (<= x97 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x123 (x998 x1044) x459 0) x1242) (not (= 2512682246 x1372)) (= x1372 2532887486) (not (< x1372 2293535753)) (>= 1461501637330902918203684832716283019655932542975 x481) (= (x766 x323) x97) (not (= x1372 2418364589)) (> 2690754053 x1372) (>= 1461501637330902918203684832716283019655932542975 x440) (>= 1461501637330902918203684832716283019655932542975 x1044) (= (x123 (x998 x481) x1242 0) x323) (> 2960351575 x1372) (= (x123 (x998 x440) x1551 0) x459) (= (x123 (x998 x1210) (x856 4) 0) x1551) (> x241 0) (not (= x1372 2293535753))) (=> (and (= x877 (mod (* x601 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x69 x690) (= x907 x922) (> x1260 0) (= x63 x775) (= x1117 x394) (or (and (not x1238) (= (x477 (+ 160 x837)) x502) (= (mod (* x601 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x685)) x1238) (= x1283 (mod (* 32 x601) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x477 (+ x713 x1360)) x1435) (>= 1461501637330902918203684832716283019655932542975 x772) (= x69 x1348) (= (x1126 (- x522 1)) x268) (= (x45 x1454) x601) (= (= 0 x601) x1238) (<= 0 x798) (= x889 x60) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1472) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x863)) (and (> x863 x1472) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1472) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x863)))) (< 163 x863) (<= x798 1461501637330902918203684832716283019655932542975) (= x867 x798) (= x907 x1381) (= (= x61 0) x58) (= (x477 (+ x1283 160)) x713) (= x181 (x477 (+ x877 x613))) (= x1457 x410) (= x1366 0) (= x995 0) (<= 0 x721) (= (<= x863 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (not (= x13 2743102681)) (not (< x522 1)) (< x13 2960351575) (>= x460 0) (or (not x1182) (and (not (< 1 x1131)) (= (> x522 1) x1026) (not (< x522 1)) (or (and x1026 (< 0 x657) (= (< 2 x522) x1493) (< 1 x500) (= x994 (x686 192)) (or (and (= (x686 224) x866) (= x1475 (x423 1461501637330902918203684832716283019655932542975 x866)) (< 2 x1459) (= (< 3 x522) x1212) (< 0 x1064) (= x1064 (x686 128)) (= x476 (x423 1461501637330902918203684832716283019655932542975 x670)) (= x670 (x686 160)) (= x1459 (x686 128)) x1493 (not x1212) (not (= x1475 x476))) (not x1493)) (= x1022 (x423 1461501637330902918203684832716283019655932542975 x994)) (= x758 (x423 1461501637330902918203684832716283019655932542975 x839)) (= (x686 160) x839) (not (= x1022 x758)) (= (x686 128) x500) (= x657 (x686 128))) (not x1026)) (= x1131 (x1126 (- x522 1))) x1182)) (not (< 18446744073709551615 x1465)) (= x772 x544) (not (> x601 18446744073709551615)) (not (= 2690754053 x13)) (= 2939843472 x13) (= x349 (<= x690 x1176)) (= x376 x715) (= 0 x410) (= x1147 x885) (= x676 (and x1061 x1110)) (= (mod (* 32 x601) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x668) (not (< x13 2690754053)) (not (< x394 x885)) (not (= 2798343961 x13)) (>= x63 0) x1492 (= (x477 (+ x1043 35)) x1472) (<= x60 1461501637330902918203684832716283019655932542975) (not (= x13 2764855426)) (= (and x58 x400) x1110) (<= x721 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x63 1461501637330902918203684832716283019655932542975) (= x1454 (x477 (+ 4 x1043))) (= x1462 x991) (not (> 4 x863)) (= x885 x1556) x349 (= x1260 (x895 (x998 274184521717934524641157099916833587206))) (= x1176 x991) (= x394 x720) (= x216 0) (= (= x1348 0) x210) (= (x477 (+ x668 160)) x1104) (= (> x268 0) x1182) (= x1360 (x477 (+ x668 32))) (= x1043 x1465) (<= x460 1461501637330902918203684832716283019655932542975) (= x867 x771) (= x1129 128) (= x61 x653) (= (= 0 x922) x1061) (= (x686 128) x522) (not (> 2293535753 x13)) (not (= 2868243304 x13)) (= x837 (x477 (+ 32 x1283))) (= x1196 0) (> x721 x394) (= x1492 (or x676 (not x210))) (= x60 x832) (not (< x863 x181)) (= x772 x68) (= x613 (x477 (+ 36 x1043))) (= x400 (= 0 x376)) (= x919 (x1126 (- x863 4))) (not (or (> x919 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x919 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x919) true))))) x662)) x1018))
(assert (= (ite (and x314 x820) (x1293 x327) (x172 x327)) (x513 x327)))
(assert (x74 x1202))
(assert (x74 x794))
(assert (x581 x812))
(assert (x74 x751))
(assert (= (ite (= x753 x1379) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x1379)) (x1378 x1379)))
(assert (x74 x729))
(assert (= x1012 (x480 (x998 x1012))))
(assert (= (x480 (x998 x1485)) x1485))
(assert (= x310 x904))
(assert (x1303 x839))
(assert (x74 x270))
(assert (= (x480 (x998 x560)) x560))
(assert (x581 x315))
(assert (x74 x1394))
(assert (= (x480 (x998 x299)) x299))
(assert (x74 x1459))
(assert (= 0 (x1361 x56)))
(assert (x74 x799))
(assert (=> (<= x1237 10000) (= (x998 x1237) (x856 x1237))))
(assert (x581 x1052))
(assert (x74 x1102))
(assert (= (x1503 x900) (ite (= x900 x1433) x514 (x319 x900))))
(assert (= (x480 (x998 x82)) x82))
(assert (x74 x476))
(assert (= 2418364589 (x480 (x856 2418364589))))
(assert (=> (<= x1179 10000) (= (x998 x1179) (x856 x1179))))
(assert (x581 x1083))
(assert (= (ite (= x569 x1433) x514 (x319 x569)) (x1503 x569)))
(assert (= (x984 x776) (ite (= x231 x776) x1075 (x111 x776))))
(assert (x74 x1529))
(assert (x74 x1397))
(assert (= (x480 (x998 x414)) x414))
(assert (= x1364 x1154))
(assert (x74 x271))
(assert (x74 x1054))
(assert (x581 x993))
(assert (= x780 (x480 (x998 x780))))
(assert (=> (<= x440 10000) (= (x998 x440) (x856 x440))))
(assert (x581 x463))
(assert (= x1213 (=> (and (< x1342 2960351575) (not (> 2690754053 x1342)) (= (x123 (x998 x225) x1203 0) x1410) (<= x225 1461501637330902918203684832716283019655932542975) (> x285 0) (>= 1461501637330902918203684832716283019655932542975 x288) (= 2743102681 x1342) (= (x123 (x998 x288) x1536 0) x1203) (= (x1072 x1410) x406) (= x285 (x895 (x998 274184521717934524641157099916833587206))) (<= 0 x406) (not (= 2690754053 x1342)) (not (< x1342 2293535753)) (= x1085 x406) (= x1536 (x123 (x998 x1168) (x856 3) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x406)) (=> (and (= x761 x1044) (= x1085 x653) (= x1045 x481) (= x1229 x1210) (= x909 x440)) x1018))))
(assert (x581 x625))
(assert (= x1111 (x480 (x998 x1111))))
(assert (x581 x1160))
(assert (x74 x1477))
(assert (=> (<= x160 10000) (= (x856 x160) (x998 x160))))
(assert (x74 x770))
(assert (x581 x542))
(assert (=> (<= x139 10000) (= (x998 x139) (x856 x139))))
(assert (= (x1062 x516) (ite (= x516 x897) x1247 (x1088 x516))))
(assert (x74 x810))
(assert (x74 x188))
(assert (= (x565 x1424) (ite (= x713 x1424) x601 (x686 x1424))))
(assert (x74 x719))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x480 (x856 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (=> (<= x741 10000) (= (x998 x741) (x856 x741))))
(assert (x74 x199))
(assert (= (ite (= x900 x1030) x81 (x1429 x900)) (x111 x900)))
(assert (x74 x601))
(assert (x581 x299))
(assert (x74 x1462))
(assert (x74 x1322))
(assert (= (x565 x1433) (ite (= x713 x1433) x601 (x686 x1433))))
(assert (=> (>= 10000 x1017) (= (x856 x1017) (x998 x1017))))
(assert (= x745 (=> (= x898 (= x625 274184521717934524641157099916833587214)) (and (=> (and (not x358) (= x254 (x1092 x1522)) (= x1138 68) (= x1281 x731) (= x1054 x1310) (= x584 (x1126 (- x1138 4))) (= x557 (+ x1402 x577)) (= x96 1) (= x401 x132) (= x132 x1402) (<= x1281 1461501637330902918203684832716283019655932542975) (= x1042 (or (and (> 64 x584) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x584) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x584))) (= (x1126 (- x254 x401)) x260) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x254) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1099) (>= x254 0) (= x1486 x1138) (= x1095 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x132 x1099))) (= (< x254 x132) x1510) (not x1042) (= x1522 (x123 (x998 274184521717934524641157099916833587206) (x856 1) 0)) (not x1095) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x132 x1099)) (>= x1099 0) (= x577 x1099) (= x737 (x123 (x998 x1281) (x856 1) 0)) (= x230 32) (= x881 (x123 (x998 274184521717934524641157099916833587206) (x856 1) 0)) (not (= 2514000705 x1257)) (not (= x1257 826074471)) (= x563 x401) (not (< x1138 4)) (not (= 1889567281 x1257)) (not x1510) (= x769 (x895 (x998 274184521717934524641157099916833587214))) (= (x434 x737) x1099) (= x106 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 649617121 x1257)) (not (= x1257 649617121)) (> x769 0) (= 274184521717934524641157099916833587206 x938) x898 (= x658 274184521717934524641157099916833587206) (= (< x254 x401) x358) (= x1257 2835717307) (= x744 x1281)) x618) (=> (not x898) x409)))))
(assert (x74 x610))
(assert (= x296 x171))
(assert (= (x1429 x765) (ite (= x765 x1251) x484 (x1378 x765))))
(assert (x1303 x70))
(assert (=> (>= 10000 x1505) (= (x998 x1505) (x856 x1505))))
(assert (x74 x103))
(assert (= (ite (= x231 x75) x1075 (x111 x75)) (x984 x75)))
(assert (= 2690754053 (x480 (x856 2690754053))))
(assert (x74 x695))
(assert (= (x480 (x998 x1558)) x1558))
(assert (= x1247 (x1062 x897)))
(assert (x74 x780))
(assert (= x784 x1543))
(assert (= (x1441 x75) (ite (and x196 x711) (x373 x75) (x1533 x75))))
(assert (= x291 (x480 (x998 x291))))
(assert (= (or x805 (and (not x1392) x1377)) x953))
(assert (= (x1566 x569) (ite (and x523 x1238) (x565 x569) (x1400 x569))))
(assert (x74 x1131))
(assert (x74 x786))
(assert (x581 x751))
(assert (= (x1566 x1433) (ite (and x523 x1238) (x565 x1433) (x1400 x1433))))
(assert (= (ite (= x1251 x1529) x484 (x1378 x1529)) (x1429 x1529)))
(assert (= (x480 (x998 x1120)) x1120))
(assert (x581 x288))
(assert (= (ite (= x713 x753) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x713)) (x1378 x713)))
(assert (= (ite (and x1238 x523) (x565 x712) (x1400 x712)) (x1566 x712)))
(assert (x74 x1329))
(assert (= (+ (x480 x1547) 1) (x480 (x146 x1547 1))))
(assert (= x55 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x92) (>= x721 0) (<= x721 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x123 (x998 x781) x362 0) x1250) (= x362 (x123 (x998 x1237) (x856 6) 0)) (= x92 (x170 x1250)) (= x1392 (= x92 0)) (not (> x1237 x721)) (<= 0 x92) (= (x423 1461501637330902918203684832716283019655932542975 x60) x781)) (and (=> x1392 x1167) (=> (and (= x684 (x1089 x687)) (= (x123 (x998 x1237) (x856 10) 0) x1038) (not x1392) (= x687 (x123 (x998 x144) x1038 0)) (<= x684 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x684 x1565) (= 0 x169) (<= 0 x684) (= (x423 1461501637330902918203684832716283019655932542975 x60) x144)) x19)))))
(assert (= (ite (= x1403 x1529) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1425 x1529)) (x1070 x1529)))
(assert (= (x480 (x998 x483)) x483))
(assert (= x972 (x480 (x998 x972))))
(assert (= x336 x540))
(assert (x74 x257))
(assert (x74 x753))
(assert (x74 x544))
(assert (x74 x1491))
(assert (x74 x625))
(assert (= (=> (and (not (= 0 x96)) (= x101 (x1101 x1379)) (= x1180 (= x230 0)) (= (< 0 x101) x727) (or (and (= x1275 (x477 (+ 96 x1122))) (= x1379 x1008) (not x1180)) (and x1180 (= x1379 96))) (= x1532 (x104 (x998 x625))) (= x1149 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 (x998 274184521717934524641157099916833587206)))) (not x116) x1149 (= x116 (< 2 x601)) (or (and (= x391 (x477 (+ 32 x1379))) (> x1355 0) (= x264 (ite x1173 1 0)) (= (x1101 x391) x1355) (= x1173 (not x665)) x727 (= x264 x1355) (= (= x1355 0) x665) (not (or (> x988 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x988 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x988)))) (= (x1101 x1379) x988)) (not x727))) x27) x618))
(assert (= (x1062 x1529) (ite (= x1529 x897) x1247 (x1088 x1529))))
(assert (x74 x370))
(assert (x74 x1370))
(assert (= (=> (= (> x1237 0) x517) (and (=> x517 x243) (=> (not x517) x329))) x322))
(assert (= x1098 (=> (and (= x828 (<= 0 x1345)) (= x882 (x1189 (x998 x413))) (= x1067 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1189 (x998 x413)))) (= (< x1515 115792089237316195423570985008687907853269984665640564039457584007913129639936) x894) (= (x1004 (x998 x413)) x1515) (= x196 (= x413 274184521717934524641157099916833587218)) x828 x894 (= (x1004 (x998 274184521717934524641157099916833587206)) x1345) (= x929 (x1004 (x998 274184521717934524641157099916833587206))) (= x135 x359) x1067) (and (=> (not x196) x1469) (=> (and (= x510 (x1126 (- x732 4))) (not x318) (= x167 x1269) (= 274184521717934524641157099916833587206 x555) (= (x1398 x207) x1476) (= x644 x1476) (<= x1114 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x389) (= x489 (>= (+ x1476 x1320) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x318 (or (and (> 64 x510) (= true (<= x510 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x510))) (= x306 274184521717934524641157099916833587206) (= x1428 (x895 (x998 274184521717934524641157099916833587218))) (= (< x1114 x1320) x701) (not x701) (= x359 x732) (= 68 x732) (not x489) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x220) (<= x566 1461501637330902918203684832716283019655932542975) (>= x1114 0) (= (x123 (x998 x566) (x856 1) 0) x923) (< (+ x1476 x1320) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 32 x528) (> x1428 0) (= (x120 x1218) x1114) x196 (not x357) (= x566 x1347) (not (> 649617121 x256)) (= x256 2835717307) (= x525 x1320) (= (x123 (x998 274184521717934524641157099916833587206) (x856 1) 0) x1218) (not (= 1889567281 x256)) (= x207 (x123 (x998 x566) (x856 1) 0)) (= x167 x1320) (>= x1476 0) (not (= x256 2514000705)) (= x357 (> x167 x1114)) (= x566 x1315) (= (x1126 (- x1114 x167)) x80) (<= x1476 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x313 (+ x525 x644)) (not (> 4 x732)) (= x1317 x1133) (not (= 826074471 x256)) (= (x123 (x998 274184521717934524641157099916833587206) (x856 1) 0) x307) (not (= 649617121 x256))) x1387)))))
(assert (= (ite (= x1550 x361) x906 (x367 x361)) (x319 x361)))
(assert (= (x480 (x998 x440)) x440))
(assert (x581 x1130))
(assert (x74 x1012))
(assert (= x1442 (=> (and (= (x293 x437) x1517) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1517) (= (= x1517 0) x302) (= (x123 (x998 x1298) x333 0) x1413) (= (x123 (x998 x1304) x1413 0) x437) (<= 0 x1517) (= (x123 (x998 x885) (x856 7) 0) x333) (= x1298 (x423 1461501637330902918203684832716283019655932542975 x60)) (= x1304 (x423 1461501637330902918203684832716283019655932542975 x772))) (and (=> (and (= x89 x885) (not x302)) x986) (=> x302 x864)))))
(assert (x74 x1335))
(assert (x74 x973))
(assert (x74 x132))
(assert (= (ite (= x1529 x1433) x514 (x319 x1529)) (x1503 x1529)))
(assert (x581 x626))
(assert (x74 x775))
(assert (= (ite (and x1238 x523) (x565 x1529) (x1400 x1529)) (x1566 x1529)))
(assert (= (ite (= x776 x1251) x484 (x1378 x776)) (x1429 x776)))
(assert (= (x480 (x998 x279)) x279))
(assert (= x1559 x193))
(assert (x581 x804))
(assert (= (x480 (x998 x1181)) x1181))
(assert (x74 x761))
(assert (= (=> (and (= x770 x1376) (= x1295 x1546) (= x244 x1040) (= (<= x1295 x1040) x469)) (and (=> (and (= x1300 (>= x617 x24)) (= x69 x24) (= x29 x617)) (and x1300 (=> (and (= x72 x1508) (= x107 (>= x66 x72)) (= x66 x621)) (and x107 (=> (and (= (>= x622 x1415) x939) (= x622 x770) (= x907 x1415)) (and (=> (and (= 2939843472 x350) (= true x546) (= x432 3123789364) (= 1517119036 x750) (= x305 (>= x392 x606)) (= true x1420) (= x1292 2939843472) (= x1202 2939843472) (= x392 x925) (= x829 true) (= true x936) (= x455 true) (= 87118632 x273) (= 2939843472 x551) (= 2512682246 x1219) (= x606 x524)) (and x305 (=> (and (= (<= x462 x1528) x815) (= x462 x715) (= x1528 x1450)) (and x815 (=> (and (= x1268 2512682246) (= x1330 x653) (= true x1363) (= (<= x1330 x1502) x255) (= false x286) (= x1502 x1562) (= false x1071) (= x1389 2939843472)) x255))))) x939)))))) x469)) x739))
(assert (x74 x56))
(assert (= (x856 2211524764) (x998 2211524764)))
(assert (= (x998 1968616202) (x856 1968616202)))
(assert (x581 x561))
(assert (= (x1070 x178) (ite (= x178 x1403) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1425 x178))))
(assert (= (x1429 x1379) (ite (= x1379 x1251) x484 (x1378 x1379))))
(assert (x74 x700))
(assert (=> (>= 10000 x561) (= (x998 x561) (x856 x561))))
(assert (= (ite (= x900 x231) x1075 (x111 x900)) (x984 x900)))
(assert (x74 x731))
(assert (= (x565 x569) (ite (= x569 x713) x601 (x686 x569))))
(assert (= (x422 x1571) (ite (and (not x1125) x1542 (not x549) x1538) (x1204 x1571) (ite (and x1542 (not x1538) (not x549)) (x766 x1571) (ite (and x1542 x549) (x766 x1571) (x1128 x1571))))))
(assert (=> (>= 10000 x1002) (= (x998 x1002) (x856 x1002))))
(assert (= (x480 (x998 x144)) x144))
(assert (x74 x685))
(assert (x74 x438))
(assert (=> (<= x635 10000) (= (x856 x635) (x998 x635))))
(assert (= (x1361 x391) 0))
(assert (x74 x1468))
(assert (= x160 (x480 (x998 x160))))
(assert (x74 x31))
(assert (= (x998 115792089237316195423570985008687907853269984665640564039457) (x856 115792089237316195423570985008687907853269984665640564039457)))
(assert (x74 x777))
(assert (= (ite (and x1432 x961 x1090 (not x1267) x1434 x1569) (x984 x361) (ite (and x1432 x1434 (not x1090) x1569 x961) (x111 x361) (ite (and x1434 x1432 x1569 (not x961)) (x1429 x361) (ite (and x1432 x1569 (not x1434)) (x1378 x361) (x261 x361))))) (x918 x361)))
(assert (= (ite (= x361 x1251) x484 (x1378 x361)) (x1429 x361)))
(assert (=> (>= 10000 x1479) (= (x856 x1479) (x998 x1479))))
(assert (x74 x35))
(assert (= (x942 x178) (ite (= x499 x178) x235 (x1062 x178))))
(assert (x74 x744))
(assert (= (x565 x765) (ite (= x713 x765) x601 (x686 x765))))
(assert (x74 x747))
(assert (x74 x1314))
(assert (x74 x1017))
(assert (=> (>= 10000 x291) (= (x856 x291) (x998 x291))))
(assert (x581 x566))
(assert (x74 x461))
(assert (x581 x291))
(assert (= (x480 (x998 x1052)) x1052))
(assert (= (ite (= x753 x1424) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x1424)) (x1378 x1424)))
(assert (= (ite (and x1238 x523) (x565 x713) (x1400 x713)) (x1566 x713)))
(assert (=> (>= 10000 x10) (= (x856 x10) (x998 x10))))
(assert (= x78 (or x667 x124)))
(assert (x1303 x60))
(assert (x74 x721))
(assert (= x921 (=> (= 0 x438) x1014)))
(assert (=> (<= x632 10000) (= (x856 x632) (x998 x632))))
(assert (= (=> (and (< 0 x1319) (= (x9 x592) x42) (= x1319 (x895 (x998 274184521717934524641157099916833587206))) (<= x42 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x42 x1053) (> 2960351575 x145) (= (x123 (x998 x1521) (x856 5) 0) x778) (not (= 2690754053 x145)) (not (< x145 2293535753)) (not (< x145 2690754053)) (= x592 (x123 (x998 x1408) x778 0)) (>= 1461501637330902918203684832716283019655932542975 x1408) (= x145 2798343961) (>= x42 0) (not (= x145 2764855426)) (not (= x145 2743102681))) (=> (and (= x561 x1229) (= x591 x909) (= x1053 x621)) x1091)) x1470))
(assert (= (ite (= x713 x1526) x601 (x686 x1526)) (x565 x1526)))
(assert (= (x337 x391) (ite (and (not x549) (not x1125) x1542 x1538) (x942 x391) (ite (and x1542 (not x549) (not x1538)) (x1062 x391) (ite (and x1542 x549) (x1062 x391) (x704 x391))))))
(assert (x74 x1407))
(assert (= (x856 2418364589) (x998 2418364589)))
(assert (x74 x92))
(assert (= 826074471 (x480 (x856 826074471))))
(assert (= (and x3 x301) x110))
(assert (x581 x1388))
(assert (= (x480 (x998 x786)) x786))
(assert (x74 x75))
(assert (x74 x905))
(assert (x581 x179))
(assert (=> (>= 10000 x411) (= (x856 x411) (x998 x411))))
(assert (= (x1332 x602) (ite (and x808 x314) (x1072 x602) (ite (and x314 (not x808) x1277) (x1072 x602) (x162 x602)))))
(assert (x74 x614))
(assert (=> (<= x1194 10000) (= (x856 x1194) (x998 x1194))))
(assert (x74 x406))
(assert (x74 x850))
(assert (= (=> (and (= x121 (x123 (x998 x298) x1134 0)) (= (x423 1461501637330902918203684832716283019655932542975 x60) x298) (= x1140 (x293 x950)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1140) (<= 0 x721) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x721) (= (x123 (x998 x870) x121 0) x950) (= x1273 (> x1140 0)) (>= x1140 0) (= x1134 (x123 (x998 x885) (x856 7) 0)) (not (< x721 x1147)) (= (x423 1461501637330902918203684832716283019655932542975 x772) x870)) (and (=> (and (= x1073 (x123 (x998 x885) (x856 9) 0)) (= x130 (x423 1461501637330902918203684832716283019655932542975 x772)) (= x709 (x123 (x998 x1554) x1073 0)) (= (x1293 x792) x204) x1273 (= (x423 1461501637330902918203684832716283019655932542975 x60) x1554) (= (x123 (x998 x130) x709 0) x792) (= x905 x204) (<= 0 x204) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x204) (= x873 0)) x999) (=> (not x1273) x353))) x1184))
(assert (x74 x1140))
(assert (= x561 (x480 (x998 x561))))
(assert (x74 x1451))
(assert (x581 x1285))
(assert (x1303 x670))
(assert (x74 x658))
(assert (x74 x1479))
(assert (= x698 x540))
(assert (=> (>= 10000 x1474) (= (x856 x1474) (x998 x1474))))
(assert (x74 x1305))
(assert (x581 x916))
(assert (= x447 x1542))
(assert (x74 x1428))
(assert (x581 x138))
(assert (= (x480 (x998 x1388)) x1388))
(assert (x581 x932))
(assert (= (ite (= x753 x361) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x361)) (x1378 x361)))
(assert (=> (>= 10000 x810) (= (x856 x810) (x998 x810))))
(assert (= (x856 274184521717934524641157099916833587218) (x998 274184521717934524641157099916833587218)))
(assert (x74 x1550))
(assert (= (x942 x1433) (ite (= x1433 x499) x235 (x1062 x1433))))
(assert (=> (<= x129 10000) (= (x998 x129) (x856 x129))))
(assert (= x461 (x480 (x998 x461))))
(assert (x74 x951))
(assert (= (x918 x178) (ite (and x1434 x1432 x961 (not x1267) x1090 x1569) (x984 x178) (ite (and x1434 (not x1090) x1569 x961 x1432) (x111 x178) (ite (and x1432 x1569 (not x961) x1434) (x1429 x178) (ite (and (not x1434) x1432 x1569) (x1378 x178) (x261 x178)))))))
(assert (= (ite (= x1424 x1030) x81 (x1429 x1424)) (x111 x1424)))
(assert (= (ite (and x523 x1238) (x565 x499) (x1400 x499)) (x1566 x499)))
(assert (= (x998 635128645) (x856 635128645)))
(assert (=> (<= x481 10000) (= (x856 x481) (x998 x481))))
(assert (= x885 (x480 (x998 x885))))
(assert (x74 x1129))
(assert (=> (<= x521 10000) (= (x998 x521) (x856 x521))))
(assert (x581 x1181))
(assert (x74 x1278))
(assert (x581 x298))
(assert (x74 x1298))
(assert (x581 x1391))
(assert (= (x565 x1379) (ite (= x713 x1379) x601 (x686 x1379))))
(assert (= x986 (=> (= x438 x89) x1014)))
(assert (x581 x407))
(assert (= (x856 911411945) (x998 911411945)))
(assert (x74 x528))
(assert (x1548 x670 x1549))
(assert (x74 x1194))
(assert (= x1271 (=> (and (or (and (= x1565 0) (= 0 x169) x959) (and (= x875 (x123 (x998 x125) x1235 0)) (= x1466 (= x773 0)) (= x125 (x423 1461501637330902918203684832716283019655932542975 x60)) (not x959) (>= x773 0) (= x1235 (x123 (x998 x461) (x856 10) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x773) (= x773 (x1089 x875)) (or (and (= 0 x1565) (= 0 x169) x1466) (and (= x773 x1565) (= 1 x169) (not x1466))))) (= x959 (= x461 0))) x19)))
(assert (= (ite (= x499 x897) x1247 (x1088 x499)) (x1062 x499)))
(assert (= (ite (= x753 x900) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x900)) (x1378 x900)))
(assert (x74 x1269))
(assert (= (x856 649617121) (x998 649617121)))
(assert (= (x942 x1529) (ite (= x1529 x499) x235 (x1062 x1529))))
(assert (x581 x1356))
(assert (= (x1361 x900) 0))
(assert (= (x480 (x856 2939843472)) 2939843472))
(assert (x74 x839))
(assert (=> (<= x812 10000) (= (x856 x812) (x998 x812))))
(assert (x74 x285))
(assert (x74 x1452))
(assert (= (=> (= x1451 x461) x1271) x21))
(assert (x74 x807))
(assert (=> (>= 10000 x278) (= (x856 x278) (x998 x278))))
(assert (= (x319 x1529) (ite (= x1550 x1529) x906 (x367 x1529))))
(assert (=> (>= 10000 x144) (= (x856 x144) (x998 x144))))
(assert (x74 x462))
(assert (x74 x411))
(assert (= (x480 (x998 x6)) x6))
(assert (= x446 (=> (and (= x1206 (x762 x161)) (< 0 x346) (>= x1206 0) (= x1169 69947311) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1206) (= x1206 x188) (<= x1544 1461501637330902918203684832716283019655932542975) (< x1169 2293535753) (< x1169 911411945) (= x346 (x895 (x998 274184521717934524641157099916833587206))) (= x161 (x123 (x998 x1544) x884 0)) (= x884 (x123 (x998 x291) (x856 10) 0)) (> 468353030 x1169)) (=> (and (= (or x192 (not x152)) x213) (= x761 x1266) (= x909 x1012) (= x1525 x1546) (= x960 x1229) (= (<= x749 x996) x34) (= x1020 x524) x34 (= x152 (= x1525 0)) (= 0 x1027) x213 (= x524 x188) (= x1473 (= x1370 0)) (= x996 x991) (= (= 0 x1020) x531) (= (and x1473 x531) x192) (= x1370 x1508) (= 0 x4) (= x1546 x749) (= x41 0)) x674))))
(assert (= (ite (and x711 x196) (x373 x1529) (x1533 x1529)) (x1441 x1529)))
(assert (x74 x720))
(assert (x581 x414))
(assert (= x862 (x480 (x998 x862))))
(assert (x74 x1556))
(assert (x74 x1078))
(assert (=> (<= x299 10000) (= (x998 x299) (x856 x299))))
(assert (= (x1441 x1424) (ite (and x196 x711) (x373 x1424) (x1533 x1424))))
(assert (= x413 (x480 (x998 x413))))
(assert (x74 x1169))
(assert (= x1387 (=> (and (= x1535 (= 0 x528)) (= x966 (< 0 x194)) (= x194 (x809 x361)) (not (= x389 0)) (or (and (= 96 x361) x1535 (= x229 x1514)) (and (= x1028 (x477 (+ 63 x528))) (= x1440 (x477 (+ x800 x1514))) (= x1514 x361) (= x229 x1440) (not x1535) (= x800 (x423 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1028)) (= x1272 (x477 (+ x308 96))))) (= x982 (x1205 (x998 274184521717934524641157099916833587206))) (or (and (= x1025 x1100) (< 0 x1100) (= x1321 (x809 x361)) (= x75 (x477 (+ x361 32))) (= x1025 (ite x1086 1 0)) (= x1100 (x809 x75)) (= x1055 (= 0 x1100)) x966 (= x1086 (not x1055)) (not (or (and (> 32 x1321) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1321) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1321)))) (not x966)) x482 (= x482 (< (x1205 (x998 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x281 (x998 x413)) x1350)) x861)))
(assert (x74 x413))
(assert (= (ite (and x1238 x523) (x565 x386) (x1400 x386)) (x1566 x386)))
(assert (= (x480 (x856 2512682246)) 2512682246))
(assert (x74 x970))
(assert (x74 x772))
(assert (= (x480 (x998 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (= (x1566 x1424) (ite (and x1238 x523) (x565 x1424) (x1400 x1424))))
(assert (x74 x70))
(assert (= (x1361 x178) 0))
(assert (x74 x633))
(assert (= (x480 (x998 x1233)) x1233))
(assert (x74 x16))
(assert (x74 x862))
(assert (x74 x550))
(assert (= x539 (and x818 x735)))
(assert (x74 x488))
(assert (=> (<= x149 10000) (= (x998 x149) (x856 x149))))
(assert (x74 x1472))
(assert (x1548 x866 x1059))
(assert (x581 x1505))
(assert (x74 x12))
(assert (= (ite (and x854 x1542) (x841 x1426) (x211 x1426)) (x944 x1426)))
(assert (= 2293535753 (x480 (x856 2293535753))))
(assert (x74 x1145))
(assert (x74 x407))
(assert (= (ite (and (not x1267) x961 x1434 x1432 x1090 x1569) (x984 x712) (ite (and x1569 x1434 (not x1090) x961 x1432) (x111 x712) (ite (and x1432 (not x961) x1569 x1434) (x1429 x712) (ite (and x1569 (not x1434) x1432) (x1378 x712) (x261 x712))))) (x918 x712)))
(assert (x74 x1391))
(assert (x1303 x994))
(assert (= (x319 x569) (ite (= x1550 x569) x906 (x367 x569))))
(assert (= (x480 (x998 x79)) x79))
(assert (= x50 (or (and x294 x1079) (and (not x801) x274) (and (not x1023) x1077))))
(assert (x581 x533))
(assert (= (x480 (x856 142201243)) 142201243))
(assert (= (x1566 x516) (ite (and x1238 x523) (x565 x516) (x1400 x516))))
(assert (= (x319 x391) (ite (= x391 x1550) x906 (x367 x391))))
(assert (x74 x1483))
(assert (= (ite (and x523 x1238) (x565 x187) (x1400 x187)) (x1566 x187)))
(assert (= (ite (= x391 x1433) x514 (x319 x391)) (x1503 x391)))
(assert (= x426 (x480 (x998 x426))))
(assert (=> (>= 10000 x461) (= (x998 x461) (x856 x461))))
(assert (=> (<= x738 10000) (= (x998 x738) (x856 x738))))
(assert (x74 x710))
(assert (x74 x1025))
(assert (x74 x225))
(assert (= (ite (and x1238 x523) (x565 x178) (x1400 x178)) (x1566 x178)))
(assert (= (x480 (x998 x1245)) x1245))
(assert (= x54 (and x822 x827)))
(assert (x74 x1111))
(assert (= x94 (x480 (x998 x94))))
(assert (= (x856 1000000000000000000) (x998 1000000000000000000)))
(assert (= (ite (= x1433 x75) x514 (x319 x75)) (x1503 x75)))
(assert (= (x1204 x341) (ite (= x341 x372) x973 (x766 x341))))
(assert (=> (<= x560 10000) (= (x998 x560) (x856 x560))))
(assert (x74 x1220))
(assert (x74 x843))
(assert (= (x480 (x998 x553)) x553))
(assert (x74 x521))
(assert (=> (<= x1156 10000) (= (x998 x1156) (x856 x1156))))
(assert (x74 x159))
(assert (x74 x8))
(assert (= (x1062 x187) (ite (= x897 x187) x1247 (x1088 x187))))
(assert (x74 x101))
(assert (x74 x653))
(assert (x581 x1298))
(assert (x581 x780))
(assert (= (=> (and (= (= x315 0) x552) (or (and x552 (= x105 0) (= x1488 0)) (and (<= x1145 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= x105 1) (= x1488 x1145) (not x679)) (and (= 0 x1488) (= x105 0) x679)) (= x579 (x123 (x998 x138) x1374 0)) (= x1374 (x123 (x998 x315) (x856 10) 0)) (not x552) (= (x762 x579) x1145) (= x138 (x423 1461501637330902918203684832716283019655932542975 x60)) (>= x1145 0) (= x679 (= 0 x1145))))) x636) x1227))
(assert (x74 x1380))
(assert (x74 x1356))
(assert (= x1175 (x480 (x998 x1175))))
(assert (x74 x561))
(assert (x74 x1530))
(assert (x74 x108))
(assert (= (ite (and x314 x808) (x1072 x987) (ite (and x1277 x314 (not x808)) (x1072 x987) (x162 x987))) (x1332 x987)))
(assert (x74 x613))
(assert (= (ite (= x1433 x712) x514 (x319 x712)) (x1503 x712)))
(assert (x581 x558))
(assert (x74 x24))
(assert (x74 x1100))
(assert (= (ite (= x1550 x1526) x906 (x367 x1526)) (x319 x1526)))
(assert (= (x1378 x1529) (ite (= x1529 x753) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x1529))))
(assert (x74 x1517))
(assert (=> (<= x428 10000) (= (x998 x428) (x856 x428))))
(assert (x74 x1254))
(assert (= (+ (x480 x1497) 1) (x480 (x146 x1497 1))))
(assert (= 0 (x1361 x1433)))
(assert (= (x480 (x998 x278)) x278))
(assert (= x903 x1543))
(assert (= x304 (x480 (x998 x304))))
(assert (x1548 x772 x743))
(assert (x74 x1120))
(assert (x581 x139))
(assert (x74 x498))
(assert (x74 x1016))
(assert (x581 x1017))
(assert (x74 x551))
(assert (= x1207 (=> (= x415 x315) x1227)))
(assert (=> (>= 10000 x1201) (= (x998 x1201) (x856 x1201))))
(assert (x74 x441))
(assert (= x1494 (x480 (x998 x1494))))
(assert (=> (<= x972 10000) (= (x998 x972) (x856 x972))))
(assert (= (ite (= x187 x713) x601 (x686 x187)) (x565 x187)))
(assert (x581 x717))
(assert (x74 x1352))
(assert (= (x1252 x1424) (ite (and x1432 (not x1244) x1569) (x918 x1424) (x593 x1424))))
(assert (x74 x133))
(assert (x581 x1304))
(assert (=> (>= 10000 x114) (= (x998 x114) (x856 x114))))
(assert (x581 x1266))
(assert (=> (>= 10000 x558) (= (x856 x558) (x998 x558))))
(assert (x74 x1155))
(assert (= x1017 (x480 (x998 x1017))))
(assert (x74 x197))
(assert (= (=> (and (> x369 0) (>= 1461501637330902918203684832716283019655932542975 x591) (= x324 (x123 (x998 x561) (x856 10) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1262) (= x1197 (x123 (x998 x591) x324 0)) (< x682 2293535753) (= x850 x1262) (= (x895 (x998 274184521717934524641157099916833587206)) x369) (= x1262 (x275 x1197)) (> 911411945 x682) (= x682 69947311) (>= x1262 0) (< x682 468353030)) (=> (and (= x1229 x1220) (= x117 x909) (= x1485 x761) (= x925 x850)) x518)) x1091))
(assert (= (ite (= x1526 x1397) x219 (x845 x1526)) (x1568 x1526)))
(assert (= (x541 x391) (ite (= x391 x633) x1124 (x1568 x391))))
(assert (x74 x1514))
(assert (x74 x1085))
(assert (x74 x335))
(assert (=> (>= 10000 x1458) (= (x856 x1458) (x998 x1458))))
(assert (= (ite (and (not x549) (not x1125) x1538 x1542) (x942 x712) (ite (and (not x1538) (not x549) x1542) (x1062 x712) (ite (and x1542 x549) (x1062 x712) (x704 x712)))) (x337 x712)))
(assert (= (or (and x831 (not x1209)) (and (not x827) x822)) x667))
(assert (x74 x1389))
(assert (= (ite (= x372 x643) x973 (x766 x643)) (x1204 x643)))
(assert (x581 274184521717934524641157099916833587214))
(assert (x74 x499))
(assert (x74 x1045))
(assert (= (x1441 x1379) (ite (and x711 x196) (x373 x1379) (x1533 x1379))))
(assert (= (ite (= x231 x712) x1075 (x111 x712)) (x984 x712)))
(assert (= (ite (= x1550 x218) x906 (x367 x218)) (x319 x218)))
(assert (x581 x420))
(assert (= x662 (=> (= (> x885 x394) x1311) (and (=> (and x1311 (= x1435 x366)) x1482) (=> (not x1311) x1184)))))
(assert (= (x1361 x361) 0))
(assert (x74 x431))
(assert (= (x856 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x998 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (= (x337 x178) (ite (and (not x549) (not x1125) x1538 x1542) (x942 x178) (ite (and (not x549) x1542 (not x1538)) (x1062 x178) (ite (and x1542 x549) (x1062 x178) (x704 x178))))))
(assert (= (x1566 x765) (ite (and x1238 x523) (x565 x765) (x1400 x765))))
(assert (x74 x181))
(assert (= (x942 x56) (ite (= x56 x499) x235 (x1062 x56))))
(assert (x74 x1417))
(assert (x581 x1458))
(assert (x74 x205))
(assert (= (=> (and (>= x1322 0) (<= x1322 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x423 1461501637330902918203684832716283019655932542975 x60) x542) (= x1081 (= 0 x1322)) (= (x170 x844) x1322) (= (x123 (x998 x542) x1393 0) x844) (= (x123 (x998 x1237) (x856 6) 0) x1393)) (and (=> (and (= x1237 x1451) (not x1081)) x21) (=> x1081 x417))) x208))
(assert (=> (>= 10000 x413) (= (x856 x413) (x998 x413))))
(assert (= (x998 69947311) (x856 69947311)))
(assert (x74 x1002))
(assert (= (ite (and (not x1125) (not x549) x1538 x1542) (x942 x1433) (ite (and (not x549) x1542 (not x1538)) (x1062 x1433) (ite (and x549 x1542) (x1062 x1433) (x704 x1433)))) (x337 x1433)))
(assert (x581 x553))
(assert (= x1019 (x480 (x998 x1019))))
(assert (x74 x991))
(assert (= (=> (and (= x1447 (x123 (x998 x738) x1286 0)) (= x802 x807) (not (< x1171 2293535753)) (= (x123 (x998 x160) (x856 3) 0) x425) (>= 1461501637330902918203684832716283019655932542975 x738) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x807) (not (= 2690754053 x1171)) (not (> 2690754053 x1171)) (= 2743102681 x1171) (< x1171 2960351575) (<= x1016 1461501637330902918203684832716283019655932542975) (= (x1371 x1447) x807) (> x1280 0) (= x1286 (x123 (x998 x1016) x425 0)) (= (x895 (x998 274184521717934524641157099916833587206)) x1280) (>= x807 0)) (=> (and (= x1562 x802) (= x560 x761) (= x1160 x909) (= x1229 x655) (= x1045 x1164)) x978)) x967))
(assert (= 87118632 (x480 (x856 87118632))))
(assert (x581 x94))
(assert (= (x480 (x856 649617121)) 649617121))
(assert (= (x856 2960351575) (x998 2960351575)))
(assert (= x409 true))
(assert (x74 x985))
(assert (x74 x624))
(assert (x581 x1156))
(assert (= (x856 2743102681) (x998 2743102681)))
(assert (= (x480 (x856 69947311)) 69947311))
(assert (= 0 (x1361 x499)))
(assert (x581 x228))
(assert (= (x1503 x776) (ite (= x1433 x776) x514 (x319 x776))))
(assert (= (ite (= x1424 x1433) x514 (x319 x1424)) (x1503 x1424)))
(assert (=> (>= 10000 x435) (= (x856 x435) (x998 x435))))
(assert (= x1130 (x480 (x998 x1130))))
(assert (x74 x583))
(assert (x74 x1386))
(assert (x74 x1040))
(assert (x74 x1198))
(assert (= (x480 (x998 x1152)) x1152))
(assert (x74 x483))
(assert (= (x1566 x1198) (ite (and x523 x1238) (x565 x1198) (x1400 x1198))))
(assert (x74 x891))
(assert (= (x565 x900) (ite (= x900 x713) x601 (x686 x900))))
(assert (x74 x95))
(assert (= (x480 (x998 x288)) x288))
(assert (=> (>= 10000 x1304) (= (x856 x1304) (x998 x1304))))
(assert (x74 x607))
(assert (x581 x1233))
(assert (= (and x54 x654) x831))
(assert (x74 x295))
(assert (= (x480 (x998 x521)) x521))
(assert (= (ite (= x713 x499) x601 (x686 x499)) (x565 x499)))
(assert (= x86 (=> (and (not (> 2690754053 x970)) (= x1009 x747) (= x1384 (x123 (x998 x1231) x47 0)) (<= x747 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1094 (x895 (x998 274184521717934524641157099916833587206))) (<= x1231 1461501637330902918203684832716283019655932542975) (not (= x970 2764855426)) (>= x747 0) (= x47 (x123 (x998 x6) (x856 5) 0)) (= x970 2798343961) (> 2960351575 x970) (not (= x970 2743102681)) (not (> 2293535753 x970)) (> x1094 0) (not (= 2690754053 x970)) (= x747 (x841 x1384))) (=> (and (= x291 x1229) (= x1009 x1508) (= x909 x1544)) x446))))
(assert (=> (<= x288 10000) (= (x856 x288) (x998 x288))))
(assert (x74 x1415))
(assert (x74 x738))
(assert (=> (>= 10000 x438) (= (x856 x438) (x998 x438))))
(assert (= (x856 604800) (x998 604800)))
(assert (= (x1378 x75) (ite (= x753 x75) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x75))))
(assert (=> (<= x983 10000) (= (x998 x983) (x856 x983))))
(assert (= x1281 (x480 (x998 x1281))))
(assert (x74 x1476))
(assert (x74 x401))
(assert (= (x998 468353030) (x856 468353030)))
(assert (=> (<= x225 10000) (= (x998 x225) (x856 x225))))
(assert (x74 x160))
(assert (= x138 (x480 (x998 x138))))
(assert (x74 x637))
(assert (=> (<= x1052 10000) (= (x856 x1052) (x998 x1052))))
(assert (x581 x635))
(assert (= x812 (x480 (x998 x812))))
(assert (x581 x225))
(assert (x74 x1022))
(assert (= (ite (= x616 x372) x973 (x766 x616)) (x1204 x616)))
(assert (x74 x410))
(assert (=> (<= x1412 10000) (= (x856 x1412) (x998 x1412))))
(assert (x74 x982))
(assert (x74 x902))
(assert (x74 x1249))
(assert (x74 x1440))
(assert (x74 x106))
(assert (x74 x1233))
(assert (x74 x938))
(assert (x74 x1133))
(assert (x74 x72))
(assert (x74 x1138))
(assert (= 274184521717934524641157099916833587206 (x480 (x856 274184521717934524641157099916833587206))))
(assert (x74 x1385))
(assert (= (ite (and x1542 (not x549) (not x1125) x1538) (x942 x1526) (ite (and (not x1538) (not x549) x1542) (x1062 x1526) (ite (and x1542 x549) (x1062 x1526) (x704 x1526)))) (x337 x1526)))
(assert (= (x1332 x1447) (ite (and x808 x314) (x1072 x1447) (ite (and (not x808) x1277 x314) (x1072 x1447) (x162 x1447)))))
(assert (x74 x1281))
(assert (x581 x411))
(assert (x74 x622))
(assert (= (x856 2868243304) (x998 2868243304)))
(assert (x1303 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (x170 x1264) (ite (and x854 x1542) (x297 x1264) (x849 x1264))))
(assert (x581 x560))
(assert (x74 x928))
(assert (x74 x1137))
(assert (= (x918 x713) (ite (and x1090 (not x1267) x1569 x1432 x961 x1434) (x984 x713) (ite (and x1432 x1434 (not x1090) x1569 x961) (x111 x713) (ite (and (not x961) x1434 x1432 x1569) (x1429 x713) (ite (and x1569 x1432 (not x1434)) (x1378 x713) (x261 x713)))))))
(assert (x74 x968))
(assert (= (ite (= x499 x765) x235 (x1062 x765)) (x942 x765)))
(assert (= (=> (and (= x1505 (x423 1461501637330902918203684832716283019655932542975 x60)) (= (= x1414 0) x511) (>= x1414 0) (= x442 (x123 (x998 x420) (x856 6) 0)) (<= x1414 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x170 x1328) x1414) (= (x123 (x998 x1505) x442 0) x1328)) (and (=> (and (not x57) (= (x1126 (- x420 1)) x729) (= (< 0 x729) x57) x511) x1157) (=> (and (not x511) (= x420 x1451)) x21))) x1564))
(assert (x74 x858))
(assert (x1548 x994 x725))
(assert (= (and (not x597) x562) x974))
(assert (x74 x1339))
(assert (x74 x741))
(assert (x74 x1494))
(assert (= (x319 x516) (ite (= x516 x1550) x906 (x367 x516))))
(assert (= (x480 (x998 x914)) x914))
(assert (= x596 (and (not x898) x627)))
(assert (= (x319 x56) (ite (= x1550 x56) x906 (x367 x56))))
(assert (x581 x1237))
(assert (=> (>= 10000 x1078) (= (x856 x1078) (x998 x1078))))
(assert (= (ite (and x1538 (not x1125) (not x549) x1542) (x942 x187) (ite (and x1542 (not x549) (not x1538)) (x1062 x187) (ite (and x549 x1542) (x1062 x187) (x704 x187)))) (x337 x187)))
(assert (x74 x492))
(assert (x74 x144))
(assert (x74 x1347))
(assert (x74 x1315))
(assert (= (ite (= x178 x1030) x81 (x1429 x178)) (x111 x178)))
(assert (x1303 x866))
(assert (x581 x130))
(assert (x581 x655))
(assert (x74 x782))
(assert (x74 x96))
(assert (x74 x1299))
(assert (x74 x1219))
(assert (x1548 x839 x1399))
(assert (=> (<= x1220 10000) (= (x856 x1220) (x998 x1220))))
(assert (= (ite (and x854 x1542) (x297 x1250) (x849 x1250)) (x170 x1250)))
(assert (x74 x344))
(assert (x74 x1080))
(assert (= (x856 2764855426) (x998 2764855426)))
(assert (x74 x449))
(assert (= (x480 (x998 x1210)) x1210))
(assert (= x730 x1377))
(assert (x74 x178))
(assert (=> (>= 10000 x1408) (= (x856 x1408) (x998 x1408))))
(assert (x74 x1465))
(assert (x74 x1360))
(assert (x74 x657))
(assert (= (ite (= x776 x753) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x776)) (x1378 x776)))
(assert (=> (>= 10000 x1356) (= (x856 x1356) (x998 x1356))))
(assert (x74 x790))
(assert (= (ite (= x776 x713) x601 (x686 x776)) (x565 x776)))
(assert (x74 x1558))
(assert (=> (>= 10000 x203) (= (x998 x203) (x856 x203))))
(assert (x74 x767))
(assert (x581 x1289))
(assert (x74 x80))
(assert (x581 x284))
(assert (x74 x1230))
(assert (x74 x728))
(assert (x74 x1117))
(assert (x74 x746))
(assert (= x1505 (x480 (x998 x1505))))
(assert (x74 x1292))
(assert (= (ite (= x897 x1433) x1247 (x1088 x1433)) (x1062 x1433)))
(assert (x74 x1121))
(assert (= (x565 x75) (ite (= x75 x713) x601 (x686 x75))))
(assert (x74 x415))
(assert (=> (<= x862 10000) (= (x998 x862) (x856 x862))))
(assert (= (x480 (x998 x155)) x155))
(assert (=> (>= 10000 x1391) (= (x998 x1391) (x856 x1391))))
(assert (= (x1429 x713) (ite (= x1251 x713) x484 (x1378 x713))))
(assert (= (ite (= x187 x499) x235 (x1062 x187)) (x942 x187)))
(assert (= (x998 142201243) (x856 142201243)))
(assert (x74 x669))
(assert (x581 x1474))
(assert (x74 x346))
(assert (x74 x198))
(assert (= 0 (x1361 x1198)))
(assert (x581 x741))
(assert (= (ite (= x1550 x712) x906 (x367 x712)) (x319 x712)))
(assert (=> (<= x1281 10000) (= (x856 x1281) (x998 x1281))))
(assert (= x35 (x480 (x998 x35))))
(assert (x581 x198))
(assert (= (x1062 x776) (ite (= x897 x776) x1247 (x1088 x776))))
(assert (x581 x1120))
(assert (=> (>= 10000 x1485) (= (x998 x1485) (x856 x1485))))
(assert (x581 x155))
(assert (= x1083 (x480 (x998 x1083))))
(assert (= (x480 (x998 x1391)) x1391))
(assert (x581 x1281))
(assert (x74 x67))
(assert (= (x1204 x935) (ite (= x935 x372) x973 (x766 x935))))
(assert (= 2514000705 (x480 (x856 2514000705))))
(assert (x74 x1214))
(assert (= 274184521717934524641157099916833587214 (x480 (x998 274184521717934524641157099916833587214))))
(assert (x581 x435))
(assert (= (=> (= (< 0 x1237) x3) (and (=> x3 x208) (=> (not x3) x1157))) x1167))
(assert (x581 x1019))
(assert (= (x480 (x998 x960)) x960))
(assert (x74 x1075))
(assert (x74 x254))
(assert (= (ite (= x1390 x391) x1439 (x1070 x391)) (x845 x391)))
(assert (= (ite (and x196 x711) (x373 x900) (x1533 x900)) (x1441 x900)))
(assert (= (x480 (x998 x1168)) x1168))
(assert (= (x480 (x998 x335)) x335))
(assert (x581 x88))
(assert (x1303 x95))
(assert (x74 x1268))
(assert (x74 x481))
(assert (x74 x877))
(assert (=> (>= 10000 x1120) (= (x856 x1120) (x998 x1120))))
(assert (= (+ (x480 x515) 1) (x480 (x146 x515 1))))
(assert (x74 x897))
(assert (= (or x277 (and x1273 x1150)) x314))
(assert (x74 x776))
(assert (x74 x1379))
(assert (x581 x1231))
(assert (= (x1503 x516) (ite (= x516 x1433) x514 (x319 x516))))
(assert (=> (>= 10000 x916) (= (x856 x916) (x998 x916))))
(assert (= (x942 x516) (ite (= x499 x516) x235 (x1062 x516))))
(assert (x74 x906))
(assert (x581 x1179))
(assert (x581 x418))
(assert (x74 x137))
(assert (=> (>= 10000 x304) (= (x856 x304) (x998 x304))))
(assert (= (ite (and x962 (not x526) x1146 x1527 x852 x901) (x541 x1379) (ite (and x962 x901 x1146 (not x1527) x852) (x1568 x1379) (ite (and x852 x962 (not x901) x1146) (x845 x1379) (ite (and x852 (not x1146) x962) (x1070 x1379) (x575 x1379))))) (x164 x1379)))
(assert (= (x984 x713) (ite (= x231 x713) x1075 (x111 x713))))
(assert (=> (<= x1494 10000) (= (x856 x1494) (x998 x1494))))
(assert (= (x480 (x856 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x74 x230))
(assert (x74 x308))
(assert (x74 x580))
(assert (x581 x83))
(assert (x74 x988))
(assert (x74 x183))
(assert (x74 x1030))
(assert (x74 x29))
(assert (x74 x130))
(assert (x74 x702))
(assert (= 0 (x1361 x1424)))
(assert (x74 x1320))
(assert (x74 x5))
(assert (= (x480 (x998 x298)) x298))
(assert (x74 x1488))
(assert (=> (<= x420 10000) (= (x856 x420) (x998 x420))))
(assert (= (x319 x1379) (ite (= x1379 x1550) x906 (x367 x1379))))
(assert (= true x247))
(assert (x74 x1074))
(assert (x74 x684))
(assert (= (ite (= x1379 x1030) x81 (x1429 x1379)) (x111 x1379)))
(assert (x74 x1317))
(assert (x74 x1513))
(assert (x74 x1521))
(assert (= (=> (and (or (and x1144 (= x873 0) (= 0 x905)) (and (= (x423 1461501637330902918203684832716283019655932542975 x60) x108) (>= x1187 0) (not x1144) (= x1187 x905) (= x1108 (x123 (x998 x411) x380 0)) (<= x1187 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x423 1461501637330902918203684832716283019655932542975 x772) x411) (= x1187 (x1293 x1108)) (= x873 1) (= (x123 (x998 x108) x49 0) x380) (= (x123 (x998 x438) (x856 9) 0) x49))) (= (= 0 x438) x1144)) x999) x1014))
(assert (x74 x129))
(assert (= x1201 (x480 (x998 x1201))))
(assert (x581 x117))
(assert (x74 x1376))
(assert (= x751 (x480 (x998 x751))))
(assert (= x1164 (x480 (x998 x1164))))
(assert (x74 x1355))
(assert (=> (>= 10000 x108) (= (x998 x108) (x856 x108))))
(assert (x74 x750))
(assert (= (ite (and (not x1244) x1569 x1432) (x918 x712) (x593 x712)) (x1252 x712)))
(assert (= x340 (x480 (x998 x340))))
(assert (x581 x440))
(assert (x74 x765))
(assert (x581 x1175))
(assert (= (ite (= x1030 x712) x81 (x1429 x712)) (x111 x712)))
(assert (= (x319 x900) (ite (= x1550 x900) x906 (x367 x900))))
(assert (= (x942 x1379) (ite (= x1379 x499) x235 (x1062 x1379))))
(assert (x581 x1494))
(assert (=> (>= 10000 x1210) (= (x998 x1210) (x856 x1210))))
(assert (x74 x1295))
(assert (x74 x660))
(assert (= x83 (x480 (x998 x83))))
(assert (= (x111 x75) (ite (= x1030 x75) x81 (x1429 x75))))
(assert (=> (>= 10000 x1217) (= (x998 x1217) (x856 x1217))))
(assert (= (x942 x386) (ite (= x499 x386) x235 (x1062 x386))))
(assert (= (ite (and (not x1125) x1538 (not x549) x1542) (x942 x386) (ite (and (not x549) x1542 (not x1538)) (x1062 x386) (ite (and x549 x1542) (x1062 x386) (x704 x386)))) (x337 x386)))
(assert (= (x480 (x856 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (ite (= x1424 x1403) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1425 x1424)) (x1070 x1424)))
(assert (x74 x1439))
(assert (x581 x1329))
(assert (x74 x191))
(assert (x74 x169))
(assert (= (and x1478 x892) x1496))
(assert (x74 x1412))
(assert (= (x1566 x56) (ite (and x1238 x523) (x565 x56) (x1400 x56))))
(assert (= x1356 (x480 (x998 x1356))))
(assert (x581 x426))
(assert (x74 x284))
(assert (x74 x1555))
(assert (x74 x691))
(assert (= (x918 x1424) (ite (and x1569 x961 x1432 (not x1267) x1434 x1090) (x984 x1424) (ite (and x961 (not x1090) x1432 x1569 x1434) (x111 x1424) (ite (and x1434 (not x961) x1569 x1432) (x1429 x1424) (ite (and (not x1434) x1432 x1569) (x1378 x1424) (x261 x1424)))))))
(assert (= (ite (= x900 x499) x235 (x1062 x900)) (x942 x900)))
(assert (= 1889567281 (x480 (x856 1889567281))))
(assert (=> (>= 10000 x82) (= (x856 x82) (x998 x82))))
(assert (x581 x1479))
(assert (x74 x117))
(assert (= (ite (= x1403 x1379) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1425 x1379)) (x1070 x1379)))
(assert (x74 x543))
(assert (x74 x588))
(assert (= x238 x904))
(assert (= x746 (x480 (x998 x746))))
(assert (=> (>= 10000 x786) (= (x856 x786) (x998 x786))))
(assert (= x1002 (x480 (x998 x1002))))
(assert (=> (<= x566 10000) (= (x998 x566) (x856 x566))))
(assert (x581 x1305))
(assert (x74 x621))
(assert (x74 x7))
(assert (= (or (and x301 (not x3)) (and x511 x1496) (and x892 (not x1478))) x619))
(assert (= (x480 (x998 x719)) x719))
(assert (= (x1062 x386) (ite (= x386 x897) x1247 (x1088 x386))))
(assert (x74 x366))
(assert (= x822 (and x517 x974)))
(assert (= (=> (= x1106 (= 274184521717934524641157099916833587214 x413)) (and (=> (and (= (< x688 x1483) x64) (= 68 x1080) (= x1483 x992) (not x64) (= x1058 x1483) (not (= 2514000705 x1190)) (= x1068 (or (> x1278 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1278) true) (> 64 x1278)))) (= x993 x1315) (= x1338 (x123 (x998 x993) (x856 1) 0)) (not (> 4 x1080)) (not x1148) (not (= x1190 1889567281)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x688) (<= 0 x688) (>= 1461501637330902918203684832716283019655932542975 x993) (= (x896 x1338) x580) (= (+ x992 x1501) x1444) (not x1068) (= 32 x528) (not x640) (> x588 0) (= (x1126 (- x1080 4)) x1278) x1106 (= (x123 (x998 274184521717934524641157099916833587206) (x856 1) 0) x212) (= x1269 x1058) (= 274184521717934524641157099916833587206 x370) (= x1301 (x123 (x998 x993) (x856 1) 0)) (= (x1126 (- x688 x1058)) x506) (not (= 649617121 x1190)) (= x1080 x359) (>= x580 0) (= x695 x1121) (= (x123 (x998 274184521717934524641157099916833587206) (x856 1) 0) x490) (= x588 (x895 (x998 274184521717934524641157099916833587214))) (= 274184521717934524641157099916833587206 x1294) (= x580 x1501) (= x640 (> x1058 x688)) (= x1375 x993) (not (= 826074471 x1190)) (not (> 649617121 x1190)) (= (x752 x490) x688) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x580) (= 2835717307 x1190) (< (+ x580 x1483) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (>= (+ x1483 x580) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1148) (= x389 1) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x951)) x1387) (=> (not x1106) x247))) x1469))
(assert (= x1231 (x480 (x998 x1231))))
(assert (=> (<= x1012 10000) (= (x856 x1012) (x998 x1012))))
(assert (x74 x724))
(assert (x581 x862))
(assert (x74 x1245))
(assert (= (x1062 x1526) (ite (= x1526 x897) x1247 (x1088 x1526))))
(assert (x74 x696))
(assert (= (x480 (x998 x566)) x566))
(assert (= (x1429 x900) (ite (= x1251 x900) x484 (x1378 x900))))
(assert (x74 x42))
(assert (x74 x802))
(assert (=> (>= 10000 x1266) (= (x856 x1266) (x998 x1266))))
(assert (x581 x583))
(assert (x74 x631))
(assert (x74 x749))
(assert (= (ite (= x713 x386) x601 (x686 x386)) (x565 x386)))
(assert (x74 x1353))
(assert (= 604800 (x480 (x856 604800))))
(assert (=> (<= x1102 10000) (= (x856 x1102) (x998 x1102))))
(assert (= (=> (= (< 0 x601) x1569) (and (=> (and (= x1249 (x477 (+ x1069 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= x504 (x895 (x998 x413))) x1569 (= x1069 (x423 26959946667150639794667015087019630673637144422540572481103610249215 x785)) (= x516 (x477 (+ x837 160))) (= x753 (x477 (+ x33 96))) x917 (= (> x135 0) x1434) (= x1563 (x1126 (- x308 x366))) (= x1222 (x282 x713)) (= (x45 x36) x413) (= x8 (x477 (+ 68 x366))) (= (x477 (+ x366 32)) x187) (>= 1461501637330902918203684832716283019655932542975 x413) (or (and (= x56 x187) (= x1251 x1514) (or (and (= (x1429 x765) x81) (= x1030 (x477 (+ 96 x308))) (or (and (= 64 x1555) (not x1090)) (and (or (and (not x352) (= x847 (x984 x776)) (= (> x135 128) x352) (= (x477 (+ 128 x366)) x776) x1267 (= x728 (x477 (+ 160 x308))) (= x1555 128)) (and (not x1267) (= x1555 96))) x1090 (= (x477 (+ x366 96)) x569) (= (x477 (+ x308 128)) x231) (= (< 96 x135) x1267) (= (x111 x569) x1075))) x961 (= (x477 (+ 64 x366)) x765) (= x1090 (> x135 64))) (and (not x961) (= 32 x1555))) (= (x1378 x56) x484) x1434 (= (> x135 32) x961)) (and (not x1434) (= x1555 0))) (= x696 (x1126 (- x1563 32))) (= x1315 (x423 1461501637330902918203684832716283019655932542975 x772)) (< 0 x601) (= (x477 (+ x33 128)) x1514) (= x917 (< 0 x504)) (= x785 (x1031 x187)) (or (not x1244) (and x1244 (= (x477 (+ x135 x1514)) x571))) (= x135 (x1378 x366)) (= x488 0) (= x613 x36) (< 0 x1222) (= x1269 (x282 x516)) (= (x477 (+ x366 36)) x33) (= (x477 (+ 100 x366)) x308) (= (< x135 x1555) x1244)) x1098) (=> (not x1569) x27))) x1482))
(assert (= (ite (= x361 x231) x1075 (x111 x361)) (x984 x361)))
(assert (x74 x40))
(assert (= (x1361 x1526) 0))
(assert (x74 x360))
(assert (x74 x847))
(assert (x74 x394))
(assert (x74 x155))
(assert (x74 x1284))
(assert (x74 x1222))
(assert (x74 x655))
(assert (x74 x886))
(assert (= (x480 (x998 x689)) x689))
(assert (= (and x1103 (not x1311)) x1150))
(assert (x74 x338))
(assert (=> (>= 10000 x746) (= (x998 x746) (x856 x746))))
(assert (x74 x222))
(assert (x74 x1381))
(assert (x74 x1053))
(assert (x74 x264))
(assert (x74 x866))
(assert (x581 x340))
(assert (= (x998 26959946667150639794667015087019630673637144422540572481103610249215) (x856 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x74 x1243))
(assert (x74 x1319))
(assert (= 0 (x1361 x187)))
(assert (= (x1252 x900) (ite (and x1432 (not x1244) x1569) (x918 x900) (x593 x900))))
(assert (= (x480 (x856 2743102681)) 2743102681))
(assert (x74 x1359))
(assert (=> (<= x934 10000) (= (x856 x934) (x998 x934))))
(assert (= (x480 (x998 x435)) x435))
(assert (x581 x1456))
(assert (= x243 (=> (and (= (x423 1461501637330902918203684832716283019655932542975 x772) x717) (= x131 (x123 (x998 x228) x1036 0)) (= (x123 (x998 x717) x131 0) x166) (= (x423 1461501637330902918203684832716283019655932542975 x60) x228) (<= x217 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x123 (x998 x1237) (x856 7) 0) x1036) (>= x217 0) (= (x650 x166) x217) (= (= x217 0) x827)) (and (=> x827 x430) (=> (and (not x827) (= x1237 x609)) x1221)))))
(assert (x581 x689))
(assert (= (x480 (x998 x420)) x420))
(assert (x74 x1241))
(assert (x74 x1188))
(assert (x74 x651))
(assert (x74 x273))
(assert (x74 x1122))
(assert (= (x1089 x1197) (ite (and x265 x1542) (x762 x1197) (x879 x1197))))
(assert (x74 x187))
(assert (= (=> (and (= x1111 (x1126 (- x885 1))) (= x642 (< 0 x1111))) (and (=> x642 x527) (=> (not x642) x921))) x864))
(assert (= x692 (=> (and (= x205 (x683 x926)) (<= 0 x721) (= (x123 (x998 x885) (x856 6) 0) x634) (= (x123 (x998 x719) x634 0) x926) (<= x205 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x719 (x423 1461501637330902918203684832716283019655932542975 x60)) (>= x205 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x721) (not (> x1147 x721)) (= (= x205 0) x520)) (and (=> (and (= 0 x105) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1316) (<= 0 x1316) (= (x123 (x998 x1017) x134 0) x647) (= x1017 (x423 1461501637330902918203684832716283019655932542975 x60)) (= x1316 x1488) (= (x762 x647) x1316) (= x134 (x123 (x998 x885) (x856 10) 0)) (not x520)) x636) (=> x520 x971)))))
(assert (= (x480 (x856 18446744073709551615)) 18446744073709551615))
(assert (= (x480 (x998 x225)) x225))
(assert (= (ite (= x341 x1571) x1226 (x422 x341)) (x453 x341)))
(assert (= (ite (= x391 x753) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x391)) (x1378 x391)))
(assert (x74 x956))
(assert (= (x480 (x998 x542)) x542))
(assert (= (ite (and x1538 x1542 (not x1125) (not x549)) (x942 x1529) (ite (and x1542 (not x549) (not x1538)) (x1062 x1529) (ite (and x1542 x549) (x1062 x1529) (x704 x1529)))) (x337 x1529)))
(assert (x74 x1373))
(assert (x74 x1403))
(assert (x74 x1565))
(assert (x581 x870))
(assert (x581 x10))
(assert (= (x1062 x1424) (ite (= x1424 x897) x1247 (x1088 x1424))))
(assert (x74 x256))
(assert (x581 274184521717934524641157099916833587206))
(assert (x74 x1435))
(assert (= x934 (x480 (x998 x934))))
(assert (= x1093 (and x962 x852)))
(assert (= (x1252 x361) (ite (and x1432 (not x1244) x1569) (x918 x361) (x593 x361))))
(assert (x581 x605))
(assert (= (x480 (x998 x114)) x114))
(assert (= (ite (and x711 x196) (x373 x713) (x1533 x713)) (x1441 x713)))
(assert (= (ite (= x713 x391) x601 (x686 x391)) (x565 x391)))
(assert (= (and (not x196) x711) x1115))
(assert (= (x480 (x856 37714057306076988483118529490347679105585116642029194716945419020321082336612)) 37714057306076988483118529490347679105585116642029194716945419020321082336612))
(assert (= x481 (x480 (x998 x481))))
(assert (x74 x33))
(assert (x581 x1412))
(assert (= (x111 x569) (ite (= x1030 x569) x81 (x1429 x569))))
(assert (x581 x810))
(assert (x74 x229))
(assert (=> (>= 10000 x583) (= (x856 x583) (x998 x583))))
(assert (=> (>= 10000 x1181) (= (x856 x1181) (x998 x1181))))
(assert (=> (<= x1298 10000) (= (x998 x1298) (x856 x1298))))
(assert (x74 x1457))
(assert (x74 x1185))
(assert (= (=> (= x1120 0) x190) x329))
(assert (x74 x435))
(assert (= (x480 (x998 x1078)) x1078))
(assert (=> (<= x407 10000) (= (x856 x407) (x998 x407))))
(assert (= (x856 759532456) (x998 759532456)))
(assert (x581 x1164))
(assert (= (x480 (x998 x1223)) x1223))
(assert (= (x480 (x856 1517119036)) 1517119036))
(assert (x74 x1265))
(assert (x74 x837))
(assert (x74 x1176))
(assert (= (ite (and x314 x820) (x1293 x519) (x172 x519)) (x513 x519)))
(assert (x74 x470))
(assert (x74 x883))
(assert (x74 x1114))
(assert (= (x1503 x56) (ite (= x56 x1433) x514 (x319 x56))))
(assert (x74 x1505))
(assert (x74 x569))
(assert (=> (<= x1044 10000) (= (x856 x1044) (x998 x1044))))
(assert (= (ite (and x1569 (not x1244) x1432) (x918 x391) (x593 x391)) (x1252 x391)))
(assert (= (ite (= x713 x516) x601 (x686 x516)) (x565 x516)))
(assert (x74 x771))
(assert (=> (>= 10000 x1175) (= (x998 x1175) (x856 x1175))))
(assert (x581 x781))
(assert (x581 x1245))
(assert (= x781 (x480 (x998 x781))))
(assert (x74 x1028))
(assert (= (x856 2512682246) (x998 2512682246)))
(assert (= x1103 x523))
(assert (=> (>= 10000 x315) (= (x998 x315) (x856 x315))))
(assert (x581 x591))
(assert (= (x480 (x998 x804)) x804))
(assert (x74 x867))
(assert (=> (<= x781 10000) (= (x998 x781) (x856 x781))))
(assert (x74 x1342))
(assert (= (x1566 x1379) (ite (and x523 x1238) (x565 x1379) (x1400 x1379))))
(assert (= (x1441 x361) (ite (and x711 x196) (x373 x361) (x1533 x361))))
(assert (x74 x668))
(assert (x74 x620))
(assert (x74 x708))
(assert (x581 x1102))
(assert (= (x480 (x998 x1285)) x1285))
(assert (= (ite (= x361 x499) x235 (x1062 x361)) (x942 x361)))
(assert (= (ite (and x1542 x854) (x297 x1328) (x849 x1328)) (x170 x1328)))
(assert (x74 x81))
(assert (= (x1429 x178) (ite (= x178 x1251) x484 (x1378 x178))))
(assert (= (x1503 x361) (ite (= x1433 x361) x514 (x319 x361))))
(assert (=> (>= 10000 x625) (= (x998 x625) (x856 x625))))
(assert (= (ite (and (not x549) x1542 (not x1125) x1538) (x942 x900) (ite (and x1542 (not x1538) (not x549)) (x1062 x900) (ite (and x1542 x549) (x1062 x900) (x704 x900)))) (x337 x900)))
(assert (x581 x79))
(assert (= (ite (and x1542 x265) (x762 x687) (x879 x687)) (x1089 x687)))
(assert (= x1256 (=> (and (= x796 false) (<= 0 x761) (= false x1524) (>= x199 0) (<= 0 x1013) (>= 1461501637330902918203684832716283019655932542975 x909) (<= x1045 1461501637330902918203684832716283019655932542975) (>= x1045 0) (= x775 x199) (>= x909 0) (>= 1461501637330902918203684832716283019655932542975 x761) (= x137 (x1004 (x998 274184521717934524641157099916833587218))) (<= 0 x860) (= x311 (x1004 (x998 274184521717934524641157099916833587206))) (<= 0 x137) (= x860 x154) (= 2939843472 x173) (= (x1004 (x998 274184521717934524641157099916833587214)) x1013) (<= x860 1461501637330902918203684832716283019655932542975) (= x317 (< 0 (x895 (x998 274184521717934524641157099916833587206)))) x246 (= (> (x895 (x998 274184521717934524641157099916833587218)) 0) x246) (<= 0 x311) (= x1152 x1229) (= (> (x895 (x998 274184521717934524641157099916833587214)) 0) x186) (= 5 x883) x317 (>= 1461501637330902918203684832716283019655932542975 x199) (= false x385) (= x191 x909) x186 (= false x424)) x87)))
(assert (x74 x1119))
(assert (=> (<= x418 10000) (= (x856 x418) (x998 x418))))
(assert (x1303 x785))
(assert (x74 x94))
(assert (x74 x220))
(assert (x74 x1229))
(assert (= x108 (x480 (x998 x108))))
(assert (x74 x350))
(assert (= (x845 x1529) (ite (= x1390 x1529) x1439 (x1070 x1529))))
(assert (= x558 (x480 (x998 x558))))
(assert (= (x918 x1529) (ite (and x1569 x1432 (not x1267) x1090 x1434 x961) (x984 x1529) (ite (and x961 x1432 x1434 x1569 (not x1090)) (x111 x1529) (ite (and x1432 x1569 (not x961) x1434) (x1429 x1529) (ite (and x1432 (not x1434) x1569) (x1378 x1529) (x261 x1529)))))))
(assert (x581 x6))
(assert (x581 x914))
(assert (x74 x149))
(assert (= (ite (and x711 x196) (x373 x712) (x1533 x712)) (x1441 x712)))
(assert (x74 x649))
(assert (=> (>= 10000 x956) (= (x998 x956) (x856 x956))))
(assert (= (ite (= x1529 x231) x1075 (x111 x1529)) (x984 x1529)))
(assert (x74 x848))
(assert (= x1560 x962))
(assert (x74 x503))
(assert (x74 x1262))
(assert (x74 x914))
(assert (x581 x1012))
(assert (x74 x1223))
(assert (x74 x606))
(assert (x581 x257))
(assert (=> (>= 10000 x414) (= (x998 x414) (x856 x414))))
(assert (x74 x398))
(assert (x74 x629))
(assert (= (x480 (x998 x88)) x88))
(assert (x581 x746))
(assert (x581 x1201))
(assert (= (x480 (x856 911411945)) 911411945))
(assert (= x228 (x480 (x998 x228))))
(assert (= (x998 1461501637330902918203684832716283019655932542975) (x856 1461501637330902918203684832716283019655932542975)))
(assert (= (ite (= x391 x1030) x81 (x1429 x391)) (x111 x391)))
(assert (x74 x993))
(assert (= x730 (or (and x597 x562) x78)))
(assert (= x523 x1559))
(assert (x74 x536))
(assert (x74 x1333))
(assert (x581 x843))
(assert (x74 x916))
(assert (x74 x418))
(assert (x74 x1546))
(assert (x74 x1289))
(assert (x581 x934))
(assert (= (x998 2061678023) (x856 2061678023)))
(assert (=> (>= 10000 x1305) (= (x998 x1305) (x856 x1305))))
(assert (= (ite (= x712 x713) x601 (x686 x712)) (x565 x712)))
(assert (= (x422 x935) (ite (and (not x1125) x1538 x1542 (not x549)) (x1204 x935) (ite (and (not x549) (not x1538) x1542) (x766 x935) (ite (and x1542 x549) (x766 x935) (x1128 x935))))))
(assert (=> (<= x533 10000) (= (x856 x533) (x998 x533))))
(assert (x74 x440))
(assert (= (x1566 x391) (ite (and x523 x1238) (x565 x391) (x1400 x391))))
(assert (= (=> (and (> x790 0) (<= x191 1461501637330902918203684832716283019655932542975) (= x289 (x123 (x998 x1152) (x856 6) 0)) (not (< x1178 1968616202)) (not (= x1178 1986467848)) (= (x123 (x998 x191) x289 0) x576) (not (= x1178 2211524764)) (not (= 1968616202 x1178)) (not (= 2061678023 x1178)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x550) (= x26 x550) (= (x895 (x998 274184521717934524641157099916833587206)) x790) (>= x550 0) (< x1178 2293535753) (= (x683 x576) x550) (not (> 911411945 x1178)) (= 2258409472 x1178)) (=> (and (= x26 x1546) (= x909 x1231) (= x1229 x6)) x86)) x87))
(assert (x74 x1044))
(assert (= x999 (=> (and (or (and (= (x423 1461501637330902918203684832716283019655932542975 x60) x284) x808 (= x975 (x123 (x998 x284) x206 0)) (= (x123 (x998 x279) x975 0) x774) (= (x423 1461501637330902918203684832716283019655932542975 x772) x279) (= x1435 x928) (= (x123 (x998 x885) (x856 7) 0) x206)) (and (= (= x398 0) x1277) (= x503 (x1029 x813)) (= x17 (x293 x1172)) (<= 0 x503) (= (x262 x14) x1386) (= x259 (> x290 x17)) (= (x123 (x998 x885) (x856 1) 0) x14) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1386) (>= x1386 0) (= (x123 (x998 x885) (x856 7) 0) x486) (= x1494 (x423 1461501637330902918203684832716283019655932542975 x60)) (= x813 (x146 x14 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x503) (not x808) (<= x17 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x595 (x123 (x998 x1494) x486 0)) (= x589 (x477 (+ x1435 32))) (= (x123 (x998 x548) x595 0) x1172) (= x548 (x423 1461501637330902918203684832716283019655932542975 x772)) (>= x17 0) (= (x477 (+ x1435 64)) x1373) (or (and (or (and (not x659) (= x1464 x991)) (and (= x272 (x1270 x589)) (= x1464 x272) x659)) (or (and x582 (= (x1270 x1435) x610) (not (< x1464 x610)) (= x159 (x1126 (- x1464 x610))) (= x398 x159)) (and (= x660 (x1126 (- x1464 x17))) (= x398 x1183) (not (> x17 x1464)) (= 604800 x71) (= (ite (< x660 604800) x660 604800) x1183) (not x582))) (= x659 (< x1253 x991)) (= (x1270 x589) x1253) x259 (= x582 (= 0 x17))) (and (not x259) (= x398 0))) (or (and (= x931 (x123 (x998 x885) (x856 7) 0)) (= x472 x1417) (< (* x905 x398) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x1277) (= (x423 1461501637330902918203684832716283019655932542975 x772) x632) (= x830 (x123 (x998 x1285) x706 0)) (= (* x398 x905) x472) (= x924 (x123 (x998 x632) x821 0)) (= (x423 1461501637330902918203684832716283019655932542975 x772) x1285) (= (x123 (x998 x139) x663 0) x821) (= x663 (x123 (x998 x885) (x856 3) 0)) (= x706 (x123 (x998 x780) x931 0)) (= (x423 1461501637330902918203684832716283019655932542975 x60) x139) (= x780 (x423 1461501637330902918203684832716283019655932542975 x60)) (= x928 x1373)) (and (= x972 (x423 1461501637330902918203684832716283019655932542975 x772)) x1277 (= x928 x1373) (= (x123 (x998 x885) (x856 7) 0) x910) (= (x123 (x998 x972) x1336 0) x630) (= x88 (x423 1461501637330902918203684832716283019655932542975 x60)) (= (x123 (x998 x88) x910 0) x1336))) (= x290 (x1270 x589)))) (= x808 (= x905 0)) (or x820 (and (= (x123 (x998 x1356) x604 0) x1118) (= (x423 1461501637330902918203684832716283019655932542975 x772) x812) (= (x423 1461501637330902918203684832716283019655932542975 x60) x1356) (= (x123 (x998 x885) (x856 9) 0) x604) (= (x123 (x998 x812) x1118 0) x1369) (not x820))) (= (= x873 0) x820)) x692)))
(assert (x74 x369))
(assert (x581 x1558))
(assert (x581 x1194))
(assert (x581 x481))
(assert (= (ite (and x196 x711) (x373 x1526) (x1533 x1526)) (x1441 x1526)))
(assert (x74 x451))
(assert (= x1032 (and x1023 x1077)))
(assert (= x149 (x480 (x998 x149))))
(assert (x74 x994))
(assert (x74 x1449))
(assert (x74 x571))
(assert (x74 x313))
(assert (= x238 x1154))
(assert (= (x480 (x998 x993)) x993))
(assert (= x310 true))
(assert (x74 x960))
(assert (= 2835717307 (x480 (x856 2835717307))))
(assert (= (ite (= x178 x753) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x178)) (x1378 x178)))
(assert (= (x650 x166) (ite (and x808 x314) (x979 x166) (ite (and x1277 (not x808) x314) (x628 x166) (x1509 x166)))))
(assert (=> (<= x79 10000) (= (x856 x79) (x998 x79))))
(assert (x74 x1544))
(assert (= x1220 (x480 (x998 x1220))))
(assert (x74 x1502))
(assert (x74 x934))
(assert (x74 x566))
(assert (x74 x71))
(assert (x74 x1515))
(assert (x74 x1526))
(assert (= (x856 2258409472) (x998 2258409472)))
(assert (=> (<= x1233 10000) (= (x998 x1233) (x856 x1233))))
(assert (= (ite (= x1424 x231) x1075 (x111 x1424)) (x984 x1424)))
(assert (=> (<= x1333 10000) (= (x856 x1333) (x998 x1333))))
(assert (not x1256))
(assert (x74 x1444))
(assert (x74 x299))
(assert (= x51 (=> (and (= x492 x271) (not (= x429 2211524764)) (not (> 911411945 x429)) (<= x492 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7 (x895 (x998 274184521717934524641157099916833587206))) (> x7 0) (not (= 2061678023 x429)) (= x429 2258409472) (not (= 1968616202 x429)) (<= 0 x492) (not (< x429 1968616202)) (<= x203 1461501637330902918203684832716283019655932542975) (= (x123 (x998 x483) (x856 6) 0) x184) (= x677 (x123 (x998 x203) x184 0)) (< x429 2293535753) (= x492 (x1467 x677)) (not (= x429 1986467848))) (=> (and (= x1229 x1521) (= x271 x244) (= x909 x1408)) x1470))))
(assert (x581 x1111))
(assert (= (x1378 x712) (ite (= x712 x753) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x712))))
(assert (=> (>= 10000 x197) (= (x998 x197) (x856 x197))))
(assert (x74 x189))
(assert (= 2960351575 (x480 (x856 2960351575))))
(assert (= (x480 (x856 759532456)) 759532456))
(assert (= x738 (x480 (x998 x738))))
(assert (= x956 (x480 (x998 x956))))
(assert (= (x480 (x998 x1194)) x1194))
(assert (= (x480 (x998 x418)) x418))
(assert (x74 x882))
(assert (= 274184521717934524641157099916833587218 (x480 (x998 274184521717934524641157099916833587218))))
(assert (= (x1429 x569) (ite (= x569 x1251) x484 (x1378 x569))))
(assert (x74 x785))
(assert (x74 x1178))
(assert (= (ite (and x314 x808) (x979 x1263) (ite (and x314 x1277 (not x808)) (x628 x1263) (x1509 x1263))) (x650 x1263)))
(assert (x74 x617))
(assert (x74 x1414))
(assert (x74 x855))
(assert (= x124 (or (and x831 x1209) (and (not x517) x974) (and (not x654) x54))))
(assert (= x932 (x480 (x998 x932))))
(assert (=> (>= 10000 x130) (= (x998 x130) (x856 x130))))
(assert (x74 x154))
(assert (x74 x1366))
(assert (x74 x995))
(assert (= (x1252 x178) (ite (and x1432 x1569 (not x1244)) (x918 x178) (x593 x178))))
(assert (x581 x1217))
(assert (x74 x1330))
(assert (= (ite (= x231 x391) x1075 (x111 x391)) (x984 x391)))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x480 (x856 115792089237316195423570985008687907853269984665640564039457))))
(assert (=> (>= 10000 x591) (= (x998 x591) (x856 x591))))
(assert (= (x1378 x56) (ite (= x753 x56) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x56))))
(assert (x74 x1206))
(assert (= (or (and (not x642) x347) (and (not x818) x735) (and x1240 x1142)) x1453))
(assert (= (ite (= x499 x75) x235 (x1062 x75)) (x942 x75)))
(assert (x74 x838))
(assert (x74 x82))
(assert (= (x1361 x1379) 0))
(assert (= (ite (= x713 x1030) x81 (x1429 x713)) (x111 x713)))
(assert (x74 x115))
(assert (= (x480 (x998 x1156)) x1156))
(assert (x74 x69))
(assert (=> (<= x914 10000) (= (x856 x914) (x998 x914))))
(assert (= (and x1377 x1392) x301))
(assert (x74 x429))
(assert (x74 x460))
(assert (= (x480 (x998 x284)) x284))
(assert (= (x170 x677) (ite (and x1542 x854) (x297 x677) (x849 x677))))
(assert (=> (<= x626 10000) (= (x856 x626) (x998 x626))))
(assert (x74 x1139))
(assert (= (x480 (x998 x463)) x463))
(assert (= x257 (x480 (x998 x257))))
(assert (= (x1204 x1571) (ite (= x1571 x372) x973 (x766 x1571))))
(assert (x74 x932))
(assert (= (x111 x1529) (ite (= x1529 x1030) x81 (x1429 x1529))))
(assert (= (+ (x480 x14) 1) (x480 (x146 x14 1))))
(assert (x74 x1179))
(assert (x74 x66))
(assert (x74 x432))
(assert (= (x480 (x998 x1474)) x1474))
(assert (=> (<= x138 10000) (= (x856 x138) (x998 x138))))
(assert (= (x1378 x1526) (ite (= x753 x1526) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x1526))))
(assert (= (x998 274184521717934524641157099916833587214) (x856 274184521717934524641157099916833587214)))
(assert (x74 x97))
(assert (=> (<= x1168 10000) (= (x998 x1168) (x856 x1168))))
(assert (x74 x983))
(assert (= (x513 x508) (ite (and x820 x314) (x1293 x508) (x172 x508))))
(assert (= (or (and x1032 (not x586)) (and x294 (not x1079))) x671))
(assert (= x636 (=> (and (= (< x266 x5) x112) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x266) (= x1083 (x423 1461501637330902918203684832716283019655932542975 x60)) (= (x944 x158) x1411) (= x82 (x423 1461501637330902918203684832716283019655932542975 x60)) (or (and (= x1479 (x423 1461501637330902918203684832716283019655932542975 x60)) (= (x123 (x998 x1479) x1186 0) x1057) x854 (= x1186 (x123 (x998 x885) (x856 6) 0))) (and (= (x123 (x998 x198) x888 0) x209) (= x1287 (* x1488 x1299)) (< (* x1299 x1488) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1181 (x423 1461501637330902918203684832716283019655932542975 x60)) (= x198 (x423 1461501637330902918203684832716283019655932542975 x60)) (= x1287 x1132) (= x1288 (x123 (x998 x1181) x1105 0)) (not x854) (= x1105 (x123 (x998 x885) (x856 5) 0)) (= (x123 (x998 x885) (x856 6) 0) x888))) (= (x1029 x390) x1247) (= x390 (x146 x515 1)) (= x1456 (x423 1461501637330902918203684832716283019655932542975 x60)) (or (and (= x1299 0) (not x112)) (and (= x200 (< x53 x991)) (= x53 (x1062 x897)) (= x1215 (= x266 0)) (or (and (= (x1062 x897) x1324) (= x858 x1324) x200) (and (not x200) (= x991 x858))) x112 (or (and (= x1299 x777) (= (ite (> 604800 x607) x607 604800) x777) (not (< x858 x266)) (= x607 (x1126 (- x858 x266))) (not x1215) (= 604800 x1455)) (and (not (> x388 x858)) x1215 (= x1449 x1299) (= x1449 (x1126 (- x858 x388))) (= x388 (x1062 x928)))))) (<= x1411 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1247 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1062 x897) x5) (= (x123 (x998 x885) (x856 5) 0) x491) (= (x1332 x602) x360) (<= 0 x724) (>= x1411 0) (<= 0 x266) (= x1539 (x123 (x998 x82) x1109 0)) (<= 0 x1247) (= x436 (x477 (+ x928 64))) (= (x123 (x998 x885) (x856 1) 0) x515) (= x65 (x123 (x998 x885) (x856 6) 0)) (= x854 (= x1299 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x360) (= x897 (x477 (+ 32 x928))) (or (and (= (> x601 0) x1538) (= (mod (* 1000000000000000000 x360) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1137) (= x631 0) (= x791 (div x1137 x1411)) (= 1 x180) (> x1411 0) (= (ite (> x360 115792089237316195423570985008687907853269984665640564039457) 1 0) x736) (not x549) (= (x423 x180 x736) x631) (or (not x1538) (and (>= 1461501637330902918203684832716283019655932542975 x914) (= x973 (+ x661 x91)) (= (x123 (x998 x583) x151 0) x44) (= (x423 1461501637330902918203684832716283019655932542975 x60) x304) (= x1 (* x570 x791)) (= x1112 (x123 (x998 x885) (x856 4) 0)) (= (x766 x48) x1468) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1155 x344)) (= x661 x360) (= x91 x1359) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1359) (= x1468 0) (= x344 x940) (<= 0 x1359) (= (x123 (x998 x304) x1112 0) x151) (= (x123 (x998 x885) (x856 4) 0) x795) (= (x1062 x499) x1155) (= x613 x441) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1468) (= x570 (x464 x646)) (< (* x570 x791) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x372 (x123 (x998 x1052) x342 0)) (<= 0 x1468) (= x147 (x123 (x998 x635) x795 0)) (<= x570 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x635 (x423 1461501637330902918203684832716283019655932542975 x60)) (= x1155 x141) (= x235 (+ x940 x141)) (= (x123 (x998 x1412) x147 0) x342) (<= x1052 1461501637330902918203684832716283019655932542975) (> x601 0) (< 0 x678) (= (x123 (x998 x257) x836 0) x646) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1359 x360)) (= x499 (x477 (+ x837 160))) (>= x570 0) (= x914 (x45 x441)) (= x678 (x1062 x713)) (= x1412 (x423 1461501637330902918203684832716283019655932542975 x772)) (= (x45 x441) x1052) (> x601 0) (= x836 (x123 (x998 x1078) x109 0)) (= x109 (x123 (x998 x885) (x856 11) 0)) (= x1125 (> x601 1)) (or (not x1125) (and (= (x942 x1198) x143) (< (+ x945 x360) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x123 (x998 x1339) x1351 0) x93) (not x43) (= x1394 (x942 x713)) (= (x123 (x998 x1558) x1151 0) x643) (= (x45 x1113) x1558) (= (x1204 x643) x283) (= (x123 (x998 x1194) x673 0) x788) (>= x283 0) (= (div x1481 1000000000000000000) x838) (> x601 1) (= (x45 x1113) x1130) (<= x283 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1339 (x423 1461501637330902918203684832716283019655932542975 x60)) (= x1198 (x477 (+ x837 192))) (= (x123 (x998 x1474) x102 0) x616) (= 0 x283) (= (x45 x1113) x1474) (> x601 1) (= x143 x245) (= (x423 1461501637330902918203684832716283019655932542975 x60) x1194) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x945) (= x1113 (x477 (+ x1454 64))) (= x764 (x123 (x998 x983) x76 0)) (< (* x791 x1188) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1188 0) (= x1481 (* x791 x1188)) (= x934 (x423 1461501637330902918203684832716283019655932542975 x772)) (>= 1461501637330902918203684832716283019655932542975 x1474) (<= x1130 1461501637330902918203684832716283019655932542975) (= (x423 1461501637330902918203684832716283019655932542975 x772) x426) (= (x464 x512) x1188) (= x838 x404) (<= x1188 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1545 x945) x1125 (= (+ x245 x404) x1513) (= (x123 (x998 x934) x764 0) x1151) (< (+ x838 x143) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x1545 x156) x799) (< 1 x1394) (= x983 (x423 1461501637330902918203684832716283019655932542975 x60)) (= (x1204 x616) x945) (< 1 x601) (>= x945 0) (= (> x601 2) x43) (= x673 (x123 (x998 x885) (x856 4) 0)) (= (x123 (x998 x885) (x856 4) 0) x76) (= (x123 (x998 x885) (x856 11) 0) x1351) (>= 1461501637330902918203684832716283019655932542975 x1558) (= x512 (x123 (x998 x1130) x93 0)) (= x360 x156) (= x102 (x123 (x998 x426) x788 0)))) (= x344 (div x1 1000000000000000000)) (= (x45 x441) x257) (> x601 0) (= (x123 (x998 x914) x44 0) x48) (<= x257 1461501637330902918203684832716283019655932542975) x1538 (= (x423 1461501637330902918203684832716283019655932542975 x772) x583) (= x1359 (x766 x372)) (= x1078 (x423 1461501637330902918203684832716283019655932542975 x60))))) x549) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x724) (= (x123 (x998 x1456) x65 0) x1066) (= (= x360 0) x549) (= x1233 (x423 1461501637330902918203684832716283019655932542975 x772)) (= (x123 (x998 x1083) x491 0) x158) (or x265 (and (= (x123 (x998 x885) (x856 10) 0) x726) (= (x123 (x998 x746) x726 0) x868) (= x746 (x423 1461501637330902918203684832716283019655932542975 x60)) (not x265))) (= (x262 x515) x724) (= (x123 (x998 x885) (x856 3) 0) x1109) (= x266 (x683 x1066)) (= x602 (x123 (x998 x1233) x1539 0)) (<= 0 x360) (= (= x105 0) x265)) x1340)))
(assert (x74 x1019))
(assert (x74 x773))
(assert (= x1266 (x480 (x998 x1266))))
(assert (= x655 (x480 (x998 x655))))
(assert (x74 x927))
(assert (x74 x1008))
(assert (x74 x1124))
(assert (= 2798343961 (x480 (x856 2798343961))))
(assert (x74 x1064))
(assert (x581 x35))
(assert (= (and x642 x347) x1142))
(assert (x74 x1237))
(assert (x581 x203))
(assert (x74 x791))
(assert (= (x1062 x765) (ite (= x765 x897) x1247 (x1088 x765))))
(assert (= (ite (and x961 x1434 x1090 x1432 x1569 (not x1267)) (x984 x391) (ite (and x1434 x1569 x961 x1432 (not x1090)) (x111 x391) (ite (and (not x961) x1569 x1434 x1432) (x1429 x391) (ite (and x1569 (not x1434) x1432) (x1378 x391) (x261 x391))))) (x918 x391)))
(assert (= (x480 (x998 x1217)) x1217))
(assert (=> (>= 10000 x1554) (= (x998 x1554) (x856 x1554))))
(assert (= (x1062 x391) (ite (= x391 x897) x1247 (x1088 x391))))
(assert (x74 x900))
(assert (x74 x860))
(assert (x74 x118))
(assert (= x1157 (=> (= 0 x461) x1271)))
(assert (= (ite (and x523 x1238) (x565 x900) (x1400 x900)) (x1566 x900)))
(assert (= (x1062 x178) (ite (= x897 x178) x1247 (x1088 x178))))
(assert (x74 x591))
(assert (= (x480 (x998 x428)) x428))
(assert (x1303 x1495))
(assert (= (ite (= x1433 x1550) x906 (x367 x1433)) (x319 x1433)))
(assert (x74 x718))
(assert (= (x453 x136) (ite (= x136 x1571) x1226 (x422 x136))))
(assert (x74 x609))
(assert (x581 x197))
(assert (x74 x1099))
(assert (= (x1566 x776) (ite (and x523 x1238) (x565 x776) (x1400 x776))))
(assert (x74 x1375))
(assert (=> (>= 10000 x279) (= (x998 x279) (x856 x279))))
(assert (=> (>= 10000 x35) (= (x856 x35) (x998 x35))))
(assert (= (ite (= x825 x1571) x1226 (x422 x825)) (x453 x825)))
(assert (x74 x13))
(assert (x74 x1191))
(assert (= (x1441 x391) (ite (and x196 x711) (x373 x391) (x1533 x391))))
(assert (= 2258409472 (x480 (x856 2258409472))))
(assert (x74 x388))
(assert (x74 x126))
(assert (= (and x447 (not x77)) x562))
(assert (x581 x461))
(assert (x581 x786))
(assert (x74 x1285))
(assert (= x129 (x480 (x998 x129))))
(assert (= x1304 (x480 (x998 x1304))))
(assert (= (ite (= x75 x897) x1247 (x1088 x75)) (x1062 x75)))
(assert (=> (>= 10000 x335) (= (x856 x335) (x998 x335))))
(assert (x74 x204))
(assert (x74 x736))
(assert (= (ite (= x753 x765) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x765)) (x1378 x765)))
(assert (= (x1204 x136) (ite (= x136 x372) x973 (x766 x136))))
(assert (x581 x1044))
(assert (= x1333 (x480 (x998 x1333))))
(assert (x74 x26))
(assert (= (x1503 x178) (ite (= x178 x1433) x514 (x319 x178))))
(assert (= (x480 (x998 x983)) x983))
(assert (x74 x1280))
(assert (= (x565 x56) (ite (= x713 x56) x601 (x686 x56))))
(assert (= (x480 (x998 x548)) x548))
(assert (=> (<= x125 10000) (= (x856 x125) (x998 x125))))
(assert (x581 x1002))
(assert (x74 x937))
(assert (= (x1566 x75) (ite (and x1238 x523) (x565 x75) (x1400 x75))))
(assert (x74 x376))
(assert (= (x480 (x998 x1544)) x1544))
(assert (=> (<= x1019 10000) (= (x856 x1019) (x998 x1019))))
(assert (x74 x244))
(assert (x581 x521))
(assert (x74 x125))
(assert (= x274 (and x586 x1032)))
(assert (= (=> (and (= (x123 (x998 x179) x1506 0) x450) (not (= x840 69947311)) (= (x123 (x998 x605) x450 0) x707) (>= x1191 0) (not (= 87118632 x840)) (>= 1461501637330902918203684832716283019655932542975 x605) (> x902 0) (= x902 (x895 (x998 274184521717934524641157099916833587206))) (> 468353030 x840) (= x1254 x1191) (= 142201243 x840) (= x1191 (x1293 x707)) (> 911411945 x840) (>= 1461501637330902918203684832716283019655932542975 x179) (= (x123 (x998 x1175) (x856 9) 0) x1506) (> 2293535753 x840) (<= x1191 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x909 x288) (= x761 x225) (= x1254 x715) (= x1168 x1229)) x1213)) x233))
(assert (x74 x563))
(assert (x581 x1339))
(assert (x74 x1390))
(assert (=> (>= 10000 x1231) (= (x998 x1231) (x856 x1231))))
(assert (x74 x1226))
(assert (= (x319 x187) (ite (= x1550 x187) x906 (x367 x187))))
(assert (=> (<= x717 10000) (= (x998 x717) (x856 x717))))
(assert (= (x845 x178) (ite (= x178 x1390) x1439 (x1070 x178))))
(assert (= (ite (and x1090 x1434 (not x1267) x1432 x961 x1569) (x984 x900) (ite (and (not x1090) x1434 x961 x1432 x1569) (x111 x900) (ite (and (not x961) x1569 x1434 x1432) (x1429 x900) (ite (and x1569 x1432 (not x1434)) (x1378 x900) (x261 x900))))) (x918 x900)))
(assert (x1303 x180))
(assert (x74 x135))
(assert (= (ite (= x187 x1433) x514 (x319 x187)) (x1503 x187)))
(assert (= x843 (x480 (x998 x843))))
(assert (= x179 (x480 (x998 x179))))
(assert (=> (<= x993 10000) (= (x998 x993) (x856 x993))))
(assert (x74 x972))
(assert (x74 x139))
(assert (= (x998 87118632) (x856 87118632)))
(assert (= (x480 (x856 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (x581 x483))
(assert (= x741 (x480 (x998 x741))))
(assert (= (ite (= x1198 x897) x1247 (x1088 x1198)) (x1062 x1198)))
(assert (= (x480 (x856 635128645)) 635128645))
(assert (= (x998 1986467848) (x856 1986467848)))
(assert (=> (<= x340 10000) (= (x856 x340) (x998 x340))))
(assert (=> (>= 10000 x1160) (= (x856 x1160) (x998 x1160))))
(assert (= (x480 (x998 x197)) x197))
(assert (x581 x431))
(assert (= (x650 x1011) (ite (and x808 x314) (x979 x1011) (ite (and x314 x1277 (not x808)) (x628 x1011) (x1509 x1011)))))
(assert (= (x480 (x856 2764855426)) 2764855426))
(assert (= x805 (or x1561 x619)))
(assert (= x347 (and x302 x539)))
(assert (= (and x1419 x520) x1077))
(assert (=> (>= 10000 x1521) (= (x998 x1521) (x856 x1521))))
(assert (x74 x1348))
(assert (= (=> (and (= (x895 (x998 274184521717934524641157099916833587206)) x320) (= x1225 x1353) (not (> 468353030 x177)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1353) (<= 0 x1353) (> 2293535753 x177) (not (= x177 635128645)) (> x320 0) (not (= x177 468353030)) (= x1353 (x234 x694)) (<= x1485 1461501637330902918203684832716283019655932542975) (<= x117 1461501637330902918203684832716283019655932542975) (= (x123 (x998 x1485) x1436 0) x694) (= 759532456 x177) (< x177 911411945) (= (x123 (x998 x1220) (x856 7) 0) x471) (= (x123 (x998 x117) x471 0) x1436)) (=> (and (= x553 x761) (= x29 x1225) (= x1229 x1388) (= x909 x1102)) x559)) x518))
(assert (x74 x1294))
(assert (x74 x216))
(assert (x74 x557))
(assert (x74 x167))
(assert (= (ite (= x1030 x1526) x81 (x1429 x1526)) (x111 x1526)))
(assert (= (x944 x592) (ite (and x1542 x854) (x841 x592) (x211 x592))))
(assert (x74 x1475))
(assert (x74 x1345))
(assert (= (x942 x1424) (ite (= x1424 x499) x235 (x1062 x1424))))
(assert (=> (>= 10000 x228) (= (x856 x228) (x998 x228))))
(assert (= (=> (and (= x1437 (x123 (x998 x1391) x378 0)) (= (= x927 0) x1079) (= (x123 (x998 x431) (x856 6) 0) x378) (<= x927 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x927) (= (x683 x1437) x927) (= (x423 1461501637330902918203684832716283019655932542975 x60) x1391)) (and (=> (and (not x1308) x1079 (= (< 0 x699) x1308) (= x699 (x1126 (- x431 1)))) x1519) (=> (and (not x1079) (= x415 x431)) x1207))) x2))
(assert (x74 x965))
(assert (x74 x1009))
(assert (x74 x922))
(assert (x74 x1183))
(assert (=> (<= x1223 10000) (= (x856 x1223) (x998 x1223))))
(assert (x74 x359))
(assert (x581 x956))
(assert (=> (>= 10000 x1329) (= (x998 x1329) (x856 x1329))))
(assert (x74 x1130))
(assert (x74 x414))
(assert (x74 x524))
(assert (x74 x340))
(assert (x581 x82))
(assert (= (x480 (x998 x130)) x130))
(assert (= (x480 (x998 x625)) x625))
(assert (=> (>= 10000 x148) (= (x856 x148) (x998 x148))))
(assert (x581 x1152))
(assert (x74 x1528))
(assert (= (x856 274184521717934524641157099916833587206) (x998 274184521717934524641157099916833587206)))
(assert (= (x998 18446744073709551615) (x856 18446744073709551615)))
(assert (= x1339 (x480 (x998 x1339))))
(assert (= x117 (x480 (x998 x117))))
(assert (x581 x1333))
(assert (= (=> (and (= (x1126 (- x885 1)) x431) (= x801 (> x431 0))) (and (=> (not x801) x1519) (=> x801 x2))) x1489))
(assert (= x1305 (x480 (x998 x1305))))
(assert (x787 x95 x70))
(assert (x74 x1094))
(assert (= (or x1453 x494) x277))
(assert (= (x823 x391) (ite (and x1093 x379) (x393 x391) (x258 x391))))
(assert (= (x856 1889567281) (x998 1889567281)))
(assert (x581 x335))
(assert (x74 x231))
(assert (= (x480 (x856 468353030)) 468353030))
(assert (= (x480 (x998 x591)) x591))
(assert (x74 x4))
(assert (= (x480 (x998 x411)) x411))
(assert (= (x480 (x998 x125)) x125))
(assert (x74 x812))
(assert (= x1160 (x480 (x998 x1160))))
(assert (x74 x502))
(assert (= (x1361 192) 0))
(assert (x74 x758))
(assert (= (x856 826074471) (x998 826074471)))
(assert (= (x565 x713) x601))
(assert (=> (>= 10000 x1289) (= (x856 x1289) (x998 x1289))))
(assert (x74 x235))
(assert (= (x480 (x998 x632)) x632))
(assert (x581 x1078))
(assert (=> (<= x198 10000) (= (x998 x198) (x856 x198))))
(assert (x581 x148))
(assert (x74 x1232))
(assert (x74 x145))
(assert (x74 x1424))
(assert (= (x1361 160) 0))
(assert (=> (<= x1083 10000) (= (x998 x1083) (x856 x1083))))
(assert (=> (<= x843 10000) (= (x998 x843) (x856 x843))))
(assert (= (x337 x776) (ite (and (not x549) x1538 x1542 (not x1125)) (x942 x776) (ite (and x1542 (not x549) (not x1538)) (x1062 x776) (ite (and x1542 x549) (x1062 x776) (x704 x776))))))
(assert (x74 x863))
(assert (= x1289 (x480 (x998 x1289))))
(assert (= (ite (= x499 x776) x235 (x1062 x776)) (x942 x776)))
(assert (= (and x1569 x1432) x711))
(assert (= (ite (= x753 x569) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x122 x569)) (x1378 x569)))
(assert (= (or (and x1093 x379) (and x627 x898)) x913))
(assert (= x250 x698))
(assert (= (x480 (x998 x191)) x191))
(assert (x74 x872))
(assert (=> (>= 10000 x284) (= (x998 x284) (x856 x284))))
(assert (x74 x298))
(assert (= (ite (and (not x326) x962 x852) (x164 x1379) (x396 x1379)) (x641 x1379)))
(assert (= (x1568 x1529) (ite (= x1397 x1529) x219 (x845 x1529))))
(assert (x74 x682))
(assert (x74 x699))
(assert (= (and x801 x274) x294))
(assert (x74 x484))
(assert (x74 x570))
(assert (= (x942 x569) (ite (= x569 x499) x235 (x1062 x569))))
(assert (= (x942 x1526) (ite (= x1526 x499) x235 (x1062 x1526))))
(assert (= (x650 x694) (ite (and x808 x314) (x979 x694) (ite (and x314 x1277 (not x808)) (x628 x694) (x1509 x694)))))
(assert (x74 x859))
(assert (x74 x603))
(assert (= (x998 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x856 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x74 x283))
(assert (x74 x1408))
(assert (=> (>= 10000 x483) (= (x998 x483) (x856 x483))))
(assert (x1303 x1028))
(assert (x74 x506))
(assert (= (ite (and (not x1125) x1542 x1538 (not x549)) (x942 x569) (ite (and (not x549) (not x1538) x1542) (x1062 x569) (ite (and x549 x1542) (x1062 x569) (x704 x569)))) (x337 x569)))
(assert (x581 x972))
(assert (x581 x279))
(assert (x581 x149))
(assert (= (x319 x765) (ite (= x765 x1550) x906 (x367 x765))))
(assert (= (ite (= x1424 x1251) x484 (x1378 x1424)) (x1429 x1424)))
(assert (x74 x179))
(assert (x74 x804))
(assert (x74 x1433))
(assert (= x1297 (=> (and (= (<= 0 x1335) x1334) (= x957 (x507 (x998 x625))) (= (= x625 274184521717934524641157099916833587218) x379) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x18) x1141) x1334 x1141 (= (< (x507 (x998 x625)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x485) (= (x1448 (x998 274184521717934524641157099916833587206)) x1335) (= (x1448 (x998 x625)) x18) x485 (= (x1448 (x998 274184521717934524641157099916833587206)) x969) (= x691 x1486)) (and (=> (and (= x744 x956) (= x1214 (x15 x236)) (not x564) (>= x1214 0) (= x458 x886) (= (x1126 (- x1214 x498)) x113) (<= 0 x67) (= x1039 x1241) (= x498 x563) (not (= 649617121 x40)) (= x1274 (or (and (= (<= x449 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x449)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x449))) (= (x895 (x998 274184521717934524641157099916833587218)) x1385) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1241 x67)) (= (x123 (x998 x956) (x856 1) 0) x1487) (= (x123 (x998 274184521717934524641157099916833587206) (x856 1) 0) x236) (= 1 x96) (not (= 2514000705 x40)) x379 (not (< x40 649617121)) (not x475) (>= 1461501637330902918203684832716283019655932542975 x956) (= x956 x965) (<= x67 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1214 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1241 x498) (= x23 x67) (= 2835717307 x40) (= x872 274184521717934524641157099916833587206) (not x1274) (not (= 826074471 x40)) (= (x100 x1487) x67) (= x718 68) (= x564 (< x1214 x1241)) (= x454 (x123 (x998 274184521717934524641157099916833587206) (x856 1) 0)) (= x718 x1486) (= x475 (< x1214 x498)) (= (+ x1039 x23) x1265) (= 32 x230) (not (< x718 4)) (not (= x40 1889567281)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x651) (= x702 274184521717934524641157099916833587206) (= (x1126 (- x718 4)) x449) (= (>= (+ x1241 x67) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x456) (not x456) (< 0 x1385)) x618) (=> (not x379) x745)))))
(assert (x74 x291))
(assert (x74 x1217))
(assert (= (x1361 x569) 0))
(assert (x581 x1220))
(assert (= (ite (= x1550 x386) x906 (x367 x386)) (x319 x386)))
(assert (x74 x1562))
(assert (x74 x1324))
(assert (x74 x194))
(assert (x74 x1302))
(assert (x74 x1163))
(assert (x74 x690))
(assert (=> (>= 10000 x1016) (= (x856 x1016) (x998 x1016))))
(assert (x581 x428))
(assert (x74 x304))
(assert (= 0 (x1361 224)))
(assert (x74 x311))
(assert (x74 x835))
(assert (= (and x1115 (not x1106)) x334))
(assert (x74 x584))
(assert (x74 x732))
(assert (= (ite (and x961 (not x1267) x1432 x1569 x1434 x1090) (x984 x1526) (ite (and x1434 (not x1090) x1569 x961 x1432) (x111 x1526) (ite (and (not x961) x1432 x1434 x1569) (x1429 x1526) (ite (and x1432 (not x1434) x1569) (x1378 x1526) (x261 x1526))))) (x918 x1526)))
(assert (x74 x1310))
(assert (x74 x504))
(assert (x74 x798))
(assert (x443 x1495 x611))
(assert (= x1016 (x480 (x998 x1016))))
(assert (x1548 x60 x62))
(assert (x74 x228))
(assert (= (x480 (x998 x717)) x717))
(assert (= (x565 x1529) (ite (= x1529 x713) x601 (x686 x1529))))
(assert (= (x856 2514000705) (x998 2514000705)))
(assert (= (x1429 x391) (ite (= x1251 x391) x484 (x1378 x391))))
(assert (= (x856 3123789364) (x998 3123789364)))
(assert (= (=> (and (= x483 x1229) (= x203 x909)) x51) x27))
(assert (x74 x514))
(assert (x581 x719))
(assert (x74 x473))
(assert (x74 x1201))
(assert (x74 x223))
(assert (= (x565 x361) (ite (= x361 x713) x601 (x686 x361))))
(assert (= (ite (and (not x1267) x1434 x1090 x1432 x961 x1569) (x984 x75) (ite (and x1569 x1432 (not x1090) x961 x1434) (x111 x75) (ite (and (not x961) x1434 x1569 x1432) (x1429 x75) (ite (and x1569 (not x1434) x1432) (x1378 x75) (x261 x75))))) (x918 x75)))
(assert (x74 x175))
(assert (=> (<= x1558 10000) (= (x856 x1558) (x998 x1558))))
(assert (x74 x558))
(assert (= (x1361 x1529) 0))
(assert (x74 x41))
(assert (x74 x1196))
(check-sat)
