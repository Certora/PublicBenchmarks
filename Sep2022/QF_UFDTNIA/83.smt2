(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x976 0)) (((x250 (x787 x976) (x881 Int)) (x710 (x2032 x976) (x740 x976) (x1595 Int)) (x1823 (x307 Int)))))
(declare-fun x1377 () x976)
(declare-fun x2403 () Int)
(declare-fun x1609 () Bool)
(declare-fun x898 () Bool)
(declare-fun x2053 () Bool)
(declare-fun x2417 () x976)
(declare-fun x192 () Bool)
(declare-fun x1208 () x976)
(declare-fun x1545 () Bool)
(declare-fun x460 () Int)
(declare-fun x350 () Int)
(declare-fun x249 () x976)
(declare-fun x1794 () Bool)
(declare-fun x153 () Bool)
(declare-fun x1916 () Int)
(declare-fun x402 () Bool)
(declare-fun x2307 () Int)
(declare-fun x1739 () Int)
(declare-fun x605 () Int)
(declare-fun x1638 () Int)
(declare-fun x2098 () Int)
(declare-fun x35 () Int)
(declare-fun x1932 () Bool)
(declare-fun x1853 () x976)
(declare-fun x2299 () Int)
(declare-fun x1401 () Int)
(declare-fun x2321 () Int)
(declare-fun x1421 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x1203 () Int)
(declare-fun x2126 () Bool)
(declare-fun x2042 () x976)
(declare-fun x566 () Bool)
(declare-fun x611 () Int)
(declare-fun x2129 () Int)
(declare-fun x331 () Int)
(declare-fun x339 () Int)
(declare-fun x159 () Bool)
(declare-fun x531 () Int)
(declare-fun x678 () Int)
(declare-fun x506 () Bool)
(declare-fun x137 () Int)
(declare-fun x614 () Bool)
(declare-fun x379 () Int)
(declare-fun x845 () Int)
(declare-fun x1309 () Bool)
(declare-fun x2392 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x596 () Int)
(declare-fun x1658 () x976)
(declare-fun x539 () Int)
(declare-fun x1785 () Bool)
(declare-fun x924 () Bool)
(declare-fun x101 () Bool)
(declare-fun x290 () Bool)
(declare-fun x955 () Int)
(declare-fun x1838 () x976)
(declare-fun x1133 () Bool)
(declare-fun x2198 () Int)
(declare-fun x1774 () x976)
(declare-fun x2394 () Int)
(declare-fun x486 () Int)
(declare-fun x1185 () x976)
(declare-fun x900 () Int)
(declare-fun x1414 () Int)
(declare-fun x1194 () Bool)
(declare-fun x723 () x976)
(declare-fun x1172 () Bool)
(declare-fun x1490 () Int)
(declare-fun x587 () Bool)
(declare-fun x1016 () Int)
(declare-fun x2273 () Bool)
(declare-fun x111 () Int)
(declare-fun x977 () Bool)
(declare-fun x1495 () Int)
(declare-fun x2391 (Int) Int)
(declare-fun x498 () Bool)
(declare-fun x2409 () Int)
(declare-fun x904 () Bool)
(declare-fun x1492 (x976) Int)
(declare-fun x2337 () Int)
(declare-fun x969 () x976)
(declare-fun x946 () x976)
(declare-fun x2210 () Int)
(declare-fun x598 () Int)
(declare-fun x1209 () Int)
(declare-fun x206 () Int)
(declare-fun x243 () Bool)
(declare-fun x1005 () Int)
(declare-fun x130 () Int)
(declare-fun x2026 () Int)
(declare-fun x1954 () Bool)
(declare-fun x9 () Bool)
(declare-fun x2178 () Bool)
(declare-fun x1633 () Bool)
(declare-fun x2343 () Int)
(declare-fun x561 () Int)
(declare-fun x1188 () Bool)
(declare-fun x2395 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x458 (Int) Int)
(declare-fun x1498 () x976)
(declare-fun x775 () Bool)
(declare-fun x742 () Bool)
(declare-fun x792 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x541 () x976)
(declare-fun x1640 () Bool)
(declare-fun x1822 () Int)
(declare-fun x2380 () Int)
(declare-fun x2397 () x976)
(declare-fun x1789 () x976)
(declare-fun x1662 () Int)
(declare-fun x657 () Int)
(declare-fun x1763 (Int) Int)
(declare-fun x590 () x976)
(declare-fun x1526 () Bool)
(declare-fun x363 () Int)
(declare-fun x511 () x976)
(declare-fun x810 () Int)
(declare-fun x1475 () x976)
(declare-fun x1757 () Int)
(declare-fun x1032 () Bool)
(declare-fun x2002 () x976)
(declare-fun x1174 () Int)
(declare-fun x2234 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x2077 () Bool)
(declare-fun x457 () Int)
(declare-fun x2090 () Int)
(declare-fun x2057 () Int)
(declare-fun x401 (Int) Int)
(declare-fun x1328 () x976)
(declare-fun x451 () x976)
(declare-fun x2131 () Int)
(declare-fun x392 () Int)
(declare-fun x325 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x633 () Int)
(declare-fun x365 () Int)
(declare-fun x1718 () Int)
(declare-fun x1953 () Int)
(declare-fun x1272 () Bool)
(declare-fun x150 () Bool)
(declare-fun x1752 () Int)
(declare-fun x1125 () Bool)
(declare-fun x862 () x976)
(declare-fun x930 () Int)
(declare-fun x1872 () Bool)
(declare-fun x1544 () Int)
(declare-fun x174 () x976)
(declare-fun x58 () Bool)
(declare-fun x2272 () Int)
(declare-fun x64 () x976)
(declare-fun x1222 () Int)
(declare-fun x758 () Bool)
(declare-fun x430 () Int)
(declare-fun x1360 () Int)
(declare-fun x2073 () Bool)
(declare-fun x2306 () Int)
(declare-fun x1305 () Int)
(declare-fun x2345 () Bool)
(declare-fun x804 () Int)
(declare-fun x232 () Int)
(declare-fun x774 () x976)
(declare-fun x573 () x976)
(declare-fun x1066 () Bool)
(declare-fun x1779 () x976)
(declare-fun x591 () Int)
(declare-fun x707 () x976)
(declare-fun x1411 () x976)
(declare-fun x896 () Bool)
(declare-fun x2037 () Int)
(declare-fun x495 () Int)
(declare-fun x779 () Int)
(declare-fun x1955 () Int)
(declare-fun x942 () Bool)
(declare-fun x1996 () Bool)
(declare-fun x1155 () x976)
(declare-fun x2298 () x976)
(declare-fun x1259 () Int)
(declare-fun x2269 () Int)
(declare-fun x97 () Int)
(declare-fun x154 () Int)
(declare-fun x1053 () Bool)
(declare-fun x2097 () Int)
(declare-fun x535 () Bool)
(declare-fun x1684 () Bool)
(declare-fun x571 () Int)
(declare-fun x1744 () Int)
(declare-fun x155 () Bool)
(declare-fun x635 () Bool)
(declare-fun x1429 () Int)
(declare-fun x745 () x976)
(declare-fun x770 () x976)
(declare-fun x1905 () x976)
(declare-fun x713 () Int)
(declare-fun x2124 (Int) Int)
(declare-fun x996 () Int)
(declare-fun x69 () x976)
(declare-fun x1860 () x976)
(declare-fun x435 () Int)
(declare-fun x1146 () Int)
(declare-fun x2122 () Bool)
(declare-fun x2212 () Bool)
(declare-fun x685 () Int)
(declare-fun x1162 () x976)
(declare-fun x1187 () Int)
(declare-fun x1749 () Int)
(declare-fun x1169 () Bool)
(declare-fun x628 () Int)
(declare-fun x669 () Bool)
(declare-fun x195 (Int) Int)
(declare-fun x304 () Int)
(declare-fun x335 () Int)
(declare-fun x2249 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x973 () Bool)
(declare-fun x747 () Bool)
(declare-fun x1098 () Int)
(declare-fun x95 () Bool)
(declare-fun x19 () x976)
(declare-fun x275 () Int)
(declare-fun x1948 () x976)
(declare-fun x1863 () Int)
(declare-fun x1836 () Bool)
(declare-fun x464 () Int)
(declare-fun x692 () Int)
(declare-fun x2358 () Int)
(declare-fun x1535 () Bool)
(declare-fun x2031 () Bool)
(declare-fun x524 () Int)
(declare-fun x1570 () Int)
(declare-fun x797 () Int)
(declare-fun x2260 () x976)
(declare-fun x79 () Int)
(declare-fun x517 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x2102 () Int)
(declare-fun x1808 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x1671 () Int)
(declare-fun x720 () Int)
(declare-fun x2291 () Bool)
(declare-fun x164 () Int)
(declare-fun x2200 () Bool)
(declare-fun x271 () Bool)
(declare-fun x2248 () Bool)
(declare-fun x2128 () Int)
(declare-fun x2240 () Int)
(declare-fun x783 () Int)
(declare-fun x1929 () Bool)
(declare-fun x2278 (Int) Int)
(declare-fun x2189 () Int)
(declare-fun x2208 () Bool)
(declare-fun x2368 () Int)
(declare-fun x1001 () Int)
(declare-fun x103 () Int)
(declare-fun x2292 () x976)
(declare-fun x1237 () Int)
(declare-fun x1362 () Int)
(declare-fun x675 () Bool)
(declare-fun x1364 () x976)
(declare-fun x404 () Int)
(declare-fun x2182 () x976)
(declare-fun x266 (Int) Int)
(declare-fun x958 () Int)
(declare-fun x550 () Bool)
(declare-fun x878 () Int)
(declare-fun x1807 () Int)
(declare-fun x1154 () Bool)
(declare-fun x1200 () Int)
(declare-fun x1296 () Int)
(declare-fun x1780 () Int)
(declare-fun x295 () Bool)
(declare-fun x342 () Bool)
(declare-fun x367 () x976)
(declare-fun x488 () Int)
(declare-fun x509 () Int)
(declare-fun x1285 () Int)
(declare-fun x1720 () Int)
(declare-fun x784 () x976)
(declare-fun x2165 () Bool)
(declare-fun x750 () Int)
(declare-fun x2010 (Int) Int)
(declare-fun x420 () x976)
(declare-fun x686 () Int)
(declare-fun x1301 () Bool)
(declare-fun x1512 () Int)
(declare-fun x1561 () Bool)
(declare-fun x2056 () Bool)
(declare-fun x1374 (Int) Int)
(declare-fun x384 () Int)
(declare-fun x540 () Bool)
(declare-fun x2163 () Bool)
(declare-fun x37 () Int)
(declare-fun x1046 () Int)
(declare-fun x2003 () Int)
(declare-fun x734 () Bool)
(declare-fun x1722 () Int)
(declare-fun x1327 () x976)
(declare-fun x656 () Int)
(declare-fun x1170 () Bool)
(declare-fun x2352 () Bool)
(declare-fun x421 () Int)
(declare-fun x1177 () Int)
(declare-fun x105 () Bool)
(declare-fun x954 () Int)
(declare-fun x2255 () Int)
(declare-fun x1857 () Bool)
(declare-fun x552 () x976)
(declare-fun x1824 () Int)
(declare-fun x2116 () x976)
(declare-fun x1484 () Bool)
(declare-fun x7 () Bool)
(declare-fun x2055 () Int)
(declare-fun x300 () x976)
(declare-fun x1111 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x1144 () Int)
(declare-fun x2114 () Int)
(declare-fun x813 () Int)
(declare-fun x1107 () Bool)
(declare-fun x45 () Bool)
(declare-fun x722 () Bool)
(declare-fun x407 () x976)
(declare-fun x1599 () x976)
(declare-fun x1426 (x976) Int)
(declare-fun x1841 () Int)
(declare-fun x1323 () x976)
(declare-fun x398 () Int)
(declare-fun x1300 () Int)
(declare-fun x818 () Int)
(declare-fun x1701 () Bool)
(declare-fun x585 () Int)
(declare-fun x1574 () Int)
(declare-fun x1460 () Int)
(declare-fun x1275 () Int)
(declare-fun x714 () Bool)
(declare-fun x107 () Int)
(declare-fun x471 () Bool)
(declare-fun x2066 () Int)
(declare-fun x610 () Int)
(declare-fun x170 () Bool)
(declare-fun x1793 () Int)
(declare-fun x277 () Int)
(declare-fun x873 () Int)
(declare-fun x1462 () Int)
(declare-fun x461 () Bool)
(declare-fun x2364 () Int)
(declare-fun x1343 () Int)
(declare-fun x1831 () Int)
(declare-fun x667 () Bool)
(declare-fun x371 () Int)
(declare-fun x577 () x976)
(declare-fun x1797 () Int)
(declare-fun x559 () Bool)
(declare-fun x2328 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x586 () Int)
(declare-fun x98 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x1748 () Bool)
(declare-fun x1483 () Int)
(declare-fun x2421 () Int)
(declare-fun x877 () Int)
(declare-fun x26 () Bool)
(declare-fun x1969 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x793 () Int)
(declare-fun x251 () Int)
(declare-fun x301 () x976)
(declare-fun x1412 () Int)
(declare-fun x602 () Bool)
(declare-fun x406 (Int) Int)
(declare-fun x2149 () Int)
(declare-fun x944 () Bool)
(declare-fun x1004 () Int)
(declare-fun x151 () Int)
(declare-fun x2181 () Int)
(declare-fun x142 (Int) Int)
(declare-fun x2035 () x976)
(declare-fun x433 () Int)
(declare-fun x1778 () Int)
(declare-fun x1496 () Int)
(declare-fun x2435 () Int)
(declare-fun x272 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x1921 () Bool)
(declare-fun x1981 () Int)
(declare-fun x1008 () Bool)
(declare-fun x240 () Bool)
(declare-fun x1531 () Int)
(declare-fun x1708 () Int)
(declare-fun x822 () Int)
(declare-fun x120 (Int) Int)
(declare-fun x839 () Int)
(declare-fun x314 () Int)
(declare-fun x1245 () Int)
(declare-fun x927 () Int)
(declare-fun x794 () Int)
(declare-fun x2021 () Int)
(declare-fun x1451 () Int)
(declare-fun x40 () x976)
(declare-fun x632 () Int)
(declare-fun x323 () Int)
(declare-fun x383 () x976)
(declare-fun x1594 () x976)
(declare-fun x1381 () Int)
(declare-fun x201 (Int) Int)
(declare-fun x1267 () Bool)
(declare-fun x1403 () x976)
(declare-fun x2296 () Int)
(declare-fun x12 () Int)
(declare-fun x416 () x976)
(declare-fun x1676 () Int)
(declare-fun x2064 () Bool)
(declare-fun x16 () Bool)
(declare-fun x2205 () Int)
(declare-fun x1984 () x976)
(declare-fun x899 () Int)
(declare-fun x203 () Bool)
(declare-fun x1102 () Int)
(declare-fun x1427 () x976)
(declare-fun x2238 () Int)
(declare-fun x2245 () Bool)
(declare-fun x443 () x976)
(declare-fun x1122 () Int)
(declare-fun x2348 () Int)
(declare-fun x2376 () Bool)
(declare-fun x925 (x976) Int)
(declare-fun x1899 () Int)
(declare-fun x2366 () Int)
(declare-fun x941 () Int)
(declare-fun x576 () Int)
(declare-fun x1363 () Bool)
(declare-fun x2199 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x1581 () x976)
(declare-fun x1226 () Bool)
(declare-fun x2109 () Int)
(declare-fun x2405 () Int)
(declare-fun x208 () Int)
(declare-fun x854 () Int)
(declare-fun x1709 () Bool)
(declare-fun x337 () Int)
(declare-fun x644 () Int)
(declare-fun x518 () Int)
(declare-fun x322 () Int)
(declare-fun x885 () Int)
(declare-fun x1646 () Int)
(declare-fun x1240 () Int)
(declare-fun x303 (x976) Int)
(declare-fun x476 () x976)
(declare-fun x1700 () Int)
(declare-fun x4 () x976)
(declare-fun x2433 () x976)
(declare-fun x2172 () Int)
(declare-fun x305 () Int)
(declare-fun x623 () Bool)
(declare-fun x1714 () Int)
(declare-fun x2029 () Bool)
(declare-fun x2371 () x976)
(declare-fun x1891 () x976)
(declare-fun x655 () Int)
(declare-fun x2265 () Bool)
(declare-fun x916 () Int)
(declare-fun x1910 () Bool)
(declare-fun x253 () Bool)
(declare-fun x1858 () Bool)
(declare-fun x197 () x976)
(declare-fun x2161 () Bool)
(declare-fun x695 () Bool)
(declare-fun x769 () Bool)
(declare-fun x1792 () Int)
(declare-fun x15 () Int)
(declare-fun x431 () Int)
(declare-fun x1977 () Int)
(declare-fun x193 () Bool)
(declare-fun x1967 () Bool)
(declare-fun x1583 () Bool)
(declare-fun x673 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x829 () Int)
(declare-fun x351 () Int)
(declare-fun x2382 () Int)
(declare-fun x889 () Int)
(declare-fun x375 () Int)
(declare-fun x2432 () Int)
(declare-fun x1756 () Int)
(declare-fun x718 () Int)
(declare-fun x1750 (Int) Int)
(declare-fun x298 () Bool)
(declare-fun x2147 (Int) Int)
(declare-fun x190 () Bool)
(declare-fun x1392 () x976)
(declare-fun x537 () Bool)
(declare-fun x1615 (Int) Int)
(declare-fun x548 () Int)
(declare-fun x1023 () Bool)
(declare-fun x772 () Bool)
(declare-fun x715 () Bool)
(declare-fun x1765 () Int)
(declare-fun x957 () Int)
(declare-fun x618 () Bool)
(declare-fun x719 () Int)
(declare-fun x1769 () Bool)
(declare-fun x263 (Int) Int)
(declare-fun x1384 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x1225 () Int)
(declare-fun x172 (Int) Int)
(declare-fun x970 () Bool)
(declare-fun x706 () Int)
(declare-fun x110 () Bool)
(declare-fun x29 () x976)
(declare-fun x1273 () Bool)
(declare-fun x1337 () x976)
(declare-fun x975 () Int)
(declare-fun x1003 () Bool)
(declare-fun x2316 () Bool)
(declare-fun x1783 () Bool)
(declare-fun x1050 () x976)
(declare-fun x1212 () Int)
(declare-fun x1601 () Int)
(declare-fun x914 () x976)
(declare-fun x1341 () Int)
(declare-fun x693 () Int)
(declare-fun x2136 () Int)
(declare-fun x2049 () Bool)
(declare-fun x1119 () Int)
(declare-fun x798 () x976)
(declare-fun x2416 () Int)
(declare-fun x1957 () Int)
(declare-fun x1314 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x906 () Bool)
(declare-fun x2125 () Bool)
(declare-fun x183 () x976)
(declare-fun x2075 () Bool)
(declare-fun x472 () x976)
(declare-fun x689 () Int)
(declare-fun x362 () Int)
(declare-fun x2408 () Int)
(declare-fun x1592 () Int)
(declare-fun x595 () Bool)
(declare-fun x175 () x976)
(declare-fun x165 () Bool)
(declare-fun x1096 () Int)
(declare-fun x1974 () Int)
(declare-fun x1408 () x976)
(declare-fun x480 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x624 () Int)
(declare-fun x2195 () x976)
(declare-fun x148 () Int)
(declare-fun x1439 () Bool)
(declare-fun x1481 () Int)
(declare-fun x936 () Int)
(declare-fun x1442 () Int)
(declare-fun x48 () Int)
(declare-fun x1861 () Int)
(declare-fun x434 () Int)
(declare-fun x940 () Bool)
(declare-fun x982 () Bool)
(declare-fun x901 () Int)
(declare-fun x1619 () Int)
(declare-fun x1706 () Int)
(declare-fun x2331 () Int)
(declare-fun x382 () x976)
(declare-fun x1711 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x181 () Int)
(declare-fun x2349 (x976) Int)
(declare-fun x1578 () Int)
(declare-fun x1649 () Bool)
(declare-fun x510 () Int)
(declare-fun x1635 () Bool)
(declare-fun x1067 () Int)
(declare-fun x1634 () Int)
(declare-fun x1519 () Bool)
(declare-fun x2175 () Int)
(declare-fun x1586 () Int)
(declare-fun x817 () Bool)
(declare-fun x485 () Int)
(declare-fun x348 () Bool)
(declare-fun x1184 () Int)
(declare-fun x196 () Bool)
(declare-fun x1529 (Int) Int)
(declare-fun x438 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x1227 () Int)
(declare-fun x2214 () x976)
(declare-fun x1277 () Bool)
(declare-fun x14 () Bool)
(declare-fun x1849 () Int)
(declare-fun x1218 () x976)
(declare-fun x2229 () x976)
(declare-fun x1034 (Int) Int)
(declare-fun x426 () Bool)
(declare-fun x1723 () Int)
(declare-fun x1525 () x976)
(declare-fun x162 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x1556 () Int)
(declare-fun x1717 () Bool)
(declare-fun x445 () x976)
(declare-fun x2087 () Bool)
(declare-fun x767 () Int)
(declare-fun x258 () x976)
(declare-fun x139 (Int) Int)
(declare-fun x1472 (x976) Int)
(declare-fun x1295 () x976)
(declare-fun x1806 () Int)
(declare-fun x1883 () Int)
(declare-fun x530 () Bool)
(declare-fun x1073 () x976)
(declare-fun x2303 () Bool)
(declare-fun x2261 () x976)
(declare-fun x2374 () Int)
(declare-fun x919 () Bool)
(declare-fun x1270 () Int)
(declare-fun x848 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x1253 () Int)
(declare-fun x785 () x976)
(declare-fun x262 () Int)
(declare-fun x1788 () x976)
(declare-fun x516 () Bool)
(declare-fun x292 () Int)
(declare-fun x425 () x976)
(declare-fun x356 () x976)
(declare-fun x236 () Int)
(declare-fun x690 () Int)
(declare-fun x1770 () Int)
(declare-fun x1252 () Bool)
(declare-fun x824 () Bool)
(declare-fun x1151 () Int)
(declare-fun x429 () Int)
(declare-fun x1811 () Int)
(declare-fun x504 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x157 () Int)
(declare-fun x1458 () Int)
(declare-fun x1325 () Int)
(declare-fun x1049 () Bool)
(declare-fun x450 () Int)
(declare-fun x2099 () Bool)
(declare-fun x1415 () Int)
(declare-fun x2314 () Int)
(declare-fun x1303 () Bool)
(declare-fun x346 () Int)
(declare-fun x1215 () Bool)
(declare-fun x1968 () Int)
(declare-fun x2333 () Int)
(declare-fun x217 () x976)
(declare-fun x1840 () x976)
(declare-fun x128 () Bool)
(declare-fun x2300 () Int)
(declare-fun x622 () Bool)
(declare-fun x1874 () Int)
(declare-fun x1942 () Int)
(declare-fun x1843 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x1699 () Int)
(declare-fun x505 () Int)
(declare-fun x2058 () x976)
(declare-fun x968 () Int)
(declare-fun x38 () Bool)
(declare-fun x832 () Int)
(declare-fun x1735 () Bool)
(declare-fun x2040 () Bool)
(declare-fun x152 () x976)
(declare-fun x648 () Bool)
(declare-fun x1672 () Int)
(declare-fun x1893 () Bool)
(declare-fun x1737 () Int)
(declare-fun x1002 () Int)
(declare-fun x273 () Bool)
(declare-fun x2427 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x1150 () Int)
(declare-fun x1221 () Int)
(declare-fun x1632 () Int)
(declare-fun x1508 () Bool)
(declare-fun x2235 () Int)
(declare-fun x293 () Int)
(declare-fun x926 () Int)
(declare-fun x911 () Bool)
(declare-fun x478 () Bool)
(declare-fun x49 (Int) Int)
(declare-fun x2266 () Int)
(declare-fun x1554 () Int)
(declare-fun x1758 () Int)
(declare-fun x39 () Bool)
(declare-fun x860 () Bool)
(declare-fun x938 () Int)
(declare-fun x1443 () Int)
(declare-fun x1386 () Bool)
(declare-fun x83 () Int)
(declare-fun x1055 () Int)
(declare-fun x1202 () Int)
(declare-fun x182 () Int)
(declare-fun x242 () x976)
(declare-fun x766 () Int)
(declare-fun x1847 () Int)
(declare-fun x1502 () x976)
(declare-fun x699 () Int)
(declare-fun x1732 () Int)
(declare-fun x1134 () x976)
(declare-fun x2327 () Int)
(declare-fun x637 () Bool)
(declare-fun x1562 () Int)
(declare-fun x2362 () Int)
(declare-fun x1970 () x976)
(declare-fun x1590 () Int)
(declare-fun x1990 () Bool)
(declare-fun x1624 () Int)
(declare-fun x1286 () Bool)
(declare-fun x2340 () Bool)
(declare-fun x872 () Bool)
(declare-fun x2400 () Int)
(declare-fun x456 () Int)
(declare-fun x1302 () x976)
(declare-fun x1731 () Bool)
(declare-fun x265 () Bool)
(declare-fun x639 () Int)
(declare-fun x549 () x976)
(declare-fun x831 () Int)
(declare-fun x1258 () Bool)
(declare-fun x1061 () Int)
(declare-fun x1608 () Int)
(declare-fun x966 () x976)
(declare-fun x796 () Int)
(declare-fun x1159 () Bool)
(declare-fun x327 () Int)
(declare-fun x267 () Bool)
(declare-fun x1219 () Int)
(declare-fun x852 () Int)
(declare-fun x364 () Int)
(declare-fun x1816 () Int)
(declare-fun x2202 () x976)
(declare-fun x2009 () x976)
(declare-fun x1100 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x2043 () Bool)
(declare-fun x781 (x976) Int)
(declare-fun x1424 () Bool)
(declare-fun x967 () Bool)
(declare-fun x1639 () Int)
(declare-fun x319 () Int)
(declare-fun x2059 () Int)
(declare-fun x1600 () Bool)
(declare-fun x931 () Int)
(declare-fun x417 () Bool)
(declare-fun x1126 () Int)
(declare-fun x1925 () x976)
(declare-fun x1437 () Bool)
(declare-fun x791 () Int)
(declare-fun x1620 () Int)
(declare-fun x538 () Int)
(declare-fun x507 () Int)
(declare-fun x1390 () x976)
(declare-fun x1409 () Int)
(declare-fun x1467 () Int)
(declare-fun x234 () Bool)
(declare-fun x724 () Int)
(declare-fun x1628 () Int)
(declare-fun x1976 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x268 () Int)
(declare-fun x2318 () Bool)
(declare-fun x239 () Int)
(declare-fun x2286 () Int)
(declare-fun x612 () Int)
(declare-fun x2014 () x976)
(declare-fun x1282 () Int)
(declare-fun x177 () Int)
(declare-fun x227 () Int)
(declare-fun x1659 () Bool)
(declare-fun x424 () x976)
(declare-fun x1455 () Int)
(declare-fun x2063 (x976) Int)
(declare-fun x1428 () Int)
(declare-fun x987 () Int)
(declare-fun x276 () Bool)
(declare-fun x523 () Int)
(declare-fun x757 () x976)
(declare-fun x838 () Bool)
(declare-fun x948 () Int)
(declare-fun x332 () Int)
(declare-fun x1854 (Int) Int)
(declare-fun x2146 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x2388 () Int)
(declare-fun x1406 () Bool)
(declare-fun x2092 () x976)
(declare-fun x1068 () Bool)
(declare-fun x1715 () x976)
(declare-fun x1354 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x50 () x976)
(declare-fun x1274 () Int)
(declare-fun x1497 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x1450 () Int)
(declare-fun x1587 () Int)
(declare-fun x1006 () Bool)
(declare-fun x1070 () Int)
(declare-fun x1149 () Int)
(declare-fun x338 (Int) x976)
(declare-fun x1575 () Int)
(declare-fun x497 () Int)
(declare-fun x361 (x976) Int)
(declare-fun x962 () Int)
(declare-fun x212 () Int)
(declare-fun x943 () Bool)
(declare-fun x1447 () Int)
(declare-fun x2325 () Int)
(declare-fun x974 () Int)
(declare-fun x1269 () Bool)
(declare-fun x1099 () Int)
(declare-fun x1815 (Int) Int)
(declare-fun x1238 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x166 () Int)
(declare-fun x1195 () x976)
(declare-fun x604 () Bool)
(declare-fun x2162 () Int)
(declare-fun x2204 () Int)
(declare-fun x2118 () x976)
(declare-fun x247 () x976)
(declare-fun x198 () Int)
(declare-fun x1524 () Bool)
(declare-fun x340 () Int)
(declare-fun x2424 () Int)
(declare-fun x1452 () Int)
(declare-fun x1611 () Int)
(declare-fun x313 () Bool)
(declare-fun x1459 () Int)
(declare-fun x1940 () Int)
(declare-fun x1338 () Int)
(declare-fun x1290 () Bool)
(declare-fun x474 () Int)
(declare-fun x1342 () Int)
(declare-fun x717 () Int)
(declare-fun x2000 () Int)
(declare-fun x1877 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x2153 () Bool)
(declare-fun x853 (Int) Int)
(declare-fun x660 () Bool)
(declare-fun x117 () Int)
(declare-fun x858 () Int)
(declare-fun x1213 () Int)
(declare-fun x1011 () Int)
(declare-fun x528 () Bool)
(declare-fun x820 () Bool)
(declare-fun x908 () x976)
(declare-fun x1740 () Bool)
(declare-fun x315 () Int)
(declare-fun x768 () Int)
(declare-fun x776 () Bool)
(declare-fun x1879 () x976)
(declare-fun x704 () Int)
(declare-fun x2 () Int)
(declare-fun x1372 () x976)
(declare-fun x522 () Bool)
(declare-fun x202 () x976)
(declare-fun x391 () Int)
(declare-fun x2111 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x819 () Int)
(declare-fun x1083 () Int)
(declare-fun x347 () Bool)
(declare-fun x2243 () Int)
(declare-fun x1833 () x976)
(declare-fun x291 () x976)
(declare-fun x1087 () x976)
(declare-fun x51 () x976)
(declare-fun x1625 (Int) Int)
(declare-fun x1653 () Int)
(declare-fun x2226 () Bool)
(declare-fun x1922 () Bool)
(declare-fun x230 () Bool)
(declare-fun x2284 () Bool)
(declare-fun x1799 () Bool)
(declare-fun x879 () Int)
(declare-fun x2305 () Bool)
(declare-fun x2103 () Bool)
(declare-fun x1829 () Bool)
(declare-fun x2359 () Int)
(declare-fun x697 () Int)
(declare-fun x1518 () x976)
(declare-fun x2330 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x387 () Int)
(declare-fun x729 () Int)
(declare-fun x1398 () Bool)
(declare-fun x479 (x976) Int)
(declare-fun x357 () Int)
(declare-fun x1211 () Int)
(declare-fun x1964 () x976)
(declare-fun x842 () x976)
(declare-fun x2429 () x976)
(declare-fun x654 () Int)
(declare-fun x961 () x976)
(declare-fun x1413 () Bool)
(declare-fun x1989 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x823 () x976)
(declare-fun x439 () Int)
(declare-fun x409 () Int)
(declare-fun x1165 () Int)
(declare-fun x269 () Int)
(declare-fun x1557 () Int)
(declare-fun x1580 () Int)
(declare-fun x410 () Bool)
(declare-fun x53 () Int)
(declare-fun x1654 () Bool)
(declare-fun x1997 () Bool)
(declare-fun x1063 () Int)
(declare-fun x224 () Int)
(declare-fun x682 () x976)
(declare-fun x895 () Int)
(declare-fun x1871 () Bool)
(declare-fun x205 () Bool)
(declare-fun x423 () Int)
(declare-fun x1902 () Int)
(declare-fun x1538 () Int)
(declare-fun x1321 () Bool)
(declare-fun x949 () Int)
(declare-fun x2008 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x525 () x976)
(declare-fun x1192 () Bool)
(declare-fun x1256 () Int)
(declare-fun x1431 () x976)
(declare-fun x688 () Int)
(declare-fun x1402 () x976)
(declare-fun x939 (Int Int) Int)
(declare-fun x2005 () Int)
(declare-fun x1598 () Int)
(declare-fun x185 () Int)
(declare-fun x1563 () Int)
(declare-fun x448 () Int)
(declare-fun x725 () Bool)
(declare-fun x1933 () Int)
(declare-fun x2133 () Bool)
(declare-fun x647 () Int)
(declare-fun x701 () Int)
(declare-fun x2311 () x976)
(declare-fun x1306 () Int)
(declare-fun x2233 () Bool)
(declare-fun x652 () x976)
(declare-fun x1589 () Int)
(declare-fun x687 () Int)
(declare-fun x855 () Int)
(declare-fun x241 () x976)
(declare-fun x1178 () Int)
(declare-fun x400 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x1571 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x2020 () x976)
(declare-fun x2426 () Int)
(declare-fun x1247 () Int)
(declare-fun x294 () x976)
(declare-fun x494 () Int)
(declare-fun x1435 () x976)
(declare-fun x1927 () Int)
(declare-fun x1399 () Int)
(declare-fun x1650 () Bool)
(declare-fun x890 (Int) Int)
(declare-fun x257 () Int)
(declare-fun x1058 () Bool)
(declare-fun x1567 () x976)
(declare-fun x2096 () Bool)
(declare-fun x668 () Bool)
(declare-fun x1746 () Int)
(declare-fun x2334 () Int)
(declare-fun x1539 () Int)
(declare-fun x558 () x976)
(declare-fun x67 () Bool)
(declare-fun x411 () Int)
(declare-fun x1859 () Bool)
(declare-fun x2313 (Int) Int)
(declare-fun x1993 () Int)
(declare-fun x1176 () Int)
(declare-fun x1127 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x979 () Int)
(declare-fun x289 () Bool)
(declare-fun x66 () Int)
(declare-fun x698 () Int)
(declare-fun x2007 () Bool)
(declare-fun x2270 () Bool)
(declare-fun x865 () Int)
(declare-fun x1504 () Bool)
(declare-fun x721 () Bool)
(declare-fun x2072 () Bool)
(declare-fun x285 () Int)
(declare-fun x771 () x976)
(declare-fun x2173 () Int)
(declare-fun x1657 () x976)
(declare-fun x2069 () Int)
(declare-fun x1293 () Bool)
(declare-fun x1505 () Bool)
(declare-fun x88 () Int)
(declare-fun x1513 (Int) Int)
(declare-fun x447 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x1875 () Int)
(declare-fun x892 () Bool)
(declare-fun x2367 (Int) Int)
(declare-fun x1686 () Bool)
(declare-fun x2413 () x976)
(declare-fun x233 () Bool)
(declare-fun x700 () x976)
(declare-fun x5 () Int)
(declare-fun x1522 () Bool)
(declare-fun x1668 () Bool)
(declare-fun x1371 () x976)
(declare-fun x1870 () Bool)
(declare-fun x2275 () Int)
(declare-fun x661 () Int)
(declare-fun x2011 () Int)
(declare-fun x2079 () Int)
(declare-fun x1167 () Int)
(declare-fun x2019 () Bool)
(declare-fun x2361 () Bool)
(declare-fun x134 () Int)
(declare-fun x77 () Bool)
(declare-fun x116 () x976)
(declare-fun x235 () Bool)
(declare-fun x189 () Int)
(declare-fun x557 () Bool)
(declare-fun x2030 () Bool)
(declare-fun x1890 () Bool)
(declare-fun x2228 () x976)
(declare-fun x2290 () Int)
(declare-fun x1400 () Bool)
(declare-fun x1641 () Int)
(declare-fun x334 () x976)
(declare-fun x1827 () Int)
(declare-fun x515 () Int)
(declare-fun x1532 (Int) Int)
(declare-fun x2134 (Int) Int)
(declare-fun x2280 () Int)
(declare-fun x1550 () Int)
(declare-fun x27 () Int)
(declare-fun x1241 () x976)
(declare-fun x76 () Int)
(declare-fun x616 () Bool)
(declare-fun x24 () Bool)
(declare-fun x932 () Int)
(declare-fun x2250 () x976)
(declare-fun x1419 () x976)
(declare-fun x143 () Int)
(declare-fun x1000 () Bool)
(declare-fun x374 () x976)
(declare-fun x2190 () Bool)
(declare-fun x112 () Int)
(declare-fun x2344 () Int)
(declare-fun x1946 () Int)
(declare-fun x288 (x976) Int)
(declare-fun x1534 () Bool)
(declare-fun x1760 () Bool)
(declare-fun x2377 () Bool)
(declare-fun x2028 () Int)
(declare-fun x381 () Bool)
(declare-fun x1817 () Int)
(declare-fun x484 () Int)
(declare-fun x1819 (Int) Int)
(declare-fun x1378 () Int)
(declare-fun x551 () Bool)
(declare-fun x194 () Bool)
(declare-fun x2301 () Bool)
(declare-fun x1690 () Int)
(declare-fun x149 () x976)
(declare-fun x825 () x976)
(declare-fun x1104 () Int)
(declare-fun x2332 () x976)
(declare-fun x2100 () Int)
(declare-fun x703 () Int)
(declare-fun x857 () Bool)
(declare-fun x1278 () Int)
(declare-fun x176 (Int) Int)
(declare-fun x1417 () Bool)
(declare-fun x1138 () x976)
(declare-fun x1207 () Int)
(declare-fun x2088 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x2158 () Int)
(declare-fun x1464 () Int)
(declare-fun x1621 () Int)
(declare-fun x1920 () Bool)
(declare-fun x2242 () x976)
(declare-fun x2192 () Bool)
(declare-fun x2289 () Int)
(declare-fun x765 () Bool)
(declare-fun x1292 () Int)
(declare-fun x503 () Int)
(declare-fun x840 () Int)
(declare-fun x643 () Int)
(declare-fun x2113 () Int)
(declare-fun x1551 () Int)
(declare-fun x1166 () Bool)
(declare-fun x1975 () Int)
(declare-fun x764 () x976)
(declare-fun x1079 (x976) Int)
(declare-fun x2159 () Bool)
(declare-fun x1507 () x976)
(declare-fun x1494 () Int)
(declare-fun x191 () Int)
(declare-fun x2324 () Int)
(declare-fun x1331 () x976)
(declare-fun x70 (Int) Int)
(declare-fun x907 () Bool)
(declare-fun x615 () Bool)
(declare-fun x496 () Bool)
(declare-fun x47 () Int)
(declare-fun x470 () x976)
(declare-fun x1710 () Bool)
(declare-fun x284 () x976)
(declare-fun x1610 () Bool)
(declare-fun x1530 () Int)
(declare-fun x749 () Bool)
(declare-fun x418 () x976)
(declare-fun x2180 () x976)
(declare-fun x2209 (Int) Int)
(declare-fun x1106 () Int)
(declare-fun x2304 () Int)
(declare-fun x1422 () Int)
(declare-fun x1666 () Bool)
(declare-fun x1733 () x976)
(declare-fun x2385 () Int)
(declare-fun x502 () Int)
(declare-fun x2414 () Int)
(declare-fun x1182 () Int)
(declare-fun x702 () Bool)
(declare-fun x405 () Bool)
(declare-fun x2135 () Int)
(declare-fun x659 () Bool)
(declare-fun x1432 () Int)
(declare-fun x493 () Int)
(declare-fun x594 () Int)
(declare-fun x386 (Int) Int)
(declare-fun x2047 () Bool)
(declare-fun x1842 () Int)
(declare-fun x1479 () Bool)
(declare-fun x821 () Int)
(declare-fun x1915 () x976)
(declare-fun x2369 () Int)
(declare-fun x2112 () Int)
(declare-fun x830 () Int)
(declare-fun x1931 () Bool)
(declare-fun x178 () Bool)
(declare-fun x2174 () x976)
(declare-fun x2074 () Bool)
(declare-fun x997 () x976)
(declare-fun x2386 () Int)
(declare-fun x2051 () Bool)
(declare-fun x1669 (Int) Int)
(declare-fun x207 () Bool)
(declare-fun x1830 () Int)
(declare-fun x449 () Int)
(declare-fun x555 () x976)
(declare-fun x25 (Int) Int)
(declare-fun x1033 () Int)
(declare-fun x377 () Int)
(declare-fun x1901 () Int)
(declare-fun x2168 () Int)
(declare-fun x658 () Bool)
(declare-fun x2339 () Bool)
(declare-fun x630 () Int)
(declare-fun x1251 () Bool)
(declare-fun x2401 () x976)
(declare-fun x378 () Int)
(declare-fun x1560 () Bool)
(declare-fun x2196 () Int)
(declare-fun x2060 () Int)
(declare-fun x1265 () Int)
(declare-fun x1961 () Int)
(declare-fun x1264 () Int)
(declare-fun x597 () Int)
(declare-fun x1152 () Int)
(declare-fun x1692 () Int)
(declare-fun x171 () Int)
(declare-fun x1821 () Bool)
(declare-fun x666 () Int)
(declare-fun x1716 () Int)
(declare-fun x17 () Int)
(declare-fun x352 () Int)
(declare-fun x642 () Int)
(declare-fun x2220 () Int)
(declare-fun x1216 () Bool)
(declare-fun x1007 (x976) Int)
(declare-fun x629 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x31 () Int)
(declare-fun x951 () Bool)
(declare-fun x1340 () x976)
(declare-fun x2046 () Bool)
(declare-fun x680 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x1704 () Int)
(declare-fun x1353 () Int)
(declare-fun x1329 () Bool)
(declare-fun x399 () Bool)
(declare-fun x645 () Bool)
(declare-fun x2315 () Bool)
(declare-fun x1612 () x976)
(declare-fun x883 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x751 () Int)
(declare-fun x731 () Bool)
(declare-fun x473 () Int)
(declare-fun x1430 () Bool)
(declare-fun x1555 () x976)
(declare-fun x1189 () Int)
(declare-fun x1651 () x976)
(declare-fun x870 () Int)
(declare-fun x8 () Bool)
(declare-fun x891 () Int)
(declare-fun x572 (Int) Int)
(declare-fun x1919 () Int)
(declare-fun x1017 () x976)
(declare-fun x1941 () Bool)
(declare-fun x92 () Bool)
(declare-fun x42 () Int)
(declare-fun x1972 () Int)
(declare-fun x1537 () Int)
(declare-fun x355 () Int)
(declare-fun x1999 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x2370 () Int)
(declare-fun x121 () Bool)
(declare-fun x2241 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x2015 () Int)
(declare-fun x254 () Int)
(declare-fun x93 () Bool)
(declare-fun x1204 () x976)
(declare-fun x1010 () x976)
(declare-fun x255 () Int)
(declare-fun x2399 () Bool)
(declare-fun x1593 () Int)
(declare-fun x2323 () x976)
(declare-fun x833 () Int)
(declare-fun x2076 () Int)
(declare-fun x631 () Bool)
(declare-fun x180 () Int)
(declare-fun x544 () Bool)
(declare-fun x1541 (Int) Int)
(declare-fun x96 () Bool)
(declare-fun x2211 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x1376 () x976)
(declare-fun x200 () Bool)
(declare-fun x1466 () Int)
(declare-fun x1128 () x976)
(declare-fun x1352 () x976)
(declare-fun x2140 () Int)
(declare-fun x1661 () Int)
(declare-fun x711 () Bool)
(declare-fun x790 () Int)
(declare-fun x565 () Bool)
(declare-fun x902 () Bool)
(declare-fun x368 () Int)
(declare-fun x1738 () Bool)
(declare-fun x1183 () Int)
(declare-fun x2393 () x976)
(declare-fun x264 () Int)
(declare-fun x1951 (Int) Int)
(declare-fun x1865 () Int)
(declare-fun x2068 (Int) Int)
(declare-fun x21 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x1588 () Bool)
(declare-fun x274 () Int)
(declare-fun x2221 () Bool)
(declare-fun x108 () Bool)
(declare-fun x1444 () Int)
(declare-fun x395 () Int)
(declare-fun x617 () Int)
(declare-fun x1112 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x2080 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x419 () Int)
(declare-fun x1257 () Int)
(declare-fun x1161 () Int)
(declare-fun x1796 () Bool)
(declare-fun x1992 () x976)
(declare-fun x2387 (x976) Int)
(declare-fun x761 () Bool)
(declare-fun x1928 () x976)
(declare-fun x1088 (Int) Int)
(declare-fun x318 () Int)
(declare-fun x683 () Int)
(declare-fun x2378 () Int)
(declare-fun x41 () Int)
(declare-fun x2297 () Int)
(declare-fun x119 () Int)
(declare-fun x1873 () Int)
(declare-fun x803 () Int)
(declare-fun x1613 () Int)
(declare-fun x446 () Bool)
(declare-fun x2207 () Int)
(declare-fun x526 () Bool)
(declare-fun x556 () Int)
(declare-fun x308 () Bool)
(declare-fun x807 () Bool)
(declare-fun x1994 () Int)
(declare-fun x2150 () Int)
(declare-fun x789 () Int)
(declare-fun x2390 () Int)
(declare-fun x1105 () Int)
(declare-fun x2138 () Int)
(declare-fun x186 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x2227 () Bool)
(declare-fun x1255 () Int)
(declare-fun x326 () x976)
(declare-fun x2171 () Int)
(declare-fun x1909 () Int)
(declare-fun x2101 () x976)
(declare-fun x1040 () x976)
(declare-fun x1186 () Bool)
(declare-fun x1643 () Int)
(declare-fun x32 () Int)
(declare-fun x2246 () Int)
(declare-fun x329 () Bool)
(declare-fun x1077 () Int)
(declare-fun x2356 () Int)
(declare-fun x834 () x976)
(declare-fun x1262 () Int)
(declare-fun x302 () Bool)
(declare-fun x1742 () Int)
(declare-fun x1242 () Int)
(declare-fun x248 () Int)
(declare-fun x344 () Int)
(declare-fun x1453 () Bool)
(declare-fun x2373 () Bool)
(declare-fun x753 () Bool)
(declare-fun x808 () Int)
(declare-fun x922 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x1393 () x976)
(declare-fun x777 () Int)
(declare-fun x1540 () Int)
(declare-fun x1115 () Int)
(declare-fun x1336 () Bool)
(declare-fun x1784 () Bool)
(declare-fun x1768 () Bool)
(declare-fun x1476 () Int)
(declare-fun x2001 () x976)
(declare-fun x2078 () Bool)
(declare-fun x366 () Int)
(declare-fun x1263 () Int)
(declare-fun x1249 () Int)
(declare-fun x903 () Int)
(declare-fun x1094 () Bool)
(declare-fun x1579 () Int)
(declare-fun x579 () Int)
(declare-fun x1995 () Int)
(declare-fun x1803 () Bool)
(declare-fun x1103 () Int)
(declare-fun x886 () x976)
(declare-fun x1825 () Bool)
(declare-fun x2177 () Int)
(declare-fun x836 () Int)
(declare-fun x1064 () Int)
(declare-fun x199 (Int) Int)
(declare-fun x2193 () Int)
(declare-fun x567 () Int)
(declare-fun x2156 () Bool)
(declare-fun x1895 () x976)
(declare-fun x68 () x976)
(declare-fun x36 () Int)
(declare-fun x2302 () Bool)
(declare-fun x588 () Int)
(declare-fun x1045 () Int)
(declare-fun x741 () Int)
(declare-fun x306 () Int)
(declare-fun x607 () Int)
(declare-fun x1090 () Int)
(declare-fun x415 () Bool)
(declare-fun x1489 () Int)
(declare-fun x1433 () Bool)
(declare-fun x1396 () Int)
(declare-fun x1771 () Int)
(declare-fun x2223 () Bool)
(declare-fun x245 () Bool)
(declare-fun x744 () Bool)
(declare-fun x960 () x976)
(declare-fun x44 () Int)
(declare-fun x1734 () Int)
(declare-fun x1856 () Bool)
(declare-fun x1697 () Int)
(declare-fun x638 () Int)
(declare-fun x1080 () Int)
(declare-fun x1945 () Int)
(declare-fun x2139 () Int)
(declare-fun x1035 () Int)
(declare-fun x1485 () x976)
(declare-fun x599 () Bool)
(declare-fun x1979 () Int)
(declare-fun x2033 () Int)
(declare-fun x2203 () Bool)
(declare-fun x1965 () x976)
(declare-fun x828 () Int)
(declare-fun x1441 () Int)
(declare-fun x1315 () Int)
(declare-fun x1140 () x976)
(declare-fun x2247 () Int)
(declare-fun x324 () Int)
(declare-fun x1751 () Bool)
(declare-fun x428 () Bool)
(declare-fun x1605 () Int)
(declare-fun x1339 () Int)
(declare-fun x1493 () Int)
(declare-fun x1614 () x976)
(declare-fun x1037 () Int)
(declare-fun x1261 () Bool)
(declare-fun x1802 () x976)
(declare-fun x256 () x976)
(declare-fun x158 () Bool)
(declare-fun x1515 () Int)
(declare-fun x728 () x976)
(declare-fun x1395 () Int)
(declare-fun x2420 () Bool)
(declare-fun x1141 () x976)
(declare-fun x937 () Int)
(declare-fun x1813 () Bool)
(declare-fun x2081 () Int)
(declare-fun x527 () Bool)
(declare-fun x837 () Bool)
(declare-fun x989 () Bool)
(declare-fun x2217 () Bool)
(declare-fun x1642 () Int)
(declare-fun x867 (Int) Int)
(declare-fun x1196 () Int)
(declare-fun x2052 () Bool)
(declare-fun x1388 () Int)
(declare-fun x986 () x976)
(declare-fun x1978 () Bool)
(declare-fun x188 () Int)
(declare-fun x672 () Int)
(declare-fun x73 () Int)
(declare-fun x1523 () Int)
(declare-fun x928 (Int) Int)
(declare-fun x131 () Bool)
(declare-fun x2341 () Bool)
(declare-fun x1719 () Int)
(declare-fun x809 () x976)
(declare-fun x1092 () Bool)
(declare-fun x1773 () Bool)
(declare-fun x2259 () Bool)
(declare-fun x1741 () Int)
(declare-fun x55 () Bool)
(declare-fun x1776 () Int)
(declare-fun x1097 () Int)
(declare-fun x1021 () Bool)
(declare-fun x138 () Int)
(declare-fun x52 (Int) Int)
(declare-fun x489 () Bool)
(declare-fun x1235 () Int)
(declare-fun x1287 () x976)
(declare-fun x1884 () Bool)
(declare-fun x1585 () Int)
(declare-fun x499 () Int)
(declare-fun x2017 () Bool)
(declare-fun x1878 () Int)
(declare-fun x1243 () Int)
(declare-fun x2062 () Bool)
(declare-fun x748 () Int)
(declare-fun x74 () Bool)
(declare-fun x626 () Int)
(declare-fun x278 () Int)
(declare-fun x1663 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x1755 () x976)
(declare-fun x1894 () Bool)
(declare-fun x1137 () Int)
(declare-fun x2274 () x976)
(declare-fun x1869 () Bool)
(declare-fun x1546 () Int)
(declare-fun x1224 () Int)
(declare-fun x874 () Int)
(declare-fun x482 () Bool)
(declare-fun x231 () Bool)
(declare-fun x671 () x976)
(declare-fun x2254 () Int)
(declare-fun x221 () Int)
(declare-fun x1356 () Int)
(declare-fun x2170 (Int) Int)
(declare-fun x1139 () Int)
(declare-fun x388 () Bool)
(declare-fun x826 () x976)
(declare-fun x2155 () Int)
(declare-fun x1116 () Bool)
(declare-fun x204 () Bool)
(declare-fun x851 () Bool)
(declare-fun x372 () x976)
(declare-fun x1864 () x976)
(declare-fun x1786 () Bool)
(declare-fun x1918 () Int)
(declare-fun x1260 () Int)
(declare-fun x2145 (Int) Int)
(declare-fun x309 () Bool)
(declare-fun x947 () Int)
(declare-fun x1359 () x976)
(declare-fun x113 () x976)
(declare-fun x2430 () Bool)
(declare-fun x1232 () Int)
(declare-fun x1753 () Int)
(declare-fun x933 () Int)
(declare-fun x2123 () Int)
(declare-fun x760 () Bool)
(declare-fun x2065 () Int)
(declare-fun x2375 () Bool)
(declare-fun x905 () Int)
(declare-fun x2310 () Int)
(declare-fun x1233 () Int)
(declare-fun x1798 () Int)
(declare-fun x846 () Int)
(declare-fun x1597 () Int)
(declare-fun x2419 () Bool)
(declare-fun x887 () Int)
(declare-fun x888 () Int)
(declare-fun x225 () Bool)
(declare-fun x2004 () Int)
(declare-fun x2434 () Int)
(declare-fun x297 () Int)
(declare-fun x146 () Int)
(declare-fun x1057 () x976)
(declare-fun x1667 () Bool)
(declare-fun x65 () Bool)
(declare-fun x328 () Bool)
(declare-fun x389 () Bool)
(declare-fun x1266 () x976)
(declare-fun x491 () Int)
(declare-fun x287 () Bool)
(declare-fun x2283 (x976) Int)
(declare-fun x2277 () Int)
(declare-fun x512 () Bool)
(declare-fun x945 () Bool)
(declare-fun x1060 () Int)
(declare-fun x321 () Int)
(declare-fun x1908 () Bool)
(declare-fun x952 () x976)
(declare-fun x1511 () x976)
(declare-fun x1276 () Int)
(declare-fun x397 () x976)
(declare-fun x921 () Int)
(declare-fun x1791 () Int)
(declare-fun x674 () Bool)
(declare-fun x1078 () Int)
(declare-fun x43 () Int)
(declare-fun x1013 () Bool)
(declare-fun x102 () Bool)
(declare-fun x2152 () Int)
(declare-fun x462 () Bool)
(declare-fun x756 () x976)
(declare-fun x1637 () x976)
(declare-fun x959 () Bool)
(declare-fun x136 () Int)
(declare-fun x1299 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x1678 () Bool)
(declare-fun x2425 () Int)
(declare-fun x802 () Int)
(declare-fun x373 () Int)
(declare-fun x2355 () x976)
(declare-fun x811 () Int)
(declare-fun x603 () Int)
(declare-fun x390 () Int)
(declare-fun x463 () x976)
(declare-fun x1482 () Bool)
(declare-fun x1009 () Int)
(declare-fun x1868 () Bool)
(declare-fun x104 () Int)
(declare-fun x1347 () Bool)
(declare-fun x459 () x976)
(declare-fun x393 () Bool)
(declare-fun x2137 () Bool)
(declare-fun x229 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x1906 () Int)
(declare-fun x1418 () Int)
(declare-fun x1488 () x976)
(declare-fun x140 () Int)
(declare-fun x1142 () Bool)
(declare-fun x971 () x976)
(declare-fun x1143 () Bool)
(declare-fun x2282 () Int)
(declare-fun x1569 () Int)
(declare-fun x965 () Bool)
(declare-fun x1966 () Bool)
(declare-fun x310 () Int)
(declare-fun x1987 (x976) Int)
(declare-fun x1440 () x976)
(declare-fun x1231 () Bool)
(declare-fun x1761 () Bool)
(declare-fun x311 () Int)
(declare-fun x261 () Int)
(declare-fun x465 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x2423 () Int)
(declare-fun x746 () Bool)
(declare-fun x582 () Bool)
(declare-fun x2179 () x976)
(declare-fun x2281 () Int)
(declare-fun x619 () Bool)
(declare-fun x1914 () Bool)
(declare-fun x1988 () Bool)
(declare-fun x2422 () x976)
(declare-fun x1781 () x976)
(declare-fun x1344 () Int)
(declare-fun x1463 () Int)
(declare-fun x2213 () Bool)
(declare-fun x2215 () Int)
(declare-fun x2013 () Int)
(declare-fun x923 () Bool)
(declare-fun x893 () Int)
(declare-fun x1361 () Int)
(declare-fun x677 () Bool)
(declare-fun x2216 () Int)
(declare-fun x223 () Bool)
(declare-fun x2119 () Int)
(declare-fun x220 (Int) Int)
(declare-fun x2091 () Int)
(declare-fun x755 () x976)
(declare-fun x54 () x976)
(declare-fun x2237 () Int)
(declare-fun x1081 () Int)
(declare-fun x283 () Bool)
(declare-fun x2107 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x2044 () Int)
(declare-fun x1168 () Int)
(declare-fun x1971 () Int)
(declare-fun x1108 () Int)
(declare-fun x1198 () x976)
(declare-fun x125 () Bool)
(declare-fun x2105 () Int)
(declare-fun x1318 () Bool)
(declare-fun x1054 () Int)
(declare-fun x1332 () Bool)
(declare-fun x61 () Bool)
(declare-fun x1648 () x976)
(declare-fun x2108 () Int)
(declare-fun x564 () Bool)
(declare-fun x2188 () Int)
(declare-fun x843 () Bool)
(declare-fun x2071 () Int)
(declare-fun x1982 () Int)
(declare-fun x1630 () Int)
(declare-fun x1790 () Int)
(declare-fun x1044 () Bool)
(declare-fun x1310 () Int)
(declare-fun x1136 () Int)
(declare-fun x563 () Int)
(declare-fun x1998 () Int)
(declare-fun x2346 () Int)
(declare-fun x124 () Bool)
(declare-fun x380 () Int)
(declare-fun x2276 () Bool)
(declare-fun x1205 () x976)
(declare-fun x816 () Int)
(declare-fun x1725 () x976)
(declare-fun x286 () Bool)
(declare-fun x649 () Bool)
(declare-fun x2106 () Int)
(declare-fun x1898 () Int)
(declare-fun x1558 () Int)
(declare-fun x1818 () Int)
(declare-fun x1665 (x976) Int)
(declare-fun x1132 () Int)
(declare-fun x296 () Int)
(declare-fun x2258 () Int)
(declare-fun x343 () x976)
(declare-fun x369 () Int)
(declare-fun x1069 () Bool)
(declare-fun x1171 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x1480 () Int)
(declare-fun x2022 () Int)
(declare-fun x553 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x147 () Bool)
(declare-fun x2342 () Bool)
(declare-fun x737 () Int)
(declare-fun x849 () Int)
(declare-fun x238 () Int)
(declare-fun x593 () Int)
(declare-fun x1284 () Int)
(declare-fun x613 () Int)
(declare-fun x1631 () Int)
(declare-fun x2083 () Int)
(declare-fun x237 () Int)
(declare-fun x609 () Int)
(declare-fun x1675 () Int)
(declare-fun x2039 () Bool)
(declare-fun x1456 () Int)
(declare-fun x1721 () Int)
(declare-fun x1805 () Int)
(declare-fun x972 () Int)
(declare-fun x2231 () Int)
(declare-fun x1317 () Bool)
(declare-fun x641 () Bool)
(declare-fun x2256 () Int)
(declare-fun x625 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x1618 () Int)
(declare-fun x1307 (Int) Int)
(declare-fun x651 () Int)
(declare-fun x135 () Int)
(declare-fun x179 () Int)
(declare-fun x2329 () Int)
(declare-fun x1181 () Bool)
(declare-fun x1461 () x976)
(declare-fun x317 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x169 () Int)
(declare-fun x1850 () Int)
(declare-fun x2389 () x976)
(declare-fun x1949 () Int)
(declare-fun x2132 () Int)
(declare-fun x2038 () Int)
(declare-fun x1623 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x815 () Bool)
(declare-fun x1596 () Int)
(declare-fun x452 () Int)
(declare-fun x259 () Int)
(declare-fun x91 () Int)
(declare-fun x1179 () Bool)
(declare-fun x759 (Int) Int)
(declare-fun x2411 () Bool)
(declare-fun x570 () Int)
(declare-fun x87 () Bool)
(declare-fun x1553 () Int)
(declare-fun x2287 () Int)
(declare-fun x763 () Int)
(declare-fun x2381 () Bool)
(declare-fun x320 () Int)
(declare-fun x1826 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x732 () Bool)
(declare-fun x861 () Int)
(declare-fun x1039 () Int)
(declare-fun x18 () Int)
(declare-fun x1468 () Bool)
(declare-fun x376 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x163 () x976)
(declare-fun x106 () Bool)
(declare-fun x1349 () Int)
(declare-fun x1762 () x976)
(declare-fun x432 () Int)
(declare-fun x1591 () Int)
(declare-fun x1074 () Bool)
(declare-fun x1848 () Bool)
(declare-fun x1075 () Int)
(declare-fun x213 () x976)
(declare-fun x2252 () x976)
(declare-fun x636 () Int)
(declare-fun x6 () Int)
(declare-fun x1312 () Bool)
(declare-fun x2224 () Bool)
(declare-fun x894 () x976)
(declare-fun x216 () Int)
(declare-fun x2160 () Int)
(declare-fun x1448 () Bool)
(declare-fun x800 () Bool)
(declare-fun x2185 (x976) Int)
(declare-fun x2379 () Int)
(declare-fun x414 () Int)
(declare-fun x126 () Int)
(declare-fun x1572 (Int) Int)
(declare-fun x1024 () Bool)
(declare-fun x1728 () Bool)
(declare-fun x2036 () Int)
(declare-fun x1197 () Int)
(declare-fun x733 () Bool)
(declare-fun x762 () Int)
(declare-fun x2016 () Bool)
(declare-fun x533 () Bool)
(declare-fun x2322 () Int)
(declare-fun x795 () Bool)
(declare-fun x1730 () x976)
(declare-fun x370 () Int)
(declare-fun x2191 () Int)
(declare-fun x532 () Bool)
(declare-fun x1124 () Int)
(declare-fun x1689 () x976)
(declare-fun x81 () Bool)
(declare-fun x1985 () Int)
(declare-fun x89 () Int)
(declare-fun x1682 () Int)
(declare-fun x280 () Int)
(declare-fun x856 () Int)
(declare-fun x2335 () Bool)
(declare-fun x1065 () Int)
(declare-fun x127 () Bool)
(declare-fun x1664 () x976)
(declare-fun x847 () Bool)
(declare-fun x270 () Bool)
(declare-fun x988 () Bool)
(declare-fun x354 () x976)
(declare-fun x1025 () Bool)
(declare-fun x475 () Int)
(declare-fun x1655 () Int)
(declare-fun x1304 () Int)
(declare-fun x950 () x976)
(declare-fun x620 () Int)
(declare-fun x56 () Bool)
(declare-fun x1012 () Int)
(declare-fun x1506 () Int)
(declare-fun x1148 () Bool)
(declare-fun x2271 () Bool)
(declare-fun x2431 () Int)
(declare-fun x2225 () Int)
(declare-fun x1026 (Int) Int)
(declare-fun x653 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x1405 () Int)
(declare-fun x640 () Int)
(declare-fun x1042 () Bool)
(declare-fun x1754 () Int)
(declare-fun x1465 () Int)
(declare-fun x1236 () Int)
(declare-fun x483 () Int)
(declare-fun x1320 () Int)
(declare-fun x913 () x976)
(declare-fun x1629 () Int)
(declare-fun x1288 () Bool)
(declare-fun x2418 () Bool)
(declare-fun x86 () Int)
(declare-fun x1201 (Int) Int)
(declare-fun x1326 () Int)
(declare-fun x2402 () Int)
(declare-fun x536 () Bool)
(declare-fun x1729 () Bool)
(declare-fun x359 () Bool)
(declare-fun x994 (Int) Int)
(declare-fun x999 () Bool)
(declare-fun x752 (Int) Int)
(declare-fun x727 () x976)
(declare-fun x1622 () Int)
(declare-fun x133 () Bool)
(declare-fun x786 () Int)
(declare-fun x1135 () Int)
(declare-fun x2312 () Int)
(declare-fun x2094 () Int)
(declare-fun x1438 () Int)
(declare-fun x2347 () Int)
(declare-fun x1677 () Int)
(declare-fun x1229 () Bool)
(declare-fun x1886 () Int)
(declare-fun x2263 (x976) Int)
(declare-fun x1084 () Int)
(declare-fun x1726 () Int)
(declare-fun x1801 () Int)
(declare-fun x252 () Int)
(declare-fun x477 () Bool)
(declare-fun x99 () Int)
(declare-fun x917 () Bool)
(declare-fun x2428 () Bool)
(declare-fun x799 () Bool)
(declare-fun x1616 () x976)
(declare-fun x2206 () Bool)
(declare-fun x501 () Int)
(declare-fun x600 () Bool)
(declare-fun x910 () x976)
(declare-fun x1014 () Int)
(declare-fun x1029 () Int)
(declare-fun x568 () Bool)
(declare-fun x1246 () Int)
(declare-fun x1673 () Int)
(declare-fun x601 () x976)
(declare-fun x1471 () Bool)
(declare-fun x580 () Bool)
(declare-fun x560 () Bool)
(declare-fun x2151 () Int)
(declare-fun x985 () x976)
(declare-fun x1679 () Int)
(declare-fun x929 () Int)
(declare-fun x1691 () Bool)
(declare-fun x2167 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x1 () Int)
(declare-fun x160 () Bool)
(declare-fun x1627 () Bool)
(declare-fun x2061 () Int)
(declare-fun x1814 () Int)
(declare-fun x1071 () Bool)
(declare-fun x542 () x976)
(declare-fun x1727 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x85 () Bool)
(declare-fun x2143 () Bool)
(declare-fun x2034 () Bool)
(declare-fun x1911 () Int)
(declare-fun x161 () Int)
(declare-fun x2326 () Int)
(declare-fun x13 () x976)
(declare-fun x562 () Int)
(declare-fun x575 () Bool)
(declare-fun x1500 (x976) Int)
(declare-fun x529 () Int)
(declare-fun x2121 () Int)
(declare-fun x1175 () Int)
(declare-fun x1366 () x976)
(declare-fun x1436 () Bool)
(declare-fun x34 () Bool)
(declare-fun x62 () Int)
(declare-fun x1685 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x360 () Bool)
(declare-fun x481 () x976)
(declare-fun x222 () x976)
(declare-fun x1248 () Int)
(declare-fun x2293 () x976)
(declare-fun x2365 () Int)
(declare-fun x2086 () Bool)
(declare-fun x316 () Int)
(declare-fun x1147 () Int)
(declare-fun x2396 () x976)
(declare-fun x1980 () x976)
(declare-fun x554 () x976)
(declare-fun x1449 () Bool)
(declare-fun x2295 () Int)
(declare-fun x396 () Bool)
(declare-fun x1930 () Int)
(declare-fun x662 () x976)
(declare-fun x2317 () Int)
(declare-fun x1888 () Int)
(declare-fun x2232 () Int)
(declare-fun x333 () Int)
(declare-fun x1694 () Int)
(declare-fun x246 () Int)
(declare-fun x1330 () Int)
(declare-fun x991 () Int)
(declare-fun x385 () Int)
(declare-fun x1397 () x976)
(declare-fun x726 () x976)
(declare-fun x1845 () Bool)
(declare-fun x1687 () x976)
(declare-fun x2048 () Bool)
(declare-fun x676 (x976) Int)
(declare-fun x953 () Bool)
(declare-fun x218 () Bool)
(declare-fun x2067 () Bool)
(declare-fun x349 () x976)
(declare-fun x1387 () x976)
(declare-fun x844 (x976) Int)
(declare-fun x876 (Int) Int)
(declare-fun x850 () Bool)
(declare-fun x663 () Bool)
(declare-fun x2187 () x976)
(declare-fun x935 () Int)
(declare-fun x1214 () Int)
(declare-fun x738 () Bool)
(declare-fun x1565 () Int)
(declare-fun x1521 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x1015 () Int)
(declare-fun x1576 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x1368 () Int)
(declare-fun x646 () Int)
(declare-fun x980 () x976)
(declare-fun x1056 () Bool)
(declare-fun x1121 () Int)
(declare-fun x869 () x976)
(declare-fun x1804 (Int) Int)
(declare-fun x1289 () Int)
(declare-fun x72 () x976)
(declare-fun x2024 () Int)
(declare-fun x2194 () x976)
(declare-fun x2018 () Int)
(declare-fun x1652 () Bool)
(declare-fun x2357 () Bool)
(declare-fun x2350 () x976)
(declare-fun x606 () Bool)
(declare-fun x2085 () Int)
(declare-fun x1724 () Int)
(declare-fun x1743 () Int)
(declare-fun x2236 () Int)
(declare-fun x1470 () Int)
(declare-fun x998 () Int)
(declare-fun x1478 () Bool)
(declare-fun x1283 () Int)
(declare-fun x1896 () Int)
(declare-fun x1828 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x875 () Bool)
(declare-fun x1713 () Bool)
(declare-fun x57 () Bool)
(declare-fun x141 () Int)
(declare-fun x1528 () Int)
(declare-fun x608 () Int)
(declare-fun x440 () Bool)
(declare-fun x634 () Int)
(declare-fun x2354 () Bool)
(declare-fun x863 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x1958 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x226 () Bool)
(declare-fun x2336 () Int)
(declare-fun x84 () x976)
(declare-fun x1345 () Int)
(declare-fun x1837 () Int)
(declare-fun x1767 () Bool)
(declare-fun x812 () Bool)
(declare-fun x868 () Int)
(declare-fun x1705 () Int)
(declare-fun x801 () Int)
(declare-fun x408 () x976)
(declare-fun x778 () Bool)
(declare-fun x735 () x976)
(declare-fun x514 () Bool)
(declare-fun x841 () Bool)
(declare-fun x1217 () Int)
(declare-fun x871 () Int)
(declare-fun x1382 () Bool)
(declare-fun x1499 () Int)
(declare-fun x2093 () Int)
(declare-fun x1986 () Int)
(declare-fun x1020 () x976)
(declare-fun x508 () Int)
(declare-fun x2239 () Bool)
(declare-fun x2279 () Int)
(declare-fun x2398 () Int)
(declare-fun x1348 () Bool)
(declare-fun x1351 () Int)
(declare-fun x1322 () Bool)
(declare-fun x441 () Int)
(declare-fun x1085 (Int Int) Int)
(declare-fun x1117 () Bool)
(declare-fun x578 () Bool)
(declare-fun x2222 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x2412 () Int)
(declare-fun x805 () Int)
(declare-fun x2288 () x976)
(declare-fun x1365 () Int)
(declare-fun x1190 () Bool)
(declare-fun x1759 () x976)
(declare-fun x2115 () Int)
(declare-fun x1924 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x2184 () Int)
(declare-fun x1379 () Bool)
(declare-fun x114 (Int) Int)
(declare-fun x282 () Bool)
(declare-fun x1501 () x976)
(declare-fun x584 () Int)
(declare-fun x681 () Int)
(declare-fun x1696 () Int)
(declare-fun x2141 () x976)
(declare-fun x1698 () Bool)
(declare-fun x2130 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x1912 () x976)
(declare-fun x279 () Int)
(declare-fun x918 () Int)
(declare-fun x2309 () Int)
(declare-fun x1367 () Int)
(declare-fun x132 () Bool)
(declare-fun x2142 () Bool)
(declare-fun x806 () Bool)
(declare-fun x1766 () Bool)
(declare-fun x2120 () x976)
(declare-fun x1707 () Bool)
(declare-fun x1223 () Int)
(declare-fun x1047 () Bool)
(declare-fun x716 () x976)
(declare-fun x1048 () Int)
(declare-fun x1319 () Bool)
(declare-fun x28 () Bool)
(declare-fun x1820 () Int)
(declare-fun x963 () Int)
(declare-fun x1839 () Int)
(declare-fun x1876 () Int)
(declare-fun x413 () Int)
(declare-fun x2176 () Int)
(declare-fun x330 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x1680 () Int)
(declare-fun x2127 () x976)
(declare-fun x730 () Bool)
(declare-fun x754 () Int)
(declare-fun x167 (Int) Int)
(declare-fun x1983 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x1018 () Int)
(declare-fun x2164 () Int)
(declare-fun x1193 (Int) Int)
(declare-fun x1474 (Int) Int)
(declare-fun x23 (x976) Int)
(declare-fun x219 () Int)
(declare-fun x920 () Int)
(declare-fun x1573 () Int)
(declare-fun x2372 () Int)
(declare-fun x118 () x976)
(declare-fun x1410 () x976)
(declare-fun x173 () Int)
(declare-fun x1548 () Int)
(declare-fun x1712 () Int)
(declare-fun x1051 () Int)
(declare-fun x1118 () Int)
(declare-fun x403 () x976)
(declare-fun x788 (Int) Int)
(declare-fun x1041 () Int)
(declare-fun x3 () Bool)
(declare-fun x1747 () Int)
(declare-fun x214 () Int)
(declare-fun x1855 () Bool)
(declare-fun x1991 () Int)
(declare-fun x228 () Int)
(declare-fun x1903 () Bool)
(declare-fun x2267 () x976)
(declare-fun x1206 () Bool)
(declare-fun x1795 () Int)
(declare-fun x1835 () Bool)
(declare-fun x696 () Int)
(declare-fun x1695 () Int)
(declare-fun x1297 () Int)
(declare-fun x664 () x976)
(declare-fun x1702 () Bool)
(declare-fun x2169 () Int)
(declare-fun x1199 () Int)
(declare-fun x10 () Bool)
(declare-fun x1584 () Int)
(declare-fun x466 () x976)
(declare-fun x412 () x976)
(declare-fun x513 () Int)
(declare-fun x345 () Int)
(declare-fun x2197 () Bool)
(declare-fun x1113 () Int)
(declare-fun x46 (Int) Int)
(declare-fun x773 () Bool)
(declare-fun x2360 () Bool)
(declare-fun x534 () Int)
(declare-fun x1164 () x976)
(declare-fun x912 () Bool)
(declare-fun x1959 () Int)
(declare-fun x1350 () Int)
(declare-fun x1130 () Bool)
(declare-fun x743 () Bool)
(declare-fun x1509 () x976)
(declare-fun x2054 () Int)
(declare-fun x992 () Bool)
(declare-fun x1775 () Bool)
(declare-fun x574 () Int)
(declare-fun x882 () Int)
(declare-fun x11 () Int)
(declare-fun x1022 () Int)
(declare-fun x1156 () Bool)
(declare-fun x2262 () Bool)
(declare-fun x2070 () Int)
(declare-fun x442 () Bool)
(declare-fun x1036 () Int)
(declare-fun x581 () Bool)
(declare-fun x978 () x976)
(declare-fun x1180 () x976)
(declare-fun x1810 () Bool)
(declare-fun x864 () x976)
(declare-fun x492 () Int)
(declare-fun x934 () Int)
(declare-fun x519 () Bool)
(declare-fun x909 () Bool)
(declare-fun x1110 () Int)
(declare-fun x453 () Int)
(declare-fun x1294 () Int)
(declare-fun x1228 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x2050 () Int)
(declare-fun x215 () Int)
(declare-fun x739 () Bool)
(declare-fun x569 () Int)
(declare-fun x1645 () Bool)
(declare-fun x897 () Int)
(declare-fun x2251 () Int)
(declare-fun x650 () Bool)
(declare-fun x500 () Int)
(declare-fun x1089 () Int)
(declare-fun x2218 () Bool)
(declare-fun x1952 () Int)
(declare-fun x1514 () Bool)
(declare-fun x358 () x976)
(declare-fun x1937 () Int)
(define-fun x2186 ((x976 x976) (x22 Int)) x976 (ite ((_ is x250) x976) (x250 (x787 x976) (+ x22 (x881 x976))) (ite ((_ is x710) x976) (x710 (x2032 x976) (x740 x976) (+ x22 (x1595 x976))) (x1823 (+ x22 (x307 x976))))))
(define-fun x915 ((x427 Int)) Int (ite (and (< x427 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x427 0)) x427 (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1939 ((x427 Int)) Int (ite (and (< x427 0) (>= x427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x427 115792089237316195423570985008687907853269984665640564039457584007913129639936) x427))
(define-fun x2045 ((x543 Int)) Bool (and (< x543 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x543 0)))
(define-fun x1486 ((x543 Int)) Bool (and (= (x939 115792089237316195423570985008687907853269984665640564039457584007913129639935 x543) x543) (= x543 (x939 x543 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1425 ((x543 Int)) Bool (and (= 0 (x939 0 x543)) (= (x939 x543 0) 0)))
(define-fun x780 ((x543 Int)) Bool (= (x939 x543 x543) x543))
(define-fun x1346 ((x543 Int)) Bool (and (x1425 x543) (x780 x543) (x1486 x543)))
(define-fun x1391 ((x543 Int)) Bool (= (x939 1461501637330902918203684832716283019655932542975 (x939 1461501637330902918203684832716283019655932542975 x543)) (x939 1461501637330902918203684832716283019655932542975 x543)))
(define-fun x260 ((x543 Int)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x543) (<= 0 x543)) (= x543 (x939 1461501637330902918203684832716283019655932542975 x543))))
(define-fun x2183 ((x543 Int)) Bool (=> (= (x939 1461501637330902918203684832716283019655932542975 x543) x543) (and (< x543 1461501637330902918203684832716283019655932542976) (>= x543 0))))
(define-fun x468 ((x543 Int)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x543) (< x543 2923003274661805836407369665432566039311865085952)) (= (- x543 1461501637330902918203684832716283019655932542976) (x939 1461501637330902918203684832716283019655932542975 x543))))
(define-fun x2082 ((x543 Int) (x736 Int)) Bool (and (<= 0 x736) (= x543 (+ (* x736 1461501637330902918203684832716283019655932542976) (x939 1461501637330902918203684832716283019655932542975 x543)))))
(define-fun x1334 ((x543 Int) (x1809 Int)) Bool (and (x468 x543) (x2183 x543) (x1391 x543) (x2082 x543 x1809) (x260 x543)))
(define-fun x1603 ((x543 Int) (x736 Int)) Bool (= (x939 x543 x736) (x939 x736 x543)))
(define-fun x589 ((x543 Int) (x736 Int)) Bool (and (>= (x939 x543 x736) 0) (=> (<= 0 x736) (>= x736 (x939 x543 x736))) (=> (<= 0 x543) (>= x543 (x939 x543 x736)))))
(define-fun x583 ((x543 Int) (x736 Int)) Bool (and (x1603 x543 x736) (x589 x543 x736)))
(define-fun x156 ((x543 Int) (x1809 Int)) Bool (and (x583 x543 1461501637330902918203684832716283019655932542975) (x1334 x543 x1809)))
(define-fun x520 ((x543 Int)) Bool (= (x939 26959946667150639794667015087019630673637144422540572481103610249215 (x939 26959946667150639794667015087019630673637144422540572481103610249215 x543)) (x939 26959946667150639794667015087019630673637144422540572481103610249215 x543)))
(define-fun x281 ((x543 Int)) Bool (=> (and (<= 0 x543) (> 26959946667150639794667015087019630673637144422540572481103610249216 x543)) (= (x939 26959946667150639794667015087019630673637144422540572481103610249215 x543) x543)))
(define-fun x1626 ((x543 Int)) Bool (=> (= x543 (x939 26959946667150639794667015087019630673637144422540572481103610249215 x543)) (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x543) (<= 0 x543))))
(define-fun x1950 ((x543 Int)) Bool (=> (and (< x543 53919893334301279589334030174039261347274288845081144962207220498432) (<= 26959946667150639794667015087019630673637144422540572481103610249216 x543)) (= (x939 26959946667150639794667015087019630673637144422540572481103610249215 x543) (- x543 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x109 ((x543 Int) (x736 Int)) Bool (and (>= x736 0) (= x543 (+ (x939 26959946667150639794667015087019630673637144422540572481103610249215 x543) (* 26959946667150639794667015087019630673637144422540572481103610249216 x736)))))
(define-fun x1542 ((x543 Int) (x1809 Int)) Bool (and (x1950 x543) (x520 x543) (x109 x543 x1809) (x1626 x543) (x281 x543)))
(define-fun x981 ((x543 Int) (x1809 Int)) Bool (and (x1542 x543 x1809) (x583 x543 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1656 ((x543 Int)) Bool (= (x939 115792089237316195423570985008687907853269984665640564039457584007913129639904 x543) (x939 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x939 115792089237316195423570985008687907853269984665640564039457584007913129639904 x543))))
(define-fun x20 ((x543 Int)) Bool (=> (and (< x543 32) (<= 0 x543)) (= 0 (x939 115792089237316195423570985008687907853269984665640564039457584007913129639904 x543))))
(define-fun x521 ((x543 Int) (x736 Int) (x1157 Int) (x123 Int)) Bool (and (> 32 x736) (<= 0 x736) (>= x1157 0) (= (x939 115792089237316195423570985008687907853269984665640564039457584007913129639904 x543) (* x1157 32)) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x1157) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x123) x736 (* 32 x1157)) x543) (<= 0 x123) (< x123 1)))
(define-fun x2285 ((x543 Int) (x2319 Int) (x211 Int) (x82 Int)) Bool (and (x521 x543 x2319 x211 x82) (x1656 x543) (x20 x543)))
(define-fun x210 ((x543 Int) (x2319 Int) (x211 Int) (x82 Int)) Bool (and (x583 x543 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2285 x543 x2319 x211 x82)))
(define-fun x1688 ((x592 Int)) Int (ite (> x830 x592) (x1307 x592) 0))
(define-fun x859 ((x592 Int)) Int (x1804 x592))
(define-fun x1308 ((x592 Int)) Int (x1804 x592))
(define-fun x627 ((x592 x976)) Int (ite (= (x338 274184521717934524641157099916833587206) x592) x957 (x1079 x592)))
(define-fun x1938 ((x592 x976)) Int (ite (= x592 (x338 x137)) x1971 (x627 x592)))
(define-fun x80 ((x592 x976)) Int (ite (= x592 (x338 x137)) x344 (x1938 x592)))
(define-fun x1772 ((x592 x976)) Int (ite (= x592 (x338 274184521717934524641157099916833587206)) x1306 (x80 x592)))
(define-fun x1777 ((x592 x976)) Int (ite x1024 (x1772 x592) (x1079 x592)))
(define-fun x2253 ((x592 x976)) Int (ite (= x1715 x592) x278 (x2063 x592)))
(define-fun x708 ((x592 x976)) Int (ite (= x592 x247) x974 (x2253 x592)))
(define-fun x665 ((x592 x976)) Int (ite (= x592 x358) x1839 (x479 x592)))
(define-fun x2353 ((x592 x976)) Int (ite x1024 (x665 x592) (x479 x592)))
(define-fun x100 ((x592 x976)) Int (ite (= x1403 x592) x2256 (x2387 x592)))
(define-fun x880 ((x592 x976)) Int (ite (= x978 x592) x2189 (x100 x592)))
(define-fun x983 ((x592 x976)) Int (ite (= x555 x592) x2196 (x303 x592)))
(define-fun x2025 ((x592 x976)) Int (ite (= x592 x652) x2196 (x303 x592)))
(define-fun x694 ((x592 x976)) Int (ite (and (not x1071) x906) (x983 x592) (x2025 x592)))
(define-fun x33 ((x592 x976)) Int (ite (= x2311 x592) x1005 (x1426 x592)))
(define-fun x2268 ((x592 x976)) Int (ite (= x1762 x592) x644 (x1472 x592)))
(define-fun x1787 ((x592 Int)) Int (ite (= x371 x592) x1618 (x572 x592)))
(define-fun x990 ((x592 Int)) Int (ite (= x1896 x592) x268 (x1787 x592)))
(define-fun x1491 ((x592 Int)) Int (ite (= x1734 x592) x1493 (x2145 x592)))
(define-fun x454 ((x592 Int)) Int (ite (= x592 x1084) x409 (x990 x592)))
(define-fun x2415 ((x592 Int)) Int (ite (= x592 x766) x1033 (x2068 x592)))
(define-fun x1880 ((x592 Int)) Int (ite (= x592 x1523) 0 (x1625 x592)))
(define-fun x1446 ((x592 x976)) Int (ite (= x2274 x592) x2196 (x1665 x592)))
(define-fun x71 ((x592 x976)) Int (ite (= x592 x1879) x2196 (x1665 x592)))
(define-fun x2157 ((x592 x976)) Int (ite (= x592 x1164) x2196 (x1665 x592)))
(define-fun x1370 ((x592 x976)) Int (ite (and (not x743) (not x1835) x329) (x1446 x592) (ite (and x329 (not x743) x1835) (x71 x592) (x2157 x592))))
(define-fun x884 ((x592 x976)) Int (ite (= x1509 x592) x706 (x925 x592)))
(define-fun x115 ((x592 x976)) Int (ite (and x1100 x329) (x925 x592) (x884 x592)))
(define-fun x2407 ((x592 Int)) Int (ite (= 128 x592) x262 (x1951 x592)))
(define-fun x2154 ((x592 Int)) Int (ite (= x592 160) x214 (x220 x592)))
(define-fun x437 ((x592 x976)) Int (ite (= x1789 x592) x1351 (x1500 x592)))
(define-fun x1736 ((x592 x976)) Int (ite (and x271 x906) (x1500 x592) (x437 x592)))
(define-fun x1568 ((x592 Int)) Int (ite (= x592 x1167) x2421 (x201 x592)))
(define-fun x2110 ((x592 Int)) Int (ite (= x592 x1642) x1447 (x386 x592)))
(define-fun x394 ((x592 Int)) Int (ite (and x2053 (not x1473) (not x1319)) (x1625 x592) (x1880 x592)))
(define-fun x1163 ((x592 Int)) Int (ite (= x592 0) 1 (x1374 x592)))
(define-fun x122 ((x592 x976)) Int (ite (= x1371 x592) x748 (x844 x592)))
(define-fun x144 ((x592 x976)) Int (ite (= x592 x1915) x2036 (x122 x592)))
(define-fun x1082 ((x592 x976)) Int (ite x1127 (ite (and x1588 x2178) (x144 x592) (x844 x592)) (x844 x592)))
(define-fun x964 ((x592 x976)) Int (ite (= x592 x1555) x1126 (x781 x592)))
(define-fun x184 ((x592 x976)) Int (ite (= x592 x1475) x2431 (x964 x592)))
(define-fun x1173 ((x592 x976)) Int (ite x1127 (ite (and x1588 x2178) (x781 x592) (x184 x592)) (x781 x592)))
(define-fun x545 ((x592 x976)) Int (ite (= x592 x1410) x796 (x288 x592)))
(define-fun x1887 ((x592 x976)) Int (ite (and x1535 (not x731)) (x545 x592) (x288 x592)))
(define-fun x1324 ((x592 x976)) Int (ite (= x592 x952) x877 (x23 x592)))
(define-fun x1647 ((x592 x976)) Int (ite (and x1318 (not x2271) (not x131)) (x1324 x592) (x23 x592)))
(define-fun x2012 ((x592 Int)) Int (ite (= x592 x171) x1902 (x1763 x592)))
(define-fun x129 ((x592 Int)) Int (ite (= x1489 x592) x2160 (x2012 x592)))
(define-fun x1963 ((x592 Int)) Int (ite (= x1608 x592) x2150 (x2313 x592)))
(define-fun x30 ((x592 Int)) Int (ite (= x1444 x592) x1102 (x129 x592)))
(define-fun x1487 ((x592 Int)) Int (ite (= x592 x1822) x146 (x788 x592)))
(define-fun x168 ((x592 Int)) Int (ite (= x818 x592) 0 (x1474 x592)))
(define-fun x469 ((x592 Int)) Int (ite (= x592 128) x1732 (x867 x592)))
(define-fun x2320 ((x592 Int)) Int (ite (= 160 x592) x2425 (x1615 x592)))
(define-fun x436 ((x592 Int)) Int (ite (= x1699 x592) x1029 (x853 x592)))
(define-fun x94 ((x592 Int)) Int (ite (= x592 x2370) x1676 (x1193 x592)))
(define-fun x1536 ((x592 Int)) Int (ite (and (not x1735) (not x1701) x2418) (x1474 x592) (x168 x592)))
(define-fun x1030 ((x592 x976)) Int (ite (= (x338 274184521717934524641157099916833587206) x592) x808 (x1777 x592)))
(define-fun x1230 ((x592 x976)) Int (ite (= (x338 x2344) x592) x1275 (x1030 x592)))
(define-fun x2006 ((x592 Int)) Int (ite (= 0 x592) 1 (x139 x592)))
(define-fun x59 ((x592 Int)) Int (ite (= x592 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x120 x592)))
(define-fun x621 ((x592 Int)) Int (ite (= 0 x592) x828 (x752 x592)))
(define-fun x2117 ((x592 Int)) Int (ite (= 128 x592) x828 (x52 x592)))
(define-fun x1031 ((x592 Int)) Int (ite (= x592 4) x1596 (x1688 x592)))
(define-fun x546 ((x592 Int)) Int (ite (= 36 x592) x654 (x1031 x592)))
(define-fun x490 ((x592 Int)) Int (ite (= x592 68) x833 (x546 x592)))
(define-fun x60 ((x592 Int)) Int (ite (= x592 100) 128 (x490 x592)))
(define-fun x2410 ((x592 Int)) Int (ite (= x592 132) x839 (x60 x592)))
(define-fun x1745 ((x592 Int)) Int (ite (and (> (+ x868 164) x592) (>= x592 164)) (x2367 (+ (- x592 164) 0)) (x2410 x592)))
(define-fun x1028 ((x592 Int)) Int (ite (and (< x592 (+ x801 160)) (>= x592 160)) (x1745 (+ (- x592 160) x830)) (x1669 x592)))
(define-fun x312 ((x592 x976)) Int (ite (= x1948 x592) x2196 (x1665 x592)))
(define-fun x1280 ((x592 x976)) Int (ite (= x1928 x592) x2196 (x1665 x592)))
(define-fun x1606 ((x592 x976)) Int (ite (= x451 x592) x2196 (x1665 x592)))
(define-fun x1564 ((x592 x976)) Int (ite (and x1803 x124) (x312 x592) (ite (and x159 x124 (not x1803)) (x1280 x592) (x1606 x592))))
(define-fun x209 ((x592 x976)) Int (ite (= x2401 x592) x1349 (x925 x592)))
(define-fun x547 ((x592 x976)) Int (ite (and x124 x2411) (x925 x592) (x209 x592)))
(define-fun x1844 ((x592 Int)) Int (ite (= x592 192) x1671 (x1513 x592)))
(define-fun x782 ((x592 Int)) Int (ite (= 192 x592) x1584 (x1854 x592)))
(define-fun x187 ((x592 Int)) Int (ite (and (not x2072) x1633 (not x2226) x200) (x1854 x592) (ite (and x200 (not x2072) (not x1633)) (x25 x592) (x782 x592))))
(define-fun x78 ((x592 Int)) Int (ite (and x1170 x896) (x25 x592) (ite (and x2291 x399) (x1815 x592) (ite (and (not x2072) x200) (x187 x592) (x25 x592)))))
(define-fun x2023 ((x592 Int)) Int (ite (= x592 128) x588 (x2209 x592)))
(define-fun x679 ((x592 Int)) Int (ite (= x882 x592) x2426 (x1750 x592)))
(define-fun x2244 ((x592 Int)) Int (ite (= x592 x878) x1081 (x679 x592)))
(define-fun x353 ((x592 Int)) Int (ite (= x592 x421) x718 (x2391 x592)))
(define-fun x1936 ((x592 Int)) Int (ite (= x592 x1605) x561 (x2244 x592)))
(define-fun x1404 ((x592 Int)) Int (ite (= x31 x592) x1459 (x49 x592)))
(define-fun x956 ((x592 Int)) Int (ite (= x237 x592) 0 (x890 x592)))
(define-fun x1670 ((x592 x976)) Int (ite (= x592 x197) x991 (x2387 x592)))
(define-fun x336 ((x592 x976)) Int (ite (= x1387 x592) x259 (x1670 x592)))
(define-fun x2148 ((x592 x976)) Int (ite (= x1502 x592) x2169 (x2283 x592)))
(define-fun x1385 ((x592 x976)) Int (ite (= x343 x592) x584 (x2148 x592)))
(define-fun x1358 ((x592 x976)) Int (ite (and x2080 (not x2064)) (x2283 x592) (ite (and (not x1710) x2088) (x2387 x592) (ite (and x872 x1042) (x1385 x592) (x2283 x592)))))
(define-fun x1091 ((x592 x976)) Int (ite (= x592 x2350) x632 (x2063 x592)))
(define-fun x2089 ((x592 x976)) Int (ite (= x592 x1266) x1174 (x1091 x592)))
(define-fun x244 ((x592 x976)) Int (ite (= x592 x862) x1378 (x1492 x592)))
(define-fun x2384 ((x592 x976)) Int (ite (= x592 x756) x177 (x244 x592)))
(define-fun x1934 ((x592 x976)) Int (ite (and x2080 (not x2064)) (x1492 x592) (ite (and (not x1710) x2088) (x2063 x592) (ite (and x1042 x872) (x1492 x592) (x2384 x592)))))
(define-fun x1867 ((x592 x976)) Int (ite (= x592 x2293) x316 (x1472 x592)))
(define-fun x2084 ((x592 x976)) Int (ite (= x525 x592) x208 (x2185 x592)))
(define-fun x1416 ((x592 x976)) Int (ite (and (not x309) x615 (not x1076)) (x2084 x592) (x2185 x592)))
(define-fun x2338 ((x592 x976)) Int (ite (= x592 x2417) x2196 (x303 x592)))
(define-fun x705 ((x592 x976)) Int (ite (= x592 x1864) x2196 (x303 x592)))
(define-fun x691 ((x592 x976)) Int (ite (and x1684 x2078) (x2338 x592) (x705 x592)))
(define-fun x2041 ((x592 x976)) Int (ite (= x826 x592) x2331 (x1500 x592)))
(define-fun x1683 ((x592 x976)) Int (ite (and x2078 x1843) (x1500 x592) (x2041 x592)))
(define-fun x1369 ((x592 Int)) Int (ite (= x592 x701) x1752 (x2170 x592)))
(define-fun x684 ((x592 Int)) Int (ite (and x124 x1803) (x2170 x592) (x1369 x592)))
(define-fun x2166 ((x592 Int)) Int (ite (= x592 x1662) x2102 (x684 x592)))
(define-fun x1380 ((x592 Int)) Int (ite (= x2372 x592) x2090 (x1529 x592)))
(define-fun x1943 ((x592 Int)) Int (ite (and x124 x1803) (x1529 x592) (x1380 x592)))
(define-fun x2257 ((x592 Int)) Int (ite (= x592 x2379) x322 (x1943 x592)))
(define-fun x422 ((x592 Int)) Int (ite (= x592 x2140) x509 (x2147 x592)))
(define-fun x1254 ((x592 Int)) Int (ite (= x592 x1756) x1673 (x422 x592)))
(define-fun x1602 ((x592 Int)) Int (ite (= x592 x362) x2131 (x2134 x592)))
(define-fun x455 ((x592 Int)) Int (ite (= x592 x1211) x332 (x1602 x592)))
(define-fun x1549 ((x592 x976)) Int (ite (= x592 x149) x1553 (x1426 x592)))
(define-fun x1812 ((x592 x976)) Int (ite (= x1331 x592) x1841 (x1007 x592)))
(define-fun x1239 ((x592 x976)) Int (ite (and (not x21) x200) (x1812 x592) (x1007 x592)))
(define-fun x444 ((x592 Int)) Int (ite (= x592 x2188) x154 (x876 x592)))
(define-fun x827 ((x592 Int)) Int (ite (= x2188 x592) x1146 (x876 x592)))
(define-fun x1027 ((x592 Int)) Int (ite (= x1611 x592) x1161 (x263 x592)))
(define-fun x1892 ((x592 Int)) Int (ite (= x762 x592) 0 (x928 x592)))
(define-fun x145 ((x592 Int)) Int (ite (and (not x2159) x2064 x2080) (x928 x592) (x1892 x592)))
(define-fun x75 ((x592 x976)) Int (ite (= x592 (x338 274184521717934524641157099916833587206)) x1530 (x1079 x592)))
(define-fun x1375 ((x592 x976)) Int (ite (= x592 (x338 x1865)) x395 (x75 x592)))
(define-fun x2230 ((x592 x976)) Int (ite (= (x338 x1865) x592) x1585 (x1375 x592)))
(define-fun x1962 ((x592 x976)) Int (ite (= (x338 274184521717934524641157099916833587206) x592) x1237 (x2230 x592)))
(define-fun x2294 ((x592 x976)) Int (ite (= (x338 274184521717934524641157099916833587206) x592) x678 (x1962 x592)))
(define-fun x90 ((x592 x976)) Int (ite (= (x338 x1632) x592) x1470 (x2294 x592)))
(define-fun x1917 ((x592 Int)) Int (ite (= x592 0) 1 (x142 x592)))
(define-fun x1913 ((x592 Int)) Int (ite (= x592 x2434) x2426 (x1936 x592)))
(define-fun x1960 ((x592 Int)) Int (ite (= x609 x592) x2359 (x1913 x592)))
(define-fun x1846 ((x592 Int)) Int (ite (= x592 x2175) x91 (x353 x592)))
(define-fun x487 ((x592 Int)) Int (ite (= x592 x1481) x849 (x1960 x592)))
(define-fun x1434 ((x592 Int)) Int (ite (= 0 x592) 1 (x266 x592)))
(define-fun x2104 ((x592 Int)) Int (ite (= x592 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1532 x592)))
(define-fun x467 ((x592 Int)) Int (ite (= 0 x592) x548 (x1088 x592)))
(define-fun x1153 ((x592 Int)) Int (ite (= x592 128) x548 (x46 x592)))
(define-fun x1973 ((x592 Int)) Int (ite (= x592 0) 1 (x1374 x592)))
(define-fun x1220 ((x592 Int)) Int (ite (= 0 x592) 1 (x139 x592)))
(define-fun x1158 ((x592 Int)) Int (ite (= 0 x592) x829 (x752 x592)))
(define-fun x1897 ((x592 Int)) Int (ite (= 128 x592) x829 (x52 x592)))
(define-fun x1062 ((x592 Int)) Int (ite (= 0 x592) 1 (x142 x592)))
(define-fun x1923 ((x592 Int)) Int (ite (= 0 x592) 1 (x266 x592)))
(define-fun x984 ((x592 Int)) Int (ite (= x592 0) x500 (x1088 x592)))
(define-fun x814 ((x592 Int)) Int (ite (= 128 x592) x500 (x46 x592)))
(define-fun x993 ((x592 Int)) Int (ite (and x2034 x2062) (x1163 x592) (x1973 x592)))
(define-fun x1582 ((x592 Int)) Int (ite (= x1046 x592) x324 (x401 x592)))
(define-fun x712 ((x592 Int)) Int (ite (and (> (+ x324 x1624) x592) (>= x592 x1624)) (x993 (+ 0 (- x592 x1624))) (x458 x592)))
(define-fun x1210 ((x592 Int)) Int (ite (and x1024 x1312) (x401 x592) (x1582 x592)))
(define-fun x670 ((x592 Int)) Int (ite (and x1024 x1312) (x458 x592) (x712 x592)))
(define-fun x2404 ((x592 Int)) Int (ite (and x2178 x1588) (x2006 x592) (x1220 x592)))
(define-fun x1852 ((x592 x976)) Int (ite (= x592 (x338 x2344)) x1214 (x1230 x592)))
(define-fun x2095 ((x592 Int)) Int (ite (= x592 x2059) x1149 (x114 x592)))
(define-fun x1862 ((x592 Int)) Int (ite (and (< x592 (+ x1149 x870)) (<= x870 x592)) (x2404 (+ 0 (- x592 x870))) (x167 x592)))
(define-fun x709 ((x592 Int)) Int (ite (and x1127 x2126) (x114 x592) (x2095 x592)))
(define-fun x63 ((x592 Int)) Int (ite (and x1127 x2126) (x167 x592) (x1862 x592)))
(define-fun x1693 ((x592 Int)) Int (ite (and x1049 x2074) (x2117 x592) (x1897 x592)))
(define-fun x1834 ((x592 Int)) Int (x2367 x592))
(define-fun x1129 ((x592 Int)) Int (ite (and x872 x1042) (x1917 x592) (x1062 x592)))
(define-fun x835 ((x592 x976)) Int (ite (= x592 (x338 x1632)) x5 (x90 x592)))
(define-fun x1636 ((x592 Int)) Int (ite (= x592 x2188) x434 (x2124 x592)))
(define-fun x1123 ((x592 Int)) Int (ite (= x206 x592) x2158 (x2278 x592)))
(define-fun x2308 ((x592 Int)) Int (ite (and x536 x863) (x1434 x592) (x1923 x592)))
(define-fun x995 ((x592 Int)) Int (ite (and (> (+ x434 x1262) x592) (<= x1262 x592)) (x2308 (+ 0 (- x592 x1262))) (x70 x592)))
(define-fun x299 ((x592 Int)) Int (ite (and (> (+ x704 x2158) x592) (<= x704 x592)) (x1129 (+ (- x592 x704) 0)) (x994 x592)))
(define-fun x1059 ((x592 Int)) Int (ite (and x1533 x170) (x2278 x592) (x1123 x592)))
(define-fun x1800 ((x592 Int)) Int (ite (and x170 x1533) (x994 x592) (x299 x592)))
(define-fun x866 ((x592 Int)) Int (ite (and x1926 x1583) (x1153 x592) (x814 x592)))
(define-fun x341 ((x543 Int)) Bool (=> (and (> x543 10000) (not (= 635128645 x543)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x543)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x543)) (not (= x543 243137395)) (not (= x543 2835717307)) (not (= 1986467848 x543)) (not (= x543 2293535753)) (not (= x543 18446744073709551615)) (not (= x543 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 604800 x543)) (not (= x543 2258409472)) (not (= x543 274184521717934524641157099916833587214)) (not (= x543 911411945)) (not (= x543 274184521717934524641157099916833587206)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x543)) (not (= 649617121 x543)) (not (= x543 87118632)) (not (= 142201243 x543)) (not (= 115792089237316195423570985008687907853269984665640564039457 x543)) (not (= x543 1000000000000000000)) (not (= x543 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x543 1461501637330902918203684832716283019655932542976)) (not (= 2960351575 x543)) (not (= x543 2061678023)) (not (= 2743102681 x543)) (not (= 69947311 x543)) (not (= 274184521717934524641157099916833587218 x543)) (not (= 1461501637330902918203684832716283019655932542975 x543)) (not (= x543 2211524764)) (not (= 1889567281 x543)) (not (= 1968616202 x543)) (not (= x543 468353030)) (not (= x543 2514000705)) (not (= x543 2764855426)) (not (= x543 759532456)) (not (= x543 2798343961)) (not (= 2690754053 x543)) (not (= 826074471 x543))) (not ((_ is x1823) (x338 x543)))))
(assert (x2045 x1409))
(assert (x2045 x889))
(assert (= x1438 (x1987 (x338 x1438))))
(assert (= (+ 1 (x1987 x825)) (x1987 (x2186 x825 1))))
(assert (x2045 x1994))
(assert (= x923 x1775))
(assert (= 274184521717934524641157099916833587218 (x1987 (x338 274184521717934524641157099916833587218))))
(assert (x2045 x1704))
(assert (x2045 x1054))
(assert (= (x1987 (x338 x1197)) x1197))
(assert (x341 x2344))
(assert (= (x1987 (x338 x955)) x955))
(assert (x2045 x1909))
(assert (x2045 x1341))
(assert (= (=> (and (>= x563 0) (= x1931 (= x563 0)) (= x1664 (x710 (x338 x297) (x1823 6) 0)) (= x563 (x303 x961)) (= x104 (x939 1461501637330902918203684832716283019655932542975 x1090)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x563) (= x961 (x710 (x338 x104) x1664 0))) (and (=> (and (not x1931) (= x297 x335)) x1383) (=> (and (not x162) (= x162 (> x1222 0)) x1931 (= (x1939 (- x297 1)) x1222)) x428))) x2008))
(assert (x2045 x975))
(assert (= x1632 (x1987 (x338 x1632))))
(assert (= (x1987 (x338 x1202)) x1202))
(assert (x2045 x893))
(assert (= (=> (= 0 x2279) x2270) x742))
(assert (x2045 x1554))
(assert (x2045 x1103))
(assert (= (x1987 (x338 x1113)) x1113))
(assert (x2045 x2370))
(assert (x2045 x1820))
(assert (x2045 x2036))
(assert (x2045 x268))
(assert (x2045 x1618))
(assert (= (x2278 x1587) (ite (and x1857 (not x1206)) (x1636 x1587) (x2124 x1587))))
(assert (x2045 x135))
(assert (= (=> (and (= x745 (x710 (x338 x531) x1020 0)) (= (x939 1461501637330902918203684832716283019655932542975 x2238) x531) (<= 0 x962) (= x698 (x939 1461501637330902918203684832716283019655932542975 x1224)) (= (x1370 x2035) x962) (= (= x962 0) x765) (= (x710 (x338 x1620) (x1823 7) 0) x1020) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x962) (= (x710 (x338 x698) x745 0) x2035)) (and (=> (and (= x2416 x1620) (not x765)) x2212) (=> (and (= x1563 (x1939 (- x1620 1))) x765 (= (> x1563 0) x2340) (not x2340)) x837))) x2087))
(assert (x341 x2277))
(assert (x2045 x2365))
(assert (x2045 x661))
(assert (x341 x832))
(assert (= (x1987 (x338 x1212)) x1212))
(assert (= (x1987 (x338 x2366)) x2366))
(assert (x341 x692))
(assert (x2045 x948))
(assert (=> (>= 10000 x2275) (= (x338 x2275) (x1823 x2275))))
(assert (= (ite (and x863 x536) (x2063 x2288) (x2089 x2288)) (x1492 x2288)))
(assert (x341 x1863))
(assert (x2045 x2312))
(assert (x341 x1682))
(assert (x2045 x1278))
(assert (x341 x2403))
(assert (= (x1987 (x338 x611)) x611))
(assert (x2045 x1601))
(assert (= x746 (=> (= (> x1579 0) x566) (and (=> (not x566) x428) (=> x566 x1748)))))
(assert (= x1729 (=> (and (not (= x1097 468353030)) (> 2293535753 x1097) (= x1097 759532456) (< x1097 911411945) (< 0 x947) (>= 1461501637330902918203684832716283019655932542975 x1065) (= x947 (x676 (x338 274184521717934524641157099916833587206))) (<= x2385 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x854) (not (< x1097 468353030)) (= x1499 x2385) (>= x2385 0) (not (= x1097 635128645)) (= x1087 (x710 (x338 x1065) x397 0)) (= x118 (x710 (x338 x803) (x1823 7) 0)) (= (x1665 x1087) x2385) (= (x710 (x338 x854) x118 0) x397)) (=> (and (< x1209 1461501637330902918203684832716283019655932542976) (= x1099 x304) (= x1090 x363) (= x1817 x574) (= 2 x1490) (= x1634 x1565) (= (x859 0) x366) (= x1499 x246) (= x1225 x238) (= 0 x933) (= x1339 x1225) (= x308 (= (mod (* 32 x1634) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1225)) (= (x1308 32) x1209) (= x1354 (= x574 x366)) (= x304 x1695) (= (= x1294 x1209) x2273) (= x1191 (< 0 x246)) x1354 x1191 (= x1552 (= 2 x1565)) (= 32 x1726) (= x790 x1817) (= x2235 x1634) (= (= x1099 x1916) x2051) (= x1304 x1634) x308 (= x1579 x180) x2273 (= x1817 x1294) (= x1916 x2426) x2051 (= x819 0) (> 1461501637330902918203684832716283019655932542976 x366) x1552) x1025))))
(assert (x341 x2050))
(assert (= (or x2096 x1279) x674))
(assert (x1346 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x2045 x104))
(assert (x2045 x1946))
(assert (x2045 x816))
(assert (= (x338 115792089237316195423570985008687907853269984665640564039457) (x1823 115792089237316195423570985008687907853269984665640564039457)))
(assert (x2045 x1009))
(assert (x2045 x508))
(assert (x2045 x2314))
(assert (x2045 x47))
(assert (x341 x181))
(assert (= (x1987 (x338 x570)) x570))
(assert (= (and x2227 (not x999)) x841))
(assert (=> (<= x1620 10000) (= (x338 x1620) (x1823 x1620))))
(assert (=> (>= 10000 x181) (= (x1823 x181) (x338 x181))))
(assert (x2045 x1257))
(assert (x2045 x333))
(assert (x2045 x1628))
(assert (x2045 x2317))
(assert (x2045 x2402))
(assert (x2045 x1734))
(assert (=> (>= 10000 x2403) (= (x338 x2403) (x1823 x2403))))
(assert (= (ite (and (not x1206) x1857) (x995 x1341) (x70 x1341)) (x994 x1341)))
(assert (x2045 x941))
(assert (x2045 x1975))
(assert (x2045 x2105))
(assert (x2045 x2398))
(assert (= x1041 (x1987 (x338 x1041))))
(assert (x2045 x656))
(assert (= (=> (and (= (x1939 (- x1579 1)) x1089) (= x2315 (> x1089 0))) (and (=> x2315 x1019) (=> (not x2315) x1976))) x1514))
(assert (= (x1987 (x338 x1811)) x1811))
(assert (x2045 x2385))
(assert (=> (<= x858 10000) (= (x338 x858) (x1823 x858))))
(assert (x2045 x430))
(assert (=> (<= x97 10000) (= (x338 x97) (x1823 x97))))
(assert (x2045 x1222))
(assert (= x364 (x1987 (x338 x364))))
(assert (= (or (and (not x1484) x245) x917) x906))
(assert (x156 x430 x86))
(assert (= (x1987 (x338 x634)) x634))
(assert (x2045 x2138))
(assert (x2045 x927))
(assert (x2045 x1662))
(assert (x2045 x1580))
(assert (x341 x1942))
(assert (= x1298 (=> (and (= (< 0 x903) x128) x348 (= x348 (< (x1852 (x338 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2126 (= 0 x1149)) (or (not x128) (and (= (ite x1769 1 0) x1067) (= (x709 x380) x339) (= (= 0 x1593) x1290) (= x1067 x1593) x128 (= (x63 x257) x1593) (< 0 x1593) (= x1769 (not x1290)) (not (or (> x339 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x339 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x339 32)))) (= x257 (x915 (+ x380 32))))) (or (and (= x380 x2059) (not x2126) (= (x915 (+ x763 96)) x870)) (and (= 96 x380) x2126)) (= x1214 (x1230 (x338 x2344))) (= (x709 x380) x903) (not (= x1168 0))) x578)))
(assert (=> (<= x2207 10000) (= (x338 x2207) (x1823 x2207))))
(assert (x2045 x947))
(assert (= (and x2088 x1710) x863))
(assert (x2045 x1706))
(assert (= x1109 (=> (= x1110 x1014) x298)))
(assert (= x1105 (x1987 (x338 x1105))))
(assert (x2045 x1275))
(assert (x2045 x1353))
(assert (x2045 x1152))
(assert (x341 x597))
(assert (x2045 x2297))
(assert (=> (>= 10000 x1041) (= (x338 x1041) (x1823 x1041))))
(assert (= x2275 (x1987 (x338 x2275))))
(assert (= (ite (and x1803 x124) (x1472 x222) (ite (and x159 (not x1803) x124) (x1472 x222) (x1867 x222))) (x2185 x222)))
(assert (= 87118632 (x1987 (x1823 87118632))))
(assert (x2045 x1078))
(assert (x2045 x1345))
(assert (= x499 (x1987 (x338 x499))))
(assert (= x2223 x1049))
(assert (= x1691 (=> (= (< 0 x2057) x67) (and (=> x67 x942) (=> (not x67) x837)))))
(assert (=> (<= x1361 10000) (= (x1823 x1361) (x338 x1361))))
(assert (x2045 x1285))
(assert (x2045 x2432))
(assert (x341 x513))
(assert (= (x1987 (x338 x1816)) x1816))
(assert (x2045 x998))
(assert (x2045 x1863))
(assert (= (=> (and x792 (or (and (= x2097 (x939 115792089237316195423570985008687907853269984665640564039457584007913129639904 x855)) (= x1771 x2188) (= (x915 (+ 96 x1557)) x1262) (= x855 (x915 (+ x434 63))) (= x236 (x915 (+ x2097 x2188))) (= x236 x2175) (not x1206)) (and (= x1771 96) x1206 (= x2188 x2175))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2230 (x338 274184521717934524641157099916833587206))) x792) (or (not x196) (and (= (ite x203 1 0) x1253) (not (or (and (= true (<= x1388 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1388)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1388))) x196 (> x1242 0) (= (not x2043) x203) (= x1253 x1242) (= (x994 x1341) x1242) (= (x915 (+ 32 x1771)) x1341) (= x1388 (x2278 x1771)) (= x2043 (= x1242 0)))) (= (x2230 (x338 274184521717934524641157099916833587206)) x1237) (= x1206 (= x434 0)) (= x1585 (x1375 (x338 x1865))) (= x2094 (x2278 x1771)) (= (> x2094 0) x196) (not (= 0 x1722))) x658) x2219))
(assert (x2045 x475))
(assert (x341 x1495))
(assert (x2045 x974))
(assert (x2045 x404))
(assert (= (x1987 (x338 x832)) x832))
(assert (x2045 x2255))
(assert (x2045 x2220))
(assert (x2045 x2326))
(assert (x2045 x1274))
(assert (= x1583 x1301))
(assert (x2045 x473))
(assert (x2045 x2279))
(assert (x2045 x634))
(assert (x2045 x1005))
(assert (= x1044 (and x1181 (not x1268))))
(assert (x2045 x419))
(assert (= (x1750 x608) 0))
(assert (x2045 x586))
(assert (= (=> (= (> x1596 0) x2122) (and (=> (not x2122) x1576) (=> x2122 x147))) x1674))
(assert (= (x1987 (x338 x505)) x505))
(assert (x2045 x431))
(assert (x341 x804))
(assert (=> (<= x1694 10000) (= (x338 x1694) (x1823 x1694))))
(assert (x2045 x2164))
(assert (x2045 x228))
(assert (=> (>= 10000 x2348) (= (x1823 x2348) (x338 x2348))))
(assert (= x1116 x165))
(assert (= x2070 (x1987 (x338 x2070))))
(assert (= 0 (x572 x1350)))
(assert (x2045 x2372))
(assert (= (=> (= x999 (= 274184521717934524641157099916833587214 x1865)) (and (=> (not x999) x496) (=> (and (not x1559) (= x1315 2835717307) (= x2321 (x2063 x2118)) (= x385 (x1091 x785)) (= x1722 1) (= (+ x483 x88) x1174) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x385 x1705)) x1069) (= x44 (x676 (x338 274184521717934524641157099916833587214))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2297) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2297)) (< x2297 64))) x940) (not x940) (not x1069) (not x1547) (= x1937 x666) (= (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0) x2118) (not (= 649617121 x1315)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x385) (= x785 (x710 (x338 x916) (x1823 1) 0)) (not (= 826074471 x1315)) (= (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0) x2350) (not (= x1315 1889567281)) (not (< x1937 4)) (not (< x1315 649617121)) (= x2085 274184521717934524641157099916833587206) (<= x2321 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x836) (= 32 x434) (= x1705 x483) (= (x1939 (- x1937 4)) x2297) (= x1559 (< x2321 x333)) (= x1643 274184521717934524641157099916833587206) (= x579 x1146) (= x12 (x939 1461501637330902918203684832716283019655932542975 x35)) (not (= x1315 2514000705)) (<= 0 x2321) (= x1081 x333) (= x35 x221) (= x88 x385) (= x1547 (< x2321 x1705)) (= x1937 68) (= x632 (x1939 (- x2321 x333))) x999 (< 0 x44) (>= 1461501637330902918203684832716283019655932542975 x35) (= x333 x1705) (= x1266 (x710 (x338 x12) (x1823 1) 0)) (= (x939 1461501637330902918203684832716283019655932542975 x35) x916) (<= 0 x385) (< (+ x1705 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2219))) x618))
(assert (x341 x617))
(assert (x2045 x1098))
(assert (x2045 x2216))
(assert (=> (>= 10000 x567) (= (x338 x567) (x1823 x567))))
(assert (= x87 true))
(assert (x2045 x275))
(assert (x2045 x137))
(assert (= x2142 (and (not x1413) x230)))
(assert (= (x1987 (x338 x1151)) x1151))
(assert (= (=> (= x2070 x2416) x1561) x2212))
(assert (x2045 x2108))
(assert (x2045 x1579))
(assert (= (=> (and (= (= 0 x1613) x517) (= x1411 (x710 (x338 x1653) x886 0)) (= x1613 (x303 x1411)) (<= 0 x1613) (= (x710 (x338 x1579) (x1823 6) 0) x886) (= (x939 1461501637330902918203684832716283019655932542975 x1090) x1653) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1613)) (and (=> x517 x317) (=> (and (not x517) (= x335 x1579)) x1383))) x1748))
(assert (x2045 x1294))
(assert (= (x1987 (x338 x2114)) x2114))
(assert (x2045 x626))
(assert (x2045 x1246))
(assert (=> (<= x1574 10000) (= (x1823 x1574) (x338 x1574))))
(assert (x341 x895))
(assert (x341 x411))
(assert (= x389 (and x1194 x67)))
(assert (x2045 x651))
(assert (x2045 x681))
(assert (x2045 x828))
(assert (x2045 x1243))
(assert (=> (>= 10000 x499) (= (x338 x499) (x1823 x499))))
(assert (x2045 x2188))
(assert (= (=> (and (= x217 (x710 (x338 x1012) x910 0)) (= (x939 1461501637330902918203684832716283019655932542975 x1224) x611) (= x84 (x710 (x338 x1619) x755 0)) (= x2195 (x710 (x338 x1995) x1408 0)) (= x2184 (x939 1461501637330902918203684832716283019655932542975 x2238)) (= x1199 (x1647 x1687)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1199) (= x1701 (= 0 x1236)) (= (x710 (x338 x2184) x2413 0) x163) (= (x2353 x2195) x2423) (<= x1476 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1199 0) (= x523 (x939 1461501637330902918203684832716283019655932542975 x1224)) (= (x710 (x338 x523) x163 0) x1408) (= x2413 (x710 (x338 x2057) (x1823 4) 0)) (>= x1476 0) (= (x939 1461501637330902918203684832716283019655932542975 x2238) x1619) (>= x2423 0) (= (x1887 x84) x1476) (= x1236 (x1939 (- x1199 x2423))) (= (x710 (x338 x611) x217 0) x1687) (= x1995 (x939 1461501637330902918203684832716283019655932542975 x430)) (= (x710 (x338 x2057) (x1823 3) 0) x910) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2423) (= x1012 (x939 1461501637330902918203684832716283019655932542975 x2238)) (= x755 (x710 (x338 x2057) (x1823 5) 0)) (not (> x2423 x1199))) (and (=> (and (= x852 (x939 x1037 x493)) (= x1697 (x939 1461501637330902918203684832716283019655932542975 x2238)) (= x269 (* x2296 x66)) (= x2160 (div x269 1000000000000000000)) (= (div x918 x1476) x2296) (<= x66 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x1236 x1721) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (ite (< 115792089237316195423570985008687907853269984665640564039457 x1236) 1 0) x493) (= x66 (x2263 x1980)) (= 0 x1696) (= (x1939 (- x958 32)) x2150) (= (x1939 (- x763 x1608)) x958) x1990 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2296 x66)) (= x171 (x915 (+ x1699 100))) (= x1147 (x939 1461501637330902918203684832716283019655932542975 x2238)) (= (x915 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2011)) x1102) (= x1980 (x710 (x338 x1176) x1180 0)) (= x1990 (< 0 x1719)) (= (x710 (x338 x1562) x284 0) x716) (= (x915 (+ x1699 96)) x1444) (= (x710 (x338 x1697) x2101 0) x997) (= x2011 (x939 26959946667150639794667015087019630673637144422540572481103610249215 x1646)) (= x404 (+ x2290 x1742)) (= x1212 (x939 1461501637330902918203684832716283019655932542975 x1224)) (or (and (not x1904) (= x2033 0)) (and (or (and x749 (= x280 (x915 (+ x1608 64))) (= x501 (x30 x280)) (= x2424 (x915 (+ 96 x763))) (= (> x1257 64) x857) (or (and (= x2033 64) (not x857)) (and (= x1872 (< 96 x1257)) (or (and (not x1649) (= x1649 (> x1257 128)) (= (x915 (+ 160 x763)) x1822) (= (x915 (+ 128 x1608)) x1200) (= 128 x2033) x1872 (= (x30 x1200) x146)) (and (= x2033 96) (not x1872))) (= (x915 (+ 128 x763)) x1993) (= (x915 (+ 96 x1608)) x1806) x857 (= x1450 (x30 x1806))))) (and (not x749) (= 32 x2033))) (= x1444 x228) x1904 (= (x30 x228) x1661) (= (< 32 x1257) x749) (= x2059 x1737))) (= x2290 x1721) (= x1721 (x2353 x716)) (= (x710 (x338 x2057) (x1823 4) 0) x2101) (= (x710 (x338 x2057) (x1823 11) 0) x1340) (= (x915 (+ 100 x1608)) x763) (or (and (= x818 (x915 (+ x2059 x1257))) x1735) (not x1735)) (= x1902 (x939 1461501637330902918203684832716283019655932542975 x1224)) (not x1701) (= x1646 (x129 x1444)) (= 1 x1037) (= x1742 x1236) (= x1562 (x939 1461501637330902918203684832716283019655932542975 x430)) (= 0 x852) (= x2344 (x939 1461501637330902918203684832716283019655932542975 x430)) (<= 0 x66) (= (x676 (x338 x2344)) x1719) (= x918 (mod (* x1236 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x284 (x710 (x338 x1212) x997 0)) (= x1489 (x915 (+ x1608 68))) (< 0 x1476) (= x1176 (x939 1461501637330902918203684832716283019655932542975 x430)) (= (x1963 x1608) x1257) (= (> x1257 0) x1904) (<= x1721 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x915 (+ x171 128)) x2059) (= (x710 (x338 x1147) x1340 0) x1180) (= x1735 (< x1257 x2033)) (>= x1721 0)) x760) (=> x1701 x578))) x1924))
(assert (= (x1987 (x338 x895)) x895))
(assert (= (x1987 (x338 x821)) x821))
(assert (= 635128645 (x1987 (x1823 635128645))))
(assert (= x2223 (or (and x1701 x2418) x1127)))
(assert (x341 x1224))
(assert (x2045 x833))
(assert (x2045 x368))
(assert (x2045 x1458))
(assert (x2045 x1624))
(assert (x2045 x802))
(assert (x2045 x315))
(assert (= x806 (=> (and (= (x710 (x338 x1596) (x1823 7) 0) x573) (= (x1665 x113) x507) (<= x507 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x507) (not (> x1596 x1886)) (= x1720 (x939 1461501637330902918203684832716283019655932542975 x833)) (<= 0 x1886) (= (x710 (x338 x2426) x1984 0) x113) (= (< 0 x507) x1268) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1886) (= x1984 (x710 (x338 x1720) x573 0))) (and (=> (not x1268) x1674) (=> (and (= x306 x1349) (= 0 x2123) (>= x306 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x306) (= (x710 (x338 x1596) (x1823 9) 0) x249) (= x966 (x710 (x338 x2366) x249 0)) x1268 (= x2366 (x939 1461501637330902918203684832716283019655932542975 x833)) (= (x710 (x338 x2426) x966 0) x1511) (= x306 (x925 x1511))) x1166)))))
(assert (x2045 x2129))
(assert (x2045 x1837))
(assert (= x302 (=> (= x53 0) x1145)))
(assert (x2045 x1014))
(assert (x2045 x111))
(assert (= x140 (x1987 (x338 x140))))
(assert (= x1348 (=> (and (= (> x955 0) x1160) (= x955 (x1939 (- x699 1)))) (and (=> x1160 x2056) (=> (not x1160) x850)))))
(assert (x156 x1090 x594))
(assert (x2045 x811))
(assert (x2045 x414))
(assert (= (x1823 274184521717934524641157099916833587206) (x338 274184521717934524641157099916833587206)))
(assert (= x692 (x1987 (x338 x692))))
(assert (x341 x2070))
(assert (x2045 x1255))
(assert (x2045 x698))
(assert (= (ite (and x2078 x1684) (x1426 x2202) (x1549 x2202)) (x1007 x2202)))
(assert (= x2301 (=> (and (= x623 (< x1596 x654)) (or (and (= x1389 (> x654 x474)) (= x1898 (x939 1461501637330902918203684832716283019655932542975 x833)) (or (and (= (x939 1461501637330902918203684832716283019655932542975 x833) x429) (= (< x1515 x654) x1423) (= x1515 (x915 (+ x1596 2))) (not x1423) (= x2129 (x939 1461501637330902918203684832716283019655932542975 x833)) x1389) (not x1389)) x623 (= x103 (x939 1461501637330902918203684832716283019655932542975 x833)) (= (x915 (+ x1596 1)) x474)) (not x623))) x1074)))
(assert (x2045 x1041))
(assert (=> (>= 10000 x1816) (= (x338 x1816) (x1823 x1816))))
(assert (x2045 x1167))
(assert (= 0 (x572 x1119)))
(assert (=> (>= 10000 x1790) (= (x338 x1790) (x1823 x1790))))
(assert (x341 x377))
(assert (=> (<= x1285 10000) (= (x338 x1285) (x1823 x1285))))
(assert (x341 x1754))
(assert (=> (>= 10000 x1455) (= (x1823 x1455) (x338 x1455))))
(assert (x2045 x685))
(assert (= (x338 2798343961) (x1823 2798343961)))
(assert (= x124 x2049))
(assert (x2045 x666))
(assert (x2045 x991))
(assert (x2045 x2069))
(assert (x2045 x1972))
(assert (x341 x821))
(assert (=> (<= x413 10000) (= (x338 x413) (x1823 x413))))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1987 (x1823 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= x506 (or x943 x843)))
(assert (x2045 x306))
(assert (= x2029 (and x253 x1709)))
(assert (x2045 x2379))
(assert (x2045 x453))
(assert (= (x1987 (x338 x251)) x251))
(assert (x341 x104))
(assert (x2045 x790))
(assert (x2045 x1343))
(assert (x341 x318))
(assert (= x977 (=> (and (= x565 (> x111 0)) (= (x1939 (- x2057 1)) x111)) (and (=> (not x565) x102) (=> x565 x761)))))
(assert (x2045 x1245))
(assert (= (+ (x1987 x511) 1) (x1987 (x2186 x511 1))))
(assert (x2045 x938))
(assert (= x1863 (x1987 (x338 x1863))))
(assert (x341 x140))
(assert (= (x1987 (x1823 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= x1111 (=> (and (>= x1886 0) (= x1920 (= 0 x365)) (<= x365 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2371 (x710 (x338 x699) (x1823 6) 0)) (>= x365 0) (not (> x699 x1886)) (= (x939 1461501637330902918203684832716283019655932542975 x833) x642) (<= x1886 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x472 (x710 (x338 x642) x2371 0)) (= x365 (x691 x472))) (and (=> x1920 x2208) (=> (and (= x1689 (x710 (x338 x2139) x416 0)) (= x768 x1345) (<= x1345 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x136 0) (= (x1683 x1689) x1345) (not x1920) (>= x1345 0) (= x2139 (x939 1461501637330902918203684832716283019655932542975 x833)) (= (x710 (x338 x699) (x1823 10) 0) x416)) x614)))))
(assert (x2045 x387))
(assert (=> (<= x43 10000) (= (x1823 x43) (x338 x43))))
(assert (x2045 x36))
(assert (=> (>= 10000 x1483) (= (x1823 x1483) (x338 x1483))))
(assert (x2045 x2412))
(assert (x341 x251))
(assert (x2045 x1494))
(assert (x2045 x1147))
(assert (x2045 x398))
(assert (= x571 (x1987 (x338 x571))))
(assert (= (x1987 (x338 x17)) x17))
(assert (x2045 x277))
(assert (x2045 x2097))
(assert (= (=> (= x2064 (> x588 1)) (and (=> (not x2064) x1738) (=> (and (= x2159 (> x1972 x1368)) (= x206 (x915 (+ 128 x2434))) (= (> x198 0) x1272) (<= x1632 1461501637330902918203684832716283019655932542975) (= x849 (x915 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x345))) (= (x1745 196) x1632) (= x1797 (x915 (+ x2175 100))) (< 1 x439) (= x198 (x676 (x338 x1632))) (= x1368 (x1846 x2175)) (= (x2023 128) x439) x2064 (= (x915 (+ x2175 36)) x2434) (= x609 (x915 (+ x2175 68))) (= x91 (x1939 (- x2435 32))) x1272 (= x2435 (x1939 (- x1797 x2175))) (= x2359 (x78 192)) (= x227 (x1960 x1481)) (or (and x2159 (= (x915 (+ x206 x1368)) x762)) (not x2159)) (= x1481 (x915 (+ x2175 32))) (= 0 x1422) (= x1524 (< 0 x1368)) (= x345 (x939 26959946667150639794667015087019630673637144422540572481103610249215 x227)) (< 1 x588) (or (and x1524 (= x534 x1481) (= (x487 x534) x1985) (or (and (= (x915 (+ x2175 64)) x2322) (or (and (= 64 x1972) (not x1281)) (and (= x647 (x915 (+ 128 x1797))) (= (> x1368 96) x1855) (or (and (not x1271) (= (x487 x503) x1161) x1855 (= (< 128 x1368) x1271) (= x1611 (x915 (+ x1797 160))) (= (x915 (+ x2175 128)) x503) (= x1972 128)) (and (not x1855) (= x1972 96))) x1281 (= (x915 (+ x2175 96)) x1850) (= x2287 (x487 x1850)))) x514 (= x2028 (x915 (+ x1797 96))) (= x1281 (< 64 x1368)) (= x1631 (x487 x2322))) (and (not x514) (= 32 x1972))) (= (> x1368 32) x514) (= x1137 x206)) (and (= 0 x1972) (not x1524)))) x2156))) x658))
(assert (= (x1987 (x338 x1464)) x1464))
(assert (x341 x2426))
(assert (x2045 x1801))
(assert (x2045 x166))
(assert (= (x338 2211524764) (x1823 2211524764)))
(assert (x2045 x1256))
(assert (x2045 x972))
(assert (= (or (and x478 x1931) (and x1156 (not x566)) (and x747 (not x860))) x1785))
(assert (x2045 x2071))
(assert (x341 x137))
(assert (x2045 x1090))
(assert (x2045 x754))
(assert (x341 x1995))
(assert (x2045 x1442))
(assert (x341 x624))
(assert (x2045 x62))
(assert (= (=> (and (= x1436 (= 0 x2018)) (= (= x2138 0) x309) (or (and (= (x939 1461501637330902918203684832716283019655932542975 x833) x321) x309 (= x1756 x1662)) (and (= x784 (x710 (x338 x2426) x726 0)) (= x322 (x361 x1397)) (= x726 (x710 (x338 x99) x1392 0)) (or (and (not x1866) (= x719 0)) (and (= (x2257 x2379) x1739) (or (and (= x1622 x379) (= (x2257 x2379) x1622) x645) (and (= x2196 x379) (not x645))) (or (and (= x1847 (x2166 x1662)) x2039 (not (< x379 x1847)) (= x1746 (x1939 (- x379 x1847))) (= x719 x1746)) (and (not (< x379 x1263)) (= x797 x719) (= x605 604800) (not x2039) (= x797 (ite (< x2065 604800) x2065 604800)) (= x2065 (x1939 (- x379 x1263))))) (= (= 0 x1263) x2039) (= (> x2196 x1739) x645) x1866)) (<= x1263 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2349 x2242) x2102) (<= x2102 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1820 (x915 (+ 128 x2140))) (>= x2102 0) (= x1397 (x2186 x2242 1)) (>= x1263 0) (or (and (= x2093 (x939 1461501637330902918203684832716283019655932542975 x833)) (< (* x719 x2138) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x2138 x719) x2100) (= x2037 x2336) (= x2037 x2100) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1911) (= x1911 (x2185 x525)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2037 x1911)) (= x1820 x1756) (= (x710 (x338 x2426) x1507 0) x525) (= x2191 x1911) (= x208 (+ x2336 x2191)) (<= 0 x1911) (= (x710 (x338 x2093) x908 0) x1507) (= (x939 1461501637330902918203684832716283019655932542975 x833) x2204) (= x908 (x710 (x338 x699) (x1823 3) 0)) (not x1076)) (and (= (x939 1461501637330902918203684832716283019655932542975 x833) x2269) (= x1820 x1756) x1076)) (= x1076 (= 0 x719)) (not x309) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x322) (>= x322 0) (= x2251 (x2257 x2379)) (= (x915 (+ 96 x2140)) x2379) (= x2242 (x710 (x338 x699) (x1823 1) 0)) (= x1866 (> x2251 x1263)) (= (x710 (x338 x699) (x1823 7) 0) x1392) (= x1263 (x1564 x784)) (= x99 (x939 1461501637330902918203684832716283019655932542975 x833)))) (or (and (not x1436) (= x449 (x939 1461501637330902918203684832716283019655932542975 x833))) x1436)) x1111) x1921))
(assert (= 274184521717934524641157099916833587206 (x1987 (x1823 274184521717934524641157099916833587206))))
(assert (x2045 x1096))
(assert (x2045 x31))
(assert (x2045 x697))
(assert (x2045 x692))
(assert (x2045 x2177))
(assert (= 0 (x1763 x280)))
(assert (= (x338 2514000705) (x1823 2514000705)))
(assert (= x1724 (x1987 (x338 x1724))))
(assert (= (x1987 (x338 x1483)) x1483))
(assert (x341 x1151))
(assert (= 1986467848 (x1987 (x1823 1986467848))))
(assert (x156 x1224 x1035))
(assert (x2045 x1351))
(assert (x2045 x1077))
(assert (= (x1987 (x1823 1000000000000000000)) 1000000000000000000))
(assert (x2045 x2057))
(assert (= 0 (x2124 x1771)))
(assert (x2045 x464))
(assert (= (=> (and (= (x710 (x338 x1579) (x1823 6) 0) x463) (>= x1906 0) (= x372 (x710 (x338 x2207) x463 0)) (not (> x1579 x1886)) (<= x1906 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x939 1461501637330902918203684832716283019655932542975 x1090) x2207) (= (= 0 x1906) x1484) (<= 0 x1886) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1886) (= x1906 (x303 x372))) (and (=> (and (= (x939 1461501637330902918203684832716283019655932542975 x1090) x2151) (= x2298 (x710 (x338 x2151) x1774 0)) (= (x710 (x338 x1579) (x1823 10) 0) x1774) (= x1351 x2358) (= 0 x264) (<= x2358 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1500 x2298) x2358) (>= x2358 0) (not x1484)) x204) (=> x1484 x746))) x1751))
(assert (x2045 x1361))
(assert (= 604800 (x1987 (x1823 604800))))
(assert (=> (>= 10000 x1619) (= (x338 x1619) (x1823 x1619))))
(assert (x2045 x1587))
(assert (x341 x2347))
(assert (x2045 x868))
(assert (=> (>= 10000 x2121) (= (x338 x2121) (x1823 x2121))))
(assert (x2045 x1224))
(assert (x2045 x1981))
(assert (= (or x1468 (and x2049 (not x1623))) x2078))
(assert (=> (<= x1151 10000) (= (x1823 x1151) (x338 x1151))))
(assert (x2045 x83))
(assert (= (x1987 (x338 x900)) x900))
(assert (=> (<= x1224 10000) (= (x338 x1224) (x1823 x1224))))
(assert (= x1176 (x1987 (x338 x1176))))
(assert (= (x844 x1204) (ite x1024 (ite (and x2034 x2062) (x880 x1204) (x2387 x1204)) (x2387 x1204))))
(assert (= (=> (= x1213 x2149) x2303) x1244))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1886) (= (x939 1461501637330902918203684832716283019655932542975 x833) x895) (not (> x1596 x1886)) (<= 0 x1886) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2254) (= x2254 (x303 x1779)) (<= 0 x2254) (= (x710 (x338 x1596) (x1823 6) 0) x2092) (= x1779 (x710 (x338 x895) x2092 0)) (= (= x2254 0) x1623)) (and (=> (and (= (x1500 x1366) x996) (= x2331 x996) (= x1305 0) (<= 0 x996) (not x1623) (<= x996 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2050 (x939 1461501637330902918203684832716283019655932542975 x833)) (= x823 (x710 (x338 x1596) (x1823 10) 0)) (= (x710 (x338 x2050) x823 0) x1366)) x2262) (=> x1623 x568))) x904))
(assert (x2045 x2409))
(assert (= (ite (and x863 x536) (x336 x723) (x2387 x723)) (x2283 x723)))
(assert (= (and (not x1190) x922) x528))
(assert (x2045 x390))
(assert (= x465 (or x553 x778)))
(assert (x2045 x1765))
(assert (=> (<= x188 10000) (= (x338 x188) (x1823 x188))))
(assert (x2045 x505))
(assert (x341 x698))
(assert (x2045 x89))
(assert (x2045 x1673))
(assert (= true x875))
(assert (x2045 x91))
(assert (x2045 x1608))
(assert (x2045 x929))
(assert (= x1232 (x1987 (x338 x1232))))
(assert (x2045 x931))
(assert (x2045 x2059))
(assert (x2045 x1865))
(assert (= (x1987 (x338 x874)) x874))
(assert (= (x1513 192) (x1815 192)))
(assert (x2045 x1540))
(assert (= (x1987 (x338 x2184)) x2184))
(assert (x2045 x1841))
(assert (=> (>= 10000 x681) (= (x1823 x681) (x338 x681))))
(assert (x341 x1259))
(assert (x2045 x457))
(assert (=> (>= 10000 x1176) (= (x1823 x1176) (x338 x1176))))
(assert (x2045 x1349))
(assert (= x137 (x1987 (x338 x137))))
(assert (= x2279 (x1987 (x338 x2279))))
(assert (=> (>= 10000 x570) (= (x1823 x570) (x338 x570))))
(assert (x2045 x958))
(assert (x2045 x1276))
(assert (x2045 x1165))
(assert (= x1818 (x1987 (x338 x1818))))
(assert (= (=> (and (not (= 0 x1554)) (= (< 0 x791) x1607) x38 (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x80 (x338 274184521717934524641157099916833587206))) x38) (= (x80 (x338 274184521717934524641157099916833587206)) x1306) (or (and (= x1624 (x915 (+ x1621 96))) (not x1312) (= x1046 x2022)) (and x1312 (= 96 x2022))) (= (= 0 x324) x1312) (= x791 (x1210 x2022)) (or (and (= (x1210 x2022) x2334) (> x2171 0) (= (not x1520) x498) (= x1899 (ite x498 1 0)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2334) true) (< x2334 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2334))) (= x2171 (x670 x2317)) (= x1899 x2171) (= x2317 (x915 (+ 32 x2022))) (= (= x2171 0) x1520) x1607) (not x1607)) (= (x1938 (x338 x137)) x344)) x2330) x45))
(assert (= (x1513 160) x968))
(assert (= (x1987 (x1823 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x2045 x962))
(assert (= x329 (or x465 (and x1479 x1131))))
(assert (x2045 x1531))
(assert (x341 x783))
(assert (= x1170 x2078))
(assert (x2045 x2368))
(assert (= (x1987 (x338 x698)) x698))
(assert (= x319 (x1987 (x338 x319))))
(assert (x2045 x1705))
(assert (x2045 x2296))
(assert (x2045 x1998))
(assert (=> (>= 10000 x137) (= (x338 x137) (x1823 x137))))
(assert (=> (>= 10000 x821) (= (x338 x821) (x1823 x821))))
(assert (=> (>= 10000 x1697) (= (x1823 x1697) (x338 x1697))))
(assert (= (x1854 160) x232))
(assert (x2045 x2424))
(assert (x341 x351))
(assert (x341 x1441))
(assert (x2045 x696))
(assert (x2045 x214))
(assert (x2045 x221))
(assert (x2045 x2060))
(assert (x2045 x2390))
(assert (= x912 (=> (and (= x1000 (= 0 x2060)) (or x1000 (and (= x591 (x939 1461501637330902918203684832716283019655932542975 x1224)) (= x2405 (x939 1461501637330902918203684832716283019655932542975 x2238)) (not x1000))) (or (and (or (and (= x2386 0) (not x1021)) (and x1021 (= (< x2091 x2196) x1609) (= x480 (= x529 0)) (or (and (not x480) (= x224 (x1939 (- x929 x529))) (not (> x529 x929)) (= x2386 x1233) (= x1544 604800) (= (ite (> 604800 x224) x224 604800) x1233)) (and x480 (= (x469 128) x279) (= x975 (x1939 (- x929 x279))) (= x2386 x975) (not (< x929 x279)))) (= x2091 (x2320 160)) (or (and (= (x2320 160) x1395) x1609 (= x929 x1395)) (and (not x1609) (= x2196 x929))))) (= (x710 (x338 x783) x834 0) x577) (= (x361 x51) x2425) (<= 0 x529) (not x131) (= (= 0 x2386) x2271) (or (and (= x1765 (x939 1461501637330902918203684832716283019655932542975 x2238)) (= x1699 192) x2271 (= (x939 1461501637330902918203684832716283019655932542975 x1224) x452)) (and (= x1592 (* x2386 x1982)) (= (x710 (x338 x2057) (x1823 3) 0) x152) (= (x710 (x338 x1863) x2020 0) x952) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2386 x1982)) (= (+ x1429 x937) x877) (not x2271) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2356 x369)) (= x2356 (x23 x952)) (= x2356 x937) (= x369 x1429) (= x1699 192) (= (x939 1461501637330902918203684832716283019655932542975 x2238) x2289) (= (x939 1461501637330902918203684832716283019655932542975 x2238) x1285) (= x1863 (x939 1461501637330902918203684832716283019655932542975 x1224)) (= (x939 1461501637330902918203684832716283019655932542975 x1224) x1494) (= x2020 (x710 (x338 x1285) x152 0)) (>= x2356 0) (= x369 x1592) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2356))) (= x1195 (x710 (x338 x2057) (x1823 7) 0)) (= (x2320 160) x1975) (<= x1732 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2425) (<= 0 x2425) (= x834 (x710 (x338 x1232) x1195 0)) (= x51 (x2186 x2355 1)) (= x783 (x939 1461501637330902918203684832716283019655932542975 x1224)) (= x1232 (x939 1461501637330902918203684832716283019655932542975 x2238)) (= (x710 (x338 x2057) (x1823 1) 0) x2355) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x529) (= (x2349 x2355) x1732) (= x529 (x1370 x577)) (= (< x529 x1975) x1021) (>= x1732 0)) (and x131 (= (x939 1461501637330902918203684832716283019655932542975 x2238) x1018) (= x1699 128) (= x1177 (x939 1461501637330902918203684832716283019655932542975 x1224)))) (= x131 (= 0 x1982))) x438)))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1987 (x1823 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (x2045 x2015))
(assert (=> (>= 10000 x874) (= (x1823 x874) (x338 x874))))
(assert (= (x1763 x228) 0))
(assert (x156 x35 x2295))
(assert (x2045 x259))
(assert (= (or x1023 x848) x2103))
(assert (x2045 x1699))
(assert (x2045 x1061))
(assert (x2045 x339))
(assert (= (or x2352 x799) x1947))
(assert (x2045 x1284))
(assert (x2045 x1968))
(assert (= (=> (and (<= 0 x173) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x173) (= x418 (x710 (x338 x571) x64 0)) (= x173 (x691 x418)) (= x64 (x710 (x338 x1455) (x1823 6) 0)) (= x571 (x939 1461501637330902918203684832716283019655932542975 x833)) (= (= x173 0) x2137)) (and (=> (and (not x2137) (= x495 x1455)) x1006) (=> (and (= (> x2071 0) x2430) x2137 (not x2430) (= (x1939 (- x1455 1)) x2071)) x302))) x1521))
(assert (x341 x1147))
(assert (=> (<= x626 10000) (= (x1823 x626) (x338 x626))))
(assert (= x1533 (or (and x1042 x872) (and x1877 x953))))
(assert (= (=> (and (<= x1886 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 243137395 x1953) (> 468353030 x1953) (>= 1461501637330902918203684832716283019655932542975 x1224) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1886) (= (x710 (x338 x1224) x1218 0) x1567) (= 0 x510) (not (= x1953 142201243)) (not (= 69947311 x1953)) (= x2196 x117) (>= x119 0) (= x510 x1292) (>= 1461501637330902918203684832716283019655932542975 x119) (>= 1461501637330902918203684832716283019655932542975 x2238) (>= 1461501637330902918203684832716283019655932542975 x2246) (>= 1461501637330902918203684832716283019655932542975 x1011) (= x148 x1011) (= (< 0 x27) x944) (not (< x1886 x2057)) (= x148 x640) (>= x2246 0) (not (= 87118632 x1953)) (= (x710 (x338 x2238) x1599 0) x1218) (<= 0 x27) (>= x1011 0) (= x1580 (x676 (x338 274184521717934524641157099916833587206))) (= (x710 (x338 x2057) (x1823 7) 0) x1599) (> 2293535753 x1953) (< x2057 x1886) (> x1580 0) (> 911411945 x1953) (<= 0 x1886) (<= 0 x1886) (<= x430 1461501637330902918203684832716283019655932542975) (= x2426 x2246) (<= x27 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1370 x1567) x27)) (and (=> (not x944) x1691) (=> (and (= 0 x2060) x944 (= x1982 x2225) (= x181 (x939 1461501637330902918203684832716283019655932542975 x1224)) (= x2225 (x115 x2397)) (>= x2225 0) (= x4 (x710 (x338 x1083) x412 0)) (= (x939 1461501637330902918203684832716283019655932542975 x2238) x1083) (= x412 (x710 (x338 x2057) (x1823 9) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2225) (= (x710 (x338 x181) x4 0) x2397)) x912))) x919))
(assert (x2045 x2091))
(assert (x2045 x513))
(assert (x2045 x2435))
(assert (= (ite (and x124 x1803) (x1472 x349) (ite (and (not x1803) x159 x124) (x1472 x349) (x1867 x349))) (x2185 x349)))
(assert (x2045 x1108))
(assert (x2045 x1690))
(assert (x2045 x1233))
(assert (x341 x1865))
(assert (x2045 x208))
(assert (x341 x598))
(assert (= x2112 (x1987 (x338 x2112))))
(assert (= (and (not x953) x1877) x1277))
(assert (x2045 x1015))
(assert (= (x338 1000000000000000000) (x1823 1000000000000000000)))
(assert (= 0 (x1669 192)))
(assert (= (or x506 (and x2217 (not x1920))) x200))
(assert (x341 x1212))
(assert (=> (<= x1147 10000) (= (x338 x1147) (x1823 x1147))))
(assert (x2045 x1850))
(assert (=> (<= x598 10000) (= (x338 x598) (x1823 x598))))
(assert (x341 274184521717934524641157099916833587214))
(assert (=> (>= 10000 x642) (= (x338 x642) (x1823 x642))))
(assert (= x1023 (or (and x1008 (not x447)) (and x1194 (not x67)) (and x1526 x765))))
(assert (=> (<= x699 10000) (= (x338 x699) (x1823 x699))))
(assert (x2045 x538))
(assert (= (x1815 192) (ite (and x96 x1013) (x1669 192) (x1028 192))))
(assert (x2045 x373))
(assert (x2045 x97))
(assert (x2045 x819))
(assert (= x824 (and (not x2074) x1049)))
(assert (x2045 x350))
(assert (x2045 x2128))
(assert (x2045 x413))
(assert (=> (>= 10000 x1495) (= (x1823 x1495) (x338 x1495))))
(assert (= x1096 (x1987 (x338 x1096))))
(assert (x2045 x2408))
(assert (=> (>= 10000 x12) (= (x1823 x12) (x338 x12))))
(assert (x2045 x2247))
(assert (x2045 x1945))
(assert (x156 x1249 x856))
(assert (= (and x2373 x1810) x1666))
(assert (x583 x2005 x1344))
(assert (x341 x858))
(assert (= (ite x1024 (ite (and x2062 x2034) (x880 x54) (x2387 x54)) (x2387 x54)) (x844 x54)))
(assert (= (x1750 x1481) 0))
(assert (= (=> (= x1110 0) x298) x102))
(assert (x2045 x377))
(assert (x341 x1959))
(assert (x2045 x779))
(assert (= (x1987 (x2186 x420 1)) (+ (x1987 x420) 1)))
(assert (=> (>= 10000 x803) (= (x338 x803) (x1823 x803))))
(assert (x2045 x1455))
(assert (= (=> (and (or (and (= x2018 1) (= x1185 (x710 (x338 x2426) x1057 0)) (>= x1551 0) (= x1700 (x939 1461501637330902918203684832716283019655932542975 x833)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1551) (= (x547 x1185) x1551) (= x1057 (x710 (x338 x1700) x601 0)) (= (x710 (x338 x1405) (x1823 9) 0) x601) (not x1505) (= x2138 x1551)) (and x1505 (= 0 x2018) (= 0 x2138))) (= x1505 (= 0 x1405))) x1921) x1644))
(assert (x341 x642))
(assert (=> (<= x1682 10000) (= (x1823 x1682) (x338 x1682))))
(assert (= (x338 87118632) (x1823 87118632)))
(assert (x2045 x1605))
(assert (x2045 x933))
(assert (x1346 x2238))
(assert (x2045 x1896))
(assert (= (and x1484 x245) x1156))
(assert (x2045 x157))
(assert (x2045 x1161))
(assert (x2045 x786))
(assert (x2045 x1075))
(assert (x2045 x1899))
(assert (x2045 x177))
(assert (= (x1987 (x338 x2151)) x2151))
(assert (x2045 x1326))
(assert (not x1881))
(assert (x2045 x748))
(assert (x2045 x1643))
(assert (x2045 x2331))
(assert (x2045 x2155))
(assert (x2045 x610))
(assert (x2045 x169))
(assert (= (=> (and (not (> 2690754053 x1957)) (= x6 (x1426 x2127)) (<= 0 x6) (< 0 x1708) (not (> 2293535753 x1957)) (>= 1461501637330902918203684832716283019655932542975 x1451) (= x842 (x710 (x338 x1724) (x1823 5) 0)) (= x1957 2798343961) (not (= x1957 2743102681)) (= x2127 (x710 (x338 x1451) x842 0)) (= x1708 (x676 (x338 274184521717934524641157099916833587206))) (not (= 2690754053 x1957)) (not (= x1957 2764855426)) (> 2960351575 x1957) (= x2380 x6) (<= x6 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x304 x1464) (= x363 x1682) (= (= x435 1) x153) x153 (= x180 x433) (= 1 x107) (= x2380 x435)) x1107)) x992))
(assert (= (or (and x883 x57) (and x2178 x1588)) x1127))
(assert (= x854 (x1987 (x338 x854))))
(assert (x2045 x2114))
(assert (= (x1823 274184521717934524641157099916833587218) (x338 274184521717934524641157099916833587218)))
(assert (= (x1823 759532456) (x338 759532456)))
(assert (x2045 x434))
(assert (x2045 x151))
(assert (=> (<= x696 10000) (= (x338 x696) (x1823 x696))))
(assert (x2045 x2140))
(assert (x341 x12))
(assert (x2045 x818))
(assert (= (x1987 (x338 x2057)) x2057))
(assert (x2045 x2348))
(assert (x2045 x494))
(assert (x2045 x1362))
(assert (= (x1987 (x338 x1495)) x1495))
(assert (= 911411945 (x1987 (x1823 911411945))))
(assert (x2045 x713))
(assert (x2045 x1029))
(assert (= x1619 (x1987 (x338 x1619))))
(assert (x2045 x1722))
(assert (= (or x1785 x1497) x917))
(assert (x2045 x1598))
(assert (= x1754 (x1987 (x338 x1754))))
(assert (x2045 x1902))
(assert (= (x1987 (x338 x413)) x413))
(assert (= (=> (and (= (x1939 (- x2057 1)) x1620) (= (> x1620 0) x447)) (and (=> x447 x2087) (=> (not x447) x837))) x1317))
(assert (= x1383 (=> (= x335 x351) x14)))
(assert (= (=> (and (= x1825 (< x831 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (>= x1770 0) x2241) (= (= 274184521717934524641157099916833587218 x1632) x1042) (= x1470 (x2294 (x338 x1632))) (= x1929 (< (x2294 (x338 x1632)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2241 x1825 (= x1368 x2198) (= x831 (x1962 (x338 x1632))) (= (x1962 (x338 274184521717934524641157099916833587206)) x678) x1929 (= x1770 (x1962 (x338 274184521717934524641157099916833587206)))) (and (=> (not x1042) x504) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1538) (not x559) (= x2324 x2198) (= (x939 1461501637330902918203684832716283019655932542975 x1249) x1792) (= x723 (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0)) (= (x710 (x338 x413) (x1823 1) 0) x343) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x391) true) (< x391 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x391)) x1250) (not x1250) (= (x710 (x338 x1792) (x1823 1) 0) x1912) (= 274184521717934524641157099916833587206 x1418) (not (< x1122 649617121)) (<= 0 x2307) (not x599) (= x221 x1249) (= (>= (+ x378 x1538) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x559) (= x1538 (x2148 x1912)) (= 2835717307 x1122) (= x378 x1039) (= x1409 (x676 (x338 274184521717934524641157099916833587218))) (< (+ x1538 x378) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1939 (- x2307 x926)) x2169) x1042 (= (< x2307 x926) x599) (>= x1538 0) (= (x1939 (- x2324 4)) x391) (not x1829) (= x926 x2359) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1575) (= 32 x2158) (not (= x1122 1889567281)) (not (= x1122 649617121)) (= (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0) x1502) (not (= x1122 826074471)) (> x1409 0) (= x2324 68) (= x1901 1) (= x378 x926) (= (> x378 x2307) x1829) (= x584 (+ x1039 x724)) (<= x2307 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x939 1461501637330902918203684832716283019655932542975 x1249) x413) (<= x1249 1461501637330902918203684832716283019655932542975) (not (> 4 x2324)) (= x724 x1538) (not (= 2514000705 x1122)) (= x275 274184521717934524641157099916833587206) (= x2307 (x2283 x723))) x1503))) x2156))
(assert (x2045 x1067))
(assert (= x1329 (and x738 x522)))
(assert (x2045 x563))
(assert (x2045 x2150))
(assert (x2045 x1940))
(assert (x2045 x1741))
(assert (= (or (and (not x2046) x2075) (and (not x1322) x1668)) x1966))
(assert (x2045 x1995))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x646) (= x681 (x939 1461501637330902918203684832716283019655932542975 x1090)) (= (x710 (x338 x1579) (x1823 7) 0) x72) (= (x1665 x1364) x646) (= x1150 (x939 1461501637330902918203684832716283019655932542975 x1695)) (>= x646 0) (= x2395 (= x646 0)) (= x2187 (x710 (x338 x681) x72 0)) (= x1364 (x710 (x338 x1150) x2187 0))) (and (=> x2395 x1514) (=> (and (not x2395) (= x1579 x1227)) x1066))) x2048))
(assert (x2045 x395))
(assert (x2045 x212))
(assert (x2045 x2176))
(assert (= x2149 (x1987 (x338 x2149))))
(assert (x156 x1695 x1022))
(assert (x2045 x1653))
(assert (x341 x1792))
(assert (= (x1987 (x338 x1562)) x1562))
(assert (x2045 x1263))
(assert (x2045 x292))
(assert (x2045 x1719))
(assert (x2045 x644))
(assert (= x1526 (and x447 x1008)))
(assert (= (x338 649617121) (x1823 649617121)))
(assert (x2045 x796))
(assert (x2045 x379))
(assert (x981 x1646 x2325))
(assert (x341 x1574))
(assert (x2045 x1682))
(assert (= x1116 x734))
(assert (x2045 x1399))
(assert (x2045 x2344))
(assert (x341 x2114))
(assert (= x1959 (x1987 (x338 x1959))))
(assert (= (x1987 (x338 x936)) x936))
(assert (=> (<= x2136 10000) (= (x338 x2136) (x1823 x2136))))
(assert (x2045 x1780))
(assert (x2045 x392))
(assert (x2045 x130))
(assert (= (x1987 (x1823 468353030)) 468353030))
(assert (x2045 x801))
(assert (x2045 x1350))
(assert (x2045 x1752))
(assert (x2045 x2028))
(assert (x2045 x73))
(assert (x2045 x1959))
(assert (x2045 x821))
(assert (x2045 x1102))
(assert (= (x338 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1823 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= x1540 (x1987 (x338 x1540))))
(assert (= x1700 (x1987 (x338 x1700))))
(assert (x2045 x1381))
(assert (x2045 x1063))
(assert (x2045 x1182))
(assert (= (or (and x851 x1845) (and x1583 x1926)) x715))
(assert (x2045 x1065))
(assert (x2045 x918))
(assert (x2045 x1467))
(assert (x2045 x1613))
(assert (x2045 x2061))
(assert (x2045 x189))
(assert (= (x844 x374) (ite x1024 (ite (and x2062 x2034) (x880 x374) (x2387 x374)) (x2387 x374))))
(assert (= (x1823 468353030) (x338 468353030)))
(assert (x2045 x955))
(assert (x2045 x840))
(assert (=> (<= x111 10000) (= (x338 x111) (x1823 x111))))
(assert (x2045 x1700))
(assert (= x504 (=> (= x953 (= 274184521717934524641157099916833587214 x1632)) (and (=> (and (= (x244 x1295) x1940) (= x1295 (x710 (x338 x319) (x1823 1) 0)) (= (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0) x862) (= (or (and (< x432 64) (= true (<= x432 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x432)) x924) (= (x939 1461501637330902918203684832716283019655932542975 x1706) x1959) (= x76 x1940) (= (> x1558 x1036) x1731) (< 0 x954) (= (x939 1461501637330902918203684832716283019655932542975 x1706) x319) (= x930 2835717307) (= x2221 (>= (+ x1940 x1679) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x2221) (= (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0) x2288) (= (x676 (x338 274184521717934524641157099916833587214)) x954) (= x212 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 274184521717934524641157099916833587206 x885) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1940) (not (> 4 x1245)) (= x1679 x2003) (= x1679 x1558) (not x1731) (= x221 x1706) (= (x1492 x2288) x1036) (>= 1461501637330902918203684832716283019655932542975 x1706) (= x1245 x2198) (not x924) (>= x1940 0) (not (= 1889567281 x930)) (= x1901 1) (<= 0 x1036) x953 (= x811 274184521717934524641157099916833587206) (= x2158 32) (not (= 649617121 x930)) (= x1558 x2359) (= (< x1036 x1679) x223) (= (x1939 (- x1245 4)) x432) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1036) (not (= 826074471 x930)) (not (> 649617121 x930)) (= x1245 68) (not (= 2514000705 x930)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1679 x1940)) (= (+ x2003 x76) x177) (not x223) (= x756 (x710 (x338 x1959) (x1823 1) 0)) (= (x1939 (- x1036 x1558)) x1378)) x1503) (=> (not x953) x1058)))))
(assert (= (=> (and (= x1447 (x361 x671)) (or (and x1071 (= x256 (x710 (x338 x1579) (x1823 6) 0)) (= x364 (x939 1461501637330902918203684832716283019655932542975 x1090)) (= x652 (x710 (x338 x364) x256 0))) (and (= x555 (x710 (x338 x1075) x2260 0)) (= (x710 (x338 x1579) (x1823 6) 0) x2260) (< (* x1343 x1351) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x630 (x939 1461501637330902918203684832716283019655932542975 x1090)) (not x1071) (= (x710 (x338 x630) x1788 0) x2311) (<= 0 x1247) (<= x1247 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x2398 x1247) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1247 (x1426 x2311)) (= x346 (* x1351 x1343)) (= x1247 x2000) (= x1788 (x710 (x338 x1579) (x1823 5) 0)) (= x1070 x2398) (= x1075 (x939 1461501637330902918203684832716283019655932542975 x1090)) (= x2398 x346) (= (+ x2000 x1070) x1005))) (= x1639 (x303 x1372)) (<= x2421 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (not x105) (= x1343 0)) (and x105 (= (= 0 x1639) x526) (or (and (= x1343 x1465) x526 (= x888 (x1568 x1167)) (not (< x697 x888)) (= (x1939 (- x697 x888)) x1465)) (and (= x135 (ite (> 604800 x822) x822 604800)) (not (> x1639 x697)) (= x1338 604800) (= x135 x1343) (not x526) (= (x1939 (- x697 x1639)) x822))) (= x1286 (< x1330 x2196)) (= (x2110 x1642) x1330) (or (and (= (x2110 x1642) x1182) x1286 (= x1182 x697)) (and (= x2196 x697) (not x1286))))) (= (x2186 x420 1) x671) (<= x1447 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1041 (x939 1461501637330902918203684832716283019655932542975 x1090)) (= (x2110 x1642) x398) (= (= 0 x1343) x1071) (= x1637 (x710 (x338 x1579) (x1823 6) 0)) (<= 0 x1639) (= (x915 (+ 32 x1167)) x1642) (= (x2349 x420) x2421) (= x420 (x710 (x338 x1579) (x1823 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1639) (>= x1447 0) (= (> x398 x1639) x105) (= (x710 (x338 x1041) x1637 0) x1372) (<= 0 x2421) (= (= 0 x264) x271) (or (and (= (x939 1461501637330902918203684832716283019655932542975 x1090) x1202) (= x476 (x710 (x338 x1579) (x1823 10) 0)) (= x1789 (x710 (x338 x1202) x476 0)) (not x271)) x271) (= (x915 (+ x1167 64)) x1734)) x1504) x204))
(assert (= x158 (=> (and (<= x1952 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x2061 0) (= x1952 x1243) (>= x1952 0) (= 2258409472 x384) (= x300 (x710 (x338 x2348) x470 0)) (not (= 1968616202 x384)) (not (= x384 2061678023)) (<= x2348 1461501637330902918203684832716283019655932542975) (not (= x384 2211524764)) (not (< x384 911411945)) (not (= 1986467848 x384)) (= (x303 x300) x1952) (= x470 (x710 (x338 x377) (x1823 6) 0)) (not (> 1968616202 x384)) (< x384 2293535753) (= x2061 (x676 (x338 274184521717934524641157099916833587206)))) (=> (and (= x1556 x1243) (= x304 x1065) (= x803 x180) (= 0 x2220) (= x16 (> x1556 0)) (= x363 x854) x16) x1729))))
(assert (x2045 x777))
(assert (x2045 x2364))
(assert (= x1790 (x1987 (x338 x1790))))
(assert (x2045 x655))
(assert (x2045 x1217))
(assert (= x438 (=> (and (= (x939 1461501637330902918203684832716283019655932542975 x2238) x357) (>= x607 0) (= (x710 (x338 x2057) (x1823 6) 0) x682) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1886) (= x607 (x694 x1050)) (>= x1886 0) (= x1858 (= 0 x607)) (<= x607 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> x2057 x1886)) (= (x710 (x338 x357) x682 0) x1050)) (and (=> (and (not x1858) (= (x710 (x338 x935) x969 0) x549) (= (x1736 x549) x1979) (= (x939 1461501637330902918203684832716283019655932542975 x2238) x935) (<= 0 x1979) (= x486 x1979) (= 0 x2015) (= (x710 (x338 x2057) (x1823 10) 0) x969) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1979)) x1335) (=> x1858 x417)))))
(assert (x1346 x2021))
(assert (x2045 x2181))
(assert (= x837 (=> (= 0 x2070) x1561)))
(assert (= x39 (and x1851 x1645)))
(assert (=> (>= 10000 x318) (= (x338 x318) (x1823 x318))))
(assert (x2045 x1001))
(assert (x2045 x1937))
(assert (x2045 x871))
(assert (x2045 x921))
(assert (= (x1987 (x338 x351)) x351))
(assert (x2045 x640))
(assert (x2045 x1590))
(assert (x2045 x2258))
(assert (x2045 x2434))
(assert (x1346 x35))
(assert (= x1012 (x1987 (x338 x1012))))
(assert (= x1336 (=> (= x1570 x2279) x2270)))
(assert (x2045 x611))
(assert (= (x1987 (x338 x803)) x803))
(assert (x2045 x1611))
(assert (x341 x413))
(assert (= (x1987 (x338 x1655)) x1655))
(assert (= (x2278 x1771) (ite (and (not x1206) x1857) (x1636 x1771) (x2124 x1771))))
(assert (=> (<= x1562 10000) (= (x338 x1562) (x1823 x1562))))
(assert (=> (<= x1012 10000) (= (x1823 x1012) (x338 x1012))))
(assert (x2045 x804))
(assert (x2045 x1176))
(assert (x341 x1720))
(assert (x2045 x1146))
(assert (= x630 (x1987 (x338 x630))))
(assert (x2045 x574))
(assert (x2045 x916))
(assert (x2045 x1247))
(assert (x341 x419))
(assert (=> (<= x1320 10000) (= (x1823 x1320) (x338 x1320))))
(assert (= (or x674 (and x922 x1190)) x615))
(assert (x2045 x375))
(assert (= 0 (x1763 x1806)))
(assert (x2045 x1178))
(assert (= (x1007 x1331) (ite (and x1684 x2078) (x1426 x1331) (x1549 x1331))))
(assert (x2045 x926))
(assert (x2045 x1211))
(assert (= x598 (x1987 (x338 x598))))
(assert (x2045 x1558))
(assert (=> (>= 10000 x661) (= (x338 x661) (x1823 x661))))
(assert (x2045 x1118))
(assert (=> (<= x2115 10000) (= (x1823 x2115) (x338 x2115))))
(assert (= (x1987 (x338 x357)) x357))
(assert (x2045 x2232))
(assert (x2045 x304))
(assert (x2045 x1565))
(assert (= (x338 2061678023) (x1823 2061678023)))
(assert (x2045 x688))
(assert (x2045 x1137))
(assert (=> (>= 10000 x1540) (= (x338 x1540) (x1823 x1540))))
(assert (x2045 x1831))
(assert (= x597 (x1987 (x338 x597))))
(assert (= (=> (= x1175 x1405) x1644) x2073))
(assert (x2045 x1292))
(assert (= 2798343961 (x1987 (x1823 2798343961))))
(assert (x341 x1083))
(assert (x341 x1207))
(assert (x2045 x763))
(assert (=> (<= x2172 10000) (= (x1823 x2172) (x338 x2172))))
(assert (= x9 (and x1623 x2049)))
(assert (= (x1987 (x1823 2514000705)) 2514000705))
(assert (=> (>= 10000 x935) (= (x1823 x935) (x338 x935))))
(assert (x341 x1653))
(assert (x2045 x357))
(assert (x341 x1115))
(assert (x2045 x11))
(assert (x2045 x433))
(assert (x2045 x562))
(assert (x341 x613))
(assert (= x15 (x1987 (x338 x15))))
(assert (x2045 x324))
(assert (=> (<= x1596 10000) (= (x1823 x1596) (x338 x1596))))
(assert (=> (>= 10000 x624) (= (x338 x624) (x1823 x624))))
(assert (x2045 x1405))
(assert (=> (>= 10000 x916) (= (x1823 x916) (x338 x916))))
(assert (x341 x2378))
(assert (x2045 x227))
(assert (= x261 (x1987 (x338 x261))))
(assert (x341 x15))
(assert (x2045 x2269))
(assert (= (x1804 (- (+ 32 x830) 164)) (x2367 (- (+ 32 x830) 164))))
(assert (=> (>= 10000 x1075) (= (x338 x1075) (x1823 x1075))))
(assert (x2045 x900))
(assert (= x96 x399))
(assert (= (x1987 (x338 x1075)) x1075))
(assert (= (x1987 (x338 x1259)) x1259))
(assert (x2045 x2112))
(assert (x341 x2184))
(assert (x2045 x1771))
(assert (= (x1987 (x1823 759532456)) 759532456))
(assert (= x1576 (=> (= x2149 0) x2303)))
(assert (x2045 x858))
(assert (x2045 x2282))
(assert (x2045 x2152))
(assert (=> (>= 10000 x140) (= (x1823 x140) (x338 x140))))
(assert (x2045 x1004))
(assert (x583 x2343 x239))
(assert (x2045 x672))
(assert (x2045 x1557))
(assert (x1346 x1037))
(assert (x341 x1113))
(assert (= (x1804 32) (x2367 32)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1987 (x1823 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x2045 x1816))
(assert (= x43 (x1987 (x338 x43))))
(assert (x341 x611))
(assert (=> (>= 10000 x1438) (= (x1823 x1438) (x338 x1438))))
(assert (x2045 x2207))
(assert (x341 x164))
(assert (x2045 x423))
(assert (x2045 x1083))
(assert (x1346 x1706))
(assert (x2045 x620))
(assert (= (x1763 x1444) 0))
(assert (= (x1987 (x338 x1942)) x1942))
(assert (= (ite x1024 (ite (and x2034 x2062) (x2063 x354) (x708 x354)) (x2063 x354)) (x781 x354)))
(assert (=> (>= 10000 x2050) (= (x1823 x2050) (x338 x2050))))
(assert (x2045 x1697))
(assert (x2045 x502))
(assert (x341 x17))
(assert (x2045 x1675))
(assert (=> (<= x1212 10000) (= (x338 x1212) (x1823 x1212))))
(assert (x2045 x2416))
(assert (x2045 x2022))
(assert (= (=> (and (= x1473 (= 0 x1795)) (= x464 (x23 x1612)) (= (x288 x1352) x1496) (= x43 (x939 1461501637330902918203684832716283019655932542975 x790)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1458) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1496) (= (x1939 (- x464 x1458)) x1795) (= x513 (x939 1461501637330902918203684832716283019655932542975 x1090)) (= x735 (x710 (x338 x43) x1427 0)) (= x1352 (x710 (x338 x2112) x728 0)) (>= x464 0) (>= x1458 0) (= x69 (x710 (x338 x1579) (x1823 3) 0)) (= (x479 x735) x1458) (= (x710 (x338 x140) x29 0) x1427) (= x2115 (x939 1461501637330902918203684832716283019655932542975 x1695)) (= x1001 (x939 1461501637330902918203684832716283019655932542975 x1090)) (>= x1496 0) (= x2112 (x939 1461501637330902918203684832716283019655932542975 x1090)) (not (< x464 x1458)) (= (x710 (x338 x1579) (x1823 5) 0) x728) (= (x710 (x338 x1579) (x1823 4) 0) x1992) (= (x939 1461501637330902918203684832716283019655932542975 x1695) x140) (= (x710 (x338 x513) x1992 0) x29) (<= x464 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1612 (x710 (x338 x2115) x1323 0)) (= x1323 (x710 (x338 x1001) x69 0))) (and (=> (and (<= x1467 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1790 (x939 1461501637330902918203684832716283019655932542975 x1090)) (= (x915 (+ x1734 68)) x1896) (= x371 (x915 (+ 100 x1167))) (= x409 (x915 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x690))) (not x1473) x155 (or (not x1319) (and (= (x915 (+ x987 x1046)) x1523) x1319)) (= x1493 (x1939 (- x2364 32))) (= x1621 (x915 (+ 100 x1734))) (< (* x1467 x1974) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x710 (x338 x1579) (x1823 11) 0) x541) (= x998 (x479 x358)) (< 0 x1496) (= x15 (x939 1461501637330902918203684832716283019655932542975 x1695)) (= x567 (x939 1461501637330902918203684832716283019655932542975 x1090)) (= x1839 (+ x1930 x1793)) (= x2016 (> x987 0)) (= x2365 (x676 (x338 x137))) (= x358 (x710 (x338 x1942) x2323 0)) (= (< 0 x2365) x155) (= x998 x1930) (= x1875 0) (= (x710 (x338 x1790) x774 0) x707) (= x1046 (x915 (+ 128 x371))) (= (x939 1461501637330902918203684832716283019655932542975 x790) x1942) (= x1162 (x710 (x338 x567) x541 0)) (= x1240 (ite (> x1795 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= (x939 1461501637330902918203684832716283019655932542975 x790) x137) (= x897 (* x1974 x1467)) (= x2277 (x939 1461501637330902918203684832716283019655932542975 x790)) (<= 0 x1467) (= (x710 (x338 x15) x707 0) x2323) (= x2364 (x1939 (- x1621 x1734))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x998 x1795)) (= x987 (x1491 x1734)) (= x1139 (x990 x1084)) (= x1319 (< x987 x2346)) (= (x939 1461501637330902918203684832716283019655932542975 x1695) x1618) (= 0 x1933) (= x1795 x1793) (= x1875 (x939 x1104 x1240)) (= x1084 (x915 (+ 96 x1167))) (= (div x1054 x1496) x1974) (= x268 (div x897 1000000000000000000)) (<= 0 x998) (= (x939 26959946667150639794667015087019630673637144422540572481103610249215 x1139) x690) (= 1 x1104) (= x774 (x710 (x338 x1579) (x1823 4) 0)) (= x1054 (mod (* 1000000000000000000 x1795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and (= x2346 0) (not x2016)) (and (= x1453 (< 32 x987)) (or (and x1453 (= (x915 (+ 96 x1621)) x2272) (= (< 64 x987) x663) (= x1350 (x915 (+ x1734 64))) (or (and (not x663) (= 64 x2346)) (and (= (< 96 x987) x1448) (= x1119 (x915 (+ 96 x1734))) (= x887 (x454 x1119)) x663 (or (and (= 96 x2346) (not x1448)) (and (= (x915 (+ 160 x1621)) x766) (= x1033 (x454 x1690)) x1448 (= (x915 (+ x1734 128)) x1690) (= (< 128 x987) x2328) (not x2328) (= x2346 128))) (= (x915 (+ x1621 128)) x2299))) (= x1981 (x454 x1350))) (and (= x2346 32) (not x1453))) x2016 (= x1084 x1283) (= (x454 x1283) x1909) (= x1144 x1046))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x998) (= x1730 (x710 (x338 x2277) x1162 0)) (= x1467 (x2263 x1730))) x295) (=> x1473 x2330))) x1504))
(assert (x2045 x17))
(assert (x2045 x737))
(assert (x341 x151))
(assert (x2045 x1553))
(assert (x2045 x2337))
(assert (x2045 x797))
(assert (x2045 x450))
(assert (x2045 x1304))
(assert (x341 x1540))
(assert (x2045 x1593))
(assert (x2045 x1236))
(assert (x2045 x1452))
(assert (=> (>= 10000 x1065) (= (x1823 x1065) (x338 x1065))))
(assert (= x1903 (=> (= (> x1596 x654) x2291) (and (=> (not x2291) x806) (=> (and x2291 (= x701 x421)) x2301)))))
(assert (x2045 x314))
(assert (x2045 x2205))
(assert (= (=> (= x53 x495) x1145) x1006))
(assert (x341 x368))
(assert (x2045 x762))
(assert (x2045 x1806))
(assert (x2045 x1961))
(assert (x2045 x1916))
(assert (= (or (and x1417 (not x1858)) x1947) x1535))
(assert (x2045 x215))
(assert (= 1968616202 (x1987 (x1823 1968616202))))
(assert (x2045 x1342))
(assert (= x1856 (=> (and (= x1597 468353030) (< 0 x979) (>= 1461501637330902918203684832716283019655932542975 x570) (< x1597 2293535753) (< x1597 911411945) (= x1926 (= 274184521717934524641157099916833587218 x2432)) (not (> 468353030 x1597)) (>= 1461501637330902918203684832716283019655932542975 x2432) (= 128 x687) (= (x676 (x338 274184521717934524641157099916833587206)) x979)) (and (=> (and (= (x710 (x338 x570) (x1823 1) 0) x771) (not (= x216 649617121)) (not x2218) (= (x1939 (- x1367 4)) x2312) (not (> 649617121 x216)) (= x1367 36) (= x216 1889567281) (= (x1358 x771) x548) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x37) (= x1367 36) (> x1282 0) (= 1 x593) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x548) (not (< x1367 4)) x1926 (<= x934 1461501637330902918203684832716283019655932542975) (>= x548 0) (not (= x216 826074471)) (= x570 x934) (= x1282 (x676 (x338 274184521717934524641157099916833587218))) (= x2218 (or (and (< x2312 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2312))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2312))) (= x18 32)) x1095) (=> (not x1926) x1454)))))
(assert (x2045 x352))
(assert (x2045 x2026))
(assert (x341 x1655))
(assert (= 2690754053 (x1987 (x1823 2690754053))))
(assert (= (x288 x1410) (ite (and x906 (not x1071)) (x33 x1410) (x1426 x1410))))
(assert (=> (>= 10000 x2426) (= (x1823 x2426) (x338 x2426))))
(assert (x2045 x1463))
(assert (x2045 x2309))
(assert (x2045 x503))
(assert (= x1437 x715))
(assert (x2045 x683))
(assert (x2045 x2189))
(assert (= x626 (x1987 (x338 x626))))
(assert (x2045 x316))
(assert (x341 x2108))
(assert (= x523 (x1987 (x338 x523))))
(assert (= (not (and (= x141 x314) (= x737 x1063) (= x1063 x1873) (= (= x314 x1873) x1768))) x2143))
(assert (x341 x2207))
(assert (= (x288 x84) (ite (and (not x1071) x906) (x33 x84) (x1426 x84))))
(assert (x2045 x2173))
(assert (x341 x1202))
(assert (= x411 (x1987 (x338 x411))))
(assert (= (ite x1024 (ite (and x2034 x2062) (x2063 x2252) (x708 x2252)) (x2063 x2252)) (x781 x2252)))
(assert (x341 x2409))
(assert (= x496 true))
(assert (x2045 x27))
(assert (x156 x833 x41))
(assert (= (x1987 (x338 x2136)) x2136))
(assert (= (and x2053 (not x1473)) x2062))
(assert (x2045 x1132))
(assert (x2045 x2151))
(assert (x2045 x252))
(assert (x2045 x1036))
(assert (x2045 x1438))
(assert (x2045 x488))
(assert (x2045 x1212))
(assert (= (and (not x1588) x2178) x57))
(assert (= 274184521717934524641157099916833587206 (x1987 (x338 274184521717934524641157099916833587206))))
(assert (x2045 x855))
(assert (=> (>= 10000 x804) (= (x1823 x804) (x338 x804))))
(assert (x341 x1466))
(assert (= x1738 (=> (and (= x2432 x1817) (= x570 x304)) x1856)))
(assert (x2045 x1202))
(assert (x2045 x297))
(assert (=> (<= x411 10000) (= (x1823 x411) (x338 x411))))
(assert (= (x1987 (x338 x642)) x642))
(assert (= x2375 (and x1920 x2217)))
(assert (x2045 x1621))
(assert (x2045 x331))
(assert (x2045 x1139))
(assert (x2045 x2281))
(assert (=> (<= x261 10000) (= (x338 x261) (x1823 x261))))
(assert (= (x1823 911411945) (x338 911411945)))
(assert (x341 x319))
(assert (x2045 x1483))
(assert (x2045 x1151))
(assert (= (x1987 (x338 x567)) x567))
(assert (x2045 x1325))
(assert (x2045 x1296))
(assert (=> (>= 10000 x895) (= (x338 x895) (x1823 x895))))
(assert (=> (>= 10000 x368) (= (x1823 x368) (x338 x368))))
(assert (x2045 x794))
(assert (x2045 x1817))
(assert (x341 x2136))
(assert (x2045 x485))
(assert (= x1058 true))
(assert (=> (>= 10000 x297) (= (x1823 x297) (x338 x297))))
(assert (x2045 x1401))
(assert (x2045 x1499))
(assert (= x132 (and x851 (not x1845))))
(assert (= 2743102681 (x1987 (x1823 2743102681))))
(assert (=> (>= 10000 x1863) (= (x1823 x1863) (x338 x1863))))
(assert (= (x1987 (x1823 142201243)) 142201243))
(assert (x2045 x832))
(assert (= (and x389 x817) x1008))
(assert (x2045 x2115))
(assert (= (x1987 (x338 x2139)) x2139))
(assert (x2045 x1716))
(assert (x2045 x1957))
(assert (x2045 x136))
(assert (= (x2367 (- x830 164)) (x1804 (- x830 164))))
(assert (= (or x1024 (and x1473 x2053)) x1313))
(assert (x2045 x932))
(assert (x2045 x1184))
(assert (= (x1987 (x338 x1089)) x1089))
(assert (=> (<= x523 10000) (= (x1823 x523) (x338 x523))))
(assert (x2045 x143))
(assert (x2045 x1338))
(assert (x2045 x895))
(assert (x2045 x140))
(assert (x2045 x2171))
(assert (x2045 x2300))
(assert (x2045 x1822))
(assert (x2045 x1451))
(assert (x341 x2279))
(assert (= x453 (x1987 (x338 x453))))
(assert (= (ite (and x225 x2078) (x1815 192) (ite (and x1457 (not x225) x2078 (not x276)) (x1513 192) (ite (and (not x225) x2078 (not x1457)) (x1815 192) (x1844 192)))) (x25 192)))
(assert (x2045 x2237))
(assert (= (x1750 x2322) 0))
(assert (= (x1987 (x338 x916)) x916))
(assert (x2045 x1515))
(assert (= x747 (and x1424 x517)))
(assert (x2045 x173))
(assert (x2045 x1708))
(assert (x2045 x44))
(assert (=> (<= x556 10000) (= (x1823 x556) (x338 x556))))
(assert (=> (>= 10000 x251) (= (x1823 x251) (x338 x251))))
(assert (x2045 x180))
(assert (x210 x855 x274 x2066 x1506))
(assert (= (and x2265 x9) x2075))
(assert (x1346 x1249))
(assert (= (=> (and (= x1818 (x939 1461501637330902918203684832716283019655932542975 x833)) (= (= x126 0) x2046) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x126) (= (x710 (x338 x1818) x2141 0) x2393) (<= 0 x126) (= (x710 (x338 x1596) (x1823 6) 0) x2141) (= (x303 x2393) x126)) (and (=> (and (not x2046) (= x1570 x1596)) x1336) (=> x2046 x2192))) x393))
(assert (x341 x1150))
(assert (=> (<= x900 10000) (= (x1823 x900) (x338 x900))))
(assert (= (=> (and (>= x1886 0) (= x2408 (x1564 x241)) (= (x710 (x338 x2426) x1128 0) x241) (= x1190 (< 0 x2408)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2408) (= x1128 (x710 (x338 x626) x1905 0)) (= (x939 1461501637330902918203684832716283019655932542975 x833) x626) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1886) (= (x710 (x338 x699) (x1823 7) 0) x1905) (<= 0 x2408) (not (> x699 x1886))) (and (=> (and (= x1991 (x547 x2042)) (= x1991 x2138) (= (x710 (x338 x2426) x68 0) x2042) (= (x710 (x338 x624) x1840 0) x68) (= (x710 (x338 x699) (x1823 9) 0) x1840) (= x624 (x939 1461501637330902918203684832716283019655932542975 x833)) (>= x1991 0) x1190 (<= x1991 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2018 0)) x1921) (=> (not x1190) x616))) x2318))
(assert (x341 x2366))
(assert (=> (<= x377 10000) (= (x1823 x377) (x338 x377))))
(assert (x2045 x1418))
(assert (x2045 x2327))
(assert (x2045 x1985))
(assert (x2045 x2018))
(assert (= (x1987 (x338 x2121)) x2121))
(assert (x2045 x1051))
(assert (= (=> (= (> x699 0) x1430) (and (=> (not x1430) x850) (=> x1430 x1836))) x616))
(assert (x2045 x1470))
(assert (x341 x1483))
(assert (x2045 x1754))
(assert (x2045 x2423))
(assert (=> (>= 10000 x617) (= (x338 x617) (x1823 x617))))
(assert (=> (>= 10000 x1792) (= (x1823 x1792) (x338 x1792))))
(assert (x2045 x1115))
(assert (x2045 x657))
(assert (x2045 x103))
(assert (x2045 x518))
(assert (= 0 (x572 x1283)))
(assert (x2045 x882))
(assert (= (x1823 2690754053) (x338 2690754053)))
(assert (x341 x97))
(assert (x2045 x2005))
(assert (x2045 x1121))
(assert (x2045 x1839))
(assert (=> (>= 10000 x1441) (= (x338 x1441) (x1823 x1441))))
(assert (=> (>= 10000 x1451) (= (x338 x1451) (x1823 x1451))))
(assert (x2045 x632))
(assert (=> (<= x1818 10000) (= (x338 x1818) (x1823 x1818))))
(assert (= x935 (x1987 (x338 x935))))
(assert (x2045 x523))
(assert (= x1617 x2088))
(assert (= x922 (and (not x896) x1170)))
(assert (x2045 x1550))
(assert (x156 x1706 x1919))
(assert (= (x1750 x534) 0))
(assert (x2045 x484))
(assert (= (ite (and x329 (not x743) (not x1835)) (x2268 x1612) (x1472 x1612)) (x23 x1612)))
(assert (x341 x1004))
(assert (= (and (not x1640) x824) x2211))
(assert (x2045 x963))
(assert (x2045 x704))
(assert (= (x1987 (x338 x1792)) x1792))
(assert (= 0 (x1750 x473)))
(assert (x2045 x1726))
(assert (= (x1823 1461501637330902918203684832716283019655932542976) (x338 1461501637330902918203684832716283019655932542976)))
(assert (x2045 x499))
(assert (= (x1987 (x338 x751)) x751))
(assert (x341 x1562))
(assert (x2045 x1537))
(assert (= x317 (=> (and (= (< 0 x297) x860) (= (x1939 (- x1579 1)) x297)) (and (=> x860 x2008) (=> (not x860) x428)))))
(assert (x341 x531))
(assert (= (x1987 (x338 x1723)) x1723))
(assert (= (x1987 (x338 x1045)) x1045))
(assert (x2045 x1842))
(assert (=> (>= 10000 x539) (= (x1823 x539) (x338 x539))))
(assert (x2045 x1060))
(assert (x2045 x905))
(assert (x341 x1320))
(assert (= (x1987 (x2186 x1833 1)) (+ 1 (x1987 x1833))))
(assert (x2045 x99))
(assert (x2045 x935))
(assert (=> (<= x1942 10000) (= (x338 x1942) (x1823 x1942))))
(assert (= (and x57 (not x883)) x892))
(assert (x2045 x310))
(assert (= (x1823 635128645) (x338 635128645)))
(assert (x2045 x1174))
(assert (x2045 x2193))
(assert (= (x2124 x1587) 0))
(assert (x2045 x2158))
(assert (x2045 x556))
(assert (x2045 x1591))
(assert (x2045 x870))
(assert (x156 x790 x2329))
(assert (x2045 x979))
(assert (x2045 x1714))
(assert (=> (<= x1113 10000) (= (x338 x1113) (x1823 x1113))))
(assert (x2045 x686))
(assert (x2045 x1183))
(assert (= (=> (and (= x522 (< 0 x696)) (= x696 (x1939 (- x1596 1)))) (and (=> x522 x1477) (=> (not x522) x1576))) x270))
(assert (x2045 x2236))
(assert (x156 x352 x1744))
(assert (= x805 (x1987 (x338 x805))))
(assert (x2045 x1227))
(assert (= (=> (and (= (= 0 x2279) x150) (or (and (= (x939 1461501637330902918203684832716283019655932542975 x833) x805) (not x150) (= (x1500 x116) x89) (= x950 (x710 (x338 x2279) (x1823 10) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x89) (<= 0 x89) (or (and (= 0 x2331) (= 0 x1305) x1652) (and (not x1652) (= x2331 x89) (= x1305 1))) (= x1652 (= 0 x89)) (= x116 (x710 (x338 x805) x950 0))) (and x150 (= 0 x1305) (= 0 x2331)))) x2262) x2270))
(assert (x341 x99))
(assert (x2045 x1570))
(assert (x1346 x790))
(assert (x341 x1176))
(assert (x2045 x1569))
(assert (= (and x747 x860) x478))
(assert (= (=> (and (= x1100 (= 0 x2388)) (or (and (= x1435 (x710 (x338 x1207) x960 0)) (= (x710 (x338 x1579) (x1823 9) 0) x960) (= x1259 (x939 1461501637330902918203684832716283019655932542975 x1695)) (not x1100) (= x1207 (x939 1461501637330902918203684832716283019655932542975 x1090)) (= x1509 (x710 (x338 x1259) x1435 0))) x1100) (= (= x706 0) x743) (or (and (= (x710 (x338 x617) x2174 0) x1164) (= x2409 (x939 1461501637330902918203684832716283019655932542975 x1090)) (= (x710 (x338 x1579) (x1823 7) 0) x19) x743 (= 128 x1167) (= (x710 (x338 x2409) x19 0) x2174) (= x617 (x939 1461501637330902918203684832716283019655932542975 x1695))) (and (= x1614 (x710 (x338 x1096) x2229 0)) (= x1835 (= x2026 0)) (<= x262 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x743) (= (x939 1461501637330902918203684832716283019655932542975 x1695) x1540) (= x554 (x710 (x338 x1540) x1614 0)) (= (x361 x1657) x214) (= x1833 (x710 (x338 x1579) (x1823 1) 0)) (= (x2349 x1833) x262) (>= x2098 0) (<= x214 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1665 x554) x2098) (<= 0 x214) (or (and (= x1198 (x710 (x338 x1579) (x1823 7) 0)) (= (x710 (x338 x453) x1891 0) x2274) (= x644 (+ x1260 x717)) (= (x710 (x338 x1438) x894 0) x1594) (= x164 (x939 1461501637330902918203684832716283019655932542975 x1090)) (= x1152 (x1472 x1762)) (<= x1152 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1048 (* x706 x2026)) (= 192 x1167) (= x1891 (x710 (x338 x164) x1198 0)) (= x894 (x710 (x338 x1579) (x1823 3) 0)) (= (x939 1461501637330902918203684832716283019655932542975 x1695) x2275) (< (* x2026 x706) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (+ x1528 x1152) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x939 1461501637330902918203684832716283019655932542975 x1695) x453) (= x1528 x717) (>= x1152 0) (= x1528 x1048) (= x1438 (x939 1461501637330902918203684832716283019655932542975 x1090)) (not x1835) (= x1762 (x710 (x338 x2275) x1594 0)) (= x1260 x1152)) (and (= (x939 1461501637330902918203684832716283019655932542975 x1090) x296) (= x1167 192) (= (x939 1461501637330902918203684832716283019655932542975 x1695) x936) (= (x710 (x338 x936) x2332 0) x1879) (= x2332 (x710 (x338 x296) x174 0)) x1835 (= (x710 (x338 x1579) (x1823 7) 0) x174))) (= x1657 (x2186 x1833 1)) (= x2079 (x2154 160)) (or (and (= (x2154 160) x816) (or (and (= x143 (x2154 160)) (= x143 x672) x673) (and (= x2196 x672) (not x673))) (= x26 (= x2098 0)) (or (and (not (< x672 x1016)) (= x720 x2026) (= (x1939 (- x672 x1016)) x720) (= (x2407 128) x1016) x26) (and (= x2105 (ite (< x1837 604800) x1837 604800)) (= x1837 (x1939 (- x672 x2098))) (not (< x672 x2098)) (not x26) (= x1187 604800) (= x2105 x2026))) x625 (= x673 (> x2196 x816))) (and (= x2026 0) (not x625))) (= (x939 1461501637330902918203684832716283019655932542975 x1090) x1096) (<= 0 x262) (= (< x2098 x2079) x625) (= x2229 (x710 (x338 x1579) (x1823 7) 0)) (<= x2098 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) x1751) x1379))
(assert (= x433 (x1987 (x338 x433))))
(assert (x2045 x2136))
(assert (= (and x2418 (not x1701)) x2178))
(assert (= (=> (= x896 (> x699 x654)) (and (=> (not x896) x2318) (=> (and x896 (= x421 x1662)) x2301))) x667))
(assert (x2045 x1490))
(assert (x341 x570))
(assert (=> (<= x630 10000) (= (x338 x630) (x1823 x630))))
(assert (x2045 x1942))
(assert (x2045 x2431))
(assert (= x906 x2053))
(assert (x2045 x1933))
(assert (x2045 x2405))
(assert (x2045 x2382))
(assert (x2045 x2119))
(assert (=> (<= x2238 10000) (= (x1823 x2238) (x338 x2238))))
(assert (x341 x191))
(assert (= x419 (x1987 (x338 x419))))
(assert (x2045 x1639))
(assert (=> (<= x611 10000) (= (x1823 x611) (x338 x611))))
(assert (x2045 x768))
(assert (=> (<= x1695 10000) (= (x1823 x1695) (x338 x1695))))
(assert (x2045 x1753))
(assert (= (x1987 (x1823 18446744073709551615)) 18446744073709551615))
(assert (x2045 x1620))
(assert (= (x1987 (x338 x99)) x99))
(assert (x2045 x421))
(assert (x2045 x1064))
(assert (x2045 x2098))
(assert (x2045 x2334))
(assert (x341 x43))
(assert (x2045 x1196))
(assert (x341 x2151))
(assert (x2045 x239))
(assert (= (=> (and (= x1803 (= 0 x1349)) (or x2411 (and (not x2411) (= x869 (x710 (x338 x1596) (x1823 9) 0)) (= (x939 1461501637330902918203684832716283019655932542975 x833) x597) (= x2401 (x710 (x338 x2426) x558 0)) (= x558 (x710 (x338 x597) x869 0)))) (or (and (= x2140 x701) (= x1925 (x710 (x338 x1596) (x1823 7) 0)) (= (x710 (x338 x2426) x175 0) x1948) (= x175 (x710 (x338 x1805) x1925 0)) x1803 (= (x939 1461501637330902918203684832716283019655932542975 x833) x1805)) (and (= (= 0 x1002) x159) (= (x915 (+ 160 x494)) x2372) (= x1512 (x1665 x946)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2090) (= x2090 (x361 x258)) (<= x1512 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x710 (x338 x1151) x664 0) x1581) (>= x1752 0) (= x1752 (x2349 x825)) (= x664 (x710 (x338 x1596) (x1823 7) 0)) (= (x939 1461501637330902918203684832716283019655932542975 x833) x1151) (or (and (= x2106 (x1472 x2293)) (= (x710 (x338 x151) x2116 0) x1017) (= (x939 1461501637330902918203684832716283019655932542975 x833) x151) (= x316 (+ x48 x891)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2106) (= x2116 (x710 (x338 x1596) (x1823 7) 0)) (= x891 x2106) (= (x710 (x338 x2426) x382 0) x2293) (= x1638 (* x1002 x1349)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2106 x1741)) (= x1638 x1741) (= (x710 (x338 x2426) x1017 0) x451) (= (x939 1461501637330902918203684832716283019655932542975 x833) x556) (= x48 x1741) (not x159) (>= x2106 0) (= x291 (x710 (x338 x1596) (x1823 3) 0)) (= x688 x2140) (= x382 (x710 (x338 x556) x291 0)) (< (* x1002 x1349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (= (x710 (x338 x1596) (x1823 7) 0) x334) (= x2140 x688) (= x1928 (x710 (x338 x2426) x1860 0)) (= x1573 (x939 1461501637330902918203684832716283019655932542975 x833)) (= x1860 (x710 (x338 x1573) x334 0)) x159)) (not x1803) (= x946 (x710 (x338 x2426) x1581 0)) (<= 0 x2090) (= x258 (x2186 x825 1)) (= x551 (> x889 x1512)) (= (x1380 x2372) x889) (= (x710 (x338 x1596) (x1823 1) 0) x825) (= x688 (x915 (+ x494 192))) (<= 0 x1512) (or (and (= (x1380 x2372) x42) x551 (or (and (= x1278 (x1369 x701)) x186 (= (x1939 (- x515 x1278)) x2326) (not (< x515 x1278)) (= x2326 x1002)) (and (= x1753 (ite (< x2081 604800) x2081 604800)) (= x2081 (x1939 (- x515 x1512))) (not (< x515 x1512)) (not x186) (= 604800 x166) (= x1753 x1002))) (= (= x1512 0) x186) (or (and (= x515 x1080) x2027 (= (x1380 x2372) x1080)) (and (not x2027) (= x2196 x515))) (= x2027 (> x2196 x42))) (and (not x551) (= 0 x1002))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1752))) (= (= x2123 0) x2411)) x904) x1166))
(assert (= x14 (=> (and (= x2248 (= x351 0)) (or (and x2248 (= 0 x1351) (= 0 x264)) (and (<= 0 x1949) (= (= 0 x1949) x342) (= x2433 (x710 (x338 x1045) x1377 0)) (= (x939 1461501637330902918203684832716283019655932542975 x1090) x1045) (or (and x342 (= x1351 0) (= 0 x264)) (and (= 1 x264) (= x1351 x1949) (not x342))) (= (x1500 x2433) x1949) (= x1377 (x710 (x338 x351) (x1823 10) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1949) (not x2248)))) x204)))
(assert (x341 x261))
(assert (x2045 x2254))
(assert (x341 x696))
(assert (x2045 x1046))
(assert (= 274184521717934524641157099916833587214 (x1987 (x338 274184521717934524641157099916833587214))))
(assert (x341 x1041))
(assert (= (or (and (not x253) x1709) (and (not x2137) x106)) x843))
(assert (= x1894 (and x2075 x2046)))
(assert (x2045 x1122))
(assert (x2045 x2321))
(assert (x2045 x441))
(assert (x2045 x507))
(assert (= (=> (and (= x1964 (x2186 x13 1)) (< x654 x686) (<= x1223 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x710 (x338 x2426) x971 0) x349) (= (x455 x1211) x392) (>= x1223 0) (= x1229 (= x136 0)) (= (x915 (+ 64 x1756)) x1714) (or (and (= (x939 1461501637330902918203684832716283019655932542975 x833) x789) x21) (and (= (* x768 x475) x1) (<= 0 x1284) (= x1443 x1680) (= x2247 (x939 1461501637330902918203684832716283019655932542975 x833)) (= (x710 (x338 x699) (x1823 5) 0) x294) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1284 x1443)) (= x1537 (x939 1461501637330902918203684832716283019655932542975 x833)) (= (+ x899 x1680) x1841) (= (x1007 x1331) x1284) (not x21) (= x1331 (x710 (x338 x2247) x294 0)) (= x1443 x1) (<= x1284 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (* x475 x768) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x899 x1284))) (= (x1416 x349) x1265) (= (x939 1461501637330902918203684832716283019655932542975 x833) x2172) (>= x1531 0) (= (x710 (x338 x699) (x1823 3) 0) x809) (or (and (= x1778 (mod (* x1265 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x915 (+ 1 x699)) x1061) (or (and (< 0 x588) (= x443 (x710 (x338 x1495) x459 0)) (= x161 (* x1598 x931)) x1633 (= (x710 (x338 x2314) x552 0) x1287) (>= x931 0) (= (x710 (x338 x699) (x1823 11) 0) x2120) (= x683 (x479 x1648)) (= (x710 (x338 x699) (x1823 4) 0) x459) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x375 x1342)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1598 x931)) (= 0 x683) (<= 0 x683) (>= 1461501637330902918203684832716283019655932542975 x2314) (= (div x161 1000000000000000000) x375) (<= x931 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x939 1461501637330902918203684832716283019655932542975 x833) x661) (< 0 x2282) (= (x1745 164) x2314) (= x2282 (x2023 128)) (= x1495 (x939 1461501637330902918203684832716283019655932542975 x833)) (>= 1461501637330902918203684832716283019655932542975 x751) (= (x1745 164) x751) (= x491 x1342) (= x232 (+ x491 x949)) (or (not x2226) (and (= x457 (x2263 x356)) (= x770 (x710 (x338 x191) x1402 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1598 x457)) (= x2214 (x710 (x338 x821) x1302 0)) (< 1 x794) (= (< 2 x588) x648) (>= x1589 0) (= (div x1548 1000000000000000000) x450) (= x450 x2024) x2226 (= x794 (x2023 128)) (not x648) (>= 1461501637330902918203684832716283019655932542975 x2044) (= (x710 (x338 x2426) x770 0) x764) (= x1337 (x710 (x338 x1320) x764 0)) (< (+ x450 x1955) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x588 1) (= (+ x1396 x2024) x1584) (= (x939 1461501637330902918203684832716283019655932542975 x833) x821) (= x191 (x939 1461501637330902918203684832716283019655932542975 x833)) (= x1955 (x1854 192)) (= x356 (x710 (x338 x2044) x2214 0)) (< 1 x588) (= x1320 (x1745 196)) (= (x1745 196) x2044) (= x1589 0) (>= 1461501637330902918203684832716283019655932542975 x1320) (= x1396 x1955) (= (x479 x1337) x1589) (>= x457 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1589) (<= x457 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1548 (* x457 x1598)) (= (x710 (x338 x699) (x1823 11) 0) x1302) (= (x710 (x338 x699) (x1823 4) 0) x1402))) (= x375 x949) (= x552 (x710 (x338 x661) x2120 0)) (= x1648 (x710 (x338 x751) x50 0)) (> x588 0) (= (x710 (x338 x2426) x443 0) x50) (= x2226 (> x588 1)) (= (x2263 x1287) x931) (<= x683 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1342 (x25 160))) (not x1633)) (not x2072) (= 0 x1356) (= x1633 (< 0 x588)) (= x239 (ite (> x1265 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= (div x1778 x1223) x1598) (= x2343 1) (= x1356 (x939 x2343 x239)) (= x1061 x686) (> x1223 0)) (and (= x1712 x686) x2072 (= x1712 (x915 (+ x699 1))))) (= x1223 (x1239 x425)) (or (and (not x820) (= 0 x475)) (and (= x101 (= x1531 0)) (or (and x732 (= x1221 (x455 x1211)) (= x32 x1221)) (and (= x2196 x32) (not x732))) x820 (= x423 (x455 x1211)) (or (and (= x1353 604800) (not x101) (= x2258 x475) (= x2258 (ite (< x488 604800) x488 604800)) (= x488 (x1939 (- x32 x1531))) (not (< x32 x1531))) (and x101 (= x1677 x475) (= x1677 (x1939 (- x32 x538))) (= (x1254 x1756) x538) (not (< x32 x538)))) (= x732 (> x2196 x423)))) (= x17 (x939 1461501637330902918203684832716283019655932542975 x833)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1265) (>= x1265 0) (= x2072 (= 0 x1265)) (= x1853 (x710 (x338 x699) (x1823 5) 0)) (= (x710 (x338 x699) (x1823 1) 0) x13) (= (x691 x1376) x1531) (<= x1673 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x710 (x338 x2172) x809 0) x971) (or x1229 (and (not x1229) (= x1326 (x939 1461501637330902918203684832716283019655932542975 x833)))) (= (< x1531 x392) x820) (= (x915 (+ 32 x1756)) x1211) (= x1754 (x939 1461501637330902918203684832716283019655932542975 x833)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x332) (= x21 (= x475 0)) (= (x361 x1964) x332) (>= x1673 0) (= x1376 (x710 (x338 x1754) x1485 0)) (= (x710 (x338 x17) x1853 0) x425) (<= 0 x332) (= (x710 (x338 x699) (x1823 6) 0) x1485) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1531) (= x1714 x421) (= (x2349 x13) x1673)) x2301) x614))
(assert (x2045 x588))
(assert (x2045 x1200))
(assert (=> (<= x692 10000) (= (x338 x692) (x1823 x692))))
(assert (x2045 x597))
(assert (x2045 x1661))
(assert (x2045 x1646))
(assert (x2045 x607))
(assert (x2045 x1798))
(assert (x341 x357))
(assert (= x893 (x1987 (x338 x893))))
(assert (x2045 x1344))
(assert (= (x1987 (x338 x2238)) x2238))
(assert (= x942 (=> (and (= (x710 (x338 x900) x2250 0) x2180) (>= x963 0) (= (x710 (x338 x505) x1501 0) x2250) (= (x939 1461501637330902918203684832716283019655932542975 x1224) x900) (= (x1370 x2180) x963) (= x817 (= x963 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x963) (= x1501 (x710 (x338 x2057) (x1823 7) 0)) (= (x939 1461501637330902918203684832716283019655932542975 x2238) x505)) (and (=> (and (= x2416 x2057) (not x817)) x2212) (=> x817 x1317)))))
(assert (x2045 x1464))
(assert (= (x1987 (x338 x1630)) x1630))
(assert (= x553 (or (and x1226 (not x2315)) (and x1851 (not x1645)) (and x1038 x471))))
(assert (x2045 x1739))
(assert (= x923 true))
(assert (x2045 x874))
(assert (x1346 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x2045 x1575))
(assert (x341 x1075))
(assert (=> (>= 10000 x505) (= (x1823 x505) (x338 x505))))
(assert (= x2217 x615))
(assert (x2045 x2380))
(assert (= x368 (x1987 (x338 x368))))
(assert (= (x1987 (x338 x2044)) x2044))
(assert (x2045 x829))
(assert (x2045 x1368))
(assert (x2045 x107))
(assert (x2045 x238))
(assert (x341 x1362))
(assert (=> (>= 10000 x1096) (= (x338 x1096) (x1823 x1096))))
(assert (x2045 x968))
(assert (x2045 x385))
(assert (x2045 x1906))
(assert (=> (<= x1466 10000) (= (x1823 x1466) (x338 x1466))))
(assert (=> (>= 10000 x2184) (= (x1823 x2184) (x338 x2184))))
(assert (x2045 x1480))
(assert (x2045 x593))
(assert (x341 x1596))
(assert (x2045 x1911))
(assert (x341 x681))
(assert true)
(assert (x2045 x261))
(assert (= (and x405 x1666) x1120))
(assert (x2045 x365))
(assert (x2045 x612))
(assert (x341 x803))
(assert (= x188 (x1987 (x338 x188))))
(assert (x2045 x1187))
(assert (x2045 x934))
(assert (=> (<= x1865 10000) (= (x1823 x1865) (x338 x1865))))
(assert (= x1775 x2420))
(assert (x2045 x1150))
(assert (x2045 x1203))
(assert (= 0 (x167 x257)))
(assert (x2045 x585))
(assert (= (x1823 2293535753) (x338 2293535753)))
(assert (x2045 x384))
(assert (x2045 x2198))
(assert (x2045 x2251))
(assert (=> (<= x1754 10000) (= (x338 x1754) (x1823 x1754))))
(assert (x2045 x380))
(assert (=> (>= 10000 x513) (= (x1823 x513) (x338 x513))))
(assert (x2045 x2037))
(assert (x2045 x2168))
(assert (= (or (and (not x405) x1666) (and x1667 (not x721))) x799))
(assert (x341 x2112))
(assert (x2045 x79))
(assert (x341 x111))
(assert (x2045 x2403))
(assert (x2045 x1235))
(assert (x2045 x1135))
(assert (x2045 x605))
(assert (= x2172 (x1987 (x338 x2172))))
(assert (x2045 x1791))
(assert (x2045 x2065))
(assert (x341 x626))
(assert (x341 x900))
(assert (=> (>= 10000 x1362) (= (x1823 x1362) (x338 x1362))))
(assert (=> (<= x1207 10000) (= (x338 x1207) (x1823 x1207))))
(assert (=> (>= 10000 x751) (= (x338 x751) (x1823 x751))))
(assert (x2045 x2021))
(assert (x2045 x524))
(assert (= x1053 (or x1799 x1868)))
(assert (= 274184521717934524641157099916833587214 (x1987 (x1823 274184521717934524641157099916833587214))))
(assert (x2045 x278))
(assert (x2045 x2304))
(assert (=> (<= x1720 10000) (= (x338 x1720) (x1823 x1720))))
(assert (x341 x699))
(assert (= (=> (and (= x1767 (= 0 x2149)) (or (and (= x408 (x710 (x338 x874) x727 0)) (= x387 x1349) (= x387 (x925 x1241)) (= (x710 (x338 x2149) (x1823 9) 0) x727) (= 1 x2123) (<= 0 x387) (= x874 (x939 1461501637330902918203684832716283019655932542975 x833)) (not x1767) (= (x710 (x338 x2426) x408 0) x1241) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x387)) (and (= x2123 0) x1767 (= x1349 0)))) x1166) x2303))
(assert (x2045 x1232))
(assert (x2045 x1356))
(assert (x2045 x852))
(assert (x2045 x2011))
(assert (= x2227 (and (not x536) x863)))
(assert (x2045 x2210))
(assert (= x1194 (and (not x944) x1859)))
(assert (x2045 x497))
(assert (= (=> (= x1483 x1227) x108) x1066))
(assert (x2045 x699))
(assert (= (x1987 (x1823 2258409472)) 2258409472))
(assert (= (=> (and (not (or (and (> 32 x1550) (= (<= x1550 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1550))) (= x2400 x1256) (not (= x484 0)) (= (x1693 128) x1256)) (=> (and (= x1596 x180) (= x141 x2400) (>= 1461501637330902918203684832716283019655932542975 x1246) (= x1217 (x1939 (- x830 4))) (> x1886 x654) (not (< x830 4)) (= x180 x654) (= x1292 x1196) (not (> x588 18446744073709551615)) (= x1634 x839) (= x1013 (= x588 0)) (< 163 x830) (= 0 x1196) (>= 1461501637330902918203684832716283019655932542975 x36) (or x1013 (and (= (mod (* 32 x588) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x801) (not x1013))) (= x1225 x310) (< x1704 2293535753) (>= x1886 0) (<= x833 1461501637330902918203684832716283019655932542975) (= x2196 x1270) (<= x1886 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (or (> x1217 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 128 x1217) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1217))))) (< x1704 911411945) (= (x1745 132) x588) (> x586 0) (not (= x1704 69947311)) (not (> x1596 x654)) (= x363 x833) (>= 1461501637330902918203684832716283019655932542975 x221) (>= x1246 0) (= (x915 (+ x703 160)) x701) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x830)) (= (x915 (+ x1121 164)) x1015) (>= x36 0) (= x2426 x221) (= x277 x640) (= (mod (* x588 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x703) (= (x676 (x338 274184521717934524641157099916833587206)) x586) (>= x221 0) (not (> x1015 x830)) (= 87118632 x1704) (< x1704 468353030) (= x868 (mod (- (x915 (+ 32 (mod (* x839 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x494 (x915 (+ 32 x703))) (= (mod (* 32 x588) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1121) (= x830 (x915 (+ 164 (mod (* 32 x839) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x36 x277)) x1903)) x1508))
(assert (= (=> (and (= x948 (x1777 (x338 274184521717934524641157099916833587206))) x730 x133 (= (>= x948 0) x730) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1030 (x338 x2344))) x133) (= (= 274184521717934524641157099916833587218 x2344) x1588) (= (x1777 (x338 x2344)) x2412) x1958 (= (x1030 (x338 x2344)) x1275) (= x1257 x62) (= x808 (x1777 (x338 274184521717934524641157099916833587206))) (= (< x2412 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1958)) (and (=> (and (= x2136 x1876) (not (< x2306 649617121)) (= x1384 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1460 x2113))) (= (> x1460 x2055) x1154) (not x1154) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2113) (not (= x2306 1889567281)) (= x1149 32) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x840) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x840) true) (> 64 x840))) x1604) (= x2113 x134) (>= 1461501637330902918203684832716283019655932542975 x2136) (= 274184521717934524641157099916833587206 x1888) (= x62 x323) (= (x710 (x338 x2136) (x1823 1) 0) x374) x1588 (<= 0 x2055) (> x938 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2113 x1460)) (= x729 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2136 x1902) (= 274184521717934524641157099916833587206 x633) (not (= x2306 2514000705)) (not x1384) (<= x2055 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x676 (x338 274184521717934524641157099916833587218)) x938) (= (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0) x1204) (not x1186) (= x1460 x2109) (= (x844 x1204) x2055) (not (= 649617121 x2306)) (= x2036 (+ x134 x2109)) (= (x1939 (- x323 4)) x840) (= x1371 (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0)) (not (= x2306 826074471)) (= x323 68) (= x2306 2835717307) (= (< x2055 x1998) x1186) (>= x2113 0) (= x1915 (x710 (x338 x2136) (x1823 1) 0)) (= (x1939 (- x2055 x1998)) x748) (= x1168 1) (= x1998 x2160) (= (x122 x374) x2113) (not x1604) (not (< x323 4)) (= x1998 x1460)) x1298) (=> (not x1588) x945))) x760))
(assert (x2045 x1679))
(assert (x2045 x146))
(assert (x2045 x584))
(assert (x2045 x719))
(assert (=> (<= x1724 10000) (= (x338 x1724) (x1823 x1724))))
(assert (x2045 x1289))
(assert (x2045 x1270))
(assert (x2045 x191))
(assert (x2045 x452))
(assert (x2045 x1428))
(assert (x2045 x783))
(assert (x2045 x2287))
(assert (x2045 x112))
(assert (x2045 x364))
(assert (x2045 x1466))
(assert (x2045 x216))
(assert (x341 x1438))
(assert (= (x1987 (x338 x617)) x617))
(assert (x2045 x901))
(assert (x2045 x1695))
(assert (x2045 x576))
(assert (x2045 x1876))
(assert (x2045 x141))
(assert (x341 x1012))
(assert (x341 x1464))
(assert (x2045 x2272))
(assert (x1346 x2343))
(assert (=> (>= 10000 x357) (= (x338 x357) (x1823 x357))))
(assert (x2045 x531))
(assert (x341 x751))
(assert (x2045 x1873))
(assert (x2045 x1562))
(assert (x1346 x2005))
(assert (x2045 x2113))
(assert (=> (>= 10000 x634) (= (x1823 x634) (x338 x634))))
(assert (= x1405 (x1987 (x338 x1405))))
(assert (x2045 x371))
(assert (= (x1823 69947311) (x338 69947311)))
(assert (x2045 x1875))
(assert (x341 x2238))
(assert (x341 x916))
(assert (x2045 x510))
(assert (x2045 x1546))
(assert (x2045 x643))
(assert (= (x1987 (x338 x2050)) x2050))
(assert (=> (<= x1004 10000) (= (x1823 x1004) (x338 x1004))))
(assert (x341 x53))
(assert (= x1617 (or (and x2291 x399) (and x896 x1170) x200)))
(assert (= x1728 (=> (and (<= 0 x612) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x612) (= x1040 (x710 (x338 x1441) x183 0)) (= x1441 (x939 1461501637330902918203684832716283019655932542975 x833)) (= (x710 (x338 x2403) (x1823 6) 0) x183) (= (x303 x1040) x612) (= x1322 (= 0 x612))) (and (=> (and (= (> x73 0) x1907) (not x1907) (= x73 (x1939 (- x2403 1))) x1322) x742) (=> (and (= x2403 x1570) (not x1322)) x1336)))))
(assert (x2045 x1422))
(assert (= (ite (and x536 x863) (x2063 x1295) (x2089 x1295)) (x1492 x1295)))
(assert (x2045 x319))
(assert (x2045 x1805))
(assert (x2045 x2394))
(assert (= x1025 (=> (and (>= x1886 0) (<= x1886 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x456 0) (>= 1461501637330902918203684832716283019655932542975 x790) (= x337 243137395) (>= 1461501637330902918203684832716283019655932542975 x1090) (not (> x1579 x1886)) (= (x710 (x338 x1090) x1733 0) x2261) (> 2293535753 x337) (= x1986 x2426) (= x2362 0) (= (< 0 x779) x1131) (= x456 x1801) (not (= x337 142201243)) (> 468353030 x337) (<= x779 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x11) (>= x11 0) (<= 0 x779) (not (= x337 87118632)) (<= 0 x1986) (= (x676 (x338 274184521717934524641157099916833587206)) x1628) (= (x710 (x338 x1579) (x1823 7) 0) x1733) (> x1886 x1579) (= x1292 x2362) (< x337 911411945) (<= 0 x1886) (<= x1986 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1886) (= x2179 (x710 (x338 x1695) x2261 0)) (= x779 (x1665 x2179)) (= x2196 x643) (not (= 69947311 x337)) (< 0 x1628) (= x640 x1801) (<= x456 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1695)) (and (=> (and (= (x710 (x338 x613) x590 0) x403) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x941) (= x941 (x925 x403)) (= x2388 0) (= (x939 1461501637330902918203684832716283019655932542975 x1090) x1113) (>= x941 0) (= x706 x941) (= x613 (x939 1461501637330902918203684832716283019655932542975 x1695)) (= x590 (x710 (x338 x1113) x1205 0)) (= x1205 (x710 (x338 x1579) (x1823 9) 0)) x1131) x1379) (=> (not x1131) x388)))))
(assert (x2045 x1002))
(assert (x2045 x2184))
(assert (x2045 x1758))
(assert (x2045 x1737))
(assert (x341 x2121))
(assert (x2045 x1979))
(assert (= (ite (and x863 x536) (x336 x771) (x2387 x771)) (x2283 x771)))
(assert (= (x1987 (x338 x2409)) x2409))
(assert (x2045 x571))
(assert (x2045 x865))
(assert (x2045 x1743))
(assert (= x681 (x1987 (x338 x681))))
(assert (=> (<= x2378 10000) (= (x338 x2378) (x1823 x2378))))
(assert (x2045 x1460))
(assert (x2045 x1055))
(assert (x2045 x1011))
(assert (= (=> (and (= x1118 (x939 1461501637330902918203684832716283019655932542975 x833)) (= x1710 (> x588 0))) (and (=> (and (= (x78 160) x1081) (= x882 (x915 (+ x421 36))) (= (x915 (+ x421 68)) x878) (> x588 0) (= x1557 (x915 (+ 100 x421))) (= x518 (x939 26959946667150639794667015087019630673637144422540572481103610249215 x2021)) (= (> x1601 0) x702) (= x650 (> x1106 x1601)) (= (< 0 x2210) x795) (= x718 (x1939 (- x2231 32))) (= (x915 (+ x421 32)) x1605) (<= x1865 1461501637330902918203684832716283019655932542975) (= (x2023 128) x1945) (= x1865 (x1745 164)) (= x2021 (x2244 x1605)) (or (and (= x237 (x915 (+ x1601 x2188))) x650) (not x650)) x1710 (= x2255 0) (= x2210 (x676 (x338 x1865))) (= x2231 (x1939 (- x1557 x421))) (= x1601 (x353 x421)) (or (and (= 0 x1106) (not x702)) (and (= (x1936 x1675) x1189) (= (> x1601 32) x519) (= x2188 x508) x702 (or (and (not x519) (= 32 x1106)) (and (or (and (= (< 96 x1601) x2351) x287 (= (x1936 x473) x905) (= x473 (x915 (+ 96 x421))) (= x1055 (x915 (+ x1557 128))) (or (and (not x2351) (= x1106 96)) (and (= (< 128 x1601) x1299) (= 128 x1106) (not x1299) (= x1459 (x1936 x608)) (= x31 (x915 (+ 160 x1557))) x2351 (= (x915 (+ 128 x421)) x608)))) (and (= x1106 64) (not x287))) (= (x1936 x750) x2374) (= x287 (> x1601 64)) x519 (= x750 (x915 (+ x421 64))) (= x292 (x915 (+ x1557 96))))) (= x1675 x1605))) x795 (> x1945 0) (= (x915 (+ x518 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x561) (= (x915 (+ x882 128)) x2188)) x1433) (=> (not x1710) x1738))) x1074))
(assert (=> (>= 10000 x191) (= (x1823 x191) (x338 x191))))
(assert (x2045 x2421))
(assert (= x1865 (x1987 (x338 x1865))))
(assert (x2045 x248))
(assert (=> (<= x164 10000) (= (x338 x164) (x1823 x164))))
(assert (x341 x1573))
(assert (x2045 x2013))
(assert (x2045 x1776))
(assert (= x329 x245))
(assert (x2045 x836))
(assert (x2045 x2076))
(assert (x341 x1451))
(assert (x341 x1096))
(assert (x1346 x1344))
(assert (= x1004 (x1987 (x338 x1004))))
(assert (x2045 x2362))
(assert (= (ite (and x2078 x1684) (x1426 x425) (x1549 x425)) (x1007 x425)))
(assert (x2045 x2310))
(assert (x2045 x363))
(assert (x2045 x1528))
(assert (x2045 x362))
(assert (x2045 x1795))
(assert (x2045 x1677))
(assert (x2045 x1630))
(assert (x981 x2021 x1136))
(assert (x2045 x1168))
(assert (x2045 x1320))
(assert (= (=> (= x351 0) x14) x428))
(assert (x2045 x509))
(assert (= x761 (=> (and (<= 0 x741) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x741) (= x721 (= 0 x741)) (= (x694 x1759) x741) (= x757 (x710 (x338 x111) (x1823 6) 0)) (= (x939 1461501637330902918203684832716283019655932542975 x2238) x97) (= x1759 (x710 (x338 x97) x757 0))) (and (=> (and x721 (= x293 (x1939 (- x111 1))) (= (< 0 x293) x2360) (not x2360)) x102) (=> (and (= x1014 x111) (not x721)) x1109)))))
(assert (x2045 x903))
(assert (= true x1142))
(assert (x2045 x1790))
(assert (= x624 (x1987 (x338 x624))))
(assert (= x1574 (x1987 (x338 x1574))))
(assert (x2045 x1119))
(assert (x2045 x1971))
(assert (= x1573 (x1987 (x338 x1573))))
(assert (x2045 x1262))
(assert (x2045 x1113))
(assert (x2045 x1827))
(assert (= (+ (x1987 x2355) 1) (x1987 (x2186 x2355 1))))
(assert (=> (<= x1655 10000) (= (x1823 x1655) (x338 x1655))))
(assert (= x1318 (or x2103 (and x944 x1859))))
(assert (= x181 (x1987 (x338 x181))))
(assert (= (ite x1024 (ite (and x2062 x2034) (x2063 x1651) (x708 x1651)) (x2063 x1651)) (x781 x1651)))
(assert (x2045 x613))
(assert (x341 x1105))
(assert (x2045 x1330))
(assert (x2045 x1847))
(assert (x2045 x2204))
(assert (x341 x364))
(assert (= (=> (and (or (and (or (and (= x2015 0) x1796 (= x486 0)) (and (= x2015 1) (not x1796) (= x486 x2164))) (>= x2164 0) (= (x710 (x338 x1110) (x1823 10) 0) x2009) (<= x2164 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x2164 0) x1796) (= (x710 (x338 x1115) x2009 0) x1965) (= (x939 1461501637330902918203684832716283019655932542975 x2238) x1115) (= x2164 (x1736 x1965)) (not x2146)) (and (= 0 x2015) (= x486 0) x2146)) (= (= x1110 0) x2146)) x1335) x298))
(assert (= (x1987 (x338 x2207)) x2207))
(assert (= x1024 (or (and x230 x1413) (and x2034 x2062))))
(assert (= 2061678023 (x1987 (x1823 2061678023))))
(assert (x2045 x1551))
(assert (= (x1987 (x338 x1001)) x1001))
(assert (x2045 x591))
(assert (x2045 x1489))
(assert (x2045 x1444))
(assert (= (=> (and (= x2403 (x1939 (- x1596 1))) (= (< 0 x2403) x1773)) (and (=> x1773 x1728) (=> (not x1773) x742))) x2192))
(assert (x2045 x232))
(assert (=> (<= x613 10000) (= (x1823 x613) (x338 x613))))
(assert (x2045 x1830))
(assert (x2045 x1953))
(assert (= (=> (= x1413 (= x137 274184521717934524641157099916833587214)) (and (=> (not x1413) x1142) (=> (and (= x603 x268) (= (> x603 x327) x1510) (not (= x2402 2514000705)) (<= 0 x327) (= (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0) x1393) (not (< x2402 649617121)) (= 2835717307 x2402) (= x603 x2266) (= (x1939 (- x327 x603)) x278) (= x1325 x1077) (= x1718 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 68 x1325) (= (x676 (x338 274184521717934524641157099916833587214)) x2215) (>= 1461501637330902918203684832716283019655932542975 x1105) (not x1510) x1413 (= x324 32) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2266 x1135)) x1954) (not x1954) (= x810 x2266) (= x182 x1135) (= x1554 1) (= x2162 (x1939 (- x1325 4))) (= (+ x810 x182) x974) (not x127) (= x1715 (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0)) (not (= 649617121 x2402)) (= x2194 (x710 (x338 x1105) (x1823 1) 0)) (= x247 (x710 (x338 x1105) (x1823 1) 0)) (= x1442 274184521717934524641157099916833587206) (<= x1135 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x2266 x327) x127) (<= x327 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1135) (= (x2063 x1393) x327) (= (or (> x2162 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x2162) (= true (<= x2162 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x637) (= x1618 x1105) (= 274184521717934524641157099916833587206 x1296) (= x2135 x1105) (= x1135 (x2253 x2194)) (not (= x2402 1889567281)) (not x637) (not (= x2402 826074471)) (not (< x1325 4)) (< (+ x2266 x1135) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< 0 x2215)) x45))) x1889))
(assert (x2045 x264))
(assert (x2045 x1493))
(assert (=> (<= x2409 10000) (= (x1823 x2409) (x338 x2409))))
(assert (x341 x2327))
(assert (x2045 x1481))
(assert (= x1424 (and x566 x1156)))
(assert (=> (<= x2070 10000) (= (x338 x2070) (x1823 x2070))))
(assert (= x1115 (x1987 (x338 x1115))))
(assert (= x851 (and x1583 (not x1926))))
(assert (x2045 x12))
(assert (= x96 (or (and x1049 x2074) (and x824 x1640))))
(assert (x341 x1045))
(assert (= (x25 192) (x1854 192)))
(assert (= x2426 (x1987 (x338 x2426))))
(assert (= (x1987 (x338 x2108)) x2108))
(assert (x2045 x6))
(assert (= x2330 (=> (and (= x1817 x430) (= x304 x1224) (= x2238 x363) (= x180 x2057)) x919)))
(assert (x2045 x1310))
(assert (x1346 x1695))
(assert (=> (<= x99 10000) (= (x338 x99) (x1823 x99))))
(assert (x2045 x1213))
(assert (x2045 x1952))
(assert (= x1313 x1859))
(assert (x2045 x206))
(assert (= (x338 2764855426) (x1823 2764855426)))
(assert (x341 x1405))
(assert (=> (>= 10000 x2247) (= (x338 x2247) (x1823 x2247))))
(assert (= (ite (and x329 (not x743) (not x1835)) (x2268 x1687) (x1472 x1687)) (x23 x1687)))
(assert (x2045 x179))
(assert (x2045 x529))
(assert (x2045 x628))
(assert (x2045 x486))
(assert (=> (<= x15 10000) (= (x1823 x15) (x338 x15))))
(assert (x2045 x42))
(assert (= (=> (= 0 x1483) x108) x1976))
(assert (= (or (and x738 (not x522)) (and x1044 (not x2122)) (and x1329 x77)) x1868))
(assert (= (x2367 0) (x1804 0)))
(assert (= (x1987 (x338 x1361)) x1361))
(assert (x2045 x351))
(assert (x341 x1724))
(assert (x2045 x495))
(assert (=> (>= 10000 x1464) (= (x1823 x1464) (x338 x1464))))
(assert (x2045 x1089))
(assert (x2045 x2079))
(assert (x2045 x1339))
(assert (x2045 x1253))
(assert (x2045 x1264))
(assert (x2045 x311))
(assert (x1346 x239))
(assert (x2045 x18))
(assert (=> (>= 10000 x955) (= (x1823 x955) (x338 x955))))
(assert (x2045 x1450))
(assert (= (or (and (not x77) x1329) (and x2163 (not x193))) x1799))
(assert (= 0 (x572 x1084)))
(assert (= x295 (=> (and (= x838 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x627 (x338 x137)))) (= x1791 (x1079 (x338 274184521717934524641157099916833587206))) (= (>= x1791 0) x376) (= x1077 x987) (= (< x215 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2399) (= (x1079 (x338 x137)) x215) (= x957 (x1079 (x338 274184521717934524641157099916833587206))) x376 (= x2034 (= x137 274184521717934524641157099916833587218)) (= x1971 (x627 (x338 x137))) x2399 x838) (and (=> (not x2034) x1889) (=> (and (= x1655 x656) (= (or (and (> 64 x754) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x754))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x754)) x1663) (= x1440 (x710 (x338 x1655) (x1823 1) 0)) (= x1655 x1618) (= x1403 (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0)) (<= 0 x1360) (not x231) (= x305 x268) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1360) (= x112 x185) (= (x710 (x338 x1655) (x1823 1) 0) x978) (= (> x112 x460) x231) (not x1663) (= x1077 x861) (= (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0) x2014) (= x767 x1360) (>= 1461501637330902918203684832716283019655932542975 x1655) (= (x676 (x338 274184521717934524641157099916833587218)) x1452) (not (= 649617121 x921)) (= x305 x112) (< 0 x1452) (= 32 x324) (= 274184521717934524641157099916833587206 x1051) (= x921 2835717307) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x576) (= (x100 x1440) x1360) (= (+ x767 x185) x2189) (<= x460 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x921 2514000705)) (not (= 1889567281 x921)) (= 274184521717934524641157099916833587206 x2368) (= (x1939 (- x460 x305)) x2256) (= x2392 (>= (+ x112 x1360) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= x460 0) (not (< x861 4)) x2034 (= x754 (x1939 (- x861 4))) (not x1871) (not (> 649617121 x921)) (= 68 x861) (= x1554 1) (not x2392) (= x460 (x2387 x2014)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x112 x1360)) (= x1871 (< x460 x305)) (not (= x921 826074471))) x45)))))
(assert (=> (<= x2327 10000) (= (x1823 x2327) (x338 x2327))))
(assert (x2045 x1584))
(assert (= (x1987 (x338 x2115)) x2115))
(assert (x341 x2348))
(assert (x341 x1285))
(assert (x2045 x285))
(assert (=> (>= 10000 x1202) (= (x338 x1202) (x1823 x1202))))
(assert (= x53 (x1987 (x338 x53))))
(assert (= x1215 (=> (and (= (x1939 (- x699 1)) x1455) (= x243 (< 0 x1455))) (and (=> x243 x1521) (=> (not x243) x302)))))
(assert (x2045 x1986))
(assert (x2045 x822))
(assert (= x2247 (x1987 (x338 x2247))))
(assert (x2045 x1012))
(assert (x341 x1232))
(assert (=> (>= 10000 x1115) (= (x1823 x1115) (x338 x1115))))
(assert (x2045 x805))
(assert (= x417 (=> (= x2373 (< 0 x2057)) (and (=> (not x2373) x102) (=> x2373 x1072)))))
(assert (x2045 x2123))
(assert (= (x1987 (x338 x804)) x804))
(assert (x2045 x1523))
(assert (x2045 x2054))
(assert (x1346 x1090))
(assert (x2045 x2425))
(assert (= (x1987 (x2186 x2267 1)) (+ (x1987 x2267) 1)))
(assert (x2045 x2044))
(assert (x2045 x603))
(assert (=> (<= x2314 10000) (= (x1823 x2314) (x338 x2314))))
(assert (=> (>= 10000 x531) (= (x1823 x531) (x338 x531))))
(assert (= x2163 (and x2122 x1044)))
(assert (x2045 x1573))
(assert (x2045 x2356))
(assert (x2045 x148))
(assert (x2045 x2324))
(assert (=> (<= x1045 10000) (= (x1823 x1045) (x338 x1045))))
(assert (= (x338 604800) (x1823 604800)))
(assert (x2045 x219))
(assert (= (x1987 (x338 x2347)) x2347))
(assert (x2045 x1045))
(assert (x341 x935))
(assert (= (and x1160 x1941) x1068))
(assert (x2045 x887))
(assert (x2045 x2131))
(assert (x2045 x2175))
(assert (x341 x1805))
(assert (= 0 (x458 x2317)))
(assert (= (x1987 (x338 x1720)) x1720))
(assert (x2045 x1512))
(assert (x2045 x1676))
(assert (x2045 x936))
(assert (x2045 x1476))
(assert (= 0 (x1750 x1605)))
(assert (x2045 x1126))
(assert (=> (<= x854 10000) (= (x1823 x854) (x338 x854))))
(assert (= x1417 x1318))
(assert (= (x338 18446744073709551615) (x1823 18446744073709551615)))
(assert (x341 x556))
(assert (x341 x1695))
(assert (x2045 x1441))
(assert (x2045 x1297))
(assert (x2045 x1447))
(assert (x2045 x1016))
(assert (x2045 x2169))
(assert (x2045 x1189))
(assert (x2045 x493))
(assert (x2045 x279))
(assert (x2045 x1792))
(assert (=> (<= x1579 10000) (= (x338 x1579) (x1823 x1579))))
(assert (x341 x433))
(assert (x2045 x1242))
(assert (x2045 x1459))
(assert (= (x1669 160) 0))
(assert (= (=> (and (or (and (not x170) (= x704 (x915 (+ x1797 96))) (= x206 x1587)) (and (= x1587 96) x170)) (not x989) (= (x90 (x338 x1632)) x5) (= x170 (= 0 x2158)) (= (x1059 x1587) x2168) (or (and (= x2390 x252) (= (x915 (+ 32 x1587)) x1798) (> x2390 0) (= x2193 (x1059 x1587)) x1093 (= (= x2390 0) x489) (not (or (> x2193 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2193 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2193))))) (= x252 (ite x28 1 0)) (= (not x489) x28) (= x2390 (x1800 x1798))) (not x1093)) (= x3 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x835 (x338 274184521717934524641157099916833587206)))) x3 (not (= 0 x1901)) (= x1093 (< 0 x2168)) (= x989 (< 2 x588))) x1738) x1503))
(assert (= x1147 (x1987 (x338 x1147))))
(assert (x341 x1455))
(assert (x2045 x66))
(assert (= (x338 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1823 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x2045 x1124))
(assert (=> (>= 10000 x936) (= (x1823 x936) (x338 x936))))
(assert (x2045 x1672))
(assert (=> (<= x1197 10000) (= (x1823 x1197) (x338 x1197))))
(assert (x2045 x1495))
(assert (x2045 x1901))
(assert (x341 x1090))
(assert (x2045 x1797))
(assert (x2045 x1496))
(assert (x2045 x1237))
(assert (=> (>= 10000 x1811) (= (x338 x1811) (x1823 x1811))))
(assert (x2045 x954))
(assert (x2045 x1596))
(assert (x341 x2314))
(assert (x341 x805))
(assert (= x532 (=> (and (= x2382 128) (>= 1461501637330902918203684832716283019655932542975 x1219) (= x1827 (x676 (x338 274184521717934524641157099916833587206))) (= 468353030 x524) (= (= x1219 274184521717934524641157099916833587218) x2074) (not (< x524 468353030)) (< 0 x1827) (> 911411945 x524) (<= x1362 1461501637330902918203684832716283019655932542975) (< x524 2293535753)) (and (=> (and (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x685) (not (> 4 x320)) (= 1889567281 x2369) (not x1303) (> x651 0) (<= x828 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x484) (= x828 (x1082 x54)) (>= x828 0) (= (x710 (x338 x1362) (x1823 1) 0) x54) (= x1550 32) (<= x2309 1461501637330902918203684832716283019655932542975) (not (< x2369 649617121)) (= x1362 x2309) (= x1303 (or (and (> 32 x1927) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1927) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1927))) (= x651 (x676 (x338 274184521717934524641157099916833587218))) (not (= 649617121 x2369)) (= x1927 (x1939 (- x320 4))) (= 36 x320) (= x320 36) (not (= x2369 826074471)) x2074) x1508) (=> (not x2074) x1908)))))
(assert (x2045 x2160))
(assert (= x1477 (=> (and (= x693 (x1665 x1498)) (= x424 (x710 (x338 x2108) x326 0)) (<= 0 x693) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x693) (= (x939 1461501637330902918203684832716283019655932542975 x833) x2108) (= (x710 (x338 x2426) x424 0) x1498) (= (x710 (x338 x696) (x1823 7) 0) x326) (= x77 (= 0 x693))) (and (=> (and (not x77) (= x1213 x696)) x1244) (=> (and (= (> x2237 0) x330) (= (x1939 (- x696 1)) x2237) x77 (not x330)) x1576)))))
(assert (x2045 x1105))
(assert (=> (>= 10000 x689) (= (x338 x689) (x1823 x689))))
(assert (x2045 x1414))
(assert (x341 x1620))
(assert (x2045 x1306))
(assert (x2045 x2132))
(assert (=> (<= x1573 10000) (= (x338 x1573) (x1823 x1573))))
(assert (x341 x1818))
(assert (x2045 x32))
(assert (= x2418 x1535))
(assert (=> (>= 10000 x2114) (= (x338 x2114) (x1823 x2114))))
(assert (= x1650 (or (and (not x1773) x1894) (and x1322 x1668) (and (not x2265) x9))))
(assert (x2045 x2240))
(assert (= (x1987 (x1823 649617121)) 649617121))
(assert (x2045 x2231))
(assert (= (x338 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x1823 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x2045 x741))
(assert (x341 x1694))
(assert (= (x1987 (x2186 x2242 1)) (+ (x1987 x2242) 1)))
(assert (= x1851 (and x1479 (not x1131))))
(assert (= (x1987 (x1823 2960351575)) 2960351575))
(assert (x341 x1811))
(assert (=> (<= x1110 10000) (= (x1823 x1110) (x338 x1110))))
(assert (x2045 x501))
(assert (x1346 x352))
(assert (x2045 x548))
(assert (= (x1987 (x338 x2378)) x2378))
(assert (= x2314 (x1987 (x338 x2314))))
(assert (= (x1987 (x338 x1579)) x1579))
(assert (x2045 x1807))
(assert (x341 x1790))
(assert (= x2262 (=> (and (= (x710 (x338 x1596) (x1823 6) 0) x2182) (= (x710 (x338 x419) x1802 0) x2228) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2131) (<= 0 x585) (<= x585 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2349 x511) x509) (= x383 (x710 (x338 x1596) (x1823 5) 0)) (or (and (not x1117) (= 0 x1878)) (and (= (< x1060 x2196) x1869) (= x1060 (x1602 x362)) (or (and (= x1539 x1878) (= x1539 (ite (> 604800 x492) x492 604800)) (not x1870) (= 604800 x1831) (= x492 (x1939 (- x1264 x585))) (not (< x1264 x585))) (and x1870 (= x2236 (x422 x2140)) (not (> x2236 x1264)) (= x254 (x1939 (- x1264 x2236))) (= x1878 x254))) x1117 (or (and (= (x1602 x362) x2280) x1869 (= x2280 x1264)) (and (not x1869) (= x2196 x1264))) (= (= x585 0) x1870))) (= (x303 x301) x585) (= x1816 (x939 1461501637330902918203684832716283019655932542975 x833)) (= (x710 (x338 x1816) x2182 0) x301) (= (x361 x40) x2131) (>= x2131 0) (= x1684 (= x1878 0)) (= x1183 (x1602 x362)) (= (x1007 x2202) x1672) (= x1124 (x2185 x222)) (>= x1124 0) (= (< x585 x1183) x1117) (= (x710 (x338 x893) x383 0) x2202) (or (and (= x638 x414) (= x539 (x939 1461501637330902918203684832716283019655932542975 x833)) (= x1864 (x710 (x338 x539) x1010 0)) (= x414 x639) (= (x710 (x338 x1596) (x1823 5) 0) x1327) (= (+ x638 x1415) x1553) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1961) (= (x710 (x338 x1596) (x1823 6) 0) x1010) (= x1961 (x1426 x149)) (= x639 (* x1878 x2331)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x414 x1961)) (= x1415 x1961) (= (x710 (x338 x1723) x1327 0) x149) (= (x939 1461501637330902918203684832716283019655932542975 x833) x1723) (not x1684) (<= 0 x1961) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2331 x1878))) (and (= x261 (x939 1461501637330902918203684832716283019655932542975 x833)) (= x407 (x710 (x338 x1596) (x1823 6) 0)) x1684 (= x2417 (x710 (x338 x261) x407 0)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x509) (>= x509 0) (<= x1672 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x225 (= 0 x1124)) (= x893 (x939 1461501637330902918203684832716283019655932542975 x833)) (= (x2186 x511 1) x40) (= x362 (x915 (+ x2140 32))) (or (and (not x1843) (= x1004 (x939 1461501637330902918203684832716283019655932542975 x833)) (= x980 (x710 (x338 x1596) (x1823 10) 0)) (= x826 (x710 (x338 x1004) x980 0))) x1843) (or (and (= x2005 1) (= (div x901 x1672) x610) (< 0 x1672) (= x845 (x939 x2005 x1344)) (= x699 x485) (or (and (= x318 (x939 1461501637330902918203684832716283019655932542975 x833)) (>= x1758 0) (= x1591 (x2023 128)) (< 0 x588) x1457 (= x662 (x710 (x338 x1596) (x1823 4) 0)) (<= x804 1461501637330902918203684832716283019655932542975) (> x1591 0) (>= x865 0) (= (x2263 x2002) x865) (= (x939 1461501637330902918203684832716283019655932542975 x833) x368) (= x2414 x713) (= x804 (x1745 164)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x865) (= x431 x1641) (= x1758 (x479 x213)) (= x2038 (* x865 x610)) (= (+ x2414 x1641) x968) (or (and x276 (= 0 x2232) (= x1155 (x710 (x338 x1694) x986 0)) (= (x479 x1359) x2232) (not x194) (<= x2232 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1807 (x1513 192)) (> x588 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1807 x1780)) (= x1780 (div x370 1000000000000000000)) (= (x2023 128) x285) (= (x1745 196) x1694) (= x1671 (+ x1977 x1629)) (= x1977 x1780) (= (* x610 x47) x370) (= (x710 (x338 x1596) (x1823 11) 0) x1390) (= (x1745 196) x689) (>= 1461501637330902918203684832716283019655932542975 x689) (> x588 1) (= (x939 1461501637330902918203684832716283019655932542975 x833) x499) (= x194 (> x588 2)) (>= x47 0) (= x986 (x710 (x338 x1197) x1390 0)) (= x1359 (x710 (x338 x689) x1141 0)) (= x1197 (x939 1461501637330902918203684832716283019655932542975 x833)) (= x1629 x1807) (>= 1461501637330902918203684832716283019655932542975 x1694) (= (x710 (x338 x2426) x1140 0) x1141) (= x1140 (x710 (x338 x499) x913 0)) (<= x47 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 1 x285) (= (x2263 x1155) x47) (<= 0 x2232) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x47 x610)) (= x913 (x710 (x338 x1596) (x1823 4) 0))) (not x276)) (= (x710 (x338 x2426) x1781 0) x1138) (= (x710 (x338 x804) x1138 0) x213) (= (x1815 160) x713) (= (x710 (x338 x1596) (x1823 11) 0) x1525) (>= 1461501637330902918203684832716283019655932542975 x2114) (< (+ x713 x431) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1758 0) (= x276 (< 1 x588)) (<= x1758 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (div x2038 1000000000000000000) x431) (= (x710 (x338 x2114) x2422 0) x2002) (= (x1745 164) x2114) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x865 x610)) (= x2422 (x710 (x338 x318) x1525 0)) (= x1781 (x710 (x338 x368) x662 0)) (< 0 x588)) (not x1457)) (= (mod (* x1124 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x901) (= x1457 (< 0 x588)) (= x485 (x915 (+ x1596 1))) (= x845 0) (= x1344 (ite (> x1124 115792089237316195423570985008687907853269984665640564039457) 1 0)) (not x225)) (and (= x628 (x915 (+ 1 x1596))) (= x699 x628) x225)) (= (x710 (x338 x2426) x2228 0) x222) (= (= 0 x1305) x1843) (= (x710 (x338 x1596) (x1823 1) 0) x511) (= x419 (x939 1461501637330902918203684832716283019655932542975 x833)) (<= x1124 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1672 0) (= x1662 (x915 (+ 64 x2140))) (= x1802 (x710 (x338 x1596) (x1823 3) 0))) x667)))
(assert (= (x401 x2022) 0))
(assert (x2045 x251))
(assert (x2045 x1749))
(assert (x2045 x729))
(assert (x2045 x703))
(assert (= (ite (and x96 x1013) (x1669 160) (x1028 160)) (x1815 160)))
(assert (x2045 x1631))
(assert (x2045 x429))
(assert (x2045 x320))
(assert (x2045 x224))
(assert (x2045 x1671))
(assert (x2045 x1898))
(assert (=> (<= x1632 10000) (= (x338 x1632) (x1823 x1632))))
(assert (x2045 x439))
(assert (=> (>= 10000 x2366) (= (x1823 x2366) (x338 x2366))))
(assert (= (x1987 (x1823 2211524764)) 2211524764))
(assert (=> (>= 10000 x1259) (= (x338 x1259) (x1823 x1259))))
(assert (x341 x893))
(assert (x2045 x1589))
(assert (x2045 x37))
(assert (x2045 x1225))
(assert (= (x338 1461501637330902918203684832716283019655932542975) (x1823 1461501637330902918203684832716283019655932542975)))
(assert (= x689 (x1987 (x338 x689))))
(assert (x2045 x474))
(assert (x2045 x411))
(assert (x2045 x1315))
(assert (x2045 x846))
(assert (=> (>= 10000 x1089) (= (x1823 x1089) (x338 x1089))))
(assert (= x151 (x1987 (x338 x151))))
(assert (x2045 x1619))
(assert (x341 x661))
(assert (x2045 x1770))
(assert (x2045 x1462))
(assert (= (=> (= (= 274184521717934524641157099916833587214 x2344) x883) (and (=> (not x883) x87) (=> (and (not x1449) (= (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0) x1555) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1274) (not x1309) (= x2216 274184521717934524641157099916833587206) (= 2835717307 x1009) (= x2076 (x1939 (- x1743 4))) (= 1 x1168) (not x2153) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x657) (= x2160 x2176) (= x2243 x1918) (= x2153 (or (> x2076 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2076) true) (> 64 x2076)))) (= x1747 x2347) (= x354 (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0)) (<= 0 x1463) (= (> x2176 x1463) x1309) (= x1149 32) (= x657 (x964 x1651)) (not x2419) (= x62 x1743) (<= 0 x657) (not (= 826074471 x1009)) (not (= 2514000705 x1009)) (= (x781 x354) x1463) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x657 x2243)) (= (x710 (x338 x2347) (x1823 1) 0) x1651) (not (< x1743 4)) (= x2176 x2243) (not (= x1009 649617121)) x883 (= x1449 (< x1463 x2243)) (= x2419 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2243 x657))) (= x657 x636) (<= x1463 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 1889567281 x1009)) (= x1235 (x676 (x338 274184521717934524641157099916833587214))) (<= x2347 1461501637330902918203684832716283019655932542975) (= x1126 (x1939 (- x1463 x2176))) (not (> 649617121 x1009)) (= x1743 68) (= x2347 x1902) (= (+ x1918 x636) x2431) (= (x710 (x338 x2347) (x1823 1) 0) x1475) (< 0 x1235) (= 274184521717934524641157099916833587206 x1462)) x1298))) x945))
(assert (=> (>= 10000 x1700) (= (x338 x1700) (x1823 x1700))))
(assert (x2045 x1696))
(assert (x2045 x930))
(assert (x2045 x2050))
(assert (x2045 x718))
(assert (= (x288 x1352) (ite (and x906 (not x1071)) (x33 x1352) (x1426 x1352))))
(assert (= x1466 (x1987 (x338 x1466))))
(assert (x2045 x171))
(assert (= (x1987 (x338 x1995)) x1995))
(assert (x341 x2149))
(assert (=> (>= 10000 x1653) (= (x338 x1653) (x1823 x1653))))
(assert (=> (>= 10000 x783) (= (x1823 x783) (x338 x783))))
(assert (x2045 x318))
(assert (x1346 x855))
(assert (= (x1987 (x338 x2348)) x2348))
(assert (= (x1987 (x1823 2293535753)) 2293535753))
(assert (= x2420 x734))
(assert (x2045 x1084))
(assert (x2045 x2033))
(assert (= (x338 826074471) (x1823 826074471)))
(assert (x2045 x803))
(assert (x2045 x1412))
(assert (x2045 x624))
(assert (= (x572 x1690) 0))
(assert (x341 x2247))
(assert (x2045 x2307))
(assert (x341 x1110))
(assert (x341 x1089))
(assert (x2045 x2149))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1987 (x1823 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x2045 x1538))
(assert (x2045 x181))
(assert (x2045 x561))
(assert (=> (>= 10000 x1723) (= (x1823 x1723) (x338 x1723))))
(assert (x1346 x1646))
(assert (x2045 x448))
(assert (= (=> (and (= x666 x1601) (= (x75 (x338 x1865)) x395) (= x536 (= x1865 274184521717934524641157099916833587218)) (= x1842 (x1079 (x338 x1865))) x898 x1420 (= x1530 (x1079 (x338 274184521717934524641157099916833587206))) (= x1420 (< x1842 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2119 (x1079 (x338 274184521717934524641157099916833587206))) (= (< (x75 (x338 x1865)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x898) (= (>= x2119 0) x1808) x1808) (and (=> (and (= x1716 274184521717934524641157099916833587206) (= x328 (> x1814 x2004)) (= x2429 (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0)) (= 2835717307 x1578) (= x79 x1814) (not x1707) (= x221 x352) (not x1519) (= (x710 (x338 x1811) (x1823 1) 0) x1658) (not x328) (not (= x1578 649617121)) (not x1828) (= x1399 274184521717934524641157099916833587206) (= (x939 1461501637330902918203684832716283019655932542975 x352) x1811) (= x502 x154) (= (or (> x2337 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2337 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x2337))) x1707) (= 1 x1722) (= x1081 x79) (< 0 x2069) (= x1828 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2394 x1814))) (= x1519 (> x79 x2004)) (= x259 (+ x2083 x355)) (= (x676 (x338 274184521717934524641157099916833587218)) x2069) (= 68 x2) (= x1814 x2083) (not (= 826074471 x1578)) (= x197 (x710 (x338 274184521717934524641157099916833587206) (x1823 1) 0)) (>= x2004 0) (= x2 x666) (= x634 (x939 1461501637330902918203684832716283019655932542975 x352)) (not (= x1578 2514000705)) (>= x2394 0) (= x434 32) (not (> 4 x2)) (not (= 1889567281 x1578)) (not (> 649617121 x1578)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2004) (= (x710 (x338 x634) (x1823 1) 0) x1387) (< (+ x1814 x2394) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x355 x2394) (= x1184 76450787359836037641860180984291677749980919077056822294353438043884394381312) (<= x2394 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2387 x2429) x2004) (= (x1939 (- x2 4)) x2337) x536 (= x2394 (x1670 x1658)) (>= 1461501637330902918203684832716283019655932542975 x352) (= (x1939 (- x2004 x79)) x991)) x2219) (=> (not x536) x618))) x1433))
(assert (= (=> (and (< 0 x2181) (= (x710 (x338 x1464) x1838 0) x2396) (= x390 x2054) (= (x710 (x338 x433) (x1823 3) 0) x985) (> 2960351575 x1432) (>= x2054 0) (not (< x1432 2690754053)) (= 2743102681 x1432) (>= 1461501637330902918203684832716283019655932542975 x1464) (= (x710 (x338 x1682) x985 0) x1838) (= x2181 (x676 (x338 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x1682) (not (< x1432 2293535753)) (= (x1472 x2396) x2054) (not (= x1432 2690754053)) (<= x2054 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= (= 1 x1569) x58) (= x373 x180) x58 (= x1817 x157) x1169 (= x1169 (= 274184521717934524641157099916833587214 x157)) (= x972 274184521717934524641157099916833587214) (= x390 x1569) (= 1 x1381)) x649)) x1107))
(assert (x2045 x246))
(assert (= x2277 (x1987 (x338 x2277))))
(assert (x2045 x570))
(assert (x2045 x2238))
(assert (x2045 x2286))
(assert (= x230 (and x2062 (not x2034))))
(assert (= (ite (and x2078 x225) (x1815 160) (ite (and x1457 (not x225) (not x276) x2078) (x1513 160) (ite (and (not x225) (not x1457) x2078) (x1815 160) (x1844 160)))) (x25 160)))
(assert (= x97 (x1987 (x338 x97))))
(assert (x2045 x2333))
(assert (= (x338 274184521717934524641157099916833587214) (x1823 274184521717934524641157099916833587214)))
(assert (x2045 x1432))
(assert (x2045 x409))
(assert (= (x1987 (x1823 826074471)) 826074471))
(assert (x341 x296))
(assert (x341 274184521717934524641157099916833587206))
(assert (x341 x936))
(assert (=> (<= x2044 10000) (= (x338 x2044) (x1823 x2044))))
(assert (x2045 x567))
(assert (x2045 x1642))
(assert (= (=> (and (<= 0 x1078) (= (x710 (x338 x2426) x1488 0) x1419) (= (x710 (x338 x699) (x1823 7) 0) x367) (= (x710 (x338 x858) x367 0) x1488) (= (= 0 x1078) x359) (<= x1078 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1078 (x1564 x1419)) (= (x939 1461501637330902918203684832716283019655932542975 x833) x858)) (and (=> (and (not x359) (= x1175 x699)) x2073) (=> x359 x1348))) x1836))
(assert (x341 x630))
(assert (x1346 1461501637330902918203684832716283019655932542975))
(assert (x583 x1037 x493))
(assert (= (x1987 (x338 x1695)) x1695))
(assert (x2045 x332))
(assert (= x1207 (x1987 (x338 x1207))))
(assert (x2045 x255))
(assert (x2045 x126))
(assert (= (x1987 (x1823 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x2045 x791))
(assert (x2045 x2070))
(assert (= (ite (and x536 x863) (x336 x1912) (x2387 x1912)) (x2283 x1912)))
(assert (= (or (and x2029 (not x243)) (and x2137 x106) (and (not x482) x2375)) x943))
(assert (= (or (and x1068 x1347) (and (not x1430) x528) (and x1941 (not x1160))) x1279))
(assert (=> (>= 10000 x1105) (= (x338 x1105) (x1823 x1105))))
(assert (x2045 x888))
(assert (x2045 x1974))
(assert (=> (>= 10000 x2057) (= (x1823 x2057) (x338 x2057))))
(assert (x2045 x1597))
(assert (x2045 x633))
(assert (= x1697 (x1987 (x338 x1697))))
(assert (= (x1987 (x1823 243137395)) 243137395))
(assert (x2045 x1081))
(assert (=> (>= 10000 x296) (= (x338 x296) (x1823 x296))))
(assert (=> (>= 10000 x2108) (= (x1823 x2108) (x338 x2108))))
(assert (= x613 (x1987 (x338 x613))))
(assert (x2045 x1949))
(assert (x2045 x1197))
(assert (x2045 x280))
(assert (x2045 x1634))
(assert (x2045 x1814))
(assert (x1346 x1139))
(assert (= (or (and (not x1931) x478) (and x1424 (not x517))) x1497))
(assert (= x513 (x1987 (x338 x513))))
(assert (=> (<= x1630 10000) (= (x338 x1630) (x1823 x1630))))
(assert (= (x1492 x914) (ite (and x536 x863) (x2063 x914) (x2089 x914))))
(assert (= (and x528 x1430) x1363))
(assert (x2045 x1219))
(assert (x2045 x2359))
(assert (= (and (not x2291) x399) x1181))
(assert (x2045 x1223))
(assert (x341 x2093))
(assert (= x2096 (or (and x1068 (not x1347)) (and (not x359) x1363))))
(assert (= 0 (x1750 x503)))
(assert (x2045 x1443))
(assert (=> (>= 10000 x351) (= (x338 x351) (x1823 x351))))
(assert (x2045 x257))
(assert (x341 274184521717934524641157099916833587218))
(assert (x2045 x2266))
(assert (=> (<= x2279 10000) (= (x338 x2279) (x1823 x2279))))
(assert (x341 x2044))
(assert (x2045 x1824))
(assert (x341 x1630))
(assert (=> (>= 10000 x2151) (= (x1823 x2151) (x338 x2151))))
(assert (x341 x2057))
(assert (= x1019 (=> (and (= x1208 (x710 (x338 x1630) x1725 0)) (<= x1103 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1103 0) (= (x1665 x1208) x1103) (= (x710 (x338 x1089) (x1823 7) 0) x2001) (= x832 (x939 1461501637330902918203684832716283019655932542975 x1090)) (= x1630 (x939 1461501637330902918203684832716283019655932542975 x1695)) (= x471 (= 0 x1103)) (= (x710 (x338 x832) x2001 0) x1725)) (and (=> (and (not x1398) (= x219 (x1939 (- x1089 1))) x471 (= x1398 (< 0 x219))) x1976) (=> (and (not x471) (= x1089 x1227)) x1066)))))
(assert (= x1810 (and x1417 x1858)))
(assert (x2045 x1878))
(assert (= (x114 x380) 0))
(assert (=> (>= 10000 x2347) (= (x1823 x2347) (x338 x2347))))
(assert (x341 x955))
(assert (x341 x505))
(assert (x2045 x701))
(assert (= (or (and x2227 x999) (and x536 x863)) x1857))
(assert (x341 x1065))
(assert (= 0 (x1750 x1675)))
(assert (= (=> (and (= (x710 (x338 x692) x1518 0) x1755) (= (x1665 x242) x2173) (= x692 (x939 1461501637330902918203684832716283019655932542975 x833)) (= x193 (= x2173 0)) (= (x710 (x338 x2426) x1755 0) x242) (= x1518 (x710 (x338 x1596) (x1823 7) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2173) (>= x2173 0)) (and (=> (and (= x1213 x1596) (not x193)) x1244) (=> x193 x270))) x147))
(assert (x2045 x1732))
(assert (x341 x854))
(assert (x2045 x435))
(assert (x2045 x378))
(assert (x2045 x2215))
(assert (x2045 x1099))
(assert (x2045 x2235))
(assert (= x1653 (x1987 (x338 x1653))))
(assert (x2045 x687))
(assert (x2045 x164))
(assert (x156 x2238 x1456))
(assert (x2045 x1655))
(assert (x2045 x35))
(assert (x2045 x1033))
(assert (x2045 x43))
(assert (x1346 x1224))
(assert (x2045 x1991))
(assert (x341 x1361))
(assert (x2045 x2243))
(assert (x1346 x227))
(assert (= (=> (= (= 274184521717934524641157099916833587214 x2432) x1845) (and (=> (not x1845) x875) (=> (and (<= x500 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x710 (x338 x570) (x1823 1) 0) x914) (= x500 (x1934 x914)) (<= 0 x500) (= 36 x1401) (not (< x1203 649617121)) x1845 (= x1401 36) (= x593 1) (= x1203 1889567281) (not x2086) (not (> 4 x1401)) (< 0 x655) (not (= 649617121 x1203)) (= (x676 (x338 274184521717934524641157099916833587214)) x655) (= x2013 (x1939 (- x1401 4))) (= x18 32) (<= x1824 1461501637330902918203684832716283019655932542975) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x138) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2013) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2013)) (< x2013 32))) x2086) (= x1824 x570) (not (= x1203 826074471))) x1095))) x1454))
(assert (x2045 x579))
(assert (= (=> (and (= x1886 x2286) (not (< x1590 911411945)) (< x1590 2293535753) (not (< x1590 1968616202)) (<= x1886 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x448) (= (x676 (x338 274184521717934524641157099916833587206)) x448) (not (= x1590 1968616202)) (>= x1886 0) (= x1590 1986467848)) (=> (and (= x600 (> x2333 x373)) (= x2286 x2333) x600 (= x377 x180) (= x2348 x363)) x158)) x649))
(assert (x2045 x254))
(assert (x341 x2275))
(assert (= (x1823 142201243) (x338 142201243)))
(assert (x341 x1001))
(assert (=> (>= 10000 x698) (= (x1823 x698) (x338 x698))))
(assert (=> (>= 10000 x1001) (= (x1823 x1001) (x338 x1001))))
(assert (= x318 (x1987 (x338 x318))))
(assert (=> (>= 10000 x433) (= (x338 x433) (x1823 x433))))
(assert (= x537 true))
(assert (x2045 x693))
(assert (x2045 x996))
(assert (= x1941 (and x1363 x359)))
(assert (x2045 x1104))
(assert (=> (>= 10000 x364) (= (x338 x364) (x1823 x364))))
(assert (x2045 x1259))
(assert (x341 x539))
(assert (x2045 x1144))
(assert (= x2403 (x1987 (x338 x2403))))
(assert (=> (>= 10000 x2277) (= (x1823 x2277) (x338 x2277))))
(assert (= x165 x1479))
(assert (x2045 x839))
(assert (x341 x1619))
(assert (x2045 x1586))
(assert (= (or (and x1268 x1181) x1053) x124))
(assert (x2045 x1694))
(assert (x2045 x198))
(assert (x2045 x15))
(assert (x341 x689))
(assert (= x872 (and x2080 x2064)))
(assert (=> (<= x1083 10000) (= (x1823 x1083) (x338 x1083))))
(assert (x2045 x154))
(assert (x2045 x598))
(assert (=> (>= 10000 x53) (= (x1823 x53) (x338 x53))))
(assert (x341 x874))
(assert (= (x338 1986467848) (x1823 1986467848)))
(assert (x2045 x1249))
(assert (= (x1987 (x338 x1455)) x1455))
(assert (= x1362 (x1987 (x338 x1362))))
(assert (=> (>= 10000 x597) (= (x1823 x597) (x338 x597))))
(assert (x2045 x340))
(assert (=> (<= x1232 10000) (= (x338 x1232) (x1823 x1232))))
(assert (= x1301 (or (and (not x1710) x2088) x1533 (and (not x2064) x2080))))
(assert (= x164 (x1987 (x338 x164))))
(assert (x2045 x1177))
(assert (=> (>= 10000 x1150) (= (x1823 x1150) (x338 x1150))))
(assert (=> (<= x2344 10000) (= (x338 x2344) (x1823 x2344))))
(assert (= (x338 1968616202) (x1823 1968616202)))
(assert (x2045 x515))
(assert (= x858 (x1987 (x338 x858))))
(assert (x2045 x321))
(assert (x2045 x1721))
(assert (x341 x567))
(assert (= x296 (x1987 (x338 x296))))
(assert (x2045 x1756))
(assert (=> (>= 10000 x2112) (= (x338 x2112) (x1823 x2112))))
(assert (= (=> (and (= x2335 (= 0 x1483)) (or (and (= (x939 1461501637330902918203684832716283019655932542975 x1695) x598) (>= x802 0) (= (x710 (x338 x1483) (x1823 9) 0) x542) (= x2388 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x802) (= x700 (x710 (x338 x598) x1073 0)) (not x2335) (= x802 (x925 x700)) (= x706 x802) (= x2378 (x939 1461501637330902918203684832716283019655932542975 x1090)) (= (x710 (x338 x2378) x542 0) x1073)) (and x2335 (= x706 0) (= x2388 0)))) x1379) x108))
(assert (= (x1987 (x338 x2344)) x2344))
(assert (= 1889567281 (x1987 (x1823 1889567281))))
(assert (=> (>= 10000 x832) (= (x338 x832) (x1823 x832))))
(assert (= x12 (x1987 (x338 x12))))
(assert (x2045 x1388))
(assert (x2045 x1622))
(assert (= (x1987 (x338 x1224)) x1224))
(assert (x2045 x117))
(assert (x2045 x1209))
(assert (x2045 x1365))
(assert (= (x1823 243137395) (x338 243137395)))
(assert (x2045 x2256))
(assert (x2045 x1305))
(assert (x341 x1723))
(assert (= (x1823 1889567281) (x338 1889567281)))
(assert (x2045 x849))
(assert (x2045 x2246))
(assert (x341 x297))
(assert (=> (<= x571 10000) (= (x1823 x571) (x338 x571))))
(assert (= x738 (and x2163 x193)))
(assert (= (x1763 x1200) 0))
(assert (x341 x634))
(assert (x2045 x1080))
(assert (x2045 x646))
(assert (x2045 x873))
(assert (x2045 x1886))
(assert (x2045 x1927))
(assert (x2045 x1149))
(assert (x2045 x706))
(assert (x2045 x2277))
(assert (x2045 x2306))
(assert (x2045 x1221))
(assert (x2045 x539))
(assert (= (=> (= x2265 (> x1596 0)) (and (=> (not x2265) x742) (=> x2265 x393))) x568))
(assert (x2045 x854))
(assert (=> (<= x419 10000) (= (x338 x419) (x1823 x419))))
(assert (x2045 x885))
(assert (=> (>= 10000 x17) (= (x1823 x17) (x338 x17))))
(assert (x2045 x1465))
(assert (x2045 x647))
(assert (x2045 x845))
(assert (= x1668 (and x1894 x1773)))
(assert (x2045 x861))
(assert (= x106 (and x2029 x243)))
(assert (x2045 x2347))
(assert (= (or x1966 x1650) x1468))
(assert (x2045 x456))
(assert (= (x1987 (x338 x1150)) x1150))
(assert (x2045 x1811))
(assert (= x111 (x1987 (x338 x111))))
(assert (x2045 x2346))
(assert (x341 x1816))
(assert (x341 x453))
(assert (x2045 x766))
(assert (=> (>= 10000 x2093) (= (x338 x2093) (x1823 x2093))))
(assert (= x1083 (x1987 (x338 x1083))))
(assert (x2045 x2358))
(assert (= x191 (x1987 (x338 x191))))
(assert (x2045 x1282))
(assert (x583 x1104 x1240))
(assert (x2045 x432))
(assert (x2045 x1544))
(assert (x2045 x449))
(assert (x341 x523))
(assert (x2045 x750))
(assert (= (=> (and (>= x1757 0) (<= x1757 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1431 (x710 (x338 x955) (x1823 7) 0)) (= x798 (x710 (x338 x1466) x1431 0)) (= (x710 (x338 x2426) x798 0) x1895) (= (x1564 x1895) x1757) (= (x939 1461501637330902918203684832716283019655932542975 x833) x1466) (= (= 0 x1757) x1347)) (and (=> (and (= x669 (< 0 x1132)) (= (x1939 (- x955 1)) x1132) x1347 (not x669)) x850) (=> (and (not x1347) (= x955 x1175)) x2073))) x2056))
(assert (= (x1987 (x338 x1596)) x1596))
(assert (= (x1823 2743102681) (x338 2743102681)))
(assert (x2045 x1367))
(assert (=> (<= x2139 10000) (= (x338 x2139) (x1823 x2139))))
(assert (= (and x872 (not x1042)) x1877))
(assert (= x641 (=> (and (= x188 (x939 1461501637330902918203684832716283019655932542975 x833)) (= x2300 (x691 x1461)) (<= 0 x2300) (= (x710 (x338 x699) (x1823 6) 0) x1328) (= x1461 (x710 (x338 x188) x1328 0)) (<= x2300 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x2300) x253)) (and (=> x253 x1215) (=> (and (not x253) (= x699 x495)) x1006)))))
(assert (x2045 x2426))
(assert (x2045 x720))
(assert (x2045 x1757))
(assert (x2045 x2081))
(assert (x2045 x2289))
(assert (= (x1987 (x338 x696)) x696))
(assert (=> (>= 10000 x805) (= (x338 x805) (x1823 x805))))
(assert (= x1038 (and x1226 x2315)))
(assert (x2045 x534))
(assert (x2045 x2162))
(assert (= (x1823 26959946667150639794667015087019630673637144422540572481103610249215) (x338 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x341 x571))
(assert (x2045 x1723))
(assert (x2045 x337))
(assert (x2045 x1993))
(assert (x1346 x833))
(assert (x341 x1197))
(assert (x2045 x1240))
(assert (= (x1987 (x338 x783)) x783))
(assert (= (ite (and x1803 x124) (x1472 x525) (ite (and x159 x124 (not x1803)) (x1472 x525) (x1867 x525))) (x2185 x525)))
(assert (x2045 x2))
(assert (x2045 x119))
(assert (x2045 x1746))
(assert (x2045 x262))
(assert (= (x1987 (x1823 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (x2045 x1199))
(assert (x2045 x2004))
(assert (= x1110 (x1987 (x338 x1110))))
(assert (x341 x1697))
(assert (=> (>= 10000 x893) (= (x338 x893) (x1823 x893))))
(assert (= (=> (and (= x2205 (x694 x202)) (>= x2205 0) (<= x2205 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x94 x2370) x2155) (= (x915 (+ x1699 32)) x2370) (= x1676 (x361 x1134)) (= x731 (= 0 x248)) (or (and (= x255 (x939 1461501637330902918203684832716283019655932542975 x2238)) (not x2383)) x2383) (= x1134 (x2186 x2267 1)) (= x2377 (< x2205 x2155)) (or (and (= x248 0) (not x2377)) (and x2377 (= x1826 (> x2196 x793)) (= x2302 (= 0 x2205)) (= x793 (x94 x2370)) (or (and (= (x1939 (- x2304 x1586)) x2128) (= x248 x2128) (= (x436 x1699) x1586) x2302 (not (< x2304 x1586))) (and (= x1108 604800) (= x1861 (ite (> 604800 x2310) x2310 604800)) (= x248 x1861) (= x2310 (x1939 (- x2304 x2205))) (not (> x2205 x2304)) (not x2302))) (or (and (= (x94 x2370) x315) (= x315 x2304) x1826) (and (= x2196 x2304) (not x1826))))) (<= x1029 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x939 1461501637330902918203684832716283019655932542975 x2238) x1574) (= (x2349 x2267) x1029) (>= x1029 0) (= x2383 (= 0 x2015)) (<= x1676 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x710 (x338 x1574) x1616 0) x202) (= x2267 (x710 (x338 x2057) (x1823 1) 0)) (>= x1676 0) (= x1608 (x915 (+ x1699 64))) (or (and (= (x710 (x338 x411) x466 0) x1410) (<= x83 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x83) (= (x288 x1410) x83) (= x796 (+ x596 x1248)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2132 x83)) (= x596 x2132) (= (x710 (x338 x2057) (x1823 5) 0) x466) (= (x939 1461501637330902918203684832716283019655932542975 x2238) x411) (= x83 x1248) (not x731) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x248 x486)) (= x879 x2132) (= x879 (* x486 x248)) (= x1412 (x939 1461501637330902918203684832716283019655932542975 x2238))) (and (= x1178 (x939 1461501637330902918203684832716283019655932542975 x2238)) x731)) (= (x710 (x338 x2057) (x1823 6) 0) x1616)) x1924) x1335))
(assert (x2045 x1692))
(assert (x2045 x1578))
(assert (= (x1987 (x1823 69947311)) 69947311))
(assert (x341 x188))
(assert (x2045 x877))
(assert (x2045 x569))
(assert (x2045 x920))
(assert (x1346 x1240))
(assert (x2045 x1849))
(assert (= x1805 (x1987 (x338 x1805))))
(assert (= x1620 (x1987 (x338 x1620))))
(assert (x2045 x1556))
(assert (x341 x1700))
(assert (x981 x227 x1883))
(assert (x2045 x1888))
(assert (=> (>= 10000 x2149) (= (x338 x2149) (x1823 x2149))))
(assert (x981 x1139 x1300))
(assert (x2045 x1632))
(assert (= (x1987 (x338 x1320)) x1320))
(assert (x2045 x1097))
(assert (= (x1987 (x338 x1065)) x1065))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x1987 (x1823 115792089237316195423570985008687907853269984665640564039457))))
(assert (x2045 x2322))
(assert (x341 x1632))
(assert (=> (<= x1805 10000) (= (x338 x1805) (x1823 x1805))))
(assert (x2045 x1778))
(assert (x2045 x813))
(assert (x2045 x2280))
(assert (x2045 x2172))
(assert (= (=> (= x1640 (= 274184521717934524641157099916833587214 x1219)) (and (=> (not x1640) x537) (=> (and (= 32 x1550) (= x2252 (x710 (x338 x1362) (x1823 1) 0)) (not (= 826074471 x1830)) (= x340 x1362) (not x461) (= x484 1) (not (= x1830 649617121)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x829) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2240) (= x927 36) (<= x340 1461501637330902918203684832716283019655932542975) (not (< x1830 649617121)) (= 1889567281 x1830) (= 36 x927) (= x777 (x1939 (- x927 4))) x1640 (= (x1173 x2252) x829) (not (> 4 x927)) (= (x676 (x338 274184521717934524641157099916833587214)) x2152) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x777) (and (> 32 x777) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x777) true))) x461) (> x2152 0) (>= x829 0)) x1508))) x1908))
(assert (x2045 x793))
(assert (x341 x2139))
(assert (= x1095 (=> (and (not (= 0 x593)) (= x2281 x737) (not (or (> x18 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x18 32) (= (<= x18 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x866 128) x2281)) x2143)))
(assert (x2045 x460))
(assert (x1346 x1104))
(assert (x2045 x1874))
(assert (= (or (and x1667 x721) (and (not x2373) x1810) (and (not x565) x1120)) x2352))
(assert (= x2208 (=> (= x482 (< 0 x699)) (and (=> x482 x641) (=> (not x482) x302)))))
(assert (x2045 x1712))
(assert (=> (<= x1995 10000) (= (x338 x1995) (x1823 x1995))))
(assert (= x539 (x1987 (x338 x539))))
(assert (x341 x2115))
(assert (x2045 x2275))
(assert (x2045 x2121))
(assert (x2045 x2090))
(assert (x2045 x237))
(assert (= (x23 x952) (ite (and (not x1835) (not x743) x329) (x2268 x952) (x1472 x952))))
(assert (x2045 x1283))
(assert (x341 x2172))
(assert (=> (<= x1090 10000) (= (x1823 x1090) (x338 x1090))))
(assert (x2045 x654))
(assert (x2045 x2374))
(assert (x2045 x2085))
(assert (x2045 x2093))
(assert (= x1709 (and x482 x2375)))
(assert (x2045 x987))
(assert (x2045 x1724))
(assert (x2045 x830))
(assert (x2045 x1955))
(assert (= 0 (x70 x1341)))
(assert (= (x338 2960351575) (x1823 2960351575)))
(assert (x2045 x1110))
(assert (x2045 x296))
(assert (= x2327 (x1987 (x338 x2327))))
(assert (x2045 x878))
(assert (= (x1987 (x1823 2835717307)) 2835717307))
(assert (=> (>= 10000 x1959) (= (x1823 x1959) (x338 x1959))))
(assert (=> (<= x104 10000) (= (x1823 x104) (x338 x104))))
(assert (x2045 x1265))
(assert (x2045 x1106))
(assert (x2045 x690))
(assert (x2045 x609))
(assert (x2045 x366))
(assert (= (x1987 (x338 x1090)) x1090))
(assert (x2045 x138))
(assert (= x778 (or (and x1038 (not x471)) (and (not x2395) x39))))
(assert (= x848 (or (and x389 (not x817)) (and x1526 (not x765)))))
(assert (= x1561 (=> (and (or (and (= 1 x2060) (= (x710 (x338 x251) x2389 0) x2058) (= (x939 1461501637330902918203684832716283019655932542975 x1224) x251) (= x1361 (x939 1461501637330902918203684832716283019655932542975 x2238)) (= x169 x1982) (= (x710 (x338 x1361) x864 0) x2389) (not x81) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x169) (<= 0 x169) (= (x710 (x338 x2070) (x1823 9) 0) x864) (= (x115 x2058) x169)) (and (= x1982 0) x81 (= 0 x2060))) (= x81 (= x2070 0))) x912)))
(assert (x2045 x322))
(assert (x2045 x1207))
(assert (= (x1987 (x338 x1285)) x1285))
(assert (x1346 x493))
(assert (x2045 x831))
(assert (x2045 x391))
(assert (= 0 (x70 x1798)))
(assert (x2045 x2386))
(assert (= (=> (and (or (and (= x768 0) (= 0 x136) x1171) (and (= (= x1365 0) x1760) (<= x1365 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x710 (x338 x53) (x1823 10) 0) x2292) (= x1365 (x1683 x445)) (= (x939 1461501637330902918203684832716283019655932542975 x833) x2121) (not x1171) (or (and (= x1365 x768) (not x1760) (= 1 x136)) (and (= 0 x768) (= 0 x136) x1760)) (= x445 (x710 (x338 x2121) x2292 0)) (>= x1365 0))) (= x1171 (= x53 0))) x614) x1145))
(assert (=> (>= 10000 x453) (= (x338 x453) (x1823 x453))))
(assert (= (x1987 (x338 x531)) x531))
(assert (= x1667 (and x1120 x565)))
(assert (= x104 (x1987 (x338 x104))))
(assert (x2045 x1982))
(assert (x2045 x1360))
(assert (= (x1987 (x338 x1682)) x1682))
(assert (= x1881 (=> (and (= x1522 (> (x676 (x338 274184521717934524641157099916833587214)) 0)) (= x180 x1724) x2276 x1522 (= x813 x1414) (= x363 x1451) (= x1776 (x1079 (x338 274184521717934524641157099916833587214))) (<= 0 x1817) (>= 1461501637330902918203684832716283019655932542975 x304) (>= x363 0) (<= 0 x846) (>= 1461501637330902918203684832716283019655932542975 x813) (>= 1461501637330902918203684832716283019655932542975 x1817) (<= 0 x304) (>= x1776 0) (= x2426 x497) (= (x1079 (x338 274184521717934524641157099916833587206)) x932) (= x2276 (< 0 (x676 (x338 274184521717934524641157099916833587206)))) (>= 1461501637330902918203684832716283019655932542975 x497) (<= x363 1461501637330902918203684832716283019655932542975) x714 (= (x1079 (x338 274184521717934524641157099916833587218)) x846) (>= x932 0) (= (> (x676 (x338 274184521717934524641157099916833587218)) 0) x714) (>= x497 0) (>= x813 0)) x992)))
(assert (=> (<= x319 10000) (= (x1823 x319) (x338 x319))))
(assert (x2045 x1818))
(assert (= (ite (and x1857 (not x1206)) (x995 x1798) (x70 x1798)) (x994 x1798)))
(assert (x2045 x2366))
(assert (x2045 x293))
(assert (x2045 x630))
(assert (x2045 x2094))
(assert (x2045 x1861))
(assert (= (x1987 (x338 x699)) x699))
(assert (= (x338 2258409472) (x1823 2258409472)))
(assert (x2045 x1747))
(assert (x2045 x2196))
(assert (x2045 x1378))
(assert (x2045 x188))
(assert (x2045 x2400))
(assert (x2045 x2225))
(assert (= (x338 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1823 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x2045 x305))
(assert (x2045 x345))
(assert (= (=> (= x1405 0) x1644) x850))
(assert (x2045 x2055))
(assert (= (=> (and (= (x694 x1970) x1428) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1428) (= x481 (x710 (x338 x2057) (x1823 6) 0)) (= (= 0 x1428) x405) (<= 0 x1428) (= (x710 (x338 x2327) x481 0) x1970) (= x2327 (x939 1461501637330902918203684832716283019655932542975 x2238))) (and (=> (and (not x405) (= x1014 x2057)) x1109) (=> x405 x977))) x1072))
(assert (x2045 x323))
(assert (=> (<= x1405 10000) (= (x338 x1405) (x1823 x1405))))
(assert (= x556 (x1987 (x338 x556))))
(assert (x2045 x2343))
(assert (= x1857 x2080))
(assert (= x1441 (x1987 (x338 x1441))))
(assert (= x1226 (and x39 x2395)))
(assert (x341 x499))
(assert (x2045 x492))
(assert (x2045 x53))
(assert (= (x1987 (x338 x2093)) x2093))
(assert (x2045 x335))
(assert (= (x1987 (x338 x1451)) x1451))
(assert (= (=> (= (> x1579 0) x1645) (and (=> (not x1645) x1976) (=> x1645 x2048))) x388))
(assert (x2045 x1574))
(assert (= (x338 2835717307) (x1823 2835717307)))
(assert (x2045 x1720))
(assert (x2045 x2388))
(assert (= (x1750 x750) 0))
(assert (x2045 x236))
(assert (= x661 (x1987 (x338 x661))))
(assert (x2045 x500))
(assert (x2045 x1563))
(assert (x2045 x751))
(assert (= x297 (x1987 (x338 x297))))
(assert (x2045 x2378))
(assert (x2045 x789))
(assert (x1346 x430))
(assert (x2045 x2369))
(assert (x2045 x617))
(assert (x2045 x2299))
(assert (= (x1987 (x1823 2764855426)) 2764855426))
(assert (x2045 x2139))
(assert (x2045 x1539))
(assert (= (x1987 (x338 x1694)) x1694))
(assert (x2045 x689))
(assert (x2045 x2102))
(assert (=> (<= x151 10000) (= (x338 x151) (x1823 x151))))
(assert (x2045 x608))
(assert (x2045 x2106))
(assert (x2045 x327))
(assert (= (+ (x1987 x13) 1) (x1987 (x2186 x13 1))))
(assert (x2045 x1175))
(assert (= x578 (=> (and (= x1362 x304) (= x1817 x1219)) x532)))
(assert (x2045 x2135))
(assert (x2045 x369))
(assert (x2045 x1395))
(assert (x2045 x1018))
(assert (x2045 x1718))
(assert (= (x1987 (x338 x377)) x377))
(assert (x341 x1579))
(assert (x2045 x1037))
(assert (= 0 (x1750 x1850)))
(assert (x2045 x642))
(check-sat)
