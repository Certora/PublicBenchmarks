(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x646 0)) (((x869 (x19 x646) (x106 x646) (x132 Int)) (x598 (x555 Int)) (x894 (x770 x646) (x1013 Int)))))
(declare-fun x142 () Int)
(declare-fun x622 () Int)
(declare-fun x562 () x646)
(declare-fun x794 () Int)
(declare-fun x695 () Bool)
(declare-fun x277 () Int)
(declare-fun x808 () Int)
(declare-fun x1217 () x646)
(declare-fun x759 () Int)
(declare-fun x553 () x646)
(declare-fun x929 () Int)
(declare-fun x298 () Int)
(declare-fun x252 () x646)
(declare-fun x190 () Bool)
(declare-fun x910 () Bool)
(declare-fun x194 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x30 () Bool)
(declare-fun x529 () Int)
(declare-fun x669 () Bool)
(declare-fun x1183 () Int)
(declare-fun x651 () x646)
(declare-fun x1212 () Bool)
(declare-fun x750 () Int)
(declare-fun x113 () x646)
(declare-fun x419 () x646)
(declare-fun x847 () Int)
(declare-fun x650 () Bool)
(declare-fun x341 () Int)
(declare-fun x437 () Bool)
(declare-fun x791 () Int)
(declare-fun x780 () x646)
(declare-fun x786 () Int)
(declare-fun x763 () Int)
(declare-fun x872 () Int)
(declare-fun x35 () x646)
(declare-fun x674 () Int)
(declare-fun x1279 () Int)
(declare-fun x86 () Int)
(declare-fun x475 () Bool)
(declare-fun x496 (Int) Int)
(declare-fun x424 () Bool)
(declare-fun x535 () x646)
(declare-fun x647 () x646)
(declare-fun x641 () Bool)
(declare-fun x1218 () Int)
(declare-fun x380 () x646)
(declare-fun x488 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x975 () Int)
(declare-fun x1062 () Bool)
(declare-fun x227 () x646)
(declare-fun x179 (Int) Int)
(declare-fun x738 (Int) Int)
(declare-fun x126 () Bool)
(declare-fun x918 () Int)
(declare-fun x543 () x646)
(declare-fun x1123 () Bool)
(declare-fun x444 () Bool)
(declare-fun x911 () Bool)
(declare-fun x888 () x646)
(declare-fun x678 () Int)
(declare-fun x1102 () Bool)
(declare-fun x1 () Int)
(declare-fun x708 () Int)
(declare-fun x305 () Int)
(declare-fun x548 () Int)
(declare-fun x1111 () Int)
(declare-fun x785 () Int)
(declare-fun x685 () Int)
(declare-fun x964 () Bool)
(declare-fun x829 () x646)
(declare-fun x1274 () Bool)
(declare-fun x615 () Bool)
(declare-fun x704 () Int)
(declare-fun x877 () Bool)
(declare-fun x624 () Bool)
(declare-fun x635 () Int)
(declare-fun x521 () x646)
(declare-fun x958 () Int)
(declare-fun x266 () Int)
(declare-fun x1074 () Bool)
(declare-fun x311 () Int)
(declare-fun x1175 () Int)
(declare-fun x422 () Int)
(declare-fun x330 () x646)
(declare-fun x855 () Bool)
(declare-fun x108 () Bool)
(declare-fun x1178 () Bool)
(declare-fun x14 () Int)
(declare-fun x1056 () Int)
(declare-fun x891 () Int)
(declare-fun x912 () Bool)
(declare-fun x663 () x646)
(declare-fun x733 () x646)
(declare-fun x632 () Bool)
(declare-fun x449 () Int)
(declare-fun x508 () Int)
(declare-fun x58 () x646)
(declare-fun x603 () Int)
(declare-fun x64 () Int)
(declare-fun x41 () Int)
(declare-fun x17 () Int)
(declare-fun x1208 () Bool)
(declare-fun x352 () Bool)
(declare-fun x87 (x646) Int)
(declare-fun x972 () Int)
(declare-fun x1029 () Int)
(declare-fun x594 (Int Int) Int)
(declare-fun x625 () Int)
(declare-fun x1248 () Int)
(declare-fun x668 () Bool)
(declare-fun x301 () Int)
(declare-fun x1088 () Int)
(declare-fun x838 () Int)
(declare-fun x272 () Bool)
(declare-fun x438 () Int)
(declare-fun x1189 () Int)
(declare-fun x281 () Int)
(declare-fun x879 () Bool)
(declare-fun x112 () Bool)
(declare-fun x546 () Bool)
(declare-fun x720 () Bool)
(declare-fun x157 () Bool)
(declare-fun x740 () Int)
(declare-fun x970 () Int)
(declare-fun x921 () x646)
(declare-fun x1124 () Int)
(declare-fun x293 () x646)
(declare-fun x604 () Bool)
(declare-fun x836 () Bool)
(declare-fun x837 () Int)
(declare-fun x729 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x403 () Int)
(declare-fun x962 () Bool)
(declare-fun x881 () Bool)
(declare-fun x1132 (Int) Int)
(declare-fun x619 () Int)
(declare-fun x1249 () Int)
(declare-fun x1022 (x646) Int)
(declare-fun x463 () Int)
(declare-fun x957 () Bool)
(declare-fun x107 () Int)
(declare-fun x1128 () Int)
(declare-fun x198 () x646)
(declare-fun x1229 () Int)
(declare-fun x7 () Bool)
(declare-fun x756 () Bool)
(declare-fun x1200 () Int)
(declare-fun x410 () Int)
(declare-fun x180 () Bool)
(declare-fun x2 (x646) Int)
(declare-fun x1215 () Int)
(declare-fun x876 () Bool)
(declare-fun x1003 () x646)
(declare-fun x1127 () Int)
(declare-fun x1277 (x646) Int)
(declare-fun x1019 () Bool)
(declare-fun x195 () Int)
(declare-fun x326 () Bool)
(declare-fun x1000 () Int)
(declare-fun x482 () Int)
(declare-fun x109 () Int)
(declare-fun x816 () Int)
(declare-fun x358 () Int)
(declare-fun x36 () Int)
(declare-fun x744 () Bool)
(declare-fun x518 () Int)
(declare-fun x1211 () Int)
(declare-fun x417 () Int)
(declare-fun x721 () Int)
(declare-fun x309 () x646)
(declare-fun x96 () Int)
(declare-fun x762 () Int)
(declare-fun x241 () Int)
(declare-fun x1169 () Int)
(declare-fun x63 () Int)
(declare-fun x812 () Bool)
(declare-fun x385 () x646)
(declare-fun x746 () Bool)
(declare-fun x37 () x646)
(declare-fun x573 () Int)
(declare-fun x421 () Int)
(declare-fun x1134 () Int)
(declare-fun x434 () Int)
(declare-fun x696 () x646)
(declare-fun x197 () Int)
(declare-fun x1030 () x646)
(declare-fun x539 () Int)
(declare-fun x163 () Int)
(declare-fun x72 () Bool)
(declare-fun x141 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x1202 () Int)
(declare-fun x321 () Int)
(declare-fun x849 () x646)
(declare-fun x264 () Bool)
(declare-fun x75 () Int)
(declare-fun x199 () Bool)
(declare-fun x324 () x646)
(declare-fun x1164 () Int)
(declare-fun x114 () Int)
(declare-fun x852 () Int)
(declare-fun x749 () Int)
(declare-fun x1239 () x646)
(declare-fun x778 () Int)
(declare-fun x503 () Bool)
(declare-fun x1257 () Int)
(declare-fun x1144 () x646)
(declare-fun x389 () x646)
(declare-fun x120 () Bool)
(declare-fun x611 () Int)
(declare-fun x59 () x646)
(declare-fun x124 () Int)
(declare-fun x723 () Int)
(declare-fun x69 () Int)
(declare-fun x228 () Int)
(declare-fun x1235 () x646)
(declare-fun x153 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x1213 () Int)
(declare-fun x991 () x646)
(declare-fun x835 () Bool)
(declare-fun x139 () Int)
(declare-fun x230 () Int)
(declare-fun x904 () Bool)
(declare-fun x878 () Int)
(declare-fun x1155 () Int)
(declare-fun x1264 () Int)
(declare-fun x220 () x646)
(declare-fun x654 () Int)
(declare-fun x428 () Bool)
(declare-fun x136 () x646)
(declare-fun x853 () Bool)
(declare-fun x24 () Bool)
(declare-fun x297 () Int)
(declare-fun x474 () x646)
(declare-fun x1036 () x646)
(declare-fun x172 () Int)
(declare-fun x606 () Bool)
(declare-fun x1040 () Int)
(declare-fun x102 () Int)
(declare-fun x399 () Int)
(declare-fun x1254 (Int) Int)
(declare-fun x415 () x646)
(declare-fun x226 () Int)
(declare-fun x1138 () Int)
(declare-fun x1048 () x646)
(declare-fun x1276 () x646)
(declare-fun x21 () x646)
(declare-fun x691 () Bool)
(declare-fun x33 (x646) Int)
(declare-fun x368 () Bool)
(declare-fun x1072 () Int)
(declare-fun x809 () Bool)
(declare-fun x1237 () x646)
(declare-fun x1037 () Bool)
(declare-fun x689 () Int)
(declare-fun x1099 () x646)
(declare-fun x831 () Bool)
(declare-fun x340 () Int)
(declare-fun x766 () Int)
(declare-fun x88 () x646)
(declare-fun x915 () Int)
(declare-fun x46 () Int)
(declare-fun x94 (Int) Int)
(declare-fun x839 () Bool)
(declare-fun x313 () x646)
(declare-fun x629 (x646) Int)
(declare-fun x893 () x646)
(declare-fun x1240 () Bool)
(declare-fun x161 (x646) Int)
(declare-fun x154 () Int)
(declare-fun x471 () Bool)
(declare-fun x467 () x646)
(declare-fun x115 () x646)
(declare-fun x240 () Int)
(declare-fun x430 () x646)
(declare-fun x671 () Int)
(declare-fun x943 () Bool)
(declare-fun x1219 (Int) Int)
(declare-fun x411 () Int)
(declare-fun x18 () Int)
(declare-fun x217 () Int)
(declare-fun x826 () Int)
(declare-fun x377 () Int)
(declare-fun x232 () Bool)
(declare-fun x499 () Int)
(declare-fun x676 () Int)
(declare-fun x343 () Int)
(declare-fun x93 () Int)
(declare-fun x1031 () Int)
(declare-fun x78 () Int)
(declare-fun x26 () Int)
(declare-fun x620 () Int)
(declare-fun x907 () Int)
(declare-fun x285 () Int)
(declare-fun x1170 () Bool)
(declare-fun x940 () Int)
(declare-fun x234 () Int)
(declare-fun x1280 () Int)
(declare-fun x982 () Bool)
(declare-fun x129 () Int)
(declare-fun x1278 () Int)
(declare-fun x10 () Bool)
(declare-fun x748 () Int)
(declare-fun x933 () Int)
(declare-fun x1227 () x646)
(declare-fun x1209 (Int) Int)
(declare-fun x828 () Int)
(declare-fun x966 () Int)
(declare-fun x328 () Int)
(declare-fun x1270 () x646)
(declare-fun x1005 () Int)
(declare-fun x204 () Int)
(declare-fun x3 () Bool)
(declare-fun x16 () Int)
(declare-fun x1196 () Bool)
(declare-fun x1108 () Int)
(declare-fun x278 () Bool)
(declare-fun x51 () Bool)
(declare-fun x793 () Int)
(declare-fun x935 () x646)
(declare-fun x981 () Int)
(declare-fun x1233 () Bool)
(declare-fun x638 () Int)
(declare-fun x936 () Int)
(declare-fun x919 () Bool)
(declare-fun x928 () Int)
(declare-fun x1154 () Int)
(declare-fun x1150 (Int) Int)
(declare-fun x413 () Int)
(declare-fun x951 () Bool)
(declare-fun x1152 () Int)
(declare-fun x461 () Int)
(declare-fun x260 () x646)
(declare-fun x1267 () Bool)
(declare-fun x924 () Int)
(declare-fun x1012 () Bool)
(declare-fun x1091 () Int)
(declare-fun x235 () Int)
(declare-fun x257 () Int)
(declare-fun x81 () Bool)
(declare-fun x282 () Int)
(declare-fun x803 () Bool)
(declare-fun x922 () Int)
(declare-fun x1243 () Int)
(declare-fun x537 () Bool)
(declare-fun x398 () Int)
(declare-fun x892 () Int)
(declare-fun x834 () Bool)
(declare-fun x47 () Bool)
(declare-fun x145 () Int)
(declare-fun x730 () x646)
(declare-fun x899 () Bool)
(declare-fun x810 () Bool)
(declare-fun x247 () Int)
(declare-fun x719 () Bool)
(declare-fun x711 () Bool)
(declare-fun x956 () Int)
(declare-fun x99 () Bool)
(declare-fun x270 () x646)
(declare-fun x1206 () Bool)
(declare-fun x60 () x646)
(declare-fun x1157 () Int)
(declare-fun x1082 () x646)
(declare-fun x290 () Int)
(declare-fun x1198 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x596 () Int)
(declare-fun x728 () Int)
(declare-fun x895 () x646)
(declare-fun x1028 () Int)
(declare-fun x524 () Int)
(declare-fun x1251 () Int)
(declare-fun x1058 () Bool)
(declare-fun x431 () Bool)
(declare-fun x784 () Int)
(declare-fun x823 () x646)
(declare-fun x466 (x646) Int)
(declare-fun x807 () Int)
(declare-fun x442 () Bool)
(declare-fun x464 () Int)
(declare-fun x942 () Int)
(declare-fun x1086 () Int)
(declare-fun x533 () Int)
(declare-fun x1228 () Bool)
(declare-fun x990 () Bool)
(declare-fun x693 () Bool)
(declare-fun x724 () x646)
(declare-fun x575 () Int)
(declare-fun x338 () Int)
(declare-fun x645 () Bool)
(declare-fun x1103 () Int)
(declare-fun x1167 () Bool)
(declare-fun x567 () Int)
(declare-fun x216 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x1034 () x646)
(declare-fun x221 () Int)
(declare-fun x705 () Int)
(declare-fun x1231 () x646)
(declare-fun x92 () Bool)
(declare-fun x339 () Bool)
(declare-fun x1163 () Bool)
(declare-fun x571 () Bool)
(declare-fun x310 () Int)
(declare-fun x1039 () Int)
(declare-fun x1142 () Bool)
(declare-fun x1092 () x646)
(declare-fun x1201 () Int)
(declare-fun x308 () Int)
(declare-fun x263 () Int)
(declare-fun x337 () Int)
(declare-fun x597 () Bool)
(declare-fun x1252 () Int)
(declare-fun x916 () Int)
(declare-fun x405 () x646)
(declare-fun x248 (x646) Int)
(declare-fun x182 () Bool)
(declare-fun x1162 () Int)
(declare-fun x455 () x646)
(declare-fun x858 () Int)
(declare-fun x566 () x646)
(declare-fun x327 () Int)
(declare-fun x15 () Int)
(declare-fun x536 () Int)
(declare-fun x660 () Bool)
(declare-fun x700 () Int)
(declare-fun x1125 (Int) Int)
(declare-fun x245 () Int)
(declare-fun x602 () Int)
(declare-fun x913 () Int)
(declare-fun x283 () Int)
(declare-fun x6 () Bool)
(declare-fun x713 () Int)
(declare-fun x1205 () Int)
(declare-fun x798 () Int)
(declare-fun x609 () Bool)
(declare-fun x860 () Int)
(declare-fun x734 () Bool)
(declare-fun x362 () Int)
(declare-fun x213 (Int) Int)
(declare-fun x1185 () x646)
(declare-fun x851 () x646)
(declare-fun x363 () Int)
(declare-fun x469 () Bool)
(declare-fun x255 () Int)
(declare-fun x889 () Int)
(declare-fun x1006 () Int)
(declare-fun x261 () Int)
(declare-fun x203 () Int)
(declare-fun x920 () Int)
(declare-fun x489 () Int)
(declare-fun x656 () Int)
(declare-fun x376 () Int)
(declare-fun x1281 () Int)
(declare-fun x149 () x646)
(declare-fun x534 () Bool)
(declare-fun x560 () Int)
(declare-fun x492 (Int) x646)
(declare-fun x694 () x646)
(declare-fun x1017 () Int)
(declare-fun x1042 () Int)
(declare-fun x1234 () Int)
(declare-fun x523 () Bool)
(declare-fun x520 () x646)
(declare-fun x775 () x646)
(declare-fun x909 () Int)
(declare-fun x384 () Int)
(declare-fun x814 () Int)
(declare-fun x902 () x646)
(declare-fun x589 () Int)
(declare-fun x45 () Int)
(declare-fun x714 () Int)
(declare-fun x930 () Int)
(declare-fun x50 () Int)
(declare-fun x1107 () Bool)
(declare-fun x941 () Int)
(declare-fun x617 () Int)
(declare-fun x70 () Int)
(declare-fun x709 () Bool)
(declare-fun x626 () Bool)
(declare-fun x690 () Int)
(declare-fun x1073 () Int)
(declare-fun x504 () Bool)
(declare-fun x870 (Int) Int)
(declare-fun x616 () x646)
(declare-fun x1177 () Int)
(declare-fun x818 () Bool)
(declare-fun x1247 () Int)
(declare-fun x547 () Bool)
(declare-fun x701 () x646)
(declare-fun x1057 () Int)
(declare-fun x752 () Int)
(declare-fun x727 () x646)
(declare-fun x866 () Bool)
(declare-fun x1258 () Bool)
(declare-fun x1075 () Int)
(declare-fun x652 () Int)
(declare-fun x138 () Bool)
(declare-fun x1269 () Int)
(declare-fun x898 () Bool)
(declare-fun x800 () Int)
(declare-fun x591 () Int)
(declare-fun x1066 () Int)
(declare-fun x1025 () Bool)
(declare-fun x1116 () Int)
(declare-fun x162 () Int)
(declare-fun x1221 () Int)
(declare-fun x1224 () Int)
(declare-fun x833 () Int)
(declare-fun x52 () Int)
(declare-fun x559 () Int)
(declare-fun x462 () Int)
(declare-fun x664 () Bool)
(declare-fun x1016 () Int)
(declare-fun x627 () Int)
(declare-fun x988 () Int)
(declare-fun x1076 () Int)
(declare-fun x755 () x646)
(declare-fun x686 () Bool)
(declare-fun x331 () Int)
(declare-fun x865 () Bool)
(declare-fun x219 () Bool)
(declare-fun x168 () Bool)
(declare-fun x274 () Int)
(declare-fun x250 () Bool)
(declare-fun x653 () Int)
(declare-fun x581 () Bool)
(declare-fun x348 () Int)
(declare-fun x857 () Int)
(declare-fun x436 () Bool)
(declare-fun x973 () Int)
(declare-fun x827 () Int)
(declare-fun x884 () Int)
(declare-fun x765 () Bool)
(declare-fun x1141 () Int)
(declare-fun x356 () Bool)
(declare-fun x387 () Int)
(declare-fun x280 () Int)
(declare-fun x998 () Bool)
(declare-fun x1242 () x646)
(declare-fun x1065 () Int)
(declare-fun x1158 (Int) Int)
(declare-fun x350 () Bool)
(declare-fun x900 () Int)
(declare-fun x811 () x646)
(declare-fun x1001 (x646) Int)
(declare-fun x1174 () Int)
(declare-fun x737 () Bool)
(declare-fun x1023 () Bool)
(declare-fun x390 () Int)
(declare-fun x271 () Int)
(declare-fun x997 () x646)
(declare-fun x1015 () Int)
(declare-fun x407 () Int)
(declare-fun x1026 () Bool)
(declare-fun x995 () Int)
(declare-fun x673 () Bool)
(declare-fun x288 () Int)
(declare-fun x570 () x646)
(declare-fun x1176 () Int)
(declare-fun x1084 () Bool)
(declare-fun x590 () Bool)
(declare-fun x528 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x992 () x646)
(declare-fun x1071 () Int)
(declare-fun x342 () Int)
(declare-fun x605 () Int)
(declare-fun x917 () Bool)
(declare-fun x476 () x646)
(declare-fun x1184 () Int)
(declare-fun x150 () Int)
(declare-fun x986 () Int)
(declare-fun x1145 () Bool)
(declare-fun x231 () Int)
(declare-fun x822 (Int) Int)
(declare-fun x882 () Bool)
(declare-fun x1047 () Int)
(declare-fun x726 () Int)
(declare-fun x386 () Int)
(declare-fun x493 () Int)
(declare-fun x802 () Bool)
(declare-fun x502 () Bool)
(declare-fun x642 () x646)
(declare-fun x1119 () Int)
(declare-fun x944 () Int)
(declare-fun x670 () Int)
(declare-fun x1021 () Bool)
(declare-fun x610 () x646)
(declare-fun x432 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x1122 () Int)
(declare-fun x1166 () x646)
(declare-fun x1168 () x646)
(declare-fun x156 () Int)
(declare-fun x976 () Int)
(declare-fun x789 () Int)
(declare-fun x512 () Int)
(declare-fun x799 () Bool)
(declare-fun x717 () Bool)
(declare-fun x1079 () Int)
(declare-fun x246 () Int)
(declare-fun x945 () Bool)
(declare-fun x484 (Int) Int)
(declare-fun x931 () Int)
(declare-fun x354 () Int)
(declare-fun x392 () Bool)
(declare-fun x887 () Int)
(declare-fun x1214 () Int)
(declare-fun x885 () Int)
(declare-fun x191 () Bool)
(declare-fun x978 () Int)
(declare-fun x39 () Bool)
(declare-fun x353 () Bool)
(declare-fun x661 () x646)
(declare-fun x514 () Int)
(declare-fun x236 (x646) Int)
(declare-fun x993 () Int)
(declare-fun x1256 () Int)
(declare-fun x1173 () Int)
(declare-fun x640 () x646)
(declare-fun x215 () Bool)
(declare-fun x1236 () Int)
(declare-fun x193 () x646)
(declare-fun x450 () Int)
(declare-fun x745 () Bool)
(declare-fun x688 () Bool)
(declare-fun x788 () Bool)
(declare-fun x848 () Int)
(declare-fun x658 () Int)
(declare-fun x5 () Int)
(declare-fun x754 () Bool)
(declare-fun x1113 () Int)
(declare-fun x457 () x646)
(declare-fun x1271 () Bool)
(declare-fun x440 () Bool)
(declare-fun x716 () Bool)
(declare-fun x57 () Int)
(declare-fun x43 () Int)
(declare-fun x516 () Bool)
(declare-fun x212 () Bool)
(declare-fun x167 () Int)
(declare-fun x569 () Int)
(declare-fun x925 () Int)
(declare-fun x170 () Int)
(declare-fun x279 () Bool)
(declare-fun x1068 () Int)
(declare-fun x214 () Bool)
(declare-fun x871 () Bool)
(declare-fun x1191 () Int)
(declare-fun x365 () x646)
(declare-fun x479 () Int)
(declare-fun x355 () Int)
(declare-fun x1147 () x646)
(declare-fun x1063 () Int)
(declare-fun x1179 () x646)
(declare-fun x584 () Int)
(declare-fun x494 () Int)
(declare-fun x934 () Int)
(declare-fun x564 () Int)
(declare-fun x758 () Int)
(declare-fun x983 () Int)
(declare-fun x174 () Int)
(declare-fun x84 () x646)
(declare-fun x334 () Int)
(declare-fun x683 () Int)
(declare-fun x832 () Int)
(declare-fun x62 () Bool)
(declare-fun x458 (x646) Int)
(declare-fun x381 () Int)
(declare-fun x601 () Int)
(declare-fun x370 () Int)
(declare-fun x659 () Bool)
(declare-fun x897 () Bool)
(declare-fun x1049 () Int)
(declare-fun x400 () Bool)
(declare-fun x1172 () x646)
(declare-fun x364 () Bool)
(declare-fun x1262 () Int)
(declare-fun x580 () Bool)
(declare-fun x366 () Int)
(declare-fun x165 () x646)
(declare-fun x796 () Int)
(declare-fun x1266 () Int)
(declare-fun x863 () Int)
(declare-fun x747 () Int)
(declare-fun x712 () Int)
(declare-fun x123 () Int)
(declare-fun x782 () Bool)
(declare-fun x319 () x646)
(declare-fun x955 () Int)
(declare-fun x401 () Int)
(declare-fun x346 () Int)
(declare-fun x1135 () Bool)
(declare-fun x76 () Bool)
(declare-fun x677 (x646) Int)
(declare-fun x634 () Int)
(declare-fun x994 () x646)
(declare-fun x1093 () Int)
(declare-fun x54 () x646)
(declare-fun x1014 () x646)
(declare-fun x680 () Bool)
(declare-fun x497 () Int)
(declare-fun x1143 () x646)
(declare-fun x967 () Int)
(declare-fun x773 () Int)
(declare-fun x1126 () x646)
(declare-fun x89 () Int)
(declare-fun x948 () Int)
(declare-fun x218 () Int)
(declare-fun x175 () x646)
(declare-fun x1045 () Bool)
(declare-fun x760 () Int)
(declare-fun x121 () x646)
(declare-fun x576 () x646)
(declare-fun x1180 () Int)
(declare-fun x323 () x646)
(declare-fun x1159 (Int) Int)
(declare-fun x557 () Int)
(declare-fun x25 () Int)
(declare-fun x996 () x646)
(declare-fun x229 () Int)
(declare-fun x91 () Bool)
(declare-fun x517 () x646)
(declare-fun x1165 (Int) Int)
(declare-fun x119 () x646)
(declare-fun x509 () Int)
(declare-fun x143 () Bool)
(declare-fun x316 () Int)
(declare-fun x505 () Int)
(declare-fun x1244 () x646)
(declare-fun x1203 () Int)
(declare-fun x880 () Int)
(declare-fun x122 () Int)
(declare-fun x1250 () Bool)
(declare-fun x483 () Int)
(declare-fun x184 () Int)
(declare-fun x304 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x1078 () Int)
(declare-fun x97 () x646)
(declare-fun x1190 (Int) Int)
(declare-fun x768 () Int)
(declare-fun x825 () Int)
(declare-fun x1131 () Int)
(declare-fun x665 () Int)
(declare-fun x465 () Bool)
(declare-fun x196 () x646)
(declare-fun x1263 () Int)
(declare-fun x905 () Int)
(declare-fun x507 () Int)
(declare-fun x38 () Bool)
(declare-fun x715 () Int)
(declare-fun x1275 () Int)
(declare-fun x501 () Int)
(declare-fun x648 () Int)
(declare-fun x491 () Bool)
(declare-fun x843 () Bool)
(declare-fun x631 () Bool)
(declare-fun x262 () Bool)
(declare-fun x1222 () Int)
(declare-fun x209 () Int)
(declare-fun x90 () Bool)
(declare-fun x1230 () Int)
(declare-fun x315 () Int)
(declare-fun x613 () x646)
(declare-fun x454 () Int)
(declare-fun x98 () Int)
(declare-fun x74 () Int)
(declare-fun x783 () Bool)
(declare-fun x1187 () Int)
(declare-fun x817 () Int)
(declare-fun x551 () Int)
(declare-fun x332 () Int)
(declare-fun x862 () Int)
(declare-fun x429 () Bool)
(declare-fun x883 (x646) Int)
(declare-fun x169 () Bool)
(declare-fun x1225 () x646)
(declare-fun x1054 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x578 () Bool)
(declare-fun x527 () Int)
(declare-fun x682 () Int)
(declare-fun x974 () Bool)
(declare-fun x854 () Int)
(declare-fun x402 () Int)
(declare-fun x545 () Int)
(declare-fun x426 () Int)
(declare-fun x371 () Int)
(declare-fun x286 () Bool)
(declare-fun x273 () Bool)
(declare-fun x452 () Int)
(declare-fun x914 () Int)
(declare-fun x202 () Int)
(declare-fun x372 () Int)
(declare-fun x1027 () Int)
(declare-fun x772 () Int)
(declare-fun x806 () Bool)
(declare-fun x612 () Bool)
(declare-fun x1238 () Int)
(declare-fun x200 () Bool)
(declare-fun x369 () Int)
(declare-fun x441 () Int)
(declare-fun x1232 () x646)
(declare-fun x1024 () Int)
(declare-fun x1018 () Bool)
(declare-fun x779 () Bool)
(declare-fun x158 () Int)
(declare-fun x34 () Int)
(declare-fun x294 () Int)
(declare-fun x481 () Int)
(declare-fun x29 () x646)
(declare-fun x844 (Int) Int)
(declare-fun x908 () Int)
(declare-fun x317 (Int) Int)
(declare-fun x821 () Int)
(declare-fun x1153 (x646) Int)
(declare-fun x40 () Int)
(declare-fun x565 () x646)
(declare-fun x1139 () Bool)
(declare-fun x453 () Int)
(declare-fun x448 () Int)
(declare-fun x446 (x646) Int)
(declare-fun x275 () Bool)
(declare-fun x443 () Int)
(declare-fun x27 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x239 () Int)
(declare-fun x946 () Int)
(declare-fun x1140 () Int)
(declare-fun x1136 () Int)
(declare-fun x1050 () Int)
(declare-fun x178 () Int)
(declare-fun x490 () Int)
(declare-fun x1253 () Int)
(declare-fun x77 () Int)
(declare-fun x303 () Int)
(declare-fun x259 () Int)
(declare-fun x1101 () Int)
(declare-fun x251 () Bool)
(declare-fun x486 () Bool)
(declare-fun x473 () Int)
(declare-fun x532 () Int)
(declare-fun x1007 () Int)
(declare-fun x427 () Int)
(declare-fun x643 () Int)
(declare-fun x242 () x646)
(declare-fun x820 () Bool)
(declare-fun x345 () Int)
(declare-fun x374 () x646)
(declare-fun x116 () Int)
(declare-fun x707 () x646)
(declare-fun x965 () Int)
(declare-fun x375 () Int)
(declare-fun x183 () Int)
(declare-fun x329 () Int)
(declare-fun x513 () Bool)
(declare-fun x1261 () x646)
(declare-fun x1246 () Bool)
(declare-fun x864 () Int)
(declare-fun x201 () Int)
(declare-fun x662 () Int)
(declare-fun x208 () Int)
(declare-fun x159 () Int)
(declare-fun x947 () x646)
(declare-fun x753 () Bool)
(declare-fun x1087 () x646)
(declare-fun x1283 (Int) Int)
(declare-fun x1260 () Bool)
(declare-fun x859 () Int)
(declare-fun x1038 () Int)
(declare-fun x22 () Int)
(declare-fun x181 () Bool)
(declare-fun x949 () Bool)
(declare-fun x244 () x646)
(declare-fun x269 () x646)
(declare-fun x515 () Int)
(declare-fun x435 () Int)
(declare-fun x445 () Int)
(declare-fun x1282 () Bool)
(declare-fun x767 () Int)
(declare-fun x1195 () Int)
(declare-fun x125 () Int)
(declare-fun x254 () Int)
(declare-fun x480 () Int)
(declare-fun x1120 () x646)
(declare-fun x819 () x646)
(declare-fun x804 () x646)
(declare-fun x583 () Int)
(declare-fun x657 () Int)
(declare-fun x1044 () Bool)
(declare-fun x61 () Int)
(declare-fun x397 () Int)
(declare-fun x781 () Bool)
(declare-fun x396 () Int)
(declare-fun x224 () x646)
(declare-fun x1035 () Int)
(declare-fun x222 () Int)
(declare-fun x776 () Int)
(declare-fun x408 () Bool)
(declare-fun x1096 () Int)
(declare-fun x268 () Int)
(declare-fun x478 () x646)
(declare-fun x761 () Int)
(declare-fun x373 () Bool)
(declare-fun x969 () Bool)
(declare-fun x1194 () Int)
(declare-fun x192 () Int)
(declare-fun x1010 () Int)
(declare-fun x582 () Int)
(declare-fun x423 () Int)
(declare-fun x118 () Int)
(declare-fun x56 () Bool)
(declare-fun x1146 () Int)
(declare-fun x842 () Int)
(declare-fun x896 () Int)
(declare-fun x395 () Int)
(declare-fun x845 () Int)
(declare-fun x751 () Bool)
(declare-fun x938 () Bool)
(declare-fun x300 () Int)
(declare-fun x361 () x646)
(declare-fun x932 () Int)
(declare-fun x702 () Int)
(declare-fun x666 () Bool)
(declare-fun x1055 () Int)
(declare-fun x284 () Int)
(declare-fun x699 () Int)
(declare-fun x1129 (x646) Int)
(declare-fun x608 () Int)
(declare-fun x173 () Int)
(declare-fun x739 () Bool)
(declare-fun x325 () Int)
(declare-fun x32 () Bool)
(declare-fun x378 () Bool)
(declare-fun x1053 (Int) Int)
(declare-fun x667 () Bool)
(declare-fun x568 () Int)
(declare-fun x541 () x646)
(declare-fun x487 () Int)
(declare-fun x360 () Bool)
(declare-fun x4 (x646) Int)
(declare-fun x166 () Int)
(declare-fun x1114 () Int)
(declare-fun x406 () x646)
(declare-fun x692 () x646)
(declare-fun x144 () Bool)
(declare-fun x588 () Int)
(declare-fun x82 () Bool)
(declare-fun x952 () Int)
(declare-fun x585 () Bool)
(declare-fun x477 () x646)
(declare-fun x542 () Bool)
(declare-fun x322 () Int)
(declare-fun x79 () Bool)
(declare-fun x1226 () Int)
(declare-fun x774 () Int)
(declare-fun x210 () Int)
(declare-fun x874 () Int)
(declare-fun x886 () x646)
(declare-fun x71 () x646)
(declare-fun x710 () Int)
(declare-fun x937 (Int) Int)
(declare-fun x1151 () Int)
(declare-fun x901 (x646) Int)
(declare-fun x633 () Int)
(declare-fun x314 (x646) Int)
(declare-fun x1009 () Int)
(declare-fun x607 () x646)
(declare-fun x769 () Int)
(declare-fun x628 () Int)
(declare-fun x805 () Bool)
(declare-fun x771 () Int)
(declare-fun x1051 () Bool)
(declare-fun x382 () Int)
(declare-fun x697 () Int)
(declare-fun x1197 () Int)
(declare-fun x1171 () Bool)
(declare-fun x743 () Int)
(declare-fun x561 () x646)
(declare-fun x538 () Int)
(declare-fun x470 () Int)
(declare-fun x846 () Int)
(declare-fun x140 () Bool)
(declare-fun x718 () x646)
(declare-fun x237 () Int)
(declare-fun x1216 () Int)
(declare-fun x563 () x646)
(declare-fun x147 () Bool)
(declare-fun x1268 () Int)
(declare-fun x1193 () Int)
(declare-fun x672 () Int)
(declare-fun x131 () Bool)
(declare-fun x80 () Bool)
(declare-fun x359 () Bool)
(declare-fun x586 () Int)
(declare-fun x681 () Int)
(declare-fun x824 () x646)
(declare-fun x984 () Bool)
(declare-fun x189 () Bool)
(declare-fun x187 () x646)
(declare-fun x574 () Int)
(declare-fun x1186 () x646)
(declare-fun x522 () Bool)
(declare-fun x127 () Bool)
(declare-fun x1117 () Int)
(declare-fun x85 () x646)
(declare-fun x1098 () Bool)
(declare-fun x544 () Int)
(declare-fun x367 () Int)
(declare-fun x963 () Bool)
(declare-fun x1064 () x646)
(declare-fun x347 () Int)
(declare-fun x100 () x646)
(declare-fun x923 () Bool)
(declare-fun x587 () Int)
(declare-fun x206 () Int)
(declare-fun x485 () Int)
(declare-fun x1148 () Int)
(declare-fun x186 () Int)
(declare-fun x111 () Bool)
(declare-fun x243 (x646) Int)
(declare-fun x55 () Int)
(declare-fun x531 () Int)
(declare-fun x777 () x646)
(declare-fun x1033 () Int)
(declare-fun x357 () Bool)
(declare-fun x703 () Int)
(declare-fun x1060 () Bool)
(declare-fun x388 () Int)
(declare-fun x506 () Bool)
(declare-fun x577 () x646)
(declare-fun x1199 () x646)
(declare-fun x1192 () Int)
(declare-fun x20 () Int)
(declare-fun x558 () x646)
(declare-fun x472 () Int)
(declare-fun x459 () Int)
(declare-fun x1067 () Int)
(declare-fun x618 () Int)
(declare-fun x176 () Bool)
(declare-fun x511 () Int)
(declare-fun x735 () Int)
(declare-fun x736 () Int)
(declare-fun x926 () Int)
(declare-fun x554 () Bool)
(declare-fun x312 () Int)
(declare-fun x790 () x646)
(declare-fun x498 () Int)
(declare-fun x134 (x646) Int)
(declare-fun x1046 () Int)
(declare-fun x335 () Bool)
(declare-fun x425 () Int)
(declare-fun x980 () Int)
(declare-fun x1020 () Int)
(declare-fun x679 () Int)
(declare-fun x306 () Bool)
(declare-fun x460 () Int)
(declare-fun x393 () Int)
(declare-fun x177 () Bool)
(declare-fun x813 (Int) Int)
(declare-fun x418 () Int)
(declare-fun x349 () Bool)
(declare-fun x439 () Int)
(declare-fun x1272 () Bool)
(declare-fun x500 () Int)
(declare-fun x211 () Int)
(declare-fun x265 () Bool)
(declare-fun x850 (Int Int) Int)
(declare-fun x655 () Bool)
(declare-fun x258 () x646)
(declare-fun x412 () x646)
(declare-fun x552 () x646)
(declare-fun x48 () x646)
(declare-fun x600 () Bool)
(declare-fun x31 () Int)
(declare-fun x28 () Int)
(declare-fun x135 () Int)
(declare-fun x233 () Int)
(declare-fun x53 () Int)
(declare-fun x540 () Bool)
(declare-fun x379 () Int)
(declare-fun x1241 () x646)
(declare-fun x1118 () Bool)
(declare-fun x11 () Int)
(declare-fun x225 () Int)
(declare-fun x592 () Int)
(declare-fun x1181 (Int) Int)
(declare-fun x1011 () Int)
(declare-fun x1090 () Bool)
(declare-fun x875 () x646)
(declare-fun x495 () Bool)
(declare-fun x644 () Bool)
(declare-fun x526 () Int)
(declare-fun x65 () Int)
(declare-fun x1061 () Int)
(declare-fun x336 () Bool)
(declare-fun x256 () Int)
(declare-fun x550 () Bool)
(declare-fun x344 () Int)
(declare-fun x296 () x646)
(declare-fun x815 () Int)
(declare-fun x276 () Bool)
(declare-fun x110 () x646)
(declare-fun x1069 () Int)
(declare-fun x621 () Bool)
(declare-fun x1081 () Int)
(declare-fun x66 () Bool)
(declare-fun x742 () Int)
(declare-fun x867 () Int)
(declare-fun x873 () Bool)
(declare-fun x104 () Int)
(declare-fun x133 () Int)
(declare-fun x13 () Int)
(declare-fun x840 () Int)
(declare-fun x1130 () x646)
(declare-fun x249 () Bool)
(declare-fun x137 () Int)
(declare-fun x1105 () Int)
(declare-fun x856 () Int)
(declare-fun x185 () Int)
(declare-fun x188 () x646)
(declare-fun x151 () Int)
(declare-fun x764 () Int)
(declare-fun x599 () x646)
(declare-fun x155 () Bool)
(declare-fun x128 () Int)
(declare-fun x468 () Int)
(declare-fun x1273 () Int)
(declare-fun x687 () Bool)
(declare-fun x741 () Int)
(declare-fun x636 () Int)
(declare-fun x83 () Int)
(declare-fun x722 () Int)
(declare-fun x391 (Int) Int)
(declare-fun x1265 () Bool)
(declare-fun x1255 () Int)
(declare-fun x223 () Int)
(declare-fun x971 () Bool)
(declare-fun x318 () Int)
(declare-fun x1245 () x646)
(define-fun x968 ((x646 x646) (x841 Int)) x646 (ite ((_ is x894) x646) (x894 (x770 x646) (+ (x1013 x646) x841)) (ite ((_ is x869) x646) (x869 (x19 x646) (x106 x646) (+ (x132 x646) x841)) (x598 (+ (x555 x646) x841)))))
(define-fun x977 ((x420 Int)) Int (ite (and (< x420 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x420 0)) x420 (- x420 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1133 ((x420 Int)) Int (ite (and (< x420 0) (>= x420 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x420 115792089237316195423570985008687907853269984665640564039457584007913129639936) x420))
(define-fun x637 ((x414 Int)) Bool (and (<= 0 x414) (< x414 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x404 ((x414 Int)) Bool (and (= (x850 115792089237316195423570985008687907853269984665640564039457584007913129639935 x414) x414) (= x414 (x850 x414 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1080 ((x414 Int)) Bool (and (= (x850 0 x414) 0) (= (x850 x414 0) 0)))
(define-fun x801 ((x414 Int)) Bool (= x414 (x850 x414 x414)))
(define-fun x299 ((x414 Int)) Bool (and (x404 x414) (x801 x414) (x1080 x414)))
(define-fun x961 ((x414 Int)) Bool (= (x850 1461501637330902918203684832716283019655932542975 (x850 1461501637330902918203684832716283019655932542975 x414)) (x850 1461501637330902918203684832716283019655932542975 x414)))
(define-fun x1182 ((x414 Int)) Bool (=> (and (<= 0 x414) (< x414 1461501637330902918203684832716283019655932542976)) (= (x850 1461501637330902918203684832716283019655932542975 x414) x414)))
(define-fun x953 ((x414 Int)) Bool (=> (= (x850 1461501637330902918203684832716283019655932542975 x414) x414) (and (<= 0 x414) (< x414 1461501637330902918203684832716283019655932542976))))
(define-fun x1059 ((x414 Int)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x414) (< x414 2923003274661805836407369665432566039311865085952)) (= (x850 1461501637330902918203684832716283019655932542975 x414) (- x414 1461501637330902918203684832716283019655932542976))))
(define-fun x868 ((x414 Int) (x1032 Int)) Bool (and (>= x1032 0) (= (+ (* 1461501637330902918203684832716283019655932542976 x1032) (x850 1461501637330902918203684832716283019655932542975 x414)) x414)))
(define-fun x1223 ((x414 Int) (x130 Int)) Bool (and (x961 x414) (x868 x414 x130) (x1059 x414) (x1182 x414) (x953 x414)))
(define-fun x238 ((x414 Int) (x1032 Int)) Bool (= (x850 x414 x1032) (x850 x1032 x414)))
(define-fun x757 ((x414 Int) (x1032 Int)) Bool (and (=> (<= 0 x1032) (>= x1032 (x850 x414 x1032))) (=> (<= 0 x414) (>= x414 (x850 x414 x1032))) (<= 0 (x850 x414 x1032))))
(define-fun x160 ((x414 Int) (x1032 Int)) Bool (and (x757 x414 x1032) (x238 x414 x1032)))
(define-fun x291 ((x414 Int) (x130 Int)) Bool (and (x1223 x414 x130) (x160 x414 1461501637330902918203684832716283019655932542975)))
(define-fun x797 ((x414 Int)) Bool (= (x850 26959946667150639794667015087019630673637144422540572481103610249215 (x850 26959946667150639794667015087019630673637144422540572481103610249215 x414)) (x850 26959946667150639794667015087019630673637144422540572481103610249215 x414)))
(define-fun x1156 ((x414 Int)) Bool (=> (and (>= x414 0) (< x414 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x850 26959946667150639794667015087019630673637144422540572481103610249215 x414) x414)))
(define-fun x253 ((x414 Int)) Bool (=> (= (x850 26959946667150639794667015087019630673637144422540572481103610249215 x414) x414) (and (>= x414 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x414))))
(define-fun x1083 ((x414 Int)) Bool (=> (and (< x414 53919893334301279589334030174039261347274288845081144962207220498432) (>= x414 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x850 26959946667150639794667015087019630673637144422540572481103610249215 x414) (- x414 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x630 ((x414 Int) (x1032 Int)) Bool (and (<= 0 x1032) (= x414 (+ (x850 26959946667150639794667015087019630673637144422540572481103610249215 x414) (* 26959946667150639794667015087019630673637144422540572481103610249216 x1032)))))
(define-fun x519 ((x414 Int) (x130 Int)) Bool (and (x253 x414) (x797 x414) (x1156 x414) (x1083 x414) (x630 x414 x130)))
(define-fun x979 ((x414 Int) (x130 Int)) Bool (and (x519 x414 x130) (x160 x414 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1149 ((x414 Int)) Bool (= (x850 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x850 115792089237316195423570985008687907853269984665640564039457584007913129639904 x414)) (x850 115792089237316195423570985008687907853269984665640564039457584007913129639904 x414)))
(define-fun x171 ((x414 Int)) Bool (=> (and (> 32 x414) (>= x414 0)) (= (x850 115792089237316195423570985008687907853269984665640564039457584007913129639904 x414) 0)))
(define-fun x639 ((x414 Int) (x1032 Int) (x939 Int) (x861 Int)) Bool (and (<= 0 x939) (> 32 x1032) (= (* 32 x939) (x850 115792089237316195423570985008687907853269984665640564039457584007913129639904 x414)) (= (+ (* 32 x939) x1032 (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x861)) x414) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x939) (> 1 x861) (<= 0 x861) (<= 0 x1032)))
(define-fun x1085 ((x414 Int) (x307 Int) (x152 Int) (x433 Int)) Bool (and (x639 x414 x307 x152 x433) (x171 x414) (x1149 x414)))
(define-fun x105 ((x414 Int) (x307 Int) (x152 Int) (x433 Int)) Bool (and (x1085 x414 x307 x152 x433) (x160 x414 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x706 ((x950 Int)) Int (x1150 x950))
(define-fun x451 ((x950 Int)) Int (ite (= x950 128) x498 (x1190 x950)))
(define-fun x148 ((x950 Int)) Int (ite (and (> (+ x288 160) x950) (>= x950 160)) (x1150 (+ (- x950 160) x370)) (x451 x950)))
(define-fun x906 ((x950 Int)) Int (ite (= x950 x544) 0 (x148 x950)))
(define-fun x1207 ((x950 Int)) Int (ite (and (>= x950 x294) (< x950 (+ x702 x294))) (x1150 (+ (- x950 x294) x559)) (x1132 x950)))
(define-fun x409 ((x950 x646)) Int (ite (= x950 x1064) x778 (x1022 x950)))
(define-fun x1094 ((x950 Int)) Int (ite (= x89 x950) x284 (x1125 x950)))
(define-fun x95 ((x950 Int)) Int (ite (= x1038 x950) x109 (x1094 x950)))
(define-fun x1210 ((x950 x646)) Int (ite (= x58 x950) x1011 (x243 x950)))
(define-fun x985 ((x950 x646)) Int (ite (= x196 x950) x778 (x1022 x950)))
(define-fun x333 ((x950 x646)) Int (ite (= x1144 x950) x778 (x1022 x950)))
(define-fun x164 ((x950 Int)) Int (ite (and (not x339) x1142 x131) (x1125 x950) (x95 x950)))
(define-fun x117 ((x950 Int)) Int (ite (= x950 x15) x315 (x164 x950)))
(define-fun x572 ((x950 x646)) Int (ite (= x950 x136) x14 (x901 x950)))
(define-fun x23 ((x950 x646)) Int (ite (= x477 x950) x778 (x248 x950)))
(define-fun x101 ((x950 x646)) Int (ite (= x474 x950) x778 (x248 x950)))
(define-fun x146 ((x950 x646)) Int (ite (= x950 x517) x256 (x314 x950)))
(define-fun x44 ((x950 Int)) Int (ite (= x210 x950) x995 (x391 x950)))
(define-fun x351 ((x950 x646)) Int (ite (= x950 x457) x778 (x236 x950)))
(define-fun x549 ((x950 Int)) Int (ite (= x950 x480) x1154 (x94 x950)))
(define-fun x9 ((x950 Int)) Int (ite (= x950 x305) x760 (x549 x950)))
(define-fun x556 ((x950 x646)) Int (ite (= x269 x950) x778 (x236 x950)))
(define-fun x903 ((x950 x646)) Int (ite (= x950 x875) x769 (x33 x950)))
(define-fun x103 ((x950 x646)) Int (ite (= x415 x950) x778 (x236 x950)))
(define-fun x787 ((x950 Int)) Int (ite (and (not x802) (not x339) x131 (not x945) (not x666)) (x9 x950) (ite (and (not x339) (not x945) x666 x131 (not x802)) (x9 x950) (x94 x950))))
(define-fun x73 ((x950 x646)) Int (ite (and (not x339) (not x666) x131 (not x945) (not x802)) (x903 x950) (x33 x950)))
(define-fun x959 ((x950 Int)) Int (ite (= x605 x950) x1061 (x787 x950)))
(define-fun x530 ((x950 x646)) Int (ite (= x950 x1239) x778 (x677 x950)))
(define-fun x1112 ((x950 x646)) Int (ite (= x950 x947) x536 (x2 x950)))
(define-fun x987 ((x950 x646)) Int (ite (= x819 x950) x778 (x677 x950)))
(define-fun x623 ((x950 x646)) Int (ite (and (not x360) (not x802) (not x339) x131) (x1112 x950) (x2 x950)))
(define-fun x890 ((x950 x646)) Int (ite (= x950 x1087) x970 (x883 x950)))
(define-fun x287 ((x950 Int)) Int (ite (= x950 x78) x713 (x1219 x950)))
(define-fun x289 ((x950 x646)) Int (ite (and x131 x802 (not x339)) (x677 x950) (ite (and x339 x131) (x248 x950) (ite (and x131 (not x802) (not x360) (not x339)) (x987 x950) (x530 x950)))))
(define-fun x295 ((x950 x646)) Int (ite (and x131 (not x339) x802) (x2 x950) (ite (and x339 x131) (x901 x950) (x623 x950))))
(define-fun x8 ((x950 x646)) Int (ite (and x131 x802 (not x339)) (x236 x950) (ite (and x131 x339) (x1022 x950) (ite (and x131 (not x339) (not x666) (not x945) (not x802)) (x103 x950) (ite (and (not x339) (not x802) (not x945) x131 x666) (x556 x950) (x351 x950))))))
(define-fun x1115 ((x950 x646)) Int (ite (and x802 x131 (not x339)) (x33 x950) (ite (and x131 x339) (x243 x950) (x73 x950))))
(define-fun x205 ((x950 x646)) Int (ite (and (not x339) x131 x802) (x1001 x950) (ite (and x131 x339) (x466 x950) (ite (and (not x802) (not x1090) (not x339) x969 x131 (not x216)) (x883 x950) (ite (and (not x802) x131 (not x969) (not x339) (not x1090)) (x1001 x950) (ite (and (not x802) x131 (not x339) x1090) (x1001 x950) (x890 x950)))))))
(define-fun x302 ((x950 Int)) Int (ite (and (not x339) x802 x131) (x94 x950) (ite (and x339 x131) (x1125 x950) (ite (and (not x802) (not x339) x969 x131 (not x216) (not x1090)) (x1219 x950) (ite (and (not x339) (not x969) (not x1090) x131 (not x802)) (x1158 x950) (ite (and x1090 (not x802) x131 (not x339)) (x1158 x950) (x287 x950)))))))
(define-fun x383 ((x950 Int)) Int (ite (= x277 x950) x46 (x302 x950)))
(define-fun x416 ((x950 Int)) Int (ite (= x950 x347) x791 (x383 x950)))
(define-fun x999 ((x950 Int)) Int (ite (= x950 x683) x654 (x416 x950)))
(define-fun x1109 ((x950 Int)) Int (ite (= x531 x950) x31 (x999 x950)))
(define-fun x684 ((x950 Int)) Int (ite (= x950 x185) 32 (x1109 x950)))
(define-fun x68 ((x950 Int)) Int (ite (= x950 x403) x246 (x822 x950)))
(define-fun x960 ((x950 Int)) Int (ite (= x950 x1268) 0 (x179 x950)))
(define-fun x927 ((x950 Int)) Int (ite (= x950 0) 1 (x1254 x950)))
(define-fun x725 ((x950 Int)) Int (ite (= x950 0) 1 (x1254 x950)))
(define-fun x456 ((x950 Int)) Int (ite (and x964 x92) (x927 x950) (x725 x950)))
(define-fun x830 ((x950 Int)) Int (ite (= x950 x584) x913 (x813 x950)))
(define-fun x1137 ((x950 Int)) Int (ite (= x584 x950) x636 (x813 x950)))
(define-fun x49 ((x950 Int)) Int (ite (= x950 x584) x922 (x317 x950)))
(define-fun x593 ((x950 Int)) Int (ite (and (<= x434 x950) (> (+ x922 x434) x950)) (x456 (+ (- x950 x434) 0)) (x49 x950)))
(define-fun x1104 ((x950 Int)) Int (ite (and x919 (not x180)) (x593 x950) (x317 x950)))
(define-fun x1008 ((x950 Int)) Int (ite (= x159 x950) x814 (x1104 x950)))
(define-fun x1160 ((x950 Int)) Int (ite (= x950 x532) x672 (x1008 x950)))
(define-fun x320 ((x950 Int)) Int (ite (= x1029 x950) x1103 (x1160 x950)))
(define-fun x614 ((x950 Int)) Int (ite (= x271 x950) x396 (x320 x950)))
(define-fun x579 ((x950 Int)) Int (ite (= x826 x950) 32 (x614 x950)))
(define-fun x67 ((x950 Int)) Int (ite (= x589 x950) x618 (x484 x950)))
(define-fun x595 ((x950 Int)) Int (ite (= x1193 x950) 0 (x844 x950)))
(define-fun x731 ((x950 x646)) Int (ite (= x950 (x492 274184521717934524641157099916833587206)) x371 (x4 x950)))
(define-fun x989 ((x950 x646)) Int (ite (= (x492 x705) x950) x857 (x731 x950)))
(define-fun x447 ((x950 x646)) Int (ite (= x950 (x492 x705)) x1201 (x989 x950)))
(define-fun x1220 ((x950 x646)) Int (ite (= x950 (x492 274184521717934524641157099916833587206)) x240 (x447 x950)))
(define-fun x267 ((x950 x646)) Int (ite (= (x492 274184521717934524641157099916833587206) x950) x723 (x1220 x950)))
(define-fun x795 ((x950 x646)) Int (ite (= x950 (x492 x96)) x22 (x267 x950)))
(define-fun x207 ((x950 x646)) Int (ite (= x950 x187) x1164 (x87 x950)))
(define-fun x394 ((x950 x646)) Int (ite (= x997 x950) x507 (x207 x950)))
(define-fun x1106 ((x950 x646)) Int (ite (and x964 x92) (x394 x950) (x87 x950)))
(define-fun x792 ((x950 x646)) Int (ite (= x950 x330) x1088 (x1106 x950)))
(define-fun x649 ((x950 Int)) Int (ite (= x950 0) 1 (x496 x950)))
(define-fun x1110 ((x950 Int)) Int (ite (= x950 x690) x1183 (x1159 x950)))
(define-fun x12 ((x950 x646)) Int (ite (= x1147 x950) x592 (x1129 x950)))
(define-fun x1188 ((x950 x646)) Int (ite (= x950 x521) x837 (x12 x950)))
(define-fun x42 ((x950 x646)) Int (ite (and x964 x92) (x1129 x950) (x1188 x950)))
(define-fun x1070 ((x950 x646)) Int (ite (= x543 x950) x123 (x42 x950)))
(define-fun x525 ((x950 Int)) Int (ite (= x950 0) 1 (x496 x950)))
(define-fun x954 ((x950 Int)) Int (ite (= x690 x950) x548 (x1159 x950)))
(define-fun x698 ((x950 Int)) Int (ite (and x806 x272) (x649 x950) (x525 x950)))
(define-fun x732 ((x950 x646)) Int (ite (= (x492 x96) x950) x445 (x795 x950)))
(define-fun x510 ((x950 Int)) Int (ite (= x950 x690) x575 (x1283 x950)))
(define-fun x675 ((x950 Int)) Int (ite (and (>= x950 x501) (< x950 (+ x575 x501))) (x698 (+ 0 (- x950 x501))) (x510 x950)))
(define-fun x1259 ((x950 Int)) Int (ite (and x262 x1051) (x1283 x950) (x675 x950)))
(define-fun x292 ((x414 Int)) Bool (=> (and (not (= 274184521717934524641157099916833587214 x414)) (not (= x414 1517119036)) (not (= 635128645 x414)) (not (= x414 2835717307)) (not (= 2293535753 x414)) (not (= x414 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x414 2512682246)) (not (= 87118632 x414)) (not (= x414 18446744073709551615)) (not (= 2532887486 x414)) (not (= x414 274184521717934524641157099916833587218)) (not (= x414 2960351575)) (not (= 2061678023 x414)) (not (= 2798343961 x414)) (not (= 115792089237316195423570985008687907853269984665640564039457 x414)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x414)) (not (= 604800 x414)) (not (= 826074471 x414)) (not (= x414 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 2939843472 x414)) (not (= 1986467848 x414)) (> x414 10000) (not (= x414 2868243304)) (not (= 1461501637330902918203684832716283019655932542975 x414)) (not (= x414 3123789364)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x414)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x414)) (not (= 142201243 x414)) (not (= x414 2764855426)) (not (= x414 2514000705)) (not (= x414 911411945)) (not (= 2743102681 x414)) (not (= x414 2690754053)) (not (= x414 1889567281)) (not (= x414 2258409472)) (not (= x414 2211524764)) (not (= 1000000000000000000 x414)) (not (= 468353030 x414)) (not (= 274184521717934524641157099916833587206 x414)) (not (= x414 649617121)) (not (= x414 1968616202)) (not (= 69947311 x414)) (not (= x414 2418364589)) (not (= x414 759532456))) (not ((_ is x598) (x492 x414)))))
(assert (=> (<= x846 10000) (= (x598 x846) (x492 x846))))
(assert (= (x446 (x492 x223)) x223))
(assert (x292 x892))
(assert (x292 x512))
(assert (=> (<= x217 10000) (= (x492 x217) (x598 x217))))
(assert (= (x446 (x492 x1192)) x1192))
(assert (= (x738 x965) (ite (= x980 x965) x967 (x1165 x965))))
(assert (=> (>= 10000 x978) (= (x598 x978) (x492 x978))))
(assert (x637 x453))
(assert (= (x1125 x388) (ite (and x131 x1002) (x1132 x388) (x1207 x388))))
(assert (= (x446 (x492 x596)) x596))
(assert (x637 x814))
(assert (= (ite (and x943 (not x359) x326 x597 x839 x542) (x822 x975) (ite (and (not x326) x597 x943 x839 x542) (x738 x975) (ite (and x943 (not x597) x542 x839) (x1165 x975) (ite (and x943 x542 (not x839)) (x1053 x975) (x68 x975))))) (x179 x975)))
(assert (= (x236 x1235) (ite (and x131 x1142 (not x339)) (x409 x1235) (ite (and x431 (not x1142) x131 (not x339)) (x333 x1235) (x985 x1235)))))
(assert (= (x1190 x78) 0))
(assert (= (x213 x682) (ite (= x682 x1197) x1152 (x117 x682))))
(assert (=> (>= 10000 x489) (= (x598 x489) (x492 x489))))
(assert (x637 x490))
(assert (= (x1190 x1187) 0))
(assert (x637 x133))
(assert (x637 x421))
(assert (= (ite (= x1197 x70) x1152 (x117 x70)) (x213 x70)))
(assert (= (x94 x681) (ite (and (not x339) (not x392) (not x882) x131 x429) (x391 x681) (ite (and x131 (not x429) (not x339) (not x392)) (x213 x681) (ite (and (not x339) x131 x392) (x213 x681) (x44 x681))))))
(assert (x292 x742))
(assert (x637 x816))
(assert (x637 x1116))
(assert (=> (<= x1020 10000) (= (x598 x1020) (x492 x1020))))
(assert (x637 x509))
(assert (x637 x1124))
(assert (x637 x305))
(assert (x637 x86))
(assert (x637 x1138))
(assert (x637 x308))
(assert (=> (<= x749 10000) (= (x492 x749) (x598 x749))))
(assert (= (x738 x390) (ite (= x390 x980) x967 (x1165 x390))))
(assert (x637 x55))
(assert (=> (<= x340 10000) (= (x598 x340) (x492 x340))))
(assert (x637 x840))
(assert (x637 x1127))
(assert (= (ite (= x1055 x980) x967 (x1165 x1055)) (x738 x1055)))
(assert (x637 x241))
(assert (x637 x605))
(assert (x637 x856))
(assert (x637 x201))
(assert (x292 x622))
(assert (=> (>= 10000 x1000) (= (x598 x1000) (x492 x1000))))
(assert (= (ite (= x1140 x390) x1067 (x1053 x390)) (x1165 x390)))
(assert (= 69947311 (x446 (x598 69947311))))
(assert (x637 x1173))
(assert (x299 1461501637330902918203684832716283019655932542975))
(assert (=> (>= 10000 x369) (= (x598 x369) (x492 x369))))
(assert (=> (<= x1006 10000) (= (x492 x1006) (x598 x1006))))
(assert (x637 x450))
(assert (= (ite (= x401 x975) x34 (x213 x975)) (x391 x975)))
(assert (x637 x388))
(assert (= 274184521717934524641157099916833587206 (x446 (x598 274184521717934524641157099916833587206))))
(assert (x637 x281))
(assert (= (ite (= x271 x1140) x1067 (x1053 x271)) (x1165 x271)))
(assert (x637 x922))
(assert (=> (>= 10000 x856) (= (x598 x856) (x492 x856))))
(assert (=> (>= 10000 x170) (= (x598 x170) (x492 x170))))
(assert (x637 x852))
(assert (x637 x124))
(assert (x637 x747))
(assert (x637 x403))
(assert (= (ite (and x963 x709 (not x3) x1018 x502 x32) (x484 x975) (ite (and x502 x709 x32 x1018 (not x963)) (x1181 x975) (ite (and x1018 (not x32) x709 x502) (x870 x975) (ite (and (not x502) x1018 x709) (x937 x975) (x67 x975))))) (x844 x975)))
(assert (x292 x1213))
(assert (x637 x369))
(assert (x637 x1131))
(assert (x637 x209))
(assert (x292 x282))
(assert (= (ite (= x388 x70) x331 (x1158 x388)) (x1219 x388)))
(assert (x637 x1257))
(assert (= (x1219 x1055) (ite (= x70 x1055) x331 (x1158 x1055))))
(assert (= (x1125 x1127) (ite (and x131 x1002) (x1132 x1127) (x1207 x1127))))
(assert (x637 x217))
(assert (x292 x197))
(assert (= (x179 x388) (ite (and x326 x597 x839 x943 x542 (not x359)) (x822 x388) (ite (and x839 x943 x597 (not x326) x542) (x738 x388) (ite (and x839 (not x597) x943 x542) (x1165 x388) (ite (and x542 x943 (not x839)) (x1053 x388) (x68 x388)))))))
(assert (=> (>= 10000 x920) (= (x492 x920) (x598 x920))))
(assert (x292 x838))
(assert (x292 x1234))
(assert (x637 x828))
(assert (= (x94 x448) (ite (and (not x339) (not x882) x429 (not x392) x131) (x391 x448) (ite (and (not x392) (not x339) x131 (not x429)) (x213 x448) (ite (and (not x339) x131 x392) (x213 x448) (x44 x448))))))
(assert (x637 x247))
(assert (x637 x114))
(assert (= (x1190 x1127) 0))
(assert (= x1123 (=> (and (not (< x422 2690754053)) (= x422 2798343961) (< x422 2960351575) (= (x869 (x492 x930) x849 0) x1048) (= x1091 (x901 x1048)) (= x1091 x1174) (not (= x422 2764855426)) (<= x1091 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2743102681 x422)) (= (x629 (x492 274184521717934524641157099916833587206)) x348) (< 0 x348) (not (= x422 2690754053)) (>= 1461501637330902918203684832716283019655932542975 x930) (>= x1091 0) (not (> 2293535753 x422)) (= x849 (x869 (x492 x1234) (x598 5) 0))) (=> (and (= x671 x1281) (= x363 x310) (= x1174 x880)) x491))))
(assert (x637 x539))
(assert (x292 x17))
(assert (x637 x303))
(assert (x637 x926))
(assert (= x444 (=> (and (not (> 2690754053 x722)) (= x893 (x869 (x492 x53) x888 0)) (= x772 (x629 (x492 274184521717934524641157099916833587206))) (not (< x722 2293535753)) (<= x53 1461501637330902918203684832716283019655932542975) (<= x1243 1461501637330902918203684832716283019655932542975) (< 0 x772) (= x1184 x500) (>= x1184 0) (> 2960351575 x722) (<= x1184 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1184 (x243 x701)) (not (= x722 2690754053)) (= 2743102681 x722) (= (x869 (x492 x145) (x598 3) 0) x888) (= (x869 (x492 x1243) x893 0) x701)) (=> (and (= x986 x500) (= x363 x1175) (= x1136 x929) (= x230 x1075) (= x671 x892)) x855))))
(assert (= x1035 (x446 (x492 x1035))))
(assert (= (x94 x245) (ite (and x429 x131 (not x392) (not x339) (not x882)) (x391 x245) (ite (and (not x339) x131 (not x392) (not x429)) (x213 x245) (ite (and x392 x131 (not x339)) (x213 x245) (x44 x245))))))
(assert (x292 x700))
(assert (= (x492 2960351575) (x598 2960351575)))
(assert (= (x492 87118632) (x598 87118632)))
(assert (=> (<= x892 10000) (= (x492 x892) (x598 x892))))
(assert (= 2868243304 (x446 (x598 2868243304))))
(assert (= (ite (and x429 (not x882) x131 (not x339) (not x392)) (x314 x1231) (ite (and (not x392) (not x339) x131 (not x429)) (x466 x1231) (ite (and x131 x392 (not x339)) (x466 x1231) (x146 x1231)))) (x1001 x1231)))
(assert (= (=> (and (= x363 x393) (= x285 x671)) x717) x1246))
(assert (= x131 x943))
(assert (x637 x294))
(assert (x637 x485))
(assert (= (ite (and x1002 x131) (x1132 x1187) (x1207 x1187)) (x1125 x1187)))
(assert (x637 x1016))
(assert (x637 x1189))
(assert (= x304 x716))
(assert (=> (>= 10000 x742) (= (x492 x742) (x598 x742))))
(assert (= x751 x368))
(assert (= (ite (= x390 x847) x557 (x738 x390)) (x822 x390)))
(assert (x637 x61))
(assert (= (ite (= x1197 x681) x1152 (x117 x681)) (x213 x681)))
(assert (x637 x1071))
(assert (= (ite (= x355 x448) x239 (x1181 x448)) (x484 x448)))
(assert (x637 x702))
(assert (=> (<= x1073 10000) (= (x598 x1073) (x492 x1073))))
(assert (x637 x331))
(assert (= (x213 x78) (ite (= x78 x1197) x1152 (x117 x78))))
(assert (x292 x764))
(assert (= (x598 274184521717934524641157099916833587214) (x492 274184521717934524641157099916833587214)))
(assert (= x700 (x446 (x492 x700))))
(assert (x292 x1203))
(assert (= (x492 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x598 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x637 x1251))
(assert (= (ite (= x390 x1278) x418 (x870 x390)) (x1181 x390)))
(assert (x637 x1164))
(assert (x292 x1066))
(assert (x637 x798))
(assert (= (x446 (x598 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (=> (>= 10000 x930) (= (x492 x930) (x598 x930))))
(assert (= (ite (and x1002 x131) (x1132 x1055) (x1207 x1055)) (x1125 x1055)))
(assert (x637 x1046))
(assert (x637 x185))
(assert (x637 x197))
(assert (x637 x800))
(assert (x292 x235))
(assert (x637 x586))
(assert (x637 x268))
(assert (x292 x375))
(assert (= (x822 x1055) (ite (= x1055 x847) x557 (x738 x1055))))
(assert (x637 x874))
(assert (= (x446 (x598 468353030)) 468353030))
(assert (x637 x256))
(assert (= (x492 1517119036) (x598 1517119036)))
(assert (= (x1158 x70) (ite (= x63 x70) x793 (x959 x70))))
(assert (= (x677 x110) (ite (and (not x339) x812 x131) (x101 x110) (x23 x110))))
(assert (x292 x1116))
(assert (x637 x564))
(assert (x637 x567))
(assert (= (x391 x1028) (ite (= x401 x1028) x34 (x213 x1028))))
(assert (= (x446 (x492 x145)) x145))
(assert (x292 x473))
(assert (x637 x316))
(assert (x637 x772))
(assert (x292 x611))
(assert (=> (<= x852 10000) (= (x598 x852) (x492 x852))))
(assert (= (x738 x388) (ite (= x388 x980) x967 (x1165 x388))))
(assert (x292 x887))
(assert (x637 x1146))
(assert (= (ite (= x1197 x390) x1152 (x117 x390)) (x213 x390)))
(assert (x299 x75))
(assert (x637 x980))
(assert (= (x446 (x492 x759)) x759))
(assert (=> (<= x785 10000) (= (x492 x785) (x598 x785))))
(assert (= (x1125 x965) (ite (and x131 x1002) (x1132 x965) (x1207 x965))))
(assert (x637 x827))
(assert (x299 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x407 (x446 (x492 x407))))
(assert (x637 x77))
(assert (= (x1125 x210) (ite (and x131 x1002) (x1132 x210) (x1207 x210))))
(assert (= x1170 (=> (and (< x376 911411945) (= 142201243 x376) (> 2293535753 x376) (= (x629 (x492 274184521717934524641157099916833587206)) x740) (= x1031 (x161 x996)) (not (= 87118632 x376)) (not (= 69947311 x376)) (> x740 0) (< x376 468353030) (= (x869 (x492 x1195) x780 0) x996) (= x780 (x869 (x492 x340) x60 0)) (>= 1461501637330902918203684832716283019655932542975 x340) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1031) (<= 0 x1031) (= x761 x1031) (= x60 (x869 (x492 x170) (x598 9) 0)) (<= x1195 1461501637330902918203684832716283019655932542975)) (=> (and (= x145 x671) (= x1136 x1243) (= x761 x634) (= x363 x53)) x444))))
(assert (= (ite (= x1127 x63) x793 (x959 x1127)) (x1158 x1127)))
(assert (= (x1190 x975) 0))
(assert (= (x883 x29) (ite (= x777 x29) x970 (x1001 x29))))
(assert (= (ite (= x980 x245) x967 (x1165 x245)) (x738 x245)))
(assert (= 2939843472 (x446 (x598 2939843472))))
(assert (x637 x736))
(assert (= (x213 x975) (ite (= x1197 x975) x1152 (x117 x975))))
(assert (x637 x1205))
(assert (x637 x50))
(assert (= (ite (and (not x339) (not x882) (not x392) x429 x131) (x391 x682) (ite (and (not x392) (not x429) x131 (not x339)) (x213 x682) (ite (and (not x339) x392 x131) (x213 x682) (x44 x682)))) (x94 x682)))
(assert (x637 x1200))
(assert (=> (>= 10000 x202) (= (x598 x202) (x492 x202))))
(assert (x637 x548))
(assert (x637 x1009))
(assert (= (ite (and x272 x806) (x1110 x448) (x954 x448)) (x1283 x448)))
(assert (= x131 x1058))
(assert (= (x446 (x492 x1000)) x1000))
(assert (x637 x122))
(assert (x299 x104))
(assert (x637 x46))
(assert (= 0 (x1190 x210)))
(assert (= (x738 x1187) (ite (= x980 x1187) x967 (x1165 x1187))))
(assert (x637 x93))
(assert (x637 x1050))
(assert (x637 x936))
(assert (= (=> (and (= x1126 (x869 (x492 x1281) (x598 10) 0)) (> 2293535753 x297) (= 69947311 x297) (> x1249 0) (<= 0 x966) (= x1249 (x629 (x492 274184521717934524641157099916833587206))) (= x1099 (x869 (x492 x310) x1126 0)) (= x966 (x458 x1099)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x966) (> 468353030 x297) (< x297 911411945) (= x526 x966) (>= 1461501637330902918203684832716283019655932542975 x310)) (=> (and (= x958 x778) (= x384 x858) (= x280 x671) x1282 (= x251 (and x1098 x214)) (= x880 x771) (= (<= x858 x958) x645) (= x363 x741) (= x526 x1194) (= x1111 0) x645 (= x490 0) (= x150 x1136) (= (= x710 0) x214) (= 0 x1072) (= x1098 (= x771 0)) (= x1194 x710) (= x318 x384) (= (or x251 (not x836)) x1282) (= x836 (= x318 0))) x897)) x491))
(assert (= (x446 (x492 x856)) x856))
(assert (x637 x186))
(assert (x637 x163))
(assert (=> (<= x884 10000) (= (x598 x884) (x492 x884))))
(assert (=> (>= 10000 x842) (= (x598 x842) (x492 x842))))
(assert (x292 x241))
(assert (= (ite (and (not x882) x131 (not x339) (not x392) x429) (x391 x859) (ite (and (not x339) x131 (not x429) (not x392)) (x213 x859) (ite (and (not x339) x131 x392) (x213 x859) (x44 x859)))) (x94 x859)))
(assert (x637 x498))
(assert (= (x446 (x492 x77)) x77))
(assert (= (ite (and x131 x1142 (not x339)) (x243 x1242) (ite (and (not x1142) (not x339) x131 x431) (x243 x1242) (x1210 x1242))) (x33 x1242)))
(assert (x299 x234))
(assert (= x899 x911))
(assert (x637 x229))
(assert (x292 x407))
(assert (x637 x234))
(assert (= (ite (= x346 x847) x557 (x738 x346)) (x822 x346)))
(assert (x637 x524))
(assert (= (and x709 x1018) x806))
(assert (=> (>= 10000 x282) (= (x598 x282) (x492 x282))))
(assert (= (ite (= x1140 x448) x1067 (x1053 x448)) (x1165 x448)))
(assert (x637 x574))
(assert (x637 x863))
(assert (x637 x975))
(assert (= (x213 x1033) (ite (= x1033 x1197) x1152 (x117 x1033))))
(assert (x637 x1264))
(assert (x637 x1224))
(assert (x637 x109))
(assert (= (x1219 x681) (ite (= x681 x70) x331 (x1158 x681))))
(assert (= (x446 (x492 x976)) x976))
(assert (x637 x347))
(assert (= x1257 (x446 (x492 x1257))))
(assert (x292 x759))
(assert (x637 x1221))
(assert (= (x446 (x492 x767)) x767))
(assert (x637 x740))
(assert (= (x391 x859) (ite (= x859 x401) x34 (x213 x859))))
(assert (=> (<= x322 10000) (= (x492 x322) (x598 x322))))
(assert (x292 x1141))
(assert (x637 x909))
(assert (x637 x925))
(assert (=> (>= 10000 x1203) (= (x492 x1203) (x598 x1203))))
(assert (x637 x1136))
(assert (x292 x705))
(assert (x637 x785))
(assert (x637 x752))
(assert (x637 x211))
(assert (= (x446 (x492 x1236)) x1236))
(assert (x292 x170))
(assert (x637 x500))
(assert (x637 x372))
(assert (x637 x807))
(assert (=> (>= 10000 x567) (= (x492 x567) (x598 x567))))
(assert (x291 x766 x1057))
(assert (x292 x907))
(assert (x637 x358))
(assert (x637 x298))
(assert (= 0 (x1190 x965)))
(assert (= (x1165 x245) (ite (= x1140 x245) x1067 (x1053 x245))))
(assert (x637 x1006))
(assert (x637 x1079))
(assert (=> (>= 10000 x395) (= (x492 x395) (x598 x395))))
(assert (x637 x452))
(assert (x292 x976))
(assert (= (x391 x1055) (ite (= x1055 x401) x34 (x213 x1055))))
(assert (x637 x222))
(assert (x637 x1061))
(assert (= x620 (x446 (x492 x620))))
(assert (x637 x784))
(assert (= (x446 (x492 x622)) x622))
(assert (= (ite (and x131 x1142 (not x339)) (x409 x610) (ite (and x131 (not x1142) x431 (not x339)) (x333 x610) (x985 x610))) (x236 x610)))
(assert (x292 x932))
(assert (= x489 (x446 (x492 x489))))
(assert (x637 x366))
(assert (x637 x435))
(assert (x637 x1093))
(assert (= (x446 (x492 x748)) x748))
(assert (x637 x617))
(assert (= x470 (x446 (x492 x470))))
(assert (x637 x1278))
(assert (= (x446 (x492 x96)) x96))
(assert (x637 x277))
(assert (x292 x633))
(assert (= (x598 1968616202) (x492 1968616202)))
(assert (=> (<= x223 10000) (= (x492 x223) (x598 x223))))
(assert (=> (>= 10000 x741) (= (x598 x741) (x492 x741))))
(assert (= (ite (= x63 x1187) x793 (x959 x1187)) (x1158 x1187)))
(assert (x637 x266))
(assert (= (x1165 x1187) (ite (= x1140 x1187) x1067 (x1053 x1187))))
(assert (x637 x946))
(assert (x637 x1215))
(assert (= x400 true))
(assert (x637 x1269))
(assert (= (ite (and x964 x92) (x830 x388) (x1137 x388)) (x317 x388)))
(assert (x637 x1068))
(assert (x637 x722))
(assert (x637 x411))
(assert (x637 x842))
(assert (= (x446 (x598 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x637 x1162))
(assert (x637 x14))
(assert (= x219 x1062))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x446 (x598 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x637 x174))
(assert (x292 x77))
(assert (x637 x591))
(assert (= 142201243 (x446 (x598 142201243))))
(assert (= (ite (= x448 x1278) x418 (x870 x448)) (x1181 x448)))
(assert (= (x492 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x598 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x299 x807))
(assert (x637 x202))
(assert (= (x446 (x492 x241)) x241))
(assert (x637 x1157))
(assert (x637 x713))
(assert (x299 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x637 x682))
(assert (x637 x11))
(assert (=> (<= x976 10000) (= (x598 x976) (x492 x976))))
(assert (= (x1125 x401) (ite (and x1002 x131) (x1132 x401) (x1207 x401))))
(assert (= (x1132 x448) (ite (= x448 x1033) x498 (x906 x448))))
(assert (= (x446 (x492 x1066)) x1066))
(assert (x637 x396))
(assert (x637 x1005))
(assert (= x90 (and x1212 (not x621))))
(assert (=> (<= x909 10000) (= (x598 x909) (x492 x909))))
(assert (= (x446 (x492 x852)) x852))
(assert (x637 x905))
(assert (x637 x288))
(assert (=> (>= 10000 x573) (= (x598 x573) (x492 x573))))
(assert (= (x446 (x492 x217)) x217))
(assert (x637 x1243))
(assert (=> (>= 10000 x1234) (= (x492 x1234) (x598 x1234))))
(assert (= 1986467848 (x446 (x598 1986467848))))
(assert (= (x1219 x346) (ite (= x70 x346) x331 (x1158 x346))))
(assert (x637 x1065))
(assert (= 0 (x1190 x1028)))
(assert (x637 x634))
(assert (=> (<= x285 10000) (= (x598 x285) (x492 x285))))
(assert (x637 x483))
(assert (=> (<= x1195 10000) (= (x598 x1195) (x492 x1195))))
(assert (= (x1001 x29) (ite (and x429 (not x392) (not x882) x131 (not x339)) (x314 x29) (ite (and (not x429) x131 (not x339) (not x392)) (x466 x29) (ite (and (not x339) x392 x131) (x466 x29) (x146 x29))))))
(assert (= x962 x751))
(assert (= (ite (= x210 x1033) x498 (x906 x210)) (x1132 x210)))
(assert (= (x446 (x492 x854)) x854))
(assert (x637 x674))
(assert (= (x213 x1197) x1152))
(assert (= 2690754053 (x446 (x598 2690754053))))
(assert (= (x1132 x70) (ite (= x70 x1033) x498 (x906 x70))))
(assert (= (ite (= x261 x975) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x579 x975)) (x937 x975)))
(assert (= (ite (= x63 x78) x793 (x959 x78)) (x1158 x78)))
(assert (x292 x658))
(assert (= (x446 (x598 604800)) 604800))
(assert (= (x446 (x598 2211524764)) 2211524764))
(assert (= (x492 274184521717934524641157099916833587206) (x598 274184521717934524641157099916833587206)))
(assert (= (ite (= x1033 x271) x498 (x906 x271)) (x1132 x271)))
(assert (x637 x1193))
(assert (x637 x568))
(assert (= x717 (=> (and (not (= x98 2211524764)) (not (= 1986467848 x98)) (< 0 x533) (>= 1461501637330902918203684832716283019655932542975 x393) (not (> 1968616202 x98)) (= (x869 (x492 x285) (x598 6) 0) x365) (= x676 (x289 x405)) (< x98 2293535753) (not (= x98 2061678023)) (= (x629 (x492 274184521717934524641157099916833587206)) x533) (= x845 x676) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x676) (= x405 (x869 (x492 x393) x365 0)) (not (> 911411945 x98)) (not (= x98 1968616202)) (<= 0 x676) (= x98 2258409472)) (=> (and (= x845 x316) (= x470 x363) (= x671 x1073)) x80))))
(assert (x637 x343))
(assert (= (x446 (x492 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= 826074471 (x446 (x598 826074471))))
(assert (= (x317 x681) (ite (and x964 x92) (x830 x681) (x1137 x681))))
(assert (x637 x376))
(assert (x637 x848))
(assert (x637 x689))
(assert (x637 x329))
(assert (=> (<= x767 10000) (= (x598 x767) (x492 x767))))
(assert (x637 x271))
(assert (= (x1125 x346) (ite (and x1002 x131) (x1132 x346) (x1207 x346))))
(assert (x637 x1253))
(assert (x292 x860))
(assert (= x1243 (x446 (x492 x1243))))
(assert (=> (<= x505 10000) (= (x598 x505) (x492 x505))))
(assert (x637 x1230))
(assert (=> (<= x512 10000) (= (x492 x512) (x598 x512))))
(assert (= x546 (=> (= (> x498 1) x1018) (and (=> (and (= (x1104 x388) x672) (= x483 (x850 26959946667150639794667015087019630673637144422540572481103610249215 x973)) (< 1 x583) (or (and (= x122 x690) (= x425 (x937 x965)) x502 (= x965 x271) (= x32 (< 32 x714)) (or (and (not x32) (= 32 x934)) (and (or (and (= (x1181 x390) x239) (= (x977 (+ 96 x1029)) x390) (or (and (not x3) (= 96 x934)) (and (not x938) (= x1187 (x977 (+ 128 x1029))) (= x618 (x484 x1187)) (= 128 x934) x3 (= x589 (x977 (+ 160 x826))) (= x938 (< 128 x714)))) (= x355 (x977 (+ 128 x826))) x963 (= x3 (> x714 96))) (and (not x963) (= 64 x934))) (= (x977 (+ 96 x826)) x1278) (= x963 (> x714 64)) (= x418 (x870 x1127)) x32 (= x1127 (x977 (+ x1029 64)))))) (and (= 0 x934) (not x502))) (= x973 (x320 x271)) (= (< 0 x714) x502) (= (x1133 (- x203 32)) x1103) (= x367 (x629 (x492 x96))) (= (x977 (+ 32 x1029)) x271) (> x498 1) (= x203 (x1133 (- x826 x1029))) (= x159 (x977 (+ 36 x1029))) (or (not x336) (and x336 (= (x977 (+ x714 x690)) x1193))) (= (x977 (+ 192 x377)) x388) (= (x977 (+ x159 128)) x690) (= x814 (x850 1461501637330902918203684832716283019655932542975 x75)) (= x1208 (< 0 x367)) x1018 x1208 (= x885 0) (= x714 (x937 x1029)) (<= x96 1461501637330902918203684832716283019655932542975) (= (x977 (+ 64 x591)) x41) (= x532 (x977 (+ x1029 68))) (= x261 (x977 (+ 96 x159))) (= (x1104 x1033) x583) (= (x1150 x41) x96) (= x826 (x977 (+ 100 x1029))) (= x396 (x977 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x483))) (= x336 (< x714 x934))) x1043) (=> (not x1018) x1246)))))
(assert (= (x446 (x598 1517119036)) 1517119036))
(assert (= (ite (= x1197 x531) x1152 (x117 x531)) (x213 x531)))
(assert (x637 x261))
(assert (x637 x377))
(assert (x637 x1192))
(assert (= (x598 2418364589) (x492 2418364589)))
(assert (= (x1158 x531) (ite (= x531 x63) x793 (x959 x531))))
(assert (= (x1053 x448) (ite (= x448 x774) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x448))))
(assert (x637 x1029))
(assert (= (x446 (x968 x640 1)) (+ (x446 x640) 1)))
(assert (x637 x338))
(assert (= x254 (x446 (x492 x254))))
(assert (x637 x678))
(assert (= (x33 x1276) (ite (and x131 x1142 (not x339)) (x243 x1276) (ite (and (not x1142) (not x339) x131 x431) (x243 x1276) (x1210 x1276)))))
(assert (=> (<= x283 10000) (= (x598 x283) (x492 x283))))
(assert (x637 x1017))
(assert (= (x446 (x492 x832)) x832))
(assert (=> (<= x1 10000) (= (x598 x1) (x492 x1))))
(assert (= (x179 x1033) (ite (and x542 x943 (not x359) x597 x326 x839) (x822 x1033) (ite (and (not x326) x943 x597 x839 x542) (x738 x1033) (ite (and x943 x839 x542 (not x597)) (x1165 x1033) (ite (and x943 (not x839) x542) (x1053 x1033) (x68 x1033)))))))
(assert (x637 x1248))
(assert (= (=> (and (not (< x494 2690754053)) (= x1003 (x869 (x492 x1020) x730 0)) (>= 1461501637330902918203684832716283019655932542975 x1020) (not (= 2690754053 x494)) (= (x869 (x492 x407) x1003 0) x1276) (< 0 x891) (= (x869 (x492 x77) (x598 3) 0) x730) (not (< x494 2293535753)) (= x494 2743102681) (= x891 (x629 (x492 274184521717934524641157099916833587206))) (< x494 2960351575) (<= 0 x601) (= x601 x1131) (<= x601 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1115 x1276) x601) (<= x407 1461501637330902918203684832716283019655932542975)) (=> (and (= x936 x671) (= x1075 x211) (= x956 x363) (= x1050 x1131) (= x1136 x638)) x350)) x612))
(assert (= (ite (and x131 x1002) (x1132 x245) (x1207 x245)) (x1125 x245)))
(assert (x637 x454))
(assert (x637 x341))
(assert (= 274184521717934524641157099916833587214 (x446 (x492 274184521717934524641157099916833587214))))
(assert (= (x1125 x531) (ite (and x1002 x131) (x1132 x531) (x1207 x531))))
(assert (= 2514000705 (x446 (x598 2514000705))))
(assert (= x884 (x446 (x492 x884))))
(assert (x637 x255))
(assert (x637 x473))
(assert (= (ite (= x1029 x261) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x579 x1029)) (x937 x1029)))
(assert (= (ite (= x1197 x1028) x1152 (x117 x1028)) (x213 x1028)))
(assert (= (x446 (x492 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (= (x446 (x492 x1213)) x1213))
(assert (x637 x156))
(assert (x637 x63))
(assert (= (x446 (x492 x1128)) x1128))
(assert (= x911 x368))
(assert (= (x492 604800) (x598 604800)))
(assert (= x1252 (x446 (x492 x1252))))
(assert (=> (<= x197 10000) (= (x492 x197) (x598 x197))))
(assert (x637 x900))
(assert (= (ite (and x92 x964) (x830 x965) (x1137 x965)) (x317 x965)))
(assert (x637 x654))
(assert (= (x446 (x492 x930)) x930))
(assert (x637 x518))
(assert (x299 x514))
(assert (x637 x1273))
(assert (= (x1125 x859) (ite (and x131 x1002) (x1132 x859) (x1207 x859))))
(assert (= (x179 x1187) (ite (and x943 x326 x597 (not x359) x542 x839) (x822 x1187) (ite (and x542 (not x326) x839 x597 x943) (x738 x1187) (ite (and (not x597) x542 x943 x839) (x1165 x1187) (ite (and x943 (not x839) x542) (x1053 x1187) (x68 x1187)))))))
(assert (= x273 x24))
(assert (x637 x1091))
(assert (= (ite (= x63 x965) x793 (x959 x965)) (x1158 x965)))
(assert (x637 x53))
(assert (=> (>= 10000 x932) (= (x598 x932) (x492 x932))))
(assert (= (ite (= x1197 x1055) x1152 (x117 x1055)) (x213 x1055)))
(assert (= (+ (x446 x1241) 1) (x446 (x968 x1241 1))))
(assert (x637 x771))
(assert (x637 x758))
(assert (x637 x872))
(assert (x637 x312))
(assert (x637 x69))
(assert (x292 x150))
(assert (=> (>= 10000 x608) (= (x492 x608) (x598 x608))))
(assert (= (ite (= x975 x774) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x975)) (x1053 x975)))
(assert (x637 x151))
(assert (x637 x749))
(assert (=> (>= 10000 x1042) (= (x598 x1042) (x492 x1042))))
(assert (x292 x956))
(assert (= (x598 1986467848) (x492 1986467848)))
(assert (= x177 (=> (= (= 274184521717934524641157099916833587214 x96) x621) (and (=> (and (= x786 x874) (= x1108 (x1133 (- x195 4))) (= (or (and (< x1108 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1108))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1108)) x378) (= x25 x548) x621 (not x522) (>= x222 0) (= x293 (x869 (x492 274184521717934524641157099916833587206) (x598 1) 0)) (= x568 (x42 x293)) (<= 0 x568) (= x1266 274184521717934524641157099916833587206) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x222) (not (> 649617121 x379)) (>= 1461501637330902918203684832716283019655932542975 x1221) (= (< x568 x786) x155) (= x222 (x1070 x455)) (< 0 x83) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x874 x222)) x522) (not (= 1889567281 x379)) (= x123 (x1133 (- x568 x786))) (= x879 (< x568 x874)) (= x195 x266) (= x455 (x869 (x492 x1221) (x598 1) 0)) (= x312 x1221) (not (< x195 4)) (= x195 68) (= x814 x1221) (= 1 x763) (= x575 32) (= x543 (x869 (x492 274184521717934524641157099916833587206) (x598 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x568) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x222 x874)) (not x879) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x497) (= x672 x786) (= x222 x463) (not (= x379 649617121)) (not (= x379 2514000705)) (= 2835717307 x379) (not x378) (not x155) (= x874 x499) (= 274184521717934524641157099916833587206 x524) (= x509 (+ x463 x499)) (= x83 (x629 (x492 274184521717934524641157099916833587214))) (not (= 826074471 x379))) x127) (=> (not x621) x400)))))
(assert (x292 x596))
(assert (x637 x603))
(assert (= (=> (and (= x57 2798343961) (= (x295 x1120) x303) (= x296 (x869 (x492 x1073) (x598 5) 0)) (not (< x57 2690754053)) (= x952 (x629 (x492 274184521717934524641157099916833587206))) (< 0 x952) (<= x303 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2764855426 x57)) (= x1120 (x869 (x492 x470) x296 0)) (>= 1461501637330902918203684832716283019655932542975 x470) (not (> 2293535753 x57)) (<= 0 x303) (< x57 2960351575) (not (= x57 2690754053)) (not (= x57 2743102681)) (= x303 x1134)) (=> (and (= x671 x596) (= x708 x1134) (= x1213 x363)) x99)) x80))
(assert (= (ite (= x1187 x1033) x498 (x906 x1187)) (x1132 x1187)))
(assert (= (ite (= x401 x1187) x34 (x213 x1187)) (x391 x1187)))
(assert (=> (>= 10000 x1281) (= (x598 x1281) (x492 x1281))))
(assert (x637 x859))
(assert (x979 x973 x1256))
(assert (= (x813 x1187) (ite (and x542 x943 (not x276)) (x179 x1187) (x960 x1187))))
(assert (x292 x916))
(assert (x637 x653))
(assert (=> (>= 10000 x611) (= (x598 x611) (x492 x611))))
(assert (= (ite (and (not x882) (not x392) (not x339) x131 x429) (x391 x1028) (ite (and (not x392) (not x429) x131 (not x339)) (x213 x1028) (ite (and (not x339) x392 x131) (x213 x1028) (x44 x1028)))) (x94 x1028)))
(assert (= (x391 x1033) (ite (= x401 x1033) x34 (x213 x1033))))
(assert (= x6 x91))
(assert (x637 x628))
(assert (= (x598 826074471) (x492 826074471)))
(assert (x637 x1066))
(assert (= x808 (x446 (x492 x808))))
(assert (x291 x75 x102))
(assert (x637 x31))
(assert (= (ite (and x542 (not x276) x943) (x179 x388) (x960 x388)) (x813 x388)))
(assert (= x866 (=> (and (> 911411945 x662) (< x662 2293535753) (<= x648 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x648 (x161 x270)) (not (= 87118632 x662)) (= x662 142201243) (= (x869 (x492 x767) x1232 0) x244) (= x398 x648) (= x270 (x869 (x492 x789) x244 0)) (= x366 (x629 (x492 274184521717934524641157099916833587206))) (> x366 0) (>= 1461501637330902918203684832716283019655932542975 x767) (> 468353030 x662) (not (= x662 69947311)) (<= x789 1461501637330902918203684832716283019655932542975) (>= x648 0) (= x1232 (x869 (x492 x11) (x598 9) 0))) (=> (and (= x407 x1136) (= x1020 x363) (= x671 x77) (= x64 x398)) x612))))
(assert (= (ite (and x943 x542 (not x276)) (x179 x975) (x960 x975)) (x813 x975)))
(assert (x637 x75))
(assert (x637 x1075))
(assert (x637 x955))
(assert (x637 x697))
(assert (x637 x846))
(assert (= (x1158 x1033) (ite (= x63 x1033) x793 (x959 x1033))))
(assert (= (x492 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x598 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x637 x1105))
(assert (= (x1165 x682) (ite (= x682 x1140) x1067 (x1053 x682))))
(assert (x637 x837))
(assert (x637 x932))
(assert (= x907 (x446 (x492 x907))))
(assert (x637 x26))
(assert (x292 x856))
(assert (= (ite (= x346 x1197) x1152 (x117 x346)) (x213 x346)))
(assert (= (x94 x70) (ite (and x429 (not x392) x131 (not x339) (not x882)) (x391 x70) (ite (and x131 (not x429) (not x392) (not x339)) (x213 x70) (ite (and x131 x392 (not x339)) (x213 x70) (x44 x70))))))
(assert (x637 x321))
(assert (x637 x635))
(assert (x637 x439))
(assert (x637 x284))
(assert (= (x94 x1055) (ite (and (not x882) x131 (not x339) (not x392) x429) (x391 x1055) (ite (and x131 (not x392) (not x339) (not x429)) (x213 x1055) (ite (and (not x339) x131 x392) (x213 x1055) (x44 x1055))))))
(assert (x637 x96))
(assert (x637 x195))
(assert (=> (>= 10000 x423) (= (x492 x423) (x598 x423))))
(assert (x637 x885))
(assert (= (ite (= x1197 x245) x1152 (x117 x245)) (x213 x245)))
(assert (x637 x825))
(assert (x637 x793))
(assert (x637 x482))
(assert (x637 x401))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x446 (x598 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (x637 x137))
(assert (= (ite (= x681 x63) x793 (x959 x681)) (x1158 x681)))
(assert (x292 x1000))
(assert (= (x446 (x492 x633)) x633))
(assert (= (x446 (x492 x741)) x741))
(assert (= (x446 (x598 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (=> (<= x764 10000) (= (x492 x764) (x598 x764))))
(assert (x637 x1195))
(assert (= (ite (and x1002 x131) (x1132 x70) (x1207 x70)) (x1125 x70)))
(assert (x637 x237))
(assert (= (x446 (x492 x387)) x387))
(assert (x292 x749))
(assert (= (ite (= x774 x683) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x683)) (x1053 x683)))
(assert (=> (>= 10000 x387) (= (x492 x387) (x598 x387))))
(assert (= x929 (x446 (x492 x929))))
(assert (x637 x891))
(assert (x637 x1007))
(assert (= x1212 (and (not x272) x806)))
(assert (x637 x1226))
(assert (= (ite (= x774 x1055) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x1055)) (x1053 x1055)))
(assert (= (x446 (x492 x257)) x257))
(assert (=> (>= 10000 x1141) (= (x492 x1141) (x598 x1141))))
(assert (x637 x726))
(assert (x637 x300))
(assert (x637 x25))
(assert (x637 x569))
(assert (x292 x1138))
(assert (= x674 (x446 (x492 x674))))
(assert (x637 x858))
(assert (= (x1053 x271) (ite (= x271 x774) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x271))))
(assert (x637 x1076))
(assert (x292 x832))
(assert (x637 x643))
(assert (x637 x345))
(assert (= (x446 (x492 x150)) x150))
(assert (= 3123789364 (x446 (x598 3123789364))))
(assert (= (x1053 x859) (ite (= x859 x774) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x859))))
(assert (x637 x135))
(assert (x637 x708))
(assert (= (x738 x271) (ite (= x980 x271) x967 (x1165 x271))))
(assert (=> (<= x53 10000) (= (x492 x53) (x598 x53))))
(assert (x637 x671))
(assert (= (ite (and (not x339) x812 x131) (x901 x1120) (x572 x1120)) (x2 x1120)))
(assert (x637 x1086))
(assert (= (ite (= x1197 x388) x1152 (x117 x388)) (x213 x388)))
(assert (x637 x967))
(assert (= x810 (and x92 (not x964))))
(assert (x637 x230))
(assert (x637 x344))
(assert (x637 x748))
(assert (x637 x1028))
(assert (x291 x453 x233))
(assert (=> (<= x907 10000) (= (x598 x907) (x492 x907))))
(assert (= (ite (and x92 x964) (x830 x390) (x1137 x390)) (x317 x390)))
(assert (x637 x118))
(assert (x637 x210))
(assert (= (x598 2532887486) (x492 2532887486)))
(assert (x637 x1183))
(assert (x637 x290))
(assert (x637 x479))
(assert (x637 x728))
(assert (x637 x57))
(assert (x637 x507))
(assert (x637 x367))
(assert (x292 x387))
(assert (x637 x459))
(assert (= x540 x219))
(assert (x637 x1184))
(assert (x637 x944))
(assert (= (ite (= x682 x63) x793 (x959 x682)) (x1158 x682)))
(assert (=> (>= 10000 x61) (= (x598 x61) (x492 x61))))
(assert (x637 x1122))
(assert (x637 x282))
(assert (x637 x311))
(assert (=> (>= 10000 x310) (= (x598 x310) (x492 x310))))
(assert (= x956 (x446 (x492 x956))))
(assert (= (x317 x1187) (ite (and x964 x92) (x830 x1187) (x1137 x1187))))
(assert (= (x1132 x975) (ite (= x975 x1033) x498 (x906 x975))))
(assert (= (x446 (x492 x505)) x505))
(assert (x292 x929))
(assert (= (ite (= x448 x401) x34 (x213 x448)) (x391 x448)))
(assert (x292 x11))
(assert (= (x492 2293535753) (x598 2293535753)))
(assert (= (x492 911411945) (x598 911411945)))
(assert (x637 x965))
(assert (=> (<= x1263 10000) (= (x598 x1263) (x492 x1263))))
(assert (= (x94 x965) (ite (and (not x339) (not x882) x131 x429 (not x392)) (x391 x965) (ite (and (not x339) (not x429) x131 (not x392)) (x213 x965) (ite (and x392 x131 (not x339)) (x213 x965) (x44 x965))))))
(assert (x637 x676))
(assert (x637 x1262))
(assert (x637 x355))
(assert (x637 x43))
(assert (x637 x427))
(assert (= (x1158 x271) (ite (= x271 x63) x793 (x959 x271))))
(assert (x637 x545))
(assert (= (x446 (x492 x932)) x932))
(assert (= (or (and x943 (not x542)) x262 (and (not x1018) x709)) x24))
(assert (=> (<= x838 10000) (= (x598 x838) (x492 x838))))
(assert (= (x446 (x598 911411945)) 911411945))
(assert (=> (>= 10000 x1213) (= (x492 x1213) (x598 x1213))))
(assert (x637 x913))
(assert (=> (>= 10000 x235) (= (x598 x235) (x492 x235))))
(assert (x637 x821))
(assert (= (x446 (x492 x573)) x573))
(assert (x637 x860))
(assert (x637 x526))
(assert (x637 x658))
(assert (x292 x930))
(assert (= x855 (=> (and (not (= 2293535753 x228)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1113) (= (x869 (x492 x892) (x598 4) 0) x1092) (= x1039 x1113) (= (x466 x561) x1113) (> 2690754053 x228) (= (x869 (x492 x1175) x1092 0) x823) (< 0 x750) (= x228 2532887486) (< x228 2960351575) (= x613 (x869 (x492 x929) x823 0)) (<= 0 x1113) (not (= 2512682246 x228)) (= x750 (x629 (x492 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x1175) (>= 1461501637330902918203684832716283019655932542975 x929) (not (= x228 2418364589)) (not (> 2293535753 x228)) (= x561 (x869 (x492 x230) x613 0)) (<= x230 1461501637330902918203684832716283019655932542975)) (=> (and (= (mod (* 32 x498) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x833) (>= x45 0) (= (x977 (+ x1033 x773)) x89) (>= x1216 0) (= x1033 (x977 (+ x186 160))) (>= 1461501637330902918203684832716283019655932542975 x453) (not (= x1264 2743102681)) (not (> 4 x559)) (= x863 x453) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x551) (and (< x551 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x551) true)))) (<= 0 x1215) (= x650 (<= x704 x1047)) (= x125 x439) (not (> 2293535753 x1264)) (= x1122 x462) (>= 1461501637330902918203684832716283019655932542975 x1216) (not (> x498 18446744073709551615)) (= x1214 (x977 (+ x125 35))) (= x503 (= 0 x461)) (= x1052 (or x335 (not x62))) (or (and (> x1214 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x559 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x559) (<= x1214 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x559 x1214))) (= x370 (x977 (+ x125 36))) (= x1047 x778) (= x461 x1016) (= x635 x986) (or (and (= (mod (* x498 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x702) (= (x977 (+ 160 x377)) x294) (not x1002)) x1002) (not (< x1122 x608)) (= x124 x634) (= x617 x608) (= x1016 x1039) (= x1216 x867) (>= 1461501637330902918203684832716283019655932542975 x827) (= (x1133 (- x559 4)) x551) (> x45 x1122) (= x582 x453) (not (= 2798343961 x1264)) (= 0 x1200) (not (< x559 x74)) (>= 1461501637330902918203684832716283019655932542975 x1215) (= x354 (x629 (x492 274184521717934524641157099916833587206))) (= 0 x972) (= x28 x778) (< x1264 2960351575) (= x1264 2939843472) (not (> x439 18446744073709551615)) (= x827 x386) (= 0 x50) x650 (= x591 (x977 (+ x125 4))) (= x867 x619) (= x1002 (= x498 0)) (= x564 x704) (= (x977 (+ 160 x288)) x544) (= x726 x75) (= (= x124 0) x688) (or (and (= x372 (x1133 (- x247 1))) (= x990 (> x247 1)) (not (< 1 x372)) x408 (not (> 1 x247)) (or (not x990) (and (= x628 (x906 128)) x990 (= (< 2 x247) x578) (= (x906 128) x128) (= (x850 1461501637330902918203684832716283019655932542975 x1071) x697) (< 1 x628) (or (not x578) (and (= x729 (< 3 x247)) (not x729) (= (x850 1461501637330902918203684832716283019655932542975 x514) x55) (> x946 0) (= x237 (x906 160)) (= x118 (x906 128)) (= (x850 1461501637330902918203684832716283019655932542975 x237) x518) x578 (not (= x518 x55)) (= (x906 224) x514) (= x946 (x906 128)) (< 2 x118))) (= (x906 192) x766) (= (x906 160) x1071) (not (= x382 x697)) (= (x850 1461501637330902918203684832716283019655932542975 x766) x382) (> x128 0)))) (not x408)) (= (> x608 x1122) x339) (< 0 x354) x1052 (or (and (= x89 x683) x339) (and (= (= x872 0) x1142) (= x256 (x33 x1166)) (= (x869 (x492 x375) x1270 0) x804) (= (x850 1461501637330902918203684832716283019655932542975 x453) x1116) (= x1151 (x2 x562)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1152) (= (x1153 x37) x315) (= (x869 (x492 x608) (x598 5) 0) x992) (= x1197 (x977 (+ 32 x15))) (<= 0 x256) (= x113 (x869 (x492 x489) x851 0)) (= x5 (x248 x113)) (= (x869 (x492 x608) (x598 10) 0) x1185) (or (and (= x599 (x869 (x492 x608) (x598 6) 0)) (= x61 (x850 1461501637330902918203684832716283019655932542975 x453)) (= (x869 (x492 x61) x599 0) x474) x812) (and (= x477 (x869 (x492 x473) x696 0)) (= (x850 1461501637330902918203684832716283019655932542975 x453) x197) (= x652 (* x1229 x1146)) (= x136 (x869 (x492 x197) x663 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1229 x1146)) (not x812) (= x696 (x869 (x492 x608) (x598 6) 0)) (= (x869 (x492 x608) (x598 5) 0) x663) (= x652 x14) (= x473 (x850 1461501637330902918203684832716283019655932542975 x453)))) (= x851 (x869 (x492 x608) (x598 6) 0)) (not (= x784 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x562 (x869 (x492 x1189) x992 0)) (= x802 (> x633 x1122)) (= (< x5 x184) x356) (or (and (= (x869 (x492 x749) x193 0) x1242) (= x790 (x869 (x492 x633) (x598 9) 0)) (<= x970 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x869 (x492 x748) x1034 0) x607) (= x970 (x73 x1242)) (<= 0 x45) (= (x869 (x492 x633) (x598 1) 0) x1241) (>= x321 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x45) (= (x1153 x1241) x1061) (<= 0 x970) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x321) (or (and (= (x869 (x492 x633) (x598 5) 0) x616) (= (x850 1461501637330902918203684832716283019655932542975 x453) x1066) (= (x869 (x492 x736) x115 0) x819) (not x360) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1027 x487)) (= x115 (x869 (x492 x633) (x598 6) 0)) (= x536 x13) (= (x850 1461501637330902918203684832716283019655932542975 x453) x736) (= x13 (* x487 x1027)) (= (x869 (x492 x1066) x616 0) x947)) (and (= x1239 (x869 (x492 x1006) x361 0)) x360 (= x361 (x869 (x492 x633) (x598 6) 0)) (= x1006 (x850 1461501637330902918203684832716283019655932542975 x453)))) (>= x399 0) (= x733 (x869 (x492 x932) x48 0)) (<= 0 x793) (<= 0 x1027) (= x932 (x850 1461501637330902918203684832716283019655932542975 x453)) (= (x623 x733) x399) (= x909 (x850 1461501637330902918203684832716283019655932542975 x453)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x45) (= (x850 1461501637330902918203684832716283019655932542975 x75) x217) (= (x869 (x492 x567) x412 0) x110) (= x715 (x1158 x63)) (= (x977 (+ x605 64)) x16) (= (x869 (x492 x909) x790 0) x1172) (or x1090 (and (or (not x969) (and (= x777 (x869 (x492 x832) x1217 0)) x969 (= x324 (x869 (x492 x202) x1014 0)) (= x703 (x134 x380)) (<= x658 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x832) (= x658 (x1150 x1226)) (< (+ x538 x173) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1150 x1226) x832) (= x642 (x869 (x492 x633) (x598 4) 0)) (= (x869 (x492 x916) x642 0) x563) (= (x1150 x1226) x700) (= (x869 (x492 x658) x520 0) x1231) (= (x1158 x1033) x1262) (= x811 (x869 (x492 x633) (x598 11) 0)) (<= 0 x703) (< (* x703 x685) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 1461501637330902918203684832716283019655932542975 x700) (< 0 x498) (<= x703 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x850 1461501637330902918203684832716283019655932542975 x453) x916) (= (x850 1461501637330902918203684832716283019655932542975 x453) x202) (<= x206 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x173 (div x1238 1000000000000000000)) (= x1218 x538) (= (+ x493 x1218) x331) (= x520 (x869 (x492 x759) x563 0)) (= (< 1 x498) x216) (= x1014 (x869 (x492 x633) (x598 4) 0)) (< 0 x498) (= x1238 (* x685 x703)) (= x206 (x1001 x1231)) (= x541 (x869 (x492 x395) x811 0)) (= x370 x1226) (= x1217 (x869 (x492 x1000) x324 0)) (= (x850 1461501637330902918203684832716283019655932542975 x453) x395) (> x1262 0) (>= x206 0) (= x759 (x850 1461501637330902918203684832716283019655932542975 x75)) (> x498 0) (= x173 x493) (= (x977 (+ x377 160)) x70) (= (x850 1461501637330902918203684832716283019655932542975 x75) x1000) (= (x1158 x70) x538) (= 0 x206) (= x380 (x869 (x492 x700) x541 0)) (or (and (< (* x685 x344) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x172 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x344) (= (x850 1461501637330902918203684832716283019655932542975 x75) x978) x216 (= (x883 x1225) x172) (= (x1150 x1273) x174) (= (x869 (x492 x633) (x598 11) 0) x374) (> x498 1) (< (+ x178 x1162) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1162 x192) (<= x344 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1225 (x869 (x492 x1119) x1261 0)) (= x576 (x869 (x492 x633) (x598 4) 0)) (= x1138 (x850 1461501637330902918203684832716283019655932542975 x453)) (= (x869 (x492 x674) x84 0) x1261) (= x178 x40) (= (x134 x1245) x344) (= x443 (* x685 x344)) (= (x977 (+ x377 192)) x78) (= (+ x40 x192) x713) (= x505 (x1150 x1273)) (= (x869 (x492 x611) x576 0) x175) (>= 1461501637330902918203684832716283019655932542975 x505) (= x1087 (x869 (x492 x174) x430 0)) (< 1 x162) (= x674 (x850 1461501637330902918203684832716283019655932542975 x75)) (= 0 x172) (= (< 2 x498) x1161) (< 1 x498) (= x430 (x869 (x492 x978) x175 0)) (= (x1150 x1273) x1119) (= (x850 1461501637330902918203684832716283019655932542975 x453) x423) (= x570 (x869 (x492 x633) (x598 4) 0)) (> x498 1) (= (x869 (x492 x423) x374 0) x727) (= x1162 (div x443 1000000000000000000)) (= x162 (x1219 x1033)) (= x611 (x850 1461501637330902918203684832716283019655932542975 x453)) (= (x977 (+ x591 64)) x1273) (>= 1461501637330902918203684832716283019655932542975 x1119) (= (x1219 x78) x178) (= (x869 (x492 x1138) x570 0) x84) (not x1161) (>= 1461501637330902918203684832716283019655932542975 x174) (= x1245 (x869 (x492 x505) x727 0)) (<= 0 x172)) (not x216)))) (= x969 (> x498 0)) (= 0 x1114) (= (mod (* x970 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x800) (= x685 (div x800 x399)) (= x807 1) (< 0 x399) (= x234 (ite (> x970 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= (x850 x807 x234) x1114) (not x1090))) (<= x793 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x399) (= x749 (x850 1461501637330902918203684832716283019655932542975 x75)) (= x821 (x161 x389)) (>= x821 0) (= x1034 (x869 (x492 x633) (x598 10) 0)) (= (x869 (x492 x254) x935 0) x193) (or (and (= x647 (x869 (x492 x633) (x598 7) 0)) (= (x869 (x492 x1192) x647 0) x1143) (= x605 x480) (= (x850 1461501637330902918203684832716283019655932542975 x75) x573) (= (x850 1461501637330902918203684832716283019655932542975 x453) x1192) x945 (= x457 (x869 (x492 x573) x1143 0))) (and (= x319 (x968 x119 1)) (= x282 (x850 1461501637330902918203684832716283019655932542975 x453)) (= x678 (x977 (+ x15 128))) (= x242 (x869 (x492 x282) x100 0)) (= (x869 (x492 x223) x242 0) x1235) (>= x798 0) (= x100 (x869 (x492 x633) (x598 7) 0)) (= (x977 (+ x15 96)) x305) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x798) (or (and (not x898) (= 0 x231)) (and (or (and (= x778 x728) (not x232)) (and (= x441 x728) x232 (= (x9 x305) x441))) x898 (or (and (not x782) (not (> x798 x728)) (= x411 604800) (= (ite (> 604800 x1124) x1124 604800) x758) (= x231 x758) (= (x1133 (- x728 x798)) x1124)) (and x782 (= x20 (x1133 (- x728 x139))) (not (< x728 x139)) (= x139 (x9 x480)) (= x231 x20))) (= (> x778 x587) x232) (= (= 0 x798) x782) (= (x9 x305) x587))) (= x1154 (x1153 x119)) (= x666 (= x231 0)) (>= x1154 0) (= x760 (x1277 x319)) (= x223 (x850 1461501637330902918203684832716283019655932542975 x75)) (or (and (= (x850 1461501637330902918203684832716283019655932542975 x75) x860) (= x415 (x869 (x492 x268) x188 0)) (= (x869 (x492 x1042) x775 0) x227) (= x875 (x869 (x492 x860) x227 0)) (= x605 x678) (= x769 x670) (< (* x821 x231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x850 1461501637330902918203684832716283019655932542975 x453) x1042) (= x1244 (x869 (x492 x633) (x598 7) 0)) (= (* x231 x821) x670) (= (x869 (x492 x633) (x598 3) 0) x775) (not x666) (= (x850 1461501637330902918203684832716283019655932542975 x75) x268) (= x235 (x850 1461501637330902918203684832716283019655932542975 x453)) (= (x869 (x492 x235) x1244 0) x188)) (and (= (x869 (x492 x633) (x598 7) 0) x1168) (= x535 (x869 (x492 x17) x1168 0)) (= x269 (x869 (x492 x907) x535 0)) (= x605 x678) (= (x850 1461501637330902918203684832716283019655932542975 x75) x907) (= x17 (x850 1461501637330902918203684832716283019655932542975 x453)) x666)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x760) (= x798 (x236 x1235)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1154) (not x945) (= x898 (< x798 x1155)) (= x119 (x869 (x492 x633) (x598 1) 0)) (>= x760 0) (= (x9 x305) x1155))) (not x802) (= (= x970 0) x1090) (<= 0 x1061) (= (x850 1461501637330902918203684832716283019655932542975 x453) x254) (= x275 (> x715 x321)) (= x1027 (x458 x607)) (= (x869 (x492 x217) x1172 0) x389) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x821) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1061) (= (x968 x1241 1) x385) (= x935 (x869 (x492 x633) (x598 3) 0)) (<= x1027 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x63 (x977 (+ x605 32))) (= x567 (x850 1461501637330902918203684832716283019655932542975 x453)) (= (x850 1461501637330902918203684832716283019655932542975 x453) x748) (= (x677 x110) x321) (= (x869 (x492 x633) (x598 6) 0) x412) (= (= 0 x487) x360) (or (and (= 0 x487) (not x275)) (and (or (and (= (x1158 x63) x1180) (= x1180 x665) x47) (and (= x778 x665) (not x47))) (= (= 0 x321) x528) (= (< x900 x778) x47) (or (and (not (> x321 x665)) (not x528) (= x529 (ite (> 604800 x1076) x1076 604800)) (= x487 x529) (= x1076 (x1133 (- x665 x321))) (= 604800 x905)) (and (not (> x290 x665)) x528 (= (x1158 x605) x290) (= x226 (x1133 (- x665 x290))) (= x226 x487))) (= x900 (x1158 x63)) x275)) (= x683 x16) (= (x1277 x385) x793) (= (x869 (x492 x633) (x598 5) 0) x48) (<= 0 x45) (not (= x633 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x327 (x977 (+ 2 x608))) (not (< x45 x633)) (= x945 (= 0 x821)) (> x327 x462) (not (< x45 x633))) (and (= x480 x683) x802)) (= (x850 1461501637330902918203684832716283019655932542975 x453) x489) (<= x315 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1151 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (not x392) (or (not x429) (and (= x882 (> x498 1)) (> x498 0) (= (x869 (x492 x1128) x467 0) x829) x429 (= x815 (x1150 x878)) (= 0 x311) (< 0 x129) (<= x311 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x850 1461501637330902918203684832716283019655932542975 x453) x1257) (= (x869 (x492 x1257) x54 0) x1036) (= x1128 (x850 1461501637330902918203684832716283019655932542975 x75)) (= x401 (x977 (+ 160 x377))) (= x34 (+ x342 x1063)) (< (+ x452 x511) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x850 1461501637330902918203684832716283019655932542975 x453) x283) (<= 0 x311) (= x566 (x869 (x492 x764) x1199 0)) (= (x869 (x492 x608) (x598 4) 0) x54) (= (x213 x1033) x129) (>= x1230 0) (= x1253 (x850 1461501637330902918203684832716283019655932542975 x75)) (= (x869 (x492 x241) x829 0) x406) (= (x1150 x878) x241) (< 0 x498) (= x764 (x850 1461501637330902918203684832716283019655932542975 x453)) (= x370 x878) (= x1063 x511) (= (x134 x1186) x1230) (= x1186 (x869 (x492 x620) x566 0)) (= (div x914 1000000000000000000) x452) (= x620 (x1150 x878)) (= (x466 x406) x311) (= x914 (* x1009 x1230)) (< (* x1009 x1230) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x869 (x492 x815) x755 0) x260) (= (x869 (x492 x608) (x598 4) 0) x224) (= x1199 (x869 (x492 x608) (x598 11) 0)) (= x467 (x869 (x492 x283) x224 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1230) (= x452 x342) (or (not x882) (and (= x59 (x869 (x492 x608) (x598 11) 0)) (= (div x402 1000000000000000000) x825) (= x1130 (x869 (x492 x785) x309 0)) (<= x1222 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x166 (x391 x1033)) (= (x977 (+ 64 x591)) x26) (= x1179 (x869 (x492 x808) x71 0)) (= x742 (x850 1461501637330902918203684832716283019655932542975 x453)) (= x387 (x1150 x26)) (= (< 2 x498) x1054) (< 1 x166) (= (x869 (x492 x512) x1179 0) x886) (= x402 (* x828 x1009)) (= x334 (x391 x210)) (= (x1150 x26) x920) (= (x869 (x492 x387) x149 0) x258) (= (x869 (x492 x257) x59 0) x149) (< (+ x334 x825) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1222) (= (x850 1461501637330902918203684832716283019655932542975 x75) x512) (< (* x828 x1009) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1222 (x314 x1130)) (= (x977 (+ 192 x377)) x210) (<= x920 1461501637330902918203684832716283019655932542975) x882 (< 1 x498) (= (x134 x258) x828) (= x808 (x850 1461501637330902918203684832716283019655932542975 x453)) (= x517 (x869 (x492 x920) x886 0)) (>= x828 0) (< 1 x498) (not x1054) (= x309 (x869 (x492 x1252) x692 0)) (= x825 x560) (= x692 (x869 (x492 x742) x824 0)) (> x498 1) (= x334 x931) (<= x828 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1252 (x850 1461501637330902918203684832716283019655932542975 x75)) (= (x869 (x492 x608) (x598 4) 0) x71) (>= 1461501637330902918203684832716283019655932542975 x785) (<= x387 1461501637330902918203684832716283019655932542975) (= x824 (x869 (x492 x608) (x598 4) 0)) (= x785 (x1150 x26)) (= x995 (+ x931 x560)) (= x1222 0) (= (x850 1461501637330902918203684832716283019655932542975 x453) x257))) (= (x213 x401) x511) (<= x241 1461501637330902918203684832716283019655932542975) (> x498 0) (= (x869 (x492 x1253) x1036 0) x755) (>= 1461501637330902918203684832716283019655932542975 x815) (<= x620 1461501637330902918203684832716283019655932542975))) (= x104 (ite (> x256 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= (div x889 x1151) x1009) (= 1 x1280) (= (x850 x1280 x104) x183) (= x429 (> x498 0)) (= x889 (mod (* 1000000000000000000 x256) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< 0 x1151) (= x183 0)) x392) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x45) (= x1189 (x850 1461501637330902918203684832716283019655932542975 x453)) (= (x213 x1197) x184) (= (x968 x37 1) x88) (not (< x45 x784)) (<= 0 x315) (= x392 (= x256 0)) (<= x872 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x45) (<= 0 x872) (= x375 (x850 1461501637330902918203684832716283019655932542975 x75)) (= x661 (x869 (x492 x608) (x598 3) 0)) (not x339) (= (x869 (x492 x854) x724 0) x1270) (= (x977 (+ x608 1)) x633) (<= 0 x5) (= x872 (x161 x804)) (= (x869 (x492 x608) (x598 9) 0) x724) (= x1166 (x869 (x492 x884) x323 0)) (= (x850 1461501637330902918203684832716283019655932542975 x453) x976) (= (x977 (+ x15 64)) x480) (= (x869 (x492 x976) x661 0) x323) (not (< x45 x784)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x45) (= x37 (x869 (x492 x608) (x598 1) 0)) (= x1152 (x1277 x88)) (= x1229 (x458 x565)) (>= x1152 0) (<= 0 x1229) (or (and (= x1146 0) (not x356)) (and (or (and (= x308 x778) (not x1260)) (and (= x1269 x308) x1260 (= (x213 x1197) x1269))) (= x201 (x213 x1197)) (or (and (= x116 (x213 x15)) (= x1146 x158) x691 (= x158 (x1133 (- x308 x116))) (not (< x308 x116))) (and (= (ite (< x1176 604800) x1176 604800) x325) (= x1146 x325) (= x1202 604800) (not (> x5 x308)) (= (x1133 (- x308 x5)) x1176) (not x691))) x356 (= x691 (= x5 0)) (= x1260 (< x201 x778)))) (>= x45 0) (= x854 (x850 1461501637330902918203684832716283019655932542975 x453)) (= (x869 (x492 x1116) x1185 0) x565) (= x884 (x850 1461501637330902918203684832716283019655932542975 x75)) (<= x256 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1151) (<= x1229 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (<= 0 x284) (or (and (= x36 x15) x431 (= x85 (x869 (x492 x846) x558 0)) (= (x850 1461501637330902918203684832716283019655932542975 x453) x846) (= x1144 (x869 (x492 x1141) x85 0)) (= (x869 (x492 x608) (x598 7) 0) x558) (= x1141 (x850 1461501637330902918203684832716283019655932542975 x75))) (and (= x842 (x850 1461501637330902918203684832716283019655932542975 x453)) (= (x869 (x492 x856) x1227 0) x196) (= x625 x1011) (= x58 (x869 (x492 x1035) x718 0)) (= x1203 (x850 1461501637330902918203684832716283019655932542975 x453)) (not x431) (= (x869 (x492 x842) x707 0) x718) (= x198 (x869 (x492 x608) (x598 7) 0)) (= (x869 (x492 x1203) x198 0) x1227) (< (* x653 x872) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x850 1461501637330902918203684832716283019655932542975 x75) x856) (= x36 x15) (= x707 (x869 (x492 x608) (x598 3) 0)) (= (* x872 x653) x625) (= (x850 1461501637330902918203684832716283019655932542975 x75) x1035))) (= (x869 (x492 x622) x921 0) x165) (<= x284 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1005 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x95 x1038) x915) (= (x1277 x694) x109) (= (x977 (+ x89 32)) x1038) (or (and (or (and (= x924 (x1133 (- x472 x154))) x469 (not (< x472 x154)) (= (x95 x89) x154) (= x924 x653)) (and (= x794 (ite (> 604800 x1169) x1169 604800)) (not x469) (= 604800 x413) (= x794 x653) (not (< x472 x1005)) (= (x1133 (- x472 x1005)) x1169))) (= x362 (x95 x1038)) (= (> x778 x362) x1118) x1102 (= x469 (= x1005 0)) (or (and (not x1118) (= x472 x778)) (and (= x472 x747) (= (x95 x1038) x747) x1118))) (and (not x1102) (= 0 x653))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x109) (= (x968 x640 1) x694) (not x1142) (= x852 (x850 1461501637330902918203684832716283019655932542975 x453)) (>= x109 0) (= (x869 (x492 x608) (x598 7) 0) x651) (= x640 (x869 (x492 x608) (x598 1) 0)) (= (< x1005 x915) x1102) (= (x850 1461501637330902918203684832716283019655932542975 x75) x622) (= x921 (x869 (x492 x852) x651 0)) (= (= 0 x653) x431) (= (x977 (+ 64 x89)) x36) (>= x1005 0) (= (x1153 x640) x284) (= (x1022 x165) x1005)) (and (= x15 x89) (= (x869 (x492 x838) x220 0) x1064) (= (x869 (x492 x608) (x598 7) 0) x1237) (= (x869 (x492 x1) x1237 0) x220) (= x1 (x850 1461501637330902918203684832716283019655932542975 x453)) (= x838 (x850 1461501637330902918203684832716283019655932542975 x75)) x1142)) (= (= x1146 0) x812))) (= x186 (mod (* 32 x498) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 128 x776) (not (= x1264 2868243304)) (= x1069 x75) (= (<= x559 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (= x784 x608) (not (= x1264 2690754053)) (= x550 (and x465 x688)) (= (> x435 0) x408) (= 0 x332) (<= x45 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x247 1)) (not (= 2764855426 x1264)) (= (and x550 x503) x335) (= x377 (x977 (+ 32 x186))) (= x435 (x1133 (- x247 1))) (= x988 x1122) (<= 0 x827) (= x62 (= 0 x712)) (> x559 163) (= x465 (= x635 0)) (= (x977 (+ 32 x288)) x773) (= (x977 (+ x370 x833)) x74) (= x288 (mod (* x498 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (> 2690754053 x1264)) (= 0 x114) (= x332 x464) (<= x75 1461501637330902918203684832716283019655932542975) (= (x906 128) x247) (= x564 x712) (= x498 (x1150 x591))) x1095))))
(assert (= (x1125 x1028) (ite (and x1002 x131) (x1132 x1028) (x1207 x1028))))
(assert (x637 x173))
(assert (= x705 (x446 (x492 x705))))
(assert (= (x446 (x598 2418364589)) 2418364589))
(assert (x637 x970))
(assert (x637 x1222))
(assert (= (x213 x859) (ite (= x859 x1197) x1152 (x117 x859))))
(assert (x637 x462))
(assert (= (x598 2939843472) (x492 2939843472)))
(assert (=> (<= x674 10000) (= (x492 x674) (x598 x674))))
(assert (x637 x399))
(assert (x637 x1020))
(assert (= (ite (= x63 x448) x793 (x959 x448)) (x1158 x448)))
(assert (x637 x422))
(assert (= x211 (x446 (x492 x211))))
(assert (= (x1219 x965) (ite (= x965 x70) x331 (x1158 x965))))
(assert (x637 x318))
(assert (= (x1190 160) 0))
(assert (x637 x36))
(assert (x637 x375))
(assert (x637 x1040))
(assert (=> (>= 10000 x1035) (= (x492 x1035) (x598 x1035))))
(assert (x292 x322))
(assert (x637 x1081))
(assert (= (x1219 x448) (ite (= x70 x448) x331 (x1158 x448))))
(assert (x637 x1039))
(assert (x637 x1187))
(assert (= (x1132 x346) (ite (= x1033 x346) x498 (x906 x346))))
(assert (= (x446 (x598 2512682246)) 2512682246))
(assert (=> (>= 10000 x470) (= (x492 x470) (x598 x470))))
(assert (= (x446 (x598 1968616202)) 1968616202))
(assert (x292 x1119))
(assert (= x1253 (x446 (x492 x1253))))
(assert (x637 x472))
(assert (x637 x254))
(assert (x637 x750))
(assert (x637 x608))
(assert (= (x1053 x1187) (ite (= x774 x1187) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x1187))))
(assert (= (x446 (x598 635128645)) 635128645))
(assert (= (ite (= x1197 x448) x1152 (x117 x448)) (x213 x448)))
(assert (x637 x480))
(assert (= x273 x962))
(assert (=> (<= x638 10000) (= (x492 x638) (x598 x638))))
(assert (x637 x348))
(assert (x637 x334))
(assert (x637 x45))
(assert (x292 x1073))
(assert (x637 x346))
(assert (x637 x1275))
(assert (x637 x1203))
(assert (= (x446 (x492 x282)) x282))
(assert (x292 x417))
(assert (= (x391 x681) (ite (= x681 x401) x34 (x213 x681))))
(assert (= (x446 (x968 x37 1)) (+ (x446 x37) 1)))
(assert (= (x1181 x1187) (ite (= x1187 x1278) x418 (x870 x1187))))
(assert (x637 x1111))
(assert (x637 x1072))
(assert (x637 x1214))
(assert (= (x870 x448) (ite (= x448 x122) x425 (x937 x448))))
(assert (x292 x674))
(assert (= (x391 x271) (ite (= x271 x401) x34 (x213 x271))))
(assert (x291 x1071 x52))
(assert (x979 x1079 x225))
(assert (= (x937 x1127) (ite (= x1127 x261) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x579 x1127))))
(assert (x637 x1113))
(assert (= x1234 (x446 (x492 x1234))))
(assert (x637 x407))
(assert (= (x446 (x492 x174)) x174))
(assert (x637 x1103))
(assert (= x1281 (x446 (x492 x1281))))
(assert (= (x446 (x492 x395)) x395))
(assert (=> (<= x77 10000) (= (x598 x77) (x492 x77))))
(assert (x637 x1154))
(assert (= (x738 x681) (ite (= x980 x681) x967 (x1165 x681))))
(assert (=> (<= x254 10000) (= (x598 x254) (x492 x254))))
(assert (=> (<= x1119 10000) (= (x598 x1119) (x492 x1119))))
(assert (x637 x381))
(assert (= (x1219 x682) (ite (= x682 x70) x331 (x1158 x682))))
(assert (= (x1125 x390) (ite (and x1002 x131) (x1132 x390) (x1207 x390))))
(assert (x637 x1031))
(assert (x637 x70))
(assert (x637 x489))
(assert (x637 x259))
(assert (x637 x461))
(assert (= x736 (x446 (x492 x736))))
(assert (x637 x703))
(assert (x637 x218))
(assert (= (ite (= x1187 x1197) x1152 (x117 x1187)) (x213 x1187)))
(assert (= (x446 (x492 x1189)) x1189))
(assert (x637 x929))
(assert (x637 x125))
(assert (x637 x1011))
(assert (x637 x41))
(assert (x637 x1047))
(assert (= (x883 x1225) (ite (= x1225 x777) x970 (x1001 x1225))))
(assert (= (x1190 x346) 0))
(assert (x637 x178))
(assert (= (x492 2868243304) (x598 2868243304)))
(assert (x292 x846))
(assert (x637 x235))
(assert (x637 x1176))
(assert (x637 x538))
(assert (x637 x123))
(assert (= (ite (= x859 x70) x331 (x1158 x859)) (x1219 x859)))
(assert (x637 x464))
(assert (x637 x768))
(assert (x637 x337))
(assert (= x1203 (x446 (x492 x1203))))
(assert (= (ite (and (not x339) x131 (not x392) x429 (not x882)) (x391 x531) (ite (and x131 (not x339) (not x429) (not x392)) (x213 x531) (ite (and x131 (not x339) x392) (x213 x531) (x44 x531)))) (x94 x531)))
(assert (=> (>= 10000 x1257) (= (x598 x1257) (x492 x1257))))
(assert (x637 x536))
(assert (= x127 (=> (and (or (not x547) (and (not (or (> x603 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x603 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x603)))) (= (ite x153 1 0) x1024) x547 (= x689 x1024) (= (= 0 x689) x1074) (< 0 x689) (= x153 (not x1074)) (= (x977 (+ x975 32)) x448) (= x603 (x1259 x975)) (= x689 (x1259 x448)))) (= x1051 (= x575 0)) (= (> x301 0) x547) (not (= 0 x763)) (or (and (= x975 x690) (= x501 (x977 (+ 96 x826))) (not x1051)) (and x1051 (= x975 96))) (= (x795 (x492 x96)) x445) x1041 (not x1026) (= (> x498 2) x1026) (= (x1259 x975) x301) (= x1041 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x732 (x492 274184521717934524641157099916833587206))))) x1246)))
(assert (=> (>= 10000 x417) (= (x492 x417) (x598 x417))))
(assert (x292 x1263))
(assert (=> (<= x759 10000) (= (x492 x759) (x598 x759))))
(assert (x637 x789))
(assert (x637 x448))
(assert (x637 x1202))
(assert (= (=> (and (= x266 x714) x1167 (= (x1220 (x492 x96)) x586) (= x723 (x1220 (x492 274184521717934524641157099916833587206))) x809 (= (>= x450 0) x1021) (= (< x586 115792089237316195423570985008687907853269984665640564039457584007913129639936) x809) (= (x267 (x492 x96)) x22) x1021 (= x450 (x1220 (x492 274184521717934524641157099916833587206))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x267 (x492 x96))) x1167) (= x272 (= 274184521717934524641157099916833587218 x96))) (and (=> (and (not x488) (= (or (and (< x410 64) (= true (<= x410 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x410 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x488) (= x527 x1086) (not (= x209 1889567281)) (= x252 (x869 (x492 274184521717934524641157099916833587206) (x598 1) 0)) (not x212) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x65) (= x212 (< x69 x481)) (= x1088 (x1133 (- x69 x481))) (not (= 826074471 x209)) (= x575 32) (not (> 649617121 x209)) x272 (<= 0 x65) (= x545 x1191) (= x221 (x629 (x492 274184521717934524641157099916833587218))) (= (x1133 (- x281 4)) x410) (<= 0 x69) (= 1 x763) (not (> 4 x281)) (= x814 x545) (not (= x209 649617121)) (<= x69 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x768 (+ x527 x940)) (not (= x209 2514000705)) (= x281 x266) (not x632) (= x69 (x1106 x252)) (= x1056 274184521717934524641157099916833587206) (= (x792 x476) x65) (< 0 x221) (= x896 x1183) (<= x545 1461501637330902918203684832716283019655932542975) (= x281 68) (= x1086 x481) (= x672 x481) (= x632 (> x1086 x69)) (= x1068 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x476 (x869 (x492 x545) (x598 1) 0)) (< (+ x65 x1086) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x255 274184521717934524641157099916833587206) (= x831 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1086 x65))) (= x65 x940) (not x831) (= x330 (x869 (x492 274184521717934524641157099916833587206) (x598 1) 0)) (= 2835717307 x209)) x127) (=> (not x272) x177))) x1043))
(assert (x637 x1096))
(assert (x637 x128))
(assert (x637 x933))
(assert (=> (<= x936 10000) (= (x492 x936) (x598 x936))))
(assert (= (ite (and x92 x964) (x830 x975) (x1137 x975)) (x317 x975)))
(assert (x637 x512))
(assert (x637 x743))
(assert (= (ite (= x1127 x1140) x1067 (x1053 x1127)) (x1165 x1127)))
(assert (= (ite (= x1033 x388) x498 (x906 x388)) (x1132 x388)))
(assert (x637 x470))
(assert (= (x598 635128645) (x492 635128645)))
(assert (x637 x354))
(assert (= (x446 (x598 87118632)) 87118632))
(assert (= (ite (= x261 x390) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x579 x390)) (x937 x390)))
(assert (x637 x297))
(assert (= x764 (x446 (x492 x764))))
(assert (= (x492 26959946667150639794667015087019630673637144422540572481103610249215) (x598 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x637 x683))
(assert (= 0 (x1190 x448)))
(assert (x637 x601))
(assert (x637 x679))
(assert (x637 x1268))
(assert (= 0 (x1190 x245)))
(assert (= x789 (x446 (x492 x789))))
(assert (x637 x786))
(assert (x292 x217))
(assert (x637 x514))
(assert (x637 x332))
(assert (= (x1132 x965) (ite (= x965 x1033) x498 (x906 x965))))
(assert (x637 x826))
(assert (= (=> (= x144 (= x705 274184521717934524641157099916833587214)) (and (=> (and (< 0 x18) (not (< x156 649617121)) (= x397 x1255) (= x837 (+ x263 x1010)) (not (= x156 649617121)) (= x265 (< x1101 x941)) (= 1 x1224) (< (+ x338 x941) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1101 0) (<= x338 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x46 x417) (= (< x1101 x862) x1240) (>= x338 0) (= x944 (x1133 (- x397 4))) (not (= 826074471 x156)) (= x791 x862) (= x941 x263) (= x459 x636) x144 (= (x869 (x492 x417) (x598 1) 0) x521) (= x156 2835717307) (= x922 32) (= x1010 x338) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1101) (= x338 (x12 x419)) (not x1250) (= (x1129 x552) x1101) (= (x1133 (- x1101 x862)) x592) (= x229 274184521717934524641157099916833587206) (not x1240) (= x397 68) (not x1045) (= (or (> x944 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x944) (= (<= x944 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1045) (= x862 x941) (not (= x156 1889567281)) (>= 1461501637330902918203684832716283019655932542975 x417) (= x552 (x869 (x492 274184521717934524641157099916833587206) (x598 1) 0)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x163) (= x18 (x629 (x492 274184521717934524641157099916833587214))) (not (> 4 x397)) (= (x869 (x492 x417) (x598 1) 0) x419) (= 274184521717934524641157099916833587206 x1211) (= (>= (+ x338 x941) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1250) (not x265) (= x1147 (x869 (x492 274184521717934524641157099916833587206) (x598 1) 0)) (not (= 2514000705 x156)) (= x417 x933)) x215) (=> (not x144) x1107))) x523))
(assert (=> (<= x1175 10000) (= (x492 x1175) (x598 x1175))))
(assert (= (x179 x346) (ite (and x542 x597 x326 (not x359) x839 x943) (x822 x346) (ite (and x542 x597 (not x326) x839 x943) (x738 x346) (ite (and x542 x839 x943 (not x597)) (x1165 x346) (ite (and x542 (not x839) x943) (x1053 x346) (x68 x346)))))))
(assert (x637 x283))
(assert (x292 x1035))
(assert (x637 x184))
(assert (= (ite (= x346 x63) x793 (x959 x346)) (x1158 x346)))
(assert (x637 x767))
(assert (= (ite (and x1002 x131) (x1132 x1033) (x1207 x1033)) (x1125 x1033)))
(assert (x637 x1024))
(assert (=> (>= 10000 x1189) (= (x598 x1189) (x492 x1189))))
(assert (x292 274184521717934524641157099916833587218))
(assert (= (x446 (x492 x1263)) x1263))
(assert (x637 x592))
(assert (x292 x280))
(assert (= (ite (and x964 x92) (x830 x271) (x1137 x271)) (x317 x271)))
(assert (= (ite (= x63 x1028) x793 (x959 x1028)) (x1158 x1028)))
(assert (= (ite (= x1140 x975) x1067 (x1053 x975)) (x1165 x975)))
(assert (x637 x656))
(assert (= x567 (x446 (x492 x567))))
(assert (=> (<= x241 10000) (= (x598 x241) (x492 x241))))
(assert (= (x446 (x492 x280)) x280))
(assert (= (=> (and (= x908 (x4 (x492 274184521717934524641157099916833587206))) (= x386 x574) (<= x574 1461501637330902918203684832716283019655932542975) (>= x1136 0) (<= 0 x908) (>= 1461501637330902918203684832716283019655932542975 x1136) (= x1081 (x4 (x492 274184521717934524641157099916833587218))) (>= 1461501637330902918203684832716283019655932542975 x679) (= x679 x208) (= false x364) (= false x624) (<= 0 x363) (>= x1075 0) (<= 0 x1081) (= (< 0 (x629 (x492 274184521717934524641157099916833587214))) x974) (= x369 x671) (= x363 x993) (<= 0 x1007) (<= 0 x679) x72 x1012 (= x108 false) (>= x574 0) (= x513 false) (= 2939843472 x93) (= x1012 (> (x629 (x492 274184521717934524641157099916833587206)) 0)) (= (> (x629 (x492 274184521717934524641157099916833587218)) 0) x72) (>= 1461501637330902918203684832716283019655932542975 x1075) (= x449 5) x974 (>= 1461501637330902918203684832716283019655932542975 x363) (= x1007 (x4 (x492 274184521717934524641157099916833587214)))) x1163) x805))
(assert (x292 x145))
(assert (x292 x489))
(assert (x637 x246))
(assert (x637 x285))
(assert (x637 x981))
(assert true)
(assert (= x1178 (=> (and (= (>= x343 x259) x834) (= x316 x343) (= x1015 x341) (= x259 x384)) (and x834 (=> (and (= (>= x1040 x699) x112) (= x1040 x1177) (= x564 x699)) (and x112 (=> (and (= x656 x880) (= x588 x708) (= x1084 (>= x588 x656))) (and (=> (and (= x1017 x1015) (= x1275 x1016) (= (<= x1275 x1017) x923)) (and x923 (=> (and (= x485 2939843472) (= (<= x86 x107) x27) (= x1019 true) (= x264 true) (= 2939843472 x427) (= x735 2512682246) (= true x1265) (= x643 1517119036) (= x86 x1194) (= true x719) (= x925 2939843472) (= x1148 87118632) (= x204 3123789364) (= x926 2939843472) (= x1096 x107) (= true x1121)) (and (=> (and (= x64 x1279) (= (<= x955 x1279) x604) (= x634 x955)) (and x604 (=> (and (= (<= x928 x133) x843) (= 2939843472 x848) (= true x912) (= x865 false) (= x918 2512682246) (= x1050 x133) (= x986 x928) (= false x176)) x843))) x27)))) x1084))))))))
(assert (= 2764855426 (x446 (x598 2764855426))))
(assert (x637 x1151))
(assert (x637 x596))
(assert (= 1889567281 (x446 (x598 1889567281))))
(assert (= x235 (x446 (x492 x235))))
(assert (= (x446 (x492 x393)) x393))
(assert (x637 x700))
(assert (x637 x815))
(assert (x637 x64))
(assert (x637 x362))
(assert (= (x813 x390) (ite (and x542 (not x276) x943) (x179 x390) (x960 x390))))
(assert (=> (<= x1236 10000) (= (x492 x1236) (x598 x1236))))
(assert (x637 x907))
(assert (x637 x532))
(assert (= (x446 (x492 x892)) x892))
(assert (= (ite (= x245 x401) x34 (x213 x245)) (x391 x245)))
(assert (x637 x1141))
(assert (= 0 (x1190 x859)))
(assert (x292 x1128))
(assert (= (ite (= x70 x245) x331 (x1158 x245)) (x1219 x245)))
(assert (x637 x710))
(assert (=> (<= x1252 10000) (= (x492 x1252) (x598 x1252))))
(assert (x637 x501))
(assert (x637 x983))
(assert (x637 x1134))
(assert (= 18446744073709551615 (x446 (x598 18446744073709551615))))
(assert (x637 x857))
(assert (x292 x1175))
(assert (x637 x838))
(assert (= (x1165 x1033) (ite (= x1140 x1033) x1067 (x1053 x1033))))
(assert (x637 x1211))
(assert (= (x1053 x245) (ite (= x245 x774) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x245))))
(assert (x637 x887))
(assert (= (x1125 x448) (ite (and x131 x1002) (x1132 x448) (x1207 x448))))
(assert (x637 x833))
(assert (x637 x418))
(assert (=> (<= x174 10000) (= (x598 x174) (x492 x174))))
(assert (x637 x878))
(assert (= x285 (x446 (x492 x285))))
(assert (=> (>= 10000 x620) (= (x598 x620) (x492 x620))))
(assert (x637 x773))
(assert (= (x446 (x598 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x637 x74))
(assert (x637 x245))
(assert (x292 x842))
(assert (x637 x1000))
(assert (= (x446 (x492 x1020)) x1020))
(assert (=> (>= 10000 x96) (= (x598 x96) (x492 x96))))
(assert (= 0 (x1190 x682)))
(assert (= (x598 3123789364) (x492 3123789364)))
(assert (= (ite (= x1033 x1127) x498 (x906 x1127)) (x1132 x1127)))
(assert (x160 x807 x234))
(assert (= (x446 (x492 x61)) x61))
(assert (x292 x1252))
(assert (x292 x223))
(assert (x637 x916))
(assert (= x262 (or (and x1212 x621) (and x272 x806))))
(assert (x637 x714))
(assert (= (x937 x1187) (ite (= x261 x1187) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x579 x1187))))
(assert (x637 x1229))
(assert (x637 x22))
(assert (x637 x808))
(assert (x637 x441))
(assert (= (and x542 x943) x92))
(assert (x637 x559))
(assert (= (ite (= x847 x388) x557 (x738 x388)) (x822 x388)))
(assert (x637 x618))
(assert (x637 x864))
(assert (x637 x759))
(assert (x637 x158))
(assert (= x340 (x446 (x492 x340))))
(assert (x637 x203))
(assert (x637 x1197))
(assert (= (x738 x448) (ite (= x980 x448) x967 (x1165 x448))))
(assert (= (ite (and (not x276) x943 x542) (x179 x965) (x960 x965)) (x813 x965)))
(assert (x637 x1155))
(assert (x637 x387))
(assert (x637 x65))
(assert (x637 x142))
(assert (= (ite (= x531 x401) x34 (x213 x531)) (x391 x531)))
(assert (x637 x1216))
(assert (x637 x763))
(assert (= (x1158 x859) (ite (= x63 x859) x793 (x959 x859))))
(assert (= 0 (x1190 x390)))
(assert (x637 x1180))
(assert (x292 x852))
(assert (x637 x588))
(assert (= (x2 x733) (ite (and (not x339) x812 x131) (x901 x733) (x572 x733))))
(assert (= (x1283 x975) (ite (and x806 x272) (x1110 x975) (x954 x975))))
(assert (= (x822 x271) (ite (= x271 x847) x557 (x738 x271))))
(assert (= (ite (= x70 x271) x331 (x1158 x271)) (x1219 x271)))
(assert (= (x94 x271) (ite (and x429 (not x339) (not x392) x131 (not x882)) (x391 x271) (ite (and (not x392) (not x429) (not x339) x131) (x213 x271) (ite (and (not x339) x131 x392) (x213 x271) (x44 x271))))))
(assert (x292 x854))
(assert (x637 x505))
(assert (=> (>= 10000 x211) (= (x598 x211) (x492 x211))))
(assert (= (x446 (x598 2258409472)) 2258409472))
(assert (x637 x162))
(assert (x637 x425))
(assert (x637 x847))
(assert (= x842 (x446 (x492 x842))))
(assert (= x919 x709))
(assert (= (ite (= x1187 x847) x557 (x738 x1187)) (x822 x1187)))
(assert (= (x492 2690754053) (x598 2690754053)))
(assert (= (ite (= x210 x1197) x1152 (x117 x210)) (x213 x210)))
(assert (= (x446 (x492 x936)) x936))
(assert (= (x598 2211524764) (x492 2211524764)))
(assert (= (x870 x1127) (ite (= x1127 x122) x425 (x937 x1127))))
(assert (= (ite (= x390 x122) x425 (x937 x390)) (x870 x390)))
(assert (= (ite (= x774 x681) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x681)) (x1053 x681)))
(assert (x637 x918))
(assert (x637 x116))
(assert (x637 x511))
(assert (x637 x379))
(assert (x637 x1191))
(assert (= (x446 (x492 x1006)) x1006))
(assert (= (x822 x1033) (ite (= x847 x1033) x557 (x738 x1033))))
(assert (= (x492 649617121) (x598 649617121)))
(assert (= (ite (= x1033 x980) x967 (x1165 x1033)) (x738 x1033)))
(assert (= (ite (= x1055 x1033) x498 (x906 x1055)) (x1132 x1055)))
(assert (x291 x237 x1247))
(assert (= (ite (and x943 x839 x597 x326 x542 (not x359)) (x822 x965) (ite (and x943 x597 (not x326) x542 x839) (x738 x965) (ite (and (not x597) x839 x542 x943) (x1165 x965) (ite (and x943 (not x839) x542) (x1053 x965) (x68 x965))))) (x179 x965)))
(assert (x299 x766))
(assert (= (ite (= x980 x975) x967 (x1165 x975)) (x738 x975)))
(assert (= (ite (= x245 x63) x793 (x959 x245)) (x1158 x245)))
(assert (x637 x573))
(assert (=> (<= x633 10000) (= (x598 x633) (x492 x633))))
(assert (x637 x315))
(assert (x637 x817))
(assert (= (=> (= (> x498 0) x542) (and (=> (not x542) x1246) (=> (and (= (x977 (+ 128 x277)) x584) (= x276 (> x752 x1049)) (= (x977 (+ 96 x277)) x774) (= (< 0 x1049) x839) (= x531 (x977 (+ x683 32))) (= (x977 (+ 36 x683)) x277) (= (x1053 x683) x1049) (= (x977 (+ x683 68)) x347) (= x654 (x1133 (- x482 32))) (= x705 (x1150 x167)) (= x482 (x1133 (- x185 x683))) (or (and (= (x977 (+ x584 x1049)) x1268) x276) (not x276)) (or (and x839 (= x584 x1140) (= (x1053 x859) x1067) (= x531 x859) (= (> x1049 32) x597) (or (and (= 32 x752) (not x597)) (and (= (x977 (+ x185 96)) x980) x597 (or (and (= 64 x752) (not x326)) (and (= x557 (x738 x245)) (= x359 (< 96 x1049)) (= x245 (x977 (+ x683 96))) x326 (or (and (= 96 x752) (not x359)) (and (= (x977 (+ x683 128)) x1055) (= x246 (x822 x1055)) (= x752 128) (= x194 (> x1049 128)) x359 (= x403 (x977 (+ 160 x185))) (not x194))) (= x847 (x977 (+ 128 x185))))) (= x326 (> x1049 64)) (= (x1165 x682) x967) (= x682 (x977 (+ 64 x683)))))) (and (= 0 x752) (not x839))) (= (x999 x531) x1079) (= (x302 x1033) x345) (<= x705 1461501637330902918203684832716283019655932542975) (= (x977 (+ x377 160)) x1028) (= x479 (x629 (x492 x705))) (< 0 x498) (= x31 (x977 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x515))) (= (x302 x1028) x791) (= (> x479 0) x695) (= (x850 26959946667150639794667015087019630673637144422540572481103610249215 x1079) x515) (> x345 0) (= x370 x167) (= (x977 (+ 100 x683)) x185) x542 x695 (= x300 0) (= x46 (x850 1461501637330902918203684832716283019655932542975 x75))) x1004))) x1095))
(assert (x637 x778))
(assert (= x716 x540))
(assert (= (ite (and (not x336) x1018 x709) (x844 x448) (x595 x448)) (x1159 x448)))
(assert (x637 x1234))
(assert (= x1116 (x446 (x492 x1116))))
(assert (=> (>= 10000 x230) (= (x492 x230) (x598 x230))))
(assert (= (ite (= x774 x1127) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x1127)) (x1053 x1127)))
(assert (= (ite (and (not x882) (not x392) (not x339) x131 x429) (x391 x78) (ite (and (not x429) (not x339) x131 (not x392)) (x213 x78) (ite (and (not x339) x131 x392) (x213 x78) (x44 x78)))) (x94 x78)))
(assert (= (x446 (x598 2061678023)) 2061678023))
(assert (x637 x104))
(assert (=> (>= 10000 x815) (= (x598 x815) (x492 x815))))
(assert (= (x391 x346) (ite (= x346 x401) x34 (x213 x346))))
(assert (x637 x924))
(assert (x637 x1140))
(assert (=> (>= 10000 x17) (= (x598 x17) (x492 x17))))
(assert (= (x1001 x1225) (ite (and x429 (not x392) (not x882) (not x339) x131) (x314 x1225) (ite (and (not x429) (not x339) x131 (not x392)) (x466 x1225) (ite (and (not x339) x131 x392) (x466 x1225) (x146 x1225))))))
(assert (= (ite (= x355 x975) x239 (x1181 x975)) (x484 x975)))
(assert (= (x446 (x492 x473)) x473))
(assert (x637 x973))
(assert (= (ite (= x965 x261) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x579 x965)) (x937 x965)))
(assert (= x268 (x446 (x492 x268))))
(assert (x292 x608))
(assert (x637 x1169))
(assert (x637 x159))
(assert (x637 x791))
(assert (= (x446 (x968 x119 1)) (+ 1 (x446 x119))))
(assert (x637 x704))
(assert (= (x1158 x605) (ite (= x605 x63) x793 (x959 x605))))
(assert (= (x1125 x975) (ite (and x1002 x131) (x1132 x975) (x1207 x975))))
(assert (x637 x934))
(assert (= (x317 x346) (ite (and x92 x964) (x830 x346) (x1137 x346))))
(assert (= (ite (= x1033 x531) x498 (x906 x531)) (x1132 x531)))
(assert (= (ite (= x401 x70) x34 (x213 x70)) (x391 x70)))
(assert (= (x1190 224) 0))
(assert (x637 x988))
(assert (= x1037 x304))
(assert (x292 x884))
(assert (x637 x1056))
(assert (= 0 (x1190 x1055)))
(assert (x637 x766))
(assert (x292 x1257))
(assert (x292 x395))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x446 (x598 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (ite (= x1127 x70) x331 (x1158 x1127)) (x1219 x1127)))
(assert (x292 x1006))
(assert (x637 x460))
(assert (=> (>= 10000 x545) (= (x598 x545) (x492 x545))))
(assert (= (ite (and x429 (not x882) (not x339) (not x392) x131) (x391 x975) (ite (and (not x339) (not x429) (not x392) x131) (x213 x975) (ite (and x131 (not x339) x392) (x213 x975) (x44 x975)))) (x94 x975)))
(assert (= (ite (= x1055 x63) x793 (x959 x1055)) (x1158 x1055)))
(assert (x637 x794))
(assert (= (x484 x1187) (ite (= x1187 x355) x239 (x1181 x1187))))
(assert (=> (>= 10000 x700) (= (x598 x700) (x492 x700))))
(assert (= (ite (= x965 x1197) x1152 (x117 x965)) (x213 x965)))
(assert (x637 x393))
(assert (x637 x1073))
(assert (x292 x470))
(assert (x637 x223))
(assert (x292 x283))
(assert (= x350 (=> (and (< x1093 2960351575) (<= x569 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x638) (= (x869 (x492 x638) x1030 0) x553) (not (= 2418364589 x1093)) (>= x569 0) (= (x629 (x492 274184521717934524641157099916833587206)) x743) (= x341 x569) (= x29 (x869 (x492 x211) x553 0)) (not (> 2293535753 x1093)) (= (x869 (x492 x956) x313 0) x1030) (not (= 2293535753 x1093)) (> x743 0) (>= 1461501637330902918203684832716283019655932542975 x956) (< x1093 2690754053) (>= 1461501637330902918203684832716283019655932542975 x211) (not (= 2512682246 x1093)) (= (x869 (x492 x936) (x598 4) 0) x313) (= x1093 2532887486) (= x569 (x205 x29))) x1178)))
(assert (=> (>= 10000 x375) (= (x598 x375) (x492 x375))))
(assert (= (x1158 x975) (ite (= x63 x975) x793 (x959 x975))))
(assert (x292 x573))
(assert (= (ite (= x980 x1127) x967 (x1165 x1127)) (x738 x1127)))
(assert (x637 x648))
(assert (= x498 (x1132 x1033)))
(assert (= 0 (x1190 x388)))
(assert (x637 x370))
(assert (x637 x619))
(assert (x637 x508))
(assert (x299 x1280))
(assert (x637 x972))
(assert (x637 x15))
(assert (x637 x735))
(assert (x637 x239))
(assert (= (x822 x965) (ite (= x847 x965) x557 (x738 x965))))
(assert (= 0 (x1190 x401)))
(assert (x292 x285))
(assert (x637 x928))
(assert (x637 x1108))
(assert (x637 x1194))
(assert (x292 x254))
(assert (= (x94 x1033) (ite (and (not x339) (not x882) x131 x429 (not x392)) (x391 x1033) (ite (and x131 (not x392) (not x339) (not x429)) (x213 x1033) (ite (and x392 x131 (not x339)) (x213 x1033) (x44 x1033))))))
(assert (=> (>= 10000 x748) (= (x598 x748) (x492 x748))))
(assert (= (x179 x448) (ite (and x326 x943 x839 x597 (not x359) x542) (x822 x448) (ite (and x542 x839 (not x326) x943 x597) (x738 x448) (ite (and x943 x542 x839 (not x597)) (x1165 x448) (ite (and (not x839) x943 x542) (x1053 x448) (x68 x448)))))))
(assert (= (ite (= x681 x1033) x498 (x906 x681)) (x1132 x681)))
(assert (= (x813 x271) (ite (and x943 x542 (not x276)) (x179 x271) (x960 x271))))
(assert (= (x179 x1127) (ite (and x542 (not x359) x839 x597 x326 x943) (x822 x1127) (ite (and x542 (not x326) x943 x597 x839) (x738 x1127) (ite (and x542 x943 (not x597) x839) (x1165 x1127) (ite (and x542 x943 (not x839)) (x1053 x1127) (x68 x1127)))))))
(assert (x637 x657))
(assert (= (ite (= x1130 x260) x256 (x466 x1130)) (x314 x1130)))
(assert (= (ite (= x390 x401) x34 (x213 x390)) (x391 x390)))
(assert (x637 x557))
(assert (= (ite (and (not x392) x429 (not x882) (not x339) x131) (x391 x388) (ite (and x131 (not x429) (not x339) (not x392)) (x213 x388) (ite (and (not x339) x392 x131) (x213 x388) (x44 x388)))) (x94 x388)))
(assert (= (x446 (x492 x512)) x512))
(assert (x637 x221))
(assert (= (x391 x1127) (ite (= x1127 x401) x34 (x213 x1127))))
(assert (= (x446 (x492 x1175)) x1175))
(assert (x637 x1119))
(assert (= (ite (and x92 x964) (x830 x1033) (x1137 x1033)) (x317 x1033)))
(assert (= (=> (and (= x249 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x337)) (= (x4 (x492 274184521717934524641157099916833587206)) x1248) x739 (= (x4 (x492 274184521717934524641157099916833587206)) x371) x655 (= (x731 (x492 x705)) x857) (= (= x705 274184521717934524641157099916833587218) x964) x249 (= (>= x1248 0) x655) (= x1255 x1049) (= (< (x731 (x492 x705)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x739) (= x337 (x4 (x492 x705)))) (and (=> (not x964) x523) (=> (and (not (= x539 649617121)) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x274 x135)) x495) (not (= x539 1889567281)) (= 274184521717934524641157099916833587206 x657) (<= x948 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x1206) (= (x869 (x492 x1263) (x598 1) 0) x121) (= x135 x438) (>= x948 0) (= (or (and (= true (<= x426 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x426)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x426)) x1206) (= 68 x328) (= (> x274 x948) x754) (= (> x796 x948) x1135) (<= x135 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1164 (x1133 (- x948 x796))) (= x1263 x329) (= 32 x922) (= x627 274184521717934524641157099916833587206) (<= x1263 1461501637330902918203684832716283019655932542975) (not x1135) (= x151 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x539 826074471)) (= x274 x796) (< (+ x135 x274) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x869 (x492 274184521717934524641157099916833587206) (x598 1) 0) x187) (= x218 x913) (not (= 2514000705 x539)) (not x754) (not x495) (= 2835717307 x539) (= (x1133 (- x328 4)) x426) (= x507 (+ x438 x468)) (not (< x539 649617121)) (= x468 x274) (> x1046 0) (= (x207 x121) x135) (not (> 4 x328)) x964 (= (x869 (x492 x1263) (x598 1) 0) x997) (= (x87 x994) x948) (= x1046 (x629 (x492 274184521717934524641157099916833587218))) (= (x869 (x492 274184521717934524641157099916833587206) (x598 1) 0) x994) (= x791 x796) (= x1255 x328) (= x46 x1263) (<= 0 x135) (= 1 x1224)) x215))) x1004))
(assert (x292 x423))
(assert (= (ite (= x1033 x70) x331 (x1158 x1033)) (x1219 x1033)))
(assert (x292 x202))
(assert (x637 x854))
(assert (x291 x514 x721))
(assert (x637 x1114))
(assert (x637 x1177))
(assert (= (ite (= x847 x448) x557 (x738 x448)) (x822 x448)))
(assert (= (x446 (x492 x658)) x658))
(assert (= (x446 (x492 x375)) x375))
(assert (x292 x545))
(assert (x637 x776))
(assert (= (ite (= x29 x260) x256 (x466 x29)) (x314 x29)))
(assert (x637 x993))
(assert (= (x1165 x965) (ite (= x1140 x965) x1067 (x1053 x965))))
(assert (= x1198 (and x810 (not x144))))
(assert (= (x446 (x492 x369)) x369))
(assert (=> (>= 10000 x1253) (= (x598 x1253) (x492 x1253))))
(assert (x637 x712))
(assert (= (x391 x682) (ite (= x401 x682) x34 (x213 x682))))
(assert (x637 x228))
(assert (= (x1219 x1028) (ite (= x70 x1028) x331 (x1158 x1028))))
(assert (x292 x909))
(assert (x637 x705))
(assert (x292 x1195))
(assert (= (ite (and x542 x943 (not x276)) (x179 x346) (x960 x346)) (x813 x346)))
(assert (= (x446 (x492 x638)) x638))
(assert (x637 x129))
(assert (x637 x699))
(assert (x292 x638))
(assert (x637 x1035))
(assert (= (x446 (x492 x1138)) x1138))
(assert (x637 x533))
(assert (x637 x685))
(assert (= (x446 (x492 x1042)) x1042))
(assert (x292 x369))
(assert (= (ite (and x1002 x131) (x1132 x78) (x1207 x78)) (x1125 x78)))
(assert (=> (>= 10000 x808) (= (x492 x808) (x598 x808))))
(assert (= (x822 x975) (ite (= x975 x847) x557 (x738 x975))))
(assert (x292 x211))
(assert (= (x1219 x78) (ite (= x70 x78) x331 (x1158 x78))))
(assert (= (ite (= x346 x774) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x346)) (x1053 x346)))
(assert (x292 x785))
(assert (= (x1132 x390) (ite (= x390 x1033) x498 (x906 x390))))
(assert (x299 x973))
(assert (x637 x880))
(assert (= (ite (and x326 x839 x542 x943 x597 (not x359)) (x822 x390) (ite (and x542 x839 x597 x943 (not x326)) (x738 x390) (ite (and x943 x839 x542 (not x597)) (x1165 x390) (ite (and x943 x542 (not x839)) (x1053 x390) (x68 x390))))) (x179 x390)))
(assert (= (x1132 x682) (ite (= x682 x1033) x498 (x906 x682))))
(assert (x637 x1101))
(assert (= (ite (= x448 x261) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x579 x448)) (x937 x448)))
(assert (= true x1107))
(assert (= (x446 (x492 x322)) x322))
(assert (x637 x274))
(assert (x292 x736))
(assert (= x423 (x446 (x492 x423))))
(assert (=> (<= x473 10000) (= (x492 x473) (x598 x473))))
(assert (x637 x529))
(assert (x292 274184521717934524641157099916833587214))
(assert (x292 274184521717934524641157099916833587206))
(assert (= (x446 (x492 x749)) x749))
(assert (=> (>= 10000 x860) (= (x598 x860) (x492 x860))))
(assert (= (=> (and (= x991 (x869 (x492 x280) (x598 7) 0)) (= x864 x1251) (not (= x508 468353030)) (= (x869 (x492 x150) x902 0) x478) (= 759532456 x508) (<= 0 x1251) (< 0 x1105) (not (= 635128645 x508)) (<= x741 1461501637330902918203684832716283019655932542975) (= x1105 (x629 (x492 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x150) (> 2293535753 x508) (<= x1251 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x902 (x869 (x492 x741) x991 0)) (not (< x508 468353030)) (> 911411945 x508) (= (x1022 x478) x1251)) (=> (and (= x671 x170) (= x363 x340) (= x1136 x1195) (= x564 x864)) x1170)) x897))
(assert (x292 x230))
(assert (x637 x1128))
(assert (x637 x226))
(assert (= (ite (and x1002 x131) (x1132 x271) (x1207 x271)) (x1125 x271)))
(assert (= (x446 (x492 x197)) x197))
(assert (x637 x497))
(assert (= (x492 274184521717934524641157099916833587218) (x598 274184521717934524641157099916833587218)))
(assert (= (x492 69947311) (x598 69947311)))
(assert (= (x598 1889567281) (x492 1889567281)))
(assert (x637 x363))
(assert (= (x598 142201243) (x492 142201243)))
(assert (= (x446 (x492 x1119)) x1119))
(assert (x637 x410))
(assert (x637 x1069))
(assert (x637 x1280))
(assert (= (x492 1000000000000000000) (x598 1000000000000000000)))
(assert (x299 x453))
(assert (x637 x627))
(assert (= (x446 (x492 x909)) x909))
(assert (= (ite (= x63 x390) x793 (x959 x390)) (x1158 x390)))
(assert (= x793 (x1158 x63)))
(assert (x160 x1280 x104))
(assert (x637 x1255))
(assert (= (ite (and x131 (not x339) x1142) (x243 x1166) (ite (and x131 (not x339) x431 (not x1142)) (x243 x1166) (x1210 x1166))) (x33 x1166)))
(assert (=> (<= x1138 10000) (= (x492 x1138) (x598 x1138))))
(assert (x292 x1192))
(assert (= (x598 759532456) (x492 759532456)))
(assert (x637 x1055))
(assert (= 0 (x1190 x681)))
(assert (x637 x665))
(assert (x637 x1213))
(assert (x637 x481))
(assert (= (x1219 x531) (ite (= x70 x531) x331 (x1158 x531))))
(assert (x292 x808))
(assert (= x1163 (=> (and (>= 1461501637330902918203684832716283019655932542975 x993) (= (x869 (x492 x993) x97 0) x895) (= (x869 (x492 x369) (x598 6) 0) x97) (not (= x981 1986467848)) (not (= 1968616202 x981)) (= x942 (x629 (x492 274184521717934524641157099916833587206))) (< 0 x942) (<= x137 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x981 2061678023)) (not (= x981 2211524764)) (not (< x981 911411945)) (>= x137 0) (= x137 x817) (not (> 1968616202 x981)) (< x981 2293535753) (= x137 (x248 x895)) (= 2258409472 x981)) (=> (and (= x671 x1234) (= x930 x363) (= x817 x384)) x1123))))
(assert (= (x598 1461501637330902918203684832716283019655932542975) (x492 1461501637330902918203684832716283019655932542975)))
(assert (x637 x28))
(assert (x637 x1049))
(assert (=> (>= 10000 x1243) (= (x598 x1243) (x492 x1243))))
(assert (x637 x382))
(assert (= (ite (= x401 x388) x34 (x213 x388)) (x391 x388)))
(assert (x637 x582))
(assert (x637 x5))
(assert (x637 x1152))
(assert (= x6 x899))
(assert (x292 x505))
(assert (= (x1053 x390) (ite (= x774 x390) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x390))))
(assert (= 649617121 (x446 (x598 649617121))))
(assert (x637 x170))
(assert (x292 x1))
(assert (x637 x956))
(assert (x637 x280))
(assert (x292 x1281))
(assert (= x1221 (x446 (x492 x1221))))
(assert (x637 x434))
(assert (x637 x742))
(assert (= true x1037))
(assert (x637 x715))
(assert (= x230 (x446 (x492 x230))))
(assert (x637 x976))
(assert (x637 x257))
(assert (= 1461501637330902918203684832716283019655932542975 (x446 (x598 1461501637330902918203684832716283019655932542975))))
(assert (x637 x1266))
(assert (x637 x328))
(assert (x637 x183))
(assert (x637 x862))
(assert (= x417 (x446 (x492 x417))))
(assert (x637 x622))
(assert (x637 x240))
(assert (= (ite (and x542 x943 (not x276)) (x179 x681) (x960 x681)) (x813 x681)))
(assert (x637 x172))
(assert (= (x813 x1033) (ite (and (not x276) x542 x943) (x179 x1033) (x960 x1033))))
(assert (x637 x390))
(assert (= (x1190 192) 0))
(assert (= x978 (x446 (x492 x978))))
(assert (= (x492 2061678023) (x598 2061678023)))
(assert (=> (<= x1116 10000) (= (x598 x1116) (x492 x1116))))
(assert (= (x391 x78) (ite (= x78 x401) x34 (x213 x78))))
(assert (=> (>= 10000 x622) (= (x598 x622) (x492 x622))))
(assert (= (x1132 x859) (ite (= x1033 x859) x498 (x906 x859))))
(assert (= (x446 (x492 x310)) x310))
(assert (x637 x761))
(assert (= (ite (and x812 (not x339) x131) (x901 x562) (x572 x562)) (x2 x562)))
(assert (= (x1132 x1028) (ite (= x1033 x1028) x498 (x906 x1028))))
(assert (x637 x681))
(assert (=> (<= x929 10000) (= (x598 x929) (x492 x929))))
(assert (x637 x958))
(assert (=> (<= x736 10000) (= (x598 x736) (x492 x736))))
(assert (x637 x1027))
(assert (= (ite (= x681 x847) x557 (x738 x681)) (x822 x681)))
(assert (= (ite (= x1033 x401) x498 (x906 x401)) (x1132 x401)))
(assert (= (x813 x448) (ite (and x542 x943 (not x276)) (x179 x448) (x960 x448))))
(assert (x637 x98))
(assert (x637 x662))
(assert (= x11 (x446 (x492 x11))))
(assert (= (ite (= x1055 x1140) x1067 (x1053 x1055)) (x1165 x1055)))
(assert (= (x1165 x346) (ite (= x346 x1140) x1067 (x1053 x346))))
(assert (= (ite (and x429 (not x392) x131 (not x339) (not x882)) (x391 x1187) (ite (and (not x429) (not x339) (not x392) x131) (x213 x1187) (ite (and (not x339) x131 x392) (x213 x1187) (x44 x1187)))) (x94 x1187)))
(assert (= (x1165 x388) (ite (= x388 x1140) x1067 (x1053 x388))))
(assert (= (x598 2798343961) (x492 2798343961)))
(assert (x637 x301))
(assert (= (x1190 x271) 0))
(assert (= (x677 x405) (ite (and (not x339) x131 x812) (x101 x405) (x23 x405))))
(assert (x637 x107))
(assert (x637 x494))
(assert (x637 x760))
(assert (x637 x1033))
(assert (= (x94 x346) (ite (and (not x392) x131 x429 (not x339) (not x882)) (x391 x346) (ite (and (not x339) x131 (not x429) (not x392)) (x213 x346) (ite (and x392 x131 (not x339)) (x213 x346) (x44 x346))))))
(assert (x637 x310))
(assert (x292 x340))
(assert (x637 x1174))
(assert (= (x446 (x492 x993)) x993))
(assert (= (ite (= x975 x122) x425 (x937 x975)) (x870 x975)))
(assert (= (ite (= x1197 x15) x1152 (x117 x15)) (x213 x15)))
(assert (= (x213 x401) (ite (= x1197 x401) x1152 (x117 x401))))
(assert (= x1195 (x446 (x492 x1195))))
(assert (x299 x237))
(assert (= (ite (and x964 x92) (x830 x1127) (x1137 x1127)) (x317 x1127)))
(assert (x292 x61))
(assert (x637 x915))
(assert (x637 x1252))
(assert (x292 x920))
(assert (x637 x611))
(assert (= (x446 (x598 2293535753)) 2293535753))
(assert (= (x492 468353030) (x598 468353030)))
(assert (x637 x154))
(assert (= 2835717307 (x446 (x598 2835717307))))
(assert (x292 x978))
(assert (= (ite (= x682 x774) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x682)) (x1053 x682)))
(assert (= (x446 (x492 x283)) x283))
(assert (x637 x327))
(assert (x637 x426))
(assert (= (x598 115792089237316195423570985008687907853269984665640564039457) (x492 115792089237316195423570985008687907853269984665640564039457)))
(assert (= 0 (x1190 x531)))
(assert (= (ite (= x1127 x1197) x1152 (x117 x1127)) (x213 x1127)))
(assert (= (x492 2743102681) (x598 2743102681)))
(assert (x637 x78))
(assert (x637 x584))
(assert (x637 x930))
(assert (x637 x769))
(assert (=> (<= x993 10000) (= (x492 x993) (x598 x993))))
(assert (x637 x589))
(assert (= (ite (= x1033 x774) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x1033)) (x1053 x1033)))
(assert (not x805))
(assert (=> (>= 10000 x916) (= (x598 x916) (x492 x916))))
(assert (= (ite (and x326 x542 x839 x597 x943 (not x359)) (x822 x271) (ite (and x542 x597 x839 (not x326) x943) (x738 x271) (ite (and (not x597) x943 x542 x839) (x1165 x271) (ite (and x542 x943 (not x839)) (x1053 x271) (x68 x271))))) (x179 x271)))
(assert (x637 x1042))
(assert (x299 x840))
(assert (x292 x1020))
(assert (= (ite (and x1002 x131) (x1132 x681) (x1207 x681)) (x1125 x681)))
(assert (x637 x487))
(assert (= (x492 2258409472) (x598 2258409472)))
(assert (=> (<= x832 10000) (= (x598 x832) (x492 x832))))
(assert (=> (<= x268 10000) (= (x492 x268) (x598 x268))))
(assert (x637 x83))
(assert (x637 x1))
(assert (x637 x952))
(assert (x637 x449))
(assert (=> (>= 10000 x11) (= (x492 x11) (x598 x11))))
(assert (x637 x398))
(assert (x292 x1221))
(assert (x637 x832))
(assert (x637 x145))
(assert (=> (<= x789 10000) (= (x598 x789) (x492 x789))))
(assert (= (x598 2514000705) (x492 2514000705)))
(assert (x292 x567))
(assert (x637 x551))
(assert (= (x492 2512682246) (x598 2512682246)))
(assert (x637 x1249))
(assert (x637 x1175))
(assert (= (x179 x681) (ite (and (not x359) x839 x943 x597 x326 x542) (x822 x681) (ite (and x597 x839 x943 x542 (not x326)) (x738 x681) (ite (and x943 x542 x839 (not x597)) (x1165 x681) (ite (and x943 (not x839) x542) (x1053 x681) (x68 x681)))))))
(assert (x637 x1279))
(assert (= (x446 (x492 x920)) x920))
(assert (x292 x1236))
(assert (x637 x515))
(assert (x637 x941))
(assert (x637 x1067))
(assert (= (x446 (x492 x916)) x916))
(assert (= x815 (x446 (x492 x815))))
(assert (= (x446 (x492 x1073)) x1073))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x446 (x598 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (x637 x672))
(assert (=> (<= x1192 10000) (= (x598 x1192) (x492 x1192))))
(assert (x292 x936))
(assert (= (x492 18446744073709551615) (x598 18446744073709551615)))
(assert (= x919 (or (and x810 x144) (and x92 x964))))
(assert (= (x598 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x492 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x637 x204))
(assert (= (x446 (x598 2532887486)) 2532887486))
(assert (= (x813 x1127) (ite (and (not x276) x542 x943) (x179 x1127) (x960 x1127))))
(assert (x637 x150))
(assert (= x99 (=> (and (< x1065 468353030) (= x358 (x458 x577)) (= x1065 69947311) (= x421 x358) (= (x869 (x492 x596) (x598 10) 0) x1082) (> x454 0) (= (x869 (x492 x1213) x1082 0) x577) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x358) (>= x358 0) (< x1065 911411945) (< x1065 2293535753) (= x454 (x629 (x492 274184521717934524641157099916833587206))) (<= x1213 1461501637330902918203684832716283019655932542975)) (=> (and (= x363 x322) (= x1236 x671) (= x421 x1096) (= x887 x1136)) x373))))
(assert (=> (<= x1221 10000) (= (x492 x1221) (x598 x1221))))
(assert (x299 x1071))
(assert (x637 x966))
(assert (x637 x1236))
(assert (= (x822 x1127) (ite (= x1127 x847) x557 (x738 x1127))))
(assert (= (x1181 x975) (ite (= x1278 x975) x418 (x870 x975))))
(assert (x637 x20))
(assert (= (x446 (x492 x1)) x1))
(assert (= (x94 x1127) (ite (and (not x392) x429 (not x339) x131 (not x882)) (x391 x1127) (ite (and (not x339) (not x392) (not x429) x131) (x213 x1127) (ite (and x392 (not x339) x131) (x213 x1127) (x44 x1127))))))
(assert (x292 x815))
(assert (x637 x206))
(assert (x637 x139))
(assert (=> (<= x257 10000) (= (x492 x257) (x598 x257))))
(assert (x637 x920))
(assert (=> (>= 10000 x658) (= (x598 x658) (x492 x658))))
(assert (= (=> (and (= (x989 (x492 x705)) x1201) (= x142 (x1104 x681)) (= x1228 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x447 (x492 274184521717934524641157099916833587206)))) (= (= x922 0) x180) (not (= 0 x1224)) (or (and (= (x977 (+ x816 x584)) x602) (= (x850 115792089237316195423570985008687907853269984665640564039457584007913129639904 x840) x816) (= (x977 (+ x922 63)) x840) (not x180) (= x584 x681) (= x434 (x977 (+ 96 x185))) (= x602 x1029)) (and x180 (= x681 96) (= x584 x1029))) (= x30 (> x142 0)) (= (x447 (x492 274184521717934524641157099916833587206)) x240) (or (not x30) (and (= x43 (ite x141 1 0)) (= x1173 (x1104 x346)) (= x346 (x977 (+ 32 x681))) (= x126 (= 0 x1173)) (= (x1104 x681) x298) (= (not x126) x141) (< 0 x1173) (= x43 x1173) x30 (not (or (> x298 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x298 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x298)))))) x1228) x546) x215))
(assert (= x742 (x446 (x492 x742))))
(assert (= (=> (and (<= x1205 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1205 0) (= (x869 (x492 x887) x21 0) x610) (= x1205 (x8 x610)) (> x381 0) (= x381 (x629 (x492 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x887) (< x983 911411945) (= (x869 (x492 x322) x35 0) x21) (< x983 2293535753) (not (= x983 635128645)) (= x35 (x869 (x492 x1236) (x598 7) 0)) (= x1205 x460) (not (= x983 468353030)) (= x983 759532456) (not (> 468353030 x983)) (<= x322 1461501637330902918203684832716283019655932542975)) (=> (and (= x671 x11) (= x1177 x460) (= x789 x1136) (= x363 x767)) x866)) x373))
(assert (x637 x544))
(assert (= (x213 x271) (ite (= x1197 x271) x1152 (x117 x271))))
(assert (=> (>= 10000 x150) (= (x598 x150) (x492 x150))))
(assert (x637 x1088))
(assert (x292 x96))
(assert (= x611 (x446 (x492 x611))))
(assert (x637 x16))
(assert (= (x492 2764855426) (x598 2764855426)))
(assert (= x860 (x446 (x492 x860))))
(assert (= (x446 (x492 x53)) x53))
(assert (= (x446 (x598 2743102681)) 2743102681))
(assert (x637 x575))
(assert (x637 x17))
(assert (x292 x741))
(assert (x292 x1243))
(assert (= (x1165 x681) (ite (= x681 x1140) x1067 (x1053 x681))))
(assert (x637 x602))
(assert (= (x446 (x492 x887)) x887))
(assert (x292 x1042))
(assert (x637 x845))
(assert (= (x391 x210) (ite (= x401 x210) x34 (x213 x210))))
(assert (x637 x395))
(assert (=> (<= x280 10000) (= (x598 x280) (x492 x280))))
(assert (= 2798343961 (x446 (x598 2798343961))))
(assert (x637 x166))
(assert (x637 x413))
(assert (=> (<= x1128 10000) (= (x598 x1128) (x492 x1128))))
(assert (= (x391 x965) (ite (= x401 x965) x34 (x213 x965))))
(assert (x637 x896))
(assert (= (x314 x1225) (ite (= x260 x1225) x256 (x466 x1225))))
(assert (x637 x867))
(assert (x292 x789))
(assert (=> (>= 10000 x705) (= (x492 x705) (x598 x705))))
(assert (x105 x840 x1078 x762 x1117))
(assert (= (x1219 x390) (ite (= x390 x70) x331 (x1158 x390))))
(assert (x637 x889))
(assert (= 759532456 (x446 (x598 759532456))))
(assert (= (ite (= x346 x980) x967 (x1165 x346)) (x738 x346)))
(assert (x637 x741))
(assert (x292 x257))
(assert (=> (<= x854 10000) (= (x598 x854) (x492 x854))))
(assert (x637 x978))
(assert (x637 x884))
(assert (= x545 (x446 (x492 x545))))
(assert (= (x1190 x70) 0))
(assert (= x170 (x446 (x492 x170))))
(assert (x637 x397))
(assert (x637 x1015))
(assert (= (x1053 x965) (ite (= x965 x774) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x965))))
(assert (x637 x796))
(assert (x637 x633))
(assert (x292 x393))
(assert (x292 x310))
(assert (=> (>= 10000 x887) (= (x598 x887) (x492 x887))))
(assert (=> (<= x1066 10000) (= (x598 x1066) (x492 x1066))))
(assert (x637 x986))
(assert (x637 x340))
(assert (= (x446 (x492 x17)) x17))
(assert (x637 x583))
(assert (= (ite (and x963 x502 (not x3) x32 x1018 x709) (x484 x448) (ite (and x502 x709 x32 (not x963) x1018) (x1181 x448) (ite (and x709 x502 (not x32) x1018) (x870 x448) (ite (and x709 (not x502) x1018) (x937 x448) (x67 x448))))) (x844 x448)))
(assert (x292 x993))
(assert (x637 x167))
(assert (x637 x34))
(assert (x637 x948))
(assert (x637 x1263))
(assert (x637 x325))
(assert (= (ite (= x388 x774) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x684 x388)) (x1053 x388)))
(assert (= (x1132 x245) (ite (= x1033 x245) x498 (x906 x245))))
(assert (= x785 (x446 (x492 x785))))
(assert (x637 x417))
(assert (= (ite (= x1187 x70) x331 (x1158 x1187)) (x1219 x1187)))
(assert (x637 x1038))
(assert (= (x598 2835717307) (x492 2835717307)))
(assert (=> (<= x145 10000) (= (x492 x145) (x598 x145))))
(assert (= x202 (x446 (x492 x202))))
(assert (x637 x89))
(assert (x637 x1148))
(assert (= (x446 (x492 x838)) x838))
(assert (x292 x748))
(assert (x637 x386))
(assert (x637 x208))
(assert (= x1141 (x446 (x492 x1141))))
(assert (x637 x384))
(assert (= (ite (and x1018 (not x336) x709) (x844 x975) (x595 x975)) (x1159 x975)))
(assert (= (ite (and x92 x964) (x830 x448) (x1137 x448)) (x317 x448)))
(assert (x637 x587))
(assert (x637 x774))
(assert (x299 x1079))
(assert (x637 x231))
(assert (x637 x690))
(assert (x292 x1253))
(assert (x637 x531))
(assert (= (ite (= x260 x1231) x256 (x466 x1231)) (x314 x1231)))
(assert (= (x1132 x78) (ite (= x1033 x78) x498 (x906 x78))))
(assert (x637 x995))
(assert (x292 x53))
(assert (= (ite (= x975 x70) x331 (x1158 x975)) (x1219 x975)))
(assert (= (ite (= x122 x1187) x425 (x937 x1187)) (x870 x1187)))
(assert (=> (>= 10000 x407) (= (x598 x407) (x492 x407))))
(assert (x292 x174))
(assert (x637 x908))
(assert (=> (>= 10000 x956) (= (x492 x956) (x598 x956))))
(assert (x637 x1281))
(assert (x637 x18))
(assert (= (x446 (x598 2960351575)) 2960351575))
(assert (x637 x942))
(assert (= x608 (x446 (x492 x608))))
(assert (x292 x268))
(assert (x637 x638))
(assert (=> (<= x393 10000) (= (x598 x393) (x492 x393))))
(assert (x292 x1189))
(assert (x292 x767))
(assert (=> (>= 10000 x596) (= (x492 x596) (x598 x596))))
(assert (= (x1158 x388) (ite (= x63 x388) x793 (x959 x388))))
(assert (x292 x620))
(assert (= (x446 (x598 1000000000000000000)) 1000000000000000000))
(assert (x637 x423))
(assert (= (x94 x390) (ite (and x429 (not x339) (not x392) x131 (not x882)) (x391 x390) (ite (and (not x339) (not x429) (not x392) x131) (x213 x390) (ite (and x392 x131 (not x339)) (x213 x390) (x44 x390))))))
(assert (= x846 (x446 (x492 x846))))
(assert (x637 x892))
(assert (= (ite (and x131 x1002) (x1132 x682) (x1207 x682)) (x1125 x682)))
(assert (x637 x620))
(assert (x637 x322))
(assert (x637 x636))
(assert (= x1062 x1058))
(assert (x637 x764))
(check-sat)
