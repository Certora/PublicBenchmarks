(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x74 0)) (((x753 (x935 x74) (x208 x74) (x864 Int)) (x439 (x788 x74) (x673 Int)) (x516 (x21 Int)))))
(declare-fun x1357 () Bool)
(declare-fun x712 () Int)
(declare-fun x108 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x9 () Int)
(declare-fun x696 () Int)
(declare-fun x729 () Bool)
(declare-fun x810 (x74) Int)
(declare-fun x923 () Bool)
(declare-fun x317 () Int)
(declare-fun x693 () Int)
(declare-fun x467 () x74)
(declare-fun x1257 () Int)
(declare-fun x5 () Bool)
(declare-fun x1147 () Int)
(declare-fun x280 () Int)
(declare-fun x1432 () Int)
(declare-fun x109 () Int)
(declare-fun x417 () Bool)
(declare-fun x265 () Int)
(declare-fun x980 () Bool)
(declare-fun x984 () Bool)
(declare-fun x1074 () x74)
(declare-fun x1511 () Int)
(declare-fun x1214 () Int)
(declare-fun x1221 () x74)
(declare-fun x868 () Int)
(declare-fun x471 () Int)
(declare-fun x1143 () Int)
(declare-fun x837 () Bool)
(declare-fun x336 () Bool)
(declare-fun x1117 () Int)
(declare-fun x1199 () Int)
(declare-fun x268 () x74)
(declare-fun x409 () Bool)
(declare-fun x157 () Int)
(declare-fun x899 () Bool)
(declare-fun x470 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x494 () Bool)
(declare-fun x363 () x74)
(declare-fun x412 () Int)
(declare-fun x568 () Int)
(declare-fun x710 () x74)
(declare-fun x245 () Int)
(declare-fun x780 () Int)
(declare-fun x670 () Bool)
(declare-fun x324 () x74)
(declare-fun x389 () Int)
(declare-fun x576 () Int)
(declare-fun x767 () Int)
(declare-fun x1268 () Int)
(declare-fun x938 () Int)
(declare-fun x811 () Int)
(declare-fun x1133 () Int)
(declare-fun x751 () Int)
(declare-fun x440 () Bool)
(declare-fun x327 () Int)
(declare-fun x1173 () Int)
(declare-fun x1209 () Bool)
(declare-fun x1336 () Int)
(declare-fun x346 () Bool)
(declare-fun x688 () x74)
(declare-fun x614 (x74) Int)
(declare-fun x478 () x74)
(declare-fun x720 () Int)
(declare-fun x1192 () Bool)
(declare-fun x815 () x74)
(declare-fun x587 () Int)
(declare-fun x1299 () Int)
(declare-fun x160 () Int)
(declare-fun x392 () Int)
(declare-fun x253 () Int)
(declare-fun x1483 () Int)
(declare-fun x182 () x74)
(declare-fun x509 (Int) Int)
(declare-fun x1505 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x1107 () Int)
(declare-fun x916 () Bool)
(declare-fun x1383 () Int)
(declare-fun x424 (Int) Int)
(declare-fun x1168 () Int)
(declare-fun x775 () Bool)
(declare-fun x111 () Int)
(declare-fun x83 () Bool)
(declare-fun x49 () Int)
(declare-fun x584 () x74)
(declare-fun x95 () Int)
(declare-fun x428 () Bool)
(declare-fun x971 () x74)
(declare-fun x349 () Int)
(declare-fun x726 () Int)
(declare-fun x784 () x74)
(declare-fun x1210 () Int)
(declare-fun x704 () Int)
(declare-fun x488 () Int)
(declare-fun x1138 () Int)
(declare-fun x1046 (x74) Int)
(declare-fun x713 (Int) Int)
(declare-fun x1191 () Int)
(declare-fun x34 () Int)
(declare-fun x1129 () Int)
(declare-fun x1393 () x74)
(declare-fun x282 () Int)
(declare-fun x768 () Int)
(declare-fun x1380 () Bool)
(declare-fun x62 () Int)
(declare-fun x1140 () Int)
(declare-fun x219 () x74)
(declare-fun x665 () x74)
(declare-fun x1272 () Int)
(declare-fun x986 () Bool)
(declare-fun x1150 () x74)
(declare-fun x502 () x74)
(declare-fun x627 () Int)
(declare-fun x370 () Bool)
(declare-fun x214 () Bool)
(declare-fun x1179 () x74)
(declare-fun x48 () x74)
(declare-fun x234 () Bool)
(declare-fun x821 () Bool)
(declare-fun x193 () Bool)
(declare-fun x468 () x74)
(declare-fun x7 () Int)
(declare-fun x922 () Int)
(declare-fun x876 () Bool)
(declare-fun x528 () Bool)
(declare-fun x540 () Int)
(declare-fun x63 () Int)
(declare-fun x517 () Bool)
(declare-fun x769 () Int)
(declare-fun x851 () Bool)
(declare-fun x525 () Bool)
(declare-fun x416 () Bool)
(declare-fun x1493 () x74)
(declare-fun x1016 () Int)
(declare-fun x1181 () Int)
(declare-fun x202 (x74) Int)
(declare-fun x22 () Int)
(declare-fun x11 () Bool)
(declare-fun x426 () Int)
(declare-fun x521 () Int)
(declare-fun x93 () Int)
(declare-fun x405 () x74)
(declare-fun x1497 () Bool)
(declare-fun x1077 () Int)
(declare-fun x52 () Int)
(declare-fun x831 () Bool)
(declare-fun x754 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x194 () Bool)
(declare-fun x133 () x74)
(declare-fun x691 () x74)
(declare-fun x1433 () Bool)
(declare-fun x1501 () Bool)
(declare-fun x580 () Int)
(declare-fun x263 () Int)
(declare-fun x353 () Bool)
(declare-fun x106 () Bool)
(declare-fun x1491 () Int)
(declare-fun x853 () Bool)
(declare-fun x1127 () Int)
(declare-fun x1435 () Bool)
(declare-fun x524 () Int)
(declare-fun x1256 () Bool)
(declare-fun x225 (x74) Int)
(declare-fun x132 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x989 () Int)
(declare-fun x1488 () Int)
(declare-fun x1195 () x74)
(declare-fun x184 () Int)
(declare-fun x221 () Int)
(declare-fun x1302 (x74) Int)
(declare-fun x1000 () x74)
(declare-fun x148 () x74)
(declare-fun x165 () Int)
(declare-fun x1283 () x74)
(declare-fun x1262 () Bool)
(declare-fun x1441 () Int)
(declare-fun x1426 () x74)
(declare-fun x1233 () Bool)
(declare-fun x1186 () x74)
(declare-fun x51 () Bool)
(declare-fun x661 () Int)
(declare-fun x782 () Bool)
(declare-fun x371 () x74)
(declare-fun x760 () Int)
(declare-fun x55 () Bool)
(declare-fun x863 () Bool)
(declare-fun x1131 () x74)
(declare-fun x99 () Int)
(declare-fun x1329 () x74)
(declare-fun x1271 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x1044 () Int)
(declare-fun x862 () x74)
(declare-fun x26 () Int)
(declare-fun x1304 () Int)
(declare-fun x1157 () Int)
(declare-fun x1358 () Int)
(declare-fun x911 () Int)
(declare-fun x1017 () Int)
(declare-fun x731 () Bool)
(declare-fun x1308 () Int)
(declare-fun x1112 () Int)
(declare-fun x341 () Int)
(declare-fun x1338 () Int)
(declare-fun x87 () Bool)
(declare-fun x23 () Bool)
(declare-fun x1203 () Int)
(declare-fun x446 () x74)
(declare-fun x941 () x74)
(declare-fun x1346 () Bool)
(declare-fun x936 () Int)
(declare-fun x975 () x74)
(declare-fun x968 () Bool)
(declare-fun x104 () Int)
(declare-fun x1376 () Bool)
(declare-fun x264 () Int)
(declare-fun x965 () Int)
(declare-fun x1330 () Int)
(declare-fun x1079 () Int)
(declare-fun x917 () Int)
(declare-fun x1019 () Int)
(declare-fun x1006 () Int)
(declare-fun x698 () Bool)
(declare-fun x113 () x74)
(declare-fun x452 () Int)
(declare-fun x1052 () Bool)
(declare-fun x1484 () Int)
(declare-fun x364 () Bool)
(declare-fun x816 () x74)
(declare-fun x158 () Bool)
(declare-fun x1071 (Int) Int)
(declare-fun x60 () Bool)
(declare-fun x278 () Bool)
(declare-fun x1116 () Int)
(declare-fun x669 () Int)
(declare-fun x475 () Int)
(declare-fun x326 () Bool)
(declare-fun x912 (x74) Int)
(declare-fun x888 () Int)
(declare-fun x100 () Bool)
(declare-fun x750 () x74)
(declare-fun x1130 () x74)
(declare-fun x897 () Bool)
(declare-fun x741 () Int)
(declare-fun x407 () x74)
(declare-fun x72 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x763 () Int)
(declare-fun x1429 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x605 () Bool)
(declare-fun x359 () Int)
(declare-fun x736 () Int)
(declare-fun x362 () Int)
(declare-fun x344 () Int)
(declare-fun x865 () x74)
(declare-fun x6 () Bool)
(declare-fun x12 () Bool)
(declare-fun x224 () Bool)
(declare-fun x957 () Int)
(declare-fun x1025 () Bool)
(declare-fun x883 (Int) Int)
(declare-fun x867 () Int)
(declare-fun x632 () x74)
(declare-fun x1477 () x74)
(declare-fun x1050 () Bool)
(declare-fun x174 () Int)
(declare-fun x1439 () Int)
(declare-fun x1126 () Bool)
(declare-fun x554 () Int)
(declare-fun x700 () x74)
(declare-fun x630 () Int)
(declare-fun x1178 () Int)
(declare-fun x1200 () Int)
(declare-fun x236 () Int)
(declare-fun x621 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x306 () Bool)
(declare-fun x114 () Int)
(declare-fun x352 () Int)
(declare-fun x58 () Int)
(declare-fun x1456 () Bool)
(declare-fun x281 () Bool)
(declare-fun x709 () Int)
(declare-fun x1324 () x74)
(declare-fun x1048 () Bool)
(declare-fun x450 () Int)
(declare-fun x1347 () x74)
(declare-fun x335 () Int)
(declare-fun x1121 () Int)
(declare-fun x386 () Int)
(declare-fun x287 () Bool)
(declare-fun x508 () Bool)
(declare-fun x599 () Int)
(declare-fun x1057 () Int)
(declare-fun x818 () Bool)
(declare-fun x1187 () Int)
(declare-fun x1229 () Bool)
(declare-fun x239 () Int)
(declare-fun x366 () x74)
(declare-fun x1119 () Bool)
(declare-fun x1014 () x74)
(declare-fun x195 () Bool)
(declare-fun x304 () Bool)
(declare-fun x994 () Bool)
(declare-fun x8 (x74) Int)
(declare-fun x1243 () Int)
(declare-fun x1344 () Int)
(declare-fun x1194 () Int)
(declare-fun x551 () Bool)
(declare-fun x357 () x74)
(declare-fun x655 () Int)
(declare-fun x179 () Int)
(declare-fun x1276 () x74)
(declare-fun x882 () Bool)
(declare-fun x464 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x500 () Int)
(declare-fun x134 () x74)
(declare-fun x1349 () Int)
(declare-fun x1354 () Int)
(declare-fun x991 () Bool)
(declare-fun x1414 () Int)
(declare-fun x1372 () Bool)
(declare-fun x955 () Bool)
(declare-fun x536 (Int Int) Int)
(declare-fun x3 () Int)
(declare-fun x918 () Bool)
(declare-fun x1083 () Int)
(declare-fun x1005 () Bool)
(declare-fun x996 () Int)
(declare-fun x1319 () Int)
(declare-fun x791 (Int) Int)
(declare-fun x636 () Bool)
(declare-fun x374 () Bool)
(declare-fun x679 () Int)
(declare-fun x110 () Int)
(declare-fun x298 () Int)
(declare-fun x144 () x74)
(declare-fun x91 () Bool)
(declare-fun x915 () Bool)
(declare-fun x697 () Int)
(declare-fun x1211 () Int)
(declare-fun x518 () Int)
(declare-fun x125 () Int)
(declare-fun x1490 () x74)
(declare-fun x257 () Int)
(declare-fun x822 () Bool)
(declare-fun x1266 () Int)
(declare-fun x1070 () Bool)
(declare-fun x608 () Bool)
(declare-fun x566 () Int)
(declare-fun x1134 () Int)
(declare-fun x532 () Int)
(declare-fun x1442 () Int)
(declare-fun x1216 () Bool)
(declare-fun x1015 () Int)
(declare-fun x618 () Int)
(declare-fun x348 () Int)
(declare-fun x612 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x880 () x74)
(declare-fun x43 (Int) Int)
(declare-fun x1321 () Bool)
(declare-fun x425 () x74)
(declare-fun x603 () Int)
(declare-fun x1161 () Int)
(declare-fun x1465 () Int)
(declare-fun x1081 () Bool)
(declare-fun x1327 () Int)
(declare-fun x1315 () Int)
(declare-fun x1448 () Int)
(declare-fun x1482 () Bool)
(declare-fun x749 () Bool)
(declare-fun x1270 () Int)
(declare-fun x1142 () Bool)
(declare-fun x702 () Int)
(declare-fun x597 () Int)
(declare-fun x798 () Int)
(declare-fun x878 () Int)
(declare-fun x510 () x74)
(declare-fun x1137 () Int)
(declare-fun x981 () Int)
(declare-fun x635 () Int)
(declare-fun x495 () x74)
(declare-fun x1293 () Int)
(declare-fun x1285 () Int)
(declare-fun x560 () x74)
(declare-fun x973 () Int)
(declare-fun x167 () Bool)
(declare-fun x279 () x74)
(declare-fun x307 () Bool)
(declare-fun x1004 () Int)
(declare-fun x735 () Bool)
(declare-fun x320 () Bool)
(declare-fun x1355 () Int)
(declare-fun x491 () x74)
(declare-fun x1464 () Int)
(declare-fun x1498 () Bool)
(declare-fun x17 () Bool)
(declare-fun x262 () Int)
(declare-fun x490 () Bool)
(declare-fun x746 () Int)
(declare-fun x1295 () Int)
(declare-fun x520 () Bool)
(declare-fun x1318 () x74)
(declare-fun x501 () Int)
(declare-fun x45 () Int)
(declare-fun x1348 () Int)
(declare-fun x591 () Int)
(declare-fun x436 () Bool)
(declare-fun x453 () Int)
(declare-fun x792 () Int)
(declare-fun x497 () Int)
(declare-fun x308 () Int)
(declare-fun x1106 () Bool)
(declare-fun x483 () Int)
(declare-fun x642 () x74)
(declare-fun x545 () Int)
(declare-fun x149 () Bool)
(declare-fun x1035 () x74)
(declare-fun x430 (Int) Int)
(declare-fun x434 () x74)
(declare-fun x484 () x74)
(declare-fun x1065 () Int)
(declare-fun x1399 (x74) Int)
(declare-fun x940 () Bool)
(declare-fun x1313 () x74)
(declare-fun x1122 () Bool)
(declare-fun x1067 () Int)
(declare-fun x1506 () Int)
(declare-fun x1053 () Int)
(declare-fun x1363 () Int)
(declare-fun x1183 () x74)
(declare-fun x1250 () x74)
(declare-fun x112 () Bool)
(declare-fun x563 () Int)
(declare-fun x35 () x74)
(declare-fun x118 (x74) Int)
(declare-fun x332 () Bool)
(declare-fun x325 () x74)
(declare-fun x1170 () Int)
(declare-fun x797 () Bool)
(declare-fun x390 (Int) x74)
(declare-fun x586 () Int)
(declare-fun x432 () Int)
(declare-fun x898 () Int)
(declare-fun x398 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x1470 () x74)
(declare-fun x686 () Int)
(declare-fun x687 () Int)
(declare-fun x1059 (Int) Int)
(declare-fun x388 () x74)
(declare-fun x793 () Int)
(declare-fun x1296 () x74)
(declare-fun x481 () Bool)
(declare-fun x128 () Int)
(declare-fun x523 () Int)
(declare-fun x173 () Bool)
(declare-fun x663 (x74) Int)
(declare-fun x301 () x74)
(declare-fun x871 () Bool)
(declare-fun x1332 () Int)
(declare-fun x216 () Int)
(declare-fun x1351 () Bool)
(declare-fun x1320 () x74)
(declare-fun x86 () Bool)
(declare-fun x1444 () Int)
(declare-fun x1263 () x74)
(declare-fun x596 () Int)
(declare-fun x514 () Int)
(declare-fun x496 () Bool)
(declare-fun x1278 () Bool)
(declare-fun x856 () Int)
(declare-fun x1365 () Bool)
(declare-fun x1184 () Int)
(declare-fun x252 () Int)
(declare-fun x817 () Bool)
(declare-fun x737 () Bool)
(declare-fun x387 () Bool)
(declare-fun x832 () x74)
(declare-fun x343 () Int)
(declare-fun x1409 () Bool)
(declare-fun x616 () Bool)
(declare-fun x461 () x74)
(declare-fun x987 () Bool)
(declare-fun x581 (x74) Int)
(declare-fun x314 () x74)
(declare-fun x116 () Int)
(declare-fun x866 () Int)
(declare-fun x119 () x74)
(declare-fun x529 () x74)
(declare-fun x1502 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x836 () x74)
(declare-fun x1264 () Int)
(declare-fun x896 () x74)
(declare-fun x802 () Int)
(declare-fun x1519 () Bool)
(declare-fun x1020 () Int)
(declare-fun x1038 (Int) Int)
(declare-fun x1459 (x74) Int)
(declare-fun x1281 () Int)
(declare-fun x47 () Int)
(declare-fun x171 (Int) Int)
(declare-fun x1510 () Bool)
(declare-fun x660 () Int)
(declare-fun x319 () Int)
(declare-fun x1423 () Bool)
(declare-fun x959 () Bool)
(declare-fun x1008 () Int)
(declare-fun x441 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x1174 () Int)
(declare-fun x1207 () x74)
(declare-fun x651 () Int)
(declare-fun x789 () Bool)
(declare-fun x57 () x74)
(declare-fun x342 () x74)
(declare-fun x1232 () Bool)
(declare-fun x210 () Bool)
(declare-fun x404 () Int)
(declare-fun x640 () Int)
(declare-fun x1 () Int)
(declare-fun x270 () Int)
(declare-fun x675 () Int)
(declare-fun x839 () Int)
(declare-fun x733 () Bool)
(declare-fun x232 () Bool)
(declare-fun x1389 () x74)
(declare-fun x538 () Bool)
(declare-fun x395 () Bool)
(declare-fun x27 () Int)
(declare-fun x266 () Bool)
(declare-fun x550 () x74)
(declare-fun x376 () Int)
(declare-fun x921 () Int)
(declare-fun x1286 () Int)
(declare-fun x672 () Int)
(declare-fun x294 () Bool)
(declare-fun x290 () x74)
(declare-fun x455 () Int)
(declare-fun x1252 () Int)
(declare-fun x1371 () Int)
(declare-fun x1395 () Int)
(declare-fun x1099 () Bool)
(declare-fun x999 () Bool)
(declare-fun x1422 () x74)
(declare-fun x926 () x74)
(declare-fun x198 () Int)
(declare-fun x1136 () Bool)
(declare-fun x1120 () Int)
(declare-fun x689 () Bool)
(declare-fun x476 () x74)
(declare-fun x930 () Int)
(declare-fun x1039 () Bool)
(declare-fun x377 () Int)
(declare-fun x297 () Int)
(declare-fun x1128 () Int)
(declare-fun x1060 () Bool)
(declare-fun x633 () Bool)
(declare-fun x129 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x1474 () x74)
(declare-fun x796 () Bool)
(declare-fun x61 () Bool)
(declare-fun x894 () Bool)
(declare-fun x637 () Int)
(declare-fun x1359 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x701 () x74)
(declare-fun x748 () Bool)
(declare-fun x1204 () x74)
(declare-fun x101 () Bool)
(declare-fun x920 (Int Int) Int)
(declare-fun x1487 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x1375 () Bool)
(declare-fun x218 () Bool)
(declare-fun x919 () x74)
(declare-fun x1246 () Int)
(declare-fun x949 () Bool)
(declare-fun x773 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x1167 () Int)
(declare-fun x914 () Bool)
(declare-fun x138 () Bool)
(declare-fun x215 () Bool)
(declare-fun x998 () Bool)
(declare-fun x1292 () Int)
(declare-fun x594 () Bool)
(declare-fun x375 () Int)
(declare-fun x1328 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x260 () Bool)
(declare-fun x73 () x74)
(declare-fun x1037 (Int) Int)
(declare-fun x1288 () Int)
(declare-fun x1400 (x74) Int)
(declare-fun x2 () Bool)
(declare-fun x956 () Int)
(declare-fun x192 () Bool)
(declare-fun x90 () Int)
(declare-fun x499 () Int)
(declare-fun x378 (Int) Int)
(declare-fun x531 () Int)
(declare-fun x668 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x41 () Int)
(declare-fun x482 () x74)
(declare-fun x145 () Int)
(declare-fun x413 () Bool)
(declare-fun x1090 () x74)
(declare-fun x1489 () Int)
(declare-fun x854 () Int)
(declare-fun x650 () x74)
(declare-fun x1076 () Int)
(declare-fun x213 () Bool)
(declare-fun x539 () Bool)
(declare-fun x105 () Bool)
(declare-fun x1082 () Int)
(declare-fun x1412 () Bool)
(declare-fun x1013 () Int)
(declare-fun x84 () x74)
(declare-fun x1503 () Bool)
(declare-fun x322 () Int)
(declare-fun x1180 (Int) Int)
(declare-fun x1149 () Bool)
(declare-fun x120 () Int)
(declare-fun x577 () Bool)
(declare-fun x422 () Int)
(declare-fun x969 () x74)
(declare-fun x1331 () Int)
(declare-fun x983 () Int)
(declare-fun x66 () Int)
(declare-fun x1325 () Int)
(declare-fun x875 () Bool)
(declare-fun x242 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x858 () Int)
(declare-fun x237 () Bool)
(declare-fun x1513 () Int)
(declare-fun x1431 () x74)
(declare-fun x1198 () Bool)
(declare-fun x1440 () Int)
(declare-fun x1277 () Bool)
(declare-fun x706 () Int)
(declare-fun x634 () Int)
(declare-fun x1001 () Int)
(declare-fun x259 () Int)
(declare-fun x1516 () x74)
(declare-fun x191 () x74)
(declare-fun x541 () x74)
(declare-fun x406 () x74)
(declare-fun x1509 () x74)
(declare-fun x251 () Int)
(declare-fun x570 () Int)
(declare-fun x168 () Int)
(declare-fun x607 () Int)
(declare-fun x927 () Int)
(declare-fun x1041 () Bool)
(declare-fun x684 () Bool)
(declare-fun x884 () x74)
(declare-fun x1254 () Bool)
(declare-fun x1141 () Int)
(declare-fun x305 () Int)
(declare-fun x847 () Bool)
(declare-fun x829 () x74)
(declare-fun x1208 () Bool)
(declare-fun x1176 () x74)
(declare-fun x1407 () Int)
(declare-fun x652 () Bool)
(declare-fun x995 () Int)
(declare-fun x1430 () Bool)
(declare-fun x131 () Bool)
(declare-fun x146 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x997 () Int)
(declare-fun x772 () Bool)
(declare-fun x1387 () Int)
(declare-fun x1101 () Bool)
(declare-fun x722 () Int)
(declare-fun x1515 () Bool)
(declare-fun x1163 () x74)
(declare-fun x94 () Bool)
(declare-fun x664 (x74) Int)
(declare-fun x367 () Int)
(declare-fun x226 () x74)
(declare-fun x187 () Int)
(declare-fun x1520 () Int)
(declare-fun x985 () Int)
(declare-fun x803 (Int) Int)
(declare-fun x683 () Bool)
(declare-fun x972 (Int) Int)
(declare-fun x849 () Int)
(declare-fun x908 () Int)
(declare-fun x230 () Int)
(declare-fun x1113 () x74)
(declare-fun x1307 () Bool)
(declare-fun x503 () Bool)
(declare-fun x1158 () Int)
(declare-fun x1463 () Int)
(declare-fun x1420 () Bool)
(declare-fun x285 () Bool)
(declare-fun x966 () Int)
(declare-fun x103 () Bool)
(declare-fun x1069 () Int)
(declare-fun x19 () Int)
(declare-fun x1478 () Bool)
(declare-fun x766 () Int)
(declare-fun x879 () Bool)
(declare-fun x676 () Int)
(declare-fun x1314 () Int)
(declare-fun x1201 () Bool)
(declare-fun x288 () Bool)
(declare-fun x1171 () Bool)
(declare-fun x890 () Int)
(declare-fun x152 () x74)
(declare-fun x873 () Int)
(declare-fun x841 () x74)
(declare-fun x739 () Int)
(declare-fun x707 () Bool)
(declare-fun x569 () Int)
(declare-fun x449 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x777 () Bool)
(declare-fun x1188 () Int)
(declare-fun x601 () Int)
(declare-fun x1443 () Int)
(declare-fun x1089 () Int)
(declare-fun x18 () Int)
(declare-fun x653 () Int)
(declare-fun x644 () Int)
(declare-fun x564 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x28 () Int)
(declare-fun x493 () Int)
(declare-fun x1378 () Int)
(declare-fun x1267 () x74)
(declare-fun x874 () x74)
(declare-fun x269 () Int)
(declare-fun x199 () Int)
(declare-fun x1217 () x74)
(declare-fun x530 () Int)
(declare-fun x953 () Bool)
(declare-fun x934 () Bool)
(declare-fun x135 () Int)
(declare-fun x1289 () Int)
(declare-fun x609 () Int)
(declare-fun x901 () Int)
(declare-fun x1042 () Int)
(declare-fun x1241 () Int)
(declare-fun x624 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x1247 () x74)
(declare-fun x385 () Int)
(declare-fun x229 () x74)
(declare-fun x356 () x74)
(declare-fun x819 () Int)
(declare-fun x1237 () Bool)
(declare-fun x98 () Int)
(declare-fun x330 () Int)
(declare-fun x982 () Int)
(declare-fun x547 () Int)
(declare-fun x1153 () Int)
(declare-fun x261 () Bool)
(declare-fun x671 () x74)
(declare-fun x1255 () Bool)
(declare-fun x1294 () Int)
(declare-fun x1054 () Int)
(declare-fun x562 () Int)
(declare-fun x1369 () Bool)
(declare-fun x1248 (x74) Int)
(declare-fun x1148 () Bool)
(declare-fun x1366 () x74)
(declare-fun x1261 () Int)
(declare-fun x730 () Int)
(declare-fun x806 () x74)
(declare-fun x977 () Bool)
(declare-fun x732 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x1353 () Int)
(declare-fun x80 () Bool)
(declare-fun x427 () Bool)
(declare-fun x159 () Int)
(declare-fun x992 () Int)
(declare-fun x1360 () Int)
(declare-fun x1026 () Bool)
(declare-fun x1460 () Int)
(declare-fun x1175 () x74)
(declare-fun x156 () Int)
(declare-fun x1058 () Bool)
(declare-fun x172 () Int)
(declare-fun x845 () Int)
(declare-fun x231 () Int)
(declare-fun x1160 () Bool)
(declare-fun x474 () Int)
(declare-fun x905 () Int)
(declare-fun x316 () Bool)
(declare-fun x1413 () x74)
(declare-fun x244 (Int) Int)
(declare-fun x1305 () Int)
(declare-fun x1072 () Bool)
(declare-fun x944 () x74)
(declare-fun x1259 () Int)
(declare-fun x311 () Int)
(declare-fun x486 () Bool)
(declare-fun x212 () Int)
(declare-fun x549 () Int)
(declare-fun x579 () Int)
(declare-fun x33 () Bool)
(declare-fun x781 () Int)
(declare-fun x834 () Int)
(declare-fun x1118 () x74)
(declare-fun x1222 () x74)
(declare-fun x1454 () Bool)
(declare-fun x1303 () x74)
(declare-fun x752 () x74)
(declare-fun x54 () Int)
(declare-fun x828 () Int)
(declare-fun x1249 () Bool)
(declare-fun x1086 () Int)
(declare-fun x180 () Int)
(declare-fun x418 () x74)
(declare-fun x4 () Int)
(declare-fun x358 () Int)
(declare-fun x1419 () x74)
(declare-fun x75 () Int)
(declare-fun x196 () Bool)
(declare-fun x771 () Int)
(declare-fun x504 () Bool)
(declare-fun x573 () x74)
(declare-fun x64 () Int)
(declare-fun x1043 () x74)
(declare-fun x574 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x1258 () Int)
(declare-fun x600 () Int)
(declare-fun x331 () x74)
(declare-fun x485 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x249 () Bool)
(declare-fun x92 () x74)
(declare-fun x794 () Int)
(declare-fun x1406 () Int)
(declare-fun x233 () Int)
(declare-fun x559 () Bool)
(declare-fun x861 () x74)
(declare-fun x758 () x74)
(declare-fun x1386 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x1282 () Int)
(declare-fun x1275 () Int)
(declare-fun x71 () Int)
(declare-fun x107 () Bool)
(declare-fun x443 () Int)
(declare-fun x1196 () Int)
(declare-fun x394 () Int)
(declare-fun x296 () Int)
(declare-fun x1410 () Bool)
(declare-fun x626 () Bool)
(declare-fun x544 () Int)
(declare-fun x310 () Int)
(declare-fun x924 () Int)
(declare-fun x1226 () Int)
(declare-fun x662 () Bool)
(declare-fun x351 () Bool)
(declare-fun x69 () Int)
(declare-fun x646 () Bool)
(declare-fun x716 () Int)
(declare-fun x315 () Int)
(declare-fun x778 () Int)
(declare-fun x1384 () Int)
(declare-fun x1445 () Bool)
(declare-fun x846 () Int)
(declare-fun x1029 () Int)
(declare-fun x512 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x123 () Bool)
(declare-fun x588 (x74) Int)
(declare-fun x1251 () Int)
(declare-fun x542 () Int)
(declare-fun x1361 () x74)
(declare-fun x1411 () Int)
(declare-fun x1166 () Int)
(declare-fun x185 () Int)
(declare-fun x368 () x74)
(declare-fun x20 () x74)
(declare-fun x50 () Int)
(declare-fun x869 () Int)
(declare-fun x1023 () Int)
(declare-fun x666 () Int)
(declare-fun x1518 () Int)
(declare-fun x147 () x74)
(declare-fun x275 () Bool)
(declare-fun x617 () Bool)
(declare-fun x1110 () Int)
(declare-fun x1447 () Bool)
(declare-fun x1227 (x74) Int)
(declare-fun x46 () Bool)
(declare-fun x910 () x74)
(declare-fun x787 () Bool)
(declare-fun x1051 () Int)
(declare-fun x1182 () x74)
(declare-fun x1007 () Int)
(declare-fun x400 () Bool)
(declare-fun x126 () Int)
(declare-fun x223 () Int)
(declare-fun x88 () Bool)
(declare-fun x658 () Bool)
(declare-fun x85 () x74)
(declare-fun x183 () Int)
(declare-fun x274 () Int)
(declare-fun x1218 () Bool)
(declare-fun x361 () Bool)
(declare-fun x1033 () Int)
(declare-fun x1225 () Int)
(declare-fun x115 () Int)
(declare-fun x1132 (x74) Int)
(declare-fun x838 () Int)
(declare-fun x1425 () Int)
(declare-fun x78 () Int)
(declare-fun x204 () Bool)
(declare-fun x16 () Bool)
(declare-fun x1093 () Int)
(declare-fun x779 () Bool)
(declare-fun x379 () x74)
(declare-fun x1231 () Int)
(declare-fun x372 () Bool)
(declare-fun x1337 () x74)
(declare-fun x1155 () Bool)
(declare-fun x246 () x74)
(declare-fun x1436 () Int)
(declare-fun x277 () Int)
(declare-fun x553 () Int)
(declare-fun x740 () Bool)
(declare-fun x79 () Bool)
(declare-fun x460 () x74)
(declare-fun x604 () Int)
(declare-fun x507 () Int)
(declare-fun x487 () Int)
(declare-fun x448 () Int)
(declare-fun x1096 () Int)
(declare-fun x557 () Int)
(declare-fun x1450 (Int) Int)
(declare-fun x1475 () x74)
(declare-fun x169 () x74)
(declare-fun x945 (Int) Int)
(declare-fun x283 () Int)
(declare-fun x744 () Bool)
(declare-fun x1156 () Int)
(declare-fun x188 () Bool)
(declare-fun x848 () Int)
(declare-fun x548 () Bool)
(declare-fun x534 () Int)
(declare-fun x527 () Bool)
(declare-fun x442 () Int)
(declare-fun x1135 () x74)
(declare-fun x1323 () Int)
(declare-fun x1152 () Int)
(declare-fun x757 () Bool)
(declare-fun x978 () Int)
(declare-fun x820 () Bool)
(declare-fun x764 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x1123 () Int)
(declare-fun x130 () Bool)
(declare-fun x1055 () Int)
(declare-fun x931 () Int)
(declare-fun x765 () Int)
(declare-fun x575 () Int)
(declare-fun x565 () Bool)
(declare-fun x515 () Bool)
(declare-fun x611 () Int)
(declare-fun x783 () Int)
(declare-fun x1472 () Bool)
(declare-fun x211 () x74)
(declare-fun x40 () Int)
(declare-fun x595 () Int)
(declare-fun x340 (Int) Int)
(declare-fun x1300 () Int)
(declare-fun x932 () Int)
(declare-fun x824 () Int)
(declare-fun x197 () Int)
(declare-fun x719 () Bool)
(declare-fun x844 () x74)
(declare-fun x974 () x74)
(declare-fun x25 () Int)
(declare-fun x593 () Int)
(declare-fun x522 () Bool)
(declare-fun x350 () Int)
(declare-fun x81 () Bool)
(declare-fun x809 () Int)
(declare-fun x37 () Bool)
(declare-fun x414 () Int)
(declare-fun x533 () x74)
(declare-fun x1457 () Int)
(declare-fun x1236 () Int)
(declare-fun x951 () Bool)
(declare-fun x1242 () Int)
(declare-fun x692 () Int)
(declare-fun x1022 () Bool)
(declare-fun x1125 () Int)
(declare-fun x1452 () Int)
(declare-fun x384 (Int) Int)
(declare-fun x970 () Int)
(declare-fun x807 () Int)
(declare-fun x1003 () Bool)
(declare-fun x295 () Bool)
(declare-fun x535 () Int)
(declare-fun x589 () Int)
(declare-fun x1124 () Bool)
(declare-fun x717 () Int)
(declare-fun x323 () Int)
(declare-fun x334 () Int)
(declare-fun x429 () Int)
(declare-fun x1094 () Int)
(declare-fun x690 () Int)
(declare-fun x623 () Int)
(declare-fun x76 () Bool)
(declare-fun x121 () x74)
(declare-fun x1379 () Int)
(declare-fun x1238 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x727 () Bool)
(declare-fun x1197 () Int)
(declare-fun x825 () Bool)
(declare-fun x1151 () x74)
(declare-fun x1451 () Int)
(declare-fun x227 () Bool)
(declare-fun x813 () Bool)
(declare-fun x313 () Bool)
(declare-fun x68 () Int)
(declare-fun x489 () Int)
(declare-fun x585 () Int)
(declare-fun x97 () Int)
(declare-fun x850 () Int)
(declare-fun x1235 () Int)
(declare-fun x65 () Int)
(declare-fun x582 () Int)
(declare-fun x228 () Int)
(declare-fun x1145 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x952 () Int)
(declare-fun x519 () Bool)
(declare-fun x708 () Bool)
(declare-fun x1311 () x74)
(declare-fun x694 () Int)
(declare-fun x823 () Int)
(declare-fun x293 () Bool)
(declare-fun x761 () Bool)
(declare-fun x886 () Int)
(declare-fun x102 () Int)
(declare-fun x785 () Int)
(declare-fun x140 () Int)
(declare-fun x703 () Int)
(declare-fun x928 () Bool)
(declare-fun x1284 () x74)
(declare-fun x543 () Int)
(declare-fun x1115 () Int)
(declare-fun x457 () Int)
(declare-fun x1480 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x89 () Bool)
(declare-fun x435 () Int)
(declare-fun x207 () Int)
(declare-fun x402 () Bool)
(declare-fun x840 () x74)
(declare-fun x859 () Int)
(declare-fun x401 () x74)
(declare-fun x176 (x74) Int)
(declare-fun x24 () x74)
(declare-fun x681 () Int)
(declare-fun x1078 () Bool)
(declare-fun x299 () Bool)
(declare-fun x774 () Bool)
(declare-fun x800 () Int)
(declare-fun x902 () Int)
(declare-fun x1468 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x1098 () x74)
(declare-fun x1391 () Bool)
(declare-fun x667 () Int)
(declare-fun x153 () Bool)
(declare-fun x827 () Int)
(declare-fun x220 () Int)
(declare-fun x300 () Int)
(declare-fun x77 () Int)
(declare-fun x659 () Int)
(declare-fun x1352 () Int)
(declare-fun x122 () Int)
(declare-fun x70 () Int)
(declare-fun x578 () Bool)
(declare-fun x511 () Bool)
(declare-fun x161 () Bool)
(declare-fun x801 () Int)
(declare-fun x654 () Int)
(declare-fun x383 () x74)
(declare-fun x1202 () Bool)
(declare-fun x1473 () Int)
(declare-fun x200 () Int)
(declare-fun x641 () Bool)
(declare-fun x1385 () Int)
(declare-fun x1345 () Int)
(declare-fun x477 () Bool)
(declare-fun x808 () Bool)
(declare-fun x447 () Int)
(declare-fun x647 () Bool)
(declare-fun x643 () Int)
(declare-fun x933 () Bool)
(declare-fun x444 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x892 () x74)
(declare-fun x513 () Int)
(declare-fun x1416 () Int)
(declare-fun x680 () Int)
(declare-fun x625 () Int)
(declare-fun x979 () Int)
(declare-fun x250 () Bool)
(declare-fun x852 () Int)
(declare-fun x241 () Int)
(declare-fun x1011 () Int)
(declare-fun x948 () x74)
(declare-fun x181 () Bool)
(declare-fun x1260 () x74)
(declare-fun x154 () Int)
(declare-fun x1092 () Int)
(declare-fun x506 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x812 () Int)
(declare-fun x127 () Int)
(declare-fun x1108 () Bool)
(declare-fun x271 () x74)
(declare-fun x677 () Bool)
(declare-fun x1012 () Int)
(declare-fun x1388 () Int)
(declare-fun x1449 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x445 () Bool)
(declare-fun x1507 () Int)
(declare-fun x1466 () Bool)
(declare-fun x328 () x74)
(declare-fun x843 () Int)
(declare-fun x1240 () Int)
(declare-fun x695 () x74)
(declare-fun x759 () Bool)
(declare-fun x1265 () Int)
(declare-fun x786 () Int)
(declare-fun x629 () Int)
(declare-fun x990 () Bool)
(declare-fun x1469 () x74)
(declare-fun x964 () Int)
(declare-fun x628 () Bool)
(declare-fun x498 () Bool)
(declare-fun x1504 () Int)
(declare-fun x885 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x1322 () Int)
(declare-fun x877 () Int)
(declare-fun x1193 () Int)
(declare-fun x738 () Int)
(declare-fun x15 () Int)
(declare-fun x1517 () x74)
(declare-fun x1103 () Int)
(declare-fun x421 () Int)
(declare-fun x674 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x842 () Bool)
(declare-fun x546 () Bool)
(declare-fun x393 () x74)
(declare-fun x1056 () Int)
(declare-fun x1415 () x74)
(declare-fun x1312 () Bool)
(declare-fun x437 () Bool)
(declare-fun x380 () x74)
(declare-fun x10 () Int)
(declare-fun x1396 () x74)
(declare-fun x14 (Int) Int)
(declare-fun x190 () x74)
(declare-fun x925 () x74)
(declare-fun x718 () Int)
(declare-fun x186 () Int)
(declare-fun x556 () Bool)
(declare-fun x235 () Int)
(declare-fun x907 () Int)
(declare-fun x1279 () Int)
(declare-fun x360 () Int)
(declare-fun x29 () Int)
(declare-fun x1306 () Bool)
(declare-fun x354 () x74)
(declare-fun x613 () Int)
(declare-fun x329 () Int)
(declare-fun x870 () Int)
(declare-fun x1205 () Bool)
(declare-fun x1273 () Int)
(declare-fun x56 () Bool)
(declare-fun x728 () x74)
(declare-fun x479 () Int)
(declare-fun x1481 () Int)
(declare-fun x1206 () Int)
(declare-fun x254 () Bool)
(declare-fun x255 () x74)
(declare-fun x714 () x74)
(declare-fun x1309 () Int)
(declare-fun x943 () Bool)
(declare-fun x1437 () Int)
(declare-fun x365 () Bool)
(declare-fun x1381 () Int)
(declare-fun x1049 () Int)
(declare-fun x830 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1290 () x74)
(declare-fun x1374 () Bool)
(declare-fun x939 () x74)
(declare-fun x638 () Int)
(declare-fun x639 () Bool)
(declare-fun x1018 (Int) Int)
(declare-fun x1350 (Int) Int)
(declare-fun x1512 () x74)
(declare-fun x619 () Bool)
(declare-fun x649 () Bool)
(declare-fun x1239 () Int)
(declare-fun x1219 () Int)
(declare-fun x44 () Int)
(declare-fun x142 () Bool)
(declare-fun x163 (x74) Int)
(declare-fun x988 () x74)
(declare-fun x1010 () x74)
(declare-fun x592 () Int)
(declare-fun x423 () Int)
(declare-fun x318 () Bool)
(declare-fun x860 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x1390 () Int)
(declare-fun x967 () x74)
(declare-fun x177 () Int)
(declare-fun x1253 () x74)
(declare-fun x1088 () Int)
(declare-fun x431 () x74)
(declare-fun x1027 () x74)
(declare-fun x462 () Int)
(declare-fun x1434 () Int)
(declare-fun x139 () Int)
(declare-fun x1343 () x74)
(declare-fun x583 () Bool)
(declare-fun x217 () Int)
(declare-fun x904 () Int)
(declare-fun x492 () x74)
(declare-fun x238 () Bool)
(declare-fun x399 () x74)
(declare-fun x480 () Bool)
(declare-fun x1104 () Int)
(declare-fun x552 () Int)
(declare-fun x1062 () Bool)
(declare-fun x620 () x74)
(declare-fun x699 () Int)
(declare-fun x1462 () x74)
(declare-fun x276 (x74) Int)
(declare-fun x631 (x74) Int)
(declare-fun x682 () Int)
(declare-fun x337 () x74)
(declare-fun x32 () Int)
(declare-fun x415 () Int)
(declare-fun x657 () x74)
(declare-fun x465 () Int)
(declare-fun x67 () Int)
(declare-fun x1508 () Int)
(declare-fun x31 () Int)
(declare-fun x776 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x555 () Int)
(declare-fun x13 () x74)
(declare-fun x1162 () Bool)
(declare-fun x1367 () Int)
(declare-fun x891 () Int)
(declare-fun x1494 () Bool)
(declare-fun x286 () Int)
(declare-fun x206 () Int)
(declare-fun x170 () Int)
(declare-fun x36 () Int)
(declare-fun x1021 () Int)
(declare-fun x273 () Int)
(declare-fun x958 () Bool)
(declare-fun x799 () Int)
(declare-fun x1114 () x74)
(declare-fun x141 () Int)
(declare-fun x1356 () x74)
(declare-fun x1368 () x74)
(declare-fun x537 () Int)
(declare-fun x403 () Int)
(declare-fun x1326 () Int)
(declare-fun x451 () Int)
(declare-fun x887 () x74)
(declare-fun x338 () x74)
(declare-fun x438 () Bool)
(declare-fun x396 () Int)
(declare-fun x369 () Bool)
(declare-fun x743 (Int) Int)
(declare-fun x1479 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x178 () Bool)
(declare-fun x711 () Bool)
(declare-fun x1030 () x74)
(declare-fun x724 () Int)
(declare-fun x1068 () Int)
(declare-fun x804 () Int)
(declare-fun x150 () Int)
(declare-fun x1234 () Int)
(declare-fun x39 () Int)
(declare-fun x1455 (Int) Int)
(declare-fun x602 () x74)
(declare-fun x303 () Int)
(declare-fun x1036 () Int)
(declare-fun x1427 () Int)
(declare-fun x1146 () x74)
(declare-fun x1172 () Int)
(declare-fun x347 () Int)
(declare-fun x321 () Bool)
(declare-fun x284 () Int)
(declare-fun x1398 () Int)
(declare-fun x454 () Bool)
(declare-fun x466 () Bool)
(declare-fun x947 () Int)
(declare-fun x373 () Int)
(declare-fun x175 () Int)
(declare-fun x993 (x74) Int)
(declare-fun x1499 () x74)
(declare-fun x893 () Bool)
(declare-fun x166 () Int)
(declare-fun x96 () Bool)
(declare-fun x381 () Int)
(declare-fun x742 () Bool)
(declare-fun x1438 () Int)
(declare-fun x790 () x74)
(declare-fun x590 () x74)
(declare-fun x855 () Bool)
(declare-fun x656 () Int)
(declare-fun x805 (x74) Int)
(declare-fun x1080 () Int)
(declare-fun x124 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x1109 () Int)
(declare-fun x472 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x456 () Bool)
(declare-fun x391 () Int)
(declare-fun x976 () Int)
(declare-fun x598 () Int)
(declare-fun x1405 () Bool)
(declare-fun x678 () x74)
(declare-fun x1458 () Int)
(declare-fun x1177 () Int)
(declare-fun x615 () x74)
(declare-fun x745 () Bool)
(declare-fun x291 () Int)
(declare-fun x572 () Int)
(declare-fun x747 () Int)
(declare-fun x1401 () Int)
(declare-fun x267 () Int)
(declare-fun x1066 () Bool)
(declare-fun x258 () Bool)
(declare-fun x1061 () Bool)
(define-fun x272 ((x74 x74) (x1446 Int)) x74 (ite ((_ is x439) x74) (x439 (x788 x74) (+ (x673 x74) x1446)) (ite ((_ is x753) x74) (x753 (x935 x74) (x208 x74) (+ (x864 x74) x1446)) (x516 (+ (x21 x74) x1446)))))
(define-fun x243 ((x240 Int)) Int (ite (and (< x240 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x240 0)) x240 (- x240 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x705 ((x240 Int)) Int (ite (and (> 0 x240) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x240)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x240) x240))
(define-fun x906 ((x1045 Int)) Bool (and (>= x1045 0) (< x1045 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1342 ((x1045 Int)) Bool (and (= x1045 (x536 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1045)) (= x1045 (x536 x1045 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x458 ((x1045 Int)) Bool (and (= (x536 0 x1045) 0) (= (x536 x1045 0) 0)))
(define-fun x645 ((x1045 Int)) Bool (= x1045 (x536 x1045 x1045)))
(define-fun x209 ((x1045 Int)) Bool (and (x458 x1045) (x645 x1045) (x1342 x1045)))
(define-fun x1485 ((x1045 Int)) Bool (= (x536 1461501637330902918203684832716283019655932542975 (x536 1461501637330902918203684832716283019655932542975 x1045)) (x536 1461501637330902918203684832716283019655932542975 x1045)))
(define-fun x247 ((x1045 Int)) Bool (=> (and (>= x1045 0) (< x1045 1461501637330902918203684832716283019655932542976)) (= x1045 (x536 1461501637330902918203684832716283019655932542975 x1045))))
(define-fun x203 ((x1045 Int)) Bool (=> (= (x536 1461501637330902918203684832716283019655932542975 x1045) x1045) (and (<= 0 x1045) (< x1045 1461501637330902918203684832716283019655932542976))))
(define-fun x205 ((x1045 Int)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x1045) (<= 1461501637330902918203684832716283019655932542976 x1045)) (= (- x1045 1461501637330902918203684832716283019655932542976) (x536 1461501637330902918203684832716283019655932542975 x1045))))
(define-fun x382 ((x1045 Int) (x419 Int)) Bool (and (= x1045 (+ (* 1461501637330902918203684832716283019655932542976 x419) (x536 1461501637330902918203684832716283019655932542975 x1045))) (<= 0 x419)))
(define-fun x59 ((x1045 Int) (x755 Int)) Bool (and (x382 x1045 x755) (x203 x1045) (x247 x1045) (x205 x1045) (x1485 x1045)))
(define-fun x963 ((x1045 Int) (x419 Int)) Bool (= (x536 x1045 x419) (x536 x419 x1045)))
(define-fun x1402 ((x1045 Int) (x419 Int)) Bool (and (=> (<= 0 x419) (>= x419 (x536 x1045 x419))) (=> (<= 0 x1045) (>= x1045 (x536 x1045 x419))) (>= (x536 x1045 x419) 0)))
(define-fun x1382 ((x1045 Int) (x419 Int)) Bool (and (x1402 x1045 x419) (x963 x1045 x419)))
(define-fun x725 ((x1045 Int) (x755 Int)) Bool (and (x1382 x1045 1461501637330902918203684832716283019655932542975) (x59 x1045 x755)))
(define-fun x463 ((x1045 Int)) Bool (= (x536 26959946667150639794667015087019630673637144422540572481103610249215 x1045) (x536 26959946667150639794667015087019630673637144422540572481103610249215 (x536 26959946667150639794667015087019630673637144422540572481103610249215 x1045))))
(define-fun x1190 ((x1045 Int)) Bool (=> (and (>= x1045 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1045)) (= x1045 (x536 26959946667150639794667015087019630673637144422540572481103610249215 x1045))))
(define-fun x459 ((x1045 Int)) Bool (=> (= x1045 (x536 26959946667150639794667015087019630673637144422540572481103610249215 x1045)) (and (>= x1045 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1045))))
(define-fun x1028 ((x1045 Int)) Bool (=> (and (>= x1045 26959946667150639794667015087019630673637144422540572481103610249216) (< x1045 53919893334301279589334030174039261347274288845081144962207220498432)) (= (- x1045 26959946667150639794667015087019630673637144422540572481103610249216) (x536 26959946667150639794667015087019630673637144422540572481103610249215 x1045))))
(define-fun x53 ((x1045 Int) (x419 Int)) Bool (and (= (+ (x536 26959946667150639794667015087019630673637144422540572481103610249215 x1045) (* x419 26959946667150639794667015087019630673637144422540572481103610249216)) x1045) (<= 0 x419)))
(define-fun x889 ((x1045 Int) (x755 Int)) Bool (and (x463 x1045) (x53 x1045 x755) (x1028 x1045) (x459 x1045) (x1190 x1045)))
(define-fun x248 ((x1045 Int) (x755 Int)) Bool (and (x889 x1045 x755) (x1382 x1045 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x137 ((x1045 Int)) Bool (= (x536 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1045) (x536 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x536 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1045))))
(define-fun x946 ((x1045 Int)) Bool (=> (and (<= 0 x1045) (> 32 x1045)) (= (x536 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1045) 0)))
(define-fun x1334 ((x1045 Int) (x419 Int) (x1461 Int) (x345 Int)) Bool (and (= (x536 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1045) (* 32 x1461)) (< x1461 3618502788666131106986593281521497120414687020801267626233049500247285301248) (<= 0 x345) (= x1045 (+ (* x1461 32) x419 (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345))) (> 32 x419) (<= 0 x419) (> 1 x345) (>= x1461 0)))
(define-fun x526 ((x1045 Int) (x1009 Int) (x420 Int) (x937 Int)) Bool (and (x137 x1045) (x1334 x1045 x1009 x420 x937) (x946 x1045)))
(define-fun x339 ((x1045 Int) (x1009 Int) (x420 Int) (x937 Int)) Bool (and (x526 x1045 x1009 x420 x937) (x1382 x1045 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x473 ((x606 Int)) Int (x803 x606))
(define-fun x302 ((x606 Int)) Int (ite (= 128 x606) x170 (x791 x606)))
(define-fun x721 ((x606 Int)) Int (ite (and (>= x606 160) (> (+ x315 160) x606)) (x803 (+ x1234 (- x606 160))) (x302 x606)))
(define-fun x136 ((x606 Int)) Int (ite (= x606 x763) 0 (x721 x606)))
(define-fun x648 ((x606 Int)) Int (ite (and (<= x877 x606) (< x606 (+ x877 x1117))) (x803 (+ x474 (- x606 x877))) (x244 x606)))
(define-fun x913 ((x606 x74)) Int (ite (= x606 x1207) x1336 (x631 x606)))
(define-fun x881 ((x606 x74)) Int (ite (= x1176 x606) x1336 (x631 x606)))
(define-fun x762 ((x606 x74)) Int (ite (= x606 x790) x1336 (x118 x606)))
(define-fun x903 ((x606 x74)) Int (ite (= x606 x1431) x1336 (x118 x606)))
(define-fun x715 ((x606 x74)) Int (ite (and x1502 x278) (x118 x606) (ite (and x1237 x142) (x631 x606) (ite (and (not x520) x1070) (x762 x606) (x903 x606)))))
(define-fun x1377 ((x606 x74)) Int (ite (= x468 x606) x778 (x225 x606)))
(define-fun x1476 ((x606 x74)) Int (ite (= x1368 x606) x330 (x663 x606)))
(define-fun x162 ((x606 x74)) Int (ite (and x1070 (not x520)) (x1476 x606) (x663 x606)))
(define-fun x814 ((x606 x74)) Int (ite (and x1502 x278) (x663 x606) (ite (and x142 x1237) (x225 x606) (x162 x606))))
(define-fun x505 ((x606 x74)) Int (ite (= x750 x606) x1129 (x1302 x606)))
(define-fun x1095 ((x606 x74)) Int (ite (= x606 x328) x1103 (x1399 x606)))
(define-fun x734 ((x606 x74)) Int (ite (and x278 x1502) (x1399 x606) (ite (and x1237 x142) (x1302 x606) (ite (and x1070 x1359) (x1399 x606) (x1095 x606)))))
(define-fun x1111 ((x606 x74)) Int (ite (= x606 x85) x1336 (x912 x606)))
(define-fun x1084 ((x606 x74)) Int (ite (= x1030 x606) x1336 (x912 x606)))
(define-fun x1418 ((x606 x74)) Int (ite (= x606 x896) x1336 (x912 x606)))
(define-fun x622 ((x606 x74)) Int (ite (= x1222 x606) x1336 (x1046 x606)))
(define-fun x929 ((x606 x74)) Int (ite (= x1118 x606) x1336 (x1046 x606)))
(define-fun x1471 ((x606 x74)) Int (ite (= x1260 x606) x1336 (x1046 x606)))
(define-fun x117 ((x606 x74)) Int (ite (and x278 x1502) (x1046 x606) (ite (and x1237 x142) (x912 x606) (ite (and x1505 (not x1244) (not x708)) (x622 x606) (ite (and (not x708) x1244 x1505) (x929 x606) (x1471 x606))))))
(define-fun x1228 ((x606 x74)) Int (ite (= x368 x606) x569 (x1227 x606)))
(define-fun x1169 ((x606 x74)) Int (ite (= x606 x1517) x185 (x176 x606)))
(define-fun x961 ((x606 x74)) Int (ite (= x606 x841) 0 (x810 x606)))
(define-fun x900 ((x606 x74)) Int (ite (and (not x882) x1160 x234) (x810 x606) (ite (and (not x1160) x234) (x805 x606) (x961 x606))))
(define-fun x795 ((x606 x74)) Int (ite (= x832 x606) x768 (x614 x606)))
(define-fun x143 ((x606 x74)) Int (ite (= x219 x606) x1414 (x588 x606)))
(define-fun x355 ((x606 x74)) Int (ite (and (not x708) (not x1244) x1505) (x143 x606) (x588 x606)))
(define-fun x1403 ((x606 x74)) Int (ite (= x606 x383) 0 (x163 x606)))
(define-fun x201 ((x606 x74)) Int (ite (and x234 x1160 (not x882)) (x163 x606) (ite (and (not x1160) x234) (x993 x606) (x1403 x606))))
(define-fun x610 ((x606 x74)) Int (ite (= x714 x606) 0 (x201 x606)))
(define-fun x1245 ((x606 Int)) Int (ite (= x606 x809) x690 (x1455 x606)))
(define-fun x826 ((x606 Int)) Int (ite (= x1309 x606) x534 (x1245 x606)))
(define-fun x1034 ((x606 Int)) Int (ite (and x923 x260) (x1455 x606) (x826 x606)))
(define-fun x1362 ((x606 Int)) Int (ite (= x523 x606) x1141 (x1034 x606)))
(define-fun x1087 ((x606 Int)) Int (ite (= x606 x159) x823 (x509 x606)))
(define-fun x82 ((x606 Int)) Int (ite (= x1056 x606) x267 (x1450 x606)))
(define-fun x408 ((x606 Int)) Int (ite (= x606 x905) x36 (x82 x606)))
(define-fun x1047 ((x606 Int)) Int (ite (and x1505 (not x1244) (not x708)) (x408 x606) (ite (and x1505 x1244 (not x708)) (x408 x606) (x1450 x606))))
(define-fun x222 ((x606 Int)) Int (ite (= x606 x122) x394 (x1047 x606)))
(define-fun x1031 ((x606 Int)) Int (ite (= x1305 x606) x1460 (x1037 x606)))
(define-fun x567 ((x606 Int)) Int (ite (and (not x1025) x1070 (not x413) x353) (x1037 x606) (ite (and (not x1025) x1070 (not x353)) (x1038 x606) (x1031 x606))))
(define-fun x1310 ((x606 Int)) Int (ite (and x1502 x278) (x1450 x606) (ite (and x1237 x142) (x1455 x606) (ite (and x1070 (not x1025)) (x567 x606) (x1038 x606)))))
(define-fun x469 ((x606 Int)) Int (ite (= x1121 x606) x385 (x1310 x606)))
(define-fun x950 ((x606 Int)) Int (ite (= x68 x606) x197 (x469 x606)))
(define-fun x289 ((x606 Int)) Int (ite (= x606 x1172) x604 (x950 x606)))
(define-fun x1105 ((x606 Int)) Int (ite (= x606 x669) x451 (x289 x606)))
(define-fun x909 ((x606 Int)) Int (ite (= x606 x1152) 32 (x1105 x606)))
(define-fun x685 ((x606 Int)) Int (ite (= x606 x718) x1294 (x14 x606)))
(define-fun x333 ((x606 Int)) Int (ite (= x606 x1067) 0 (x1350 x606)))
(define-fun x833 ((x606 Int)) Int (ite (= x606 0) 1 (x43 x606)))
(define-fun x962 ((x606 Int)) Int (ite (= x606 0) 1 (x43 x606)))
(define-fun x954 ((x606 Int)) Int (ite (and x464 x633) (x833 x606) (x962 x606)))
(define-fun x1298 ((x606 Int)) Int (ite (= x1015 x606) x834 (x384 x606)))
(define-fun x872 ((x606 Int)) Int (ite (= x606 x1015) x1268 (x384 x606)))
(define-fun x397 ((x606 Int)) Int (ite (= x1015 x606) x493 (x340 x606)))
(define-fun x312 ((x606 Int)) Int (ite (and (<= x682 x606) (> (+ x493 x682) x606)) (x954 (+ (- x606 x682) 0)) (x397 x606)))
(define-fun x770 ((x606 Int)) Int (ite (and (not x1229) x1198) (x312 x606) (x340 x606)))
(define-fun x1335 ((x606 Int)) Int (ite (= x606 x1511) x385 (x770 x606)))
(define-fun x433 ((x606 Int)) Int (ite (= x606 x557) x1437 (x1335 x606)))
(define-fun x1091 ((x606 Int)) Int (ite (= x1315 x606) x699 (x433 x606)))
(define-fun x164 ((x606 Int)) Int (ite (= x606 x1016) x1246 (x1091 x606)))
(define-fun x558 ((x606 Int)) Int (ite (= x606 x18) 32 (x164 x606)))
(define-fun x561 ((x606 Int)) Int (ite (= x606 x447) x303 (x1059 x606)))
(define-fun x1421 ((x606 Int)) Int (ite (= x7 x606) 0 (x945 x606)))
(define-fun x1189 ((x606 x74)) Int (ite (= x606 (x390 274184521717934524641157099916833587206)) x1188 (x1248 x606)))
(define-fun x571 ((x606 x74)) Int (ite (= (x390 x1520) x606) x635 (x1189 x606)))
(define-fun x895 ((x606 x74)) Int (ite (= (x390 x1520) x606) x298 (x571 x606)))
(define-fun x1212 ((x606 x74)) Int (ite (= x606 (x390 274184521717934524641157099916833587206)) x140 (x895 x606)))
(define-fun x723 ((x606 x74)) Int (ite (= x606 (x390 274184521717934524641157099916833587206)) x611 (x1212 x606)))
(define-fun x857 ((x606 x74)) Int (ite (= x606 (x390 x1513)) x1020 (x723 x606)))
(define-fun x1297 ((x606 x74)) Int (ite (= x606 x620) x1236 (x1132 x606)))
(define-fun x960 ((x606 x74)) Int (ite (= x606 x271) x1308 (x1297 x606)))
(define-fun x38 ((x606 x74)) Int (ite (and x464 x633) (x960 x606) (x1132 x606)))
(define-fun x189 ((x606 x74)) Int (ite (= x606 x431) x1270 (x38 x606)))
(define-fun x835 ((x606 Int)) Int (ite (= x606 0) 1 (x743 x606)))
(define-fun x942 ((x606 Int)) Int (ite (= x606 x1295) x1387 (x713 x606)))
(define-fun x410 ((x606 x74)) Int (ite (= x816 x606) x537 (x202 x606)))
(define-fun x309 ((x606 x74)) Int (ite (= x758 x606) x329 (x410 x606)))
(define-fun x155 ((x606 x74)) Int (ite (and x633 x464) (x202 x606) (x309 x606)))
(define-fun x30 ((x606 x74)) Int (ite (= x967 x606) x570 (x155 x606)))
(define-fun x411 ((x606 Int)) Int (ite (= 0 x606) 1 (x743 x606)))
(define-fun x256 ((x606 Int)) Int (ite (= x1295 x606) x1355 (x713 x606)))
(define-fun x151 ((x606 Int)) Int (ite (and x131 x825) (x835 x606) (x411 x606)))
(define-fun x292 ((x606 x74)) Int (ite (= (x390 x1513) x606) x839 (x857 x606)))
(define-fun x1100 ((x606 Int)) Int (ite (= x606 x1295) x807 (x1180 x606)))
(define-fun x42 ((x606 Int)) Int (ite (and (> (+ x807 x157) x606) (>= x606 x157)) (x151 (+ 0 (- x606 x157))) (x1100 x606)))
(define-fun x1097 ((x606 Int)) Int (ite (and x628 x1480) (x1180 x606) (x42 x606)))
(define-fun x756 ((x1045 Int)) Bool (=> (and (not (= x1045 2258409472)) (not (= x1045 2960351575)) (not (= x1045 2532887486)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x1045)) (not (= 2418364589 x1045)) (not (= x1045 1968616202)) (not (= 2798343961 x1045)) (not (= 649617121 x1045)) (not (= 2211524764 x1045)) (not (= 759532456 x1045)) (not (= 635128645 x1045)) (not (= x1045 2690754053)) (not (= 2061678023 x1045)) (not (= 2743102681 x1045)) (not (= 2293535753 x1045)) (not (= x1045 2514000705)) (not (= x1045 274184521717934524641157099916833587206)) (not (= x1045 911411945)) (not (= 274184521717934524641157099916833587214 x1045)) (not (= 2764855426 x1045)) (not (= x1045 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x1045 115792089237316195423570985008687907853269984665640564039457)) (not (= x1045 274184521717934524641157099916833587218)) (not (= x1045 69947311)) (not (= x1045 87118632)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1045)) (not (= x1045 2835717307)) (not (= x1045 142201243)) (not (= x1045 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 18446744073709551615 x1045)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x1045)) (not (= x1045 1000000000000000000)) (< 10000 x1045) (not (= x1045 2512682246)) (not (= 826074471 x1045)) (not (= x1045 1461501637330902918203684832716283019655932542975)) (not (= 1986467848 x1045)) (not (= x1045 1889567281)) (not (= x1045 468353030)) (not (= 604800 x1045))) (not ((_ is x516) (x390 x1045)))))
(assert (=> (<= x66 10000) (= (x516 x66) (x390 x66))))
(assert (x906 x1338))
(assert (x906 x1259))
(assert (= (x1400 (x390 x518)) x518))
(assert (= (ite (= x1273 x586) x1076 (x972 x1273)) (x883 x1273)))
(assert (= (or (and x1256 (not x1479)) (and x1192 x46) (and x1269 (not x1420))) x1216))
(assert (x209 x343))
(assert (= (x1400 (x390 x206)) x206))
(assert (x756 x659))
(assert (x906 x267))
(assert (= (ite (= x667 x891) x938 (x1038 x667)) (x1037 x667)))
(assert (x906 x1115))
(assert (x906 x199))
(assert (x906 x1184))
(assert (x725 x252 x1036))
(assert (=> (>= 10000 x448) (= (x516 x448) (x390 x448))))
(assert (x906 x996))
(assert (= (x14 x296) (ite (= x296 x845) x50 (x424 x296))))
(assert (=> (>= 10000 x979) (= (x390 x979) (x516 x979))))
(assert (x756 x1123))
(assert (=> (>= 10000 x78) (= (x516 x78) (x390 x78))))
(assert (x906 x591))
(assert (x906 x308))
(assert (= (ite (= x296 x54) x766 (x171 x296)) (x378 x296)))
(assert (= x899 (=> (= x738 x1258) x1238)))
(assert (x906 x843))
(assert (not x72))
(assert (= (ite (= x800 x296) x521 (x1018 x296)) (x509 x296)))
(assert (= (x1018 x669) (ite (= x786 x669) x598 (x1362 x669))))
(assert (=> (<= x1442 10000) (= (x390 x1442) (x516 x1442))))
(assert (x906 x1104))
(assert (= x1239 (x1400 (x390 x1239))))
(assert (x906 x389))
(assert (x906 x1292))
(assert (x756 x109))
(assert (x906 x726))
(assert (x906 x367))
(assert (x906 x600))
(assert (= (x340 x296) (ite (and x464 x633) (x1298 x296) (x872 x296))))
(assert (=> (>= 10000 x1019) (= (x516 x1019) (x390 x1019))))
(assert (= (x14 x858) (ite (= x845 x858) x50 (x424 x858))))
(assert (= (x1046 x363) (ite (and x923 x260) (x1111 x363) (ite (and (not x923) x260 x619) (x1084 x363) (x1418 x363)))))
(assert (x906 x41))
(assert (= (x118 x73) (ite (and x757 x1063) (x913 x73) (x881 x73))))
(assert (= (x244 x746) (ite (= x145 x746) x170 (x136 x746))))
(assert (x906 x404))
(assert (x756 x1168))
(assert (=> (<= x300 10000) (= (x516 x300) (x390 x300))))
(assert (x906 x800))
(assert (x906 x1088))
(assert (= (x424 x296) (ite (= x535 x296) x917 (x883 x296))))
(assert (= 2061678023 (x1400 (x516 2061678023))))
(assert (x906 x252))
(assert (x906 x183))
(assert (= (ite (= x145 x800) x170 (x136 x800)) (x244 x800)))
(assert (= 2835717307 (x1400 (x516 2835717307))))
(assert (= (x509 x1104) (ite (= x800 x1104) x521 (x1018 x1104))))
(assert (x906 x44))
(assert (x906 x1158))
(assert (x756 x1053))
(assert (= (x509 x978) (ite (= x978 x800) x521 (x1018 x978))))
(assert (= (ite (= x800 x1273) x521 (x1018 x1273)) (x509 x1273)))
(assert (x906 x270))
(assert (x906 x310))
(assert (x906 x109))
(assert (= (ite (and x871 (not x1201) x153 x608 x242 x517) (x14 x1016) (ite (and x242 x608 (not x153) x871 x517) (x424 x1016) (ite (and x608 x871 (not x242) x517) (x883 x1016) (ite (and x871 (not x608) x517) (x972 x1016) (x685 x1016))))) (x1350 x1016)))
(assert (x906 x1352))
(assert (=> (<= x936 10000) (= (x390 x936) (x516 x936))))
(assert (=> (<= x930 10000) (= (x390 x930) (x516 x930))))
(assert (x906 x1211))
(assert (x756 x78))
(assert (= x453 (x1400 (x390 x453))))
(assert (x906 x706))
(assert (= (x430 x296) (ite (= x198 x296) x414 (x378 x296))))
(assert (= x489 (x1400 (x390 x489))))
(assert (= (or x707 (and (not x181) x261)) x1070))
(assert (x906 x315))
(assert (x756 x448))
(assert (=> (>= 10000 x1210) (= (x390 x1210) (x516 x1210))))
(assert (= (ite (= x586 x1140) x1076 (x972 x1140)) (x883 x1140)))
(assert (= (x244 x667) (ite (= x667 x145) x170 (x136 x667))))
(assert (x906 x1161))
(assert (x906 x451))
(assert (x906 x513))
(assert (=> (>= 10000 x1199) (= (x390 x1199) (x516 x1199))))
(assert (= (and x1502 (not x278)) x1032))
(assert (x906 x1258))
(assert (x906 x751))
(assert (= (x516 1461501637330902918203684832716283019655932542975) (x390 1461501637330902918203684832716283019655932542975)))
(assert (=> (>= 10000 x264) (= (x390 x264) (x516 x264))))
(assert (x906 x927))
(assert (= x349 (x1400 (x390 x349))))
(assert (x906 x1360))
(assert (x906 x922))
(assert (x906 x781))
(assert (x725 x452 x849))
(assert (= (x516 2418364589) (x390 2418364589)))
(assert (= x1513 (x1400 (x390 x1513))))
(assert (x906 x1103))
(assert (x906 x1378))
(assert (x906 x207))
(assert (x906 x830))
(assert (= (x1037 x499) (ite (= x891 x499) x938 (x1038 x499))))
(assert (= x66 (x1400 (x390 x66))))
(assert (x906 x1042))
(assert (x906 x1134))
(assert (x906 x1401))
(assert (x906 x783))
(assert (=> (>= 10000 x27) (= (x390 x27) (x516 x27))))
(assert (= (x244 x623) (ite (= x145 x623) x170 (x136 x623))))
(assert (x906 x824))
(assert (= x818 (and (not x464) x633)))
(assert (x906 x932))
(assert (= x953 x955))
(assert (= (x1037 x127) (ite (= x127 x891) x938 (x1038 x127))))
(assert (x906 x1323))
(assert (= (x1400 (x390 x270)) x270))
(assert (= (or (and (not x1058) x876) (and (not x851) x336)) x915))
(assert (= (ite (= x442 x499) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x499)) (x972 x499)))
(assert (x906 x868))
(assert (x906 x1285))
(assert (x906 x253))
(assert (= x336 (and x1081 x837)))
(assert (x906 x798))
(assert (x906 x644))
(assert (= 0 (x791 x499)))
(assert (= (x791 x746) 0))
(assert (x906 x1082))
(assert (x906 x1096))
(assert (x209 x1282))
(assert (x756 x381))
(assert (x906 x869))
(assert (x906 x197))
(assert (= (ite (= x212 x586) x1076 (x972 x212)) (x883 x212)))
(assert (x906 x785))
(assert (x906 x115))
(assert (x756 x200))
(assert (x906 x3))
(assert (x756 x311))
(assert (x906 x303))
(assert (x756 x1235))
(assert (x906 x771))
(assert (= (x509 x499) (ite (= x800 x499) x521 (x1018 x499))))
(assert (x906 x1427))
(assert (x906 x656))
(assert (x906 x1138))
(assert (= x1101 (=> (and (or (and (= x783 (x536 1461501637330902918203684832716283019655932542975 x497)) (not x991) (= (x753 (x390 x385) x1462 0) x368) (= (x753 (x390 x141) (x516 9) 0) x48) (= x1462 (x753 (x390 x783) x48 0))) x991) (= (= x569 0) x923) (or (and (or (and (= x896 (x753 (x390 x385) x752 0)) (= x28 x523) (= x500 (x536 1461501637330902918203684832716283019655932542975 x497)) (= (x753 (x390 x385) x919 0) x832) (= x752 (x753 (x390 x1371) x510 0)) (not x619) (= x22 (* x273 x569)) (< (* x273 x569) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x753 (x390 x141) (x516 7) 0) x510) (= (x753 (x390 x141) (x516 3) 0) x325) (= x22 x768) (= x1371 (x536 1461501637330902918203684832716283019655932542975 x497)) (= x919 (x753 (x390 x500) x325 0))) (and (= x28 x523) (= (x753 (x390 x385) x584 0) x1030) x619 (= (x753 (x390 x1518) x862 0) x584) (= x1518 (x536 1461501637330902918203684832716283019655932542975 x497)) (= x862 (x753 (x390 x141) (x516 7) 0)))) (= (> x1231 x1349) x498) (= x28 (x243 (+ 64 x809))) (<= x690 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x534) (= x1309 (x243 (+ 32 x809))) (= (x753 (x390 x99) x388 0) x988) (>= x690 0) (= x619 (= 0 x273)) (= x1349 (x912 x113)) (= (x753 (x390 x385) x988 0) x113) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1349) (<= 0 x1349) (= x388 (x753 (x390 x141) (x516 7) 0)) (or (and (or (and (not x1154) (= x1336 x1029)) (and (= x1029 x160) x1154 (= x160 (x826 x1309)))) (= (= 0 x1349) x855) (= x582 (x826 x1309)) (or (and (= x997 (x705 (- x1029 x1463))) x855 (= x997 x273) (not (< x1029 x1463)) (= (x826 x809) x1463)) (and (= x273 x1360) (not x855) (not (< x1029 x1349)) (= 604800 x15) (= x1491 (x705 (- x1029 x1349))) (= (ite (< x1491 604800) x1491 604800) x1360))) x498 (= x1154 (> x1336 x582))) (and (= 0 x273) (not x498))) (= (x664 x211) x690) (= x211 (x753 (x390 x141) (x516 1) 0)) (= (x276 x1470) x534) (= x1231 (x826 x1309)) (= x1470 (x272 x211 1)) (<= x534 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x536 1461501637330902918203684832716283019655932542975 x497) x99) (not x923)) (and (= x366 (x753 (x390 x141) (x516 7) 0)) x923 (= x665 (x753 (x390 x230) x366 0)) (= x230 (x536 1461501637330902918203684832716283019655932542975 x497)) (= (x753 (x390 x385) x665 0) x85) (= x523 x809))) (= x991 (= 0 x1089))) x1333)))
(assert (= x808 (=> (and (= x319 x1006) x1351 (= x1020 (x723 (x390 x1513))) (= x131 (= 274184521717934524641157099916833587218 x1513)) (= (x1212 (x390 274184521717934524641157099916833587206)) x1379) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x723 (x390 x1513))) x1351) x990 (= (<= 0 x1379) x515) (= x854 (x1212 (x390 x1513))) (= (< x854 115792089237316195423570985008687907853269984665640564039457584007913129639936) x990) x515 (= x611 (x1212 (x390 274184521717934524641157099916833587206)))) (and (=> (and (= x1270 (x705 (- x576 x1069))) (not (= 1889567281 x802)) (<= x1436 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x802 2835717307) (= x1387 x1411) (= x1138 x1358) (= x335 (x1459 (x390 274184521717934524641157099916833587218))) (= x529 (x753 (x390 274184521717934524641157099916833587206) (x516 1) 0)) (= (x753 (x390 274184521717934524641157099916833587206) (x516 1) 0) x431) (not (> 4 x435)) (= x319 x435) (>= 1461501637330902918203684832716283019655932542975 x1282) (not (= 649617121 x802)) (not x1060) (not (= x802 2514000705)) (= (x38 x529) x576) (= x1138 x1069) (= x1285 (x536 1461501637330902918203684832716283019655932542975 x1282)) (not x668) (= x1282 x350) (not (< x802 649617121)) (= x435 68) (<= x576 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587206 x98) (< (+ x1436 x1138) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1436) (= x964 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (or (and (= true (<= x217 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x217)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x217)) x1060) (= x1436 (x189 x1131)) (< 0 x335) (= x1437 x1069) (not x1124) (= (+ x1395 x1358) x216) (= x217 (x705 (- x435 4))) x131 (>= x576 0) (not x986) (= x986 (< x576 x1138)) (= x1395 x1436) (= x555 1) (= 274184521717934524641157099916833587206 x429) (= x1004 (x536 1461501637330902918203684832716283019655932542975 x1282)) (= x1124 (< x576 x1069)) (= x668 (>= (+ x1436 x1138) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x807 32) (not (= 826074471 x802)) (= x1131 (x753 (x390 x1285) (x516 1) 0))) x480) (=> (not x131) x79)))))
(assert (= 2258409472 (x1400 (x516 2258409472))))
(assert (x906 x1178))
(assert (x906 x1246))
(assert (= (ite (= x54 x186) x766 (x171 x186)) (x378 x186)))
(assert (x906 x1363))
(assert (x906 x523))
(assert (= (ite (and x757 x1063) (x225 x1090) (x1377 x1090)) (x663 x1090)))
(assert (x906 x1120))
(assert (= (x810 x1393) (ite (= x1324 x1393) 0 (x805 x1393))))
(assert (=> (<= x58 10000) (= (x390 x58) (x516 x58))))
(assert (x906 x554))
(assert (x756 x3))
(assert (=> (<= x347 10000) (= (x516 x347) (x390 x347))))
(assert (x906 x1226))
(assert (x906 x917))
(assert (x906 x1055))
(assert (= (=> (= (< x334 x724) x278) (and (=> (and (= x1056 x1172) x278) x577) (=> (not x278) x470))) x1224))
(assert (= (ite (= x535 x978) x917 (x883 x978)) (x424 x978)))
(assert (= (x1400 (x272 x865 1)) (+ (x1400 x865) 1)))
(assert (=> (>= 10000 x1) (= (x516 x1) (x390 x1))))
(assert (= (x1400 (x390 x27)) x27))
(assert (x906 x886))
(assert (= 0 (x791 160)))
(assert (x906 x1273))
(assert (x906 x343))
(assert (= x65 (x1400 (x390 x65))))
(assert (= (x163 x1337) (ite (= x1337 x1098) 0 (x993 x1337))))
(assert (= x853 (=> (and (= x1479 (> x1293 0)) (= x1293 (x705 (- x141 1)))) (and (=> (not x1479) x1271) (=> x1479 x787)))))
(assert (x906 x1465))
(assert (x906 x50))
(assert (= (and x1256 x1479) x46))
(assert (= (x390 649617121) (x516 649617121)))
(assert (= x126 (x1400 (x390 x126))))
(assert (x906 x36))
(assert (x906 x1023))
(assert (= (x1400 (x390 x593)) x593))
(assert (= (x516 1889567281) (x390 1889567281)))
(assert (x906 x651))
(assert (= x1451 (x1400 (x390 x1451))))
(assert (x906 x1388))
(assert (x906 x1225))
(assert (x756 x970))
(assert (= (x1400 (x516 826074471)) 826074471))
(assert (= (x516 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x390 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x906 x4))
(assert (x906 x1367))
(assert (= (x1450 x186) (ite (and x1063 x214) (x1018 x186) (ite (and x1062 (not x1066) (not x214) x1063) (x509 x186) (ite (and (not x214) (not x1062) x1063) (x1018 x186) (x1087 x186))))))
(assert (= (x1400 (x390 x1279)) x1279))
(assert (x756 274184521717934524641157099916833587206))
(assert (x906 x442))
(assert (x906 x1325))
(assert (x906 x537))
(assert (= (ite (= x891 x145) x170 (x136 x891)) (x244 x891)))
(assert (x756 274184521717934524641157099916833587214))
(assert (x756 x412))
(assert (= (x516 468353030) (x390 468353030)))
(assert (= (ite (and x633 x464) (x1298 x499) (x872 x499)) (x340 x499)))
(assert (= (ite (= x212 x442) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x212)) (x972 x212)))
(assert (=> (<= x376 10000) (= (x390 x376) (x516 x376))))
(assert (=> (>= 10000 x1508) (= (x390 x1508) (x516 x1508))))
(assert (x906 x1199))
(assert (= (ite (= x800 x1033) x521 (x1018 x1033)) (x509 x1033)))
(assert (x906 x474))
(assert (= x1520 (x1400 (x390 x1520))))
(assert (x906 x465))
(assert (x339 x1272 x125 x423 x838))
(assert (x906 x891))
(assert (x906 x216))
(assert (= (x791 x891) 0))
(assert (= x1251 (x1400 (x390 x1251))))
(assert (= x1486 (=> (and (not (< x1289 2690754053)) (> x868 0) (= x1011 x358) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1011) (= x1289 2743102681) (= x868 (x1459 (x390 274184521717934524641157099916833587206))) (not (= 2690754053 x1289)) (= (x753 (x390 x221) (x516 3) 0) x144) (<= x992 1461501637330902918203684832716283019655932542975) (not (< x1289 2293535753)) (<= 0 x1011) (>= 1461501637330902918203684832716283019655932542975 x78) (= x880 (x753 (x390 x992) x144 0)) (= x884 (x753 (x390 x78) x880 0)) (= x1011 (x614 x884)) (> 2960351575 x1289)) (=> (and (= x592 x859) (= x1241 x593) (= x270 x1200) (= x655 x358) (= x1300 x62)) x1514))))
(assert (= (x1400 (x390 x979)) x979))
(assert (x906 x1414))
(assert (x906 x396))
(assert (= (x1400 (x390 x1281)) x1281))
(assert (x725 x1304 x867))
(assert (x725 x1082 x265))
(assert (x756 x300))
(assert (= (and (not x131) x825) x621))
(assert (=> (>= 10000 x373) (= (x516 x373) (x390 x373))))
(assert (x906 x263))
(assert (x209 x367))
(assert (x906 x866))
(assert (x906 x534))
(assert (x906 x580))
(assert (x906 x1109))
(assert (x756 x1385))
(assert (= (x1400 (x516 142201243)) 142201243))
(assert (x906 x765))
(assert (x756 x334))
(assert (x1382 x251 x1323))
(assert (x906 x334))
(assert (x906 x572))
(assert (x906 x904))
(assert (= (x171 x499) (ite (= x499 x982) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x558 x499))))
(assert (= (x424 x1104) (ite (= x1104 x535) x917 (x883 x1104))))
(assert (x906 x799))
(assert (= 0 (x791 x186)))
(assert (= (=> (and (= x1083 (x631 x268)) (= x879 (= x1083 0)) (= x45 (x536 1461501637330902918203684832716283019655932542975 x497)) (not (< x31 x1197)) (= x836 (x753 (x390 x141) (x516 6) 0)) (>= x1083 0) (<= x31 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1083) (<= 0 x31) (= (x753 (x390 x45) x836 0) x268)) (and (=> x879 x1106) (=> (and (= x1129 x49) (= 0 x1381) (>= x49 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x49) (not x879) (= x92 (x753 (x390 x141) (x516 10) 0)) (= (x1302 x678) x49) (= (x753 (x390 x323) x92 0) x678) (= (x536 1461501637330902918203684832716283019655932542975 x497) x323)) x1487))) x1333))
(assert (x906 x1293))
(assert (x906 x394))
(assert (x906 x1345))
(assert (x756 x1203))
(assert (x906 x1234))
(assert (x906 x507))
(assert (x906 x233))
(assert (=> (<= x432 10000) (= (x390 x432) (x516 x432))))
(assert (= x1230 (=> (and (= (= 0 x185) x708) (or (and (= x453 (x536 1461501637330902918203684832716283019655932542975 x497)) (= x861 (x753 (x390 x453) x119 0)) (= x119 (x753 (x390 x724) (x516 9) 0)) (not x1340) (= x1517 (x753 (x390 x385) x861 0))) x1340) (or (and (= (x1046 x57) x640) (or (and (not x1126) (= x618 0)) (and x1126 (or (and (not x1339) (= x220 x1336)) (and x1339 (= x220 x1096) (= (x408 x905) x1096))) (= (= 0 x640) x1148) (or (and (= x566 x618) (= (x705 (- x220 x1259)) x566) (not (< x220 x1259)) x1148 (= x1259 (x408 x1056))) (and (= 604800 x263) (not x1148) (= x618 x830) (= (x705 (- x220 x640)) x1266) (not (< x220 x640)) (= x830 (ite (> 604800 x1266) x1266 604800)))) (= (> x1336 x989) x1339) (= x989 (x408 x905)))) (= x905 (x243 (+ x523 96))) (= x1252 (x536 1461501637330902918203684832716283019655932542975 x497)) (= (= x618 0) x1244) (<= 0 x267) (= x865 (x753 (x390 x724) (x516 1) 0)) (= (x243 (+ x523 128)) x501) (<= 0 x640) (= (x753 (x390 x1252) x133 0) x1474) (not x708) (or (and (= (x753 (x390 x724) (x516 7) 0) x425) (= (x753 (x390 x1007) x425 0) x1419) (= x219 (x753 (x390 x385) x1179 0)) (= x1146 (x753 (x390 x724) (x516 3) 0)) (not x1244) (= x952 x1414) (= x1222 (x753 (x390 x385) x1419 0)) (= (x753 (x390 x1123) x1146 0) x1179) (= x1007 (x536 1461501637330902918203684832716283019655932542975 x497)) (= (* x185 x618) x952) (< (* x618 x185) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x122 x501) (= (x536 1461501637330902918203684832716283019655932542975 x497) x1123)) (and (= x1118 (x753 (x390 x385) x169 0)) (= x122 x501) (= x887 (x753 (x390 x724) (x516 7) 0)) (= x102 (x536 1461501637330902918203684832716283019655932542975 x497)) x1244 (= x169 (x753 (x390 x102) x887 0)))) (= x1126 (> x524 x640)) (= (x272 x865 1) x615) (= x36 (x276 x615)) (= x57 (x753 (x390 x385) x1474 0)) (= (x408 x905) x524) (= x267 (x664 x865)) (<= 0 x36) (<= x267 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x640 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x753 (x390 x724) (x516 7) 0) x133) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x36)) (and (= (x753 (x390 x385) x1283 0) x1260) (= x1283 (x753 (x390 x3) x502 0)) x708 (= x502 (x753 (x390 x724) (x516 7) 0)) (= x122 x1056) (= (x536 1461501637330902918203684832716283019655932542975 x497) x3))) (= x1340 (= 0 x1051))) x1397)))
(assert (= (x1400 (x390 x1443)) x1443))
(assert (= (x424 x1016) (ite (= x1016 x535) x917 (x883 x1016))))
(assert (x906 x31))
(assert (x906 x1210))
(assert (= (ite (= x1305 x800) x521 (x1018 x1305)) (x509 x1305)))
(assert (= (+ 1 (x1400 x211)) (x1400 (x272 x211 1))))
(assert (x906 x1308))
(assert (x906 x1268))
(assert (x906 x778))
(assert (= (x1037 x978) (ite (= x978 x891) x938 (x1038 x978))))
(assert (x906 x524))
(assert (=> (>= 10000 x270) (= (x516 x270) (x390 x270))))
(assert (x906 x239))
(assert (x906 x766))
(assert (=> (>= 10000 x1265) (= (x390 x1265) (x516 x1265))))
(assert (= (x176 x460) (ite (and x260 x991) (x1227 x460) (x1228 x460))))
(assert (x906 x1008))
(assert (= (x171 x746) (ite (= x982 x746) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x558 x746))))
(assert (x906 x1001))
(assert (= (and x773 x1423) x1256))
(assert (=> (>= 10000 x601) (= (x516 x601) (x390 x601))))
(assert (= x863 (=> (and (or (and x481 (= 0 x344) (= 0 x1103)) (and (= x1183 (x753 (x390 x843) x371 0)) (= (x753 (x390 x207) (x516 10) 0) x371) (= x150 (x1399 x1183)) (not x481) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x150) (<= 0 x150) (= (= x150 0) x258) (or (and x258 (= x344 0) (= x1103 0)) (and (= x1103 x150) (= 1 x344) (not x258))) (= (x536 1461501637330902918203684832716283019655932542975 x497) x843))) (= (= 0 x207) x481)) x1392)))
(assert (x756 x1438))
(assert (x906 x981))
(assert (= (x1400 (x390 x269)) x269))
(assert (x906 x373))
(assert (= (x384 x186) (ite (and (not x173) x871 x517) (x1350 x186) (x333 x186))))
(assert (x906 x1443))
(assert (x906 x930))
(assert (= (x1450 x858) (ite (and x214 x1063) (x1018 x858) (ite (and x1063 x1062 (not x214) (not x1066)) (x509 x858) (ite (and (not x1062) x1063 (not x214)) (x1018 x858) (x1087 x858))))))
(assert (x906 x976))
(assert (= (x1455 x669) (ite (and x984 x299) (x244 x669) (x648 x669))))
(assert (x906 x10))
(assert (=> (>= 10000 x656) (= (x516 x656) (x390 x656))))
(assert (= (=> (= x654 x180) x1380) x12))
(assert (= (x340 x212) (ite (and x633 x464) (x1298 x212) (x872 x212))))
(assert (x906 x792))
(assert (= (ite (= x746 x442) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x746)) (x972 x746)))
(assert (= 2532887486 (x1400 (x516 2532887486))))
(assert (x906 x699))
(assert (= (x1400 (x390 x1507)) x1507))
(assert (x906 x1384))
(assert (x906 x77))
(assert (x906 x1265))
(assert (x906 x1264))
(assert (x906 x661))
(assert (= x56 x299))
(assert (x906 x70))
(assert (= (x1400 (x516 1968616202)) 1968616202))
(assert (= (=> (and (<= 0 x63) (= (= x63 0) x773) (= (x631 x650) x63) (= (x753 (x390 x141) (x516 6) 0) x1217) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x63) (= x650 (x753 (x390 x1385) x1217 0)) (= (x536 1461501637330902918203684832716283019655932542975 x497) x1385)) (and (=> x773 x853) (=> (and (not x773) (= x274 x141)) x456))) x813))
(assert (x756 x1275))
(assert (x906 x983))
(assert (x756 x1378))
(assert (x906 x659))
(assert (x906 x1107))
(assert (= (ite (= x800 x786) x598 (x1362 x800)) (x1018 x800)))
(assert (x906 x1170))
(assert (= (x1037 x296) (ite (= x296 x891) x938 (x1038 x296))))
(assert (x906 x1053))
(assert (= (x14 x186) (ite (= x845 x186) x50 (x424 x186))))
(assert (x756 x1044))
(assert (= (x883 x296) (ite (= x586 x296) x1076 (x972 x296))))
(assert (x906 x1110))
(assert (x906 x128))
(assert (= 87118632 (x1400 (x516 87118632))))
(assert (= (x378 x499) (ite (= x499 x54) x766 (x171 x499))))
(assert (x906 x99))
(assert (= 0 (x791 x669)))
(assert (x906 x1407))
(assert (x906 x1257))
(assert (x906 x1464))
(assert (= (x1400 (x390 x448)) x448))
(assert (x906 x1004))
(assert (x906 x177))
(assert (= (ite (and x757 x1063) (x225 x461) (x1377 x461)) (x663 x461)))
(assert (x906 x1117))
(assert (= (ite (= x127 x145) x170 (x136 x127)) (x244 x127)))
(assert (= (x1400 (x390 x654)) x654))
(assert (= (ite (and x464 x633) (x1298 x1140) (x872 x1140)) (x340 x1140)))
(assert (= (x1450 x145) (ite (and x214 x1063) (x1018 x145) (ite (and x1062 (not x214) x1063 (not x1066)) (x509 x145) (ite (and x1063 (not x1062) (not x214)) (x1018 x145) (x1087 x145))))))
(assert (= (and (not x658) x818) x626))
(assert (=> (<= x1348 10000) (= (x516 x1348) (x390 x1348))))
(assert (=> (>= 10000 x1441) (= (x390 x1441) (x516 x1441))))
(assert (x756 x596))
(assert (= (or (and (not x107) x556) (and x847 x351) (and x1498 (not x1394))) x652))
(assert (= x311 (x1400 (x390 x311))))
(assert (= (x1400 (x390 x44)) x44))
(assert (= (x1400 (x390 x1319)) x1319))
(assert (= (ite (and x871 x517 (not x173)) (x1350 x746) (x333 x746)) (x384 x746)))
(assert (x906 x540))
(assert (=> (>= 10000 x1225) (= (x390 x1225) (x516 x1225))))
(assert (= (x1400 (x390 x687)) x687))
(assert (x906 x535))
(assert (= x1237 x299))
(assert (= (x378 x746) (ite (= x746 x54) x766 (x171 x746))))
(assert (x906 x575))
(assert (x756 x323))
(assert (= (x791 x1140) 0))
(assert (= (x516 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x390 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x906 x471))
(assert (= (x1400 (x516 635128645)) 635128645))
(assert (x906 x488))
(assert (= x1397 (=> (and (= (x753 (x390 x659) x152 0) x1151) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x31) (= x152 (x753 (x390 x724) (x516 6) 0)) (= (= x1331 0) x181) (<= 0 x1331) (>= x31 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331) (not (> x724 x31)) (= x659 (x536 1461501637330902918203684832716283019655932542975 x497)) (= x1331 (x118 x1151))) (and (=> (and (= x530 x1103) (not x181) (= (x753 (x390 x1199) x84 0) x13) (<= x530 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x536 1461501637330902918203684832716283019655932542975 x497) x1199) (= x344 0) (<= 0 x530) (= x530 (x1399 x13)) (= x84 (x753 (x390 x724) (x516 10) 0))) x1392) (=> x181 x1249)))))
(assert (x906 x280))
(assert (x906 x589))
(assert (x906 x966))
(assert (=> (>= 10000 x592) (= (x516 x592) (x390 x592))))
(assert (x906 x297))
(assert (x906 x1080))
(assert (x906 x1305))
(assert (=> (>= 10000 x156) (= (x516 x156) (x390 x156))))
(assert (= (ite (= x746 x586) x1076 (x972 x746)) (x883 x746)))
(assert (= x1063 x1502))
(assert (= x607 (x1038 x931)))
(assert (x906 x1326))
(assert (x906 x1193))
(assert (= (x1350 x858) (ite (and (not x1201) x242 x608 x871 x153 x517) (x14 x858) (ite (and x242 x517 x608 (not x153) x871) (x424 x858) (ite (and x608 (not x242) x517 x871) (x883 x858) (ite (and (not x608) x871 x517) (x972 x858) (x685 x858)))))))
(assert (= (x390 2514000705) (x516 2514000705)))
(assert (= (x1046 x1000) (ite (and x260 x923) (x1111 x1000) (ite (and x260 x619 (not x923)) (x1084 x1000) (x1418 x1000)))))
(assert (= 2514000705 (x1400 (x516 2514000705))))
(assert (= (x430 x499) (ite (= x499 x198) x414 (x378 x499))))
(assert (x906 x1054))
(assert (= (ite (= x858 x786) x598 (x1362 x858)) (x1018 x858)))
(assert (x906 x1168))
(assert (x906 x873))
(assert (= (x516 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x390 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x906 x1187))
(assert (= (and x1429 x316) x876))
(assert (= 2293535753 (x1400 (x516 2293535753))))
(assert (x756 x230))
(assert (= (ite (and x871 (not x173) x517) (x1350 x145) (x333 x145)) (x384 x145)))
(assert (= (x972 x1016) (ite (= x1016 x442) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x1016))))
(assert (x209 x375))
(assert (= (x390 2258409472) (x516 2258409472)))
(assert (x209 x852))
(assert (x756 x1513))
(assert (=> (<= x819 10000) (= (x390 x819) (x516 x819))))
(assert (x906 x769))
(assert (x906 x768))
(assert (= (x1400 (x390 x843)) x843))
(assert (= (ite (= x891 x800) x521 (x1018 x891)) (x509 x891)))
(assert (= (ite (= x186 x786) x598 (x1362 x186)) (x1018 x186)))
(assert (x906 x666))
(assert (x906 x1437))
(assert (= (ite (= x931 x858) x607 (x222 x858)) (x1038 x858)))
(assert (= (ite (= x586 x499) x1076 (x972 x499)) (x883 x499)))
(assert (= x698 (or (and (not x837) x1081) (and (not x1429) x316) (and x851 x336))))
(assert (= (x14 x145) (ite (= x145 x845) x50 (x424 x145))))
(assert (x906 x1425))
(assert (= x1252 (x1400 (x390 x1252))))
(assert (=> (<= x1451 10000) (= (x516 x1451) (x390 x1451))))
(assert (= x1442 (x1400 (x390 x1442))))
(assert (x906 x592))
(assert (x756 x206))
(assert (= (x1038 x499) (ite (= x931 x499) x607 (x222 x499))))
(assert (x906 x40))
(assert (=> (<= x696 10000) (= (x516 x696) (x390 x696))))
(assert (x209 x747))
(assert (=> (<= x924 10000) (= (x516 x924) (x390 x924))))
(assert (= x601 (x1400 (x390 x601))))
(assert (= (x1038 x669) (ite (= x931 x669) x607 (x222 x669))))
(assert (x906 x259))
(assert (=> (<= x207 10000) (= (x516 x207) (x390 x207))))
(assert (x906 x1252))
(assert (x906 x63))
(assert (x906 x475))
(assert (x906 x1353))
(assert (x906 x964))
(assert (x906 x1079))
(assert (x906 x200))
(assert (=> (<= x269 10000) (= (x390 x269) (x516 x269))))
(assert (x906 x1511))
(assert (= x109 (x1400 (x390 x109))))
(assert (= (x171 x186) (ite (= x982 x186) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x558 x186))))
(assert (= (x509 x623) (ite (= x623 x800) x521 (x1018 x623))))
(assert (=> (<= x1367 10000) (= (x390 x1367) (x516 x1367))))
(assert (= x55 (=> (and (= x541 (x753 (x390 x334) (x516 3) 0)) (= (x536 1461501637330902918203684832716283019655932542975 x497) x811) (= (x753 (x390 x385) x1311 0) x714) (= x871 (< 0 x170)) (= x1311 (x753 (x390 x811) x541 0))) (and (=> (and (= x173 (< x1427 x1483)) (= (x289 x669) x747) (= (x243 (+ x1172 32)) x669) (<= x1520 1461501637330902918203684832716283019655932542975) (= (x243 (+ 68 x1172)) x68) (= (x705 (- x1390 32)) x604) x871 (< 0 x120) (= (x536 26959946667150639794667015087019630673637144422540572481103610249215 x747) x71) (or (and (not x608) (= x1483 0)) (and (= x586 x1015) x608 (or (and (or (and (not x153) (= x1483 64)) (and (or (and (= x1483 96) (not x1201)) (and (= x1294 (x14 x127)) x1201 (= 128 x1483) (= (< 128 x1427) x178) (= x127 (x243 (+ x1172 128))) (= (x243 (+ x1152 160)) x718) (not x178))) (= x1033 (x243 (+ x1172 96))) (= (x243 (+ 128 x1152)) x845) (= x1201 (< 96 x1427)) (= x50 (x424 x1033)) x153)) (= (x243 (+ x1152 96)) x535) (= (> x1427 64) x153) (= x1273 (x243 (+ x1172 64))) x242 (= x917 (x883 x1273))) (and (= 32 x1483) (not x242))) (= x1076 (x972 x667)) (= x669 x667) (= (> x1427 32) x242))) (= x442 (x243 (+ 96 x1121))) (= x608 (< 0 x1427)) (< 0 x170) (= (x243 (+ x1172 36)) x1121) (= 0 x898) (= (x243 (+ x71 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x451) (= x120 (x1310 x145)) (= (x243 (+ x1172 100)) x1152) (or (not x173) (and (= (x243 (+ x1015 x1427)) x1067) x173)) (= x623 (x243 (+ 160 x1383))) x1468 (= (x972 x1172) x1427) (= x1468 (< 0 x866)) (= x1390 (x705 (- x1152 x1172))) (= x1015 (x243 (+ x1121 128))) (= (x1459 (x390 x1520)) x866) (= x197 (x1310 x623)) (= (x803 x223) x1520) (= x223 x1234)) x1501) (=> (not x871) x897)))))
(assert (= (x1400 (x516 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (=> (<= x385 10000) (= (x516 x385) (x390 x385))))
(assert (= (x1399 x13) (ite (and x1321 x1063) (x1302 x13) (x505 x13))))
(assert (x756 x376))
(assert (= (x1400 (x390 x1235)) x1235))
(assert (= (ite (= x145 x1104) x170 (x136 x1104)) (x244 x1104)))
(assert (x906 x62))
(assert (= (ite (and x517 (not x173) x871) (x1350 x212) (x333 x212)) (x384 x212)))
(assert (x906 x1174))
(assert (x906 x1167))
(assert (= (and (not x1364) x1032) x556))
(assert (x209 x1323))
(assert (= x230 (x1400 (x390 x230))))
(assert (= (or (and (not x158) x1424) (and (not x103) x124)) x731))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x553) (= x179 x553) (<= x593 1461501637330902918203684832716283019655932542975) (<= 0 x553) (>= 1461501637330902918203684832716283019655932542975 x270) (> 2960351575 x804) (<= x592 1461501637330902918203684832716283019655932542975) (= x1473 (x1459 (x390 274184521717934524641157099916833587206))) (= (x581 x379) x553) (= (x753 (x390 x270) x1043 0) x147) (not (= x804 2293535753)) (> 2690754053 x804) (not (= x804 2512682246)) (not (= 2418364589 x804)) (= (x753 (x390 x1300) (x516 4) 0) x1043) (= (x753 (x390 x593) x24 0) x379) (= x804 2532887486) (= (x753 (x390 x592) x147 0) x24) (< 0 x1473) (not (< x804 2293535753))) (=> (and (= (>= x927 x32) x440) (= x179 x308) (not (< x334 x141)) (= (x1459 (x390 274184521717934524641157099916833587206)) x694) (= x1292 x1194) x440 (not (< 18446744073709551615 x170)) (= x984 (= x170 0)) (= x183 x141) (<= x497 1461501637330902918203684832716283019655932542975) (= x1336 x545) (= (x243 (+ 35 x392)) x1049) (= (x243 (+ 160 x651)) x145) (= 0 x1112) (= x1158 x717) (< 131 x474) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x450) (and (= true (<= x450 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 128 x450)))) (= x869 0) (= (x803 x672) x170) (= x297 x666) (= (x705 (- x104 1)) x1023) (not (< 18446744073709551615 x1226)) (or (and (not x984) (= x1117 (mod (* 32 x170) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x243 (+ 160 x1383)) x877)) x984) (= x497 x34) (= x927 x1336) (not (> 1 x104)) (= (or x37 (not x86)) x281) x281 (= x32 x1292) (<= 0 x709) (= (x243 (+ x315 160)) x763) (= x981 x1158) (= x1434 x655) (or (not x1185) (and (not (> x135 1)) (not (> 1 x104)) (= x1039 (< 1 x104)) (or (and (= x706 (x136 128)) (= (x136 160) x985) (= (x536 1461501637330902918203684832716283019655932542975 x985) x475) (not (= x228 x475)) x1039 (= (x536 1461501637330902918203684832716283019655932542975 x452) x228) (or (and (= (x136 128) x547) x649 (not (= x1125 x644)) (= x644 (x536 1461501637330902918203684832716283019655932542975 x367)) (= (x136 224) x1082) (= x552 (x136 128)) (< 0 x547) (= (< 3 x104) x210) (not x210) (= (x136 160) x367) (= x1125 (x536 1461501637330902918203684832716283019655932542975 x1082)) (< 2 x552)) (not x649)) (= (x136 192) x452) (= (< 2 x104) x649) (> x128 0) (> x706 1) (= x128 (x136 128))) (not x1039)) x1185 (= x135 (x705 (- x104 1))))) (>= 1461501637330902918203684832716283019655932542975 x709) (= (mod (* 32 x170) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x856) (not (> x1352 x474)) (= x1185 (< 0 x1023)) (= x104 (x136 128)) (= x726 0) (or (and (= (<= x1049 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x474)) (< x1049 x474)) (and (> x1049 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x474))) (= (and x1454 x1482) x504) (= x1352 (x243 (+ x1234 x856))) (not (= 69947311 x542)) (= (x705 (- x474 4)) x450) (= x1388 0) (= (= x973 0) x1136) (<= 0 x350) (= x651 (mod (* 32 x170) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1482 (= x697 0)) (= 128 x1120) (= x86 (= x1194 0)) (= x385 x350) (= x392 x1226) (not (< x474 4)) (< x542 911411945) (<= 0 x31) (<= x350 1461501637330902918203684832716283019655932542975) (= x310 x334) (>= x717 0) (= x1197 x141) (= (x243 (+ 32 x315)) x114) (< 0 x694) (= x308 x973) (= x672 (x243 (+ 4 x392))) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x474)) (= x1234 (x243 (+ x392 36))) (> x31 x334) (= x1327 x334) (= x1454 (= 0 x1434)) (= x809 (x243 (+ x114 x145))) (= x341 x497) (= (mod (* x170 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x315) (> 468353030 x542) (= x297 0) (< x542 2293535753) (= (and x504 x1136) x37) (= x697 x1054) (<= x31 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 87118632 x542) (= x1383 (x243 (+ x651 32))) (<= x717 1461501637330902918203684832716283019655932542975)) x306)) x1514))
(assert (= x1238 (=> (and (= x237 (= x738 0)) (or (and (= (x536 1461501637330902918203684832716283019655932542975 x497) x200) (= x1184 (x176 x460)) (= x190 (x753 (x390 x738) (x516 9) 0)) (= 1 x1051) (not x237) (= (x753 (x390 x385) x301 0) x460) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1184) (<= 0 x1184) (= x1184 x185) (= x301 (x753 (x390 x200) x190 0))) (and (= x185 0) (= x1051 0) x237))) x1230)))
(assert (=> (>= 10000 x1279) (= (x390 x1279) (x516 x1279))))
(assert (x906 x217))
(assert (= (x244 x186) (ite (= x186 x145) x170 (x136 x186))))
(assert (x906 x547))
(assert (= (ite (and x1063 x214) (x1018 x1033) (ite (and (not x1066) x1062 x1063 (not x214)) (x509 x1033) (ite (and x1063 (not x1062) (not x214)) (x1018 x1033) (x1087 x1033)))) (x1450 x1033)))
(assert (x906 x1488))
(assert (= (x1455 x127) (ite (and x299 x984) (x244 x127) (x648 x127))))
(assert (x756 x1))
(assert (x906 x392))
(assert (x906 x1314))
(assert (x906 x93))
(assert (= (x1455 x296) (ite (and x984 x299) (x244 x296) (x648 x296))))
(assert (x906 x168))
(assert (= x175 (x1400 (x390 x175))))
(assert (=> (>= 10000 x391) (= (x516 x391) (x390 x391))))
(assert (= (x791 x1305) 0))
(assert (= x1452 (x1400 (x390 x1452))))
(assert (x756 x696))
(assert (x906 x1153))
(assert (= (ite (= x586 x186) x1076 (x972 x186)) (x883 x186)))
(assert (x906 x521))
(assert (= x347 (x1400 (x390 x347))))
(assert (= (x1018 x891) (ite (= x786 x891) x598 (x1362 x891))))
(assert (= (x993 x1337) (ite (and x278 x1502) (x588 x1337) (ite (and x1237 x142) (x614 x1337) (x355 x1337)))))
(assert (= (ite (and x299 x984) (x244 x1305) (x648 x1305)) (x1455 x1305)))
(assert (= (x945 x1104) (ite (and x51 x1328 x1467 x293 (not x138) x1496) (x1059 x1104) (ite (and x1467 x1496 x293 x51 (not x1328)) (x430 x1104) (ite (and x1467 x293 (not x1496) x51) (x378 x1104) (ite (and x293 x1467 (not x51)) (x171 x1104) (x561 x1104)))))))
(assert (= x1417 true))
(assert (x756 x347))
(assert (= (x1400 (x516 69947311)) 69947311))
(assert (x906 x801))
(assert (x725 x1489 x603))
(assert (x906 x235))
(assert (x906 x720))
(assert (x906 x429))
(assert (= (ite (= x891 x1033) x938 (x1038 x1033)) (x1037 x1033)))
(assert (x756 x174))
(assert (x756 x1281))
(assert (x906 x655))
(assert (= (and x517 x871) x633))
(assert (x906 x1069))
(assert (x906 x58))
(assert (=> (<= x3 10000) (= (x390 x3) (x516 x3))))
(assert (x906 x154))
(assert (x906 x300))
(assert (x906 x613))
(assert (x906 x1484))
(assert (= x1441 (x1400 (x390 x1441))))
(assert (x906 x273))
(assert (= x99 (x1400 (x390 x99))))
(assert (= 0 (x791 192)))
(assert (x906 x1123))
(assert (x756 x572))
(assert (= x1055 (x1400 (x390 x1055))))
(assert (= (x1400 (x390 x373)) x373))
(assert (x906 x1133))
(assert (= (x390 2835717307) (x516 2835717307)))
(assert (= (ite (and x299 x984) (x244 x1273) (x648 x1273)) (x1455 x1273)))
(assert (= (or (and x633 x464) (and x818 x658)) x1198))
(assert (= (ite (and x517 (not x173) x871) (x1350 x1104) (x333 x1104)) (x384 x1104)))
(assert (=> (<= x518 10000) (= (x516 x518) (x390 x518))))
(assert (=> (>= 10000 x1008) (= (x390 x1008) (x516 x1008))))
(assert (x906 x1507))
(assert (x906 x1286))
(assert (= (x1450 x623) (ite (and x1063 x214) (x1018 x623) (ite (and (not x1066) (not x214) x1063 x1062) (x509 x623) (ite (and x1063 (not x1062) (not x214)) (x1018 x623) (x1087 x623))))))
(assert (x756 x141))
(assert (= (x1018 x667) (ite (= x786 x667) x598 (x1362 x667))))
(assert (= x1501 (=> (and (= x949 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x95)) x949 (= x95 (x1248 (x390 x1520))) (= (x1189 (x390 x1520)) x635) (= x464 (= x1520 274184521717934524641157099916833587218)) (= x1188 (x1248 (x390 274184521717934524641157099916833587206))) (= x1291 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1189 (x390 x1520)))) x1291 (= (<= 0 x769) x1165) (= (x1248 (x390 274184521717934524641157099916833587206)) x769) (= x64 x1427) x1165) (and (=> (not x464) x735) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1401) (not (> 649617121 x305)) (= x187 x692) (not (= x305 826074471)) (= (x1459 (x390 274184521717934524641157099916833587218)) x901) (>= x1401 0) (= x1024 (or (and (> 64 x704) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x704))) (> x704 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x167) (<= x110 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2835717307 x305) (not x1024) (= (x536 1461501637330902918203684832716283019655932542975 x1489) x1203) (= x493 32) (= 274184521717934524641157099916833587206 x627) (= x543 1) (= 274184521717934524641157099916833587206 x794) (<= x1489 1461501637330902918203684832716283019655932542975) (= x642 (x753 (x390 x1203) (x516 1) 0)) (= x1489 x350) (not (= 1889567281 x305)) (= x9 x187) (= x704 (x705 (- x1012 4))) (= (x1297 x642) x110) (not x764) (not (= x305 2514000705)) (= x110 x426) (= (+ x426 x692) x1308) (= x271 (x753 (x390 x259) (x516 1) 0)) (< (+ x187 x110) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x167 (> x9 x1401)) (> x901 0) (= x64 x1012) (not (> 4 x1012)) (= x454 (< x1401 x187)) (= x764 (>= (+ x187 x110) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x536 1461501637330902918203684832716283019655932542975 x1489) x259) (not (= x305 649617121)) (= (x753 (x390 274184521717934524641157099916833587206) (x516 1) 0) x1113) (= x720 76450787359836037641860180984291677749980919077056822294353438043884394381312) (>= x110 0) (= (x753 (x390 274184521717934524641157099916833587206) (x516 1) 0) x620) (not x454) (= (x1132 x1113) x1401) (= x660 x834) (= x1236 (x705 (- x1401 x9))) x464 (= 68 x1012) (= x197 x9)) x1386)))))
(assert (x906 x1140))
(assert (= (x1455 x1033) (ite (and x299 x984) (x244 x1033) (x648 x1033))))
(assert (= (x1018 x1140) (ite (= x1140 x786) x598 (x1362 x1140))))
(assert (x209 x1304))
(assert (x906 x1125))
(assert (= (ite (and x299 x984) (x244 x667) (x648 x667)) (x1455 x667)))
(assert (=> (>= 10000 x1520) (= (x390 x1520) (x516 x1520))))
(assert (x906 x687))
(assert (x906 x179))
(assert (x906 x1017))
(assert (= x517 x234))
(assert (x906 x870))
(assert (= (x883 x1033) (ite (= x1033 x586) x1076 (x972 x1033))))
(assert (= 2418364589 (x1400 (x516 2418364589))))
(assert (x906 x1))
(assert (=> (>= 10000 x659) (= (x516 x659) (x390 x659))))
(assert (= (ite (and x871 x517 (not x173)) (x1350 x1016) (x333 x1016)) (x384 x1016)))
(assert (= (x244 x858) (ite (= x858 x145) x170 (x136 x858))))
(assert (x906 x141))
(assert (x906 x1336))
(assert (= (x1400 (x390 x300)) x300))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1400 (x516 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= (ite (= x669 x891) x938 (x1038 x669)) (x1037 x669)))
(assert (x906 x165))
(assert (x756 x27))
(assert (x906 x277))
(assert (x906 x530))
(assert (= x1385 (x1400 (x390 x1385))))
(assert (x906 x1092))
(assert (= (ite (= x931 x1104) x607 (x222 x1104)) (x1038 x1104)))
(assert (x906 x71))
(assert (x725 x1282 x184))
(assert (x906 x415))
(assert (= x75 (x1400 (x390 x75))))
(assert (= (and x181 x261) x1050))
(assert (= (ite (= x212 x891) x938 (x1038 x212)) (x1037 x212)))
(assert (x756 x1300))
(assert (=> (<= x154 10000) (= (x516 x154) (x390 x154))))
(assert (= (x424 x186) (ite (= x186 x535) x917 (x883 x186))))
(assert (x906 x804))
(assert (= (ite (= x845 x978) x50 (x424 x978)) (x14 x978)))
(assert (x906 x359))
(assert (x906 x635))
(assert (x906 x269))
(assert (= x141 (x1400 (x390 x141))))
(assert (= (ite (and x299 x984) (x244 x186) (x648 x186)) (x1455 x186)))
(assert (x906 x1348))
(assert (x756 x593))
(assert (x906 x241))
(assert (x756 x979))
(assert (= (=> (and (< 0 x597) (>= 1461501637330902918203684832716283019655932542975 x349) (= (x1459 (x390 274184521717934524641157099916833587206)) x597) (= (x753 (x390 x109) (x516 10) 0) x20) (< x404 468353030) (<= x675 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1302 x1361) x675) (>= x675 0) (= x404 69947311) (< x404 2293535753) (< x404 911411945) (= x115 x675) (= x1361 (x753 (x390 x349) x20 0))) (=> (and (= x115 x1257) (= x448 x62) (= 0 x846) (= x359 x1336) (= x257 x483) x409 (= x93 x1079) (= x213 (and x759 x1405)) (= x1405 (= x483 0)) (= x1257 x781) (= (= x781 0) x759) (= (>= x359 x956) x1223) (= (= 0 x93) x250) (= x956 x1079) (= (or (not x250) x213) x409) x1223 (= x1200 x269) (= 0 x904) (= 0 x1133) (= x859 x767)) x1277)) x1510))
(assert (x906 x1200))
(assert (x756 x489))
(assert (x756 x843))
(assert (=> (>= 10000 x45) (= (x390 x45) (x516 x45))))
(assert (x906 x1143))
(assert (x906 x159))
(assert (x906 x997))
(assert (= (ite (= x1016 x586) x1076 (x972 x1016)) (x883 x1016)))
(assert (= (x516 274184521717934524641157099916833587218) (x390 274184521717934524641157099916833587218)))
(assert (=> (<= x412 10000) (= (x516 x412) (x390 x412))))
(assert (x906 x497))
(assert (=> (<= x1053 10000) (= (x390 x1053) (x516 x1053))))
(assert (x906 x586))
(assert (x906 x262))
(assert (x756 x1348))
(assert (= (ite (and x1063 x214) (x1018 x127) (ite (and (not x214) x1062 x1063 (not x1066)) (x509 x127) (ite (and x1063 (not x214) (not x1062)) (x1018 x127) (x1087 x127)))) (x1450 x127)))
(assert (x756 x1367))
(assert (x756 x1068))
(assert (= x572 (x1400 (x390 x572))))
(assert (= (ite (= x442 x1273) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x1273)) (x972 x1273)))
(assert (= (ite (= x1305 x931) x607 (x222 x1305)) (x1038 x1305)))
(assert (=> (>= 10000 x908) (= (x516 x908) (x390 x908))))
(assert (x906 x1451))
(assert (x756 x391))
(assert (= (x1400 (x390 x177)) x177))
(assert (= (x1450 x669) (ite (and x1063 x214) (x1018 x669) (ite (and x1063 (not x214) (not x1066) x1062) (x509 x669) (ite (and (not x214) (not x1062) x1063) (x1018 x669) (x1087 x669))))))
(assert (= (=> (and (= (x753 (x390 x1443) x1195 0) x806) (= x793 (x912 x1276)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x793) (>= x793 0) (= x851 (= 0 x793)) (= x1276 (x753 (x390 x385) x806 0)) (= x1443 (x536 1461501637330902918203684832716283019655932542975 x497)) (= x1195 (x753 (x390 x1044) (x516 7) 0))) (and (=> (and (= (> x1444 0) x1410) x851 (not x1410) (= x1444 (x705 (- x1044 1)))) x831) (=> (and (= x180 x1044) (not x851)) x12))) x1376))
(assert (= (ite (and x984 x299) (x244 x746) (x648 x746)) (x1455 x746)))
(assert (x906 x938))
(assert (= (x390 2798343961) (x516 2798343961)))
(assert (=> (>= 10000 x1300) (= (x516 x1300) (x390 x1300))))
(assert (x906 x1173))
(assert (x906 x139))
(assert (= (x1037 x1273) (ite (= x1273 x891) x938 (x1038 x1273))))
(assert (x906 x291))
(assert (x906 x68))
(assert (= x124 (and x1503 x1050)))
(assert (x906 x747))
(assert (x906 x69))
(assert (x906 x597))
(assert (x906 x690))
(assert (= (ite (= x858 x442) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x858)) (x972 x858)))
(assert (x756 x819))
(assert (x906 x1457))
(assert (= (x1400 (x390 x659)) x659))
(assert (x756 x349))
(assert (x906 x206))
(assert (= x656 (x1400 (x390 x656))))
(assert (= (=> (= x376 x274) x522) x456))
(assert (=> (>= 10000 x873) (= (x516 x873) (x390 x873))))
(assert (x906 x111))
(assert (=> (>= 10000 x1252) (= (x390 x1252) (x516 x1252))))
(assert (x906 x381))
(assert (=> (>= 10000 x1203) (= (x516 x1203) (x390 x1203))))
(assert (x756 x936))
(assert (=> (>= 10000 x1275) (= (x516 x1275) (x390 x1275))))
(assert (= (x1059 x186) (ite (= x186 x1115) x348 (x430 x186))))
(assert (= (x1046 x1284) (ite (and x923 x260) (x1111 x1284) (ite (and x260 x619 (not x923)) (x1084 x1284) (x1418 x1284)))))
(assert (x906 x160))
(assert (x756 x385))
(assert (= (x1450 x212) (ite (and x214 x1063) (x1018 x212) (ite (and x1062 (not x1066) (not x214) x1063) (x509 x212) (ite (and (not x214) (not x1062) x1063) (x1018 x212) (x1087 x212))))))
(assert (= (x424 x127) (ite (= x127 x535) x917 (x883 x127))))
(assert (= x1293 (x1400 (x390 x1293))))
(assert (= x391 (x1400 (x390 x391))))
(assert (x906 x9))
(assert (= (x1400 (x516 2764855426)) 2764855426))
(assert (x906 x686))
(assert (x906 x1065))
(assert (= (ite (= x1104 x982) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x558 x1104)) (x171 x1104)))
(assert (= 1461501637330902918203684832716283019655932542975 (x1400 (x516 1461501637330902918203684832716283019655932542975))))
(assert (x906 x28))
(assert (x906 x1272))
(assert (x906 x598))
(assert (= (=> (and (= x1192 (= x1384 0)) (>= x1384 0) (= (x753 (x390 x1293) (x516 6) 0) x418) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1384) (= x380 (x753 (x390 x1239) x418 0)) (= (x536 1461501637330902918203684832716283019655932542975 x497) x1239) (= (x631 x380) x1384)) (and (=> (and (= (> x25 0) x742) x1192 (= (x705 (- x1293 1)) x25) (not x742)) x1271) (=> (and (not x1192) (= x274 x1293)) x456))) x787))
(assert (x906 x1194))
(assert (x756 x264))
(assert (= x825 (and x293 x1467)))
(assert (x906 x623))
(assert (x906 x358))
(assert (x906 x1383))
(assert (x906 x1089))
(assert (= (x1038 x1016) (ite (= x931 x1016) x607 (x222 x1016))))
(assert (x756 x1017))
(assert (x906 x931))
(assert (x906 x1483))
(assert (= (x1400 (x390 x102)) x102))
(assert (x906 x67))
(assert (= 649617121 (x1400 (x516 649617121))))
(assert (=> (<= x323 10000) (= (x390 x323) (x516 x323))))
(assert (x906 x286))
(assert (=> (<= x99 10000) (= (x516 x99) (x390 x99))))
(assert (= (x1400 (x390 x992)) x992))
(assert (x906 x347))
(assert (= (x1038 x212) (ite (= x212 x931) x607 (x222 x212))))
(assert (x906 x1463))
(assert (= (or (and x1424 x158) (and x11 (not x559)) (and x1050 (not x1503))) x1495))
(assert (x209 x1489))
(assert (=> (<= x1385 10000) (= (x390 x1385) (x516 x1385))))
(assert (x906 x1019))
(assert (= x427 x733))
(assert (= x389 (x1400 (x390 x389))))
(assert (= (ite (= x891 x858) x938 (x1038 x858)) (x1037 x858)))
(assert (= (ite (= x296 x145) x170 (x136 x296)) (x244 x296)))
(assert (x906 x557))
(assert (= (or x1495 x731) x707))
(assert (x906 x562))
(assert (= (ite (= x1140 x931) x607 (x222 x1140)) (x1038 x1140)))
(assert (=> (<= x1371 10000) (= (x390 x1371) (x516 x1371))))
(assert (x906 x911))
(assert (= (ite (= x1305 x786) x598 (x1362 x1305)) (x1018 x1305)))
(assert (x906 x1295))
(assert (=> (<= x780 10000) (= (x390 x780) (x516 x780))))
(assert (= (x1038 x891) (ite (= x931 x891) x607 (x222 x891))))
(assert (=> (>= 10000 x1507) (= (x390 x1507) (x516 x1507))))
(assert (= x970 (x1400 (x390 x970))))
(assert (= 18446744073709551615 (x1400 (x516 18446744073709551615))))
(assert (= (ite (= x800 x145) x521 (x1018 x145)) (x509 x145)))
(assert (= (ite (and x299 x984) (x244 x159) (x648 x159)) (x1455 x159)))
(assert (= (x972 x127) (ite (= x127 x442) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x127))))
(assert (x906 x45))
(assert (= x525 x56))
(assert (= x1380 (=> (and (or (and (= x569 0) (= 0 x1089) x578) (and (>= x1206 0) (<= x1206 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1206 (x1227 x476)) (= x338 (x753 (x390 x654) (x516 9) 0)) (= (x536 1461501637330902918203684832716283019655932542975 x497) x44) (= x550 (x753 (x390 x44) x338 0)) (= x476 (x753 (x390 x385) x550 0)) (= x1206 x569) (not x578) (= x1089 1))) (= x578 (= x654 0))) x1101)))
(assert (= x1435 x508))
(assert (x756 x575))
(assert (= (x509 x186) (ite (= x800 x186) x521 (x1018 x186))))
(assert (x756 x207))
(assert (= x1378 (x1400 (x390 x1378))))
(assert (= (ite (= x786 x523) x598 (x1362 x523)) (x1018 x523)))
(assert (= x306 (=> (= (> x141 x334) x142) (and (=> (not x142) x817) (=> (and x142 (= x1172 x809)) x577)))))
(assert (x906 x1219))
(assert (x906 x1203))
(assert (=> (>= 10000 x334) (= (x390 x334) (x516 x334))))
(assert (x756 x1007))
(assert (x756 x1452))
(assert (=> (>= 10000 x349) (= (x390 x349) (x516 x349))))
(assert (x906 x435))
(assert (x906 x553))
(assert (x906 x760))
(assert (x906 x1094))
(assert (x906 x845))
(assert (x906 x1239))
(assert (x756 x75))
(assert (x756 x992))
(assert (x756 x453))
(assert (= x1386 (=> (and x254 (= (x571 (x390 x1520)) x298) (= x1229 (= 0 x493)) (= (x895 (x390 274184521717934524641157099916833587206)) x140) (= x254 (< (x895 (x390 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x848 0) x740) (= x848 (x770 x858)) (or (not x740) (and (= x978 (x243 (+ x858 32))) (= x1219 (x770 x978)) (< 0 x1219) (= x1255 (not x130)) (= x1219 x70) (= (= x1219 0) x130) x740 (not (or (> x1353 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1353 32) (= true (<= x1353 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (ite x1255 1 0) x70) (= x1353 (x770 x858)))) (not (= 0 x543)) (or (and (not x1229) (= x827 (x536 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1272)) (= x1015 x858) (= x1272 (x243 (+ 63 x493))) (= x1315 x69) (= x682 (x243 (+ x1152 96))) (= x69 (x243 (+ x1015 x827)))) (and x1229 (= x1315 x1015) (= x858 96)))) x112)))
(assert (x756 x389))
(assert (x756 x1507))
(assert (x906 x97))
(assert (= (ite (= x212 x145) x170 (x136 x212)) (x244 x212)))
(assert (x906 x1240))
(assert (= (x1400 (x390 x154)) x154))
(assert (=> (<= x1242 10000) (= (x516 x1242) (x390 x1242))))
(assert true)
(assert (= (x340 x1016) (ite (and x633 x464) (x1298 x1016) (x872 x1016))))
(assert (x906 x305))
(assert (x906 x630))
(assert (x906 x908))
(assert (x906 x717))
(assert (= (ite (= x499 x535) x917 (x883 x499)) (x424 x499)))
(assert (= (ite (= x442 x186) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x186)) (x972 x186)))
(assert (= (x588 x484) (ite (and x260 x923) (x614 x484) (ite (and x619 (not x923) x260) (x614 x484) (x795 x484)))))
(assert (= (x883 x978) (ite (= x586 x978) x1076 (x972 x978))))
(assert (=> (<= x724 10000) (= (x390 x724) (x516 x724))))
(assert (x906 x1442))
(assert (=> (<= x716 10000) (= (x516 x716) (x390 x716))))
(assert (= (x972 x667) (ite (= x442 x667) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x667))))
(assert (= (x1400 (x390 x596)) x596))
(assert (= (x390 69947311) (x516 69947311)))
(assert (x756 x373))
(assert (x906 x681))
(assert (= x313 (or x1216 x1478)))
(assert (x906 x570))
(assert (x906 x322))
(assert (x906 x544))
(assert (= x260 (or x749 (and x1404 x918))))
(assert (= (=> (= x658 (= x1520 274184521717934524641157099916833587214)) (and (=> (not x658) x193) (=> (and (= x64 x386) (<= x532 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 68 x386) (not x196) (= 1 x543) (= x739 x532) (= x275 (> x1107 x1086)) (not x744) (not (< x1240 649617121)) (not (= x1240 826074471)) (= (x705 (- x1086 x507)) x537) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1086) (not x398) (= x1240 2835717307) x658 (not (= 2514000705 x1240)) (= x421 (x536 1461501637330902918203684832716283019655932542975 x1304)) (>= 1461501637330902918203684832716283019655932542975 x1304) (>= x532 0) (= (or (> x317 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x317) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x317)))) x196) (= x1107 x507) (= x589 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 649617121 x1240)) (not x275) (= x40 x1268) (= (x753 (x390 274184521717934524641157099916833587206) (x516 1) 0) x910) (= x197 x507) (= x317 (x705 (- x386 4))) (= x816 (x753 (x390 274184521717934524641157099916833587206) (x516 1) 0)) (= x1086 (x202 x910)) (= (x410 x1396) x532) (= 32 x493) (= (+ x739 x1181) x329) (= x398 (< x1086 x507)) (= x350 x1304) (not (= x1240 1889567281)) (= (x1459 (x390 274184521717934524641157099916833587214)) x1363) (= (x536 1461501637330902918203684832716283019655932542975 x1304) x1281) (not (< x386 4)) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x532 x1107)) x744) (= x758 (x753 (x390 x421) (x516 1) 0)) (= 274184521717934524641157099916833587206 x362) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x532 x1107)) (>= x1086 0) (= x116 274184521717934524641157099916833587206) (< 0 x1363) (= x1181 x1107) (= x1396 (x753 (x390 x1281) (x516 1) 0))) x1386))) x735))
(assert (= (x516 759532456) (x390 759532456)))
(assert (x906 x49))
(assert (= x261 x1505))
(assert (x906 x98))
(assert (x906 x1387))
(assert (x209 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (=> (<= x44 10000) (= (x516 x44) (x390 x44))))
(assert (= (ite (= x145 x978) x170 (x136 x978)) (x244 x978)))
(assert (x906 x135))
(assert (= (x883 x127) (ite (= x586 x127) x1076 (x972 x127))))
(assert (=> (<= x206 10000) (= (x390 x206) (x516 x206))))
(assert (x756 x1451))
(assert (x906 x587))
(assert (= x592 (x1400 (x390 x592))))
(assert (x906 x1029))
(assert (x906 x453))
(assert (x906 x1033))
(assert (= (x972 x978) (ite (= x978 x442) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x978))))
(assert (x756 x269))
(assert (= (ite (= x891 x746) x938 (x1038 x746)) (x1037 x746)))
(assert (= (x1400 (x390 x1008)) x1008))
(assert (x906 x499))
(assert (x906 x317))
(assert (x906 x1371))
(assert (=> (>= 10000 x453) (= (x390 x453) (x516 x453))))
(assert (x906 x78))
(assert (x906 x1330))
(assert (x906 x489))
(assert (x725 x367 x19))
(assert (x906 x1481))
(assert (x906 x375))
(assert (x725 x985 x1440))
(assert (= (x1400 (x390 x811)) x811))
(assert (x906 x854))
(assert (x906 x877))
(assert (x756 x270))
(assert (x906 x1016))
(assert (= (x1038 x978) (ite (= x978 x931) x607 (x222 x978))))
(assert (=> (<= x1007 10000) (= (x516 x1007) (x390 x1007))))
(assert (=> (<= x75 10000) (= (x390 x75) (x516 x75))))
(assert (x906 x1013))
(assert (= (x340 x858) (ite (and x633 x464) (x1298 x858) (x872 x858))))
(assert (x906 x127))
(assert (= (ite (and x984 x299) (x244 x499) (x648 x499)) (x1455 x499)))
(assert (x906 x1439))
(assert (= x1044 (x1400 (x390 x1044))))
(assert (= (x244 x1273) (ite (= x145 x1273) x170 (x136 x1273))))
(assert (x906 x1327))
(assert (= x23 (=> (and (= (x1046 x1284) x579) (= (x753 (x390 x724) (x516 7) 0) x1027) (= (x753 (x390 x385) x1074 0) x1284) (= x438 (= x579 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x579) (= x828 (x536 1461501637330902918203684832716283019655932542975 x497)) (= (x753 (x390 x828) x1027 0) x1074) (<= 0 x579)) (and (=> (and (= x724 x1258) (not x438)) x899) (=> x438 x477)))))
(assert (= (x1400 (x390 x1367)) x1367))
(assert (x906 x1444))
(assert (= (ite (and x299 x984) (x244 x858) (x648 x858)) (x1455 x858)))
(assert (x906 x846))
(assert (= (x1400 (x272 x1469 1)) (+ (x1400 x1469) 1)))
(assert (= (x14 x1104) (ite (= x1104 x845) x50 (x424 x1104))))
(assert (= (ite (and x1467 x293 (not x1144)) (x945 x1104) (x1421 x1104)) (x713 x1104)))
(assert (x906 x1112))
(assert (= x1026 (=> (= x107 (< 0 x724)) (and (=> x107 x23) (=> (not x107) x1372)))))
(assert (= (ite (and x984 x299) (x244 x800) (x648 x800)) (x1455 x800)))
(assert (= (x588 x975) (ite (and x923 x260) (x614 x975) (ite (and x260 x619 (not x923)) (x614 x975) (x795 x975)))))
(assert (= (ite (and x984 x299) (x244 x1104) (x648 x1104)) (x1455 x1104)))
(assert (= (x1400 (x390 x1019)) x1019))
(assert (= x716 (x1400 (x390 x716))))
(assert (x906 x693))
(assert (= (x791 x296) 0))
(assert (x906 x809))
(assert (= x1392 (=> (and (= x520 (= x902 0)) (= (x753 (x390 x1441) x407 0) x784) (= x971 (x753 (x390 x1345) x1516 0)) (= x1516 (x753 (x390 x724) (x516 6) 0)) (= x1329 (x753 (x390 x724) (x516 1) 0)) (<= 0 x394) (= (x118 x971) x771) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x394) (= x1119 (> x1261 x771)) (= (x243 (+ x122 64)) x712) (= x1413 (x272 x1329 1)) (= (x355 x484) x1504) (<= 0 x771) (= x936 (x536 1461501637330902918203684832716283019655932542975 x497)) (= (x536 1461501637330902918203684832716283019655932542975 x497) x1441) (= (x1038 x931) x1261) (or (and (= (x753 (x390 x724) (x516 10) 0) x405) (not x1359) (= x1367 (x536 1461501637330902918203684832716283019655932542975 x497)) (= (x753 (x390 x1367) x405 0) x328)) x1359) (<= x771 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= x1173 x966) (= (x243 (+ x724 1)) x966) x1025) (and (= (x536 x343 x852) x479) (= x462 (div x77 x241)) (= x353 (> x170 0)) (= x1211 (x243 (+ 1 x724))) (= x77 (mod (* 1000000000000000000 x1504) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (> x1504 115792089237316195423570985008687907853269984665640564039457) 1 0) x852) (= 1 x343) (not x1025) (or (not x353) (and (= (x536 1461501637330902918203684832716283019655932542975 x497) x1265) (= (x753 (x390 x206) x255 0) x533) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x595) (= (x753 (x390 x1378) x1010 0) x691) (= (x536 1461501637330902918203684832716283019655932542975 x497) x206) (= x1234 x352) (= (x753 (x390 x75) x533 0) x1320) (>= x235 0) (= x891 (x243 (+ 160 x1383))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x235) (= x1332 (* x235 x462)) (< 0 x170) (= x1354 x282) (= 0 x595) (= x1488 (x1038 x891)) (or (and (= x1042 (x8 x1263)) (< (* x462 x1042) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x803 x139) x873) (= x326 (> x170 2)) x413 (= x970 (x536 1461501637330902918203684832716283019655932542975 x497)) (not x326) (= x1065 0) (= (x803 x139) x156) (= x139 (x243 (+ 64 x672))) (< (+ x514 x965) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x170 1) (= x965 x1157) (= x531 (x1037 x145)) (< 1 x170) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1065) (= x391 (x536 1461501637330902918203684832716283019655932542975 x497)) (= x1460 (+ x1157 x90)) (= x314 (x753 (x390 x391) x874 0)) (= (div x172 1000000000000000000) x965) (= x1305 (x243 (+ x1383 192))) (= (x1037 x1305) x514) (= (x753 (x390 x385) x314 0) x1250) (= x90 x514) (<= 0 x1042) (<= x156 1461501637330902918203684832716283019655932542975) (= (x753 (x390 x873) x279 0) x1263) (= x874 (x753 (x390 x724) (x516 4) 0)) (= x1182 (x753 (x390 x156) x1250 0)) (= x1065 (x581 x1182)) (<= 0 x1065) (= (x753 (x390 x724) (x516 11) 0) x1343) (= (* x462 x1042) x172) (> x531 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1042) (>= 1461501637330902918203684832716283019655932542975 x873) (= x279 (x753 (x390 x970) x1343 0))) (not x413)) (= x290 (x753 (x390 x724) (x516 4) 0)) (= (x803 x352) x1378) (= x595 (x581 x691)) (< 0 x170) (= x413 (< 1 x170)) (= x590 (x753 (x390 x1265) x290 0)) (= (x8 x1320) x235) (= x1093 x1488) (= x255 (x753 (x390 x724) (x516 11) 0)) (= x282 (div x1332 1000000000000000000)) (= x75 (x803 x352)) (= (+ x1093 x1354) x938) (>= 1461501637330902918203684832716283019655932542975 x1378) (< (+ x282 x1488) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x75 1461501637330902918203684832716283019655932542975) (= (x753 (x390 x385) x590 0) x1010) (< (* x462 x235) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x353 (= (x1038 x145) x1425) (>= x595 0) (< 0 x1425))) (= x1173 x1211) (= 0 x479) (< 0 x241))) (or (and (or (and (= x902 x10) x1346 (not (< x947 x585)) (= x585 (x1038 x122)) (= x10 (x705 (- x947 x585)))) (and (= x812 (ite (> 604800 x625) x625 604800)) (= x902 x812) (not (< x947 x771)) (= 604800 x465) (= (x705 (- x947 x771)) x625) (not x1346))) (= (x1038 x931) x976) x1119 (or (and (= x947 x1336) (not x565)) (and x565 (= x947 x722) (= (x1038 x931) x722))) (= x1346 (= 0 x771)) (= x565 (< x976 x1336))) (and (= 0 x902) (not x1119))) (<= 0 x607) (< x1327 x1173) (= (x536 1461501637330902918203684832716283019655932542975 x497) x1345) (<= x607 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1504) (>= x241 0) (= x407 (x753 (x390 x724) (x516 3) 0)) (= x607 (x276 x1413)) (= (x243 (+ x122 32)) x931) (= x484 (x753 (x390 x385) x784 0)) (= (= 0 x1504) x1025) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x241) (= x1172 x712) (>= x1504 0) (= (x664 x1329) x394) (= x1359 (= 0 x344)) (= x1267 (x753 (x390 x724) (x516 5) 0)) (= (x753 (x390 x936) x1267 0) x1366) (= x241 (x162 x1366)) (or (and (= x1150 (x753 (x390 x724) (x516 5) 0)) (= x443 x330) (= (x753 (x390 x724) (x516 6) 0) x229) (= (x536 1461501637330902918203684832716283019655932542975 x497) x432) (< (* x902 x1103) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1055 (x536 1461501637330902918203684832716283019655932542975 x497)) (= x790 (x753 (x390 x1055) x229 0)) (= (x753 (x390 x432) x1150 0) x1368) (= (* x1103 x902) x443) (not x520)) (and (= (x753 (x390 x724) (x516 6) 0) x632) x520 (= (x536 1461501637330902918203684832716283019655932542975 x497) x1196) (= x1431 (x753 (x390 x1196) x632 0))))) x577)))
(assert (x906 x1381))
(assert (x906 x669))
(assert (x906 x555))
(assert (= (x384 x1140) (ite (and x517 x871 (not x173)) (x1350 x1140) (x333 x1140))))
(assert (x756 x156))
(assert (= (x1350 x499) (ite (and x608 x153 x871 (not x1201) x242 x517) (x14 x499) (ite (and x517 x608 (not x153) x242 x871) (x424 x499) (ite (and (not x242) x608 x871 x517) (x883 x499) (ite (and x517 (not x608) x871) (x972 x499) (x685 x499)))))))
(assert (x906 x549))
(assert (= (ite (and x214 x1063) (x1018 x891) (ite (and (not x1066) x1063 (not x214) x1062) (x509 x891) (ite (and (not x1062) x1063 (not x214)) (x1018 x891) (x1087 x891)))) (x1450 x891)))
(assert (= (x1350 x145) (ite (and x242 x871 (not x1201) x517 x608 x153) (x14 x145) (ite (and (not x153) x517 x242 x608 x871) (x424 x145) (ite (and x608 x871 x517 (not x242)) (x883 x145) (ite (and (not x608) x517 x871) (x972 x145) (x685 x145)))))))
(assert (= x200 (x1400 (x390 x200))))
(assert (x756 x500))
(assert (= (x791 x1033) 0))
(assert (=> (<= x175 10000) (= (x516 x175) (x390 x175))))
(assert (= (x516 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x390 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (x1400 (x390 x1017)) x1017))
(assert (x906 x609))
(assert (x756 x656))
(assert (= (ite (= x499 x845) x50 (x424 x499)) (x14 x499)))
(assert (x906 x563))
(assert (x906 x1322))
(assert (= x3 (x1400 (x390 x3))))
(assert (= (x390 635128645) (x516 635128645)))
(assert (= (ite (= x212 x786) x598 (x1362 x212)) (x1018 x212)))
(assert (= (and x438 x820) x1498))
(assert (x906 x170))
(assert (x756 x1008))
(assert (x906 x828))
(assert (x906 x763))
(assert (x906 x1197))
(assert (=> (<= x1345 10000) (= (x390 x1345) (x516 x1345))))
(assert (= (ite (= x667 x800) x521 (x1018 x667)) (x509 x667)))
(assert (= x1075 (=> (and (<= x264 1461501637330902918203684832716283019655932542975) (not (= x1088 635128645)) (> x1127 0) (= (x117 x406) x1143) (>= x1143 0) (= x840 (x753 (x390 x264) x337 0)) (>= 1461501637330902918203684832716283019655932542975 x489) (<= x1143 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 759532456 x1088) (not (= x1088 468353030)) (< x1088 2293535753) (= x406 (x753 (x390 x489) x840 0)) (> 911411945 x1088) (not (> 468353030 x1088)) (= x693 x1143) (= (x1459 (x390 274184521717934524641157099916833587206)) x1127) (= x337 (x753 (x390 x373) (x516 7) 0))) (=> (and (= x62 x1053) (= x924 x1200) (= x890 x693) (= x859 x27)) x774))))
(assert (= (x1038 x746) (ite (= x931 x746) x607 (x222 x746))))
(assert (= (x1400 (x390 x575)) x575))
(assert (x906 x1231))
(assert (x906 x283))
(assert (= (x516 274184521717934524641157099916833587206) (x390 274184521717934524641157099916833587206)))
(assert (x906 x1172))
(assert (x906 x327))
(assert (x756 x783))
(assert (=> (>= 10000 x811) (= (x390 x811) (x516 x811))))
(assert (= x1254 x893))
(assert (x906 x174))
(assert (x906 x1241))
(assert (x906 x596))
(assert (x906 x391))
(assert (= (x390 2690754053) (x516 2690754053)))
(assert (x906 x676))
(assert (x906 x362))
(assert (x756 x724))
(assert (x906 x1406))
(assert (= (ite (and x214 x1063) (x1018 x1016) (ite (and (not x214) x1063 (not x1066) x1062) (x509 x1016) (ite (and (not x214) (not x1062) x1063) (x1018 x1016) (x1087 x1016)))) (x1450 x1016)))
(assert (x906 x1015))
(assert (= (x390 142201243) (x516 142201243)))
(assert (x906 x47))
(assert (= (=> (= x1429 (> x141 0)) (and (=> (not x1429) x831) (=> x1429 x94))) x776))
(assert (= (or (and x621 x1494) (and x131 x825)) x1480))
(assert (x906 x1152))
(assert (= x259 (x1400 (x390 x259))))
(assert (x906 x697))
(assert (= (x1450 x1140) (ite (and x1063 x214) (x1018 x1140) (ite (and x1063 x1062 (not x214) (not x1066)) (x509 x1140) (ite (and x1063 (not x214) (not x1062)) (x1018 x1140) (x1087 x1140))))))
(assert (=> (<= x65 10000) (= (x390 x65) (x516 x65))))
(assert (= (x1400 (x390 x1348)) x1348))
(assert (x209 x985))
(assert (x906 x552))
(assert (= 0 (x791 x978)))
(assert (= x548 true))
(assert (= (x516 911411945) (x390 911411945)))
(assert (x906 x660))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x596) (= x922 2743102681) (= (x753 (x390 x1507) x331 0) x892) (= (x753 (x390 x596) x892 0) x1337) (not (< x922 2690754053)) (= x600 (x1459 (x390 274184521717934524641157099916833587206))) (not (= x922 2690754053)) (= (x610 x1337) x562) (= x331 (x753 (x390 x1019) (x516 3) 0)) (< 0 x600) (not (< x922 2293535753)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x562) (<= x1507 1461501637330902918203684832716283019655932542975) (< x922 2960351575) (= x907 x562) (>= x562 0)) (=> (and (= x907 x637) (= x62 x154) (= x1200 x1275) (= x859 x716) (= x1235 x1241)) x797)) x1370))
(assert (x906 x834))
(assert (= x193 true))
(assert (x906 x1398))
(assert (= (ite (and (not x173) x871 x517) (x1350 x296) (x333 x296)) (x384 x296)))
(assert (= (x1400 (x390 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (= (ite (and x260 x923) (x1111 x57) (ite (and x619 (not x923) x260) (x1084 x57) (x1418 x57))) (x1046 x57)))
(assert (x906 x180))
(assert (=> (<= x593 10000) (= (x390 x593) (x516 x593))))
(assert (= x11 (and x124 x103)))
(assert (= 604800 (x1400 (x516 604800))))
(assert (x906 x1057))
(assert (= (x340 x145) (ite (and x464 x633) (x1298 x145) (x872 x145))))
(assert (= x1081 (and x1058 x876)))
(assert (x906 x579))
(assert (= x227 (=> (= x207 x233) x863)))
(assert (= (x1455 x212) (ite (and x299 x984) (x244 x212) (x648 x212))))
(assert (x906 x257))
(assert (= 274184521717934524641157099916833587218 (x1400 (x516 274184521717934524641157099916833587218))))
(assert (x906 x493))
(assert (= (ite (and x984 x299) (x244 x978) (x648 x978)) (x1455 x978)))
(assert (x906 x156))
(assert (x906 x682))
(assert (x906 x514))
(assert (= (x1038 x623) (ite (= x931 x623) x607 (x222 x623))))
(assert (= x624 (=> (and (= x657 (x753 (x390 x908) (x516 6) 0)) (<= 0 x1170) (= (x118 x73) x1170) (= (x753 (x390 x174) x657 0) x73) (= x174 (x536 1461501637330902918203684832716283019655932542975 x497)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1170) (= (= 0 x1170) x158)) (and (=> (and (= (x705 (- x908 1)) x1110) x158 (= x1155 (> x1110 0)) (not x1155)) x1447) (=> (and (not x158) (= x233 x908)) x227)))))
(assert (= (x1450 x296) (ite (and x1063 x214) (x1018 x296) (ite (and x1063 (not x214) x1062 (not x1066)) (x509 x296) (ite (and (not x1062) (not x214) x1063) (x1018 x296) (x1087 x296))))))
(assert (= (=> (and (= x1200 x412) (= x687 x62)) x1287) x897))
(assert (x906 x741))
(assert (= (ite (= x1033 x535) x917 (x883 x1033)) (x424 x1033)))
(assert (x906 x1266))
(assert (x906 x716))
(assert (= 0 (x791 224)))
(assert (x906 x1086))
(assert (= (and x1394 x1498) x351))
(assert (x906 x989))
(assert (x906 x1275))
(assert (= x500 (x1400 (x390 x500))))
(assert (= x323 (x1400 (x390 x323))))
(assert (= (x390 2061678023) (x516 2061678023)))
(assert (= (=> (and (> 2293535753 x801) (< x801 468353030) (= x580 x284) (< 0 x199) (>= x284 0) (= 69947311 x801) (< x801 911411945) (<= x284 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x311) (= (x753 (x390 x126) (x516 10) 0) x1221) (= x495 (x753 (x390 x311) x1221 0)) (= (x734 x495) x284) (= x199 (x1459 (x390 274184521717934524641157099916833587206)))) (=> (and (= x62 x373) (= x580 x1398) (= x264 x1200) (= x859 x489)) x1075)) x441))
(assert (= x525 x218))
(assert (x906 x421))
(assert (= (x1400 (x390 x1196)) x1196))
(assert (= (x1455 x145) (ite (and x299 x984) (x244 x145) (x648 x145))))
(assert (= (x972 x1033) (ite (= x442 x1033) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x1033))))
(assert (x756 x1251))
(assert (x906 x187))
(assert (= (x390 87118632) (x516 87118632)))
(assert (x756 x44))
(assert (x906 x625))
(assert (x756 x654))
(assert (x906 x1299))
(assert (x906 x582))
(assert (= x828 (x1400 (x390 x828))))
(assert (x906 x75))
(assert (= (ite (= x1273 x786) x598 (x1362 x1273)) (x1018 x1273)))
(assert (= (x390 26959946667150639794667015087019630673637144422540572481103610249215) (x516 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= x72 (=> (and (= x760 x661) (= (< 0 (x1459 (x390 274184521717934524641157099916833587206))) x1078) x188 (= x65 x1200) (<= 0 x886) (= 4 x471) (= (> (x1459 (x390 274184521717934524641157099916833587214)) 0) x490) (= x1102 false) (>= 1461501637330902918203684832716283019655932542975 x1200) (>= x236 0) x490 (= x996 (x1248 (x390 274184521717934524641157099916833587214))) (= false x1316) (= (x1248 (x390 274184521717934524641157099916833587218)) x1147) (>= 1461501637330902918203684832716283019655932542975 x1241) (= x188 (< 0 (x1459 (x390 274184521717934524641157099916833587218)))) (>= 1461501637330902918203684832716283019655932542975 x859) x1078 (= (x1248 (x390 274184521717934524641157099916833587206)) x886) (= false x91) (<= x236 1461501637330902918203684832716283019655932542975) (<= 0 x1241) (>= x760 0) (= false x402) (= x236 x385) (= x819 x62) (<= x760 1461501637330902918203684832716283019655932542975) (>= x1200 0) (>= x859 0) (>= x1147 0) (<= 0 x996) (= x277 87118632)) x943)))
(assert (= x918 (and x1237 (not x142))))
(assert (x906 x1147))
(assert (= (x1059 x296) (ite (= x296 x1115) x348 (x430 x296))))
(assert (x906 x850))
(assert (x906 x223))
(assert (x756 x687))
(assert (= x400 (or (and x293 (not x1467)) x1480 (and x517 (not x871)))))
(assert (x756 x1285))
(assert (= 0 (x791 x667)))
(assert (= (ite (= x786 x1016) x598 (x1362 x1016)) (x1018 x1016)))
(assert (x906 x335))
(assert (= x293 x1198))
(assert (x756 x518))
(assert (= x1371 (x1400 (x390 x1371))))
(assert (= x908 (x1400 (x390 x908))))
(assert (x756 274184521717934524641157099916833587218))
(assert (x906 x1436))
(assert (x906 x1473))
(assert (x906 x1235))
(assert (= (+ (x1400 x1329) 1) (x1400 (x272 x1329 1))))
(assert (=> (<= x596 10000) (= (x516 x596) (x390 x596))))
(assert (= (ite (= x891 x623) x938 (x1038 x623)) (x1037 x623)))
(assert (x906 x1011))
(assert (x906 x679))
(assert (= (x1400 (x390 x1)) x1))
(assert (= (or (and x361 (not x879)) x313) x1063))
(assert (x906 x186))
(assert (= (x509 x1140) (ite (= x1140 x800) x521 (x1018 x1140))))
(assert (= x218 x508))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1400 (x516 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x906 x403))
(assert (x906 x1243))
(assert (= (x14 x746) (ite (= x845 x746) x50 (x424 x746))))
(assert (x906 x1270))
(assert (x906 x1434))
(assert (x756 x177))
(assert (= x1053 (x1400 (x390 x1053))))
(assert (x906 x694))
(assert (= (x1059 x1104) (ite (= x1104 x1115) x348 (x430 x1104))))
(assert (x906 x1129))
(assert (x906 x1141))
(assert (x906 x1289))
(assert (x756 x1199))
(assert (=> (>= 10000 x1123) (= (x516 x1123) (x390 x1123))))
(assert (x756 x1196))
(assert (= (x1400 (x390 x156)) x156))
(assert (= (x390 2960351575) (x516 2960351575)))
(assert (=> (<= x572 10000) (= (x516 x572) (x390 x572))))
(assert (= (ite (= x1140 x442) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x1140)) (x972 x1140)))
(assert (= (x883 x1104) (ite (= x586 x1104) x1076 (x972 x1104))))
(assert (x906 x377))
(assert (x906 x1438))
(assert (=> (<= x1281 10000) (= (x390 x1281) (x516 x1281))))
(assert (= (or (and (not x773) x1423) (and (not x1192) x46)) x1478))
(assert (x756 x1508))
(assert (x248 x747 x457))
(assert (x756 x1441))
(assert (=> (>= 10000 x1285) (= (x516 x1285) (x390 x1285))))
(assert (= x820 (and x107 x556)))
(assert (x906 x936))
(assert (= x1225 (x1400 (x390 x1225))))
(assert (= (x972 x1172) (ite (= x442 x1172) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x1172))))
(assert (= (x713 x186) (ite (and x293 x1467 (not x1144)) (x945 x186) (x1421 x186))))
(assert (=> (<= x992 10000) (= (x390 x992) (x516 x992))))
(assert (x209 x452))
(assert (= (x1455 x623) (ite (and x299 x984) (x244 x623) (x648 x623))))
(assert (x209 x251))
(assert (= (x244 x145) x170))
(assert (x906 x122))
(assert (= (x171 x212) (ite (= x982 x212) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x558 x212))))
(assert (x906 x386))
(assert (x906 x627))
(assert (x756 x259))
(assert (= (=> (= x654 0) x1380) x831))
(assert (= (x1180 x186) (ite (and x131 x825) (x942 x186) (x256 x186))))
(assert (x906 x447))
(assert (x906 x330))
(assert (= x1518 (x1400 (x390 x1518))))
(assert (x906 x607))
(assert (x906 x1281))
(assert (= (x509 x1016) (ite (= x1016 x800) x521 (x1018 x1016))))
(assert (x906 x1300))
(assert (x906 x888))
(assert (x906 x1504))
(assert (=> (<= x489 10000) (= (x516 x489) (x390 x489))))
(assert (=> (<= x1239 10000) (= (x390 x1239) (x516 x1239))))
(assert (x209 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (<= x828 10000) (= (x516 x828) (x390 x828))))
(assert (x906 x140))
(assert (= (ite (and x260 x991) (x1227 x148) (x1228 x148)) (x176 x148)))
(assert (=> (<= x1378 10000) (= (x390 x1378) (x516 x1378))))
(assert (x906 x947))
(assert (=> (>= 10000 x1452) (= (x390 x1452) (x516 x1452))))
(assert (x209 x1082))
(assert (= (=> (and (> 2960351575 x283) (<= 0 x1286) (= x1286 x1001) (not (= x283 2743102681)) (not (< x283 2690754053)) (not (> 2293535753 x283)) (= x1035 (x753 (x390 x66) (x516 5) 0)) (> x1153 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1286) (<= x1242 1461501637330902918203684832716283019655932542975) (not (= 2690754053 x283)) (= (x814 x1090) x1286) (= x1090 (x753 (x390 x1242) x1035 0)) (= x1153 (x1459 (x390 274184521717934524641157099916833587206))) (= 2798343961 x283) (not (= 2764855426 x283))) (=> (and (= x62 x126) (= x311 x1200) (= x1001 x1481)) x441)) x1215))
(assert (= (x509 x127) (ite (= x800 x127) x521 (x1018 x127))))
(assert (x906 x376))
(assert (x906 x898))
(assert (x906 x856))
(assert (x906 x1156))
(assert (x906 x34))
(assert (x906 x848))
(assert (x906 x1411))
(assert (= x1174 (x1400 (x390 x1174))))
(assert (x906 x462))
(assert (x906 x1304))
(assert (x906 x432))
(assert (x906 x767))
(assert (x756 x1019))
(assert (= (x1400 (x516 2798343961)) 2798343961))
(assert (x756 x716))
(assert (= 274184521717934524641157099916833587218 (x1400 (x390 274184521717934524641157099916833587218))))
(assert (= (ite (= x931 x667) x607 (x222 x667)) (x1038 x667)))
(assert (x906 x995))
(assert (x906 x569))
(assert (= (ite (and x871 (not x173) x517) (x1350 x978) (x333 x978)) (x384 x978)))
(assert (x906 x604))
(assert (= (x390 604800) (x516 604800)))
(assert (= (x244 x1305) (ite (= x1305 x145) x170 (x136 x1305))))
(assert (x906 x1128))
(assert (x906 x819))
(assert (= (x1400 (x390 x78)) x78))
(assert (x756 x154))
(assert (x756 x1242))
(assert (=> (>= 10000 x1518) (= (x390 x1518) (x516 x1518))))
(assert (x906 x1518))
(assert (x906 x746))
(assert (x906 x924))
(assert (= (x1400 (x390 x1203)) x1203))
(assert (x906 x542))
(assert (x906 x905))
(assert (x906 x568))
(assert (x906 x175))
(assert (= (x390 2532887486) (x516 2532887486)))
(assert (= (x390 1986467848) (x516 1986467848)))
(assert (= x522 (=> (and (= (= 0 x376) x123) (or (and (= x295 (= x554 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x554) (not x123) (= (x1302 x1313) x554) (= (x753 (x390 x376) (x516 10) 0) x1014) (or (and (= 1 x1381) (not x295) (= x1129 x554)) (and (= x1381 0) (= 0 x1129) x295)) (= x1313 (x753 (x390 x572) x1014 0)) (<= 0 x554) (= (x536 1461501637330902918203684832716283019655932542975 x497) x572)) (and (= x1129 0) (= 0 x1381) x123))) x1487)))
(assert (= (ite (and x1063 x214) (x1018 x978) (ite (and x1062 (not x214) (not x1066) x1063) (x509 x978) (ite (and x1063 (not x214) (not x1062)) (x1018 x978) (x1087 x978)))) (x1450 x978)))
(assert (x906 x452))
(assert (x906 x65))
(assert (= x1123 (x1400 (x390 x1123))))
(assert (x906 x531))
(assert (=> (>= 10000 x230) (= (x390 x230) (x516 x230))))
(assert (x209 x497))
(assert (= (x384 x858) (ite (and (not x173) x517 x871) (x1350 x858) (x333 x858))))
(assert (= (x244 x1016) (ite (= x145 x1016) x170 (x136 x1016))))
(assert (x906 x653))
(assert (x906 x1206))
(assert (x756 x1265))
(assert (= x400 x427))
(assert (x906 x712))
(assert (= (ite (= x1140 x845) x50 (x424 x1140)) (x14 x1140)))
(assert (= (x1400 (x390 x783)) x783))
(assert (=> (<= x259 10000) (= (x516 x259) (x390 x259))))
(assert (x906 x311))
(assert (x906 x992))
(assert (x756 x873))
(assert (x906 x29))
(assert (=> (<= x1017 10000) (= (x390 x1017) (x516 x1017))))
(assert (= (x424 x212) (ite (= x535 x212) x917 (x883 x212))))
(assert (x906 x1251))
(assert (x756 x65))
(assert (x906 x323))
(assert (= (ite (and x1063 x214) (x1018 x667) (ite (and (not x214) x1062 x1063 (not x1066)) (x509 x667) (ite (and x1063 (not x214) (not x1062)) (x1018 x667) (x1087 x667)))) (x1450 x667)))
(assert (=> (<= x654 10000) (= (x516 x654) (x390 x654))))
(assert (x756 x66))
(assert (x906 x643))
(assert (=> (<= x500 10000) (= (x516 x500) (x390 x500))))
(assert (x906 x110))
(assert (= (x118 x948) (ite (and x757 x1063) (x913 x948) (x881 x948))))
(assert (x906 x1491))
(assert (= (x1400 (x390 x924)) x924))
(assert (x906 x1344))
(assert (= x1285 (x1400 (x390 x1285))))
(assert (x906 x264))
(assert (=> (>= 10000 x221) (= (x390 x221) (x516 x221))))
(assert (=> (>= 10000 x687) (= (x390 x687) (x516 x687))))
(assert (= (x1450 x1305) (ite (and x1063 x214) (x1018 x1305) (ite (and (not x1066) (not x214) x1063 x1062) (x509 x1305) (ite (and x1063 (not x1062) (not x214)) (x1018 x1305) (x1087 x1305))))))
(assert (= (x244 x1033) (ite (= x145 x1033) x170 (x136 x1033))))
(assert (=> (>= 10000 x1044) (= (x516 x1044) (x390 x1044))))
(assert (x906 x284))
(assert (= (ite (= x212 x845) x50 (x424 x212)) (x14 x212)))
(assert (= (ite (= x858 x586) x1076 (x972 x858)) (x883 x858)))
(assert (x756 x1518))
(assert (=> (>= 10000 x1055) (= (x516 x1055) (x390 x1055))))
(assert (= 468353030 (x1400 (x516 468353030))))
(assert (x906 x251))
(assert (x906 x1279))
(assert (x906 x221))
(assert (x756 x126))
(assert (x906 x736))
(assert (x906 x965))
(assert (x906 x120))
(assert (x756 x1174))
(assert (= (x1400 (x516 911411945)) 911411945))
(assert (x906 x66))
(assert (= (x663 x1366) (ite (and x1063 x757) (x225 x1366) (x1377 x1366))))
(assert (x906 x1137))
(assert (= (x509 x746) (ite (= x746 x800) x521 (x1018 x746))))
(assert (x906 x1319))
(assert (= (x1399 x1183) (ite (and x1063 x1321) (x1302 x1183) (x505 x1183))))
(assert (x906 x672))
(assert (x906 x329))
(assert (= (ite (= x982 x296) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x558 x296)) (x171 x296)))
(assert (= x1271 (=> (= x376 0) x522)))
(assert (= (ite (= x746 x786) x598 (x1362 x746)) (x1018 x746)))
(assert (=> (<= x177 10000) (= (x390 x177) (x516 x177))))
(assert (= (=> (= x738 0) x1238) x1372))
(assert (x906 x18))
(assert (x756 x102))
(assert (x756 x780))
(assert (= x372 (and x621 (not x1494))))
(assert (= (ite (= x198 x186) x414 (x378 x186)) (x430 x186)))
(assert (= (ite (and x825 x131) (x942 x1104) (x256 x1104)) (x1180 x1104)))
(assert (= (ite (= x159 x145) x170 (x136 x159)) (x244 x159)))
(assert (= (x1400 (x390 x421)) x421))
(assert (x906 x230))
(assert (x756 x432))
(assert (x1382 x343 x852))
(assert (= (x1018 x499) (ite (= x499 x786) x598 (x1362 x499))))
(assert (= x683 (=> (and (= (x705 (- x141 1)) x1044) (= (< 0 x1044) x837)) (and (=> x837 x1376) (=> (not x837) x831)))))
(assert (= (=> (and (= (x753 (x390 x141) (x516 7) 0) x1509) (not (< x31 x1197)) (= x710 (x753 (x390 x1008) x1509 0)) (<= x67 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x67 0) (= (x536 1461501637330902918203684832716283019655932542975 x497) x1008) (= x1415 (x753 (x390 x385) x710 0)) (= (< 0 x67) x1404) (>= x31 0) (<= x31 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x67 (x912 x1415))) (and (=> (not x1404) x776) (=> (and x1404 (<= 0 x785) (= x785 x569) (= (x753 (x390 x385) x1426 0) x1114) (= x1089 0) (= (x536 1461501637330902918203684832716283019655932542975 x497) x1210) (= (x1227 x1114) x785) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785) (= (x753 (x390 x1210) x1247 0) x1426) (= x1247 (x753 (x390 x141) (x516 9) 0))) x1101))) x817))
(assert (= (x1400 (x390 x819)) x819))
(assert (= (ite (and x517 (not x1201) x153 x608 x242 x871) (x14 x296) (ite (and x871 x517 (not x153) x242 x608) (x424 x296) (ite (and x517 x871 x608 (not x242)) (x883 x296) (ite (and x517 (not x608) x871) (x972 x296) (x685 x296))))) (x1350 x296)))
(assert (= x432 (x1400 (x390 x432))))
(assert (= (ite (and x1063 x214) (x1018 x499) (ite (and (not x214) (not x1066) x1062 x1063) (x509 x499) (ite (and (not x214) (not x1062) x1063) (x1018 x499) (x1087 x499)))) (x1450 x499)))
(assert (= (x791 x1273) 0))
(assert (= (ite (and (not x1201) x153 x517 x242 x871 x608) (x14 x746) (ite (and (not x153) x608 x871 x242 x517) (x424 x746) (ite (and (not x242) x871 x517 x608) (x883 x746) (ite (and x871 x517 (not x608)) (x972 x746) (x685 x746))))) (x1350 x746)))
(assert (x906 x102))
(assert (= x1168 (x1400 (x390 x1168))))
(assert (= (x1400 (x390 x334)) x334))
(assert (= (ite (= x786 x1104) x598 (x1362 x1104)) (x1018 x1104)))
(assert (x906 x1460))
(assert (x906 x296))
(assert (= (x390 2293535753) (x516 2293535753)))
(assert (= (x1400 (x390 x174)) x174))
(assert (= (x516 2743102681) (x390 2743102681)))
(assert (= (x118 x1151) (ite (and x1063 x757) (x913 x1151) (x881 x1151))))
(assert (x906 x1416))
(assert (x756 x175))
(assert (x906 x64))
(assert (= (x424 x145) (ite (= x145 x535) x917 (x883 x145))))
(assert (= (ite (= x891 x1016) x938 (x1038 x1016)) (x1037 x1016)))
(assert (= x1145 x1254))
(assert (x906 x116))
(assert (= (ite (and x633 x464) (x1298 x746) (x872 x746)) (x340 x746)))
(assert (= (x1400 (x390 x696)) x696))
(assert (x906 x1020))
(assert (= (ite (= x127 x786) x598 (x1362 x127)) (x1018 x127)))
(assert (= (=> (= x1494 (= 274184521717934524641157099916833587214 x1513)) (and (=> (not x1494) x548) (=> (and (= x676 (x155 x226)) (= x1128 x319) (not x503) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x568 x487)) x287) (= 1 x555) (= x1355 x730) (not x761) (= x1325 2835717307) (= x878 274184521717934524641157099916833587206) (= x350 x252) (= x761 (< x676 x568)) (= 32 x807) (= x568 x245) (= x967 (x753 (x390 274184521717934524641157099916833587206) (x516 1) 0)) (= (> x1021 x676) x928) (<= 0 x676) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x487) (not x928) (= 68 x1128) (= (x705 (- x676 x1021)) x570) (= x792 (x705 (- x1128 4))) (= x1437 x1021) (= x1021 x568) (= (x30 x844) x487) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x676) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x487 x568)) (= (x536 1461501637330902918203684832716283019655932542975 x252) x168) (> x52 0) (= x503 (or (and (= true (<= x792 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x792 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x792))) (not (= 2514000705 x1325)) x1494 (>= x487 0) (= x26 x487) (not (> 649617121 x1325)) (not (= x1325 1889567281)) (not (= 826074471 x1325)) (= x1439 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 274184521717934524641157099916833587206 x957) (= (+ x26 x245) x1177) (= x844 (x753 (x390 x389) (x516 1) 0)) (= (x753 (x390 274184521717934524641157099916833587206) (x516 1) 0) x226) (= (x1459 (x390 274184521717934524641157099916833587214)) x52) (<= x252 1461501637330902918203684832716283019655932542975) (not (= x1325 649617121)) (= (x536 1461501637330902918203684832716283019655932542975 x252) x389) (not (> 4 x1128)) (not x287)) x480))) x79))
(assert (x906 x618))
(assert (=> (<= x102 10000) (= (x516 x102) (x390 x102))))
(assert (= (x1400 (x390 x873)) x873))
(assert (= (ite (and x278 x1502) (x176 x1393) (ite (and x1237 x142) (x1227 x1393) (ite (and x1340 x1505) (x176 x1393) (x1169 x1393)))) (x805 x1393)))
(assert (= x412 (x1400 (x390 x412))))
(assert (x906 x145))
(assert (= (x972 x296) (ite (= x296 x442) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x296))))
(assert (=> (<= x200 10000) (= (x516 x200) (x390 x200))))
(assert (x906 x157))
(assert (x906 x1049))
(assert (= (x244 x499) (ite (= x499 x145) x170 (x136 x499))))
(assert (= (x390 1000000000000000000) (x516 1000000000000000000)))
(assert (x906 x730))
(assert (x906 x724))
(assert (x906 x640))
(assert (x906 x1242))
(assert (= (x516 18446744073709551615) (x390 18446744073709551615)))
(assert (x906 x878))
(assert (= (x390 2764855426) (x516 2764855426)))
(assert (= (ite (= x1016 x845) x50 (x424 x1016)) (x14 x1016)))
(assert (x756 x741))
(assert (= 759532456 (x1400 (x516 759532456))))
(assert (= (ite (and x260 x991) (x1227 x1393) (x1228 x1393)) (x176 x1393)))
(assert (x906 x1309))
(assert (=> (>= 10000 x843) (= (x390 x843) (x516 x843))))
(assert (= (ite (= x891 x1305) x938 (x1038 x1305)) (x1037 x1305)))
(assert (x906 x823))
(assert (x906 x957))
(assert (= 1000000000000000000 (x1400 (x516 1000000000000000000))))
(assert (= x1447 (=> (= 0 x207) x863)))
(assert (x756 x811))
(assert (= (x509 x159) (ite (= x800 x159) x521 (x1018 x159))))
(assert (= (x1450 x1104) (ite (and x214 x1063) (x1018 x1104) (ite (and x1062 x1063 (not x214) (not x1066)) (x509 x1104) (ite (and (not x214) (not x1062) x1063) (x1018 x1104) (x1087 x1104))))))
(assert (x906 x1349))
(assert (x906 x54))
(assert (x906 x827))
(assert (= x1210 (x1400 (x390 x1210))))
(assert (x906 x412))
(assert (x906 x807))
(assert (x906 x349))
(assert (= (x791 x623) 0))
(assert (x906 x341))
(assert (x906 x704))
(assert (= x215 (or x916 x652)))
(assert (= (ite (and x633 x464) (x1298 x978) (x872 x978)) (x340 x978)))
(assert (x906 x979))
(assert (= (x1046 x406) (ite (and x923 x260) (x1111 x406) (ite (and x260 (not x923) x619) (x1084 x406) (x1418 x406)))))
(assert (x756 x930))
(assert (= (ite (and x633 x464) (x1298 x186) (x872 x186)) (x340 x186)))
(assert (= 2743102681 (x1400 (x516 2743102681))))
(assert (= (x883 x145) (ite (= x145 x586) x1076 (x972 x145))))
(assert (=> (>= 10000 x1299) (= (x516 x1299) (x390 x1299))))
(assert (x906 x802))
(assert (x756 x1345))
(assert (= (ite (and x214 x1063) (x1018 x1273) (ite (and (not x214) (not x1066) x1063 x1062) (x509 x1273) (ite (and (not x214) x1063 (not x1062)) (x1018 x1273) (x1087 x1273)))) (x1450 x1273)))
(assert (= (x1400 (x516 2690754053)) 2690754053))
(assert (=> (<= x389 10000) (= (x390 x389) (x516 x389))))
(assert (x906 x501))
(assert (x906 x483))
(assert (x906 x585))
(assert (= (=> (and (or (not x1160) (and (or (not x882) (and (= x374 (> x1327 x1013)) (= (x536 1461501637330902918203684832716283019655932542975 x497) x58) (= (x753 (x390 x385) x1186 0) x383) (= (x243 (+ x141 2)) x1013) (not x374) (= x688 (x753 (x390 x58) x401 0)) (= x1186 (x753 (x390 x1319) x134 0)) x882 (= x401 (x753 (x390 x175) (x516 9) 0)) (= x841 (x753 (x390 x385) x688 0)) (= (x753 (x390 x175) (x516 3) 0) x134) (= x1319 (x536 1461501637330902918203684832716283019655932542975 x497)))) (= x492 (x753 (x390 x141) (x516 3) 0)) (= (< x175 x334) x882) (= x1296 (x753 (x390 x141) (x516 9) 0)) (= (x753 (x390 x1174) x492 0) x573) (= (x536 1461501637330902918203684832716283019655932542975 x497) x1174) (= (x536 1461501637330902918203684832716283019655932542975 x497) x1279) (= (x243 (+ 1 x141)) x175) (= (x753 (x390 x385) x1356 0) x1324) (= (x753 (x390 x385) x573 0) x1098) (= (x753 (x390 x1279) x1296 0) x1356) x1160)) (= x1160 (< x141 x334))) x55) x577))
(assert (x756 x45))
(assert (= (=> (and (> x1057 0) (< x679 2293535753) (not (= 468353030 x679)) (<= 0 x1314) (= x1057 (x1459 (x390 274184521717934524641157099916833587206))) (= x679 759532456) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1314) (not (> 468353030 x679)) (= x630 x1314) (<= x269 1461501637330902918203684832716283019655932542975) (= (x753 (x390 x448) (x516 7) 0) x182) (not (= x679 635128645)) (= (x912 x1477) x1314) (= x1475 (x753 (x390 x269) x182 0)) (= x1477 (x753 (x390 x767) x1475 0)) (>= 1461501637330902918203684832716283019655932542975 x767) (< x679 911411945)) (=> (and (= x62 x575) (= x177 x859) (= x518 x1200) (= x630 x1292)) x416)) x1277))
(assert (x906 x1196))
(assert (x906 x414))
(assert (= x1435 x232))
(assert (x906 x1282))
(assert (= x1007 (x1400 (x390 x1007))))
(assert (= x1171 (=> (and (not (= 2764855426 x599)) (not (> 2690754053 x599)) (= x702 (x1459 (x390 274184521717934524641157099916833587206))) (= x751 x799) (< 0 x702) (<= 0 x751) (not (= 2743102681 x599)) (= x751 (x225 x560)) (not (= x599 2690754053)) (not (< x599 2293535753)) (= (x753 (x390 x780) (x516 5) 0) x1175) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x751) (= x560 (x753 (x390 x300) x1175 0)) (<= x300 1461501637330902918203684832716283019655932542975) (< x599 2960351575) (= x599 2798343961)) (=> (and (= x349 x1200) (= x257 x799) (= x62 x109)) x1510))))
(assert (x906 x1315))
(assert (x906 x1236))
(assert (x906 x738))
(assert (= (x1400 (x390 x767)) x767))
(assert (=> (>= 10000 x174) (= (x516 x174) (x390 x174))))
(assert (x906 x852))
(assert (x756 x1055))
(assert (= (=> (= (> x170 1) x1467) (and (=> (and (= (x243 (+ 100 x1315)) x18) (< 1 x396) (= x396 (x770 x145)) x1467 (= (x171 x1315) x1006) (= (x705 (- x995 32)) x699) (= x982 (x243 (+ x1511 96))) (= x680 (x1459 (x390 x1513))) (= x1513 (x803 x1322)) (or (and (not x51) (= x638 0)) (and (or (and (= (x378 x746) x414) (= x198 (x243 (+ x18 96))) (or (and (= 64 x638) (not x1328)) (and (or (and (= 128 x638) (= (> x1006 128) x80) (= (x243 (+ 128 x1315)) x296) (not x80) (= x303 (x1059 x296)) x138 (= x447 (x243 (+ 160 x18)))) (and (not x138) (= x638 96))) (= (< 96 x1006) x138) (= x499 (x243 (+ x1315 96))) (= x348 (x430 x499)) (= x1115 (x243 (+ x18 128))) x1328)) x1496 (= (x243 (+ x1315 64)) x746) (= x1328 (> x1006 64))) (and (= 32 x638) (not x1496))) x51 (= (< 32 x1006) x1496) (= x1295 x54) (= (x171 x212) x766) (= x1016 x212))) (>= 1461501637330902918203684832716283019655932542975 x1513) (< 1 x170) (= x1511 (x243 (+ 36 x1315))) (= x1144 (< x1006 x638)) (= (x243 (+ 192 x1383)) x1140) (= x1322 (x243 (+ x672 64))) (= (x243 (+ x1315 32)) x1016) (= (< 0 x680) x1022) (= (x705 (- x18 x1315)) x995) (= x375 (x1091 x1016)) (= (x536 26959946667150639794667015087019630673637144422540572481103610249215 x375) x1416) (= x51 (> x1006 0)) (= x557 (x243 (+ x1315 68))) (or (not x1144) (and x1144 (= x7 (x243 (+ x1006 x1295))))) (= (x243 (+ x1416 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x1246) (= 0 x870) (= (x243 (+ x1511 128)) x1295) x1022 (= (x770 x1140) x1437)) x808) (=> (not x1467) x897))) x112))
(assert (x906 x15))
(assert (x906 x921))
(assert (= (x1400 (x390 x1275)) x1275))
(assert (x906 x1067))
(assert (x906 x811))
(assert (= (ite (= x623 x786) x598 (x1362 x623)) (x1018 x623)))
(assert (= (x340 x1104) (ite (and x464 x633) (x1298 x1104) (x872 x1104))))
(assert (= x1242 (x1400 (x390 x1242))))
(assert (= (x791 x800) 0))
(assert (= (ite (and x1321 x1063) (x1302 x495) (x505 x495)) (x1399 x495)))
(assert (x906 x901))
(assert (x906 x1448))
(assert (x906 x1294))
(assert (= x1265 (x1400 (x390 x1265))))
(assert (x906 x1452))
(assert (= (x1400 (x390 x58)) x58))
(assert (x756 x1210))
(assert (= x724 (x1400 (x390 x724))))
(assert (= (ite (= x931 x1273) x607 (x222 x1273)) (x1038 x1273)))
(assert (x906 x319))
(assert (x906 x282))
(assert (x906 x638))
(assert (x906 x1355))
(assert (= x1500 (=> (and (= (x705 (- x724 1)) x908) (= (< 0 x908) x559)) (and (=> x559 x624) (=> (not x559) x1447)))))
(assert (= (x516 826074471) (x390 826074471)))
(assert (x906 x114))
(assert (x906 x667))
(assert (= (ite (= x1033 x786) x598 (x1362 x1033)) (x1018 x1033)))
(assert (= (x516 115792089237316195423570985008687907853269984665640564039457) (x390 115792089237316195423570985008687907853269984665640564039457)))
(assert (x906 x593))
(assert (= x738 (x1400 (x390 x738))))
(assert (x906 x859))
(assert (x906 x982))
(assert (= (ite (and x757 x1063) (x913 x971) (x881 x971)) (x118 x971)))
(assert (= x232 x1417))
(assert (x756 x601))
(assert (= (ite (and (not x1201) x517 x871 x153 x242 x608) (x14 x186) (ite (and x608 x242 (not x153) x871 x517) (x424 x186) (ite (and x517 x871 x608 (not x242)) (x883 x186) (ite (and x871 (not x608) x517) (x972 x186) (x685 x186))))) (x1350 x186)))
(assert (x906 x27))
(assert (x725 x497 x1116))
(assert (x756 x1371))
(assert (= (x1018 x786) x598))
(assert (x756 x1319))
(assert (= (x1018 x296) (ite (= x296 x786) x598 (x1362 x296))))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1400 (x516 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (x906 x95))
(assert (x906 x956))
(assert (x756 x828))
(assert (x209 x1272))
(assert (= (ite (= x931 x296) x607 (x222 x296)) (x1038 x296)))
(assert (x906 x970))
(assert (x906 x185))
(assert (=> (>= 10000 x1068) (= (x516 x1068) (x390 x1068))))
(assert (x906 x902))
(assert (=> (<= x421 10000) (= (x516 x421) (x390 x421))))
(assert (= (x1400 (x390 x1438)) x1438))
(assert (= (x1037 x145) (ite (= x891 x145) x938 (x1038 x145))))
(assert (= (x1037 x186) (ite (= x186 x891) x938 (x1038 x186))))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1400 (x516 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (= (ite (= x145 x669) x170 (x136 x669)) (x244 x669)))
(assert (x906 x32))
(assert (x756 x924))
(assert (= x1345 (x1400 (x390 x1345))))
(assert (= (ite (= x1104 x442) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x1104)) (x972 x1104)))
(assert (= (x1038 x1033) (ite (= x1033 x931) x607 (x222 x1033))))
(assert (x906 x532))
(assert (x906 x812))
(assert (x906 x104))
(assert (x906 x634))
(assert (x756 x908))
(assert (= (x118 x728) (ite (and x1063 x757) (x913 x728) (x881 x728))))
(assert (x906 x890))
(assert (= x234 (or (and x142 x1237) (and x1502 x278) x1070)))
(assert (x906 x274))
(assert (x906 x601))
(assert (= (x1400 (x516 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (= (ite (= x746 x535) x917 (x883 x746)) (x424 x746)))
(assert (= (x1038 x122) (ite (= x122 x931) x607 (x222 x122))))
(assert (= (x1400 (x390 x385)) x385))
(assert (= (x1037 x1104) (ite (= x891 x1104) x938 (x1038 x1104))))
(assert (= (ite (and x299 x984) (x244 x1140) (x648 x1140)) (x1455 x1140)))
(assert (x906 x1261))
(assert (=> (<= x1513 10000) (= (x390 x1513) (x516 x1513))))
(assert (x906 x599))
(assert (x906 x629))
(assert (x906 x978))
(assert (= 2960351575 (x1400 (x516 2960351575))))
(assert (x756 x738))
(assert (= x955 x2))
(assert (= (=> (= (< 0 x724) x1503) (and (=> (not x1503) x1447) (=> x1503 x775))) x1249))
(assert (x906 x543))
(assert (x906 x1385))
(assert (= (ite (and x242 (not x1201) x153 x871 x517 x608) (x14 x1104) (ite (and x242 x517 x871 (not x153) x608) (x424 x1104) (ite (and x517 x608 (not x242) x871) (x883 x1104) (ite (and (not x608) x871 x517) (x972 x1104) (x685 x1104))))) (x1350 x1104)))
(assert (= (ite (and x923 x260) (x614 x1337) (ite (and (not x923) x619 x260) (x614 x1337) (x795 x1337))) (x588 x1337)))
(assert (x906 x718))
(assert (x906 x1390))
(assert (= (x1400 (x516 1889567281)) 1889567281))
(assert (x906 x1051))
(assert (x906 x487))
(assert (x906 x545))
(assert (= (x509 x212) (ite (= x800 x212) x521 (x1018 x212))))
(assert (= (ite (= x858 x800) x521 (x1018 x858)) (x509 x858)))
(assert (x906 x126))
(assert (=> (>= 10000 x783) (= (x516 x783) (x390 x783))))
(assert (= 274184521717934524641157099916833587214 (x1400 (x516 274184521717934524641157099916833587214))))
(assert (x756 x1239))
(assert (x906 x793))
(assert (x906 x1288))
(assert (= (x516 2211524764) (x390 2211524764)))
(assert (= (x791 x1016) 0))
(assert (= (x390 1968616202) (x516 1968616202)))
(assert (= x1068 (x1400 (x390 x1068))))
(assert (= (x1400 (x516 1986467848)) 1986467848))
(assert (x906 x1489))
(assert (= (x791 x212) 0))
(assert (x756 x1279))
(assert (= (x171 x1315) (ite (= x982 x1315) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x558 x1315))))
(assert (x906 x722))
(assert (x906 x448))
(assert (x906 x212))
(assert (x906 x907))
(assert (x906 x385))
(assert (=> (>= 10000 x738) (= (x516 x738) (x390 x738))))
(assert (x906 x500))
(assert (x906 x654))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1400 (x516 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (x906 x675))
(assert (x906 x696))
(assert (= 0 (x791 x127)))
(assert (x906 x1006))
(assert (= x916 (or (and (not x438) x820) (and (not x847) x351))))
(assert (x906 x1508))
(assert (= (ite (= x145 x786) x598 (x1362 x145)) (x1018 x145)))
(assert (x756 x1520))
(assert (x906 x1083))
(assert (x906 x1379))
(assert (x906 x1127))
(assert (= (x1400 (x390 x264)) x264))
(assert (x906 x422))
(assert (= (x1400 (x390 x376)) x376))
(assert (=> (<= x126 10000) (= (x516 x126) (x390 x126))))
(assert (= (x1400 (x390 x381)) x381))
(assert (= (ite (= x1140 x535) x917 (x883 x1140)) (x424 x1140)))
(assert (x906 x1012))
(assert (= (ite (and x984 x299) (x244 x891) (x648 x891)) (x1455 x891)))
(assert (= x999 (=> (and (= (x753 (x390 x1452) (x516 7) 0) x399) (= (x753 (x390 x381) x399 0) x434) (= x363 (x753 (x390 x385) x434 0)) (= x488 (x1046 x363)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x488) (= x847 (= x488 0)) (>= x488 0) (= (x536 1461501637330902918203684832716283019655932542975 x497) x381)) (and (=> (and (= (> x280 0) x238) x847 (= (x705 (- x1452 1)) x280) (not x238)) x1372) (=> (and (not x847) (= x1258 x1452)) x899)))))
(assert (x906 x1458))
(assert (= (ite (and x51 x293 x1328 (not x138) x1467 x1496) (x1059 x186) (ite (and x51 (not x1328) x1496 x293 x1467) (x430 x186) (ite (and (not x1496) x51 x293 x1467) (x378 x186) (ite (and x1467 (not x51) x293) (x171 x186) (x561 x186))))) (x945 x186)))
(assert (= (ite (= x1140 x891) x938 (x1038 x1140)) (x1037 x1140)))
(assert (x906 x794))
(assert (=> (<= x1438 10000) (= (x516 x1438) (x390 x1438))))
(assert (= x1199 (x1400 (x390 x1199))))
(assert (x906 x1441))
(assert (= (x791 x159) 0))
(assert (=> (>= 10000 x575) (= (x516 x575) (x390 x575))))
(assert (=> (>= 10000 x741) (= (x390 x741) (x516 x741))))
(assert (= (and x879 x361) x1269))
(assert (=> (>= 10000 x1293) (= (x390 x1293) (x516 x1293))))
(assert (= (=> (and (= (x753 (x390 x141) (x516 7) 0) x701) (= (x753 (x390 x656) x701 0) x478) (= x1058 (= 0 x613)) (= (x753 (x390 x385) x478 0) x1512) (= x613 (x912 x1512)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x613) (= x656 (x536 1461501637330902918203684832716283019655932542975 x497)) (<= 0 x613)) (and (=> x1058 x683) (=> (and (= x141 x180) (not x1058)) x12))) x94))
(assert (x906 x637))
(assert (x906 x228))
(assert (= (x14 x127) (ite (= x127 x845) x50 (x424 x127))))
(assert (= (x1400 (x390 x780)) x780))
(assert (= x943 (=> (and (= x700 (x753 (x390 x819) (x516 6) 0)) (not (= x1264 1968616202)) (<= x41 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x41 0) (not (< x1264 911411945)) (not (= 2061678023 x1264)) (>= 1461501637330902918203684832716283019655932542975 x65) (= x41 x1243) (not (= 1986467848 x1264)) (< 0 x322) (> 2293535753 x1264) (= (x631 x393) x41) (not (= 2211524764 x1264)) (= (x1459 (x390 274184521717934524641157099916833587206)) x322) (= x393 (x753 (x390 x65) x700 0)) (= x1264 2258409472) (not (< x1264 1968616202))) (=> (and (= x1079 x1243) (= x62 x780) (= x300 x1200)) x1171))))
(assert (= (ite (and (not x1201) x242 x153 x517 x608 x871) (x14 x978) (ite (and x517 x242 (not x153) x871 x608) (x424 x978) (ite (and x517 (not x242) x608 x871) (x883 x978) (ite (and (not x608) x871 x517) (x972 x978) (x685 x978))))) (x1350 x978)))
(assert (x906 x985))
(assert (x906 x566))
(assert (= (x1400 (x390 x936)) x936))
(assert (x756 x221))
(assert (x756 x1442))
(assert (x906 x352))
(assert (x756 x767))
(assert (=> (<= x970 10000) (= (x516 x970) (x390 x970))))
(assert (=> (>= 10000 x381) (= (x390 x381) (x516 x381))))
(assert (= (x516 274184521717934524641157099916833587214) (x390 274184521717934524641157099916833587214)))
(assert (= (and x11 x559) x1424))
(assert (= 0 (x791 x858)))
(assert (= (ite (= x145 x931) x607 (x222 x145)) (x1038 x145)))
(assert (x906 x1520))
(assert (= (x1400 (x390 x207)) x207))
(assert (x756 x421))
(assert (x906 x680))
(assert (= x416 (=> (and (= x1204 (x753 (x390 x177) x1347 0)) (= x1347 (x753 (x390 x518) x939 0)) (<= 0 x1465) (= x513 142201243) (<= x1465 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x518 1461501637330902918203684832716283019655932542975) (= x932 x1465) (< x513 911411945) (>= 1461501637330902918203684832716283019655932542975 x177) (not (= x513 87118632)) (= (x1459 (x390 274184521717934524641157099916833587206)) x824) (> 2293535753 x513) (> x824 0) (not (= 69947311 x513)) (= (x1227 x1204) x1465) (= (x753 (x390 x575) (x516 9) 0) x939) (> 468353030 x513)) (=> (and (= x221 x62) (= x992 x1200) (= x859 x78) (= x1054 x932)) x1486))))
(assert (=> (<= x1174 10000) (= (x390 x1174) (x516 x1174))))
(assert (= (x1400 (x390 x221)) x221))
(assert (x906 x198))
(assert (x906 x780))
(assert (x906 x236))
(assert (x756 x1252))
(assert (x906 x1044))
(assert (=> (>= 10000 x141) (= (x390 x141) (x516 x141))))
(assert (= (x1400 (x516 2512682246)) 2512682246))
(assert (= x1505 (or (and x1032 x1364) x215)))
(assert (x906 x858))
(assert (x756 x1293))
(assert (x906 x1068))
(assert (=> (>= 10000 x1319) (= (x390 x1319) (x516 x1319))))
(assert (= x754 (=> (and (= x544 x403) (= x286 x1092) (= (>= x544 x1484) x1233) (= x1484 x1079)) (and x1233 (=> (and (= x890 x165) (= x1457 x1292) (= (>= x165 x1457) x574)) (and x574 (=> (and (= x360 x257) (= (<= x360 x549) x727) (= x549 x1481)) (and (=> (and (= x444 (>= x97 x911)) (= x911 x308) (= x97 x1092)) (and x444 (=> (and (= x646 false) (= x1232 (<= x1330 x1134)) (= x1257 x1330) (= x987 true) (= 87118632 x111) (= x1398 x1134) (= x291 87118632)) x1232))) x727))))))))
(assert (= (x1450 x746) (ite (and x214 x1063) (x1018 x746) (ite (and x1063 (not x1066) x1062 (not x214)) (x509 x746) (ite (and x1063 (not x1062) (not x214)) (x1018 x746) (x1087 x746))))))
(assert (x906 x973))
(assert (x906 x709))
(assert (x756 x1443))
(assert (x756 x99))
(assert (x906 x25))
(assert (x906 x52))
(assert (= x480 (=> (and (= (x1097 x186) x239) x980 (= (< 0 x239) x1433) (not x89) (not (= x555 0)) (= (x857 (x390 x1513)) x839) (or (and (= x186 x1295) (not x628) (= (x243 (+ 96 x18)) x157)) (and (= 96 x186) x628)) (= x89 (< 2 x170)) (= x628 (= x807 0)) (= x980 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x292 (x390 274184521717934524641157099916833587206)))) (or (not x1433) (and (= x1464 (x1097 x186)) (= x1432 x1193) x1433 (not (or (and (= true (<= x1464 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1464)) (> x1464 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 0 x1193) (= (x1097 x1104) x1193) (= x1432 (ite x1202 1 0)) (= x1104 (x243 (+ 32 x186))) (= (= x1193 0) x539) (= x1202 (not x539))))) x897)))
(assert (= (x390 2512682246) (x516 2512682246)))
(assert (= (x1018 x978) (ite (= x978 x786) x598 (x1362 x978))))
(assert (x248 x375 x1214))
(assert (= (x1038 x186) (ite (= x186 x931) x607 (x222 x186))))
(assert (x906 x786))
(assert (= x741 (x1400 (x390 x741))))
(assert (x906 x1021))
(assert (x906 x344))
(assert (= (x1400 (x516 2211524764)) 2211524764))
(assert (x756 x592))
(assert (= x774 (=> (and (= (x753 (x390 x27) x671 0) x1393) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1178) (>= x1178 0) (> x686 0) (> 911411945 x262) (<= x27 1461501637330902918203684832716283019655932542975) (< x262 468353030) (= (x753 (x390 x924) x602 0) x671) (= x686 (x1459 (x390 274184521717934524641157099916833587206))) (not (= x262 87118632)) (= (x900 x1393) x1178) (= x262 142201243) (= x602 (x753 (x390 x1053) (x516 9) 0)) (> 2293535753 x262) (not (= 69947311 x262)) (= x1448 x1178) (>= 1461501637330902918203684832716283019655932542975 x924)) (=> (and (= x1507 x1200) (= x859 x596) (= x1019 x62) (= x563 x1448)) x1370))))
(assert (= x1106 (=> (= x1420 (< 0 x141)) (and (=> x1420 x813) (=> (not x1420) x1271)))))
(assert (= (x384 x499) (ite (and x871 (not x173) x517) (x1350 x499) (x333 x499))))
(assert (x756 x1225))
(assert (= x477 (=> (and (= (x705 (- x724 1)) x1452) (= x1394 (> x1452 0))) (and (=> (not x1394) x1372) (=> x1394 x999)))))
(assert (= x1423 (and x1269 x1420)))
(assert (x906 x576))
(assert (x906 x450))
(assert (x906 x595))
(assert (x906 x1432))
(assert (= 0 (x791 x1104)))
(assert (= (=> (and (= x1225 (x536 1461501637330902918203684832716283019655932542975 x497)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x643) (= (= 0 x643) x103) (= x728 (x753 (x390 x1225) x815 0)) (<= 0 x643) (= x643 (x118 x728)) (= x815 (x753 (x390 x724) (x516 6) 0))) (and (=> x103 x1500) (=> (and (= x724 x233) (not x103)) x227))) x775))
(assert (x756 x58))
(assert (x906 x150))
(assert (= (x1400 (x390 x45)) x45))
(assert (=> (>= 10000 x1251) (= (x390 x1251) (x516 x1251))))
(assert (= (ite (= x145 x442) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x909 x145)) (x972 x145)))
(assert (= (=> (and (= (x536 1461501637330902918203684832716283019655932542975 x497) x1451) (>= x4 0) (= x786 (x243 (+ 32 x523))) (= x191 (x753 (x390 x141) (x516 5) 0)) (= x461 (x753 (x390 x1451) x191 0)) (= x214 (= 0 x1137)) (= (x243 (+ 64 x523)) x1056) (or (and (not x428) (= 0 x653)) (and (or (and (= x653 x327) (= 604800 x1344) (= (x705 (- x921 x4)) x1326) (not (> x4 x921)) (= (ite (> 604800 x1326) x1326 604800) x327) (not x5)) (and (= x765 (x705 (- x921 x415))) x5 (= x415 (x1018 x523)) (not (> x415 x921)) (= x653 x765))) (or (and (= x921 x1336) (not x1142)) (and (= x377 (x1018 x786)) x1142 (= x921 x377))) x428 (= x29 (x1018 x786)) (= (< x29 x1336) x1142) (= x5 (= x4 0)))) (<= 0 x1141) (>= x736 0) (= (x536 1461501637330902918203684832716283019655932542975 x497) x1251) (= x1109 (x1018 x786)) (or (and (= 0 x634) (= (mod (* 1000000000000000000 x1137) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x850) (> x736 0) (not x214) (= (div x850 x736) x587) (= (< 0 x170) x1062) (= (ite (> x1137 115792089237316195423570985008687907853269984665640564039457) 1 0) x1323) (= 1 x251) (= x422 x724) (or (and (= (* x1406 x587) x455) (= (x753 (x390 x141) (x516 4) 0) x944) (< 0 x888) (<= x696 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406) (< 0 x170) (= (x536 1461501637330902918203684832716283019655932542975 x497) x1017) (= x482 (x753 (x390 x1) x35 0)) (<= x1 1461501637330902918203684832716283019655932542975) (= (x753 (x390 x1017) x354 0) x35) (= x1406 (x8 x482)) (= (x803 x1080) x1) (= (x803 x1080) x696) (= (x753 (x390 x385) x1389 0) x357) (= x1167 x1191) (= x741 (x536 1461501637330902918203684832716283019655932542975 x497)) (< (+ x681 x1167) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 0 x609) (= (x753 (x390 x741) x944 0) x1389) (= x1303 (x753 (x390 x696) x357 0)) (= x1167 (x1018 x800)) (<= 0 x609) (= (x581 x1303) x609) (or (not x1066) (and (> x170 1) (= (x753 (x390 x1438) x356 0) x1490) (= x1187 (x8 x829)) (<= x347 1461501637330902918203684832716283019655932542975) x1066 (= 0 x591) (= (x509 x145) x1094) (<= 0 x1187) (< (+ x540 x47) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x829 (x753 (x390 x347) x1490 0)) (<= x1187 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1094 1) (= x1506 (x243 (+ 64 x672))) (= x356 (x753 (x390 x141) (x516 11) 0)) (= x231 x540) (= (x753 (x390 x141) (x516 4) 0) x1163) (= x823 (+ x703 x231)) (= (< 2 x170) x647) (= x591 (x581 x1290)) (= x540 (div x1166 1000000000000000000)) (< 1 x170) (= (x753 (x390 x601) x1163 0) x1130) (= x703 x47) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x591) (= (* x1187 x587) x1166) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1187 x587)) (= x1438 (x536 1461501637330902918203684832716283019655932542975 x497)) (= (x243 (+ x1383 192)) x159) (= x1508 (x803 x1506)) (= (x536 1461501637330902918203684832716283019655932542975 x497) x601) (= x47 (x509 x159)) (= (x753 (x390 x1508) x695 0) x1290) (= (x753 (x390 x385) x1130 0) x695) (not x647) (= x347 (x803 x1506)) (<= x1508 1461501637330902918203684832716283019655932542975) (<= 0 x591))) (= x1066 (> x170 1)) (= x1080 x1234) x1062 (= x681 x39) (< 0 x170) (<= 0 x1406) (= x681 (div x455 1000000000000000000)) (= x800 (x243 (+ x1383 160))) (= x888 (x1018 x145)) (= (x753 (x390 x141) (x516 11) 0) x354) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1406 x587)) (= (+ x39 x1191) x521) (<= x609 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1062)) (= x634 (x536 x251 x1323)) (= (x243 (+ 1 x141)) x422)) (and (= (x243 (+ x141 1)) x1156) (= x724 x1156) x214)) (= x324 (x753 (x390 x141) (x516 3) 0)) (= x4 (x631 x121)) (= x925 (x753 (x390 x1251) x324 0)) (= x598 (x276 x246)) (= (= x653 0) x757) (<= 0 x598) (= x246 (x272 x1469 1)) (or (and (= x941 (x753 (x390 x141) (x516 6) 0)) (= x1077 (* x653 x1129)) (= x1168 (x536 1461501637330902918203684832716283019655932542975 x497)) (= x979 (x536 1461501637330902918203684832716283019655932542975 x497)) (= x1077 x778) (= (x753 (x390 x1168) x941 0) x1176) (= x468 (x753 (x390 x979) x1422 0)) (= (x753 (x390 x141) (x516 5) 0) x1422) (< (* x653 x1129) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x757)) (and (= x1207 (x753 (x390 x930) x342 0)) x757 (= x930 (x536 1461501637330902918203684832716283019655932542975 x497)) (= x342 (x753 (x390 x141) (x516 6) 0)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x598) (= x1469 (x753 (x390 x141) (x516 1) 0)) (= x428 (> x1109 x4)) (= (x663 x461) x736) (= x1442 (x536 1461501637330902918203684832716283019655932542975 x497)) (<= x736 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x664 x1469) x1141) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1141) (= (= 0 x1381) x1321) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4) (= x121 (x753 (x390 x1442) x1135 0)) (>= x1137 0) (= (x753 (x390 x385) x925 0) x975) (<= x1137 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x753 (x390 x141) (x516 6) 0) x1135) (= x1137 (x588 x975)) (or x1321 (and (= (x536 1461501637330902918203684832716283019655932542975 x497) x1068) (= x750 (x753 (x390 x1068) x1253 0)) (= (x753 (x390 x141) (x516 10) 0) x1253) (not x1321)))) x1224) x1487))
(assert (=> (>= 10000 x1196) (= (x390 x1196) (x516 x1196))))
(assert (x756 x1299))
(assert (= (ite (= x669 x800) x521 (x1018 x669)) (x509 x669)))
(assert (= x260 x361))
(assert (=> (>= 10000 x1443) (= (x390 x1443) (x516 x1443))))
(assert (x906 x7))
(assert (x906 x350))
(assert (x906 x1121))
(assert (= (ite (= x127 x931) x607 (x222 x127)) (x1038 x127)))
(assert (x209 x252))
(assert (x906 x518))
(assert (x906 x1177))
(assert (= x1287 (=> (and (= x798 2258409472) (= x1288 (x715 x948)) (not (< x798 911411945)) (not (= x798 1986467848)) (= x1493 (x753 (x390 x687) (x516 6) 0)) (<= x412 1461501637330902918203684832716283019655932542975) (not (= x798 1968616202)) (> 2293535753 x798) (not (= 2211524764 x798)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1288) (>= x1288 0) (= (x753 (x390 x412) x1493 0) x948) (= x1288 x1161) (< 0 x983) (not (= x798 2061678023)) (= x983 (x1459 (x390 274184521717934524641157099916833587206))) (not (> 1968616202 x798))) (=> (and (= x1242 x1200) (= x62 x66) (= x1161 x403)) x1215))))
(assert (= (and (not x1404) x918) x316))
(assert (=> (<= x311 10000) (= (x390 x311) (x516 x311))))
(assert (= (ite (= x1104 x54) x766 (x171 x1104)) (x378 x1104)))
(assert (= (ite (and x984 x299) (x244 x1016) (x648 x1016)) (x1455 x1016)))
(assert (= (x244 x1140) (ite (= x1140 x145) x170 (x136 x1140))))
(assert (x906 x1331))
(assert (= x749 (or x915 x698)))
(assert (= x1299 (x1400 (x390 x1299))))
(assert (x906 x479))
(assert (= (x1400 (x390 x1300)) x1300))
(assert (= x1145 x2))
(assert (= x470 (=> (and (<= 0 x31) (= x446 (x753 (x390 x724) (x516 7) 0)) (>= x1407 0) (= x467 (x753 (x390 x1299) x446 0)) (= x1299 (x536 1461501637330902918203684832716283019655932542975 x497)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x31) (= (< 0 x1407) x1364) (not (< x31 x724)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1407) (= x1407 (x1046 x1000)) (= x1000 (x753 (x390 x385) x467 0))) (and (=> (not x1364) x1026) (=> (and x1364 (= x491 (x753 (x390 x1348) x1499 0)) (= (x753 (x390 x385) x491 0) x148) (= (x536 1461501637330902918203684832716283019655932542975 x497) x1348) (= 0 x1051) (>= x166 0) (= (x176 x148) x166) (= (x753 (x390 x724) (x516 9) 0) x1499) (= x185 x166) (<= x166 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1230)))))
(assert (x906 x1076))
(assert (x906 x348))
(assert (=> (<= x1235 10000) (= (x390 x1235) (x516 x1235))))
(assert (x906 x220))
(assert (x906 x1007))
(assert (= (x1400 (x390 x1508)) x1508))
(assert (x209 1461501637330902918203684832716283019655932542975))
(assert (= (ite (= x786 x159) x598 (x1362 x159)) (x1018 x159)))
(assert (x906 x1513))
(assert (= (x430 x1104) (ite (= x198 x1104) x414 (x378 x1104))))
(assert (= 274184521717934524641157099916833587214 (x1400 (x390 274184521717934524641157099916833587214))))
(assert (= (x424 x858) (ite (= x535 x858) x917 (x883 x858))))
(assert (x906 x1506))
(assert (=> (>= 10000 x767) (= (x516 x767) (x390 x767))))
(assert (x906 x166))
(assert (x906 x360))
(assert (x906 x1056))
(assert (x906 x702))
(assert (= (=> (and (<= x1235 1461501637330902918203684832716283019655932542975) (not (> 2293535753 x629)) (= x969 (x753 (x390 x716) x974 0)) (<= x1338 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2532887486 x629) (>= 1461501637330902918203684832716283019655932542975 x1275) (> 2960351575 x629) (> x253 0) (>= 1461501637330902918203684832716283019655932542975 x716) (not (= x629 2293535753)) (< x629 2690754053) (= x1338 (x581 x926)) (= x926 (x753 (x390 x1235) x969 0)) (not (= 2512682246 x629)) (= (x753 (x390 x1275) x1318 0) x974) (not (= 2418364589 x629)) (= (x753 (x390 x154) (x516 4) 0) x1318) (= x1338 x286) (<= 0 x1338) (= (x1459 (x390 274184521717934524641157099916833587206)) x253)) x754) x797))
(assert (=> (>= 10000 x1168) (= (x516 x1168) (x390 x1168))))
(assert (=> (>= 10000 x109) (= (x390 x109) (x516 x109))))
(assert (= (x1400 (x390 x930)) x930))
(assert (= x733 x893))
(assert (= (ite (and (not x1201) x608 x242 x517 x153 x871) (x14 x1140) (ite (and x242 x608 x871 (not x153) x517) (x424 x1140) (ite (and (not x242) x608 x871 x517) (x883 x1140) (ite (and (not x608) x517 x871) (x972 x1140) (x685 x1140))))) (x1350 x1140)))
(assert (= (ite (and x242 x517 x871 (not x1201) x153 x608) (x14 x212) (ite (and x608 (not x153) x517 x242 x871) (x424 x212) (ite (and x871 x517 (not x242) x608) (x883 x212) (ite (and x517 x871 (not x608)) (x972 x212) (x685 x212))))) (x1350 x212)))
(check-sat)
