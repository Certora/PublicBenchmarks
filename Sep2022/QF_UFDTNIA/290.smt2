(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x550 0)) (((x1326 (x874 Int)) (x343 (x85 x550) (x359 x550) (x557 Int)) (x1309 (x196 x550) (x936 Int)))))
(declare-fun x277 (Int) Int)
(declare-fun x959 () Int)
(declare-fun x616 () Bool)
(declare-fun x3 (Int) Int)
(declare-fun x1215 () Bool)
(declare-fun x1414 () Int)
(declare-fun x1226 () Int)
(declare-fun x325 () Int)
(declare-fun x1211 () Int)
(declare-fun x934 () Bool)
(declare-fun x457 () Bool)
(declare-fun x249 () Bool)
(declare-fun x183 () Int)
(declare-fun x1159 () Int)
(declare-fun x588 () x550)
(declare-fun x245 () Bool)
(declare-fun x60 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x107 () Int)
(declare-fun x1232 () Int)
(declare-fun x715 () Bool)
(declare-fun x31 () Int)
(declare-fun x291 () Bool)
(declare-fun x633 () Bool)
(declare-fun x965 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x454 () Bool)
(declare-fun x185 () Bool)
(declare-fun x143 () Bool)
(declare-fun x228 () Int)
(declare-fun x35 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x418 () Int)
(declare-fun x1526 () Int)
(declare-fun x819 () Int)
(declare-fun x1424 () Int)
(declare-fun x1476 () Bool)
(declare-fun x655 () Int)
(declare-fun x1451 () x550)
(declare-fun x646 () Int)
(declare-fun x988 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x259 () Bool)
(declare-fun x990 () Int)
(declare-fun x536 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x980 () Int)
(declare-fun x96 () Int)
(declare-fun x899 () Bool)
(declare-fun x285 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x535 () Bool)
(declare-fun x582 () Int)
(declare-fun x817 () Int)
(declare-fun x1453 () Int)
(declare-fun x1119 () Int)
(declare-fun x1239 () x550)
(declare-fun x275 () Int)
(declare-fun x734 () Bool)
(declare-fun x580 () Bool)
(declare-fun x201 () Int)
(declare-fun x724 () Bool)
(declare-fun x1001 () Int)
(declare-fun x1384 () Int)
(declare-fun x319 () Bool)
(declare-fun x468 () Int)
(declare-fun x1175 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x298 () Int)
(declare-fun x696 () Int)
(declare-fun x149 () Int)
(declare-fun x1534 () Int)
(declare-fun x239 (Int) Int)
(declare-fun x920 () Bool)
(declare-fun x556 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1079 () x550)
(declare-fun x405 () Int)
(declare-fun x915 () Bool)
(declare-fun x218 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x1275 (Int) Int)
(declare-fun x606 (Int) Int)
(declare-fun x778 () Int)
(declare-fun x730 () Int)
(declare-fun x1098 () Bool)
(declare-fun x420 () Bool)
(declare-fun x575 () Int)
(declare-fun x137 () Bool)
(declare-fun x566 () Bool)
(declare-fun x162 () Bool)
(declare-fun x807 () Int)
(declare-fun x379 () Bool)
(declare-fun x347 () Int)
(declare-fun x1558 () x550)
(declare-fun x791 () Int)
(declare-fun x748 () Bool)
(declare-fun x189 () Bool)
(declare-fun x261 () Bool)
(declare-fun x1501 () Int)
(declare-fun x435 () Bool)
(declare-fun x573 (Int) Int)
(declare-fun x1405 () Int)
(declare-fun x1208 () Bool)
(declare-fun x666 () Bool)
(declare-fun x366 () Int)
(declare-fun x200 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x391 () Bool)
(declare-fun x932 () Bool)
(declare-fun x499 () Int)
(declare-fun x1084 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x1184 () Int)
(declare-fun x1493 () Bool)
(declare-fun x148 () Int)
(declare-fun x125 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x754 () Bool)
(declare-fun x214 () Int)
(declare-fun x417 () Bool)
(declare-fun x1254 () Int)
(declare-fun x408 () Int)
(declare-fun x1385 () Int)
(declare-fun x1465 () Bool)
(declare-fun x916 (Int) Int)
(declare-fun x55 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x1377 () Bool)
(declare-fun x1475 () Int)
(declare-fun x1289 () Bool)
(declare-fun x199 () Int)
(declare-fun x654 () Int)
(declare-fun x1220 () Int)
(declare-fun x276 () Bool)
(declare-fun x128 () Bool)
(declare-fun x680 () Int)
(declare-fun x627 () Bool)
(declare-fun x253 () Int)
(declare-fun x1341 () Int)
(declare-fun x25 () Int)
(declare-fun x908 () Int)
(declare-fun x49 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x1033 () Int)
(declare-fun x1218 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x625 () Bool)
(declare-fun x1301 () Int)
(declare-fun x987 () Bool)
(declare-fun x571 (Int) Int)
(declare-fun x1387 () Bool)
(declare-fun x1127 () Int)
(declare-fun x1489 () Bool)
(declare-fun x545 () Int)
(declare-fun x1269 (Int) Int)
(declare-fun x73 () Bool)
(declare-fun x52 () Int)
(declare-fun x561 () Bool)
(declare-fun x522 () Bool)
(declare-fun x318 () Bool)
(declare-fun x829 () Int)
(declare-fun x1422 () Int)
(declare-fun x113 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x47 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x452 () x550)
(declare-fun x4 () Int)
(declare-fun x701 () Bool)
(declare-fun x436 (Int) Int)
(declare-fun x1513 () Int)
(declare-fun x777 () Int)
(declare-fun x636 () Bool)
(declare-fun x317 () Bool)
(declare-fun x1278 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x776 () Bool)
(declare-fun x321 () Int)
(declare-fun x1304 () Bool)
(declare-fun x1066 () Int)
(declare-fun x283 () Bool)
(declare-fun x377 () Int)
(declare-fun x682 () Int)
(declare-fun x1274 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x849 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x1225 () Int)
(declare-fun x1219 () Bool)
(declare-fun x445 () Int)
(declare-fun x1448 (Int) Int)
(declare-fun x907 () Bool)
(declare-fun x842 () Bool)
(declare-fun x28 () Bool)
(declare-fun x24 () Bool)
(declare-fun x1270 () Bool)
(declare-fun x179 () Int)
(declare-fun x1425 () Int)
(declare-fun x1535 () Bool)
(declare-fun x270 () Int)
(declare-fun x1556 () Bool)
(declare-fun x370 () Int)
(declare-fun x1303 () Int)
(declare-fun x675 () Bool)
(declare-fun x1515 () Int)
(declare-fun x1416 () Int)
(declare-fun x348 (Int) Int)
(declare-fun x1036 () Int)
(declare-fun x2 () Bool)
(declare-fun x151 () Bool)
(declare-fun x1083 () Int)
(declare-fun x20 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x1027 () Int)
(declare-fun x731 () Int)
(declare-fun x609 () Bool)
(declare-fun x1031 () Int)
(declare-fun x709 () Bool)
(declare-fun x1370 (Int) Int)
(declare-fun x1048 () Bool)
(declare-fun x508 () Bool)
(declare-fun x1018 () Bool)
(declare-fun x45 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x694 () Int)
(declare-fun x890 () Int)
(declare-fun x994 () Int)
(declare-fun x166 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x1151 () Int)
(declare-fun x77 () Int)
(declare-fun x739 () Bool)
(declare-fun x570 () Bool)
(declare-fun x660 () Int)
(declare-fun x1015 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x692 () Int)
(declare-fun x1550 () Int)
(declare-fun x244 () Bool)
(declare-fun x314 () Bool)
(declare-fun x1538 () Int)
(declare-fun x808 () Int)
(declare-fun x737 () Bool)
(declare-fun x501 () Int)
(declare-fun x175 () Bool)
(declare-fun x512 () Bool)
(declare-fun x889 () Bool)
(declare-fun x87 () Int)
(declare-fun x72 (Int) Int)
(declare-fun x1452 () Int)
(declare-fun x1500 () Int)
(declare-fun x525 () Bool)
(declare-fun x870 () Int)
(declare-fun x213 () Int)
(declare-fun x451 () Bool)
(declare-fun x104 () Int)
(declare-fun x1069 (Int) Int)
(declare-fun x288 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x292 () Bool)
(declare-fun x565 () Int)
(declare-fun x1543 () Int)
(declare-fun x661 () Bool)
(declare-fun x494 (Int) Int)
(declare-fun x467 () Bool)
(declare-fun x836 (Int) Int)
(declare-fun x1302 () Bool)
(declare-fun x225 () Bool)
(declare-fun x591 (Int) Int)
(declare-fun x518 () Int)
(declare-fun x1390 () Bool)
(declare-fun x27 () Bool)
(declare-fun x974 () Int)
(declare-fun x509 () Bool)
(declare-fun x744 () Bool)
(declare-fun x670 (Int) Int)
(declare-fun x813 () Int)
(declare-fun x220 () Bool)
(declare-fun x732 () Int)
(declare-fun x231 () Bool)
(declare-fun x976 () Int)
(declare-fun x1288 () Int)
(declare-fun x1338 (Int Int) Int)
(declare-fun x1198 () Bool)
(declare-fun x676 () Bool)
(declare-fun x1163 (x550) Int)
(declare-fun x713 () Int)
(declare-fun x938 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x1546 () x550)
(declare-fun x1353 () Int)
(declare-fun x1007 () Int)
(declare-fun x58 () Bool)
(declare-fun x1307 () Int)
(declare-fun x61 () Bool)
(declare-fun x617 () Int)
(declare-fun x388 (x550) Int)
(declare-fun x264 () Bool)
(declare-fun x1020 () Int)
(declare-fun x784 () Bool)
(declare-fun x458 () Bool)
(declare-fun x876 () Int)
(declare-fun x1284 () Int)
(declare-fun x705 (Int) Int)
(declare-fun x632 () Int)
(declare-fun x297 (Int) Int)
(declare-fun x1237 () Bool)
(declare-fun x438 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x403 () Bool)
(declare-fun x1132 () Int)
(declare-fun x1362 () Bool)
(declare-fun x1243 () Int)
(declare-fun x412 () Int)
(declare-fun x900 () Int)
(declare-fun x1335 () Int)
(declare-fun x1378 () Int)
(declare-fun x722 () x550)
(declare-fun x36 () Bool)
(declare-fun x905 () Int)
(declare-fun x86 () Int)
(declare-fun x1056 () Int)
(declare-fun x18 () Bool)
(declare-fun x250 () Bool)
(declare-fun x419 () Bool)
(declare-fun x834 () Int)
(declare-fun x1355 () Int)
(declare-fun x331 () Bool)
(declare-fun x1125 () Int)
(declare-fun x1519 () Int)
(declare-fun x502 () Int)
(declare-fun x1002 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x911 () Bool)
(declare-fun x765 () x550)
(declare-fun x532 () Bool)
(declare-fun x460 () Int)
(declare-fun x40 () Bool)
(declare-fun x374 () Bool)
(declare-fun x116 () Bool)
(declare-fun x67 () Int)
(declare-fun x1203 () Bool)
(declare-fun x619 () Bool)
(declare-fun x814 () Int)
(declare-fun x544 () Bool)
(declare-fun x958 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x62 (Int) Int)
(declare-fun x1383 () Int)
(declare-fun x576 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x332 () Bool)
(declare-fun x193 () Int)
(declare-fun x121 () Bool)
(declare-fun x450 () Bool)
(declare-fun x888 () Bool)
(declare-fun x548 () Int)
(declare-fun x1005 () Int)
(declare-fun x1328 () Bool)
(declare-fun x1006 () Int)
(declare-fun x289 () Bool)
(declare-fun x310 () Bool)
(declare-fun x127 () Bool)
(declare-fun x14 () Bool)
(declare-fun x1369 (Int) Int)
(declare-fun x1421 () Bool)
(declare-fun x33 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x181 () Bool)
(declare-fun x447 () Bool)
(declare-fun x1391 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x1054 () Int)
(declare-fun x1488 () Bool)
(declare-fun x1531 () Int)
(declare-fun x1462 () Int)
(declare-fun x1128 () Int)
(declare-fun x360 () Bool)
(declare-fun x30 () Int)
(declare-fun x1480 () Bool)
(declare-fun x620 (Int) Int)
(declare-fun x202 () Int)
(declare-fun x397 () Bool)
(declare-fun x541 () Bool)
(declare-fun x1277 () Int)
(declare-fun x828 () Bool)
(declare-fun x1214 () x550)
(declare-fun x1148 () Bool)
(declare-fun x299 () Int)
(declare-fun x295 () Int)
(declare-fun x743 () Int)
(declare-fun x313 () Bool)
(declare-fun x1150 () Int)
(declare-fun x101 () Int)
(declare-fun x1097 () Bool)
(declare-fun x337 () Bool)
(declare-fun x796 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x1164 () Int)
(declare-fun x242 () Bool)
(declare-fun x190 () Int)
(declare-fun x1004 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x306 () Int)
(declare-fun x1308 () Bool)
(declare-fun x901 () Bool)
(declare-fun x355 () Int)
(declare-fun x972 () Bool)
(declare-fun x927 () Bool)
(declare-fun x790 () Int)
(declare-fun x924 () Int)
(declare-fun x381 () Bool)
(declare-fun x74 () Bool)
(declare-fun x1415 (Int Int) Int)
(declare-fun x99 () Int)
(declare-fun x448 () Int)
(declare-fun x456 (x550) Int)
(declare-fun x793 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x7 () Bool)
(declare-fun x1156 () Int)
(declare-fun x689 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x341 () Bool)
(declare-fun x392 () Bool)
(declare-fun x671 () Bool)
(declare-fun x476 () Int)
(declare-fun x1399 () Bool)
(declare-fun x708 () Bool)
(declare-fun x154 () Int)
(declare-fun x975 () Int)
(declare-fun x223 () Int)
(declare-fun x982 () Bool)
(declare-fun x171 () Int)
(declare-fun x307 () Int)
(declare-fun x700 () Int)
(declare-fun x760 () Int)
(declare-fun x1435 () Bool)
(declare-fun x323 () Bool)
(declare-fun x1528 () Bool)
(declare-fun x593 () Int)
(declare-fun x1374 () Int)
(declare-fun x353 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x963 () Bool)
(declare-fun x266 () Int)
(declare-fun x247 () Int)
(declare-fun x1444 () Bool)
(declare-fun x386 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x503 () Int)
(declare-fun x526 () Int)
(declare-fun x1426 () x550)
(declare-fun x1417 () Int)
(declare-fun x345 () Bool)
(declare-fun x639 (Int) Int)
(declare-fun x1463 () Bool)
(declare-fun x54 () Int)
(declare-fun x1406 () Bool)
(declare-fun x783 () Int)
(declare-fun x132 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x1140 () x550)
(declare-fun x260 () Int)
(declare-fun x717 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x6 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x560 () Int)
(declare-fun x1413 () Int)
(declare-fun x912 () Int)
(declare-fun x234 () Bool)
(declare-fun x1120 (Int) Int)
(declare-fun x641 () x550)
(declare-fun x246 () Bool)
(declare-fun x516 (Int) x550)
(declare-fun x37 () Bool)
(declare-fun x687 () Int)
(declare-fun x549 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x993 () Bool)
(declare-fun x644 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x811 () Int)
(declare-fun x642 (x550) Int)
(declare-fun x554 () Bool)
(declare-fun x971 () Int)
(declare-fun x1349 () Bool)
(declare-fun x945 () Bool)
(declare-fun x719 () Bool)
(declare-fun x279 () Int)
(declare-fun x1019 () Int)
(declare-fun x1094 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x804 () Bool)
(declare-fun x872 () Bool)
(declare-fun x490 () x550)
(declare-fun x1364 () Int)
(declare-fun x1075 () Int)
(declare-fun x645 () Int)
(declare-fun x858 () Bool)
(declare-fun x446 () Int)
(declare-fun x852 (Int) Int)
(declare-fun x716 () Int)
(declare-fun x53 () Bool)
(declare-fun x764 () Int)
(declare-fun x962 () Bool)
(declare-fun x312 (Int) Int)
(declare-fun x135 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x767 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x605 (Int) Int)
(declare-fun x221 () Bool)
(declare-fun x286 () Int)
(declare-fun x439 () Bool)
(declare-fun x857 () Int)
(declare-fun x998 () Int)
(declare-fun x1334 (Int) Int)
(declare-fun x1371 () Bool)
(declare-fun x431 () Bool)
(declare-fun x76 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x145 (Int) Int)
(declare-fun x172 () Bool)
(declare-fun x1317 () Int)
(declare-fun x530 () Bool)
(declare-fun x406 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x964 () Bool)
(declare-fun x607 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x427 () Bool)
(declare-fun x75 () Int)
(declare-fun x1117 () Bool)
(declare-fun x824 () x550)
(declare-fun x818 () Bool)
(declare-fun x443 () Int)
(declare-fun x1552 () Bool)
(declare-fun x723 () Bool)
(declare-fun x293 () Int)
(declare-fun x290 (Int) Int)
(declare-fun x1134 () Int)
(declare-fun x1469 () Bool)
(declare-fun x1221 () Int)
(declare-fun x1280 () Int)
(declare-fun x597 () Bool)
(declare-fun x928 () Int)
(declare-fun x533 () Bool)
(declare-fun x465 () Bool)
(declare-fun x893 () Bool)
(declare-fun x1023 () Bool)
(declare-fun x268 () Int)
(declare-fun x1394 () Int)
(declare-fun x1555 () Int)
(declare-fun x82 () Int)
(declare-fun x243 () Int)
(declare-fun x820 () Bool)
(declare-fun x274 () Bool)
(declare-fun x303 () Int)
(declare-fun x1238 () Int)
(declare-fun x344 () Int)
(declare-fun x913 () Bool)
(declare-fun x1440 () Int)
(declare-fun x434 () Int)
(declare-fun x1244 () Int)
(declare-fun x850 () Int)
(declare-fun x979 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x192 () Bool)
(declare-fun x848 () Bool)
(declare-fun x601 () Bool)
(declare-fun x92 () Bool)
(declare-fun x780 () Int)
(declare-fun x855 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x474 () Int)
(declare-fun x305 () Int)
(declare-fun x691 (Int) Int)
(declare-fun x774 () Bool)
(declare-fun x1504 () Int)
(declare-fun x1194 () Bool)
(declare-fun x1539 () Int)
(declare-fun x263 () Int)
(declare-fun x133 () Bool)
(declare-fun x968 () Int)
(declare-fun x1329 (Int) Int)
(declare-fun x1176 () Int)
(declare-fun x984 () Bool)
(declare-fun x477 () Int)
(declare-fun x510 () Bool)
(declare-fun x653 () Int)
(declare-fun x1266 () Int)
(declare-fun x1306 () Bool)
(declare-fun x114 () Bool)
(declare-fun x229 () Int)
(declare-fun x227 () Int)
(declare-fun x640 () Bool)
(declare-fun x762 () Int)
(declare-fun x230 () Bool)
(declare-fun x90 () Int)
(declare-fun x1265 () Bool)
(declare-fun x923 () Bool)
(declare-fun x935 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x1460 () Int)
(declare-fun x206 () Int)
(declare-fun x1503 () Bool)
(declare-fun x1325 () Int)
(declare-fun x881 () Bool)
(declare-fun x334 () Bool)
(declare-fun x966 () Bool)
(declare-fun x361 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x742 () Int)
(declare-fun x1231 () Bool)
(declare-fun x755 () Int)
(declare-fun x1030 () Bool)
(declare-fun x1100 () Int)
(declare-fun x1495 () Bool)
(declare-fun x267 () Bool)
(declare-fun x354 () Int)
(declare-fun x568 () Int)
(declare-fun x1540 () Bool)
(declare-fun x1260 () Int)
(declare-fun x79 () Bool)
(declare-fun x371 () Bool)
(declare-fun x1147 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x1442 () Int)
(declare-fun x699 () x550)
(declare-fun x1547 () Bool)
(declare-fun x1222 (x550) Int)
(declare-fun x955 () Bool)
(declare-fun x1436 () Int)
(declare-fun x906 () Bool)
(declare-fun x603 () Bool)
(declare-fun x681 () Bool)
(declare-fun x859 () Int)
(declare-fun x832 () Bool)
(declare-fun x254 () Bool)
(declare-fun x358 () Bool)
(declare-fun x83 () x550)
(declare-fun x322 () x550)
(declare-fun x611 () Bool)
(declare-fun x590 () Int)
(declare-fun x1427 () Bool)
(declare-fun x662 () Int)
(declare-fun x823 () Int)
(declare-fun x1086 () Int)
(declare-fun x1411 () Bool)
(declare-fun x495 () Int)
(declare-fun x1258 () Bool)
(declare-fun x531 () Int)
(declare-fun x583 () Int)
(declare-fun x294 () Int)
(declare-fun x753 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x863 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x233 (Int) Int)
(declare-fun x1229 () Int)
(declare-fun x504 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x618 () Int)
(declare-fun x1242 () Int)
(declare-fun x867 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x562 () Int)
(declare-fun x1287 () Int)
(declare-fun x1110 () Bool)
(declare-fun x1157 () Int)
(declare-fun x1291 () Bool)
(declare-fun x862 () Int)
(declare-fun x155 () Int)
(declare-fun x1471 () Int)
(declare-fun x763 () Bool)
(declare-fun x877 () Bool)
(declare-fun x287 () Bool)
(declare-fun x1185 () Int)
(declare-fun x904 () Bool)
(declare-fun x770 () Int)
(declare-fun x674 () Int)
(declare-fun x668 () Bool)
(declare-fun x812 () Bool)
(declare-fun x1346 () Int)
(declare-fun x433 () Int)
(declare-fun x1095 () Int)
(declare-fun x546 () Bool)
(declare-fun x551 () Bool)
(declare-fun x686 () Int)
(declare-fun x1337 () Int)
(declare-fun x917 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x1055 () x550)
(declare-fun x567 () Int)
(declare-fun x558 () Int)
(declare-fun x115 () Int)
(declare-fun x222 () Bool)
(declare-fun x728 () Bool)
(declare-fun x950 () Bool)
(declare-fun x940 () Int)
(declare-fun x542 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x835 () Bool)
(declare-fun x365 () Int)
(declare-fun x977 () Int)
(declare-fun x1241 () Int)
(declare-fun x71 () Int)
(declare-fun x328 () Int)
(declare-fun x205 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x302 () Int)
(declare-fun x232 () Int)
(declare-fun x1072 () Int)
(declare-fun x469 () Bool)
(declare-fun x34 () Bool)
(declare-fun x1305 () x550)
(declare-fun x376 () Int)
(declare-fun x385 () Bool)
(declare-fun x10 () Bool)
(declare-fun x725 () Int)
(declare-fun x751 () Int)
(declare-fun x1246 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x1365 () Int)
(declare-fun x769 () Bool)
(declare-fun x1139 () Int)
(declare-fun x64 () Int)
(declare-fun x1065 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x41 () Bool)
(declare-fun x111 () Bool)
(declare-fun x741 () Bool)
(declare-fun x170 () Bool)
(declare-fun x1467 () Int)
(declare-fun x1158 (Int) Int)
(declare-fun x505 () Int)
(declare-fun x282 () Bool)
(declare-fun x768 () Int)
(declare-fun x165 () Int)
(declare-fun x142 () Bool)
(declare-fun x1126 () Int)
(declare-fun x410 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x1386 () Bool)
(declare-fun x63 () Int)
(declare-fun x903 () Int)
(declare-fun x704 () Bool)
(declare-fun x727 () Int)
(declare-fun x340 () Bool)
(declare-fun x1357 () x550)
(declare-fun x1512 () Bool)
(declare-fun x188 () Int)
(declare-fun x703 () Bool)
(declare-fun x659 () Bool)
(declare-fun x449 () Bool)
(declare-fun x1358 () Int)
(declare-fun x712 () Int)
(declare-fun x1544 () Int)
(declare-fun x423 () Int)
(declare-fun x1536 () Int)
(declare-fun x12 () Int)
(declare-fun x589 () Int)
(declare-fun x153 () Int)
(declare-fun x610 () Int)
(declare-fun x1368 () Int)
(declare-fun x527 () Int)
(declare-fun x882 () Int)
(declare-fun x237 () Bool)
(declare-fun x647 () Int)
(declare-fun x66 () Bool)
(declare-fun x594 () Bool)
(declare-fun x257 () Bool)
(declare-fun x1040 (x550) Int)
(declare-fun x1496 () Bool)
(declare-fun x1549 () Int)
(declare-fun x752 () Int)
(declare-fun x110 () Int)
(declare-fun x869 () Bool)
(declare-fun x100 () Int)
(declare-fun x398 (Int) Int)
(declare-fun x217 () Bool)
(declare-fun x801 () Int)
(declare-fun x883 () Bool)
(declare-fun x538 () Bool)
(declare-fun x1085 () x550)
(declare-fun x1051 () Int)
(declare-fun x126 (Int) Int)
(declare-fun x746 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x949 () Bool)
(declare-fun x1249 () Int)
(declare-fun x252 () Bool)
(declare-fun x799 () Int)
(declare-fun x695 () Int)
(declare-fun x1173 () Bool)
(declare-fun x758 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x944 (Int) Int)
(declare-fun x1259 () Int)
(declare-fun x1429 () Bool)
(declare-fun x1293 () Bool)
(declare-fun x841 () Int)
(declare-fun x1146 () Bool)
(declare-fun x124 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x794 (x550) Int)
(declare-fun x65 () Int)
(declare-fun x1197 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x215 () Int)
(declare-fun x402 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x430 () Bool)
(declare-fun x498 () Int)
(declare-fun x489 () Int)
(declare-fun x178 () Bool)
(declare-fun x714 () Int)
(declare-fun x1012 () Int)
(declare-fun x158 () Bool)
(declare-fun x409 () Int)
(declare-fun x1107 () Int)
(declare-fun x957 () Int)
(declare-fun x947 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x574 () Int)
(declare-fun x1409 () Int)
(declare-fun x981 () Bool)
(declare-fun x559 () Int)
(declare-fun x553 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x211 () Int)
(declare-fun x349 () Bool)
(declare-fun x702 (Int) Int)
(declare-fun x866 () Int)
(declare-fun x1298 () Bool)
(declare-fun x464 () Int)
(declare-fun x543 () Bool)
(declare-fun x16 () Int)
(declare-fun x50 () Bool)
(declare-fun x626 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x102 () Int)
(declare-fun x209 () Bool)
(declare-fun x363 () Int)
(declare-fun x711 () x550)
(declare-fun x1109 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x937 () Int)
(declare-fun x42 () Bool)
(declare-fun x453 () Int)
(declare-fun x1517 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x187 () Bool)
(declare-fun x930 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x989 () Bool)
(declare-fun x197 () Int)
(declare-fun x648 () Bool)
(declare-fun x395 () Bool)
(declare-fun x335 () Int)
(declare-fun x1195 () Bool)
(declare-fun x910 () Bool)
(declare-fun x1320 () Int)
(declare-fun x684 () Bool)
(declare-fun x296 () Bool)
(declare-fun x461 () Int)
(declare-fun x164 () x550)
(declare-fun x624 () Bool)
(declare-fun x665 () Int)
(declare-fun x316 () Bool)
(declare-fun x140 () Bool)
(declare-fun x1250 () Int)
(declare-fun x168 () Bool)
(declare-fun x595 (Int) Int)
(declare-fun x160 () Int)
(declare-fun x1261 () Bool)
(declare-fun x437 () Bool)
(declare-fun x258 () Int)
(declare-fun x1 () Bool)
(declare-fun x424 () x550)
(declare-fun x396 () Int)
(declare-fun x413 () Bool)
(declare-fun x429 () Bool)
(declare-fun x48 () Int)
(declare-fun x57 () Int)
(declare-fun x918 () Int)
(declare-fun x577 () Bool)
(declare-fun x613 () Int)
(declare-fun x248 () Bool)
(declare-fun x364 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x1509 () Int)
(declare-fun x838 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x552 (Int) Int)
(declare-fun x1256 () Bool)
(declare-fun x941 () Int)
(declare-fun x1389 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x219 () Int)
(declare-fun x871 () Int)
(declare-fun x1487 () Int)
(declare-fun x649 (Int) Int)
(declare-fun x759 () Int)
(declare-fun x1560 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x144 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x995 () Bool)
(declare-fun x91 () Bool)
(declare-fun x1376 () Int)
(declare-fun x1171 () Int)
(declare-fun x1456 (Int) Int)
(declare-fun x781 () Bool)
(declare-fun x1525 () Int)
(declare-fun x481 () Bool)
(declare-fun x1314 () Int)
(declare-fun x1412 () Bool)
(declare-fun x897 () Int)
(declare-fun x658 () Int)
(declare-fun x1189 () Bool)
(declare-fun x1236 () Int)
(declare-fun x507 () Bool)
(declare-fun x1190 () Int)
(declare-fun x80 (Int) Int)
(declare-fun x537 () Int)
(declare-fun x136 () Bool)
(declare-fun x1178 () x550)
(declare-fun x204 () Int)
(declare-fun x212 () Bool)
(declare-fun x718 () Bool)
(declare-fun x999 () Int)
(declare-fun x726 () Int)
(declare-fun x129 () Int)
(declare-fun x1201 () Bool)
(declare-fun x1361 (Int) Int)
(declare-fun x1216 (Int) Int)
(declare-fun x628 (Int) Int)
(declare-fun x1339 () Bool)
(declare-fun x483 (Int) Int)
(declare-fun x383 () Int)
(declare-fun x407 () Bool)
(declare-fun x146 () Int)
(declare-fun x265 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x1049 () Bool)
(declare-fun x404 () Int)
(declare-fun x1522 () Bool)
(declare-fun x174 () Bool)
(declare-fun x139 () Bool)
(declare-fun x32 () Int)
(declare-fun x138 () Bool)
(declare-fun x387 () Bool)
(declare-fun x898 () Bool)
(declare-fun x656 () Int)
(declare-fun x394 (Int) Int)
(declare-fun x860 () Int)
(declare-fun x1564 () Int)
(declare-fun x134 () Bool)
(declare-fun x756 () Bool)
(declare-fun x1183 () Bool)
(declare-fun x1483 () Int)
(declare-fun x861 () Bool)
(declare-fun x997 () Bool)
(declare-fun x1464 () Int)
(declare-fun x236 () x550)
(declare-fun x1087 () Int)
(declare-fun x1149 () Bool)
(declare-fun x747 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x56 () Bool)
(declare-fun x782 () Bool)
(declare-fun x1356 (Int) Int)
(declare-fun x425 () Int)
(declare-fun x1235 () Bool)
(declare-fun x798 () Bool)
(declare-fun x1484 (x550) Int)
(declare-fun x119 () Bool)
(declare-fun x584 () Int)
(declare-fun x1313 () Bool)
(declare-fun x854 () Bool)
(declare-fun x301 () Int)
(declare-fun x1080 () Int)
(declare-fun x422 (x550) Int)
(declare-fun x822 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x176 () Bool)
(declare-fun x400 () Int)
(declare-fun x1563 (Int) Int)
(declare-fun x1498 () Bool)
(declare-fun x84 () Bool)
(declare-fun x382 () Bool)
(declare-fun x226 () Bool)
(declare-fun x622 () Bool)
(declare-fun x442 () Int)
(declare-fun x875 () Int)
(declare-fun x1423 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x284 () Int)
(declare-fun x326 () Int)
(declare-fun x942 () Bool)
(declare-fun x357 () Int)
(declare-fun x1090 () Bool)
(declare-fun x540 () Int)
(declare-fun x772 () Int)
(declare-fun x517 () Bool)
(declare-fun x309 (Int) Int)
(declare-fun x1352 () Int)
(declare-fun x1227 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x612 () Bool)
(declare-fun x39 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x320 () Bool)
(declare-fun x108 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x256 () Int)
(declare-fun x1485 () Int)
(declare-fun x1106 () Bool)
(declare-fun x637 () Bool)
(declare-fun x93 () Int)
(declare-fun x985 () Bool)
(declare-fun x496 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x1502 () Int)
(declare-fun x1247 () Int)
(declare-fun x1161 (Int) Int)
(declare-fun x1281 () Int)
(declare-fun x1428 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x1449 () Int)
(declare-fun x1268 () Bool)
(declare-fun x1458 () Int)
(declare-fun x929 () Bool)
(declare-fun x389 () Bool)
(declare-fun x839 () Bool)
(declare-fun x441 () Bool)
(declare-fun x953 () Int)
(declare-fun x372 () Bool)
(declare-fun x352 () Bool)
(declare-fun x956 () Bool)
(declare-fun x169 (Int) Int)
(declare-fun x1296 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x851 () Int)
(declare-fun x13 () Bool)
(declare-fun x967 () Bool)
(declare-fun x1554 () Bool)
(declare-fun x827 () Int)
(declare-fun x1342 () Bool)
(declare-fun x1419 (Int) Int)
(declare-fun x89 () Bool)
(declare-fun x721 () Int)
(declare-fun x1532 () Bool)
(declare-fun x891 () Bool)
(declare-fun x973 () Int)
(declare-fun x338 () Int)
(declare-fun x1112 () Int)
(declare-fun x152 () Int)
(declare-fun x1559 () Int)
(declare-fun x592 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x529 () Int)
(declare-fun x579 () Bool)
(declare-fun x1044 (Int) Int)
(declare-fun x821 () x550)
(declare-fun x868 (Int) Int)
(declare-fun x1420 () Bool)
(declare-fun x785 () Int)
(declare-fun x1511 () Int)
(declare-fun x479 (Int) Int)
(declare-fun x1446 () Bool)
(declare-fun x1199 (x550) Int)
(declare-fun x1121 () Int)
(declare-fun x70 () Bool)
(declare-fun x1061 (Int) Int)
(declare-fun x1091 () Int)
(declare-fun x672 () Bool)
(declare-fun x1212 () Int)
(declare-fun x159 () Int)
(declare-fun x1470 () Bool)
(declare-fun x1521 (x550) Int)
(declare-fun x161 () Bool)
(declare-fun x896 () Int)
(declare-fun x43 () Int)
(declare-fun x1499 () Int)
(declare-fun x17 () Int)
(declare-fun x1088 () Bool)
(declare-fun x81 () Bool)
(declare-fun x788 (Int) Int)
(declare-fun x1029 () Int)
(declare-fun x652 () Bool)
(declare-fun x1105 () Int)
(declare-fun x598 () Int)
(declare-fun x1267 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x663 (Int) Int)
(declare-fun x1253 () Bool)
(declare-fun x520 (Int) Int)
(declare-fun x845 () Int)
(declare-fun x421 () Int)
(declare-fun x38 () Int)
(declare-fun x952 () Int)
(declare-fun x698 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x1395 () Int)
(declare-fun x1350 () Int)
(declare-fun x847 () Int)
(declare-fun x106 () Bool)
(declare-fun x1434 () Int)
(declare-fun x750 () Int)
(declare-fun x369 () Bool)
(declare-fun x651 () Int)
(declare-fun x207 () x550)
(declare-fun x925 () Bool)
(declare-fun x710 () Int)
(declare-fun x563 () Bool)
(declare-fun x1181 () Int)
(declare-fun x564 () Bool)
(declare-fun x1482 () x550)
(declare-fun x523 () Bool)
(declare-fun x440 () Bool)
(declare-fun x733 () Int)
(declare-fun x600 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x390 () Int)
(declare-fun x1537 (Int) Int)
(declare-fun x555 (x550) Int)
(declare-fun x1059 () Bool)
(declare-fun x806 () Int)
(declare-fun x826 () Bool)
(declare-fun x569 () Bool)
(declare-fun x241 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x578 () x550)
(declare-fun x939 () Int)
(declare-fun x810 () Bool)
(declare-fun x853 () Bool)
(declare-fun x621 () Int)
(declare-fun x497 () Int)
(declare-fun x475 () Bool)
(declare-fun x914 () Bool)
(declare-fun x336 () Bool)
(declare-fun x416 () Bool)
(declare-fun x909 () Bool)
(declare-fun x884 () Int)
(declare-fun x1082 () Bool)
(declare-fun x327 () Int)
(declare-fun x356 () Bool)
(declare-fun x657 () Int)
(declare-fun x623 () Bool)
(declare-fun x978 () Int)
(declare-fun x78 () Bool)
(declare-fun x351 () Int)
(declare-fun x638 () Int)
(declare-fun x1217 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x122 () Bool)
(declare-fun x262 () Int)
(declare-fun x1343 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x864 () Int)
(declare-fun x88 () Int)
(declare-fun x1192 () Bool)
(declare-fun x22 () Bool)
(declare-fun x1322 (Int) Int)
(declare-fun x1141 () Int)
(declare-fun x1360 () Int)
(declare-fun x191 () x550)
(declare-fun x1311 () Int)
(declare-fun x1187 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x892 () Bool)
(declare-fun x1205 () Int)
(declare-fun x677 () Bool)
(declare-fun x519 () Bool)
(declare-fun x373 () Int)
(declare-fun x368 (Int Int) Int)
(declare-fun x1024 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x1011 () Int)
(declare-fun x255 () Int)
(declare-fun x614 () Int)
(declare-fun x1180 () Int)
(declare-fun x1450 () Int)
(declare-fun x837 () Bool)
(declare-fun x792 () Bool)
(declare-fun x902 (Int) Int)
(declare-fun x280 () Bool)
(declare-fun x587 () Bool)
(declare-fun x384 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x1310 (Int) Int)
(declare-fun x26 () x550)
(declare-fun x1510 () Int)
(declare-fun x757 () Bool)
(declare-fun x969 () Bool)
(declare-fun x667 () Int)
(declare-fun x59 () Bool)
(declare-fun x414 () Int)
(declare-fun x94 () Int)
(declare-fun x1477 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x1345 () Int)
(declare-fun x186 () Int)
(declare-fun x991 () Int)
(declare-fun x919 (Int) Int)
(declare-fun x1154 () Int)
(declare-fun x1445 () Bool)
(declare-fun x596 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x278 () Int)
(declare-fun x492 () Bool)
(declare-fun x1375 () Int)
(declare-fun x485 () Bool)
(declare-fun x816 () Int)
(declare-fun x105 () Int)
(declare-fun x1397 () Bool)
(declare-fun x960 () Bool)
(declare-fun x735 () Bool)
(declare-fun x604 () Bool)
(declare-fun x572 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x878 () Int)
(declare-fun x1381 () Int)
(declare-fun x271 (Int) Int)
(declare-fun x1347 () Int)
(declare-fun x1459 () Bool)
(declare-fun x886 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x880 () Bool)
(declare-fun x1507 () Bool)
(declare-fun x506 () Bool)
(declare-fun x581 () Int)
(declare-fun x1035 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x1167 () Int)
(declare-fun x459 () Int)
(declare-fun x720 () Bool)
(declare-fun x1169 () Int)
(declare-fun x599 () Bool)
(declare-fun x831 () Int)
(declare-fun x954 (Int) Int)
(declare-fun x797 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x844 () Bool)
(declare-fun x1096 (Int) Int)
(declare-fun x473 () Int)
(declare-fun x29 () Int)
(declare-fun x697 (Int) Int)
(declare-fun x167 () x550)
(declare-fun x401 () Bool)
(declare-fun x208 () Int)
(declare-fun x224 () Bool)
(declare-fun x805 () Bool)
(declare-fun x643 () Bool)
(declare-fun x803 () Int)
(declare-fun x488 () Int)
(declare-fun x1009 () Int)
(declare-fun x690 () Bool)
(declare-fun x815 () Int)
(declare-fun x970 () Int)
(declare-fun x802 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x1160 () Int)
(declare-fun x493 () Int)
(declare-fun x1318 () Bool)
(declare-fun x216 () Int)
(declare-fun x378 () Bool)
(declare-fun x749 () Bool)
(declare-fun x98 () Int)
(declare-fun x324 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x399 () Bool)
(declare-fun x602 () Bool)
(declare-fun x380 () Bool)
(declare-fun x393 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x1319 () Int)
(declare-fun x1323 () Int)
(declare-fun x1252 () Bool)
(declare-fun x745 (Int) Int)
(declare-fun x195 () Bool)
(declare-fun x184 () Bool)
(declare-fun x1524 () Bool)
(declare-fun x480 () Int)
(declare-fun x141 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x21 () Bool)
(define-fun x500 ((x550 x550) (x800 Int)) x550 (ite ((_ is x1309) x550) (x1309 (x196 x550) (+ x800 (x936 x550))) (ite ((_ is x343) x550) (x343 (x85 x550) (x359 x550) (+ (x557 x550) x800)) (x1326 (+ x800 (x874 x550))))))
(define-fun x238 ((x1078 Int)) Int (ite (and (< x1078 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1078)) x1078 (- x1078 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x887 ((x1078 Int)) Int (ite (and (>= x1078 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x1078)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078) x1078))
(define-fun x1276 ((x1271 Int)) Bool (and (< x1271 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1271)))
(define-fun x631 ((x120 Int)) Int (x1356 x120))
(define-fun x1074 ((x120 Int)) Int (ite (and (< x120 (+ 28 4)) (>= x120 28)) (x1356 (+ (- x120 28) 0)) (x348 x120)))
(define-fun x315 ((x120 Int)) Int (ite (= 640 x120) x1500 (x1074 x120)))
(define-fun x894 ((x120 Int)) Int (ite (= 672 x120) x1504 (x315 x120)))
(define-fun x1348 ((x120 Int)) Int (ite (= 704 x120) 1 (x894 x120)))
(define-fun x1299 ((x120 Int)) Int (ite (= x120 160) x1504 (x1537 x120)))
(define-fun x112 ((x120 Int)) Int (ite (= 128 x120) 7 (x1299 x120)))
(define-fun x1457 ((x120 Int)) Int (ite (= 736 x120) x493 (x112 x120)))
(define-fun x787 ((x120 Int)) Int (ite (and x438 (not x1446) (not x1517)) (x1537 x120) (x1457 x120)))
(define-fun x1067 ((x120 Int)) Int (ite (= 160 x120) x1504 (x787 x120)))
(define-fun x482 ((x120 Int)) Int (ite (= x120 128) 7 (x1067 x120)))
(define-fun x1186 ((x120 Int)) Int (ite (= x120 800) x223 (x1061 x120)))
(define-fun x1523 ((x120 Int)) Int (ite (= 224 x120) 1889567281 (x1061 x120)))
(define-fun x1037 ((x120 Int)) Int (ite (and (>= x120 224) (< x120 (+ 224 32))) (x271 (+ 0 (- x120 224))) (x479 x120)))
(define-fun x513 ((x120 Int)) Int (ite (and x1339 x345 x855) (x1037 x120) (x479 x120)))
(define-fun x472 ((x120 Int)) Int (ite (= 288 x120) x232 (x513 x120)))
(define-fun x339 ((x120 Int)) Int (ite (= 256 x120) x77 (x902 x120)))
(define-fun x840 ((x120 Int)) Int (ite (= x120 320) x357 (x339 x120)))
(define-fun x771 ((x120 Int)) Int (ite (= 320 x120) 0 (x902 x120)))
(define-fun x1410 ((x120 Int)) Int (ite (and (not x282) x341) (x840 x120) (x771 x120)))
(define-fun x131 ((x120 Int)) Int (ite (= x120 384) x88 (x1410 x120)))
(define-fun x470 ((x120 Int)) Int (ite (= x120 800) x405 (x131 x120)))
(define-fun x367 ((x120 Int)) Int (ite (and x1318 (not x1401)) (x470 x120) (x1186 x120)))
(define-fun x1533 ((x120 Int)) Int (ite (= x120 768) x545 (x367 x120)))
(define-fun x1336 ((x120 Int)) Int (ite (= x120 800) 1889567281 (x1533 x120)))
(define-fun x1431 ((x120 Int)) Int (ite (and (>= x120 800) (> (+ 32 800) x120)) (x620 (+ (- x120 800) 0)) (x663 x120)))
(define-fun x210 ((x120 Int)) Int (ite (= 864 x120) 0 (x571 x120)))
(define-fun x346 ((x120 Int)) Int (ite (= 928 x120) 0 (x210 x120)))
(define-fun x1124 ((x120 Int)) Int (ite (= 992 x120) 1889567281 (x697 x120)))
(define-fun x933 ((x120 Int)) Int (ite (and (< x120 (+ 992 32)) (>= x120 992)) (x1310 (+ 0 (- x120 992))) (x1120 x120)))
(define-fun x463 ((x120 x550)) Int (ite (and (not x837) x1195) (x388 x120) (x1484 x120)))
(define-fun x1182 ((x120 Int)) Int (ite (and x1195 x1382 x837) (x933 x120) (x1120 x120)))
(define-fun x585 ((x120 Int)) Int (ite (= x120 992) x302 (x639 x120)))
(define-fun x330 ((x120 Int)) Int (ite (= x120 160) x772 (x585 x120)))
(define-fun x1527 ((x120 Int)) Int (ite (= 128 x120) 16 (x330 x120)))
(define-fun x478 ((x120 Int)) Int (ite (= x120 1056) 773487949 (x670 x120)))
(define-fun x865 ((x120 Int)) Int (ite (and (>= x120 1056) (< x120 (+ 1056 32))) (x1448 (+ 0 (- x120 1056))) (x1044 x120)))
(define-fun x843 ((x120 Int)) Int (ite (and x701 x1215 x676) (x865 x120) (x1044 x120)))
(define-fun x586 ((x120 Int)) Int (ite (= 1024 x120) x1526 (x843 x120)))
(define-fun x961 ((x120 Int)) Int (ite (= 1088 x120) 1889567281 (x586 x120)))
(define-fun x729 ((x120 Int)) Int (ite (and (> (+ 1088 32) x120) (<= 1088 x120)) (x1334 (+ (- x120 1088) 0)) (x1269 x120)))
(define-fun x130 ((x120 Int)) Int (ite (and x289 x1174 x1122) (x729 x120) (x1269 x120)))
(define-fun x1045 ((x120 Int)) Int (ite (= 768 x120) x1525 (x1369 x120)))
(define-fun x1468 ((x120 Int)) Int (ite (= x120 864) x25 (x1045 x120)))
(define-fun x736 ((x120 Int)) Int (ite (= 224 x120) x654 (x1468 x120)))
(define-fun x635 ((x120 Int)) Int (ite (= x120 256) x890 (x736 x120)))
(define-fun x109 ((x120 Int)) Int (ite (= x120 160) x227 (x635 x120)))
(define-fun x1034 ((x120 Int)) Int (ite (= x120 128) 16 (x109 x120)))
(define-fun x300 ((x120 Int)) Int (ite (= 160 x120) x229 (x1322 x120)))
(define-fun x1283 ((x120 Int)) Int (ite (= 128 x120) 16 (x300 x120)))
(define-fun x1494 ((x120 Int)) Int (ite (= 160 x120) x973 (x691 x120)))
(define-fun x1282 ((x120 Int)) Int (ite (= 128 x120) 16 (x1494 x120)))
(define-fun x19 ((x120 Int)) Int (ite (and x391 x1068) (x691 x120) (ite (and x1028 x867) (x1322 x120) (x1282 x120))))
(define-fun x809 ((x120 Int)) Int (ite (= x120 160) x488 (x19 x120)))
(define-fun x693 ((x120 Int)) Int (ite (= x120 128) 16 (x809 x120)))
(define-fun x1013 ((x120 Int)) Int (ite (= 160 x120) x1564 (x693 x120)))
(define-fun x879 ((x120 Int)) Int (ite (= x120 128) 16 (x1013 x120)))
(define-fun x1297 ((x120 Int)) Int (ite (and x209 (not x1253)) (x1369 x120) (x879 x120)))
(define-fun x11 ((x120 x550)) Int (ite (= x207 x120) x256 (x1521 x120)))
(define-fun x1441 ((x120 x550)) Int (ite (= (x1326 39) x120) x64 (x11 x120)))
(define-fun x1209 ((x120 x550)) Int (ite (and x391 x1068) (x1521 x120) (ite (and x867 x1028) (x1521 x120) (x1441 x120))))
(define-fun x487 ((x120 x550)) Int (ite (= x120 x578) x404 (x1209 x120)))
(define-fun x789 ((x120 x550)) Int (ite (= x1482 x120) x780 (x487 x120)))
(define-fun x1481 ((x120 x550)) Int (ite (= (x1326 40) x120) x548 (x789 x120)))
(define-fun x1177 ((x120 x550)) Int (ite (and (not x1253) x209) (x1521 x120) (x1481 x120)))
(define-fun x685 ((x120 Int)) Int (ite (= x120 160) x567 (x1297 x120)))
(define-fun x629 ((x120 Int)) Int (ite (= 128 x120) 16 (x685 x120)))
(define-fun x795 ((x120 x550)) Int (ite (= x120 x1079) x875 (x1177 x120)))
(define-fun x521 ((x120 x550)) Int (ite (= (x1326 40) x120) x696 (x795 x120)))
(define-fun x1545 ((x120 Int)) Int (ite (and (not x1389) x1316) (x629 x120) (x670 x120)))
(define-fun x922 ((x120 x550)) Int (ite (and (not x1389) x1316) (x521 x120) (x1521 x120)))
(define-fun x992 ((x120 x550)) Int (ite (and x458 x1285) (x922 x120) (ite (and x267 (not x42)) (x1521 x120) (ite (and (not x837) x1195) (x1521 x120) (x922 x120)))))
(define-fun x455 ((x120 Int)) Int (ite (= 896 x120) x1249 (x1361 x120)))
(define-fun x773 ((x120 Int)) Int (ite (and x458 x1285) (x1361 x120) (ite (and (not x42) x267) (x639 x120) (ite (and x1195 (not x837)) (x697 x120) (x455 x120)))))
(define-fun x251 ((x120 Int)) Int (ite (= x120 928) 1889567281 (x773 x120)))
(define-fun x147 ((x120 Int)) Int (ite (and (> (+ 32 928) x120) (>= x120 928)) (x573 (+ (- x120 928) 0)) (x1069 x120)))
(define-fun x1046 ((x120 Int)) Int (ite (and x1291 x178) (x147 x120) (x1069 x120)))
(define-fun x333 ((x120 Int)) Int (ite (= 768 x120) x208 (x394 x120)))
(define-fun x608 ((x120 Int)) Int (ite (= 352 x120) x1449 (x333 x120)))
(define-fun x1331 ((x120 Int)) Int (ite (= x120 224) 1889567281 (x608 x120)))
(define-fun x44 ((x120 Int)) Int (ite (and (<= 224 x120) (< x120 (+ 32 224))) (x277 (+ 0 (- x120 224))) (x745 x120)))
(define-fun x825 ((x120 Int)) Int (ite (and (not x6) x1437 x1089) (x44 x120) (x745 x120)))
(define-fun x51 ((x120 Int)) Int (ite (= x120 288) x307 (x825 x120)))
(define-fun x1363 ((x120 Int)) Int (ite (= x120 256) x1301 (x868 x120)))
(define-fun x269 ((x120 Int)) Int (ite (= 320 x120) x344 (x1363 x120)))
(define-fun x846 ((x120 Int)) Int (ite (= x120 320) 0 (x868 x120)))
(define-fun x1168 ((x120 Int)) Int (ite (and (not x389) x525) (x269 x120) (x846 x120)))
(define-fun x926 ((x120 Int)) Int (ite (= 416 x120) x293 (x1168 x120)))
(define-fun x1367 ((x120 Int)) Int (ite (= 928 x120) x658 (x552 x120)))
(define-fun x1497 ((x120 Int)) Int (ite (= 928 x120) 0 (x552 x120)))
(define-fun x547 ((x120 Int)) Int (ite (and x1099 (not x506)) (x1367 x120) (x1497 x120)))
(define-fun x9 ((x120 Int)) Int (ite (= x120 736) x1485 (x547 x120)))
(define-fun x329 ((x120 Int)) Int (ite (and (not x1111) x832) (x9 x120) (x394 x120)))
(define-fun x23 ((x120 Int)) Int (ite (and x947 (not x1406)) (x329 x120) (x571 x120)))
(define-fun x97 ((x120 x550)) Int (ite (and (not x1406) x947) (x992 x120) (x1521 x120)))
(define-fun x740 ((x120 x550)) Int (ite (and (not x1406) x947) (ite (and x458 x1285) (x1484 x120) (ite (and (not x42) x267) (x388 x120) (x463 x120))) (x388 x120)))
(define-fun x1025 ((x120 x550)) Int (ite (= (x1326 9) x120) x645 (x97 x120)))
(define-fun x707 ((x120 Int)) Int (ite (= 160 x120) x1504 (x23 x120)))
(define-fun x833 ((x120 Int)) Int (ite (= 128 x120) 7 (x707 x120)))
(define-fun x1286 ((x120 x550)) Int (ite (= x120 x164) x409 (x1025 x120)))
(define-fun x5 ((x120 Int)) Int (ite (= x120 800) x1442 (x833 x120)))
(define-fun x885 ((x120 Int)) Int (ite (= x120 224) x537 (x5 x120)))
(define-fun x1529 ((x120 Int)) Int (ite (= 256 x120) x1502 (x885 x120)))
(define-fun x156 ((x120 Int)) Int (ite (= x120 288) x700 (x1529 x120)))
(define-fun x1340 ((x120 Int)) Int (ite (= x120 384) 4 (x156 x120)))
(define-fun x1312 ((x120 Int)) Int (ite (and (<= 480 x120) (< x120 (+ 4 480))) (x836 (+ (- x120 480) 0)) (x233 x120)))
(define-fun x118 ((x120 Int)) Int (ite (and (not x399) x622 x429) (x1312 x120) (x233 x120)))
(define-fun x706 ((x120 Int)) Int (ite (= x120 x1303) x129 (x118 x120)))
(define-fun x1204 ((x120 Int)) Int (ite (= x120 x953) x667 (x706 x120)))
(define-fun x1135 ((x120 Int)) Int (ite (and (> (+ 32 608) x120) (<= 608 x120)) (x852 (+ 0 (- x120 608))) (x702 x120)))
(define-fun x515 ((x120 Int)) Int (ite (and x748 (not x399) x429) (x1135 x120) (x702 x120)))
(define-fun x534 ((x120 Int)) Int (ite (and (>= x120 320) (< x120 (+ x1501 320))) (x494 (+ 0 (- x120 320))) (x1158 x120)))
(define-fun x486 ((x120 Int)) Int (ite (and x997 x1189 x1208) (x534 x120) (x1158 x120)))
(define-fun x683 ((x120 Int)) Int (ite (= x120 800) x279 (x486 x120)))
(define-fun x103 ((x120 Int)) Int (ite (= x120 832) x370 (x683 x120)))
(define-fun x948 ((x120 Int)) Int (ite (= 800 x120) x71 (x103 x120)))
(define-fun x415 ((x120 Int)) Int (x628 x120))
(define-fun x1179 ((x120 Int)) Int (ite (and (> (+ 4 28) x120) (>= x120 28)) (x628 (+ 0 (- x120 28))) (x595 x120)))
(define-fun x462 ((x120 Int)) Int (ite (= x120 640) x1159 (x1179 x120)))
(define-fun x163 ((x120 Int)) Int (ite (= 672 x120) x817 (x462 x120)))
(define-fun x943 ((x120 Int)) Int (ite (= x120 704) 1 (x163 x120)))
(define-fun x1404 ((x120 Int)) Int (ite (= x120 160) x817 (x145 x120)))
(define-fun x664 ((x120 Int)) Int (ite (= 128 x120) 7 (x1404 x120)))
(define-fun x375 ((x120 Int)) Int (ite (= 736 x120) x764 (x664 x120)))
(define-fun x514 ((x120 Int)) Int (ite (and x1466 (not x237) (not x549)) (x145 x120) (x375 x120)))
(define-fun x1505 ((x120 Int)) Int (ite (= x120 160) x817 (x514 x120)))
(define-fun x539 ((x120 Int)) Int (ite (= x120 128) 7 (x1505 x120)))
(define-fun x426 ((x120 Int)) Int (ite (= 800 x120) x1350 (x1161 x120)))
(define-fun x775 ((x120 Int)) Int (ite (= 224 x120) 1889567281 (x1161 x120)))
(define-fun x1333 ((x120 Int)) Int (ite (and (> (+ 32 224) x120) (>= x120 224)) (x309 (+ (- x120 224) 0)) (x436 x120)))
(define-fun x679 ((x120 Int)) Int (ite (and x601 x1030 x987) (x1333 x120) (x436 x120)))
(define-fun x983 ((x120 Int)) Int (ite (= 288 x120) x665 (x679 x120)))
(define-fun x1196 ((x120 Int)) Int (ite (= 256 x120) x924 (x954 x120)))
(define-fun x203 ((x120 Int)) Int (ite (= x120 320) x219 (x1196 x120)))
(define-fun x46 ((x120 Int)) Int (ite (= 320 x120) 0 (x954 x120)))
(define-fun x511 ((x120 Int)) Int (ite (and (not x1057) x958) (x203 x120) (x46 x120)))
(define-fun x69 ((x120 Int)) Int (ite (= 384 x120) x197 (x511 x120)))
(define-fun x428 ((x120 Int)) Int (ite (= 800 x120) x216 (x69 x120)))
(define-fun x1116 ((x120 Int)) Int (ite (and x36 (not x1392)) (x428 x120) (x426 x120)))
(define-fun x766 ((x120 Int)) Int (ite (= x120 768) x1453 (x1116 x120)))
(define-fun x240 ((x120 Int)) Int (ite (= x120 800) 1889567281 (x766 x120)))
(define-fun x235 ((x120 Int)) Int (ite (and (< x120 (+ 800 32)) (<= 800 x120)) (x788 (+ 0 (- x120 800))) (x1563 x120)))
(define-fun x1439 ((x120 Int)) Int (ite (= x120 864) 0 (x649 x120)))
(define-fun x779 ((x120 Int)) Int (ite (= 928 x120) 0 (x1439 x120)))
(define-fun x1479 ((x120 Int)) Int (ite (= x120 992) 1889567281 (x606 x120)))
(define-fun x8 ((x120 Int)) Int (ite (and (> (+ 992 32) x120) (<= 992 x120)) (x1370 (+ (- x120 992) 0)) (x3 x120)))
(define-fun x180 ((x120 x550)) Int (ite (and x1136 (not x224)) (x388 x120) (x1040 x120)))
(define-fun x1115 ((x120 Int)) Int (ite (and x224 x1136 x406) (x8 x120) (x3 x120)))
(define-fun x1118 ((x120 Int)) Int (ite (= 992 x120) x100 (x312 x120)))
(define-fun x342 ((x120 Int)) Int (ite (= 160 x120) x847 (x1118 x120)))
(define-fun x528 ((x120 Int)) Int (ite (= 128 x120) 16 (x342 x120)))
(define-fun x15 ((x120 Int)) Int (ite (= 1056 x120) 773487949 (x169 x120)))
(define-fun x1070 ((x120 Int)) Int (ite (and (> (+ 32 1056) x120) (<= 1056 x120)) (x916 (+ 0 (- x120 1056))) (x591 x120)))
(define-fun x1407 ((x120 Int)) Int (ite (and x709 x1088 x78) (x1070 x120) (x591 x120)))
(define-fun x1327 ((x120 Int)) Int (ite (= 1024 x120) x152 (x1407 x120)))
(define-fun x951 ((x120 Int)) Int (ite (= x120 1088) 1889567281 (x1327 x120)))
(define-fun x68 ((x120 Int)) Int (ite (and (<= 1088 x120) (< x120 (+ 32 1088))) (x944 (+ (- x120 1088) 0)) (x62 x120)))
(define-fun x1207 ((x120 Int)) Int (ite (and x469 x45 x626) (x68 x120) (x62 x120)))
(define-fun x444 ((x120 Int)) Int (ite (= 768 x120) x54 (x126 x120)))
(define-fun x786 ((x120 Int)) Int (ite (= x120 864) x1254 (x444 x120)))
(define-fun x873 ((x120 Int)) Int (ite (= x120 224) x107 (x786 x120)))
(define-fun x1295 ((x120 Int)) Int (ite (= x120 256) x939 (x873 x120)))
(define-fun x1562 ((x120 Int)) Int (ite (= x120 160) x1539 (x1295 x120)))
(define-fun x738 ((x120 Int)) Int (ite (= x120 128) 16 (x1562 x120)))
(define-fun x931 ((x120 Int)) Int (ite (= 160 x120) x199 (x398 x120)))
(define-fun x1290 ((x120 Int)) Int (ite (= 128 x120) 16 (x931 x120)))
(define-fun x1113 ((x120 Int)) Int (ite (= x120 160) x1176 (x72 x120)))
(define-fun x1131 ((x120 Int)) Int (ite (= 128 x120) 16 (x1113 x120)))
(define-fun x182 ((x120 Int)) Int (ite (and x758 x1082) (x72 x120) (ite (and x925 x1162) (x398 x120) (x1131 x120))))
(define-fun x1042 ((x120 Int)) Int (ite (= x120 160) x970 (x182 x120)))
(define-fun x1443 ((x120 Int)) Int (ite (= x120 128) 16 (x1042 x120)))
(define-fun x95 ((x120 Int)) Int (ite (= x120 160) x632 (x1443 x120)))
(define-fun x1114 ((x120 Int)) Int (ite (= x120 128) 16 (x95 x120)))
(define-fun x1108 ((x120 Int)) Int (ite (and (not x822) x1023) (x126 x120) (x1114 x120)))
(define-fun x1022 ((x120 x550)) Int (ite (= x1426 x120) x1364 (x1163 x120)))
(define-fun x630 ((x120 x550)) Int (ite (= (x1326 39) x120) x940 (x1022 x120)))
(define-fun x688 ((x120 x550)) Int (ite (and x1082 x758) (x1163 x120) (ite (and x1162 x925) (x1163 x120) (x630 x120))))
(define-fun x615 ((x120 x550)) Int (ite (= x120 x490) x476 (x688 x120)))
(define-fun x678 ((x120 x550)) Int (ite (= x120 x588) x1511 (x615 x120)))
(define-fun x895 ((x120 x550)) Int (ite (= (x1326 40) x120) x1471 (x678 x120)))
(define-fun x350 ((x120 x550)) Int (ite (and x1023 (not x822)) (x1163 x120) (x895 x120)))
(define-fun x173 ((x120 Int)) Int (ite (= 160 x120) x105 (x1108 x120)))
(define-fun x921 ((x120 Int)) Int (ite (= 128 x120) 16 (x173 x120)))
(define-fun x1551 ((x120 x550)) Int (ite (= x120 x1451) x1232 (x350 x120)))
(define-fun x1153 ((x120 x550)) Int (ite (= (x1326 40) x120) x1141 (x1551 x120)))
(define-fun x1104 ((x120 Int)) Int (ite (and (not x454) x749) (x921 x120) (x169 x120)))
(define-fun x432 ((x120 x550)) Int (ite (and (not x454) x749) (x1153 x120) (x1163 x120)))
(define-fun x946 ((x120 x550)) Int (ite (and x932 x625) (x432 x120) (ite (and x20 (not x249)) (x1163 x120) (ite (and x1136 (not x224)) (x1163 x120) (x432 x120)))))
(define-fun x304 ((x120 Int)) Int (ite (= 896 x120) x335 (x483 x120)))
(define-fun x986 ((x120 Int)) Int (ite (and x625 x932) (x483 x120) (ite (and x20 (not x249)) (x312 x120) (ite (and (not x224) x1136) (x606 x120) (x304 x120)))))
(define-fun x1402 ((x120 Int)) Int (ite (= x120 928) 1889567281 (x986 x120)))
(define-fun x1438 ((x120 Int)) Int (ite (and (<= 928 x120) (< x120 (+ 928 32))) (x1096 (+ 0 (- x120 928))) (x605 x120)))
(define-fun x484 ((x120 Int)) Int (ite (and x596 x246) (x1438 x120) (x605 x120)))
(define-fun x1255 ((x120 Int)) Int (ite (= x120 768) x884 (x290 x120)))
(define-fun x1506 ((x120 Int)) Int (ite (= 352 x120) x1358 (x1255 x120)))
(define-fun x281 ((x120 Int)) Int (ite (= x120 224) 1889567281 (x1506 x120)))
(define-fun x856 ((x120 Int)) Int (ite (and (< x120 (+ 224 32)) (<= 224 x120)) (x1275 (+ (- x120 224) 0)) (x919 x120)))
(define-fun x198 ((x120 Int)) Int (ite (and (not x1480) x241 x888) (x856 x120) (x919 x120)))
(define-fun x491 ((x120 Int)) Int (ite (= 288 x120) x1383 (x198 x120)))
(define-fun x411 ((x120 Int)) Int (ite (= x120 256) x211 (x1329 x120)))
(define-fun x1263 ((x120 Int)) Int (ite (= x120 320) x1287 (x411 x120)))
(define-fun x273 ((x120 Int)) Int (ite (= 320 x120) 0 (x1329 x120)))
(define-fun x1202 ((x120 Int)) Int (ite (and x820 (not x371)) (x1263 x120) (x273 x120)))
(define-fun x1273 ((x120 Int)) Int (ite (= 416 x120) x581 (x1202 x120)))
(define-fun x194 ((x120 Int)) Int (ite (= 928 x120) x1080 (x1456 x120)))
(define-fun x123 ((x120 Int)) Int (ite (= x120 928) 0 (x1456 x120)))
(define-fun x311 ((x120 Int)) Int (ite (and x392 (not x1399)) (x194 x120) (x123 x120)))
(define-fun x471 ((x120 Int)) Int (ite (= 736 x120) x1325 (x311 x120)))
(define-fun x177 ((x120 Int)) Int (ite (and x1477 (not x1170)) (x471 x120) (x290 x120)))
(define-fun x673 ((x120 x550)) Int (ite (and (not x708) x763) (ite (and x625 x932) (x1040 x120) (ite (and (not x249) x20) (x388 x120) (x180 x120))) (x388 x120)))
(define-fun x1430 ((x120 x550)) Int (ite (and (not x708) x763) (x946 x120) (x1163 x120)))
(define-fun x1393 ((x120 Int)) Int (ite (and x763 (not x708)) (x177 x120) (x649 x120)))
(define-fun x466 ((x120 x550)) Int (ite (= (x1326 9) x120) x1307 (x1430 x120)))
(define-fun x1230 ((x120 Int)) Int (ite (= x120 160) x817 (x1393 x120)))
(define-fun x1248 ((x120 Int)) Int (ite (= 128 x120) 7 (x1230 x120)))
(define-fun x830 ((x120 x550)) Int (ite (= x26 x120) x918 (x466 x120)))
(define-fun x117 ((x120 Int)) Int (ite (= x120 800) x1020 (x1248 x120)))
(define-fun x634 ((x120 Int)) Int (ite (= 224 x120) x897 (x117 x120)))
(define-fun x650 ((x120 Int)) Int (ite (= x120 256) x565 (x634 x120)))
(define-fun x150 ((x120 Int)) Int (ite (= 288 x120) x149 (x650 x120)))
(define-fun x157 ((x120 Int)) Int (ite (= x120 384) 4 (x150 x120)))
(define-fun x1123 ((x120 Int)) Int (ite (and (<= 480 x120) (< x120 (+ 4 480))) (x1419 (+ 0 (- x120 480))) (x520 x120)))
(define-fun x1408 ((x120 Int)) Int (ite (and (not x1103) x1262 x1058) (x1123 x120) (x520 x120)))
(define-fun x272 ((x120 Int)) Int (ite (= x1225 x120) x1355 (x1408 x120)))
(define-fun x761 ((x120 Int)) Int (ite (= x120 x1417) x589 (x272 x120)))
(define-fun x362 ((x120 Int)) Int (ite (and (> (+ 608 32) x120) (<= 608 x120)) (x297 (+ 0 (- x120 608))) (x239 x120)))
(define-fun x996 ((x120 Int)) Int (ite (and (not x1103) x1262 x1362) (x362 x120) (x239 x120)))
(define-fun x1062 ((x120 Int)) Int (ite (and (> (+ x421 320) x120) (>= x120 320)) (x80 (+ (- x120 320) 0)) (x1216 x120)))
(define-fun x308 ((x120 Int)) Int (ite (and x671 x1429 x881) (x1062 x120) (x1216 x120)))
(define-fun x1193 ((x120 Int)) Int (ite (= x120 800) x67 (x308 x120)))
(define-fun x524 ((x120 Int)) Int (ite (= 832 x120) x583 (x1193 x120)))
(define-fun x1064 ((x120 Int)) Int (ite (= x120 800) x154 (x524 x120)))
(define-fun x669 ((x1271 Int)) Bool (=> (and (not (= x1271 2681579215)) (not (= x1271 1401663147)) (not (= 1977493762 x1271)) (not (= x1271 2052391781)) (not (= 348537858 x1271)) (not (= 1020253707 x1271)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1271)) (not (= 4267106866 x1271)) (not (= x1271 599290589)) (not (= x1271 3963136098)) (not (= x1271 2316151882)) (> x1271 10000) (not (= 596573372 x1271)) (not (= x1271 773487949)) (not (= x1271 1461501637330902918203684832716283019655932542975)) (not (= 157198259 x1271)) (not (= x1271 3092021830)) (not (= 1000000000000000000 x1271)) (not (= 629314576 x1271)) (not (= x1271 2835717307)) (not (= x1271 1851080549)) (not (= x1271 3065339685)) (not (= 464926286 x1271)) (not (= x1271 4294967296)) (not (= x1271 274184521717934524641157099916833587200)) (not (= 1888058147 x1271)) (not (= x1271 1889567281)) (not (= x1271 2757214935)) (not (= 2780307423 x1271)) (not (= x1271 3567397854)) (not (= 31576340 x1271)) (not (= x1271 2484372501)) (not (= 2209625481 x1271)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1271)) (not (= x1271 3184006219)) (not (= 3296657447 x1271)) (not (= 3504541104 x1271)) (not (= x1271 2869116585)) (not (= 961581905 x1271))) (not ((_ is x1326) (x516 x1271)))))
(assert (x1276 x1325))
(assert (x1276 x75))
(assert (= (x902 736) (x472 736)))
(assert (= (x1283 736) (x691 736)))
(assert (= (=> (and (= (x1369 1024) x905) (= x1253 (> x905 0)) (= (x887 (- x1311 x1259)) x104)) (and (=> (not x1253) x1373) (=> x1253 x40))) x579))
(assert (x1276 x1475))
(assert (x1276 x1128))
(assert (x1276 x1012))
(assert (= (x951 352) (x62 352)))
(assert (x1276 x1001))
(assert (= (x233 320) (x1340 320)))
(assert (x1276 x260))
(assert (= (x233 256) (x1340 256)))
(assert (x1276 x197))
(assert (x1276 x208))
(assert (= (x482 672) (x1061 672)))
(assert (x1276 x1462))
(assert (= (x290 352) (x484 352)))
(assert (=> (>= 10000 (x482 160)) (= (x1326 (x482 160)) (x516 (x482 160)))))
(assert (x1276 x418))
(assert (= (x516 1889567281) (x1326 1889567281)))
(assert (x1276 x975))
(assert (= (x290 320) (x484 320)))
(assert (= 0 (x348 320)))
(assert (x1276 x325))
(assert (= (or (and x1063 x250) (and x389 x525) (and x200 x189) (and x533 x1235) (and x1437 x6) (and x756 x684) (and x1389 x1316) (and x938 x675) (and x174 x798) (and x59 x1223) (and x543 x677) (and (not x1084) x1371) (and x176 x1379) (and (not x603) x1240) (and x289 (not x1122)) (and x832 x1111) (and x774 x969) (and x1173 x58) (and x1478 (not x1403)) (and (not x950) x319) (and x1397 (not x796)) (and x282 x341) (and x1043 (not x276)) (and x955 x1172) (and x600 x79) (and x522 x535) (and x55 x1206) (and x576 (not x1213)) (and (not x1217) x1050) (and x904 x331) (and x997 (not x1208)) (and x1535 x337) (and x1099 x506) (and x947 x1406) (and x1237 x594) (and x1488 x116) (and x172 (not x869)) (and (not x1110) x609) (and x47 x1155) (and x577 x519) (and x1071 x323) (and x935 (not x512)) (and x1289 x984) (and x956 x1201) (and x835 x744) (and x7 (not x1554)) (and x419 (not x1447)) (and x945 (not x1270)) (and x435 x84) (and x551 x1390) (and x1542 x1049) (and x1423 (not x1328)) (and x1318 x1401) (and x395 x1021) (and x1344 x136) (and x429 x399) (and x668 x920) (and x438 x1446)) x132))
(assert (x1276 x1525))
(assert (= (x1115 928) (x312 928)))
(assert (= (x478 352) (x1044 352)))
(assert (x1276 x266))
(assert (x1276 x1519))
(assert (= (x145 704) (x943 704)))
(assert (= (x398 320) (x738 320)))
(assert (x1276 x414))
(assert (= x572 (and x883 (not x134))))
(assert (= (=> (and (= (x238 (+ x864 x860)) x1033) (= (> x860 x1033) x914) (= (x198 224) x860) (= (x946 (x1326 40)) x864)) (and (=> x914 x907) (=> (not x914) x1332))) x541))
(assert (= (x1479 768) (x3 768)))
(assert (= 2757214935 (x794 (x1326 2757214935))))
(assert (x1276 x100))
(assert (= (x1061 640) (x482 640)))
(assert (= x1380 (=> (and (= (x1168 320) x188) (= x176 (> x188 x202))) (and (=> x176 x728) (=> (not x176) x1102)))))
(assert (= (x761 736) (x239 736)))
(assert (= (=> (and (= (< 10000 x193) x237) (= x903 (x943 640)) (= (x145 704) x193)) (and (=> x237 x907) (=> (and (= (x145 736) x713) (not x237) (or (and (= (x343 (x516 (x664 128)) (x516 (x664 160)) 0) x824) x549 (= (x1163 x824) x764)) (not x549)) (= (= x713 115792089237316195423570985008687907853269984665640564039457584007913129639935) x549)) x1192))) x467))
(assert (=> (<= x146 10000) (= (x516 x146) (x1326 x146))))
(assert (= (and x139 x624) x1293))
(assert (= (x951 864) (x62 864)))
(assert (= (x1163 x824) (ite (= x824 (x1326 0)) 1 (x422 x824))))
(assert (= (x1361 320) (x1545 320)))
(assert (x1276 x814))
(assert (x1276 x1526))
(assert (= (x1521 (x1326 40)) (ite (= (x1326 0) (x1326 40)) 1 (x422 (x1326 40)))))
(assert (x1276 x875))
(assert (x1276 x502))
(assert (x1276 x148))
(assert (= (x233 736) (x1340 736)))
(assert (= x165 (x1456 384)))
(assert (= (x670 320) (x1527 320)))
(assert (= (x126 768) (x1207 768)))
(assert (= (x1527 704) (x670 704)))
(assert (x1276 x48))
(assert (= x1461 (=> (and (= (x679 224) x347) (= (> x347 x778) x13) (= x778 (x238 (+ x1337 x347))) (= x1337 (x1163 (x1326 40)))) (and (=> (not x13) x554) (=> x13 x907)))))
(assert (= x544 (=> (and (= x1462 (x1022 (x1326 39))) (= (x1131 320) x712) (= x447 (> x712 x1462)) (= (x887 (- x396 x1534)) x1364)) (and (=> x447 x907) (=> (and (not x447) (= (x887 (- x1462 x712)) x940)) x853)))))
(assert (x1276 x199))
(assert (x1276 x819))
(assert (= (ite (and x245 x689) (x235 672) (x1563 672)) (x649 672)))
(assert (x1276 x732))
(assert (= (and (not x1014) x1372) x1472))
(assert (= x1004 (=> (= x523 (> x497 31)) (and (=> x523 x231) (=> (not x523) x907)))))
(assert (x1276 x831))
(assert (= (x1521 x164) (ite (= (x1326 0) x164) 1 (x422 x164))))
(assert (= (=> (and (= (div x1538 x928) x338) (= (ite (> x338 x1184) x1184 x338) x502) (= x1184 (x1521 x236)) (= x1029 (x691 320)) (= (x1322 224) x229) (= x1068 (= x1029 0)) (= (x343 (x516 (x1283 128)) (x516 (x1283 160)) 0) x83) (= (x500 x83 2) x236)) (and (=> x1068 x1076) (=> (not x1068) x782))) x672))
(assert (x1276 x305))
(assert (=> (>= 10000 (x1290 128)) (= (x516 (x1290 128)) (x1326 (x1290 128)))))
(assert (= (x1521 (x516 x146)) (ite (= (x1326 0) (x516 x146)) 1 (x422 (x516 x146)))))
(assert (= (=> (and (= (x1104 928) x584) (= x443 (x238 (+ 1 x584))) (= x625 (= 20 x443))) (and (=> x625 x212) (=> (not x625) x517))) x1420))
(assert (= (x1326 1000000000000000000) (x516 1000000000000000000)))
(assert (x1276 x1417))
(assert (= (x1158 320) (x515 320)))
(assert (= (x436 224) (x775 224)))
(assert (= x602 (and x1023 x822)))
(assert (= (x1061 320) (x482 320)))
(assert (= (x794 (x1326 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= (x794 (x516 (x482 128))) (x482 128)))
(assert (= (x591 320) (x15 320)))
(assert (= x40 (=> (and (= (x1369 768) x968) (= (< x968 x425) x577) (= x425 (x1369 1024))) (and (=> (not x577) x287) (=> x577 x728)))))
(assert (x1276 x827))
(assert (= (=> (and (not (= 3065339685 x383)) (not (= 1401663147 x383)) (not (= 2209625481 x383)) (not (= 3184006219 x383)) (not (= 31576340 x383)) (not (= 1888058147 x383)) (not (= x383 961581905)) (not (= 2835717307 x383)) (not (= x383 2681579215)) (not (= x383 2869116585)) (not (= 2052391781 x383)) (not (= 596573372 x383)) (not (= 3963136098 x383)) (= (< 0 x400) x938) (not (= x383 3504541104)) (= x383 773487949) (not (= x383 3296657447)) (not (= x383 2484372501)) (not (= x383 1020253707)) (not (= 464926286 x383)) (not (= 2757214935 x383)) (not (= x383 4267106866)) (not (= x383 157198259)) (not (= 1977493762 x383)) (not (= x383 348537858)) (not (= 2780307423 x383)) (not (= x383 2316151882)) (not (= 3092021830 x383)) (not (= x383 629314576)) (= (x422 (x1326 0)) x400) (not (= 599290589 x383)) (not (= 1851080549 x383)) (not (= 3567397854 x383))) (and (=> x938 x728) (=> (not x938) x369))) x1556))
(assert (= (=> (and (= (x311 928) x1325) (= (< x468 x882) x1170) (= x468 (x471 640)) (= x882 (x471 736))) (and (=> x1170 x907) (=> (not x1170) x1188))) x739))
(assert (x1276 x1536))
(assert (= (x484 736) (x290 736)))
(assert (x1276 x1151))
(assert (x1276 x206))
(assert (= (and (not x1237) x594) x1344))
(assert (= (x552 352) (x926 352)))
(assert (= (x1326 157198259) (x516 157198259)))
(assert (= (=> (and (not (> 4 x807)) (= x1138 (< 0 x326)) (= (x1222 (x516 274184521717934524641157099916833587200)) x998) (< 0 x998)) (and (=> (not x1138) x21) (=> x1138 x907))) x1191))
(assert (= (x794 (x516 (x528 128))) (x528 128)))
(assert (= (x902 704) (x472 704)))
(assert (= (x1340 768) (x233 768)))
(assert (x1276 x193))
(assert (x1276 x696))
(assert (x1276 x1425))
(assert (x669 x153))
(assert (= x1474 (=> (= (< 0 x710) x291) (and (=> (not x291) x907) (=> x291 x1098)))))
(assert (= (x1545 768) (x1361 768)))
(assert (= (and x869 x172) x289))
(assert (= (x794 (x1326 2316151882)) 2316151882))
(assert (=> (<= (x112 160) 10000) (= (x1326 (x112 160)) (x516 (x112 160)))))
(assert (x669 (x1034 128)))
(assert (= (x794 (x1326 2869116585)) 2869116585))
(assert (= (x1331 640) (x745 640)))
(assert (x1276 x159))
(assert (x1276 x373))
(assert (= x958 (and x420 (not x28))))
(assert (x1276 x1221))
(assert (= x1234 (=> (and (= x987 (< 0 x1007)) (= x1007 (x1163 (x1326 9))) (= x298 (x539 736))) (and (=> (and (not x987) (= (x1161 352) x1350)) x252) (=> (and (= x1205 (x1161 352)) x987 (or (and (not x1030) (= x1323 x461)) (and x1030 (= x461 1) (> 4294967296 x674))) (= (< 0 x1323) x1030)) x1491)))))
(assert (= x1486 x964))
(assert (= (and x1136 x224) x917))
(assert (x669 (x879 128)))
(assert (x1276 x448))
(assert (x1276 x365))
(assert (= x982 (and x512 x935)))
(assert (= (=> (and (<= 0 x266) (>= 1461501637330902918203684832716283019655932542975 x1414) (>= 1461501637330902918203684832716283019655932542975 x266) (= x266 x817) (= x817 x1376) (> x807 35) (= x1378 x1159) (<= x1054 1461501637330902918203684832716283019655932542975) (= x1414 x908) (= x908 x529) (= x170 (not x1274)) (<= 0 x1054) (= x813 x52) (= x1274 x1130) (>= x790 0) (>= 1461501637330902918203684832716283019655932542975 x803) (<= 0 x1414) (= x385 (not (= x52 x1376))) (>= 1461501637330902918203684832716283019655932542975 x790) (= (<= x807 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (= x243 x1054) (= x817 x803) (<= 0 x803) x385) x1191) x111))
(assert (= (=> (and (= x164 (x343 (x516 (x833 128)) (x516 (x833 160)) 0)) (= x399 (< x1405 x82)) (= (x1025 x164) x1405) (= x645 (x887 (- x38 x783))) (= x82 (x833 736))) (and (=> (and (= (x706 288) x667) (= (x702 224) x900) (= (x885 672) x1502) (= (x833 736) x1442) (= (x238 (+ 512 x1238)) x953) (= x537 (x1286 (x1326 10))) (= (> x1086 0) x622) (= x1238 (x118 384)) (= x748 (< 0 x299)) (or (and x622 (> 4294967296 x1368)) (not x622)) (or (not x748) (and x1094 (= x354 (x740 (x516 274184521717934524641157099916833587200))) x748 x981 (= x621 (x740 (x516 x900))) (= x981 (= (x456 (x516 x900)) x621)) (= (>= (x456 (x516 274184521717934524641157099916833587200)) x354) x1094) (> 4294967296 x204))) (not x399) (= (x1529 768) x700) (= (x887 (- x1405 x82)) x409) (= x1303 (x238 (+ 480 x1238))) (= x129 (x118 256)) (= x662 (x238 (+ x1238 64)))) x1256) (=> x399 x728))) x1421))
(assert (x1276 x503))
(assert (= x633 (=> (and (= x999 (x868 224)) (= (> 1000000000000000000 x999) x652)) (and (=> x652 x769) (=> (not x652) x1380)))))
(assert (x1276 x1105))
(assert (= (x15 960) (x591 960)))
(assert (= (x233 224) (x1340 224)))
(assert (= (=> (and (= x1119 (x290 768)) (= x1265 (> x1119 x733)) (= (x484 928) x1499) (= x733 (x290 896))) (and (=> (not x1265) x1188) (=> x1265 x185))) x891))
(assert (= (x72 320) x814))
(assert (x1276 x301))
(assert (= (x1331 224) (x745 224)))
(assert (x1276 x214))
(assert (= (x398 896) (x738 896)))
(assert (x1276 x937))
(assert (= (=> (= (< 31 x827) x512) (and (=> (not x512) x728) (=> x512 x122))) x143))
(assert (= (x1283 224) (x691 224)))
(assert (= (x1069 352) (x251 352)))
(assert (x1276 x328))
(assert (x1276 x497))
(assert (= (x663 352) (x1336 352)))
(assert (= (x1044 736) (x478 736)))
(assert (x1276 x1260))
(assert (= (x1290 160) (x794 (x516 (x1290 160)))))
(assert (= (ite (and x689 x245) (x235 352) (x1563 352)) (x649 352)))
(assert (= (x761 768) (x239 768)))
(assert (x1276 x1504))
(assert (= (x1115 320) (x312 320)))
(assert (x1276 x803))
(assert (= (x794 (x500 x191 6)) (+ (x794 x191) 6)))
(assert (= (x346 864) (x697 864)))
(assert (= (x1120 928) (x1124 928)))
(assert (=> (<= (x879 160) 10000) (= (x516 (x879 160)) (x1326 (x879 160)))))
(assert (= x1136 (and x1520 x1398)))
(assert (= x889 (and x1162 (not x925))))
(assert (= (and (not x1068) x391) x668))
(assert (= (x605 352) (x1402 352)))
(assert (= (x516 4267106866) (x1326 4267106866)))
(assert (x1276 x1341))
(assert (= (x879 160) (x794 (x516 (x879 160)))))
(assert (= (x1163 (x1326 40)) (ite (= (x1326 0) (x1326 40)) 1 (x422 (x1326 40)))))
(assert (x1276 x994))
(assert (= (x951 960) (x62 960)))
(assert (= (x1340 384) (x233 384)))
(assert (= (x697 352) (x346 352)))
(assert (= (x1326 2780307423) (x516 2780307423)))
(assert (= 274184521717934524641157099916833587200 (x794 (x1326 274184521717934524641157099916833587200))))
(assert (= x1541 (=> (and (= x201 (x1456 384)) (= (x887 (- x531 x785)) x581) (= (x1273 416) x165) (= x812 (< 0 x201))) (and (=> (not x812) x739) (=> x812 x504)))))
(assert (= (x639 640) (x1182 640)))
(assert (= (x520 288) (x157 288)))
(assert (= (ite (and x245 x689) (x235 320) (x1563 320)) (x649 320)))
(assert (= (x1456 864) (x1273 864)))
(assert (= x601 (and x125 x274)))
(assert (= (and x1052 (not x648)) x1466))
(assert (= x1396 (=> (= x276 (> x1549 31)) (and (=> x276 x962) (=> (not x276) x728)))))
(assert (= x125 (and x1017 (not x1002))))
(assert (= (=> (and (= x1335 (div x1190 x258)) (= (= 0 (ite x1077 1 0)) x1508) (= x1190 (mod (* x258 x971) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= x258 0) x1210) (= x1077 (or x1366 x1210)) (= x1366 (= x1335 x971)) (= (x238 (+ x503 x1281)) x971)) (and (=> (not x1508) x1143) (=> x1508 x907))) x561))
(assert (= (x169 896) (x528 896)))
(assert (= (x1069 928) (x251 928)))
(assert (= (x312 896) (x1115 896)))
(assert (= (=> (= x1359 (> x327 0)) (and (=> (not x1359) x907) (=> x1359 x358))) x1498))
(assert (x1276 x632))
(assert (x1276 x646))
(assert (x1276 x897))
(assert (x1276 x733))
(assert (x1276 x725))
(assert (= x962 (=> (and (= (x238 (+ x751 x518)) x214) (= x116 (> x751 x214)) (= x751 (x825 224)) (= (x992 (x1326 40)) x518)) (and (=> (not x116) x318) (=> x116 x728)))))
(assert (= (+ 6 (x794 x1140)) (x794 (x500 x1140 6))))
(assert (= (x516 1977493762) (x1326 1977493762)))
(assert (x1276 x216))
(assert (x669 (x664 128)))
(assert (x1276 x751))
(assert (x1276 x1460))
(assert (= (x516 31576340) (x1326 31576340)))
(assert (= 3504541104 (x794 (x1326 3504541104))))
(assert (x1276 x845))
(assert (x1276 x908))
(assert (= x34 (=> (and (= x54 (x887 (- x768 x614))) (= x284 (x238 (+ x687 x759))) (= (x444 864) x687) (= x802 (< x284 x687)) (= (x444 1024) x759)) (and (=> x802 x907) (=> (not x802) x1152)))))
(assert (x1276 x433))
(assert (= (x394 896) x1374))
(assert (= (x3 640) (x1479 640)))
(assert (= (ite (= (x1326 39) (x1326 0)) 1 (x422 (x1326 39))) (x1521 (x1326 39))))
(assert (x669 (x1248 128)))
(assert (= (+ (x794 x699) 6) (x794 (x500 x699 6))))
(assert (= (=> (and (= x175 (> x1112 x1394)) (= x1112 (x1163 (x1326 41))) (= (x238 (+ x347 x1337)) x665) (= x1242 (x983 288))) (and (=> x175 x907) (=> (not x175) x1219))) x554))
(assert (x1276 x680))
(assert (= (x1115 768) (x312 768)))
(assert (= x397 (=> (and (or (and (not x178) (= x206 x186)) (and (= x206 1) x178 (< x442 4294967296))) (= (> x186 0) x178)) x1411)))
(assert (x669 (x1527 160)))
(assert (=> (<= (x664 128) 10000) (= (x1326 (x664 128)) (x516 (x664 128)))))
(assert (= (x126 352) (x1207 352)))
(assert (= (x1545 864) (x1361 864)))
(assert (= (=> (and (= (x308 736) x67) (= (x524 768) x154) (= x1246 false) (= (x1064 800) x1220) (= (x1193 768) x583)) x24) x1354))
(assert (= (x72 256) (x1290 256)))
(assert (= (=> (and (= x1311 (x130 1088)) (= x1021 (> x1259 x1311)) (= x1259 (x130 960))) (and (=> x1021 x728) (=> (not x1021) x579))) x138))
(assert (x1276 x243))
(assert (x1276 x149))
(assert (= (x691 928) (x1283 928)))
(assert (x1276 x1141))
(assert (= (=> (and (= x1487 (x887 (- x1394 x1112))) (= x949 (= x179 x1006)) (= (mod (* x179 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1425) (= (or x949 x1233) x195) (= x179 (x1163 (x1326 44))) (= (= (ite x195 1 0) 0) x1003) (= x1006 (div x1425 x1487)) (= (= 0 x1487) x1233)) (and (=> x1003 x907) (=> (not x1003) x1465))) x1219))
(assert (=> (<= (x693 160) 10000) (= (x1326 (x693 160)) (x516 (x693 160)))))
(assert (= (=> (= x1328 (> x732 0)) (and (=> (not x1328) x728) (=> x1328 x143))) x66))
(assert (= x689 x913))
(assert (= (x951 1024) (x62 1024)))
(assert (= (ite (= (x1326 0) (x1326 10)) 1 (x422 (x1326 10))) (x1521 (x1326 10))))
(assert (= (x868 352) (x51 352)))
(assert (x1276 x268))
(assert (= (and x395 (not x1021)) x209))
(assert (x669 (x738 128)))
(assert (= x485 (and (not x1203) x106)))
(assert (x669 x87))
(assert (= (x794 (x516 x714)) x714))
(assert (= (and (not x914) x880) x883))
(assert (x1276 x721))
(assert (x1276 x1544))
(assert (= x81 (=> (and (= x141 (= x1205 0)) (= (x69 384) x1250) (= (= x499 x1250) x166) (= (div x941 x1205) x499) (= (or x166 x141) x923) (= (mod (* x1205 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x941) (= x248 (= 0 (ite x923 1 0))) (= x197 (x887 (- x1242 x1012)))) (and (=> x248 x907) (=> (not x248) x1187)))))
(assert (= x893 (=> (= (< 0 x303) x603) (and (=> (not x603) x728) (=> x603 x1264)))))
(assert (= (x1521 x1055) (ite (= (x1326 0) x1055) 1 (x422 x1055))))
(assert (= x576 (and x192 x417)))
(assert (= (x1527 640) (x670 640)))
(assert (= (x961 1024) (x1269 1024)))
(assert (x1276 x1487))
(assert (x1276 x1422))
(assert (x1276 x17))
(assert (x1276 x335))
(assert (= (=> (and (= x192 (< 0 x255)) (= x255 (x486 320))) (and (=> (not x192) x41) (=> x192 x1524))) x403))
(assert (= (=> (and (= x1132 (x1207 1088)) (= (< x1132 x1036) x747) (= x1036 (x1207 960))) (and (=> (not x747) x963) (=> x747 x907))) x231))
(assert (= (x1479 672) (x3 672)))
(assert (= x250 (and (not x684) x756)))
(assert (x1276 x876))
(assert (= (x794 (x1326 3567397854)) 3567397854))
(assert (= x87 (x794 (x516 x87))))
(assert (= (x794 (x1326 2780307423)) 2780307423))
(assert (not x221))
(assert (x1276 x1100))
(assert (= (x919 672) (x281 672)))
(assert (= x84 (or (and (not x1253) x209) (and x535 (not x522)))))
(assert (= x414 (x794 (x516 x414))))
(assert (x669 (x1290 128)))
(assert (= (or (and (not x1401) x1318) (and (not x345) x855)) x607))
(assert (= (x290 672) (x484 672)))
(assert (x1276 x505))
(assert (= (ite (= x578 (x1326 0)) 1 (x422 x578)) (x1521 x578)))
(assert (x1276 x1232))
(assert (x1276 x1317))
(assert (= x1524 (=> (and (= x1213 (> (x368 x851 x1181) 0)) (= (mod (* x295 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1181) (= x694 (x486 320)) (= (x486 352) x851) (= x295 (x887 (- 32 x694)))) (and (=> x1213 x41) (=> (not x1213) x728)))))
(assert (x669 (x833 160)))
(assert (x1276 x1095))
(assert (= (and x249 x20) x393))
(assert (= (+ 6 (x794 x711)) (x794 (x500 x711 6))))
(assert (= (x1523 704) (x479 704)))
(assert (x1276 x101))
(assert (x1276 x617))
(assert (= (x1069 672) (x251 672)))
(assert (= x1252 (=> (and (= x351 (mod (* x253 x727) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x440 (or x457 x1493)) (= x984 (= (ite x440 1 0) 0)) (= x727 (x131 384)) (= x457 (= x727 x1365)) (= (= 0 x253) x1493) (= x1365 (div x351 x253)) (= x88 (x887 (- x638 x1483)))) (and (=> (not x984) x1503) (=> x984 x728)))))
(assert (x1276 x247))
(assert (= (and x1540 (not x264)) x749))
(assert (= (x1456 640) (x1273 640)))
(assert (= (and x220 (not x13)) x1553))
(assert (= (=> (and (= x829 (x11 (x1326 39))) (= (x1282 320) x976) (= (> x976 x829) x955) (= x256 (x887 (- x841 x1087)))) (and (=> x955 x728) (=> (and (= (x887 (- x829 x976)) x64) (not x955)) x1076))) x280))
(assert (= (=> (and (= x785 (x1202 320)) (= (< x531 x785) x1315)) (and (=> x1315 x907) (=> (not x1315) x1541))) x509))
(assert (= (x516 596573372) (x1326 596573372)))
(assert (=> (>= 10000 (x1443 128)) (= (x516 (x1443 128)) (x1326 (x1443 128)))))
(assert (x1276 x412))
(assert (= (ite (= (x1326 44) (x1326 0)) 1 (x422 (x1326 44))) (x1163 (x1326 44))))
(assert (= (x1283 288) (x691 288)))
(assert (= x1418 (=> (= x1547 (> x1381 31)) (and (=> x1547 x27) (=> (not x1547) x907)))))
(assert (= (x1322 320) (x1034 320)))
(assert (= (x702 768) (x1204 768)))
(assert (= (x520 736) (x157 736)))
(assert (= (x1336 320) (x663 320)))
(assert (= (=> (= (< 31 x442) x1447) (and (=> (not x1447) x728) (=> x1447 x854))) x382))
(assert (x1276 x1288))
(assert (x1276 x1250))
(assert (= x33 (=> (and (= (x1430 (x1326 9)) x1317) (= x1516 (> x1185 x1317)) (= x1185 (x1393 736))) (and (=> (not x1516) x226) (=> x1516 x907)))))
(assert (= (x1104 704) (x483 704)))
(assert (x1276 x396))
(assert (x1276 x1284))
(assert (x669 (x921 128)))
(assert (x669 (x482 128)))
(assert (= (x794 (x1326 3963136098)) 3963136098))
(assert (= (and x543 (not x677)) x675))
(assert (= x758 (and x929 (not x930))))
(assert (= (x1322 288) x366))
(assert (x1276 x1320))
(assert (= x1052 (and (not x1138) x1300)))
(assert (x1276 x93))
(assert (= (=> (and (= (x238 (+ x32 x1555)) x30) (= x32 (x329 768)) (= x684 (< x30 x32)) (= x1151 (x329 704)) (= x1555 (x329 864))) (and (=> x684 x728) (=> (not x684) x1455))) x10))
(assert (= (x1124 640) (x1120 640)))
(assert (x1276 x1157))
(assert (= (=> (and (= (= x937 x1066) x222) (= x1433 (= 0 x1519)) (= (mod (* x1519 x1066) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x446) (= (div x446 x1519) x937) (= (or x1433 x222) x1428) (= (x887 (- x1394 x294)) x1519) (= (x946 (x1326 44)) x1066) (= (= (ite x1428 1 0) 0) x661)) (and (=> (not x661) x616) (=> x661 x907))) x151))
(assert (= (x1456 320) (x1273 320)))
(assert (= (=> (and (= (< x75 1000000000000000000) x60) (= x75 (x902 224))) (and (=> (not x60) x161) (=> x60 x781))) x587))
(assert (x1276 x1378))
(assert (= (x1269 352) (x961 352)))
(assert (= (x394 672) (x1046 672)))
(assert (= x947 (and (not x1063) x250)))
(assert (= (x1369 704) (x130 704)))
(assert (x1276 x665))
(assert (x1276 x255))
(assert (x1276 x882))
(assert (x1276 x1452))
(assert (= (x539 160) (x794 (x516 (x539 160)))))
(assert (x1276 x1502))
(assert (= (x528 672) (x169 672)))
(assert (= (x1273 672) (x1456 672)))
(assert (x1276 x1385))
(assert (x1276 x421))
(assert (= (x1563 768) (x240 768)))
(assert (= (x794 (x1326 773487949)) 773487949))
(assert (x1276 x1564))
(assert (x1276 x71))
(assert (x1276 x499))
(assert (= (x1290 1056) (x72 1056)))
(assert (x1276 x295))
(assert (x1276 x940))
(assert (= (x794 (x516 (x833 160))) (x833 160)))
(assert (= (x794 (x516 (x921 128))) (x921 128)))
(assert (= (x1326 1851080549) (x516 1851080549)))
(assert (= (ite (= x1426 (x1326 0)) 1 (x422 x1426)) (x1163 x1426)))
(assert (= (x794 (x516 (x528 160))) (x528 160)))
(assert (= (x1326 1888058147) (x516 1888058147)))
(assert (= (x1069 736) (x251 736)))
(assert (x1276 x531))
(assert (x1276 x1091))
(assert (x1276 x953))
(assert (x1276 x823))
(assert (= x600 (and x319 x950)))
(assert (= x418 (x606 896)))
(assert (= (ite (and x1387 x607) (x1431 704) (x663 704)) (x571 704)))
(assert (= (x794 (x500 x821 6)) (+ (x794 x821) 6)))
(assert (x669 (x1034 160)))
(assert (=> (>= 10000 (x539 128)) (= (x1326 (x539 128)) (x516 (x539 128)))))
(assert (= (x794 (x500 x1305 2)) (+ (x794 x1305) 2)))
(assert (x1276 x990))
(assert (x1276 x526))
(assert (= (x571 672) (ite (and x607 x1387) (x1431 672) (x663 672))))
(assert (x1276 x1413))
(assert (= (x130 640) (x1369 640)))
(assert (= 31576340 (x794 (x1326 31576340))))
(assert (x1276 x1440))
(assert (x669 (x1443 160)))
(assert (= (x1044 320) (x478 320)))
(assert (x1276 x1051))
(assert (= x450 (=> (= (< 31 x791) x1554) (and (=> (not x1554) x728) (=> x1554 x217)))))
(assert (x1276 x743))
(assert (= (x72 896) (x1290 896)))
(assert (= x510 (=> (= x1110 (< 0 x743)) (and (=> (not x1110) x728) (=> x1110 x1396)))))
(assert (= (x1479 928) (x3 928)))
(assert (x1276 x778))
(assert (= (x1163 x26) (ite (= (x1326 0) x26) 1 (x422 x26))))
(assert (x669 (x879 160)))
(assert (x1276 x57))
(assert (= (x491 640) (x1329 640)))
(assert (= (x491 864) (x1329 864)))
(assert (= (or (and (not x389) x525) (and (not x652) x1469)) x1379))
(assert (= x36 (and x1097 (not x248))))
(assert (x1276 x1531))
(assert (= (x571 352) (ite (and x1387 x607) (x1431 352) (x663 352))))
(assert (x1276 x1212))
(assert (= (x1290 640) (x72 640)))
(assert (= (ite (= (x1326 0) x722) 1 (x422 x722)) (x1163 x722)))
(assert (= 1977493762 (x794 (x1326 1977493762))))
(assert (=> (>= 10000 (x482 128)) (= (x516 (x482 128)) (x1326 (x482 128)))))
(assert (= (x528 736) (x169 736)))
(assert (= (x51 704) (x868 704)))
(assert (=> (>= 10000 (x112 128)) (= (x1326 (x112 128)) (x516 (x112 128)))))
(assert (x1276 x1184))
(assert (= (x794 (x1326 348537858)) 348537858))
(assert (=> (<= (x1114 160) 10000) (= (x1326 (x1114 160)) (x516 (x1114 160)))))
(assert (= (=> (and (= (x1196 224) x560) (= x924 (x1163 (x1326 43))) (= (div x1458 x560) x43) (= x752 (x1196 256)) (= x301 (x1196 256)) (= x28 (= 0 (ite x1296 1 0))) (= x1296 (or x1227 x1228)) (= x1458 (mod (* x752 x560) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= x752 x43) x1227) (= (= x560 0) x1228)) (and (=> (not x28) x1532) (=> x28 x907))) x1495))
(assert (= (x794 (x516 (x1034 160))) (x1034 160)))
(assert (= (x1545 672) (x1361 672)))
(assert (x1276 x64))
(assert (x1276 x1056))
(assert (x1276 x366))
(assert (= (or (and x757 (not x127)) (and (not x1057) x958)) x1298))
(assert (= (and (not x136) x1344) x535))
(assert (x1276 x171))
(assert (x1276 x847))
(assert (= (x779 704) (x606 704)))
(assert (= (x794 (x516 (x1282 160))) (x1282 160)))
(assert (x1276 x256))
(assert (= (x528 960) (x169 960)))
(assert (x1276 x562))
(assert (x1276 x104))
(assert (= (x516 2869116585) (x1326 2869116585)))
(assert (= (x516 961581905) (x1326 961581905)))
(assert (= (x1182 864) (x639 864)))
(assert (= (x394 736) (x1046 736)))
(assert (= (ite (and x1316 (not x1389)) (ite (and x701 x676 x1215) (x642 (x516 x900)) (x388 (x516 x900))) (x388 (x516 x900))) (x1484 (x516 x900))))
(assert (= (x879 128) (x794 (x516 (x879 128)))))
(assert (= (=> (and (= x1031 (x1521 (x1326 9))) (= (x482 736) x845) (= (> x1031 0) x345)) (and (=> (and (= (x1061 352) x253) (or (and (= x29 x610) (not x1339)) (and x1339 (= x29 1) (< x268 4294967296))) x345 (= x1339 (> x610 0))) x1018) (=> (and (= (x1061 352) x223) (not x345)) x427))) x430))
(assert (x1276 x582))
(assert (= x218 x1300))
(assert (= (x552 640) (x926 640)))
(assert (x1276 x211))
(assert (= x903 (x145 736)))
(assert (=> (>= 10000 x414) (= (x516 x414) (x1326 x414))))
(assert (= (x1131 128) (x794 (x516 (x1131 128)))))
(assert (x1276 x1009))
(assert (x1276 x1005))
(assert (x1276 x772))
(assert (= 1020253707 (x794 (x1326 1020253707))))
(assert (= (x1348 672) (x1537 672)))
(assert (x1276 x815))
(assert (x1276 x694))
(assert (= (x1479 320) (x3 320)))
(assert (x1276 x1350))
(assert (= x108 (=> (and (= x1009 (x552 384)) (= x506 (= 0 x1009))) (and (=> (and (not x506) (= (div x171 x1009) x658)) x316) (=> x506 x728)))))
(assert (= (or x334 x380) x964))
(assert (= (x3 352) (x1479 352)))
(assert (= x246 x349))
(assert (x1276 x1006))
(assert (= (x130 352) (x1369 352)))
(assert (= (x1283 1056) (x691 1056)))
(assert (x1276 x654))
(assert (= (x472 672) (x902 672)))
(assert (=> (<= (x738 160) 10000) (= (x516 (x738 160)) (x1326 (x738 160)))))
(assert (x1276 x1500))
(assert (x1276 x202))
(assert (x1276 x808))
(assert (= (x1336 768) (x663 768)))
(assert (= x505 (x169 992)))
(assert (= (x1204 352) (x702 352)))
(assert (= (x1163 (x1326 10)) (ite (= (x1326 0) (x1326 10)) 1 (x422 (x1326 10)))))
(assert (= x929 (and (not x1308) x889)))
(assert (= (x1204 320) (x702 320)))
(assert (= (and x1122 x289) x1240))
(assert (= (x1340 352) (x233 352)))
(assert (= (and x230 x1547) x1520))
(assert (= (x649 736) (ite (and x689 x245) (x235 736) (x1563 736))))
(assert (= (x1182 736) (x639 736)))
(assert (x1276 x4))
(assert (= (x1273 768) (x1456 768)))
(assert (x1276 x1375))
(assert (= (x1034 128) (x794 (x516 (x1034 128)))))
(assert (x1276 x730))
(assert (= (x1322 736) (x1034 736)))
(assert (= (x961 672) (x1269 672)))
(assert (x1276 x1171))
(assert (= (x312 704) (x1115 704)))
(assert (= (x649 768) (ite (and x689 x245) (x235 768) (x1563 768))))
(assert (x1276 x87))
(assert (x1276 x1154))
(assert (= (x1061 352) x845))
(assert (x1276 x1555))
(assert (= x911 (=> (and (= (x238 (+ x692 x434)) x404) (= x136 (< x590 x952)) (= x952 (x693 256)) (= (x693 288) x590)) (and (=> x136 x728) (=> (not x136) x496)))))
(assert (= (x591 704) (x15 704)))
(assert (= (and x652 x1469) x1535))
(assert (= (x919 704) (x281 704)))
(assert (x1276 x1442))
(assert (x1276 x548))
(assert (= (x1269 736) (x961 736)))
(assert (= x1032 (=> (and (= (> x593 x99) x904) (= (x238 (+ x31 x646)) x232) (= x593 (x1521 (x1326 41))) (= x638 (x472 288))) (and (=> (not x904) x481) (=> x904 x728)))))
(assert (= (x1269 960) (x961 960)))
(assert (= x1268 (=> (and (= x79 (< x489 x31)) (= x489 (x238 (+ x31 x646))) (= (x1521 (x1326 40)) x646) (= (x513 224) x31)) (and (=> x79 x728) (=> (not x79) x1032)))))
(assert (x1276 x186))
(assert (= (x516 2757214935) (x1326 2757214935)))
(assert (x669 (x1283 128)))
(assert (= (x1104 352) (x483 352)))
(assert (= (x1158 576) x1280))
(assert (= (=> (and (= (x887 (- x1132 x1036)) x957) (= x819 (x126 1024)) (= x822 (> x819 0))) (and (=> x822 x73) (=> (not x822) x181))) x963))
(assert (= (x472 352) (x902 352)))
(assert (x1276 x1376))
(assert (= x427 (=> (and (= (x367 800) x545) (or (and (= x4 x732) (not x1387)) (and x1387 (> 4294967296 x827) (= x732 1))) (= x1387 (< 0 x4))) x66)))
(assert (= (=> (and (= (< x1075 x831) x454) (= (x887 (- x215 x562)) x1232) (= (x921 1056) x831) (= x1075 (x1551 (x1326 40)))) (and (=> (and (not x454) (= x1141 (x887 (- x1075 x831)))) x1420) (=> x454 x907))) x849))
(assert (x1276 x1319))
(assert (= (x516 3092021830) (x1326 3092021830)))
(assert (x669 (x482 160)))
(assert (= (x1207 864) (x126 864)))
(assert (= x899 (=> (and (= x765 (x500 x424 2)) (= (div x101 x328) x1531) (= x199 (x398 224)) (= x1082 (= x1536 0)) (= x1536 (x72 320)) (= x424 (x343 (x516 (x1290 128)) (x516 (x1290 160)) 0)) (= x1341 (x1163 x765)) (= x814 (ite (< x1341 x1531) x1341 x1531))) (and (=> x1082 x853) (=> (not x1082) x128)))))
(assert (x1276 x610))
(assert (= (x539 640) (x1161 640)))
(assert (= (x1329 672) (x491 672)))
(assert (= (=> (and (= x127 (> 1000000000000000000 x857)) (= (x954 224) x857)) (and (=> x127 x1495) (=> (not x127) x1224))) x1465))
(assert (= (=> (and (= (> x1180 x501) x282) (= (div x1027 1000000000000000000) x1180)) (and (=> (and (not x282) (= (x887 (- x501 x1180)) x357)) x161) (=> x282 x728))) x1))
(assert (x1276 x817))
(assert (= (x528 704) (x169 704)))
(assert (= (=> (and (= (x1282 320) x1087) (= x973 (x691 224)) (= x841 (x1521 x207)) (= (x343 (x516 (x1282 128)) (x516 (x1282 160)) 0) x1305) (= (x500 x1305 2) x207) (= (< x841 x1087) x920)) (and (=> (not x920) x280) (=> x920 x728))) x782))
(assert (= (x1034 672) (x1322 672)))
(assert (= x877 (=> (and (= (x1443 256) x1544) (= x1005 (x1443 288)) (= x965 (< x1005 x1544)) (= x476 (x238 (+ x115 x808)))) (and (=> (not x965) x623) (=> x965 x907)))))
(assert (= (x1563 704) (x240 704)))
(assert (x1276 x1534))
(assert (= (x1329 768) (x491 768)))
(assert (= (x1331 704) (x745 704)))
(assert (x1276 x970))
(assert (x1276 x1409))
(assert (= x1024 (=> (and (= x376 (x1222 (x516 274184521717934524641157099916833587200))) (not (< x263 4)) (< 0 x376) (= (< 0 x1424) x677)) (and (=> x677 x728) (=> (not x677) x1556)))))
(assert (= (x483 736) (x1104 736)))
(assert (x1276 x1112))
(assert (x669 (x528 128)))
(assert (= (x1163 (x1326 9)) (ite (= (x1326 9) (x1326 0)) 1 (x422 (x1326 9)))))
(assert (x1276 x1538))
(assert (= (x1182 768) (x639 768)))
(assert (x1276 x425))
(assert (= (ite (and x607 x1387) (x1431 800) (x663 800)) (x571 800)))
(assert (x1276 x710))
(assert (= x770 (x1361 928)))
(assert (=> (<= (x1443 160) 10000) (= (x516 (x1443 160)) (x1326 (x1443 160)))))
(assert (= (x951 928) (x62 928)))
(assert (= (x436 640) (x775 640)))
(assert (= (x1322 896) (x1034 896)))
(assert (= (and (not x1026) x492) x820))
(assert (= x1049 (and x556 x60)))
(assert (x1276 x1236))
(assert (= (x693 160) (x794 (x516 (x693 160)))))
(assert (= (x591 352) (x15 352)))
(assert (= (x516 3065339685) (x1326 3065339685)))
(assert (x1276 x54))
(assert (= (and x675 (not x938)) x438))
(assert (= (x738 928) (x398 928)))
(assert (x1276 x1225))
(assert (x1276 x1509))
(assert (= (x794 (x1326 4294967296)) 4294967296))
(assert (x1276 x1107))
(assert (x1276 x980))
(assert (x1276 x905))
(assert (x1276 x653))
(assert (x1276 x110))
(assert (x1276 x327))
(assert (= (x779 352) (x606 352)))
(assert (= x744 (and (not x116) x1488)))
(assert (= (=> (and (= x474 (x238 (+ x1555 x32))) (= (div x618 x1151) x526) (= (= (ite x1142 1 0) 0) x1063) (= x1137 (= x474 x526)) (= x1324 (= 0 x1151)) (= x1142 (or x1137 x1324)) (= (mod (* x1151 x474) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x618)) (and (=> (not x1063) x644) (=> x1063 x728))) x1455))
(assert (x1276 x443))
(assert (= (x157 384) (x520 384)))
(assert (x1276 x442))
(assert (= x225 (=> (= (< 0 x975) x14) (and (=> (not x14) x907) (=> x14 x1418)))))
(assert (= (+ (x794 x1239) 6) (x794 (x500 x1239 6))))
(assert (= x855 (and x1397 x796)))
(assert (x1276 x270))
(assert (= (x794 (x1326 3065339685)) 3065339685))
(assert (= (x1361 352) (x1545 352)))
(assert (= (x1527 960) (x670 960)))
(assert (x1276 x529))
(assert (x1276 x253))
(assert (= (and x609 x1110) x1043))
(assert (= x1148 x24))
(assert (x1276 x480))
(assert (x669 (x539 160)))
(assert (= (x761 352) (x239 352)))
(assert (x1276 x400))
(assert (=> (>= 10000 (x1283 128)) (= (x1326 (x1283 128)) (x516 (x1283 128)))))
(assert (= x900 (x794 (x516 x900))))
(assert (= (x902 640) (x472 640)))
(assert (x1276 x1510))
(assert (= x502 (x691 320)))
(assert (x1276 x777))
(assert (x1276 x29))
(assert (= (x3 736) (x1479 736)))
(assert (= (=> (and (= (> x305 x991) x798) (= (x1045 1024) x1353) (= x991 (x238 (+ x305 x1353))) (= x1525 (x887 (- x968 x425))) (= x305 (x1045 864))) (and (=> x798 x728) (=> (not x798) x861))) x287))
(assert (= (x738 224) (x398 224)))
(assert (x1276 x991))
(assert (= (x1336 800) (x663 800)))
(assert (x1276 x613))
(assert (x1276 x43))
(assert (= (x697 768) (x346 768)))
(assert (= (=> (= (> x862 0) x671) (and (=> (and (= (ite (< x760 32) x760 32) x1452) x671 (= x777 (x1216 576)) (= x421 (x238 (+ x777 32))) (= (< 0 x1019) x881) (or (not x881) (and (< x750 4294967296) x881))) x1165) (=> (not x671) x907))) x2))
(assert (x1276 x713))
(assert (= x397 x1015))
(assert (x1276 x1160))
(assert (= (x951 736) (x62 736)))
(assert (= x878 (x670 992)))
(assert (= (x130 1024) (x1369 1024)))
(assert (= (or (and x1293 x114) (and x624 (not x139))) x334))
(assert (= (x629 128) (x794 (x516 (x629 128)))))
(assert (x1276 x279))
(assert (x1276 x1543))
(assert (= (x1248 128) (x794 (x516 (x1248 128)))))
(assert (= x757 (and (not x1003) x1194)))
(assert (x1276 x370))
(assert (= (x649 640) (ite (and x689 x245) (x235 640) (x1563 640))))
(assert (x1276 x978))
(assert (= (and x1208 x997) x417))
(assert (= (x761 224) (x239 224)))
(assert (x1276 x262))
(assert (= x1028 (and x1206 (not x55))))
(assert (= (x1282 128) (x794 (x516 (x1282 128)))))
(assert (x1276 x461))
(assert (= (x1348 320) (x1537 320)))
(assert (= (and x189 (not x200)) x556))
(assert (= (ite (= x236 (x1326 0)) 1 (x422 x236)) (x1521 x236)))
(assert (x669 (x1114 128)))
(assert (= (x1521 (x1326 41)) (ite (= (x1326 0) (x1326 41)) 1 (x422 (x1326 41)))))
(assert (= (x1348 640) (x1537 640)))
(assert (x1276 x1281))
(assert (= x945 x1291))
(assert (= x1469 (and (not x1071) x323)))
(assert (= (x794 (x1326 2209625481)) 2209625481))
(assert (= (x794 (x516 (x1114 128))) (x1114 128)))
(assert (= (x516 629314576) (x1326 629314576)))
(assert (=> (>= 10000 (x1282 160)) (= (x1326 (x1282 160)) (x516 (x1282 160)))))
(assert (= (x169 640) (x528 640)))
(assert (= x369 (=> (and (= (x1348 640) x495) (= (< 10000 x148) x1446) (= x148 (x1537 704))) (and (=> (and (not x1446) (or (not x1517) (and x1517 (= (x343 (x516 (x112 128)) (x516 (x112 160)) 0) x1055) (= (x1521 x1055) x493))) (= x1416 (x1537 736)) (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1416) x1517)) x1101) (=> x1446 x728)))))
(assert (x1276 x1083))
(assert (x1276 x866))
(assert (x1276 x215))
(assert (= (x15 1056) (x591 1056)))
(assert (x1276 x540))
(assert (= (x1326 2316151882) (x516 2316151882)))
(assert (= x59 (or (and (not x60) x556) (and (not x282) x341))))
(assert (= (x478 960) (x1044 960)))
(assert (x1276 x1449))
(assert (x1276 x1134))
(assert (= (x919 352) (x281 352)))
(assert (x1276 x1220))
(assert (= (x1322 352) (x1034 352)))
(assert (= (x62 768) (x951 768)))
(assert (= (or x132 x927) x218))
(assert (x1276 x647))
(assert (=> (>= 10000 (x693 128)) (= (x516 (x693 128)) (x1326 (x693 128)))))
(assert (x1276 x321))
(assert (= x20 (and x144 x566)))
(assert (= 1000000000000000000 (x794 (x1326 1000000000000000000))))
(assert (x1276 x284))
(assert (= (x312 672) (x1115 672)))
(assert (= (x516 2209625481) (x1326 2209625481)))
(assert (= (and x345 x855) x1371))
(assert (x1276 x1515))
(assert (= (x670 864) (x1527 864)))
(assert (= (or (and x932 x625) (and x20 (not x249)) x1435) x246))
(assert (= x341 (and x1049 (not x1542))))
(assert (= (x394 704) (x1046 704)))
(assert (x1276 x973))
(assert (x669 (x693 128)))
(assert (= (x15 864) (x591 864)))
(assert (= (x1340 288) (x233 288)))
(assert (= (=> (and (= (x539 736) x1241) (= (< 0 x1241) x274)) (and (=> (not x274) x907) (=> x274 x1234))) x1349))
(assert (x669 x146))
(assert (= (x1443 160) (x794 (x516 (x1443 160)))))
(assert (x1276 x1238))
(assert (x669 (x664 160)))
(assert (= x519 (and x1253 x209)))
(assert (x1276 x959))
(assert (x1276 x783))
(assert (x1276 x1019))
(assert (= (x926 672) (x552 672)))
(assert (x1276 x755))
(assert (= (=> (and (= x1480 (> x57 x866)) (= x1072 (x1255 864)) (= (x1255 768) x57) (= x884 (x290 896)) (= x866 (x238 (+ x1072 x57)))) (and (=> (and (or (and (= x1513 x876) (not x241)) (and (< x1320 4294967296) x241 (= x1513 1))) (= x1358 (x238 (+ x57 x1072))) (= x241 (< 0 x876)) (not x1480)) x142) (=> x1480 x907))) x185))
(assert (= (x515 736) (x1158 736)))
(assert (x1276 x1347))
(assert (x1276 x204))
(assert (x1276 x228))
(assert (= (x1322 640) (x1034 640)))
(assert (= (x1182 928) (x639 928)))
(assert (= (x1331 768) (x745 768)))
(assert (x1276 x770))
(assert (= (x1182 352) (x639 352)))
(assert (= (x1523 736) (x479 736)))
(assert (= (+ (x794 x1178) 8) (x794 (x500 x1178 8))))
(assert (x1276 x1127))
(assert (= x1101 (=> (and (= (x1521 x322) x1413) (= (x482 736) x93) (= x322 (x343 (x516 (x482 128)) (x516 (x482 160)) 0)) (= (< x1413 x93) x1201)) (and (=> x1201 x728) (=> (not x1201) x1245)))))
(assert (= (x126 1056) x957))
(assert (= (and x917 x291) x566))
(assert (=> (<= (x921 128) 10000) (= (x1326 (x921 128)) (x516 (x921 128)))))
(assert (= (x479 640) (x1523 640)))
(assert (=> (>= 10000 (x1034 160)) (= (x1326 (x1034 160)) (x516 (x1034 160)))))
(assert (= (x520 768) (x157 768)))
(assert (and (= (x1415 2 26) 67108864) (= (x1415 2 150) 1427247692705959881058285969449495136382746624) (= 549755813888 (x1415 2 39)) (= (x1415 2 227) 215679573337205118357336120696157045389097155380324579848828881993728) (= 5575186299632655785383929568162090376495104 (x1415 2 142)) (= (x1415 2 110) 1298074214633706907132624082305024) (= 134217728 (x1415 2 27)) (= 73786976294838206464 (x1415 2 66)) (= (x1415 2 10) 1024) (= 131072 (x1415 2 17)) (= (x1415 2 254) 28948022309329048855892746252171976963317496166410141009864396001978282409984) (= (x1415 2 169) 748288838313422294120286634350736906063837462003712) (= 3291009114642412084309938365114701009965471731267159726697218048 (x1415 2 211)) (= (x1415 2 144) 22300745198530623141535718272648361505980416) (= 4611686018427387904 (x1415 2 62)) (= 2596148429267413814265248164610048 (x1415 2 111)) (= 11417981541647679048466287755595961091061972992 (x1415 2 153)) (= 4951760157141521099596496896 (x1415 2 92)) (= 680564733841876926926749214863536422912 (x1415 2 129)) (= 51422017416287688817342786954917203280710495801049370729644032 (x1415 2 205)) (= 12855504354071922204335696738729300820177623950262342682411008 (x1415 2 203)) (= 166153499473114484112975882535043072 (x1415 2 117)) (= (x1415 2 82) 4835703278458516698824704) (= 18446744073709551616 (x1415 2 64)) (= (x1415 2 60) 1152921504606846976) (= (x1415 2 69) 590295810358705651712) (= 5708990770823839524233143877797980545530986496 (x1415 2 152)) (= (x1415 2 241) 3533694129556768659166595001485837031654967793751237916243212402585239552) (= 98079714615416886934934209737619787751599303819750539264 (x1415 2 186)) (= 37778931862957161709568 (x1415 2 75)) (= 512 (x1415 2 9)) (= (x1415 2 177) 191561942608236107294793378393788647952342390272950272) (= (x1415 2 37) 137438953472) (= (x1415 2 215) 52656145834278593348959013841835216159447547700274555627155488768) (= (x1415 2 195) 50216813883093446110686315385661331328818843555712276103168) (= 8796093022208 (x1415 2 43)) (= (x1415 2 137) 174224571863520493293247799005065324265472) (= 17179869184 (x1415 2 34)) (= 2251799813685248 (x1415 2 51)) (= (x1415 2 204) 25711008708143844408671393477458601640355247900524685364822016) (= 53919893334301279589334030174039261347274288845081144962207220498432 (x1415 2 225)) (= (x1415 2 233) 13803492693581127574869511724554050904902217944340773110325048447598592) (= (x1415 2 29) 536870912) (= (x1415 2 249) 904625697166532776746648320380374280103671755200316906558262375061821325312) (= (x1415 2 178) 383123885216472214589586756787577295904684780545900544) (= 2097152 (x1415 2 21)) (= 696898287454081973172991196020261297061888 (x1415 2 139)) (= 332306998946228968225951765070086144 (x1415 2 118)) (= (x1415 2 85) 38685626227668133590597632) (= (x1415 2 174) 23945242826029513411849172299223580994042798784118784) (= 316912650057057350374175801344 (x1415 2 98)) (= 105312291668557186697918027683670432318895095400549111254310977536 (x1415 2 216)) (= (x1415 2 148) 356811923176489970264571492362373784095686656) (= 16 (x1415 2 4)) (= 1267650600228229401496703205376 (x1415 2 100)) (= 784637716923335095479473677900958302012794430558004314112 (x1415 2 189)) (= 2048 (x1415 2 11)) (= (x1415 2 143) 11150372599265311570767859136324180752990208) (= (x1415 2 61) 2305843009213693952) (= (x1415 2 206) 102844034832575377634685573909834406561420991602098741459288064) (= 28269553036454149273332760011886696253239742350009903329945699220681916416 (x1415 2 244)) (= (x1415 2 184) 24519928653854221733733552434404946937899825954937634816) (= 3369993333393829974333376885877453834204643052817571560137951281152 (x1415 2 221)) (= 19807040628566084398385987584 (x1415 2 94)) (= 6427752177035961102167848369364650410088811975131171341205504 (x1415 2 202)) (= 1393796574908163946345982392040522594123776 (x1415 2 140)) (= (x1415 2 130) 1361129467683753853853498429727072845824) (= 1684996666696914987166688442938726917102321526408785780068975640576 (x1415 2 220)) (= 10384593717069655257060992658440192 (x1415 2 113)) (= 113078212145816597093331040047546785012958969400039613319782796882727665664 (x1415 2 246)) (= 45671926166590716193865151022383844364247891968 (x1415 2 155)) (= 35184372088832 (x1415 2 45)) (= (x1415 2 131) 2722258935367507707706996859454145691648) (= (x1415 2 182) 6129982163463555433433388108601236734474956488734408704) (= 2147483648 (x1415 2 31)) (= (x1415 2 164) 23384026197294446691258957323460528314494920687616) (= (x1415 2 96) 79228162514264337593543950336) (= 4398046511104 (x1415 2 42)) (= (x1415 2 201) 3213876088517980551083924184682325205044405987565585670602752) (= 81129638414606681695789005144064 (x1415 2 106)) (= (x1415 2 200) 1606938044258990275541962092341162602522202993782792835301376) (= (x1415 2 167) 187072209578355573530071658587684226515959365500928) (= 147573952589676412928 (x1415 2 67)) (= (x1415 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (x1415 2 63) 9223372036854775808) (= (x1415 2 56) 72057594037927936) (= (x1415 2 115) 41538374868278621028243970633760768) (= (x1415 2 46) 70368744177664) (= (x1415 2 146) 89202980794122492566142873090593446023921664) (= 3450873173395281893717377931138512726225554486085193277581262111899648 (x1415 2 231)) (= (x1415 2 116) 83076749736557242056487941267521536) (= (x1415 2 175) 47890485652059026823698344598447161988085597568237568) (= 288230376151711744 (x1415 2 58)) (= (x1415 2 165) 46768052394588893382517914646921056628989841375232) (= 36028797018963968 (x1415 2 55)) (= 524288 (x1415 2 19)) (= 20769187434139310514121985316880384 (x1415 2 114)) (= (x1415 2 180) 1532495540865888858358347027150309183618739122183602176) (= 107839786668602559178668060348078522694548577690162289924414440996864 (x1415 2 226)) (= (x1415 2 217) 210624583337114373395836055367340864637790190801098222508621955072) (= 562949953421312 (x1415 2 49)) (= 20282409603651670423947251286016 (x1415 2 104)) (= 604462909807314587353088 (x1415 2 79)) (= 64 (x1415 2 6)) (= (x1415 2 14) 16384) (= (x1415 2 18) 262144) (= (x1415 2 212) 6582018229284824168619876730229402019930943462534319453394436096) (= (x1415 2 185) 49039857307708443467467104868809893875799651909875269632) (= (x1415 2 245) 56539106072908298546665520023773392506479484700019806659891398441363832832) (= 17592186044416 (x1415 2 44)) (= (x1415 2 2) 4) (= (x1415 2 209) 822752278660603021077484591278675252491367932816789931674304512) (= (x1415 2 108) 324518553658426726783156020576256) (= (x1415 2 1) 2) (= (x1415 2 109) 649037107316853453566312041152512) (= 151115727451828646838272 (x1415 2 77)) (= (x1415 2 59) 576460752303423488) (= (x1415 2 120) 1329227995784915872903807060280344576) (= 3138550867693340381917894711603833208051177722232017256448 (x1415 2 191)) (= 618970019642690137449562112 (x1415 2 89)) (= (x1415 2 171) 2993155353253689176481146537402947624255349848014848) (= (x1415 2 101) 2535301200456458802993406410752) (= (x1415 2 187) 196159429230833773869868419475239575503198607639501078528) (= (x1415 2 170) 1496577676626844588240573268701473812127674924007424) (= (x1415 2 78) 302231454903657293676544) (= (x1415 2 207) 205688069665150755269371147819668813122841983204197482918576128) (= (x1415 2 99) 633825300114114700748351602688) (= (x1415 2 36) 68719476736) (= 411376139330301510538742295639337626245683966408394965837152256 (x1415 2 208)) (= 100433627766186892221372630771322662657637687111424552206336 (x1415 2 196)) (= 154742504910672534362390528 (x1415 2 87)) (= 40564819207303340847894502572032 (x1415 2 105)) (= (x1415 2 127) 170141183460469231731687303715884105728) (= 11692013098647223345629478661730264157247460343808 (x1415 2 163)) (= 2199023255552 (x1415 2 41)) (= 365375409332725729550921208179070754913983135744 (x1415 2 158)) (= 10889035741470030830827987437816582766592 (x1415 2 133)) (= 12554203470773361527671578846415332832204710888928069025792 (x1415 2 193)) (= 85070591730234615865843651857942052864 (x1415 2 126)) (= 1461501637330902918203684832716283019655932542976 (x1415 2 160)) (= (x1415 2 229) 862718293348820473429344482784628181556388621521298319395315527974912) (= 374144419156711147060143317175368453031918731001856 (x1415 2 168)) (= (x1415 2 210) 1645504557321206042154969182557350504982735865633579863348609024) (= 21267647932558653966460912964485513216 (x1415 2 124)) (= (x1415 2 235) 55213970774324510299478046898216203619608871777363092441300193790394368) (= 5846006549323611672814739330865132078623730171904 (x1415 2 162)) (= 226156424291633194186662080095093570025917938800079226639565593765455331328 (x1415 2 247)) (= (x1415 2 57) 144115188075855872) (= 110427941548649020598956093796432407239217743554726184882600387580788736 (x1415 2 236)) (= (x1415 2 198) 401734511064747568885490523085290650630550748445698208825344) (= 182687704666362864775460604089535377456991567872 (x1415 2 157)) (= (x1415 2 132) 5444517870735015415413993718908291383296) (= 65536 (x1415 2 16)) (= 5192296858534827628530496329220096 (x1415 2 112)) (= (x1415 2 86) 77371252455336267181195264) (= (x1415 2 20) 1048576) (= 5070602400912917605986812821504 (x1415 2 102)) (= (x1415 2 12) 4096) (= (x1415 2 74) 18889465931478580854784) (= 8589934592 (x1415 2 33)) (= (x1415 2 149) 713623846352979940529142984724747568191373312) (= 13479973333575319897333507543509815336818572211270286240551805124608 (x1415 2 223)) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1415 2 240)) (= (x1415 2 128) 340282366920938463463374607431768211456) (= 220855883097298041197912187592864814478435487109452369765200775161577472 (x1415 2 237)) (= (x1415 2 25) 33554432) (= 431359146674410236714672241392314090778194310760649159697657763987456 (x1415 2 228)) (= 44601490397061246283071436545296723011960832 (x1415 2 145)) (= 6277101735386680763835789423207666416102355444464034512896 (x1415 2 192)) (= 8 (x1415 2 3)) (= (x1415 2 219) 842498333348457493583344221469363458551160763204392890034487820288) (= 5986310706507378352962293074805895248510699696029696 (x1415 2 172)) (= 26959946667150639794667015087019630673637144422540572481103610249216 (x1415 2 224)) (= (x1415 2 232) 6901746346790563787434755862277025452451108972170386555162524223799296) (= (x1415 2 80) 1208925819614629174706176) (= (x1415 2 65) 36893488147419103232) (= (x1415 2 176) 95780971304118053647396689196894323976171195136475136) (= 8388608 (x1415 2 23)) (= 25108406941546723055343157692830665664409421777856138051584 (x1415 2 194)) (= (x1415 2 84) 19342813113834066795298816) (= 7067388259113537318333190002971674063309935587502475832486424805170479104 (x1415 2 242)) (= 200867255532373784442745261542645325315275374222849104412672 (x1415 2 197)) (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1415 2 255)) (= 8192 (x1415 2 13)) (= (x1415 2 83) 9671406556917033397649408) (= (x1415 2 47) 140737488355328) (= 1 (x1415 2 0)) (= 91343852333181432387730302044767688728495783936 (x1415 2 156)) (= 1073741824 (x1415 2 30)) (= 9903520314283042199192993792 (x1415 2 93)) (= (x1415 2 183) 12259964326927110866866776217202473468949912977468817408) (= (x1415 2 222) 6739986666787659948666753771754907668409286105635143120275902562304) (= 766247770432944429179173513575154591809369561091801088 (x1415 2 179)) (= 883423532389192164791648750371459257913741948437809479060803100646309888 (x1415 2 239)) (= (x1415 2 135) 43556142965880123323311949751266331066368) (= 14474011154664524427946373126085988481658748083205070504932198000989141204992 (x1415 2 253)) (= 2923003274661805836407369665432566039311865085952 (x1415 2 161)) (= 22835963083295358096932575511191922182123945984 (x1415 2 154)) (= 1237940039285380274899124224 (x1415 2 90)) (= (x1415 2 50) 1125899906842624) (= 392318858461667547739736838950479151006397215279002157056 (x1415 2 188)) (= (x1415 2 166) 93536104789177786765035829293842113257979682750464) (= 11972621413014756705924586149611790497021399392059392 (x1415 2 173)) (= (x1415 2 136) 87112285931760246646623899502532662132736) (= 42535295865117307932921825928971026432 (x1415 2 125)) (= 7237005577332262213973186563042994240829374041602535252466099000494570602496 (x1415 2 252)) (= (x1415 2 199) 803469022129495137770981046170581301261101496891396417650688) (= 664613997892457936451903530140172288 (x1415 2 119)) (= (x1415 2 76) 75557863725914323419136) (= (x1415 2 250) 1809251394333065553493296640760748560207343510400633813116524750123642650624) (= 10633823966279326983230456482242756608 (x1415 2 123)) (= (x1415 2 72) 4722366482869645213696) (= 26328072917139296674479506920917608079723773850137277813577744384 (x1415 2 214)) (= 158456325028528675187087900672 (x1415 2 97)) (= (x1415 2 52) 4503599627370496) (= 13164036458569648337239753460458804039861886925068638906788872192 (x1415 2 213)) (= 274877906944 (x1415 2 38)) (= (x1415 2 54) 18014398509481984) (= (x1415 2 230) 1725436586697640946858688965569256363112777243042596638790631055949824) (= (x1415 2 190) 1569275433846670190958947355801916604025588861116008628224) (= (x1415 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1415 2 243) 14134776518227074636666380005943348126619871175004951664972849610340958208) (= (x1415 2 68) 295147905179352825856) (= (x1415 2 35) 34359738368) (= 348449143727040986586495598010130648530944 (x1415 2 138)) (= (x1415 2 122) 5316911983139663491615228241121378304) (= 2787593149816327892691964784081045188247552 (x1415 2 141)) (= 1099511627776 (x1415 2 40)) (= (x1415 2 53) 9007199254740992) (= (x1415 2 28) 268435456) (= 2475880078570760549798248448 (x1415 2 91)) (= 128 (x1415 2 7)) (= (x1415 2 81) 2417851639229258349412352) (= (x1415 2 48) 281474976710656) (= 9444732965739290427392 (x1415 2 73)) (= 4294967296 (x1415 2 32)) (= (x1415 2 70) 1180591620717411303424) (= (x1415 2 71) 2361183241434822606848) (= 27606985387162255149739023449108101809804435888681546220650096895197184 (x1415 2 234)) (= (x1415 2 181) 3064991081731777716716694054300618367237478244367204352) (= 16777216 (x1415 2 24)) (= 32 (x1415 2 5)) (= (x1415 2 218) 421249166674228746791672110734681729275580381602196445017243910144) (= 730750818665451459101842416358141509827966271488 (x1415 2 159)) (= 39614081257132168796771975168 (x1415 2 95)) (= (x1415 2 8) 256) (= 3618502788666131106986593281521497120414687020801267626233049500247285301248 (x1415 2 251)) (= (x1415 2 147) 178405961588244985132285746181186892047843328) (= (x1415 2 121) 2658455991569831745807614120560689152) (= (x1415 2 238) 441711766194596082395824375185729628956870974218904739530401550323154944) (= (x1415 2 15) 32768) (= 21778071482940061661655974875633165533184 (x1415 2 134)) (= 162259276829213363391578010288128 (x1415 2 107)) (= 4194304 (x1415 2 22)) (= (x1415 2 103) 10141204801825835211973625643008) (= 309485009821345068724781056 (x1415 2 88)) (= (x1415 2 151) 2854495385411919762116571938898990272765493248)))
(assert (= (x346 928) (x697 928)))
(assert (= (x606 320) (x779 320)))
(assert (x1276 x568))
(assert (x1276 x1211))
(assert (= (x251 864) (x1069 864)))
(assert (x1276 x811))
(assert (= (x605 864) (x1402 864)))
(assert (x1276 x98))
(assert (x1276 x1511))
(assert (= x1400 (=> (and (= (x1118 896) x847) (= (x169 992) x1107) (= x527 (x1163 x1357)) (= (< 0 x1107) x78) (= x191 (x343 (x516 (x528 128)) (x516 (x528 160)) 0)) (= x871 (x1118 992)) (= x505 (ite (> x871 x527) x527 x871)) (= x100 (x887 (- x86 x1284))) (= (x500 x191 6) x1357)) (and (=> (not x78) x1420) (=> (and (= x1345 (x15 992)) (= x1167 (x591 896)) (= (< 0 x327) x709) x78 (or (not x709) (and x1489 (= x1351 (>= (x1199 (x516 274184521717934524641157099916833587200)) x1464)) x1351 x709 (< x726 4294967296) (= x1464 (x388 (x516 274184521717934524641157099916833587200))) (= x974 (x388 (x516 x1167))) (= x1489 (= x974 (x1199 (x516 x1167))))))) x1498)))))
(assert (= (x312 640) (x1115 640)))
(assert (x1276 x857))
(assert (= x956 (and (not x1446) x438)))
(assert (x1276 x618))
(assert (= (x794 (x516 (x539 128))) (x539 128)))
(assert (x1276 x559))
(assert (= x260 (x639 960)))
(assert (= (x516 3567397854) (x1326 3567397854)))
(assert (= x446 (x1329 224)))
(assert (= x212 (=> (and (or (and (= 1 x1434) x596 (> 4294967296 x98)) (and (not x596) (= x1434 x445))) (= (< 0 x445) x596)) x1258)))
(assert (x1276 x941))
(assert (x669 (x921 160)))
(assert (= (x1290 224) (x72 224)))
(assert (x1276 x1150))
(assert (= (x794 (x516 x1167)) x1167))
(assert (= (x1207 320) (x126 320)))
(assert (x1276 x834))
(assert (x1276 x971))
(assert (= x1499 (x290 896)))
(assert (= (x491 352) (x1329 352)))
(assert (x1276 x183))
(assert (= (x779 736) (x606 736)))
(assert (= (x1124 352) (x1120 352)))
(assert (x1276 x63))
(assert (= (x1369 672) (x130 672)))
(assert (= (and x1429 x671) x624))
(assert (= (x145 320) (x943 320)))
(assert (= x1332 (=> (and (= (< x1394 x294) x134) (= (x238 (+ x864 x860)) x1383) (= x531 (x491 288)) (= x294 (x946 (x1326 41)))) (and (=> x134 x907) (=> (not x134) x151)))))
(assert (x1276 x1384))
(assert (= (or x532 (and (not x837) x1195)) x1146))
(assert (x1276 x674))
(assert (= (x1563 352) (x240 352)))
(assert (= x1429 (and x1262 (not x1103))))
(assert (= (=> (and (= (x789 (x1326 40)) x1121) (= x780 (x887 (- x590 x952))) (= (> x433 x1121) x522) (= x433 (x879 256)) (= x1482 (x500 x711 6)) (= (x693 224) x1564) (= x711 (x343 (x516 (x879 128)) (x516 (x879 160)) 0))) (and (=> x522 x728) (=> (and (= (x887 (- x1121 x433)) x548) (not x522)) x1373))) x496))
(assert (= (=> (and (= x1125 (x649 800)) (= (> x815 x1125) x1398) (= x815 (x649 768))) (and (=> (not x1398) x33) (=> x1398 x1093))) x27))
(assert (= (x1326 1401663147) (x516 1401663147)))
(assert (= (x251 704) (x1069 704)))
(assert (= (x1182 672) (x639 672)))
(assert (x669 (x693 160)))
(assert (x1276 x477))
(assert (= (x738 864) (x398 864)))
(assert (x1276 x700))
(assert (= (x1124 320) (x1120 320)))
(assert (= (x1283 640) (x691 640)))
(assert (= (x794 (x1326 1851080549)) 1851080549))
(assert (= (x794 (x516 274184521717934524641157099916833587200)) 274184521717934524641157099916833587200))
(assert (x1276 x1205))
(assert (= (x130 864) (x1369 864)))
(assert (x1276 x1458))
(assert (= (x983 640) (x954 640)))
(assert (x1276 x1483))
(assert (= (and x1175 x451) x1437))
(assert (= (x794 (x1326 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= (x1207 1024) (x126 1024)))
(assert (= (x1283 672) (x691 672)))
(assert (x1276 x638))
(assert (= (x1061 704) (x482 704)))
(assert (x1276 x762))
(assert (x1276 x1247))
(assert (= (x528 352) (x169 352)))
(assert (= (x961 768) (x1269 768)))
(assert (= x995 (and (not x176) x1379)))
(assert (x1276 x1125))
(assert (= (x794 (x516 (x1283 128))) (x1283 128)))
(assert (= (x670 928) (x1527 928)))
(assert (= x703 (and x1088 x78)))
(assert (x1276 x560))
(assert (x1276 x1346))
(assert (= x1397 (and (not x1201) x956)))
(assert (x1276 x952))
(assert (x1276 x434))
(assert (x1276 x976))
(assert (x1276 x598))
(assert (= (or (and (not x224) x1136) x1257) x1435))
(assert (= x901 (and x387 (not x1315))))
(assert (x1276 x446))
(assert (= (ite (and x689 x245) (x235 800) (x1563 800)) (x649 800)))
(assert (= x1257 (and (not x625) x932)))
(assert (x1276 x32))
(assert (= x1148 (=> (and (= (not x1528) x441) (= x597 x170) (= (and x1000 x597) x666) (= (not x666) x1183) (= x1528 x1246) (= x1000 x441)) x1183)))
(assert (x1276 x1169))
(assert (= (or (and (not x1392) x36) (and x601 (not x987))) x689))
(assert (x1276 x326))
(assert (= (x1402 736) (x605 736)))
(assert (= (x126 704) (x1207 704)))
(assert (x1276 x785))
(assert (=> (<= (x528 128) 10000) (= (x516 (x528 128)) (x1326 (x528 128)))))
(assert (x669 x1167))
(assert (= x142 (=> (= (< 0 x1513) x784) (and (=> (not x784) x907) (=> x784 x352)))))
(assert (= x387 (or (and x820 (not x371)) (and x410 (not x741)))))
(assert (x1276 x807))
(assert (x1276 x768))
(assert (= (x639 704) (x1182 704)))
(assert (=> (>= 10000 (x539 160)) (= (x1326 (x539 160)) (x516 (x539 160)))))
(assert (= (x72 672) (x1290 672)))
(assert (= x419 (and x945 x1270)))
(assert (x1276 x1485))
(assert (x1276 x1303))
(assert (= (=> (= (> x726 31) x626) (and (=> (not x626) x907) (=> (and (= x469 (< 0 x1510)) (or (and (not x469) (= x1510 x1260)) (and (> 4294967296 x497) (= 1 x1260) x469)) (= (x1407 1056) x152) x626) x292))) x358))
(assert (= (x1044 928) (x478 928)))
(assert (= (x1322 1056) (x1034 1056)))
(assert (x1276 x583))
(assert (= x162 (=> (and (= x159 (mod (* x1211 x1154) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1026 (= (ite x717 1 0) 0)) (= x325 (x411 256)) (= x211 (x946 (x1326 43))) (= x1306 (= 0 x1154)) (= (x411 256) x1211) (= (or x1306 x720) x717) (= x721 (div x159 x1154)) (= (x411 224) x1154) (= x720 (= x721 x1211))) (and (=> x1026 x907) (=> (not x1026) x1016)))))
(assert (x1276 x1086))
(assert (x1276 x714))
(assert (x1276 x1424))
(assert (= x1093 (=> (and (= x224 (> x801 0)) (= (x779 928) x834) (= (x1163 (x516 x87)) x418) (= x801 (x606 896)) (= x87 (x238 (+ x834 17)))) (and (=> (and x224 (or (and (> 4294967296 x1385) x406 (= 1 x710)) (and (= x412 x710) (not x406))) (= x406 (< 0 x412))) x1474) (=> (not x224) x1522)))))
(assert (= (x1326 4294967296) (x516 4294967296)))
(assert (x1276 x105))
(assert (x1276 x65))
(assert (=> (<= x656 10000) (= (x1326 x656) (x516 x656))))
(assert (x1276 x1159))
(assert (= x517 (=> (and (= (x483 928) x742) (= (not (< 0 x1266)) x1059) (= x656 (x238 (+ x742 17))) (= (x304 896) x1266) (= (x432 (x516 x656)) x335)) (and x1522 x1059))))
(assert (x1276 x383))
(assert (x1276 x589))
(assert (= (=> (and (= x92 (= 0 (ite x261 1 0))) (= (div x762 x213) x377) (= (mod (* x228 x213) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x762) (= x261 (or x898 x1008)) (= (= 0 x213) x898) (= x213 (x1456 352)) (= (x946 (x1326 9)) x228) (= (= x377 x228) x1008)) (and (=> x92 x907) (=> (not x92) x1313))) x504))
(assert (= x1099 (and x969 (not x774))))
(assert (x1276 x1383))
(assert (= (x1120 992) (x1124 992)))
(assert (=> (<= x87 10000) (= (x516 x87) (x1326 x87))))
(assert (= (=> (and (= (x500 x1214 6) x1079) (= (> x65 x17) x435) (= (x1177 x1079) x17) (= x1214 (x343 (x516 (x629 128)) (x516 (x629 160)) 0)) (= (x1297 896) x567) (= x65 (x629 1056))) (and (=> (not x435) x372) (=> x435 x728))) x1373))
(assert (= (ite (= (x516 x87) (x1326 0)) 1 (x422 (x516 x87))) (x1163 (x516 x87))))
(assert (= (x483 864) (x1104 864)))
(assert (= (x436 736) (x775 736)))
(assert (= x604 (and x784 x320)))
(assert (=> (>= 10000 (x1527 160)) (= (x1326 (x1527 160)) (x516 (x1527 160)))))
(assert (= (x157 352) (x520 352)))
(assert (x1276 x655))
(assert (x1276 x621))
(assert (x1276 x593))
(assert (= 2052391781 (x794 (x1326 2052391781))))
(assert (x669 (x528 160)))
(assert (= x420 (and x757 x127)))
(assert (= (x1479 896) (x3 896)))
(assert (= (x394 320) (x1046 320)))
(assert (x1276 x537))
(assert (= (x528 768) (x169 768)))
(assert (= (x516 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1326 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x1276 x1180))
(assert (= (or (and x417 (not x192)) (and x576 x1213)) x927))
(assert (= (x1326 2835717307) (x516 2835717307)))
(assert (=> (<= (x1114 128) 10000) (= (x1326 (x1114 128)) (x516 (x1114 128)))))
(assert (= (x482 736) (x1061 736)))
(assert (= (x516 348537858) (x1326 348537858)))
(assert (= (x1115 864) (x312 864)))
(assert (= (x484 768) (x290 768)))
(assert (x1276 x656))
(assert (x1276 x160))
(assert (= (ite (= (x1326 0) x1079) 1 (x422 x1079)) (x1521 x1079)))
(assert (= x1452 (x1216 576)))
(assert (x1276 x1450))
(assert (= x718 (=> (and (= x1173 (< x459 x1395)) (= x1395 (x639 960)) (= (x639 768) x459)) (and (=> (not x1173) x681) (=> x1173 x728)))))
(assert (x1276 x338))
(assert (= (x738 160) (x794 (x516 (x738 160)))))
(assert (= x536 (=> (and (= x928 (x1521 (x1326 40))) (= x551 (= x928 0))) (and (=> x551 x728) (=> (not x551) x672)))))
(assert (= (=> (and (= (x343 (x516 (x1527 128)) (x516 (x1527 160)) 0) x1140) (= (ite (> x990 x799) x799 x990) x878) (= x990 (x585 992)) (= x641 (x500 x1140 6)) (= (x1521 x641) x799) (= x302 (x887 (- x459 x1395))) (= x701 (< 0 x559)) (= x772 (x585 896)) (= (x670 992) x559)) (and (=> (and (= x1436 (x478 992)) x701 (= x676 (< 0 x1126)) (or (not x676) (and (> 4294967296 x63) (= (x388 (x516 274184521717934524641157099916833587200)) x859) (= x1342 (>= (x642 (x516 274184521717934524641157099916833587200)) x859)) (= x574 (x388 (x516 x153))) x1342 (= x872 (= x574 (x642 (x516 x153)))) x676 x872)) (= x153 (x1044 896))) x909) (=> (not x701) x1090))) x681))
(assert (= (x1044 768) (x478 768)))
(assert (x1276 x1307))
(assert (= (x1044 704) (x478 704)))
(assert (= x401 (=> (and (= x1001 (x333 768)) (= (x333 864) x558) (= x716 (x238 (+ x1001 x558))) (= (x394 896) x208) (= x6 (< x716 x1001))) (and (=> (and (= (x238 (+ x1001 x558)) x1449) (or (and (= x1139 x743) (not x1089)) (and x1089 (> 4294967296 x1549) (= x743 1))) (= (> x1139 0) x1089) (not x6)) x510) (=> x6 x728)))))
(assert (x1276 x731))
(assert (= (x520 224) (x157 224)))
(assert (= (and x410 x741) x492))
(assert (= (x1479 864) (x3 864)))
(assert (= x1491 (=> (= (< 0 x461) x979) (and (=> x979 x74) (=> (not x979) x907)))))
(assert (= (and (not x1292) x324) x1162))
(assert (x1276 x1405))
(assert (x669 x900))
(assert (= x1467 (x552 384)))
(assert (= (x868 224) x1171))
(assert (x1276 x682))
(assert (x669 (x738 160)))
(assert (= (x1163 x1357) (ite (= x1357 (x1326 0)) 1 (x422 x1357))))
(assert (x1276 x1471))
(assert (= x543 x723))
(assert (= (x919 224) (x281 224)))
(assert (x1276 x918))
(assert (x1276 x294))
(assert (= x1503 (=> (and (= (x1521 (x1326 9)) x1288) (= (= 0 x1288) x1401)) (and (=> (and (= x405 (div x351 x1288)) (not x1401)) x427) (=> x1401 x728)))))
(assert (= (+ (x794 x424) 2) (x794 (x500 x424 2))))
(assert (= (x794 (x516 (x482 160))) (x482 160)))
(assert (= (ite (= x167 (x1326 0)) 1 (x422 x167)) (x1521 x167)))
(assert (= (=> (and (= (= x328 0) x930) (= x328 (x1163 (x1326 40)))) (and (=> (not x930) x899) (=> x930 x907))) x844))
(assert (= 2835717307 (x794 (x1326 2835717307))))
(assert (= x1313 (=> (and (= x613 (x1456 384)) (= (= 0 x613) x1399)) (and (=> x1399 x907) (=> (and (not x1399) (= (div x762 x613) x1080)) x739)))))
(assert (x1276 x102))
(assert (x1276 x16))
(assert (= (x1527 160) (x794 (x516 (x1527 160)))))
(assert (x1276 x227))
(assert (= (x1204 224) (x702 224)))
(assert (x1276 x390))
(assert true)
(assert (= x174 (and (not x577) x519)))
(assert (x1276 x129))
(assert (= (x1322 256) (x1034 256)))
(assert (= 464926286 (x794 (x1326 464926286))))
(assert (x1276 x213))
(assert (= (x1326 3296657447) (x516 3296657447)))
(assert (= (x1182 320) (x639 320)))
(assert (= x1187 (=> (and (= (x1163 (x1326 9)) x464) (= (= x464 0) x1392)) (and (=> (and (not x1392) (= (div x941 x464) x216)) x252) (=> x1392 x907)))))
(assert (= (and x45 x626) x1445))
(assert (= x128 (=> (and (= x1534 (x1131 320)) (= (x343 (x516 (x1131 128)) (x516 (x1131 160)) 0) x1558) (= (x500 x1558 2) x1426) (= x1014 (> x1534 x396)) (= (x72 224) x1176) (= x396 (x1163 x1426))) (and (=> x1014 x907) (=> (not x1014) x544)))))
(assert (x1276 x1254))
(assert (x1276 x99))
(assert (x1276 x884))
(assert (= (x868 768) (x51 768)))
(assert (x1276 x67))
(assert (= x1206 (and x174 (not x798))))
(assert (x1276 x968))
(assert (= (=> (and (= (x552 384) x1105) (= x1073 (< 0 x1105)) (= (x887 (- x202 x188)) x293) (= x1467 (x926 416))) (and (=> x1073 x715) (=> (not x1073) x316))) x1102))
(assert (= (x1283 256) (x691 256)))
(assert (= (x591 768) (x15 768)))
(assert (= (x1521 x207) (ite (= (x1326 0) x207) 1 (x422 x207))))
(assert (= x7 (and x1050 x1217)))
(assert (= (x1204 736) (x702 736)))
(assert (= (=> (and (= x708 (< x686 x1559)) (= (div x1190 10000) x686) (= x1559 (x177 864))) (and (=> (not x708) x33) (=> x708 x907))) x1143))
(assert (= (x775 704) (x436 704)))
(assert (= x1098 (=> (= x144 (< 31 x1385)) (and (=> (not x144) x907) (=> x144 x124)))))
(assert (= (ite (= (x1326 0) x641) 1 (x422 x641)) (x1521 x641)))
(assert (= (x1545 704) (x1361 704)))
(assert (= (x779 928) (x606 928)))
(assert (x1276 x567))
(assert (x1276 x974))
(assert (x1276 x900))
(assert (=> (>= 10000 (x664 160)) (= (x516 (x664 160)) (x1326 (x664 160)))))
(assert (x1276 x263))
(assert (= x45 (and x1359 x703)))
(assert (= (and x1535 (not x337)) x525))
(assert (x1276 x501))
(assert (= (x902 224) x408))
(assert (x669 (x1248 160)))
(assert (= true x723))
(assert (x1276 x890))
(assert (= (=> (and (= x978 (x1163 (x1326 39))) (= x925 (= 0 x978))) (and (=> (not x925) x1444) (=> x925 x853))) x542))
(assert (= x1372 (and x758 (not x1082))))
(assert (= (x1120 672) (x1124 672)))
(assert (= x1023 (and x599 (not x747))))
(assert (= (and x331 (not x904)) x189))
(assert (= x1478 (and x1240 x603)))
(assert (= (x670 736) (x1527 736)))
(assert (= (x3 704) (x1479 704)))
(assert (= (x1161 736) (x539 736)))
(assert (x1276 x152))
(assert (x1276 x780))
(assert (= x599 (and x1060 x523)))
(assert (x1276 x1368))
(assert (= (=> (and (= (> x575 x651) x389) (= (div x695 1000000000000000000) x575)) (and (=> (and (not x389) (= x344 (x887 (- x651 x575)))) x1380) (=> x389 x728))) x254))
(assert (x1276 x1242))
(assert (= (x1044 896) (x478 896)))
(assert (x1276 x188))
(assert (x1276 x667))
(assert (x1276 x1280))
(assert (= (=> (and (= x1384 (x571 768)) (= x647 (x571 800)) (= x205 (< x647 x1384))) (and (=> (not x205) x724) (=> x205 x265))) x122))
(assert (= (x794 (x1326 4267106866)) 4267106866))
(assert (x1276 x651))
(assert (x1276 x657))
(assert (x1276 x12))
(assert (= (x1034 224) (x1322 224)))
(assert (= (x436 352) (x775 352)))
(assert (= (or (and (not x454) x749) (and (not x78) x1088)) x932))
(assert (x1276 x727))
(assert (x1276 x408))
(assert (= (x1402 704) (x605 704)))
(assert (= (x794 (x1326 629314576)) 629314576))
(assert (= (x1269 896) (x961 896)))
(assert (= (x130 896) (x1369 896)))
(assert (x1276 x498))
(assert (= (x72 288) (x1290 288)))
(assert (= (=> (and (= x806 x813) (>= x1095 0) (= (= x806 x598) x49) (= x660 x1504) (<= 0 x660) (= (x388 (x516 274184521717934524641157099916833587200)) x1095) (<= 0 x1212) (>= x1083 0) (<= x912 1461501637330902918203684832716283019655932542975) (= (<= x263 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (= x1500 x453) (<= 0 x912) (> x263 35) x1557 (<= 0 x813) (= x1319 x1083) (>= x896 0) x49 (= x1557 (> (x1222 (x516 274184521717934524641157099916833587200)) 0)) (= false x1496) (= x896 x1504) (= x1160 1) (>= 1461501637330902918203684832716283019655932542975 x813) (= x423 773487949) (<= x1212 1461501637330902918203684832716283019655932542975) (<= x896 1461501637330902918203684832716283019655932542975) (= false x1106) (= x811 x1319) (= false x1197) (= x910 false) (= x1504 x598) (>= 1461501637330902918203684832716283019655932542975 x660) (<= x1083 1461501637330902918203684832716283019655932542975) (= x90 x1212)) x1024) x221))
(assert (= (x1216 736) (x996 736)))
(assert (= x481 (=> (and (= (mod (* x725 x247) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x408) (= x374 (= x725 x102)) (= x826 (= x247 0)) (= x200 (= 0 (ite x413 1 0))) (= (or x374 x826) x413) (= (x887 (- x99 x593)) x247) (= x725 (x1521 (x1326 44))) (= (div x408 x247) x102)) (and (=> x200 x728) (=> (not x200) x587)))))
(assert (= (x1283 896) (x691 896)))
(assert (x1276 x998))
(assert (x1276 x752))
(assert (= (x961 320) (x1269 320)))
(assert (x1276 x581))
(assert (= (x697 640) (x346 640)))
(assert (= (and x187 (not x1508)) x763))
(assert (= x1060 (and x563 x1445)))
(assert (x1276 x1499))
(assert (x669 (x833 128)))
(assert (= (x112 128) (x794 (x516 (x112 128)))))
(assert (=> (<= (x833 160) 10000) (= (x516 (x833 160)) (x1326 (x833 160)))))
(assert (= x507 (=> (= x1267 (< 31 x98)) (and (=> (not x1267) x907) (=> x1267 x891)))))
(assert (= x1195 (and x205 x982)))
(assert (= (x670 768) (x1527 768)))
(assert (= (x1331 864) (x745 864)))
(assert (= (x240 640) (x1563 640)))
(assert (x1276 x806))
(assert (= (x697 704) (x346 704)))
(assert (= (and x735 x1265) x888))
(assert (=> (>= 10000 (x1131 160)) (= (x1326 (x1131 160)) (x516 (x1131 160)))))
(assert (x1276 x355))
(assert (x1276 x302))
(assert (= (ite (and x245 x689) (x235 704) (x1563 704)) (x649 704)))
(assert (= (x15 736) (x591 736)))
(assert (= (x1131 160) (x794 (x516 (x1131 160)))))
(assert (x1276 x801))
(assert (x1276 x574))
(assert (= (x145 672) (x943 672)))
(assert (x1276 x229))
(assert (x1276 x1335))
(assert (= (x281 768) (x919 768)))
(assert (= (x794 (x516 (x1114 160))) (x1114 160)))
(assert (x1276 x1226))
(assert (x1276 x1549))
(assert (= (x312 736) (x1115 736)))
(assert (x1276 x957))
(assert (= (x552 320) (x926 320)))
(assert (= x153 (x794 (x516 x153))))
(assert (x669 (x1283 160)))
(assert (= (x1269 1088) (x961 1088)))
(assert (= x212 x1522))
(assert (= (x72 928) (x1290 928)))
(assert (x1276 x286))
(assert (x1276 x939))
(assert (=> (>= 10000 x153) (= (x1326 x153) (x516 x153))))
(assert (= (x516 599290589) (x1326 599290589)))
(assert (= (x478 864) (x1044 864)))
(assert (= (x779 768) (x606 768)))
(assert (x1276 x453))
(assert (x669 (x629 128)))
(assert (x1276 x153))
(assert (x669 274184521717934524641157099916833587200))
(assert (= (div x851 (x1415 2 x1181)) (x368 x851 x1181)))
(assert (= (=> (and (= x1057 (> x1409 x301)) (= x1409 (div x1458 1000000000000000000))) (and (=> x1057 x907) (=> (and (not x1057) (= x219 (x887 (- x301 x1409)))) x1224))) x1532))
(assert (x1276 x1436))
(assert (= x161 (=> (and (= x1483 (x1410 320)) (= x1223 (> x1483 x638))) (and (=> (not x1223) x1252) (=> x1223 x728)))))
(assert (= x1149 (=> (and (= (div x1171 x850) x1347) (= x133 (= x655 x1347)) (= x655 (x992 (x1326 44))) (= x1463 (or x133 x1391)) (= x1071 (= (ite x1463 1 0) 0)) (= x1391 (= 0 x850)) (= (x887 (- x99 x190)) x850) (= (mod (* x655 x850) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1171)) (and (=> (not x1071) x633) (=> x1071 x728)))))
(assert (= (and x604 x619) x880))
(assert (= (and x818 (not x135)) x187))
(assert (= (x552 864) (x926 864)))
(assert (= (x240 800) (x1563 800)))
(assert (x669 (x1290 160)))
(assert (= (x239 320) (x761 320)))
(assert (= (ite (= (x1326 0) x1085) 1 (x422 x1085)) (x1163 x1085)))
(assert (= (x794 (x500 x452 6)) (+ 6 (x794 x452))))
(assert (=> (>= 10000 (x1034 128)) (= (x516 (x1034 128)) (x1326 (x1034 128)))))
(assert (= x1425 (x954 224)))
(assert (= (x483 320) (x1104 320)))
(assert (x1276 x791))
(assert (x1276 x813))
(assert (= (x738 704) (x398 704)))
(assert (= x37 (or (and (not x1398) x1520) (and (not x708) x763))))
(assert (= (x1336 736) (x663 736)))
(assert (x1276 x799))
(assert (x1276 x1301))
(assert (= x1081 (=> (= x950 (< 31 x268)) (and (=> (not x950) x728) (=> x950 x1268)))))
(assert (= (x1527 352) (x670 352)))
(assert (x1276 x716))
(assert (= (x605 768) (x1402 768)))
(assert (x669 (x1443 128)))
(assert (= (x595 320) 0))
(assert (= x380 (or (and x447 x1472) (and x747 x599) (and x371 x820) (and x1315 x387) (and (not x523) x1060) (and x1026 x492) (and x106 x1203) (and x237 x1466) (and x1017 x1002) (and x187 x1508) (and x1399 x392) (and x708 x763) (and x320 (not x784)) (and x416 x89) (and (not x144) x566) (and x1480 x888) (and x349 (not x407)) (and x749 x454) (and x917 (not x291)) (and x1372 x1014) (and x1231 (not x1267)) (and (not x14) x913) (and x1170 x1477) (and x883 x134) (and (not x1547) x230) (and (not x626) x45) (and x1057 x958) (and x1003 x1194) (and x220 x13) (and x36 x1392) (and x802 x611) (and (not x465) x942) (and x572 x661) (and x1251 x92) (and x332 (not x979)) (and (not x563) x1445) (and x602 x1552) (and x1166 x393) (and x39 x1298) (and x648 x1052) (and x1516 x37) (and x880 x914) (and x1308 x889) (and x1103 x1262) (and x703 (not x1359)) (and x1097 x248) (and (not x619) x604) (and x324 x1292) (and x818 x135) (and (not x114) x1293) (and x28 x420) (and (not x274) x125) (and x930 x929) (and x1540 x264) (and x1553 x175) (and x1300 x1138) (and (not x671) x1429) (and x485 x965))))
(assert (x1276 x1072))
(assert (x1276 x1080))
(assert (= (x1322 928) (x1034 928)))
(assert (=> (<= (x1290 160) 10000) (= (x1326 (x1290 160)) (x516 (x1290 160)))))
(assert (= (x126 928) (x1207 928)))
(assert (= (and (not x835) x744) x323))
(assert (= (x670 896) (x1527 896)))
(assert (x1276 x1033))
(assert (= (x606 672) (x779 672)))
(assert (= x47 (and x1028 (not x867))))
(assert (= (x951 704) (x62 704)))
(assert (x669 x656))
(assert (= (x62 672) (x951 672)))
(assert (= (x169 320) (x528 320)))
(assert (= (x394 640) (x1046 640)))
(assert (x1276 x1464))
(assert (=> (<= (x1131 128) 10000) (= (x516 (x1131 128)) (x1326 (x1131 128)))))
(assert (x1276 x545))
(assert (= (x605 320) (x1402 320)))
(assert (= x146 (x794 (x516 x146))))
(assert (= (x1124 704) (x1120 704)))
(assert (= (and (not x92) x1251) x392))
(assert (x1276 x460))
(assert (= (x606 864) (x779 864)))
(assert (=> (>= 10000 (x921 160)) (= (x516 (x921 160)) (x1326 (x921 160)))))
(assert (= (x1326 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x516 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1276 x860))
(assert (= (x1104 768) (x483 768)))
(assert (= (x664 128) (x794 (x516 (x664 128)))))
(assert (x1276 x924))
(assert (= (x794 (x516 (x1443 128))) (x1443 128)))
(assert (= (x516 3504541104) (x1326 3504541104)))
(assert (= (and x1371 x1084) x319))
(assert (x1276 x1244))
(assert (x1276 x614))
(assert (= x1097 (and x1298 (not x39))))
(assert (x1276 x896))
(assert (= (x775 672) (x436 672)))
(assert (x1276 x1121))
(assert (x1276 x1414))
(assert (=> (<= (x629 128) 10000) (= (x1326 (x629 128)) (x516 (x629 128)))))
(assert (x1276 x1395))
(assert (x1276 x351))
(assert (= (x1269 704) (x961 704)))
(assert (x1276 x94))
(assert (x1276 x645))
(assert (= (ite (= (x1326 44) (x1326 0)) 1 (x422 (x1326 44))) (x1521 (x1326 44))))
(assert (= (=> (= x869 (< 0 x1126)) (and (=> (not x869) x728) (=> x869 x1490))) x909))
(assert (= (x72 768) (x1290 768)))
(assert (x669 (x1282 160)))
(assert (= (x1563 672) (x240 672)))
(assert (= (+ (x794 x83) 2) (x794 (x500 x83 2))))
(assert (x1276 x1513))
(assert (x669 x414))
(assert (= (x1216 768) (x996 768)))
(assert (= (x1163 x765) (ite (= x765 (x1326 0)) 1 (x422 x765))))
(assert (x1276 x658))
(assert (x669 (x1114 160)))
(assert (= x644 (=> (and (= x355 (div x618 10000)) (= x1406 (> x1157 x355)) (= x1157 (x329 864))) (and (=> x1406 x728) (=> (not x1406) x724)))))
(assert (= x861 (=> (and (= (x1322 288) x460) (= x227 (x635 224)) (= (x238 (+ x1353 x305)) x25) (= (x343 (x516 (x1034 128)) (x516 (x1034 160)) 0) x821) (= x167 (x500 x821 6)) (= (x736 1024) x890) (= x55 (> x1460 x460)) (= x654 (x1468 896)) (= x1460 (x1322 256)) (= x366 (x1521 x167))) (and (=> (not x55) x530) (=> x55 x728)))))
(assert (x1276 x851))
(assert (= (x1120 768) (x1124 768)))
(assert (= x1100 (x398 288)))
(assert (and (= 1000000000000000000000000 (x1415 10 24)) (= 1000000000 (x1415 10 9)) (= (x1415 10 20) 100000000000000000000) (= 1000000000000000000 (x1415 10 18)) (= (x1415 10 17) 100000000000000000) (= 10000000000000000000000000 (x1415 10 25)) (= 1000000000000 (x1415 10 12)) (= (x1415 10 26) 100000000000000000000000000) (= 1000000 (x1415 10 6)) (= 10000000000000000000000 (x1415 10 22)) (= 1000000000000000000000 (x1415 10 21)) (= (x1415 10 19) 10000000000000000000) (= (x1415 10 27) 1000000000000000000000000000) (= (x1415 10 28) 10000000000000000000000000000) (= 100000000000000000000000 (x1415 10 23)) (= (x1415 10 4) 10000) (= (x1415 10 8) 100000000) (= (x1415 10 10) 10000000000) (= (x1415 10 29) 100000000000000000000000000000) (= (x1415 10 7) 10000000) (= 100 (x1415 10 2)) (= 1000000000000000000000000000000 (x1415 10 30)) (= (x1415 10 14) 100000000000000) (= 10000000000000 (x1415 10 13)) (= 1000000000000000 (x1415 10 15)) (= (x1415 10 11) 100000000000) (= 1 (x1415 10 0)) (= 10 (x1415 10 1)) (= 1000 (x1415 10 3)) (= (x1415 10 5) 100000) (= 10000000000000000 (x1415 10 16))))
(assert (= (x72 864) (x1290 864)))
(assert (x669 (x112 160)))
(assert (= x1488 (and x276 x1043)))
(assert (x1276 x1243))
(assert (= x756 (or (and (not x1111) x832) (and x451 (not x1175)))))
(assert (= (x591 672) (x15 672)))
(assert (= (x738 672) (x398 672)))
(assert (= (x1521 (x1326 9)) (ite (= (x1326 9) (x1326 0)) 1 (x422 (x1326 9)))))
(assert (x1276 x977))
(assert (= (=> (and (= (= (ite x1476 1 0) 0) x1308) (= (or x91 x360) x1476) (= x360 (= x1314 x1550)) (= (x398 256) x498) (= x101 (mod (* x498 x1550) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1314 (div x101 x498)) (= x1550 (x1163 (x1326 39))) (= x91 (= 0 x498))) (and (=> x1308 x907) (=> (not x1308) x844))) x1444))
(assert (= (x516 2484372501) (x1326 2484372501)))
(assert (= (and x485 (not x965)) x89))
(assert (x1276 x1352))
(assert (x1276 x871))
(assert (x1276 x1381))
(assert (= (and (not x1223) x59) x1289))
(assert (= (x1216 352) (x996 352)))
(assert (= (x1269 640) (x961 640)))
(assert (= x226 (=> (and (= x1307 (x887 (- x1317 x1185))) (= (< x390 x1134) x1103) (= (x466 x26) x390) (= x1134 (x1248 736)) (= x26 (x343 (x516 (x1248 128)) (x516 (x1248 160)) 0))) (and (=> x1103 x907) (=> (and (= (x650 768) x149) (= x414 (x239 224)) (= x1020 (x1248 736)) (= x278 (x1408 384)) (= (x238 (+ x278 512)) x1417) (= x1355 (x1408 256)) (= x918 (x887 (- x390 x1134))) (or (and x76 x1362 (= (x673 (x516 274184521717934524641157099916833587200)) x1169) (= x731 (x673 (x516 x414))) x314 (= (<= x1169 (x555 (x516 274184521717934524641157099916833587200))) x76) (= (= (x555 (x516 x414)) x731) x314) (> 4294967296 x760)) (not x1362)) (= x1225 (x238 (+ 480 x278))) (= x589 (x272 288)) (= x1058 (> x1277 0)) (= x565 (x634 672)) (or (not x1058) (and (< x653 4294967296) x1058)) (= (x238 (+ x278 64)) x286) (not x1103) (= (< 0 x862) x1362) (= x897 (x830 (x1326 10)))) x2)))))
(assert (x1276 x662))
(assert (= (x51 864) (x868 864)))
(assert (= (x520 320) (x157 320)))
(assert (x1276 x232))
(assert (= (x794 (x1326 3184006219)) 3184006219))
(assert (= x853 (=> (and (= x490 (x500 x1178 8)) (= (x1443 256) x808) (= x115 (x688 x490)) (= (> x115 x980) x1203) (= (x182 224) x970) (= (x343 (x516 (x1443 128)) (x516 (x1443 160)) 0) x1178) (= x980 (x238 (+ x115 x808)))) (and (=> x1203 x907) (=> (not x1203) x877)))))
(assert (x1276 x190))
(assert (= (x1545 640) (x1361 640)))
(assert (= (ite (= (x1326 0) x1451) 1 (x422 x1451)) (x1163 x1451)))
(assert (= (ite (and (not x454) x749) (ite (and x709 x78 x1088) (x1199 (x516 x414)) (x388 (x516 x414))) (x388 (x516 x414))) (x1040 (x516 x414))))
(assert (x1276 x878))
(assert (x1276 x1087))
(assert (= x623 (=> (and (= x632 (x1443 224)) (= x416 (> x94 x1221)) (= x588 (x500 x699 6)) (= (x1114 256) x94) (= x699 (x343 (x516 (x1114 128)) (x516 (x1114 160)) 0)) (= (x887 (- x1005 x1544)) x1511) (= x1221 (x678 (x1326 40)))) (and (=> x416 x907) (=> (and (= (x887 (- x1221 x94)) x1471) (not x416)) x181)))))
(assert (= (x943 640) (x145 640)))
(assert (= (x1040 (x516 274184521717934524641157099916833587200)) (ite (and x749 (not x454)) (ite (and x709 x1088 x78) (x1199 (x516 274184521717934524641157099916833587200)) (x388 (x516 274184521717934524641157099916833587200))) (x388 (x516 274184521717934524641157099916833587200)))))
(assert (= (x1523 672) (x479 672)))
(assert (x1276 x445))
(assert (x1276 x1360))
(assert (=> (>= 10000 x1167) (= (x1326 x1167) (x516 x1167))))
(assert (x1276 x88))
(assert (x1276 x1374))
(assert (= (x926 704) (x552 704)))
(assert (= x735 (and x1267 x1231)))
(assert (x1276 x1229))
(assert (= (and (not x237) x1466) x1017))
(assert (= (x126 896) (x1207 896)))
(assert (= (x1207 672) (x126 672)))
(assert (x1276 x1266))
(assert (= (and x407 x349) x1231))
(assert (= (x794 (x516 (x1248 160))) (x1248 160)))
(assert (= (x794 (x1326 596573372)) 596573372))
(assert (= (x1322 704) (x1034 704)))
(assert (=> (<= (x1248 128) 10000) (= (x1326 (x1248 128)) (x516 (x1248 128)))))
(assert (= (x983 736) (x954 736)))
(assert (x1276 x1353))
(assert (= (and (not x1552) x602) x611))
(assert (x669 (x539 128)))
(assert (= x1192 (=> (and (= (x1163 x1085) x16) (= x1085 (x343 (x516 (x539 128)) (x516 (x539 160)) 0)) (= x1236 (x539 736)) (= x1002 (< x16 x1236))) (and (=> x1002 x907) (=> (not x1002) x1349)))))
(assert (= (=> (and (= (> x1284 x86) x1166) (= x1284 (x312 960)) (= x86 (x312 768))) (and (=> x1166 x907) (=> (not x1166) x1400))) x257))
(assert (x1276 x1126))
(assert (= (=> (and (= (x486 736) x279) (= x12 (x948 800)) (= x1130 false) (= (x683 768) x370) (= x71 (x103 768))) x111) x41))
(assert (x1276 x1337))
(assert (= x183 (x697 896)))
(assert (= (x394 864) (x1046 864)))
(assert (x1276 x816))
(assert (= (x112 160) (x794 (x516 (x112 160)))))
(assert (= (x951 320) (x62 320)))
(assert (= (x1216 320) (x996 320)))
(assert (= x318 (=> (and (= (x238 (+ x518 x751)) x307) (= (< x99 x190) x835) (= (x992 (x1326 41)) x190) (= x202 (x51 288))) (and (=> (not x835) x1149) (=> x835 x728)))))
(assert (x1276 x1167))
(assert (= (=> (= x1122 (> x63 31)) (and (=> (and x1122 (= (x843 1056) x1526) (or (and (= x303 x275) (not x1174)) (and (= x303 1) x1174 (< x363 4294967296))) (= x1174 (> x275 0))) x893) (=> (not x1122) x728))) x1490))
(assert (= (=> (and (= x768 (x126 768)) (= x1552 (< x768 x614)) (= (x126 1024) x614)) (and (=> x1552 x907) (=> (not x1552) x34))) x73))
(assert (x1276 x90))
(assert (= (and x267 x42) x58))
(assert (= x220 (and x942 x465)))
(assert (= x997 (and x429 (not x399))))
(assert (x1276 x565))
(assert (= (and x1215 x701) x172))
(assert (= (x398 736) (x738 736)))
(assert (= (x961 864) (x1269 864)))
(assert (= x1194 (and (not x175) x1553)))
(assert (= (x479 224) (x1523 224)))
(assert (x1276 x96))
(assert (=> (>= 10000 (x1283 160)) (= (x1326 (x1283 160)) (x516 (x1283 160)))))
(assert (=> (>= 10000 x900) (= (x1326 x900) (x516 x900))))
(assert (x1276 x1176))
(assert (= (x398 256) (x738 256)))
(assert (= (x571 640) (ite (and x1387 x607) (x1431 640) (x663 640))))
(assert (= (x745 672) (x1331 672)))
(assert (=> (>= 10000 (x738 128)) (= (x516 (x738 128)) (x1326 (x738 128)))))
(assert (x1276 x862))
(assert (= (ite (= (x1326 0) (x1326 41)) 1 (x422 (x1326 41))) (x1163 (x1326 41))))
(assert (= x1016 (=> (and (= x371 (> x96 x325)) (= x96 (div x159 1000000000000000000))) (and (=> x371 x907) (=> (and (= (x887 (- x325 x96)) x1287) (not x371)) x509)))))
(assert (x1276 x999))
(assert (x669 (x1282 128)))
(assert (x1276 x30))
(assert (x1276 x459))
(assert (= (x1563 736) (x240 736)))
(assert (= (=> (and (= x39 (< x1242 x1012)) (= x1012 (x511 320))) (and (=> x39 x907) (=> (not x39) x81))) x1224))
(assert (= x781 (=> (and (= (mod (* x1247 x270) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1027) (= x823 (div x1027 x270)) (= (x1521 (x1326 43)) x77) (= (or x1038 x313) x53) (= (x339 256) x501) (= (= x270 0) x313) (= (x339 224) x270) (= (x339 256) x1247) (= (= x823 x1247) x1038) (= x1542 (= 0 (ite x53 1 0)))) (and (=> x1542 x728) (=> (not x1542) x1)))))
(assert (=> (>= 10000 (x1282 128)) (= (x1326 (x1282 128)) (x516 (x1282 128)))))
(assert (x1276 x488))
(assert (= (x72 736) (x1290 736)))
(assert (= (x1326 1461501637330902918203684832716283019655932542975) (x516 1461501637330902918203684832716283019655932542975)))
(assert (= (x571 736) (ite (and x1387 x607) (x1431 736) (x663 736))))
(assert (= (x483 928) x443))
(assert (= (x1402 928) (x605 928)))
(assert (x1276 x473))
(assert (= (x1348 704) (x1537 704)))
(assert (x1276 x363))
(assert (=> (<= (x879 128) 10000) (= (x516 (x879 128)) (x1326 (x879 128)))))
(assert (x1276 x1156))
(assert (x1276 x354))
(assert (= (x794 (x1326 1401663147)) 1401663147))
(assert (= (ite (= (x1326 0) (x1326 43)) 1 (x422 (x1326 43))) (x1521 (x1326 43))))
(assert (x1276 x495))
(assert (= (x954 672) (x983 672)))
(assert (= (x794 (x516 (x664 160))) (x664 160)))
(assert (x1276 x86))
(assert (= (x691 768) (x1283 768)))
(assert (= 1889567281 (x794 (x1326 1889567281))))
(assert (= x1540 (or (and (not x822) x1023) (and (not x416) x89))))
(assert (= (x1161 320) (x539 320)))
(assert (= x969 (and x995 x1073)))
(assert (x1276 x1054))
(assert (x1276 x31))
(assert (= (x1273 704) (x1456 704)))
(assert (x1276 x1139))
(assert (= (+ (x794 x1214) 6) (x794 (x500 x1214 6))))
(assert (= (=> (and (= (x394 768) x1156) (= (x394 896) x977) (= x1175 (> x1156 x977)) (= x1374 (x1046 928))) (and (=> x1175 x401) (=> (not x1175) x10))) x854))
(assert (= (x516 3963136098) (x1326 3963136098)))
(assert (= (x794 (x1326 599290589)) 599290589))
(assert (x1276 x1550))
(assert (x1276 x590))
(assert (x1276 x493))
(assert (= (x1182 896) (x639 896)))
(assert (x1276 x303))
(assert (= (=> (and (= x1440 (x312 768)) (= (< x1127 x1440) x249) (= (x312 960) x1127) (= (x1115 992) x1352)) (and (=> (not x249) x212) (=> x249 x257))) x124))
(assert (x1276 x25))
(assert (= (x516 274184521717934524641157099916833587200) (x1326 274184521717934524641157099916833587200)))
(assert (= (x1161 704) (x539 704)))
(assert (x1276 x347))
(assert (x1276 x1287))
(assert (x1276 x474))
(assert (= (or (and x1068 x391) (and (not x955) x1172) (and x1028 x867)) x594))
(assert (= (x1207 640) (x126 640)))
(assert (x1276 x155))
(assert (x1276 x1075))
(assert (x1276 x115))
(assert (=> (<= (x528 160) 10000) (= (x1326 (x528 160)) (x516 (x528 160)))))
(assert (x1276 x742))
(assert (= x298 (x1161 352)))
(assert (x1276 x223))
(assert (= x1172 (and x668 (not x920))))
(assert (= (and x419 x1447) x451))
(assert (x1276 x695))
(assert (x1276 x278))
(assert (x1276 x476))
(assert (x1276 x750))
(assert (x1276 x1365))
(assert (= x332 (and x601 x987)))
(assert (x1276 x1119))
(assert (= (x130 320) (x1369 320)))
(assert (x1276 x1259))
(assert (= (x346 320) (x697 320)))
(assert (= (x1034 864) (x1322 864)))
(assert (= (x1283 160) (x794 (x516 (x1283 160)))))
(assert (= (x515 768) (x1158 768)))
(assert (x1276 x107))
(assert (= (=> (= true x1246) x24) x907))
(assert (= (=> (= x1270 (> x206 0)) (and (=> x1270 x382) (=> (not x1270) x728))) x1411))
(assert (x1276 x1007))
(assert (= (x478 1056) (x1044 1056)))
(assert (= x316 (=> (and (= x473 (x9 736)) (= x110 (x9 640)) (= x1485 (x547 928)) (= (< x110 x473) x1111)) (and (=> (not x1111) x10) (=> x1111 x728)))))
(assert (x1276 x1314))
(assert (= (x516 464926286) (x1326 464926286)))
(assert (= x1256 (=> (= (> x299 0) x1208) (and (=> (not x1208) x728) (=> (and (= x1280 (ite (< x204 32) x204 32)) (or (not x1189) (and (< x48 4294967296) x1189)) (= (< 0 x730) x1189) (= (x238 (+ 32 x306)) x1501) (= (x1158 576) x306) x1208) x403)))))
(assert (= (x15 896) (x591 896)))
(assert (x1276 x1364))
(assert (= (=> (and (= (x308 352) x1360) (= x114 (> (x368 x1360 x680) 0)) (= x1011 (x887 (- 32 x1243))) (= x680 (mod (* 8 x1011) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x308 320) x1243)) (and (=> x114 x1354) (=> (not x114) x907))) x336))
(assert (x1276 x1539))
(assert (x1276 x527))
(assert (= (x1336 672) (x663 672)))
(assert (= (x1069 320) (x251 320)))
(assert (= (x1331 352) (x745 352)))
(assert (= (x1163 (x516 x656)) (ite (= (x1326 0) (x516 x656)) 1 (x422 (x516 x656)))))
(assert (= (x1283 864) (x691 864)))
(assert (= 2681579215 (x794 (x1326 2681579215))))
(assert (= (x1124 864) (x1120 864)))
(assert (= (div x1360 (x1415 2 x680)) (x368 x1360 x680)))
(assert (x1276 x864))
(assert (= (and (not x1480) x888) x320))
(assert (= (x1523 352) (x479 352)))
(assert (x1276 x1416))
(assert (x1276 x1394))
(assert (= (x483 672) (x1104 672)))
(assert (x1276 x82))
(assert (= (and x1437 (not x6)) x609))
(assert (= x495 (x1537 736)))
(assert (= (=> (= x619 (< 31 x1320)) (and (=> x619 x541) (=> (not x619) x907))) x352))
(assert (= x1262 (and (not x1516) x37)))
(assert (x1276 x759))
(assert (= (x868 640) (x51 640)))
(assert (x1276 x377))
(assert (= x1459 (=> (and (= (= x994 0) x1432) (= (x1322 256) x994) (= x321 (div x1538 x994)) (= (= (ite x1261 1 0) 0) x1155) (= x805 (= x568 x321)) (= (mod (* x994 x568) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1538) (= (x1521 (x1326 39)) x568) (= (or x1432 x805) x1261)) (and (=> x1155 x728) (=> (not x1155) x536)))))
(assert (x1276 x1020))
(assert (= (x605 640) (x1402 640)))
(assert (= (=> (and (= x155 (x455 896)) (= x448 (x1361 928)) (= x146 (x238 (+ 17 x448))) (= x1249 (x922 (x516 x146))) (= x737 (not (< 0 x155)))) (and x1015 x737)) x119))
(assert (x1276 x1355))
(assert (x1276 x468))
(assert (= (x251 768) (x1069 768)))
(assert (x1276 x299))
(assert (= (x251 640) (x1069 640)))
(assert (x1276 x928))
(assert (= (x1163 (x1326 43)) (ite (= (x1326 0) (x1326 43)) 1 (x422 (x1326 43)))))
(assert (x1276 x1311))
(assert (x1276 x52))
(assert (= (x1545 736) (x1361 736)))
(assert (= (and x332 x979) x942))
(assert (= (x738 640) (x398 640)))
(assert (x1276 x298))
(assert (= (=> (and (= x139 (< 0 x1150)) (= x1150 (x308 320))) (and (=> (not x139) x1354) (=> x139 x336))) x1165))
(assert (=> (>= 10000 (x1248 160)) (= (x516 (x1248 160)) (x1326 (x1248 160)))))
(assert (= (x169 928) (x528 928)))
(assert (x669 (x629 160)))
(assert (= (x868 672) (x51 672)))
(assert (= (x794 (x1326 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x530 (=> (and (= x867 (= 0 x1346)) (= (x1521 (x1326 39)) x1346)) (and (=> (not x867) x1459) (=> x867 x1076)))))
(assert (= (x290 640) (x484 640)))
(assert (x1276 x1434))
(assert (x1276 x1190))
(assert (= (x951 640) (x62 640)))
(assert (= (x921 160) (x794 (x516 (x921 160)))))
(assert (x669 (x1527 128)))
(assert (= (and (not x1166) x393) x1088))
(assert (x1276 x219))
(assert (= x1090 (=> (and (= x770 (x238 (+ 1 x682))) (= (= x770 20) x458) (= x682 (x1545 928))) (and (=> (not x458) x119) (=> x458 x397)))))
(assert (x1276 x660))
(assert (= (x240 320) (x1563 320)))
(assert (= x252 (=> (and (or (and (= 1 x975) x245 (< x1381 4294967296)) (and (not x245) (= x1244 x975))) (= (> x1244 0) x245) (= (x1116 800) x1453)) x225)))
(assert (x669 (x112 128)))
(assert (= x1188 (=> (and (= (x177 864) x503) (= x1281 (x177 768)) (= (< x1056 x1281) x135) (= x258 (x177 704)) (= x1056 (x238 (+ x1281 x503)))) (and (=> x135 x907) (=> (not x135) x561)))))
(assert (= (x1046 352) (x394 352)))
(assert (= (x552 768) (x926 768)))
(assert (= (x72 352) (x1290 352)))
(assert (= (x483 640) (x1104 640)))
(assert (= (and x47 (not x1155)) x1390))
(assert (= x818 (or (and (not x1170) x1477) (and x735 (not x1265)))))
(assert (x1276 x903))
(assert (= (x738 768) (x398 768)))
(assert (= (=> (= (> x363 31) x1403) (and (=> (not x1403) x728) (=> x1403 x138))) x1264))
(assert (= (x484 704) (x290 704)))
(assert (x669 (x1131 160)))
(assert (= (ite (and x1387 x607) (x1431 768) (x663 768)) (x571 768)))
(assert (x1276 x344))
(assert (= (x398 1056) (x738 1056)))
(assert (x1276 x841))
(assert (= (x15 928) (x591 928)))
(assert (= (x290 864) (x484 864)))
(assert (= (and x84 (not x435)) x1316))
(assert (= (x693 128) (x794 (x516 (x693 128)))))
(assert (=> (>= 10000 x714) (= (x1326 x714) (x516 x714))))
(assert (= (or (and x1472 (not x447)) (and x758 x1082) (and x925 x1162)) x106))
(assert (=> (<= (x833 128) 10000) (= (x516 (x833 128)) (x1326 (x833 128)))))
(assert (= (x779 640) (x606 640)))
(assert (= (and (not x1235) x533) x429))
(assert (= (x605 672) (x1402 672)))
(assert (x1276 x489))
(assert (x1276 x1467))
(assert (= (x697 736) (x346 736)))
(assert (= (or (and x901 (not x812)) (and x392 (not x1399))) x1477))
(assert (x1276 x850))
(assert (= (and x58 (not x1173)) x1215))
(assert (= (x1034 768) (x1322 768)))
(assert (= x532 (and x1285 (not x458))))
(assert (= (x1120 736) (x1124 736)))
(assert (x1276 x859))
(assert (= (x794 (x1326 3296657447)) 3296657447))
(assert (x1276 x258))
(assert (= (x1326 2681579215) (x516 2681579215)))
(assert (= (x1290 704) (x72 704)))
(assert (x1276 x870))
(assert (x1276 x1323))
(assert (= (=> (and (not (= 2835717307 x1375)) (not (= 599290589 x1375)) (not (= 2869116585 x1375)) (not (= x1375 2209625481)) (not (= x1375 3567397854)) (not (= 4267106866 x1375)) (not (= 31576340 x1375)) (= (x422 (x1326 0)) x582) (not (= x1375 3092021830)) (not (= x1375 3184006219)) (not (= x1375 3296657447)) (not (= x1375 1401663147)) (not (= x1375 1977493762)) (not (= 464926286 x1375)) (not (= x1375 2052391781)) (not (= x1375 2757214935)) (not (= x1375 961581905)) (not (= 2681579215 x1375)) (not (= 2316151882 x1375)) (not (= x1375 2484372501)) (not (= x1375 3065339685)) (not (= 2780307423 x1375)) (not (= 629314576 x1375)) (not (= x1375 157198259)) (not (= 1888058147 x1375)) (not (= 3963136098 x1375)) (= x648 (< 0 x582)) (= 773487949 x1375) (not (= 596573372 x1375)) (not (= 1020253707 x1375)) (not (= 348537858 x1375)) (not (= x1375 3504541104)) (not (= 1851080549 x1375))) (and (=> (not x648) x467) (=> x648 x907))) x21))
(assert (x1276 x423))
(assert (= (x738 352) (x398 352)))
(assert (= x292 (=> (= x563 (> x1260 0)) (and (=> x563 x1004) (=> (not x563) x907)))))
(assert (= 961581905 (x794 (x1326 961581905))))
(assert (= (x539 672) (x1161 672)))
(assert (= x372 (=> (and (= x875 (x887 (- x17 x65))) (= x657 (x629 1056)) (= x1229 (x795 (x1326 40))) (= x1389 (> x657 x1229))) (and (=> x1389 x728) (=> (and (not x1389) (= x696 (x887 (- x1229 x657)))) x1090)))))
(assert (= (x983 352) (x954 352)))
(assert (= x1423 x607))
(assert (x1276 x1501))
(assert (= (x1336 640) (x663 640)))
(assert (= (x571 320) (ite (and x1387 x607) (x1431 320) (x663 320))))
(assert (= (x794 (x1326 1888058147)) 1888058147))
(assert (= x267 (and x7 x1554)))
(assert (x1276 x1031))
(assert (= (x515 352) (x1158 352)))
(assert (x1276 x464))
(assert (x1276 x275))
(assert (= (x794 (x516 (x1290 128))) (x1290 128)))
(assert (= (x1326 2052391781) (x516 2052391781)))
(assert (= (x961 928) (x1269 928)))
(assert (= (x591 640) (x15 640)))
(assert (x1276 x1453))
(assert (= (x919 640) (x281 640)))
(assert (x1276 x686))
(assert (= (x346 672) (x697 672)))
(assert (= (x794 (x516 x656)) x656))
(assert (= (x1124 896) (x1120 896)))
(assert (x1276 x712))
(assert (x1276 x1358))
(assert (x1276 x1027))
(assert (= (x312 960) x1352))
(assert (= (x478 672) (x1044 672)))
(assert (x1276 x692))
(assert (x1276 x687))
(assert (x1276 x912))
(assert (= (x670 672) (x1527 672)))
(assert (= (x3 992) (x1479 992)))
(assert (= x1152 (=> (and (= x1239 (x343 (x516 (x738 128)) (x516 (x738 160)) 0)) (= (x1295 224) x1539) (= (> x755 x1051) x1292) (= (x398 256) x755) (= (x873 1024) x939) (= (x238 (+ x759 x687)) x1254) (= (x398 288) x1051) (= (x1163 x722) x1100) (= x107 (x786 896)) (= (x500 x1239 6) x722)) (and (=> x1292 x907) (=> (not x1292) x542)))))
(assert (= x832 (or (and x995 (not x1073)) (and x1099 (not x506)))))
(assert (= (x983 704) (x954 704)))
(assert (= x395 (and x1478 x1403)))
(assert (= x230 (and x14 x913)))
(assert (= (x1521 x322) (ite (= x322 (x1326 0)) 1 (x422 x322))))
(assert (= (=> (= (> x1543 0) x1217) (and (=> (not x1217) x728) (=> x1217 x450))) x1147))
(assert (= (=> (and (= x1546 (x343 (x516 (x693 128)) (x516 (x693 160)) 0)) (= x1237 (< x1091 x692)) (= (x693 256) x434) (= (x500 x1546 8) x578) (= x488 (x19 224)) (= (x1209 x578) x692) (= (x238 (+ x434 x692)) x1091)) (and (=> x1237 x728) (=> (not x1237) x911))) x1076))
(assert (= (and x572 (not x661)) x410))
(assert (x1276 x357))
(assert (x1276 x404))
(assert (= (+ 2 (x794 x1558)) (x794 (x500 x1558 2))))
(assert (x1276 x179))
(assert (x1276 x1345))
(assert (= (x1326 3184006219) (x516 3184006219)))
(assert (= x935 (and x1423 x1328)))
(assert (= x181 (=> (and (= x215 (x350 x1451)) (= (x1108 896) x105) (= x264 (< x215 x562)) (= (x500 x452 6) x1451) (= x452 (x343 (x516 (x921 128)) (x516 (x921 160)) 0)) (= (x921 1056) x562)) (and (=> (not x264) x849) (=> x264 x907)))))
(assert (= (x1369 928) (x130 928)))
(assert (= x533 (or (and x982 (not x205)) (and x947 (not x1406)))))
(assert (x1276 x1029))
(assert (x1276 x307))
(assert (= (and x1195 x837) x1050))
(assert (= (+ 8 (x794 x1546)) (x794 (x500 x1546 8))))
(assert (x1276 x829))
(assert (x1276 x293))
(assert (x1276 x146))
(assert (x1276 x518))
(assert (x1276 x154))
(assert (= (x691 352) (x1283 352)))
(assert (= (x1163 x490) (ite (= x490 (x1326 0)) 1 (x422 x490))))
(assert (x669 (x1131 128)))
(assert (= x324 (and (not x802) x611)))
(assert (x1276 x1066))
(assert (= (=> (and (= (x1521 (x516 x714)) x183) (= (x697 896) x1422) (= x837 (> x1422 0)) (= x714 (x238 (+ x1515 17))) (= (x346 928) x1515)) (and (=> (and (or (and (= x480 x1543) (not x1382)) (and (= x1543 1) (> 4294967296 x791) x1382)) (= (< 0 x480) x1382) x837) x1147) (=> (not x837) x1015))) x265))
(assert (= (x794 (x516 (x1527 128))) (x1527 128)))
(assert (x1276 x38))
(assert (x1276 x760))
(assert (= (x1283 704) (x691 704)))
(assert (= 2484372501 (x794 (x1326 2484372501))))
(assert (= (x520 256) (x157 256)))
(assert (x1276 x1185))
(assert (= (x1326 773487949) (x516 773487949)))
(assert (= x616 (=> (and (= (< x617 1000000000000000000) x741) (= (x1329 224) x617)) (and (=> x741 x162) (=> (not x741) x509)))))
(assert (x1276 x1181))
(assert (x1276 x558))
(assert (x1276 x790))
(assert (x669 x714))
(assert (x1276 x201))
(assert (x1276 x1011))
(assert (= (x1044 640) (x478 640)))
(assert (= (ite (= (x1326 0) (x516 x714)) 1 (x422 (x516 x714))) (x1521 (x516 x714))))
(assert (= 157198259 (x794 (x1326 157198259))))
(assert (= x1291 (or x1146 (and x1285 x458) (and x267 (not x42)))))
(assert (= (x1369 1056) x104))
(assert (x1276 x584))
(assert (= (=> (and (= x783 (x23 736)) (= (x97 (x1326 9)) x38) (= x1235 (> x783 x38))) (and (=> (not x1235) x1421) (=> x1235 x728))) x724))
(assert (= x728 (=> (= true x1130) x111)))
(assert (= (and (not x79) x600) x331))
(assert (= (x62 896) (x951 896)))
(assert (= (and (not x551) x1390) x391))
(assert (= x217 (=> (and (= x42 (> x1475 x816)) (= x1475 (x639 768)) (= (x639 960) x816) (= (x1182 992) x260)) (and (=> x42 x718) (=> (not x42) x397)))))
(assert (= (x629 160) (x794 (x516 (x629 160)))))
(assert (x1276 x726))
(assert (= (and (not x984) x1289) x1318))
(assert (x1276 x165))
(assert (= (x126 736) (x1207 736)))
(assert (= (=> (= (> x1434 0) x407) (and (=> x407 x507) (=> (not x407) x907))) x1258))
(assert (= (=> (= x465 (< 31 x674)) (and (=> (not x465) x907) (=> x465 x1461))) x74))
(assert (=> (<= (x629 160) 10000) (= (x1326 (x629 160)) (x516 (x629 160)))))
(assert (= (=> (= x1084 (< 0 x29)) (and (=> x1084 x1081) (=> (not x1084) x728))) x1018))
(assert (x1276 x1132))
(assert (= (x1163 (x1326 39)) (ite (= (x1326 39) (x1326 0)) 1 (x422 (x1326 39)))))
(assert (x1276 x1036))
(assert (= (x1336 704) (x663 704)))
(assert (= (x1326 1020253707) (x516 1020253707)))
(assert (= (x1115 352) (x312 352)))
(assert (x1276 x405))
(assert (x1276 x1277))
(assert (x1276 x376))
(assert (= (x130 736) (x1369 736)))
(assert (= (x281 864) (x919 864)))
(assert (x1276 x764))
(assert (= (or (and (not x701) x1215) (and (not x1389) x1316)) x1285))
(assert (x1276 x575))
(assert (x1276 x1559))
(assert (= (x130 768) (x1369 768)))
(assert (= (=> (and (= (div x695 x160) x1226) (= x1301 (x992 (x1326 43))) (= x1343 (= x477 x1226)) (= x695 (mod (* x160 x477) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x337 (= (ite x1388 1 0) 0)) (= (x1363 256) x651) (= x906 (= 0 x160)) (= x477 (x1363 256)) (= x160 (x1363 224)) (= (or x1343 x906) x1388)) (and (=> x337 x728) (=> (not x337) x254))) x769))
(assert (= (and x812 x901) x1251))
(assert (= (x394 768) (x1046 768)))
(assert (= (x833 128) (x794 (x516 (x833 128)))))
(assert (= (x1273 352) (x1456 352)))
(assert (x1276 x306))
(assert (x1276 x409))
(assert (=> (>= 10000 (x1527 128)) (= (x1326 (x1527 128)) (x516 (x1527 128)))))
(assert (x1276 x1249))
(assert (= (x1484 (x516 274184521717934524641157099916833587200)) (ite (and (not x1389) x1316) (ite (and x1215 x701 x676) (x642 (x516 274184521717934524641157099916833587200)) (x388 (x516 274184521717934524641157099916833587200))) (x388 (x516 274184521717934524641157099916833587200)))))
(assert (= (x951 1088) (x62 1088)))
(assert (= (x528 864) (x169 864)))
(assert (= x715 (=> (and (= (div x171 x870) x1164) (= (or x934 x839) x960) (= x774 (= 0 (ite x960 1 0))) (= x839 (= x373 x1164)) (= x373 (x992 (x1326 9))) (= x171 (mod (* x870 x373) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x552 352) x870) (= (= 0 x870) x934)) (and (=> x774 x728) (=> (not x774) x108)))))
(assert (= (=> (and (= (x482 736) x959) (= x796 (> x959 0))) (and (=> (not x796) x728) (=> x796 x430))) x1245))
(assert (= (x1329 704) (x491 704)))
(assert (x1276 x1164))
(assert (= (x794 (x1326 3092021830)) 3092021830))
(assert (= (x794 (x516 (x738 128))) (x738 128)))
(assert (x1276 x1241))
(assert (x1276 x77))
(check-sat)
