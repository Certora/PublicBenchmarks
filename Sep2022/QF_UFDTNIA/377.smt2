(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x880 0)) (((x661 (x304 Int)) (x1474 (x476 x880) (x522 x880) (x1351 Int)) (x1577 (x183 x880) (x801 Int)))))
(declare-fun x988 () Int)
(declare-fun x1439 () Bool)
(declare-fun x1331 () Int)
(declare-fun x1142 () Int)
(declare-fun x826 () Int)
(declare-fun x202 () Bool)
(declare-fun x481 () Bool)
(declare-fun x756 () Bool)
(declare-fun x754 () Bool)
(declare-fun x494 () x880)
(declare-fun x1541 () Int)
(declare-fun x1054 () Int)
(declare-fun x1030 () Bool)
(declare-fun x574 () Int)
(declare-fun x1116 () Bool)
(declare-fun x1324 () x880)
(declare-fun x467 () Int)
(declare-fun x17 () x880)
(declare-fun x314 () Int)
(declare-fun x299 () Int)
(declare-fun x429 (Int) Int)
(declare-fun x1546 () Int)
(declare-fun x1424 () Int)
(declare-fun x200 () Int)
(declare-fun x218 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x497 () Int)
(declare-fun x87 () x880)
(declare-fun x680 () Int)
(declare-fun x1291 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x1545 () Int)
(declare-fun x81 () Int)
(declare-fun x52 () Int)
(declare-fun x1478 () x880)
(declare-fun x957 () Bool)
(declare-fun x1457 (Int) Int)
(declare-fun x501 () Int)
(declare-fun x970 () Int)
(declare-fun x1506 () Int)
(declare-fun x1132 () Bool)
(declare-fun x178 () Int)
(declare-fun x1167 () Int)
(declare-fun x1380 () Bool)
(declare-fun x313 () Bool)
(declare-fun x120 () Int)
(declare-fun x1113 () Int)
(declare-fun x478 () Bool)
(declare-fun x449 () Bool)
(declare-fun x1096 () Int)
(declare-fun x1157 () Bool)
(declare-fun x1059 () Int)
(declare-fun x374 () Int)
(declare-fun x987 () Bool)
(declare-fun x1335 () x880)
(declare-fun x828 () Int)
(declare-fun x939 () Bool)
(declare-fun x789 () x880)
(declare-fun x912 () x880)
(declare-fun x1397 () Int)
(declare-fun x999 () Int)
(declare-fun x185 () x880)
(declare-fun x1554 () Bool)
(declare-fun x624 () Int)
(declare-fun x972 () Int)
(declare-fun x145 () Int)
(declare-fun x1240 () Int)
(declare-fun x1568 () Bool)
(declare-fun x976 () Bool)
(declare-fun x783 () Int)
(declare-fun x1220 () x880)
(declare-fun x528 () Int)
(declare-fun x835 (x880) Int)
(declare-fun x63 () x880)
(declare-fun x1579 (Int) Int)
(declare-fun x1058 () Bool)
(declare-fun x855 () Int)
(declare-fun x102 () Int)
(declare-fun x811 () Int)
(declare-fun x1210 () x880)
(declare-fun x1060 () Int)
(declare-fun x184 () x880)
(declare-fun x1513 () x880)
(declare-fun x819 () x880)
(declare-fun x206 () Bool)
(declare-fun x94 () x880)
(declare-fun x539 () x880)
(declare-fun x381 (Int) Int)
(declare-fun x1281 () Bool)
(declare-fun x38 () Int)
(declare-fun x266 () x880)
(declare-fun x1538 () x880)
(declare-fun x1207 () Bool)
(declare-fun x1429 () Int)
(declare-fun x1136 () Bool)
(declare-fun x725 () Int)
(declare-fun x1491 (Int) Int)
(declare-fun x1052 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x1195 (x880) Int)
(declare-fun x1558 () Int)
(declare-fun x984 () Bool)
(declare-fun x463 () Int)
(declare-fun x461 () x880)
(declare-fun x160 () Int)
(declare-fun x396 () x880)
(declare-fun x885 () Int)
(declare-fun x1127 () x880)
(declare-fun x1576 () x880)
(declare-fun x990 () x880)
(declare-fun x1178 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x358 () Bool)
(declare-fun x963 () Int)
(declare-fun x290 () x880)
(declare-fun x861 () Int)
(declare-fun x575 () Int)
(declare-fun x431 () Int)
(declare-fun x239 () Bool)
(declare-fun x35 () Int)
(declare-fun x1141 () x880)
(declare-fun x1218 () Int)
(declare-fun x292 () Bool)
(declare-fun x318 () Bool)
(declare-fun x486 () x880)
(declare-fun x917 () Int)
(declare-fun x383 () Bool)
(declare-fun x1123 () Int)
(declare-fun x262 () Int)
(declare-fun x565 () Int)
(declare-fun x1337 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x1464 () Int)
(declare-fun x260 () Int)
(declare-fun x1031 () Bool)
(declare-fun x1156 (x880) Int)
(declare-fun x1371 () Bool)
(declare-fun x344 () Int)
(declare-fun x490 () Int)
(declare-fun x1122 () Int)
(declare-fun x935 () Int)
(declare-fun x165 () Int)
(declare-fun x342 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x1107 (x880) Int)
(declare-fun x742 () Int)
(declare-fun x301 () Int)
(declare-fun x1416 () x880)
(declare-fun x630 () x880)
(declare-fun x259 () Int)
(declare-fun x1101 () Bool)
(declare-fun x115 () Bool)
(declare-fun x353 () x880)
(declare-fun x1470 () Bool)
(declare-fun x1169 () Int)
(declare-fun x1299 () Bool)
(declare-fun x319 () x880)
(declare-fun x8 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x362 () Int)
(declare-fun x889 () Bool)
(declare-fun x479 () x880)
(declare-fun x918 () x880)
(declare-fun x435 () x880)
(declare-fun x1441 () Int)
(declare-fun x568 () Bool)
(declare-fun x1490 () Int)
(declare-fun x1272 () Int)
(declare-fun x1213 () Int)
(declare-fun x505 () Bool)
(declare-fun x1025 () x880)
(declare-fun x1509 () Bool)
(declare-fun x474 () Int)
(declare-fun x22 () Int)
(declare-fun x286 () Int)
(declare-fun x53 () Bool)
(declare-fun x844 () Int)
(declare-fun x503 () Bool)
(declare-fun x4 () x880)
(declare-fun x58 () Int)
(declare-fun x1173 () Int)
(declare-fun x1534 () Int)
(declare-fun x55 () Int)
(declare-fun x847 () Int)
(declare-fun x1125 () Int)
(declare-fun x1427 () x880)
(declare-fun x1230 () Bool)
(declare-fun x541 () Bool)
(declare-fun x164 () Int)
(declare-fun x1552 () x880)
(declare-fun x1277 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x1146 () Bool)
(declare-fun x487 (Int) Int)
(declare-fun x203 () x880)
(declare-fun x1084 () x880)
(declare-fun x193 () Int)
(declare-fun x1242 () Int)
(declare-fun x1248 () x880)
(declare-fun x532 () Bool)
(declare-fun x95 () Bool)
(declare-fun x249 () x880)
(declare-fun x755 () Int)
(declare-fun x393 () Bool)
(declare-fun x323 () Int)
(declare-fun x1537 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x896 () x880)
(declare-fun x1183 () Bool)
(declare-fun x792 () x880)
(declare-fun x780 () Bool)
(declare-fun x354 () Int)
(declare-fun x272 () Bool)
(declare-fun x599 () Int)
(declare-fun x850 () Int)
(declare-fun x341 () Int)
(declare-fun x172 () x880)
(declare-fun x235 () Int)
(declare-fun x721 () Int)
(declare-fun x825 () Int)
(declare-fun x620 () Bool)
(declare-fun x838 () Bool)
(declare-fun x112 () x880)
(declare-fun x878 () Int)
(declare-fun x991 () Bool)
(declare-fun x986 () Bool)
(declare-fun x848 () Bool)
(declare-fun x1222 () Int)
(declare-fun x41 () Bool)
(declare-fun x921 () x880)
(declare-fun x810 () Int)
(declare-fun x451 () x880)
(declare-fun x978 () Bool)
(declare-fun x1062 (x880) Int)
(declare-fun x118 () Int)
(declare-fun x1238 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x308 () Bool)
(declare-fun x871 () Int)
(declare-fun x540 () Bool)
(declare-fun x1264 () x880)
(declare-fun x608 () Bool)
(declare-fun x905 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x724 () Int)
(declare-fun x1354 () x880)
(declare-fun x701 () Bool)
(declare-fun x119 () Int)
(declare-fun x280 () Int)
(declare-fun x1501 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x470 () x880)
(declare-fun x530 () Int)
(declare-fun x2 () Int)
(declare-fun x1484 () Int)
(declare-fun x194 () Int)
(declare-fun x552 () Int)
(declare-fun x488 () Int)
(declare-fun x787 () Int)
(declare-fun x1273 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x182 () Bool)
(declare-fun x766 () x880)
(declare-fun x956 () Bool)
(declare-fun x891 () Int)
(declare-fun x1549 () Int)
(declare-fun x886 () Int)
(declare-fun x679 () Int)
(declare-fun x1575 () Bool)
(declare-fun x20 () Int)
(declare-fun x1325 () Int)
(declare-fun x1463 () Bool)
(declare-fun x1382 () Int)
(declare-fun x400 () Bool)
(declare-fun x261 () Int)
(declare-fun x1482 () Int)
(declare-fun x37 () Int)
(declare-fun x913 () Bool)
(declare-fun x996 () Int)
(declare-fun x1492 () x880)
(declare-fun x1353 () x880)
(declare-fun x116 () Int)
(declare-fun x457 () x880)
(declare-fun x421 () Bool)
(declare-fun x211 () Int)
(declare-fun x473 () Int)
(declare-fun x269 () Int)
(declare-fun x1517 () Bool)
(declare-fun x504 () Int)
(declare-fun x333 () Bool)
(declare-fun x509 () x880)
(declare-fun x1450 () Int)
(declare-fun x569 () Int)
(declare-fun x192 () x880)
(declare-fun x1035 (Int) Int)
(declare-fun x207 () Int)
(declare-fun x1388 () Int)
(declare-fun x1507 () Bool)
(declare-fun x437 () Int)
(declare-fun x638 (Int) Int)
(declare-fun x446 () Bool)
(declare-fun x1211 () Int)
(declare-fun x836 () x880)
(declare-fun x1553 () x880)
(declare-fun x1560 () Int)
(declare-fun x385 () Int)
(declare-fun x649 () Int)
(declare-fun x1307 () Int)
(declare-fun x117 () x880)
(declare-fun x537 () Bool)
(declare-fun x604 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x1129 () Int)
(declare-fun x458 () Int)
(declare-fun x513 () Bool)
(declare-fun x1336 () Int)
(declare-fun x1376 () Int)
(declare-fun x898 () Bool)
(declare-fun x720 () Bool)
(declare-fun x247 () Int)
(declare-fun x135 () Bool)
(declare-fun x1366 () Int)
(declare-fun x296 () Int)
(declare-fun x818 () Int)
(declare-fun x104 () Int)
(declare-fun x804 () Int)
(declare-fun x1550 () Bool)
(declare-fun x1286 () Int)
(declare-fun x1358 () Int)
(declare-fun x1138 () x880)
(declare-fun x597 () Int)
(declare-fun x284 () Bool)
(declare-fun x44 () Bool)
(declare-fun x567 () Int)
(declare-fun x1572 () x880)
(declare-fun x1029 () Bool)
(declare-fun x1404 () Int)
(declare-fun x687 () Int)
(declare-fun x92 () Bool)
(declare-fun x1476 () Int)
(declare-fun x45 (Int) Int)
(declare-fun x666 () Bool)
(declare-fun x1529 (Int) Int)
(declare-fun x557 () Int)
(declare-fun x1483 () Bool)
(declare-fun x862 () Int)
(declare-fun x57 () Bool)
(declare-fun x373 () Int)
(declare-fun x1368 () Int)
(declare-fun x169 () x880)
(declare-fun x1515 () Int)
(declare-fun x784 () Bool)
(declare-fun x181 () Bool)
(declare-fun x626 () Bool)
(declare-fun x1245 () x880)
(declare-fun x254 () Bool)
(declare-fun x1150 () Int)
(declare-fun x531 () x880)
(declare-fun x846 () Int)
(declare-fun x1102 () Bool)
(declare-fun x506 () x880)
(declare-fun x1265 () Bool)
(declare-fun x248 () Int)
(declare-fun x86 () Int)
(declare-fun x237 () Bool)
(declare-fun x975 () Int)
(declare-fun x1396 () Int)
(declare-fun x364 () Int)
(declare-fun x586 () Int)
(declare-fun x707 () x880)
(declare-fun x1008 () Bool)
(declare-fun x1314 () Int)
(declare-fun x636 () Bool)
(declare-fun x562 () Bool)
(declare-fun x1524 () Int)
(declare-fun x523 () x880)
(declare-fun x929 () Int)
(declare-fun x936 () Int)
(declare-fun x209 () Bool)
(declare-fun x489 () Int)
(declare-fun x1282 () Int)
(declare-fun x67 () Bool)
(declare-fun x648 () Int)
(declare-fun x1578 () Int)
(declare-fun x534 () Int)
(declare-fun x527 () Bool)
(declare-fun x325 () Int)
(declare-fun x392 () Int)
(declare-fun x1247 () Int)
(declare-fun x877 () Bool)
(declare-fun x764 () Bool)
(declare-fun x1369 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x1261 () Int)
(declare-fun x1473 () x880)
(declare-fun x277 () Bool)
(declare-fun x460 () x880)
(declare-fun x5 () Bool)
(declare-fun x816 () Bool)
(declare-fun x796 () Bool)
(declare-fun x253 () Bool)
(declare-fun x1177 () Int)
(declare-fun x625 () Int)
(declare-fun x130 () x880)
(declare-fun x1406 () x880)
(declare-fun x242 () Int)
(declare-fun x882 () Bool)
(declare-fun x732 () Bool)
(declare-fun x133 () Int)
(declare-fun x1045 () Bool)
(declare-fun x441 () Int)
(declare-fun x615 () Bool)
(declare-fun x1002 () Int)
(declare-fun x1253 () Bool)
(declare-fun x514 () x880)
(declare-fun x1398 () Int)
(declare-fun x1557 () Bool)
(declare-fun x493 () Bool)
(declare-fun x173 () Bool)
(declare-fun x582 () Int)
(declare-fun x125 () Int)
(declare-fun x747 () Int)
(declare-fun x171 () Bool)
(declare-fun x29 () Int)
(declare-fun x1236 () Bool)
(declare-fun x840 () Bool)
(declare-fun x204 () Int)
(declare-fun x1301 () Int)
(declare-fun x370 () x880)
(declare-fun x438 () Int)
(declare-fun x1226 () Int)
(declare-fun x410 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x491 () Bool)
(declare-fun x179 () Int)
(declare-fun x1019 () Bool)
(declare-fun x221 () Bool)
(declare-fun x61 () x880)
(declare-fun x1340 () Int)
(declare-fun x645 () x880)
(declare-fun x195 () Int)
(declare-fun x256 () Int)
(declare-fun x1109 () x880)
(declare-fun x1176 () Int)
(declare-fun x98 () Int)
(declare-fun x865 () Int)
(declare-fun x795 () Bool)
(declare-fun x6 () Bool)
(declare-fun x1018 () Int)
(declare-fun x1373 () Int)
(declare-fun x692 () Bool)
(declare-fun x813 () Bool)
(declare-fun x676 () Int)
(declare-fun x74 () Int)
(declare-fun x554 () x880)
(declare-fun x1145 () Int)
(declare-fun x904 (x880) Int)
(declare-fun x1435 () Bool)
(declare-fun x376 () Bool)
(declare-fun x708 () x880)
(declare-fun x1479 () Int)
(declare-fun x496 () Bool)
(declare-fun x199 () Int)
(declare-fun x302 () Int)
(declare-fun x129 () Int)
(declare-fun x1349 () Int)
(declare-fun x90 () Bool)
(declare-fun x902 (Int) Int)
(declare-fun x1316 () x880)
(declare-fun x270 () x880)
(declare-fun x605 () x880)
(declare-fun x1330 () Int)
(declare-fun x1437 (Int) Int)
(declare-fun x1295 () Bool)
(declare-fun x572 () Int)
(declare-fun x1393 () Bool)
(declare-fun x469 () x880)
(declare-fun x974 () x880)
(declare-fun x1098 () Int)
(declare-fun x294 () x880)
(declare-fun x944 () Int)
(declare-fun x89 () Bool)
(declare-fun x884 () Bool)
(declare-fun x452 () x880)
(declare-fun x124 () Int)
(declare-fun x1091 () Int)
(declare-fun x726 () Bool)
(declare-fun x570 () x880)
(declare-fun x739 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x1100 () x880)
(declare-fun x671 () Bool)
(declare-fun x1158 () Int)
(declare-fun x1296 () Int)
(declare-fun x1468 () Bool)
(declare-fun x1488 () Int)
(declare-fun x1556 () x880)
(declare-fun x32 () x880)
(declare-fun x1410 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x965 () Bool)
(declare-fun x1104 () Int)
(declare-fun x743 () Int)
(declare-fun x1357 () Int)
(declare-fun x212 () Int)
(declare-fun x529 () Bool)
(declare-fun x228 () x880)
(declare-fun x1395 () x880)
(declare-fun x1115 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1121 () Bool)
(declare-fun x834 () Bool)
(declare-fun x1302 () Int)
(declare-fun x226 () Int)
(declare-fun x391 (x880) Int)
(declare-fun x762 () Int)
(declare-fun x644 () Int)
(declare-fun x1283 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x1023 (x880) Int)
(declare-fun x109 () Bool)
(declare-fun x731 () Bool)
(declare-fun x426 () x880)
(declare-fun x738 () Int)
(declare-fun x1229 () Bool)
(declare-fun x981 () Int)
(declare-fun x1287 () Int)
(declare-fun x684 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x1099 () Int)
(declare-fun x177 () Int)
(declare-fun x27 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x1290 () Int)
(declare-fun x979 () Int)
(declare-fun x937 () Int)
(declare-fun x594 () Int)
(declare-fun x482 () Bool)
(declare-fun x870 () Int)
(declare-fun x1285 () Int)
(declare-fun x1318 () x880)
(declare-fun x1036 () x880)
(declare-fun x97 () Int)
(declare-fun x1170 () x880)
(declare-fun x613 () Bool)
(declare-fun x1453 () Int)
(declare-fun x1090 () Bool)
(declare-fun x397 () Int)
(declare-fun x954 () Int)
(declare-fun x1224 () Int)
(declare-fun x909 () Bool)
(declare-fun x1038 () Int)
(declare-fun x1433 () Int)
(declare-fun x356 () Bool)
(declare-fun x339 () Int)
(declare-fun x859 () Int)
(declare-fun x48 () Int)
(declare-fun x672 () Bool)
(declare-fun x1162 () Int)
(declare-fun x257 () Bool)
(declare-fun x377 () x880)
(declare-fun x841 (Int) Int)
(declare-fun x1214 () Bool)
(declare-fun x288 () Bool)
(declare-fun x746 () Int)
(declare-fun x453 () Bool)
(declare-fun x814 () Bool)
(declare-fun x114 () Int)
(declare-fun x734 () x880)
(declare-fun x1530 () Bool)
(declare-fun x329 () Int)
(declare-fun x1188 () Int)
(declare-fun x427 () x880)
(declare-fun x675 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x252 () Bool)
(declare-fun x1068 () Int)
(declare-fun x769 () Bool)
(declare-fun x279 () x880)
(declare-fun x126 () Int)
(declare-fun x1462 () x880)
(declare-fun x359 () Int)
(declare-fun x1175 () Int)
(declare-fun x1105 () Int)
(declare-fun x657 () Int)
(declare-fun x1499 () Int)
(declare-fun x1332 () Int)
(declare-fun x1250 () x880)
(declare-fun x244 () Int)
(declare-fun x361 (x880) Int)
(declare-fun x555 () Bool)
(declare-fun x1028 () Int)
(declare-fun x208 () x880)
(declare-fun x190 () x880)
(declare-fun x1181 () Bool)
(declare-fun x1126 () Int)
(declare-fun x1130 () Int)
(declare-fun x1377 () Int)
(declare-fun x402 () Int)
(declare-fun x1472 () x880)
(declare-fun x968 () x880)
(declare-fun x538 () Bool)
(declare-fun x282 () x880)
(declare-fun x703 () x880)
(declare-fun x1103 () Int)
(declare-fun x1166 () Int)
(declare-fun x1386 () Int)
(declare-fun x327 () Int)
(declare-fun x587 () Int)
(declare-fun x21 () Bool)
(declare-fun x64 () Int)
(declare-fun x175 () Int)
(declare-fun x148 () Int)
(declare-fun x220 () Int)
(declare-fun x1544 () Bool)
(declare-fun x757 () Int)
(declare-fun x788 () Int)
(declare-fun x1365 () Int)
(declare-fun x895 () Bool)
(declare-fun x655 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x799 () x880)
(declare-fun x366 () x880)
(declare-fun x652 () Bool)
(declare-fun x99 () Bool)
(declare-fun x1387 () Int)
(declare-fun x843 () Bool)
(declare-fun x1455 () Int)
(declare-fun x949 () Int)
(declare-fun x1009 () Bool)
(declare-fun x105 () Bool)
(declare-fun x849 () Bool)
(declare-fun x510 () Bool)
(declare-fun x251 () Int)
(declare-fun x243 () Int)
(declare-fun x716 () x880)
(declare-fun x633 () Bool)
(declare-fun x545 () Int)
(declare-fun x677 () Int)
(declare-fun x1323 () Bool)
(declare-fun x1392 () x880)
(declare-fun x1075 () x880)
(declare-fun x113 () Bool)
(declare-fun x588 () x880)
(declare-fun x484 () Bool)
(declare-fun x246 () Int)
(declare-fun x134 () Bool)
(declare-fun x384 () Bool)
(declare-fun x1555 () x880)
(declare-fun x394 () Bool)
(declare-fun x900 () x880)
(declare-fun x170 () x880)
(declare-fun x368 () Int)
(declare-fun x1400 () Bool)
(declare-fun x719 () Int)
(declare-fun x1039 () Bool)
(declare-fun x699 () Int)
(declare-fun x1346 () Int)
(declare-fun x149 () Int)
(declare-fun x1532 () Int)
(declare-fun x1574 () x880)
(declare-fun x1233 () Bool)
(declare-fun x1159 () Int)
(declare-fun x600 () Bool)
(declare-fun x751 () Bool)
(declare-fun x993 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x1081 () Int)
(declare-fun x561 () x880)
(declare-fun x379 () Int)
(declare-fun x442 () Int)
(declare-fun x985 () Int)
(declare-fun x360 () Bool)
(declare-fun x1343 () x880)
(declare-fun x623 () Bool)
(declare-fun x1087 () x880)
(declare-fun x31 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x1017 () Int)
(declare-fun x1440 () Int)
(declare-fun x664 () Int)
(declare-fun x315 () Int)
(declare-fun x868 () Int)
(declare-fun x593 () Int)
(declare-fun x264 () Bool)
(declare-fun x700 (x880) Int)
(declare-fun x1356 () Bool)
(declare-fun x143 () Int)
(declare-fun x424 () Bool)
(declare-fun x103 () Int)
(declare-fun x1525 () Int)
(declare-fun x691 () Int)
(declare-fun x1401 () Int)
(declare-fun x1320 () Bool)
(declare-fun x1249 () x880)
(declare-fun x581 () Bool)
(declare-fun x741 () Int)
(declare-fun x1511 () Int)
(declare-fun x196 () Int)
(declare-fun x401 () Bool)
(declare-fun x415 () Int)
(declare-fun x1409 () x880)
(declare-fun x614 () Int)
(declare-fun x163 () Int)
(declare-fun x1446 () Int)
(declare-fun x1528 () Int)
(declare-fun x367 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x559 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x790 (Int) Int)
(declare-fun x717 () Int)
(declare-fun x875 () Bool)
(declare-fun x583 () Bool)
(declare-fun x408 () Bool)
(declare-fun x553 () x880)
(declare-fun x1257 () Bool)
(declare-fun x309 () Int)
(declare-fun x483 () Bool)
(declare-fun x1262 () Int)
(declare-fun x436 () Int)
(declare-fun x349 () Bool)
(declare-fun x365 () Int)
(declare-fun x1201 () x880)
(declare-fun x82 () Bool)
(declare-fun x1333 () Int)
(declare-fun x616 () x880)
(declare-fun x1431 () Bool)
(declare-fun x1581 () Int)
(declare-fun x475 () Int)
(declare-fun x1267 () Bool)
(declare-fun x223 (x880) Int)
(declare-fun x639 () x880)
(declare-fun x1309 () Bool)
(declare-fun x420 () Bool)
(declare-fun x1516 () Int)
(declare-fun x941 () Int)
(declare-fun x603 () Int)
(declare-fun x773 () Int)
(declare-fun x1312 () x880)
(declare-fun x959 () Bool)
(declare-fun x47 () x880)
(declare-fun x132 (x880) Int)
(declare-fun x499 () Int)
(declare-fun x141 () Bool)
(declare-fun x1255 () Int)
(declare-fun x316 () Int)
(declare-fun x275 () Int)
(declare-fun x1026 () Int)
(declare-fun x893 () Int)
(declare-fun x351 () Int)
(declare-fun x1304 () x880)
(declare-fun x231 (x880) Int)
(declare-fun x1270 () Int)
(declare-fun x495 () Int)
(declare-fun x890 () Bool)
(declare-fun x448 () Int)
(declare-fun x761 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x831 (x880) Int)
(declare-fun x693 () Bool)
(declare-fun x958 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x800 () Int)
(declare-fun x894 () x880)
(declare-fun x775 () Int)
(declare-fun x1086 () x880)
(declare-fun x659 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x619 () Int)
(declare-fun x1110 () Bool)
(declare-fun x386 () Bool)
(declare-fun x191 () Int)
(declare-fun x1447 () Int)
(declare-fun x1570 () Bool)
(declare-fun x806 () x880)
(declare-fun x1196 () x880)
(declare-fun x78 () Int)
(declare-fun x1237 () Bool)
(declare-fun x1197 () Int)
(declare-fun x123 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x1148 () x880)
(declare-fun x15 () Int)
(declare-fun x995 () Int)
(declare-fun x802 () x880)
(declare-fun x324 () Bool)
(declare-fun x1186 () Int)
(declare-fun x26 () Bool)
(declare-fun x837 () Int)
(declare-fun x1149 () Int)
(declare-fun x781 () Int)
(declare-fun x127 () Bool)
(declare-fun x681 () Int)
(declare-fun x445 () Int)
(declare-fun x1 () Int)
(declare-fun x83 () Int)
(declare-fun x1378 () Bool)
(declare-fun x771 () Bool)
(declare-fun x390 () Int)
(declare-fun x1571 () Int)
(declare-fun x822 () Int)
(declare-fun x702 () x880)
(declare-fun x1050 () Bool)
(declare-fun x1163 () Int)
(declare-fun x79 () x880)
(declare-fun x715 () Int)
(declare-fun x1192 () Int)
(declare-fun x727 () Int)
(declare-fun x1221 () Int)
(declare-fun x444 () Int)
(declare-fun x1271 () Int)
(declare-fun x34 () Int)
(declare-fun x1414 (Int) Int)
(declare-fun x1140 (x880) Int)
(declare-fun x1095 () Bool)
(declare-fun x663 () Int)
(declare-fun x147 () Bool)
(declare-fun x1466 () Int)
(declare-fun x774 () Int)
(declare-fun x1408 () Int)
(declare-fun x411 () x880)
(declare-fun x347 () x880)
(declare-fun x13 () Int)
(declare-fun x516 () x880)
(declare-fun x76 () Bool)
(declare-fun x617 () Int)
(declare-fun x1444 () x880)
(declare-fun x1485 () x880)
(declare-fun x71 () Int)
(declare-fun x931 () Int)
(declare-fun x611 () Int)
(declare-fun x688 () x880)
(declare-fun x399 () Int)
(declare-fun x477 (x880) Int)
(declare-fun x1269 () Int)
(declare-fun x1139 () x880)
(declare-fun x1518 () Int)
(declare-fun x1106 () Int)
(declare-fun x465 () Bool)
(declare-fun x854 () Bool)
(declare-fun x785 (Int Int) Int)
(declare-fun x546 (x880) Int)
(declare-fun x705 () Int)
(declare-fun x240 () Int)
(declare-fun x622 () Int)
(declare-fun x1112 () Bool)
(declare-fun x414 () Bool)
(declare-fun x911 () x880)
(declare-fun x1172 (Int) Int)
(declare-fun x560 () Int)
(declare-fun x845 () Int)
(declare-fun x1066 () Bool)
(declare-fun x952 () Int)
(declare-fun x853 () Int)
(declare-fun x820 (Int) Int)
(declare-fun x331 () Int)
(declare-fun x1032 () Int)
(declare-fun x946 (Int) Int)
(declare-fun x1384 (x880) Int)
(declare-fun x1486 () Bool)
(declare-fun x1526 () Int)
(declare-fun x1274 () Int)
(declare-fun x447 () Int)
(declare-fun x1072 () Bool)
(declare-fun x735 () Bool)
(declare-fun x1480 () Int)
(declare-fun x674 () x880)
(declare-fun x380 () Bool)
(declare-fun x973 () Int)
(declare-fun x407 () Int)
(declare-fun x1475 () Int)
(declare-fun x1164 () Int)
(declare-fun x454 () Int)
(declare-fun x779 () Int)
(declare-fun x1361 () x880)
(declare-fun x1417 () Int)
(declare-fun x1539 () Int)
(declare-fun x982 () x880)
(declare-fun x1012 () Int)
(declare-fun x1339 () Bool)
(declare-fun x1461 () Int)
(declare-fun x980 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x146 () x880)
(declare-fun x1390 () x880)
(declare-fun x595 () Int)
(declare-fun x1000 () Int)
(declare-fun x1565 () Bool)
(declare-fun x647 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x106 () Int)
(declare-fun x618 () Int)
(declare-fun x198 () Bool)
(declare-fun x472 () Bool)
(declare-fun x863 () Int)
(declare-fun x782 () Int)
(declare-fun x9 () Bool)
(declare-fun x1044 () Int)
(declare-fun x803 () Int)
(declare-fun x1428 () Int)
(declare-fun x812 () Int)
(declare-fun x1456 () Int)
(declare-fun x1108 () Int)
(declare-fun x867 () Bool)
(declare-fun x881 () Int)
(declare-fun x760 () Bool)
(declare-fun x369 () Int)
(declare-fun x1083 () x880)
(declare-fun x610 () x880)
(declare-fun x413 () Bool)
(declare-fun x1510 () Int)
(declare-fun x1432 () Bool)
(declare-fun x1280 () Int)
(declare-fun x389 () Int)
(declare-fun x860 () Int)
(declare-fun x955 () Int)
(declare-fun x710 () x880)
(declare-fun x1512 () Bool)
(declare-fun x1425 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x635 () Bool)
(declare-fun x1471 () Int)
(declare-fun x430 () Int)
(declare-fun x998 () Int)
(declare-fun x433 () Bool)
(declare-fun x669 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x250 () Int)
(declare-fun x1407 () x880)
(declare-fun x40 () Int)
(declare-fun x656 () Int)
(declare-fun x662 () Int)
(declare-fun x1436 () Int)
(declare-fun x808 () Bool)
(declare-fun x1360 () Int)
(declare-fun x1041 () x880)
(declare-fun x519 () x880)
(declare-fun x1013 () Bool)
(declare-fun x824 () x880)
(declare-fun x807 () Int)
(declare-fun x166 () x880)
(declare-fun x580 () Bool)
(declare-fun x7 () Int)
(declare-fun x128 () Int)
(declare-fun x36 () Bool)
(declare-fun x375 () Bool)
(declare-fun x758 () Int)
(declare-fun x291 () Bool)
(declare-fun x1519 () Int)
(declare-fun x265 () Int)
(declare-fun x232 () Int)
(declare-fun x1367 () Int)
(declare-fun x485 () Bool)
(declare-fun x1508 () x880)
(declare-fun x924 () Int)
(declare-fun x768 () x880)
(declare-fun x229 () Int)
(declare-fun x730 () Int)
(declare-fun x1419 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x1465 () Int)
(declare-fun x311 () Bool)
(declare-fun x1114 () Int)
(declare-fun x205 () x880)
(declare-fun x236 () Int)
(declare-fun x1219 () Bool)
(declare-fun x1184 () Int)
(declare-fun x682 () Int)
(declare-fun x326 () Int)
(declare-fun x940 (Int Int) Int)
(declare-fun x1147 () Int)
(declare-fun x1011 () Bool)
(declare-fun x922 () Bool)
(declare-fun x268 () Int)
(declare-fun x180 () Bool)
(declare-fun x258 () Int)
(declare-fun x224 () Int)
(declare-fun x823 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x1350 () Int)
(declare-fun x1370 () x880)
(declare-fun x551 () x880)
(declare-fun x267 () x880)
(declare-fun x406 () Bool)
(declare-fun x596 () Int)
(declare-fun x154 (Int) Int)
(declare-fun x278 () x880)
(declare-fun x371 () Int)
(declare-fun x977 () x880)
(declare-fun x729 (Int) Int)
(declare-fun x1305 () Int)
(declare-fun x285 () x880)
(declare-fun x33 () Int)
(declare-fun x1451 () Bool)
(declare-fun x91 () Bool)
(declare-fun x1322 () Int)
(declare-fun x107 () Int)
(declare-fun x363 () x880)
(declare-fun x777 () Int)
(declare-fun x947 () Int)
(declare-fun x770 () Int)
(declare-fun x1171 () Bool)
(declare-fun x629 (Int) x880)
(declare-fun x526 () Int)
(declare-fun x997 () Int)
(declare-fun x556 () Int)
(declare-fun x1165 () Int)
(declare-fun x276 () Int)
(declare-fun x1143 () Int)
(declare-fun x336 () Int)
(declare-fun x1481 () x880)
(declare-fun x829 (x880) Int)
(declare-fun x670 () Bool)
(declare-fun x1311 () Int)
(declare-fun x297 () x880)
(declare-fun x598 () Bool)
(declare-fun x500 () Int)
(declare-fun x300 () Bool)
(declare-fun x1495 () Int)
(declare-fun x964 () Int)
(declare-fun x709 () x880)
(declare-fun x1209 () Int)
(declare-fun x1010 () Int)
(declare-fun x602 () Int)
(declare-fun x930 () Bool)
(declare-fun x753 () Int)
(declare-fun x350 () Int)
(declare-fun x989 () Int)
(declare-fun x1494 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x456 () Int)
(declare-fun x916 () Int)
(declare-fun x159 () Bool)
(declare-fun x93 () Int)
(declare-fun x1259 () Int)
(declare-fun x632 () Int)
(declare-fun x174 () Int)
(declare-fun x1128 () x880)
(declare-fun x271 () Bool)
(declare-fun x403 () Int)
(declare-fun x1182 () x880)
(declare-fun x577 () Int)
(declare-fun x1418 () Int)
(declare-fun x1458 () Int)
(declare-fun x152 () Bool)
(declare-fun x338 () Int)
(declare-fun x1364 () Bool)
(declare-fun x144 () Int)
(declare-fun x1007 () x880)
(declare-fun x548 () Int)
(declare-fun x750 () Int)
(declare-fun x1251 () Int)
(declare-fun x1048 () x880)
(declare-fun x511 () Int)
(declare-fun x962 () Int)
(declare-fun x521 () x880)
(declare-fun x1362 () x880)
(declare-fun x1074 () Int)
(declare-fun x1208 () Bool)
(declare-fun x628 () Bool)
(declare-fun x642 (x880) Int)
(declare-fun x219 () Bool)
(declare-fun x255 () x880)
(declare-fun x450 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x1300 () x880)
(declare-fun x70 () Int)
(declare-fun x879 () x880)
(declare-fun x1111 () Int)
(declare-fun x1001 () Bool)
(declare-fun x535 () Int)
(declare-fun x1021 () Int)
(declare-fun x1289 () Bool)
(declare-fun x772 () Bool)
(declare-fun x16 () Int)
(declare-fun x423 () Int)
(declare-fun x233 () Int)
(declare-fun x42 () Bool)
(declare-fun x111 () Bool)
(declare-fun x651 () Int)
(declare-fun x425 () Bool)
(declare-fun x225 () Int)
(declare-fun x1161 () Int)
(declare-fun x140 () Int)
(declare-fun x1080 () Bool)
(declare-fun x579 () Int)
(declare-fun x714 () x880)
(declare-fun x1004 () Bool)
(declare-fun x1413 () Int)
(declare-fun x953 () Bool)
(declare-fun x69 () Int)
(declare-fun x967 () Int)
(declare-fun x1118 () Int)
(declare-fun x1319 () Int)
(declare-fun x1217 () Bool)
(declare-fun x533 () x880)
(declare-fun x864 () Bool)
(declare-fun x945 () Int)
(declare-fun x439 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x960 () Int)
(declare-fun x1073 () Bool)
(declare-fun x428 () x880)
(declare-fun x1420 () Int)
(declare-fun x549 () Int)
(declare-fun x1093 () Int)
(declare-fun x1372 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x188 () Int)
(declare-fun x1391 () Int)
(declare-fun x706 () Bool)
(declare-fun x874 () Int)
(declare-fun x791 () x880)
(declare-fun x695 () Int)
(declare-fun x161 () Bool)
(declare-fun x1306 () Int)
(declare-fun x298 () x880)
(declare-fun x51 (x880) Int)
(declare-fun x1070 () x880)
(declare-fun x1317 (Int) Int)
(declare-fun x418 () Int)
(declare-fun x320 () Int)
(declare-fun x919 () Int)
(declare-fun x167 () Int)
(declare-fun x590 () Int)
(declare-fun x65 () x880)
(declare-fun x857 (Int) Int)
(declare-fun x1258 () Int)
(declare-fun x1426 () Int)
(declare-fun x1194 () Int)
(declare-fun x934 () Int)
(declare-fun x653 () Int)
(declare-fun x312 () Int)
(declare-fun x704 () Int)
(declare-fun x736 () x880)
(declare-fun x1308 () Bool)
(declare-fun x378 () x880)
(declare-fun x1049 () Int)
(declare-fun x1092 () x880)
(declare-fun x24 () Bool)
(declare-fun x821 () Bool)
(declare-fun x214 () Int)
(declare-fun x1097 () Int)
(declare-fun x938 () Int)
(declare-fun x158 () Int)
(declare-fun x1061 () Bool)
(declare-fun x1551 () Int)
(declare-fun x1124 () Int)
(declare-fun x969 () Int)
(declare-fun x434 () Int)
(declare-fun x765 () Int)
(declare-fun x563 () Bool)
(declare-fun x793 () x880)
(declare-fun x216 () Int)
(declare-fun x287 () Int)
(declare-fun x28 () x880)
(declare-fun x805 () Int)
(declare-fun x951 () x880)
(declare-fun x971 () x880)
(declare-fun x131 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x293 () x880)
(declare-fun x334 () Bool)
(declare-fun x694 () Int)
(declare-fun x697 () x880)
(declare-fun x50 () x880)
(declare-fun x305 () Int)
(declare-fun x1260 () Int)
(declare-fun x1193 () Int)
(declare-fun x88 () Int)
(declare-fun x1347 () Bool)
(declare-fun x728 () Bool)
(declare-fun x752 () Int)
(declare-fun x1547 () Bool)
(declare-fun x303 (Int) Int)
(declare-fun x1079 () Bool)
(declare-fun x1383 () Int)
(declare-fun x419 () Int)
(declare-fun x833 () Int)
(declare-fun x1459 () Int)
(declare-fun x1563 () Bool)
(declare-fun x646 () x880)
(declare-fun x1522 () Int)
(declare-fun x1256 () Int)
(declare-fun x667 () Bool)
(declare-fun x892 () Int)
(declare-fun x942 () Int)
(declare-fun x815 () Int)
(declare-fun x14 () Bool)
(declare-fun x1338 () x880)
(declare-fun x1241 () Int)
(declare-fun x842 () Bool)
(declare-fun x422 () Int)
(declare-fun x440 () x880)
(declare-fun x382 () x880)
(declare-fun x809 () Int)
(declare-fun x289 () Int)
(declare-fun x1559 () Int)
(declare-fun x1523 () Int)
(declare-fun x1199 () Bool)
(declare-fun x518 () Int)
(declare-fun x1275 () Int)
(declare-fun x1502 () Bool)
(declare-fun x1151 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x901 () Int)
(declare-fun x525 () Int)
(declare-fun x512 () Int)
(declare-fun x1078 () x880)
(declare-fun x153 () Int)
(declare-fun x1231 () Int)
(declare-fun x1487 (Int) Int)
(declare-fun x1493 () Int)
(declare-fun x234 () Int)
(declare-fun x46 () x880)
(declare-fun x108 () Bool)
(declare-fun x306 () x880)
(declare-fun x241 () Int)
(declare-fun x571 () x880)
(declare-fun x1133 () Bool)
(declare-fun x398 () x880)
(declare-fun x1135 () Bool)
(declare-fun x100 () Int)
(declare-fun x1266 () Int)
(declare-fun x56 () Int)
(declare-fun x343 () Int)
(declare-fun x157 () Bool)
(declare-fun x197 () Bool)
(declare-fun x578 () Int)
(declare-fun x621 () Int)
(declare-fun x748 () x880)
(declare-fun x321 () Int)
(declare-fun x1342 () Bool)
(declare-fun x643 () Bool)
(declare-fun x1328 () Int)
(declare-fun x12 () Int)
(declare-fun x601 () Bool)
(declare-fun x1225 () Int)
(declare-fun x524 () Int)
(declare-fun x1412 () Bool)
(declare-fun x3 () Int)
(declare-fun x1315 (Int) Int)
(declare-fun x151 () Bool)
(declare-fun x168 () Int)
(declare-fun x10 () Int)
(declare-fun x213 () Int)
(declare-fun x1294 () Int)
(declare-fun x1057 () Int)
(declare-fun x1422 () Int)
(declare-fun x60 () Bool)
(declare-fun x462 () Bool)
(declare-fun x1497 (Int) Int)
(declare-fun x1394 () Int)
(declare-fun x263 () Bool)
(declare-fun x507 () Int)
(declare-fun x176 () Int)
(declare-fun x740 () Int)
(declare-fun x665 () x880)
(declare-fun x307 () Int)
(declare-fun x1520 () Int)
(declare-fun x283 () Bool)
(declare-fun x201 () Bool)
(declare-fun x238 () Int)
(declare-fun x925 () x880)
(declare-fun x62 () Int)
(declare-fun x412 () Int)
(declare-fun x1022 () Int)
(declare-fun x1564 () Bool)
(declare-fun x1321 () Int)
(declare-fun x786 () x880)
(declare-fun x543 () Int)
(declare-fun x839 () Bool)
(declare-fun x230 () Bool)
(declare-fun x274 (x880) Int)
(declare-fun x1027 () Int)
(declare-fun x749 () Bool)
(declare-fun x142 () Int)
(declare-fun x1160 () x880)
(declare-fun x1154 () Int)
(declare-fun x1567 () Int)
(declare-fun x948 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x222 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x417 () Int)
(declare-fun x1088 () Int)
(declare-fun x584 () x880)
(declare-fun x542 () Int)
(declare-fun x637 () Bool)
(declare-fun x733 () Int)
(declare-fun x564 () Int)
(declare-fun x1043 () Bool)
(declare-fun x138 () Int)
(declare-fun x43 () Int)
(declare-fun x961 () x880)
(declare-fun x1452 () Int)
(declare-fun x591 () Bool)
(declare-fun x1174 () Int)
(declare-fun x767 () Int)
(declare-fun x1206 () Int)
(declare-fun x25 () Int)
(declare-fun x654 () Int)
(declare-fun x1415 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x1536 () Int)
(declare-fun x1569 () Int)
(declare-fun x30 () x880)
(declare-fun x1227 () Int)
(declare-fun x1297 () Bool)
(declare-fun x155 () Bool)
(declare-fun x18 () Int)
(declare-fun x903 () Int)
(declare-fun x817 () Int)
(declare-fun x1405 () Int)
(declare-fun x869 () Int)
(declare-fun x468 () Int)
(declare-fun x1179 () Int)
(declare-fun x328 () Int)
(declare-fun x1352 () Bool)
(declare-fun x387 () Bool)
(declare-fun x11 () x880)
(declare-fun x592 () Bool)
(declare-fun x1460 () Int)
(declare-fun x883 () Bool)
(declare-fun x966 () Int)
(declare-fun x1189 () x880)
(declare-fun x897 () x880)
(declare-fun x1276 () Int)
(declare-fun x745 () Bool)
(declare-fun x227 () Int)
(declare-fun x1341 () x880)
(declare-fun x908 () Bool)
(declare-fun x1047 () Int)
(declare-fun x1443 () Int)
(declare-fun x778 () Bool)
(declare-fun x1375 () Int)
(declare-fun x23 () Int)
(declare-fun x852 () Bool)
(declare-fun x1191 () Int)
(declare-fun x1254 () Int)
(declare-fun x39 () x880)
(declare-fun x866 () x880)
(declare-fun x536 () Int)
(declare-fun x722 () Bool)
(declare-fun x80 () Int)
(declare-fun x1239 () Int)
(declare-fun x910 () x880)
(declare-fun x281 () Bool)
(declare-fun x994 () Int)
(declare-fun x759 () Bool)
(declare-fun x723 () Int)
(declare-fun x1131 () Bool)
(declare-fun x455 () Int)
(declare-fun x1168 () Bool)
(declare-fun x873 () Int)
(declare-fun x1399 () Bool)
(declare-fun x612 () Bool)
(declare-fun x932 () Int)
(declare-fun x502 () Bool)
(declare-fun x1067 () x880)
(declare-fun x395 () Int)
(declare-fun x686 () Int)
(declare-fun x1046 () Bool)
(declare-fun x471 () Int)
(declare-fun x634 () Bool)
(declare-fun x631 () Int)
(declare-fun x310 () Int)
(declare-fun x137 () Bool)
(declare-fun x830 () Int)
(declare-fun x1445 () Int)
(declare-fun x1334 () Int)
(declare-fun x1024 () Bool)
(declare-fun x1119 () Int)
(declare-fun x1288 () Int)
(declare-fun x110 () Bool)
(declare-fun x797 () Int)
(declare-fun x1015 () Int)
(declare-fun x139 () Int)
(declare-fun x72 () Int)
(declare-fun x689 () Int)
(declare-fun x1190 () Int)
(declare-fun x690 () x880)
(declare-fun x1051 () Int)
(declare-fun x718 () Bool)
(declare-fun x466 () Int)
(declare-fun x950 () Bool)
(declare-fun x915 () Bool)
(declare-fun x641 () Bool)
(declare-fun x245 () Bool)
(declare-fun x348 () Int)
(declare-fun x1185 () Int)
(declare-fun x856 () Int)
(declare-fun x75 () x880)
(declare-fun x317 () Int)
(declare-fun x337 () x880)
(declare-fun x1344 () Bool)
(declare-fun x933 () Int)
(declare-fun x273 () Int)
(declare-fun x1204 () Bool)
(declare-fun x683 () Int)
(declare-fun x162 () Bool)
(declare-fun x85 () Int)
(declare-fun x96 () Int)
(declare-fun x1089 () Bool)
(declare-fun x54 () Int)
(declare-fun x712 () x880)
(declare-fun x658 () Bool)
(declare-fun x607 () Bool)
(declare-fun x713 () Bool)
(declare-fun x1514 () Int)
(declare-fun x150 () Int)
(declare-fun x876 () x880)
(declare-fun x156 () Bool)
(declare-fun x49 () Int)
(declare-fun x650 () Int)
(declare-fun x585 () Bool)
(declare-fun x566 () Int)
(declare-fun x1094 () Bool)
(declare-fun x432 () Int)
(declare-fun x346 () Int)
(declare-fun x19 () x880)
(declare-fun x1535 () x880)
(declare-fun x1040 () x880)
(declare-fun x121 () Int)
(declare-fun x1454 () Int)
(declare-fun x711 () Int)
(declare-fun x1359 () Int)
(declare-fun x1505 () Int)
(declare-fun x1540 () x880)
(declare-fun x1542 () Bool)
(declare-fun x217 () x880)
(declare-fun x1085 () Int)
(define-fun x1477 ((x880 x880) (x1155 Int)) x880 (ite ((_ is x1577) x880) (x1577 (x183 x880) (+ x1155 (x801 x880))) (ite ((_ is x1474) x880) (x1474 (x476 x880) (x522 x880) (+ x1155 (x1351 x880))) (x661 (+ (x304 x880) x1155)))))
(define-fun x927 ((x409 Int)) Int (ite (and (>= x409 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409)) x409 (- x409 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x322 ((x409 Int)) Int (ite (and (< x409 0) (>= x409 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x409 115792089237316195423570985008687907853269984665640564039457584007913129639936) x409))
(define-fun x1153 ((x335 Int)) Bool (and (<= 0 x335) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x335)))
(define-fun x355 ((x335 Int)) Bool (and (= (x785 x335 115792089237316195423570985008687907853269984665640564039457584007913129639935) x335) (= (x785 115792089237316195423570985008687907853269984665640564039457584007913129639935 x335) x335)))
(define-fun x907 ((x335 Int)) Bool (and (= 0 (x785 0 x335)) (= (x785 x335 0) 0)))
(define-fun x372 ((x335 Int)) Bool (= x335 (x785 x335 x335)))
(define-fun x678 ((x335 Int)) Bool (and (x372 x335) (x355 x335) (x907 x335)))
(define-fun x1293 ((x335 Int)) Bool (= (x785 1461501637330902918203684832716283019655932542975 x335) (x785 1461501637330902918203684832716283019655932542975 (x785 1461501637330902918203684832716283019655932542975 x335))))
(define-fun x1056 ((x335 Int)) Bool (=> (and (< x335 1461501637330902918203684832716283019655932542976) (<= 0 x335)) (= (x785 1461501637330902918203684832716283019655932542975 x335) x335)))
(define-fun x443 ((x335 Int)) Bool (=> (= x335 (x785 1461501637330902918203684832716283019655932542975 x335)) (and (< x335 1461501637330902918203684832716283019655932542976) (<= 0 x335))))
(define-fun x1348 ((x335 Int)) Bool (=> (and (< x335 2923003274661805836407369665432566039311865085952) (<= 1461501637330902918203684832716283019655932542976 x335)) (= (x785 1461501637330902918203684832716283019655932542975 x335) (- x335 1461501637330902918203684832716283019655932542976))))
(define-fun x1065 ((x335 Int) (x558 Int)) Bool (and (= x335 (+ (x785 1461501637330902918203684832716283019655932542975 x335) (* 1461501637330902918203684832716283019655932542976 x558))) (>= x558 0)))
(define-fun x1005 ((x335 Int) (x696 Int)) Bool (and (x1056 x335) (x1348 x335) (x1293 x335) (x1065 x335 x696) (x443 x335)))
(define-fun x357 ((x335 Int) (x558 Int)) Bool (= (x785 x558 x335) (x785 x335 x558)))
(define-fun x73 ((x335 Int) (x558 Int)) Bool (and (=> (>= x558 0) (<= (x785 x335 x558) x558)) (<= 0 (x785 x335 x558)) (=> (<= 0 x335) (>= x335 (x785 x335 x558)))))
(define-fun x340 ((x335 Int) (x558 Int)) Bool (and (x357 x335 x558) (x73 x335 x558)))
(define-fun x888 ((x335 Int) (x696 Int)) Bool (and (x340 x335 1461501637330902918203684832716283019655932542975) (x1005 x335 x696)))
(define-fun x832 ((x335 Int)) Bool (= (x785 26959946667150639794667015087019630673637144422540572481103610249215 (x785 26959946667150639794667015087019630673637144422540572481103610249215 x335)) (x785 26959946667150639794667015087019630673637144422540572481103610249215 x335)))
(define-fun x926 ((x335 Int)) Bool (=> (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x335) (<= 0 x335)) (= x335 (x785 26959946667150639794667015087019630673637144422540572481103610249215 x335))))
(define-fun x550 ((x335 Int)) Bool (=> (= x335 (x785 26959946667150639794667015087019630673637144422540572481103610249215 x335)) (and (< x335 26959946667150639794667015087019630673637144422540572481103610249216) (>= x335 0))))
(define-fun x640 ((x335 Int)) Bool (=> (and (< x335 53919893334301279589334030174039261347274288845081144962207220498432) (>= x335 26959946667150639794667015087019630673637144422540572481103610249216)) (= (- x335 26959946667150639794667015087019630673637144422540572481103610249216) (x785 26959946667150639794667015087019630673637144422540572481103610249215 x335))))
(define-fun x1467 ((x335 Int) (x558 Int)) Bool (and (= (+ (x785 26959946667150639794667015087019630673637144422540572481103610249215 x335) (* x558 26959946667150639794667015087019630673637144422540572481103610249216)) x335) (>= x558 0)))
(define-fun x685 ((x335 Int) (x696 Int)) Bool (and (x640 x335) (x550 x335) (x926 x335) (x832 x335) (x1467 x335 x696)))
(define-fun x1566 ((x335 Int) (x696 Int)) Bool (and (x340 x335 26959946667150639794667015087019630673637144422540572481103610249215) (x685 x335 x696)))
(define-fun x1298 ((x335 Int)) Bool (= (x785 115792089237316195423570985008687907853269984665640564039457584007913129639904 x335) (x785 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x785 115792089237316195423570985008687907853269984665640564039457584007913129639904 x335))))
(define-fun x589 ((x335 Int)) Bool (=> (and (<= 0 x335) (> 32 x335)) (= (x785 115792089237316195423570985008687907853269984665640564039457584007913129639904 x335) 0)))
(define-fun x776 ((x335 Int) (x558 Int) (x388 Int) (x1069 Int)) Bool (and (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x388) (= x335 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1069) (* 32 x388) x558)) (>= x558 0) (< x558 32) (>= x388 0) (= (x785 115792089237316195423570985008687907853269984665640564039457584007913129639904 x335) (* x388 32)) (<= 0 x1069) (< x1069 1)))
(define-fun x1014 ((x335 Int) (x101 Int) (x492 Int) (x1037 Int)) Bool (and (x776 x335 x101 x492 x1037) (x589 x335) (x1298 x335)))
(define-fun x1003 ((x335 Int) (x101 Int) (x492 Int) (x1037 Int)) Bool (and (x1014 x335 x101 x492 x1037) (x340 x335 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x698 ((x1498 Int)) Int (x303 x1498))
(define-fun x668 ((x1498 Int)) Int (ite (= 128 x1498) x788 (x841 x1498)))
(define-fun x498 ((x1498 Int)) Int (ite (and (>= x1498 160) (< x1498 (+ x1272 160))) (x303 (+ x548 (- x1498 160))) (x668 x1498)))
(define-fun x404 ((x1498 Int)) Int (ite (= x1498 x676) 0 (x498 x1498)))
(define-fun x215 ((x1498 Int)) Int (ite (and (>= x1498 x1408) (< x1498 (+ x1408 x3))) (x303 (+ (- x1498 x1408) x163)) (x1172 x1498)))
(define-fun x899 ((x1498 x880)) Int (ite (= x1498 x87) x916 (x642 x1498)))
(define-fun x609 ((x1498 x880)) Int (ite (= x1492 x1498) x916 (x642 x1498)))
(define-fun x1363 ((x1498 x880)) Int (ite (= x1324 x1498) x916 (x274 x1498)))
(define-fun x515 ((x1498 x880)) Int (ite (= x1498 x523) x916 (x274 x1498)))
(define-fun x794 ((x1498 x880)) Int (ite (and x1243 x1470) (x274 x1498) (ite (and x1094 x732) (x642 x1498) (ite (and x1431 (not x538)) (x1363 x1498) (x515 x1498)))))
(define-fun x887 ((x1498 x880)) Int (ite (= x1498 x588) x916 (x477 x1498)))
(define-fun x210 ((x1498 x880)) Int (ite (= x1201 x1498) x916 (x477 x1498)))
(define-fun x459 ((x1498 x880)) Int (ite (= x1498 x319) x916 (x477 x1498)))
(define-fun x1381 ((x1498 x880)) Int (ite (= x910 x1498) x916 (x1156 x1498)))
(define-fun x77 ((x1498 x880)) Int (ite (= x1498 x616) x916 (x1156 x1498)))
(define-fun x914 ((x1498 x880)) Int (ite (= x506 x1498) x916 (x1156 x1498)))
(define-fun x330 ((x1498 x880)) Int (ite (and x1243 x1470) (x1156 x1498) (ite (and x732 x1094) (x477 x1498) (ite (and (not x713) x342 (not x693)) (x1381 x1498) (ite (and (not x713) x693 x342) (x77 x1498) (x914 x1498))))))
(define-fun x1310 ((x1498 x880)) Int (ite (= x1249 x1498) x1499 (x1023 x1498)))
(define-fun x992 ((x1498 x880)) Int (ite (= x561 x1498) x148 (x700 x1498)))
(define-fun x416 ((x1498 x880)) Int (ite (and x1431 (not x538)) (x992 x1498) (x700 x1498)))
(define-fun x520 ((x1498 x880)) Int (ite (and x1243 x1470) (x700 x1498) (ite (and x1094 x732) (x1023 x1498) (x416 x1498))))
(define-fun x405 ((x1498 x880)) Int (ite (= x1248 x1498) x750 (x1195 x1498)))
(define-fun x1033 ((x1498 x880)) Int (ite (= x1078 x1498) x1111 (x904 x1498)))
(define-fun x68 ((x1498 x880)) Int (ite (and x342 (not x713) (not x693)) (x1033 x1498) (x904 x1498)))
(define-fun x928 ((x1498 x880)) Int (ite (and x1470 x1243) (x904 x1498) (ite (and x732 x1094) (x1195 x1498) (x68 x1498))))
(define-fun x66 ((x1498 x880)) Int (ite (= x1498 x896) x833 (x831 x1498)))
(define-fun x763 ((x1498 x880)) Int (ite (= x47 x1498) x1294 (x835 x1498)))
(define-fun x744 ((x1498 x880)) Int (ite (and x1470 x1243) (x223 x1498) (ite (and x732 x1094) (x546 x1498) (ite (and (not x21) x1431 (not x218) x271) (x835 x1498) (ite (and (not x271) x1431 (not x21)) (x223 x1498) (ite (and x1431 x21) (x223 x1498) (x763 x1498)))))))
(define-fun x122 ((x1498 Int)) Int (ite (= x1498 x677) x1314 (x1437 x1498)))
(define-fun x464 ((x1498 Int)) Int (ite (= x1498 x596) x43 (x122 x1498)))
(define-fun x1198 ((x1498 Int)) Int (ite (and x731 x1292) (x1437 x1498) (x464 x1498)))
(define-fun x508 ((x1498 Int)) Int (ite (= x1302 x1498) x1206 (x1198 x1498)))
(define-fun x1223 ((x1498 Int)) Int (ite (= x1498 x140) x941 (x1315 x1498)))
(define-fun x1071 ((x1498 Int)) Int (ite (= x1498 x289) x153 (x1414 x1498)))
(define-fun x1234 ((x1498 Int)) Int (ite (= x1282 x1498) x704 (x1071 x1498)))
(define-fun x858 ((x1498 Int)) Int (ite (and x342 (not x713) (not x693)) (x1234 x1498) (ite (and x342 x693 (not x713)) (x1234 x1498) (x1414 x1498))))
(define-fun x1202 ((x1498 x880)) Int (ite (= x1498 x1148) x107 (x829 x1498)))
(define-fun x1020 ((x1498 x880)) Int (ite (and x503 x1004) (x829 x1498) (x1202 x1498)))
(define-fun x1064 ((x1498 x880)) Int (ite (= x1048 x1498) x1420 (x361 x1498)))
(define-fun x295 ((x1498 x880)) Int (ite (and x735 x1292) (x361 x1498) (x1064 x1498)))
(define-fun x920 ((x1498 Int)) Int (ite (= x1498 x715) x595 (x858 x1498)))
(define-fun x1521 ((x1498 Int)) Int (ite (= x1498 x1461) x1163 (x729 x1498)))
(define-fun x1278 ((x1498 Int)) Int (ite (and x1470 x1243) (x1414 x1498) (ite (and x732 x1094) (x1437 x1498) (ite (and (not x218) (not x21) x271 x1431) (x729 x1498) (ite (and x1431 (not x271) (not x21)) (x1457 x1498) (ite (and x21 x1431) (x1457 x1498) (x1521 x1498)))))))
(define-fun x1389 ((x1498 Int)) Int (ite (= x1498 x603) x1122 (x1278 x1498)))
(define-fun x345 ((x1498 Int)) Int (ite (= x16 x1498) x165 (x1389 x1498)))
(define-fun x1279 ((x1498 Int)) Int (ite (= x1411 x1498) x1306 (x345 x1498)))
(define-fun x480 ((x1498 Int)) Int (ite (= x1498 x917) x1559 (x1279 x1498)))
(define-fun x673 ((x1498 Int)) Int (ite (= x1498 x1028) 32 (x480 x1498)))
(define-fun x872 ((x1498 Int)) Int (ite (= x644 x1498) x886 (x1317 x1498)))
(define-fun x737 ((x1498 Int)) Int (ite (= x1498 x37) 0 (x1487 x1498)))
(define-fun x660 ((x1498 Int)) Int (ite (= 0 x1498) 1 (x790 x1498)))
(define-fun x983 ((x1498 Int)) Int (ite (= x1498 0) 1 (x790 x1498)))
(define-fun x943 ((x1498 Int)) Int (ite (and x1203 x958) (x660 x1498) (x983 x1498)))
(define-fun x1082 ((x1498 Int)) Int (ite (= x1360 x1498) x1388 (x638 x1498)))
(define-fun x1263 ((x1498 Int)) Int (ite (= x1498 x1360) x1336 (x638 x1498)))
(define-fun x1252 ((x1498 Int)) Int (ite (= x1498 x1360) x1260 (x902 x1498)))
(define-fun x1402 ((x1498 Int)) Int (ite (and (< x1498 (+ x299 x1260)) (>= x1498 x299)) (x943 (+ 0 (- x1498 x299))) (x1252 x1498)))
(define-fun x923 ((x1498 Int)) Int (ite (and (not x1364) x1291) (x1402 x1498) (x902 x1498)))
(define-fun x186 ((x1498 Int)) Int (ite (= x1498 x501) x174 (x923 x1498)))
(define-fun x906 ((x1498 Int)) Int (ite (= x1498 x100) x417 (x186 x1498)))
(define-fun x1561 ((x1498 Int)) Int (ite (= x1498 x379) x1376 (x906 x1498)))
(define-fun x1329 ((x1498 Int)) Int (ite (= x1193 x1498) x343 (x1561 x1498)))
(define-fun x189 ((x1498 Int)) Int (ite (= x1498 x1098) 32 (x1329 x1498)))
(define-fun x573 ((x1498 Int)) Int (ite (= x1498 x369) x631 (x1497 x1498)))
(define-fun x352 ((x1498 Int)) Int (ite (= x1453 x1498) 0 (x487 x1498)))
(define-fun x544 ((x1498 x880)) Int (ite (= x1498 (x629 274184521717934524641157099916833587206)) x721 (x391 x1498)))
(define-fun x1076 ((x1498 x880)) Int (ite (= (x629 x301) x1498) x150 (x544 x1498)))
(define-fun x827 ((x1498 x880)) Int (ite (= (x629 x301) x1498) x80 (x1076 x1498)))
(define-fun x59 ((x1498 x880)) Int (ite (= (x629 274184521717934524641157099916833587206) x1498) x98 (x827 x1498)))
(define-fun x1006 ((x1498 x880)) Int (ite (= (x629 274184521717934524641157099916833587206) x1498) x997 (x59 x1498)))
(define-fun x1215 ((x1498 x880)) Int (ite (= x1498 (x629 x963)) x862 (x1006 x1498)))
(define-fun x187 ((x1498 x880)) Int (ite (= x298 x1498) x104 (x1384 x1498)))
(define-fun x84 ((x1498 x880)) Int (ite (= x1498 x1250) x437 (x187 x1498)))
(define-fun x606 ((x1498 x880)) Int (ite (and x1203 x958) (x84 x1498) (x1384 x1498)))
(define-fun x136 ((x1498 x880)) Int (ite (= x184 x1498) x13 (x606 x1498)))
(define-fun x1205 ((x1498 Int)) Int (ite (= x1498 0) 1 (x154 x1498)))
(define-fun x1313 ((x1498 Int)) Int (ite (= x1454 x1498) x850 (x857 x1498)))
(define-fun x1503 ((x1498 x880)) Int (ite (= x1498 x426) x158 (x1140 x1498)))
(define-fun x1055 ((x1498 x880)) Int (ite (= x1498 x951) x88 (x1503 x1498)))
(define-fun x547 ((x1498 x880)) Int (ite (and x958 x1203) (x1140 x1498) (x1055 x1498)))
(define-fun x798 ((x1498 x880)) Int (ite (= x1498 x968) x389 (x547 x1498)))
(define-fun x851 ((x1498 Int)) Int (ite (= x1498 0) 1 (x154 x1498)))
(define-fun x1543 ((x1498 Int)) Int (ite (= x1454 x1498) x1186 (x857 x1498)))
(define-fun x517 ((x1498 Int)) Int (ite (and x843 x1327) (x1205 x1498) (x851 x1498)))
(define-fun x332 ((x1498 x880)) Int (ite (= x1498 (x629 x963)) x331 (x1215 x1498)))
(define-fun x576 ((x1498 Int)) Int (ite (= x1454 x1498) x1524 (x1035 x1498)))
(define-fun x627 ((x1498 Int)) Int (ite (and (< x1498 (+ x846 x1524)) (>= x1498 x846)) (x517 (+ (- x1498 x846) 0)) (x576 x1498)))
(define-fun x1562 ((x1498 Int)) Int (ite (and x1435 x1253) (x1035 x1498) (x627 x1498)))
(define-fun x1134 ((x335 Int)) Bool (=> (and (not (= x335 1889567281)) (not (= 1986467848 x335)) (not (= 2835717307 x335)) (not (= 2743102681 x335)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x335)) (not (= 649617121 x335)) (not (= x335 142201243)) (not (= x335 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x335 115792089237316195423570985008687907853269984665640564039457)) (not (= 2960351575 x335)) (not (= 2532887486 x335)) (not (= x335 2690754053)) (not (= 1461501637330902918203684832716283019655932542975 x335)) (not (= x335 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 2939843472 x335)) (not (= x335 759532456)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x335)) (not (= x335 18446744073709551615)) (not (= 2798343961 x335)) (not (= 274184521717934524641157099916833587206 x335)) (not (= x335 2514000705)) (not (= x335 911411945)) (< 10000 x335) (not (= x335 87118632)) (not (= x335 1000000000000000000)) (not (= 2418364589 x335)) (not (= x335 274184521717934524641157099916833587218)) (not (= x335 826074471)) (not (= x335 2868243304)) (not (= x335 2061678023)) (not (= x335 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= 2512682246 x335)) (not (= x335 468353030)) (not (= x335 2211524764)) (not (= 69947311 x335)) (not (= x335 274184521717934524641157099916833587214)) (not (= 635128645 x335)) (not (= 1968616202 x335)) (not (= x335 2764855426)) (not (= x335 2293535753)) (not (= 2258409472 x335)) (not (= x335 604800))) (not ((_ is x661) (x629 x335)))))
(assert (= x433 (=> (and (>= x1270 0) (<= 0 x1471) (= x1000 x1411) (= x893 (x785 1461501637330902918203684832716283019655932542975 x390)) (>= x1294 0) (= (x1477 x639 1) x266) (>= x1490 0) (= (= 0 x307) x538) (= x21 (= 0 x1294)) (= x1471 (x1062 x266)) (= x1472 (x1474 (x629 x1287) x255 0)) (= x1287 (x785 1461501637330902918203684832716283019655932542975 x881)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1270) (= x11 (x1474 (x629 x1129) x1092 0)) (= (x1474 (x629 x805) (x661 3) 0) x571) (<= x595 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1129 (x785 1461501637330902918203684832716283019655932542975 x881)) (= x255 (x1474 (x629 x805) (x661 5) 0)) (<= 0 x595) (= (x927 (+ 32 x715)) x526) (or (and (= x1545 1) (= (mod (* 1000000000000000000 x1294) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x259) (= (div x259 x1490) x119) (= (x785 x1545 x1367) x97) (or (and (= x1506 (x785 1461501637330902918203684832716283019655932542975 x881)) (= (x1474 (x629 x327) x63 0) x486) (= (x1474 (x629 x805) (x661 4) 0) x1318) (>= x177 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x177 x119)) (= x216 x1332) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1247) (= x994 (x927 (+ 160 x138))) (= x447 (x785 1461501637330902918203684832716283019655932542975 x390)) (= (x1474 (x629 x362) x1341 0) x1409) (= (x1474 (x629 x229) x1087 0) x1341) (= x570 (x1474 (x629 x58) x645 0)) (= (x785 1461501637330902918203684832716283019655932542975 x881) x327) (= x207 (x303 x999)) (<= x177 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1457 x994) x1514) (= x216 (div x1173 1000000000000000000)) (= (x1474 (x629 x1506) x1318 0) x452) (= (x1474 (x629 x805) (x661 4) 0) x63) (= x229 (x785 1461501637330902918203684832716283019655932542975 x881)) (= 0 x1247) (= x1074 x1514) (= x1247 (x223 x1395)) (= (x1474 (x629 x447) x486 0) x645) (or (not x218) (and (< 1 x788) (= x894 (x1474 (x629 x679) x802 0)) (= x81 (x785 1461501637330902918203684832716283019655932542975 x881)) (= x1338 (x1474 (x629 x805) (x661 4) 0)) (< 1 x788) (= x226 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x664 x119)) (= (x1474 (x629 x687) x1338 0) x1312) (>= x664 0) (= x205 (x1474 (x629 x81) x1128 0)) (= x1241 (div x1541 1000000000000000000)) (= (x927 (+ x138 192)) x1461) (= (x785 1461501637330902918203684832716283019655932542975 x881) x687) (= (x1474 (x629 x805) (x661 4) 0) x1128) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664) (= (x927 (+ x316 64)) x528) (= (+ x773 x988) x1163) (not x1219) (= (x785 1461501637330902918203684832716283019655932542975 x390) x870) (<= 0 x226) (= x1444 (x1474 (x629 x870) x1312 0)) (>= 1461501637330902918203684832716283019655932542975 x679) (>= 1461501637330902918203684832716283019655932542975 x1051) (< 1 x788) (= (x303 x528) x455) (= (* x119 x664) x1541) (= x1191 x988) (= (x1474 (x629 x805) (x661 11) 0) x1508) (= x47 (x1474 (x629 x1051) x1444 0)) (= x1191 (x729 x1461)) x218 (= (< 2 x788) x1219) (= (x835 x1392) x226) (= x679 (x303 x528)) (= (x1107 x894) x664) (= (x1474 (x629 x455) x1100 0) x1392) (= x1401 (x729 x1375)) (= (x303 x528) x1051) (= x1100 (x1474 (x629 x1175) x205 0)) (<= x455 1461501637330902918203684832716283019655932542975) (= x773 x1241) (= x49 (x785 1461501637330902918203684832716283019655932542975 x881)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1241 x1191)) (< 1 x1401) (= (x785 1461501637330902918203684832716283019655932542975 x390) x1175) (= x802 (x1474 (x629 x49) x1508 0)) (<= x226 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (<= 0 x1247) (= x653 (x1457 x1375)) (= (x1107 x1409) x177) (= x519 (x1474 (x629 x323) x452 0)) (= (x303 x999) x58) (= (> x788 1) x218) (= x999 x548) (>= 1461501637330902918203684832716283019655932542975 x58) (< 0 x653) (= x1221 (+ x1074 x1332)) (= x1395 (x1474 (x629 x207) x519 0)) (< 0 x788) (<= x207 1461501637330902918203684832716283019655932542975) (= (x1474 (x629 x805) (x661 11) 0) x1087) (= x1173 (* x119 x177)) (= x323 (x785 1461501637330902918203684832716283019655932542975 x390)) (<= x362 1461501637330902918203684832716283019655932542975) x271 (< 0 x788) (< 0 x788) (= (x303 x999) x362) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1514 x216))) (not x271)) (not x21) (= (< 0 x788) x271) (= x1367 (ite (< 115792089237316195423570985008687907853269984665640564039457 x1294) 1 0)) (= 0 x97) (> x1490 0)) x21) (= (x785 1461501637330902918203684832716283019655932542975 x881) x621) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x805)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1490) (= (x1474 (x629 x805) (x661 1) 0) x639) (= (x1474 (x629 x893) x217 0) x1300) (= x456 (x927 (+ x929 2))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1471) (= x1123 (x1457 x526)) (= (< x1270 x1123) x1432) (or (and (= x1088 (x785 1461501637330902918203684832716283019655932542975 x881)) (not x1216)) x1216) (or (and (or (and (= x916 x1528) (not x986)) (and (= x1528 x742) (= x742 (x1457 x526)) x986)) (= x518 (x1457 x526)) x1432 (= (< x518 x916) x986) (or (and (not (< x1528 x1515)) x349 (= x949 x307) (= x1515 (x1457 x715)) (= (x322 (- x1528 x1515)) x949)) (and (not x349) (= x307 x1165) (= x1165 (ite (< x139 604800) x139 604800)) (= x770 604800) (not (< x1528 x1270)) (= x139 (x322 (- x1528 x1270))))) (= (= x1270 0) x349)) (and (not x1432) (= x307 0))) (or (and (= x622 x148) (= x1324 (x1474 (x629 x1441) x792 0)) (< (* x307 x1443) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1474 (x629 x805) (x661 6) 0) x792) (= x1441 (x785 1461501637330902918203684832716283019655932542975 x881)) (= x622 (* x1443 x307)) (= x1390 (x1474 (x629 x805) (x661 5) 0)) (= x855 (x785 1461501637330902918203684832716283019655932542975 x881)) (not x538) (= x561 (x1474 (x629 x855) x1390 0))) (and (= x75 (x1474 (x629 x805) (x661 6) 0)) (= x523 (x1474 (x629 x942) x75 0)) x538 (= x942 (x785 1461501637330902918203684832716283019655932542975 x881)))) (= (x68 x1300) x1294) (= (x1474 (x629 x805) (x661 6) 0) x1092) (= (x1474 (x629 x621) x571 0) x217) (= x1216 (= 0 x1484)) (<= x1294 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x1460 x456) (= x1000 (x927 (+ x715 64))) (= (x274 x11) x1270) (= x595 (x132 x639)) (= (x416 x1472) x1490)) x604)))
(assert (=> (>= 10000 x1465) (= (x629 x1465) (x661 x1465))))
(assert (x1153 x575))
(assert (x1153 x468))
(assert (x1153 x1368))
(assert (x1153 x893))
(assert (= (ite (= x651 x1349) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x1349)) (x1579 x1349)))
(assert (x1153 x624))
(assert (x1153 x390))
(assert (x1153 x1346))
(assert (= (x231 (x629 x1012)) x1012))
(assert (= (x231 (x629 x1334)) x1334))
(assert (x1134 x599))
(assert (= (x274 x382) (ite (and x503 x387) (x899 x382) (x609 x382))))
(assert (x1153 x1391))
(assert (x1153 x1520))
(assert (x1153 x458))
(assert (= (x1172 x1321) (ite (= x1321 x1375) x788 (x404 x1321))))
(assert (x1153 x265))
(assert (= x123 (or (and x732 x1094) (and x1470 x1243) x1431)))
(assert (x1153 x125))
(assert (= x1024 (=> (and (= (x520 x736) x979) (not (> 2690754053 x1455)) (= (x1474 (x629 x578) x170 0) x736) (>= x979 0) (= (x1474 (x629 x1560) (x661 5) 0) x170) (= (x51 (x629 274184521717934524641157099916833587206)) x878) (= x711 x979) (>= 1461501637330902918203684832716283019655932542975 x578) (not (= x1455 2743102681)) (= 2798343961 x1455) (> x878 0) (not (< x1455 2293535753)) (< x1455 2960351575) (not (= 2764855426 x1455)) (not (= 2690754053 x1455)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x979)) (=> (and (= x962 x1578) (= x126 x25) (= x114 x711) (= x234 x800) (= x1346 x683)) x356))))
(assert (= (ite (= x945 x1375) x788 (x404 x945)) (x1172 x945)))
(assert (= (x1172 x937) (ite (= x937 x1375) x788 (x404 x937))))
(assert (x1153 x399))
(assert (=> (>= 10000 x1296) (= (x629 x1296) (x661 x1296))))
(assert (x1153 x871))
(assert (= (ite (= x488 x1161) x1118 (x820 x1161)) (x1317 x1161)))
(assert (= (x231 (x661 759532456)) 759532456))
(assert (= (x231 (x629 x74)) x74))
(assert (x1153 x195))
(assert (= (or (and x1135 x1265) (and x958 x1203)) x1291))
(assert (= (x231 (x629 x868)) x868))
(assert (x1153 x1445))
(assert (= (x274 x457) (ite (and x387 x503) (x899 x457) (x609 x457))))
(assert (x1153 x1424))
(assert (x1153 x1111))
(assert (x1153 x1475))
(assert (= 2798343961 (x231 (x661 2798343961))))
(assert (x1153 x106))
(assert (x1153 x632))
(assert (= (x902 x1017) (ite (and x958 x1203) (x1082 x1017) (x1263 x1017))))
(assert (= (x1487 x1017) (ite (and x1151 x263 (not x1133) x123 x1013 x465) (x1317 x1017) (ite (and x123 x1013 (not x465) x1151 x263) (x820 x1017) (ite (and x1013 (not x1151) x123 x263) (x381 x1017) (ite (and (not x1013) x123 x263) (x1579 x1017) (x872 x1017)))))))
(assert (= (x223 x1392) (ite (and x503 (not x513) (not x384) x592) (x831 x1392) (ite (and (not x384) (not x592) x503) (x546 x1392) (ite (and x503 x384) (x546 x1392) (x66 x1392))))))
(assert (x1153 x945))
(assert (x1153 x1221))
(assert (x1153 x999))
(assert (x1153 x22))
(assert (= 649617121 (x231 (x661 649617121))))
(assert (=> (>= 10000 x924) (= (x661 x924) (x629 x924))))
(assert (x1153 x614))
(assert (x1153 x280))
(assert (= (=> (and (= (= 0 x1166) x1016) (= x1427 (x1474 (x629 x22) x516 0)) (= x1473 (x1474 (x629 x758) x1427 0)) (= (x785 1461501637330902918203684832716283019655932542975 x881) x22) (= x1166 (x477 x1473)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1166) (= (x1474 (x629 x929) (x661 7) 0) x516) (= (x785 1461501637330902918203684832716283019655932542975 x390) x758) (>= x1166 0)) (and (=> x1016 x898) (=> (and (= x929 x1526) (not x1016)) x598))) x367))
(assert (= (x1457 x545) (ite (= x545 x526) x1471 (x920 x545))))
(assert (= (ite (and x1077 x1281) (x1172 x1321) (x215 x1321)) (x1437 x1321)))
(assert (= (and x965 x1016) x202))
(assert (= (ite (and x731 x1292) (x887 x166) (ite (and x1292 (not x731) x462) (x210 x166) (x459 x166))) (x1156 x166)))
(assert (x1153 x657))
(assert (= (x45 x844) (ite (= x844 x262) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x189 x844))))
(assert (= (x661 2418364589) (x629 2418364589)))
(assert (x1134 x578))
(assert (= (ite (= x320 x651) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x320)) (x1579 x320)))
(assert (=> (>= 10000 x873) (= (x629 x873) (x661 x873))))
(assert (= (ite (= x62 x320) x811 (x429 x320)) (x1315 x320)))
(assert (x1153 x805))
(assert (= (x904 x1300) (ite (and x1292 x731) (x1195 x1300) (ite (and x462 (not x731) x1292) (x1195 x1300) (x405 x1300)))))
(assert (= (x231 (x629 x58)) x58))
(assert (= x1175 (x231 (x629 x1175))))
(assert (x1134 x536))
(assert (x1153 x683))
(assert (=> (<= x1044 10000) (= (x629 x1044) (x661 x1044))))
(assert (x1153 x1258))
(assert (x1153 x93))
(assert (= x510 (=> (and (= x694 2532887486) (= x799 (x1474 (x629 x567) x267 0)) (not (= x694 2512682246)) (< 0 x938) (= (x1474 (x629 x511) x766 0) x267) (< x694 2690754053) (<= x280 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x567) (not (< x694 2293535753)) (not (= 2293535753 x694)) (<= 0 x564) (> 2960351575 x694) (not (= x694 2418364589)) (<= x564 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x51 (x629 274184521717934524641157099916833587206)) x938) (= x564 x20) (= x564 (x546 x799)) (= x748 (x1474 (x629 x93) (x661 4) 0)) (>= 1461501637330902918203684832716283019655932542975 x511) (= x766 (x1474 (x629 x280) x748 0))) (=> (and (not (< x163 4)) (= x1359 (x322 (- x1015 1))) (not (= 2743102681 x1551)) (= x214 x1460) (<= x682 1461501637330902918203684832716283019655932542975) (= x973 x719) (= (x404 128) x1015) (= x929 x1255) (= (>= x1174 x743) x1380) (= (x927 (+ 35 x680)) x336) (<= x390 1461501637330902918203684832716283019655932542975) (= x597 x72) (> 2960351575 x1551) (= x1194 (x51 (x629 274184521717934524641157099916833587206))) (= x316 (x927 (+ 4 x680))) (not (< 18446744073709551615 x261)) (not (< x1551 2293535753)) (not (= 2764855426 x1551)) (= x1272 (mod (* x788 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x677 (x927 (+ x373 x1375))) (>= x682 0) (not (> 1 x1015)) (= x1551 2939843472) (= (x927 (+ 160 x96)) x1375) (= x96 (mod (* 32 x788) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x954 (mod (* 32 x788) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x822 1461501637330902918203684832716283019655932542975) (= x261 x680) x1204 (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x779) (and (= (<= x779 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 160 x779)))) (> x1520 x214) (> x1194 0) (= x676 (x927 (+ 160 x1272))) (= x779 (x322 (- x163 4))) (not (> x1288 x163)) (>= 1461501637330902918203684832716283019655932542975 x933) (not (< x1551 2690754053)) (= (x927 (+ x680 36)) x548) (not (< x214 x929)) (= (x927 (+ x1272 32)) x373) (= (and x27 x1380) x1204) (or x1281 (and (= (x927 (+ x138 160)) x1408) (not x1281) (= (mod (* x788 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3))) (= x138 (x927 (+ 32 x96))) (= x881 x1209) (or (and (= (x322 (- x1015 1)) x143) (= (< 1 x1015) x239) x137 (or (not x239) (and (= (x404 160) x1340) x239 (= (x404 128) x885) (not (= x1227 x1523)) (= (> x1015 2) x8) (= (x785 1461501637330902918203684832716283019655932542975 x1340) x1227) (= (x404 128) x1516) (= (x785 1461501637330902918203684832716283019655932542975 x1322) x1523) (< 1 x885) (= x1322 (x404 192)) (> x1516 0) (or (and (= x552 (x404 160)) (= x33 (x785 1461501637330902918203684832716283019655932542975 x121)) (= (> x1015 3) x253) (not x253) x8 (> x273 2) (= x649 (x785 1461501637330902918203684832716283019655932542975 x552)) (= x220 (x404 128)) (not (= x649 x33)) (< 0 x220) (= (x404 128) x273) (= (x404 224) x121)) (not x8)))) (not (< x1015 1)) (not (< 1 x143))) (not x137)) (>= x933 0) (>= x1520 0) (= x822 x504) (= x224 x881) (< 163 x163) (= x1288 (x927 (+ x954 x548))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1520) (or (and (> x163 x336) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x336) (<= x163 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x336 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x163))) (<= x881 1461501637330902918203684832716283019655932542975) (= x338 x214) (= (x303 x316) x788) (= x137 (> x1359 0)) (= true (<= x163 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x1096 x916) (= x1145 x929) (not (< 18446744073709551615 x788)) (= x689 x390) (= x933 x72) (not (= x1551 2798343961)) (= (= 0 x788) x1281) (not (= 2690754053 x1551)) (= 0 x973) (= x1049 128) (= x20 x743) (>= x822 0) (not (= 2868243304 x1551)) (= x1054 x390)) x759))))
(assert (= (x1579 x844) (ite (= x651 x844) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x844))))
(assert (= x599 (x231 (x629 x599))))
(assert (= (x231 (x629 x1433)) x1433))
(assert (= (x231 (x661 2211524764)) 2211524764))
(assert (x1153 x177))
(assert (= (x629 826074471) (x661 826074471)))
(assert (x1134 x952))
(assert (= x375 (=> (and x277 x1137 (= (= x301 274184521717934524641157099916833587218) x1203) (= x721 (x391 (x629 274184521717934524641157099916833587206))) (= (>= x602 0) x277) (= (x391 (x629 274184521717934524641157099916833587206)) x602) (= x350 x69) (= x1337 (< x1192 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< (x544 (x629 x301)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1137) x1337 (= x1192 (x391 (x629 x301))) (= x150 (x544 (x629 x301)))) (and (=> (not x1203) x485) (=> (and (= x1452 (x51 (x629 274184521717934524641157099916833587218))) (= x989 274184521717934524641157099916833587206) (not x1393) (< 0 x1452) (not (< x258 649617121)) (= x812 x165) (= x574 (x1384 x1361)) (<= x574 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1260 32) (= (> x812 x574) x1393) (= x947 x1388) (= x1417 x395) (= x998 274184521717934524641157099916833587206) (<= 0 x1417) (= x1 x325) (= 1 x238) (not (= 826074471 x258)) (= x1417 (x187 x707)) (= (+ x325 x395) x437) (= x1 x812) (= (>= (+ x1417 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1469) (not (= x258 649617121)) (<= x1417 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1474 (x629 274184521717934524641157099916833587206) (x661 1) 0) x298) (= x1122 x1433) (<= 0 x574) (not (< x468 4)) (= x350 x468) (= x1250 (x1474 (x629 x1433) (x661 1) 0)) (<= x1433 1461501637330902918203684832716283019655932542975) (= 68 x468) (= x1229 (> x1 x574)) (= x1361 (x1474 (x629 274184521717934524641157099916833587206) (x661 1) 0)) (= (x1474 (x629 x1433) (x661 1) 0) x707) (= x1002 (x322 (- x468 4))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1 x1417)) (= x104 (x322 (- x574 x812))) (not x1469) (not x1229) (= x585 (or (and (< x1002 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1002) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1002))) (not (= x258 1889567281)) (= 2835717307 x258) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x86) (not x585) (not (= x258 2514000705)) x1203 (= x1480 x1433)) x1034)))))
(assert (= (ite (= x62 x1321) x811 (x429 x1321)) (x1315 x1321)))
(assert (=> (<= x1495 10000) (= (x661 x1495) (x629 x1495))))
(assert (x1153 x20))
(assert (x1153 x350))
(assert (=> (>= 10000 x1266) (= (x629 x1266) (x661 x1266))))
(assert (x1134 x1057))
(assert (x1134 x617))
(assert (x1153 x1366))
(assert (x1153 x1097))
(assert (= (ite (= x994 x118) x1221 (x1457 x118)) (x729 x118)))
(assert (= x447 (x231 (x629 x447))))
(assert (x1153 x680))
(assert (x1153 x730))
(assert (x1153 x1420))
(assert (= (=> (= x930 (> x788 1)) (and (=> (and (= (x927 (+ x379 32)) x1193) x641 (< 1 x803) (or (and (= (x45 x1161) x1466) (= x1454 x654) (or (and (not x1399) (= 32 x103)) (and (= (< 64 x1021) x1468) (= (x927 (+ x1098 96)) x935) (= (x946 x762) x903) x1399 (or (and (= x103 64) (not x1468)) (and (or (and (= (x927 (+ 128 x379)) x945) x90 (= x103 128) (= (x1497 x945) x631) (= (x927 (+ 160 x1098)) x369) (= (> x1021 128) x647) (not x647)) (and (= x103 96) (not x90))) (= (x927 (+ 128 x1098)) x1458) (= (x1529 x320) x847) (= (x927 (+ x379 96)) x320) (= x90 (< 96 x1021)) x1468)) (= x762 (x927 (+ x379 64))))) x157 (= x1161 x1193) (= x1399 (> x1021 32))) (and (= 0 x103) (not x157))) (= x106 (x51 (x629 x963))) (= (x927 (+ x501 96)) x262) (= (x785 26959946667150639794667015087019630673637144422540572481103610249215 x225) x1482) (>= 1461501637330902918203684832716283019655932542975 x963) (= (x322 (- x1098 x379)) x1125) (= (x927 (+ 36 x379)) x501) (= x100 (x927 (+ x379 68))) (= x417 (x923 x545)) (= x343 (x927 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1482))) (= x1021 (x45 x379)) (= x641 (< 0 x106)) (or (not x182) (and x182 (= (x927 (+ x1454 x1021)) x1453))) (= x256 0) (= (x927 (+ x501 128)) x1454) (= x1098 (x927 (+ 100 x379))) (= (> x1021 0) x157) x930 (= x545 (x927 (+ x138 192))) (= x963 (x303 x116)) (= x182 (< x1021 x103)) (= x1376 (x322 (- x1125 32))) (= x225 (x1561 x1193)) (= x174 (x785 1461501637330902918203684832716283019655932542975 x390)) (= x116 (x927 (+ 64 x316))) (< 1 x788) (= (x923 x1375) x803)) x358) (=> (not x930) x620))) x26))
(assert (=> (>= 10000 x1060) (= (x661 x1060) (x629 x1060))))
(assert (= (x274 x1335) (ite (and x503 x387) (x899 x1335) (x609 x1335))))
(assert (= x741 (x231 (x629 x741))))
(assert (= x410 (=> (and (= (x322 (- x929 1)) x860) (= x722 (< 0 x860))) (and (=> (not x722) x383) (=> x722 x42)))))
(assert (x1153 x1193))
(assert (=> (<= x962 10000) (= (x661 x962) (x629 x962))))
(assert (= (ite (and x1292 x731) (x1195 x1485) (ite (and (not x731) x1292 x462) (x1195 x1485) (x405 x1485))) (x904 x1485)))
(assert (= x593 (x231 (x629 x593))))
(assert (= (ite (and x263 (not x1133) x465 x1151 x1013 x123) (x1317 x937) (ite (and x1151 x263 (not x465) x1013 x123) (x820 x937) (ite (and x263 (not x1151) x1013 x123) (x381 x937) (ite (and x263 (not x1013) x123) (x1579 x937) (x872 x937))))) (x1487 x937)))
(assert (= (ite (= x56 x488) x1118 (x820 x56)) (x1317 x56)))
(assert (= (x231 (x661 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x1153 x1546))
(assert (= (x841 x945) 0))
(assert (= x22 (x231 (x629 x22))))
(assert (= (x231 (x1477 x639 1)) (+ (x231 x639) 1)))
(assert (=> (>= 10000 x575) (= (x629 x575) (x661 x575))))
(assert (= (x629 2532887486) (x661 2532887486)))
(assert (=> (<= x328 10000) (= (x661 x328) (x629 x328))))
(assert (= (x1315 x140) (ite (= x62 x140) x811 (x429 x140))))
(assert (= (x661 1986467848) (x629 1986467848)))
(assert (=> (<= x797 10000) (= (x661 x797) (x629 x797))))
(assert (x1153 x1443))
(assert (x1134 x873))
(assert (x1134 x207))
(assert (x1153 x1286))
(assert (x1153 x1350))
(assert (= (x231 (x629 x942)) x942))
(assert (x1134 x129))
(assert (= x1339 (=> (= (< 0 x929) x1486) (and (=> (not x1486) x537) (=> x1486 x367)))))
(assert (= (x231 (x629 x1558)) x1558))
(assert (x1153 x133))
(assert (= (x1317 x1349) (ite (= x1349 x488) x1118 (x820 x1349))))
(assert (= (x820 x1017) (ite (= x1404 x1017) x724 (x381 x1017))))
(assert (= (x231 (x629 x874)) x874))
(assert (= (x231 (x629 x1536)) x1536))
(assert (x1153 x931))
(assert (x1153 x81))
(assert (x1153 x1022))
(assert (= (x231 (x629 x695)) x695))
(assert (= (or x1236 x400) x1214))
(assert (x1134 274184521717934524641157099916833587206))
(assert (x1153 x1166))
(assert (= x967 (x231 (x629 x967))))
(assert (= (x231 (x661 635128645)) 635128645))
(assert (= (x231 (x629 x199)) x199))
(assert (x1153 x307))
(assert (x1134 x213))
(assert (= (x1437 x1375) (ite (and x1281 x1077) (x1172 x1375) (x215 x1375))))
(assert (x1153 x145))
(assert (x1153 x1545))
(assert (x1153 x140))
(assert (x678 x390))
(assert (=> (>= 10000 x617) (= (x661 x617) (x629 x617))))
(assert (= (x1315 x118) (ite (= x118 x62) x811 (x429 x118))))
(assert (=> (>= 10000 x22) (= (x629 x22) (x661 x22))))
(assert (x888 x390 x1436))
(assert (x1153 x244))
(assert (= (ite (= x488 x937) x1118 (x820 x937)) (x1317 x937)))
(assert (x1153 x1123))
(assert (= (x231 (x629 x679)) x679))
(assert (= (x1457 x1461) (ite (= x526 x1461) x1471 (x920 x1461))))
(assert (x1153 x901))
(assert (= (x381 x945) (ite (= x945 x302) x242 (x1579 x945))))
(assert (= (x429 x762) (ite (= x762 x525) x1097 (x508 x762))))
(assert (x678 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x678 x499))
(assert (x1153 x455))
(assert (= (x429 x62) (ite (= x62 x525) x1097 (x508 x62))))
(assert (x1153 x625))
(assert (= (=> (and (= (x1474 (x629 x929) (x661 6) 0) x1127) (<= x354 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x347 (x1474 (x629 x328) x1127 0)) (= x354 (x642 x347)) (>= x354 0) (= (= 0 x354) x1052) (= x328 (x785 1461501637330902918203684832716283019655932542975 x881))) (and (=> x1052 x410) (=> (and (= x549 x929) (not x1052)) x628))) x1419))
(assert (x1134 x1441))
(assert (= (x429 x1321) (ite (= x525 x1321) x1097 (x508 x1321))))
(assert (=> (<= x1560 10000) (= (x629 x1560) (x661 x1560))))
(assert (= (x1487 x320) (ite (and (not x1133) x1151 x123 x263 x465 x1013) (x1317 x320) (ite (and x1013 x1151 x263 x123 (not x465)) (x820 x320) (ite (and x1013 x263 x123 (not x1151)) (x381 x320) (ite (and x263 (not x1013) x123) (x1579 x320) (x872 x320)))))))
(assert (= (x1437 x1461) (ite (and x1077 x1281) (x1172 x1461) (x215 x1461))))
(assert (x1153 x845))
(assert (x1153 x1130))
(assert (= (x1156 x46) (ite (and x731 x1292) (x887 x46) (ite (and x462 (not x731) x1292) (x210 x46) (x459 x46)))))
(assert (= x871 (x231 (x629 x871))))
(assert (x1153 x1118))
(assert (x1153 x149))
(assert (x1153 x495))
(assert (x1153 x1480))
(assert (x1153 x747))
(assert (= 2764855426 (x231 (x661 2764855426))))
(assert (x1153 x354))
(assert (=> (<= x1558 10000) (= (x661 x1558) (x629 x1558))))
(assert (x1153 x40))
(assert (x1153 x724))
(assert (= (ite (and x503 x387) (x899 x337) (x609 x337)) (x274 x337)))
(assert (x1153 x972))
(assert (x1153 x1493))
(assert (=> (>= 10000 x1446) (= (x661 x1446) (x629 x1446))))
(assert (= (x231 (x629 x1525)) x1525))
(assert (=> (<= x81 10000) (= (x661 x81) (x629 x81))))
(assert (= x49 (x231 (x629 x49))))
(assert (x1153 x916))
(assert (= (ite (and x465 x1151 (not x1133) x263 x123 x1013) (x1317 x545) (ite (and x123 x263 x1013 x1151 (not x465)) (x820 x545) (ite (and x1013 (not x1151) x263 x123) (x381 x545) (ite (and x263 (not x1013) x123) (x1579 x545) (x872 x545))))) (x1487 x545)))
(assert (= (and x257 x127) x612))
(assert (=> (>= 10000 x1534) (= (x661 x1534) (x629 x1534))))
(assert (= (and x1470 (not x1243)) x1063))
(assert (= x924 (x231 (x629 x924))))
(assert (= x1236 (or (and (not x728) x581) (and (not x675) x1530))))
(assert (x1153 x1272))
(assert (x1153 x594))
(assert (= (x629 2211524764) (x661 2211524764)))
(assert (= x913 (or (and (not x1121) x202) (and x761 x159) (and (not x1486) x655))))
(assert (=> (<= x415 10000) (= (x629 x415) (x661 x415))))
(assert (x1153 x96))
(assert (= (x231 (x629 x809)) x809))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x231 (x661 115792089237316195423570985008687907853269984665640564039457))))
(assert (= x821 (=> (and (>= x244 0) (= (x1474 (x629 x805) (x661 6) 0) x703) (= (= 0 x244) x728) (= (x785 1461501637330902918203684832716283019655932542975 x881) x1226) (= (x1474 (x629 x1226) x703 0) x457) (= (x274 x457) x244) (<= x244 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (= x500 x805) (not x728)) x1425) (=> x728 x1050)))))
(assert (x1134 x1044))
(assert (x1153 x578))
(assert (x1153 x373))
(assert (x1153 x549))
(assert (x1134 x133))
(assert (= x356 (=> (and (<= x160 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x901 (x51 (x629 274184521717934524641157099916833587206))) (= x160 x859) (not (= x560 2418364589)) (not (= 2293535753 x560)) (= x160 (x744 x192)) (= x560 2532887486) (not (= 2512682246 x560)) (>= 1461501637330902918203684832716283019655932542975 x962) (= x172 (x1474 (x629 x234) (x661 4) 0)) (< x560 2690754053) (= (x1474 (x629 x126) x172 0) x435) (< 0 x901) (<= x126 1461501637330902918203684832716283019655932542975) (not (> 2293535753 x560)) (= (x1474 (x629 x962) x435 0) x1535) (<= 0 x160) (= (x1474 (x629 x683) x1535 0) x192) (>= 1461501637330902918203684832716283019655932542975 x683) (< x560 2960351575)) x726)))
(assert (x1153 x644))
(assert (x1153 x85))
(assert (= x1115 x671))
(assert (x1153 x432))
(assert (= (and x1570 x1136) x92))
(assert (=> (>= 10000 x860) (= (x661 x860) (x629 x860))))
(assert (= (x45 x1161) (ite (= x262 x1161) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x189 x1161))))
(assert (= x1504 (=> (and (= x292 x131) (= (<= x467 x250) x131) (= x467 x1269)) x292)))
(assert (= (x638 x545) (ite (and x123 (not x1557) x263) (x1487 x545) (x737 x545))))
(assert (= (ite (and (not x384) x592 x503 (not x513)) (x831 x1395) (ite (and (not x384) x503 (not x592)) (x546 x1395) (ite (and x503 x384) (x546 x1395) (x66 x1395)))) (x223 x1395)))
(assert (x1153 x1532))
(assert (x1134 x963))
(assert (= (and x1200 x991) x127))
(assert (x1153 x1484))
(assert (= (x1457 x945) (ite (= x526 x945) x1471 (x920 x945))))
(assert (= (x231 (x661 87118632)) 87118632))
(assert (=> (>= 10000 x828) (= (x629 x828) (x661 x828))))
(assert (x1134 x351))
(assert (x1153 x422))
(assert (x1153 x1129))
(assert (= x898 (=> (and (= (> x733 0) x1121) (= (x322 (- x929 1)) x733)) (and (=> x1121 x634) (=> (not x1121) x537)))))
(assert (x1153 x800))
(assert (= x681 (x231 (x629 x681))))
(assert (x1153 x873))
(assert (x1153 x1226))
(assert (x678 x225))
(assert (=> (>= 10000 x1129) (= (x661 x1129) (x629 x1129))))
(assert (x1153 x163))
(assert (=> (<= x1428 10000) (= (x661 x1428) (x629 x1428))))
(assert (= (x45 x379) (ite (= x379 x262) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x189 x379))))
(assert (x1153 x207))
(assert (x1153 x985))
(assert (x1153 x97))
(assert (x1153 x301))
(assert (x1153 x826))
(assert (x1153 x886))
(assert (= x1534 (x231 (x629 x1534))))
(assert (x678 x121))
(assert (x1153 x868))
(assert (x1134 x1328))
(assert (x1153 x25))
(assert (= x9 x591))
(assert (= (x429 x1017) (ite (= x1017 x525) x1097 (x508 x1017))))
(assert (x1153 x262))
(assert (= (x1579 x1411) (ite (= x651 x1411) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x1411))))
(assert (x1153 x310))
(assert (= (x700 x1472) (ite (and x387 x503) (x1023 x1472) (x1310 x1472))))
(assert (= (ite (and x1281 x1077) (x1172 x1325) (x215 x1325)) (x1437 x1325)))
(assert (= x1471 (x1457 x526)))
(assert (= x782 (x231 (x629 x782))))
(assert (x1153 x750))
(assert (x1153 x981))
(assert (x1134 x1287))
(assert (= (x904 x190) (ite (and x731 x1292) (x1195 x190) (ite (and x462 (not x731) x1292) (x1195 x190) (x405 x190)))))
(assert (= (=> (= 0 x1386) x540) x383))
(assert (x1153 x1104))
(assert (=> (<= x695 10000) (= (x661 x695) (x629 x695))))
(assert (= (x841 x1461) 0))
(assert (= (ite (= x935 x844) x903 (x946 x844)) (x1529 x844)))
(assert (x1153 x774))
(assert (=> (>= 10000 x362) (= (x629 x362) (x661 x362))))
(assert (x1153 x1314))
(assert (= (x231 (x629 x530)) x530))
(assert (= (x661 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x629 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (=> (<= x782 10000) (= (x629 x782) (x661 x782))))
(assert (= 0 (x841 x140)))
(assert (x1153 x436))
(assert (x1134 274184521717934524641157099916833587214))
(assert (= (and x1063 (not x245)) x1283))
(assert (x1153 x564))
(assert (= (ite (and x1292 x731) (x887 x460) (ite (and x462 x1292 (not x731)) (x210 x460) (x459 x460))) (x1156 x460)))
(assert (x1153 x1038))
(assert (x1153 x917))
(assert (x1153 x1194))
(assert (= (x1315 x762) (ite (= x762 x62) x811 (x429 x762))))
(assert (x1153 x104))
(assert (x1134 x681))
(assert (x1153 x1519))
(assert (x1134 x1164))
(assert (=> (>= 10000 x767) (= (x661 x767) (x629 x767))))
(assert (x1153 x775))
(assert (x1153 x572))
(assert (=> (<= x681 10000) (= (x629 x681) (x661 x681))))
(assert (= (=> (= x1410 (< 0 x805)) (and (=> (not x1410) x181) (=> x1410 x1442))) x838))
(assert (= x765 (x231 (x629 x765))))
(assert (x1153 x403))
(assert (x1153 x268))
(assert (= (x231 (x629 x1169)) x1169))
(assert (= x882 (=> (and (= x504 x1519) (>= 1461501637330902918203684832716283019655932542975 x1346) (= x936 2939843472) (<= x1519 1461501637330902918203684832716283019655932542975) (= false x14) (= 5 x717) x1352 x1246 (<= x25 1461501637330902918203684832716283019655932542975) (<= x1222 1461501637330902918203684832716283019655932542975) (<= 0 x489) (= (< 0 (x51 (x629 274184521717934524641157099916833587206))) x1352) (<= 0 x1346) (= x489 (x391 (x629 274184521717934524641157099916833587218))) (>= x1578 0) (= x25 x1164) (= x1130 x800) (<= x1578 1461501637330902918203684832716283019655932542975) (= (< 0 (x51 (x629 274184521717934524641157099916833587214))) x1246) (= x1222 x102) (= false x155) (>= x1222 0) x1157 (<= 0 x1519) (= x38 (x391 (x629 274184521717934524641157099916833587206))) (= x1157 (> (x51 (x629 274184521717934524641157099916833587218)) 0)) (>= x1114 0) (<= 0 x38) (= false x1244) (= (x391 (x629 274184521717934524641157099916833587214)) x1114) (= x670 false) (<= 0 x25)) x99)))
(assert (x1134 x679))
(assert (x1153 x973))
(assert (= x490 (x231 (x629 x490))))
(assert (x1153 x1360))
(assert (= x963 (x231 (x629 x963))))
(assert (=> (>= 10000 x374) (= (x661 x374) (x629 x374))))
(assert (=> (<= x1422 10000) (= (x629 x1422) (x661 x1422))))
(assert (= x956 x623))
(assert (x1134 x422))
(assert (x1134 x431))
(assert (x1153 x648))
(assert (x1153 x1394))
(assert (x1153 x1522))
(assert (= x739 (or (and x957 x1178) (and (not x722) x1439) (and x1570 (not x1136)))))
(assert (x1153 x566))
(assert (= (x231 (x629 x1440)) x1440))
(assert (x1134 x1150))
(assert (= (x841 x994) 0))
(assert (x1134 x765))
(assert (x1153 x126))
(assert (= x9 x613))
(assert (x1153 x1206))
(assert (x1153 x258))
(assert (x1153 x430))
(assert (x888 x552 x341))
(assert (x1153 x142))
(assert (=> (<= x23 10000) (= (x661 x23) (x629 x23))))
(assert (=> (<= x1445 10000) (= (x661 x1445) (x629 x1445))))
(assert (x1153 x1396))
(assert (= x99 (=> (and (= x1505 x865) (<= 0 x1505) (>= 1461501637330902918203684832716283019655932542975 x1164) (> x1213 0) (= x1213 (x51 (x629 274184521717934524641157099916833587206))) (= x734 (x1474 (x629 x1130) (x661 6) 0)) (= (x642 x1084) x1505) (< x269 2293535753) (not (= x269 2211524764)) (not (< x269 1968616202)) (= x1084 (x1474 (x629 x1164) x734 0)) (not (= 1986467848 x269)) (not (= x269 2061678023)) (<= x1505 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x269 911411945)) (not (= x269 1968616202)) (= x269 2258409472)) (=> (and (= x15 x865) (= x625 x25) (= x800 x966) (= x1578 x1169)) x666))))
(assert (x1153 x1322))
(assert (x1134 274184521717934524641157099916833587218))
(assert (= x1435 (or (and x843 x1327) (and x1045 x5))))
(assert (= x958 (and x263 x123)))
(assert (x1153 x196))
(assert (x1153 x1192))
(assert (x1134 x1428))
(assert (= (x841 x844) 0))
(assert (= x471 (x231 (x629 x471))))
(assert (= (x231 (x629 x1506)) x1506))
(assert (= (ite (= x1193 x526) x1471 (x920 x1193)) (x1457 x1193)))
(assert (x1153 x247))
(assert (= (x231 (x661 468353030)) 468353030))
(assert (= x625 (x231 (x629 x625))))
(assert (x1153 x891))
(assert (x1153 x1466))
(assert (x1153 x339))
(assert (x1134 x286))
(assert (= x1271 (x231 (x629 x1271))))
(assert (= x1333 (x231 (x629 x1333))))
(assert (x1153 x167))
(assert (= (x429 x118) (ite (= x118 x525) x1097 (x508 x118))))
(assert (= (ite (and x1077 x1281) (x1172 x594) (x215 x594)) (x1437 x594)))
(assert (= (x729 x844) (ite (= x994 x844) x1221 (x1457 x844))))
(assert (=> (<= x733 10000) (= (x629 x733) (x661 x733))))
(assert (x1153 x1105))
(assert (=> (>= 10000 x1051) (= (x661 x1051) (x629 x1051))))
(assert (=> (>= 10000 x1440) (= (x629 x1440) (x661 x1440))))
(assert (= (ite (= x525 x1161) x1097 (x508 x1161)) (x429 x1161)))
(assert (= (ite (and (not x384) x592 x503 (not x513)) (x1315 x1325) (ite (and x503 (not x592) (not x384)) (x429 x1325) (ite (and x384 x503) (x429 x1325) (x1223 x1325)))) (x1414 x1325)))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x211) (= 2743102681 x1105) (not (= 2690754053 x1105)) (not (> 2690754053 x1105)) (= (x1474 (x629 x211) x19 0) x1485) (not (> 2293535753 x1105)) (> x1242 0) (= x783 x54) (= x783 (x928 x1485)) (= (x1474 (x629 x1059) (x661 3) 0) x208) (< x1105 2960351575) (>= 1461501637330902918203684832716283019655932542975 x1150) (>= x783 0) (= x1242 (x51 (x629 274184521717934524641157099916833587206))) (<= x783 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1474 (x629 x1150) x208 0) x19)) (=> (and (= x25 x578) (= (<= x557 x346) x206) (= x557 x54) (= x800 x1560)) x1024)) x67))
(assert (= 0 (x841 x56)))
(assert (= (x629 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x661 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1153 x788))
(assert (x678 x881))
(assert (= (x1457 x762) (ite (= x526 x762) x1471 (x920 x762))))
(assert (x1153 x704))
(assert (= (x1414 x945) (ite (and (not x513) (not x384) x503 x592) (x1315 x945) (ite (and (not x592) x503 (not x384)) (x429 x945) (ite (and x503 x384) (x429 x945) (x1223 x945))))))
(assert (= (x1315 x1193) (ite (= x1193 x62) x811 (x429 x1193))))
(assert (= x485 (=> (= (= 274184521717934524641157099916833587214 x301) x1135) (and (=> (not x1135) x252) (=> (and (= x1179 2835717307) (= x892 274184521717934524641157099916833587206) (< 0 x1188) (not (= 1889567281 x1179)) (= x1122 x1197) (= x333 (or (and (< x960 64) (= (<= x960 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x960))) (= (x51 (x629 274184521717934524641157099916833587214)) x1188) (not x386) (= x386 (>= (+ x371 x663) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1503 x1139) x663) (= x350 x1103) (= x426 (x1474 (x629 274184521717934524641157099916833587206) (x661 1) 0)) x1135 (= x1103 68) (= x1197 x730) (= x64 (x1140 x1370)) (= (x322 (- x64 x1256)) x158) (not (= x1179 2514000705)) (= (+ x227 x619) x88) (not x333) (= x619 x663) (not (> 4 x1103)) (= x1256 x165) (not x111) (not x147) (>= x663 0) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x632) (>= 1461501637330902918203684832716283019655932542975 x1197) (< (+ x663 x371) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x238 1) (= x1260 32) (= x371 x227) (= (> x371 x64) x147) (<= x663 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x322 (- x1103 4)) x960) (= x1139 (x1474 (x629 x1197) (x661 1) 0)) (= x1285 274184521717934524641157099916833587206) (not (> 649617121 x1179)) (<= 0 x64) (= (< x64 x1256) x111) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x64) (not (= x1179 649617121)) (= x371 x1256) (= x951 (x1474 (x629 x1197) (x661 1) 0)) (= (x1474 (x629 274184521717934524641157099916833587206) (x661 1) 0) x1370) (= x1336 x419) (not (= x1179 826074471))) x1034)))))
(assert (x1153 x654))
(assert (x1134 x1386))
(assert (=> (<= x741 10000) (= (x661 x741) (x629 x741))))
(assert (x1003 x397 x723 x1167 x1549))
(assert (=> (>= 10000 x1429) (= (x629 x1429) (x661 x1429))))
(assert (=> (<= x232 10000) (= (x661 x232) (x629 x232))))
(assert (x1153 x389))
(assert (= (ite (= x545 x62) x811 (x429 x545)) (x1315 x545)))
(assert (x1153 x1150))
(assert (x1153 x286))
(assert (x1134 x621))
(assert (x1153 x289))
(assert (=> (>= 10000 x511) (= (x629 x511) (x661 x511))))
(assert (x1153 x241))
(assert (=> (>= 10000 x497) (= (x661 x497) (x629 x497))))
(assert (= x342 x1423))
(assert (= x601 (or x950 x913)))
(assert (= (ite (= x62 x994) x811 (x429 x994)) (x1315 x994)))
(assert (= (x231 (x661 2743102681)) 2743102681))
(assert (x1153 x1401))
(assert (= x211 (x231 (x629 x211))))
(assert (x1153 x878))
(assert (= x1089 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x305) (not (> 2690754053 x124)) (>= 1461501637330902918203684832716283019655932542975 x1445) (= (x51 (x629 274184521717934524641157099916833587206)) x825) (= x305 (x1195 x793)) (not (= 2690754053 x124)) (= (x1474 (x629 x1307) x1086 0) x793) (<= x1307 1461501637330902918203684832716283019655932542975) (= 2743102681 x124) (not (> 2293535753 x124)) (<= 0 x305) (< 0 x825) (= x1086 (x1474 (x629 x1445) x396 0)) (> 2960351575 x124) (= x396 (x1474 (x629 x40) (x661 3) 0)) (= x305 x1149)) (=> (and (= x25 x458) (= x800 x133) (= x1149 x364) (= x959 (>= x167 x364))) x284))))
(assert (= (x1457 x594) (ite (= x594 x526) x1471 (x920 x594))))
(assert (=> (>= 10000 x929) (= (x629 x929) (x661 x929))))
(assert (x1153 x35))
(assert (x1153 x952))
(assert (x1153 x43))
(assert (= (x638 x1349) (ite (and x263 (not x1557) x123) (x1487 x1349) (x737 x1349))))
(assert (x1153 x296))
(assert (x1153 x466))
(assert (= (x835 x1392) (ite (= x1392 x570) x1294 (x223 x1392))))
(assert (= (ite (= x1017 x302) x242 (x1579 x1017)) (x381 x1017)))
(assert (x1153 x892))
(assert (x1153 x323))
(assert (x1134 x593))
(assert (x1153 x1453))
(assert (x1153 x587))
(assert (=> (<= x296 10000) (= (x661 x296) (x629 x296))))
(assert (= 2418364589 (x231 (x661 2418364589))))
(assert (= (ite (= x1325 x651) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x1325)) (x1579 x1325)))
(assert (x1134 x145))
(assert (x1153 x1525))
(assert (= (x902 x1375) (ite (and x958 x1203) (x1082 x1375) (x1263 x1375))))
(assert (x1153 x1240))
(assert (x1134 x1558))
(assert (x1134 x1368))
(assert (= x40 (x231 (x629 x40))))
(assert (x1153 x853))
(assert (= (x857 x844) (ite (and (not x182) x394 x930) (x487 x844) (x352 x844))))
(assert (x1153 x1096))
(assert (= (ite (= x488 x545) x1118 (x820 x545)) (x1317 x545)))
(assert (= (x820 x1375) (ite (= x1404 x1375) x724 (x381 x1375))))
(assert (x1134 x893))
(assert (x1153 x1012))
(assert (x1153 x885))
(assert (= (x223 x192) (ite (and (not x513) x592 x503 (not x384)) (x831 x192) (ite (and x503 (not x384) (not x592)) (x546 x192) (ite (and x384 x503) (x546 x192) (x66 x192))))))
(assert (x1153 x1161))
(assert (x1153 x139))
(assert (x1153 x725))
(assert (= (x1529 x320) (ite (= x320 x935) x903 (x946 x320))))
(assert (x1134 x1091))
(assert (= (ite (and x503 x387) (x899 x11) (x609 x11)) (x274 x11)))
(assert (=> (<= x359 10000) (= (x661 x359) (x629 x359))))
(assert (= (x231 (x661 2532887486)) 2532887486))
(assert (x1134 x385))
(assert (=> (>= 10000 x621) (= (x661 x621) (x629 x621))))
(assert (x1134 x1169))
(assert (x1153 x314))
(assert (= (x231 (x629 x1441)) x1441))
(assert (=> (>= 10000 x323) (= (x661 x323) (x629 x323))))
(assert (=> (>= 10000 x625) (= (x661 x625) (x629 x625))))
(assert (x1153 x233))
(assert (x1153 x385))
(assert (x1153 x1054))
(assert (= x503 x1470))
(assert (x1153 x617))
(assert (=> (<= x861 10000) (= (x661 x861) (x629 x861))))
(assert (x1153 x1578))
(assert (x1153 x242))
(assert (= (ite (= x302 x937) x242 (x1579 x937)) (x381 x937)))
(assert (x1134 x567))
(assert (x1153 x970))
(assert (x1134 x1068))
(assert (= x870 (x231 (x629 x870))))
(assert (= (x1172 x118) (ite (= x118 x1375) x788 (x404 x118))))
(assert (=> (<= x142 10000) (= (x661 x142) (x629 x142))))
(assert (= (x661 69947311) (x629 69947311)))
(assert (x1153 x179))
(assert (x1153 x199))
(assert (x1153 x33))
(assert (=> (>= 10000 x1126) (= (x661 x1126) (x629 x1126))))
(assert (x1153 x128))
(assert (x1153 x1505))
(assert (= (ite (and (not x384) (not x513) x592 x503) (x1315 x56) (ite (and x503 (not x384) (not x592)) (x429 x56) (ite (and x384 x503) (x429 x56) (x1223 x56)))) (x1414 x56)))
(assert (= x771 (and (not x1135) x1265)))
(assert (= (ite (= x651 x118) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x118)) (x1579 x118)))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x231 (x661 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (= (=> (and (= x1243 (< x214 x805)) (not (= x1255 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x805 (x927 (+ x929 1)))) (and (=> (not x1243) x756) (=> (and x1243 (= x289 x1411)) x604))) x652))
(assert (x1153 x1256))
(assert (=> (>= 10000 x58) (= (x629 x58) (x661 x58))))
(assert (x1134 x458))
(assert (= x1091 (x231 (x629 x1091))))
(assert (=> (>= 10000 x199) (= (x629 x199) (x661 x199))))
(assert (=> (>= 10000 x679) (= (x661 x679) (x629 x679))))
(assert (x1134 x942))
(assert (x1153 x542))
(assert (x1134 x142))
(assert (x1153 x1518))
(assert (= (ite (= x762 x994) x1221 (x1457 x762)) (x729 x762)))
(assert (x1153 x1002))
(assert (= 0 (x841 224)))
(assert (= 0 (x841 x1017)))
(assert (= (ite (= x994 x1375) x788 (x404 x994)) (x1172 x994)))
(assert (= (x820 x937) (ite (= x1404 x937) x724 (x381 x937))))
(assert (x1153 x1026))
(assert (x1153 x1280))
(assert (=> (<= x1104 10000) (= (x629 x1104) (x661 x1104))))
(assert (= (ite (= x1349 x1375) x788 (x404 x1349)) (x1172 x1349)))
(assert (= x1287 (x231 (x629 x1287))))
(assert (x1134 x1104))
(assert (= (x45 x320) (ite (= x320 x262) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x189 x320))))
(assert (x1153 x811))
(assert (x1134 x229))
(assert (= (ite (and x731 x1292) (x887 x514) (ite (and x1292 (not x731) x462) (x210 x514) (x459 x514))) (x1156 x514)))
(assert (x1153 x402))
(assert (= (ite (= x994 x945) x1221 (x1457 x945)) (x729 x945)))
(assert (x1153 x705))
(assert (= x1177 (x231 (x629 x1177))))
(assert (= (ite (= x1321 x994) x1221 (x1457 x1321)) (x729 x1321)))
(assert (= (ite (= x1325 x526) x1471 (x920 x1325)) (x1457 x1325)))
(assert (= x1422 (x231 (x629 x1422))))
(assert (=> (<= x490 10000) (= (x629 x490) (x661 x490))))
(assert (= (or (and x1132 x772) x601) x1292))
(assert (x1134 x211))
(assert (x1153 x1321))
(assert (x1153 x1088))
(assert (= (ite (and x1281 x1077) (x1172 x320) (x215 x320)) (x1437 x320)))
(assert (x1134 x232))
(assert (x1153 x560))
(assert (x1153 x158))
(assert (= (x629 2061678023) (x661 2061678023)))
(assert (= (x231 (x629 x329)) x329))
(assert (=> (<= x1506 10000) (= (x629 x1506) (x661 x1506))))
(assert (x1153 x1404))
(assert (= (x820 x762) (ite (= x762 x1404) x724 (x381 x762))))
(assert (x1153 x276))
(assert (x1134 x120))
(assert (= (or x1214 (and (not x568) x1423)) x1431))
(assert (x1153 x312))
(assert (x1134 x85))
(assert (x1153 x226))
(assert (= (and x202 x1121) x761))
(assert (= (x661 1000000000000000000) (x629 1000000000000000000)))
(assert (=> (>= 10000 x455) (= (x661 x455) (x629 x455))))
(assert (= (x231 (x629 x1143)) x1143))
(assert (x1134 x1026))
(assert (= (x223 x366) (ite (and (not x513) x503 (not x384) x592) (x831 x366) (ite (and x503 (not x592) (not x384)) (x546 x366) (ite (and x503 x384) (x546 x366) (x66 x366))))))
(assert (= (x629 2868243304) (x661 2868243304)))
(assert (=> (<= x1059 10000) (= (x661 x1059) (x629 x1059))))
(assert (x1134 x1560))
(assert (= x503 (or (and (not x1494) x1183) x1117)))
(assert (= (x231 (x629 x966)) x966))
(assert (x1153 x1188))
(assert (x1153 x919))
(assert (= (=> (and (= (= x248 0) x300) (= x46 (x1474 (x629 x1368) x876 0)) (= (x785 1461501637330902918203684832716283019655932542975 x390) x1368) (= (x1156 x46) x248) (= (x1474 (x629 x782) (x661 7) 0) x1025) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x248) (= x874 (x785 1461501637330902918203684832716283019655932542975 x881)) (= (x1474 (x629 x874) x1025 0) x876) (>= x248 0)) (and (=> (and (not x300) (= x454 x782)) x754) (=> (and (= x953 (< 0 x995)) (= x995 (x322 (- x782 1))) x300 (not x953)) x181))) x1090))
(assert (x1153 x1387))
(assert (x1153 x1571))
(assert (= (x629 649617121) (x661 649617121)))
(assert (= (x661 115792089237316195423570985008687907853269984665640564039457) (x629 115792089237316195423570985008687907853269984665640564039457)))
(assert (= (ite (= x1375 x62) x788 (x404 x62)) (x1172 x62)))
(assert (= (=> (= x1465 0) x939) x537))
(assert (x1153 x1446))
(assert (x1153 x273))
(assert (= (x841 160) 0))
(assert (= x965 (and x655 x1486)))
(assert (= (x231 (x629 x1022)) x1022))
(assert (x1134 x1333))
(assert (x1153 x1454))
(assert (x1153 x114))
(assert (x1153 x336))
(assert (= 2960351575 (x231 (x661 2960351575))))
(assert (= (x1437 x56) (ite (and x1281 x1077) (x1172 x56) (x215 x56))))
(assert (= (ite (and (not x384) (not x513) x503 x592) (x1315 x1193) (ite (and (not x384) (not x592) x503) (x429 x1193) (ite (and x503 x384) (x429 x1193) (x1223 x1193)))) (x1414 x1193)))
(assert (= x1097 (x429 x525)))
(assert (= 274184521717934524641157099916833587214 (x231 (x661 274184521717934524641157099916833587214))))
(assert (= (ite (and x503 (not x384) x592 (not x513)) (x1315 x937) (ite (and (not x592) x503 (not x384)) (x429 x937) (ite (and x384 x503) (x429 x937) (x1223 x937)))) (x1414 x937)))
(assert (= (x841 x1161) 0))
(assert (x1153 x418))
(assert (x1153 x1271))
(assert (= (x1172 x1161) (ite (= x1375 x1161) x788 (x404 x1161))))
(assert (= x1368 (x231 (x629 x1368))))
(assert (= (x629 911411945) (x661 911411945)))
(assert (x1153 x682))
(assert (x1153 x966))
(assert (x1153 x224))
(assert (= x415 (x231 (x629 x415))))
(assert (= x1058 x583))
(assert (x1153 x214))
(assert (= (x1414 x844) (ite (and x503 (not x384) (not x513) x592) (x1315 x844) (ite (and x503 (not x592) (not x384)) (x429 x844) (ite (and x384 x503) (x429 x844) (x1223 x844))))))
(assert (= 274184521717934524641157099916833587206 (x231 (x629 274184521717934524641157099916833587206))))
(assert (x1134 x687))
(assert (x1153 x343))
(assert (x1153 x317))
(assert (= (x820 x945) (ite (= x1404 x945) x724 (x381 x945))))
(assert (= (ite (= x844 x302) x242 (x1579 x844)) (x381 x844)))
(assert (= x956 x1565))
(assert (x1153 x1125))
(assert (x888 x121 x1567))
(assert (x1134 x1305))
(assert (= (+ 1 (x231 x1189)) (x231 (x1477 x1189 1))))
(assert (x1153 x1464))
(assert (x1134 x81))
(assert (= (x1487 x945) (ite (and x263 x123 x465 x1013 x1151 (not x1133)) (x1317 x945) (ite (and x1013 x1151 (not x465) x263 x123) (x820 x945) (ite (and x1013 x123 (not x1151) x263) (x381 x945) (ite (and (not x1013) x123 x263) (x1579 x945) (x872 x945)))))))
(assert (x1153 x362))
(assert (x1134 x966))
(assert (= 0 (x841 x320)))
(assert (x1153 x448))
(assert (x1153 x504))
(assert (= (and x728 x581) x1356))
(assert (x1153 x1275))
(assert (= 0 (x841 x118)))
(assert (= x633 x1355))
(assert (= (x231 (x629 x511)) x511))
(assert (= (x902 x320) (ite (and x1203 x958) (x1082 x320) (x1263 x320))))
(assert (x1153 x1558))
(assert (x1153 x1261))
(assert (= (x1414 x1461) (ite (and (not x513) (not x384) x592 x503) (x1315 x1461) (ite (and (not x384) (not x592) x503) (x429 x1461) (ite (and x384 x503) (x429 x1461) (x1223 x1461))))))
(assert (= (x661 2258409472) (x629 2258409472)))
(assert (x1153 x302))
(assert (=> (>= 10000 x599) (= (x629 x599) (x661 x599))))
(assert (= x497 (x231 (x629 x497))))
(assert (x1153 x1334))
(assert (x1153 x1560))
(assert (x1134 x49))
(assert (x1153 x1305))
(assert (= x455 (x231 (x629 x455))))
(assert (x1153 x119))
(assert (x1153 x225))
(assert (x1153 x1145))
(assert (= (x638 x1161) (ite (and x123 x263 (not x1557)) (x1487 x1161) (x737 x1161))))
(assert (= (ite (and x394 x157 x1399 (not x90) x1468 x930) (x1497 x844) (ite (and x394 x157 (not x1468) x1399 x930) (x1529 x844) (ite (and (not x1399) x930 x394 x157) (x946 x844) (ite (and x394 (not x157) x930) (x45 x844) (x573 x844))))) (x487 x844)))
(assert (=> (<= x1398 10000) (= (x629 x1398) (x661 x1398))))
(assert (x1134 x359))
(assert (= x1150 (x231 (x629 x1150))))
(assert (x1153 x1376))
(assert (= x1034 (=> (and (not (= x238 0)) (= x98 (x827 (x629 274184521717934524641157099916833587206))) (= x1364 (= 0 x1260)) (or (and (= x1274 (x785 115792089237316195423570985008687907853269984665640564039457584007913129639904 x397)) (= (x927 (+ 96 x1028)) x299) (= x937 x1360) (not x1364) (= x1350 x379) (= (x927 (+ 63 x1260)) x397) (= (x927 (+ x1360 x1274)) x1350)) (and (= 96 x937) x1364 (= x1360 x379))) (= x408 (> x344 0)) (= x344 (x923 x937)) (= (x1076 (x629 x301)) x80) x1483 (or (not x408) (and (= (not x1101) x1095) (= x512 (ite x1095 1 0)) (= x662 (x923 x937)) (= (x923 x1017) x648) (= (x927 (+ 32 x937)) x1017) (not (or (and (= true (<= x662 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x662)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x662))) (= x1101 (= x648 0)) (= x512 x648) (> x648 0) x408)) (= x1483 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x827 (x629 274184521717934524641157099916833587206))))) x26)))
(assert (= (x231 (x629 x683)) x683))
(assert (= x1331 (x231 (x629 x1331))))
(assert (x1153 x963))
(assert (= (x831 x1392) (ite (= x1343 x1392) x833 (x546 x1392))))
(assert (= (x231 (x629 x1266)) x1266))
(assert (= (x231 (x629 x93)) x93))
(assert (x1153 x1254))
(assert (= (ite (= x1458 x945) x847 (x1529 x945)) (x1497 x945)))
(assert (=> (<= x229 10000) (= (x629 x229) (x661 x229))))
(assert (= x855 (x231 (x629 x855))))
(assert (= (=> (= x1342 (> x805 0)) (and (=> (not x1342) x421) (=> x1342 x821))) x173))
(assert (x1153 x213))
(assert (x1134 x929))
(assert (=> (<= x1287 10000) (= (x629 x1287) (x661 x1287))))
(assert (x1153 x765))
(assert (x1153 x417))
(assert (= (x700 x786) (ite (and x503 x387) (x1023 x786) (x1310 x786))))
(assert (= (x231 (x629 x656)) x656))
(assert (= (x231 (x629 x207)) x207))
(assert (=> (<= x473 10000) (= (x661 x473) (x629 x473))))
(assert (= (=> (and (or (and (= x569 (x785 1461501637330902918203684832716283019655932542975 x390)) (= (x785 1461501637330902918203684832716283019655932542975 x881) x199) (= (x1474 (x629 x199) x533 0) x716) x731 (= x588 (x1474 (x629 x569) x716 0)) (= x533 (x1474 (x629 x929) (x661 7) 0)) (= x677 x1302)) (and (= x1314 (x132 x690)) (= (x1474 (x629 x579) x1553 0) x554) (not x731) (= (= x78 0) x462) (<= 0 x43) (<= 0 x1314) (= x596 (x927 (+ x677 32))) (or (and (= x78 0) (not x808)) (and (= (x464 x596) x1099) x808 (or (and x1046 (= x1047 (x464 x596)) (= x128 x1047)) (and (not x1046) (= x916 x128))) (= (= x438 0) x1308) (or (and (= x241 (x322 (- x128 x438))) (not (< x128 x438)) (not x1308) (= x78 x434) (= (ite (< x241 604800) x241 604800) x434) (= x781 604800)) (and (= x403 (x322 (- x128 x193))) (= (x464 x677) x193) x1308 (= x78 x403) (not (> x193 x128)))) (= x1046 (< x1099 x916)))) (<= 0 x438) (= (x1477 x690 1) x1406) (= (x1474 (x629 x929) (x661 7) 0) x1553) (= x43 (x1062 x1406)) (= (x785 1461501637330902918203684832716283019655932542975 x390) x1440) (or (and (= x674 (x1474 (x629 x929) (x661 7) 0)) (= x1302 x618) x462 (= (x1474 (x629 x204) x674 0) x688) (= (x785 1461501637330902918203684832716283019655932542975 x390) x213) (= x1201 (x1474 (x629 x213) x688 0)) (= x204 (x785 1461501637330902918203684832716283019655932542975 x881))) (and (= (x785 1461501637330902918203684832716283019655932542975 x881) x787) (= x246 x750) (= x353 (x1474 (x629 x929) (x661 7) 0)) (= (x1474 (x629 x243) x605 0) x319) (= x861 (x785 1461501637330902918203684832716283019655932542975 x881)) (= (* x1420 x78) x246) (= x1248 (x1474 (x629 x530) x1556 0)) (= (x1474 (x629 x929) (x661 3) 0) x697) (< (* x78 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x530 (x785 1461501637330902918203684832716283019655932542975 x390)) (= (x1474 (x629 x787) x697 0) x1556) (not x462) (= x243 (x785 1461501637330902918203684832716283019655932542975 x390)) (= (x1474 (x629 x861) x353 0) x605) (= x1302 x618))) (= (> x1387 x438) x808) (<= x438 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x43) (= x1387 (x464 x596)) (= (x1474 (x629 x1440) x554 0) x1304) (= x579 (x785 1461501637330902918203684832716283019655932542975 x881)) (= (x1474 (x629 x929) (x661 1) 0) x690) (= (x477 x1304) x438) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1314) (= x618 (x927 (+ x677 64))))) (= (= x964 0) x735) (= x731 (= 0 x1420)) (or (and (= (x785 1461501637330902918203684832716283019655932542975 x881) x767) (= x665 (x1474 (x629 x767) x117 0)) (= x117 (x1474 (x629 x929) (x661 9) 0)) (= x1048 (x1474 (x629 x431) x665 0)) (= (x785 1461501637330902918203684832716283019655932542975 x390) x431) (not x735)) x735)) x449) x1112))
(assert (x1153 x595))
(assert (x1134 x871))
(assert (x1153 x1365))
(assert (x1153 x369))
(assert (= (ite (= x525 x1193) x1097 (x508 x1193)) (x429 x1193)))
(assert (= x431 (x231 (x629 x431))))
(assert (= (x831 x192) (ite (= x192 x1343) x833 (x546 x192))))
(assert (= (=> (and (= (x51 (x629 274184521717934524641157099916833587206)) x1085) (= (x1474 (x629 x747) (x661 6) 0) x630) (< 0 x1085) (= 2258409472 x407) (> 2293535753 x407) (not (> 1968616202 x407)) (= (x1474 (x629 x368) x630 0) x1335) (= x932 (x794 x1335)) (not (= 1968616202 x407)) (<= x368 1461501637330902918203684832716283019655932542975) (= x402 x932) (not (= 1986467848 x407)) (<= 0 x932) (not (> 911411945 x407)) (not (= x407 2061678023)) (<= x932 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2211524764 x407))) (=> (and (= x402 x1032) (= x924 x800) (= x25 x85) (= x1578 x1422)) x1295)) x505))
(assert (x1134 x1175))
(assert (=> (>= 10000 x1433) (= (x629 x1433) (x661 x1433))))
(assert (= (x231 (x629 x351)) x351))
(assert (x1153 x489))
(assert (x1134 x758))
(assert (x1153 x964))
(assert (= (ite (= x320 x526) x1471 (x920 x320)) (x1457 x320)))
(assert (= x243 (x231 (x629 x243))))
(assert (x1134 x962))
(assert (= (ite (and (not x513) x592 x503 (not x384)) (x1315 x118) (ite (and (not x384) (not x592) x503) (x429 x118) (ite (and x384 x503) (x429 x118) (x1223 x118)))) (x1414 x118)))
(assert (= 2514000705 (x231 (x661 2514000705))))
(assert (= x334 x915))
(assert (x1153 x348))
(assert (= (x629 274184521717934524641157099916833587214) (x661 274184521717934524641157099916833587214)))
(assert (= (x231 (x629 x1319)) x1319))
(assert (= (x1315 x844) (ite (= x844 x62) x811 (x429 x844))))
(assert (x1134 x329))
(assert (= (x231 (x661 2835717307)) 2835717307))
(assert (x1134 x1093))
(assert (x1134 x415))
(assert (x1153 x1197))
(assert (= x115 (or (and (not x263) x123) x1435 (and x394 (not x930)))))
(assert (= (x1457 x1321) (ite (= x526 x1321) x1471 (x920 x1321))))
(assert (= (or (and x300 x612) (and (not x1410) x1283) (and x127 (not x257))) x884))
(assert (x1153 x941))
(assert (x678 x1158))
(assert (= (x231 (x629 x126)) x126))
(assert (= 0 (x841 x1193)))
(assert (= (x946 x945) (ite (= x654 x945) x1466 (x45 x945))))
(assert (x1153 x1581))
(assert (x1153 x518))
(assert (= (x946 x762) (ite (= x654 x762) x1466 (x45 x762))))
(assert (= x536 (x231 (x629 x536))))
(assert (=> (<= x807 10000) (= (x629 x807) (x661 x807))))
(assert (= (x429 x545) (ite (= x545 x525) x1097 (x508 x545))))
(assert (=> (>= 10000 x329) (= (x661 x329) (x629 x329))))
(assert (=> (<= x243 10000) (= (x661 x243) (x629 x243))))
(assert (= x1530 (and x643 x1356)))
(assert (= (x638 x945) (ite (and x263 x123 (not x1557)) (x1487 x945) (x737 x945))))
(assert (= (ite (= x1404 x545) x724 (x381 x545)) (x820 x545)))
(assert (= x567 (x231 (x629 x567))))
(assert (= (ite (= x1193 x651) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x1193)) (x1579 x1193)))
(assert (x1153 x463))
(assert (=> (<= x1522 10000) (= (x629 x1522) (x661 x1522))))
(assert (x1134 x296))
(assert (x1153 x860))
(assert (x1153 x955))
(assert (x1153 x787))
(assert (x1153 x1526))
(assert (= (x231 (x629 x1261)) x1261))
(assert (x1134 x7))
(assert (x1153 x727))
(assert (x1153 x1))
(assert (x1153 x1452))
(assert (x1153 x954))
(assert (= (=> (and (= (x1474 (x629 x1428) (x661 6) 0) x290) (= x382 (x1474 (x629 x873) x290 0)) (= (= x1391 0) x675) (= x1391 (x274 x382)) (= x873 (x785 1461501637330902918203684832716283019655932542975 x881)) (<= x1391 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1391)) (and (=> (and x675 (= (> x1218 0) x1303) (= x1218 (x322 (- x1428 1))) (not x1303)) x421) (=> (and (not x675) (= x1428 x500)) x1425))) x720))
(assert (x1134 x797))
(assert (x1153 x1270))
(assert (x1134 x1060))
(assert (= (x661 2743102681) (x629 2743102681)))
(assert (x1153 x783))
(assert (x1134 x1129))
(assert (x1134 x575))
(assert (= (x231 (x661 2939843472)) 2939843472))
(assert (=> (<= x855 10000) (= (x629 x855) (x661 x855))))
(assert (x1153 x488))
(assert (= (x1437 x917) (ite (and x1281 x1077) (x1172 x917) (x215 x917))))
(assert (x1134 x855))
(assert (= x1355 x1115))
(assert (= (x231 (x629 x204)) x204))
(assert (x1153 x859))
(assert (x1153 x1266))
(assert (= (ite (= x994 x937) x1221 (x1457 x937)) (x729 x937)))
(assert (=> (<= x683 10000) (= (x629 x683) (x661 x683))))
(assert (x1153 x1287))
(assert (x1134 x828))
(assert (x1153 x71))
(assert (x1134 x767))
(assert (= x753 (x231 (x629 x753))))
(assert (= x1265 (and (not x1203) x958)))
(assert (= (ite (and (not x384) x592 x503 (not x513)) (x1315 x1349) (ite (and (not x384) x503 (not x592)) (x429 x1349) (ite (and x503 x384) (x429 x1349) (x1223 x1349)))) (x1414 x1349)))
(assert (x1153 x471))
(assert (x1134 x868))
(assert (=> (>= 10000 x614) (= (x629 x614) (x661 x614))))
(assert (=> (<= x578 10000) (= (x661 x578) (x629 x578))))
(assert (=> (>= 10000 x967) (= (x629 x967) (x661 x967))))
(assert (= 142201243 (x231 (x661 142201243))))
(assert (= (x629 2798343961) (x661 2798343961)))
(assert (= x232 (x231 (x629 x232))))
(assert (x1153 x500))
(assert (= (=> (and (= (x1474 (x629 x1022) x1540 0) x1574) (<= x1518 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 2960351575 x1569) (not (= x1569 2512682246)) (<= 0 x1518) (not (> 2293535753 x1569)) (not (= 2293535753 x1569)) (not (= 2418364589 x1569)) (= x1413 (x51 (x629 274184521717934524641157099916833587206))) (<= x1261 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1022) (= (x546 x1574) x1518) (= x1540 (x1474 (x629 x1296) x306 0)) (= x1358 x1518) (< x1569 2690754053) (<= x1296 1461501637330902918203684832716283019655932542975) (= x306 (x1474 (x629 x1261) x378 0)) (= x1569 2532887486) (> x1413 0) (= x378 (x1474 (x629 x1334) (x661 4) 0))) (=> (and (= x25 x536) (= x276 x800) (= x1093 x1578) (= x1358 x1510) (= (>= x1106 x1510) x760) (= (and x760 x1563) x27)) x1507)) x1267))
(assert (x1153 x1428))
(assert (x1153 x1162))
(assert (=> (>= 10000 x1525) (= (x629 x1525) (x661 x1525))))
(assert (x1153 x1383))
(assert (x1153 x1017))
(assert (x1153 x1163))
(assert (= (ite (= x1161 x994) x1221 (x1457 x1161)) (x729 x1161)))
(assert (x1153 x621))
(assert (= (x1529 x1349) (ite (= x1349 x935) x903 (x946 x1349))))
(assert (x1153 x1311))
(assert (= (x1579 x545) (ite (= x545 x651) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x545))))
(assert (x1153 x947))
(assert (=> (<= x1226 10000) (= (x661 x1226) (x629 x1226))))
(assert (= x814 x334))
(assert (x1134 x1059))
(assert (= (x231 (x629 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= (ite (= x651 x1375) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x1375)) (x1579 x1375)))
(assert (x1153 x1461))
(assert (=> (<= x963 10000) (= (x629 x963) (x661 x963))))
(assert (= (x820 x1325) (ite (= x1404 x1325) x724 (x381 x1325))))
(assert (= (x1457 x937) (ite (= x526 x937) x1471 (x920 x937))))
(assert (= x733 (x231 (x629 x733))))
(assert (= x1328 (x231 (x629 x1328))))
(assert (= x1291 x394))
(assert (= x867 x1542))
(assert (= (x1487 x762) (ite (and x1151 x123 x465 x263 x1013 (not x1133)) (x1317 x762) (ite (and x1013 x123 (not x465) x263 x1151) (x820 x762) (ite (and x263 x123 (not x1151) x1013) (x381 x762) (ite (and x263 x123 (not x1013)) (x1579 x762) (x872 x762)))))))
(assert (= (x231 (x629 x787)) x787))
(assert (= x1094 x1077))
(assert (x1153 x1417))
(assert (x1153 x374))
(assert (= (x231 (x629 x1093)) x1093))
(assert (= (x729 x1193) (ite (= x1193 x994) x1221 (x1457 x1193))))
(assert (x1134 x1506))
(assert (x1134 x74))
(assert (x1153 x344))
(assert (= (ite (= x945 x262) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x189 x945)) (x45 x945)))
(assert (x678 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1153 x1186))
(assert (= (x1437 x1161) (ite (and x1281 x1077) (x1172 x1161) (x215 x1161))))
(assert (= (x1579 x937) (ite (= x651 x937) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x937))))
(assert (x1153 x618))
(assert (x1134 x787))
(assert (= (x381 x1325) (ite (= x1325 x302) x242 (x1579 x1325))))
(assert (=> (>= 10000 x133) (= (x661 x133) (x629 x133))))
(assert (x1153 x797))
(assert (x1153 x1515))
(assert (= x692 (and x1045 (not x5))))
(assert (= (x1437 x1349) (ite (and x1077 x1281) (x1172 x1349) (x215 x1349))))
(assert (= (x841 x762) 0))
(assert (= (x231 (x629 x807)) x807))
(assert (= (ite (and x958 x1203) (x1082 x1161) (x1263 x1161)) (x902 x1161)))
(assert (x1153 x412))
(assert (= x1132 (and x1094 (not x732))))
(assert (x1153 x903))
(assert (x1566 x499 x18))
(assert (x1153 x191))
(assert (=> (>= 10000 x1305) (= (x629 x1305) (x661 x1305))))
(assert (x1153 x287))
(assert (x1153 x194))
(assert (= (ite (and x1281 x1077) (x1172 x118) (x215 x118)) (x1437 x118)))
(assert (x1153 x220))
(assert (x1153 x1093))
(assert (= (x231 (x629 x323)) x323))
(assert (x1153 x536))
(assert (=> (>= 10000 x1546) (= (x629 x1546) (x661 x1546))))
(assert (x1153 x1114))
(assert (x1134 x1266))
(assert (x1134 x1446))
(assert (= 0 (x841 x1321)))
(assert (=> (<= x234 10000) (= (x661 x234) (x629 x234))))
(assert (x1153 x143))
(assert (= 0 (x841 x937)))
(assert (x1153 x1539))
(assert (=> (<= x447 10000) (= (x629 x447) (x661 x447))))
(assert (x1134 x507))
(assert (x1134 x1440))
(assert (x1153 x1373))
(assert (x1153 x124))
(assert (= x562 (=> (and (= 2532887486 x268) (>= 1461501637330902918203684832716283019655932542975 x385) (= x1464 x1269) (= x931 (x51 (x629 274184521717934524641157099916833587206))) (= (x744 x366) x1464) (= (x1474 (x629 x385) x925 0) x440) (not (= 2418364589 x268)) (> 2690754053 x268) (= x925 (x1474 (x629 x1536) x112 0)) (= x112 (x1474 (x629 x753) (x661 4) 0)) (> 2960351575 x268) (= x366 (x1474 (x629 x1026) x440 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1464) (not (< x268 2293535753)) (not (= 2512682246 x268)) (>= 1461501637330902918203684832716283019655932542975 x1536) (< 0 x931) (<= x1026 1461501637330902918203684832716283019655932542975) (>= x1464 0) (not (= x268 2293535753))) x1504)))
(assert (x1153 x526))
(assert (x1153 x1179))
(assert (= (x904 x370) (ite (and x1292 x731) (x1195 x370) (ite (and x462 x1292 (not x731)) (x1195 x370) (x405 x370)))))
(assert (x1153 x862))
(assert (x1153 x631))
(assert (x1153 x316))
(assert (x1134 x328))
(assert (= x915 x1077))
(assert (= (x231 (x629 x747)) x747))
(assert (x1153 x1282))
(assert (= x284 (=> (and (>= x168 0) (< 0 x1383) (> 911411945 x934) (= (x1474 (x629 x133) (x661 10) 0) x79) (= (x829 x1067) x168) (= x168 x611) (= x1383 (x51 (x629 274184521717934524641157099916833587206))) (<= x168 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 69947311 x934) (<= x458 1461501637330902918203684832716283019655932542975) (< x934 468353030) (= (x1474 (x629 x458) x79 0) x1067) (< x934 2293535753)) (=> (and (= x1511 x611) (= x1578 x1525) (= x25 x871) (= x800 x473)) x482))))
(assert (=> (<= x1331 10000) (= (x661 x1331) (x629 x1331))))
(assert (x1153 x828))
(assert (x1153 x715))
(assert (= x895 x151))
(assert (= (ite (= x1375 x594) x788 (x404 x594)) (x1172 x594)))
(assert (x1153 x1242))
(assert (x1153 x1524))
(assert (x1153 x847))
(assert (x1134 x1143))
(assert (x1134 x447))
(assert (x1153 x415))
(assert (= 0 (x841 x1349)))
(assert (x1153 x1386))
(assert (x1153 x103))
(assert (=> (>= 10000 x1012) (= (x629 x1012) (x661 x1012))))
(assert (x1134 x236))
(assert (= (ite (and x843 x1327) (x1313 x844) (x1543 x844)) (x1035 x844)))
(assert (x1153 x1488))
(assert (= x939 (=> (and (= x272 (= x1465 0)) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x83) (= (x785 1461501637330902918203684832716283019655932542975 x390) x1305) (= x1420 x83) (not x272) (>= x83 0) (= x278 (x1474 (x629 x1305) x294 0)) (= (x1474 (x629 x1177) x30 0) x294) (= (x1474 (x629 x1465) (x661 9) 0) x30) (= (x361 x278) x83) (= x964 1) (= (x785 1461501637330902918203684832716283019655932542975 x881) x1177)) (and (= 0 x964) (= x1420 0) x272))) x1112)))
(assert (= x507 (x231 (x629 x507))))
(assert (= (ite (= x526 x118) x1471 (x920 x118)) (x1457 x118)))
(assert (x1153 x809))
(assert (= (ite (= x1017 x1375) x788 (x404 x1017)) (x1172 x1017)))
(assert (= (x1317 x1017) (ite (= x488 x1017) x1118 (x820 x1017))))
(assert (x1153 x1227))
(assert (x1153 x650))
(assert (x1153 x56))
(assert (x1153 x34))
(assert (= x251 (x231 (x629 x251))))
(assert (x1153 x933))
(assert (x1153 x1440))
(assert (= (ite (and x387 x503) (x1023 x1481) (x1310 x1481)) (x700 x1481)))
(assert (x1153 x1147))
(assert (x1153 x326))
(assert (x1153 x1482))
(assert (= (x231 (x629 x1522)) x1522))
(assert (x1153 x1222))
(assert (= (ite (and x1203 x958) (x1082 x937) (x1263 x937)) (x902 x937)))
(assert (x1153 x1106))
(assert (= (x1437 x945) (ite (and x1077 x1281) (x1172 x945) (x215 x945))))
(assert (x1134 x471))
(assert (x1153 x1274))
(assert (=> (<= x251 10000) (= (x629 x251) (x661 x251))))
(assert (x678 x552))
(assert (x1134 x1546))
(assert (x1153 x359))
(assert (x1153 x755))
(assert (= (x835 x366) (ite (= x570 x366) x1294 (x223 x366))))
(assert (x1153 x934))
(assert (= (ite (and x731 x1292) (x887 x1354) (ite (and x1292 x462 (not x731)) (x210 x1354) (x459 x1354))) (x1156 x1354)))
(assert (= (x1579 x945) (ite (= x945 x651) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x945))))
(assert (x1153 x138))
(assert (x1153 x929))
(assert (x1134 x782))
(assert (x1134 x490))
(assert (x1153 x1247))
(assert (= x141 (=> (= x1136 (> x929 0)) (and (=> (not x1136) x383) (=> x1136 x1419)))))
(assert (x1153 x7))
(assert (x1153 x1185))
(assert (x1153 x38))
(assert (= (=> (= x1465 x1526) x939) x598))
(assert (not x882))
(assert (= (ite (= x917 x1375) x788 (x404 x917)) (x1172 x917)))
(assert (= (x638 x937) (ite (and x263 (not x1557) x123) (x1487 x937) (x737 x937))))
(assert (=> (>= 10000 x194) (= (x661 x194) (x629 x194))))
(assert (x1134 x614))
(assert (= (x1487 x1349) (ite (and x465 x123 x1013 x1151 x263 (not x1133)) (x1317 x1349) (ite (and x1151 x1013 x123 (not x465) x263) (x820 x1349) (ite (and (not x1151) x263 x1013 x123) (x381 x1349) (ite (and (not x1013) x123 x263) (x1579 x1349) (x872 x1349)))))))
(assert (=> (>= 10000 x207) (= (x629 x207) (x661 x207))))
(assert (= x860 (x231 (x629 x860))))
(assert (=> (>= 10000 x1150) (= (x661 x1150) (x629 x1150))))
(assert (= (x1579 x1017) (ite (= x1017 x651) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x1017))))
(assert (=> (>= 10000 x805) (= (x661 x805) (x629 x805))))
(assert (= (ite (= x1458 x1349) x847 (x1529 x1349)) (x1497 x1349)))
(assert (= x1126 (x231 (x629 x1126))))
(assert (x1153 x1225))
(assert (= (x231 (x629 x142)) x142))
(assert (x1153 x160))
(assert (x1153 x548))
(assert (x1134 x967))
(assert (x1153 x88))
(assert (= (ite (= x525 x1461) x1097 (x508 x1461)) (x429 x1461)))
(assert (x1153 x664))
(assert (= (ite (and x592 (not x513) x503 (not x384)) (x1315 x762) (ite (and (not x384) (not x592) x503) (x429 x762) (ite (and x384 x503) (x429 x762) (x1223 x762)))) (x1414 x762)))
(assert (x1153 x70))
(assert (x340 x1545 x1367))
(assert (x1153 x467))
(assert (= (ite (= x1404 x844) x724 (x381 x844)) (x820 x844)))
(assert (= (x1315 x56) (ite (= x62 x56) x811 (x429 x56))))
(assert (x1153 x1510))
(assert (x1153 x86))
(assert (x1134 x204))
(assert (= x861 (x231 (x629 x861))))
(assert (=> (<= x1091 10000) (= (x629 x1091) (x661 x1091))))
(assert (= 69947311 (x231 (x661 69947311))))
(assert (x1153 x804))
(assert (x1153 x1328))
(assert (x1153 x653))
(assert (x1153 x204))
(assert (=> (>= 10000 x1026) (= (x629 x1026) (x661 x1026))))
(assert (= x229 (x231 (x629 x229))))
(assert (= (ite (and (not x384) x592 (not x513) x503) (x1315 x1375) (ite (and x503 (not x592) (not x384)) (x429 x1375) (ite (and x384 x503) (x429 x1375) (x1223 x1375)))) (x1414 x1375)))
(assert (x1153 x178))
(assert (= (x946 x1349) (ite (= x654 x1349) x1466 (x45 x1349))))
(assert (= (ite (= x1461 x994) x1221 (x1457 x1461)) (x729 x1461)))
(assert (x1153 x998))
(assert (= (ite (= x1375 x545) x788 (x404 x545)) (x1172 x545)))
(assert (= (x1457 x1017) (ite (= x1017 x526) x1471 (x920 x1017))))
(assert (= (or (and x957 (not x1178)) (and (not x1052) x92)) x684))
(assert (x1153 x309))
(assert (x1153 x663))
(assert (x1153 x473))
(assert (x1153 x497))
(assert (= (x1437 x62) (ite (and x1077 x1281) (x1172 x62) (x215 x62))))
(assert (= (or x684 x739) x1117))
(assert (= (=> (and (< x777 911411945) (<= 0 x178) (= x4 (x1474 (x629 x614) x1513 0)) (<= x178 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x275) (= x1513 (x1474 (x629 x275) x539 0)) (not (= x777 87118632)) (= x178 (x361 x4)) (= x539 (x1474 (x629 x1319) (x661 9) 0)) (< x777 2293535753) (< x777 468353030) (<= x614 1461501637330902918203684832716283019655932542975) (= (x51 (x629 274184521717934524641157099916833587206)) x1365) (= 142201243 x777) (= x178 x1225) (> x1365 0) (not (= x777 69947311))) (=> (and (= x1225 x1240) (= x817 x25) (= x1113 0) (= x800 x23) (= x1563 (and x496 x209)) (= x209 (< 0 x1240))) x491)) x1400))
(assert (= (x429 x320) (ite (= x320 x525) x1097 (x508 x320))))
(assert (= x559 (=> (and (= x44 (= x765 0)) (or (and (= 0 x985) (= 0 x55) x44) (and (= x1196 (x1474 (x629 x1495) x1572 0)) (>= x2 0) (= x55 x2) (= (x785 1461501637330902918203684832716283019655932542975 x881) x415) (= x985 1) (= x2 (x295 x1196)) (= x1572 (x1474 (x629 x415) x494 0)) (= (x785 1461501637330902918203684832716283019655932542975 x390) x1495) (not x44) (<= x2 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x494 (x1474 (x629 x765) (x661 9) 0))))) x1238)))
(assert (x1153 x1044))
(assert (x1153 x153))
(assert (x1153 x1375))
(assert (x1153 x37))
(assert (= x35 (x231 (x629 x35))))
(assert (x1153 x1358))
(assert (x1153 x1164))
(assert (= 1889567281 (x231 (x661 1889567281))))
(assert (=> (<= x593 10000) (= (x661 x593) (x629 x593))))
(assert (=> (>= 10000 x1169) (= (x661 x1169) (x629 x1169))))
(assert (= (x231 (x661 2258409472)) 2258409472))
(assert (x1134 x93))
(assert (= (x231 (x629 x1057)) x1057))
(assert (= (x1317 x762) (ite (= x488 x762) x1118 (x820 x762))))
(assert (= (x1579 x762) (ite (= x762 x651) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x762))))
(assert (= x1307 (x231 (x629 x1307))))
(assert (x1153 x846))
(assert (x1153 x1015))
(assert (= (ite (= x762 x302) x242 (x1579 x762)) (x381 x762)))
(assert (= (=> (= x5 (= x963 274184521717934524641157099916833587214)) (and (=> (not x5) x318) (=> (and (= x200 x952) (= x164 274184521717934524641157099916833587206) (not (= 826074471 x466)) (<= x952 1461501637330902918203684832716283019655932542975) (= (x322 (- x399 x423)) x389) (not (= x466 1889567281)) (<= 0 x1154) (= x1366 x423) (not x1008) (= x975 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x10 274184521717934524641157099916833587206) (<= x399 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1496 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1301) (and (> 64 x1301) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1301))))) (= x436 68) (= x466 2835717307) (= (> x423 x399) x1171) (= (x1474 (x629 274184521717934524641157099916833587206) (x661 1) 0) x968) (= 32 x1524) (not (> 649617121 x466)) x5 (not x1496) (= x423 x417) (not (= x466 649617121)) (= x436 x1027) (> x996 0) (not (= 2514000705 x466)) (<= 0 x399) (= x1379 (>= (+ x1366 x1154) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x240 (+ x1211 x944)) (not x1171) (= x39 (x1474 (x629 274184521717934524641157099916833587206) (x661 1) 0)) (= x399 (x547 x39)) (= x1008 (> x1366 x399)) (= (x1474 (x629 x952) (x661 1) 0) x1555) (= x1366 x944) (not x1379) (= (x798 x1555) x1154) (= x996 (x51 (x629 274184521717934524641157099916833587214))) (= (x322 (- x436 4)) x1301) (= x952 x174) (<= x1154 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x1154 x1366) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1147 x1186) (= 1 x970) (= x1211 x1154) (not (> 4 x436))) x751))) x1326))
(assert (=> (>= 10000 x871) (= (x661 x871) (x629 x871))))
(assert (x1153 x825))
(assert (x1153 x752))
(assert (= (x429 x1325) (ite (= x1325 x525) x1097 (x508 x1325))))
(assert (= (x820 x1349) (ite (= x1349 x1404) x724 (x381 x1349))))
(assert (= (x231 (x629 x1373)) x1373))
(assert (x1153 x232))
(assert (= (x1487 x1375) (ite (and x123 x1013 (not x1133) x465 x1151 x263) (x1317 x1375) (ite (and x123 x1151 x1013 x263 (not x465)) (x820 x1375) (ite (and x123 x263 x1013 (not x1151)) (x381 x1375) (ite (and x123 x263 (not x1013)) (x1579 x1375) (x872 x1375)))))))
(assert (= (x729 x917) (ite (= x917 x994) x1221 (x1457 x917))))
(assert (x1153 x1340))
(assert (=> (<= x1197 10000) (= (x629 x1197) (x661 x1197))))
(assert (x1153 x1458))
(assert (= (x629 604800) (x661 604800)))
(assert (x1153 x803))
(assert (=> (>= 10000 x787) (= (x629 x787) (x661 x787))))
(assert (= (x629 759532456) (x661 759532456)))
(assert (x1153 x738))
(assert (x1153 x1175))
(assert (x1153 x1262))
(assert (= 2868243304 (x231 (x661 2868243304))))
(assert (x1134 x1296))
(assert (=> (<= x868 10000) (= (x629 x868) (x661 x868))))
(assert (= (x429 x937) (ite (= x937 x525) x1097 (x508 x937))))
(assert (x1153 x1143))
(assert (x1153 x1049))
(assert (x1153 x1377))
(assert (= (x1457 x1349) (ite (= x1349 x526) x1471 (x920 x1349))))
(assert (= (x661 1461501637330902918203684832716283019655932542975) (x629 1461501637330902918203684832716283019655932542975)))
(assert (x1153 x1027))
(assert (= (x231 (x629 x23)) x23))
(assert (= (ite (= x320 x1375) x788 (x404 x320)) (x1172 x320)))
(assert (= (ite (= x525 x917) x1097 (x508 x917)) (x429 x917)))
(assert (x1153 x175))
(assert (x1153 x856))
(assert (= (ite (and x503 (not x384) (not x513) x592) (x1315 x1017) (ite (and (not x384) (not x592) x503) (x429 x1017) (ite (and x503 x384) (x429 x1017) (x1223 x1017)))) (x1414 x1017)))
(assert (=> (>= 10000 x747) (= (x661 x747) (x629 x747))))
(assert (= (x629 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x661 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (<= x753 10000) (= (x661 x753) (x629 x753))))
(assert (= (x661 2960351575) (x629 2960351575)))
(assert (= (ite (= x1461 x62) x811 (x429 x1461)) (x1315 x1461)))
(assert (= (x45 x762) (ite (= x262 x762) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x189 x762))))
(assert (x1153 x392))
(assert (x1153 x815))
(assert (=> (<= x213 10000) (= (x629 x213) (x661 x213))))
(assert (= x981 (x231 (x629 x981))))
(assert (=> (<= x893 10000) (= (x629 x893) (x661 x893))))
(assert (= (ite (and x503 (not x513) (not x384) x592) (x1315 x917) (ite (and x503 (not x592) (not x384)) (x429 x917) (ite (and x503 x384) (x429 x917) (x1223 x917)))) (x1414 x917)))
(assert (x1153 x441))
(assert (= (x1172 x1375) x788))
(assert (= (x231 (x629 x687)) x687))
(assert (x1153 x577))
(assert (= (x629 26959946667150639794667015087019630673637144422540572481103610249215) (x661 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (ite (and x958 x1203) (x1082 x762) (x1263 x762)) (x902 x762)))
(assert (x1153 x975))
(assert (=> (<= x1307 10000) (= (x629 x1307) (x661 x1307))))
(assert (x1153 x188))
(assert (= (x902 x945) (ite (and x1203 x958) (x1082 x945) (x1263 x945))))
(assert (= (ite (= x1375 x488) x1118 (x820 x1375)) (x1317 x1375)))
(assert (= (ite (and x123 (not x1557) x263) (x1487 x762) (x737 x762)) (x638 x762)))
(assert (x1134 x530))
(assert (x1153 x932))
(assert (= (x231 (x629 x129)) x129))
(assert (x1153 x782))
(assert (= (ite (= x945 x525) x1097 (x508 x945)) (x429 x945)))
(assert (= (ite (= x1325 x1375) x788 (x404 x1325)) (x1172 x1325)))
(assert (x1134 x301))
(assert (x1134 x1534))
(assert (x1153 x447))
(assert (x1134 x275))
(assert (= x620 (=> (and (= x747 x800) (= x25 x368)) x505)))
(assert (=> (<= x569 10000) (= (x661 x569) (x629 x569))))
(assert (x1153 x407))
(assert (= (ite (= x594 x525) x1097 (x508 x594)) (x429 x594)))
(assert (x1153 x454))
(assert (x1153 x960))
(assert (x1134 x1022))
(assert (= (x1315 x937) (ite (= x937 x62) x811 (x429 x937))))
(assert (= (x231 (x629 x145)) x145))
(assert (x1153 x743))
(assert (x1153 x1456))
(assert (= x236 (x231 (x629 x236))))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x231 (x661 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x1153 x1534))
(assert (x1153 x431))
(assert (x1153 x681))
(assert (=> (>= 10000 x981) (= (x661 x981) (x629 x981))))
(assert (=> (<= x870 10000) (= (x661 x870) (x629 x870))))
(assert (x1153 x211))
(assert (= (x835 x192) (ite (= x570 x192) x1294 (x223 x192))))
(assert (x1153 x1251))
(assert (x1153 x695))
(assert (x678 x397))
(assert (= (x1172 x1461) (ite (= x1375 x1461) x788 (x404 x1461))))
(assert (x1134 x860))
(assert (x1153 x817))
(assert (= (=> (= x454 x765) x559) x754))
(assert (= (and x722 x1439) x957))
(assert (x1153 x118))
(assert (x1153 x236))
(assert (x1153 x83))
(assert (x1134 x733))
(assert (= (ite (= x1375 x762) x788 (x404 x762)) (x1172 x762)))
(assert (= (ite (= x1375 x302) x242 (x1579 x1375)) (x381 x1375)))
(assert (= (=> (and (<= x625 1461501637330902918203684832716283019655932542975) (>= x830 0) (= x990 (x1474 (x629 x625) x293 0)) (not (= 468353030 x287)) (= x955 (x51 (x629 274184521717934524641157099916833587206))) (= 759532456 x287) (= x657 x830) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x830) (= x293 (x1474 (x629 x966) (x661 7) 0)) (not (< x287 468353030)) (not (= 635128645 x287)) (= x830 (x477 x1040)) (< 0 x955) (>= 1461501637330902918203684832716283019655932542975 x1169) (> 911411945 x287) (< x287 2293535753) (= x1040 (x1474 (x629 x1169) x990 0))) (=> (and x667 (= x25 x575) (= (<= x15 x247) x667) (= x800 x1057) (= x247 x657)) x219)) x666))
(assert (= (=> (and (= x236 (x785 1461501637330902918203684832716283019655932542975 x390)) (= (= x1532 0) x159) (>= x1532 0) (= (x477 x28) x1532) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1532) (= x1398 (x785 1461501637330902918203684832716283019655932542975 x881)) (= x28 (x1474 (x629 x236) x912 0)) (= (x1474 (x629 x733) (x661 7) 0) x1416) (= x912 (x1474 (x629 x1398) x1416 0))) (and (=> (and (not x159) (= x733 x1526)) x598) (=> (and (not x439) (= x439 (> x577 0)) x159 (= x577 (x322 (- x733 1)))) x537))) x634))
(assert (= (ite (= x526 x844) x1471 (x920 x844)) (x1457 x844)))
(assert (x1134 x368))
(assert (=> (<= x809 10000) (= (x661 x809) (x629 x809))))
(assert (x1134 x243))
(assert (x1153 x102))
(assert (x1134 x1307))
(assert (=> (>= 10000 x817) (= (x629 x817) (x661 x817))))
(assert (x1153 x767))
(assert (= x1292 x1183))
(assert (= (ite (and x592 x503 (not x513) (not x384)) (x1315 x320) (ite (and x503 (not x384) (not x592)) (x429 x320) (ite (and x503 x384) (x429 x320) (x1223 x320)))) (x1414 x320)))
(assert (= (x231 (x629 x1130)) x1130))
(assert (x1153 x1165))
(assert (x1153 x1290))
(assert (x1134 x448))
(assert (x1153 x719))
(assert (x1153 x1218))
(assert (x1153 x23))
(assert (=> (<= x145 10000) (= (x629 x145) (x661 x145))))
(assert (= (x629 468353030) (x661 468353030)))
(assert (x1134 x1398))
(assert (= (x231 (x629 x275)) x275))
(assert (x1153 x850))
(assert (= x1060 (x231 (x629 x1060))))
(assert (x1153 x1184))
(assert (= x1398 (x231 (x629 x1398))))
(assert (x1153 x250))
(assert (x1153 x524))
(assert (= x617 (x231 (x629 x617))))
(assert (x1134 x656))
(assert (x1134 x1319))
(assert (=> (<= x7 10000) (= (x629 x7) (x661 x7))))
(assert (=> (<= x1441 10000) (= (x629 x1441) (x661 x1441))))
(assert (x678 x1340))
(assert (=> (>= 10000 x471) (= (x661 x471) (x629 x471))))
(assert (x1153 x949))
(assert (x1153 x552))
(assert (x1153 x121))
(assert (x678 x1322))
(assert (= (x231 (x629 x1465)) x1465))
(assert (= x276 (x231 (x629 x276))))
(assert (= x120 (x231 (x629 x120))))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x231 (x661 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x1153 x1523))
(assert (= (ite (= x488 x1193) x1118 (x820 x1193)) (x1317 x1193)))
(assert (=> (>= 10000 x275) (= (x629 x275) (x661 x275))))
(assert (x1153 x1224))
(assert (= (ite (= x525 x56) x1097 (x508 x56)) (x429 x56)))
(assert (x1153 x590))
(assert (x1153 x200))
(assert (= 0 (x841 x917)))
(assert (x1153 x1413))
(assert (=> (<= x1386 10000) (= (x661 x1386) (x629 x1386))))
(assert (= (=> (and (= (= 0 x55) x713) (or (and (= (x1474 (x629 x593) x879 0) x506) (= x169 (x1474 (x629 x805) (x661 7) 0)) (= (x785 1461501637330902918203684832716283019655932542975 x390) x593) (= x715 x289) (= x1429 (x785 1461501637330902918203684832716283019655932542975 x881)) x713 (= (x1474 (x629 x1429) x169 0) x879)) (and (= x704 (x1062 x228)) (>= x704 0) (= x1176 (x1156 x514)) (= (x1474 (x629 x617) x646 0) x514) (= (x927 (+ 128 x1302)) x810) (= (x1234 x1282) x176) (= (x785 1461501637330902918203684832716283019655932542975 x881) x1143) (= x153 (x132 x921)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x704) (<= 0 x1176) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x153) (= x646 (x1474 (x629 x1143) x709 0)) (= (= 0 x1124) x693) (= (x785 1461501637330902918203684832716283019655932542975 x390) x617) (<= 0 x153) (= (x1477 x921 1) x228) (= x709 (x1474 (x629 x805) (x661 7) 0)) (= (x927 (+ x1302 96)) x1282) (= x921 (x1474 (x629 x805) (x661 1) 0)) (= (< x1176 x176) x171) (or (and (not x171) (= x1124 0)) (and (= (> x916 x624) x600) (or (and (= (ite (< x235 604800) x235 604800) x1239) (= x1239 x1124) (= (x322 (- x1142 x1176)) x235) (= x590 604800) (not x105) (not (< x1142 x1176))) (and (= x441 (x322 (- x1142 x587))) (= x1124 x441) x105 (= (x1234 x289) x587) (not (> x587 x1142)))) (= x105 (= 0 x1176)) x171 (= x624 (x1234 x1282)) (or (and (= (x1234 x1282) x1251) (= x1142 x1251) x600) (and (not x600) (= x916 x1142))))) (not x713) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1176) (or (and (= (x785 1461501637330902918203684832716283019655932542975 x881) x807) (= x715 x810) (= x616 (x1474 (x629 x251) x712 0)) x693 (= x251 (x785 1461501637330902918203684832716283019655932542975 x390)) (= (x1474 (x629 x805) (x661 7) 0) x398) (= (x1474 (x629 x807) x398 0) x712)) (and (not x693) (= x1111 x445) (= x285 (x1474 (x629 x805) (x661 3) 0)) (= (x785 1461501637330902918203684832716283019655932542975 x881) x145) (= x445 (* x55 x1124)) (= (x785 1461501637330902918203684832716283019655932542975 x390) x1185) (= x203 (x1474 (x629 x145) x469 0)) (= (x1474 (x629 x1185) x789 0) x1078) (= x810 x715) (= x815 (x785 1461501637330902918203684832716283019655932542975 x881)) (= x681 (x785 1461501637330902918203684832716283019655932542975 x390)) (= (x1474 (x629 x815) x285 0) x789) (= x469 (x1474 (x629 x805) (x661 7) 0)) (= x910 (x1474 (x629 x681) x203 0)) (< (* x55 x1124) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (or (and (= (x785 1461501637330902918203684832716283019655932542975 x881) x1476) (= (x785 1461501637330902918203684832716283019655932542975 x390) x195) (not x1448)) x1448) (= x1448 (= 0 x985))) x1011) x1238))
(assert (x1153 x1408))
(assert (= (x231 (x629 x893)) x893))
(assert (x1134 x22))
(assert (x1153 x1490))
(assert (=> (<= x129 10000) (= (x629 x129) (x661 x129))))
(assert (x1134 x1525))
(assert (= (x231 (x629 x448)) x448))
(assert (x1153 x98))
(assert (= (=> (and (= x782 (x322 (- x805 1))) (= x257 (< 0 x782))) (and (=> x257 x1090) (=> (not x257) x181))) x1412))
(assert (x1153 x1349))
(assert (=> (<= x530 10000) (= (x661 x530) (x629 x530))))
(assert (x1153 x602))
(assert (x1153 x78))
(assert (=> (<= x392 10000) (= (x629 x392) (x661 x392))))
(assert (= (ite (and x503 x592 (not x513) (not x384)) (x1315 x545) (ite (and (not x384) (not x592) x503) (x429 x545) (ite (and x384 x503) (x429 x545) (x1223 x545)))) (x1414 x545)))
(assert (x1153 x212))
(assert (x1153 x936))
(assert (= x1305 (x231 (x629 x1305))))
(assert (x888 x1322 x565))
(assert (x1153 x1460))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x179) (= x1038 x179) (not (> 2690754053 x309)) (= x427 (x1474 (x629 x817) x1576 0)) (> 2960351575 x309) (not (= x309 2743102681)) (> x586 0) (not (= x309 2690754053)) (not (= x309 2764855426)) (not (> 2293535753 x309)) (= (x1474 (x629 x23) (x661 5) 0) x1576) (= (x1023 x427) x179) (>= x179 0) (= x309 2798343961) (>= 1461501637330902918203684832716283019655932542975 x817) (= x586 (x51 (x629 274184521717934524641157099916833587206)))) (=> (and (= x1578 x1296) (= x1346 x1022) (= x1261 x25) (= x1334 x800) (= x1038 x1106)) x1267)) x491))
(assert (x1153 x1411))
(assert (= x607 (=> (and (= x424 (= x296 0)) (or (and (not x424) (= x291 (= 0 x1357)) (or (and (= 1 x1484) (not x291) (= x1443 x1357)) (and (= x1443 0) x291 (= x1484 0))) (= x142 (x785 1461501637330902918203684832716283019655932542975 x881)) (= (x1474 (x629 x142) x32 0) x1007) (= (x1020 x1007) x1357) (>= x1357 0) (= (x1474 (x629 x296) (x661 10) 0) x32) (<= x1357 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and x424 (= x1484 0) (= 0 x1443)))) x433)))
(assert (= x1565 x909))
(assert (= (ite (and x1203 x958) (x1082 x1349) (x1263 x1349)) (x902 x1349)))
(assert (= (x661 18446744073709551615) (x629 18446744073709551615)))
(assert (x1153 x1149))
(assert (x1153 x1336))
(assert (x1153 x741))
(assert (x1153 x869))
(assert (= (x231 (x629 x1197)) x1197))
(assert (= (ite (= x366 x1343) x833 (x546 x366)) (x831 x366)))
(assert (= (x946 x844) (ite (= x654 x844) x1466 (x45 x844))))
(assert (x1153 x1051))
(assert (x1153 x1021))
(assert (=> (<= x815 10000) (= (x629 x815) (x661 x815))))
(assert (= x759 (=> (= (> x929 x214) x732) (and (=> (and x732 (= x1411 x677)) x604) (=> (not x732) x1073)))))
(assert (x1153 x512))
(assert (x1153 x1559))
(assert (=> (>= 10000 x1261) (= (x661 x1261) (x629 x1261))))
(assert (= (x231 (x629 x579)) x579))
(assert (x340 x1158 x535))
(assert (= (ite (and x503 (not x384) (not x513) x592) (x1315 x594) (ite (and x503 (not x384) (not x592)) (x429 x594) (ite (and x384 x503) (x429 x594) (x1223 x594)))) (x1414 x594)))
(assert (= x569 (x231 (x629 x569))))
(assert (=> (<= x1143 10000) (= (x661 x1143) (x629 x1143))))
(assert (= (x1437 x994) (ite (and x1077 x1281) (x1172 x994) (x215 x994))))
(assert (= x286 (x231 (x629 x286))))
(assert (= (and x1410 x1283) x1200))
(assert (= (=> (and (= (x785 1461501637330902918203684832716283019655932542975 x881) x7) (or x384 (and (= (ite (> x833 115792089237316195423570985008687907853269984665640564039457) 1 0) x535) (or (not x592) (and (<= x359 1461501637330902918203684832716283019655932542975) (= x144 (div x691 1000000000000000000)) (= x149 x543) (= x961 (x1474 (x629 x1266) x61 0)) (= 0 x919) (<= 0 x475) (= (x927 (+ x138 160)) x62) (= x1333 (x303 x1280)) (= (x1474 (x629 x392) x974 0) x971) (= x1280 x548) (< 0 x788) (< 0 x788) (= x448 (x785 1461501637330902918203684832716283019655932542975 x881)) (= (+ x543 x1447) x811) (= x149 (x429 x62)) (> x1010 0) (< 0 x788) (<= 0 x919) (<= x475 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x919 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1333) (= (x1474 (x629 x929) (x661 4) 0) x584) (= (x1474 (x629 x1333) x279 0) x1343) (= x497 (x785 1461501637330902918203684832716283019655932542975 x881)) (= x797 (x785 1461501637330902918203684832716283019655932542975 x390)) (= (* x475 x774) x691) (= x475 (x1107 x610)) (= x1266 (x303 x1280)) (= x146 (x1474 (x629 x448) x584 0)) (= x1447 x144) (= x1010 (x429 x1375)) (= (x1474 (x629 x1012) x146 0) x61) (= x359 (x303 x1280)) (= x509 (x1474 (x629 x929) (x661 4) 0)) (= (x1474 (x629 x929) (x661 11) 0) x974) (= x513 (< 1 x788)) (= (x1474 (x629 x359) x971 0) x610) (= (x546 x961) x919) x592 (= (x1474 (x629 x497) x509 0) x710) (= x392 (x785 1461501637330902918203684832716283019655932542975 x881)) (or (not x513) (and (= (x1315 x1375) x845) (= x1571 (x1107 x1160)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x572 x524)) (= (x927 (+ x316 64)) x1258) (= (x1474 (x629 x471) x1182 0) x1478) (= x1581 (x831 x1362)) (<= x741 1461501637330902918203684832716283019655932542975) (= (x785 1461501637330902918203684832716283019655932542975 x390) x1328) (= (x785 1461501637330902918203684832716283019655932542975 x881) x471) (= (x927 (+ 192 x138)) x140) (= x490 (x303 x1258)) (= x1450 x572) (= (x1474 (x629 x929) (x661 11) 0) x1182) (< 1 x788) (= x1407 (x1474 (x629 x929) (x661 4) 0)) (= x470 (x1474 (x629 x1328) x553 0)) (= (+ x444 x1450) x941) (= x1581 0) (= x50 (x1474 (x629 x1271) x977 0)) (= x977 (x1474 (x629 x599) x1070 0)) (= x741 (x303 x1258)) (= x553 (x1474 (x629 x1373) x1407 0)) x513 (<= x1581 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1558 1461501637330902918203684832716283019655932542975) (< 1 x845) (<= x1571 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1558 (x303 x1258)) (= x896 (x1474 (x629 x490) x50 0)) (= (x1315 x140) x572) (= x1271 (x785 1461501637330902918203684832716283019655932542975 x390)) (<= 0 x1571) (not x1323) (> x788 1) (>= 1461501637330902918203684832716283019655932542975 x490) (= (x785 1461501637330902918203684832716283019655932542975 x881) x599) (= x444 x524) (= (x785 1461501637330902918203684832716283019655932542975 x881) x1373) (= (< 2 x788) x1323) (= x524 (div x746 1000000000000000000)) (= (x1474 (x629 x1558) x1478 0) x1160) (= (* x1571 x774) x746) (>= x1581 0) (= (x1474 (x629 x741) x470 0) x1362) (< (* x1571 x774) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1070 (x1474 (x629 x929) (x661 4) 0)) (< 1 x788))) (= (x785 1461501637330902918203684832716283019655932542975 x390) x1012) (< (+ x149 x144) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (* x475 x774) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x279 (x1474 (x629 x797) x710 0)) (>= 1461501637330902918203684832716283019655932542975 x1266))) (= 1 x1158) (= x71 (mod (* 1000000000000000000 x833) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< 0 x326) (= (> x788 0) x592) (= x774 (div x71 x326)) (= x412 0) (not x384) (= (x785 x1158 x535) x412))) (<= x725 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x702 (x1474 (x629 x1104) x531 0)) (= (x1474 (x629 x929) (x661 1) 0) x1189) (= x1104 (x785 1461501637330902918203684832716283019655932542975 x881)) (= x289 (x927 (+ x1302 64))) (= x185 (x1474 (x629 x929) (x661 5) 0)) (or (and (= x967 (x785 1461501637330902918203684832716283019655932542975 x881)) (= (x1474 (x629 x967) x1316 0) x1492) (= x315 x1499) (= x1075 (x1474 (x629 x929) (x661 5) 0)) (= (x1474 (x629 x929) (x661 6) 0) x1316) (= (* x314 x107) x315) (= x1060 (x785 1461501637330902918203684832716283019655932542975 x881)) (not x387) (= x1249 (x1474 (x629 x1060) x1075 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x314 x107))) (and (= (x1474 (x629 x929) (x661 6) 0) x363) (= (x1474 (x629 x74) x363 0) x87) (= (x785 1461501637330902918203684832716283019655932542975 x881) x74) x387)) (<= x1206 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1062 x900) x1097) (>= x326 0) (= (x904 x370) x833) (= (x429 x525) x757) (= x1068 (x785 1461501637330902918203684832716283019655932542975 x390)) (<= x833 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x833 0) x384) (= x324 (< x725 x757)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x326) (= x1206 (x132 x1189)) (= x1481 (x1474 (x629 x7) x185 0)) (>= x833 0) (= x428 (x1474 (x629 x1446) x714 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1097) (= (x1474 (x629 x929) (x661 3) 0) x531) (<= 0 x1206) (= (= 0 x972) x1004) (= x326 (x700 x1481)) (= (x642 x428) x725) (= (= 0 x314) x387) (or (and (= 0 x314) (not x324)) (and (or (and (= x1162 (x322 (- x804 x1262))) (= x314 x1162) (= (x429 x1302) x1262) (not (> x1262 x804)) x156) (and (= x495 (x322 (- x804 x725))) (= x188 x314) (not (< x804 x725)) (= x474 604800) (not x156) (= (ite (< x495 604800) x495 604800) x188))) x324 (= (> x916 x191) x1061) (= x156 (= x725 0)) (or (and (= x804 x916) (not x1061)) (and (= x1394 (x429 x525)) x1061 (= x804 x1394))) (= (x429 x525) x191))) (= x1446 (x785 1461501637330902918203684832716283019655932542975 x881)) (= (x1474 (x629 x929) (x661 6) 0) x714) (= (x1477 x1189 1) x900) (or x1004 (and (= (x785 1461501637330902918203684832716283019655932542975 x881) x374) (= (x1474 (x629 x374) x1264 0) x1148) (not x1004) (= (x1474 (x629 x929) (x661 10) 0) x1264))) (= (x1474 (x629 x1068) x702 0) x370) (>= x725 0) (= (x927 (+ x1302 32)) x525) (<= 0 x1097)) x652) x889))
(assert (x1153 x574))
(assert (=> (>= 10000 x286) (= (x661 x286) (x629 x286))))
(assert (=> (<= x1536 10000) (= (x661 x1536) (x629 x1536))))
(assert (x1153 x351))
(assert (= (ite (and (not x384) x592 x503 (not x513)) (x1315 x994) (ite (and x503 (not x384) (not x592)) (x429 x994) (ite (and x384 x503) (x429 x994) (x1223 x994)))) (x1414 x994)))
(assert (= 18446744073709551615 (x231 (x661 18446744073709551615))))
(assert (x1153 x1418))
(assert (= (ite (= x56 x651) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x56)) (x1579 x56)))
(assert (x1153 x238))
(assert (x1153 x1536))
(assert (x1153 x13))
(assert (x1134 x1445))
(assert (x1153 x49))
(assert (x1153 x164))
(assert (x1153 x368))
(assert (= (ite (= x1302 x525) x1097 (x508 x1302)) (x429 x1302)))
(assert (x1134 x455))
(assert (x1153 x507))
(assert (= (x231 (x629 x234)) x234))
(assert (x1153 x777))
(assert (x1153 x1511))
(assert (= (x231 (x629 x392)) x392))
(assert (= (x661 1889567281) (x629 1889567281)))
(assert (x1153 x1142))
(assert (= (ite (= x935 x945) x903 (x946 x945)) (x1529 x945)))
(assert (x1153 x967))
(assert (x1153 x938))
(assert (x1153 x1429))
(assert (=> (<= x351 10000) (= (x661 x351) (x629 x351))))
(assert (x678 x1545))
(assert (x1153 x1514))
(assert (= (or (and (not x1342) x281) (and x1530 x675) (and x1356 (not x643))) x400))
(assert (x1134 x1197))
(assert (x1153 x419))
(assert (= (x629 142201243) (x661 142201243)))
(assert (x1153 x243))
(assert (x1153 x168))
(assert (x1153 x1405))
(assert (= (=> (and (<= x542 1461501637330902918203684832716283019655932542975) (not (= x699 2690754053)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x430) (= (x51 (x629 274184521717934524641157099916833587206)) x1259) (= (x1474 (x629 x1331) (x661 3) 0) x824) (< 0 x1259) (= x282 (x1474 (x629 x120) x824 0)) (not (> 2690754053 x699)) (not (> 2293535753 x699)) (= (x1474 (x629 x542) x282 0) x190) (= x699 2743102681) (= x430 (x928 x190)) (<= x120 1461501637330902918203684832716283019655932542975) (= x1396 x430) (< x699 2960351575) (>= x430 0)) (=> (and (= x1026 x1346) (= x250 x1396) (= x800 x753) (= x385 x1578) (= x25 x1536)) x562)) x313))
(assert (x1153 x1231))
(assert (x1153 x1426))
(assert (= (x729 x545) (ite (= x545 x994) x1221 (x1457 x545))))
(assert (= (and x394 x930) x1327))
(assert (= (x820 x56) (ite (= x56 x1404) x724 (x381 x56))))
(assert (x1153 x1296))
(assert (x1134 x809))
(assert (x1153 x937))
(assert (x1153 x810))
(assert (= x252 true))
(assert (x1153 x338))
(assert (= (x1172 x56) (ite (= x1375 x56) x788 (x404 x56))))
(assert (= (x231 (x629 x1429)) x1429))
(assert (= (x231 (x661 1968616202)) 1968616202))
(assert (x1153 x321))
(assert (x1134 x1226))
(assert (= (x231 (x661 2690754053)) 2690754053))
(assert (=> (>= 10000 x49) (= (x661 x49) (x629 x49))))
(assert (x1153 x248))
(assert (= (x231 (x629 x767)) x767))
(assert (= x1296 (x231 (x629 x1296))))
(assert (= x655 (and (not x772) x1132)))
(assert (= (x231 (x629 x194)) x194))
(assert (x1153 x582))
(assert (x1153 x275))
(assert (= (x638 x1375) (ite (and x123 (not x1557) x263) (x1487 x1375) (x737 x1375))))
(assert (= (ite (= x140 x1375) x788 (x404 x140)) (x1172 x140)))
(assert (= (x1457 x1375) (ite (= x1375 x526) x1471 (x920 x1375))))
(assert (= (ite (= x62 x594) x811 (x429 x594)) (x1315 x594)))
(assert (= (x231 (x629 x1495)) x1495))
(assert (x1153 x1000))
(assert (= x929 (x231 (x629 x929))))
(assert (= (x231 (x629 x1104)) x1104))
(assert (x1153 x1098))
(assert (=> (<= x85 10000) (= (x661 x85) (x629 x85))))
(assert (x1134 x1465))
(assert (x1153 x579))
(assert (= x362 (x231 (x629 x362))))
(assert (=> (>= 10000 x126) (= (x661 x126) (x629 x126))))
(assert (=> (>= 10000 x687) (= (x661 x687) (x629 x687))))
(assert (= (x231 (x629 x301)) x301))
(assert (x1134 x817))
(assert (= (x661 2512682246) (x629 2512682246)))
(assert (= x1044 (x231 (x629 x1044))))
(assert (=> (>= 10000 x1164) (= (x629 x1164) (x661 x1164))))
(assert true)
(assert (= (ite (and x123 x263 (not x1557)) (x1487 x1193) (x737 x1193)) (x638 x1193)))
(assert (x1153 x58))
(assert (= (x231 (x629 x133)) x133))
(assert (= x1445 (x231 (x629 x1445))))
(assert (= (x902 x545) (ite (and x958 x1203) (x1082 x545) (x1263 x545))))
(assert (= (x231 (x629 x473)) x473))
(assert (= (x231 (x629 x81)) x81))
(assert (x1134 x683))
(assert (x1153 x534))
(assert (= (or x1110 x884) x82))
(assert (= (ite (= x1193 x302) x242 (x1579 x1193)) (x381 x1193)))
(assert (= x950 (or (and (not x159) x761) (and (not x1016) x965))))
(assert (=> (<= x120 10000) (= (x661 x120) (x629 x120))))
(assert (x1153 x1190))
(assert (= (ite (and x592 (not x384) x503 (not x513)) (x1315 x1161) (ite (and (not x592) (not x384) x503) (x429 x1161) (ite (and x384 x503) (x429 x1161) (x1223 x1161)))) (x1414 x1161)))
(assert (x1153 x1357))
(assert (x1153 x116))
(assert (x1153 x1506))
(assert (= (x661 274184521717934524641157099916833587218) (x629 274184521717934524641157099916833587218)))
(assert (x1153 x1499))
(assert (= (x629 1968616202) (x661 1968616202)))
(assert (x678 1461501637330902918203684832716283019655932542975))
(assert (x1153 x1209))
(assert (x1153 x530))
(assert (x1153 x1516))
(assert (= 0 (x841 x62)))
(assert (x1153 x1359))
(assert (x1153 x711))
(assert (x1153 x176))
(assert (x1134 x815))
(assert (x1153 x1191))
(assert (x1134 x251))
(assert (x1153 x3))
(assert (= (x231 (x629 x1560)) x1560))
(assert (= x909 x1489))
(assert (= (=> (and (not (< x365 2690754053)) (<= 0 x1459) (< 0 x1418) (= (x51 (x629 274184521717934524641157099916833587206)) x1418) (= (x1195 x982) x1459) (= x1459 x1539) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1459) (not (= x365 2690754053)) (<= x1093 1461501637330902918203684832716283019655932542975) (= x982 (x1474 (x629 x1093) x1210 0)) (= (x1474 (x629 x276) (x661 3) 0) x411) (not (< x365 2293535753)) (= x1210 (x1474 (x629 x536) x411 0)) (> 2960351575 x365) (<= x536 1461501637330902918203684832716283019655932542975) (= 2743102681 x365)) (=> (and (= x1174 x1539) (= x25 x280) (= x800 x93) (= x1346 x567) (= x1578 x511)) x510)) x1507))
(assert (= (x841 x1325) 0))
(assert (x1134 x1433))
(assert (x1153 x251))
(assert (x1134 x194))
(assert (=> (>= 10000 x536) (= (x629 x536) (x661 x536))))
(assert (x1134 x741))
(assert (= (x429 x994) (ite (= x525 x994) x1097 (x508 x994))))
(assert (= x895 x623))
(assert (= (x231 (x629 x1546)) x1546))
(assert (x1134 x23))
(assert (=> (<= x276 10000) (= (x629 x276) (x661 x276))))
(assert (= (x629 2835717307) (x661 2835717307)))
(assert (x1153 x994))
(assert (x1153 x830))
(assert (x1134 x199))
(assert (x1153 x1301))
(assert (x1153 x679))
(assert (x1153 x969))
(assert (= (ite (= x1349 x62) x811 (x429 x1349)) (x1315 x1349)))
(assert (x1134 x58))
(assert (= x374 (x231 (x629 x374))))
(assert (= x385 (x231 (x629 x385))))
(assert (x1153 x62))
(assert (= (x231 (x629 x1446)) x1446))
(assert (=> (>= 10000 x301) (= (x661 x301) (x629 x301))))
(assert (x1153 x1010))
(assert (x1134 x473))
(assert (= (ite (= x526 x994) x1471 (x920 x994)) (x1457 x994)))
(assert (x1153 x1388))
(assert (= 826074471 (x231 (x661 826074471))))
(assert (x1153 x1302))
(assert (x1153 x870))
(assert (=> (>= 10000 x952) (= (x661 x952) (x629 x952))))
(assert (= (x231 (x629 x85)) x85))
(assert (x1153 x1255))
(assert (=> (<= x1185 10000) (= (x661 x1185) (x629 x1185))))
(assert (=> (<= x579 10000) (= (x629 x579) (x661 x579))))
(assert (= (ite (and x1151 (not x1133) x465 x123 x1013 x263) (x1317 x1193) (ite (and x123 x263 x1151 (not x465) x1013) (x820 x1193) (ite (and x263 x123 x1013 (not x1151)) (x381 x1193) (ite (and x123 (not x1013) x263) (x1579 x1193) (x872 x1193))))) (x1487 x1193)))
(assert (x1153 x511))
(assert (x1153 x12))
(assert (=> (>= 10000 x1022) (= (x661 x1022) (x629 x1022))))
(assert (x1153 x762))
(assert (x888 x1340 x1018))
(assert (x1153 x1465))
(assert (= (x902 x1193) (ite (and x958 x1203) (x1082 x1193) (x1263 x1193))))
(assert (x1153 x148))
(assert (x888 x881 x686))
(assert (x1153 x822))
(assert (= (ite (and x263 x123 (not x1557)) (x1487 x1017) (x737 x1017)) (x638 x1017)))
(assert (x1153 x490))
(assert (x1153 x557))
(assert (x1153 x1471))
(assert (x1134 x805))
(assert (=> (>= 10000 x1334) (= (x629 x1334) (x661 x1334))))
(assert (= (x1487 x1161) (ite (and x465 x1151 x1013 x263 x123 (not x1133)) (x1317 x1161) (ite (and x1013 x1151 x123 x263 (not x465)) (x820 x1161) (ite (and (not x1151) x123 x1013 x263) (x381 x1161) (ite (and (not x1013) x123 x263) (x1579 x1161) (x872 x1161)))))))
(assert (= (x231 (x629 x962)) x962))
(assert (x1153 x240))
(assert (= x376 (=> (and (< x727 2960351575) (not (= 2690754053 x727)) (not (= x727 2764855426)) (not (= x727 2743102681)) (= (x1474 (x629 x656) (x661 5) 0) x1109) (>= x1311 0) (= x786 (x1474 (x629 x1534) x1109 0)) (not (> 2690754053 x727)) (= x1224 (x51 (x629 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x1534) (= x727 2798343961) (<= x1311 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1224 0) (= x705 x1311) (= x1311 (x520 x786)) (not (< x727 2293535753))) (=> (and (= x25 x1150) (= x346 x705) (= x800 x1059) (= x211 x1578)) x67))))
(assert (= (x231 (x629 x1428)) x1428))
(assert (= x621 (x231 (x629 x621))))
(assert (= true x671))
(assert (= x327 (x231 (x629 x327))))
(assert (x1134 x323))
(assert (x1153 x689))
(assert (= (ite (= x488 x320) x1118 (x820 x320)) (x1317 x320)))
(assert (x1153 x525))
(assert (x1153 x1154))
(assert (x1153 x379))
(assert (x1153 x1459))
(assert (x1153 x501))
(assert (x1153 x64))
(assert (= (x1437 x1017) (ite (and x1281 x1077) (x1172 x1017) (x215 x1017))))
(assert (x1134 x747))
(assert (x1153 x1122))
(assert (x1153 x1422))
(assert (= (x629 2939843472) (x661 2939843472)))
(assert (= (x629 2690754053) (x661 2690754053)))
(assert (x1153 x833))
(assert (=> (>= 10000 x431) (= (x629 x431) (x661 x431))))
(assert (x1153 x69))
(assert (x1153 x256))
(assert (x1153 x757))
(assert (x1134 x327))
(assert (x1153 x1099))
(assert (x1134 x35))
(assert (x1153 x717))
(assert (=> (<= x211 10000) (= (x661 x211) (x629 x211))))
(assert (=> (<= x236 10000) (= (x661 x236) (x629 x236))))
(assert (= (ite (= x1161 x1404) x724 (x381 x1161)) (x820 x1161)))
(assert (x1134 x497))
(assert (= (ite (= x302 x1161) x242 (x1579 x1161)) (x381 x1161)))
(assert (x1134 x1130))
(assert (= (=> (and (= (x642 x377) x755) (= (x785 1461501637330902918203684832716283019655932542975 x881) x809) (= x1178 (= x755 0)) (<= x755 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x836 (x1474 (x629 x860) (x661 6) 0)) (<= 0 x755) (= x377 (x1474 (x629 x809) x836 0))) (and (=> (and (not x1178) (= x860 x549)) x628) (=> (and (not x134) (= (x322 (- x860 1)) x1382) x1178 (= (< 0 x1382) x134)) x383))) x42))
(assert (= (x820 x320) (ite (= x1404 x320) x724 (x381 x320))))
(assert (= (ite (and x1077 x1281) (x1172 x1193) (x215 x1193)) (x1437 x1193)))
(assert (x1153 x556))
(assert (x1153 x229))
(assert (x1153 x979))
(assert (x1153 x1126))
(assert (x1153 x234))
(assert (= (ite (and (not x182) x930 x394) (x487 x1349) (x352 x1349)) (x857 x1349)))
(assert (x1134 x1012))
(assert (x1153 x1176))
(assert (=> (<= x327 10000) (= (x661 x327) (x629 x327))))
(assert (=> (>= 10000 x1373) (= (x661 x1373) (x629 x1373))))
(assert (x1153 x1331))
(assert (x1153 x758))
(assert (x1134 x1536))
(assert (= x1185 (x231 (x629 x1185))))
(assert (= (=> (and (= (x322 (- x805 1)) x1428) (= x643 (< 0 x1428))) (and (=> x643 x720) (=> (not x643) x421))) x1050))
(assert (= x726 (=> (and (= (or x308 (not x848)) x1181) (= (and x993 x206) x308) (= x752 x859) (= x993 (<= x752 x114))) (and (=> (and (= x800 x1331) (= true x875) (= x125 87118632) (= x25 x120) (= 2939843472 x317) (= x542 x1578)) x313) x1181))))
(assert (= (x1457 x917) (ite (= x526 x917) x1471 (x920 x917))))
(assert (x1153 x1174))
(assert (= (x629 274184521717934524641157099916833587206) (x661 274184521717934524641157099916833587206)))
(assert (= (x231 (x629 x815)) x815))
(assert (x1153 x881))
(assert (x1134 x1429))
(assert (= x213 (x231 (x629 x213))))
(assert (= x219 (=> (and (= (x1474 (x629 x575) x65 0) x1245) (< 0 x348) (not (> 911411945 x1330)) (>= 1461501637330902918203684832716283019655932542975 x575) (not (= 1968616202 x1330)) (= 2258409472 x1330) (not (> 1968616202 x1330)) (not (= 2211524764 x1330)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1286) (not (= 1986467848 x1330)) (not (= 2061678023 x1330)) (= (x642 x1245) x1286) (<= 0 x1286) (< x1330 2293535753) (= x65 (x1474 (x629 x1057) (x661 6) 0)) (= (x51 (x629 274184521717934524641157099916833587206)) x348) (= x339 x1286)) (=> (and (= x1405 x339) (= (not (= 0 x1405)) x502) (= x800 x1044) x502 (= x25 x329) (= 0 x312)) x669))))
(assert (=> (>= 10000 x368) (= (x661 x368) (x629 x368))))
(assert (x1153 x364))
(assert (=> (<= x874 10000) (= (x661 x874) (x629 x874))))
(assert (x1153 x1103))
(assert (x1134 x870))
(assert (x1153 x299))
(assert (x1153 x48))
(assert (x1153 x305))
(assert (= (ite (and x1203 x958) (x1082 x844) (x1263 x844)) (x902 x844)))
(assert (= (x231 (x629 x797)) x797))
(assert (= (ite (= x320 x302) x242 (x1579 x320)) (x381 x320)))
(assert (x1153 x456))
(assert (= x359 (x231 (x629 x359))))
(assert (x1153 x818))
(assert (x1153 x694))
(assert (x1153 x996))
(assert (x1153 x935))
(assert (= (x429 x1349) (ite (= x525 x1349) x1097 (x508 x1349))))
(assert (= x1386 (x231 (x629 x1386))))
(assert (x1153 x699))
(assert (x1134 x1271))
(assert (= (x1437 x937) (ite (and x1281 x1077) (x1172 x937) (x215 x937))))
(assert (= (x841 x594) 0))
(assert (= (ite (= x844 x525) x1097 (x508 x844)) (x429 x844)))
(assert (= (ite (= x945 x488) x1118 (x820 x945)) (x1317 x945)))
(assert (x1134 x542))
(assert (= (ite (= x488 x844) x1118 (x820 x844)) (x1317 x844)))
(assert (= (x629 2764855426) (x661 2764855426)))
(assert (x1153 x753))
(assert (= x1110 (or (and x1200 (not x991)) (and x612 (not x300)))))
(assert (= true x318))
(assert (= x1073 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1520) (not (> x1255 x1520)) (= (x1474 (x629 x929) (x661 7) 0) x897) (= x772 (> x775 0)) (<= 0 x775) (= (x1474 (x629 x828) x551 0) x806) (= x422 (x785 1461501637330902918203684832716283019655932542975 x881)) (>= x1520 0) (= (x1474 (x629 x422) x897 0) x551) (= x828 (x785 1461501637330902918203684832716283019655932542975 x390)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x775) (= (x477 x806) x775)) (and (=> (not x772) x1339) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x582) (>= x582 0) (= x819 (x1474 (x629 x929) (x661 9) 0)) (= (x785 1461501637330902918203684832716283019655932542975 x390) x35) (= (x361 x1552) x582) (= (x1474 (x629 x35) x249 0) x1552) (= (x785 1461501637330902918203684832716283019655932542975 x881) x129) x772 (= 0 x964) (= (x1474 (x629 x129) x819 0) x249) (= x582 x1420)) x1112)))))
(assert (x1153 x1285))
(assert (x1134 x1331))
(assert (=> (<= x204 10000) (= (x661 x204) (x629 x204))))
(assert (= x1439 (and x1052 x92)))
(assert (x1153 x15))
(assert (x1153 x1169))
(assert (x1153 x100))
(assert (x1153 x995))
(assert (x1134 x807))
(assert (= x614 (x231 (x629 x614))))
(assert (= (x429 x140) (ite (= x525 x140) x1097 (x508 x140))))
(assert (=> (>= 10000 x542) (= (x629 x542) (x661 x542))))
(assert (= (ite (and x1077 x1281) (x1172 x140) (x215 x140)) (x1437 x140)))
(assert (= (x231 (x661 2512682246)) 2512682246))
(assert (x1153 x1433))
(assert (x1134 x1522))
(assert (x1153 x107))
(assert (= 274184521717934524641157099916833587214 (x231 (x629 274184521717934524641157099916833587214))))
(assert (=> (>= 10000 x280) (= (x629 x280) (x661 x280))))
(assert (x1153 x1177))
(assert (x1153 x499))
(assert (x1153 x1382))
(assert (x1134 x569))
(assert (x1134 x392))
(assert (= x115 x1489))
(assert (x1153 x649))
(assert (= (=> (and (= (x785 1461501637330902918203684832716283019655932542975 x881) x695) (<= 0 x837) (= (= 0 x837) x1494) (= (x1474 (x629 x929) (x661 6) 0) x791) (not (> x1255 x1520)) (= x451 (x1474 (x629 x695) x791 0)) (<= x837 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1520) (<= 0 x1520) (= x837 (x642 x451))) (and (=> (and (= 0 x972) (>= x1254 0) (= x1254 (x829 x1041)) (= x107 x1254) (= (x785 1461501637330902918203684832716283019655932542975 x881) x351) (= x1462 (x1474 (x629 x929) (x661 10) 0)) (not x1494) (= (x1474 (x629 x351) x1462 0) x1041) (<= x1254 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x889) (=> x1494 x141))) x449))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x231 (x661 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= x1207 x1542))
(assert (x1153 x962))
(assert (x1153 x528))
(assert (= x669 (=> (and (not (= 2764855426 x891)) (not (= x891 2743102681)) (not (= 2690754053 x891)) (not (< x891 2690754053)) (= x1276 x1081) (<= 0 x1276) (<= x329 1461501637330902918203684832716283019655932542975) (= (x51 (x629 274184521717934524641157099916833587206)) x233) (= x130 (x1474 (x629 x1044) (x661 5) 0)) (< 0 x233) (= x17 (x1474 (x629 x329) x130 0)) (< x891 2960351575) (<= x1276 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x891 2293535753)) (= 2798343961 x891) (= x1276 (x1023 x17))) (=> (and (= x1307 x1578) (= x1445 x25) (= x167 x1081) (= x800 x40)) x1089))))
(assert (x1134 x362))
(assert (x1153 x1081))
(assert (= (ite (and x1077 x1281) (x1172 x844) (x215 x844)) (x1437 x844)))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x1525) (= x1138 (x1474 (x629 x871) x1170 0)) (< 0 x1290) (= x1170 (x1474 (x629 x473) (x661 9) 0)) (not (= x432 87118632)) (>= x856 0) (= (x361 x911) x856) (< x432 911411945) (= 142201243 x432) (not (= 69947311 x432)) (< x432 468353030) (= x856 x196) (< x432 2293535753) (>= 1461501637330902918203684832716283019655932542975 x871) (= x911 (x1474 (x629 x1525) x1138 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x856) (= (x51 (x629 274184521717934524641157099916833587206)) x1290)) (=> (and (= x496 (and x95 x959)) (= x25 x275) (= x800 x1319) (= x265 x196) (= x1578 x614) (= x95 (<= x265 x1511))) x1400)) x482))
(assert (=> (<= x758 10000) (= (x629 x758) (x661 x758))))
(assert (= (ite (= x1404 x1193) x724 (x381 x1193)) (x820 x1193)))
(assert (= (x1315 x1375) (ite (= x62 x1375) x811 (x429 x1375))))
(assert (= (x629 87118632) (x661 87118632)))
(assert (x1134 x1126))
(assert (x1153 x855))
(assert (= (x231 (x1477 x690 1)) (+ (x231 x690) 1)))
(assert (x1153 x1276))
(assert (x1134 x981))
(assert (= x814 x1207))
(assert (x1134 x40))
(assert (x1153 x593))
(assert (x1153 x1569))
(assert (= x358 (=> (and (= x1027 x1021) (= (x59 (x629 274184521717934524641157099916833587206)) x1231) (= x843 (= x963 274184521717934524641157099916833587218)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70) x890) (= (x59 (x629 274184521717934524641157099916833587206)) x997) x890 (= (>= x1231 0) x36) x563 (= x862 (x1006 (x629 x963))) (= (< (x1006 (x629 x963)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x563) x36 (= x70 (x59 (x629 x963)))) (and (=> (and (not (< x1456 649617121)) (= x1426 (+ x1159 x1119)) (not x493) (= x417 x650) (= (x1474 (x629 274184521717934524641157099916833587206) (x661 1) 0) x866) (not x76) (= (x1474 (x629 x286) (x661 1) 0) x1036) (not (= 649617121 x1456)) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x260 x863)) x813) (= x863 x650) (= (< x463 x650) x493) (not (= x1456 1889567281)) (>= x260 0) (not x883) (= x740 274184521717934524641157099916833587206) (= x13 (x322 (- x463 x650))) (= (x136 x1036) x260) (= x1524 32) (= x76 (or (and (> 64 x310) (= true (<= x310 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x310 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 2835717307 x1456) (= x1108 x286) (= (x322 (- x1493 4)) x310) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x463) (= (x1474 (x629 274184521717934524641157099916833587206) (x661 1) 0) x184) (= (x606 x866) x463) (< 0 x869) (= 1 x970) (not x813) (= 68 x1493) (not (= x1456 2514000705)) (= x883 (> x863 x463)) (>= 1461501637330902918203684832716283019655932542975 x286) (= x1119 x863) (= x556 x850) (<= x260 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587206 x418) (not (= 826074471 x1456)) (not (> 4 x1493)) (= x1027 x1493) (<= 0 x463) (= x286 x174) (= x969 76450787359836037641860180984291677749980919077056822294353438043884394381312) x843 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x863 x260)) (= (x51 (x629 274184521717934524641157099916833587218)) x869) (= x260 x1159)) x751) (=> (not x843) x1326)))))
(assert (x1153 x52))
(assert (x1153 x535))
(assert (= (x381 x56) (ite (= x56 x302) x242 (x1579 x56))))
(assert (= (x231 (x661 1000000000000000000)) 1000000000000000000))
(assert (=> (>= 10000 x1093) (= (x661 x1093) (x629 x1093))))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x231 (x661 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x1153 x874))
(assert (x1153 x779))
(assert (x1153 x861))
(assert (= x540 (=> (and (= x6 (= x1386 0)) (or (and (= 0 x972) x6 (= 0 x107)) (and (= x232 (x785 1461501637330902918203684832716283019655932542975 x881)) (= x1434 (= 0 x853)) (>= x853 0) (= x1083 (x1474 (x629 x1386) (x661 10) 0)) (= (x829 x94) x853) (not x6) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x853) (= x94 (x1474 (x629 x232) x1083 0)) (or (and (= x107 0) x1434 (= 0 x972)) (and (not x1434) (= x853 x107) (= 1 x972)))))) x889)))
(assert (=> (<= x40 10000) (= (x629 x40) (x661 x40))))
(assert (= x1026 (x231 (x629 x1026))))
(assert (= (x1414 x1321) (ite (and (not x384) x503 x592 (not x513)) (x1315 x1321) (ite (and x503 (not x592) (not x384)) (x429 x1321) (ite (and x503 x384) (x429 x1321) (x1223 x1321))))))
(assert (= (ite (= x1325 x62) x811 (x429 x1325)) (x1315 x1325)))
(assert (x1134 x1495))
(assert (=> (<= x567 10000) (= (x629 x567) (x661 x567))))
(assert (= (x231 (x661 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= (=> (= x1386 x549) x540) x628))
(assert (=> (>= 10000 x656) (= (x629 x656) (x661 x656))))
(assert (x678 x535))
(assert (= x422 (x231 (x629 x422))))
(assert (x1134 x1051))
(assert (=> (<= x1328 10000) (= (x661 x1328) (x629 x1328))))
(assert (=> (>= 10000 x448) (= (x629 x448) (x661 x448))))
(assert (= (ite (= x715 x526) x1471 (x920 x715)) (x1457 x715)))
(assert (= (=> (and (= x1072 (> x788 2)) (= x331 (x1215 (x629 x963))) (= x1253 (= 0 x1524)) (= x1475 (x1562 x1349)) (= (< 0 x1475) x1212) (not (= x970 0)) (or (and (= x1349 96) x1253) (and (= x846 (x927 (+ x1098 96))) (not x1253) (= x1454 x1349))) (not x1072) x1463 (= (< (x332 (x629 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1463) (or (not x1212) (and (= (ite x908 1 0) x1275) (not (or (and (< x29 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x29) true)) (> x29 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x1212 (= (x927 (+ x1349 32)) x844) (= x212 x1275) (> x212 0) (= x908 (not x1009)) (= x29 (x1562 x1349)) (= (x1562 x844) x212) (= (= 0 x212) x1009)))) x620) x751))
(assert (x1153 x1288))
(assert (x1153 x687))
(assert (x1134 x625))
(assert (x1153 x597))
(assert (= x1011 (=> (and (<= x534 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x568 (= x534 0)) (= (x1474 (x629 x868) x1353 0) x337) (<= 0 x534) (>= x1520 0) (= (x274 x337) x534) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1520) (not (> x805 x1520)) (= (x1474 (x629 x805) (x661 6) 0) x1353) (= (x785 1461501637330902918203684832716283019655932542975 x881) x868)) (and (=> (and (= x1484 0) (= x507 (x785 1461501637330902918203684832716283019655932542975 x881)) (<= 0 x321) (= x321 (x1020 x479)) (= x479 (x1474 (x629 x507) x918 0)) (= x321 x1443) (= (x1474 (x629 x805) (x661 10) 0) x918) (<= x321 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x568)) x433) (=> x568 x173)))))
(assert (= (x729 x1349) (ite (= x1349 x994) x1221 (x1457 x1349))))
(assert (x1153 x74))
(assert (= (ite (= x302 x545) x242 (x1579 x545)) (x381 x545)))
(assert (x1153 x567))
(assert (x1153 x924))
(assert (x1153 x611))
(assert (x1153 x260))
(assert (x1153 x1028))
(assert (= (x946 x320) (ite (= x654 x320) x1466 (x45 x320))))
(assert (x1134 x861))
(assert (= (ite (= x994 x1325) x1221 (x1457 x1325)) (x729 x1325)))
(assert (=> (>= 10000 x1333) (= (x661 x1333) (x629 x1333))))
(assert (x1134 x579))
(assert (= (x231 (x661 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (=> (>= 10000 x35) (= (x661 x35) (x629 x35))))
(assert (= (x231 (x661 1986467848)) 1986467848))
(assert (=> (<= x74 10000) (= (x661 x74) (x629 x74))))
(assert (= x1442 (=> (and (= (x1474 (x629 x1091) x708 0) x1141) (<= x34 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1474 (x629 x805) (x661 7) 0) x708) (= x991 (= x34 0)) (>= x34 0) (= x981 (x785 1461501637330902918203684832716283019655932542975 x390)) (= x1354 (x1474 (x629 x981) x1141 0)) (= (x785 1461501637330902918203684832716283019655932542975 x881) x1091) (= x34 (x1156 x1354))) (and (=> x991 x1412) (=> (and (= x805 x454) (not x991)) x754)))))
(assert (x1153 x438))
(assert (= x296 (x231 (x629 x296))))
(assert (x1153 x1367))
(assert (x1566 x225 x442))
(assert (x1153 x371))
(assert (x1153 x677))
(assert (x1153 x216))
(assert (x1153 x397))
(assert (x1153 x1333))
(assert (= (+ 1 (x231 x921)) (x231 (x1477 x921 1))))
(assert (x1153 x437))
(assert (= (and (not x843) x1327) x1045))
(assert (= (x231 (x629 x1051)) x1051))
(assert (= (x729 x320) (ite (= x320 x994) x1221 (x1457 x320))))
(assert (= (x231 (x629 x458)) x458))
(assert (x1153 x807))
(assert (= (x831 x1395) (ite (= x1343 x1395) x833 (x546 x1395))))
(assert (= (x45 x1349) (ite (= x1349 x262) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x189 x1349))))
(assert (x1134 x1261))
(assert (= (x429 x1375) (ite (= x1375 x525) x1097 (x508 x1375))))
(assert (= (=> (and (= (x785 1461501637330902918203684832716283019655932542975 x881) x194) (= (> x566 0) x245) (<= 0 x566) (not (> x805 x1520)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x566) (= x297 (x1474 (x629 x805) (x661 7) 0)) (= x270 (x1474 (x629 x194) x297 0)) (<= x1520 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1474 (x629 x1546) x270 0) x166) (<= 0 x1520) (= x566 (x1156 x166)) (= x1546 (x785 1461501637330902918203684832716283019655932542975 x390))) (and (=> (and (= (x295 x461) x818) (= (x1474 (x629 x1126) x1220 0) x461) (= x985 0) (= (x1474 (x629 x805) (x661 9) 0) x521) (= (x785 1461501637330902918203684832716283019655932542975 x881) x1522) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x818) x245 (= x1126 (x785 1461501637330902918203684832716283019655932542975 x390)) (= x1220 (x1474 (x629 x1522) x521 0)) (<= 0 x818) (= x55 x818)) x1238) (=> (not x245) x838))) x756))
(assert (=> (>= 10000 x1130) (= (x661 x1130) (x629 x1130))))
(assert (x1134 x1177))
(assert (=> (>= 10000 x385) (= (x661 x385) (x629 x385))))
(assert (x1153 x596))
(assert (x1153 x329))
(assert (x1153 x942))
(assert (= (ite (and x263 x123 (not x1557)) (x1487 x320) (x737 x320)) (x638 x320)))
(assert (= 911411945 (x231 (x661 911411945))))
(assert (= (x661 2293535753) (x629 2293535753)))
(assert (x1153 x193))
(assert (x1153 x1325))
(assert (x1153 x863))
(assert (x1153 x1239))
(assert (x1153 x1319))
(assert (= (x231 (x629 x1059)) x1059))
(assert (x1153 x1047))
(assert (= x280 (x231 (x629 x280))))
(assert (x1153 x1294))
(assert (x1153 x1551))
(assert (= (and x568 x1423) x281))
(assert (= (x700 x736) (ite (and x387 x503) (x1023 x736) (x1310 x736))))
(assert (x1153 x346))
(assert (x1153 x770))
(assert (= 2293535753 (x231 (x661 2293535753))))
(assert (x1153 x327))
(assert (= (ite (= x1458 x844) x847 (x1529 x844)) (x1497 x844)))
(assert (= (ite (= x118 x302) x242 (x1579 x118)) (x381 x118)))
(assert (x1153 x54))
(assert (= (x231 (x629 x368)) x368))
(assert (x1153 x120))
(assert (= (x661 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x629 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (<= x1368 10000) (= (x661 x1368) (x629 x1368))))
(assert (x1153 x1455))
(assert (x1153 x129))
(assert (x1153 x423))
(assert (x1153 x781))
(assert (=> (<= x1068 10000) (= (x629 x1068) (x661 x1068))))
(assert (x1153 x1213))
(assert (= (x1457 x56) (ite (= x526 x56) x1471 (x920 x56))))
(assert (=> (>= 10000 x1271) (= (x661 x1271) (x629 x1271))))
(assert (x1153 x1158))
(assert (x1153 x328))
(assert (= x817 (x231 (x629 x817))))
(assert (x1153 x165))
(assert (x1153 x261))
(assert (x1153 x1476))
(assert (= x828 (x231 (x629 x828))))
(assert (x1134 x126))
(assert (x1153 x812))
(assert (x1153 x1306))
(assert (x1153 x1479))
(assert (= (x729 x56) (ite (= x994 x56) x1221 (x1457 x56))))
(assert (= (x629 2514000705) (x661 2514000705)))
(assert (= (x231 (x629 x952)) x952))
(assert (x1134 x874))
(assert (x1153 x1397))
(assert (x1153 x2))
(assert (x1153 x1085))
(assert (= (x1487 x844) (ite (and x465 x263 x1151 x123 x1013 (not x1133)) (x1317 x844) (ite (and x1151 x123 x1013 (not x465) x263) (x820 x844) (ite (and x1013 x263 (not x1151) x123) (x381 x844) (ite (and x123 (not x1013) x263) (x1579 x844) (x872 x844)))))))
(assert (x1153 x475))
(assert (x1153 x586))
(assert (=> (>= 10000 x422) (= (x661 x422) (x629 x422))))
(assert (= x758 (x231 (x629 x758))))
(assert (=> (<= x1057 10000) (= (x661 x1057) (x629 x1057))))
(assert (= (ite (= x917 x62) x811 (x429 x917)) (x1315 x917)))
(assert (= (ite (= x651 x594) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x594)) (x1579 x594)))
(assert (x1153 x269))
(assert (= (x1437 x545) (ite (and x1077 x1281) (x1172 x545) (x215 x545))))
(assert (x1153 x1495))
(assert (x1153 x1269))
(assert (x1153 x10))
(assert (= (ite (= x1375 x1193) x788 (x404 x1193)) (x1172 x1193)))
(assert (= (x231 (x629 x542)) x542))
(assert (x1134 x924))
(assert (= (ite (= x1375 x994) x1221 (x1457 x1375)) (x729 x1375)))
(assert (x1134 x1373))
(assert (x1153 x365))
(assert (x1153 x1398))
(assert (= (x831 x1362) (ite (= x1343 x1362) x833 (x546 x1362))))
(assert (x1153 x1113))
(assert (x1153 x1032))
(assert (= x1164 (x231 (x629 x1164))))
(assert (= x873 (x231 (x629 x873))))
(assert (x1134 x695))
(assert (= (ite (and x123 (not x1557) x263) (x1487 x844) (x737 x844)) (x638 x844)))
(assert (x1153 x55))
(assert (x1153 x1057))
(assert (=> (<= x1319 10000) (= (x661 x1319) (x629 x1319))))
(assert (x1153 x662))
(assert (= x1295 (=> (and (= x1538 (x1474 (x629 x924) (x661 7) 0)) (= x1397 (x51 (x629 274184521717934524641157099916833587206))) (not (= x738 468353030)) (>= 1461501637330902918203684832716283019655932542975 x1422) (= x460 (x1474 (x629 x1422) x768 0)) (not (< x738 468353030)) (not (= 635128645 x738)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1488) (>= 1461501637330902918203684832716283019655932542975 x85) (= x738 759532456) (= x1488 (x330 x460)) (> x1397 0) (= (x1474 (x629 x85) x1538 0) x768) (> 2293535753 x738) (= x1488 x1424) (> 911411945 x738) (>= x1488 0)) (=> (and (= x1377 x1424) (= (>= x1032 x1377) x848) (= x25 x1534) (= x800 x656)) x376))))
(assert (= (x841 192) 0))
(assert (= 2061678023 (x231 (x661 2061678023))))
(assert (x1153 x844))
(assert (x1153 x16))
(assert (=> (>= 10000 x942) (= (x661 x942) (x629 x942))))
(assert (x1134 x1185))
(assert (x1134 x511))
(assert (x1153 x174))
(assert (x1153 x1059))
(assert (x1153 x1060))
(assert (= (x231 (x629 x1129)) x1129))
(assert (= (x231 (x629 x328)) x328))
(assert (= (=> (= x765 0) x559) x181))
(assert (=> (>= 10000 x1175) (= (x661 x1175) (x629 x1175))))
(assert (=> (>= 10000 x1177) (= (x629 x1177) (x661 x1177))))
(assert (x1134 x276))
(assert (x1153 x603))
(assert (x1134 x234))
(assert (= x633 x1058))
(assert (=> (<= x966 10000) (= (x661 x966) (x629 x966))))
(assert (x1153 x599))
(assert (x1153 x733))
(assert (= x1068 (x231 (x629 x1068))))
(assert (x1134 x1334))
(assert (= (and x281 x1342) x581))
(assert (x678 x1367))
(assert (x1153 x676))
(assert (x1153 x1441))
(assert (x1153 x837))
(assert (= (x231 (x629 x1226)) x1226))
(assert (=> (<= x93 10000) (= (x629 x93) (x661 x93))))
(assert (x1153 x1259))
(assert (x1153 x656))
(assert (x1153 x1330))
(assert (= (ite (= x62 x1017) x811 (x429 x1017)) (x1315 x1017)))
(assert (=> (>= 10000 x458) (= (x661 x458) (x629 x458))))
(assert (= (x231 (x629 x575)) x575))
(assert (= (=> (= (< 0 x788) x263) (and (=> (not x263) x620) (=> (and (= (x51 (x629 x301)) x826) (= (x927 (+ x1411 36)) x603) (= (x927 (+ 32 x1411)) x917) (= (< 0 x69) x1013) (>= 1461501637330902918203684832716283019655932542975 x301) (= x69 (x1579 x1411)) (= x1559 (x927 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1190))) (= (x927 (+ 128 x603)) x1360) (= x175 0) (= (x322 (- x1028 x1411)) x1479) (or (and (= 0 x52) (not x1013)) (and (= x1360 x302) (= x1151 (< 32 x69)) x1013 (= (x1579 x594) x242) (or (and (not x1151) (= x52 32)) (and (= x1404 (x927 (+ 96 x1028))) (= (x927 (+ x1411 64)) x118) (= x465 (< 64 x69)) (or (and x465 (or (and (= (x927 (+ x1411 128)) x56) (= 128 x52) x1133 (= (x1317 x56) x886) (= (< 128 x69) x413) (not x413) (= (x927 (+ x1028 160)) x644)) (and (not x1133) (= x52 96))) (= (x927 (+ x1028 128)) x488) (= x1133 (< 96 x69)) (= (x927 (+ 96 x1411)) x1325) (= x1118 (x820 x1325))) (and (not x465) (= 64 x52))) (= x724 (x381 x118)) x1151)) (= x917 x594))) (= x301 (x303 x48)) (= (x1279 x917) x499) x529 (= (x1278 x1375) x1184) (> x788 0) x263 (= x1122 (x785 1461501637330902918203684832716283019655932542975 x390)) (= x1321 (x927 (+ x138 160))) (or (not x1557) (and x1557 (= x37 (x927 (+ x1360 x69))))) (> x1184 0) (= x1557 (< x69 x52)) (= (x322 (- x1479 32)) x1306) (= (x1278 x1321) x165) (= x529 (> x826 0)) (= (x927 (+ 68 x1411)) x16) (= (x927 (+ 96 x603)) x651) (= x1190 (x785 26959946667150639794667015087019630673637144422540572481103610249215 x499)) (= x548 x48) (= (x927 (+ x1411 100)) x1028)) x375))) x604))
(assert (x1153 x474))
(assert (= (ite (= x62 x1161) x811 (x429 x1161)) (x1315 x1161)))
(assert (x1153 x72))
(assert (= (and x1183 x1494) x1570))
(assert (= (x1457 x1161) (ite (= x526 x1161) x1471 (x920 x1161))))
(assert (x1153 x1241))
(assert (= (x661 635128645) (x629 635128645)))
(assert (= (ite (and x1077 x1281) (x1172 x762) (x215 x762)) (x1437 x762)))
(assert (= (x1579 x1161) (ite (= x1161 x651) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x673 x1161))))
(assert (= x591 x151))
(assert (= x805 (x231 (x629 x805))))
(assert (= x7 (x231 (x629 x7))))
(assert (x1134 x374))
(assert (= (ite (= x1349 x302) x242 (x1579 x1349)) (x381 x1349)))
(assert (= x578 (x231 (x629 x578))))
(assert (= (x1315 x945) (ite (= x62 x945) x811 (x429 x945))))
(assert (x1153 x1124))
(assert (x1153 x1091))
(assert (x1153 x29))
(assert (x1153 x150))
(assert (= (ite (and x930 x1468 x1399 x394 (not x90) x157) (x1497 x1349) (ite (and (not x1468) x1399 x157 x394 x930) (x1529 x1349) (ite (and x930 (not x1399) x394 x157) (x946 x1349) (ite (and (not x157) x394 x930) (x45 x1349) (x573 x1349))))) (x487 x1349)))
(assert (x1134 x280))
(assert (= x421 (=> (= 0 x296) x607)))
(assert (= x867 x583))
(assert (= (=> (= x500 x296) x607) x1425))
(assert (x1153 x1108))
(assert (x1153 x1260))
(assert (=> (>= 10000 x507) (= (x661 x507) (x629 x507))))
(assert (x1153 x235))
(assert (x1153 x320))
(assert (x1153 x545))
(assert (= (x841 x545) 0))
(assert (x1153 x569))
(assert (x1153 x651))
(assert (x1153 x1528))
(assert (x1134 x753))
(assert (x1153 x434))
(assert (= 604800 (x231 (x661 604800))))
(assert (x1153 x742))
(assert (= (ite (= x994 x1017) x1221 (x1457 x1017)) (x729 x1017)))
(assert (x1153 x259))
(assert (x1153 x1068))
(assert (= (ite (and x1327 x843) (x1313 x1349) (x1543 x1349)) (x1035 x1349)))
(assert (x1134 x1422))
(assert (= (x729 x594) (ite (= x594 x994) x1221 (x1457 x594))))
(assert (x1153 x1307))
(assert (x1153 x740))
(assert (=> (>= 10000 x765) (= (x629 x765) (x661 x765))))
(assert (= (ite (= x844 x1375) x788 (x404 x844)) (x1172 x844)))
(assert (= (or x82 (and x1063 x245)) x342))
(assert (x1153 x144))
(assert (x1153 x989))
(assert (x1153 x865))
(check-sat)
