(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x1961 0)) (((x105 (x422 x1961) (x1099 x1961) (x561 Int)) (x308 (x642 Int)) (x1258 (x1608 x1961) (x426 Int)))))
(declare-fun x1567 () Int)
(declare-fun x1166 () Int)
(declare-fun x577 () Int)
(declare-fun x876 () Int)
(declare-fun x1604 () Bool)
(declare-fun x31 (Int) Int)
(declare-fun x771 () Bool)
(declare-fun x14 () Int)
(declare-fun x1991 () Int)
(declare-fun x904 () Bool)
(declare-fun x800 () Int)
(declare-fun x336 () Int)
(declare-fun x633 () Int)
(declare-fun x385 () Bool)
(declare-fun x1194 () Int)
(declare-fun x1017 () Int)
(declare-fun x111 () Int)
(declare-fun x1922 () Int)
(declare-fun x1377 () Int)
(declare-fun x1446 () Int)
(declare-fun x148 () Bool)
(declare-fun x1547 () Int)
(declare-fun x246 () Int)
(declare-fun x1933 () Bool)
(declare-fun x104 () Bool)
(declare-fun x1468 () x1961)
(declare-fun x1467 () Int)
(declare-fun x1689 () Bool)
(declare-fun x1202 () Int)
(declare-fun x822 () Int)
(declare-fun x177 () Int)
(declare-fun x9 () Int)
(declare-fun x1939 (Int) Int)
(declare-fun x981 () Int)
(declare-fun x1094 () Int)
(declare-fun x1339 () Bool)
(declare-fun x794 () Int)
(declare-fun x1419 () Int)
(declare-fun x579 () Int)
(declare-fun x64 () Int)
(declare-fun x1694 () Int)
(declare-fun x1110 () Int)
(declare-fun x556 () x1961)
(declare-fun x1113 () Int)
(declare-fun x35 () Int)
(declare-fun x1300 () Int)
(declare-fun x920 () Int)
(declare-fun x689 (Int) Int)
(declare-fun x254 () Int)
(declare-fun x1224 () Int)
(declare-fun x713 () Int)
(declare-fun x1538 () Int)
(declare-fun x1760 () Int)
(declare-fun x742 () Int)
(declare-fun x175 (Int) Int)
(declare-fun x1511 () Int)
(declare-fun x159 () Int)
(declare-fun x1582 () Int)
(declare-fun x557 () Int)
(declare-fun x1381 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x1437 () Int)
(declare-fun x1026 () Bool)
(declare-fun x392 () Int)
(declare-fun x1484 (Int) Int)
(declare-fun x357 () Int)
(declare-fun x1959 () Int)
(declare-fun x1084 () Int)
(declare-fun x899 () Int)
(declare-fun x262 () Int)
(declare-fun x245 () Int)
(declare-fun x627 () Int)
(declare-fun x1975 () Int)
(declare-fun x1550 () Int)
(declare-fun x1450 () Int)
(declare-fun x1286 () Int)
(declare-fun x1274 () Bool)
(declare-fun x761 () Int)
(declare-fun x874 () Int)
(declare-fun x1777 () Int)
(declare-fun x1697 () Int)
(declare-fun x1659 () Int)
(declare-fun x1185 () Int)
(declare-fun x1024 () Bool)
(declare-fun x588 () Int)
(declare-fun x1390 () Int)
(declare-fun x380 () Int)
(declare-fun x846 () x1961)
(declare-fun x1165 () Int)
(declare-fun x1242 () Int)
(declare-fun x74 () Int)
(declare-fun x636 () Int)
(declare-fun x412 () Bool)
(declare-fun x1115 (Int) Int)
(declare-fun x1774 (Int) Int)
(declare-fun x644 () Int)
(declare-fun x953 () Int)
(declare-fun x1307 () Int)
(declare-fun x1360 () Bool)
(declare-fun x216 () Int)
(declare-fun x59 () Bool)
(declare-fun x51 () Bool)
(declare-fun x1052 () Int)
(declare-fun x1698 () Int)
(declare-fun x181 () Int)
(declare-fun x532 () Int)
(declare-fun x1212 () Int)
(declare-fun x418 () Int)
(declare-fun x1042 () Int)
(declare-fun x770 () x1961)
(declare-fun x918 () Int)
(declare-fun x646 () Int)
(declare-fun x1572 () Int)
(declare-fun x861 () Int)
(declare-fun x56 (Int) Int)
(declare-fun x509 () Int)
(declare-fun x1121 () Int)
(declare-fun x1707 () Int)
(declare-fun x1821 () Bool)
(declare-fun x1086 () Int)
(declare-fun x1887 () Int)
(declare-fun x1843 () Int)
(declare-fun x349 () Int)
(declare-fun x1422 () Bool)
(declare-fun x346 () Int)
(declare-fun x1298 () Int)
(declare-fun x172 () Bool)
(declare-fun x980 () Int)
(declare-fun x454 () Int)
(declare-fun x1984 () Bool)
(declare-fun x1641 () Int)
(declare-fun x1907 () Int)
(declare-fun x1006 () Int)
(declare-fun x1964 () Int)
(declare-fun x824 () Int)
(declare-fun x1685 () Int)
(declare-fun x921 () Bool)
(declare-fun x555 () Int)
(declare-fun x1948 () Int)
(declare-fun x1221 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x70 () Int)
(declare-fun x442 () Int)
(declare-fun x1619 () Int)
(declare-fun x652 () Bool)
(declare-fun x952 () Int)
(declare-fun x1181 () Int)
(declare-fun x209 () Bool)
(declare-fun x1756 () Int)
(declare-fun x1865 () Int)
(declare-fun x1195 () Int)
(declare-fun x628 () Int)
(declare-fun x1521 () Int)
(declare-fun x1308 () Bool)
(declare-fun x1217 () Int)
(declare-fun x1974 () Int)
(declare-fun x647 () Int)
(declare-fun x1737 () Int)
(declare-fun x1589 () Int)
(declare-fun x1499 () Int)
(declare-fun x563 () Bool)
(declare-fun x519 () Bool)
(declare-fun x482 () Int)
(declare-fun x1544 () Int)
(declare-fun x108 (Int) Int)
(declare-fun x1225 () Int)
(declare-fun x135 () Bool)
(declare-fun x1714 () Int)
(declare-fun x1973 () x1961)
(declare-fun x1983 () Int)
(declare-fun x591 () Int)
(declare-fun x1669 () Int)
(declare-fun x546 () Bool)
(declare-fun x174 () Int)
(declare-fun x276 () Bool)
(declare-fun x522 () Int)
(declare-fun x233 () Int)
(declare-fun x319 (Int) Int)
(declare-fun x1129 () Bool)
(declare-fun x1399 () Int)
(declare-fun x363 () Int)
(declare-fun x1720 () Int)
(declare-fun x156 () Int)
(declare-fun x1597 () Bool)
(declare-fun x1127 (x1961) Int)
(declare-fun x1631 () Int)
(declare-fun x219 () Int)
(declare-fun x1361 () Int)
(declare-fun x1204 () Int)
(declare-fun x1556 () Int)
(declare-fun x1354 () Int)
(declare-fun x707 () Int)
(declare-fun x13 () Int)
(declare-fun x1757 () Int)
(declare-fun x355 () Bool)
(declare-fun x1601 () Int)
(declare-fun x613 () Int)
(declare-fun x63 () Bool)
(declare-fun x1178 () Int)
(declare-fun x827 () Int)
(declare-fun x768 () Int)
(declare-fun x1705 () Int)
(declare-fun x1744 () Bool)
(declare-fun x714 () Bool)
(declare-fun x630 () Int)
(declare-fun x884 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x333 () Bool)
(declare-fun x1554 () Int)
(declare-fun x721 () Int)
(declare-fun x954 () Int)
(declare-fun x1711 () Int)
(declare-fun x230 () Int)
(declare-fun x361 () Int)
(declare-fun x1326 () Int)
(declare-fun x1151 () Bool)
(declare-fun x1943 () Int)
(declare-fun x429 () Bool)
(declare-fun x1858 () Bool)
(declare-fun x1794 () Int)
(declare-fun x1917 () Bool)
(declare-fun x749 () Bool)
(declare-fun x381 () Int)
(declare-fun x263 () Int)
(declare-fun x784 () Int)
(declare-fun x1219 () Bool)
(declare-fun x1128 () Int)
(declare-fun x1069 () Int)
(declare-fun x1951 () Int)
(declare-fun x1152 () Bool)
(declare-fun x1610 () Int)
(declare-fun x818 (Int Int) Int)
(declare-fun x907 () Int)
(declare-fun x1750 () Int)
(declare-fun x1059 () Int)
(declare-fun x1831 () Int)
(declare-fun x1853 () Int)
(declare-fun x599 () Int)
(declare-fun x1009 () Int)
(declare-fun x1877 (Int) Int)
(declare-fun x1755 () Bool)
(declare-fun x831 () Bool)
(declare-fun x669 () Bool)
(declare-fun x1232 (Int) Int)
(declare-fun x838 () Bool)
(declare-fun x1921 () Int)
(declare-fun x324 () Bool)
(declare-fun x654 () x1961)
(declare-fun x1251 () Int)
(declare-fun x1795 () Int)
(declare-fun x203 () Int)
(declare-fun x1866 (Int) Int)
(declare-fun x1022 (Int) Int)
(declare-fun x1019 () Int)
(declare-fun x145 () Int)
(declare-fun x741 () Bool)
(declare-fun x1771 (Int) Int)
(declare-fun x479 () Int)
(declare-fun x1261 () Int)
(declare-fun x882 () x1961)
(declare-fun x582 () Bool)
(declare-fun x975 () Int)
(declare-fun x932 () Int)
(declare-fun x569 () Bool)
(declare-fun x67 () Bool)
(declare-fun x501 () Bool)
(declare-fun x68 () Int)
(declare-fun x1383 () Bool)
(declare-fun x329 (x1961) Int)
(declare-fun x763 () Int)
(declare-fun x1004 () Bool)
(declare-fun x586 () Bool)
(declare-fun x514 () Bool)
(declare-fun x1903 () Int)
(declare-fun x1053 () Int)
(declare-fun x1717 () Bool)
(declare-fun x405 () Int)
(declare-fun x1677 () Int)
(declare-fun x1739 () Int)
(declare-fun x643 (Int) Int)
(declare-fun x1576 () Int)
(declare-fun x853 () Int)
(declare-fun x852 () Bool)
(declare-fun x799 () Int)
(declare-fun x811 () Int)
(declare-fun x1109 () Int)
(declare-fun x1588 () Int)
(declare-fun x382 () Int)
(declare-fun x1644 () Int)
(declare-fun x1664 () Bool)
(declare-fun x553 () Bool)
(declare-fun x604 () Int)
(declare-fun x1491 () Int)
(declare-fun x151 () Int)
(declare-fun x335 () Int)
(declare-fun x1811 () Int)
(declare-fun x457 () Int)
(declare-fun x1941 () Int)
(declare-fun x1733 () Int)
(declare-fun x1767 () Int)
(declare-fun x200 () Int)
(declare-fun x622 (Int) Int)
(declare-fun x694 () Int)
(declare-fun x1533 () Int)
(declare-fun x525 () Int)
(declare-fun x1938 () x1961)
(declare-fun x984 () Int)
(declare-fun x416 () Int)
(declare-fun x994 () Int)
(declare-fun x1710 () Int)
(declare-fun x558 () Int)
(declare-fun x1247 () Bool)
(declare-fun x1056 () Int)
(declare-fun x973 () Int)
(declare-fun x1461 () Bool)
(declare-fun x1368 () Int)
(declare-fun x165 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x62 () Int)
(declare-fun x431 () Int)
(declare-fun x641 () Int)
(declare-fun x253 () Int)
(declare-fun x1703 () Int)
(declare-fun x366 () Int)
(declare-fun x144 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x189 () Int)
(declare-fun x1453 () Int)
(declare-fun x1723 () Int)
(declare-fun x1552 () Bool)
(declare-fun x552 () Int)
(declare-fun x1460 (Int) Int)
(declare-fun x536 () Int)
(declare-fun x534 () Bool)
(declare-fun x1276 () Int)
(declare-fun x1787 () Int)
(declare-fun x1713 () Int)
(declare-fun x1013 () Bool)
(declare-fun x1648 () Int)
(declare-fun x1336 () Int)
(declare-fun x941 () Int)
(declare-fun x1497 () Int)
(declare-fun x1838 () Int)
(declare-fun x139 () Int)
(declare-fun x1473 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x331 () Bool)
(declare-fun x37 () Bool)
(declare-fun x698 () Int)
(declare-fun x858 () Int)
(declare-fun x456 () x1961)
(declare-fun x1599 () Int)
(declare-fun x1046 (Int) Int)
(declare-fun x438 () Int)
(declare-fun x1555 (Int) Int)
(declare-fun x118 (Int) Int)
(declare-fun x1281 () Bool)
(declare-fun x830 () Int)
(declare-fun x1942 () Int)
(declare-fun x1509 () Int)
(declare-fun x1122 () Int)
(declare-fun x1210 () Int)
(declare-fun x1810 () Bool)
(declare-fun x217 () x1961)
(declare-fun x301 () Int)
(declare-fun x211 (Int) Int)
(declare-fun x1665 () Int)
(declare-fun x1629 () Int)
(declare-fun x986 () Bool)
(declare-fun x180 () Bool)
(declare-fun x489 () Int)
(declare-fun x371 () Bool)
(declare-fun x271 () Int)
(declare-fun x1500 () Int)
(declare-fun x1622 (Int) Int)
(declare-fun x267 () Bool)
(declare-fun x250 () Int)
(declare-fun x601 () Int)
(declare-fun x1505 () Bool)
(declare-fun x600 () Int)
(declare-fun x391 () Int)
(declare-fun x430 () Int)
(declare-fun x511 () Int)
(declare-fun x1384 () Int)
(declare-fun x841 () Int)
(declare-fun x1747 () Bool)
(declare-fun x548 () x1961)
(declare-fun x1546 () Int)
(declare-fun x592 () Int)
(declare-fun x638 () Int)
(declare-fun x409 () Int)
(declare-fun x110 () Int)
(declare-fun x1424 () Int)
(declare-fun x755 () Bool)
(declare-fun x614 () Int)
(declare-fun x1679 () Int)
(declare-fun x1256 () Bool)
(declare-fun x1177 () Int)
(declare-fun x1015 () Int)
(declare-fun x1156 () Int)
(declare-fun x815 () Int)
(declare-fun x1674 () x1961)
(declare-fun x1252 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x1457 () Int)
(declare-fun x658 () Int)
(declare-fun x1119 () Int)
(declare-fun x42 () Bool)
(declare-fun x408 () Int)
(declare-fun x1494 () Int)
(declare-fun x758 () Int)
(declare-fun x1540 () Int)
(declare-fun x1636 () Int)
(declare-fun x607 () Int)
(declare-fun x697 () Bool)
(declare-fun x278 () Int)
(declare-fun x359 () Bool)
(declare-fun x1021 () Int)
(declare-fun x256 () Int)
(declare-fun x902 () x1961)
(declare-fun x1244 () Int)
(declare-fun x496 (Int Int) Int)
(declare-fun x940 () Bool)
(declare-fun x1819 () Bool)
(declare-fun x1277 () Int)
(declare-fun x417 () Int)
(declare-fun x126 () Int)
(declare-fun x1228 () Int)
(declare-fun x348 () Int)
(declare-fun x1905 () Int)
(declare-fun x1238 () Int)
(declare-fun x1249 () Int)
(declare-fun x970 () Bool)
(declare-fun x397 (Int) Int)
(declare-fun x955 () Int)
(declare-fun x1325 () Int)
(declare-fun x744 () Int)
(declare-fun x1646 () Bool)
(declare-fun x1616 () Int)
(declare-fun x1342 () x1961)
(declare-fun x510 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x623 () Int)
(declare-fun x1366 () Int)
(declare-fun x307 () Int)
(declare-fun x1229 () Bool)
(declare-fun x1285 () Int)
(declare-fun x804 () Bool)
(declare-fun x1712 (x1961) Int)
(declare-fun x705 () Bool)
(declare-fun x202 () Int)
(declare-fun x867 () Bool)
(declare-fun x1451 () Int)
(declare-fun x1770 () Bool)
(declare-fun x813 () Bool)
(declare-fun x1930 () Int)
(declare-fun x1262 () Bool)
(declare-fun x1972 () Bool)
(declare-fun x316 () Int)
(declare-fun x1466 () Bool)
(declare-fun x857 () Int)
(declare-fun x1828 () Int)
(declare-fun x862 () x1961)
(declare-fun x1931 () Int)
(declare-fun x1765 () Bool)
(declare-fun x692 () Int)
(declare-fun x1275 () Int)
(declare-fun x1055 () x1961)
(declare-fun x112 () Int)
(declare-fun x708 () Int)
(declare-fun x730 () Int)
(declare-fun x559 () x1961)
(declare-fun x96 () Int)
(declare-fun x962 () Int)
(declare-fun x849 () Int)
(declare-fun x1363 () Int)
(declare-fun x908 (Int) Int)
(declare-fun x1162 () Int)
(declare-fun x1227 (x1961) Int)
(declare-fun x1057 () Int)
(declare-fun x790 () x1961)
(declare-fun x1479 () Int)
(declare-fun x234 () Int)
(declare-fun x1150 () Int)
(declare-fun x1264 () Int)
(declare-fun x595 () Int)
(declare-fun x1140 () Int)
(declare-fun x1802 () Int)
(declare-fun x1347 () Int)
(declare-fun x313 () Int)
(declare-fun x33 () Int)
(declare-fun x1649 () Int)
(declare-fun x57 () Int)
(declare-fun x956 () Bool)
(declare-fun x221 () Int)
(declare-fun x1722 () Int)
(declare-fun x728 () Bool)
(declare-fun x434 () Int)
(declare-fun x208 () Int)
(declare-fun x101 () Int)
(declare-fun x23 () Bool)
(declare-fun x182 (Int) Int)
(declare-fun x1161 () Int)
(declare-fun x872 () Int)
(declare-fun x488 () Int)
(declare-fun x1768 () Bool)
(declare-fun x1434 () Int)
(declare-fun x286 () Int)
(declare-fun x573 () Int)
(declare-fun x1748 () Int)
(declare-fun x1032 () Int)
(declare-fun x86 () Int)
(declare-fun x1863 () Int)
(declare-fun x402 () Int)
(declare-fun x1957 () Bool)
(declare-fun x1340 () Int)
(declare-fun x671 () x1961)
(declare-fun x1035 () Int)
(declare-fun x1661 () Int)
(declare-fun x1239 () Int)
(declare-fun x1986 () Int)
(declare-fun x394 () Int)
(declare-fun x95 () Int)
(declare-fun x1078 () Int)
(declare-fun x817 (x1961) Int)
(declare-fun x448 () Int)
(declare-fun x439 () x1961)
(declare-fun x531 () Int)
(declare-fun x765 (Int) Int)
(declare-fun x146 () Int)
(declare-fun x425 () Int)
(declare-fun x1850 () Int)
(declare-fun x1741 () Int)
(declare-fun x1155 (Int) Int)
(declare-fun x597 () x1961)
(declare-fun x376 () Int)
(declare-fun x1839 () Int)
(declare-fun x1971 () Int)
(declare-fun x1330 () Bool)
(declare-fun x1761 (Int) Int)
(declare-fun x411 () Int)
(declare-fun x1875 (x1961) Int)
(declare-fun x1025 () Int)
(declare-fun x1029 () Int)
(declare-fun x950 () Int)
(declare-fun x44 () Int)
(declare-fun x2 () Int)
(declare-fun x114 () Int)
(declare-fun x1415 () Int)
(declare-fun x1566 () Int)
(declare-fun x1205 () Bool)
(declare-fun x610 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x1537 () Bool)
(declare-fun x507 () Int)
(declare-fun x1240 () Int)
(declare-fun x1727 () Bool)
(declare-fun x881 () Int)
(declare-fun x990 () Int)
(declare-fun x1617 () Int)
(declare-fun x1820 () Int)
(declare-fun x1427 () Int)
(declare-fun x1889 () Int)
(declare-fun x1657 () Int)
(declare-fun x320 () Int)
(declare-fun x629 () Int)
(declare-fun x675 () Int)
(declare-fun x80 () Int)
(declare-fun x871 () Int)
(declare-fun x1539 () Bool)
(declare-fun x475 () Int)
(declare-fun x1775 () Int)
(declare-fun x693 () Int)
(declare-fun x1583 () Int)
(declare-fun x964 () Int)
(declare-fun x473 () Int)
(declare-fun x900 () Int)
(declare-fun x1172 () Int)
(declare-fun x1353 () Int)
(declare-fun x1338 () Int)
(declare-fun x1337 () Int)
(declare-fun x1222 (Int) Int)
(declare-fun x764 (Int) Int)
(declare-fun x883 () Bool)
(declare-fun x45 () Int)
(declare-fun x1691 () Int)
(declare-fun x1531 () Int)
(declare-fun x1967 () Int)
(declare-fun x1309 () Int)
(declare-fun x251 () Int)
(declare-fun x284 () Bool)
(declare-fun x1675 () Int)
(declare-fun x184 () Int)
(declare-fun x395 () Bool)
(declare-fun x674 () Bool)
(declare-fun x1829 () Int)
(declare-fun x1328 () Int)
(declare-fun x343 () Int)
(declare-fun x1660 () Int)
(declare-fun x1746 () Int)
(declare-fun x911 () Int)
(declare-fun x1945 () Int)
(declare-fun x769 () Int)
(declare-fun x1870 () Int)
(declare-fun x1293 () Int)
(declare-fun x158 () Int)
(declare-fun x12 () Int)
(declare-fun x515 () Int)
(declare-fun x1906 () Int)
(declare-fun x666 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x1159 () Int)
(declare-fun x1871 () Int)
(declare-fun x1092 () Int)
(declare-fun x1618 () Int)
(declare-fun x983 () Int)
(declare-fun x547 () Bool)
(declare-fun x855 () x1961)
(declare-fun x89 () Bool)
(declare-fun x583 () Bool)
(declare-fun x1080 () Int)
(declare-fun x153 () Int)
(declare-fun x341 () Int)
(declare-fun x1742 () Int)
(declare-fun x1370 () Int)
(declare-fun x1885 () Int)
(declare-fun x1458 () Int)
(declare-fun x1836 () Int)
(declare-fun x297 () Int)
(declare-fun x1813 () Int)
(declare-fun x1541 () Int)
(declare-fun x1076 () Int)
(declare-fun x1423 () Int)
(declare-fun x490 () Int)
(declare-fun x523 () Bool)
(declare-fun x1992 () x1961)
(declare-fun x598 () Int)
(declare-fun x1895 () Int)
(declare-fun x294 () Int)
(declare-fun x1557 () Bool)
(declare-fun x793 () Int)
(declare-fun x11 () Int)
(declare-fun x1611 () Int)
(declare-fun x999 () Int)
(declare-fun x1058 () Bool)
(declare-fun x270 () Int)
(declare-fun x43 () x1961)
(declare-fun x1299 () Int)
(declare-fun x8 () Int)
(declare-fun x164 () Int)
(declare-fun x312 (Int) Int)
(declare-fun x513 () Bool)
(declare-fun x238 () Bool)
(declare-fun x1051 (Int) Int)
(declare-fun x891 () Int)
(declare-fun x772 () Int)
(declare-fun x1132 () Int)
(declare-fun x967 () Int)
(declare-fun x1173 () Int)
(declare-fun x1780 () Int)
(declare-fun x16 () Int)
(declare-fun x396 () Bool)
(declare-fun x183 () Int)
(declare-fun x130 () Int)
(declare-fun x757 () Bool)
(declare-fun x1970 () Bool)
(declare-fun x1279 () Int)
(declare-fun x843 () Int)
(declare-fun x1357 () Int)
(declare-fun x484 () Int)
(declare-fun x1640 () x1961)
(declare-fun x1315 () Int)
(declare-fun x345 (x1961) Int)
(declare-fun x1112 () Int)
(declare-fun x1814 (Int) Int)
(declare-fun x1561 () Int)
(declare-fun x215 () Bool)
(declare-fun x34 () Int)
(declare-fun x1718 () Int)
(declare-fun x249 () Int)
(declare-fun x1253 () Int)
(declare-fun x1671 () Int)
(declare-fun x497 () Int)
(declare-fun x585 () Int)
(declare-fun x168 (Int) Int)
(declare-fun x326 () Int)
(declare-fun x1847 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1269 () Int)
(declare-fun x224 () Bool)
(declare-fun x1048 () x1961)
(declare-fun x178 () Int)
(declare-fun x222 () Int)
(declare-fun x1079 () Int)
(declare-fun x134 (Int Int) Int)
(declare-fun x492 () Int)
(declare-fun x302 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x1732 () Int)
(declare-fun x789 () Int)
(declare-fun x1167 () Int)
(declare-fun x401 () Int)
(declare-fun x1060 () x1961)
(declare-fun x1854 () Int)
(declare-fun x419 () Int)
(declare-fun x1116 () Int)
(declare-fun x834 () Bool)
(declare-fun x137 () Int)
(declare-fun x166 () Int)
(declare-fun x365 (Int) Int)
(declare-fun x1881 (Int) Int)
(declare-fun x227 () Int)
(declare-fun x1391 (Int) Int)
(declare-fun x1876 () Int)
(declare-fun x1643 () Int)
(declare-fun x619 () Int)
(declare-fun x187 () Int)
(declare-fun x485 () Int)
(declare-fun x441 () Int)
(declare-fun x1144 () Int)
(declare-fun x848 () Int)
(declare-fun x590 () Bool)
(declare-fun x1523 () Int)
(declare-fun x94 () Int)
(declare-fun x1513 () Int)
(declare-fun x887 () Int)
(declare-fun x1799 () Int)
(declare-fun x1507 () Bool)
(declare-fun x283 () Int)
(declare-fun x1966 () Bool)
(declare-fun x1271 () Int)
(declare-fun x1658 () Bool)
(declare-fun x1063 (Int) Int)
(declare-fun x228 () Bool)
(declare-fun x1351 () Int)
(declare-fun x1904 () Bool)
(declare-fun x229 () x1961)
(declare-fun x661 () Int)
(declare-fun x279 () Bool)
(declare-fun x1600 (x1961) Int)
(declare-fun x957 () Bool)
(declare-fun x750 () Bool)
(declare-fun x339 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x938 () Bool)
(declare-fun x373 () Int)
(declare-fun x358 () Bool)
(declare-fun x847 () Int)
(declare-fun x934 () Int)
(declare-fun x1440 () Int)
(declare-fun x791 () Int)
(declare-fun x389 () Int)
(declare-fun x1085 () Int)
(declare-fun x352 () Bool)
(declare-fun x1579 () Int)
(declare-fun x1082 (x1961) Int)
(declare-fun x943 () Int)
(declare-fun x731 () Bool)
(declare-fun x1638 () Int)
(declare-fun x1289 () Bool)
(declare-fun x1962 () Int)
(declare-fun x988 () Int)
(declare-fun x1913 () Int)
(declare-fun x1655 () Bool)
(declare-fun x1950 () Int)
(declare-fun x1935 () Int)
(declare-fun x1606 () Int)
(declare-fun x1993 (Int) Int)
(declare-fun x133 () Bool)
(declare-fun x1818 () Int)
(declare-fun x196 () Int)
(declare-fun x218 () Int)
(declare-fun x919 () Int)
(declare-fun x458 () Int)
(declare-fun x726 () Int)
(declare-fun x1064 () Bool)
(declare-fun x751 () Int)
(declare-fun x1104 () Int)
(declare-fun x745 () Bool)
(declare-fun x1543 () Int)
(declare-fun x1305 () Int)
(declare-fun x121 () Int)
(declare-fun x593 () Int)
(declare-fun x296 () Int)
(declare-fun x1462 () x1961)
(declare-fun x805 () Int)
(declare-fun x1893 () Int)
(declare-fun x1762 () Int)
(declare-fun x657 () Int)
(declare-fun x1102 (Int) Int)
(declare-fun x1672 () Int)
(declare-fun x864 (x1961) Int)
(declare-fun x1153 () Bool)
(declare-fun x1536 () Int)
(declare-fun x1926 () Int)
(declare-fun x993 () Int)
(declare-fun x1028 () Int)
(declare-fun x472 () Int)
(declare-fun x842 (Int) Int)
(declare-fun x198 () Int)
(declare-fun x1313 () Int)
(declare-fun x1667 () Bool)
(declare-fun x1726 () Int)
(declare-fun x75 () x1961)
(declare-fun x1682 () Int)
(declare-fun x1688 () Bool)
(declare-fun x498 (Int) Int)
(declare-fun x1841 (Int) Int)
(declare-fun x1856 () Bool)
(declare-fun x718 (Int) Int)
(declare-fun x676 () Int)
(declare-fun x461 () Bool)
(declare-fun x1977 () Bool)
(declare-fun x323 () Bool)
(declare-fun x1851 () Int)
(declare-fun x1226 () Int)
(declare-fun x1010 () x1961)
(declare-fun x735 () Int)
(declare-fun x1371 () Int)
(declare-fun x1637 () Int)
(declare-fun x4 () Int)
(declare-fun x870 () Int)
(declare-fun x710 () Bool)
(declare-fun x1594 () Int)
(declare-fun x309 (Int) Int)
(declare-fun x76 (Int Int) Int)
(declare-fun x1844 () Int)
(declare-fun x720 () Int)
(declare-fun x79 () Int)
(declare-fun x1389 () Int)
(declare-fun x701 () Bool)
(declare-fun x124 () Int)
(declare-fun x407 () Int)
(declare-fun x1002 () Int)
(declare-fun x1049 () Int)
(declare-fun x314 () Int)
(declare-fun x528 () Int)
(declare-fun x241 () Int)
(declare-fun x1220 (Int) Int)
(declare-fun x1421 () Int)
(declare-fun x1169 () Int)
(declare-fun x684 () Int)
(declare-fun x226 () Int)
(declare-fun x737 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x1400 () Int)
(declare-fun x99 () Bool)
(declare-fun x945 () Bool)
(declare-fun x494 (Int) Int)
(declare-fun x995 () Int)
(declare-fun x370 () Bool)
(declare-fun x1545 () Int)
(declare-fun x205 () Int)
(declare-fun x36 () x1961)
(declare-fun x965 () Int)
(declare-fun x1103 () Int)
(declare-fun x640 () Int)
(declare-fun x27 () Int)
(declare-fun x662 () Bool)
(declare-fun x1038 (Int) Int)
(declare-fun x663 () Int)
(declare-fun x261 () Bool)
(declare-fun x1164 () Int)
(declare-fun x281 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x835 () Bool)
(declare-fun x724 () Int)
(declare-fun x1982 () Int)
(declare-fun x186 () Bool)
(declare-fun x1324 () Int)
(declare-fun x979 () Int)
(declare-fun x933 () Int)
(declare-fun x1696 () Int)
(declare-fun x759 () Int)
(declare-fun x69 () Bool)
(declare-fun x272 () Int)
(declare-fun x819 () Int)
(declare-fun x1738 () Bool)
(declare-fun x1197 () Int)
(declare-fun x1832 () Int)
(declare-fun x1880 () Int)
(declare-fun x1800 () Int)
(declare-fun x476 () Int)
(declare-fun x1490 () Int)
(declare-fun x1139 () Int)
(declare-fun x875 () Int)
(declare-fun x739 () Int)
(declare-fun x1101 () Int)
(declare-fun x400 () Int)
(declare-fun x77 () Int)
(declare-fun x1272 () Int)
(declare-fun x1065 () Int)
(declare-fun x1558 () Int)
(declare-fun x1 () Int)
(declare-fun x1623 () Int)
(declare-fun x1334 () Int)
(declare-fun x916 () Bool)
(declare-fun x129 () Int)
(declare-fun x214 () Int)
(declare-fun x695 () Int)
(declare-fun x6 () Int)
(declare-fun x449 () Int)
(declare-fun x889 () Int)
(declare-fun x244 () Int)
(declare-fun x877 () Int)
(declare-fun x1928 () Int)
(declare-fun x1725 () Int)
(declare-fun x1912 () Bool)
(declare-fun x670 () Int)
(declare-fun x810 () Int)
(declare-fun x1909 () Bool)
(declare-fun x1842 () Int)
(declare-fun x1683 () Int)
(declare-fun x978 () Bool)
(declare-fun x653 () Int)
(declare-fun x280 () Bool)
(declare-fun x163 () Int)
(declare-fun x413 () Int)
(declare-fun x147 () Int)
(declare-fun x897 () Int)
(declare-fun x886 () Int)
(declare-fun x879 () Int)
(declare-fun x901 () Int)
(declare-fun x777 () Int)
(declare-fun x905 () Int)
(declare-fun x1518 () Int)
(declare-fun x1413 () Int)
(declare-fun x1749 () Bool)
(declare-fun x1369 () Int)
(declare-fun x915 () Int)
(declare-fun x1901 () Bool)
(declare-fun x1310 () Int)
(declare-fun x1367 () Int)
(declare-fun x1083 () Int)
(declare-fun x1796 () Int)
(declare-fun x1965 () Int)
(declare-fun x162 () Int)
(declare-fun x1520 () Int)
(declare-fun x1304 () Int)
(declare-fun x673 () Int)
(declare-fun x506 () Int)
(declare-fun x1254 () x1961)
(declare-fun x1485 () Int)
(declare-fun x679 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x1788 () Int)
(declare-fun x1149 () Int)
(declare-fun x1410 () Int)
(declare-fun x512 () Int)
(declare-fun x25 () Bool)
(declare-fun x1448 () Int)
(declare-fun x948 () Int)
(declare-fun x1023 () x1961)
(declare-fun x1050 () Int)
(declare-fun x1530 () Int)
(declare-fun x1135 () Int)
(declare-fun x1396 () Bool)
(declare-fun x1734 () Int)
(declare-fun x527 () Bool)
(declare-fun x1045 () Int)
(declare-fun x880 () Int)
(declare-fun x1960 (Int) Int)
(declare-fun x1106 () Int)
(declare-fun x1312 () Int)
(declare-fun x1433 (Int) Int)
(declare-fun x1976 () Int)
(declare-fun x812 () Bool)
(declare-fun x807 () Int)
(declare-fun x1478 () Int)
(declare-fun x98 () Bool)
(declare-fun x1435 () x1961)
(declare-fun x1234 (Int) Int)
(declare-fun x802 () Int)
(declare-fun x678 () Int)
(declare-fun x437 () Int)
(declare-fun x1487 () Int)
(declare-fun x1250 () Bool)
(declare-fun x706 () Int)
(declare-fun x690 () Int)
(declare-fun x1295 () Int)
(declare-fun x1651 () Int)
(declare-fun x285 () Int)
(declare-fun x878 () Int)
(declare-fun x107 () Int)
(declare-fun x1625 () Int)
(declare-fun x1585 () Bool)
(declare-fun x1773 () x1961)
(declare-fun x1005 () Int)
(declare-fun x535 () Int)
(declare-fun x1743 () Bool)
(declare-fun x455 () Int)
(declare-fun x290 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x1492 () Int)
(declare-fun x350 () Int)
(declare-fun x1529 () Int)
(declare-fun x85 () x1961)
(declare-fun x337 () x1961)
(declare-fun x1892 () Int)
(declare-fun x903 () Int)
(declare-fun x1514 () Bool)
(declare-fun x274 () x1961)
(declare-fun x367 () Int)
(declare-fun x1439 () Int)
(declare-fun x97 (Int) Int)
(declare-fun x931 () Bool)
(declare-fun x808 () Int)
(declare-fun x1639 () Int)
(declare-fun x503 () Int)
(declare-fun x845 () Int)
(declare-fun x868 () Int)
(declare-fun x1365 () Int)
(declare-fun x1701 () Int)
(declare-fun x1835 () Int)
(declare-fun x478 () Int)
(declare-fun x1043 () x1961)
(declare-fun x474 (Int) Int)
(declare-fun x974 () Int)
(declare-fun x1255 () Int)
(declare-fun x466 () Bool)
(declare-fun x1000 () Int)
(declare-fun x550 () Int)
(declare-fun x447 () Int)
(declare-fun x1990 () Bool)
(declare-fun x1925 () Int)
(declare-fun x66 () Int)
(declare-fun x564 () Int)
(declare-fun x734 () Int)
(declare-fun x1301 () Bool)
(declare-fun x1248 () Int)
(declare-fun x480 () Int)
(declare-fun x1900 () Int)
(declare-fun x1650 () Int)
(declare-fun x1088 () Bool)
(declare-fun x609 () Bool)
(declare-fun x1072 () Int)
(declare-fun x1709 () Int)
(declare-fun x240 () Bool)
(declare-fun x1175 () Int)
(declare-fun x295 (Int Int) Int)
(declare-fun x383 () Int)
(declare-fun x90 () Bool)
(declare-fun x738 () Int)
(declare-fun x1728 () Int)
(declare-fun x1956 () Int)
(declare-fun x1463 () Int)
(declare-fun x161 () Bool)
(declare-fun x1332 () x1961)
(declare-fun x1445 () Int)
(declare-fun x390 () Int)
(declare-fun x1403 () Int)
(declare-fun x353 () Int)
(declare-fun x752 (Int) x1961)
(declare-fun x41 () Int)
(declare-fun x1908 () Int)
(declare-fun x1306 () Int)
(declare-fun x1894 () Int)
(declare-fun x529 () Int)
(declare-fun x1763 () Int)
(declare-fun x1936 () Int)
(declare-fun x1213 () Int)
(declare-fun x317 () Bool)
(declare-fun x1587 () Int)
(declare-fun x1502 () Int)
(declare-fun x1886 () Int)
(declare-fun x821 () Int)
(declare-fun x445 () Int)
(declare-fun x1700 () Int)
(declare-fun x73 () Int)
(declare-fun x1160 () Int)
(declare-fun x1551 () Int)
(declare-fun x470 (x1961) Int)
(declare-fun x1680 () Int)
(declare-fun x1241 () Bool)
(declare-fun x258 () Int)
(declare-fun x987 () Int)
(declare-fun x179 () Int)
(declare-fun x1902 () Int)
(declare-fun x1613 () Bool)
(declare-fun x351 () Bool)
(declare-fun x1954 () Int)
(declare-fun x152 () Int)
(declare-fun x1560 () Int)
(declare-fun x1294 () Int)
(declare-fun x1168 () Int)
(declare-fun x467 () Int)
(declare-fun x1995 () Int)
(declare-fun x252 () Int)
(declare-fun x580 () Bool)
(declare-fun x1105 () Int)
(declare-fun x1067 () Int)
(declare-fun x173 () Int)
(declare-fun x257 () Int)
(declare-fun x736 () Bool)
(declare-fun x1418 () Int)
(declare-fun x1314 () Int)
(declare-fun x1126 () Int)
(declare-fun x521 () Int)
(declare-fun x1897 () Bool)
(declare-fun x65 () Bool)
(declare-fun x40 () x1961)
(declare-fun x1405 () Int)
(declare-fun x1980 () Bool)
(declare-fun x1764 () Int)
(declare-fun x616 () Bool)
(declare-fun x709 () Int)
(declare-fun x997 () Int)
(declare-fun x1444 () Int)
(declare-fun x1605 () Int)
(declare-fun x1062 () Bool)
(declare-fun x26 () Bool)
(declare-fun x1633 () Bool)
(declare-fun x1987 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x30 () Bool)
(declare-fun x1426 () Int)
(declare-fun x1591 () Int)
(declare-fun x1321 () Int)
(declare-fun x650 () Int)
(declare-fun x275 () Int)
(declare-fun x567 () Int)
(declare-fun x796 () Int)
(declare-fun x1621 () Int)
(declare-fun x944 () Int)
(declare-fun x924 () Int)
(declare-fun x1303 () Int)
(declare-fun x1855 () Int)
(declare-fun x1988 () Int)
(declare-fun x1358 () Int)
(declare-fun x502 () Int)
(declare-fun x1397 () Int)
(declare-fun x594 () Bool)
(declare-fun x516 (Int) Int)
(declare-fun x1179 () Bool)
(declare-fun x1979 () Int)
(declare-fun x1542 () Int)
(declare-fun x1432 () Int)
(declare-fun x683 () Bool)
(declare-fun x1708 () Bool)
(declare-fun x687 () Int)
(declare-fun x959 () Int)
(declare-fun x798 () x1961)
(declare-fun x265 () Int)
(declare-fun x1346 () Int)
(declare-fun x1849 () x1961)
(declare-fun x1790 () Bool)
(declare-fun x115 () x1961)
(declare-fun x453 () Bool)
(declare-fun x530 () Bool)
(declare-fun x1563 () Int)
(declare-fun x1715 () Int)
(declare-fun x729 () Bool)
(declare-fun x1695 () Int)
(declare-fun x998 () Int)
(declare-fun x1652 () Int)
(declare-fun x1471 () Bool)
(declare-fun x1074 () Int)
(declare-fun x255 () Bool)
(declare-fun x71 () x1961)
(declare-fun x935 () Bool)
(declare-fun x779 () Int)
(declare-fun x1231 () Int)
(declare-fun x1955 () Int)
(declare-fun x1949 () Int)
(declare-fun x213 () Int)
(declare-fun x1420 () Bool)
(declare-fun x1989 () Int)
(declare-fun x1496 () Bool)
(declare-fun x1783 () Bool)
(declare-fun x570 () Bool)
(declare-fun x491 () Int)
(declare-fun x1260 () Bool)
(declare-fun x1352 () Int)
(declare-fun x1146 () Int)
(declare-fun x1506 () x1961)
(declare-fun x1020 (Int) Int)
(declare-fun x1498 () Int)
(declare-fun x896 () Int)
(declare-fun x992 () Int)
(declare-fun x463 () Int)
(declare-fun x322 () Int)
(declare-fun x1211 () Int)
(declare-fun x239 () Int)
(declare-fun x273 (Int) Int)
(declare-fun x1441 () Bool)
(declare-fun x15 () Int)
(declare-fun x1376 () Int)
(declare-fun x1947 () Int)
(declare-fun x1123 () Int)
(declare-fun x444 (x1961) Int)
(declare-fun x237 () Int)
(declare-fun x5 () Int)
(declare-fun x1476 () Int)
(declare-fun x362 () Int)
(declare-fun x1534 () Bool)
(declare-fun x1130 () Int)
(declare-fun x851 () Int)
(declare-fun x1456 () Int)
(declare-fun x1772 () Int)
(declare-fun x1996 () Int)
(declare-fun x325 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x167 () Int)
(declare-fun x1704 () Int)
(declare-fun x767 () Bool)
(declare-fun x446 () Int)
(declare-fun x1896 () Int)
(declare-fun x1944 () Int)
(declare-fun x109 () Int)
(declare-fun x682 () Int)
(declare-fun x1666 (Int) Int)
(declare-fun x1246 () Int)
(declare-fun x839 () Int)
(declare-fun x621 () Int)
(declare-fun x1716 () Int)
(declare-fun x225 () Int)
(declare-fun x1699 () Bool)
(declare-fun x780 () Int)
(declare-fun x937 () Int)
(declare-fun x140 () Int)
(declare-fun x386 () Int)
(declare-fun x1230 (Int) Int)
(declare-fun x1335 () Int)
(declare-fun x925 () Int)
(declare-fun x1653 () Int)
(declare-fun x1603 () Bool)
(declare-fun x1883 () Int)
(declare-fun x460 () Bool)
(declare-fun x651 () Bool)
(declare-fun x1012 () Int)
(declare-fun x1837 () Int)
(declare-fun x1857 (Int) Int)
(declare-fun x1475 () Bool)
(declare-fun x185 () x1961)
(declare-fun x1632 () Int)
(declare-fun x722 () Int)
(declare-fun x725 () Bool)
(declare-fun x1380 () Int)
(declare-fun x565 () Int)
(declare-fun x433 () Bool)
(declare-fun x1018 () Int)
(declare-fun x1292 () Int)
(declare-fun x53 () Int)
(declare-fun x1344 () Int)
(declare-fun x1791 () Int)
(declare-fun x334 () Bool)
(declare-fun x298 () Int)
(declare-fun x760 () Int)
(declare-fun x1395 () Int)
(declare-fun x344 () x1961)
(declare-fun x291 () Int)
(declare-fun x1054 () Int)
(declare-fun x495 () Int)
(declare-fun x626 () Int)
(declare-fun x963 () Bool)
(declare-fun x961 () Int)
(declare-fun x859 () Int)
(declare-fun x1374 () Bool)
(declare-fun x982 () Int)
(declare-fun x452 () Int)
(declare-fun x1798 () Bool)
(declare-fun x483 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x1519 () Int)
(declare-fun x1823 () Int)
(declare-fun x776 () Int)
(declare-fun x778 () Bool)
(declare-fun x634 () Int)
(declare-fun x1690 () Int)
(declare-fun x486 () Int)
(declare-fun x788 () Bool)
(declare-fun x1283 () Int)
(declare-fun x499 () Int)
(declare-fun x1477 () Int)
(declare-fun x1041 () Int)
(declare-fun x774 () Int)
(declare-fun x1452 () Int)
(declare-fun x171 () Int)
(declare-fun x1379 () Int)
(declare-fun x1454 () Bool)
(declare-fun x1163 (Int) Int)
(declare-fun x1007 () Int)
(declare-fun x860 () Int)
(declare-fun x1408 () Int)
(declare-fun x1187 () Int)
(declare-fun x220 () Bool)
(declare-fun x939 () Int)
(declare-fun x1890 () x1961)
(declare-fun x1524 () Int)
(declare-fun x787 () Int)
(declare-fun x440 () Bool)
(declare-fun x1273 () Int)
(declare-fun x72 () Int)
(declare-fun x699 () Int)
(declare-fun x605 () Bool)
(declare-fun x19 () Int)
(declare-fun x575 () x1961)
(declare-fun x1073 () Int)
(declare-fun x1442 () Int)
(declare-fun x1034 () Int)
(declare-fun x520 () Int)
(declare-fun x615 () Int)
(declare-fun x809 () Int)
(declare-fun x1154 () Int)
(declare-fun x157 () Bool)
(declare-fun x581 () Int)
(declare-fun x191 () Int)
(declare-fun x1873 () Int)
(declare-fun x1596 () Int)
(declare-fun x1630 () Int)
(declare-fun x1087 () Int)
(declare-fun x1916 () Int)
(declare-fun x549 () Int)
(declare-fun x1958 (Int) Int)
(declare-fun x347 () x1961)
(declare-fun x562 () Int)
(declare-fun x1483 () Int)
(declare-fun x404 () Bool)
(declare-fun x1268 () Int)
(declare-fun x259 () Int)
(declare-fun x635 () Int)
(declare-fun x29 () Int)
(declare-fun x560 () Int)
(declare-fun x1137 () Bool)
(declare-fun x379 () Bool)
(declare-fun x1206 () Int)
(declare-fun x1259 () Bool)
(declare-fun x54 () Int)
(declare-fun x1184 () Int)
(declare-fun x288 () Int)
(declare-fun x299 () Int)
(declare-fun x1570 () Int)
(declare-fun x1859 () Bool)
(declare-fun x1093 () Int)
(declare-fun x1480 () Int)
(declare-fun x50 () Int)
(declare-fun x1620 () Int)
(declare-fun x1571 (x1961) Int)
(declare-fun x947 () Int)
(declare-fun x1590 () Bool)
(declare-fun x1789 () Int)
(declare-fun x1806 () Int)
(declare-fun x833 () Int)
(declare-fun x1730 () Int)
(declare-fun x1927 () Int)
(declare-fun x1888 () Int)
(declare-fun x1693 () Int)
(declare-fun x865 (Int) Int)
(declare-fun x1752 () Int)
(declare-fun x1569 () Bool)
(declare-fun x612 () Int)
(declare-fun x929 () Int)
(declare-fun x1684 () Bool)
(declare-fun x49 () Int)
(declare-fun x1766 (Int) Int)
(declare-fun x668 () Int)
(declare-fun x1387 () Int)
(declare-fun x321 () Int)
(declare-fun x1919 () Bool)
(declare-fun x1647 () Int)
(declare-fun x306 () Int)
(declare-fun x719 () Bool)
(declare-fun x248 () Int)
(declare-fun x766 () x1961)
(declare-fun x1635 (x1961) Int)
(declare-fun x143 (Int) Int)
(declare-fun x775 () Int)
(declare-fun x571 () Int)
(declare-fun x1845 () Bool)
(declare-fun x1753 () Int)
(declare-fun x648 () Int)
(declare-fun x1407 (x1961) Int)
(declare-fun x832 () Bool)
(declare-fun x912 () Bool)
(declare-fun x1692 () x1961)
(declare-fun x1482 () Bool)
(declare-fun x1296 () Int)
(declare-fun x895 () Int)
(declare-fun x304 () Int)
(declare-fun x1011 () Int)
(declare-fun x1364 () Int)
(declare-fun x338 () Bool)
(declare-fun x1098 () Int)
(declare-fun x128 () Bool)
(declare-fun x1815 () Int)
(declare-fun x1190 () Bool)
(declare-fun x1311 () Int)
(declare-fun x91 () Int)
(declare-fun x1001 () Bool)
(declare-fun x1934 (Int) Int)
(declare-fun x1171 () Int)
(declare-fun x803 () Int)
(declare-fun x740 () Int)
(declare-fun x517 () Int)
(declare-fun x318 () Int)
(declare-fun x1388 () Bool)
(declare-fun x1465 () Int)
(declare-fun x655 () Int)
(declare-fun x435 () Int)
(declare-fun x910 () Int)
(declare-fun x88 () Int)
(declare-fun x1097 () Bool)
(declare-fun x160 () Int)
(declare-fun x1189 () Int)
(declare-fun x369 () Bool)
(declare-fun x914 () Int)
(declare-fun x526 () Int)
(declare-fun x544 () x1961)
(declare-fun x1840 () Int)
(declare-fun x1923 () Int)
(declare-fun x1378 () Int)
(declare-fun x1574 () Int)
(declare-fun x1929 () Int)
(declare-fun x1267 () Bool)
(declare-fun x681 () Int)
(declare-fun x1911 () Int)
(declare-fun x637 () Int)
(declare-fun x603 () Int)
(declare-fun x754 () Int)
(declare-fun x806 () Bool)
(declare-fun x81 () x1961)
(declare-fun x1176 () Int)
(declare-fun x717 () Int)
(declare-fun x1808 () Bool)
(declare-fun x1512 () Int)
(declare-fun x1662 () Int)
(declare-fun x1375 () Int)
(declare-fun x1736 () Bool)
(declare-fun x665 () Int)
(declare-fun x1402 () Int)
(declare-fun x645 () Int)
(declare-fun x1769 () Int)
(declare-fun x1528 () Int)
(declare-fun x1525 () Int)
(declare-fun x712 () Int)
(declare-fun x659 () Int)
(declare-fun x1868 () Bool)
(declare-fun x746 () Int)
(declare-fun x844 () Bool)
(declare-fun x545 () Int)
(declare-fun x1143 () x1961)
(declare-fun x1317 () Bool)
(declare-fun x1199 () Int)
(declare-fun x504 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x1447 () Int)
(declare-fun x1124 (x1961) Int)
(declare-fun x1932 () Int)
(declare-fun x103 () Bool)
(declare-fun x1207 () Int)
(declare-fun x1355 () Int)
(declare-fun x584 () Bool)
(declare-fun x1940 () Int)
(declare-fun x1593 () Int)
(declare-fun x436 () Int)
(declare-fun x667 () Int)
(declare-fun x1373 () Int)
(declare-fun x61 () Int)
(declare-fun x1393 () Bool)
(declare-fun x1786 () Int)
(declare-fun x524 () Int)
(declare-fun x1878 () Int)
(declare-fun x131 () Int)
(declare-fun x723 () Int)
(declare-fun x82 () Bool)
(declare-fun x142 () Int)
(declare-fun x300 () Int)
(declare-fun x632 () Int)
(declare-fun x469 () Int)
(declare-fun x1404 () Bool)
(declare-fun x1359 () Int)
(declare-fun x1280 () Bool)
(declare-fun x1614 () Int)
(declare-fun x606 (Int) Int)
(declare-fun x1782 () Int)
(declare-fun x587 () Bool)
(declare-fun x28 () Int)
(declare-fun x551 () Int)
(declare-fun x420 () Bool)
(declare-fun x926 () Int)
(declare-fun x1778 () Bool)
(declare-fun x287 () Int)
(declare-fun x1516 () Bool)
(declare-fun x194 () x1961)
(declare-fun x1192 () Int)
(declare-fun x533 () Int)
(declare-fun x1108 () Int)
(declare-fun x1910 () Int)
(declare-fun x1592 () Int)
(declare-fun x1792 () Int)
(declare-fun x1302 () Int)
(declare-fun x423 (Int) Int)
(declare-fun x624 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x1745 () Int)
(declare-fun x1430 () Int)
(declare-fun x289 () Int)
(declare-fun x443 () Int)
(declare-fun x820 () Int)
(declare-fun x1805 () Int)
(declare-fun x1833 () Int)
(declare-fun x1431 () Int)
(declare-fun x1417 () Int)
(declare-fun x792 () Int)
(declare-fun x866 () Bool)
(declare-fun x797 () Bool)
(declare-fun x716 () Int)
(declare-fun x18 () Bool)
(declare-fun x1118 () Int)
(declare-fun x1016 () Int)
(declare-fun x117 () Bool)
(declare-fun x305 () Bool)
(declare-fun x102 () Int)
(declare-fun x1862 () Int)
(declare-fun x1517 () Int)
(declare-fun x122 () Int)
(declare-fun x1027 () Bool)
(declare-fun x1609 (Int) Int)
(declare-fun x856 () Bool)
(declare-fun x223 () Bool)
(declare-fun x1148 () Int)
(declare-fun x1793 () Int)
(declare-fun x960 () Int)
(declare-fun x1147 () Int)
(declare-fun x1014 () Int)
(declare-fun x387 (Int) Int)
(declare-fun x432 () Int)
(declare-fun x1816 () Int)
(declare-fun x403 (Int) Int)
(declare-fun x113 () Int)
(declare-fun x360 () Int)
(declare-fun x266 () Bool)
(declare-fun x1180 () Int)
(declare-fun x1562 () Bool)
(declare-fun x1392 () Int)
(declare-fun x1186 () Int)
(declare-fun x462 () x1961)
(declare-fun x155 () Bool)
(declare-fun x1719 (Int) Int)
(declare-fun x393 () Int)
(declare-fun x1158 () Int)
(declare-fun x169 () Int)
(declare-fun x1333 () Int)
(declare-fun x715 () Int)
(declare-fun x1134 (Int) Int)
(declare-fun x1784 () Int)
(declare-fun x1884 () Int)
(declare-fun x1776 () Int)
(declare-fun x680 () Int)
(declare-fun x1107 () Int)
(declare-fun x342 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x625 () Int)
(declare-fun x554 () Bool)
(declare-fun x1864 () Int)
(declare-fun x1409 () Bool)
(declare-fun x1243 () Int)
(declare-fun x1968 () Int)
(declare-fun x247 (Int Int) Int)
(declare-fun x1416 (Int) Int)
(declare-fun x1141 () Int)
(declare-fun x451 () Bool)
(declare-fun x125 () Int)
(declare-fun x92 (Int) Int)
(declare-fun x753 (Int) Int)
(declare-fun x1724 () Int)
(declare-fun x608 () Int)
(declare-fun x1183 () x1961)
(declare-fun x1527 () Int)
(declare-fun x923 () Int)
(declare-fun x1817 () Int)
(declare-fun x1508 () Int)
(declare-fun x1394 () Int)
(declare-fun x985 () Int)
(declare-fun x890 () Int)
(declare-fun x1495 () Bool)
(declare-fun x1385 () Int)
(declare-fun x840 () Bool)
(declare-fun x971 () Int)
(declare-fun x269 () x1961)
(declare-fun x930 () Int)
(declare-fun x1580 () Int)
(declare-fun x1008 () Int)
(declare-fun x1081 () Int)
(declare-fun x1278 () Int)
(declare-fun x1096 () Int)
(declare-fun x1382 () Bool)
(declare-fun x596 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x1066 () Int)
(declare-fun x1627 () Int)
(declare-fun x1670 () Int)
(declare-fun x243 () Int)
(declare-fun x93 () Int)
(declare-fun x1830 () Int)
(declare-fun x428 () Int)
(declare-fun x568 (Int) Int)
(declare-fun x106 () Int)
(declare-fun x1781 () Bool)
(declare-fun x1899 () Int)
(declare-fun x1898 () Bool)
(declare-fun x87 () x1961)
(declare-fun x1257 (Int) Int)
(declare-fun x1090 () Int)
(declare-fun x277 () Int)
(declare-fun x1676 () Int)
(declare-fun x310 () Int)
(declare-fun x1824 () Int)
(declare-fun x1626 () Int)
(declare-fun x415 () Int)
(declare-fun x154 () Int)
(declare-fun x1501 () Int)
(declare-fun x282 () Bool)
(declare-fun x743 () Int)
(declare-fun x1673 () Int)
(declare-fun x372 () Bool)
(declare-fun x120 () Int)
(declare-fun x1425 () Int)
(declare-fun x1779 () Bool)
(define-fun x1348 ((x1961 x1961) (x1089 Int)) x1961 (ite ((_ is x1258) x1961) (x1258 (x1608 x1961) (+ (x426 x1961) x1089)) (ite ((_ is x105) x1961) (x105 (x422 x1961) (x1099 x1961) (+ x1089 (x561 x1961))) (x308 (+ (x642 x1961) x1089)))))
(define-fun x1607 ((x664 Int)) Int (ite (and (<= 0 x664) (< x664 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x664 (- x664 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1291 ((x664 Int)) Int (ite (and (>= x664 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x664)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664) x664))
(define-fun x700 ((x1581 Int)) Bool (and (>= x1581 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1581)))
(define-fun x1803 ((x1581 Int)) Bool (and (= (x818 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1581) x1581) (= (x818 x1581 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1581)))
(define-fun x1963 ((x1581 Int)) Bool (and (= 0 (x818 x1581 0)) (= (x818 0 x1581) 0)))
(define-fun x38 ((x1581 Int)) Bool (= x1581 (x818 x1581 x1581)))
(define-fun x1209 ((x1581 Int)) Bool (and (x38 x1581) (x1963 x1581) (x1803 x1581)))
(define-fun x1237 ((x1581 Int)) Bool (= (x818 20282409603651670423947251286015 x1581) (x818 20282409603651670423947251286015 (x818 20282409603651670423947251286015 x1581))))
(define-fun x542 ((x1581 Int)) Bool (=> (and (>= x1581 0) (< x1581 20282409603651670423947251286016)) (= x1581 (x818 20282409603651670423947251286015 x1581))))
(define-fun x1372 ((x1581 Int)) Bool (=> (= x1581 (x818 20282409603651670423947251286015 x1581)) (and (< x1581 20282409603651670423947251286016) (<= 0 x1581))))
(define-fun x1327 ((x1581 Int)) Bool (=> (and (>= x1581 20282409603651670423947251286016) (> 40564819207303340847894502572032 x1581)) (= (x818 20282409603651670423947251286015 x1581) (- x1581 20282409603651670423947251286016))))
(define-fun x1861 ((x1581 Int) (x1429 Int)) Bool (and (>= x1429 0) (= (+ (x818 20282409603651670423947251286015 x1581) (* 20282409603651670423947251286016 x1429)) x1581)))
(define-fun x783 ((x1581 Int) (x505 Int)) Bool (and (x1372 x1581) (x542 x1581) (x1237 x1581) (x1861 x1581 x505) (x1327 x1581)))
(define-fun x149 ((x1581 Int) (x1429 Int)) Bool (= (x818 x1429 x1581) (x818 x1581 x1429)))
(define-fun x1040 ((x1581 Int) (x1429 Int)) Bool (and (=> (<= 0 x1581) (<= (x818 x1581 x1429) x1581)) (=> (>= x1429 0) (<= (x818 x1581 x1429) x1429)) (>= (x818 x1581 x1429) 0)))
(define-fun x450 ((x1581 Int) (x1429 Int)) Bool (and (x1040 x1581 x1429) (x149 x1581 x1429)))
(define-fun x894 ((x1581 Int) (x505 Int)) Bool (and (x450 x1581 20282409603651670423947251286015) (x783 x1581 x505)))
(define-fun x1266 ((x1581 Int)) Bool (= (x1939 x1581) (ite (> 10141204801825835211973625643008 (x818 x1581 20282409603651670423947251286015)) (x818 x1581 20282409603651670423947251286015) (+ 115792089237316195423570985008687907853269984645358154435805913583965878353920 (x818 x1581 20282409603651670423947251286015)))))
(define-fun x976 ((x1581 Int)) Bool (= (x818 1 x1581) (x818 1 (x818 1 x1581))))
(define-fun x260 ((x1581 Int)) Bool (=> (and (< x1581 2) (>= x1581 0)) (= x1581 (x818 1 x1581))))
(define-fun x1414 ((x1581 Int)) Bool (=> (= x1581 (x818 1 x1581)) (and (> 2 x1581) (>= x1581 0))))
(define-fun x1678 ((x1581 Int)) Bool (=> (and (< x1581 4) (<= 2 x1581)) (= (- x1581 2) (x818 1 x1581))))
(define-fun x1891 ((x1581 Int) (x1429 Int)) Bool (and (<= 0 x1429) (= (+ (x818 1 x1581) (* x1429 2)) x1581)))
(define-fun x1488 ((x1581 Int) (x505 Int)) Bool (and (x1678 x1581) (x1414 x1581) (x260 x1581) (x976 x1581) (x1891 x1581 x505)))
(define-fun x1522 ((x1581 Int) (x505 Int)) Bool (and (x450 x1581 1) (x1488 x1581 x505)))
(define-fun x688 ((x1581 Int)) Bool (= (x818 255 x1581) (x818 255 (x818 255 x1581))))
(define-fun x537 ((x1581 Int)) Bool (=> (and (> 256 x1581) (>= x1581 0)) (= x1581 (x818 255 x1581))))
(define-fun x1329 ((x1581 Int)) Bool (=> (= x1581 (x818 255 x1581)) (and (< x1581 256) (<= 0 x1581))))
(define-fun x1825 ((x1581 Int)) Bool (=> (and (>= x1581 256) (< x1581 512)) (= (x818 255 x1581) (- x1581 256))))
(define-fun x7 ((x1581 Int) (x1429 Int)) Bool (and (>= x1429 0) (= x1581 (+ (x818 255 x1581) (* 256 x1429)))))
(define-fun x1827 ((x1581 Int) (x505 Int)) Bool (and (x1825 x1581) (x537 x1581) (x1329 x1581) (x688 x1581) (x7 x1581 x505)))
(define-fun x1120 ((x1581 Int) (x505 Int)) Bool (and (x1827 x1581 x505) (x450 x1581 255)))
(define-fun x388 ((x1581 Int)) Bool (= (x818 1461501637330902918203684832716283019655932542975 x1581) (x818 1461501637330902918203684832716283019655932542975 (x818 1461501637330902918203684832716283019655932542975 x1581))))
(define-fun x328 ((x1581 Int)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x1581) (>= x1581 0)) (= (x818 1461501637330902918203684832716283019655932542975 x1581) x1581)))
(define-fun x201 ((x1581 Int)) Bool (=> (= x1581 (x818 1461501637330902918203684832716283019655932542975 x1581)) (and (> 1461501637330902918203684832716283019655932542976 x1581) (>= x1581 0))))
(define-fun x927 ((x1581 Int)) Bool (=> (and (>= x1581 1461501637330902918203684832716283019655932542976) (< x1581 2923003274661805836407369665432566039311865085952)) (= (- x1581 1461501637330902918203684832716283019655932542976) (x818 1461501637330902918203684832716283019655932542975 x1581))))
(define-fun x1033 ((x1581 Int) (x1429 Int)) Bool (and (= (+ (x818 1461501637330902918203684832716283019655932542975 x1581) (* x1429 1461501637330902918203684832716283019655932542976)) x1581) (<= 0 x1429)))
(define-fun x704 ((x1581 Int) (x505 Int)) Bool (and (x388 x1581) (x927 x1581) (x201 x1581) (x1033 x1581 x505) (x328 x1581)))
(define-fun x303 ((x1581 Int) (x505 Int)) Bool (and (x704 x1581 x505) (x450 x1581 1461501637330902918203684832716283019655932542975)))
(define-fun x703 ((x1581 Int)) Bool (= (x818 65535 (x818 65535 x1581)) (x818 65535 x1581)))
(define-fun x235 ((x1581 Int)) Bool (=> (and (> 65536 x1581) (>= x1581 0)) (= x1581 (x818 65535 x1581))))
(define-fun x1598 ((x1581 Int)) Bool (=> (= x1581 (x818 65535 x1581)) (and (< x1581 65536) (>= x1581 0))))
(define-fun x481 ((x1581 Int)) Bool (=> (and (> 131072 x1581) (<= 65536 x1581)) (= (x818 65535 x1581) (- x1581 65536))))
(define-fun x951 ((x1581 Int) (x1429 Int)) Bool (and (= (+ (* 65536 x1429) (x818 65535 x1581)) x1581) (<= 0 x1429)))
(define-fun x268 ((x1581 Int) (x505 Int)) Bool (and (x1598 x1581) (x235 x1581) (x951 x1581 x505) (x481 x1581) (x703 x1581)))
(define-fun x747 ((x1581 Int) (x505 Int)) Bool (and (x268 x1581 x505) (x450 x1581 65535)))
(define-fun x762 ((x1581 Int)) Bool (and (= (x496 x1581 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x496 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1581))))
(define-fun x1834 ((x1581 Int)) Bool (and (= x1581 (x496 x1581 0)) (= (x496 0 x1581) x1581)))
(define-fun x293 ((x1581 Int)) Bool (= (x496 x1581 x1581) x1581))
(define-fun x1754 ((x1581 Int)) Bool (and (x1834 x1581) (x293 x1581) (x762 x1581)))
(define-fun x617 ((x1581 Int) (x1429 Int)) Bool (= (x496 x1429 x1581) (x496 x1581 x1429)))
(define-fun x898 ((x1581 Int) (x1429 Int)) Bool (and (>= (+ x1581 x1429) (x496 x1581 x1429)) (=> (>= x1429 0) (<= x1429 (x496 x1581 x1429))) (=> (>= x1581 0) (>= (x496 x1581 x1429) x1581))))
(define-fun x1846 ((x1581 Int) (x1429 Int)) Bool (and (x898 x1581 x1429) (x617 x1581 x1429)))
(define-fun x1459 ((x1581 Int)) Bool (= (x818 18446744073709551615 (x818 18446744073709551615 x1581)) (x818 18446744073709551615 x1581)))
(define-fun x1860 ((x1581 Int)) Bool (=> (and (<= 0 x1581) (< x1581 18446744073709551616)) (= (x818 18446744073709551615 x1581) x1581)))
(define-fun x685 ((x1581 Int)) Bool (=> (= (x818 18446744073709551615 x1581) x1581) (and (>= x1581 0) (> 18446744073709551616 x1581))))
(define-fun x1191 ((x1581 Int)) Bool (=> (and (<= 18446744073709551616 x1581) (> 36893488147419103232 x1581)) (= (- x1581 18446744073709551616) (x818 18446744073709551615 x1581))))
(define-fun x330 ((x1581 Int) (x1429 Int)) Bool (and (= x1581 (+ (x818 18446744073709551615 x1581) (* x1429 18446744073709551616))) (<= 0 x1429)))
(define-fun x1628 ((x1581 Int) (x505 Int)) Bool (and (x1191 x1581) (x1459 x1581) (x685 x1581) (x1860 x1581) (x330 x1581 x505)))
(define-fun x39 ((x1581 Int) (x505 Int)) Bool (and (x1628 x1581 x505) (x450 x1581 18446744073709551615)))
(define-fun x837 ((x1581 Int)) Bool (= (x818 340282366920938463463374607431768211455 x1581) (x818 340282366920938463463374607431768211455 (x818 340282366920938463463374607431768211455 x1581))))
(define-fun x1565 ((x1581 Int)) Bool (=> (and (<= 0 x1581) (> 340282366920938463463374607431768211456 x1581)) (= x1581 (x818 340282366920938463463374607431768211455 x1581))))
(define-fun x540 ((x1581 Int)) Bool (=> (= (x818 340282366920938463463374607431768211455 x1581) x1581) (and (< x1581 340282366920938463463374607431768211456) (<= 0 x1581))))
(define-fun x1595 ((x1581 Int)) Bool (=> (and (<= 340282366920938463463374607431768211456 x1581) (< x1581 680564733841876926926749214863536422912)) (= (- x1581 340282366920938463463374607431768211456) (x818 340282366920938463463374607431768211455 x1581))))
(define-fun x477 ((x1581 Int) (x1429 Int)) Bool (and (>= x1429 0) (= x1581 (+ (* 340282366920938463463374607431768211456 x1429) (x818 340282366920938463463374607431768211455 x1581)))))
(define-fun x1924 ((x1581 Int) (x505 Int)) Bool (and (x837 x1581) (x1595 x1581) (x477 x1581 x505) (x540 x1581) (x1565 x1581)))
(define-fun x421 ((x1581 Int) (x505 Int)) Bool (and (x450 x1581 340282366920938463463374607431768211455) (x1924 x1581 x505)))
(define-fun x826 ((x1581 Int)) Bool (= (ite (< (x818 x1581 340282366920938463463374607431768211455) 170141183460469231731687303715884105728) (x818 x1581 340282366920938463463374607431768211455) (+ (x818 x1581 340282366920938463463374607431768211455) 115792089237316195423570985008687907852929702298719625575994209400481361428480)) (x1841 x1581)))
(define-fun x1914 ((x1581 Int)) Bool (= (x818 16 x1581) (x818 16 (x818 16 x1581))))
(define-fun x398 ((x1581 Int)) Bool (=> (and (< x1581 16) (>= x1581 0)) (= (x818 16 x1581) 0)))
(define-fun x1345 ((x1581 Int) (x1429 Int) (x424 Int) (x1216 Int)) Bool (and (>= x1216 0) (< x424 2) (<= 0 x1429) (= (+ (* x1216 32) x1429 (* x424 16)) x1581) (= (* 16 x424) (x818 16 x1581)) (>= x424 0) (< x1429 16) (< x1216 3618502788666131106986593281521497120414687020801267626233049500247285301248)))
(define-fun x1245 ((x1581 Int) (x150 Int) (x942 Int) (x656 Int)) Bool (and (x1345 x1581 x150 x942 x656) (x1914 x1581) (x398 x1581)))
(define-fun x795 ((x1581 Int) (x150 Int) (x942 Int) (x656 Int)) Bool (and (x1245 x1581 x150 x942 x656) (x450 x1581 16)))
(define-fun x828 ((x1581 Int)) Bool (= (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1581) (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1581))))
(define-fun x825 ((x1581 Int)) Bool (=> (and (<= 0 x1581) (< x1581 32)) (= 0 (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1581))))
(define-fun x123 ((x1581 Int) (x1429 Int) (x424 Int) (x1216 Int)) Bool (and (< x424 3618502788666131106986593281521497120414687020801267626233049500247285301248) (>= x1429 0) (= (* x424 32) (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1581)) (< x1216 1) (= (+ (* 32 x424) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1216) x1429) x1581) (<= 0 x424) (>= x1216 0) (< x1429 32)))
(define-fun x518 ((x1581 Int) (x150 Int) (x942 Int) (x656 Int)) Bool (and (x828 x1581) (x123 x1581 x150 x942 x656) (x825 x1581)))
(define-fun x1236 ((x1581 Int) (x150 Int) (x942 Int) (x656 Int)) Bool (and (x450 x1581 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x518 x1581 x150 x942 x656)))
(define-fun x885 ((x1937 Int)) Int (ite (= 128 x1937) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1766 x1937)))
(define-fun x696 ((x1937 Int)) Int (ite (= x1937 128) x1927 (x1020 x1937)))
(define-fun x1031 ((x1937 Int)) Int (ite (= 160 x1937) x1896 (x696 x1937)))
(define-fun x969 ((x1937 Int)) Int (ite (= x1937 192) x467 (x1031 x1937)))
(define-fun x732 ((x1937 Int)) Int (ite (= x1937 224) x695 (x969 x1937)))
(define-fun x727 ((x1937 Int)) Int (ite (= 256 x1937) x861 (x732 x1937)))
(define-fun x414 ((x1937 Int)) Int (ite (= 128 x1937) x792 (x885 x1937)))
(define-fun x1214 ((x1937 Int)) Int (ite (= 160 x1937) x1547 (x414 x1937)))
(define-fun x1953 ((x1937 Int)) Int (ite (= x1937 192) x1711 (x1214 x1937)))
(define-fun x1036 ((x1937 Int)) Int (ite (= 224 x1937) x1264 (x1953 x1937)))
(define-fun x1068 ((x1937 Int)) Int (ite (= x1937 256) x934 (x1036 x1937)))
(define-fun x691 ((x1937 Int)) Int (ite (= x1937 0) x1672 (x842 x1937)))
(define-fun x58 ((x1937 Int)) Int (ite (= x1937 32) x1139 (x691 x1937)))
(define-fun x917 ((x1937 Int)) Int (ite (= 64 x1937) x926 (x58 x1937)))
(define-fun x471 ((x1937 Int)) Int (ite (= x1937 96) x629 (x917 x1937)))
(define-fun x589 ((x1937 Int)) Int (ite (= x1937 128) x1795 (x471 x1937)))
(define-fun x977 ((x1937 Int)) Int (ite (= x1937 544) 0 (x764 x1937)))
(define-fun x1174 ((x1937 Int)) Int (ite (= 576 x1937) x1701 (x498 x1937)))
(define-fun x631 ((x1937 Int)) Int (ite (= x1937 608) x613 (x908 x1937)))
(define-fun x618 ((x1937 Int)) Int (ite (= x1937 640) x1326 (x92 x1937)))
(define-fun x823 ((x1937 Int)) Int (ite (= x1937 672) x1899 (x423 x1937)))
(define-fun x1331 ((x1937 Int)) Int (ite (= x1937 704) x1353 (x1555 x1937)))
(define-fun x190 ((x1937 Int)) Int (ite (= 736 x1937) x1312 (x1857 x1937)))
(define-fun x188 ((x1937 Int)) Int (ite (= x1937 768) x1053 (x1814 x1937)))
(define-fun x781 ((x1937 Int)) Int (ite (= x1937 128) x1805 (x1155 x1937)))
(define-fun x332 ((x1937 Int)) Int (ite (= 160 x1937) x722 (x781 x1937)))
(define-fun x1702 ((x1937 Int)) Int (ite (= x1937 192) x34 (x332 x1937)))
(define-fun x922 ((x1937 Int)) Int (ite (= 224 x1937) x196 (x1702 x1937)))
(define-fun x399 ((x1937 Int)) Int (ite (= 256 x1937) x633 (x922 x1937)))
(define-fun x1656 ((x1937 Int)) Int (ite (= x1937 800) x889 (x312 x1937)))
(define-fun x207 ((x1937 Int)) Int (ite (= 832 x1937) x441 (x1656 x1937)))
(define-fun x1681 ((x1937 Int)) Int (ite (= x1937 864) x1818 (x207 x1937)))
(define-fun x32 ((x1937 Int)) Int (ite (= x1937 896) x187 (x1681 x1937)))
(define-fun x315 ((x1937 Int)) Int (ite (= x1937 928) x164 (x32 x1937)))
(define-fun x814 ((x1937 Int)) Int (ite (= x1937 0) x881 (x1993 x1937)))
(define-fun x1645 ((x1937 Int)) Int (ite (= 32 x1937) x1107 (x814 x1937)))
(define-fun x1801 ((x1937 Int)) Int (ite (= x1937 64) x1518 (x1645 x1937)))
(define-fun x756 ((x1937 Int)) Int (ite (= 96 x1937) x216 (x1801 x1937)))
(define-fun x1233 ((x1937 Int)) Int (ite (= x1937 128) x1105 (x756 x1937)))
(define-fun x968 ((x1937 Int)) Int (ite (= x1937 544) 0 (x108 x1937)))
(define-fun x1504 ((x1937 Int)) Int (ite (= 576 x1937) x591 (x1881 x1937)))
(define-fun x801 ((x1937 Int)) Int (ite (= x1937 608) x886 (x1622 x1937)))
(define-fun x1872 ((x1937 Int)) Int (ite (= x1937 640) x1556 (x1877 x1937)))
(define-fun x193 ((x1937 Int)) Int (ite (= 672 x1937) x1296 (x622 x1937)))
(define-fun x873 ((x1937 Int)) Int (ite (= x1937 704) x724 (x1257 x1937)))
(define-fun x1759 ((x1937 Int)) Int (ite (= 736 x1937) x604 (x1022 x1937)))
(define-fun x538 ((x1937 Int)) Int (ite (= 768 x1937) x555 (x273 x1937)))
(define-fun x1316 ((x1937 x1961)) Int (ite (= x862 x1937) x1135 (x1712 x1937)))
(define-fun x199 ((x1937 Int)) Int (ite (= 128 x1937) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1416 x1937)))
(define-fun x1039 ((x1937 Int)) Int (ite (= 128 x1937) x1949 (x199 x1937)))
(define-fun x1785 ((x1937 Int)) Int (ite (= 160 x1937) x1748 (x1039 x1937)))
(define-fun x22 ((x1937 Int)) Int (ite (= 192 x1937) x1199 (x1785 x1937)))
(define-fun x1284 ((x1937 Int)) Int (ite (= x1937 224) x285 (x22 x1937)))
(define-fun x611 ((x1937 Int)) Int (ite (= 256 x1937) x122 (x1284 x1937)))
(define-fun x991 ((x1937 Int)) Int (ite (= x1937 128) x1805 (x1484 x1937)))
(define-fun x1170 ((x1937 Int)) Int (ite (= x1937 160) x1172 (x991 x1937)))
(define-fun x1201 ((x1937 Int)) Int (ite (= x1937 192) x34 (x1170 x1937)))
(define-fun x1030 ((x1937 Int)) Int (ite (= x1937 224) x196 (x1201 x1937)))
(define-fun x602 ((x1937 Int)) Int (ite (= 256 x1937) x633 (x1030 x1937)))
(define-fun x17 ((x1937 Int)) Int (ite (= 800 x1937) x1894 (x319 x1937)))
(define-fun x1100 ((x1937 Int)) Int (ite (= x1937 832) x1076 (x17 x1937)))
(define-fun x966 ((x1937 Int)) Int (ite (= 864 x1937) x895 (x1100 x1937)))
(define-fun x132 ((x1937 Int)) Int (ite (= 896 x1937) x565 (x966 x1937)))
(define-fun x1731 ((x1937 Int)) Int (ite (= x1937 928) x1976 (x132 x1937)))
(define-fun x1138 ((x1937 Int)) Int (ite (= x1937 0) x1321 (x397 x1937)))
(define-fun x55 ((x1937 Int)) Int (ite (= 32 x1937) x1620 (x1138 x1937)))
(define-fun x1526 ((x1937 Int)) Int (ite (= 64 x1937) x994 (x55 x1937)))
(define-fun x1503 ((x1937 Int)) Int (ite (= 96 x1937) x1763 (x1526 x1937)))
(define-fun x748 ((x1937 Int)) Int (ite (= x1937 128) x1836 (x1503 x1937)))
(define-fun x427 ((x1937 Int)) Int (ite (= 128 x1937) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x568 x1937)))
(define-fun x1287 ((x1937 Int)) Int (ite (= x1937 0) x202 (x1222 x1937)))
(define-fun x1070 ((x1937 Int)) Int (ite (= x1937 128) x202 (x1163 x1937)))
(define-fun x384 ((x1937 Int)) Int (ite (= x1937 128) x111 (x1163 x1937)))
(define-fun x539 ((x1937 Int)) Int (ite (= x1937 128) x1570 (x1163 x1937)))
(define-fun x786 ((x1937 Int)) Int (ite (= 128 x1937) x316 (x1163 x1937)))
(define-fun x1573 ((x1937 Int)) Int (ite (and x1027 x1507) (x1070 x1937) (ite (and x1740 x135) (x384 x1937) (ite (and x513 x741) (x539 x1937) (x786 x1937)))))
(define-fun x327 ((x1937 Int)) Int (ite (= x1937 x1840) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1573 x1937)))
(define-fun x1634 ((x1937 Int)) Int (ite (= x1974 x1937) x1800 (x327 x1937)))
(define-fun x854 ((x1937 Int)) Int (ite (= x1307 x1937) 274184521717934524641157099916833587211 (x1634 x1937)))
(define-fun x1188 ((x1937 Int)) Int (ite (= x1840 x1937) 1 (x1666 x1937)))
(define-fun x116 ((x1937 Int)) Int (ite (= x1840 x1937) 1 (x1666 x1937)))
(define-fun x119 ((x1937 Int)) Int (ite (= x1840 x1937) 1 (x1666 x1937)))
(define-fun x1969 ((x1937 Int)) Int (ite (and x978 x440) (x1188 x1937) (ite (and x1810 x1396) (x116 x1937) (x119 x1937))))
(define-fun x660 ((x1937 Int)) Int (ite (= x1937 x86) x807 (x403 x1937)))
(define-fun x1198 ((x1937 Int)) Int (ite (= x1392 x1937) x1947 (x660 x1937)))
(define-fun x566 ((x1937 Int)) Int (ite (= x1937 x1863) x1511 (x1198 x1937)))
(define-fun x773 ((x1937 Int)) Int (ite (= x918 x1937) x250 (x566 x1937)))
(define-fun x1729 ((x1937 Int)) Int (ite (= x775 x1937) x57 (x773 x1937)))
(define-fun x1350 ((x1937 Int)) Int (ite (= x86 x1937) x1560 (x403 x1937)))
(define-fun x1481 ((x1937 Int)) Int (ite (= x1394 x1937) x793 (x1350 x1937)))
(define-fun x1852 ((x1937 Int)) Int (ite (= x678 x1937) x1397 (x1481 x1937)))
(define-fun x785 ((x1937 Int)) Int (ite (= x160 x1937) x641 (x1852 x1937)))
(define-fun x906 ((x1937 Int)) Int (ite (= x1937 x1184) x1440 (x785 x1937)))
(define-fun x639 ((x1937 Int)) Int (ite (and x1241 x883) (x1729 x1937) (x906 x1937)))
(define-fun x1319 ((x1937 Int)) Int (ite (= x1520 x1937) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x639 x1937)))
(define-fun x374 ((x1937 Int)) Int (ite (= x1937 x1520) x1490 (x1319 x1937)))
(define-fun x1822 ((x1937 Int)) Int (ite (= x1593 x1937) x1930 (x374 x1937)))
(define-fun x206 ((x1937 Int)) Int (ite (= x304 x1937) x799 (x1822 x1937)))
(define-fun x375 ((x1937 Int)) Int (ite (= x1937 x1465) x416 (x206 x1937)))
(define-fun x311 ((x1937 Int)) Int (ite (= x1937 x512) x174 (x375 x1937)))
(define-fun x1553 ((x1937 Int)) Int (ite (= x1937 x50) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x311 x1937)))
(define-fun x782 ((x1937 Int)) Int (ite (= x50 x1937) x357 (x1553 x1937)))
(define-fun x1978 ((x1937 Int)) Int (ite (= x476 x1937) x1411 (x782 x1937)))
(define-fun x1915 ((x1937 Int)) Int (ite (= x1161 x1937) x1387 (x1978 x1937)))
(define-fun x204 ((x1937 Int)) Int (ite (= x1448 x1937) x1083 (x1915 x1937)))
(define-fun x464 ((x1937 Int)) Int (ite (= x1937 x675) x1892 (x1115 x1937)))
(define-fun x197 ((x1937 Int)) Int (ite (= x1937 x742) x839 (x464 x1937)))
(define-fun x1200 ((x1937 Int)) Int (ite (= x1937 x361) x1959 (x197 x1937)))
(define-fun x576 ((x1937 Int)) Int (ite (= x1276 x1937) x632 (x1200 x1937)))
(define-fun x47 ((x1937 Int)) Int (ite (= x1937 x348) x588 (x576 x1937)))
(define-fun x1196 ((x1937 Int)) Int (ite (= x675 x1937) x1923 (x1115 x1937)))
(define-fun x620 ((x1937 Int)) Int (ite (= x1728 x1937) x607 (x1196 x1937)))
(define-fun x127 ((x1937 Int)) Int (ite (= x1937 x362) x1271 (x620 x1937)))
(define-fun x468 ((x1937 Int)) Int (ite (= x1937 x1842) x452 (x127 x1937)))
(define-fun x1874 ((x1937 Int)) Int (ite (= x1789 x1937) x919 (x468 x1937)))
(define-fun x21 ((x1937 Int)) Int (ite (and x155 x1664) (x47 x1937) (x1874 x1937)))
(define-fun x192 ((x1937 Int)) Int (ite x652 (x21 x1937) (x1771 x1937)))
(define-fun x364 ((x1937 Int)) Int (ite x1980 (ite (and x616 (not x788)) (x1771 x1937) (x192 x1937)) (x1771 x1937)))
(define-fun x487 ((x1937 Int)) Int (ite (= x1405 x1937) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x364 x1937)))
(define-fun x1215 ((x1937 Int)) Int (ite (= x1937 x1253) x435 (x487 x1937)))
(define-fun x1464 ((x1937 x1961)) Int (ite (= x1973 x1937) x41 (x1600 x1937)))
(define-fun x1721 ((x1937 x1961)) Int (ite (= x1937 x462) x647 (x1464 x1937)))
(define-fun x20 ((x1937 x1961)) Int (ite (and x978 x440) (x1721 x1937) (x1600 x1937)))
(define-fun x46 ((x1937 x1961)) Int (ite (= x1937 x1055) x382 (x20 x1937)))
(define-fun x909 ((x1937 Int)) Int (ite (= x1937 0) 1 (x1134 x1937)))
(define-fun x816 ((x1937 Int)) Int (ite (= x1405 x1937) 1 (x31 x1937)))
(define-fun x1133 ((x1937 Int)) Int (ite (= x245 x1937) 0 (x1391 x1937)))
(define-fun x1349 ((x1937 Int)) Int (ite (= x1937 x1815) x259 (x309 x1937)))
(define-fun x78 ((x1937 Int)) Int (ite (= x517 x1937) x1365 (x643 x1937)))
(define-fun x136 ((x1937 Int)) Int (ite (= x1937 x1884) x457 (x1761 x1937)))
(define-fun x1612 ((x1937 Int)) Int (ite (= x1149 x1937) x94 (x1220 x1937)))
(define-fun x541 ((x1937 Int)) Int (ite (= x1937 x944) x1806 (x753 x1937)))
(define-fun x170 ((x1937 Int)) Int (ite (= x230 x1937) x367 (x1719 x1937)))
(define-fun x465 ((x1937 Int)) Int (ite (= x1937 x191) x1641 (x387 x1937)))
(define-fun x459 ((x1937 Int)) Int (ite (= 128 x1937) x1805 (x182 x1937)))
(define-fun x410 ((x1937 Int)) Int (ite (= 160 x1937) x1359 (x459 x1937)))
(define-fun x1136 ((x1937 Int)) Int (ite (= 192 x1937) x34 (x410 x1937)))
(define-fun x52 ((x1937 Int)) Int (ite (= 224 x1937) x196 (x1136 x1937)))
(define-fun x1398 ((x1937 Int)) Int (ite (= 256 x1937) x633 (x52 x1937)))
(define-fun x869 ((x1937 Int)) Int (ite (= x1937 0) x971 (x1051 x1937)))
(define-fun x1047 ((x1937 Int)) Int (ite (= x1937 32) x1423 (x869 x1937)))
(define-fun x1758 ((x1937 Int)) Int (ite (= 64 x1937) x1333 (x1047 x1937)))
(define-fun x141 ((x1937 Int)) Int (ite (= x1937 96) x1824 (x1758 x1937)))
(define-fun x1812 ((x1937 Int)) Int (ite (= 128 x1937) x1632 (x141 x1937)))
(define-fun x1265 ((x1937 Int)) Int (ite (= x1015 x1937) 0 (x718 x1937)))
(define-fun x863 ((x1937 Int)) Int (ite (= x1937 x19) x179 (x97 x1937)))
(define-fun x1428 ((x1937 Int)) Int (ite (= x1937 x300) x1300 (x1460 x1937)))
(define-fun x1564 ((x1937 Int)) Int (ite (= x1937 x802) x560 (x1960 x1937)))
(define-fun x1515 ((x1937 Int)) Int (ite (= x1546 x1937) x171 (x1232 x1937)))
(define-fun x1578 ((x1937 Int)) Int (ite (= x1941 x1937) x579 (x1774 x1937)))
(define-fun x711 ((x1937 Int)) Int (ite (= x1410 x1937) x1521 (x765 x1937)))
(define-fun x1549 ((x1937 Int)) Int (ite (= x1650 x1937) x1817 (x1866 x1937)))
(define-fun x1077 ((x1937 Int)) Int (ite (= 128 x1937) x1805 (x175 x1937)))
(define-fun x176 ((x1937 Int)) Int (ite (= 160 x1937) x1791 (x1077 x1937)))
(define-fun x1208 ((x1937 Int)) Int (ite (= 192 x1937) x34 (x176 x1937)))
(define-fun x231 ((x1937 Int)) Int (ite (= x1937 224) x196 (x1208 x1937)))
(define-fun x1848 ((x1937 Int)) Int (ite (= x1937 256) x633 (x231 x1937)))
(define-fun x888 ((x1937 Int)) Int (ite (= x1937 0) x1907 (x168 x1937)))
(define-fun x232 ((x1937 Int)) Int (ite (= 32 x1937) x860 (x888 x1937)))
(define-fun x1323 ((x1937 Int)) Int (ite (= 64 x1937) x169 (x232 x1937)))
(define-fun x1401 ((x1937 Int)) Int (ite (= 96 x1937) x1453 (x1323 x1937)))
(define-fun x1918 ((x1937 Int)) Int (ite (= 128 x1937) x1550 (x1401 x1937)))
(define-fun x1568 ((x1937 Int)) Int (ite (= x1937 128) x1927 (x1609 x1937)))
(define-fun x500 ((x1937 Int)) Int (ite (= x1937 160) x744 (x1568 x1937)))
(define-fun x1218 ((x1937 Int)) Int (ite (= 192 x1937) x467 (x500 x1937)))
(define-fun x1145 ((x1937 Int)) Int (ite (= x1937 224) x695 (x1218 x1937)))
(define-fun x733 ((x1937 Int)) Int (ite (= 256 x1937) x861 (x1145 x1937)))
(define-fun x48 ((x1937 Int)) Int (ite (= x1937 800) x1652 (x312 x1937)))
(define-fun x368 ((x1937 Int)) Int (ite (= x1937 832) x1478 (x48 x1937)))
(define-fun x1559 ((x1937 Int)) Int (ite (= x1937 864) x1238 (x368 x1937)))
(define-fun x1318 ((x1937 Int)) Int (ite (= 896 x1937) x318 (x1559 x1937)))
(define-fun x1946 ((x1937 Int)) Int (ite (= x1937 928) x1368 (x1318 x1937)))
(define-fun x292 ((x1937 Int)) Int (ite (= 0 x1937) x447 (x1993 x1937)))
(define-fun x1706 ((x1937 Int)) Int (ite (= x1937 32) x1871 (x292 x1937)))
(define-fun x936 ((x1937 Int)) Int (ite (= 64 x1937) x1835 (x1706 x1937)))
(define-fun x1282 ((x1937 Int)) Int (ite (= x1937 96) x1261 (x936 x1937)))
(define-fun x1826 ((x1937 Int)) Int (ite (= 128 x1937) x1338 (x1282 x1937)))
(define-fun x686 ((x1937 Int)) Int (ite (= 128 x1937) x1927 (x211 x1937)))
(define-fun x377 ((x1937 Int)) Int (ite (= x1937 160) x1086 (x686 x1937)))
(define-fun x892 ((x1937 Int)) Int (ite (= 192 x1937) x467 (x377 x1937)))
(define-fun x1071 ((x1937 Int)) Int (ite (= 224 x1937) x695 (x892 x1937)))
(define-fun x84 ((x1937 Int)) Int (ite (= x1937 256) x861 (x1071 x1937)))
(define-fun x1809 ((x1937 Int)) Int (ite (= 800 x1937) x1106 (x319 x1937)))
(define-fun x1584 ((x1937 Int)) Int (ite (= 832 x1937) x929 (x1809 x1937)))
(define-fun x1642 ((x1937 Int)) Int (ite (= x1937 864) x1951 (x1584 x1937)))
(define-fun x138 ((x1937 Int)) Int (ite (= 896 x1937) x1572 (x1642 x1937)))
(define-fun x1091 ((x1937 Int)) Int (ite (= 928 x1937) x74 (x138 x1937)))
(define-fun x406 ((x1937 Int)) Int (ite (= 0 x1937) x1922 (x397 x1937)))
(define-fun x1111 ((x1937 Int)) Int (ite (= x1937 32) x1935 (x406 x1937)))
(define-fun x989 ((x1937 Int)) Int (ite (= 64 x1937) x1948 (x1111 x1937)))
(define-fun x508 ((x1937 Int)) Int (ite (= 96 x1937) x1844 (x989 x1937)))
(define-fun x1510 ((x1937 Int)) Int (ite (= 128 x1937) x1476 (x508 x1937)))
(define-fun x83 ((x1937 Int)) Int (ite (= x1937 0) x316 (x1222 x1937)))
(define-fun x928 ((x1937 Int)) Int (ite (= x1937 0) x1570 (x1222 x1937)))
(define-fun x493 ((x1937 Int)) Int (ite (= x1937 0) x111 (x1222 x1937)))
(define-fun x1577 ((x1937 x1961)) Int (ite (= x1937 x75) x177 (x1571 x1937)))
(define-fun x236 ((x1937 x1961)) Int (ite (= x846 x1937) x432 (x1577 x1937)))
(define-fun x10 ((x1937 Int)) Int (ite (= 0 x1937) 1 (x689 x1937)))
(define-fun x1548 ((x1937 x1961)) Int (ite (= x1937 x185) x1921 (x1875 x1937)))
(define-fun x1131 ((x1937 x1961)) Int (ite (= x1937 x654) x1690 (x1548 x1937)))
(define-fun x913 ((x1937 Int)) Int (ite (= 0 x1937) 1 (x689 x1937)))
(define-fun x946 ((x1937 Int)) Int (ite (= 128 x1937) x1927 (x1063 x1937)))
(define-fun x1341 ((x1937 Int)) Int (ite (= 160 x1937) x299 (x946 x1937)))
(define-fun x24 ((x1937 Int)) Int (ite (= 192 x1937) x467 (x1341 x1937)))
(define-fun x1322 ((x1937 Int)) Int (ite (= x1937 224) x695 (x24 x1937)))
(define-fun x1356 ((x1937 Int)) Int (ite (= 256 x1937) x861 (x1322 x1937)))
(define-fun x356 ((x1937 Int)) Int (ite (= 0 x1937) x577 (x168 x1937)))
(define-fun x210 ((x1937 Int)) Int (ite (= x1937 32) x1561 (x356 x1937)))
(define-fun x1412 ((x1937 Int)) Int (ite (= x1937 64) x1669 (x210 x1937)))
(define-fun x1981 ((x1937 Int)) Int (ite (= 96 x1937) x670 (x1412 x1937)))
(define-fun x1882 ((x1937 Int)) Int (ite (= 128 x1937) x625 (x1981 x1937)))
(define-fun x1263 ((x1937 x1961)) Int (ite (and x440 x978) (x1571 x1937) (ite (and x1810 x1396) (x1571 x1937) (x236 x1937))))
(define-fun x1575 ((x1937 x1961)) Int (ite (= x81 x1937) x1347 (x1263 x1937)))
(define-fun x1095 ((x1937 Int)) Int (ite (= x1937 0) 1 (x1134 x1937)))
(define-fun x354 ((x1937 Int)) Int (ite (= x1405 x1937) 1 (x31 x1937)))
(define-fun x1193 ((x1937 x1961)) Int (ite (and x978 x440) (x1875 x1937) (ite (and x1810 x1396) (x1131 x1937) (x1875 x1937))))
(define-fun x100 ((x1937 x1961)) Int (ite (= x798 x1937) x720 (x1193 x1937)))
(define-fun x672 ((x1937 Int)) Int (ite (= 0 x1937) 1 (x1134 x1937)))
(define-fun x1443 ((x1937 Int)) Int (ite (= x1937 x1405) 1 (x31 x1937)))
(define-fun x893 ((x1937 Int)) Int (ite (= 128 x1937) x1927 (x1234 x1937)))
(define-fun x1797 ((x1937 Int)) Int (ite (= 160 x1937) x661 (x893 x1937)))
(define-fun x1223 ((x1937 Int)) Int (ite (= x1937 192) x467 (x1797 x1937)))
(define-fun x1406 ((x1937 Int)) Int (ite (= 224 x1937) x695 (x1223 x1937)))
(define-fun x1493 ((x1937 Int)) Int (ite (= 256 x1937) x861 (x1406 x1937)))
(define-fun x574 ((x1937 Int)) Int (ite (= 0 x1937) x1497 (x1051 x1937)))
(define-fun x1486 ((x1937 Int)) Int (ite (= x1937 32) x1195 (x574 x1937)))
(define-fun x1751 ((x1937 Int)) Int (ite (= 64 x1937) x106 (x1486 x1937)))
(define-fun x1449 ((x1937 Int)) Int (ite (= x1937 96) x445 (x1751 x1937)))
(define-fun x1386 ((x1937 Int)) Int (ite (= x1937 128) x939 (x1449 x1937)))
(define-fun x543 ((x1937 Int)) Int (ite (and x372 x266) (x315 x1937) (x1946 x1937)))
(define-fun x1807 ((x1937 Int)) Int (ite (and x916 x333) (x1731 x1937) (x1091 x1937)))
(define-fun x378 ((x1937 Int)) Int (ite (= 0 x1937) 1 (x689 x1937)))
(define-fun x996 ((x1937 Int)) Int (ite (= x1937 128) x1927 (x1102 x1937)))
(define-fun x1114 ((x1937 Int)) Int (ite (= 160 x1937) x1108 (x996 x1937)))
(define-fun x1489 ((x1937 Int)) Int (ite (= x1937 192) x467 (x1114 x1937)))
(define-fun x850 ((x1937 Int)) Int (ite (= 224 x1937) x695 (x1489 x1937)))
(define-fun x195 ((x1937 Int)) Int (ite (= 256 x1937) x861 (x850 x1937)))
(define-fun x702 ((x1937 Int)) Int (ite (= x1937 0) x1351 (x1433 x1937)))
(define-fun x60 ((x1937 Int)) Int (ite (= x1937 32) x1734 (x702 x1937)))
(define-fun x1472 ((x1937 Int)) Int (ite (= x1937 64) x1752 (x60 x1937)))
(define-fun x1668 ((x1937 Int)) Int (ite (= x1937 96) x983 (x1472 x1937)))
(define-fun x1125 ((x1937 Int)) Int (ite (= x1937 128) x1225 (x1668 x1937)))
(define-fun x242 ((x1937 Int)) Int (ite (= x1937 x857) 0 (x365 x1937)))
(define-fun x1474 ((x1937 Int)) Int (ite (= x417 x1937) x637 (x118 x1937)))
(define-fun x1061 ((x1937 Int)) Int (ite (= x1937 x1945) x1273 (x1958 x1937)))
(define-fun x1343 ((x1937 Int)) Int (ite (= x1937 x769) x849 (x1038 x1937)))
(define-fun x1869 ((x1937 Int)) Int (ite (= x1122 x1937) x1760 (x606 x1937)))
(define-fun x949 ((x1937 Int)) Int (ite (= x1816 x1937) x1413 (x1934 x1937)))
(define-fun x972 ((x1937 Int)) Int (ite (= x1937 x1619) x9 (x865 x1937)))
(define-fun x1037 ((x1937 Int)) Int (ite (= x1682 x1937) x271 (x1230 x1937)))
(define-fun x1297 ((x1937 x1961)) Int (ite (= x85 x1937) x1189 (x1127 x1937)))
(define-fun x1654 ((x1937 x1961)) Int (ite (= x194 x1937) x1334 (x1127 x1937)))
(define-fun x1624 ((x1937 x1961)) Int (ite (and (not x1339) x51) (ite (and (not x1912) (not x1339) x51) (x1127 x1937) (x1654 x1937)) (x1297 x1937)))
(define-fun x264 ((x1937 Int)) Int (ite (= x1937 128) x1927 (x516 x1937)))
(define-fun x1663 ((x1937 Int)) Int (ite (= x1937 160) x1141 (x264 x1937)))
(define-fun x677 ((x1937 Int)) Int (ite (= 192 x1937) x467 (x1663 x1937)))
(define-fun x578 ((x1937 Int)) Int (ite (= x1937 224) x695 (x677 x1937)))
(define-fun x340 ((x1937 Int)) Int (ite (= x1937 256) x861 (x578 x1937)))
(define-fun x829 ((x1937 Int)) Int (ite (= x1937 0) x1982 (x143 x1937)))
(define-fun x1270 ((x1937 Int)) Int (ite (= 32 x1937) x848 (x829 x1937)))
(define-fun x3 ((x1937 Int)) Int (ite (= 64 x1937) x982 (x1270 x1937)))
(define-fun x958 ((x1937 Int)) Int (ite (= 96 x1937) x1168 (x3 x1937)))
(define-fun x1235 ((x1937 Int)) Int (ite (= 128 x1937) x1158 (x958 x1937)))
(define-fun x572 ((x1937 Int)) Int (ite (and x1229 x209) (x816 x1937) (ite (and x1383 x1281) (x1443 x1937) (x354 x1937))))
(define-fun x212 ((x1937 Int)) Int (ite (= 128 x1937) x1927 (x56 x1937)))
(define-fun x1687 ((x1937 Int)) Int (ite (= 160 x1937) x353 (x212 x1937)))
(define-fun x1075 ((x1937 Int)) Int (ite (= x1937 192) x467 (x1687 x1937)))
(define-fun x1804 ((x1937 Int)) Int (ite (= 224 x1937) x695 (x1075 x1937)))
(define-fun x1686 ((x1937 Int)) Int (ite (= 256 x1937) x861 (x1804 x1937)))
(define-fun x1320 ((x1937 Int)) Int (ite (= x1937 0) x1683 (x474 x1937)))
(define-fun x1117 ((x1937 Int)) Int (ite (= 32 x1937) x1336 (x1320 x1937)))
(define-fun x1867 ((x1937 Int)) Int (ite (= 64 x1937) x1371 (x1117 x1937)))
(define-fun x836 ((x1937 Int)) Int (ite (= x1937 96) x1286 (x1867 x1937)))
(define-fun x649 ((x1937 Int)) Int (ite (= x1937 128) x511 (x836 x1937)))
(define-fun x1602 ((x1581 Int)) Bool (=> (and (not (= 20282409603651670423947251286016 x1581)) (not (= 1099511627775 x1581)) (not (= x1581 950698303)) (not (= x1581 1208925819614629174706176)) (not (= x1581 1208925819614629174706175)) (not (= 18446744073709551616 x1581)) (not (= x1581 3833100637)) (not (= 3253611544 x1581)) (not (= x1581 170141183460469231731687303715884105727)) (> x1581 10000) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1581)) (not (= 274184521717934524641157099916833587233 x1581)) (not (= 3119561463 x1581)) (not (= 3889878717 x1581)) (not (= x1581 274184521717934524641157099916833587211)) (not (= x1581 117300739)) (not (= 3840337785 x1581)) (not (= x1581 3257672857)) (not (= x1581 4062139261)) (not (= 65535 x1581)) (not (= 3695885053 x1581)) (not (= x1581 274184521717934524641157099916833587223)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1581)) (not (= x1581 340282366920938463463374607431768211455)) (not (= 1110625635 x1581)) (not (= 826074471 x1581)) (not (= 20282409603651670423947251286015 x1581)) (not (= x1581 1461501637330902918203684832716283019655932542975)) (not (= x1581 115197700812830431890159100217698998050002284567939525164234024451216521560064)) (not (= x1581 1168994686)) (not (= x1581 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not (= x1581 274184521717934524641157099916833587244)) (not (= 10141204801825835211973625643007 x1581)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1581)) (not (= 340282366920938463463374607431768211456 x1581)) (not (= 3795249780 x1581)) (not (= x1581 4272920204)) (not (= x1581 599290589)) (not (= 404098525 x1581)) (not (= x1581 2068668150)) (not (= 1889567281 x1581)) (not (= x1581 274184521717934524641157099916833587227)) (not (= x1581 2514000705)) (not (= 274184521717934524641157099916833587235 x1581)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1581)) (not (= x1581 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= 157198259 x1581)) (not (= 65536 x1581)) (not (= 2362581449 x1581)) (not (= x1581 274184521717934524641157099916833587231)) (not (= x1581 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= 2835717307 x1581)) (not (= x1581 3638949393)) (not (= 18446744073709551615 x1581)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1581))) (not ((_ is x308) (x752 x1581)))))
(assert (x700 x1485))
(assert (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 (x470 (x308 115792089237316195423570985008687907853269984655499359237631748795939503996928))))
(assert (= x161 (=> (and (= (x611 160) x1833) (= (not x180) x1221) (= x527 (> x562 0)) (not (ite x1221 x1221 (and (> x1833 170141183460469231731687303715884105727) (= (<= x1833 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (<= x592 1208925819614629174706175) (= x1344 (x818 340282366920938463463374607431768211455 x1833)) (= x592 (x611 256)) (<= x847 1208925819614629174706175) (= x698 0) (= (mod (* x1344 (x1841 x780)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x665) (= x562 (x818 255 x1873)) (= (x611 128) x847) (= x180 (and (< 0 x1833) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1833) true)))) (and (=> (and (= x665 x1558) (not x527)) x1708) (=> x527 x1770)))))
(assert (= (ite (= 132 x101) 274184521717934524641157099916833587211 (x427 x101)) (x1163 x101)))
(assert (= (x1771 x101) (ite (= x101 x1094) x1591 (x204 x101))))
(assert (x1209 x1045))
(assert (x1209 x1050))
(assert (x1209 x955))
(assert (x700 x1185))
(assert (x1754 x1377))
(assert (x700 x1691))
(assert (x700 x1351))
(assert (x700 x216))
(assert (x700 x245))
(assert (x421 x131 x1536))
(assert (= (x470 (x308 599290589)) 599290589))
(assert (x700 x130))
(assert (x700 x658))
(assert (x894 x1777 x1379))
(assert (x700 x787))
(assert (x303 x109 x640))
(assert (x700 x418))
(assert (x700 x763))
(assert (x700 x1711))
(assert (x894 x321 x759))
(assert (x700 x1644))
(assert (x700 x1400))
(assert (x700 x50))
(assert (x700 x1494))
(assert (x450 x1090 x1580))
(assert (x1209 x246))
(assert (x700 x875))
(assert (x700 x1161))
(assert (x1209 x1830))
(assert (= x1190 (or (and x1383 x1281) (and x812 x563) (and x209 x1229))))
(assert (x421 x961 x1028))
(assert (x700 x304))
(assert (x894 x1295 x6))
(assert (x700 x1446))
(assert (x700 x362))
(assert (x700 x565))
(assert (x700 x585))
(assert (x700 x1638))
(assert (x700 x802))
(assert (x700 x1892))
(assert (x700 x409))
(assert (x700 x19))
(assert (x700 x1206))
(assert (= 2068668150 (x470 (x308 2068668150))))
(assert (x700 x1231))
(assert (x700 x1447))
(assert (x303 x955 x391))
(assert (= (ite (= x1967 x1210) x1685 (x854 x1210)) (x1666 x1210)))
(assert (x700 x545))
(assert (x1602 x1494))
(assert (x1209 x573))
(assert (x700 x174))
(assert (x700 x1456))
(assert (= (x568 x911) 0))
(assert (x700 x202))
(assert (x1209 x1375))
(assert (x700 x810))
(assert (x700 x1913))
(assert (x450 x1665 x713))
(assert (x700 x707))
(assert (x700 x1213))
(assert (x700 x1955))
(assert (x700 x588))
(assert (= true x806))
(assert (x700 x699))
(assert (x1209 x1240))
(assert (x700 x1347))
(assert (x700 x1430))
(assert (x700 x1178))
(assert (x700 x1499))
(assert (= (x470 (x752 x350)) x350))
(assert (x894 x692 x1793))
(assert (x700 x874))
(assert (x1754 x1567))
(assert (x450 x638 x1653))
(assert (x700 x1261))
(assert (x700 x911))
(assert (x700 x446))
(assert (x700 x983))
(assert (x700 x1627))
(assert (x1209 x1653))
(assert (x450 x1705 x326))
(assert (x303 x735 x1829))
(assert (= (x752 115792089237316195423570985008687907853269984655499359237631748795939503996928) (x308 115792089237316195423570985008687907853269984655499359237631748795939503996928)))
(assert (x700 x243))
(assert (x700 x479))
(assert (= (x97 x1787) 0))
(assert (x1266 x1194))
(assert (= (x470 (x308 274184521717934524641157099916833587244)) 274184521717934524641157099916833587244))
(assert (x700 x1572))
(assert (x700 x1546))
(assert (x700 x1541))
(assert (= x23 (=> (= x37 (= 274184521717934524641157099916833587223 x990)) (and (=> (and (not x461) (not (> 4 x1851)) (not (= 117300739 x897)) (= x432 (+ x1888 x515)) (not (= 157198259 x897)) x37 (= x75 (x105 (x752 x5) (x308 1) 0)) (= x515 x1524) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1074) (and (> 96 x1074) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1074) true))) x1585) (not x290) (= (x1291 (- x1725 x1788)) x681) (= x497 1) (>= x1524 0) (= x389 x1851) (not x1585) (= 274184521717934524641157099916833587211 x1541) (= x177 (x1291 (- x346 x1788))) (> 826074471 x897) (= x760 274184521717934524641157099916833587211) (= (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0) x1938) (= (x818 1461501637330902918203684832716283019655932542975 x113) x5) (>= x1725 0) (= (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0) x846) (= x12 (x818 1461501637330902918203684832716283019655932542975 x113)) (= (x105 (x752 x999) (x308 2) 0) x43) (= x1074 (x1291 (- x1851 4))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x162) (= (x105 (x752 x12) (x308 1) 0) x1342) (= (< x1725 x1855) x461) (= x1243 x1788) (= x1725 (x444 x548)) (not (= x897 404098525)) (> x910 0) (= x244 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x346) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1855 x1524)) (= x1855 x1788) (= 100 x1851) (= (x1571 x1342) x346) (= x1888 x1855) (= x1524 (x1577 x1938)) (= x548 (x105 (x752 274184521717934524641157099916833587211) x43 0)) (= 274184521717934524641157099916833587211 x1991) (>= 1461501637330902918203684832716283019655932542975 x113) (= (< x346 x1788) x290) (= (x1124 (x752 274184521717934524641157099916833587223)) x910) (= 274184521717934524641157099916833587211 x124) (= x113 x294) (= (x818 1461501637330902918203684832716283019655932542975 x113) x419) (<= 0 x346) (= 599290589 x897) (= x999 (x818 1461501637330902918203684832716283019655932542975 x113)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1725) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1524)) x710) (=> (not x37) x1151)))))
(assert (x1209 x1310))
(assert (x700 x1512))
(assert (x1209 x1194))
(assert (x700 x665))
(assert (x700 x918))
(assert (x894 x1314 x152))
(assert (= x840 true))
(assert (x700 x1090))
(assert (= (ite (= x1967 x1887) x1685 (x854 x1887)) (x1666 x1887)))
(assert (= (x752 274184521717934524641157099916833587231) (x308 274184521717934524641157099916833587231)))
(assert (= (=> (and (= x1206 (x136 x1903)) (= x430 x1431) (= (x818 340282366920938463463374607431768211455 x1588) x393) (= x638 (ite (not x1438) 1 0)) (= x1653 (ite (or (and (<= x430 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x166)) (and (= (<= x430 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x166 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x166 x430))) 1 0)) (= (x818 18446744073709551615 x1660) x390) (= x1643 (x1607 (+ x1065 x675))) (= x1940 x1643) (= (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1101) x1065) (= (ite (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x96)) (< x96 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x96)) 1 0) x1310) (= (x1612 x1445) x1660) (= (x1291 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x96)) x1722) (= x1425 0) (= x635 x61) (= x635 (x1607 (+ x96 x430))) (= (x21 x911) x1588) (= x1438 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x96) true) (> 0 x96)) (> x96 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x390 x463)) (= (mod (* x984 x393) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x463) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x430)) (= 0 x156) (= x911 (x1607 (+ 288 x245))) (= x903 (x21 x675)) (= x1362 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1588)) (< 0 x1588))) (= x1101 (x1607 (+ 31 x1144))) (= x746 (x21 x1309)) (= (x1607 (+ 64 x1175)) x1903) (= (x1607 (+ 64 x1132)) x1445) (= (not x1362) x1470) (= x1434 (x1607 (+ x675 64))) (<= x903 1208925819614629174706175) (= (* x463 x390) x1431) (= x1425 (x818 x1310 x283)) (= (x1291 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x96)) x166) (= x1309 (x1607 (+ 64 x1434))) (= (x818 x638 x1653) x156) (not (or (> x1144 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 160 x1144) (= (<= x1144 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (ite (or (and (< x430 x1722) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1722) (<= x430 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x430 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1722 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x283) (<= x746 1208925819614629174706175) (not (= 0 x415)) (not (ite x1470 x1470 (and (< 170141183460469231731687303715884105727 x1588) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1588)))))) x1203) x1288))
(assert (x700 x1101))
(assert (x700 x1344))
(assert (x1209 x692))
(assert (x700 x1789))
(assert (x700 x511))
(assert (= (=> (= (= x363 274184521717934524641157099916833587233) x1779) (and (=> (and (<= 0 x695) (= x1756 4) (= x1835 (x733 192)) x1779 (= (x733 256) x1368) (not (< x1756 4)) (<= x1927 1208925819614629174706175) (>= x744 0) (>= x467 0) (< 0 x1782) (= x1782 (x1124 (x752 274184521717934524641157099916833587233))) (= 4272920204 x1248) (= x1563 1) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x184) (= (x733 224) x1261) (not (= x1248 2362581449)) (not (> 2362581449 x1248)) (= x1238 (x733 192)) (<= x467 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x545 160) (= x447 (x733 128)) (= x744 (x1635 x790)) (= x1652 (x733 128)) (= x1871 (x733 160)) (< x861 1208925819614629174706176) (= (x733 224) x318) (= x1756 4) (<= x695 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1927 0) (not (= 4062139261 x1248)) (= x790 (x105 (x752 x1477) (x308 1) 0)) (not (= 3257672857 x1248)) (< x1927 1208925819614629174706176) (= x1478 (x733 160)) (<= x744 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x733 256) x1338) (<= 0 x861) (>= 1208925819614629174706175 x861)) x1466) (=> (not x1779) x866))) x547))
(assert (x826 x780))
(assert (x1209 x1657))
(assert (= (x134 x1081 1) (div x1081 2)))
(assert (x700 x890))
(assert (= (x470 (x752 x12)) x12))
(assert (= x281 (=> (and (= x1696 0) (not (= x455 0)) (= (ite (or (and (<= x1054 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1480 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1054 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1480 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1054 x1480))) 1 0) x791) (= (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x29) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x13)) (< x29 x13)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x13) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x29))) 1 0) x488) (= x1026 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x533) (and (< x533 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x533) true)))) (= (x1291 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x872)) x1932) (<= x1444 20282409603651670423947251286015) (= x389 (x1291 (- x258 x1840))) (= x1496 (or (and (< x715 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x715))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x715))) (<= x521 18446744073709551615) (= (* x411 x549) x630) (= x1696 (x818 x1705 x326)) (= x1185 0) (<= 0 x411) (>= x521 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x521 x1444)) (= x1853 (ite (or (> x715 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x715) true) (> 0 x715))) 1 0)) (not (> x1016 10141204801825835211973625643007)) (= x1967 (x1607 (+ x1974 64))) (not (< 10141204801825835211973625643007 x1150)) (= x178 (x818 x1853 x458)) (not (> x29 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= (x1607 (+ x1315 128)) x1840) (= x715 (x1939 x1611)) (= x1315 (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1384)) (>= 18446744073709551615 x411) (= (x818 20282409603651670423947251286015 x1314) x1016) (not (or (and (= (<= x1908 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1908)) (> x1908 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x89 (not x1026)) (not (ite x89 (not (< x533 x1630)) x89)) (= (ite (or (and (< x872 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x872) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x872)) 1 0) x841) (= x1384 (x1607 (+ x1908 31))) (= x630 x1611) (= 0 x1126) (< x411 18446744073709551616) (= x1150 (x818 20282409603651670423947251286015 x1611)) (= x872 (x1291 (- x29 x715))) (= (x818 x841 x791) x1185) (= (x818 1461501637330902918203684832716283019655932542975 x1964) x990) (= 0 x178) (= x1974 (x1607 (+ x1315 132))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x411 x549)) (< x521 18446744073709551616) (<= 0 x1444) (= x653 x1314) (= x954 (x1607 (+ x715 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (* x521 x1444) x653) (>= 20282409603651670423947251286015 x549) (= (ite (not x1496) 1 0) x730) (= x13 (x1607 (+ x715 57896044618658097711785492504343953926634992332820282019728792003956564819968))) (= (x1573 128) x29) (> 20282409603651670423947251286016 x549) (= (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x29) (> x954 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x954 x29) (= (<= x954 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x29)))) 1 0) x458) (= (x818 x730 x488) x1126) (= x1054 (x1291 (- x13 x29))) (= x396 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x872) true) (> 0 x872)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x872))) (<= 0 x549) (= x1307 (x1607 (+ x1840 36))) (> 20282409603651670423947251286016 x1444) (= x1705 (ite (not x396) 1 0)) (= x794 274184521717934524641157099916833587211) (= (x1607 (+ x872 x1480)) x533) (= x978 (= 274184521717934524641157099916833587231 x990)) (= (x1607 (+ x1840 100)) x258) (= x326 (ite (or (and (< x1932 x1480) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1932) (<= x1480 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1480) (> x1932 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= x1480 (x1939 x1314))) (and (=> (not x978) x59) (=> (and (<= x1513 1461501637330902918203684832716283019655932542975) (<= 0 x1373) (= x1207 (x818 1461501637330902918203684832716283019655932542975 x1513)) (= x1741 x389) (= (+ x845 x1251) x647) (not (= 404098525 x146)) (not (< x1741 4)) (= 274184521717934524641157099916833587211 x226) (= (x818 1461501637330902918203684832716283019655932542975 x1513) x1299) (= x1243 x72) (= (x1291 (- x1373 x72)) x1499) (= x347 (x105 (x752 274184521717934524641157099916833587211) x770 0)) (= x1057 x72) (= (x105 (x752 x1299) (x308 1) 0) x671) (= x462 (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0)) (< x146 826074471) (= x244 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1500) (= x770 (x105 (x752 x484) (x308 2) 0)) (= x41 (x1291 (- x366 x72))) (<= x366 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1291 (- x1741 4)) x1679) (= x1422 (< x1373 x1057)) (<= x1373 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1373 (x1407 x347)) (= 100 x1741) (= (or (and (= (<= x1679 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x1679)) (> x1679 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x385) (= (x818 1461501637330902918203684832716283019655932542975 x1513) x708) (not (= 117300739 x146)) (= x1500 (x1464 x36)) (= x1936 274184521717934524641157099916833587211) (not x1972) (< 0 x992) (= 599290589 x146) (= x497 1) (= x845 x1057) (= 274184521717934524641157099916833587211 x234) (< (+ x1057 x1500) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x385) (= x1513 x294) (not (= 157198259 x146)) (>= x366 0) (= x484 (x818 1461501637330902918203684832716283019655932542975 x1513)) (= (x1600 x671) x366) (>= x1500 0) (= x933 274184521717934524641157099916833587211) (not x1422) x978 (= x1972 (> x72 x366)) (= x1251 x1500) (= (x1124 (x752 274184521717934524641157099916833587231)) x992) (= x1973 (x105 (x752 x1207) (x308 1) 0)) (= x36 (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0)) (= x16 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x710)))))
(assert (x700 x1286))
(assert (= x1409 x1190))
(assert (x1209 x409))
(assert (x700 x1734))
(assert (= (x470 (x752 x485)) x485))
(assert (= (x470 (x308 404098525)) 404098525))
(assert (x700 x70))
(assert (x700 x974))
(assert (x1602 x1021))
(assert (x700 x166))
(assert (x1120 x1714 x507))
(assert (= (x752 18446744073709551616) (x308 18446744073709551616)))
(assert (x700 x1786))
(assert (= 1461501637330902918203684832716283019655932542975 (x470 (x308 1461501637330902918203684832716283019655932542975))))
(assert (x700 x1189))
(assert (x700 x1796))
(assert (x700 x1310))
(assert (=> (>= 10000 x1742) (= (x308 x1742) (x752 x1742))))
(assert (= x420 (=> (and (= (ite x956 1 0) x275) (= x956 (not x1388)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1878) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1878) true) (> 0 x1878))) x1388)) x749)))
(assert (x700 x246))
(assert (x700 x1057))
(assert (x700 x1639))
(assert (= 170141183460469231731687303715884105727 (x470 (x308 170141183460469231731687303715884105727))))
(assert (x700 x681))
(assert (x700 x79))
(assert (x700 x1932))
(assert (x700 x436))
(assert (x1209 x1228))
(assert (x700 x1361))
(assert (x700 x841))
(assert (x1209 x472))
(assert (= (x308 1208925819614629174706175) (x752 1208925819614629174706175)))
(assert (= (x470 (x308 65536)) 65536))
(assert (x700 x1935))
(assert (x700 x638))
(assert (x700 x528))
(assert (= (x470 (x308 3253611544)) 3253611544))
(assert (x1754 x1794))
(assert (x700 x792))
(assert (x700 x88))
(assert (x700 x1440))
(assert (x700 x953))
(assert (x700 x321))
(assert (x894 x1432 x336))
(assert (x1209 x1705))
(assert (x700 x102))
(assert (= x103 (=> (and (= (x818 x1098 x1439) x1084) (= x899 (* x1285 x1880)) (= (or (and (< x665 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x665) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x665)) x884) (= (x1291 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x665)) x151) (>= 1208925819614629174706175 x636) (= (x1872 640) x1579) (= (mod (* x1876 x676) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1285) (= (x193 672) x205) (= x676 (x818 340282366920938463463374607431768211455 x648)) (= (x818 x1525 x830) x1354) (= x1439 (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1762) (> x151 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x151) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1762)) (> x1762 x151))) 1 0)) (= x1004 (and (> x648 0) (= true (<= x648 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1285 x1880)) (= x479 x110) (not (> x1762 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not (= 0 x1916)) (= x899 x1762) (= x830 (ite (or (and (> x1671 x1762) (= (<= x1762 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1671))) (and (<= x1671 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1762 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= 0 x1354) (not (ite x240 x240 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x648)) (> x648 170141183460469231731687303715884105727)))) (not (or (and (< x1035 160) (= (<= x1035 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1035))) (= x648 (x1807 832)) (= (ite (not x884) 1 0) x1098) (= x1671 (x1291 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x665))) (= (not x1004) x240) (= x1525 (ite (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x665)) (< x665 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x665)) 1 0)) (= (x1607 (+ x1762 x665)) x479) (<= x407 1208925819614629174706175) (= 0 x1084) (= (x818 18446744073709551615 x205) x1880) (= x407 (x1807 800)) (= (x1807 928) x636)) x1859)))
(assert (x700 x1885))
(assert (x450 x743 x684))
(assert (x39 x598 x482))
(assert (= (x308 10141204801825835211973625643007) (x752 10141204801825835211973625643007)))
(assert (x700 x525))
(assert (x700 x145))
(assert (x700 x1249))
(assert (x700 x1378))
(assert (x700 x1641))
(assert (=> (<= x1715 10000) (= (x752 x1715) (x308 x1715))))
(assert (= (x752 1168994686) (x308 1168994686)))
(assert (x700 x1965))
(assert (x700 x724))
(assert (x1209 x735))
(assert (x700 x298))
(assert (= (=> (and (= (not (= 0 x1492)) x267) (= x1492 (x818 1 x241))) (and (=> x267 x342) (=> (and (not x267) (= x1623 x776)) x1001))) x1157))
(assert (x1209 x1110))
(assert (x39 x1087 x853))
(assert (= (x470 (x308 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x700 x599))
(assert (x700 x1982))
(assert (x700 x469))
(assert (x700 x924))
(assert (x700 x678))
(assert (x700 x1121))
(assert (= (x308 340282366920938463463374607431768211455) (x752 340282366920938463463374607431768211455)))
(assert (x700 x1794))
(assert (x700 x146))
(assert (= x585 (x470 (x752 x585))))
(assert (x700 x1204))
(assert (= (ite (= x1905 x86) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1969 x1905)) (x403 x1905)))
(assert (x700 x1926))
(assert (x700 x746))
(assert (x700 x925))
(assert (x700 x1828))
(assert (x700 x1467))
(assert (x700 x1084))
(assert (x700 x1357))
(assert (x700 x1442))
(assert (x700 x1631))
(assert (x700 x1617))
(assert (x700 x998))
(assert (= (x470 (x308 3695885053)) 3695885053))
(assert (x1209 x600))
(assert (x1209 x1442))
(assert (x700 x659))
(assert (= (=> (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x96) true) (< x96 0)) (> x96 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1735) (and (=> (and (not x1735) (= x1463 x1405) (= 1 x621)) x1744) (=> (and (= x259 (x818 1461501637330902918203684832716283019655932542975 x1746)) (> x871 0) x1735 (= x94 (x818 65535 x772)) (or (and (= (= 0 (x496 x1864 x1377)) x1615) (= 1 x1786) (= x1045 (ite (< x573 32) 1 0)) (or (and (or (and (not x867) (= (= x1395 0) x1473) (= x867 (< 1 x475)) (= (ite x1473 1 10) x1346) x317 (= x475 (x134 x573 1)) (= (x818 1 x573) x1395) (= x251 100)) (and (= 1 x1346) (not x317) (= 10 x251))) (not (< x486 x1346)) (= x317 (> x573 1)) (= x213 x1087) x1615 (= x486 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x251)) (= (mod (* x251 x1346) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x213)) (and (not x1615) (= (x76 10 x573) x1087))) (= 1 x1467) (= x491 (ite (< x573 78) 1 0)) x1301 (= (x818 x1467 x491) x1864) (= (x818 x1786 x1045) x1377)) (and (= 1 x1087) (not x1301))) (= (> x573 0) x1301) (= (x134 x1746 160) x772) (= (x818 255 x1873) x871) (= (x818 65535 x1753) x367) (= x1365 (x818 1461501637330902918203684832716283019655932542975 x735)) (= (x1607 (+ 416 x50)) x245) (= x1806 (x818 65535 x690)) (= (x134 x1746 192) x1753) (= x877 (x134 x735 160)) (= x573 (x818 255 x877)) (= x690 (x134 x1746 176))) x731))) x534))
(assert (x700 x237))
(assert (x700 x1871))
(assert (x700 x1704))
(assert (x700 x607))
(assert (= x1027 x1097))
(assert (x1209 x1833))
(assert (x700 x382))
(assert (x747 x15 x27))
(assert (x700 x1149))
(assert (x700 x1703))
(assert (x700 x1665))
(assert (x700 x1945))
(assert (= (x1771 x50) (ite (= x50 x1094) x1591 (x204 x50))))
(assert (x700 x1104))
(assert (x700 x520))
(assert (x1236 x821 x277 x1792 x1113))
(assert (= (ite (= x1210 x86) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1969 x1210)) (x403 x1210)))
(assert (x700 x684))
(assert (x700 x1086))
(assert (x700 x256))
(assert (= (x752 274184521717934524641157099916833587244) (x308 274184521717934524641157099916833587244)))
(assert (= x1252 (and (not x1241) x883)))
(assert (x1266 x1110))
(assert (x700 x1000))
(assert (x700 x929))
(assert (x421 x1485 x535))
(assert (x700 x392))
(assert (x700 x263))
(assert (x700 x1991))
(assert (x700 x1823))
(assert (x303 x1715 x139))
(assert (x700 x1340))
(assert (x700 x1599))
(assert (x700 x769))
(assert (x700 x251))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x470 (x308 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (= 2362581449 (x470 (x308 2362581449))))
(assert (x700 x1411))
(assert (x700 x68))
(assert (x700 x982))
(assert (x700 x124))
(assert (x700 x560))
(assert (= (ite (= x675 x1309) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1771 x1309)) (x1115 x1309)))
(assert (x700 x492))
(assert (x1209 x8))
(assert (x303 x1746 x1709))
(assert (x700 x833))
(assert (x894 x1538 x1583))
(assert (x1209 x682))
(assert (=> (>= 10000 x1118) (= (x752 x1118) (x308 x1118))))
(assert (= x812 (and x1383 (not x1281))))
(assert (x700 x919))
(assert (x700 x163))
(assert (x700 x61))
(assert (x700 x1763))
(assert (x700 x959))
(assert (= (x470 (x752 x1477)) x1477))
(assert (x421 x1302 x843))
(assert (x700 x1567))
(assert (x700 x1611))
(assert (x700 x1014))
(assert (= x1664 (and x1557 x1735)))
(assert (x700 x687))
(assert (x1209 x601))
(assert (= (x308 274184521717934524641157099916833587233) (x752 274184521717934524641157099916833587233)))
(assert (x700 x1141))
(assert (x1209 x1101))
(assert (x700 x288))
(assert (x700 x629))
(assert (x700 x1313))
(assert (x700 x234))
(assert (x700 x1159))
(assert (x303 x890 x502))
(assert (x421 x1255 x800))
(assert (x1209 x1255))
(assert (x700 x1156))
(assert (x894 x608 x947))
(assert (x1602 x1299))
(assert (=> (<= x1207 10000) (= (x308 x1207) (x752 x1207))))
(assert (x450 x1853 x458))
(assert (x1209 x1786))
(assert (x700 x1335))
(assert (x700 x1005))
(assert (x700 x91))
(assert (x700 x497))
(assert (x700 x744))
(assert (= (x752 1208925819614629174706176) (x308 1208925819614629174706176)))
(assert (x700 x1008))
(assert (x700 x1353))
(assert (= (x403 x1887) (ite (= x1887 x86) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1969 x1887))))
(assert (x894 x682 x1698))
(assert (x1522 x1228 x1544))
(assert (x700 x1851))
(assert (x700 x189))
(assert (=> (>= 10000 x967) (= (x308 x967) (x752 x967))))
(assert (x700 x847))
(assert (x700 x1556))
(assert (x700 x490))
(assert (x303 x1056 x1986))
(assert (x700 x1762))
(assert (x700 x1255))
(assert (x700 x690))
(assert (x700 x857))
(assert (x700 x886))
(assert (= x1980 (or (and x616 (not x788)) x1604)))
(assert (x1602 x999))
(assert (x700 x517))
(assert (x700 x1906))
(assert (x700 x1752))
(assert (x700 x389))
(assert (x894 x246 x739))
(assert (= (or (and x741 x513) (and x135 x1740) (and x1743 x1552) (and x1507 x1027)) x440))
(assert (x700 x1748))
(assert (x1602 274184521717934524641157099916833587211))
(assert (x700 x1950))
(assert (x700 x1315))
(assert (= (x470 (x308 1208925819614629174706176)) 1208925819614629174706176))
(assert (x700 x126))
(assert (x700 x213))
(assert (x700 x121))
(assert (x700 x1306))
(assert (x700 x721))
(assert (x1209 x1427))
(assert (= (x470 (x752 x1629)) x1629))
(assert (x1602 x923))
(assert (x700 x457))
(assert (x700 x521))
(assert (x700 x1093))
(assert (x700 x858))
(assert (x1209 x1777))
(assert (x700 x1558))
(assert (x700 x1630))
(assert (x1209 x131))
(assert (x700 x1171))
(assert (x700 x1387))
(assert (x700 x955))
(assert (x700 x1518))
(assert (x700 x577))
(assert (x747 x552 x454))
(assert (= (x752 274184521717934524641157099916833587235) (x308 274184521717934524641157099916833587235)))
(assert (x700 x1837))
(assert (x700 x1894))
(assert (x1209 x1098))
(assert (x700 x965))
(assert (x700 x376))
(assert (= 3889878717 (x470 (x308 3889878717))))
(assert (x826 x1050))
(assert (x747 x392 x222))
(assert (= (x470 (x308 340282366920938463463374607431768211455)) 340282366920938463463374607431768211455))
(assert (= 3119561463 (x470 (x308 3119561463))))
(assert (x700 x1854))
(assert (x700 x573))
(assert (x700 x881))
(assert (x700 x1296))
(assert (=> (<= x12 10000) (= (x308 x12) (x752 x12))))
(assert (x700 x1366))
(assert (x700 x1728))
(assert (x700 x571))
(assert (= 20282409603651670423947251286015 (x470 (x308 20282409603651670423947251286015))))
(assert (x39 x593 x1677))
(assert (=> (<= x484 10000) (= (x308 x484) (x752 x484))))
(assert (x700 x1202))
(assert (x700 x1334))
(assert (x700 x1606))
(assert (x700 x196))
(assert (x700 x1651))
(assert (x303 x1021 x1614))
(assert (x700 x400))
(assert (x700 x1722))
(assert (x700 x529))
(assert (x700 x1172))
(assert (= x1537 (=> (and (= (x1316 x1849) x1876) (= (x818 1461501637330902918203684832716283019655932542975 x1447) x967) (= x1700 800) (= x916 (= x506 274184521717934524641157099916833587235)) (> 340282366920938463463374607431768211456 x1876) (= (x134 x735 168) x734) (= x1556 (x818 18446744073709551615 x593)) (<= x1876 340282366920938463463374607431768211455) (= x657 544) (= x506 (x818 1461501637330902918203684832716283019655932542975 x1355)) (>= x1876 0) (= x1355 (x801 608)) (= (x1504 576) x1447) (= x766 (x105 (x752 x585) (x308 6) 0)) (= x555 (x818 18446744073709551615 x734)) (= (x105 (x752 x967) x766 0) x1849) (= x585 (x818 1461501637330902918203684832716283019655932542975 x1715))) (and (=> (and (= (x602 224) x1763) (= x1894 (x602 128)) (= (x1082 x1640) x1172) (>= x34 0) (not (= x1049 4062139261)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x196) (= x565 (x602 224)) (= x478 4) (not (= 3257672857 x1049)) (>= x1805 0) (<= x34 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1976 (x602 256)) (= x1076 (x602 160)) (> 1208925819614629174706176 x633) (= x1640 (x105 (x752 x1477) (x308 1) 0)) (>= x196 0) (= x1620 (x602 160)) (< 0 x1676) (= (x602 192) x994) (= x1049 4272920204) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1172) x916 (= 160 x1035) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x289) (<= x1805 1208925819614629174706175) (= x478 4) (= (x1124 (x752 274184521717934524641157099916833587235)) x1676) (>= x1172 0) (not (< x1049 2362581449)) (>= 1208925819614629174706175 x633) (not (< x478 4)) (> 1208925819614629174706176 x1805) (= (x602 128) x1321) (= x1916 1) (= (x602 256) x1836) (not (= 2362581449 x1049)) (= (x602 192) x895) (<= 0 x633)) x103) (=> (not x916) x737)))))
(assert (x700 x615))
(assert (x1209 x1081))
(assert (x700 x1056))
(assert (and (= (x76 2 150) 1427247692705959881058285969449495136382746624) (= 137438953472 (x76 2 37)) (= 748288838313422294120286634350736906063837462003712 (x76 2 169)) (= (x76 2 176) 95780971304118053647396689196894323976171195136475136) (= 5192296858534827628530496329220096 (x76 2 112)) (= (x76 2 149) 713623846352979940529142984724747568191373312) (= 55213970774324510299478046898216203619608871777363092441300193790394368 (x76 2 235)) (= 8192 (x76 2 13)) (= (x76 2 255) 57896044618658097711785492504343953926634992332820282019728792003956564819968) (= 178405961588244985132285746181186892047843328 (x76 2 147)) (= (x76 2 33) 8589934592) (= (x76 2 137) 174224571863520493293247799005065324265472) (= 158456325028528675187087900672 (x76 2 97)) (= (x76 2 232) 6901746346790563787434755862277025452451108972170386555162524223799296) (= 52656145834278593348959013841835216159447547700274555627155488768 (x76 2 215)) (= (x76 2 168) 374144419156711147060143317175368453031918731001856) (= 12259964326927110866866776217202473468949912977468817408 (x76 2 183)) (= (x76 2 40) 1099511627776) (= (x76 2 127) 170141183460469231731687303715884105728) (= (x76 2 249) 904625697166532776746648320380374280103671755200316906558262375061821325312) (= 11692013098647223345629478661730264157247460343808 (x76 2 163)) (= 196159429230833773869868419475239575503198607639501078528 (x76 2 187)) (= 5316911983139663491615228241121378304 (x76 2 122)) (= 340282366920938463463374607431768211456 (x76 2 128)) (= (x76 2 160) 1461501637330902918203684832716283019655932542976) (= 332306998946228968225951765070086144 (x76 2 118)) (= (x76 2 220) 1684996666696914987166688442938726917102321526408785780068975640576) (= 3138550867693340381917894711603833208051177722232017256448 (x76 2 191)) (= 348449143727040986586495598010130648530944 (x76 2 138)) (= (x76 2 162) 5846006549323611672814739330865132078623730171904) (= (x76 2 212) 6582018229284824168619876730229402019930943462534319453394436096) (= 9671406556917033397649408 (x76 2 83)) (= (x76 2 57) 144115188075855872) (= 11150372599265311570767859136324180752990208 (x76 2 143)) (= 2305843009213693952 (x76 2 61)) (= (x76 2 184) 24519928653854221733733552434404946937899825954937634816) (= (x76 2 106) 81129638414606681695789005144064) (= (x76 2 148) 356811923176489970264571492362373784095686656) (= (x76 2 66) 73786976294838206464) (= 4 (x76 2 2)) (= 562949953421312 (x76 2 49)) (= (x76 2 101) 2535301200456458802993406410752) (= (x76 2 155) 45671926166590716193865151022383844364247891968) (= (x76 2 44) 17592186044416) (= (x76 2 207) 205688069665150755269371147819668813122841983204197482918576128) (= (x76 2 88) 309485009821345068724781056) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x76 2 240)) (= (x76 2 48) 281474976710656) (= (x76 2 199) 803469022129495137770981046170581301261101496891396417650688) (= 12855504354071922204335696738729300820177623950262342682411008 (x76 2 203)) (= (x76 2 153) 11417981541647679048466287755595961091061972992) (= (x76 2 16) 65536) (= 102844034832575377634685573909834406561420991602098741459288064 (x76 2 206)) (= 35184372088832 (x76 2 45)) (= (x76 2 26) 67108864) (= (x76 2 28) 268435456) (= 51422017416287688817342786954917203280710495801049370729644032 (x76 2 205)) (= (x76 2 210) 1645504557321206042154969182557350504982735865633579863348609024) (= (x76 2 93) 9903520314283042199192993792) (= 50216813883093446110686315385661331328818843555712276103168 (x76 2 195)) (= (x76 2 104) 20282409603651670423947251286016) (= (x76 2 91) 2475880078570760549798248448) (= 4294967296 (x76 2 32)) (= (x76 2 204) 25711008708143844408671393477458601640355247900524685364822016) (= 154742504910672534362390528 (x76 2 87)) (= (x76 2 177) 191561942608236107294793378393788647952342390272950272) (= (x76 2 140) 1393796574908163946345982392040522594123776) (= (x76 2 77) 151115727451828646838272) (= (x76 2 108) 324518553658426726783156020576256) (= (x76 2 170) 1496577676626844588240573268701473812127674924007424) (= (x76 2 233) 13803492693581127574869511724554050904902217944340773110325048447598592) (= (x76 2 136) 87112285931760246646623899502532662132736) (= 220855883097298041197912187592864814478435487109452369765200775161577472 (x76 2 237)) (= 21267647932558653966460912964485513216 (x76 2 124)) (= 210624583337114373395836055367340864637790190801098222508621955072 (x76 2 217)) (= (x76 2 239) 883423532389192164791648750371459257913741948437809479060803100646309888) (= (x76 2 63) 9223372036854775808) (= (x76 2 253) 14474011154664524427946373126085988481658748083205070504932198000989141204992) (= (x76 2 200) 1606938044258990275541962092341162602522202993782792835301376) (= 1569275433846670190958947355801916604025588861116008628224 (x76 2 190)) (= (x76 2 175) 47890485652059026823698344598447161988085597568237568) (= (x76 2 38) 274877906944) (= (x76 2 0) 1) (= (x76 2 214) 26328072917139296674479506920917608079723773850137277813577744384) (= (x76 2 94) 19807040628566084398385987584) (= 9444732965739290427392 (x76 2 73)) (= 784637716923335095479473677900958302012794430558004314112 (x76 2 189)) (= (x76 2 39) 549755813888) (= (x76 2 159) 730750818665451459101842416358141509827966271488) (= 226156424291633194186662080095093570025917938800079226639565593765455331328 (x76 2 247)) (= (x76 2 69) 590295810358705651712) (= (x76 2 6) 64) (= (x76 2 24) 16777216) (= (x76 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 6427752177035961102167848369364650410088811975131171341205504 (x76 2 202)) (= 110427941548649020598956093796432407239217743554726184882600387580788736 (x76 2 236)) (= (x76 2 164) 23384026197294446691258957323460528314494920687616) (= 39614081257132168796771975168 (x76 2 95)) (= 256 (x76 2 8)) (= (x76 2 251) 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= (x76 2 84) 19342813113834066795298816) (= (x76 2 230) 1725436586697640946858688965569256363112777243042596638790631055949824) (= (x76 2 102) 5070602400912917605986812821504) (= (x76 2 107) 162259276829213363391578010288128) (= (x76 2 79) 604462909807314587353088) (= 8388608 (x76 2 23)) (= (x76 2 47) 140737488355328) (= 452312848583266388373324160190187140051835877600158453279131187530910662656 (x76 2 248)) (= (x76 2 229) 862718293348820473429344482784628181556388621521298319395315527974912) (= (x76 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= 524288 (x76 2 19)) (= 18889465931478580854784 (x76 2 74)) (= (x76 2 151) 2854495385411919762116571938898990272765493248) (= (x76 2 158) 365375409332725729550921208179070754913983135744) (= (x76 2 14) 16384) (= 383123885216472214589586756787577295904684780545900544 (x76 2 178)) (= 536870912 (x76 2 29)) (= 4194304 (x76 2 22)) (= (x76 2 100) 1267650600228229401496703205376) (= (x76 2 188) 392318858461667547739736838950479151006397215279002157056) (= 5708990770823839524233143877797980545530986496 (x76 2 152)) (= 89202980794122492566142873090593446023921664 (x76 2 146)) (= (x76 2 96) 79228162514264337593543950336) (= (x76 2 226) 107839786668602559178668060348078522694548577690162289924414440996864) (= 85070591730234615865843651857942052864 (x76 2 126)) (= 21778071482940061661655974875633165533184 (x76 2 134)) (= (x76 2 185) 49039857307708443467467104868809893875799651909875269632) (= 2048 (x76 2 11)) (= 1361129467683753853853498429727072845824 (x76 2 130)) (= 8 (x76 2 3)) (= 166153499473114484112975882535043072 (x76 2 117)) (= 28948022309329048855892746252171976963317496166410141009864396001978282409984 (x76 2 254)) (= (x76 2 208) 411376139330301510538742295639337626245683966408394965837152256) (= 33554432 (x76 2 25)) (= (x76 2 119) 664613997892457936451903530140172288) (= 17179869184 (x76 2 34)) (= (x76 2 129) 680564733841876926926749214863536422912) (= 4722366482869645213696 (x76 2 72)) (= (x76 2 18) 262144) (= (x76 2 179) 766247770432944429179173513575154591809369561091801088) (= (x76 2 209) 822752278660603021077484591278675252491367932816789931674304512) (= 22835963083295358096932575511191922182123945984 (x76 2 154)) (= 22300745198530623141535718272648361505980416 (x76 2 144)) (= (x76 2 171) 2993155353253689176481146537402947624255349848014848) (= (x76 2 70) 1180591620717411303424) (= 83076749736557242056487941267521536 (x76 2 116)) (= (x76 2 17) 131072) (= 46768052394588893382517914646921056628989841375232 (x76 2 165)) (= (x76 2 156) 91343852333181432387730302044767688728495783936) (= 1024 (x76 2 10)) (= (x76 2 99) 633825300114114700748351602688) (= (x76 2 197) 200867255532373784442745261542645325315275374222849104412672) (= 105312291668557186697918027683670432318895095400549111254310977536 (x76 2 216)) (= (x76 2 250) 1809251394333065553493296640760748560207343510400633813116524750123642650624) (= 7067388259113537318333190002971674063309935587502475832486424805170479104 (x76 2 242)) (= (x76 2 56) 72057594037927936) (= (x76 2 167) 187072209578355573530071658587684226515959365500928) (= 441711766194596082395824375185729628956870974218904739530401550323154944 (x76 2 238)) (= (x76 2 194) 25108406941546723055343157692830665664409421777856138051584) (= 6739986666787659948666753771754907668409286105635143120275902562304 (x76 2 222)) (= 1237940039285380274899124224 (x76 2 90)) (= 34359738368 (x76 2 35)) (= 842498333348457493583344221469363458551160763204392890034487820288 (x76 2 219)) (= 401734511064747568885490523085290650630550748445698208825344 (x76 2 198)) (= (x76 2 59) 576460752303423488) (= (x76 2 113) 10384593717069655257060992658440192) (= 2251799813685248 (x76 2 51)) (= (x76 2 173) 11972621413014756705924586149611790497021399392059392) (= (x76 2 89) 618970019642690137449562112) (= 2923003274661805836407369665432566039311865085952 (x76 2 161)) (= (x76 2 60) 1152921504606846976) (= (x76 2 9) 512) (= 421249166674228746791672110734681729275580381602196445017243910144 (x76 2 218)) (= 3213876088517980551083924184682325205044405987565585670602752 (x76 2 201)) (= 18446744073709551616 (x76 2 64)) (= 10141204801825835211973625643008 (x76 2 103)) (= (x76 2 181) 3064991081731777716716694054300618367237478244367204352) (= (x76 2 52) 4503599627370496) (= (x76 2 182) 6129982163463555433433388108601236734474956488734408704) (= 13479973333575319897333507543509815336818572211270286240551805124608 (x76 2 223)) (= 5986310706507378352962293074805895248510699696029696 (x76 2 172)) (= (x76 2 174) 23945242826029513411849172299223580994042798784118784) (= 37778931862957161709568 (x76 2 75)) (= 27606985387162255149739023449108101809804435888681546220650096895197184 (x76 2 234)) (= (x76 2 20) 1048576) (= 1329227995784915872903807060280344576 (x76 2 120)) (= (x76 2 252) 7237005577332262213973186563042994240829374041602535252466099000494570602496) (= 2199023255552 (x76 2 41)) (= 2147483648 (x76 2 31)) (= 4398046511104 (x76 2 42)) (= (x76 2 244) 28269553036454149273332760011886696253239742350009903329945699220681916416) (= (x76 2 21) 2097152) (= (x76 2 196) 100433627766186892221372630771322662657637687111424552206336) (= 14134776518227074636666380005943348126619871175004951664972849610340958208 (x76 2 243)) (= (x76 2 65) 36893488147419103232) (= 43556142965880123323311949751266331066368 (x76 2 135)) (= (x76 2 4) 16) (= 1532495540865888858358347027150309183618739122183602176 (x76 2 180)) (= 288230376151711744 (x76 2 58)) (= (x76 2 132) 5444517870735015415413993718908291383296) (= 4611686018427387904 (x76 2 62)) (= 98079714615416886934934209737619787751599303819750539264 (x76 2 186)) (= 3291009114642412084309938365114701009965471731267159726697218048 (x76 2 211)) (= (x76 2 105) 40564819207303340847894502572032) (= (x76 2 111) 2596148429267413814265248164610048) (= 295147905179352825856 (x76 2 68)) (= 32 (x76 2 5)) (= 3533694129556768659166595001485837031654967793751237916243212402585239552 (x76 2 241)) (= 77371252455336267181195264 (x76 2 86)) (= 68719476736 (x76 2 36)) (= (x76 2 53) 9007199254740992) (= 431359146674410236714672241392314090778194310760649159697657763987456 (x76 2 228)) (= (x76 2 192) 6277101735386680763835789423207666416102355444464034512896) (= 2417851639229258349412352 (x76 2 81)) (= 113078212145816597093331040047546785012958969400039613319782796882727665664 (x76 2 246)) (= 5575186299632655785383929568162090376495104 (x76 2 142)) (= (x76 2 193) 12554203470773361527671578846415332832204710888928069025792) (= 696898287454081973172991196020261297061888 (x76 2 139)) (= (x76 2 225) 53919893334301279589334030174039261347274288845081144962207220498432) (= (x76 2 82) 4835703278458516698824704) (= (x76 2 157) 182687704666362864775460604089535377456991567872) (= 93536104789177786765035829293842113257979682750464 (x76 2 166)) (= 10633823966279326983230456482242756608 (x76 2 123)) (= (x76 2 114) 20769187434139310514121985316880384) (= (x76 2 30) 1073741824) (= (x76 2 12) 4096) (= (x76 2 27) 134217728) (= 316912650057057350374175801344 (x76 2 98)) (= (x76 2 109) 649037107316853453566312041152512) (= 1298074214633706907132624082305024 (x76 2 110)) (= (x76 2 125) 42535295865117307932921825928971026432) (= 147573952589676412928 (x76 2 67)) (= (x76 2 1) 2) (= (x76 2 121) 2658455991569831745807614120560689152) (= (x76 2 71) 2361183241434822606848) (= 13164036458569648337239753460458804039861886925068638906788872192 (x76 2 213)) (= 32768 (x76 2 15)) (= (x76 2 46) 70368744177664) (= (x76 2 131) 2722258935367507707706996859454145691648) (= 1208925819614629174706176 (x76 2 80)) (= (x76 2 55) 36028797018963968) (= (x76 2 76) 75557863725914323419136) (= 128 (x76 2 7)) (= 38685626227668133590597632 (x76 2 85)) (= (x76 2 231) 3450873173395281893717377931138512726225554486085193277581262111899648) (= 4951760157141521099596496896 (x76 2 92)) (= (x76 2 50) 1125899906842624) (= (x76 2 227) 215679573337205118357336120696157045389097155380324579848828881993728) (= (x76 2 54) 18014398509481984) (= 56539106072908298546665520023773392506479484700019806659891398441363832832 (x76 2 245)) (= 3369993333393829974333376885877453834204643052817571560137951281152 (x76 2 221)) (= (x76 2 115) 41538374868278621028243970633760768) (= 302231454903657293676544 (x76 2 78)) (= 10889035741470030830827987437816582766592 (x76 2 133)) (= 44601490397061246283071436545296723011960832 (x76 2 145)) (= 8796093022208 (x76 2 43)) (= (x76 2 141) 2787593149816327892691964784081045188247552)))
(assert (= 4272920204 (x470 (x308 4272920204))))
(assert (x700 x552))
(assert (x1846 x79 x1910))
(assert (x700 x314))
(assert (x700 x768))
(assert (x1209 x830))
(assert (x1602 x964))
(assert (x700 x1217))
(assert (x700 x1713))
(assert (x700 x1865))
(assert (= 0 (x568 x101)))
(assert (x1209 x1660))
(assert (x700 x512))
(assert (x700 x1949))
(assert (x894 x1240 x1311))
(assert (x700 x1242))
(assert (x700 x668))
(assert (x1602 x1886))
(assert (x700 x1333))
(assert (x700 x265))
(assert (= (x308 3795249780) (x752 3795249780)))
(assert (x700 x1806))
(assert (x700 x381))
(assert (x747 x772 x777))
(assert (x747 x1913 x1732))
(assert (x1754 x723))
(assert (x700 x1371))
(assert (= 3795249780 (x470 (x308 3795249780))))
(assert (x1209 x1244))
(assert (x700 x1788))
(assert (x700 x1146))
(assert (x700 x897))
(assert (x700 x592))
(assert (x700 x944))
(assert (x700 x1570))
(assert (= (x470 (x752 x1494)) x1494))
(assert (x700 x1264))
(assert (= 274184521717934524641157099916833587211 (x470 (x308 274184521717934524641157099916833587211))))
(assert (x700 x1818))
(assert (x700 x45))
(assert (x700 x1376))
(assert (= (x134 x198 1) (div x198 2)))
(assert (= 1889567281 (x470 (x308 1889567281))))
(assert (x700 x1419))
(assert (x700 x1294))
(assert (x700 x604))
(assert (x700 x405))
(assert (x700 x13))
(assert (x700 x754))
(assert (x700 x1610))
(assert (x1754 x1862))
(assert (x700 x34))
(assert (x1602 274184521717934524641157099916833587223))
(assert (x700 x1272))
(assert (x700 x730))
(assert (= (x308 274184521717934524641157099916833587227) (x752 274184521717934524641157099916833587227)))
(assert (= (ite (= 132 x911) 274184521717934524641157099916833587211 (x427 x911)) (x1163 x911)))
(assert (x700 x401))
(assert (x700 x887))
(assert (x700 x1941))
(assert (= (x470 (x308 20282409603651670423947251286016)) 20282409603651670423947251286016))
(assert (= (x308 3253611544) (x752 3253611544)))
(assert (x700 x1041))
(assert (x1120 x1950 x208))
(assert (x700 x694))
(assert (x700 x137))
(assert (= x1957 (and x1970 (not x1821))))
(assert (x1209 x1746))
(assert (x700 x1636))
(assert (x700 x644))
(assert (x1209 x402))
(assert (x700 x1076))
(assert (x700 x1889))
(assert (x1209 x291))
(assert (x700 x1737))
(assert (x1209 x1295))
(assert (x700 x1083))
(assert (x700 x1730))
(assert (x700 x1417))
(assert (x1602 x1477))
(assert (x39 x1375 x1772))
(assert (x1754 x1864))
(assert (x1209 x1485))
(assert (x1209 x1853))
(assert (= x1744 (=> (and (= x1955 (x1607 (+ 68 x1405))) (= (x818 1461501637330902918203684832716283019655932542975 x237) x1596) (= x435 (x818 1461501637330902918203684832716283019655932542975 x8)) (= (= x1596 274184521717934524641157099916833587231) x209) (= x221 (x1291 (- x1955 x1405))) (= (x1607 (+ x1405 36)) x615) (> x621 0) (= x1253 (x1607 (+ x1405 4)))) (and (=> (and (= (or (and (> 64 x1528) (= (<= x1528 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1528)) x1219) (= 32 x525) (= x858 x1680) (= 1 x219) (not (< x310 4)) (= x564 (x46 x1468)) (>= x557 0) (<= 0 x564) (= x1080 2835717307) (= x1574 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> x985 0) (>= 1461501637330902918203684832716283019655932542975 x858) (= x557 (x20 x1773)) (= x985 (x1124 (x752 274184521717934524641157099916833587231))) (= (+ x1162 x1450) x1000) (= x824 x1162) (not (= x1080 1889567281)) (= (x1291 (- x557 x824)) x382) (= x310 x221) (not (< x1080 826074471)) (<= x557 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1773 (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0)) (not (= 826074471 x1080)) (= (x105 (x752 x858) (x308 1) 0) x1468) (= x824 x1695) x209 (= (x1291 (- x310 4)) x1528) (<= x564 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x435 x858) (not x586) (not x1219) (not (= 2514000705 x1080)) (= x310 68) (= x1450 x564) (= x1055 (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0)) (= 274184521717934524641157099916833587211 x529) (= x1380 274184521717934524641157099916833587211) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x824 x564)) (= x586 (> x1695 x557))) x1471) (=> (not x209) x133)))))
(assert (x1209 x780))
(assert (x700 x449))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x470 (x308 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(assert (x700 x1304))
(assert (x700 x447))
(assert (x700 x1910))
(assert (= (x470 (x308 1110625635)) 1110625635))
(assert (= 4062139261 (x470 (x308 4062139261))))
(assert (x1120 x1830 x1670))
(assert (= x63 (and x483 x172)))
(assert (= 274184521717934524641157099916833587233 (x470 (x752 274184521717934524641157099916833587233))))
(assert (x700 x411))
(assert (x894 x1611 x1399))
(assert (x700 x648))
(assert (x700 x306))
(assert (x700 x562))
(assert (= (x470 (x752 x1299)) x1299))
(assert (x700 x1326))
(assert (x700 x109))
(assert (x747 x62 x489))
(assert (x700 x600))
(assert (x1209 x532))
(assert (x450 x1823 x1626))
(assert (x700 x1065))
(assert (= (or x18 (and x609 (not x1684))) x1097))
(assert (x1209 x1753))
(assert (x700 x720))
(assert (x747 x1085 x287))
(assert (x700 x1820))
(assert (x700 x438))
(assert (= (and (not x1779) x90) x67))
(assert (x1602 x1629))
(assert (x1209 x113))
(assert (x700 x789))
(assert (x700 x184))
(assert (x1209 1461501637330902918203684832716283019655932542975))
(assert (x700 x1377))
(assert (x700 x509))
(assert (x700 x1408))
(assert (x1209 x1626))
(assert (x700 x1695))
(assert (x700 x472))
(assert (x1602 274184521717934524641157099916833587233))
(assert (x700 x621))
(assert (x700 x1560))
(assert (x700 x1444))
(assert (x700 x1009))
(assert (x700 x981))
(assert (x700 x876))
(assert (x700 x558))
(assert (= (x134 x1303 1) (div x1303 2)))
(assert (x1209 x1056))
(assert (x1209 x979))
(assert (x1209 x4))
(assert (x1209 x1964))
(assert (x700 x1976))
(assert (x700 x373))
(assert (x1209 x1527))
(assert (x700 x1029))
(assert (x700 x1067))
(assert (x1209 x1971))
(assert (x1236 x1730 x239 x930 x1278))
(assert (x894 x1156 x1483))
(assert (= (div x735 374144419156711147060143317175368453031918731001856) (x134 x735 168)))
(assert (x700 x613))
(assert (x1209 x1430))
(assert (x700 x937))
(assert (= (ite (= x1967 x101) x1685 (x854 x101)) (x1666 x101)))
(assert (x700 x1314))
(assert (x894 x409 x1385))
(assert (x700 x1275))
(assert (x700 x443))
(assert (x700 x849))
(assert (x1846 x1512 x723))
(assert (x1602 x350))
(assert (= (x470 (x308 117300739)) 117300739))
(assert (= (and x224 x404) x1736))
(assert (x1209 x1928))
(assert (x700 x1421))
(assert (x700 x1132))
(assert (x700 x1520))
(assert (x700 x1964))
(assert (x700 x95))
(assert (= (x308 2514000705) (x752 2514000705)))
(assert (x1209 x491))
(assert (= x1859 (=> (and (not x1768) (= x110 x1558) (= (x818 255 x1873) x663) (= (> x663 1) x1768)) x1708)))
(assert (x700 x877))
(assert (x700 x249))
(assert (x1209 x1302))
(assert (x700 x448))
(assert (= (x308 157198259) (x752 157198259)))
(assert (= (x752 4272920204) (x308 4272920204)))
(assert (x700 x1375))
(assert (x1209 x1173))
(assert (x1522 x1081 x343))
(assert (= 10141204801825835211973625643007 (x470 (x308 10141204801825835211973625643007))))
(assert (x700 x1850))
(assert (x1846 x1862 x1542))
(assert (x700 x1899))
(assert (x700 x1700))
(assert (x700 x1650))
(assert (x700 x997))
(assert (x700 x1878))
(assert (x700 x1397))
(assert (x1209 x1314))
(assert (x700 x1777))
(assert (x1209 x1447))
(assert (= x583 true))
(assert (x700 x432))
(assert (x700 x1175))
(assert (x700 x35))
(assert (x700 x1524))
(assert (x700 x1724))
(assert (x700 x1358))
(assert (= x970 (=> (and (= (x1607 (+ 288 x857)) x101) (= x768 (x818 340282366920938463463374607431768211455 x1255)) (= 0 x425) (= (x1771 x50) x1929) (= (x1607 (+ 416 x857)) x1463) (= x96 (mod (* (x1841 x335) x768) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (not x355) x1247) (= x145 (x818 255 x1873)) (not (ite x1247 x1247 (and (= true (<= x1255 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1255 170141183460469231731687303715884105727)))) (= (x1771 x101) x1255) (<= x130 1208925819614629174706175) (= (x1771 x443) x130) (= x443 (x1607 (+ x693 64))) (= x693 (x1607 (+ x50 64))) (>= 1208925819614629174706175 x1929) (= x355 (and (> x1255 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1255)))) (= (< 0 x145) x788)) (and (=> (and (= x1943 x1463) (= x96 x1508) (not x788)) x1317) (=> x788 x325)))))
(assert (x700 x1657))
(assert (x700 x1312))
(assert (x1209 x1384))
(assert (x700 x1054))
(assert (x700 x915))
(assert (= (x1666 x443) (ite (= x443 x1967) x1685 (x854 x443))))
(assert (x700 x151))
(assert (= x986 (and (not x1819) x1252)))
(assert (x700 x1594))
(assert (x700 x636))
(assert (x700 x1135))
(assert (x1209 x959))
(assert (x700 x1714))
(assert (= x1919 (and (not x334) x832)))
(assert (x1754 x1910))
(assert (= 0 (x1761 x1903)))
(assert (x700 x758))
(assert (x700 x1582))
(assert (x700 x1907))
(assert (x700 x1895))
(assert (x700 x579))
(assert (x1209 x690))
(assert (= (=> (and (= (= x275 0) x276) (= x962 (ite x220 1 0)) (= x220 (not x276))) (=> (and (<= 0 x1246) (< 131 x1197) x1532 (= (not (= x962 0)) x1532) (>= 1461501637330902918203684832716283019655932542975 x1246) (= (<= x1197 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (>= x294 0) (= x294 x1800) (>= x70 0) (= x1477 x1703) (>= 1461501637330902918203684832716283019655932542975 x294) (= x1231 x941) (= x8 x920) (<= x70 1461501637330902918203684832716283019655932542975) (= x263 x1685) (= x1419 x1335) (= x1704 x997) (= x1419 x1246) (= x1123 x237)) x1904)) x749))
(assert (x700 x992))
(assert (= (x308 3833100637) (x752 3833100637)))
(assert (x700 x743))
(assert (x1209 x121))
(assert (x700 x670))
(assert (x700 x442))
(assert (x700 x734))
(assert (= (x134 x1746 192) (div x1746 6277101735386680763835789423207666416102355444464034512896)))
(assert (= (x470 (x752 x1207)) x1207))
(assert (x1209 x1588))
(assert (x700 x435))
(assert (x700 x179))
(assert (= (ite (= 132 x1905) 274184521717934524641157099916833587211 (x427 x1905)) (x1163 x1905)))
(assert (x700 x107))
(assert (x700 x655))
(assert (= (x1771 x443) (ite (= x1094 x443) x1591 (x204 x443))))
(assert (x1602 x485))
(assert (x700 x177))
(assert (x700 x1996))
(assert (x700 x608))
(assert (x700 x1954))
(assert (x700 x988))
(assert (x700 x1838))
(assert (x450 x600 x472))
(assert (x700 x1967))
(assert (= (x308 3638949393) (x752 3638949393)))
(assert (x700 x1246))
(assert (= (=> (= (= x1159 274184521717934524641157099916833587223) x513) (and (=> (not x513) x838) (=> (and (= (x1124 (x752 274184521717934524641157099916833587223)) x1437) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1279) (and (= (<= x1279 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1279 32))) x1129) (<= x1570 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x455) (= x1491 36) x513 (not (< x1491 4)) (= x1164 274184521717934524641157099916833587211) (not (> 826074471 x1925)) (= (x1571 x1254) x1570) (= 1889567281 x1925) (> x1437 0) (not x1129) (<= 0 x1570) (= x1908 32) (= 36 x1491) (= x1902 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (= x1925 826074471)) (= (x1291 (- x1491 4)) x1279) (= x1254 (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0))) x281))) x1482))
(assert (x700 x463))
(assert (x700 x114))
(assert (x1209 x1715))
(assert (x700 x1164))
(assert (x1602 x1207))
(assert (x1602 x858))
(assert (x700 x1228))
(assert (x700 x772))
(assert (x700 x1574))
(assert true)
(assert (x700 x173))
(assert (x700 x1110))
(assert (x700 x1336))
(assert (x700 x905))
(assert (x700 x283))
(assert (x700 x1971))
(assert (= (and x1058 (not x37)) x1879))
(assert (= (x470 (x752 274184521717934524641157099916833587235)) 274184521717934524641157099916833587235))
(assert (x700 x1328))
(assert (x700 x851))
(assert (x1754 x1512))
(assert (x700 x1660))
(assert (x1209 x717))
(assert (x700 x1528))
(assert (x700 x1395))
(assert (x700 x950))
(assert (x700 x791))
(assert (x1602 274184521717934524641157099916833587227))
(assert (x700 x1080))
(assert (x747 x490 x709))
(assert (x700 x1844))
(assert (x700 x1092))
(assert (x700 x1403))
(assert (x700 x1479))
(assert (x1209 x1757))
(assert (x700 x1445))
(assert (x700 x1148))
(assert (x700 x964))
(assert (x700 x695))
(assert (= x1856 (=> (= (or (> x665 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x665 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x665) true))) x519) (and (=> (and (= (x134 x1746 192) x233) (= x1296 (x818 65535 x1085)) (or (and (= 1 x743) (or (and (= x1965 x593) x1749 (= (mod (* x1617 x1092) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1965) (= x729 (> x1820 1)) (= x619 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1617)) (or (and (= x1617 10) (not x729) (= x1092 1)) (and x729 (= (x134 x1820 1) x1328) (= x1617 100) (not x25) (= x25 (< 1 x1328)) (= (x818 1 x1820) x137) (= (ite x128 1 10) x1092) (= (= x137 0) x128))) (not (< x619 x1092))) (and (not x1749) (= (x76 10 x1820) x593))) (= 1 x600) (= x859 (x818 x600 x472)) (= (ite (> 78 x1820) 1 0) x472) (= x126 (x818 x743 x684)) x1781 (= x1749 (= 0 (x496 x859 x126))) (= x684 (ite (< x1820 32) 1 0))) (and (= 1 x593) (not x1781))) x519 (= x1527 (x134 x735 160)) (= x604 (x818 65535 x233)) (= (x818 65535 x490) x724) (= x1820 (x818 255 x1527)) (= (< 0 x1820) x1781) (= (x818 1461501637330902918203684832716283019655932542975 x1746) x591) (= (x818 255 x1873) x878) (= x490 (x134 x1746 176)) (= x1085 (x134 x1746 160)) (= (x818 1461501637330902918203684832716283019655932542975 x735) x886) (< 0 x878)) x1537) (=> (and (= 1 x974) (not x519)) x546)))))
(assert (x1846 x859 x126))
(assert (x700 x417))
(assert (x700 x1158))
(assert (x450 x1310 x283))
(assert (x700 x1923))
(assert (x700 x1144))
(assert (x700 x1649))
(assert (x1209 x109))
(assert (x700 x861))
(assert (x700 x1352))
(assert (x700 x960))
(assert (x421 x386 x1968))
(assert (x700 x1500))
(assert (x700 x593))
(assert (= x82 x1667))
(assert (= x669 (or (and x63 (not x267)) x1514)))
(assert (x1209 x1021))
(assert (x700 x431))
(assert (x700 x28))
(assert (x700 x1563))
(assert (x700 x289))
(assert (x1209 x988))
(assert (x700 x1016))
(assert (= x737 (=> (= x334 (= 274184521717934524641157099916833587233 x506)) (and (=> (and (= 4 x1983) (<= x1927 1208925819614629174706175) (= x929 (x84 160)) (<= 0 x861) (= x1476 (x84 256)) (<= x861 1208925819614629174706175) (= (x1635 x1143) x1086) (> 1208925819614629174706176 x861) (> x1275 0) (= x1035 160) (= (x84 160) x1935) (<= 0 x467) (= (x84 128) x1106) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x467) (not (> 2362581449 x1673)) (= (x105 (x752 x1477) (x308 1) 0) x1143) (= x74 (x84 256)) (not (= x1673 4062139261)) (= x1951 (x84 192)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x695) (>= x1927 0) (= x1922 (x84 128)) (not (= 3257672857 x1673)) (= x1983 4) (= x1844 (x84 224)) (not (> 4 x1983)) (not (= x1673 2362581449)) (= x1572 (x84 224)) (= (x84 192) x1948) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x102) (= x1275 (x1124 (x752 274184521717934524641157099916833587233))) (<= 0 x695) (>= x1086 0) (= 1 x1916) x334 (< x1927 1208925819614629174706176) (= x1673 4272920204) (<= x1086 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x103) (=> (not x334) x1966)))))
(assert (= (x308 65536) (x752 65536)))
(assert (x747 x1430 x125))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x470 (x308 57896044618658097711785492504343953926634992332820282019728792003956564819967))))
(assert (= (x470 (x308 115197700812830431890159100217698998050002284567939525164234024451216521560064)) 115197700812830431890159100217698998050002284567939525164234024451216521560064))
(assert (= (x308 20282409603651670423947251286015) (x752 20282409603651670423947251286015)))
(assert (x700 x1816))
(assert (= 274184521717934524641157099916833587231 (x470 (x308 274184521717934524641157099916833587231))))
(assert (x1209 x480))
(assert (=> (>= 10000 x1299) (= (x308 x1299) (x752 x1299))))
(assert (= (ite (= x1309 132) 274184521717934524641157099916833587211 (x427 x1309)) (x1163 x1309)))
(assert (x700 x1243))
(assert (x700 x692))
(assert (x700 x985))
(assert (x1209 x1085))
(assert (x700 x254))
(assert (= 1099511627775 (x470 (x308 1099511627775))))
(assert (x700 x271))
(assert (x700 x1707))
(assert (= x1904 (=> (and (= x140 (x818 16 x1529)) (= x1272 (x1124 (x752 274184521717934524641157099916833587211))) (> 3889878717 x1171) (>= 255 x1529) (not (= x1171 3695885053)) (= x442 x237) (not (= 3833100637 x1171)) (>= 1461501637330902918203684832716283019655932542975 x8) (not (> 4 x1197)) (> x1272 0) (= x1507 (= x1159 274184521717934524641157099916833587231)) (= x380 128) (<= 0 x1529) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1838) (and (> 128 x1838) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1838))))) (= x1231 0) (<= x237 1461501637330902918203684832716283019655932542975) (> 256 x1529) (= x1685 x1243) (not (< x1171 2068668150)) (not (= 3638949393 x1171)) (= x1171 3840337785) (not (= x1171 3795249780)) (not (< x1171 3253611544)) (= x1066 274184521717934524641157099916833587211) (= x1633 (not (= 0 x140))) (= x1096 x8) (= (x818 1461501637330902918203684832716283019655932542975 x1964) x1159) (= (x1291 (- x1197 4)) x1838) (= x997 x550) (not x1633) (not (> 3638949393 x1171))) (and (=> (not x1507) x1586) (=> (and (= x202 (x1600 x1332)) (not (= x189 826074471)) (< 0 x436) (= x1332 (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0)) (= 1 x455) (not (> 826074471 x189)) (= x1176 (x1291 (- x810 4))) (not x1469) (not (< x810 4)) (<= 0 x202) (= x810 36) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x202) (= 36 x810) x1507 (= 274184521717934524641157099916833587211 x1376) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1005) (= x189 1889567281) (= 32 x1908) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1176) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1176)) (> 32 x1176))) x1469) (= x436 (x1124 (x752 274184521717934524641157099916833587231)))) x281)))))
(assert (x700 x1490))
(assert (x700 x1880))
(assert (x700 x1710))
(assert (x700 x1652))
(assert (x1209 x608))
(assert (= (x403 x443) (ite (= x443 x86) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1969 x443))))
(assert (x700 x900))
(assert (x700 x348))
(assert (x700 x1384))
(assert (x700 x1225))
(assert (x700 x1525))
(assert (x700 x33))
(assert (x894 x1110 x129))
(assert (x700 x1186))
(assert (x700 x1053))
(assert (x700 x285))
(assert (x700 x1799))
(assert (x700 x1207))
(assert (x700 x1321))
(assert (x700 x1643))
(assert (x700 x716))
(assert (x700 x1299))
(assert (x700 x140))
(assert (= 65535 (x470 (x308 65535))))
(assert (x700 x961))
(assert (= x523 x883))
(assert (x700 x1685))
(assert (= x1118 (x470 (x752 x1118))))
(assert (x700 x1863))
(assert (x700 x1745))
(assert (x700 x1679))
(assert (x700 x1940))
(assert (x700 x259))
(assert (x700 x1480))
(assert (= (x1771 x1309) (ite (= x1094 x1309) x1591 (x204 x1309))))
(assert (= (and (not x978) x440) x1396))
(assert (x450 x1786 x1045))
(assert (x700 x1147))
(assert (x700 x564))
(assert (x700 x1169))
(assert (x700 x452))
(assert (x700 x203))
(assert (x1602 x1118))
(assert (x700 x1620))
(assert (x700 x999))
(assert (x700 x219))
(assert (x700 x1928))
(assert (= (x308 1461501637330902918203684832716283019655932542975) (x752 1461501637330902918203684832716283019655932542975)))
(assert (x303 x1513 x1637))
(assert (=> (<= x1629 10000) (= (x752 x1629) (x308 x1629))))
(assert (x700 x1017))
(assert (x700 x1126))
(assert (x1120 x601 x1277))
(assert (x700 x637))
(assert (x700 x1893))
(assert (x700 x187))
(assert (= x1715 (x470 (x752 x1715))))
(assert (= (x752 274184521717934524641157099916833587223) (x308 274184521717934524641157099916833587223)))
(assert (x700 x1002))
(assert (x700 x178))
(assert (x700 x53))
(assert (x1209 x181))
(assert (x1754 x1542))
(assert (x700 x676))
(assert (x700 x1427))
(assert (x1209 x233))
(assert (x700 x341))
(assert (x700 x979))
(assert (x700 x350))
(assert (x421 x648 x522))
(assert (x700 x486))
(assert (x450 x1479 x874))
(assert (x700 x244))
(assert (x894 x1691 x428))
(assert (x700 x1902))
(assert (x700 x1726))
(assert (x700 x1078))
(assert (x700 x1802))
(assert (= (x752 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x308 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x700 x291))
(assert (= 950698303 (x470 (x308 950698303))))
(assert (x700 x1625))
(assert (x1209 x1355))
(assert (x700 x437))
(assert (x700 x1015))
(assert (= x433 (or (and (not x527) x1409) x1262)))
(assert (x700 x1931))
(assert (x700 x1591))
(assert (x39 x1244 x54))
(assert (x39 x1660 x1839))
(assert (x421 x335 x383))
(assert (x1209 18446744073709551615))
(assert (x1209 x1665))
(assert (= (x118 x1996) 0))
(assert (x700 x1815))
(assert (x700 x300))
(assert (= (=> (= x1684 (or (and (> 0 x1623) (= (<= x1623 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1623))) (and (=> (and (= x275 1) (not x1684)) x749) (=> (and (= (x818 65535 x1913) x1312) (= (x818 1461501637330902918203684832716283019655932542975 x735) x613) (= (x818 255 x1873) x1402) (= (x134 x1746 192) x1913) (= x532 (x134 x1746 160)) (> x1402 0) (or (and (not x1330) (= 1 x1244)) (and x1330 (= (ite (> 78 x1081) 1 0) x1625) (or (and (not x1374) (= (x76 10 x1081) x1244)) (and (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x203) x973) (= (mod (* x1648 x203) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1605) (not (> x1648 x973)) (= x1605 x1244) (or (and (not x429) (= 10 x203) (= 1 x1648)) (and (= x117 (> x833 1)) (not x117) (= 100 x203) (= x1648 (ite x1898 1 10)) (= (= x1166 0) x1898) (= x833 (x134 x1081 1)) (= (x818 1 x1081) x1166) x429)) x1374 (= (> x1081 1) x429))) (= (x818 x979 x402) x1567) (= x402 (ite (> 32 x1081) 1 0)) (= 1 x959) (= x1374 (= (x496 x1794 x1567) 0)) (= (x818 x959 x1625) x1794) (= 1 x979))) (= x1830 (x134 x735 160)) (= (x818 1461501637330902918203684832716283019655932542975 x1746) x1701) (= x552 (x134 x1746 176)) (= x1330 (< 0 x1081)) (= x1081 (x818 255 x1830)) (= (x818 65535 x532) x1899) x1684 (= (x818 65535 x552) x1353)) x379))) x342))
(assert (= (x308 170141183460469231731687303715884105727) (x752 170141183460469231731687303715884105727)))
(assert (x700 x1840))
(assert (x1266 x1611))
(assert (x700 x612))
(assert (x700 x1451))
(assert (x700 x1927))
(assert (x700 x1105))
(assert (x700 x1513))
(assert (x700 x1173))
(assert (= x1203 (=> (and (= (x818 255 x1873) x1104) (= x61 x1508) (= x1943 x1940) (not x852) (= (> x1104 1) x852)) x1317)))
(assert (x700 x738))
(assert (x1209 x205))
(assert (x1209 x1529))
(assert (x700 x1947))
(assert (x700 x413))
(assert (= 0 (x568 x1309)))
(assert (x303 x1964 x120))
(assert (x700 x380))
(assert (x700 x1683))
(assert (x700 x1922))
(assert (x700 x198))
(assert (x700 x933))
(assert (x700 x1835))
(assert (x700 x740))
(assert (x700 x625))
(assert (x700 x1648))
(assert (x700 x1767))
(assert (x700 x44))
(assert (x700 x536))
(assert (x700 x1588))
(assert (x700 x550))
(assert (x700 x557))
(assert (x700 x386))
(assert (x700 x901))
(assert (x700 x1098))
(assert (x700 x1753))
(assert (= (x568 x1210) 0))
(assert (x700 x1307))
(assert (x700 x419))
(assert (x1602 x967))
(assert (x1209 x659))
(assert (x700 x1184))
(assert (x700 x987))
(assert (x700 x1817))
(assert (x700 x1716))
(assert (= (x308 274184521717934524641157099916833587211) (x752 274184521717934524641157099916833587211)))
(assert (x700 x183))
(assert (x700 x1253))
(assert (x700 x910))
(assert (x700 x1364))
(assert (x450 x841 x791))
(assert (x700 x1019))
(assert (= x266 (and x1684 x609)))
(assert (x421 x780 x93))
(assert (x450 x1467 x491))
(assert (= x379 (=> (and (= (x818 1461501637330902918203684832716283019655932542975 x1971) x1118) (= (x1174 576) x1971) (< x272 340282366920938463463374607431768211456) (= x1053 (x818 18446744073709551615 x480)) (= 800 x1034) (= (x818 18446744073709551615 x1244) x1326) (= 544 x400) (= (x818 1461501637330902918203684832716283019655932542975 x1056) x363) (= (x105 (x752 x434) (x308 6) 0) x87) (= x1056 (x631 608)) (= x372 (= 274184521717934524641157099916833587235 x363)) (= (x134 x735 168) x480) (= (x818 1461501637330902918203684832716283019655932542975 x1021) x434) (= x272 (x1712 x544)) (>= 340282366920938463463374607431768211455 x272) (= x544 (x105 (x752 x1118) x87 0)) (<= 0 x272)) (and (=> (and (= (x105 (x752 x1477) (x308 1) 0) x1692) (<= 0 x633) (<= 0 x34) (= (x399 256) x164) (>= 1208925819614629174706175 x633) (not (> 2362581449 x1008)) (>= 1208925819614629174706175 x1805) (< x633 1208925819614629174706176) (= x1601 (x1124 (x752 274184521717934524641157099916833587235))) (not (= 3257672857 x1008)) (not (= x1008 2362581449)) (= x545 160) (not (> 4 x809)) (= (x399 192) x1818) (>= x722 0) (= x1518 (x399 192)) (>= x1805 0) (= (x399 160) x1107) (not (= 4062139261 x1008)) x372 (<= x34 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x399 224) x216) (< x1805 1208925819614629174706176) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x196) (> x1601 0) (= (x399 128) x881) (= x809 4) (= (x399 128) x889) (= x667 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= 1 x1563) (= 4272920204 x1008) (= (x1082 x1692) x722) (= x187 (x399 224)) (= x809 4) (= x1105 (x399 256)) (<= 0 x196) (= x441 (x399 160)) (<= x722 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1466) (=> (not x372) x547)))))
(assert (= x1770 (=> (and (= x925 (x818 1 x1442)) (= x224 (not (= x925 0)))) (and (=> x224 x1856) (=> (and (not x224) (= x665 x110)) x1859)))))
(assert (= (=> (and (= (x818 65535 x392) x171) (= (> x198 0) x99) (= x1638 (x818 255 x1873)) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x244)) (> 32 x244)) (> x244 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x134 x1746 160) x392) (= (= 0 x1186) x1280) (not (= 0 x497)) (= x821 (x1607 (+ 31 x244))) (= (x134 x1746 192) x1430) (= (x134 x1746 176) x62) (> x1186 0) (= x1854 (x134 x735 160)) (= (x1607 (+ x558 512)) x1015) (= x1186 (x1969 x1840)) (= (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x821) x658) (= (x818 255 x1854) x198) (= (ite x1024 1 0) x418) (= (x1607 (+ x558 256)) x915) (= x1775 (x818 255 x1873)) (= x1521 (x818 65535 x1430)) (= x558 (x1607 (+ x1840 x658))) (or (and (= 1 x1531) (not x99)) (and (= (x818 x1665 x713) x1862) (= 1 x291) (or (and (or (and (= 1 x1421) (not x1613) (= 10 x645)) (and (= x679 (= x1616 0)) (= x645 100) (= x1064 (> x88 1)) (not x1064) (= (x818 1 x198) x1616) (= x1421 (ite x679 1 10)) (= x88 (x134 x198 1)) x1613)) (= (mod (* x1421 x645) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1073) x1783 (= (< 1 x198) x1613) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x645) x1796) (not (> x1421 x1796)) (= x1073 x1531)) (and (not x1783) (= (x76 10 x198) x1531))) x99 (= x1148 (ite (< x198 32) 1 0)) (= x713 (ite (< x198 78) 1 0)) (= (= 0 (x496 x1862 x1542)) x1783) (= (x818 x291 x1148) x1542) (= x1665 1))) (= (x818 1461501637330902918203684832716283019655932542975 x1746) x179) (< 0 x1775) (= 0 x1802) (= x579 (x818 65535 x62)) (= x1024 (not x1280)) (< 0 x1638) (= x418 x1186) (= x1300 (x818 1461501637330902918203684832716283019655932542975 x735))) x1013) x710))
(assert (= (x470 (x752 x964)) x964))
(assert (x700 x1432))
(assert (= (x308 4062139261) (x752 4062139261)))
(assert (x700 x313))
(assert (x700 x1529))
(assert (x700 x1085))
(assert (x700 x990))
(assert (x747 x532 x1032))
(assert (x1209 x1823))
(assert (x700 x360))
(assert (x747 x499 x1226))
(assert (x700 x531))
(assert (x1209 x1730))
(assert (x700 x532))
(assert (x700 x258))
(assert (x450 x431 x1928))
(assert (=> (>= 10000 x5) (= (x308 x5) (x752 x5))))
(assert (x700 x297))
(assert (= 274184521717934524641157099916833587223 (x470 (x752 274184521717934524641157099916833587223))))
(assert (x700 x524))
(assert (x700 x735))
(assert (x700 x805))
(assert (x1236 x1101 x1962 x214 x1942))
(assert (= (=> (and (= x98 (< 1 x694)) (= (x818 255 x1873) x694) (= x1878 x776) (not x98)) x420) x1001))
(assert (x700 x641))
(assert (x1209 x1303))
(assert (x700 x815))
(assert (x1602 x585))
(assert (x894 x1757 x896))
(assert (x700 x723))
(assert (x700 x191))
(assert (x700 x962))
(assert (x700 x357))
(assert (= (or x1274 (and x404 (not x224))) x1262))
(assert (x303 x1767 x1337))
(assert (x700 x441))
(assert (= (x470 (x752 x967)) x967))
(assert (x700 x1238))
(assert (x421 x121 x2))
(assert (x700 x366))
(assert (= x1901 x483))
(assert (x700 x1224))
(assert (= x797 x1256))
(assert (x1266 x1019))
(assert (= (or (and x883 x1241) (and x1819 x1252)) x51))
(assert (x421 x1050 x349))
(assert (x700 x1589))
(assert (x700 x1632))
(assert (x700 x1824))
(assert (x700 x1199))
(assert (x700 x491))
(assert (x1266 x246))
(assert (x700 x1295))
(assert (x700 x819))
(assert (x700 x1694))
(assert (x1209 x730))
(assert (x700 x1705))
(assert (x700 x1045))
(assert (x700 x1309))
(assert (= 157198259 (x470 (x308 157198259))))
(assert (x700 x827))
(assert (x700 x270))
(assert (x700 x1618))
(assert (x1209 x841))
(assert (x700 x1073))
(assert (x700 x980))
(assert (x700 x1925))
(assert (x700 x353))
(assert (x1754 x79))
(assert (x421 x1173 x712))
(assert (x700 x868))
(assert (x1236 x1384 x262 x614 x551))
(assert (x700 x1487))
(assert (x1209 x1662))
(assert (x700 x445))
(assert (x700 x1426))
(assert (= (or x669 (and (not x172) x483)) x18))
(assert (x700 x1757))
(assert (= (x308 3119561463) (x752 3119561463)))
(assert (= (x470 (x308 18446744073709551616)) 18446744073709551616))
(assert (x700 x1402))
(assert (= x546 (=> (and (= (not x69) x580) (= (ite x580 1 0) x1042) (= x69 (= 0 x974))) (=> (= x1667 (not (= 0 x1042))) x82))))
(assert (x700 x1921))
(assert (x700 x1177))
(assert (x700 x1380))
(assert (x421 x1588 x595))
(assert (x700 x57))
(assert (x747 x233 x1160))
(assert (x700 x1106))
(assert (x700 x335))
(assert (x700 x367))
(assert (x700 x248))
(assert (= (=> (and (= (x1124 (x752 274184521717934524641157099916833587211)) x1661) (> 65536 x1442) (or (and (not (or (and (= true (<= x1156 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x1156)) (> x1156 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x818 20282409603651670423947251286015 x1757) x1018) (= (x818 20282409603651670423947251286015 x1156) x1530) (= x1757 x1432) (not (> x1018 10141204801825835211973625643007)) (> 18446744073709551616 x411) (= (* x411 x1530) x1870) (<= 0 x411) (>= 18446744073709551615 x411) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1530 x411)) (= x1757 x1870) (not x144)) (and (>= x521 0) (= x1130 (x818 20282409603651670423947251286015 x1777)) (not (or (and (> 0 x1777) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1777))) (> x1777 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x1156 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (<= x521 18446744073709551615) (= x1995 x1240) (= (* x521 x1130) x1995) (> 18446744073709551616 x521) (= x1780 (x1291 (- 0 x526))) (= x1777 (x1291 (- 0 x1156))) (= x526 (x1939 x1240)) (not (< 10141204801825835211973625643007 x298)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x526)) (= x1432 x1780) x144 (= (x818 20282409603651670423947251286015 x1240) x298) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1130 x521)))) (= (x1686 128) x1683) (>= 1461501637330902918203684832716283019655932542975 x716) (= x1949 (x1686 128)) (< x861 1208925819614629174706176) (= x1610 x901) (not (= x1850 4062139261)) (not (= x219 0)) (= x144 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1156) (and (> 0 x1156) (= true (<= x1156 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (<= 0 x467) (= (x1624 x217) x1442) (>= x861 0) (= x1002 115197700812830431890159100217698998050002284567939525164234024451216521560064) (<= 0 x353) (= x122 (x1686 256)) (<= 0 x1442) (= 4 x1041) (<= 0 x988) (= (x1686 160) x1748) (= x511 (x1686 256)) (= (x105 (x752 x1715) (x308 5) 0) x1462) (> x536 0) (not (< x1837 950698303)) (= x1335 x901) (<= 0 x695) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x525) true) (> 32 x525)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x525))) (not (> 4 x1041)) (= (x1124 (x752 274184521717934524641157099916833587233)) x536) (<= 0 x1610) (>= x1927 0) (= 274184521717934524641157099916833587233 x1811) (= x1156 (x1939 x988)) (= x451 (= 0 x965)) (= 950698303 x1837) (<= 0 x716) (< 0 x1661) (>= x787 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x467) (= (ite x460 1 0) x341) (= x1199 (x1686 192)) (< 0 x965) (not (= x1850 3257672857)) (<= x787 1461501637330902918203684832716283019655932542975) (= (x105 (x752 x1477) (x308 1) 0) x575) (>= 1461501637330902918203684832716283019655932542975 x1610) (< x1837 1110625635) (= x217 (x105 (x752 x1715) (x308 5) 0)) (not (= x1850 2362581449)) (= (not x451) x460) (= x114 0) (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x716 x1800) (not (> 2362581449 x1850)) (> 2068668150 x1837) (= x820 274184521717934524641157099916833587233) (= (x1686 224) x285) (>= 20282409603651670423947251286015 x988) (>= 1208925819614629174706175 x861) (= (x1227 x1462) x988) (< x1927 1208925819614629174706176) (= 4 x1041) (= (x572 x1405) x965) (= (x1686 224) x1286) (= x341 x965) (= x1621 128) (= x1850 4272920204) (< x1837 1168994686) (= (x1635 x575) x353) (> 20282409603651670423947251286016 x988) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x695) (= x941 x114) (<= x1715 1461501637330902918203684832716283019655932542975) (= x1715 x1954) (<= x1442 65535) (= (x1686 160) x1336) (= x1371 (x1686 192)) (= x1716 x1477) (<= x1927 1208925819614629174706175) (= x780 (x1939 x1432))) x161) x1471))
(assert (x700 x1268))
(assert (x700 x1671))
(assert (x1209 x874))
(assert (x700 x1884))
(assert (x700 x221))
(assert (= x609 (and x267 x63)))
(assert (x700 x948))
(assert (x450 x959 x1625))
(assert (= (div x735 1461501637330902918203684832716283019655932542976) (x134 x735 160)))
(assert (x700 x1511))
(assert (x700 x1166))
(assert (x700 x475))
(assert (x700 x77))
(assert (x700 x393))
(assert (x700 x16))
(assert (= (x470 (x752 x434)) x434))
(assert (= (div x573 2) (x134 x573 1)))
(assert (x700 x1119))
(assert (= (x752 950698303) (x308 950698303)))
(assert (x700 x160))
(assert (x700 x939))
(assert (x700 x891))
(assert (x1209 x1950))
(assert (x700 x567))
(assert (x700 x1300))
(assert (x700 x1150))
(assert (= (x308 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x752 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x700 x1873))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x470 (x308 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (x700 x101))
(assert (= 18446744073709551615 (x470 (x308 18446744073709551615))))
(assert (x700 x458))
(assert (x700 x1974))
(assert (x700 x1756))
(assert (x1209 x1587))
(assert (x1209 x1820))
(assert (x700 x1439))
(assert (x700 x619))
(assert (x1209 1))
(assert (= (x752 3695885053) (x308 3695885053)))
(assert (x700 x1305))
(assert (x700 x361))
(assert (x1209 x1580))
(assert (x700 x326))
(assert (x1209 x1513))
(assert (x700 x171))
(assert (= x610 (=> (= (= 274184521717934524641157099916833587223 x1596) x563) (and (=> (and (= x221 x1446) (= x1631 (x1291 (- x1446 4))) (> x1424 0) (= x1239 x1742) (<= x159 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1693 x824) (= x301 x159) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x612) (= x855 (x105 (x752 x1742) (x308 1) 0)) (<= x373 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0) x81) (>= x159 0) (not (= x147 2514000705)) (not (> 826074471 x147)) (= (+ x1693 x301) x314) (not (= x147 826074471)) (not (= x147 1889567281)) (= x265 274184521717934524641157099916833587211) (= x1446 68) (= x725 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1631) (and (> 64 x1631) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1631) true)))) (= 274184521717934524641157099916833587211 x819) (= (x1124 (x752 274184521717934524641157099916833587223)) x1424) (= x219 1) (not (> 4 x1446)) (= (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0) x1890) (not x324) (= x147 2835717307) (>= 1461501637330902918203684832716283019655932542975 x1742) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x824 x159)) (= (x1575 x855) x159) (= x324 (> x80 x373)) (= x80 x824) x563 (not x725) (= 32 x525) (= x1347 (x1291 (- x373 x824))) (= (x1263 x1890) x373) (<= 0 x373) (= x435 x1742)) x1471) (=> (not x563) x583)))))
(assert (x700 x878))
(assert (x700 x872))
(assert (x1209 x326))
(assert (x700 x934))
(assert (x700 x1540))
(assert (= (x308 404098525) (x752 404098525)))
(assert (x700 x73))
(assert (x795 x1529 x1911 x1647 x1109))
(assert (x700 x1746))
(assert (x450 x291 x1148))
(assert (= (x752 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x308 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x700 x943))
(assert (x700 x1580))
(assert (x700 x1418))
(assert (x700 x110))
(assert (x700 x1069))
(assert (x700 x1279))
(assert (x700 x920))
(assert (x39 x1531 x779))
(assert (x700 x1682))
(assert (x700 x1554))
(assert (x700 x1903))
(assert (= (x470 (x308 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x700 x1453))
(assert (x700 x218))
(assert (= 274184521717934524641157099916833587233 (x470 (x308 274184521717934524641157099916833587233))))
(assert (x1209 x1090))
(assert (x700 x1883))
(assert (x1602 x5))
(assert (x1209 x1148))
(assert (= (x1163 x1210) (ite (= 132 x1210) 274184521717934524641157099916833587211 (x427 x1210))))
(assert (x1209 x1714))
(assert (x700 x1605))
(assert (x700 x1930))
(assert (= 274184521717934524641157099916833587211 (x470 (x752 274184521717934524641157099916833587211))))
(assert (x700 x555))
(assert (x700 x86))
(assert (= (x308 3840337785) (x752 3840337785)))
(assert (x700 x1775))
(assert (x700 x1836))
(assert (x700 x994))
(assert (x700 x346))
(assert (= (ite (= 132 x1887) 274184521717934524641157099916833587211 (x427 x1887)) (x1163 x1887)))
(assert (x1120 x1854 x761))
(assert (x700 x1367))
(assert (x700 x1701))
(assert (x700 x112))
(assert (x700 x1011))
(assert (x700 x1508))
(assert (x1846 x1794 x1567))
(assert (x39 x734 x1739))
(assert (x303 x1447 x1956))
(assert (= (and x519 x1736) x333))
(assert (= (x1220 x1445) 0))
(assert (x700 x1390))
(assert (= x90 (and (not x372) x266)))
(assert (x1209 x648))
(assert (x700 x1285))
(assert (x700 x74))
(assert (x700 x1905))
(assert (x700 x1128))
(assert (x1209 x1087))
(assert (x747 x1753 x1517))
(assert (= (x752 115197700812830431890159100217698998050002284567939525164234024451216521560064) (x308 115197700812830431890159100217698998050002284567939525164234024451216521560064)))
(assert (x1209 x335))
(assert (x700 x1269))
(assert (= (x470 (x308 826074471)) 826074471))
(assert (x700 x506))
(assert (x1209 x684))
(assert (= true x1151))
(assert (= true x1952))
(assert (x1209 x198))
(assert (x1209 x488))
(assert (x700 x1154))
(assert (= 0 (x568 x1905)))
(assert (x1209 x713))
(assert (x700 x230))
(assert (x1209 x961))
(assert (= (x1460 x73) 0))
(assert (x700 x415))
(assert (x1602 x1742))
(assert (x700 x1116))
(assert (x700 x1547))
(assert (= (x308 3889878717) (x752 3889878717)))
(assert (x700 x1742))
(assert (x700 x657))
(assert (x700 x64))
(assert (x1209 x431))
(assert (x700 x1791))
(assert (x894 x717 x1363))
(assert (x1209 x552))
(assert (x700 x1130))
(assert (x700 x1813))
(assert (x700 x1271))
(assert (= (x470 (x308 3257672857)) 3257672857))
(assert (x700 x1448))
(assert (x700 x1476))
(assert (x1209 x673))
(assert (x700 x923))
(assert (= (x752 1889567281) (x308 1889567281)))
(assert (x700 x1550))
(assert (=> (<= x1886 10000) (= (x308 x1886) (x752 x1886))))
(assert (x700 x967))
(assert (x1209 x743))
(assert (= (x752 65535) (x308 65535)))
(assert (x1209 x821))
(assert (x700 x1725))
(assert (x1266 x1432))
(assert (x700 x889))
(assert (x700 x425))
(assert (= (x308 18446744073709551615) (x752 18446744073709551615)))
(assert (= (x308 1099511627775) (x752 1099511627775)))
(assert (x700 x252))
(assert (x894 x405 x1543))
(assert (= 274184521717934524641157099916833587244 (x470 (x752 274184521717934524641157099916833587244))))
(assert (= (x568 x1887) 0))
(assert (x700 x1900))
(assert (x700 x1))
(assert (= (x470 (x308 274184521717934524641157099916833587227)) 274184521717934524641157099916833587227))
(assert (x1522 x241 x811))
(assert (x700 x1006))
(assert (x700 x776))
(assert (x700 x526))
(assert (x700 x1424))
(assert (x700 x603))
(assert (x700 x601))
(assert (x700 x5))
(assert (= x133 (=> (= x1281 (= x1596 274184521717934524641157099916833587227)) (and (=> (not x1281) x610) (=> (and (= x1897 (> x687 x401)) (= x720 (x1291 (- x401 x824))) (>= 1461501637330902918203684832716283019655932542975 x350) (= (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0) x1674) (= x401 (x1193 x1674)) (= x960 68) (= x981 2835717307) (= x1072 274184521717934524641157099916833587211) (= x215 (or (and (< x1014 64) (= true (<= x1014 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1014))) (= x221 x960) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x401) (= x975 (+ x227 x1458)) (= x219 1) (< (+ x824 x1501) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= 826074471 x981)) (= x1014 (x1291 (- x960 4))) (not (< x960 4)) (= x1501 x227) (not (= x981 1889567281)) (= x306 x350) (not (< x981 826074471)) (= x1458 x824) (<= x1501 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x435 x350) (= (x100 x559) x1501) (= x559 (x105 (x752 x350) (x308 1) 0)) (= 32 x525) (= (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0) x798) (> x1456 0) (>= x1501 0) (not x1897) (>= x401 0) (not (= 2514000705 x981)) (= x1885 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x1124 (x752 274184521717934524641157099916833587227)) x1456) (= x1187 274184521717934524641157099916833587211) (not x215) x1281 (= x824 x687)) x1471)))))
(assert (x700 x1195))
(assert (x700 x807))
(assert (x1209 340282366920938463463374607431768211455))
(assert (x700 x1355))
(assert (x700 x1478))
(assert (= 3833100637 (x470 (x308 3833100637))))
(assert (x700 x1074))
(assert (x1522 x1820 x1502))
(assert (x700 x1983))
(assert (= (x470 (x308 3638949393)) 3638949393))
(assert (x700 x147))
(assert (x700 x1764))
(assert (x700 x1842))
(assert (x826 x335))
(assert (= (x134 x1746 160) (div x1746 1461501637330902918203684832716283019655932542976)))
(assert (x700 x1197))
(assert (= x51 x616))
(assert (= (and (not x563) x812) x1404))
(assert (x700 x402))
(assert (= (ite (= x911 x675) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1771 x911)) (x1115 x911)))
(assert (x700 x1165))
(assert (x1266 x1691))
(assert (x1209 x1525))
(assert (= (x403 x1309) (ite (= x86 x1309) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1969 x1309))))
(assert (x700 x1805))
(assert (x1209 x734))
(assert (= (x470 (x308 2835717307)) 2835717307))
(assert (= x1308 (=> (and (= x9 (x818 65535 x1367)) (= (x818 340282366920938463463374607431768211455 x961) x1135) (not (= 4062139261 x1306)) (= x1886 (x818 1461501637330902918203684832716283019655932542975 x237)) (= x1930 (x195 160)) (= x1554 0) (= x1083 (x340 224)) (>= x1141 0) (= (x818 340282366920938463463374607431768211455 x1485) x1358) (= x121 (div x1451 x1358)) (not (= 4062139261 x1799)) (= (x105 (x752 274184521717934524641157099916833587211) (x308 6) 0) x71) (= (x105 (x752 x964) x902 0) x862) (not (< x758 4)) (>= x1228 0) (= x1520 (x1607 (+ x1606 x86))) (= (x1291 (- x950 x824)) x961) (= x651 (not x1765)) (< 0 x953) (not (= 3257672857 x1799)) (= x1302 (mod x1011 x998)) (= 4 x1694) (= x1694 x1566) (= x1926 274184521717934524641157099916833587233) (= x1088 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x608)) (< x608 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x608))) (= x1996 (x1607 (+ 288 x1895))) (= x1982 (x340 128)) (not (< x1306 2362581449)) (= (x1624 x1010) x1228) (not (< x1799 2362581449)) (< 0 x218) (= x1591 (x340 256)) (= (and (= (<= x181 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 0 x181)) x553) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x467) (= 4272920204 x1799) (= (x1939 x1110) x335) (= x44 274184521717934524641157099916833587233) (= x1989 (x639 x1059)) (= 274184521717934524641157099916833587233 x646) (>= x270 0) (not (> x550 x824)) (= x256 4) (not (or (and (> 160 x707) (= true (<= x707 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x707 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1607 (+ x86 64)) x1418) (= (x1607 (+ 64 x1945)) x1122) (= x1726 274184521717934524641157099916833587211) (= x953 (x818 255 x1873)) (= x528 (x639 x86)) (not (ite x590 x590 (and (< 170141183460469231731687303715884105727 x181) (= true (<= x181 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1760 (x818 65535 x15)) (= x1158 (x340 256)) (= (x195 256) x174) (= x438 (x311 x1887)) (or (and (= x1912 (ite (not x1260) (= 0 (x818 340282366920938463463374607431768211455 x961)) (not x1260))) (or (and (= x520 (x818 255 x1714)) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x247 1 x520)) x874) (= (x105 (x752 274184521717934524641157099916833587211) (x308 5) 0) x194) (= (x818 x1479 x874) x1334) (<= 0 x1479) (> 65536 x1479) x1912 (= (x1127 x194) x1479) (= (x242 x857) x1714) (<= x1479 65535) (= 274184521717934524641157099916833587211 x288)) (not x1912)) (= (= 0 x950) x1260) (not x1339)) (and (= x601 (x242 x857)) (= x85 (x105 (x752 274184521717934524641157099916833587211) (x308 5) 0)) (= x723 (x247 1 x1213)) (< x1512 65536) (= (x1127 x85) x1512) (= x937 274184521717934524641157099916833587211) (= x499 (x496 x1512 x723)) (<= 0 x1512) x1339 (= x1213 (x818 255 x601)) (<= x1512 65535) (= (x818 65535 x499) x1189))) (<= x528 1208925819614629174706175) (<= x270 340282366920938463463374607431768211455) (= (x195 256) x1225) (not (ite x651 x651 (and (= true (<= x1485 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 170141183460469231731687303715884105727 x1485)))) (= x1776 (x818 1461501637330902918203684832716283019655932542975 x1304)) (= x357 (x340 128)) (= x1168 (x340 224)) (= x608 (x1939 x682)) (= x1765 (and (> x1485 0) (= (<= x1485 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (= (x639 x1905) x1485) (= 274184521717934524641157099916833587211 x408) (= (x1124 (x752 274184521717934524641157099916833587233)) x218) (> 1208925819614629174706176 x1927) (= (x818 1461501637330902918203684832716283019655932542975 x237) x964) (<= x467 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1607 (+ x1520 32)) x1593) (= x15 (x134 x1746 160)) (= (x1607 (+ x1418 64)) x1059) (>= 1208925819614629174706175 x1927) (= x1950 (x134 x735 160)) (= x1387 (x340 192)) (< x1927 1208925819614629174706176) (= (x818 1461501637330902918203684832716283019655932542975 x237) x1745) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x695) (= x1141 (x1635 x344)) (or (and (not x1535) (= 1 x1587)) (and (= 1 x659) (or (and (= (mod (* x626 x699) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x891) (= x1587 x891) (= x1724 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x699)) x736 (= (> x1303 1) x1868) (not (> x626 x1724)) (or (and (= (x818 1 x1303) x1865) (= x1152 (= x1865 0)) x1868 (= x1920 (> x726 1)) (not x1920) (= x699 100) (= (x134 x1303 1) x726) (= x626 (ite x1152 1 10))) (and (= 1 x626) (= 10 x699) (not x1868)))) (and (not x736) (= x1587 (x76 10 x1303)))) (= x1626 (ite (> 78 x1303) 1 0)) (= x413 (ite (> 32 x1303) 1 0)) (= x79 (x818 x1823 x1626)) (= x1910 (x818 x659 x413)) x1535 (= x1823 1) (= (= 0 (x496 x79 x1910)) x736))) (> 1208925819614629174706176 x861) (= x827 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x1457 x824) (= x386 (x1291 (- x270 x824))) (= (x1607 (+ x857 384)) x1094) (= x439 (x105 (x752 x1886) x71 0)) (>= 1208925819614629174706175 x1989) (= (x195 192) x1752) (= (x340 160) x848) (= (x1607 (+ x417 64)) x769) (= x1304 (x1474 x1996)) (= 274184521717934524641157099916833587233 x1128) (>= x467 0) (= (x1124 (x752 274184521717934524641157099916833587233)) x875) (= (x1712 x439) x950) (<= 0 x1927) (= (x818 340282366920938463463374607431768211455 x121) x1178) (= (x195 224) x416) (= (x134 x1746 176) x1427) (= x1011 (x818 340282366920938463463374607431768211455 x181)) (= (x195 128) x1490) (<= x1108 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587211 x1390) (= x476 (x1607 (+ 288 x857))) (= (x818 1461501637330902918203684832716283019655932542975 x735) x1273) (= 4272920204 x1306) (> 340282366920938463463374607431768211456 x270) (> x875 0) (= x623 (x1607 (+ 64 x1520))) (< x861 1208925819614629174706176) (> x998 0) (<= x438 1208925819614629174706175) (>= x861 0) (not (= x1306 3257672857)) (>= x950 0) (= (* x1178 x1243) x1457) (>= 1208925819614629174706175 x1029) (<= 0 x695) (= x1108 (x1635 x274)) (= x1451 (x818 340282366920938463463374607431768211455 x181)) (= (x818 255 x1873) x1370) (= (x1607 (+ x769 64)) x1816) (= x1494 (x818 1461501637330902918203684832716283019655932542975 x237)) (= x181 (x311 x1210)) (= (ite (= x950 0) (not (= 0 (x818 340282366920938463463374607431768211455 x961))) (= x950 0)) x1339) (= x1465 (x1607 (+ 96 x1520))) (= x754 (x818 340282366920938463463374607431768211455 x386)) (= (x1607 (+ x1520 64)) x304) (not (> 4 x1566)) (= (x1607 (+ 416 x1520)) x1895) (= (x1607 (+ x1122 64)) x1619) (= x682 (x1227 x115)) (= x1566 4) (<= x861 1208925819614629174706175) (>= 1208925819614629174706175 x1927) (= x882 (x105 (x752 x1494) (x308 2) 0)) (= (x1607 (+ x857 352)) x1448) (= (x818 1461501637330902918203684832716283019655932542975 x1746) x637) (= x1734 (x195 160)) (>= x682 0) (= (x1607 (+ x1015 288)) x1905) (not (< x950 x824)) (= x1367 (x134 x1746 192)) (>= 1208925819614629174706175 x861) (= x598 (x134 x735 168)) (= x1029 (x311 x1520)) (= 4 x758) (< 0 x1358) (<= 0 x695) (= x1413 (x818 65535 x1427)) (= x1730 (x1607 (+ x707 31))) (= (x1607 (+ x857 320)) x1161) (= x1112 274184521717934524641157099916833587211) (= x417 (x1607 (+ x1895 288))) (= x1303 (x818 255 x1950)) (= (x818 18446744073709551615 x598) x271) (= x799 (x195 192)) (= 0 x1843) (= (x105 (x752 274184521717934524641157099916833587211) (x308 6) 0) x902) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1141) (= (x1607 (+ 64 x623)) x1887) (not (= x1324 0)) (<= 0 x861) (= x982 (x340 192)) (= x849 (x818 18446744073709551615 x1587)) (= (x1607 (+ 32 x1520)) x1210) (< x682 20282409603651670423947251286016) (= x1776 x1745) (>= x1108 0) (< x1228 65536) (= x256 x758) (= (x195 224) x983) (= x270 (x329 x882)) (= (x105 (x752 274184521717934524641157099916833587211) (x308 5) 0) x115) (or (and (not (= x608 115792089237316195423570985008687907853269984655499359237631748795939503996928)) x1088 (not (< 10141204801825835211973625643007 x1292)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x692) true) (< x692 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x692))) (not (= x1009 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (x818 20282409603651670423947251286015 x405) x1292) (<= x521 18446744073709551615) (> 18446744073709551616 x521) (= (* x521 x1078) x808) (= x1009 (x1939 x405)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1078 x521)) (= x1078 (x818 20282409603651670423947251286015 x692)) (= x1710 x1110) (= x808 x405) (<= 0 x521) (= x1710 (x1291 (- 0 x1009))) (= x692 (x1291 (- 0 x608)))) (and (> 18446744073709551616 x411) (not (or (and (< x608 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x608))) (> x608 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< (* x1697 x411) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x818 20282409603651670423947251286015 x1538) x774) (>= 18446744073709551615 x411) (<= 0 x411) (not x1088) (= (* x1697 x411) x1718) (= x1697 (x818 20282409603651670423947251286015 x608)) (= x1718 x1538) (not (< 10141204801825835211973625643007 x774)) (= x1538 x1110))) (>= 340282366920938463463374607431768211455 x950) (not (= 2362581449 x1306)) (= (x1607 (+ 128 x1520)) x512) (= x590 (not x553)) (= (> x1303 0) x1535) (not (> x824 340282366920938463463374607431768211455)) (= (x105 (x752 x1477) (x308 1) 0) x274) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x257) (< 0 x1370) (= (x105 (x752 x1477) (x308 1) 0) x344) (= x1682 (x1607 (+ 64 x1816))) (= (x1607 (+ x1895 512)) x50) (>= x467 0) (= (x818 340282366920938463463374607431768211455 x1485) x998) (<= 0 x1927) (= x1411 (x340 160)) (= x857 (x1607 (+ x581 512))) (= (x818 340282366920938463463374607431768211455 x1302) x1554) (= x28 274184521717934524641157099916833587211) (> 340282366920938463463374607431768211456 x950) (= x581 (x1607 (+ 160 x1520))) (< (* x1178 x1243) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= 2362581449 x1799)) (>= 20282409603651670423947251286015 x682) (not (> x824 x270)) (= (x195 128) x1351) (= x1945 (x1607 (+ x857 64))) (= (x105 (x752 274184521717934524641157099916833587211) (x308 5) 0) x1010) (>= 65535 x1228) (= x1606 (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1730)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x695)) x970)))
(assert (x1209 x499))
(assert (x700 x839))
(assert (= (x470 (x752 x905)) x905))
(assert (x700 x1059))
(assert (= (and x1396 (not x1810)) x1058))
(assert (x700 x1302))
(assert (x700 x1042))
(assert (x39 x673 x1325))
(assert (x700 x1370))
(assert (x700 x1800))
(assert (=> (>= 10000 x923) (= (x308 x923) (x752 x923))))
(assert (x700 x4))
(assert (x700 x1112))
(assert (x700 x253))
(assert (x700 x1168))
(assert (x700 x1423))
(assert (x700 x499))
(assert (x700 x1107))
(assert (= (x470 (x752 x999)) x999))
(assert (x1209 x1691))
(assert (x700 x722))
(assert (x700 x1292))
(assert (= (x308 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x752 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x700 x1619))
(assert (x1209 20282409603651670423947251286015))
(assert (=> (>= 10000 x350) (= (x308 x350) (x752 x350))))
(assert (= (x134 x1746 176) (div x1746 95780971304118053647396689196894323976171195136475136)))
(assert (x1266 x682))
(assert (x700 x1989))
(assert (x700 x1690))
(assert (x700 x1551))
(assert (= x484 (x470 (x752 x484))))
(assert (not x1933))
(assert (x700 x200))
(assert (x450 x730 x488))
(assert (= (=> (= (= x990 274184521717934524641157099916833587227) x1810) (and (=> (and (<= x1813 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x255) (> x448 0) (not (= x1242 157198259)) (= x1043 (x105 (x752 274184521717934524641157099916833587211) x597 0)) (= (< x634 x107) x1179) (= x1435 (x105 (x752 x923) (x308 1) 0)) (<= x634 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x112 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1618 274184521717934524641157099916833587211) (= x244 32) (= x112 x1769) (not x30) (= 274184521717934524641157099916833587211 x943) (not (= 117300739 x1242)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x880) (= (x818 1461501637330902918203684832716283019655932542975 x109) x1629) (= (< x1813 x1906) x255) (= x1690 (+ x1769 x394)) (= x1906 x394) (= x185 (x105 (x752 x1629) (x308 1) 0)) (>= 1461501637330902918203684832716283019655932542975 x109) (= x448 (x1124 (x752 274184521717934524641157099916833587227))) (> 826074471 x1242) (= x485 (x818 1461501637330902918203684832716283019655932542975 x109)) (= x294 x109) (<= 0 x634) (= x1242 599290589) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1906 x112)) (= 1 x497) (= (x817 x1043) x1813) (= (x1291 (- x634 x107)) x1921) (= (x105 (x752 x485) (x308 2) 0) x597) (= (x1291 (- x1813 x107)) x1651) (= (x1291 (- x1249 4)) x35) (not x1179) (<= 0 x1813) (>= x112 0) (= x112 (x1548 x337)) (= (x818 1461501637330902918203684832716283019655932542975 x109) x923) (= (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0) x654) (= x1249 x389) (= 100 x1249) (not (> 4 x1249)) x1810 (= (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0) x337) (= x628 274184521717934524641157099916833587211) (= (x1875 x1435) x634) (= (or (and (> 96 x35) (= (<= x35 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x35)) x30) (= x879 274184521717934524641157099916833587211) (= x914 (x818 1461501637330902918203684832716283019655932542975 x109)) (= x1906 x107) (= x1243 x107) (not (= 404098525 x1242))) x710) (=> (not x1810) x23))) x59))
(assert (x303 x1971 x1293))
(assert (x700 x975))
(assert (x894 x1657 x1369))
(assert (x700 x272))
(assert (x303 x1304 x322))
(assert (x1209 x405))
(assert (x700 x316))
(assert (x700 x1787))
(assert (x700 x363))
(assert (x700 x1830))
(assert (x700 x1629))
(assert (= 274184521717934524641157099916833587227 (x470 (x752 274184521717934524641157099916833587227))))
(assert (x700 x626))
(assert (x1209 x890))
(assert (= (x752 2835717307) (x308 2835717307)))
(assert (x1522 x198 x1192))
(assert (x700 x1566))
(assert (= (ite (= x86 x911) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1969 x911)) (x403 x911)))
(assert (= x1021 (x470 (x752 x1021))))
(assert (= (x752 599290589) (x308 599290589)))
(assert (x700 x1052))
(assert (x1120 x1527 x1140))
(assert (x700 x1876))
(assert (x700 x1501))
(assert (x700 x1862))
(assert (x1209 x237))
(assert (= (x470 (x308 1168994686)) 1168994686))
(assert (x700 x1415))
(assert (x700 x307))
(assert (x700 x299))
(assert (= (or (and x372 x266) (and x1779 x90)) x1514))
(assert (x700 x1521))
(assert (x700 x1452))
(assert (x700 x1723))
(assert (x700 x1896))
(assert (x700 x12))
(assert (x700 x1405))
(assert (x700 x1662))
(assert (= (=> (= x1821 (= x1523 274184521717934524641157099916833587233)) (and (=> (not x1821) x1952) (=> (and (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x154) (not (= 2362581449 x1169)) (= (x1607 (+ x245 352)) x1842) (<= 0 x1927) (= (x1635 x229) x661) (= x1169 4272920204) (= x1728 (x1607 (+ x245 288))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x695) (= x415 1) (> 1208925819614629174706176 x861) (not (= 4062139261 x1169)) (not (< x1169 2362581449)) (= x1271 (x1493 192)) (not (< x11 4)) (= x452 (x1493 224)) (= x607 (x1493 160)) (<= 0 x861) (= x362 (x1607 (+ x245 320))) (= (x1493 192) x106) (= x1144 160) (= (x1493 128) x1923) (<= x467 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x254 x11) (< x1927 1208925819614629174706176) (>= x467 0) (<= x1927 1208925819614629174706175) (<= 0 x695) (= (x1493 160) x1195) (= x939 (x1493 256)) x1821 (<= x661 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x661) (= (x1493 224) x445) (= (x1493 128) x1497) (not (= x1169 3257672857)) (> x307 0) (= x229 (x105 (x752 x1477) (x308 1) 0)) (= x307 (x1124 (x752 274184521717934524641157099916833587233))) (= 4 x11) (= x1789 (x1607 (+ 384 x245))) (<= x861 1208925819614629174706175) (= x919 (x1493 256))) x1288))) x1688))
(assert (x700 x708))
(assert (x700 x1669))
(assert (x303 x4 x1944))
(assert (x1209 x1913))
(assert (x700 x96))
(assert (= (x308 2068668150) (x752 2068668150)))
(assert (x700 x49))
(assert (x700 x225))
(assert (= (x470 (x752 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (= (x470 (x308 340282366920938463463374607431768211456)) 340282366920938463463374607431768211456))
(assert (x700 x1463))
(assert (x700 x1715))
(assert (= (x247 1 x520) (mod (x76 2 x520) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (=> (and (= x1650 (x1607 (+ 64 x1941))) (= (x818 1461501637330902918203684832716283019655932542975 x955) x1988) (= x1832 (x818 1461501637330902918203684832716283019655932542975 x1767)) (= (x818 1461501637330902918203684832716283019655932542975 x237) x278) (= x86 (x1607 (+ 512 x915))) (= (x1607 (+ x915 288)) x19) (= (x863 x1787) x955) (= (x818 18446744073709551615 x1531) x560) (= (x1607 (+ x915 320)) x73) (= x1941 (x1607 (+ x802 64))) (= x802 (x1607 (+ 64 x19))) (= (x1607 (+ x915 288)) x1787) (= x1767 (x1428 x73)) (= x1988 x278) (= (x1607 (+ 64 x1015)) x300) (= (x1607 (+ 64 x1546)) x1410) (= x1546 (x1607 (+ x300 64))) (= (= 274184521717934524641157099916833587235 x1832) x1241) (= 4 x524) (= x1375 (x134 x735 168)) (= x1817 (x818 18446744073709551615 x1375))) (and (=> (and (not (= x68 4062139261)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1791) (= 4 x1067) (> 1208925819614629174706176 x633) (= x567 (x1124 (x752 274184521717934524641157099916833587235))) (= x1511 (x1848 192)) (= (x1607 (+ x1015 320)) x1863) (<= 0 x633) (not (< x68 2362581449)) (= x1947 (x1848 160)) (>= 1208925819614629174706175 x1805) (= (x1848 128) x807) (= x860 (x1848 160)) (= x524 x1067) (not (= 2362581449 x68)) (= 4272920204 x68) (<= x633 1208925819614629174706175) (= x1324 1) (= (x1848 256) x57) (= (x1607 (+ x1015 288)) x1392) x1241 (= x1023 (x105 (x752 x1477) (x308 1) 0)) (> x567 0) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1545) (= x918 (x1607 (+ x1015 352))) (= x707 160) (= x169 (x1848 192)) (= x1550 (x1848 256)) (<= 0 x1791) (<= 0 x1805) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x34) (< x1805 1208925819614629174706176) (= x250 (x1848 224)) (not (< x1067 4)) (= x1907 (x1848 128)) (<= 0 x196) (>= x34 0) (not (= x68 3257672857)) (= x1453 (x1848 224)) (= (x1607 (+ 384 x1015)) x775) (= x1791 (x1082 x1023)) (<= x196 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1308) (=> (not x1241) x412))) x1013))
(assert (x700 x591))
(assert (x1602 x1715))
(assert (= (x308 20282409603651670423947251286016) (x752 20282409603651670423947251286016)))
(assert (= (x247 1 x1213) (mod (x76 2 x1213) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x700 x1096))
(assert (= (x308 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x752 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= (=> (= x135 (= 274184521717934524641157099916833587227 x1159)) (and (=> (not x135) x1482) (=> (and (= x1908 32) (= x503 36) (not x1062) (not (> 4 x503)) (>= x111 0) (not (= 826074471 x1181)) (= (x1875 x1048) x111) (= (x105 (x752 274184521717934524641157099916833587211) (x308 1) 0) x1048) (= x455 1) (= (x1124 (x752 274184521717934524641157099916833587227)) x706) (< 0 x706) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x243) (and (= (<= x243 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x243))) x1062) (= 36 x503) (= 274184521717934524641157099916833587211 x1764) (not (> 826074471 x1181)) (= x980 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (x1291 (- x503 4)) x243) x135 (= 1889567281 x1181) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x111)) x281))) x1586))
(assert (x700 x278))
(assert (x700 x257))
(assert (x700 x706))
(assert (x1266 x988))
(assert (x700 x250))
(assert (x421 x1833 x66))
(assert (x700 x907))
(assert (x700 x41))
(assert (x700 x775))
(assert (x700 x1187))
(assert (x1209 65535))
(assert (x700 x1831))
(assert (x1209 x1625))
(assert (= (x309 x1175) 0))
(assert (x700 x1365))
(assert (= (=> (and (= (x818 18446744073709551615 x1662) x1641) (<= x984 340282366920938463463374607431768211455) (= x1815 (x1607 (+ x1463 288))) (= 274184521717934524641157099916833587211 x95) (= (x818 18446744073709551615 x1087) x457) (= (x1607 (+ 64 x1815)) x1884) (= x944 (x1607 (+ x1884 64))) (= (x1316 x556) x984) (= (= x1523 274184521717934524641157099916833587235) x155) (= (x105 (x752 x905) x1183 0) x556) (= x191 (x1607 (+ 64 x944))) (= (x1349 x1175) x890) (<= 0 x984) (= x905 (x818 1461501637330902918203684832716283019655932542975 x890)) (= x1662 (x134 x735 168)) (= x1183 (x105 (x752 274184521717934524641157099916833587211) (x308 6) 0)) (= (x1607 (+ x245 64)) x517) (= x1523 (x818 1461501637330902918203684832716283019655932542975 x4)) (= x4 (x78 x1132)) (= (x1607 (+ x1149 64)) x230) (> 340282366920938463463374607431768211456 x984) (= (x1607 (+ 64 x517)) x1149) (= x675 (x1607 (+ x1463 512))) (= x1132 (x1607 (+ x245 64))) (= 4 x254) (= (x1607 (+ x1463 288)) x1175)) (and (=> (not x155) x1688) (=> (and (not (= x995 4062139261)) (<= 0 x633) (= (x1607 (+ x245 384)) x348) (= (x1398 256) x1632) (= x1720 4) (= x361 (x1607 (+ x245 320))) (<= x196 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1892 (x1398 128)) (not (= 3257672857 x995)) (= x1720 x254) (= 1 x415) (= x588 (x1398 256)) x155 (<= 0 x196) (= x1276 (x1607 (+ x245 352))) (= x742 (x1607 (+ 288 x245))) (not (< x995 2362581449)) (= x971 (x1398 128)) (= x839 (x1398 160)) (<= x34 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x531) (<= 0 x1359) (= (x105 (x752 x1477) (x308 1) 0) x1992) (= (x1124 (x752 274184521717934524641157099916833587235)) x531) (= (x1398 192) x1959) (= x1824 (x1398 224)) (= x1333 (x1398 192)) (= 160 x1144) (= (x1398 160) x1423) (>= x34 0) (> 1208925819614629174706176 x633) (>= 1208925819614629174706175 x1805) (= x632 (x1398 224)) (not (= x995 2362581449)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1359) (= (x1082 x1992) x1359) (<= x633 1208925819614629174706175) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x668) (= 4272920204 x995) (not (< x1720 4)) (< x1805 1208925819614629174706176) (>= x1805 0)) x1288))) x731))
(assert (x700 x1491))
(assert (x700 x131))
(assert (x700 x661))
(assert (= x1966 true))
(assert (x700 x1072))
(assert (x700 x633))
(assert (x700 x1210))
(assert (x700 x796))
(assert (x700 x824))
(assert (x700 x467))
(assert (x700 x1720))
(assert (x1209 x458))
(assert (= (div x1820 2) (x134 x1820 1)))
(assert (=> (>= 10000 x964) (= (x752 x964) (x308 x964))))
(assert (x700 x1194))
(assert (= true x1901))
(assert (x1209 x877))
(assert (x1522 x1303 x1519))
(assert (x700 x859))
(assert (x700 x416))
(assert (x1209 255))
(assert (x700 x1240))
(assert (x1602 274184521717934524641157099916833587244))
(assert (x700 x726))
(assert (x700 x1579))
(assert (= (=> (= x1552 (= x1159 274184521717934524641157099916833587244)) (and (=> (and x1552 (not (> 1889567281 x492)) (not (< x805 4)) (= x456 (x105 (x752 274184521717934524641157099916833587211) (x308 5) 0)) (= x316 (x818 20282409603651670423947251286015 x717)) (= x1755 (or (and (< x473 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x473))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x473))) (or (and (= x717 0) (not x1858)) (and (<= 0 x1202) (= x14 (* x1212 x1202)) (= x1562 (or (> x321 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x321 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x321 0)))) (= x1212 (x818 20282409603651670423947251286015 x321)) (not x1562) x1858 (= x14 x1636) (= x717 x1636) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1202 x1212)) (<= x1202 18446744073709551615) (> 18446744073709551616 x1202))) (= 36 x805) (= (x864 x456) x1194) (>= x1194 0) (= x473 (x1291 (- x805 4))) (= 1889567281 x492) (= 32 x1908) (= (and (= (<= x321 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x321 0)) x1858) (> 20282409603651670423947251286016 x1194) (>= 20282409603651670423947251286015 x1194) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1589) (= x1417 (x1124 (x752 274184521717934524641157099916833587244))) (= x1723 274184521717934524641157099916833587211) (= x455 1) (= 36 x805) (not x1755) (> x1417 0) (= (x1939 x1194) x321) (> 3119561463 x492)) x281) (=> (not x1552) x806))) x838))
(assert (x700 x1050))
(assert (x700 x628))
(assert (x700 x1081))
(assert (x1602 274184521717934524641157099916833587235))
(assert (= 3840337785 (x470 (x308 3840337785))))
(assert (= x1743 (and x741 (not x513))))
(assert (= x1383 (and x1229 (not x209))))
(assert (x700 x1943))
(assert (x1209 x1467))
(assert (x1602 274184521717934524641157099916833587231))
(assert (=> (<= x1477 10000) (= (x308 x1477) (x752 x1477))))
(assert (x39 x1662 x650))
(assert (x700 x1864))
(assert (x700 x154))
(assert (= x1970 (and (not x155) x1664)))
(assert (= (x308 340282366920938463463374607431768211456) (x752 340282366920938463463374607431768211456)))
(assert (x700 x62))
(assert (x700 x1108))
(assert (= 274184521717934524641157099916833587235 (x470 (x308 274184521717934524641157099916833587235))))
(assert (x1209 x1304))
(assert (x700 x1832))
(assert (x700 x80))
(assert (x700 x1527))
(assert (x700 x1007))
(assert (x700 x820))
(assert (x1120 x877 x1784))
(assert (x700 x1979))
(assert (= (ite (= x86 x101) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1969 x101)) (x403 x101)))
(assert (x700 x1492))
(assert (x700 x1601))
(assert (x1602 x484))
(assert (x700 x1531))
(assert (x1209 x386))
(assert (x700 x1623))
(assert (= (x470 (x308 1208925819614629174706175)) 1208925819614629174706175))
(assert (= (x470 (x752 x1742)) x1742))
(assert (x700 x693))
(assert (x1266 x1314))
(assert (x700 x793))
(assert (x700 x142))
(assert (x700 x880))
(assert (x700 x1653))
(assert (x700 x1697))
(assert (x700 x675))
(assert (x1602 x12))
(assert (x700 x8))
(assert (x700 x1465))
(assert (x700 x673))
(assert (= (x308 117300739) (x752 117300739)))
(assert (= true x866))
(assert (x1209 x283))
(assert (x700 x1066))
(assert (= x325 (=> (and (= x376 (x818 1 x1228)) (= (not (= x376 0)) x359)) (and (=> (and (not x359) (= x61 x96) (= x1463 x1940)) x1203) (=> x359 x534)))))
(assert (= x741 (and (not x135) x1740)))
(assert (= (or (and x155 x1664) (and x1821 x1970)) x652))
(assert (x1266 x1240))
(assert (= (=> (and (= x1217 0) (not (= x1563 0)) (= x644 (x1291 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1623))) (= (ite (not x771) 1 0) x1090) (= x510 (and (< 0 x131) (= (<= x131 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (= x200 (x818 x1090 x1580)) (= x1639 (x1607 (+ x599 x1623))) (= x131 (x543 832)) (= x1217 (x818 x431 x1928)) (not (or (and (= true (<= x545 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 160 x545)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x545))) (<= x680 1208925819614629174706175) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1644 x721)) (= x771 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1623) (and (= true (<= x1623 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1623 0)))) (= (x618 640) x64) (not (ite x358 x358 (and (< 170141183460469231731687303715884105727 x131) (= (<= x131 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (not x510) x358) (= 0 x200) (= x1639 x776) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x599)) (= x1540 (x818 340282366920938463463374607431768211455 x131)) (= (x823 672) x673) (= (ite (or (and (> x599 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x603 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x599) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x603)) (< x599 x603))) 1 0) x1928) (= x431 (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1623) (and (= true (<= x1623 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x1623))) 1 0)) (= (ite (or (and (< x644 x599) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x644) (<= x599 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x599) (> x644 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x1580) (= x1025 x599) (= x1644 (mod (* x272 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x543 800) x627) (= x680 (x543 928)) (= (x1291 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1623)) x603) (<= x627 1208925819614629174706175) (= (x818 18446744073709551615 x673) x721) (= (* x721 x1644) x1025)) x1001) x1466))
(assert (x700 x159))
(assert (x700 x1181))
(assert (x700 x1298))
(assert (x700 x984))
(assert (x700 x1616))
(assert (x700 x473))
(assert (x1209 x490))
(assert (x700 x162))
(assert (x700 x879))
(assert (= x404 (and x527 x1409)))
(assert (x700 x1094))
(assert (x700 x1212))
(assert (x700 x1988))
(assert (x700 x1776))
(assert (x700 x484))
(assert (= (ite (= x1967 x1059) x1685 (x854 x1059)) (x1666 x1059)))
(assert (x700 x848))
(assert (x747 x1427 x1659))
(assert (= (ite (= x1905 x1967) x1685 (x854 x1905)) (x1666 x1905)))
(assert (x700 x1959))
(assert (x1522 x573 x296))
(assert (x450 x1098 x1439))
(assert (x700 x713))
(assert (x39 x480 x1509))
(assert (x700 x1593))
(assert (x700 x1750))
(assert (x700 x715))
(assert (x894 x1019 x993))
(assert (x700 x1523))
(assert (x421 x181 x952))
(assert (x700 x318))
(assert (x700 x870))
(assert (x700 x181))
(assert (= (x643 x1132) 0))
(assert (x700 x1545))
(assert (x700 x1346))
(assert (x700 x995))
(assert (x700 x1855))
(assert (x700 x205))
(assert (x1754 x126))
(assert (and (= 1000000 (x76 10 6)) (= 10000000000 (x76 10 10)) (= (x76 10 8) 100000000) (= 10 (x76 10 1)) (= (x76 10 15) 1000000000000000) (= 100000 (x76 10 5)) (= 10000000000000000000000000 (x76 10 25)) (= 10000000000000000000 (x76 10 19)) (= (x76 10 27) 1000000000000000000000000000) (= 1000000000000000000000 (x76 10 21)) (= (x76 10 12) 1000000000000) (= (x76 10 0) 1) (= (x76 10 9) 1000000000) (= 1000000000000000000 (x76 10 18)) (= (x76 10 13) 10000000000000) (= (x76 10 11) 100000000000) (= (x76 10 3) 1000) (= 10000000000000000000000000000 (x76 10 28)) (= 1000000000000000000000000 (x76 10 24)) (= 100000000000000000000000000000 (x76 10 29)) (= (x76 10 22) 10000000000000000000000) (= 100000000000000000000000 (x76 10 23)) (= (x76 10 2) 100) (= 10000000 (x76 10 7)) (= (x76 10 14) 100000000000000) (= 10000000000000000 (x76 10 16)) (= 1000000000000000000000000000000 (x76 10 30)) (= 100000000000000000000000000 (x76 10 26)) (= (x76 10 20) 100000000000000000000) (= 100000000000000000 (x76 10 17)) (= (x76 10 4) 10000)))
(assert (x450 x979 x402))
(assert (= (ite (= x443 132) 274184521717934524641157099916833587211 (x427 x443)) (x1163 x443)))
(assert (x700 x1498))
(assert (= (x470 (x308 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x700 x1394))
(assert (x303 x8 x495))
(assert (x700 x860))
(assert (x700 x122))
(assert (x700 x634))
(assert (x1209 x392))
(assert (= (or (and x1736 (not x519)) x433) x797))
(assert (x1209 x1156))
(assert (x700 x1680))
(assert (= x834 (and (not x1552) x1743)))
(assert (x1209 x638))
(assert (x700 x926))
(assert (x700 x645))
(assert (x700 x533))
(assert (x700 x1533))
(assert (x700 x1929))
(assert (x1209 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x700 x480))
(assert (x700 x106))
(assert (x700 x1389))
(assert (x700 x294))
(assert (= (=> (and (= 3840337785 x1389) (= x1366 x796) (<= 0 x320) (<= 0 x1224) (>= x1828 0) (= x900 950698303) (= false x352) (= (x1127 x1060) x241) (<= x1529 255) (or (and (>= x411 0) (= x1295 x1675) (<= x411 18446744073709551615) (= x1119 (x818 20282409603651670423947251286015 x409)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x411 x1119)) (not x338) (= x1691 x1295) (not (or (> x409 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x409 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x409)))) (> 18446744073709551616 x411) (not (> x45 10141204801825835211973625643007)) (= (x818 20282409603651670423947251286015 x1295) x45) (= x1675 (* x411 x1119))) (and (< x521 18446744073709551616) (= x1691 x924) (<= x521 18446744073709551615) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x409)) (= (x1939 x1019) x1426) (= (x818 20282409603651670423947251286015 x1657) x1900) (= (* x521 x1900) x803) (not (= x1426 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x521 x1900)) (= x924 (x1291 (- 0 x1426))) (= x1019 x803) (not (> x286 10141204801825835211973625643007)) (<= 0 x521) (not (or (and (< x1657 0) (= true (<= x1657 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1657))) x338 (= (x1291 (- 0 x409)) x1657) (= (x818 20282409603651670423947251286015 x1019) x286))) (< 0 x1400) (> 20282409603651670423947251286016 x246) (= x1147 4) (= x876 x1335) (<= x861 1208925819614629174706175) (not (> 2362581449 x1361)) (<= 0 x1352) (>= x241 0) (>= 1461501637330902918203684832716283019655932542975 x1177) x714 (>= x1202 0) (not (= 2362581449 x1361)) (< x1927 1208925819614629174706176) (>= 18446744073709551615 x411) (= x409 (x1939 x246)) (= (< 0 (x1124 (x752 274184521717934524641157099916833587235))) x714) (= x719 (> (x1124 (x752 274184521717934524641157099916833587223)) 0)) (<= x549 20282409603651670423947251286015) x719 (= (or (and (= (<= x409 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x409)) (> x409 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x338) (< x900 2068668150) (<= x1444 20282409603651670423947251286015) (<= x1378 1099511627775) (<= x1828 18446744073709551615) (< x900 1168994686) (<= 0 x1313) (> 1208925819614629174706176 x861) (<= 0 x633) (>= 1208925819614629174706175 x1927) (<= x1805 1208925819614629174706175) (= x1139 (x727 160)) (= x320 (x345 (x752 274184521717934524641157099916833587233))) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1017) (<= 0 x861) (= x165 (> (x1124 (x752 274184521717934524641157099916833587211)) 0)) (= (x1939 x1691) x1050) (= (x727 224) x1264) (<= 0 x1805) (<= x467 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1927) (>= 1461501637330902918203684832716283019655932542975 x1021) (<= x91 20282409603651670423947251286015) (= (x1635 x40) x1896) (>= 18446744073709551615 x851) (>= x253 0) (= (x727 256) x1795) (<= 0 x1305) (<= 0 x246) (= x1498 128) (= x1672 (x727 128)) (>= 65535 x241) (>= x1444 0) (<= 0 x1649) (= (x105 (x752 x1021) (x308 5) 0) x269) (>= x1452 0) (= (x727 160) x1547) (<= x1340 1099511627775) (= (< 0 (x1124 (x752 274184521717934524641157099916833587244))) x284) (>= x449 0) (>= 255 x1224) (= x253 (x345 (x752 274184521717934524641157099916833587223))) (<= 0 x1006) (= 274184521717934524641157099916833587233 x1052) x605 (<= 0 x1177) (<= x1305 1461501637330902918203684832716283019655932542975) (>= x467 0) x165 x1847 (>= x1737 0) (not (< x900 950698303)) (not (= 3257672857 x1361)) (= x1707 x1477) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x695) (= x1177 x1800) (= (x727 256) x934) (= (x345 (x752 274184521717934524641157099916833587227)) x1313) (<= 0 x1529) (<= 0 x1893) (<= x521 18446744073709551615) (= (x105 (x752 x1021) (x308 5) 0) x1060) (>= x1268 0) (= x1021 x1954) (>= 1461501637330902918203684832716283019655932542975 x1954) (= x876 x1352) (= x246 (x1227 x269)) (= (x1124 (x752 274184521717934524641157099916833587233)) x1883) (= 0 x469) (< x900 1110625635) (= x605 (> (x1124 (x752 274184521717934524641157099916833587231)) 0)) (<= 0 x851) (= x1808 false) (>= x411 0) (= 4 x1165) (<= 0 x77) (>= 18446744073709551615 x1202) (<= x861 1208925819614629174706175) (>= 1208925819614629174706175 x633) (= (< 0 (x1124 (x752 274184521717934524641157099916833587233))) x1590) (not (= x1361 4062139261)) (= x792 (x727 128)) (not (< x1165 4)) x284 (>= x549 0) x1590 (= 4 x1165) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1896) (= x1711 (x727 192)) (= (x345 (x752 274184521717934524641157099916833587235)) x1713) (= x1452 (x345 (x752 274184521717934524641157099916833587244))) (< x241 65536) (< 0 x1883) (= (< 0 (x1124 (x752 274184521717934524641157099916833587227))) x1847) (>= x1378 0) (<= 0 x870) (= x1006 (x345 (x752 274184521717934524641157099916833587231))) (= 4272920204 x1361) (<= 0 x1713) (<= 0 x1340) (<= 0 x796) (<= 0 x695) (>= 18446744073709551615 x1268) (>= x861 0) (= x941 x469) (>= x1954 0) (<= x1893 255) (<= x1737 18446744073709551615) (<= x1649 1461501637330902918203684832716283019655932542975) (= (x727 224) x629) (<= 0 x1927) (<= x246 20282409603651670423947251286015) (<= x1927 1208925819614629174706175) (<= x449 20282409603651670423947251286015) (= (x727 192) x926) (= (x1124 (x752 274184521717934524641157099916833587211)) x1400) (= false x1798) (<= x796 1461501637330902918203684832716283019655932542975) (= x77 (x345 (x752 274184521717934524641157099916833587211))) (>= x789 0) (= x1305 x1800) (<= 0 x91) (>= 18446744073709551615 x789) (>= 1461501637330902918203684832716283019655932542975 x1352) (= x1069 274184521717934524641157099916833587233) (<= 0 x1896) (= x26 false) (= x40 (x105 (x752 x1477) (x308 1) 0)) (<= 0 x521) (>= 255 x870)) x662) x1933))
(assert (x1209 x1538))
(assert (x700 x113))
(assert (x700 x310))
(assert (= (x1163 x1059) (ite (= x1059 132) 274184521717934524641157099916833587211 (x427 x1059))))
(assert (x700 x390))
(assert (x700 x1123))
(assert (x700 x430))
(assert (x700 x751))
(assert (x700 x15))
(assert (x700 x1587))
(assert (x700 x1368))
(assert (= x1740 (and (not x1507) x1027)))
(assert (x700 x1780))
(assert (x700 x408))
(assert (x700 x635))
(assert (x700 x1103))
(assert (x700 x1782))
(assert (x700 x29))
(assert (x700 x1303))
(assert (x1209 x593))
(assert (x894 x988 x1592))
(assert (x700 x478))
(assert (x700 x111))
(assert (x700 x1626))
(assert (x700 x623))
(assert (x700 x954))
(assert (x700 x1621))
(assert (x1209 x1611))
(assert (x700 x407))
(assert (x700 x941))
(assert (x700 x1661))
(assert (x700 x1373))
(assert (x700 x1477))
(assert (x700 x1118))
(assert (x1209 x1019))
(assert (x700 x903))
(assert (x700 x1324))
(assert (x700 x717))
(assert (x700 x1410))
(assert (x700 x647))
(assert (x700 x914))
(assert (x700 x794))
(assert (x700 x1167))
(assert (x700 x1886))
(assert (x700 x1916))
(assert (x700 x1887))
(assert (=> (>= 10000 x434) (= (x752 x434) (x308 x434))))
(assert (x700 x1795))
(assert (x700 x780))
(assert (x700 x94))
(assert (x1209 x1767))
(assert (x700 x1542))
(assert (x700 x1741))
(assert (x700 x1434))
(assert (x700 x1239))
(assert (x1209 x772))
(assert (x1209 x321))
(assert (x700 x1139))
(assert (= (or x1980 (and (not x1735) x1557)) x1229))
(assert (x700 x1354))
(assert (=> (>= 10000 x999) (= (x752 x999) (x308 x999))))
(assert (x700 x1021))
(assert (x700 x830))
(assert (x700 x1034))
(assert (x700 x1359))
(assert (=> (>= 10000 x858) (= (x308 x858) (x752 x858))))
(assert (= (x470 (x308 274184521717934524641157099916833587223)) 274184521717934524641157099916833587223))
(assert (x700 x1538))
(assert (=> (<= x905 10000) (= (x308 x905) (x752 x905))))
(assert (x1209 x1873))
(assert (x1522 x1442 x158))
(assert (= (x308 2362581449) (x752 2362581449)))
(assert (x1602 x905))
(assert (=> (<= x485 10000) (= (x308 x485) (x752 x485))))
(assert (x700 x1087))
(assert (x1209 x1479))
(assert (x700 x871))
(assert (=> (<= x1021 10000) (= (x308 x1021) (x752 x1021))))
(assert (= (x752 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x308 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (= (and x788 x616) x921))
(assert (x1209 x1432))
(assert (= (x752 3257672857) (x308 3257672857)))
(assert (x700 x760))
(assert (=> (<= x1494 10000) (= (x752 x1494) (x308 x1494))))
(assert (x700 x11))
(assert (x700 x169))
(assert (x700 x680))
(assert (= (ite (= x1094 x911) x1591 (x204 x911)) (x1771 x911)))
(assert (x700 x434))
(assert (x700 x1122))
(assert (x700 x1951))
(assert (x700 x1908))
(assert (x700 x1936))
(assert (= x832 (and (not x916) x333)))
(assert (= (x1666 x1309) (ite (= x1309 x1967) x1685 (x854 x1309))))
(assert (= (or (and x832 x334) (and x333 x916)) x1274))
(assert (= (or (and x37 x1058) (and x1396 x1810) (and x440 x978)) x523))
(assert (x747 x1367 x1576))
(assert (x700 x1276))
(assert (x303 x237 x1283))
(assert (x700 x646))
(assert (x700 x1248))
(assert (x700 x476))
(assert (x700 x1843))
(assert (x1209 x241))
(assert (x1209 x1439))
(assert (x700 x1018))
(assert (= (=> (and (= (x1068 160) x1173) (= x683 (not x767)) (not (ite x683 x683 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1173) true) (> x1173 170141183460469231731687303715884105727)))) (= (x1068 256) x1204) (= x1551 (x818 255 x1873)) (= x1931 (x1068 128)) (<= x1204 1208925819614629174706175) (= (mod (* (x1841 x1050) x381) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1623) (>= 1208925819614629174706175 x1931) (= (and (> x1173 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1173))) x767) (= 0 x163) (= (x818 340282366920938463463374607431768211455 x1173) x381) (= x172 (< 0 x1551))) (and (=> x172 x1157) (=> (and (= x1623 x1878) (not x172)) x420))) x662))
(assert (x700 x1273))
(assert (x700 x1392))
(assert (= (=> (and (= (ite x1977 1 0) x621) (= x1977 (not x1205)) (= x1943 x1405) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1508) true) (> 0 x1508)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1508)) x1205)) x1744) x1317))
(assert (= (ite (= x1967 x911) x1685 (x854 x911)) (x1666 x911)))
(assert (= 0 (x568 x1059)))
(assert (x450 x659 x413))
(assert (x700 x1530))
(assert (x700 x455))
(assert (x1209 16))
(assert (x700 x1425))
(assert (x1846 x1864 x1377))
(assert (x700 x549))
(assert (x700 x698))
(assert (x700 x164))
(assert (x700 x485))
(assert (= (x403 x1059) (ite (= x1059 x86) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1969 x1059))))
(assert (x450 x1525 x830))
(assert (x1209 x598))
(assert (x700 x1561))
(assert (x700 x1672))
(assert (x700 x1760))
(assert (x700 x1696))
(assert (x700 x663))
(assert (x894 x1194 x1733))
(assert (= (x308 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x752 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x700 x682))
(assert (x700 x971))
(assert (x1120 x1873 x822))
(assert (x700 x1676))
(assert (x1754 x859))
(assert (x700 x1497))
(assert (x303 x1355 x1012))
(assert (= (or x652 (and (not x359) x921)) x1604))
(assert (x39 x1587 x1079))
(assert (=> (>= 10000 x585) (= (x308 x585) (x752 x585))))
(assert (= x1557 (and x359 x921)))
(assert (x1602 x434))
(assert (x303 x113 x153))
(assert (= (x470 (x752 x5)) x5))
(assert (x700 x1180))
(assert (x700 x503))
(assert (x700 x1338))
(assert (x1209 x413))
(assert (x700 x320))
(assert (= (x308 1110625635) (x752 1110625635)))
(assert (x700 x488))
(assert (x700 x627))
(assert (x700 x784))
(assert (x1209 x15))
(assert (x700 x774))
(assert (x700 x1596))
(assert (= x1886 (x470 (x752 x1886))))
(assert (x1209 x1531))
(assert (x700 x742))
(assert (= (x470 (x308 2514000705)) 2514000705))
(assert (= (x470 (x752 x858)) x858))
(assert (x700 x9))
(assert (x700 x598))
(assert (x700 x1948))
(assert (x700 x895))
(assert (x700 x1833))
(assert (x700 x1853))
(assert (x1209 x1854))
(assert (x1209 x1367))
(assert (= x412 (=> (= x1819 (= x1832 274184521717934524641157099916833587233)) (and (=> (and (<= 0 x299) (= (x1356 224) x641) (not (= 2362581449 x907)) (= (x1356 128) x577) (> 1208925819614629174706176 x1927) (not (= 3257672857 x907)) x1819 (= x299 (x1635 x1506)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x299) (< x861 1208925819614629174706176) (= x1561 (x1356 160)) (= 4272920204 x907) (= x1146 (x1124 (x752 274184521717934524641157099916833587233))) (not (< x907 2362581449)) (= x1397 (x1356 192)) (= (x105 (x752 x1477) (x308 1) 0) x1506) (= x625 (x1356 256)) (= (x1356 128) x1560) (>= 1208925819614629174706175 x1927) (= x670 (x1356 224)) (<= 0 x695) (= (x1356 256) x1440) (not (= 4062139261 x907)) (= (x1356 160) x793) (= 4 x1594) (= x1324 1) (not (< x1594 4)) (= (x1607 (+ x1015 352)) x160) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1154) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x695) (>= 1208925819614629174706175 x861) (= (x1356 192) x1669) (<= 0 x1927) (= x1394 (x1607 (+ 288 x1015))) (<= 0 x861) (= x678 (x1607 (+ x1015 320))) (<= x467 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x707 160) (< 0 x1146) (= x1184 (x1607 (+ 384 x1015))) (= x1594 x524) (>= x467 0)) x1308) (=> (not x1819) x840)))))
(assert (x700 x226))
(assert (x700 x156))
(assert (= (x752 826074471) (x308 826074471)))
(assert (x700 x275))
(assert (x1209 x62))
(assert (x700 x1176))
(assert (x1266 x405))
(assert (x700 x167))
(assert (= 0 (x568 x443)))
(assert (x700 x799))
(assert (x1209 x791))
(assert (x700 x1244))
(assert (x700 x821))
(assert (x700 x973))
(assert (x700 x667))
(assert (x747 x690 x1211))
(assert (x700 x72))
(assert (x700 x1035))
(assert (x700 x1811))
(assert (= (x470 (x752 x923)) x923))
(assert (x700 x1049))
(assert (x700 x1437))
(assert (x700 x1673))
(assert (x700 x286))
(assert (x39 x205 x932))
(assert (x700 x233))
(assert (x700 x1975))
(assert (x700 x809))
(assert (x700 x1413))
(assert (x700 x581))
(assert (x700 x241))
(assert (x700 x632))
(assert (= x1708 (=> (and (= (or (> x1558 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1558 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x1558))) x674) (= x974 (ite x940 1 0)) (= (not x674) x940)) x546)))
(check-sat)
