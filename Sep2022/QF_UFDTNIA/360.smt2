(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x453 0)) (((x346 (x836 Int)) (x566 (x334 x453) (x349 Int)) (x224 (x246 x453) (x1301 x453) (x780 Int)))))
(declare-fun x155 () Int)
(declare-fun x1338 (x453) Int)
(declare-fun x510 () Int)
(declare-fun x1050 () Bool)
(declare-fun x766 () Int)
(declare-fun x885 () Int)
(declare-fun x181 () Int)
(declare-fun x681 () Int)
(declare-fun x977 () Int)
(declare-fun x245 () Int)
(declare-fun x689 () Int)
(declare-fun x30 () x453)
(declare-fun x778 () Int)
(declare-fun x223 () Bool)
(declare-fun x33 () Int)
(declare-fun x416 () Int)
(declare-fun x451 () Int)
(declare-fun x456 () Int)
(declare-fun x1071 () Bool)
(declare-fun x1253 () Int)
(declare-fun x1412 () Bool)
(declare-fun x1147 () Int)
(declare-fun x544 () Int)
(declare-fun x1289 () Int)
(declare-fun x1204 () Int)
(declare-fun x1334 (x453) Int)
(declare-fun x1415 () Int)
(declare-fun x1073 () Bool)
(declare-fun x1125 () Int)
(declare-fun x986 () Int)
(declare-fun x1362 () Int)
(declare-fun x958 () Bool)
(declare-fun x278 () Int)
(declare-fun x1127 () Int)
(declare-fun x79 () Int)
(declare-fun x125 () Int)
(declare-fun x1336 () Bool)
(declare-fun x1192 () Int)
(declare-fun x520 () Int)
(declare-fun x1081 () x453)
(declare-fun x882 () Int)
(declare-fun x358 () Int)
(declare-fun x1055 () Int)
(declare-fun x726 () Bool)
(declare-fun x420 () Int)
(declare-fun x638 () Int)
(declare-fun x310 () Int)
(declare-fun x383 () Int)
(declare-fun x990 () Int)
(declare-fun x727 () Int)
(declare-fun x303 () Bool)
(declare-fun x580 () Int)
(declare-fun x611 () Bool)
(declare-fun x843 () Int)
(declare-fun x87 () Bool)
(declare-fun x1141 () Int)
(declare-fun x338 () Int)
(declare-fun x1397 () Int)
(declare-fun x1178 () Int)
(declare-fun x1049 () Int)
(declare-fun x615 () Bool)
(declare-fun x1347 () Int)
(declare-fun x688 () Bool)
(declare-fun x95 () Int)
(declare-fun x654 () Int)
(declare-fun x1022 () Int)
(declare-fun x728 () Int)
(declare-fun x1036 () Int)
(declare-fun x1095 () Bool)
(declare-fun x192 () Bool)
(declare-fun x251 () Int)
(declare-fun x479 () Int)
(declare-fun x514 () Bool)
(declare-fun x732 () Int)
(declare-fun x753 () Int)
(declare-fun x468 () Int)
(declare-fun x542 () Int)
(declare-fun x214 () Bool)
(declare-fun x581 () Int)
(declare-fun x411 () Bool)
(declare-fun x112 (Int) Int)
(declare-fun x599 () Int)
(declare-fun x149 () Int)
(declare-fun x231 () Int)
(declare-fun x132 () Int)
(declare-fun x969 () Bool)
(declare-fun x323 () Bool)
(declare-fun x165 () Int)
(declare-fun x1144 () Bool)
(declare-fun x674 () Int)
(declare-fun x987 () Int)
(declare-fun x1340 (Int) Int)
(declare-fun x442 () Int)
(declare-fun x765 () Int)
(declare-fun x719 () Bool)
(declare-fun x1200 () Int)
(declare-fun x65 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x259 (Int) Int)
(declare-fun x814 () Int)
(declare-fun x1404 () Int)
(declare-fun x311 () Int)
(declare-fun x474 () Int)
(declare-fun x392 () Int)
(declare-fun x914 () Bool)
(declare-fun x906 () Bool)
(declare-fun x1242 () Int)
(declare-fun x1118 () Bool)
(declare-fun x500 () Int)
(declare-fun x1381 () Int)
(declare-fun x1032 () Int)
(declare-fun x9 () Int)
(declare-fun x920 (x453) Int)
(declare-fun x497 () Bool)
(declare-fun x292 (x453) Int)
(declare-fun x207 () Int)
(declare-fun x275 () Int)
(declare-fun x83 () Bool)
(declare-fun x230 () Int)
(declare-fun x1411 () Int)
(declare-fun x1052 () Int)
(declare-fun x54 () Int)
(declare-fun x1135 () Int)
(declare-fun x585 () x453)
(declare-fun x1374 () Int)
(declare-fun x84 () Int)
(declare-fun x1195 () Bool)
(declare-fun x895 () Int)
(declare-fun x1329 () Int)
(declare-fun x551 () Int)
(declare-fun x1318 () Int)
(declare-fun x870 (Int) Int)
(declare-fun x345 () Int)
(declare-fun x1149 () Bool)
(declare-fun x322 () Int)
(declare-fun x900 () Int)
(declare-fun x385 () Bool)
(declare-fun x1136 () Int)
(declare-fun x142 () Int)
(declare-fun x770 () Int)
(declare-fun x1154 () Bool)
(declare-fun x71 () Int)
(declare-fun x1004 () Int)
(declare-fun x1277 () Int)
(declare-fun x505 () Int)
(declare-fun x740 () Bool)
(declare-fun x1376 () Int)
(declare-fun x826 () Bool)
(declare-fun x962 () Bool)
(declare-fun x617 () Int)
(declare-fun x1139 () Int)
(declare-fun x1107 () Int)
(declare-fun x1175 () Int)
(declare-fun x642 () Int)
(declare-fun x391 () x453)
(declare-fun x308 () Bool)
(declare-fun x365 () Int)
(declare-fun x50 () Int)
(declare-fun x374 () Int)
(declare-fun x541 () Int)
(declare-fun x100 () Int)
(declare-fun x253 () Int)
(declare-fun x348 () Int)
(declare-fun x687 () Int)
(declare-fun x736 () Int)
(declare-fun x1061 () Bool)
(declare-fun x37 () x453)
(declare-fun x200 () Int)
(declare-fun x1372 () Int)
(declare-fun x684 () Int)
(declare-fun x560 () Bool)
(declare-fun x918 () x453)
(declare-fun x351 () Int)
(declare-fun x1109 () Int)
(declare-fun x874 () Int)
(declare-fun x501 () Int)
(declare-fun x430 () Int)
(declare-fun x747 (Int) Int)
(declare-fun x1028 () Int)
(declare-fun x838 () Int)
(declare-fun x1098 () Bool)
(declare-fun x1197 () Bool)
(declare-fun x320 () Int)
(declare-fun x101 () Bool)
(declare-fun x1272 () Int)
(declare-fun x928 () Int)
(declare-fun x328 () x453)
(declare-fun x921 () Int)
(declare-fun x680 () Bool)
(declare-fun x713 () Int)
(declare-fun x945 () Int)
(declare-fun x1353 () Int)
(declare-fun x1351 () Int)
(declare-fun x822 () Int)
(declare-fun x1367 () Int)
(declare-fun x929 () Int)
(declare-fun x808 () Int)
(declare-fun x1167 (Int) Int)
(declare-fun x750 () Int)
(declare-fun x1379 () Int)
(declare-fun x1366 () x453)
(declare-fun x1082 () Int)
(declare-fun x1164 () Bool)
(declare-fun x1219 () Int)
(declare-fun x1402 () Int)
(declare-fun x527 () Bool)
(declare-fun x1267 () Int)
(declare-fun x1228 () Int)
(declare-fun x404 (Int) Int)
(declare-fun x685 () Int)
(declare-fun x764 () Int)
(declare-fun x1322 (x453) Int)
(declare-fun x1258 () Int)
(declare-fun x1159 (x453) Int)
(declare-fun x608 () Bool)
(declare-fun x472 () Bool)
(declare-fun x1062 (x453) Int)
(declare-fun x173 () Int)
(declare-fun x984 () Int)
(declare-fun x1122 () Bool)
(declare-fun x408 () Bool)
(declare-fun x367 () Int)
(declare-fun x63 (Int) Int)
(declare-fun x1266 () Int)
(declare-fun x409 () Int)
(declare-fun x794 () Int)
(declare-fun x238 () Int)
(declare-fun x854 () Int)
(declare-fun x148 () Int)
(declare-fun x683 () Bool)
(declare-fun x1045 () Int)
(declare-fun x201 () Bool)
(declare-fun x61 () Int)
(declare-fun x1137 () Int)
(declare-fun x1290 () Int)
(declare-fun x1271 () Int)
(declare-fun x89 () Int)
(declare-fun x476 () Int)
(declare-fun x360 () Int)
(declare-fun x1303 () Int)
(declare-fun x502 (Int) Int)
(declare-fun x1302 (Int) Int)
(declare-fun x817 () Bool)
(declare-fun x1138 () x453)
(declare-fun x462 () x453)
(declare-fun x1309 () Int)
(declare-fun x141 () x453)
(declare-fun x743 () Int)
(declare-fun x363 () Int)
(declare-fun x161 () Int)
(declare-fun x36 () Int)
(declare-fun x644 () Int)
(declare-fun x147 () Bool)
(declare-fun x80 () Int)
(declare-fun x1155 () Int)
(declare-fun x455 () Int)
(declare-fun x1220 () Int)
(declare-fun x1011 () Int)
(declare-fun x45 () Bool)
(declare-fun x1063 () Int)
(declare-fun x1417 () Int)
(declare-fun x988 () Int)
(declare-fun x243 () Int)
(declare-fun x1212 () x453)
(declare-fun x891 () Int)
(declare-fun x1043 () Int)
(declare-fun x1317 () Int)
(declare-fun x1121 () Bool)
(declare-fun x1327 () Int)
(declare-fun x274 () Bool)
(declare-fun x120 () Int)
(declare-fun x333 () Int)
(declare-fun x1364 () Int)
(declare-fun x673 () Int)
(declare-fun x1089 () Bool)
(declare-fun x1038 () Int)
(declare-fun x471 () Int)
(declare-fun x547 () x453)
(declare-fun x169 () Int)
(declare-fun x1214 () Int)
(declare-fun x666 () Int)
(declare-fun x717 () Int)
(declare-fun x1029 () Bool)
(declare-fun x873 () Bool)
(declare-fun x96 () Int)
(declare-fun x1273 () Bool)
(declare-fun x64 () Int)
(declare-fun x13 () Int)
(declare-fun x878 () Bool)
(declare-fun x553 () Bool)
(declare-fun x1281 () Int)
(declare-fun x772 () Bool)
(declare-fun x1284 () Int)
(declare-fun x154 () Int)
(declare-fun x960 () Bool)
(declare-fun x971 () Int)
(declare-fun x1086 () Int)
(declare-fun x613 () Int)
(declare-fun x640 () Int)
(declare-fun x504 () Int)
(declare-fun x1354 () Int)
(declare-fun x1246 () Int)
(declare-fun x940 () Int)
(declare-fun x1239 () Int)
(declare-fun x236 () Int)
(declare-fun x733 () Int)
(declare-fun x507 (x453) Int)
(declare-fun x136 () Int)
(declare-fun x1348 () Int)
(declare-fun x102 (Int) Int)
(declare-fun x950 () Bool)
(declare-fun x597 () Int)
(declare-fun x995 () Bool)
(declare-fun x1097 () Int)
(declare-fun x937 () Int)
(declare-fun x373 () Int)
(declare-fun x1352 () Int)
(declare-fun x858 () Bool)
(declare-fun x848 () x453)
(declare-fun x301 () Int)
(declare-fun x484 () Int)
(declare-fun x177 () Bool)
(declare-fun x86 () Bool)
(declare-fun x1286 () Int)
(declare-fun x1018 () Bool)
(declare-fun x1078 () Int)
(declare-fun x339 () Int)
(declare-fun x386 () Bool)
(declare-fun x401 () Int)
(declare-fun x967 () Bool)
(declare-fun x69 () Int)
(declare-fun x16 () Int)
(declare-fun x78 () Int)
(declare-fun x340 () Int)
(declare-fun x647 () Int)
(declare-fun x44 () Int)
(declare-fun x5 () Int)
(declare-fun x1330 () Int)
(declare-fun x1424 () Int)
(declare-fun x1024 () Int)
(declare-fun x973 () Int)
(declare-fun x1423 (Int) Int)
(declare-fun x10 () Bool)
(declare-fun x590 () Int)
(declare-fun x850 () Int)
(declare-fun x353 () Int)
(declare-fun x859 () Bool)
(declare-fun x336 () Bool)
(declare-fun x847 () Int)
(declare-fun x506 () Int)
(declare-fun x853 () Int)
(declare-fun x1392 () Int)
(declare-fun x2 () Int)
(declare-fun x1165 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x27 () Int)
(declare-fun x523 () Int)
(declare-fun x1168 () Int)
(declare-fun x1270 (Int) Int)
(declare-fun x1416 () Int)
(declare-fun x820 () Int)
(declare-fun x933 () Int)
(declare-fun x787 (Int) Int)
(declare-fun x441 () Int)
(declare-fun x1249 () Int)
(declare-fun x1227 () Int)
(declare-fun x910 () Bool)
(declare-fun x698 () Int)
(declare-fun x1179 () x453)
(declare-fun x400 () Int)
(declare-fun x886 () Int)
(declare-fun x168 () x453)
(declare-fun x269 () Int)
(declare-fun x119 () Int)
(declare-fun x894 () x453)
(declare-fun x1396 () Bool)
(declare-fun x966 () Int)
(declare-fun x851 () Int)
(declare-fun x41 (Int) Int)
(declare-fun x975 (Int) Int)
(declare-fun x996 () Int)
(declare-fun x621 () Int)
(declare-fun x1358 () Int)
(declare-fun x1262 () Bool)
(declare-fun x899 () Int)
(declare-fun x124 () Int)
(declare-fun x596 () Int)
(declare-fun x1199 () Int)
(declare-fun x1380 () Int)
(declare-fun x1292 () Int)
(declare-fun x1012 () x453)
(declare-fun x1240 (x453) Int)
(declare-fun x943 () Int)
(declare-fun x934 () Int)
(declare-fun x82 () Int)
(declare-fun x1229 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x17 () Bool)
(declare-fun x936 () Bool)
(declare-fun x184 () Int)
(declare-fun x865 () Int)
(declare-fun x707 () Int)
(declare-fun x752 () Int)
(declare-fun x534 () x453)
(declare-fun x255 () Bool)
(declare-fun x405 () Int)
(declare-fun x1332 () Int)
(declare-fun x1079 () Int)
(declare-fun x1066 () x453)
(declare-fun x1151 () Int)
(declare-fun x1091 () Int)
(declare-fun x839 () Int)
(declare-fun x511 () Int)
(declare-fun x710 (Int) Int)
(declare-fun x695 () Bool)
(declare-fun x329 () Int)
(declare-fun x1293 () Int)
(declare-fun x489 () Int)
(declare-fun x893 () Int)
(declare-fun x1393 () Int)
(declare-fun x268 () Int)
(declare-fun x735 () Int)
(declare-fun x835 () x453)
(declare-fun x209 () Bool)
(declare-fun x1074 () Int)
(declare-fun x948 () Int)
(declare-fun x1115 () Bool)
(declare-fun x1027 () Int)
(declare-fun x744 () Int)
(declare-fun x460 () Int)
(declare-fun x1421 () Int)
(declare-fun x15 () Int)
(declare-fun x140 () Int)
(declare-fun x760 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x1368 (Int) Int)
(declare-fun x261 () Bool)
(declare-fun x641 () Int)
(declare-fun x1143 () Int)
(declare-fun x1213 () Int)
(declare-fun x1400 () Int)
(declare-fun x1248 () Bool)
(declare-fun x625 () Int)
(declare-fun x1006 () Int)
(declare-fun x92 () Int)
(declare-fun x668 () Bool)
(declare-fun x978 () Int)
(declare-fun x1189 () Bool)
(declare-fun x299 () Int)
(declare-fun x35 () Int)
(declare-fun x575 () x453)
(declare-fun x185 () Int)
(declare-fun x653 () Int)
(declare-fun x104 (Int) Int)
(declare-fun x1312 (Int) Int)
(declare-fun x1161 () Bool)
(declare-fun x1331 () Int)
(declare-fun x1102 () Bool)
(declare-fun x1208 () Int)
(declare-fun x1391 () Int)
(declare-fun x1054 () Int)
(declare-fun x1344 () Bool)
(declare-fun x1085 () Int)
(declare-fun x1389 () Int)
(declare-fun x341 () Int)
(declare-fun x1269 () Int)
(declare-fun x701 () Int)
(declare-fun x366 () Int)
(declare-fun x288 () Bool)
(declare-fun x559 () Int)
(declare-fun x272 () Int)
(declare-fun x1384 () Int)
(declare-fun x700 () x453)
(declare-fun x293 () Int)
(declare-fun x723 () Int)
(declare-fun x332 () Int)
(declare-fun x825 () Int)
(declare-fun x731 () Int)
(declare-fun x946 () Int)
(declare-fun x953 () x453)
(declare-fun x309 () Int)
(declare-fun x459 (Int) Int)
(declare-fun x1013 () Int)
(declare-fun x1182 () Int)
(declare-fun x1319 () Int)
(declare-fun x1020 () Int)
(declare-fun x186 () Int)
(declare-fun x437 () Int)
(declare-fun x1016 () Int)
(declare-fun x1053 () Bool)
(declare-fun x1291 () Int)
(declare-fun x116 () Bool)
(declare-fun x376 () Int)
(declare-fun x290 () Int)
(declare-fun x1287 () Int)
(declare-fun x704 () Int)
(declare-fun x216 () x453)
(declare-fun x626 () Int)
(declare-fun x1311 (Int) Int)
(declare-fun x1187 () x453)
(declare-fun x492 () Int)
(declare-fun x1007 () Int)
(declare-fun x133 () Int)
(declare-fun x832 () Bool)
(declare-fun x994 () x453)
(declare-fun x66 () Int)
(declare-fun x1299 () Int)
(declare-fun x22 (Int) Int)
(declare-fun x1305 () Int)
(declare-fun x539 () x453)
(declare-fun x998 () Int)
(declare-fun x257 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x1234 () Int)
(declare-fun x212 () Int)
(declare-fun x273 () Int)
(declare-fun x628 () Int)
(declare-fun x227 () Int)
(declare-fun x923 () Int)
(declare-fun x264 () Int)
(declare-fun x314 () Int)
(declare-fun x605 () Int)
(declare-fun x390 () Int)
(declare-fun x1070 () Int)
(declare-fun x157 () Int)
(declare-fun x775 () Int)
(declare-fun x513 () Bool)
(declare-fun x215 () Int)
(declare-fun x32 () x453)
(declare-fun x811 () x453)
(declare-fun x630 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x1008 () Int)
(declare-fun x194 (Int) Int)
(declare-fun x1426 () Int)
(declare-fun x578 () Int)
(declare-fun x686 () Int)
(declare-fun x60 () x453)
(declare-fun x941 (Int) x453)
(declare-fun x788 () Int)
(declare-fun x965 () Int)
(declare-fun x789 () Int)
(declare-fun x1131 () x453)
(declare-fun x648 (Int Int) Int)
(declare-fun x1157 () x453)
(declare-fun x379 () x453)
(declare-fun x1326 () Int)
(declare-fun x1274 () Int)
(declare-fun x389 () Int)
(declare-fun x871 () x453)
(declare-fun x1152 () Int)
(declare-fun x75 () Int)
(declare-fun x767 () Int)
(declare-fun x631 () Int)
(declare-fun x643 () Int)
(declare-fun x1060 () Int)
(declare-fun x42 () Int)
(declare-fun x795 () Int)
(declare-fun x12 () Bool)
(declare-fun x1072 () x453)
(declare-fun x1099 () x453)
(declare-fun x72 () Bool)
(declare-fun x127 () Int)
(declare-fun x208 () Int)
(declare-fun x703 () Bool)
(declare-fun x748 () Int)
(declare-fun x445 (Int) Int)
(declare-fun x1298 () Int)
(declare-fun x335 () Int)
(declare-fun x330 () Int)
(declare-fun x711 () Int)
(declare-fun x1000 (Int) Int)
(declare-fun x438 () Int)
(declare-fun x1201 (Int) Int)
(declare-fun x916 () Int)
(declare-fun x635 () Int)
(declare-fun x846 () Int)
(declare-fun x218 () x453)
(declare-fun x1044 () Int)
(declare-fun x672 () Int)
(declare-fun x327 () Int)
(declare-fun x217 () x453)
(declare-fun x819 () Bool)
(declare-fun x368 () Int)
(declare-fun x729 () Int)
(declare-fun x797 () Bool)
(declare-fun x997 () Int)
(declare-fun x1084 () Int)
(declare-fun x884 () Int)
(declare-fun x352 (Int) Int)
(declare-fun x888 () Int)
(declare-fun x841 () Int)
(declare-fun x34 () Bool)
(declare-fun x1140 () Int)
(declare-fun x1328 () Int)
(declare-fun x1104 () Int)
(declare-fun x494 () Int)
(declare-fun x1076 () Int)
(declare-fun x1276 () Bool)
(declare-fun x428 () Bool)
(declare-fun x556 () Int)
(declare-fun x31 () Int)
(declare-fun x3 () Int)
(declare-fun x824 () Bool)
(declare-fun x8 () Int)
(declare-fun x240 () Int)
(declare-fun x889 () Int)
(declare-fun x985 () Int)
(declare-fun x242 () Int)
(declare-fun x1418 (Int) Int)
(declare-fun x956 () Int)
(declare-fun x718 () Int)
(declare-fun x24 () Int)
(declare-fun x1310 (x453) Int)
(declare-fun x862 (Int) Int)
(declare-fun x313 () x453)
(declare-fun x1067 () Bool)
(declare-fun x1405 () Int)
(declare-fun x40 () Bool)
(declare-fun x1268 (Int) Int)
(declare-fun x1260 () x453)
(declare-fun x834 () Int)
(declare-fun x454 () Int)
(declare-fun x1238 () Bool)
(declare-fun x1132 () Int)
(declare-fun x1315 () Int)
(declare-fun x172 () Int)
(declare-fun x602 () Int)
(declare-fun x81 () Int)
(declare-fun x55 () Int)
(declare-fun x869 () Int)
(declare-fun x908 () Int)
(declare-fun x469 () Int)
(declare-fun x1065 () Int)
(declare-fun x62 () Int)
(declare-fun x266 () Int)
(declare-fun x989 (Int) Int)
(declare-fun x361 () Int)
(declare-fun x877 () Bool)
(declare-fun x413 () Bool)
(declare-fun x968 () Int)
(declare-fun x1373 () Bool)
(declare-fun x1403 () Int)
(declare-fun x178 () Int)
(declare-fun x151 () Int)
(declare-fun x74 () Int)
(declare-fun x972 () Int)
(declare-fun x902 () Int)
(declare-fun x942 () x453)
(declare-fun x1106 () Bool)
(declare-fun x452 () Int)
(declare-fun x229 () Bool)
(declare-fun x974 () Int)
(declare-fun x108 () Bool)
(declare-fun x879 () Bool)
(declare-fun x432 () Int)
(declare-fun x262 () Int)
(declare-fun x796 () Int)
(declare-fun x25 (Int) Int)
(declare-fun x210 () Int)
(declare-fun x759 () Int)
(declare-fun x228 () Bool)
(declare-fun x671 () Bool)
(declare-fun x175 () Int)
(declare-fun x123 () x453)
(declare-fun x601 () Int)
(declare-fun x1130 () Int)
(declare-fun x589 () Int)
(declare-fun x1185 () x453)
(declare-fun x924 () Bool)
(declare-fun x1346 () Int)
(declare-fun x1026 () Int)
(declare-fun x305 (Int) Int)
(declare-fun x568 () Int)
(declare-fun x137 () Int)
(declare-fun x724 () Bool)
(declare-fun x488 () Int)
(declare-fun x922 () Int)
(declare-fun x1222 () Int)
(declare-fun x593 (Int) Int)
(declare-fun x1153 () Int)
(declare-fun x429 () Bool)
(declare-fun x397 () Bool)
(declare-fun x307 () Int)
(declare-fun x800 () Bool)
(declare-fun x447 () Int)
(declare-fun x1186 () Bool)
(declare-fun x325 () Bool)
(declare-fun x490 () Int)
(declare-fun x533 (Int) Int)
(declare-fun x907 () Int)
(declare-fun x1051 () Bool)
(declare-fun x457 (x453) Int)
(declare-fun x85 () Int)
(declare-fun x1184 () Bool)
(declare-fun x220 () Int)
(declare-fun x1035 () Int)
(declare-fun x586 () Int)
(declare-fun x138 () Bool)
(declare-fun x664 () Int)
(declare-fun x356 () Bool)
(declare-fun x774 () Int)
(declare-fun x395 () Int)
(declare-fun x842 () Int)
(declare-fun x1320 () Int)
(declare-fun x440 () Bool)
(declare-fun x1399 () Int)
(declare-fun x1377 () Bool)
(declare-fun x845 () Int)
(declare-fun x903 () Int)
(declare-fun x388 () Bool)
(declare-fun x1285 () Int)
(declare-fun x1226 () Int)
(declare-fun x1378 () Int)
(declare-fun x1010 () Int)
(declare-fun x905 () Int)
(declare-fun x887 () Int)
(declare-fun x594 () Int)
(declare-fun x574 () Int)
(declare-fun x709 () x453)
(declare-fun x798 () Bool)
(declare-fun x981 (Int) Int)
(declare-fun x712 () Int)
(declare-fun x776 () Bool)
(declare-fun x1094 () Int)
(declare-fun x949 () Int)
(declare-fun x51 () Int)
(declare-fun x166 () Int)
(declare-fun x1282 () Int)
(declare-fun x53 () Bool)
(declare-fun x612 () Int)
(declare-fun x784 () Int)
(declare-fun x976 () Int)
(declare-fun x221 () Int)
(declare-fun x725 () Int)
(declare-fun x342 () Int)
(declare-fun x362 (Int) Int)
(declare-fun x1198 () Int)
(declare-fun x128 () x453)
(declare-fun x371 () x453)
(declare-fun x312 () Int)
(declare-fun x663 () Int)
(declare-fun x1209 () Bool)
(declare-fun x830 () Int)
(declare-fun x1233 () Int)
(declare-fun x1275 () Int)
(declare-fun x486 () Int)
(declare-fun x121 () Int)
(declare-fun x68 () Bool)
(declare-fun x204 () Int)
(declare-fun x526 () Bool)
(declare-fun x398 () Bool)
(declare-fun x1279 () Int)
(declare-fun x823 () Int)
(declare-fun x705 () Bool)
(declare-fun x555 () Bool)
(declare-fun x1386 () Int)
(declare-fun x1002 () Int)
(declare-fun x624 () Bool)
(declare-fun x206 () Int)
(declare-fun x1015 () Int)
(declare-fun x1383 () Int)
(declare-fun x222 () Int)
(declare-fun x109 (Int) Int)
(declare-fun x1146 () Bool)
(declare-fun x377 () Int)
(declare-fun x297 () x453)
(declare-fun x18 () Int)
(declare-fun x1112 () Int)
(declare-fun x1235 () Bool)
(declare-fun x919 () Bool)
(declare-fun x1218 () x453)
(declare-fun x499 () Int)
(declare-fun x134 () Int)
(declare-fun x662 () Int)
(declare-fun x1033 () Bool)
(declare-fun x163 () Bool)
(declare-fun x876 () Int)
(declare-fun x809 () Int)
(declare-fun x1307 () Int)
(declare-fun x1117 () Int)
(declare-fun x540 () Bool)
(declare-fun x603 () Bool)
(declare-fun x129 () Bool)
(declare-fun x1080 () x453)
(declare-fun x321 () Int)
(declare-fun x720 (x453) Int)
(declare-fun x769 () Int)
(declare-fun x1280 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x1221 () Int)
(declare-fun x1333 () x453)
(declare-fun x324 () Bool)
(declare-fun x205 () Int)
(declare-fun x298 () Int)
(declare-fun x573 () Int)
(declare-fun x1363 () Bool)
(declare-fun x802 () Int)
(declare-fun x258 () Int)
(declare-fun x636 () x453)
(declare-fun x1339 () Bool)
(declare-fun x1408 () Int)
(declare-fun x1069 () Bool)
(declare-fun x304 () Bool)
(declare-fun x252 () Int)
(declare-fun x396 () Int)
(declare-fun x1321 () Int)
(declare-fun x283 () Int)
(declare-fun x300 () Int)
(declare-fun x26 () Int)
(declare-fun x316 () Int)
(declare-fun x1375 () Int)
(declare-fun x1288 (Int) Int)
(declare-fun x1031 () Bool)
(declare-fun x768 () Int)
(declare-fun x126 () Bool)
(declare-fun x91 () Int)
(declare-fun x478 () Bool)
(declare-fun x754 () Bool)
(declare-fun x531 () Int)
(declare-fun x1114 () Int)
(declare-fun x103 () Int)
(declare-fun x139 () Int)
(declare-fun x1295 () Int)
(declare-fun x1223 () Int)
(declare-fun x399 () Int)
(declare-fun x1395 () Int)
(declare-fun x571 () x453)
(declare-fun x508 () Int)
(declare-fun x1009 () Bool)
(declare-fun x90 () Int)
(declare-fun x1350 () x453)
(declare-fun x1205 () x453)
(declare-fun x306 (Int) Int)
(declare-fun x645 () Bool)
(declare-fun x423 () Int)
(declare-fun x783 () Int)
(declare-fun x730 () x453)
(declare-fun x792 () x453)
(declare-fun x917 () Int)
(declare-fun x1193 () Bool)
(declare-fun x247 () Int)
(declare-fun x67 () Int)
(declare-fun x477 () Bool)
(declare-fun x1296 (Int) Int)
(declare-fun x46 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x182 () x453)
(declare-fun x1264 () Int)
(declare-fun x737 () Int)
(declare-fun x519 () Bool)
(declare-fun x522 () Int)
(declare-fun x805 () Int)
(declare-fun x1357 () Int)
(declare-fun x983 () Bool)
(declare-fun x829 () Int)
(declare-fun x256 () Int)
(declare-fun x20 () Int)
(declare-fun x741 () Int)
(declare-fun x930 () Int)
(declare-fun x449 () Int)
(declare-fun x565 () x453)
(declare-fun x606 () Int)
(declare-fun x1313 () Bool)
(declare-fun x1414 () x453)
(declare-fun x801 () Bool)
(declare-fun x1425 () Int)
(declare-fun x446 () Int)
(declare-fun x979 () Int)
(declare-fun x347 (Int) Int)
(declare-fun x1244 (Int) Int)
(declare-fun x317 () Bool)
(declare-fun x619 () Int)
(declare-fun x250 () Int)
(declare-fun x657 () Int)
(declare-fun x286 () Int)
(declare-fun x821 () Int)
(declare-fun x637 () Int)
(declare-fun x1176 () Int)
(declare-fun x43 () Bool)
(declare-fun x162 () Int)
(declare-fun x785 (x453) Int)
(declare-fun x11 () Int)
(declare-fun x470 () Int)
(declare-fun x1294 () Int)
(declare-fun x466 () Int)
(declare-fun x426 () x453)
(declare-fun x1237 () Int)
(declare-fun x777 () Int)
(declare-fun x524 () Bool)
(declare-fun x443 (Int) Int)
(declare-fun x226 () Int)
(declare-fun x58 () Int)
(declare-fun x1083 () Int)
(declare-fun x1278 () Int)
(declare-fun x716 () Int)
(declare-fun x861 () Int)
(declare-fun x857 () Int)
(declare-fun x982 () Int)
(declare-fun x28 () Int)
(declare-fun x415 () Bool)
(declare-fun x234 () Int)
(declare-fun x97 () Bool)
(declare-fun x1308 () Bool)
(declare-fun x699 () Int)
(declare-fun x1041 () Int)
(declare-fun x970 () Int)
(declare-fun x1191 () Int)
(declare-fun x955 () x453)
(declare-fun x496 () Int)
(declare-fun x450 () Bool)
(declare-fun x384 () Int)
(declare-fun x174 () Int)
(declare-fun x331 () Int)
(declare-fun x577 () Int)
(declare-fun x607 () Int)
(declare-fun x19 () Int)
(declare-fun x1064 () Int)
(declare-fun x343 () Int)
(declare-fun x543 () Int)
(declare-fun x146 (Int) Int)
(declare-fun x463 () Int)
(declare-fun x1100 (Int) Int)
(declare-fun x1077 () Int)
(declare-fun x1283 () x453)
(declare-fun x816 () Int)
(declare-fun x144 () Int)
(declare-fun x749 () Int)
(declare-fun x1037 () Int)
(declare-fun x702 () Bool)
(declare-fun x375 () Bool)
(declare-fun x980 () Int)
(declare-fun x1203 () Int)
(declare-fun x159 () Bool)
(declare-fun x649 () Bool)
(declare-fun x467 () Int)
(declare-fun x1174 () Int)
(declare-fun x359 () Bool)
(declare-fun x563 () Int)
(declare-fun x364 () Int)
(declare-fun x734 () Bool)
(declare-fun x483 () Int)
(declare-fun x47 () Int)
(declare-fun x39 () Bool)
(declare-fun x1345 () Int)
(declare-fun x167 () x453)
(declare-fun x448 () Int)
(declare-fun x1042 () Int)
(declare-fun x1005 () Bool)
(declare-fun x49 () Int)
(declare-fun x52 () Int)
(declare-fun x1224 () Bool)
(declare-fun x812 () Int)
(declare-fun x1261 () Int)
(declare-fun x669 () Int)
(declare-fun x634 () Bool)
(declare-fun x746 () Int)
(declare-fun x4 () Int)
(declare-fun x538 () Bool)
(declare-fun x211 () Bool)
(declare-fun x875 () Int)
(declare-fun x939 () Int)
(declare-fun x1250 () Int)
(declare-fun x518 () x453)
(declare-fun x160 () Int)
(declare-fun x692 (x453) Int)
(declare-fun x677 (x453) Int)
(declare-fun x963 () Bool)
(declare-fun x270 () Int)
(declare-fun x1120 () Bool)
(declare-fun x570 () Int)
(declare-fun x1255 () Int)
(declare-fun x609 () Bool)
(declare-fun x1401 () Int)
(declare-fun x439 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x756 () Int)
(declare-fun x1129 () Bool)
(declare-fun x1169 () Int)
(declare-fun x187 () Int)
(declare-fun x23 () Bool)
(declare-fun x1409 () Int)
(declare-fun x708 () x453)
(declare-fun x793 () Int)
(declare-fun x742 () Int)
(declare-fun x1194 () Int)
(declare-fun x833 (x453) Int)
(declare-fun x1093 () Int)
(declare-fun x591 (x453) Int)
(declare-fun x715 () Int)
(declare-fun x646 () Int)
(declare-fun x1103 () Int)
(declare-fun x197 () Int)
(declare-fun x276 (Int) Int)
(declare-fun x773 () Int)
(declare-fun x1105 () Int)
(declare-fun x781 () Int)
(declare-fun x219 () x453)
(declare-fun x1019 () Int)
(declare-fun x947 () Int)
(declare-fun x935 () Int)
(declare-fun x964 () Bool)
(declare-fun x1387 () Int)
(declare-fun x804 () Int)
(declare-fun x652 () Int)
(declare-fun x145 () Bool)
(declare-fun x675 () x453)
(declare-fun x254 () Int)
(declare-fun x1183 () Int)
(declare-fun x546 () Int)
(declare-fun x1306 () Int)
(declare-fun x48 () Bool)
(declare-fun x1092 () Int)
(declare-fun x434 () Int)
(declare-fun x1030 () Int)
(declare-fun x291 () Int)
(declare-fun x38 (x453) Int)
(declare-fun x498 () Int)
(declare-fun x203 (Int) Int)
(declare-fun x225 () Int)
(declare-fun x931 () Int)
(declare-fun x458 () Bool)
(declare-fun x1162 () Int)
(declare-fun x195 () Bool)
(declare-fun x190 () Int)
(declare-fun x113 () Int)
(declare-fun x380 () Bool)
(declare-fun x296 () Int)
(declare-fun x650 () Int)
(declare-fun x1231 () x453)
(declare-fun x915 () Bool)
(declare-fun x582 () x453)
(declare-fun x1110 () Int)
(declare-fun x1196 () Bool)
(declare-fun x1356 () x453)
(declare-fun x898 () Int)
(declare-fun x1048 () Int)
(declare-fun x690 () Int)
(declare-fun x114 () Int)
(declare-fun x118 (Int) Int)
(declare-fun x277 () Int)
(declare-fun x866 (Int) Int)
(declare-fun x525 () Int)
(declare-fun x281 () Int)
(declare-fun x461 () Bool)
(declare-fun x515 () Int)
(declare-fun x1001 () Int)
(declare-fun x1170 () Int)
(declare-fun x421 () Int)
(declare-fun x1039 () Int)
(declare-fun x1142 () Int)
(declare-fun x1247 () Int)
(declare-fun x189 () Int)
(declare-fun x739 () Int)
(declare-fun x465 () Int)
(declare-fun x722 () Int)
(declare-fun x1355 () Bool)
(declare-fun x1171 () Bool)
(declare-fun x431 () Int)
(declare-fun x1265 () Int)
(declare-fun x545 () Int)
(declare-fun x153 () Int)
(declare-fun x714 () Int)
(declare-fun x98 () Int)
(declare-fun x639 () Bool)
(declare-fun x521 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x694 () Int)
(declare-fun x403 () Bool)
(declare-fun x952 () Int)
(declare-fun x706 () Bool)
(declare-fun x911 () Int)
(declare-fun x233 () Int)
(declare-fun x1108 () Int)
(declare-fun x860 () Int)
(declare-fun x1123 () Bool)
(declare-fun x1087 () Int)
(declare-fun x954 () x453)
(declare-fun x604 () Int)
(declare-fun x1365 () Int)
(declare-fun x196 () Int)
(declare-fun x957 () Int)
(declare-fun x548 () Int)
(declare-fun x691 () Int)
(declare-fun x1133 () Int)
(declare-fun x436 () Int)
(declare-fun x56 () Int)
(declare-fun x394 (Int Int) Int)
(declare-fun x170 () Int)
(declare-fun x1090 () Bool)
(declare-fun x651 () Int)
(declare-fun x537 (Int) Int)
(declare-fun x529 () Bool)
(declare-fun x670 () Int)
(declare-fun x926 () Bool)
(declare-fun x435 () Bool)
(declare-fun x248 () Bool)
(declare-fun x658 () Int)
(declare-fun x491 () Bool)
(declare-fun x1369 () Int)
(declare-fun x1256 () Bool)
(declare-fun x1236 () Int)
(declare-fun x999 () Bool)
(declare-fun x807 () Int)
(declare-fun x1058 () Int)
(declare-fun x176 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x567 () Bool)
(declare-fun x280 () Int)
(declare-fun x868 (x453) Int)
(declare-fun x475 () x453)
(declare-fun x831 () Int)
(declare-fun x1398 () Int)
(declare-fun x1188 () Int)
(declare-fun x237 () Int)
(declare-fun x93 (Int) Int)
(declare-fun x271 (x453) Int)
(declare-fun x678 () Int)
(declare-fun x951 () Int)
(declare-fun x771 () x453)
(declare-fun x901 () Int)
(declare-fun x213 () Int)
(declare-fun x354 () Int)
(declare-fun x1017 () Int)
(declare-fun x241 () Int)
(declare-fun x530 () Int)
(declare-fun x655 () Bool)
(declare-fun x896 () Int)
(declare-fun x849 () Int)
(declare-fun x1342 () Int)
(declare-fun x1172 () Bool)
(declare-fun x1343 (Int) Int)
(declare-fun x350 () Int)
(declare-fun x904 () Int)
(define-fun x344 ((x453 x453) (x1057 Int)) x453 (ite ((_ is x566) x453) (x566 (x334 x453) (+ (x349 x453) x1057)) (ite ((_ is x224) x453) (x224 (x246 x453) (x1301 x453) (+ x1057 (x780 x453))) (x346 (+ x1057 (x836 x453))))))
(define-fun x473 ((x616 Int)) Int (ite (and (< x616 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x616 0)) x616 (- x616 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x94 ((x616 Int)) Int (ite (and (>= x616 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x616 0)) (+ x616 115792089237316195423570985008687907853269984665640564039457584007913129639936) x616))
(define-fun x171 ((x1335 Int)) Bool (and (< x1335 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1335 0)))
(define-fun x1023 ((x1335 Int)) Bool (and (= (x394 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1335) x1335) (= (x394 x1335 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1335)))
(define-fun x961 ((x1335 Int)) Bool (and (= (x394 x1335 0) 0) (= 0 (x394 0 x1335))))
(define-fun x535 ((x1335 Int)) Bool (= (x394 x1335 x1335) x1335))
(define-fun x117 ((x1335 Int)) Bool (and (x961 x1335) (x1023 x1335) (x535 x1335)))
(define-fun x73 ((x1335 Int)) Bool (= (x394 20282409603651670423947251286015 x1335) (x394 20282409603651670423947251286015 (x394 20282409603651670423947251286015 x1335))))
(define-fun x682 ((x1335 Int)) Bool (=> (and (>= x1335 0) (> 20282409603651670423947251286016 x1335)) (= (x394 20282409603651670423947251286015 x1335) x1335)))
(define-fun x818 ((x1335 Int)) Bool (=> (= x1335 (x394 20282409603651670423947251286015 x1335)) (and (>= x1335 0) (< x1335 20282409603651670423947251286016))))
(define-fun x1420 ((x1335 Int)) Bool (=> (and (>= x1335 20282409603651670423947251286016) (< x1335 40564819207303340847894502572032)) (= (- x1335 20282409603651670423947251286016) (x394 20282409603651670423947251286015 x1335))))
(define-fun x370 ((x1335 Int) (x1304 Int)) Bool (and (= x1335 (+ (x394 20282409603651670423947251286015 x1335) (* 20282409603651670423947251286016 x1304))) (>= x1304 0)))
(define-fun x193 ((x1335 Int) (x239 Int)) Bool (and (x370 x1335 x239) (x1420 x1335) (x818 x1335) (x73 x1335) (x682 x1335)))
(define-fun x806 ((x1335 Int) (x1304 Int)) Bool (= (x394 x1304 x1335) (x394 x1335 x1304)))
(define-fun x828 ((x1335 Int) (x1304 Int)) Bool (and (>= (x394 x1335 x1304) 0) (=> (<= 0 x1335) (>= x1335 (x394 x1335 x1304))) (=> (<= 0 x1304) (>= x1304 (x394 x1335 x1304)))))
(define-fun x326 ((x1335 Int) (x1304 Int)) Bool (and (x828 x1335 x1304) (x806 x1335 x1304)))
(define-fun x623 ((x1335 Int) (x239 Int)) Bool (and (x193 x1335 x239) (x326 x1335 20282409603651670423947251286015)))
(define-fun x111 ((x1335 Int)) Bool (= (x866 x1335) (ite (< (x394 x1335 20282409603651670423947251286015) 10141204801825835211973625643008) (x394 x1335 20282409603651670423947251286015) (+ (x394 x1335 20282409603651670423947251286015) 115792089237316195423570985008687907853269984645358154435805913583965878353920))))
(define-fun x598 ((x1335 Int)) Bool (= (x394 255 (x394 255 x1335)) (x394 255 x1335)))
(define-fun x122 ((x1335 Int)) Bool (=> (and (> 256 x1335) (<= 0 x1335)) (= (x394 255 x1335) x1335)))
(define-fun x676 ((x1335 Int)) Bool (=> (= x1335 (x394 255 x1335)) (and (> 256 x1335) (<= 0 x1335))))
(define-fun x1190 ((x1335 Int)) Bool (=> (and (>= x1335 256) (> 512 x1335)) (= (x394 255 x1335) (- x1335 256))))
(define-fun x837 ((x1335 Int) (x1304 Int)) Bool (and (<= 0 x1304) (= x1335 (+ (x394 255 x1335) (* x1304 256)))))
(define-fun x433 ((x1335 Int) (x239 Int)) Bool (and (x1190 x1335) (x598 x1335) (x837 x1335 x239) (x122 x1335) (x676 x1335)))
(define-fun x480 ((x1335 Int) (x239 Int)) Bool (and (x326 x1335 255) (x433 x1335 x239)))
(define-fun x509 ((x1335 Int)) Bool (= (x394 1461501637330902918203684832716283019655932542975 x1335) (x394 1461501637330902918203684832716283019655932542975 (x394 1461501637330902918203684832716283019655932542975 x1335))))
(define-fun x880 ((x1335 Int)) Bool (=> (and (<= 0 x1335) (< x1335 1461501637330902918203684832716283019655932542976)) (= (x394 1461501637330902918203684832716283019655932542975 x1335) x1335)))
(define-fun x1259 ((x1335 Int)) Bool (=> (= (x394 1461501637330902918203684832716283019655932542975 x1335) x1335) (and (> 1461501637330902918203684832716283019655932542976 x1335) (<= 0 x1335))))
(define-fun x425 ((x1335 Int)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x1335) (>= x1335 1461501637330902918203684832716283019655932542976)) (= (x394 1461501637330902918203684832716283019655932542975 x1335) (- x1335 1461501637330902918203684832716283019655932542976))))
(define-fun x260 ((x1335 Int) (x1304 Int)) Bool (and (= (+ (x394 1461501637330902918203684832716283019655932542975 x1335) (* x1304 1461501637330902918203684832716283019655932542976)) x1335) (<= 0 x1304)))
(define-fun x1254 ((x1335 Int) (x239 Int)) Bool (and (x260 x1335 x239) (x880 x1335) (x509 x1335) (x1259 x1335) (x425 x1335)))
(define-fun x1003 ((x1335 Int) (x239 Int)) Bool (and (x326 x1335 1461501637330902918203684832716283019655932542975) (x1254 x1335 x239)))
(define-fun x1324 ((x1335 Int)) Bool (= (x394 340282366920938463463374607431768211455 (x394 340282366920938463463374607431768211455 x1335)) (x394 340282366920938463463374607431768211455 x1335)))
(define-fun x406 ((x1335 Int)) Bool (=> (and (>= x1335 0) (< x1335 340282366920938463463374607431768211456)) (= x1335 (x394 340282366920938463463374607431768211455 x1335))))
(define-fun x357 ((x1335 Int)) Bool (=> (= x1335 (x394 340282366920938463463374607431768211455 x1335)) (and (>= x1335 0) (< x1335 340282366920938463463374607431768211456))))
(define-fun x427 ((x1335 Int)) Bool (=> (and (< x1335 680564733841876926926749214863536422912) (>= x1335 340282366920938463463374607431768211456)) (= (x394 340282366920938463463374607431768211455 x1335) (- x1335 340282366920938463463374607431768211456))))
(define-fun x536 ((x1335 Int) (x1304 Int)) Bool (and (= x1335 (+ (x394 340282366920938463463374607431768211455 x1335) (* 340282366920938463463374607431768211456 x1304))) (<= 0 x1304)))
(define-fun x1337 ((x1335 Int) (x239 Int)) Bool (and (x427 x1335) (x1324 x1335) (x406 x1335) (x536 x1335 x239) (x357 x1335)))
(define-fun x632 ((x1335 Int) (x239 Int)) Bool (and (x1337 x1335 x239) (x326 x1335 340282366920938463463374607431768211455)))
(define-fun x1068 ((x1335 Int)) Bool (= (x394 18446744073709551615 x1335) (x394 18446744073709551615 (x394 18446744073709551615 x1335))))
(define-fun x912 ((x1335 Int)) Bool (=> (and (< x1335 18446744073709551616) (>= x1335 0)) (= (x394 18446744073709551615 x1335) x1335)))
(define-fun x1134 ((x1335 Int)) Bool (=> (= x1335 (x394 18446744073709551615 x1335)) (and (< x1335 18446744073709551616) (>= x1335 0))))
(define-fun x588 ((x1335 Int)) Bool (=> (and (<= 18446744073709551616 x1335) (> 36893488147419103232 x1335)) (= (- x1335 18446744073709551616) (x394 18446744073709551615 x1335))))
(define-fun x763 ((x1335 Int) (x1304 Int)) Bool (and (= (+ (* x1304 18446744073709551616) (x394 18446744073709551615 x1335)) x1335) (<= 0 x1304)))
(define-fun x156 ((x1335 Int) (x239 Int)) Bool (and (x1068 x1335) (x588 x1335) (x912 x1335) (x1134 x1335) (x763 x1335 x239)))
(define-fun x319 ((x1335 Int) (x239 Int)) Bool (and (x156 x1335 x239) (x326 x1335 18446744073709551615)))
(define-fun x143 ((x1335 Int)) Bool (= (x394 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x394 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1335)) (x394 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1335)))
(define-fun x1361 ((x1335 Int)) Bool (=> (and (> 32 x1335) (<= 0 x1335)) (= (x394 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1335) 0)))
(define-fun x6 ((x1335 Int) (x1304 Int) (x235 Int) (x285 Int)) Bool (and (<= 0 x235) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x235) (= (* 32 x235) (x394 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1335)) (= (+ (* x285 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1304 (* 32 x235)) x1335) (<= 0 x285) (<= 0 x1304) (< x1304 32) (> 1 x285)))
(define-fun x1297 ((x1335 Int) (x179 Int) (x302 Int) (x1422 Int)) Bool (and (x1361 x1335) (x6 x1335 x179 x302 x1422) (x143 x1335)))
(define-fun x77 ((x1335 Int) (x179 Int) (x302 Int) (x1422 Int)) Bool (and (x1297 x1335 x179 x302 x1422) (x326 x1335 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x697 ((x1335 Int)) Bool (= (x1100 x1335) (ite (> 170141183460469231731687303715884105728 (x394 x1335 340282366920938463463374607431768211455)) (x394 x1335 340282366920938463463374607431768211455) (+ (x394 x1335 340282366920938463463374607431768211455) 115792089237316195423570985008687907852929702298719625575994209400481361428480))))
(define-fun x557 ((x1252 Int)) Int (ite (= x1252 x423) x1424 (x1423 x1252)))
(define-fun x1323 ((x1252 Int)) Int (ite (= x1252 x1079) x916 (x109 x1252)))
(define-fun x932 ((x1252 Int)) Int (ite (= x74 x1252) x988 (x104 x1252)))
(define-fun x387 ((x1252 Int)) Int (ite (= x210 x1252) x1139 (x352 x1252)))
(define-fun x840 ((x1252 Int)) Int (ite (= x1252 x438) x1117 (x1311 x1252)))
(define-fun x852 ((x1252 Int)) Int (ite (= x1252 x348) x984 (x22 x1252)))
(define-fun x7 ((x1252 Int)) Int (ite (= x1252 x469) x749 (x1288 x1252)))
(define-fun x267 ((x1252 Int)) Int (ite (= x50 x1252) x1265 (x1340 x1252)))
(define-fun x1413 ((x1252 Int)) Int (ite (= 128 x1252) x794 (x146 x1252)))
(define-fun x481 ((x1252 Int)) Int (ite (= x1252 160) x781 (x1413 x1252)))
(define-fun x198 ((x1252 Int)) Int (ite (= 192 x1252) x574 (x481 x1252)))
(define-fun x1150 ((x1252 Int)) Int (ite (= 224 x1252) x358 (x198 x1252)))
(define-fun x881 ((x1252 Int)) Int (ite (= x1252 256) x496 (x1150 x1252)))
(define-fun x944 ((x1252 Int)) Int (ite (= 128 x1252) x486 (x146 x1252)))
(define-fun x1113 ((x1252 Int)) Int (ite (= 160 x1252) x563 (x944 x1252)))
(define-fun x1119 ((x1252 Int)) Int (ite (= x1252 192) x258 (x1113 x1252)))
(define-fun x287 ((x1252 Int)) Int (ite (= x1252 224) x644 (x1119 x1252)))
(define-fun x897 ((x1252 Int)) Int (ite (= 256 x1252) x33 (x287 x1252)))
(define-fun x844 ((x1252 Int)) Int (ite (and x429 x824) (x881 x1252) (x897 x1252)))
(define-fun x99 ((x1252 Int)) Int (ite (= x1252 128) x1392 (x1368 x1252)))
(define-fun x244 ((x1252 Int)) Int (ite (= 160 x1252) x931 (x99 x1252)))
(define-fun x1181 ((x1252 Int)) Int (ite (= x1252 192) x331 (x244 x1252)))
(define-fun x1202 ((x1252 Int)) Int (ite (= x1252 224) x1391 (x1181 x1252)))
(define-fun x106 ((x1252 Int)) Int (ite (= x1252 256) x468 (x1202 x1252)))
(define-fun x993 ((x1252 Int)) Int (ite (= x1252 x809) x1348 (x862 x1252)))
(define-fun x755 ((x1252 Int)) Int (ite (= x227 x1252) x345 (x993 x1252)))
(define-fun x263 ((x1252 Int)) Int (ite (= x1252 x367) x1085 (x755 x1252)))
(define-fun x1046 ((x1252 Int)) Int (ite (= x982 x1252) x1107 (x263 x1252)))
(define-fun x422 ((x1252 Int)) Int (ite (= x113 x1252) x80 (x1046 x1252)))
(define-fun x1349 ((x1252 Int)) Int (ite (= x1252 0) x1194 (x445 x1252)))
(define-fun x890 ((x1252 Int)) Int (ite (= x1252 32) x247 (x1349 x1252)))
(define-fun x622 ((x1252 Int)) Int (ite (= x1252 64) x937 (x890 x1252)))
(define-fun x164 ((x1252 Int)) Int (ite (= 96 x1252) x713 (x622 x1252)))
(define-fun x803 ((x1252 Int)) Int (ite (= x1252 128) x1342 (x164 x1252)))
(define-fun x569 ((x1252 x453)) Int (ite (= x1081 x1252) x570 (x920 x1252)))
(define-fun x1206 ((x1252 x453)) Int (ite (= x1252 x219) x1174 (x569 x1252)))
(define-fun x1341 ((x1252 x453)) Int (ite (= x1252 x168) x69 (x677 x1252)))
(define-fun x791 ((x1252 x453)) Int (ite (= x1252 x792) x190 (x1341 x1252)))
(define-fun x202 ((x1252 Int)) Int (ite (= 128 x1252) x1392 (x276 x1252)))
(define-fun x70 ((x1252 Int)) Int (ite (= 160 x1252) x1112 (x202 x1252)))
(define-fun x1124 ((x1252 Int)) Int (ite (= x1252 192) x331 (x70 x1252)))
(define-fun x584 ((x1252 Int)) Int (ite (= 224 x1252) x1391 (x1124 x1252)))
(define-fun x757 ((x1252 Int)) Int (ite (= x1252 256) x468 (x584 x1252)))
(define-fun x863 ((x1252 Int)) Int (ite (= 0 x1252) x653 (x118 x1252)))
(define-fun x29 ((x1252 Int)) Int (ite (= x1252 32) x42 (x863 x1252)))
(define-fun x867 ((x1252 Int)) Int (ite (= 64 x1252) x1290 (x29 x1252)))
(define-fun x991 ((x1252 Int)) Int (ite (= x1252 96) x602 (x867 x1252)))
(define-fun x696 ((x1252 Int)) Int (ite (= 128 x1252) x300 (x991 x1252)))
(define-fun x115 ((x1252 Int)) Int (ite (= x395 x1252) x162 (x1268 x1252)))
(define-fun x913 ((x1252 Int)) Int (ite (= x373 x1252) x277 (x1000 x1252)))
(define-fun x407 ((x1252 Int)) Int (ite (= x1162 x1252) x16 (x306 x1252)))
(define-fun x1325 ((x1252 Int)) Int (ite (= x1252 x1178) x1362 (x1296 x1252)))
(define-fun x393 ((x1252 Int)) Int (ite (= x1405 x1252) x1351 (x1343 x1252)))
(define-fun x419 ((x1252 Int)) Int (ite (= x804 x1252) x784 (x502 x1252)))
(define-fun x883 ((x1252 Int)) Int (ite (= x1252 x84) x500 (x25 x1252)))
(define-fun x57 ((x1252 Int)) Int (ite (= x1094 x1252) x1274 (x459 x1252)))
(define-fun x424 ((x1252 Int)) Int (ite (= x1252 128) x911 (x1167 x1252)))
(define-fun x1371 ((x1252 Int)) Int (ite (= x1252 160) x831 (x424 x1252)))
(define-fun x1025 ((x1252 Int)) Int (ite (= 192 x1252) x530 (x1371 x1252)))
(define-fun x627 ((x1252 Int)) Int (ite (= x1252 224) x1398 (x1025 x1252)))
(define-fun x721 ((x1252 Int)) Int (ite (= 256 x1252) x1399 (x627 x1252)))
(define-fun x1394 ((x1252 Int)) Int (ite (= x1252 128) x741 (x1167 x1252)))
(define-fun x1382 ((x1252 Int)) Int (ite (= 160 x1252) x234 (x1394 x1252)))
(define-fun x355 ((x1252 Int)) Int (ite (= 192 x1252) x816 (x1382 x1252)))
(define-fun x232 ((x1252 Int)) Int (ite (= 224 x1252) x1409 (x355 x1252)))
(define-fun x1163 ((x1252 Int)) Int (ite (= 256 x1252) x184 (x232 x1252)))
(define-fun x786 ((x1252 Int)) Int (ite (and x1144 x201) (x721 x1252) (x1163 x1252)))
(define-fun x1390 ((x1252 Int)) Int (ite (= 128 x1252) x1392 (x537 x1252)))
(define-fun x576 ((x1252 Int)) Int (ite (= x1252 160) x236 (x1390 x1252)))
(define-fun x1216 ((x1252 Int)) Int (ite (= x1252 192) x331 (x576 x1252)))
(define-fun x21 ((x1252 Int)) Int (ite (= 224 x1252) x1391 (x1216 x1252)))
(define-fun x1360 ((x1252 Int)) Int (ite (= 256 x1252) x468 (x21 x1252)))
(define-fun x1210 ((x1252 Int)) Int (ite (= x1252 x238) x664 (x93 x1252)))
(define-fun x1406 ((x1252 Int)) Int (ite (= x1252 x343) x1411 (x1210 x1252)))
(define-fun x482 ((x1252 Int)) Int (ite (= x1252 x714) x400 (x1406 x1252)))
(define-fun x552 ((x1252 Int)) Int (ite (= x1376 x1252) x75 (x482 x1252)))
(define-fun x191 ((x1252 Int)) Int (ite (= x241 x1252) x778 (x552 x1252)))
(define-fun x1075 ((x1252 Int)) Int (ite (= 0 x1252) x342 (x305 x1252)))
(define-fun x1059 ((x1252 Int)) Int (ite (= x1252 32) x416 (x1075 x1252)))
(define-fun x959 ((x1252 Int)) Int (ite (= x1252 64) x737 (x1059 x1252)))
(define-fun x892 ((x1252 Int)) Int (ite (= 96 x1252) x990 (x959 x1252)))
(define-fun x158 ((x1252 Int)) Int (ite (= 128 x1252) x1042 (x892 x1252)))
(define-fun x1177 ((x1252 Int)) Int (ite (= 128 x1252) x1392 (x1302 x1252)))
(define-fun x464 ((x1252 Int)) Int (ite (= x1252 160) x66 (x1177 x1252)))
(define-fun x1232 ((x1252 Int)) Int (ite (= x1252 192) x331 (x464 x1252)))
(define-fun x864 ((x1252 Int)) Int (ite (= x1252 224) x1391 (x1232 x1252)))
(define-fun x745 ((x1252 Int)) Int (ite (= x1252 256) x468 (x864 x1252)))
(define-fun x779 ((x1252 Int)) Int (ite (= x1252 0) x484 (x41 x1252)))
(define-fun x813 ((x1252 Int)) Int (ite (= 32 x1252) x735 (x779 x1252)))
(define-fun x1166 ((x1252 Int)) Int (ite (= 64 x1252) x133 (x813 x1252)))
(define-fun x1126 ((x1252 Int)) Int (ite (= 96 x1252) x81 (x1166 x1252)))
(define-fun x810 ((x1252 Int)) Int (ite (= x1252 128) x1353 (x1126 x1252)))
(define-fun x610 ((x1252 Int)) Int (ite (= x119 x1252) x590 (x975 x1252)))
(define-fun x512 ((x1252 Int)) Int (ite (= x1252 x91) x727 (x63 x1252)))
(define-fun x629 ((x1252 Int)) Int (ite (= x1252 x1006) x490 (x710 x1252)))
(define-fun x562 ((x1252 Int)) Int (ite (= x1252 x1198) x221 (x533 x1252)))
(define-fun x1160 ((x1252 Int)) Int (ite (= x405 x1252) x770 (x203 x1252)))
(define-fun x110 ((x1252 Int)) Int (ite (= x1252 x338) x968 (x747 x1252)))
(define-fun x150 ((x1252 Int)) Int (ite (= x1252 x1132) x885 (x1418 x1252)))
(define-fun x1040 ((x1252 Int)) Int (ite (= x807 x1252) x520 (x362 x1252)))
(define-fun x1 ((x1252 Int)) Int (ite (= x1252 128) x240 (x1244 x1252)))
(define-fun x1316 ((x1252 Int)) Int (ite (= x1252 160) x1298 (x1 x1252)))
(define-fun x1156 ((x1252 Int)) Int (ite (= x1252 192) x1354 (x1316 x1252)))
(define-fun x583 ((x1252 Int)) Int (ite (= 224 x1252) x1281 (x1156 x1252)))
(define-fun x679 ((x1252 Int)) Int (ite (= 256 x1252) x1043 (x583 x1252)))
(define-fun x105 ((x1252 Int)) Int (ite (= 128 x1252) x364 (x1244 x1252)))
(define-fun x485 ((x1252 Int)) Int (ite (= x1252 160) x690 (x105 x1252)))
(define-fun x618 ((x1252 Int)) Int (ite (= 192 x1252) x1284 (x485 x1252)))
(define-fun x1128 ((x1252 Int)) Int (ite (= 224 x1252) x1170 (x618 x1252)))
(define-fun x751 ((x1252 Int)) Int (ite (= x1252 256) x330 (x1128 x1252)))
(define-fun x815 ((x1252 Int)) Int (ite (and x1146 x450) (x679 x1252) (x751 x1252)))
(define-fun x517 ((x1252 Int)) Int (ite (= 128 x1252) x1392 (x404 x1252)))
(define-fun x549 ((x1252 Int)) Int (ite (= 160 x1252) x759 (x517 x1252)))
(define-fun x1388 ((x1252 Int)) Int (ite (= 192 x1252) x331 (x549 x1252)))
(define-fun x1385 ((x1252 Int)) Int (ite (= 224 x1252) x1391 (x1388 x1252)))
(define-fun x528 ((x1252 Int)) Int (ite (= 256 x1252) x468 (x1385 x1252)))
(define-fun x1241 ((x1252 Int)) Int (ite (= x1252 x1027) x631 (x981 x1252)))
(define-fun x1014 ((x1252 Int)) Int (ite (= x1252 x977) x1199 (x1241 x1252)))
(define-fun x418 ((x1252 Int)) Int (ite (= x515 x1252) x1200 (x1014 x1252)))
(define-fun x592 ((x1252 Int)) Int (ite (= x1252 x96) x1233 (x418 x1252)))
(define-fun x412 ((x1252 Int)) Int (ite (= x237 x1252) x262 (x592 x1252)))
(define-fun x414 ((x1252 Int)) Int (ite (= x1252 0) x27 (x787 x1252)))
(define-fun x564 ((x1252 Int)) Int (ite (= x1252 32) x1019 (x414 x1252)))
(define-fun x249 ((x1252 Int)) Int (ite (= x1252 64) x860 (x564 x1252)))
(define-fun x131 ((x1252 Int)) Int (ite (= 96 x1252) x1041 (x249 x1252)))
(define-fun x1263 ((x1252 Int)) Int (ite (= x1252 128) x1091 (x131 x1252)))
(define-fun x1225 ((x1252 Int)) Int (ite (= x1252 128) x1392 (x1270 x1252)))
(define-fun x1230 ((x1252 Int)) Int (ite (= 160 x1252) x200 (x1225 x1252)))
(define-fun x1111 ((x1252 Int)) Int (ite (= 192 x1252) x331 (x1230 x1252)))
(define-fun x265 ((x1252 Int)) Int (ite (= x1252 224) x1391 (x1111 x1252)))
(define-fun x294 ((x1252 Int)) Int (ite (= 256 x1252) x468 (x265 x1252)))
(define-fun x1410 ((x1252 Int)) Int (ite (= x1252 0) x1036 (x593 x1252)))
(define-fun x782 ((x1252 Int)) Int (ite (= x1252 32) x805 (x1410 x1252)))
(define-fun x199 ((x1252 Int)) Int (ite (= x1252 64) x420 (x782 x1252)))
(define-fun x693 ((x1252 Int)) Int (ite (= x1252 96) x1105 (x199 x1252)))
(define-fun x1088 ((x1252 Int)) Int (ite (= 128 x1252) x900 (x693 x1252)))
(define-fun x279 ((x1252 Int)) Int (ite (= 128 x1252) x1108 (x1312 x1252)))
(define-fun x667 ((x1252 Int)) Int (ite (= 160 x1252) x928 (x279 x1252)))
(define-fun x620 ((x1252 Int)) Int (ite (= 192 x1252) x1386 (x667 x1252)))
(define-fun x587 ((x1252 Int)) Int (ite (= x1252 224) x49 (x620 x1252)))
(define-fun x660 ((x1252 Int)) Int (ite (= 256 x1252) x67 (x587 x1252)))
(define-fun x799 ((x1252 Int)) Int (ite (= x809 x1252) x351 (x862 x1252)))
(define-fun x665 ((x1252 Int)) Int (ite (= x1252 x647) x339 (x799 x1252)))
(define-fun x284 ((x1252 Int)) Int (ite (= x376 x1252) x853 (x665 x1252)))
(define-fun x381 ((x1252 Int)) Int (ite (= x1252 x205) x312 (x284 x1252)))
(define-fun x758 ((x1252 Int)) Int (ite (= x1252 x732) x1010 (x381 x1252)))
(define-fun x579 ((x1252 Int)) Int (ite (= 0 x1252) x396 (x445 x1252)))
(define-fun x927 ((x1252 Int)) Int (ite (= x1252 32) x1291 (x579 x1252)))
(define-fun x337 ((x1252 Int)) Int (ite (= x1252 64) x685 (x927 x1252)))
(define-fun x76 ((x1252 Int)) Int (ite (= x1252 96) x293 (x337 x1252)))
(define-fun x1207 ((x1252 Int)) Int (ite (= 128 x1252) x471 (x76 x1252)))
(define-fun x554 ((x1252 Int)) Int (ite (= 128 x1252) x1108 (x870 x1252)))
(define-fun x761 ((x1252 Int)) Int (ite (= 160 x1252) x997 (x554 x1252)))
(define-fun x1021 ((x1252 Int)) Int (ite (= x1252 192) x1386 (x761 x1252)))
(define-fun x1158 ((x1252 Int)) Int (ite (= 224 x1252) x49 (x1021 x1252)))
(define-fun x938 ((x1252 Int)) Int (ite (= 256 x1252) x67 (x1158 x1252)))
(define-fun x372 ((x1252 Int)) Int (ite (= 0 x1252) x689 (x118 x1252)))
(define-fun x495 ((x1252 Int)) Int (ite (= 32 x1252) x1188 (x372 x1252)))
(define-fun x614 ((x1252 Int)) Int (ite (= x1252 64) x1381 (x495 x1252)))
(define-fun x487 ((x1252 Int)) Int (ite (= x1252 96) x736 (x614 x1252)))
(define-fun x550 ((x1252 Int)) Int (ite (= 128 x1252) x465 (x487 x1252)))
(define-fun x183 ((x1252 Int)) Int (ite (= x1252 128) x1108 (x1201 x1252)))
(define-fun x1370 ((x1252 Int)) Int (ite (= 160 x1252) x773 (x183 x1252)))
(define-fun x909 ((x1252 Int)) Int (ite (= 192 x1252) x1386 (x1370 x1252)))
(define-fun x827 ((x1252 Int)) Int (ite (= x1252 224) x49 (x909 x1252)))
(define-fun x135 ((x1252 Int)) Int (ite (= x1252 256) x67 (x827 x1252)))
(define-fun x532 ((x1252 Int)) Int (ite (= x1252 x238) x1052 (x93 x1252)))
(define-fun x59 ((x1252 Int)) Int (ite (= x1168 x1252) x821 (x532 x1252)))
(define-fun x992 ((x1252 Int)) Int (ite (= x1214 x1252) x531 (x59 x1252)))
(define-fun x1096 ((x1252 Int)) Int (ite (= x252 x1252) x250 (x992 x1252)))
(define-fun x762 ((x1252 Int)) Int (ite (= x1318 x1252) x898 (x1096 x1252)))
(define-fun x369 ((x1252 Int)) Int (ite (= 0 x1252) x643 (x305 x1252)))
(define-fun x315 ((x1252 Int)) Int (ite (= x1252 32) x612 (x369 x1252)))
(define-fun x152 ((x1252 Int)) Int (ite (= 64 x1252) x522 (x315 x1252)))
(define-fun x1116 ((x1252 Int)) Int (ite (= x1252 96) x1169 (x152 x1252)))
(define-fun x493 ((x1252 Int)) Int (ite (= 128 x1252) x1357 (x1116 x1252)))
(define-fun x282 ((x1252 Int)) Int (ite (= x1252 128) x1108 (x989 x1252)))
(define-fun x1056 ((x1252 Int)) Int (ite (= 160 x1252) x673 (x282 x1252)))
(define-fun x289 ((x1252 Int)) Int (ite (= x1252 192) x1386 (x1056 x1252)))
(define-fun x855 ((x1252 Int)) Int (ite (= x1252 224) x49 (x289 x1252)))
(define-fun x600 ((x1252 Int)) Int (ite (= x1252 256) x67 (x855 x1252)))
(define-fun x856 ((x1252 Int)) Int (ite (= 0 x1252) x905 (x41 x1252)))
(define-fun x188 ((x1252 Int)) Int (ite (= 32 x1252) x449 (x856 x1252)))
(define-fun x295 ((x1252 Int)) Int (ite (= 64 x1252) x580 (x188 x1252)))
(define-fun x1257 ((x1252 Int)) Int (ite (= x1252 96) x1328 (x295 x1252)))
(define-fun x444 ((x1252 Int)) Int (ite (= 128 x1252) x687 (x1257 x1252)))
(define-fun x872 ((x1252 Int)) Int (ite (= 128 x1252) x1108 (x194 x1252)))
(define-fun x503 ((x1252 Int)) Int (ite (= x1252 160) x812 (x872 x1252)))
(define-fun x417 ((x1252 Int)) Int (ite (= 192 x1252) x1386 (x503 x1252)))
(define-fun x738 ((x1252 Int)) Int (ite (= 224 x1252) x49 (x417 x1252)))
(define-fun x561 ((x1252 Int)) Int (ite (= 256 x1252) x67 (x738 x1252)))
(define-fun x1245 ((x1252 Int)) Int (ite (= x1027 x1252) x157 (x981 x1252)))
(define-fun x790 ((x1252 Int)) Int (ite (= x1252 x1321) x1183 (x1245 x1252)))
(define-fun x130 ((x1252 Int)) Int (ite (= x1252 x698) x466 (x790 x1252)))
(define-fun x318 ((x1252 Int)) Int (ite (= x1267 x1252) x1093 (x130 x1252)))
(define-fun x558 ((x1252 Int)) Int (ite (= x1252 x1022) x1402 (x318 x1252)))
(define-fun x88 ((x1252 Int)) Int (ite (= 0 x1252) x1246 (x787 x1252)))
(define-fun x572 ((x1252 Int)) Int (ite (= 32 x1252) x251 (x88 x1252)))
(define-fun x925 ((x1252 Int)) Int (ite (= 64 x1252) x731 (x572 x1252)))
(define-fun x378 ((x1252 Int)) Int (ite (= 96 x1252) x830 (x925 x1252)))
(define-fun x180 ((x1252 Int)) Int (ite (= x1252 128) x494 (x378 x1252)))
(define-fun x1101 ((x1252 Int)) Int (ite (= x1252 128) x1108 (x443 x1252)))
(define-fun x1419 ((x1252 Int)) Int (ite (= x1252 160) x455 (x1101 x1252)))
(define-fun x410 ((x1252 Int)) Int (ite (= 192 x1252) x1386 (x1419 x1252)))
(define-fun x382 ((x1252 Int)) Int (ite (= x1252 224) x49 (x410 x1252)))
(define-fun x659 ((x1252 Int)) Int (ite (= 256 x1252) x67 (x382 x1252)))
(define-fun x656 ((x1252 Int)) Int (ite (= 0 x1252) x320 (x593 x1252)))
(define-fun x14 ((x1252 Int)) Int (ite (= x1252 32) x1306 (x656 x1252)))
(define-fun x595 ((x1252 Int)) Int (ite (= 64 x1252) x1153 (x14 x1252)))
(define-fun x661 ((x1252 Int)) Int (ite (= x1252 96) x1192 (x595 x1252)))
(define-fun x107 ((x1252 Int)) Int (ite (= 128 x1252) x586 (x661 x1252)))
(define-fun x516 ((x1252 Int)) Int (ite (and x428 x695) (x422 x1252) (x758 x1252)))
(define-fun x633 ((x1252 Int)) Int (ite (and x649 x703) (x191 x1252) (x762 x1252)))
(define-fun x1047 ((x1252 Int)) Int (ite (and x798 x1033) (x412 x1252) (x558 x1252)))
(define-fun x402 ((x1335 Int)) Bool (=> (and (not (= x1335 1168994686)) (not (= 1752364190 x1335)) (not (= x1335 1099511627775)) (not (= x1335 18446744073709551615)) (not (= x1335 4062139261)) (not (= 20282409603651670423947251286015 x1335)) (not (= 372528908 x1335)) (not (= 2000660004 x1335)) (not (= 3257672857 x1335)) (not (= 2059964113 x1335)) (not (= x1335 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x1335 950698303)) (not (= 274184521717934524641157099916833587227 x1335)) (not (= x1335 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (not (= 318876285 x1335)) (not (= x1335 332257840)) (not (= 170141183460469231731687303715884105727 x1335)) (not (= x1335 65535)) (not (= x1335 115197700812830431890159100217698998050002284567939525164234024451216521560064)) (not (= 204737060 x1335)) (not (= 274184521717934524641157099916833587210 x1335)) (not (= x1335 274184521717934524641157099916833587235)) (not (= 1208925819614629174706176 x1335)) (not (= 2055092157 x1335)) (not (= 340282366920938463463374607431768211456 x1335)) (not (= 1558726628 x1335)) (not (= x1335 4272920204)) (not (= x1335 274184521717934524641157099916833587231)) (not (= 2362581449 x1335)) (not (= 1000000000000000 x1335)) (not (= 1000000000000000000 x1335)) (not (= x1335 1461501637330902918203684832716283019655932542975)) (not (= x1335 274184521717934524641157099916833587244)) (not (= 1100443145 x1335)) (not (= x1335 274184521717934524641157099916833587233)) (not (= x1335 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not (= x1335 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1335 18446744073709551616)) (not (= x1335 2059260625)) (not (= 274184521717934524641157099916833587223 x1335)) (not (= 480214969 x1335)) (not (= 1736444767 x1335)) (not (= 10141204801825835211973625643007 x1335)) (< 10000 x1335) (not (= x1335 65536)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1335)) (not (= x1335 1461501637330902918203684832716283019655932542976)) (not (= x1335 1208925819614629174706175)) (not (= 20282409603651670423947251286016 x1335)) (not (= 340282366920938463463374607431768211455 x1335))) (not ((_ is x346) (x941 x1335)))))
(assert (= x1314 (=> (and (>= 20282409603651670423947251286015 x1060) (not (> 950698303 x1380)) (= x1279 (x866 x1060)) (= (x507 x313) x1060) (not (= x1380 1736444767)) (< x1380 2059964113) (>= x1060 0) (= 2059260625 x1380) (not (= 1752364190 x1380)) (<= x15 1461501637330902918203684832716283019655932542975) (= (x720 (x941 274184521717934524641157099916833587210)) x434) (= (x224 (x941 x15) (x346 5) 0) x313) (not (= 1558726628 x1380)) (not (< x1380 1558726628)) (= x1279 x511) (not (= 2000660004 x1380)) (> x434 0) (< x1060 20282409603651670423947251286016) (not (> 1168994686 x1380)) (not (= 2055092157 x1380))) (=> (and (< x52 1168994686) (> 65536 x717) (= (x866 x310) x222) (= x310 (x507 x123)) (= x1285 x511) (< 0 x923) (= (x224 (x941 x139) (x346 5) 0) x518) (= (or (and (> 0 x1285) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1285) true)) (> x1285 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x801) (= x123 (x224 (x941 x139) (x346 5) 0)) (< x52 2059964113) (>= 1461501637330902918203684832716283019655932542975 x139) (= x350 x139) (<= x717 65535) (= (x677 x518) x717) (= 950698303 x52) (> 1100443145 x52) (not (> 950698303 x52)) (<= 0 x717) (>= 20282409603651670423947251286015 x310) (or (and (<= x1030 18446744073709551615) (= (* x1030 x691) x577) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x316) (and (> 0 x316) (= true (<= x316 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x8)) (= (x866 x949) x8) (not (< 10141204801825835211973625643007 x1055)) (= x691 (x394 20282409603651670423947251286015 x316)) (= x161 (x94 (- 0 x8))) (<= 0 x1030) (= x888 x161) (= (x394 20282409603651670423947251286015 x949) x1055) (< x1030 18446744073709551616) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1030 x691)) (= (div x577 1000000000000000) x949) (= (x94 (- 0 x222)) x316) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x222)) x1050) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x36 x904)) (= x888 x1203) (= x650 (* x36 x904)) (not (or (and (> 0 x222) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x222))) (> x222 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x394 20282409603651670423947251286015 x1203) x829) (<= x36 18446744073709551615) (= x904 (x394 20282409603651670423947251286015 x222)) (>= x36 0) (not x1050) (not (> x829 10141204801825835211973625643007)) (= x1203 (div x650 1000000000000000)) (< x36 18446744073709551616))) (= (x720 (x941 274184521717934524641157099916833587210)) x923) (= 0 x1016) (<= 0 x310) (= x1050 (or (and (< x222 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x222) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x222))) (< x310 20282409603651670423947251286016)) x48))))
(assert (x171 x190))
(assert (= (x941 4272920204) (x346 4272920204)))
(assert (x171 x1315))
(assert (x171 x640))
(assert (x171 x1321))
(assert (x171 x51))
(assert (x171 x746))
(assert (= (x346 65535) (x941 65535)))
(assert (x171 x1272))
(assert (x171 x390))
(assert (x171 x846))
(assert (x171 x891))
(assert (x117 x139))
(assert (= (=> (and (= (x473 (+ x1278 31)) x966) (= (x844 160) x270) (>= 1208925819614629174706175 x1082) (= (not x1073) x261) (= (x473 (+ 128 x1007)) x1250) (not (or (> x1278 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 160 x1278) (= true (<= x1278 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x394 115792089237316195423570985008687907853269984665640564039457584007913129639904 x966) x1007) (> x599 0) (not (ite x261 x261 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x270)) (> x270 170141183460469231731687303715884105727)))) (= (x394 340282366920938463463374607431768211455 x270) x492) (= (x844 128) x1082) (= x1152 (x394 255 x1330)) (= 0 x256) (not (= x1035 0)) (= (x394 18446744073709551615 x544) x599) (= (x844 256) x769) (= x298 (mod (* x492 (x1100 x945)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1073 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x270)) (> x270 0))) (>= 1208925819614629174706175 x769) (= (ite (or (= 0 x298) (= 0 x599)) 0 (ite (= (< x599 57896044618658097711785492504343953926634992332820282019728792003956564819968) (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x298)) (div (ite (< x298 57896044618658097711785492504343953926634992332820282019728792003956564819968) x298 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x94 (- x298 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x599) x599 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x94 (- x599 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x298) x298 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x94 (- x298 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x599) x599 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x94 (- x599 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1303) (= x958 (> x1152 0))) (and (=> x958 x1118) (=> (and (= x1303 x901) (not x958)) x177))) x72))
(assert (x111 x148))
(assert (x171 x16))
(assert (x171 x1041))
(assert (x171 x251))
(assert (=> (>= 10000 x333) (= (x941 x333) (x346 x333))))
(assert (x117 x456))
(assert (= 0 (x203 x729)))
(assert (x117 x510))
(assert (x171 x860))
(assert (= (x1310 (x941 x78)) x78))
(assert (= x824 x671))
(assert (x632 x175 x753))
(assert (x171 x1287))
(assert (x171 x149))
(assert (x117 x1272))
(assert (x171 x928))
(assert (= (and x703 (not x649)) x529))
(assert (= x497 (and x529 (not x1262))))
(assert (x117 x316))
(assert (x171 x79))
(assert (x171 x1285))
(assert (x171 x463))
(assert (x171 x1279))
(assert (= (x1310 (x346 115197700812830431890159100217698998050002284567939525164234024451216521560064)) 115197700812830431890159100217698998050002284567939525164234024451216521560064))
(assert (x632 x956 x61))
(assert (x171 x69))
(assert (x402 x361))
(assert (x171 x543))
(assert (x171 x19))
(assert (= 2059260625 (x1310 (x346 2059260625))))
(assert (=> (>= 10000 x190) (= (x346 x190) (x941 x190))))
(assert (x171 x545))
(assert (x402 x825))
(assert (x117 x888))
(assert (x171 x221))
(assert (= (and x108 (not x513)) x440))
(assert (x171 x619))
(assert (= (=> (and (= x1383 (x394 1461501637330902918203684832716283019655932542975 x322)) (= (x866 x777) x748) (= x1144 (= x1383 274184521717934524641157099916833587235)) (= x1421 128)) (and (=> (not x1144) x163) (=> (and (= x66 (x271 x1205)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x331) (= 4272920204 x672) (= x1400 115197700812830431890159100217698998050002284567939525164234024451216521560064) (>= x468 0) (= x831 (x745 160)) (= x911 (x745 128)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x66) (>= x1391 0) (not (< x1315 4)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1391) (>= 1208925819614629174706175 x468) (= (x745 256) x1399) x1144 (>= x66 0) (<= 0 x331) (= 160 x765) (= x2 1) (= x1205 (x224 (x941 x1378) (x346 1) 0)) (not (< x672 2362581449)) (>= 1208925819614629174706175 x1392) (= (x745 256) x1353) (not (= 3257672857 x672)) (= (x745 192) x133) (= x1398 (x745 224)) (< x468 1208925819614629174706176) (= 4 x1315) (>= x1392 0) (< 0 x1369) (= 4 x1315) (= x81 (x745 224)) (not (= 2362581449 x672)) (= (x745 160) x735) (= x530 (x745 192)) (not (= 4062139261 x672)) (= x1369 (x720 (x941 274184521717934524641157099916833587235))) (< x1392 1208925819614629174706176) (= (x745 128) x484)) x1217))) x1407))
(assert (x171 x1274))
(assert (x171 x1269))
(assert (= (x1310 (x346 2055092157)) 2055092157))
(assert (x171 x930))
(assert (x171 x631))
(assert (x171 x951))
(assert (x623 x1008 x1292))
(assert (x171 x658))
(assert (= x39 true))
(assert (= (x1310 (x941 x847)) x847))
(assert (= (x347 x657) 0))
(assert (x117 x1271))
(assert (x171 x92))
(assert (x171 x215))
(assert (= (=> (and (= (= x764 274184521717934524641157099916833587235) x1146) (= x175 (x866 x456)) (= x120 128) (= (x394 1461501637330902918203684832716283019655932542975 x322) x764)) (and (=> (not x1146) x1102) (=> (and (= 4 x1182) (= (x271 x218) x200) (>= x468 0) (not (= x189 2362581449)) (>= x331 0) (= (x294 224) x1105) (= 4272920204 x189) (= x1182 4) (not (= 4062139261 x189)) (< 0 x155) (<= 0 x1392) (= x1354 (x294 192)) (= (x294 192) x420) (> 1208925819614629174706176 x468) (<= x468 1208925819614629174706175) (<= x331 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 3257672857 x189)) (<= 0 x1391) (= x1365 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x720 (x941 274184521717934524641157099916833587235)) x155) (= x1076 1) (>= 1208925819614629174706175 x1392) (< x1392 1208925819614629174706176) (= x805 (x294 160)) (not (< x189 2362581449)) (<= 0 x200) (not (< x1182 4)) (<= x200 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x294 224) x1281) x1146 (= x1036 (x294 128)) (= x1125 160) (<= x1391 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x218 (x224 (x941 x1223) (x346 1) 0)) (= x1043 (x294 256)) (= (x294 128) x240) (= (x294 160) x1298) (= x900 (x294 256))) x1120))) x726))
(assert (= (x346 2000660004) (x941 2000660004)))
(assert (x402 x489))
(assert (x171 x1035))
(assert (= (x941 340282366920938463463374607431768211456) (x346 340282366920938463463374607431768211456)))
(assert (x623 x777 x578))
(assert (=> (>= 10000 x1352) (= (x941 x1352) (x346 x1352))))
(assert (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 (x1310 (x346 115792089237316195423570985008687907853269984655499359237631748795939503996928))))
(assert (x402 x902))
(assert (x171 x663))
(assert (x171 x133))
(assert (= (x1310 (x346 274184521717934524641157099916833587227)) 274184521717934524641157099916833587227))
(assert (x171 x277))
(assert (x111 x888))
(assert (x117 x845))
(assert (= (x1310 (x941 x47)) x47))
(assert (x171 x1397))
(assert (x171 x831))
(assert (= (+ 2 (x1310 x848)) (x1310 (x344 x848 2))))
(assert (x402 x1044))
(assert (= (x1310 (x941 x718)) x718))
(assert (= (or (and x702 x611) (and x428 x695)) x323))
(assert (x171 x1348))
(assert (x117 x98))
(assert (x171 x225))
(assert (=> (>= 10000 x361) (= (x346 x361) (x941 x361))))
(assert (x171 x496))
(assert (= (x1310 (x346 20282409603651670423947251286015)) 20282409603651670423947251286015))
(assert (x171 x184))
(assert (x171 x1389))
(assert (= (and x819 (not x1195)) x126))
(assert (= x538 (and (not x702) x611)))
(assert (x171 x1168))
(assert (= (=> (and (= x24 (x473 (+ x1250 288))) (= x848 (x224 (x346 0) (x346 10) 0)) (<= x749 18446744073709551615) (>= x916 0) (= x353 (x1323 x24)) (= (x38 x462) x749) (= x1117 (x692 x462)) (<= 0 x1265) (= x916 (x1240 x848)) (> 1461501637330902918203684832716283019655932542976 x658) (= x658 (x785 x1157)) (<= x916 1461501637330902918203684832716283019655932542975) (= x846 (x557 x423)) (= (x473 (+ x1250 512)) x809) (= (x344 x848 1) x585) (= (x394 1461501637330902918203684832716283019655932542975 x139) x1237) (> 340282366920938463463374607431768211456 x1265) (= x469 (x473 (+ 64 x438))) (<= 0 x988) (<= 0 x749) (= (x473 (+ x348 64)) x50) (= (x473 (+ 64 x423)) x1327) (= (x394 255 x846) x930) (<= x658 1461501637330902918203684832716283019655932542975) (= x348 (x473 (+ 64 x210))) (= (x920 x582) x922) (= x1017 (x1323 x1079)) (= x988 (x868 x585)) (<= x1265 340282366920938463463374607431768211455) (< x922 340282366920938463463374607431768211456) (>= x1139 0) (= (x932 x1327) x9) (= x539 (x344 x585 2)) (= 0 x431) (< x988 1461501637330902918203684832716283019655932542976) (> 256 x1424) (= (= 274184521717934524641157099916833587235 x1345) x428) (= (x224 (x346 0) (x346 9) 0) x1157) (= x1424 (x457 x848)) (>= x658 0) (= (x833 x539) x1265) (>= 255 x1424) (<= x988 1461501637330902918203684832716283019655932542975) (<= x922 340282366920938463463374607431768211455) (= (x473 (+ 384 x1007)) x423) (< x984 18446744073709551616) (> 18446744073709551616 x1139) (= (x292 x585) x1139) (= (x473 (+ 64 x74)) x438) (>= x1117 0) (= 0 x930) (>= x1424 0) (= x210 (x473 (+ 64 x1079))) (>= x984 0) (<= 0 x922) (= 4 x899) (<= x1117 18446744073709551615) (= x1079 (x473 (+ 288 x1250))) (= (x224 (x941 x722) x1260 0) x582) (< x916 1461501637330902918203684832716283019655932542976) (= (x394 1461501637330902918203684832716283019655932542975 x1017) x20) (< x1117 18446744073709551616) (= (x344 x848 2) x462) (= x722 (x394 1461501637330902918203684832716283019655932542975 x353)) (<= x1139 18446744073709551615) (= 0 x1258) (= x658 x20) (> 18446744073709551616 x749) (= x1345 (x394 1461501637330902918203684832716283019655932542975 x9)) (>= 18446744073709551615 x984) (= (x473 (+ 64 x423)) x74) (= x1260 (x224 (x941 x1237) (x346 6) 0)) (= x984 (x1334 x462))) (and (=> (not x428) x1018) (=> (and (not (= x891 4062139261)) (= x899 x886) (= 4 x886) (>= x1392 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x931) (not (= 3257672857 x891)) (>= x1391 0) (< x468 1208925819614629174706176) (= x982 (x473 (+ 352 x423))) (= (x106 160) x247) x428 (= (x106 256) x1342) (>= x931 0) (= (x224 (x941 x847) (x346 1) 0) x1099) (= x345 (x106 160)) (= 1 x3) (not (= 2362581449 x891)) (= (x106 192) x937) (<= x468 1208925819614629174706175) (= x1107 (x106 224)) (< x1392 1208925819614629174706176) (= x227 (x473 (+ x423 288))) (= (x106 256) x80) (not (> 4 x886)) (not (< x891 2362581449)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x882) (= (x106 192) x1085) (= (x473 (+ x423 320)) x367) (= (x106 128) x1348) (>= x468 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x331) (<= 0 x331) (= x127 (x720 (x941 274184521717934524641157099916833587235))) (>= 1208925819614629174706175 x1392) (= 4272920204 x891) (> x127 0) (= x215 160) (= x1194 (x106 128)) (= x113 (x473 (+ 384 x423))) (= x713 (x106 224)) (= x931 (x271 x1099)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1391)) x1363))) x915))
(assert (x171 x15))
(assert (x171 x460))
(assert (x632 x270 x1083))
(assert (x171 x95))
(assert (x171 x821))
(assert (x171 x850))
(assert (x171 x1267))
(assert (x171 x551))
(assert (x171 x18))
(assert (x171 x1027))
(assert (x171 x809))
(assert (x171 x213))
(assert (x171 x727))
(assert (x1003 x353 x56))
(assert (x171 x1409))
(assert (x171 x777))
(assert (x171 x1170))
(assert (= 1208925819614629174706175 (x1310 (x346 1208925819614629174706175))))
(assert (= (=> (and (= x545 (ite x375 1 0)) (= (not x145) x375) (= (or (> x901 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x901 0) (= true (<= x901 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x145)) x46) x177))
(assert (= (x941 340282366920938463463374607431768211455) (x346 340282366920938463463374607431768211455)))
(assert (x171 x977))
(assert (x171 x283))
(assert (x171 x1358))
(assert (x171 x451))
(assert (x171 x816))
(assert (= (=> (= (or (> x151 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x151)) (< x151 0))) x65) (and (=> (and (not x65) (= 1 x849)) x608) (=> x65 x858))) x195))
(assert (x171 x272))
(assert (x326 x681 x1275))
(assert (x171 x604))
(assert (x171 x1020))
(assert (x171 x637))
(assert (x171 x1284))
(assert (x171 x853))
(assert (x171 x520))
(assert (x171 x1275))
(assert (x171 x358))
(assert (x171 x1236))
(assert (x402 x390))
(assert (x171 x1375))
(assert (= (+ 2 (x1310 x700)) (x1310 (x344 x700 2))))
(assert (x171 x606))
(assert (x171 x1044))
(assert (x171 x405))
(assert (x171 x984))
(assert (= 1208925819614629174706176 (x1310 (x346 1208925819614629174706176))))
(assert (x171 x353))
(assert (x171 x1221))
(assert (x171 x784))
(assert (x171 x1200))
(assert (x171 x1063))
(assert (x171 x1103))
(assert (x171 x322))
(assert (x171 x170))
(assert (x402 x1037))
(assert (x171 x838))
(assert (x171 x85))
(assert (x171 x483))
(assert (x171 x299))
(assert (x171 x420))
(assert (= (or x477 (and x1313 (not x817))) x53))
(assert (x171 x1087))
(assert (x171 x1367))
(assert (=> (>= 10000 x1403) (= (x941 x1403) (x346 x1403))))
(assert (= x333 (x1310 (x941 x333))))
(assert (= x296 (x1310 (x941 x296))))
(assert (=> (<= x1378 10000) (= (x941 x1378) (x346 x1378))))
(assert (x171 x207))
(assert (x171 x900))
(assert (x171 x1222))
(assert (x402 x136))
(assert (x402 274184521717934524641157099916833587210))
(assert (x171 x1342))
(assert (x402 x368))
(assert (x171 x442))
(assert (x171 x1401))
(assert (x171 x666))
(assert (x171 x197))
(assert (= (x93 x1045) (ite (= x238 x1045) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x786 x1045))))
(assert (x171 x559))
(assert (x171 x36))
(assert (= x526 (=> (and (= (not x211) x458) (= (= 0 x625) x211) (= (ite x458 1 0) x637)) (=> (= x740 (not (= x637 0))) x356))))
(assert (x171 x946))
(assert (x171 x155))
(assert (= (x1310 (x941 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x171 x1176))
(assert (x171 x522))
(assert (= (x1310 (x346 950698303)) 950698303))
(assert (=> (<= x718 10000) (= (x941 x718) (x346 x718))))
(assert (x402 274184521717934524641157099916833587235))
(assert (x326 x166 x384))
(assert (= (or (and x1209 x1122) (and x1146 x450)) x969))
(assert (x171 x471))
(assert (x117 x1293))
(assert (= x615 (=> (= x1195 (= x1048 274184521717934524641157099916833587233)) (and (=> (not x1195) x1067) (=> (and (< x67 1208925819614629174706176) (not (= x186 2362581449)) (> 1208925819614629174706176 x1108) (= (x473 (+ x119 352)) x1267) (> x973 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x49) (not (> 2362581449 x186)) (= (x561 160) x1183) (not (< x505 4)) (>= x1108 0) (= x830 (x561 224)) (= x698 (x473 (+ 320 x119))) (= (x561 256) x494) (= x812 (x591 x575)) (= 1 x605) (= (x561 256) x1402) (= x186 4272920204) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1386) (= (x473 (+ x119 384)) x1022) x1195 (= x1321 (x473 (+ 288 x119))) (= (x561 192) x731) (= x463 160) (>= x67 0) (<= 0 x1386) (= (x224 (x941 x1223) (x346 1) 0) x575) (>= x812 0) (= (x720 (x941 274184521717934524641157099916833587233)) x973) (= x1054 115197700812830431890159100217698998050002284567939525164234024451216521560064) (<= x1108 1208925819614629174706175) (= (x561 128) x1246) (not (= x186 4062139261)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x812) (>= x49 0) (= x876 x505) (= x505 4) (= (x561 128) x157) (= (x561 160) x251) (not (= x186 3257672857)) (= (x561 224) x1093) (<= x67 1208925819614629174706175) (= (x561 192) x466)) x936)))))
(assert (= (x1310 (x346 1168994686)) 1168994686))
(assert (x171 x972))
(assert (=> (<= x1013 10000) (= (x941 x1013) (x346 x1013))))
(assert (x171 x1386))
(assert (x117 x322))
(assert (= 0 (x1000 x752)))
(assert (x171 x266))
(assert (x117 x35))
(assert (x171 x694))
(assert (= 0 (x710 x957)))
(assert (= (x941 20282409603651670423947251286015) (x346 20282409603651670423947251286015)))
(assert (x171 x939))
(assert (= x1020 (x1310 (x941 x1020))))
(assert (= (x346 2362581449) (x941 2362581449)))
(assert (= x139 (x1310 (x941 x139))))
(assert (= (and x385 (not x995)) x630))
(assert (x171 x1306))
(assert (x117 x1295))
(assert (x171 x929))
(assert (x171 x186))
(assert (x402 x190))
(assert (= (x346 2055092157) (x941 2055092157)))
(assert (x171 x488))
(assert (x111 x949))
(assert (x402 274184521717934524641157099916833587231))
(assert (x171 x743))
(assert (x171 x1086))
(assert (x171 x343))
(assert (x171 x997))
(assert (x117 x971))
(assert (x319 x544 x1372))
(assert (x402 x1013))
(assert (= (x1310 (x941 x1223)) x1223))
(assert (x117 x310))
(assert (x171 x1117))
(assert (=> (<= x1237 10000) (= (x346 x1237) (x941 x1237))))
(assert (x171 x515))
(assert (x117 x174))
(assert (= (x346 4062139261) (x941 4062139261)))
(assert (x171 x96))
(assert (x171 x431))
(assert (x171 x5))
(assert (x171 x1345))
(assert (= (x306 x114) 0))
(assert (= x775 (x1310 (x941 x775))))
(assert (x171 x1374))
(assert (= (+ 1 (x1310 x1080)) (x1310 (x344 x1080 1))))
(assert (= (x862 x996) (ite (= x809 x996) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x844 x996))))
(assert (= (x346 3257672857) (x941 3257672857)))
(assert (= x1031 (or (and x995 x385) (and x201 x1144))))
(assert (x171 x376))
(assert (x171 x937))
(assert (x171 x1305))
(assert (x171 x952))
(assert (= (x941 18446744073709551616) (x346 18446744073709551616)))
(assert (x171 x917))
(assert (x171 x253))
(assert (x171 x298))
(assert (x171 x574))
(assert (= (and x1031 x461) x1115))
(assert (= (x1244 x887) (ite (= x887 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x259 x887))))
(assert (x171 x1105))
(assert (x171 x717))
(assert (x171 x980))
(assert (x171 x492))
(assert (x171 x476))
(assert (= (x1167 x82) (ite (= x82 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x102 x82))))
(assert (= x624 (or (and x1115 x1280) x963)))
(assert (= 274184521717934524641157099916833587223 (x1310 (x941 274184521717934524641157099916833587223))))
(assert (x171 x1194))
(assert (= (x941 204737060) (x346 204737060)))
(assert (= (x941 372528908) (x346 372528908)))
(assert (= (x941 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x346 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x171 x626))
(assert (= (x1310 (x346 65535)) 65535))
(assert (= (x346 2059260625) (x941 2059260625)))
(assert (=> (>= 10000 x1002) (= (x346 x1002) (x941 x1002))))
(assert (x117 x949))
(assert (x171 x75))
(assert (= 480214969 (x1310 (x346 480214969))))
(assert (x171 x127))
(assert (= (x1310 (x941 x489)) x489))
(assert (x171 x1139))
(assert (x117 x173))
(assert (x117 x166))
(assert (x171 x1174))
(assert (x402 x718))
(assert (x171 x252))
(assert (x171 x563))
(assert (x171 x945))
(assert (x171 x1136))
(assert (x171 x269))
(assert (x171 x1223))
(assert (x402 x69))
(assert (x171 x711))
(assert (x632 x1401 x89))
(assert (x171 x434))
(assert (x402 x722))
(assert (= (ite (= x809 x657) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x844 x657)) (x862 x657)))
(assert (x171 x1085))
(assert (x632 x212 x1255))
(assert (x171 x254))
(assert (x171 x901))
(assert (x171 x432))
(assert (x632 x850 x795))
(assert (x171 x148))
(assert (x171 x1303))
(assert (x171 x978))
(assert (x171 x893))
(assert (x402 x15))
(assert (x171 x594))
(assert (x171 x1290))
(assert (= (x1310 (x346 274184521717934524641157099916833587233)) 274184521717934524641157099916833587233))
(assert (x171 x1408))
(assert (x171 x1266))
(assert (x171 x309))
(assert (x117 x148))
(assert (x171 x644))
(assert (x171 x1039))
(assert (x171 x103))
(assert (x171 x685))
(assert (x171 x1330))
(assert (x171 x1352))
(assert (= (x346 1558726628) (x941 1558726628)))
(assert (x171 x1143))
(assert (x402 x884))
(assert (x171 x573))
(assert (x171 x1094))
(assert (x171 x437))
(assert (= (x941 274184521717934524641157099916833587227) (x346 274184521717934524641157099916833587227)))
(assert (x171 x882))
(assert (x117 x1261))
(assert (x697 x175))
(assert (= (=> (= (= 274184521717934524641157099916833587233 x617) x1262) (and (=> (and (= x1086 (x720 (x941 274184521717934524641157099916833587233))) (not (> 2362581449 x273)) (= x1168 (x473 (+ 288 x395))) (= x612 (x135 160)) (<= x67 1208925819614629174706175) (> x1086 0) (<= 0 x773) (>= x67 0) (> 1208925819614629174706176 x1108) (= x273 4272920204) (= x1169 (x135 224)) (not (= 3257672857 x273)) (= (x473 (+ x395 352)) x252) (= x1052 (x135 128)) (= x1214 (x473 (+ x395 320))) (>= 1208925819614629174706175 x1108) (<= 0 x49) (<= 0 x1386) (= 1 x1001) (= (x135 160) x821) (= x541 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x1318 (x473 (+ x395 384))) (= x250 (x135 224)) x1262 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1386) (= x635 4) (= x635 x820) (> 1208925819614629174706176 x67) (= (x135 256) x898) (= (x135 192) x522) (<= 0 x1108) (not (> 4 x635)) (not (= x273 4062139261)) (<= x49 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x773) (= x773 (x591 x675)) (= (x224 (x941 x1378) (x346 1) 0) x675) (= (x135 128) x643) (= x1357 (x135 256)) (= (x135 192) x531) (not (= x273 2362581449)) (= 160 x1103)) x97) (=> (not x1262) x39))) x1009))
(assert (x171 x834))
(assert (x632 x934 x525))
(assert (= x1118 (=> (and (<= 0 x694) (< x694 256) (= (x224 (x941 x717) (x346 11) 0) x954) (>= 255 x694) (= x694 (x1159 x1187)) (= x1131 (x224 (x346 0) (x346 9) 0)) (= x902 (x785 x1131)) (= x1187 (x224 (x941 x902) x954 0)) (< x902 1461501637330902918203684832716283019655932542976) (= x1308 (= x694 0)) (<= x902 1461501637330902918203684832716283019655932542975) (= 0 x311) (>= x902 0)) (and (=> (not x1308) x524) (=> (and (= x1303 x766) x1308) x514)))))
(assert (x171 x389))
(assert (x117 x1208))
(assert (x171 x875))
(assert (x171 x1208))
(assert (x171 x2))
(assert (=> (<= x169 10000) (= (x941 x169) (x346 x169))))
(assert (x171 x689))
(assert (x117 x1330))
(assert (x171 x392))
(assert (x171 x1070))
(assert (x117 x270))
(assert (x171 x1175))
(assert (x171 x672))
(assert (x171 x1331))
(assert (=> (>= 10000 x559) (= (x346 x559) (x941 x559))))
(assert (= 1461501637330902918203684832716283019655932542975 (x1310 (x346 1461501637330902918203684832716283019655932542975))))
(assert (x171 x1364))
(assert (x171 x345))
(assert (x171 x1147))
(assert (=> (<= x902 10000) (= (x941 x902) (x346 x902))))
(assert (x171 x401))
(assert (= x1339 (and x950 x958)))
(assert (x171 x52))
(assert (x171 x467))
(assert (x171 x1016))
(assert (= x86 x671))
(assert (x117 x1379))
(assert (x171 x820))
(assert (= x1378 (x1310 (x941 x1378))))
(assert (= x1217 (=> (and (= (> x1133 0) x461) (= (x394 255 x1330) x1133) (= (x394 115792089237316195423570985008687907853269984665640564039457584007913129639904 x573) x230) (= x850 (x786 160)) (= (x786 256) x1135) (not (ite x1211 x1211 (and (> x850 170141183460469231731687303715884105727) (= (<= x850 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x394 340282366920938463463374607431768211455 x850) x498) (= (x473 (+ x230 128)) x446) (not (= 0 x2)) (> x756 0) (<= x1364 1208925819614629174706175) (= (x786 128) x1364) (= x935 (ite (or (= x756 0) (= x1063 0)) 0 (ite (= (< x1063 57896044618658097711785492504343953926634992332820282019728792003956564819968) (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x756)) (div (ite (< x1063 57896044618658097711785492504343953926634992332820282019728792003956564819968) x1063 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x94 (- x1063 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (< x756 57896044618658097711785492504343953926634992332820282019728792003956564819968) x756 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x94 (- x756 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1063) x1063 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x94 (- x1063 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x756) x756 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x94 (- x756 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (not x83) x1211) (>= 1208925819614629174706175 x1135) (= (x473 (+ 31 x765)) x573) (= (and (= (<= x850 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x850 0)) x83) (= x1063 (mod (* x498 (x1100 x748)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x851 0) (not (or (and (< x765 160) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x765))) (> x765 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x756 (x394 18446744073709551615 x544))) (and (=> x461 x68) (=> (and (not x461) (= x935 x140)) x43)))))
(assert (x171 x335))
(assert (=> (>= 10000 x78) (= (x941 x78) (x346 x78))))
(assert (x171 x1354))
(assert (x171 x1425))
(assert (x171 x151))
(assert (x319 x889 x1097))
(assert (x171 x808))
(assert (= x645 (or (and x304 (not x65)) x1238)))
(assert (x171 x842))
(assert (x171 x441))
(assert (= (x1310 (x346 170141183460469231731687303715884105727)) 170141183460469231731687303715884105727))
(assert (x171 x847))
(assert (= x825 (x1310 (x941 x825))))
(assert (x171 x544))
(assert (x171 x33))
(assert (x171 x1278))
(assert (x171 x1140))
(assert (x171 x845))
(assert (= x336 (or (and x1339 x1308) x323)))
(assert (= (x346 1100443145) (x941 1100443145)))
(assert (x171 x240))
(assert (x171 x327))
(assert (=> (<= x1408 10000) (= (x346 x1408) (x941 x1408))))
(assert (x171 x985))
(assert (x117 x670))
(assert (= (x1310 (x346 1558726628)) 1558726628))
(assert (x171 x399))
(assert (x171 x1132))
(assert (x171 x196))
(assert (x171 x949))
(assert (x402 x169))
(assert (x171 x652))
(assert (x117 x1401))
(assert (x171 x1022))
(assert (x171 x166))
(assert (x326 x125 x451))
(assert (= x1389 (x1310 (x941 x1389))))
(assert (= x225 (x1310 (x941 x225))))
(assert (= (=> (= x995 (= x1383 274184521717934524641157099916833587233)) (and (=> (and (<= 0 x673) (<= 0 x1386) (= (x600 224) x1328) (not (> 2362581449 x1026)) (> 1208925819614629174706176 x67) (< 0 x5) (not (= 3257672857 x1026)) (<= x1386 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x600 224) x1409) x995 (= x580 (x600 192)) (<= 0 x67) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1070) (< x1108 1208925819614629174706176) (= x905 (x600 128)) (= x184 (x600 256)) (not (> 4 x479)) (= (x600 256) x687) (= 1 x2) (= (x224 (x941 x1378) (x346 1) 0) x730) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x49) (= x673 (x591 x730)) (= x5 (x720 (x941 274184521717934524641157099916833587233))) (not (= x1026 2362581449)) (= (x600 192) x816) (<= 0 x49) (= x1026 4272920204) (= (x600 160) x234) (= x479 4) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x673) (not (= x1026 4062139261)) (= 160 x765) (= (x600 128) x741) (>= 1208925819614629174706175 x1108) (= x479 4) (<= x67 1208925819614629174706175) (>= x1108 0) (= (x600 160) x449)) x1217) (=> (not x995) x1215))) x163))
(assert (= (x941 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x346 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x171 x1227))
(assert (= (x1310 (x346 1099511627775)) 1099511627775))
(assert (x171 x280))
(assert (= x640 (x1310 (x941 x640))))
(assert (x402 x1020))
(assert (x171 x767))
(assert (x171 x447))
(assert (x171 x749))
(assert (x402 274184521717934524641157099916833587223))
(assert (= (x941 1208925819614629174706175) (x346 1208925819614629174706175)))
(assert (x623 x581 x686))
(assert (x117 x212))
(assert (=> (<= x47 10000) (= (x346 x47) (x941 x47))))
(assert (x402 x1408))
(assert (x171 x114))
(assert (x171 x35))
(assert (= (x1310 (x344 x565 1)) (+ 1 (x1310 x565))))
(assert (x171 x678))
(assert (x117 x1203))
(assert (x171 x1002))
(assert (= x368 (x1310 (x941 x368))))
(assert (x1003 x139 x242))
(assert (x117 x1049))
(assert (= (x1310 (x941 x1403)) x1403))
(assert (= (+ 2 (x1310 x585)) (x1310 (x344 x585 2))))
(assert (x402 x1403))
(assert (x171 x120))
(assert (x171 x1048))
(assert (x171 x1045))
(assert (x171 x1293))
(assert (= (=> (and (not x380) (= (x394 255 x1330) x1064) (= x380 (> x1064 1)) (= x1213 x1087)) x40) x1300))
(assert (= (+ (x1310 x1080) 2) (x1310 (x344 x1080 2))))
(assert (= x159 true))
(assert (= (ite (= 128 x657) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x347 x657)) (x146 x657)))
(assert (x117 x774))
(assert (x1003 x1379 x454))
(assert (x171 x1357))
(assert (x171 x1024))
(assert (x402 x1417))
(assert (x171 x1347))
(assert (x171 x236))
(assert (x171 x1383))
(assert (x117 x1247))
(assert (x171 x13))
(assert (= x48 (=> (and (= x429 (= 274184521717934524641157099916833587235 x642)) (= (x394 1461501637330902918203684832716283019655932542975 x322) x642) (= x716 128) (= x945 (x866 x888))) (and (=> (and (= (x757 160) x42) (<= 0 x1391) (not (> 4 x290)) (<= x1391 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x331 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2362581449 x743)) (= (x757 224) x358) (= x496 (x757 256)) (< x1392 1208925819614629174706176) (> 1208925819614629174706176 x468) (<= 0 x468) (= (x757 128) x653) (<= x468 1208925819614629174706175) (= (x271 x918) x1112) (= 4 x290) (>= 1208925819614629174706175 x1392) (= x794 (x757 128)) x429 (<= 0 x331) (= x602 (x757 224)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x917) (not (< x743 2362581449)) (<= 0 x1392) (= x1290 (x757 192)) (= x781 (x757 160)) (<= 0 x1112) (= x1035 1) (not (= x743 4062139261)) (= x574 (x757 192)) (< 0 x704) (<= x1112 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x224 (x941 x847) (x346 1) 0) x918) (= x704 (x720 (x941 274184521717934524641157099916833587235))) (= x1278 160) (= x300 (x757 256)) (not (= x743 3257672857)) (= 4 x290) (= 4272920204 x743)) x72) (=> (not x429) x388)))))
(assert (x171 x935))
(assert (x171 x742))
(assert (x171 x714))
(assert (x171 x396))
(assert (x171 x1006))
(assert (= (x259 x638) 0))
(assert (x171 x490))
(assert (x171 x340))
(assert (x117 x846))
(assert (x171 x301))
(assert (= (x1310 (x941 x902)) x902))
(assert (= (or x634 (and x1197 (not x101))) x116))
(assert (x117 x889))
(assert (= true x1067))
(assert (x171 x1346))
(assert (x117 x384))
(assert (x171 x1378))
(assert (x171 x484))
(assert true)
(assert (= (=> (and (= x1280 (= x1317 0)) (>= x1317 0) (<= x1234 1461501637330902918203684832716283019655932542975) (<= 0 x1234) (> 1461501637330902918203684832716283019655932542976 x1234) (= x1317 (x1159 x1356)) (= 0 x875) (= (x224 (x941 x1234) x953 0) x1356) (= x1231 (x224 (x346 0) (x346 9) 0)) (< x1317 256) (= (x224 (x941 x1417) (x346 11) 0) x953) (= (x785 x1231) x1234) (<= x1317 255)) (and (=> (not x1280) x706) (=> (and x1280 (= x935 x1109)) x826))) x68))
(assert (= 18446744073709551616 (x1310 (x346 18446744073709551616))))
(assert (= (x1310 (x346 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (= (x346 274184521717934524641157099916833587231) (x941 274184521717934524641157099916833587231)))
(assert (x117 x1039))
(assert (x171 x599))
(assert (x1003 x1247 x1309))
(assert (x319 x137 x948))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1310 (x346 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(assert (x402 x436))
(assert (=> (<= x678 10000) (= (x346 x678) (x941 x678))))
(assert (x171 x1424))
(assert (x117 x777))
(assert (x171 x774))
(assert (x171 x568))
(assert (x623 x187 x332))
(assert (x171 x1398))
(assert (x171 x1421))
(assert (x171 x1307))
(assert (= (x1310 (x941 x1234)) x1234))
(assert (x623 x774 x793))
(assert (x171 x1142))
(assert (x171 x1133))
(assert (= (and (not x1146) x450) x1209))
(assert (x171 x423))
(assert (x171 x468))
(assert (x117 x945))
(assert (x171 x635))
(assert (x623 x670 x701))
(assert (= (=> (and (= x196 (div x1228 1000000000000000000)) (not (ite x1029 x1029 (and (= (<= x934 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x934 170141183460469231731687303715884105727)))) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1303) (and (< x1303 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1303)))) 1 0) x681) (not (> x196 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= (x840 x460) x1142) (= x725 0) (= x233 (x516 x809)) (= (ite (or (and (> x213 x196) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x213) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x196))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x196) (<= x213 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x1275) (= (x394 x681 x1275) x838) (= (x473 (+ 64 x1114)) x657) (= x1114 (x473 (+ x809 64))) (>= 1208925819614629174706175 x430) (>= 1208925819614629174706175 x233) (= (x387 x896) x889) (= (ite (not x1069) 1 0) x125) (= (not x228) x1029) (= (x394 18446744073709551615 x1142) x71) (= x1228 (* x71 x641)) (= x596 (x394 340282366920938463463374607431768211455 x934)) (= (x516 x657) x430) (= x861 (x94 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1303))) (= x483 x766) (= x641 (div x1329 x619)) (= x451 (ite (or (and (> x861 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x196)) (and (< x861 x196) (= (<= x861 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x196 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (= x934 (x516 x996)) (= x725 (x394 x125 x451)) (= x619 (x394 18446744073709551615 x889)) (= (x473 (+ x24 64)) x896) (= (x473 (+ 288 x423)) x996) (= (x473 (+ x1303 x196)) x483) (not (= 0 x3)) (= x228 (and (> x934 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x934) true))) (= (x94 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1303)) x213) (< 0 x619) (< (* x641 x71) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x473 (+ x1327 64)) x460) (= 0 x838) (= (mod (* x922 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1329) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x215) true) (> 160 x215)) (> x215 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (or (and (= (<= x1303 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1303 0)) (> x1303 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1069)) x514) x1363))
(assert (=> (>= 10000 x1020) (= (x346 x1020) (x941 x1020))))
(assert (x77 x966 x1289 x865 x452))
(assert (x171 x733))
(assert (x171 x1112))
(assert (x632 x1387 x1110))
(assert (x632 x945 x366))
(assert (= x1237 (x1310 (x941 x1237))))
(assert (x171 x541))
(assert (x171 x704))
(assert (x171 x823))
(assert (x171 x360))
(assert (x117 340282366920938463463374607431768211455))
(assert (x171 x1317))
(assert (x171 x200))
(assert (x117 x581))
(assert (x171 x982))
(assert (x1003 x1141 x1191))
(assert (x171 x642))
(assert (x171 x1249))
(assert (= (x102 x1045) 0))
(assert (= x388 (=> (= x513 (= 274184521717934524641157099916833587233 x642)) (and (=> (and (<= 0 x49) (= x486 (x938 128)) (>= x1386 0) (= (x224 (x941 x847) (x346 1) 0) x1072) (= 4272920204 x476) (= x1305 115197700812830431890159100217698998050002284567939525164234024451216521560064) (<= x1386 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x938 160) x563) (not (< x728 4)) (= x1188 (x938 160)) (not (= 2362581449 x476)) (>= x1108 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x49) (>= 1208925819614629174706175 x67) (not (= x476 3257672857)) (= x33 (x938 256)) (<= 0 x997) (= 160 x1278) (< x67 1208925819614629174706176) (= x997 (x591 x1072)) (= (x938 192) x1381) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x997) (= (x938 128) x689) (not (= 4062139261 x476)) (= (x938 224) x736) (< 0 x1347) (<= x1108 1208925819614629174706175) x513 (= 4 x728) (= x728 4) (> 1208925819614629174706176 x1108) (= x465 (x938 256)) (not (< x476 2362581449)) (<= 0 x67) (= 1 x1035) (= x1347 (x720 (x941 274184521717934524641157099916833587233))) (= x258 (x938 192)) (= x644 (x938 224))) x72) (=> (not x513) x1377)))))
(assert (x171 x1188))
(assert (x171 x729))
(assert (x171 x1079))
(assert (x402 x775))
(assert (x171 x725))
(assert (x111 x581))
(assert (x171 x716))
(assert (x171 x1192))
(assert (x171 x876))
(assert (= x1313 (and x1339 (not x1308))))
(assert (x171 x548))
(assert (x171 x233))
(assert (= (=> (and (not (= 0 x1001)) (>= 1208925819614629174706175 x374) (= x823 (x394 18446744073709551615 x137)) (= x137 (x393 x1287)) (= x1045 (x473 (+ 64 x669))) (= 0 x1307) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x546 x823)) (= x275 (* x823 x546)) (= x166 (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x935) true) (< x935 0)) (> x935 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0)) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x712)) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1103)) (> 160 x1103)) (> x1103 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x783) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x712)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x712) (<= x783 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x783 x712))) 1 0) x384) (< 0 x1137) (= 0 x1326) (= (mod (* x613 x808) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1222) (= (and (> x1387 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1387))) x23) (= (x394 340282366920938463463374607431768211455 x1387) x808) (= x1227 x1109) (= (x1325 x291) x971) (not (ite x910 x910 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1387) true) (> x1387 170141183460469231731687303715884105727)))) (= (x394 18446744073709551615 x971) x1137) (>= 1208925819614629174706175 x684) (= x546 (div x1222 x1137)) (= (x94 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x935)) x783) (= (or (and (= true (<= x935 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x935 0)) (> x935 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x719) (= x910 (not x23)) (= (div x275 1000000000000000000) x712) (= (x394 x1277 x1208) x1307) (= (x473 (+ x752 64)) x291) (= (x394 x166 x384) x1326) (= x1277 (ite (not x719) 1 0)) (= x82 (x473 (+ 288 x395))) (= (x633 x1045) x684) (= x669 (x473 (+ x238 64))) (= (x94 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x935)) x1425) (= x1287 (x473 (+ x114 64))) (= x1208 (ite (or (and (> x712 x1425) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1425) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x712))) (and (> x1425 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x712 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= (x633 x82) x1387) (= (x473 (+ x935 x712)) x1227) (= (x633 x238) x374)) x826) x97))
(assert (x171 x934))
(assert (x1003 x1271 x28))
(assert (= (x941 170141183460469231731687303715884105727) (x346 170141183460469231731687303715884105727)))
(assert (x623 x456 x589))
(assert (x171 x258))
(assert (x171 x1405))
(assert (= (x63 x13) 0))
(assert (x171 x181))
(assert (x171 x884))
(assert (x171 x1109))
(assert (x171 x1277))
(assert (= 274184521717934524641157099916833587223 (x1310 (x346 274184521717934524641157099916833587223))))
(assert (= (ite (= 128 x1045) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x102 x1045)) (x1167 x1045)))
(assert (x171 x773))
(assert (x171 x50))
(assert (= (x941 1168994686) (x346 1168994686)))
(assert (= (x1310 (x346 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x402 x296))
(assert (x171 x338))
(assert (x117 x681))
(assert (x171 x854))
(assert (= x1037 (x1310 (x941 x1037))))
(assert (= x53 x450))
(assert (=> (<= x1223 10000) (= (x941 x1223) (x346 x1223))))
(assert (x117 x1277))
(assert (x171 x1281))
(assert (x171 x653))
(assert (x171 x8))
(assert (x171 x1387))
(assert (x171 x769))
(assert (x171 x612))
(assert (x171 x1214))
(assert (x326 x18 x1272))
(assert (= (=> (and (>= 255 x1127) (= (x1159 x217) x1127) (<= x825 1461501637330902918203684832716283019655932542975) (< x1127 256) (< x825 1461501637330902918203684832716283019655932542976) (>= x1127 0) (= (= x1127 0) x1154) (= x217 (x224 (x941 x825) x1179 0)) (= (x224 (x346 0) (x346 9) 0) x871) (= (x785 x871) x825) (= (x224 (x941 x136) (x346 11) 0) x1179) (>= x825 0) (= x767 0)) (and (=> (not x1154) x195) (=> (and x1154 (= x1213 x151)) x1300))) x555))
(assert (x171 x1298))
(assert (x171 x234))
(assert (= (x941 1461501637330902918203684832716283019655932542976) (x346 1461501637330902918203684832716283019655932542976)))
(assert (x171 x712))
(assert (= (=> (and (= x231 (x394 255 x58)) (= x807 (x473 (+ 64 x338))) (= (x473 (+ x405 64)) x1132) (= x1212 (x224 (x941 x390) (x346 6) 0)) (= (x512 x91) x1271) (< x221 18446744073709551616) (> 18446744073709551616 x968) (= (x473 (+ 288 x750)) x13) (>= x185 0) (= x727 (x1240 x1080)) (<= 0 x770) (= x1027 (x473 (+ 512 x750))) (<= 0 x727) (= (x344 x1080 2) x835) (> 18446744073709551616 x770) (= x742 0) (>= x490 0) (= x405 (x473 (+ x1006 64))) (= x390 (x394 1461501637330902918203684832716283019655932542975 x1379)) (= x338 (x473 (+ x1198 64))) (= x1219 (x394 1461501637330902918203684832716283019655932542975 x1271)) (= (x344 x700 2) x32) (= (x224 (x346 0) (x346 9) 0) x182) (<= x770 18446744073709551615) (= x1219 x327) (< x727 1461501637330902918203684832716283019655932542976) (= (x224 (x941 x718) x1212 0) x1185) (<= 0 x590) (= 0 x278) (< x590 256) (>= 255 x590) (= x1048 (x394 1461501637330902918203684832716283019655932542975 x1247)) (< x327 1461501637330902918203684832716283019655932542976) (>= x885 0) (= x968 (x1334 x835)) (<= 0 x221) (= (= x1048 274184521717934524641157099916833587235) x798) (<= x185 340282366920938463463374607431768211455) (= (x457 x1080) x590) (= x885 (x38 x835)) (= (x473 (+ 384 x1220)) x119) (= x520 (x833 x32)) (= x700 (x344 x1080 1)) (= x185 (x1206 x1185)) (= x718 (x394 1461501637330902918203684832716283019655932542975 x35)) (>= x968 0) (>= 340282366920938463463374607431768211455 x520) (= (x473 (+ 288 x750)) x91) (= (x473 (+ 64 x91)) x1198) (= x1080 (x224 (x346 0) (x346 10) 0)) (>= 1461501637330902918203684832716283019655932542975 x327) (> 340282366920938463463374607431768211456 x520) (= x1247 (x629 x957)) (= x490 (x868 x700)) (>= 1461501637330902918203684832716283019655932542975 x490) (<= x727 1461501637330902918203684832716283019655932542975) (= 4 x876) (= (x512 x13) x35) (= x58 (x610 x119)) (> 340282366920938463463374607431768211456 x185) (= x770 (x692 x835)) (= (x292 x700) x221) (> 1461501637330902918203684832716283019655932542976 x490) (<= x968 18446744073709551615) (<= x885 18446744073709551615) (= (x473 (+ 64 x119)) x957) (= x327 (x785 x182)) (<= 0 x520) (> 18446744073709551616 x885) (<= x221 18446744073709551615) (= (x473 (+ x119 64)) x1006) (= x231 0) (<= 0 x327)) (and (=> (not x798) x615) (=> (and (= x1199 (x528 160)) (not (< x788 4)) (= x515 (x473 (+ 320 x119))) (= x237 (x473 (+ x119 384))) (= (x528 256) x1091) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x331) (= (x528 160) x1019) (>= 1208925819614629174706175 x468) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1391) (<= 0 x468) (= (x528 128) x27) (not (= x1143 2362581449)) (= x262 (x528 256)) (>= x1391 0) (= x876 x788) (= x488 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x224 (x941 x1223) (x346 1) 0) x709) (= x860 (x528 192)) (> 1208925819614629174706176 x1392) (> x1028 0) (= x1143 4272920204) (<= 0 x331) (= (x528 192) x1200) (= (x473 (+ 352 x119)) x96) (= x788 4) (= x631 (x528 128)) (= x1028 (x720 (x941 274184521717934524641157099916833587235))) (= 160 x463) (= x977 (x473 (+ 288 x119))) (not (= 4062139261 x1143)) (= x759 (x271 x709)) (>= x759 0) (not (> 2362581449 x1143)) (<= 0 x1392) (<= x1392 1208925819614629174706175) (= (x528 224) x1233) (not (= 3257672857 x1143)) (= 1 x605) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x759) (= (x528 224) x1041) x798 (< x468 1208925819614629174706176)) x936))) x858))
(assert (x1003 x35 x121))
(assert (x171 x27))
(assert (= x873 (or (and x819 x1195) (and x1033 x798))))
(assert (x171 x1092))
(assert (=> (>= 10000 x15) (= (x941 x15) (x346 x15))))
(assert (x171 x647))
(assert (x171 x160))
(assert (x171 x421))
(assert (x171 x205))
(assert (x171 x731))
(assert (x171 x1107))
(assert (x171 x1114))
(assert (= x1408 (x1310 (x941 x1408))))
(assert (= (x346 1099511627775) (x941 1099511627775)))
(assert (x171 x222))
(assert (= (x1310 (x346 274184521717934524641157099916833587210)) 274184521717934524641157099916833587210))
(assert (x171 x49))
(assert (x171 x788))
(assert (x171 x765))
(assert (x171 x291))
(assert (x171 x500))
(assert (x171 x348))
(assert (=> (<= x847 10000) (= (x941 x847) (x346 x847))))
(assert (x117 x187))
(assert (= x608 (=> (and (< 0 x849) (= x350 x368)) x274)))
(assert (= true x1377))
(assert (x171 x830))
(assert (x171 x416))
(assert (= (=> (= (= x764 274184521717934524641157099916833587233) x1122) (and (=> (and (= x1170 (x659 224)) (<= 0 x49) (= (x224 (x941 x1223) (x346 1) 0) x571) (<= x1108 1208925819614629174706175) (not (= 4062139261 x1319)) (= x1284 (x659 192)) x1122 (<= x49 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x690 (x659 160)) (> 1208925819614629174706176 x67) (= 4272920204 x1319) (not (= 3257672857 x1319)) (<= 0 x455) (= (x591 x571) x455) (= (x720 (x941 274184521717934524641157099916833587233)) x95) (= 4 x55) (= x1125 160) (= 1 x1076) (not (< x1319 2362581449)) (>= 1208925819614629174706175 x67) (= x364 (x659 128)) (= x586 (x659 256)) (= x1306 (x659 160)) (<= 0 x67) (not (= x1319 2362581449)) (> x95 0) (= 4 x55) (= x1153 (x659 192)) (= (x659 224) x1192) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x943) (= (x659 256) x330) (>= x1108 0) (not (< x55 4)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x455) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1386) (<= 0 x1386) (< x1108 1208925819614629174706176) (= (x659 128) x320)) x1120) (=> (not x1122) x397))) x1102))
(assert (x171 x669))
(assert (x171 x350))
(assert (x117 x1017))
(assert (x171 x174))
(assert (x171 x342))
(assert (=> (>= 10000 x1004) (= (x941 x1004) (x346 x1004))))
(assert (= (x1310 (x346 1736444767)) 1736444767))
(assert (x1003 x510 x154))
(assert (x171 x673))
(assert (= 274184521717934524641157099916833587244 (x1310 (x346 274184521717934524641157099916833587244))))
(assert (x171 x1152))
(assert (= (x352 x896) 0))
(assert (= x201 x1098))
(assert (x171 x874))
(assert (= x514 (=> (and (= x766 x901) (= x1276 (> x952 1)) (not x1276) (= (x394 255 x1330) x952)) x177)))
(assert (x402 x640))
(assert (x623 x1039 x501))
(assert (x171 x227))
(assert (x171 x489))
(assert (x171 x902))
(assert (x171 x474))
(assert (= (x1310 (x346 204737060)) 204737060))
(assert (x171 x436))
(assert (x171 x1265))
(assert (x171 x256))
(assert (x171 x361))
(assert (x171 x311))
(assert (x402 274184521717934524641157099916833587244))
(assert (x171 x1237))
(assert (x171 x136))
(assert (= x1098 x645))
(assert (x171 x971))
(assert (= x1417 (x1310 (x941 x1417))))
(assert (x171 x756))
(assert (x171 x739))
(assert (x171 x735))
(assert (x319 x1142 x857))
(assert (= (x1310 (x941 x884)) x884))
(assert (x171 x996))
(assert (x171 x510))
(assert (x117 x1275))
(assert (= (+ (x1310 x848) 1) (x1310 (x344 x848 1))))
(assert (= (x1310 (x941 x717)) x717))
(assert (x171 x144))
(assert (x111 x670))
(assert (x171 x262))
(assert (x171 x783))
(assert (x171 x1365))
(assert (x402 x678))
(assert (x171 x1234))
(assert (x171 x175))
(assert (x171 x1010))
(assert (x171 x1319))
(assert (= 0 (x1311 x460)))
(assert (x171 x58))
(assert (x171 x998))
(assert (x171 x1054))
(assert (x171 x320))
(assert (x171 x438))
(assert (= (x941 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x346 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (= (+ 2 (x1310 x565)) (x1310 (x344 x565 2))))
(assert (x171 x737))
(assert (x171 x286))
(assert (x171 x807))
(assert (x111 x1140))
(assert (x171 x1064))
(assert (= x1002 (x1310 (x941 x1002))))
(assert (= (x1310 (x346 274184521717934524641157099916833587235)) 274184521717934524641157099916833587235))
(assert (x171 x590))
(assert (x623 x148 x523))
(assert (= (=> (and (= (or (not x655) x1173) x1256) (= x1173 x740)) x1256) x356))
(assert (x171 x1203))
(assert (= (x1310 (x346 1100443145)) 1100443145))
(assert (x171 x966))
(assert (x171 x1028))
(assert (= 18446744073709551615 (x1310 (x346 18446744073709551615))))
(assert (= x1004 (x1310 (x941 x1004))))
(assert (= 318876285 (x1310 (x346 318876285))))
(assert (x632 x748 x1058))
(assert (x171 x750))
(assert (x171 x508))
(assert (x1003 x361 x921))
(assert (= (x346 274184521717934524641157099916833587233) (x941 274184521717934524641157099916833587233)))
(assert (x171 x82))
(assert (x171 x662))
(assert (= (x346 1752364190) (x941 1752364190)))
(assert (= (x1310 (x346 4272920204)) 4272920204))
(assert (x480 x1330 x226))
(assert (x171 x1381))
(assert (x171 x44))
(assert (x402 x225))
(assert (x171 x829))
(assert (x402 x409))
(assert (= x169 (x1310 (x941 x169))))
(assert (x117 x175))
(assert (x171 x1399))
(assert (= x559 (x1310 (x941 x559))))
(assert (x117 18446744073709551615))
(assert (=> (<= x722 10000) (= (x941 x722) (x346 x722))))
(assert (x171 x161))
(assert (= (=> (= (= x1345 274184521717934524641157099916833587233) x702) (and (=> (and (not (< x1176 4)) (not (= 3257672857 x1375)) (= (x660 192) x685) (= x3 1) (< x1108 1208925819614629174706176) (= x293 (x660 224)) (= (x720 (x941 274184521717934524641157099916833587233)) x467) (= (x591 x994) x928) (= (x473 (+ x423 288)) x647) (= (x660 128) x351) (>= x1108 0) (>= 1208925819614629174706175 x67) (= x853 (x660 192)) (= (x660 160) x339) (= x376 (x473 (+ 320 x423))) (>= x49 0) (<= x928 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x49) (>= x1386 0) (= x1010 (x660 256)) (not (= 4062139261 x1375)) (= x1176 4) (= x1291 (x660 160)) (= x1176 x899) (= (x224 (x941 x847) (x346 1) 0) x994) (= 160 x215) (= x471 (x660 256)) (= x312 (x660 224)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x986) (< 0 x467) (<= x1386 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x67 1208925819614629174706176) (= (x473 (+ x423 352)) x205) (>= 1208925819614629174706175 x1108) (<= 0 x67) (not (< x1375 2362581449)) (not (= 2362581449 x1375)) x702 (= x396 (x660 128)) (>= x928 0) (= x1375 4272920204) (= x732 (x473 (+ x423 384)))) x1363) (=> (not x702) x159))) x1018))
(assert (x171 x1403))
(assert (x697 x945))
(assert (x171 x237))
(assert (x171 x230))
(assert (x117 x1204))
(assert (x171 x479))
(assert (x171 x84))
(assert (x171 x895))
(assert (= x190 (x1310 (x941 x190))))
(assert (x171 x1271))
(assert (x171 x505))
(assert (x171 x1082))
(assert (x117 x125))
(assert (x171 x1060))
(assert (x171 x923))
(assert (= (x941 115197700812830431890159100217698998050002284567939525164234024451216521560064) (x346 115197700812830431890159100217698998050002284567939525164234024451216521560064)))
(assert (x171 x377))
(assert (x171 x1178))
(assert (x171 x1052))
(assert (x171 x641))
(assert (= x999 (=> (and (<= x1392 1208925819614629174706175) (= x264 (x1062 (x941 274184521717934524641157099916833587223))) (>= 18446744073709551615 x1065) (= (x1062 (x941 274184521717934524641157099916833587231)) x1155) (= x253 (x1062 (x941 274184521717934524641157099916833587233))) (>= 1208925819614629174706175 x1108) (>= x506 0) (= 4 x1104) (<= x197 255) (= x800 (> (x720 (x941 274184521717934524641157099916833587233)) 0)) (<= x314 255) (<= 0 x908) (= x354 x604) (= x983 (< 0 (x720 (x941 274184521717934524641157099916833587235)))) (<= 0 x67) (<= 0 x1392) (<= 0 x985) x415 (= (> (x720 (x941 274184521717934524641157099916833587210)) 0) x914) (<= 0 x1155) (= x350 x15) (<= 0 x1030) (>= 1461501637330902918203684832716283019655932542975 x31) (<= x67 1208925819614629174706175) (<= 0 x92) (<= 0 x979) x983 (<= 0 x197) (<= x506 1099511627775) (<= x499 255) (<= 0 x1108) (<= x908 18446744073709551615) (>= x178 0) (<= x92 20282409603651670423947251286015) (= x1032 x350) (>= 1461501637330902918203684832716283019655932542975 x604) (<= x663 20282409603651670423947251286015) (<= x178 18446744073709551615) (<= 0 x392) (>= 20282409603651670423947251286015 x442) (= x301 (x1062 (x941 274184521717934524641157099916833587244))) (>= 1099511627775 x392) (>= x499 0) (>= x264 0) (= x985 (x1062 (x941 274184521717934524641157099916833587210))) (<= 0 x11) (= x1426 (x1062 (x941 274184521717934524641157099916833587227))) (<= 0 x36) (<= x350 1461501637330902918203684832716283019655932542975) (>= x933 0) (<= x11 20282409603651670423947251286015) (= x1299 (x1062 (x941 274184521717934524641157099916833587235))) (>= 18446744073709551615 x36) (= (< 0 (x720 (x941 274184521717934524641157099916833587223))) x87) (<= x508 18446744073709551615) (>= x929 0) (>= x1065 0) (= x1264 x31) (= x360 372528908) (= (< 0 (x720 (x941 274184521717934524641157099916833587227))) x12) (= x1196 false) (<= 0 x1426) (= false x398) (>= x604 0) (<= 0 x314) (>= x301 0) (>= x1299 0) x12 (<= x933 18446744073709551615) (= x1053 false) (= (< 0 (x720 (x941 274184521717934524641157099916833587231))) x1412) x960 (= x1193 false) (<= x468 1208925819614629174706175) (= 274184521717934524641157099916833587210 x1266) x87 (>= 255 x929) (= x415 (< 0 (x720 (x941 274184521717934524641157099916833587244)))) x914 x1412 (<= 0 x663) (<= x979 18446744073709551615) (<= 0 x350) (<= 0 x253) x800 (<= 0 x468) (= x960 (not (= x1032 274184521717934524641157099916833587210))) (<= 0 x508) (<= 0 x31) (<= 0 x442) (>= 18446744073709551615 x1030)) x1314)))
(assert (x171 x66))
(assert (x171 x789))
(assert (x171 x988))
(assert (x117 x966))
(assert (x171 x354))
(assert (= (and x969 x1180) x1145))
(assert (x171 x1153))
(assert (x117 x934))
(assert (x402 x1234))
(assert (x171 x687))
(assert (x171 x448))
(assert (x171 x732))
(assert (x480 x846 x947))
(assert (x171 x384))
(assert (x171 x296))
(assert (x171 x596))
(assert (x171 x728))
(assert (x77 x573 x124 x699 x597))
(assert (x117 x1140))
(assert (x171 x707))
(assert (x171 x916))
(assert (x171 x307))
(assert (x171 x1258))
(assert (x171 x449))
(assert (= (x346 318876285) (x941 318876285)))
(assert (x171 x210))
(assert (= x436 (x1310 (x941 x436))))
(assert (x171 x1327))
(assert (=> (>= 10000 x946) (= (x346 x946) (x941 x946))))
(assert (= x1013 (x1310 (x941 x1013))))
(assert (= (x1310 (x346 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (x171 x395))
(assert (x171 x657))
(assert (x171 x456))
(assert (x171 x1295))
(assert (x402 x139))
(assert (x171 x851))
(assert (x171 x187))
(assert (= 0 (x347 x996)))
(assert (=> (>= 10000 x1037) (= (x941 x1037) (x346 x1037))))
(assert (= (x941 115792089237316195423570985008687907853269984655499359237631748795939503996928) (x346 115792089237316195423570985008687907853269984655499359237631748795939503996928)))
(assert (x171 x1326))
(assert (x171 x766))
(assert (= 340282366920938463463374607431768211455 (x1310 (x346 340282366920938463463374607431768211455))))
(assert (= (x1310 (x346 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x171 x20))
(assert (x171 x400))
(assert (x171 x81))
(assert (x111 x456))
(assert (=> (<= x139 10000) (= (x941 x139) (x346 x139))))
(assert (=> (>= 10000 x225) (= (x941 x225) (x346 x225))))
(assert (x171 x581))
(assert (x111 x777))
(assert (x171 x331))
(assert (x171 x26))
(assert (x171 x24))
(assert (x171 x1076))
(assert (x171 x140))
(assert (x171 x1013))
(assert (x1003 x1293 x715))
(assert (x402 x1002))
(assert (x171 x270))
(assert (x171 x542))
(assert (x171 x911))
(assert (x171 x351))
(assert (= x361 (x1310 (x941 x361))))
(assert (x319 x173 x1077))
(assert (x171 x1392))
(assert (x171 x986))
(assert (x171 x1008))
(assert (x171 x499))
(assert (x171 x770))
(assert (x171 x674))
(assert (x171 x74))
(assert (x171 x1001))
(assert (x171 x1384))
(assert (x171 x113))
(assert (= 274184521717934524641157099916833587235 (x1310 (x941 274184521717934524641157099916833587235))))
(assert (x171 x1404))
(assert (x171 x638))
(assert (x171 x498))
(assert (x171 x1104))
(assert (x171 x212))
(assert (x171 x1135))
(assert (= (x941 1736444767) (x346 1736444767)))
(assert (x171 x383))
(assert (x171 x98))
(assert (x171 x905))
(assert (= (x346 950698303) (x941 950698303)))
(assert (x171 x1084))
(assert (x1003 x1017 x62))
(assert (x623 x888 x940))
(assert (x171 x1379))
(assert (x171 x1416))
(assert (= (x259 x887) 0))
(assert (x1003 x9 x1415))
(assert (x171 x990))
(assert (x171 x698))
(assert (x171 x373))
(assert (x171 x1426))
(assert (x171 x713))
(assert (=> (>= 10000 x69) (= (x941 x69) (x346 x69))))
(assert (= 0 (x109 x24)))
(assert (x171 x11))
(assert (x171 x822))
(assert (x171 x365))
(assert (= (x1244 x638) (ite (= 128 x638) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x259 x638))))
(assert (x171 x736))
(assert (=> (<= x775 10000) (= (x941 x775) (x346 x775))))
(assert (x171 x364))
(assert (= (x1310 (x346 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x171 x185))
(assert (x171 x1299))
(assert (x171 x1017))
(assert (x171 x722))
(assert (x623 x1140 x987))
(assert (x171 x157))
(assert (= (ite (= x1027 x887) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x815 x887)) (x981 x887)))
(assert (x326 x1277 x1208))
(assert (=> (>= 10000 x489) (= (x941 x489) (x346 x489))))
(assert (x319 x971 x556))
(assert (x623 x98 x744))
(assert (x111 x310))
(assert (=> (>= 10000 x1389) (= (x941 x1389) (x346 x1389))))
(assert (x623 x1049 x654))
(assert (x480 x845 x607))
(assert (x171 x752))
(assert (x171 x1019))
(assert (x171 x1400))
(assert (= (x941 274184521717934524641157099916833587210) (x346 274184521717934524641157099916833587210)))
(assert (x402 x946))
(assert (x171 x367))
(assert (= (x1310 (x941 x722)) x722))
(assert (x171 x904))
(assert (x171 x570))
(assert (= (and x817 x1313) x695))
(assert (x117 x1253))
(assert (= x108 (and x824 (not x429))))
(assert (x171 x1220))
(assert (=> (<= x136 10000) (= (x941 x136) (x346 x136))))
(assert (x171 x506))
(assert (x171 x1065))
(assert (not x999))
(assert (x171 x843))
(assert (x171 x250))
(assert (= 20282409603651670423947251286016 (x1310 (x346 20282409603651670423947251286016))))
(assert (x623 x310 x903))
(assert (x171 x889))
(assert (x77 x447 x646 x470 x1242))
(assert (x171 x530))
(assert (= (x941 1208925819614629174706176) (x346 1208925819614629174706176)))
(assert (= (=> (and (not (= x1024 2000660004)) (= x1283 (x224 (x941 x368) (x346 5) 0)) (not (< x1024 1168994686)) (not (= 1558726628 x1024)) (not (> 950698303 x1024)) (<= 0 x1039) (= 2059260625 x1024) (not (= 1736444767 x1024)) (> x172 0) (= (x866 x1039) x834) (not (> 1558726628 x1024)) (= (x720 (x941 274184521717934524641157099916833587210)) x172) (> 2059964113 x1024) (= x1039 (x507 x1283)) (<= x1039 20282409603651670423947251286015) (not (= x1024 1752364190)) (<= x368 1461501637330902918203684832716283019655932542975) (= x834 x1147) (> 20282409603651670423947251286016 x1039) (not (= 2055092157 x1024))) (=> (and (= (x866 x581) x1008) (or (and (<= 0 x1030) (= x1358 (x94 (- 0 x307))) (not (= x1008 115792089237316195423570985008687907853269984655499359237631748795939503996928)) x962 (> 18446744073709551616 x1030) (= (x94 (- 0 x1008)) x774) (= x307 (x866 x1140)) (= x939 (x394 20282409603651670423947251286015 x1140)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x165 x1030)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x307)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x774) (and (= (<= x774 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x774)))) (= (* x1030 x165) x1074) (not (> x939 10141204801825835211973625643007)) (= x165 (x394 20282409603651670423947251286015 x774)) (<= x1030 18446744073709551615) (= x1358 x777) (= (div x1074 1000000000000000) x1140)) (and (not (< 10141204801825835211973625643007 x542)) (<= 0 x36) (= (x394 20282409603651670423947251286015 x187) x542) (<= x36 18446744073709551615) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x54 x36)) (= x777 x187) (< x36 18446744073709551616) (not x962) (= x1393 (* x54 x36)) (= (x394 20282409603651670423947251286015 x1008) x54) (not (or (and (< x1008 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1008))) (> x1008 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (div x1393 1000000000000000) x187))) (> 1168994686 x181) (= (x791 x1366) x1417) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1008) (and (< x1008 0) (= (<= x1008 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x962) (= (x224 (x941 x361) (x346 5) 0) x1012) (>= 20282409603651670423947251286015 x581) (= (x720 (x941 274184521717934524641157099916833587210)) x1092) (< 0 x1092) (= x181 950698303) (= x361 x350) (<= 0 x581) (< x181 2059964113) (= x1366 (x224 (x941 x361) (x346 5) 0)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x869) (and (= true (<= x869 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x869))) x655) (< x181 1100443145) (> 20282409603651670423947251286016 x581) (not (< x181 950698303)) (< x1417 65536) (= (x507 x1012) x581) (>= 1461501637330902918203684832716283019655932542975 x361) (<= 0 x1417) (= 0 x220) (= x1147 x869) (<= x1417 65535)) x1407)) x274))
(assert (= x560 (=> (and (= (= 274184521717934524641157099916833587235 x617) x649) (<= x662 1461501637330902918203684832716283019655932542975) (>= x613 0) (= (x868 x391) x16) (= (x473 (+ x1162 64)) x1405) (< x613 340282366920938463463374607431768211456) (= (x473 (+ x395 64)) x1162) (= x565 (x224 (x346 0) (x346 10) 0)) (= (x224 (x941 x1004) (x346 6) 0) x942) (= (x394 1461501637330902918203684832716283019655932542975 x361) x1004) (= x1178 (x473 (+ x373 64))) (= x60 (x344 x565 2)) (= x1204 (x913 x373)) (> 18446744073709551616 x1351) (> 340282366920938463463374607431768211456 x1274) (>= 340282366920938463463374607431768211455 x1274) (> 1461501637330902918203684832716283019655932542976 x662) (= 0 x874) (> 256 x162) (>= x1362 0) (> 18446744073709551616 x500) (= x752 (x473 (+ 288 x446))) (> 1461501637330902918203684832716283019655932542976 x277) (<= 0 x662) (= x391 (x344 x565 1)) (<= x16 1461501637330902918203684832716283019655932542975) (= x662 x340) (= (x473 (+ x446 512)) x238) (= (x407 x114) x1261) (>= 18446744073709551615 x784) (= (x692 x60) x1351) (= (x292 x391) x1362) (>= x1351 0) (= (x457 x565) x162) (= x894 (x224 (x941 x946) x942 0)) (<= x1362 18446744073709551615) (>= 1461501637330902918203684832716283019655932542975 x277) (= x617 (x394 1461501637330902918203684832716283019655932542975 x1261)) (= x784 (x1334 x60)) (= x1274 (x833 x1066)) (<= x162 255) (= x1094 (x473 (+ x804 64))) (= x1138 (x224 (x346 0) (x346 9) 0)) (>= 18446744073709551615 x1351) (= x551 0) (= x510 (x913 x752)) (= (x785 x1138) x662) (= (x394 1461501637330902918203684832716283019655932542975 x1204) x340) (= x1066 (x344 x391 2)) (<= 0 x784) (= (x473 (+ x230 384)) x395) (= (x473 (+ x1405 64)) x84) (= x820 4) (= x613 (x1206 x894)) (= (x115 x395) x845) (> 1461501637330902918203684832716283019655932542976 x16) (= 0 x207) (<= x613 340282366920938463463374607431768211455) (= x114 (x473 (+ 64 x395))) (< x1362 18446744073709551616) (= x946 (x394 1461501637330902918203684832716283019655932542975 x510)) (<= 0 x1274) (>= x162 0) (= (x1240 x565) x277) (<= 0 x500) (= x500 (x38 x60)) (= x804 (x473 (+ x1178 64))) (>= x16 0) (<= 0 x277) (<= x500 18446744073709551615) (= x373 (x473 (+ 288 x446))) (> 18446744073709551616 x784) (= (x394 255 x845) x874)) (and (=> (not x649) x1009) (=> (and (= (x1360 224) x990) (<= x1391 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x778 (x1360 256)) (= (x1360 128) x664) (= (x720 (x941 274184521717934524641157099916833587235)) x1136) (> 1208925819614629174706176 x468) (not (> 4 x283)) (= (x1360 256) x1042) (= (x1360 192) x737) (= x416 (x1360 160)) (<= x468 1208925819614629174706175) (= x236 (x271 x534)) (= x283 x820) (not (= x768 4062139261)) (= (x224 (x941 x1378) (x346 1) 0) x534) x649 (= x1001 1) (= x75 (x1360 224)) (>= x1391 0) (= 4 x283) (>= x468 0) (<= x331 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x236 0) (= x768 4272920204) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x626) (= (x473 (+ 320 x395)) x714) (>= x331 0) (>= x1392 0) (= (x1360 128) x342) (not (< x768 2362581449)) (= (x1360 192) x400) (not (= 2362581449 x768)) (< 0 x1136) (not (= 3257672857 x768)) (< x1392 1208925819614629174706176) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x236) (= x1411 (x1360 160)) (= x1376 (x473 (+ x395 352))) (= (x473 (+ x395 384)) x241) (= 160 x1103) (>= 1208925819614629174706175 x1392) (= x343 (x473 (+ x395 288)))) x97)))))
(assert (x623 x222 x1294))
(assert (x171 x241))
(assert (x171 x768))
(assert (x171 x316))
(assert (x171 x165))
(assert (x402 x333))
(assert (x171 x268))
(assert (x171 x31))
(assert (x171 x78))
(assert (x171 x965))
(assert (x171 x1015))
(assert (x171 x888))
(assert (x171 x1362))
(assert (= 274184521717934524641157099916833587210 (x1310 (x941 274184521717934524641157099916833587210))))
(assert (x171 x1198))
(assert (= x86 true))
(assert (x171 x907))
(assert (= (x941 18446744073709551615) (x346 18446744073709551615)))
(assert (x171 x139))
(assert (x171 x64))
(assert (x171 x748))
(assert (x171 x896))
(assert (x171 x1155))
(assert (= (x1310 (x346 372528908)) 372528908))
(assert (x171 x333))
(assert (x171 x119))
(assert (x326 x1253 x266))
(assert (x171 x1043))
(assert (x171 x805))
(assert (x171 x602))
(assert (x171 x300))
(assert (x171 x368))
(assert (x171 x1199))
(assert (x171 x1318))
(assert (x171 x1351))
(assert (= (x104 x1327) 0))
(assert (x171 x796))
(assert (x402 274184521717934524641157099916833587227))
(assert (x1003 x1204 x243))
(assert (x171 x1402))
(assert (x171 x1261))
(assert (x171 x310))
(assert (x117 x1142))
(assert (x171 x887))
(assert (x171 x169))
(assert (x171 x486))
(assert (x171 x1141))
(assert (=> (<= x640 10000) (= (x941 x640) (x346 x640))))
(assert (= (and (not x428) x695) x611))
(assert (x171 x1127))
(assert (= (or (and x1154 x1145) x873) x1172))
(assert (= true x1215))
(assert (x171 x684))
(assert (x171 x625))
(assert (x171 x142))
(assert (x171 x1376))
(assert (x117 x748))
(assert (= x390 (x1310 (x941 x390))))
(assert (x402 x1378))
(assert (= x524 (=> (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1303) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1303) true) (> 0 x1303))) x817) (and (=> x817 x915) (=> (and (= x545 1) (not x817)) x46)))))
(assert (x171 x841))
(assert (x171 x312))
(assert (= (x941 332257840) (x346 332257840)))
(assert (x171 x759))
(assert (x117 x447))
(assert (x117 x58))
(assert (x171 x1183))
(assert (= x304 (and x1145 (not x1154))))
(assert (= (x346 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x941 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x171 x1038))
(assert (x171 x278))
(assert (x171 x956))
(assert (= (x1310 (x346 1000000000000000)) 1000000000000000))
(assert (x1003 x1261 x601))
(assert (x171 x90))
(assert (x623 x174 x802))
(assert (x171 x664))
(assert (= x1197 (and x1115 (not x1280))))
(assert (= (x1310 (x346 2362581449)) 2362581449))
(assert (x171 x1093))
(assert (x171 x580))
(assert (x171 x204))
(assert (= (x1310 (x346 4062139261)) 4062139261))
(assert (x402 x717))
(assert (= 1000000000000000000 (x1310 (x346 1000000000000000000))))
(assert (= (and (not x1144) x201) x385))
(assert (x171 x839))
(assert (x171 x293))
(assert (x171 x628))
(assert (x171 x957))
(assert (x117 x850))
(assert (x171 x1026))
(assert (=> (<= x717 10000) (= (x941 x717) (x346 x717))))
(assert (x171 x546))
(assert (= (=> (and (not (= x605 0)) (= x1401 (x1047 x887)) (= x142 (x1047 x1027)) (= x255 (and (< 0 x1401) (= (<= x1401 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (< 0 x970) (= x1295 (x1160 x729)) (= (not x255) x1034) (= (or (and (< x151 0) (= true (<= x151 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x151)) x1106) (= (x473 (+ x606 64)) x638) (= x377 (div x907 x970)) (= x970 (x394 18446744073709551615 x173)) (= x1346 (x1047 x638)) (= x437 (x394 x18 x1272)) (= (* x951 x377) x134) (= x280 (div x134 1000000000000000000)) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x151) (and (> 0 x151) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x151)))) 1 0) x1253) (= (x473 (+ x1027 64)) x606) (= x18 (ite (not x1106) 1 0)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x463) (and (= (<= x463 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 160 x463)))) (= (x473 (+ 64 x13)) x365) (= (x94 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x151)) x674) (= x887 (x473 (+ x119 288))) (= x854 0) (= x907 (mod (* x341 x185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 1208925819614629174706175 x142) (<= x1346 1208925819614629174706175) (= 0 x437) (= (ite (or (and (> x280 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x85 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x280) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x85)) (> x85 x280))) 1 0) x266) (not (> x280 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x980 (x473 (+ x280 x151))) (= x1272 (ite (or (and (< x674 x280) (= (<= x280 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x674 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x280) (> x674 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (< (* x951 x377) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (ite x1034 x1034 (and (< 170141183460469231731687303715884105727 x1401) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1401) true)))) (= (x394 x1253 x266) x854) (= (x562 x365) x173) (= x729 (x473 (+ 64 x957))) (= (x94 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x151)) x85) (= (x394 18446744073709551615 x1295) x951) (= x980 x1213) (= x341 (x394 340282366920938463463374607431768211455 x1401))) x1300) x936))
(assert (= (=> (and (= x1336 (= x545 0)) (= x822 (ite x609 1 0)) (= x609 (not x1336))) (=> (and (= x1379 x421) (>= x678 0) (or (and (= x964 (= 0 x1367)) (= 0 x1395) (= x1251 (ite x1224 (= x1174 0) x1224)) (not x1071) (= x1224 (not x964))) (and x1071 (= 1 x1395))) (= (x1159 x379) x44) (<= 0 x670) (= x272 x972) (= (x920 x167) x401) (= x1044 (x394 1461501637330902918203684832716283019655932542975 x1293)) (<= 0 x1397) (= x814 x839) (= x1367 x1078) (= x190 (x1338 x128)) (= x1379 x363) (<= x670 20282409603651670423947251286015) (> 340282366920938463463374607431768211456 x401) (= x1408 (x394 1461501637330902918203684832716283019655932542975 x1379)) (< x204 480214969) (>= 1461501637330902918203684832716283019655932542975 x1141) (= (ite (not x683) 1 0) x1002) (= x670 (x507 x371)) (= (x224 (x941 x169) x1414 0) x219) (= (ite (not x439) 1 0) x409) (= (x224 (x941 x1037) x1218 0) x141) (not (= 204737060 x204)) (= (= x1379 x354) x1149) (= x683 (not x411)) (<= 0 x190) (= x504 x893) (= x138 (not x1273)) (= x955 (x224 (x941 x884) (x346 5) 0)) (= (x569 x219) x1130) (= x956 (x94 (- x401 x272))) (= x308 x138) (>= 340282366920938463463374607431768211455 x401) (= x792 (x224 (x941 x1352) (x346 5) 0)) (= (x394 1461501637330902918203684832716283019655932542975 x1379) x489) (= (<= x666 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (= x893 x272) (= x771 (x224 (x941 x1044) x328 0)) (= x132 (x394 1461501637330902918203684832716283019655932542975 x1293)) (= x1273 (= x44 0)) (>= x64 0) (= x678 (x677 x955)) (= (x224 (x941 x333) x1350 0) x297) (<= x190 65535) (= (x224 (x941 x775) (x346 6) 0) x1414) (> 2059964113 x204) (<= x69 65535) (>= x144 0) (not (< x204 204737060)) (= x1084 (x394 1461501637330902918203684832716283019655932542975 x1379)) (>= 1461501637330902918203684832716283019655932542975 x1397) (= (x1341 x426) x296) (= (= x1395 0) x1235) (= (x920 x141) x1367) (>= x594 0) (= (+ x504 x1078) x1174) (> 256 x144) (not (or (and (< x739 128) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x739) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x739))) (>= 340282366920938463463374607431768211455 x1367) (< x44 256) (= x168 (x224 (x941 x1013) (x346 5) 0)) (= x705 x1129) (= x705 (not x1235)) (= x413 (not (= x822 0))) (= (not x906) x439) (= x309 x1141) (= x17 (= x1175 0)) (= x354 x978) (< (+ x893 x1367) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x394 1461501637330902918203684832716283019655932542975 x1379) x78) (= x1243 x1090) (= (x224 (x941 x47) (x346 5) 0) x426) (= x98 (x866 x670)) (<= 0 x69) (= x413 x668) (<= x1379 1461501637330902918203684832716283019655932542975) (= (= 0 x1395) x288) (= x128 (x224 (x941 x1002) x1333 0)) (>= x296 0) (= x333 (x394 1461501637330902918203684832716283019655932542975 x1293)) (= (x224 (x941 x69) (x346 11) 0) x475) (= (x224 (x941 x225) x37 0) x1081) (> 65536 x296) (= x775 (x394 1461501637330902918203684832716283019655932542975 x1141)) (>= 65535 x296) (= (x394 340282366920938463463374607431768211455 x956) x570) (<= 0 x978) (= (x224 (x941 x1408) (x346 6) 0) x30) (not (< x666 4)) (= (not x776) x1129) (or (and (= (= 0 x401) x797) (= 0 x1175) (= (not x797) x540) (= (ite x540 (= 0 (x394 340282366920938463463374607431768211455 x956)) x540) x45) (not x34)) (and (= 1 x1175) x34)) (= x204 372528908) (> 65536 x136) (= x144 (x1159 x297)) (< 131 x666) (or (and (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x98) (and (= (<= x98 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x98 0)))) (>= 18446744073709551615 x36) (= (x394 20282409603651670423947251286015 x98) x4) (not (< 10141204801825835211973625643007 x746)) (not x1344) (= x1049 (div x208 1000000000000000)) (= (* x36 x4) x208) (< x36 18446744073709551616) (= (x394 20282409603651670423947251286015 x1049) x746) (< (* x4 x36) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1049 x456) (<= 0 x36)) (and (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x98)) (= (div x723 1000000000000000) x148) (= x474 (x866 x148)) (>= x1030 0) (not (or (and (= true (<= x174 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x174 0)) (> x174 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x474 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (x94 (- 0 x98)) x174) (= x1221 (x94 (- 0 x474))) (= x1221 x456) (>= 18446744073709551615 x1030) (> 18446744073709551616 x1030) (not (< 10141204801825835211973625643007 x1226)) (< (* x1030 x707) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1226 (x394 20282409603651670423947251286015 x148)) x1344 (= x723 (* x707 x1030)) (= x707 (x394 20282409603651670423947251286015 x174)))) (>= 1461501637330902918203684832716283019655932542975 x1293) x192 (>= 1461501637330902918203684832716283019655932542975 x978) (= x328 (x224 (x941 x678) (x346 12) 0)) (< x69 65536) (= x814 0) (= (x394 1461501637330902918203684832716283019655932542975 x1293) x1037) (= x895 x1141) (< 0 x1269) (= (not x17) x308) (= (x720 (x941 274184521717934524641157099916833587210)) x254) (>= 340282366920938463463374607431768211455 x594) (>= 65535 x136) (= x1293 x543) (= (or (and (= (<= x98 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x98)) (> x98 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1344) (= x640 (x394 1461501637330902918203684832716283019655932542975 x1293)) (not (> x893 x401)) (= (ite (= 0 x401) (not (= 0 (x394 340282366920938463463374607431768211455 x956))) (= x401 0)) x34) (= x1013 (x394 1461501637330902918203684832716283019655932542975 x1379)) (= x1352 (x394 1461501637330902918203684832716283019655932542975 x1141)) (= (x394 1461501637330902918203684832716283019655932542975 x1141) x1403) (= (= x1175 0) x859) (= x547 (x224 (x941 x296) (x346 12) 0)) (= x192 (or (not x801) x668)) (>= 255 x44) (= x1071 (ite (= 0 x1367) (not (= 0 x1174)) (= 0 x1367))) (<= 0 x401) (= x1090 x1355) (= (x94 (- x666 4)) x739) (= (x1338 x708) x69) (= x411 (not x288)) (not (= x26 x1084)) (= x1020 (x394 1461501637330902918203684832716283019655932542975 x1293)) (= x1218 (x224 (x941 x1403) (x346 6) 0)) (= x225 (x394 1461501637330902918203684832716283019655932542975 x1293)) (= (x224 (x941 x640) x475 0) x379) (not (= 274184521717934524641157099916833587231 x132)) (= (x791 x636) x136) (or (and (= x1269 x170) (>= x170 0) (= (x224 (x941 x354) x216 0) x811) (= (x224 (x941 x436) (x346 3) 0) x216) (= x170 (x1322 x811)) (= (x394 1461501637330902918203684832716283019655932542975 x1379) x436) (> 256 x170) (<= x170 255) (not x1149)) (and (= (ite x1149 1 0) x1269) x1149)) (> 20282409603651670423947251286016 x670) (= (x394 1461501637330902918203684832716283019655932542975 x1293) x559) (>= 1461501637330902918203684832716283019655932542975 x64) (< x190 65536) (< 0 x254) (= (x394 1461501637330902918203684832716283019655932542975 x1141) x47) (= (x394 1461501637330902918203684832716283019655932542975 x1379) x884) (= x1293 x19) (>= x44 0) (= x371 (x224 (x941 x489) (x346 5) 0)) (= (x394 1461501637330902918203684832716283019655932542975 x1141) x26) (<= 0 x1367) (= x441 x1223) (>= 340282366920938463463374607431768211455 x1130) (= (x224 (x941 x559) x30 0) x167) (= x1389 (x394 1461501637330902918203684832716283019655932542975 x1379)) (not x1090) (>= 255 x144) (> 65536 x678) (= x636 (x224 (x941 x78) (x346 5) 0)) (<= 0 x136) (= x169 (x394 1461501637330902918203684832716283019655932542975 x1293)) (= x1333 (x224 (x941 x1020) x547 0)) (>= 65535 x678) (= x1350 (x224 (x941 x190) (x346 11) 0)) (= x1397 x335) (> 340282366920938463463374607431768211456 x1367) (not (> x893 340282366920938463463374607431768211455)) (= (x224 (x941 x1389) (x346 6) 0) x37) (>= 340282366920938463463374607431768211455 x1174) (> 950698303 x204) (not (= x204 318876285)) (<= 0 x1130) (= x1331 x335) (not (= x204 332257840)) (= x708 (x224 (x941 x409) x771 0)) (= (x920 x1081) x594) (= x776 (= 0 x144)) (= x906 (not x859))) x726)) x46))
(assert (x171 x613))
(assert (x171 x4))
(assert (x171 x1246))
(assert (x117 x451))
(assert (x1003 x322 x153))
(assert (x171 x172))
(assert (= (x941 274184521717934524641157099916833587244) (x346 274184521717934524641157099916833587244)))
(assert (= (x941 2059964113) (x346 2059964113)))
(assert (= (x941 20282409603651670423947251286016) (x346 20282409603651670423947251286016)))
(assert (x171 x125))
(assert (= (=> (and (= (x815 160) x212) (<= x149 1208925819614629174706175) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1125) (and (> 160 x1125) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1125))))) (= (not x1165) x1148) (= (ite (or (= x974 0) (= x299 0)) 0 (ite (= (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x974) (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x299)) (div (ite (< x299 57896044618658097711785492504343953926634992332820282019728792003956564819968) x299 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x94 (- x299 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x974) x974 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x94 (- x974 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x299) x299 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x94 (- x299 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (< x974 57896044618658097711785492504343953926634992332820282019728792003956564819968) x974 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x94 (- x974 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x151) (= (x815 256) x149) (= (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x212)) (< 0 x212)) x1165) (= (x473 (+ x1220 128)) x750) (= x1180 (> x51 0)) (= x51 (x394 255 x1330)) (>= 1208925819614629174706175 x1320) (= x1320 (x815 128)) (= (x473 (+ x1125 31)) x447) (= x1220 (x394 115792089237316195423570985008687907853269984665640564039457584007913129639904 x447)) (not (= x1076 0)) (= 0 x621) (= x321 (x394 340282366920938463463374607431768211455 x212)) (not (ite x1148 x1148 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x212) true) (< 170141183460469231731687303715884105727 x212)))) (= x299 (mod (* (x1100 x175) x321) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x394 18446744073709551615 x544) x974) (> x974 0)) (and (=> (and (not x1180) (= x1087 x151)) x40) (=> x1180 x555))) x1120))
(assert (x171 x9))
(assert (x171 x132))
(assert (x171 x621))
(assert (x171 x1130))
(assert (= (x941 1000000000000000000) (x346 1000000000000000000)))
(assert (x623 x949 x1011))
(assert (x171 x511))
(assert (x171 x1226))
(assert (= x706 (=> (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x935) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x935)) (> 0 x935))) x101) (and (=> (and (not x101) (= x625 1)) x526) (=> x101 x560)))))
(assert (=> (>= 10000 x296) (= (x346 x296) (x941 x296))))
(assert (x171 x1182))
(assert (= (x981 x638) (ite (= x1027 x638) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x815 x638))))
(assert (x171 x91))
(assert (= (x1310 (x346 10141204801825835211973625643007)) 10141204801825835211973625643007))
(assert (x171 x42))
(assert (x171 x1417))
(assert (= (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1087) (and (= (<= x1087 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x1087))) x257) (= x924 (not x257)) (= (ite x924 1 0) x849)) x608) x40))
(assert (x171 x775))
(assert (x171 x1219))
(assert (x171 x899))
(assert (x171 x1253))
(assert (x171 x617))
(assert (= (and (not x1122) x1209) x1189))
(assert (x171 x374))
(assert (x171 x409))
(assert (x171 x1042))
(assert (x623 x1060 x976))
(assert (x171 x189))
(assert (= (x1310 (x941 x409)) x409))
(assert (x171 x321))
(assert (x171 x1204))
(assert (x171 x1169))
(assert (x171 x1037))
(assert (x117 x1141))
(assert (x402 x78))
(assert (x402 x559))
(assert (x171 x781))
(assert (=> (>= 10000 x354) (= (x346 x354) (x941 x354))))
(assert (x171 x670))
(assert (x171 x586))
(assert (x171 x681))
(assert (x171 x1091))
(assert (x171 x885))
(assert (x171 x1036))
(assert (x171 x1329))
(assert (= 1752364190 (x1310 (x346 1752364190))))
(assert (x623 x316 x1239))
(assert (=> (<= x1417 10000) (= (x346 x1417) (x941 x1417))))
(assert (= (x346 1461501637330902918203684832716283019655932542975) (x941 1461501637330902918203684832716283019655932542975)))
(assert (x117 x137))
(assert (x111 x1039))
(assert (x171 x1055))
(assert (= (x1310 (x346 332257840)) 332257840))
(assert (x171 x849))
(assert (x171 x247))
(assert (x117 x544))
(assert (x171 x974))
(assert (x402 274184521717934524641157099916833587233))
(assert (= 0 (x102 x82)))
(assert (x171 x290))
(assert (= (x1310 (x346 2059964113)) 2059964113))
(assert (= (x1343 x1287) 0))
(assert (x171 x466))
(assert (= (x346 1000000000000000) (x941 1000000000000000)))
(assert (= (or (and x1031 (not x461)) x624) x634))
(assert (x171 x531))
(assert (x117 x222))
(assert (x171 x330))
(assert (= (x1310 (x941 274184521717934524641157099916833587227)) 274184521717934524641157099916833587227))
(assert (x171 x137))
(assert (x402 x47))
(assert (= x1033 (and x65 x304)))
(assert (= (x1310 (x344 x391 2)) (+ (x1310 x391) 2)))
(assert (=> (<= x436 10000) (= (x941 x436) (x346 x436))))
(assert (x402 x1223))
(assert (= (ite (= x238 x82) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x786 x82)) (x93 x82)))
(assert (x171 x339))
(assert (x171 x718))
(assert (x171 x1332))
(assert (x171 x1151))
(assert (= (x1310 (x941 x69)) x69))
(assert (x171 x869))
(assert (x171 x898))
(assert (= (x941 274184521717934524641157099916833587235) (x346 274184521717934524641157099916833587235)))
(assert (x171 x968))
(assert (x171 x605))
(assert (x171 x55))
(assert (= x397 true))
(assert (x171 x651))
(assert (x117 x573))
(assert (x171 x1286))
(assert (=> (>= 10000 x884) (= (x941 x884) (x346 x884))))
(assert (= (x533 x365) 0))
(assert (x171 x814))
(assert (x171 x455))
(assert (x171 x970))
(assert (x402 x354))
(assert (= x354 (x1310 (x941 x354))))
(assert (x171 x231))
(assert (x171 x1328))
(assert (= (x1310 (x346 65536)) 65536))
(assert (x402 x1389))
(assert (x171 x1108))
(assert (x117 x18))
(assert (x171 x1137))
(assert (x171 x908))
(assert (x623 x1203 x206))
(assert (= (x346 65536) (x941 65536)))
(assert (x117 x266))
(assert (x171 x162))
(assert (= x754 x116))
(assert (=> (<= x825 10000) (= (x941 x825) (x346 x825))))
(assert (x117 x1387))
(assert (= 340282366920938463463374607431768211456 (x1310 (x346 340282366920938463463374607431768211456))))
(assert (= (x146 x996) (ite (= x996 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x347 x996))))
(assert (x117 x956))
(assert (x171 x80))
(assert (x171 x494))
(assert (x171 x1395))
(assert (x171 x314))
(assert (x171 x341))
(assert (x117 1461501637330902918203684832716283019655932542975))
(assert (x171 x825))
(assert (x171 x1369))
(assert (= x950 (or (and x429 x824) (and x108 x513))))
(assert (= (x1310 (x941 x136)) x136))
(assert (= x1352 (x1310 (x941 x1352))))
(assert (=> (>= 10000 x1234) (= (x346 x1234) (x941 x1234))))
(assert (x171 x71))
(assert (x171 x173))
(assert (x319 x1295 x281))
(assert (x171 x67))
(assert (x171 x1391))
(assert (x171 x220))
(assert (= (and x101 x1197) x703))
(assert (x171 x1353))
(assert (x171 x741))
(assert (x171 x178))
(assert (x171 x329))
(assert (x171 x446))
(assert (x171 x1282))
(assert (= x946 (x1310 (x941 x946))))
(assert (x117 20282409603651670423947251286015))
(assert (= x678 (x1310 (x941 x678))))
(assert (x171 x943))
(assert (x171 x794))
(assert (=> (>= 10000 x368) (= (x346 x368) (x941 x368))))
(assert (x402 x847))
(assert (x171 x238))
(assert (x171 x1032))
(assert (x171 x933))
(assert (= (x941 480214969) (x346 480214969)))
(assert (x171 x1162))
(assert (x171 x1291))
(assert (= (and (not x798) x1033) x819))
(assert (x171 x430))
(assert (x117 x9))
(assert (x171 x1247))
(assert (x171 x1380))
(assert (= (x941 10141204801825835211973625643007) (x346 10141204801825835211973625643007)))
(assert (x171 x1411))
(assert (= x43 (=> (and (= x129 (not x1396)) (= (ite x129 1 0) x625) (= x1396 (or (> x140 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x140 0) (= true (<= x140 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) x526)))
(assert (x171 x922))
(assert (x171 x764))
(assert (x171 x47))
(assert (=> (>= 10000 x409) (= (x346 x409) (x941 x409))))
(assert (x171 x1213))
(assert (x171 x1264))
(assert (x171 x469))
(assert (x117 x353))
(assert (= (x1310 (x941 274184521717934524641157099916833587244)) 274184521717934524641157099916833587244))
(assert (x117 255))
(assert (x402 x1237))
(assert (x171 x886))
(assert (x171 x973))
(assert (x171 x979))
(assert (x171 x54))
(assert (=> (>= 10000 x1044) (= (x346 x1044) (x941 x1044))))
(assert (x171 x931))
(assert (x171 x804))
(assert (x171 x691))
(assert (x171 x1004))
(assert (= (or (and x950 (not x958)) x336) x477))
(assert (x117 x1060))
(assert (x171 x465))
(assert (x117 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x171 x363))
(assert (x402 x1352))
(assert (x480 x58 x100))
(assert (x171 x861))
(assert (x171 x1250))
(assert (= 274184521717934524641157099916833587233 (x1310 (x941 274184521717934524641157099916833587233))))
(assert (x171 x1320))
(assert (= (x1296 x291) 0))
(assert (= x1238 (or (and (not x1180) x969) x1172)))
(assert (x171 x273))
(assert (= (=> (and (= x140 x1109) (= x553 (> x711 1)) (not x553) (= x711 (x394 255 x1330))) x43) x826))
(assert (x117 x1008))
(assert (x697 x748))
(assert (x111 x1060))
(assert (x171 x812))
(assert (= x1044 (x1310 (x941 x1044))))
(assert (x171 x3))
(assert (=> (<= x390 10000) (= (x346 x390) (x941 x390))))
(assert (x171 x1007))
(assert (x117 x361))
(assert (= (x1310 (x941 x15)) x15))
(assert (x171 x778))
(assert (= (x1310 (x346 2000660004)) 2000660004))
(assert (x402 x1004))
(assert (= x963 (or (and x1262 x529) (and x649 x703))))
(assert (x171 x1125))
(assert (x171 x643))
(assert (x171 x264))
(assert (x171 x1049))
(assert (x171 x690))
(assert (x171 x245))
(assert (= (x346 274184521717934524641157099916833587223) (x941 274184521717934524641157099916833587223)))
(assert (= 3257672857 (x1310 (x346 3257672857))))
(assert (x171 x1233))
(assert (x171 x1030))
(check-sat)
