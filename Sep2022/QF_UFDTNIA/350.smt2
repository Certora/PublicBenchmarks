(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNIA)
(declare-datatypes ((x949 0)) (((x528 (x1121 x949) (x194 Int)) (x281 (x1116 Int)) (x275 (x86 x949) (x710 x949) (x584 Int)))))
(declare-fun x688 () Int)
(declare-fun x190 () Bool)
(declare-fun x685 () Bool)
(declare-fun x1177 () Int)
(declare-fun x368 () Int)
(declare-fun x1057 () Bool)
(declare-fun x390 () Bool)
(declare-fun x802 () Int)
(declare-fun x611 () Bool)
(declare-fun x432 () Int)
(declare-fun x87 () Int)
(declare-fun x1025 () Int)
(declare-fun x328 () Bool)
(declare-fun x339 () Int)
(declare-fun x62 () Int)
(declare-fun x923 () Int)
(declare-fun x617 () Int)
(declare-fun x22 () Int)
(declare-fun x498 () x949)
(declare-fun x455 () Bool)
(declare-fun x330 () Bool)
(declare-fun x662 () Int)
(declare-fun x297 () Int)
(declare-fun x320 () Bool)
(declare-fun x755 () Int)
(declare-fun x366 () Int)
(declare-fun x1212 () Int)
(declare-fun x553 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x209 () Int)
(declare-fun x1205 () Int)
(declare-fun x769 () Int)
(declare-fun x991 () Bool)
(declare-fun x544 () Bool)
(declare-fun x1220 () x949)
(declare-fun x1239 () Bool)
(declare-fun x28 () Int)
(declare-fun x801 () Int)
(declare-fun x545 () Int)
(declare-fun x443 () Int)
(declare-fun x206 () Int)
(declare-fun x233 () Int)
(declare-fun x1196 () Int)
(declare-fun x908 () Int)
(declare-fun x361 () Bool)
(declare-fun x1095 () x949)
(declare-fun x1211 (Int) Int)
(declare-fun x115 () Int)
(declare-fun x413 () Bool)
(declare-fun x262 () Int)
(declare-fun x749 () Bool)
(declare-fun x67 (Int) Int)
(declare-fun x378 () Int)
(declare-fun x955 () Int)
(declare-fun x515 () Int)
(declare-fun x1141 () Int)
(declare-fun x781 () Int)
(declare-fun x1217 () Bool)
(declare-fun x526 () Int)
(declare-fun x130 () Int)
(declare-fun x251 () Int)
(declare-fun x335 () Int)
(declare-fun x75 () Int)
(declare-fun x76 () Int)
(declare-fun x396 () Int)
(declare-fun x277 () Int)
(declare-fun x332 () Int)
(declare-fun x1193 () Int)
(declare-fun x1169 () x949)
(declare-fun x838 () Int)
(declare-fun x414 () Int)
(declare-fun x840 () Int)
(declare-fun x832 () Bool)
(declare-fun x403 () Int)
(declare-fun x722 () Bool)
(declare-fun x110 () x949)
(declare-fun x913 () x949)
(declare-fun x419 () Int)
(declare-fun x32 () Int)
(declare-fun x169 () x949)
(declare-fun x901 () Int)
(declare-fun x415 () Int)
(declare-fun x493 () Int)
(declare-fun x5 () Bool)
(declare-fun x51 (x949) Int)
(declare-fun x1104 () x949)
(declare-fun x231 () x949)
(declare-fun x735 () Int)
(declare-fun x247 (Int Int) Int)
(declare-fun x1000 () Int)
(declare-fun x121 () Bool)
(declare-fun x699 () x949)
(declare-fun x1102 () x949)
(declare-fun x182 () Int)
(declare-fun x684 () Int)
(declare-fun x723 () Int)
(declare-fun x1115 () Int)
(declare-fun x666 () Bool)
(declare-fun x615 () x949)
(declare-fun x1208 () Int)
(declare-fun x90 () x949)
(declare-fun x1155 () Bool)
(declare-fun x841 (Int) x949)
(declare-fun x1045 () Bool)
(declare-fun x184 () Int)
(declare-fun x1119 () Int)
(declare-fun x47 () Bool)
(declare-fun x1219 () x949)
(declare-fun x852 () Bool)
(declare-fun x571 () Int)
(declare-fun x263 () Int)
(declare-fun x1042 () Int)
(declare-fun x476 () x949)
(declare-fun x472 () Bool)
(declare-fun x572 () Int)
(declare-fun x792 () Int)
(declare-fun x178 () Bool)
(declare-fun x813 () Int)
(declare-fun x312 () x949)
(declare-fun x976 () Bool)
(declare-fun x885 () Bool)
(declare-fun x578 () Bool)
(declare-fun x581 () Int)
(declare-fun x915 () Int)
(declare-fun x804 () Bool)
(declare-fun x506 () Int)
(declare-fun x590 () Bool)
(declare-fun x962 () Int)
(declare-fun x964 () Int)
(declare-fun x623 () Int)
(declare-fun x11 () Bool)
(declare-fun x692 (Int) Int)
(declare-fun x616 () Int)
(declare-fun x149 () Int)
(declare-fun x162 () Int)
(declare-fun x940 () Bool)
(declare-fun x457 () x949)
(declare-fun x551 () Int)
(declare-fun x1048 () Int)
(declare-fun x425 () Bool)
(declare-fun x525 () Int)
(declare-fun x772 () x949)
(declare-fun x511 () Int)
(declare-fun x299 (Int) Int)
(declare-fun x1016 () Int)
(declare-fun x41 () Int)
(declare-fun x298 () Bool)
(declare-fun x845 () Int)
(declare-fun x163 () Bool)
(declare-fun x1024 () Int)
(declare-fun x985 () x949)
(declare-fun x119 () x949)
(declare-fun x1009 () x949)
(declare-fun x449 () Int)
(declare-fun x1022 (x949) Int)
(declare-fun x1153 () x949)
(declare-fun x944 () Int)
(declare-fun x464 () x949)
(declare-fun x661 () Int)
(declare-fun x57 () Int)
(declare-fun x370 () Int)
(declare-fun x382 () Int)
(declare-fun x133 () Int)
(declare-fun x849 () Int)
(declare-fun x1014 () Int)
(declare-fun x243 () x949)
(declare-fun x1129 () x949)
(declare-fun x805 () Int)
(declare-fun x725 () Int)
(declare-fun x612 () x949)
(declare-fun x621 () Int)
(declare-fun x741 () Bool)
(declare-fun x235 () Int)
(declare-fun x450 () Int)
(declare-fun x131 () Int)
(declare-fun x1176 () Bool)
(declare-fun x245 () Int)
(declare-fun x860 () Bool)
(declare-fun x879 (Int) Int)
(declare-fun x754 (x949) Int)
(declare-fun x610 () Bool)
(declare-fun x573 () Bool)
(declare-fun x712 () Bool)
(declare-fun x337 () Int)
(declare-fun x500 () Int)
(declare-fun x411 (x949) Int)
(declare-fun x643 () Bool)
(declare-fun x367 () x949)
(declare-fun x870 () x949)
(declare-fun x1221 () x949)
(declare-fun x674 () x949)
(declare-fun x46 () Int)
(declare-fun x398 () Int)
(declare-fun x290 () x949)
(declare-fun x88 () Bool)
(declare-fun x1227 () x949)
(declare-fun x1083 () Int)
(declare-fun x20 () Bool)
(declare-fun x364 () Int)
(declare-fun x609 () Int)
(declare-fun x522 () Bool)
(declare-fun x1201 () Int)
(declare-fun x1091 () Int)
(declare-fun x711 () Int)
(declare-fun x1142 () Int)
(declare-fun x18 () Int)
(declare-fun x460 () Bool)
(declare-fun x451 () Int)
(declare-fun x650 () Int)
(declare-fun x730 () Bool)
(declare-fun x608 () Int)
(declare-fun x471 () Bool)
(declare-fun x293 () Int)
(declare-fun x752 () Int)
(declare-fun x486 () Int)
(declare-fun x220 () Bool)
(declare-fun x66 () Int)
(declare-fun x527 () Bool)
(declare-fun x882 () Int)
(declare-fun x124 () Int)
(declare-fun x877 () Int)
(declare-fun x36 () Bool)
(declare-fun x565 () Int)
(declare-fun x593 (Int) Int)
(declare-fun x542 () Bool)
(declare-fun x853 () Int)
(declare-fun x777 () Int)
(declare-fun x1151 () Bool)
(declare-fun x1041 () Int)
(declare-fun x9 () Int)
(declare-fun x811 () Bool)
(declare-fun x1182 () Int)
(declare-fun x1029 () Int)
(declare-fun x1125 () Int)
(declare-fun x363 () x949)
(declare-fun x256 () Bool)
(declare-fun x219 () Bool)
(declare-fun x1234 () Int)
(declare-fun x497 () Int)
(declare-fun x352 () Bool)
(declare-fun x177 () Int)
(declare-fun x261 () x949)
(declare-fun x1109 () Int)
(declare-fun x329 () Int)
(declare-fun x751 () Bool)
(declare-fun x907 () Int)
(declare-fun x1069 () Int)
(declare-fun x109 () Int)
(declare-fun x1021 () Int)
(declare-fun x799 () Bool)
(declare-fun x12 () Int)
(declare-fun x173 () x949)
(declare-fun x371 (x949) Int)
(declare-fun x490 () x949)
(declare-fun x517 () Int)
(declare-fun x716 () Int)
(declare-fun x151 () x949)
(declare-fun x686 () x949)
(declare-fun x99 () Int)
(declare-fun x656 () Bool)
(declare-fun x122 () x949)
(declare-fun x1161 () Bool)
(declare-fun x690 () Bool)
(declare-fun x1068 () Int)
(declare-fun x562 () Bool)
(declare-fun x708 () Int)
(declare-fun x1164 () Bool)
(declare-fun x52 (Int) Int)
(declare-fun x1076 () Int)
(declare-fun x1229 () Int)
(declare-fun x607 () Bool)
(declare-fun x1148 () Int)
(declare-fun x706 () x949)
(declare-fun x333 () Bool)
(declare-fun x598 () x949)
(declare-fun x1214 () Int)
(declare-fun x307 () Int)
(declare-fun x1056 () Int)
(declare-fun x761 () Int)
(declare-fun x323 () x949)
(declare-fun x961 () x949)
(declare-fun x114 () Int)
(declare-fun x1254 () Int)
(declare-fun x977 () Bool)
(declare-fun x146 () Int)
(declare-fun x437 () Bool)
(declare-fun x1160 () Int)
(declare-fun x197 () Bool)
(declare-fun x91 () Bool)
(declare-fun x819 () Int)
(declare-fun x104 () Int)
(declare-fun x1036 () Int)
(declare-fun x679 () Bool)
(declare-fun x743 () x949)
(declare-fun x1047 () Int)
(declare-fun x179 () Int)
(declare-fun x294 () Int)
(declare-fun x82 () Int)
(declare-fun x628 () x949)
(declare-fun x897 () Int)
(declare-fun x154 () Int)
(declare-fun x101 () Bool)
(declare-fun x509 () Bool)
(declare-fun x63 () Int)
(declare-fun x1178 () x949)
(declare-fun x994 () Int)
(declare-fun x29 () Int)
(declare-fun x519 () Bool)
(declare-fun x980 () Int)
(declare-fun x1099 () x949)
(declare-fun x1257 () Int)
(declare-fun x393 () Int)
(declare-fun x1136 () Int)
(declare-fun x678 () Bool)
(declare-fun x663 () x949)
(declare-fun x126 () Int)
(declare-fun x651 () Int)
(declare-fun x594 () Int)
(declare-fun x198 () Int)
(declare-fun x129 () Int)
(declare-fun x1171 () Int)
(declare-fun x292 () Int)
(declare-fun x105 () Bool)
(declare-fun x420 () Int)
(declare-fun x388 () Int)
(declare-fun x1079 () x949)
(declare-fun x677 () x949)
(declare-fun x394 () Int)
(declare-fun x575 () Bool)
(declare-fun x577 () Int)
(declare-fun x1246 () Int)
(declare-fun x159 () Bool)
(declare-fun x957 () Bool)
(declare-fun x821 () Bool)
(declare-fun x600 () Int)
(declare-fun x3 () Bool)
(declare-fun x765 () Int)
(declare-fun x697 () Int)
(declare-fun x1053 () Int)
(declare-fun x626 () x949)
(declare-fun x1241 () Int)
(declare-fun x118 () Bool)
(declare-fun x835 () Int)
(declare-fun x614 () Int)
(declare-fun x305 () Int)
(declare-fun x782 () Bool)
(declare-fun x408 () x949)
(declare-fun x459 () Int)
(declare-fun x199 () Bool)
(declare-fun x586 () Int)
(declare-fun x496 () Bool)
(declare-fun x214 () Int)
(declare-fun x596 () Int)
(declare-fun x1186 () x949)
(declare-fun x726 () Bool)
(declare-fun x931 () Int)
(declare-fun x823 () Bool)
(declare-fun x433 () Int)
(declare-fun x521 () Bool)
(declare-fun x1098 () Int)
(declare-fun x633 () x949)
(declare-fun x49 () Bool)
(declare-fun x817 () Int)
(declare-fun x134 () Bool)
(declare-fun x180 () Bool)
(declare-fun x357 () Int)
(declare-fun x552 () Int)
(declare-fun x696 (x949) Int)
(declare-fun x448 () Bool)
(declare-fun x518 () Int)
(declare-fun x1194 () Bool)
(declare-fun x1216 () Int)
(declare-fun x1175 () Bool)
(declare-fun x1154 () Int)
(declare-fun x1223 () Int)
(declare-fun x568 () Int)
(declare-fun x1197 () Int)
(declare-fun x483 () Bool)
(declare-fun x196 () Int)
(declare-fun x969 () Int)
(declare-fun x438 () Int)
(declare-fun x646 () x949)
(declare-fun x547 () Int)
(declare-fun x424 () Bool)
(declare-fun x891 () Int)
(declare-fun x1055 () x949)
(declare-fun x1013 () x949)
(declare-fun x308 () Int)
(declare-fun x888 () Int)
(declare-fun x147 () Int)
(declare-fun x1071 () Int)
(declare-fun x215 () Int)
(declare-fun x1210 () Int)
(declare-fun x405 () Int)
(declare-fun x435 () Int)
(declare-fun x601 () Bool)
(declare-fun x306 () Bool)
(declare-fun x1168 () Int)
(declare-fun x996 () Bool)
(declare-fun x866 () Int)
(declare-fun x392 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x936 () x949)
(declare-fun x365 () Bool)
(declare-fun x416 () x949)
(declare-fun x759 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x760 () Int)
(declare-fun x806 () Int)
(declare-fun x619 () x949)
(declare-fun x78 (Int) Int)
(declare-fun x145 () Int)
(declare-fun x563 () Int)
(declare-fun x1228 () Bool)
(declare-fun x561 () Bool)
(declare-fun x788 () Int)
(declare-fun x554 () x949)
(declare-fun x597 () Bool)
(declare-fun x1237 () Int)
(declare-fun x265 () Int)
(declare-fun x92 () Int)
(declare-fun x313 () Int)
(declare-fun x1189 () x949)
(declare-fun x138 () Int)
(declare-fun x889 () Bool)
(declare-fun x785 () Int)
(declare-fun x523 () Int)
(declare-fun x839 () Int)
(declare-fun x627 () Bool)
(declare-fun x397 () Bool)
(declare-fun x40 () Int)
(declare-fun x975 () Int)
(declare-fun x1037 () Int)
(declare-fun x341 () x949)
(declare-fun x808 () Int)
(declare-fun x1166 () Bool)
(declare-fun x1191 () Int)
(declare-fun x895 () Int)
(declare-fun x827 () Bool)
(declare-fun x458 () Bool)
(declare-fun x418 () Int)
(declare-fun x1240 () Int)
(declare-fun x349 () Int)
(declare-fun x77 () Int)
(declare-fun x917 () Bool)
(declare-fun x1032 () Int)
(declare-fun x1138 () Bool)
(declare-fun x830 () Int)
(declare-fun x111 () Bool)
(declare-fun x377 () Int)
(declare-fun x255 (x949) Int)
(declare-fun x930 () Int)
(declare-fun x1222 () x949)
(declare-fun x55 () Bool)
(declare-fun x989 () Bool)
(declare-fun x873 () Bool)
(declare-fun x236 () x949)
(declare-fun x216 () x949)
(declare-fun x595 () Bool)
(declare-fun x543 () Int)
(declare-fun x945 (Int) Int)
(declare-fun x556 () Bool)
(declare-fun x1073 () Int)
(declare-fun x740 () Int)
(declare-fun x707 () Int)
(declare-fun x507 () Int)
(declare-fun x658 () Int)
(declare-fun x642 () Int)
(declare-fun x816 () Int)
(declare-fun x638 () Bool)
(declare-fun x973 () Bool)
(declare-fun x60 () Bool)
(declare-fun x1213 () Int)
(declare-fun x157 () Int)
(declare-fun x153 () Int)
(declare-fun x941 () Int)
(declare-fun x974 () Int)
(declare-fun x1001 () Bool)
(declare-fun x861 () Bool)
(declare-fun x1030 () Int)
(declare-fun x986 () Int)
(declare-fun x1233 () Int)
(declare-fun x454 () Int)
(declare-fun x225 () Int)
(declare-fun x649 () Int)
(declare-fun x876 (Int) Int)
(declare-fun x748 () Bool)
(declare-fun x336 () Bool)
(declare-fun x16 () x949)
(declare-fun x871 () Bool)
(declare-fun x524 () Int)
(declare-fun x334 () x949)
(declare-fun x648 () Int)
(declare-fun x1004 () x949)
(declare-fun x1126 () Int)
(declare-fun x1199 () Int)
(declare-fun x787 (x949) Int)
(declare-fun x1159 () Int)
(declare-fun x890 () Int)
(declare-fun x1082 (Int) Int)
(declare-fun x462 () Int)
(declare-fun x317 () Int)
(declare-fun x1127 () Int)
(declare-fun x535 () Bool)
(declare-fun x903 () x949)
(declare-fun x620 () Int)
(declare-fun x1101 () Int)
(declare-fun x139 () Bool)
(declare-fun x644 () x949)
(declare-fun x227 () Bool)
(declare-fun x269 () Bool)
(declare-fun x599 () Bool)
(declare-fun x1088 () Int)
(declare-fun x489 () x949)
(declare-fun x657 () x949)
(declare-fun x343 () Int)
(declare-fun x971 () x949)
(declare-fun x720 () x949)
(declare-fun x814 () Bool)
(declare-fun x1181 () Int)
(declare-fun x417 () Bool)
(declare-fun x218 () Int)
(declare-fun x69 () Bool)
(declare-fun x295 () Int)
(declare-fun x1113 () Bool)
(declare-fun x272 () Bool)
(declare-fun x1235 () Int)
(declare-fun x998 () Int)
(declare-fun x613 () Bool)
(declare-fun x239 (Int) Int)
(declare-fun x667 () Bool)
(declare-fun x1130 () x949)
(declare-fun x909 () x949)
(declare-fun x719 () Bool)
(declare-fun x1251 () x949)
(declare-fun x1096 () Int)
(declare-fun x303 () Bool)
(declare-fun x632 () Bool)
(declare-fun x630 () Int)
(declare-fun x848 () x949)
(declare-fun x232 (x949) Int)
(declare-fun x373 () Bool)
(declare-fun x770 () Bool)
(declare-fun x902 () Int)
(declare-fun x537 () Int)
(declare-fun x676 () Bool)
(declare-fun x223 () Int)
(declare-fun x192 (Int) Int)
(declare-fun x331 () Bool)
(declare-fun x683 () Int)
(declare-fun x38 () Int)
(declare-fun x703 () Bool)
(declare-fun x1020 () x949)
(declare-fun x622 () Int)
(declare-fun x1134 () Int)
(declare-fun x992 () Int)
(declare-fun x812 () Int)
(declare-fun x966 () Int)
(declare-fun x514 () x949)
(declare-fun x1089 () Bool)
(declare-fun x1253 () Int)
(declare-fun x205 () Int)
(declare-fun x189 () Int)
(declare-fun x1084 () Bool)
(declare-fun x250 () Bool)
(declare-fun x715 () x949)
(declare-fun x1152 () x949)
(declare-fun x211 (Int) Int)
(declare-fun x1198 () Int)
(declare-fun x1207 () x949)
(declare-fun x7 () Int)
(declare-fun x399 () Int)
(declare-fun x444 () Bool)
(declare-fun x831 () x949)
(declare-fun x213 () x949)
(declare-fun x979 () x949)
(declare-fun x606 () Bool)
(declare-fun x426 () x949)
(declare-fun x637 () Bool)
(declare-fun x795 () Bool)
(declare-fun x74 () Int)
(declare-fun x700 (x949) Int)
(declare-fun x1044 () Int)
(declare-fun x820 () x949)
(declare-fun x494 () Bool)
(declare-fun x372 () x949)
(declare-fun x1072 () x949)
(declare-fun x100 () Bool)
(declare-fun x2 () Bool)
(declare-fun x301 () Bool)
(declare-fun x954 () Int)
(declare-fun x175 () Int)
(declare-fun x881 () Int)
(declare-fun x665 () Int)
(declare-fun x1034 (x949) Int)
(declare-fun x468 () Int)
(declare-fun x30 () Bool)
(declare-fun x1249 () Int)
(declare-fun x1028 () Int)
(declare-fun x226 () Int)
(declare-fun x603 () Bool)
(declare-fun x733 () Bool)
(declare-fun x605 () Bool)
(declare-fun x894 () Int)
(declare-fun x807 () x949)
(declare-fun x502 () x949)
(declare-fun x680 () x949)
(declare-fun x479 (x949) Int)
(declare-fun x1070 () x949)
(declare-fun x155 () Int)
(declare-fun x558 () Int)
(declare-fun x477 () Bool)
(declare-fun x54 () Bool)
(declare-fun x113 () Int)
(declare-fun x1080 () x949)
(declare-fun x1236 () Int)
(declare-fun x410 () Bool)
(declare-fun x93 () Bool)
(declare-fun x589 () Int)
(declare-fun x937 () Int)
(declare-fun x480 () Int)
(declare-fun x763 () Int)
(declare-fun x854 () Bool)
(declare-fun x79 () Bool)
(declare-fun x604 () Int)
(declare-fun x185 () x949)
(declare-fun x143 () Int)
(declare-fun x72 (x949) Int)
(declare-fun x1007 () Int)
(declare-fun x948 () x949)
(declare-fun x939 () Int)
(declare-fun x442 () Int)
(declare-fun x1112 () Int)
(declare-fun x773 () Bool)
(declare-fun x1003 () Int)
(declare-fun x634 () Int)
(declare-fun x1065 () Int)
(declare-fun x899 (Int) Int)
(declare-fun x14 () x949)
(declare-fun x270 () Int)
(declare-fun x481 () x949)
(declare-fun x914 () Bool)
(declare-fun x441 () x949)
(declare-fun x287 () Bool)
(declare-fun x928 () Bool)
(declare-fun x383 () Int)
(declare-fun x267 () x949)
(declare-fun x984 () Int)
(declare-fun x1059 () Int)
(declare-fun x865 () Int)
(declare-fun x347 () Int)
(declare-fun x446 () Int)
(declare-fun x144 (Int) Int)
(declare-fun x21 () Bool)
(declare-fun x636 () Bool)
(declare-fun x43 () Int)
(declare-fun x1117 () x949)
(declare-fun x570 () Int)
(declare-fun x228 () Int)
(declare-fun x1012 () x949)
(declare-fun x833 (Int) Int)
(declare-fun x359 () Bool)
(declare-fun x624 () Int)
(declare-fun x453 () Int)
(declare-fun x95 () Int)
(declare-fun x921 () Int)
(declare-fun x374 () x949)
(declare-fun x487 () Int)
(declare-fun x127 () Bool)
(declare-fun x560 () Int)
(declare-fun x529 () Int)
(declare-fun x924 () Int)
(declare-fun x167 () Bool)
(declare-fun x953 () Int)
(declare-fun x946 () Int)
(declare-fun x319 () Int)
(declare-fun x631 () Int)
(declare-fun x34 () Int)
(declare-fun x1094 () Int)
(declare-fun x533 () Int)
(declare-fun x13 () Int)
(declare-fun x358 () Int)
(declare-fun x858 () x949)
(declare-fun x158 () Int)
(declare-fun x1122 () x949)
(declare-fun x1086 () Int)
(declare-fun x1174 () Int)
(declare-fun x997 () Int)
(declare-fun x474 () Bool)
(declare-fun x956 () Bool)
(declare-fun x875 () Int)
(declare-fun x780 () Int)
(declare-fun x445 () Int)
(declare-fun x164 () Int)
(declare-fun x668 () Bool)
(declare-fun x56 () Bool)
(declare-fun x653 () Bool)
(declare-fun x135 () Bool)
(declare-fun x176 () Bool)
(declare-fun x183 () Bool)
(declare-fun x793 () x949)
(declare-fun x1242 () Int)
(declare-fun x1019 () Bool)
(declare-fun x585 () Int)
(declare-fun x193 () Int)
(declare-fun x475 () Bool)
(declare-fun x842 () Int)
(declare-fun x932 () Int)
(declare-fun x156 () x949)
(declare-fun x1010 () Bool)
(declare-fun x188 () Bool)
(declare-fun x70 () Bool)
(declare-fun x731 () Int)
(declare-fun x559 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x1230 () Int)
(declare-fun x510 () Bool)
(declare-fun x872 () Bool)
(declare-fun x1054 () Int)
(declare-fun x771 () Int)
(declare-fun x673 () Int)
(declare-fun x23 () Int)
(declare-fun x171 () x949)
(declare-fun x739 () Int)
(declare-fun x400 () Int)
(declare-fun x404 () x949)
(declare-fun x1183 () x949)
(declare-fun x244 () x949)
(declare-fun x1173 () Bool)
(declare-fun x381 () Bool)
(declare-fun x796 () x949)
(declare-fun x1250 () Int)
(declare-fun x988 () Bool)
(declare-fun x234 () Int)
(declare-fun x257 () Int)
(declare-fun x252 () Int)
(declare-fun x916 () Int)
(declare-fun x555 () Int)
(declare-fun x1247 () Int)
(declare-fun x602 (Int) Int)
(declare-fun x538 () Int)
(declare-fun x279 () Int)
(declare-fun x321 () Int)
(declare-fun x288 () x949)
(declare-fun x492 () Int)
(declare-fun x315 () Int)
(declare-fun x1074 () Int)
(declare-fun x379 () Bool)
(declare-fun x1110 () Int)
(declare-fun x965 () Int)
(declare-fun x960 () Bool)
(declare-fun x434 () Bool)
(declare-fun x669 () Int)
(declare-fun x1179 () Bool)
(declare-fun x1209 () Int)
(declare-fun x675 () Bool)
(declare-fun x1039 () Int)
(declare-fun x237 () Bool)
(declare-fun x582 (x949) Int)
(declare-fun x311 () x949)
(declare-fun x283 () Int)
(declare-fun x713 () Bool)
(declare-fun x990 () Int)
(declare-fun x721 () Int)
(declare-fun x958 () Int)
(declare-fun x847 () Bool)
(declare-fun x734 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x1050 () Int)
(declare-fun x240 () x949)
(declare-fun x17 () Int)
(declare-fun x342 () Int)
(declare-fun x824 () Int)
(declare-fun x645 () Int)
(declare-fun x1111 () Int)
(declare-fun x655 () Int)
(declare-fun x238 () Bool)
(declare-fun x351 () Bool)
(declare-fun x186 () x949)
(declare-fun x230 () Int)
(declare-fun x851 () x949)
(declare-fun x587 () Int)
(declare-fun x391 () Int)
(declare-fun x1133 () Int)
(declare-fun x253 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x181 () x949)
(declare-fun x85 () Int)
(declare-fun x886 () Bool)
(declare-fun x125 (Int) Int)
(declare-fun x775 () Int)
(declare-fun x217 () Bool)
(declare-fun x1075 () Int)
(declare-fun x843 () Bool)
(declare-fun x1063 () Int)
(declare-fun x1162 () Int)
(declare-fun x1238 () Int)
(declare-fun x260 () Bool)
(declare-fun x362 () Bool)
(declare-fun x314 (x949) Int)
(declare-fun x369 () x949)
(declare-fun x191 () Bool)
(declare-fun x906 () Int)
(declare-fun x926 () Int)
(declare-fun x89 () Int)
(declare-fun x784 () Int)
(declare-fun x504 () Int)
(declare-fun x1108 () Int)
(declare-fun x106 () Int)
(declare-fun x934 (x949) Int)
(declare-fun x993 () Bool)
(declare-fun x1035 () x949)
(declare-fun x681 () Int)
(declare-fun x541 () Bool)
(declare-fun x461 () Int)
(declare-fun x1011 () Int)
(declare-fun x174 () Int)
(declare-fun x1203 () Int)
(declare-fun x520 () Int)
(declare-fun x702 () Int)
(declare-fun x31 () Int)
(declare-fun x107 () Bool)
(declare-fun x201 () Int)
(declare-fun x687 () Bool)
(declare-fun x844 () Int)
(declare-fun x26 () Int)
(declare-fun x1077 () Int)
(declare-fun x970 () Bool)
(declare-fun x682 (Int) Int)
(declare-fun x1107 () Int)
(declare-fun x406 () Int)
(declare-fun x717 (x949) Int)
(declare-fun x1061 () x949)
(declare-fun x550 () x949)
(declare-fun x1170 () Int)
(declare-fun x421 () x949)
(declare-fun x764 () Int)
(declare-fun x745 () Int)
(declare-fun x484 () x949)
(declare-fun x402 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x947 () x949)
(declare-fun x207 () Int)
(declare-fun x762 () Bool)
(declare-fun x465 () Bool)
(declare-fun x933 () Int)
(declare-fun x892 () Int)
(declare-fun x1248 () x949)
(declare-fun x395 () Int)
(declare-fun x753 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x94 () x949)
(declare-fun x786 () Int)
(declare-fun x766 () Bool)
(declare-fun x495 (x949) Int)
(declare-fun x278 () Int)
(declare-fun x59 () Bool)
(declare-fun x473 () Int)
(declare-fun x172 () Bool)
(declare-fun x925 () Int)
(declare-fun x401 (Int Int) Int)
(declare-fun x1243 () x949)
(declare-fun x326 () Bool)
(declare-fun x625 () Int)
(declare-fun x768 () Bool)
(declare-fun x809 () Int)
(declare-fun x1252 () Int)
(declare-fun x42 () x949)
(declare-fun x1043 () Int)
(declare-fun x280 () Int)
(declare-fun x778 () Int)
(declare-fun x557 () x949)
(declare-fun x170 () Int)
(declare-fun x1218 () x949)
(declare-fun x266 () Int)
(declare-fun x1 () Int)
(declare-fun x384 () Bool)
(declare-fun x718 () Int)
(declare-fun x282 () Int)
(declare-fun x254 () Int)
(declare-fun x123 () Bool)
(declare-fun x978 () Bool)
(declare-fun x210 () Int)
(declare-fun x142 () Int)
(declare-fun x532 () Int)
(declare-fun x868 () Bool)
(declare-fun x564 () Int)
(declare-fun x1145 () Bool)
(declare-fun x1190 () Int)
(declare-fun x1232 () x949)
(declare-fun x482 () Int)
(declare-fun x1150 () Bool)
(declare-fun x291 () Int)
(declare-fun x797 () Int)
(declare-fun x1087 () Int)
(declare-fun x1255 () Int)
(declare-fun x867 () x949)
(declare-fun x929 () x949)
(declare-fun x938 () Int)
(declare-fun x195 () Bool)
(declare-fun x737 () Int)
(declare-fun x951 () Int)
(declare-fun x503 () Int)
(declare-fun x325 () Bool)
(declare-fun x836 () Int)
(declare-fun x1226 () Int)
(declare-fun x58 () x949)
(declare-fun x344 () Int)
(declare-fun x981 () Bool)
(declare-fun x950 () x949)
(declare-fun x485 () Int)
(declare-fun x548 () Int)
(declare-fun x536 () Int)
(declare-fun x1215 () Int)
(declare-fun x798 () Bool)
(declare-fun x470 () Bool)
(declare-fun x729 () Bool)
(declare-fun x505 () x949)
(declare-fun x618 () Bool)
(declare-fun x204 () Int)
(declare-fun x693 (x949) Int)
(declare-fun x360 (Int) Int)
(declare-fun x874 () Bool)
(declare-fun x789 () Bool)
(declare-fun x258 (Int) Int)
(declare-fun x488 () Bool)
(declare-fun x639 () Int)
(declare-fun x97 () Int)
(declare-fun x920 () Int)
(declare-fun x549 () x949)
(declare-fun x864 () Int)
(declare-fun x249 () x949)
(declare-fun x1090 () Int)
(declare-fun x340 () Int)
(declare-fun x691 () Int)
(declare-fun x380 () Int)
(declare-fun x999 () Bool)
(declare-fun x112 () Int)
(declare-fun x1066 () Int)
(declare-fun x409 () x949)
(declare-fun x296 () Int)
(declare-fun x96 () Bool)
(declare-fun x1180 () x949)
(declare-fun x1031 () Bool)
(declare-fun x310 () Int)
(declare-fun x540 () x949)
(declare-fun x855 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x815 () Int)
(declare-fun x747 () Bool)
(declare-fun x635 () Int)
(declare-fun x456 () Int)
(declare-fun x1093 () Int)
(declare-fun x353 () x949)
(declare-fun x25 () Int)
(declare-fun x259 () x949)
(declare-fun x670 () Bool)
(declare-fun x208 () Bool)
(declare-fun x65 () Bool)
(declare-fun x647 () Bool)
(declare-fun x1049 () Int)
(declare-fun x1137 () Int)
(declare-fun x995 () Int)
(declare-fun x967 () Bool)
(declare-fun x318 () Bool)
(declare-fun x168 () Int)
(declare-fun x37 () Bool)
(declare-fun x918 () Int)
(declare-fun x1118 () Int)
(declare-fun x241 () Int)
(declare-fun x440 () Int)
(declare-fun x862 () Int)
(declare-fun x1120 (x949) Int)
(declare-fun x825 () Int)
(declare-fun x1146 (x949) Int)
(declare-fun x1123 () x949)
(declare-fun x316 () Bool)
(declare-fun x354 () Int)
(declare-fun x887 () Int)
(declare-fun x1139 () Int)
(declare-fun x276 (Int) Int)
(declare-fun x224 () Int)
(declare-fun x242 () Bool)
(declare-fun x856 () Bool)
(declare-fun x1188 () Int)
(declare-fun x187 () x949)
(declare-fun x284 () Bool)
(declare-fun x641 () Bool)
(declare-fun x935 () Int)
(declare-fun x905 () Int)
(declare-fun x800 () Bool)
(declare-fun x1005 () Int)
(declare-fun x117 () Bool)
(declare-fun x376 () Int)
(declare-fun x1067 () x949)
(declare-fun x1202 () Int)
(declare-fun x1046 () Int)
(declare-fun x452 () Bool)
(declare-fun x1172 () Int)
(declare-fun x431 () Int)
(declare-fun x704 () Int)
(declare-fun x200 () Int)
(declare-fun x910 () x949)
(declare-fun x203 () Int)
(declare-fun x574 () x949)
(declare-fun x516 () x949)
(declare-fun x150 () Int)
(declare-fun x583 () Int)
(declare-fun x389 () x949)
(declare-fun x35 () Int)
(declare-fun x828 () Bool)
(declare-fun x83 () Bool)
(declare-fun x429 () Int)
(declare-fun x534 () Bool)
(declare-fun x386 () Bool)
(declare-fun x531 () Int)
(declare-fun x322 () Int)
(declare-fun x1200 () Int)
(declare-fun x45 () Bool)
(declare-fun x10 () Int)
(declare-fun x654 () x949)
(declare-fun x436 () Int)
(declare-fun x222 () Int)
(declare-fun x1147 () Bool)
(declare-fun x491 () Int)
(declare-fun x943 () x949)
(declare-fun x387 () x949)
(declare-fun x501 () Int)
(declare-fun x271 () Int)
(declare-fun x963 () Bool)
(declare-fun x103 () Int)
(declare-fun x987 () Int)
(declare-fun x1081 () Int)
(declare-fun x884 () Bool)
(declare-fun x467 () Bool)
(declare-fun x512 () Bool)
(declare-fun x738 () x949)
(declare-fun x229 () Int)
(declare-fun x1103 () Bool)
(declare-fun x161 () x949)
(declare-fun x508 (Int) Int)
(declare-fun x671 () Int)
(declare-fun x407 () Int)
(declare-fun x919 () Int)
(declare-fun x108 () Int)
(declare-fun x140 () Int)
(declare-fun x850 () Int)
(declare-fun x1027 () Bool)
(declare-fun x756 () Bool)
(declare-fun x911 () Int)
(declare-fun x1157 () Bool)
(declare-fun x694 () Bool)
(declare-fun x1051 () Int)
(declare-fun x857 () x949)
(declare-fun x274 () x949)
(declare-fun x39 () Int)
(declare-fun x356 (Int) Int)
(declare-fun x53 () x949)
(declare-fun x375 () Int)
(declare-fun x660 () Int)
(declare-fun x588 () Int)
(declare-fun x896 () Bool)
(declare-fun x1163 () Bool)
(declare-fun x695 () Bool)
(declare-fun x1187 () Int)
(declare-fun x736 () Bool)
(declare-fun x803 () Bool)
(declare-fun x1062 () Int)
(declare-fun x1184 () Int)
(declare-fun x165 () Bool)
(declare-fun x1015 () Int)
(declare-fun x128 () Int)
(declare-fun x152 () Int)
(declare-fun x1192 () Bool)
(declare-fun x1140 () Int)
(declare-fun x898 () Int)
(declare-fun x1225 () Int)
(declare-fun x546 () Int)
(declare-fun x579 () x949)
(declare-fun x1052 () Int)
(declare-fun x71 () Int)
(declare-fun x1114 () x949)
(declare-fun x1244 () Bool)
(declare-fun x1060 () Int)
(declare-fun x73 () x949)
(declare-fun x826 (Int) Int)
(declare-fun x659 () Int)
(declare-fun x6 () Bool)
(declare-fun x1033 () Bool)
(declare-fun x513 () Int)
(declare-fun x80 () Bool)
(declare-fun x1132 () Int)
(declare-fun x302 () Int)
(declare-fun x1224 () Bool)
(declare-fun x8 () x949)
(declare-fun x863 () Int)
(declare-fun x942 () Int)
(declare-fun x742 () x949)
(declare-fun x779 () x949)
(declare-fun x566 () Int)
(declare-fun x286 () Int)
(declare-fun x27 () x949)
(declare-fun x350 () Int)
(declare-fun x664 () Bool)
(declare-fun x478 () x949)
(declare-fun x904 () Int)
(declare-fun x530 () Int)
(declare-fun x794 () Int)
(declare-fun x818 () Int)
(declare-fun x1105 () Bool)
(declare-fun x757 () Int)
(declare-fun x698 () Bool)
(declare-fun x822 () Int)
(declare-fun x412 () Int)
(declare-fun x1106 () Bool)
(declare-fun x774 () Bool)
(declare-fun x1128 (x949) Int)
(declare-fun x1158 () Int)
(declare-fun x982 () Int)
(define-fun x893 ((x949 x949) (x1026 Int)) x949 (ite ((_ is x528) x949) (x528 (x1121 x949) (+ x1026 (x194 x949))) (ite ((_ is x275) x949) (x275 (x86 x949) (x710 x949) (+ (x584 x949) x1026)) (x281 (+ (x1116 x949) x1026)))))
(define-fun x1195 ((x15 Int)) Int (ite (and (< x15 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x15 0)) x15 (- x15 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1185 ((x15 Int)) Int (ite (and (< x15 0) (>= x15 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x15 115792089237316195423570985008687907853269984665640564039457584007913129639936) x15))
(define-fun x273 ((x829 Int)) Bool (and (<= 0 x829) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x829)))
(define-fun x345 ((x829 Int)) Bool (and (= (x401 115792089237316195423570985008687907853269984665640564039457584007913129639935 x829) x829) (= (x401 x829 115792089237316195423570985008687907853269984665640564039457584007913129639935) x829)))
(define-fun x385 ((x829 Int)) Bool (and (= (x401 0 x829) 0) (= (x401 x829 0) 0)))
(define-fun x120 ((x829 Int)) Bool (= x829 (x401 x829 x829)))
(define-fun x132 ((x829 Int)) Bool (and (x120 x829) (x345 x829) (x385 x829)))
(define-fun x1008 ((x829 Int)) Bool (= (x401 1461501637330902918203684832716283019655932542975 x829) (x401 1461501637330902918203684832716283019655932542975 (x401 1461501637330902918203684832716283019655932542975 x829))))
(define-fun x327 ((x829 Int)) Bool (=> (and (>= x829 0) (> 1461501637330902918203684832716283019655932542976 x829)) (= x829 (x401 1461501637330902918203684832716283019655932542975 x829))))
(define-fun x900 ((x829 Int)) Bool (=> (= (x401 1461501637330902918203684832716283019655932542975 x829) x829) (and (> 1461501637330902918203684832716283019655932542976 x829) (<= 0 x829))))
(define-fun x927 ((x829 Int)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x829) (>= x829 1461501637330902918203684832716283019655932542976)) (= (x401 1461501637330902918203684832716283019655932542975 x829) (- x829 1461501637330902918203684832716283019655932542976))))
(define-fun x309 ((x829 Int) (x324 Int)) Bool (and (<= 0 x324) (= (+ (* 1461501637330902918203684832716283019655932542976 x324) (x401 1461501637330902918203684832716283019655932542975 x829)) x829)))
(define-fun x466 ((x829 Int) (x300 Int)) Bool (and (x927 x829) (x1008 x829) (x900 x829) (x309 x829 x300) (x327 x829)))
(define-fun x430 ((x829 Int) (x324 Int)) Bool (= (x401 x829 x324) (x401 x324 x829)))
(define-fun x689 ((x829 Int) (x324 Int)) Bool (and (=> (<= 0 x324) (<= (x401 x829 x324) x324)) (<= 0 (x401 x829 x324)) (=> (<= 0 x829) (>= x829 (x401 x829 x324)))))
(define-fun x1097 ((x829 Int) (x324 Int)) Bool (and (x689 x829 x324) (x430 x829 x324)))
(define-fun x469 ((x829 Int) (x300 Int)) Bool (and (x1097 x829 1461501637330902918203684832716283019655932542975) (x466 x829 x300)))
(define-fun x912 ((x829 Int)) Bool (= (x401 26959946667150639794667015087019630673637144422540572481103610249215 (x401 26959946667150639794667015087019630673637144422540572481103610249215 x829)) (x401 26959946667150639794667015087019630673637144422540572481103610249215 x829)))
(define-fun x221 ((x829 Int)) Bool (=> (and (< x829 26959946667150639794667015087019630673637144422540572481103610249216) (>= x829 0)) (= x829 (x401 26959946667150639794667015087019630673637144422540572481103610249215 x829))))
(define-fun x592 ((x829 Int)) Bool (=> (= (x401 26959946667150639794667015087019630673637144422540572481103610249215 x829) x829) (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x829) (<= 0 x829))))
(define-fun x102 ((x829 Int)) Bool (=> (and (>= x829 26959946667150639794667015087019630673637144422540572481103610249216) (> 53919893334301279589334030174039261347274288845081144962207220498432 x829)) (= (- x829 26959946667150639794667015087019630673637144422540572481103610249216) (x401 26959946667150639794667015087019630673637144422540572481103610249215 x829))))
(define-fun x672 ((x829 Int) (x324 Int)) Bool (and (<= 0 x324) (= (+ (* x324 26959946667150639794667015087019630673637144422540572481103610249216) (x401 26959946667150639794667015087019630673637144422540572481103610249215 x829)) x829)))
(define-fun x4 ((x829 Int) (x300 Int)) Bool (and (x912 x829) (x102 x829) (x672 x829 x300) (x221 x829) (x592 x829)))
(define-fun x68 ((x829 Int) (x300 Int)) Bool (and (x1097 x829 26959946667150639794667015087019630673637144422540572481103610249215) (x4 x829 x300)))
(define-fun x629 ((x829 Int)) Bool (= (x401 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x401 115792089237316195423570985008687907853269984665640564039457584007913129639904 x829)) (x401 115792089237316195423570985008687907853269984665640564039457584007913129639904 x829)))
(define-fun x1058 ((x829 Int)) Bool (=> (and (<= 0 x829) (< x829 32)) (= (x401 115792089237316195423570985008687907853269984665640564039457584007913129639904 x829) 0)))
(define-fun x705 ((x829 Int) (x324 Int) (x137 Int) (x837 Int)) Bool (and (> 32 x324) (<= 0 x837) (<= 0 x137) (= (x401 115792089237316195423570985008687907853269984665640564039457584007913129639904 x829) (* x137 32)) (= x829 (+ (* x837 115792089237316195423570985008687907853269984665640564039457584007913129639936) x324 (* 32 x137))) (< x837 1) (<= 0 x324) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x137)))
(define-fun x136 ((x829 Int) (x202 Int) (x166 Int) (x776 Int)) Bool (and (x629 x829) (x1058 x829) (x705 x829 x202 x166 x776)))
(define-fun x880 ((x829 Int) (x202 Int) (x166 Int) (x776 Int)) Bool (and (x136 x829 x202 x166 x776) (x1097 x829 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x81 ((x834 Int)) Int (x899 x834))
(define-fun x1006 ((x834 Int)) Int (ite (= 128 x834) x432 (x52 x834)))
(define-fun x727 ((x834 Int)) Int (ite (and (> (+ 160 x265) x834) (<= 160 x834)) (x899 (+ x343 (- x834 160))) (x1006 x834)))
(define-fun x709 ((x834 Int)) Int (ite (= x834 x1) 0 (x727 x834)))
(define-fun x878 ((x834 Int)) Int (ite (and (< x834 (+ x894 x1015)) (<= x894 x834)) (x899 (+ (- x834 x894) x805)) (x299 x834)))
(define-fun x539 ((x834 x949)) Int (ite (= x644 x834) x1187 (x1120 x834)))
(define-fun x447 ((x834 Int)) Int (ite (= x229 x834) x1030 (x682 x834)))
(define-fun x285 ((x834 Int)) Int (ite (= x63 x834) x1133 (x447 x834)))
(define-fun x922 ((x834 x949)) Int (ite (= x457 x834) x189 (x1034 x834)))
(define-fun x959 ((x834 x949)) Int (ite (= x1099 x834) x1187 (x1120 x834)))
(define-fun x423 ((x834 x949)) Int (ite (= x213 x834) x1187 (x1120 x834)))
(define-fun x346 ((x834 Int)) Int (ite (and (not x610) x256 x496) (x682 x834) (x285 x834)))
(define-fun x98 ((x834 Int)) Int (ite (= x594 x834) x990 (x346 x834)))
(define-fun x1165 ((x834 x949)) Int (ite (= x53 x834) x85 (x717 x834)))
(define-fun x1064 ((x834 x949)) Int (ite (= x677 x834) x1187 (x1146 x834)))
(define-fun x246 ((x834 x949)) Int (ite (= x1072 x834) x1187 (x1146 x834)))
(define-fun x972 ((x834 Int)) Int (ite (= x998 x834) x486 (x876 x834)))
(define-fun x427 ((x834 x949)) Int (ite (= x834 x426) x1187 (x582 x834)))
(define-fun x24 ((x834 Int)) Int (ite (= x834 x892) x1216 (x125 x834)))
(define-fun x846 ((x834 Int)) Int (ite (= x834 x511) x651 (x24 x834)))
(define-fun x1078 ((x834 x949)) Int (ite (= x834 x73) x1187 (x582 x834)))
(define-fun x983 ((x834 x949)) Int (ite (= x1227 x834) x987 (x1128 x834)))
(define-fun x790 ((x834 x949)) Int (ite (= x834 x243) x1187 (x582 x834)))
(define-fun x746 ((x834 Int)) Int (ite (and (not x20) (not x610) (not x47) x256 (not x384)) (x846 x834) (ite (and (not x384) (not x610) (not x47) x20 x256) (x846 x834) (x125 x834))))
(define-fun x580 ((x834 x949)) Int (ite (and (not x610) (not x20) x256 (not x384) (not x47)) (x983 x834) (x1128 x834)))
(define-fun x810 ((x834 Int)) Int (ite (= x834 x1158) x809 (x746 x834)))
(define-fun x591 ((x834 x949)) Int (ite (= x834 x657) x1187 (x51 x834)))
(define-fun x791 ((x834 x949)) Int (ite (= x259 x834) x456 (x700 x834)))
(define-fun x1131 ((x834 x949)) Int (ite (= x772 x834) x1187 (x51 x834)))
(define-fun x499 ((x834 x949)) Int (ite (and (not x610) x256 (not x384) (not x690)) (x791 x834) (x700 x834)))
(define-fun x1245 ((x834 Int)) Int (ite (= x924 x834) x462 (x826 x834)))
(define-fun x750 ((x834 Int)) Int (ite (and (not x610) (not x384) (not x774) x256 x556 (not x1145)) (x826 x834) (ite (and (not x556) (not x610) (not x774) (not x384) x256) (x239 x834) (x1245 x834))))
(define-fun x1040 ((x834 Int)) Int (ite (and x384 x256 (not x610)) (x125 x834) (ite (and x610 x256) (x682 x834) (ite (and x256 (not x774) (not x610) (not x384)) (x750 x834) (x239 x834)))))
(define-fun x701 ((x834 x949)) Int (ite (and x256 x384 (not x610)) (x700 x834) (ite (and x256 x610) (x717 x834) (x499 x834))))
(define-fun x1231 ((x834 x949)) Int (ite (and x384 x256 (not x610)) (x582 x834) (ite (and x610 x256) (x1120 x834) (ite (and x256 (not x47) (not x384) (not x610) (not x20)) (x790 x834) (ite (and (not x384) (not x610) x256 x20 (not x47)) (x1078 x834) (x427 x834))))))
(define-fun x652 ((x834 x949)) Int (ite (and x256 x384 (not x610)) (x51 x834) (ite (and x610 x256) (x1146 x834) (ite (and x256 (not x610) (not x384) (not x690)) (x1131 x834) (x591 x834)))))
(define-fun x160 ((x834 x949)) Int (ite (= x834 x27) 0 (x314 x834)))
(define-fun x859 ((x834 x949)) Int (ite (= x834 x909) 0 (x934 x834)))
(define-fun x264 ((x834 x949)) Int (ite (and x256 (not x316) x417) (x314 x834) (ite (and (not x417) x256) (x232 x834) (x160 x834))))
(define-fun x304 ((x834 x949)) Int (ite (and x256 x417 (not x316)) (x934 x834) (ite (and (not x417) x256) (x495 x834) (x859 x834))))
(define-fun x1149 ((x834 x949)) Int (ite (= x834 x947) 0 (x304 x834)))
(define-fun x968 ((x834 Int)) Int (ite (= x1025 x834) x140 (x1040 x834)))
(define-fun x758 ((x834 Int)) Int (ite (= x863 x834) x358 (x968 x834)))
(define-fun x714 ((x834 Int)) Int (ite (= x834 x624) x660 (x758 x834)))
(define-fun x783 ((x834 Int)) Int (ite (= x836 x834) x718 (x714 x834)))
(define-fun x141 ((x834 Int)) Int (ite (= x834 x501) 32 (x783 x834)))
(define-fun x576 ((x834 Int)) Int (ite (= x661 x834) x1098 (x833 x834)))
(define-fun x1038 ((x834 Int)) Int (ite (= x834 x1249) 0 (x276 x834)))
(define-fun x724 ((x834 Int)) Int (ite (= 0 x834) 1 (x192 x834)))
(define-fun x640 ((x834 Int)) Int (ite (= x834 0) 1 (x192 x834)))
(define-fun x148 ((x834 Int)) Int (ite (and x328 x361) (x724 x834) (x640 x834)))
(define-fun x952 ((x834 Int)) Int (ite (= x71 x834) x920 (x144 x834)))
(define-fun x728 ((x834 Int)) Int (ite (= x834 x71) x157 (x144 x834)))
(define-fun x869 ((x834 Int)) Int (ite (= x834 x71) x739 (x78 x834)))
(define-fun x1017 ((x834 Int)) Int (ite (and (< x834 (+ x739 x842)) (<= x842 x834)) (x148 (+ 0 (- x834 x842))) (x869 x834)))
(define-fun x33 ((x834 Int)) Int (ite (and (not x134) x6) (x1017 x834) (x78 x834)))
(define-fun x338 ((x834 Int)) Int (ite (= x904 x834) x140 (x33 x834)))
(define-fun x355 ((x834 Int)) Int (ite (= x834 x902) x1193 (x338 x834)))
(define-fun x44 ((x834 Int)) Int (ite (= x887 x834) x1242 (x355 x834)))
(define-fun x61 ((x834 Int)) Int (ite (= x834 x755) x1197 (x44 x834)))
(define-fun x422 ((x834 Int)) Int (ite (= x975 x834) 32 (x61 x834)))
(define-fun x569 ((x834 Int)) Int (ite (= x761 x834) x939 (x508 x834)))
(define-fun x212 ((x834 Int)) Int (ite (= x834 x412) 0 (x602 x834)))
(define-fun x50 ((x834 x949)) Int (ite (= x834 (x841 274184521717934524641157099916833587206)) x797 (x754 x834)))
(define-fun x1135 ((x834 x949)) Int (ite (= x834 (x841 x588)) x297 (x50 x834)))
(define-fun x84 ((x834 x949)) Int (ite (= (x841 x588) x834) x17 (x1135 x834)))
(define-fun x64 ((x834 x949)) Int (ite (= (x841 274184521717934524641157099916833587206) x834) x347 (x84 x834)))
(define-fun x348 ((x834 x949)) Int (ite (= x834 (x841 274184521717934524641157099916833587206)) x905 (x64 x834)))
(define-fun x744 ((x834 x949)) Int (ite (= (x841 x901) x834) x182 (x348 x834)))
(define-fun x289 ((x834 x949)) Int (ite (= x1013 x834) x1190 (x411 x834)))
(define-fun x439 ((x834 x949)) Int (ite (= x834 x903) x1162 (x289 x834)))
(define-fun x567 ((x834 x949)) Int (ite (and x361 x328) (x439 x834) (x411 x834)))
(define-fun x732 ((x834 x949)) Int (ite (= x834 x612) x203 (x567 x834)))
(define-fun x116 ((x834 Int)) Int (ite (= 0 x834) 1 (x67 x834)))
(define-fun x1124 ((x834 Int)) Int (ite (= x616 x834) x980 (x593 x834)))
(define-fun x1144 ((x834 x949)) Int (ite (= x834 x1055) x440 (x1022 x834)))
(define-fun x1204 ((x834 x949)) Int (ite (= x1221 x834) x87 (x1144 x834)))
(define-fun x1018 ((x834 x949)) Int (ite (and x328 x361) (x1022 x834) (x1204 x834)))
(define-fun x48 ((x834 x949)) Int (ite (= x663 x834) x245 (x1018 x834)))
(define-fun x1023 ((x834 Int)) Int (ite (= 0 x834) 1 (x67 x834)))
(define-fun x19 ((x834 Int)) Int (ite (= x834 x616) x150 (x593 x834)))
(define-fun x767 ((x834 Int)) Int (ite (and x121 x741) (x116 x834) (x1023 x834)))
(define-fun x248 ((x834 x949)) Int (ite (= (x841 x901) x834) x711 (x744 x834)))
(define-fun x268 ((x834 Int)) Int (ite (= x616 x834) x702 (x1211 x834)))
(define-fun x463 ((x834 Int)) Int (ite (and (<= x875 x834) (> (+ x875 x702) x834)) (x767 (+ (- x834 x875) 0)) (x268 x834)))
(define-fun x428 ((x834 Int)) Int (ite (and x852 x96) (x1211 x834) (x463 x834)))
(define-fun x883 ((x829 Int)) Bool (=> (and (not (= 2743102681 x829)) (not (= x829 2211524764)) (not (= x829 635128645)) (not (= 274184521717934524641157099916833587218 x829)) (not (= x829 1000000000000000000)) (not (= 2514000705 x829)) (not (= 604800 x829)) (not (= x829 274184521717934524641157099916833587206)) (not (= x829 2835717307)) (not (= x829 2293535753)) (not (= 1968616202 x829)) (not (= 2258409472 x829)) (not (= x829 2061678023)) (not (= 87118632 x829)) (not (= x829 2798343961)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x829)) (not (= x829 69947311)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x829)) (< 10000 x829) (not (= x829 911411945)) (not (= x829 759532456)) (not (= 826074471 x829)) (not (= x829 2418364589)) (not (= x829 115792089237316195423570985008687907853269984665640564039457)) (not (= 1986467848 x829)) (not (= x829 649617121)) (not (= x829 468353030)) (not (= x829 2960351575)) (not (= 142201243 x829)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x829)) (not (= x829 1461501637330902918203684832716283019655932542975)) (not (= 1889567281 x829)) (not (= x829 274184521717934524641157099916833587214)) (not (= 18446744073709551615 x829)) (not (= 2690754053 x829)) (not (= 2512682246 x829)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x829)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x829)) (not (= 2764855426 x829)) (not (= x829 2532887486))) (not ((_ is x281) (x841 x829)))))
(assert (x273 x354))
(assert (x273 x836))
(assert (= (x879 x1110) (ite (= x777 x1110) x555 (x360 x1110))))
(assert (= (x876 x563) (ite (= x563 x517) x600 (x692 x563))))
(assert (x273 x538))
(assert (x883 x254))
(assert (x273 x648))
(assert (= (x360 x200) (ite (= x862 x200) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x200))))
(assert (=> (<= x721 10000) (= (x841 x721) (x281 x721))))
(assert (= 0 (x52 x1110)))
(assert (x273 x740))
(assert (x273 x152))
(assert (= (x692 x836) (ite (= x836 x405) x1056 (x98 x836))))
(assert (x273 x1115))
(assert (x273 x382))
(assert (x883 x586))
(assert (= (ite (and (not x49) x55 x127) (x276 x1044) (x1038 x1044)) (x144 x1044)))
(assert (=> (<= x278 10000) (= (x281 x278) (x841 x278))))
(assert (= (x281 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x841 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (ite (and x55 x127 (not x49)) (x276 x1233) (x1038 x1233)) (x144 x1233)))
(assert (= (x371 (x281 2514000705)) 2514000705))
(assert (= (ite (= x1044 x405) x1056 (x98 x1044)) (x692 x1044)))
(assert (=> (>= 10000 x520) (= (x841 x520) (x281 x520))))
(assert (= (x682 x755) (ite (and x256 x751) (x299 x755) (x878 x755))))
(assert (x273 x226))
(assert (=> (<= x546 10000) (= (x841 x546) (x281 x546))))
(assert (x273 x97))
(assert (x273 x468))
(assert (= (x125 x109) (ite (and (not x610) x256 x827) (x692 x109) (ite (and x753 x256 (not x827) (not x590) (not x610)) (x876 x109) (ite (and (not x827) (not x610) (not x753) x256) (x692 x109) (x972 x109))))))
(assert (= 2293535753 (x371 (x281 2293535753))))
(assert (= (x371 (x841 x997)) x997))
(assert (x273 x177))
(assert (x273 x1213))
(assert (= (x144 x109) (ite (and (not x49) x127 x55) (x276 x109) (x1038 x109))))
(assert (x273 x308))
(assert (x273 x875))
(assert (x273 x830))
(assert (x273 x349))
(assert (x273 x1238))
(assert (=> (<= x500 10000) (= (x841 x500) (x281 x500))))
(assert (= 2512682246 (x371 (x281 2512682246))))
(assert (x273 x708))
(assert (= (x371 (x841 x819)) x819))
(assert (= x1016 (x371 (x841 x1016))))
(assert (x273 x763))
(assert (x68 x547 x317))
(assert (x273 x228))
(assert (= x704 (x371 (x841 x704))))
(assert (= x278 (x371 (x841 x278))))
(assert (= x1089 x269))
(assert (x273 x1056))
(assert (x883 x89))
(assert (x273 x124))
(assert (= (x833 x200) (ite (= x200 x965) x154 (x356 x200))))
(assert (x273 x1148))
(assert (= x432 (x299 x523)))
(assert (= (x371 (x281 468353030)) 468353030))
(assert (x273 x755))
(assert (= (x144 x349) (ite (and (not x49) x55 x127) (x276 x349) (x1038 x349))))
(assert (x883 x1196))
(assert (x273 x22))
(assert (= (ite (and x384 (not x610) x256) (x1128 x1004) (ite (and x610 x256) (x1034 x1004) (x580 x1004))) (x495 x1004)))
(assert (= (ite (= x1044 x608) x443 (x879 x1044)) (x356 x1044)))
(assert (= (ite (and x1147 x127 x856 x638 (not x318) x55) (x833 x523) (ite (and x55 x127 x856 (not x638) x1147) (x356 x523) (ite (and x856 x55 (not x1147) x127) (x879 x523) (ite (and x55 x127 (not x856)) (x360 x523) (x576 x523))))) (x276 x523)))
(assert (x273 x396))
(assert (= (ite (and x256 x751) (x299 x109) (x878 x109)) (x682 x109)))
(assert (= (x692 x529) (ite (= x529 x405) x1056 (x98 x529))))
(assert (= (ite (and x827 (not x610) x256) (x692 x1032) (ite (and x256 x753 (not x610) (not x827) (not x590)) (x876 x1032) (ite (and (not x753) (not x610) (not x827) x256) (x692 x1032) (x972 x1032)))) (x125 x1032)))
(assert (= (ite (= x1032 x965) x154 (x356 x1032)) (x833 x1032)))
(assert (x273 x82))
(assert (= (x281 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x841 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (ite (= x1241 x558) x658 (x810 x558)) (x239 x558)))
(assert (x273 x503))
(assert (=> (<= x1107 10000) (= (x841 x1107) (x281 x1107))))
(assert (x273 x902))
(assert (x273 x568))
(assert (x132 x621))
(assert (x273 x1075))
(assert (x273 x75))
(assert (x273 x824))
(assert (x273 x1133))
(assert (x273 x925))
(assert (x469 x146 x552))
(assert (x273 x1253))
(assert (= (ite (= x1044 x1241) x658 (x810 x1044)) (x239 x1044)))
(assert (x273 x533))
(assert (= (x144 x755) (ite (and x127 (not x49) x55) (x276 x755) (x1038 x755))))
(assert (x273 x307))
(assert (x273 x57))
(assert (x883 x218))
(assert (= (ite (= x349 x777) x555 (x360 x349)) (x879 x349)))
(assert (= x1142 (x371 (x841 x1142))))
(assert (x132 x146))
(assert (x883 x531))
(assert (=> (<= x997 10000) (= (x281 x997) (x841 x997))))
(assert (x273 x1188))
(assert (x273 x13))
(assert (= (x211 x1049) (ite (= x930 x1049) x271 (x258 x1049))))
(assert (= (x826 x563) (ite (= x563 x673) x418 (x239 x563))))
(assert (= (x371 (x841 x140)) x140))
(assert (x273 x1093))
(assert (= 0 (x52 x558)))
(assert (x273 x193))
(assert (x273 x1005))
(assert (= x325 (=> (and (= x1234 (x264 x8)) (< x332 2293535753) (= x332 142201243) (>= x1234 0) (> 911411945 x332) (= (x275 (x841 x1136) (x281 9) 0) x90) (= x1234 x1247) (not (= x332 69947311)) (= x735 (x787 (x841 274184521717934524641157099916833587206))) (<= x1016 1461501637330902918203684832716283019655932542975) (> 468353030 x332) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1234) (<= x305 1461501637330902918203684832716283019655932542975) (= (x275 (x841 x305) x185 0) x8) (= x185 (x275 (x841 x1016) x90 0)) (not (= x332 87118632)) (> x735 0)) (=> (and (= x66 x450) (= x226 x659) (= x493 x1247) (= x319 x806)) x712))))
(assert (x273 x279))
(assert (= x75 (x371 (x841 x75))))
(assert (= 274184521717934524641157099916833587214 (x371 (x841 274184521717934524641157099916833587214))))
(assert (= (x692 x1233) (ite (= x405 x1233) x1056 (x98 x1233))))
(assert (= (ite (and (not x610) x256 x827) (x692 x523) (ite (and (not x827) x753 x256 (not x610) (not x590)) (x876 x523) (ite (and x256 (not x827) (not x610) (not x753)) (x692 x523) (x972 x523)))) (x125 x523)))
(assert (x273 x357))
(assert (= (x879 x1032) (ite (= x777 x1032) x555 (x360 x1032))))
(assert (x273 x587))
(assert (= x270 (x371 (x841 x270))))
(assert (= x269 x188))
(assert (x273 x1110))
(assert (x273 x1083))
(assert (= x1089 x719))
(assert (= (ite (= x1108 x1049) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x422 x1049)) (x258 x1049)))
(assert (x132 x77))
(assert (x883 x1230))
(assert (x273 x866))
(assert (= 0 (x52 192)))
(assert (x273 x600))
(assert (x273 x491))
(assert (x273 x1021))
(assert (= x537 (x371 (x841 x537))))
(assert (= x197 x425))
(assert (=> (>= 10000 x969) (= (x841 x969) (x281 x969))))
(assert (x273 x157))
(assert (x273 x1096))
(assert (x273 x412))
(assert (= (ite (and x55 x127 (not x49)) (x276 x1049) (x1038 x1049)) (x144 x1049)))
(assert (=> (<= x587 10000) (= (x841 x587) (x281 x587))))
(assert (x273 x293))
(assert (= (ite (= x877 x608) x443 (x879 x877)) (x356 x877)))
(assert (=> (<= x344 10000) (= (x281 x344) (x841 x344))))
(assert (x273 x40))
(assert (= (x371 (x281 1000000000000000000)) 1000000000000000000))
(assert (= x280 (x371 (x841 x280))))
(assert (x273 x784))
(assert (x273 x659))
(assert (x273 x1212))
(assert (= (and (not x361) x328) x562))
(assert (x273 x825))
(assert (x273 x497))
(assert (x273 x270))
(assert (x273 x684))
(assert (x273 x482))
(assert (= (x371 (x281 2835717307)) 2835717307))
(assert (x883 x819))
(assert (x273 x12))
(assert (x273 x26))
(assert (= (ite (= x523 x349) x432 (x709 x349)) (x299 x349)))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x371 (x281 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (= x609 (x371 (x841 x609))))
(assert (x883 x659))
(assert (= (x281 604800) (x841 604800)))
(assert (x273 x778))
(assert (x273 x504))
(assert (= (ite (= x1233 x517) x600 (x692 x1233)) (x876 x1233)))
(assert (= x1073 (x371 (x841 x1073))))
(assert (x273 x984))
(assert (x273 x1237))
(assert (x273 x435))
(assert (x273 x621))
(assert (= x6 x647))
(assert (= (x281 826074471) (x841 826074471)))
(assert (= (x826 x431) (ite (= x673 x431) x418 (x239 x431))))
(assert (= (x841 274184521717934524641157099916833587214) (x281 274184521717934524641157099916833587214)))
(assert (x273 x1109))
(assert (= x725 (x371 (x841 x725))))
(assert (= x977 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x684) (= 759532456 x480) (not (< x480 468353030)) (= x267 (x275 (x841 x218) (x281 7) 0)) (<= 0 x684) (> 2293535753 x480) (not (= 468353030 x480)) (not (= 635128645 x480)) (>= 1461501637330902918203684832716283019655932542975 x1075) (= x560 (x787 (x841 274184521717934524641157099916833587206))) (= x454 x684) (= (x275 (x841 x1075) x244 0) x1061) (< x480 911411945) (= (x275 (x841 x546) x267 0) x244) (= (x1231 x1061) x684) (>= 1461501637330902918203684832716283019655932542975 x546) (< 0 x560)) (=> (and (= x454 x468) (= x319 x1016) (= x66 x1136) (= x226 x305)) x325))))
(assert (x273 x1141))
(assert (= x522 x458))
(assert (x273 x89))
(assert (x273 x1014))
(assert (= (x879 x1233) (ite (= x1233 x777) x555 (x360 x1233))))
(assert (x469 x953 x366))
(assert (x273 x337))
(assert (x273 x500))
(assert (= x1100 (=> (and (<= 0 x707) (= 2258409472 x507) (= x40 (x787 (x841 274184521717934524641157099916833587206))) (= x22 x707) (= x707 (x1146 x389)) (<= x631 1461501637330902918203684832716283019655932542975) (= x389 (x275 (x841 x631) x1180 0)) (not (= x507 2211524764)) (not (= 1986467848 x507)) (not (= 2061678023 x507)) (<= x707 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x507 2293535753) (= x1180 (x275 (x841 x520) (x281 6) 0)) (not (= 1968616202 x507)) (< 0 x40) (not (< x507 1968616202)) (not (< x507 911411945))) (=> (and (= x721 x66) (= x614 x319) (= x22 x665)) x91))))
(assert (= 2418364589 (x371 (x281 2418364589))))
(assert (= (ite (and x328 x361) (x952 x755) (x728 x755)) (x78 x755)))
(assert (=> (<= x145 10000) (= (x281 x145) (x841 x145))))
(assert (= (ite (and x638 x1147 x55 x127 (not x318) x856) (x833 x1233) (ite (and x55 x856 (not x638) x127 x1147) (x356 x1233) (ite (and x55 x856 x127 (not x1147)) (x879 x1233) (ite (and (not x856) x127 x55) (x360 x1233) (x576 x1233))))) (x276 x1233)))
(assert (x273 x433))
(assert (= (x239 x563) (ite (= x563 x1241) x658 (x810 x563))))
(assert (x273 x1025))
(assert (x273 x958))
(assert (= (x239 x924) (ite (= x924 x1241) x658 (x810 x924))))
(assert (= (x682 x1110) (ite (and x751 x256) (x299 x1110) (x878 x1110))))
(assert (= (ite (and x256 x827 (not x610)) (x692 x349) (ite (and (not x610) (not x590) x256 x753 (not x827)) (x876 x349) (ite (and (not x827) (not x610) (not x753) x256) (x692 x349) (x972 x349)))) (x125 x349)))
(assert (= (ite (and x751 x256) (x299 x200) (x878 x200)) (x682 x200)))
(assert (= x614 (x371 (x841 x614))))
(assert (= (x692 x673) (ite (= x673 x405) x1056 (x98 x673))))
(assert (x273 x1011))
(assert (=> (>= 10000 x890) (= (x281 x890) (x841 x890))))
(assert (x273 x215))
(assert (x273 x265))
(assert (x273 x350))
(assert (= (x371 (x841 x935)) x935))
(assert (= x1236 (x371 (x841 x1236))))
(assert (x273 x932))
(assert (x883 x1253))
(assert (= (ite (= x558 x862) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x558)) (x360 x558)))
(assert (= (x371 (x841 x235)) x235))
(assert (x883 x1048))
(assert (x883 x235))
(assert (x273 x547))
(assert (= x359 (=> (and (<= x1246 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x275 (x841 x224) x58 0) x985) (>= x1246 0) (not (= 2061678023 x786)) (< x786 2293535753) (= x1246 (x652 x985)) (not (< x786 911411945)) (not (< x786 1968616202)) (= 2258409472 x786) (not (= x786 1968616202)) (= x1246 x538) (= x58 (x275 (x841 x75) (x281 6) 0)) (< 0 x671) (= x671 (x787 (x841 274184521717934524641157099916833587206))) (not (= x786 2211524764)) (not (= x786 1986467848)) (<= x224 1461501637330902918203684832716283019655932542975)) (=> (and (= x538 x302) (= x572 x66) (= x319 x745)) x963))))
(assert (= (x356 x755) (ite (= x608 x755) x443 (x879 x755))))
(assert (x273 x631))
(assert (=> (<= x115 10000) (= (x281 x115) (x841 x115))))
(assert (= x901 (x371 (x841 x901))))
(assert (= (x52 x924) 0))
(assert (= x296 (x371 (x841 x296))))
(assert (x273 x196))
(assert (x273 x920))
(assert (x273 x933))
(assert (x273 x563))
(assert (x273 x1197))
(assert (x883 x322))
(assert (x883 x513))
(assert (x273 x46))
(assert (x273 x669))
(assert (=> (<= x586 10000) (= (x281 x586) (x841 x586))))
(assert (x273 x234))
(assert (x273 x1249))
(assert (= x587 (x371 (x841 x587))))
(assert (= (ite (= x862 x624) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x624)) (x360 x624)))
(assert (= (x276 x200) (ite (and x127 x1147 (not x318) x55 x856 x638) (x833 x200) (ite (and x1147 x127 (not x638) x55 x856) (x356 x200) (ite (and x856 x127 x55 (not x1147)) (x879 x200) (ite (and (not x856) x55 x127) (x360 x200) (x576 x200)))))))
(assert (= (ite (= x405 x200) x1056 (x98 x200)) (x692 x200)))
(assert (x273 x515))
(assert (= (x692 x808) (ite (= x405 x808) x1056 (x98 x808))))
(assert (x273 x451))
(assert (= (x841 26959946667150639794667015087019630673637144422540572481103610249215) (x281 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x273 x1159))
(assert (= (x371 (x281 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (= (ite (= x517 x523) x432 (x709 x517)) (x299 x517)))
(assert (=> (<= x931 10000) (= (x841 x931) (x281 x931))))
(assert (=> (>= 10000 x149) (= (x281 x149) (x841 x149))))
(assert (x273 x1000))
(assert (= (x356 x1233) (ite (= x608 x1233) x443 (x879 x1233))))
(assert (= (ite (and x751 x256) (x299 x1233) (x878 x1233)) (x682 x1233)))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x371 (x281 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (= x653 true))
(assert (x273 x313))
(assert (= (ite (= x1241 x109) x658 (x810 x109)) (x239 x109)))
(assert (x273 x174))
(assert (=> (>= 10000 x1229) (= (x841 x1229) (x281 x1229))))
(assert (= (x841 142201243) (x281 142201243)))
(assert (x273 x432))
(assert (x883 x1209))
(assert (x273 x1191))
(assert (x273 x418))
(assert (=> (>= 10000 x572) (= (x281 x572) (x841 x572))))
(assert (=> (<= x1111 10000) (= (x281 x1111) (x841 x1111))))
(assert (=> (<= x224 10000) (= (x841 x224) (x281 x224))))
(assert (= (ite (= x1158 x1241) x658 (x810 x1158)) (x239 x1158)))
(assert (=> (<= x631 10000) (= (x841 x631) (x281 x631))))
(assert (= (x371 (x841 x451)) x451))
(assert (= (ite (= x523 x862) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x523)) (x360 x523)))
(assert (x273 x305))
(assert (= (x371 (x281 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x273 x537))
(assert (=> (<= x357 10000) (= (x841 x357) (x281 x357))))
(assert (x273 x1088))
(assert (x273 x380))
(assert (x273 x364))
(assert (x273 x35))
(assert (= (ite (= x608 x523) x443 (x879 x523)) (x356 x523)))
(assert (x273 x398))
(assert (= (x826 x924) (ite (= x673 x924) x418 (x239 x924))))
(assert (= (x371 (x281 635128645)) 635128645))
(assert (x883 x270))
(assert (not x527))
(assert (x273 x388))
(assert (x883 x1200))
(assert (x273 x1032))
(assert (= (x876 x1032) (ite (= x517 x1032) x600 (x692 x1032))))
(assert (= (ite (and x856 x127 x638 x1147 x55 (not x318)) (x833 x529) (ite (and x127 (not x638) x55 x856 x1147) (x356 x529) (ite (and (not x1147) x856 x127 x55) (x879 x529) (ite (and (not x856) x127 x55) (x360 x529) (x576 x529))))) (x276 x529)))
(assert (x273 x407))
(assert (= (x239 x1049) (ite (= x1241 x1049) x658 (x810 x1049))))
(assert (= (x1128 x1114) (ite (and x256 (not x610) x496) (x1034 x1114) (ite (and (not x610) x256 (not x496) x272) (x1034 x1114) (x922 x1114)))))
(assert (x883 274184521717934524641157099916833587218))
(assert (x273 x1170))
(assert (x273 x908))
(assert (x273 x403))
(assert (= (ite (= x998 x517) x600 (x692 x998)) (x876 x998)))
(assert (x273 x95))
(assert (=> (>= 10000 x1142) (= (x841 x1142) (x281 x1142))))
(assert (= (x371 (x841 x198)) x198))
(assert (x273 x1216))
(assert (= (ite (and x127 (not x49) x55) (x276 x523) (x1038 x523)) (x144 x523)))
(assert (= (ite (= x1233 x965) x154 (x356 x1233)) (x833 x1233)))
(assert (= (x299 x998) (ite (= x998 x523) x432 (x709 x998))))
(assert (x273 x342))
(assert (x883 x394))
(assert (= (x281 1889567281) (x841 1889567281)))
(assert (x273 x393))
(assert (x883 x75))
(assert (= x1096 (x371 (x841 x1096))))
(assert (x273 x1118))
(assert (x273 x440))
(assert (= (x371 (x841 x251)) x251))
(assert (= (x826 x1032) (ite (= x673 x1032) x418 (x239 x1032))))
(assert (x883 x1096))
(assert (x273 x419))
(assert (= (ite (= x431 x777) x555 (x360 x431)) (x879 x431)))
(assert (= (x360 x431) (ite (= x862 x431) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x431))))
(assert (x273 x149))
(assert (= (ite (= x862 x1032) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x1032)) (x360 x1032)))
(assert (=> (>= 10000 x251) (= (x281 x251) (x841 x251))))
(assert (x273 x155))
(assert (x273 x530))
(assert (= (x371 (x841 x630)) x630))
(assert (x883 x1073))
(assert (x883 x164))
(assert (x883 x1142))
(assert (x273 x1162))
(assert (x273 x128))
(assert (= (x371 (x281 87118632)) 87118632))
(assert (x273 x564))
(assert (= (x876 x877) (ite (= x517 x877) x600 (x692 x877))))
(assert (x273 x454))
(assert (= (ite (and x856 x638 x1147 x55 (not x318) x127) (x833 x877) (ite (and x55 x1147 x856 x127 (not x638)) (x356 x877) (ite (and x55 (not x1147) x856 x127) (x879 x877) (ite (and (not x856) x55 x127) (x360 x877) (x576 x877))))) (x276 x877)))
(assert (x273 x818))
(assert (x273 x911))
(assert (= (x371 (x841 x565)) x565))
(assert (= (x299 x529) (ite (= x523 x529) x432 (x709 x529))))
(assert (x883 x1107))
(assert (= (x125 x877) (ite (and x256 x827 (not x610)) (x692 x877) (ite (and (not x590) x753 x256 (not x610) (not x827)) (x876 x877) (ite (and (not x827) x256 (not x610) (not x753)) (x692 x877) (x972 x877))))))
(assert (x273 x1190))
(assert (=> (>= 10000 x609) (= (x841 x609) (x281 x609))))
(assert (x883 x815))
(assert (x273 x739))
(assert (= x852 (or (and x121 x741) (and x107 x541))))
(assert (= x305 (x371 (x841 x305))))
(assert (x273 x310))
(assert (x273 x723))
(assert (x273 x864))
(assert (= (x508 x1032) (ite (= x740 x1032) x128 (x945 x1032))))
(assert (x273 x630))
(assert (x273 x930))
(assert (x469 x955 x415))
(assert (= (ite (and x256 x751) (x299 x808) (x878 x808)) (x682 x808)))
(assert (x273 x106))
(assert (x883 x1111))
(assert (= (ite (= x405 x349) x1056 (x98 x349)) (x692 x349)))
(assert (x273 x725))
(assert (x273 x133))
(assert (x273 x507))
(assert (= (ite (= x1049 x405) x1056 (x98 x1049)) (x692 x1049)))
(assert (x273 x104))
(assert (= (ite (= x862 x1233) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x1233)) (x360 x1233)))
(assert (x273 x614))
(assert (= x219 (or (and (not x535) x647) x852 (and (not x127) x55))))
(assert (= (and x541 (not x107)) x1239))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x1174) (>= 1461501637330902918203684832716283019655932542975 x296) (not (= x830 2293535753)) (= x1232 (x275 (x841 x587) (x281 4) 0)) (not (= x830 2418364589)) (> x1088 0) (= x524 x377) (not (< x830 2293535753)) (= x1088 (x787 (x841 274184521717934524641157099916833587206))) (not (= x830 2512682246)) (= 2532887486 x830) (= (x275 (x841 x82) x408 0) x1169) (< x830 2690754053) (= (x275 (x841 x1174) x1169 0) x1012) (<= 0 x524) (> 2960351575 x830) (= x408 (x275 (x841 x296) x1232 0)) (<= x524 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x82) (= (x255 x1012) x524)) (=> (and (= x1054 x41) (= x417 (< x1087 x1196)) (or (and (<= x805 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1181 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x805 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1181 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1181 x805))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x805) true) (= x432 (x899 x179)) (= 0 x266) (< x31 2293535753) (= (x1185 (- x805 4)) x1215) (= x1199 x1036) (<= x622 1461501637330902918203684832716283019655932542975) (<= 0 x622) (= x376 x1087) (>= 1461501637330902918203684832716283019655932542975 x1007) (= x1187 x1182) (= x1240 x1112) (= x365 (= 0 x57)) (or (and (= x1035 (x275 (x841 x1087) (x281 9) 0)) (= (x1195 (+ x1087 1)) x28) (or (not x316) (and (= x942 (x1195 (+ x1087 2))) (= x936 (x275 (x841 x28) (x281 9) 0)) (= x858 (x275 (x841 x115) x936 0)) (= x550 (x275 (x841 x28) (x281 3) 0)) x316 (= x909 (x275 (x841 x140) x742 0)) (= (x401 1461501637330902918203684832716283019655932542975 x41) x115) (not x250) (= (x275 (x841 x420) x550 0) x742) (= x27 (x275 (x841 x140) x858 0)) (= x250 (> x1037 x942)) (= (x401 1461501637330902918203684832716283019655932542975 x41) x420))) (= (< x28 x1196) x316) (= x820 (x275 (x841 x235) x910 0)) x417 (= x1251 (x275 (x841 x140) x478 0)) (= (x275 (x841 x704) x1035 0) x478) (= x505 (x275 (x841 x140) x820 0)) (= (x275 (x841 x1087) (x281 3) 0) x910) (= x235 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x704 (x401 1461501637330902918203684832716283019655932542975 x41))) (not x417)) (= x333 (>= x962 x114)) (= x1094 x57) (not (> x763 x805)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1215) (and (> 128 x1215) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1215) true)))) (= x523 (x1195 (+ 160 x1051))) (= x209 x937) (= (x709 128) x908) (= (= 0 x432) x751) (= x1256 (< 0 x771)) (= (x787 (x841 274184521717934524641157099916833587206)) x1160) (= x1051 (mod (* 32 x432) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= x1007 0) (= x140 x1235) (= x1187 x962) (<= 0 x1235) (= x1087 x168) (= x599 (and x759 x874)) (not (< x1196 x1087)) (= x589 0) (= (x1195 (+ x1051 32)) x429) (not (< x805 4)) (= x31 87118632) (= x377 x937) (= x277 x41) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x201) (not (< 18446744073709551615 x432)) (not (> 1 x908)) (= x1 (x1195 (+ x265 160))) (= x1066 0) (= (x1195 (+ x946 x343)) x763) (= (= 0 x1240) x828) (< x31 911411945) (= x888 x114) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x986) (= x986 (x1128 x943)) (<= x201 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x298 (= 0 x393)) (= (x1146 x169) x784) (or (and (= x1011 (x692 x405)) (= (< x1011 x1187) x703) (= x607 (= 0 x784)) (or (and (= x364 x393) (= x530 (x692 x594)) (not (> x530 x760)) (= x364 (x1185 (- x760 x530))) x607) (and (= 604800 x1024) (not x607) (= (x1185 (- x760 x784)) x1039) (= x393 x545) (= (ite (< x1039 604800) x1039 604800) x545) (not (< x760 x784)))) x336 (or (and (= x760 x196) x703 (= (x692 x405) x196)) (and (not x703) (= x760 x1187)))) (and (= x393 0) (not x336))) (not (< x201 x168)) (>= x986 0) (<= x784 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x164 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x405 (x1195 (+ 32 x594))) (<= 0 x201) (= (x275 (x841 x1087) (x281 6) 0) x374) (>= x1056 0) (or (and (= x594 x229) (= x1117 (x275 (x841 x344) x913 0)) x496 (= (x275 (x841 x140) x1117 0) x644) (= x344 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x913 (x275 (x841 x1087) (x281 7) 0))) (and (= (= x907 0) x272) (= (< x778 x1077) x618) (>= x1030 0) (<= x778 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1030 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1133 0) (= (x275 (x841 x819) x929 0) x290) (= x1030 (x696 x867)) (= x1077 (x285 x63)) (= x63 (x1195 (+ 32 x229))) (= x819 (x401 1461501637330902918203684832716283019655932542975 x41)) (= (x1120 x554) x778) (not x496) (= (x275 (x841 x1087) (x281 1) 0) x867) (= x966 (x1195 (+ 64 x229))) (<= 0 x778) (= x1133 (x72 x857)) (<= x1133 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x857 (x893 x867 1)) (= x554 (x275 (x841 x140) x290 0)) (= (x275 (x841 x1087) (x281 7) 0) x929) (or (and (= 0 x907) (not x618)) (and (= (= 0 x778) x597) (or (and (= x1187 x662) (not x871)) (and x871 (= x1043 (x285 x63)) (= x1043 x662))) (= (< x215 x1187) x871) (or (and (= (ite (< x964 604800) x964 604800) x104) (= x964 (x1185 (- x662 x778))) (= x907 x104) (not (> x778 x662)) (not x597) (= 604800 x1172)) (and (= (x285 x229) x310) x597 (= x737 (x1185 (- x662 x310))) (= x737 x907) (not (< x662 x310)))) x618 (= (x285 x63) x215))) (or (and (= (x401 1461501637330902918203684832716283019655932542975 x41) x29) (= (x275 (x841 x1087) (x281 7) 0) x633) (= (x275 (x841 x29) x633 0) x1079) x272 (= x213 (x275 (x841 x140) x1079 0)) (= x966 x594)) (and (= x514 (x275 (x841 x1087) (x281 3) 0)) (= (x275 (x841 x140) x1009 0) x457) (not x272) (= (* x907 x813) x34) (= (x275 (x841 x609) x514 0) x1009) (= (x275 (x841 x969) x1219 0) x404) (= x969 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x189 x34) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x907 x813)) (= x1099 (x275 (x841 x140) x404 0)) (= x609 (x401 1461501637330902918203684832716283019655932542975 x41)) (= (x275 (x841 x1087) (x281 7) 0) x1219) (= x594 x966))))) (= x1020 (x275 (x841 x1087) (x281 10) 0)) (= (x401 1461501637330902918203684832716283019655932542975 x41) x1111) (or (and (= (x401 1461501637330902918203684832716283019655932542975 x41) x1118) (= x513 (x401 1461501637330902918203684832716283019655932542975 x41)) (= (x275 (x841 x513) x851 0) x53) (not x298) (= x677 (x275 (x841 x1118) x626 0)) (= x683 (* x393 x944)) (= x851 (x275 (x841 x1087) (x281 5) 0)) (= x626 (x275 (x841 x1087) (x281 6) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x393 x944)) (= x85 x683)) (and (= x598 (x275 (x841 x1087) (x281 6) 0)) x298 (= x1072 (x275 (x841 x525) x598 0)) (= (x401 1461501637330902918203684832716283019655932542975 x41) x525))) (= (x275 (x841 x280) x1020 0) x387) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1076) (= x827 (= x986 0)) (>= x1076 0) (= x1189 (x275 (x841 x1087) (x281 9) 0)) (= x943 (x275 (x841 x140) x171 0)) (= x336 (< x784 x12)) (= x249 (x275 (x841 x1087) (x281 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x201) (= x278 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x1183 (x275 (x841 x1087) (x281 1) 0)) (= (x696 x1183) x990) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1056) (= (x275 (x841 x1087) (x281 3) 0) x334) (not (> x168 x201)) (= x280 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x496 (= x813 0)) (= (> x1096 x1196) x384) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x944) (= x171 (x275 (x841 x1111) x334 0)) (= (x1195 (+ x594 64)) x892) (= x1056 (x72 x181)) (<= 0 x201) (= (x692 x405) x12) (>= x944 0) (>= x784 0) (<= x813 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and (= x1096 x1052) (= x1052 (x1195 (+ 1 x1087))) x827) (and (not x827) (= (> x432 0) x753) (= 1 x1101) (= x1191 x1096) (= x108 (div x1237 x1076)) (< 0 x1076) (or (not x753) (and (>= 1461501637330902918203684832716283019655932542975 x26) (= (> x432 1) x590) (> x329 0) (= x343 x350) (or (not x590) (and (= x451 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x566 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x486 (+ x294 x536)) (= x236 (x275 (x841 x1107) x151 0)) (= (x899 x380) x757) (= (* x459 x108) x775) (= x578 (< 2 x432)) (>= x459 0) (= (x899 x380) x1107) (= x536 x113) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1210) (= (x1195 (+ 64 x179)) x380) (= (x275 (x841 x757) x674 0) x807) (= x1140 (x876 x523)) (not x578) (= x161 (x275 (x841 x451) x216 0)) (>= x1210 0) (= (x275 (x841 x1087) (x281 11) 0) x498) (= x674 (x275 (x841 x566) x498 0)) (<= x1107 1461501637330902918203684832716283019655932542975) (= 0 x1210) (= x113 (div x775 1000000000000000000)) x590 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x459) (= x294 x1238) (>= 1461501637330902918203684832716283019655932542975 x757) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x108 x459)) (< 1 x1140) (< 1 x432) (= (x1195 (+ x429 192)) x998) (= (x275 (x841 x1087) (x281 4) 0) x216) (< (+ x1238 x113) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< 1 x432) (= x151 (x275 (x841 x140) x161 0)) (= (x479 x807) x459) (= x1238 (x876 x998)) (= (x255 x236) x1210))) (<= x335 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x26 (x899 x350)) (= x198 (x899 x350)) (= x604 (* x335 x108)) (= (x275 (x841 x531) x1104 0) x353) (<= 0 x335) (>= x669 0) (= x1122 (x275 (x841 x198) x971 0)) (= (x479 x1122) x335) (= x699 (x275 (x841 x26) x323 0)) x753 (= (x401 1461501637330902918203684832716283019655932542975 x41) x500) (= x634 x129) (= (div x604 1000000000000000000) x954) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x129 x954)) (= 0 x669) (= x971 (x275 (x841 x500) x231 0)) (= (x255 x699) x669) (= (x401 1461501637330902918203684832716283019655932542975 x41) x531) (= x1104 (x275 (x841 x1087) (x281 4) 0)) (= (x275 (x841 x140) x353 0) x323) (<= x669 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x432 0) (<= x198 1461501637330902918203684832716283019655932542975) (= x129 (x692 x517)) (= (x692 x523) x329) (= x517 (x1195 (+ 160 x429))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x335 x108)) (= x231 (x275 (x841 x1087) (x281 11) 0)) (< 0 x432) (= x600 (+ x882 x634)) (= x954 x882))) (= x1254 0) (= x1237 (mod (* 1000000000000000000 x986) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1195 (+ x1087 1)) x1191) (= (x401 x1101 x938) x1254) (= (ite (> x986 115792089237316195423570985008687907853269984665640564039457) 1 0) x938))) (= (x275 (x841 x140) x341 0) x1220) (= (x700 x948) x1076) (= (x401 1461501637330902918203684832716283019655932542975 x41) x1139) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x990) (= (x693 x387) x944) (>= x813 0) (or (and (= x690 (= 0 x10)) (or (and (= (x1195 (+ x1096 1)) x74) x774 (= x74 x818)) (and (= 0 x497) (= (< 0 x432) x556) (= (x1195 (+ x1096 1)) x1148) (= x77 (ite (< 115792089237316195423570985008687907853269984665640564039457 x378) 1 0)) (> x162 0) (= (mod (* 1000000000000000000 x378) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x342) (or (and (= (x239 x673) x207) (= (+ x1134 x1081) x418) (= x835 (x239 x523)) x556 (<= 0 x1060) (< (* x1060 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x537 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x343 x642) (= x274 (x275 (x841 x1096) (x281 4) 0)) (= x654 (x275 (x841 x140) x870 0)) (= x286 x1134) (= (x899 x642) x251) (< 0 x835) (= x673 (x1195 (+ x429 160))) (<= 0 x445) (= (x275 (x841 x92) x476 0) x363) (<= x1059 1461501637330902918203684832716283019655932542975) (= x1060 (x479 x1102)) (= (x275 (x841 x537) x274 0) x870) (or (not x1145) (and (= (> x432 2) x643) (= x1050 (x826 x523)) (< (+ x473 x1053) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1152 (x275 (x841 x1142) x1218 0)) (= (x275 (x841 x931) x961 0) x1178) (> x432 1) (<= 0 x898) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x898) (= (x899 x792) x1209) (= (x275 (x841 x140) x1178 0) x1130) x1145 (= x931 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x1053 x812) (= (x479 x1152) x681) (<= x1209 1461501637330902918203684832716283019655932542975) (= x898 0) (not x643) (= x924 (x1195 (+ 192 x429))) (>= 1461501637330902918203684832716283019655932542975 x1142) (= (x826 x924) x473) (= x1142 (x899 x792)) (<= 0 x681) (= (x401 1461501637330902918203684832716283019655932542975 x41) x1000) (<= x681 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x898 (x255 x156)) (= x462 (+ x812 x1086)) (= (x275 (x841 x1096) (x281 4) 0) x961) (= x42 (x275 (x841 x1096) (x281 11) 0)) (= x156 (x275 (x841 x1209) x1130 0)) (< (* x681 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (div x1255 1000000000000000000) x1053) (< 1 x432) (= (x1195 (+ x179 64)) x792) (= x1255 (* x681 x1127)) (= x473 x1086) (> x1050 1) (= (x275 (x841 x1000) x42 0) x1218))) (= (x401 1461501637330902918203684832716283019655932542975 x41) x92) (= x445 (x255 x549)) (<= x1060 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x899 x642) x1059) (= (x275 (x841 x1059) x654 0) x549) (< 0 x432) (> x432 0) (= x445 0) (<= x445 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x286 (div x1226 1000000000000000000)) (= x476 (x275 (x841 x1096) (x281 11) 0)) (= x1226 (* x1060 x1127)) (>= 1461501637330902918203684832716283019655932542975 x251) (= x1102 (x275 (x841 x251) x363 0)) (< (+ x207 x286) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (> x432 1) x1145) (= x207 x1081)) (not x556)) (= (x401 x391 x77) x497) (= x1148 x818) (not x774) (= x391 1) (= (div x342 x162) x1127))) (or (and (= 0 x10) (not x3)) (and (or (and (= x403 (x1185 (- x257 x388))) x139 (not (> x388 x257)) (= x388 (x239 x1158)) (= x403 x10)) (and (= x10 x849) (= 604800 x951) (= x849 (ite (> 604800 x406) x406 604800)) (not (< x257 x822)) (= x406 (x1185 (- x257 x822))) (not x139))) x3 (or (and (= x257 x283) x685 (= (x239 x1241) x283)) (and (not x685) (= x257 x1187))) (= x204 (x239 x1241)) (= x139 (= x822 0)) (= (< x204 x1187) x685))) (= (x275 (x841 x586) x1222 0) x122) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x809) (= (x275 (x841 x140) x579 0) x628) (<= 0 x596) (= (x893 x557 1) x502) (= x658 (x72 x502)) (= x586 (x401 1461501637330902918203684832716283019655932542975 x41)) (>= x162 0) (= x596 (x693 x441)) (not x384) (>= x201 0) (= x1114 (x275 (x841 x140) x122 0)) (= x822 (x51 x1123)) (= (= 0 x378) x774) (= x441 (x275 (x841 x1048) x369 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x162) (<= x252 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x809) (= (x275 (x841 x1096) (x281 10) 0) x369) (<= x822 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x401 1461501637330902918203684832716283019655932542975 x41) x1048) (= (x1195 (+ x1158 64)) x650) (not (> x1096 x201)) (or (and (= x1186 (x275 (x841 x1096) (x281 5) 0)) (= (x401 1461501637330902918203684832716283019655932542975 x41) x270) (< (* x596 x10) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x690) (= x259 (x275 (x841 x270) x1186 0)) (= x311 (x275 (x841 x1096) (x281 6) 0)) (= (* x10 x596) x518) (= (x401 1461501637330902918203684832716283019655932542975 x41) x1252) (= x518 x456) (= x772 (x275 (x841 x1252) x311 0))) (and x690 (= (x275 (x841 x1096) (x281 6) 0) x848) (= (x401 1461501637330902918203684832716283019655932542975 x41) x648) (= x657 (x275 (x841 x648) x848 0)))) (= x1253 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x1222 (x275 (x841 x1096) (x281 3) 0)) (= x1207 (x275 (x841 x1096) (x281 6) 0)) (= x1068 (x401 1461501637330902918203684832716283019655932542975 x41)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x378) (= (x239 x1241) x769) (> x818 x1037) (<= 0 x658) (>= x378 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x596) (= (x275 (x841 x89) x16 0) x187) (= (x499 x187) x162) (= x378 (x580 x1114)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x658) (= x110 (x275 (x841 x1096) (x281 9) 0)) (= (x275 (x841 x1096) (x281 5) 0) x16) (= x1123 (x275 (x841 x1253) x1207 0)) (or (and (<= 0 x1216) (= x234 (x582 x743)) (= x37 (< x234 x639)) (= x94 (x275 (x841 x1096) (x281 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1216) (= x322 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x651 (x72 x1080)) (>= x234 0) (= x743 (x275 (x841 x140) x619 0)) (or (and (< (* x252 x487) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x987 x853) (= x357 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x646 (x275 (x841 x357) x421 0)) (= (x275 (x841 x140) x490 0) x1227) (= (x275 (x841 x1236) x489 0) x490) (= (x401 1461501637330902918203684832716283019655932542975 x41) x1236) (= x1158 x354) (= (x275 (x841 x1096) (x281 3) 0) x489) (not x20) (= x853 (* x252 x487)) (= x243 (x275 (x841 x140) x646 0)) (= (x275 (x841 x1096) (x281 7) 0) x421)) (and (= (x275 (x841 x140) x738 0) x73) (= (x401 1461501637330902918203684832716283019655932542975 x41) x815) (= (x275 (x841 x815) x796 0) x738) (= x354 x1158) (= (x275 (x841 x1096) (x281 7) 0) x796) x20)) (= x1080 (x893 x94 1)) (= (= 0 x487) x20) (= x511 (x1195 (+ 96 x594))) (>= x651 0) (= x619 (x275 (x841 x322) x367 0)) (<= x651 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x846 x511) x639) (<= x234 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x367 (x275 (x841 x1096) (x281 7) 0)) (= x354 (x1195 (+ x594 128))) (not x47) (or (and (not x37) (= x487 0)) (and x37 (= x941 (x846 x511)) (or (and (= x1208 x1187) (not x105)) (and x105 (= x1208 x816) (= (x846 x511) x816))) (= (= 0 x234) x512) (= x105 (< x941 x1187)) (or (and (= x1202 x487) (= (x1185 (- x1208 x399)) x1202) x512 (not (> x399 x1208)) (= x399 (x846 x892))) (and (= (ite (< x1214 604800) x1214 604800) x7) (not (< x1208 x234)) (= 604800 x655) (not x512) (= x7 x487) (= x1214 (x1185 (- x1208 x234))))))) (= x1216 (x696 x94))) (and (= (x275 (x841 x1096) (x281 7) 0) x516) (= (x275 (x841 x725) x516 0) x119) (= x892 x1158) (= x426 (x275 (x841 x140) x119 0)) (= (x401 1461501637330902918203684832716283019655932542975 x41) x725) x47)) (= (> x769 x822) x3) (<= x201 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x89 (x401 1461501637330902918203684832716283019655932542975 x41)) (>= x252 0) (= (x1195 (+ 32 x1158)) x1241) (= (= x252 0) x47) (not (> x1096 x201)) (<= x201 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x201) (= x579 (x275 (x841 x1068) x110 0)) (<= 0 x822) (= (x275 (x841 x1096) (x281 1) 0) x557) (= (x232 x628) x252) (= (x696 x557) x809) (= x624 x650)) (and x384 (= x624 x892))) (= x341 (x275 (x841 x164) x1189 0)) (= (x275 (x841 x278) x249 0) x948) (= (x893 x1183 1) x181) (not x610) (= x813 (x232 x1220)) (= (x275 (x841 x1139) x374 0) x169) (<= 0 x990)) (and (= x229 x624) x610)) (= x1126 x407) (= x435 128) (= (mod (* 32 x432) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x265) (> x1160 0) (= x874 (and x828 x365)) (>= 1461501637330902918203684832716283019655932542975 x41) (or (and (not (< x908 1)) x1256 (not (> x623 1)) (= x623 (x1185 (- x908 1))) (= (> x908 1) x988) (or (and (= x839 (x401 1461501637330902918203684832716283019655932542975 x1250)) (< 1 x339) (< 0 x1071) (= x621 (x709 160)) (= (x709 192) x1250) (or (not x656) (and (= (x709 224) x1090) (not x167) (= (< 3 x908) x167) (not (= x225 x583)) x656 (= (x401 1461501637330902918203684832716283019655932542975 x146) x225) (= (x709 160) x146) (< 0 x932) (= x583 (x401 1461501637330902918203684832716283019655932542975 x1090)) (> x1119 2) (= x932 (x709 128)) (= (x709 128) x1119))) (= (x401 1461501637330902918203684832716283019655932542975 x621) x370) (not (= x370 x839)) (= (< 2 x908) x656) (= (x709 128) x1071) (= x339 (x709 128)) x988) (not x988))) (not x1256)) (= (x1185 (- x908 1)) x771) (= (= x209 0) x759) (or (and (= (x1195 (+ x429 160)) x894) (not x751) (= (mod (* 32 x432) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1015)) x751) (= (= 0 x152) x69) x333 (= x946 (mod (* 32 x432) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1196 x1037) (= x610 (> x1087 x1196)) (>= 1461501637330902918203684832716283019655932542975 x1235) (= x1196 x625) (= 0 x1036) (= x229 (x1195 (+ x523 x995))) (= x13 0) (<= 0 x201) x101 (> 468353030 x31) (= x532 x291) (> x805 131) (= x152 x888) (= (x1195 (+ 36 x291)) x343) (> x201 x1196) (= x1007 x1126) (not (< 18446744073709551615 x532)) (= x1181 (x1195 (+ x291 35))) (not (= 69947311 x31)) (= (x1195 (+ x265 32)) x995) (= (or x599 (not x69)) x101) (= (x1195 (+ x291 4)) x179)) x390)) x605))
(assert (= x648 (x371 (x841 x648))))
(assert (= (x371 (x841 x1111)) x1111))
(assert (x273 x806))
(assert (=> (>= 10000 x1139) (= (x281 x1139) (x841 x1139))))
(assert (= (x371 (x281 1889567281)) 1889567281))
(assert (x273 x813))
(assert (= (ite (= x877 x405) x1056 (x98 x877)) (x692 x877)))
(assert (x273 x915))
(assert (= (ite (= x836 x523) x432 (x709 x836)) (x299 x836)))
(assert (= (x371 (x841 x1230)) x1230))
(assert (= (x281 2690754053) (x841 2690754053)))
(assert (x273 x203))
(assert (= x256 x55))
(assert (= (x692 x594) (ite (= x405 x594) x1056 (x98 x594))))
(assert (x883 x450))
(assert (= x149 (x371 (x841 x149))))
(assert (= (ite (and x361 x328) (x952 x877) (x728 x877)) (x78 x877)))
(assert (= x254 (x371 (x841 x254))))
(assert (= (x371 (x841 x394)) x394))
(assert (x273 x113))
(assert (x273 x1062))
(assert (x883 x802))
(assert (=> (>= 10000 x1073) (= (x281 x1073) (x841 x1073))))
(assert (= (x371 (x281 2798343961)) 2798343961))
(assert (x273 x1015))
(assert (x273 x681))
(assert (=> (>= 10000 x802) (= (x841 x802) (x281 x802))))
(assert (= (ite (and (not x610) x496 x256) (x1034 x943) (ite (and (not x610) (not x496) x256 x272) (x1034 x943) (x922 x943))) (x1128 x943)))
(assert (x273 x453))
(assert (x273 x1029))
(assert (= (x879 x558) (ite (= x558 x777) x555 (x360 x558))))
(assert (x883 x806))
(assert (x273 x881))
(assert (= 0 (x52 x529)))
(assert (= (ite (= x405 x755) x1056 (x98 x755)) (x692 x755)))
(assert (x132 1461501637330902918203684832716283019655932542975))
(assert (=> (<= x1230 10000) (= (x841 x1230) (x281 x1230))))
(assert (= (x371 (x841 x588)) x588))
(assert (= (x371 (x281 18446744073709551615)) 18446744073709551615))
(assert (x273 x838))
(assert (=> (<= x155 10000) (= (x281 x155) (x841 x155))))
(assert (x273 x752))
(assert (x273 x802))
(assert (x883 x451))
(assert (x273 x688))
(assert (x273 x445))
(assert (= (ite (and x361 x328) (x952 x1044) (x728 x1044)) (x78 x1044)))
(assert (x273 x229))
(assert (x883 x931))
(assert (= (ite (and x256 x827 (not x610)) (x692 x529) (ite (and (not x610) (not x827) x256 x753 (not x590)) (x876 x529) (ite (and (not x610) x256 (not x827) (not x753)) (x692 x529) (x972 x529)))) (x125 x529)))
(assert (= 0 (x52 x563)))
(assert (= (ite (and x751 x256) (x299 x1032) (x878 x1032)) (x682 x1032)))
(assert (x273 x1069))
(assert (= (ite (and x638 x55 (not x318) x127 x1147 x856) (x833 x1032) (ite (and x127 x1147 x856 x55 (not x638)) (x356 x1032) (ite (and x127 x55 x856 (not x1147)) (x879 x1032) (ite (and x55 x127 (not x856)) (x360 x1032) (x576 x1032))))) (x276 x1032)))
(assert (x273 x71))
(assert (x273 x198))
(assert (x273 x23))
(assert (x273 x1087))
(assert (x273 x583))
(assert (= x155 (x371 (x841 x155))))
(assert (x273 x368))
(assert (x883 x757))
(assert (= x188 x749))
(assert (x273 x257))
(assert (= x159 (=> (and (= x933 x665) (= x1213 x295) (= x461 x302) (= x379 (>= x461 x933))) (and (=> (and (= (<= x1029 x688) x1194) (= x468 x688) (= x1029 x888)) (and (=> (and (= x824 x992) (= x436 x915) (= (<= x992 x436) x191)) (and x191 (=> (and (= x223 x1213) (= x1041 x937) (= x889 (<= x1041 x223))) (and (=> (and (= x1115 87118632) (= x1151 (<= x1093 x620)) (= true x21) (= x1093 x697) (= 87118632 x184) (= x606 false) (= x974 x620)) x1151) x889)))) x1194)) x379))))
(assert (x273 x1201))
(assert (= (x833 x349) (ite (= x349 x965) x154 (x356 x349))))
(assert (= (x258 x109) (ite (= x109 x1108) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x422 x109))))
(assert (= x145 (x371 (x841 x145))))
(assert (x273 x391))
(assert (x273 x761))
(assert (= (x371 (x841 x500)) x500))
(assert (x273 x780))
(assert (= (x125 x924) (ite (and x256 (not x610) x827) (x692 x924) (ite (and (not x827) (not x610) (not x590) x753 x256) (x876 x924) (ite (and x256 (not x827) (not x753) (not x610)) (x692 x924) (x972 x924))))))
(assert (x273 x66))
(assert (=> (>= 10000 x1016) (= (x281 x1016) (x841 x1016))))
(assert (x273 x965))
(assert (=> (>= 10000 x1096) (= (x841 x1096) (x281 x1096))))
(assert (= 0 (x52 x349)))
(assert (= (x281 274184521717934524641157099916833587218) (x841 274184521717934524641157099916833587218)))
(assert (= (x682 x431) (ite (and x751 x256) (x299 x431) (x878 x431))))
(assert (= x1075 (x371 (x841 x1075))))
(assert (x273 x487))
(assert (= (x371 (x281 826074471)) 826074471))
(assert (=> (<= x1174 10000) (= (x281 x1174) (x841 x1174))))
(assert (x273 x1225))
(assert (x273 x142))
(assert (x273 x1077))
(assert (x273 x450))
(assert (= (x371 (x841 x124)) x124))
(assert (x273 x210))
(assert (x132 x449))
(assert (= (x299 x563) (ite (= x563 x523) x432 (x709 x563))))
(assert (x273 x461))
(assert (x883 x145))
(assert (x273 x1090))
(assert (x883 x278))
(assert (x273 x939))
(assert (x68 x449 x785))
(assert (= (x371 (x841 x76)) x76))
(assert (= (x371 (x841 x1252)) x1252))
(assert (= (x299 x755) (ite (= x523 x755) x432 (x709 x755))))
(assert (x273 x809))
(assert (= (x299 x924) (ite (= x924 x523) x432 (x709 x924))))
(assert (= (x356 x529) (ite (= x529 x608) x443 (x879 x529))))
(assert (x273 x769))
(assert (x273 x1047))
(assert (x273 x302))
(assert (x273 x459))
(assert (x273 x343))
(assert (x273 x1030))
(assert (x273 x1052))
(assert (= (x1128 x1004) (ite (and x256 x496 (not x610)) (x1034 x1004) (ite (and (not x496) x272 x256 (not x610)) (x1034 x1004) (x922 x1004)))))
(assert (x273 x1127))
(assert (x273 x1111))
(assert (=> (>= 10000 x75) (= (x841 x75) (x281 x75))))
(assert (= 0 (x52 x1233)))
(assert (= (ite (= x382 x1032) x1168 (x211 x1032)) (x945 x1032)))
(assert (x273 x344))
(assert (x273 x1171))
(assert (x273 x456))
(assert (x273 x204))
(assert (x273 x849))
(assert (= (x211 x349) (ite (= x349 x930) x271 (x258 x349))))
(assert (= (ite (and x856 x127 x638 (not x318) x1147 x55) (x833 x755) (ite (and (not x638) x55 x856 x127 x1147) (x356 x755) (ite (and (not x1147) x856 x55 x127) (x879 x755) (ite (and x55 (not x856) x127) (x360 x755) (x576 x755))))) (x276 x755)))
(assert (x273 x697))
(assert (= 0 (x52 224)))
(assert (x273 x266))
(assert (x273 x517))
(assert (x883 x525))
(assert (x273 x898))
(assert (x273 x609))
(assert (x273 x1091))
(assert (= (ite (and x328 x361) (x952 x1233) (x728 x1233)) (x78 x1233)))
(assert (= (x879 x1044) (ite (= x777 x1044) x555 (x360 x1044))))
(assert (= (ite (= x965 x1044) x154 (x356 x1044)) (x833 x1044)))
(assert (= (x281 2418364589) (x841 2418364589)))
(assert (= (x841 468353030) (x281 468353030)))
(assert (= x573 x1031))
(assert (= (x692 x924) (ite (= x924 x405) x1056 (x98 x924))))
(assert (=> (<= x935 10000) (= (x281 x935) (x841 x935))))
(assert (x883 x648))
(assert (= (x826 x1110) (ite (= x673 x1110) x418 (x239 x1110))))
(assert (= x82 (x371 (x841 x82))))
(assert (x273 x1126))
(assert (x273 x446))
(assert (x273 x38))
(assert (= (x371 (x841 x721)) x721))
(assert (= (x239 x808) (ite (= x808 x1241) x658 (x810 x808))))
(assert (x883 x29))
(assert (x273 x786))
(assert (x273 x1074))
(assert (x883 x92))
(assert (= (x281 2960351575) (x841 2960351575)))
(assert (= x1253 (x371 (x841 x1253))))
(assert (x273 x865))
(assert (=> (<= x280 10000) (= (x281 x280) (x841 x280))))
(assert (x273 x108))
(assert (x273 x1160))
(assert (x273 x150))
(assert (x273 x581))
(assert (x883 x1075))
(assert (= (x371 (x841 x115)) x115))
(assert (x273 x997))
(assert (x273 x405))
(assert (= (x281 274184521717934524641157099916833587206) (x841 274184521717934524641157099916833587206)))
(assert (x273 x297))
(assert (x132 x953))
(assert (= x326 (=> (and (= x228 69947311) (<= x890 1461501637330902918203684832716283019655932542975) (= (x693 x1129) x293) (< x228 468353030) (= x838 (x787 (x841 274184521717934524641157099916833587206))) (= x715 (x275 (x841 x551) (x281 10) 0)) (= x1129 (x275 (x841 x890) x715 0)) (>= x293 0) (<= x293 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x838) (= x1154 x293) (> 911411945 x228) (> 2293535753 x228)) (=> (and (= x546 x319) (= x66 x218) (= x226 x1075) (= x974 x1154)) x977))))
(assert (= (ite (and (not x1176) x647 x535) (x602 x1049) (x212 x1049)) (x593 x1049)))
(assert (x883 x890))
(assert (= (ite (= x808 x523) x432 (x709 x808)) (x299 x808)))
(assert (=> (>= 10000 x1253) (= (x841 x1253) (x281 x1253))))
(assert (= 1968616202 (x371 (x281 1968616202))))
(assert (x273 x1172))
(assert (x273 x577))
(assert (x273 x378))
(assert (x273 x501))
(assert (= (x360 x529) (ite (= x862 x529) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x529))))
(assert (= (x276 x349) (ite (and x55 x856 x127 (not x318) x638 x1147) (x833 x349) (ite (and (not x638) x1147 x55 x856 x127) (x356 x349) (ite (and x127 x856 (not x1147) x55) (x879 x349) (ite (and x127 (not x856) x55) (x360 x349) (x576 x349)))))))
(assert (= (x371 (x841 x92)) x92))
(assert (x273 x923))
(assert (x273 x138))
(assert (x273 x1136))
(assert (x273 x1108))
(assert (= (x371 (x281 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (x273 x513))
(assert (x273 x182))
(assert (= (x371 (x841 x1209)) x1209))
(assert (x883 x296))
(assert (= (x841 2061678023) (x281 2061678023)))
(assert (= (x78 x529) (ite (and x361 x328) (x952 x529) (x728 x529))))
(assert (= (ite (= x836 x1241) x658 (x810 x836)) (x239 x836)))
(assert (= (x211 x109) (ite (= x109 x930) x271 (x258 x109))))
(assert (x273 x321))
(assert (x273 x1196))
(assert (x273 x895))
(assert (= (ite (= x1049 x965) x154 (x356 x1049)) (x833 x1049)))
(assert (x273 x43))
(assert (=> (<= x901 10000) (= (x281 x901) (x841 x901))))
(assert (x273 x816))
(assert (x883 x420))
(assert (x132 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (>= 10000 x164) (= (x841 x164) (x281 x164))))
(assert (x273 x560))
(assert (x273 x1073))
(assert (= (ite (and (not x610) x298 x256) (x717 x948) (x1165 x948)) (x700 x948)))
(assert (x273 x1101))
(assert (x273 x962))
(assert (= (=> (and (or (and (= x875 (x1195 (+ 96 x975))) (= x616 x1049) (not x96)) (and x96 (= 96 x1049))) (not (= 0 x1171)) x803 (= x803 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x248 (x841 274184521717934524641157099916833587206)))) (or (and (= x1003 x1065) (= (x428 x1049) x1201) (= (ite x238 1 0) x1003) x402 (= x855 (= x1065 0)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1201) (and (> 32 x1201) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1201) true)))) (> x1065 0) (= (x1195 (+ x1049 32)) x1032) (= (not x855) x238) (= (x428 x1032) x1065)) (not x402)) (= x96 (= x702 0)) (not x1166) (= x1166 (> x432 2)) (= (> x840 0) x402) (= (x428 x1049) x840) (= x711 (x744 (x841 x901)))) x800) x11))
(assert (= (x144 x1032) (ite (and x55 (not x49) x127) (x276 x1032) (x1038 x1032))))
(assert (= (x281 2532887486) (x841 2532887486)))
(assert (x273 x731))
(assert (x883 x725))
(assert (x469 x214 x130))
(assert (x273 x655))
(assert (x273 x506))
(assert (x273 x1076))
(assert (=> (<= x537 10000) (= (x841 x537) (x281 x537))))
(assert (x273 x792))
(assert (x273 x329))
(assert (x273 x1050))
(assert (= (x371 (x841 x551)) x551))
(assert (x273 x164))
(assert (= (x125 x836) (ite (and x827 x256 (not x610)) (x692 x836) (ite (and x256 x753 (not x827) (not x610) (not x590)) (x876 x836) (ite (and (not x753) (not x610) x256 (not x827)) (x692 x836) (x972 x836))))))
(assert (= (ite (= x200 x608) x443 (x879 x200)) (x356 x200)))
(assert (x273 x1))
(assert (= (ite (= x349 x1241) x658 (x810 x349)) (x239 x349)))
(assert (x273 x815))
(assert (= (x826 x529) (ite (= x673 x529) x418 (x239 x529))))
(assert (= (x360 x1044) (ite (= x862 x1044) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x1044))))
(assert (= (x826 x109) (ite (= x673 x109) x418 (x239 x109))))
(assert (x883 x500))
(assert (= (ite (and (not x610) x256 x298) (x717 x484) (x1165 x484)) (x700 x484)))
(assert (x273 x235))
(assert (x273 x523))
(assert (x883 x1087))
(assert (=> (<= x26 10000) (= (x841 x26) (x281 x26))))
(assert (= x472 x940))
(assert (x273 x147))
(assert (x883 274184521717934524641157099916833587214))
(assert (x883 x155))
(assert (x273 x994))
(assert (x273 x718))
(assert (x273 x406))
(assert (x273 x665))
(assert (= (ite (= x608 x1110) x443 (x879 x1110)) (x356 x1110)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x371 (x281 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (=> (<= x451 10000) (= (x841 x451) (x281 x451))))
(assert (=> (>= 10000 x322) (= (x841 x322) (x281 x322))))
(assert (x273 x888))
(assert (= (x371 (x893 x94 1)) (+ (x371 x94) 1)))
(assert (x273 x904))
(assert (= (ite (= x877 x673) x418 (x239 x877)) (x826 x877)))
(assert (=> (<= x531 10000) (= (x281 x531) (x841 x531))))
(assert (= x762 true))
(assert (x273 x1241))
(assert (= (x52 x998) 0))
(assert (x273 x781))
(assert (x273 x262))
(assert (x273 x32))
(assert (x273 x926))
(assert (= (x356 x1032) (ite (= x608 x1032) x443 (x879 x1032))))
(assert (= x802 (x371 (x841 x802))))
(assert (=> (>= 10000 x218) (= (x281 x218) (x841 x218))))
(assert (= (ite (and x256 x751) (x299 x998) (x878 x998)) (x682 x998)))
(assert (x273 x565))
(assert (x273 x1168))
(assert (x883 x305))
(assert (x273 x1200))
(assert (= 0 (x52 x1044)))
(assert (= (x52 160) 0))
(assert (x132 x955))
(assert (x883 x1068))
(assert (= (x258 x529) (ite (= x529 x1108) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x422 x529))))
(assert (=> (>= 10000 x704) (= (x281 x704) (x841 x704))))
(assert (x273 x894))
(assert (= (ite (= x405 x523) x1056 (x98 x523)) (x692 x523)))
(assert (x883 x1184))
(assert (= (ite (= x382 x349) x1168 (x211 x349)) (x945 x349)))
(assert (x883 x251))
(assert (= (x841 1986467848) (x281 1986467848)))
(assert (x132 x391))
(assert (x273 x375))
(assert (= x1139 (x371 (x841 x1139))))
(assert (x273 x87))
(assert (= (+ (x371 x867) 1) (x371 (x893 x867 1))))
(assert (x132 x938))
(assert (= x712 (=> (and (>= x491 0) (= x1132 x491) (not (> 2690754053 x126)) (= x1004 (x275 (x841 x659) x173 0)) (= x173 (x275 (x841 x806) x288 0)) (<= x806 1461501637330902918203684832716283019655932542975) (= x288 (x275 (x841 x450) (x281 3) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x491) (= (x1149 x1004) x491) (< 0 x1047) (<= x659 1461501637330902918203684832716283019655932542975) (= x126 2743102681) (< x126 2960351575) (not (= 2690754053 x126)) (not (< x126 2293535753)) (= x1047 (x787 (x841 274184521717934524641157099916833587206)))) (=> (and (= x1132 x891) (= x95 x226) (= x66 x76) (= x319 x206) (= x565 x170)) x695))))
(assert (x273 x126))
(assert (x273 x840))
(assert (=> (>= 10000 x1000) (= (x281 x1000) (x841 x1000))))
(assert (x883 x82))
(assert (= x782 (=> (and (> x453 0) (< x39 2293535753) (<= x43 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 468353030 x39) (not (= x39 69947311)) (= (x275 (x841 x1073) x979 0) x831) (= (x787 (x841 274184521717934524641157099916833587206)) x453) (= (x232 x540) x43) (= x39 142201243) (< x39 911411945) (<= x1073 1461501637330902918203684832716283019655932542975) (<= 0 x43) (= (x275 (x841 x1229) (x281 9) 0) x979) (= x540 (x275 (x841 x935) x831 0)) (>= 1461501637330902918203684832716283019655932542975 x935) (not (= x39 87118632)) (= x911 x43)) (=> (and (= x911 x1112) (= x155 x319) (= x62 x226) (= x66 x1184)) x467))))
(assert (x273 x332))
(assert (= (ite (and x256 x751) (x299 x563) (x878 x563)) (x682 x563)))
(assert (x273 x661))
(assert (= (x371 (x841 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x273 x918))
(assert (= (x78 x1032) (ite (and x328 x361) (x952 x1032) (x728 x1032))))
(assert (x273 x115))
(assert (= (x371 (x841 x315)) x315))
(assert (x273 x383))
(assert (x273 x25))
(assert (= (or (and x562 x284) (and x361 x328)) x6))
(assert (x273 x511))
(assert (= x1107 (x371 (x841 x1107))))
(assert (=> (<= x566 10000) (= (x841 x566) (x281 x566))))
(assert (=> (>= 10000 x198) (= (x281 x198) (x841 x198))))
(assert (= (x371 (x281 1986467848)) 1986467848))
(assert (x273 x835))
(assert (= x472 x749))
(assert (= (x371 (x841 x631)) x631))
(assert (= (x371 (x841 x546)) x546))
(assert (x273 x987))
(assert (= (x692 x563) (ite (= x563 x405) x1056 (x98 x563))))
(assert (x273 x938))
(assert (= (x360 x1110) (ite (= x1110 x862) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x1110))))
(assert (= (x239 x1032) (ite (= x1032 x1241) x658 (x810 x1032))))
(assert (x273 x1060))
(assert (=> (<= x745 10000) (= (x281 x745) (x841 x745))))
(assert (x273 x74))
(assert (x273 x1094))
(assert (= x1056 (x692 x405)))
(assert (= (x371 (x281 759532456)) 759532456))
(assert (x273 x175))
(assert (= (x371 (x841 x1118)) x1118))
(assert (x883 x1059))
(assert (=> (<= x1075 10000) (= (x841 x1075) (x281 x1075))))
(assert (x273 x140))
(assert (= (x841 1968616202) (x281 1968616202)))
(assert (x273 x315))
(assert (x273 x1112))
(assert (x273 x624))
(assert (= (x371 (x841 x420)) x420))
(assert (=> (>= 10000 x296) (= (x841 x296) (x281 x296))))
(assert (x132 x41))
(assert (= (x371 (x281 69947311)) 69947311))
(assert (x883 x1174))
(assert (=> (<= x29 10000) (= (x841 x29) (x281 x29))))
(assert (x469 x1014 x1198))
(assert (x883 x565))
(assert (x273 x623))
(assert (= (x239 x1110) (ite (= x1241 x1110) x658 (x810 x1110))))
(assert (= (x876 x924) (ite (= x924 x517) x600 (x692 x924))))
(assert (= x1000 (x371 (x841 x1000))))
(assert (x273 x286))
(assert (= (x356 x109) (ite (= x109 x608) x443 (x879 x109))))
(assert (=> (>= 10000 x757) (= (x281 x757) (x841 x757))))
(assert (x273 x292))
(assert (x883 x587))
(assert (x273 x251))
(assert (=> (>= 10000 x235) (= (x841 x235) (x281 x235))))
(assert (x273 x1187))
(assert (=> (>= 10000 x1184) (= (x841 x1184) (x281 x1184))))
(assert (x273 x41))
(assert (x132 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x273 x585))
(assert (x1097 x1101 x938))
(assert (x273 x551))
(assert (= x1059 (x371 (x841 x1059))))
(assert (x273 x209))
(assert (= (x371 (x841 x531)) x531))
(assert (x132 x1250))
(assert (=> (<= x513 10000) (= (x841 x513) (x281 x513))))
(assert (x273 x594))
(assert (x273 x616))
(assert (x273 x1154))
(assert (= (x826 x755) (ite (= x673 x755) x418 (x239 x755))))
(assert (x883 x721))
(assert (= (x371 (x841 x969)) x969))
(assert (=> (<= x565 10000) (= (x281 x565) (x841 x565))))
(assert (= (x602 x1032) (ite (and x535 x647 x770 x967 x455 (not x664)) (x508 x1032) (ite (and (not x770) x535 x647 x967 x455) (x945 x1032) (ite (and (not x967) x535 x647 x455) (x211 x1032) (ite (and x535 (not x455) x647) (x258 x1032) (x569 x1032)))))))
(assert (x273 x278))
(assert (x273 x531))
(assert (=> (>= 10000 x140) (= (x841 x140) (x281 x140))))
(assert (x273 x520))
(assert (= (x692 x998) (ite (= x998 x405) x1056 (x98 x998))))
(assert (x273 x545))
(assert (x883 x315))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x371 (x281 115792089237316195423570985008687907853269984665640564039457))))
(assert (x273 x771))
(assert (x273 x907))
(assert (x273 x277))
(assert (x273 x1242))
(assert (x273 x901))
(assert (= (x125 x755) (ite (and x827 x256 (not x610)) (x692 x755) (ite (and (not x590) x256 x753 (not x610) (not x827)) (x876 x755) (ite (and (not x753) x256 (not x827) (not x610)) (x692 x755) (x972 x755))))))
(assert (= (ite (= x1049 x740) x128 (x945 x1049)) (x508 x1049)))
(assert (= (x371 (x841 x28)) x28))
(assert (= (ite (and x256 (not x610) x827) (x692 x808) (ite (and x753 x256 (not x610) (not x590) (not x827)) (x876 x808) (ite (and (not x610) (not x753) x256 (not x827)) (x692 x808) (x972 x808)))) (x125 x808)))
(assert (= (ite (= x1049 x382) x1168 (x211 x1049)) (x945 x1049)))
(assert (x273 x919))
(assert (x273 x964))
(assert (= (x281 1000000000000000000) (x841 1000000000000000000)))
(assert (= (x682 x1049) (ite (and x751 x256) (x299 x1049) (x878 x1049))))
(assert (x273 x990))
(assert (= (x371 (x281 2690754053)) 2690754053))
(assert (= (=> (and (= (x1034 x615) x1109) (<= 0 x1109) (= (x275 (x841 x155) x950 0) x779) (= x1223 x1109) (not (= x780 2690754053)) (> 2960351575 x780) (= x615 (x275 (x841 x62) x779 0)) (= (x787 (x841 274184521717934524641157099916833587206)) x865) (<= x1109 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x780 2690754053)) (>= 1461501637330902918203684832716283019655932542975 x155) (= x780 2743102681) (= (x275 (x841 x1184) (x281 3) 0) x950) (not (< x780 2293535753)) (> x865 0) (>= 1461501637330902918203684832716283019655932542975 x62)) (=> (and (= x226 x82) (= x587 x66) (= x170 x1174) (= x319 x296) (= x1223 x1094)) x605)) x467))
(assert (x883 274184521717934524641157099916833587206))
(assert (= (ite (and x967 x535 x770 x455 x647 (not x664)) (x508 x1049) (ite (and x535 (not x770) x967 x455 x647) (x945 x1049) (ite (and x455 (not x967) x535 x647) (x211 x1049) (ite (and x647 x535 (not x455)) (x258 x1049) (x569 x1049))))) (x602 x1049)))
(assert (=> (>= 10000 x450) (= (x281 x450) (x841 x450))))
(assert (= x1087 (x371 (x841 x1087))))
(assert (= (x371 (x841 x1048)) x1048))
(assert (= (ite (= x1049 x523) x432 (x709 x1049)) (x299 x1049)))
(assert (= (ite (and x328 x361) (x952 x200) (x728 x200)) (x78 x200)))
(assert (x273 x184))
(assert (x273 x77))
(assert (x273 x548))
(assert (= (x841 18446744073709551615) (x281 18446744073709551615)))
(assert (x273 x431))
(assert (x273 x339))
(assert (= (x692 x517) (ite (= x517 x405) x1056 (x98 x517))))
(assert (x273 x222))
(assert (x273 x850))
(assert (= (=> (and (= x205 759532456) (not (= x205 635128645)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1063) (= (x275 (x841 x1200) x186 0) x14) (>= x1063 0) (= (x1120 x464) x1063) (= x1063 x923) (> 2293535753 x205) (= (x275 (x841 x630) x14 0) x464) (< 0 x708) (= x708 (x787 (x841 274184521717934524641157099916833587206))) (not (= 468353030 x205)) (< x205 911411945) (= x186 (x275 (x841 x149) (x281 7) 0)) (>= 1461501637330902918203684832716283019655932542975 x630) (not (< x205 468353030)) (<= x1200 1461501637330902918203684832716283019655932542975)) (=> (and (= x1073 x319) (= x935 x226) (= x66 x1229) (= x923 x888)) x782)) x872))
(assert (=> (>= 10000 x28) (= (x841 x28) (x281 x28))))
(assert (x273 x1016))
(assert (= (x144 x529) (ite (and (not x49) x127 x55) (x276 x529) (x1038 x529))))
(assert (x273 x801))
(assert (x1097 x391 x77))
(assert (= (x876 x200) (ite (= x200 x517) x600 (x692 x200))))
(assert (= (x879 x529) (ite (= x529 x777) x555 (x360 x529))))
(assert (x273 x207))
(assert (x273 x1046))
(assert (x273 x737))
(assert (= (=> (and (not (= x564 2690754053)) (not (= x564 2764855426)) (< 0 x25) (= x577 (x701 x484)) (= (x787 (x841 274184521717934524641157099916833587206)) x25) (< x564 2960351575) (= x484 (x275 (x841 x745) x574 0)) (not (= 2743102681 x564)) (not (> 2293535753 x564)) (= x577 x279) (<= 0 x577) (<= x745 1461501637330902918203684832716283019655932542975) (not (> 2690754053 x564)) (= (x275 (x841 x572) (x281 5) 0) x574) (<= x577 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2798343961 x564)) (=> (and (= x890 x319) (= x915 x279) (= x551 x66)) x326)) x963))
(assert (x273 x942))
(assert (= (x276 x1049) (ite (and x55 (not x318) x1147 x856 x638 x127) (x833 x1049) (ite (and (not x638) x856 x1147 x55 x127) (x356 x1049) (ite (and (not x1147) x856 x55 x127) (x879 x1049) (ite (and x127 (not x856) x55) (x360 x1049) (x576 x1049)))))))
(assert (=> (>= 10000 x138) (= (x281 x138) (x841 x138))))
(assert (x273 x760))
(assert (= x256 x1031))
(assert (= (=> (and (not (= x1177 2293535753)) (not (> 2293535753 x1177)) (= x801 (x255 x720)) (= x312 (x275 (x841 x76) (x281 4) 0)) (> x174 0) (= (x275 (x841 x95) x481 0) x416) (= (x275 (x841 x565) x416 0) x720) (= x1177 2532887486) (<= x206 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x565) (>= x801 0) (= x801 x295) (<= x801 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2418364589 x1177)) (< x1177 2690754053) (<= x95 1461501637330902918203684832716283019655932542975) (= x481 (x275 (x841 x206) x312 0)) (< x1177 2960351575) (not (= 2512682246 x1177)) (= (x787 (x841 274184521717934524641157099916833587206)) x174)) x159) x695))
(assert (= (ite (= x777 x523) x555 (x360 x523)) (x879 x523)))
(assert (= x1156 (=> (and (not (= x112 0)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x84 (x841 274184521717934524641157099916833587206))) x424) (or (and (not (or (> x1205 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1205 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1205 32)))) (= x1244 (= 0 x1046)) (= x1045 (not x1244)) (= x230 x1046) (= (x33 x1233) x1205) (= x230 (ite x1045 1 0)) x733 (> x1046 0) (= (x33 x1044) x1046) (= (x1195 (+ 32 x1233)) x1044)) (not x733)) (= x17 (x1135 (x841 x588))) (or (and (= x1233 x71) (= x842 (x1195 (+ 96 x501))) (= x895 (x401 115792089237316195423570985008687907853269984665640564039457584007913129639904 x398)) (= x958 x887) (= (x1195 (+ x895 x71)) x958) (= (x1195 (+ 63 x739)) x398) (not x134)) (and (= x887 x71) (= 96 x1233) x134)) (= x347 (x84 (x841 274184521717934524641157099916833587206))) x424 (= x446 (x33 x1233)) (= x733 (< 0 x446)) (= (= x739 0) x134)) x914)))
(assert (x273 x271))
(assert (=> (>= 10000 x76) (= (x841 x76) (x281 x76))))
(assert (x273 x642))
(assert (= (x371 (x281 142201243)) 142201243))
(assert (x273 x486))
(assert (x273 x1044))
(assert (x273 x112))
(assert (x273 x319))
(assert (x273 x1071))
(assert (x883 x280))
(assert (x273 x1125))
(assert (x273 x951))
(assert (x273 x480))
(assert (x273 x566))
(assert (x883 x28))
(assert (x273 x1132))
(assert (= 604800 (x371 (x281 604800))))
(assert (= (x826 x523) (ite (= x673 x523) x418 (x239 x523))))
(assert (= x29 (x371 (x841 x29))))
(assert (= (x841 2514000705) (x281 2514000705)))
(assert (x273 x805))
(assert (= (ite (= x523 x1032) x432 (x709 x1032)) (x299 x1032)))
(assert (x273 x982))
(assert (x273 x1065))
(assert (x273 x154))
(assert (x273 x1257))
(assert (x883 x1229))
(assert (x273 x1119))
(assert (= (ite (= x673 x523) x432 (x709 x673)) (x299 x673)))
(assert (= (x876 x673) (ite (= x517 x673) x600 (x692 x673))))
(assert (x273 x525))
(assert (x273 x296))
(assert (x273 x63))
(assert (x273 x651))
(assert (= (ite (and x751 x256) (x299 x349) (x878 x349)) (x682 x349)))
(assert (x273 x954))
(assert (= 1461501637330902918203684832716283019655932542975 (x371 (x281 1461501637330902918203684832716283019655932542975))))
(assert (= x757 (x371 (x841 x757))))
(assert (x273 x745))
(assert (= (x125 x1049) (ite (and (not x610) x827 x256) (x692 x1049) (ite (and (not x610) (not x827) x256 x753 (not x590)) (x876 x1049) (ite (and (not x753) (not x610) (not x827) x256) (x692 x1049) (x972 x1049))))))
(assert (x883 x551))
(assert (x273 x817))
(assert (= (x52 x517) 0))
(assert (x273 x589))
(assert (x273 x485))
(assert (= (x299 x1044) (ite (= x1044 x523) x432 (x709 x1044))))
(assert (x469 x1090 x716))
(assert (= (x299 x877) (ite (= x523 x877) x432 (x709 x877))))
(assert (x273 x103))
(assert (=> (>= 10000 x270) (= (x841 x270) (x281 x270))))
(assert (x273 x395))
(assert (= x138 (x371 (x841 x138))))
(assert (x273 x206))
(assert (=> (>= 10000 x89) (= (x841 x89) (x281 x89))))
(assert (x883 x1236))
(assert (=> (<= x525 10000) (= (x841 x525) (x281 x525))))
(assert (= (x945 x109) (ite (= x109 x382) x1168 (x211 x109))))
(assert (= (x841 911411945) (x281 911411945)))
(assert (= (x281 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x841 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert true)
(assert (= (x692 x558) (ite (= x405 x558) x1056 (x98 x558))))
(assert (x273 x992))
(assert (= (x841 2512682246) (x281 2512682246)))
(assert (= (x281 115792089237316195423570985008687907853269984665640564039457) (x841 115792089237316195423570985008687907853269984665640564039457)))
(assert (x273 x986))
(assert (x883 x344))
(assert (x273 x1250))
(assert (x273 x162))
(assert (= (x360 x877) (ite (= x877 x862) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x877))))
(assert (= (x239 x1241) x658))
(assert (= (x682 x924) (ite (and x256 x751) (x299 x924) (x878 x924))))
(assert (= x1184 (x371 (x841 x1184))))
(assert (x273 x702))
(assert (x273 x650))
(assert (= (ite (and x256 x496 (not x610)) (x539 x743) (ite (and x272 (not x496) x256 (not x610)) (x423 x743) (x959 x743))) (x582 x743)))
(assert (= (x52 x1049) 0))
(assert (= (x371 (x841 x450)) x450))
(assert (= (x371 (x841 x745)) x745))
(assert (=> (<= x394 10000) (= (x281 x394) (x841 x394))))
(assert (= (ite (and (not x610) x256 x827) (x692 x431) (ite (and (not x590) (not x610) x753 (not x827) x256) (x876 x431) (ite (and x256 (not x753) (not x610) (not x827)) (x692 x431) (x972 x431)))) (x125 x431)))
(assert (= (ite (= x517 x836) x600 (x692 x836)) (x876 x836)))
(assert (= x65 (=> (= x107 (= 274184521717934524641157099916833587214 x901)) (and (=> (not x107) x653) (=> (and (= x702 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1170) (= (x275 (x841 274184521717934524641157099916833587206) (x281 1) 0) x663) (not (> 4 x515)) (= x395 2835717307) (= x220 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x375 x984))) x107 (= (x275 (x841 x394) (x281 1) 0) x409) (= x984 x765) (= (x401 1461501637330902918203684832716283019655932542975 x955) x396) (>= x1170 0) (= x1125 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x340 x984) (not x220) (not x613) (= x1171 1) (not (= x395 826074471)) (not (= x395 2514000705)) (= x245 (x1185 (- x1170 x340))) (= (x275 (x841 274184521717934524641157099916833587206) (x281 1) 0) x1243) (= x955 x1235) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x375 x984)) (= (x1018 x1243) x1170) (= 274184521717934524641157099916833587206 x850) (>= x375 0) (= (< x1170 x340) x613) (= (+ x765 x906) x38) (= x292 274184521717934524641157099916833587206) (< 0 x916) (not (= 1889567281 x395)) (not (= 649617121 x395)) (<= x375 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 68 x515) (<= x955 1461501637330902918203684832716283019655932542975) (= (> x984 x1170) x1001) (= x32 (x1185 (- x515 4))) (= x375 x906) (not (> 649617121 x395)) (not x1001) (= x916 (x787 (x841 274184521717934524641157099916833587214))) (= x542 (or (and (> 64 x32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x32) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x32))) (= x375 (x48 x409)) (= x442 x150) (not x542) (= x394 (x401 1461501637330902918203684832716283019655932542975 x955)) (= x515 x1141) (= x1193 x340)) x11)))))
(assert (x273 x822))
(assert (= 2764855426 (x371 (x281 2764855426))))
(assert (x273 x62))
(assert (x273 x931))
(assert (x273 x844))
(assert (= (x371 (x841 x62)) x62))
(assert (x273 x225))
(assert (= (x371 (x841 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= (ite (and x256 x751) (x299 x517) (x878 x517)) (x682 x517)))
(assert (x273 x660))
(assert (x273 x443))
(assert (= (x826 x1233) (ite (= x673 x1233) x418 (x239 x1233))))
(assert (=> (>= 10000 x614) (= (x281 x614) (x841 x614))))
(assert (x883 x901))
(assert (= (x299 x1233) (ite (= x1233 x523) x432 (x709 x1233))))
(assert (= (ite (and x741 x121) (x1124 x1049) (x19 x1049)) (x1211 x1049)))
(assert (x273 x622))
(assert (x273 x28))
(assert (= (ite (and x361 x328) (x952 x1049) (x728 x1049)) (x78 x1049)))
(assert (=> (<= x551 10000) (= (x841 x551) (x281 x551))))
(assert (=> (>= 10000 x92) (= (x281 x92) (x841 x92))))
(assert (=> (<= x815 10000) (= (x281 x815) (x841 x815))))
(assert (x883 x614))
(assert (= (ite (= x608 x431) x443 (x879 x431)) (x356 x431)))
(assert (= (ite (and (not x610) x827 x256) (x692 x563) (ite (and (not x590) x753 (not x827) x256 (not x610)) (x876 x563) (ite (and (not x610) (not x753) x256 (not x827)) (x692 x563) (x972 x563)))) (x125 x563)))
(assert (= (x371 (x841 x520)) x520))
(assert (x273 x1028))
(assert (x273 x1007))
(assert (x273 x839))
(assert (x883 x62))
(assert (x883 x76))
(assert (x273 x1051))
(assert (=> (>= 10000 x819) (= (x281 x819) (x841 x819))))
(assert (= (ite (= x431 x1241) x658 (x810 x431)) (x239 x431)))
(assert (x273 x31))
(assert (= (ite (= x529 x1241) x658 (x810 x529)) (x239 x529)))
(assert (= (x826 x200) (ite (= x200 x673) x418 (x239 x200))))
(assert (x273 x200))
(assert (= (ite (= x1110 x405) x1056 (x98 x1110)) (x692 x1110)))
(assert (x469 x1250 x9))
(assert (x273 x588))
(assert (= x586 (x371 (x841 x586))))
(assert (= (ite (= x517 x1049) x600 (x692 x1049)) (x876 x1049)))
(assert (x132 x1101))
(assert (x883 x1252))
(assert (= (x125 x1110) (ite (and (not x610) x256 x827) (x692 x1110) (ite (and (not x827) (not x590) x753 x256 (not x610)) (x876 x1110) (ite (and x256 (not x610) (not x753) (not x827)) (x692 x1110) (x972 x1110))))))
(assert (= (x371 (x281 2960351575)) 2960351575))
(assert (x273 x944))
(assert (= (x299 x558) (ite (= x523 x558) x432 (x709 x558))))
(assert (x273 x935))
(assert (= x1229 (x371 (x841 x1229))))
(assert (=> (>= 10000 x254) (= (x841 x254) (x281 x254))))
(assert (x883 x935))
(assert (= x914 (=> (= (> x432 1) x535) (and (=> (and (= (x1195 (+ 128 x904)) x616) (or (and (not x455) (= x881 0)) (and (= (x258 x529) x271) x455 (= (< 32 x548) x967) (= x616 x930) (or (and (= x881 32) (not x967)) (and (or (and x770 (= x740 (x1195 (+ 128 x975))) (= x664 (> x548 96)) (or (and (= (x508 x109) x939) (not x973) (= (< 128 x548) x973) (= x109 (x1195 (+ 128 x887))) x664 (= (x1195 (+ 160 x975)) x761) (= 128 x881)) (and (not x664) (= x881 96))) (= (x1195 (+ 96 x887)) x349) (= (x945 x349) x128)) (and (not x770) (= 64 x881))) (= x770 (> x548 64)) (= (x1195 (+ 64 x887)) x200) (= x382 (x1195 (+ 96 x975))) x967 (= x1168 (x211 x200)))) (= x755 x529))) (= x975 (x1195 (+ x887 100))) x535 (or (and x1176 (= (x1195 (+ x548 x616)) x412)) (not x1176)) (= (x33 x877) x1193) (= x1242 (x1185 (- x1225 32))) x135 (= (x1195 (+ 32 x887)) x755) (= x449 (x44 x755)) (< 1 x571) (= x877 (x1195 (+ x429 192))) (= (x1185 (- x975 x887)) x1225) (= (x401 26959946667150639794667015087019630673637144422540572481103610249215 x449) x383) (= (x1195 (+ 36 x887)) x904) (= x901 (x899 x307)) (= 0 x222) (= (x787 (x841 x901)) x919) (= (x1195 (+ 96 x904)) x1108) (= (< 0 x548) x455) (= (< x548 x881) x1176) (<= x901 1461501637330902918203684832716283019655932542975) (= (x258 x887) x548) (= x307 (x1195 (+ x179 64))) (= x571 (x33 x523)) (< 1 x432) (= x902 (x1195 (+ 68 x887))) (= x135 (> x919 0)) (= (x1195 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x383)) x1197)) x410) (=> (not x535) x800)))))
(assert (x273 x291))
(assert (= (x314 x8) (ite (= x8 x1251) 0 (x232 x8))))
(assert (= (x876 x558) (ite (= x517 x558) x600 (x692 x558))))
(assert (= (x52 x808) 0))
(assert (= (ite (= x529 x517) x600 (x692 x529)) (x876 x529)))
(assert (= (ite (= x1032 x930) x271 (x258 x1032)) (x211 x1032)))
(assert (x273 x526))
(assert (x883 x631))
(assert (x273 x230))
(assert (= x1068 (x371 (x841 x1068))))
(assert (x273 x1205))
(assert (x273 x998))
(assert (x273 x1223))
(assert (x273 x153))
(assert (= (ite (and x121 x741) (x1124 x1032) (x19 x1032)) (x1211 x1032)))
(assert (x273 x555))
(assert (= (ite (= x808 x517) x600 (x692 x808)) (x876 x808)))
(assert (= x218 (x371 (x841 x218))))
(assert (x883 x520))
(assert (x273 x1042))
(assert (= x219 x940))
(assert (= (ite (= x887 x1108) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x422 x887)) (x258 x887)))
(assert (x273 x85))
(assert (x273 x449))
(assert (= (x841 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x281 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (<= x305 10000) (= (x281 x305) (x841 x305))))
(assert (x273 x620))
(assert (= 2211524764 (x371 (x281 2211524764))))
(assert (x273 x953))
(assert (= x206 (x371 (x841 x206))))
(assert (= (x876 x349) (ite (= x517 x349) x600 (x692 x349))))
(assert (x273 x358))
(assert (x132 x1014))
(assert (x273 x596))
(assert (= (x125 x673) (ite (and x256 x827 (not x610)) (x692 x673) (ite (and x753 (not x590) (not x610) (not x827) x256) (x876 x673) (ite (and (not x827) (not x610) x256 (not x753)) (x692 x673) (x972 x673))))))
(assert (x273 x1254))
(assert (= (x371 (x281 2258409472)) 2258409472))
(assert (x273 x158))
(assert (x273 x1202))
(assert (=> (>= 10000 x1059) (= (x841 x1059) (x281 x1059))))
(assert (x273 x376))
(assert (= (ite (= x755 x777) x555 (x360 x755)) (x879 x755)))
(assert (x273 x322))
(assert (= (x371 (x281 649617121)) 649617121))
(assert (=> (<= x62 10000) (= (x841 x62) (x281 x62))))
(assert (x883 x1118))
(assert (= (x281 1461501637330902918203684832716283019655932542975) (x841 1461501637330902918203684832716283019655932542975)))
(assert (= (=> (and (< x844 2960351575) (= x313 (x717 x372)) (= x844 2798343961) (not (> 2293535753 x844)) (>= x313 0) (not (= x844 2743102681)) (= x372 (x275 (x841 x614) x1070 0)) (not (< x844 2690754053)) (= x504 x313) (= x1070 (x275 (x841 x721) (x281 5) 0)) (> x794 0) (not (= 2764855426 x844)) (not (= x844 2690754053)) (= (x787 (x841 274184521717934524641157099916833587206)) x794) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x313) (>= 1461501637330902918203684832716283019655932542975 x614)) (=> (and (= x802 x66) (= x504 x824) (= x319 x315)) x928)) x91))
(assert (= (ite (= x1241 x673) x658 (x810 x673)) (x239 x673)))
(assert (= x410 (=> (and (= x1091 (x64 (x841 x901))) (= x905 (x64 (x841 274184521717934524641157099916833587206))) (= (<= 0 x533) x373) (= x1141 x548) x1150 (= (< x1091 115792089237316195423570985008687907853269984665640564039457584007913129639936) x666) x373 x666 (= (= x901 274184521717934524641157099916833587218) x741) (= x182 (x348 (x841 x901))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x348 (x841 x901))) x1150) (= x533 (x64 (x841 274184521717934524641157099916833587206)))) (and (=> (not x741) x65) (=> (and (not (= 2514000705 x1028)) (= (x1185 (- x485 x1203)) x203) (not x117) (= 274184521717934524641157099916833587206 x1074) (= x131 (x1185 (- x241 4))) (not (= x1028 826074471)) (< 0 x368) (= x485 (x567 x793)) (= x103 (+ x617 x282)) (<= x953 1461501637330902918203684832716283019655932542975) (= x617 x506) (= 1 x1171) (= x997 (x401 1461501637330902918203684832716283019655932542975 x953)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x506) (= x702 32) (< (+ x308 x506) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (< x485 x308) x960) (not x861) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x485) (= x861 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x506 x308))) (>= x485 0) (not (> 4 x241)) (= (x787 (x841 274184521717934524641157099916833587218)) x368) x741 (not x960) (= x506 (x732 x1067)) (= x117 (< x485 x1203)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x97) (= (or (and (< x131 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x131) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x131)) x730) (not (= x1028 1889567281)) (not x730) (<= 0 x506) (not (= 649617121 x1028)) (= (x401 1461501637330902918203684832716283019655932542975 x953) x158) (= (x275 (x841 274184521717934524641157099916833587206) (x281 1) 0) x793) (= x282 x308) (= x241 68) (not (> 649617121 x1028)) (= x1203 x1193) (= x980 x1005) (= x612 (x275 (x841 274184521717934524641157099916833587206) (x281 1) 0)) (= x1203 x308) (= (x275 (x841 x997) (x281 1) 0) x1067) (= 2835717307 x1028) (= x1141 x241) (= x994 274184521717934524641157099916833587206) (= x953 x1235)) x11)))))
(assert (x273 x1209))
(assert (x273 x704))
(assert (x273 x1229))
(assert (x273 x429))
(assert (= x1136 (x371 (x841 x1136))))
(assert (= (x841 2211524764) (x281 2211524764)))
(assert (x273 x1203))
(assert (=> (<= x82 10000) (= (x841 x82) (x281 x82))))
(assert (= (x371 (x841 x357)) x357))
(assert (x273 x1233))
(assert (x273 x892))
(assert (x883 x997))
(assert (= x1138 (and (not x284) x562)))
(assert (= (x78 x109) (ite (and x361 x328) (x952 x109) (x728 x109))))
(assert (x273 x757))
(assert (= (x371 (x841 x806)) x806))
(assert (= (x144 x877) (ite (and x127 (not x49) x55) (x276 x877) (x1038 x877))))
(assert (x273 x1053))
(assert (x273 x131))
(assert (x273 x1208))
(assert (= (ite (= x505 x1004) 0 (x495 x1004)) (x934 x1004)))
(assert (x273 x570))
(assert (= (x299 x200) (ite (= x523 x200) x432 (x709 x200))))
(assert (= (x371 (x841 x525)) x525))
(assert (x883 x566))
(assert (x273 x1199))
(assert (= x541 (and (not x741) x121)))
(assert (= (x682 x523) (ite (and x751 x256) (x299 x523) (x878 x523))))
(assert (x883 x95))
(assert (x273 x1039))
(assert (x273 x335))
(assert (=> (>= 10000 x1087) (= (x281 x1087) (x841 x1087))))
(assert (= 0 (x52 x109)))
(assert (= (ite (and x827 x256 (not x610)) (x692 x558) (ite (and (not x590) (not x610) (not x827) x753 x256) (x876 x558) (ite (and (not x827) (not x610) (not x753) x256) (x692 x558) (x972 x558)))) (x125 x558)))
(assert (x273 x916))
(assert (= (ite (= x529 x965) x154 (x356 x529)) (x833 x529)))
(assert (= (ite (and (not x610) x827 x256) (x692 x1044) (ite (and x753 (not x610) (not x590) (not x827) x256) (x876 x1044) (ite (and (not x827) (not x610) x256 (not x753)) (x692 x1044) (x972 x1044)))) (x125 x1044)))
(assert (x273 x145))
(assert (= (x371 (x893 x557 1)) (+ (x371 x557) 1)))
(assert (x132 x547))
(assert (= (x371 (x281 2743102681)) 2743102681))
(assert (x273 x1182))
(assert (= (ite (= x517 x431) x600 (x692 x431)) (x876 x431)))
(assert (x273 x1059))
(assert (=> (>= 10000 x1252) (= (x281 x1252) (x841 x1252))))
(assert (= x397 (=> (= (= x588 274184521717934524641157099916833587214) x284) (and (=> (and (not (= 1889567281 x1021)) (= x143 x1062) (= (x401 1461501637330902918203684832716283019655932542975 x1014) x138) (= x825 68) (= x440 (x1185 (- x133 x926))) (= x1188 x926) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1062 x1188)) (not (= 826074471 x1021)) (>= x1062 0) (not (< x1021 649617121)) (= x358 x926) (= x142 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x1022 x680) x133) (= (x275 (x841 274184521717934524641157099916833587206) (x281 1) 0) x1055) (= x157 x543) (= x773 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1069)) (> 64 x1069)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1069))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x133) (= (x275 (x841 x145) (x281 1) 0) x1221) (not x1019) (= (x1185 (- x825 4)) x1069) (not x773) (= (x275 (x841 x138) (x281 1) 0) x706) (= 274184521717934524641157099916833587206 x1257) (= (x787 (x841 274184521717934524641157099916833587214)) x175) (= x145 (x401 1461501637330902918203684832716283019655932542975 x1014)) (not (= x1021 2514000705)) (not x736) x284 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1062) (>= 1461501637330902918203684832716283019655932542975 x1014) (= (>= (+ x1188 x1062) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1019) (= x1235 x1014) (= (x1144 x706) x1062) (= (> x926 x133) x559) (= x680 (x275 (x841 274184521717934524641157099916833587206) (x281 1) 0)) (= x112 1) (= x736 (> x1188 x133)) (not (> 4 x825)) (= 2835717307 x1021) (= x87 (+ x492 x143)) (= x1212 274184521717934524641157099916833587206) (= x925 x825) (<= 0 x133) (not (= x1021 649617121)) (< 0 x175) (not x559) (= x492 x1188) (= x739 32)) x1156) (=> (not x284) x762)))))
(assert (= (ite (= x1108 x1032) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x422 x1032)) (x258 x1032)))
(assert (= (x125 x1233) (ite (and (not x610) x827 x256) (x692 x1233) (ite (and (not x827) x256 (not x590) (not x610) x753) (x876 x1233) (ite (and (not x610) (not x753) (not x827) x256) (x692 x1233) (x972 x1233))))))
(assert (x273 x558))
(assert (x273 x1158))
(assert (= (x371 (x841 x1174)) x1174))
(assert (= (ite (and x751 x256) (x299 x529) (x878 x529)) (x682 x529)))
(assert (= (x841 87118632) (x281 87118632)))
(assert (x273 x1049))
(assert (x273 x1036))
(assert (x273 x29))
(assert (= (=> (and (>= x866 0) (> 468353030 x817) (< x817 2293535753) (= x1153 (x275 (x841 x315) x240 0)) (= (x693 x1153) x866) (= x240 (x275 (x841 x802) (x281 10) 0)) (> 911411945 x817) (= x649 (x787 (x841 274184521717934524641157099916833587206))) (= x503 x866) (= x817 69947311) (>= 1461501637330902918203684832716283019655932542975 x315) (<= x866 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x649 0)) (=> (and (= x921 x697) (= x630 x226) (= 0 x482) (= 0 x147) (= x153 x665) x1161 (= x781 x665) (= x1161 (>= x526 x153)) (= x896 (= 0 x781)) (= (= x645 0) x637) (= x1200 x319) (= x675 (or x413 (not x896))) (= x1105 (= x921 0)) (= x149 x66) (= x413 (and x637 x1105)) (= x526 x1187) (= 0 x897) x675 (= x697 x503) (= x824 x645)) x872)) x928))
(assert (= (ite (= x109 x517) x600 (x692 x109)) (x876 x109)))
(assert (x132 x214))
(assert (= (x52 x1032) 0))
(assert (=> (>= 10000 x420) (= (x841 x420) (x281 x420))))
(assert (= x328 (and x127 x55)))
(assert (= (x51 x1123) (ite (and (not x610) x256 x298) (x246 x1123) (x1064 x1123))))
(assert (x273 x1214))
(assert (x883 x26))
(assert (= (ite (and (not x1176) x647 x535) (x602 x1032) (x212 x1032)) (x593 x1032)))
(assert (x883 x115))
(assert (= x931 (x371 (x841 x931))))
(assert (= (x692 x109) (ite (= x109 x405) x1056 (x98 x109))))
(assert (x273 x974))
(assert (= (ite (and x751 x256) (x299 x836) (x878 x836)) (x682 x836)))
(assert (= (x52 x755) 0))
(assert (x273 x39))
(assert (x273 x146))
(assert (x273 x572))
(assert (x273 x1107))
(assert (= (x281 2835717307) (x841 2835717307)))
(assert (= (x371 (x281 911411945)) 911411945))
(assert (x273 x10))
(assert (x273 x532))
(assert (x883 x138))
(assert (=> (>= 10000 x630) (= (x281 x630) (x841 x630))))
(assert (x273 x205))
(assert (= (ite (= x673 x836) x418 (x239 x836)) (x826 x836)))
(assert (= (x211 x200) (ite (= x930 x200) x271 (x258 x200))))
(assert (x273 x179))
(assert (x273 x639))
(assert (x273 x808))
(assert (= (x682 x1044) (ite (and x256 x751) (x299 x1044) (x878 x1044))))
(assert (x273 x280))
(assert (= (and x647 x535) x121))
(assert (x273 x735))
(assert (= (ite (= x1241 x877) x658 (x810 x877)) (x239 x877)))
(assert (x273 x863))
(assert (=> (>= 10000 x1200) (= (x281 x1200) (x841 x1200))))
(assert (x273 x1247))
(assert (=> (>= 10000 x1209) (= (x841 x1209) (x281 x1209))))
(assert (= (x508 x109) (ite (= x109 x740) x128 (x945 x109))))
(assert (= (x833 x1110) (ite (= x1110 x965) x154 (x356 x1110))))
(assert (x880 x398 x764 x845 x263))
(assert (x273 x524))
(assert (= (x281 2293535753) (x841 2293535753)))
(assert (= (x281 2798343961) (x841 2798343961)))
(assert (x273 x1137))
(assert (x273 x1215))
(assert (x273 x462))
(assert (= (x371 (x841 x224)) x224))
(assert (= (ite (and x496 x256 (not x610)) (x539 x1061) (ite (and (not x610) (not x496) x256 x272) (x423 x1061) (x959 x1061))) (x582 x1061)))
(assert (x273 x283))
(assert (= (ite (= x777 x109) x555 (x360 x109)) (x879 x109)))
(assert (x273 x420))
(assert (= (x371 (x841 x164)) x164))
(assert (x273 x937))
(assert (=> (<= x648 10000) (= (x281 x648) (x841 x648))))
(assert (=> (>= 10000 x1196) (= (x841 x1196) (x281 x1196))))
(assert (x273 x399))
(assert (x273 x1236))
(assert (x273 x877))
(assert (x273 x1235))
(assert (x273 x1174))
(assert (= x572 (x371 (x841 x572))))
(assert (= (ite (= x755 x517) x600 (x692 x755)) (x876 x755)))
(assert (=> (>= 10000 x1048) (= (x841 x1048) (x281 x1048))))
(assert (x273 x493))
(assert (x273 x649))
(assert (x273 x223))
(assert (= (x276 x109) (ite (and x638 x127 x55 x1147 x856 (not x318)) (x833 x109) (ite (and x856 (not x638) x1147 x127 x55) (x356 x109) (ite (and x127 x856 (not x1147) x55) (x879 x109) (ite (and x127 x55 (not x856)) (x360 x109) (x576 x109)))))))
(assert (= (ite (= x965 x523) x154 (x356 x523)) (x833 x523)))
(assert (= (x281 69947311) (x841 69947311)))
(assert (= 0 (x52 x200)))
(assert (= (x360 x1049) (ite (= x1049 x862) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x1049))))
(assert (= (x239 x200) (ite (= x200 x1241) x658 (x810 x200))))
(assert (x273 x1043))
(assert (x883 x537))
(assert (x883 x224))
(assert (x132 x1090))
(assert (= x815 (x371 (x841 x815))))
(assert (x883 x1000))
(assert (x273 x721))
(assert (x273 x891))
(assert (x273 x1184))
(assert (x273 x233))
(assert (x273 x1066))
(assert (= (ite (= x517 x1110) x600 (x692 x1110)) (x876 x1110)))
(assert (= (x239 x755) (ite (= x1241 x755) x658 (x810 x755))))
(assert (x273 x571))
(assert (x273 x890))
(assert (x273 x788))
(assert (= 0 (x52 x431)))
(assert (x273 x414))
(assert (= x978 x458))
(assert (= (x826 x1044) (ite (= x673 x1044) x418 (x239 x1044))))
(assert (x273 x340))
(assert (x273 x436))
(assert (= 0 (x52 x836)))
(assert (x273 x658))
(assert (= (x692 x1032) (ite (= x1032 x405) x1056 (x98 x1032))))
(assert (x469 x41 x438))
(assert (x273 x794))
(assert (= (ite (= x777 x200) x555 (x360 x200)) (x879 x200)))
(assert (x273 x1234))
(assert (= (ite (and x256 x751) (x299 x877) (x878 x877)) (x682 x877)))
(assert (x273 x1024))
(assert (= (ite (= x862 x755) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x755)) (x360 x755)))
(assert (x273 x1063))
(assert (= (x239 x523) (ite (= x1241 x523) x658 (x810 x523))))
(assert (x469 x621 x691))
(assert (= x719 x756))
(assert (x273 x224))
(assert (x273 x7))
(assert (x273 x168))
(assert (= (x371 (x841 x89)) x89))
(assert (x883 x969))
(assert (x273 x921))
(assert (x273 x941))
(assert (x273 x99))
(assert (= x1196 (x371 (x841 x1196))))
(assert (= x522 x573))
(assert (x273 x114))
(assert (= x425 true))
(assert (= (x841 2743102681) (x281 2743102681)))
(assert (= (x371 (x281 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x883 x1016))
(assert (x273 x975))
(assert (x273 x394))
(assert (= (x356 x1049) (ite (= x1049 x608) x443 (x879 x1049))))
(assert (= (x371 (x841 x890)) x890))
(assert (x273 x1181))
(assert (= (x879 x877) (ite (= x877 x777) x555 (x360 x877))))
(assert (= (+ (x371 x1183) 1) (x371 (x893 x1183 1))))
(assert (= (x360 x349) (ite (= x349 x862) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x349))))
(assert (x273 x966))
(assert (= (x826 x558) (ite (= x558 x673) x418 (x239 x558))))
(assert (x273 x370))
(assert (=> (<= x124 10000) (= (x841 x124) (x281 x124))))
(assert (x273 x1230))
(assert (x273 x586))
(assert (x883 x149))
(assert (x883 x546))
(assert (x273 x995))
(assert (= x95 (x371 (x841 x95))))
(assert (x883 x1136))
(assert (=> (>= 10000 x659) (= (x281 x659) (x841 x659))))
(assert (x273 x201))
(assert (x273 x707))
(assert (= (ite (and x298 (not x610) x256) (x717 x187) (x1165 x187)) (x700 x187)))
(assert (= (x371 (x841 x1200)) x1200))
(assert (x273 x442))
(assert (= x344 (x371 (x841 x344))))
(assert (x883 x630))
(assert (x273 x129))
(assert (= (ite (= x755 x965) x154 (x356 x755)) (x833 x755)))
(assert (x883 x745))
(assert (= (x841 649617121) (x281 649617121)))
(assert (= (x371 (x841 x659)) x659))
(assert (= x390 (=> (and (= x1095 (x275 (x841 x124) x261 0)) (= (x275 (x841 x140) x1095 0) x947) (= x124 (x401 1461501637330902918203684832716283019655932542975 x41)) (= x261 (x275 (x841 x1196) (x281 3) 0)) (= x127 (< 0 x432))) (and (=> (and (= (x899 x585) x588) (= x501 (x1195 (+ 100 x624))) (= x585 x343) (< 0 x432) (= x808 (x1195 (+ 160 x429))) x127 (= (x1195 (+ x624 32)) x836) (= (x1195 (+ x624 68)) x863) (< 0 x419) (= (x1195 (+ x1025 96)) x862) (= (x1195 (+ 36 x624)) x1025) (or (and x49 (= (x1195 (+ x210 x71)) x1249)) (not x49)) (= x49 (> x106 x210)) (= x210 (x360 x624)) (= (x787 (x841 x588)) x414) (= x71 (x1195 (+ 128 x1025))) (= (x1040 x523) x419) (= x358 (x1040 x808)) (or (and (= x106 0) (not x856)) (and (= x71 x777) (or (and (= (x1195 (+ x624 64)) x558) (= x638 (< 64 x210)) (= (x1195 (+ x501 96)) x608) (= x443 (x879 x558)) (or (and (= x106 64) (not x638)) (and (= x318 (> x210 96)) (or (and (= x1098 (x833 x1110)) (not x1179) (= (x1195 (+ 160 x501)) x661) (= x106 128) (= x1179 (> x210 128)) (= x1110 (x1195 (+ x624 128))) x318) (and (not x318) (= 96 x106))) (= (x1195 (+ x624 96)) x431) (= x965 (x1195 (+ 128 x501))) x638 (= (x356 x431) x154))) x1147) (and (not x1147) (= 32 x106))) (= (> x210 32) x1147) x856 (= (x360 x563) x555) (= x836 x563))) (= x1042 (x401 26959946667150639794667015087019630673637144422540572481103610249215 x547)) (= (> x210 0) x856) (= (x1185 (- x581 32)) x660) (= x788 0) (= (< 0 x414) x1175) (= x718 (x1195 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1042))) (= x581 (x1185 (- x501 x624))) (>= 1461501637330902918203684832716283019655932542975 x588) x1175 (= x547 (x714 x836))) x847) (=> (not x127) x800)))))
(assert (= (ite (and x361 x328) (x952 x349) (x728 x349)) (x78 x349)))
(assert (= (ite (= x349 x1108) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x422 x349)) (x258 x349)))
(assert (x273 x1140))
(assert (x273 x1068))
(assert (x883 x1139))
(assert (= (x360 x109) (ite (= x862 x109) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x109))))
(assert (x273 x645))
(assert (x273 x473))
(assert (= (ite (and x827 (not x610) x256) (x692 x200) (ite (and (not x827) x256 (not x610) x753 (not x590)) (x876 x200) (ite (and (not x610) (not x753) x256 (not x827)) (x692 x200) (x972 x200)))) (x125 x200)))
(assert (x273 x662))
(assert (= (=> (and (= x66 x75) (= x224 x319)) x359) x800))
(assert (x273 x546))
(assert (= x847 (=> (and (= (= x588 274184521717934524641157099916833587218) x361) (= (x754 (x841 x588)) x177) (= x297 (x50 (x841 x588))) (= x70 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x177)) (= x797 (x754 (x841 274184521717934524641157099916833587206))) (= (<= 0 x635) x521) (= x635 (x754 (x841 274184521717934524641157099916833587206))) x521 x70 (= x210 x925) (= x477 (< (x50 (x841 x588)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x477) (and (=> (and (= x1162 (+ x18 x400)) (= 2835717307 x731) (>= 1461501637330902918203684832716283019655932542975 x214) (= (x275 (x841 274184521717934524641157099916833587206) (x281 1) 0) x1248) (= (x275 (x841 274184521717934524641157099916833587206) (x281 1) 0) x1013) (= x358 x723) (= x1137 68) (= x1190 (x1185 (- x46 x723))) (= x35 76450787359836037641860180984291677749980919077056822294353438043884394381312) (< (+ x568 x337) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= 2514000705 x731)) (<= x46 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587206 x752) (< 0 x193) (not x253) (not (= 649617121 x731)) (not (= 1889567281 x731)) (= x46 (x411 x1248)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x568) (= (> x723 x46) x253) x361 (= x112 1) (= x723 x337) (= x1235 x214) (>= x46 0) (= x568 (x289 x686)) (= x1085 (> x337 x46)) (= x982 274184521717934524641157099916833587206) (= x18 x568) (= x1137 x925) (= (or (and (= true (<= x864 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x864)) (> x864 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x603) (not (= x731 826074471)) (= x193 (x787 (x841 274184521717934524641157099916833587218))) (= x1230 (x401 1461501637330902918203684832716283019655932542975 x214)) (>= x568 0) (= (x275 (x841 x1230) (x281 1) 0) x903) (not x747) (= (x1185 (- x1137 4)) x864) (= (x401 1461501637330902918203684832716283019655932542975 x214) x254) (= x686 (x275 (x841 x254) (x281 1) 0)) (= x920 x918) (= x747 (>= (+ x337 x568) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x400 x337) (not (< x731 649617121)) (not x603) (not (> 4 x1137)) (not x1085) (= x739 32)) x1156) (=> (not x361) x397)))))
(assert (=> (>= 10000 x725) (= (x841 x725) (x281 x725))))
(assert (x273 x625))
(assert (= (x371 (x281 2061678023)) 2061678023))
(assert (= (x281 635128645) (x841 635128645)))
(assert (=> (>= 10000 x588) (= (x841 x588) (x281 x588))))
(assert (x273 x241))
(assert (x273 x924))
(assert (= (x281 2764855426) (x841 2764855426)))
(assert (= (x826 x349) (ite (= x673 x349) x418 (x239 x349))))
(assert (=> (<= x315 10000) (= (x841 x315) (x281 x315))))
(assert (x273 x254))
(assert (=> (>= 10000 x1236) (= (x841 x1236) (x281 x1236))))
(assert (= (x841 759532456) (x281 759532456)))
(assert (x273 x980))
(assert (x273 x377))
(assert (x273 x347))
(assert (x273 x946))
(assert (=> (>= 10000 x95) (= (x281 x95) (x841 x95))))
(assert (x273 x295))
(assert (= (x833 x109) (ite (= x109 x965) x154 (x356 x109))))
(assert (x273 x1003))
(assert (= (ite (= x563 x862) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x141 x563)) (x360 x563)))
(assert (= x566 (x371 (x841 x566))))
(assert (= (x876 x523) (ite (= x523 x517) x600 (x692 x523))))
(assert (= (x682 x673) (ite (and x751 x256) (x299 x673) (x878 x673))))
(assert (x273 x189))
(assert (= (ite (and x55 (not x49) x127) (x276 x200) (x1038 x200)) (x144 x200)))
(assert (= (x841 2258409472) (x281 2258409472)))
(assert (x883 x140))
(assert (x273 x1210))
(assert (x273 x1098))
(assert (= x26 (x371 (x841 x26))))
(assert (= (ite (= x200 x1108) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x422 x200)) (x258 x200)))
(assert (x273 x608))
(assert (=> (<= x1068 10000) (= (x281 x1068) (x841 x1068))))
(assert (x273 x819))
(assert (= (ite (= x808 x673) x418 (x239 x808)) (x826 x808)))
(assert (x273 x673))
(assert (= (x78 x523) (ite (and x328 x361) (x952 x523) (x728 x523))))
(assert (x273 x218))
(assert (x273 x245))
(assert (= (ite (= x777 x1049) x555 (x360 x1049)) (x879 x1049)))
(assert (= (ite (= x1110 x523) x432 (x709 x1110)) (x299 x1110)))
(assert (= (x826 x1049) (ite (= x1049 x673) x418 (x239 x1049))))
(assert (= (x299 x431) (ite (= x431 x523) x432 (x709 x431))))
(assert (x273 x1252))
(assert (= (x682 x558) (ite (and x751 x256) (x299 x558) (x878 x558))))
(assert (= (x876 x1044) (ite (= x1044 x517) x600 (x692 x1044))))
(assert (= (x371 (x281 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x132 x398))
(assert (x273 x1054))
(assert (= x527 (=> (and (= x99 x23) (>= x170 0) (>= 1461501637330902918203684832716283019655932542975 x226) (<= x99 1461501637330902918203684832716283019655932542975) (= x570 (x754 (x841 274184521717934524641157099916833587206))) (= false x434) (<= 0 x570) x386 x178 (= x1159 4) (<= 0 x262) (= x319 x631) (= 87118632 x233) (= x611 false) (>= 1461501637330902918203684832716283019655932542975 x319) (>= x1083 0) (= false x351) x885 (= (< 0 (x787 (x841 274184521717934524641157099916833587218))) x386) (<= 0 x99) (= x1083 x140) (= x321 (x754 (x841 274184521717934524641157099916833587214))) (= x178 (> (x787 (x841 274184521717934524641157099916833587214)) 0)) (= x670 false) (<= 0 x319) (<= x170 1461501637330902918203684832716283019655932542975) (= x66 x520) (= x262 (x754 (x841 274184521717934524641157099916833587218))) (= (> (x787 (x841 274184521717934524641157099916833587206)) 0) x885) (>= x226 0) (>= x321 0) (>= 1461501637330902918203684832716283019655932542975 x1083)) x1100)))
(assert (=> (>= 10000 x1136) (= (x281 x1136) (x841 x1136))))
(assert (x273 x1240))
(assert (= x513 (x371 (x841 x513))))
(assert (= x322 (x371 (x841 x322))))
(assert (= (ite (= x877 x965) x154 (x356 x877)) (x833 x877)))
(assert (= (ite (= x431 x405) x1056 (x98 x431)) (x692 x431)))
(assert (x273 x635))
(assert (x273 x543))
(assert (= x197 x978))
(assert (= (ite (= x523 x109) x432 (x709 x109)) (x299 x109)))
(assert (= (ite (= x608 x349) x443 (x879 x349)) (x356 x349)))
(assert (x273 x1193))
(assert (x883 x572))
(assert (= (x51 x985) (ite (and x298 (not x610) x256) (x246 x985) (x1064 x985))))
(assert (x273 x1246))
(assert (=> (<= x806 10000) (= (x281 x806) (x841 x806))))
(assert (x273 x969))
(assert (x883 x704))
(assert (x273 x76))
(assert (= (ite (= x1233 x1241) x658 (x810 x1233)) (x239 x1233)))
(assert (x273 x1139))
(assert (x273 x887))
(assert (x883 x124))
(assert (x883 x588))
(assert (x273 x955))
(assert (x273 x92))
(assert (x273 x671))
(assert (x273 x252))
(assert (x273 x862))
(assert (x273 x109))
(assert (x273 x897))
(assert (x883 x198))
(assert (= (x371 (x281 2532887486)) 2532887486))
(assert (x883 x206))
(assert (x273 x1037))
(assert (x273 x777))
(assert (x883 x609))
(assert (= (x276 x1044) (ite (and x856 x638 x55 (not x318) x1147 x127) (x833 x1044) (ite (and x55 x856 x127 (not x638) x1147) (x356 x1044) (ite (and (not x1147) x127 x55 x856) (x879 x1044) (ite (and (not x856) x55 x127) (x360 x1044) (x576 x1044)))))))
(assert (x273 x1048))
(assert (x273 x529))
(assert (= (x52 x673) 0))
(assert (x273 x1177))
(assert (=> (<= x1118 10000) (= (x841 x1118) (x281 x1118))))
(assert (= (x52 x877) 0))
(assert (x273 x170))
(assert (x883 x357))
(assert (x273 x214))
(assert (x273 x1142))
(assert (x273 x842))
(assert (x273 x1041))
(assert (=> (>= 10000 x206) (= (x841 x206) (x281 x206))))
(check-sat)
