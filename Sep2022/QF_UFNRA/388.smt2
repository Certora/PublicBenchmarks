(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-fun x2084 () Real)
(declare-fun x2851 () Real)
(declare-fun x2213 () Real)
(declare-fun x1053 () Bool)
(declare-fun x2947 () Real)
(declare-fun x2216 () Real)
(declare-fun x2806 () Real)
(declare-fun x738 () Real)
(declare-fun x2064 (Real) Real)
(declare-fun x854 () Real)
(declare-fun x211 () Bool)
(declare-fun x2686 () Bool)
(declare-fun x2010 () Real)
(declare-fun x2090 () Real)
(declare-fun x1675 () Bool)
(declare-fun x2796 (Real) Real)
(declare-fun x1364 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x227 () Bool)
(declare-fun x2900 () Bool)
(declare-fun x2793 () Real)
(declare-fun x2025 () Real)
(declare-fun x349 () Real)
(declare-fun x3027 () Bool)
(declare-fun x26 () Bool)
(declare-fun x2263 () Bool)
(declare-fun x367 () Bool)
(declare-fun x1666 () Bool)
(declare-fun x232 () Real)
(declare-fun x2217 () Real)
(declare-fun x2303 () Real)
(declare-fun x2204 () Real)
(declare-fun x2936 () Real)
(declare-fun x911 () Real)
(declare-fun x365 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x790 () Real)
(declare-fun x1035 () Real)
(declare-fun x3006 (Real) Real)
(declare-fun x2075 () Bool)
(declare-fun x2962 () Real)
(declare-fun x2028 () Bool)
(declare-fun x622 () Bool)
(declare-fun x901 () Real)
(declare-fun x1146 () Real)
(declare-fun x1817 () Real)
(declare-fun x94 () Bool)
(declare-fun x2258 () Real)
(declare-fun x248 () Real)
(declare-fun x1130 () Real)
(declare-fun x768 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x214 () Bool)
(declare-fun x1884 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x2169 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x616 () Real)
(declare-fun x428 () Real)
(declare-fun x1579 () Real)
(declare-fun x539 () Bool)
(declare-fun x2551 () Bool)
(declare-fun x148 () Bool)
(declare-fun x1761 () Real)
(declare-fun x1351 () Real)
(declare-fun x125 () Real)
(declare-fun x1325 () Bool)
(declare-fun x2635 () Bool)
(declare-fun x402 () Real)
(declare-fun x2441 () Bool)
(declare-fun x320 () Bool)
(declare-fun x636 (Real) Real)
(declare-fun x1100 () Real)
(declare-fun x181 () Real)
(declare-fun x3162 () Bool)
(declare-fun x130 (Real) Real)
(declare-fun x2656 () Bool)
(declare-fun x3112 () Bool)
(declare-fun x162 () Real)
(declare-fun x3049 () Real)
(declare-fun x19 () Bool)
(declare-fun x2628 () Real)
(declare-fun x1607 () Bool)
(declare-fun x1880 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x3152 () Bool)
(declare-fun x325 () Real)
(declare-fun x1541 () Real)
(declare-fun x1584 () Real)
(declare-fun x991 () Real)
(declare-fun x445 () Bool)
(declare-fun x2971 (Real) Real)
(declare-fun x809 () Bool)
(declare-fun x821 () Bool)
(declare-fun x338 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x2956 () Real)
(declare-fun x1488 () Bool)
(declare-fun x1896 () Real)
(declare-fun x467 () Real)
(declare-fun x1318 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x2835 () Bool)
(declare-fun x2859 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x939 () Bool)
(declare-fun x2098 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x993 () Bool)
(declare-fun x2891 () Bool)
(declare-fun x276 () Bool)
(declare-fun x163 () Real)
(declare-fun x501 () Real)
(declare-fun x1915 (Real) Real)
(declare-fun x922 () Bool)
(declare-fun x153 () Bool)
(declare-fun x87 () Real)
(declare-fun x2429 () Bool)
(declare-fun x2200 () Real)
(declare-fun x2937 () Bool)
(declare-fun x2994 (Real) Real)
(declare-fun x1184 () Bool)
(declare-fun x2298 () Bool)
(declare-fun x368 () Bool)
(declare-fun x881 () Real)
(declare-fun x1689 () Bool)
(declare-fun x891 () Real)
(declare-fun x174 () Bool)
(declare-fun x413 () Bool)
(declare-fun x525 () Bool)
(declare-fun x231 () Bool)
(declare-fun x1635 () Real)
(declare-fun x637 () Real)
(declare-fun x843 () Real)
(declare-fun x1263 () Real)
(declare-fun x172 () Real)
(declare-fun x785 () Real)
(declare-fun x2821 () Bool)
(declare-fun x3004 () Bool)
(declare-fun x683 () Bool)
(declare-fun x519 () Real)
(declare-fun x91 () Real)
(declare-fun x296 () Real)
(declare-fun x1047 () Real)
(declare-fun x741 (Real) Real)
(declare-fun x1268 () Bool)
(declare-fun x1475 () Real)
(declare-fun x3075 () Real)
(declare-fun x2726 () Bool)
(declare-fun x2143 () Bool)
(declare-fun x288 () Bool)
(declare-fun x1760 () Real)
(declare-fun x2519 (Real) Real)
(declare-fun x1891 () Real)
(declare-fun x1260 () Bool)
(declare-fun x3074 () Bool)
(declare-fun x119 () Real)
(declare-fun x2102 () Bool)
(declare-fun x1734 () Real)
(declare-fun x2744 () Real)
(declare-fun x1417 () Bool)
(declare-fun x950 () Bool)
(declare-fun x2346 () Real)
(declare-fun x464 () Bool)
(declare-fun x2717 () Real)
(declare-fun x448 () Bool)
(declare-fun x1923 () Real)
(declare-fun x1861 () Bool)
(declare-fun x1688 () Bool)
(declare-fun x2728 () Real)
(declare-fun x767 (Real) Real)
(declare-fun x1957 () Real)
(declare-fun x640 () Bool)
(declare-fun x492 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x1764 () Real)
(declare-fun x2474 () Bool)
(declare-fun x3079 () Bool)
(declare-fun x471 () Real)
(declare-fun x2154 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x2919 () Real)
(declare-fun x2714 () Real)
(declare-fun x2334 () Real)
(declare-fun x743 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x1725 () Bool)
(declare-fun x2576 () Bool)
(declare-fun x934 () Real)
(declare-fun x29 (Real) Real)
(declare-fun x2008 () Real)
(declare-fun x2703 () Bool)
(declare-fun x2816 () Real)
(declare-fun x808 () Bool)
(declare-fun x2964 () Real)
(declare-fun x3117 () Bool)
(declare-fun x3080 () Real)
(declare-fun x1124 (Real) Real)
(declare-fun x586 () Bool)
(declare-fun x976 () Real)
(declare-fun x3012 () Bool)
(declare-fun x2350 () Bool)
(declare-fun x1562 () Real)
(declare-fun x2226 () Real)
(declare-fun x2477 () Bool)
(declare-fun x2304 () Real)
(declare-fun x1036 () Real)
(declare-fun x1297 () Real)
(declare-fun x746 () Real)
(declare-fun x1501 () Bool)
(declare-fun x1684 () Bool)
(declare-fun x1524 () Real)
(declare-fun x2450 () Bool)
(declare-fun x253 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x2343 () Real)
(declare-fun x2006 () Bool)
(declare-fun x2356 () Bool)
(declare-fun x250 (Real) Real)
(declare-fun x604 () Bool)
(declare-fun x1034 () Real)
(declare-fun x2654 () Bool)
(declare-fun x657 () Real)
(declare-fun x2730 () Real)
(declare-fun x3182 () Bool)
(declare-fun x189 () Bool)
(declare-fun x2358 () Real)
(declare-fun x1068 () Bool)
(declare-fun x2222 () Bool)
(declare-fun x2988 (Real) Real)
(declare-fun x1649 () Real)
(declare-fun x392 () Real)
(declare-fun x632 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x2745 () Real)
(declare-fun x1309 () Real)
(declare-fun x3089 () Bool)
(declare-fun x642 (Real) Real)
(declare-fun x1305 () Bool)
(declare-fun x139 () Bool)
(declare-fun x838 () Real)
(declare-fun x1481 () Bool)
(declare-fun x2316 () Bool)
(declare-fun x2386 () Real)
(declare-fun x1274 () Real)
(declare-fun x588 () Bool)
(declare-fun x1 () Real)
(declare-fun x887 () Real)
(declare-fun x2490 () Bool)
(declare-fun x2867 () Real)
(declare-fun x659 () Bool)
(declare-fun x2775 () Real)
(declare-fun x1193 () Real)
(declare-fun x1905 () Bool)
(declare-fun x2983 () Bool)
(declare-fun x696 () Real)
(declare-fun x1182 () Bool)
(declare-fun x784 () Bool)
(declare-fun x1678 () Real)
(declare-fun x2500 () Bool)
(declare-fun x1594 () Real)
(declare-fun x2197 () Real)
(declare-fun x2369 () Real)
(declare-fun x2547 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x1982 () Real)
(declare-fun x2981 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x1769 () Real)
(declare-fun x1870 () Bool)
(declare-fun x2330 () Bool)
(declare-fun x1343 () Real)
(declare-fun x342 (Real) Real)
(declare-fun x1611 () Bool)
(declare-fun x684 () Real)
(declare-fun x2456 () Real)
(declare-fun x2505 () Real)
(declare-fun x155 () Real)
(declare-fun x282 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x817 (Real) Real)
(declare-fun x2831 () Real)
(declare-fun x77 () Real)
(declare-fun x2517 () Real)
(declare-fun x105 () Real)
(declare-fun x2518 () Real)
(declare-fun x486 () Real)
(declare-fun x2963 () Bool)
(declare-fun x3032 (Real) Real)
(declare-fun x1785 () Bool)
(declare-fun x2009 () Real)
(declare-fun x2158 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x2948 () Bool)
(declare-fun x2434 () Real)
(declare-fun x1486 () Bool)
(declare-fun x109 () Bool)
(declare-fun x1729 () Real)
(declare-fun x1001 () Bool)
(declare-fun x1628 () Bool)
(declare-fun x74 () Bool)
(declare-fun x2453 () Bool)
(declare-fun x1746 () Real)
(declare-fun x1508 () Real)
(declare-fun x1008 (Real) Real)
(declare-fun x2939 () Bool)
(declare-fun x396 () Bool)
(declare-fun x299 () Real)
(declare-fun x2660 () Real)
(declare-fun x48 () Bool)
(declare-fun x923 () Real)
(declare-fun x3094 () Bool)
(declare-fun x1713 () Real)
(declare-fun x1038 () Real)
(declare-fun x545 () Real)
(declare-fun x620 () Bool)
(declare-fun x1516 () Real)
(declare-fun x2678 () Real)
(declare-fun x1667 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x452 () Bool)
(declare-fun x652 () Bool)
(declare-fun x2123 () Real)
(declare-fun x52 () Bool)
(declare-fun x1887 () Bool)
(declare-fun x388 () Bool)
(declare-fun x283 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x2526 () Real)
(declare-fun x1487 () Bool)
(declare-fun x2924 () Bool)
(declare-fun x2180 () Real)
(declare-fun x1726 () Real)
(declare-fun x2269 () Real)
(declare-fun x2542 () Real)
(declare-fun x2984 (Real) Real)
(declare-fun x1742 () Real)
(declare-fun x1987 () Real)
(declare-fun x2120 () Real)
(declare-fun x886 () Bool)
(declare-fun x1809 () Real)
(declare-fun x243 () Real)
(declare-fun x1906 () Real)
(declare-fun x65 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x2044 () Bool)
(declare-fun x793 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x3171 () Bool)
(declare-fun x1762 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x2092 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x1250 () Real)
(declare-fun x2457 () Bool)
(declare-fun x2997 () Bool)
(declare-fun x541 () Bool)
(declare-fun x2916 () Bool)
(declare-fun x2194 (Real) Real)
(declare-fun x1771 () Real)
(declare-fun x3077 () Bool)
(declare-fun x894 () Bool)
(declare-fun x1970 () Real)
(declare-fun x2854 () Real)
(declare-fun x1792 () Bool)
(declare-fun x965 () Bool)
(declare-fun x2839 () Bool)
(declare-fun x2613 () Bool)
(declare-fun x782 () Bool)
(declare-fun x1424 () Real)
(declare-fun x530 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x165 () Real)
(declare-fun x3060 () Bool)
(declare-fun x2482 () Real)
(declare-fun x2388 () Bool)
(declare-fun x96 () Bool)
(declare-fun x1597 (Real) Real)
(declare-fun x89 () Bool)
(declare-fun x733 () Real)
(declare-fun x1526 () Real)
(declare-fun x1014 () Bool)
(declare-fun x718 () Real)
(declare-fun x2195 () Bool)
(declare-fun x34 () Bool)
(declare-fun x2855 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x878 () Bool)
(declare-fun x264 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x2702 () Real)
(declare-fun x1103 () Bool)
(declare-fun x178 () Bool)
(declare-fun x1749 () Real)
(declare-fun x2290 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x1445 () Real)
(declare-fun x575 () Real)
(declare-fun x875 () Real)
(declare-fun x909 () Bool)
(declare-fun x1254 () Bool)
(declare-fun x198 () Bool)
(declare-fun x1898 () Real)
(declare-fun x788 () Bool)
(declare-fun x3127 () Bool)
(declare-fun x1564 () Real)
(declare-fun x1244 () Real)
(declare-fun x1732 () Real)
(declare-fun x1337 () Bool)
(declare-fun x1823 () Bool)
(declare-fun x112 () Bool)
(declare-fun x2737 () Bool)
(declare-fun x238 () Real)
(declare-fun x2945 () Bool)
(declare-fun x311 (Real) Real)
(declare-fun x925 () Real)
(declare-fun x3150 () Bool)
(declare-fun x1046 () Real)
(declare-fun x1971 () Bool)
(declare-fun x1789 () Real)
(declare-fun x2110 () Real)
(declare-fun x2104 () Real)
(declare-fun x158 () Bool)
(declare-fun x1860 () Real)
(declare-fun x1023 () Bool)
(declare-fun x1226 (Real) Real)
(declare-fun x2632 () Bool)
(declare-fun x1925 () Real)
(declare-fun x2489 () Bool)
(declare-fun x1814 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x2811 () Real)
(declare-fun x1522 () Bool)
(declare-fun x1391 () Real)
(declare-fun x1248 () Real)
(declare-fun x535 () Real)
(declare-fun x2906 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x2209 () Bool)
(declare-fun x1406 () Bool)
(declare-fun x943 () Real)
(declare-fun x1696 (Real) Real)
(declare-fun x1685 () Real)
(declare-fun x2757 () Real)
(declare-fun x804 () Bool)
(declare-fun x343 (Real) Real)
(declare-fun x712 (Real) Real)
(declare-fun x1615 () Real)
(declare-fun x2747 () Real)
(declare-fun x3041 () Real)
(declare-fun x160 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x440 (Real) Real)
(declare-fun x2729 () Real)
(declare-fun x1231 () Real)
(declare-fun x593 () Real)
(declare-fun x477 () Bool)
(declare-fun x947 () Bool)
(declare-fun x558 () Bool)
(declare-fun x2035 (Real) Real)
(declare-fun x1818 () Bool)
(declare-fun x2328 () Real)
(declare-fun x1638 () Real)
(declare-fun x2950 () Bool)
(declare-fun x46 () Real)
(declare-fun x2026 () Bool)
(declare-fun x2321 () Real)
(declare-fun x183 () Real)
(declare-fun x582 () Real)
(declare-fun x1290 (Real) Real)
(declare-fun x2676 () Real)
(declare-fun x453 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x698 () Real)
(declare-fun x806 () Bool)
(declare-fun x2682 () Real)
(declare-fun x522 () Bool)
(declare-fun x997 () Real)
(declare-fun x2944 () Real)
(declare-fun x3158 () Real)
(declare-fun x1141 () Bool)
(declare-fun x1676 () Real)
(declare-fun x2848 () Bool)
(declare-fun x2899 () Real)
(declare-fun x1722 () Real)
(declare-fun x1031 (Real) Real)
(declare-fun x1585 () Real)
(declare-fun x138 () Bool)
(declare-fun x30 () Bool)
(declare-fun x2504 () Bool)
(declare-fun x1796 () Bool)
(declare-fun x1266 () Real)
(declare-fun x2109 () Real)
(declare-fun x511 () Real)
(declare-fun x1027 () Bool)
(declare-fun x726 () Real)
(declare-fun x218 () Bool)
(declare-fun x2986 () Bool)
(declare-fun x3078 () Real)
(declare-fun x1442 () Real)
(declare-fun x1221 () Real)
(declare-fun x221 () Real)
(declare-fun x1061 () Bool)
(declare-fun x1314 () Real)
(declare-fun x171 () Real)
(declare-fun x1330 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x598 (Real) Real)
(declare-fun x752 () Real)
(declare-fun x2882 () Bool)
(declare-fun x1655 () Real)
(declare-fun x1400 () Bool)
(declare-fun x2609 () Bool)
(declare-fun x1639 () Real)
(declare-fun x2170 () Bool)
(declare-fun x829 (Real) Real)
(declare-fun x578 () Bool)
(declare-fun x226 () Real)
(declare-fun x884 () Real)
(declare-fun x3025 () Real)
(declare-fun x1566 (Real) Real)
(declare-fun x1033 () Real)
(declare-fun x1448 () Bool)
(declare-fun x2097 () Real)
(declare-fun x2903 () Real)
(declare-fun x295 () Bool)
(declare-fun x662 () Real)
(declare-fun x2212 () Real)
(declare-fun x3051 () Bool)
(declare-fun x1169 () Real)
(declare-fun x766 () Real)
(declare-fun x1009 () Real)
(declare-fun x2577 () Bool)
(declare-fun x2289 () Real)
(declare-fun x914 () Real)
(declare-fun x557 () Bool)
(declare-fun x1427 () Real)
(declare-fun x2780 () Real)
(declare-fun x1975 () Real)
(declare-fun x1170 () Bool)
(declare-fun x2335 () Bool)
(declare-fun x2499 () Bool)
(declare-fun x3022 () Real)
(declare-fun x981 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x1452 () Bool)
(declare-fun x107 (Real) Real)
(declare-fun x904 () Bool)
(declare-fun x2847 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x380 () Bool)
(declare-fun x169 () Real)
(declare-fun x265 () Bool)
(declare-fun x2935 () Bool)
(declare-fun x2896 () Real)
(declare-fun x933 () Real)
(declare-fun x1463 () Real)
(declare-fun x2677 () Bool)
(declare-fun x2059 () Real)
(declare-fun x322 () Bool)
(declare-fun x2727 () Real)
(declare-fun x1051 () Real)
(declare-fun x1056 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x915 () Real)
(declare-fun x1756 () Real)
(declare-fun x1804 () Real)
(declare-fun x807 () Bool)
(declare-fun x2575 () Real)
(declare-fun x2790 () Bool)
(declare-fun x1938 () Bool)
(declare-fun x2442 () Bool)
(declare-fun x802 () Bool)
(declare-fun x614 () Bool)
(declare-fun x866 () Real)
(declare-fun x1080 () Real)
(declare-fun x1561 () Real)
(declare-fun x560 () Real)
(declare-fun x427 () Bool)
(declare-fun x663 () Real)
(declare-fun x1841 () Bool)
(declare-fun x2799 () Bool)
(declare-fun x382 () Real)
(declare-fun x2529 () Bool)
(declare-fun x2663 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x100 () Real)
(declare-fun x1077 () Bool)
(declare-fun x287 () Real)
(declare-fun x1788 () Bool)
(declare-fun x2395 () Bool)
(declare-fun x179 () Real)
(declare-fun x317 () Bool)
(declare-fun x2749 () Real)
(declare-fun x730 () Real)
(declare-fun x2261 (Real) Real)
(declare-fun x1883 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x361 () Real)
(declare-fun x1048 () Bool)
(declare-fun x353 () Real)
(declare-fun x2368 () Real)
(declare-fun x1972 () Bool)
(declare-fun x2832 () Real)
(declare-fun x417 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x1672 () Real)
(declare-fun x6 () Bool)
(declare-fun x2617 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x2506 () Real)
(declare-fun x1357 () Bool)
(declare-fun x792 () Real)
(declare-fun x2705 () Bool)
(declare-fun x719 () Bool)
(declare-fun x2777 () Bool)
(declare-fun x892 () Real)
(declare-fun x1024 () Bool)
(declare-fun x1536 () Real)
(declare-fun x3148 () Real)
(declare-fun x638 () Real)
(declare-fun x2101 () Bool)
(declare-fun x855 () Real)
(declare-fun x1408 () Real)
(declare-fun x14 () Bool)
(declare-fun x2623 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x731 () Bool)
(declare-fun x268 () Real)
(declare-fun x490 () Bool)
(declare-fun x757 () Real)
(declare-fun x3042 () Real)
(declare-fun x3108 () Bool)
(declare-fun x2131 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x872 () Real)
(declare-fun x2320 () Real)
(declare-fun x37 () Bool)
(declare-fun x1247 (Real) Real)
(declare-fun x717 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x3058 () Real)
(declare-fun x1819 () Real)
(declare-fun x2115 () Bool)
(declare-fun x846 () Real)
(declare-fun x1893 () Bool)
(declare-fun x2872 () Bool)
(declare-fun x416 () Real)
(declare-fun x2469 () Real)
(declare-fun x2589 (Real) Real)
(declare-fun x779 () Real)
(declare-fun x1629 () Bool)
(declare-fun x756 () Bool)
(declare-fun x524 (Real) Real)
(declare-fun x2301 () Bool)
(declare-fun x2862 (Real) Real)
(declare-fun x1163 () Real)
(declare-fun x2300 () Bool)
(declare-fun x409 () Real)
(declare-fun x1519 () Bool)
(declare-fun x1843 () Bool)
(declare-fun x1191 () Real)
(declare-fun x1968 () Real)
(declare-fun x587 () Bool)
(declare-fun x2 () Real)
(declare-fun x2362 () Real)
(declare-fun x569 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x3007 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x2917 () Bool)
(declare-fun x2417 () Bool)
(declare-fun x344 () Bool)
(declare-fun x2108 () Real)
(declare-fun x1704 () Real)
(declare-fun x1773 () Real)
(declare-fun x2357 () Bool)
(declare-fun x1569 () Real)
(declare-fun x1225 () Real)
(declare-fun x1458 () Bool)
(declare-fun x2425 () Bool)
(declare-fun x2696 () Real)
(declare-fun x2052 () Real)
(declare-fun x1976 () Bool)
(declare-fun x576 () Real)
(declare-fun x457 () Real)
(declare-fun x655 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x2571 () Real)
(declare-fun x1862 () Bool)
(declare-fun x255 () Bool)
(declare-fun x1753 () Real)
(declare-fun x1404 () Bool)
(declare-fun x2574 () Bool)
(declare-fun x75 () Bool)
(declare-fun x2017 () Real)
(declare-fun x2268 () Real)
(declare-fun x873 (Real) Real)
(declare-fun x777 () Real)
(declare-fun x1434 () Bool)
(declare-fun x2409 () Bool)
(declare-fun x2985 () Bool)
(declare-fun x256 () Bool)
(declare-fun x2611 () Real)
(declare-fun x1718 () Bool)
(declare-fun x2050 () Bool)
(declare-fun x3069 () Real)
(declare-fun x1620 () Bool)
(declare-fun x2931 () Real)
(declare-fun x1605 () Real)
(declare-fun x2165 () Bool)
(declare-fun x3183 () Bool)
(declare-fun x3002 () Bool)
(declare-fun x2175 () Real)
(declare-fun x3057 () Bool)
(declare-fun x1894 () Real)
(declare-fun x2127 () Bool)
(declare-fun x2545 () Real)
(declare-fun x2492 () Bool)
(declare-fun x917 () Real)
(declare-fun x834 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x814 () Bool)
(declare-fun x164 () Real)
(declare-fun x2688 () Real)
(declare-fun x335 () Real)
(declare-fun x1020 () Bool)
(declare-fun x1219 () Real)
(declare-fun x1922 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x3106 () Real)
(declare-fun x1137 () Real)
(declare-fun x1839 () Bool)
(declare-fun x465 (Real) Real)
(declare-fun x735 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x463 () Real)
(declare-fun x529 () Bool)
(declare-fun x314 () Real)
(declare-fun x559 () Real)
(declare-fun x1674 () Bool)
(declare-fun x1598 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x358 () Bool)
(declare-fun x2235 () Bool)
(declare-fun x547 () Bool)
(declare-fun x2381 () Bool)
(declare-fun x693 () Bool)
(declare-fun x2595 () Real)
(declare-fun x2002 () Bool)
(declare-fun x2488 () Bool)
(declare-fun x2661 () Bool)
(declare-fun x668 () Bool)
(declare-fun x2787 () Real)
(declare-fun x1992 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x312 () Bool)
(declare-fun x1560 () Bool)
(declare-fun x381 () Bool)
(declare-fun x340 () Real)
(declare-fun x1542 () Real)
(declare-fun x2508 () Real)
(declare-fun x150 () Bool)
(declare-fun x1943 () Bool)
(declare-fun x580 () Real)
(declare-fun x2510 () Real)
(declare-fun x1087 () Bool)
(declare-fun x2462 () Real)
(declare-fun x1387 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x1867 () Real)
(declare-fun x1510 () Bool)
(declare-fun x2525 () Real)
(declare-fun x407 () Bool)
(declare-fun x1997 () Real)
(declare-fun x585 () Bool)
(declare-fun x379 () Bool)
(declare-fun x2929 () Real)
(declare-fun x1190 () Bool)
(declare-fun x190 () Real)
(declare-fun x2426 () Real)
(declare-fun x2608 () Bool)
(declare-fun x912 () Bool)
(declare-fun x2809 () Bool)
(declare-fun x1858 () Real)
(declare-fun x2894 () Real)
(declare-fun x43 () Real)
(declare-fun x1991 () Bool)
(declare-fun x1777 () Real)
(declare-fun x989 () Real)
(declare-fun x2550 () Bool)
(declare-fun x2893 () Real)
(declare-fun x2863 () Bool)
(declare-fun x885 () Real)
(declare-fun x2568 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x180 () Bool)
(declare-fun x1942 () Real)
(declare-fun x709 () Bool)
(declare-fun x2020 () Real)
(declare-fun x36 () Bool)
(declare-fun x331 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x447 () Real)
(declare-fun x882 () Real)
(declare-fun x1317 () Real)
(declare-fun x3144 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x1779 () Real)
(declare-fun x1222 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x3129 () Real)
(declare-fun x1256 () Bool)
(declare-fun x948 () Real)
(declare-fun x1876 () Real)
(declare-fun x2367 (Real) Real)
(declare-fun x1933 () Real)
(declare-fun x2933 () Real)
(declare-fun x2094 () Bool)
(declare-fun x236 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x1039 () Real)
(declare-fun x3054 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x3011 (Real) Real)
(declare-fun x1449 () Real)
(declare-fun x2970 () Bool)
(declare-fun x644 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x2352 () Real)
(declare-fun x1755 (Real) Real)
(declare-fun x1188 () Real)
(declare-fun x3071 () Bool)
(declare-fun x2454 () Bool)
(declare-fun x984 () Bool)
(declare-fun x2138 () Real)
(declare-fun x1637 () Bool)
(declare-fun x3024 () Bool)
(declare-fun x297 () Bool)
(declare-fun x770 () Bool)
(declare-fun x1209 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x1018 () Real)
(declare-fun x2976 (Real) Real)
(declare-fun x449 () Real)
(declare-fun x397 () Bool)
(declare-fun x117 () Real)
(declare-fun x1557 () Bool)
(declare-fun x517 () Real)
(declare-fun x359 () Bool)
(declare-fun x799 () Bool)
(declare-fun x2444 () Bool)
(declare-fun x2422 () Bool)
(declare-fun x1539 () Real)
(declare-fun x2242 () Bool)
(declare-fun x1425 (Real) Real)
(declare-fun x876 () Real)
(declare-fun x2438 () Real)
(declare-fun x2410 () Real)
(declare-fun x3142 () Real)
(declare-fun x2804 () Real)
(declare-fun x433 () Real)
(declare-fun x45 () Real)
(declare-fun x1573 () Real)
(declare-fun x1358 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x98 () Bool)
(declare-fun x304 () Real)
(declare-fun x2254 () Bool)
(declare-fun x2091 () Bool)
(declare-fun x987 () Bool)
(declare-fun x2880 () Real)
(declare-fun x1499 () Real)
(declare-fun x1698 () Real)
(declare-fun x3101 () Real)
(declare-fun x1292 () Bool)
(declare-fun x1476 () Real)
(declare-fun x1803 () Real)
(declare-fun x844 () Real)
(declare-fun x2579 () Bool)
(declare-fun x2255 () Real)
(declare-fun x2139 () Real)
(declare-fun x819 () Real)
(declare-fun x1917 () Real)
(declare-fun x2451 () Real)
(declare-fun x207 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x2491 () Real)
(declare-fun x435 () Real)
(declare-fun x269 () Real)
(declare-fun x600 () Real)
(declare-fun x1443 () Real)
(declare-fun x2582 () Real)
(declare-fun x2801 () Real)
(declare-fun x2473 () Real)
(declare-fun x1546 () Bool)
(declare-fun x1548 () Real)
(declare-fun x1565 () Real)
(declare-fun x460 () Bool)
(declare-fun x610 () Bool)
(declare-fun x654 () Bool)
(declare-fun x270 () Bool)
(declare-fun x2512 () Bool)
(declare-fun x1144 () Real)
(declare-fun x257 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x2248 () Real)
(declare-fun x2022 () Real)
(declare-fun x554 () Bool)
(declare-fun x571 () Real)
(declare-fun x196 () Real)
(declare-fun x2338 () Bool)
(declare-fun x599 () Bool)
(declare-fun x1353 () Bool)
(declare-fun x772 () Real)
(declare-fun x3143 () Bool)
(declare-fun x2603 () Bool)
(declare-fun x2731 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x1042 () Real)
(declare-fun x2552 () Real)
(declare-fun x2501 () Real)
(declare-fun x860 () Bool)
(declare-fun x400 () Bool)
(declare-fun x1504 () Real)
(declare-fun x1558 () Bool)
(declare-fun x1770 () Bool)
(declare-fun x2160 () Real)
(declare-fun x2421 () Real)
(declare-fun x2758 () Bool)
(declare-fun x1241 () Real)
(declare-fun x758 () Bool)
(declare-fun x326 () Bool)
(declare-fun x1738 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x192 () Bool)
(declare-fun x193 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x1272 () Real)
(declare-fun x3090 () Real)
(declare-fun x1577 () Bool)
(declare-fun x898 () Real)
(declare-fun x1107 () Real)
(declare-fun x2965 () Bool)
(declare-fun x2273 () Real)
(declare-fun x1312 () Real)
(declare-fun x761 () Bool)
(declare-fun x2432 () Bool)
(declare-fun x3100 () Bool)
(declare-fun x80 () Real)
(declare-fun x1854 () Bool)
(declare-fun x581 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x350 () Bool)
(declare-fun x1306 () Real)
(declare-fun x494 () Bool)
(declare-fun x2447 () Real)
(declare-fun x2198 () Bool)
(declare-fun x1747 (Real) Real)
(declare-fun x2599 () Bool)
(declare-fun x3010 () Bool)
(declare-fun x724 () Bool)
(declare-fun x674 () Real)
(declare-fun x25 (Real) Real)
(declare-fun x1078 () Bool)
(declare-fun x166 (Real) Real)
(declare-fun x2572 () Bool)
(declare-fun x478 () Bool)
(declare-fun x869 (Real) Real)
(declare-fun x307 () Bool)
(declare-fun x2331 () Bool)
(declare-fun x194 () Bool)
(declare-fun x408 () Bool)
(declare-fun x1017 () Real)
(declare-fun x797 (Real) Real)
(declare-fun x2464 () Bool)
(declare-fun x2522 () Bool)
(declare-fun x301 () Bool)
(declare-fun x2397 () Bool)
(declare-fun x2822 () Real)
(declare-fun x1514 () Real)
(declare-fun x2349 () Real)
(declare-fun x2968 () Bool)
(declare-fun x1727 () Real)
(declare-fun x2989 () Real)
(declare-fun x2881 () Bool)
(declare-fun x403 () Bool)
(declare-fun x509 () Real)
(declare-fun x2391 () Real)
(declare-fun x2606 () Bool)
(declare-fun x3172 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x951 () Real)
(declare-fun x3081 () Bool)
(declare-fun x2174 () Real)
(declare-fun x2767 () Bool)
(declare-fun x1098 () Real)
(declare-fun x1367 () Bool)
(declare-fun x2644 () Real)
(declare-fun x3179 () Bool)
(declare-fun x1599 () Bool)
(declare-fun x455 () Bool)
(declare-fun x1208 () Real)
(declare-fun x2324 () Bool)
(declare-fun x58 () Real)
(declare-fun x3067 () Bool)
(declare-fun x82 () Real)
(declare-fun x2140 (Real) Real)
(declare-fun x2873 () Bool)
(declare-fun x1012 () Real)
(declare-fun x2173 () Bool)
(declare-fun x1892 (Real) Real)
(declare-fun x1969 () Bool)
(declare-fun x4 () Bool)
(declare-fun x2817 () Real)
(declare-fun x2455 () Real)
(declare-fun x2930 () Bool)
(declare-fun x2403 () Real)
(declare-fun x2646 () Bool)
(declare-fun x2152 () Real)
(declare-fun x279 () Real)
(declare-fun x439 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x2135 () Bool)
(declare-fun x2687 () Real)
(declare-fun x1959 () Real)
(declare-fun x443 () Bool)
(declare-fun x2638 () Real)
(declare-fun x2018 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x2003 () Real)
(declare-fun x1864 () Bool)
(declare-fun x1697 () Real)
(declare-fun x63 () Real)
(declare-fun x348 () Bool)
(declare-fun x2459 () Real)
(declare-fun x44 () Bool)
(declare-fun x3062 () Real)
(declare-fun x1794 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x1303 () Real)
(declare-fun x721 () Bool)
(declare-fun x3166 () Real)
(declare-fun x360 () Real)
(declare-fun x491 () Real)
(declare-fun x1533 () Bool)
(declare-fun x734 () Bool)
(declare-fun x2596 () Real)
(declare-fun x2348 () Bool)
(declare-fun x629 () Real)
(declare-fun x1073 () Real)
(declare-fun x1956 () Real)
(declare-fun x1810 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x942 () Real)
(declare-fun x1472 () Real)
(declare-fun x1480 () Real)
(declare-fun x2701 () Real)
(declare-fun x143 () Bool)
(declare-fun x2001 () Real)
(declare-fun x2951 () Real)
(declare-fun x2914 () Bool)
(declare-fun x3035 () Real)
(declare-fun x1988 () Bool)
(declare-fun x826 () Real)
(declare-fun x658 (Real) Real)
(declare-fun x373 () Bool)
(declare-fun x2949 () Real)
(declare-fun x1600 () Bool)
(declare-fun x56 () Real)
(declare-fun x456 () Real)
(declare-fun x2086 () Real)
(declare-fun x2291 () Real)
(declare-fun x2038 () Bool)
(declare-fun x291 () Bool)
(declare-fun x2668 () Bool)
(declare-fun x2031 () Bool)
(declare-fun x1748 () Real)
(declare-fun x609 () Bool)
(declare-fun x1181 () Real)
(declare-fun x643 () Real)
(declare-fun x1621 () Bool)
(declare-fun x1658 () Real)
(declare-fun x624 () Real)
(declare-fun x429 () Bool)
(declare-fun x1945 () Real)
(declare-fun x749 () Real)
(declare-fun x1229 () Real)
(declare-fun x2412 () Bool)
(declare-fun x260 () Real)
(declare-fun x3082 () Bool)
(declare-fun x1468 () Real)
(declare-fun x1279 () Real)
(declare-fun x740 (Real) Real)
(declare-fun x3088 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x783 () Real)
(declare-fun x2814 () Real)
(declare-fun x564 () Real)
(declare-fun x347 () Real)
(declare-fun x2740 () Real)
(declare-fun x1596 () Real)
(declare-fun x954 () Bool)
(declare-fun x995 () Real)
(declare-fun x1632 () Real)
(declare-fun x354 (Real) Real)
(declare-fun x1911 () Real)
(declare-fun x1411 (Real) Real)
(declare-fun x1287 () Real)
(declare-fun x1409 () Real)
(declare-fun x1299 () Real)
(declare-fun x1450 () Real)
(declare-fun x1690 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x551 () Real)
(declare-fun x1311 () Real)
(declare-fun x2468 () Real)
(declare-fun x998 () Bool)
(declare-fun x2910 () Real)
(declare-fun x2842 (Real) Real)
(declare-fun x2597 () Real)
(declare-fun x364 () Bool)
(declare-fun x968 () Real)
(declare-fun x1157 (Real) Real)
(declare-fun x634 () Real)
(declare-fun x363 () Bool)
(declare-fun x1855 () Real)
(declare-fun x2590 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x1686 (Real) Real)
(declare-fun x454 () Bool)
(declare-fun x1326 (Real) Real)
(declare-fun x1964 () Real)
(declare-fun x3087 () Real)
(declare-fun x2662 () Bool)
(declare-fun x2495 (Real) Real)
(declare-fun x2327 () Real)
(declare-fun x552 () Bool)
(declare-fun x2712 () Real)
(declare-fun x1211 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x2781 () Real)
(declare-fun x2030 () Bool)
(declare-fun x1094 () Real)
(declare-fun x67 () Real)
(declare-fun x2280 () Bool)
(declare-fun x579 () Real)
(declare-fun x555 () Real)
(declare-fun x2363 () Real)
(declare-fun x294 () Real)
(declare-fun x1772 () Bool)
(declare-fun x1032 () Real)
(declare-fun x1273 () Bool)
(declare-fun x1511 () Real)
(declare-fun x2203 () Bool)
(declare-fun x386 (Real) Real)
(declare-fun x765 () Bool)
(declare-fun x523 (Real) Real)
(declare-fun x3137 () Real)
(declare-fun x1766 () Real)
(declare-fun x516 () Bool)
(declare-fun x2373 () Real)
(declare-fun x1927 () Real)
(declare-fun x333 () Bool)
(declare-fun x405 () Real)
(declare-fun x1097 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x90 (Real) Real)
(declare-fun x1200 () Real)
(declare-fun x3017 () Bool)
(declare-fun x2636 () Real)
(declare-fun x2323 () Real)
(declare-fun x648 () Real)
(declare-fun x2803 () Bool)
(declare-fun x21 () Real)
(declare-fun x688 () Real)
(declare-fun x3139 () Real)
(declare-fun x708 (Real) Real)
(declare-fun x2034 () Bool)
(declare-fun x2833 () Real)
(declare-fun x3128 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x985 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x2153 () Real)
(declare-fun x2470 () Bool)
(declare-fun x2762 () Real)
(declare-fun x2430 () Bool)
(declare-fun x903 () Bool)
(declare-fun x812 () Bool)
(declare-fun x1842 () Real)
(declare-fun x773 () Bool)
(declare-fun x2307 () Real)
(declare-fun x2179 () Bool)
(declare-fun x865 () Bool)
(declare-fun x2345 () Real)
(declare-fun x2371 (Real) Real)
(declare-fun x3093 (Real) Real)
(declare-fun x3123 () Real)
(declare-fun x2251 () Bool)
(declare-fun x1712 () Real)
(declare-fun x414 () Real)
(declare-fun x3118 () Real)
(declare-fun x3047 () Real)
(declare-fun x3061 () Bool)
(declare-fun x871 () Bool)
(declare-fun x1055 () Real)
(declare-fun x1455 () Bool)
(declare-fun x3009 () Real)
(declare-fun x700 () Real)
(declare-fun x2393 () Real)
(declare-fun x1464 () Bool)
(declare-fun x935 () Real)
(declare-fun x2467 () Bool)
(declare-fun x2912 () Bool)
(declare-fun x2229 () Bool)
(declare-fun x2502 () Real)
(declare-fun x419 () Bool)
(declare-fun x1030 () Real)
(declare-fun x1662 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x2313 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x1213 () Real)
(declare-fun x2825 () Bool)
(declare-fun x3048 () Bool)
(declare-fun x2829 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x1647 () Real)
(declare-fun x1003 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x241 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x669 () Real)
(declare-fun x1178 () Real)
(declare-fun x2794 () Bool)
(declare-fun x482 () Bool)
(declare-fun x2875 () Bool)
(declare-fun x3125 () Real)
(declare-fun x1147 () Real)
(declare-fun x2786 () Real)
(declare-fun x157 () Bool)
(declare-fun x2440 () Real)
(declare-fun x357 () Real)
(declare-fun x2129 () Bool)
(declare-fun x305 () Real)
(declare-fun x2664 () Real)
(declare-fun x249 () Bool)
(declare-fun x1990 () Real)
(declare-fun x11 () Bool)
(declare-fun x1776 () Bool)
(declare-fun x1909 () Bool)
(declare-fun x1663 () Real)
(declare-fun x2675 () Real)
(declare-fun x2411 (Real) Real)
(declare-fun x1660 () Bool)
(declare-fun x110 () Real)
(declare-fun x2193 () Real)
(declare-fun x244 () Bool)
(declare-fun x908 () Real)
(declare-fun x2876 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x2435 () Real)
(declare-fun x2205 () Bool)
(declare-fun x200 () Bool)
(declare-fun x2650 () Real)
(declare-fun x801 (Real) Real)
(declare-fun x1606 () Real)
(declare-fun x441 () Bool)
(declare-fun x1720 () Real)
(declare-fun x2148 () Real)
(declare-fun x1447 () Real)
(declare-fun x940 () Bool)
(declare-fun x2629 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x2023 () Real)
(declare-fun x1258 () Real)
(declare-fun x1329 () Bool)
(declare-fun x2155 () Bool)
(declare-fun x308 () Real)
(declare-fun x2314 () Real)
(declare-fun x2943 () Real)
(declare-fun x2126 () Bool)
(declare-fun x1930 () Bool)
(declare-fun x1151 () Real)
(declare-fun x1506 () Real)
(declare-fun x2553 () Real)
(declare-fun x3005 () Real)
(declare-fun x2878 () Real)
(declare-fun x2823 () Bool)
(declare-fun x932 () Bool)
(declare-fun x3015 (Real) Real)
(declare-fun x651 () Real)
(declare-fun x2141 () Bool)
(declare-fun x566 () Real)
(declare-fun x122 () Bool)
(declare-fun x2359 () Bool)
(declare-fun x2648 () Bool)
(declare-fun x3146 () Bool)
(declare-fun x2375 () Bool)
(declare-fun x1644 () Real)
(declare-fun x2078 () Real)
(declare-fun x1929 (Real) Real)
(declare-fun x1142 () Real)
(declare-fun x1616 () Real)
(declare-fun x1313 () Real)
(declare-fun x533 () Real)
(declare-fun x548 () Real)
(declare-fun x2838 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x573 () Real)
(declare-fun x1592 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x839 (Real) Real)
(declare-fun x2591 () Real)
(declare-fun x1072 () Bool)
(declare-fun x2080 () Real)
(declare-fun x273 () Bool)
(declare-fun x1648 () Real)
(declare-fun x2318 () Real)
(declare-fun x2024 (Real) Real)
(declare-fun x1091 () Real)
(declare-fun x134 () Real)
(declare-fun x141 () Bool)
(declare-fun x959 () Real)
(declare-fun x2544 () Bool)
(declare-fun x2815 () Bool)
(declare-fun x2306 () Real)
(declare-fun x1670 () Bool)
(declare-fun x687 () Bool)
(declare-fun x266 () Real)
(declare-fun x2918 () Real)
(declare-fun x330 () Bool)
(declare-fun x2061 () Real)
(declare-fun x957 () Real)
(declare-fun x88 () Bool)
(declare-fun x2759 (Real) Real)
(declare-fun x1885 () Bool)
(declare-fun x61 () Bool)
(declare-fun x2029 () Bool)
(declare-fun x309 () Bool)
(declare-fun x502 () Bool)
(declare-fun x862 () Bool)
(declare-fun x2857 () Bool)
(declare-fun x292 () Real)
(declare-fun x2789 () Bool)
(declare-fun x2732 () Real)
(declare-fun x2046 () Bool)
(declare-fun x182 () Real)
(declare-fun x1199 () Real)
(declare-fun x2068 () Real)
(declare-fun x1138 () Real)
(declare-fun x3170 () Real)
(declare-fun x142 () Bool)
(declare-fun x2653 () Real)
(declare-fun x118 () Bool)
(declare-fun x2103 () Bool)
(declare-fun x1096 () Real)
(declare-fun x113 () Bool)
(declare-fun x1315 () Real)
(declare-fun x274 () Bool)
(declare-fun x2271 (Real) Real)
(declare-fun x2353 () Real)
(declare-fun x615 () Real)
(declare-fun x2969 (Real) Real)
(declare-fun x1007 () Bool)
(declare-fun x3045 () Bool)
(declare-fun x2954 () Bool)
(declare-fun x1924 () Bool)
(declare-fun x3001 () Real)
(declare-fun x1813 () Bool)
(declare-fun x1868 () Real)
(declare-fun x1232 () Bool)
(declare-fun x864 () Real)
(declare-fun x2428 () Real)
(declare-fun x483 () Bool)
(declare-fun x3102 () Bool)
(declare-fun x1275 () Real)
(declare-fun x412 () Bool)
(declare-fun x2196 () Bool)
(declare-fun x327 () Bool)
(declare-fun x2752 () Real)
(declare-fun x2723 () Real)
(declare-fun x999 () Bool)
(declare-fun x459 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x811 () Real)
(declare-fun x1127 () Bool)
(declare-fun x3181 () Real)
(declare-fun x2913 () Bool)
(declare-fun x3178 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x748 (Real) Real)
(declare-fun x2296 () Real)
(declare-fun x2329 () Bool)
(declare-fun x531 () Bool)
(declare-fun x1418 () Real)
(declare-fun x3038 () Real)
(declare-fun x2114 () Bool)
(declare-fun x473 () Bool)
(declare-fun x1396 () Real)
(declare-fun x2647 () Real)
(declare-fun x2045 (Real) Real)
(declare-fun x2735 () Real)
(declare-fun x3014 () Bool)
(declare-fun x3104 () Bool)
(declare-fun x462 () Real)
(declare-fun x3131 () Real)
(declare-fun x281 () Bool)
(declare-fun x2089 () Real)
(declare-fun x92 () Real)
(declare-fun x1040 () Bool)
(declare-fun x1089 () Real)
(declare-fun x2938 () Bool)
(declare-fun x2995 () Real)
(declare-fun x259 () Real)
(declare-fun x70 () Bool)
(declare-fun x848 () Real)
(declare-fun x1049 () Bool)
(declare-fun x216 () Bool)
(declare-fun x480 () Real)
(declare-fun x2520 () Bool)
(declare-fun x3013 () Bool)
(declare-fun x2461 () Real)
(declare-fun x1708 () Bool)
(declare-fun x1438 () Real)
(declare-fun x2392 () Bool)
(declare-fun x681 () Bool)
(declare-fun x2972 () Bool)
(declare-fun x1799 () Real)
(declare-fun x468 () Real)
(declare-fun x32 () Bool)
(declare-fun x2840 () Real)
(declare-fun x665 () Real)
(declare-fun x2256 () Real)
(declare-fun x2408 () Real)
(declare-fun x2284 () Bool)
(declare-fun x35 () Real)
(declare-fun x1914 () Real)
(declare-fun x641 () Bool)
(declare-fun x2125 () Bool)
(declare-fun x1743 () Real)
(declare-fun x1529 () Bool)
(declare-fun x831 (Real) Real)
(declare-fun x1824 () Real)
(declare-fun x1075 () Real)
(declare-fun x2691 () Bool)
(declare-fun x2503 () Real)
(declare-fun x2483 () Real)
(declare-fun x1108 () Real)
(declare-fun x2620 () Bool)
(declare-fun x946 () Real)
(declare-fun x1482 () Real)
(declare-fun x2902 () Real)
(declare-fun x1921 () Real)
(declare-fun x1129 () Real)
(declare-fun x2999 () Bool)
(declare-fun x2733 () Bool)
(declare-fun x2673 () Real)
(declare-fun x222 () Real)
(declare-fun x2305 () Bool)
(declare-fun x202 () Real)
(declare-fun x780 () Bool)
(declare-fun x2756 () Real)
(declare-fun x2685 () Real)
(declare-fun x553 () Real)
(declare-fun x1251 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x73 () Bool)
(declare-fun x3103 () Real)
(declare-fun x366 () Bool)
(declare-fun x484 () Real)
(declare-fun x1361 () Real)
(declare-fun x1264 () Bool)
(declare-fun x476 () Bool)
(declare-fun x1280 () Real)
(declare-fun x851 () Real)
(declare-fun x2524 () Bool)
(declare-fun x1946 () Real)
(declare-fun x2530 () Bool)
(declare-fun x2167 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x2285 () Real)
(declare-fun x2445 () Real)
(declare-fun x1759 () Bool)
(declare-fun x556 () Bool)
(declare-fun x858 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x2885 () Bool)
(declare-fun x2665 () Real)
(declare-fun x1902 () Real)
(declare-fun x827 () Real)
(declare-fun x302 (Real) Real)
(declare-fun x3168 () Bool)
(declare-fun x2019 () Real)
(declare-fun x2157 () Bool)
(declare-fun x2394 () Real)
(declare-fun x2013 () Real)
(declare-fun x55 () Real)
(declare-fun x1582 () Bool)
(declare-fun x715 () Bool)
(declare-fun x1498 () Real)
(declare-fun x3109 () Bool)
(declare-fun x2841 () Bool)
(declare-fun x2232 () Real)
(declare-fun x3147 () Bool)
(declare-fun x1492 (Real) Real)
(declare-fun x195 () Bool)
(declare-fun x1067 () Real)
(declare-fun x2820 () Bool)
(declare-fun x16 () Real)
(declare-fun x2960 () Bool)
(declare-fun x239 () Real)
(declare-fun x2118 () Bool)
(declare-fun x40 () Real)
(declare-fun x633 () Real)
(declare-fun x212 () Bool)
(declare-fun x2507 () Bool)
(declare-fun x1754 () Real)
(declare-fun x430 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x2465 () Bool)
(declare-fun x1897 () Real)
(declare-fun x1084 () Bool)
(declare-fun x3110 (Real) Real)
(declare-fun x739 () Bool)
(declare-fun x2370 () Real)
(declare-fun x1139 () Real)
(declare-fun x2396 () Bool)
(declare-fun x2966 () Bool)
(declare-fun x679 () Real)
(declare-fun x2898 () Real)
(declare-fun x626 (Real) Real)
(declare-fun x240 () Bool)
(declare-fun x2523 () Bool)
(declare-fun x151 () Real)
(declare-fun x2645 () Real)
(declare-fun x1765 () Real)
(declare-fun x1952 () Real)
(declare-fun x2295 () Real)
(declare-fun x2642 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x1390 (Real) Real)
(declare-fun x745 () Bool)
(declare-fun x1781 () Bool)
(declare-fun x1965 () Real)
(declare-fun x2536 () Bool)
(declare-fun x2423 (Real) Real)
(declare-fun x1399 () Bool)
(declare-fun x1705 () Bool)
(declare-fun x2466 () Bool)
(declare-fun x870 () Bool)
(declare-fun x1489 () Real)
(declare-fun x1117 () Real)
(declare-fun x132 () Bool)
(declare-fun x3039 () Real)
(declare-fun x1316 () Bool)
(declare-fun x824 () Real)
(declare-fun x532 () Real)
(declare-fun x1192 () Bool)
(declare-fun x1995 () Real)
(declare-fun x1711 () Bool)
(declare-fun x426 () Bool)
(declare-fun x1645 () Real)
(declare-fun x1419 () Bool)
(declare-fun x561 () Bool)
(declare-fun x2967 () Real)
(declare-fun x2344 () Real)
(declare-fun x3130 () Bool)
(declare-fun x475 () Bool)
(declare-fun x2390 (Real) Real)
(declare-fun x203 () Real)
(declare-fun x2431 () Real)
(declare-fun x2619 () Bool)
(declare-fun x1673 (Real) Real)
(declare-fun x722 () Real)
(declare-fun x2782 () Bool)
(declare-fun x2802 (Real) Real)
(declare-fun x1345 () Real)
(declare-fun x1074 () Real)
(declare-fun x3037 () Real)
(declare-fun x2706 () Real)
(declare-fun x929 () Real)
(declare-fun x2852 () Real)
(declare-fun x2053 () Real)
(declare-fun x3000 () Real)
(declare-fun x1340 () Real)
(declare-fun x2718 () Bool)
(declare-fun x254 () Real)
(declare-fun x1849 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x13 () Bool)
(declare-fun x3068 () Bool)
(declare-fun x964 () Bool)
(declare-fun x3083 () Bool)
(declare-fun x1205 () Bool)
(declare-fun x2402 () Real)
(declare-fun x2669 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x9 () Real)
(declare-fun x2376 () Bool)
(declare-fun x1650 (Real) Real)
(declare-fun x1217 () Bool)
(declare-fun x1386 () Real)
(declare-fun x1288 () Bool)
(declare-fun x849 () Real)
(declare-fun x816 () Real)
(declare-fun x958 () Real)
(declare-fun x2427 () Real)
(declare-fun x2631 () Real)
(declare-fun x3136 () Bool)
(declare-fun x508 () Real)
(declare-fun x1416 () Bool)
(declare-fun x833 () Bool)
(declare-fun x1947 () Real)
(declare-fun x1768 () Bool)
(declare-fun x906 () Real)
(declare-fun x2185 () Bool)
(declare-fun x2534 () Bool)
(declare-fun x2548 () Bool)
(declare-fun x2382 () Bool)
(declare-fun x3020 () Bool)
(declare-fun x2496 () Real)
(declare-fun x897 () Real)
(declare-fun x1656 () Real)
(declare-fun x591 () Bool)
(declare-fun x1835 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x980 () Real)
(declare-fun x246 () Real)
(declare-fun x1669 () Bool)
(declare-fun x2448 () Bool)
(declare-fun x704 () Real)
(declare-fun x786 () Real)
(declare-fun x1125 () Bool)
(declare-fun x2239 () Real)
(declare-fun x3028 () Real)
(declare-fun x2166 () Bool)
(declare-fun x2215 () Real)
(declare-fun x72 () Real)
(declare-fun x1591 () Real)
(declare-fun x605 () Bool)
(declare-fun x727 () Bool)
(declare-fun x675 () Bool)
(declare-fun x2332 () Real)
(declare-fun x2607 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x1365 () Real)
(declare-fun x639 () Real)
(declare-fun x880 () Real)
(declare-fun x393 () Bool)
(declare-fun x41 () Bool)
(declare-fun x1278 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x1716 () Real)
(declare-fun x1218 () Real)
(declare-fun x3154 () Bool)
(declare-fun x2667 () Real)
(declare-fun x485 () Real)
(declare-fun x1485 () Real)
(declare-fun x144 () Bool)
(declare-fun x2433 () Real)
(declare-fun x2615 () Real)
(declare-fun x2133 () Real)
(declare-fun x2230 () Real)
(declare-fun x3173 () Real)
(declare-fun x711 () Real)
(declare-fun x271 () Bool)
(declare-fun x206 () Bool)
(declare-fun x147 () Real)
(declare-fun x3072 () Bool)
(declare-fun x1342 () Real)
(declare-fun x2743 () Real)
(declare-fun x536 (Real) Real)
(declare-fun x2923 () Bool)
(declare-fun x2264 () Real)
(declare-fun x225 () Real)
(declare-fun x928 () Bool)
(declare-fun x2192 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x20 () Real)
(declare-fun x774 () Bool)
(declare-fun x1478 () Real)
(declare-fun x3043 () Real)
(declare-fun x2493 () Real)
(declare-fun x124 () Bool)
(declare-fun x3160 () Real)
(declare-fun x1238 () Real)
(declare-fun x635 () Bool)
(declare-fun x1349 () Bool)
(declare-fun x2043 () Real)
(declare-fun x2633 (Real) Real)
(declare-fun x1949 () Real)
(declare-fun x1745 () Bool)
(declare-fun x2827 () Real)
(declare-fun x2147 () Real)
(declare-fun x691 (Real) Real)
(declare-fun x1426 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x83 () Bool)
(declare-fun x2884 () Real)
(declare-fun x1338 () Real)
(declare-fun x2763 () Real)
(declare-fun x2556 () Real)
(declare-fun x2736 () Bool)
(declare-fun x982 () Real)
(declare-fun x512 () Real)
(declare-fun x852 () Bool)
(declare-fun x2813 () Bool)
(declare-fun x2888 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x1388 () Real)
(declare-fun x1808 () Real)
(declare-fun x769 () Bool)
(declare-fun x374 () Real)
(declare-fun x1197 () Real)
(declare-fun x996 () Bool)
(declare-fun x423 () Bool)
(declare-fun x233 () Bool)
(declare-fun x1763 () Real)
(declare-fun x1859 () Real)
(declare-fun x1687 () Real)
(declare-fun x1126 () Bool)
(declare-fun x2679 () Bool)
(declare-fun x1284 () Real)
(declare-fun x2907 (Real) Real)
(declare-fun x1528 () Bool)
(declare-fun x2360 () Real)
(declare-fun x418 (Real) Real)
(declare-fun x1919 () Real)
(declare-fun x608 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x2630 () Real)
(declare-fun x223 () Real)
(declare-fun x623 (Real) Real)
(declare-fun x121 () Bool)
(declare-fun x399 () Bool)
(declare-fun x969 () Bool)
(declare-fun x2302 () Real)
(declare-fun x2004 () Bool)
(declare-fun x315 () Real)
(declare-fun x2627 () Real)
(declare-fun x1784 () Bool)
(declare-fun x2372 () Real)
(declare-fun x3064 () Real)
(declare-fun x3149 () Real)
(declare-fun x1180 (Real) Real)
(declare-fun x1459 () Bool)
(declare-fun x1583 () Bool)
(declare-fun x432 () Bool)
(declare-fun x197 () Real)
(declare-fun x1610 (Real) Real)
(declare-fun x1029 () Real)
(declare-fun x2401 () Bool)
(declare-fun x2641 () Bool)
(declare-fun x2750 () Real)
(declare-fun x2472 () Real)
(declare-fun x1699 () Bool)
(declare-fun x2311 () Bool)
(declare-fun x2337 () Bool)
(declare-fun x451 () Bool)
(declare-fun x1505 () Bool)
(declare-fun x2927 () Real)
(declare-fun x2241 () Real)
(declare-fun x1111 (Real Real) Real)
(declare-fun x562 () Bool)
(declare-fun x1901 () Real)
(declare-fun x1521 () Real)
(declare-fun x1563 () Bool)
(declare-fun x2557 () Real)
(declare-fun x245 () Bool)
(declare-fun x395 () Bool)
(declare-fun x2739 () Bool)
(declare-fun x2267 () Real)
(declare-fun x1324 () Real)
(declare-fun x1653 (Real) Real)
(declare-fun x1070 () Real)
(declare-fun x278 () Bool)
(declare-fun x2151 () Bool)
(declare-fun x678 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x177 () Real)
(declare-fun x252 () Real)
(declare-fun x2655 () Real)
(declare-fun x685 () Bool)
(declare-fun x2384 () Real)
(declare-fun x1171 () Bool)
(declare-fun x707 (Real) Real)
(declare-fun x2014 () Real)
(declare-fun x1986 () Real)
(declare-fun x2310 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x2580 () Bool)
(declare-fun x1294 () Real)
(declare-fun x1552 () Bool)
(declare-fun x1790 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x798 () Bool)
(declare-fun x702 () Real)
(declare-fun x2144 () Bool)
(declare-fun x217 () Bool)
(declare-fun x2317 (Real) Real)
(declare-fun x682 () Real)
(declare-fun x3063 () Bool)
(declare-fun x686 () Real)
(declare-fun x841 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x2150 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x437 () Real)
(declare-fun x371 () Bool)
(declare-fun x2159 () Real)
(declare-fun x1614 () Bool)
(declare-fun x2614 () Bool)
(declare-fun x2618 () Real)
(declare-fun x3120 () Bool)
(declare-fun x2797 () Real)
(declare-fun x823 () Real)
(declare-fun x689 () Bool)
(declare-fun x2977 () Bool)
(declare-fun x2850 () Real)
(declare-fun x1432 () Real)
(declare-fun x1160 () Bool)
(declare-fun x3124 () Bool)
(declare-fun x2234 () Real)
(declare-fun x1466 () Real)
(declare-fun x2710 () Real)
(declare-fun x3119 () Bool)
(declare-fun x979 () Real)
(declare-fun x621 () Bool)
(declare-fun x2791 () Bool)
(declare-fun x690 () Real)
(declare-fun x544 () Real)
(declare-fun x2319 () Bool)
(declare-fun x2121 () Real)
(declare-fun x140 () Bool)
(declare-fun x2993 () Bool)
(declare-fun x289 () Bool)
(declare-fun x372 () Real)
(declare-fun x1025 (Real) Real)
(declare-fun x1874 () Bool)
(declare-fun x3085 () Bool)
(declare-fun x2149 () Real)
(declare-fun x1085 () Bool)
(declare-fun x303 () Real)
(declare-fun x2626 (Real) Real)
(declare-fun x1816 () Bool)
(declare-fun x1913 () Real)
(declare-fun x2567 () Real)
(declare-fun x1622 () Real)
(declare-fun x1134 () Bool)
(declare-fun x3184 () Bool)
(declare-fun x79 () Bool)
(declare-fun x2498 () Real)
(declare-fun x2674 () Bool)
(declare-fun x2761 () Bool)
(declare-fun x2588 () Real)
(declare-fun x2531 () Bool)
(declare-fun x2941 () Bool)
(declare-fun x1800 () Bool)
(declare-fun x1588 () Bool)
(declare-fun x1740 () Real)
(declare-fun x2541 () Real)
(declare-fun x2067 () Real)
(declare-fun x2874 () Real)
(declare-fun x2860 () Bool)
(declare-fun x228 () Real)
(declare-fun x2460 () Real)
(declare-fun x2769 () Real)
(declare-fun x1477 () Real)
(declare-fun x135 () Bool)
(declare-fun x2257 () Real)
(declare-fun x3126 () Bool)
(declare-fun x1339 () Real)
(declare-fun x1223 () Bool)
(declare-fun x421 () Real)
(declare-fun x8 () Bool)
(declare-fun x2458 () Real)
(declare-fun x1535 () Bool)
(declare-fun x133 () Real)
(declare-fun x1677 (Real) Real)
(declare-fun x208 () Real)
(declare-fun x1651 () Real)
(declare-fun x825 () Bool)
(declare-fun x1300 () Real)
(declare-fun x1115 () Bool)
(declare-fun x2210 () Bool)
(declare-fun x339 () Real)
(declare-fun x2225 () Real)
(declare-fun x267 () Real)
(declare-fun x2079 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x229 () Real)
(declare-fun x1493 () Real)
(declare-fun x1821 () Bool)
(declare-fun x131 () Bool)
(declare-fun x2724 () Bool)
(declare-fun x625 () Bool)
(declare-fun x411 () Real)
(declare-fun x1060 () Real)
(declare-fun x487 () Real)
(declare-fun x290 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x1355 () Real)
(declare-fun x2639 () Bool)
(declare-fun x896 () Bool)
(declare-fun x1513 () Real)
(declare-fun x589 () Bool)
(declare-fun x3135 () Real)
(declare-fun x324 () Bool)
(declare-fun x2537 () Bool)
(declare-fun x2074 () Bool)
(declare-fun x1984 () Real)
(declare-fun x1269 () Real)
(declare-fun x376 () Bool)
(declare-fun x3055 () Bool)
(declare-fun x404 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x12 () Bool)
(declare-fun x1693 () Bool)
(declare-fun x3121 () Bool)
(declare-fun x3140 () Bool)
(declare-fun x71 () Real)
(declare-fun x1844 () Bool)
(declare-fun x346 () Real)
(declare-fun x796 () Real)
(declare-fun x2260 () Bool)
(declare-fun x51 () Bool)
(declare-fun x2060 () Real)
(declare-fun x1783 () Bool)
(declare-fun x863 () Bool)
(declare-fun x1630 () Bool)
(declare-fun x115 (Real) Real)
(declare-fun x2784 () Bool)
(declare-fun x1140 () Real)
(declare-fun x1164 () Real)
(declare-fun x2308 () Bool)
(declare-fun x2605 () Bool)
(declare-fun x2805 () Real)
(declare-fun x116 () Bool)
(declare-fun x936 () Bool)
(declare-fun x375 () Bool)
(declare-fun x2347 () Bool)
(declare-fun x2418 () Bool)
(declare-fun x921 () Bool)
(declare-fun x1162 (Real) Real)
(declare-fun x3 () Real)
(declare-fun x510 (Real) Real)
(declare-fun x2666 () Bool)
(declare-fun x415 () Real)
(declare-fun x329 () Real)
(declare-fun x2634 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x574 () Real)
(declare-fun x3177 () Real)
(declare-fun x1246 () Real)
(declare-fun x1104 () Real)
(declare-fun x474 () Real)
(declare-fun x438 () Real)
(declare-fun x1910 () Real)
(declare-fun x2220 () Real)
(declare-fun x742 () Bool)
(declare-fun x2700 () Bool)
(declare-fun x1194 () Real)
(declare-fun x3066 () Real)
(declare-fun x54 () Bool)
(declare-fun x152 () Bool)
(declare-fun x111 () Bool)
(declare-fun x1366 () Real)
(declare-fun x2164 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x888 () Real)
(declare-fun x2208 () Bool)
(declare-fun x1307 () Real)
(declare-fun x1119 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x2684 () Real)
(declare-fun x2722 () Bool)
(declare-fun x822 () Real)
(declare-fun x2062 () Bool)
(declare-fun x2145 () Real)
(declare-fun x1857 () Bool)
(declare-fun x102 () Real)
(declare-fun x1066 () Real)
(declare-fun x2082 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x7 () Bool)
(declare-fun x2244 () Bool)
(declare-fun x1216 (Real) Real)
(declare-fun x753 () Real)
(declare-fun x2864 () Bool)
(declare-fun x649 () Bool)
(declare-fun x2870 () Bool)
(declare-fun x1954 () Real)
(declare-fun x3114 () Bool)
(declare-fun x2339 () Bool)
(declare-fun x1016 () Real)
(declare-fun x2096 () Bool)
(declare-fun x759 () Real)
(declare-fun x1932 () Bool)
(declare-fun x2107 () Real)
(declare-fun x2533 () Bool)
(declare-fun x2237 () Bool)
(declare-fun x3086 () Real)
(declare-fun x127 () Real)
(declare-fun x2134 () Bool)
(declare-fun x277 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x3107 () Bool)
(declare-fun x2238 () Bool)
(declare-fun x2708 () Real)
(declare-fun x2527 () Real)
(declare-fun x1757 () Real)
(declare-fun x2206 (Real) Real)
(declare-fun x2946 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x900 () Real)
(declare-fun x370 () Bool)
(declare-fun x1847 () Real)
(declare-fun x2315 () Real)
(declare-fun x1168 () Bool)
(declare-fun x1176 () Real)
(declare-fun x2292 () Real)
(declare-fun x2753 () Bool)
(declare-fun x847 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x2549 () Bool)
(declare-fun x1811 () Bool)
(declare-fun x1828 () Bool)
(declare-fun x2543 () Bool)
(declare-fun x1786 () Bool)
(declare-fun x2734 () Real)
(declare-fun x2625 (Real) Real)
(declare-fun x1801 () Bool)
(declare-fun x973 () Bool)
(declare-fun x1559 () Real)
(declare-fun x146 () Bool)
(declare-fun x310 () Bool)
(declare-fun x2071 () Bool)
(declare-fun x664 () Real)
(declare-fun x2555 () Real)
(declare-fun x1295 () Bool)
(declare-fun x2374 () Real)
(declare-fun x280 () Real)
(declare-fun x2207 () Bool)
(declare-fun x550 () Bool)
(declare-fun x2355 () Real)
(declare-fun x129 (Real) Real)
(declare-fun x1195 () Real)
(declare-fun x1863 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x2978 () Real)
(declare-fun x235 () Real)
(declare-fun x1382 () Real)
(declare-fun x1395 () Real)
(declare-fun x159 () Bool)
(declare-fun x1328 () Real)
(declare-fun x1840 () Bool)
(declare-fun x2643 () Bool)
(declare-fun x2069 () Bool)
(declare-fun x1004 () Real)
(declare-fun x1428 () Real)
(declare-fun x1397 () Bool)
(declare-fun x960 () Bool)
(declare-fun x937 () Bool)
(declare-fun x466 () Real)
(declare-fun x1249 () Bool)
(declare-fun x2746 () Bool)
(declare-fun x2760 () Real)
(declare-fun x1243 () Real)
(declare-fun x1028 () Bool)
(declare-fun x2699 () Real)
(declare-fun x805 () Real)
(declare-fun x285 () Bool)
(declare-fun x1375 () Real)
(declare-fun x1021 () Bool)
(declare-fun x543 () Bool)
(declare-fun x603 () Bool)
(declare-fun x356 () Real)
(declare-fun x1951 () Real)
(declare-fun x1659 () Bool)
(declare-fun x1005 () Real)
(declare-fun x103 () Real)
(declare-fun x857 () Real)
(declare-fun x2539 () Real)
(declare-fun x2871 () Real)
(declare-fun x1462 () Bool)
(declare-fun x1446 () Real)
(declare-fun x1791 () Bool)
(declare-fun x927 (Real) Real)
(declare-fun x2072 () Bool)
(declare-fun x2081 () Real)
(declare-fun x383 (Real) Real)
(declare-fun x528 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x2558 () Bool)
(declare-fun x1710 () Bool)
(declare-fun x1043 () Real)
(declare-fun x1076 () Bool)
(declare-fun x2828 () Bool)
(declare-fun x945 () Bool)
(declare-fun x204 () Real)
(declare-fun x828 () Real)
(declare-fun x2973 () Real)
(declare-fun x2748 () Real)
(declare-fun x1657 () Bool)
(declare-fun x2774 () Bool)
(declare-fun x2772 () Real)
(declare-fun x725 () Bool)
(declare-fun x2055 () Real)
(declare-fun x1006 () Bool)
(declare-fun x2171 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x606 () Real)
(declare-fun x803 () Bool)
(declare-fun x2808 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x930 () Real)
(declare-fun x520 () Real)
(declare-fun x1703 () Bool)
(declare-fun x2957 () Real)
(declare-fun x145 () Real)
(declare-fun x1961 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x2901 () Real)
(declare-fun x2111 () Bool)
(declare-fun x156 () Real)
(declare-fun x2982 () Real)
(declare-fun x747 () Bool)
(declare-fun x2766 () Bool)
(declare-fun x2925 () Bool)
(declare-fun x1682 () Bool)
(declare-fun x2116 (Real Real) Real)
(declare-fun x1202 () Real)
(declare-fun x2281 () Bool)
(declare-fun x3095 () Bool)
(declare-fun x2099 () Bool)
(declare-fun x384 () Real)
(declare-fun x2649 () Bool)
(declare-fun x2413 () Real)
(declare-fun x2711 () Real)
(declare-fun x2565 () Bool)
(declare-fun x1128 () Real)
(declare-fun x2186 () Real)
(declare-fun x2604 () Bool)
(declare-fun x2785 () Real)
(declare-fun x1568 () Real)
(declare-fun x2077 () Real)
(declare-fun x2521 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x2040 () Real)
(declare-fun x2047 () Real)
(declare-fun x1978 () Real)
(declare-fun x1368 () Real)
(declare-fun x955 () Real)
(declare-fun x258 () Bool)
(declare-fun x2921 () Bool)
(declare-fun x2566 () Real)
(declare-fun x1730 () Real)
(declare-fun x2449 () Real)
(declare-fun x1239 () Real)
(declare-fun x1422 () Real)
(declare-fun x101 () Bool)
(declare-fun x493 () Bool)
(declare-fun x962 () Bool)
(declare-fun x2952 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x883 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x306 () Real)
(declare-fun x316 () Real)
(declare-fun x66 () Bool)
(declare-fun x1916 () Real)
(declare-fun x2178 () Bool)
(declare-fun x2602 () Bool)
(declare-fun x1102 (Real) Real)
(declare-fun x2142 () Bool)
(declare-fun x5 () Real)
(declare-fun x2911 (Real) Real)
(declare-fun x391 () Real)
(declare-fun x1352 () Real)
(declare-fun x2689 () Bool)
(declare-fun x2366 () Bool)
(declare-fun x1398 () Real)
(declare-fun x974 () Bool)
(declare-fun x893 () Real)
(declare-fun x612 () Real)
(declare-fun x2640 () Bool)
(declare-fun x2818 () Real)
(declare-fun x3034 () Real)
(declare-fun x2672 () Real)
(declare-fun x800 () Real)
(declare-fun x2928 () Real)
(declare-fun x3023 (Real Real) Real)
(declare-fun x2351 () Real)
(declare-fun x1210 () Real)
(declare-fun x1106 () Real)
(declare-fun x2861 () Real)
(declare-fun x850 () Real)
(declare-fun x23 () Bool)
(declare-fun x1381 (Real) Real)
(declare-fun x2176 (Real) Real)
(declare-fun x505 () Bool)
(declare-fun x760 () Real)
(declare-fun x2658 () Real)
(declare-fun x62 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x104 () Real)
(declare-fun x2076 () Real)
(declare-fun x1293 () Bool)
(declare-fun x1002 (Real) Real)
(declare-fun x436 () Real)
(declare-fun x17 () Real)
(declare-fun x2414 () Real)
(declare-fun x1050 () Real)
(declare-fun x594 () Bool)
(declare-fun x653 () Bool)
(declare-fun x300 () Bool)
(declare-fun x836 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x789 () Real)
(declare-fun x2554 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x2742 () Real)
(declare-fun x2252 (Real) Real)
(declare-fun x341 () Bool)
(declare-fun x3070 () Real)
(declare-fun x895 () Real)
(declare-fun x1836 () Real)
(declare-fun x1101 () Bool)
(declare-fun x1888 () Bool)
(declare-fun x692 () Real)
(declare-fun x2283 () Real)
(declare-fun x313 () Bool)
(declare-fun x1392 () Real)
(declare-fun x450 () Real)
(declare-fun x924 () Bool)
(declare-fun x188 () Real)
(declare-fun x352 () Real)
(declare-fun x677 () Real)
(declare-fun x2415 () Bool)
(declare-fun x2849 () Real)
(declare-fun x710 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x126 () Real)
(declare-fun x2443 () Real)
(declare-fun x1183 () Real)
(declare-fun x272 () Real)
(declare-fun x97 () Real)
(declare-fun x618 () Real)
(declare-fun x584 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x470 () Bool)
(declare-fun x2738 (Real) Real)
(declare-fun x2336 () Real)
(declare-fun x1826 (Real) Real)
(declare-fun x3091 () Bool)
(declare-fun x262 () Bool)
(declare-fun x2288 () Bool)
(declare-fun x2387 () Bool)
(declare-fun x2562 () Real)
(declare-fun x1113 (Real) Real)
(declare-fun x2670 () Real)
(declare-fun x1881 () Bool)
(declare-fun x3018 () Real)
(declare-fun x630 () Real)
(declare-fun x1737 () Bool)
(declare-fun x323 () Bool)
(declare-fun x514 () Real)
(declare-fun x2856 () Bool)
(declare-fun x3151 () Real)
(declare-fun x666 () Real)
(declare-fun x99 () Bool)
(declare-fun x755 () Bool)
(declare-fun x495 () Bool)
(declare-fun x328 () Real)
(declare-fun x572 () Bool)
(declare-fun x899 () Real)
(declare-fun x1595 (Real) Real)
(declare-fun x2600 () Real)
(declare-fun x2720 () Bool)
(declare-fun x2637 () Real)
(declare-fun x500 () Real)
(declare-fun x2007 () Real)
(declare-fun x2765 () Bool)
(declare-fun x837 () Real)
(declare-fun x2992 () Bool)
(declare-fun x2846 () Bool)
(declare-fun x992 () Real)
(declare-fun x2892 () Bool)
(declare-fun x941 () Real)
(declare-fun x64 () Bool)
(declare-fun x2276 () Real)
(declare-fun x230 (Real) Real)
(declare-fun x2021 () Real)
(declare-fun x2162 () Bool)
(declare-fun x3040 () Real)
(declare-fun x1158 () Bool)
(declare-fun x93 (Real) Real)
(declare-fun x1882 () Real)
(declare-fun x744 () Bool)
(declare-fun x3175 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x1837 () Real)
(declare-fun x1805 () Bool)
(declare-fun x2130 () Bool)
(declare-fun x1554 () Real)
(declare-fun x994 () Real)
(declare-fun x1963 () Real)
(declare-fun x2286 () Real)
(declare-fun x2671 () Real)
(declare-fun x2792 () Bool)
(declare-fun x549 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x961 () Real)
(declare-fun x713 () Bool)
(declare-fun x1806 () Real)
(declare-fun x186 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x263 () Bool)
(declare-fun x3059 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x647 () Real)
(declare-fun x2404 () Real)
(declare-fun x2830 (Real) Real)
(declare-fun x2246 () Bool)
(declare-fun x787 () Real)
(declare-fun x2146 () Bool)
(declare-fun x507 () Bool)
(declare-fun x387 () Bool)
(declare-fun x2083 (Real) Real)
(declare-fun x2904 () Bool)
(declare-fun x732 () Real)
(declare-fun x2959 () Real)
(declare-fun x2037 () Bool)
(declare-fun x1356 () Real)
(declare-fun x2250 () Real)
(declare-fun x2480 (Real) Real)
(declare-fun x1724 () Bool)
(declare-fun x2161 () Real)
(declare-fun x1979 () Real)
(declare-fun x1744 () Real)
(declare-fun x1377 () Bool)
(declare-fun x546 () Real)
(declare-fun x1966 () Bool)
(declare-fun x1845 () Real)
(declare-fun x3113 (Real) Real)
(declare-fun x1283 () Real)
(declare-fun x431 () Bool)
(declare-fun x910 () Bool)
(declare-fun x907 () Bool)
(declare-fun x1233 () Real)
(declare-fun x764 () Real)
(declare-fun x1380 (Real) Real)
(declare-fun x1412 () Real)
(declare-fun x902 () Real)
(declare-fun x2446 () Real)
(declare-fun x2680 () Bool)
(declare-fun x978 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x3029 () Real)
(declare-fun x661 () Real)
(declare-fun x469 () Bool)
(declare-fun x2741 () Bool)
(declare-fun x1707 () Real)
(declare-fun x2137 () Bool)
(declare-fun x2721 () Bool)
(declare-fun x1571 () Real)
(declare-fun x2262 () Real)
(declare-fun x3122 () Real)
(declare-fun x775 () Bool)
(declare-fun x2406 () Real)
(declare-fun x2041 () Real)
(declare-fun x2926 () Real)
(declare-fun x699 () Bool)
(declare-fun x2228 () Real)
(declare-fun x1680 () Bool)
(declare-fun x2494 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x3008 () Real)
(declare-fun x2340 () Bool)
(declare-fun x2798 () Real)
(declare-fun x2975 () Bool)
(declare-fun x1751 (Real) Real)
(declare-fun x2514 () Bool)
(declare-fun x1441 () Real)
(declare-fun x1242 () Bool)
(declare-fun x199 () Real)
(declare-fun x1780 () Bool)
(declare-fun x2177 () Real)
(declare-fun x2136 () Bool)
(declare-fun x3053 () Real)
(declare-fun x2715 () Bool)
(declare-fun x224 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x1414 () Real)
(declare-fun x351 () Real)
(declare-fun x481 () Real)
(declare-fun x2398 () Bool)
(declare-fun x506 () Real)
(declare-fun x498 () Real)
(declare-fun x2883 () Real)
(declare-fun x890 () Real)
(declare-fun x920 () Real)
(declare-fun x497 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x2243 (Real) Real)
(declare-fun x3021 () Real)
(declare-fun x1613 () Bool)
(declare-fun x926 () Bool)
(declare-fun x905 () Bool)
(declare-fun x2113 () Real)
(declare-fun x2601 () Bool)
(declare-fun x191 () Real)
(declare-fun x2294 () Bool)
(declare-fun x425 () Bool)
(declare-fun x275 () Real)
(declare-fun x242 () Real)
(declare-fun x2528 () Real)
(declare-fun x1735 () Real)
(declare-fun x2770 () Bool)
(declare-fun x84 () Bool)
(declare-fun x2709 () Bool)
(declare-fun x201 () Bool)
(declare-fun x3157 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x86 () Bool)
(declare-fun x2895 () Real)
(declare-fun x1494 () Real)
(declare-fun x1240 (Real) Real)
(declare-fun x956 () Bool)
(declare-fun x2385 () Real)
(declare-fun x1602 () Bool)
(declare-fun x2624 () Real)
(declare-fun x521 () Real)
(declare-fun x1578 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x931 () Real)
(declare-fun x2694 () Bool)
(declare-fun x963 (Real) Real)
(declare-fun x2955 () Bool)
(declare-fun x489 () Real)
(declare-fun x1236 () Real)
(declare-fun x565 () Bool)
(declare-fun x729 () Real)
(declare-fun x2231 () Real)
(declare-fun x1517 () Bool)
(declare-fun x534 () Real)
(declare-fun x3050 () Real)
(declare-fun x697 () Real)
(declare-fun x2016 () Bool)
(declare-fun x3097 () Bool)
(declare-fun x577 () Real)
(declare-fun x723 () Bool)
(declare-fun x1853 () Bool)
(declare-fun x515 () Bool)
(declare-fun x602 () Real)
(declare-fun x318 () Bool)
(declare-fun x237 (Real) Real)
(declare-fun x1185 () Bool)
(declare-fun x2569 () Real)
(declare-fun x2932 () Bool)
(declare-fun x2325 () Real)
(declare-fun x2088 () Bool)
(declare-fun x53 () Real)
(declare-fun x2585 () Real)
(declare-fun x401 (Real) Real)
(declare-fun x1549 () Real)
(declare-fun x3145 () Real)
(declare-fun x2754 () Bool)
(declare-fun x176 () Bool)
(declare-fun x2612 () Bool)
(declare-fun x2581 () Real)
(declare-fun x2405 (Real) Real)
(declare-fun x1470 () Real)
(declare-fun x2657 () Real)
(declare-fun x983 () Bool)
(declare-fun x3167 () Bool)
(declare-fun x676 () Bool)
(declare-fun x1833 () Real)
(declare-fun x971 () Real)
(declare-fun x2407 () Real)
(declare-fun x1701 () Real)
(declare-fun x776 () Real)
(declare-fun x2987 () Bool)
(declare-fun x3099 () Bool)
(declare-fun x2287 () Real)
(declare-fun x2476 () Bool)
(declare-fun x2183 () Real)
(declare-fun x1296 () Real)
(declare-fun x389 () Bool)
(declare-fun x1996 () Bool)
(declare-fun x2844 () Real)
(declare-fun x1534 () Bool)
(declare-fun x442 () Bool)
(declare-fun x972 () Real)
(declare-fun x2354 () Real)
(declare-fun x3132 (Real) Real)
(declare-fun x2224 () Bool)
(declare-fun x1612 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x293 () Real)
(declare-fun x1189 () Real)
(declare-fun x2564 (Real) Real)
(declare-fun x1890 () Real)
(declare-fun x78 () Bool)
(declare-fun x1120 (Real) Real)
(declare-fun x1320 () Bool)
(declare-fun x2909 (Real) Real)
(declare-fun x461 () Real)
(declare-fun x2826 () Bool)
(declare-fun x1825 () Real)
(declare-fun x794 () Real)
(declare-fun x2132 () Real)
(declare-fun x2087 () Real)
(declare-fun x187 () Bool)
(declare-fun x949 () Real)
(declare-fun x751 () Real)
(declare-fun x22 () Real)
(declare-fun x10 () Bool)
(declare-fun x377 () Real)
(declare-fun x845 () Bool)
(declare-fun x378 () Bool)
(declare-fun x3052 () Bool)
(declare-fun x2274 (Real) Real)
(declare-fun x2119 () Real)
(declare-fun x2416 () Bool)
(declare-fun x2275 (Real) Real)
(declare-fun x2889 () Real)
(declare-fun x1153 (Real) Real)
(declare-fun x1122 () Real)
(declare-fun x1394 (Real) Real)
(declare-fun x1850 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x1962 () Real)
(declare-fun x1114 () Real)
(declare-fun x1955 () Bool)
(declare-fun x1062 () Real)
(declare-fun x2807 () Real)
(declare-fun x542 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x185 () Real)
(declare-fun x2788 (Real) Real)
(declare-fun x518 () Bool)
(declare-fun x2181 () Real)
(declare-fun x3174 (Real) Real)
(declare-fun x1570 () Real)
(declare-fun x840 () Real)
(declare-fun x1154 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x526 () Bool)
(declare-fun x1889 () Real)
(declare-fun x527 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x137 () Real)
(declare-fun x1619 () Bool)
(declare-fun x2843 () Bool)
(declare-fun x2420 () Real)
(declare-fun x2716 () Bool)
(declare-fun x2795 () Real)
(declare-fun x499 () Bool)
(declare-fun x1736 () Real)
(declare-fun x1719 () Bool)
(declare-fun x2961 () Bool)
(declare-fun x628 () Bool)
(declare-fun x595 () Real)
(declare-fun x1973 () Real)
(declare-fun x184 () Real)
(declare-fun x234 () Bool)
(declare-fun x1960 () Bool)
(declare-fun x714 (Real) Real)
(declare-fun x3084 () Bool)
(declare-fun x2697 () Real)
(declare-fun x673 () Real)
(declare-fun x967 () Bool)
(declare-fun x1640 () Real)
(declare-fun x1999 () Bool)
(declare-fun x1631 () Real)
(declare-fun x919 () Real)
(declare-fun x2247 () Real)
(declare-fun x95 () Real)
(declare-fun x136 () Real)
(declare-fun x631 () Bool)
(declare-fun x2015 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x762 () Bool)
(declare-fun x2905 () Bool)
(declare-fun x321 () Bool)
(declare-fun x2768 () Bool)
(declare-fun x2546 () Real)
(declare-fun x2592 () Bool)
(declare-fun x3138 () Bool)
(declare-fun x479 () Real)
(declare-fun x1967 () Bool)
(declare-fun x986 () Bool)
(declare-fun x810 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x832 () Bool)
(declare-fun x2484 () Bool)
(declare-fun x2836 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x1871 () Real)
(declare-fun x170 () Bool)
(declare-fun x835 () Bool)
(declare-fun x60 () Real)
(declare-fun x1228 () Bool)
(declare-fun x1912 () Real)
(declare-fun x2824 () Real)
(declare-fun x1369 () Real)
(declare-fun x1484 () Bool)
(declare-fun x2998 () Real)
(declare-fun x2383 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x1346 () Real)
(declare-fun x617 () Bool)
(declare-fun x2980 () Real)
(declare-fun x355 () Real)
(declare-fun x1555 () Bool)
(declare-fun x952 () Bool)
(declare-fun x2621 () Bool)
(declare-fun x2036 () Bool)
(declare-fun x1059 () Real)
(declare-fun x2163 () Bool)
(declare-fun x2778 () Real)
(declare-fun x446 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x1019 () Real)
(declare-fun x2540 () Real)
(declare-fun x694 () Real)
(declare-fun x18 () Bool)
(declare-fun x2719 () Real)
(declare-fun x3155 () Bool)
(declare-fun x2463 () Real)
(declare-fun x736 () Bool)
(declare-fun x2652 () Real)
(declare-fun x650 () Bool)
(declare-fun x1627 () Real)
(declare-fun x1469 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x2853 () Real)
(declare-fun x1461 () Bool)
(declare-fun x2693 () Bool)
(declare-fun x1989 () Real)
(declare-fun x830 (Real) Real)
(declare-fun x695 () Real)
(declare-fun x2764 () Real)
(declare-fun x597 () Real)
(declare-fun x2214 () Bool)
(declare-fun x2810 () Real)
(declare-fun x2990 () Bool)
(declare-fun x2051 () Real)
(declare-fun x1348 (Real) Real)
(declare-fun x2616 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x220 () Real)
(declare-fun x1281 () Bool)
(declare-fun x47 () Real)
(declare-fun x1497 () Bool)
(declare-fun x1372 () Real)
(declare-fun x2713 () Bool)
(declare-fun x2478 () Real)
(declare-fun x2974 () Real)
(declare-fun x1668 (Real) Real)
(declare-fun x867 () Bool)
(declare-fun x410 () Bool)
(declare-fun x879 () Bool)
(declare-fun x1161 () Real)
(declare-fun x1086 () Bool)
(declare-fun x874 () Real)
(declare-fun x2065 () Bool)
(declare-fun x2439 () Real)
(declare-fun x538 () Bool)
(declare-fun x2219 () Real)
(declare-fun x1483 () Real)
(declare-fun x1671 () Real)
(declare-fun x1941 () Bool)
(declare-fun x877 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x3096 () Real)
(declare-fun x1846 (Real) Real)
(declare-fun x2106 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x334 () Bool)
(declare-fun x916 () Real)
(declare-fun x2066 () Bool)
(declare-fun x2560 () Real)
(declare-fun x1058 () Real)
(declare-fun x168 (Real) Real)
(declare-fun x2598 () Bool)
(declare-fun x1429 () Real)
(declare-fun x2516 () Bool)
(declare-fun x2695 () Real)
(declare-fun x42 () Bool)
(declare-fun x607 () Bool)
(declare-fun x1950 (Real) Real)
(declare-fun x1132 () Bool)
(declare-fun x944 () Real)
(declare-fun x2559 () Bool)
(declare-fun x3133 () Bool)
(declare-fun x488 () Bool)
(declare-fun x3036 () Bool)
(declare-fun x39 () Bool)
(declare-fun x2245 () Real)
(declare-fun x2240 () Real)
(declare-fun x2377 () Real)
(declare-fun x1831 () Bool)
(declare-fun x2622 () Bool)
(declare-fun x2890 () Real)
(declare-fun x3098 () Real)
(declare-fun x1636 () Real)
(declare-fun x2698 () Bool)
(declare-fun x1702 () Real)
(declare-fun x1116 () Bool)
(declare-fun x1624 () Real)
(declare-fun x2845 () Real)
(declare-fun x889 () Bool)
(declare-fun x601 (Real) Real)
(declare-fun x2953 () Bool)
(declare-fun x2187 () Real)
(declare-fun x1977 () Bool)
(declare-fun x2725 () Bool)
(declare-fun x2683 () Real)
(declare-fun x1872 () Bool)
(declare-fun x2834 () Real)
(declare-fun x1131 () Bool)
(declare-fun x1706 () Bool)
(declare-fun x161 () Bool)
(declare-fun x975 () Bool)
(declare-fun x938 () Bool)
(declare-fun x345 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x2202 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x209 () Bool)
(declare-fun x2922 () Real)
(declare-fun x2868 () Bool)
(declare-fun x2783 (Real) Real)
(declare-fun x613 () Real)
(declare-fun x1177 () Bool)
(declare-fun x128 () Bool)
(declare-fun x1537 (Real) Real)
(declare-fun x2233 () Real)
(declare-fun x2915 (Real) Real)
(declare-fun x1723 () Real)
(declare-fun x1335 () Bool)
(declare-fun x2866 () Bool)
(declare-fun x2755 () Real)
(declare-fun x1172 () Real)
(declare-fun x750 () Real)
(declare-fun x422 () Real)
(declare-fun x1741 (Real) Real)
(declare-fun x672 () Bool)
(declare-fun x2812 () Real)
(declare-fun x3030 () Bool)
(declare-fun x2073 () Real)
(declare-fun x1807 () Bool)
(declare-fun x1709 () Real)
(declare-fun x705 () Bool)
(declare-fun x2879 () Bool)
(declare-fun x1572 () Real)
(declare-fun x1286 () Bool)
(declare-fun x2379 () Real)
(declare-fun x1082 () Bool)
(declare-fun x247 () Bool)
(declare-fun x1827 () Real)
(declare-fun x1981 () Real)
(declare-fun x1728 () Real)
(declare-fun x716 () Real)
(declare-fun x1331 () Real)
(declare-fun x1435 () Real)
(declare-fun x795 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x369 () Bool)
(declare-fun x2191 () Bool)
(declare-fun x1820 () Bool)
(declare-fun x2776 () Bool)
(declare-fun x503 () Bool)
(declare-fun x1385 () Real)
(declare-fun x1431 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x2578 () Bool)
(declare-fun x2190 () Bool)
(declare-fun x728 () Bool)
(declare-fun x1869 () Real)
(declare-fun x1323 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x2563 () Bool)
(declare-fun x2124 () Real)
(declare-fun x1065 () Bool)
(declare-fun x2509 () Bool)
(declare-fun x2270 () Real)
(declare-fun x1081 () Real)
(declare-fun x2897 () Bool)
(declare-fun x336 () Real)
(declare-fun x3115 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x2771 () Real)
(declare-fun x15 () Bool)
(declare-fun x261 () Real)
(declare-fun x1775 (Real Real) Real)
(declare-fun x1454 () Real)
(declare-fun x671 () Real)
(declare-fun x2278 (Real) Real)
(declare-fun x1838 () Real)
(declare-fun x2659 () Bool)
(declare-fun x2085 () Bool)
(declare-fun x1830 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x2365 () Bool)
(declare-fun x2341 () Real)
(declare-fun x57 () Bool)
(declare-fun x1948 () Real)
(declare-fun x1304 (Real) Real)
(declare-fun x3161 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x1401 () Real)
(declare-fun x1026 () Bool)
(declare-fun x1931 () Real)
(declare-fun x1937 () Real)
(declare-fun x2322 () Bool)
(declare-fun x215 () Bool)
(declare-fun x2172 () Bool)
(declare-fun x656 () Real)
(declare-fun x3156 () Bool)
(declare-fun x1496 () Real)
(declare-fun x2538 () Real)
(declare-fun x385 () Bool)
(declare-fun x1196 () Real)
(declare-fun x1457 () Real)
(declare-fun x424 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x1105 () Real)
(declare-fun x813 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x1440 () Bool)
(declare-fun x859 () Bool)
(declare-fun x596 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x1044 () Real)
(declare-fun x2117 () Bool)
(declare-fun x1327 () Real)
(declare-fun x2800 () Bool)
(declare-fun x2865 () Real)
(declare-fun x2940 () Bool)
(declare-fun x251 () Bool)
(declare-fun x2057 () Real)
(declare-fun x298 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x173 (Real) Real)
(declare-fun x2326 () Real)
(declare-fun x1383 () Bool)
(declare-fun x1908 () Bool)
(declare-fun x2487 () Bool)
(declare-fun x567 () Bool)
(declare-fun x3003 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x2399 () Real)
(declare-fun x2535 () Bool)
(declare-fun x50 () Bool)
(declare-fun x703 (Real) Real)
(declare-fun x2934 () Real)
(declare-fun x2704 () Real)
(declare-fun x3165 () Real)
(declare-fun x2364 () Real)
(declare-fun x1795 () Bool)
(declare-fun x2249 () Bool)
(declare-fun x2610 () Real)
(declare-fun x1037 () Bool)
(declare-fun x2312 () Real)
(declare-fun x2277 () Bool)
(declare-fun x1308 () Real)
(declare-fun x2513 () Bool)
(declare-fun x3169 () Real)
(declare-fun x1437 () Bool)
(declare-fun x2223 () Bool)
(declare-fun x2299 () Bool)
(declare-fun x754 () Real)
(declare-fun x27 () Bool)
(declare-fun x660 () Bool)
(declare-fun x3111 () Real)
(declare-fun x1994 () Real)
(declare-fun x2485 () Real)
(declare-fun x3031 () Bool)
(declare-fun x2452 () Bool)
(declare-fun x513 () Real)
(declare-fun x2471 () Real)
(declare-fun x1041 () Bool)
(declare-fun x1234 (Real) Real)
(declare-fun x59 () Real)
(declare-fun x3092 () Real)
(declare-fun x1347 () Bool)
(declare-fun x1237 () Real)
(declare-fun x420 () Real)
(declare-fun x1852 () Bool)
(declare-fun x3163 () Real)
(declare-fun x2942 () Real)
(declare-fun x646 () Real)
(declare-fun x670 () Real)
(declare-fun x2380 () Real)
(declare-fun x1903 (Real) Real)
(declare-fun x2188 () Real)
(declare-fun x1934 () Real)
(declare-fun x2056 () Real)
(declare-fun x2681 () Bool)
(declare-fun x3026 () Real)
(declare-fun x1634 () Bool)
(declare-fun x990 () Real)
(declare-fun x1261 () Bool)
(declare-fun x1556 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x2908 () Bool)
(declare-fun x2218 () Bool)
(define-fun x2858 ((x1750 Real)) Real (ite (and (<= 0 x1750) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1750)) x1750 (- x1750 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1936 ((x1750 Real)) Real (ite (and (>= x1750 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1750 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1750) x1750))
(define-fun x1752 ((x1444 Real)) Bool (and (>= x1444 0) (< x1444 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x853 ((x1444 Real)) Bool (and (<= 0 x1444) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1444)))
(define-fun x3046 ((x1444 Real)) Bool (and (= (x1111 x1444 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1444) (= x1444 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1444))))
(define-fun x1985 ((x1444 Real)) Bool (and (= (x1111 x1444 0) 0) (= 0 (x1111 0 x1444))))
(define-fun x1490 ((x1444 Real)) Bool (= (x1111 x1444 x1444) x1444))
(define-fun x856 ((x1444 Real)) Bool (and (x3046 x1444) (x1985 x1444) (x1490 x1444)))
(define-fun x2586 ((x1444 Real)) Bool (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1444)) (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1444)))
(define-fun x2236 ((x1444 Real)) Bool (=> (and (>= x1444 0) (< x1444 32)) (= 0 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1444))))
(define-fun x2779 ((x1444 Real) (x966 Real) (x2005 Real) (x123 Real)) Bool (and (< x2005 3618502788666131106986593281521497120414687020801267626233049500247285301248) (>= x966 0) (> 32 x966) (= x1444 (+ x966 (* 32 x2005) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x123))) (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1444) (* x2005 32)) (<= 0 x123) (< x123 1) (>= x2005 0)))
(define-fun x2587 ((x1444 Real) (x2227 Real) (x2279 Real) (x2437 Real)) Bool (and (x2779 x1444 x2227 x2279 x2437) (x2586 x1444) (x2236 x1444)))
(define-fun x1878 ((x1444 Real) (x966 Real)) Bool (= (x1111 x966 x1444) (x1111 x1444 x966)))
(define-fun x1373 ((x1444 Real) (x966 Real)) Bool (and (=> (>= x966 0) (>= x966 (x1111 x1444 x966))) (>= (x1111 x1444 x966) 0) (=> (<= 0 x1444) (>= x1444 (x1111 x1444 x966)))))
(define-fun x1370 ((x1444 Real) (x966 Real)) Bool (and (x1373 x1444 x966) (x1878 x1444 x966)))
(define-fun x434 ((x1444 Real) (x2227 Real) (x2279 Real) (x2437 Real)) Bool (and (x1370 x1444 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2587 x1444 x2227 x2279 x2437)))
(define-fun x1186 ((x1444 Real)) Bool (= (x1111 1461501637330902918203684832716283019655932542975 x1444) (x1111 1461501637330902918203684832716283019655932542975 (x1111 1461501637330902918203684832716283019655932542975 x1444))))
(define-fun x1015 ((x1444 Real)) Bool (=> (and (< x1444 1461501637330902918203684832716283019655932542976) (<= 0 x1444)) (= (x1111 1461501637330902918203684832716283019655932542975 x1444) x1444)))
(define-fun x3176 ((x1444 Real)) Bool (=> (= (x1111 1461501637330902918203684832716283019655932542975 x1444) x1444) (and (< x1444 1461501637330902918203684832716283019655932542976) (<= 0 x1444))))
(define-fun x1587 ((x1444 Real)) Bool (=> (and (>= x1444 1461501637330902918203684832716283019655932542976) (> 2923003274661805836407369665432566039311865085952 x1444)) (= (- x1444 1461501637330902918203684832716283019655932542976) (x1111 1461501637330902918203684832716283019655932542975 x1444))))
(define-fun x3164 ((x1444 Real) (x966 Real)) Bool (and (= (+ (* 1461501637330902918203684832716283019655932542976 x966) (x1111 1461501637330902918203684832716283019655932542975 x1444)) x1444) (<= 0 x966)))
(define-fun x2272 ((x1444 Real) (x1166 Real)) Bool (and (x1587 x1444) (x1186 x1444) (x1015 x1444) (x3164 x1444 x1166) (x3176 x1444)))
(define-fun x1433 ((x1444 Real) (x1166 Real)) Bool (and (x2272 x1444 x1166) (x1370 x1444 1461501637330902918203684832716283019655932542975)))
(define-fun x2497 ((x1444 Real)) Bool (= (x1111 18446744073709551615 x1444) (x1111 18446744073709551615 (x1111 18446744073709551615 x1444))))
(define-fun x2479 ((x1444 Real)) Bool (=> (and (>= x1444 0) (> 18446744073709551616 x1444)) (= (x1111 18446744073709551615 x1444) x1444)))
(define-fun x2532 ((x1444 Real)) Bool (=> (= x1444 (x1111 18446744073709551615 x1444)) (and (>= x1444 0) (< x1444 18446744073709551616))))
(define-fun x337 ((x1444 Real)) Bool (=> (and (< x1444 36893488147419103232) (<= 18446744073709551616 x1444)) (= (x1111 18446744073709551615 x1444) (- x1444 18446744073709551616))))
(define-fun x2070 ((x1444 Real) (x966 Real)) Bool (and (<= 0 x966) (= (+ (x1111 18446744073709551615 x1444) (* 18446744073709551616 x966)) x1444)))
(define-fun x1940 ((x1444 Real) (x1166 Real)) Bool (and (x2532 x1444) (x2479 x1444) (x337 x1444) (x2497 x1444) (x2070 x1444 x1166)))
(define-fun x720 ((x1444 Real) (x1166 Real)) Bool (and (x1940 x1444 x1166) (x1370 x1444 18446744073709551615)))
(define-fun x3116 ((x1661 Real)) Real (x3113 x1661))
(define-fun x1782 ((x1661 Real)) Real (ite (= x1661 128) 0 (x1747 x1661)))
(define-fun x3134 ((x1661 Real)) Real (ite (= 128 x1661) x1365 (x1782 x1661)))
(define-fun x31 ((x1661 Real)) Real (ite (= 352 x1661) x58 (x2480 x1661)))
(define-fun x781 ((x1661 Real)) Real (ite (= x1661 x2928) x1098 (x1394 x1661)))
(define-fun x1467 ((x1661 Real)) Real (ite (and (> (+ x3177 x3111) x1661) (<= x3111 x1661)) (x3113 (+ (- x1661 x3111) x1169)) (x90 x1661)))
(define-fun x2211 ((x1661 Real)) Real (ite (= x151 x1661) x2443 (x748 x1661)))
(define-fun x1958 ((x1661 Real)) Real (ite (and x937 x859) (x748 x1661) (x2211 x1661)))
(define-fun x167 ((x1661 Real)) Real (ite x2966 (ite (and (not x2558) x2507) (x748 x1661) (x1958 x1661)) (x748 x1661)))
(define-fun x2869 ((x1661 Real)) Real (ite (and (> (+ 384 x665) x1661) (>= x1661 384)) (x3113 (+ (- x1661 384) x1169)) (x2862 x1661)))
(define-fun x1439 ((x1661 Real)) Real (ite (= x1661 416) x3092 (x708 x1661)))
(define-fun x1877 ((x1661 Real)) Real (ite (and x2134 (not x1110)) (x623 x1661) (ite (and x1077 (not x407)) (x708 x1661) (x1439 x1661))))
(define-fun x763 ((x1661 Real)) Real (ite (and (> (+ 32 x789) x1661) (>= x1661 x789)) (x3174 (+ 0 (- x1661 x789))) (x598 x1661)))
(define-fun x1277 ((x1661 Real)) Real (ite (and (< x1661 (+ 32 x1615)) (<= x1615 x1661)) (x311 (+ 0 (- x1661 x1615))) (x797 x1661)))
(define-fun x2419 ((x1661 Real)) Real (ite (and x2604 (not x937) x859) (x1277 x1661) (x797 x1661)))
(define-fun x563 ((x1661 Real)) Real (ite (= x1661 x690) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2419 x1661)))
(define-fun x219 ((x1661 Real)) Real (ite (and (>= x1661 x690) (< x1661 (+ 32 x690))) (x829 (+ 0 (- x1661 x690))) (x2064 x1661)))
(define-fun x2690 ((x1661 Real)) Real (ite (and x2605 x1515 x1798) (x219 x1661) (x2064 x1661)))
(define-fun x1567 ((x1661 Real)) Real (ite (= x1661 x447) 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2690 x1661)))
(define-fun x2049 ((x1661 Real)) Real (ite (and (>= x1661 x447) (< x1661 (+ x447 32))) (x1668 (+ 0 (- x1661 x447))) (x1240 x1661)))
(define-fun x3141 ((x1661 Real)) Real (ite (and (not x1852) x2074 x3138) (x2049 x1661) (x1240 x1661)))
(define-fun x1271 ((x1661 Real)) Real (ite (and (<= x2723 x1661) (< x1661 (+ 128 x2723))) (x658 (+ (- x1661 x2723) 0)) (x383 x1661)))
(define-fun x390 ((x1661 Real)) Real (ite (and (> (+ x1906 32) x1661) (<= x1906 x1661)) (x2984 (+ (- x1661 x1906) 0)) (x2976 x1661)))
(define-fun x2012 ((x1661 Real)) Real (ite (and x2125 x1832 x1843) (x390 x1661) (x2976 x1661)))
(define-fun x1778 ((x1661 Real)) Real (ite (and (>= x1661 x2132) (< x1661 (+ 32 x2132))) (x510 (+ 0 (- x1661 x2132))) (x1677 x1661)))
(define-fun x778 ((x1661 Real)) Real (ite (and x3071 x1329 x2666) (x1778 x1661) (x1677 x1661)))
(define-fun x1301 ((x1661 Real)) Real (ite (= x314 x1661) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x778 x1661)))
(define-fun x842 ((x1661 Real)) Real (ite (= x1661 x314) x848 (x1326 x1661)))
(define-fun x458 ((x1661 Real)) Real (ite (= x314 x1661) x147 (x1326 x1661)))
(define-fun x583 ((x1661 Real)) Real (ite x2430 (ite x2689 (x1326 x1661) (x842 x1661)) (ite x1268 (x1326 x1661) (x458 x1661))))
(define-fun x1802 ((x1661 Real)) Real (ite (= x491 x1661) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x583 x1661)))
(define-fun x977 ((x1661 Real)) Real (ite (and (>= x1661 x491) (< x1661 (+ 32 x491))) (x2842 (+ (- x1661 x491) 0)) (x1113 x1661)))
(define-fun x1276 ((x1661 Real)) Real (ite (and x2965 x1305 x1725) (x977 x1661) (x1113 x1661)))
(define-fun x106 ((x1661 Real)) Real (ite (and (< x1661 (+ x1427 32)) (<= x1427 x1661)) (x3093 (+ 0 (- x1661 x1427))) (x1102 x1661)))
(define-fun x76 ((x1661 Real)) Real (ite (and x2382 x1150 (not x1354)) (x106 x1661) (x1102 x1661)))
(define-fun x2199 ((x1661 Real)) Real (ite (= x931 x1661) x2009 (x1124 x1661)))
(define-fun x2692 ((x1661 Real)) Real (ite (= x931 x1661) x2818 (x1124 x1661)))
(define-fun x2189 ((x1661 Real)) Real (ite (and x1014 x761) (x2199 x1661) (x2692 x1661)))
(define-fun x1415 ((x1661 Real)) Real (ite (= x1661 x2343) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x830 x1661)))
(define-fun x2436 ((x1661 Real)) Real (ite (= x1661 x2343) x3080 (x2176 x1661)))
(define-fun x537 ((x1661 Real)) Real (ite (= x1661 x2343) x239 (x2176 x1661)))
(define-fun x1456 ((x1661 Real)) Real (ite x368 (ite x1688 (x2176 x1661) (x2436 x1661)) (ite x2897 (x2176 x1661) (x537 x1661))))
(define-fun x81 ((x1661 Real)) Real (ite (and x937 x859) (x1686 x1661) (x1456 x1661)))
(define-fun x590 ((x1661 Real)) Real (ite (and (< x1661 (+ x752 32)) (<= x752 x1661)) (x2796 (+ 0 (- x1661 x752))) (x1492 x1661)))
(define-fun x645 ((x1661 Real)) Real (ite (and x148 x2961 x996) (x590 x1661) (x1492 x1661)))
(define-fun x1665 ((x1661 Real)) Real (ite (= x855 x1661) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x645 x1661)))
(define-fun x1265 ((x1661 Real)) Real (ite (and (>= x1661 x855) (> (+ 32 x855) x1661)) (x801 (+ 0 (- x1661 x855))) (x173 x1661)))
(define-fun x2266 ((x1661 Real)) Real (ite (and x1165 x75 x1437) (x1265 x1661) (x173 x1661)))
(define-fun x1944 ((x1661 Real)) Real (ite (= x1129 x1661) 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2266 x1661)))
(define-fun x1865 ((x1661 Real)) Real (ite (and (> (+ x1129 32) x1661) (<= x1129 x1661)) (x2243 (+ (- x1661 x1129) 0)) (x129 x1661)))
(define-fun x1270 ((x1661 Real)) Real (ite (and (not x1255) x1893 x2457) (x1865 x1661) (x129 x1661)))
(define-fun x2819 ((x1661 Real)) Real (ite (and (>= x1661 x2567) (> (+ x2567 32) x1661)) (x1216 (+ (- x1661 x2567) 0)) (x1755 x1661)))
(define-fun x1983 ((x1661 Real)) Real (ite (and x186 x2365 x1028) (x2819 x1661) (x1755 x1661)))
(define-fun x1156 ((x1661 Real)) Real (ite (and (>= x1661 x1511) (< x1661 (+ 128 x1511))) (x401 (+ (- x1661 x1511) 0)) (x1390 x1661)))
(define-fun x1145 ((x1661 Real)) Real (ite (and x883 x476 x1179) (x1156 x1661) (x1390 x1661)))
(define-fun x1626 ((x1661 Real)) Real (ite (= x72 x1661) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1145 x1661)))
(define-fun x2156 ((x1661 Real)) Real (ite (= x72 x1661) x1827 (x601 x1661)))
(define-fun x108 ((x1661 Real)) Real (ite (= x72 x1661) x677 (x601 x1661)))
(define-fun x1289 ((x1661 Real)) Real (ite x1083 (ite x1322 (x601 x1661) (x2156 x1661)) (ite x111 (x601 x1661) (x108 x1661))))
(define-fun x2773 ((x1661 Real)) Real (ite (and x1533 (not x1786)) (x2830 x1661) (x1289 x1661)))
(define-fun x2042 ((x1661 Real)) Real (ite (= x2962 x1661) 14262166148461681479388312084279688412379623686150252715788501447688379695104 (x2773 x1661)))
(define-fun x2361 ((x1661 Real)) Real (ite (and (<= x2962 x1661) (< x1661 (+ x2962 32))) (x2271 (+ 0 (- x1661 x2962))) (x1153 x1661)))
(define-fun x33 ((x1661 Real)) Real (ite (= x1661 x384) 11548673047482463375710962565434449992668293034397312241487562681223695302656 (x1846 x1661)))
(define-fun x1608 ((x1661 Real)) Real (ite (= x2295 x1661) x796 (x33 x1661)))
(define-fun x1451 ((x1661 Real)) Real (ite (= x2449 x1661) x2462 (x1608 x1661)))
(define-fun x818 ((x1661 Real)) Real (ite (and (> (+ x384 0) x1661) (>= x1661 x384)) (x2206 (+ 0 (- x1661 x384))) (x342 x1661)))
(define-fun x1507 ((x1661 Real)) Real (ite (and x1953 (not x2027) x142) (x2495 x1661) (x1566 x1661)))
(define-fun x114 ((x1661 Real)) Real (ite (and x142 (not x2027) x1953) (x818 x1661) (x342 x1661)))
(define-fun x2583 ((x1661 Real)) Real (ite (and (not x2027) x142 x1953) (x166 x1661) (x1950 x1661)))
(define-fun x24 ((x1661 Real)) Real (ite (and (not x170) x1557) (x1950 x1661) (ite (and (not x1501) x3060) (x1950 x1661) (x2583 x1661))))
(define-fun x1057 ((x1661 Real)) Real (ite (and (not x2027) x142 x1953) (x115 x1661) (x2988 x1661)))
(define-fun x913 ((x1661 Real)) Real (ite (= 320 x1661) 0 (x1673 x1661)))
(define-fun x1336 ((x1661 Real)) Real (ite (= 320 x1661) x2552 (x913 x1661)))
(define-fun x1683 ((x1661 Real)) Real (ite (= x1521 x1661) x3070 (x354 x1661)))
(define-fun x706 ((x1661 Real)) Real (ite (and (>= x1661 x2744) (> (+ x479 x2744) x1661)) (x3113 (+ (- x1661 x2744) x1169)) (x3006 x1661)))
(define-fun x667 ((x1661 Real)) Real (ite (= x1661 x3039) x1982 (x767 x1661)))
(define-fun x540 ((x1661 Real)) Real (ite (and (not x1786) x1533) (x767 x1661) (x667 x1661)))
(define-fun x1011 ((x1661 Real)) Real (ite (= x1661 x1221) x2215 (x1008 x1661)))
(define-fun x1856 ((x1661 Real)) Real (ite (and (<= x2951 x1661) (> (+ x1369 x2951) x1661)) (x3113 (+ (- x1661 x2951) x1169)) (x250 x1661)))
(define-fun x2389 ((x1661 Real)) Real (ite (= x880 x1661) x1858 (x1025 x1661)))
(define-fun x2561 ((x1661 Real)) Real (ite (and x1533 (not x1786)) (x1025 x1661) (x2389 x1661)))
(define-fun x568 ((x1661 Real)) Real (ite (= x1661 x546) x1181 (x703 x1661)))
(define-fun x444 ((x1661 Real)) Real (ite (= x546 x1661) x2795 (x703 x1661)))
(define-fun x28 ((x1661 Real)) Real (ite x2118 (x568 x1661) (x444 x1661)))
(define-fun x394 ((x1661 Real)) Real (ite (and (< x1661 (+ x2113 x457)) (<= x2113 x1661)) (x3113 (+ x1169 (- x1661 x2113))) (x2909 x1661)))
(define-fun x815 ((x1661 Real)) Real (ite (= x2399 x1661) x2307 (x1597 x1661)))
(define-fun x205 ((x1661 Real)) Real (ite (and (not x1403) x735) (x1597 x1661) (x815 x1661)))
(define-fun x1633 ((x1661 Real)) Real (ite (= x1661 x2463) x2078 (x869 x1661)))
(define-fun x2400 ((x1661 Real)) Real (ite (and x1377 (not x1899)) (x714 x1661) (ite (and (not x1397) x588) (x869 x1661) (x1633 x1661))))
(define-fun x2837 ((x1661 Real)) Real (ite (= x2982 x1661) x2638 (x2400 x1661)))
(define-fun x69 ((x1661 Real)) Real (ite x2118 (ite (and x768 (not x1920)) (x1751 x1661) (x205 x1661)) (x2837 x1661)))
(define-fun x2168 ((x1661 Real)) Real (ite (= x384 x1661) 11548673047482463375710962565434449992668293034397312241487562681223695302656 (x2625 x1661)))
(define-fun x3033 ((x1661 Real)) Real (ite (= x1661 x1596) x2650 (x2168 x1661)))
(define-fun x1054 ((x1661 Real)) Real (ite (= x1213 x1661) x2462 (x3033 x1661)))
(define-fun x1797 ((x1661 Real)) Real (ite (and (> (+ x384 0) x1661) (<= x384 x1661)) (x1826 (+ 0 (- x1661 x384))) (x2045 x1661)))
(define-fun x2707 ((x1661 Real)) Real (ite (and x1641 (not x3094)) (x24 x1661) (ite (and x2868 x1389 (not x1168)) (x418 x1661) (x24 x1661))))
(define-fun x1538 ((x1661 Real)) Real (ite (and (< x1661 (+ 32 x384)) (>= x1661 x384)) (x3132 (+ (- x1661 x384) 0)) (x1234 x1661)))
(define-fun x868 ((x1661 Real)) Real (ite (and x2846 (not x1715) x1282) (x839 x1661) (x1304 x1661)))
(define-fun x2991 ((x1661 Real)) Real (ite (and (not x2882) x141) (x2261 x1661) (ite (and x921 (not x2442)) (x1304 x1661) (x868 x1661))))
(define-fun x286 ((x1661 Real)) Real (ite (and x1576 x2632 x2319) (x1538 x1661) (x1234 x1661)))
(define-fun x1618 ((x1661 Real)) Real (ite (= x1661 x1727) 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x286 x1661)))
(define-fun x2920 ((x1661 Real)) Real (ite (= x1244 x1661) x2814 (x1618 x1661)))
(define-fun x1733 ((x1661 Real)) Real (ite (and (> (+ x1727 0) x1661) (>= x1661 x1727)) (x873 (+ (- x1661 x1727) 0)) (x1929 x1661)))
(define-fun x2265 ((x1661 Real)) Real (ite (and (not x1715) x1282 x2846) (x1733 x1661) (x1929 x1661)))
(define-fun x3073 ((x1661 Real)) Real (ite (and x1282 (not x1715) x2846) (x2411 x1661) (x691 x1661)))
(define-fun x213 ((x1661 Real)) Real (ite (and (not x2882) x141) (x2969 x1661) (ite (and x921 (not x2442)) (x691 x1661) (x3073 x1661))))
(define-fun x3153 ((x1661 Real)) Real (ite (= x2373 x1661) 0 (x2633 x1661)))
(define-fun x2105 ((x1661 Real)) Real (ite (= x1729 x1661) 0 (x741 x1661)))
(define-fun x1407 ((x1661 Real)) Real (ite (= x1876 x1661) 0 (x1425 x1661)))
(define-fun x970 ((x1661 Real)) Real (ite (= x1661 x1945) 0 (x1650 x1661)))
(define-fun x175 ((x1661 Real)) Real (ite (= x1661 x2902) 0 (x524 x1661)))
(define-fun x627 ((x1661 Real)) Real (ite (= x1661 x1429) 0 (x1002 x1661)))
(define-fun x1095 ((x1661 Real)) Real (ite (= x1043 x1661) 0 (x1157 x1661)))
(define-fun x120 ((x1661 Real)) Real (ite (and (<= x484 x1661) (> (+ x484 32) x1661)) (x3110 (+ 0 (- x1661 x484))) (x626 x1661)))
(define-fun x2201 ((x1661 Real)) Real (ite (and x2499 x1654 x1363) (x120 x1661) (x626 x1661)))
(define-fun x3019 ((x1661 Real)) Real (ite (= x1661 x2748) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2201 x1661)))
(define-fun x2293 ((x1661 Real)) Real (ite (and (> (+ 32 x2748) x1661) (>= x1661 x2748)) (x927 (+ 0 (- x1661 x2748))) (x963 x1661)))
(define-fun x1152 ((x1661 Real)) Real (ite (and x251 x2223 x3171) (x2293 x1661) (x963 x1661)))
(define-fun x918 ((x1661 Real)) Real (ite (= x1661 x1701) 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x1152 x1661)))
(define-fun x1692 ((x1661 Real)) Real (ite (and (<= x1701 x1661) (< x1661 (+ 32 x1701))) (x1411 (+ 0 (- x1661 x1701))) (x2759 x1661)))
(define-fun x1851 ((x1661 Real)) Real (ite (and x1603 (not x653) x742) (x1692 x1661) (x2759 x1661)))
(define-fun x3180 ((x1661 Real)) Real (ite (and (< x1661 (+ x303 32)) (<= x303 x1661)) (x230 (+ (- x1661 x303) 0)) (x817 x1661)))
(define-fun x680 ((x1661 Real)) Real (ite (and x84 x310 x86) (x3180 x1661) (x817 x1661)))
(define-fun x284 ((x1661 Real)) Real (ite (and (>= x1661 x2894) (> (+ 128 x2894) x1661)) (x168 (+ 0 (- x1661 x2894))) (x2371 x1661)))
(define-fun x1586 ((x1661 Real)) Real (ite (and x871 x745 x3030) (x284 x1661) (x2371 x1661)))
(define-fun x398 ((x1661 Real)) Real (ite (and (<= x2469 x1661) (< x1661 (+ x2469 32))) (x1031 (+ 0 (- x1661 x2469))) (x2519 x1661)))
(define-fun x2877 ((x1661 Real)) Real (ite (and (< x1661 (+ x2806 32)) (<= x2806 x1661)) (x2564 (+ 0 (- x1661 x2806))) (x2083 x1661)))
(define-fun x1523 ((x1661 Real)) Real (ite (and x699 x2614 (not x507)) (x2877 x1661) (x2083 x1661)))
(define-fun x496 ((x1661 Real)) Real (ite (= x1661 x71) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1523 x1661)))
(define-fun x2058 ((x1661 Real)) Real (ite (and (>= x1661 x71) (> (+ x71 32) x1661)) (x29 (+ 0 (- x1661 x71))) (x2907 x1661)))
(define-fun x953 ((x1661 Real)) Real (ite (and x1175 x2422 x2071) (x2058 x1661) (x2907 x1661)))
(define-fun x570 ((x1661 Real)) Real (ite (= x1661 x2787) 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x953 x1661)))
(define-fun x1895 ((x1661 Real)) Real (ite (and (>= x1661 x2787) (> (+ x2787 32) x1661)) (x1653 (+ (- x1661 x2787) 0)) (x2589 x1661)))
(define-fun x2651 ((x1661 Real)) Real (ite (and x2594 (not x2106) x2244) (x1895 x1661) (x2589 x1661)))
(define-fun x3105 ((x1661 Real)) Real (ite (and (> (+ x893 128) x1661) (>= x1661 x893)) (x1247 (+ 0 (- x1661 x893))) (x1915 x1661)))
(define-fun x1679 ((x1661 Real)) Real (ite (and (>= x1661 x433) (< x1661 (+ x433 32))) (x3032 (+ 0 (- x1661 x433))) (x3011 x1661)))
(define-fun x85 ((x1661 Real)) Real (ite (and x255 x3017 x2142) (x1679 x1661) (x3011 x1661)))
(define-fun x1829 ((x1661 Real)) Real (ite (and (<= x1565 x1661) (< x1661 (+ x1565 32))) (x642 (+ (- x1661 x1565) 0)) (x2994 x1661)))
(define-fun x2182 ((x1661 Real)) Real (ite (and x459 x502 x2082) (x1829 x1661) (x2994 x1661)))
(define-fun x154 ((x1661 Real)) Real (ite (= x2755 x1661) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2182 x1661)))
(define-fun x362 ((x1661 Real)) Real (ite (= x2755 x1661) x437 (x93 x1661)))
(define-fun x2573 ((x1661 Real)) Real (ite (= x1661 x2755) x1303 (x93 x1661)))
(define-fun x1359 ((x1661 Real)) Real (ite x2953 (ite x494 (x93 x1661) (x362 x1661)) (ite x530 (x93 x1661) (x2573 x1661))))
(define-fun x68 ((x1661 Real)) Real (ite (= x1661 x2695) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1359 x1661)))
(define-fun x619 ((x1661 Real)) Real (ite (and (< x1661 (+ 32 x2695)) (>= x1661 x2695)) (x2802 (+ 0 (- x1661 x2695))) (x2140 x1661)))
(define-fun x2570 ((x1661 Real)) Real (ite (and x2484 x2677 x1875) (x619 x1661) (x2140 x1661)))
(define-fun x2979 ((x1661 Real)) Real (ite (and (> (+ 32 x411) x1661) (>= x1661 x411)) (x1348 (+ 0 (- x1661 x411))) (x25 x1661)))
(define-fun x1174 ((x1661 Real)) Real (ite (and x492 x2622 (not x928)) (x2979 x1661) (x25 x1661)))
(define-fun x701 ((x1661 Real)) Real (ite (= x2772 x1661) x1463 (x2423 x1661)))
(define-fun x1379 ((x1661 Real)) Real (ite (= x2772 x1661) x826 (x2423 x1661)))
(define-fun x504 ((x1661 Real)) Real (ite (and x3156 x649) (x701 x1661) (x1379 x1661)))
(define-fun x1413 ((x1661 Real)) Real (ite (and x2614 x507) (x2738 x1661) (x302 x1661)))
(define-fun x3159 ((x1661 Real)) Real (ite (= x2023 x1661) 14262166148461681479388312084279688412379623686150252715788501447688379695104 (x523 x1661)))
(define-fun x3056 ((x1661 Real)) Real (ite (and (> (+ 32 x2023) x1661) (>= x1661 x2023)) (x1381 (+ (- x1661 x2023) 0)) (x1610 x1661)))
(define-fun x1590 ((x1661 Real)) Real (ite (and x1267 x2015 x1232) (x3056 x1661) (x1610 x1661)))
(define-fun x1393 ((x1661 Real)) Real (ite (and x2766 x1703) (x1903 x1661) (ite x1680 (x1590 x1661) (ite (and x1607 (not x1551)) (x523 x1661) (ite (and x1118 x978) (x2626 x1661) (x1903 x1661))))))
(define-fun x1262 ((x1661 Real)) Real (ite (= x1661 224) 0 (x2194 x1661)))
(define-fun x1453 ((x1661 Real)) Real (ite (= x1661 224) x1368 (x1262 x1661)))
(define-fun x988 ((x1661 Real)) Real (ite (= 256 x1661) 0 (x2971 x1661)))
(define-fun x2048 ((x1661 Real)) Real (ite (= 256 x1661) x347 (x988 x1661)))
(define-fun x771 ((x1661 Real)) Real (ite (= x2588 x1661) x2973 (x1393 x1661)))
(define-fun x1509 ((x1661 Real)) Real (ite (= x597 x1661) x1144 (x771 x1661)))
(define-fun x3044 ((x1661 Real)) Real (ite (= x1496 x1661) x221 (x1509 x1661)))
(define-fun x592 ((x1661 Real)) Real (ite (= x1729 x1661) x2675 (x2105 x1661)))
(define-fun x38 ((x1661 Real)) Real (ite (= x2373 x1661) x2560 (x3153 x1661)))
(define-fun x2475 ((x1661 Real)) Real (ite (= x1799 x1661) x438 (x1157 x1661)))
(define-fun x737 ((x1661 Real)) Real (ite (= x2023 x1661) 0 (x1157 x1661)))
(define-fun x1580 ((x1661 Real)) Real (ite (= x1661 x574) 0 (x1157 x1661)))
(define-fun x210 ((x1661 Real)) Real (ite x1680 (x2475 x1661) (ite (and (not x1551) x1607) (x737 x1661) (ite (and x1118 x978) (x1580 x1661) (x1095 x1661)))))
(define-fun x472 ((x1661 Real)) Real (ite (= x1661 x574) x1287 (x2035 x1661)))
(define-fun x820 ((x1661 Real)) Real (ite (and (< x1661 (+ x2439 x2805)) (>= x1661 x2439)) (x3113 (+ (- x1661 x2439) x1169)) (x2317 x1661)))
(define-fun x3016 ((x1661 Real)) Real (ite (= x1661 x2503) x3137 (x2390 x1661)))
(define-fun x1928 ((x1661 Real)) Real (ite (and x1864 (not x2416)) (x3015 x1661) (ite (and x1977 (not x773)) (x2390 x1661) (x3016 x1661))))
(define-fun x3065 ((x1661 Real)) Real (ite (= x1661 x1876) x2824 (x1407 x1661)))
(define-fun x332 ((x1661 Real)) Real (ite (= x1661 160) 0 (x1741 x1661)))
(define-fun x1623 ((x1661 Real)) Real (ite (= x1661 160) x579 (x332 x1661)))
(define-fun x2309 ((x1661 Real)) Real (ite (= x1043 x1661) x700 (x343 x1661)))
(define-fun x861 ((x1661 Real)) Real (ite (= x1661 x1043) x2595 (x343 x1661)))
(define-fun x2584 ((x1661 Real)) Real (ite (and (> (+ x1219 x2541) x1661) (<= x2541 x1661)) (x3113 (+ (- x1661 x2541) x1169)) (x712 x1661)))
(define-fun x406 ((x1661 Real)) Real (ite x2619 (x861 x1661) (x2309 x1661)))
(define-fun x2259 ((x1661 Real)) Real (ite (= x2394 x1661) x2226 (x536 x1661)))
(define-fun x1822 ((x1661 Real)) Real (ite (and x3072 (not x860)) (x536 x1661) (x2259 x1661)))
(define-fun x1010 ((x1661 Real)) Real (ite (= x1661 x372) x1311 (x237 x1661)))
(define-fun x1581 ((x1661 Real)) Real (ite (and x2617 (not x1834)) (x386 x1661) (ite (and x113 (not x584)) (x237 x1661) (x1010 x1661))))
(define-fun x49 ((x1661 Real)) Real (ite (= x1661 x2025) x2922 (x1581 x1661)))
(define-fun x1136 ((x1661 Real)) Real (ite x2619 (ite (and (not x1502) x3100) (x1380 x1661) (x1822 x1661)) (x49 x1661)))
(define-fun x791 ((x1661 Real)) Real (ite (= x1661 x1945) x1549 (x970 x1661)))
(define-fun x2063 ((x1661 Real)) Real (ite (= 192 x1661) 0 (x2278 x1661)))
(define-fun x2593 ((x1661 Real)) Real (ite (= 192 x1661) x2510 (x2063 x1661)))
(define-fun x2481 ((x1661 Real)) Real (ite (= 288 x1661) 0 (x440 x1661)))
(define-fun x1601 ((x1661 Real)) Real (ite (= x1661 x1237) x656 (x1892 x1661)))
(define-fun x1848 ((x1661 Real)) Real (ite (= x1661 x80) x1094 (x1537 x1661)))
(define-fun x149 ((x1661 Real)) Real (ite (= x1661 x3049) x1744 (x1290 x1661)))
(define-fun x2378 ((x1661 Real)) Real (ite (= x1661 x2816) x2660 (x831 x1661)))
(define-fun x2958 ((x1661 Real)) Real (ite (= x2902 x1661) x1973 (x175 x1661)))
(define-fun x2886 ((x1661 Real)) Real (ite (= 288 x1661) x2008 (x2481 x1661)))
(define-fun x2184 ((x1661 Real)) Real (ite (= 0 x1661) x1463 (x2252 x1661)))
(define-fun x1045 ((x1661 Real)) Real (ite (= x1661 0) x2009 (x2274 x1661)))
(define-fun x1664 ((x1661 Real)) Real (ite (= x1661 x1429) x2995 (x627 x1661)))
(define-fun x1544 ((x1661 Real)) Real (ite (= 0 x1661) x826 (x2252 x1661)))
(define-fun x1465 ((x1661 Real)) Real (ite (= 0 x1661) x2818 (x2274 x1661)))
(define-fun x611 ((x1661 Real)) Real (ite (= x1661 0) x239 (x1180 x1661)))
(define-fun x1149 ((x1661 Real)) Real (ite (= x1661 0) x3080 (x1180 x1661)))
(define-fun x319 ((x1661 Real)) Real (ite (= x1661 0) x677 (x2788 x1661)))
(define-fun x2342 ((x1661 Real)) Real (ite (= x1661 0) x1827 (x2788 x1661)))
(define-fun x2887 ((x1661 Real)) Real (ite (= x1661 0) x1303 (x1595 x1661)))
(define-fun x1421 ((x1661 Real)) Real (ite (= 0 x1661) x437 (x1595 x1661)))
(define-fun x1774 ((x1661 Real)) Real (ite (= 0 x1661) x147 (x130 x1661)))
(define-fun x3076 ((x1661 Real)) Real (ite (= 0 x1661) x848 (x130 x1661)))
(assert (axiom_frac_bound (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x232 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2349 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2832 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x785 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1100000000000000000 x2047 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1098 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1181 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1274 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1287 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2215 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2595 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2628 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2795 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x3070 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x58 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1004 x1331 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 100000000000000 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1098 32 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 32 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287 32 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x336 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1663 x2763 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1806 x2451 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1858 x2667 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2003 x1454 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2215 32 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2247 1000000000 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2471 x1978 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2595 32 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2769 x2447 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2807 x1208 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3 1000000000 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3070 32 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3122 x1164 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x315 x2652 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 x513 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x688 x2566 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x700 32 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729 x576 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897 x3160 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x935 x1871 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x968 x2933 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x982 1000000000000000000 (uninterp_frac (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 1000000000000000000 x232 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 1000000000000000000 x2349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 1000000000000000000 x2832 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 1000000000000000000 x785 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 1100000000000000000 x2047 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 32 x1098 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 32 x1181 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 32 x1274 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 32 x1287 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 32 x2215 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 32 x2595 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 32 x2628 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 32 x2795 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 32 x3070 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 32 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x1004 x1331 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x1059 100000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x1098 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x1181 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x1287 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x1573 x336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x1663 x2763 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x1806 x2451 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x1858 x2667 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x2003 x1454 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x2215 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x2247 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x2471 x1978 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x2595 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x2769 x2447 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x2807 x1208 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x3 1000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x3070 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x3122 x1164 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x315 x2652 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x618 x513 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x688 x2566 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x700 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x729 x576 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x897 x3160 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x935 x1871 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x968 x2933 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982 x982 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)))
(assert (axiom_frac_bound x1243 1000000000000000000))
(assert (axiom_frac_zero x1243 1000000000000000000 1000000000000000000 x232 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 1000000000000000000 x2349 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 1000000000000000000 x2832 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 1000000000000000000 x785 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 1100000000000000000 x2047 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 32 x1098 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 32 x1181 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 32 x1274 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 32 x1287 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 32 x2215 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 32 x2595 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 32 x2628 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 32 x2795 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 32 x3070 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 32 x58 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x1004 x1331 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x1059 100000000000000 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x1098 32 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x1181 32 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x1287 32 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x1573 x336 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x1663 x2763 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x1806 x2451 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x1858 x2667 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x2003 x1454 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x2215 32 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x2247 1000000000 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x2471 x1978 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x2595 32 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x2769 x2447 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x2807 x1208 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x3 1000000000 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x3070 32 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x3122 x1164 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x315 x2652 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x618 x513 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x688 x2566 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x700 32 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x729 x576 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x897 x3160 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x935 x1871 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x968 x2933 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_zero x1243 1000000000000000000 x982 1000000000000000000 (uninterp_frac x1243 1000000000000000000)))
(assert (axiom_frac_bound x1296 1000000000))
(assert (axiom_frac_zero x1296 1000000000 1000000000000000000 x232 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 1000000000000000000 x2349 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 1000000000000000000 x2832 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 1000000000000000000 x785 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 1100000000000000000 x2047 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 32 x1098 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 32 x1181 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 32 x1274 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 32 x1287 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 32 x2215 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 32 x2595 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 32 x2628 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 32 x2795 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 32 x3070 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 32 x58 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x1004 x1331 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x1059 100000000000000 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x1098 32 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x1181 32 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x1287 32 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x1573 x336 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x1663 x2763 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x1806 x2451 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x1858 x2667 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x2003 x1454 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x2215 32 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x2247 1000000000 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x2471 x1978 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x2595 32 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x2769 x2447 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x2807 x1208 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x3 1000000000 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x3070 32 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x3122 x1164 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x315 x2652 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x618 x513 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x688 x2566 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x700 32 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x729 x576 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x897 x3160 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x935 x1871 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x968 x2933 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_zero x1296 1000000000 x982 1000000000000000000 (uninterp_frac x1296 1000000000)))
(assert (axiom_frac_bound x133 x1442))
(assert (axiom_frac_zero x133 x1442 1000000000000000000 x232 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 1000000000000000000 x2349 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 1000000000000000000 x2832 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 1000000000000000000 x785 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 1100000000000000000 x2047 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 32 x1098 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 32 x1181 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 32 x1274 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 32 x1287 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 32 x2215 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 32 x2595 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 32 x2628 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 32 x2795 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 32 x3070 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 32 x58 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x1004 x1331 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x1059 100000000000000 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x1098 32 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x1181 32 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x1287 32 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x1573 x336 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x1663 x2763 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x1806 x2451 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x1858 x2667 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x2003 x1454 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x2215 32 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x2247 1000000000 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x2471 x1978 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x2595 32 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x2769 x2447 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x2807 x1208 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x3 1000000000 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x3070 32 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x3122 x1164 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x315 x2652 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x618 x513 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x688 x2566 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x700 32 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x729 x576 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x897 x3160 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x935 x1871 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x968 x2933 (uninterp_frac x133 x1442)))
(assert (axiom_frac_zero x133 x1442 x982 1000000000000000000 (uninterp_frac x133 x1442)))
(assert (axiom_frac_bound x1355 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 1000000000000000000 x232 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 1000000000000000000 x2349 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 1000000000000000000 x2832 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 1000000000000000000 x785 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 1100000000000000000 x2047 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 32 x1098 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 32 x1181 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 32 x1274 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 32 x1287 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 32 x2215 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 32 x2595 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 32 x2628 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 32 x2795 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 32 x3070 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 32 x58 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x1004 x1331 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x1059 100000000000000 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x1098 32 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x1181 32 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x1287 32 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x1573 x336 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x1663 x2763 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x1806 x2451 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x1858 x2667 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x2003 x1454 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x2215 32 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x2247 1000000000 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x2471 x1978 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x2595 32 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x2769 x2447 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x2807 x1208 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x3 1000000000 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x3070 32 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x3122 x1164 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x315 x2652 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x618 x513 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x688 x2566 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x700 32 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x729 x576 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x897 x3160 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x935 x1871 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x968 x2933 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1355 1461501637330902918203684832716283019655932542976 x982 1000000000000000000 (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x1447 1000000000000000000))
(assert (axiom_frac_zero x1447 1000000000000000000 1000000000000000000 x232 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 1000000000000000000 x2349 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 1000000000000000000 x2832 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 1000000000000000000 x785 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 1100000000000000000 x2047 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 32 x1098 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 32 x1181 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 32 x1274 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 32 x1287 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 32 x2215 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 32 x2595 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 32 x2628 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 32 x2795 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 32 x3070 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 32 x58 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x1004 x1331 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x1059 100000000000000 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x1098 32 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x1181 32 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x1287 32 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x1573 x336 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x1663 x2763 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x1806 x2451 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x1858 x2667 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x2003 x1454 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x2215 32 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x2247 1000000000 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x2471 x1978 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x2595 32 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x2769 x2447 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x2807 x1208 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x3 1000000000 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x3070 32 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x3122 x1164 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x315 x2652 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x618 x513 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x688 x2566 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x700 32 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x729 x576 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x897 x3160 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x935 x1871 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x968 x2933 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_zero x1447 1000000000000000000 x982 1000000000000000000 (uninterp_frac x1447 1000000000000000000)))
(assert (axiom_frac_bound x1468 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 1000000000000000000 x232 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 1000000000000000000 x2349 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 1000000000000000000 x2832 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 1000000000000000000 x785 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 1100000000000000000 x2047 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 32 x1098 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 32 x1181 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 32 x1274 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 32 x1287 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 32 x2215 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 32 x2595 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 32 x2628 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 32 x2795 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 32 x3070 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 32 x58 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x1004 x1331 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x1059 100000000000000 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x1098 32 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x1181 32 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x1287 32 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x1573 x336 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x1663 x2763 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x1806 x2451 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x1858 x2667 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x2003 x1454 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x2215 32 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x2247 1000000000 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x2471 x1978 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x2595 32 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x2769 x2447 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x2807 x1208 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x3 1000000000 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x3070 32 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x3122 x1164 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x315 x2652 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x618 x513 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x688 x2566 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x700 32 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x729 x576 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x897 x3160 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x935 x1871 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x968 x2933 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1468 1461501637330902918203684832716283019655932542976 x982 1000000000000000000 (uninterp_frac x1468 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x156 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 1000000000000000000 x232 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 1000000000000000000 x2349 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 1000000000000000000 x2832 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 1000000000000000000 x785 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 1100000000000000000 x2047 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 32 x1098 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 32 x1181 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 32 x1274 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 32 x1287 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 32 x2215 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 32 x2595 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 32 x2628 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 32 x2795 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 32 x3070 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 32 x58 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x1004 x1331 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x1059 100000000000000 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x1098 32 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x1181 32 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x1287 32 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x1573 x336 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x1663 x2763 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x1806 x2451 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x1858 x2667 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x2003 x1454 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x2215 32 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x2247 1000000000 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x2471 x1978 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x2595 32 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x2769 x2447 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x2807 x1208 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x3 1000000000 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x3070 32 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x3122 x1164 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x315 x2652 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x618 x513 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x688 x2566 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x700 32 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x729 x576 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x897 x3160 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x935 x1871 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x968 x2933 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x156 1461501637330902918203684832716283019655932542976 x982 1000000000000000000 (uninterp_frac x156 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x1579 1000000000))
(assert (axiom_frac_zero x1579 1000000000 1000000000000000000 x232 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 1000000000000000000 x2349 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 1000000000000000000 x2832 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 1000000000000000000 x785 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 1100000000000000000 x2047 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 32 x1098 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 32 x1181 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 32 x1274 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 32 x1287 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 32 x2215 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 32 x2595 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 32 x2628 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 32 x2795 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 32 x3070 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 32 x58 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x1004 x1331 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x1059 100000000000000 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x1098 32 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x1181 32 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x1287 32 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x1573 x336 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x1663 x2763 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x1806 x2451 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x1858 x2667 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x2003 x1454 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x2215 32 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x2247 1000000000 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x2471 x1978 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x2595 32 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x2769 x2447 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x2807 x1208 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x3 1000000000 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x3070 32 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x3122 x1164 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x315 x2652 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x618 x513 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x688 x2566 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x700 32 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x729 x576 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x897 x3160 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x935 x1871 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x968 x2933 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_zero x1579 1000000000 x982 1000000000000000000 (uninterp_frac x1579 1000000000)))
(assert (axiom_frac_bound x1640 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 1000000000000000000 x232 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 1000000000000000000 x2349 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 1000000000000000000 x2832 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 1000000000000000000 x785 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 1100000000000000000 x2047 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 32 x1098 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 32 x1181 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 32 x1274 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 32 x1287 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 32 x2215 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 32 x2595 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 32 x2628 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 32 x2795 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 32 x3070 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 32 x58 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x1004 x1331 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x1059 100000000000000 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x1098 32 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x1181 32 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x1287 32 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x1573 x336 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x1663 x2763 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x1806 x2451 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x1858 x2667 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x2003 x1454 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x2215 32 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x2247 1000000000 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x2471 x1978 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x2595 32 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x2769 x2447 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x2807 x1208 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x3 1000000000 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x3070 32 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x3122 x1164 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x315 x2652 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x618 x513 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x688 x2566 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x700 32 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x729 x576 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x897 x3160 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x935 x1871 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x968 x2933 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x1640 1461501637330902918203684832716283019655932542976 x982 1000000000000000000 (uninterp_frac x1640 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x1713 1000000000000000000000000000000000000))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 1000000000000000000 x232 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 1000000000000000000 x2349 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 1000000000000000000 x2832 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 1000000000000000000 x785 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 1100000000000000000 x2047 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 32 x1098 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 32 x1181 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 32 x1274 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 32 x1287 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 32 x2215 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 32 x2595 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 32 x2628 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 32 x2795 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 32 x3070 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 32 x58 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x1004 x1331 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x1059 100000000000000 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x1098 32 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x1181 32 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x1287 32 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x1573 x336 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x1663 x2763 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x1806 x2451 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x1858 x2667 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x2003 x1454 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x2215 32 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x2247 1000000000 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x2471 x1978 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x2595 32 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x2769 x2447 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x2807 x1208 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x3 1000000000 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x3070 32 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x3122 x1164 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x315 x2652 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x618 x513 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x688 x2566 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x700 32 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x729 x576 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x897 x3160 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x935 x1871 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x968 x2933 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x1713 1000000000000000000000000000000000000 x982 1000000000000000000 (uninterp_frac x1713 1000000000000000000000000000000000000)))
(assert (axiom_frac_bound x1868 1000000000000000000))
(assert (axiom_frac_zero x1868 1000000000000000000 1000000000000000000 x232 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 1000000000000000000 x2349 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 1000000000000000000 x2832 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 1000000000000000000 x785 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 1100000000000000000 x2047 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 32 x1098 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 32 x1181 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 32 x1274 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 32 x1287 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 32 x2215 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 32 x2595 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 32 x2628 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 32 x2795 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 32 x3070 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 32 x58 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x1004 x1331 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x1059 100000000000000 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x1098 32 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x1181 32 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x1287 32 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x1573 x336 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x1663 x2763 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x1806 x2451 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x1858 x2667 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x2003 x1454 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x2215 32 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x2247 1000000000 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x2471 x1978 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x2595 32 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x2769 x2447 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x2807 x1208 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x3 1000000000 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x3070 32 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x3122 x1164 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x315 x2652 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x618 x513 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x688 x2566 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x700 32 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x729 x576 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x897 x3160 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x935 x1871 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x968 x2933 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_zero x1868 1000000000000000000 x982 1000000000000000000 (uninterp_frac x1868 1000000000000000000)))
(assert (axiom_frac_bound x2068 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 1000000000000000000 x232 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 1000000000000000000 x2349 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 1000000000000000000 x2832 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 1000000000000000000 x785 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 1100000000000000000 x2047 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 32 x1098 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 32 x1181 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 32 x1274 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 32 x1287 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 32 x2215 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 32 x2595 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 32 x2628 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 32 x2795 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 32 x3070 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 32 x58 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x1004 x1331 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x1059 100000000000000 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x1098 32 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x1181 32 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x1287 32 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x1573 x336 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x1663 x2763 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x1806 x2451 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x1858 x2667 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x2003 x1454 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x2215 32 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x2247 1000000000 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x2471 x1978 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x2595 32 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x2769 x2447 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x2807 x1208 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x3 1000000000 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x3070 32 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x3122 x1164 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x315 x2652 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x618 x513 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x688 x2566 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x700 32 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x729 x576 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x897 x3160 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x935 x1871 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x968 x2933 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2068 1461501637330902918203684832716283019655932542976 x982 1000000000000000000 (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x2526 x1258))
(assert (axiom_frac_zero x2526 x1258 1000000000000000000 x232 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 1000000000000000000 x2349 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 1000000000000000000 x2832 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 1000000000000000000 x785 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 1100000000000000000 x2047 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 32 x1098 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 32 x1181 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 32 x1274 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 32 x1287 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 32 x2215 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 32 x2595 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 32 x2628 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 32 x2795 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 32 x3070 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 32 x58 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x1004 x1331 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x1059 100000000000000 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x1098 32 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x1181 32 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x1287 32 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x1573 x336 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x1663 x2763 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x1806 x2451 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x1858 x2667 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x2003 x1454 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x2215 32 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x2247 1000000000 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x2471 x1978 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x2595 32 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x2769 x2447 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x2807 x1208 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x3 1000000000 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x3070 32 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x3122 x1164 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x315 x2652 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x618 x513 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x688 x2566 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x700 32 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x729 x576 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x897 x3160 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x935 x1871 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x968 x2933 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_zero x2526 x1258 x982 1000000000000000000 (uninterp_frac x2526 x1258)))
(assert (axiom_frac_bound x2734 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 1000000000000000000 x232 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 1000000000000000000 x2349 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 1000000000000000000 x2832 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 1000000000000000000 x785 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 1100000000000000000 x2047 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 32 x1098 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 32 x1181 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 32 x1274 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 32 x1287 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 32 x2215 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 32 x2595 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 32 x2628 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 32 x2795 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 32 x3070 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 32 x58 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x1004 x1331 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x1059 100000000000000 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x1098 32 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x1181 32 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x1287 32 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x1573 x336 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x1663 x2763 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x1806 x2451 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x1858 x2667 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x2003 x1454 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x2215 32 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x2247 1000000000 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x2471 x1978 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x2595 32 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x2769 x2447 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x2807 x1208 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x3 1000000000 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x3070 32 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x3122 x1164 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x315 x2652 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x618 x513 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x688 x2566 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x700 32 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x729 x576 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x897 x3160 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x935 x1871 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x968 x2933 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x2734 1461501637330902918203684832716283019655932542976 x982 1000000000000000000 (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x2778 x2391))
(assert (axiom_frac_zero x2778 x2391 1000000000000000000 x232 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 1000000000000000000 x2349 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 1000000000000000000 x2832 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 1000000000000000000 x785 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 1100000000000000000 x2047 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 32 x1098 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 32 x1181 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 32 x1274 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 32 x1287 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 32 x2215 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 32 x2595 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 32 x2628 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 32 x2795 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 32 x3070 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 32 x58 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x1004 x1331 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x1059 100000000000000 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x1098 32 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x1181 32 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x1287 32 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x1573 x336 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x1663 x2763 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x1806 x2451 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x1858 x2667 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x2003 x1454 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x2215 32 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x2247 1000000000 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x2471 x1978 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x2595 32 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x2769 x2447 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x2807 x1208 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x3 1000000000 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x3070 32 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x3122 x1164 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x315 x2652 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x618 x513 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x688 x2566 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x700 32 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x729 x576 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x897 x3160 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x935 x1871 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x968 x2933 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_zero x2778 x2391 x982 1000000000000000000 (uninterp_frac x2778 x2391)))
(assert (axiom_frac_bound x2884 x2407))
(assert (axiom_frac_zero x2884 x2407 1000000000000000000 x232 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 1000000000000000000 x2349 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 1000000000000000000 x2832 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 1000000000000000000 x785 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 1100000000000000000 x2047 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 32 x1098 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 32 x1181 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 32 x1274 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 32 x1287 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 32 x2215 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 32 x2595 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 32 x2628 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 32 x2795 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 32 x3070 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 32 x58 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x1004 x1331 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x1059 100000000000000 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x1098 32 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x1181 32 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x1287 32 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x1573 x336 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x1663 x2763 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x1806 x2451 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x1858 x2667 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x2003 x1454 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x2215 32 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x2247 1000000000 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x2471 x1978 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x2595 32 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x2769 x2447 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x2807 x1208 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x3 1000000000 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x3070 32 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x3122 x1164 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x315 x2652 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x618 x513 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x688 x2566 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x700 32 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x729 x576 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x897 x3160 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x935 x1871 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x968 x2933 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_zero x2884 x2407 x982 1000000000000000000 (uninterp_frac x2884 x2407)))
(assert (axiom_frac_bound x2929 x2391))
(assert (axiom_frac_zero x2929 x2391 1000000000000000000 x232 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 1000000000000000000 x2349 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 1000000000000000000 x2832 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 1000000000000000000 x785 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 1100000000000000000 x2047 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 32 x1098 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 32 x1181 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 32 x1274 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 32 x1287 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 32 x2215 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 32 x2595 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 32 x2628 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 32 x2795 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 32 x3070 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 32 x58 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x1004 x1331 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x1059 100000000000000 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x1098 32 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x1181 32 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x1287 32 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x1573 x336 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x1663 x2763 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x1806 x2451 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x1858 x2667 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x2003 x1454 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x2215 32 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x2247 1000000000 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x2471 x1978 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x2595 32 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x2769 x2447 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x2807 x1208 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x3 1000000000 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x3070 32 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x3122 x1164 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x315 x2652 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x618 x513 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x688 x2566 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x700 32 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x729 x576 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x897 x3160 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x935 x1871 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x968 x2933 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_zero x2929 x2391 x982 1000000000000000000 (uninterp_frac x2929 x2391)))
(assert (axiom_frac_bound x3062 x2225))
(assert (axiom_frac_zero x3062 x2225 1000000000000000000 x232 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 1000000000000000000 x2349 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 1000000000000000000 x2832 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 1000000000000000000 x785 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 1100000000000000000 x2047 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 32 x1098 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 32 x1181 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 32 x1274 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 32 x1287 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 32 x2215 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 32 x2595 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 32 x2628 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 32 x2795 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 32 x3070 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 32 x58 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x1004 x1331 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x1059 100000000000000 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x1098 32 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x1181 32 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x1287 32 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x1573 x336 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x1663 x2763 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x1806 x2451 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x1858 x2667 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x2003 x1454 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x2215 32 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x2247 1000000000 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x2471 x1978 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x2595 32 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x2769 x2447 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x2807 x1208 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x3 1000000000 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x3070 32 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x3122 x1164 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x315 x2652 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x618 x513 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x688 x2566 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x700 32 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x729 x576 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x897 x3160 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x935 x1871 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x968 x2933 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_zero x3062 x2225 x982 1000000000000000000 (uninterp_frac x3062 x2225)))
(assert (axiom_frac_bound x3069 x292))
(assert (axiom_frac_zero x3069 x292 1000000000000000000 x232 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 1000000000000000000 x2349 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 1000000000000000000 x2832 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 1000000000000000000 x785 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 1100000000000000000 x2047 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 32 x1098 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 32 x1181 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 32 x1274 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 32 x1287 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 32 x2215 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 32 x2595 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 32 x2628 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 32 x2795 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 32 x3070 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 32 x58 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x1004 x1331 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x1059 100000000000000 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x1098 32 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x1181 32 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x1287 32 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x1573 x336 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x1663 x2763 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x1806 x2451 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x1858 x2667 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x2003 x1454 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x2215 32 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x2247 1000000000 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x2471 x1978 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x2595 32 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x2769 x2447 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x2807 x1208 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x3 1000000000 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x3070 32 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x3122 x1164 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x315 x2652 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x618 x513 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x688 x2566 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x700 32 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x729 x576 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x897 x3160 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x935 x1871 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x968 x2933 (uninterp_frac x3069 x292)))
(assert (axiom_frac_zero x3069 x292 x982 1000000000000000000 (uninterp_frac x3069 x292)))
(assert (axiom_frac_bound x3098 1000000000000000000))
(assert (axiom_frac_zero x3098 1000000000000000000 1000000000000000000 x232 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 1000000000000000000 x2349 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 1000000000000000000 x2832 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 1000000000000000000 x785 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 1100000000000000000 x2047 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 32 x1098 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 32 x1181 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 32 x1274 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 32 x1287 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 32 x2215 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 32 x2595 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 32 x2628 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 32 x2795 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 32 x3070 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 32 x58 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x1004 x1331 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x1059 100000000000000 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x1098 32 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x1181 32 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x1287 32 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x1573 x336 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x1663 x2763 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x1806 x2451 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x1858 x2667 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x2003 x1454 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x2215 32 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x2247 1000000000 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x2471 x1978 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x2595 32 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x2769 x2447 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x2807 x1208 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x3 1000000000 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x3070 32 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x3122 x1164 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x315 x2652 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x618 x513 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x688 x2566 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x700 32 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x729 x576 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x897 x3160 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x935 x1871 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x968 x2933 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_zero x3098 1000000000000000000 x982 1000000000000000000 (uninterp_frac x3098 1000000000000000000)))
(assert (axiom_frac_bound x466 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 1000000000000000000 x232 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 1000000000000000000 x2349 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 1000000000000000000 x2832 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 1000000000000000000 x785 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 1100000000000000000 x2047 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 32 x1098 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 32 x1181 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 32 x1274 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 32 x1287 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 32 x2215 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 32 x2595 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 32 x2628 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 32 x2795 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 32 x3070 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 32 x58 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x1004 x1331 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x1059 100000000000000 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x1098 32 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x1181 32 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x1287 32 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x1573 x336 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x1663 x2763 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x1806 x2451 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x1858 x2667 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x2003 x1454 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x2215 32 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x2247 1000000000 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x2471 x1978 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x2595 32 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x2769 x2447 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x2807 x1208 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x3 1000000000 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x3070 32 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x3122 x1164 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x315 x2652 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x618 x513 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x688 x2566 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x700 32 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x729 x576 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x897 x3160 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x935 x1871 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x968 x2933 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x466 1461501637330902918203684832716283019655932542976 x982 1000000000000000000 (uninterp_frac x466 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x521 x2757))
(assert (axiom_frac_zero x521 x2757 1000000000000000000 x232 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 1000000000000000000 x2349 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 1000000000000000000 x2832 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 1000000000000000000 x785 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 1100000000000000000 x2047 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 32 x1098 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 32 x1181 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 32 x1274 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 32 x1287 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 32 x2215 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 32 x2595 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 32 x2628 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 32 x2795 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 32 x3070 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 32 x58 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x1004 x1331 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x1059 100000000000000 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x1098 32 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x1181 32 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x1287 32 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x1573 x336 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x1663 x2763 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x1806 x2451 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x1858 x2667 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x2003 x1454 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x2215 32 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x2247 1000000000 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x2471 x1978 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x2595 32 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x2769 x2447 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x2807 x1208 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x3 1000000000 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x3070 32 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x3122 x1164 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x315 x2652 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x618 x513 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x688 x2566 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x700 32 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x729 x576 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x897 x3160 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x935 x1871 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x968 x2933 (uninterp_frac x521 x2757)))
(assert (axiom_frac_zero x521 x2757 x982 1000000000000000000 (uninterp_frac x521 x2757)))
(assert (axiom_frac_bound x53 1000000000000000000000000000000000000))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 1000000000000000000 x232 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 1000000000000000000 x2349 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 1000000000000000000 x2832 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 1000000000000000000 x785 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 1100000000000000000 x2047 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 32 x1098 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 32 x1181 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 32 x1274 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 32 x1287 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 32 x2215 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 32 x2595 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 32 x2628 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 32 x2795 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 32 x3070 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 32 x58 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x1004 x1331 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x1059 100000000000000 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x1098 32 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x1181 32 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x1287 32 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x1573 x336 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x1663 x2763 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x1806 x2451 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x1858 x2667 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x2003 x1454 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x2215 32 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x2247 1000000000 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x2471 x1978 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x2595 32 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x2769 x2447 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x2807 x1208 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x3 1000000000 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x3070 32 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x3122 x1164 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x315 x2652 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x618 x513 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x688 x2566 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x700 32 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x729 x576 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x897 x3160 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x935 x1871 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x968 x2933 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_zero x53 1000000000000000000000000000000000000 x982 1000000000000000000 (uninterp_frac x53 1000000000000000000000000000000000000)))
(assert (axiom_frac_bound x560 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 1000000000000000000 x232 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 1000000000000000000 x2349 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 1000000000000000000 x2832 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 1000000000000000000 x785 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 1100000000000000000 x2047 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 32 x1098 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 32 x1181 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 32 x1274 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 32 x1287 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 32 x2215 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 32 x2595 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 32 x2628 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 32 x2795 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 32 x3070 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 32 x58 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x1004 x1331 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x1059 100000000000000 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x1098 32 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x1181 32 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x1287 32 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x1573 x336 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x1663 x2763 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x1806 x2451 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x1858 x2667 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x2003 x1454 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x2215 32 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x2247 1000000000 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x2471 x1978 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x2595 32 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x2769 x2447 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x2807 x1208 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x3 1000000000 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x3070 32 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x3122 x1164 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x315 x2652 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x618 x513 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x688 x2566 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x700 32 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x729 x576 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x897 x3160 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x935 x1871 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x968 x2933 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x560 1461501637330902918203684832716283019655932542976 x982 1000000000000000000 (uninterp_frac x560 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x827 1000000000000000000))
(assert (axiom_frac_zero x827 1000000000000000000 1000000000000000000 x232 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 1000000000000000000 x2349 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 1000000000000000000 x2832 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 1000000000000000000 x785 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 1100000000000000000 x2047 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 32 x1098 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 32 x1181 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 32 x1274 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 32 x1287 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 32 x2215 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 32 x2595 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 32 x2628 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 32 x2795 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 32 x3070 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 32 x58 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x1004 x1331 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x1059 100000000000000 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x1098 32 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x1181 32 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x1287 32 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x1573 x336 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x1663 x2763 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x1806 x2451 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x1858 x2667 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x2003 x1454 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x2215 32 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x2247 1000000000 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x2471 x1978 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x2595 32 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x2769 x2447 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x2807 x1208 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x3 1000000000 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x3070 32 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x3122 x1164 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x315 x2652 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x618 x513 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x688 x2566 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x700 32 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x729 x576 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x897 x3160 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x935 x1871 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x968 x2933 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_zero x827 1000000000000000000 x982 1000000000000000000 (uninterp_frac x827 1000000000000000000)))
(assert (axiom_frac_bound x882 1000000000))
(assert (axiom_frac_zero x882 1000000000 1000000000000000000 x232 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 1000000000000000000 x2349 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 1000000000000000000 x2832 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 1000000000000000000 x785 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 1100000000000000000 x2047 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 32 x1098 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 32 x1181 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 32 x1274 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 32 x1287 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 32 x2215 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 32 x2595 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 32 x2628 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 32 x2795 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 32 x3070 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 32 x58 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x1004 x1331 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x1059 100000000000000 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x1098 32 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x1181 32 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x1287 32 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x1573 x336 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x1663 x2763 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x1806 x2451 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x1858 x2667 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x2003 x1454 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x2215 32 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x2247 1000000000 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x2471 x1978 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x2595 32 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x2769 x2447 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x2807 x1208 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x3 1000000000 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x3070 32 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x3122 x1164 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x315 x2652 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x618 x513 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x688 x2566 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x700 32 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x729 x576 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x897 x3160 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x935 x1871 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x968 x2933 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_zero x882 1000000000 x982 1000000000000000000 (uninterp_frac x882 1000000000)))
(assert (axiom_frac_bound x899 1000000000))
(assert (axiom_frac_zero x899 1000000000 1000000000000000000 x232 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 1000000000000000000 x2349 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 1000000000000000000 x2832 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 1000000000000000000 x785 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 1100000000000000000 x2047 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 32 x1098 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 32 x1181 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 32 x1274 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 32 x1287 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 32 x2215 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 32 x2595 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 32 x2628 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 32 x2795 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 32 x3070 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 32 x58 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x1004 x1331 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x1059 100000000000000 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x1098 32 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x1181 32 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x1287 32 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x1573 x336 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x1663 x2763 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x1806 x2451 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x1858 x2667 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x2003 x1454 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x2215 32 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x2247 1000000000 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x2471 x1978 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x2595 32 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x2769 x2447 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x2807 x1208 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x3 1000000000 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x3070 32 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x3122 x1164 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x315 x2652 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x618 x513 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x688 x2566 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x700 32 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x729 x576 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x897 x3160 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x935 x1871 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x968 x2933 (uninterp_frac x899 1000000000)))
(assert (axiom_frac_zero x899 1000000000 x982 1000000000000000000 (uninterp_frac x899 1000000000)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x100))
(assert (axiom_int_approximation x1004))
(assert (axiom_int_approximation x1005))
(assert (axiom_int_approximation x1009))
(assert (axiom_int_approximation x1012))
(assert (axiom_int_approximation x1016))
(assert (axiom_int_approximation x1017))
(assert (axiom_int_approximation x1018))
(assert (axiom_int_approximation x1019))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x1029))
(assert (axiom_int_approximation x103))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1032))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x1036))
(assert (axiom_int_approximation x1038))
(assert (axiom_int_approximation x1039))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x1042))
(assert (axiom_int_approximation x1043))
(assert (axiom_int_approximation x1044))
(assert (axiom_int_approximation x1046))
(assert (axiom_int_approximation x1047))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1050))
(assert (axiom_int_approximation x1051))
(assert (axiom_int_approximation x1055))
(assert (axiom_int_approximation x1058))
(assert (axiom_int_approximation x1059))
(assert (axiom_int_approximation x1060))
(assert (axiom_int_approximation x1062))
(assert (axiom_int_approximation x1066))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1070))
(assert (axiom_int_approximation x1073))
(assert (axiom_int_approximation x1074))
(assert (axiom_int_approximation x1075))
(assert (axiom_int_approximation x1080))
(assert (axiom_int_approximation x1081))
(assert (axiom_int_approximation x1089))
(assert (axiom_int_approximation x1091))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1096))
(assert (axiom_int_approximation x1098))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1100))
(assert (axiom_int_approximation x1104))
(assert (axiom_int_approximation x1105))
(assert (axiom_int_approximation x1106))
(assert (axiom_int_approximation x1107))
(assert (axiom_int_approximation x1108))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x1117))
(assert (axiom_int_approximation x1122))
(assert (axiom_int_approximation x1128))
(assert (axiom_int_approximation x1129))
(assert (axiom_int_approximation x1130))
(assert (axiom_int_approximation x1137))
(assert (axiom_int_approximation x1138))
(assert (axiom_int_approximation x1139))
(assert (axiom_int_approximation x1140))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1144))
(assert (axiom_int_approximation x1146))
(assert (axiom_int_approximation x1147))
(assert (axiom_int_approximation x1151))
(assert (axiom_int_approximation x1161))
(assert (axiom_int_approximation x1163))
(assert (axiom_int_approximation x1164))
(assert (axiom_int_approximation x1169))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1172))
(assert (axiom_int_approximation x1176))
(assert (axiom_int_approximation x1178))
(assert (axiom_int_approximation x1181))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1188))
(assert (axiom_int_approximation x1189))
(assert (axiom_int_approximation x119))
(assert (axiom_int_approximation x1191))
(assert (axiom_int_approximation x1193))
(assert (axiom_int_approximation x1194))
(assert (axiom_int_approximation x1195))
(assert (axiom_int_approximation x1196))
(assert (axiom_int_approximation x1197))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1202))
(assert (axiom_int_approximation x1208))
(assert (axiom_int_approximation x1210))
(assert (axiom_int_approximation x1213))
(assert (axiom_int_approximation x1218))
(assert (axiom_int_approximation x1219))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1225))
(assert (axiom_int_approximation x1229))
(assert (axiom_int_approximation x1231))
(assert (axiom_int_approximation x1233))
(assert (axiom_int_approximation x1236))
(assert (axiom_int_approximation x1237))
(assert (axiom_int_approximation x1238))
(assert (axiom_int_approximation x1239))
(assert (axiom_int_approximation x1241))
(assert (axiom_int_approximation x1243))
(assert (axiom_int_approximation x1244))
(assert (axiom_int_approximation x1246))
(assert (axiom_int_approximation x1248))
(assert (axiom_int_approximation x125))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1258))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x1263))
(assert (axiom_int_approximation x1266))
(assert (axiom_int_approximation x1269))
(assert (axiom_int_approximation x127))
(assert (axiom_int_approximation x1272))
(assert (axiom_int_approximation x1274))
(assert (axiom_int_approximation x1275))
(assert (axiom_int_approximation x1279))
(assert (axiom_int_approximation x1280))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x1287))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1296))
(assert (axiom_int_approximation x1297))
(assert (axiom_int_approximation x1299))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1303))
(assert (axiom_int_approximation x1306))
(assert (axiom_int_approximation x1307))
(assert (axiom_int_approximation x1308))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x1311))
(assert (axiom_int_approximation x1312))
(assert (axiom_int_approximation x1313))
(assert (axiom_int_approximation x1314))
(assert (axiom_int_approximation x1315))
(assert (axiom_int_approximation x1317))
(assert (axiom_int_approximation x1324))
(assert (axiom_int_approximation x1327))
(assert (axiom_int_approximation x1328))
(assert (axiom_int_approximation x133))
(assert (axiom_int_approximation x1331))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x1339))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x1340))
(assert (axiom_int_approximation x1342))
(assert (axiom_int_approximation x1343))
(assert (axiom_int_approximation x1345))
(assert (axiom_int_approximation x1346))
(assert (axiom_int_approximation x1351))
(assert (axiom_int_approximation x1352))
(assert (axiom_int_approximation x1355))
(assert (axiom_int_approximation x1356))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x1361))
(assert (axiom_int_approximation x1365))
(assert (axiom_int_approximation x1366))
(assert (axiom_int_approximation x1368))
(assert (axiom_int_approximation x1369))
(assert (axiom_int_approximation x137))
(assert (axiom_int_approximation x1372))
(assert (axiom_int_approximation x1375))
(assert (axiom_int_approximation x1382))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x1386))
(assert (axiom_int_approximation x1388))
(assert (axiom_int_approximation x1391))
(assert (axiom_int_approximation x1392))
(assert (axiom_int_approximation x1395))
(assert (axiom_int_approximation x1396))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x1401))
(assert (axiom_int_approximation x1408))
(assert (axiom_int_approximation x1409))
(assert (axiom_int_approximation x1412))
(assert (axiom_int_approximation x1414))
(assert (axiom_int_approximation x1418))
(assert (axiom_int_approximation x1422))
(assert (axiom_int_approximation x1424))
(assert (axiom_int_approximation x1427))
(assert (axiom_int_approximation x1428))
(assert (axiom_int_approximation x1429))
(assert (axiom_int_approximation x1432))
(assert (axiom_int_approximation x1435))
(assert (axiom_int_approximation x1438))
(assert (axiom_int_approximation x1441))
(assert (axiom_int_approximation x1442))
(assert (axiom_int_approximation x1443))
(assert (axiom_int_approximation x1445))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x1447))
(assert (axiom_int_approximation x1449))
(assert (axiom_int_approximation x145))
(assert (axiom_int_approximation x1450))
(assert (axiom_int_approximation x1454))
(assert (axiom_int_approximation x1457))
(assert (axiom_int_approximation x1463))
(assert (axiom_int_approximation x1466))
(assert (axiom_int_approximation x1468))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x1470))
(assert (axiom_int_approximation x1472))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1476))
(assert (axiom_int_approximation x1477))
(assert (axiom_int_approximation x1478))
(assert (axiom_int_approximation x1480))
(assert (axiom_int_approximation x1482))
(assert (axiom_int_approximation x1483))
(assert (axiom_int_approximation x1485))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x1493))
(assert (axiom_int_approximation x1494))
(assert (axiom_int_approximation x1496))
(assert (axiom_int_approximation x1498))
(assert (axiom_int_approximation x1499))
(assert (axiom_int_approximation x1504))
(assert (axiom_int_approximation x1506))
(assert (axiom_int_approximation x1508))
(assert (axiom_int_approximation x151))
(assert (axiom_int_approximation x1511))
(assert (axiom_int_approximation x1513))
(assert (axiom_int_approximation x1514))
(assert (axiom_int_approximation x1516))
(assert (axiom_int_approximation x1521))
(assert (axiom_int_approximation x1524))
(assert (axiom_int_approximation x1526))
(assert (axiom_int_approximation x1536))
(assert (axiom_int_approximation x1539))
(assert (axiom_int_approximation x1541))
(assert (axiom_int_approximation x1542))
(assert (axiom_int_approximation x1548))
(assert (axiom_int_approximation x1549))
(assert (axiom_int_approximation x155))
(assert (axiom_int_approximation x1554))
(assert (axiom_int_approximation x1559))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x1561))
(assert (axiom_int_approximation x1562))
(assert (axiom_int_approximation x1564))
(assert (axiom_int_approximation x1565))
(assert (axiom_int_approximation x1568))
(assert (axiom_int_approximation x1569))
(assert (axiom_int_approximation x1570))
(assert (axiom_int_approximation x1571))
(assert (axiom_int_approximation x1572))
(assert (axiom_int_approximation x1573))
(assert (axiom_int_approximation x1579))
(assert (axiom_int_approximation x1584))
(assert (axiom_int_approximation x1585))
(assert (axiom_int_approximation x1591))
(assert (axiom_int_approximation x1594))
(assert (axiom_int_approximation x1596))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x1605))
(assert (axiom_int_approximation x1606))
(assert (axiom_int_approximation x1615))
(assert (axiom_int_approximation x1616))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x1622))
(assert (axiom_int_approximation x1624))
(assert (axiom_int_approximation x1627))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x1631))
(assert (axiom_int_approximation x1632))
(assert (axiom_int_approximation x1635))
(assert (axiom_int_approximation x1636))
(assert (axiom_int_approximation x1638))
(assert (axiom_int_approximation x1639))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x1640))
(assert (axiom_int_approximation x1644))
(assert (axiom_int_approximation x1645))
(assert (axiom_int_approximation x1647))
(assert (axiom_int_approximation x1648))
(assert (axiom_int_approximation x1649))
(assert (axiom_int_approximation x165))
(assert (axiom_int_approximation x1651))
(assert (axiom_int_approximation x1655))
(assert (axiom_int_approximation x1656))
(assert (axiom_int_approximation x1658))
(assert (axiom_int_approximation x1663))
(assert (axiom_int_approximation x1671))
(assert (axiom_int_approximation x1672))
(assert (axiom_int_approximation x1676))
(assert (axiom_int_approximation x1678))
(assert (axiom_int_approximation x1685))
(assert (axiom_int_approximation x1687))
(assert (axiom_int_approximation x169))
(assert (axiom_int_approximation x1697))
(assert (axiom_int_approximation x1698))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x1701))
(assert (axiom_int_approximation x1702))
(assert (axiom_int_approximation x1704))
(assert (axiom_int_approximation x1707))
(assert (axiom_int_approximation x1709))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x1712))
(assert (axiom_int_approximation x1713))
(assert (axiom_int_approximation x1716))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x1720))
(assert (axiom_int_approximation x1722))
(assert (axiom_int_approximation x1723))
(assert (axiom_int_approximation x1726))
(assert (axiom_int_approximation x1727))
(assert (axiom_int_approximation x1728))
(assert (axiom_int_approximation x1729))
(assert (axiom_int_approximation x1730))
(assert (axiom_int_approximation x1732))
(assert (axiom_int_approximation x1734))
(assert (axiom_int_approximation x1735))
(assert (axiom_int_approximation x1736))
(assert (axiom_int_approximation x1740))
(assert (axiom_int_approximation x1742))
(assert (axiom_int_approximation x1743))
(assert (axiom_int_approximation x1744))
(assert (axiom_int_approximation x1746))
(assert (axiom_int_approximation x1748))
(assert (axiom_int_approximation x1749))
(assert (axiom_int_approximation x1753))
(assert (axiom_int_approximation x1754))
(assert (axiom_int_approximation x1756))
(assert (axiom_int_approximation x1757))
(assert (axiom_int_approximation x1760))
(assert (axiom_int_approximation x1761))
(assert (axiom_int_approximation x1763))
(assert (axiom_int_approximation x1764))
(assert (axiom_int_approximation x1765))
(assert (axiom_int_approximation x1766))
(assert (axiom_int_approximation x1769))
(assert (axiom_int_approximation x177))
(assert (axiom_int_approximation x1771))
(assert (axiom_int_approximation x1773))
(assert (axiom_int_approximation x1777))
(assert (axiom_int_approximation x1779))
(assert (axiom_int_approximation x1789))
(assert (axiom_int_approximation x179))
(assert (axiom_int_approximation x1799))
(assert (axiom_int_approximation x1803))
(assert (axiom_int_approximation x1804))
(assert (axiom_int_approximation x1806))
(assert (axiom_int_approximation x1808))
(assert (axiom_int_approximation x1809))
(assert (axiom_int_approximation x181))
(assert (axiom_int_approximation x1817))
(assert (axiom_int_approximation x1819))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x1824))
(assert (axiom_int_approximation x1825))
(assert (axiom_int_approximation x1827))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x1833))
(assert (axiom_int_approximation x1836))
(assert (axiom_int_approximation x1837))
(assert (axiom_int_approximation x1838))
(assert (axiom_int_approximation x184))
(assert (axiom_int_approximation x1842))
(assert (axiom_int_approximation x1845))
(assert (axiom_int_approximation x1847))
(assert (axiom_int_approximation x185))
(assert (axiom_int_approximation x1855))
(assert (axiom_int_approximation x1858))
(assert (axiom_int_approximation x1859))
(assert (axiom_int_approximation x1860))
(assert (axiom_int_approximation x1867))
(assert (axiom_int_approximation x1868))
(assert (axiom_int_approximation x1869))
(assert (axiom_int_approximation x1871))
(assert (axiom_int_approximation x1876))
(assert (axiom_int_approximation x188))
(assert (axiom_int_approximation x1882))
(assert (axiom_int_approximation x1889))
(assert (axiom_int_approximation x1890))
(assert (axiom_int_approximation x1891))
(assert (axiom_int_approximation x1894))
(assert (axiom_int_approximation x1896))
(assert (axiom_int_approximation x1897))
(assert (axiom_int_approximation x1898))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x1901))
(assert (axiom_int_approximation x1902))
(assert (axiom_int_approximation x1906))
(assert (axiom_int_approximation x191))
(assert (axiom_int_approximation x1910))
(assert (axiom_int_approximation x1911))
(assert (axiom_int_approximation x1912))
(assert (axiom_int_approximation x1913))
(assert (axiom_int_approximation x1914))
(assert (axiom_int_approximation x1916))
(assert (axiom_int_approximation x1917))
(assert (axiom_int_approximation x1919))
(assert (axiom_int_approximation x1921))
(assert (axiom_int_approximation x1923))
(assert (axiom_int_approximation x1925))
(assert (axiom_int_approximation x1927))
(assert (axiom_int_approximation x1931))
(assert (axiom_int_approximation x1933))
(assert (axiom_int_approximation x1934))
(assert (axiom_int_approximation x1937))
(assert (axiom_int_approximation x1942))
(assert (axiom_int_approximation x1945))
(assert (axiom_int_approximation x1946))
(assert (axiom_int_approximation x1947))
(assert (axiom_int_approximation x1948))
(assert (axiom_int_approximation x1949))
(assert (axiom_int_approximation x1951))
(assert (axiom_int_approximation x1952))
(assert (axiom_int_approximation x1954))
(assert (axiom_int_approximation x1956))
(assert (axiom_int_approximation x1957))
(assert (axiom_int_approximation x1959))
(assert (axiom_int_approximation x196))
(assert (axiom_int_approximation x1962))
(assert (axiom_int_approximation x1963))
(assert (axiom_int_approximation x1964))
(assert (axiom_int_approximation x1965))
(assert (axiom_int_approximation x1968))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x1970))
(assert (axiom_int_approximation x1973))
(assert (axiom_int_approximation x1975))
(assert (axiom_int_approximation x1978))
(assert (axiom_int_approximation x1979))
(assert (axiom_int_approximation x1981))
(assert (axiom_int_approximation x1982))
(assert (axiom_int_approximation x1984))
(assert (axiom_int_approximation x1986))
(assert (axiom_int_approximation x1987))
(assert (axiom_int_approximation x1989))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x1990))
(assert (axiom_int_approximation x1994))
(assert (axiom_int_approximation x1995))
(assert (axiom_int_approximation x1997))
(assert (axiom_int_approximation x2))
(assert (axiom_int_approximation x20))
(assert (axiom_int_approximation x2001))
(assert (axiom_int_approximation x2003))
(assert (axiom_int_approximation x2007))
(assert (axiom_int_approximation x2008))
(assert (axiom_int_approximation x2009))
(assert (axiom_int_approximation x2010))
(assert (axiom_int_approximation x2013))
(assert (axiom_int_approximation x2014))
(assert (axiom_int_approximation x2017))
(assert (axiom_int_approximation x2019))
(assert (axiom_int_approximation x202))
(assert (axiom_int_approximation x2020))
(assert (axiom_int_approximation x2021))
(assert (axiom_int_approximation x2022))
(assert (axiom_int_approximation x2023))
(assert (axiom_int_approximation x2025))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x2040))
(assert (axiom_int_approximation x2041))
(assert (axiom_int_approximation x2043))
(assert (axiom_int_approximation x2047))
(assert (axiom_int_approximation x2051))
(assert (axiom_int_approximation x2052))
(assert (axiom_int_approximation x2053))
(assert (axiom_int_approximation x2055))
(assert (axiom_int_approximation x2056))
(assert (axiom_int_approximation x2057))
(assert (axiom_int_approximation x2059))
(assert (axiom_int_approximation x2060))
(assert (axiom_int_approximation x2061))
(assert (axiom_int_approximation x2067))
(assert (axiom_int_approximation x2068))
(assert (axiom_int_approximation x2073))
(assert (axiom_int_approximation x2076))
(assert (axiom_int_approximation x2077))
(assert (axiom_int_approximation x2078))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x2080))
(assert (axiom_int_approximation x2081))
(assert (axiom_int_approximation x2084))
(assert (axiom_int_approximation x2086))
(assert (axiom_int_approximation x2087))
(assert (axiom_int_approximation x2089))
(assert (axiom_int_approximation x2090))
(assert (axiom_int_approximation x2097))
(assert (axiom_int_approximation x21))
(assert (axiom_int_approximation x2104))
(assert (axiom_int_approximation x2107))
(assert (axiom_int_approximation x2108))
(assert (axiom_int_approximation x2109))
(assert (axiom_int_approximation x2110))
(assert (axiom_int_approximation x2113))
(assert (axiom_int_approximation x2119))
(assert (axiom_int_approximation x2120))
(assert (axiom_int_approximation x2121))
(assert (axiom_int_approximation x2123))
(assert (axiom_int_approximation x2124))
(assert (axiom_int_approximation x2132))
(assert (axiom_int_approximation x2133))
(assert (axiom_int_approximation x2138))
(assert (axiom_int_approximation x2139))
(assert (axiom_int_approximation x2145))
(assert (axiom_int_approximation x2147))
(assert (axiom_int_approximation x2148))
(assert (axiom_int_approximation x2149))
(assert (axiom_int_approximation x2152))
(assert (axiom_int_approximation x2153))
(assert (axiom_int_approximation x2159))
(assert (axiom_int_approximation x2160))
(assert (axiom_int_approximation x2161))
(assert (axiom_int_approximation x2174))
(assert (axiom_int_approximation x2175))
(assert (axiom_int_approximation x2177))
(assert (axiom_int_approximation x2180))
(assert (axiom_int_approximation x2181))
(assert (axiom_int_approximation x2183))
(assert (axiom_int_approximation x2186))
(assert (axiom_int_approximation x2187))
(assert (axiom_int_approximation x2188))
(assert (axiom_int_approximation x2193))
(assert (axiom_int_approximation x2197))
(assert (axiom_int_approximation x22))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x2200))
(assert (axiom_int_approximation x2204))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x2212))
(assert (axiom_int_approximation x2213))
(assert (axiom_int_approximation x2215))
(assert (axiom_int_approximation x2216))
(assert (axiom_int_approximation x2217))
(assert (axiom_int_approximation x2219))
(assert (axiom_int_approximation x222))
(assert (axiom_int_approximation x2220))
(assert (axiom_int_approximation x2225))
(assert (axiom_int_approximation x2226))
(assert (axiom_int_approximation x2228))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x2230))
(assert (axiom_int_approximation x2231))
(assert (axiom_int_approximation x2232))
(assert (axiom_int_approximation x2233))
(assert (axiom_int_approximation x2234))
(assert (axiom_int_approximation x2239))
(assert (axiom_int_approximation x2240))
(assert (axiom_int_approximation x2241))
(assert (axiom_int_approximation x2245))
(assert (axiom_int_approximation x2247))
(assert (axiom_int_approximation x2248))
(assert (axiom_int_approximation x225))
(assert (axiom_int_approximation x2250))
(assert (axiom_int_approximation x2255))
(assert (axiom_int_approximation x2256))
(assert (axiom_int_approximation x2257))
(assert (axiom_int_approximation x2258))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x2262))
(assert (axiom_int_approximation x2264))
(assert (axiom_int_approximation x2267))
(assert (axiom_int_approximation x2268))
(assert (axiom_int_approximation x2269))
(assert (axiom_int_approximation x2270))
(assert (axiom_int_approximation x2273))
(assert (axiom_int_approximation x2276))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x2283))
(assert (axiom_int_approximation x2285))
(assert (axiom_int_approximation x2286))
(assert (axiom_int_approximation x2287))
(assert (axiom_int_approximation x2289))
(assert (axiom_int_approximation x229))
(assert (axiom_int_approximation x2291))
(assert (axiom_int_approximation x2292))
(assert (axiom_int_approximation x2295))
(assert (axiom_int_approximation x2296))
(assert (axiom_int_approximation x2302))
(assert (axiom_int_approximation x2303))
(assert (axiom_int_approximation x2304))
(assert (axiom_int_approximation x2306))
(assert (axiom_int_approximation x2307))
(assert (axiom_int_approximation x2312))
(assert (axiom_int_approximation x2314))
(assert (axiom_int_approximation x2315))
(assert (axiom_int_approximation x2318))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x2320))
(assert (axiom_int_approximation x2321))
(assert (axiom_int_approximation x2323))
(assert (axiom_int_approximation x2325))
(assert (axiom_int_approximation x2326))
(assert (axiom_int_approximation x2327))
(assert (axiom_int_approximation x2328))
(assert (axiom_int_approximation x2332))
(assert (axiom_int_approximation x2334))
(assert (axiom_int_approximation x2336))
(assert (axiom_int_approximation x2341))
(assert (axiom_int_approximation x2343))
(assert (axiom_int_approximation x2344))
(assert (axiom_int_approximation x2345))
(assert (axiom_int_approximation x2346))
(assert (axiom_int_approximation x2349))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x2351))
(assert (axiom_int_approximation x2352))
(assert (axiom_int_approximation x2353))
(assert (axiom_int_approximation x2354))
(assert (axiom_int_approximation x2355))
(assert (axiom_int_approximation x2358))
(assert (axiom_int_approximation x2360))
(assert (axiom_int_approximation x2362))
(assert (axiom_int_approximation x2363))
(assert (axiom_int_approximation x2364))
(assert (axiom_int_approximation x2368))
(assert (axiom_int_approximation x2369))
(assert (axiom_int_approximation x2370))
(assert (axiom_int_approximation x2372))
(assert (axiom_int_approximation x2373))
(assert (axiom_int_approximation x2374))
(assert (axiom_int_approximation x2377))
(assert (axiom_int_approximation x2379))
(assert (axiom_int_approximation x238))
(assert (axiom_int_approximation x2380))
(assert (axiom_int_approximation x2384))
(assert (axiom_int_approximation x2385))
(assert (axiom_int_approximation x2386))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x2391))
(assert (axiom_int_approximation x2393))
(assert (axiom_int_approximation x2394))
(assert (axiom_int_approximation x2399))
(assert (axiom_int_approximation x2402))
(assert (axiom_int_approximation x2403))
(assert (axiom_int_approximation x2404))
(assert (axiom_int_approximation x2406))
(assert (axiom_int_approximation x2407))
(assert (axiom_int_approximation x2408))
(assert (axiom_int_approximation x2410))
(assert (axiom_int_approximation x2413))
(assert (axiom_int_approximation x2414))
(assert (axiom_int_approximation x242))
(assert (axiom_int_approximation x2420))
(assert (axiom_int_approximation x2421))
(assert (axiom_int_approximation x2426))
(assert (axiom_int_approximation x2427))
(assert (axiom_int_approximation x2428))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x2431))
(assert (axiom_int_approximation x2433))
(assert (axiom_int_approximation x2434))
(assert (axiom_int_approximation x2435))
(assert (axiom_int_approximation x2438))
(assert (axiom_int_approximation x2439))
(assert (axiom_int_approximation x2440))
(assert (axiom_int_approximation x2443))
(assert (axiom_int_approximation x2445))
(assert (axiom_int_approximation x2446))
(assert (axiom_int_approximation x2447))
(assert (axiom_int_approximation x2449))
(assert (axiom_int_approximation x2451))
(assert (axiom_int_approximation x2455))
(assert (axiom_int_approximation x2456))
(assert (axiom_int_approximation x2458))
(assert (axiom_int_approximation x2459))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x2460))
(assert (axiom_int_approximation x2461))
(assert (axiom_int_approximation x2462))
(assert (axiom_int_approximation x2463))
(assert (axiom_int_approximation x2468))
(assert (axiom_int_approximation x2469))
(assert (axiom_int_approximation x2471))
(assert (axiom_int_approximation x2472))
(assert (axiom_int_approximation x2473))
(assert (axiom_int_approximation x2478))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x2482))
(assert (axiom_int_approximation x2483))
(assert (axiom_int_approximation x2485))
(assert (axiom_int_approximation x2491))
(assert (axiom_int_approximation x2493))
(assert (axiom_int_approximation x2496))
(assert (axiom_int_approximation x2498))
(assert (axiom_int_approximation x2501))
(assert (axiom_int_approximation x2502))
(assert (axiom_int_approximation x2503))
(assert (axiom_int_approximation x2505))
(assert (axiom_int_approximation x2506))
(assert (axiom_int_approximation x2508))
(assert (axiom_int_approximation x2510))
(assert (axiom_int_approximation x2517))
(assert (axiom_int_approximation x2518))
(assert (axiom_int_approximation x252))
(assert (axiom_int_approximation x2525))
(assert (axiom_int_approximation x2526))
(assert (axiom_int_approximation x2527))
(assert (axiom_int_approximation x2528))
(assert (axiom_int_approximation x2538))
(assert (axiom_int_approximation x2539))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x2540))
(assert (axiom_int_approximation x2541))
(assert (axiom_int_approximation x2542))
(assert (axiom_int_approximation x2545))
(assert (axiom_int_approximation x2546))
(assert (axiom_int_approximation x2552))
(assert (axiom_int_approximation x2553))
(assert (axiom_int_approximation x2555))
(assert (axiom_int_approximation x2556))
(assert (axiom_int_approximation x2557))
(assert (axiom_int_approximation x2560))
(assert (axiom_int_approximation x2562))
(assert (axiom_int_approximation x2566))
(assert (axiom_int_approximation x2567))
(assert (axiom_int_approximation x2569))
(assert (axiom_int_approximation x2571))
(assert (axiom_int_approximation x2575))
(assert (axiom_int_approximation x2581))
(assert (axiom_int_approximation x2582))
(assert (axiom_int_approximation x2585))
(assert (axiom_int_approximation x2588))
(assert (axiom_int_approximation x259))
(assert (axiom_int_approximation x2591))
(assert (axiom_int_approximation x2595))
(assert (axiom_int_approximation x2596))
(assert (axiom_int_approximation x2597))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x2600))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x2610))
(assert (axiom_int_approximation x2611))
(assert (axiom_int_approximation x2615))
(assert (axiom_int_approximation x2618))
(assert (axiom_int_approximation x2624))
(assert (axiom_int_approximation x2627))
(assert (axiom_int_approximation x2628))
(assert (axiom_int_approximation x2630))
(assert (axiom_int_approximation x2631))
(assert (axiom_int_approximation x2636))
(assert (axiom_int_approximation x2637))
(assert (axiom_int_approximation x2638))
(assert (axiom_int_approximation x2644))
(assert (axiom_int_approximation x2645))
(assert (axiom_int_approximation x2647))
(assert (axiom_int_approximation x2650))
(assert (axiom_int_approximation x2652))
(assert (axiom_int_approximation x2653))
(assert (axiom_int_approximation x2655))
(assert (axiom_int_approximation x2657))
(assert (axiom_int_approximation x2658))
(assert (axiom_int_approximation x266))
(assert (axiom_int_approximation x2660))
(assert (axiom_int_approximation x2664))
(assert (axiom_int_approximation x2665))
(assert (axiom_int_approximation x2667))
(assert (axiom_int_approximation x267))
(assert (axiom_int_approximation x2670))
(assert (axiom_int_approximation x2671))
(assert (axiom_int_approximation x2672))
(assert (axiom_int_approximation x2673))
(assert (axiom_int_approximation x2675))
(assert (axiom_int_approximation x2676))
(assert (axiom_int_approximation x2678))
(assert (axiom_int_approximation x268))
(assert (axiom_int_approximation x2682))
(assert (axiom_int_approximation x2683))
(assert (axiom_int_approximation x2684))
(assert (axiom_int_approximation x2685))
(assert (axiom_int_approximation x2687))
(assert (axiom_int_approximation x2688))
(assert (axiom_int_approximation x269))
(assert (axiom_int_approximation x2695))
(assert (axiom_int_approximation x2696))
(assert (axiom_int_approximation x2697))
(assert (axiom_int_approximation x2699))
(assert (axiom_int_approximation x2701))
(assert (axiom_int_approximation x2702))
(assert (axiom_int_approximation x2704))
(assert (axiom_int_approximation x2706))
(assert (axiom_int_approximation x2708))
(assert (axiom_int_approximation x2710))
(assert (axiom_int_approximation x2711))
(assert (axiom_int_approximation x2712))
(assert (axiom_int_approximation x2714))
(assert (axiom_int_approximation x2717))
(assert (axiom_int_approximation x2719))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x2723))
(assert (axiom_int_approximation x2727))
(assert (axiom_int_approximation x2728))
(assert (axiom_int_approximation x2729))
(assert (axiom_int_approximation x2730))
(assert (axiom_int_approximation x2732))
(assert (axiom_int_approximation x2734))
(assert (axiom_int_approximation x2735))
(assert (axiom_int_approximation x2740))
(assert (axiom_int_approximation x2742))
(assert (axiom_int_approximation x2743))
(assert (axiom_int_approximation x2744))
(assert (axiom_int_approximation x2745))
(assert (axiom_int_approximation x2747))
(assert (axiom_int_approximation x2748))
(assert (axiom_int_approximation x2749))
(assert (axiom_int_approximation x275))
(assert (axiom_int_approximation x2750))
(assert (axiom_int_approximation x2752))
(assert (axiom_int_approximation x2755))
(assert (axiom_int_approximation x2756))
(assert (axiom_int_approximation x2757))
(assert (axiom_int_approximation x2760))
(assert (axiom_int_approximation x2762))
(assert (axiom_int_approximation x2763))
(assert (axiom_int_approximation x2764))
(assert (axiom_int_approximation x2769))
(assert (axiom_int_approximation x2771))
(assert (axiom_int_approximation x2772))
(assert (axiom_int_approximation x2775))
(assert (axiom_int_approximation x2778))
(assert (axiom_int_approximation x2780))
(assert (axiom_int_approximation x2781))
(assert (axiom_int_approximation x2785))
(assert (axiom_int_approximation x2786))
(assert (axiom_int_approximation x2787))
(assert (axiom_int_approximation x279))
(assert (axiom_int_approximation x2793))
(assert (axiom_int_approximation x2795))
(assert (axiom_int_approximation x2797))
(assert (axiom_int_approximation x2798))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x2801))
(assert (axiom_int_approximation x2804))
(assert (axiom_int_approximation x2805))
(assert (axiom_int_approximation x2806))
(assert (axiom_int_approximation x2807))
(assert (axiom_int_approximation x2810))
(assert (axiom_int_approximation x2811))
(assert (axiom_int_approximation x2812))
(assert (axiom_int_approximation x2814))
(assert (axiom_int_approximation x2816))
(assert (axiom_int_approximation x2817))
(assert (axiom_int_approximation x2818))
(assert (axiom_int_approximation x2822))
(assert (axiom_int_approximation x2824))
(assert (axiom_int_approximation x2827))
(assert (axiom_int_approximation x2831))
(assert (axiom_int_approximation x2832))
(assert (axiom_int_approximation x2833))
(assert (axiom_int_approximation x2834))
(assert (axiom_int_approximation x2840))
(assert (axiom_int_approximation x2844))
(assert (axiom_int_approximation x2845))
(assert (axiom_int_approximation x2849))
(assert (axiom_int_approximation x2850))
(assert (axiom_int_approximation x2851))
(assert (axiom_int_approximation x2852))
(assert (axiom_int_approximation x2853))
(assert (axiom_int_approximation x2854))
(assert (axiom_int_approximation x2861))
(assert (axiom_int_approximation x2865))
(assert (axiom_int_approximation x2867))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x2871))
(assert (axiom_int_approximation x2874))
(assert (axiom_int_approximation x2878))
(assert (axiom_int_approximation x2880))
(assert (axiom_int_approximation x2883))
(assert (axiom_int_approximation x2884))
(assert (axiom_int_approximation x2889))
(assert (axiom_int_approximation x2890))
(assert (axiom_int_approximation x2893))
(assert (axiom_int_approximation x2894))
(assert (axiom_int_approximation x2895))
(assert (axiom_int_approximation x2896))
(assert (axiom_int_approximation x2898))
(assert (axiom_int_approximation x2899))
(assert (axiom_int_approximation x2901))
(assert (axiom_int_approximation x2902))
(assert (axiom_int_approximation x2903))
(assert (axiom_int_approximation x2910))
(assert (axiom_int_approximation x2918))
(assert (axiom_int_approximation x2919))
(assert (axiom_int_approximation x292))
(assert (axiom_int_approximation x2922))
(assert (axiom_int_approximation x2926))
(assert (axiom_int_approximation x2927))
(assert (axiom_int_approximation x2928))
(assert (axiom_int_approximation x2929))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x2931))
(assert (axiom_int_approximation x2933))
(assert (axiom_int_approximation x2934))
(assert (axiom_int_approximation x2936))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x2942))
(assert (axiom_int_approximation x2943))
(assert (axiom_int_approximation x2944))
(assert (axiom_int_approximation x2947))
(assert (axiom_int_approximation x2949))
(assert (axiom_int_approximation x2951))
(assert (axiom_int_approximation x2956))
(assert (axiom_int_approximation x2957))
(assert (axiom_int_approximation x2959))
(assert (axiom_int_approximation x296))
(assert (axiom_int_approximation x2962))
(assert (axiom_int_approximation x2964))
(assert (axiom_int_approximation x2967))
(assert (axiom_int_approximation x2973))
(assert (axiom_int_approximation x2974))
(assert (axiom_int_approximation x2978))
(assert (axiom_int_approximation x2980))
(assert (axiom_int_approximation x2982))
(assert (axiom_int_approximation x2989))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x2995))
(assert (axiom_int_approximation x2998))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x3000))
(assert (axiom_int_approximation x3001))
(assert (axiom_int_approximation x3005))
(assert (axiom_int_approximation x3008))
(assert (axiom_int_approximation x3009))
(assert (axiom_int_approximation x3018))
(assert (axiom_int_approximation x3021))
(assert (axiom_int_approximation x3022))
(assert (axiom_int_approximation x3025))
(assert (axiom_int_approximation x3026))
(assert (axiom_int_approximation x3028))
(assert (axiom_int_approximation x3029))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x3034))
(assert (axiom_int_approximation x3035))
(assert (axiom_int_approximation x3037))
(assert (axiom_int_approximation x3038))
(assert (axiom_int_approximation x3039))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x3040))
(assert (axiom_int_approximation x3041))
(assert (axiom_int_approximation x3042))
(assert (axiom_int_approximation x3043))
(assert (axiom_int_approximation x3047))
(assert (axiom_int_approximation x3049))
(assert (axiom_int_approximation x305))
(assert (axiom_int_approximation x3050))
(assert (axiom_int_approximation x3053))
(assert (axiom_int_approximation x3058))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x3062))
(assert (axiom_int_approximation x3064))
(assert (axiom_int_approximation x3066))
(assert (axiom_int_approximation x3069))
(assert (axiom_int_approximation x3070))
(assert (axiom_int_approximation x3075))
(assert (axiom_int_approximation x3078))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x3080))
(assert (axiom_int_approximation x3086))
(assert (axiom_int_approximation x3087))
(assert (axiom_int_approximation x3090))
(assert (axiom_int_approximation x3092))
(assert (axiom_int_approximation x3096))
(assert (axiom_int_approximation x3098))
(assert (axiom_int_approximation x3101))
(assert (axiom_int_approximation x3103))
(assert (axiom_int_approximation x3106))
(assert (axiom_int_approximation x3111))
(assert (axiom_int_approximation x3118))
(assert (axiom_int_approximation x3122))
(assert (axiom_int_approximation x3123))
(assert (axiom_int_approximation x3125))
(assert (axiom_int_approximation x3129))
(assert (axiom_int_approximation x3131))
(assert (axiom_int_approximation x3135))
(assert (axiom_int_approximation x3137))
(assert (axiom_int_approximation x3139))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x3142))
(assert (axiom_int_approximation x3145))
(assert (axiom_int_approximation x3148))
(assert (axiom_int_approximation x3149))
(assert (axiom_int_approximation x315))
(assert (axiom_int_approximation x3151))
(assert (axiom_int_approximation x3158))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x3160))
(assert (axiom_int_approximation x3163))
(assert (axiom_int_approximation x3165))
(assert (axiom_int_approximation x3166))
(assert (axiom_int_approximation x3169))
(assert (axiom_int_approximation x3170))
(assert (axiom_int_approximation x3173))
(assert (axiom_int_approximation x3177))
(assert (axiom_int_approximation x3181))
(assert (axiom_int_approximation x325))
(assert (axiom_int_approximation x328))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x336))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x340))
(assert (axiom_int_approximation x346))
(assert (axiom_int_approximation x347))
(assert (axiom_int_approximation x349))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x355))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x361))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x377))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x40))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x405))
(assert (axiom_int_approximation x409))
(assert (axiom_int_approximation x411))
(assert (axiom_int_approximation x414))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x420))
(assert (axiom_int_approximation x421))
(assert (axiom_int_approximation x422))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x436))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x449))
(assert (axiom_int_approximation x45))
(assert (axiom_int_approximation x450))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x46))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x466))
(assert (axiom_int_approximation x467))
(assert (axiom_int_approximation x468))
(assert (axiom_int_approximation x47))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x481))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x485))
(assert (axiom_int_approximation x486))
(assert (axiom_int_approximation x487))
(assert (axiom_int_approximation x489))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x498))
(assert (axiom_int_approximation x5))
(assert (axiom_int_approximation x500))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x506))
(assert (axiom_int_approximation x508))
(assert (axiom_int_approximation x509))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x519))
(assert (axiom_int_approximation x520))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x53))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x533))
(assert (axiom_int_approximation x534))
(assert (axiom_int_approximation x535))
(assert (axiom_int_approximation x544))
(assert (axiom_int_approximation x545))
(assert (axiom_int_approximation x546))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x55))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x553))
(assert (axiom_int_approximation x555))
(assert (axiom_int_approximation x559))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x560))
(assert (axiom_int_approximation x564))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x576))
(assert (axiom_int_approximation x577))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x58))
(assert (axiom_int_approximation x580))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x597))
(assert (axiom_int_approximation x60))
(assert (axiom_int_approximation x600))
(assert (axiom_int_approximation x602))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x618))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x629))
(assert (axiom_int_approximation x63))
(assert (axiom_int_approximation x630))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x634))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x639))
(assert (axiom_int_approximation x643))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x647))
(assert (axiom_int_approximation x648))
(assert (axiom_int_approximation x651))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x661))
(assert (axiom_int_approximation x662))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x665))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x670))
(assert (axiom_int_approximation x671))
(assert (axiom_int_approximation x673))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x677))
(assert (axiom_int_approximation x679))
(assert (axiom_int_approximation x682))
(assert (axiom_int_approximation x684))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x690))
(assert (axiom_int_approximation x692))
(assert (axiom_int_approximation x694))
(assert (axiom_int_approximation x695))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x698))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x702))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x71))
(assert (axiom_int_approximation x711))
(assert (axiom_int_approximation x716))
(assert (axiom_int_approximation x718))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x722))
(assert (axiom_int_approximation x726))
(assert (axiom_int_approximation x729))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x732))
(assert (axiom_int_approximation x733))
(assert (axiom_int_approximation x738))
(assert (axiom_int_approximation x746))
(assert (axiom_int_approximation x749))
(assert (axiom_int_approximation x750))
(assert (axiom_int_approximation x751))
(assert (axiom_int_approximation x752))
(assert (axiom_int_approximation x753))
(assert (axiom_int_approximation x754))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x759))
(assert (axiom_int_approximation x760))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x766))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x772))
(assert (axiom_int_approximation x776))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x785))
(assert (axiom_int_approximation x786))
(assert (axiom_int_approximation x787))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x790))
(assert (axiom_int_approximation x792))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x800))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x822))
(assert (axiom_int_approximation x823))
(assert (axiom_int_approximation x824))
(assert (axiom_int_approximation x826))
(assert (axiom_int_approximation x827))
(assert (axiom_int_approximation x828))
(assert (axiom_int_approximation x837))
(assert (axiom_int_approximation x838))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x843))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x848))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x851))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x864))
(assert (axiom_int_approximation x866))
(assert (axiom_int_approximation x87))
(assert (axiom_int_approximation x872))
(assert (axiom_int_approximation x874))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x880))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x882))
(assert (axiom_int_approximation x884))
(assert (axiom_int_approximation x885))
(assert (axiom_int_approximation x887))
(assert (axiom_int_approximation x888))
(assert (axiom_int_approximation x890))
(assert (axiom_int_approximation x891))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x893))
(assert (axiom_int_approximation x895))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x898))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x900))
(assert (axiom_int_approximation x901))
(assert (axiom_int_approximation x902))
(assert (axiom_int_approximation x906))
(assert (axiom_int_approximation x908))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x911))
(assert (axiom_int_approximation x914))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x916))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x92))
(assert (axiom_int_approximation x920))
(assert (axiom_int_approximation x923))
(assert (axiom_int_approximation x925))
(assert (axiom_int_approximation x929))
(assert (axiom_int_approximation x930))
(assert (axiom_int_approximation x931))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x934))
(assert (axiom_int_approximation x935))
(assert (axiom_int_approximation x941))
(assert (axiom_int_approximation x942))
(assert (axiom_int_approximation x943))
(assert (axiom_int_approximation x944))
(assert (axiom_int_approximation x946))
(assert (axiom_int_approximation x948))
(assert (axiom_int_approximation x949))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x957))
(assert (axiom_int_approximation x958))
(assert (axiom_int_approximation x959))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x968))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x971))
(assert (axiom_int_approximation x972))
(assert (axiom_int_approximation x976))
(assert (axiom_int_approximation x979))
(assert (axiom_int_approximation x980))
(assert (axiom_int_approximation x982))
(assert (axiom_int_approximation x989))
(assert (axiom_int_approximation x990))
(assert (axiom_int_approximation x991))
(assert (axiom_int_approximation x992))
(assert (axiom_int_approximation x994))
(assert (axiom_int_approximation x995))
(assert (axiom_int_approximation x997))
(assert (not (= (x2116 x2672 13) (x2116 x77 1))))
(assert (= (x1162 x772) (ite (and x3121 x723 x1540) (x3105 x772) (x1915 x772))))
(assert (x853 x3021))
(assert (x856 x2257))
(assert (not (= (x2116 x2462 11) 6)))
(assert (= x2643 (and x1557 x170)))
(assert (=> (> (+ 10000 1) x2672) (not (= x2672 (x2116 x422 6)))))
(assert (x853 x45))
(assert (not (= (x2116 x754 12) (x2116 x1990 1))))
(assert (not (= 274184521717934524641157099916833587233 (x2116 x305 1))))
(assert (x853 x1050))
(assert (= (=> (and (= x2483 (ite (< x1934 x2652) 1 0)) (= x1713 (uninterp_mod (* x2769 x2447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)) x1934) (= x315 (- (/ x1713 1000000000000000000000000000000000000) (uninterp_frac x1713 1000000000000000000000000000000000000))) (= (= 0 x2250) x1090) (= x2046 (= x315 0)) (= (x1111 x2827 x2483) x2250) (= (ite (not x2046) 1 0) x2827)) (and (=> (not x1090) x1795) (=> x1090 x464))) x886))
(assert (x853 x2183))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 0 x92))))
(assert (x853 x2219))
(assert (= x3182 (and x556 x2946)))
(assert (x853 x2740))
(assert (x853 x422))
(assert (not (= 1000000000 (x2116 0 x2810))))
(assert (x853 x1328))
(assert (not (= 1937038442 (x2116 x208 14))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2116 x2817 11))))
(assert (=> (= (x2116 x2458 6) (x2116 0 x2204)) (and (= 0 x2458) (= 6 x2204))))
(assert (=> (> (+ 10000 1) x2817) (not (= x2817 (x2116 x208 14)))))
(assert (=> (> (+ 10000 1) x208) (not (= (x2116 0 x92) x208))))
(assert (not (= 11 (x2116 0 x2810))))
(assert (not (= (x2116 x422 6) 1000000000000000000)))
(assert (x853 x1511))
(assert (x853 x2778))
(assert (x434 x726 x2264 x1470 x1779))
(assert (= x1977 (and x1214 x2662)))
(assert (x853 x2385))
(assert (=> (< (- x1990 1) 10000) (not (= (x2116 x2462 11) x1990))))
(assert (x434 x2697 x2014 x2539 x1927))
(assert (x853 x2655))
(assert (not (= 18446744073709551615 (x2116 x698 1))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 x2458 6))))
(assert (x853 x2362))
(assert (not (= (x2116 x2462 15) 13)))
(assert (= x2648 (=> (and (= (uninterp_mod (* x618 x513) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x882) (= (- (/ x882 1000000000) (uninterp_frac x882 1000000000)) x2377)) (and (=> (and x1832 (or (and (= 1 x1446) (> 4294967296 x1709) x1843) (and (not x1843) (= x1446 x2934))) (= x1843 (> x2934 0))) x960) (=> (and (= x2377 x1898) (not x1832) (= x2343 x1906)) x967)))))
(assert (not (= (x2116 x2462 15) 11)))
(assert (= x1943 (and (not x27) x585)))
(assert (= (ite (= x1142 x2283) x1450 (x1665 x1142)) (x173 x1142)))
(assert (=> (> (+ 10000 1) x698) (not (= (x2116 1 x2406) x698))))
(assert (x853 x103))
(assert (x853 x1331))
(assert (not (= (x2116 x990 1) 18446744073709551616)))
(assert (= (x1846 x2174) (ite (and x8 x2885 x2661) (x2361 x2174) (x1153 x2174))))
(assert (= (ite (= x2386 x1962) x639 (x1802 x2386)) (x1113 x2386)))
(assert (= (and (not x2030) x122) x3156))
(assert (=> (< (- x698 1) 10000) (not (= (x2116 x990 1) x698))))
(assert (=> (< (- x1838 1) 10000) (not (= (x2116 x2462 12) x1838))))
(assert (not (= (x2116 x2817 11) (x2116 x2187 1))))
(assert (not (= (x2116 x2458 6) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x1433 x1355 x2610))
(assert (= (=> (and (= (> x580 0) x2558) (= x580 (x31 352))) (and (=> x2558 x2737) (=> (and (= x789 x402) (= 0 x2708) (not x2558) (= x2678 0)) x1612))) x2203))
(assert (=> (> (+ 10000 1) x1324) (not (= x1324 (x2116 x698 1)))))
(assert (= (x1234 x2478) (ite (= x2478 x384) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x707 x2478))))
(assert (=> (> (+ 10000 1) x422) (not (= (x2116 1 x2630) x422))))
(assert (not (= 1100000000000000000 (x2116 x2817 11))))
(assert (x853 x2671))
(assert (=> (< (- x305 1) 10000) (not (= x305 (x2116 x2458 6)))))
(assert (= (and x1613 x2643) x3060))
(assert (x853 x1496))
(assert (x853 x3142))
(assert (= x1886 (=> (and (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x67) x467) (= x1129 (x2858 (+ x467 x855))) (= (x2858 (+ 31 x225)) x67) (= x2509 (or (> x225 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x225) (= (<= x225 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))))) (and (=> x2509 x1795) (=> (not x2509) x825)))))
(assert (=> (> (+ 10000 1) x1324) (not (= x1324 (x2116 x2462 12)))))
(assert (= (ite (= x2538 x2239) x890 (x2042 x2239)) (x1153 x2239)))
(assert (=> (< (- x2817 1) 10000) (not (= x2817 (x2116 x1422 1)))))
(assert (not (= 1029106033 (x2116 x2458 6))))
(assert (x856 x5))
(assert (x853 x2637))
(assert (x853 x3026))
(assert (x853 x2734))
(assert (x1433 x156 x1196))
(assert (x853 x2717))
(assert (=> (> (+ 10000 1) x2462) (not (= x2462 (x2116 x1324 1)))))
(assert (not (= (x2116 x2462 14) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x853 x314))
(assert (=> (= (x2116 x1324 1) (x2116 x77 1)) (= x1324 x77)))
(assert (=> (= (x2116 x1324 1) (x2116 x1422 1)) (= x1324 x1422)))
(assert (=> (= (x2116 0 x3058) (x2116 x2462 11)) (and (= x3058 11) (= x2462 0))))
(assert (=> (> (+ 10000 1) x2817) (not (= x2817 (x2116 x1324 1)))))
(assert (= x2713 (=> (and (= (> x349 0) x1214) (= x349 (x472 x574))) (and (=> x1214 x2172) (=> (not x1214) x1795)))))
(assert (=> (= (x2116 x1990 1) (x2116 0 x2204)) (and (= x1990 0) (= x2204 1))))
(assert (not (= (x2116 x1422 1) 404098525)))
(assert (not (= (x2116 x77 1) 66649967879025377632792054650135220247173487182192293797349964221703864188928)))
(assert (x853 x2124))
(assert (=> (= (x2116 x2462 14) (x2116 x208 14)) (= x2462 x208)))
(assert (= (=> (and (= (- (/ x521 x2757) (uninterp_frac x521 x2757)) x1871) (= (< 0 x2228) x2882) (= x2228 (x28 x2627))) (and (=> x2882 x380) (=> (and (= x221 x1871) (not x2882) (= x643 x826) (= x384 x1799) (= x3149 x1463)) x3055))) x2839))
(assert (=> (= (x2116 0 x2267) (x2116 x2964 14)) (and (= x2964 0) (= 14 x2267))))
(assert (not (= (x2116 x2462 11) (x2116 x77 1))))
(assert (= (=> (and (= (x1936 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2901)) x2637) (= x2901 (x1336 320)) (= x1486 (> 1000000000000000000 x2637))) (and (=> (not x1486) x1667) (=> x1486 x1795))) x1148))
(assert (not (= (x2116 x2462 11) 13)))
(assert (not (= 274184521717934524641157099916833587206 (x2116 x1422 1))))
(assert (=> (> (+ 10000 1) x3040) (not (= (x2116 x2462 12) x3040))))
(assert (= (ite (= x772 x2120) x1366 (x1054 x772)) (x2045 x772)))
(assert (x853 x2506))
(assert (not (= (x2116 x208 14) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 549896565 (x2116 x2672 13))))
(assert (not (= 24384142 (x2116 x2672 13))))
(assert (x853 x1559))
(assert (= (x2423 x2959) (ite (= x2772 x2959) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1174 x2959))))
(assert (= (ite (= x1825 x2811) x1391 (x1301 x2811)) (x1326 x2811)))
(assert (x853 x2896))
(assert (not (= (x2116 0 x2204) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (=> (> (+ 10000 1) x104) (not (= x104 (x2116 0 x3058)))))
(assert (x853 x1639))
(assert (not (= 18446744073709551615 (x2116 x2462 11))))
(assert (not (= 274184521717934524641157099916833587206 (x2116 x2672 13))))
(assert (x853 x306))
(assert (x1370 x1044 x2053))
(assert (not (= (x2116 1 x2406) 404098525)))
(assert (= (and (not x1863) x326) x1781))
(assert (= (ite x2966 (ite (and x2507 (not x2558)) (x2024 x2478) (x81 x2478)) (x830 x2478)) (x2830 x2478)))
(assert (not (= (x2116 x77 1) (x2116 x2964 14))))
(assert (not (= (x2116 0 x1916) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= 14 (x2116 1 x2630))))
(assert (x853 x190))
(assert (=> (> (+ 10000 1) x698) (not (= x698 (x2116 x2187 1)))))
(assert (=> (= (x2116 0 x2267) (x2116 x990 1)) (and (= x990 0) (= x2267 1))))
(assert (not (= (x2116 0 x2267) 1889567281)))
(assert (=> (= (x2116 x422 6) (x2116 0 x2810)) (and (= 0 x422) (= 6 x2810))))
(assert (= (x2759 x1933) (ite (= x2967 x1933) x2462 (x918 x1933))))
(assert (not (= (x2116 x2462 11) 4294967295)))
(assert (not (= (x2116 0 x2204) 4294967295)))
(assert (= (x2064 x2386) (ite (= x2386 x3009) x1074 (x563 x2386))))
(assert (x853 x100))
(assert (x853 x2853))
(assert (= x2075 (and x161 (not x903))))
(assert (not (= (x2116 x698 1) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (=> (< (- x2964 1) 10000) (not (= (x2116 x1838 14) x2964))))
(assert (x853 x651))
(assert (=> (> (+ 10000 1) x422) (not (= (x2116 0 x1916) x422))))
(assert (x1370 x2956 x228))
(assert (= x2963 (=> (and (= (< 0 x1477) x207) (= (x472 x574) x1477)) (and (=> (and (= x604 (< 0 x1919)) (= x487 (x2858 (+ x574 32))) (= (x1928 x487) x1236) x207 (or (and (< x2393 4294967296) (= 1 x1351) x604) (and (= x1919 x1351) (not x604)))) x1884) (=> (not x207) x1795)))))
(assert (=> (< (- x1422 1) 10000) (not (= (x2116 x1838 14) x1422))))
(assert (=> (> (+ 10000 1) x1838) (not (= (x2116 x2462 11) x1838))))
(assert (x853 x137))
(assert (=> (< (- x77 1) 10000) (not (= x77 (x2116 x208 14)))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 x698 1))))
(assert (x853 x2653))
(assert (not (= (x2116 x1324 1) (x2116 x2462 11))))
(assert (not (= (x2116 x1422 1) 4294967295)))
(assert (x853 x2562))
(assert (not (= (x2116 x2817 11) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x1610 x2023) (ite (= x2023 x2851) x2456 (x3159 x2023))))
(assert (x853 x2180))
(assert (not (= (x2116 x754 12) (x2116 x1422 1))))
(assert (=> (= (x2116 1 x2406) (x2116 x2964 14)) (and (= 1 x2964) (= 14 x2406))))
(assert (=> (= (x2116 0 x92) (x2116 x2462 13)) (and (= x92 13) (= 0 x2462))))
(assert (=> (= (x2116 x1990 1) (x2116 x990 1)) (= x1990 x990)))
(assert (not (= (x2116 x2458 6) 4294967295)))
(assert (x434 x1658 x2446 x1104 x1062))
(assert (= x554 (=> (and (= (= 0 x1806) x1662) (= x2542 (ite (not x1662) 1 0)) (= x268 (ite (< x1096 x2451) 1 0)) (= x1882 (x1111 x2542 x268)) (= x1096 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806))) (= x3068 (= 0 x1882)) (= (x2858 (+ x2013 1000000000000000000)) x2451)) (and (=> x3068 x2608) (=> (not x3068) x1795)))))
(assert (x853 x2528))
(assert (not (= (x2116 x698 1) 11)))
(assert (= (ite (= x772 x1639) x3087 (x2920 x772)) (x1929 x772)))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 x2462 14))))
(assert (not (= 18446744073709551615 (x2116 1 x2406))))
(assert (=> (= (x2116 0 x1916) (x2116 0 x3058)) (= x1916 x3058)))
(assert (x856 x299))
(assert (x856 x361))
(assert (not (= 1000000000000000000 (x2116 x2462 11))))
(assert (=> (< (- x222 1) 10000) (not (= x222 (x2116 x208 14)))))
(assert (x853 x1035))
(assert (= (ite (and x1557 (not x170)) (x1846 x450) (ite (and x3060 (not x1501)) (x1846 x450) (x114 x450))) (x2625 x450)))
(assert (not (= 12 (x2116 x2672 13))))
(assert (= x3146 (=> (and (= x2883 (x540 x103)) (= (> x1366 x2883) x2146)) (and (=> (not x2146) x3109) (=> x2146 x1795)))))
(assert (not (= (x2116 0 x3058) 1461501637330902918203684832716283019655932542975)))
(assert (not (= 100000000000000 (x2116 0 x2267))))
(assert (not (= 4294967296 (x2116 x2458 6))))
(assert (not (= 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2116 x2462 13))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 x2462 14))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 0 x2204))))
(assert (x853 x47))
(assert (x853 x1032))
(assert (x853 x1033))
(assert (x853 x1869))
(assert (=> (< (- x1324 1) 10000) (not (= x1324 (x2116 x2458 6)))))
(assert (= (=> (= (> x2403 0) x1834) (and (=> x1834 x3154) (=> (and (= 0 x1979) (not x1834)) x271))) x1423))
(assert (not (= (x2116 x2458 6) (x2116 x990 1))))
(assert (= (ite (and x2130 x1600 x1883) (x763 x1142) (x598 x1142)) (x1686 x1142)))
(assert (x853 x958))
(assert (=> (= (x2116 x2458 6) (x2116 0 x3058)) (and (= x3058 6) (= x2458 0))))
(assert (= (and x2015 x1232) x1873))
(assert (x853 x1569))
(assert (not (= (x2116 x1422 1) 4294967296)))
(assert (=> (= (x2116 x77 1) (x2116 1 x2630)) (and (= x2630 1) (= 1 x77))))
(assert (x856 x1514))
(assert (not (= (x2116 x2462 13) (x2116 x2458 6))))
(assert (= x2002 true))
(assert (not (= (x2116 x1324 1) (x2116 x2672 13))))
(assert (= (ite (= x545 x72) x682 (x1626 x72)) (x601 x72)))
(assert (x853 x2807))
(assert (not (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x2116 x305 1))))
(assert (= (ite (= x2055 x2567) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1270 x2055)) (x1755 x2055)))
(assert (x1752 x2630))
(assert (=> (> (+ 10000 1) x1324) (not (= (x2116 1 x2406) x1324))))
(assert (=> (< (- x2458 1) 10000) (not (= (x2116 x422 6) x2458))))
(assert (x853 x2314))
(assert (not (= (x2116 x2462 14) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (=> (> (+ 10000 1) x754) (not (= (x2116 0 x92) x754))))
(assert (x853 x1876))
(assert (x856 x995))
(assert (x853 x733))
(assert (x853 x656))
(assert (not (= (x2116 0 x3058) 549896565)))
(assert (= (=> (and (= x1296 (uninterp_mod (* x1858 x2667) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1233 (- (/ x1296 1000000000) (uninterp_frac x1296 1000000000))) (= (x1936 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858)) x2108) (= x1135 (< x2108 0))) (and (=> x1135 x1795) (=> (not x1135) x1938))) x724))
(assert (x853 x508))
(assert (not (= (x2116 0 x2204) 18446744073709551615)))
(assert (not (= 274184521717934524641157099916833587206 (x2116 1 x2406))))
(assert (x853 x630))
(assert (=> (> (+ 10000 1) x2672) (not (= x2672 (x2116 x1838 14)))))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 1 x2630))))
(assert (=> (< (- x1838 1) 10000) (not (= (x2116 1 x2630) x1838))))
(assert (x853 x2772))
(assert (= (=> (and (= (= x2385 x5) x285) (= x5 (x1145 x1511)) (= (x1111 18446744073709551615 x5) x2385)) (and (=> (not x285) x1795) (=> x285 x1084))) x143))
(assert (not (= (x2116 x422 6) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (not (= (x2116 x2462 14) 11)))
(assert (not (= 117300739 (x2116 x1838 14))))
(assert (= (=> (and (= x901 x1306) (= x3053 0)) x2340) x1693))
(assert (x853 x2113))
(assert (x853 x2581))
(assert (=> (> (+ 10000 1) x104) (not (= (x2116 x305 1) x104))))
(assert (x853 x2123))
(assert (= (x129 x1933) (ite (= x1933 x1740) x2719 (x1944 x1933))))
(assert (x856 x2186))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 x1990 1))))
(assert (=> (= (x2116 0 x3058) (x2116 x208 14)) (and (= 0 x208) (= x3058 14))))
(assert (= (=> (= (= 0 x275) x477) (and (=> x477 x1795) (=> (not x477) x1598))) x180))
(assert (=> (> (+ 10000 1) x1324) (not (= x1324 (x2116 x77 1)))))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 x2817 11))))
(assert (not (= (x2116 0 x2267) 15)))
(assert (not (= (x2116 x2187 1) 4294967295)))
(assert (x853 x783))
(assert (not (= (x2116 0 x1916) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= (x2116 x305 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x853 x2962))
(assert (=> (= (x2116 x1324 1) (x2116 x990 1)) (= x990 x1324)))
(assert (=> (> (+ 10000 1) x104) (not (= (x2116 x1990 1) x104))))
(assert (= (=> (and (= (x1174 x411) x1208) (= x649 (= 274184521717934524641157099916833587206 x559)) (= 4 x1997)) (and (=> (not x649) x1991) (=> (and (= x416 x1997) (not (= 157198259 x2233)) (<= 0 x1463) (> 826074471 x2233) (= 4 x416) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1463) (< 0 x1808) (= 404098525 x2233) (= 1 x2268) (= x17 32) (not (= x2233 117300739)) (= x1808 (x2275 274184521717934524641157099916833587206)) x649 (= x3005 10894474682274239493831243662817379401261526446360622092269559273883068006400) (not (< x416 4))) x975))) x64))
(assert (=> (= (x2116 x698 1) (x2116 x77 1)) (= x77 x698)))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 0 x3058) x990))))
(assert (=> (< (- x305 1) 10000) (not (= x305 (x2116 x77 1)))))
(assert (not (= 1937038442 (x2116 x1838 14))))
(assert (not (= (x2116 x208 14) 24384142)))
(assert (=> (= (x2116 1 x2406) (x2116 x2672 13)) (and (= x2406 13) (= 1 x2672))))
(assert (= (ite (and x141 (not x2882)) (x2625 x2239) (ite (and (not x2442) x921) (x707 x2239) (x2265 x2239))) (x1903 x2239)))
(assert (x853 x3078))
(assert (not (= (x2116 x2817 11) 11)))
(assert (not (= (x2116 x305 1) 18446744073709551615)))
(assert (x853 x447))
(assert (x853 x147))
(assert (=> (< (- x305 1) 10000) (not (= x305 (x2116 x422 6)))))
(assert (not (= (x2116 x2462 13) (x2116 x2187 1))))
(assert (=> (< (- x754 1) 10000) (not (= (x2116 x2187 1) x754))))
(assert (=> (< (- x104 1) 10000) (not (= x104 (x2116 0 x2810)))))
(assert (not (= 1029106033 (x2116 x2187 1))))
(assert (x853 x67))
(assert (not (= 1000000000000000000 (x2116 0 x1916))))
(assert (= (x1755 x450) (ite (= x450 x2567) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1270 x450))))
(assert (= (x869 x629) (ite (= x1913 x629) x2785 (x714 x629))))
(assert (x853 x638))
(assert (x853 x908))
(assert (not (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x2116 0 x3058))))
(assert (not (= (x2116 x698 1) 12)))
(assert (not (= 15 (x2116 x2187 1))))
(assert (x1370 x1704 x2217))
(assert (not (= (x2116 x1838 14) 72464927124685711895252664195178772226123872012682517813167109100718830649344)))
(assert (not (= (x2116 x1838 14) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x2116 x77 1) 1000000000)))
(assert (=> (> (+ 10000 1) x1838) (not (= x1838 (x2116 x1324 1)))))
(assert (not (= (x2116 x2462 15) 12)))
(assert (=> (> (+ 10000 1) x698) (not (= (x2116 1 x2630) x698))))
(assert (not (= (x2116 x2462 15) 33222205748031110454085609023467044101453017019085594488531032467161307152384)))
(assert (x853 x1962))
(assert (not (= (x2116 x2462 13) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (not (= 274184521717934524641157099916833587206 (x2116 x698 1))))
(assert (=> (> (+ 10000 1) x208) (not (= (x2116 1 x2630) x208))))
(assert (= (and x3171 x2223) x1159))
(assert (x1370 x895 x2508))
(assert (=> (= (x2116 1 x2630) (x2116 x990 1)) (and (= x2630 1) (= 1 x990))))
(assert (x853 x72))
(assert (not (= (x2116 x2462 15) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (= x2662 (and x2416 x1864)))
(assert (=> (= (x2116 0 x2267) (x2116 x305 1)) (and (= x2267 1) (= x305 0))))
(assert (= (ite (and x867 x1119 x324) (x1271 x772) (x383 x772)) (x2911 x772)))
(assert (= (x1929 x2174) (ite (= x2174 x1639) x3087 (x2920 x2174))))
(assert (x720 x1094 x819))
(assert (x853 x1655))
(assert (not (= (x2116 x990 1) 274184521717934524641157099916833587206)))
(assert (not (= 274184521717934524641157099916833587202 (x2116 x990 1))))
(assert (not (= (x2116 x2462 14) (x2116 x77 1))))
(assert (not (= (x2116 0 x2204) 1889567281)))
(assert (= (x1390 x772) (ite (= x1511 x772) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x1983 x772))))
(assert (not (= 18446744073709551615 (x2116 x1838 14))))
(assert (= (ite (= x2055 x384) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x707 x2055)) (x1234 x2055)))
(assert (= (=> (and (= x1375 x2139) (= x846 x188)) x1249) x70))
(assert (x1370 x1753 x1896))
(assert (not (= 18446744073709551616 (x2116 x698 1))))
(assert (x853 x2696))
(assert (not (= (x2116 x1990 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 x2964 14))))
(assert (not (= (x2116 1 x2630) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (x434 x1388 x2097 x2368 x2775))
(assert (not (= 1100000000000000000 (x2116 x2458 6))))
(assert (= (=> (= (= x1231 0) x3115) (and (=> x3115 x1795) (=> (not x3115) x1170))) x1097))
(assert (x856 x1704))
(assert (x853 x2234))
(assert (= (=> (= (< 0 x1746) x1110) (and (=> (not x1110) x2308) (=> x1110 x2823))) x808))
(assert (= x2172 (=> (and (= 1 x1445) (= x2712 (x1111 1461501637330902918203684832716283019655932542975 x1468)) (= x2306 (x2858 (+ x574 32))) (= x773 (> x2867 1))) (and (=> x773 x1088) (=> (and (not x773) (= x63 0)) x2751)))))
(assert (x853 x3149))
(assert (= x142 (and x2736 x2448)))
(assert (not (= (x2116 x754 12) 549896565)))
(assert (x853 x1845))
(assert (= (ite (and (not x1832) x2125) (x2911 x450) (x2189 x450)) (x830 x450)))
(assert (not (= (x2116 x2458 6) (x2116 x2462 12))))
(assert (not (= (x2116 x2458 6) (x2116 x2964 14))))
(assert (x853 x897))
(assert (x853 x235))
(assert (=> (< (- x222 1) 10000) (not (= x222 (x2116 1 x2630)))))
(assert (x853 x1263))
(assert (not (= (x2116 x305 1) 1)))
(assert (x853 x2793))
(assert (=> (= (x2116 0 x92) (x2116 x77 1)) (and (= x77 0) (= 1 x92))))
(assert (= (ite (= x2793 x2959) x1824 (x3019 x2959)) (x963 x2959)))
(assert (x853 x2688))
(assert (= (ite (= x893 x2174) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2651 x2174)) (x1915 x2174)))
(assert (x853 x639))
(assert (= (ite (= x1427 x2756) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x1276 x2756)) (x1102 x2756)))
(assert (not (= (x2116 x305 1) (x2116 x2964 14))))
(assert (x853 x1081))
(assert (=> (< (- x2817 1) 10000) (not (= (x2116 x305 1) x2817))))
(assert (not (= (x2116 x2462 11) 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (= (x1326 x2959) (ite (= x2959 x1825) x1391 (x1301 x2959))))
(assert (not (= (x2116 x2462 12) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= (or x1322 (and x34 x2038)) x1083))
(assert (x853 x456))
(assert (= (x129 x2478) (ite (= x2478 x1740) x2719 (x1944 x2478))))
(assert (x1433 x2435 x449))
(assert (=> (= (x2116 x2458 6) (x2116 0 x2810)) (and (= 0 x2458) (= x2810 6))))
(assert (x853 x2728))
(assert (= (x2317 x487) 0))
(assert (not (= 826074471 (x2116 x2964 14))))
(assert (not (= 157198259 (x2116 x208 14))))
(assert (=> (> (+ 10000 1) x2462) (not (= x2462 (x2116 0 x2204)))))
(assert (= x1077 (and x2100 x1849)))
(assert (x853 x35))
(assert (not (= (x2116 x422 6) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 x2462 12))))
(assert (=> (> (+ 10000 1) x305) (not (= (x2116 0 x2267) x305))))
(assert (= (and x1179 x883) x1056))
(assert (=> (> (+ 10000 1) x698) (not (= (x2116 x2672 13) x698))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x1838 14))))
(assert (= (x1390 x1933) (ite (= x1933 x1511) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x1983 x1933))))
(assert (x853 x2710))
(assert (x853 x1447))
(assert (not (= 1937038442 (x2116 x305 1))))
(assert (= (x708 384) x2555))
(assert (x853 x1284))
(assert (= x1529 (=> (= x1292 (= 0 x2834)) (and (=> (not x1292) x112) (=> x1292 x1795)))))
(assert (x1370 x600 x1372))
(assert (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1492 x752)))
(assert (x853 x920))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 x2458 6))))
(assert (not (= (x2116 0 x2810) 157198259)))
(assert (x853 x2068))
(assert (= x1864 (and (not x2246) x2122)))
(assert (=> (> (+ 10000 1) x754) (not (= (x2116 0 x1916) x754))))
(assert (not (= (x2116 x754 12) (x2116 x698 1))))
(assert (= (and x218 (not x1204)) x2467))
(assert (= (x2976 x1906) 17732073718202638403566719794745014173351532837126370201055734736014230421504))
(assert (=> (> (+ 10000 1) x104) (not (= x104 (x2116 x77 1)))))
(assert (= (and (not x1563) x460) x1500))
(assert (not (= (x2116 1 x2406) 24384142)))
(assert (not (= (x2116 x1838 14) 1461501637330902918203684832716283019655932542976)))
(assert (= x2308 x3036))
(assert (=> (> (+ 10000 1) x77) (not (= x77 (x2116 x2462 14)))))
(assert (not (= (x2116 x305 1) 11)))
(assert (=> (< (- x1838 1) 10000) (not (= x1838 (x2116 x2458 6)))))
(assert (= (and (not x1061) x765) x742))
(assert (not (= (x2116 0 x2204) 12)))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x698 1))))
(assert (= (ite (= x384 x450) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x707 x450)) (x1234 x450)))
(assert (x853 x1867))
(assert (= (or (and x964 x393) x1268) x160))
(assert (= x1669 (=> (and (= (x1145 x1142) x2660) (= (= x942 x2660) x2602) (= x1142 (x2858 (+ x2811 64))) (= (x1111 18446744073709551615 x2660) x942)) (and (=> (not x2602) x1795) (=> x2602 x432)))))
(assert (x853 x2956))
(assert (= x1993 (=> (and (= x2328 x1898) (= (> x2328 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2079)) (and (=> (not x2079) x2686) (=> (and (= x1368 0) x2079 (= 1 x1513) (= x546 x2343) (= 0 x579)) x410)))))
(assert (x1752 x1916))
(assert (not (= (x2116 x1990 1) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (x853 x757))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 x2462 14))))
(assert (= (and x148 x996) x460))
(assert (= (ite (= x2132 x2239) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2012 x2239)) (x1677 x2239)))
(assert (x853 x2571))
(assert (x434 x500 x1890 x2644 x1195))
(assert (= (ite (= x752 x2386) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2830 x2386)) (x1492 x2386)))
(assert (x853 x1243))
(assert (not (= 4294967295 (x2116 0 x92))))
(assert (= (ite (= x2553 x2959) x2462 (x154 x2959)) (x93 x2959)))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2116 x2672 13))))
(assert (not (= (x2116 0 x2204) 274184521717934524641157099916833587202)))
(assert (x853 x1896))
(assert (x853 x2443))
(assert (=> (< (- x77 1) 10000) (not (= (x2116 x1324 1) x77))))
(assert (not (= (x2116 x1838 14) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x853 x1039))
(assert (= (x601 x772) (ite (= x772 x545) x682 (x1626 x772))))
(assert (x853 x1697))
(assert (= (x1686 x2959) (ite (and x1600 x2130 x1883) (x763 x2959) (x598 x2959))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 x1324 1))))
(assert (= x1780 (and x1578 x341)))
(assert (not (= (x2116 x2462 13) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 0 x3058))))
(assert (not (= (x2116 x2462 15) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (not (= 117300739 (x2116 0 x1916))))
(assert (not (= 1000000000000000000 (x2116 x305 1))))
(assert (x853 x1427))
(assert (=> (> (+ 10000 1) x3040) (not (= x3040 (x2116 x2462 14)))))
(assert (not (= 14262166148461681479388312084279688412379623686150252715788501447688379695104 (x2116 x754 12))))
(assert (x853 x2175))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x1422 1))))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 x2462 11) x990))))
(assert (x853 x2764))
(assert (not (= (x2116 x2462 14) (x2116 x305 1))))
(assert (= (x817 x450) (ite (= x450 x303) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1851 x450))))
(assert (x856 x1765))
(assert (=> (> (+ 10000 1) x305) (not (= x305 (x2116 x2187 1)))))
(assert (=> (< (- x1990 1) 10000) (not (= (x2116 x754 12) x1990))))
(assert (=> (= (x2116 x2187 1) (x2116 0 x1916)) (and (= 1 x1916) (= x2187 0))))
(assert (=> (= (x2116 x698 1) (x2116 0 x1916)) (and (= x698 0) (= x1916 1))))
(assert (not (= 24384142 (x2116 x1422 1))))
(assert (=> (< (- x2462 1) 10000) (not (= x2462 (x2116 x1990 1)))))
(assert (x853 x2148))
(assert (x856 x600))
(assert (not (= 18446744073709551615 (x2116 x1422 1))))
(assert (=> (< (- x208 1) 10000) (not (= (x2116 x77 1) x208))))
(assert (x856 x377))
(assert (not (= 826074471 (x2116 x2462 11))))
(assert (not (= (x2116 x2458 6) 1000000000)))
(assert (x853 x1429))
(assert (x853 x3))
(assert (x853 x133))
(assert (= (and (not x1293) x945) x2038))
(assert (= (x2176 x450) (ite (= x1498 x450) x750 (x1415 x450))))
(assert (= x3154 (=> (and (= 1 x1591) (= x584 (> x2403 1)) (= x811 (x2858 (+ 256 x1799))) (= x1702 (x1111 1461501637330902918203684832716283019655932542975 x156))) (and (=> (and (not x584) (= 0 x1408)) x152) (=> x584 x1376)))))
(assert (not (= (x2116 x305 1) 17732073718202638403566719794745014173351532837126370201055734736014230421504)))
(assert (x853 x1984))
(assert (not (= (x2116 x1838 14) (x2116 x2462 12))))
(assert (=> (= (x2116 x1990 1) (x2116 x1324 1)) (= x1990 x1324)))
(assert (x853 x2107))
(assert (x853 x690))
(assert (=> (> (+ 10000 1) x990) (not (= x990 (x2116 x1422 1)))))
(assert (x853 x1964))
(assert (= (x342 x2478) (ite (= x888 x2478) x1032 (x1451 x2478))))
(assert (not (= (x2116 0 x2810) 18446744073709551615)))
(assert (not (= (x2116 x2462 14) (x2116 x2462 11))))
(assert (x853 x360))
(assert (=> (> (+ 10000 1) x2462) (not (= (x2116 0 x2810) x2462))))
(assert (not (= (x2116 x422 6) 1889567281)))
(assert (not (= 1889567281 (x2116 x2187 1))))
(assert (=> (= (x2116 0 x2810) (x2116 x208 14)) (and (= x2810 14) (= 0 x208))))
(assert (= (x830 x2811) (ite (and x2125 (not x1832)) (x2911 x2811) (x2189 x2811))))
(assert (= (=> (and (= x928 (= 0 x2447)) (= x2447 (x2570 x2695))) (and (=> x928 x1795) (=> (and (or (and (= x204 1) (> 4294967296 x1081) x2622) (and (not x2622) (= x204 x1917))) (not x928) (= x2622 (> x1917 0))) x1690))) x215))
(assert (not (= (x2116 1 x2630) 1000000000000000000000000000000000000)))
(assert (= (or (and x2507 (not x2558)) x578) x2966))
(assert (=> (= (x2116 1 x2630) (x2116 x698 1)) (and (= 1 x698) (= 1 x2630))))
(assert (= (x3011 x433) 17732073718202638403566719794745014173351532837126370201055734736014230421504))
(assert (not (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x2116 x208 14))))
(assert (not (= (x2116 x2462 13) 12)))
(assert (not (= (x2116 x208 14) 404098525)))
(assert (= (or (and (not x2882) x141) x1812) x2513))
(assert (= x631 (=> (and (= x2270 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618))) (= (x1111 18446744073709551615 x1046) x513) (= x1046 (x149 x3049)) (= (ite (< x2270 x513) 1 0) x958) (= x96 (= x1386 0)) (= x1386 (x1111 x474 x958)) (= (ite (not x717) 1 0) x474) (= (= 0 x618) x717)) (and (=> x96 x2648) (=> (not x96) x1795)))))
(assert (=> (< (- x2672 1) 10000) (not (= (x2116 1 x2406) x2672))))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 x698 1) x990))))
(assert (=> (< (- x698 1) 10000) (not (= (x2116 x754 12) x698))))
(assert (x853 x2849))
(assert (=> (> (+ 10000 1) x1422) (not (= x1422 (x2116 x2462 14)))))
(assert (x853 x177))
(assert (=> (< (- x422 1) 10000) (not (= (x2116 x2462 12) x422))))
(assert (not (= 13 (x2116 1 x2406))))
(assert (not (= (x2116 x2462 13) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (= x152 (=> (= x1979 x1408) x271)))
(assert (= x774 (and x75 x1437)))
(assert (x853 x2463))
(assert (x853 x946))
(assert (x853 x461))
(assert (= x1184 (and (not x109) x1101)))
(assert (x856 x2910))
(assert (= (ite (= x2239 x2967) x2462 (x918 x2239)) (x2759 x2239)))
(assert (x853 x2))
(assert (not (= (x2116 x422 6) (x2116 x1422 1))))
(assert (=> (< (- x2187 1) 10000) (not (= x2187 (x2116 x698 1)))))
(assert (x853 x1463))
(assert (=> (< (- x3040 1) 10000) (not (= (x2116 x2462 13) x3040))))
(assert (=> (> (+ 10000 1) x1324) (not (= (x2116 x2817 11) x1324))))
(assert (not (= 100000000000000 (x2116 x1990 1))))
(assert (x853 x682))
(assert (=> (> (+ 10000 1) x2462) (not (= x2462 (x2116 x305 1)))))
(assert (x1433 x2575 x1138))
(assert (= x799 (and x426 x1652)))
(assert (=> (> (+ 10000 1) x305) (not (= x305 (x2116 x2462 15)))))
(assert (not (= (x2116 0 x3058) 274184521717934524641157099916833587206)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 x77 1))))
(assert (= x2608 (=> (and (= (> x414 x1748) x1788) (= x1748 (uninterp_mod (* x1806 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> x1788 x2356) (=> (and (not x1788) (= x1365 4)) x813)))))
(assert (not (= (x2116 1 x2406) 117300739)))
(assert (=> (> (+ 10000 1) x754) (not (= x754 (x2116 x990 1)))))
(assert (=> (< (- x2817 1) 10000) (not (= (x2116 x2817 11) x2817))))
(assert (not (= (x2116 x422 6) 157198259)))
(assert (x853 x1428))
(assert (=> (= (x2116 x1838 14) (x2116 1 x2406)) (and (= x1838 1) (= 14 x2406))))
(assert (x853 x2817))
(assert (x856 x751))
(assert (x853 x296))
(assert (not (= (x2116 0 x2267) 6)))
(assert (x853 x919))
(assert (= (=> (and (= (x2116 1 x2630) x1757) (>= x2245 0) (<= x2245 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x107 x1757) x2245) (= (< 1 x248) x312) (= x248 (x472 x574))) (and (=> (not x312) x1795) (=> (and (= x4 (> x2867 2)) (= (x1111 1461501637330902918203684832716283019655932542975 x2245) x3137) (= x63 1) (= x2503 (x2858 (+ 64 x574))) (not x4) x312) x2751))) x1088))
(assert (not (= 274184521717934524641157099916833587206 (x2116 0 x1916))))
(assert (= x1253 (=> (and (= (x2858 (+ x2588 64)) x2055) (= (ite (= x2959 0) x357 (ite (= 32 x2959) x3129 (ite (= x2959 64) x2588 (x3044 x2959)))) x1655) (= (x1453 224) x2973) (= (x2858 (+ x2588 32)) x2959) (= x127 (ite (= 0 x2055) x357 (ite (= x2055 32) x3129 (ite (= 64 x2055) x2588 (x3044 x2055))))) (= x2905 (= x1735 96)) (= (x2858 (+ 64 x2588)) x1496) (= (x2858 (+ 32 x2588)) x597) (= 96 x1735) (= x1144 (x2048 256)) (= (ite (= 0 x1933) x357 (ite (= x1933 32) x3129 (ite (= x1933 64) x2588 (x3044 x1933)))) x874) (= x1933 x2588)) (and (=> (= x3102 false) x132) x2905))))
(assert (x853 x2850))
(assert (x853 x151))
(assert (= x1349 (=> (and (= (ite (> x336 x2076) 1 0) x1911) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)) x2076) (= x336 (x2858 (+ 1000000000000000000 x892))) (= (= x1573 0) x1839) (= (= x1541 0) x403) (= (ite (not x1839) 1 0) x1742) (= x1541 (x1111 x1742 x1911))) (and (=> x403 x2288) (=> (not x403) x1795)))))
(assert (not (= (x2116 1 x2406) 549896565)))
(assert (x853 x2233))
(assert (= 0 (x250 x637)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 0 x2267))))
(assert (x853 x71))
(assert (not (= 11548673047482463375710962565434449992668293034397312241487562681223695302656 (x2116 x754 12))))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 0 x92))))
(assert (x853 x1231))
(assert (= x2866 (and x3127 x309)))
(assert (not (= (x2116 0 x1916) 66649967879025377632792054650135220247173487182192293797349964221703864188928)))
(assert (= (=> (= x2065 (= x1771 274184521717934524641157099916833587202)) (and (=> (not x2065) x2916) (=> (and (= 1 x2591) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2818) (= 32 x1732) (> x2230 0) (not (= 117300739 x2051)) (= 4 x325) (not (> 4 x325)) (= 404098525 x2051) (> 826074471 x2051) (= x1238 10894474682274239493831243662817379401261526446360622092269559273883068006400) (= x2109 x325) (<= 0 x2818) x2065 (= (x2275 274184521717934524641157099916833587202) x2230) (not (= 157198259 x2051))) x2185))) x1027))
(assert (not (= (x2116 x1990 1) 24384142)))
(assert (not (= (x2116 x1324 1) 1100000000000000000)))
(assert (x853 x2627))
(assert (= (=> (and (= x2364 x2187) (= x2774 (= x2187 x682))) (and (=> (and (= (x2116 x2187 1) x633) x2774 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x677) (= (x2988 x633) x677) (= x1763 32) (= x2684 1) (<= 0 x677)) x423) (=> (not x2774) x424))) x1705))
(assert (not (= (x2116 1 x2630) 1889567281)))
(assert (x853 x1651))
(assert (not (= (x2116 x2462 14) (x2116 x1324 1))))
(assert (x853 x1237))
(assert (x853 x1274))
(assert (not (= (x2116 x77 1) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 1 x2406))))
(assert (=> (= (x2116 x2964 14) (x2116 x2462 14)) (= x2964 x2462)))
(assert (not (= (x2116 x2817 11) (x2116 x2672 13))))
(assert (=> (> (+ 10000 1) x754) (not (= (x2116 x2462 13) x754))))
(assert (= (x1234 x1933) (ite (= x1933 x384) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x707 x1933))))
(assert (not (= (x2116 x208 14) (x2116 x77 1))))
(assert (= (ite (= x2386 x303) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1851 x2386)) (x817 x2386)))
(assert (= x2062 (=> (and (= x259 x1233) (= x2379 (x28 x2627)) (= x1575 (> x2379 0))) (and (=> x1575 x1602) (=> (not x1575) x1795)))))
(assert (not (= (x2116 1 x2406) 11)))
(assert (= (x2911 x2756) (ite (and x324 x867 x1119) (x1271 x2756) (x383 x2756))))
(assert (=> (= (x2116 0 x1916) (x2116 x2672 13)) (and (= x1916 13) (= 0 x2672))))
(assert (=> (< (- x2187 1) 10000) (not (= x2187 (x2116 x2964 14)))))
(assert (= x2689 (or (and x1360 (not x2198)) (and x473 x258))))
(assert (x853 x559))
(assert (not (= 117300739 (x2116 x77 1))))
(assert (= (x2176 x772) (ite (= x1498 x772) x750 (x1415 x772))))
(assert (not (= 1889567281 (x2116 x2462 14))))
(assert (= (=> (and (= (> x1539 0) x1222) (= x1539 (x1011 x1221))) (and (=> x1222 x2136) (=> (not x1222) x1795))) x1717))
(assert (=> (< (- x698 1) 10000) (not (= x698 (x2116 x2462 13)))))
(assert (= x249 (and x2254 x2654)))
(assert (=> (> (+ 10000 1) x222) (not (= x222 (x2116 0 x1916)))))
(assert (not (= (x2116 x305 1) 826074471)))
(assert (x853 x2922))
(assert (not (= (x2116 x698 1) 1461501637330902918203684832716283019655932542976)))
(assert (= (and (not x1486) x288) x341))
(assert (x853 x1351))
(assert (=> (> (+ 10000 1) x2187) (not (= (x2116 x2462 13) x2187))))
(assert (x853 x2377))
(assert (not (= 1000000000000000000 (x2116 0 x2810))))
(assert (x853 x2119))
(assert (=> (< (- x208 1) 10000) (not (= (x2116 x1422 1) x208))))
(assert (not (= 18446744073709551616 (x2116 0 x2204))))
(assert (=> (> (+ 10000 1) x222) (not (= x222 (x2116 x2187 1)))))
(assert (not (= 15 (x2116 x1422 1))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 x2672 13))))
(assert (= (x963 x2239) (ite (= x2239 x2793) x1824 (x3019 x2239))))
(assert (not (= (x2116 0 x92) 1937038442)))
(assert (=> (> (+ 10000 1) x754) (not (= x754 (x2116 0 x2810)))))
(assert (x853 x117))
(assert (=> (< (- x2817 1) 10000) (not (= x2817 (x2116 x2187 1)))))
(assert (= x736 (or x1510 (and (not x1834) x2617))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 x77 1))))
(assert (x853 x3009))
(assert (not (= (x2116 x1990 1) 11)))
(assert (=> (< (- x2964 1) 10000) (not (= (x2116 0 x3058) x2964))))
(assert (not (= (x2116 x2462 15) (x2116 x1990 1))))
(assert (not (= (x2116 x698 1) 1100000000000000000)))
(assert (= x1302 (and x2614 (not x507))))
(assert (x853 x2926))
(assert (= (ite (= x2567 x2959) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1270 x2959)) (x1755 x2959)))
(assert (= (x173 x2239) (ite (= x2283 x2239) x1450 (x1665 x2239))))
(assert (x856 x422))
(assert (x853 x816))
(assert (x1433 x2458 x2334))
(assert (x856 x110))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 x754 12))))
(assert (= (x173 x2478) (ite (= x2478 x2283) x1450 (x1665 x2478))))
(assert (x853 x1702))
(assert (not (= (x2116 x2672 13) 1889567281)))
(assert (x853 x3018))
(assert (not (= (x2116 x2462 11) 549896565)))
(assert (= (=> (and (< 0 x2944) (= x2290 (= x3078 0)) (= (x2275 274184521717934524641157099916833587233) x2944)) (and (=> x2290 x2550) (=> (not x2290) x1795))) x1637))
(assert (not (= 4294967296 (x2116 0 x2204))))
(assert (= (=> (and (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x991) x1340) (= x991 (x2858 (+ 31 x1981))) (= (x2858 (+ x1340 x2806)) x71) (= x1646 (or (> x1981 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1981)) (< x1981 32))))) (and (=> (not x1646) x195) (=> x1646 x1795))) x2069))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x754 12))))
(assert (x853 x1701))
(assert (not (= (x2116 x305 1) (x2116 x2462 13))))
(assert (x853 x303))
(assert (not (= (x2116 x990 1) (x2116 x2672 13))))
(assert (not (= (x2116 x2462 11) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (not (= (x2116 0 x2267) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (= (and (not x1318) x889) x3171))
(assert (=> (= (x2116 1 x2406) (x2116 x77 1)) (and (= 1 x2406) (= x77 1))))
(assert (x853 x325))
(assert (not (= 0 (x2116 x1838 14))))
(assert (= (x383 x3035) (ite (= x2723 x3035) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x3035))))
(assert (x853 x613))
(assert (=> (> (+ 10000 1) x222) (not (= (x2116 x698 1) x222))))
(assert (= (ite (= x2239 x1615) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x2239)) (x797 x2239)))
(assert (= (ite (and (not x1832) x2125) (x2911 x2478) (x2189 x2478)) (x830 x2478)))
(assert (not (= 15 (x2116 x990 1))))
(assert (not (= 1029106033 (x2116 x2964 14))))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 x2462 12))))
(assert (not (= (x2116 0 x2267) 1000000000)))
(assert (not (= (x2116 x422 6) (x2116 x2964 14))))
(assert (not (= (x2116 x990 1) 549896565)))
(assert (x1752 x2810))
(assert (x853 x2672))
(assert (= (=> (and (= (< 18446744073709551615 x700) x41) (= (x2858 (+ x481 1)) x700)) (and (=> x41 x1795) (=> (not x41) x441))) x1583))
(assert (x853 x514))
(assert (= x924 (=> (= x587 (= 0 x2468)) (and (=> x587 x1795) (=> (not x587) x313)))))
(assert (= x561 (=> (and (= (or (and (> 128 x308) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x308))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x308)) x922) (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2569) x994) (= (x2858 (+ x994 x1511)) x1548) (= x2569 (x2858 (+ x308 31)))) (and (=> (not x922) x3097) (=> x922 x1795)))))
(assert (=> (= (x2116 0 x1916) (x2116 x2458 6)) (and (= x1916 6) (= x2458 0))))
(assert (not (= (x2116 x2458 6) 1461501637330902918203684832716283019655932542976)))
(assert (not (= 11548673047482463375710962565434449992668293034397312241487562681223695302656 (x2116 0 x1916))))
(assert (not (= (x2116 0 x1916) 6)))
(assert (x853 x2478))
(assert (=> (> (+ 10000 1) x104) (not (= x104 (x2116 0 x2204)))))
(assert (= (ite (and x1600 x1883 x2130) (x763 x360) (x598 x360)) (x1686 x360)))
(assert (not (= (x2116 x2462 15) (x2116 x2187 1))))
(assert (x856 x340))
(assert (x856 x102))
(assert (=> (= (x2116 x2817 11) (x2116 0 x2810)) (and (= x2810 11) (= 0 x2817))))
(assert (x434 x226 x125 x577 x718))
(assert (not (= (x2116 x305 1) 4294967295)))
(assert (= (ite (= x2478 x2120) x1366 (x1054 x2478)) (x2045 x2478)))
(assert (not (= (x2116 x2817 11) 24384142)))
(assert (=> (= (x2116 x1422 1) (x2116 0 x2204)) (and (= x1422 0) (= 1 x2204))))
(assert (not (= (x2116 0 x2267) 4294967295)))
(assert (= x2864 (and x2559 (not x1473))))
(assert (= (ite (= x303 x2959) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1851 x2959)) (x817 x2959)))
(assert (not (= (x2116 x2187 1) 18446744073709551615)))
(assert (not (= (x2116 x2458 6) (x2116 x1990 1))))
(assert (not (= (x2116 1 x2630) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (= x2960 (and x2892 x1900)))
(assert (= (x383 x360) (ite (= x360 x2723) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x360))))
(assert (= (x383 x450) (ite (= x450 x2723) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x450))))
(assert (not (= (x2116 1 x2630) 1)))
(assert (x853 x840))
(assert (not (= 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2116 0 x1916))))
(assert (=> (< (- x698 1) 10000) (not (= (x2116 x422 6) x698))))
(assert (x853 x2449))
(assert (x853 x2816))
(assert (=> (< (- x698 1) 10000) (not (= (x2116 x2458 6) x698))))
(assert (x856 x2528))
(assert (x853 x2439))
(assert (not (= 1029106033 (x2116 x2462 14))))
(assert (x853 x1315))
(assert (=> (< (- x3040 1) 10000) (not (= (x2116 0 x2810) x3040))))
(assert (x853 x2949))
(assert (= x423 (=> (and (= x2684 x242) (= x1763 x1912)) x3120)))
(assert (=> (> (+ 10000 1) x2964) (not (= x2964 (x2116 x2462 11)))))
(assert (= (x173 x2959) (ite (= x2283 x2959) x1450 (x1665 x2959))))
(assert (x853 x1327))
(assert (= (=> (and (= x1671 (x1111 x992 x179)) (= (= x1671 0) x723) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331)) x1161) (= x715 (= x1331 0)) (= (x2651 x2787) x1331) (= (ite (not x715) 1 0) x992) (= x179 (ite (< x1161 x1004) 1 0))) (and (=> (not x723) x1795) (=> (and (= (> x1200 0) x3121) x723 (or (and (= 1 x2989) x3121 (< x2081 4294967296)) (and (not x3121) (= x2989 x1200))) (= x3098 (uninterp_mod (* x1004 x1331) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (- (/ x3098 1000000000000000000) (uninterp_frac x3098 1000000000000000000)) x1978)) x291))) x788))
(assert (= (and x774 (not x1252)) x3157))
(assert (x853 x225))
(assert (x853 x1258))
(assert (x856 x2435))
(assert (x853 x582))
(assert (x853 x1942))
(assert (not (= (x2116 1 x2630) 157198259)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 0 x92))))
(assert (x853 x2420))
(assert (= (x2176 x2959) (ite (= x1498 x2959) x750 (x1415 x2959))))
(assert (= (x1102 x1427) 72464927124685711895252664195178772226123872012682517813167109100718830649344))
(assert (not (= (x2116 x2462 15) 404098525)))
(assert (x853 x3050))
(assert (x853 x573))
(assert (=> (= (x2116 x2964 14) (x2116 0 x92)) (and (= 14 x92) (= 0 x2964))))
(assert (not (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x2116 x2462 14))))
(assert (x853 x843))
(assert (x853 x1202))
(assert (not (= 274184521717934524641157099916833587206 (x2116 x2187 1))))
(assert (x853 x1605))
(assert (=> (= (x2116 x2462 15) (x2116 0 x2204)) (and (= x2462 0) (= 15 x2204))))
(assert (= (=> (and (= (x1111 1461501637330902918203684832716283019655932542975 x466) x2785) (= 1 x914) (= x1913 (x2858 (+ 32 x546))) (= x1397 (> x509 1))) (and (=> x1397 x307) (=> (and (= 0 x1698) (not x1397)) x3014))) x2551))
(assert (not (= 13 (x2116 x1324 1))))
(assert (x853 x874))
(assert (not (= 1000000000000000000000000000000000000 (x2116 x2964 14))))
(assert (not (= (x2116 x1324 1) 117300739)))
(assert (not (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x2116 x1838 14))))
(assert (= 0 (x90 x1241)))
(assert (not (= (x2116 x1422 1) (x2116 x208 14))))
(assert (=> (> (+ 10000 1) x2187) (not (= x2187 (x2116 x2817 11)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 x1422 1))))
(assert (=> (> (+ 10000 1) x305) (not (= (x2116 x2462 14) x305))))
(assert (=> (> (+ 10000 1) x77) (not (= (x2116 x990 1) x77))))
(assert (x853 x1833))
(assert (x853 x702))
(assert (not (= (x2116 x1990 1) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (= x290 (=> (and (= x3086 (x861 x1043)) (= (x3023 x2068 160) x1754) (= (< x3086 x1754) x57)) (and (=> x57 x1795) (=> (not x57) x455)))))
(assert (not (= (x2116 x422 6) (x2116 x1324 1))))
(assert (x853 x2295))
(assert (= (=> (= x1703 (= 3 x2696)) (and (=> (not x1703) x1006) (=> (and (= x357 x272) (= x2588 x1799) x1703 (= x646 x3129)) x1253))) x1694))
(assert (= (=> (and (= x2204 x646) (= x2059 x1521) (= x2627 x546) (= x272 x2673)) x628) x1264))
(assert (=> (= (x2116 x2817 11) (x2116 1 x2630)) (and (= 1 x2817) (= x2630 11))))
(assert (= (=> (and (= (> 1000000000000000000 x2711) x1930) (= x2711 (x1936 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x892))) (= (uninterp_mod (* 1000000000000000000 x2832) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1889)) (and (=> x1930 x1795) (=> (not x1930) x1349))) x2221))
(assert (x853 x1408))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 0 x2810))))
(assert (x853 x2059))
(assert (not (= (x2116 x2462 13) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (= (and (not x567) x396) x2605))
(assert (=> (= (x2116 0 x2810) (x2116 x2462 14)) (and (= 0 x2462) (= x2810 14))))
(assert (= x603 (=> (= x1344 (> 1100000000000000000 x2582)) (and (=> (and (= 0 x1365) (not x1344)) x813) (=> x1344 x282)))))
(assert (x853 x2021))
(assert (x853 x3041))
(assert (not (= (x2116 0 x2267) 18446744073709551615)))
(assert (= (x1124 x2174) (ite (= x2174 x931) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x76 x2174))))
(assert (x853 x666))
(assert (x853 x711))
(assert (x1752 x104))
(assert (= x2574 (=> (and (= (= x3103 x2840) x1900) (= x2840 (x1111 18446744073709551615 x3103)) (= x2478 (x2858 (+ x2894 32))) (= (x1586 x2478) x3103)) (and (=> (not x1900) x1795) (=> x1900 x1491)))))
(assert (= x2409 (and x1223 x403)))
(assert (= x1517 (and (not x2530) x863)))
(assert (x853 x1392))
(assert (= (x797 x2811) (ite (= x1615 x2811) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x2811))))
(assert (=> (> (+ 10000 1) x305) (not (= (x2116 x1324 1) x305))))
(assert (x853 x1414))
(assert (x853 x580))
(assert (= x655 (=> (and (= x2742 x732) (= x1855 0)) x1525)))
(assert (not (= 1000000000000000000000000000000000000 (x2116 x698 1))))
(assert (not (= (x2116 x1990 1) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (x853 x931))
(assert (not (= (x2116 x698 1) (x2116 x208 14))))
(assert (not (= 1937038442 (x2116 x1324 1))))
(assert (= (and x3048 x2602) x2224))
(assert (= (=> (= (= 0 x2139) x1863) (and (=> x1863 x1795) (=> (not x1863) x2522))) x1249))
(assert (not (= 14262166148461681479388312084279688412379623686150252715788501447688379695104 (x2116 0 x2204))))
(assert (=> (= (x2116 1 x2406) (x2116 x1990 1)) (and (= 1 x2406) (= x1990 1))))
(assert (x853 x2250))
(assert (not (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2116 x754 12))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 0 x2204))))
(assert (x1752 x77))
(assert (x853 x279))
(assert (x853 x1219))
(assert (=> (> (+ 10000 1) x2817) (not (= x2817 (x2116 x1990 1)))))
(assert (not (= (x2116 0 x2267) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (= x1259 (=> (= x814 (= 0 x1859)) (and (=> x814 x1795) (=> (not x814) x245)))))
(assert (not (= 1 (x2116 x2964 14))))
(assert (= (ite (= x2174 x2894) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x680 x2174)) (x2371 x2174)))
(assert (x856 x119))
(assert (not (= (x2116 0 x92) 11)))
(assert (x853 x2750))
(assert (x853 x1799))
(assert (= (x1846 x2386) (ite (and x8 x2885 x2661) (x2361 x2386) (x1153 x2386))))
(assert (= (and x300 (not x2777)) x1063))
(assert (x853 x637))
(assert (= (ite (= x2055 x2132) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2012 x2055)) (x1677 x2055)))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 x2817 11))))
(assert (= (x2830 x2055) (ite x2966 (ite (and (not x2558) x2507) (x2024 x2055) (x81 x2055)) (x830 x2055))))
(assert (=> (> (+ 10000 1) x305) (not (= x305 (x2116 x754 12)))))
(assert (not (= 157198259 (x2116 x77 1))))
(assert (not (= (x2116 x422 6) 4294967296)))
(assert (x856 x1524))
(assert (= x2721 (and x586 x2238)))
(assert (x853 x692))
(assert (=> (> (+ 10000 1) x104) (not (= (x2116 1 x2406) x104))))
(assert (=> (> (+ 10000 1) x1324) (not (= (x2116 x1838 14) x1324))))
(assert (x853 x1476))
(assert (= (and x978 (not x1118)) x2803))
(assert (not (= 1000000000000000000000000000000000000 (x2116 x1422 1))))
(assert (x853 x2538))
(assert (x1433 x2022 x696))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x2462 14))))
(assert (= (=> (and (= 0 x2053) (= x2552 (x1846 x2962)) (= x2349 (x1453 224)) (= 1 x1044) (= x2013 (x1336 320)) (= x2582 (x2886 288)) (= x1806 (x2048 256)) (= (= 0 x1299) x369) (= (x1111 x1044 x2053) x1299)) (and (=> (not x369) x1795) (=> x369 x603))) x2298))
(assert (= (x1390 x2478) (ite (= x2478 x1511) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x1983 x2478))))
(assert (x853 x2556))
(assert (= (x2738 x2959) (ite (and x207 x604 x3003) (x398 x2959) (x2519 x2959))))
(assert (=> (= (x2116 0 x2204) (x2116 0 x2810)) (= x2810 x2204)))
(assert (not (= (x2116 x754 12) 1000000000000000000)))
(assert (= (ite (= x450 x1511) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x1983 x450)) (x1390 x450)))
(assert (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x817 x303)))
(assert (not (= (x2116 x2964 14) 13)))
(assert (= 0 (x2024 x2239)))
(assert (x853 x1221))
(assert (= (x1903 x2386) (ite (and x141 (not x2882)) (x2625 x2386) (ite (and (not x2442) x921) (x707 x2386) (x2265 x2386)))))
(assert (=> (> (+ 10000 1) x698) (not (= x698 (x2116 x2817 11)))))
(assert (x1370 x1279 x1707))
(assert (not (= (x2116 0 x92) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (= (x1677 x2478) (ite (= x2132 x2478) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2012 x2478))))
(assert (x853 x1042))
(assert (= (x1686 x3035) (ite (and x1883 x2130 x1600) (x763 x3035) (x598 x3035))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2116 x2462 13))))
(assert (not (= 24384142 (x2116 0 x92))))
(assert (x853 x328))
(assert (x853 x2795))
(assert (x853 x416))
(assert (not (= 0 (x2116 x2187 1))))
(assert (= (=> (= (> 1000000000000000000 x511) x1620) (and (=> x1620 x159) (=> (and (not x1620) (= x438 1)) x516))) x3057))
(assert (=> (> (+ 10000 1) x208) (not (= (x2116 x2672 13) x208))))
(assert (x856 x1047))
(assert (= (ite (= x2811 x3009) x1074 (x563 x2811)) (x2064 x2811)))
(assert (=> (> (+ 10000 1) x754) (not (= (x2116 0 x2267) x754))))
(assert (x853 x1218))
(assert (=> (< (- x2817 1) 10000) (not (= (x2116 0 x2267) x2817))))
(assert (x853 x951))
(assert (not (= (x2116 x2817 11) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (= (=> (and (= (< x2831 x2321) x775) (= x2321 (x3023 x1355 160)) (= (x568 x546) x2831)) (and (=> (not x775) x981) (=> x775 x1795))) x1330))
(assert (=> (= (x2116 x208 14) (x2116 0 x2267)) (and (= 14 x2267) (= x208 0))))
(assert (not (= (x2116 x1324 1) 274184521717934524641157099916833587202)))
(assert (=> (> (+ 10000 1) x1838) (not (= x1838 (x2116 x2187 1)))))
(assert (x1433 x2245 x3066))
(assert (=> (= (x2116 x698 1) (x2116 x1990 1)) (= x698 x1990)))
(assert (= (and x2442 x921) x2319))
(assert (not (= (x2116 0 x2810) 117300739)))
(assert (= (ite (= x1511 x2756) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x1983 x2756)) (x1390 x2756)))
(assert (not (= 404098525 (x2116 x990 1))))
(assert (not (= 14262166148461681479388312084279688412379623686150252715788501447688379695104 (x2116 x2462 12))))
(assert (= (ite (and x3003 x604 x207) (x398 x772) (x2519 x772)) (x2738 x772)))
(assert (x853 x2851))
(assert (=> (> (+ 10000 1) x2672) (not (= x2672 (x2116 x305 1)))))
(assert (= x2096 (and x2661 x8)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 x208 14))))
(assert (x853 x961))
(assert (= x870 (=> (and (= (< x72 x1548) x2383) (= (x2858 (+ x1548 128)) x72) (= x2799 (= 0 (ite x247 1 0))) (= x247 (or x2383 x1167)) (= x1167 (> x72 18446744073709551615))) (and (=> x2799 x143) (=> (not x2799) x1795)))))
(assert (=> (= (x2116 x2462 14) (x2116 1 x2630)) (and (= x2462 1) (= x2630 14))))
(assert (x853 x2973))
(assert (=> (= (x2116 x2817 11) (x2116 0 x2267)) (and (= 11 x2267) (= 0 x2817))))
(assert (not (= (x2116 x1838 14) (x2116 x2672 13))))
(assert (= (and x607 x1522) x1939))
(assert (x853 x764))
(assert (x853 x602))
(assert (not (= (x2116 0 x2267) 1029106033)))
(assert (not (= (x2116 x990 1) 4294967296)))
(assert (= (x2083 x2174) (ite (= x2174 x2806) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2738 x2174))))
(assert (= (x2830 x2959) (ite x2966 (ite (and (not x2558) x2507) (x2024 x2959) (x81 x2959)) (x830 x2959))))
(assert (not (= (x2116 x305 1) 66649967879025377632792054650135220247173487182192293797349964221703864188928)))
(assert (= (=> (and (= (ite (< x2286 x688) 1 0) x943) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2566)) x2286) (= x186 (= 0 x3042)) (= (x1111 x1058 x943) x3042) (= x2900 (= x2566 0)) (= (ite (not x2900) 1 0) x1058) (= (x1270 x1129) x2566)) (and (=> (and (or (and (= 1 x1736) x2365 (< x2752 4294967296)) (and (not x2365) (= x1736 x749))) (= (> x749 0) x2365) (= (- (/ x827 1000000000000000000) (uninterp_frac x827 1000000000000000000)) x1858) (= x827 (uninterp_mod (* x688 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x186) x2925) (=> (not x186) x1795))) x1215))
(assert (x853 x357))
(assert (= x1813 (=> (= (= 0 x2482) x2476) (and (=> x2476 x1795) (=> (not x2476) x417)))))
(assert (x853 x1838))
(assert (=> (> (+ 10000 1) x305) (not (= x305 (x2116 x305 1)))))
(assert (= x2550 (=> (and (= 24384142 x711) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x651) (and (> 32 x651) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x651)))) x1961) (< x711 549896565) (not (> 4 x1169)) (> 1029106033 x711) (= (x1936 (- x1169 4)) x651) (> 1937038442 x711)) (and (=> (not x1961) x2641) (=> x1961 x1795)))))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 0 x2267))))
(assert (= (and x3143 (not x1530)) x257))
(assert (=> (> (+ 10000 1) x3040) (not (= x3040 (x2116 x2817 11)))))
(assert (=> (< (- x2462 1) 10000) (not (= x2462 (x2116 x2462 13)))))
(assert (not (= (x2116 0 x2810) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (x853 x884))
(assert (=> (> (+ 10000 1) x2964) (not (= (x2116 x77 1) x2964))))
(assert (x853 x1640))
(assert (x853 x2373))
(assert (=> (< (- x1990 1) 10000) (not (= (x2116 x2187 1) x1990))))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x2116 x2458 6)))))
(assert (x853 x2588))
(assert (=> (> (+ 10000 1) x2462) (not (= x2462 (x2116 x2462 12)))))
(assert (not (= (x2116 x2462 14) (x2116 x2462 15))))
(assert (x853 x2744))
(assert (x853 x2078))
(assert (= x1040 (and x454 x3024)))
(assert (not (= 1000000000 (x2116 x1990 1))))
(assert (=> (< (- x1990 1) 10000) (not (= (x2116 x2462 14) x1990))))
(assert (=> (= (x2116 x990 1) (x2116 0 x1916)) (and (= 0 x990) (= x1916 1))))
(assert (not (= (x2116 x2462 11) 117300739)))
(assert (not (= (x2116 x2187 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x853 x915))
(assert (not (= (x2116 x2462 12) (x2116 x698 1))))
(assert (x1752 x1422))
(assert (not (= (x2116 0 x1916) 33222205748031110454085609023467044101453017019085594488531032467161307152384)))
(assert (x853 x1631))
(assert (= (=> (and (= (x1276 x491) x1164) (= (= x1164 0) x1354)) (and (=> (and (or (and (= x875 x2853) (not x2382)) (and (= x2853 1) x2382 (< x2231 4294967296))) (not x1354) (= x2382 (> x875 0))) x1531) (=> x1354 x1795))) x2914))
(assert (x856 x474))
(assert (x853 x1748))
(assert (= x549 (=> (and (= (x2367 x2493) x2922) (= (= 0 x2922) x1522) (= x2493 (x2116 x2462 12)) (<= x2922 1461501637330902918203684832716283019655932542975) (>= x2922 0) (> 1461501637330902918203684832716283019655932542976 x2922) (= 0 x944)) (and (=> (not x1522) x2103) (=> x1522 x2418)))))
(assert (x434 x119 x1720 x2341 x571))
(assert (not (= (x2116 x305 1) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (= (x2371 x2386) (ite (= x2386 x2894) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x680 x2386))))
(assert (x853 x1343))
(assert (=> (< (- x2462 1) 10000) (not (= x2462 (x2116 0 x92)))))
(assert (not (= 1000000000 (x2116 x1324 1))))
(assert (x856 x1042))
(assert (= (x2911 x1571) (ite (and x1119 x867 x324) (x1271 x1571) (x383 x1571))))
(assert (x853 x480))
(assert (= (and x2202 x1967) x803))
(assert (x853 x1340))
(assert (=> (< (- x2964 1) 10000) (not (= x2964 (x2116 x2187 1)))))
(assert (x853 x181))
(assert (= (ite (= x2793 x2386) x1824 (x3019 x2386)) (x963 x2386)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x1324 1))))
(assert (= x964 (and x1971 (not x812))))
(assert (=> (> (+ 10000 1) x754) (not (= x754 (x2116 x2964 14)))))
(assert (not (= 117300739 (x2116 x305 1))))
(assert (x853 x232))
(assert (=> (= (x2116 0 x2267) (x2116 x1838 14)) (and (= 14 x2267) (= 0 x1838))))
(assert (x853 x1975))
(assert (= (=> (and (= x3020 (< 0 x2326)) (= x937 (= (ite x3020 x2326 (ite (= (x1111 1461501637330902918203684832716283019655932542975 x1624) x2320) 1 0)) 0)) (> 256 x2326) (= x2255 (x2116 x422 6)) (>= x2326 0) (<= x2326 255) (= (x465 x2255) x2326)) (and (=> (and (= x1832 (= x1343 x2320)) (= x2604 (> x2019 0)) (or (and x2604 (= 1 x3166) (< x346 4294967296)) (and (not x2604) (= x2019 x3166))) (= (ite x1832 1 0) x1199) (not x937) (= (x1111 1461501637330902918203684832716283019655932542975 x1624) x1343)) x1405) (=> (and (= x2760 x1615) (= 0 x420) x937 (= 0 x2556)) x2218))) x1908))
(assert (= (ite (= x931 x450) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x76 x450)) (x1124 x450)))
(assert (x853 x2501))
(assert (= (ite (= x2386 x2283) x1450 (x1665 x2386)) (x173 x2386)))
(assert (x853 x2878))
(assert (not (= (x2116 x2817 11) (x2116 x208 14))))
(assert (not (= 826074471 (x2116 x2462 15))))
(assert (=> (= (x2116 0 x92) (x2116 x2462 11)) (and (= x92 11) (= 0 x2462))))
(assert (x853 x899))
(assert (x856 x1094))
(assert (=> (< (- x754 1) 10000) (not (= x754 (x2116 x422 6)))))
(assert (x853 x1648))
(assert (not (= 1000000000000000000 (x2116 x1422 1))))
(assert (x853 x1163))
(assert (not (= (x2116 x990 1) 24384142)))
(assert (= (x707 x2959) (ite (and (not x3094) x1641) (x2625 x2959) (ite (and x1389 (not x1168) x2868) (x1797 x2959) (x2045 x2959)))))
(assert (x720 x1995 x634))
(assert (=> (> (+ 10000 1) x77) (not (= x77 (x2116 x2462 15)))))
(assert (not (= (x2116 x305 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x853 x574))
(assert (= (=> (= x1657 (= x3166 0)) (and (=> (not x1657) x3130) (=> x1657 x1795))) x1405))
(assert (x853 x2159))
(assert (=> (> (+ 10000 1) x2964) (not (= (x2116 0 x1916) x2964))))
(assert (=> (= (x2116 x1324 1) (x2116 0 x1916)) (and (= 1 x1916) (= x1324 0))))
(assert (x720 x777 x1075))
(assert (x853 x880))
(assert (= (x2911 x1142) (ite (and x324 x1119 x867) (x1271 x1142) (x383 x1142))))
(assert (=> (> (+ 10000 1) x698) (not (= (x2116 0 x2204) x698))))
(assert (=> (< (- x222 1) 10000) (not (= x222 (x2116 x754 12)))))
(assert (= x2238 (and x894 (not x793))))
(assert (=> (< (- x1324 1) 10000) (not (= (x2116 x990 1) x1324))))
(assert (not (= (x2116 0 x3058) 12)))
(assert (= (and x37 x3150) x2015))
(assert (not (= (x2116 x305 1) (x2116 x2817 11))))
(assert (= x2860 (=> (and (= (< x686 0) x2777) (= x1978 x2801) (= (x1936 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3106)) x686)) (and (=> (not x2777) x795) (=> x2777 x1795)))))
(assert (= x3161 (=> (and (= (= 0 x968) x1852) (= x968 (x2690 x690))) (and (=> (and (not x1852) (= (x2858 (+ x447 4)) x2473) (= x2074 (< 0 x145)) (= x766 (x1111 1461501637330902918203684832716283019655932542975 x2729)) (or (and (= 1 x1975) x2074 (< x2445 4294967296)) (and (not x2074) (= x145 x1975)))) x2331) (=> x1852 x1795)))))
(assert (x856 x777))
(assert (x853 x2326))
(assert (not (= 6 (x2116 x2462 14))))
(assert (x853 x2840))
(assert (x853 x500))
(assert (= (and (not x557) x1787) x3002))
(assert (x853 x752))
(assert (not (= (x2116 x2462 14) 404098525)))
(assert (x853 x1728))
(assert (= (=> (= x298 (or (and (> 128 x2889) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2889))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2889))) (and (=> (not x298) x2642) (=> x298 x1795))) x2214))
(assert (not (= (x2116 0 x1916) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x853 x1777))
(assert (x853 x1616))
(assert (=> (= (x2116 0 x2810) (x2116 x1422 1)) (and (= x1422 0) (= 1 x2810))))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x2187 1))))
(assert (x853 x2755))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 x698 1))))
(assert (=> (> (+ 10000 1) x1422) (not (= x1422 (x2116 0 x2204)))))
(assert (not (= (x2116 x1422 1) 1937038442)))
(assert (x853 x2462))
(assert (x853 x1973))
(assert (not (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x2116 1 x2630))))
(assert (not (= (x2116 x754 12) (x2116 x1324 1))))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x2506) x1700) (and (=> x1700 x448) (=> (not x1700) x809))) x806))
(assert (x853 x3122))
(assert (not (= 14 (x2116 x2462 11))))
(assert (=> (< (- x208 1) 10000) (not (= (x2116 x2462 11) x208))))
(assert (= x2808 (=> (and (= x74 (= x1422 x750)) (= x517 x1422)) (and (=> (and (>= x3080 0) (= x1016 1) (= x3080 (x1566 x2854)) x74 (= (x2116 x1422 1) x2854) (= x1964 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3080)) x2297) (=> (not x74) x1013)))))
(assert (=> (> (+ 10000 1) x2462) (not (= x2462 (x2116 1 x2406)))))
(assert (not (= (x2116 x1324 1) 404098525)))
(assert (= (x1240 x2756) (ite (= x2756 x2473) x766 (x1567 x2756))))
(assert (not (= 14262166148461681479388312084279688412379623686150252715788501447688379695104 (x2116 x422 6))))
(assert (not (= (x2116 x2458 6) (x2116 x2817 11))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x754 12))))
(assert (not (= (x2116 x1990 1) 15)))
(assert (= (ite (= x1639 x2239) x3087 (x2920 x2239)) (x1929 x2239)))
(assert (not (= 13 (x2116 x1990 1))))
(assert (not (= (x2116 x77 1) 100000000000000)))
(assert (=> (> (+ 10000 1) x77) (not (= x77 (x2116 x1838 14)))))
(assert (not (= (x2116 x698 1) (x2116 x2964 14))))
(assert (x1370 x1058 x943))
(assert (= x1634 (=> (and (= (x2858 (+ 32 x893)) x772) (= x1810 (= x1051 x840)) (= (x1111 18446744073709551615 x840) x1051) (= (x1162 x772) x840)) (and (=> (not x1810) x1795) (=> x1810 x2487)))))
(assert (not (= (x2116 x2462 14) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (not (= (x2116 x2462 14) 13)))
(assert (= (and x821 (not x2761)) x121))
(assert (not (= (x2116 0 x3058) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x2116 x1990 1) (x2116 x1838 14))))
(assert (not (= 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2116 x77 1))))
(assert (not (= 1 (x2116 1 x2406))))
(assert (x856 x1824))
(assert (not (= (x2116 x2462 14) 549896565)))
(assert (= x973 (=> (and (= x514 x1324) (= x2094 (= x750 x1324))) (and (=> (and (= x2241 (x2116 x1324 1)) (= (x2988 x2241) x239) (= x1375 1) x2094 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x239) (= x188 32) (<= 0 x239)) x70) (=> (not x2094) x240)))))
(assert (x853 x895))
(assert (= x2554 (=> (and (= x1489 (x28 x2627)) (= (> x1489 0) x996)) (and (=> (not x996) x1795) (=> (and (= x1029 (x69 x629)) (= (x2858 (+ 32 x2627)) x629) (or (and (not x2961) (= x1140 x2304)) (and (= x2304 1) (< x2159 4294967296) x2961)) (= x2961 (> x1140 0)) x996) x1872)))))
(assert (x434 x2569 x468 x2232 x60))
(assert (=> (< (- x2458 1) 10000) (not (= x2458 (x2116 0 x2810)))))
(assert (= (and x153 x270) x73))
(assert (=> (> (+ 10000 1) x3040) (not (= (x2116 1 x2406) x3040))))
(assert (not (= (x2116 0 x2204) 1000000000000000000)))
(assert (x853 x1730))
(assert (= (x1102 x2055) (ite (= x1427 x2055) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x1276 x2055))))
(assert (not (= (x2116 x1324 1) 100000000000000)))
(assert (not (= (x2116 x305 1) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (x853 x80))
(assert (x853 x2781))
(assert (=> (= (x2116 0 x92) (x2116 x2817 11)) (and (= x2817 0) (= x92 11))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 x2462 11))))
(assert (x856 x2697))
(assert (=> (= (x2116 1 x2630) (x2116 x422 6)) (and (= 1 x422) (= x2630 6))))
(assert (not (= (x2116 x2458 6) (x2116 x305 1))))
(assert (not (= (x2116 x2964 14) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= (x1492 x450) (ite (= x752 x450) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2830 x450))))
(assert (= (=> (and (= (x1851 x1701) x897) (= x197 (ite (not x1416) 1 0)) (= (= 0 x897) x1416) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897)) x3118) (= (ite (> x3160 x3118) 1 0) x822) (= x310 (= 0 x738)) (= x738 (x1111 x197 x822))) (and (=> (and (= x1243 (uninterp_mod (* x897 x3160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and x86 (> 4294967296 x91) (= 1 x275)) (and (not x86) (= x2699 x275))) x310 (= (- (/ x1243 1000000000000000000) (uninterp_frac x1243 1000000000000000000)) x1663) (= x86 (> x2699 0))) x180) (=> (not x310) x1795))) x2981))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 0 x1916))))
(assert (x853 x1951))
(assert (=> (< (- x77 1) 10000) (not (= (x2116 0 x3058) x77))))
(assert (=> (< (- x990 1) 10000) (not (= x990 (x2116 x77 1)))))
(assert (x853 x1435))
(assert (x853 x2352))
(assert (x853 x1100))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 x2462 12))))
(assert (= (x1234 x2174) (ite (= x2174 x384) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x707 x2174))))
(assert (= (and (not x445) x2135) x144))
(assert (= (x598 x772) (ite (= x772 x789) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x772))))
(assert (= (x1915 x1933) (ite (= x1933 x893) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2651 x1933))))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x2964 14))))
(assert (= 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2994 x1565)))
(assert (x853 x1197))
(assert (= x1404 (=> (and (= (x2858 (+ x1799 256)) x794) (= (> x1754 1) x860) (= x238 (x1111 1461501637330902918203684832716283019655932542975 x2068)) (= x3125 1)) (and (=> x860 x442) (=> (and (= 0 x1070) (not x860)) x2474)))))
(assert (not (= 18446744073709551616 (x2116 x2817 11))))
(assert (not (= 826074471 (x2116 x2672 13))))
(assert (not (= (x2116 x2462 13) 1461501637330902918203684832716283019655932542976)))
(assert (= (ite x1988 (ite (and x3085 (not x278)) (x2626 x2055) (x1413 x2055)) (x302 x2055)) (x523 x2055)))
(assert (x853 x2200))
(assert (not (= 18446744073709551616 (x2116 x1422 1))))
(assert (= x2612 (=> (and (= 0 x2197) (= (x2116 x2462 11) x172) (= x2630 (x2116 x2462 13)) (> 1461501637330902918203684832716283019655932542976 x3028) (= (- (/ x1868 1000000000000000000) (uninterp_frac x1868 1000000000000000000)) x1734) (= (x107 x287) x1468) (= (< 18446744073709551615 x1287) x538) (= (x2116 0 x2630) x287) (<= 0 x1468) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1468) (= x1868 (uninterp_mod (* 1100000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 1461501637330902918203684832716283019655932542975 x3028) (= (x636 x172) x3028) (<= 0 x3028) (= (x3023 x1468 160) x1287)) (and (=> x538 x1795) (=> (and (or x2563 (and (= x2439 (x2858 (+ x574 32))) (not x2563) (= (uninterp_mod (* x1287 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2805))) (= (= 0 x1287) x2563) (= (uninterp_mod (* 32 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3018) (= (x2858 (+ x574 x1493)) x2469) (not x538) (= x1493 (x2858 (+ 32 x3018)))) x2260)))))
(assert (x856 x1058))
(assert (= (ite (and (not x2882) x141) (x2625 x450) (ite (and x921 (not x2442)) (x707 x450) (x2265 x450))) (x1903 x450)))
(assert (not (= (x2116 x2964 14) (x2116 x1422 1))))
(assert (= (and x497 x369) x2590))
(assert (not (= (x2116 x754 12) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (> (+ 10000 1) x2672) (not (= x2672 (x2116 x2187 1)))))
(assert (not (= (x2116 x1324 1) 1000000000000000000)))
(assert (= x54 (=> (and (= x20 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x726)) (= x726 (x2858 (+ x2665 31))) (= (or (and (= (<= x2665 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2665)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2665)) x1862) (= (x2858 (+ x491 x20)) x1427)) (and (=> (not x1862) x2914) (=> x1862 x1795)))))
(assert (=> (> (+ 10000 1) x305) (not (= (x2116 0 x2204) x305))))
(assert (=> (< (- x77 1) 10000) (not (= x77 (x2116 x422 6)))))
(assert (x853 x2057))
(assert (x853 x888))
(assert (x853 x506))
(assert (= (ite (= x2793 x2478) x1824 (x3019 x2478)) (x963 x2478)))
(assert (= x1967 (and x3002 (not x2565))))
(assert (=> (< (- x1990 1) 10000) (not (= x1990 (x2116 x2462 15)))))
(assert (x853 x3106))
(assert (= (x3023 x1468 160) (- (/ x1468 1461501637330902918203684832716283019655932542976) (uninterp_frac x1468 1461501637330902918203684832716283019655932542976))))
(assert (x853 x2247))
(assert (not (= (x2116 x422 6) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (x853 x2575))
(assert (not (= (x2116 x2458 6) 17732073718202638403566719794745014173351532837126370201055734736014230421504)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x422 6))))
(assert (x434 x955 x1005 x1178 x2957))
(assert (x856 x179))
(assert (=> (> (+ 10000 1) x2817) (not (= (x2116 x2462 13) x2817))))
(assert (not (= (x2116 0 x2267) 117300739)))
(assert (x853 x156))
(assert (= (ite (= x360 x789) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x360)) (x598 x360)))
(assert (= x2424 (=> (and (= x2723 (x2858 (+ x508 x447))) (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1658) x508) (= (or (> x2445 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2445 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2445 32))) x2607) (= x1658 (x2858 (+ x2445 31)))) (and (=> x2607 x1795) (=> (not x2607) x2663)))))
(assert (= (ite (= x2793 x450) x1824 (x3019 x450)) (x963 x450)))
(assert (x853 x1744))
(assert (not (= (x2116 x422 6) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (= (x2116 0 x2267) (x2116 x2462 12)) (and (= x2462 0) (= 12 x2267))))
(assert (x853 x2729))
(assert (= x1362 (and x234 x1980)))
(assert (x853 x560))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x2116 x698 1)))))
(assert (x853 x2526))
(assert (not (= (x2116 x2672 13) 1029106033)))
(assert (=> (= (x2116 x2817 11) (x2116 0 x3058)) (and (= 11 x3058) (= 0 x2817))))
(assert (not (= 11 (x2116 0 x2267))))
(assert (= (x598 x2478) (ite (= x789 x2478) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x2478))))
(assert (= x2999 (and x84 x310)))
(assert (x853 x906))
(assert (not (= 1937038442 (x2116 0 x3058))))
(assert (x434 x991 x1128 x2874 x1627))
(assert (= (and x3138 (not x1852)) x2337))
(assert (=> (> (+ 10000 1) x77) (not (= (x2116 1 x2630) x77))))
(assert (= (x797 x2959) (ite (= x2959 x1615) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x2959))))
(assert (not (= 11548673047482463375710962565434449992668293034397312241487562681223695302656 (x2116 x2462 11))))
(assert (=> (> (+ 10000 1) x3040) (not (= x3040 (x2116 0 x3058)))))
(assert (=> (< (- x2964 1) 10000) (not (= (x2116 0 x92) x2964))))
(assert (x853 x1923))
(assert (not (= (x2116 x77 1) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (= (- (/ x2068 1461501637330902918203684832716283019655932542976) (uninterp_frac x2068 1461501637330902918203684832716283019655932542976)) (x3023 x2068 160)))
(assert (x853 x3039))
(assert (=> (= (x2116 0 x2204) (x2116 x2817 11)) (and (= x2204 11) (= 0 x2817))))
(assert (not (= 6 (x2116 1 x2630))))
(assert (x853 x2483))
(assert (=> (> (+ 10000 1) x990) (not (= x990 (x2116 x2817 11)))))
(assert (x853 x2871))
(assert (not (= 1889567281 (x2116 x77 1))))
(assert (x853 x2240))
(assert (x853 x548))
(assert (= x1064 (=> (and (= x2188 (x781 x2928)) (= x2736 (> x2188 0)) (= x2575 (x1877 384)) (= (x1111 1461501637330902918203684832716283019655932542975 x2575) x104)) (and (=> (not x2736) x1795) (=> x2736 x3012)))))
(assert (x853 x1897))
(assert (not (= (x2116 x2462 13) (x2116 x754 12))))
(assert (= x1076 (and x214 (not x3115))))
(assert (x853 x414))
(assert (=> (> (+ 10000 1) x1838) (not (= x1838 (x2116 x2964 14)))))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 0 x1916))))
(assert (x853 x246))
(assert (not (= 1889567281 (x2116 0 x2810))))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 1 x2406))))
(assert (not (= (x2116 x305 1) 1000000000)))
(assert (=> (> (+ 10000 1) x2817) (not (= x2817 (x2116 x2672 13)))))
(assert (x853 x3049))
(assert (x853 x989))
(assert (= x187 (=> (and (= (x1111 1461501637330902918203684832716283019655932542975 x3151) x2682) (= x1556 (= x2682 x3151))) (and (=> (and (= x55 (x2116 x1990 1)) x1556 (<= 0 x1303) (<= x1303 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1111 1461501637330902918203684832716283019655932542975 x2435) x1990) (= x1055 32) (= (x213 x55) x1303) (= 1 x2717)) x2117) (=> (not x1556) x1254)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2116 1 x2406))))
(assert (= x2338 (=> (and (= x2253 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x17) (and (< x17 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x17) true)))) (= (x2858 (+ x17 31)) x751) (= x1250 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x751)) (= x279 (x2858 (+ x1250 x2772)))) (and (=> (not x2253) x1261) (=> x2253 x1795)))))
(assert (not (= (x2116 x990 1) 33222205748031110454085609023467044101453017019085594488531032467161307152384)))
(assert (= (ite (and x3003 x207 x604) (x398 x2239) (x2519 x2239)) (x2738 x2239)))
(assert (not (= 6 (x2116 x2672 13))))
(assert (x853 x402))
(assert (x853 x2187))
(assert (not (= 826074471 (x2116 x2462 12))))
(assert (x856 x840))
(assert (x853 x82))
(assert (=> (< (- x104 1) 10000) (not (= x104 (x2116 x2462 15)))))
(assert (not (= (x2116 1 x2406) 1889567281)))
(assert (=> (= (x2116 x698 1) (x2116 x305 1)) (= x698 x305)))
(assert (= (x1240 x2959) (ite (= x2959 x2473) x766 (x1567 x2959))))
(assert (=> (> (+ 10000 1) x2672) (not (= (x2116 0 x1916) x2672))))
(assert (= x318 (=> (and (= x1438 (x1111 1461501637330902918203684832716283019655932542975 x294)) (= (= x294 x1438) x871) (= (x680 x303) x294)) (and (=> (and (= (< 0 x2936) x745) (or (and (= x2936 x934) (not x745)) (and (= x934 1) (< x415 4294967296) x745)) x871) x3167) (=> (not x871) x1795)))))
(assert (not (= 11 (x2116 x2672 13))))
(assert (not (= (x2116 x305 1) 1100000000000000000)))
(assert (not (= (x2116 x305 1) 6)))
(assert (= (x25 x2055) (ite (= x2055 x411) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2570 x2055))))
(assert (not (= (x2116 x2187 1) 157198259)))
(assert (not (= (x2116 1 x2406) 1461501637330902918203684832716283019655932542976)))
(assert (not (= 1 (x2116 x698 1))))
(assert (not (= (x2116 1 x2630) 72464927124685711895252664195178772226123872012682517813167109100718830649344)))
(assert (not (= (x2116 x2462 12) (x2116 x1324 1))))
(assert (= x2499 (and x1528 x2720)))
(assert (x856 x1050))
(assert (= x2249 true))
(assert (=> (= (x2116 0 x1916) (x2116 x208 14)) (and (= 14 x1916) (= x208 0))))
(assert (= x2661 (and x998 x1880)))
(assert (=> (< (- x1838 1) 10000) (not (= (x2116 x305 1) x1838))))
(assert (= x2118 (or (and x768 (not x1920)) x572)))
(assert (not (= (x2116 x698 1) 72464927124685711895252664195178772226123872012682517813167109100718830649344)))
(assert (not (= 18446744073709551615 (x2116 x1990 1))))
(assert (= (x598 x2386) (ite (= x789 x2386) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x2386))))
(assert (not (= (x2116 x2672 13) 1937038442)))
(assert (= (ite (= x789 x2959) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x2959)) (x598 x2959)))
(assert (= x1357 (=> (and (= x974 (or (> x2393 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2393)) (< x2393 32)))) (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x226) x352) (= x226 (x2858 (+ x2393 31))) (= x2806 (x2858 (+ x2469 x352)))) (and (=> x974 x1795) (=> (not x974) x1126)))))
(assert (x853 x1044))
(assert (not (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x2116 x754 12))))
(assert (x853 x1369))
(assert (=> (> (+ 10000 1) x2964) (not (= x2964 (x2116 x2462 15)))))
(assert (x1433 x2257 x1516))
(assert (=> (< (- x1990 1) 10000) (not (= (x2116 x2964 14) x1990))))
(assert (x853 x1676))
(assert (=> (= (x2116 x990 1) (x2116 1 x2406)) (and (= 1 x2406) (= 1 x990))))
(assert (not (= 1 (x2116 0 x2267))))
(assert (= (=> (= x2037 (= 0 x1569)) (and (=> (not x2037) x2163) (=> x2037 x1795))) x1281))
(assert (x856 x1963))
(assert (x434 x2292 x976 x1091 x1504))
(assert (not (= 117300739 (x2116 x208 14))))
(assert (= (=> (= x1177 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x308) (and (= true (<= x308 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x308 128)))) (and (=> x1177 x1795) (=> (not x1177) x870))) x3097))
(assert (=> (< (- x3040 1) 10000) (not (= (x2116 0 x2204) x3040))))
(assert (=> (< (- x222 1) 10000) (not (= (x2116 x2462 12) x222))))
(assert (=> (> (+ 10000 1) x2462) (not (= x2462 (x2116 x2462 14)))))
(assert (=> (> (+ 10000 1) x2187) (not (= x2187 (x2116 x1838 14)))))
(assert (not (= (x2116 x2817 11) 4294967296)))
(assert (not (= 1000000000000000000000000000000000000 (x2116 x422 6))))
(assert (not (= 4294967296 (x2116 x2672 13))))
(assert (not (= 0 (x2116 x2458 6))))
(assert (= (or (and (not x2082) x459) (and x218 x1204) (and x2975 x2990) (and x539 x138) (and x1783 x281) (and x1909 x832) (and x1252 x774) (and x3150 (not x37)) (and x922 x2932) (and x341 (not x1578)) (and x1022 x2381) (and x1974 x2568) (and x1406 (not x1440)) (and x1943 x61) (and (not x1652) x426) (and x1007 x596) (and x2178 x2826) (and x50 x1646) (and x2253 x1907) (and x2661 (not x8)) (and x2892 (not x1900)) (and x1955 x1517) (and x2490 x1772) (and (not x909) x144) (and x734 x904) (and (not x1437) x75) (and (not x2680) x1574) (and x1776 x587) (and x1794 (not x2137)) (and x1530 x3143) (and x3027 x668) (and (not x389) x2656) (and x1689 x2281) (and x2643 (not x1613)) (and x3048 (not x2602)) (and (not x784) x1853) (and x2499 (not x1654)) (and x965 x1930) (and (not x1175) x2071) (and (not x454) x3024) (and x2613 x1642) (and (not x2202) x1967) (and x635 x395) (and x2965 (not x1305)) (and x1629 x1235) (and x2190 x693) (and x430 x2607) (and (not x3127) x309) (and (not x2223) x3171) (and x709 x1628) (and x1354 x1150) (and x804 x775) (and x2101 x833) (and x1384 (not x1000)) (and x2970 x2972) (and x57 x3155) (and x298 x3104) (and (not x1724) x2088) (and (not x1214) x2662) (and (not x3068) x1719) (and x3138 x1852) (and x2170 (not x2848)) (and x1815 x2415) (and (not x2254) x2654) (and x567 x396) (and x2015 (not x1232)) (and x1558 x1791) (and x84 (not x310)) (and x2130 (not x1883)) (and (not x2700) x373) (and x2192 (not x2166)) (and x835 x2940) (and x1168 x2868) (and x2954 x2375) (and (not x344) x744) (and x1520 x3074) (and x905 x2401) (and x334 x1448) (and (not x867) x324) (and x1684 x3136) (and x1335 x32) (and x2536 x725) (and x1350 (not x1154)) (and x1790 x2305) (and x41 x2467) (and (not x1617) x3089) (and x742 x653) (and (not x1132) x3128) (and x78 x1961) (and x894 x793) (and x2030 x122) (and x719 x1076) (and x2122 x2246) (and (not x996) x148) (and x1939 x3083) (and x660 (not x1484)) (and x1362 (not x1323)) (and (not x609) x1079) (and x2450 x974) (and x1486 x288) (and x1495 x1670) (and x2098 x1844) (and x1402 (not x2722)) (and x2037 x1873) (and x683 x2739) (and (not x2716) x986) (and (not x2484) x1875) (and (not x1329) x2666) (and x552 x3126) (and x1023 (not x1582)) (and x326 x1863) (and x1040 (not x1535)) (and (not x987) x216) (and (not x2093) x1141) (and x2448 (not x2736)) (and x3099 x538) (and (not x2968) x495) (and (not x2515) x2224) (and (not x1810) x954) (and x2609 (not x1462)) (and x3002 x2565) (and x2127 (not x2549)) (and x2937 x2337) (and x2960 (not x2155)) (and x1807 x1625) (and x236 (not x865)) (and x7 (not x2950)) (and x2096 x847) (and x2106 x2594) (and x2091 (not x2799)) (and x273 x2513) (and x1037 x1159) (and x1318 x889) (and (not x186) x1028) (and (not x2210) x2579) (and x565 x1500) (and (not x2100) x1849) (and x926 (not x2669)) (and x2999 x477) (and x231 (not x285)) (and x1041 x189) (and x445 x2135) (and x2530 x863) (and x585 x27) (and x1996 (not x1090)) (and (not x1575) x1604) (and x1003 x1158) (and x1185 x2580) (and x2050 (not x1222)) (and x2319 (not x2632)) (and x142 x2027) (and x710 (not x363)) (and x321 x2921) (and x1657 x525) (and (not x338) x2803) (and x1706 (not x3124)) (and x6 x1738) (and x1781 x2635) (and x73 x2158) (and x1715 x1282) (and (not x1209) x176) (and (not x369) x497) (and x3030 (not x871)) (and (not x312) x936) (and x1319 x2476) (and x2572 x1292) (and x810 (not x2290)) (and (not x403) x1223) (and x1302 x1371) (and (not x2815) x799) (and x2205 (not x42)) (and (not x2718) x274) (and x2721 (not x264)) (and x1980 (not x234)) (and x2578 x2674) (and x736 (not x969)) (and x2605 (not x1798)) (and x492 x928) (and x460 x1563) (and x98 x2146) (and x257 x478) (and x1061 x765) (and x821 x2761) (and x366 (not x1793)) (and x1358 x499) (and x1135 x3004) (and x1862 x550) (and x841 x3082) (and x883 (not x1179)) (and x2938 x1861) (and x3115 x214) (and x950 (not x1469)) (and x803 (not x66)) (and x1182 x2464) (and x2777 x300) (and x2387 (not x2036)) (and x224 x2800) (and (not x493) x3178) (and x1823 (not x2388)) (and x2691 (not x2985)) (and x1767 x12) (and x2026 (not x2709)) (and x277 x814) (and (not x762) x1881) (and x1497 x947) (and (not x2011) x1171) (and x198 (not x488)) (and (not x586) x2238) (and x249 (not x1543)) (and x956 x2167) (and x650 x3147) (and x283 x1550) (and x2997 (not x1325)) (and x2509 x3157) (and x1518 x483) (and x13 x2016) (and (not x207) x3003) (and x998 (not x1880)) (and x557 x1787) (and x2813 x2847) (and x2324 x3079) (and x1780 (not x2520)) (and x1893 x1255) (and x1056 x2417) (and x446 x2511) (and x1540 (not x723)) (and (not x1708) x1474) (and x1177 x1519) (and x2866 (not x96))) x907))
(assert (not (= 1889567281 (x2116 x754 12))))
(assert (x853 x1046))
(assert (= (x1492 x2055) (ite (= x752 x2055) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2830 x2055))))
(assert (x853 x1919))
(assert (=> (< (- x698 1) 10000) (not (= x698 (x2116 x1422 1)))))
(assert (= (x797 x360) (ite (= x1615 x360) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x360))))
(assert (x853 x2060))
(assert (x853 x1352))
(assert (=> (= (x2116 x1422 1) (x2116 x305 1)) (= x1422 x305)))
(assert (x853 x624))
(assert (=> (< (- x2964 1) 10000) (not (= (x2116 x1422 1) x2964))))
(assert (x1752 x422))
(assert (x1752 x222))
(assert (x853 x2052))
(assert (not (= (x2116 x2462 14) (x2116 x1990 1))))
(assert (not (= (x2116 x1324 1) 18446744073709551615)))
(assert (=> (= (x2116 x2462 11) (x2116 x2817 11)) (= x2462 x2817)))
(assert (= (and x2932 (not x922)) x1519))
(assert (=> (< (- x2817 1) 10000) (not (= x2817 (x2116 x2462 14)))))
(assert (=> (< (- x1838 1) 10000) (not (= x1838 (x2116 1 x2406)))))
(assert (= (ite (= x2806 x2239) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2738 x2239)) (x2083 x2239)))
(assert (x853 x1454))
(assert (= (ite (= x484 x2055) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1903 x2055)) (x626 x2055)))
(assert (x856 x2292))
(assert (=> (= (x2116 x990 1) (x2116 x305 1)) (= x990 x305)))
(assert (=> (< (- x754 1) 10000) (not (= x754 (x2116 1 x2406)))))
(assert (x853 x2763))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x2672 13))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 0 x2810))))
(assert (x853 x1213))
(assert (x856 x2052))
(assert (= x2656 (and x141 x2882)))
(assert (not (= 1029106033 (x2116 0 x1916))))
(assert (=> (= (x2116 0 x2267) (x2116 x422 6)) (and (= x422 0) (= 6 x2267))))
(assert (not (= (x2116 x1324 1) 1)))
(assert (= (x830 x772) (ite (and (not x1832) x2125) (x2911 x772) (x2189 x772))))
(assert (=> (> (+ 10000 1) x3040) (not (= (x2116 x1324 1) x3040))))
(assert (x853 x391))
(assert (x853 x1482))
(assert (= x3136 (and (not x1135) x3004)))
(assert (x853 x695))
(assert (=> (> (+ 10000 1) x422) (not (= x422 (x2116 0 x3058)))))
(assert (x853 x2053))
(assert (= (ite (and x1557 (not x170)) (x1846 x2174) (ite (and (not x1501) x3060) (x1846 x2174) (x114 x2174))) (x2625 x2174)))
(assert (=> (< (- x2458 1) 10000) (not (= x2458 (x2116 x698 1)))))
(assert (x1433 x694 x1176))
(assert (=> (= (x2116 x1422 1) (x2116 1 x2630)) (and (= 1 x2630) (= x1422 1))))
(assert (x853 x3001))
(assert (not (= (x2116 x754 12) (x2116 x77 1))))
(assert (not (= (x2116 x305 1) 1029106033)))
(assert (=> (< (- x1422 1) 10000) (not (= (x2116 x1990 1) x1422))))
(assert (x853 x664))
(assert (= (x2176 x2756) (ite (= x2756 x1498) x750 (x1415 x2756))))
(assert (=> (> (+ 10000 1) x1990) (not (= (x2116 x1990 1) x1990))))
(assert (= x2879 (=> (and (= (x2858 (+ 31 x177)) x2121) (= x2374 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2121)) (= x1727 (x2858 (+ x2374 x384))) (= (or (and (> 32 x177) (= (<= x177 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x177 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x793)) (and (=> (not x793) x2705) (=> x793 x1795)))))
(assert (= (and x804 (not x775)) x768))
(assert (= (and (not x2195) x541) x2559))
(assert (=> (> (+ 10000 1) x2462) (not (= x2462 (x2116 x1838 14)))))
(assert (x853 x1704))
(assert (= (ite (= x779 x772) x2462 (x570 x772)) (x2589 x772)))
(assert (not (= (x2116 0 x92) 66649967879025377632792054650135220247173487182192293797349964221703864188928)))
(assert (=> (< (- x2672 1) 10000) (not (= (x2116 x698 1) x2672))))
(assert (=> (< (- x2187 1) 10000) (not (= (x2116 x305 1) x2187))))
(assert (not (= (x2116 x2462 14) 1000000000000000000000000000000000000)))
(assert (not (= (x2116 x2462 15) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (= (and (not x587) x1776) x2975))
(assert (x853 x356))
(assert (=> (> (+ 10000 1) x1422) (not (= x1422 (x2116 x2817 11)))))
(assert (not (= 18446744073709551616 (x2116 x77 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 1 x2630))))
(assert (not (= (x2116 x2462 15) (x2116 x754 12))))
(assert (=> (> (+ 10000 1) x305) (not (= x305 (x2116 0 x3058)))))
(assert (x434 x1869 x2438 x2077 x2980))
(assert (not (= (x2116 x990 1) 1461501637330902918203684832716283019655932542975)))
(assert (= (x598 x2239) (ite (= x2239 x789) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x2239))))
(assert (x853 x2814))
(assert (= (x3023 x156 160) (- (/ x156 1461501637330902918203684832716283019655932542976) (uninterp_frac x156 1461501637330902918203684832716283019655932542976))))
(assert (= (x129 x772) (ite (= x1740 x772) x2719 (x1944 x772))))
(assert (= (ite (= x2894 x450) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x680 x450)) (x2371 x450)))
(assert (=> (< (- x77 1) 10000) (not (= (x2116 0 x2204) x77))))
(assert (x853 x579))
(assert (x853 x2582))
(assert (not (= (x2116 x2462 12) (x2116 x2462 13))))
(assert (not (= (x2116 x2817 11) 274184521717934524641157099916833587233)))
(assert (= (x767 x103) (ite (and x2955 x2301) (x3006 x103) (x706 x103))))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 x1422 1))))
(assert (x853 x5))
(assert (= (=> (= x445 (or (> x2081 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2081) true) (< x2081 128)))) (and (=> (not x445) x2397) (=> x445 x1795))) x1762))
(assert (not (= (x2116 x990 1) (x2116 x2462 14))))
(assert (= (=> (and (= x2084 x188) (= x1375 0)) x70) x240))
(assert (= (=> (= x2937 (= x1975 0)) (and (=> x2937 x1795) (=> (not x2937) x2424))) x2331))
(assert (not (= 157198259 (x2116 x2462 15))))
(assert (not (= 6 (x2116 x422 6))))
(assert (= x307 (=> (and (= x1617 (> x137 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x891) (= (x444 x546) x137) (= (x2783 x163) x891) (= (x2116 1 x1916) x163) (>= x891 0)) (and (=> (and (= x2078 (x1111 1461501637330902918203684832716283019655932542975 x891)) (= x1698 1) (= x2463 (x2858 (+ x546 64))) x1617 (not x515) (= x515 (> x509 2))) x3014) (=> (not x1617) x1795)))))
(assert (= x309 (and x1469 x950)))
(assert (not (= 6 (x2116 x2817 11))))
(assert (x853 x823))
(assert (x853 x2217))
(assert (=> (= (x2116 x1838 14) (x2116 1 x2630)) (and (= x1838 1) (= x2630 14))))
(assert (x853 x1183))
(assert (=> (< (- x1324 1) 10000) (not (= (x2116 x2462 14) x1324))))
(assert (x853 x517))
(assert (not (= 826074471 (x2116 x2462 14))))
(assert (x853 x789))
(assert (x853 x1707))
(assert (not (= (x2116 x2462 14) 1937038442)))
(assert (= (x2830 x1142) (ite x2966 (ite (and (not x2558) x2507) (x2024 x1142) (x81 x1142)) (x830 x1142))))
(assert (=> (< (- x754 1) 10000) (not (= x754 (x2116 x2817 11)))))
(assert (= (ite (= x1906 x2239) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2911 x2239)) (x2976 x2239)))
(assert (= (=> (and (= (< x3025 0) x1684) (= (x1936 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1233)) x3025) (= x1858 x1130)) (and (=> x1684 x1795) (=> (not x1684) x2062))) x1938))
(assert (not (= (x2116 x2462 14) 157198259)))
(assert (not (= 274184521717934524641157099916833587202 (x2116 0 x2267))))
(assert (=> (> (+ 10000 1) x2187) (not (= x2187 (x2116 0 x3058)))))
(assert (not (= (x2116 x754 12) 0)))
(assert (not (= (x2116 x1838 14) 404098525)))
(assert (not (= (x2116 0 x2204) 1000000000000000000000000000000000000)))
(assert (not (= 1100000000000000000 (x2116 x1838 14))))
(assert (=> (> (+ 10000 1) x222) (not (= x222 (x2116 x2462 11)))))
(assert (x853 x1438))
(assert (not (= (x2116 x208 14) 72464927124685711895252664195178772226123872012682517813167109100718830649344)))
(assert (= (x1915 x893) 33222205748031110454085609023467044101453017019085594488531032467161307152384))
(assert (not (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2116 0 x1916))))
(assert (=> (< (- x2817 1) 10000) (not (= x2817 (x2116 x2458 6)))))
(assert (=> (= (x2116 0 x92) (x2116 x1838 14)) (and (= 14 x92) (= x1838 0))))
(assert (x853 x2132))
(assert (x853 x857))
(assert (=> (< (- x698 1) 10000) (not (= (x2116 x2462 15) x698))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 x77 1))))
(assert (= (ite (= x1740 x1129) x2719 (x1944 x1129)) (x129 x1129)))
(assert (=> (> (+ 10000 1) x754) (not (= x754 (x2116 x698 1)))))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x2817 11))))
(assert (x853 x2399))
(assert (= x282 (=> (= (< x2582 1000000000000000000) x2659) (and (=> x2659 x1831) (=> (and (= x1365 1) (not x2659)) x813)))))
(assert (=> (< (- x208 1) 10000) (not (= (x2116 x305 1) x208))))
(assert (= (ite (= x1427 x2959) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x1276 x2959)) (x1102 x2959)))
(assert (x853 x226))
(assert (x853 x1139))
(assert (not (= (x2116 x2817 11) 1029106033)))
(assert (= (x1929 x450) (ite (= x450 x1639) x3087 (x2920 x450))))
(assert (x853 x2638))
(assert (not (= (x2116 x2458 6) 13)))
(assert (x853 x340))
(assert (x856 x267))
(assert (= (=> (and (= x3069 (uninterp_mod (* 1000000000000000000 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x8 (< 0 x292))) (and (=> (not x8) x1795) (=> (and (> 1461501637330902918203684832716283019655932542976 x190) (= x2538 (x2858 (+ 4 x2962))) (= x2885 (< 0 x2)) x8 (>= x190 0) (<= x190 1461501637330902918203684832716283019655932542975) (= x890 (x2886 288)) (or (and (not x2885) (= x382 x2)) (and x2885 (= 1 x382) (> 4294967296 x930))) (= x2008 (- (/ x3069 x292) (uninterp_frac x3069 x292)))) x1972))) x36))
(assert (=> (> (+ 10000 1) x422) (not (= x422 (x2116 x1838 14)))))
(assert (not (= (x2116 x77 1) 274184521717934524641157099916833587206)))
(assert (= (ite (= x2806 x1933) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2738 x1933)) (x2083 x1933)))
(assert (= (x1610 x2959) (ite (= x2959 x2851) x2456 (x3159 x2959))))
(assert (= x98 (and x2721 x264)))
(assert (x853 x165))
(assert (= (x2045 x2055) (ite (= x2120 x2055) x1366 (x1054 x2055))))
(assert (= (and x1502 x3100) x986))
(assert (= x940 (and (not x1464) x62)))
(assert (=> (> (+ 10000 1) x2462) (not (= x2462 (x2116 x990 1)))))
(assert (= (and x1150 (not x1354)) x3082))
(assert (= (x2176 x1142) (ite (= x1498 x1142) x750 (x1415 x1142))))
(assert (x853 x2647))
(assert (x853 x1193))
(assert (x853 x1485))
(assert (not (= (x2116 0 x1916) 14)))
(assert (=> (= (x2116 1 x2406) (x2116 x305 1)) (and (= x305 1) (= 1 x2406))))
(assert (x853 x2414))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 x2462 11))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 x2672 13))))
(assert (not (= (x2116 0 x92) 15)))
(assert (x853 x535))
(assert (x853 x849))
(assert (not (= (x2116 x1990 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (x2116 x77 1) 1000000000000000000000000000000000000)))
(assert (x853 x1562))
(assert (x853 x785))
(assert (= x1093 (=> (and (= x414 (uninterp_mod (* 1000000000000000000 x2349) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1936 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2013)) x47) (= (< x47 1000000000000000000) x833)) (and (=> (not x833) x554) (=> x833 x1795)))))
(assert (x853 x1409))
(assert (x853 x1483))
(assert (not (= 1000000000 (x2116 x422 6))))
(assert (= (=> (and (= x2755 (x2858 (+ x1565 x2107))) (= (x2858 (+ 31 x1956)) x955) (= x2107 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x955)) (= (or (and (= true (<= x1956 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1956 32)) (> x1956 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x693)) (and (=> (not x693) x2941) (=> x693 x1795))) x1086))
(assert (not (= (x2116 0 x92) 274184521717934524641157099916833587202)))
(assert (x1752 x698))
(assert (= (=> (and (= x1678 (x1111 x1753 x1896)) (= x780 (= x3122 0)) (= (ite (< x1191 x1164) 1 0) x1896) (= (uninterp_mod (* x2003 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3122) (= x1543 (= 0 x1678)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122)) x1191) (= (ite (not x780) 1 0) x1753)) (and (=> (not x1543) x1795) (=> x1543 x1286))) x1092))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 x2462 14))))
(assert (x853 x2867))
(assert (not (= (x2116 0 x2204) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (x853 x3118))
(assert (= x1084 (=> (and (= x2811 (x2858 (+ 32 x1511))) (= x1582 (= x2041 x2090)) (= x2041 (x1145 x2811)) (= x2090 (x1111 18446744073709551615 x2041))) (and (=> (not x1582) x1795) (=> x1582 x681)))))
(assert (x856 x1771))
(assert (=> (> (+ 10000 1) x2672) (not (= (x2116 x2462 15) x2672))))
(assert (not (= (x2116 x2462 11) 1000000000000000000000000000000000000)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x2187 1))))
(assert (x853 x980))
(assert (x853 x2010))
(assert (not (= (x2116 x2462 15) (x2116 x422 6))))
(assert (x853 x2022))
(assert (= (x1113 x1933) (ite (= x1933 x1962) x639 (x1802 x1933))))
(assert (not (= (x2116 1 x2406) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (=> (> (+ 10000 1) x1990) (not (= x1990 (x2116 0 x2267)))))
(assert (x853 x648))
(assert (=> (= (x2116 1 x2406) (x2116 x2462 15)) (and (= x2462 1) (= 15 x2406))))
(assert (= (ite (= x1511 x2239) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x1983 x2239)) (x1390 x2239)))
(assert (not (= (x2116 x2462 15) 274184521717934524641157099916833587202)))
(assert (= (x598 x450) (ite (= x450 x789) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x450))))
(assert (not (= (x2116 x2462 14) (x2116 x422 6))))
(assert (x853 x1561))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2116 0 x2204))))
(assert (= (ite (and x324 x867 x1119) (x1271 x2239) (x383 x2239)) (x2911 x2239)))
(assert (x434 x1514 x1457 x2931 x2919))
(assert (not (= 1000000000000000000 (x2116 x2672 13))))
(assert (= (x1390 x2386) (ite (= x1511 x2386) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x1983 x2386))))
(assert (= x271 (=> (and (= x823 (x2309 x1043)) (= (< x2628 x786) x969) (= (x1936 (- x823 1)) x2628) (= (x2309 x1043) x786)) (and (=> (and (= x1043 x2431) (= x575 (x2858 (+ 32 x43))) (= x1925 x484) x969 (= x2025 (x2858 (+ x575 x1043))) (= x1038 x3058) (= x1979 x1345) (= (uninterp_mod (* 32 x2628) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x43)) x1417) (=> (not x969) x1795)))))
(assert (= (x2911 x2386) (ite (and x324 x1119 x867) (x1271 x2386) (x383 x2386))))
(assert (not (= (x2116 x2672 13) 17732073718202638403566719794745014173351532837126370201055734736014230421504)))
(assert (x853 x1871))
(assert (not (= (x2116 x2462 11) 157198259)))
(assert (= 0 (x2909 x629)))
(assert (= (=> (and (= (x2858 (+ x2007 384)) x1241) (= (x167 x1241) x838) (= x1501 (> x838 0))) (and (=> x1501 x659) (=> (and (= x959 x2818) (= x2009 x1202) (not x1501)) x1666))) x1487))
(assert (not (= 4294967295 (x2116 x698 1))))
(assert (not (= 12 (x2116 0 x92))))
(assert (x856 x1435))
(assert (not (= 14 (x2116 x305 1))))
(assert (not (= 11548673047482463375710962565434449992668293034397312241487562681223695302656 (x2116 x2672 13))))
(assert (x853 x2928))
(assert (=> (> (+ 10000 1) x104) (not (= (x2116 x2187 1) x104))))
(assert (=> (> (+ 10000 1) x754) (not (= x754 (x2116 x1838 14)))))
(assert (= (ite (= x3009 x2478) x1074 (x563 x2478)) (x2064 x2478)))
(assert (x853 x1753))
(assert (= x3179 (=> (and (= x1094 (x1586 x2386)) (= x1147 (x1111 18446744073709551615 x1094)) (= (x2858 (+ 64 x2478)) x2386) (= (= x1094 x1147) x1000)) (and (=> x1000 x1310) (=> (not x1000) x1795)))))
(assert (not (= 1 (x2116 0 x3058))))
(assert (x853 x2138))
(assert (x1433 x3151 x2496))
(assert (= (ite (= x931 x1142) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x76 x1142)) (x1124 x1142)))
(assert (= x550 (and x1844 (not x2098))))
(assert (=> (< (- x1324 1) 10000) (not (= (x2116 0 x2267) x1324))))
(assert (not (= 1 (x2116 x2672 13))))
(assert (x853 x1947))
(assert (not (= (x2116 x754 12) 13)))
(assert (not (= (x2116 0 x92) 826074471)))
(assert (= (x598 x3035) (ite (= x789 x3035) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x3035))))
(assert (= (x1326 x2239) (ite (= x1825 x2239) x1391 (x1301 x2239))))
(assert (x856 x67))
(assert (not (= (x2116 x2187 1) 274184521717934524641157099916833587202)))
(assert (not (= (x2116 0 x3058) (x2116 1 x2406))))
(assert (=> (< (- x208 1) 10000) (not (= (x2116 x422 6) x208))))
(assert (=> (< (- x2458 1) 10000) (not (= x2458 (x2116 x2964 14)))))
(assert (x853 x900))
(assert (not (= (x2116 0 x2810) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (= (ite (= x2959 x2120) x1366 (x1054 x2959)) (x2045 x2959)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 1 x2630))))
(assert (x853 x1809))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 x754 12))))
(assert (x853 x855))
(assert (=> (= (x2116 x1838 14) (x2116 0 x1916)) (and (= x1838 0) (= x1916 14))))
(assert (= (=> (and (= x34 (= x305 x682)) (= x1952 x305)) (and (=> (and (= (x2116 x305 1) x353) (= 32 x2742) (= x1855 1) (>= x1827 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1827) (= x1827 (x1566 x353)) x34) x1525) (=> (not x34) x655))) x531))
(assert (not (= 1000000000000000000000000000000000000 (x2116 1 x2406))))
(assert (= (and x768 x1920) x1794))
(assert (= (x1102 x1142) (ite (= x1142 x1427) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x1276 x1142))))
(assert (not (= (x2116 0 x3058) 274184521717934524641157099916833587233)))
(assert (= x2129 (=> (= x903 (= 274184521717934524641157099916833587202 x2491)) (and (=> (not x903) x2002) (=> x903 x3010)))))
(assert (=> (> (+ 10000 1) x1838) (not (= x1838 (x2116 0 x92)))))
(assert (= x2347 (=> (= (= 0 x2344) x1371) (and (=> x1371 x1795) (=> (not x1371) x2069)))))
(assert (= x2601 (=> (and (= x1018 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (= 826074471 x40)) (= x1935 (or (> x3145 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x3145 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3145 32)))) (not (> 4 x548)) (= (x2275 274184521717934524641157099916833587206) x2704) (= 36 x548) (> x2704 0) (= (x1936 (- x548 4)) x3145) (not (< x40 826074471)) (= x548 x185) (= x155 x3151) (= 1889567281 x40)) (and (=> x1935 x1693) (=> (not x1935) x675)))))
(assert (=> (> (+ 10000 1) x2817) (not (= (x2116 x77 1) x2817))))
(assert (x1370 x1742 x1911))
(assert (not (= 4294967295 (x2116 x422 6))))
(assert (not (= 6 (x2116 x2458 6))))
(assert (=> (> (+ 10000 1) x754) (not (= (x2116 x1324 1) x754))))
(assert (not (= (x2116 x305 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x434 x837 x2861 x1312 x844))
(assert (not (= (x2116 x2462 13) 0)))
(assert (= (ite x2966 (ite (and (not x2558) x2507) (x2024 x1933) (x81 x1933)) (x830 x1933)) (x2830 x1933)))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 x2187 1))))
(assert (x853 x1726))
(assert (= (=> (and (= x1007 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2943) (and (> 32 x2943) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2943))))) (= (x2858 (+ x165 x71)) x2787) (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x356) x165) (= x356 (x2858 (+ x2943 31)))) (and (=> (not x1007) x1112) (=> x1007 x1795))) x417))
(assert (x853 x670))
(assert (= (x1153 x772) (ite (= x772 x2538) x890 (x2042 x772))))
(assert (not (= (x2116 x2672 13) 14)))
(assert (= (or (and x2782 (not x74)) (and x2330 x301)) x1688))
(assert (x853 x2188))
(assert (x853 x917))
(assert (x853 x2374))
(assert (= x189 (and x2401 (not x905))))
(assert (x853 x751))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 x1838 14))))
(assert (= (ite (and x207 x3003 x604) (x398 x2174) (x2519 x2174)) (x2738 x2174)))
(assert (not (= (x2116 x698 1) (x2116 x2458 6))))
(assert (= (ite (= x1701 x2967) x2462 (x918 x1701)) (x2759 x1701)))
(assert (not (= (x2116 0 x3058) 14)))
(assert (not (= (x2116 x422 6) (x2116 x2187 1))))
(assert (x853 x1356))
(assert (x856 x895))
(assert (x853 x9))
(assert (not (= (x2116 x754 12) (x2116 x2672 13))))
(assert (= x1170 (=> (and (= (x2858 (+ x314 x2269)) x491) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2459) (and (< x2459 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2459) true))) x719) (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x456) x2269) (= x456 (x2858 (+ 31 x2459)))) (and (=> x719 x1795) (=> (not x719) x1127)))))
(assert (= (x2911 x360) (ite (and x1119 x324 x867) (x1271 x360) (x383 x360))))
(assert (= x150 (=> (= (= x1773 0) x2417) (and (=> x2417 x1795) (=> (not x2417) x561)))))
(assert (x853 x2743))
(assert (= x1604 (and (not x1684) x3136)))
(assert (not (= (x2116 x990 1) 12)))
(assert (not (= (x2116 x754 12) (x2116 x2817 11))))
(assert (x853 x777))
(assert (x853 x53))
(assert (= (=> (and (= x436 x1231) (= x2459 x2318)) x1097) x1211))
(assert (not (= 1889567281 (x2116 x1324 1))))
(assert (= (x2589 x1933) (ite (= x779 x1933) x2462 (x570 x1933))))
(assert (= (x2064 x2959) (ite (= x2959 x3009) x1074 (x563 x2959))))
(assert (x853 x467))
(assert (not (= 1937038442 (x2116 x1990 1))))
(assert (=> (< (- x2187 1) 10000) (not (= (x2116 1 x2406) x2187))))
(assert (not (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x2116 x422 6))))
(assert (= (=> (and (= (= x2750 0) x42) (= (- (/ x3062 x2225) (uninterp_frac x3062 x2225)) x3) (= x2750 (x1111 x3001 x246)) (= x878 (= x3 0)) (= (ite (not x878) 1 0) x3001) (= x2942 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3))) (= x246 (ite (> 1000000000 x2942) 1 0))) (and (=> x42 x2930) (=> (not x42) x1795))) x2229))
(assert (= (x1846 x2962) (ite (and x8 x2661 x2885) (x2361 x2962) (x1153 x2962))))
(assert (x720 x1921 x864))
(assert (not (= (x2116 x1324 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= (or x1680 (and (not x1551) x1607) (and x1118 x978) (and x747 x2623)) x1909))
(assert (not (= 404098525 (x2116 x77 1))))
(assert (=> (> (+ 10000 1) x2187) (not (= (x2116 x2187 1) x2187))))
(assert (not (= (x2116 x208 14) (x2116 x754 12))))
(assert (x856 x664))
(assert (= (ite (and x324 x867 x1119) (x1271 x2811) (x383 x2811)) (x2911 x2811)))
(assert (not (= 14 (x2116 x2462 14))))
(assert (= x530 (or (and x2466 (not x1556)) (and x1721 x2441))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 x2462 13))))
(assert (= (x2176 x2478) (ite (= x1498 x2478) x750 (x1415 x2478))))
(assert (x853 x1910))
(assert (not (= (x2116 0 x2810) 13)))
(assert (x853 x179))
(assert (x853 x2306))
(assert (= x1534 (=> (and (= x2555 (x1111 1461501637330902918203684832716283019655932542975 x560)) (= 1 x615) (= (< 1 x1746) x407)) (and (=> (not x407) x3036) (=> x407 x652)))))
(assert (=> (= (x2116 0 x1916) (x2116 x2462 14)) (and (= 14 x1916) (= x2462 0))))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 x2462 15) x990))))
(assert (=> (> (+ 10000 1) x2817) (not (= (x2116 x754 12) x2817))))
(assert (not (= (x2116 x2462 13) (x2116 x2817 11))))
(assert (=> (> (+ 10000 1) x305) (not (= x305 (x2116 x208 14)))))
(assert (not (= (x2116 x2462 12) 1100000000000000000)))
(assert (not (= (x2116 x1324 1) 6)))
(assert (not (= 1 (x2116 x77 1))))
(assert (=> (< (- x1838 1) 10000) (not (= x1838 (x2116 x990 1)))))
(assert (=> (< (- x2964 1) 10000) (not (= x2964 (x2116 x208 14)))))
(assert (= (=> (and (= (x2858 (+ 64 x1596)) x2120) (= (x69 x1769) x664) (= x1168 (= 0 x1395)) (= x1769 (x2858 (+ x2627 32))) (= (x2275 x3040) x1395) (= (x1111 1461501637330902918203684832716283019655932542975 x2729) x2650) (= (x1111 1461501637330902918203684832716283019655932542975 x664) x3040) (= x1596 (x2858 (+ 4 x384))) (= (x2858 (+ 36 x384)) x1213)) (and (=> (and (not x1168) (or (and (not x1389) (= x2426 x3149) (= x2089 x643)) (and (= x1691 (= x979 (x418 x3040))) x375 (= (x24 274184521717934524641157099916833587233) x1314) (= x2762 x2089) (= (<= x1314 (x418 274184521717934524641157099916833587233)) x375) (> 4294967296 x669) (= x2426 x1352) (= x979 (x24 x3040)) x1691 x1389)) (= x1389 (> x316 0))) x2102) (=> x1168 x1795))) x1021))
(assert (x853 x1199))
(assert (= (x2519 x2239) (ite (= x2469 x2239) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2626 x2239))))
(assert (=> (> (+ 10000 1) x2458) (not (= x2458 (x2116 0 x2204)))))
(assert (= x1358 (and x2813 (not x2847))))
(assert (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1755 x2567)))
(assert (not (= 1 (x2116 x2462 12))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x2116 x1838 14)))))
(assert (= (x2907 x2959) (ite (= x1845 x2959) x2257 (x496 x2959))))
(assert (not (= 11 (x2116 x422 6))))
(assert (= (ite (= x450 x1740) x2719 (x1944 x450)) (x129 x450)))
(assert (= x122 (and (not x1158) x1003)))
(assert (= x1795 (=> (= true x3102) x132)))
(assert (not (= (x2116 x2672 13) (x2116 x1990 1))))
(assert (= x1861 (and x1654 x2499)))
(assert (not (= 12 (x2116 0 x2810))))
(assert (x856 x1995))
(assert (x853 x1066))
(assert (not (= (x2116 x208 14) (x2116 x2462 12))))
(assert (x853 x2147))
(assert (x853 x546))
(assert (= x2205 (and x216 x987)))
(assert (x853 x2321))
(assert (= (=> (and (= (= x2215 0) x1410) (or x1410 (and (= x2951 (x2858 (+ 32 x1221))) (not x1410) (= (uninterp_mod (* 32 x2215) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1369))) (= (x2858 (+ x2822 32)) x391) (= (x2858 (+ x3041 32)) x471) (= x2955 (= 0 x3070)) (= (x28 x2627) x3070) (= (x2858 (+ x391 x1221)) x752) (= x3041 (uninterp_mod (* 32 x3070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or x2955 (and (= x2744 (x2858 (+ x1521 32))) (not x2955) (= (uninterp_mod (* x3070 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x479))) (= x2822 (uninterp_mod (* x2215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x2858 (+ x1521 x471)) x1221) (= (x28 x2627) x2215)) x2875) x628))
(assert (=> (> (+ 10000 1) x2462) (not (= (x2116 0 x2267) x2462))))
(assert (not (= (x2116 x1990 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= (ite x2966 (ite (and x2507 (not x2558)) (x2024 x2174) (x81 x2174)) (x830 x2174)) (x2830 x2174)))
(assert (= (x1390 x2811) (ite (= x2811 x1511) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x1983 x2811))))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x1838 14))))
(assert (not (= 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2116 x2458 6))))
(assert (=> (> (+ 10000 1) x222) (not (= x222 (x2116 0 x2204)))))
(assert (x853 x1140))
(assert (=> (> (+ 10000 1) x2458) (not (= (x2116 x2462 15) x2458))))
(assert (x853 x134))
(assert (= (=> (and (= x1636 (x1111 x3173 x1867)) (= x3173 (ite (not x408) 1 0)) (= (x1601 x1237) x1921) (= (= 0 x1636) x1323) (= (x1111 18446744073709551615 x1921) x2471) (= x408 (= 0 x1978)) (= x1867 (ite (< x392 x2471) 1 0)) (= x392 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))) (and (=> (not x1323) x1795) (=> x1323 x1109))) x1224))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x2458 6))))
(assert (not (= 15 (x2116 x2462 12))))
(assert (=> (< (- x990 1) 10000) (not (= x990 (x2116 0 x2267)))))
(assert (not (= (x2116 x1422 1) (x2116 x2462 12))))
(assert (not (= 1000000000 (x2116 0 x92))))
(assert (x856 x891))
(assert (x853 x272))
(assert (not (= 18446744073709551616 (x2116 x305 1))))
(assert (= x2568 (and x2082 x459)))
(assert (x1433 x1824 x489))
(assert (x1433 x1236 x2727))
(assert (= (ite (and (not x170) x1557) (x1846 x2239) (ite (and x3060 (not x1501)) (x1846 x2239) (x114 x2239))) (x2625 x2239)))
(assert (x856 x1658))
(assert (not (= 549896565 (x2116 x305 1))))
(assert (not (= (x2116 x305 1) (x2116 x1838 14))))
(assert (x853 x2323))
(assert (x853 x1712))
(assert (not (= (x2116 x77 1) 1100000000000000000)))
(assert (x853 x1736))
(assert (=> (> (+ 10000 1) x1838) (not (= (x2116 x1422 1) x1838))))
(assert (x853 x411))
(assert (= x2623 (and (not x1703) x2766)))
(assert (not (= 1000000000000000000 (x2116 x2458 6))))
(assert (=> (< (- x1422 1) 10000) (not (= x1422 (x2116 0 x92)))))
(assert (= (x2024 x772) 0))
(assert (not (= (x2116 x2187 1) 6)))
(assert (=> (> (+ 10000 1) x1990) (not (= (x2116 x77 1) x1990))))
(assert (not (= 11 (x2116 x77 1))))
(assert (not (= 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2116 x1324 1))))
(assert (not (= 11548673047482463375710962565434449992668293034397312241487562681223695302656 (x2116 x2458 6))))
(assert (x434 x2528 x1019 x866 x2898))
(assert (x853 x2349))
(assert (=> (< (- x2458 1) 10000) (not (= (x2116 0 x1916) x2458))))
(assert (not (= (x2116 x2187 1) 4294967296)))
(assert (not (= 0 (x2116 x2462 15))))
(assert (not (= (x2116 1 x2630) 549896565)))
(assert (x1370 x1957 x306))
(assert (x853 x91))
(assert (x853 x1994))
(assert (=> (< (- x1422 1) 10000) (not (= x1422 (x2116 x2462 13)))))
(assert (= (and (=> x446 x1795) (=> (not x446) x425)) x1192))
(assert (x853 x1164))
(assert (x853 x794))
(assert (not (= 549896565 (x2116 x2462 13))))
(assert (not (= (x2116 0 x3058) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (not (= (x2116 x208 14) 826074471)))
(assert (= (and x2141 (not x1935)) x2029))
(assert (not (= (x2116 0 x2810) 0)))
(assert (= (and x207 x3003) x2464))
(assert (not (= (x2116 x2458 6) 1461501637330902918203684832716283019655932542975)))
(assert (x856 x822))
(assert (x434 x854 x674 x2852 x534))
(assert (x853 x3035))
(assert (=> (< (- x2458 1) 10000) (not (= x2458 (x2116 x1324 1)))))
(assert (x853 x2806))
(assert (not (= (x2116 x2462 12) 274184521717934524641157099916833587233)))
(assert (x853 x3000))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x1990 1))))
(assert (not (= (x2116 0 x1916) 549896565)))
(assert (= (x1755 x2239) (ite (= x2567 x2239) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1270 x2239))))
(assert (=> (< (- x2817 1) 10000) (not (= x2817 (x2116 0 x3058)))))
(assert (= x2941 (=> (and (= (x2858 (+ x2755 4)) x2553) (= (= 274184521717934524641157099916833587206 x2491) x367) (= x185 (x1936 (- x961 x2755))) (= x961 (x2858 (+ x2755 36))) (= (x2182 x1565) x1442) (= (x1111 1461501637330902918203684832716283019655932542975 x1236) x2491)) (and (=> (not x367) x2129) (=> x367 x2601)))))
(assert (= x2993 (and (not x1320) x1220)))
(assert (=> (< (- x104 1) 10000) (not (= (x2116 x2462 11) x104))))
(assert (x853 x1934))
(assert (=> (> (+ 10000 1) x77) (not (= (x2116 1 x2406) x77))))
(assert (not (= 14 (x2116 x422 6))))
(assert (=> (< (- x3040 1) 10000) (not (= x3040 (x2116 x2672 13)))))
(assert (x853 x3080))
(assert (= (x2176 x2811) (ite (= x2811 x1498) x750 (x1415 x2811))))
(assert (not (= (x2116 x698 1) 549896565)))
(assert (=> (> (+ 10000 1) x698) (not (= (x2116 0 x2810) x698))))
(assert (=> (= (x2116 x1422 1) (x2116 0 x92)) (and (= x92 1) (= x1422 0))))
(assert (not (= 1000000000000000000 (x2116 0 x3058))))
(assert (not (= (x2116 0 x2267) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 15 (x2116 x2458 6))))
(assert (= (=> (and (= x359 (= x1734 0)) (= x3106 x666) (= (ite (not x359) (< x1734 x666) (not x359)) x798)) (and (=> (and (= x1308 x1984) (= x613 x2801) (not x798) (= x1728 x666)) x322) (=> (and (= x1308 x2023) x798 (= x2714 6) (= x2458 x2571) (= x2560 0) (= 1 x573) (= 0 x2824)) x317))) x795))
(assert (x853 x885))
(assert (=> (> (+ 10000 1) x2458) (not (= (x2116 x2817 11) x2458))))
(assert (= (x797 x2478) (ite (= x2478 x1615) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x2478))))
(assert (x434 x377 x2402 x355 x2525))
(assert (= (x2625 x1933) (ite (and (not x170) x1557) (x1846 x1933) (ite (and (not x1501) x3060) (x1846 x1933) (x114 x1933)))))
(assert (=> (< (- x422 1) 10000) (not (= x422 (x2116 x2817 11)))))
(assert (not (= 1000000000000000000000000000000000000 (x2116 x2462 12))))
(assert (not (= (x2116 x2964 14) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (not (= (x2116 x2817 11) 1889567281)))
(assert (not (= 13 (x2116 1 x2630))))
(assert (not (= (x2116 x305 1) 4294967296)))
(assert (= x709 (and x1875 x2484)))
(assert (x853 x1713))
(assert (x720 x3103 x2256))
(assert (not (= (x2116 0 x2204) 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (= (ite (= x2959 x2806) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2738 x2959)) (x2083 x2959)))
(assert (=> (> (+ 10000 1) x222) (not (= x222 (x2116 x2964 14)))))
(assert (x853 x2197))
(assert (not (= (x2116 x1324 1) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (not (= (x2116 x208 14) (x2116 x2672 13))))
(assert (not (= 1937038442 (x2116 x2817 11))))
(assert (= (x2083 x2806) 114004622612207947607358650692132104809471428260693408755609835181222483984384))
(assert (=> (= (x2116 x422 6) (x2116 0 x2204)) (and (= x422 0) (= x2204 6))))
(assert (=> (= (x2116 x2964 14) (x2116 0 x1916)) (and (= x2964 0) (= x1916 14))))
(assert (x856 x980))
(assert (not (= (x2116 1 x2630) 33222205748031110454085609023467044101453017019085594488531032467161307152384)))
(assert (x853 x2518))
(assert (not (= (x2116 x754 12) 1937038442)))
(assert (= (ite (and (not x2142) x3017) (x1162 x2959) (x504 x2959)) (x302 x2959)))
(assert (x853 x1114))
(assert (x856 x1355))
(assert (x853 x673))
(assert (not (= 13 (x2116 x208 14))))
(assert (not (= (x2116 x754 12) 72464927124685711895252664195178772226123872012682517813167109100718830649344)))
(assert (=> (< (- x1324 1) 10000) (not (= x1324 (x2116 x422 6)))))
(assert (= (x1124 x2386) (ite (= x931 x2386) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x76 x2386))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2116 x422 6))))
(assert (x853 x183))
(assert (not (= 274184521717934524641157099916833587202 (x2116 x1838 14))))
(assert (= (ite (and (> (+ x3142 x1428) x629) (<= x3142 x629)) (x3113 (+ (- x629 x3142) x1169)) (x2909 x629)) (x714 x629)))
(assert (not (= (x2116 x2672 13) (x2116 x698 1))))
(assert (=> (> (+ 10000 1) x422) (not (= (x2116 x208 14) x422))))
(assert (= (ite (= x2959 x779) x2462 (x570 x2959)) (x2589 x2959)))
(assert (= (ite (= x484 x2239) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1903 x2239)) (x626 x2239)))
(assert (not (= 1000000000 (x2116 0 x1916))))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 0 x2267))))
(assert (=> (> (+ 10000 1) x2187) (not (= x2187 (x2116 0 x1916)))))
(assert (= (=> (= (< 0 x1754) x1502) (and (=> x1502 x687) (=> (and (not x1502) (= x2219 0)) x427))) x455))
(assert (not (= 15 (x2116 x754 12))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2116 x2672 13))))
(assert (=> (> (+ 10000 1) x2187) (not (= x2187 (x2116 0 x2267)))))
(assert (not (= (x2116 x2462 13) 4294967295)))
(assert (x853 x2428))
(assert (x853 x196))
(assert (not (= 12 (x2116 1 x2630))))
(assert (= (ite (= x2055 x1845) x2257 (x496 x2055)) (x2907 x2055)))
(assert (=> (< (- x3040 1) 10000) (not (= (x2116 x1838 14) x3040))))
(assert (= x2888 (=> (and (not (= x2812 826074471)) (< 0 x1536) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1948) (and (> 32 x1948) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1948) true))) x812) (= x87 x1476) (not (< x2812 826074471)) (= (x1936 (- x87 4)) x1948) (= x1685 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (> 4 x87)) (= 36 x87) (= 1889567281 x2812) (= x698 x1391) (= (x2275 274184521717934524641157099916833587202) x1536)) (and (=> x812 x2754) (=> (not x812) x1547)))))
(assert (x720 x602 x851))
(assert (= (ite (= x752 x2756) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2830 x2756)) (x1492 x2756)))
(assert (x853 x992))
(assert (not (= (x2116 0 x1916) 826074471)))
(assert (= x967 (=> (and (= x2896 (x1936 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618))) (= x1520 (> 0 x2896))) (and (=> x1520 x1795) (=> (not x1520) x206)))))
(assert (x856 x500))
(assert (not (= (x2116 x754 12) 11)))
(assert (x1433 x2729 x2404))
(assert (x1752 x2204))
(assert (x853 x2805))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 x754 12))))
(assert (x853 x2684))
(assert (not (= (x2116 x422 6) 18446744073709551616)))
(assert (x853 x2683))
(assert (not (= (x2116 0 x1916) 18446744073709551616)))
(assert (= (ite (= x2386 x2567) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1270 x2386)) (x1755 x2386)))
(assert (=> (< (- x1422 1) 10000) (not (= x1422 (x2116 1 x2630)))))
(assert (x853 x2007))
(assert (x853 x2003))
(assert (= (ite (= x772 x2806) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2738 x772)) (x2083 x772)))
(assert (= (ite (and x1641 (not x3094)) (x2625 x450) (ite (and x1389 (not x1168) x2868) (x1797 x450) (x2045 x450))) (x707 x450)))
(assert (x856 x3021))
(assert (not (= 1937038442 (x2116 1 x2630))))
(assert (x856 x456))
(assert (x853 x2624))
(assert (= x3014 (=> (= x1698 x2732) x3117)))
(assert (x853 x164))
(assert (x1370 x169 x340))
(assert (= x1112 (=> (and (= x1004 (x953 x71)) (= x2106 (= x1004 0))) (and (=> x2106 x1795) (=> (and (not x2106) (= x2244 (< 0 x790)) (= (x2858 (+ 4 x2787)) x779) (or (and (not x2244) (= x2433 x790)) (and (> 4294967296 x1897) x2244 (= 1 x2433)))) x1228)))))
(assert (= (and x2387 x2036) x1980))
(assert (x853 x3070))
(assert (x1752 x2267))
(assert (x856 x1624))
(assert (not (= (x2116 x1838 14) 100000000000000)))
(assert (not (= (x2116 x1838 14) 4294967296)))
(assert (not (= (x2116 x2462 14) 4294967295)))
(assert (=> (< (- x698 1) 10000) (not (= x698 (x2116 x305 1)))))
(assert (= x2916 true))
(assert (not (= (x2116 x2462 11) (x2116 x2672 13))))
(assert (= (x2976 x2959) (ite (= x2959 x1906) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2911 x2959))))
(assert (= 0 (x2024 x2959)))
(assert (x853 x948))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 0 x3058))))
(assert (x853 x1313))
(assert (not (= (x2116 x2462 13) 274184521717934524641157099916833587202)))
(assert (x853 x521))
(assert (=> (> (+ 10000 1) x422) (not (= (x2116 x2187 1) x422))))
(assert (= (or (and x507 x2614) (and (not x798) x1063)) x2726))
(assert (not (= 274184521717934524641157099916833587233 (x2116 x2462 13))))
(assert (=> (= (x2116 0 x1916) (x2116 x2462 13)) (and (= 0 x2462) (= 13 x1916))))
(assert (= (and x236 x865) x2101))
(assert (x853 x3125))
(assert (=> (= (x2116 0 x2810) (x2116 x2462 13)) (and (= x2810 13) (= 0 x2462))))
(assert (= (x2519 x772) (ite (= x2469 x772) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2626 x772))))
(assert (=> (= (x2116 x2458 6) (x2116 0 x92)) (and (= x2458 0) (= 6 x92))))
(assert (= (x1162 x2239) (ite (and x3121 x723 x1540) (x3105 x2239) (x1915 x2239))))
(assert (= (x797 x450) (ite (= x450 x1615) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x450))))
(assert (=> (= (x2116 0 x2810) (x2116 0 x2267)) (= x2810 x2267)))
(assert (=> (< (- x1324 1) 10000) (not (= x1324 (x2116 0 x2204)))))
(assert (= (or (and x1141 x2093) (and (not x1403) x735)) x572))
(assert (x1370 x3173 x1867))
(assert (not (= 274184521717934524641157099916833587233 (x2116 0 x2267))))
(assert (x853 x2730))
(assert (= (=> (and (= x1335 (> x564 4)) (= (x3134 128) x564)) (and (=> (not x1335) x139) (=> x1335 x1795))) x813))
(assert (= x809 true))
(assert (not (= (x2116 x77 1) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (x853 x2699))
(assert (not (= (x2116 x698 1) (x2116 x2462 13))))
(assert (= x1976 (or x907 x1026)))
(assert (x853 x1591))
(assert (not (= (x2116 0 x2204) 274184521717934524641157099916833587206)))
(assert (=> (> (+ 10000 1) x1324) (not (= (x2116 x2462 15) x1324))))
(assert (= (ite (= x1142 x1906) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2911 x1142)) (x2976 x1142)))
(assert (x856 1461501637330902918203684832716283019655932542975))
(assert (x853 x2895))
(assert (x853 x267))
(assert (x853 x63))
(assert (= (and x2826 (not x2178)) x395))
(assert (=> (> (+ 10000 1) x2964) (not (= x2964 (x2116 x1990 1)))))
(assert (= 0 (x2024 x2386)))
(assert (x856 x917))
(assert (= (and x493 x3178) x2579))
(assert (x853 x1441))
(assert (= (=> (= (or (> x415 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x415 128) (= (<= x415 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x478) (and (=> x478 x1795) (=> (not x478) x569))) x858))
(assert (= x84 (and x2490 (not x1772))))
(assert (= (ite (= x2386 x1427) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x1276 x2386)) (x1102 x2386)))
(assert (not (= (x2116 x2462 13) 24384142)))
(assert (= (=> (and (= (x76 x1427) x1454) (= (= 274184521717934524641157099916833587206 x1771) x761) (= 4 x2109)) (and (=> (and (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x2611) (= (x2275 274184521717934524641157099916833587206) x1994) (= x2591 1) (< 0 x1994) x761 (< x1338 826074471) (<= x2009 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2109 x1189) (<= 0 x2009) (= 404098525 x1338) (= 32 x1732) (not (> 4 x1189)) (not (= x1338 157198259)) (not (= 117300739 x1338)) (= 4 x1189)) x2185) (=> (not x761) x1027))) x1337))
(assert (= (and (not x52) x1619) x3059))
(assert (=> (< (- x1990 1) 10000) (not (= (x2116 x2672 13) x1990))))
(assert (=> (= (x2116 0 x1916) (x2116 x754 12)) (and (= x1916 12) (= x754 0))))
(assert (not (= 404098525 (x2116 0 x1916))))
(assert (not (= 1100000000000000000 (x2116 0 x2810))))
(assert (=> (> (+ 10000 1) x305) (not (= x305 (x2116 x2672 13)))))
(assert (= (and (not x814) x277) x1689))
(assert (not (= (x2116 x1990 1) 1100000000000000000)))
(assert (not (= (x2116 x2462 13) 157198259)))
(assert (=> (> (+ 10000 1) x77) (not (= (x2116 x754 12) x77))))
(assert (= (and (not x2034) x2741) x135))
(assert (x720 x764 x2735))
(assert (not (= (x2116 x2462 12) (x2116 x2817 11))))
(assert (not (= (x2116 x1422 1) 549896565)))
(assert (= (x1153 x450) (ite (= x2538 x450) x890 (x2042 x450))))
(assert (x853 x2664))
(assert (=> (> (+ 10000 1) x1324) (not (= x1324 (x2116 0 x1916)))))
(assert (x853 x2434))
(assert (= (ite (= x2959 x888) x1032 (x1451 x2959)) (x342 x2959)))
(assert (= (x1696 x2336) 0))
(assert (x853 x56))
(assert (= (=> (= (= 0 x1559) x1628) (and (=> x1628 x1795) (=> (not x1628) x3152))) x2983))
(assert (x853 x2087))
(assert (= (x1846 x1933) (ite (and x8 x2661 x2885) (x2361 x1933) (x1153 x1933))))
(assert (= (or (and x859 x937) (and x2127 x2549)) x578))
(assert (= x2698 (=> (and (not (> 4 x2104)) (= x2797 (x2275 274184521717934524641157099916833587206)) (= x2413 1889567281) (not (> 826074471 x2413)) (= (or (> x182 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x182 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x182))) x473) (< 0 x2797) (not (= x2413 826074471)) (= x1391 x77) (= x1476 x2104) (= x805 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= 36 x2104) (= (x1936 (- x2104 4)) x182)) (and (=> x473 x1383) (=> (not x473) x2154)))))
(assert (= (=> (and (= (x2738 x2469) x2458) (= x2119 (x1111 1461501637330902918203684832716283019655932542975 x2458)) (= (= x2119 x2458) x1440)) (and (=> x1440 x3067) (=> (not x1440) x1795))) x1126))
(assert (x853 x1366))
(assert (=> (< (- x2672 1) 10000) (not (= (x2116 x1422 1) x2672))))
(assert (= (ite (= x2772 x1933) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1174 x1933)) (x2423 x1933)))
(assert (x1370 x1035 x134))
(assert (x853 x1018))
(assert (x853 x3148))
(assert (not (= (x2116 0 x2267) 404098525)))
(assert (x853 x1089))
(assert (=> (> (+ 10000 1) x1838) (not (= x1838 (x2116 0 x2204)))))
(assert (= 0 (x703 x2627)))
(assert (=> (> (+ 10000 1) x422) (not (= (x2116 x77 1) x422))))
(assert (=> (< (- x2187 1) 10000) (not (= x2187 (x2116 0 x2810)))))
(assert (not (= (x2116 1 x2406) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= (- (/ x560 1461501637330902918203684832716283019655932542976) (uninterp_frac x560 1461501637330902918203684832716283019655932542976)) (x3023 x560 160)))
(assert (x853 x2469))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x2116 0 x3058)))))
(assert (=> (> (+ 10000 1) x1422) (not (= (x2116 0 x2267) x1422))))
(assert (not (= 826074471 (x2116 x77 1))))
(assert (x853 x2585))
(assert (not (= 15 (x2116 x2462 11))))
(assert (x853 x2889))
(assert (not (= (x2116 0 x2810) 24384142)))
(assert (x853 x2704))
(assert (x853 x1391))
(assert (=> (= (x2116 x698 1) (x2116 1 x2406)) (and (= 1 x2406) (= 1 x698))))
(assert (= (ite (= x1740 x1142) x2719 (x1944 x1142)) (x129 x1142)))
(assert (= (=> (and (>= x519 0) (>= 255 x519) (= (= 0 (ite x621 x519 (ite (= (x1111 1461501637330902918203684832716283019655932542975 x1236) x3028) 1 0))) x507) (= (x2116 x2458 6) x1687) (> 256 x519) (= x519 (x465 x1687)) (= x621 (> x519 0))) (and (=> (and (= 0 x613) (= x1984 x2806) (= 0 x1728) x507) x322) (=> (and (not x507) (or (and (> 4294967296 x1981) x699 (= x2344 1)) (and (= x843 x2344) (not x699))) (= (x1111 1461501637330902918203684832716283019655932542975 x1236) x911) (= (ite x2142 1 0) x2740) (= (> x843 0) x699) (= x2142 (= x911 x3028))) x2347))) x3067))
(assert (= x2792 (=> (and (= x1701 (x2858 (+ x2748 x857))) (= (or (and (< x919 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x919) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x919)) x1061) (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x500) x857) (= (x2858 (+ x919 31)) x500)) (and (=> (not x1061) x431) (=> x1061 x1795)))))
(assert (= (=> (= x224 (= 0 x1036)) (and (=> x224 x1795) (=> (not x224) x617))) x2791))
(assert (=> (> (+ 10000 1) x422) (not (= (x2116 x2672 13) x422))))
(assert (not (= (x2116 x2462 11) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (not (= (x2116 x990 1) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (= (and x810 x2290) x78))
(assert (=> (= (x2116 0 x2810) (x2116 x305 1)) (and (= x305 0) (= x2810 1))))
(assert (x856 x1450))
(assert (=> (> (+ 10000 1) x422) (not (= (x2116 0 x92) x422))))
(assert (= (and x121 (not x2079)) x541))
(assert (x720 x2781 x1749))
(assert (x853 x2903))
(assert (x853 x155))
(assert (not (= (x2116 x1838 14) 24384142)))
(assert (x853 x887))
(assert (x853 x2055))
(assert (x853 x2645))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2116 0 x1916))))
(assert (x853 x3135))
(assert (not (= (x2116 x2462 13) 274184521717934524641157099916833587206)))
(assert (= (=> (and (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x119) x1239) (= x893 (x2858 (+ x1239 x2787))) (= (x2858 (+ x1897 31)) x119) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1897)) (> 32 x1897)) (> x1897 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x635)) (and (=> (not x635) x788) (=> x635 x1795))) x2376))
(assert (= (ite (and (not x3094) x1641) (x2625 x2239) (ite (and (not x1168) x2868 x1389) (x1797 x2239) (x2045 x2239))) (x707 x2239)))
(assert (not (= 1000000000000000000 (x2116 x2817 11))))
(assert (= (x3011 x1933) (ite (= x1933 x433) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x1162 x1933))))
(assert (x853 x346))
(assert (= x3155 (and (not x3083) x1939)))
(assert (= (and x650 (not x3147)) x1220))
(assert (= x2621 (=> (= (< 0 x1366) x3094) (and (=> (and (not x3094) (= x486 x3149) (= x643 x2370)) x330) (=> x3094 x1674)))))
(assert (not (= (x2116 x2462 12) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (= (and x2691 x2985) x426))
(assert (x853 x1445))
(assert (= (x2371 x2478) (ite (= x2894 x2478) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x680 x2478))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 1 x2406))))
(assert (=> (< (- x698 1) 10000) (not (= x698 (x2116 x1324 1)))))
(assert (x853 x600))
(assert (x853 x3034))
(assert (x853 x914))
(assert (x853 x1898))
(assert (not (= 404098525 (x2116 x2817 11))))
(assert (not (= 4294967295 (x2116 0 x3058))))
(assert (= (x2626 x2174) (ite (and (not x1528) x2720) (x1903 x2174) (x1586 x2174))))
(assert (not (= (x2116 x2458 6) 18446744073709551615)))
(assert (not (= (x2116 1 x2406) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (=> (= (x2116 x77 1) (x2116 0 x2204)) (and (= x2204 1) (= 0 x77))))
(assert (= (and x2572 (not x1292)) x1815))
(assert (not (= (x2116 x2462 12) (x2116 x2462 15))))
(assert (= (=> (= (< x511 1100000000000000000) x556) (and (=> x556 x3057) (=> (and (= x438 0) (not x556)) x516))) x1560))
(assert (x856 x1035))
(assert (=> (> (+ 10000 1) x104) (not (= x104 (x2116 x1324 1)))))
(assert (=> (> (+ 10000 1) x1324) (not (= x1324 (x2116 x2964 14)))))
(assert (=> (= (x2116 x77 1) (x2116 x1990 1)) (= x77 x1990)))
(assert (= x735 (and x1794 x2137)))
(assert (not (= 4294967295 (x2116 x2462 12))))
(assert (= (ite (= x2283 x1933) x1450 (x1665 x1933)) (x173 x1933)))
(assert (not (= 404098525 (x2116 x2462 13))))
(assert (=> (> (+ 10000 1) x2964) (not (= x2964 (x2116 x2462 14)))))
(assert (= x1976 x1288))
(assert (not (= (x2116 x2964 14) (x2116 x2462 11))))
(assert (= (ite (= x1511 x1142) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x1983 x1142)) (x1390 x1142)))
(assert (not (= 12 (x2116 x754 12))))
(assert (x853 x2902))
(assert (x853 x162))
(assert (=> (> (+ 10000 1) x222) (not (= x222 (x2116 x2817 11)))))
(assert (=> (> (+ 10000 1) x77) (not (= (x2116 x2817 11) x77))))
(assert (x853 x450))
(assert (not (= (x2116 x2462 15) 4294967296)))
(assert (not (= (x2116 1 x2630) 274184521717934524641157099916833587202)))
(assert (x853 x2292))
(assert (x853 x2370))
(assert (not (= 1100000000000000000 (x2116 x2462 14))))
(assert (x853 x629))
(assert (x853 x1606))
(assert (not (= 24384142 (x2116 0 x2267))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2116 x77 1))))
(assert (=> (= (x2116 x2187 1) (x2116 0 x2267)) (and (= 1 x2267) (= 0 x2187))))
(assert (= true x2280))
(assert (x853 x2081))
(assert (x853 x1300))
(assert (not (= (x2116 x2458 6) (x2116 x1324 1))))
(assert (= (and x1807 (not x1625)) x483))
(assert (x853 x732))
(assert (= (ite (= x3035 x3009) x1074 (x563 x3035)) (x2064 x3035)))
(assert (not (= (x2116 0 x2204) 100000000000000)))
(assert (= (=> (= (= 0 x2893) x2739) (and (=> x2739 x1795) (=> (not x2739) x2912))) x1001))
(assert (= (x536 x2710) (ite (= x2710 x794) x238 (x1380 x2710))))
(assert (x853 x933))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 x2672 13))))
(assert (not (= 4294967296 (x2116 x2462 14))))
(assert (= x770 (=> (and (= x338 (= x1954 0)) (= 0 x3181) (= 1 x980) (= (x1111 x980 x3181) x1954)) (and (=> x338 x2996) (=> (not x338) x1795)))))
(assert (= (x2830 x2239) (ite x2966 (ite (and (not x2558) x2507) (x2024 x2239) (x81 x2239)) (x830 x2239))))
(assert (not (= (x2116 x208 14) 1889567281)))
(assert (= 0 (x2024 x2174)))
(assert (x853 x1579))
(assert (= x1223 (and (not x1930) x965)))
(assert (not (= (x2116 x77 1) 14)))
(assert (= x2141 (and x367 x562)))
(assert (not (= 13 (x2116 0 x92))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 x1324 1))))
(assert (x1370 x110 x267))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 x208 14))))
(assert (not (= 274184521717934524641157099916833587206 (x2116 x2964 14))))
(assert (x853 x1868))
(assert (= (or (and x1854 x2029) x494) x2953))
(assert (=> (< (- x422 1) 10000) (not (= x422 (x2116 x305 1)))))
(assert (not (= (x2116 x1838 14) 18446744073709551616)))
(assert (= (ite (and x207 x3003 x604) (x398 x1933) (x2519 x1933)) (x2738 x1933)))
(assert (= (or x1488 (and (not x2416) x1864)) x3085))
(assert (= (x1492 x2174) (ite (= x752 x2174) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2830 x2174))))
(assert (not (= 11548673047482463375710962565434449992668293034397312241487562681223695302656 (x2116 x422 6))))
(assert (=> (> (+ 10000 1) x222) (not (= x222 (x2116 x77 1)))))
(assert (x856 x1896))
(assert (=> (= (x2116 x2462 15) (x2116 0 x3058)) (and (= 0 x2462) (= 15 x3058))))
(assert (x856 x2483))
(assert (not (= (x2116 x1838 14) 274184521717934524641157099916833587206)))
(assert (not (= (x2116 x2672 13) 1100000000000000000)))
(assert (=> (< (- x990 1) 10000) (not (= x990 (x2116 x2462 14)))))
(assert (x853 x551))
(assert (x853 x1819))
(assert (= (=> (and (= (uninterp_mod (* x982 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2526) (= (> x1258 0) x1232)) (and (=> (not x1232) x1795) (=> (and x1232 (or (and (not x1267) (= x1986 x1569)) (and (= 1 x1569) x1267 (> 4294967296 x2060))) (= (x2858 (+ x2023 4)) x2851) (= (x2958 x2902) x2456) (= (< 0 x1986) x1267) (<= 0 x190) (>= 1461501637330902918203684832716283019655932542975 x190) (= (- (/ x2526 x1258) (uninterp_frac x2526 x1258)) x1973) (> 1461501637330902918203684832716283019655932542976 x190)) x1281))) x1071))
(assert (x853 x657))
(assert (x853 x1386))
(assert (x853 x663))
(assert (not (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2116 x305 1))))
(assert (= (ite (and x2125 (not x1832)) (x2911 x2174) (x2189 x2174)) (x830 x2174)))
(assert (= (ite (= x811 x2710) x1702 (x386 x2710)) (x237 x2710)))
(assert (=> (= (x2116 0 x92) (x2116 0 x2267)) (= x2267 x92)))
(assert (x434 x456 x2749 x1034 x1722))
(assert (= 0 (x2024 x2055)))
(assert (not (= 0 (x2116 x305 1))))
(assert (= x2536 (and (not x841) x3082)))
(assert (=> (= (x2116 x990 1) (x2116 0 x92)) (and (= 1 x92) (= 0 x990))))
(assert (not (= (x2116 0 x2810) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (=> (< (- x698 1) 10000) (not (= (x2116 x1838 14) x698))))
(assert (not (= 1937038442 (x2116 x77 1))))
(assert (= (=> (= x1342 x2673) x1264) x385))
(assert (x853 x2804))
(assert (not (= (x2116 x2817 11) 1000000000)))
(assert (not (= (x2116 x2187 1) (x2116 x2462 14))))
(assert (not (= 100000000000000 (x2116 x2672 13))))
(assert (not (= (x2116 0 x2810) 274184521717934524641157099916833587206)))
(assert (= x1831 (=> (and (= x816 (x1111 x1275 x293)) (= (= x816 0) x865) (= x2546 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349))) (= x1275 (ite (not x1455) 1 0)) (= x293 (ite (< x2546 1000000000000000000) 1 0)) (= x1455 (= x2349 0))) (and (=> (not x865) x1795) (=> x865 x1093)))))
(assert (not (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2116 x2462 13))))
(assert (= (x1915 x772) (ite (= x772 x893) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2651 x772))))
(assert (not (= (x2116 x2187 1) 1461501637330902918203684832716283019655932542976)))
(assert (= (x1102 x1933) (ite (= x1933 x1427) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x1276 x1933))))
(assert (= x1790 (and x142 (not x2027))))
(assert (not (= (x2116 x2964 14) (x2116 x2672 13))))
(assert (not (= (x2116 x2462 13) 18446744073709551616)))
(assert (=> (= (x2116 x1324 1) (x2116 x698 1)) (= x1324 x698)))
(assert (x853 x2834))
(assert (= x883 (and (not x61) x1943)))
(assert (x853 x2471))
(assert (not (= (x2116 x305 1) (x2116 x2462 15))))
(assert (= (and x366 x1793) x2448))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 x305 1))))
(assert (x853 x1756))
(assert (x853 x1016))
(assert (= (x383 x2386) (ite (= x2723 x2386) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x2386))))
(assert (=> (= (x2116 x2964 14) (x2116 0 x2810)) (and (= x2810 14) (= 0 x2964))))
(assert (not (= 18446744073709551615 (x2116 0 x3058))))
(assert (x853 x1395))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 x2458 6))))
(assert (= x2940 (and x2467 (not x41))))
(assert (= x2033 (=> (and (= x832 (< 4 x1108)) (= (x210 x2336) x1108)) (and (=> x832 x1795) (=> (not x832) x542)))))
(assert (= (ite (= x2756 x789) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x2756)) (x598 x2756)))
(assert (x853 x3111))
(assert (= x3102 x2425))
(assert (= (x601 x2239) (ite (= x2239 x545) x682 (x1626 x2239))))
(assert (= x2614 (and x1440 x1406)))
(assert (not (= (x2116 x2462 15) 18446744073709551615)))
(assert (not (= (x2116 x2462 11) 1)))
(assert (= (and (not x477) x2999) x2580))
(assert (not (= (x2116 x2458 6) 404098525)))
(assert (not (= (x2116 x2462 15) 15)))
(assert (= x442 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x694) (= x1154 (< 1 x1616)) (>= x694 0) (= x260 (x2116 1 x2267)) (= x1616 (x861 x1043)) (= x694 (x2783 x260))) (and (=> (not x1154) x1795) (=> (and (not x400) (= x2394 (x2858 (+ x1799 288))) (= x400 (< 2 x1754)) x1154 (= 1 x1070) (= x2226 (x1111 1461501637330902918203684832716283019655932542975 x694))) x2474)))))
(assert (not (= (x2116 x77 1) 18446744073709551615)))
(assert (=> (< (- x2817 1) 10000) (not (= (x2116 0 x92) x2817))))
(assert (not (= (x2116 x2462 14) (x2116 x698 1))))
(assert (x853 x957))
(assert (= (ite (= x1962 x2478) x639 (x1802 x2478)) (x1113 x2478)))
(assert (x853 x2811))
(assert (= 0 (x2024 x2756)))
(assert (=> (= (x2116 0 x92) (x2116 x1324 1)) (and (= 0 x1324) (= x92 1))))
(assert (=> (= (x2116 0 x2810) (x2116 x2462 12)) (and (= 12 x2810) (= 0 x2462))))
(assert (x853 x463))
(assert (= (ite (and x1119 x324 x867) (x1271 x2174) (x383 x2174)) (x2911 x2174)))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 x2187 1))))
(assert (= x683 (and x1329 x2666)))
(assert (=> (< (- x208 1) 10000) (not (= x208 (x2116 0 x1916)))))
(assert (not (= (x2116 x2187 1) 1000000000000000000000000000000000000)))
(assert (= (and x2722 x1402) x3178))
(assert (not (= (x2116 0 x2810) 6)))
(assert (= x569 (=> (and (= (= (ite x1695 1 0) 0) x454) (= x1695 (or x2873 x802)) (= x2873 (< x3131 x21)) (= x802 (> x3131 18446744073709551615)) (= x3131 (x2858 (+ 128 x21)))) (and (=> x454 x140) (=> (not x454) x1795)))))
(assert (= x1020 (=> (and (= x2968 (= 0 x1339)) (= (x791 x1945) x1573) (= x511 (x2958 x2902)) (= x1339 (x1111 x220 x1472)) (= (x3065 x1876) x2832) (= x2995 (x1590 x2023)) (= x1472 0) (= 1 x220) (= x892 (x1664 x1429))) (and (=> x2968 x1560) (=> (not x2968) x1795)))))
(assert (not (= (x2116 x2458 6) 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x853 x875))
(assert (not (= (x2116 x1990 1) (x2116 x2462 12))))
(assert (x853 x595))
(assert (not (= (x2116 x990 1) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (not (= (x2116 x2462 11) 4294967296)))
(assert (x853 x2458))
(assert (=> (< (- x2187 1) 10000) (not (= x2187 (x2116 x2462 12)))))
(assert (x853 x2239))
(assert (x853 x1200))
(assert (not (= (x2116 x2964 14) 1461501637330902918203684832716283019655932542975)))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x2462 13))))
(assert (x853 x2353))
(assert (x853 x1773))
(assert (= x3117 (=> (and (= (x444 x546) x2501) (= (> x757 x1274) x1462) (= x1274 (x1936 (- x2501 1))) (= x757 (x444 x546))) (and (=> (and (= x1916 x646) (= x2982 (x2858 (+ x498 x546))) x1462 (= x546 x2627) (= x498 (x2858 (+ x1809 32))) (= x1756 x1521) (= x272 x2732) (= (uninterp_mod (* 32 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1809)) x628) (=> (not x1462) x1795)))))
(assert (x853 x1571))
(assert (=> (> (+ 10000 1) x77) (not (= (x2116 x77 1) x77))))
(assert (= (x2907 x2174) (ite (= x2174 x1845) x2257 (x496 x2174))))
(assert (x853 x2628))
(assert (not (= (x2116 x990 1) (x2116 x2462 11))))
(assert (x853 x2780))
(assert (not (= (x2116 0 x92) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (= (x712 x2710) 0))
(assert (not (= (x2116 x77 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= x2470 (=> (and (= x2847 (< 18446744073709551615 x2795)) (= (x2858 (+ 1 x3165)) x2795)) (and (=> x2847 x1795) (=> (not x2847) x2537)))))
(assert (not (= (x2116 0 x92) 157198259)))
(assert (not (= (x2116 x2462 15) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (< (- x2458 1) 10000) (not (= x2458 (x2116 x305 1)))))
(assert (=> (< (- x305 1) 10000) (not (= (x2116 x1422 1) x305))))
(assert (x853 x3170))
(assert (x853 x2697))
(assert (= (x1153 x2962) (ite (= x2538 x2962) x890 (x2042 x2962))))
(assert (not (= (x2116 x1990 1) 117300739)))
(assert (not (= 24384142 (x2116 x698 1))))
(assert (not (= (x2116 x2462 15) 4294967295)))
(assert (= x2134 (and (not x734) x904)))
(assert (= (and (not x833) x2101) x1719))
(assert (not (= 12 (x2116 x2462 11))))
(assert (not (= 24384142 (x2116 x2462 12))))
(assert (not (= 13 (x2116 x2672 13))))
(assert (x853 x2611))
(assert (not (= (x2116 x754 12) 1100000000000000000)))
(assert (=> (= (x2116 x990 1) (x2116 0 x2810)) (and (= 0 x990) (= 1 x2810))))
(assert (x434 x1765 x1901 x1194 x3022))
(assert (=> (< (- x77 1) 10000) (not (= (x2116 x2462 12) x77))))
(assert (not (= 18446744073709551616 (x2116 x2462 15))))
(assert (= (ite (= x1427 x2811) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x1276 x2811)) (x1102 x2811)))
(assert (= x2813 (and x947 (not x1497))))
(assert (=> (< (- x305 1) 10000) (not (= (x2116 1 x2630) x305))))
(assert (= (and x2700 x373) x1767))
(assert (x853 x726))
(assert (not (= (x2116 x422 6) (x2116 x2462 11))))
(assert (=> (= (x2116 x422 6) (x2116 1 x2406)) (and (= 1 x422) (= x2406 6))))
(assert (= x2154 (=> (and (= x2198 (= x1391 x77)) (= x203 x77)) (and (=> (not x2198) x1383) (=> (and (= x2318 32) (= (x1566 x2618) x848) (<= 0 x848) x2198 (<= x848 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2116 x77 1) x2618) (= 1 x436)) x1211)))))
(assert (not (= 1000000000 (x2116 1 x2630))))
(assert (x856 x1275))
(assert (x853 x916))
(assert (x853 x2482))
(assert (x434 x1847 x2152 x252 x2262))
(assert (= x936 (and x773 x1977)))
(assert (=> (= (x2116 1 x2630) (x2116 x1990 1)) (and (= x2630 1) (= 1 x1990))))
(assert (x853 x1645))
(assert (= x3074 (or (and x7 x2950) (and x2125 (not x1832)))))
(assert (x1370 x980 x3181))
(assert (= (ite (= x2478 x1825) x1391 (x1301 x2478)) (x1326 x2478)))
(assert (x853 x2473))
(assert (=> (= (x2116 0 x2267) (x2116 x2462 15)) (and (= x2267 15) (= 0 x2462))))
(assert (not (= (x2116 x1422 1) 13)))
(assert (= (ite (and x1557 (not x170)) (x1846 x2386) (ite (and x3060 (not x1501)) (x1846 x2386) (x114 x2386))) (x2625 x2386)))
(assert (not (= 0 (x2116 0 x3058))))
(assert (x856 x1867))
(assert (not (= (x2116 x1324 1) (x2116 x2964 14))))
(assert (= x552 (and x2142 x3017)))
(assert (= x1383 (=> (and (= x2318 x2845) (= 0 x436)) x1211)))
(assert (x853 x2307))
(assert (x853 x1596))
(assert (= x2576 (=> (and (= (x2858 (+ 64 x2927)) x3049) (= x1571 (x2858 (+ x360 64))) (= (= x2420 x1995) x3127) (= x1995 (x2911 x1571)) (= x2420 (x1111 18446744073709551615 x1995))) (and (=> (not x3127) x1795) (=> x3127 x631)))))
(assert (= (x1492 x1142) (ite (= x1142 x752) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2830 x1142))))
(assert (not (= (x2116 x2964 14) 4294967295)))
(assert (not (= 11 (x2116 x2458 6))))
(assert (= (ite (= x433 x2959) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x1162 x2959)) (x3011 x2959)))
(assert (= x3108 (and x1719 x3068)))
(assert (=> (> (+ 10000 1) x1324) (not (= x1324 (x2116 0 x92)))))
(assert (=> (= (x2116 x1422 1) (x2116 0 x1916)) (and (= 0 x1422) (= x1916 1))))
(assert (x853 x208))
(assert (x853 x2225))
(assert (= (x817 x2478) (ite (= x2478 x303) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1851 x2478))))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 1 x2630) x990))))
(assert (not (= (x2116 x698 1) (x2116 x2817 11))))
(assert (not (= 15 (x2116 x2462 13))))
(assert (= (and (not x835) x2940) x2617))
(assert (= x596 (and (not x2476) x1319)))
(assert (x853 x1709))
(assert (not (= (x2116 x2462 12) 11)))
(assert (not (= 4294967296 (x2116 0 x2810))))
(assert (not (= (x2116 x1838 14) (x2116 x77 1))))
(assert (= (ite (= x2851 x2055) x2456 (x3159 x2055)) (x1610 x2055)))
(assert (x853 x1635))
(assert (= x1458 (=> (and (= x1771 (x2012 x1906)) (= (x1111 1461501637330902918203684832716283019655932542975 x1771) x898) (= (= x898 x1771) x1329)) (and (=> (and x1329 (<= 0 x2391) (< x2391 18446744073709551616) (= (> x671 0) x3071) (or (and (not x3071) (= x2893 x671)) (and x3071 (= x2893 1) (< x648 4294967296))) (>= 18446744073709551615 x2391)) x1001) (=> (not x1329) x1795)))))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 x2462 14))))
(assert (x853 x846))
(assert (= (x383 x2756) (ite (= x2756 x2723) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x2756))))
(assert (= (ite (= x1845 x772) x2257 (x496 x772)) (x2907 x772)))
(assert (=> (> (+ 10000 1) x2462) (not (= x2462 (x2116 x2462 15)))))
(assert (not (= (x2116 x305 1) 1461501637330902918203684832716283019655932542976)))
(assert (not (= 1937038442 (x2116 x422 6))))
(assert (= (x963 x2174) (ite (= x2793 x2174) x1824 (x3019 x2174))))
(assert (not (= 1100000000000000000 (x2116 x990 1))))
(assert (=> (< (- x1838 1) 10000) (not (= x1838 (x2116 x2462 13)))))
(assert (= (=> (= x52 (= 274184521717934524641157099916833587202 x559)) (and (=> (and (>= x826 0) (= x1914 10894474682274239493831243662817379401261526446360622092269559273883068006400) (= x17 32) (not (> 4 x2086)) (= x2268 1) (not (= x2581 117300739)) (<= x826 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1997 x2086) (= 4 x2086) (not (= x2581 157198259)) x52 (= (x2275 274184521717934524641157099916833587202) x3148) (= x2581 404098525) (< x2581 826074471) (< 0 x3148)) x975) (=> (not x52) x2280))) x1991))
(assert (= (ite (and x141 (not x2882)) (x2625 x2478) (ite (and (not x2442) x921) (x707 x2478) (x2265 x2478))) (x1903 x2478)))
(assert (= (ite (= x1825 x1933) x1391 (x1301 x1933)) (x1326 x1933)))
(assert (=> (= (x2116 x77 1) (x2116 0 x3058)) (and (= 0 x77) (= 1 x3058))))
(assert (=> (= (x2116 0 x3058) (x2116 x698 1)) (and (= 0 x698) (= x3058 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2116 x2462 12))))
(assert (not (= 404098525 (x2116 1 x2630))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x2116 x1324 1)))))
(assert (x1433 x1771 x1716))
(assert (x853 x671))
(assert (not (= (x2116 1 x2630) (x2116 0 x1916))))
(assert (x853 x2762))
(assert (= (x598 x1571) (ite (= x789 x1571) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x1571))))
(assert (not (= 0 (x2116 x990 1))))
(assert (x853 x1954))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 x305 1))))
(assert (=> (> (+ 10000 1) x990) (not (= x990 (x2116 0 x1916)))))
(assert (= (ite (= x772 x1825) x1391 (x1301 x772)) (x1326 x772)))
(assert (not (= 11 (x2116 x990 1))))
(assert (x853 x308))
(assert (x853 x3047))
(assert (x856 x220))
(assert (x853 x2086))
(assert (=> (> (+ 10000 1) x1838) (not (= (x2116 x698 1) x1838))))
(assert (not (= (x2116 1 x2406) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (= (and x285 x231) x1023))
(assert (not (= 274184521717934524641157099916833587233 (x2116 x2462 11))))
(assert (not (= 1000000000000000000000000000000000000 (x2116 0 x2267))))
(assert (= x459 (and x1642 (not x2613))))
(assert (=> (= (x2116 0 x3058) (x2116 x1324 1)) (and (= x1324 0) (= 1 x3058))))
(assert (x853 x415))
(assert (not (= 157198259 (x2116 x2817 11))))
(assert (not (= (x2116 x1422 1) 826074471)))
(assert (x853 x436))
(assert (=> (< (- x2672 1) 10000) (not (= (x2116 x2462 13) x2672))))
(assert (x853 x972))
(assert (x1752 x1990))
(assert (=> (> (+ 10000 1) x2187) (not (= (x2116 x2458 6) x2187))))
(assert (= (=> (and (= (> 0 x759) x2761) (= x1777 x618) (= x759 (x1936 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1898)))) (and (=> (not x2761) x1993) (=> x2761 x1795))) x206))
(assert (not (= (x2116 x2462 13) (x2116 x1838 14))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x2116 x2964 14)))))
(assert (=> (> (+ 10000 1) x422) (not (= x422 (x2116 x990 1)))))
(assert (not (= (x2116 x754 12) 4294967296)))
(assert (not (= (x2116 x1422 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (and (not x2281) x1689) x3104))
(assert (not (= (x2116 x2462 15) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= x2594 (and x596 (not x1007))))
(assert (x853 x2801))
(assert (= x1801 (=> (= x2305 (= x409 0)) (and (=> (and (= x959 x2804) (not x2305) (= x1202 x1210)) x1666) (=> x2305 x1795)))))
(assert (x853 x698))
(assert (= x132 x2425))
(assert (x856 x2022))
(assert (=> (> (+ 10000 1) x2462) (not (= (x2116 x2672 13) x2462))))
(assert (not (= (x2116 x208 14) 6)))
(assert (=> (> (+ 10000 1) x1838) (not (= (x2116 x208 14) x1838))))
(assert (not (= (x2116 0 x2267) 1000000000000000000)))
(assert (= (or x2726 (and (not x278) x3085)) x1988))
(assert (=> (= (x2116 x1324 1) (x2116 0 x2810)) (and (= 0 x1324) (= x2810 1))))
(assert (=> (> (+ 10000 1) x2964) (not (= x2964 (x2116 x754 12)))))
(assert (x856 x1388))
(assert (not (= (x2116 1 x2630) 1461501637330902918203684832716283019655932542976)))
(assert (not (= 6 (x2116 x1990 1))))
(assert (=> (= (x2116 x2672 13) (x2116 1 x2630)) (and (= x2630 13) (= x2672 1))))
(assert (x853 x2845))
(assert (x853 x971))
(assert (= (and x1899 x1377) x588))
(assert (= (ite (= x2239 x2723) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x2239)) (x383 x2239)))
(assert (x853 x275))
(assert (= x2946 (and x495 x2968)))
(assert (not (= (x2116 x698 1) 100000000000000)))
(assert (x853 x1477))
(assert (x856 x1468))
(assert (= (ite (= x484 x2386) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1903 x2386)) (x626 x2386)))
(assert (x853 x316))
(assert (=> (= (x2116 x990 1) (x2116 0 x3058)) (and (= 0 x990) (= x3058 1))))
(assert (= (ite (= x2793 x1933) x1824 (x3019 x1933)) (x963 x1933)))
(assert (x853 x677))
(assert (x853 x2508))
(assert (x856 x2624))
(assert (x853 x3043))
(assert (not (= (x2116 0 x2810) 274184521717934524641157099916833587233)))
(assert (= x3004 (and x2224 x2515)))
(assert (not (= (x2116 x305 1) 13)))
(assert (x853 x1526))
(assert (=> (< (- x305 1) 10000) (not (= x305 (x2116 x2817 11)))))
(assert (= x113 (and x2617 x1834)))
(assert (not (= 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2116 x2187 1))))
(assert (x853 x1361))
(assert (=> (> (+ 10000 1) x990) (not (= (x2116 x2462 13) x990))))
(assert (=> (> (+ 10000 1) x1422) (not (= (x2116 x2187 1) x1422))))
(assert (= x2507 x1805))
(assert (x853 x1740))
(assert (=> (= (x2116 x305 1) (x2116 0 x2204)) (and (= 1 x2204) (= x305 0))))
(assert (x1370 x1712 x916))
(assert (=> (< (- x1422 1) 10000) (not (= (x2116 x305 1) x1422))))
(assert (not (= (x2116 x2462 11) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (=> (= (x2116 x2462 14) (x2116 0 x2267)) (and (= x2462 0) (= 14 x2267))))
(assert (= (x1113 x1142) (ite (= x1142 x1962) x639 (x1802 x1142))))
(assert (= x1531 (=> (= (= 0 x2853) x841) (and (=> x841 x1795) (=> (not x841) x2825)))))
(assert (x856 x1372))
(assert (= (ite x2966 (ite (and x2507 (not x2558)) (x2024 x2756) (x81 x2756)) (x830 x2756)) (x2830 x2756)))
(assert (= 0 (x343 x2431)))
(assert (x1433 x222 x2149))
(assert (not (= 1000000000000000000 (x2116 x1838 14))))
(assert (x853 x2546))
(assert (not (= (x2116 x2462 11) 0)))
(assert (=> (= (x2116 x754 12) (x2116 0 x2810)) (and (= x754 0) (= 12 x2810))))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x208 14))))
(assert (not (= 0 (x2116 x2672 13))))
(assert (x856 x1605))
(assert (=> (= (x2116 0 x3058) (x2116 x305 1)) (and (= 0 x305) (= 1 x3058))))
(assert (x853 x943))
(assert (= (x1153 x2174) (ite (= x2174 x2538) x890 (x2042 x2174))))
(assert (= (ite (and (not x2882) x141) (x2625 x2959) (ite (and x921 (not x2442)) (x707 x2959) (x2265 x2959))) (x1903 x2959)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 x2462 11))))
(assert (= (ite (and (not x3094) x1641) (x2625 x2386) (ite (and (not x1168) x1389 x2868) (x1797 x2386) (x2045 x2386))) (x707 x2386)))
(assert (=> (< (- x3040 1) 10000) (not (= x3040 (x2116 x698 1)))))
(assert (=> (< (- x77 1) 10000) (not (= (x2116 0 x2267) x77))))
(assert (x856 x560))
(assert (= (=> (and (= (= x2353 x3151) x1854) (= x2353 (x1111 1461501637330902918203684832716283019655932542975 x3151))) (and (=> (not x1854) x1693) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x437) (= x2312 (x2116 x990 1)) (= x3053 1) (= x901 32) (= x437 (x2991 x2312)) (>= x437 0) (= (x1111 1461501637330902918203684832716283019655932542975 x155) x990) x1854) x2340))) x675))
(assert (not (= (x2116 x754 12) 18446744073709551615)))
(assert (=> (= (x2116 x2462 13) (x2116 1 x2406)) (and (= x2462 1) (= x2406 13))))
(assert (not (= 1889567281 (x2116 x2462 11))))
(assert (not (= (x2116 x754 12) (x2116 x305 1))))
(assert (= x1738 (or (and x52 x1619) (and x649 x3156))))
(assert (x853 x1912))
(assert (=> (< (- x77 1) 10000) (not (= x77 (x2116 x1422 1)))))
(assert (not (= (x2116 x2462 14) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2116 x1324 1))))
(assert (x853 x2771))
(assert (x853 x2257))
(assert (= x441 (=> (and (= x2403 (x3023 x156 160)) (= (uninterp_mod (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1073) (= x3058 (x2116 x2462 14)) (= (x2858 (+ x1043 x181)) x1925) (= x1508 (uninterp_mod (* x700 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= 0 x156) (= (x2858 (+ 256 x1799)) x1622) (= x2177 (x2116 0 x3058)) (= (x2309 x1043) x1965) (= x835 (< x1965 x2403)) (= x181 (x2858 (+ x1073 32))) (<= x156 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x156 (x2783 x2177))) (and (=> (not x835) x1423) (=> x835 x1795)))))
(assert (not (= (x2116 x2817 11) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (= (ite (= x2055 x303) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1851 x2055)) (x817 x2055)))
(assert (=> (< (- x104 1) 10000) (not (= (x2116 x1422 1) x104))))
(assert (x853 x2995))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 x2187 1))))
(assert (= x2454 (and (not x65) x2993)))
(assert (x853 x2712))
(assert (=> (> (+ 10000 1) x222) (not (= x222 (x2116 x305 1)))))
(assert (not (= (x2116 x208 14) 14)))
(assert (not (= (x2116 0 x2267) 17732073718202638403566719794745014173351532837126370201055734736014230421504)))
(assert (not (= (x2116 x2462 14) (x2116 x754 12))))
(assert (= (x2045 x2174) (ite (= x2120 x2174) x1366 (x1054 x2174))))
(assert (x853 x1882))
(assert (x853 x1564))
(assert (not (= 0 (x2116 x2817 11))))
(assert (=> (> (+ 10000 1) x698) (not (= x698 (x2116 x208 14)))))
(assert (x853 x2553))
(assert (= (x383 x2055) (ite (= x2055 x2723) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x2055))))
(assert (x853 x2517))
(assert (=> (> (+ 10000 1) x1838) (not (= x1838 (x2116 x1990 1)))))
(assert (x853 x2757))
(assert (x856 x764))
(assert (=> (< (- x305 1) 10000) (not (= x305 (x2116 x2462 12)))))
(assert (x853 x722))
(assert (x853 x2702))
(assert (not (= (x2116 x1422 1) 1100000000000000000)))
(assert (= x371 (=> (and (= x292 (x2593 192)) (= (x1111 x1449 x760) x722) (= (= 0 x785) x739) (= x785 (x1623 160)) (= (= x722 0) x1880) (= x1970 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785))) (= (ite (not x739) 1 0) x1449) (= x760 (ite (< x1970 1000000000000000000) 1 0))) (and (=> x1880 x36) (=> (not x1880) x1795)))))
(assert (= (x1677 x772) (ite (= x2132 x772) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2012 x772))))
(assert (= x654 (=> (and (= (x2783 x2947) x1355) (= (x2116 0 x2204) x2947) (= x1181 (x3023 x1355 160)) (= x2158 (< 18446744073709551615 x1181)) (>= x1355 0) (= x1838 (x1111 1461501637330902918203684832716283019655932542975 x2729)) (<= x1355 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2116 x1838 14) x2204)) (and (=> (and (not x2158) (= x2059 (x2858 (+ x546 x2175))) (= (x2858 (+ 32 x3101)) x2175) (= x2242 (= x1181 0)) (= x3101 (uninterp_mod (* 32 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and (= x457 (uninterp_mod (* x1181 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x2242) (= x2113 (x2858 (+ 32 x546)))) x2242)) x1330) (=> x2158 x1795)))))
(assert (not (= (x2116 x2458 6) 274184521717934524641157099916833587202)))
(assert (=> (< (- x1838 1) 10000) (not (= x1838 (x2116 x2672 13)))))
(assert (=> (= (x2116 0 x2204) (x2116 x2672 13)) (and (= x2672 0) (= 13 x2204))))
(assert (x853 x498))
(assert (= x1115 (=> (and (= (or (> x1585 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1585) (= true (<= x1585 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x2613) (= x1080 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x917)) (= (x2858 (+ x1080 x433)) x1565) (= (x2858 (+ 31 x1585)) x917)) (and (=> x2613 x1795) (=> (not x2613) x2620)))))
(assert (= (and x3085 x278) x3003))
(assert (not (= (x2116 x1324 1) 14)))
(assert (not (= (x2116 x208 14) (x2116 x2462 15))))
(assert (not (= (x2116 x1838 14) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (= (x3023 x1640 160) (- (/ x1640 1461501637330902918203684832716283019655932542976) (uninterp_frac x1640 1461501637330902918203684832716283019655932542976))))
(assert (not (= 0 (x2116 x1990 1))))
(assert (=> (= (x2116 1 x2406) (x2116 x2462 11)) (and (= x2462 1) (= 11 x2406))))
(assert (x853 x1478))
(assert (not (= 1937038442 (x2116 x2462 13))))
(assert (= (x714 x1769) (ite (and (>= x1769 x3142) (< x1769 (+ x3142 x1428))) (x3113 (+ (- x1769 x3142) x1169)) (x2909 x1769))))
(assert (not (= (x2116 0 x3058) 157198259)))
(assert (= x2170 (and x2656 x389)))
(assert (=> (> (+ 10000 1) x422) (not (= x422 (x2116 x2462 15)))))
(assert (not (= 1000000000000000000000000000000000000 (x2116 x1324 1))))
(assert (= (ite (= x2132 x2811) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2012 x2811)) (x1677 x2811)))
(assert (= (ite (= x2283 x2811) x1450 (x1665 x2811)) (x173 x2811)))
(assert (=> (= (x2116 x1324 1) (x2116 1 x2406)) (and (= 1 x2406) (= 1 x1324))))
(assert (= x3007 (=> (= (= x2833 0) x1037) (and (=> (not x1037) x2792) (=> x1037 x1795)))))
(assert (not (= (x2116 x2187 1) 404098525)))
(assert (=> (< (- x3040 1) 10000) (not (= x3040 (x2116 x754 12)))))
(assert (= (ite (and x723 x3121 x1540) (x3105 x2174) (x1915 x2174)) (x1162 x2174)))
(assert (= (ite (= x1740 x2959) x2719 (x1944 x2959)) (x129 x2959)))
(assert (not (= (x2116 x1990 1) (x2116 x2817 11))))
(assert (not (= (x2116 x305 1) 100000000000000)))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 x2458 6))))
(assert (x1433 x1624 x2285))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x698 1))))
(assert (= (and x1077 x407) x710))
(assert (=> (> (+ 10000 1) x222) (not (= x222 (x2116 x422 6)))))
(assert (not (= 12 (x2116 0 x2267))))
(assert (=> (= (x2116 0 x3058) (x2116 x2462 12)) (and (= 0 x2462) (= x3058 12))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2116 x698 1))))
(assert (x853 x1948))
(assert (= (and x3104 (not x298)) x2691))
(assert (x853 x934))
(assert (=> (> (+ 10000 1) x3040) (not (= x3040 (x2116 1 x2630)))))
(assert (=> (= (x2116 x77 1) (x2116 x305 1)) (= x77 x305)))
(assert (= (ite (= x450 x2120) x1366 (x1054 x450)) (x2045 x450)))
(assert (x1370 x3001 x246))
(assert (= (=> (and (= x2696 (x3134 128)) (= x273 (> x2696 4))) (and (=> x273 x1795) (=> (not x273) x1694))) x3055))
(assert (not (= (x2116 x990 1) 1937038442)))
(assert (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2519 x2469)))
(assert (= x236 (and x2282 x2659)))
(assert (=> (> (+ 10000 1) x2458) (not (= (x2116 x2462 11) x2458))))
(assert (not (= (x2116 x422 6) 1100000000000000000)))
(assert (=> (< (- x1422 1) 10000) (not (= (x2116 x2964 14) x1422))))
(assert (= (=> (and (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1514) x1060) (= x690 (x2858 (+ x1060 x1615))) (= (x2858 (+ x346 31)) x1514) (= x567 (or (and (< x346 32) (= true (<= x346 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x346)))) (and (=> x567 x1795) (=> (not x567) x1784))) x3130))
(assert (x856 x2217))
(assert (x853 x2120))
(assert (= x2091 (and x1519 (not x1177))))
(assert (=> (< (- x1324 1) 10000) (not (= x1324 (x2116 x1990 1)))))
(assert (x853 x1746))
(assert (x853 x1345))
(assert (not (= (x2116 x2458 6) (x2116 x2462 14))))
(assert (= (x2759 x772) (ite (= x772 x2967) x2462 (x918 x772))))
(assert (x853 x2451))
(assert (not (= (x2116 x77 1) 1000000000000000000)))
(assert (not (= (x2116 x2817 11) 549896565)))
(assert (not (= (x2116 x208 14) (x2116 x2187 1))))
(assert (x1752 x3058))
(assert (=> (< (- x3040 1) 10000) (not (= x3040 (x2116 x990 1)))))
(assert (=> (< (- x3040 1) 10000) (not (= (x2116 x2462 11) x3040))))
(assert (=> (< (- x2817 1) 10000) (not (= x2817 (x2116 x2462 11)))))
(assert (x853 x352))
(assert (=> (> (+ 10000 1) x698) (not (= (x2116 x2462 11) x698))))
(assert (x853 x2372))
(assert (not (= (x2116 x1838 14) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (< (- x2462 1) 10000) (not (= (x2116 x1422 1) x2462))))
(assert (x853 x3005))
(assert (x853 x2678))
(assert (not (= (x2116 x2462 14) 1000000000000000000)))
(assert (x853 x2041))
(assert (= (x2911 x2723) (ite (and x1119 x867 x324) (x1271 x2723) (x383 x2723))))
(assert (not (= (x2116 x2187 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1433 x1074 x1632))
(assert (= (ite (= x1511 x2959) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x1983 x2959)) (x1390 x2959)))
(assert (= (x707 x2055) (ite (and x1641 (not x3094)) (x2625 x2055) (ite (and x2868 x1389 (not x1168)) (x1797 x2055) (x2045 x2055)))))
(assert (not (= (x2116 x2462 12) (x2116 x2964 14))))
(assert (= x981 (=> (= (> x2321 0) x1920) (and (=> x1920 x1887) (=> (and (= x2673 0) (not x1920)) x1264)))))
(assert (x853 x1418))
(assert (not (= (x2116 x990 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (and (not x2607) x430) x324))
(assert (x853 x2345))
(assert (not (= 1029106033 (x2116 x1324 1))))
(assert (=> (> (+ 10000 1) x2964) (not (= x2964 (x2116 x305 1)))))
(assert (x853 x2121))
(assert (= 0 (x2024 x1571)))
(assert (=> (> (+ 10000 1) x1422) (not (= (x2116 x208 14) x1422))))
(assert (x853 x462))
(assert (not (= 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2116 x208 14))))
(assert (= (=> (= x3126 (= 0 x2240)) (and (=> (not x3126) x1115) (=> x3126 x1795))) x2649))
(assert (x853 x1280))
(assert (not (= (x2116 x2964 14) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (= x258 (and x1320 x1220)))
(assert (=> (< (- x422 1) 10000) (not (= x422 (x2116 x1324 1)))))
(assert (=> (< (- x1838 1) 10000) (not (= x1838 (x2116 x1838 14)))))
(assert (=> (> (+ 10000 1) x1422) (not (= x1422 (x2116 x2462 12)))))
(assert (not (= 18446744073709551615 (x2116 x2672 13))))
(assert (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x626 x484)))
(assert (x853 x1189))
(assert (= (and x3108 x1788) x1881))
(assert (= (x963 x2748) (ite (= x2793 x2748) x1824 (x3019 x2748))))
(assert (x856 x1044))
(assert (x853 x104))
(assert (not (= (x2116 x2817 11) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (x853 x1446))
(assert (not (= 274184521717934524641157099916833587233 (x2116 x1990 1))))
(assert (x853 x2226))
(assert (not (= (x2116 x305 1) 404098525)))
(assert (not (= 274184521717934524641157099916833587202 (x2116 x77 1))))
(assert (= x1028 (and x1517 (not x1955))))
(assert (x853 x474))
(assert (not (= (x2116 x1990 1) (x2116 x2462 13))))
(assert (=> (= (x2116 1 x2630) (x2116 x2964 14)) (and (= 1 x2964) (= 14 x2630))))
(assert (not (= (x2116 x305 1) 24384142)))
(assert (=> (< (- x698 1) 10000) (not (= (x2116 x77 1) x698))))
(assert (=> (< (- x2672 1) 10000) (not (= x2672 (x2116 x2964 14)))))
(assert (= x376 (=> (and (>= 4294967295 x1059) (<= 0 x1059) (= x1035 (ite (not x2639) 1 0)) (< x1059 4294967296) (= (ite (> 100000000000000 x1649) 1 0) x134) (= (= x1105 0) x1209) (= x2639 (= 0 x1059)) (= x1649 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059))) (= x1105 (x1111 x1035 x134))) (and (=> (not x1209) x1795) (=> (and x1209 (= (uninterp_mod (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3034) (= (> x2832 x3034) x1904) (= x438 (ite x1904 2 3))) x516)))))
(assert (=> (< (- x2964 1) 10000) (not (= x2964 (x2116 1 x2630)))))
(assert (x853 x2447))
(assert (= (x2371 x2055) (ite (= x2894 x2055) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x680 x2055))))
(assert (= x960 (=> (= (= x1446 0) x668) (and (=> x668 x1795) (=> (not x668) x2335)))))
(assert (not (= (x2116 x990 1) (x2116 x2462 15))))
(assert (= (ite (= x1740 x2174) x2719 (x1944 x2174)) (x129 x2174)))
(assert (=> (< (- x2458 1) 10000) (not (= x2458 (x2116 x1990 1)))))
(assert (= x1884 (=> (= x1182 (= 0 x1351)) (and (=> x1182 x1795) (=> (not x1182) x1357)))))
(assert (x853 x2379))
(assert (=> (= (x2116 x2462 12) (x2116 0 x2204)) (and (= x2204 12) (= x2462 0))))
(assert (= (x1234 x772) (ite (= x384 x772) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x707 x772))))
(assert (not (= (x2116 x2462 15) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (x853 x2967))
(assert (x853 x1060))
(assert (= (x1113 x450) (ite (= x450 x1962) x639 (x1802 x450))))
(assert (= x1642 (and x552 (not x3126))))
(assert (= x1109 (=> (and (= (uninterp_mod (* x2471 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x899) (= (- (/ x899 1000000000) (uninterp_frac x899 1000000000)) x463)) (and (=> (and x2142 (or (and (= 1 x2240) x255 (< x1585 4294967296)) (and (not x255) (= x2240 x2880))) (= (> x2880 0) x255)) x2649) (=> (and (= x1308 x433) (= x463 x3106) (not x2142)) x962)))))
(assert (not (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2116 x2462 12))))
(assert (= (ite (= x2756 x3009) x1074 (x563 x2756)) (x2064 x2756)))
(assert (= (=> (and (= (< 0 x1280) x2716) (= x1280 (x861 x1043))) (and (=> x2716 x1404) (=> (not x2716) x1795))) x687))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x422 6))))
(assert (x856 x1957))
(assert (=> (> (+ 10000 1) x2187) (not (= (x2116 x2462 15) x2187))))
(assert (not (= (x2116 0 x92) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (x853 x1299))
(assert (= (x626 x2478) (ite (= x484 x2478) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1903 x2478))))
(assert (= (- (/ x466 1461501637330902918203684832716283019655932542976) (uninterp_frac x466 1461501637330902918203684832716283019655932542976)) (x3023 x466 160)))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 x2458 6))))
(assert (=> (= (x2116 0 x1916) (x2116 x77 1)) (and (= x1916 1) (= 0 x77))))
(assert (= (ite (= x2239 x931) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x76 x2239)) (x1124 x2239)))
(assert (not (= 12 (x2116 x2187 1))))
(assert (= (and (not x761) x1014) x2789))
(assert (=> (< (- x3040 1) 10000) (not (= (x2116 0 x92) x3040))))
(assert (=> (= (x2116 x2187 1) (x2116 x990 1)) (= x2187 x990)))
(assert (x856 x22))
(assert (x853 x126))
(assert (= (=> (= x65 (= x933 274184521717934524641157099916833587202)) (and (=> x65 x2888) (=> (not x65) x2249))) x2299))
(assert (x853 x837))
(assert (not (= (x2116 x1990 1) 274184521717934524641157099916833587202)))
(assert (not (= (x2116 1 x2630) (x2116 0 x2204))))
(assert (=> (= (x2116 0 x1916) (x2116 x2462 15)) (and (= x1916 15) (= x2462 0))))
(assert (= x652 (=> (and (<= x1524 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x107 x428) x1524) (= (> x2786 1) x363) (= (x31 352) x2786) (= (x2116 1 x2406) x428) (<= 0 x1524)) (and (=> (not x363) x1795) (=> (and (= x2523 (< 2 x1746)) (not x2523) (= x3092 (x1111 1461501637330902918203684832716283019655932542975 x1524)) x363) x3036)))))
(assert (= (x2626 x772) (ite (and (not x1528) x2720) (x1903 x772) (x1586 x772))))
(assert (= x1629 (and x2050 x1222)))
(assert (x853 x2934))
(assert (not (= 24384142 (x2116 x2462 15))))
(assert (=> (= (x2116 1 x2406) (x2116 x2187 1)) (and (= 1 x2187) (= 1 x2406))))
(assert (x856 x1836))
(assert (= (x1929 x2055) (ite (= x2055 x1639) x3087 (x2920 x2055))))
(assert (not (= 1029106033 (x2116 x2462 15))))
(assert (x856 x2200))
(assert (x853 x420))
(assert (=> (= (x2116 0 x2810) (x2116 x2462 11)) (and (= x2462 0) (= 11 x2810))))
(assert (= x2522 (=> (and (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x854) x1542) (= (x2858 (+ x2343 x1542)) x2354) (= (or (and (< x846 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x846) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x846)) x2635) (= x854 (x2858 (+ x846 31)))) (and (=> (not x2635) x158) (=> x2635 x1795)))))
(assert (not (= (x2116 x2817 11) 15)))
(assert (not (= 1 (x2116 x208 14))))
(assert (= (ite (and x1600 x2130 x1883) (x763 x2756) (x598 x2756)) (x1686 x2756)))
(assert (x853 x3160))
(assert (= (- (/ x1355 1461501637330902918203684832716283019655932542976) (uninterp_frac x1355 1461501637330902918203684832716283019655932542976)) (x3023 x1355 160)))
(assert (not (= (x2116 x2187 1) 117300739)))
(assert (x853 x2073))
(assert (x720 x1046 x2181))
(assert (= x158 (=> (and (= (x781 x2928) x1494) (= (x1456 x2343) x2443) (= x2549 (< 0 x1494))) (and (=> (and (= x2328 x420) (= (x2858 (+ x2007 384)) x151) x2549 (= x2556 x1777) (= x2760 x2354)) x2218) (=> (not x2549) x1795)))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2116 1 x2630))))
(assert (not (= (x2116 x422 6) 12)))
(assert (= (x1326 x2756) (ite (= x1825 x2756) x1391 (x1301 x2756))))
(assert (= (ite (= x1142 x2132) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2012 x1142)) (x1677 x1142)))
(assert (=> (= (x2116 x2187 1) (x2116 x305 1)) (= x2187 x305)))
(assert (not (= 1000000000000000000000000000000000000 (x2116 x1838 14))))
(assert (= (x2976 x2478) (ite (= x1906 x2478) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2911 x2478))))
(assert (not (= (x2116 x2672 13) 1000000000000000000000000000000000000)))
(assert (not (= (x2116 x1324 1) 274184521717934524641157099916833587206)))
(assert (= (ite (= x779 x2239) x2462 (x570 x2239)) (x2589 x2239)))
(assert (not (= (x2116 x698 1) (x2116 x2462 11))))
(assert (x853 x2161))
(assert (= (ite (= x2174 x2567) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1270 x2174)) (x1755 x2174)))
(assert (not (= (x2116 x77 1) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (= (x1686 x1571) (ite (and x1883 x2130 x1600) (x763 x1571) (x598 x1571))))
(assert (=> (= (x2116 x1422 1) (x2116 x1990 1)) (= x1990 x1422)))
(assert (not (= (x2116 x2187 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x797 x1571) (ite (= x1571 x1615) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x1571))))
(assert (x856 x824))
(assert (not (= (x2116 x1990 1) 274184521717934524641157099916833587206)))
(assert (x853 x438))
(assert (x853 x1764))
(assert (not (= 274184521717934524641157099916833587233 (x2116 x698 1))))
(assert (not (= (x2116 0 x3058) 24384142)))
(assert (x853 x2665))
(assert (not (= (x2116 0 x1916) 11)))
(assert (x853 x902))
(assert (= (x93 x2755) (ite (= x2553 x2755) x2462 (x154 x2755))))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x2672 13))))
(assert (x853 x2650))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x2462 14))))
(assert (not (= (x2116 1 x2630) 117300739)))
(assert (not (= 18446744073709551616 (x2116 1 x2630))))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 x305 1) x990))))
(assert (x1433 x1450 x1248))
(assert (=> (> (+ 10000 1) x990) (not (= x990 (x2116 x422 6)))))
(assert (x853 x2394))
(assert (not (= (x2116 0 x2204) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (x1433 x1836 x616))
(assert (x720 x2052 x2687))
(assert (not (= (x2116 0 x3058) 117300739)))
(assert (x853 x2287))
(assert (x853 x898))
(assert (not (= (x2116 x2462 14) 0)))
(assert (x853 x471))
(assert (not (= (x2116 x1324 1) 274184521717934524641157099916833587233)))
(assert (= (ite (= x2055 x3009) x1074 (x563 x2055)) (x2064 x2055)))
(assert (x853 x1959))
(assert (not (= 100000000000000 (x2116 x2462 14))))
(assert (=> (> (+ 10000 1) x2672) (not (= (x2116 0 x2810) x2672))))
(assert (x853 x2351))
(assert (not (= 15 (x2116 x305 1))))
(assert (= (x1124 x1933) (ite (= x931 x1933) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x76 x1933))))
(assert (not (= 157198259 (x2116 x305 1))))
(assert (not (= (x2116 x208 14) (x2116 x990 1))))
(assert (= (and (not x1721) x2441) x2466))
(assert (not (= (x2116 x2462 11) 1100000000000000000)))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 0 x92))))
(assert (not (= 4294967296 (x2116 x698 1))))
(assert (= (ite (= x1571 x2723) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x1571)) (x383 x1571)))
(assert (x853 x1732))
(assert (x853 x2748))
(assert (=> (> (+ 10000 1) x2458) (not (= x2458 (x2116 x2462 13)))))
(assert (x1433 x466 x2273))
(assert (=> (< (- x2672 1) 10000) (not (= (x2116 x2462 11) x2672))))
(assert (= x1430 (=> (and (= (x2858 (+ x1081 31)) x1047) (= x2010 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1047)) (= (x2858 (+ x411 x2010)) x2772) (= x2030 (or (> x1081 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1081) (= (<= x1081 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))))) (and (=> x2030 x1795) (=> (not x2030) x64)))))
(assert (x853 x2685))
(assert (= x2620 (=> (and (= x2082 (= x559 x1638)) (= (x1111 1461501637330902918203684832716283019655932542975 x559) x1638) (= (x85 x433) x559)) (and (=> (not x2082) x1795) (=> (and (= (> x915 0) x502) (<= x2391 18446744073709551615) (or (and (< x1956 4294967296) x502 (= x783 1)) (and (not x502) (= x783 x915))) (>= x2391 0) (> 18446744073709551616 x2391) x2082) x2028)))))
(assert (x853 x2153))
(assert (not (= 4294967296 (x2116 0 x3058))))
(assert (x853 x3137))
(assert (x853 x1917))
(assert (x1433 x664 x1968))
(assert (not (= (x2116 0 x1916) 0)))
(assert (=> (< (- x2458 1) 10000) (not (= (x2116 x2187 1) x2458))))
(assert (x853 x1275))
(assert (x853 x1585))
(assert (x856 x306))
(assert (= (=> (and (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1765) x2585) (= x1765 (x2858 (+ x2081 31))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2081) (and (= true (<= x2081 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 128 x2081))) x1041) (= x1039 (x2858 (+ x2585 x893)))) (and (=> (not x1041) x1762) (=> x1041 x1795))) x490))
(assert (= x2490 (and x334 (not x1448))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2116 x2964 14))))
(assert (not (= 1100000000000000000 (x2116 x2964 14))))
(assert (not (= (x2116 x2817 11) (x2116 x2462 14))))
(assert (not (= (x2116 0 x2810) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 157198259 (x2116 0 x2267))))
(assert (= x3030 (and x2580 (not x1185))))
(assert (not (= 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2116 0 x2267))))
(assert (x853 x881))
(assert (x853 x2541))
(assert (= (or x1347 x2953) x1776))
(assert (= x492 (and (not x3079) x2324)))
(assert (x856 x2472))
(assert (x856 x2827))
(assert (not (= 274184521717934524641157099916833587206 (x2116 x2462 14))))
(assert (= (x2140 x2959) (ite (= x2850 x2959) x2683 (x68 x2959))))
(assert (not (= 274184521717934524641157099916833587206 (x2116 0 x2267))))
(assert (= (=> (and (= (x1011 x1221) x2193) (= x3039 (x2858 (+ 32 x1521))) (= x66 (< 0 x2193))) (and (=> (and (= x2676 (x28 x2627)) (not x295) (= x1130 x347) (= x259 x2510) x66 (= x1631 x2962) (= x880 (x2858 (+ 32 x1221))) (= x295 (> x2676 1))) x371) (=> (not x66) x1795))) x89))
(assert (x1433 x560 x2212))
(assert (x856 x2956))
(assert (= (=> (and (= (> x828 0) x1528) (= x828 (x406 x2431))) (and (=> (and (= 0 x2675) (= x484 x574) (not x1528) (= x1549 0)) x2646) (=> x1528 x1828))) x1417))
(assert (x856 x3173))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 x1324 1))))
(assert (x853 x2325))
(assert (not (= 24384142 (x2116 x2462 14))))
(assert (= (=> (and (= x1327 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2528)) (= (or (and (< x2287 32) (= (<= x2287 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2287)) x1955) (= x2567 (x2858 (+ x1327 x1129))) (= (x2858 (+ 31 x2287)) x2528)) (and (=> x1955 x1795) (=> (not x1955) x1215))) x1334))
(assert (not (= 100000000000000 (x2116 x754 12))))
(assert (not (= 117300739 (x2116 x1422 1))))
(assert (not (= 274184521717934524641157099916833587233 (x2116 1 x2406))))
(assert (x853 x2498))
(assert (not (= (x2116 x1324 1) 17732073718202638403566719794745014173351532837126370201055734736014230421504)))
(assert (x853 x1678))
(assert (= (=> (and (= (< x1067 x2867) x2246) (= (x472 x574) x1067) (= x2867 (x3023 x1468 160))) (and (=> (not x2246) x2150) (=> x2246 x1795))) x2260))
(assert (not (= 14 (x2116 0 x2810))))
(assert (not (= 274184521717934524641157099916833587233 (x2116 x2462 14))))
(assert (=> (> (+ 10000 1) x3040) (not (= x3040 (x2116 x77 1)))))
(assert (x853 x3173))
(assert (not (= (x2116 0 x2267) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (not (= (x2116 x2458 6) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (x853 x185))
(assert (not (= 14 (x2116 x2462 12))))
(assert (= x1770 (=> (and (= x22 (x2858 (+ 31 x461))) (= x1772 (or (and (< x461 32) (= (<= x461 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x461))) (= x997 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x22)) (= x303 (x2858 (+ x1701 x997)))) (and (=> x1772 x1795) (=> (not x1772) x2981)))))
(assert (= x2965 (and (not x719) x1076)))
(assert (=> (< (- x422 1) 10000) (not (= x422 (x2116 x2964 14)))))
(assert (not (= (x2116 x1422 1) (x2116 x2462 13))))
(assert (not (= (x2116 x698 1) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (not (= 15 (x2116 0 x2810))))
(assert (= (ite (= x3009 x1933) x1074 (x563 x1933)) (x2064 x1933)))
(assert (not (= 24384142 (x2116 x2462 11))))
(assert (not (= 274184521717934524641157099916833587202 (x2116 1 x2406))))
(assert (= (x2024 x2478) 0))
(assert (=> (> (+ 10000 1) x104) (not (= x104 (x2116 x2458 6)))))
(assert (= (ite (= x2055 x545) x682 (x1626 x2055)) (x601 x2055)))
(assert (x856 x2043))
(assert (= (x598 x2811) (ite (= x2811 x789) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x2811))))
(assert (= (=> (and (= x746 (x1011 x1221)) (= (> x746 0) x2722)) (and (=> (not x2722) x1795) (=> x2722 x365))) x83))
(assert (x853 x511))
(assert (= (=> (= (= x792 0) x138) (and (=> (and (not x138) (= x3047 x1568) (= x480 x1727) (= x2153 x2325)) x1143) (=> x138 x1795))) x608))
(assert (=> (> (+ 10000 1) x77) (not (= x77 (x2116 x2672 13)))))
(assert (x853 x1058))
(assert (not (= 14262166148461681479388312084279688412379623686150252715788501447688379695104 (x2116 0 x3058))))
(assert (= x140 (=> (and (= (= x1837 x126) x1535) (= (x1111 18446744073709551615 x126) x1837) (= (x1586 x2894) x126)) (and (=> (not x1535) x1795) (=> x1535 x2574)))))
(assert (not (= 13 (x2116 x2187 1))))
(assert (=> (= (x2116 x2672 13) (x2116 x2462 13)) (= x2672 x2462)))
(assert (not (= (x2116 x1838 14) 1889567281)))
(assert (=> (> (+ 10000 1) x2462) (not (= x2462 (x2116 x2817 11)))))
(assert (not (= (x2116 0 x2204) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (= (ite (= x2336 x1799) 0 (x1696 x2336)) (x1157 x2336)))
(assert (x853 x2427))
(assert (= x2130 (and x2507 x2558)))
(assert (x853 x2386))
(assert (= (x1686 x772) (ite (and x1600 x2130 x1883) (x763 x772) (x598 x772))))
(assert (= x245 (=> (and (= (x2858 (+ x2889 31)) x2292) (= x2927 (x2858 (+ x2723 x2056))) (= (or (and (< x2889 128) (= true (<= x2889 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x2889 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2281) (= x2056 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2292))) (and (=> x2281 x1795) (=> (not x2281) x2214)))))
(assert (x853 x1307))
(assert (x856 x2458))
(assert (=> (= (x2116 0 x2810) (x2116 x77 1)) (and (= 1 x2810) (= 0 x77))))
(assert (= (ite (= x484 x772) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1903 x772)) (x626 x772)))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x1324 1))))
(assert (=> (= (x2116 0 x1916) (x2116 0 x2267)) (= x2267 x1916)))
(assert (= x427 (=> (and (= x2219 x1345) (= x484 x657) (= x1038 x2267) (= x1043 x2431)) x1417)))
(assert (not (= (x2116 x2462 13) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (=> (> (+ 10000 1) x2458) (not (= (x2116 x754 12) x2458))))
(assert (= (x2625 x2478) (ite (and (not x170) x1557) (x1846 x2478) (ite (and x3060 (not x1501)) (x1846 x2478) (x114 x2478)))))
(assert (=> (< (- x222 1) 10000) (not (= (x2116 x1422 1) x222))))
(assert (not (= 1889567281 (x2116 x2462 12))))
(assert (=> (= (x2116 1 x2406) (x2116 x2462 12)) (and (= x2462 1) (= x2406 12))))
(assert (x853 x1808))
(assert (= x2642 (=> (and (= (> x2927 x1906) x1173) (= (< 18446744073709551615 x1906) x2453) (= x1906 (x2858 (+ 128 x2927))) (= x2985 (= (ite x1731 1 0) 0)) (= (or x1173 x2453) x1731)) (and (=> (not x2985) x1795) (=> x2985 x101)))))
(assert (=> (= (x2116 1 x2630) (x2116 x754 12)) (and (= 12 x2630) (= 1 x754))))
(assert (= (x1492 x772) (ite (= x772 x752) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2830 x772))))
(assert (not (= 274184521717934524641157099916833587206 (x2116 x2817 11))))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 x754 12))))
(assert (=> (< (- x2458 1) 10000) (not (= x2458 (x2116 x2672 13)))))
(assert (not (= (x2116 x2672 13) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 1 x2630))))
(assert (x853 x2652))
(assert (not (= 14 (x2116 x698 1))))
(assert (not (= 404098525 (x2116 x754 12))))
(assert (= x1319 (and x1175 x2071)))
(assert (= (=> (and (>= x1172 0) (= (x1950 274184521717934524641157099916833587233) x1594) x769 (= x547 false) (<= 0 x951) (= (< 0 (x2275 274184521717934524641157099916833587202)) x1621) (>= 1461501637330902918203684832716283019655932542975 x1009) (>= x2351 0) (>= x1163 0) (>= x1645 0) (>= x97 0) (<= 0 x2895) (>= 18446744073709551615 x2391) (<= x3151 1461501637330902918203684832716283019655932542975) (= x2220 x2728) (< 35 x1169) (>= x1009 0) (<= x702 1461501637330902918203684832716283019655932542975) (<= 0 x1594) (<= 0 x2362) (= x3151 x2462) (= false x2412) (<= 0 x702) (= (x1950 274184521717934524641157099916833587202) x2351) (= x102 x2729) (= x164 24384142) (<= 0 x2073) (= x769 (> (x2275 274184521717934524641157099916833587206) 0)) (<= x1059 4294967295) (>= x183 0) (>= x1059 0) (= x702 x2462) (= x1137 x1645) (>= 18446744073709551615 x2362) (>= 18446744073709551615 x2073) (<= x1645 1461501637330902918203684832716283019655932542975) (= (<= x1169 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (<= x2728 1461501637330902918203684832716283019655932542975) x1745 (= x397 false) (>= 4294967295 x2895) (= x1256 false) (<= 0 x190) (= (x1950 274184521717934524641157099916833587206) x684) (= (> (x2275 274184521717934524641157099916833587233) 0) x1745) (>= 18446744073709551615 x1172) (<= 0 x2461) (= x2258 1) (<= x97 1461501637330902918203684832716283019655932542975) x1621 (<= x2461 18446744073709551615) (<= 0 x2391) (<= x1163 4294967295) (>= 1461501637330902918203684832716283019655932542975 x183) (<= x951 18446744073709551615) (>= x684 0) (<= 0 x3151) (<= x190 1461501637330902918203684832716283019655932542975) (>= x2728 0) (= x2220 x59)) x1637) x2939))
(assert (x853 x2591))
(assert (= (x1240 x772) (ite (= x772 x2473) x766 (x1567 x772))))
(assert (x853 x1723))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x2462 13))))
(assert (not (= (x2116 x2462 12) 4294967296)))
(assert (x853 x3158))
(assert (=> (> (+ 10000 1) x1324) (not (= (x2116 x1324 1) x1324))))
(assert (x853 x1279))
(assert (x856 x1921))
(assert (= (ite (= x2174 x1511) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x1983 x2174)) (x1390 x2174)))
(assert (=> (> (+ 10000 1) x208) (not (= (x2116 x208 14) x208))))
(assert (=> (> (+ 10000 1) x1990) (not (= x1990 (x2116 x208 14)))))
(assert (x853 x2023))
(assert (= x2441 (and x903 x161)))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 x2462 15))))
(assert (x853 x110))
(assert (x853 x1067))
(assert (x853 x854))
(assert (= (ite (= x1845 x71) x2257 (x496 x71)) (x2907 x71)))
(assert (x856 x356))
(assert (not (= (x2116 x1324 1) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (=> (< (- x2672 1) 10000) (not (= (x2116 x2462 12) x2672))))
(assert (x853 x1297))
(assert (= (=> (and (= (x2858 (+ 31 x415)) x837) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x415)) (< x415 128)) (> x415 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1530) (= (x2858 (+ x2894 x2372)) x21) (= x2372 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x837))) (and (=> (not x1530) x858) (=> x1530 x1795))) x1367))
(assert (x853 x1990))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2116 0 x2810))))
(assert (x853 x2695))
(assert (x853 x1906))
(assert (= (ite (and x73 x2242 (not x2158)) (x2909 x1769) (x394 x1769)) (x1751 x1769)))
(assert (= (and (not x565) x1500) x75))
(assert (not (= (x2116 0 x2267) (x2116 1 x2406))))
(assert (x853 x1548))
(assert (not (= (x2116 x422 6) (x2116 x2672 13))))
(assert (x853 x2245))
(assert (= (x797 x2386) (ite (= x2386 x1615) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x2386))))
(assert (= (x1492 x2811) (ite (= x2811 x752) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2830 x2811))))
(assert (= (x2589 x2787) (ite (= x2787 x779) x2462 (x570 x2787))))
(assert (x853 x1921))
(assert (= (ite (= x2538 x2055) x890 (x2042 x2055)) (x1153 x2055)))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x2462 12))))
(assert (= (ite (= x2478 x1427) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x1276 x2478)) (x1102 x2478)))
(assert (=> (= (x2116 1 x2406) (x2116 x2458 6)) (and (= x2458 1) (= x2406 6))))
(assert (= x373 (and x1000 x1384)))
(assert (not (= 0 (x2116 x698 1))))
(assert (not (= 6 (x2116 0 x3058))))
(assert (= (and (not x1791) x1558) x3138))
(assert (not (= (x2116 x2187 1) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (not (= (x2116 x1422 1) 1029106033)))
(assert (not (= (x2116 x2964 14) 33222205748031110454085609023467044101453017019085594488531032467161307152384)))
(assert (x853 x2894))
(assert (x853 x2942))
(assert (= x410 (=> (and (<= 0 x2638) (= x1764 1) (= x606 (x2116 x754 12)) (> 1461501637330902918203684832716283019655932542976 x2638) (= (x1111 1461501637330902918203684832716283019655932542975 x2729) x754) (= (x2367 x606) x2638) (= 352 x776) (= x153 (= 0 x2638)) (>= 1461501637330902918203684832716283019655932542975 x2638)) (and (=> x153 x654) (=> (not x153) x2329)))))
(assert (=> (= (x2116 x208 14) (x2116 1 x2630)) (and (= 14 x2630) (= x208 1))))
(assert (not (= (x2116 x1324 1) 15)))
(assert (= x1141 (and x735 x1403)))
(assert (= (=> (and (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x995) x1651) (= x995 (x2858 (+ 31 x2231))) (= x931 (x2858 (+ x1651 x1427))) (= (or (and (< x2231 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2231) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2231)) x725)) (and (=> x725 x1795) (=> (not x725) x1337))) x2825))
(assert (not (= (x2116 1 x2406) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= (x2116 0 x3058) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x3024 (and x257 (not x478))))
(assert (=> (> (+ 10000 1) x2964) (not (= (x2116 0 x2267) x2964))))
(assert (=> (> (+ 10000 1) x2817) (not (= x2817 (x2116 x2964 14)))))
(assert (x853 x520))
(assert (not (= 15 (x2116 0 x1916))))
(assert (x853 x669))
(assert (= x176 (and x3162 x2409)))
(assert (= (=> (= x1899 (< 0 x509)) (and (=> x1899 x2551) (=> (and (not x1899) (= x2732 0)) x3117))) x2592))
(assert (x853 x850))
(assert (not (= 14262166148461681479388312084279688412379623686150252715788501447688379695104 (x2116 x1838 14))))
(assert (not (= 1000000000000000000000000000000000000 (x2116 0 x92))))
(assert (not (= 1029106033 (x2116 x2462 11))))
(assert (not (= (x2116 x2462 13) 1000000000)))
(assert (=> (= (x2116 0 x2810) (x2116 x2187 1)) (and (= x2810 1) (= x2187 0))))
(assert (x853 x2013))
(assert (=> (= (x2116 0 x92) (x2116 x2462 12)) (and (= 0 x2462) (= 12 x92))))
(assert (x853 x661))
(assert (x853 x2403))
(assert (= (=> (and (>= x466 0) (= (x2858 (+ 32 x989)) x351) (= x466 (x2783 x1842)) (<= x466 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2116 x208 14) x1916) (= (x2116 0 x1916) x1842) (= (< x296 x509) x499) (= (x2858 (+ 32 x546)) x3142) (= (x2858 (+ x546 x351)) x1756) (= (uninterp_mod (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x989) (= x1428 (uninterp_mod (* 32 x2795) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x3023 x466 160) x509) (= (x1111 1461501637330902918203684832716283019655932542975 x2729) x208) (= x296 (x444 x546))) (and (=> (not x499) x2592) (=> x499 x1795))) x2537))
(assert (x853 x1382))
(assert (= x1612 (=> (and (= 0 x1513) (= x546 x402) (= x579 x2678) (= x1368 x2708)) x410)))
(assert (= x2751 (=> (= x1959 x63) x2599)))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2116 0 x92))))
(assert (=> (< (- x1422 1) 10000) (not (= (x2116 0 x3058) x1422))))
(assert (not (= (x2116 x2462 12) (x2116 x305 1))))
(assert (x853 x2560))
(assert (x853 x1622))
(assert (= (x2759 x2959) (ite (= x2959 x2967) x2462 (x918 x2959))))
(assert (= (x2064 x2239) (ite (= x3009 x2239) x1074 (x563 x2239))))
(assert (=> (> (+ 10000 1) x698) (not (= (x2116 0 x1916) x698))))
(assert (x856 x226))
(assert (not (= (x2116 x2964 14) 100000000000000)))
(assert (not (= 274184521717934524641157099916833587206 (x2116 x2462 12))))
(assert (= (ite (= x2793 x772) x1824 (x3019 x772)) (x963 x772)))
(assert (not (= (x2116 x1324 1) 4294967296)))
(assert (= (x830 x2239) (ite (and x2125 (not x1832)) (x2911 x2239) (x2189 x2239))))
(assert (x853 x1902))
(assert (= x2908 (=> (and (= (= x328 x1836) x1179) (= (x1111 1461501637330902918203684832716283019655932542975 x1836) x328) (= (x1983 x2567) x1836)) (and (=> (and x1179 (= x476 (> x1584 0)) (or (and (= x1773 x1584) (not x476)) (and (= x1773 1) x476 (< x308 4294967296)))) x150) (=> (not x1179) x1795)))))
(assert (x856 x169))
(assert (= (=> (and (= x1388 (x2858 (+ x1313 31))) (= x1478 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1388)) (= (x2858 (+ x1478 x484)) x2748) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1313) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1313) true) (> 32 x1313))) x1318)) (and (=> (not x1318) x1857) (=> x1318 x1795))) x2533))
(assert (x853 x2025))
(assert (=> (< (- x2817 1) 10000) (not (= x2817 (x2116 x990 1)))))
(assert (=> (> (+ 10000 1) x1990) (not (= x1990 (x2116 x1324 1)))))
(assert (=> (> (+ 10000 1) x2458) (not (= (x2116 1 x2630) x2458))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x2116 0 x2267)))))
(assert (=> (= (x2116 x2964 14) (x2116 x208 14)) (= x2964 x208)))
(assert (x853 x2459))
(assert (x856 x760))
(assert (=> (> (+ 10000 1) x1422) (not (= (x2116 x77 1) x1422))))
(assert (=> (> (+ 10000 1) x754) (not (= x754 (x2116 x1990 1)))))
(assert (=> (= (x2116 x208 14) (x2116 0 x92)) (and (= x208 0) (= 14 x92))))
(assert (= x2737 (=> (and (= x946 (x31 352)) (= x1883 (> x946 0))) (and (=> (and (= x1600 (> x1672 0)) x1883 (or (and (= x2834 1) x1600 (> 4294967296 x2355)) (and (= x2834 x1672) (not x1600))) (= (x1877 384) x1624)) x1529) (=> (not x1883) x1795)))))
(assert (x853 x1480))
(assert (x853 x145))
(assert (not (= (x2116 x2462 14) (x2116 x2672 13))))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 x1990 1))))
(assert (= x2531 (=> (= (= 274184521717934524641157099916833587202 x551) x1473) (and (=> x1473 x1242) (=> (not x1473) x350)))))
(assert (not (= (x2116 x1838 14) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (= (=> (= x13 (= x934 0)) (and (=> x13 x1795) (=> (not x13) x1367))) x3167))
(assert (x856 x943))
(assert (= (=> (and (= (> x1361 0) x264) (= x1361 (x1683 x1521))) (and (=> x264 x3146) (=> (not x264) x1795))) x1133))
(assert (not (= 100000000000000 (x2116 0 x2810))))
(assert (=> (< (- x222 1) 10000) (not (= x222 (x2116 x1324 1)))))
(assert (= x2892 (and x1040 x1535)))
(assert (not (= (x2116 x754 12) (x2116 x2458 6))))
(assert (=> (> (+ 10000 1) x3040) (not (= (x2116 x2462 15) x3040))))
(assert (x853 x2413))
(assert (x853 x746))
(assert (x853 x3038))
(assert (= (x601 x1933) (ite (= x1933 x545) x682 (x1626 x1933))))
(assert (not (= 15 (x2116 x208 14))))
(assert (x853 x1342))
(assert (x853 x1055))
(assert (not (= (x2116 x1422 1) 6)))
(assert (= (ite (= x303 x2174) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1851 x2174)) (x817 x2174)))
(assert (=> (> (+ 10000 1) x422) (not (= (x2116 x754 12) x422))))
(assert (x853 x1269))
(assert (= (ite (= x1769 x435) x2057 (x1751 x1769)) (x1597 x1769)))
(assert (=> (= (x2116 x1990 1) (x2116 0 x92)) (and (= x92 1) (= x1990 0))))
(assert (= (x1677 x2756) (ite (= x2756 x2132) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2012 x2756))))
(assert (= (=> (and (= x1824 (x2201 x484)) (= (x1111 1461501637330902918203684832716283019655932542975 x1824) x1526) (= (= x1824 x1526) x2223)) (and (=> (and (= (x2858 (+ x2748 4)) x2793) (<= 0 x183) x2223 (= x251 (< 0 x1188)) (or (and (not x251) (= x1188 x2833)) (and (< x919 4294967296) x251 (= 1 x2833))) (>= 1461501637330902918203684832716283019655932542975 x183) (< x183 1461501637330902918203684832716283019655932542976)) x3007) (=> (not x2223) x1795))) x1857))
(assert (x856 x294))
(assert (not (= (x2116 x754 12) 1)))
(assert (not (= 24384142 (x2116 1 x2630))))
(assert (not (= (x2116 x1422 1) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (not (= (x2116 x2462 13) 826074471)))
(assert (=> (> (+ 10000 1) x305) (not (= x305 (x2116 x1990 1)))))
(assert (x853 x2927))
(assert (not (= (x2116 x2817 11) 33222205748031110454085609023467044101453017019085594488531032467161307152384)))
(assert (=> (< (- x1422 1) 10000) (not (= x1422 (x2116 x422 6)))))
(assert (x853 x1238))
(assert (not (= 274184521717934524641157099916833587206 (x2116 x2458 6))))
(assert (= x2125 (and x2866 x96)))
(assert (= x965 (and x2718 x274)))
(assert (not (= (x2116 x208 14) 4294967296)))
(assert (=> (< (- x422 1) 10000) (not (= x422 (x2116 x698 1)))))
(assert (= x2572 (and x2130 x1883)))
(assert (= (=> (and (= (x1936 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663)) x2671) (= (> 0 x2671) x12) (= x3170 (- (/ x1579 1000000000) (uninterp_frac x1579 1000000000))) (= x1579 (uninterp_mod (* x1663 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x12) x2616) (=> x12 x1795))) x1821))
(assert (x853 x336))
(assert (= (x3015 x487) (ite (and (not x538) x2563 x3099) (x2317 x487) (x820 x487))))
(assert (= (x93 x1933) (ite (= x2553 x1933) x2462 (x154 x1933))))
(assert (= x1150 (and (not x1862) x550)))
(assert (= (ite (= x2239 x752) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2830 x2239)) (x1492 x2239)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 x422 6))))
(assert (x853 x786))
(assert (=> (> (+ 10000 1) x305) (not (= x305 (x2116 0 x2810)))))
(assert (x434 x356 x2346 x2145 x2745))
(assert (= x2828 (=> (and (= x2442 (> x1197 x1366)) (= (x540 x103) x1197)) (and (=> (and (= x486 x2153) (not x2442) (= x384 x480) (= x3047 x2370)) x1143) (=> x2442 x1400)))))
(assert (x853 x593))
(assert (= x2930 (=> (and (= x2778 (uninterp_mod (* x3 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< 0 x2391) x2950)) (and (=> (not x2950) x1795) (=> (and (= x2518 (- (/ x2778 x2391) (uninterp_frac x2778 x2391))) (= x2343 x1398) (= (ite x2284 x2518 x2377) x1898) (= x2284 (> x2377 x2518)) x2950) x967)))))
(assert (not (= (x2116 x2462 11) (x2116 x1838 14))))
(assert (x853 x772))
(assert (= x2308 (=> (and (= (uninterp_mod (* x1098 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3038) (= x2148 352) (= x1475 352) (= (x31 352) x1098) (or x39 (and (= x3177 (uninterp_mod (* 32 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x39) (= x3111 (x2858 (+ x2007 384))))) (= (x2858 (+ x2701 x2928)) x789) (= (x2858 (+ x3038 32)) x2701) (= (= 0 x1098) x39)) x2203)))
(assert (x853 x890))
(assert (x853 x1911))
(assert (not (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x2116 x990 1))))
(assert (= (x2371 x772) (ite (= x2894 x772) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x680 x772))))
(assert (not (= (x2116 x990 1) 100000000000000)))
(assert (not (= 274184521717934524641157099916833587202 (x2116 0 x2810))))
(assert (not (= 12 (x2116 x1990 1))))
(assert (x853 x2286))
(assert (=> (< (- x77 1) 10000) (not (= x77 (x2116 x2462 13)))))
(assert (=> (< (- x104 1) 10000) (not (= (x2116 0 x2267) x104))))
(assert (x853 x182))
(assert (=> (= (x2116 0 x2267) (x2116 x2458 6)) (and (= 0 x2458) (= x2267 6))))
(assert (= (or x2430 x160) x214))
(assert (=> (> (+ 10000 1) x754) (not (= x754 (x2116 0 x3058)))))
(assert (=> (> (+ 10000 1) x3040) (not (= x3040 (x2116 0 x2267)))))
(assert (= x1127 (=> (and (= 1 x895) (= x1305 (= x3090 0)) (= (x1111 x895 x2508) x3090) (= (x583 x314) x576) (= 0 x2508)) (and (=> (not x1305) x1795) (=> (and (or (and (not x1725) (= x512 x3008)) (and (> 4294967296 x2665) x1725 (= 1 x512))) (<= 0 x183) (> 1461501637330902918203684832716283019655932542976 x183) x1305 (>= 1461501637330902918203684832716283019655932542975 x183) (= x1725 (> x3008 0)) (= (x2858 (+ x491 4)) x1962) (= (x1111 1461501637330902918203684832716283019655932542975 x2022) x639)) x1364)))))
(assert (= (x2064 x1142) (ite (= x1142 x3009) x1074 (x563 x1142))))
(assert (not (= 1029106033 (x2116 x1838 14))))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x1838 14))))
(assert (not (= 13 (x2116 x990 1))))
(assert (not (= (x2116 x2458 6) 1889567281)))
(assert (not (= (x2116 x422 6) (x2116 x1990 1))))
(assert (=> (= (x2116 0 x1916) (x2116 x1990 1)) (and (= x1916 1) (= 0 x1990))))
(assert (not (= 18446744073709551615 (x2116 x2817 11))))
(assert (x853 x1965))
(assert (= (ite (= x1615 x3035) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x3035)) (x797 x3035)))
(assert (=> (< (- x2817 1) 10000) (not (= x2817 (x2116 x422 6)))))
(assert (not (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2116 0 x3058))))
(assert (= (x2625 x2055) (ite (and (not x170) x1557) (x1846 x2055) (ite (and x3060 (not x1501)) (x1846 x2055) (x114 x2055)))))
(assert (not (= (x2116 x422 6) 404098525)))
(assert (x856 x2631))
(assert (=> (> (+ 10000 1) x104) (not (= x104 (x2116 x2817 11)))))
(assert (x853 x2510))
(assert (x853 x792))
(assert (= (ite (= x1498 x2343) x750 (x1415 x2343)) (x2176 x2343)))
(assert (= (ite (= x2055 x931) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x76 x2055)) (x1124 x2055)))
(assert (x856 x837))
(assert (= x2535 (=> (and (= x1231 x1562) (= x2459 x2061)) x1097)))
(assert (=> (> (+ 10000 1) x2964) (not (= (x2116 x422 6) x2964))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2116 x208 14))))
(assert (= (x2140 x2055) (ite (= x2850 x2055) x2683 (x68 x2055))))
(assert (= x350 true))
(assert (=> (< (- x104 1) 10000) (not (= x104 (x2116 x208 14)))))
(assert (not (= (x2116 x422 6) 1029106033)))
(assert (x853 x1475))
(assert (= (x2976 x2811) (ite (= x2811 x1906) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2911 x2811))))
(assert (x853 x1401))
(assert (not (= 11 (x2116 x208 14))))
(assert (= (ite (= x1913 x1769) x2785 (x714 x1769)) (x869 x1769)))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 x208 14))))
(assert (=> (> (+ 10000 1) x990) (not (= (x2116 x2187 1) x990))))
(assert (x434 x751 x136 x2080 x949))
(assert (= (and x2016 (not x13)) x3143))
(assert (=> (= (x2116 0 x3058) (x2116 x1990 1)) (and (= x3058 1) (= 0 x1990))))
(assert (=> (< (- x3040 1) 10000) (not (= x3040 (x2116 x1990 1)))))
(assert (x853 x1949))
(assert (=> (> (+ 10000 1) x990) (not (= x990 (x2116 0 x92)))))
(assert (= (x342 x450) (ite (= x888 x450) x1032 (x1451 x450))))
(assert (= x1286 (=> (and (= (= 0 x729) x2904) (= (x1111 x1712 x916) x2087) (= x2160 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729))) (= (ite (not x2904) 1 0) x1712) (= x53 (uninterp_mod (* x3122 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (> x576 x2160) 1 0) x916) (= x3124 (= x2087 0)) (= x729 (- (/ x53 1000000000000000000000000000000000000) (uninterp_frac x53 1000000000000000000000000000000000000)))) (and (=> (not x3124) x1795) (=> x3124 x2115)))))
(assert (x1370 x220 x1472))
(assert (= (ite (and x1883 x2130 x1600) (x763 x2174) (x598 x2174)) (x1686 x2174)))
(assert (not (= (x2116 x1838 14) 6)))
(assert (not (= 24384142 (x2116 x754 12))))
(assert (=> (= (x2116 x2187 1) (x2116 1 x2630)) (and (= 1 x2187) (= x2630 1))))
(assert (= (x1686 x2478) (ite (and x1600 x2130 x1883) (x763 x2478) (x598 x2478))))
(assert (x853 x2139))
(assert (x856 x2596))
(assert (x853 x749))
(assert (= (ite (and x324 x1119 x867) (x1271 x2055) (x383 x2055)) (x2911 x2055)))
(assert (x853 x959))
(assert (x853 x2456))
(assert (= (x173 x450) (ite (= x2283 x450) x1450 (x1665 x450))))
(assert (x856 x991))
(assert (= (ite (= x772 x1962) x639 (x1802 x772)) (x1113 x772)))
(assert (not (= (x2116 1 x2406) (x2116 0 x2204))))
(assert (not (= (x2116 x2817 11) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (not (= 11 (x2116 1 x2630))))
(assert (= (ite (= x2055 x2283) x1450 (x1665 x2055)) (x173 x2055)))
(assert (x856 x2575))
(assert (= (x2994 x2959) (ite (= x1565 x2959) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x85 x2959))))
(assert (= (ite (= x779 x2055) x2462 (x570 x2055)) (x2589 x2055)))
(assert (not (= (x2116 1 x2630) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (not (= (x2116 x2462 15) 274184521717934524641157099916833587233)))
(assert (not (= 12 (x2116 x2462 14))))
(assert (x1433 x155 x3096))
(assert (= x159 (=> (and (= (ite (> 1000000000000000000 x2688) 1 0) x1372) (= x199 (x1111 x600 x1372)) (= (ite (not x439) 1 0) x600) (= x2718 (= x199 0)) (= (= 0 x2832) x439) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)) x2688)) (and (=> (not x2718) x1795) (=> x2718 x2221)))))
(assert (not (= (x2116 x2462 11) 72464927124685711895252664195178772226123872012682517813167109100718830649344)))
(assert (=> (< (- x104 1) 10000) (not (= (x2116 x2964 14) x104))))
(assert (x853 x1859))
(assert (not (= 1000000000000000000000000000000000000 (x2116 0 x2810))))
(assert (x720 x2660 x2865))
(assert (= (=> (and (= (x2858 (+ x1117 x690)) x447) (= x2910 (x2858 (+ x1412 31))) (= (or (and (> 32 x1412) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1412))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1412)) x1791) (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2910) x1117)) (and (=> x1791 x1795) (=> (not x1791) x3161))) x617))
(assert (=> (= (x2116 x2672 13) (x2116 0 x92)) (and (= 13 x92) (= 0 x2672))))
(assert (=> (= (x2116 0 x92) (x2116 0 x3058)) (= x92 x3058)))
(assert (=> (< (- x2964 1) 10000) (not (= x2964 (x2116 0 x2204)))))
(assert (not (= (x2116 x2672 13) 72464927124685711895252664195178772226123872012682517813167109100718830649344)))
(assert (x853 x20))
(assert (x856 x582))
(assert (=> (> (+ 10000 1) x3040) (not (= (x2116 0 x1916) x3040))))
(assert (x853 x1638))
(assert (x853 x566))
(assert (not (= (x2116 x754 12) 157198259)))
(assert (not (= 11 (x2116 x2964 14))))
(assert (not (= (x2116 x2462 13) 117300739)))
(assert (=> (< (- x2672 1) 10000) (not (= (x2116 0 x2204) x2672))))
(assert (= (x1929 x2959) (ite (= x2959 x1639) x3087 (x2920 x2959))))
(assert (= x1792 (=> (and (= x1888 (= x2769 0)) (= x1042 (ite (> x2447 x304) 1 0)) (= x304 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2769))) (= (x1111 x1050 x1042) x1418) (= (ite (not x1888) 1 0) x1050) (= (= 0 x1418) x2011) (= x2769 (uninterp_mod (* x2807 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x2011) x1795) (=> x2011 x886)))))
(assert (not (= (x2116 x698 1) 33222205748031110454085609023467044101453017019085594488531032467161307152384)))
(assert (not (= (x2116 x1838 14) 549896565)))
(assert (x853 x2344))
(assert (x853 x3177))
(assert (not (= 14262166148461681479388312084279688412379623686150252715788501447688379695104 (x2116 x2458 6))))
(assert (not (= (x2116 x2462 11) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x77 1))))
(assert (x1433 x2068 x2315))
(assert (x853 x3064))
(assert (x853 x2017))
(assert (x853 x2491))
(assert (= x419 (=> (and (not (< x1392 826074471)) (= x1422 x750) (= (x1936 (- x1648 4)) x3000) (not (> 4 x1648)) (= x301 (or (> x3000 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x3000 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3000 32)))) (not (= x1392 826074471)) (< 0 x1294) (= x1947 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x1294 (x2275 274184521717934524641157099916833587206)) (= 36 x1648) (= 1889567281 x1392) (= x1647 x1648)) (and (=> x301 x1013) (=> (not x301) x2808)))))
(assert (= (=> (and (= (< x908 x1746) x734) (= x1746 (x3023 x560 160)) (= (x31 352) x908)) (and (=> (not x734) x808) (=> x734 x1795))) x1459))
(assert (= x1257 (=> (= (= x335 0) x2530) (and (=> x2530 x1795) (=> (not x2530) x1334)))))
(assert (x1433 x102 x3123))
(assert (x853 x1524))
(assert (x853 x805))
(assert (= (x2625 x2959) (ite (and x1557 (not x170)) (x1846 x2959) (ite (and (not x1501) x3060) (x1846 x2959) (x114 x2959)))))
(assert (x853 x2899))
(assert (=> (> (+ 10000 1) x3040) (not (= x3040 (x2116 x1422 1)))))
(assert (x853 x1536))
(assert (x853 x2708))
(assert (not (= (x2116 x698 1) 6)))
(assert (not (= (x2116 x2462 12) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (= (and x683 (not x2739)) x650))
(assert (not (= (x2116 x1990 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (= (or (and x2038 (not x34)) (and x1293 x945)) x1322))
(assert (= x921 (and x744 x344)))
(assert (not (= 1000000000000000000 (x2116 x2964 14))))
(assert (x853 x1685))
(assert (= x1840 true))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x2116 x2462 13)))))
(assert (=> (< (- x1422 1) 10000) (not (= x1422 (x2116 x1422 1)))))
(assert (not (= (x2116 x1838 14) (x2116 x422 6))))
(assert (= x1971 (and x2993 x65)))
(assert (= (ite (= x2239 x303) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1851 x2239)) (x817 x2239)))
(assert (x853 x2752))
(assert (=> (< (- x1422 1) 10000) (not (= x1422 (x2116 x2458 6)))))
(assert (x853 x1789))
(assert (x853 x294))
(assert (x856 x1279))
(assert (=> (< (- x77 1) 10000) (not (= (x2116 x2462 11) x77))))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 0 x2267))))
(assert (=> (> (+ 10000 1) x77) (not (= (x2116 0 x92) x77))))
(assert (= (and x1853 x784) x859))
(assert (x853 x1317))
(assert (x853 x2461))
(assert (x853 x184))
(assert (not (= (x2116 x990 1) 117300739)))
(assert (not (= (x2116 x1422 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (x2116 x1838 14) 274184521717934524641157099916833587233)))
(assert (not (= 117300739 (x2116 0 x2204))))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 x208 14) x990))))
(assert (=> (> (+ 10000 1) x1990) (not (= (x2116 1 x2630) x1990))))
(assert (=> (> (+ 10000 1) x2964) (not (= (x2116 x2458 6) x2964))))
(assert (x853 x1339))
(assert (=> (= (x2116 1 x2630) (x2116 1 x2406)) (= x2630 x2406)))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x1990 1))))
(assert (not (= 549896565 (x2116 0 x2204))))
(assert (not (= 274184521717934524641157099916833587202 (x2116 x698 1))))
(assert (= x1014 (and x2536 (not x725))))
(assert (not (= (x2116 x2672 13) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 1000000000000000000000000000000000000 (x2116 x305 1))))
(assert (= (ite (= x2386 x384) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x707 x2386)) (x1234 x2386)))
(assert (= (ite (= x1615 x1142) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x1142)) (x797 x1142)))
(assert (x853 x1432))
(assert (x853 x2910))
(assert (x434 x2276 x1554 x1931 x1499))
(assert (=> (> (+ 10000 1) x1422) (not (= (x2116 x754 12) x1422))))
(assert (not (= (x2116 x2462 12) 6)))
(assert (x853 x228))
(assert (x853 x991))
(assert (= (ite (and (not x1832) x2125) (x2911 x2386) (x2189 x2386)) (x830 x2386)))
(assert (= x1245 (=> (and (= (= 0 x2890) x37) (= x2348 (= x982 0)) (= (ite (not x2348) 1 0) x2631) (= x1258 (x592 x1729)) (= x2472 (ite (> 1000000000000000000 x1942) 1 0)) (= (x38 x2373) x982) (= x2890 (x1111 x2631 x2472)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982)) x1942)) (and (=> (not x37) x1795) (=> x37 x1071)))))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 x1324 1))))
(assert (x853 x1308))
(assert (= (and x871 x3030) x2016))
(assert (=> (= (x2116 x2187 1) (x2116 x1990 1)) (= x2187 x1990)))
(assert (not (= (x2116 x208 14) 274184521717934524641157099916833587206)))
(assert (not (= 4294967295 (x2116 x1838 14))))
(assert (not (= (x2116 0 x92) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (= (=> (and (= x653 (= x3160 0)) (= (x1152 x2748) x3160)) (and (=> x653 x1795) (=> (and (not x653) (= x1603 (< 0 x2562)) (or (and (= x3050 x2562) (not x1603)) (and (= x3050 1) (> 4294967296 x461) x1603)) (= (x2858 (+ 4 x1701)) x2967)) x1630))) x431))
(assert (x853 x2918))
(assert (x853 x1098))
(assert (= x2115 (=> (and (= x3062 (uninterp_mod (* x729 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< 0 x2225) x987)) (and (=> (not x987) x1795) (=> x987 x2229)))))
(assert (x1370 x2596 x2043))
(assert (= (ite (= x1615 x772) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x772)) (x797 x772)))
(assert (not (= (x2116 0 x92) 0)))
(assert (x853 x199))
(assert (= x1282 (and (not x2146) x98)))
(assert (= (ite (= x1142 x789) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x1142)) (x598 x1142)))
(assert (= (ite (and x2885 x2661 x8) (x2361 x772) (x1153 x772)) (x1846 x772)))
(assert (x853 x1952))
(assert (not (= 826074471 (x2116 0 x2204))))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x2462 15))))
(assert (=> (= (x2116 0 x2267) (x2116 x1422 1)) (and (= 0 x1422) (= x2267 1))))
(assert (not (= (x2116 x1838 14) (x2116 x698 1))))
(assert (= (=> (and (= (x2858 (+ 36 x1727)) x1639) (= x3087 (x1936 (- x2883 x1366))) (= (x2275 x222) x1225) (= x1244 (x2858 (+ x1727 4))) (= x1715 (= x1225 0)) (= (x1111 1461501637330902918203684832716283019655932542975 x2729) x2814)) (and (=> x1715 x1795) (=> (and (or (and (= x117 x2325) (= x1960 (= (x740 x222) x2615)) x2846 x1960 (= x1568 x595) (> 4294967296 x374) x14 (= x2615 (x2707 x222)) (= (>= (x740 274184521717934524641157099916833587233) x1193) x14) (= (x2707 274184521717934524641157099916833587233) x1193)) (and (not x2846) (= x486 x2325) (= x2370 x1568))) (not x1715) (= (< 0 x792) x2846)) x608))) x3109))
(assert (x434 x917 x1017 x716 x704))
(assert (= x2782 (and x2330 (not x301))))
(assert (not (= (x2116 x2462 13) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (ite (= x2132 x450) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2012 x450)) (x1677 x450)))
(assert (= (=> (and (= x1613 (> x1606 0)) (= (x781 x2928) x1606)) (and (=> x1613 x1487) (=> (not x1613) x1795))) x1818))
(assert (= (ite (= x384 x2239) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x707 x2239)) (x1234 x2239)))
(assert (x853 x553))
(assert (= x1641 (or (and x2192 x2166) (and (not x1235) x1629))))
(assert (x720 x1570 x647))
(assert (= (or (and x812 x1971) (and x964 (not x393))) x1268))
(assert (x853 x2435))
(assert (not (= 117300739 (x2116 x698 1))))
(assert (= (ite (= x2894 x1933) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x680 x1933)) (x2371 x1933)))
(assert (x853 x1672))
(assert (x853 x2545))
(assert (x853 x2596))
(assert (not (= 0 (x2116 x2964 14))))
(assert (x853 x826))
(assert (= x1125 (or (and x588 (not x1397)) (and x1617 x3089))))
(assert (=> (= (x2116 x2817 11) (x2116 1 x2406)) (and (= x2406 11) (= 1 x2817))))
(assert (not (= (x2116 x1324 1) 826074471)))
(assert (= (- (/ x2734 1461501637330902918203684832716283019655932542976) (uninterp_frac x2734 1461501637330902918203684832716283019655932542976)) (x3023 x2734 160)))
(assert (x856 x466))
(assert (x853 x759))
(assert (x853 x1355))
(assert (= x432 (=> (and (= (x1111 18446744073709551615 x764) x2667) (= (x2858 (+ 64 x2440)) x2816) (= x1707 (ite (< x800 x2667) 1 0)) (= x941 (x1111 x1279 x1707)) (= (ite (not x528) 1 0) x1279) (= x800 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1858))) (= x528 (= x1858 0)) (= (= x941 0) x2515) (= x764 (x2378 x2816))) (and (=> x2515 x724) (=> (not x2515) x1795)))))
(assert (= (=> (= x2167 (= x3026 0)) (and (=> x2167 x1795) (=> (not x2167) x2879))) x728))
(assert (not (= (x2116 x1838 14) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (= (ite (= x3009 x772) x1074 (x563 x772)) (x2064 x772)))
(assert (x853 x1385))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x1422 1))))
(assert (not (= 18446744073709551615 (x2116 0 x92))))
(assert (x856 x1744))
(assert (x853 x665))
(assert (not (= 18446744073709551615 (x2116 x422 6))))
(assert (= (ite (= x2967 x2174) x2462 (x918 x2174)) (x2759 x2174)))
(assert (= (and (not x2167) x956) x894))
(assert (not (= 1000000000 (x2116 x754 12))))
(assert (x853 x2228))
(assert (= (=> (and (= (x2858 (+ x1799 64)) x1729) (= (x2858 (+ 64 x1876)) x2902) (<= x3064 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2116 x2462 15) x1396) (= x747 (< 0 x3064)) (= (x2858 (+ x1945 64)) x1429) (= x1945 (x2858 (+ x1729 64))) (<= 0 x3064) (= x1043 (x2858 (+ 224 x1799))) (= (x2405 x1396) x3064) (= x2373 (x2858 (+ 32 x1799))) (= (x2858 (+ x2373 64)) x1876)) (and (=> (and x747 (= x3158 x95) (= x2485 15) (= x2336 x1043) (= x2462 x1229) (= (x2858 (+ 448 x1799)) x3158)) x2033) (=> (not x747) x549))) x1006))
(assert (= (x1903 x1933) (ite (and x141 (not x2882)) (x2625 x1933) (ite (and (not x2442) x921) (x707 x1933) (x2265 x1933)))))
(assert (not (= (x2116 0 x2267) 1461501637330902918203684832716283019655932542976)))
(assert (= (=> (= (= 0 x242) x557) (and (=> x557 x1795) (=> (not x557) x1552))) x3120))
(assert (=> (> (+ 10000 1) x1422) (not (= (x2116 x2672 13) x1422))))
(assert (not (= 274184521717934524641157099916833587202 (x2116 x208 14))))
(assert (not x2939))
(assert (x853 x533))
(assert (x853 x220))
(assert (=> (> (+ 10000 1) x1324) (not (= (x2116 0 x2810) x1324))))
(assert (x853 x2327))
(assert (= (x523 x2959) (ite x1988 (ite (and (not x278) x3085) (x2626 x2959) (x1413 x2959)) (x302 x2959))))
(assert (= (x2911 x3035) (ite (and x1119 x867 x324) (x1271 x3035) (x383 x3035))))
(assert (x856 x3043))
(assert (= (and x1344 x2590) x2282))
(assert (x856 x246))
(assert (= x10 (=> (and (= x929 x2571) (= 0 x573) (= x3163 x2714) (= x850 x2023) (= x1183 x2560) (= x2824 x3169)) x317)))
(assert (= x2897 (or (and x109 x1101) (and (not x2094) x1184))))
(assert (= (ite (= x772 x2567) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1270 x772)) (x1755 x772)))
(assert (x853 x2009))
(assert (x853 x2230))
(assert (= (x342 x772) (ite (= x772 x888) x1032 (x1451 x772))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x208 14))))
(assert (not (= (x2116 0 x1916) 157198259)))
(assert (=> (> (+ 10000 1) x1324) (not (= (x2116 x1422 1) x1324))))
(assert (= (=> (and (= x2672 (x1111 1461501637330902918203684832716283019655932542975 x2729)) (= (< 18446744073709551615 x58) x2578) (= x58 (x3023 x560 160)) (= (x2116 x2672 13) x2406) (= x849 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x753 (x2116 x2817 11)) (>= 1461501637330902918203684832716283019655932542975 x2320) (<= x560 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x560 0) (= x56 1) (= x560 (x107 x329)) (= x2320 (x636 x753)) (> 1461501637330902918203684832716283019655932542976 x2320) (= (x2116 0 x2406) x329) (>= x2320 0) (= x2817 (x1111 1461501637330902918203684832716283019655932542975 x2729))) (and (=> x2578 x1795) (=> (and (or x128 (and (not x128) (= (uninterp_mod (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x665))) (= x128 (= 0 x58)) (not x2578) (= (x2858 (+ x2421 384)) x2928) (= x2421 (uninterp_mod (* 32 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 352 x2871) (= (x2858 (+ 32 x2421)) x2007)) x1459))) x1885))
(assert (= (or (and (not x2375) x2954) (and x2720 (not x1528))) x978))
(assert (x853 x435))
(assert (not (= (x2116 x2964 14) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (ite (and x324 x867 x1119) (x1271 x2959) (x383 x2959)) (x2911 x2959)))
(assert (= x112 (=> (and (= (x2858 (+ 31 x2355)) x299) (= x1615 (x2858 (+ x624 x789))) (= (or (> x2355 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2355 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2355)))) x2415) (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x299) x624)) (and (=> (not x2415) x2128) (=> x2415 x1795)))))
(assert (x853 x2944))
(assert (not (= (x2116 x754 12) 18446744073709551616)))
(assert (=> (> (+ 10000 1) x2458) (not (= x2458 (x2116 0 x3058)))))
(assert (=> (= (x2116 0 x3058) (x2116 0 x2204)) (= x2204 x3058)))
(assert (x853 x305))
(assert (= (ite (and x2130 x1883 x1600) (x763 x2239) (x598 x2239)) (x1686 x2239)))
(assert (=> (> (+ 10000 1) x2187) (not (= (x2116 0 x2204) x2187))))
(assert (= (x1162 x2959) (ite (and x3121 x723 x1540) (x3105 x2959) (x1915 x2959))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 x77 1))))
(assert (= (=> (and (= x732 x1763) (= 0 x2684)) x423) x424))
(assert (=> (> (+ 10000 1) x1990) (not (= x1990 (x2116 x2458 6)))))
(assert (x853 x766))
(assert (not (= (x2116 x1324 1) 1461501637330902918203684832716283019655932542976)))
(assert (x853 x1244))
(assert (=> (< (- x2672 1) 10000) (not (= (x2116 x2458 6) x2672))))
(assert (= (or (and x2741 x2034) (and x135 (not x2774))) x111))
(assert (=> (< (- x305 1) 10000) (not (= x305 (x2116 x2964 14)))))
(assert (x853 x2964))
(assert (= (x383 x2811) (ite (= x2811 x2723) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x2811))))
(assert (x434 x22 x1030 x2384 x787))
(assert (x856 x3151))
(assert (=> (> (+ 10000 1) x422) (not (= (x2116 x422 6) x422))))
(assert (x853 x2001))
(assert (not (= (x2116 1 x2630) (x2116 0 x2810))))
(assert (= x1666 (=> (and (= x959 x643) (= (x31 352) x1726) (= x2208 (< 1 x1726)) (not x2208) (= x1202 x3149)) x1148)))
(assert (=> (= (x2116 0 x3058) (x2116 x2187 1)) (and (= 1 x3058) (= x2187 0))))
(assert (x853 x2824))
(assert (= (ite (= x2055 x2772) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1174 x2055)) (x2423 x2055)))
(assert (x853 x2673))
(assert (x853 x3151))
(assert (x853 x2056))
(assert (x853 x1368))
(assert (x853 x615))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2116 x1324 1))))
(assert (not (= 11548673047482463375710962565434449992668293034397312241487562681223695302656 (x2116 x1422 1))))
(assert (= x3150 (and x1607 x1551)))
(assert (not (= 1029106033 (x2116 0 x3058))))
(assert (not (= 274184521717934524641157099916833587233 (x2116 x2964 14))))
(assert (= (x1380 x2710) (ite (and x1939 x2694 (not x3083)) (x712 x2710) (x2584 x2710))))
(assert (x853 x1827))
(assert (=> (< (- x3040 1) 10000) (not (= (x2116 x2964 14) x3040))))
(assert (= x2329 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1640) (= x3165 (x3023 x1640 160)) (= x2964 (x1111 1461501637330902918203684832716283019655932542975 x2729)) (= x1497 (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3165)) (<= 0 x1640) (= (x2783 x1766) x1640) (= x1766 (x2116 0 x92)) (= (x2116 x2964 14) x92)) (and (=> x1497 x1795) (=> (not x1497) x2470)))))
(assert (x853 x1250))
(assert (= x1510 (or (and x488 x198) (and x113 (not x584)))))
(assert (not (= (x2116 0 x1916) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 0 x3058))))
(assert (x853 x1817))
(assert (= x659 (=> (and (= x520 (x31 352)) (= x1793 (> x520 0))) (and (=> x1793 x1064) (=> (not x1793) x1795)))))
(assert (= (x342 x2239) (ite (= x2239 x888) x1032 (x1451 x2239))))
(assert (not (= (x2116 x2964 14) (x2116 x1990 1))))
(assert (= (ite (and x1641 (not x3094)) (x2969 x55) (ite (and x1389 (not x1168) x2868) (x2915 x55) (x2969 x55))) (x691 x55)))
(assert (= (x129 x2055) (ite (= x1740 x2055) x2719 (x1944 x2055))))
(assert (=> (< (- x77 1) 10000) (not (= (x2116 0 x1916) x77))))
(assert (=> (= (x2116 x2672 13) (x2116 0 x2810)) (and (= x2672 0) (= x2810 13))))
(assert (not (= (x2116 x2817 11) (x2116 x1324 1))))
(assert (not (= (x2116 x1422 1) 1889567281)))
(assert (= (=> (and (= x2381 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x930) (and (> 32 x930) (= true (<= x930 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x2323 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3021)) (= (x2858 (+ x2962 x2323)) x384) (= (x2858 (+ 31 x930)) x3021)) (and (=> (not x2381) x2298) (=> x2381 x1795))) x1966))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 0 x2267))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 x990 1))))
(assert (x853 x882))
(assert (=> (= (x2116 x422 6) (x2116 0 x3058)) (and (= 6 x3058) (= 0 x422))))
(assert (=> (= (x2116 x990 1) (x2116 x1422 1)) (= x1422 x990)))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 x2964 14))))
(assert (= (and x1823 x2388) x2868))
(assert (not (= (x2116 x422 6) 13)))
(assert (not (= (x2116 0 x2204) 1100000000000000000)))
(assert (not (= (x2116 1 x2630) 18446744073709551615)))
(assert (x853 x2355))
(assert (= x2103 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2734) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x481) x1204) (= (x3023 x2734 160) x481) (= (x2783 x405) x2734) (= x405 (x2116 0 x2810)) (= (x2116 x2462 14) x2810) (<= 0 x2734)) (and (=> (not x1204) x1583) (=> x1204 x1795)))))
(assert (not (= 13 (x2116 x2462 12))))
(assert (x853 x2555))
(assert (x856 x559))
(assert (x853 x1225))
(assert (not (= (x2116 x2817 11) (x2116 x1422 1))))
(assert (not (= (x2116 x990 1) 826074471)))
(assert (=> (> (+ 10000 1) x2672) (not (= (x2116 x1324 1) x2672))))
(assert (x434 x67 x2213 x1572 x2410))
(assert (x853 x995))
(assert (x856 x1911))
(assert (= x950 (and x799 x2815)))
(assert (not (= 1029106033 (x2116 0 x2810))))
(assert (= (and x1815 (not x2415)) x1853))
(assert (not (= (x2116 0 x2267) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x853 x575))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 x2462 15))))
(assert (=> (> (+ 10000 1) x2187) (not (= x2187 (x2116 x990 1)))))
(assert (not (= 1000000000000000000 (x2116 x208 14))))
(assert (x853 x204))
(assert (=> (= (x2116 0 x92) (x2116 x754 12)) (and (= x92 12) (= x754 0))))
(assert (=> (< (- x754 1) 10000) (not (= x754 (x2116 x2462 15)))))
(assert (= (and x2464 (not x1182)) x2450))
(assert (x853 x2472))
(assert (not (= 100000000000000 (x2116 1 x2406))))
(assert (not (= (x2116 1 x2406) 826074471)))
(assert (not (= (x2116 x2462 11) 1000000000)))
(assert (=> (< (- x1324 1) 10000) (not (= (x2116 x208 14) x1324))))
(assert (= x1376 (=> (and (= x1122 (x2116 1 x3058)) (>= x1819 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1819) (= (x2309 x1043) x2314) (= (< 1 x2314) x488) (= x1819 (x2783 x1122))) (and (=> (and (= x2095 (> x2403 2)) x488 (= x372 (x2858 (+ 288 x1799))) (= x1311 (x1111 1461501637330902918203684832716283019655932542975 x1819)) (not x2095) (= x1408 1)) x152) (=> (not x488) x1795)))))
(assert (= (x1113 x2756) (ite (= x1962 x2756) x639 (x1802 x2756))))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 x1838 14) x990))))
(assert (x853 x1047))
(assert (x853 x1169))
(assert (= (x707 x2174) (ite (and (not x3094) x1641) (x2625 x2174) (ite (and x1389 x2868 (not x1168)) (x1797 x2174) (x2045 x2174)))))
(assert (=> (= (x2116 x2964 14) (x2116 0 x3058)) (and (= x3058 14) (= 0 x2964))))
(assert (= (and x2716 x986) x3072))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x2462 12))))
(assert (= x744 (or (and (not x1783) x281) (and (not x3094) x1641))))
(assert (= x2324 (and x709 (not x1628))))
(assert (x853 x1303))
(assert (not (= 157198259 (x2116 x990 1))))
(assert (not (= (x2116 0 x3058) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (not (= 12 (x2116 x1838 14))))
(assert (x853 x1742))
(assert (not (= (x2116 x2964 14) 1889567281)))
(assert (not (= (x2116 x2458 6) 826074471)))
(assert (= x1574 (and x1909 (not x832))))
(assert (not (= 274184521717934524641157099916833587233 (x2116 x77 1))))
(assert (x853 x1498))
(assert (= (x302 x1933) (ite (and x3017 (not x2142)) (x1162 x1933) (x504 x1933))))
(assert (not (= (x2116 0 x1916) 274184521717934524641157099916833587202)))
(assert (x720 x656 x2658))
(assert (x434 x2624 x16 x1804 x223))
(assert (x853 x1494))
(assert (x434 x661 x1107 x171 x2505))
(assert (not (= 1000000000000000000 (x2116 1 x2406))))
(assert (x853 x479))
(assert (=> (< (- x754 1) 10000) (not (= x754 (x2116 x208 14)))))
(assert (=> (= (x2116 x1324 1) (x2116 0 x2267)) (and (= 0 x1324) (= x2267 1))))
(assert (not (= (x2116 x2672 13) 1000000000)))
(assert (=> (= (x2116 0 x2204) (x2116 x990 1)) (and (= x990 0) (= 1 x2204))))
(assert (=> (> (+ 10000 1) x208) (not (= (x2116 x990 1) x208))))
(assert (= x101 (=> (and (= (= x1561 x777) x1652) (= x777 (x2911 x2723)) (= x1561 (x1111 18446744073709551615 x777))) (and (=> (not x1652) x1795) (=> x1652 x644)))))
(assert (not (= (x2116 x990 1) 1000000000)))
(assert (x856 x2053))
(assert (not (= (x2116 x2462 15) (x2116 x2458 6))))
(assert (= x1592 (or x2897 (and x2094 x1184))))
(assert (not (= (x2116 0 x1916) 1461501637330902918203684832716283019655932542975)))
(assert (not (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x2116 x2672 13))))
(assert (not (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2116 x2817 11))))
(assert (x853 x1763))
(assert (x856 x2660))
(assert (=> (> (+ 10000 1) x1422) (not (= (x2116 x1324 1) x1422))))
(assert (=> (< (- x2672 1) 10000) (not (= x2672 (x2116 x990 1)))))
(assert (not (= (x2116 0 x92) 1100000000000000000)))
(assert (x853 x2363))
(assert (x853 x1241))
(assert (x853 x2391))
(assert (=> (= (x2116 0 x2204) (x2116 x1838 14)) (and (= 14 x2204) (= 0 x1838))))
(assert (x853 x828))
(assert (=> (> (+ 10000 1) x222) (not (= (x2116 0 x2810) x222))))
(assert (=> (> (+ 10000 1) x1990) (not (= (x2116 x2462 13) x1990))))
(assert (x853 x2354))
(assert (= (ite (= x2283 x2756) x1450 (x1665 x2756)) (x173 x2756)))
(assert (= (x1326 x2386) (ite (= x2386 x1825) x1391 (x1301 x2386))))
(assert (=> (< (- x2672 1) 10000) (not (= x2672 (x2116 0 x92)))))
(assert (not (= 4294967295 (x2116 x2817 11))))
(assert (= (x2024 x360) 0))
(assert (not (= 274184521717934524641157099916833587202 (x2116 x2462 11))))
(assert (not (= (x2116 x754 12) 1000000000000000000000000000000000000)))
(assert (x856 x3135))
(assert (x853 x2302))
(assert (not (= 11 (x2116 x2187 1))))
(assert (=> (> (+ 10000 1) x104) (not (= (x2116 x754 12) x104))))
(assert (not (= (x2116 x754 12) 117300739)))
(assert (= (and x2195 x541) x2330))
(assert (x856 x1742))
(assert (not (= (x2116 x990 1) 274184521717934524641157099916833587233)))
(assert (not (= (x2116 x2462 12) 18446744073709551615)))
(assert (not (= (x2116 x2964 14) (x2116 x2462 15))))
(assert (=> (= (x2116 x990 1) (x2116 x77 1)) (= x77 x990)))
(assert (not (= 1000000000000000000 (x2116 x2462 13))))
(assert (not (= (x2116 x754 12) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x2116 x2462 12) 12)))
(assert (not (= (x2116 0 x92) 117300739)))
(assert (= (x2976 x2055) (ite (= x1906 x2055) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2911 x2055))))
(assert (x853 x1847))
(assert (x853 x2978))
(assert (= (ite (= x2469 x2959) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2626 x2959)) (x2519 x2959)))
(assert (x853 x347))
(assert (=> (< (- x1990 1) 10000) (not (= x1990 (x2116 0 x2204)))))
(assert (=> (= (x2116 x698 1) (x2116 0 x2204)) (and (= x2204 1) (= x698 0))))
(assert (x853 x1891))
(assert (not (= 1937038442 (x2116 x2458 6))))
(assert (=> (< (- x3040 1) 10000) (not (= (x2116 x305 1) x3040))))
(assert (not (= (x2116 x2672 13) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (x853 x2675))
(assert (= (ite (= x2055 x893) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2651 x2055)) (x1915 x2055)))
(assert (x853 x2343))
(assert (x853 x2269))
(assert (not (= 1029106033 (x2116 x698 1))))
(assert (not (= (x2116 x1422 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x2116 x2462 13) 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x853 x484))
(assert (=> (< (- x2964 1) 10000) (not (= (x2116 x2462 12) x2964))))
(assert (x853 x1450))
(assert (not (= 1937038442 (x2116 x2462 12))))
(assert (not (= 18446744073709551616 (x2116 0 x2810))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 x2817 11))))
(assert (=> (< (- x2458 1) 10000) (not (= x2458 (x2116 x1422 1)))))
(assert (= (and x1893 (not x1255)) x863))
(assert (x853 x1858))
(assert (=> (> (+ 10000 1) x754) (not (= (x2116 x77 1) x754))))
(assert (=> (< (- x104 1) 10000) (not (= x104 (x2116 x422 6)))))
(assert (not (= 1937038442 (x2116 x2462 15))))
(assert (= (ite (and (not x2882) x141) (x2625 x2174) (ite (and (not x2442) x921) (x707 x2174) (x2265 x2174))) (x1903 x2174)))
(assert (=> (> (+ 10000 1) x77) (not (= x77 (x2116 0 x2810)))))
(assert (= (=> (and (= (x2911 x3035) x1744) (= x1469 (= x1432 x1744)) (= x3035 (x2858 (+ x2723 64))) (= (x1111 18446744073709551615 x1744) x1432)) (and (=> x1469 x2576) (=> (not x1469) x1795))) x640))
(assert (x856 x2569))
(assert (x853 x3040))
(assert (= (and x562 (not x367)) x161))
(assert (not (= (x2116 x1422 1) (x2116 x2462 15))))
(assert (x853 x2929))
(assert (not (= (x2116 1 x2630) (x2116 0 x92))))
(assert (x853 x2631))
(assert (not (= (x2116 x2462 13) 66649967879025377632792054650135220247173487182192293797349964221703864188928)))
(assert (= (=> (and (= x1964 x846) (= x2139 x1016)) x1249) x2297))
(assert (not (= 274184521717934524641157099916833587206 (x2116 x2462 15))))
(assert (not (= (x2116 0 x1916) (x2116 1 x2406))))
(assert (not (= (x2116 0 x1916) 4294967295)))
(assert (not (= (x2116 x2462 14) 18446744073709551615)))
(assert (= (=> (and (= x1982 (x1289 x72)) (= x1644 (x1683 x1521)) (= x2202 (> x1644 0))) (and (=> x2202 x89) (=> (not x2202) x1795))) x1479))
(assert (not (= 157198259 (x2116 x1838 14))))
(assert (not (= (x2116 x2672 13) 157198259)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 1 x2406))))
(assert (= x1812 (or (and (not x2442) x921) (and x539 (not x138)))))
(assert (=> (> (+ 10000 1) x754) (not (= x754 (x2116 0 x2204)))))
(assert (= (x1240 x1571) (ite (= x1571 x2473) x766 (x1567 x1571))))
(assert (=> (< (- x104 1) 10000) (not (= (x2116 x990 1) x104))))
(assert (x853 x1449))
(assert (= (x797 x2055) (ite (= x2055 x1615) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x2055))))
(assert (x853 x2076))
(assert (= (ite (= x1498 x2055) x750 (x1415 x2055)) (x2176 x2055)))
(assert (not (= (x2116 x2964 14) (x2116 x754 12))))
(assert (= (x2976 x2756) (ite (= x1906 x2756) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2911 x2756))))
(assert (not (= (x2116 0 x2810) 33222205748031110454085609023467044101453017019085594488531032467161307152384)))
(assert (x853 x1129))
(assert (=> (< (- x222 1) 10000) (not (= (x2116 x2462 15) x222))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 x698 1))))
(assert (x853 x1051))
(assert (x853 x95))
(assert (not (= 1100000000000000000 (x2116 x2187 1))))
(assert (not (= (x2116 0 x3058) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x1752 x2462))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x990 1))))
(assert (x853 x1956))
(assert (x434 x1789 x1424 x2527 x2289))
(assert (x853 x1727))
(assert (= (x1755 x2756) (ite (= x2756 x2567) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1270 x2756))))
(assert (=> (> (+ 10000 1) x1838) (not (= (x2116 x2462 15) x1838))))
(assert (=> (> (+ 10000 1) x1838) (not (= (x2116 x2817 11) x1838))))
(assert (x853 x838))
(assert (= (ite (and (not x3094) x1641) (x2625 x1933) (ite (and x1389 x2868 (not x1168)) (x1797 x1933) (x2045 x1933))) (x707 x1933)))
(assert (x853 x1735))
(assert (= (and x1780 x2520) x141))
(assert (not (= (x2116 x2462 15) 1000000000000000000000000000000000000)))
(assert (x1370 x474 x958))
(assert (x853 x513))
(assert (x853 x2732))
(assert (=> (< (- x2817 1) 10000) (not (= x2817 (x2116 0 x2204)))))
(assert (=> (> (+ 10000 1) x2462) (not (= (x2116 1 x2630) x2462))))
(assert (= (x2064 x2174) (ite (= x2174 x3009) x1074 (x563 x2174))))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 x2672 13) x990))))
(assert (x853 x3053))
(assert (x853 x1144))
(assert (x853 x1836))
(assert (= (=> (and (= x2697 (x2858 (+ x2670 31))) (= x2545 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2697)) (= x3079 (or (> x2670 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x2670) (= (<= x2670 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x2858 (+ x2545 x2695)) x411)) (and (=> x3079 x1795) (=> (not x3079) x215))) x3152))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 x1422 1))))
(assert (not (= 14 (x2116 x2187 1))))
(assert (not (= (x2116 x754 12) (x2116 x990 1))))
(assert (=> (= (x2116 x1990 1) (x2116 0 x2267)) (and (= 1 x2267) (= x1990 0))))
(assert (not (= 0 (x2116 x422 6))))
(assert (not (= (x2116 x422 6) 826074471)))
(assert (= (=> (and (= x377 (x2858 (+ x2159 31))) (= x1923 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x377)) (= (x2858 (+ x1923 x752)) x855) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2159) true) (> 32 x2159)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2159)) x565)) (and (=> (not x565) x2548) (=> x565 x1795))) x2987))
(assert (not (= (x2116 x2462 15) (x2116 x2817 11))))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 1 x2406))))
(assert (= x904 (and (not x2578) x2674)))
(assert (not (= (x2116 x1324 1) (x2116 x208 14))))
(assert (not (= (x2116 x2462 11) 1937038442)))
(assert (x853 x1933))
(assert (x720 x126 x2291))
(assert (= x525 (and (not x937) x859)))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 0 x2267))))
(assert (x853 x1094))
(assert (not (= 1000000000 (x2116 x698 1))))
(assert (x856 x222))
(assert (x853 x790))
(assert (= (x1102 x450) (ite (= x1427 x450) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x1276 x450))))
(assert (=> (> (+ 10000 1) x1990) (not (= (x2116 0 x3058) x1990))))
(assert (x853 x2051))
(assert (=> (< (- x2462 1) 10000) (not (= (x2116 x2187 1) x2462))))
(assert (=> (= (x2116 x1422 1) (x2116 x2187 1)) (= x2187 x1422)))
(assert (=> (< (- x2458 1) 10000) (not (= (x2116 x2458 6) x2458))))
(assert (=> (> (+ 10000 1) x1324) (not (= x1324 (x2116 x754 12)))))
(assert (=> (= (x2116 x77 1) (x2116 x2187 1)) (= x2187 x77)))
(assert (not (= (x2116 x305 1) 33222205748031110454085609023467044101453017019085594488531032467161307152384)))
(assert (not (= 14262166148461681479388312084279688412379623686150252715788501447688379695104 (x2116 x698 1))))
(assert (x853 x576))
(assert (x856 x1819))
(assert (=> (> (+ 10000 1) x77) (not (= x77 (x2116 x2458 6)))))
(assert (x853 x2008))
(assert (not (= (x2116 x698 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x853 x292))
(assert (x853 x2110))
(assert (not (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2116 x698 1))))
(assert (= x3054 (and x2848 x2170)))
(assert (= x2616 (=> (and (= x2918 x1663) (= (x1936 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3170)) x2743) (= (< x2743 0) x2375)) (and (=> (and (not x1024) (= x3170 x1697) (= (> x162 1) x1024) (= x2675 x1697) (= x2918 x1549) (not x2375) (= x3131 x574) (= x162 (x406 x2431))) x2646) (=> x2375 x1795)))))
(assert (=> (= (x2116 x1324 1) (x2116 0 x2204)) (and (= x2204 1) (= 0 x1324))))
(assert (x853 x1074))
(assert (= (and x588 x1397) x3089))
(assert (not (= (x2116 0 x2810) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (not (= (x2116 0 x3058) 1889567281)))
(assert (x853 x3025))
(assert (not (= (x2116 x2462 13) (x2116 x77 1))))
(assert (not (= 1000000000000000000000000000000000000 (x2116 x990 1))))
(assert (x853 x2328))
(assert (x853 x1860))
(assert (not (= 24384142 (x2116 0 x2204))))
(assert (x853 x2503))
(assert (= (=> (= (= 0 x2268) x6) (and (=> x6 x1795) (=> (not x6) x2338))) x975))
(assert (not (= (x2116 x2462 14) 15)))
(assert (not (= (x2116 x1422 1) 72464927124685711895252664195178772226123872012682517813167109100718830649344)))
(assert (= (x2176 x1933) (ite (= x1933 x1498) x750 (x1415 x1933))))
(assert (=> (> (+ 10000 1) x2187) (not (= (x2116 x2672 13) x2187))))
(assert (=> (< (- x104 1) 10000) (not (= x104 (x2116 0 x1916)))))
(assert (x853 x1472))
(assert (not (= (x2116 x77 1) 4294967295)))
(assert (x856 x2542))
(assert (= x1230 (or (and x1790 (not x2305)) (and x3060 (not x1501)))))
(assert (not (= (x2116 x754 12) (x2116 x1838 14))))
(assert (x853 x1233))
(assert (= x3048 (and x660 x1484)))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x1990 1))))
(assert (x853 x1729))
(assert (= (ite (= x1933 x2850) x2683 (x68 x1933)) (x2140 x1933)))
(assert (x856 x1236))
(assert (not (= (x2116 x2462 14) (x2116 x1422 1))))
(assert (=> (> (+ 10000 1) x104) (not (= (x2116 x698 1) x104))))
(assert (x853 x891))
(assert (=> (> (+ 10000 1) x77) (not (= x77 (x2116 x2187 1)))))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 x305 1))))
(assert (x853 x2742))
(assert (x853 x1963))
(assert (not (= (x2116 x2458 6) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x2972 (or (and x3017 (not x2142)) (and x2088 x1724))))
(assert (not (= (x2116 0 x2810) 72464927124685711895252664195178772226123872012682517813167109100718830649344)))
(assert (not (= 404098525 (x2116 x698 1))))
(assert (=> (= (x2116 x990 1) (x2116 x698 1)) (= x698 x990)))
(assert (x853 x485))
(assert (= (ite (and x2125 (not x1832)) (x2911 x2959) (x2189 x2959)) (x830 x2959)))
(assert (not (= (x2116 x1990 1) 1029106033)))
(assert (not (= (x2116 x2817 11) 100000000000000)))
(assert (not (= (x2116 0 x92) 274184521717934524641157099916833587233)))
(assert (=> (> (+ 10000 1) x1422) (not (= (x2116 x698 1) x1422))))
(assert (x853 x1771))
(assert (not (= (x2116 x2458 6) 12)))
(assert (not (= 13 (x2116 x1838 14))))
(assert (= x1674 (=> (and (= x2302 (x28 x2627)) (= x2388 (< 0 x2302))) (and (=> (not x2388) x1795) (=> x2388 x1021)))))
(assert (x1752 x2458))
(assert (=> (< (- x2462 1) 10000) (not (= x2462 (x2116 0 x3058)))))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 0 x3058))))
(assert (x720 x1963 x1012))
(assert (not (= 14262166148461681479388312084279688412379623686150252715788501447688379695104 (x2116 x208 14))))
(assert (=> (= (x2116 0 x92) (x2116 x305 1)) (and (= x92 1) (= 0 x305))))
(assert (not (= 1000000000 (x2116 1 x2406))))
(assert (x853 x487))
(assert (=> (< (- x2187 1) 10000) (not (= (x2116 x754 12) x2187))))
(assert (x853 x2832))
(assert (not (= (x2116 x2462 11) (x2116 x1422 1))))
(assert (= (x2064 x360) (ite (= x360 x3009) x1074 (x563 x360))))
(assert (x853 x694))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 x990 1))))
(assert (=> (> (+ 10000 1) x2672) (not (= x2672 (x2116 x77 1)))))
(assert (not (= 24384142 (x2116 x2458 6))))
(assert (x853 x1743))
(assert (= (x1240 x3035) (ite (= x2473 x3035) x766 (x1567 x3035))))
(assert (= (x383 x2723) 33222205748031110454085609023467044101453017019085594488531032467161307152384))
(assert (= (=> (and (= x2742 x1912) (= x1855 x242)) x3120) x1525))
(assert (= (=> (and (= x784 (= x506 x422)) (= (x1111 1461501637330902918203684832716283019655932542975 x422) x506) (= (x1686 x789) x422)) (and (=> (not x784) x1795) (=> x784 x1908))) x2128))
(assert (x853 x3069))
(assert (=> (= (x2116 0 x2267) (x2116 x2462 13)) (and (= 13 x2267) (= x2462 0))))
(assert (=> (> (+ 10000 1) x422) (not (= (x2116 x2462 13) x422))))
(assert (= x2288 (=> (and (= (uninterp_mod (* x1573 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3037) (= (< x3037 x1889) x3162)) (and (=> (and (= x438 4) (not x3162)) x516) (=> x3162 x376)))))
(assert (x856 x184))
(assert (x853 x509))
(assert (not (= (x2116 x1838 14) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (not (= 1 (x2116 0 x1916))))
(assert (not (= (x2116 x2462 12) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (=> (= (x2116 x422 6) (x2116 0 x92)) (and (= x422 0) (= 6 x92))))
(assert (not (= (x2116 x2462 13) (x2116 x990 1))))
(assert (x853 x1161))
(assert (x853 x872))
(assert (= (x2862 384) 0))
(assert (not (= (x2116 x2462 15) 66649967879025377632792054650135220247173487182192293797349964221703864188928)))
(assert (not (= 826074471 (x2116 0 x2810))))
(assert (x1370 x197 x822))
(assert (x856 x656))
(assert (= x3012 (=> (and (= x1032 (x167 x1241)) (= x884 (x2275 x104)) (= x888 (x2858 (+ 64 x2295))) (= (x1111 1461501637330902918203684832716283019655932542975 x2729) x796) (= (= x884 0) x2027) (= (x2858 (+ 4 x384)) x2295) (= x2449 (x2858 (+ 36 x384)))) (and (=> (and (= (< 0 x409) x1953) (not x2027) (or (and (not x1953) (= x1210 x2009) (= x2804 x2818)) (and (= x2746 (= (x166 x104) x1033)) (= (>= (x166 274184521717934524641157099916833587233) x553) x2821) (= x2926 x2804) (= x3139 x1210) x2746 (= x1033 (x1950 x104)) (= x553 (x1950 274184521717934524641157099916833587233)) (> 4294967296 x2706) x2821 x1953))) x1801) (=> x2027 x1795)))))
(assert (not (= (x2116 0 x2810) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (> (+ 10000 1) x2964) (not (= (x2116 x1324 1) x2964))))
(assert (x853 x40))
(assert (= x326 (or x1592 x368)))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 x990 1))))
(assert (= (and x2789 (not x2065)) x1785))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 x208 14))))
(assert (=> (< (- x1990 1) 10000) (not (= (x2116 x698 1) x1990))))
(assert (x1752 x2964))
(assert (not (= (x2116 0 x2810) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (=> (< (- x208 1) 10000) (not (= (x2116 x2187 1) x208))))
(assert (not (= 12 (x2116 x2964 14))))
(assert (=> (= (x2116 0 x2810) (x2116 x698 1)) (and (= x698 0) (= x2810 1))))
(assert (x853 x1514))
(assert (not (= 274184521717934524641157099916833587233 (x2116 x1422 1))))
(assert (x853 x222))
(assert (x434 x1047 x1989 x1946 x2636))
(assert (x853 x1806))
(assert (=> (> (+ 10000 1) x698) (not (= (x2116 0 x3058) x698))))
(assert (= x2474 (=> (= x2219 x1070) x427)))
(assert (= (ite (= x1740 x2811) x2719 (x1944 x2811)) (x129 x2811)))
(assert (x853 x1009))
(assert (x853 x188))
(assert (not (= (x2116 x2187 1) 1000000000000000000)))
(assert (not (= 1 (x2116 x1990 1))))
(assert (not (= (x2116 x305 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x2911 x1933) (ite (and x867 x1119 x324) (x1271 x1933) (x383 x1933))))
(assert (x1433 x824 x1443))
(assert (=> (> (+ 10000 1) x2458) (not (= (x2116 x1838 14) x2458))))
(assert (= (x1240 x2478) (ite (= x2478 x2473) x766 (x1567 x2478))))
(assert (x853 x409))
(assert (not (= 1000000000 (x2116 x2964 14))))
(assert (not (= (x2116 x2462 12) (x2116 x2462 11))))
(assert (x853 x1986))
(assert (not (= (x2116 x1990 1) 1461501637330902918203684832716283019655932542975)))
(assert (x856 x1753))
(assert (=> (< (- x2964 1) 10000) (not (= (x2116 1 x2406) x2964))))
(assert (= (=> (and (>= x2068 0) (= x339 (x2116 0 x2267)) (= (x3023 x2068 160) x2595) (= (> x2595 18446744073709551615) x3083) (= x2267 (x2116 x2462 14)) (= x2068 (x2783 x339)) (<= x2068 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (= (= 0 x2595) x2694) (= x2067 (x2858 (+ x1272 32))) (= (uninterp_mod (* x2595 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1272) (or (and (= x2541 (x2858 (+ x1799 256))) (not x2694) (= x1219 (uninterp_mod (* 32 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2694) (= (x2858 (+ x1043 x2067)) x657) (not x3083)) x290) (=> x3083 x1795))) x2418))
(assert (= (x1597 x629) (ite (= x629 x435) x2057 (x1751 x629))))
(assert (=> (< (- x2462 1) 10000) (not (= (x2116 x754 12) x2462))))
(assert (= (x1234 x384) 82011359234811911920576981652393854074763270874787770258300864570283100471296))
(assert (not (= (x2116 1 x2406) 4294967296)))
(assert (= x2050 (and x3054 (not x2876))))
(assert (not (= (x2116 0 x92) 404098525)))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x2116 0 x2810)))))
(assert (= x1630 (=> (= x1448 (= 0 x3050)) (and (=> x1448 x1795) (=> (not x1448) x1770)))))
(assert (x856 x156))
(assert (not (= (x2116 x422 6) 274184521717934524641157099916833587206)))
(assert (= (=> (= x1505 (not (= x564 4))) (and (=> x1505 x599) (=> (and (= x1505 x446) (not x1505)) x1192))) x139))
(assert (=> (> (+ 10000 1) x422) (not (= x422 (x2116 0 x2810)))))
(assert (= (ite (= x1906 x2174) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2911 x2174)) (x2976 x2174)))
(assert (= (x342 x2174) (ite (= x2174 x888) x1032 (x1451 x2174))))
(assert (not (= (x2116 x2462 13) 6)))
(assert (= (ite (= x3009 x690) x1074 (x563 x690)) (x2064 x690)))
(assert (= x1784 (=> (and (= (x1111 1461501637330902918203684832716283019655932542975 x1074) x2369) (= x1074 (x2419 x1615)) (= x1798 (= x1074 x2369))) (and (=> (and (= x1515 (< 0 x243)) (>= 1461501637330902918203684832716283019655932542975 x183) (= x3009 (x2858 (+ 4 x690))) (>= x183 0) x1798 (or (and (= x1036 x243) (not x1515)) (and (> 4294967296 x1412) (= 1 x1036) x1515)) (< x183 1461501637330902918203684832716283019655932542976)) x2791) (=> (not x1798) x1795)))))
(assert (not (= (x2116 x208 14) 18446744073709551615)))
(assert (x853 x2019))
(assert (= (ite (= x1142 x2473) x766 (x1567 x1142)) (x1240 x1142)))
(assert (x853 x2595))
(assert (not (= (x2116 1 x2406) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (x853 x982))
(assert (x853 x1108))
(assert (not (= (x2116 x208 14) 1100000000000000000)))
(assert (x853 x2174))
(assert (x853 x3037))
(assert (= (and x3099 (not x538)) x2122))
(assert (= (x2519 x2055) (ite (= x2469 x2055) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2626 x2055))))
(assert (= (ite (= x1933 x2851) x2456 (x3159 x1933)) (x1610 x1933)))
(assert (= x3128 (and (not x1961) x78)))
(assert (x853 x392))
(assert (x856 x3103))
(assert (= (=> (and (= (= x1059 0) x518) (<= x1059 4294967295) (= (ite (> 100000000000000 x692) 1 0) x887) (= (= x2664 0) x762) (= x692 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059))) (= (ite (not x518) 1 0) x920) (<= 0 x1059) (< x1059 4294967296) (= (x1111 x920 x887) x2664)) (and (=> (not x762) x1795) (=> (and (= x1365 (ite x2603 2 3)) x762 (= (> x2349 x1482) x2603) (= (uninterp_mod (* x1059 100000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1482)) x813))) x2356))
(assert (not (= (x2116 x2187 1) (x2116 x754 12))))
(assert (= (ite (= x1906 x450) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2911 x450)) (x2976 x450)))
(assert (not (= (x2116 x2462 13) (x2116 x422 6))))
(assert (x853 x2615))
(assert (= (and x525 (not x1657)) x396))
(assert (x853 x3131))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 x2462 12) x990))))
(assert (not (= (x2116 x77 1) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (not (= (x2116 x1422 1) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (not (= (x2116 x422 6) 15)))
(assert (x853 x3087))
(assert (=> (= (x2116 x1422 1) (x2116 x698 1)) (= x1422 x698)))
(assert (x853 x1375))
(assert (not (= 274184521717934524641157099916833587202 (x2116 x2964 14))))
(assert (x856 x2068))
(assert (x853 x433))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 x2462 15))))
(assert (= (x1686 x2811) (ite (and x1600 x2130 x1883) (x763 x2811) (x598 x2811))))
(assert (= 0 (x2024 x3035)))
(assert (not (= 1937038442 (x2116 0 x2810))))
(assert (= (ite (= x1498 x2174) x750 (x1415 x2174)) (x2176 x2174)))
(assert (= (x1326 x314) (ite (= x1825 x314) x1391 (x1301 x314))))
(assert (not (= 404098525 (x2116 0 x2810))))
(assert (= (x1240 x1933) (ite (= x1933 x2473) x766 (x1567 x1933))))
(assert (= (=> (and (= (< x433 x1039) x2310) (= x909 (= (ite x201 1 0) 0)) (= x433 (x2858 (+ 128 x1039))) (= (or x2753 x2310) x201) (= (< 18446744073709551615 x433) x2753)) (and (=> x909 x1227) (=> (not x909) x1795))) x2397))
(assert (not (= 13 (x2116 0 x2267))))
(assert (not (= 15 (x2116 0 x3058))))
(assert (= x2185 (=> (= x1625 (= 0 x2591)) (and (=> x1625 x1795) (=> (not x1625) x2054)))))
(assert (=> (< (- x2964 1) 10000) (not (= (x2116 x2672 13) x2964))))
(assert (= (x2994 x2055) (ite (= x1565 x2055) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x85 x2055))))
(assert (= (=> (and (= (= x573 0) x1551) (= x1483 96)) (and (=> (and (= (x2858 (+ 224 x2023)) x1466) (= x2571 x1229) (not x1551) (= x1466 x95) (= x2485 x2714) (= x2023 x2336)) x2033) (=> x1551 x1245))) x317))
(assert (= x430 (and (not x2937) x2337)))
(assert (x853 x2067))
(assert (x853 x3098))
(assert (= (=> (and (= (x1111 1461501637330902918203684832716283019655932542975 x102) x2455) (= (= x2455 x102) x1132) (= x2899 x2729)) (and (=> (not x1132) x1795) (=> x1132 x1885))) x2641))
(assert (=> (< (- x1422 1) 10000) (not (= x1422 (x2116 x2462 15)))))
(assert (x853 x1914))
(assert (not (= 14262166148461681479388312084279688412379623686150252715788501447688379695104 (x2116 0 x2267))))
(assert (=> (> (+ 10000 1) x2672) (not (= x2672 (x2116 1 x2630)))))
(assert (= (ite (= x2239 x1427) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x1276 x2239)) (x1102 x2239)))
(assert (=> (< (- x104 1) 10000) (not (= (x2116 x2462 12) x104))))
(assert (=> (> (+ 10000 1) x1324) (not (= (x2116 x2462 11) x1324))))
(assert (= (x2371 x2959) (ite (= x2894 x2959) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x680 x2959))))
(assert (not (= (x2116 x1422 1) (x2116 x2672 13))))
(assert (x853 x1036))
(assert (not (= 12 (x2116 x305 1))))
(assert (x853 x2061))
(assert (not (= 1000000000 (x2116 x208 14))))
(assert (not (= (x2116 x2462 12) 1000000000)))
(assert (not (= 117300739 (x2116 x2462 12))))
(assert (= x216 (and x3124 x1706)))
(assert (x853 x238))
(assert (= x2218 (=> (and (= x2556 x2708) (= x1796 (> x2352 1)) (= x2352 (x31 352)) (= x2760 x402) (not x1796) (= x2678 x420)) x1612)))
(assert (= (or (and x1703 x2766) (and x1574 x2680)) x1026))
(assert (x434 x2121 x229 x2040 x2844))
(assert (= (=> (and (= (ite (> x1208 x2647) 1 0) x2217) (= (x504 x2772) x2807) (= x2647 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2807))) (= (= 0 x1356) x1708) (= x1704 (ite (not x358) 1 0)) (= x358 (= 0 x2807)) (= (x1111 x1704 x2217) x1356)) (and (=> x1708 x1792) (=> (not x1708) x1795))) x1261))
(assert (not (= (x2116 x1838 14) (x2116 x1422 1))))
(assert (= x998 (or (and x1533 (not x1786)) (and x803 x66))))
(assert (= x2800 (and x1798 x2605)))
(assert (not (= (x2116 x2458 6) (x2116 x2462 11))))
(assert (= (ite (= x1615 x2756) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x2756)) (x797 x2756)))
(assert (= (x1915 x2959) (ite (= x893 x2959) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2651 x2959))))
(assert (x853 x1513))
(assert (x853 x2959))
(assert (= (ite (= x303 x1933) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1851 x1933)) (x817 x1933)))
(assert (not (= (x2116 0 x92) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (=> (= (x2116 x2462 11) (x2116 0 x2267)) (and (= 0 x2462) (= x2267 11))))
(assert (x853 x2893))
(assert (=> (> (+ 10000 1) x2458) (not (= (x2116 x990 1) x2458))))
(assert (x856 x1712))
(assert (= (ite (and x2125 (not x1832)) (x2911 x2055) (x2189 x2055)) (x830 x2055)))
(assert (= (or (and x2774 x135) x111) x118))
(assert (not (= 14 (x2116 x2817 11))))
(assert (not (= 18446744073709551616 (x2116 x2462 14))))
(assert (not (= (x2116 1 x2406) 157198259)))
(assert (x853 x2160))
(assert (x853 x1151))
(assert (x853 x1824))
(assert (= x218 (and (not x1522) x607)))
(assert (x853 x848))
(assert (not (= (x2116 1 x2630) 0)))
(assert (not (= 1937038442 (x2116 0 x2204))))
(assert (x856 x920))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 x990 1))))
(assert (= (x1492 x2478) (ite (= x2478 x752) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2830 x2478))))
(assert (= (ite (= x1498 x2239) x750 (x1415 x2239)) (x2176 x2239)))
(assert (not (= (x2116 x1838 14) (x2116 x2187 1))))
(assert (x853 x1412))
(assert (=> (< (- x2187 1) 10000) (not (= (x2116 x1422 1) x2187))))
(assert (x853 x893))
(assert (x853 x1649))
(assert (x853 x1493))
(assert (= x1872 (=> (= x1563 (= x2304 0)) (and (=> (not x1563) x2987) (=> x1563 x1795)))))
(assert (= x660 (and x1023 x1582)))
(assert (not (= 24384142 (x2116 x77 1))))
(assert (=> (> (+ 10000 1) x222) (not (= x222 (x2116 0 x92)))))
(assert (not (= (x2116 x754 12) 826074471)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 x2187 1))))
(assert (x1433 x1819 x254))
(assert (x853 x22))
(assert (= (ite (and x1641 (not x3094)) (x2625 x772) (ite (and (not x1168) x2868 x1389) (x1797 x772) (x2045 x772))) (x707 x772)))
(assert (not (= 117300739 (x2116 x422 6))))
(assert (= (ite (= x2239 x2473) x766 (x1567 x2239)) (x1240 x2239)))
(assert (not (= (x2116 x2964 14) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (=> (> (+ 10000 1) x990) (not (= (x2116 x1990 1) x990))))
(assert (not (= 117300739 (x2116 x2817 11))))
(assert (x853 x17))
(assert (= (or x2966 (and x2079 x121)) x270))
(assert (=> (< (- x1990 1) 10000) (not (= (x2116 x1422 1) x1990))))
(assert (=> (< (- x1838 1) 10000) (not (= x1838 (x2116 0 x2267)))))
(assert (=> (> (+ 10000 1) x222) (not (= (x2116 x1838 14) x222))))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 x1324 1))))
(assert (=> (< (- x2458 1) 10000) (not (= (x2116 1 x2406) x2458))))
(assert (x853 x2445))
(assert (not (= 6 (x2116 x77 1))))
(assert (= (ite (= x893 x2239) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2651 x2239)) (x1915 x2239)))
(assert (x853 x2701))
(assert (not (= (x2116 0 x2267) 14)))
(assert (= (ite (= x2386 x2967) x2462 (x918 x2386)) (x2759 x2386)))
(assert (= (x963 x2055) (ite (= x2055 x2793) x1824 (x3019 x2055))))
(assert (=> (= (x2116 0 x3058) (x2116 x1422 1)) (and (= x3058 1) (= 0 x1422))))
(assert (x853 x618))
(assert (not (= (x2116 x1838 14) (x2116 x1324 1))))
(assert (x853 x2468))
(assert (not (= (x2116 0 x92) 1000000000000000000)))
(assert (=> (< (- x1324 1) 10000) (not (= (x2116 x2462 13) x1324))))
(assert (=> (< (- x2187 1) 10000) (not (= (x2116 x1324 1) x2187))))
(assert (=> (< (- x2458 1) 10000) (not (= (x2116 x208 14) x2458))))
(assert (=> (< (- x208 1) 10000) (not (= (x2116 1 x2406) x208))))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x422 6))))
(assert (= (x2759 x2478) (ite (= x2478 x2967) x2462 (x918 x2478))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 x1990 1))))
(assert (not (= (x2116 x2458 6) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= (x2116 x77 1) (x2116 x2462 12))))
(assert (= (ite (= x2055 x2553) x2462 (x154 x2055)) (x93 x2055)))
(assert (x853 x1508))
(assert (not (= (x2116 1 x2630) 1029106033)))
(assert (= x1013 (=> (and (= x2084 x1964) (= 0 x1016)) x2297)))
(assert (=> (< (- x1324 1) 10000) (not (= x1324 (x2116 0 x3058)))))
(assert (x853 x243))
(assert (= (and x2579 x2210) x2192))
(assert (not (= 1000000000 (x2116 x1838 14))))
(assert (=> (> (+ 10000 1) x2458) (not (= (x2116 x2462 14) x2458))))
(assert (not (= (x2116 1 x2630) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x853 x2812))
(assert (not (= 100000000000000 (x2116 x2187 1))))
(assert (= (=> (and (= (= 0 x1937) x867) (= (ite (not x1932) 1 0) x2200) (= (x1111 x2200 x361) x1937) (= x1932 (= 0 x2933)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2933)) x1100) (= (ite (> x968 x1100) 1 0) x361) (= (x3141 x447) x2933)) (and (=> (and x867 (= (uninterp_mod (* x968 x2933) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1447) (= x1119 (< 0 x2600)) (= (- (/ x1447 1000000000000000000) (uninterp_frac x1447 1000000000000000000)) x618) (or (and x1119 (< x2889 4294967296) (= 1 x1859)) (and (= x2600 x1859) (not x1119)))) x1259) (=> (not x867) x1795))) x2663))
(assert (x853 x1365))
(assert (= (and (not x2417) x1056) x2932))
(assert (=> (= (x2116 x698 1) (x2116 x2187 1)) (= x2187 x698)))
(assert (=> (> (+ 10000 1) x2462) (not (= x2462 (x2116 x77 1)))))
(assert (x853 x2455))
(assert (not (= 1 (x2116 0 x2204))))
(assert (not (= (x2116 x2817 11) 1)))
(assert (not (= (x2116 x77 1) 549896565)))
(assert (x853 x1761))
(assert (not (= (x2116 x2672 13) 66649967879025377632792054650135220247173487182192293797349964221703864188928)))
(assert (= (x2083 x2055) (ite (= x2055 x2806) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2738 x2055))))
(assert (x853 x2089))
(assert (not (= (x2116 x990 1) 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (=> (> (+ 10000 1) x698) (not (= (x2116 x2964 14) x698))))
(assert (not (= 12 (x2116 x77 1))))
(assert (x720 x1605 x1266))
(assert (= x425 (=> (and (= x170 (< 0 x1328)) (= x1328 (x31 352))) (and (=> x170 x1818) (=> (and (= x3149 x2009) (= x643 x2818) (not x170)) x1148)))))
(assert (= (x598 x789) 114004622612207947607358650692132104809471428260693408755609835181222483984384))
(assert (not (= (x2116 x208 14) (x2116 x2458 6))))
(assert (= (and (not x635) x395) x1540))
(assert (not (= 1889567281 (x2116 x1990 1))))
(assert (= x2619 (or (and (not x1502) x3100) x387)))
(assert (not (= (x2116 x1838 14) 15)))
(assert (= (=> (and (= (= 274184521717934524641157099916833587206 x551) x2195) (= x1498 (x2858 (+ 4 x2343))) (= x551 (x1111 1461501637330902918203684832716283019655932542975 x1624)) (= x750 (x1111 1461501637330902918203684832716283019655932542975 x2729)) (= x269 (x2858 (+ 36 x2343))) (= (x1936 (- x269 x2343)) x1647)) (and (=> (not x2195) x2531) (=> x2195 x419))) x2686))
(assert (x853 x259))
(assert (=> (= (x2116 0 x2267) (x2116 0 x3058)) (= x3058 x2267)))
(assert (x856 x992))
(assert (=> (> (+ 10000 1) x422) (not (= x422 (x2116 x1422 1)))))
(assert (= (=> (and (<= 0 x3043) (= (x2783 x191) x3043) (<= x3043 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2093 (> x532 1)) (= x532 (x568 x546)) (= x191 (x2116 1 x2204))) (and (=> (and (= (x2858 (+ x546 64)) x2399) (= 1 x1342) (= (> x2321 2) x348) (not x348) x2093 (= x2307 (x1111 1461501637330902918203684832716283019655932542975 x3043))) x385) (=> (not x2093) x1795))) x378))
(assert (= (ite (= x2386 x2132) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2012 x2386)) (x1677 x2386)))
(assert (not (= (x2116 x208 14) (x2116 x422 6))))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 x1990 1))))
(assert (x853 x2108))
(assert (= (or (and x3072 (not x860)) (and x1154 x1350)) x387))
(assert (not (= 1000000000000000000 (x2116 x1990 1))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 1 x2630))))
(assert (x853 x2943))
(assert (= (x626 x1933) (ite (= x1933 x484) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1903 x1933))))
(assert (= (and (not x1037) x1159) x765))
(assert (= (ite (and x128 (not x2578) x2674) (x2862 384) (x2869 384)) (x623 384)))
(assert (x856 x293))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 x990 1) x990))))
(assert (x1370 x2631 x2472))
(assert (= (=> (and (= (ite (< x1760 x1871) 1 0) x267) (= (ite (not x482) 1 0) x110) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935)) x1760) (= (x540 x103) x935) (= (x1111 x110 x267) x906) (= (= x906 0) x2210) (= x482 (= x935 0))) (and (=> (not x2210) x1795) (=> x2210 x1718))) x2693))
(assert (not (= (x2116 0 x3058) 826074471)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 x990 1))))
(assert (x853 x2421))
(assert (= x2720 (or (and x736 x969) x2619)))
(assert (x853 x2268))
(assert (=> (> (+ 10000 1) x2964) (not (= x2964 (x2116 x698 1)))))
(assert (not (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x2116 x698 1))))
(assert (= x1718 (=> (and (= x2884 (uninterp_mod (* x935 x1871) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< 0 x2407) x2166)) (and (=> (and (= x1635 x1366) x2166 (= 0 x1441) (= (- (/ x2884 x2407) (uninterp_frac x2884 x2407)) x1635)) x2621) (=> (not x2166) x1795)))))
(assert (= (ite (and x2885 x8 x2661) (x2361 x2478) (x1153 x2478)) (x1846 x2478)))
(assert (not (= (x2116 x1838 14) (x2116 x2458 6))))
(assert (not (= (x2116 x1422 1) 33222205748031110454085609023467044101453017019085594488531032467161307152384)))
(assert (=> (= (x2116 x2462 13) (x2116 1 x2630)) (and (= 1 x2462) (= x2630 13))))
(assert (x853 x684))
(assert (=> (> (+ 10000 1) x1990) (not (= (x2116 0 x2810) x1990))))
(assert (x853 x349))
(assert (not (= (x2116 x1324 1) 157198259)))
(assert (x853 x1825))
(assert (not (= (x2116 x305 1) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (= (=> (and (= x2520 (> x2757 0)) (= x521 (uninterp_mod (* 1000000000000000000 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x2520) x1795) (=> x2520 x2839))) x2251))
(assert (= x198 (and x584 x113)))
(assert (not (= (x2116 x1324 1) 549896565)))
(assert (x853 x1004))
(assert (not (= (x2116 x1838 14) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (x2116 x2462 15) 549896565)))
(assert (= x1557 (and (not x446) x2511)))
(assert (x853 x827))
(assert (x853 x1043))
(assert (not (= (x2116 0 x3058) 100000000000000)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 x2462 15))))
(assert (x853 x1671))
(assert (x853 x1982))
(assert (not (= (x2116 x2187 1) (x2116 x2672 13))))
(assert (not (= (x2116 x305 1) 274184521717934524641157099916833587202)))
(assert (= x947 (and (not x153) x270)))
(assert (x853 x1570))
(assert (= (=> (and (= x1325 (> x1442 0)) (= x133 (uninterp_mod (* x315 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> x1325 x2452) (=> (not x1325) x1795))) x464))
(assert (not (= 1 (x2116 0 x2810))))
(assert (x853 x269))
(assert (not (= (x2116 x2462 12) 66649967879025377632792054650135220247173487182192293797349964221703864188928)))
(assert (=> (= (x2116 x422 6) (x2116 0 x1916)) (and (= x1916 6) (= 0 x422))))
(assert (=> (> (+ 10000 1) x1990) (not (= x1990 (x2116 x1838 14)))))
(assert (= x2102 (=> (= x1783 (= 0 x316)) (and (=> (and (not x1783) (= x2089 x2370) (= x486 x2426)) x330) (=> x1783 x1795)))))
(assert (=> (< (- x77 1) 10000) (not (= x77 (x2116 x698 1)))))
(assert (x853 x2304))
(assert (not (= (x2116 x1990 1) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (not (= (x2116 1 x2406) 0)))
(assert (=> (< (- x2817 1) 10000) (not (= (x2116 0 x1916) x2817))))
(assert (not (= (x2116 0 x3058) 72464927124685711895252664195178772226123872012682517813167109100718830649344)))
(assert (x853 x2318))
(assert (= (and (not x2990) x2975) x1875))
(assert (x853 x2786))
(assert (= (and x867 x324) x277))
(assert (=> (< (- x2817 1) 10000) (not (= x2817 (x2116 1 x2630)))))
(assert (=> (> (+ 10000 1) x3040) (not (= (x2116 x2458 6) x3040))))
(assert (= x1972 (=> (= (= 0 x382) x847) (and (=> (not x847) x1966) (=> x847 x1795)))))
(assert (=> (> (+ 10000 1) x222) (not (= (x2116 1 x2406) x222))))
(assert (=> (> (+ 10000 1) x222) (not (= x222 (x2116 0 x2267)))))
(assert (x853 x1573))
(assert (not (= (x2116 x2458 6) 117300739)))
(assert (x1370 x2200 x361))
(assert (= (=> (= x27 (= x1736 0)) (and (=> x27 x1795) (=> (not x27) x1737))) x2925))
(assert (x853 x2109))
(assert (=> (< (- x754 1) 10000) (not (= x754 (x2116 x754 12)))))
(assert (x853 x169))
(assert (= (and x909 x144) x2026))
(assert (=> (< (- x2187 1) 10000) (not (= (x2116 1 x2630) x2187))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 x990 1))))
(assert (= (ite (and x1641 (not x3094)) (x2261 x2312) (ite (and (not x1168) x2868 x1389) (x1120 x2312) (x2261 x2312))) (x1304 x2312)))
(assert (= x945 (and x62 x1464)))
(assert (not (= (x2116 x2462 14) 274184521717934524641157099916833587202)))
(assert (not (= (x2116 x754 12) 274184521717934524641157099916833587233)))
(assert (x853 x3042))
(assert (= (and (not x499) x1358) x1377))
(assert (not (= (x2116 x2672 13) 117300739)))
(assert (=> (< (- x698 1) 10000) (not (= (x2116 0 x2267) x698))))
(assert (not (= 1 (x2116 x2187 1))))
(assert (= x2826 (and x2594 (not x2106))))
(assert (= (x1390 x1511) 33222205748031110454085609023467044101453017019085594488531032467161307152384))
(assert (not (= 15 (x2116 1 x2630))))
(assert (x853 x304))
(assert (x1370 x1050 x1042))
(assert (x853 x1760))
(assert (not (= 1889567281 (x2116 x2462 13))))
(assert (not (= (x2116 x1422 1) 0)))
(assert (x1752 x2817))
(assert (= (or (and x2609 x1462) x2118) x2301))
(assert (= x322 (=> (and (= x613 x3169) (= x2949 (x472 x574)) (= x3163 6) (= x1183 x1728) (= x333 (> x2949 1)) (not x333) (= x929 x2458) (= x850 x1984)) x10)))
(assert (not (= (x2116 x1990 1) 826074471)))
(assert (not (= (x2116 x2817 11) 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (= (x1240 x2386) (ite (= x2473 x2386) x766 (x1567 x2386))))
(assert (not (= 1000000000000000000 (x2116 x2462 12))))
(assert (=> (> (+ 10000 1) x2672) (not (= (x2116 x2817 11) x2672))))
(assert (= (and (not x224) x2800) x1558))
(assert (x853 x700))
(assert (= x1602 (=> (and (= (x1111 1461501637330902918203684832716283019655932542975 x824) x2506) (= (x69 x629) x824) (= (x2858 (+ x1548 132)) x545) (= (x1936 (- x663 x72)) x266) (= x663 (x2858 (+ 36 x72))) (= (= 274184521717934524641157099916833587206 x2506) x1464) (= x682 (x1111 1461501637330902918203684832716283019655932542975 x2729))) (and (=> (not x1464) x806) (=> x1464 x2809)))))
(assert (x1433 x3043 x2380))
(assert (not (= (x2116 x2462 15) 1)))
(assert (not (= (x2116 x2458 6) 274184521717934524641157099916833587233)))
(assert (x853 x2248))
(assert (= (x2045 x2239) (ite (= x2239 x2120) x1366 (x1054 x2239))))
(assert (= (x2064 x450) (ite (= x450 x3009) x1074 (x563 x450))))
(assert (not (= (x2116 x754 12) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 274184521717934524641157099916833587206 (x2116 0 x92))))
(assert (not (= 13 (x2116 0 x3058))))
(assert (= (=> (and (= x2717 x2468) (= x1151 x1055)) x924) x2117))
(assert (=> (< (- x2672 1) 10000) (not (= (x2116 x208 14) x2672))))
(assert (=> (= (x2116 x754 12) (x2116 0 x3058)) (and (= x754 0) (= 12 x3058))))
(assert (= (x342 x2055) (ite (= x2055 x888) x1032 (x1451 x2055))))
(assert (not (= (x2116 x754 12) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= (x1929 x2478) (ite (= x1639 x2478) x3087 (x2920 x2478))))
(assert (=> (= (x2116 x2672 13) (x2116 0 x2267)) (and (= 13 x2267) (= 0 x2672))))
(assert (not (= (x2116 0 x2204) 33222205748031110454085609023467044101453017019085594488531032467161307152384)))
(assert (x853 x2706))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 x2462 12))))
(assert (not (= (x2116 x1422 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x853 x997))
(assert (not (= 11 (x2116 x2462 11))))
(assert (not (= (x2116 x305 1) (x2116 x422 6))))
(assert (x853 x738))
(assert (x853 x2676))
(assert (= (ite (= x2538 x2386) x890 (x2042 x2386)) (x1153 x2386)))
(assert (x1433 x559 x730))
(assert (= (=> (and (= x2929 (uninterp_mod (* x2247 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1724 (> x2391 0))) (and (=> (and (= x695 (- (/ x2929 x2391) (uninterp_frac x2929 x2391))) x1724 (= x279 x1308) (= (ite x1835 x695 x463) x3106) (= x1835 (> x463 x695))) x962) (=> (not x1724) x1795))) x1816))
(assert (=> (= (x2116 0 x3058) (x2116 x1838 14)) (and (= x1838 0) (= 14 x3058))))
(assert (not (= (x2116 x305 1) 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (= 0 (x2024 x450)))
(assert (not (= (x2116 x2817 11) (x2116 x422 6))))
(assert (not (= (x2116 x2964 14) (x2116 x2817 11))))
(assert (x853 x2090))
(assert (=> (< (- x1324 1) 10000) (not (= (x2116 x2187 1) x1324))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 x698 1))))
(assert (x434 x1307 x2358 x697 x2557))
(assert (not (= (x2116 x422 6) 72464927124685711895252664195178772226123872012682517813167109100718830649344)))
(assert (= (or (and x1377 (not x1899)) x1125) x2609))
(assert (not (= (x2116 x2462 13) (x2116 x2462 11))))
(assert (= (x1124 x772) (ite (= x772 x931) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x76 x772))))
(assert (=> (> (+ 10000 1) x104) (not (= x104 (x2116 x2462 14)))))
(assert (=> (= (x2116 0 x92) (x2116 0 x2204)) (= x92 x2204)))
(assert (=> (< (- x222 1) 10000) (not (= (x2116 x2672 13) x222))))
(assert (not (= (x2116 x2964 14) (x2116 x2187 1))))
(assert (x853 x2951))
(assert (=> (< (- x2187 1) 10000) (not (= x2187 (x2116 x2462 11)))))
(assert (=> (= (x2116 0 x2204) (x2116 x2462 11)) (and (= x2462 0) (= 11 x2204))))
(assert (= (and x2513 (not x273)) x2766))
(assert (= x2452 (=> (and (= x2596 (ite (not x1879) 1 0)) (= x1106 (x1111 x2596 x2043)) (= x1879 (= 0 x2247)) (= (- (/ x133 x1442) (uninterp_frac x133 x1442)) x2247) (= (ite (< x2248 1000000000) 1 0) x2043) (= x2248 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247))) (= (= 0 x1106) x609)) (and (=> x609 x1816) (=> (not x609) x1795)))))
(assert (x853 x2569))
(assert (x853 x3145))
(assert (x1752 x754))
(assert (= (x2024 x1142) 0))
(assert (= (and x1767 (not x12)) x2954))
(assert (not (= 0 (x2116 x77 1))))
(assert (=> (= (x2116 x1838 14) (x2116 x2964 14)) (= x2964 x1838)))
(assert (=> (> (+ 10000 1) x77) (not (= x77 (x2116 x305 1)))))
(assert (x856 x2781))
(assert (not (= 18446744073709551616 (x2116 x208 14))))
(assert (= (ite (= x1639 x2386) x3087 (x2920 x2386)) (x1929 x2386)))
(assert (= (ite (= x1933 x411) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2570 x1933)) (x25 x1933)))
(assert (=> (> (+ 10000 1) x77) (not (= (x2116 x2964 14) x77))))
(assert (x853 x3008))
(assert (= (x830 x1142) (ite (and (not x1832) x2125) (x2911 x1142) (x2189 x1142))))
(assert (= x2487 (=> (and (= x656 (x1162 x2174)) (= x2174 (x2858 (+ 64 x893))) (= (x1111 18446744073709551615 x656) x2147) (= x2036 (= x656 x2147))) (and (=> (not x2036) x1795) (=> x2036 x194)))))
(assert (not (= 100000000000000 (x2116 x2458 6))))
(assert (= (ite (= x545 x2386) x682 (x1626 x2386)) (x601 x2386)))
(assert (not (= (x2116 x1990 1) 4294967296)))
(assert (not (= (x2116 x2462 12) (x2116 x990 1))))
(assert (x853 x2296))
(assert (=> (= (x2116 0 x92) (x2116 x698 1)) (and (= 0 x698) (= x92 1))))
(assert (not (= 1 (x2116 x2458 6))))
(assert (not (= (x2116 0 x92) 1889567281)))
(assert (not (= (x2116 x2462 12) 274184521717934524641157099916833587202)))
(assert (not (= (x2116 x1990 1) 404098525)))
(assert (=> (> (+ 10000 1) x754) (not (= x754 (x2116 x2462 14)))))
(assert (not (= 826074471 (x2116 1 x2630))))
(assert (x853 x2540))
(assert (= (x1113 x491) (ite (= x1962 x491) x639 (x1802 x491))))
(assert (= (and (not x2938) x1861) x889))
(assert (= x2599 (=> (and (= x278 (< 0 x948)) (= x948 (x472 x574))) (and (=> (and (= 0 x1183) (= 0 x3169) (= x2630 x3163) (= x2469 x850) (not x278) (= x1959 x929)) x10) (=> x278 x2963)))))
(assert (= x2548 (=> (and (= (= x1450 x972) x1437) (= x972 (x1111 1461501637330902918203684832716283019655932542975 x1450)) (= (x645 x752) x1450)) (and (=> (and x1437 (= (> x638 0) x1165) (<= x183 1461501637330902918203684832716283019655932542975) (>= x183 0) (or (and x1165 (< x225 4294967296) (= 1 x2110)) (and (not x1165) (= x2110 x638))) (< x183 1461501637330902918203684832716283019655932542976) (= x2283 (x2858 (+ 4 x855)))) x2191) (=> (not x1437) x1795)))))
(assert (= (ite (= x772 x1427) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x1276 x772)) (x1102 x772)))
(assert (=> (= (x2116 x2462 14) (x2116 0 x2204)) (and (= x2204 14) (= 0 x2462))))
(assert (= (and x2709 x2026) x954))
(assert (= (ite (= x1615 x2174) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x2174)) (x797 x2174)))
(assert (not (= 1000000000000000000 (x2116 x2462 15))))
(assert (not (= 11548673047482463375710962565434449992668293034397312241487562681223695302656 (x2116 x698 1))))
(assert (not (= (x2116 x2462 13) 1029106033)))
(assert (not (= (x2116 x990 1) 1889567281)))
(assert (not (= (x2116 x208 14) (x2116 x2462 13))))
(assert (not (= (x2116 x2672 13) 404098525)))
(assert (= (x173 x855) (ite (= x2283 x855) x1450 (x1665 x855))))
(assert (x853 x221))
(assert (=> (< (- x222 1) 10000) (not (= (x2116 x2462 13) x222))))
(assert (not (= 100000000000000 (x2116 x208 14))))
(assert (x853 x2407))
(assert (not (= (x2116 x208 14) 4294967295)))
(assert (not (= (x2116 0 x1916) 12)))
(assert (x853 x2215))
(assert (x853 x1142))
(assert (x853 x911))
(assert (= (and x3072 x860) x1350))
(assert (not (= 11 (x2116 0 x3058))))
(assert (not (= (x2116 x2817 11) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (not (= 12 (x2116 x208 14))))
(assert (= 0 (x2024 x2811)))
(assert (=> (> (+ 10000 1) x2672) (not (= (x2116 x1990 1) x2672))))
(assert (x856 x2245))
(assert (= (ite (and x8 x2885 x2661) (x2361 x450) (x1153 x450)) (x1846 x450)))
(assert (=> (< (- x1422 1) 10000) (not (= (x2116 x2462 11) x1422))))
(assert (x856 x1789))
(assert (not (= (x2116 x208 14) 17732073718202638403566719794745014173351532837126370201055734736014230421504)))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 0 x2204))))
(assert (not (= (x2116 x1422 1) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (not (= (x2116 x2817 11) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x2116 x754 12) 14)))
(assert (x856 x268))
(assert (= (=> (= (= 0 x1723) x2938) (and (=> x2938 x1795) (=> (not x2938) x2533))) x388))
(assert (= (x1102 x2174) (ite (= x1427 x2174) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x1276 x2174))))
(assert (not (= (x2116 0 x92) 1)))
(assert (= (x626 x2959) (ite (= x484 x2959) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1903 x2959))))
(assert (=> (= (x2116 0 x2810) (x2116 x1990 1)) (and (= x2810 1) (= 0 x1990))))
(assert (=> (< (- x2964 1) 10000) (not (= (x2116 x2964 14) x2964))))
(assert (x853 x679))
(assert (= (=> (and (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2624) x1833) (= (x2858 (+ x2060 31)) x2624) (= x566 (x2858 (+ x1833 x2023))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2060) (and (< x2060 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2060)))) x321)) (and (=> (not x321) x1020) (=> x321 x1795))) x2163))
(assert (=> (> (+ 10000 1) x754) (not (= x754 (x2116 1 x2630)))))
(assert (=> (< (- x1990 1) 10000) (not (= (x2116 1 x2406) x1990))))
(assert (=> (= (x2116 x2462 13) (x2116 0 x2204)) (and (= 0 x2462) (= 13 x2204))))
(assert (=> (> (+ 10000 1) x2187) (not (= (x2116 x1990 1) x2187))))
(assert (not (= 1937038442 (x2116 x698 1))))
(assert (not (= (x2116 x2462 11) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= 6 (x2116 x990 1))))
(assert (not (= 4294967295 (x2116 x754 12))))
(assert (x853 x776))
(assert (= (ite (and (not x1832) x2125) (x2911 x2756) (x2189 x2756)) (x830 x2756)))
(assert (not (= 1029106033 (x2116 0 x92))))
(assert (not (= (x2116 x2187 1) (x2116 x2458 6))))
(assert (not (= (x2116 x1990 1) 14)))
(assert (x853 x1734))
(assert (=> (= (x2116 1 x2406) (x2116 x1422 1)) (and (= x1422 1) (= 1 x2406))))
(assert (= x1078 (=> (and (= x1218 (x1111 x169 x340)) (= (x2189 x931) x2003) (= x971 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003))) (= x340 (ite (> x1454 x971) 1 0)) (= (= 0 x1218) x2254) (= x169 (ite (not x11) 1 0)) (= x11 (= x2003 0))) (and (=> x2254 x1092) (=> (not x2254) x1795)))))
(assert (x853 x2670))
(assert (x853 x1096))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 0 x2204))))
(assert (=> (< (- x2462 1) 10000) (not (= x2462 (x2116 x2964 14)))))
(assert (x853 x2818))
(assert (x856 x1449))
(assert (not (= (x2116 1 x2630) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (x856 x887))
(assert (not (= (x2116 1 x2406) 15)))
(assert (x1370 x920 x887))
(assert (not (= 15 (x2116 0 x2204))))
(assert (not (= (x2116 1 x2630) (x2116 0 x3058))))
(assert (not (= (x2116 x77 1) 4294967296)))
(assert (=> (= (x2116 0 x2810) (x2116 0 x92)) (= x92 x2810)))
(assert (not (= 549896565 (x2116 x1990 1))))
(assert (not (= 11 (x2116 0 x2204))))
(assert (x1433 x294 x1309))
(assert (= (ite (and (not x2142) x3017) (x1162 x2055) (x504 x2055)) (x302 x2055)))
(assert (not (= 100000000000000 (x2116 0 x1916))))
(assert (=> (= (x2116 0 x92) (x2116 x2462 15)) (and (= 15 x92) (= 0 x2462))))
(assert (x853 x102))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 x754 12) x990))))
(assert (not (= (x2116 x2187 1) (x2116 x2462 11))))
(assert (x853 x3166))
(assert (not (= (x2116 x990 1) (x2116 x422 6))))
(assert (not (= 1100000000000000000 (x2116 x2462 13))))
(assert (= (=> (and (= (> x1910 0) x389) (= x1910 (x1683 x1521))) (and (=> x389 x1593) (=> (not x389) x1795))) x380))
(assert (x853 x2833))
(assert (x853 x2186))
(assert (= (ite x1988 (ite (and x3085 (not x278)) (x2626 x1933) (x1413 x1933)) (x302 x1933)) (x523 x1933)))
(assert (= (ite (and x1119 x867 x324) (x1271 x2478) (x383 x2478)) (x2911 x2478)))
(assert (=> (> (+ 10000 1) x3040) (not (= x3040 (x2116 x422 6)))))
(assert (x853 x1059))
(assert (not (= (x2116 0 x2267) 826074471)))
(assert (x853 x127))
(assert (= (and x2972 (not x2970)) x300))
(assert (not (= 6 (x2116 0 x92))))
(assert (= (and x1079 x609) x2088))
(assert (x853 x1239))
(assert (= (x626 x2174) (ite (= x484 x2174) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1903 x2174))))
(assert (not (= 24384142 (x2116 0 x1916))))
(assert (x853 x299))
(assert (x856 x2729))
(assert (x853 x97))
(assert (=> (< (- x2462 1) 10000) (not (= x2462 (x2116 x422 6)))))
(assert (= 0 (x2909 x1769)))
(assert (x853 x555))
(assert (= (and x2096 (not x847)) x1022))
(assert (not (= 1 (x2116 x1422 1))))
(assert (not (= 100000000000000 (x2116 x1422 1))))
(assert (not (= (x2116 x754 12) 274184521717934524641157099916833587202)))
(assert (not (= (x2116 x422 6) 100000000000000)))
(assert (not (= (x2116 0 x92) 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (=> (< (- x2964 1) 10000) (not (= x2964 (x2116 0 x2810)))))
(assert (not (= 18446744073709551616 (x2116 x1990 1))))
(assert (x853 x2660))
(assert (not (= 157198259 (x2116 x2964 14))))
(assert (x853 x941))
(assert (= (ite (= x2723 x1933) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x1933)) (x383 x1933)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2116 x305 1))))
(assert (not (= (x2116 x1324 1) 24384142)))
(assert (not (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2116 x208 14))))
(assert (= (ite (and (not x2882) x141) (x2625 x772) (ite (and x921 (not x2442)) (x707 x772) (x2265 x772))) (x1903 x772)))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x2462 11))))
(assert (x856 x1046))
(assert (not (= 1000000000 (x2116 x2462 15))))
(assert (= (=> (and (= x1511 (x2858 (+ x2567 x2428))) (= x2428 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1847)) (= x1847 (x2858 (+ 31 x2752))) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2752) true) (> 32 x2752)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2752)) x61)) (and (=> x61 x1795) (=> (not x61) x2908))) x1737))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 x422 6))))
(assert (= x334 (and (not x653) x742)))
(assert (x853 x1542))
(assert (not (= 13 (x2116 x2462 13))))
(assert (= (=> (and (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1435) x2685) (= x1670 (or (and (< x1709 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1709) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1709))) (= x2132 (x2858 (+ x1906 x2685))) (= x1435 (x2858 (+ 31 x1709)))) (and (=> x1670 x1795) (=> (not x1670) x1458))) x2335))
(assert (x434 x2910 x876 x3029 x46))
(assert (not (= (x2116 0 x2267) 4294967296)))
(assert (x1370 x3135 x2186))
(assert (not (= (x2116 x2187 1) 18446744073709551616)))
(assert (=> (> (+ 10000 1) x1422) (not (= x1422 (x2116 x990 1)))))
(assert (not (= (x2116 x2462 13) (x2116 x2462 14))))
(assert (not (= (x2116 0 x92) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (= (ite (= x447 x2473) x766 (x1567 x447)) (x1240 x447)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2116 x2462 11))))
(assert (x853 x2336))
(assert (x1752 x990))
(assert (x853 x1769))
(assert (x853 x59))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x2462 15))))
(assert (= (x1686 x789) (ite (and x2130 x1883 x1600) (x763 x789) (x598 x789))))
(assert (= (and x2011 x1171) x1996))
(assert (not (= (x2116 1 x2630) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x853 x2552))
(assert (= (x1846 x2055) (ite (and x2885 x8 x2661) (x2361 x2055) (x1153 x2055))))
(assert (= (ite x2966 (ite (and (not x2558) x2507) (x2024 x450) (x81 x450)) (x830 x450)) (x2830 x450)))
(assert (x853 x239))
(assert (not (= 4294967295 (x2116 x2672 13))))
(assert (x853 x2364))
(assert (not (= (x2116 x2817 11) 274184521717934524641157099916833587202)))
(assert (not (= (x2116 x77 1) 72464927124685711895252664195178772226123872012682517813167109100718830649344)))
(assert (= x825 (=> (and (= (= 0 x688) x1255) (= x688 (x2266 x855))) (and (=> x1255 x1795) (=> (and (not x1255) (or (and (< x2287 4294967296) (= 1 x335) x2457) (and (not x2457) (= x1480 x335))) (= x2457 (> x1480 0)) (= x1740 (x2858 (+ x1129 4))) (= x2719 (x1111 1461501637330902918203684832716283019655932542975 x2729))) x1257)))))
(assert (x853 x990))
(assert (=> (= (x2116 0 x2267) (x2116 x698 1)) (and (= x2267 1) (= x698 0))))
(assert (not (= 549896565 (x2116 0 x2810))))
(assert (=> (= (x2116 x1838 14) (x2116 x208 14)) (= x208 x1838)))
(assert (not (= (x2116 x2187 1) 549896565)))
(assert (=> (< (- x305 1) 10000) (not (= (x2116 1 x2406) x305))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x2116 0 x2204)))))
(assert (= (x2969 x55) (ite (and (not x170) x1557) (x2988 x55) (ite (and x3060 (not x1501)) (x2988 x55) (x1057 x55)))))
(assert (not (= 6 (x2116 1 x2406))))
(assert (not (= (x2116 x990 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= (=> (and (= (x2858 (+ x931 x2345)) x1398) (= x1518 (or (and (< x1732 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1732))) (> x1732 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x2858 (+ 31 x1732)) x1869) (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1869) x2345)) (and (=> (not x1518) x1078) (=> x1518 x1795))) x2054))
(assert (= (ite (= x450 x545) x682 (x1626 x450)) (x601 x450)))
(assert (x853 x929))
(assert (not (= (x2116 x1838 14) 14)))
(assert (=> (> (+ 10000 1) x208) (not (= (x2116 x1990 1) x208))))
(assert (x856 x726))
(assert (x853 x1541))
(assert (=> (= (x2116 0 x1916) (x2116 x305 1)) (and (= x1916 1) (= x305 0))))
(assert (x856 x155))
(assert (x853 x1855))
(assert (x1370 x1275 x293))
(assert (not (= 11548673047482463375710962565434449992668293034397312241487562681223695302656 (x2116 x2187 1))))
(assert (x856 x197))
(assert (not (= (x2116 x77 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (= (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232)) x2427) (= x232 (x1453 224)) (= x2186 (ite (> 1000000000000000000 x2427) 1 0)) (= (ite (not x94) 1 0) x3135) (= x1578 (= 0 x1066)) (= (= x232 0) x94) (= (x1111 x3135 x2186) x1066) (= x2757 (x2858 (+ 1000000000000000000 x2901)))) (and (=> x1578 x2251) (=> (not x1578) x1795))) x1667))
(assert (x856 x1707))
(assert (= x1680 (or (and x176 x1209) (and x2409 (not x3162)) (and x3182 (not x1620)) (and (not x556) x2946))))
(assert (x853 x77))
(assert (not (= 18446744073709551616 (x2116 x2672 13))))
(assert (not (= (x2116 x2964 14) (x2116 x990 1))))
(assert (=> (> (+ 10000 1) x2462) (not (= x2462 (x2116 x2462 11)))))
(assert (x853 x2369))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 x1324 1))))
(assert (not (= 14 (x2116 x2458 6))))
(assert (not (= 18446744073709551616 (x2116 1 x2406))))
(assert (x853 x2431))
(assert (= (and x2125 x1832) x3027))
(assert (x1370 x2542 x268))
(assert (=> (= (x2116 x208 14) (x2116 0 x2204)) (and (= x2204 14) (= 0 x208))))
(assert (=> (< (- x2458 1) 10000) (not (= x2458 (x2116 x77 1)))))
(assert (not (= 18446744073709551616 (x2116 x2462 12))))
(assert (x853 x1568))
(assert (not (= (x2116 x2462 15) (x2116 x2462 11))))
(assert (= 0 (x3006 x103)))
(assert (x853 x2883))
(assert (x853 x2822))
(assert (= (ite (= x3009 x1571) x1074 (x563 x1571)) (x2064 x1571)))
(assert (not (= (x2116 0 x2810) 66649967879025377632792054650135220247173487182192293797349964221703864188928)))
(assert (x853 x2440))
(assert (x853 x822))
(assert (x853 x2667))
(assert (= (ite (= x2055 x1511) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x1983 x2055)) (x1390 x2055)))
(assert (x853 x2104))
(assert (=> (> (+ 10000 1) x2672) (not (= x2672 (x2116 x2462 14)))))
(assert (not (= 14 (x2116 0 x2204))))
(assert (x434 x995 x261 x202 x2998))
(assert (x853 x2989))
(assert (not (= 11 (x2116 x1324 1))))
(assert (x856 x1570))
(assert (= (ite (and x2661 x8 x2885) (x2361 x2959) (x1153 x2959)) (x1846 x2959)))
(assert (x853 x2723))
(assert (=> (< (- x305 1) 10000) (not (= (x2116 x698 1) x305))))
(assert (=> (> (+ 10000 1) x990) (not (= (x2116 x1324 1) x990))))
(assert (=> (= (x2116 x1324 1) (x2116 x2187 1)) (= x2187 x1324)))
(assert (not (= (x2116 0 x2267) 549896565)))
(assert (x853 x1549))
(assert (not (= 274184521717934524641157099916833587233 (x2116 0 x2204))))
(assert (not (= (x2116 0 x3058) 404098525)))
(assert (x853 x1029))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 x77 1))))
(assert (not (= 4294967295 (x2116 x1324 1))))
(assert (x853 x457))
(assert (x853 x1698))
(assert (not (= (x2116 x698 1) 157198259)))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 0 x92))))
(assert (= (x1326 x2174) (ite (= x1825 x2174) x1391 (x1301 x2174))))
(assert (=> (> (+ 10000 1) x305) (not (= (x2116 x2462 11) x305))))
(assert (x434 x3021 x2360 x612 x1803))
(assert (not (= (x2116 0 x1916) 4294967296)))
(assert (x853 x2769))
(assert (x853 x1925))
(assert (x853 x2797))
(assert (not (= (x2116 x2458 6) 18446744073709551616)))
(assert (x856 x916))
(assert (=> (> (+ 10000 1) x2672) (not (= x2672 (x2116 x754 12)))))
(assert (=> (> (+ 10000 1) x1422) (not (= (x2116 0 x1916) x1422))))
(assert (x853 x203))
(assert (= (x1755 x2478) (ite (= x2567 x2478) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1270 x2478))))
(assert (=> (= (x2116 x2458 6) (x2116 x422 6)) (= x2458 x422)))
(assert (not (= 14 (x2116 x2964 14))))
(assert (= (x1234 x2959) (ite (= x384 x2959) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x707 x2959))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 0 x2204))))
(assert (=> (< (- x1838 1) 10000) (not (= (x2116 0 x3058) x1838))))
(assert (not (= (x2116 x2462 12) (x2116 x2672 13))))
(assert (=> (< (- x222 1) 10000) (not (= x222 (x2116 x990 1)))))
(assert (x1370 x1449 x760))
(assert (=> (= (x2116 x2462 12) (x2116 0 x1916)) (and (= 12 x1916) (= 0 x2462))))
(assert (x853 x481))
(assert (= (=> (and (= x2216 (x568 x546)) (= x2137 (> x2216 0))) (and (=> x2137 x2992) (=> (not x2137) x1795))) x1887))
(assert (= x2191 (=> (= x1252 (= x2110 0)) (and (=> x1252 x1795) (=> (not x1252) x1886)))))
(assert (x853 x1272))
(assert (x853 x3092))
(assert (= (x2911 x450) (ite (and x1119 x867 x324) (x1271 x450) (x383 x450))))
(assert (x853 x3028))
(assert (= (=> (and (= x1306 x1055) (= 0 x2717)) x2117) x1254))
(assert (not (= 13 (x2116 x698 1))))
(assert (= (x2994 x1933) (ite (= x1565 x1933) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x85 x1933))))
(assert (x1752 x92))
(assert (not (= 404098525 (x2116 x2964 14))))
(assert (x853 x2258))
(assert (=> (< (- x2817 1) 10000) (not (= (x2116 1 x2406) x2817))))
(assert (not (= 0 (x2116 x2462 12))))
(assert (=> (= (x2116 1 x2406) (x2116 x754 12)) (and (= 1 x754) (= 12 x2406))))
(assert (not (= 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2116 1 x2406))))
(assert (x853 x1615))
(assert (= (ite (= x2756 x931) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x76 x2756)) (x1124 x2756)))
(assert (= (ite (= x2478 x931) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x76 x2478)) (x1124 x2478)))
(assert (x853 x2231))
(assert (x853 x266))
(assert (= x2809 (=> (and (= x305 x682) (> x923 0) (not (> 826074471 x2363)) (= x2234 (x1936 (- x2498 4))) (= x2498 36) (not (= x2363 826074471)) (= x1293 (or (> x2234 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2234) true) (< x2234 32)))) (= x9 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x2498 x266) (= x923 (x2275 274184521717934524641157099916833587206)) (= 1889567281 x2363) (not (< x2498 4))) (and (=> x1293 x655) (=> (not x1293) x531)))))
(assert (not (= (x2116 x1838 14) (x2116 x990 1))))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 1 x2406))))
(assert (x720 x840 x1283))
(assert (= (=> (= (= 0 x1108) x2680) (and (=> (not x2680) x1795) (=> (and (= x357 x1229) (= x95 x2588) (= x2485 x3129) x2680) x1253))) x542))
(assert (=> (= (x2116 0 x92) (x2116 0 x1916)) (= x1916 x92)))
(assert (= x2705 (=> (and (= (= x222 x501) x586) (= x501 (x1111 1461501637330902918203684832716283019655932542975 x222)) (= x222 (x286 x384))) (and (=> x586 x1133) (=> (not x586) x1795)))))
(assert (not (= (x2116 0 x2204) 6)))
(assert (=> (> (+ 10000 1) x1990) (not (= (x2116 0 x1916) x1990))))
(assert (x853 x1338))
(assert (=> (= (x2116 x754 12) (x2116 0 x2204)) (and (= x754 0) (= x2204 12))))
(assert (= (x598 x2174) (ite (= x2174 x789) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x2174))))
(assert (not (= 13 (x2116 0 x1916))))
(assert (= (=> (= (= x512 0) x2098) (and (=> x2098 x1795) (=> (not x2098) x54))) x1364))
(assert (= (and x1533 x1786) x148))
(assert (x853 x1506))
(assert (x853 x58))
(assert (= (or (and (not x1505) x233) (and (not x1550) x283)) x2511))
(assert (= x194 (=> (and (= (x2858 (+ x1039 64)) x1237) (= (x2858 (+ x772 64)) x2239) (= x1570 (x1162 x2239)) (= x2296 (x1111 18446744073709551615 x1570)) (= (= x2296 x1570) x234)) (and (=> (not x234) x1795) (=> x234 x1224)))))
(assert (= x195 (=> (and (= (= x2257 x1817) x1175) (= x1817 (x1111 1461501637330902918203684832716283019655932542975 x2257)) (= x2257 (x1523 x2806))) (and (=> (and (>= 1461501637330902918203684832716283019655932542975 x183) (>= x183 0) (= (x2858 (+ x71 4)) x1845) (< x183 1461501637330902918203684832716283019655932542976) (or (and (not x2422) (= x1317 x2482)) (and x2422 (= 1 x2482) (< x2943 4294967296))) x1175 (= (< 0 x1317) x2422)) x1813) (=> (not x1175) x1795)))))
(assert (not (= (x2116 x2462 11) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= (and (not x1700) x940) x1874))
(assert (not (= (x2116 x2964 14) 66649967879025377632792054650135220247173487182192293797349964221703864188928)))
(assert (=> (= (x2116 1 x2630) (x2116 x2462 15)) (and (= x2462 1) (= x2630 15))))
(assert (= (ite (and x1883 x2130 x1600) (x763 x2386) (x598 x2386)) (x1686 x2386)))
(assert (=> (= (x2116 x2672 13) (x2116 0 x3058)) (and (= x2672 0) (= x3058 13))))
(assert (x853 x2827))
(assert (=> (> (+ 10000 1) x2462) (not (= (x2116 x208 14) x2462))))
(assert (not (= 12 (x2116 1 x2406))))
(assert (=> (> (+ 10000 1) x754) (not (= (x2116 x2458 6) x754))))
(assert (= (ite (= x2473 x360) x766 (x1567 x360)) (x1240 x360)))
(assert (not (= 0 (x2116 x208 14))))
(assert (x1433 x1468 x1987))
(assert (x853 x1594))
(assert (not (= (x2116 x2458 6) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (not (= (x2116 x2462 15) 100000000000000)))
(assert (not (= (x2116 x2462 11) (x2116 x305 1))))
(assert (=> (< (- x222 1) 10000) (not (= x222 (x2116 x2458 6)))))
(assert (= 0 (x2024 x1933)))
(assert (not (= (x2116 x2462 15) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (= (and x2319 x2632) x956))
(assert (not (= (x2116 x2462 15) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= (x1755 x2811) (ite (= x2567 x2811) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1270 x2811))))
(assert (=> (< (- x754 1) 10000) (not (= (x2116 x1422 1) x754))))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x754 12))))
(assert (not (= (x2116 x2187 1) 826074471)))
(assert (x856 x2276))
(assert (= x2529 (or (and x710 x363) (and x1077 (not x407)))))
(assert (=> (< (- x208 1) 10000) (not (= (x2116 x2462 12) x208))))
(assert (=> (> (+ 10000 1) x1838) (not (= (x2116 x2462 14) x1838))))
(assert (= x2301 x1533))
(assert (x853 x1137))
(assert (x853 x2567))
(assert (=> (< (- x3040 1) 10000) (not (= x3040 (x2116 x208 14)))))
(assert (= (x1751 x629) (ite (and (not x2158) x2242 x73) (x2909 x629) (x394 x629))))
(assert (= (=> (and (= x902 (x1111 x2956 x228)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047)) x2597) (= x228 (ite (> 1100000000000000000 x2597) 1 0)) (= x2669 (= x902 0)) (= (x592 x1729) x2047) (= x2906 (= x2047 0)) (= x2956 (ite (not x2906) 1 0))) (and (=> (not x2669) x1795) (=> x2669 x2612))) x2996))
(assert (=> (= (x2116 1 x2406) (x2116 x208 14)) (and (= 1 x208) (= 14 x2406))))
(assert (not (= 11548673047482463375710962565434449992668293034397312241487562681223695302656 (x2116 x990 1))))
(assert (=> (< (- x698 1) 10000) (not (= (x2116 x2462 14) x698))))
(assert (x853 x1188))
(assert (= (ite (and (not x1528) x2720) (x1903 x2959) (x1586 x2959)) (x2626 x2959)))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 0 x1916))))
(assert (= x1360 (and x258 (not x473))))
(assert (x853 x2785))
(assert (not (= (x2116 x2462 13) (x2116 x1324 1))))
(assert (not (= 100000000000000 (x2116 x2462 11))))
(assert (= x2401 (and x723 x1540)))
(assert (x853 x1647))
(assert (= (ite (and x1883 x1600 x2130) (x763 x450) (x598 x450)) (x1686 x450)))
(assert (x853 x3090))
(assert (=> (> (+ 10000 1) x2187) (not (= x2187 (x2116 x208 14)))))
(assert (not (= (x2116 1 x2406) 1937038442)))
(assert (not (= (x2116 x2964 14) 1937038442)))
(assert (x853 x2502))
(assert (x856 x228))
(assert (= (and x1620 x3182) x274))
(assert (x853 x1229))
(assert (not (= 6 (x2116 x2462 15))))
(assert (= (and x2921 (not x321)) x495))
(assert (x853 x1147))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 x698 1))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 x2462 15))))
(assert (not (= (x2116 x2462 15) (x2116 x2462 13))))
(assert (= (x2140 x2695) (ite (= x2850 x2695) x2683 (x68 x2695))))
(assert (not (= 1000000000000000000000000000000000000 (x2116 0 x1916))))
(assert (x853 x1311))
(assert (x853 x1172))
(assert (= (or (and x3108 (not x1788)) (and (not x1344) x2590) (and x2282 (not x2659)) (and x1881 x762)) x32))
(assert (not (= (x2116 x422 6) 1461501637330902918203684832716283019655932542975)))
(assert (x853 x21))
(assert (= (=> (and (= (x1586 x450) x1605) (= x1951 (x1111 18446744073709551615 x1605)) (= (= x1605 x1951) x2155) (= (x2858 (+ x2894 64)) x450) (= x45 (x2858 (+ x21 32)))) (and (=> (not x2155) x1795) (=> x2155 x3179))) x1491))
(assert (x853 x3101))
(assert (not (= 1100000000000000000 (x2116 0 x3058))))
(assert (=> (> (+ 10000 1) x422) (not (= x422 (x2116 0 x2267)))))
(assert (x853 x597))
(assert (=> (> (+ 10000 1) x2672) (not (= (x2116 0 x3058) x2672))))
(assert (=> (< (- x305 1) 10000) (not (= x305 (x2116 x1838 14)))))
(assert (= (x129 x2239) (ite (= x2239 x1740) x2719 (x1944 x2239))))
(assert (x853 x1324))
(assert (= (and x42 x2205) x7))
(assert (= (ite (= x2132 x2959) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2012 x2959)) (x1677 x2959)))
(assert (not (= (x2116 x2187 1) 1000000000)))
(assert (= (=> (and (= (x1111 18446744073709551615 x2052) x2138) (= (= x2052 x2138) x2815) (= (x2858 (+ 32 x2723)) x360) (= x2052 (x2911 x360))) (and (=> (not x2815) x1795) (=> x2815 x640))) x644))
(assert (= (and x940 x1700) x2741))
(assert (x853 x335))
(assert (= x607 (and x2623 (not x747))))
(assert (not (= (x2116 x2462 14) 1)))
(assert (not (= (x2116 x208 14) 549896565)))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 x2462 11))))
(assert (not (= (x2116 0 x2267) 1937038442)))
(assert (not (= (x2116 0 x92) 18446744073709551616)))
(assert (not (= (x2116 x698 1) 826074471)))
(assert (= (and x3128 x1132) x2674))
(assert (not (= (x2116 x2187 1) 274184521717934524641157099916833587233)))
(assert (=> (< (- x104 1) 10000) (not (= x104 (x2116 x2462 13)))))
(assert (not (= (x2116 x422 6) 1)))
(assert (not (= (x2116 x2964 14) (x2116 x2462 13))))
(assert (x1752 x305))
(assert (not (= (x2116 x2458 6) (x2116 x77 1))))
(assert (= (ite (and x3003 x207 x604) (x398 x2055) (x2519 x2055)) (x2738 x2055)))
(assert (x853 x1117))
(assert (=> (= (x2116 x1838 14) (x2116 x2462 14)) (= x2462 x1838)))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 1 x2406))))
(assert (not (= (x2116 x2462 13) 72464927124685711895252664195178772226123872012682517813167109100718830649344)))
(assert (x853 x519))
(assert (x853 x1889))
(assert (= (ite (= x2132 x2174) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2012 x2174)) (x1677 x2174)))
(assert (not (= 13 (x2116 x2817 11))))
(assert (not (= 13 (x2116 x77 1))))
(assert (= x1893 (and (not x2509) x3157)))
(assert (= (ite (= x2386 x1740) x2719 (x1944 x2386)) (x129 x2386)))
(assert (x434 x1435 x662 x2408 x105))
(assert (x853 x1070))
(assert (=> (> (+ 10000 1) x104) (not (= (x2116 0 x92) x104))))
(assert (= x681 (=> (and (= (x2858 (+ x1548 32)) x2440) (= (x2858 (+ 64 x1511)) x2756) (= (x1111 18446744073709551615 x1963) x2001) (= x1484 (= x2001 x1963)) (= x1963 (x1145 x2756))) (and (=> x1484 x1669) (=> (not x1484) x1795)))))
(assert (x853 x1913))
(assert (= (and x2997 x1325) x1079))
(assert (x853 x2936))
(assert (=> (> (+ 10000 1) x77) (not (= (x2116 x1990 1) x77))))
(assert (not (= 274184521717934524641157099916833587233 (x2116 x208 14))))
(assert (not (= (x2116 x2458 6) (x2116 x2672 13))))
(assert (x856 x661))
(assert (x853 x1080))
(assert (= (ite (= x2959 x931) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x76 x2959)) (x1124 x2959)))
(assert (= (x2176 x2386) (ite (= x2386 x1498) x750 (x1415 x2386))))
(assert (not (= (x2116 x698 1) (x2116 x2462 15))))
(assert (x853 x2542))
(assert (= (=> (and (= (> 0 x2780) x2970) (= x2780 (x1936 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978)))) (and (=> (not x2970) x2860) (=> x2970 x1795))) x962))
(assert (= (x2759 x450) (ite (= x450 x2967) x2462 (x918 x450))))
(assert (not (= (x2116 x77 1) 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (= (=> (and (< 0 x1089) (not (= x2540 826074471)) (= x1647 x2434) (= x750 x1324) (= x109 (or (and (< x2653 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2653))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2653))) (= x2653 (x1936 (- x2434 4))) (not (< x2540 826074471)) (= x2540 1889567281) (= x1089 (x2275 274184521717934524641157099916833587202)) (not (> 4 x2434)) (= x1743 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= 36 x2434)) (and (=> (not x109) x973) (=> x109 x240))) x1242))
(assert (not (= (x2116 x2817 11) 1000000000000000000000000000000000000)))
(assert (=> (< (- x1990 1) 10000) (not (= (x2116 x2817 11) x1990))))
(assert (= x2997 (and x1996 x1090)))
(assert (x853 x268))
(assert (not (= 404098525 (x2116 x2462 11))))
(assert (x856 x958))
(assert (x853 x2047))
(assert (=> (> (+ 10000 1) x1324) (not (= x1324 (x2116 x305 1)))))
(assert (=> (< (- x1838 1) 10000) (not (= x1838 (x2116 x754 12)))))
(assert (x1752 x3040))
(assert (= (x598 x1933) (ite (= x789 x1933) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x1933))))
(assert (= (and x1575 x1604) x62))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2116 x208 14))))
(assert (=> (> (+ 10000 1) x2817) (not (= (x2116 x1838 14) x2817))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 0 x3058))))
(assert (not (= (x2116 x990 1) 1029106033)))
(assert (x853 x1073))
(assert (not (= 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2116 0 x2810))))
(assert (= (x2976 x772) (ite (= x772 x1906) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2911 x772))))
(assert (x853 x935))
(assert (not (= (x2116 0 x1916) 274184521717934524641157099916833587233)))
(assert (= (ite (= x772 x303) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1851 x772)) (x817 x772)))
(assert (x853 x2283))
(assert (x853 x1306))
(assert (x853 x779))
(assert (=> (= (x2116 0 x2267) (x2116 0 x2204)) (= x2267 x2204)))
(assert (=> (= (x2116 1 x2630) (x2116 x2462 11)) (and (= 11 x2630) (= 1 x2462))))
(assert (x853 x1314))
(assert (x856 x1869))
(assert (x853 x1442))
(assert (x853 x351))
(assert (not (= (x2116 0 x2267) 0)))
(assert (=> (< (- x1324 1) 10000) (not (= x1324 (x2116 x2672 13)))))
(assert (not (= (x2116 x2964 14) 24384142)))
(assert (= (=> (= (= 0 x783) x1974) (and (=> (not x1974) x1086) (=> x1974 x1795))) x2028))
(assert (= x1488 (or (and x936 x312) (and x1977 (not x773)))))
(assert (x1433 x422 x2133))
(assert (=> (< (- x422 1) 10000) (not (= (x2116 0 x2204) x422))))
(assert (=> (> (+ 10000 1) x305) (not (= (x2116 x990 1) x305))))
(assert (not (= (x2116 x422 6) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (x853 x2320))
(assert (not (= 1100000000000000000 (x2116 1 x2630))))
(assert (not (= (x2116 1 x2630) 100000000000000)))
(assert (x856 x2041))
(assert (not (= (x2116 x2462 14) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= 0 (x2116 0 x2204))))
(assert (not (= 117300739 (x2116 x2964 14))))
(assert (=> (> (+ 10000 1) x698) (not (= x698 (x2116 0 x92)))))
(assert (=> (= (x2116 1 x2630) (x2116 x2462 12)) (and (= 1 x2462) (= x2630 12))))
(assert (x853 x1105))
(assert (not (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2116 x2187 1))))
(assert (= (=> (= x2178 (= x2433 0)) (and (=> (not x2178) x2376) (=> x2178 x1795))) x1228))
(assert (not (= 1889567281 (x2116 x305 1))))
(assert (= (and x1708 x1474) x1171))
(assert (not (= (x2116 x2462 15) (x2116 x1838 14))))
(assert (= (x1929 x1933) (ite (= x1933 x1639) x3087 (x2920 x1933))))
(assert (x856 x2121))
(assert (= (and x3027 (not x668)) x1495))
(assert (not (= 274184521717934524641157099916833587206 (x2116 x305 1))))
(assert (x853 x466))
(assert (= (x1240 x2174) (ite (= x2473 x2174) x766 (x1567 x2174))))
(assert (x853 x686))
(assert (not (= 549896565 (x2116 x422 6))))
(assert (not (= 826074471 (x2116 x2817 11))))
(assert (= x50 (and x1302 (not x1371))))
(assert (not (= (x2116 1 x2406) 4294967295)))
(assert (x853 x1837))
(assert (x856 x3181))
(assert (= x1607 (or x1988 (and x1063 x798))))
(assert (not (= (x2116 x208 14) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x2116 x208 14) (x2116 x305 1))))
(assert (= x2875 (=> (and (= x1786 (> x1414 0)) (= x1414 (x28 x2627))) (and (=> x1786 x2554) (=> (and (not x1786) (= x752 x2962) (= x2510 0) (= 0 x347)) x371)))))
(assert (x853 x1957))
(assert (= (ite (= x2538 x2959) x890 (x2042 x2959)) (x1153 x2959)))
(assert (x853 x3181))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 x2964 14))))
(assert (not (= 14 (x2116 1 x2406))))
(assert (x853 x1287))
(assert (not (= 15 (x2116 x2672 13))))
(assert (not (= (x2116 1 x2630) 1000000000000000000)))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x2462 11))))
(assert (= x1310 (=> (and (= x2763 (x1111 18446744073709551615 x2781)) (= x900 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1663))) (= x2781 (x1848 x80)) (= x2700 (= 0 x1761)) (= (ite (< x900 x2763) 1 0) x306) (= x80 (x2858 (+ x45 64))) (= (= x1663 0) x983) (= x1957 (ite (not x983) 1 0)) (= (x1111 x1957 x306) x1761)) (and (=> x2700 x1821) (=> (not x2700) x1795)))))
(assert (x853 x1663))
(assert (=> (> (+ 10000 1) x1838) (not (= x1838 (x2116 x422 6)))))
(assert (not (= 1000000000000000000000000000000000000 (x2116 x2462 13))))
(assert (=> (> (+ 10000 1) x2964) (not (= x2964 (x2116 x2462 13)))))
(assert (=> (= (x2116 x1990 1) (x2116 x305 1)) (= x305 x1990)))
(assert (not (= (x2116 x2964 14) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (not (= (x2116 0 x92) 549896565)))
(assert (not (= (x2116 x1422 1) 14)))
(assert (= (ite (and (not x1832) x2125) (x2911 x1933) (x2189 x1933)) (x830 x1933)))
(assert (not (= (x2116 x208 14) (x2116 x1990 1))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 x1422 1))))
(assert (x720 x5 x1))
(assert (= (and x73 (not x2158)) x804))
(assert (not (= 1100000000000000000 (x2116 1 x2406))))
(assert (= x233 (and x32 (not x1335))))
(assert (= (x2261 x2312) (ite (and x1557 (not x170)) (x1566 x2312) (ite (and x3060 (not x1501)) (x1566 x2312) (x1507 x2312)))))
(assert (x853 x2084))
(assert (x856 18446744073709551615))
(assert (not (= (x2116 x2462 15) (x2116 x77 1))))
(assert (=> (= (x2116 0 x1916) (x2116 x2817 11)) (and (= 11 x1916) (= 0 x2817))))
(assert (x853 x87))
(assert (not (= (x2116 1 x2406) 1029106033)))
(assert (not (= (x2116 x2462 15) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (=> (= (x2116 x754 12) (x2116 x2462 12)) (= x2462 x754)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 0 x3058))))
(assert (not (= (x2116 0 x3058) 1000000000000000000000000000000000000)))
(assert (=> (< (- x2964 1) 10000) (not (= (x2116 x2817 11) x2964))))
(assert (= (=> (and (= x196 (x1683 x1521)) (= x493 (< 0 x196)) (= (x2561 x637) x2407)) (and (=> (not x493) x1795) (=> x493 x2693))) x365))
(assert (= x1830 (=> (and (= x2876 (> x1114 x1871)) (= x1114 (x2561 x637)) (= (x2858 (+ x1221 32)) x637)) (and (=> (not x2876) x1717) (=> x2876 x83)))))
(assert (= x448 (=> (and (not (< x679 4)) (= x2730 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (x2275 274184521717934524641157099916833587202) x2702) (= (or (and (> 32 x2180) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2180) true)) (> x2180 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2034) (> x2702 0) (= x266 x679) (= (x1936 (- x679 4)) x2180) (not (= x2327 826074471)) (= 36 x679) (= 1889567281 x2327) (= x2187 x682) (not (< x2327 826074471))) (and (=> x2034 x424) (=> (not x2034) x1705)))))
(assert (=> (< (- x104 1) 10000) (not (= x104 (x2116 x1838 14)))))
(assert (x853 x1945))
(assert (= x1048 (=> (and (= (x1359 x2755) x2652) (= 0 x184) (= 1 x582) (= (x1111 x582 x184) x2517) (= (= 0 x2517) x2484)) (and (=> (not x2484) x1795) (=> (and (= x2683 (x1111 1461501637330902918203684832716283019655932542975 x2022)) (= (< 0 x1139) x2677) (>= x183 0) x2484 (>= 1461501637330902918203684832716283019655932542975 x183) (> 1461501637330902918203684832716283019655932542976 x183) (= x2850 (x2858 (+ x2695 4))) (or (and (= x1139 x1559) (not x2677)) (and (< x2670 4294967296) x2677 (= x1559 1)))) x2983)))))
(assert (not (= (x2116 0 x1916) 18446744073709551615)))
(assert (not (= 4294967295 (x2116 x990 1))))
(assert (x853 x242))
(assert (= (x1124 x2811) (ite (= x2811 x931) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x76 x2811))))
(assert (not (= (x2116 x698 1) (x2116 x422 6))))
(assert (not (= 14 (x2116 x2462 13))))
(assert (not (= (x2116 1 x2406) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x2116 x2964 14) 6)))
(assert (x853 x2597))
(assert (x856 x2508))
(assert (x853 x1106))
(assert (= (x1113 x2811) (ite (= x2811 x1962) x639 (x1802 x2811))))
(assert (= (ite (and (not x170) x1557) (x1846 x772) (ite (and x3060 (not x1501)) (x1846 x772) (x114 x772))) (x2625 x772)))
(assert (x853 x2433))
(assert (x1752 x1324))
(assert (not (= (x2116 x2462 12) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x853 x2974))
(assert (not (= 274184521717934524641157099916833587202 (x2116 x2672 13))))
(assert (x853 x372))
(assert (= (x1755 x1933) (ite (= x1933 x2567) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1270 x1933))))
(assert (= (=> (and (= (= x2161 0) x1118) (= x593 96) (= x555 96) (= (x791 x1945) x2161)) (and (=> (and (= x2978 (x2858 (+ 224 x574))) (= x1345 x1229) x1118 (= x2978 x95) (= x2336 x574) (= x1038 x2485)) x2033) (=> (not x1118) x770))) x2646))
(assert (x1433 x891 x544))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 x2817 11))))
(assert (x856 x1847))
(assert (x853 x2303))
(assert (not (= (x2116 0 x2810) (x2116 1 x2406))))
(assert (=> (= (x2116 x2458 6) (x2116 1 x2630)) (and (= x2458 1) (= 6 x2630))))
(assert (not (= 117300739 (x2116 x2462 14))))
(assert (=> (< (- x305 1) 10000) (not (= x305 (x2116 0 x1916)))))
(assert (not (= (x2116 x2462 14) 17732073718202638403566719794745014173351532837126370201055734736014230421504)))
(assert (= x1787 (or x118 x1083)))
(assert (not (= 274184521717934524641157099916833587206 (x2116 1 x2630))))
(assert (= (x626 x450) (ite (= x450 x484) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1903 x450))))
(assert (x853 x901))
(assert (x1370 x582 x184))
(assert (=> (< (- x208 1) 10000) (not (= (x2116 x2817 11) x208))))
(assert (= x2430 (or x2689 (and x1360 x2198))))
(assert (x853 x2020))
(assert (x853 x1236))
(assert (x853 x1539))
(assert (x853 x2747))
(assert (= (x1846 x2239) (ite (and x8 x2885 x2661) (x2361 x2239) (x1153 x2239))))
(assert (= (x1903 x2055) (ite (and (not x2882) x141) (x2625 x2055) (ite (and (not x2442) x921) (x707 x2055) (x2265 x2055)))))
(assert (not (= (x2116 x1990 1) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (x853 x545))
(assert (not (= (x2116 x698 1) 15)))
(assert (x853 x2933))
(assert (not (= (x2116 0 x2267) 18446744073709551616)))
(assert (not (= (x2116 1 x2630) 4294967295)))
(assert (x853 x315))
(assert (x853 x1981))
(assert (not (= (x2116 0 x2267) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (=> (= (x2116 0 x1916) (x2116 x2462 11)) (and (= x1916 11) (= x2462 0))))
(assert (=> (< (- x2672 1) 10000) (not (= x2672 (x2116 x2672 13)))))
(assert (not (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x2116 0 x1916))))
(assert (=> (> (+ 10000 1) x422) (not (= x422 (x2116 x1990 1)))))
(assert (not (= (x2116 x2462 15) 14)))
(assert (=> (= (x2116 0 x2204) (x2116 x2187 1)) (and (= x2187 0) (= 1 x2204))))
(assert (not (= 1889567281 (x2116 0 x1916))))
(assert (x720 x2041 x2332))
(assert (not (= 12 (x2116 x1324 1))))
(assert (=> (< (- x1990 1) 10000) (not (= x1990 (x2116 0 x92)))))
(assert (= (ite (= x411 x2959) 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2570 x2959)) (x25 x2959)))
(assert (= (x129 x2756) (ite (= x1740 x2756) x2719 (x1944 x2756))))
(assert (=> (> (+ 10000 1) x3040) (not (= x3040 (x2116 x2187 1)))))
(assert (=> (> (+ 10000 1) x754) (not (= x754 (x2116 x2462 11)))))
(assert (x853 x1970))
(assert (= x1227 (=> (and (= (x1162 x893) x602) (= (= x602 x1485) x2709) (= (x1111 18446744073709551615 x602) x1485)) (and (=> (not x2709) x1795) (=> x2709 x1634)))))
(assert (not (= 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2116 x2964 14))))
(assert (not (= 18446744073709551615 (x2116 x2964 14))))
(assert (= x1406 (and x2450 (not x974))))
(assert (= x283 (and x1505 x233)))
(assert (x853 x1210))
(assert (= x3100 (and x3155 (not x57))))
(assert (= (ite (and (not x1528) x2720) (x1903 x1933) (x1586 x1933)) (x2626 x1933)))
(assert (x853 x930))
(assert (x853 x892))
(assert (not (= (x2116 x2458 6) 1000000000000000000000000000000000000)))
(assert (x1752 x1838))
(assert (=> (< (- x2462 1) 10000) (not (= (x2116 0 x1916) x2462))))
(assert (not (= 15 (x2116 x77 1))))
(assert (not (= (x2116 x422 6) (x2116 x77 1))))
(assert (= x2071 (and x50 (not x1646))))
(assert (= (and x3074 (not x1520)) x821))
(assert (not (= (x2116 x2462 14) 1000000000)))
(assert (=> (< (- x1838 1) 10000) (not (= (x2116 0 x1916) x1838))))
(assert (=> (> (+ 10000 1) x104) (not (= (x2116 x2672 13) x104))))
(assert (= 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x1677 x2132)))
(assert (not (= 4294967296 (x2116 1 x2630))))
(assert (not (= (x2116 x990 1) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (x853 x955))
(assert (x853 x1937))
(assert (not (= (x2116 x422 6) (x2116 x754 12))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2116 0 x2267))))
(assert (= (ite (= x2120 x2386) x1366 (x1054 x2386)) (x2045 x2386)))
(assert (=> (= (x2116 x1324 1) (x2116 x305 1)) (= x305 x1324)))
(assert (not (= (x2116 x1324 1) 82011359234811911920576981652393854074763270874787770258300864570283100471296)))
(assert (=> (< (- x754 1) 10000) (not (= (x2116 x305 1) x754))))
(assert (not (= (x2116 x2462 12) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x853 x1181))
(assert (not (= (x2116 x2462 12) 404098525)))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 0 x2204) x990))))
(assert (x853 x491))
(assert (=> (> (+ 10000 1) x2462) (not (= (x2116 x698 1) x2462))))
(assert (not (= 4294967296 (x2116 0 x92))))
(assert (= x1690 (=> (= x1158 (= 0 x204)) (and (=> x1158 x1795) (=> (not x1158) x1430)))))
(assert (= x3010 (=> (and (= x1891 (x1936 (- x2502 4))) (= (or (> x1891 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1891) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1891)))) x1721) (= x2502 36) (not (> 4 x2502)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1284) (= x2435 x3151) (not (< x235 826074471)) (< 0 x1297) (= 1889567281 x235) (= x1297 (x2275 274184521717934524641157099916833587202)) (= x185 x2502) (not (= x235 826074471))) (and (=> (not x1721) x187) (=> x1721 x1254)))))
(assert (=> (< (- x1990 1) 10000) (not (= (x2116 x422 6) x1990))))
(assert (not (= (x2116 x2462 12) 100000000000000)))
(assert (= x585 (and x186 x1028)))
(assert (not (= (x2116 x698 1) 1000000000000000000)))
(assert (= (x601 x2478) (ite (= x545 x2478) x682 (x1626 x2478))))
(assert (= (and x2868 (not x1168)) x281))
(assert (not (= (x2116 x422 6) (x2116 x2462 12))))
(assert (= (ite (= x1906 x1933) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2911 x1933)) (x2976 x1933)))
(assert (x853 x2798))
(assert (not (= (x2116 x2462 13) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (> (+ 10000 1) x422) (not (= (x2116 x2462 14) x422))))
(assert (not (= (x2116 x2187 1) (x2116 x2462 12))))
(assert (=> (< (- x1990 1) 10000) (not (= x1990 (x2116 x305 1)))))
(assert (=> (= (x2116 x2462 14) (x2116 1 x2406)) (and (= x2462 1) (= 14 x2406))))
(assert (=> (= (x2116 x754 12) (x2116 0 x2267)) (and (= x2267 12) (= x754 0))))
(assert (not (= (x2116 x2462 11) (x2116 x208 14))))
(assert (x853 x1130))
(assert (x853 x2719))
(assert (x853 x729))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x2116 x754 12)))))
(assert (=> (= (x2116 0 x3058) (x2116 x2462 13)) (and (= 0 x2462) (= 13 x3058))))
(assert (not (= (x2116 x1838 14) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (= (ite (and x1540 x3121 x723) (x3105 x2055) (x1915 x2055)) (x1162 x2055)))
(assert (x853 x1372))
(assert (= (ite (= x2055 x2473) x766 (x1567 x2055)) (x1240 x2055)))
(assert (= (x1492 x1933) (ite (= x752 x1933) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2830 x1933))))
(assert (not (= (x2116 x2462 15) 1889567281)))
(assert (= (and (not x2635) x1781) x2127))
(assert (=> (= (x2116 0 x2810) (x2116 0 x3058)) (= x2810 x3058)))
(assert (not (= (x2116 x1990 1) 157198259)))
(assert (not (= 1029106033 (x2116 0 x2204))))
(assert (=> (= (x2116 1 x2630) (x2116 x1324 1)) (and (= x2630 1) (= 1 x1324))))
(assert (x853 x1489))
(assert (=> (< (- x698 1) 10000) (not (= x698 (x2116 x2462 12)))))
(assert (= (x25 x411) 72464927124685711895252664195178772226123872012682517813167109100718830649344))
(assert (not (= 1100000000000000000 (x2116 x2462 15))))
(assert (x856 x854))
(assert (=> (< (- x2817 1) 10000) (not (= (x2116 x2462 15) x2817))))
(assert (not (= (x2116 0 x3058) 1000000000)))
(assert (= (x601 x2959) (ite (= x545 x2959) x682 (x1626 x2959))))
(assert (not (= 549896565 (x2116 x2458 6))))
(assert (= (x748 x1241) (ite (and x1805 x39) (x90 x1241) (x1467 x1241))))
(assert (= (x2759 x2055) (ite (= x2055 x2967) x2462 (x918 x2055))))
(assert (not (= 0 (x2116 x1324 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 0 x1916))))
(assert (x853 x486))
(assert (not (= (x2116 0 x3058) 18446744073709551616)))
(assert (= (ite (= x2723 x2959) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x2959)) (x383 x2959)))
(assert (x853 x2760))
(assert (not (= (x2116 x1838 14) (x2116 x2817 11))))
(assert (not (= 1100000000000000000 (x2116 0 x2267))))
(assert (x853 x2711))
(assert (= (ite (= x1933 x2120) x1366 (x1054 x1933)) (x2045 x1933)))
(assert (not (= 4294967295 (x2116 0 x2810))))
(assert (not (= 1000000000 (x2116 0 x2204))))
(assert (not (= (x2116 x1990 1) 1000000000000000000000000000000000000)))
(assert (not (= (x2116 x990 1) (x2116 x2817 11))))
(assert (not (= 274184521717934524641157099916833587206 (x2116 x2462 11))))
(assert (= (and x1810 x954) x2387))
(assert (= (ite (= x2894 x2239) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x680 x2239)) (x2371 x2239)))
(assert (=> (= (x2116 x2187 1) (x2116 0 x92)) (and (= x2187 0) (= 1 x92))))
(assert (not (= (x2116 x990 1) 1000000000000000000)))
(assert (= (ite (= x1933 x2538) x890 (x2042 x1933)) (x1153 x1933)))
(assert (= x1844 (and x1305 x2965)))
(assert (=> (< (- x422 1) 10000) (not (= (x2116 1 x2406) x422))))
(assert (= (x342 x2386) (ite (= x2386 x888) x1032 (x1451 x2386))))
(assert (x853 x688))
(assert (=> (< (- x422 1) 10000) (not (= (x2116 x2458 6) x422))))
(assert (= (ite (and x3121 x1540 x723) (x3105 x893) (x1915 x893)) (x1162 x893)))
(assert (x1433 x1524 x1894))
(assert (=> (< (- x2462 1) 10000) (not (= x2462 (x2116 x2458 6)))))
(assert (=> (> (+ 10000 1) x208) (not (= x208 (x2116 x2462 15)))))
(assert (= (=> (and (= (= 274184521717934524641157099916833587206 x933) x1320) (= (x1111 1461501637330902918203684832716283019655932542975 x1624) x933) (= x1825 (x2858 (+ 4 x314))) (= x2225 (x778 x2132)) (= (x1111 1461501637330902918203684832716283019655932542975 x2729) x1391) (= (x1936 (- x670 x314)) x1476) (= x670 (x2858 (+ x314 36)))) (and (=> (not x1320) x2299) (=> x1320 x2698))) x1599))
(assert (x856 x694))
(assert (= x366 (and x3060 x1501)))
(assert (not (= (x2116 x2462 14) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x853 x3103))
(assert (= (ite (= x1615 x1933) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x1686 x1933)) (x797 x1933)))
(assert (= x330 (=> (and (= x344 (> x1676 0)) (= x1676 (x1683 x1521))) (and (=> (not x344) x1795) (=> x344 x2828)))))
(assert (x853 x1658))
(assert (x853 x3165))
(assert (= x1547 (=> (and (= (= x698 x1391) x393) (= x698 x2414)) (and (=> (not x393) x2754) (=> (and (= 1 x1562) (<= x147 115792089237316195423570985008687907853269984665640564039457584007913129639935) x393 (= (x2116 x698 1) x1246) (= (x2988 x1246) x147) (<= 0 x147) (= x2061 32)) x2535)))))
(assert (not (= (x2116 x2462 13) 18446744073709551615)))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 0 x3058))))
(assert (x856 x1307))
(assert (not (= 274184521717934524641157099916833587233 (x2116 x422 6))))
(assert (not (= 4294967296 (x2116 x2462 13))))
(assert (= (x383 x1142) (ite (= x2723 x1142) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x1142))))
(assert (= (=> (and (= (x2858 (+ x1151 31)) x1307) (= x2695 (x2858 (+ x2755 x1949))) (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1307) x1949) (= x2990 (or (> x1151 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1151) true) (< x1151 32))))) (and (=> (not x2990) x1048) (=> x2990 x1795))) x313))
(assert (= (and x1738 (not x6)) x1907))
(assert (= (and x2155 x2960) x1384))
(assert (x853 x1468))
(assert (= (ite (= x2174 x545) x682 (x1626 x2174)) (x601 x2174)))
(assert (= (=> (= (< 0 x2867) x2416) (and (=> x2416 x2713) (=> (and (= 0 x1959) (not x2416)) x2599))) x2150))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 1 x2406) x990))))
(assert (not (= (x2116 x2817 11) 12)))
(assert (= (x1326 x450) (ite (= x450 x1825) x1391 (x1301 x450))))
(assert (= (ite (= x2538 x2478) x890 (x2042 x2478)) (x1153 x2478)))
(assert (x853 x421))
(assert (x853 x2566))
(assert (= (ite (= x2283 x772) x1450 (x1665 x772)) (x173 x772)))
(assert (= (ite (= x2567 x1142) 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x1270 x1142)) (x1755 x1142)))
(assert (not (= 66649967879025377632792054650135220247173487182192293797349964221703864188928 (x2116 x422 6))))
(assert (x853 x2193))
(assert (= (=> (and (= x1550 (> x2771 4)) (= x2771 (x3134 128))) (and (=> (and (= x1870 (= x2771 3)) (= (not x1870) x446) (not x1550)) x1192) (=> x1550 x1795))) x599))
(assert (not (= (x2116 0 x1916) 1461501637330902918203684832716283019655932542976)))
(assert (not (= 100000000000000 (x2116 0 x92))))
(assert (not (= (x2116 1 x2630) (x2116 0 x2267))))
(assert (not (= (x2116 x2462 14) 114004622612207947607358650692132104809471428260693408755609835181222483984384)))
(assert (not (= (x2116 0 x92) (x2116 1 x2406))))
(assert (not (= 6 (x2116 x754 12))))
(assert (=> (< (- x2964 1) 10000) (not (= x2964 (x2116 x990 1)))))
(assert (= (x2830 x772) (ite x2966 (ite (and x2507 (not x2558)) (x2024 x772) (x81 x772)) (x830 x772))))
(assert (= x562 (and x2190 (not x693))))
(assert (x853 x119))
(assert (= (x1240 x450) (ite (= x2473 x450) x766 (x1567 x450))))
(assert (= (ite x2966 (ite (and (not x2558) x2507) (x2024 x2386) (x81 x2386)) (x830 x2386)) (x2830 x2386)))
(assert (x853 x382))
(assert (x856 x1472))
(assert (not (= (x2116 x2964 14) 1461501637330902918203684832716283019655932542976)))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 x2672 13))))
(assert (=> (< (- x2187 1) 10000) (not (= x2187 (x2116 x422 6)))))
(assert (not (= (x2116 0 x2204) 66649967879025377632792054650135220247173487182192293797349964221703864188928)))
(assert (not (= (x2116 x2462 12) 157198259)))
(assert (not (= (x2116 x305 1) (x2116 x2672 13))))
(assert (=> (= (x2116 x2462 14) (x2116 0 x92)) (and (= x2462 0) (= x92 14))))
(assert (not (= (x2116 x2672 13) 274184521717934524641157099916833587233)))
(assert (= (ite (and (not x3094) x1641) (x2625 x2478) (ite (and x2868 (not x1168) x1389) (x1797 x2478) (x2045 x2478))) (x707 x2478)))
(assert (x856 x3001))
(assert (not (= (x2116 0 x2810) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (= (=> (and (= (x2561 x637) x462) (= (< x1871 x462) x1235)) (and (=> x1235 x1795) (=> (and (= x1441 x2183) (= x1366 x1385) (= (x1936 (- x1871 x462)) x2183) (not x1235)) x2621))) x2136))
(assert (= x1101 (and x2559 x1473)))
(assert (not (= (x2116 x1324 1) 18446744073709551616)))
(assert (= (ite (= x1825 x1142) x1391 (x1301 x1142)) (x1326 x1142)))
(assert (=> (< (- x1990 1) 10000) (not (= x1990 (x2116 x2462 12)))))
(assert (not (= (x2116 0 x92) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2116 0 x2204))))
(assert (x1752 x2672))
(assert (not (= (x2116 x990 1) 66649967879025377632792054650135220247173487182192293797349964221703864188928)))
(assert (not (= 24384142 (x2116 x422 6))))
(assert (= (ite (and x2130 x1883 x1600) (x763 x1933) (x598 x1933)) (x1686 x1933)))
(assert (= (x2907 x2239) (ite (= x2239 x1845) x2257 (x496 x2239))))
(assert (x853 x2787))
(assert (not (= (x2116 x2187 1) 44395970461086736973283237333058543406559139065774293556605953168515344105472)))
(assert (not (= (x2116 x2462 11) 18446744073709551616)))
(assert (not (= (x2116 0 x2810) 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x853 x361))
(assert (not (= (x2116 x2458 6) 157198259)))
(assert (=> (< (- x422 1) 10000) (not (= x422 (x2116 x2462 11)))))
(assert (not (= (x2116 0 x2810) 1461501637330902918203684832716283019655932542975)))
(assert (=> (= (x2116 x2462 15) (x2116 0 x2810)) (and (= 15 x2810) (= 0 x2462))))
(assert (x853 x2276))
(assert (=> (> (+ 10000 1) x2817) (not (= x2817 (x2116 x698 1)))))
(assert (x853 x437))
(assert (= x497 (and (not x2381) x1022)))
(assert (=> (> (+ 10000 1) x2817) (not (= x2817 (x2116 x2462 12)))))
(assert (= (and x2091 x2799) x231))
(assert (not (= (x2116 x1324 1) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (= (ite (and (not x1528) x2720) (x1903 x2239) (x1586 x2239)) (x2626 x2239)))
(assert (not (= 1000000000 (x2116 x1422 1))))
(assert (x856 x126))
(assert (x853 x1208))
(assert (= x291 (=> (= (= x2989 0) x905) (and (=> (not x905) x490) (=> x905 x1795)))))
(assert (not (= 274184521717934524641157099916833587202 (x2116 0 x3058))))
(assert (=> (= (x2116 1 x2630) (x2116 x305 1)) (and (= x2630 1) (= 1 x305))))
(assert (not (= (x2116 x77 1) 1029106033)))
(assert (x1752 x208))
(assert (= x539 (and x1282 (not x1715))))
(assert (not (= (x2116 1 x2406) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x853 x377))
(assert (not (= (x2116 x2462 12) 549896565)))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 x422 6))))
(assert (= (x342 x1933) (ite (= x1933 x888) x1032 (x1451 x1933))))
(assert (not (= (x2116 0 x2267) 1461501637330902918203684832716283019655932542975)))
(assert (x853 x2270))
(assert (=> (> (+ 10000 1) x222) (not (= (x2116 x2462 14) x222))))
(assert (x856 x134))
(assert (= x1347 (or x530 (and x2466 x1556))))
(assert (=> (> (+ 10000 1) x990) (not (= x990 (x2116 0 x2810)))))
(assert (x853 x2884))
(assert (= x2340 (=> (and (= x2468 x3053) (= x1151 x901)) x924)))
(assert (=> (= (x2116 x1422 1) (x2116 x77 1)) (= x77 x1422)))
(assert (= (ite (= x789 x2055) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2024 x2055)) (x598 x2055)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2116 x2187 1))))
(assert (x853 x1754))
(assert (=> (< (- x2817 1) 10000) (not (= x2817 (x2116 0 x2810)))))
(assert (not (= (x2116 x1838 14) 1461501637330902918203684832716283019655932542975)))
(assert (x853 x564))
(assert (not (= (x2116 x754 12) 274184521717934524641157099916833587206)))
(assert (= x1402 (and x2876 x3054)))
(assert (x853 x1294))
(assert (=> (< (- x104 1) 10000) (not (= (x2116 1 x2630) x104))))
(assert (not (= (x2116 x1838 14) 1)))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x2462 12))))
(assert (= (ite (= x2174 x2469) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2626 x2174)) (x2519 x2174)))
(assert (not (= (x2116 0 x92) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x853 x968))
(assert (= (ite (= x1962 x2174) x639 (x1802 x2174)) (x1113 x2174)))
(assert (= x368 (or x1688 (and x74 x2782))))
(assert (=> (< (- x2187 1) 10000) (not (= x2187 (x2116 x77 1)))))
(assert (x853 x754))
(assert (=> (< (- x305 1) 10000) (not (= (x2116 0 x92) x305))))
(assert (x853 x1765))
(assert (=> (< (- x222 1) 10000) (not (= (x2116 0 x3058) x222))))
(assert (=> (< (- x698 1) 10000) (not (= (x2116 x1990 1) x698))))
(assert (not (= (x2116 0 x1916) 1937038442)))
(assert (= (and x1641 x3094) x1823))
(assert (x853 x1296))
(assert (x853 x2880))
(assert (not (= 11 (x2116 x1838 14))))
(assert (not (= (x2116 x1422 1) 274184521717934524641157099916833587202)))
(assert (=> (< (- x990 1) 10000) (not (= (x2116 x2964 14) x990))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 x2462 12))))
(assert (x853 x811))
(assert (x853 x2220))
(assert (=> (< (- x2458 1) 10000) (not (= x2458 (x2116 0 x2267)))))
(assert (x853 x2460))
(assert (=> (< (- x1838 1) 10000) (not (= x1838 (x2116 0 x2810)))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x2116 x208 14))))
(assert (=> (> (+ 10000 1) x2187) (not (= (x2116 0 x92) x2187))))
(assert (not (= 4294967296 (x2116 x2964 14))))
(assert (= (x1162 x1933) (ite (and x3121 x1540 x723) (x3105 x1933) (x1915 x1933))))
(assert (= x2912 (=> (and (= x3147 (or (and (= (<= x648 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x648)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x648))) (= x2798 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2276)) (= (x2858 (+ x2798 x2132)) x314) (= x2276 (x2858 (+ x648 31)))) (and (=> x3147 x1795) (=> (not x3147) x1599)))))
(assert (x853 x2982))
(assert (=> (< (- x208 1) 10000) (not (= (x2116 x2462 14) x208))))
(assert (not (= (x2116 x208 14) 1000000000000000000000000000000000000)))
(assert (= (x173 x2174) (ite (= x2283 x2174) x1450 (x1665 x2174))))
(assert (not (= (x2116 x2964 14) 15)))
(assert (x853 x824))
(assert (not (= 1100000000000000000 (x2116 0 x1916))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2116 0 x2204))))
(assert (= x2135 (and x189 (not x1041))))
(assert (not (= (x2116 x990 1) 14)))
(assert (x853 x1388))
(assert (x853 x280))
(assert (x853 x43))
(assert (= x2921 (and (not x2037) x1873)))
(assert (= (and (not x649) x3156) x1619))
(assert (not (= 1029106033 (x2116 x208 14))))
(assert (x853 x1624))
(assert (=> (< (- x754 1) 10000) (not (= (x2116 x2462 12) x754))))
(assert (= (x2976 x2386) (ite (= x1906 x2386) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x2911 x2386))))
(assert (= x1805 (or (and x2134 (not x1110)) x2529)))
(assert (not (= 1 (x2116 x990 1))))
(assert (not (= (x2116 0 x2204) 404098525)))
(assert (not (= (x2116 x2964 14) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (not (= (x2116 x2964 14) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x853 x1191))
(assert (=> (< (- x2187 1) 10000) (not (= x2187 (x2116 x2462 14)))))
(assert (not (= 1937038442 (x2116 x2187 1))))
(assert (not (= 1889567281 (x2116 x698 1))))
(assert (not (= 157198259 (x2116 0 x2204))))
(assert (= (x383 x772) (ite (= x772 x2723) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x772))))
(assert (not (= (x2116 x754 12) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (not (= (x2116 x1990 1) (x2116 x2462 11))))
(assert (x853 x800))
(assert (= (=> (and (= x1562 0) (= x2845 x2061)) x2535) x2754))
(assert (= x288 (or (and x1557 (not x170)) x1230)))
(assert (x853 x1644))
(assert (x853 x1398))
(assert (not (= 14262166148461681479388312084279688412379623686150252715788501447688379695104 (x2116 x1422 1))))
(assert (x1370 x2827 x2483))
(assert (= (ite (= x2055 x1962) x639 (x1802 x2055)) (x1113 x2055)))
(assert (x853 x796))
(assert (not (= (x2116 x754 12) (x2116 x2462 11))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x2116 0 x1916))))
(assert (= (x2519 x1933) (ite (= x1933 x2469) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2626 x1933))))
(assert (not (= 24384142 (x2116 x2187 1))))
(assert (= x1474 (and (not x2253) x1907)))
(assert (= (=> (and (= x2153 x1463) (= x1799 x480) (= x3047 x826) (= (< 1 x1315) x558) (= x1441 x221) (not x558) (= (x28 x2627) x1315)) x3055) x1143))
(assert (not (= (x2116 x2964 14) 549896565)))
(assert (= (=> (and (= (x540 x103) x1385) (= (x2858 (+ 32 x1521)) x103) (= (x1011 x1221) x733) (= x2848 (< 0 x733))) (and (=> x2848 x1830) (=> (not x2848) x1795))) x1593))
(assert (x853 x1997))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 x1990 1))))
(assert (= (ite (= x2055 x1825) x1391 (x1301 x2055)) (x1326 x2055)))
(assert (= (x383 x2478) (ite (= x2723 x2478) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x2478))))
(assert (x853 x2901))
(assert (x856 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x853 x532))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 1 x2630))))
(assert (= (ite (= x2723 x2174) 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x3141 x2174)) (x383 x2174)))
(assert (x853 x3169))
(assert (= (x1113 x2239) (ite (= x1962 x2239) x639 (x1802 x2239))))
(assert (not (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2116 x2187 1))))
(assert (x720 x1744 x1346))
(assert (not (= (x2116 x2462 15) 117300739)))
(assert (x853 x979))
(assert (x853 x1422))
(assert (x853 x2426))
(assert (x853 x1995))
(assert (not (= (x2116 x2462 14) (x2116 x2462 12))))
(assert (= (=> (and (= (< 0 x2303) x2632) (= (x28 x2627) x2303)) (and (=> (and (= x1576 (> x2974 0)) x2632 (or (and (not x1576) (= x3026 x2974)) (and x1576 (> 4294967296 x177) (= 1 x3026)))) x728) (=> (not x2632) x1795))) x1400))
(assert (=> (= (x2116 0 x1916) (x2116 0 x2810)) (= x1916 x2810)))
(assert (not (= (x2116 x990 1) 18446744073709551615)))
(assert (= (x2626 x2055) (ite (and (not x1528) x2720) (x1903 x2055) (x1586 x2055))))
(assert (x853 x2393))
(assert (x853 x750))
(assert (x853 x1466))
(assert (=> (= (x2116 0 x2267) (x2116 x77 1)) (and (= 0 x77) (= 1 x2267))))
(assert (not (= (x2116 x1422 1) 12)))
(assert (not (= 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2116 x2672 13))))
(assert (= x810 x1840))
(assert (x853 x293))
(assert (x853 x512))
(assert (not (= 826074471 (x2116 x1838 14))))
(assert (x853 x2216))
(assert (x853 x1584))
(assert (=> (> (+ 10000 1) x2458) (not (= (x2116 x2462 12) x2458))))
(assert (x853 x1979))
(assert (= (x1492 x2959) (ite (= x752 x2959) 114004622612207947607358650692132104809471428260693408755609835181222483984384 (x2830 x2959))))
(assert (not (= (x2116 x754 12) 1029106033)))
(assert (=> (> (+ 10000 1) x2458) (not (= (x2116 0 x92) x2458))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 0 x92))))
(assert (= 33222205748031110454085609023467044101453017019085594488531032467161307152384 (x2371 x2894)))
(assert (x434 x299 x1656 x925 x1146))
(assert (= x516 (=> (and (= x2571 x1229) (= x2714 x2485) (= x566 x95) (= x1799 x2336)) x2033)))
(assert (not (= (x2116 0 x3058) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= (x2116 x2462 14) 11548673047482463375710962565434449992668293034397312241487562681223695302656)))
(assert (x853 x3086))
(assert (=> (> (+ 10000 1) x1838) (not (= x1838 (x2116 x77 1)))))
(assert (= (ite (= x2055 x433) 17732073718202638403566719794745014173351532837126370201055734736014230421504 (x1162 x2055)) (x3011 x2055)))
(assert (= (x2830 x2811) (ite x2966 (ite (and (not x2558) x2507) (x2024 x2811) (x81 x2811)) (x830 x2811))))
(assert (not (= (x2116 0 x2204) 1461501637330902918203684832716283019655932542975)))
(assert (x853 x994))
(assert (= (x1113 x2959) (ite (= x2959 x1962) x639 (x1802 x2959))))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 x2462 11))))
(assert (= (and x1495 (not x1670)) x2666))
(assert (=> (> (+ 10000 1) x698) (not (= x698 (x2116 x698 1)))))
(assert (x856 x1074))
(assert (= (ite (and x604 x207 x3003) (x398 x2469) (x2519 x2469)) (x2738 x2469)))
(assert (=> (< (- x305 1) 10000) (not (= x305 (x2116 x2462 13)))))
(assert (= (ite (= x2306 x487) x2712 (x3015 x487)) (x2390 x487)))
(assert (x853 x942))
(assert (not (= (x2116 0 x92) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (x853 x3139))
(assert (x853 x1978))
(assert (= (and x2803 x338) x926))
(assert (= x2992 (=> (and (= (< 1 x2321) x1403) (= 1 x1382) (= (x2858 (+ 32 x546)) x435) (= (x1111 1461501637330902918203684832716283019655932542975 x1355) x2057)) (and (=> x1403 x378) (=> (and (not x1403) (= x1342 0)) x385)))))
(assert (x853 x1521))
(assert (=> (= (x2116 0 x2204) (x2116 x2964 14)) (and (= 14 x2204) (= x2964 0))))
(assert (not (= (x2116 x2462 13) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= (x2116 1 x2630) 274184521717934524641157099916833587233)))
(assert (not (= (x2116 x1422 1) 11)))
(assert (= (x2589 x2174) (ite (= x2174 x779) x2462 (x570 x2174))))
(assert (x853 x197))
(assert (x853 x374))
(assert (= (and x1543 x249) x1706))
(assert (not (= 82011359234811911920576981652393854074763270874787770258300864570283100471296 (x2116 x1422 1))))
(assert (x853 x2657))
(assert (= (ite (and x1410 x2301) (x250 x637) (x1856 x637)) (x1025 x637)))
(assert (=> (= (x2116 x2462 14) (x2116 0 x3058)) (and (= 14 x3058) (= 0 x2462))))
(assert (=> (> (+ 10000 1) x2672) (not (= (x2116 0 x2267) x2672))))
(assert (=> (= (x2116 0 x2204) (x2116 0 x1916)) (= x1916 x2204)))
(assert (= (=> (and (= x82 (x406 x2431)) (= x1654 (< 0 x82))) (and (=> (and (= (> x881 0) x1363) (= x2710 (x2858 (+ x2431 32))) (= x2849 (x1136 x2710)) x1654 (or (and (= x1723 x881) (not x1363)) (and (> 4294967296 x1313) (= x1723 1) x1363))) x388) (=> (not x1654) x1795))) x1828))
(assert (x853 x2043))
(assert (=> (= (x2116 x1838 14) (x2116 0 x2810)) (and (= x1838 0) (= 14 x2810))))
(assert (= (ite (and x2130 x1883 x1600) (x763 x2055) (x598 x2055)) (x1686 x2055)))
(assert (= x2654 (and (not x1518) x483)))
(assert (not (= 274184521717934524641157099916833587202 (x2116 x422 6))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x2116 x2817 11))))
(assert (=> (> (+ 10000 1) x754) (not (= (x2116 x2672 13) x754))))
(assert (= x3017 (and x1362 x1323)))
(assert (not (= 100000000000000 (x2116 x2462 13))))
(assert (= (x2907 x1933) (ite (= x1845 x1933) x2257 (x496 x1933))))
(assert (x853 x384))
(assert (not (= (x2116 x2672 13) (x2116 x2462 15))))
(assert (not (= (x2116 0 x92) 14)))
(assert (not (= (x2116 x2458 6) (x2116 x1422 1))))
(assert (not (= 44395970461086736973283237333058543406559139065774293556605953168515344105472 (x2116 x2462 14))))
(assert (=> (< (- x1422 1) 10000) (not (= x1422 (x2116 1 x2406)))))
(assert (= (x1677 x1933) (ite (= x1933 x2132) 110392403216551849297085161683814848832260061807319836125361521612794321960960 (x2012 x1933))))
(assert (= (and x2669 x926) x3099))
(assert (x853 x944))
(assert (x1752 x2406))
(assert (= (x797 x1615) 114004622612207947607358650692132104809471428260693408755609835181222483984384))
(assert (not (= (x2116 x2187 1) 14262166148461681479388312084279688412379623686150252715788501447688379695104)))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2116 x2462 11))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2116 x2817 11))))
(assert (not (= (x2116 x2672 13) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= 1029106033 (x2116 x2462 12))))
(assert (x853 x760))
(assert (not (= (x2116 0 x2810) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= (=> (and (= x2123 (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1789)) (= (or (and (= true (<= x1912 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1912)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1912)) x2565) (= x1789 (x2858 (+ x1912 31))) (= x1631 (x2858 (+ x2123 x72)))) (and (=> x2565 x1795) (=> (not x2565) x1479))) x1552))
(assert (x853 x248))
(assert (x853 x3062))
(assert (= x1807 (or (and x761 x1014) (and x2789 x2065))))
(assert (not (= (x2116 1 x2630) 110392403216551849297085161683814848832260061807319836125361521612794321960960)))
(assert (x853 x1636))
(assert (x853 x3075))
(assert (x853 x2682))
(assert (= (or (and x2029 (not x1854)) (and x1935 x2141)) x494))
(assert (= (ite (= x2473 x2811) x766 (x1567 x2811)) (x1240 x2811)))
(assert (=> (> (+ 10000 1) x1990) (not (= (x2116 x990 1) x1990))))
(assert (=> (< (- x222 1) 10000) (not (= (x2116 x1990 1) x222))))
(assert (x853 x2831))
(assert (x853 x2890))
(assert (x856 x955))
(assert (x853 x923))
(assert (x1752 x2187))
(assert (not (= (x2116 x1990 1) 4294967295)))
(assert (not (= 72464927124685711895252664195178772226123872012682517813167109100718830649344 (x2116 0 x2204))))
(assert (=> (> (+ 10000 1) x1422) (not (= (x2116 0 x2810) x1422))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2116 x754 12))))
(assert (x853 x501))
(assert (not (= 11548673047482463375710962565434449992668293034397312241487562681223695302656 (x2116 x208 14))))
(assert (not (= (x2116 x77 1) (x2116 x2817 11))))
(assert (x856 x602))
(assert (not (= 13 (x2116 0 x2204))))
(assert (x853 x2600))
(assert (not (= (x2116 x1324 1) (x2116 x2462 15))))
(assert (x853 x1565))
(assert (x853 x643))
(assert (= x1849 (and x2134 x1110)))
(assert (= (and x2568 (not x1974)) x2190))
(assert (=> (> (+ 10000 1) x990) (not (= (x2116 x2458 6) x990))))
(assert (not (= (x2116 x1422 1) 157198259)))
(assert (= (and x492 (not x928)) x1003))
(assert (not (= 18446744073709551616 (x2116 x2964 14))))
(assert (= x1598 (=> (and (= x661 (x2858 (+ x91 31))) (= x2894 (x2858 (+ x535 x303))) (= x1185 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x91) true) (< x91 32)) (> x91 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639904 x661) x535)) (and (=> x1185 x1795) (=> (not x1185) x318)))))
(assert (x1370 x992 x179))
(assert (x853 x2756))
(assert (not (= 1 (x2116 x2462 13))))
(assert (not (= 11 (x2116 x2462 13))))
(assert (= (ite (and (> (+ x1508 x1622) x2710) (<= x1622 x2710)) (x3113 (+ x1169 (- x2710 x1622))) (x712 x2710)) (x386 x2710)))
(assert (=> (> (+ 10000 1) x1324) (not (= (x2116 1 x2630) x1324))))
(assert (= x2823 (=> (and (= (x31 352) x2124) (= x2100 (> x2124 0))) (and (=> (not x2100) x1795) (=> x2100 x1534)))))
(check-sat)
