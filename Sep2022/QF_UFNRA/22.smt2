(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-fun x202 (Real) Real)
(declare-fun x174 () Real)
(declare-fun x238 () Real)
(declare-fun x279 () Real)
(declare-fun x296 () Real)
(declare-fun x534 () Real)
(declare-fun x193 () Real)
(declare-fun x74 (Real) Real)
(declare-fun x35 () Bool)
(declare-fun x239 () Real)
(declare-fun x385 () Bool)
(declare-fun x557 () Bool)
(declare-fun x316 () Real)
(declare-fun x43 () Real)
(declare-fun x608 () Real)
(declare-fun x423 () Real)
(declare-fun x428 () Real)
(declare-fun x605 () Real)
(declare-fun x454 () Real)
(declare-fun x101 () Real)
(declare-fun x355 () Real)
(declare-fun x667 () Bool)
(declare-fun x313 () Bool)
(declare-fun x230 () Real)
(declare-fun x452 () Bool)
(declare-fun x222 () Real)
(declare-fun x621 () Real)
(declare-fun x593 () Real)
(declare-fun x486 () Bool)
(declare-fun x219 () Real)
(declare-fun x405 () Real)
(declare-fun x326 () Real)
(declare-fun x459 () Real)
(declare-fun x573 () Real)
(declare-fun x530 () Real)
(declare-fun x132 () Real)
(declare-fun x659 () Bool)
(declare-fun x506 () Real)
(declare-fun x430 () Real)
(declare-fun x270 () Real)
(declare-fun x246 () Real)
(declare-fun x44 () Real)
(declare-fun x289 () Real)
(declare-fun x97 (Real) Real)
(declare-fun x662 () Real)
(declare-fun x606 () Real)
(declare-fun x559 () Real)
(declare-fun x395 () Real)
(declare-fun x538 () Real)
(declare-fun x216 () Bool)
(declare-fun x7 () Real)
(declare-fun x256 () Real)
(declare-fun x618 () Bool)
(declare-fun x298 () Real)
(declare-fun x678 () Real)
(declare-fun x579 () Bool)
(declare-fun x449 () Real)
(declare-fun x390 () Bool)
(declare-fun x1 () Real)
(declare-fun x681 () Real)
(declare-fun x340 () Real)
(declare-fun x267 () Real)
(declare-fun x48 () Real)
(declare-fun x521 () Real)
(declare-fun x365 (Real) Real)
(declare-fun x328 () Real)
(declare-fun x482 () Bool)
(declare-fun x583 () Real)
(declare-fun x636 () Real)
(declare-fun x330 () Real)
(declare-fun x139 () Real)
(declare-fun x70 () Real)
(declare-fun x290 () Real)
(declare-fun x565 () Real)
(declare-fun x453 () Bool)
(declare-fun x191 () Real)
(declare-fun x59 () Real)
(declare-fun x592 () Real)
(declare-fun x36 () Real)
(declare-fun x650 () Real)
(declare-fun x33 () Real)
(declare-fun x611 () Bool)
(declare-fun x114 () Bool)
(declare-fun x156 () Real)
(declare-fun x288 () Bool)
(declare-fun x571 () Real)
(declare-fun x329 () Real)
(declare-fun x285 () Bool)
(declare-fun x39 () Real)
(declare-fun x464 () Real)
(declare-fun x503 () Real)
(declare-fun x600 () Real)
(declare-fun x21 () Real)
(declare-fun x448 () Real)
(declare-fun x688 () Real)
(declare-fun x625 () Bool)
(declare-fun x604 () Real)
(declare-fun x584 () Real)
(declare-fun x553 (Real) Real)
(declare-fun x505 () Real)
(declare-fun x299 () Real)
(declare-fun x619 () Real)
(declare-fun x137 () Real)
(declare-fun x214 () Real)
(declare-fun x51 () Real)
(declare-fun x203 () Real)
(declare-fun x540 () Real)
(declare-fun x663 () Bool)
(declare-fun x446 () Real)
(declare-fun x458 () Bool)
(declare-fun x351 () Bool)
(declare-fun x243 () Real)
(declare-fun x79 () Real)
(declare-fun x100 () Real)
(declare-fun x122 () Bool)
(declare-fun x153 () Real)
(declare-fun x353 () Real)
(declare-fun x155 () Real)
(declare-fun x649 () Real)
(declare-fun x644 () Real)
(declare-fun x332 () Real)
(declare-fun x146 () Real)
(declare-fun x679 () Bool)
(declare-fun x610 () Bool)
(declare-fun x380 () Bool)
(declare-fun x341 () Real)
(declare-fun x343 () Real)
(declare-fun x491 () Real)
(declare-fun x404 () Bool)
(declare-fun x435 () Real)
(declare-fun x295 () Bool)
(declare-fun x350 () Bool)
(declare-fun x181 () Real)
(declare-fun x163 () Real)
(declare-fun x510 () Real)
(declare-fun x488 () Real)
(declare-fun x108 () Bool)
(declare-fun x89 () Bool)
(declare-fun x561 () Real)
(declare-fun x414 (Real) Real)
(declare-fun x308 () Real)
(declare-fun x434 () Real)
(declare-fun x641 () Real)
(declare-fun x381 () Real)
(declare-fun x487 () Real)
(declare-fun x37 () Real)
(declare-fun x327 () Bool)
(declare-fun x479 () Real)
(declare-fun x687 () Real)
(declare-fun x617 () Real)
(declare-fun x369 () Real)
(declare-fun x656 () Real)
(declare-fun x10 () Real)
(declare-fun x563 () Real)
(declare-fun x141 () Real)
(declare-fun x497 () Real)
(declare-fun x164 () Real)
(declare-fun x286 () Bool)
(declare-fun x323 () Bool)
(declare-fun x356 () Real)
(declare-fun x241 () Bool)
(declare-fun x319 (Real Real) Real)
(declare-fun x614 () Real)
(declare-fun x83 () Real)
(declare-fun x263 () Real)
(declare-fun x590 () Real)
(declare-fun x483 () Real)
(declare-fun x531 () Bool)
(declare-fun x20 () Real)
(declare-fun x555 () Real)
(declare-fun x470 () Bool)
(declare-fun x500 (Real) Real)
(declare-fun x200 () Real)
(declare-fun x527 () Bool)
(declare-fun x640 () Bool)
(declare-fun x672 () Real)
(declare-fun x65 () Bool)
(declare-fun x384 () Bool)
(declare-fun x529 () Real)
(declare-fun x151 () Real)
(declare-fun x24 () Real)
(declare-fun x386 () Real)
(declare-fun x444 () Real)
(declare-fun x653 () Bool)
(declare-fun x254 () Real)
(declare-fun x337 () Real)
(declare-fun x178 () Real)
(declare-fun x334 (Real) Real)
(declare-fun x682 () Real)
(declare-fun x349 () Real)
(declare-fun x166 () Real)
(declare-fun x421 () Real)
(declare-fun x630 () Real)
(declare-fun x268 () Real)
(declare-fun x646 () Bool)
(declare-fun x23 () Bool)
(declare-fun x554 () Real)
(declare-fun x518 () Real)
(declare-fun x651 () Bool)
(declare-fun x77 () Real)
(declare-fun x536 () Real)
(declare-fun x120 () Real)
(declare-fun x471 () Bool)
(declare-fun x274 () Real)
(declare-fun x669 () Real)
(declare-fun x574 () Real)
(declare-fun x220 () Real)
(declare-fun x234 () Bool)
(declare-fun x225 () Real)
(declare-fun x233 () Real)
(declare-fun x281 () Real)
(declare-fun x119 () Real)
(declare-fun x624 () Real)
(declare-fun x99 () Bool)
(declare-fun x199 () Real)
(declare-fun x425 () Real)
(declare-fun x544 () Bool)
(declare-fun x215 () Bool)
(declare-fun x410 () Bool)
(declare-fun x46 () Real)
(declare-fun x377 () Bool)
(declare-fun x111 () Real)
(declare-fun x311 () Real)
(declare-fun x535 () Real)
(declare-fun x206 () Real)
(declare-fun x90 () Real)
(declare-fun x211 () Real)
(declare-fun x357 () Bool)
(declare-fun x514 () Real)
(declare-fun x654 () Bool)
(declare-fun x192 () Bool)
(declare-fun x360 () Real)
(declare-fun x397 () Real)
(declare-fun x84 () Real)
(declare-fun x665 () Real)
(declare-fun x75 () Real)
(declare-fun x372 () Real)
(declare-fun x110 () Real)
(declare-fun x364 () Real)
(declare-fun x552 () Real)
(declare-fun x87 () Real)
(declare-fun x154 () Real)
(declare-fun x278 () Real)
(declare-fun x568 () Real)
(declare-fun x660 () Real)
(declare-fun x463 () Real)
(declare-fun x442 () Real)
(declare-fun x94 () Real)
(declare-fun x310 () Real)
(declare-fun x689 () Real)
(declare-fun x496 () Bool)
(declare-fun x204 () Real)
(declare-fun x576 () Bool)
(declare-fun x431 () Bool)
(declare-fun x684 () Real)
(declare-fun x613 () Real)
(declare-fun x67 () Real)
(declare-fun x300 () Real)
(declare-fun x622 () Real)
(declare-fun x82 () Real)
(declare-fun x307 () Real)
(declare-fun x275 () Bool)
(declare-fun x183 () Real)
(declare-fun x258 () Real)
(declare-fun x320 () Real)
(declare-fun x9 () Real)
(declare-fun x363 () Real)
(declare-fun x175 () Real)
(declare-fun x441 () Real)
(declare-fun x305 () Real)
(declare-fun x418 () Real)
(declare-fun x269 () Real)
(declare-fun x148 () Real)
(declare-fun x477 () Bool)
(declare-fun x54 () Bool)
(declare-fun x304 () Real)
(declare-fun x335 () Bool)
(declare-fun x581 () Real)
(declare-fun x144 () Real)
(declare-fun x342 () Real)
(declare-fun x352 () Real)
(declare-fun x647 () Bool)
(declare-fun x412 () Bool)
(declare-fun x575 () Bool)
(declare-fun x49 () Real)
(declare-fun x136 () Real)
(declare-fun x439 () Real)
(declare-fun x457 () Real)
(declare-fun x685 () Real)
(declare-fun x331 () Bool)
(declare-fun x480 () Real)
(declare-fun x265 () Real)
(declare-fun x142 () Real)
(declare-fun x426 () Real)
(declare-fun x88 () Bool)
(declare-fun x376 () Real)
(declare-fun x71 () Real)
(declare-fun x117 () Real)
(declare-fun x655 () Real)
(declare-fun x507 () Bool)
(declare-fun x462 () Bool)
(declare-fun x558 () Real)
(declare-fun x130 () Real)
(declare-fun x149 () Real)
(declare-fun x543 () Real)
(declare-fun x63 () Bool)
(declare-fun x359 () Real)
(declare-fun x469 () Bool)
(declare-fun x205 () Real)
(declare-fun x433 (Real) Real)
(declare-fun x417 () Real)
(declare-fun x41 () Real)
(declare-fun x107 () Real)
(declare-fun x57 () Real)
(declare-fun x237 () Real)
(declare-fun x167 () Bool)
(declare-fun x520 () Bool)
(declare-fun x451 () Bool)
(declare-fun x615 () Real)
(declare-fun x14 () Real)
(declare-fun x158 () Real)
(declare-fun x440 () Real)
(declare-fun x232 () Real)
(declare-fun x599 (Real) Real)
(declare-fun x127 () Real)
(declare-fun x32 () Real)
(declare-fun x400 () Real)
(declare-fun x406 () Real)
(declare-fun x550 () Real)
(declare-fun x539 () Real)
(declare-fun x221 () Real)
(declare-fun x124 () Real)
(declare-fun x112 () Real)
(declare-fun x532 () Real)
(declare-fun x242 () Bool)
(declare-fun x8 () Real)
(declare-fun x102 () Real)
(declare-fun x493 () Real)
(declare-fun x661 () Real)
(declare-fun x525 () Bool)
(declare-fun x294 () Bool)
(declare-fun x324 () Bool)
(declare-fun x541 () Real)
(declare-fun x436 () Real)
(declare-fun x548 () Bool)
(declare-fun x190 () Real)
(declare-fun x658 () Real)
(declare-fun x551 () Real)
(declare-fun x411 () Real)
(declare-fun x582 () Real)
(declare-fun x567 () Real)
(declare-fun x396 () Real)
(declare-fun x501 () Real)
(declare-fun x306 (Real) Real)
(declare-fun x195 () Real)
(declare-fun x429 () Real)
(declare-fun x562 () Real)
(declare-fun x264 () Real)
(declare-fun x671 () Real)
(declare-fun x346 () Bool)
(declare-fun x416 () Real)
(declare-fun x690 () Bool)
(declare-fun x512 () Real)
(declare-fun x314 () Real)
(declare-fun x566 () Real)
(declare-fun x366 () Bool)
(declare-fun x282 () Real)
(declare-fun x73 () Real)
(declare-fun x585 () Real)
(declare-fun x250 () Real)
(declare-fun x271 () Real)
(declare-fun x287 () Real)
(declare-fun x391 () Real)
(declare-fun x276 () Real)
(declare-fun x475 () Bool)
(declare-fun x92 () Real)
(declare-fun x52 () Real)
(declare-fun x293 () Bool)
(declare-fun x437 () Real)
(declare-fun x277 () Real)
(declare-fun x297 () Real)
(declare-fun x389 () Bool)
(declare-fun x473 () Bool)
(declare-fun x399 () Bool)
(declare-fun x402 () Real)
(declare-fun x354 () Bool)
(declare-fun x30 () Real)
(declare-fun x86 () Real)
(declare-fun x407 () Real)
(declare-fun x169 () Real)
(declare-fun x691 () Real)
(declare-fun x249 () Real)
(declare-fun x413 () Real)
(declare-fun x533 () Real)
(declare-fun x212 () Real)
(declare-fun x50 () Real)
(declare-fun x185 () Real)
(declare-fun x25 () Bool)
(declare-fun x291 () Bool)
(declare-fun x47 (Real) Real)
(declare-fun x639 () Real)
(declare-fun x245 () Real)
(declare-fun x465 () Real)
(declare-fun x596 (Real) Real)
(declare-fun x609 () Real)
(declare-fun x526 () Real)
(declare-fun x260 () Real)
(declare-fun x66 () Real)
(declare-fun x229 () Real)
(declare-fun x450 () Bool)
(declare-fun x123 () Real)
(declare-fun x476 () Real)
(declare-fun x432 () Real)
(declare-fun x161 () Real)
(declare-fun x517 () Real)
(declare-fun x223 () Bool)
(declare-fun x336 () Bool)
(declare-fun x78 () Real)
(declare-fun x635 () Real)
(declare-fun x632 () Real)
(declare-fun x490 () Bool)
(declare-fun x266 () Bool)
(declare-fun x150 () Real)
(declare-fun x81 () Real)
(declare-fun x645 () Real)
(declare-fun x445 () Real)
(declare-fun x398 () Real)
(declare-fun x674 () Bool)
(declare-fun x218 () Real)
(declare-fun x668 () Bool)
(declare-fun x438 () Real)
(declare-fun x637 () Real)
(declare-fun x207 () Bool)
(declare-fun x519 () Bool)
(declare-fun x409 () Real)
(declare-fun x168 () Real)
(declare-fun x345 () Bool)
(declare-fun x547 () Real)
(declare-fun x253 () Bool)
(declare-fun x443 () Bool)
(declare-fun x670 () Real)
(declare-fun x56 () Real)
(declare-fun x601 () Real)
(declare-fun x378 () Real)
(declare-fun x403 () Real)
(declare-fun x424 () Bool)
(declare-fun x172 () Real)
(declare-fun x628 () Real)
(declare-fun x603 () Bool)
(declare-fun x45 () Bool)
(declare-fun x392 () Real)
(declare-fun x209 () Real)
(declare-fun x367 () Real)
(declare-fun x498 () Real)
(declare-fun x31 (Real) Real)
(declare-fun x145 () Real)
(declare-fun x537 () Real)
(declare-fun x511 () Real)
(declare-fun x612 () Real)
(declare-fun x591 () Real)
(declare-fun x466 () Real)
(declare-fun x58 () Real)
(declare-fun x387 () Real)
(declare-fun x657 () Bool)
(declare-fun x370 () Real)
(declare-fun x91 () Bool)
(declare-fun x196 () Bool)
(declare-fun x666 () Real)
(declare-fun x309 () Bool)
(declare-fun x15 () Real)
(declare-fun x588 () Real)
(declare-fun x683 () Bool)
(declare-fun x80 () Real)
(declare-fun x16 () Real)
(declare-fun x116 () Real)
(declare-fun x388 () Real)
(declare-fun x173 () Real)
(declare-fun x456 () Real)
(declare-fun x419 () Real)
(declare-fun x40 () Real)
(declare-fun x186 () Real)
(declare-fun x676 () Real)
(declare-fun x182 () Real)
(declare-fun x508 () Real)
(declare-fun x42 () Real)
(declare-fun x317 () Bool)
(declare-fun x420 () Real)
(declare-fun x251 () Real)
(declare-fun x494 () Bool)
(declare-fun x283 () Real)
(declare-fun x393 () Real)
(declare-fun x13 () Real)
(declare-fun x4 () Real)
(declare-fun x629 () Real)
(declare-fun x339 () Real)
(declare-fun x633 () Real)
(declare-fun x318 () Real)
(declare-fun x362 () Real)
(declare-fun x664 () Real)
(declare-fun x577 () Real)
(declare-fun x22 () Real)
(declare-fun x580 () Real)
(declare-fun x98 () Real)
(declare-fun x118 () Bool)
(declare-fun x643 () Real)
(declare-fun x134 () Real)
(declare-fun x515 () Real)
(declare-fun x680 () Real)
(declare-fun x85 () Bool)
(declare-fun x642 () Real)
(declare-fun x184 () Bool)
(declare-fun x176 () Real)
(declare-fun x213 () Real)
(declare-fun x261 () Real)
(declare-fun x626 () Bool)
(declare-fun x509 () Real)
(declare-fun x226 () Real)
(declare-fun x484 () Real)
(declare-fun x347 () Real)
(declare-fun x162 () Real)
(declare-fun x3 () Bool)
(declare-fun x564 () Bool)
(declare-fun x194 () Real)
(declare-fun x502 () Real)
(declare-fun x235 () Bool)
(declare-fun x315 () Bool)
(declare-fun x198 () Bool)
(declare-fun x93 () Real)
(declare-fun x95 () Real)
(declare-fun x12 () Real)
(declare-fun x6 () Bool)
(declare-fun x461 () Bool)
(declare-fun x60 () Real)
(declare-fun x126 () Bool)
(declare-fun x394 () Real)
(declare-fun x348 (Real Real) Real)
(declare-fun x177 () Bool)
(declare-fun x157 () Bool)
(declare-fun x673 () Bool)
(declare-fun x217 () Real)
(declare-fun x280 () Real)
(declare-fun x284 () Real)
(declare-fun x26 () Real)
(declare-fun x375 () Real)
(declare-fun x495 () Bool)
(declare-fun x138 () Real)
(declare-fun x180 () Bool)
(declare-fun x361 () Real)
(declare-fun x5 () Real)
(declare-fun x244 () Bool)
(declare-fun x383 () Real)
(declare-fun x252 () Real)
(declare-fun x631 () Real)
(declare-fun x76 () Real)
(declare-fun x160 () Real)
(declare-fun x569 () Real)
(declare-fun x379 () Real)
(declare-fun x188 () Bool)
(declare-fun x133 () Real)
(declare-fun x474 () Real)
(declare-fun x104 () Bool)
(declare-fun x208 () Real)
(declare-fun x171 () Real)
(declare-fun x64 () Bool)
(declare-fun x19 () Bool)
(declare-fun x415 (Real) Real)
(declare-fun x236 () Real)
(declare-fun x140 () Real)
(declare-fun x29 () Bool)
(declare-fun x408 () Real)
(declare-fun x489 () Bool)
(declare-fun x692 () Real)
(declare-fun x302 () Real)
(declare-fun x231 () Bool)
(declare-fun x325 () Real)
(declare-fun x374 () Real)
(declare-fun x686 () Real)
(declare-fun x382 () Real)
(declare-fun x147 () Bool)
(declare-fun x115 () Bool)
(declare-fun x524 () Real)
(declare-fun x570 () Real)
(declare-fun x301 () Real)
(declare-fun x627 () Real)
(declare-fun x607 () Real)
(declare-fun x616 () Real)
(declare-fun x68 () Real)
(declare-fun x598 () Real)
(declare-fun x513 () Real)
(declare-fun x105 () Real)
(declare-fun x187 () Real)
(declare-fun x467 (Real) Real)
(declare-fun x595 () Real)
(declare-fun x210 () Real)
(declare-fun x55 () Real)
(declare-fun x478 () Real)
(declare-fun x273 () Real)
(declare-fun x125 () Bool)
(declare-fun x560 () Bool)
(define-fun x549 ((x257 Real)) Real (ite (and (>= x257 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x257)) x257 (- x257 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x121 ((x257 Real)) Real (ite (and (< x257 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x257)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x257) x257))
(define-fun x460 ((x447 Real)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x447) (<= 0 x447)))
(define-fun x228 ((x447 Real)) Bool (and (<= 0 x447) (< x447 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x292 ((x447 Real)) Bool (and (= (x319 115792089237316195423570985008687907853269984665640564039457584007913129639935 x447) x447) (= x447 (x319 x447 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x556 ((x447 Real)) Bool (and (= 0 (x319 0 x447)) (= (x319 x447 0) 0)))
(define-fun x468 ((x447 Real)) Bool (= (x319 x447 x447) x447))
(define-fun x597 ((x447 Real)) Bool (and (x292 x447) (x468 x447) (x556 x447)))
(define-fun x103 ((x447 Real)) Bool (= (x319 1461501637330902918203684832716283019655932542975 (x319 1461501637330902918203684832716283019655932542975 x447)) (x319 1461501637330902918203684832716283019655932542975 x447)))
(define-fun x371 ((x447 Real)) Bool (=> (and (<= 0 x447) (> 1461501637330902918203684832716283019655932542976 x447)) (= x447 (x319 1461501637330902918203684832716283019655932542975 x447))))
(define-fun x53 ((x447 Real)) Bool (=> (= x447 (x319 1461501637330902918203684832716283019655932542975 x447)) (and (<= 0 x447) (< x447 1461501637330902918203684832716283019655932542976))))
(define-fun x62 ((x447 Real)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x447) (< x447 2923003274661805836407369665432566039311865085952)) (= (x319 1461501637330902918203684832716283019655932542975 x447) (- x447 1461501637330902918203684832716283019655932542976))))
(define-fun x648 ((x447 Real) (x578 Real)) Bool (and (= (+ (x319 1461501637330902918203684832716283019655932542975 x447) (* x578 1461501637330902918203684832716283019655932542976)) x447) (<= 0 x578)))
(define-fun x528 ((x447 Real) (x272 Real)) Bool (and (x62 x447) (x371 x447) (x103 x447) (x648 x447 x272) (x53 x447)))
(define-fun x504 ((x447 Real) (x578 Real)) Bool (= (x319 x578 x447) (x319 x447 x578)))
(define-fun x492 ((x447 Real) (x578 Real)) Bool (and (=> (<= 0 x578) (<= (x319 x447 x578) x578)) (=> (>= x447 0) (>= x447 (x319 x447 x578))) (<= 0 (x319 x447 x578))))
(define-fun x38 ((x447 Real) (x578 Real)) Bool (and (x504 x447 x578) (x492 x447 x578)))
(define-fun x333 ((x447 Real) (x272 Real)) Bool (and (x38 x447 1461501637330902918203684832716283019655932542975) (x528 x447 x272)))
(define-fun x27 ((x447 Real)) Bool (= (x319 20282409603651670423947251286015 (x319 20282409603651670423947251286015 x447)) (x319 20282409603651670423947251286015 x447)))
(define-fun x135 ((x447 Real)) Bool (=> (and (> 20282409603651670423947251286016 x447) (>= x447 0)) (= (x319 20282409603651670423947251286015 x447) x447)))
(define-fun x638 ((x447 Real)) Bool (=> (= x447 (x319 20282409603651670423947251286015 x447)) (and (< x447 20282409603651670423947251286016) (<= 0 x447))))
(define-fun x197 ((x447 Real)) Bool (=> (and (> 40564819207303340847894502572032 x447) (>= x447 20282409603651670423947251286016)) (= (x319 20282409603651670423947251286015 x447) (- x447 20282409603651670423947251286016))))
(define-fun x128 ((x447 Real) (x578 Real)) Bool (and (<= 0 x578) (= (+ (x319 20282409603651670423947251286015 x447) (* 20282409603651670423947251286016 x578)) x447)))
(define-fun x259 ((x447 Real) (x272 Real)) Bool (and (x638 x447) (x197 x447) (x135 x447) (x27 x447) (x128 x447 x272)))
(define-fun x594 ((x447 Real) (x272 Real)) Bool (and (x38 x447 20282409603651670423947251286015) (x259 x447 x272)))
(define-fun x322 ((x447 Real)) Bool (= (ite (> 10141204801825835211973625643008 (x319 x447 20282409603651670423947251286015)) (x319 x447 20282409603651670423947251286015) (+ 115792089237316195423570985008687907853269984645358154435805913583965878353920 (x319 x447 20282409603651670423947251286015))) (x74 x447)))
(define-fun x227 ((x447 Real)) Bool (= (x319 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x447)) (x319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x447)))
(define-fun x18 ((x447 Real)) Bool (=> (and (> 32 x447) (<= 0 x447)) (= 0 (x319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x447))))
(define-fun x634 ((x447 Real) (x578 Real) (x675 Real) (x96 Real)) Bool (and (<= 0 x578) (= (* x675 32) (x319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x447)) (>= x96 0) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x675) (= (+ x578 (* 32 x675) (* x96 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x447) (> 1 x96) (>= x675 0) (> 32 x578)))
(define-fun x247 ((x447 Real) (x165 Real) (x106 Real) (x623 Real)) Bool (and (x634 x447 x165 x106 x623) (x18 x447) (x227 x447)))
(define-fun x248 ((x447 Real) (x165 Real) (x106 Real) (x623 Real)) Bool (and (x247 x447 x165 x106 x623) (x38 x447 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x28 ((x447 Real)) Bool (= (x319 1099511627775 x447) (x319 1099511627775 (x319 1099511627775 x447))))
(define-fun x589 ((x447 Real)) Bool (=> (and (< x447 1099511627776) (<= 0 x447)) (= x447 (x319 1099511627775 x447))))
(define-fun x338 ((x447 Real)) Bool (=> (= (x319 1099511627775 x447) x447) (and (<= 0 x447) (> 1099511627776 x447))))
(define-fun x546 ((x447 Real)) Bool (=> (and (<= 1099511627776 x447) (> 2199023255552 x447)) (= (x319 1099511627775 x447) (- x447 1099511627776))))
(define-fun x358 ((x447 Real) (x578 Real)) Bool (and (= x447 (+ (* 1099511627776 x578) (x319 1099511627775 x447))) (<= 0 x578)))
(define-fun x11 ((x447 Real) (x272 Real)) Bool (and (x338 x447) (x358 x447 x272) (x546 x447) (x28 x447) (x589 x447)))
(define-fun x373 ((x447 Real) (x272 Real)) Bool (and (x11 x447 x272) (x38 x447 1099511627775)))
(define-fun x17 ((x447 Real)) Bool (= (x319 18446744073709551615 (x319 18446744073709551615 x447)) (x319 18446744073709551615 x447)))
(define-fun x620 ((x447 Real)) Bool (=> (and (<= 0 x447) (> 18446744073709551616 x447)) (= (x319 18446744073709551615 x447) x447)))
(define-fun x109 ((x447 Real)) Bool (=> (= (x319 18446744073709551615 x447) x447) (and (< x447 18446744073709551616) (>= x447 0))))
(define-fun x677 ((x447 Real)) Bool (=> (and (<= 18446744073709551616 x447) (< x447 36893488147419103232)) (= (- x447 18446744073709551616) (x319 18446744073709551615 x447))))
(define-fun x572 ((x447 Real) (x578 Real)) Bool (and (>= x578 0) (= (+ (* 18446744073709551616 x578) (x319 18446744073709551615 x447)) x447)))
(define-fun x61 ((x447 Real) (x272 Real)) Bool (and (x109 x447) (x620 x447) (x17 x447) (x677 x447) (x572 x447 x272)))
(define-fun x312 ((x447 Real) (x272 Real)) Bool (and (x38 x447 18446744073709551615) (x61 x447 x272)))
(define-fun x143 ((x131 Real)) Real (ite (= 128 x131) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x306 x131)))
(define-fun x542 ((x131 Real)) Real (ite (= 0 x131) x465 (x334 x131)))
(define-fun x2 ((x131 Real)) Real (ite (= x131 128) x465 (x365 x131)))
(define-fun x586 ((x131 Real)) Real (ite (= x131 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x414 x131)))
(define-fun x72 ((x131 Real)) Real (ite (= x82 x131) x280 (x415 x131)))
(define-fun x262 ((x131 Real)) Real (ite (= x593 x131) x218 (x72 x131)))
(define-fun x69 ((x131 Real)) Real (ite (and x147 x489) (x262 x131) (x415 x131)))
(define-fun x499 ((x131 Real)) Real (ite (= x131 0) x310 (x47 x131)))
(define-fun x522 ((x131 Real)) Real (ite (= x131 128) x310 (x599 x131)))
(define-fun x401 ((x131 Real)) Real (ite (= 0 x131) x59 (x334 x131)))
(define-fun x368 ((x131 Real)) Real (ite (= x131 128) x59 (x365 x131)))
(define-fun x170 ((x131 Real)) Real (ite (= x131 0) x245 (x334 x131)))
(define-fun x34 ((x131 Real)) Real (ite (= x131 128) x245 (x365 x131)))
(define-fun x422 ((x131 Real)) Real (ite (= 0 x131) x463 (x334 x131)))
(define-fun x344 ((x131 Real)) Real (ite (= 128 x131) x463 (x365 x131)))
(define-fun x545 ((x131 Real)) Real (ite (= x131 x149) x692 (x433 x131)))
(define-fun x652 ((x131 Real)) Real (ite (= x131 x393) x418 (x545 x131)))
(define-fun x113 ((x131 Real)) Real (ite (= x131 0) 1 (x31 x131)))
(define-fun x472 ((x131 Real)) Real (ite (and x309 x207) (x2 x131) (ite (and x63 x231) (x344 x131) (ite (and x399 x253) (x34 x131) (x368 x131)))))
(define-fun x485 ((x131 Real)) Real (ite (= x454 x131) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x472 x131)))
(define-fun x129 ((x131 Real)) Real (ite (= x609 x131) x387 (x485 x131)))
(define-fun x224 ((x131 Real)) Real (ite (= x454 x131) 1 (x467 x131)))
(define-fun x427 ((x131 Real)) Real (ite (= x131 x70) x574 (x500 x131)))
(define-fun x602 ((x131 Real)) Real (ite (= x12 x131) x297 (x427 x131)))
(define-fun x255 ((x131 Real)) Real (ite (= x131 0) 1 (x31 x131)))
(define-fun x159 ((x131 Real)) Real (ite (= x131 x454) 1 (x467 x131)))
(define-fun x516 ((x131 Real)) Real (ite (= 0 x131) x617 (x47 x131)))
(define-fun x152 ((x131 Real)) Real (ite (= 128 x131) x617 (x599 x131)))
(define-fun x481 ((x131 Real)) Real (ite (and x489 x147) (x433 x131) (ite (and x507 x679) (x433 x131) (x652 x131))))
(define-fun x455 ((x131 Real)) Real (ite (= x131 0) x66 (x47 x131)))
(define-fun x321 ((x131 Real)) Real (ite (= x131 128) x66 (x599 x131)))
(define-fun x179 ((x131 Real)) Real (ite (and x489 x147) (x500 x131) (ite (and x679 x507) (x602 x131) (x500 x131))))
(define-fun x201 ((x131 Real)) Real (ite (= x131 0) x517 (x47 x131)))
(define-fun x303 ((x131 Real)) Real (ite (= 128 x131) x517 (x599 x131)))
(define-fun x240 ((x131 Real)) Real (ite (= 0 x131) 1 (x31 x131)))
(define-fun x523 ((x131 Real)) Real (ite (= x131 x454) 1 (x467 x131)))
(define-fun x189 ((x131 Real)) Real (ite (and x489 x147) (x523 x131) (ite (and x507 x679) (x159 x131) (x224 x131))))
(define-fun x587 ((x131 Real)) Real (ite (and x461 x64) (x522 x131) (ite (and x122 x453) (x303 x131) (ite (and x470 x525) (x321 x131) (x152 x131)))))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 1000000000000000000 x584 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x110 x340 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x120 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x137 x636 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x137 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x185 x583 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x206 x435 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x206 x50 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x220 x278 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x220 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x249 x506 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x263 x535 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x278 x220 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x279 x349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x279 x671 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x32 x535 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x340 x110 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x349 x279 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x37 x506 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x379 x583 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x435 x206 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x50 x206 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x506 x37 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x535 x263 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x535 x32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x535 x383 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x535 x631 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x550 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x583 x185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x583 x340 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x583 x379 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x607 x120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x607 x220 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x631 x535 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x656 x671 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x669 x251 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x671 x279 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279 x77 x251 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 1000000000000000000 x584 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x110 x340 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x120 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x137 x636 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x137 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x185 x583 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x206 x435 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x206 x50 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x220 x278 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x220 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x249 x506 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x263 x535 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x278 x220 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x279 x349 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x279 x671 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x32 x535 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x340 x110 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x349 x279 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x37 x506 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x379 x583 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x435 x206 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x50 x206 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x506 x37 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x535 x263 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x535 x32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x535 x383 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x535 x631 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x550 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x583 x185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x583 x340 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x583 x379 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x607 x120 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x607 x220 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x631 x535 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x656 x671 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x669 x251 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x671 x279 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x77 x251 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_bound x1 x279))
(assert (axiom_frac_zero x1 x279 1000000000000000000 x584 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x110 x340 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x120 x607 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x137 x636 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x137 x680 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x185 x583 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x206 x435 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x206 x50 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x220 x278 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x220 x607 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x249 x506 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x263 x535 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x278 x220 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x279 x349 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x279 x671 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x32 x535 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x340 x110 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x349 x279 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x37 x506 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x379 x583 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x435 x206 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x50 x206 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x506 x37 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x535 x263 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x535 x32 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x535 x383 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x535 x631 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x550 1000000000000000000 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x583 x185 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x583 x340 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x583 x379 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x607 x120 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x607 x220 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x631 x535 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x656 x671 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x669 x251 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x671 x279 (uninterp_frac x1 x279)))
(assert (axiom_frac_zero x1 x279 x77 x251 (uninterp_frac x1 x279)))
(assert (axiom_frac_bound x107 1000000000000000))
(assert (axiom_frac_zero x107 1000000000000000 1000000000000000000 x584 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x110 x340 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x120 x607 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x137 x636 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x137 x680 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x185 x583 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x206 x435 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x206 x50 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x220 x278 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x220 x607 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x249 x506 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x263 x535 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x278 x220 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x279 x349 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x279 x671 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x32 x535 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x340 x110 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x349 x279 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x37 x506 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x379 x583 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x435 x206 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x50 x206 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x506 x37 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x535 x263 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x535 x32 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x535 x383 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x535 x631 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x550 1000000000000000000 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x583 x185 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x583 x340 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x583 x379 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x607 x120 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x607 x220 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x631 x535 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x656 x671 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x669 x251 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x671 x279 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_zero x107 1000000000000000 x77 x251 (uninterp_frac x107 1000000000000000)))
(assert (axiom_frac_bound x150 1000000000000000000))
(assert (axiom_frac_zero x150 1000000000000000000 1000000000000000000 x584 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x110 x340 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x120 x607 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x137 x636 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x137 x680 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x185 x583 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x206 x435 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x206 x50 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x220 x278 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x220 x607 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x249 x506 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x263 x535 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x278 x220 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x279 x349 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x279 x671 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x32 x535 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x340 x110 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x349 x279 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x37 x506 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x379 x583 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x435 x206 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x50 x206 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x506 x37 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x535 x263 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x535 x32 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x535 x383 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x535 x631 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x550 1000000000000000000 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x583 x185 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x583 x340 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x583 x379 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x607 x120 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x607 x220 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x631 x535 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x656 x671 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x669 x251 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x671 x279 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_zero x150 1000000000000000000 x77 x251 (uninterp_frac x150 1000000000000000000)))
(assert (axiom_frac_bound x174 1000000000000000))
(assert (axiom_frac_zero x174 1000000000000000 1000000000000000000 x584 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x110 x340 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x120 x607 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x137 x636 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x137 x680 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x185 x583 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x206 x435 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x206 x50 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x220 x278 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x220 x607 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x249 x506 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x263 x535 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x278 x220 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x279 x349 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x279 x671 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x32 x535 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x340 x110 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x349 x279 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x37 x506 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x379 x583 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x435 x206 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x50 x206 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x506 x37 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x535 x263 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x535 x32 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x535 x383 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x535 x631 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x550 1000000000000000000 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x583 x185 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x583 x340 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x583 x379 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x607 x120 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x607 x220 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x631 x535 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x656 x671 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x669 x251 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x671 x279 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_zero x174 1000000000000000 x77 x251 (uninterp_frac x174 1000000000000000)))
(assert (axiom_frac_bound x176 x567))
(assert (axiom_frac_zero x176 x567 1000000000000000000 x584 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x110 x340 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x120 x607 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x137 x636 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x137 x680 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x185 x583 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x206 x435 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x206 x50 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x220 x278 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x220 x607 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x249 x506 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x263 x535 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x278 x220 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x279 x349 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x279 x671 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x32 x535 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x340 x110 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x349 x279 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x37 x506 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x379 x583 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x435 x206 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x50 x206 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x506 x37 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x535 x263 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x535 x32 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x535 x383 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x535 x631 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x550 1000000000000000000 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x583 x185 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x583 x340 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x583 x379 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x607 x120 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x607 x220 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x631 x535 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x656 x671 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x669 x251 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x671 x279 (uninterp_frac x176 x567)))
(assert (axiom_frac_zero x176 x567 x77 x251 (uninterp_frac x176 x567)))
(assert (axiom_frac_bound x187 1000000000000000000))
(assert (axiom_frac_zero x187 1000000000000000000 1000000000000000000 x584 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x110 x340 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x120 x607 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x137 x636 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x137 x680 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x185 x583 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x206 x435 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x206 x50 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x220 x278 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x220 x607 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x249 x506 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x263 x535 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x278 x220 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x279 x349 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x279 x671 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x32 x535 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x340 x110 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x349 x279 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x37 x506 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x379 x583 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x435 x206 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x50 x206 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x506 x37 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x535 x263 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x535 x32 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x535 x383 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x535 x631 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x550 1000000000000000000 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x583 x185 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x583 x340 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x583 x379 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x607 x120 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x607 x220 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x631 x535 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x656 x671 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x669 x251 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x671 x279 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x77 x251 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_bound x194 1000000000000000))
(assert (axiom_frac_zero x194 1000000000000000 1000000000000000000 x584 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x110 x340 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x120 x607 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x137 x636 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x137 x680 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x185 x583 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x206 x435 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x206 x50 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x220 x278 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x220 x607 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x249 x506 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x263 x535 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x278 x220 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x279 x349 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x279 x671 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x32 x535 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x340 x110 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x349 x279 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x37 x506 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x379 x583 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x435 x206 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x50 x206 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x506 x37 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x535 x263 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x535 x32 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x535 x383 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x535 x631 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x550 1000000000000000000 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x583 x185 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x583 x340 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x583 x379 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x607 x120 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x607 x220 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x631 x535 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x656 x671 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x669 x251 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x671 x279 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_zero x194 1000000000000000 x77 x251 (uninterp_frac x194 1000000000000000)))
(assert (axiom_frac_bound x210 x607))
(assert (axiom_frac_zero x210 x607 1000000000000000000 x584 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x110 x340 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x120 x607 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x137 x636 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x137 x680 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x185 x583 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x206 x435 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x206 x50 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x220 x278 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x220 x607 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x249 x506 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x263 x535 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x278 x220 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x279 x349 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x279 x671 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x32 x535 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x340 x110 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x349 x279 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x37 x506 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x379 x583 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x435 x206 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x50 x206 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x506 x37 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x535 x263 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x535 x32 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x535 x383 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x535 x631 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x550 1000000000000000000 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x583 x185 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x583 x340 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x583 x379 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x607 x120 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x607 x220 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x631 x535 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x656 x671 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x669 x251 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x671 x279 (uninterp_frac x210 x607)))
(assert (axiom_frac_zero x210 x607 x77 x251 (uninterp_frac x210 x607)))
(assert (axiom_frac_bound x222 1000000000000000000))
(assert (axiom_frac_zero x222 1000000000000000000 1000000000000000000 x584 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x110 x340 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x120 x607 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x137 x636 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x137 x680 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x185 x583 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x206 x435 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x206 x50 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x220 x278 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x220 x607 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x249 x506 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x263 x535 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x278 x220 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x279 x349 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x279 x671 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x32 x535 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x340 x110 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x349 x279 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x37 x506 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x379 x583 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x435 x206 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x50 x206 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x506 x37 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x535 x263 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x535 x32 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x535 x383 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x535 x631 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x550 1000000000000000000 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x583 x185 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x583 x340 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x583 x379 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x607 x120 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x607 x220 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x631 x535 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x656 x671 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x669 x251 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x671 x279 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_zero x222 1000000000000000000 x77 x251 (uninterp_frac x222 1000000000000000000)))
(assert (axiom_frac_bound x268 1000000000000000))
(assert (axiom_frac_zero x268 1000000000000000 1000000000000000000 x584 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x110 x340 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x120 x607 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x137 x636 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x137 x680 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x185 x583 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x206 x435 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x206 x50 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x220 x278 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x220 x607 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x249 x506 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x263 x535 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x278 x220 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x279 x349 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x279 x671 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x32 x535 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x340 x110 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x349 x279 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x37 x506 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x379 x583 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x435 x206 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x50 x206 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x506 x37 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x535 x263 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x535 x32 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x535 x383 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x535 x631 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x550 1000000000000000000 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x583 x185 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x583 x340 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x583 x379 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x607 x120 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x607 x220 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x631 x535 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x656 x671 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x669 x251 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x671 x279 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_zero x268 1000000000000000 x77 x251 (uninterp_frac x268 1000000000000000)))
(assert (axiom_frac_bound x386 1000000000000000000))
(assert (axiom_frac_zero x386 1000000000000000000 1000000000000000000 x584 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x110 x340 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x120 x607 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x137 x636 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x137 x680 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x185 x583 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x206 x435 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x206 x50 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x220 x278 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x220 x607 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x249 x506 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x263 x535 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x278 x220 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x279 x349 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x279 x671 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x32 x535 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x340 x110 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x349 x279 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x37 x506 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x379 x583 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x435 x206 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x50 x206 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x506 x37 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x535 x263 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x535 x32 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x535 x383 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x535 x631 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x550 1000000000000000000 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x583 x185 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x583 x340 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x583 x379 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x607 x120 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x607 x220 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x631 x535 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x656 x671 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x669 x251 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x671 x279 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_zero x386 1000000000000000000 x77 x251 (uninterp_frac x386 1000000000000000000)))
(assert (axiom_frac_bound x39 1000000000000000000))
(assert (axiom_frac_zero x39 1000000000000000000 1000000000000000000 x584 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x110 x340 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x120 x607 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x137 x636 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x137 x680 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x185 x583 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x206 x435 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x206 x50 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x220 x278 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x220 x607 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x249 x506 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x263 x535 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x278 x220 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x279 x349 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x279 x671 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x32 x535 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x340 x110 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x349 x279 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x37 x506 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x379 x583 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x435 x206 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x50 x206 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x506 x37 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x535 x263 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x535 x32 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x535 x383 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x535 x631 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x550 1000000000000000000 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x583 x185 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x583 x340 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x583 x379 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x607 x120 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x607 x220 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x631 x535 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x656 x671 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x669 x251 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x671 x279 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_zero x39 1000000000000000000 x77 x251 (uninterp_frac x39 1000000000000000000)))
(assert (axiom_frac_bound x429 1000000000000000000))
(assert (axiom_frac_zero x429 1000000000000000000 1000000000000000000 x584 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x110 x340 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x120 x607 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x137 x636 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x137 x680 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x185 x583 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x206 x435 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x206 x50 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x220 x278 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x220 x607 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x249 x506 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x263 x535 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x278 x220 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x279 x349 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x279 x671 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x32 x535 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x340 x110 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x349 x279 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x37 x506 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x379 x583 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x435 x206 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x50 x206 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x506 x37 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x535 x263 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x535 x32 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x535 x383 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x535 x631 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x550 1000000000000000000 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x583 x185 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x583 x340 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x583 x379 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x607 x120 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x607 x220 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x631 x535 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x656 x671 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x669 x251 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x671 x279 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_zero x429 1000000000000000000 x77 x251 (uninterp_frac x429 1000000000000000000)))
(assert (axiom_frac_bound x493 1000000000000000))
(assert (axiom_frac_zero x493 1000000000000000 1000000000000000000 x584 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x110 x340 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x120 x607 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x137 x636 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x137 x680 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x185 x583 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x206 x435 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x206 x50 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x220 x278 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x220 x607 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x249 x506 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x263 x535 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x278 x220 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x279 x349 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x279 x671 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x32 x535 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x340 x110 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x349 x279 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x37 x506 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x379 x583 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x435 x206 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x50 x206 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x506 x37 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x535 x263 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x535 x32 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x535 x383 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x535 x631 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x550 1000000000000000000 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x583 x185 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x583 x340 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x583 x379 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x607 x120 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x607 x220 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x631 x535 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x656 x671 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x669 x251 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x671 x279 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_zero x493 1000000000000000 x77 x251 (uninterp_frac x493 1000000000000000)))
(assert (axiom_frac_bound x498 x155))
(assert (axiom_frac_zero x498 x155 1000000000000000000 x584 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x110 x340 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x120 x607 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x137 x636 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x137 x680 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x185 x583 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x206 x435 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x206 x50 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x220 x278 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x220 x607 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x249 x506 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x263 x535 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x278 x220 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x279 x349 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x279 x671 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x32 x535 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x340 x110 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x349 x279 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x37 x506 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x379 x583 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x435 x206 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x50 x206 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x506 x37 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x535 x263 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x535 x32 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x535 x383 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x535 x631 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x550 1000000000000000000 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x583 x185 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x583 x340 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x583 x379 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x607 x120 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x607 x220 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x631 x535 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x656 x671 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x669 x251 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x671 x279 (uninterp_frac x498 x155)))
(assert (axiom_frac_zero x498 x155 x77 x251 (uninterp_frac x498 x155)))
(assert (axiom_frac_bound x502 1000000000000000))
(assert (axiom_frac_zero x502 1000000000000000 1000000000000000000 x584 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x110 x340 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x120 x607 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x137 x636 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x137 x680 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x185 x583 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x206 x435 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x206 x50 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x220 x278 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x220 x607 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x249 x506 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x263 x535 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x278 x220 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x279 x349 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x279 x671 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x32 x535 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x340 x110 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x349 x279 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x37 x506 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x379 x583 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x435 x206 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x50 x206 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x506 x37 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x535 x263 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x535 x32 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x535 x383 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x535 x631 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x550 1000000000000000000 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x583 x185 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x583 x340 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x583 x379 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x607 x120 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x607 x220 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x631 x535 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x656 x671 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x669 x251 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x671 x279 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_zero x502 1000000000000000 x77 x251 (uninterp_frac x502 1000000000000000)))
(assert (axiom_frac_bound x533 1000000000000000))
(assert (axiom_frac_zero x533 1000000000000000 1000000000000000000 x584 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x110 x340 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x120 x607 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x137 x636 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x137 x680 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x185 x583 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x206 x435 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x206 x50 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x220 x278 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x220 x607 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x249 x506 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x263 x535 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x278 x220 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x279 x349 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x279 x671 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x32 x535 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x340 x110 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x349 x279 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x37 x506 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x379 x583 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x435 x206 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x50 x206 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x506 x37 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x535 x263 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x535 x32 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x535 x383 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x535 x631 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x550 1000000000000000000 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x583 x185 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x583 x340 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x583 x379 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x607 x120 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x607 x220 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x631 x535 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x656 x671 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x669 x251 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x671 x279 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_zero x533 1000000000000000 x77 x251 (uninterp_frac x533 1000000000000000)))
(assert (axiom_frac_bound x552 1000000000000000))
(assert (axiom_frac_zero x552 1000000000000000 1000000000000000000 x584 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x110 x340 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x120 x607 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x137 x636 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x137 x680 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x185 x583 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x206 x435 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x206 x50 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x220 x278 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x220 x607 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x249 x506 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x263 x535 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x278 x220 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x279 x349 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x279 x671 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x32 x535 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x340 x110 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x349 x279 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x37 x506 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x379 x583 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x435 x206 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x50 x206 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x506 x37 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x535 x263 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x535 x32 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x535 x383 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x535 x631 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x550 1000000000000000000 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x583 x185 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x583 x340 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x583 x379 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x607 x120 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x607 x220 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x631 x535 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x656 x671 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x669 x251 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x671 x279 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_zero x552 1000000000000000 x77 x251 (uninterp_frac x552 1000000000000000)))
(assert (axiom_frac_bound x57 1000000000000000000))
(assert (axiom_frac_zero x57 1000000000000000000 1000000000000000000 x584 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x110 x340 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x120 x607 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x137 x636 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x137 x680 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x185 x583 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x206 x435 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x206 x50 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x220 x278 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x220 x607 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x249 x506 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x263 x535 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x278 x220 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x279 x349 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x279 x671 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x32 x535 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x340 x110 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x349 x279 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x37 x506 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x379 x583 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x435 x206 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x50 x206 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x506 x37 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x535 x263 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x535 x32 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x535 x383 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x535 x631 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x550 1000000000000000000 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x583 x185 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x583 x340 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x583 x379 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x607 x120 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x607 x220 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x631 x535 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x656 x671 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x669 x251 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x671 x279 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_zero x57 1000000000000000000 x77 x251 (uninterp_frac x57 1000000000000000000)))
(assert (axiom_frac_bound x588 1000000000000000))
(assert (axiom_frac_zero x588 1000000000000000 1000000000000000000 x584 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x110 x340 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x120 x607 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x137 x636 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x137 x680 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x185 x583 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x206 x435 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x206 x50 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x220 x278 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x220 x607 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x249 x506 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x263 x535 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x278 x220 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x279 x349 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x279 x671 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x32 x535 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x340 x110 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x349 x279 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x37 x506 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x379 x583 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x435 x206 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x50 x206 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x506 x37 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x535 x263 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x535 x32 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x535 x383 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x535 x631 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x550 1000000000000000000 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x583 x185 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x583 x340 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x583 x379 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x607 x120 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x607 x220 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x631 x535 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x656 x671 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x669 x251 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x671 x279 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_zero x588 1000000000000000 x77 x251 (uninterp_frac x588 1000000000000000)))
(assert (axiom_frac_bound x590 1000000000000000000))
(assert (axiom_frac_zero x590 1000000000000000000 1000000000000000000 x584 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x110 x340 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x120 x607 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x137 x636 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x137 x680 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x185 x583 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x206 x435 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x206 x50 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x220 x278 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x220 x607 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x249 x506 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x263 x535 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x278 x220 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x279 x349 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x279 x671 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x32 x535 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x340 x110 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x349 x279 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x37 x506 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x379 x583 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x435 x206 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x50 x206 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x506 x37 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x535 x263 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x535 x32 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x535 x383 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x535 x631 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x550 1000000000000000000 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x583 x185 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x583 x340 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x583 x379 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x607 x120 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x607 x220 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x631 x535 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x656 x671 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x669 x251 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x671 x279 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_zero x590 1000000000000000000 x77 x251 (uninterp_frac x590 1000000000000000000)))
(assert (axiom_frac_bound x629 1000000000000000000))
(assert (axiom_frac_zero x629 1000000000000000000 1000000000000000000 x584 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x110 x340 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x120 x607 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x137 x636 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x137 x680 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x185 x583 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x206 x435 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x206 x50 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x220 x278 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x220 x607 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x249 x506 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x263 x535 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x278 x220 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x279 x349 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x279 x671 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x32 x535 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x340 x110 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x349 x279 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x37 x506 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x379 x583 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x435 x206 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x50 x206 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x506 x37 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x535 x263 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x535 x32 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x535 x383 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x535 x631 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x550 1000000000000000000 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x583 x185 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x583 x340 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x583 x379 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x607 x120 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x607 x220 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x631 x535 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x656 x671 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x669 x251 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x671 x279 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_zero x629 1000000000000000000 x77 x251 (uninterp_frac x629 1000000000000000000)))
(assert (axiom_frac_bound x664 1000000000000000))
(assert (axiom_frac_zero x664 1000000000000000 1000000000000000000 x584 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x110 x340 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x120 x607 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x137 x636 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x137 x680 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x185 x583 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x206 x435 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x206 x50 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x220 x278 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x220 x607 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x249 x506 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x263 x535 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x278 x220 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x279 x349 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x279 x671 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x32 x535 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x340 x110 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x349 x279 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x37 x506 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x379 x583 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x435 x206 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x50 x206 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x506 x37 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x535 x263 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x535 x32 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x535 x383 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x535 x631 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x550 1000000000000000000 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x583 x185 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x583 x340 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x583 x379 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x607 x120 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x607 x220 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x631 x535 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x656 x671 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x669 x251 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x671 x279 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_zero x664 1000000000000000 x77 x251 (uninterp_frac x664 1000000000000000)))
(assert (axiom_frac_bound x665 1000000000000000000))
(assert (axiom_frac_zero x665 1000000000000000000 1000000000000000000 x584 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x110 x340 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x120 x607 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x137 x636 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x137 x680 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x185 x583 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x206 x435 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x206 x50 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x220 x278 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x220 x607 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x249 x506 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x263 x535 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x278 x220 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x279 x349 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x279 x671 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x32 x535 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x340 x110 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x349 x279 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x37 x506 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x379 x583 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x435 x206 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x50 x206 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x506 x37 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x535 x263 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x535 x32 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x535 x383 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x535 x631 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x550 1000000000000000000 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x583 x185 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x583 x340 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x583 x379 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x607 x120 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x607 x220 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x631 x535 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x656 x671 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x669 x251 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x671 x279 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_zero x665 1000000000000000000 x77 x251 (uninterp_frac x665 1000000000000000000)))
(assert (axiom_frac_bound x95 1000000000000000000))
(assert (axiom_frac_zero x95 1000000000000000000 1000000000000000000 x584 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x110 x340 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x120 x607 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x137 x636 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x137 x680 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x185 x583 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x206 x435 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x206 x50 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x220 x278 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x220 x607 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x249 x506 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x263 x535 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x278 x220 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x279 x349 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x279 x671 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x32 x535 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x340 x110 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x349 x279 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x37 x506 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x379 x583 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x435 x206 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x50 x206 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x506 x37 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x535 x263 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x535 x32 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x535 x383 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x535 x631 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x550 1000000000000000000 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x583 x185 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x583 x340 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x583 x379 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x607 x120 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x607 x220 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x631 x535 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x656 x671 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x669 x251 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x671 x279 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_frac_zero x95 1000000000000000000 x77 x251 (uninterp_frac x95 1000000000000000000)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x100))
(assert (axiom_int_approximation x101))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x107))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x111))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x119))
(assert (axiom_int_approximation x12))
(assert (axiom_int_approximation x120))
(assert (axiom_int_approximation x123))
(assert (axiom_int_approximation x124))
(assert (axiom_int_approximation x127))
(assert (axiom_int_approximation x13))
(assert (axiom_int_approximation x130))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x133))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x137))
(assert (axiom_int_approximation x138))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x140))
(assert (axiom_int_approximation x141))
(assert (axiom_int_approximation x142))
(assert (axiom_int_approximation x144))
(assert (axiom_int_approximation x145))
(assert (axiom_int_approximation x146))
(assert (axiom_int_approximation x148))
(assert (axiom_int_approximation x149))
(assert (axiom_int_approximation x15))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x151))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x154))
(assert (axiom_int_approximation x155))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x161))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x169))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x173))
(assert (axiom_int_approximation x174))
(assert (axiom_int_approximation x175))
(assert (axiom_int_approximation x176))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x181))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x185))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x187))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x191))
(assert (axiom_int_approximation x193))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x20))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x21))
(assert (axiom_int_approximation x210))
(assert (axiom_int_approximation x211))
(assert (axiom_int_approximation x212))
(assert (axiom_int_approximation x213))
(assert (axiom_int_approximation x214))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x22))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x222))
(assert (axiom_int_approximation x225))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x229))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x233))
(assert (axiom_int_approximation x236))
(assert (axiom_int_approximation x237))
(assert (axiom_int_approximation x238))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x249))
(assert (axiom_int_approximation x250))
(assert (axiom_int_approximation x251))
(assert (axiom_int_approximation x252))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x26))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x264))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x267))
(assert (axiom_int_approximation x268))
(assert (axiom_int_approximation x269))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x271))
(assert (axiom_int_approximation x273))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x276))
(assert (axiom_int_approximation x277))
(assert (axiom_int_approximation x278))
(assert (axiom_int_approximation x279))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x282))
(assert (axiom_int_approximation x283))
(assert (axiom_int_approximation x284))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x290))
(assert (axiom_int_approximation x296))
(assert (axiom_int_approximation x297))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x300))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x302))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x305))
(assert (axiom_int_approximation x307))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x311))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x32))
(assert (axiom_int_approximation x320))
(assert (axiom_int_approximation x325))
(assert (axiom_int_approximation x326))
(assert (axiom_int_approximation x328))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x337))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x340))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x342))
(assert (axiom_int_approximation x343))
(assert (axiom_int_approximation x347))
(assert (axiom_int_approximation x349))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x355))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x36))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x361))
(assert (axiom_int_approximation x362))
(assert (axiom_int_approximation x363))
(assert (axiom_int_approximation x364))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x369))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x375))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x378))
(assert (axiom_int_approximation x379))
(assert (axiom_int_approximation x381))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x383))
(assert (axiom_int_approximation x386))
(assert (axiom_int_approximation x387))
(assert (axiom_int_approximation x388))
(assert (axiom_int_approximation x39))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x393))
(assert (axiom_int_approximation x394))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x396))
(assert (axiom_int_approximation x397))
(assert (axiom_int_approximation x398))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x40))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x403))
(assert (axiom_int_approximation x405))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x408))
(assert (axiom_int_approximation x409))
(assert (axiom_int_approximation x41))
(assert (axiom_int_approximation x411))
(assert (axiom_int_approximation x413))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x417))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x419))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x420))
(assert (axiom_int_approximation x421))
(assert (axiom_int_approximation x423))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x426))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x429))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x434))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x436))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x439))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x440))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x442))
(assert (axiom_int_approximation x444))
(assert (axiom_int_approximation x445))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x449))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x46))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x464))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x466))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x478))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x483))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x487))
(assert (axiom_int_approximation x488))
(assert (axiom_int_approximation x49))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x497))
(assert (axiom_int_approximation x498))
(assert (axiom_int_approximation x5))
(assert (axiom_int_approximation x50))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x503))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x506))
(assert (axiom_int_approximation x508))
(assert (axiom_int_approximation x509))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x510))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x515))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x518))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x529))
(assert (axiom_int_approximation x530))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x533))
(assert (axiom_int_approximation x534))
(assert (axiom_int_approximation x535))
(assert (axiom_int_approximation x536))
(assert (axiom_int_approximation x537))
(assert (axiom_int_approximation x538))
(assert (axiom_int_approximation x539))
(assert (axiom_int_approximation x540))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x543))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x55))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x554))
(assert (axiom_int_approximation x555))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x559))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x562))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x567))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x57))
(assert (axiom_int_approximation x570))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x577))
(assert (axiom_int_approximation x58))
(assert (axiom_int_approximation x580))
(assert (axiom_int_approximation x581))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x583))
(assert (axiom_int_approximation x584))
(assert (axiom_int_approximation x585))
(assert (axiom_int_approximation x588))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x60))
(assert (axiom_int_approximation x600))
(assert (axiom_int_approximation x601))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x605))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x607))
(assert (axiom_int_approximation x608))
(assert (axiom_int_approximation x609))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x614))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x617))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x627))
(assert (axiom_int_approximation x628))
(assert (axiom_int_approximation x629))
(assert (axiom_int_approximation x630))
(assert (axiom_int_approximation x631))
(assert (axiom_int_approximation x632))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x635))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x639))
(assert (axiom_int_approximation x641))
(assert (axiom_int_approximation x642))
(assert (axiom_int_approximation x643))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x645))
(assert (axiom_int_approximation x649))
(assert (axiom_int_approximation x650))
(assert (axiom_int_approximation x655))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x658))
(assert (axiom_int_approximation x66))
(assert (axiom_int_approximation x660))
(assert (axiom_int_approximation x661))
(assert (axiom_int_approximation x662))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x665))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x670))
(assert (axiom_int_approximation x671))
(assert (axiom_int_approximation x672))
(assert (axiom_int_approximation x676))
(assert (axiom_int_approximation x678))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x681))
(assert (axiom_int_approximation x682))
(assert (axiom_int_approximation x684))
(assert (axiom_int_approximation x685))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x689))
(assert (axiom_int_approximation x691))
(assert (axiom_int_approximation x692))
(assert (axiom_int_approximation x7))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x71))
(assert (axiom_int_approximation x73))
(assert (axiom_int_approximation x75))
(assert (axiom_int_approximation x76))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x84))
(assert (axiom_int_approximation x86))
(assert (axiom_int_approximation x87))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x90))
(assert (axiom_int_approximation x92))
(assert (axiom_int_approximation x93))
(assert (axiom_int_approximation x94))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x98))
(assert (x228 x138))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x348 x117 1))))
(assert (x228 x359))
(assert (x228 x662))
(assert (not (= 3638949393 (x348 x229 1))))
(assert (x228 x650))
(assert (not (= 4033150093 (x348 x229 1))))
(assert (x228 x566))
(assert (x228 x183))
(assert (x228 x171))
(assert (not (= (x348 274184521717934524641157099916833587211 5) (x348 x394 1))))
(assert (not (= (x348 274184521717934524641157099916833587211 5) (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x289))
(assert (x228 x521))
(assert (x228 x378))
(assert (=> (> (+ 10000 1) x394) (not (= (x348 x229 1) x394))))
(assert (x228 x658))
(assert (not (= 274184521717934524641157099916833587223 (x348 x117 1))))
(assert (not (= (x348 x394 1) 826074471)))
(assert (not (= (x348 x394 1) 204737060)))
(assert (x228 x421))
(assert (x597 x144))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x348 x394 1))))
(assert (= (=> (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x671 x279)) (= (x319 1461501637330902918203684832716283019655932542975 x8) x600) (< x671 18446744073709551616) (not (= 0 x209)) (= x454 (x549 (+ 128 x547))) (= x233 (x549 (+ x454 36))) (= 0 x284) (= x284 (x319 x148 x605)) (= x225 0) (= x581 (x319 20282409603651670423947251286015 x237)) (= x145 (ite (or (and (<= x513 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x71)) (and (< x71 x513) (= (<= x513 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x71 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (not (or (and (< x382 0) (= true (<= x382 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x382 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x252)) (< x252 32)) (> x252 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x513 (x74 x642)) (= x237 (- (/ x174 1000000000000000) (uninterp_frac x174 1000000000000000))) (not (> x78 x382)) (= x180 (or (> x439 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x439)) (> 0 x439)))) (= (x319 20282409603651670423947251286015 x642) x21) (= (x549 (+ x439 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x73) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x282) true) (< x282 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x282)) x625) (= x387 (x319 1461501637330902918203684832716283019655932542975 x563)) (< (* x220 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x382 (x549 (+ x282 x513))) (>= 20282409603651670423947251286015 x607) (>= x220 0) (= (ite (not x180) 1 0) x148) (= x439 (x74 x237)) (< x607 20282409603651670423947251286016) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x282) (and (= (<= x282 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x282))) 1 0) x48) (<= x671 18446744073709551615) (< x279 20282409603651670423947251286016) (>= 20282409603651670423947251286015 x279) (>= x279 0) (= (x549 (+ 132 x547)) x609) (<= x220 18446744073709551615) (> 18446744073709551616 x220) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x300)) (<= 0 x607) (>= x671 0) (= (- (/ x533 1000000000000000) (uninterp_frac x533 1000000000000000)) x642) (= x208 (x549 (+ 68 x454))) (= x282 (x121 (- x300 x439))) (= x142 (x319 x48 x151)) (= (x121 (- x208 x454)) x276) (= x300 (x472 128)) (= (x549 (+ 57896044618658097711785492504343953926634992332820282019728792003956564819968 x439)) x411) (not (> x581 10141204801825835211973625643007)) (= x147 (= x600 274184521717934524641157099916833587231)) (= x71 (x121 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x282))) (= x225 (x319 x658 x145)) (= (ite (not x625) 1 0) x658) (= x420 0) (= (ite (or (and (= (<= x300 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x73)) (> x300 x73)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x300) (> x73 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x168) (= (x121 (- x411 x300)) x260) (= (x319 x307 x168) x420) (= x151 (ite (or (and (> x513 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x260 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x513 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x260)) (< x513 x260))) 1 0)) (= x605 (ite (or (and (< x300 x411) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x411) (<= x300 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x300 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x411 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= (* x220 x607) x533) (= (ite (or (> x439 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x439) (= true (<= x439 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0) x307) (= (x319 115792089237316195423570985008687907853269984665640564039457584007913129639904 x193) x547) (= 0 x142) (= x193 (x549 (+ 31 x252))) (= (* x279 x671) x174) (not (< 10141204801825835211973625643007 x21))) (and (=> (not x147) x390) (=> (and (= (+ x637 x374) x218) (= (x121 (- x83 x10)) x280) (= x367 x394) (= (x348 274184521717934524641157099916833587211 1) x178) (= x82 (x348 274184521717934524641157099916833587211 1)) (not x443) (> x413 0) (not (= 826074471 x100)) (not (= 2514000705 x100)) (= x298 32) (= x75 1) (= 68 x84) (= x58 274184521717934524641157099916833587211) (= x78 x10) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x213 x267)) (= x267 x10) (= x593 (x348 x394 1)) (= x685 274184521717934524641157099916833587211) (>= x213 0) (<= x213 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x276 x84) (not (> 4 x84)) (not (= 1889567281 x100)) (= (x121 (- x84 4)) x670) (= (x97 274184521717934524641157099916833587231) x413) (= (> x10 x83) x315) (= (x72 x686) x213) (<= x83 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x100 2835717307) (= x213 x374) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x290) (not (< x100 826074471)) (= (x415 x178) x83) x147 (= x443 (or (and (= (<= x670 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x670 64)) (> x670 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x637 x267) (= (x348 x394 1) x686) (= x394 x387) (<= 0 x83) (<= x394 1461501637330902918203684832716283019655932542975) (not x315)) x184))) x354))
(assert (x228 x21))
(assert (x228 x666))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 826074471)))
(assert (not (= (x348 x117 1) 274184521717934524641157099916833587244)))
(assert (x228 x361))
(assert (x228 x619))
(assert (x312 x4 x337))
(assert (not (= 274184521717934524641157099916833587223 (x348 x229 1))))
(assert (x228 x644))
(assert (not (= 10141204801825835211973625643007 (x348 x394 1))))
(assert (x228 x598))
(assert (x228 x628))
(assert (x594 x512 x221))
(assert (not (= (x348 x117 1) 2835717307)))
(assert (not (= (x348 x229 1) 204737060)))
(assert (x228 x84))
(assert (x228 x684))
(assert (x228 x376))
(assert (x228 x233))
(assert (x38 x307 x168))
(assert (x228 x232))
(assert (x228 x367))
(assert (not (= (x348 x229 1) 2835717307)))
(assert (x597 x342))
(assert (x228 x36))
(assert (x228 x550))
(assert (x228 x75))
(assert (x228 x584))
(assert (x597 x4))
(assert (x228 x488))
(assert (= (=> (= x63 (= x22 274184521717934524641157099916833587227)) (and (=> (not x63) x495) (=> (and (not (= x9 826074471)) (not (> 4 x347)) (> x299 0) (= x388 274184521717934524641157099916833587211) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x608) (= (x500 x591) x463) (= x9 1889567281) (= (x121 (- x347 4)) x141) (= x209 1) (not x188) (not (> 826074471 x9)) (>= x463 0) (= (x348 274184521717934524641157099916833587211 1) x591) x63 (= x188 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x141) true) (> 32 x141)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x141))) (= x299 (x97 274184521717934524641157099916833587227)) (= x252 32) (= x347 36) (= 36 x347) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x463)) x354))) x544))
(assert (x228 x402))
(assert (=> (< (- x229 1) 10000) (not (= x229 (x348 274184521717934524641157099916833587211 5)))))
(assert (not (= (x348 x117 1) 1099511627776)))
(assert (x228 x52))
(assert (not (= (x348 x394 1) 3638949393)))
(assert (x460 x394))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 840395849)))
(assert (x228 x246))
(assert (=> (> (+ 10000 1) x229) (not (= x229 (x348 x229 1)))))
(assert (not (= 1099511627776 (x348 x229 1))))
(assert (= x275 (=> (and (= x242 (and (= (<= x363 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (<= 0 x363))) (= x580 x619) (= x521 0) (= x619 x363)) x242)))
(assert (not (= (x348 x117 1) 1)))
(assert (x228 x569))
(assert (x228 x355))
(assert (not (= 3122421376 (x348 274184521717934524641157099916833587211 5))))
(assert (not (= (x348 x394 1) 20282409603651670423947251286015)))
(assert (x228 x601))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 274184521717934524641157099916833587223)))
(assert (= (=> (= x253 (= x22 274184521717934524641157099916833587223)) (and (=> (and (= (x121 (- x156 4)) x378) (= x314 (x348 274184521717934524641157099916833587211 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x245) (not (< x577 826074471)) (= x245 (x433 x314)) (< 0 x360) (= (or (> x378 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x378) (= (<= x378 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x336) (not (< x156 4)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x684) (= (x97 274184521717934524641157099916833587223) x360) (not x336) (= x24 274184521717934524641157099916833587211) (= x252 32) (= 1 x209) (= 1889567281 x577) (not (= x577 826074471)) x253 (>= x245 0) (= 36 x156) (= x156 36)) x354) (=> (not x253) x295))) x495))
(assert (= (or (and x679 x507) (and x147 x489) (and x29 x324)) x646))
(assert (x228 x140))
(assert (x228 x585))
(assert (not (= (x348 x394 1) 2707768185)))
(assert (x38 x51 x573))
(assert (x228 x430))
(assert (x228 x83))
(assert (not (= 18446744073709551616 (x348 x229 1))))
(assert (x228 x573))
(assert (x597 x148))
(assert (x228 x676))
(assert (x594 x381 x26))
(assert (x228 x632))
(assert (not (= 1000000000000000000 (x348 x394 1))))
(assert (x228 x137))
(assert (x228 x305))
(assert (x38 x398 x524))
(assert (not (= 70124239 (x348 274184521717934524641157099916833587211 1))))
(assert (not (= 1000000000000000000 (x348 274184521717934524641157099916833587211 5))))
(assert (x597 x8))
(assert (x228 x297))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 3889878717)))
(assert (x228 x457))
(assert (x228 x465))
(assert (x228 x269))
(assert (x228 x517))
(assert (not (= 18446744073709551616 (x348 274184521717934524641157099916833587211 5))))
(assert (not (= 2707768185 (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x153))
(assert (not (= 1208925819614629174706175 (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x250))
(assert (x597 x551))
(assert (x228 x8))
(assert (= x122 (and (not x461) x64)))
(assert (=> (< (- x229 1) 10000) (not (= x229 (x348 x117 1)))))
(assert (x228 x416))
(assert (x597 x573))
(assert (not (= 2835717307 (x348 274184521717934524641157099916833587211 5))))
(assert (x228 x555))
(assert (x228 x267))
(assert (x228 x363))
(assert (not (= 3833100637 (x348 x394 1))))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x348 274184521717934524641157099916833587211 5))))
(assert (x228 x672))
(assert (x228 x505))
(assert (x228 x406))
(assert (= true x65))
(assert (x228 x381))
(assert (x228 x111))
(assert (x228 x511))
(assert (x228 x543))
(assert (not (= 20282409603651670423947251286016 (x348 x229 1))))
(assert (not (= 20282409603651670423947251286016 (x348 274184521717934524641157099916833587211 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x348 x117 1))))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 3795249780)))
(assert (x597 x145))
(assert (x228 x423))
(assert (x228 x442))
(assert (x597 x90))
(assert (x228 x483))
(assert (= x324 (and x507 (not x679))))
(assert (not (= 274184521717934524641157099916833587211 (x348 x229 1))))
(assert (not (= 3695885053 (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x256))
(assert (x228 x582))
(assert (x228 x562))
(assert (not (= 5 (x348 x229 1))))
(assert (x228 x117))
(assert (x228 x372))
(assert (not (= 3795249780 (x348 274184521717934524641157099916833587211 5))))
(assert (x228 x163))
(assert (x228 x418))
(assert (x228 x454))
(assert (x228 x669))
(assert (x228 x624))
(assert (x228 x441))
(assert (x228 x15))
(assert (not (= 20282409603651670423947251286016 (x348 274184521717934524641157099916833587211 5))))
(assert (not (= (x348 x394 1) 2835717307)))
(assert (not (= (x348 x394 1) 4033150093)))
(assert (x38 x76 x397))
(assert (x228 x408))
(assert (x228 x148))
(assert (x228 x409))
(assert (not (= 3833100637 (x348 274184521717934524641157099916833587211 5))))
(assert (x597 x359))
(assert (x228 x395))
(assert (x228 x308))
(assert (not (= 70124239 (x348 x117 1))))
(assert (x228 x325))
(assert (x228 x413))
(assert (not (= 1099511627776 (x348 x394 1))))
(assert (x228 x506))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 10141204801825835211973625643007)))
(assert (x228 x58))
(assert (x228 x622))
(assert (=> (= (x348 274184521717934524641157099916833587211 1) (x348 x117 1)) (= 274184521717934524641157099916833587211 x117)))
(assert (x322 x614))
(assert (x228 x513))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x348 274184521717934524641157099916833587211 5))))
(assert (x597 x139))
(assert (x228 x563))
(assert (x333 x563 x328))
(assert (not (= 3695885053 (x348 x394 1))))
(assert (x228 x370))
(assert (x228 x307))
(assert (x597 x541))
(assert (x228 x4))
(assert (x228 x685))
(assert (x597 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x228 x680))
(assert (not (= (x348 x229 1) 2514000705)))
(assert (not (= 826074471 (x348 274184521717934524641157099916833587211 5))))
(assert (not (= 11269569 (x348 274184521717934524641157099916833587211 5))))
(assert (not (= (x348 x117 1) 1889567281)))
(assert (x228 x59))
(assert (x597 x558))
(assert (x228 x536))
(assert (x228 x438))
(assert (=> (= (x348 x117 1) (x348 x229 1)) (= x229 x117)))
(assert (=> (> (+ 10000 1) x117) (not (= x117 (x348 x394 1)))))
(assert (x228 x229))
(assert (x597 x111))
(assert (x228 x561))
(assert (not (= 18446744073709551616 (x348 x117 1))))
(assert (x228 x156))
(assert (x228 x631))
(assert (not (= 274184521717934524641157099916833587223 (x348 274184521717934524641157099916833587211 5))))
(assert (not (= (x348 x394 1) 1)))
(assert (x228 x282))
(assert (x228 x260))
(assert (not (= 20282409603651670423947251286015 (x348 x117 1))))
(assert (x228 x155))
(assert (not (= (x348 x117 1) (x348 274184521717934524641157099916833587211 5))))
(assert (x597 x613))
(assert (not (= (x348 x394 1) 3122421376)))
(assert (x597 x666))
(assert (not (= (x348 x117 1) 1000000000000000)))
(assert (not (= (x348 x394 1) 1889567281)))
(assert (x228 x318))
(assert (not (= 11269569 (x348 274184521717934524641157099916833587211 1))))
(assert (not (= 70124239 (x348 x394 1))))
(assert (x228 x92))
(assert (= x126 (=> (and (>= 18446744073709551615 x120) (= x524 (ite (or (and (< x169 x409) (= (<= x409 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x169 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x409) (> x169 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= x397 (ite (or (and (> x169 x430) (= (<= x430 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x169 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x430 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x169))) 1 0)) (= x622 (x319 x76 x397)) (= x426 (x121 (- x601 x271))) (> 18446744073709551616 x349) (< x607 20282409603651670423947251286016) (= x441 (x319 x51 x573)) (= x601 (x587 128)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x120 x607)) (not (< 10141204801825835211973625643007 x569)) (<= 0 x607) (not (= 0 x261)) (= x511 x580) (>= x349 0) (= (* x349 x279) x107) (> 18446744073709551616 x120) (= 0 x274) (= x573 (ite (or (and (> x134 x601) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x601) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x134))) (and (> x601 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x134))) 1 0)) (= 0 x622) (= x232 (x549 (+ 57896044618658097711785492504343953926634992332820282019728792003956564819967 x271))) (< (* x279 x349) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x601) (> x232 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x601) (<= x232 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x601 x232))) 1 0) x238) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x426) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x426)) (< x426 0))) x389) (= x134 (x549 (+ 57896044618658097711785492504343953926634992332820282019728792003956564819968 x271))) (>= 20282409603651670423947251286015 x607) (= x51 (ite (not x576) 1 0)) (= x569 (x319 20282409603651670423947251286015 x614)) (<= 0 x120) (= x511 (x549 (+ x426 x169))) (= x456 (x319 20282409603651670423947251286015 x541)) (= x476 0) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x650) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x650)) (< x650 32)))) (= (* x607 x120) x664) (= (- (/ x107 1000000000000000) (uninterp_frac x107 1000000000000000)) x541) (= x409 (x121 (- x134 x601))) (>= 18446744073709551615 x349) (= x614 (- (/ x664 1000000000000000) (uninterp_frac x664 1000000000000000))) (= x274 (x319 x158 x238)) (= x576 (or (and (= true (<= x271 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x271 0)) (> x271 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x76 (ite (not x389) 1 0)) (= x430 (x121 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x426))) (>= x279 0) (= 0 x441) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x601)) (= x476 (x319 x398 x524)) (= x169 (x74 x614)) (not (> x456 10141204801825835211973625643007)) (< x279 20282409603651670423947251286016) (= (x74 x541) x271) (= (ite (or (> x426 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x426)) (> 0 x426))) 1 0) x398) (>= 20282409603651670423947251286015 x279) (= x158 (ite (or (and (= (<= x271 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x271 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x271)) 1 0))) x275)))
(assert (x228 x141))
(assert (not (= 3833100637 (x348 x229 1))))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 1000000000000000000)))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 10141204801825835211973625643007)))
(assert (x228 x476))
(assert (x597 x238))
(assert (x594 x111 x79))
(assert (x248 x193 x403 x119 x466))
(assert (x228 x580))
(assert (x594 x662 x195))
(assert (= (or (and x231 x63) (and x207 x309) (and x690 x410) (and x253 x399)) x489))
(assert (x597 x15))
(assert (x228 x55))
(assert (x228 x558))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x348 x229 1))))
(assert (not (= (x348 x117 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x597 x538))
(assert (not (= 274184521717934524641157099916833587233 (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x512))
(assert (x228 x526))
(assert (x228 x600))
(assert (not (= 1545947630 (x348 x229 1))))
(assert (x597 x193))
(assert (x594 x541 x5))
(assert (x597 x51))
(assert (x597 x605))
(assert (x228 x281))
(assert (x228 x145))
(assert (=> (> (+ 10000 1) x117) (not (= x117 (x348 274184521717934524641157099916833587211 5)))))
(assert (x228 x607))
(assert (x597 x563))
(assert (= x380 (=> (and (= x211 x250) (>= 1461501637330902918203684832716283019655932542975 x250) (>= 1461501637330902918203684832716283019655932542975 x563) (= x362 x563) (<= 0 x30) (= 3833100637 x445) (>= x554 0) (>= 1461501637330902918203684832716283019655932542975 x554) (= x92 (x319 1461501637330902918203684832716283019655932542975 x16)) (> 3889878717 x445) (not (< x445 3638949393)) (= x330 274184521717934524641157099916833587211) (not (< x445 2059964113)) (not (= x445 3695885053)) (not (= 3638949393 x445)) (= (= 274184521717934524641157099916833587231 x22) x207) (= x405 x80) (= x437 x304) (= x92 x250) (not (> 3122421376 x445)) (>= 1461501637330902918203684832716283019655932542975 x30) (= x305 (x97 274184521717934524641157099916833587211)) (= x554 x437) (= x258 x78) (not (= x445 3795249780)) (= x80 0) (> x305 0) (= x457 128) (<= 0 x250) (= x22 (x319 1461501637330902918203684832716283019655932542975 x8))) (and (=> (and (= 36 x102) (not x291) x207 (= (x415 x364) x465) (>= x465 0) (<= x465 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 36 x102) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x375) (= (x348 274184521717934524641157099916833587211 1) x364) (= (x97 274184521717934524641157099916833587231) x94) (not (< x102 4)) (= 32 x252) (= x291 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x639)) (< x639 32)) (> x639 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x154 826074471)) (= x639 (x121 (- x102 4))) (= x630 274184521717934524641157099916833587211) (= 1889567281 x154) (< 0 x94) (not (< x154 826074471)) (= x209 1)) x354) (=> (not x207) x544)))))
(assert (x228 x263))
(assert (= (and (not x207) x309) x231))
(assert (x228 x435))
(assert (x228 x134))
(assert (not (= (x348 x229 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x228 x199))
(assert (not (= 70124239 (x348 x229 1))))
(assert (x38 x204 x361))
(assert (x228 x491))
(assert (x597 1099511627775))
(assert (= (=> (and (not (= x105 3889878717)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x298) (and (= true (<= x298 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x298)))) (>= 1461501637330902918203684832716283019655932542975 x13) (= (> x535 0) x45) (< x219 1099511627776) (not (= x75 0)) (= x81 x101) (= x391 (x189 x454)) (= x391 x183) (or (and (= x349 x671) (not x45) (= x120 x220)) (and (> 18446744073709551616 x671) (= x4 (+ x239 x236)) (<= 0 x220) (= x512 (- (/ x588 1000000000000000) (uninterp_frac x588 1000000000000000))) (<= 0 x220) (or (and x471 (= x379 0)) (and (not x471) (= x379 x421) (= x421 (- (/ x498 x155) (uninterp_frac x498 x155))) (= (* x550 1000000000000000000) x498) (< (* x550 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (> 18446744073709551616 x671) (< x279 20282409603651670423947251286016) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x220 x278)) (= x86 (x319 18446744073709551615 x68)) (>= 20282409603651670423947251286015 x607) (= x194 (* x279 x671)) (= (* x535 x383) x592) (= x42 (x319 x204 x361)) (<= 0 x279) (= x278 x592) (< (* x656 x671) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x220 18446744073709551616) (< x671 18446744073709551616) x45 (>= x607 0) (>= x279 0) (= x651 (= 0 x279)) (<= 0 x671) (<= 0 x279) (= (= x607 0) x293) (<= 0 x671) (>= x220 0) (>= x220 0) (= (ite (> x220 x264) 1 0) x361) (= (- (/ x150 1000000000000000000) (uninterp_frac x150 1000000000000000000)) x206) (= x449 (- (/ x187 1000000000000000000) (uninterp_frac x187 1000000000000000000))) (= (* x607 x220) x588) (= x550 (x319 20282409603651670423947251286015 x381)) (= (< x279 x320) x25) (= x144 (ite (< x444 x671) 1 0)) (= x239 x449) (= x318 (x319 x666 x613)) (>= x671 0) (= (ite (not x477) 1 0) x558) (= (x319 x558 x407) x423) (= x123 x464) (= x464 (- (/ x665 1000000000000000000) (uninterp_frac x665 1000000000000000000))) (<= x279 20282409603651670423947251286015) (= (x319 18446744073709551615 x4) x406) (or (and (= x182 x214) (= (x319 18446744073709551615 x672) x230) (= x37 x649) (= x688 x540) (= (* x32 x535) x649) (<= x279 20282409603651670423947251286015) (>= x279 0) (not (> x214 18446744073709551615)) (> x279 0) (not x25) (< x540 18446744073709551616) (= (* x37 x506) x1) (<= x672 18446744073709551615) (< (* x535 x32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (* x506 x37) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x279 20282409603651670423947251286016) (>= 18446744073709551615 x540) (<= 0 x540) (= x672 (+ x182 x688)) (= x214 (- (/ x1 x279) (uninterp_frac x1 x279))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x540 x214))) x25) (= (- (/ x493 1000000000000000) (uninterp_frac x493 1000000000000000)) x538) (< x607 20282409603651670423947251286016) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)) x444) (< x607 20282409603651670423947251286016) (or (and (= x681 (- (/ x222 1000000000000000000) (uninterp_frac x222 1000000000000000000))) (= (* x583 x340) x222) (< (+ x681 x33) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x263 x343) (= x590 (* x50 x206)) (< (* x583 x340) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x50 (+ x532 x49)) (< (* x206 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x343 (- (/ x590 1000000000000000000) (uninterp_frac x590 1000000000000000000))) (not x89) (= x681 x532) (not (> x343 18446744073709551615)) (= x49 x33)) (and (< (* x137 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x121 (- x340 x185)) x680) (= x263 x585) (= (- (/ x386 1000000000000000000) (uninterp_frac x386 1000000000000000000)) x52) (< (+ x55 x370) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x311 x370) (= (+ x311 x440) x435) (< (* x435 x206) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x39 (* x206 x435)) (= (* x137 x680) x629) (= x52 x353) (= x641 x33) (= (* x583 x185) x386) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x583 x185)) (= (+ x641 x353) x55) (= x440 x55) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x33 x52)) (= x370 (- (/ x629 1000000000000000000) (uninterp_frac x629 1000000000000000000))) (= (- (/ x39 1000000000000000000) (uninterp_frac x39 1000000000000000000)) x585) (not (< x340 x185)) (not (< 18446744073709551615 x585)) x89)) (= x665 (* x656 x671)) (<= x279 20282409603651670423947251286015) (= x42 0) (= x268 (* x220 x607)) (<= x220 18446744073709551615) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x263 x535)) (< x279 20282409603651670423947251286016) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)) x598) (>= x671 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x449 x220)) (= x595 x656) (= x318 0) (< x220 18446744073709551616) (= x671 x434) (not (< 18446744073709551615 x449)) (= (* x278 x220) x187) (= x120 x130) (= (- (/ x268 1000000000000000) (uninterp_frac x268 1000000000000000)) x381) (<= x279 20282409603651670423947251286015) (= (x319 18446744073709551615 x4) x130) (>= 18446744073709551615 x220) (<= x671 18446744073709551615) (= x68 (+ x434 x123)) (or x235 (and (= (+ x277 x691) x551) (= x210 (* x249 x506)) (= x249 x205) (> x607 0) (= x676 (- (/ x210 x607) (uninterp_frac x210 x607))) (= x676 x691) (not (< 18446744073709551615 x676)) (< (+ x136 x676) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x607 20282409603651670423947251286016) (not x235) (= x205 (* x535 x631)) (< (* x249 x506) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x319 18446744073709551615 x551) x633) (<= x607 20282409603651670423947251286015) (<= 0 x136) (>= 18446744073709551615 x551) (>= x607 0) (< x136 18446744073709551616) (<= x136 18446744073709551615) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x631 x535)) (= x136 x277))) (not (< 18446744073709551615 x464)) (= x89 (< x185 x340)) (= (< x607 x320) x235) (<= 0 x607) (or (and (= x172 (+ x645 x419)) x673 (< (* x185 x583) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x95 (* x137 x636)) (= (+ x41 x615) x660) (= x615 x33) (= x57 (* x185 x583)) (= x200 (- (/ x95 1000000000000000000) (uninterp_frac x95 1000000000000000000))) (= x438 (- (/ x57 1000000000000000000) (uninterp_frac x57 1000000000000000000))) (< (* x137 x636) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x383 x172) (= x438 x41) (= x636 (x121 (- x379 x185))) (not (> x172 18446744073709551615)) (= x419 x660) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x33 x438)) (not (> x185 x379)) (< (+ x200 x660) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x200 x645)) (and (not x673) (= x383 x530) (= x429 (* x379 x583)) (not (< 18446744073709551615 x530)) (= (+ x682 x396) x530) (= x510 x396) (= x510 (- (/ x429 1000000000000000000) (uninterp_frac x429 1000000000000000000))) (< (* x583 x379) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x682 x33) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x510 x33)))) (= x595 (* x535 x263)) (= x613 (ite (< x627 x671) 1 0)) (= x402 (x319 18446744073709551615 x68)) (= x155 (x319 20282409603651670423947251286015 x538)) (= (* x110 x340) x150) (= (= x279 0) x610) (= (x121 (- 1000000000000000000 x162)) x110) (>= 18446744073709551615 x220) (= (x319 20282409603651670423947251286015 x512) x584) (= (ite (> x220 x598) 1 0) x407) (not (> x162 1000000000000000000)) (> 18446744073709551616 x220) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)) x264) (< x671 18446744073709551616) (= (= x607 0) x477) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x671 x464)) (< x279 20282409603651670423947251286016) (= (* x279 x671) x493) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x535 x383)) (or (and x462 (= 0 x340)) (and (not x462) (< (* 1000000000000000000 x584) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x181 x340) (= (- (/ x176 x567) (uninterp_frac x176 x567)) x181) (= (* 1000000000000000000 x584) x176))) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x279)) x627) (<= x4 18446744073709551615) (<= 0 x607) (= (x319 20282409603651670423947251286015 x90) x567) (< x220 18446744073709551616) (= x302 (x319 x160 x144)) (> 20282409603651670423947251286016 x607) (= x666 (ite (not x651) 1 0)) (<= x220 18446744073709551615) (<= x671 18446744073709551615) (= x86 x349) (= x302 0) (>= 18446744073709551615 x671) (>= 18446744073709551615 x68) (= x160 (ite (not x610) 1 0)) (= (= x155 0) x471) (= x204 (ite (not x293) 1 0)) (= x462 (= x567 0)) (= x673 (> x379 x185)) (<= x607 20282409603651670423947251286015) (= x423 0) (= (- (/ x194 1000000000000000) (uninterp_frac x194 1000000000000000)) x90) (= x236 x220) (<= x607 20282409603651670423947251286015) (< (* x340 x110) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x671 18446744073709551615))) (>= x13 0) (>= 1461501637330902918203684832716283019655932542975 x81) (not (> 3122421376 x105)) (<= 0 x219) (= x332 (x97 274184521717934524641157099916833587211)) (= x211 x13) (= x316 x405) (<= x408 1461501637330902918203684832716283019655932542975) (not (< x655 x219)) (= x316 0) (= x91 (= x391 0)) (not (< x105 3889878717)) (= (x319 1099511627775 x359) x535) (< 0 x332) (not (> 3638949393 x105)) (>= x408 0) (> x391 0) (not (> 2059964113 x105)) (= x304 x101) (<= 0 x81) (= 4033150093 x105) (>= 1099511627775 x219) (= x655 x112) (= x85 (not x91)) (= (x121 (- x112 x219)) x359) (< x655 1099511627776) (= (ite x85 1 0) x183)) x223) x184))
(assert (x228 x50))
(assert (=> (< (- x117 1) 10000) (not (= x117 (x348 x229 1)))))
(assert (x228 x142))
(assert (x228 x487))
(assert (not (= 274184521717934524641157099916833587223 (x348 x394 1))))
(assert (x594 x538 x43))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x348 274184521717934524641157099916833587211 5))))
(assert (x38 x158 x238))
(assert (not (= (x348 x229 1) 826074471)))
(assert (x597 x160))
(assert (=> (< (- x229 1) 10000) (not (= (x348 x394 1) x229))))
(assert (not (= 3889878717 (x348 x229 1))))
(assert (x597 x151))
(assert (x228 x32))
(assert (x228 x56))
(assert (not (= 3122421376 (x348 x229 1))))
(assert (x228 x252))
(assert (x228 x643))
(assert (x597 x614))
(assert (x333 x8 x190))
(assert (not (= (x348 x117 1) 4033150093)))
(assert (x228 x310))
(assert (x228 x46))
(assert (x228 x130))
(assert (not (= (x348 x117 1) 1208925819614629174706175)))
(assert (x322 x642))
(assert (not (= 11269569 (x348 x229 1))))
(assert (x228 x630))
(assert (x228 x636))
(assert (x228 x613))
(assert (x228 x86))
(assert (x228 x614))
(assert (x228 x342))
(assert (not (= 1889567281 (x348 274184521717934524641157099916833587211 1))))
(assert (= (=> (= (= 274184521717934524641157099916833587227 x600) x679) (and (=> (not x679) x19) (=> (and (= 1 x75) (= (x348 274184521717934524641157099916833587211 1) x70) (= x229 x387) (= (x348 x229 1) x606) (= x369 x138) (<= 0 x138) (= x171 2835717307) (= (x121 (- x536 4)) x287) (< 0 x395) (= x164 x509) (= x298 32) (= 274184521717934524641157099916833587211 x36) (= x12 (x348 x229 1)) (not (> 4 x536)) (< (+ x509 x138) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x536 x276) (not x216) (not (> 826074471 x171)) (= x448 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x121 (- x565 x514)) x574) (<= 0 x565) (= (x427 x606) x138) x679 (not (= 2514000705 x171)) (= x297 (+ x369 x164)) (<= x565 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x270 x229) (not x118) (= x514 x78) (= 274184521717934524641157099916833587211 x432) (= x216 (or (> x287 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x287 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x287 64)))) (= (x348 274184521717934524641157099916833587211 1) x116) (= (x97 274184521717934524641157099916833587227) x395) (= x536 68) (<= x138 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x500 x116) x565) (not (= 826074471 x171)) (<= x229 1461501637330902918203684832716283019655932542975) (= x509 x514) (= (< x565 x514) x118) (not (= 1889567281 x171))) x184))) x390))
(assert (x38 x148 x605))
(assert (x228 x671))
(assert (x228 x22))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 3695885053)))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 151187884)))
(assert (x228 x133))
(assert (x228 x146))
(assert (=> (< (- x394 1) 10000) (not (= x394 (x348 x117 1)))))
(assert (not (= (x348 x394 1) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x228 x298))
(assert (x333 x16 x559))
(assert (not (= 274184521717934524641157099916833587244 (x348 274184521717934524641157099916833587211 1))))
(assert (x597 x204))
(assert (= true x357))
(assert (x38 x558 x407))
(assert (x228 x330))
(assert (x228 x175))
(assert (not (= 18446744073709551615 (x348 x229 1))))
(assert (x597 x381))
(assert (x228 x445))
(assert (x228 x68))
(assert (x228 x245))
(assert (x228 x529))
(assert (x228 x437))
(assert (x228 x132))
(assert (x228 x208))
(assert (x228 x397))
(assert (not (= 2707768185 (x348 x229 1))))
(assert (x228 x154))
(assert (not (= (x348 x117 1) 204737060)))
(assert (x228 x375))
(assert (not (= 3695885053 (x348 x229 1))))
(assert (x228 x249))
(assert (x228 x16))
(assert (x597 x48))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 204737060)))
(assert (x228 x398))
(assert (not (= (x348 x117 1) 1545947630)))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 274184521717934524641157099916833587211)))
(assert (x228 x343))
(assert (x597 x642))
(assert (x228 x439))
(assert (x228 x237))
(assert (x228 x20))
(assert (not (= (x348 x229 1) 10141204801825835211973625643007)))
(assert (not (= (x348 x117 1) 20282409603651670423947251286016)))
(assert (x228 x271))
(assert (not (= 480214969 (x348 x394 1))))
(assert (x228 x185))
(assert (x228 x540))
(assert (x228 x436))
(assert (x228 x383))
(assert (x228 x633))
(assert (x228 x670))
(assert (not (= (x348 x394 1) 1000000000000000)))
(assert (x228 x420))
(assert (x228 x304))
(assert (x228 x284))
(assert (not (= (x348 x229 1) 274184521717934524641157099916833587233)))
(assert (not (= (x348 x394 1) 274184521717934524641157099916833587244)))
(assert (x228 x258))
(assert (not (= 274184521717934524641157099916833587211 (x348 x394 1))))
(assert (x228 x225))
(assert (x228 x329))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 1)))
(assert (x460 x117))
(assert (not (= 20282409603651670423947251286015 (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x213))
(assert (not (= (x348 x117 1) 5)))
(assert (x228 x474))
(assert (x228 x316))
(assert (not (= (x348 x229 1) 1000000000000000000)))
(assert (= (and x410 (not x690)) x108))
(assert (x228 x463))
(assert (x228 x567))
(assert (x228 x394))
(assert (not (= 274184521717934524641157099916833587231 (x348 274184521717934524641157099916833587211 1))))
(assert (x597 x512))
(assert (not (= 274184521717934524641157099916833587227 (x348 x394 1))))
(assert (not (= 1099511627775 (x348 274184521717934524641157099916833587211 1))))
(assert (x594 x237 x400))
(assert (not (= 2514000705 (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x93))
(assert (not (= (x348 x394 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x228 x37))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 1000000000000000)))
(assert (not (= 98097205 (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x296))
(assert (not x323))
(assert (x228 x464))
(assert (not (= 274184521717934524641157099916833587211 (x348 x117 1))))
(assert (x228 x169))
(assert (not (= (x348 x229 1) 840395849)))
(assert (x228 x136))
(assert (not (= (x348 x394 1) 151187884)))
(assert (x228 x689))
(assert (x228 x480))
(assert (= x295 (=> (= x690 (= x22 274184521717934524641157099916833587244)) (and (=> (not x690) x357) (=> (and (= x289 36) (= 274184521717934524641157099916833587211 x124) (= (x121 (- x289 4)) x140) (= x59 (x319 20282409603651670423947251286015 x139)) (> x153 0) (= 32 x252) (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x111) true) (> x111 0)) x668) (= x503 (x348 274184521717934524641157099916833587211 5)) (<= x15 20282409603651670423947251286015) (= x44 1889567281) (= x289 36) (= x99 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x140) (and (< x140 32) (= true (<= x140 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (or (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x111) (and (< x111 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x111) true))) x215) (<= 0 x251) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x669 x251)) (= (x319 20282409603651670423947251286015 x111) x669) (> 18446744073709551616 x251) (= (* x669 x251) x552) (>= 18446744073709551615 x251) (not x215) (= x139 x442) x668 (= x442 (- (/ x552 1000000000000000) (uninterp_frac x552 1000000000000000)))) (and (not x668) (= 0 x139))) (>= x15 0) (not (< x44 1545947630)) (< x44 2707768185) (= (x202 x503) x15) x690 (> 20282409603651670423947251286016 x15) (= (x74 x15) x111) (= 1 x209) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x127) (not (= 1545947630 x44)) (= (x97 274184521717934524641157099916833587244) x153) (not (> 4 x289)) (not x99)) x354)))))
(assert (x597 x524))
(assert (x597 1461501637330902918203684832716283019655932542975))
(assert (x597 x662))
(assert (x228 x144))
(assert (x228 x379))
(assert (x228 x326))
(assert (not (= 480214969 (x348 274184521717934524641157099916833587211 5))))
(assert (x228 x444))
(assert (x228 x73))
(assert (x322 x15))
(assert (x38 x160 x144))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= 204737060 (x348 274184521717934524641157099916833587211 5))))
(assert (x228 x162))
(assert (x228 x432))
(assert (x597 x168))
(assert (x228 x191))
(assert (x228 x320))
(assert (x228 x537))
(assert (x228 x274))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 1545947630)))
(assert (x228 x551))
(assert (x228 x524))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x348 274184521717934524641157099916833587211 1))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x348 x117 1))))
(assert (= (and (not x147) x489) x507))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 2059964113)))
(assert (= true x377))
(assert (x228 x639))
(assert (= x3 (or (and x461 x64) (and x470 x525) (and x473 x35) (and x122 x453))))
(assert (not (= (x348 x117 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x348 x394 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x228 x105))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 2835717307)))
(assert (not (= 3122421376 (x348 x117 1))))
(assert (x228 x478))
(assert (=> (< (- x394 1) 10000) (not (= (x348 274184521717934524641157099916833587211 1) x394))))
(assert (x228 x127))
(assert (x228 x655))
(assert (x228 x120))
(assert (x228 x341))
(assert (x228 x251))
(assert (x322 x237))
(assert (not (= 1000000000000000 (x348 x229 1))))
(assert (not (= 11269569 (x348 x117 1))))
(assert (not (= 4033150093 (x348 274184521717934524641157099916833587211 5))))
(assert (not (= (x348 x117 1) 3833100637)))
(assert (x228 x349))
(assert (x228 x428))
(assert (x228 x518))
(assert (x228 x219))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 2059964113)))
(assert (x228 x214))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x348 x394 1))))
(assert (not (= 2707768185 (x348 274184521717934524641157099916833587211 5))))
(assert (x228 x446))
(assert (x228 x100))
(assert (not (= (x348 x117 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= 4033150093 (x348 274184521717934524641157099916833587211 1))))
(assert (not (= (x348 x229 1) 274184521717934524641157099916833587231)))
(assert (not (= 3122421376 (x348 274184521717934524641157099916833587211 1))))
(assert (= (and x231 (not x63)) x399))
(assert (x594 x392 x501))
(assert (not (= 1099511627775 (x348 x229 1))))
(assert (x228 x264))
(assert (= x431 true))
(assert (x38 x658 x145))
(assert (= x667 (=> (= (= 274184521717934524641157099916833587244 x534) x35) (and (=> (and (= (x97 274184521717934524641157099916833587244) x566) (= (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x342)) (< 0 x342)) x294) (= (x121 (- x436 4)) x644) (= x617 (x319 20282409603651670423947251286015 x392)) (= x436 36) (= x342 (x74 x662)) x35 (< x662 20282409603651670423947251286016) (= 36 x436) (not (= 1545947630 x483)) (= 274184521717934524641157099916833587211 x256) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x644) (and (> 32 x644) (= true (<= x644 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x653) (= 1 x261) (> x566 0) (not (< x483 1545947630)) (= (x202 x515) x662) (or (and (= x20 (- (/ x502 1000000000000000) (uninterp_frac x502 1000000000000000))) x294 (= (* x77 x251) x502) (>= x251 0) (= (x319 20282409603651670423947251286015 x342) x77) (>= 18446744073709551615 x251) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x77 x251)) (< x251 18446744073709551616) (= x331 (or (and (> 0 x342) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x342))) (> x342 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x331) (= x392 x20)) (and (not x294) (= x392 0))) (= x515 (x348 274184521717934524641157099916833587211 5)) (> 2707768185 x483) (= x650 32) (<= x662 20282409603651670423947251286015) (not (< x436 4)) (not x653) (>= x662 0) (= x483 1889567281) (= x624 50942633119752846454219349998365661925608737367104304655302372697894809501696)) x126) (=> (not x35) x377)))))
(assert (not (= 18446744073709551615 (x348 x117 1))))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x228 x209))
(assert (=> (= (x348 x394 1) (x348 x229 1)) (= x229 x394)))
(assert (x228 x541))
(assert (x597 x658))
(assert (not (= 151187884 (x348 x229 1))))
(assert (x228 x290))
(assert (x228 x9))
(assert (x228 x280))
(assert (x597 x672))
(assert (x228 x10))
(assert (x228 x509))
(assert (not (= 70124239 (x348 274184521717934524641157099916833587211 5))))
(assert (x228 x60))
(assert (not (= (x348 x229 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= 20282409603651670423947251286015 (x348 274184521717934524641157099916833587211 5))))
(assert (x228 x139))
(assert (not (= 1099511627775 (x348 274184521717934524641157099916833587211 5))))
(assert (not (= 2059964113 (x348 x229 1))))
(assert (x228 x243))
(assert (not (= 1545947630 (x348 274184521717934524641157099916833587211 5))))
(assert (x228 x76))
(assert (not (= 1000000000000000000 (x348 x117 1))))
(assert (not (= 5 (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x238))
(assert (not (= (x348 x117 1) 3638949393)))
(assert (= x309 x431))
(assert (not (= (x348 x117 1) 3695885053)))
(assert (not (= 151187884 (x348 274184521717934524641157099916833587211 5))))
(assert (= x223 (=> (and (= x534 (x319 1461501637330902918203684832716283019655932542975 x8)) (>= 1461501637330902918203684832716283019655932542975 x628) (= x355 128) (>= x428 0) (= x628 x211) (< x446 2059964113) (>= 1461501637330902918203684832716283019655932542975 x46) (< 0 x243) (= x304 x56) (= (x97 274184521717934524641157099916833587211) x243) (= x56 x428) (= 274184521717934524641157099916833587211 x635) (>= x46 0) (= x405 x474) (not (= 98097205 x446)) (= 151187884 x446) (<= x428 1461501637330902918203684832716283019655932542975) (> 480214969 x446) (not (= x446 11269569)) (= x461 (= 274184521717934524641157099916833587231 x534)) (= 0 x474) (> 204737060 x446) (< x446 840395849) (not (= 70124239 x446)) (>= x628 0)) (and (=> (and (= x308 274184521717934524641157099916833587211) (= x650 32) (= 36 x166) (= 36 x166) x461 (not (= 826074471 x508)) (= (x121 (- x166 4)) x478) (>= x310 0) (= (or (and (> 32 x478) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x478))) (> x478 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x327) (= x310 (x69 x217)) (not (> 826074471 x508)) (= 1 x261) (= (x97 274184521717934524641157099916833587231) x40) (not (> 4 x166)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x310) (not x327) (< 0 x40) (= x543 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x508 1889567281) (= (x348 274184521717934524641157099916833587211 1) x217)) x126) (=> (not x461) x88)))))
(assert (not (= 98097205 (x348 x229 1))))
(assert (x228 x168))
(assert (= x560 x3))
(assert (x228 x392))
(assert (x228 x124))
(assert (x228 x283))
(assert (x228 x661))
(assert (x228 x181))
(assert (not (= 1 (x348 x229 1))))
(assert (x228 x604))
(assert (not (= (x348 x229 1) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 18446744073709551616)))
(assert (not (= (x348 x117 1) 274184521717934524641157099916833587227)))
(assert (x228 x30))
(assert (x228 x287))
(assert (x228 x211))
(assert (not (= 1099511627776 (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x554))
(assert (= x64 x646))
(assert (not (= 2514000705 (x348 274184521717934524641157099916833587211 5))))
(assert (x228 x90))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 1000000000000000)))
(assert (x312 x68 x571))
(assert (x228 x193))
(assert (x597 x397))
(assert (x597 x237))
(assert (x228 x656))
(assert (x228 x48))
(assert (x228 x24))
(assert (not (= (x348 x117 1) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (not (= 3638949393 (x348 274184521717934524641157099916833587211 5))))
(assert (=> (< (- x394 1) 10000) (not (= (x348 274184521717934524641157099916833587211 5) x394))))
(assert (x228 x273))
(assert (x228 x449))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x348 274184521717934524641157099916833587211 1))))
(assert (not (= (x348 x229 1) 3795249780)))
(assert (not (= 480214969 (x348 x229 1))))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (not (= 18446744073709551615 (x348 274184521717934524641157099916833587211 1))))
(assert (not (= (x348 x117 1) 1099511627775)))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (=> (> (+ 10000 1) x229) (not (= (x348 274184521717934524641157099916833587211 1) x229))))
(assert (x228 x94))
(assert (x228 x617))
(assert (x228 x352))
(assert (not (= 1099511627775 (x348 x394 1))))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 840395849)))
(assert (x228 x44))
(assert (x228 x382))
(assert (not (= 274184521717934524641157099916833587227 (x348 274184521717934524641157099916833587211 5))))
(assert (not (= 274184521717934524641157099916833587227 (x348 x229 1))))
(assert (not (= (x348 x117 1) 2514000705)))
(assert (not (= (x348 x229 1) (x348 274184521717934524641157099916833587211 5))))
(assert (x228 x388))
(assert (x597 x68))
(assert (x228 x609))
(assert (not (= (x348 x394 1) 18446744073709551615)))
(assert (not (= (x348 x117 1) 2707768185)))
(assert (x228 x299))
(assert (not (= 2059964113 (x348 x394 1))))
(assert (x228 x627))
(assert (not (= 480214969 (x348 x117 1))))
(assert (x597 x392))
(assert (x228 x635))
(assert (x228 x204))
(assert (not (= 20282409603651670423947251286015 (x348 x229 1))))
(assert (x228 x40))
(assert (x228 x200))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 3889878717)))
(assert (x228 x339))
(assert (not (= (x348 x394 1) 5)))
(assert (not (= 3795249780 (x348 x394 1))))
(assert (x228 x78))
(assert (x228 x220))
(assert (not (= 3795249780 (x348 x117 1))))
(assert (x228 x459))
(assert (x228 x583))
(assert (x228 x33))
(assert (x228 x547))
(assert (x228 x279))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 1208925819614629174706175)))
(assert (not (= 480214969 (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x98))
(assert (not (= (x348 x394 1) 840395849)))
(assert (x228 x80))
(assert (x228 x581))
(assert (x228 x456))
(assert (x228 x71))
(assert (not (= 3889878717 (x348 x394 1))))
(assert (not (= 274184521717934524641157099916833587235 (x348 x117 1))))
(assert (x228 x530))
(assert (x597 x16))
(assert (x228 x332))
(assert (not (= 1208925819614629174706175 (x348 x229 1))))
(assert (x228 x7))
(assert (not (= 274184521717934524641157099916833587227 (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x360))
(assert (not (= (x348 x229 1) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x228 x172))
(assert (not (= (x348 x394 1) 2514000705)))
(assert (x228 x577))
(assert (not (= (x348 x117 1) 3889878717)))
(assert (x228 x497))
(assert (x228 x66))
(assert (x312 x551 x265))
(assert (x228 x206))
(assert (= x88 (=> (= x453 (= 274184521717934524641157099916833587227 x534)) (and (=> (and (<= 0 x517) (not (= 826074471 x661)) x453 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x517) (= x326 274184521717934524641157099916833587211) (= 36 x518) (= 1 x261) (not (> 4 x518)) (= 36 x518) (> x491 0) (= x93 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (< x661 826074471)) (not x288) (= x14 (x348 274184521717934524641157099916833587211 1)) (= 32 x650) (= x661 1889567281) (= x161 (x121 (- x518 4))) (= x288 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x161) true) (> 32 x161)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x161))) (= x517 (x179 x14)) (= (x97 274184521717934524641157099916833587227) x491)) x126) (=> (not x453) x317)))))
(assert (= (and x324 (not x29)) x531))
(assert (=> (= (x348 x229 1) (x348 274184521717934524641157099916833587211 1)) (= x229 274184521717934524641157099916833587211)))
(assert (x228 x539))
(assert (x228 x77))
(assert (x228 x340))
(assert (not (= 2059964113 (x348 x117 1))))
(assert (x228 x642))
(assert (x228 x574))
(assert (x228 x347))
(assert (x228 x391))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x348 274184521717934524641157099916833587211 5))))
(assert (x597 x76))
(assert (x228 x448))
(assert (x597 x361))
(assert (not (= (x348 x394 1) 20282409603651670423947251286016)))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 274184521717934524641157099916833587235)))
(assert (not (= 98097205 (x348 x394 1))))
(assert (x228 x161))
(assert (x228 x101))
(assert (= x470 (and (not x453) x122)))
(assert (not (= 5 (x348 274184521717934524641157099916833587211 5))))
(assert (x228 x405))
(assert (not (= 18446744073709551615 (x348 274184521717934524641157099916833587211 5))))
(assert (=> (= (x348 x117 1) (x348 x394 1)) (= x117 x394)))
(assert (x228 x166))
(assert (x228 x51))
(assert (not (= (x348 x229 1) 274184521717934524641157099916833587235)))
(assert (= x674 (and (not x35) x473)))
(assert (not (= (x348 x394 1) 18446744073709551616)))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 274184521717934524641157099916833587233)))
(assert (x228 x411))
(assert (x228 x534))
(assert (x228 x87))
(assert (x228 x151))
(assert (=> (< (- x394 1) 10000) (not (= (x348 x394 1) x394))))
(assert (x322 x541))
(assert (x322 x662))
(assert (x228 x407))
(assert (not (= (x348 x117 1) 840395849)))
(assert (= x473 (and (not x525) x470)))
(assert (x228 x426))
(assert (x597 x158))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 274184521717934524641157099916833587211)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x348 x229 1))))
(assert (not (= (x348 x394 1) 274184521717934524641157099916833587235)))
(assert (= x410 (and (not x253) x399)))
(assert (x228 x254))
(assert (x228 x81))
(assert (=> (< (- x117 1) 10000) (not (= (x348 x117 1) x117))))
(assert (not (= 1889567281 (x348 x229 1))))
(assert (not (= 1208925819614629174706175 (x348 x394 1))))
(assert (x38 x666 x613))
(assert (=> (> (+ 10000 1) x117) (not (= x117 (x348 274184521717934524641157099916833587211 1)))))
(assert (x228 x261))
(assert (x228 x538))
(assert (x228 x479))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x348 x394 1))))
(assert (= x323 (=> (and (>= x540 0) (>= 1099511627775 x283) (= x191 (x553 274184521717934524641157099916833587244)) x196 (= x563 x689) (<= 0 x325) (>= 18446744073709551615 x671) (<= 0 x191) (>= 1208925819614629174706175 x459) (= x564 (> (x97 274184521717934524641157099916833587233) 0)) (<= x279 20282409603651670423947251286015) (>= 255 x296) (>= 1208925819614629174706175 x7) (<= 0 x561) x313 x157 (<= 0 x356) (<= 0 x671) (>= 255 x60) (= x67 (x553 274184521717934524641157099916833587227)) (= x196 (> (x97 274184521717934524641157099916833587231) 0)) (<= 0 x220) (<= 0 x98) (>= x352 0) (<= 0 x537) (= x199 274184521717934524641157099916833587211) (>= 1461501637330902918203684832716283019655932542975 x325) (= x520 (< 0 (x97 274184521717934524641157099916833587235))) (<= 0 x562) (>= x163 0) (>= x246 0) (= (x553 274184521717934524641157099916833587223) x526) x548 (= x133 x372) (>= x136 0) (= x258 x372) (= x689 x325) (<= 0 x376) (>= 20282409603651670423947251286015 x562) x654 (>= 1099511627775 x219) (<= 0 x60) (<= x220 18446744073709551615) (= x211 x98) (= x352 (x553 274184521717934524641157099916833587211)) (<= x607 20282409603651670423947251286015) (= x325 x339) (<= 0 x296) (= x484 (x553 274184521717934524641157099916833587235)) (>= x621 0) (<= 0 x219) x424 (<= 0 x416) (= (x553 274184521717934524641157099916833587231) x621) (>= x7 0) (>= 18446744073709551615 x163) (<= x555 1208925819614629174706175) (>= x555 0) x564 (>= 18446744073709551615 x416) (>= x251 0) (>= x175 0) (<= x136 18446744073709551615) (<= 0 x279) (<= 0 x459) (>= 1461501637330902918203684832716283019655932542975 x376) (<= x246 18446744073709551615) (= x424 (< 0 (x97 274184521717934524641157099916833587244))) (<= x356 20282409603651670423947251286015) (<= x561 255) (>= 18446744073709551615 x251) (<= 0 x283) (= (< 0 (x97 274184521717934524641157099916833587211)) x654) (<= 0 x67) (>= x607 0) (>= x497 0) (= x376 x479) (= (< 0 (x97 274184521717934524641157099916833587227)) x157) (>= x526 0) (<= x98 1461501637330902918203684832716283019655932542975) x520 (<= 0 x484) (= (x553 274184521717934524641157099916833587233) x497) (<= x175 1208925819614629174706175) (= x313 (> (x97 274184521717934524641157099916833587223) 0)) (= x548 (not (= x339 274184521717934524641157099916833587211))) (>= 18446744073709551615 x540) (>= 255 x537)) x380)))
(assert (x228 x42))
(assert (x228 x110))
(assert (x228 x160))
(assert (not (= (x348 x117 1) 10141204801825835211973625643007)))
(assert (x228 x660))
(assert (x38 x48 x151))
(assert (x228 x514))
(assert (x228 x608))
(assert (x594 x342 x186))
(assert (x228 x158))
(assert (x594 x15 x425))
(assert (not (= 1 (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x510))
(assert (x594 x614 x678))
(assert (not (= (x348 x229 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x594 x642 x687))
(assert (not (= (x348 x229 1) 274184521717934524641157099916833587244)))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 274184521717934524641157099916833587235)))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 274184521717934524641157099916833587231)))
(assert (x228 x484))
(assert (x228 x230))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x312 x672 x173))
(assert (not (= (x348 x117 1) 151187884)))
(assert (x594 x90 x226))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x228 x278))
(assert (x597 18446744073709551615))
(assert (not (= 274184521717934524641157099916833587233 (x348 x117 1))))
(assert (x228 x362))
(assert (x228 x212))
(assert (x597 x398))
(assert (x597 x407))
(assert (x228 x565))
(assert (x228 x13))
(assert (x228 x508))
(assert (not (= 11269569 (x348 x394 1))))
(assert (x228 x102))
(assert (x228 x681))
(assert (x597 x307))
(assert (not (= (x348 x394 1) 274184521717934524641157099916833587231)))
(assert (not (= 98097205 (x348 x117 1))))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 1099511627776)))
(assert (not (= 274184521717934524641157099916833587231 (x348 x117 1))))
(assert (x228 x218))
(assert (not (= (x348 x394 1) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x228 x112))
(assert (x228 x605))
(assert (x460 x229))
(assert (= (=> (= x29 (= 274184521717934524641157099916833587223 x600)) (and (=> (and (<= x117 1461501637330902918203684832716283019655932542975) (= x529 x117) (<= x254 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (or (and (= true (<= x505 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x505 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x505)) x603) (not (= 2514000705 x488)) (= x254 (x433 x616)) (= x78 x632) (= x117 x387) (= (x348 274184521717934524641157099916833587211 1) x149) x29 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x87 x539)) (= x146 68) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x273) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x539) (>= x539 0) (= x276 x146) (= 32 x298) (= (x121 (- x146 4)) x505) (= (< x254 x632) x384) (= x616 (x348 274184521717934524641157099916833587211 1)) (= x539 x612) (not (< x146 4)) (= x269 274184521717934524641157099916833587211) (= (x545 x570) x539) (= x75 1) (< 0 x487) (>= x254 0) (= x87 x203) (= x488 2835717307) (= x393 (x348 x117 1)) (not (= 1889567281 x488)) (= x692 (x121 (- x254 x632))) (not x384) (= (x97 274184521717934524641157099916833587223) x487) (= (+ x203 x612) x418) (= x87 x632) (= 274184521717934524641157099916833587211 x582) (not (= 826074471 x488)) (= (x348 x117 1) x570) (not x603) (not (< x488 826074471))) x184) (=> (not x29) x65))) x19))
(assert (not (= 98097205 (x348 274184521717934524641157099916833587211 5))))
(assert (x597 20282409603651670423947251286015))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x228 x356))
(assert (not (= 274184521717934524641157099916833587244 (x348 274184521717934524641157099916833587211 5))))
(assert (not (= 826074471 (x348 x117 1))))
(assert (x228 x300))
(assert (= x317 (=> (= x525 (= x534 274184521717934524641157099916833587223)) (and (=> (and (= (x97 274184521717934524641157099916833587223) x341) x525 (= x66 (x481 x568)) (= 36 x604) (= 32 x650) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x132) (not (= 826074471 x329)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x66) (not x244) (<= 0 x66) (= x480 274184521717934524641157099916833587211) (= 1 x261) (= (x348 274184521717934524641157099916833587211 1) x568) (= x244 (or (> x281 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x281 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x281 32)))) (= 36 x604) (< 0 x341) (not (> 826074471 x329)) (= 1889567281 x329) (= x281 (x121 (- x604 4))) (not (> 4 x604))) x126) (=> (not x525) x667)))))
(assert (not (= (x348 x394 1) 274184521717934524641157099916833587233)))
(assert (=> (= (x348 x394 1) (x348 274184521717934524641157099916833587211 1)) (= 274184521717934524641157099916833587211 x394)))
(assert (x373 x359 x301))
(assert (x228 x276))
(assert (x228 x270))
(assert (x228 x692))
(assert (not (= 1545947630 (x348 x394 1))))
(assert (x228 x67))
(assert (not (= 3638949393 (x348 274184521717934524641157099916833587211 1))))
(assert (x228 x535))
(assert (not (= (x348 274184521717934524641157099916833587211 1) 3833100637)))
(assert (x594 x139 x417))
(assert (x228 x387))
(assert (x228 x302))
(assert (x228 x621))
(assert (not (= (x348 274184521717934524641157099916833587211 5) 1889567281)))
(check-sat)
