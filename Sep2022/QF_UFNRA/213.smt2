(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-fun x424 () Real)
(declare-fun x1960 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x885 () Bool)
(declare-fun x471 (Real) Real)
(declare-fun x2138 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x233 () Real)
(declare-fun x1969 () Real)
(declare-fun x1190 () Bool)
(declare-fun x1949 () Real)
(declare-fun x352 () Real)
(declare-fun x949 () Bool)
(declare-fun x1817 (Real) Real)
(declare-fun x99 () Bool)
(declare-fun x3 () Real)
(declare-fun x1712 () Real)
(declare-fun x1698 () Real)
(declare-fun x1486 () Real)
(declare-fun x1282 () Real)
(declare-fun x734 () Bool)
(declare-fun x889 () Bool)
(declare-fun x571 () Bool)
(declare-fun x1299 () Real)
(declare-fun x1630 () Bool)
(declare-fun x666 () Bool)
(declare-fun x260 () Bool)
(declare-fun x637 () Bool)
(declare-fun x880 () Bool)
(declare-fun x1929 () Bool)
(declare-fun x711 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x1662 () Real)
(declare-fun x123 () Bool)
(declare-fun x2270 (Real) Real)
(declare-fun x2286 () Real)
(declare-fun x692 () Bool)
(declare-fun x1927 () Bool)
(declare-fun x1755 () Real)
(declare-fun x990 () Real)
(declare-fun x1610 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x2228 () Bool)
(declare-fun x446 (Real) Real)
(declare-fun x1857 () Real)
(declare-fun x1293 () Real)
(declare-fun x971 () Real)
(declare-fun x92 () Real)
(declare-fun x300 () Real)
(declare-fun x1870 () Bool)
(declare-fun x721 () Real)
(declare-fun x1517 () Bool)
(declare-fun x543 () Real)
(declare-fun x2206 () Real)
(declare-fun x1323 () Bool)
(declare-fun x1130 () Real)
(declare-fun x285 () Real)
(declare-fun x183 () Bool)
(declare-fun x2284 () Bool)
(declare-fun x1410 () Real)
(declare-fun x614 () Bool)
(declare-fun x158 () Real)
(declare-fun x1933 () Real)
(declare-fun x484 () Bool)
(declare-fun x306 (Real) Real)
(declare-fun x1402 () Bool)
(declare-fun x1683 () Real)
(declare-fun x976 () Bool)
(declare-fun x757 () Real)
(declare-fun x258 () Real)
(declare-fun x439 () Real)
(declare-fun x372 () Bool)
(declare-fun x2003 () Bool)
(declare-fun x2141 () Real)
(declare-fun x1926 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x365 () Real)
(declare-fun x1632 () Real)
(declare-fun x629 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x2017 () Bool)
(declare-fun x298 () Real)
(declare-fun x618 () Real)
(declare-fun x567 (Real) Real)
(declare-fun x44 () Bool)
(declare-fun x486 () Real)
(declare-fun x389 () Bool)
(declare-fun x1722 () Real)
(declare-fun x1001 () Bool)
(declare-fun x239 () Real)
(declare-fun x2129 () Bool)
(declare-fun x802 () Bool)
(declare-fun x1720 (Real) Real)
(declare-fun x654 () Bool)
(declare-fun x2176 (Real) Real)
(declare-fun x13 () Bool)
(declare-fun x661 () Bool)
(declare-fun x1225 () Real)
(declare-fun x1664 () Real)
(declare-fun x988 () Real)
(declare-fun x782 () Real)
(declare-fun x466 () Bool)
(declare-fun x196 () Bool)
(declare-fun x817 () Bool)
(declare-fun x1102 () Real)
(declare-fun x1285 () Bool)
(declare-fun x1197 () Real)
(declare-fun x213 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x156 () Bool)
(declare-fun x587 () Real)
(declare-fun x814 () Real)
(declare-fun x2139 (Real) Real)
(declare-fun x1118 () Bool)
(declare-fun x934 () Bool)
(declare-fun x329 () Real)
(declare-fun x1002 () Bool)
(declare-fun x1879 () Real)
(declare-fun x315 () Real)
(declare-fun x2274 () Bool)
(declare-fun x2259 () Real)
(declare-fun x2246 () Real)
(declare-fun x1105 () Bool)
(declare-fun x532 () Real)
(declare-fun x2231 () Real)
(declare-fun x100 () Real)
(declare-fun x2255 () Bool)
(declare-fun x1808 () Bool)
(declare-fun x458 () Bool)
(declare-fun x212 () Bool)
(declare-fun x59 () Real)
(declare-fun x262 () Bool)
(declare-fun x1383 (Real) Real)
(declare-fun x180 () Real)
(declare-fun x234 () Bool)
(declare-fun x886 () Real)
(declare-fun x202 () Bool)
(declare-fun x1097 () Real)
(declare-fun x1343 () Real)
(declare-fun x142 () Bool)
(declare-fun x879 () Bool)
(declare-fun x1509 () Bool)
(declare-fun x847 () Bool)
(declare-fun x485 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x905 () Bool)
(declare-fun x1735 () Real)
(declare-fun x1409 () Bool)
(declare-fun x254 () Bool)
(declare-fun x415 () Bool)
(declare-fun x1921 (Real) Real)
(declare-fun x1077 () Real)
(declare-fun x1196 () Real)
(declare-fun x60 () Bool)
(declare-fun x314 () Bool)
(declare-fun x2233 () Bool)
(declare-fun x1372 () Real)
(declare-fun x2264 () Real)
(declare-fun x2146 () Bool)
(declare-fun x1952 () Real)
(declare-fun x1437 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x683 () Real)
(declare-fun x859 () Real)
(declare-fun x384 () Real)
(declare-fun x2102 () Bool)
(declare-fun x1384 () Real)
(declare-fun x404 () Real)
(declare-fun x188 (Real) Real)
(declare-fun x1528 () Bool)
(declare-fun x313 () Real)
(declare-fun x531 () Real)
(declare-fun x1521 () Real)
(declare-fun x1415 () Real)
(declare-fun x1345 () Real)
(declare-fun x218 () Bool)
(declare-fun x584 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x412 () Real)
(declare-fun x199 () Bool)
(declare-fun x967 (Real) Real)
(declare-fun x1628 () Real)
(declare-fun x2250 () Real)
(declare-fun x238 () Real)
(declare-fun x1922 () Bool)
(declare-fun x939 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x241 () Real)
(declare-fun x359 () Real)
(declare-fun x1314 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x929 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x608 () Bool)
(declare-fun x1373 (Real) Real)
(declare-fun x912 () Real)
(declare-fun x1360 () Bool)
(declare-fun x2197 () Bool)
(declare-fun x110 () Real)
(declare-fun x1504 () Bool)
(declare-fun x615 () Real)
(declare-fun x1381 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x73 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x457 () Bool)
(declare-fun x923 () Real)
(declare-fun x699 () Bool)
(declare-fun x844 () Real)
(declare-fun x1273 () Real)
(declare-fun x2234 () Bool)
(declare-fun x335 () Real)
(declare-fun x1252 () Real)
(declare-fun x1601 (Real) Real)
(declare-fun x504 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x176 () Bool)
(declare-fun x231 () Bool)
(declare-fun x1890 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x601 () Bool)
(declare-fun x715 () Bool)
(declare-fun x955 () Bool)
(declare-fun x981 () Real)
(declare-fun x547 () Real)
(declare-fun x1915 () Real)
(declare-fun x344 () Bool)
(declare-fun x914 () Real)
(declare-fun x508 (Real) Real)
(declare-fun x1579 () Real)
(declare-fun x1511 () Bool)
(declare-fun x2226 () Real)
(declare-fun x1341 () Bool)
(declare-fun x1353 (Real) Real)
(declare-fun x1444 () Bool)
(declare-fun x572 () Bool)
(declare-fun x2194 () Real)
(declare-fun x1590 () Real)
(declare-fun x1818 () Bool)
(declare-fun x675 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x1040 () Real)
(declare-fun x1914 () Bool)
(declare-fun x1199 () Real)
(declare-fun x1193 () Bool)
(declare-fun x613 () Bool)
(declare-fun x108 () Real)
(declare-fun x20 () Real)
(declare-fun x1357 () Bool)
(declare-fun x1066 () Real)
(declare-fun x575 () Real)
(declare-fun x1400 () Real)
(declare-fun x126 () Real)
(declare-fun x1639 (Real) Real)
(declare-fun x1455 () Bool)
(declare-fun x1853 (Real) Real)
(declare-fun x2192 (Real) Real)
(declare-fun x1792 () Bool)
(declare-fun x53 () Bool)
(declare-fun x1663 () Real)
(declare-fun x460 () Bool)
(declare-fun x1292 () Real)
(declare-fun x70 () Bool)
(declare-fun x378 () Bool)
(declare-fun x994 () Real)
(declare-fun x331 (Real) Real)
(declare-fun x2087 () Real)
(declare-fun x698 (Real) Real)
(declare-fun x524 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x1074 () Real)
(declare-fun x2181 () Real)
(declare-fun x731 () Bool)
(declare-fun x288 () Real)
(declare-fun x152 (Real) Real)
(declare-fun x437 () Real)
(declare-fun x713 (Real) Real)
(declare-fun x2148 () Real)
(declare-fun x1973 (Real) Real)
(declare-fun x1644 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x2200 () Real)
(declare-fun x184 () Bool)
(declare-fun x102 () Real)
(declare-fun x1498 () Real)
(declare-fun x852 () Bool)
(declare-fun x887 () Bool)
(declare-fun x1555 () Real)
(declare-fun x338 () Real)
(declare-fun x1897 () Bool)
(declare-fun x47 () Real)
(declare-fun x1849 () Real)
(declare-fun x2152 () Bool)
(declare-fun x97 () Real)
(declare-fun x1164 () Bool)
(declare-fun x1858 () Bool)
(declare-fun x295 () Bool)
(declare-fun x1537 () Real)
(declare-fun x354 () Real)
(declare-fun x970 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x1646 () Real)
(declare-fun x1780 () Bool)
(declare-fun x377 () Real)
(declare-fun x1375 () Bool)
(declare-fun x1622 () Bool)
(declare-fun x942 (Real) Real)
(declare-fun x497 (Real) Real)
(declare-fun x1677 () Real)
(declare-fun x773 () Real)
(declare-fun x2060 (Real) Real)
(declare-fun x116 () Real)
(declare-fun x1552 () Bool)
(declare-fun x185 () Real)
(declare-fun x1638 () Bool)
(declare-fun x664 () Real)
(declare-fun x892 () Real)
(declare-fun x1815 () Real)
(declare-fun x1581 () Bool)
(declare-fun x1928 () Bool)
(declare-fun x1617 () Real)
(declare-fun x725 () Bool)
(declare-fun x2257 () Bool)
(declare-fun x625 () Real)
(declare-fun x1983 () Bool)
(declare-fun x1460 () Real)
(declare-fun x596 () Real)
(declare-fun x927 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x473 () Real)
(declare-fun x1693 () Bool)
(declare-fun x2078 () Real)
(declare-fun x946 (Real) Real)
(declare-fun x893 () Real)
(declare-fun x1350 () Real)
(declare-fun x2121 () Bool)
(declare-fun x1304 () Real)
(declare-fun x1426 () Real)
(declare-fun x1976 () Bool)
(declare-fun x2058 () Real)
(declare-fun x2256 () Bool)
(declare-fun x964 () Real)
(declare-fun x1723 () Real)
(declare-fun x863 (Real) Real)
(declare-fun x1906 () Bool)
(declare-fun x432 () Real)
(declare-fun x2189 () Bool)
(declare-fun x1624 () Real)
(declare-fun x1880 () Real)
(declare-fun x1060 () Bool)
(declare-fun x465 () Real)
(declare-fun x2213 () Bool)
(declare-fun x732 () Bool)
(declare-fun x507 () Bool)
(declare-fun x409 () Real)
(declare-fun x1510 () Real)
(declare-fun x1543 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x1837 () Real)
(declare-fun x1057 () Real)
(declare-fun x1189 () Real)
(declare-fun x1064 (Real) Real)
(declare-fun x2046 () Bool)
(declare-fun x518 () Real)
(declare-fun x875 () Real)
(declare-fun x2268 () Real)
(declare-fun x9 () Real)
(declare-fun x2016 () Bool)
(declare-fun x276 () Bool)
(declare-fun x2157 () Bool)
(declare-fun x1141 () Real)
(declare-fun x1471 () Real)
(declare-fun x1679 () Bool)
(declare-fun x830 () Bool)
(declare-fun x2134 () Real)
(declare-fun x175 () Bool)
(declare-fun x1332 (Real) Real)
(declare-fun x2202 () Real)
(declare-fun x686 () Real)
(declare-fun x2034 () Real)
(declare-fun x489 () Real)
(declare-fun x1243 (Real) Real)
(declare-fun x605 () Bool)
(declare-fun x950 () Real)
(declare-fun x1570 () Real)
(declare-fun x1596 () Real)
(declare-fun x901 (Real) Real)
(declare-fun x791 () Bool)
(declare-fun x2079 () Real)
(declare-fun x49 () Bool)
(declare-fun x1173 () Real)
(declare-fun x979 () Bool)
(declare-fun x15 () Bool)
(declare-fun x671 () Bool)
(declare-fun x991 () Bool)
(declare-fun x96 () Real)
(declare-fun x1612 () Real)
(declare-fun x871 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x1819 () Real)
(declare-fun x1803 () Real)
(declare-fun x14 () Real)
(declare-fun x1711 () Bool)
(declare-fun x33 () Bool)
(declare-fun x10 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x1925 () Real)
(declare-fun x1540 () Real)
(declare-fun x376 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x1229 () Real)
(declare-fun x2072 () Real)
(declare-fun x2071 () Bool)
(declare-fun x510 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x1532 () Real)
(declare-fun x826 () Bool)
(declare-fun x390 () Bool)
(declare-fun x91 () Real)
(declare-fun x67 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x2196 () Bool)
(declare-fun x1489 (Real) Real)
(declare-fun x1544 () Bool)
(declare-fun x941 () Real)
(declare-fun x1955 () Bool)
(declare-fun x1494 () Real)
(declare-fun x1990 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x2182 () Real)
(declare-fun x1980 () Bool)
(declare-fun x1877 () Real)
(declare-fun x799 () Real)
(declare-fun x1162 () Bool)
(declare-fun x362 () Real)
(declare-fun x1524 () Real)
(declare-fun x1994 () Real)
(declare-fun x41 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x19 () Bool)
(declare-fun x442 () Real)
(declare-fun x310 () Real)
(declare-fun x1784 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x2149 () Real)
(declare-fun x1021 () Bool)
(declare-fun x1546 () Real)
(declare-fun x590 () Real)
(declare-fun x2033 () Bool)
(declare-fun x1702 () Real)
(declare-fun x1996 () Real)
(declare-fun x594 () Real)
(declare-fun x29 () Real)
(declare-fun x586 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x1201 () Real)
(declare-fun x2191 () Bool)
(declare-fun x1850 () Bool)
(declare-fun x246 () Real)
(declare-fun x1891 () Bool)
(declare-fun x2059 (Real) Real)
(declare-fun x84 () Bool)
(declare-fun x2159 () Real)
(declare-fun x2055 () Bool)
(declare-fun x1234 () Real)
(declare-fun x341 () Real)
(declare-fun x1084 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x18 () Bool)
(declare-fun x2288 () Real)
(declare-fun x134 () Real)
(declare-fun x1222 () Bool)
(declare-fun x1775 () Real)
(declare-fun x1365 () Real)
(declare-fun x2080 () Real)
(declare-fun x1011 (Real) Real)
(declare-fun x1278 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x1599 () Bool)
(declare-fun x690 () Bool)
(declare-fun x832 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x743 () Bool)
(declare-fun x1539 () Real)
(declare-fun x1306 () Real)
(declare-fun x1067 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x1499 () Real)
(declare-fun x1731 () Bool)
(declare-fun x1806 () Real)
(declare-fun x1512 () Real)
(declare-fun x748 (Real) Real)
(declare-fun x1769 () Real)
(declare-fun x2036 () Bool)
(declare-fun x1352 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x1208 () Real)
(declare-fun x2271 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x2024 () Bool)
(declare-fun x829 () Bool)
(declare-fun x1770 () Real)
(declare-fun x1586 () Bool)
(declare-fun x738 () Real)
(declare-fun x181 () Bool)
(declare-fun x436 () Real)
(declare-fun x1334 () Bool)
(declare-fun x1142 () Real)
(declare-fun x133 () Bool)
(declare-fun x205 () Real)
(declare-fun x1854 () Bool)
(declare-fun x23 () Real)
(declare-fun x1650 () Real)
(declare-fun x705 () Real)
(declare-fun x756 () Bool)
(declare-fun x1661 () Real)
(declare-fun x16 () Bool)
(declare-fun x2 (Real) Real)
(declare-fun x1604 () Real)
(declare-fun x2025 (Real) Real)
(declare-fun x1183 () Bool)
(declare-fun x81 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x2171 () Bool)
(declare-fun x1833 () Real)
(declare-fun x292 () Real)
(declare-fun x1940 () Real)
(declare-fun x774 () Bool)
(declare-fun x447 () Bool)
(declare-fun x2241 () Bool)
(declare-fun x827 () Bool)
(declare-fun x2110 () Real)
(declare-fun x1440 () Real)
(declare-fun x431 () Bool)
(declare-fun x278 () Real)
(declare-fun x775 () Real)
(declare-fun x1809 () Bool)
(declare-fun x851 () Real)
(declare-fun x1218 () Real)
(declare-fun x1172 () Bool)
(declare-fun x627 () Real)
(declare-fun x630 () Real)
(declare-fun x171 () Real)
(declare-fun x427 () Bool)
(declare-fun x68 () Real)
(declare-fun x568 () Real)
(declare-fun x1069 (Real) Real)
(declare-fun x1645 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x1163 () Bool)
(declare-fun x1051 () Real)
(declare-fun x2252 (Real) Real)
(declare-fun x182 () Real)
(declare-fun x464 () Bool)
(declare-fun x1753 () Real)
(declare-fun x2209 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x325 () Bool)
(declare-fun x542 () Bool)
(declare-fun x500 () Bool)
(declare-fun x947 () Bool)
(declare-fun x1804 () Real)
(declare-fun x1744 () Real)
(declare-fun x1366 (Real) Real)
(declare-fun x2287 () Real)
(declare-fun x626 () Bool)
(declare-fun x1148 () Real)
(declare-fun x646 () Real)
(declare-fun x1031 () Bool)
(declare-fun x1730 () Real)
(declare-fun x259 () Real)
(declare-fun x1363 () Real)
(declare-fun x469 () Real)
(declare-fun x433 () Real)
(declare-fun x823 (Real) Real)
(declare-fun x668 () Bool)
(declare-fun x148 () Real)
(declare-fun x1309 () Bool)
(declare-fun x1901 () Real)
(declare-fun x159 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x57 () Bool)
(declare-fun x1575 () Real)
(declare-fun x1117 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x1878 () Real)
(declare-fun x339 () Real)
(declare-fun x1886 () Real)
(declare-fun x355 () Real)
(declare-fun x50 () Real)
(declare-fun x1385 () Real)
(declare-fun x26 (Real) Real)
(declare-fun x472 () Bool)
(declare-fun x1580 () Real)
(declare-fun x1964 () Bool)
(declare-fun x482 () Real)
(declare-fun x1445 () Bool)
(declare-fun x665 () Bool)
(declare-fun x2172 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x982 (Real) Real)
(declare-fun x375 () Bool)
(declare-fun x525 () Bool)
(declare-fun x1308 () Bool)
(declare-fun x821 () Bool)
(declare-fun x284 () Bool)
(declare-fun x960 () Real)
(declare-fun x1389 () Real)
(declare-fun x1248 (Real) Real)
(declare-fun x2248 (Real) Real)
(declare-fun x1012 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x467 (Real) Real)
(declare-fun x48 () Real)
(declare-fun x2052 () Bool)
(declare-fun x1387 () Real)
(declare-fun x1937 () Real)
(declare-fun x1672 () Bool)
(declare-fun x2000 () Real)
(declare-fun x2218 () Bool)
(declare-fun x1759 (Real) Real)
(declare-fun x2082 () Real)
(declare-fun x1082 () Bool)
(declare-fun x2170 () Bool)
(declare-fun x1844 () Real)
(declare-fun x2010 () Bool)
(declare-fun x1615 () Real)
(declare-fun x356 () Bool)
(declare-fun x89 () Bool)
(declare-fun x1188 () Real)
(declare-fun x1834 (Real Real) Real)
(declare-fun x297 () Bool)
(declare-fun x564 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x255 () Bool)
(declare-fun x421 () Bool)
(declare-fun x838 () Bool)
(declare-fun x647 () Real)
(declare-fun x1529 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x440 () Real)
(declare-fun x1912 (Real Real) Real)
(declare-fun x1862 () Real)
(declare-fun x1514 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x1930 () Bool)
(declare-fun x1745 () Real)
(declare-fun x86 (Real) Real)
(declare-fun x1152 () Real)
(declare-fun x514 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x410 () Bool)
(declare-fun x113 () Real)
(declare-fun x579 () Bool)
(declare-fun x642 () Real)
(declare-fun x1828 () Bool)
(declare-fun x680 () Real)
(declare-fun x1520 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x1824 () Real)
(declare-fun x1895 (Real) Real)
(declare-fun x815 () Bool)
(declare-fun x1348 () Real)
(declare-fun x1577 () Bool)
(declare-fun x980 () Real)
(declare-fun x2245 () Bool)
(declare-fun x850 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x1766 () Real)
(declare-fun x1635 () Real)
(declare-fun x1301 () Bool)
(declare-fun x151 () Bool)
(declare-fun x386 () Bool)
(declare-fun x1591 () Bool)
(declare-fun x488 () Real)
(declare-fun x1559 () Bool)
(declare-fun x540 () Real)
(declare-fun x1768 () Real)
(declare-fun x1223 () Real)
(declare-fun x707 () Real)
(declare-fun x689 () Bool)
(declare-fun x1855 () Real)
(declare-fun x1284 (Real) Real)
(declare-fun x648 () Real)
(declare-fun x483 () Bool)
(declare-fun x549 () Real)
(declare-fun x2013 () Real)
(declare-fun x4 () Real)
(declare-fun x1386 () Real)
(declare-fun x533 () Bool)
(declare-fun x1781 () Real)
(declare-fun x1266 () Bool)
(declare-fun x2067 () Real)
(declare-fun x736 () Bool)
(declare-fun x1626 () Real)
(declare-fun x27 () Bool)
(declare-fun x591 () Bool)
(declare-fun x293 () Real)
(declare-fun x1433 () Bool)
(declare-fun x1318 () Real)
(declare-fun x556 () Bool)
(declare-fun x165 () Real)
(declare-fun x216 () Real)
(declare-fun x1681 () Real)
(declare-fun x1480 () Real)
(declare-fun x2120 () Bool)
(declare-fun x364 () Bool)
(declare-fun x2239 () Bool)
(declare-fun x1967 () Real)
(declare-fun x688 () Real)
(declare-fun x371 () Bool)
(declare-fun x943 () Bool)
(declare-fun x1790 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x270 () Real)
(declare-fun x140 () Bool)
(declare-fun x2210 () Real)
(declare-fun x634 () Real)
(declare-fun x803 () Real)
(declare-fun x2275 () Bool)
(declare-fun x523 () Real)
(declare-fun x2208 () Bool)
(declare-fun x635 () Bool)
(declare-fun x650 () Real)
(declare-fun x1907 () Bool)
(declare-fun x1752 () Real)
(declare-fun x520 () Real)
(declare-fun x2188 () Real)
(declare-fun x2195 () Real)
(declare-fun x2251 () Real)
(declare-fun x1178 (Real) Real)
(declare-fun x1924 () Real)
(declare-fun x501 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x334 () Bool)
(declare-fun x1892 (Real) Real)
(declare-fun x999 () Real)
(declare-fun x996 (Real) Real)
(declare-fun x206 (Real) Real)
(declare-fun x62 () Bool)
(declare-fun x353 () Real)
(declare-fun x1412 () Real)
(declare-fun x1589 () Bool)
(declare-fun x357 () Bool)
(declare-fun x1414 () Real)
(declare-fun x1259 () Real)
(declare-fun x162 () Real)
(declare-fun x798 () Real)
(declare-fun x1050 () Bool)
(declare-fun x1192 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x1358 (Real) Real)
(declare-fun x1692 (Real) Real)
(declare-fun x1404 () Real)
(declare-fun x977 () Bool)
(declare-fun x1946 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x1941 () Real)
(declare-fun x672 () Bool)
(declare-fun x24 () Real)
(declare-fun x741 () Bool)
(declare-fun x1496 () Real)
(declare-fun x1005 () Real)
(declare-fun x2001 () Real)
(declare-fun x174 () Bool)
(declare-fun x1685 () Real)
(declare-fun x1250 (Real Real) Real)
(declare-fun x1965 () Bool)
(declare-fun x179 () Bool)
(declare-fun x919 (Real) Real)
(declare-fun x360 () Real)
(declare-fun x986 () Real)
(declare-fun x1773 () Real)
(declare-fun x1430 () Bool)
(declare-fun x536 () Bool)
(declare-fun x1065 () Bool)
(declare-fun x168 () Bool)
(declare-fun x611 () Bool)
(declare-fun x2169 () Real)
(declare-fun x820 () Bool)
(declare-fun x2014 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x64 () Real)
(declare-fun x1071 () Real)
(declare-fun x161 () Real)
(declare-fun x828 () Bool)
(declare-fun x559 () Real)
(declare-fun x1127 () Real)
(declare-fun x1816 () Real)
(declare-fun x968 () Real)
(declare-fun x628 () Real)
(declare-fun x2105 () Bool)
(declare-fun x653 (Real) Real)
(declare-fun x904 () Real)
(declare-fun x271 () Bool)
(declare-fun x816 () Real)
(declare-fun x405 () Bool)
(declare-fun x328 () Bool)
(declare-fun x701 () Real)
(declare-fun x1435 () Real)
(declare-fun x430 () Real)
(declare-fun x894 () Bool)
(declare-fun x2175 () Bool)
(declare-fun x1932 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x881 () Bool)
(declare-fun x1691 () Real)
(declare-fun x1111 () Real)
(declare-fun x394 () Bool)
(declare-fun x2077 () Real)
(declare-fun x1391 () Bool)
(declare-fun x2004 () Bool)
(declare-fun x794 () Real)
(declare-fun x1841 () Real)
(declare-fun x2113 () Real)
(declare-fun x6 () Real)
(declare-fun x154 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x150 () Real)
(declare-fun x211 () Bool)
(declare-fun x824 () Real)
(declare-fun x1379 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x657 () Bool)
(declare-fun x380 () Real)
(declare-fun x766 () Bool)
(declare-fun x272 () Real)
(declare-fun x2029 () Bool)
(declare-fun x937 () Bool)
(declare-fun x758 () Real)
(declare-fun x2147 () Real)
(declare-fun x1619 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x1945 () Real)
(declare-fun x1797 () Real)
(declare-fun x407 () Real)
(declare-fun x1706 () Real)
(declare-fun x1883 () Bool)
(declare-fun x243 () Real)
(declare-fun x1322 () Real)
(declare-fun x1881 () Bool)
(declare-fun x1811 () Bool)
(declare-fun x155 () Real)
(declare-fun x1746 () Real)
(declare-fun x1963 () Bool)
(declare-fun x2008 () Real)
(declare-fun x1872 () Bool)
(declare-fun x2235 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x1729 () Real)
(declare-fun x1393 () Bool)
(declare-fun x651 () Real)
(declare-fun x454 () Real)
(declare-fun x2070 () Bool)
(declare-fun x1346 () Real)
(declare-fun x1094 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x219 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x2153 (Real) Real)
(declare-fun x2022 () Real)
(declare-fun x793 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x2005 () Bool)
(declare-fun x420 () Real)
(declare-fun x1100 () Bool)
(declare-fun x426 () Real)
(declare-fun x1405 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x282 () Bool)
(declare-fun x1416 (Real) Real)
(declare-fun x1788 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x1022 () Real)
(declare-fun x987 () Bool)
(declare-fun x2107 () Real)
(declare-fun x1451 () Bool)
(declare-fun x1236 () Real)
(declare-fun x163 () Real)
(declare-fun x462 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x921 () Real)
(declare-fun x2222 () Bool)
(declare-fun x1171 () Real)
(declare-fun x1185 () Bool)
(declare-fun x2124 () Bool)
(declare-fun x516 () Bool)
(declare-fun x1716 () Real)
(declare-fun x1159 () Bool)
(declare-fun x2108 () Real)
(declare-fun x2156 () Real)
(declare-fun x2253 () Bool)
(declare-fun x1392 () Real)
(declare-fun x1347 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x2123 () Real)
(declare-fun x2030 () Real)
(declare-fun x425 () Bool)
(declare-fun x2062 () Real)
(declare-fun x2236 () Bool)
(declare-fun x1789 () Bool)
(declare-fun x2089 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x435 () Real)
(declare-fun x1053 () Bool)
(declare-fun x570 () Real)
(declare-fun x619 () Bool)
(declare-fun x810 () Bool)
(declare-fun x221 () Real)
(declare-fun x294 () Real)
(declare-fun x1572 () Bool)
(declare-fun x1390 () Real)
(declare-fun x1219 () Real)
(declare-fun x263 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x1666 () Real)
(declare-fun x1368 () Bool)
(declare-fun x2064 () Real)
(declare-fun x2155 () Real)
(declare-fun x588 () Bool)
(declare-fun x2061 () Real)
(declare-fun x1859 () Real)
(declare-fun x197 () Real)
(declare-fun x42 () Real)
(declare-fun x2237 () Bool)
(declare-fun x857 () Real)
(declare-fun x2083 () Real)
(declare-fun x223 () Bool)
(declare-fun x2292 (Real) Real)
(declare-fun x1778 () Real)
(declare-fun x1269 () Real)
(declare-fun x2279 () Bool)
(declare-fun x1742 () Real)
(declare-fun x1545 () Real)
(declare-fun x1814 () Real)
(declare-fun x1680 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x676 () Bool)
(declare-fun x1200 () Real)
(declare-fun x2002 () Real)
(declare-fun x842 () Real)
(declare-fun x952 () Real)
(declare-fun x1475 () Bool)
(declare-fun x1801 () Real)
(declare-fun x1374 () Bool)
(declare-fun x149 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x463 () Real)
(declare-fun x739 () Real)
(declare-fun x2114 () Real)
(declare-fun x1036 () Bool)
(declare-fun x1616 () Real)
(declare-fun x1888 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x438 () Bool)
(declare-fun x1668 () Real)
(declare-fun x513 (Real) Real)
(declare-fun x144 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x1651 () Real)
(declare-fun x1158 (Real) Real)
(declare-fun x1479 () Bool)
(declare-fun x2283 (Real) Real)
(declare-fun x1174 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x1023 () Real)
(declare-fun x1736 () Bool)
(declare-fun x598 () Real)
(declare-fun x2038 () Bool)
(declare-fun x812 () Bool)
(declare-fun x2115 () Real)
(declare-fun x1202 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x682 () Real)
(declare-fun x2186 () Real)
(declare-fun x2112 () Bool)
(declare-fun x1406 () Real)
(declare-fun x1165 () Real)
(declare-fun x846 (Real) Real)
(declare-fun x2219 () Real)
(declare-fun x751 () Bool)
(declare-fun x261 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x868 () Bool)
(declare-fun x478 () Bool)
(declare-fun x2103 () Real)
(declare-fun x1187 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x616 () Bool)
(declare-fun x1856 () Bool)
(declare-fun x1182 () Real)
(declare-fun x65 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x801 () Real)
(declare-fun x837 () Real)
(declare-fun x717 () Real)
(declare-fun x358 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x787 () Bool)
(declare-fun x290 () Bool)
(declare-fun x745 () Real)
(declare-fun x2094 () Bool)
(declare-fun x220 () Real)
(declare-fun x897 () Real)
(declare-fun x1718 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x1621 () Real)
(declare-fun x663 () Real)
(declare-fun x1212 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x509 () Real)
(declare-fun x406 () Real)
(declare-fun x2277 () Bool)
(declare-fun x1093 () Real)
(declare-fun x1018 () Real)
(declare-fun x1147 () Real)
(declare-fun x54 () Bool)
(declare-fun x906 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x449 () Real)
(declare-fun x2163 () Bool)
(declare-fun x190 () Bool)
(declare-fun x1441 (Real) Real)
(declare-fun x192 () Bool)
(declare-fun x1987 () Real)
(declare-fun x1485 () Real)
(declare-fun x120 () Bool)
(declare-fun x1399 () Real)
(declare-fun x631 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x848 () Bool)
(declare-fun x106 () Real)
(declare-fun x718 () Real)
(declare-fun x2168 (Real) Real)
(declare-fun x177 () Real)
(declare-fun x1019 () Bool)
(declare-fun x397 () Bool)
(declare-fun x1049 () Real)
(declare-fun x1209 () Bool)
(declare-fun x2048 () Bool)
(declare-fun x800 () Real)
(declare-fun x283 () Real)
(declare-fun x845 () Real)
(declare-fun x1675 () Bool)
(declare-fun x204 () Real)
(declare-fun x2282 () Real)
(declare-fun x2031 () Real)
(declare-fun x1244 () Real)
(declare-fun x450 () Bool)
(declare-fun x749 () Bool)
(declare-fun x2221 (Real) Real)
(declare-fun x1796 () Bool)
(declare-fun x670 () Bool)
(declare-fun x620 () Real)
(declare-fun x603 () Real)
(declare-fun x1411 () Real)
(declare-fun x784 () Real)
(declare-fun x1313 () Real)
(declare-fun x1151 () Real)
(declare-fun x2158 () Bool)
(declare-fun x1738 () Real)
(declare-fun x931 () Real)
(declare-fun x1898 () Bool)
(declare-fun x265 () Real)
(declare-fun x600 () Real)
(declare-fun x714 () Real)
(declare-fun x1281 () Real)
(declare-fun x1000 () Bool)
(declare-fun x1014 () Real)
(declare-fun x1838 (Real) Real)
(declare-fun x685 () Real)
(declare-fun x479 () Bool)
(declare-fun x121 () Bool)
(declare-fun x948 () Real)
(declare-fun x735 () Real)
(declare-fun x854 () Real)
(declare-fun x2262 () Bool)
(declare-fun x90 () Bool)
(declare-fun x1618 () Real)
(declare-fun x130 () Real)
(declare-fun x2117 () Bool)
(declare-fun x769 () Real)
(declare-fun x118 () Bool)
(declare-fun x299 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x752 (Real Real) Real)
(declare-fun x169 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x251 () Real)
(declare-fun x1756 () Bool)
(declare-fun x1984 () Bool)
(declare-fun x83 () Bool)
(declare-fun x1774 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x2280 () Real)
(declare-fun x1133 () Bool)
(declare-fun x230 () Bool)
(declare-fun x1144 (Real) Real)
(declare-fun x776 () Real)
(declare-fun x1988 () Real)
(declare-fun x1843 () Real)
(declare-fun x998 () Bool)
(declare-fun x1935 () Real)
(declare-fun x136 () Real)
(declare-fun x993 () Real)
(declare-fun x1091 () Bool)
(declare-fun x1832 () Real)
(declare-fun x1369 () Real)
(declare-fun x708 () Real)
(declare-fun x36 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x1398 () Real)
(declare-fun x834 () Bool)
(declare-fun x275 () Bool)
(declare-fun x789 () Real)
(declare-fun x2190 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x669 () Bool)
(declare-fun x1799 () Bool)
(declare-fun x291 () Real)
(declare-fun x903 () Real)
(declare-fun x1913 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x1104 () Real)
(declare-fun x317 (Real) Real)
(declare-fun x1934 () Bool)
(declare-fun x546 () Real)
(declare-fun x88 () Real)
(declare-fun x1090 () Bool)
(declare-fun x1760 () Bool)
(declare-fun x1043 () Real)
(declare-fun x599 () Bool)
(declare-fun x1556 () Real)
(declare-fun x1394 (Real) Real)
(declare-fun x978 () Real)
(declare-fun x448 () Real)
(declare-fun x1126 () Real)
(declare-fun x1497 () Bool)
(declare-fun x528 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x487 () Bool)
(declare-fun x1329 () Real)
(declare-fun x959 () Bool)
(declare-fun x400 () Real)
(declare-fun x2126 () Bool)
(declare-fun x301 () Real)
(declare-fun x530 () Real)
(declare-fun x490 () Real)
(declare-fun x342 () Real)
(declare-fun x1648 () Real)
(declare-fun x1439 (Real) Real)
(declare-fun x1487 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x1876 (Real Real) Real)
(declare-fun x574 () Bool)
(declare-fun x555 () Real)
(declare-fun x131 () Real)
(declare-fun x1254 () Bool)
(declare-fun x1709 () Bool)
(declare-fun x78 () Real)
(declare-fun x2243 () Real)
(declare-fun x667 () Bool)
(declare-fun x1919 () Real)
(declare-fun x1122 () Bool)
(declare-fun x1382 () Real)
(declare-fun x153 () Real)
(declare-fun x2133 () Bool)
(declare-fun x1595 () Real)
(declare-fun x2007 () Bool)
(declare-fun x1682 () Real)
(declare-fun x1287 () Bool)
(declare-fun x240 () Real)
(declare-fun x1271 () Bool)
(declare-fun x373 () Bool)
(declare-fun x778 () Real)
(declare-fun x1307 () Bool)
(declare-fun x1848 () Real)
(declare-fun x1220 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x582 () Real)
(declare-fun x1461 () Real)
(declare-fun x1761 () Real)
(declare-fun x2151 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x958 () Bool)
(declare-fun x122 () Real)
(declare-fun x1822 () Bool)
(declare-fun x1614 () Real)
(declare-fun x2076 (Real) Real)
(declare-fun x1157 () Real)
(declare-fun x203 () Bool)
(declare-fun x445 () Real)
(declare-fun x679 () Bool)
(declare-fun x25 () Real)
(declare-fun x1290 () Real)
(declare-fun x71 () Real)
(declare-fun x1637 (Real) Real)
(declare-fun x1911 () Real)
(declare-fun x569 () Real)
(declare-fun x1176 () Real)
(declare-fun x1541 () Bool)
(declare-fun x786 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x1584 () Bool)
(declare-fun x641 () Real)
(declare-fun x2137 () Real)
(declare-fun x926 () Real)
(declare-fun x1265 () Real)
(declare-fun x811 () Real)
(declare-fun x1477 () Real)
(declare-fun x1458 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x117 () Real)
(declare-fun x1882 () Bool)
(declare-fun x1396 (Real) Real)
(declare-fun x43 () Bool)
(declare-fun x535 () Bool)
(declare-fun x2201 () Real)
(declare-fun x2143 () Real)
(declare-fun x862 () Bool)
(declare-fun x1056 () Real)
(declare-fun x833 () Real)
(declare-fun x1344 () Bool)
(declare-fun x348 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x2130 () Real)
(declare-fun x780 (Real) Real)
(declare-fun x1652 () Real)
(declare-fun x1401 () Real)
(declare-fun x173 () Bool)
(declare-fun x1450 () Bool)
(declare-fun x2119 () Real)
(declare-fun x109 () Bool)
(declare-fun x873 () Real)
(declare-fun x2174 () Bool)
(declare-fun x1571 () Bool)
(declare-fun x1900 () Real)
(declare-fun x1340 () Real)
(declare-fun x119 () Bool)
(declare-fun x2125 () Real)
(declare-fun x1971 () Real)
(declare-fun x913 () Bool)
(declare-fun x167 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x72 () Bool)
(declare-fun x2127 (Real) Real)
(declare-fun x2044 () Real)
(declare-fun x498 () Bool)
(declare-fun x382 () Real)
(declare-fun x1972 () Bool)
(declare-fun x1865 () Real)
(declare-fun x2056 () Real)
(declare-fun x1296 () Real)
(declare-fun x416 () Real)
(declare-fun x112 () Real)
(declare-fun x1842 () Bool)
(declare-fun x819 () Bool)
(declare-fun x1874 (Real) Real)
(declare-fun x869 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x1534 (Real) Real)
(declare-fun x1331 () Bool)
(declare-fun x750 (Real) Real)
(declare-fun x726 (Real) Real)
(declare-fun x250 () Real)
(declare-fun x1029 () Real)
(declare-fun x1288 () Real)
(declare-fun x754 () Bool)
(declare-fun x2204 () Bool)
(declare-fun x1536 () Real)
(declare-fun x783 () Bool)
(declare-fun x1562 (Real) Real)
(declare-fun x307 () Real)
(declare-fun x551 () Bool)
(declare-fun x909 () Real)
(declare-fun x1995 () Bool)
(declare-fun x273 () Bool)
(declare-fun x74 () Real)
(declare-fun x256 (Real) Real)
(declare-fun x429 () Bool)
(declare-fun x1821 () Bool)
(declare-fun x326 () Bool)
(declare-fun x323 () Real)
(declare-fun x2035 () Real)
(declare-fun x1134 () Bool)
(declare-fun x1143 () Real)
(declare-fun x709 () Real)
(declare-fun x1533 () Real)
(declare-fun x423 () Bool)
(declare-fun x187 (Real) Real)
(declare-fun x624 () Bool)
(declare-fun x544 () Real)
(declare-fun x595 () Bool)
(declare-fun x198 () Bool)
(declare-fun x2050 () Real)
(declare-fun x428 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x703 () Real)
(declare-fun x1167 () Bool)
(declare-fun x526 () Real)
(declare-fun x1149 () Bool)
(declare-fun x1300 (Real) Real)
(declare-fun x343 () Real)
(declare-fun x1896 () Real)
(declare-fun x1154 () Real)
(declare-fun x1221 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x327 () Real)
(declare-fun x1686 () Bool)
(declare-fun x1006 () Bool)
(declare-fun x2099 () Bool)
(declare-fun x2122 () Real)
(declare-fun x2289 () Real)
(declare-fun x883 (Real) Real)
(declare-fun x1457 () Bool)
(declare-fun x1425 () Real)
(declare-fun x115 () Bool)
(declare-fun x222 () Real)
(declare-fun x1719 () Real)
(declare-fun x2164 () Bool)
(declare-fun x392 () Real)
(declare-fun x1037 () Bool)
(declare-fun x2118 () Real)
(declare-fun x1009 () Real)
(declare-fun x1179 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x1950 () Real)
(declare-fun x1655 () Real)
(declare-fun x1238 () Bool)
(declare-fun x652 () Real)
(declare-fun x2240 () Real)
(declare-fun x1096 () Real)
(declare-fun x1565 () Bool)
(declare-fun x2179 () Real)
(declare-fun x1665 () Real)
(declare-fun x2100 () Bool)
(declare-fun x2199 () Real)
(declare-fun x492 () Bool)
(declare-fun x915 () Bool)
(declare-fun x495 () Real)
(declare-fun x1076 () Real)
(declare-fun x398 () Real)
(declare-fun x962 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x1909 () Real)
(declare-fun x1194 () Bool)
(declare-fun x451 () Bool)
(declare-fun x878 () Bool)
(declare-fun x396 () Bool)
(declare-fun x1947 () Real)
(declare-fun x1298 () Real)
(declare-fun x236 () Bool)
(declare-fun x2093 () Real)
(declare-fun x515 () Real)
(declare-fun x1695 () Real)
(declare-fun x114 () Bool)
(declare-fun x1708 () Real)
(declare-fun x58 () Bool)
(declare-fun x1794 () Bool)
(declare-fun x366 () Real)
(declare-fun x1989 () Bool)
(declare-fun x2178 () Real)
(declare-fun x932 () Real)
(declare-fun x2012 () Bool)
(declare-fun x876 () Real)
(declare-fun x920 () Bool)
(declare-fun x85 () Bool)
(declare-fun x1705 () Bool)
(declare-fun x621 () Real)
(declare-fun x2084 () Bool)
(declare-fun x34 () Real)
(declare-fun x1449 () Real)
(declare-fun x379 () Real)
(declare-fun x1427 () Bool)
(declare-fun x1294 () Real)
(declare-fun x330 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x1823 () Bool)
(declare-fun x186 () Real)
(declare-fun x1871 () Bool)
(declare-fun x2220 () Real)
(declare-fun x763 () Bool)
(declare-fun x1432 () Real)
(declare-fun x7 () Bool)
(declare-fun x1597 () Real)
(declare-fun x1578 () Bool)
(declare-fun x1600 () Real)
(declare-fun x147 () Real)
(declare-fun x1124 () Real)
(declare-fun x1846 (Real) Real)
(declare-fun x1169 () Real)
(declare-fun x877 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x762 () Bool)
(declare-fun x1724 () Bool)
(declare-fun x576 () Real)
(declare-fun x1083 () Bool)
(declare-fun x1961 () Real)
(declare-fun x702 () Real)
(declare-fun x720 () Real)
(declare-fun x280 () Real)
(declare-fun x349 () Real)
(declare-fun x655 () Bool)
(declare-fun x363 () Real)
(declare-fun x1 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x1627 () Bool)
(declare-fun x796 () Real)
(declare-fun x2207 () Bool)
(declare-fun x1564 () Real)
(declare-fun x225 () Bool)
(declare-fun x836 () Real)
(declare-fun x1863 () Real)
(declare-fun x160 () Real)
(declare-fun x311 () Real)
(declare-fun x1492 () Bool)
(declare-fun x538 () Bool)
(declare-fun x1647 () Bool)
(declare-fun x1261 () Real)
(declare-fun x809 () Real)
(declare-fun x166 () Bool)
(declare-fun x790 (Real) Real)
(declare-fun x565 () Real)
(declare-fun x503 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x1030 () Real)
(declare-fun x480 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x289 () Real)
(declare-fun x164 () Real)
(declare-fun x1191 () Real)
(declare-fun x1028 (Real) Real)
(declare-fun x274 () Bool)
(declare-fun x1707 () Real)
(declare-fun x2073 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x2260 () Bool)
(declare-fun x308 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x1765 () Real)
(declare-fun x928 () Bool)
(declare-fun x644 () Bool)
(declare-fun x347 () Bool)
(declare-fun x1606 () Real)
(declare-fun x527 () Bool)
(declare-fun x413 () Real)
(declare-fun x1948 () Real)
(declare-fun x2009 () Real)
(declare-fun x1727 () Bool)
(declare-fun x145 () Bool)
(declare-fun x1325 () Real)
(declare-fun x1688 () Bool)
(declare-fun x1931 (Real) Real)
(declare-fun x807 () Bool)
(declare-fun x930 () Bool)
(declare-fun x649 () Real)
(declare-fun x1206 () Real)
(declare-fun x636 (Real) Real)
(declare-fun x867 () Real)
(declare-fun x517 () Bool)
(declare-fun x898 () Real)
(declare-fun x1903 () Real)
(declare-fun x1835 () Bool)
(declare-fun x2258 () Bool)
(declare-fun x2223 () Real)
(declare-fun x1101 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x983 () Bool)
(declare-fun x961 () Real)
(declare-fun x768 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x1598 () Real)
(declare-fun x1905 () Real)
(declare-fun x137 () Bool)
(declare-fun x228 () Real)
(declare-fun x795 () Real)
(declare-fun x1283 () Bool)
(declare-fun x419 () Real)
(declare-fun x1966 () Bool)
(declare-fun x1146 () Real)
(declare-fun x1349 () Bool)
(declare-fun x1215 () Real)
(declare-fun x257 () Bool)
(declare-fun x541 () Bool)
(declare-fun x1507 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x1710 () Real)
(declare-fun x537 (Real) Real)
(declare-fun x1767 () Real)
(declare-fun x367 () Real)
(declare-fun x82 () Real)
(declare-fun x304 () Real)
(declare-fun x677 (Real) Real)
(declare-fun x2193 () Real)
(declare-fun x1585 () Bool)
(declare-fun x1362 () Real)
(declare-fun x402 () Real)
(declare-fun x687 () Real)
(declare-fun x1993 () Real)
(declare-fun x1180 () Bool)
(declare-fun x191 () Bool)
(declare-fun x2069 () Bool)
(declare-fun x1328 () Real)
(declare-fun x1997 () Real)
(declare-fun x1918 () Real)
(declare-fun x1233 () Real)
(declare-fun x45 () Real)
(declare-fun x37 () Real)
(declare-fun x777 () Real)
(declare-fun x1902 () Real)
(declare-fun x545 () Bool)
(declare-fun x966 () Bool)
(declare-fun x2272 () Bool)
(declare-fun x22 () Bool)
(declare-fun x874 () Bool)
(declare-fun x316 () Real)
(declare-fun x1938 () Real)
(declare-fun x321 () Real)
(declare-fun x633 () Bool)
(declare-fun x277 () Bool)
(declare-fun x1326 () Real)
(declare-fun x1324 () Bool)
(declare-fun x602 () Real)
(declare-fun x728 () Real)
(declare-fun x1270 () Real)
(declare-fun x51 () Bool)
(declare-fun x805 () Real)
(declare-fun x1737 () Real)
(declare-fun x2135 () Bool)
(declare-fun x2065 () Real)
(declare-fun x1701 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x491 () Real)
(declare-fun x2096 () Bool)
(declare-fun x1740 () Real)
(declare-fun x1513 () Bool)
(declare-fun x729 () Bool)
(declare-fun x1583 () Bool)
(declare-fun x972 () Real)
(declare-fun x1864 () Real)
(declare-fun x1587 () Bool)
(declare-fun x963 () Bool)
(declare-fun x548 () Bool)
(declare-fun x399 () Real)
(declare-fun x129 () Real)
(declare-fun x558 () Real)
(declare-fun x2232 () Bool)
(declare-fun x468 () Bool)
(declare-fun x957 () Bool)
(declare-fun x1951 () Real)
(declare-fun x1764 () Real)
(declare-fun x1177 () Bool)
(declare-fun x840 () Real)
(declare-fun x1114 () Real)
(declare-fun x1488 (Real) Real)
(declare-fun x1508 () Real)
(declare-fun x1567 () Real)
(declare-fun x1095 () Real)
(declare-fun x2085 () Bool)
(declare-fun x1785 () Bool)
(declare-fun x2285 () Real)
(declare-fun x245 () Real)
(declare-fun x1495 () Bool)
(declare-fun x1522 () Real)
(declare-fun x1904 () Real)
(declare-fun x1081 () Bool)
(declare-fun x697 () Bool)
(declare-fun x61 () Real)
(declare-fun x1807 () Real)
(declare-fun x157 () Bool)
(declare-fun x581 (Real) Real)
(declare-fun x1713 () Bool)
(declare-fun x2212 () Bool)
(declare-fun x1739 () Real)
(declare-fun x1181 () Real)
(declare-fun x1364 () Real)
(declare-fun x899 () Bool)
(declare-fun x8 () Real)
(declare-fun x888 () Bool)
(declare-fun x1942 () Bool)
(declare-fun x940 () Bool)
(declare-fun x32 () Real)
(declare-fun x1538 () Bool)
(declare-fun x370 () Bool)
(declare-fun x2020 () Real)
(declare-fun x580 () Real)
(declare-fun x224 () Real)
(declare-fun x969 () Bool)
(declare-fun x470 () Real)
(declare-fun x1297 () Bool)
(declare-fun x2097 () Bool)
(declare-fun x1249 () Real)
(declare-fun x226 () Real)
(declare-fun x678 () Real)
(declare-fun x2092 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x63 () Real)
(declare-fun x66 (Real) Real)
(declare-fun x935 () Bool)
(declare-fun x2249 () Real)
(declare-fun x2254 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x1847 () Bool)
(declare-fun x1446 (Real) Real)
(declare-fun x170 () Bool)
(declare-fun x1027 () Real)
(declare-fun x1673 () Bool)
(declare-fun x1715 (Real) Real)
(declare-fun x387 () Bool)
(declare-fun x2183 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x269 (Real) Real)
(declare-fun x658 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x98 () Bool)
(declare-fun x385 () Real)
(declare-fun x1166 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x1116 () Bool)
(declare-fun x2229 () Real)
(declare-fun x918 () Bool)
(declare-fun x345 () Real)
(declare-fun x28 () Real)
(declare-fun x2041 (Real) Real)
(declare-fun x217 (Real) Real)
(declare-fun x727 () Real)
(declare-fun x550 () Bool)
(declare-fun x1413 () Real)
(declare-fun x39 () Real)
(declare-fun x695 () Bool)
(declare-fun x2265 () Real)
(declare-fun x1470 () Real)
(declare-fun x1315 () Bool)
(declare-fun x138 (Real) Real)
(declare-fun x640 () Real)
(declare-fun x1339 () Bool)
(declare-fun x1732 () Bool)
(declare-fun x2015 () Bool)
(declare-fun x612 () Real)
(declare-fun x659 () Bool)
(declare-fun x733 () Real)
(declare-fun x1653 () Real)
(declare-fun x1805 () Bool)
(declare-fun x1728 () Bool)
(declare-fun x2018 () Real)
(declare-fun x1472 () Real)
(declare-fun x505 () Real)
(declare-fun x1484 () Real)
(declare-fun x755 (Real) Real)
(declare-fun x843 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x804 (Real) Real)
(declare-fun x1826 () Real)
(declare-fun x1454 () Bool)
(declare-fun x1240 () Real)
(declare-fun x369 () Real)
(declare-fun x911 (Real) Real)
(declare-fun x1717 () Real)
(declare-fun x2244 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x2047 (Real) Real)
(declare-fun x499 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x1671 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x2281 () Bool)
(declare-fun x553 () Bool)
(declare-fun x924 () Bool)
(declare-fun x1588 () Bool)
(declare-fun x2037 () Bool)
(declare-fun x1500 () Real)
(declare-fun x1689 () Real)
(declare-fun x2043 () Bool)
(declare-fun x1795 () Bool)
(declare-fun x1033 () Real)
(declare-fun x124 () Real)
(declare-fun x674 () Real)
(declare-fun x474 () Real)
(declare-fun x1981 () Real)
(declare-fun x127 () Bool)
(declare-fun x1748 () Real)
(declare-fun x610 () Real)
(declare-fun x2238 (Real) Real)
(declare-fun x512 () Real)
(declare-fun x643 (Real) Real)
(declare-fun x1327 () Bool)
(declare-fun x1255 () Real)
(declare-fun x75 () Bool)
(declare-fun x1839 () Real)
(declare-fun x1812 () Real)
(declare-fun x593 (Real Real) Real)
(declare-fun x573 () Bool)
(declare-fun x1699 () Real)
(declare-fun x1840 () Bool)
(declare-fun x305 () Real)
(declare-fun x1473 () Bool)
(declare-fun x104 () Real)
(declare-fun x1420 () Bool)
(declare-fun x2104 () Real)
(declare-fun x1289 () Real)
(declare-fun x681 () Real)
(declare-fun x645 () Real)
(declare-fun x2081 () Real)
(declare-fun x336 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x1776 () Real)
(declare-fun x896 () Real)
(declare-fun x953 () Bool)
(declare-fun x1733 () Real)
(declare-fun x2225 () Bool)
(declare-fun x393 () Bool)
(declare-fun x562 () Real)
(declare-fun x554 () Bool)
(declare-fun x860 () Real)
(declare-fun x332 () Real)
(declare-fun x21 () Bool)
(declare-fun x201 () Bool)
(declare-fun x767 () Bool)
(declare-fun x1452 () Real)
(declare-fun x891 () Bool)
(declare-fun x617 () Bool)
(declare-fun x700 () Bool)
(declare-fun x825 () Bool)
(declare-fun x684 () Bool)
(declare-fun x1852 () Real)
(declare-fun x797 () Bool)
(declare-fun x1676 () Real)
(declare-fun x1253 () Bool)
(declare-fun x361 () Bool)
(declare-fun x189 () Bool)
(declare-fun x656 () Real)
(declare-fun x87 () Real)
(declare-fun x1968 (Real) Real)
(declare-fun x237 (Real) Real)
(declare-fun x1228 () Real)
(declare-fun x673 () Real)
(declare-fun x779 () Real)
(declare-fun x785 () Real)
(declare-fun x56 () Bool)
(declare-fun x135 () Bool)
(declare-fun x1530 (Real) Real)
(declare-fun x35 () Bool)
(declare-fun x1670 () Real)
(declare-fun x1820 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x476 () Real)
(declare-fun x577 () Real)
(declare-fun x2216 () Bool)
(declare-fun x244 () Bool)
(declare-fun x1542 () Real)
(declare-fun x1631 (Real) Real)
(declare-fun x1469 () Bool)
(declare-fun x724 () Bool)
(declare-fun x477 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x660 () Real)
(declare-fun x1085 () Bool)
(declare-fun x716 () Bool)
(declare-fun x706 () Real)
(declare-fun x193 () Bool)
(declare-fun x772 () Real)
(declare-fun x1377 () Bool)
(declare-fun x910 () Real)
(declare-fun x214 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x318 () Real)
(declare-fun x841 () Real)
(declare-fun x1573 () Real)
(declare-fun x1991 () Bool)
(declare-fun x1750 () Real)
(declare-fun x125 () Bool)
(declare-fun x2023 () Bool)
(declare-fun x1868 () Real)
(declare-fun x1256 () Real)
(declare-fun x2217 () Bool)
(declare-fun x1465 () Real)
(declare-fun x253 () Real)
(declare-fun x566 () Real)
(declare-fun x1203 () Bool)
(declare-fun x178 () Real)
(declare-fun x1678 () Bool)
(declare-fun x391 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x172 () Bool)
(declare-fun x1574 () Real)
(declare-fun x2187 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x742 () Real)
(declare-fun x1656 () Bool)
(declare-fun x997 () Bool)
(declare-fun x105 () Real)
(declare-fun x1274 () Real)
(declare-fun x2161 () Real)
(declare-fun x2109 () Bool)
(declare-fun x1887 () Bool)
(declare-fun x1783 (Real) Real)
(declare-fun x94 () Real)
(declare-fun x1633 () Real)
(declare-fun x281 () Bool)
(declare-fun x2150 (Real) Real)
(declare-fun x1613 () Bool)
(declare-fun x907 (Real) Real)
(declare-fun x1558 () Real)
(declare-fun x2211 () Real)
(declare-fun x1982 () Real)
(declare-fun x395 () Real)
(declare-fun x557 () Real)
(declare-fun x76 () Bool)
(declare-fun x2028 () Bool)
(declare-fun x770 () Real)
(declare-fun x1505 () Bool)
(declare-fun x1954 () Bool)
(declare-fun x1908 () Real)
(declare-fun x818 () Real)
(declare-fun x1851 () Bool)
(declare-fun x1975 () Real)
(declare-fun x1791 () Real)
(declare-fun x459 () Real)
(declare-fun x1086 () Bool)
(declare-fun x2136 () Bool)
(declare-fun x839 () Bool)
(declare-fun x872 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x2063 () Bool)
(declare-fun x694 () Bool)
(declare-fun x753 () Real)
(declare-fun x2267 () Bool)
(declare-fun x1869 () Real)
(declare-fun x2131 (Real) Real)
(declare-fun x17 () Bool)
(declare-fun x452 () Bool)
(declare-fun x1566 () Real)
(declare-fun x1098 (Real) Real)
(declare-fun x788 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x139 () Real)
(declare-fun x2088 (Real) Real)
(declare-fun x2273 () Bool)
(declare-fun x38 () Real)
(declare-fun x1184 () Real)
(declare-fun x861 () Real)
(declare-fun x1376 (Real) Real)
(declare-fun x936 () Bool)
(declare-fun x12 () Real)
(declare-fun x1643 () Bool)
(declare-fun x519 () Bool)
(declare-fun x408 () Real)
(declare-fun x2154 () Real)
(declare-fun x995 () Bool)
(declare-fun x2106 () Real)
(declare-fun x443 () Real)
(declare-fun x1974 () Bool)
(declare-fun x132 () Bool)
(declare-fun x1866 () Real)
(declare-fun x985 () Bool)
(declare-fun x771 () Bool)
(declare-fun x722 () Bool)
(declare-fun x1659 () Real)
(declare-fun x1129 () Real)
(declare-fun x195 () Real)
(declare-fun x1280 () Bool)
(declare-fun x2227 () Bool)
(declare-fun x1103 () Real)
(declare-fun x1754 () Bool)
(declare-fun x1226 () Bool)
(declare-fun x107 () Bool)
(declare-fun x1139 () Real)
(declare-fun x1526 () Bool)
(declare-fun x1061 (Real) Real)
(declare-fun x974 () Real)
(declare-fun x1696 () Real)
(declare-fun x1553 () Bool)
(declare-fun x2177 () Real)
(declare-fun x933 () Real)
(declare-fun x954 () Bool)
(declare-fun x1654 () Real)
(declare-fun x1747 () Bool)
(declare-fun x730 () Real)
(declare-fun x1493 () Real)
(declare-fun x1986 () Bool)
(declare-fun x2057 () Bool)
(declare-fun x141 () Bool)
(declare-fun x1312 () Real)
(declare-fun x1089 () Bool)
(declare-fun x1128 () Real)
(declare-fun x1034 () Real)
(declare-fun x1554 () Real)
(declare-fun x1456 () Bool)
(declare-fun x552 () Real)
(declare-fun x2230 () Real)
(declare-fun x434 () Real)
(declare-fun x1277 () Bool)
(declare-fun x1743 () Bool)
(declare-fun x1073 () Real)
(declare-fun x884 () Bool)
(declare-fun x2263 () Bool)
(declare-fun x1667 () Bool)
(declare-fun x511 () Real)
(declare-fun x93 () Real)
(declare-fun x11 () Bool)
(declare-fun x856 () Bool)
(declare-fun x607 (Real) Real)
(declare-fun x95 () Bool)
(declare-fun x2142 () Real)
(declare-fun x1268 () Real)
(declare-fun x1611 () Real)
(declare-fun x208 () Real)
(declare-fun x1501 () Bool)
(declare-fun x411 () Bool)
(declare-fun x235 () Bool)
(declare-fun x461 (Real) Real)
(declare-fun x2006 () Bool)
(declare-fun x264 () Bool)
(declare-fun x747 () Bool)
(declare-fun x2098 () Bool)
(declare-fun x146 (Real) Real)
(declare-fun x855 () Bool)
(declare-fun x2132 (Real) Real)
(declare-fun x1013 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x319 () Bool)
(declare-fun x589 () Real)
(declare-fun x1917 () Bool)
(declare-fun x740 () Real)
(declare-fun x534 () Real)
(declare-fun x1367 () Real)
(declare-fun x1429 () Real)
(declare-fun x737 () Real)
(declare-fun x522 () Real)
(declare-fun x302 () Bool)
(declare-fun x194 () Bool)
(declare-fun x2066 () Real)
(declare-fun x2039 () Bool)
(declare-fun x1884 () Bool)
(declare-fun x303 () Real)
(declare-fun x2291 () Bool)
(declare-fun x2173 () Real)
(declare-fun x662 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x227 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x1535 () Real)
(declare-fun x1726 () Real)
(declare-fun x760 () Bool)
(declare-fun x900 () Real)
(declare-fun x521 () Real)
(declare-fun x539 () Real)
(declare-fun x444 () Real)
(declare-fun x813 () Real)
(declare-fun x2184 () Real)
(declare-fun x1235 () Bool)
(declare-fun x989 () Bool)
(declare-fun x622 (Real) Real)
(declare-fun x247 () Real)
(declare-fun x77 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x585 () Bool)
(declare-fun x563 () Real)
(declare-fun x229 () Bool)
(declare-fun x252 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x1970 () Real)
(declare-fun x746 () Bool)
(declare-fun x456 () Real)
(declare-fun x1910 () Real)
(declare-fun x2198 () Real)
(declare-fun x1669 () Bool)
(declare-fun x1428 () Real)
(declare-fun x1205 () Real)
(declare-fun x639 () Real)
(declare-fun x1603 () Real)
(declare-fun x609 () Bool)
(declare-fun x938 () Bool)
(declare-fun x1939 () Real)
(declare-fun x792 () Bool)
(declare-fun x296 () Bool)
(declare-fun x1893 () Real)
(declare-fun x200 () Real)
(declare-fun x1889 () Real)
(declare-fun x502 () Real)
(declare-fun x1333 () Bool)
(declare-fun x2019 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x917 () Real)
(declare-fun x1831 () Real)
(declare-fun x309 () Real)
(declare-fun x496 () Bool)
(declare-fun x2290 (Real) Real)
(declare-fun x2027 () Bool)
(declare-fun x835 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x1829 () Bool)
(declare-fun x340 (Real) Real)
(declare-fun x1335 () Bool)
(declare-fun x1734 () Bool)
(declare-fun x1602 () Real)
(declare-fun x1979 () Real)
(declare-fun x710 () Real)
(declare-fun x1217 () Real)
(declare-fun x2091 (Real) Real)
(declare-fun x1623 () Bool)
(declare-fun x529 () Bool)
(declare-fun x1779 () Real)
(declare-fun x1025 () Bool)
(declare-fun x1260 () Real)
(declare-fun x691 () Bool)
(declare-fun x249 () Bool)
(declare-fun x55 () Bool)
(declare-fun x1658 () Real)
(declare-fun x1608 () Bool)
(declare-fun x1557 () Real)
(declare-fun x2247 () Real)
(declare-fun x1239 () Bool)
(declare-fun x1957 () Bool)
(declare-fun x324 () Bool)
(declare-fun x2101 () Real)
(declare-fun x79 () Real)
(declare-fun x578 () Bool)
(declare-fun x322 () Real)
(declare-fun x638 () Bool)
(declare-fun x1491 () Real)
(declare-fun x346 () Bool)
(declare-fun x916 () Real)
(declare-fun x403 () Bool)
(declare-fun x1519 () Real)
(declare-fun x723 () Real)
(declare-fun x2167 () Real)
(declare-fun x1115 (Real) Real)
(declare-fun x2021 () Bool)
(declare-fun x1757 () Bool)
(declare-fun x1916 () Real)
(declare-fun x1800 () Real)
(declare-fun x765 () Bool)
(declare-fun x890 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x2276 () Real)
(declare-fun x632 () Real)
(declare-fun x1423 () Real)
(declare-fun x1777 () Bool)
(declare-fun x30 () Real)
(declare-fun x1213 (Real) Real)
(declare-fun x1751 () Bool)
(declare-fun x781 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x2051 () Bool)
(declare-fun x2042 () Real)
(declare-fun x1080 () Real)
(define-fun x1998 ((x1032 Real)) Real (ite (and (>= x1032 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1032)) x1032 (- x1032 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x453 ((x1032 Real)) Real (ite (and (< x1032 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1032)) (+ x1032 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1032))
(define-fun x951 ((x744 Real)) Bool (and (<= 0 x744) (< x744 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1436 ((x744 Real)) Bool (and (>= x744 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744)))
(define-fun x1007 ((x744 Real)) Bool (and (= x744 (x1876 x744 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639935 x744) x744)))
(define-fun x882 ((x744 Real)) Bool (and (= (x1876 x744 0) 0) (= (x1876 0 x744) 0)))
(define-fun x1272 ((x744 Real)) Bool (= (x1876 x744 x744) x744))
(define-fun x287 ((x744 Real)) Bool (and (x882 x744) (x1007 x744) (x1272 x744)))
(define-fun x1977 ((x744 Real)) Bool (= (x1876 1461501637330902918203684832716283019655932542975 (x1876 1461501637330902918203684832716283019655932542975 x744)) (x1876 1461501637330902918203684832716283019655932542975 x744)))
(define-fun x945 ((x744 Real)) Bool (=> (and (< x744 1461501637330902918203684832716283019655932542976) (>= x744 0)) (= x744 (x1876 1461501637330902918203684832716283019655932542975 x744))))
(define-fun x1721 ((x744 Real)) Bool (=> (= x744 (x1876 1461501637330902918203684832716283019655932542975 x744)) (and (>= x744 0) (< x744 1461501637330902918203684832716283019655932542976))))
(define-fun x80 ((x744 Real)) Bool (=> (and (< x744 2923003274661805836407369665432566039311865085952) (<= 1461501637330902918203684832716283019655932542976 x744)) (= (x1876 1461501637330902918203684832716283019655932542975 x744) (- x744 1461501637330902918203684832716283019655932542976))))
(define-fun x1741 ((x744 Real) (x475 Real)) Bool (and (= x744 (+ (* x475 1461501637330902918203684832716283019655932542976) (x1876 1461501637330902918203684832716283019655932542975 x744))) (<= 0 x475)))
(define-fun x207 ((x744 Real) (x1305 Real)) Bool (and (x1741 x744 x1305) (x1721 x744) (x80 x744) (x1977 x744) (x945 x744)))
(define-fun x1894 ((x744 Real) (x475 Real)) Bool (= (x1876 x475 x744) (x1876 x744 x475)))
(define-fun x1170 ((x744 Real) (x475 Real)) Bool (and (=> (<= 0 x744) (>= x744 (x1876 x744 x475))) (=> (<= 0 x475) (<= (x1876 x744 x475) x475)) (<= 0 (x1876 x744 x475))))
(define-fun x1958 ((x744 Real) (x475 Real)) Bool (and (x1170 x744 x475) (x1894 x744 x475)))
(define-fun x1047 ((x744 Real) (x1305 Real)) Bool (and (x1958 x744 1461501637330902918203684832716283019655932542975) (x207 x744 x1305)))
(define-fun x1286 ((x744 Real)) Bool (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x744)) (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x744)))
(define-fun x866 ((x744 Real)) Bool (=> (and (< x744 32) (<= 0 x744)) (= 0 (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x744))))
(define-fun x1055 ((x744 Real) (x475 Real) (x2203 Real) (x1749 Real)) Bool (and (>= x475 0) (>= x2203 0) (= (* 32 x2203) (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x744)) (< x1749 1) (> 32 x475) (= x744 (+ (* x1749 115792089237316195423570985008687907853269984665640564039457584007913129639936) x475 (* 32 x2203))) (>= x1749 0) (< x2203 3618502788666131106986593281521497120414687020801267626233049500247285301248)))
(define-fun x806 ((x744 Real) (x1466 Real) (x1634 Real) (x1762 Real)) Bool (and (x1055 x744 x1466 x1634 x1762) (x866 x744) (x1286 x744)))
(define-fun x1697 ((x744 Real) (x1466 Real) (x1634 Real) (x1762 Real)) Bool (and (x806 x744 x1466 x1634 x1762) (x1958 x744 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1640 ((x744 Real)) Bool (= (x1876 26959946667150639794667015087019630673637144422540572481103610249215 x744) (x1876 26959946667150639794667015087019630673637144422540572481103610249215 (x1876 26959946667150639794667015087019630673637144422540572481103610249215 x744))))
(define-fun x441 ((x744 Real)) Bool (=> (and (>= x744 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x744)) (= x744 (x1876 26959946667150639794667015087019630673637144422540572481103610249215 x744))))
(define-fun x455 ((x744 Real)) Bool (=> (= x744 (x1876 26959946667150639794667015087019630673637144422540572481103610249215 x744)) (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x744) (>= x744 0))))
(define-fun x388 ((x744 Real)) Bool (=> (and (<= 26959946667150639794667015087019630673637144422540572481103610249216 x744) (< x744 53919893334301279589334030174039261347274288845081144962207220498432)) (= (x1876 26959946667150639794667015087019630673637144422540572481103610249215 x744) (- x744 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x215 ((x744 Real) (x475 Real)) Bool (and (= x744 (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x475) (x1876 26959946667150639794667015087019630673637144422540572481103610249215 x744))) (<= 0 x475)))
(define-fun x2224 ((x744 Real) (x1305 Real)) Bool (and (x388 x744) (x455 x744) (x1640 x744) (x215 x744 x1305) (x441 x744)))
(define-fun x1563 ((x744 Real) (x1305 Real)) Bool (and (x2224 x744 x1305) (x1958 x744 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x312 ((x744 Real)) Bool (= (x1876 255 x744) (x1876 255 (x1876 255 x744))))
(define-fun x268 ((x744 Real)) Bool (=> (and (> 256 x744) (<= 0 x744)) (= x744 (x1876 255 x744))))
(define-fun x1337 ((x744 Real)) Bool (=> (= x744 (x1876 255 x744)) (and (>= x744 0) (> 256 x744))))
(define-fun x5 ((x744 Real)) Bool (=> (and (< x744 512) (>= x744 256)) (= (- x744 256) (x1876 255 x744))))
(define-fun x1140 ((x744 Real) (x475 Real)) Bool (and (= x744 (+ (x1876 255 x744) (* x475 256))) (>= x475 0)))
(define-fun x103 ((x744 Real) (x1305 Real)) Bool (and (x1337 x744) (x1140 x744 x1305) (x312 x744) (x5 x744) (x268 x744)))
(define-fun x1417 ((x744 Real) (x1305 Real)) Bool (and (x103 x744 x1305) (x1958 x744 255)))
(define-fun x279 ((x744 Real)) Bool (= (x1876 18446744073709551615 x744) (x1876 18446744073709551615 (x1876 18446744073709551615 x744))))
(define-fun x1649 ((x744 Real)) Bool (=> (and (<= 0 x744) (> 18446744073709551616 x744)) (= (x1876 18446744073709551615 x744) x744)))
(define-fun x831 ((x744 Real)) Bool (=> (= (x1876 18446744073709551615 x744) x744) (and (< x744 18446744073709551616) (<= 0 x744))))
(define-fun x422 ((x744 Real)) Bool (=> (and (>= x744 18446744073709551616) (< x744 36893488147419103232)) (= (x1876 18446744073709551615 x744) (- x744 18446744073709551616))))
(define-fun x2215 ((x744 Real) (x475 Real)) Bool (and (>= x475 0) (= (+ (* x475 18446744073709551616) (x1876 18446744073709551615 x744)) x744)))
(define-fun x1150 ((x744 Real) (x1305 Real)) Bool (and (x1649 x744) (x831 x744) (x279 x744) (x2215 x744 x1305) (x422 x744)))
(define-fun x1041 ((x744 Real) (x1305 Real)) Bool (and (x1150 x744 x1305) (x1958 x744 18446744073709551615)))
(define-fun x1860 ((x744 Real)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1250 115792089237316195423570985008687907853269984665640564039457584007913129639935 x744)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1250 x744 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x902 ((x744 Real)) Bool (and (= (x1250 0 x744) x744) (= x744 (x1250 x744 0))))
(define-fun x925 ((x744 Real)) Bool (= x744 (x1250 x744 x744)))
(define-fun x333 ((x744 Real)) Bool (and (x902 x744) (x1860 x744) (x925 x744)))
(define-fun x1145 ((x744 Real) (x475 Real)) Bool (= (x1250 x475 x744) (x1250 x744 x475)))
(define-fun x1568 ((x744 Real) (x475 Real)) Bool (and (<= (x1250 x744 x475) (+ x475 x744)) (=> (>= x744 0) (>= (x1250 x744 x475) x744)) (=> (<= 0 x475) (<= x475 (x1250 x744 x475)))))
(define-fun x759 ((x744 Real) (x475 Real)) Bool (and (x1145 x744 x475) (x1568 x744 x475)))
(define-fun x1039 ((x744 Real)) Bool (= (x1876 1 x744) (x1876 1 (x1876 1 x744))))
(define-fun x286 ((x744 Real)) Bool (=> (and (< x744 2) (<= 0 x744)) (= x744 (x1876 1 x744))))
(define-fun x1830 ((x744 Real)) Bool (=> (= x744 (x1876 1 x744)) (and (>= x744 0) (> 2 x744))))
(define-fun x1920 ((x744 Real)) Bool (=> (and (< x744 4) (<= 2 x744)) (= (x1876 1 x744) (- x744 2))))
(define-fun x31 ((x744 Real) (x475 Real)) Bool (and (<= 0 x475) (= (+ (* x475 2) (x1876 1 x744)) x744)))
(define-fun x494 ((x744 Real) (x1305 Real)) Bool (and (x286 x744) (x1039 x744) (x1830 x744) (x1920 x744) (x31 x744 x1305)))
(define-fun x350 ((x744 Real) (x1305 Real)) Bool (and (x1958 x744 1) (x494 x744 x1305)))
(define-fun x1026 ((x592 Real)) Real (x1853 x592))
(define-fun x111 ((x592 Real)) Real (ite (= 192 x592) x539 (x1011 x592)))
(define-fun x1836 ((x592 Real)) Real (ite (and (not x10) (not x290) x173 (not x1301)) (x1011 x592) (ite (and x173 x10 (not x1301)) (x1534 x592) (x111 x592))))
(define-fun x1231 ((x592 Real)) Real (ite (= 128 x592) x555 (x1489 x592)))
(define-fun x52 ((x592 Real)) Real (ite (= x1009 x592) x680 (x471 x592)))
(define-fun x984 ((x592 Real)) Real (ite (= x592 x1533) 0 (x804 x592)))
(define-fun x481 ((x592 Real)) Real (ite (= x592 x399) 0 (x907 x592)))
(define-fun x1099 ((x592 Real)) Real (ite (= x1152 x592) 0 (x1383 x592)))
(define-fun x704 ((x592 Real)) Real (ite (= x592 x720) 0 (x2127 x592)))
(define-fun x493 ((x592 Real)) Real (ite (= x1775 x592) 0 (x1895 x592)))
(define-fun x1447 ((x592 Real)) Real (ite (= x592 x163) 0 (x86 x592)))
(define-fun x374 ((x592 Real)) Real (ite (= x349 x592) x1533 (x2025 x592)))
(define-fun x2140 ((x592 Real)) Real (ite (= x592 x1034) x709 (x1921 x592)))
(define-fun x266 ((x592 Real)) Real (ite (= x592 x1766) x727 (x306 x592)))
(define-fun x1605 ((x592 Real)) Real (ite (= x463 x592) x1685 (x2076 x592)))
(define-fun x2040 ((x592 Real)) Real (ite (= x565 x592) x1773 (x1366 x592)))
(define-fun x1016 ((x592 Real)) Real (ite (= x592 x1635) x437 (x996 x592)))
(define-fun x2011 ((x592 Real)) Real (ite (= x562 x592) x1903 (x2292 x592)))
(define-fun x2205 ((x592 Real)) Real (ite (= x592 x139) x1034 (x748 x592)))
(define-fun x849 ((x592 Real)) Real (ite (and (not x1872) x2128) (x996 x592) (x1016 x592)))
(define-fun x2261 ((x592 Real)) Real (ite (and (not x1872) x2128) (x2292 x592) (x2011 x592)))
(define-fun x975 ((x592 Real)) Real (ite (and x2128 (not x1872)) (x1366 x592) (x2040 x592)))
(define-fun x858 ((x592 Real)) Real (ite (and x2128 (not x1872)) (x1921 x592) (x2140 x592)))
(define-fun x1263 ((x592 Real)) Real (ite (and x2128 (not x1872)) (x2076 x592) (x1605 x592)))
(define-fun x2278 ((x592 Real)) Real (ite (and (not x1872) x2128) (x748 x592) (x2205 x592)))
(define-fun x1462 ((x592 Real)) Real (ite (and (not x1872) x2128) (x306 x592) (x266 x592)))
(define-fun x1241 ((x592 Real)) Real (ite (= x1312 x592) x341 (x919 x592)))
(define-fun x965 ((x592 Real)) Real (ite (= x204 x592) 274184521717934524641157099916833587231 (x152 x592)))
(define-fun x1303 ((x592 Real)) Real (ite (= x592 x2001) 128 (x1243 x592)))
(define-fun x1079 ((x592 Real)) Real (ite (= x656 x592) x1009 (x1213 x592)))
(define-fun x417 ((x592 Real)) Real (ite (= x728 x592) x1233 (x2091 x592)))
(define-fun x381 ((x592 Real)) Real (ite (= x592 x424) 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1028 x592)))
(define-fun x1017 ((x592 Real)) Real (ite (= x592 x520) x718 (x381 x592)))
(define-fun x1786 ((x592 Real)) Real (ite (and (>= x592 x424) (< x592 (+ 32 x424))) (x2139 (+ (- x592 x424) 0)) (x2132 x592)))
(define-fun x414 ((x592 Real)) Real (ite (and x371 x95 (not x1792)) (x1786 x592) (x2132 x592)))
(define-fun x1629 ((x592 Real)) Real (ite (= x592 x566) 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x414 x592)))
(define-fun x808 ((x592 Real)) Real (ite (= x1491 x592) x30 (x1629 x592)))
(define-fun x1311 ((x592 Real)) Real (ite (= x592 x1304) x742 (x808 x592)))
(define-fun x1125 ((x592 Real)) Real (ite (and (<= x566 x592) (< x592 (+ 32 x566))) (x217 (+ 0 (- x592 x566))) (x1064 x592)))
(define-fun x1123 ((x592 Real)) Real (ite (and x1672 (not x179) x1771) (x1125 x592) (x1064 x592)))
(define-fun x143 ((x592 Real)) Real (ite (= x592 x106) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1123 x592)))
(define-fun x401 ((x592 Real)) Real (ite (and (< x592 (+ x106 32)) (<= x106 x592)) (x653 (+ 0 (- x592 x106))) (x1376 x592)))
(define-fun x232 ((x592 Real)) Real (ite (and (> (+ 32 x612) x592) (<= x612 x592)) (x863 (+ 0 (- x592 x612))) (x755 x592)))
(define-fun x2269 ((x592 Real)) Real (ite (and x1443 (not x1283) x1643) (x232 x592) (x755 x592)))
(define-fun x853 ((x592 Real)) Real (ite (and (< x592 (+ 32 x1126)) (>= x592 x1126)) (x2270 (+ (- x592 x1126) 0)) (x1530 x592)))
(define-fun x1258 ((x592 Real)) Real (ite (= x112 x592) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2221 x592)))
(define-fun x1810 ((x592 Real)) Real (ite (and (<= x112 x592) (< x592 (+ 32 x112))) (x1373 (+ (- x592 x112) 0)) (x1098 x592)))
(define-fun x693 ((x592 Real)) Real (ite (and x716 (not x1038) x107) (x1810 x592) (x1098 x592)))
(define-fun x1687 ((x592 Real)) Real (ite (and (<= x576 x592) (< x592 (+ 32 x576))) (x622 (+ (- x592 x576) 0)) (x1631 x592)))
(define-fun x1936 ((x592 Real)) Real (ite (and x1582 (not x1331) x7) (x1687 x592) (x1631 x592)))
(define-fun x2116 ((x592 Real)) Real (ite (= x592 x379) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2238 x592)))
(define-fun x956 ((x592 Real)) Real (ite (and (< x592 (+ x379 32)) (>= x592 x379)) (x467 (+ 0 (- x592 x379))) (x206 x592)))
(define-fun x2180 ((x592 Real)) Real (ite (and x657 (not x1913) x2021) (x956 x592) (x206 x592)))
(define-fun x46 ((x592 Real)) Real (ite (= x592 x2226) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2180 x592)))
(define-fun x895 ((x592 Real)) Real (ite (and (> (+ x2226 32) x592) (>= x592 x2226)) (x1838 (+ 0 (- x592 x2226))) (x1973 x592)))
(define-fun x973 ((x592 Real)) Real (ite (= x592 x1744) 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x883 x592)))
(define-fun x908 ((x592 Real)) Real (ite (= x592 x1600) x1937 (x973 x592)))
(define-fun x2090 ((x592 Real)) Real (ite (and (> (+ 32 x1744) x592) (>= x592 x1744)) (x1759 (+ (- x592 x1744) 0)) (x256 x592)))
(define-fun x1195 ((x592 Real)) Real (ite (and (not x977) x2216 x821) (x2090 x592) (x256 x592)))
(define-fun x1620 ((x592 Real)) Real (ite (= x1988 x592) 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1195 x592)))
(define-fun x822 ((x592 Real)) Real (ite (= x488 x592) x1650 (x1620 x592)))
(define-fun x1088 ((x592 Real)) Real (ite (= x592 x1510) x2087 (x822 x592)))
(define-fun x1725 ((x592 Real)) Real (ite (and (> (+ 32 x1988) x592) (>= x592 x1988)) (x1637 (+ (- x592 x1988) 0)) (x823 x592)))
(define-fun x1395 ((x592 Real)) Real (ite (and (>= x592 x1465) (> (+ x1465 32) x592)) (x911 (+ 0 (- x592 x1465))) (x1300 x592)))
(define-fun x1825 ((x592 Real)) Real (ite (and (not x1965) x257 x954) (x1395 x592) (x1300 x592)))
(define-fun x2053 ((x592 Real)) Real (ite (and (< x592 (+ x28 32)) (>= x592 x28)) (x967 (+ (- x592 x28) 0)) (x1601 x592)))
(define-fun x604 ((x592 Real)) Real (ite (and x1349 x1980 (not x120)) (x2053 x592) (x1601 x592)))
(define-fun x1642 ((x592 Real)) Real (ite (and (< x592 (+ x2229 32)) (<= x2229 x592)) (x1061 (+ (- x592 x2229) 0)) (x1931 x592)))
(define-fun x506 ((x592 Real)) Real (ite (and x2254 (not x2003) x263) (x1642 x592) (x1931 x592)))
(define-fun x209 ((x592 Real)) Real (ite (and x2046 x1418) (x1158 x592) (x506 x592)))
(define-fun x267 ((x592 Real)) Real (ite (= x592 x74) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x713 x592)))
(define-fun x2045 ((x592 Real)) Real (ite (and (<= x74 x592) (> (+ 32 x74) x592)) (x790 (+ (- x592 x74) 0)) (x2150 x592)))
(define-fun x1943 ((x592 Real)) Real (ite (and x616 (not x296) x2158) (x2045 x592) (x2150 x592)))
(define-fun x1356 ((x592 Real)) Real (ite (and (< x592 (+ 32 x1886)) (<= x1886 x592)) (x188 (+ (- x592 x1886) 0)) (x2047 x592)))
(define-fun x1502 ((x592 Real)) Real (ite (and (not x1368) x328 x856) (x1356 x592) (x2047 x592)))
(define-fun x1523 ((x592 Real)) Real (ite (= x592 x436) 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x643 x592)))
(define-fun x1434 ((x592 Real)) Real (ite (= x592 x1097) x2230 (x1523 x592)))
(define-fun x2242 ((x592 Real)) Real (ite (and (>= x592 x436) (> (+ 32 x436) x592)) (x2041 (+ (- x592 x436) 0)) (x2131 x592)))
(define-fun x1138 ((x592 Real)) Real (ite (and (not x2146) x1959 x1547) (x2242 x592) (x2131 x592)))
(define-fun x561 ((x592 Real)) Real (ite (and x1976 x550) (ite (and x1885 (not x16)) (x643 x592) (x1138 x592)) (ite (and x957 x2189) (x643 x592) (ite (and x1100 x1113) (x2238 x592) (x1846 x592)))))
(define-fun x2162 ((x592 Real)) Real (ite (= x592 x854) 31123442917456901051708656246501188623764889836880532624742668034502079545344 (x561 x592)))
(define-fun x712 ((x592 Real)) Real (ite (= x592 x2013) 274184521717934524641157099916833587231 (x2162 x592)))
(define-fun x1342 ((x592 Real)) Real (ite (and (<= x854 x592) (< x592 (+ x854 32))) (x513 (+ 0 (- x592 x854))) (x982 x592)))
(define-fun x248 ((x592 Real)) Real (ite (= x592 x2181) 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1358 x592)))
(define-fun x1424 ((x592 Real)) Real (ite (= x592 x1904) 274184521717934524641157099916833587231 (x248 x592)))
(define-fun x1330 ((x592 Real)) Real (ite (and (>= x592 x2181) (< x592 (+ x2181 32))) (x2153 (+ 0 (- x592 x2181))) (x1446 x592)))
(define-fun x583 ((x592 Real)) Real (ite (and (not x1992) x881 x330) (x1330 x592) (x1446 x592)))
(define-fun x1062 ((x592 Real)) Real (ite (= x892 x592) 1745775925341846069737700012427326409042627966635005077806405090422919528448 (x583 x592)))
(define-fun x2160 ((x592 Real)) Real (ite (= x1935 x592) x518 (x1062 x592)))
(define-fun x2214 ((x592 Real)) Real (ite (and (>= x592 x892) (> (+ x892 32) x592)) (x1720 (+ (- x592 x892) 0)) (x636 x592)))
(define-fun x128 ((x592 Real)) Real (ite (and x213 (not x827) x943) (x2214 x592) (x636 x592)))
(define-fun x2026 ((x592 Real)) Real (ite (and (<= x1228 x592) (< x592 (+ 32 x1228))) (x607 (+ (- x592 x1228) 0)) (x1439 x592)))
(define-fun x1503 ((x592 Real)) Real (ite (and x169 (not x2038) x166) (x2026 x592) (x1439 x592)))
(define-fun x2074 ((x592 Real)) Real (ite (and (not x1094) x1186) (x1503 x592) (x1358 x592)))
(define-fun x922 ((x592 Real)) Real (ite (= x592 x1778) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2074 x592)))
(define-fun x1482 ((x592 Real)) Real (ite (and (<= x1778 x592) (< x592 (+ 32 x1778))) (x537 (+ 0 (- x592 x1778))) (x237 x592)))
(define-fun x2111 ((x592 Real)) Real (ite (and x1257 x963 (not x631)) (x1482 x592) (x237 x592)))
(define-fun x1106 ((x592 Real)) Real (ite (and (< x592 (+ 32 x2056)) (<= x2056 x592)) (x1416 (+ 0 (- x592 x2056))) (x1639 x592)))
(define-fun x1861 ((x592 Real)) Real (ite (and x2028 (not x1351) x56) (x1106 x592) (x1639 x592)))
(define-fun x1798 ((x592 Real)) Real (ite (= x592 x2195) x1461 (x1861 x592)))
(define-fun x944 ((x592 Real)) Real (ite (= x592 x2195) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1798 x592)))
(define-fun x865 ((x592 Real)) Real (ite (and (< x592 (+ x2195 32)) (<= x2195 x592)) (x1874 (+ 0 (- x592 x2195))) (x317 x592)))
(define-fun x2049 ((x592 Real)) Real (ite (= x592 274184521717934524641157099916833587231) x1540 (x269 x592)))
(define-fun x560 ((x592 Real)) Real (ite (= x592 x91) x898 (x2049 x592)))
(define-fun x606 ((x592 Real)) Real (ite (and x1266 x2232 x1785 x1475) (x2059 x592) (x560 x592)))
(define-fun x1551 ((x592 Real)) Real (ite (= x592 x91) x737 (x606 x592)))
(define-fun x1684 ((x592 Real)) Real (ite (= x592 274184521717934524641157099916833587231) x2249 (x1551 x592)))
(define-fun x719 ((x592 Real)) Real (ite (and x1475 x1785 x2232) (x1684 x592) (x269 x592)))
(define-fun x1092 ((x592 Real)) Real (ite (= x592 x1288) x1413 (x1783 x592)))
(define-fun x1247 ((x592 Real)) Real (ite (and x1186 (not x1094)) (x1092 x592) (x1783 x592)))
(define-fun x418 ((x592 Real)) Real (ite (= x486 x592) x618 (x901 x592)))
(define-fun x1008 ((x592 Real)) Real (ite (= x1485 x592) x2125 (x1144 x592)))
(define-fun x242 ((x592 Real)) Real (ite (and (< x592 (+ x1633 x2148)) (<= x1633 x592)) (x1853 (+ (- x592 x1633) x1043)) (x1353 x592)))
(define-fun x1135 ((x592 Real)) Real (ite (= x1832 x592) x1706 (x461 x592)))
(define-fun x2054 ((x592 Real)) Real (ite (and (not x2070) x1324) (x461 x592) (x1135 x592)))
(define-fun x1237 ((x592 Real)) Real (ite (= x592 x916) x345 (x2088 x592)))
(define-fun x40 ((x592 Real)) Real (ite (and (> (+ x1005 x130) x592) (>= x592 x130)) (x1853 (+ (- x592 x130) x1043)) (x2 x592)))
(define-fun x1378 ((x592 Real)) Real (ite (= x307 x592) x102 (x2060 x592)))
(define-fun x992 ((x592 Real)) Real (ite (and (not x1193) x1899) (x2060 x592) (ite (and x2126 x72) (x1378 x592) (x2060 x592))))
(define-fun x1131 ((x592 Real)) Real (ite (and (>= x592 x2193) (> (+ x2193 x1205) x592)) (x1853 (+ x1043 (- x592 x2193))) (x942 x592)))
(define-fun x764 ((x592 Real)) Real (ite (= x1580 x592) x2020 (x2252 x592)))
(define-fun x1560 ((x592 Real)) Real (ite (and x1137 (not x1538)) (x2252 x592) (ite (and x1212 x2135) (x764 x592) (x2252 x592))))
(define-fun x696 ((x592 Real)) Real (ite (= x1975 x592) x531 (x1968 x592)))
(define-fun x383 ((x592 Real)) Real (ite (and (<= x1294 x592) (< x592 (+ x104 x1294))) (x1853 (+ x1043 (- x592 x1294))) (x567 x592)))
(define-fun x1625 ((x592 Real)) Real (ite (= x592 x395) x568 (x1441 x592)))
(define-fun x1515 ((x592 Real)) Real (ite (and (not x1809) x1960) (x1441 x592) (ite (and x1198 x542) (x1625 x592) (x1441 x592))))
(define-fun x623 ((x592 Real)) Real (ite (= x577 x592) x600 (x698 x592)))
(define-fun x368 ((x592 Real)) Real (ite (and x2232 x1475 x637) (x698 x592) (x623 x592)))
(define-fun x351 ((x592 Real)) Real (ite (= x592 x2115) x440 (x1817 x592)))
(define-fun x1772 ((x592 Real)) Real (ite (= x592 x582) 0 (x2248 x592)))
(define-fun x320 ((x592 Real)) Real (ite (and (> (+ x577 0) x592) (>= x592 x577)) (x1715 (+ 0 (- x592 x577))) (x1562 x592)))
(define-fun x1232 ((x592 Real)) Real (ite (and x1785 x1475 x2232) (ite (and x1785 x1475 x1266 x2232) (x320 x592) (x1562 x592)) (x1562 x592)))
(define-fun x69 ((x592 Real)) Real (ite (= x1206 x592) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1232 x592)))
(define-fun x1251 ((x592 Real)) Real (ite (and (<= x1206 x592) (> (+ 32 x1206) x592)) (x2283 (+ 0 (- x592 x1206))) (x331 x592)))
(define-fun x597 ((x592 Real)) Real (ite (and x1785 x1475 x2232) (x1715 x592) (x1178 x592)))
(define-fun x864 ((x592 Real)) Real (ite (and (>= x592 x505) (> (+ x600 x505) x592)) (x597 (+ (- x592 x505) 0)) (x1892 x592)))
(define-fun x870 ((x592 Real)) Real (ite (and x1475 x637 x2232) (x1892 x592) (x864 x592)))
(define-fun x1548 ((x592 Real)) Real (ite (and (not x1438) x271 x13) (x1251 x592) (x331 x592)))
(define-fun x210 ((x592 Real)) Real (ite (= x592 x491) x247 (x66 x592)))
(define-fun x337 ((x592 Real)) Real (ite (= x592 x1103) 274184521717934524641157099916833587231 (x210 x592)))
(define-fun x761 ((x592 Real)) Real (ite (= x598 x592) x1461 (x337 x592)))
(define-fun x1953 ((x592 Real)) Real (ite (= x205 x592) x532 (x726 x592)))
(define-fun x101 ((x592 Real)) Real (ite (= x592 x321) x2286 (x761 x592)))
(assert (axiom_frac_bound (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2000 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2125 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x345 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x531 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x555 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x618 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x680 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1181 x948 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1188 x1157 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1350 x1494 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392 1000000000000000000 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1406 x1717 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1539 x630 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1824 x182 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x289 x1604 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x322 x867 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x345 32 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x430 x1414 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x442 x1146 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x523 x1229 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x618 32 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x625 x1023 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x664 x2083 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x705 x1296 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x714 x1426 (uninterp_frac (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x2000 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2125 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x345 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x531 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x555 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x618 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x680 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1181 x948 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1188 x1157 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1350 x1494 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1392 1000000000000000000 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1406 x1717 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1539 x630 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1824 x182 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x289 x1604 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x322 x867 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x345 32 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x430 x1414 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x442 x1146 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x523 x1229 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x618 32 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x625 x1023 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x664 x2083 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x705 x1296 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x714 x1426 (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x2000 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2125 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x345 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x531 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x555 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x618 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x680 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1181 x948 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1188 x1157 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1350 x1494 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1392 1000000000000000000 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1406 x1717 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1539 x630 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1824 x182 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x289 x1604 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x322 x867 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x345 32 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x430 x1414 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x442 x1146 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x523 x1229 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x618 32 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x625 x1023 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x664 x2083 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x705 x1296 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x714 x1426 (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 1000000000000000000 x2000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 32 x2125 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 32 x345 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 32 x531 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 32 x555 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 32 x618 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 32 x680 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x1181 x948 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x1188 x1157 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x1350 x1494 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x1392 1000000000000000000 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x1406 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x1539 x630 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x1824 x182 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x289 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x322 x867 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x345 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x430 x1414 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x442 x1146 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x523 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x618 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x625 x1023 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x664 x2083 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x705 x1296 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948 x714 x1426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)))
(assert (axiom_frac_bound x1197 x745))
(assert (axiom_frac_zero x1197 x745 1000000000000000000 x2000 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 32 x2125 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 32 x345 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 32 x531 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 32 x555 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 32 x618 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 32 x680 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x1181 x948 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x1188 x1157 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x1350 x1494 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x1392 1000000000000000000 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x1406 x1717 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x1539 x630 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x1824 x182 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x289 x1604 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x322 x867 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x345 32 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x430 x1414 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x442 x1146 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x523 x1229 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x618 32 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x625 x1023 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x664 x2083 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x705 x1296 (uninterp_frac x1197 x745)))
(assert (axiom_frac_zero x1197 x745 x714 x1426 (uninterp_frac x1197 x745)))
(assert (axiom_frac_bound x1234 x1824))
(assert (axiom_frac_zero x1234 x1824 1000000000000000000 x2000 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 32 x2125 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 32 x345 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 32 x531 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 32 x555 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 32 x618 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 32 x680 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x1181 x948 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x1188 x1157 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x1350 x1494 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x1392 1000000000000000000 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x1406 x1717 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x1539 x630 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x1824 x182 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x289 x1604 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x322 x867 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x345 32 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x430 x1414 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x442 x1146 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x523 x1229 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x618 32 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x625 x1023 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x664 x2083 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x705 x1296 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_zero x1234 x1824 x714 x1426 (uninterp_frac x1234 x1824)))
(assert (axiom_frac_bound x1340 x1961))
(assert (axiom_frac_zero x1340 x1961 1000000000000000000 x2000 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 32 x2125 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 32 x345 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 32 x531 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 32 x555 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 32 x618 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 32 x680 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x1181 x948 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x1188 x1157 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x1350 x1494 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x1392 1000000000000000000 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x1406 x1717 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x1539 x630 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x1824 x182 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x289 x1604 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x322 x867 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x345 32 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x430 x1414 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x442 x1146 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x523 x1229 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x618 32 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x625 x1023 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x664 x2083 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x705 x1296 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_zero x1340 x1961 x714 x1426 (uninterp_frac x1340 x1961)))
(assert (axiom_frac_bound x1343 1000000000000000000))
(assert (axiom_frac_zero x1343 1000000000000000000 1000000000000000000 x2000 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 32 x2125 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 32 x345 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 32 x531 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 32 x555 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 32 x618 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 32 x680 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x1181 x948 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x1188 x1157 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x1350 x1494 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x1392 1000000000000000000 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x1406 x1717 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x1539 x630 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x1824 x182 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x289 x1604 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x322 x867 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x345 32 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x430 x1414 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x442 x1146 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x523 x1229 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x618 32 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x625 x1023 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x664 x2083 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x705 x1296 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_zero x1343 1000000000000000000 x714 x1426 (uninterp_frac x1343 1000000000000000000)))
(assert (axiom_frac_bound x1385 x801))
(assert (axiom_frac_zero x1385 x801 1000000000000000000 x2000 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 32 x2125 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 32 x345 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 32 x531 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 32 x555 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 32 x618 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 32 x680 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x1181 x948 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x1188 x1157 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x1350 x1494 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x1392 1000000000000000000 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x1406 x1717 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x1539 x630 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x1824 x182 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x289 x1604 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x322 x867 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x345 32 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x430 x1414 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x442 x1146 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x523 x1229 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x618 32 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x625 x1023 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x664 x2083 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x705 x1296 (uninterp_frac x1385 x801)))
(assert (axiom_frac_zero x1385 x801 x714 x1426 (uninterp_frac x1385 x801)))
(assert (axiom_frac_bound x1803 1000000000000000000))
(assert (axiom_frac_zero x1803 1000000000000000000 1000000000000000000 x2000 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 32 x2125 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 32 x345 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 32 x531 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 32 x555 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 32 x618 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 32 x680 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x1181 x948 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x1188 x1157 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x1350 x1494 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x1392 1000000000000000000 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x1406 x1717 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x1539 x630 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x1824 x182 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x289 x1604 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x322 x867 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x345 32 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x430 x1414 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x442 x1146 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x523 x1229 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x618 32 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x625 x1023 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x664 x2083 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x705 x1296 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_zero x1803 1000000000000000000 x714 x1426 (uninterp_frac x1803 1000000000000000000)))
(assert (axiom_frac_bound x1900 1000000000000000000))
(assert (axiom_frac_zero x1900 1000000000000000000 1000000000000000000 x2000 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 32 x2125 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 32 x345 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 32 x531 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 32 x555 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 32 x618 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 32 x680 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x1181 x948 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x1188 x1157 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x1350 x1494 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x1392 1000000000000000000 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x1406 x1717 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x1539 x630 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x1824 x182 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x289 x1604 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x322 x867 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x345 32 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x430 x1414 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x442 x1146 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x523 x1229 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x618 32 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x625 x1023 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x664 x2083 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x705 x1296 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_zero x1900 1000000000000000000 x714 x1426 (uninterp_frac x1900 1000000000000000000)))
(assert (axiom_frac_bound x2198 x1512))
(assert (axiom_frac_zero x2198 x1512 1000000000000000000 x2000 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 32 x2125 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 32 x345 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 32 x531 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 32 x555 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 32 x618 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 32 x680 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x1181 x948 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x1188 x1157 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x1350 x1494 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x1392 1000000000000000000 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x1406 x1717 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x1539 x630 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x1824 x182 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x289 x1604 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x322 x867 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x345 32 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x430 x1414 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x442 x1146 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x523 x1229 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x618 32 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x625 x1023 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x664 x2083 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x705 x1296 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_zero x2198 x1512 x714 x1426 (uninterp_frac x2198 x1512)))
(assert (axiom_frac_bound x220 x2184))
(assert (axiom_frac_zero x220 x2184 1000000000000000000 x2000 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 32 x2125 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 32 x345 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 32 x531 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 32 x555 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 32 x618 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 32 x680 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x1181 x948 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x1188 x1157 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x1350 x1494 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x1392 1000000000000000000 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x1406 x1717 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x1539 x630 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x1824 x182 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x289 x1604 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x322 x867 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x345 32 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x430 x1414 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x442 x1146 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x523 x1229 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x618 32 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x625 x1023 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x664 x2083 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x705 x1296 (uninterp_frac x220 x2184)))
(assert (axiom_frac_zero x220 x2184 x714 x1426 (uninterp_frac x220 x2184)))
(assert (axiom_frac_bound x352 2))
(assert (axiom_frac_zero x352 2 1000000000000000000 x2000 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 32 x2125 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 32 x345 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 32 x531 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 32 x555 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 32 x618 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 32 x680 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x1181 x948 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x1188 x1157 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x1350 x1494 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x1392 1000000000000000000 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x1406 x1717 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x1539 x630 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x1824 x182 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x289 x1604 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x322 x867 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x345 32 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x430 x1414 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x442 x1146 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x523 x1229 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x618 32 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x625 x1023 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x664 x2083 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x705 x1296 (uninterp_frac x352 2)))
(assert (axiom_frac_zero x352 2 x714 x1426 (uninterp_frac x352 2)))
(assert (axiom_frac_bound x511 2))
(assert (axiom_frac_zero x511 2 1000000000000000000 x2000 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 32 x2125 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 32 x345 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 32 x531 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 32 x555 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 32 x618 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 32 x680 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x1181 x948 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x1188 x1157 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x1350 x1494 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x1392 1000000000000000000 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x1406 x1717 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x1539 x630 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x1824 x182 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x289 x1604 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x322 x867 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x345 32 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x430 x1414 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x442 x1146 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x523 x1229 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x618 32 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x625 x1023 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x664 x2083 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x705 x1296 (uninterp_frac x511 2)))
(assert (axiom_frac_zero x511 2 x714 x1426 (uninterp_frac x511 2)))
(assert (axiom_frac_bound x634 x1512))
(assert (axiom_frac_zero x634 x1512 1000000000000000000 x2000 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 32 x2125 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 32 x345 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 32 x531 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 32 x555 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 32 x618 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 32 x680 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x1181 x948 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x1188 x1157 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x1350 x1494 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x1392 1000000000000000000 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x1406 x1717 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x1539 x630 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x1824 x182 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x289 x1604 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x322 x867 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x345 32 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x430 x1414 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x442 x1146 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x523 x1229 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x618 32 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x625 x1023 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x664 x2083 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x705 x1296 (uninterp_frac x634 x1512)))
(assert (axiom_frac_zero x634 x1512 x714 x1426 (uninterp_frac x634 x1512)))
(assert (axiom_frac_bound x674 x1614))
(assert (axiom_frac_zero x674 x1614 1000000000000000000 x2000 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 32 x2125 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 32 x345 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 32 x531 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 32 x555 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 32 x618 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 32 x680 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x1181 x948 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x1188 x1157 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x1350 x1494 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x1392 1000000000000000000 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x1406 x1717 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x1539 x630 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x1824 x182 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x289 x1604 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x322 x867 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x345 32 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x430 x1414 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x442 x1146 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x523 x1229 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x618 32 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x625 x1023 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x664 x2083 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x705 x1296 (uninterp_frac x674 x1614)))
(assert (axiom_frac_zero x674 x1614 x714 x1426 (uninterp_frac x674 x1614)))
(assert (axiom_frac_bound x789 1000000000000000000))
(assert (axiom_frac_zero x789 1000000000000000000 1000000000000000000 x2000 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 32 x2125 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 32 x345 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 32 x531 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 32 x555 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 32 x618 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 32 x680 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x1181 x948 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x1188 x1157 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x1350 x1494 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x1392 1000000000000000000 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x1406 x1717 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x1539 x630 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x1824 x182 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x289 x1604 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x322 x867 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x345 32 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x430 x1414 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x442 x1146 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x523 x1229 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x618 32 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x625 x1023 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x664 x2083 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x705 x1296 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_zero x789 1000000000000000000 x714 x1426 (uninterp_frac x789 1000000000000000000)))
(assert (axiom_frac_bound x873 x1494))
(assert (axiom_frac_zero x873 x1494 1000000000000000000 x2000 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 32 x2125 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 32 x345 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 32 x531 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 32 x555 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 32 x618 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 32 x680 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x1181 x948 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x1188 x1157 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x1350 x1494 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x1392 1000000000000000000 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x1406 x1717 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x1539 x630 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x1824 x182 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x289 x1604 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x322 x867 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x345 32 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x430 x1414 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x442 x1146 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x523 x1229 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x618 32 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x625 x1023 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x664 x2083 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x705 x1296 (uninterp_frac x873 x1494)))
(assert (axiom_frac_zero x873 x1494 x714 x1426 (uninterp_frac x873 x1494)))
(assert (axiom_frac_bound x912 1000000000000000000))
(assert (axiom_frac_zero x912 1000000000000000000 1000000000000000000 x2000 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 32 x2125 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 32 x345 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 32 x531 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 32 x555 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 32 x618 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 32 x680 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x1181 x948 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x1188 x1157 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x1350 x1494 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x1392 1000000000000000000 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x1406 x1717 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x1539 x630 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x1824 x182 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x289 x1604 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x322 x867 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x345 32 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x430 x1414 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x442 x1146 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x523 x1229 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x618 32 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x625 x1023 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x664 x2083 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x705 x1296 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_zero x912 1000000000000000000 x714 x1426 (uninterp_frac x912 1000000000000000000)))
(assert (axiom_frac_bound x926 1000000000000000000))
(assert (axiom_frac_zero x926 1000000000000000000 1000000000000000000 x2000 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 32 x2125 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 32 x345 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 32 x531 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 32 x555 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 32 x618 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 32 x680 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x1181 x948 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x1188 x1157 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x1350 x1494 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x1392 1000000000000000000 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x1406 x1717 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x1539 x630 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x1824 x182 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x289 x1604 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x322 x867 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x345 32 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x430 x1414 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x442 x1146 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x523 x1229 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x618 32 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x625 x1023 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x664 x2083 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x705 x1296 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_frac_zero x926 1000000000000000000 x714 x1426 (uninterp_frac x926 1000000000000000000)))
(assert (axiom_int_approximation x100))
(assert (axiom_int_approximation x1005))
(assert (axiom_int_approximation x1009))
(assert (axiom_int_approximation x1014))
(assert (axiom_int_approximation x1018))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1023))
(assert (axiom_int_approximation x1027))
(assert (axiom_int_approximation x1029))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x1040))
(assert (axiom_int_approximation x1043))
(assert (axiom_int_approximation x1049))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1051))
(assert (axiom_int_approximation x1056))
(assert (axiom_int_approximation x1057))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x1066))
(assert (axiom_int_approximation x1071))
(assert (axiom_int_approximation x1073))
(assert (axiom_int_approximation x1074))
(assert (axiom_int_approximation x1076))
(assert (axiom_int_approximation x1077))
(assert (axiom_int_approximation x108))
(assert (axiom_int_approximation x1080))
(assert (axiom_int_approximation x1093))
(assert (axiom_int_approximation x1095))
(assert (axiom_int_approximation x1096))
(assert (axiom_int_approximation x1097))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1102))
(assert (axiom_int_approximation x1103))
(assert (axiom_int_approximation x1104))
(assert (axiom_int_approximation x1111))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1124))
(assert (axiom_int_approximation x1126))
(assert (axiom_int_approximation x1127))
(assert (axiom_int_approximation x1128))
(assert (axiom_int_approximation x1129))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x1130))
(assert (axiom_int_approximation x1139))
(assert (axiom_int_approximation x1141))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1143))
(assert (axiom_int_approximation x1146))
(assert (axiom_int_approximation x1147))
(assert (axiom_int_approximation x1148))
(assert (axiom_int_approximation x1151))
(assert (axiom_int_approximation x1152))
(assert (axiom_int_approximation x1154))
(assert (axiom_int_approximation x1157))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x1165))
(assert (axiom_int_approximation x1169))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1171))
(assert (axiom_int_approximation x1173))
(assert (axiom_int_approximation x1176))
(assert (axiom_int_approximation x1181))
(assert (axiom_int_approximation x1182))
(assert (axiom_int_approximation x1184))
(assert (axiom_int_approximation x1188))
(assert (axiom_int_approximation x1189))
(assert (axiom_int_approximation x1191))
(assert (axiom_int_approximation x1196))
(assert (axiom_int_approximation x1197))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x12))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1205))
(assert (axiom_int_approximation x1206))
(assert (axiom_int_approximation x1208))
(assert (axiom_int_approximation x1215))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x1218))
(assert (axiom_int_approximation x1219))
(assert (axiom_int_approximation x122))
(assert (axiom_int_approximation x1223))
(assert (axiom_int_approximation x1225))
(assert (axiom_int_approximation x1228))
(assert (axiom_int_approximation x1229))
(assert (axiom_int_approximation x1233))
(assert (axiom_int_approximation x1234))
(assert (axiom_int_approximation x1236))
(assert (axiom_int_approximation x124))
(assert (axiom_int_approximation x1240))
(assert (axiom_int_approximation x1244))
(assert (axiom_int_approximation x1249))
(assert (axiom_int_approximation x1252))
(assert (axiom_int_approximation x1255))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x1259))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x1260))
(assert (axiom_int_approximation x1261))
(assert (axiom_int_approximation x1265))
(assert (axiom_int_approximation x1268))
(assert (axiom_int_approximation x1269))
(assert (axiom_int_approximation x1270))
(assert (axiom_int_approximation x1273))
(assert (axiom_int_approximation x1274))
(assert (axiom_int_approximation x1281))
(assert (axiom_int_approximation x1282))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x1289))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x1290))
(assert (axiom_int_approximation x1292))
(assert (axiom_int_approximation x1293))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1296))
(assert (axiom_int_approximation x1298))
(assert (axiom_int_approximation x1299))
(assert (axiom_int_approximation x130))
(assert (axiom_int_approximation x1304))
(assert (axiom_int_approximation x1306))
(assert (axiom_int_approximation x131))
(assert (axiom_int_approximation x1312))
(assert (axiom_int_approximation x1313))
(assert (axiom_int_approximation x1318))
(assert (axiom_int_approximation x1322))
(assert (axiom_int_approximation x1325))
(assert (axiom_int_approximation x1326))
(assert (axiom_int_approximation x1328))
(assert (axiom_int_approximation x1329))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x1340))
(assert (axiom_int_approximation x1343))
(assert (axiom_int_approximation x1345))
(assert (axiom_int_approximation x1346))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1350))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x1362))
(assert (axiom_int_approximation x1363))
(assert (axiom_int_approximation x1364))
(assert (axiom_int_approximation x1365))
(assert (axiom_int_approximation x1367))
(assert (axiom_int_approximation x1369))
(assert (axiom_int_approximation x1372))
(assert (axiom_int_approximation x1382))
(assert (axiom_int_approximation x1384))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x1386))
(assert (axiom_int_approximation x1387))
(assert (axiom_int_approximation x1389))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1390))
(assert (axiom_int_approximation x1392))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x1399))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x1400))
(assert (axiom_int_approximation x1401))
(assert (axiom_int_approximation x1404))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x1410))
(assert (axiom_int_approximation x1411))
(assert (axiom_int_approximation x1412))
(assert (axiom_int_approximation x1413))
(assert (axiom_int_approximation x1414))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x1423))
(assert (axiom_int_approximation x1425))
(assert (axiom_int_approximation x1426))
(assert (axiom_int_approximation x1428))
(assert (axiom_int_approximation x1429))
(assert (axiom_int_approximation x1432))
(assert (axiom_int_approximation x1435))
(assert (axiom_int_approximation x1440))
(assert (axiom_int_approximation x1449))
(assert (axiom_int_approximation x1452))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1461))
(assert (axiom_int_approximation x1465))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x1470))
(assert (axiom_int_approximation x1471))
(assert (axiom_int_approximation x1472))
(assert (axiom_int_approximation x1477))
(assert (axiom_int_approximation x148))
(assert (axiom_int_approximation x1480))
(assert (axiom_int_approximation x1484))
(assert (axiom_int_approximation x1485))
(assert (axiom_int_approximation x1486))
(assert (axiom_int_approximation x1491))
(assert (axiom_int_approximation x1493))
(assert (axiom_int_approximation x1494))
(assert (axiom_int_approximation x1496))
(assert (axiom_int_approximation x1498))
(assert (axiom_int_approximation x1499))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x1500))
(assert (axiom_int_approximation x1508))
(assert (axiom_int_approximation x1510))
(assert (axiom_int_approximation x1512))
(assert (axiom_int_approximation x1519))
(assert (axiom_int_approximation x1521))
(assert (axiom_int_approximation x1522))
(assert (axiom_int_approximation x1524))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x1532))
(assert (axiom_int_approximation x1533))
(assert (axiom_int_approximation x1535))
(assert (axiom_int_approximation x1536))
(assert (axiom_int_approximation x1537))
(assert (axiom_int_approximation x1539))
(assert (axiom_int_approximation x1540))
(assert (axiom_int_approximation x1542))
(assert (axiom_int_approximation x1545))
(assert (axiom_int_approximation x1546))
(assert (axiom_int_approximation x155))
(assert (axiom_int_approximation x1554))
(assert (axiom_int_approximation x1555))
(assert (axiom_int_approximation x1556))
(assert (axiom_int_approximation x1557))
(assert (axiom_int_approximation x1558))
(assert (axiom_int_approximation x1564))
(assert (axiom_int_approximation x1566))
(assert (axiom_int_approximation x1567))
(assert (axiom_int_approximation x1570))
(assert (axiom_int_approximation x1573))
(assert (axiom_int_approximation x1574))
(assert (axiom_int_approximation x1575))
(assert (axiom_int_approximation x1579))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1590))
(assert (axiom_int_approximation x1595))
(assert (axiom_int_approximation x1596))
(assert (axiom_int_approximation x1597))
(assert (axiom_int_approximation x1598))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x1600))
(assert (axiom_int_approximation x1602))
(assert (axiom_int_approximation x1603))
(assert (axiom_int_approximation x1604))
(assert (axiom_int_approximation x1606))
(assert (axiom_int_approximation x161))
(assert (axiom_int_approximation x1611))
(assert (axiom_int_approximation x1612))
(assert (axiom_int_approximation x1614))
(assert (axiom_int_approximation x1615))
(assert (axiom_int_approximation x1616))
(assert (axiom_int_approximation x1617))
(assert (axiom_int_approximation x1618))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x1621))
(assert (axiom_int_approximation x1624))
(assert (axiom_int_approximation x1626))
(assert (axiom_int_approximation x1628))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x1632))
(assert (axiom_int_approximation x1633))
(assert (axiom_int_approximation x1635))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x1646))
(assert (axiom_int_approximation x1648))
(assert (axiom_int_approximation x165))
(assert (axiom_int_approximation x1650))
(assert (axiom_int_approximation x1651))
(assert (axiom_int_approximation x1652))
(assert (axiom_int_approximation x1653))
(assert (axiom_int_approximation x1654))
(assert (axiom_int_approximation x1655))
(assert (axiom_int_approximation x1658))
(assert (axiom_int_approximation x1659))
(assert (axiom_int_approximation x1661))
(assert (axiom_int_approximation x1662))
(assert (axiom_int_approximation x1663))
(assert (axiom_int_approximation x1664))
(assert (axiom_int_approximation x1665))
(assert (axiom_int_approximation x1666))
(assert (axiom_int_approximation x1668))
(assert (axiom_int_approximation x1670))
(assert (axiom_int_approximation x1676))
(assert (axiom_int_approximation x1677))
(assert (axiom_int_approximation x1681))
(assert (axiom_int_approximation x1682))
(assert (axiom_int_approximation x1683))
(assert (axiom_int_approximation x1685))
(assert (axiom_int_approximation x1689))
(assert (axiom_int_approximation x1691))
(assert (axiom_int_approximation x1695))
(assert (axiom_int_approximation x1696))
(assert (axiom_int_approximation x1698))
(assert (axiom_int_approximation x1699))
(assert (axiom_int_approximation x1702))
(assert (axiom_int_approximation x1706))
(assert (axiom_int_approximation x1707))
(assert (axiom_int_approximation x1708))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x1710))
(assert (axiom_int_approximation x1712))
(assert (axiom_int_approximation x1716))
(assert (axiom_int_approximation x1717))
(assert (axiom_int_approximation x1719))
(assert (axiom_int_approximation x1722))
(assert (axiom_int_approximation x1723))
(assert (axiom_int_approximation x1726))
(assert (axiom_int_approximation x1729))
(assert (axiom_int_approximation x1730))
(assert (axiom_int_approximation x1733))
(assert (axiom_int_approximation x1735))
(assert (axiom_int_approximation x1737))
(assert (axiom_int_approximation x1738))
(assert (axiom_int_approximation x1739))
(assert (axiom_int_approximation x1740))
(assert (axiom_int_approximation x1742))
(assert (axiom_int_approximation x1744))
(assert (axiom_int_approximation x1745))
(assert (axiom_int_approximation x1746))
(assert (axiom_int_approximation x1748))
(assert (axiom_int_approximation x1750))
(assert (axiom_int_approximation x1752))
(assert (axiom_int_approximation x1753))
(assert (axiom_int_approximation x1755))
(assert (axiom_int_approximation x1761))
(assert (axiom_int_approximation x1764))
(assert (axiom_int_approximation x1765))
(assert (axiom_int_approximation x1766))
(assert (axiom_int_approximation x1767))
(assert (axiom_int_approximation x1768))
(assert (axiom_int_approximation x1769))
(assert (axiom_int_approximation x177))
(assert (axiom_int_approximation x1770))
(assert (axiom_int_approximation x1773))
(assert (axiom_int_approximation x1775))
(assert (axiom_int_approximation x1776))
(assert (axiom_int_approximation x1778))
(assert (axiom_int_approximation x1779))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x1781))
(assert (axiom_int_approximation x1791))
(assert (axiom_int_approximation x1797))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x1800))
(assert (axiom_int_approximation x1801))
(assert (axiom_int_approximation x1803))
(assert (axiom_int_approximation x1804))
(assert (axiom_int_approximation x1806))
(assert (axiom_int_approximation x1807))
(assert (axiom_int_approximation x1812))
(assert (axiom_int_approximation x1814))
(assert (axiom_int_approximation x1815))
(assert (axiom_int_approximation x1816))
(assert (axiom_int_approximation x1819))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x1824))
(assert (axiom_int_approximation x1826))
(assert (axiom_int_approximation x1831))
(assert (axiom_int_approximation x1832))
(assert (axiom_int_approximation x1833))
(assert (axiom_int_approximation x1837))
(assert (axiom_int_approximation x1839))
(assert (axiom_int_approximation x1841))
(assert (axiom_int_approximation x1843))
(assert (axiom_int_approximation x1844))
(assert (axiom_int_approximation x1848))
(assert (axiom_int_approximation x1849))
(assert (axiom_int_approximation x185))
(assert (axiom_int_approximation x1852))
(assert (axiom_int_approximation x1855))
(assert (axiom_int_approximation x1857))
(assert (axiom_int_approximation x1859))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x1862))
(assert (axiom_int_approximation x1863))
(assert (axiom_int_approximation x1864))
(assert (axiom_int_approximation x1865))
(assert (axiom_int_approximation x1866))
(assert (axiom_int_approximation x1868))
(assert (axiom_int_approximation x1869))
(assert (axiom_int_approximation x1877))
(assert (axiom_int_approximation x1878))
(assert (axiom_int_approximation x1879))
(assert (axiom_int_approximation x1880))
(assert (axiom_int_approximation x1886))
(assert (axiom_int_approximation x1889))
(assert (axiom_int_approximation x1893))
(assert (axiom_int_approximation x1896))
(assert (axiom_int_approximation x1900))
(assert (axiom_int_approximation x1901))
(assert (axiom_int_approximation x1902))
(assert (axiom_int_approximation x1903))
(assert (axiom_int_approximation x1904))
(assert (axiom_int_approximation x1905))
(assert (axiom_int_approximation x1908))
(assert (axiom_int_approximation x1909))
(assert (axiom_int_approximation x1910))
(assert (axiom_int_approximation x1911))
(assert (axiom_int_approximation x1915))
(assert (axiom_int_approximation x1916))
(assert (axiom_int_approximation x1918))
(assert (axiom_int_approximation x1919))
(assert (axiom_int_approximation x1924))
(assert (axiom_int_approximation x1925))
(assert (axiom_int_approximation x1933))
(assert (axiom_int_approximation x1935))
(assert (axiom_int_approximation x1937))
(assert (axiom_int_approximation x1938))
(assert (axiom_int_approximation x1939))
(assert (axiom_int_approximation x1940))
(assert (axiom_int_approximation x1941))
(assert (axiom_int_approximation x1945))
(assert (axiom_int_approximation x1947))
(assert (axiom_int_approximation x1948))
(assert (axiom_int_approximation x1949))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x1950))
(assert (axiom_int_approximation x1951))
(assert (axiom_int_approximation x1952))
(assert (axiom_int_approximation x1961))
(assert (axiom_int_approximation x1967))
(assert (axiom_int_approximation x1969))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x1970))
(assert (axiom_int_approximation x1971))
(assert (axiom_int_approximation x1975))
(assert (axiom_int_approximation x1979))
(assert (axiom_int_approximation x1981))
(assert (axiom_int_approximation x1982))
(assert (axiom_int_approximation x1987))
(assert (axiom_int_approximation x1988))
(assert (axiom_int_approximation x1993))
(assert (axiom_int_approximation x1994))
(assert (axiom_int_approximation x1996))
(assert (axiom_int_approximation x1997))
(assert (axiom_int_approximation x20))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x2000))
(assert (axiom_int_approximation x2001))
(assert (axiom_int_approximation x2002))
(assert (axiom_int_approximation x2008))
(assert (axiom_int_approximation x2009))
(assert (axiom_int_approximation x2013))
(assert (axiom_int_approximation x2018))
(assert (axiom_int_approximation x2020))
(assert (axiom_int_approximation x2022))
(assert (axiom_int_approximation x2030))
(assert (axiom_int_approximation x2031))
(assert (axiom_int_approximation x2034))
(assert (axiom_int_approximation x2035))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x2042))
(assert (axiom_int_approximation x2044))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x2050))
(assert (axiom_int_approximation x2056))
(assert (axiom_int_approximation x2058))
(assert (axiom_int_approximation x2061))
(assert (axiom_int_approximation x2062))
(assert (axiom_int_approximation x2064))
(assert (axiom_int_approximation x2065))
(assert (axiom_int_approximation x2066))
(assert (axiom_int_approximation x2067))
(assert (axiom_int_approximation x2072))
(assert (axiom_int_approximation x2077))
(assert (axiom_int_approximation x2078))
(assert (axiom_int_approximation x2079))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x2080))
(assert (axiom_int_approximation x2081))
(assert (axiom_int_approximation x2082))
(assert (axiom_int_approximation x2083))
(assert (axiom_int_approximation x2087))
(assert (axiom_int_approximation x2093))
(assert (axiom_int_approximation x2101))
(assert (axiom_int_approximation x2103))
(assert (axiom_int_approximation x2104))
(assert (axiom_int_approximation x2106))
(assert (axiom_int_approximation x2107))
(assert (axiom_int_approximation x2108))
(assert (axiom_int_approximation x2110))
(assert (axiom_int_approximation x2113))
(assert (axiom_int_approximation x2114))
(assert (axiom_int_approximation x2115))
(assert (axiom_int_approximation x2118))
(assert (axiom_int_approximation x2119))
(assert (axiom_int_approximation x2122))
(assert (axiom_int_approximation x2123))
(assert (axiom_int_approximation x2125))
(assert (axiom_int_approximation x2130))
(assert (axiom_int_approximation x2134))
(assert (axiom_int_approximation x2137))
(assert (axiom_int_approximation x2141))
(assert (axiom_int_approximation x2142))
(assert (axiom_int_approximation x2143))
(assert (axiom_int_approximation x2147))
(assert (axiom_int_approximation x2148))
(assert (axiom_int_approximation x2149))
(assert (axiom_int_approximation x2154))
(assert (axiom_int_approximation x2155))
(assert (axiom_int_approximation x2156))
(assert (axiom_int_approximation x2159))
(assert (axiom_int_approximation x216))
(assert (axiom_int_approximation x2161))
(assert (axiom_int_approximation x2167))
(assert (axiom_int_approximation x2169))
(assert (axiom_int_approximation x2173))
(assert (axiom_int_approximation x2177))
(assert (axiom_int_approximation x2178))
(assert (axiom_int_approximation x2179))
(assert (axiom_int_approximation x2181))
(assert (axiom_int_approximation x2182))
(assert (axiom_int_approximation x2184))
(assert (axiom_int_approximation x2186))
(assert (axiom_int_approximation x2188))
(assert (axiom_int_approximation x2193))
(assert (axiom_int_approximation x2194))
(assert (axiom_int_approximation x2195))
(assert (axiom_int_approximation x2198))
(assert (axiom_int_approximation x2199))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x2200))
(assert (axiom_int_approximation x2201))
(assert (axiom_int_approximation x2202))
(assert (axiom_int_approximation x2206))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x2210))
(assert (axiom_int_approximation x2211))
(assert (axiom_int_approximation x2219))
(assert (axiom_int_approximation x222))
(assert (axiom_int_approximation x2220))
(assert (axiom_int_approximation x2223))
(assert (axiom_int_approximation x2226))
(assert (axiom_int_approximation x2229))
(assert (axiom_int_approximation x2230))
(assert (axiom_int_approximation x2231))
(assert (axiom_int_approximation x224))
(assert (axiom_int_approximation x2240))
(assert (axiom_int_approximation x2243))
(assert (axiom_int_approximation x2246))
(assert (axiom_int_approximation x2247))
(assert (axiom_int_approximation x2249))
(assert (axiom_int_approximation x2250))
(assert (axiom_int_approximation x2251))
(assert (axiom_int_approximation x2259))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x2264))
(assert (axiom_int_approximation x2265))
(assert (axiom_int_approximation x2268))
(assert (axiom_int_approximation x2276))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x2280))
(assert (axiom_int_approximation x2282))
(assert (axiom_int_approximation x2285))
(assert (axiom_int_approximation x2286))
(assert (axiom_int_approximation x2287))
(assert (axiom_int_approximation x2288))
(assert (axiom_int_approximation x2289))
(assert (axiom_int_approximation x23))
(assert (axiom_int_approximation x233))
(assert (axiom_int_approximation x238))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x247))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x250))
(assert (axiom_int_approximation x251))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x259))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x278))
(assert (axiom_int_approximation x28))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x283))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x288))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x292))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x300))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x305))
(assert (axiom_int_approximation x307))
(assert (axiom_int_approximation x309))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x311))
(assert (axiom_int_approximation x313))
(assert (axiom_int_approximation x315))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x32))
(assert (axiom_int_approximation x321))
(assert (axiom_int_approximation x322))
(assert (axiom_int_approximation x323))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x34))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x342))
(assert (axiom_int_approximation x343))
(assert (axiom_int_approximation x345))
(assert (axiom_int_approximation x349))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x355))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x362))
(assert (axiom_int_approximation x363))
(assert (axiom_int_approximation x365))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x369))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x377))
(assert (axiom_int_approximation x379))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x39))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x398))
(assert (axiom_int_approximation x399))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x404))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x408))
(assert (axiom_int_approximation x409))
(assert (axiom_int_approximation x412))
(assert (axiom_int_approximation x413))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x419))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x420))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x426))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x434))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x436))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x439))
(assert (axiom_int_approximation x440))
(assert (axiom_int_approximation x442))
(assert (axiom_int_approximation x443))
(assert (axiom_int_approximation x444))
(assert (axiom_int_approximation x445))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x449))
(assert (axiom_int_approximation x45))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x47))
(assert (axiom_int_approximation x470))
(assert (axiom_int_approximation x473))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x482))
(assert (axiom_int_approximation x486))
(assert (axiom_int_approximation x488))
(assert (axiom_int_approximation x489))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x50))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x509))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x515))
(assert (axiom_int_approximation x518))
(assert (axiom_int_approximation x520))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x522))
(assert (axiom_int_approximation x523))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x530))
(assert (axiom_int_approximation x531))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x534))
(assert (axiom_int_approximation x539))
(assert (axiom_int_approximation x540))
(assert (axiom_int_approximation x543))
(assert (axiom_int_approximation x544))
(assert (axiom_int_approximation x546))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x549))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x555))
(assert (axiom_int_approximation x557))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x559))
(assert (axiom_int_approximation x562))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x570))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x576))
(assert (axiom_int_approximation x577))
(assert (axiom_int_approximation x580))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x587))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x594))
(assert (axiom_int_approximation x596))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x600))
(assert (axiom_int_approximation x602))
(assert (axiom_int_approximation x603))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x610))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x618))
(assert (axiom_int_approximation x620))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x625))
(assert (axiom_int_approximation x627))
(assert (axiom_int_approximation x628))
(assert (axiom_int_approximation x63))
(assert (axiom_int_approximation x630))
(assert (axiom_int_approximation x632))
(assert (axiom_int_approximation x634))
(assert (axiom_int_approximation x639))
(assert (axiom_int_approximation x64))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x641))
(assert (axiom_int_approximation x642))
(assert (axiom_int_approximation x645))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x647))
(assert (axiom_int_approximation x648))
(assert (axiom_int_approximation x649))
(assert (axiom_int_approximation x650))
(assert (axiom_int_approximation x651))
(assert (axiom_int_approximation x652))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x660))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x673))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x678))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x681))
(assert (axiom_int_approximation x682))
(assert (axiom_int_approximation x683))
(assert (axiom_int_approximation x685))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x701))
(assert (axiom_int_approximation x702))
(assert (axiom_int_approximation x703))
(assert (axiom_int_approximation x705))
(assert (axiom_int_approximation x706))
(assert (axiom_int_approximation x707))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x709))
(assert (axiom_int_approximation x71))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x714))
(assert (axiom_int_approximation x717))
(assert (axiom_int_approximation x718))
(assert (axiom_int_approximation x720))
(assert (axiom_int_approximation x721))
(assert (axiom_int_approximation x723))
(assert (axiom_int_approximation x727))
(assert (axiom_int_approximation x728))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x733))
(assert (axiom_int_approximation x735))
(assert (axiom_int_approximation x737))
(assert (axiom_int_approximation x738))
(assert (axiom_int_approximation x739))
(assert (axiom_int_approximation x74))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x745))
(assert (axiom_int_approximation x753))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x758))
(assert (axiom_int_approximation x769))
(assert (axiom_int_approximation x770))
(assert (axiom_int_approximation x772))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x775))
(assert (axiom_int_approximation x776))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x778))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x782))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x785))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x795))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x799))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x800))
(assert (axiom_int_approximation x801))
(assert (axiom_int_approximation x803))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x813))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x824))
(assert (axiom_int_approximation x833))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x837))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x841))
(assert (axiom_int_approximation x842))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x845))
(assert (axiom_int_approximation x851))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x859))
(assert (axiom_int_approximation x860))
(assert (axiom_int_approximation x861))
(assert (axiom_int_approximation x867))
(assert (axiom_int_approximation x87))
(assert (axiom_int_approximation x873))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x886))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x893))
(assert (axiom_int_approximation x896))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x898))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x900))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x904))
(assert (axiom_int_approximation x909))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x914))
(assert (axiom_int_approximation x916))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x92))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x923))
(assert (axiom_int_approximation x926))
(assert (axiom_int_approximation x93))
(assert (axiom_int_approximation x931))
(assert (axiom_int_approximation x932))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x94))
(assert (axiom_int_approximation x941))
(assert (axiom_int_approximation x948))
(assert (axiom_int_approximation x950))
(assert (axiom_int_approximation x952))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x964))
(assert (axiom_int_approximation x968))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x971))
(assert (axiom_int_approximation x972))
(assert (axiom_int_approximation x974))
(assert (axiom_int_approximation x978))
(assert (axiom_int_approximation x980))
(assert (axiom_int_approximation x981))
(assert (axiom_int_approximation x986))
(assert (axiom_int_approximation x988))
(assert (axiom_int_approximation x990))
(assert (axiom_int_approximation x993))
(assert (axiom_int_approximation x994))
(assert (axiom_int_approximation x999))
(assert (not (= 2743638299 (x1912 x392 3))))
(assert (x1958 x408 x495))
(assert (=> (< (- x845 1) 10000) (not (= x845 (+ 5 x1940)))))
(assert (not (= (x1912 x392 3) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (not (= 1684360437 (+ x1940 5))))
(assert (not (= 18446744073709551616 (+ 1 x355))))
(assert (= (and x588 (not x184)) x458))
(assert (x1436 x2184))
(assert (=> (< (- x64 1) 10000) (not (= x64 (+ x2247 1)))))
(assert (not (= (+ x2247 4) 1000000000000000000)))
(assert (and (= (x1834 10 9) 1000000000) (= (x1834 10 17) 100000000000000000) (= (x1834 10 24) 1000000000000000000000000) (= (x1834 10 13) 10000000000000) (= (x1834 10 25) 10000000000000000000000000) (= (x1834 10 7) 10000000) (= (x1834 10 27) 1000000000000000000000000000) (= 10000000000 (x1834 10 10)) (= 1000000000000000000000 (x1834 10 21)) (= (x1834 10 6) 1000000) (= 1000000000000 (x1834 10 12)) (= (x1834 10 23) 100000000000000000000000) (= 100000000000000000000000000000 (x1834 10 29)) (= (x1834 10 19) 10000000000000000000) (= 100000000000000 (x1834 10 14)) (= 1000000000000000000000000000000 (x1834 10 30)) (= 100000000000000000000 (x1834 10 20)) (= 10000000000000000 (x1834 10 16)) (= 1000000000000000000 (x1834 10 18)) (= (x1834 10 1) 10) (= 100000 (x1834 10 5)) (= (x1834 10 28) 10000000000000000000000000000) (= 100000000 (x1834 10 8)) (= 1000000000000000 (x1834 10 15)) (= (x1834 10 0) 1) (= (x1834 10 26) 100000000000000000000000000) (= (x1834 10 11) 100000000000) (= 1000 (x1834 10 3)) (= 100 (x1834 10 2)) (= 10000 (x1834 10 4)) (= (x1834 10 22) 10000000000000000000000)))
(assert (x1436 x587))
(assert (= (=> (and (= x1993 (x2221 x1126)) (= x557 (x1876 1461501637330902918203684832716283019655932542975 x1993)) (= x1216 (= x557 x1993))) (and (=> (not x1216) x1700) (=> x1216 x2245))) x2144))
(assert (not (= 2743638299 (x1912 x64 2))))
(assert (=> (< (- x392 1) 10000) (not (= (+ 3 x2247) x392))))
(assert (=> (> (+ 10000 1) x1066) (not (= x1066 (x1912 x558 2)))))
(assert (=> (< (- x1677 1) 10000) (not (= x1677 (+ x2247 4)))))
(assert (= x172 (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1236) (and (< x1236 32) (= (<= x1236 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x326) (= (x368 x1387) x1236)) (and (=> x326 x1700) (=> (not x326) x1317)))))
(assert (= (x1601 x28) 10894474682274239493831243662817379401261526446360622092269559273883068006400))
(assert (=> (> (+ 10000 1) x1947) (not (= x1947 (+ 2 x2247)))))
(assert (= (and x655 x885) x504))
(assert (not (= 3 (+ x355 1))))
(assert (= (x1011 x1664) (ite (= x1664 160) x1617 (x1534 x1664))))
(assert (=> (> (+ 10000 1) x558) (not (= x558 (+ 1 x355)))))
(assert (x1958 x2042 x1648))
(assert (= x421 (and (not x2112) x697)))
(assert (x1436 x1706))
(assert (not (= (+ x1940 3) (+ 5 x1940))))
(assert (x1436 x278))
(assert (=> (< (- x558 1) 10000) (not (= (x1912 x392 3) x558))))
(assert (x1436 x931))
(assert (=> (< (- x64 1) 10000) (not (= (x1912 x558 2) x64))))
(assert (x287 x1670))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ x1765 5))))
(assert (=> (> (+ 10000 1) x1843) (not (= (+ 5 x2247) x1843))))
(assert (=> (< (- x1982 1) 10000) (not (= (+ x1940 5) x1982))))
(assert (x1436 x1173))
(assert (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x2047 x1886)))
(assert (x1436 x1652))
(assert (= 0 (x1332 x288)))
(assert (x1436 x476))
(assert (not (= 2540496021 (x1912 x48 3))))
(assert (= (ite (and x504 (not x457) x1175) (x942 x1217) (x1131 x1217)) (x2252 x1217)))
(assert (x1436 x243))
(assert (= (x1064 x566) (ite (= x566 x785) x1449 (x1311 x566))))
(assert (= (and x920 x1578) x328))
(assert (x1047 x240 x1573))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ 2 x1765))))
(assert (not (= (x1912 x48 3) 2743638299)))
(assert (not (= 1684360437 (x1912 x238 2))))
(assert (= (and (not x869) x1541) x1430))
(assert (=> (> (+ 10000 1) x857) (not (= (+ x2247 5) x857))))
(assert (not (= (x1912 x238 2) 31123442917456901051708656246501188623764889836880532624742668034502079545344)))
(assert (not (= 2477345955 (+ x1940 5))))
(assert (= (x1446 x2181) (ite (= x2181 x1165) x914 (x1424 x2181))))
(assert (x1436 x999))
(assert (= (=> (and (not x1203) (= x1880 (x1231 x221)) (= x1975 x921) (= (< 1 x1880) x1203)) x671) x694))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1912 x48 3))))
(assert (x1436 x632))
(assert (x1436 x898))
(assert (x287 x1579))
(assert (x287 x1737))
(assert (not (= (+ 4 x2247) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x951 x681))
(assert (=> (< (- x770 1) 10000) (not (= x770 (+ 3 x2247)))))
(assert (x1436 x718))
(assert (= (x471 x1919) 0))
(assert (not (= (+ 4 x2247) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (= x21 (=> (and (= (ite (< x511 78) 1 0) x1496) (= x131 (ite (> 32 x511) 1 0)) (= x2002 (x1876 x620 x1496)) (= x302 (= (x1250 x2002 x1971) 0)) (= x342 1) (= x1971 (x1876 x342 x131)) (= 1 x620)) (and (=> (and (not x302) (= (x1834 10 x511) x745)) x927) (=> (and (or (and (= x1864 (x593 x511 1)) (not x1871) (= (x1876 1 x511) x1769) (= x442 (ite x145 1 10)) (= 100 x1146) x1455 (= (= 0 x1769) x145) (= (> x1864 1) x1871)) (and (= 10 x1146) (= 1 x442) (not x1455))) x302 (= x1455 (> x511 1))) x2120)))))
(assert (x1436 x1423))
(assert (= 0 (x942 x1217)))
(assert (=> (< (- x1947 1) 10000) (not (= x1947 (x1912 x392 3)))))
(assert (x1436 x2000))
(assert (x1436 x432))
(assert (x1958 x4 x1839))
(assert (x1436 x400))
(assert (x1436 x2082))
(assert (x1436 x1228))
(assert (=> (< (- x1702 1) 10000) (not (= x1702 (+ x2247 1)))))
(assert (= (=> (= (= x1665 0) x2209) (and (=> (not x2209) x2095) (=> x2209 x1700))) x1821))
(assert (=> (> (+ 10000 1) x1033) (not (= (x1912 x238 2) x1033))))
(assert (not (= (+ x1765 2) 18446744073709551616)))
(assert (not (= (+ 1 x433) 274184521717934524641157099916833587206)))
(assert (x1436 x265))
(assert (= x1544 (or (and x1954 x1995) (and x791 x1437))))
(assert (not (= 3 (x1912 x558 2))))
(assert (x1436 x1916))
(assert (= (ite (= 160 x129) x1617 (x1534 x129)) (x1011 x129)))
(assert (not (= (x1912 x64 2) 1461501637330902918203684832716283019655932542976)))
(assert (x1436 x1148))
(assert (= 0 (x1178 (- x896 x505))))
(assert (=> (> (+ 10000 1) x1033) (not (= (+ 1 x433) x1033))))
(assert (= (=> (and (= (x1998 (+ x612 x1893)) x1742) (= x1102 (x1998 (+ 31 x1597))) (= x1743 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1597) (and (= true (<= x1597 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1597)))) (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1102) x1893)) (and (=> (not x1743) x18) (=> x1743 x1700))) x299))
(assert (x1436 x241))
(assert (x1436 x1935))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ x2247 2))))
(assert (= 0 (x567 x1575)))
(assert (x1436 x876))
(assert (x287 x1750))
(assert (= (and x458 x1883) x516))
(assert (not (= (x2168 1) (+ 1 x355))))
(assert (not (= (x1912 x238 2) (+ 3 x1940))))
(assert (=> (> (+ 10000 1) x1066) (not (= x1066 (+ x433 1)))))
(assert (= x1709 (=> (and (<= 0 x845) (< x845 1461501637330902918203684832716283019655932542976) (= (x2176 x34) x845) (= (= 0 x1318) x829) (= (x1284 x845) x1318) (>= 1461501637330902918203684832716283019655932542975 x845)) (and (=> x829 x1700) (=> (and (or (and (< x974 4294967296) (= (= (x946 x845) x1616) x2152) (= x1616 (x719 x845)) (= x788 (>= (x946 274184521717934524641157099916833587231) x723)) x2152 x591 x788 (= (x719 274184521717934524641157099916833587231) x723)) (not x591)) (= (< 0 x1558) x591) (not x829)) x151)))))
(assert (=> (> (+ 10000 1) x369) (not (= (+ x2247 3) x369))))
(assert (= x605 (=> (and (= x1961 (x506 x2229)) (= x1954 (ite (= x1961 0) (= 0 x1961) (= x523 0)))) (and (=> (and x1954 (= 0 x813)) x183) (=> (not x1954) x193)))))
(assert (x1436 x2143))
(assert (=> (< (- x91 1) 10000) (not (= x91 (+ x1765 5)))))
(assert (=> (< (- x91 1) 10000) (not (= x91 (+ x2247 4)))))
(assert (not (= (+ x1765 2) 2477345955)))
(assert (= x588 (and x1517 (not x2235))))
(assert (x1436 x2009))
(assert (= (ite (and (not x1094) x1186) (ite (and x943 (not x827) x213) (x581 274184521717934524641157099916833587231) (x1069 274184521717934524641157099916833587231)) (x1069 274184521717934524641157099916833587231)) (x269 274184521717934524641157099916833587231)))
(assert (not (= (+ x1940 3) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (x1436 x1744))
(assert (not (= 274184521717934524641157099916833587206 (x1912 x48 3))))
(assert (x287 x703))
(assert (not (= 1000000000000000000 (+ x1940 3))))
(assert (=> (> (+ 10000 1) x238) (not (= x238 (+ 2 x2247)))))
(assert (=> (> (+ 10000 1) x91) (not (= x91 (+ x433 1)))))
(assert (= (x471 x1707) 0))
(assert (=> (< (- x91 1) 10000) (not (= x91 (x1912 x64 2)))))
(assert (= (and x431 (not x1371)) x90))
(assert (x1436 x1102))
(assert (=> (> (+ 10000 1) x1104) (not (= (+ x2247 2) x1104))))
(assert (=> (> (+ 10000 1) x1425) (not (= x1425 (x2168 1)))))
(assert (not (= (+ x2247 5) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 18446744073709551616 (x1912 x392 3))))
(assert (x287 x1993))
(assert (not (= 2743638299 (x1912 x238 2))))
(assert (= (=> (and (= x1877 x2156) (= x406 x813)) x1083) x183))
(assert (x1958 x840 x2122))
(assert (x1436 x1889))
(assert (not (= (+ 4 x2247) 18446744073709551615)))
(assert (not (= (x1912 x392 3) (x1912 x558 2))))
(assert (not (= 18446744073709551616 (x1912 x64 2))))
(assert (x287 x1952))
(assert (x1436 x932))
(assert (x1436 x440))
(assert (=> (< (- x200 1) 10000) (not (= (+ 2 x2247) x200))))
(assert (=> (> (+ 10000 1) x1993) (not (= (+ 2 x681) x1993))))
(assert (x1436 x1982))
(assert (=> (< (- x1104 1) 10000) (not (= x1104 (+ 1 x355)))))
(assert (x1436 x165))
(assert (= x2163 (=> (and (= x476 (ite (< x2108 x1023) 1 0)) (= (= 0 x2009) x669) (= x1334 (= 0 x625)) (= x1477 (ite (not x1334) 1 0)) (= x2108 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625))) (= (x1876 x1477 x476) x2009)) (and (=> x669 x1559) (=> (not x669) x1700)))))
(assert (not (= (x2168 1) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (x1436 x47))
(assert (=> (> (+ 10000 1) x770) (not (= (+ x1765 5) x770))))
(assert (=> (< (- x1916 1) 10000) (not (= x1916 (+ 2 x1765)))))
(assert (not (= 1684360437 (+ 2 x433))))
(assert (not (= (x1912 x558 2) 274184521717934524641157099916833587231)))
(assert (x1436 x305))
(assert (=> (> (+ 10000 1) x1104) (not (= (+ 5 x2247) x1104))))
(assert (x1436 x251))
(assert (x1047 x2077 x412))
(assert (= (x698 x1387) 0))
(assert (=> (> (+ 10000 1) x1066) (not (= x1066 (+ 5 x2247)))))
(assert (x1436 x1205))
(assert (x1436 x2018))
(assert (x1436 x1893))
(assert (x1436 x449))
(assert (=> (> (+ 10000 1) x1111) (not (= x1111 (x1912 x64 2)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1912 x558 2))))
(assert (=> (< (- x64 1) 10000) (not (= (+ x1765 5) x64))))
(assert (=> (< (- x735 1) 10000) (not (= x735 (+ x433 1)))))
(assert (= x1253 (=> (and (= x2240 x1742) (= x1908 x1706)) x478)))
(assert (not (= (+ 2 x433) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= 1000000000000000000 (+ 2 x681))))
(assert (x1436 x772))
(assert (not (= (+ 1 x355) 1684360437)))
(assert (x287 x131))
(assert (x1436 x2101))
(assert (x951 x1947))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1912 x48 3))))
(assert (=> (> (+ 10000 1) x1066) (not (= (x1912 x48 3) x1066))))
(assert (x1436 x1392))
(assert (= x949 (and x571 x60)))
(assert (x1436 x563))
(assert (not (= (+ 1 x2247) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (not (= (+ x433 1) 274184521717934524641157099916833587202)))
(assert (=> (= (x1912 x64 2) (x1912 x238 2)) (= x64 x238)))
(assert (x287 x1292))
(assert (x1436 x1485))
(assert (=> (< (- x1033 1) 10000) (not (= (x1912 x64 2) x1033))))
(assert (x1436 x205))
(assert (not (= (+ 2 x2247) (+ x2247 5))))
(assert (not (= (+ x355 1) 274184521717934524641157099916833587206)))
(assert (not (= (+ 1 x433) 274184521717934524641157099916833587231)))
(assert (= x282 (and x1980 (not x120))))
(assert (x1436 x1141))
(assert (=> (> (+ 10000 1) x735) (not (= x735 (x1912 x64 2)))))
(assert (x1436 x1362))
(assert (x1436 x116))
(assert (x1436 x1215))
(assert (=> (< (- x2022 1) 10000) (not (= (+ 1 x2247) x2022))))
(assert (=> (> (+ 10000 1) x1982) (not (= (x2168 1) x1982))))
(assert (=> (> (+ 10000 1) x1947) (not (= x1947 (+ 3 x1940)))))
(assert (x1436 x1650))
(assert (not (= (+ x1940 5) 18446744073709551615)))
(assert (x1697 x1833 x1129 x1554 x886))
(assert (x1436 x795))
(assert (=> (< (- x1536 1) 10000) (not (= (x2168 1) x1536))))
(assert (= 0 (x1489 x291)))
(assert (= (and x2070 x1324) x1549))
(assert (= (x2060 x1938) (ite (and x1553 (not x1956) x2157) (x2 x1938) (x40 x1938))))
(assert (not (= (+ 4 x2247) 274184521717934524641157099916833587206)))
(assert (=> (> (+ 10000 1) x1428) (not (= x1428 (x1912 x48 3)))))
(assert (x951 x857))
(assert (=> (< (- x1566 1) 10000) (not (= x1566 (x1912 x64 2)))))
(assert (x1436 x1130))
(assert (not (= (x1912 x558 2) (+ x681 2))))
(assert (= x1122 (=> (and (= (x1231 128) x1182) (= (< 0 x1182) x1872)) (and (=> x1872 x393) (=> (and (= x1034 x1312) (not x1872)) x1352)))))
(assert (not (= (+ 3 x1940) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1436 x1952))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ 2 x681))))
(assert (= (=> (and (= x2113 (x1876 1461501637330902918203684832716283019655932542975 x1611)) (= x33 (= x2113 x1611)) (= x1750 x2066)) (and (=> (not x33) x1700) (=> x33 x1060))) x1006))
(assert (x1436 x311))
(assert (=> (< (- x857 1) 10000) (not (= (x1912 x392 3) x857))))
(assert (=> (> (+ 10000 1) x2022) (not (= x2022 (+ 4 x2247)))))
(assert (=> (< (- x1428 1) 10000) (not (= x1428 (+ x433 1)))))
(assert (x1436 x2083))
(assert (x287 x87))
(assert (=> (< (- x1982 1) 10000) (not (= x1982 (+ x2247 4)))))
(assert (= (and x729 x1431) x7))
(assert (x1436 x2199))
(assert (x951 x1566))
(assert (x1436 x582))
(assert (= (x471 x482) 0))
(assert (x1436 x1837))
(assert (x1436 x134))
(assert (x1436 x470))
(assert (x1436 x1029))
(assert (= x609 (and x211 (not x1760))))
(assert (=> (< (- x1982 1) 10000) (not (= (x1912 x392 3) x1982))))
(assert (not (= (+ x2247 2) (+ 3 x1940))))
(assert (=> (< (- x1428 1) 10000) (not (= x1428 (+ 2 x1765)))))
(assert (not (= (+ x2247 1) 2)))
(assert (not (= (+ x2247 3) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= x1242 (and x881 (not x1992))))
(assert (not (= (+ x433 1) (+ 5 x1765))))
(assert (not (= (+ x433 1) (+ x2247 5))))
(assert (x1436 x952))
(assert (x1436 x1600))
(assert (x287 x38))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ x355 1))))
(assert (not (= (+ x2247 2) (+ 1 x2247))))
(assert (=> (> (+ 10000 1) x1425) (not (= (x1912 x238 2) x1425))))
(assert (=> (> (+ 10000 1) x1916) (not (= (x1912 x238 2) x1916))))
(assert (= (=> (and (= x542 (> x1574 0)) (= x1574 (x696 x1975)) (= x568 (x1998 (+ x310 x406)))) (and (=> (not x542) x1700) (=> (and (= x1877 x2287) x542 (= (x1998 (+ x1975 32)) x395)) x450))) x962))
(assert (=> (< (- x1916 1) 10000) (not (= x1916 (+ 3 x1940)))))
(assert (= (or (and x1246 x820) (and (not x1872) x2128)) x2055))
(assert (x1958 x1564 x469))
(assert (=> (< (- x20 1) 10000) (not (= x20 (+ 1 x355)))))
(assert (= 0 (x1115 x2101)))
(assert (x1436 x656))
(assert (not (= (+ 5 x1940) 1)))
(assert (=> (> (+ 10000 1) x558) (not (= (+ 3 x1940) x558))))
(assert (= x1734 (=> (and (= (x1998 (+ 31 x773)) x366) (= x2036 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x773) (and (> 32 x773) (= true (<= x773 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x1998 (+ x1126 x367)) x916) (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x366) x367)) (and (=> (not x2036) x2144) (=> x2036 x1700)))))
(assert (= (x780 x575) 0))
(assert (x1436 x1812))
(assert (x1436 x1304))
(assert (not (= (+ 5 x1940) 31123442917456901051708656246501188623764889836880532624742668034502079545344)))
(assert (not (= (+ x681 2) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= 2540496021 (+ x1765 5))))
(assert (x1436 x301))
(assert (=> (> (+ 10000 1) x1536) (not (= (+ 5 x2247) x1536))))
(assert (= (=> (and (= (x1008 x1485) x332) (= x1421 (> x332 0))) (and (=> x1421 x514) (=> (not x1421) x1700))) x1463))
(assert (= (and x2086 x2085) x1875))
(assert (not (= (+ 3 x1940) 4294967296)))
(assert (=> (> (+ 10000 1) x1843) (not (= x1843 (+ x433 1)))))
(assert (x1436 x1234))
(assert (x1436 x1465))
(assert (x287 x352))
(assert (x1436 x1500))
(assert (x1436 x703))
(assert (x1436 x1188))
(assert (x1436 x1730))
(assert (= x35 (and x192 x496)))
(assert (= x2021 (and x1227 x2023)))
(assert (=> (< (- x558 1) 10000) (not (= x558 (x1912 x64 2)))))
(assert (= (=> (and (= x2207 (> x680 18446744073709551615)) (= x680 (x1231 128))) (and (=> (and (not x2207) (= (x1998 (+ x933 x1009)) x251) (= (uninterp_mod (* 32 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x837) (= x1675 (= 0 x680)) (= x933 (x1998 (+ 32 x837))) (or (and x1675 (= x251 x1034)) (and (= x1532 (x453 (- x680 1))) (= (x1998 (+ 64 x1661)) x706) (not x1675) (= x1661 (x1998 (+ 64 x251))) (= (x1998 (+ 192 x251)) x1533) (= (x1998 (+ 64 x113)) x177) (= x1347 (> x1532 0)) (= x113 (x1998 (+ 64 x1603))) (or (and (= (x1998 (+ 64 x720)) x163) (= x1152 (x1998 (+ x1533 64))) (= (x1998 (+ x251 384)) x707) (= (x453 (- x1532 1)) x596) (= (< 0 x596) x1156) (= (x1998 (+ 64 x399)) x720) x1347 (= x1909 x707) (not x1156) (= x1775 (x1998 (+ 64 x1152))) (= x399 (x1998 (+ 224 x251)))) (and (not x1347) (= x1909 x1533))) (= (x1998 (+ 64 x1009)) x349) (= x1034 x1909) (= x1219 (x1998 (+ x2114 160))) (= x1603 (x1998 (+ x251 32)))))) x1122) (=> x2207 x1700))) x249))
(assert (=> (< (- x735 1) 10000) (not (= x735 (+ x1940 5)))))
(assert (=> (> (+ 10000 1) x845) (not (= (+ 3 x1940) x845))))
(assert (=> (< (- x1702 1) 10000) (not (= (+ x2247 4) x1702))))
(assert (=> (> (+ 10000 1) x20) (not (= (+ 5 x2247) x20))))
(assert (not (= (+ 5 x2247) (+ 4 x2247))))
(assert (not (= (x1912 x238 2) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (x287 x23))
(assert (not (= (+ x1940 3) (x1912 x48 3))))
(assert (x1436 x1023))
(assert (=> (< (- x1677 1) 10000) (not (= (x1912 x64 2) x1677))))
(assert (not (= 1 (x1912 x558 2))))
(assert (not (= (+ x681 2) (x2168 1))))
(assert (not (= (+ 3 x1940) (x1912 x64 2))))
(assert (x1436 x1411))
(assert (x1436 x1533))
(assert (not (= 18446744073709551615 (+ x433 2))))
(assert (x1436 x97))
(assert (= (=> (and (= (x1998 (+ 64 x463)) x1635) (= (x1998 (+ x1034 32)) x1766) (= x1218 (x1836 160)) (= x2247 (x1912 x558 2)) (>= x727 0) (= x1685 (x2176 x1814)) (>= 1461501637330902918203684832716283019655932542975 x709) (= (x1998 (+ 64 x1034)) x463) (= x1814 (+ x2247 2)) (< x727 1461501637330902918203684832716283019655932542976) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1903) (<= 0 x709) (= (x508 x2142) x1773) (= x565 (x1998 (+ x1766 64))) (<= 0 x437) (= x820 (> x158 0)) (= x1738 (+ x1814 2)) (>= 1461501637330902918203684832716283019655932542975 x1685) (<= x727 1461501637330902918203684832716283019655932542975) (= x2154 (x1998 (+ 192 x1034))) (>= x1773 0) (= (x1394 x1738) x437) (<= 0 x1903) (< x709 1461501637330902918203684832716283019655932542976) (= (x1692 x1791) x727) (= (x1876 1461501637330902918203684832716283019655932542975 x1218) x558) (= x1729 (+ x2142 2)) (< x1685 1461501637330902918203684832716283019655932542976) (= x1791 (+ 1 x2247)) (= x562 (x1998 (+ 64 x565))) (= x1903 (x1783 x1729)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x437) (= (x52 x1009) x158) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1773) (<= 0 x1685) (= (x446 x2247) x709) (= x2142 (+ 2 x1791))) (and (=> (and (not x2029) x820 (= (x1998 (+ x2114 160)) x139) (= x1312 x2154) (= (< 1 x649) x2029) (= x649 (x1231 128))) x1352) (=> (not x820) x1700))) x1003))
(assert (x1436 x1103))
(assert (x287 x758))
(assert (x1436 x1947))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ 1 x2247))))
(assert (x1436 x2226))
(assert (x1436 x1206))
(assert (= x1747 (=> (and (>= x2031 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2031) (= x2031 (x1247 x1124)) (= x635 (> x1461 x2031))) (and (=> x635 x1700) (=> (and (= x1461 x738) (= (x453 (- x2031 x1461)) x1590) (not x635)) x1525)))))
(assert (= (=> (= x877 (= x610 0)) (and (=> x877 x1700) (=> (not x877) x1734))) x1487))
(assert (= (and x1827 (not x2006)) x1960))
(assert (not (= (+ x433 1) (+ 4 x2247))))
(assert (not (= (+ x2247 4) 2442716437)))
(assert (= x1164 (and (not x1792) x371)))
(assert (=> (< (- x845 1) 10000) (not (= x845 (x1912 x238 2)))))
(assert (x1436 x443))
(assert (= (and x1645 x2174) x1609))
(assert (x1436 x1491))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ 5 x1940))))
(assert (x1436 x1313))
(assert (= (and x255 x1514) x1694))
(assert (= (and (not x179) x1771) x638))
(assert (=> (> (+ 10000 1) x857) (not (= (+ 1 x433) x857))))
(assert (x1436 x1184))
(assert (not (= (+ 5 x1940) 1461501637330902918203684832716283019655932542976)))
(assert (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1931 x2229)))
(assert (x1436 x363))
(assert (not (= (+ x1765 5) 1745775925341846069737700012427326409042627966635005077806405090422919528448)))
(assert (x951 x558))
(assert (x1436 x1606))
(assert (=> (> (+ 10000 1) x932) (not (= x932 (+ x2247 4)))))
(assert (=> (< (- x369 1) 10000) (not (= x369 (+ 4 x2247)))))
(assert (=> (< (- x1033 1) 10000) (not (= x1033 (+ x681 2)))))
(assert (= (x1921 x688) (ite (and x2133 x1675 (not x2207)) (x677 x688) (ite (and x2133 (not x1675) (not x2207) (not x1347)) (x804 x688) (x984 x688)))))
(assert (=> (> (+ 10000 1) x48) (not (= (+ 2 x2247) x48))))
(assert (= x2254 (and x1418 (not x2046))))
(assert (not (= (+ x433 2) (x1912 x238 2))))
(assert (=> (< (- x238 1) 10000) (not (= x238 (+ 1 x355)))))
(assert (not (= (x1912 x48 3) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= (+ x2247 2) 2442716437)))
(assert (=> (< (- x1104 1) 10000) (not (= (x1912 x48 3) x1104))))
(assert (x1436 x2119))
(assert (not (= (+ x433 2) 1745775925341846069737700012427326409042627966635005077806405090422919528448)))
(assert (not (= (+ 5 x2247) 274184521717934524641157099916833587231)))
(assert (not (= (+ x433 2) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (x1436 x2251))
(assert (=> (> (+ 10000 1) x200) (not (= (x1912 x64 2) x200))))
(assert (not (= (+ x1765 2) 1684360437)))
(assert (= (and x1291 x1361) x1451))
(assert (=> (< (- x200 1) 10000) (not (= (+ 1 x355) x200))))
(assert (=> (< (- x1947 1) 10000) (not (= (+ x2247 4) x1947))))
(assert (=> (> (+ 10000 1) x1993) (not (= x1993 (+ 5 x2247)))))
(assert (not (= (+ 2 x1765) 2540496021)))
(assert (=> (> (+ 10000 1) x1566) (not (= x1566 (+ x2247 4)))))
(assert (= (=> (and (= x294 (x52 x1919)) (= x1919 (x1079 x656)) (= x1403 (> x294 0)) (= (x1123 x566) x289)) (and (=> (not x1403) x1700) (=> x1403 x2213))) x1608))
(assert (=> (< (- x48 1) 10000) (not (= (x1912 x64 2) x48))))
(assert (not (= 1745775925341846069737700012427326409042627966635005077806405090422919528448 (x1912 x558 2))))
(assert (x1436 x964))
(assert (= 0 (x1534 x186)))
(assert (= (x748 x2188) (ite (and (not x2207) x2133 x1675) (x780 x2188) (ite (and x2133 (not x1675) (not x1347) (not x2207)) (x2025 x2188) (x374 x2188)))))
(assert (x1436 x2064))
(assert (not (= (+ x433 2) (x1912 x48 3))))
(assert (x1436 x708))
(assert (x1436 x1510))
(assert (x287 x1249))
(assert (not (= 2 (x2168 1))))
(assert (not (= (+ x1940 3) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= (x2168 1) (+ 1 x2247))))
(assert (=> (> (+ 10000 1) x1947) (not (= (+ 3 x2247) x1947))))
(assert (x1436 x402))
(assert (=> (> (+ 10000 1) x1982) (not (= (+ x355 1) x1982))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ 3 x1940))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ 2 x2247))))
(assert (= 0 (x1489 x733)))
(assert (not (= (+ x2247 3) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (= (=> (and (= x175 (= x1328 x1852)) (= x1852 (x418 x486)) (= (x1241 x1312) x1429) (= (x1303 x2001) x291) (= x1328 (x1231 x291)) (= (x965 x204) x2210)) (and (=> (not x175) x1700) (=> x175 x390))) x1923))
(assert (= x2291 (and (not x1351) x56)))
(assert (=> (< (- x1947 1) 10000) (not (= (+ x433 1) x1947))))
(assert (=> (> (+ 10000 1) x369) (not (= (+ x2247 1) x369))))
(assert (=> (> (+ 10000 1) x1843) (not (= (x1912 x238 2) x1843))))
(assert (= (=> (and (= (x1284 274184521717934524641157099916833587231) x1612) (> x1612 0) (= (= x1369 0) x2086)) (and (=> (not x2086) x1700) (=> x2086 x1091))) x484))
(assert (not (= 2442716437 (+ 5 x2247))))
(assert (x951 x2247))
(assert (x1436 x220))
(assert (x951 x369))
(assert (= x1870 (and x586 (not x1693))))
(assert (x287 x2122))
(assert (not (= (+ 3 x1940) (+ 5 x1765))))
(assert (not (= (+ x2247 1) 18446744073709551615)))
(assert (= x756 (=> (and (= (x453 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)) x1029) (= (x453 (- x948 x1806)) x1432) (= x1379 (< x1029 x664))) (and (=> (not x1379) x1777) (=> x1379 x1700)))))
(assert (x1436 x233))
(assert (not (= (+ 1 x433) (+ x681 2))))
(assert (= (=> (and (= (x1876 1461501637330902918203684832716283019655932542975 x1535) x1663) (= x1038 (= 0 x1306)) (= x1274 (x1998 (+ 32 x221))) (= (x1836 x1274) x1535) (= (x1284 x1993) x1306) (= (x1998 (+ x112 4)) x241)) (and (=> (and (or (and (not x716) (= x2285 x1362)) (and (= 1 x1362) x716 (> 4294967296 x2118))) (= (> x2285 0) x716) (not x1038)) x574) (=> x1038 x1700))) x1934))
(assert (x1436 x327))
(assert (x1436 x1524))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ x1765 2))))
(assert (=> (> (+ 10000 1) x735) (not (= (+ x355 1) x735))))
(assert (x1436 x117))
(assert (x1436 x540))
(assert (x1436 x2062))
(assert (= (=> (and (= (x1303 x2001) x258) (= (> x1652 1) x529) (= x1652 (x1231 x258)) (not x529) (= x2287 x486)) x1107) x450))
(assert (not (= 4294967296 (+ x1940 5))))
(assert (= (=> (and (= 274184521717934524641157099916833587231 x590) (= (x453 (- x327 x205)) x876) (= (x1998 (+ 36 x205)) x491) (= x280 0) (= (x1876 1461501637330902918203684832716283019655932542975 x900) x91) (= x1475 (< 0 x339)) (= x339 (x1284 x91)) (= x92 (x1396 x2195)) (= x2286 (x1998 (+ x1130 16156842317565293874272834530371880720966471053262404558597773956279093428224))) (= x1130 (x1876 26959946667150639794667015087019630673637144422540572481103610249215 x2081)) (= (x1998 (+ x205 32)) x321) (= x327 (x1998 (+ x205 132))) (= x598 (x1998 (+ 64 x491))) (= (x1998 (+ x205 68)) x1103) (= (x1998 (+ x491 160)) x577) (= (x761 x321) x2081) (= (x453 (- x876 32)) x532)) (and (=> (not x1475) x1700) (=> (and (= x794 (x1953 x205)) (or (and (= x338 (x101 x413)) x1276 (= x577 x298) (= x321 x413) (or (and (= 32 x2199) (not x989)) (and (= (x101 x1726) x1849) x989 (or (and (not x1858) (= x2199 64)) (and x1858 (or (and (= x2115 (x1998 (+ x327 160))) (= (< 128 x794) x1160) x98 (= (x101 x2082) x440) (not x1160) (= x2199 128) (= x2082 (x1998 (+ x205 128)))) (and (not x98) (= 96 x2199))) (= (x1998 (+ x327 128)) x1472) (= x2280 (x1998 (+ 96 x205))) (= (x101 x2280) x739) (= (> x794 96) x98))) (= x2243 (x1998 (+ 96 x327))) (= x1726 (x1998 (+ x205 64))) (= (> x794 64) x1858))) (= (> x794 32) x989)) (and (= 0 x2199) (not x1276))) (= (< x794 x2199) x1569) (= (and (<= 0 x2143) (< x547 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1785) x1475 (= (= 0 x600) x637) (= x547 (x269 x91)) (= (< 0 x794) x1276) (or (and x995 x1339 (= x1540 (x269 274184521717934524641157099916833587231)) (= (< (x1551 274184521717934524641157099916833587231) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1339) (= (x2049 x91) x898) (= (x606 x91) x737) (= (> x305 0) x1266) (or (not x1266) (and (= x216 (x560 274184521717934524641157099916833587231)) (= x976 (>= (x2059 274184521717934524641157099916833587231) x216)) (= x776 (x560 x91)) (= x743 (= (x2059 x91) x776)) x743 (< x805 4294967296) x976 x1266)) (= x995 (< (x2049 x91) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x805 x600) x1785 (= x305 x627) (= (x1551 274184521717934524641157099916833587231) x2249)) (and (not x1785) (= x600 0) (= 0 x627))) (or (and x637 (= x1387 96) (= x577 x1206)) (and (= x818 x1206) (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1833) x1807) (= x818 (x1998 (+ x1807 x577))) (= (x1998 (+ 96 x327)) x505) (not x637) (= x1387 x577) (= (x1998 (+ 63 x600)) x1833))) (= x2143 (x269 274184521717934524641157099916833587231)) (or (not x1569) (and x1569 (= (x1998 (+ x577 x794)) x582)))) x2043))) x536))
(assert (x1436 x444))
(assert (not (= (+ 5 x2247) 31123442917456901051708656246501188623764889836880532624742668034502079545344)))
(assert (= x501 (=> (and (= x775 (x1358 x854)) (= x527 (= 0 x775))) (and (=> (not x527) x1700) (=> x527 x452)))))
(assert (not (= (x1912 x48 3) 4294967296)))
(assert (x1436 x1924))
(assert (x1436 x216))
(assert (=> (> (+ 10000 1) x932) (not (= (x2168 1) x932))))
(assert (x1436 x2130))
(assert (= x1149 (=> (and (= (x1231 x522) x96) (= x515 x436) (not x2057) (= x2057 (< 1 x96))) x1177)))
(assert (=> (> (+ 10000 1) x48) (not (= (+ x681 2) x48))))
(assert (=> (> (+ 10000 1) x48) (not (= (+ x2247 1) x48))))
(assert (not (= 31123442917456901051708656246501188623764889836880532624742668034502079545344 (+ 3 x1940))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ x1940 5))))
(assert (x1436 x547))
(assert (= x2145 (=> (and (= x2237 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2118)) (> 32 x2118)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2118))) (= (x1998 (+ x112 x2058)) x576) (= x2058 (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x521)) (= x521 (x1998 (+ 31 x2118)))) (and (=> x2237 x1700) (=> (not x2237) x1795)))))
(assert (= x1204 (and x49 x564)))
(assert (x1436 x740))
(assert (x1436 x1626))
(assert (not (= (+ 5 x1940) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (> (+ 10000 1) x1947) (not (= x1947 (x1912 x64 2)))))
(assert (= (ite (= x436 x824) x1606 (x1434 x436)) (x2131 x436)))
(assert (not (= (+ x1940 3) 274184521717934524641157099916833587231)))
(assert (not (= 18446744073709551615 (x1912 x238 2))))
(assert (x287 x1848))
(assert (= (and x700 (not x1518)) x573))
(assert (= x774 (and (not x1828) x273)))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 1 x355))))
(assert (= (ite (= x2101 x113) 0 (x1115 x2101)) (x2127 x2101)))
(assert (x1697 x1102 x621 x1865 x445))
(assert (=> (> (+ 10000 1) x20) (not (= x20 (+ x433 2)))))
(assert (not (= (+ x433 2) (+ x1940 5))))
(assert (not (= (+ 1 x2247) 4294967296)))
(assert (=> (< (- x1033 1) 10000) (not (= x1033 (+ 1 x355)))))
(assert (= (x461 x2194) (ite (and x1082 x41 (not x1105)) (x1353 x2194) (x242 x2194))))
(assert (not (= (+ x681 2) 2540496021)))
(assert (=> (> (+ 10000 1) x91) (not (= (+ 1 x355) x91))))
(assert (=> (< (- x857 1) 10000) (not (= x857 (x1912 x238 2)))))
(assert (x1436 x1848))
(assert (=> (> (+ 10000 1) x1702) (not (= (+ x2247 5) x1702))))
(assert (=> (< (- x91 1) 10000) (not (= x91 (x2168 1)))))
(assert (x1436 x1755))
(assert (= x107 (and x834 x1238)))
(assert (not (= (+ x2247 1) 1)))
(assert (= (and x766 (not x613)) x1511))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (+ x355 1))))
(assert (= (and x244 x1509) x199))
(assert (not (= (x1912 x392 3) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x287 x39))
(assert (= x1813 (and (not x1583) x1464)))
(assert (not (= (+ 2 x681) 2477345955)))
(assert (x1436 x474))
(assert (not (= (+ 1 x433) 2477345955)))
(assert (not (= (x1912 x392 3) (+ 2 x681))))
(assert (x1436 x1726))
(assert (=> (< (- x20 1) 10000) (not (= (x1912 x558 2) x20))))
(assert (x1436 x577))
(assert (x1436 x1056))
(assert (x1436 x160))
(assert (x1436 x917))
(assert (x287 x1624))
(assert (= x1757 (=> (and (= x1693 (> x1461 x1896)) (= x1896 (x453 (- x105 x92)))) (and (=> x1693 x1700) (=> (not x1693) x1709)))))
(assert (not (= 274184521717934524641157099916833587202 (+ x681 2))))
(assert (x1436 x1348))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ x1940 5))))
(assert (=> (> (+ 10000 1) x1843) (not (= (x1912 x392 3) x1843))))
(assert (x951 x20))
(assert (x1436 x634))
(assert (x951 x1677))
(assert (x1697 x1292 x978 x313 x778))
(assert (= (and x85 x1680) x2174))
(assert (=> (< (- x816 1) 10000) (not (= (+ x2247 4) x816))))
(assert (= (or (and x403 (not x1120)) x1314) x661))
(assert (not (= (x2168 1) (+ 2 x2247))))
(assert (not (= 2477345955 (x1912 x392 3))))
(assert (x1436 x1566))
(assert (= (and x7 (not x1331)) x1464))
(assert (not (= 2 (+ 4 x2247))))
(assert (x1047 x1611 x382))
(assert (=> (> (+ 10000 1) x857) (not (= (x1912 x64 2) x857))))
(assert (not (= (+ 1 x355) 2442716437)))
(assert (not (= (x1912 x64 2) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (=> (< (- x200 1) 10000) (not (= (+ x2247 5) x200))))
(assert (x1436 x150))
(assert (x951 x355))
(assert (not (= (x2168 1) (x1912 x64 2))))
(assert (x1436 x2229))
(assert (x1436 x833))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ 2 x433))))
(assert (x1697 x602 x2106 x526 x685))
(assert (= x1822 (=> (and (= (< 0 x400) x564) (= x400 (x1008 x1485))) (and (=> x564 x1984) (=> (not x564) x1700)))))
(assert (not (= (+ x433 2) (+ x2247 1))))
(assert (not (= (+ x2247 1) (x1912 x48 3))))
(assert (=> (< (- x1111 1) 10000) (not (= x1111 (x1912 x558 2)))))
(assert (= (x677 x710) 0))
(assert (x1436 x395))
(assert (=> (< (- x1843 1) 10000) (not (= (+ 3 x1940) x1843))))
(assert (x1047 x122 x1683))
(assert (x1436 x1618))
(assert (= x1758 (and x2071 x1802)))
(assert (x1436 x20))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ 1 x2247))))
(assert (x1436 x1857))
(assert (x287 255))
(assert (= (=> (and (= x1066 (x1876 1461501637330902918203684832716283019655932542975 x47)) (= x1826 (x1284 x1066)) (= x1283 (= 0 x1826)) (= (x1263 x1837) x47) (= (x1998 (+ x1604 x640)) x1023)) (and (=> x1283 x1700) (=> (and (or (and (not x1443) (= x2103 x702)) (and (> 4294967296 x1597) (= 1 x2103) x1443)) (= x1443 (< 0 x702)) (not x1283)) x1308))) x1585))
(assert (not (= (+ x2247 3) 3)))
(assert (x1436 x1685))
(assert (not (= (x1912 x48 3) 274184521717934524641157099916833587231)))
(assert (not (= (+ 2 x2247) 1745775925341846069737700012427326409042627966635005077806405090422919528448)))
(assert (x287 x343))
(assert (not (= (+ x433 1) (+ 3 x2247))))
(assert (= x1091 (=> (and (= (x453 (- x1043 4)) x1863) (= (or (and (< x1863 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1863))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1863)) x2004) (not (= 2442716437 x443)) (not (> 2442716437 x443)) (not (< x1043 4)) (= 2540496021 x443) (not (= 2477345955 x443)) (not (> 1684360437 x443)) (> 2743638299 x443)) (and (=> x2004 x1700) (=> (not x2004) x58)))))
(assert (not (= 31123442917456901051708656246501188623764889836880532624742668034502079545344 (x1912 x392 3))))
(assert (not (= (+ x1940 3) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x287 x476))
(assert (not (= (+ 2 x681) 18446744073709551616)))
(assert (not (= 3 (x2168 1))))
(assert (x1436 x1429))
(assert (= (x1441 x1575) (ite (and (not x2006) x551 x1827) (x567 x1575) (x383 x1575))))
(assert (= x51 (=> (and (= (x1231 x1196) x531) (= x1196 (x1303 x2001)) (= x2006 (> x531 18446744073709551615))) (and (=> x2006 x1700) (=> (and (not x2006) (= x721 (x1998 (+ x409 32))) (= x551 (= 0 x531)) (or x551 (and (= (uninterp_mod (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x104) (not x551) (= x1294 (x1998 (+ x1975 32))))) (= x379 (x1998 (+ x721 x1975))) (= x409 (uninterp_mod (* 32 x531) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2222)))))
(assert (=> (< (- x64 1) 10000) (not (= x64 (+ 5 x2247)))))
(assert (= (x2 x1938) 0))
(assert (not (= 31123442917456901051708656246501188623764889836880532624742668034502079545344 (+ 2 x433))))
(assert (x1436 x968))
(assert (not (= (+ 1 x433) 1)))
(assert (=> (> (+ 10000 1) x1536) (not (= x1536 (+ 3 x1940)))))
(assert (=> (< (- x200 1) 10000) (not (= x200 (x1912 x238 2)))))
(assert (x1436 x102))
(assert (not (= 4294967296 (x1912 x558 2))))
(assert (not (= (+ 4 x2247) 18446744073709551616)))
(assert (not (= (+ x355 1) (+ x2247 5))))
(assert (= (=> (and (= (x1231 x1537) x842) (= (x1303 x2001) x1537) (= (x965 x204) x1815) (= (< 0 x842) x1072) (= x1670 (x1241 x1312))) (and (=> (not x1072) x1700) (=> x1072 x1315))) x760))
(assert (=> (> (+ 10000 1) x238) (not (= x238 (x2168 1)))))
(assert (= x2284 (=> (and (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x148) x315) (= x148 (x1998 (+ 31 x1244))) (= (x1998 (+ x2229 x315)) x2156) (= x970 (or (> x1244 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1244) true) (< x1244 32))))) (and (=> (not x970) x605) (=> x970 x1700)))))
(assert (x1436 x1654))
(assert (= x137 (=> (and (= x1704 (= 0 x2119)) (= (x1515 x1575) x2119) (= x1575 (x1998 (+ 32 x1975)))) (and (=> (not x1704) x517) (=> (and (= x74 x515) x1704) x1149)))))
(assert (x1436 x377))
(assert (=> (> (+ 10000 1) x2022) (not (= (+ x355 1) x2022))))
(assert (x287 x1648))
(assert (x1047 x1815 x29))
(assert (x1436 x239))
(assert (= (x1358 x854) (ite (and x1059 (not x1790) x421) (x1342 x854) (x982 x854))))
(assert (=> (< (- x1993 1) 10000) (not (= x1993 (+ x2247 3)))))
(assert (x1436 x1950))
(assert (= (and x1117 x1391) x1827))
(assert (=> (> (+ 10000 1) x816) (not (= x816 (+ x2247 1)))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1912 x48 3))))
(assert (=> (> (+ 10000 1) x1677) (not (= x1677 (+ x1765 5)))))
(assert (=> (> (+ 10000 1) x816) (not (= x816 (+ x1765 5)))))
(assert (x1697 x1716 x1695 x100 x88))
(assert (= x1013 (=> (and (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x740) x61) (= x1228 (x1998 (+ x61 x892))) (= x740 (x1998 (+ x126 31))) (= x387 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x126) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x126) true) (< x126 32))))) (and (=> (not x387) x1054) (=> x387 x1700)))))
(assert (not (= (+ x2247 1) (+ 3 x2247))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1912 x238 2))))
(assert (x1436 x491))
(assert (= x1986 (=> (and (= (+ 2 x1765) x34) (< x1702 1461501637330902918203684832716283019655932542976) (= (x1912 x238 2) x1765) (>= x1702 0) (= x239 (x1284 x1702)) (>= 1461501637330902918203684832716283019655932542975 x1702) (= x238 (x1876 1461501637330902918203684832716283019655932542975 x900)) (= (x2176 x34) x1702) (= x1022 (x1876 1461501637330902918203684832716283019655932542975 x1750)) (= x1093 (x1998 (+ 4 x1778))) (= x631 (= x239 0))) (and (=> (and (not x631) (or (and (= 1 x208) (< x1191 4294967296) x1257) (and (= x208 x303) (not x1257))) (= (> x303 0) x1257)) x556) (=> x631 x1700)))))
(assert (=> (< (- x1677 1) 10000) (not (= x1677 (+ x433 1)))))
(assert (= (=> (and (= (x1876 x23 x703) x1398) (= x1648 (ite (> 32 x352) 1 0)) (= (= (x1250 x1398 x851) 0) x2033) (= 1 x23) (= x2042 1) (= (ite (> 78 x352) 1 0) x703) (= x851 (x1876 x2042 x1648))) (and (=> (and x2033 (or (and (= x2155 (x593 x352 1)) (not x1087) (= x969 (= 0 x1014)) (= (x1876 1 x352) x1014) (= 100 x1406) (= x1087 (< 1 x2155)) (= x1717 (ite x969 1 10)) x545) (and (= 1 x1717) (not x545) (= x1406 10))) (= x545 (< 1 x352))) x1732) (=> (and (not x2033) (= (x1834 10 x352) x1614)) x2217))) x1526))
(assert (x1436 x2108))
(assert (= x1444 (or (and x1784 x906) (and x542 x1198))))
(assert (not (= 2743638299 (+ x2247 4))))
(assert (= (and x1963 x793) x654))
(assert (x1436 x549))
(assert (x1436 x463))
(assert (x1436 x329))
(assert (=> (< (- x1993 1) 10000) (not (= x1993 (+ 4 x2247)))))
(assert (not (= (x1912 x392 3) (+ x2247 3))))
(assert (x1697 x1384 x650 x1273 x753))
(assert (x1436 x1494))
(assert (not (= (+ 2 x433) 2442716437)))
(assert (=> (< (- x2022 1) 10000) (not (= (+ x2247 3) x2022))))
(assert (=> (< (- x238 1) 10000) (not (= (+ 3 x2247) x238))))
(assert (= x1021 (and x638 (not x1254))))
(assert (x1436 x1343))
(assert (=> (< (- x1702 1) 10000) (not (= (x1912 x238 2) x1702))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 2 x681))))
(assert (= (x1489 x522) 0))
(assert (x1436 x1722))
(assert (=> (> (+ 10000 1) x1104) (not (= x1104 (+ x1940 3)))))
(assert (not (= (+ x1765 2) 1)))
(assert (x1436 x1570))
(assert (x1436 x14))
(assert (x1436 x875))
(assert (not (= (x1912 x64 2) (+ 5 x1940))))
(assert (= (x2076 x1837) (ite (and (not x2207) x2133 x1675) (x340 x1837) (ite (and (not x1347) (not x2207) x2133 (not x1675)) (x1383 x1837) (x1099 x1837)))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ x355 1))))
(assert (=> (< (- x1425 1) 10000) (not (= x1425 (+ x2247 3)))))
(assert (= (=> (and (= x990 (x992 x1938)) (= (< x2080 0) x1829) (= (x453 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x990)) x2080) (= x1938 (x1998 (+ x486 32)))) (and (=> (and (= x990 x1924) (= x1924 x1512) (= x1667 (< 1 x769)) (not x1667) (= x769 (x418 x486)) (not x1829)) x1210) (=> x1829 x1700))) x608))
(assert (=> (< (- x1536 1) 10000) (not (= x1536 (+ 1 x355)))))
(assert (=> (> (+ 10000 1) x857) (not (= (+ 2 x1765) x857))))
(assert (x1436 x1472))
(assert (x1436 x37))
(assert (not (= (+ 3 x1940) 1745775925341846069737700012427326409042627966635005077806405090422919528448)))
(assert (x1436 x960))
(assert (not (= (+ x2247 1) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x1436 x2103))
(assert (x1436 x1859))
(assert (x287 x620))
(assert (x287 x1812))
(assert (x1436 x2066))
(assert (=> (< (- x845 1) 10000) (not (= (x1912 x48 3) x845))))
(assert (not (= (+ x681 2) 1)))
(assert (x1436 x1372))
(assert (not (= (+ x2247 2) (+ x681 2))))
(assert (=> (< (- x1104 1) 10000) (not (= x1104 (+ 1 x433)))))
(assert (=> (> (+ 10000 1) x1536) (not (= x1536 (x1912 x392 3)))))
(assert (x1436 x589))
(assert (= (=> (and (= (x1998 (+ x1491 64)) x785) (= (= x1804 0) x179) (= x30 (x1876 1461501637330902918203684832716283019655932542975 x1815)) (= (x1998 (+ x566 4)) x1491) (= (x1998 (+ x566 36)) x1304) (= x1804 (x1284 x735)) (= x742 (x1876 1461501637330902918203684832716283019655932542975 x2062))) (and (=> (and (or (and x1672 (= x222 1) (> 4294967296 x243)) (and (not x1672) (= x222 x470))) (= (< 0 x470) x1672) (not x179)) x62) (=> x179 x1700))) x1660))
(assert (x1436 x2182))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1912 x48 3))))
(assert (x1436 x1877))
(assert (x1436 x1261))
(assert (x287 x1753))
(assert (not (= 274184521717934524641157099916833587206 (x1912 x238 2))))
(assert (=> (> (+ 10000 1) x1702) (not (= (+ x681 2) x1702))))
(assert (=> (> (+ 10000 1) x558) (not (= (+ x1940 5) x558))))
(assert (not (= (x1912 x48 3) (+ x1765 2))))
(assert (x287 x2062))
(assert (x1436 x1832))
(assert (=> (> (+ 10000 1) x1843) (not (= (x1912 x64 2) x1843))))
(assert (not (= (+ 5 x1940) 274184521717934524641157099916833587231)))
(assert (= (and (not x1108) x1267) x1408))
(assert (x1436 x1590))
(assert (=> (> (+ 10000 1) x20) (not (= x20 (+ x2247 1)))))
(assert (not (= (+ 2 x2247) 1)))
(assert (= (and (not x519) x838) x585))
(assert (not (= (+ 2 x2247) (x1912 x558 2))))
(assert (=> (> (+ 10000 1) x369) (not (= x369 (x1912 x238 2)))))
(assert (=> (< (- x1916 1) 10000) (not (= x1916 (+ 3 x2247)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 5 x1765))))
(assert (not (= 274184521717934524641157099916833587231 (+ 1 x2247))))
(assert (x1436 x74))
(assert (not (= (x1912 x238 2) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x1436 x439))
(assert (x951 x1428))
(assert (not (= (x1912 x48 3) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x1912 x48 3) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (= (=> (and (= (< 18446744073709551615 x618) x1956) (= x618 (x1231 x522))) (and (=> (and (= (uninterp_mod (* 32 x618) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1767) (= x117 (x1998 (+ 32 x1767))) (not x1956) (= (= x618 0) x1553) (= x74 (x1998 (+ x486 x117))) (or (and (not x1553) (= (uninterp_mod (* x618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1005) (= x130 (x1998 (+ x486 32)))) x1553)) x1678) (=> x1956 x1700))) x411))
(assert (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1300 x1465)))
(assert (x1436 x1386))
(assert (= (=> (and (= x1259 (x1231 x522)) (= (> x1259 0) x1193)) (and (=> x1193 x1377) (=> (and (= x436 x74) (not x1193)) x1177))) x1678))
(assert (x1436 x1470))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ x2247 3))))
(assert (= x1547 (and x284 x955)))
(assert (x287 x860))
(assert (not (= (x1912 x558 2) 1461501637330902918203684832716283019655932542975)))
(assert (x1436 x2002))
(assert (=> (> (+ 10000 1) x816) (not (= (+ 2 x681) x816))))
(assert (= x1457 (=> (and (= x1654 (x1237 x916)) (= x2020 (- (/ x1197 x745) (uninterp_frac x1197 x745))) (= x1212 (< 0 x1654))) (and (=> (not x1212) x1700) (=> (and x1212 (= x147 x921) (= (x1998 (+ 32 x916)) x1580)) x694)))))
(assert (not (= (+ x355 1) (+ 5 x1765))))
(assert (x1436 x126))
(assert (not (= (+ 1 x433) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x1090 (and x1275 x959)))
(assert (=> (< (- x64 1) 10000) (not (= x64 (x1912 x64 2)))))
(assert (not (= (x1912 x64 2) (+ x1765 2))))
(assert (x333 x851))
(assert (x287 18446744073709551615))
(assert (x1436 x204))
(assert (not (= (+ x1940 3) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x1436 x1878))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ x2247 5))))
(assert (= (=> (and (= (x1876 x1628 x1073) x968) (= (= x1229 0) x614) (= x1073 (ite (> x523 x615) 1 0)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)) x615) (= x695 (= 0 x968)) (= (ite (not x614) 1 0) x1628)) (and (=> x695 x528) (=> (not x695) x1700))) x193))
(assert (x1958 x1666 x1141))
(assert (x1436 x1255))
(assert (x1697 x521 x1668 x32 x1598))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1912 x238 2))))
(assert (= (=> (and (= x1461 x182) (= x134 x1252)) x1202) x1226))
(assert (x287 x434))
(assert (x1958 x1477 x476))
(assert (= (x86 x628) (ite (= x628 x177) 0 (x1248 x628))))
(assert (= x2172 (=> (and (= x408 (ite (not x2105) 1 0)) (= (ite (< x335 x1494) 1 0) x495) (= (= x1095 0) x1278) (= x2105 (= x1350 0)) (= x335 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350))) (= (x1876 x408 x495) x1095)) (and (=> (not x1278) x1700) (=> x1278 x991)))))
(assert (x1436 x1767))
(assert (=> (> (+ 10000 1) x1843) (not (= (+ x2247 1) x1843))))
(assert (not (= (+ x2247 3) (+ x1940 5))))
(assert (= (x66 x1726) 0))
(assert (=> (< (- x200 1) 10000) (not (= (x1912 x48 3) x200))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ 5 x2247))))
(assert (not (= (+ x2247 3) 18446744073709551615)))
(assert (=> (< (- x1982 1) 10000) (not (= (+ x433 1) x1982))))
(assert (=> (> (+ 10000 1) x1566) (not (= x1566 (+ 3 x1940)))))
(assert (x951 x1765))
(assert (= (and (not x2236) x1609) x170))
(assert (x1436 x859))
(assert (not (= (x2168 1) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= (=> (and (= (= x509 0) x85) (= (+ x1940 5) x1288) (= x1181 (x1503 x1228)) (>= x664 0) (= (ite (not x1010) 1 0) x758) (= (x1783 x1288) x664) (= x1010 (= x664 0)) (= (x1876 x758 x860) x509) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664)) x589) (<= x664 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (ite (< x589 x2083) 1 0) x860)) (and (=> x85 x1194) (=> (not x85) x1700))) x934))
(assert (= x403 (or (and x1586 x1089) (and x1550 x1174))))
(assert (not (= (+ x1940 3) (+ x1765 2))))
(assert (= x1315 (=> (and (= x465 (x1998 (+ x424 36))) (= x718 (x1876 1461501637330902918203684832716283019655932542975 x1815)) (= (x1876 1461501637330902918203684832716283019655932542975 x1670) x1536) (= (x1998 (+ 32 x1537)) x186) (= (x1876 1461501637330902918203684832716283019655932542975 x2062) x68) (= (x1998 (+ x424 4)) x520) (= x2050 (x1284 x1536)) (= x2062 (x1836 x186)) (= x1792 (= 0 x2050))) (and (=> (and (= (< 0 x1889) x95) (not x1792) (or (and x95 (< x71 4294967296) (= 1 x2134)) (and (= x1889 x2134) (not x95)))) x1224) (=> x1792 x1700)))))
(assert (x1436 x1558))
(assert (x1436 x717))
(assert (x287 x1493))
(assert (x1697 x1646 x1681 x798 x1712))
(assert (not (= (+ 2 x433) 2743638299)))
(assert (x1436 x2080))
(assert (x1436 x309))
(assert (= (=> (= true x894) x1799) x1700))
(assert (=> (< (- x1982 1) 10000) (not (= (+ x433 2) x1982))))
(assert (x1436 x988))
(assert (not (= 4294967296 (x2168 1))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1912 x64 2))))
(assert (x1436 x625))
(assert (x951 x1702))
(assert (x287 x1911))
(assert (not (= (+ 4 x2247) 2540496021)))
(assert (x1436 x1512))
(assert (=> (< (- x932 1) 10000) (not (= (x1912 x558 2) x932))))
(assert (=> (< (- x1702 1) 10000) (not (= (x2168 1) x1702))))
(assert (x1436 x1346))
(assert (x1436 x990))
(assert (=> (> (+ 10000 1) x1702) (not (= x1702 (+ x1765 2)))))
(assert (not (= 4294967296 (x1912 x64 2))))
(assert (= (=> (and (= (x1876 1461501637330902918203684832716283019655932542975 x2210) x2230) (= x867 (x992 x300)) (= (x1998 (+ x436 36)) x824) (= x300 (x1998 (+ 32 x486))) (= (x1876 1461501637330902918203684832716283019655932542975 x2077) x1606) (= (= x2107 0) x2146) (= (x1284 x1677) x2107) (= (x1998 (+ 4 x436)) x1097) (= (x1876 1461501637330902918203684832716283019655932542975 x1429) x1677)) (and (=> x2146 x1700) (=> (and (not x2146) (or (and (not x1959) (= x782 x799)) (and (> 4294967296 x1996) x1959 (= x799 1))) (= (> x782 0) x1959)) x665))) x1999))
(assert (=> (> (+ 10000 1) x1033) (not (= (+ 2 x1765) x1033))))
(assert (=> (< (- x238 1) 10000) (not (= (x1912 x48 3) x238))))
(assert (not (= 2477345955 (+ 1 x355))))
(assert (= (and (not x1808) x609) x56))
(assert (not (= (+ 3 x1940) 1)))
(assert (x1436 x1696))
(assert (x1436 x2285))
(assert (x1436 x303))
(assert (x1436 x1219))
(assert (x1436 x1293))
(assert (= (and x629 x235) x550))
(assert (not (= (+ x2247 1) (+ x1765 2))))
(assert (x1436 x486))
(assert (= x2197 (and x1842 x2033)))
(assert (= x2010 (=> (and (= (= x449 x1982) x60) (= (x1195 x1744) x1982) (= (x1876 1461501637330902918203684832716283019655932542975 x1982) x449)) (and (=> x60 x1163) (=> (not x60) x1700)))))
(assert (not (= (x1912 x64 2) 2477345955)))
(assert (not (= 1000000000000000000 (x1912 x48 3))))
(assert (x1436 x1994))
(assert (= (=> (and (= (= 0 x1372) x2038) (= (x128 x892) x2083) (= (x1876 1461501637330902918203684832716283019655932542975 x1812) x1843) (= x1372 (x1284 x1843))) (and (=> (and (or (and (not x169) (= x1665 x1223)) (and (> 4294967296 x354) x169 (= 1 x1665))) (= x169 (< 0 x1223)) (not x2038)) x1821) (=> x2038 x1700))) x1054))
(assert (=> (< (- x1982 1) 10000) (not (= x1982 (+ x681 2)))))
(assert (= (and x83 x1403) x838))
(assert (x1436 x1719))
(assert (not (= 274184521717934524641157099916833587206 (x2168 1))))
(assert (x1436 x1698))
(assert (x1436 x288))
(assert (x287 x4))
(assert (=> (< (- x845 1) 10000) (not (= x845 (+ 1 x355)))))
(assert (= (ite (and x1186 (not x1094)) (ite (and x213 x943 (not x827)) (x581 x91) (x1069 x91)) (x1069 x91)) (x269 x91)))
(assert (x1436 x335))
(assert (not (= (+ 2 x681) 1745775925341846069737700012427326409042627966635005077806405090422919528448)))
(assert (= (ite (= x1988 x1261) x1449 (x1088 x1988)) (x823 x1988)))
(assert (=> (< (- x1428 1) 10000) (not (= (+ x681 2) x1428))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x1912 x558 2))))
(assert (=> (> (+ 10000 1) x20) (not (= (x2168 1) x20))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ x355 1))))
(assert (=> (> (+ 10000 1) x369) (not (= x369 (x1912 x558 2)))))
(assert (x287 x366))
(assert (=> (< (- x770 1) 10000) (not (= x770 (x1912 x392 3)))))
(assert (=> (> (+ 10000 1) x1033) (not (= x1033 (+ 1 x2247)))))
(assert (x1047 x420 x961))
(assert (x1436 x482))
(assert (x1436 x343))
(assert (x1436 x1404))
(assert (=> (> (+ 10000 1) x91) (not (= x91 (+ 5 x2247)))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x2168 1))))
(assert (=> (< (- x1916 1) 10000) (not (= (+ 5 x1765) x1916))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ 2 x433))))
(assert (not (= (+ x2247 2) (+ 5 x1940))))
(assert (=> (< (- x64 1) 10000) (not (= (x1912 x392 3) x64))))
(assert (=> (< (- x2022 1) 10000) (not (= (+ x2247 2) x2022))))
(assert (x1436 x1532))
(assert (not (= (x1912 x392 3) (+ 5 x1765))))
(assert (not (= (x1912 x64 2) (+ 1 x2247))))
(assert (not (= (+ x433 2) (+ 4 x2247))))
(assert (x1436 x2118))
(assert (x1697 x2289 x1949 x6 x2219))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x1912 x392 3))))
(assert (x287 x511))
(assert (=> (> (+ 10000 1) x48) (not (= x48 (x1912 x48 3)))))
(assert (=> (> (+ 10000 1) x48) (not (= x48 (+ 5 x1940)))))
(assert (x1417 x352 x1844))
(assert (= x466 (=> (and (= x503 (or (> x1996 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1996) (= (<= x1996 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x1998 (+ x1996 31)) x1737) (= (x1998 (+ x436 x632)) x988) (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1737) x632)) (and (=> x503 x1700) (=> (not x503) x874)))))
(assert (not (= (+ 2 x1765) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (=> (< (- x91 1) 10000) (not (= x91 (x1912 x48 3)))))
(assert (= (and x1019 (not x541)) x1714))
(assert (not (= (x2168 1) 2442716437)))
(assert (x1436 x1274))
(assert (=> (> (+ 10000 1) x48) (not (= (x1912 x392 3) x48))))
(assert (= (ite (= x251 x710) 0 (x677 x710)) (x804 x710)))
(assert (x1436 x735))
(assert (not (= 2477345955 (+ x2247 2))))
(assert (= (=> (and (= x1068 (> x442 x1698)) (= x1698 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146)))) (and (=> (and (= x1313 x745) (= (uninterp_mod (* x442 x1146) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1313) (not x1068)) x927) (=> x1068 x1700))) x2120))
(assert (not (= (+ 1 x355) (x1912 x392 3))))
(assert (not (= (+ x2247 1) (x1912 x238 2))))
(assert (= x1321 (and (not x2015) x1813)))
(assert (x1563 x2081 x253))
(assert (x287 x1666))
(assert (x1436 x1171))
(assert (x1436 x897))
(assert (x1436 x1903))
(assert (=> (> (+ 10000 1) x392) (not (= (+ x1765 2) x392))))
(assert (= (x1396 x2195) (ite (and (not x699) x835 x1690) (x865 x2195) (x317 x2195))))
(assert (x1436 x892))
(assert (= (and (not x1528) x1302) x1946))
(assert (x1697 x366 x2147 x2067 x1326))
(assert (= (and x149 (not x27)) x880))
(assert (not (= 18446744073709551616 (+ x2247 5))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ 5 x1765))))
(assert (=> (> (+ 10000 1) x558) (not (= (x2168 1) x558))))
(assert (= 0 (x1534 x1664)))
(assert (=> (> (+ 10000 1) x1536) (not (= x1536 (+ x1765 5)))))
(assert (x1436 x860))
(assert (= x62 (=> (= x1254 (= x222 0)) (and (=> x1254 x1700) (=> (not x1254) x1192)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x2247 5))))
(assert (not (= (+ 5 x1765) (x1912 x558 2))))
(assert (not (= 2743638299 (+ x1940 3))))
(assert (=> (> (+ 10000 1) x1843) (not (= (+ x2247 2) x1843))))
(assert (x1436 x1049))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1912 x64 2))))
(assert (x1436 x1281))
(assert (x1436 x914))
(assert (x1436 x2206))
(assert (x1436 x1385))
(assert (x1436 x1807))
(assert (= x1314 (or (and x479 x2241) (and x2212 x487))))
(assert (=> (> (+ 10000 1) x1104) (not (= (x1912 x238 2) x1104))))
(assert (not (= (+ x433 2) 274184521717934524641157099916833587231)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x2247 4))))
(assert (x1436 x1632))
(assert (= x1989 (=> (= (not (> x1905 x809)) x198) (and (=> (not x198) x848) (=> x198 x1700)))))
(assert (=> (> (+ 10000 1) x558) (not (= x558 (+ 5 x1765)))))
(assert (x287 x840))
(assert (x1436 x392))
(assert (x1436 x1252))
(assert (= (=> (and (= (x52 x482) x1981) (= (= x1981 x1265) x1391) (= x482 (x1079 x656)) (= x1265 (x52 x1939)) (= (x1079 x656) x1939)) (and (=> (not x1391) x1700) (=> x1391 x51))) x2102))
(assert (x1436 x195))
(assert (=> (< (- x1104 1) 10000) (not (= (+ x2247 3) x1104))))
(assert (x1436 x1616))
(assert (=> (< (- x1947 1) 10000) (not (= (+ 2 x1765) x1947))))
(assert (=> (> (+ 10000 1) x1982) (not (= x1982 (+ 1 x2247)))))
(assert (= x1835 (and (not x1121) x1430)))
(assert (not (= 274184521717934524641157099916833587231 (x2168 1))))
(assert (=> (< (- x1843 1) 10000) (not (= x1843 (+ 5 x1765)))))
(assert (not (= (+ x1765 2) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (x1436 x285))
(assert (not (= (+ x2247 1) (+ 3 x1940))))
(assert (=> (< (- x816 1) 10000) (not (= x816 (+ x355 1)))))
(assert (= (=> (and (= (x1231 x522) x795) (= x811 (x696 x1975)) (= x1001 (= x811 x795)) (= x522 (x1303 x2001))) (and (=> x1001 x411) (=> (not x1001) x1700))) x1107))
(assert (not (= (+ 4 x2247) 274184521717934524641157099916833587231)))
(assert (x1436 x1604))
(assert (not (= 3 (+ x1765 5))))
(assert (x951 x91))
(assert (x1436 x2195))
(assert (not (= (+ x1940 3) (+ x433 2))))
(assert (not (= 2442716437 (+ 3 x2247))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ 5 x2247))))
(assert (not (= (+ 2 x2247) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x287 x2065))
(assert (= x2135 (and x199 x2187)))
(assert (x1436 x1939))
(assert (not (= (+ 3 x1940) 18446744073709551615)))
(assert (=> (< (- x1536 1) 10000) (not (= (x1912 x558 2) x1536))))
(assert (x1436 x620))
(assert (not (= (+ 1 x433) (+ x355 1))))
(assert (not (= (+ x1765 5) (x1912 x64 2))))
(assert (x1958 x758 x860))
(assert (x1436 x2020))
(assert (x1436 x1896))
(assert (=> (> (+ 10000 1) x770) (not (= x770 (+ 2 x433)))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1912 x558 2))))
(assert (= x2245 (=> (and (= x655 (= x1215 x1415)) (= x1215 (x1008 x1485)) (= (x1231 x221) x1415) (= x221 (x1303 x2001))) (and (=> (not x655) x1700) (=> x655 x1445)))))
(assert (x1436 x28))
(assert (= (and x595 (not x483)) x1198))
(assert (x1697 x1546 x489 x663 x1147))
(assert (x1436 x1801))
(assert (= (and x170 (not x1379)) x852))
(assert (not (= 18446744073709551616 (+ 2 x2247))))
(assert (not (= (x1912 x64 2) (+ x681 2))))
(assert (= x1799 x2255))
(assert (x287 x708))
(assert (x1436 x2250))
(assert (= (and x415 (not x2109)) x1643))
(assert (= x1505 (or (and x661 x67) (and x1511 (not x635)))))
(assert (not (= (x1912 x238 2) (+ x2247 4))))
(assert (x1436 x1981))
(assert (=> (< (- x1536 1) 10000) (not (= (x1912 x64 2) x1536))))
(assert (x1436 x106))
(assert (not (= (+ 2 x2247) 2)))
(assert (not (= 31123442917456901051708656246501188623764889836880532624742668034502079545344 (+ 4 x2247))))
(assert (=> (< (- x1677 1) 10000) (not (= (+ x355 1) x1677))))
(assert (x287 x1868))
(assert (x333 x1971))
(assert (=> (< (- x48 1) 10000) (not (= x48 (+ 5 x2247)))))
(assert (=> (< (- x735 1) 10000) (not (= x735 (+ x1940 3)))))
(assert (= x765 (=> (and (= (< x180 x1157) x1235) (= (- (/ x789 1000000000000000000) (uninterp_frac x789 1000000000000000000)) x926) (= (- (/ x926 1000000000000000000) (uninterp_frac x926 1000000000000000000)) x1524) (= x180 (x453 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1524))) (= (uninterp_mod (* x705 x1296) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x789)) (and (=> x1235 x1700) (=> (not x1235) x889)))))
(assert (x287 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x287 x47))
(assert (= (=> (= (= x627 0) x1397) (and (=> x1397 x1700) (=> (not x1397) x579))) x2043))
(assert (= 0 (x1534 x1274)))
(assert (= (=> (and (= x105 (x1548 x1206)) (= x1468 (< x105 x92))) (and (=> (not x1468) x1757) (=> x1468 x1700))) x1594))
(assert (not (= (x1912 x558 2) 2743638299)))
(assert (= (x66 x2082) 0))
(assert (not (= (+ 1 x355) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (= (=> (= (= x1252 0) x67) (and (=> (not x67) x2239) (=> (and x67 (= x738 0)) x1525))) x1202))
(assert (x1436 x782))
(assert (=> (< (- x770 1) 10000) (not (= x770 (x1912 x238 2)))))
(assert (x1436 x2201))
(assert (x1436 x844))
(assert (x1436 x1621))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ x1765 2))))
(assert (=> (> (+ 10000 1) x91) (not (= (+ 3 x1940) x91))))
(assert (x287 x563))
(assert (=> (< (- x1982 1) 10000) (not (= x1982 (+ 5 x1765)))))
(assert (x1436 x3))
(assert (=> (> (+ 10000 1) x1428) (not (= x1428 (+ x1940 3)))))
(assert (x1436 x1911))
(assert (not (= (+ x355 1) (+ 2 x681))))
(assert (x1047 x1982 x1199))
(assert (not (= (+ x2247 2) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (x1047 x2065 x941))
(assert (x1047 x1993 x1365))
(assert (x1436 x1034))
(assert (x1436 x1651))
(assert (x1436 x1775))
(assert (=> (< (- x64 1) 10000) (not (= (+ 2 x433) x64))))
(assert (not (= (+ 2 x433) 18446744073709551616)))
(assert (x1436 x1746))
(assert (= x1267 (and (not x1119) x1277)))
(assert (= (x593 x352 1) (- (/ x352 2) (uninterp_frac x352 2))))
(assert (= x572 (and x1756 x372)))
(assert (=> (= (+ 5 x1765) (+ x2247 5)) (= x558 x238)))
(assert (= (ite (= x2195 x1057) 274184521717934524641157099916833587231 (x944 x2195)) (x317 x2195)))
(assert (=> (> (+ 10000 1) x1702) (not (= (+ 5 x1940) x1702))))
(assert (not (= (+ x433 2) 2540496021)))
(assert (x1436 x758))
(assert (= 0 (x1489 x1196)))
(assert (x1436 x1691))
(assert (=> (> (+ 10000 1) x2022) (not (= x2022 (+ x433 1)))))
(assert (=> (< (- x1993 1) 10000) (not (= x1993 (+ x355 1)))))
(assert (=> (> (+ 10000 1) x48) (not (= (+ x355 1) x48))))
(assert (= x2281 (=> (and (= x1886 (x1998 (+ x1018 x74))) (= x1624 (x1998 (+ 31 x2169))) (= x1018 (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1624)) (= x1490 (or (and (= (<= x2169 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2169)) (> x2169 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> x1490 x1700) (=> (not x1490) x2017)))))
(assert (=> (< (- x1033 1) 10000) (not (= x1033 (+ 5 x2247)))))
(assert (not (= (+ 1 x2247) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (= (=> (= x2112 (= x1151 0)) (and (=> x2112 x1700) (=> (not x2112) x1504))) x1736))
(assert (x1436 x522))
(assert (=> (> (+ 10000 1) x1982) (not (= (x1912 x64 2) x1982))))
(assert (x1436 x1350))
(assert (=> (> (+ 10000 1) x369) (not (= (x1912 x392 3) x369))))
(assert (x951 x64))
(assert (not (= (+ x2247 4) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= (x1912 x238 2) 4294967296)))
(assert (= (x2060 x300) (ite (and (not x1956) x2157 x1553) (x2 x300) (x40 x300))))
(assert (= (=> (and (= x1414 (x1515 x1575)) (= (> x352 0) x724)) (and (=> (and (not x724) (= 1 x1614)) x2217) (=> x724 x1526))) x477))
(assert (=> (> (+ 10000 1) x1702) (not (= x1702 (+ 3 x1940)))))
(assert (not (= (+ x355 1) 1745775925341846069737700012427326409042627966635005077806405090422919528448)))
(assert (x1436 x1367))
(assert (=> (< (- x932 1) 10000) (not (= (x1912 x64 2) x932))))
(assert (not (= 274184521717934524641157099916833587206 (x1912 x392 3))))
(assert (= (x1530 x1126) 42459404708690159261654315324267577519400883839135586425952143822324095778816))
(assert (x1436 x2280))
(assert (=> (< (- x1066 1) 10000) (not (= x1066 (+ 3 x2247)))))
(assert (not (= (+ 4 x2247) (+ x681 2))))
(assert (x1436 x50))
(assert (= x2256 (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2000)) x652) (= x1564 (ite (not x2225) 1 0)) (= (= x2177 0) x1976) (= x2225 (= 0 x2000)) (= x634 (uninterp_mod (* x1392 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (- (/ x634 x1512) (uninterp_frac x634 x1512)) x1114) (= x2177 (x1876 x1564 x469)) (= x469 (ite (< x652 1000000000000000000) 1 0))) (and (=> (and (= x2161 x809) (= x2161 (- (/ x2198 x1512) (uninterp_frac x2198 x1512))) (= x2198 (uninterp_mod (* 1000000000000000000 x2000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1976 (= x1114 x1905) (= x854 x1171)) x1989) (=> (not x1976) x1700)))))
(assert (not (= 18446744073709551616 (+ 3 x1940))))
(assert (= x1984 (=> (and (= x2279 (= 0 x1269)) (= x1269 (x2054 x2194)) (= (x1998 (+ x1312 192)) x2194)) (and (=> (not x2279) x2027) (=> (and x2279 (= x921 x112)) x694)))))
(assert (= 0 (x471 x803)))
(assert (= x1230 (and x774 x669)))
(assert (x287 x148))
(assert (x1436 x2223))
(assert (x333 x1398))
(assert (x1436 x1499))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ x1765 5))))
(assert (= (x748 x250) (ite (and (not x2207) x2133 x1675) (x780 x250) (ite (and x2133 (not x2207) (not x1675) (not x1347)) (x2025 x250) (x374 x250)))))
(assert (=> (> (+ 10000 1) x735) (not (= (+ 1 x2247) x735))))
(assert (x1436 x1915))
(assert (x287 x1564))
(assert (= x848 (=> (and (= (+ x681 2) x1486) (= x1151 (x187 x1486)) (= (x1912 x392 3) x681) (= (> x1151 2) x142) (= x392 (x1876 1461501637330902918203684832716283019655932542975 x900)) (< x1151 256)) (and (=> (not x142) x1736) (=> x142 x1700)))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ x1765 5))))
(assert (x1436 x903))
(assert (x1436 x596))
(assert (not (= 31123442917456901051708656246501188623764889836880532624742668034502079545344 (+ x2247 1))))
(assert (x1436 x91))
(assert (not (= (x1912 x238 2) 1461501637330902918203684832716283019655932542976)))
(assert (not (= 1745775925341846069737700012427326409042627966635005077806405090422919528448 (+ 1 x2247))))
(assert (x1436 x1665))
(assert (x1436 x630))
(assert (=> (< (- x1916 1) 10000) (not (= x1916 (+ x1940 5)))))
(assert (not (= (+ x2247 2) 2540496021)))
(assert (x1436 x1655))
(assert (=> (> (+ 10000 1) x2022) (not (= x2022 (+ 5 x1765)))))
(assert (x951 x1425))
(assert (not (= 4294967296 (+ 5 x1765))))
(assert (not (= (+ x433 2) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (x1436 x365))
(assert (not (= (+ 2 x681) 18446744073709551615)))
(assert (=> (< (- x91 1) 10000) (not (= x91 (+ x2247 1)))))
(assert (x1436 x259))
(assert (not (= (+ x681 2) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (=> (> (+ 10000 1) x816) (not (= (+ x1940 3) x816))))
(assert (=> (> (+ 10000 1) x392) (not (= (+ x1940 5) x392))))
(assert (x1436 x651))
(assert (=> (> (+ 10000 1) x238) (not (= (+ x433 2) x238))))
(assert (x1436 x1076))
(assert (=> (> (+ 10000 1) x932) (not (= x932 (+ 1 x433)))))
(assert (not (= (+ x681 2) (x1912 x48 3))))
(assert (x1436 x1196))
(assert (x1436 x321))
(assert (= x1771 (and x2273 x1840)))
(assert (x1436 x1294))
(assert (x1436 x2188))
(assert (x287 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (and x1408 x1185) x415))
(assert (x951 x1843))
(assert (not (= (+ 1 x355) 18446744073709551615)))
(assert (not (= (+ x2247 3) 1461501637330902918203684832716283019655932542975)))
(assert (=> (> (+ 10000 1) x1104) (not (= (+ x1765 2) x1104))))
(assert (= (=> (and (= (x1998 (+ x2201 31)) x448) (= x892 (x1998 (+ x2181 x647))) (= x647 (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x448)) (= (or (> x2201 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x2201) (= (<= x2201 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x27)) (and (=> x27 x1700) (=> (not x27) x1966))) x689))
(assert (x1436 x430))
(assert (not (= (x1912 x558 2) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (= (and x1547 (not x2146)) x535))
(assert (= x1856 (and (not x2098) x1636)))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ 4 x2247))))
(assert (= (and x376 (not x198)) x936))
(assert (x1436 x404))
(assert (x1958 x342 x131))
(assert (not (= (+ x1765 5) 1461501637330902918203684832716283019655932542975)))
(assert (= (and x492 x1520) x308))
(assert (x1436 x784))
(assert (=> (> (+ 10000 1) x20) (not (= (x1912 x64 2) x20))))
(assert (x1436 x294))
(assert (x1697 x540 x1595 x1739 x283))
(assert (= x1888 (=> (and (= (or (and (> 32 x419) (= true (<= x419 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x419 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1119) (= x2030 (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2141)) (= (x1998 (+ x2030 x106)) x612) (= x2141 (x1998 (+ x419 31)))) (and (=> x1119 x1700) (=> (not x1119) x43)))))
(assert (x1047 x796 x292))
(assert (not (= (x2168 1) 274184521717934524641157099916833587202)))
(assert (= x832 (=> (and (= (x1284 x200) x363) (= x1157 (x975 x2101)) (= x2101 (x1998 (+ x710 96))) (= (x1876 1461501637330902918203684832716283019655932542975 x796) x200) (= x1965 (= 0 x363))) (and (=> (and (= x954 (> x1857 0)) (or (and (not x954) (= x1755 x1857)) (and (< x1925 4294967296) x954 (= 1 x1755))) (not x1965)) x1015) (=> x1965 x1700)))))
(assert (not (= (+ 2 x433) (+ 1 x433))))
(assert (not (= (+ x2247 5) 274184521717934524641157099916833587206)))
(assert (=> (> (+ 10000 1) x845) (not (= (+ x2247 3) x845))))
(assert (= (and x1222 x1727) x1084))
(assert (x1436 x1904))
(assert (= (x471 x1939) 0))
(assert (x1436 x1128))
(assert (not (= (+ 1 x2247) (x1912 x392 3))))
(assert (x1436 x4))
(assert (not (= (+ 2 x1765) 4294967296)))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ x1765 2))))
(assert (= (=> (and (= x2023 (> x164 0)) (= (x52 x1707) x164) (= x1707 (x1079 x656))) (and (=> (not x2023) x1700) (=> x2023 x428))) x767))
(assert (x1436 x1537))
(assert (x1436 x61))
(assert (=> (< (- x845 1) 10000) (not (= x845 (+ x433 1)))))
(assert (not (= (+ x1940 5) 1745775925341846069737700012427326409042627966635005077806405090422919528448)))
(assert (= x889 (=> (and (= (x858 x710) x434) (= x932 (x1876 1461501637330902918203684832716283019655932542975 x434)) (= (= x772 0) x120) (= x772 (x1284 x932)) (= (x1998 (+ x1524 x1157)) x1426)) (and (=> x120 x1700) (=> (and (not x120) (or (and x1349 (= x2264 1) (> 4294967296 x1602)) (and (not x1349) (= x2078 x2264))) (= (< 0 x2078) x1349)) x1052)))))
(assert (= (=> (= (= 0 x1392) x1100) (and (=> (not x1100) x2102) (=> (and x1100 (= x1905 0) (= x854 x1975) (= x809 0)) x1989))) x1610))
(assert (=> (> (+ 10000 1) x1702) (not (= x1702 (+ 2 x433)))))
(assert (x1436 x87))
(assert (= x1137 (and (not x457) x504)))
(assert (not (= (x1912 x64 2) 31123442917456901051708656246501188623764889836880532624742668034502079545344)))
(assert (x1436 x809))
(assert (x1436 x1197))
(assert (=> (< (- x2022 1) 10000) (not (= (+ x1940 3) x2022))))
(assert (=> (> (+ 10000 1) x1947) (not (= x1947 (+ x1940 5)))))
(assert (x287 x1498))
(assert (=> (< (- x1947 1) 10000) (not (= x1947 (+ x2247 5)))))
(assert (=> (> (+ 10000 1) x238) (not (= x238 (x1912 x392 3)))))
(assert (x1436 x139))
(assert (x1436 x1988))
(assert (= (ite (= x1603 x2173) 0 (x138 x2173)) (x907 x2173)))
(assert (x1958 x1628 x1073))
(assert (not (= (+ x2247 5) (x1912 x392 3))))
(assert (= (=> (and (= x1756 (< 0 x78)) (= (x418 x486) x78)) (and (=> x1756 x768) (=> (and (not x1756) (= 0 x1512)) x1210))) x1177))
(assert (= (=> (and (= x405 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2034) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2034) true) (< x2034 32)))) (= (x1998 (+ x2034 31)) x1493) (= (x1998 (+ x2226 x534)) x1744) (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1493) x534)) (and (=> x405 x1700) (=> (not x405) x2138))) x884))
(assert (x951 x845))
(assert (=> (> (+ 10000 1) x1843) (not (= x1843 (+ 3 x2247)))))
(assert (x1436 x30))
(assert (not (= (+ x355 1) (x1912 x238 2))))
(assert (not (= (+ x1940 3) 1684360437)))
(assert (=> (= (+ x1940 3) (+ x2247 3)) (= x64 x558)))
(assert (x1436 x442))
(assert (not (= (x1912 x392 3) (+ x2247 4))))
(assert (= (=> (= (= x1567 0) x1820) (and (=> (not x1820) x670) (=> (and (= x1126 x854) (= 0 x1905) (= x809 0) x1820) x1989))) x1917))
(assert (x1436 x1270))
(assert (not (= 2743638299 (+ 5 x1765))))
(assert (=> (> (+ 10000 1) x770) (not (= x770 (x1912 x64 2)))))
(assert (x1436 x933))
(assert (x1436 x247))
(assert (x287 x1646))
(assert (= (x593 x511 1) (- (/ x511 2) (uninterp_frac x511 2))))
(assert (=> (< (- x1111 1) 10000) (not (= (x2168 1) x1111))))
(assert (= (or (and (not x1094) x1186) (and x1264 x2272)) x963))
(assert (x1958 x1249 x228))
(assert (x1436 x1633))
(assert (=> (> (+ 10000 1) x558) (not (= x558 (+ 1 x2247)))))
(assert (x1436 x8))
(assert (not (= (+ x2247 2) (+ x433 1))))
(assert (=> (> (+ 10000 1) x932) (not (= x932 (+ 3 x2247)))))
(assert (x1436 x1027))
(assert (= x1571 (=> (and (= (> 0 x1500) x1320) (= x1500 (x453 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2018))) (= (- (/ x1803 1000000000000000000) (uninterp_frac x1803 1000000000000000000)) x2018) (= (uninterp_mod (* x322 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1803)) (and (=> (and (not x1037) (not x1320) (= x1037 (< 1 x1866)) (= x1171 x988) (= x1519 x2000) (= x1519 x2018) (= (x1231 x291) x1866)) x191) (=> x1320 x1700)))))
(assert (=> (< (- x238 1) 10000) (not (= (+ x681 2) x238))))
(assert (not (= (+ 5 x2247) (x1912 x64 2))))
(assert (not (= (+ 1 x2247) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= (+ x2247 4) (x1912 x64 2))))
(assert (not (= (x1912 x238 2) 3)))
(assert (x1436 x1498))
(assert (x1436 x1580))
(assert (x1436 x300))
(assert (x1436 x2161))
(assert (=> (< (- x1425 1) 10000) (not (= (+ x1765 2) x1425))))
(assert (not (= (+ x1765 5) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (not (= (+ x355 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (> (+ 10000 1) x64) (not (= x64 (+ 3 x2247)))))
(assert (= (and x878 (not x405)) x2190))
(assert (=> (< (- x64 1) 10000) (not (= (+ 2 x2247) x64))))
(assert (= (=> (and (= x729 (< 0 x1615)) (= (x693 x112) x630) (= x1615 (x1231 x221))) (and (=> (not x729) x1700) (=> x729 x2052))) x1795))
(assert (x1958 x87 x1911))
(assert (=> (< (- x1111 1) 10000) (not (= x1111 (+ 2 x1765)))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ x2247 3))))
(assert (x1436 x2050))
(assert (x1436 x409))
(assert (x1436 x1005))
(assert (= x2175 (=> (= x2235 (= x1618 0)) (and (=> (not x2235) x229) (=> x2235 x1700)))))
(assert (not (= (+ x433 2) (+ 1 x355))))
(assert (= (=> (and (= (= 0 x686) x1301) (= (x1876 1461501637330902918203684832716283019655932542975 x1750) x686) (= x182 x2265)) (and (=> (and (= (x1998 (+ 32 x893)) x2114) (= (uninterp_mod (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x893) (= (x1998 (+ x893 160)) x1009) (not x1301) (= (= 0 x555) x10) (or x10 (and (= (x2168 1) x355) (= x290 (> x1076 192)) (= (- (/ (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- x355 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)) x1987) (or (not x290) (and (not x792) (= x539 (x750 x2246)) x290 (<= x539 1461501637330902918203684832716283019655932542975) (= (x2168 1) x1764) (= (- (/ (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- x2246 x1764) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)) x777) (>= x539 0) (> 1461501637330902918203684832716283019655932542976 x539) (= x792 (> x1076 224)))) (= (x750 x355) x1617) (= x1076 (x1998 (+ x903 160))) (>= x1617 0) (= x903 (uninterp_mod (* 32 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 1461501637330902918203684832716283019655932542975 x1617) (< x1617 1461501637330902918203684832716283019655932542976) (not x10) (= (+ 1 x355) x2246) (= x385 (x2168 1))))) x249) (=> x1301 x1700))) x1060))
(assert (not (= (+ 1 x355) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (= (x883 x2226) (ite (and (not x1371) x431 x254) (x895 x2226) (x1973 x2226))))
(assert (= (x1489 x1950) 0))
(assert (x1436 x2113))
(assert (not (= (x1912 x48 3) 274184521717934524641157099916833587202)))
(assert (x1436 x1737))
(assert (not (= (x1912 x392 3) (+ x433 1))))
(assert (=> (< (- x48 1) 10000) (not (= x48 (+ x433 2)))))
(assert (not (= (x2168 1) 31123442917456901051708656246501188623764889836880532624742668034502079545344)))
(assert (x1436 x921))
(assert (not (= (+ 2 x681) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (= (and x1333 x1321) x375))
(assert (x1436 x2156))
(assert (not (= (x1912 x48 3) (x1912 x238 2))))
(assert (=> (< (- x2022 1) 10000) (not (= (+ 2 x681) x2022))))
(assert (= (and x2291 (not x264)) x2094))
(assert (x1436 x398))
(assert (=> (< (- x369 1) 10000) (not (= x369 (+ x1765 2)))))
(assert (not (= 4294967296 (+ 2 x433))))
(assert (x287 x521))
(assert (x1436 x739))
(assert (x1436 x1753))
(assert (= x1680 (and x1789 (not x771))))
(assert (=> (> (+ 10000 1) x1425) (not (= x1425 (+ x2247 2)))))
(assert (x333 x2002))
(assert (=> (< (- x770 1) 10000) (not (= x770 (+ 1 x433)))))
(assert (x1436 x1742))
(assert (not (= 1000000000000000000 (+ 5 x2247))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ 2 x681))))
(assert (x1436 x1864))
(assert (x1436 x2077))
(assert (=> (= (+ x1940 5) (+ 5 x1765)) (= x64 x238)))
(assert (= (=> (= x1760 (= 0 x208)) (and (=> (not x1760) x472) (=> x1760 x1700))) x556))
(assert (x1436 x1804))
(assert (= (=> (and (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2289) x917) (= (x1998 (+ x566 x917)) x106) (= (or (and (> 32 x243) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x243) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x243)) x451) (= x2289 (x1998 (+ 31 x243)))) (and (=> (not x451) x1608) (=> x451 x1700))) x1192))
(assert (=> (> (+ 10000 1) x1066) (not (= (+ x1940 5) x1066))))
(assert (x1436 x200))
(assert (x1436 x59))
(assert (=> (< (- x238 1) 10000) (not (= (x1912 x64 2) x238))))
(assert (=> (< (- x369 1) 10000) (not (= x369 (+ x1940 3)))))
(assert (not (= (+ x433 2) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (not (= 1684360437 (x1912 x48 3))))
(assert (not (= (x1912 x48 3) (+ 1 x433))))
(assert (=> (< (- x857 1) 10000) (not (= (+ x1940 5) x857))))
(assert (=> (> (+ 10000 1) x1843) (not (= (+ x2247 4) x1843))))
(assert (x1436 x1902))
(assert (= (x1489 x1382) 0))
(assert (not (= (+ x2247 4) (x1912 x48 3))))
(assert (=> (< (- x91 1) 10000) (not (= x91 (+ x2247 3)))))
(assert (x287 1))
(assert (=> (> (+ 10000 1) x1104) (not (= (x2168 1) x1104))))
(assert (not (= (x1912 x558 2) (+ 2 x1765))))
(assert (x951 x433))
(assert (= x2232 (and x1714 (not x2274))))
(assert (x1436 x1624))
(assert (x1436 x1717))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ x433 2))))
(assert (not (= (+ 2 x2247) (+ 3 x2247))))
(assert (x1436 x857))
(assert (x1436 x948))
(assert (x1436 x1340))
(assert (not (= 2743638299 (+ x2247 5))))
(assert (not (= (x1912 x392 3) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (> (+ 10000 1) x238) (not (= (+ 5 x1940) x238))))
(assert (= (=> (and (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1848) x1723) (= (x1998 (+ x226 31)) x1848) (= (or (and (= true (<= x226 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x226)) (> x226 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x184) (= x1270 (x1998 (+ x1723 x1886)))) (and (=> x184 x1700) (=> (not x184) x236))) x229))
(assert (= (or (and x1787 (not x1829)) (and (not x1756) x372)) x2189))
(assert (=> (< (- x1104 1) 10000) (not (= (+ 5 x1940) x1104))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1912 x558 2))))
(assert (x1436 x1073))
(assert (x1436 x552))
(assert (x1436 x511))
(assert (=> (> (+ 10000 1) x1702) (not (= x1702 (x1912 x558 2)))))
(assert (x287 x2141))
(assert (= (and (not x1063) x282) x1592))
(assert (not (= 1684360437 (+ 5 x2247))))
(assert (= x1052 (=> (= (= 0 x2264) x1063) (and (=> (not x1063) x361) (=> x1063 x1700)))))
(assert (=> (> (+ 10000 1) x1566) (not (= x1566 (x1912 x238 2)))))
(assert (x1436 x469))
(assert (x1436 x23))
(assert (= (and x1278 x429) x1089))
(assert (=> (< (- x1982 1) 10000) (not (= x1982 (x1912 x238 2)))))
(assert (x1436 x250))
(assert (x1436 x733))
(assert (= (and (not x1388) x2121) x2032))
(assert (= x173 (and x679 x33)))
(assert (not (= (+ 2 x681) 1461501637330902918203684832716283019655932542976)))
(assert (=> (> (+ 10000 1) x20) (not (= x20 (x1912 x238 2)))))
(assert (not (= 2477345955 (+ 1 x2247))))
(assert (x1436 x1382))
(assert (=> (> (+ 10000 1) x20) (not (= x20 (+ 1 x433)))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ 3 x2247))))
(assert (x1436 x136))
(assert (= (=> (= (= x1362 0) x732) (and (=> x732 x1700) (=> (not x732) x2145))) x574))
(assert (not (= (x1912 x558 2) (+ 3 x2247))))
(assert (=> (< (- x238 1) 10000) (not (= (+ 5 x2247) x238))))
(assert (x1436 x598))
(assert (=> (> (+ 10000 1) x392) (not (= x392 (+ x1765 5)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1912 x392 3))))
(assert (=> (< (- x200 1) 10000) (not (= (+ x2247 1) x200))))
(assert (=> (< (- x1993 1) 10000) (not (= (+ x433 1) x1993))))
(assert (x1436 x602))
(assert (= x1617 (x1011 160)))
(assert (= x1541 (and x421 (not x1790))))
(assert (x1436 x2087))
(assert (= (or (and x1084 (not x2048)) (and (not x297) x1375)) x1113))
(assert (=> (> (+ 10000 1) x64) (not (= (x1912 x238 2) x64))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ x1940 5))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ x433 2))))
(assert (x1436 x1390))
(assert (= x835 (and (not x67) x661)))
(assert (not (= 2477345955 (+ x433 2))))
(assert (x1436 x2259))
(assert (x1436 x1635))
(assert (x1436 x352))
(assert (not (= (x1912 x392 3) 2442716437)))
(assert (= (ite (= x288 x706) 0 (x1332 x288)) (x1895 x288)))
(assert (not (= (+ 2 x2247) 1000000000000000000)))
(assert (x1436 x642))
(assert (not (= (+ 1 x2247) 18446744073709551616)))
(assert (not (= 274184521717934524641157099916833587231 (x1912 x238 2))))
(assert (=> (> (+ 10000 1) x1111) (not (= (+ 3 x1940) x1111))))
(assert (=> (> (+ 10000 1) x1947) (not (= (x1912 x238 2) x1947))))
(assert (not (= 274184521717934524641157099916833587202 (+ 3 x2247))))
(assert (=> (< (- x369 1) 10000) (not (= x369 (x1912 x64 2)))))
(assert (=> (< (- x1993 1) 10000) (not (= x1993 (+ x1940 3)))))
(assert (= (and (not x1105) x1082) x1324))
(assert (x1436 x96))
(assert (= (and x2032 (not x970)) x1995))
(assert (x1436 x63))
(assert (=> (< (- x1425 1) 10000) (not (= x1425 (x1912 x64 2)))))
(assert (not (= (x1912 x238 2) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1436 x1646))
(assert (=> (< (- x2022 1) 10000) (not (= (+ x1765 2) x2022))))
(assert (not (= (x1912 x392 3) 1)))
(assert (not (= 18446744073709551615 (+ x2247 2))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ x2247 4))))
(assert (x1436 x437))
(assert (=> (> (+ 10000 1) x932) (not (= x932 (+ 2 x681)))))
(assert (= (=> (and (= x1027 (x453 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229))) (= (< x1027 x714) x1025) (= x1229 (x883 x2226))) (and (=> (not x1025) x947) (=> x1025 x1700))) x2138))
(assert (= x1885 (and x599 x175)))
(assert (not (= 274184521717934524641157099916833587231 (+ 5 x1765))))
(assert (x1436 x1406))
(assert (not (= (+ x1765 2) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (not (= (+ 2 x1765) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (= (x2292 x628) (ite (and x1675 (not x2207) x2133) (x1248 x628) (ite (and (not x1675) x2133 (not x2207) (not x1347)) (x86 x628) (x1447 x628)))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ x2247 5))))
(assert (x287 x796))
(assert (x1436 x900))
(assert (=> (> (+ 10000 1) x392) (not (= (+ 1 x433) x392))))
(assert (x1436 x1735))
(assert (not (= (+ 1 x433) 2)))
(assert (x1436 x360))
(assert (x1436 x2008))
(assert (x1436 x238))
(assert (not (= (x2168 1) (+ x1765 5))))
(assert (x1436 x2035))
(assert (x1436 x520))
(assert (= (ite (and x1675 (not x2207) x2133) (x138 x2173) (ite (and (not x2207) x2133 (not x1347) (not x1675)) (x907 x2173) (x481 x2173))) (x306 x2173)))
(assert (x1436 x1546))
(assert (= 0 (x1353 x1201)))
(assert (not (= 3 (x1912 x392 3))))
(assert (=> (< (- x1843 1) 10000) (not (= x1843 (x2168 1)))))
(assert (x1436 x1093))
(assert (not (= (x2168 1) 1)))
(assert (=> (> (+ 10000 1) x64) (not (= (+ x1940 5) x64))))
(assert (= x189 (=> (and (= x1368 (= x245 0)) (= (x1876 1461501637330902918203684832716283019655932542975 x651) x20) (= x245 (x1284 x20)) (= (x1836 x129) x651)) (and (=> (and (= x856 (< 0 x1691)) (or (and (= x1618 1) (> 4294967296 x226) x856) (and (= x1691 x1618) (not x856))) (not x1368)) x2175) (=> x1368 x1700)))))
(assert (x1436 x465))
(assert (not (= (+ x433 1) (x1912 x64 2))))
(assert (= (=> (and (= (x696 x1975) x2182) (= x334 (< 0 x2182))) (and (=> (not x334) x1700) (=> x334 x477))) x736))
(assert (=> (> (+ 10000 1) x1843) (not (= x1843 (x1912 x558 2)))))
(assert (not (= 1000000000000000000 (+ x1765 5))))
(assert (x1436 x1043))
(assert (= (=> (and (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1292) x2093) (= (x1998 (+ 31 x1602)) x1292) (= x1040 (x1998 (+ x28 x2093))) (= (or (and (= (<= x1602 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1602)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1602)) x2117)) (and (=> x2117 x1700) (=> (not x2117) x1467))) x361))
(assert (not (= 1684360437 (+ x433 1))))
(assert (not (= (x1912 x392 3) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (not (= 1745775925341846069737700012427326409042627966635005077806405090422919528448 (+ 4 x2247))))
(assert (=> (= (+ 5 x2247) (+ 5 x1940)) (= x558 x64)))
(assert (x1436 x640))
(assert (x1436 x1970))
(assert (= 0 (x471 x259)))
(assert (not (= (+ 1 x355) 274184521717934524641157099916833587202)))
(assert (x287 x420))
(assert (=> (> (+ 10000 1) x558) (not (= (x1912 x558 2) x558))))
(assert (=> (> (+ 10000 1) x1066) (not (= x1066 (+ x2247 1)))))
(assert (=> (> (+ 10000 1) x1066) (not (= (+ x1765 2) x1066))))
(assert (x1436 x993))
(assert (=> (< (- x1425 1) 10000) (not (= (+ x433 1) x1425))))
(assert (x1436 x130))
(assert (=> (> (+ 10000 1) x200) (not (= x200 (+ x1765 2)))))
(assert (= x2217 (=> (and (= (ite (< x2200 x430) 1 0) x2122) (= x840 (ite (not x2234) 1 0)) (= x1802 (= 0 x512)) (= x512 (x1876 x840 x2122)) (= x2234 (= x1414 0)) (= x2200 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414)))) (and (=> x1802 x1134) (=> (not x1802) x1700)))))
(assert (not (= 1000000000000000000 (+ x2247 3))))
(assert (x1436 x1596))
(assert (= (and x1120 x403) x2212))
(assert (x1436 x845))
(assert (not (= (+ x1940 5) (+ x2247 4))))
(assert (x1436 x406))
(assert (x287 x1471))
(assert (not (= 274184521717934524641157099916833587206 (+ 2 x1765))))
(assert (x1436 x338))
(assert (=> (< (- x2022 1) 10000) (not (= (x1912 x238 2) x2022))))
(assert (= (=> (and (= x1233 (x1876 1461501637330902918203684832716283019655932542975 x1750)) (= (x1079 x656) x402) (= x683 128) (= (= x2110 x587) x1955) (= (x1876 1461501637330902918203684832716283019655932542975 x1812) x341) (= (x1998 (+ 160 x1312)) x1485) (= (x1998 (+ x2001 64)) x728) (= x1382 (x1303 x2001)) (= x656 (x1998 (+ x204 64))) (= 1 x1997) (= (x52 x402) x2110) (= (x1998 (+ x1312 64)) x2001) (= x587 (x1231 x1382)) (= (x1998 (+ x1312 32)) x204)) (and (=> (not x1955) x1700) (=> x1955 x1409))) x1352))
(assert (x1436 x112))
(assert (=> (< (- x1111 1) 10000) (not (= (+ 2 x433) x1111))))
(assert (= (or (and (not x1976) x550) (and x2157 x1956) (and x821 x977) (and x983 x1085) (and x431 x1371) (and x572 (not x1985)) (and x358 x930) (and x700 x1518) (and (not x791) x1437) (and x194 x2094) (and x847 x1856) (and x1882 x2197) (and (not x2023) x1227) (and x1714 x2274) (and x458 (not x1883)) (and x585 x1211) (and (not x1520) x492) (and (not x33) x679) (and x1301 x173) (and x1388 x2121) (and x2254 x2003) (and x891 (not x584)) (and x2015 x1813) (and (not x820) x1246) (and (not x235) x629) (and (not x1333) x1321) (and (not x1421) x1295) (and x1514 (not x255)) (and x328 x1368) (and x376 x198) (and x1468 x938) (and x1980 x120) (and x1262 x1972) (and x1331 x7) (and x1780 (not x987)) (and x503 x1974) (and x1035 x1397) (and x1547 x2146) (and x654 x326) (and x56 x1351) (and x1121 x1430) (and x2241 (not x479)) (and x373 x535) (and x1198 (not x542)) (and x1320 x915) (and x1283 x1643) (and x732 x1474) (and x371 x1792) (and x1581 x167) (and (not x2166) x375) (and x166 x2038) (and (not x1278) x429) (and x2209 x2253) (and x1319 x1133) (and x1302 x1528) (and x1090 x1235) (and x1771 x179) (and x1438 x271) (and x2055 (not x1955)) (and x2075 x573) (and x541 x1019) (and x1913 x2021) (and x1827 x2006) (and x1105 x1082) (and (not x60) x571) (and x405 x878) (and (not x1391) x1117) (and x599 (not x175)) (and x852 x676) (and x2207 x2133) (and x1153 x2051) (and x44 (not x1884)) (and (not x669) x774) (and (not x1578) x920) (and (not x1802) x2071) (and (not x2086) x2085) (and x1965 x257) (and x631 x963) (and x1038 x107) (and x1680 (not x85)) (and (not x1216) x1587) (and x1789 x771) (and (not x357) x880) (and x1277 x1119) (and x1042 x2097) (and x766 x613) (and x1743 x1422) (and x1310 x90) (and x284 (not x955)) (and x1068 x1454) (and (not x997) x862) (and x827 x213) (and (not x1727) x1222) (and x516 (not x334)) (and (not x2187) x199) (and x1094 x1186) (and x109 x1242) (and x387 x1946) (and x519 x838) (and (not x1782) x1239) (and x184 x588) (and x869 x1541) (and x959 (not x1275)) (and x1063 x282) (and x2004 x1875) (and x114 x314) (and x2158 x296) (and x2032 x970) (and (not x1403) x83) (and x1840 (not x2273)) (and x2235 x1517) (and x244 (not x1509)) (and (not x496) x192) (and x1636 x2098) (and (not x1561) x928) (and x635 x1511) (and x1583 x1464) (and (not x527) x1835) (and x609 x1808) (and x421 x1790) (and x1341 x754) (and x1549 (not x1072)) (and x264 x2291) (and x2036 x1932) (and (not x2019) x35) (and x2237 x731) (and x843 x2204) (and x1592 x2117) (and (not x1926) x324) (and x72 (not x2126)) (and x1787 x1829) (and x949 x132) (and (not x655) x885) (and x2048 x1084) (and (not x1475) x2232) (and x1230 (not x1922)) (and x1609 x2236) (and x1758 (not x11)) (and x499 x877) (and x595 x483) (and x1020 x1679) (and (not x319) x1703) (and (not x695) x460) (and x1379 x170) (and x2109 x415) (and x936 x142) (and (not x564) x49) (and x1220 (not x2099)) (and x586 x1693) (and (not x729) x1431) (and (not x1586) x1089) (and x457 x504) (and x1992 x881) (and x1483 x1164) (and (not x834) x1238) (and (not x1506) x308) (and x1025 x2190) (and x1490 x281) (and x1254 x638) (and (not x1185) x1408) (and (not x1001) x1928) (and x27 x149) (and (not x1645) x2174) (and x1870 x829) (and x1021 x451) (and x1 x611) (and x1760 x211) (and x697 x2112) (and x1361 (not x1291)) (and (not x1212) x2135) (and x1656 (not x828)) (and x699 x835)) x1630))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x2247 3))))
(assert (=> (< (- x1566 1) 10000) (not (= x1566 (x2168 1)))))
(assert (= x1527 (=> (and (= x997 (< 0 x398)) (= (x52 x803) x398) (= x714 (x2180 x379)) (= (x1079 x656) x803)) (and (=> (not x997) x1700) (=> x997 x1004)))))
(assert (not (= (+ x2247 3) 31123442917456901051708656246501188623764889836880532624742668034502079545344)))
(assert (not (= (+ 2 x433) (x1912 x392 3))))
(assert (x1436 x339))
(assert (not (= (x1912 x392 3) (x2168 1))))
(assert (x1436 x2249))
(assert (x1436 x1033))
(assert (not (= (x1912 x392 3) 1745775925341846069737700012427326409042627966635005077806405090422919528448)))
(assert (= x525 (=> (and (= (< 0 x1452) x2126) (= x102 (- (/ x674 x1614) (uninterp_frac x674 x1614))) (= x1452 (x418 x486))) (and (=> (not x2126) x1700) (=> (and (= x307 (x1998 (+ 32 x486))) (= x515 x1270) x2126) x1149)))))
(assert (=> (> (+ 10000 1) x845) (not (= x845 (+ 1 x2247)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 2 x2247))))
(assert (x1436 x316))
(assert (=> (> (+ 10000 1) x1947) (not (= (+ 5 x1765) x1947))))
(assert (= x722 (=> (and (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1384) x1440) (= x1121 (or (and (< x543 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x543))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x543))) (= x2181 (x1998 (+ x1440 x854))) (= x1384 (x1998 (+ x543 31)))) (and (=> (not x1121) x501) (=> x1121 x1700)))))
(assert (=> (> (+ 10000 1) x1993) (not (= (+ 5 x1765) x1993))))
(assert (=> (> (+ 10000 1) x1536) (not (= x1536 (+ 3 x2247)))))
(assert (not (= (+ 3 x1940) (+ x355 1))))
(assert (not (= 2 (x1912 x392 3))))
(assert (= (and x1220 x2099) x284))
(assert (not (= (+ 5 x2247) 2)))
(assert (= (and x828 x1656) x2241))
(assert (= x2121 (and x2254 (not x2003))))
(assert (not (= 1684360437 (x1912 x64 2))))
(assert (not (= (+ 4 x2247) (+ x355 1))))
(assert (=> (> (+ 10000 1) x735) (not (= x735 (+ 2 x1765)))))
(assert (x1436 x2022))
(assert (x1436 x408))
(assert (not (= (+ x1765 5) (+ 2 x433))))
(assert (=> (> (+ 10000 1) x48) (not (= (+ x2247 4) x48))))
(assert (x1047 x708 x224))
(assert (x1436 x2137))
(assert (not (= 31123442917456901051708656246501188623764889836880532624742668034502079545344 (+ x2247 2))))
(assert (=> (< (- x735 1) 10000) (not (= (x2168 1) x735))))
(assert (not (= (+ 5 x1940) 2442716437)))
(assert (x1697 x1624 x1127 x1142 x1521))
(assert (x287 x1815))
(assert (not (= (x1912 x64 2) 2)))
(assert (= x2133 (and (not x1301) x173)))
(assert (x1436 x664))
(assert (x1436 x1425))
(assert (not (= (+ 1 x2247) 274184521717934524641157099916833587202)))
(assert (not (= (+ 1 x2247) (+ x681 2))))
(assert (=> (> (+ 10000 1) x392) (not (= x392 (+ 1 x355)))))
(assert (not (= 3 (x1912 x48 3))))
(assert (x1436 x131))
(assert (x287 x1449))
(assert (not (= (+ 3 x2247) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (x1912 x238 2) (+ 3 x2247))))
(assert (=> (< (- x932 1) 10000) (not (= (+ 5 x1765) x932))))
(assert (x1436 x842))
(assert (x1436 x2115))
(assert (x1436 x1414))
(assert (not (= (+ x433 2) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= (and x1960 x1809) x1227))
(assert (x1436 x2061))
(assert (x1436 x534))
(assert (x1047 x1948 x1345))
(assert (= (x677 x688) 0))
(assert (=> (< (- x48 1) 10000) (not (= x48 (x2168 1)))))
(assert (x1436 x2079))
(assert (not (= 2442716437 (+ x2247 1))))
(assert (x1436 x509))
(assert (not (= (x1912 x64 2) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (= x670 (=> (and (= (= x1282 0) x114) (= (x1284 x1428) x1282) (= (x1241 x1312) x1753) (= (x1876 1461501637330902918203684832716283019655932542975 x1753) x1428)) (and (=> (and (not x114) (or (and (= x610 1) (> 4294967296 x773) x1279) (and (not x1279) (= x645 x610))) (= (> x645 0) x1279)) x1487) (=> x114 x1700)))))
(assert (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1631 x576)))
(assert (= (=> (and (= (x2278 x575) x25) (= x1868 (x1462 x2173)) (= x1371 (= x1299 0)) (= x770 (x1876 1461501637330902918203684832716283019655932542975 x1868)) (= (x1998 (+ 4 x2226)) x404) (= (x1876 1461501637330902918203684832716283019655932542975 x122) x311) (= (x417 x728) x122) (= (x1284 x770) x1299) (= (x1998 (+ x25 32)) x2173) (= (x1998 (+ 32 x803)) x575)) (and (=> x1371 x1700) (=> (and (= (< 0 x1740) x254) (or (and (> 4294967296 x2034) x254 (= x454 1)) (and (= x454 x1740) (not x254))) (not x1371)) x913))) x1004))
(assert (x1436 x245))
(assert (x1697 x1952 x1779 x1268 x1945))
(assert (x1436 x221))
(assert (= x1514 (and x573 (not x2075))))
(assert (not (= (+ x1765 2) 1745775925341846069737700012427326409042627966635005077806405090422919528448)))
(assert (x1436 x1290))
(assert (not (= 31123442917456901051708656246501188623764889836880532624742668034502079545344 (+ x433 1))))
(assert (=> (> (+ 10000 1) x200) (not (= (+ 4 x2247) x200))))
(assert (x1436 x861))
(assert (= x947 (=> (and (= (x1998 (+ x714 x1229)) x329) (= x906 (= 0 x329))) (and (=> (not x906) x1495) (=> (and x906 (= x2287 x1744)) x450)))))
(assert (x1436 x304))
(assert (x1436 x197))
(assert (=> (< (- x64 1) 10000) (not (= x64 (+ x433 1)))))
(assert (=> (= (+ 2 x1765) (+ x2247 2)) (= x558 x238)))
(assert (not (= (+ 3 x1940) 1461501637330902918203684832716283019655932542976)))
(assert (= (=> (and (= x310 x1410) (= x1040 x2229)) x868) x601))
(assert (not (= (x1912 x238 2) (+ x2247 5))))
(assert (x1436 x2154))
(assert (=> (< (- x735 1) 10000) (not (= x735 (x1912 x48 3)))))
(assert (=> (> (+ 10000 1) x1111) (not (= (+ 1 x433) x1111))))
(assert (not (= (+ 3 x2247) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x1436 x796))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2168 1))))
(assert (not (= 3 (x1912 x64 2))))
(assert (=> (> (+ 10000 1) x558) (not (= (+ x2247 5) x558))))
(assert (x1697 x563 x1761 x836 x1781))
(assert (x1047 x1753 x490))
(assert (= (and (not x1490) x281) x920))
(assert (not (= (+ x1765 2) (x1912 x238 2))))
(assert (x951 x1066))
(assert (= (=> (and (= x1901 x1412) (>= x2186 0) (>= x1735 0) (= (x1069 274184521717934524641157099916833587231) x2061) (= (x1069 274184521717934524641157099916833587206) x439) (= 3 x1173) (<= 0 x2061) (= (<= x1043 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (= x247 x359) (= false x2191) x807 (>= x2123 0) (= x1748 x182) (>= 1461501637330902918203684832716283019655932542975 x1735) (< 99 x1043) (= x1696 x2123) (>= 1461501637330902918203684832716283019655932542975 x1901) (= x1696 x1289) (>= 1461501637330902918203684832716283019655932542975 x2123) (<= 0 x502) (= x1508 2540496021) (<= 0 x1901) (<= x2186 1461501637330902918203684832716283019655932542975) (<= x359 1461501637330902918203684832716283019655932542975) (= (< 0 (x1284 274184521717934524641157099916833587206)) x807) (= x815 false) x19 (= x1471 x900) (= false x1576) (<= 0 x439) (= x1735 x247) x668 (= x1449 x171) (= x1750 x1611) (= (x1069 274184521717934524641157099916833587202) x502) (= (< 0 (x1284 274184521717934524641157099916833587231)) x668) (= x1644 false) (>= x359 0) (= (> (x1284 274184521717934524641157099916833587202) 0) x19)) x484) x1000))
(assert (not (= (x2168 1) 2477345955)))
(assert (not (= (x1912 x558 2) (x1912 x48 3))))
(assert (not (= (x1912 x48 3) (+ 5 x1765))))
(assert (not (= (+ x2247 2) 1461501637330902918203684832716283019655932542975)))
(assert (x1436 x1612))
(assert (not (= (+ x1940 5) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (not (= 1684360437 (x2168 1))))
(assert (= (and x1451 (not x1704)) x1239))
(assert (not (= (+ 2 x1765) 18446744073709551615)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1912 x392 3))))
(assert (=> (> (+ 10000 1) x48) (not (= (+ x1765 2) x48))))
(assert (=> (< (- x1033 1) 10000) (not (= x1033 (+ 2 x2247)))))
(assert (x1436 x148))
(assert (=> (> (+ 10000 1) x238) (not (= (+ x1765 5) x238))))
(assert (x1436 x590))
(assert (x287 x1839))
(assert (= x371 (and x1549 x1072)))
(assert (= x1899 (and (not x1956) x2157)))
(assert (not (= 1745775925341846069737700012427326409042627966635005077806405090422919528448 (x1912 x238 2))))
(assert (x1436 x2141))
(assert (= x2085 x741))
(assert (x1958 x38 x1184))
(assert (not (= (+ x1940 3) 274184521717934524641157099916833587206)))
(assert (=> (> (+ 10000 1) x64) (not (= x64 (+ x1765 2)))))
(assert (x1958 x1579 x473))
(assert (x1436 x1189))
(assert (x1436 x1225))
(assert (not (= (+ x433 2) (x1912 x558 2))))
(assert (not (= (x1912 x48 3) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x951 x1111))
(assert (=> (< (- x1428 1) 10000) (not (= (x1912 x392 3) x1428))))
(assert (=> (> (+ 10000 1) x857) (not (= x857 (+ 1 x355)))))
(assert (x1436 x1244))
(assert (x1436 x258))
(assert (= x123 (=> (= (ite (= 0 x1824) (= x1824 0) (= x1494 0)) x487) (and (=> (not x487) x1335) (=> (and x487 (= x134 x182)) x1226)))))
(assert (not (= (+ x433 1) 1461501637330902918203684832716283019655932542975)))
(assert (x287 x2289))
(assert (x1436 x728))
(assert (= (and x1341 (not x754)) x1153))
(assert (=> (> (+ 10000 1) x1993) (not (= (+ 2 x2247) x1993))))
(assert (not (= (+ 5 x1940) (x1912 x238 2))))
(assert (= x1277 (and (not x1211) x585)))
(assert (x287 x1218))
(assert (x1436 x1716))
(assert (not (= (+ 2 x681) 3)))
(assert (x1436 x1880))
(assert (not (= (x1912 x238 2) 2477345955)))
(assert (=> (< (- x1677 1) 10000) (not (= x1677 (x1912 x48 3)))))
(assert (= x891 (and x1974 (not x503))))
(assert (=> (> (+ 10000 1) x392) (not (= x392 (+ 2 x681)))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ 1 x433))))
(assert (not (= (+ 2 x1765) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (+ x2247 4) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (< (- x1677 1) 10000) (not (= (+ x2247 5) x1677))))
(assert (=> (> (+ 10000 1) x816) (not (= x816 (x1912 x48 3)))))
(assert (not (= (+ x355 1) 2743638299)))
(assert (=> (< (- x1993 1) 10000) (not (= (+ 1 x2247) x1993))))
(assert (x1436 x177))
(assert (x1436 x1664))
(assert (= (x138 x2173) 0))
(assert (= x2262 (=> (and (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x540) x1329) (= (or (and (< x546 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x546))) (> x546 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2015) (= x147 (x1998 (+ x1329 x576))) (= (x1998 (+ x546 31)) x540)) (and (=> x2015 x1700) (=> (not x2015) x783)))))
(assert (x1436 x413))
(assert (x1436 x2200))
(assert (=> (> (+ 10000 1) x932) (not (= (+ 2 x2247) x932))))
(assert (x1436 x1298))
(assert (x1436 x1289))
(assert (=> (< (- x857 1) 10000) (not (= (+ x433 2) x857))))
(assert (x1436 x1146))
(assert (x1047 x1429 x1139))
(assert (= (=> (and (= (x1876 1461501637330902918203684832716283019655932542975 x1471) x1056) (= (= x1056 x1471) x1561) (= x2178 x900)) (and (=> x1561 x1006) (=> (not x1561) x1700))) x58))
(assert (x1436 x1535))
(assert (not (= 2743638299 (+ 2 x1765))))
(assert (=> (> (+ 10000 1) x200) (not (= (+ 2 x681) x200))))
(assert (not (= 2477345955 (+ x2247 3))))
(assert (=> (< (- x1677 1) 10000) (not (= (x1912 x558 2) x1677))))
(assert (=> (> (+ 10000 1) x1702) (not (= (x1912 x64 2) x1702))))
(assert (x1436 x495))
(assert (x951 x238))
(assert (=> (> (+ 10000 1) x200) (not (= (+ x433 2) x200))))
(assert (= (=> (= (= 0 x2259) x109) (and (=> (not x109) x689) (=> x109 x1700))) x1469))
(assert (not (= 1745775925341846069737700012427326409042627966635005077806405090422919528448 (x1912 x48 3))))
(assert (=> (> (+ 10000 1) x816) (not (= (+ x2247 2) x816))))
(assert (= x159 (=> (= (= 0 x1632) x1211) (and (=> (not x1211) x1888) (=> x1211 x1700)))))
(assert (x1436 x342))
(assert (x1958 x343 x1699))
(assert (x1436 x2110))
(assert (=> (> (+ 10000 1) x392) (not (= x392 (x1912 x558 2)))))
(assert (= (=> (= x541 (= 0 x1862)) (and (=> x541 x1700) (=> (not x541) x1159))) x447))
(assert (not (= 18446744073709551615 (x1912 x558 2))))
(assert (= (x2 x300) 0))
(assert (not (= 1745775925341846069737700012427326409042627966635005077806405090422919528448 (+ 1 x433))))
(assert (not (= (+ x2247 1) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (not (= (+ 2 x2247) 274184521717934524641157099916833587202)))
(assert (=> (> (+ 10000 1) x735) (not (= x735 (+ 2 x681)))))
(assert (= (=> (and (= x717 (x1231 x221)) (= (> x717 0) x834)) (and (=> x834 x1934) (=> (not x834) x1700))) x2027))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ x1765 5))))
(assert (not (= (+ 1 x433) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (=> (> (+ 10000 1) x857) (not (= (+ 3 x2247) x857))))
(assert (x1436 x1659))
(assert (not (= 18446744073709551615 (x1912 x48 3))))
(assert (x1436 x171))
(assert (x1436 x2178))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1912 x238 2))))
(assert (not (= 1 (+ 5 x1765))))
(assert (x1436 x543))
(assert (=> (> (+ 10000 1) x932) (not (= (+ x2247 5) x932))))
(assert (= x850 (or (and x1922 x1230) (and x1828 x273))))
(assert (not (= (+ 5 x1940) 3)))
(assert (not (= (+ 5 x2247) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (> (+ 10000 1) x200) (not (= x200 (x1912 x392 3)))))
(assert (x1436 x2149))
(assert (= x937 (=> (and (= x980 (x1284 x1104)) (= x1104 (x1876 1461501637330902918203684832716283019655932542975 x900)) (= x1438 (= x980 0)) (= (x1998 (+ 4 x1206)) x2008)) (and (=> (and (not x1438) (= (< 0 x1659) x13) (or (and (< x360 4294967296) (= x1653 1) x13) (and (= x1659 x1653) (not x13)))) x214) (=> x1438 x1700)))))
(assert (x1436 x627))
(assert (not (= (+ 2 x681) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (=> (< (- x64 1) 10000) (not (= x64 (+ x681 2)))))
(assert (not (= (+ 3 x1940) 2540496021)))
(assert (=> (> (+ 10000 1) x1947) (not (= (x1912 x558 2) x1947))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1912 x238 2))))
(assert (= (x1489 x258) 0))
(assert (x1436 x424))
(assert (=> (= (x1912 x64 2) (x1912 x558 2)) (= x558 x64)))
(assert (=> (> (+ 10000 1) x1066) (not (= (+ x1940 3) x1066))))
(assert (x1436 x1849))
(assert (=> (< (- x1702 1) 10000) (not (= x1702 (+ 1 x433)))))
(assert (x1436 x723))
(assert (= (and x1875 (not x2004)) x928))
(assert (x1436 x2194))
(assert (=> (< (- x735 1) 10000) (not (= (x1912 x238 2) x735))))
(assert (x1436 x113))
(assert (= (and x2253 (not x2209)) x1789))
(assert (x1436 x1312))
(assert (= (=> (and (= (x1825 x1465) x1855) (= x1319 (< 1000000000000000000 x1855))) (and (=> (not x1319) x1359) (=> x1319 x1700))) x958))
(assert (not (= (+ 2 x681) 274184521717934524641157099916833587231)))
(assert (x1436 x307))
(assert (=> (> (+ 10000 1) x1993) (not (= x1993 (x1912 x48 3)))))
(assert (=> (> (+ 10000 1) x1947) (not (= x1947 (+ 1 x355)))))
(assert (x1436 x569))
(assert (x1436 x1452))
(assert (not (= (+ 5 x1765) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (not (= (x1912 x64 2) 18446744073709551615)))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ x355 1))))
(assert (=> (< (- x845 1) 10000) (not (= (+ 4 x2247) x845))))
(assert (not (= (+ 5 x1765) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (< (- x1111 1) 10000) (not (= (+ x2247 3) x1111))))
(assert (= (=> (and (= x2159 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1406))) (= (> x1717 x2159) x1882)) (and (=> (and (= x2223 x1614) (= (uninterp_mod (* x1406 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2223) (not x1882)) x2217) (=> x1882 x1700))) x1732))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ x2247 2))))
(assert (not (= (+ 3 x2247) 2)))
(assert (x1436 x709))
(assert (x287 x2077))
(assert (x1436 x674))
(assert (=> (> (+ 10000 1) x1677) (not (= x1677 (x1912 x392 3)))))
(assert (x1436 x916))
(assert (= (ite (and (not x132) x548 x949) (x1725 x1988) (x823 x1988)) (x2192 x1988)))
(assert (not (= (x1912 x558 2) (x2168 1))))
(assert (x1436 x1670))
(assert (= (=> (and (= (> x1404 0) x1291) (= (x696 x1975) x1404)) (and (=> (not x1291) x1700) (=> x1291 x137))) x1377))
(assert (x1436 x2286))
(assert (=> (> (+ 10000 1) x91) (not (= x91 (+ x1765 2)))))
(assert (=> (< (- x1843 1) 10000) (not (= x1843 (+ x355 1)))))
(assert (x1047 x1484 x1400))
(assert (not (= (+ 3 x2247) (+ x2247 4))))
(assert (not (= (+ x2247 3) 1745775925341846069737700012427326409042627966635005077806405090422919528448)))
(assert (x287 x1496))
(assert (not (= 2540496021 (x1912 x392 3))))
(assert (x1436 x1948))
(assert (= (and x358 (not x930)) x1422))
(assert (not (= (+ x355 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (< (- x64 1) 10000) (not (= x64 (x2168 1)))))
(assert (not (= 2477345955 (+ 5 x2247))))
(assert (x1436 x71))
(assert (not (= (+ 5 x1940) (x1912 x392 3))))
(assert (x1436 x769))
(assert (x1436 x1432))
(assert (x1436 x228))
(assert (not (= (x1912 x64 2) 1)))
(assert (not (= (+ 2 x2247) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1912 x238 2))))
(assert (x287 x228))
(assert (=> (> (+ 10000 1) x1566) (not (= x1566 (x1912 x48 3)))))
(assert (= (or x2100 (and (not x1538) x1137)) x1375))
(assert (= 0 (x1489 x904)))
(assert (not (= (x2168 1) (x1912 x48 3))))
(assert (not (= (+ x681 2) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 18446744073709551616 (+ x1765 5))))
(assert (= x1504 (=> (and (= (x1876 1461501637330902918203684832716283019655932542975 x900) x1290) (= x2013 (x1998 (+ 4 x854))) (= (x1998 (+ x854 36)) x2079) (= x857 (x1876 1461501637330902918203684832716283019655932542975 x1812)) (= (= x1080 0) x1790) (= (x1284 x857) x1080)) (and (=> x1790 x1700) (=> (and (= (> x2250 0) x1059) (or (and (not x1059) (= x2250 x1730)) (and (= x1730 1) x1059 (< x543 4294967296))) (not x1790)) x2165)))))
(assert (x1436 x1938))
(assert (x287 x495))
(assert (x1436 x1708))
(assert (= (and (not x296) x2158) x843))
(assert (not (= 2442716437 (x1912 x64 2))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ x2247 1))))
(assert (not (= 1000000000000000000 (+ x355 1))))
(assert (x1436 x1410))
(assert (not (= (+ x2247 2) 274184521717934524641157099916833587231)))
(assert (= (=> (and (= (x1836 x1664) x39) (= (x1876 1461501637330902918203684832716283019655932542975 x39) x844) (= x977 (= x316 0)) (= (x1876 1461501637330902918203684832716283019655932542975 x2065) x816) (= x1664 (x1998 (+ x904 32))) (= (x1998 (+ x1744 36)) x94) (= x1600 (x1998 (+ x1744 4))) (= x316 (x1284 x816)) (= x1937 (x1876 1461501637330902918203684832716283019655932542975 x2231))) (and (=> x977 x1700) (=> (and (or (and (not x2216) (= x97 x861)) (and x2216 (< x377 4294967296) (= x861 1))) (= x2216 (> x97 0)) (not x977)) x274))) x619))
(assert (x1436 x680))
(assert (x1436 x909))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ 5 x1940))))
(assert (x1697 x1493 x1208 x757 x1816))
(assert (not (= (+ 1 x355) 274184521717934524641157099916833587231)))
(assert (x1436 x1493))
(assert (=> (> (+ 10000 1) x1066) (not (= (+ 2 x681) x1066))))
(assert (= x768 (=> (and (= x309 (x418 x486)) (= x1985 (< 0 x309))) (and (=> (not x1985) x1700) (=> x1985 x608)))))
(assert (=> (< (- x816 1) 10000) (not (= x816 (x2168 1)))))
(assert (=> (< (- x238 1) 10000) (not (= (x1912 x238 2) x238))))
(assert (=> (< (- x369 1) 10000) (not (= x369 (+ 2 x681)))))
(assert (= (and (not x1820) x1688) x314))
(assert (x1436 x1412))
(assert (not (= (+ 2 x681) (+ x1940 3))))
(assert (x1436 x652))
(assert (=> (> (+ 10000 1) x1066) (not (= x1066 (+ x355 1)))))
(assert (=> (> (+ 10000 1) x20) (not (= x20 (+ x2247 4)))))
(assert (=> (> (+ 10000 1) x816) (not (= x816 (+ x1940 5)))))
(assert (= (=> (= (= 0 x2103) x930) (and (=> (not x930) x299) (=> x930 x1700))) x1308))
(assert (not (= (+ 5 x2247) 18446744073709551615)))
(assert (x1436 x1702))
(assert (not (= (+ 1 x433) (+ x1940 3))))
(assert (= x1559 (=> (and (= x220 (uninterp_mod (* x625 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1922 (> x2184 0))) (and (=> (and (= x530 (- (/ x220 x2184) (uninterp_frac x220 x2184))) (= x530 x1908) x1922) x1253) (=> (not x1922) x1700)))))
(assert (not (= (x1912 x392 3) (+ 2 x2247))))
(assert (x1436 x2264))
(assert (x287 x1833))
(assert (x951 x392))
(assert (not (= (+ x2247 1) (+ x1940 5))))
(assert (not (= (x1912 x558 2) (+ 1 x433))))
(assert (= (=> (= x1583 (= 0 x2064)) (and (=> x1583 x1700) (=> (not x1583) x2262))) x1118))
(assert (= 0 (x1534 x1189)))
(assert (x1436 x226))
(assert (=> (< (- x770 1) 10000) (not (= x770 (+ x1940 3)))))
(assert (= x913 (=> (= (= x454 0) x1310) (and (=> x1310 x1700) (=> (not x1310) x884)))))
(assert (x1436 x2243))
(assert (x1436 x1014))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x1765 5))))
(assert (not (= 1745775925341846069737700012427326409042627966635005077806405090422919528448 (x2168 1))))
(assert (=> (> (+ 10000 1) x2022) (not (= (x1912 x64 2) x2022))))
(assert (= (and x1113 (not x1100)) x1117))
(assert (=> (> (+ 10000 1) x816) (not (= (+ 5 x2247) x816))))
(assert (= x766 (and x1870 (not x829))))
(assert (x1436 x686))
(assert (not (= (+ 3 x1940) (+ 5 x2247))))
(assert (x1436 x2122))
(assert (= x2052 (=> (and (= x380 (x1284 x2022)) (= (= 0 x380) x1331) (= x1484 (x1836 x1274)) (= (x1876 1461501637330902918203684832716283019655932542975 x1484) x2022)) (and (=> x1331 x1700) (=> (and (or (and (not x1582) (= x1596 x2064)) (and (< x546 4294967296) (= x2064 1) x1582)) (not x1331) (= x1582 (< 0 x1596))) x1118)))))
(assert (x1436 x1471))
(assert (x1436 x39))
(assert (x1436 x318))
(assert (x1436 x1839))
(assert (=> (> (+ 10000 1) x1993) (not (= x1993 (x1912 x392 3)))))
(assert (x1436 x434))
(assert (=> (> (+ 10000 1) x845) (not (= (+ x1765 5) x845))))
(assert (x1958 x620 x1496))
(assert (x1436 x702))
(assert (x287 x735))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1912 x392 3))))
(assert (= (or (and x99 (not x2136)) (and (not x1068) x1454) (and x347 (not x302))) x244))
(assert (=> (> (+ 10000 1) x1677) (not (= (+ 2 x433) x1677))))
(assert (=> (< (- x1428 1) 10000) (not (= x1428 (+ 5 x2247)))))
(assert (= (x1011 x1274) (ite (= 160 x1274) x1617 (x1534 x1274))))
(assert (not (= (+ 4 x2247) (+ 2 x2247))))
(assert (= (x755 x612) 10894474682274239493831243662817379401261526446360622092269559273883068006400))
(assert (not (= 274184521717934524641157099916833587206 (+ x1940 5))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ x433 1))))
(assert (x951 x735))
(assert (x1436 x515))
(assert (=> (> (+ 10000 1) x1947) (not (= (x1912 x48 3) x1947))))
(assert (= x1194 (=> (and (= (uninterp_mod (* x664 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1343) (= x1699 (ite (< x1077 x1181) 1 0)) (= (- (/ x1343 1000000000000000000) (uninterp_frac x1343 1000000000000000000)) x948) (= (ite (not x1419) 1 0) x343) (= x1831 (x1876 x343 x1699)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948)) x1077) (= x1645 (= x1831 0)) (= (= 0 x948) x1419)) (and (=> x1645 x2271) (=> (not x1645) x1700)))))
(assert (=> (< (- x558 1) 10000) (not (= (x1912 x48 3) x558))))
(assert (=> (> (+ 10000 1) x770) (not (= x770 (+ 5 x2247)))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1912 x558 2))))
(assert (=> (< (- x857 1) 10000) (not (= x857 (+ x681 2)))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ x2247 5))))
(assert (=> (< (- x1916 1) 10000) (not (= (+ 2 x681) x1916))))
(assert (= (=> (and (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x897)) (< x897 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x897)) x2274) (= x233 (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x602)) (= (x1998 (+ x2195 x233)) x205) (= (x1998 (+ 31 x897)) x602)) (and (=> x2274 x1700) (=> (not x2274) x536))) x1159))
(assert (x1436 x813))
(assert (=> (< (- x48 1) 10000) (not (= (+ x2247 3) x48))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ x433 2))))
(assert (not (= (x1912 x238 2) (+ x2247 2))))
(assert (x1436 x714))
(assert (=> (< (- x932 1) 10000) (not (= x932 (x1912 x392 3)))))
(assert (x287 x1128))
(assert (not (= (x1912 x392 3) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (x1436 x1826))
(assert (x1436 x2148))
(assert (x1047 x900 x24))
(assert (= x667 (=> (and (= (x1998 (+ x2056 x150)) x2195) (= x960 (x1998 (+ 31 x136))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x136) (and (= true (<= x136 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x136))) x194) (= x150 (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x960))) (and (=> x194 x1700) (=> (not x194) x1591)))))
(assert (= (x461 x1201) (ite (and x41 (not x1105) x1082) (x1353 x1201) (x242 x1201))))
(assert (not (= (+ x2247 5) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 1 x2247))))
(assert (= (x1376 x106) (ite (= x1910 x106) x2220 (x143 x106))))
(assert (= x1163 (=> (and (= x1261 (x1998 (+ 64 x488))) (= (x1284 x1982) x950) (= (x1876 1461501637330902918203684832716283019655932542975 x39) x2087) (= x1650 (x1876 1461501637330902918203684832716283019655932542975 x2231)) (= x1510 (x1998 (+ x1988 36))) (= (x1998 (+ 4 x1988)) x488) (= (= x950 0) x132)) (and (=> (and (not x132) (= x548 (> x304 0)) (or (and (not x548) (= x304 x160)) (and (< x63 4294967296) (= x160 1) x548))) x1478) (=> x132 x1700)))))
(assert (x1436 x1080))
(assert (not (= 2442716437 (+ x1940 3))))
(assert (x1436 x379))
(assert (not (= (+ x2247 4) 3)))
(assert (=> (> (+ 10000 1) x1536) (not (= x1536 (+ 2 x433)))))
(assert (x1436 x1855))
(assert (= x2157 (and x1001 x1928)))
(assert (x1436 x2065))
(assert (x1436 x971))
(assert (not (= (x2168 1) 1461501637330902918203684832716283019655932542975)))
(assert (= (ite (and x2133 x1675 (not x2207)) (x1332 x288) (ite (and x2133 (not x2207) (not x1347) (not x1675)) (x1895 x288) (x493 x288))) (x996 x288)))
(assert (x1436 x42))
(assert (x1436 x2169))
(assert (= (or (and (not x1809) x1960) x1444) x1928))
(assert (x1436 x1152))
(assert (not (= (+ x433 2) (+ 3 x2247))))
(assert (not (= 1000000000000000000 (+ 2 x1765))))
(assert (=> (< (- x1843 1) 10000) (not (= (+ 2 x1765) x1843))))
(assert (x1436 x332))
(assert (x287 x408))
(assert (=> (> (+ 10000 1) x200) (not (= x200 (x1912 x558 2)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ x433 1))))
(assert (x1436 x1201))
(assert (= (and x584 x891) x915))
(assert (not (= (+ 3 x1940) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (=> (> (+ 10000 1) x1104) (not (= (+ 2 x433) x1104))))
(assert (=> (> (+ 10000 1) x369) (not (= (+ 5 x2247) x369))))
(assert (= (x138 x362) 0))
(assert (not (= (+ 4 x2247) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (=> (> (+ 10000 1) x1066) (not (= (x1912 x238 2) x1066))))
(assert (x1436 x298))
(assert (= (=> (and (= (x1284 x1947) x1154) (= x699 (= 0 x1154)) (= (x1876 1461501637330902918203684832716283019655932542975 x900) x1947) (= x1057 (x1998 (+ 4 x2195)))) (and (=> (and (or (and (not x1690) (= x37 x1862)) (and x1690 (= 1 x1862) (> 4294967296 x897))) (not x699) (= x1690 (> x37 0))) x447) (=> x699 x1700))) x2239))
(assert (x1436 x419))
(assert (not (= (x1912 x558 2) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (< (- x20 1) 10000) (not (= (+ x1765 5) x20))))
(assert (not (= (+ x1765 2) (+ 2 x681))))
(assert (x951 x932))
(assert (x1436 x565))
(assert (= x1044 (=> (and (= x570 (x418 x486)) (= x1189 (x1998 (+ x291 32))) (= (x1836 x1189) x2077) (= x955 (> x570 0))) (and (=> (not x955) x1700) (=> x955 x1999)))))
(assert (not (= 274184521717934524641157099916833587206 (x1912 x558 2))))
(assert (= x1703 (or (and x1108 x1267) x850)))
(assert (= x1974 (and x535 (not x373))))
(assert (x1436 x367))
(assert (not (= (x2168 1) 18446744073709551616)))
(assert (x1697 x1322 x1460 x1951 x1689))
(assert (= 0 (x66 x321)))
(assert (x287 x1628))
(assert (=> (> (+ 10000 1) x392) (not (= x392 (+ x2247 1)))))
(assert (= (=> (and (= (ite (= x801 0) (= x801 0) (= 0 x1426)) x77) (= x801 (x604 x28))) (and (=> (not x77) x1070) (=> (and (= 0 x1410) x77) x601))) x1467))
(assert (=> (> (+ 10000 1) x1702) (not (= x1702 (x1912 x48 3)))))
(assert (=> (< (- x845 1) 10000) (not (= x845 (+ 2 x2247)))))
(assert (x1436 x1852))
(assert (=> (< (- x20 1) 10000) (not (= x20 (+ x2247 2)))))
(assert (x759 x2002 x1971))
(assert (not (= (x1912 x392 3) 1684360437)))
(assert (=> (< (- x735 1) 10000) (not (= x735 (+ x1765 5)))))
(assert (= x192 (and (not x77) x1638)))
(assert (not (= (x1912 x64 2) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (=> (> (+ 10000 1) x2022) (not (= (+ x433 2) x2022))))
(assert (= (x2290 x106) (ite (and x838 (not x519) x1155) (x401 x106) (x1376 x106))))
(assert (x1436 x2042))
(assert (= x1246 (and x1780 x987)))
(assert (not (= 31123442917456901051708656246501188623764889836880532624742668034502079545344 (+ 1 x355))))
(assert (=> (< (- x1111 1) 10000) (not (= x1111 (+ 1 x2247)))))
(assert (x287 x740))
(assert (= (and (not x847) x1856) x1133))
(assert (=> (> (+ 10000 1) x1104) (not (= x1104 (+ 2 x681)))))
(assert (x287 x1322))
(assert (x1436 x289))
(assert (not (= (+ x1765 5) 18446744073709551615)))
(assert (=> (< (- x845 1) 10000) (not (= x845 (x1912 x64 2)))))
(assert (=> (< (- x558 1) 10000) (not (= x558 (+ 2 x2247)))))
(assert (=> (< (- x1982 1) 10000) (not (= (+ x2247 5) x1982))))
(assert (x1436 x994))
(assert (x287 x1611))
(assert (not (= 4294967296 (+ x433 1))))
(assert (=> (> (+ 10000 1) x857) (not (= x857 (+ x2247 1)))))
(assert (x1047 x1750 x1542))
(assert (x1047 x2231 x108))
(assert (= (and x1153 (not x2051)) x938))
(assert (=> (> (+ 10000 1) x770) (not (= x770 (+ x2247 2)))))
(assert (=> (< (- x932 1) 10000) (not (= x932 (+ 1 x2247)))))
(assert (x1436 x727))
(assert (not (= (+ 4 x2247) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (= (x1098 x112) (ite (= x241 x112) x1663 (x1258 x112))))
(assert (=> (> (+ 10000 1) x1111) (not (= x1111 (+ x1940 5)))))
(assert (= x1015 (=> (= x2098 (= x1755 0)) (and (=> x2098 x1700) (=> (not x2098) x1584)))))
(assert (=> (< (- x1566 1) 10000) (not (= (+ 1 x355) x1566))))
(assert (x1436 x240))
(assert (=> (< (- x770 1) 10000) (not (= x770 (x2168 1)))))
(assert (=> (> (+ 10000 1) x816) (not (= x816 (+ x1765 2)))))
(assert (= (=> (and (= (x1231 x221) x345) (= (< 18446744073709551615 x345) x457)) (and (=> x457 x1700) (=> (and (= x112 (x1998 (+ x2104 x916))) (= (x1998 (+ x185 32)) x2104) (= x1175 (= x345 0)) (= (uninterp_mod (* x345 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x185) (or x1175 (and (= x2193 (x1998 (+ x916 32))) (= x1205 (uninterp_mod (* 32 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x1175))) (not x457)) x1036))) x1445))
(assert (not (= 1684360437 (+ x2247 3))))
(assert (not (= (+ x433 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x1436 x1868))
(assert (=> (< (- x1677 1) 10000) (not (= (+ x2247 3) x1677))))
(assert (not (= (+ 1 x2247) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (< (- x1536 1) 10000) (not (= (+ 1 x433) x1536))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ x2247 4))))
(assert (x1436 x896))
(assert (= x166 (and x1946 (not x387))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1912 x64 2))))
(assert (x1436 x1707))
(assert (= x1980 (and (not x1235) x1090)))
(assert (not (= (+ 5 x1940) 2743638299)))
(assert (= x1302 (and (not x827) x213)))
(assert (not (= (+ 4 x2247) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (not (= (+ x1940 3) 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (=> (> (+ 10000 1) x1111) (not (= (x1912 x48 3) x1111))))
(assert (=> (> (+ 10000 1) x735) (not (= x735 (x1912 x392 3)))))
(assert (x1436 x1151))
(assert (not (= (+ x681 2) (+ x2247 3))))
(assert (= x499 (and x314 (not x114))))
(assert (x1436 x1536))
(assert (x1436 x1745))
(assert (not (= (+ 2 x1765) (+ 5 x2247))))
(assert (=> (> (+ 10000 1) x1425) (not (= (x1912 x392 3) x1425))))
(assert (x1436 x1773))
(assert (=> (< (- x2022 1) 10000) (not (= (x1912 x48 3) x2022))))
(assert (x1436 x1292))
(assert (x1436 x576))
(assert (=> (= (+ x433 2) (+ x681 2)) (= x48 x392)))
(assert (=> (> (+ 10000 1) x91) (not (= (+ 2 x433) x91))))
(assert (not (= (x1912 x64 2) 2540496021)))
(assert (x1047 x2210 x153))
(assert (= x1774 (=> (and (= (x1998 (+ x1432 x432)) x270) (= (< x964 x1745) x1094) (<= x1745 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x433 1) x2268) (= (x453 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1806)) x964) (<= 0 x1745) (= x1745 (x26 x2268))) (and (=> (and (= x1719 (x1876 18446744073709551615 x1449)) (= x1363 (x1998 (+ x1806 x1745))) (not x1094) (= x1778 x1399)) x1986) (=> x1094 x1700)))))
(assert (not (= (+ 5 x1940) (x2168 1))))
(assert (x1436 x854))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ 1 x433))))
(assert (x1436 x512))
(assert (=> (< (- x1566 1) 10000) (not (= x1566 (+ x2247 3)))))
(assert (x1436 x1803))
(assert (=> (> (+ 10000 1) x845) (not (= (+ x433 2) x845))))
(assert (x1436 x186))
(assert (= x700 (and (not x132) x949)))
(assert (x1436 x1182))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1912 x558 2))))
(assert (x287 x2210))
(assert (=> (< (- x1993 1) 10000) (not (= x1993 (x1912 x558 2)))))
(assert (not (= 18446744073709551615 (+ x433 1))))
(assert (x1436 x2179))
(assert (= (or (and x2126 x72) (and x1704 x1451)) x2267))
(assert (=> (< (- x1566 1) 10000) (not (= x1566 (+ 2 x681)))))
(assert (=> (> (+ 10000 1) x1111) (not (= (+ x2247 4) x1111))))
(assert (=> (< (- x200 1) 10000) (not (= (+ x1940 5) x200))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1912 x392 3))))
(assert (=> (< (- x48 1) 10000) (not (= (x1912 x558 2) x48))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1912 x238 2))))
(assert (not (= (+ 2 x681) 4294967296)))
(assert (=> (> (+ 10000 1) x845) (not (= x845 (+ x1765 2)))))
(assert (= (=> (and (= x1340 (uninterp_mod (* x523 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< 0 x1961) x791)) (and (=> (and x791 (= (- (/ x1340 x1961) (uninterp_frac x1340 x1961)) x1801) (= x813 x1801)) x183) (=> (not x791) x1700))) x528))
(assert (=> (< (- x1566 1) 10000) (not (= x1566 (+ 5 x2247)))))
(assert (= (x748 x1148) (ite (and (not x2207) x2133 x1675) (x780 x1148) (ite (and x2133 (not x1347) (not x1675) (not x2207)) (x2025 x1148) (x374 x1148)))))
(assert (=> (> (+ 10000 1) x932) (not (= (x1912 x48 3) x932))))
(assert (= (x780 x2188) 0))
(assert (x1436 x1806))
(assert (x1436 x1617))
(assert (= x213 (and x880 x357)))
(assert (= x871 (=> (= x1528 (= x1411 0)) (and (=> x1528 x1700) (=> (not x1528) x1013)))))
(assert (=> (> (+ 10000 1) x1702) (not (= x1702 (+ x1765 5)))))
(assert (= (and x2097 (not x1042)) x862))
(assert (= x599 (and (not x957) x2189)))
(assert (x1436 x779))
(assert (not (= 3 (+ x1940 3))))
(assert (=> (< (- x558 1) 10000) (not (= x558 (+ x2247 3)))))
(assert (x1436 x837))
(assert (not (= 1 (+ 5 x2247))))
(assert (= x1433 (=> (and (= x301 (x1231 x291)) (= x2099 (< 0 x301))) (and (=> x2099 x1044) (=> (not x2099) x1700)))))
(assert (= (=> (= (= x195 0) x264) (and (=> (not x264) x667) (=> x264 x1700))) x1075))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ x681 2))))
(assert (=> (> (+ 10000 1) x857) (not (= x857 (+ 2 x2247)))))
(assert (x1436 x1937))
(assert (not (= (+ 1 x433) 2743638299)))
(assert (= (and x1239 x1782) x2158))
(assert (= (=> (and (= (x1247 x1124) x1494) (= (ite (= x1824 0) (= 0 x1824) (= x1494 0)) x1174) (= x1824 (x1861 x2056)) (= (+ x1765 5) x1124) (>= x1494 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1494)) (and (=> (not x1174) x2172) (=> (and x1174 (= x994 0)) x1338))) x1591))
(assert (x1436 x1217))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ 1 x433))))
(assert (x1436 x1971))
(assert (= x983 (and x2021 (not x1913))))
(assert (x287 x1477))
(assert (not (= (+ x1765 5) (x1912 x238 2))))
(assert (= (ite (= x1603 x362) 0 (x138 x362)) (x907 x362)))
(assert (=> (< (- x200 1) 10000) (not (= x200 (+ x1765 5)))))
(assert (=> (< (- x735 1) 10000) (not (= (+ x2247 4) x735))))
(assert (x287 x469))
(assert (not (= (+ x2247 4) (+ x1940 3))))
(assert (not (= 3 (+ 1 x2247))))
(assert (=> (< (- x1566 1) 10000) (not (= x1566 (x1912 x558 2)))))
(assert (=> (< (- x1536 1) 10000) (not (= (+ x681 2) x1536))))
(assert (=> (< (- x2022 1) 10000) (not (= x2022 (+ 5 x1940)))))
(assert (= (and x1587 x1216) x885))
(assert (=> (> (+ 10000 1) x392) (not (= (x1912 x48 3) x392))))
(assert (x1047 x651 x1662))
(assert (x1697 x960 x161 x1557 x1918))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ 4 x2247))))
(assert (=> (> (+ 10000 1) x1425) (not (= x1425 (+ x2247 4)))))
(assert (x1436 x1236))
(assert (not (= 2 (x1912 x238 2))))
(assert (= (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x705)) x1770) (= x784 (x1876 x1666 x1141)) (= x705 (uninterp_mod (* x1188 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (not x181) 1 0) x1666) (= x1275 (= 0 x784)) (= (= x705 0) x181) (= x1141 (ite (< x1770 x1296) 1 0))) (and (=> (not x1275) x1700) (=> x1275 x765))) x786))
(assert (= (x2025 x1148) (ite (= x1148 x1219) x251 (x780 x1148))))
(assert (x1436 x1545))
(assert (not (= (+ x2247 3) 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (= x2097 (and (not x1085) x983)))
(assert (= (x1892 x896) 0))
(assert (= (=> (and (= (x1998 (+ x71 31)) x3) (= (or (and (= true (<= x71 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x71)) (> x71 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1581) (= x687 (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3)) (= (x1998 (+ x424 x687)) x566)) (and (=> (not x1581) x1599) (=> x1581 x1700))) x125))
(assert (x1436 x158))
(assert (x1436 x416))
(assert (= true x741))
(assert (= (=> (= x2204 (= x833 0)) (and (=> x2204 x1700) (=> (not x2204) x2281))) x1589))
(assert (=> (< (- x1033 1) 10000) (not (= (+ 4 x2247) x1033))))
(assert (x1436 x1863))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ x1940 5))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x2168 1))))
(assert (= (=> (and (= x1108 (= 0 x625)) (= (x2290 x106) x625)) (and (=> (and x1108 (= x612 x2240) (= x1706 0)) x478) (=> (not x1108) x485))) x43))
(assert (= (x1383 x1837) (ite (= x1837 x1661) 0 (x340 x1837))))
(assert (not (= (+ x1940 5) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x1436 x2159))
(assert (x1436 x1597))
(assert (=> (> (+ 10000 1) x200) (not (= x200 (+ x1940 3)))))
(assert (not (= 274184521717934524641157099916833587202 (+ 2 x1765))))
(assert (x1436 x147))
(assert (not (= (+ 5 x1765) 274184521717934524641157099916833587206)))
(assert (=> (< (- x558 1) 10000) (not (= x558 (+ 2 x1765)))))
(assert (= x868 (=> (= (= x1229 0) x2046) (and (=> (and x2046 (= x2229 x1877) (= x406 0)) x1083) (=> (not x2046) x781)))))
(assert (not (= 274184521717934524641157099916833587202 (x1912 x238 2))))
(assert (x1436 x1666))
(assert (x1436 x555))
(assert (x1436 x1364))
(assert (x1436 x1602))
(assert (=> (> (+ 10000 1) x735) (not (= (+ 5 x2247) x735))))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ 3 x1940))))
(assert (x1958 x1570 x1498))
(assert (=> (> (+ 10000 1) x1033) (not (= (+ 2 x433) x1033))))
(assert (x1436 x1157))
(assert (not (= (+ x433 1) 3)))
(assert (x1436 x776))
(assert (x287 x1073))
(assert (x1436 x1126))
(assert (not (= 1 (x1912 x48 3))))
(assert (not (= (x1912 x238 2) 18446744073709551616)))
(assert (x1047 x1471 x1841))
(assert (x1436 x1993))
(assert (not (= (+ 4 x2247) (x2168 1))))
(assert (=> (< (- x1916 1) 10000) (not (= (x1912 x558 2) x1916))))
(assert (=> (> (+ 10000 1) x1428) (not (= x1428 (+ x1765 5)))))
(assert (= (and x1264 (not x2272)) x881))
(assert (= (and x11 x1758) x72))
(assert (not (= (+ x1765 5) (+ x2247 4))))
(assert (x1436 x1095))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 5 x1765))))
(assert (= x793 (and x1035 (not x1397))))
(assert (= 0 (x66 x2280)))
(assert (=> (< (- x1111 1) 10000) (not (= x1111 (x1912 x392 3)))))
(assert (not (= (+ 2 x1765) (+ x1765 5))))
(assert (x1436 x2173))
(assert (x951 x816))
(assert (x1436 x1097))
(assert (x1436 x1770))
(assert (x1436 x904))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (+ x2247 5))))
(assert (not (= 4294967296 (+ x2247 4))))
(assert (x1436 x1615))
(assert (not (= (x2168 1) (+ 2 x1765))))
(assert (x1436 x1325))
(assert (= (x1639 x2056) 10894474682274239493831243662817379401261526446360622092269559273883068006400))
(assert (x1436 x78))
(assert (not (= 274184521717934524641157099916833587206 (+ x681 2))))
(assert (=> (> (+ 10000 1) x48) (not (= x48 (+ 1 x433)))))
(assert (=> (< (- x816 1) 10000) (not (= x816 (+ 2 x433)))))
(assert (=> (> (+ 10000 1) x1677) (not (= (+ x2247 2) x1677))))
(assert (x1436 x68))
(assert (=> (> (+ 10000 1) x1111) (not (= (+ x1765 5) x1111))))
(assert (= x991 (=> (and (= x1234 (uninterp_mod (* x1350 x1494) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1586 (> x1824 0))) (and (=> (and (= x1941 (- (/ x1234 x1824) (uninterp_frac x1234 x1824))) (= x994 x1941) x1586) x1338) (=> (not x1586) x1700)))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ 3 x2247))))
(assert (=> (< (- x238 1) 10000) (not (= x238 (+ 1 x433)))))
(assert (x1436 x2289))
(assert (=> (> (+ 10000 1) x1066) (not (= (+ 4 x2247) x1066))))
(assert (= (=> (and (= (= 0 x714) x53) (= x710 (x2278 x250)) (= x250 (x1998 (+ x259 32))) (= x796 (x1241 x1312))) (and (=> (not x53) x832) (=> (and (= 0 x310) (= x2229 x1465) x53) x868))) x65))
(assert (x1436 x600))
(assert (not (= (x1912 x392 3) (x1912 x238 2))))
(assert (= x390 (=> (and (= x1746 (x1231 x291)) (= x16 (> x1746 0))) (and (=> x16 x1433) (=> (and (not x16) (= x1171 x436) (= x2000 0)) x191)))))
(assert (x1436 x641))
(assert (x1436 x1018))
(assert (x1436 x2104))
(assert (= (=> (and (= (x1998 (+ x916 32)) x1217) (= (> 0 x474) x2048) (= x660 (x1560 x1217)) (= x474 (x453 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x660)))) (and (=> (and (= x952 x660) (= x162 (x1237 x916)) (not x1851) (not x2048) (= x1851 (> x162 1)) (= x1392 x952)) x1610) (=> x2048 x1700))) x2124))
(assert (= (x269 x845) (ite (and (not x1094) x1186) (ite (and x943 (not x827) x213) (x581 x845) (x1069 x845)) (x1069 x845))))
(assert (x1436 x840))
(assert (= (=> (and (= x2272 (= x435 x1449)) (> 18446744073709551616 x435) (= x12 (+ 2 x433)) (>= x435 0) (= x64 (x1876 1461501637330902918203684832716283019655932542975 x900)) (= x435 (x497 x12)) (= (x1912 x64 2) x1940) (= (x1876 1461501637330902918203684832716283019655932542975 x900) x48) (= x433 (x1912 x48 3)) (>= 18446744073709551615 x435)) (and (=> (not x2272) x70) (=> (and x2272 (= x2181 x1778)) x1986))) x452))
(assert (=> (> (+ 10000 1) x238) (not (= (+ x2247 4) x238))))
(assert (= (=> (and (= (uninterp_mod (* x1181 x948) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1900) (= x2236 (> x1806 x948)) (= x1806 (- (/ x1900 1000000000000000000) (uninterp_frac x1900 1000000000000000000)))) (and (=> (not x2236) x756) (=> x2236 x1700))) x2271))
(assert (x1436 x705))
(assert (=> (> (+ 10000 1) x770) (not (= x770 (+ x2247 1)))))
(assert (=> (> (+ 10000 1) x1536) (not (= x1536 (+ 2 x2247)))))
(assert (not (= (+ 5 x2247) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (x1912 x558 2) (+ 5 x2247))))
(assert (not (= (+ 2 x2247) 4294967296)))
(assert (not (= 274184521717934524641157099916833587206 (+ x2247 3))))
(assert (=> (< (- x1428 1) 10000) (not (= (x1912 x238 2) x1428))))
(assert (not (= (+ 5 x2247) (+ x2247 1))))
(assert (x1436 x1768))
(assert (= (=> (and (= x518 (x1876 1461501637330902918203684832716283019655932542975 x900)) (= x2206 (x1284 x1033)) (= x1935 (x1998 (+ x892 4))) (= x827 (= 0 x2206)) (= x1293 (x1998 (+ 36 x892)))) (and (=> x827 x1700) (=> (and (or (and (= (x1069 x1033) x859) x1161 x344 (= (= x859 (x581 x1033)) x1161) (< x126 4294967296) (= x971 (x1069 274184521717934524641157099916833587231)) (= (<= x971 (x581 274184521717934524641157099916833587231)) x344) x943) (not x943)) (= (> x1411 0) x943) (not x827)) x871))) x966))
(assert (x1436 x1750))
(assert (=> (> (+ 10000 1) x1425) (not (= x1425 (+ x2247 1)))))
(assert (x1436 x2013))
(assert (x1436 x2287))
(assert (= x191 (=> (and (= (ite (> 1000000000000000000 x272) 1 0) x1498) (= x272 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392))) (= (= 0 x1392) x1565) (= x1676 (x1876 x1570 x1498)) (= x1570 (ite (not x1565) 1 0)) (= x235 (= x1676 0))) (and (=> x235 x2256) (=> (not x235) x1700)))))
(assert (x1436 x1265))
(assert (=> (> (+ 10000 1) x2022) (not (= (x1912 x392 3) x2022))))
(assert (not (= 1000000000000000000 (+ x433 1))))
(assert (x1436 x773))
(assert (=> (< (- x1536 1) 10000) (not (= (+ 2 x1765) x1536))))
(assert (x1436 x1104))
(assert (x1436 x803))
(assert (not (= (+ x1765 2) 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (not (= (x1912 x48 3) 2442716437)))
(assert (x1436 x805))
(assert (=> (< (- x770 1) 10000) (not (= (x1912 x558 2) x770))))
(assert (not (= (x1912 x558 2) 2442716437)))
(assert (=> (< (- x558 1) 10000) (not (= x558 (+ x2247 4)))))
(assert (=> (> (+ 10000 1) x770) (not (= x770 (+ x681 2)))))
(assert (x1436 x814))
(assert (not (= (+ x2247 5) 2540496021)))
(assert (not (= (+ 5 x1940) 1000000000000000000)))
(assert (x1436 x2044))
(assert (x1041 x1449 x1260))
(assert (=> (> (+ 10000 1) x1916) (not (= x1916 (x1912 x48 3)))))
(assert (x1047 x735 x384))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1912 x238 2))))
(assert (=> (> (+ 10000 1) x20) (not (= (+ 2 x681) x20))))
(assert (= (and x1492 x1686) x1295))
(assert (not (= (+ x1765 5) 31123442917456901051708656246501188623764889836880532624742668034502079545344)))
(assert (= (=> (and (= x1492 (> x1626 0)) (= (x1008 x1485) x1626)) (and (=> x1492 x1463) (=> (and (= x1567 0) (not x1492)) x1917))) x2218))
(assert (not (= (+ x1765 5) 1684360437)))
(assert (x1436 x1723))
(assert (x1436 x1663))
(assert (= (and x44 x1884) x821))
(assert (=> (> (+ 10000 1) x1033) (not (= (x1912 x392 3) x1033))))
(assert (x287 x1429))
(assert (= (=> (and (= (ite (< x2137 x289) 1 0) x1911) (= (x1876 x87 x1911) x59) (= x1185 (= x59 0)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1604)) x2137) (= x87 (ite (not x1619) 1 0)) (= x628 (x1998 (+ x1423 160))) (= x1619 (= x1604 0)) (= x1604 (x2261 x628))) (and (=> (not x1185) x1700) (=> x1185 x812))) x485))
(assert (x1436 x48))
(assert (not (= (+ x2247 1) (+ x1765 5))))
(assert (=> (< (- x1982 1) 10000) (not (= x1982 (x1912 x558 2)))))
(assert (x1436 x647))
(assert (=> (> (+ 10000 1) x1677) (not (= x1677 (+ x2247 1)))))
(assert (x1436 x570))
(assert (x1436 x521))
(assert (x1436 x1249))
(assert (=> (< (- x20 1) 10000) (not (= (x1912 x48 3) x20))))
(assert (= x812 (=> (and (= x2109 (< x1325 x1604)) (= (x453 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x640)) x1325) (= x640 (- (/ x912 1000000000000000000) (uninterp_frac x912 1000000000000000000))) (= (uninterp_mod (* x289 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x912)) (and (=> x2109 x1700) (=> (not x2109) x1585)))))
(assert (=> (< (- x1843 1) 10000) (not (= x1843 (+ x1940 5)))))
(assert (not (= (+ 4 x2247) 274184521717934524641157099916833587202)))
(assert (not (= (x1912 x238 2) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (=> (> (+ 10000 1) x1104) (not (= (x1912 x558 2) x1104))))
(assert (x1436 x1200))
(assert (not (= (+ 2 x1765) 274184521717934524641157099916833587231)))
(assert (x1436 x436))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1912 x48 3))))
(assert (not (= 2540496021 (x1912 x558 2))))
(assert (= x2100 (or (and x1204 x2279) (and x2135 x1212))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1912 x392 3))))
(assert (x1436 x649))
(assert (=> (< (- x2022 1) 10000) (not (= (x2168 1) x2022))))
(assert (not (= (+ x2247 3) 274184521717934524641157099916833587231)))
(assert (= x665 (=> (= x373 (= 0 x799)) (and (=> (not x373) x466) (=> x373 x1700)))))
(assert (x1436 x2093))
(assert (=> (< (- x20 1) 10000) (not (= (+ x1765 2) x20))))
(assert (= (=> (and (= (< 0 x1994) x1727) (= x1994 (x1237 x916))) (and (=> (not x1727) x1700) (=> x1727 x2124))) x468))
(assert (=> (< (- x558 1) 10000) (not (= x558 (+ 1 x433)))))
(assert (= x231 (=> (= x1506 (> x2288 0)) (and (=> x1506 x937) (=> (not x1506) x1700)))))
(assert (= x1550 (and x2094 (not x194))))
(assert (x1436 x770))
(assert (x1436 x867))
(assert (x1436 x558))
(assert (= (x1534 160) 0))
(assert (= x2165 (=> (= x869 (= 0 x1730)) (and (=> x869 x1700) (=> (not x869) x722)))))
(assert (x1436 x893))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (+ 2 x681))))
(assert (=> (> (+ 10000 1) x200) (not (= (x2168 1) x200))))
(assert (= (=> (and (= (ite (not x763) 1 0) x1579) (= x1926 (= x1364 0)) (= (x1876 x1579 x473) x1364) (= x1298 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157))) (= (x453 (- 1000000000000000000 x1855)) x1296) (= (ite (< x1298 x1188) 1 0) x473) (= (= 0 x1157) x763)) (and (=> x1926 x786) (=> (not x1926) x1700))) x1359))
(assert (not (= 1000000000000000000 (x1912 x392 3))))
(assert (not (= (x2168 1) 2540496021)))
(assert (not (= (x1912 x48 3) 2477345955)))
(assert (x1436 x1909))
(assert (not (= 2 (+ x433 2))))
(assert (=> (> (+ 10000 1) x48) (not (= (+ 3 x1940) x48))))
(assert (not (= (+ 2 x2247) 1461501637330902918203684832716283019655932542976)))
(assert (x1436 x811))
(assert (x1436 x345))
(assert (not (= (+ x2247 5) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (= x151 (=> (= x613 (= x1558 0)) (and (=> (not x613) x1747) (=> x613 x1700)))))
(assert (= x44 (and (not x906) x1784)))
(assert (= (=> (= (> x994 x182) x1120) (and (=> (and (= x1461 x994) (= x1252 x1350) (not x1120)) x1202) (=> x1120 x123))) x1338))
(assert (=> (> (+ 10000 1) x558) (not (= x558 (x1912 x238 2)))))
(assert (= x214 (=> (= x754 (= x1653 0)) (and (=> (not x754) x2196) (=> x754 x1700)))))
(assert (=> (< (- x1066 1) 10000) (not (= x1066 (+ x433 2)))))
(assert (=> (< (- x369 1) 10000) (not (= x369 (+ 1 x433)))))
(assert (=> (> (+ 10000 1) x1916) (not (= x1916 (+ x433 1)))))
(assert (=> (> (+ 10000 1) x48) (not (= (x1912 x238 2) x48))))
(assert (not (= (+ x433 1) 2540496021)))
(assert (x1436 x359))
(assert (x287 x3))
(assert (not (= (+ 1 x433) (+ 1 x2247))))
(assert (=> (> (+ 10000 1) x1425) (not (= x1425 (+ 1 x355)))))
(assert (x1436 x459))
(assert (x287 x122))
(assert (not (= (+ x1765 2) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (< (- x558 1) 10000) (not (= (+ x433 2) x558))))
(assert (x287 1461501637330902918203684832716283019655932542975))
(assert (= x1019 (and x835 (not x699))))
(assert (=> (< (- x857 1) 10000) (not (= (x2168 1) x857))))
(assert (= x927 (=> (and (= (= x1539 0) x1724) (= (ite (not x1724) 1 0) x1128) (= x1509 (= 0 x1859)) (= (x1876 x1128 x124) x1859) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539)) x1200) (= x124 (ite (> x630 x1200) 1 0))) (and (=> x1509 x819) (=> (not x1509) x1700)))))
(assert (=> (> (+ 10000 1) x392) (not (= x392 (x1912 x238 2)))))
(assert (x1436 x1941))
(assert (not (= (+ x1765 2) 3)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ x433 1))))
(assert (= (and x1421 x1295) x1262))
(assert (not (= (+ 3 x2247) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1436 x1997))
(assert (=> (> (+ 10000 1) x816) (not (= x816 (x1912 x392 3)))))
(assert (= x679 (and x928 x1561)))
(assert (not (= (+ x2247 3) (+ x355 1))))
(assert (=> (< (- x1033 1) 10000) (not (= (+ 5 x1765) x1033))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ x2247 3))))
(assert (not (= (x2168 1) 1000000000000000000)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ 5 x1940))))
(assert (=> (< (- x1677 1) 10000) (not (= x1677 (+ 2 x1765)))))
(assert (= x1513 (=> (and (= (x1998 (+ x1988 x1499)) x1465) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x63)) (< x63 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x63)) x2075) (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1646) x1499) (= (x1998 (+ 31 x63)) x1646)) (and (=> (not x2075) x1531) (=> x2075 x1700)))))
(assert (=> (< (- x64 1) 10000) (not (= x64 (x1912 x48 3)))))
(assert (=> (< (- x1982 1) 10000) (not (= (+ x2247 2) x1982))))
(assert (not (= (+ 1 x2247) (+ 1 x355))))
(assert (=> (< (- x1425 1) 10000) (not (= (+ 5 x1940) x1425))))
(assert (= (=> (and (= (= 0 x1800) x496) (= (ite (not x295) 1 0) x1249) (= x295 (= 0 x714)) (= (x1876 x1249 x228) x1800) (= x1367 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714))) (= (ite (> x1426 x1367) 1 0) x228)) (and (=> (not x496) x1700) (=> x496 x1458))) x1070))
(assert (x1436 x1933))
(assert (x1436 x1461))
(assert (=> (< (- x1104 1) 10000) (not (= x1104 (+ 5 x1765)))))
(assert (= x257 (and (not x53) x1694)))
(assert (x1436 x2107))
(assert (=> (< (- x392 1) 10000) (not (= x392 (+ x433 2)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ x433 2))))
(assert (= (x1489 x221) 0))
(assert (not (= (+ 3 x1940) (x2168 1))))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1912 x392 3))))
(assert (x1436 x1114))
(assert (x1436 x1384))
(assert (not (= (x2168 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1912 x48 3))))
(assert (= x1495 (=> (and (= (< 0 x678) x1884) (= (x1231 x904) x678) (= x2065 (x1241 x1312)) (= x904 (x1303 x2001)) (= x2231 (x965 x204))) (and (=> x1884 x619) (=> (not x1884) x1700)))))
(assert (not (= (+ 1 x355) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (=> (> (+ 10000 1) x1947) (not (= x1947 (+ 2 x681)))))
(assert (not (= (+ x2247 2) (+ 2 x433))))
(assert (x1436 x1165))
(assert (= (x2025 x2188) (ite (= x1219 x2188) x251 (x780 x2188))))
(assert (not (= (+ x2247 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (< (- x770 1) 10000) (not (= x770 (+ x1940 5)))))
(assert (x1436 x1824))
(assert (not (= (+ x355 1) 2540496021)))
(assert (x287 x1546))
(assert (= (and x1592 (not x2117)) x1638))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ 1 x2247))))
(assert (x1436 x824))
(assert (x1436 x162))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1912 x558 2))))
(assert (=> (> (+ 10000 1) x1111) (not (= (+ 2 x681) x1111))))
(assert (not (= (+ 5 x1940) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (not (= (+ 5 x2247) (+ 3 x2247))))
(assert (not (= (+ x1765 2) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (+ x433 1) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (ite (= x892 x1293) x1449 (x2160 x892)) (x636 x892)))
(assert (x1436 x25))
(assert (x1436 x785))
(assert (= (and (not x1025) x2190) x1784))
(assert (= x1186 (and (not x676) x852)))
(assert (not (= (x2168 1) (+ 2 x433))))
(assert (x1436 x1564))
(assert (=> (> (+ 10000 1) x1111) (not (= (+ 1 x355) x1111))))
(assert (=> (> (+ 10000 1) x1066) (not (= x1066 (x1912 x392 3)))))
(assert (x1436 x92))
(assert (= x428 (=> (and (= x420 (x417 x728)) (= x2188 (x1998 (+ x1707 32))) (= (x858 x688) x240) (= x1913 (= x1049 0)) (= (x1876 1461501637330902918203684832716283019655932542975 x420) x1869) (= (x1876 1461501637330902918203684832716283019655932542975 x240) x1111) (= (x2278 x2188) x688) (= x2202 (x1998 (+ 4 x379))) (= (x1284 x1111) x1049)) (and (=> (and (not x1913) (or (and (= x1281 x426) (not x657)) (and (< x116 4294967296) (= x426 1) x657)) (= x657 (< 0 x1281))) x227) (=> x1913 x1700)))))
(assert (= (and (not x142) x936) x697))
(assert (not (= (x1912 x64 2) 1000000000000000000)))
(assert (x1436 x366))
(assert (=> (< (- x91 1) 10000) (not (= (+ 2 x681) x91))))
(assert (=> (< (- x1033 1) 10000) (not (= (+ x1940 3) x1033))))
(assert (x1436 x1399))
(assert (= x1927 (=> (and (= x1539 (x2054 x2194)) (= (< 0 x511) x2136)) (and (=> (and (= x745 1) (not x2136)) x927) (=> x2136 x21)))))
(assert (x1417 x511 x79))
(assert (= (or x553 (and x53 x1694)) x1418))
(assert (=> (> (+ 10000 1) x1993) (not (= x1993 (+ x1940 5)))))
(assert (= (x804 x688) (ite (= x251 x688) 0 (x677 x688))))
(assert (x1436 x1154))
(assert (not (= (+ 2 x681) 1684360437)))
(assert (=> (< (- x1536 1) 10000) (not (= (x1912 x238 2) x1536))))
(assert (=> (> (+ 10000 1) x20) (not (= (+ 3 x2247) x20))))
(assert (= (or (and x1100 x1113) (and x1688 x1820) (and x1976 x550) (and x2189 x957)) x376))
(assert (= (x1534 x129) 0))
(assert (=> (> (+ 10000 1) x1536) (not (= (+ x2247 4) x1536))))
(assert (=> (> (+ 10000 1) x20) (not (= x20 (x1912 x392 3)))))
(assert (= x553 (or (and x77 x1638) (and x35 x2019))))
(assert (= (and x1193 x1899) x1361))
(assert (x1436 x473))
(assert (=> (> (+ 10000 1) x1843) (not (= (x1912 x48 3) x1843))))
(assert (not (= (+ x355 1) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ x2247 3))))
(assert (= (x2025 x250) (ite (= x250 x1219) x251 (x780 x250))))
(assert (x1436 x678))
(assert (x1436 x380))
(assert (= (=> (and (= (x1876 1461501637330902918203684832716283019655932542975 x708) x369) (= (x1998 (+ 64 x1423)) x1837) (= x1910 (x1998 (+ x106 4))) (= x519 (= x1225 0)) (= (x417 x728) x1948) (= x708 (x1263 x1837)) (= (x1998 (+ x1919 32)) x1148) (= (x1876 1461501637330902918203684832716283019655932542975 x1948) x2220) (= x1423 (x2278 x1148)) (= x1225 (x1284 x369))) (and (=> x519 x1700) (=> (and (= (< 0 x2282) x1155) (or (and (= x2282 x1632) (not x1155)) (and x1155 (> 4294967296 x419) (= x1632 1))) (not x519)) x159))) x2213))
(assert (x1436 x530))
(assert (= (and x1375 x297) x1222))
(assert (x1436 x1769))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2168 1))))
(assert (=> (< (- x64 1) 10000) (not (= x64 (+ x355 1)))))
(assert (= x749 (=> (= (= x2035 0) x1388) (and (=> x1388 x1700) (=> (not x1388) x2284)))))
(assert (x1436 x291))
(assert (not (= 18446744073709551616 (x1912 x558 2))))
(assert (not (= 18446744073709551616 (+ x2247 3))))
(assert (x1436 x1256))
(assert (x1047 x1812 x800))
(assert (=> (< (- x1066 1) 10000) (not (= (x1912 x64 2) x1066))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1912 x48 3))))
(assert (x1436 x1369))
(assert (x1436 x1269))
(assert (not (= 274184521717934524641157099916833587202 (+ x1765 5))))
(assert (= (and x1835 x527) x1264))
(assert (not (= (+ x1940 5) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1436 x1322))
(assert (= (and x2166 x375) x99))
(assert (= (and (not x2038) x166) x2253))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1912 x64 2))))
(assert (=> (< (- x2022 1) 10000) (not (= (+ 5 x2247) x2022))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x2168 1))))
(assert (=> (< (- x392 1) 10000) (not (= x392 (+ x2247 2)))))
(assert (=> (> (+ 10000 1) x91) (not (= (x1912 x558 2) x91))))
(assert (=> (> (+ 10000 1) x1702) (not (= (+ x355 1) x1702))))
(assert (not (= 1684360437 (+ x2247 4))))
(assert (x1436 x38))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (+ x2247 2))))
(assert (= (and (not x631) x963) x211))
(assert (not (= (+ x433 2) 1000000000000000000)))
(assert (= (x1011 x1189) (ite (= 160 x1189) x1617 (x1534 x1189))))
(assert (=> (> (+ 10000 1) x369) (not (= (x2168 1) x369))))
(assert (x350 x352 x456))
(assert (not (= (+ x1765 5) 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (> (+ 10000 1) x369) (not (= (+ 5 x1765) x369))))
(assert (x287 x448))
(assert (x951 x1536))
(assert (=> (< (- x392 1) 10000) (not (= (+ x2247 4) x392))))
(assert (x1436 x559))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ 2 x2247))))
(assert (x1436 x1648))
(assert (x1436 x682))
(assert (x1958 x23 x703))
(assert (x1047 x1670 x701))
(assert (not (= (+ x1765 5) 2)))
(assert (= (x2132 x424) (ite (= x465 x424) x68 (x1017 x424))))
(assert (not (= (+ x433 1) 18446744073709551616)))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (+ x433 2))))
(assert (x1436 x794))
(assert (not (= (+ 5 x1940) (+ x681 2))))
(assert (x1436 x816))
(assert (=> (> (+ 10000 1) x735) (not (= x735 (+ 3 x2247)))))
(assert (x1436 x155))
(assert (=> (> (+ 10000 1) x1428) (not (= x1428 (x2168 1)))))
(assert (x1436 x775))
(assert (x1436 x1282))
(assert (not (= 3 (+ 2 x433))))
(assert (= 0 (x471 x402)))
(assert (x1436 x1440))
(assert (=> (> (+ 10000 1) x1033) (not (= (+ 5 x1940) x1033))))
(assert (= x1341 (and x271 (not x1438))))
(assert (x287 x1184))
(assert (x1436 x1539))
(assert (x1047 x2130 x594))
(assert (not (= (+ 3 x2247) (x1912 x48 3))))
(assert (=> (< (- x1677 1) 10000) (not (= x1677 (+ 3 x1940)))))
(assert (= x2255 x894))
(assert (x1436 x2123))
(assert (x1436 x399))
(assert (x1436 x539))
(assert (x1436 x2001))
(assert (x1436 x1567))
(assert (= (=> (and (= x297 (> x1240 0)) (= x1240 (x1237 x916))) (and (=> (and (not x297) (= 0 x1392)) x1610) (=> x297 x468))) x671))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ 5 x2247))))
(assert (=> (> (+ 10000 1) x845) (not (= x845 (+ x2247 5)))))
(assert (not (= (+ x2247 3) 1)))
(assert (not (= 274184521717934524641157099916833587202 (+ x2247 5))))
(assert (= (=> (and (= (< 0 x1470) x1538) (= (x1231 x221) x1470)) (and (=> x1538 x1822) (=> (and (not x1538) (= x112 x1975)) x671))) x1036))
(assert (not (= (x1912 x48 3) 31123442917456901051708656246501188623764889836880532624742668034502079545344)))
(assert (= x1083 (=> (and (= x909 (x453 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x406))) (= x483 (> x310 x909))) (and (=> (not x483) x962) (=> x483 x1700)))))
(assert (=> (< (- x1982 1) 10000) (not (= (+ 2 x1765) x1982))))
(assert (=> (> (+ 10000 1) x932) (not (= (+ 2 x1765) x932))))
(assert (x1436 x1699))
(assert (x1436 x1477))
(assert (x287 x1102))
(assert (x1697 x1737 x1169 x923 x1797))
(assert (=> (< (- x770 1) 10000) (not (= (+ x355 1) x770))))
(assert (= x1751 (=> (and (= (> x1494 0) x479) (= x873 (uninterp_mod (* x1824 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x479) x1700) (=> (and x479 (= x134 x986) (= (- (/ x873 x1494) (uninterp_frac x873 x1494)) x986)) x1226)))))
(assert (x1436 x64))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1912 x392 3))))
(assert (x1436 x974))
(assert (not (= (+ 2 x2247) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x1047 x1255 x93))
(assert (x1436 x9))
(assert (x1436 x1908))
(assert (x1436 x322))
(assert (= (x780 x250) 0))
(assert (=> (> (+ 10000 1) x1702) (not (= x1702 (+ 2 x2247)))))
(assert (= x325 (=> (and (= (< 0 x110) x2070) (= x110 (x1231 x1967)) (= (x1303 x2001) x1967)) (and (=> x2070 x760) (=> (and (= x424 x1126) (not x2070)) x2218)))))
(assert (=> (> (+ 10000 1) x816) (not (= x816 (x1912 x558 2)))))
(assert (x1047 x2062 x1556))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (+ x681 2))))
(assert (= x347 (and x2136 x99)))
(assert (x1436 x1886))
(assert (= x1431 (and (not x2237) x731)))
(assert (not (= 2743638299 (+ x2247 3))))
(assert (x1436 x163))
(assert (x1436 x745))
(assert (=> (< (- x1566 1) 10000) (not (= x1566 (+ x2247 1)))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 3 x2247))))
(assert (x1047 x1033 x1879))
(assert (not (= (+ 2 x433) 274184521717934524641157099916833587202)))
(assert (=> (< (- x816 1) 10000) (not (= (x1912 x238 2) x816))))
(assert (=> (< (- x857 1) 10000) (not (= x857 (x1912 x48 3)))))
(assert (not (= (x2168 1) 2743638299)))
(assert (not (= (x2168 1) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (x287 x124))
(assert (x1436 x2202))
(assert (x1436 x1508))
(assert (x1436 x1218))
(assert (x1436 x502))
(assert (not (= (x1912 x558 2) 1000000000000000000)))
(assert (not (= (+ 5 x1940) (x1912 x48 3))))
(assert (=> (> (+ 10000 1) x932) (not (= x932 (+ x1940 3)))))
(assert (=> (> (+ 10000 1) x20) (not (= (+ x1940 3) x20))))
(assert (x1436 x2198))
(assert (not (= (+ x2247 2) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (> (+ 10000 1) x1916) (not (= (x1912 x392 3) x1916))))
(assert (=> (< (- x369 1) 10000) (not (= (+ x355 1) x369))))
(assert (=> (> (+ 10000 1) x1566) (not (= x1566 (+ x2247 2)))))
(assert (not (= 2442716437 (+ x433 1))))
(assert (x1436 x777))
(assert (=> (> (+ 10000 1) x1104) (not (= (+ x2247 1) x1104))))
(assert (x1436 x1987))
(assert (not (= (+ x681 2) 2743638299)))
(assert (not (= (+ x1940 3) 2477345955)))
(assert (x287 x540))
(assert (x1436 x950))
(assert (x1436 x742))
(assert (=> (> (+ 10000 1) x20) (not (= x20 (+ x1940 5)))))
(assert (x1436 x980))
(assert (x951 x1982))
(assert (x1697 x148 x82 x1682 x1776))
(assert (not (= 4294967296 (x1912 x392 3))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 1 x433))))
(assert (not (= 31123442917456901051708656246501188623764889836880532624742668034502079545344 (+ x1765 2))))
(assert (=> (< (- x91 1) 10000) (not (= x91 (x1912 x392 3)))))
(assert (x1436 x2134))
(assert (x1436 x2155))
(assert (= x1478 (=> (= (= 0 x160) x1518) (and (=> (not x1518) x1513) (=> x1518 x1700)))))
(assert (x1436 x1449))
(assert (x1436 x2031))
(assert (x1436 x2125))
(assert (= (x1366 x2101) (ite (and x1675 (not x2207) x2133) (x1115 x2101) (ite (and (not x1675) x2133 (not x2207) (not x1347)) (x2127 x2101) (x704 x2101)))))
(assert (x1436 x1096))
(assert (x1436 x706))
(assert (x287 x1384))
(assert (= (and (not x1954) x1995) x460))
(assert (x1436 x1748))
(assert (not (= (+ x2247 4) (+ 2 x1765))))
(assert (not (= (+ x1940 5) 274184521717934524641157099916833587202)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1912 x64 2))))
(assert (= (=> (and (= (x1231 128) x1933) (= (> x1933 0) x987)) (and (=> x987 x1003) (=> (not x987) x1700))) x393))
(assert (= x1280 (=> (and (= x1350 (x2111 x1778)) (<= x1566 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x1566) (= x1566 (x2176 x34)) (= (= 0 x999) x1351) (<= 0 x1566) (= x999 (x1284 x1566))) (and (=> (and (= (> x323 0) x2028) (not x1351) (or (and (= 1 x195) (< x136 4294967296) x2028) (and (= x195 x323) (not x2028)))) x1075) (=> x1351 x1700)))))
(assert (x287 x1716))
(assert (=> (< (- x1425 1) 10000) (not (= (+ x433 2) x1425))))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x1912 x64 2))))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ 2 x433))))
(assert (x1436 x660))
(assert (= (and x302 x347) x1454))
(assert (not x1000))
(assert (x1436 x1919))
(assert (not (= (x1912 x392 3) (x1912 x64 2))))
(assert (x287 x2130))
(assert (=> (> (+ 10000 1) x1425) (not (= (+ 2 x681) x1425))))
(assert (not (= 274184521717934524641157099916833587202 (x1912 x392 3))))
(assert (= (=> (and (= (x2269 x612) x2184) (= (ite (= x2184 0) (= 0 x2184) (= 0 x1023)) x1828)) (and (=> (and x1828 (= x1908 0)) x1253) (=> (not x1828) x2163))) x18))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1912 x64 2))))
(assert (x1436 x720))
(assert (x1436 x645))
(assert (not (= (x1912 x64 2) (x1912 x48 3))))
(assert (not (= (+ 2 x2247) 1684360437)))
(assert (= x1840 (and x167 (not x1581))))
(assert (not (= (x1912 x64 2) 1461501637330902918203684832716283019655932542975)))
(assert (x1436 x1363))
(assert (x1436 x1676))
(assert (=> (< (- x1425 1) 10000) (not (= x1425 (x1912 x558 2)))))
(assert (not (= (+ 1 x433) (+ x1765 2))))
(assert (not (= 2477345955 (+ 5 x1765))))
(assert (x1436 x1009))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x2168 1))))
(assert (not (= (+ 2 x2247) 274184521717934524641157099916833587206)))
(assert (x1436 x615))
(assert (=> (< (- x1111 1) 10000) (not (= x1111 (+ 2 x2247)))))
(assert (x1436 x1979))
(assert (=> (> (+ 10000 1) x1111) (not (= x1111 (+ x2247 5)))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1912 x64 2))))
(assert (x1697 x2141 x972 x648 x580))
(assert (=> (< (- x1033 1) 10000) (not (= (x1912 x48 3) x1033))))
(assert (x1436 x683))
(assert (not (= (x1912 x64 2) 274184521717934524641157099916833587231)))
(assert (= (x1489 x1967) 0))
(assert (x1436 x1389))
(assert (=> (< (- x1566 1) 10000) (not (= x1566 (+ 5 x1765)))))
(assert (= x1636 (and (not x1965) x257)))
(assert (x951 x1993))
(assert (= x825 (and x516 x334)))
(assert (=> (< (- x1982 1) 10000) (not (= x1982 (x1912 x48 3)))))
(assert (= x49 (and x1538 x1137)))
(assert (= (x306 x362) (ite (and x2133 (not x2207) x1675) (x138 x362) (ite (and x2133 (not x1675) (not x1347) (not x2207)) (x907 x362) (x481 x362)))))
(assert (=> (> (+ 10000 1) x1428) (not (= x1428 (x1912 x64 2)))))
(assert (=> (< (- x1916 1) 10000) (not (= x1916 (x1912 x64 2)))))
(assert (not (= (+ 5 x2247) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (not (= (+ x433 1) 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (=> (> (+ 10000 1) x1702) (not (= (x1912 x392 3) x1702))))
(assert (x287 x342))
(assert (x1436 x721))
(assert (=> (< (- x1428 1) 10000) (not (= x1428 (x1912 x558 2)))))
(assert (x1436 x1387))
(assert (=> (> (+ 10000 1) x1982) (not (= (+ x2247 3) x1982))))
(assert (=> (< (- x1993 1) 10000) (not (= x1993 (x1912 x238 2)))))
(assert (not (= (+ 5 x1940) (+ x433 1))))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1912 x64 2))))
(assert (not (= (x1912 x64 2) 1745775925341846069737700012427326409042627966635005077806405090422919528448)))
(assert (not (= 1000000000000000000 (+ x2247 1))))
(assert (x287 x2231))
(assert (x1436 x1866))
(assert (x1436 x523))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (+ 2 x2247))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ 1 x355))))
(assert (= (or (and x1885 (not x16)) (and (not x1320) x915)) x629))
(assert (= x959 (and x324 x1926)))
(assert (x1436 x182))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ 3 x1940))))
(assert (not (= (+ 2 x681) (+ 5 x2247))))
(assert (= (or x1630 x1505) x1796))
(assert (= x2196 (=> (= (or (and (= (<= x360 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x360 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x360)) x2051) (and (=> (not x2051) x1594) (=> x2051 x1700)))))
(assert (not (= 2442716437 (+ x1765 5))))
(assert (x1436 x1611))
(assert (not (= (x1912 x48 3) 18446744073709551616)))
(assert (x1436 x1057))
(assert (=> (< (- x1066 1) 10000) (not (= (x2168 1) x1066))))
(assert (= x783 (=> (and (= (x1936 x576) x511) (= x1333 (= x511 x9)) (= (x1876 255 x511) x9)) (and (=> x1333 x554) (=> (not x1333) x1700)))))
(assert (not (= (+ 2 x1765) (x1912 x392 3))))
(assert (not (= (x1912 x558 2) (+ 5 x1940))))
(assert (x1697 x3 x1522 x1480 x45))
(assert (not (= (x1912 x558 2) 2477345955)))
(assert (x1436 x122))
(assert (x287 x1948))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2168 1))))
(assert (x1436 x873))
(assert (x1436 x1401))
(assert (x1436 x222))
(assert (x1436 x1040))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1912 x238 2))))
(assert (x1436 x1398))
(assert (not (= (x1912 x48 3) (+ 2 x2247))))
(assert (= 0 (x1489 x1537)))
(assert (= (=> (and (= (x1231 x522) x682) (= x1782 (< 0 x682))) (and (=> (not x1782) x1700) (=> x1782 x201))) x517))
(assert (x1436 x1831))
(assert (x1436 x2230))
(assert (x350 x511 x353))
(assert (not (= 3 (+ 2 x2247))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ 5 x1765))))
(assert (= x70 (=> (and (= x1992 (= 0 x552)) (= (x1284 x1425) x552) (= x1165 (x1998 (+ x2181 36))) (= (x1876 1461501637330902918203684832716283019655932542975 x1812) x1425) (= x914 (x1876 1461501637330902918203684832716283019655932542975 x900)) (= (x1998 (+ 4 x2181)) x1904)) (and (=> (and (or (and x330 (< x2201 4294967296) (= 1 x2259)) (and (= x2259 x416) (not x330))) (= (> x416 0) x330) (not x1992)) x1469) (=> x1992 x1700)))))
(assert (x1436 x354))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 1 x355))))
(assert (x1436 x1051))
(assert (= (ite (= x1093 x1778) x1022 (x922 x1778)) (x237 x1778)))
(assert (=> (> (+ 10000 1) x48) (not (= (+ 5 x1765) x48))))
(assert (x1436 x1428))
(assert (=> (> (+ 10000 1) x1425) (not (= x1425 (+ x1765 5)))))
(assert (not (= 18446744073709551616 (+ x1940 5))))
(assert (=> (> (+ 10000 1) x932) (not (= x932 (x1912 x238 2)))))
(assert (x287 x651))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2168 1))))
(assert (= x358 (and (not x1283) x1643)))
(assert (x1436 x799))
(assert (=> (< (- x1425 1) 10000) (not (= (x1912 x48 3) x1425))))
(assert (x1047 x1868 x673))
(assert (=> (< (- x857 1) 10000) (not (= (+ 3 x1940) x857))))
(assert (x1436 x2167))
(assert (x1436 x1677))
(assert (x1436 x1111))
(assert (not (= (+ 2 x681) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (= x492 (and x654 (not x326))))
(assert (x287 x1255))
(assert (x1436 x246))
(assert (=> (> (+ 10000 1) x1428) (not (= (+ 2 x2247) x1428))))
(assert (=> (> (+ 10000 1) x1428) (not (= (+ 1 x355) x1428))))
(assert (=> (> (+ 10000 1) x1425) (not (= x1425 (+ 5 x2247)))))
(assert (x1436 x2282))
(assert (= x1686 (or (and x319 x1703) (and (not x2070) x1324))))
(assert (x1436 x505))
(assert (= x554 (=> (and (= x2166 (< 0 x197)) (= x197 (x1008 x1485))) (and (=> (not x2166) x1700) (=> x2166 x1927)))))
(assert (=> (> (+ 10000 1) x64) (not (= x64 (+ x1940 3)))))
(assert (= (and x997 x862) x431))
(assert (x1436 x104))
(assert (x951 x1033))
(assert (=> (> (+ 10000 1) x238) (not (= x238 (+ x1940 3)))))
(assert (not (= (+ 2 x681) (x1912 x238 2))))
(assert (x1436 x2177))
(assert (= (=> (and (= x285 (x1998 (+ 4 x74))) (= (x1836 x129) x2130) (= x779 (x1876 1461501637330902918203684832716283019655932542975 x2130)) (= x129 (x1998 (+ x522 32))) (= (= 0 x1390) x296) (= (x1284 x1993) x1390)) (and (=> (and (= x616 (< 0 x42)) (not x296) (or (and x616 (= x833 1) (< x2169 4294967296)) (and (not x616) (= x833 x42)))) x1589) (=> x296 x1700))) x201))
(assert (=> (< (- x392 1) 10000) (not (= (+ 5 x2247) x392))))
(assert (not (= (x1912 x558 2) 2)))
(assert (not (= (x1912 x238 2) 1000000000000000000)))
(assert (x1436 x1925))
(assert (not (= (+ 2 x681) 31123442917456901051708656246501188623764889836880532624742668034502079545344)))
(assert (= (=> (and (= x1952 (x1998 (+ x1191 31))) (= x2056 (x1998 (+ x1778 x1386))) (= x1386 (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1952)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1191) (and (< x1191 32) (= true (<= x1191 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1808)) (and (=> (not x1808) x1280) (=> x1808 x1700))) x472))
(assert (not (= 2 (+ 2 x1765))))
(assert (= (and x724 x825) x1842))
(assert (=> (< (- x392 1) 10000) (not (= (x1912 x64 2) x392))))
(assert (= (x340 x1837) 0))
(assert (= (=> (= (= x426 0) x1085) (and (=> (not x1085) x1166) (=> x1085 x1700))) x227))
(assert (= x1317 (=> (and (= (= x2288 (ite x2263 1 0)) x1520) (= x896 (x1998 (+ 32 x1387))) (= (x870 x896) x2288) (= x1355 (= 0 x2288)) (= x2263 (not x1355))) (and (=> x1520 x231) (=> (not x1520) x1700)))))
(assert (=> (> (+ 10000 1) x1566) (not (= x1566 (+ x1765 2)))))
(assert (=> (> (+ 10000 1) x816) (not (= x816 (+ x433 1)))))
(assert (= (x206 x379) (ite (= x2202 x379) x1869 (x2116 x379))))
(assert (not (= 2540496021 (+ 3 x2247))))
(assert (x1958 x1128 x124))
(assert (=> (> (+ 10000 1) x735) (not (= x735 (+ x2247 2)))))
(assert (x1436 x2114))
(assert (x951 x1940))
(assert (=> (< (- x1916 1) 10000) (not (= x1916 (+ 1 x355)))))
(assert (not (= (+ x1765 5) (+ x681 2))))
(assert (x1436 x789))
(assert (not (= (x1912 x558 2) 31123442917456901051708656246501188623764889836880532624742668034502079545344)))
(assert (=> (> (+ 10000 1) x857) (not (= (+ 5 x1765) x857))))
(assert (= (=> (and (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x563) x293) (= (x1998 (+ x116 31)) x563) (= (or (and (< x116 32) (= (<= x116 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x116 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1042) (= x2226 (x1998 (+ x379 x293)))) (and (=> x1042 x1700) (=> (not x1042) x1527))) x1166))
(assert (= (x1489 x1256) 0))
(assert (= (and x1021 (not x451)) x83))
(assert (not (= 4294967296 (+ x2247 3))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x433 2))))
(assert (x287 x1033))
(assert (x1436 x1901))
(assert (x1436 x1415))
(assert (x1436 x341))
(assert (x1436 x1869))
(assert (not (= (+ x1940 5) (+ 2 x1765))))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1912 x392 3))))
(assert (x1436 x454))
(assert (not (= (x1912 x392 3) (+ 3 x1940))))
(assert (x951 x770))
(assert (= (ite (= x575 x1219) x251 (x780 x575)) (x2025 x575)))
(assert (= (=> (and (= (x1502 x1886) x352) (= x1346 (x1876 255 x352)) (= x1883 (= x352 x1346))) (and (=> (not x1883) x1700) (=> x1883 x736))) x236))
(assert (not (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x1912 x48 3))))
(assert (x1436 x1740))
(assert (x1436 x518))
(assert (not (= 2477345955 (+ 4 x2247))))
(assert (= x781 (=> (and (= (x1876 1461501637330902918203684832716283019655932542975 x1255) x1916) (= (x1284 x1916) x875) (= x1255 (x1462 x362)) (= (x1998 (+ x710 32)) x362) (= (x849 x288) x523) (= (x1998 (+ 128 x710)) x288) (= x2003 (= x875 0))) (and (=> x2003 x1700) (=> (and (= (> x1878 0) x263) (or (and (> 4294967296 x1244) x263 (= 1 x2035)) (and (not x263) (= x2035 x1878))) (not x2003)) x749)))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ x2247 4))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x1912 x558 2))))
(assert (x1436 x185))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (+ x681 2))))
(assert (= 0 (x1353 x2194)))
(assert (not (= (x1912 x558 2) 1461501637330902918203684832716283019655932542976)))
(assert (x1436 x1819))
(assert (=> (> (+ 10000 1) x200) (not (= (+ 1 x433) x200))))
(assert (x1436 x926))
(assert (x951 x2022))
(assert (x1436 x707))
(assert (x1436 x1800))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1912 x238 2))))
(assert (x1436 x912))
(assert (=> (> (+ 10000 1) x816) (not (= x816 (x1912 x64 2)))))
(assert (= (x256 x1744) (ite (= x1744 x94) x844 (x908 x1744))))
(assert (x1436 x1519))
(assert (=> (> (+ 10000 1) x1677) (not (= x1677 (x2168 1)))))
(assert (x1436 x566))
(assert (=> (< (- x1993 1) 10000) (not (= (+ 2 x1765) x1993))))
(assert (= (x1921 x710) (ite (and (not x2207) x1675 x2133) (x677 x710) (ite (and x2133 (not x1347) (not x2207) (not x1675)) (x804 x710) (x984 x710)))))
(assert (=> (> (+ 10000 1) x1104) (not (= (+ 4 x2247) x1104))))
(assert (= x1787 (and x1985 x572)))
(assert (=> (> (+ 10000 1) x1566) (not (= x1566 (+ x1940 5)))))
(assert (not (= (+ x355 1) (+ 5 x1940))))
(assert (x1436 x1843))
(assert (not (= (+ 3 x1940) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1436 x105))
(assert (x1436 x2181))
(assert (x1436 x1426))
(assert (x1436 x2288))
(assert (x1436 x420))
(assert (= (and x2055 x1955) x1082))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1912 x48 3))))
(assert (not (= (+ 5 x1940) 2)))
(assert (x1436 x1900))
(assert (x1436 x603))
(assert (not (= (+ 1 x355) (x1912 x558 2))))
(assert (not (= (+ x433 2) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (+ 3 x1940) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ x1940 5))))
(assert (not (= (+ x2247 1) (+ 4 x2247))))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1912 x64 2))))
(assert (=> (< (- x1947 1) 10000) (not (= x1947 (+ x433 2)))))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (+ x433 1))))
(assert (x1436 x568))
(assert (x1436 x1710))
(assert (x1436 x1071))
(assert (x1436 x349))
(assert (x1436 x1778))
(assert (not (= 2442716437 (+ x1765 2))))
(assert (not (= (+ 1 x355) 1)))
(assert (x287 x2042))
(assert (=> (> (+ 10000 1) x1566) (not (= (x1912 x392 3) x1566))))
(assert (=> (< (- x392 1) 10000) (not (= (x1912 x392 3) x392))))
(assert (x1436 x323))
(assert (=> (< (- x1104 1) 10000) (not (= x1104 (x1912 x64 2)))))
(assert (=> (< (- x857 1) 10000) (not (= x857 (x1912 x558 2)))))
(assert (x1436 x710))
(assert (= (=> (and (= x1963 (> x993 0)) (= x993 (x368 x1387))) (and (=> (not x1963) x937) (=> x1963 x172))) x579))
(assert (=> (< (- x1993 1) 10000) (not (= (x1912 x64 2) x1993))))
(assert (= (=> (and (= (ite (not x1357) 1 0) x4) (= (x1876 x4 x1839) x1979) (= x1357 (= 0 x2265)) (= x559 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182))) (= (= 0 x1979) x828) (= (ite (> x1824 x559) 1 0) x1839)) (and (=> (not x828) x1700) (=> x828 x1751))) x1335))
(assert (= x1531 (=> (and (= (x52 x259) x1096) (= (> x1096 0) x255) (= x259 (x1079 x656)) (= x1188 (x2192 x1988))) (and (=> (not x255) x1700) (=> x255 x65)))))
(assert (x1436 x1299))
(assert (=> (> (+ 10000 1) x1428) (not (= x1428 (+ 2 x433)))))
(assert (x1436 x435))
(assert (x1436 x1661))
(assert (not (= 2442716437 (+ 2 x681))))
(assert (not (= (+ x2247 5) 1745775925341846069737700012427326409042627966635005077806405090422919528448)))
(assert (x1436 x1066))
(assert (not (= 274184521717934524641157099916833587202 (+ 3 x1940))))
(assert (x1436 x272))
(assert (x1697 x740 x1969 x1555 x730))
(assert (x1436 x628))
(assert (x1697 x448 x544 x2276 x178))
(assert (not (= 3 (+ 5 x2247))))
(assert (x287 x900))
(assert (=> (< (- x735 1) 10000) (not (= x735 (x1912 x558 2)))))
(assert (=> (> (+ 10000 1) x1104) (not (= (x1912 x392 3) x1104))))
(assert (x1436 x1575))
(assert (=> (> (+ 10000 1) x1982) (not (= (+ 3 x1940) x1982))))
(assert (x1436 x575))
(assert (= (x1011 x186) (ite (= 160 x186) x1617 (x1534 x186))))
(assert (x1047 x434 x1143))
(assert (x1436 x1905))
(assert (not (= (+ 2 x433) (x1912 x64 2))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x1912 x48 3))))
(assert (x287 x602))
(assert (not (= (+ x2247 4) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (+ 3 x1940))))
(assert (x1436 x164))
(assert (x1436 x1574))
(assert (x1436 x1752))
(assert (not (= (x1912 x238 2) 2540496021)))
(assert (= (=> (and (= (uninterp_mod (* x430 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x674) (= x11 (< 0 x1614))) (and (=> x11 x525) (=> (not x11) x1700))) x1134))
(assert (x1436 x124))
(assert (x1436 x407))
(assert (x1436 x2056))
(assert (=> (> (+ 10000 1) x1566) (not (= x1566 (+ 1 x433)))))
(assert (= x595 (or x1544 (and x2046 x1418))))
(assert (x1436 x1259))
(assert (not (= (x1912 x64 2) (+ x2247 3))))
(assert (=> (< (- x770 1) 10000) (not (= x770 (x1912 x48 3)))))
(assert (x1436 x1181))
(assert (x1436 x1306))
(assert (= (and (not x1468) x938) x586))
(assert (=> (< (- x558 1) 10000) (not (= x558 (+ 2 x681)))))
(assert (x1436 x2231))
(assert (x1436 x612))
(assert (x1436 x94))
(assert (=> (> (+ 10000 1) x1916) (not (= (+ 5 x2247) x1916))))
(assert (=> (> (+ 10000 1) x845) (not (= (x1912 x558 2) x845))))
(assert (x1436 x129))
(assert (=> (> (+ 10000 1) x238) (not (= (+ 1 x2247) x238))))
(assert (x1436 x1191))
(assert (=> (> (+ 10000 1) x1947) (not (= (x2168 1) x1947))))
(assert (not (= (x1912 x64 2) 274184521717934524641157099916833587206)))
(assert (x1436 x562))
(assert (=> (= (x1912 x558 2) (x1912 x238 2)) (= x558 x238)))
(assert (x1436 x369))
(assert (not (= (+ 2 x433) (+ x2247 5))))
(assert (not (= (x1912 x558 2) (+ x1940 3))))
(assert (= x1932 (and (not x877) x499)))
(assert (= (and x1 (not x611)) x1020))
(assert (= x1458 (=> (and (= (> x801 0) x2019) (= (uninterp_mod (* x714 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1385)) (and (=> (and (= (- (/ x1385 x801) (uninterp_frac x1385 x801)) x1621) (= x1621 x1410) x2019) x601) (=> (not x2019) x1700)))))
(assert (= (or (and x1686 (not x1492)) (and x1262 (not x1972))) x1688))
(assert (x1436 x448))
(assert (=> (< (- x1843 1) 10000) (not (= x1843 (+ x433 2)))))
(assert (=> (> (+ 10000 1) x1702) (not (= x1702 (+ x2247 3)))))
(assert (=> (> (+ 10000 1) x845) (not (= x845 (x1912 x392 3)))))
(assert (=> (< (- x1111 1) 10000) (not (= (x1912 x238 2) x1111))))
(assert (not (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x1912 x238 2))))
(assert (x1436 x1328))
(assert (not (= (+ 2 x1765) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x372 (or (and x1899 (not x1193)) x2267)))
(assert (=> (> (+ 10000 1) x1428) (not (= (+ 5 x1940) x1428))))
(assert (x1436 x1910))
(assert (= (or (and x825 (not x724)) (and (not x2033) x1842) (and x2197 (not x1882))) x2071))
(assert (x1436 x1862))
(assert (= (x1439 x1228) 17154740991736861046558774992177620686056526479738507590741468237373194108928))
(assert (not (= 274184521717934524641157099916833587206 (+ x2247 1))))
(assert (= x1525 (=> (= x894 false) x1799)))
(assert (x287 x1699))
(assert (not (= (+ 5 x2247) (x1912 x48 3))))
(assert (not (= 274184521717934524641157099916833587202 (x1912 x558 2))))
(assert (x1436 x1603))
(assert (x1436 x315))
(assert (x1436 x1833))
(assert (=> (> (+ 10000 1) x1428) (not (= (+ 3 x2247) x1428))))
(assert (=> (< (- x238 1) 10000) (not (= x238 (+ x1765 2)))))
(assert (= x1 (and x821 (not x977))))
(assert (not (= (x1912 x48 3) (+ 1 x355))))
(assert (x1436 x2058))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ x433 1))))
(assert (x1436 x1223))
(assert (and (= 1099511627776 (x1834 2 40)) (= 1208925819614629174706176 (x1834 2 80)) (= (x1834 2 32) 4294967296) (= (x1834 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= (x1834 2 112) 5192296858534827628530496329220096) (= 18446744073709551616 (x1834 2 64)) (= 95780971304118053647396689196894323976171195136475136 (x1834 2 176)) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1834 2 240)) (= (x1834 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1834 2 248)) (= 22300745198530623141535718272648361505980416 (x1834 2 144)) (= 6277101735386680763835789423207666416102355444464034512896 (x1834 2 192)) (= (x1834 2 128) 340282366920938463463374607431768211456) (= 24519928653854221733733552434404946937899825954937634816 (x1834 2 184)) (= (x1834 2 48) 281474976710656) (= 16777216 (x1834 2 24)) (= 309485009821345068724781056 (x1834 2 88)) (= (x1834 2 96) 79228162514264337593543950336) (= 65536 (x1834 2 16)) (= (x1834 2 208) 411376139330301510538742295639337626245683966408394965837152256) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x1834 2 232)) (= (x1834 2 168) 374144419156711147060143317175368453031918731001856) (= 1606938044258990275541962092341162602522202993782792835301376 (x1834 2 200)) (= (x1834 2 8) 256) (= 20282409603651670423947251286016 (x1834 2 104)) (= 105312291668557186697918027683670432318895095400549111254310977536 (x1834 2 216)) (= 4722366482869645213696 (x1834 2 72)) (= (x1834 2 152) 5708990770823839524233143877797980545530986496) (= 1 (x1834 2 0)) (= (x1834 2 56) 72057594037927936) (= 1329227995784915872903807060280344576 (x1834 2 120)) (= (x1834 2 160) 1461501637330902918203684832716283019655932542976) (= 87112285931760246646623899502532662132736 (x1834 2 136))))
(assert (=> (> (+ 10000 1) x238) (not (= (x1912 x558 2) x238))))
(assert (not (= 2442716437 (x1912 x238 2))))
(assert (= (=> (and (= (x1998 (+ 31 x354)) x1716) (= (or (and (> 32 x354) (= (<= x354 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x354 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x771) (= x1399 (x1998 (+ x1228 x444))) (= (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1716) x444)) (and (=> x771 x1700) (=> (not x771) x934))) x2095))
(assert (x1436 x180))
(assert (=> (> (+ 10000 1) x1566) (not (= x1566 (+ 2 x433)))))
(assert (x951 x48))
(assert (= x1035 (and x1475 x2232)))
(assert (not (= 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1912 x48 3))))
(assert (x1436 x687))
(assert (not (= (+ 3 x2247) (x2168 1))))
(assert (= (=> (and (= (x1998 (+ 31 x377)) x1546) (= x1988 (x1998 (+ x1744 x265))) (= x1679 (or (and (> 32 x377) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x377) true)) (> x377 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x265 (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1546))) (and (=> x1679 x1700) (=> (not x1679) x2010))) x1473))
(assert (=> (= (x1912 x392 3) (x1912 x48 3)) (= x392 x48)))
(assert (= (ite (and (not x2207) x1675 x2133) (x780 x575) (ite (and (not x1347) x2133 (not x1675) (not x2207)) (x2025 x575) (x374 x575))) (x748 x575)))
(assert (=> (> (+ 10000 1) x1066) (not (= (+ x2247 2) x1066))))
(assert (x287 x240))
(assert (=> (> (+ 10000 1) x369) (not (= (x1912 x48 3) x369))))
(assert (not (= 2743638299 (+ x2247 1))))
(assert (=> (> (+ 10000 1) x1916) (not (= x1916 (+ x2247 1)))))
(assert (= (or (and (not x1963) x793) (and x308 x1506)) x271))
(assert (not (= 22876116169567568662247501733108717860502184539943453785307321755797215510528 (+ 2 x1765))))
(assert (not (= (+ 2 x1765) (+ 1 x355))))
(assert (=> (> (+ 10000 1) x932) (not (= (+ 1 x355) x932))))
(assert (=> (< (- x1843 1) 10000) (not (= (+ 2 x681) x1843))))
(assert (=> (> (+ 10000 1) x1033) (not (= (+ x2247 3) x1033))))
(assert (= (=> (and (= x2187 (> x745 0)) (= x1197 (uninterp_mod (* x1539 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> x2187 x1457) (=> (not x2187) x1700))) x819))
(assert (= x167 (and x1164 (not x1483))))
(assert (x1436 x1496))
(assert (= (x66 x413) 0))
(assert (x1436 x270))
(assert (not (= (+ x2247 2) 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (x1436 x738))
(assert (= x1777 (=> (and (= x1413 (x1998 (+ x664 x948))) (= x1051 (x1998 (+ x1806 x1029))) (= (< x1051 x432) x676) (<= x432 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x432 (x508 x2211)) (= x2211 (+ 3 x1940)) (<= 0 x432)) (and (=> x676 x1700) (=> (not x676) x1774)))))
(assert (x1436 x2265))
(assert (= (=> (= x611 (= x861 0)) (and (=> x611 x1700) (=> (not x611) x1473))) x274))
(assert (x1047 x39 x1074))
(assert (= (and (not x1368) x328) x1517))
(assert (=> (< (- x1677 1) 10000) (not (= x1677 (+ x681 2)))))
(assert (x287 x1535))
(assert (x1436 x1077))
(assert (= x1780 (and x2128 x1872)))
(assert (=> (< (- x1916 1) 10000) (not (= (+ x2247 4) x1916))))
(assert (x1436 x818))
(assert (not (= (+ x2247 4) 1)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ x2247 1))))
(assert (x951 x1104))
(assert (= x281 (and x843 (not x2204))))
(assert (x1436 x1240))
(assert (x1436 x1815))
(assert (not (= (x2168 1) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (= x149 (and x1242 (not x109))))
(assert (=> (> (+ 10000 1) x770) (not (= x770 (+ 4 x2247)))))
(assert (= x1437 (and x460 x695)))
(assert (=> (> (+ 10000 1) x1536) (not (= (x1912 x48 3) x1536))))
(assert (not (= (+ 2 x1765) (+ x433 2))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x355 1))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x2247 1))))
(assert (=> (> (+ 10000 1) x1993) (not (= (+ 2 x433) x1993))))
(assert (=> (< (- x64 1) 10000) (not (= x64 (+ 4 x2247)))))
(assert (= x1587 (and x1932 (not x2036))))
(assert (not (= (x2168 1) 18446744073709551615)))
(assert (not (= (x2168 1) (+ 5 x2247))))
(assert (not (= 2 (+ x681 2))))
(assert (not (= (+ 1 x355) (+ x2247 2))))
(assert (= (x1248 x628) 0))
(assert (=> (< (- x1425 1) 10000) (not (= (+ 3 x1940) x1425))))
(assert (=> (> (+ 10000 1) x1677) (not (= x1677 (+ 5 x1940)))))
(assert (not (= (+ x433 2) 274184521717934524641157099916833587206)))
(assert (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x2168 1))))
(assert (= (=> (and (= (x583 x2181) x1033) (= (= x1033 x50) x357) (= x50 (x1876 1461501637330902918203684832716283019655932542975 x1033))) (and (=> (not x357) x1700) (=> x357 x966))) x1966))
(assert (x1697 x1848 x1733 x981 x2072))
(assert (=> (< (- x1066 1) 10000) (not (= x1066 (+ x1765 5)))))
(assert (x1436 x488))
(assert (= x1210 (=> (= x957 (= 0 x1512)) (and (=> (and (= x854 x436) (= 0 x809) x957 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1905)) x1989) (=> (not x957) x1923)))))
(assert (= x273 (and x1422 (not x1743))))
(assert (x1436 x110))
(assert (x1436 x1030))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (+ 1 x2247))))
(assert (x1436 x310))
(assert (=> (> (+ 10000 1) x1033) (not (= x1033 (x1912 x558 2)))))
(assert (=> (> (+ 10000 1) x1428) (not (= x1428 (+ 4 x2247)))))
(assert (x287 x2081))
(assert (x1436 x2240))
(assert (x1436 x1435))
(assert (=> (> (+ 10000 1) x2022) (not (= (x1912 x558 2) x2022))))
(assert (x759 x1398 x851))
(assert (x287 x1484))
(assert (x1436 x362))
(assert (x1436 x1022))
(assert (= (ite (= x74 x285) x779 (x267 x74)) (x2150 x74)))
(assert (x1436 x426))
(assert (x1436 x546))
(assert (x1436 x688))
(assert (not (= 274184521717934524641157099916833587202 (x1912 x64 2))))
(assert (x1436 x1975))
(assert (not (= 1 (+ x433 2))))
(assert (=> (> (+ 10000 1) x735) (not (= (+ x433 2) x735))))
(assert (x1436 x610))
(assert (=> (> (+ 10000 1) x200) (not (= (+ x2247 3) x200))))
(assert (x1436 x618))
(assert (=> (> (+ 10000 1) x1536) (not (= x1536 (+ x2247 1)))))
(assert (x1436 x1329))
(assert (x1436 x1413))
(assert (x1436 x532))
(assert (x1436 x2034))
(assert (x1436 x2220))
(assert (x287 x1141))
(assert (x1436 x2078))
(assert (=> (< (- x392 1) 10000) (not (= (x2168 1) x392))))
(assert (x1436 x1967))
(assert (=> (< (- x1428 1) 10000) (not (= x1428 (+ x2247 1)))))
(assert (not (= (+ 5 x1765) (+ x2247 2))))
(assert (=> (> (+ 10000 1) x1947) (not (= x1947 (+ x2247 1)))))
(assert (x1436 x2081))
(assert (x287 x473))
(assert (x1436 x1229))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1912 x558 2))))
(assert (=> (> (+ 10000 1) x91) (not (= (+ x2247 2) x91))))
(assert (x1436 x1296))
(assert (= x731 (and (not x732) x1474)))
(assert (= x1584 (=> (and (= x365 (x1876 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1322)) (= x1322 (x1998 (+ x1925 31))) (= x28 (x1998 (+ x1465 x365))) (= (or (> x1925 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1925 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1925))) x847)) (and (=> (not x847) x958) (=> x847 x1700)))))
(assert (x1436 x1628))
(assert (not (= (x2168 1) (x1912 x238 2))))
(assert (not (= (+ x2247 2) (x1912 x64 2))))
(assert (= (ite (= x404 x2226) x311 (x46 x2226)) (x1973 x2226)))
(assert (x1436 x1658))
(assert (not (= 2 (+ 1 x355))))
(assert (=> (< (- x1677 1) 10000) (not (= (x1912 x238 2) x1677))))
(assert (x1436 x1996))
(assert (= (x2221 x1126) (ite (and (not x114) x1279 x314) (x853 x1126) (x1530 x1126))))
(assert (not (= (+ x2247 3) (+ 5 x1765))))
(assert (=> (< (- x369 1) 10000) (not (= x369 (+ x1940 5)))))
(assert (=> (> (+ 10000 1) x770) (not (= (+ 2 x1765) x770))))
(assert (= (=> (and (= (x1008 x1485) x1435) (= x319 (< 0 x1435))) (and (=> (not x319) x1700) (=> (and (= x2240 x1126) (= (x1303 x2001) x1950) x319 (= (x1998 (+ 192 x1312)) x1832) (= (< 1 x814) x1914) (= (x1231 x1950) x814) (not x1914)) x2218))) x478))
(assert (=> (> (+ 10000 1) x369) (not (= (+ 2 x433) x369))))
(assert (not (= (+ x2247 1) 1684360437)))
(assert (not (= (+ 5 x1940) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x1436 x1176))
(assert (not (= (+ 3 x2247) (+ 2 x1765))))
(assert (x287 x1982))
(assert (=> (> (+ 10000 1) x845) (not (= x845 (+ 2 x681)))))
(assert (x1436 x293))
(assert (=> (> (+ 10000 1) x1993) (not (= x1993 (x2168 1)))))
(assert (not (= (x1912 x558 2) (+ 4 x2247))))
(assert (x1436 x1484))
(assert (not (= (x1912 x558 2) (+ x2247 1))))
(assert (x1436 x851))
(assert (x951 x1916))
(assert (x1436 x1766))
(assert (= (and x1133 (not x1319)) x324))
(assert (x1436 x2186))
(assert (= (x982 x854) (ite (= x2079 x854) x1290 (x712 x854))))
(assert (x1436 x801))
(assert (= (and x2133 (not x2207)) x2128))
(assert (not (= (x1912 x64 2) (+ 1 x355))))
(assert (= (=> (and (= (> x2125 18446744073709551615) x1105) (= (x1231 x1256) x2125) (= x1256 (x1303 x2001))) (and (=> x1105 x1700) (=> (and (= (x1998 (+ x549 32)) x8) (not x1105) (= (x1998 (+ x1485 x8)) x424) (= (= x2125 0) x41) (= x549 (uninterp_mod (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or x41 (and (not x41) (= (x1998 (+ 192 x1312)) x1633) (= (uninterp_mod (* 32 x2125) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2148)))) x325))) x1409))
(assert (not (= (+ 1 x355) 4294967296)))
(assert (=> (> (+ 10000 1) x857) (not (= x857 (+ 4 x2247)))))
(assert (x1047 x1218 x639))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1912 x392 3))))
(assert (=> (> (+ 10000 1) x1916) (not (= x1916 (+ 2 x2247)))))
(assert (= (x780 x1148) 0))
(assert (=> (< (- x845 1) 10000) (not (= x845 (x2168 1)))))
(assert (not (= 2743638299 (+ x2247 2))))
(assert (= (and x107 (not x1038)) x1474))
(assert (=> (< (- x932 1) 10000) (not (= x932 (+ 5 x1940)))))
(assert (x1436 x1961))
(assert (=> (< (- x1033 1) 10000) (not (= x1033 (x2168 1)))))
(assert (x1436 x2193))
(assert (x1436 x1614))
(assert (=> (> (+ 10000 1) x369) (not (= (+ x2247 2) x369))))
(assert (x1436 x1233))
(assert (not (= (+ x2247 5) 4294967296)))
(assert (=> (> (+ 10000 1) x91) (not (= x91 (+ x1940 5)))))
(assert (x1436 x2210))
(assert (= x1793 x1796))
(assert (=> (> (+ 10000 1) x392) (not (= (+ 3 x1940) x392))))
(assert (x1436 x531))
(assert (not (= (x1912 x392 3) 274184521717934524641157099916833587231)))
(assert (= x1656 (and x2212 (not x487))))
(assert (x1436 x841))
(assert (= (and (not x1174) x1550) x429))
(assert (= (and (not x1679) x1020) x571))
(assert (not (= (+ 3 x1940) 1461501637330902918203684832716283019655932542975)))
(assert (=> (< (- x1536 1) 10000) (not (= (+ x1940 5) x1536))))
(assert (=> (> (+ 10000 1) x1916) (not (= (x2168 1) x1916))))
(assert (x1436 x208))
(assert (= (ite (= x1206 x2008) 274184521717934524641157099916833587231 (x69 x1206)) (x331 x1206)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x1765 2))))
(assert (= x878 (and (not x1310) x90)))
(assert (x1436 x280))
(assert (= (=> (and (= x733 (x1303 x2001)) (= (x1231 x733) x603) (= (< 0 x603) x1809)) (and (=> (and (not x1809) (= x486 x379)) x1107) (=> x1809 x767))) x2222))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1912 x558 2))))
(assert (not (= (x1912 x48 3) 2)))
(assert (not (= (+ 4 x2247) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 2540496021 (+ x2247 1))))
(assert (=> (> (+ 10000 1) x91) (not (= x91 (x1912 x238 2)))))
(assert (x951 x200))
(assert (= x1220 (and x16 x1885)))
(assert (not (= 18446744073709551615 (x1912 x392 3))))
(assert (x1436 x557))
(assert (x1436 x1318))
(assert (not (= (x1912 x238 2) (+ 1 x433))))
(assert (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 (+ 5 x2247))))
(assert (= (=> (and (= (= x459 x735) x2273) (= x459 (x1876 1461501637330902918203684832716283019655932542975 x735)) (= (x414 x424) x735)) (and (=> x2273 x1660) (=> (not x2273) x1700))) x1599))
(assert (not (= (x1912 x558 2) 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (x1436 x986))
(assert (=> (> (+ 10000 1) x816) (not (= x816 (+ x2247 3)))))
(assert (x1436 x1653))
(assert (=> (< (- x1916 1) 10000) (not (= (+ x433 2) x1916))))
(assert (not (= (x2168 1) (+ 1 x433))))
(assert (not (= (x1912 x238 2) 1)))
(assert (= (=> (and (= (x1998 (+ 192 x1312)) x1201) (= x2149 (x453 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1176))) (= x1176 (x2054 x1201)) (= (> 0 x2149) x1972)) (and (=> x1972 x1700) (=> (and (= x407 (x1008 x1485)) (= x1567 x841) (= x1176 x841) (= (< 1 x407) x1930) (not x1972) (not x1930)) x1917))) x514))
(assert (= x1238 (and x1204 (not x2279))))
(assert (x1436 x1579))
(assert (not (= 2540496021 (+ 5 x1940))))
(assert (x1436 x2030))
(assert (not (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (+ x1765 5))))
(assert (= (=> (= x1483 (= x2134 0)) (and (=> (not x1483) x125) (=> x1483 x1700))) x1224))
(assert (= x874 (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x867)) x1651) (= x38 (ite (not x2266) 1 0)) (= x1389 (x1876 x38 x1184)) (= x322 (x1138 x436)) (= (= 0 x867) x2266) (= x1184 (ite (< x1651 x322) 1 0)) (= (= x1389 0) x584)) (and (=> x584 x1571) (=> (not x584) x1700)))))
(assert (=> (> (+ 10000 1) x932) (not (= x932 (+ 2 x433)))))
(assert (not (= 2 (+ x1940 3))))
(assert (not (= (+ 2 x681) 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (x287 x1570))
(assert (= (=> (and (= x1578 (< 0 x931)) (= x931 (x1231 x522)) (= (x1943 x74) x430)) (and (=> x1578 x189) (=> (not x1578) x1700))) x2017))
(assert (x1047 x1535 x910))
(assert (not (= 1684360437 (x1912 x558 2))))
(assert (x1047 x47 x646))
(assert (x287 x960))
(check-sat)
